source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208004997
@global_var_1001b884.3 = global i32 0
@global_var_1001b894.4 = local_unnamed_addr global i32* @global_var_1001b884.3
@global_var_1001ba70.6 = global i32 0
@global_var_10000314.7 = constant i32 1207993929
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001b9fc.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_1001ba00.14 = local_unnamed_addr global i32 0
@global_var_10000f54.15 = constant [3 x i8] c"8~\00"
@global_var_10000f64.16 = constant [3 x i8] c"8~\00"
@global_var_10000f74.17 = constant [3 x i8] c"8~\00"
@global_var_100016f0.18 = constant i32 939524096
@global_var_10001c14.19 = constant [3 x i8] c"8`\00"
@global_var_1000225c.20 = constant [3 x i8] c"8`\00"
@global_var_10002f10.21 = constant i32 939524104
@global_var_10002f40.22 = constant i32 939524096
@global_var_10003240.23 = constant i32 939524096
@global_var_10003f14.24 = constant [3 x i8] c"8`\00"
@global_var_10004004.25 = constant [3 x i8] c"9!\00"
@global_var_1001ba0c.26 = local_unnamed_addr global i32 0
@global_var_100045c8.27 = constant [3 x i8] c"8`\00"
@global_var_100045d0.28 = constant [3 x i8] c"8`\00"
@global_var_100045d8.29 = constant [3 x i8] c"8`\00"
@global_var_100046d8.30 = constant [3 x i8] c"9@\00"
@global_var_1000b2b4.31 = constant i32 788529152
@global_var_10004a20.32 = constant [3 x i8] c"8`\00"
@global_var_10004a28.33 = constant [3 x i8] c"8`\00"
@global_var_10004a30.34 = constant [3 x i8] c"8`\00"
@global_var_10004a38.35 = constant [3 x i8] c"8`\00"
@global_var_10004aa4.36 = constant [3 x i8] c"8`\00"
@global_var_10004aac.37 = constant [3 x i8] c"8`\00"
@global_var_10004ab4.38 = constant [3 x i8] c"8`\00"
@global_var_10004bdc.39 = constant i32 939524119
@global_var_10004c18.40 = constant [3 x i8] c"8`\00"
@global_var_10004c20.41 = constant i32 939524118
@global_var_10004c5c.42 = constant [3 x i8] c"8`\00"
@global_var_10004c68.43 = constant i32 939572197
@global_var_10004cac.44 = constant i32 939526087
@global_var_10004ce8.45 = constant [3 x i8] c"8`\00"
@global_var_1001ba04.46 = local_unnamed_addr global i32 0
@global_var_1001ba08.47 = local_unnamed_addr global i32 0
@global_var_10004d1c.48 = constant [3 x i8] c"8`\00"
@global_var_10004d98.49 = constant [3 x i8] c"8`\00"
@global_var_10004da0.50 = constant [3 x i8] c"8`\00"
@global_var_10004e04.51 = constant i32 1207975885
@global_var_10004ea0.52 = constant [3 x i8] c"8`\00"
@global_var_10004f30.53 = constant [3 x i8] c"8`\00"
@global_var_10004f38.54 = constant [3 x i8] c"8`\00"
@global_var_10004fa8.55 = constant [3 x i8] c"8`\00"
@global_var_10004fb0.56 = constant i32 1207974245
@global_var_10005060.57 = constant [3 x i8] c"8`\00"
@global_var_10005068.58 = constant [3 x i8] c"8`\00"
@global_var_10005190.59 = constant [3 x i8] c"8`\00"
@global_var_10005198.60 = constant [3 x i8] c"8`\00"
@global_var_100051d0.61 = constant [3 x i8] c"8`\00"
@global_var_10005200.62 = constant [3 x i8] c"8`\00"
@global_var_10005208.63 = constant [3 x i8] c"8`\00"
@global_var_1001b9e0.64 = local_unnamed_addr global i32 268469192
@global_var_1001b9d8.65 = local_unnamed_addr global i32 -1
@global_var_100053d0.67 = constant [3 x i8] c"8`\00"
@global_var_1001bad8.68 = global i32 0
@global_var_1000b2b8.69 = constant [15 x i8] c"145.249.107.46\00"
@global_var_1001badc.70 = local_unnamed_addr global i32 0
@global_var_1001bada.71 = local_unnamed_addr global i32 0
@global_var_1001ba10.72 = local_unnamed_addr global i32 0
@global_var_100054d8.73 = constant [3 x i8] c"8`\00"
@global_var_10005534.74 = constant [3 x i8] c"8`\00"
@global_var_1000556c.75 = constant [3 x i8] c"8`\00"
@global_var_10005574.76 = constant [3 x i8] c"8`\00"
@global_var_10005630.77 = constant i32 1207971225
@global_var_1000566c.78 = constant i32 1207961353
@global_var_10005688.79 = constant [3 x i8] c";a\00"
@global_var_100056ec.80 = constant i32 1207961145
@global_var_10005740.81 = constant [3 x i8] c"8`\00"
@global_var_1000b2c8.82 = constant i32 167772160
@global_var_10005778.83 = constant [3 x i8] c"8`\00"
@global_var_1000578c.84 = constant i32 1207972161
@global_var_1000582c.85 = constant [3 x i8] c":`\00"
@global_var_1000583c.86 = constant [3 x i8] c"8`\00"
@global_var_10005844.87 = constant [3 x i8] c"8`\00"
@global_var_1001b9dc.88 = local_unnamed_addr global i32 -1
@global_var_10005a04.90 = constant i32 939589631
@global_var_10005abc.91 = constant i32 939589631
@global_var_10005b90.92 = constant i32 939589631
@global_var_10005b9c.93 = constant i32 1006685388
@global_var_10005bd8.94 = constant [3 x i8] c"|q\00"
@global_var_1000b2cc.95 = constant i32 1
@global_var_10005c80.96 = constant i32 939589631
@global_var_1001ba94.97 = local_unnamed_addr global i32 0
@global_var_1001ba88.98 = local_unnamed_addr global i32 0
@global_var_1001ba90.99 = local_unnamed_addr global i32 0
@global_var_1001ba8c.100 = local_unnamed_addr global i32 0
@global_var_1001ba24.101 = local_unnamed_addr global i32 0
@global_var_1001ba18.102 = local_unnamed_addr global i32 0
@global_var_1001ba1c.103 = local_unnamed_addr global i32 0
@global_var_1001ba30.105 = local_unnamed_addr global i32 0
@global_var_10006384.106 = constant [3 x i8] c"8`\00"
@global_var_100063a0.107 = constant i32 939524096
@global_var_1001ba28.108 = local_unnamed_addr global i32 0
@global_var_1001ba2c.109 = local_unnamed_addr global i32 0
@global_var_1001ba98.110 = global i32 0
@global_var_1001baac.111 = global i32 0
@global_var_1000b35c.112 = constant i32 0
@global_var_1001ba9a.113 = local_unnamed_addr global i32 0
@global_var_1001bab8.114 = local_unnamed_addr global i32 0
@global_var_1001baa0.115 = local_unnamed_addr global i32 0
@global_var_1001baa1.116 = local_unnamed_addr global i32 0
@global_var_1001ba9c.117 = local_unnamed_addr global i32 0
@global_var_1000b358.118 = constant [5 x i8] c"&;; \00"
@global_var_1000b2f0.120 = constant [8 x i8] c"0125!8 \00"
@global_var_1001baba.121 = local_unnamed_addr global i32 0
@global_var_1000b2d4.122 = constant [5 x i8] c"5:?;\00"
@global_var_1000b2dc.123 = constant [9 x i8] c"<!: acam\00"
@global_var_1000b2e8.124 = constant [7 x i8] c" 18:1 \00"
@global_var_1000b2f8.125 = constant [9 x i8] c"$5''#;&0\00"
@global_var_1000b304.126 = constant [6 x i8] c"509=:\00"
@global_var_1000b32c.127 = constant [6 x i8] c"efg`a\00"
@global_var_1000b30c.128 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000b314.129 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000b31c.130 = constant i32 1663122969
@global_var_1000b334.131 = constant [5 x i8] c"!'1&\00"
@global_var_1000b33c.132 = constant i32 455883832
@global_var_1000b348.133 = constant i32 124138003
@global_var_1001baa4.134 = local_unnamed_addr global i32 0
@global_var_1001baa8.135 = local_unnamed_addr global i32 0
@global_var_1001baa2.136 = local_unnamed_addr global i32 0
@global_var_1001babc.137 = local_unnamed_addr global i32 0
@global_var_1001bab0.138 = local_unnamed_addr global i32 0
@global_var_10006c78.140 = constant [3 x i8] c"8`\00"
@global_var_10006c80.141 = constant i32 939524096
@global_var_1000b360.142 = constant i32 -18016
@global_var_1001bae8.162 = global i32 0
@global_var_1001b9e4.163 = local_unnamed_addr global i32 -555811921
@global_var_1000b39c.164 = constant [3 x i8] c"Qm\00"
@global_var_1001baf0.165 = local_unnamed_addr global i32 0
@global_var_1000b3a0.166 = constant [14 x i8] c"0;'9-=$z78!6T\00"
@global_var_1001baf4.167 = local_unnamed_addr global i32 0
@global_var_10007bfc.168 = constant [3 x i8] c"8`\00"
@global_var_1001baf8.169 = local_unnamed_addr global i32 0
@global_var_1001bafc.170 = local_unnamed_addr global i32 0
@global_var_10007c1c.171 = constant [3 x i8] c"8`\00"
@global_var_1001bb00.172 = local_unnamed_addr global i32 0
@global_var_1001bb04.173 = local_unnamed_addr global i32 0
@global_var_1000b3b0.174 = constant i32 1407844352
@global_var_10007c40.175 = constant [3 x i8] c"8`\00"
@global_var_1001bb08.176 = local_unnamed_addr global i32 0
@global_var_1001bb0c.177 = local_unnamed_addr global i32 0
@global_var_1000b530.178 = constant i32 271921200
@global_var_10007c68.179 = constant i32 939524125
@global_var_1001bb14.180 = local_unnamed_addr global i32 0
@global_var_1001bb10.181 = local_unnamed_addr global i32 0
@global_var_1000b3b4.182 = constant [7 x i8] c"'<188T\00"
@global_var_10007c90.183 = constant [3 x i8] c"8`\00"
@global_var_1001bb18.184 = local_unnamed_addr global i32 0
@global_var_1001bb1c.185 = local_unnamed_addr global i32 0
@global_var_1000b3bc.186 = constant [8 x i8] c"1:5681T\00"
@global_var_10007cb8.187 = constant [3 x i8] c"8`\00"
@global_var_1001bb20.188 = local_unnamed_addr global i32 0
@global_var_1001bb24.189 = local_unnamed_addr global i32 0
@global_var_1000b3c4.190 = constant [8 x i8] c"'-' 19T\00"
@global_var_10007ce0.191 = constant [3 x i8] c"8`\00"
@global_var_1001bb28.192 = local_unnamed_addr global i32 0
@global_var_1001bb2c.193 = local_unnamed_addr global i32 0
@global_var_1000b3cc.194 = constant [4 x i8] c"'<T\00"
@global_var_10007d04.195 = constant i32 939524099
@global_var_1001bb34.196 = local_unnamed_addr global i32 0
@global_var_1001bb30.197 = local_unnamed_addr global i32 0
@global_var_1000b3d0.198 = constant i32 2067152186
@global_var_10007d2c.199 = constant [3 x i8] c"8`\00"
@global_var_1001bb38.200 = local_unnamed_addr global i32 0
@global_var_1001bb3c.201 = local_unnamed_addr global i32 0
@global_var_1000b3e4.202 = constant i32 505087772
@global_var_10007d50.203 = constant i32 939524120
@global_var_1001bb44.204 = local_unnamed_addr global i32 0
@global_var_1001bb40.205 = local_unnamed_addr global i32 0
@global_var_1000b400.206 = constant [10 x i8] c":7;&&17 T\00"
@global_var_10007d78.207 = constant i32 939524105
@global_var_1001bb4c.208 = local_unnamed_addr global i32 0
@global_var_1001bb48.209 = local_unnamed_addr global i32 0
@global_var_1000b40c.210 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_10007da0.211 = constant [3 x i8] c"8`\00"
@global_var_1001bb50.212 = local_unnamed_addr global i32 0
@global_var_1001bb54.213 = local_unnamed_addr global i32 0
@global_var_1000b420.214 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_10007dc4.215 = constant i32 939524118
@global_var_1001bb5c.216 = local_unnamed_addr global i32 0
@global_var_1001bb58.217 = local_unnamed_addr global i32 0
@global_var_1000b438.218 = constant [8 x i8] c"{$&;7{T\00"
@global_var_10007dec.219 = constant [3 x i8] c"8`\00"
@global_var_1001bb60.220 = local_unnamed_addr global i32 0
@global_var_1001bb64.221 = local_unnamed_addr global i32 0
@global_var_1000b440.222 = constant [6 x i8] c"{1,1T\00"
@global_var_10007e10.223 = constant [3 x i8] c"8`\00"
@global_var_1001bb68.224 = local_unnamed_addr global i32 0
@global_var_1001bb6c.225 = local_unnamed_addr global i32 0
@global_var_1000b448.226 = constant [5 x i8] c"{20T\00"
@global_var_10007e34.227 = constant i32 939524100
@global_var_1001bb74.228 = local_unnamed_addr global i32 0
@global_var_1001bb70.229 = local_unnamed_addr global i32 0
@global_var_1000b450.230 = constant [7 x i8] c"{95$'T\00"
@global_var_10007e5c.231 = constant [3 x i8] c"8`\00"
@global_var_1001bb78.232 = local_unnamed_addr global i32 0
@global_var_1001bb7c.233 = local_unnamed_addr global i32 0
@global_var_1000b458.234 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10007e80.235 = constant [3 x i8] c"8`\00"
@global_var_1001bb80.236 = local_unnamed_addr global i32 0
@global_var_1001bb84.237 = local_unnamed_addr global i32 0
@global_var_1000b468.238 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_10007ea4.239 = constant [3 x i8] c"8`\00"
@global_var_1001bbe8.240 = local_unnamed_addr global i32 0
@global_var_1001bbec.241 = local_unnamed_addr global i32 0
@global_var_1000b474.242 = constant [8 x i8] c"z5:=91T\00"
@global_var_10007ec8.243 = constant [3 x i8] c"8`\00"
@global_var_1001bbf0.244 = local_unnamed_addr global i32 0
@global_var_1001bbf4.245 = local_unnamed_addr global i32 0
@global_var_1000b47c.246 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_10007eec.247 = constant [3 x i8] c"8`\00"
@global_var_1001bb88.248 = local_unnamed_addr global i32 0
@global_var_1001bb8c.249 = local_unnamed_addr global i32 0
@global_var_1000b490.250 = constant [24 x i8] c"3e567`09;ga<:$f8=1d?>2T\00"
@global_var_10007f14.251 = constant [3 x i8] c"8`\00"
@global_var_1001bb90.252 = local_unnamed_addr global i32 0
@global_var_1001bb94.253 = local_unnamed_addr global i32 0
@global_var_1000b4a8.254 = constant [9 x i8] c"5''#;&0T\00"
@global_var_10007f38.255 = constant [3 x i8] c"8`\00"
@global_var_1001bb98.256 = local_unnamed_addr global i32 0
@global_var_1001bb9c.257 = local_unnamed_addr global i32 0
@global_var_1000b550.258 = constant i32 473889
@global_var_10007f5c.259 = constant i32 939524117
@global_var_1001bba4.260 = local_unnamed_addr global i32 0
@global_var_1001bba0.261 = local_unnamed_addr global i32 0
@global_var_1000b4b4.262 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_10007f84.263 = constant i32 939524113
@global_var_1001bbac.264 = local_unnamed_addr global i32 0
@global_var_1001bba8.265 = local_unnamed_addr global i32 0
@global_var_1000b4c8.266 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10007fac.267 = constant i32 939524108
@global_var_1001bbb4.268 = local_unnamed_addr global i32 0
@global_var_1001bbb0.269 = local_unnamed_addr global i32 0
@global_var_1000b4d8.270 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_10007fd4.271 = constant [3 x i8] c"8`\00"
@global_var_1001bbb8.272 = local_unnamed_addr global i32 0
@global_var_1001bbbc.273 = local_unnamed_addr global i32 0
@global_var_1000b4e8.274 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_10007ff8.275 = constant [3 x i8] c"8`\00"
@global_var_1001bbc0.276 = local_unnamed_addr global i32 0
@global_var_1001bbc4.277 = local_unnamed_addr global i32 0
@global_var_1000b4fc.278 = constant [9 x i8] c"$662*7!E\00"
@global_var_1000801c.279 = constant [3 x i8] c"8`\00"
@global_var_1001bbc8.280 = local_unnamed_addr global i32 0
@global_var_1001bbcc.281 = local_unnamed_addr global i32 0
@global_var_1000b508.282 = constant [6 x i8] c";3=:T\00"
@global_var_10008040.283 = constant [3 x i8] c"8`\00"
@global_var_1001bbd0.284 = local_unnamed_addr global i32 0
@global_var_1001bbd4.285 = local_unnamed_addr global i32 0
@global_var_1000b510.286 = constant [7 x i8] c"1: 1&T\00"
@global_var_10008064.287 = constant [3 x i8] c"8`\00"
@global_var_1001bbd8.288 = local_unnamed_addr global i32 0
@global_var_1001bbdc.289 = local_unnamed_addr global i32 0
@global_var_1000b518.290 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_1001bbe4.291 = local_unnamed_addr global i32 0
@global_var_1001bbe0.292 = local_unnamed_addr global i32 0
@global_var_100083ec.293 = constant i32 939524096
@global_var_10008734.294 = constant i32 1207959564
@global_var_10008c10.295 = constant i32 939524118
@global_var_1000a334.296 = constant [3 x i8] c"8`\00"
@global_var_10008d68.297 = constant i32 939524105
@global_var_10008d84.298 = constant i32 939589631
@global_var_10008eac.299 = constant i32 1207959797
@global_var_10008eb0.300 = constant i32 939524108
@global_var_1001ba54.301 = global i32 0
@global_var_10009628.302 = constant i32 939524118
@global_var_100096b0.303 = constant i32 939524118
@global_var_1001bbf8.304 = global i32 0
@global_var_1001bac0.305 = global i32 0
@global_var_1001b9e8 = external global i32
@global_var_1000b674.307 = constant i32 33554944
@global_var_1001ba44.308 = local_unnamed_addr global i32 0
@global_var_1001bc78.309 = global i32 0
@global_var_1000990c.310 = constant i32 939524108
@global_var_10009960.311 = constant i32 939524108
@global_var_10009a14.312 = constant [3 x i8] c"8`\00"
@global_var_10009ac0.313 = constant [3 x i8] c"8`\00"
@global_var_10009de8.314 = constant i32 1207959640
@global_var_10009e24.315 = constant i32 1207959580
@global_var_1001b9f4.316 = local_unnamed_addr global i32* @global_var_1000b674.307
@global_var_1000a018.317 = constant i32 939524130
@global_var_1001b9a8.318 = global i32 0
@global_var_1001ba38.319 = local_unnamed_addr global i32 0
@global_var_1000a0ac.320 = constant i32 1207960053
@global_var_1000a0b0.321 = constant [3 x i8] c"= \00"
@global_var_1001b878.322 = global i32 -1
@global_var_1001ba48.323 = local_unnamed_addr global i32 0
@global_var_1001ba4c.324 = local_unnamed_addr global i32 0
@global_var_1000b568.325 = constant [10 x i8] c"/dev/null\00"
@global_var_1001ba50.326 = local_unnamed_addr global i32 0
@global_var_1001ba3c.328 = local_unnamed_addr global i32 0
@global_var_1001ba40.329 = local_unnamed_addr global i32 0
@global_var_1000a64c.330 = constant i32 939524096
@global_var_1000a8d8.332 = constant i32 939524118
@global_var_1000aad4.333 = constant i32 939589631
@global_var_1001ba68.334 = local_unnamed_addr global i32 0
@global_var_1001b9c0.335 = global i32 0
@global_var_1000aff8.336 = constant i32 939524129
@global_var_1001ba5c.337 = local_unnamed_addr global i32 0
@global_var_1000b06c.338 = constant [3 x i8] c"8`\00"
@global_var_1000b0a4.339 = constant i32 939524129
@global_var_1001ba60.340 = local_unnamed_addr global i32 0
@global_var_1001ba64.341 = local_unnamed_addr global i32 0
@global_var_1001b87c.342 = global i32 0
@global_var_1001ba6c.2 = local_unnamed_addr global i8 0
@global_var_1001b9f8.9 = local_unnamed_addr global i8 0
@global_var_1001b9f9.13 = global i8 0
@global_var_1001b898.66 = local_unnamed_addr global i8 1
@global_var_1001ba14.89 = local_unnamed_addr global i16 0
@global_var_1001ba20.104 = global i16 0
@global_var_1001baae.119 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000b228(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001ba6c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001b894.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001b894.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001b894.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001ba6c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001ba6c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268548232 to i32*), align 8
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268548232
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000a420(i32 268457340, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268481172, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_100088cc()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_100088cc()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_1000a0cc(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_1000895c()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_100089a4(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_1000a048()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001b9f8.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001b9fc.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003cc = load i32, i32* @r26, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %v0_100003d8 = load i32, i32* @r29, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003cc, i32* @r26, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003d8, i32* @r29, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_10009930(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_10009930(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_10009930(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_10008148(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_10008fa0()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_100099a0()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_100099a0()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_100099a0()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 2, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_10009338(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_100081ec(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_10009930(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268448928, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_10009aa0(i32 %v3_1000076c, i32 %v1_1000077c, i32 268448928)
  %v3_10000784 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001b9fc.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001b9f8.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_10009930(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268450172, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_10009aa0(i32 %v3_100007c0, i32 %v1_100007d0, i32 268450172)
  %v3_100007d8 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001b9fc.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001b9f8.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_10009930(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268451164, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_10009aa0(i32 %v3_10000814, i32 %v1_10000824, i32 268451164)
  %v3_1000082c = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001b9fc.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001b9f8.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_10009930(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268448104, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_10009aa0(i32 %v3_10000868, i32 %v1_10000878, i32 268448104)
  %v3_10000880 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001b9fc.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001b9f8.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_10009930(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268446660, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_10009aa0(i32 %v3_100008bc, i32 %v1_100008cc, i32 268446660)
  %v3_100008d4 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001b9fc.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001b9f8.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_10009930(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268445152, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_10009aa0(i32 %v3_10000910, i32 %v1_10000920, i32 268445152)
  %v3_10000928 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001b9fc.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001b9f8.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_10009930(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268443544, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_10009aa0(i32 %v3_10000964, i32 %v1_10000974, i32 268443544)
  %v3_1000097c = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001b9fc.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001b9f8.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_10009930(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268441936, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_10009aa0(i32 %v3_100009b8, i32 %v1_100009c8, i32 268441936)
  %v3_100009d0 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001b9fc.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001b9f8.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_10009930(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268439748, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_10009aa0(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268439748)
  %v3_10000a24 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001b9fc.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001b9f8.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_10009930(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268438276, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_10009aa0(i32 %v3_10000a60, i32 %v1_10000a70, i32 268438276)
  %v3_10000a78 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001b9f8.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001b9fc.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_10009930(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001b9fc.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268441112, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_10009aa0(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268441112)
  %v3_10000acc = load i8, i8* @global_var_1001b9f8.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001b9fc.10, align 4
  store i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001b9f8.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001b9f9.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b9f8.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10000b08 = load i32, i32* @lr, align 4
  store i32 %v0_10000b08, i32* %r0.global-to-local, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b1c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r18.global-to-local, align 4
  %v0_10000b50 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b58 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10000b60 = load i32, i32* @r30, align 4
  %v0_10000b64 = load i32, i32* @r31, align 4
  store i32 268438392, i32* @lr, align 4
  %v2_10000b74 = call i32 @function_10009930(i32 4, i32 4)
  store i32 %v2_10000b74, i32* %r19.global-to-local, align 4
  %v0_10000b7c = load i32, i32* @r28, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b7c to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 2, i32 0)
  %v0_10000b9c = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 256
  store i32 %v1_10000ba0, i32* %r14.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b9c to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 3, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  store i32 %v5_10000ba8, i32* %r24.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 4, i32 64)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bd0 = urem i32 %v5_10000bc0, 256
  store i32 %v1_10000bd0, i32* %r20.global-to-local, align 4
  %v0_10000bd4 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd4, i32* %v4_10000bd8, i32 5, i32 1)
  %v0_10000be8 = load i32, i32* @r28, align 4
  %v1_10000bec = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bec, i32* @r31, align 4
  %v0_10000bf0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bf0, i32* %r3.global-to-local, align 4
  store i32 268438520, i32* @lr, align 4
  %v4_10000bf4 = inttoptr i32 %v0_10000be8 to i32*
  %v5_10000bf4 = call i32 @function_100006a8(i32 %v0_10000bf0, i32* %v4_10000bf4, i32 6, i32 65535)
  %v0_10000bfc = load i32, i32* @r28, align 4
  store i32 %v5_10000bf4, i32* %r26.global-to-local, align 4
  %v0_10000c0c = load i32, i32* @r29, align 4
  store i32 %v0_10000c0c, i32* %r3.global-to-local, align 4
  store i32 268438548, i32* @lr, align 4
  %v4_10000c10 = inttoptr i32 %v0_10000bfc to i32*
  %v5_10000c10 = call i32 @function_100006a8(i32 %v0_10000c0c, i32* %v4_10000c10, i32 7, i32 65535)
  %v0_10000c14 = load i32, i32* @r28, align 4
  store i32 %v5_10000c10, i32* %r27.global-to-local, align 4
  %v0_10000c24 = load i32, i32* @r29, align 4
  store i32 %v0_10000c24, i32* %r3.global-to-local, align 4
  store i32 268438572, i32* @lr, align 4
  %v4_10000c28 = inttoptr i32 %v0_10000c14 to i32*
  %v5_10000c28 = call i32 @function_100006a8(i32 %v0_10000c24, i32* %v4_10000c28, i32 0, i32 512)
  %v0_10000c2c = load i32, i32* @r28, align 4
  store i32 %v5_10000c28, i32* %r15.global-to-local, align 4
  %v0_10000c3c = load i32, i32* @r29, align 4
  store i32 %v0_10000c3c, i32* %r3.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v4_10000c40 = inttoptr i32 %v0_10000c2c to i32*
  %v5_10000c40 = call i32 @function_100006a8(i32 %v0_10000c3c, i32* %v4_10000c40, i32 1, i32 1)
  %v0_10000c44 = load i32, i32* @r28, align 4
  %v1_10000c50 = urem i32 %v5_10000c40, 256
  store i32 %v1_10000c50, i32* %r21.global-to-local, align 4
  %v0_10000c54 = load i32, i32* @r29, align 4
  store i32 %v0_10000c54, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v4_10000c58 = inttoptr i32 %v0_10000c44 to i32*
  %v5_10000c58 = call i32 @function_100006a8(i32 %v0_10000c54, i32* %v4_10000c58, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000c60 = load i32, i32* @global_var_1001ba00.14, align 4
  %v0_10000c64 = load i32, i32* @r28, align 4
  store i32 %v5_10000c58, i32* %r30.global-to-local, align 4
  %v0_10000c70 = load i32, i32* @r29, align 4
  store i32 %v0_10000c70, i32* %r3.global-to-local, align 4
  store i32 268438648, i32* @lr, align 4
  %v4_10000c74 = inttoptr i32 %v0_10000c64 to i32*
  %v5_10000c74 = call i32 @function_100006a8(i32 %v0_10000c70, i32* %v4_10000c74, i32 25, i32 %v3_10000c60)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438668, i32* @lr, align 4
  %v3_10000c88 = call i32 @function_100095d4(i32 2, i32 3, i32 6)
  store i32 %v3_10000c88, i32* %r3.global-to-local, align 4
  %v3_10000c8c = icmp eq i32 %v3_10000c88, -1
  store i1 %v3_10000c8c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000c88, i32* %r23.global-to-local, align 4
  br i1 %v3_10000c8c, label %dec_label_pc_10000e30, label %dec_label_pc_10000c98

dec_label_pc_10000c98:                            ; preds = %dec_label_pc_10000b04
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10000ca4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268438708, i32* @lr, align 4
  %v4_10000cb0 = call i32 @function_10009598(i32 0, i32 3, i32 %v2_10000ca4, i32 4)
  store i32 %v4_10000cb0, i32* %r3.global-to-local, align 4
  %v3_10000cb4 = icmp eq i32 %v4_10000cb0, -1
  store i1 %v3_10000cb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000cb4, label %dec_label_pc_10000e28, label %dec_label_pc_10000cbc

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c98
  %v0_10000cbc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000cbc = icmp slt i32 %v0_10000cbc, 0
  %v3_10000cbc = icmp eq i32 %v0_10000cbc, 0
  store i1 %v1_10000cbc, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000cbc, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10000cc8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cc8 = urem i32 %v0_10000cc8, 65536
  store i32 %v1_10000cc8, i32* %r24.global-to-local, align 4
  %v0_10000ccc = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ccc = urem i32 %v0_10000ccc, 65536
  store i32 %v1_10000ccc, i32* %r16.global-to-local, align 4
  %v0_10000cd0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000cd0 = urem i32 %v0_10000cd0, 65536
  store i32 %v1_10000cd0, i32* %r17.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000cd4 = urem i32 %v0_10000cd4, 256
  store i32 %v1_10000cd4, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10000cbc, 1
  br i1 %tmp37, label %dec_label_pc_10000e90, label %dec_label_pc_10000cdc

dec_label_pc_10000cdc:                            ; preds = %dec_label_pc_10000cbc
  %v0_10000cdc = load i32, i32* @r31, align 4
  %v3_10000cdc = icmp eq i32 %v0_10000cdc, 0
  store i1 %v3_10000cdc, i1* %cr2_eq.global-to-local, align 1
  %v3_10000ce0 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000ce0, i1* %cr3_eq.global-to-local, align 1
  %v0_10000ce4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ce4 = urem i32 %v0_10000ce4, 65536
  %v0_10000cc8.not = or i32 %v0_10000cc8, -65536
  %v1_10000ce8 = xor i32 %v0_10000cc8.not, 65535
  store i32 %v1_10000ce8, i32* %r11.global-to-local, align 4
  %v1_10000cf0 = add nuw nsw i32 %v1_10000ce4, 66
  store i32 %v1_10000cf0, i32* %r0.global-to-local, align 4
  %v1_10000cf4 = add nuw nsw i32 %v1_10000ce4, 28
  store i32 %v1_10000cf4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10000ce4, 66
  %v1_10000cf8 = urem i32 %fold, 65536
  store i32 %v1_10000cf8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10000ce4, 28
  %v1_10000cfc = urem i32 %fold8, 65536
  store i32 %v1_10000cfc, i32* %r26.global-to-local, align 4
  %v1_10000d00 = urem i32 %v1_10000ce8, 65536
  store i32 %v1_10000d00, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10000ce4, 8
  %v1_10000d04 = urem i32 %fold9, 65536
  store i32 %v1_10000d04, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10000d38

dec_label_pc_10000d10:                            ; preds = %dec_label_pc_10000e04
  %v0_10000d10 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d10 = add i32 %v0_10000d10, 16
  %v2_10000d10 = inttoptr i32 %v1_10000d10 to i32*
  %v3_10000d10 = load i32, i32* %v2_10000d10, align 4
  store i32 %v3_10000d10, i32* %r0.global-to-local, align 4
  %v1_10000d14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d14 = add i32 %v1_10000d14, 16
  %v3_10000d14 = inttoptr i32 %v2_10000d14 to i32*
  store i32 %v3_10000d10, i32* %v3_10000d14, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000d18:                            ; preds = %dec_label_pc_10000e20, %dec_label_pc_10000d10
  %v3_10000d18 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d18, i32* %r9.global-to-local, align 4
  %v0_10000d1c = load i32, i32* @r28, align 4
  %v1_10000d1c = trunc i32 %v0_10000d1c to i16
  %v2_10000d1c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d1c = add i32 %v2_10000d1c, 4
  %v4_10000d1c = inttoptr i32 %v3_10000d1c to i16*
  store i16 %v1_10000d1c, i16* %v4_10000d1c, align 2
  %v0_10000d20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d20 = add i32 %v0_10000d20, 1
  store i32 %v1_10000d20, i32* %r31.global-to-local, align 4
  %v0_10000d24 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000d24 = trunc i32 %v0_10000d24 to i16
  %v2_10000d24 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d24 = inttoptr i32 %v2_10000d24 to i16*
  store i16 %v1_10000d24, i16* %v3_10000d24, align 2
  %v0_10000d28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d28 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d28 = icmp slt i32 %v0_10000d28, %v1_10000d28
  %v4_10000d28 = icmp eq i32 %v0_10000d28, %v1_10000d28
  store i1 %v4_10000d28, i1* %cr7_eq.global-to-local, align 1
  %v0_10000d2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10000d2c = trunc i32 %v0_10000d2c to i16
  %v2_10000d2c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d2c = add i32 %v2_10000d2c, 2
  %v4_10000d2c = inttoptr i32 %v3_10000d2c to i16*
  store i16 %v1_10000d2c, i16* %v4_10000d2c, align 2
  %v0_10000d30 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000d30, i32* %stack_var_-104, align 4
  br i1 %v2_10000d28, label %dec_label_pc_10000d38, label %dec_label_pc_10000e94

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000cdc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268438852, i32* @lr, align 4
  %v2_10000d40 = call i32 @function_10009930(i32 1510, i32 4)
  store i32 %v2_10000d40, i32* %r3.global-to-local, align 4
  %v3_10000d44 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d44, i32* %r9.global-to-local, align 4
  %v0_10000d48 = load i32, i32* @r31, align 4
  %v1_10000d48 = mul i32 %v0_10000d48, 4
  store i32 %v1_10000d48, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r19.global-to-local, align 4
  %v3_10000d50 = add i32 %v1_10000d50, %v1_10000d48
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d40, i32* %v4_10000d50, align 4
  %v0_10000d54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d54 = mul i32 %v0_10000d54, 4
  store i32 %v1_10000d54, i32* %r9.global-to-local, align 4
  %v1_10000d58 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000d58 = add i32 %v1_10000d58, %v1_10000d54
  %v3_10000d58 = inttoptr i32 %v2_10000d58 to i32*
  %v4_10000d58 = load i32, i32* %v3_10000d58, align 4
  store i32 %v4_10000d58, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10000d60 = inttoptr i32 %v4_10000d58 to i32*
  %v2_10000d60 = load i32, i32* %v1_10000d60, align 4
  store i32 %v2_10000d60, i32* %r0.global-to-local, align 4
  %v1_10000d64 = add i32 %v4_10000d58, 38
  store i32 %v1_10000d64, i32* %r30.global-to-local, align 4
  %v0_10000d68 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000d68 = trunc i32 %v0_10000d68 to i8
  %v3_10000d68 = add i32 %v4_10000d58, 8
  %v4_10000d68 = inttoptr i32 %v3_10000d68 to i8*
  store i8 %v1_10000d68, i8* %v4_10000d68, align 1
  %v0_10000d6c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d6c = add i32 %v0_10000d6c, 58
  store i32 %v1_10000d6c, i32* %r29.global-to-local, align 4
  %v1_10000d70 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000d70, i32* %r0.global-to-local, align 4
  %v0_10000d74 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d74 = trunc i32 %v0_10000d74 to i16
  %v2_10000d74 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d74 = add i32 %v2_10000d74, 4
  %v4_10000d74 = inttoptr i32 %v3_10000d74 to i16*
  store i16 %v1_10000d74, i16* %v4_10000d74, align 2
  %v1_10000d78 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000d78, i32* %r0.global-to-local, align 4
  %v0_10000d7c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d7c = add i32 %v0_10000d7c, 20
  store i32 %v1_10000d7c, i32* %r9.global-to-local, align 4
  %v2_10000d80 = inttoptr i32 %v0_10000d7c to i32*
  store i32 %v1_10000d78, i32* %v2_10000d80, align 4
  %v0_10000d84 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d84 = add i32 %v0_10000d84, 24
  store i32 %v1_10000d84, i32* %r11.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000d88 = trunc i32 %v0_10000d88 to i8
  %v3_10000d88 = add i32 %v0_10000d84, 1
  %v4_10000d88 = inttoptr i32 %v3_10000d88 to i8*
  store i8 %v1_10000d88, i8* %v4_10000d88, align 1
  %v0_10000d8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10000d8c = trunc i32 %v0_10000d8c to i16
  %v2_10000d8c = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d8c = add i32 %v2_10000d8c, 2
  %v4_10000d8c = inttoptr i32 %v3_10000d8c to i16*
  store i16 %v1_10000d8c, i16* %v4_10000d8c, align 2
  %v0_10000d90 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000d90, label %dec_label_pc_10000d9c, label %dec_label_pc_10000d94

dec_label_pc_10000d94:                            ; preds = %dec_label_pc_10000d38
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10000d98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d98 = add i32 %v2_10000d98, 6
  %v4_10000d98 = inttoptr i32 %v3_10000d98 to i16*
  store i16 16384, i16* %v4_10000d98, align 2
  br label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d38, %dec_label_pc_10000d94
  %v2_10000da0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000da0 = add i32 %v2_10000da0, 9
  %v4_10000da0 = inttoptr i32 %v3_10000da0 to i8*
  store i8 47, i8* %v4_10000da0, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10000da8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000da8 = add i32 %v2_10000da8, 2
  %v4_10000da8 = inttoptr i32 %v3_10000da8 to i16*
  store i16 25944, i16* %v4_10000da8, align 2
  %v2_10000db0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10000db0 = add i32 %v2_10000db0, 12
  %v4_10000db0 = inttoptr i32 %v3_10000db0 to i16*
  store i16 2048, i16* %v4_10000db0, align 2
  %v3_10000db4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10000c74, i32* %r11.global-to-local, align 4
  %v1_10000dbc = mul i32 %v3_10000db4, 24
  store i32 %v1_10000dbc, i32* %r9.global-to-local, align 4
  %v0_10000dc0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000dc0 = add i32 %v0_10000dc0, 38
  %v2_10000dc0 = inttoptr i32 %v1_10000dc0 to i32*
  %v3_10000dc0 = load i32, i32* %v2_10000dc0, align 4
  store i32 %v3_10000dc0, i32* %r0.global-to-local, align 4
  %v2_10000dc4 = add i32 %v0_10000dc0, 12
  %v3_10000dc4 = inttoptr i32 %v2_10000dc4 to i32*
  store i32 %v5_10000c74, i32* %v3_10000dc4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10000dcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dcc = load i32, i32* %r25.global-to-local, align 4
  %v2_10000dcc = add i32 %v1_10000dcc, %v0_10000dcc
  store i32 %v2_10000dcc, i32* %r9.global-to-local, align 4
  %v1_10000dd0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000dd0, i32* %r0.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dd4 = add i32 %v0_10000dd4, 16
  %v2_10000dd4 = inttoptr i32 %v1_10000dd4 to i32*
  %v3_10000dd4 = load i32, i32* %v2_10000dd4, align 4
  store i32 %v3_10000dd4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10000ddc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000ddc, i32* %r0.global-to-local, align 4
  %v1_10000de0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de0 = add i32 %v1_10000de0, 38
  %v3_10000de0 = inttoptr i32 %v2_10000de0 to i32*
  store i32 %v1_10000ddc, i32* %v3_10000de0, align 4
  %v0_10000de4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000de4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de4 = add i32 %v1_10000de4, 16
  %v3_10000de4 = inttoptr i32 %v2_10000de4 to i32*
  store i32 %v0_10000de4, i32* %v3_10000de4, align 4
  %v0_10000de8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000de8 = trunc i32 %v0_10000de8 to i8
  %v2_10000de8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000de8 = add i32 %v2_10000de8, 1
  %v4_10000de8 = inttoptr i32 %v3_10000de8 to i8*
  store i8 %v1_10000de8, i8* %v4_10000de8, align 1
  %v0_10000dec = load i32, i32* %r26.global-to-local, align 4
  %v1_10000dec = trunc i32 %v0_10000dec to i16
  %v2_10000dec = load i32, i32* %r30.global-to-local, align 4
  %v3_10000dec = add i32 %v2_10000dec, 2
  %v4_10000dec = inttoptr i32 %v3_10000dec to i16*
  store i16 %v1_10000dec, i16* %v4_10000dec, align 2
  %v0_10000df0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000df0 = trunc i32 %v0_10000df0 to i16
  %v2_10000df0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df0 = add i32 %v2_10000df0, 4
  %v4_10000df0 = inttoptr i32 %v3_10000df0 to i16*
  store i16 %v1_10000df0, i16* %v4_10000df0, align 2
  %v0_10000df4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000df4 = trunc i32 %v0_10000df4 to i8
  %v2_10000df4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df4 = add i32 %v2_10000df4, 8
  %v4_10000df4 = inttoptr i32 %v3_10000df4 to i8*
  store i8 %v1_10000df4, i8* %v4_10000df4, align 1
  %v0_10000df8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000df8, label %dec_label_pc_10000e04, label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000d9c
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10000e00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e00 = add i32 %v2_10000e00, 6
  %v4_10000e00 = inttoptr i32 %v3_10000e00 to i16*
  store i16 16384, i16* %v4_10000e00, align 2
  br label %dec_label_pc_10000e04

dec_label_pc_10000e04:                            ; preds = %dec_label_pc_10000d9c, %dec_label_pc_10000dfc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10000e08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e08 = add i32 %v2_10000e08, 9
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 17, i8* %v4_10000e08, align 1
  %v0_10000e0c = call i32 @function_10005d24()
  store i32 %v0_10000e0c, i32* %r3.global-to-local, align 4
  %v1_10000e10 = add i32 %v0_10000e0c, -1024
  store i32 %v1_10000e10, i32* %r0.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, 12
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  store i32 %v0_10000e0c, i32* %v3_10000e14, align 4
  %v0_10000e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000e18 = sub i32 -1, %v0_10000e18
  store i32 %v1_10000e18, i32* %r0.global-to-local, align 4
  %v0_10000e1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000e1c, label %dec_label_pc_10000e20, label %dec_label_pc_10000d10

dec_label_pc_10000e20:                            ; preds = %dec_label_pc_10000e04
  %v1_10000e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e20 = add i32 %v1_10000e20, 16
  %v3_10000e20 = inttoptr i32 %v2_10000e20 to i32*
  store i32 %v1_10000e18, i32* %v3_10000e20, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000e28:                            ; preds = %dec_label_pc_10000c98
  %v0_10000e28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* @lr, align 4
  %v0_10000e2c = call i32 @function_10008884()
  store i32 %v0_10000e2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000e30

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000e28
  store i32 %v0_10000b1c, i32* %r0.global-to-local, align 4
  %v1_10000e44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10000b0c)
  store i32 %v0_10000b50, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b58, i32* %r29.global-to-local, align 4
  store i32 %v0_10000b60, i32* %r30.global-to-local, align 4
  store i32 %v0_10000b64, i32* %r31.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000e8c

dec_label_pc_10000e90:                            ; preds = %dec_label_pc_10000cbc
  %v3_10000e90 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000e90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10000e94

dec_label_pc_10000e94:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000e90
  store i32 %v5_10000c74, i32* %r0.global-to-local, align 4
  %v0_10000e98 = load i32, i32* %r21.global-to-local, align 4
  %v3_10000e98 = icmp eq i32 %v0_10000e98, 0
  store i1 %v3_10000e98, i1* %cr2_eq.global-to-local, align 1
  %v2_10000e9c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10000e9c, i32* %r14.global-to-local, align 4
  %v0_10000ea0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ea0 = add i32 %v0_10000ea0, 8
  store i32 %v1_10000ea0, i32* %r21.global-to-local, align 4
  %v3_10000ea4 = icmp eq i32 %v5_10000c74, -1
  store i1 %v3_10000ea4, i1* %cr7_eq.global-to-local, align 1
  %v1_10000ea8 = add i32 %v0_10000ea0, 66
  store i32 %v1_10000ea8, i32* %r22.global-to-local, align 4
  %v0_10000eac = call i32 @__asm_mfcr()
  store i32 %v0_10000eac, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = mul i32 %v0_10000eac, 268435456
  store i32 %v1_10000eb0, i32* %r20.global-to-local, align 4
  %v2_10000f44 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10000f68 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10000f78 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10000eb4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000eb4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000eb4.outer

dec_label_pc_10000eb4.outer:                      ; preds = %dec_label_pc_10001018, %dec_label_pc_10000e94
  %v1_10000eb4.ph = phi i1 [ %v1_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v1_10001018, %dec_label_pc_10001018 ]
  %v0_10000eb4.ph = phi i1 [ %v0_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v0_10001018, %dec_label_pc_10001018 ]
  %v2_10000eb4 = or i1 %v1_10000eb4.ph, %v0_10000eb4.ph
  br label %dec_label_pc_10000eb4

dec_label_pc_10000eb4:                            ; preds = %dec_label_pc_10000eb4.outer, %dec_label_pc_10000eb4
  br i1 %v2_10000eb4, label %dec_label_pc_10000eb4, label %dec_label_pc_10000eb8

dec_label_pc_10000eb8:                            ; preds = %dec_label_pc_10000eb4, %dec_label_pc_10001018
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000ec8

dec_label_pc_10000ec8:                            ; preds = %dec_label_pc_10000f88, %dec_label_pc_10000eb8
  %v0_10000ec8 = phi i32 [ %v1_10001008, %dec_label_pc_10000f88 ], [ 0, %dec_label_pc_10000eb8 ]
  %v1_10000ec8 = mul i32 %v0_10000ec8, 24
  store i32 %v1_10000ec8, i32* %r0.global-to-local, align 4
  %v1_10000ecc = mul i32 %v0_10000ec8, 4
  store i32 %v1_10000ecc, i32* %r11.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000ed0 = add i32 %v1_10000ed0, %v1_10000ecc
  %v3_10000ed0 = inttoptr i32 %v2_10000ed0 to i32*
  %v4_10000ed0 = load i32, i32* %v3_10000ed0, align 4
  store i32 %v4_10000ed0, i32* %r28.global-to-local, align 4
  %v1_10000ed4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000ed4 = add i32 %v1_10000ed4, %v1_10000ec8
  %v1_10000ed8 = add i32 %v2_10000ed4, 20
  %v2_10000ed8 = inttoptr i32 %v1_10000ed8 to i8*
  %v3_10000ed8 = load i8, i8* %v2_10000ed8, align 1
  %v4_10000ed8 = zext i8 %v3_10000ed8 to i32
  store i32 %v4_10000ed8, i32* %r9.global-to-local, align 4
  %v1_10000edc = add i32 %v4_10000ed0, 24
  store i32 %v1_10000edc, i32* @r30, align 4
  %v1_10000ee0 = add i32 %v4_10000ed0, 38
  store i32 %v1_10000ee0, i32* @r31, align 4
  %v1_10000ee4 = add i32 %v4_10000ed0, 58
  store i32 %v1_10000ee4, i32* %r27.global-to-local, align 4
  %v3_10000ee8 = icmp eq i8 %v3_10000ed8, 31
  store i1 %v3_10000ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10000ed8, 32
  br i1 %tmp39, label %dec_label_pc_10001020, label %dec_label_pc_10000ef0

dec_label_pc_10000ef0:                            ; preds = %dec_label_pc_10000ec8
  %v0_10000ef0 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000ef0 = mul i32 %v0_10000ef0, 16
  %v2_10000ef0 = udiv i32 %v0_10000ef0, 268435456
  %v3_10000ef0 = or i32 %v2_10000ef0, %v1_10000ef0
  store i32 %v3_10000ef0, i32* %r20.global-to-local, align 4
  %v1_10000ef4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10000ef0)
  %v1_10000ef8 = mul nuw i32 %v2_10000ef0, 268435456
  %v2_10000ef8 = urem i32 %v0_10000ef0, 268435456
  %v3_10000ef8 = or i32 %v1_10000ef8, %v2_10000ef8
  store i32 %v3_10000ef8, i32* %r20.global-to-local, align 4
  %v0_10000efc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10000efc, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 65535, i32* @r29, align 4
  %v0_10000f08 = load i32, i32* %r24.global-to-local, align 4
  %v4_10000f08 = icmp eq i32 %v0_10000f08, 65535
  store i1 %v4_10000f08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f08, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_10000f10:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v1_10000f10 = phi i32 [ %v1_10001064, %dec_label_pc_10001054 ], [ 65535, %dec_label_pc_10000f00 ]
  %v0_10000f10 = load i32, i32* %r16.global-to-local, align 4
  %v4_10000f10 = icmp eq i32 %v0_10000f10, %v1_10000f10
  store i1 %v4_10000f10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f10, label %dec_label_pc_1000108c, label %dec_label_pc_10000f18

dec_label_pc_10000f18:                            ; preds = %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge, %dec_label_pc_10000f10
  %v1_10000f18 = phi i32 [ %v1_10000f18.pre, %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge ], [ %v1_10000f10, %dec_label_pc_10000f10 ]
  %v0_10000f18 = load i32, i32* %r17.global-to-local, align 4
  %v4_10000f18 = icmp eq i32 %v0_10000f18, %v1_10000f18
  store i1 %v4_10000f18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f18, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_10000f20:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_10000f20 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000f20, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_10000f24:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_10000f24 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000f24 = add i32 %v0_10000f24, 16
  %v2_10000f24 = inttoptr i32 %v1_10000f24 to i32*
  %v3_10000f24 = load i32, i32* %v2_10000f24, align 4
  store i32 %v3_10000f24, i32* %r0.global-to-local, align 4
  %v1_10000f28 = load i32, i32* @r31, align 4
  %v2_10000f28 = add i32 %v1_10000f28, 16
  %v3_10000f28 = inttoptr i32 %v2_10000f28 to i32*
  store i32 %v3_10000f24, i32* %v3_10000f28, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_10000f2c:                            ; preds = %dec_label_pc_100010a8, %dec_label_pc_10000f24
  %v0_10000f2c = call i32 @function_10005d24()
  store i32 %v0_10000f2c, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f2c, i32* %stack_var_-100, align 4
  %v0_10000f34 = call i32 @function_10005d24()
  store i32 %v0_10000f34, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f34, i32* %stack_var_-96, align 4
  %v0_10000f3c = call i32 @function_10005d24()
  store i32 %v0_10000f3c, i32* %stack_var_-92, align 4
  %v0_10000f48 = load i32, i32* @r30, align 4
  store i32 %v0_10000f48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f54.15 to i32), i32* @lr, align 4
  %v3_10000f50 = call i32 @function_10008148(i32 %v0_10000f48, i32 %v2_10000f44, i32 4)
  %v0_10000f54 = load i32, i32* @r30, align 4
  %v1_10000f54 = add i32 %v0_10000f54, 6
  store i32 %v1_10000f54, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f64.16 to i32), i32* @lr, align 4
  %v3_10000f60 = call i32 @function_10008148(i32 %v1_10000f54, i32 %v2_10000e9c, i32 4)
  %v0_10000f64 = load i32, i32* @r30, align 4
  %v1_10000f64 = add i32 %v0_10000f64, 4
  store i32 %v1_10000f64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f74.17 to i32), i32* @lr, align 4
  %v3_10000f70 = call i32 @function_10008148(i32 %v1_10000f64, i32 %v2_10000f68, i32 2)
  %v0_10000f74 = load i32, i32* @r30, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 10
  store i32 %v1_10000f74, i32* %r3.global-to-local, align 4
  store i32 268439428, i32* @lr, align 4
  %v3_10000f80 = call i32 @function_10008148(i32 %v1_10000f74, i32 %v2_10000f78, i32 2)
  store i32 %v3_10000f80, i32* %r3.global-to-local, align 4
  %v0_10000f84 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000f84, label %dec_label_pc_10000f88, label %dec_label_pc_100010b4

dec_label_pc_10000f88:                            ; preds = %dec_label_pc_10000f2c, %dec_label_pc_100010b4
  %v0_10000f88 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000f88 = trunc i32 %v0_10000f88 to i16
  %v2_10000f88 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000f88 = add i32 %v2_10000f88, 10
  %v4_10000f88 = inttoptr i32 %v3_10000f88 to i16*
  store i16 %v1_10000f88, i16* %v4_10000f88, align 2
  %v0_10000f90 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000f90, i32* @r3, align 4
  %v2_10000f94 = call i32 @function_100043cc(i32 %v0_10000f90, i32 20)
  %v3_10000f94 = trunc i32 %v2_10000f94 to i16
  %v4_10000f9c = add i32 %v0_10000f90, 10
  %v5_10000f9c = inttoptr i32 %v4_10000f9c to i16*
  store i16 %v3_10000f94, i16* %v5_10000f9c, align 2
  %v0_10000fa0 = load i32, i32* @r31, align 4
  store i32 %v0_10000fa0, i32* @r3, align 4
  %v0_10000fa4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fa4 = trunc i32 %v0_10000fa4 to i16
  %v3_10000fa4 = add i32 %v0_10000fa0, 10
  %v4_10000fa4 = inttoptr i32 %v3_10000fa4 to i16*
  store i16 %v1_10000fa4, i16* %v4_10000fa4, align 2
  %v2_10000fa8 = call i32 @function_100043cc(i32 %v0_10000fa0, i32 20)
  %v3_10000fa8 = trunc i32 %v2_10000fa8 to i16
  %v0_10000fac = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000fac, i32* @r4, align 4
  %v3_10000fb0 = load i32, i32* @r31, align 4
  %v4_10000fb0 = add i32 %v3_10000fb0, 10
  %v5_10000fb0 = inttoptr i32 %v4_10000fb0 to i16*
  store i16 %v3_10000fa8, i16* %v5_10000fb0, align 2
  %v0_10000fb4 = load i32, i32* %r21.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fb8 = trunc i32 %v0_10000fb8 to i16
  %v2_10000fb8 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000fb8 = add i32 %v2_10000fb8, 6
  %v4_10000fb8 = inttoptr i32 %v3_10000fb8 to i16*
  store i16 %v1_10000fb8, i16* %v4_10000fb8, align 2
  %v0_10000fbc = load i32, i32* @r31, align 4
  store i32 %v0_10000fbc, i32* %r3.global-to-local, align 4
  %v0_10000fc0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000fc0 = add i32 %v0_10000fc0, 4
  %v2_10000fc0 = inttoptr i32 %v1_10000fc0 to i16*
  %v3_10000fc0 = load i16, i16* %v2_10000fc0, align 2
  %v4_10000fc0 = zext i16 %v3_10000fc0 to i32
  %v4_10000fc4 = call i32 @function_10004430(i32 %v0_10000fbc, i32 %v0_10000fac, i32 %v4_10000fc0, i32 %v0_10000fb4)
  %v5_10000fc4 = trunc i32 %v4_10000fc4 to i16
  store i32 %v4_10000fc4, i32* %r3.global-to-local, align 4
  %v3_10000fc8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000fc8, i32* %r0.global-to-local, align 4
  %v0_10000fcc = load i32, i32* %r28.global-to-local, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 16
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i32*
  %v3_10000fcc = load i32, i32* %v2_10000fcc, align 4
  store i32 %v3_10000fcc, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10000fd4 = mul i32 %v3_10000fc8, 24
  store i32 %v1_10000fd4, i32* %r0.global-to-local, align 4
  %v3_10000fd8 = load i32, i32* %r27.global-to-local, align 4
  %v4_10000fd8 = add i32 %v3_10000fd8, 6
  %v5_10000fd8 = inttoptr i32 %v4_10000fd8 to i16*
  store i16 %v5_10000fc4, i16* %v5_10000fd8, align 2
  %v0_10000fdc = load i32, i32* %r28.global-to-local, align 4
  %v0_10000fe0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000fe0, i32* %r3.global-to-local, align 4
  %v0_10000fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000fe4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fe4 = add i32 %v1_10000fe4, %v0_10000fe4
  %v0_10000fe8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000fe8 = trunc i32 %v0_10000fe8 to i16
  %v5_10000fe8 = inttoptr i32 %v2_10000fe4 to i16*
  store i16 %v3_10000fe8, i16* %v5_10000fe8, align 2
  %v0_10000fec = load i32, i32* %r11.global-to-local, align 4
  %v2_10000fec = add i32 %v2_10000fe4, 4
  %v3_10000fec = inttoptr i32 %v2_10000fec to i32*
  store i32 %v0_10000fec, i32* %v3_10000fec, align 4
  %v0_10000ff0 = load i32, i32* %r22.global-to-local, align 4
  %v0_10000ff4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ff4 = trunc i32 %v0_10000ff4 to i16
  %v3_10000ff4 = add i32 %v2_10000fe4, 2
  %v4_10000ff4 = inttoptr i32 %v3_10000ff4 to i16*
  store i16 %v1_10000ff4, i16* %v4_10000ff4, align 2
  store i32 268439556, i32* @lr, align 4
  %v6_10001000 = call i32 @function_10009558(i32 %v0_10000fe0, i32 %v0_10000fdc, i32 %v0_10000ff0, i32 16384, i32 %v2_10000fe4, i32 16)
  store i32 %v6_10001000, i32* %r3.global-to-local, align 4
  %v3_10001004 = load i32, i32* %stack_var_-104, align 4
  %v1_10001008 = add i32 %v3_10001004, 1
  store i32 %v1_10001008, i32* %r9.global-to-local, align 4
  %v1_1000100c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000100c = icmp slt i32 %v1_10001008, %v1_1000100c
  %v4_1000100c = icmp eq i32 %v1_10001008, %v1_1000100c
  store i1 %v4_1000100c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001008, i32* %stack_var_-104, align 4
  br i1 %v2_1000100c, label %dec_label_pc_10000ec8, label %dec_label_pc_10001018

dec_label_pc_10001018:                            ; preds = %dec_label_pc_10000f88
  %v0_10001018 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001018 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001018 = or i1 %v0_10001018, %v1_10001018
  br i1 %v2_10001018, label %dec_label_pc_10000eb4.outer, label %dec_label_pc_10000eb8

dec_label_pc_10001020:                            ; preds = %dec_label_pc_10000ec8
  %v1_10001020 = add i32 %v2_10000ed4, 16
  %v2_10001020 = inttoptr i32 %v1_10001020 to i32*
  %v3_10001020 = load i32, i32* %v2_10001020, align 4
  store i32 %v3_10001020, i32* %r29.global-to-local, align 4
  %v0_10001024 = call i32 @function_10005d24()
  store i32 %v0_10001024, i32* %r3.global-to-local, align 4
  %v3_10001028 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001028, i32* %r9.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000102c = mul i32 %v0_1000102c, 16
  %v2_1000102c = udiv i32 %v0_1000102c, 268435456
  %v3_1000102c = or i32 %v2_1000102c, %v1_1000102c
  store i32 %v3_1000102c, i32* %r20.global-to-local, align 4
  %v1_10001030 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000102c)
  %v1_10001034 = mul nuw i32 %v2_1000102c, 268435456
  %v2_10001034 = urem i32 %v0_1000102c, 268435456
  %v3_10001034 = or i32 %v1_10001034, %v2_10001034
  store i32 %v3_10001034, i32* %r20.global-to-local, align 4
  %v0_10001038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001038 = mul i32 %v0_10001038, 24
  %v1_1000103c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000103c = add i32 %v1_1000103c, %v1_10001038
  store i32 %v2_1000103c, i32* %r9.global-to-local, align 4
  %v1_10001040 = add i32 %v2_1000103c, 20
  %v2_10001040 = inttoptr i32 %v1_10001040 to i8*
  %v3_10001040 = load i8, i8* %v2_10001040, align 1
  %v4_10001040 = zext i8 %v3_10001040 to i32
  store i32 %v4_10001040, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001040, 64
  %v2_10001044 = zext i8 %tmp to i32
  %v3_10001044 = lshr i32 %v0_10001024, %v2_10001044
  store i32 %v3_10001044, i32* %r3.global-to-local, align 4
  %v0_10001048 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001048 = add i32 %v3_10001044, %v0_10001048
  store i32 %v2_10001048, i32* %r29.global-to-local, align 4
  %v1_1000104c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000104c = add i32 %v1_1000104c, 16
  %v3_1000104c = inttoptr i32 %v2_1000104c to i32*
  store i32 %v2_10001048, i32* %v3_1000104c, align 4
  %v0_10001050 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001050, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001058 = call i32 @function_10005d24()
  store i32 %v0_10001058, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001060 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001060 = add i32 %v1_10001060, 12
  %v3_10001060 = inttoptr i32 %v2_10001060 to i32*
  store i32 %v0_10001058, i32* %v3_10001060, align 4
  %v0_10001064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001064 = load i32, i32* @r29, align 4
  %v4_10001064 = icmp eq i32 %v0_10001064, %v1_10001064
  store i1 %v4_10001064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001064, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_1000106c:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v0_1000106c = call i32 @function_10005d24()
  %v0_10001070 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001070 = load i32, i32* @r29, align 4
  %v4_10001070 = icmp eq i32 %v0_10001070, %v1_10001070
  store i1 %v4_10001070, i1* %cr7_eq.global-to-local, align 1
  %v1_10001074 = urem i32 %v0_1000106c, 65536
  store i32 %v1_10001074, i32* %r3.global-to-local, align 4
  %v1_10001078 = add nsw i32 %v1_10001074, -1000
  store i32 %v1_10001078, i32* %r0.global-to-local, align 4
  %v1_1000107c = trunc i32 %v0_1000106c to i16
  %v2_1000107c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000107c = add i32 %v2_1000107c, 4
  %v4_1000107c = inttoptr i32 %v3_1000107c to i16*
  store i16 %v1_1000107c, i16* %v4_1000107c, align 2
  %v0_10001080 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001080 = sub i32 -1, %v0_10001080
  store i32 %v1_10001080, i32* %r0.global-to-local, align 4
  %v1_10001084 = trunc i32 %v1_10001080 to i16
  %v2_10001084 = load i32, i32* @r31, align 4
  %v3_10001084 = add i32 %v2_10001084, 4
  %v4_10001084 = inttoptr i32 %v3_10001084 to i16*
  store i16 %v1_10001084, i16* %v4_10001084, align 2
  br i1 %v4_10001070, label %dec_label_pc_1000108c, label %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge

dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge: ; preds = %dec_label_pc_1000106c
  %v1_10000f18.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10000f18

dec_label_pc_1000108c:                            ; preds = %dec_label_pc_1000106c, %dec_label_pc_10000f10
  %v0_1000108c = call i32 @function_10005d24()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  store i32 %v0_1000108c, i32* %r3.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001090 = load i32, i32* @r29, align 4
  %v4_10001090 = icmp eq i32 %v0_10001090, %v1_10001090
  store i1 %v4_10001090, i1* %cr7_eq.global-to-local, align 1
  %v3_10001094 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001094 = add i32 %v3_10001094, 58
  %v5_10001094 = inttoptr i32 %v4_10001094 to i16*
  store i16 %v1_1000108c, i16* %v5_10001094, align 2
  br i1 %v4_10001090, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_1000109c = call i32 @function_10005d24()
  %v1_1000109c = trunc i32 %v0_1000109c to i16
  store i32 %v0_1000109c, i32* %r3.global-to-local, align 4
  %v3_100010a0 = load i32, i32* %r27.global-to-local, align 4
  %v4_100010a0 = add i32 %v3_100010a0, 2
  %v5_100010a0 = inttoptr i32 %v4_100010a0 to i16*
  store i16 %v1_1000109c, i16* %v5_100010a0, align 2
  %v0_100010a4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100010a4, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_100010a8:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_100010a8 = call i32 @function_10005d24()
  store i32 %v0_100010a8, i32* %r3.global-to-local, align 4
  %v1_100010ac = load i32, i32* @r31, align 4
  %v2_100010ac = add i32 %v1_100010ac, 16
  %v3_100010ac = inttoptr i32 %v2_100010ac to i32*
  store i32 %v0_100010a8, i32* %v3_100010ac, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_100010b4:                            ; preds = %dec_label_pc_10000f2c
  %v0_100010b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100010b4 = add i32 %v0_100010b4, 8
  store i32 %v1_100010b4, i32* @r3, align 4
  %v0_100010b8 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100010b8, i32* @r4, align 4
  %v0_100010bc = call i32 @function_10005ef8()
  store i32 %v0_100010bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f88

; uselistorder directives
  uselistorder i32 %v0_1000109c, { 1, 0 }
  uselistorder i32 %v0_1000108c, { 1, 0 }
  uselistorder i32 %v1_10001080, { 1, 0 }
  uselistorder i32 %v1_10001074, { 1, 0 }
  uselistorder i32 %v0_1000106c, { 1, 0 }
  uselistorder i32 %v1_10001064, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 2, 1, 0 }
  uselistorder i1 %v1_10001018, { 1, 0 }
  uselistorder i1 %v0_10001018, { 1, 0 }
  uselistorder i32 %v1_10001008, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10000fe4, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10000fc4, { 1, 0 }
  uselistorder i32 %v0_10000ef0, { 2, 1, 0 }
  uselistorder i32 %v4_10000ed0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000ecc, { 1, 0 }
  uselistorder i32 %v1_10000e18, { 1, 0 }
  uselistorder i32 %v1_10000d54, { 1, 0 }
  uselistorder i32 %v1_10000d48, { 1, 0 }
  uselistorder i32 %v1_10000ce4, { 1, 0 }
  uselistorder i32 %v0_10000ce4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10000cd4, { 1, 2, 0 }
  uselistorder i32 %v0_10000cc8, { 1, 0 }
  uselistorder i32 %v5_10000c74, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 29, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 12, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000f88, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10000e94, { 1, 0 }
  uselistorder label %dec_label_pc_10000e30, { 1, 0 }
  uselistorder label %dec_label_pc_10000e04, { 1, 0 }
  uselistorder label %dec_label_pc_10000d9c, { 1, 0 }
}

define i32 @function_100010c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100010c4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100010c8 = load i32, i32* @lr, align 4
  store i32 %v0_100010c8, i32* %r0.global-to-local, align 4
  %v0_100010cc = call i32 @__asm_mfcr()
  store i32 %v0_100010cc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_100010dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100010cc, i32* %r19.global-to-local, align 4
  %v0_10001110 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001118 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001120 = load i32, i32* @r30, align 4
  %v0_10001124 = load i32, i32* @r31, align 4
  store i32 268439864, i32* @lr, align 4
  %v2_10001134 = call i32 @function_10009930(i32 4, i32 4)
  store i32 %v2_10001134, i32* %r20.global-to-local, align 4
  %v0_1000113c = load i32, i32* @r28, align 4
  %v0_10001148 = load i32, i32* @r29, align 4
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = inttoptr i32 %v0_1000113c to i32*
  %v5_1000114c = call i32 @function_100006a8(i32 %v0_10001148, i32* %v4_1000114c, i32 2, i32 0)
  %v0_1000115c = load i32, i32* @r28, align 4
  %v1_10001160 = urem i32 %v5_1000114c, 256
  store i32 %v1_10001160, i32* %r14.global-to-local, align 4
  %v0_10001164 = load i32, i32* @r29, align 4
  store i32 %v0_10001164, i32* %r3.global-to-local, align 4
  store i32 268439916, i32* @lr, align 4
  %v4_10001168 = inttoptr i32 %v0_1000115c to i32*
  %v5_10001168 = call i32 @function_100006a8(i32 %v0_10001164, i32* %v4_10001168, i32 3, i32 65535)
  %v0_1000116c = load i32, i32* @r28, align 4
  store i32 %v5_10001168, i32* %r25.global-to-local, align 4
  %v0_1000117c = load i32, i32* @r29, align 4
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 268439940, i32* @lr, align 4
  %v4_10001180 = inttoptr i32 %v0_1000116c to i32*
  %v5_10001180 = call i32 @function_100006a8(i32 %v0_1000117c, i32* %v4_10001180, i32 4, i32 64)
  %v0_10001184 = load i32, i32* @r28, align 4
  %v1_10001190 = urem i32 %v5_10001180, 256
  store i32 %v1_10001190, i32* %r21.global-to-local, align 4
  %v0_10001194 = load i32, i32* @r29, align 4
  store i32 %v0_10001194, i32* %r3.global-to-local, align 4
  store i32 268439964, i32* @lr, align 4
  %v4_10001198 = inttoptr i32 %v0_10001184 to i32*
  %v5_10001198 = call i32 @function_100006a8(i32 %v0_10001194, i32* %v4_10001198, i32 5, i32 1)
  %v0_100011a8 = load i32, i32* @r28, align 4
  %v1_100011ac = urem i32 %v5_10001198, 256
  store i32 %v1_100011ac, i32* @r31, align 4
  %v0_100011b0 = load i32, i32* @r29, align 4
  store i32 %v0_100011b0, i32* %r3.global-to-local, align 4
  store i32 268439992, i32* @lr, align 4
  %v4_100011b4 = inttoptr i32 %v0_100011a8 to i32*
  %v5_100011b4 = call i32 @function_100006a8(i32 %v0_100011b0, i32* %v4_100011b4, i32 6, i32 65535)
  %v0_100011bc = load i32, i32* @r28, align 4
  store i32 %v5_100011b4, i32* %r24.global-to-local, align 4
  %v0_100011cc = load i32, i32* @r29, align 4
  store i32 %v0_100011cc, i32* %r3.global-to-local, align 4
  store i32 268440020, i32* @lr, align 4
  %v4_100011d0 = inttoptr i32 %v0_100011bc to i32*
  %v5_100011d0 = call i32 @function_100006a8(i32 %v0_100011cc, i32* %v4_100011d0, i32 7, i32 65535)
  %v0_100011d4 = load i32, i32* @r28, align 4
  store i32 %v5_100011d0, i32* %r27.global-to-local, align 4
  %v0_100011e4 = load i32, i32* @r29, align 4
  store i32 %v0_100011e4, i32* %r3.global-to-local, align 4
  store i32 268440044, i32* @lr, align 4
  %v4_100011e8 = inttoptr i32 %v0_100011d4 to i32*
  %v5_100011e8 = call i32 @function_100006a8(i32 %v0_100011e4, i32* %v4_100011e8, i32 0, i32 512)
  %v0_100011ec = load i32, i32* @r28, align 4
  store i32 %v5_100011e8, i32* %r16.global-to-local, align 4
  %v0_100011fc = load i32, i32* @r29, align 4
  store i32 %v0_100011fc, i32* %r3.global-to-local, align 4
  store i32 268440068, i32* @lr, align 4
  %v4_10001200 = inttoptr i32 %v0_100011ec to i32*
  %v5_10001200 = call i32 @function_100006a8(i32 %v0_100011fc, i32* %v4_10001200, i32 1, i32 1)
  %v0_10001204 = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_10001200, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_10001204 to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001220 = load i32, i32* @global_var_1001ba00.14, align 4
  %v0_10001224 = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r30.global-to-local, align 4
  %v0_10001230 = load i32, i32* @r29, align 4
  store i32 %v0_10001230, i32* %r3.global-to-local, align 4
  store i32 268440120, i32* @lr, align 4
  %v4_10001234 = inttoptr i32 %v0_10001224 to i32*
  %v5_10001234 = call i32 @function_100006a8(i32 %v0_10001230, i32* %v4_10001234, i32 25, i32 %v3_10001220)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v3_10001248 = call i32 @function_100095d4(i32 2, i32 3, i32 6)
  store i32 %v3_10001248, i32* %r3.global-to-local, align 4
  %v3_1000124c = icmp eq i32 %v3_10001248, -1
  store i1 %v3_1000124c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001248, i32* %r23.global-to-local, align 4
  br i1 %v3_1000124c, label %dec_label_pc_100013e4, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_100010c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001264 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @function_10009598(i32 0, i32 3, i32 %v2_10001264, i32 4)
  store i32 %v4_10001270, i32* %r3.global-to-local, align 4
  %v3_10001274 = icmp eq i32 %v4_10001270, -1
  store i1 %v3_10001274, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001274, label %dec_label_pc_100013dc, label %dec_label_pc_1000127c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_10001258
  %v0_1000127c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000127c = icmp slt i32 %v0_1000127c, 0
  %v3_1000127c = icmp eq i32 %v0_1000127c, 0
  store i1 %v1_1000127c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000127c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001288 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001288 = urem i32 %v0_10001288, 65536
  store i32 %v1_10001288, i32* %r25.global-to-local, align 4
  %v0_1000128c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000128c = urem i32 %v0_1000128c, 65536
  store i32 %v1_1000128c, i32* %r17.global-to-local, align 4
  %v0_10001290 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001290 = urem i32 %v0_10001290, 65536
  store i32 %v1_10001290, i32* %r18.global-to-local, align 4
  %v0_10001294 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001294 = urem i32 %v0_10001294, 256
  store i32 %v1_10001294, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_1000127c, 1
  br i1 %tmp33, label %dec_label_pc_10001444, label %dec_label_pc_1000129c

dec_label_pc_1000129c:                            ; preds = %dec_label_pc_1000127c
  %v0_1000129c = load i32, i32* @r31, align 4
  %v3_1000129c = icmp eq i32 %v0_1000129c, 0
  store i1 %v3_1000129c, i1* %cr2_eq.global-to-local, align 1
  %v3_100012a0 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_100012a0, i1* %cr3_eq.global-to-local, align 1
  %v0_100012a4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100012a4 = urem i32 %v0_100012a4, 65536
  %v0_10001288.not = or i32 %v0_10001288, -65536
  %v1_100012a8 = xor i32 %v0_10001288.not, 65535
  store i32 %v1_100012a8, i32* %r11.global-to-local, align 4
  %v1_100012b0 = add nuw nsw i32 %v1_100012a4, 52
  store i32 %v1_100012b0, i32* %r0.global-to-local, align 4
  %v1_100012b4 = add nuw nsw i32 %v1_100012a4, 28
  store i32 %v1_100012b4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100012a4, 52
  %v1_100012b8 = urem i32 %fold, 65536
  store i32 %v1_100012b8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_100012a4, 28
  %v1_100012bc = urem i32 %fold8, 65536
  store i32 %v1_100012bc, i32* %r24.global-to-local, align 4
  %v1_100012c0 = urem i32 %v1_100012a8, 65536
  store i32 %v1_100012c0, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_100012a4, 8
  %v1_100012c4 = urem i32 %fold9, 65536
  store i32 %v1_100012c4, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100012f8

dec_label_pc_100012d0:                            ; preds = %dec_label_pc_100013b8
  %v0_100012d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012d0 = add i32 %v0_100012d0, 16
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012d0, i32* %r0.global-to-local, align 4
  %v1_100012d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100012d4 = add i32 %v1_100012d4, 16
  %v3_100012d4 = inttoptr i32 %v2_100012d4 to i32*
  store i32 %v3_100012d0, i32* %v3_100012d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100012d8:                            ; preds = %dec_label_pc_100013d4, %dec_label_pc_100012d0
  %v3_100012d8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100012d8, i32* %r9.global-to-local, align 4
  %v0_100012dc = load i32, i32* @r28, align 4
  %v1_100012dc = trunc i32 %v0_100012dc to i16
  %v2_100012dc = load i32, i32* %r29.global-to-local, align 4
  %v3_100012dc = add i32 %v2_100012dc, 4
  %v4_100012dc = inttoptr i32 %v3_100012dc to i16*
  store i16 %v1_100012dc, i16* %v4_100012dc, align 2
  %v0_100012e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012e0 = add i32 %v0_100012e0, 1
  store i32 %v1_100012e0, i32* %r31.global-to-local, align 4
  %v0_100012e4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100012e4 = trunc i32 %v0_100012e4 to i16
  %v2_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012e4 = inttoptr i32 %v2_100012e4 to i16*
  store i16 %v1_100012e4, i16* %v3_100012e4, align 2
  %v0_100012e8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012e8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100012e8 = icmp slt i32 %v0_100012e8, %v1_100012e8
  %v4_100012e8 = icmp eq i32 %v0_100012e8, %v1_100012e8
  store i1 %v4_100012e8, i1* %cr7_eq.global-to-local, align 1
  %v0_100012ec = load i32, i32* %r18.global-to-local, align 4
  %v1_100012ec = trunc i32 %v0_100012ec to i16
  %v2_100012ec = load i32, i32* %r29.global-to-local, align 4
  %v3_100012ec = add i32 %v2_100012ec, 2
  %v4_100012ec = inttoptr i32 %v3_100012ec to i16*
  store i16 %v1_100012ec, i16* %v4_100012ec, align 2
  %v0_100012f0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100012f0, i32* %stack_var_-104, align 4
  br i1 %v2_100012e8, label %dec_label_pc_100012f8, label %dec_label_pc_10001448

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_1000129c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440324, i32* @lr, align 4
  %v2_10001300 = call i32 @function_10009930(i32 1510, i32 4)
  store i32 %v2_10001300, i32* %r3.global-to-local, align 4
  %v3_10001304 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001304, i32* %r9.global-to-local, align 4
  %v0_10001308 = load i32, i32* @r31, align 4
  %v1_10001308 = mul i32 %v0_10001308, 4
  store i32 %v1_10001308, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001310 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001310 = add i32 %v1_10001310, %v1_10001308
  %v4_10001310 = inttoptr i32 %v3_10001310 to i32*
  store i32 %v2_10001300, i32* %v4_10001310, align 4
  %v0_10001314 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001314 = mul i32 %v0_10001314, 4
  store i32 %v1_10001314, i32* %r9.global-to-local, align 4
  %v1_10001318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001318 = add i32 %v1_10001318, %v1_10001314
  %v3_10001318 = inttoptr i32 %v2_10001318 to i32*
  %v4_10001318 = load i32, i32* %v3_10001318, align 4
  store i32 %v4_10001318, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001320 = inttoptr i32 %v4_10001318 to i32*
  %v2_10001320 = load i32, i32* %v1_10001320, align 4
  store i32 %v2_10001320, i32* %r0.global-to-local, align 4
  %v1_10001324 = add i32 %v4_10001318, 24
  store i32 %v1_10001324, i32* %r30.global-to-local, align 4
  %v0_10001328 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001328 = trunc i32 %v0_10001328 to i8
  %v3_10001328 = add i32 %v4_10001318, 8
  %v4_10001328 = inttoptr i32 %v3_10001328 to i8*
  store i8 %v1_10001328, i8* %v4_10001328, align 1
  %v0_1000132c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000132c = add i32 %v0_1000132c, 44
  store i32 %v1_1000132c, i32* %r29.global-to-local, align 4
  %v1_10001330 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001330, i32* %r0.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001334 = trunc i32 %v0_10001334 to i16
  %v2_10001334 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001334 = add i32 %v2_10001334, 4
  %v4_10001334 = inttoptr i32 %v3_10001334 to i16*
  store i16 %v1_10001334, i16* %v4_10001334, align 2
  %v1_10001338 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001338, i32* %r0.global-to-local, align 4
  %v0_1000133c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000133c = add i32 %v0_1000133c, 20
  store i32 %v1_1000133c, i32* %r9.global-to-local, align 4
  %v2_10001340 = inttoptr i32 %v0_1000133c to i32*
  store i32 %v1_10001338, i32* %v2_10001340, align 4
  %v0_10001344 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001344 = trunc i32 %v0_10001344 to i8
  %v2_10001344 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001344 = add i32 %v2_10001344, 1
  %v4_10001344 = inttoptr i32 %v3_10001344 to i8*
  store i8 %v1_10001344, i8* %v4_10001344, align 1
  %v0_10001348 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001348 = trunc i32 %v0_10001348 to i16
  %v2_10001348 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001348 = add i32 %v2_10001348, 2
  %v4_10001348 = inttoptr i32 %v3_10001348 to i16*
  store i16 %v1_10001348, i16* %v4_10001348, align 2
  %v0_1000134c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000134c, label %dec_label_pc_10001358, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_100012f8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001354 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001354 = add i32 %v2_10001354, 6
  %v4_10001354 = inttoptr i32 %v3_10001354 to i16*
  store i16 16384, i16* %v4_10001354, align 2
  br label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_100012f8, %dec_label_pc_10001350
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001360 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001360 = add i32 %v2_10001360, 9
  %v4_10001360 = inttoptr i32 %v3_10001360 to i8*
  store i8 47, i8* %v4_10001360, align 1
  %v0_10001364 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001364 = trunc i32 %v0_10001364 to i16
  %v2_10001364 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001364 = add i32 %v2_10001364, 2
  %v4_10001364 = inttoptr i32 %v3_10001364 to i16*
  store i16 %v1_10001364, i16* %v4_10001364, align 2
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001234, i32* %r11.global-to-local, align 4
  %v1_10001370 = mul i32 %v3_10001368, 24
  store i32 %v1_10001370, i32* %r9.global-to-local, align 4
  %v0_10001374 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001374 = add i32 %v0_10001374, 24
  %v2_10001374 = inttoptr i32 %v1_10001374 to i32*
  %v3_10001374 = load i32, i32* %v2_10001374, align 4
  store i32 %v3_10001374, i32* %r0.global-to-local, align 4
  %v2_10001378 = add i32 %v0_10001374, 12
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  store i32 %v5_10001234, i32* %v3_10001378, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001380 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001380 = add i32 %v1_10001380, %v0_10001380
  store i32 %v2_10001380, i32* %r9.global-to-local, align 4
  %v1_10001384 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001384, i32* %r0.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001388 = add i32 %v0_10001388, 16
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001390 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001390, i32* %r0.global-to-local, align 4
  %v1_10001394 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001394 = add i32 %v1_10001394, 24
  %v3_10001394 = inttoptr i32 %v2_10001394 to i32*
  store i32 %v1_10001390, i32* %v3_10001394, align 4
  %v0_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001398 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001398 = add i32 %v1_10001398, 16
  %v3_10001398 = inttoptr i32 %v2_10001398 to i32*
  store i32 %v0_10001398, i32* %v3_10001398, align 4
  %v0_1000139c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000139c = trunc i32 %v0_1000139c to i8
  %v2_1000139c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000139c = add i32 %v2_1000139c, 1
  %v4_1000139c = inttoptr i32 %v3_1000139c to i8*
  store i8 %v1_1000139c, i8* %v4_1000139c, align 1
  %v0_100013a0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100013a0 = trunc i32 %v0_100013a0 to i16
  %v2_100013a0 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a0 = add i32 %v2_100013a0, 2
  %v4_100013a0 = inttoptr i32 %v3_100013a0 to i16*
  store i16 %v1_100013a0, i16* %v4_100013a0, align 2
  %v0_100013a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100013a4 = trunc i32 %v0_100013a4 to i16
  %v2_100013a4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 4
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i16*
  store i16 %v1_100013a4, i16* %v4_100013a4, align 2
  %v0_100013a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 8
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100013ac, label %dec_label_pc_100013b8, label %dec_label_pc_100013b0

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_10001358
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_100013b4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 6
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 16384, i16* %v4_100013b4, align 2
  br label %dec_label_pc_100013b8

dec_label_pc_100013b8:                            ; preds = %dec_label_pc_10001358, %dec_label_pc_100013b0
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013bc = load i32, i32* %r30.global-to-local, align 4
  %v3_100013bc = add i32 %v2_100013bc, 9
  %v4_100013bc = inttoptr i32 %v3_100013bc to i8*
  store i8 17, i8* %v4_100013bc, align 1
  %v0_100013c0 = call i32 @function_10005d24()
  store i32 %v0_100013c0, i32* %r3.global-to-local, align 4
  %v1_100013c4 = add i32 %v0_100013c0, -1024
  store i32 %v1_100013c4, i32* %r0.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, 12
  %v3_100013c8 = inttoptr i32 %v2_100013c8 to i32*
  store i32 %v0_100013c0, i32* %v3_100013c8, align 4
  %v0_100013cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100013cc = sub i32 -1, %v0_100013cc
  store i32 %v1_100013cc, i32* %r0.global-to-local, align 4
  %v0_100013d0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013d0, label %dec_label_pc_100013d4, label %dec_label_pc_100012d0

dec_label_pc_100013d4:                            ; preds = %dec_label_pc_100013b8
  %v1_100013d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v1_100013cc, i32* %v3_100013d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100013dc:                            ; preds = %dec_label_pc_10001258
  %v0_100013dc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100013dc, i32* %r3.global-to-local, align 4
  store i32 268440548, i32* @lr, align 4
  %v0_100013e0 = call i32 @function_10008884()
  store i32 %v0_100013e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100010c4, %dec_label_pc_100013dc
  store i32 %v0_100010dc, i32* %r0.global-to-local, align 4
  %v1_100013f8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100010cc)
  store i32 %v0_10001110, i32* %r28.global-to-local, align 4
  store i32 %v0_10001118, i32* %r29.global-to-local, align 4
  store i32 %v0_10001120, i32* %r30.global-to-local, align 4
  store i32 %v0_10001124, i32* %r31.global-to-local, align 4
  %v0_10001440 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001440

dec_label_pc_10001444:                            ; preds = %dec_label_pc_1000127c
  %v3_10001444 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_10001444, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001448

dec_label_pc_10001448:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_10001444
  store i32 %v5_10001234, i32* %r0.global-to-local, align 4
  %v0_1000144c = load i32, i32* %r15.global-to-local, align 4
  %v3_1000144c = icmp eq i32 %v0_1000144c, 0
  store i1 %v3_1000144c, i1* %cr2_eq.global-to-local, align 1
  %v0_10001450 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001450 = add i32 %v0_10001450, 8
  store i32 %v1_10001450, i32* %r22.global-to-local, align 4
  %v1_10001454 = add i32 %v0_10001450, 52
  store i32 %v1_10001454, i32* %r24.global-to-local, align 4
  %v3_10001458 = icmp eq i32 %v5_10001234, -1
  store i1 %v3_10001458, i1* %cr7_eq.global-to-local, align 1
  %v0_1000145c = call i32 @__asm_mfcr()
  store i32 %v0_1000145c, i32* %r3.global-to-local, align 4
  %v1_10001460 = mul i32 %v0_1000145c, 268435456
  store i32 %v1_10001460, i32* %r21.global-to-local, align 4
  %v0_10001464.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001464.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001464.outer

dec_label_pc_10001464.outer:                      ; preds = %dec_label_pc_1000156c, %dec_label_pc_10001448
  %v1_10001464.ph = phi i1 [ %v1_10001464.pre, %dec_label_pc_10001448 ], [ %v1_1000156c, %dec_label_pc_1000156c ]
  %v0_10001464.ph = phi i1 [ %v0_10001464.pre, %dec_label_pc_10001448 ], [ %v0_1000156c, %dec_label_pc_1000156c ]
  %v2_10001464 = or i1 %v1_10001464.ph, %v0_10001464.ph
  br label %dec_label_pc_10001464

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001464.outer, %dec_label_pc_10001464
  br i1 %v2_10001464, label %dec_label_pc_10001464, label %dec_label_pc_10001468

dec_label_pc_10001468:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_1000156c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_10001468
  %v0_10001478 = phi i32 [ %v1_1000155c, %dec_label_pc_100014dc ], [ 0, %dec_label_pc_10001468 ]
  %v1_10001478 = mul i32 %v0_10001478, 24
  store i32 %v1_10001478, i32* %r0.global-to-local, align 4
  %v1_1000147c = mul i32 %v0_10001478, 4
  store i32 %v1_1000147c, i32* %r11.global-to-local, align 4
  %v1_10001480 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001480 = add i32 %v1_10001480, %v1_1000147c
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  %v4_10001480 = load i32, i32* %v3_10001480, align 4
  store i32 %v4_10001480, i32* %r28.global-to-local, align 4
  %v1_10001484 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001484 = add i32 %v1_10001484, %v1_10001478
  %v1_10001488 = add i32 %v2_10001484, 20
  %v2_10001488 = inttoptr i32 %v1_10001488 to i8*
  %v3_10001488 = load i8, i8* %v2_10001488, align 1
  %v4_10001488 = zext i8 %v3_10001488 to i32
  store i32 %v4_10001488, i32* %r9.global-to-local, align 4
  %v1_1000148c = add i32 %v4_10001480, 24
  store i32 %v1_1000148c, i32* @r31, align 4
  %v1_10001490 = add i32 %v4_10001480, 44
  store i32 %v1_10001490, i32* @r30, align 4
  %v3_10001494 = icmp eq i8 %v3_10001488, 31
  store i1 %v3_10001494, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001488, 32
  br i1 %tmp35, label %dec_label_pc_10001574, label %dec_label_pc_1000149c

dec_label_pc_1000149c:                            ; preds = %dec_label_pc_10001478
  %v0_1000149c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000149c = mul i32 %v0_1000149c, 16
  %v2_1000149c = udiv i32 %v0_1000149c, 268435456
  %v3_1000149c = or i32 %v2_1000149c, %v1_1000149c
  store i32 %v3_1000149c, i32* %r21.global-to-local, align 4
  %v1_100014a0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000149c)
  %v1_100014a4 = mul nuw i32 %v2_1000149c, 268435456
  %v2_100014a4 = urem i32 %v0_1000149c, 268435456
  %v3_100014a4 = or i32 %v1_100014a4, %v2_100014a4
  store i32 %v3_100014a4, i32* %r21.global-to-local, align 4
  %v0_100014a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100014a8, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 65535, i32* @r29, align 4
  %v0_100014b4 = load i32, i32* %r25.global-to-local, align 4
  %v4_100014b4 = icmp eq i32 %v0_100014b4, 65535
  store i1 %v4_100014b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014b4, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v1_100014bc = phi i32 [ %v1_100015b8, %dec_label_pc_100015a8 ], [ 65535, %dec_label_pc_100014ac ]
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  %v4_100014bc = icmp eq i32 %v0_100014bc, %v1_100014bc
  store i1 %v4_100014bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014bc, label %dec_label_pc_100015e0, label %dec_label_pc_100014c4

dec_label_pc_100014c4:                            ; preds = %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge, %dec_label_pc_100014bc
  %v1_100014c4 = phi i32 [ %v1_100014c4.pre, %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge ], [ %v1_100014bc, %dec_label_pc_100014bc ]
  %v0_100014c4 = load i32, i32* %r18.global-to-local, align 4
  %v4_100014c4 = icmp eq i32 %v0_100014c4, %v1_100014c4
  store i1 %v4_100014c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014c4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100014cc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100014cc, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100014d0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100014d0 = add i32 %v0_100014d0, 16
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i32*
  %v3_100014d0 = load i32, i32* %v2_100014d0, align 4
  store i32 %v3_100014d0, i32* %r0.global-to-local, align 4
  %v1_100014d4 = load i32, i32* @r31, align 4
  %v2_100014d4 = add i32 %v1_100014d4, 16
  %v3_100014d4 = inttoptr i32 %v2_100014d4 to i32*
  store i32 %v3_100014d0, i32* %v3_100014d4, align 4
  %v0_100014d8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014d8, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc, %dec_label_pc_10001608
  %v0_100014dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100014dc = trunc i32 %v0_100014dc to i16
  %v2_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v3_100014dc = add i32 %v2_100014dc, 10
  %v4_100014dc = inttoptr i32 %v3_100014dc to i16*
  store i16 %v1_100014dc, i16* %v4_100014dc, align 2
  %v0_100014e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014e4, i32* @r3, align 4
  %v2_100014e8 = call i32 @function_100043cc(i32 %v0_100014e4, i32 20)
  %v3_100014e8 = trunc i32 %v2_100014e8 to i16
  %v4_100014f0 = add i32 %v0_100014e4, 10
  %v5_100014f0 = inttoptr i32 %v4_100014f0 to i16*
  store i16 %v3_100014e8, i16* %v5_100014f0, align 2
  %v0_100014f4 = load i32, i32* @r31, align 4
  store i32 %v0_100014f4, i32* @r3, align 4
  %v0_100014f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100014f8 = trunc i32 %v0_100014f8 to i16
  %v3_100014f8 = add i32 %v0_100014f4, 10
  %v4_100014f8 = inttoptr i32 %v3_100014f8 to i16*
  store i16 %v1_100014f8, i16* %v4_100014f8, align 2
  %v2_100014fc = call i32 @function_100043cc(i32 %v0_100014f4, i32 20)
  %v3_100014fc = trunc i32 %v2_100014fc to i16
  %v0_10001500 = load i32, i32* @r30, align 4
  store i32 %v0_10001500, i32* @r4, align 4
  %v3_10001504 = load i32, i32* @r31, align 4
  %v4_10001504 = add i32 %v3_10001504, 10
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v3_100014fc, i16* %v5_10001504, align 2
  %v0_10001508 = load i32, i32* %r22.global-to-local, align 4
  %v0_1000150c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  %v2_1000150c = load i32, i32* @r30, align 4
  %v3_1000150c = add i32 %v2_1000150c, 6
  %v4_1000150c = inttoptr i32 %v3_1000150c to i16*
  store i16 %v1_1000150c, i16* %v4_1000150c, align 2
  %v0_10001510 = load i32, i32* @r31, align 4
  store i32 %v0_10001510, i32* %r3.global-to-local, align 4
  %v0_10001514 = load i32, i32* @r30, align 4
  %v1_10001514 = add i32 %v0_10001514, 4
  %v2_10001514 = inttoptr i32 %v1_10001514 to i16*
  %v3_10001514 = load i16, i16* %v2_10001514, align 2
  %v4_10001514 = zext i16 %v3_10001514 to i32
  %v4_10001518 = call i32 @function_10004430(i32 %v0_10001510, i32 %v0_10001500, i32 %v4_10001514, i32 %v0_10001508)
  %v5_10001518 = trunc i32 %v4_10001518 to i16
  store i32 %v4_10001518, i32* %r3.global-to-local, align 4
  %v3_1000151c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000151c, i32* %r0.global-to-local, align 4
  %v0_10001520 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001520 = add i32 %v0_10001520, 16
  %v2_10001520 = inttoptr i32 %v1_10001520 to i32*
  %v3_10001520 = load i32, i32* %v2_10001520, align 4
  store i32 %v3_10001520, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001528 = mul i32 %v3_1000151c, 24
  store i32 %v1_10001528, i32* %r0.global-to-local, align 4
  %v3_1000152c = load i32, i32* @r30, align 4
  %v4_1000152c = add i32 %v3_1000152c, 6
  %v5_1000152c = inttoptr i32 %v4_1000152c to i16*
  store i16 %v5_10001518, i16* %v5_1000152c, align 2
  %v0_10001530 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001534 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001534, i32* %r3.global-to-local, align 4
  %v0_10001538 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001538 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001538 = add i32 %v1_10001538, %v0_10001538
  %v0_1000153c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000153c = trunc i32 %v0_1000153c to i16
  %v5_1000153c = inttoptr i32 %v2_10001538 to i16*
  store i16 %v3_1000153c, i16* %v5_1000153c, align 2
  %v0_10001540 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001540 = add i32 %v2_10001538, 4
  %v3_10001540 = inttoptr i32 %v2_10001540 to i32*
  store i32 %v0_10001540, i32* %v3_10001540, align 4
  %v0_10001544 = load i32, i32* %r24.global-to-local, align 4
  %v0_10001548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001548 = trunc i32 %v0_10001548 to i16
  %v3_10001548 = add i32 %v2_10001538, 2
  %v4_10001548 = inttoptr i32 %v3_10001548 to i16*
  store i16 %v1_10001548, i16* %v4_10001548, align 2
  store i32 268440920, i32* @lr, align 4
  %v6_10001554 = call i32 @function_10009558(i32 %v0_10001534, i32 %v0_10001530, i32 %v0_10001544, i32 16384, i32 %v2_10001538, i32 16)
  store i32 %v6_10001554, i32* %r3.global-to-local, align 4
  %v3_10001558 = load i32, i32* %stack_var_-104, align 4
  %v1_1000155c = add i32 %v3_10001558, 1
  store i32 %v1_1000155c, i32* %r9.global-to-local, align 4
  %v1_10001560 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001560 = icmp slt i32 %v1_1000155c, %v1_10001560
  %v4_10001560 = icmp eq i32 %v1_1000155c, %v1_10001560
  store i1 %v4_10001560, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000155c, i32* %stack_var_-104, align 4
  br i1 %v2_10001560, label %dec_label_pc_10001478, label %dec_label_pc_1000156c

dec_label_pc_1000156c:                            ; preds = %dec_label_pc_100014dc
  %v0_1000156c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000156c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000156c = or i1 %v0_1000156c, %v1_1000156c
  br i1 %v2_1000156c, label %dec_label_pc_10001464.outer, label %dec_label_pc_10001468

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001478
  %v1_10001574 = add i32 %v2_10001484, 16
  %v2_10001574 = inttoptr i32 %v1_10001574 to i32*
  %v3_10001574 = load i32, i32* %v2_10001574, align 4
  store i32 %v3_10001574, i32* %r29.global-to-local, align 4
  %v0_10001578 = call i32 @function_10005d24()
  store i32 %v0_10001578, i32* %r3.global-to-local, align 4
  %v3_1000157c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000157c, i32* %r9.global-to-local, align 4
  %v0_10001580 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001580 = mul i32 %v0_10001580, 16
  %v2_10001580 = udiv i32 %v0_10001580, 268435456
  %v3_10001580 = or i32 %v2_10001580, %v1_10001580
  store i32 %v3_10001580, i32* %r21.global-to-local, align 4
  %v1_10001584 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001580)
  %v1_10001588 = mul nuw i32 %v2_10001580, 268435456
  %v2_10001588 = urem i32 %v0_10001580, 268435456
  %v3_10001588 = or i32 %v1_10001588, %v2_10001588
  store i32 %v3_10001588, i32* %r21.global-to-local, align 4
  %v0_1000158c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000158c = mul i32 %v0_1000158c, 24
  %v1_10001590 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001590 = add i32 %v1_10001590, %v1_1000158c
  store i32 %v2_10001590, i32* %r9.global-to-local, align 4
  %v1_10001594 = add i32 %v2_10001590, 20
  %v2_10001594 = inttoptr i32 %v1_10001594 to i8*
  %v3_10001594 = load i8, i8* %v2_10001594, align 1
  %v4_10001594 = zext i8 %v3_10001594 to i32
  store i32 %v4_10001594, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001594, 64
  %v2_10001598 = zext i8 %tmp to i32
  %v3_10001598 = lshr i32 %v0_10001578, %v2_10001598
  store i32 %v3_10001598, i32* %r3.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000159c = add i32 %v3_10001598, %v0_1000159c
  store i32 %v2_1000159c, i32* %r29.global-to-local, align 4
  %v1_100015a0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015a0 = add i32 %v1_100015a0, 16
  %v3_100015a0 = inttoptr i32 %v2_100015a0 to i32*
  store i32 %v2_1000159c, i32* %v3_100015a0, align 4
  %v0_100015a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100015a4, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100015ac = call i32 @function_10005d24()
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100015b4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015b4 = add i32 %v1_100015b4, 12
  %v3_100015b4 = inttoptr i32 %v2_100015b4 to i32*
  store i32 %v0_100015ac, i32* %v3_100015b4, align 4
  %v0_100015b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100015b8 = load i32, i32* @r29, align 4
  %v4_100015b8 = icmp eq i32 %v0_100015b8, %v1_100015b8
  store i1 %v4_100015b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100015b8, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100015c0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v0_100015c0 = call i32 @function_10005d24()
  %v0_100015c4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100015c4 = load i32, i32* @r29, align 4
  %v4_100015c4 = icmp eq i32 %v0_100015c4, %v1_100015c4
  store i1 %v4_100015c4, i1* %cr7_eq.global-to-local, align 1
  %v1_100015c8 = urem i32 %v0_100015c0, 65536
  store i32 %v1_100015c8, i32* %r3.global-to-local, align 4
  %v1_100015cc = add nsw i32 %v1_100015c8, -1000
  store i32 %v1_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = trunc i32 %v0_100015c0 to i16
  %v2_100015d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100015d0 = add i32 %v2_100015d0, 4
  %v4_100015d0 = inttoptr i32 %v3_100015d0 to i16*
  store i16 %v1_100015d0, i16* %v4_100015d0, align 2
  %v0_100015d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100015d4 = sub i32 -1, %v0_100015d4
  store i32 %v1_100015d4, i32* %r0.global-to-local, align 4
  %v1_100015d8 = trunc i32 %v1_100015d4 to i16
  %v2_100015d8 = load i32, i32* @r31, align 4
  %v3_100015d8 = add i32 %v2_100015d8, 4
  %v4_100015d8 = inttoptr i32 %v3_100015d8 to i16*
  store i16 %v1_100015d8, i16* %v4_100015d8, align 2
  br i1 %v4_100015c4, label %dec_label_pc_100015e0, label %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge

dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge: ; preds = %dec_label_pc_100015c0
  %v1_100014c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100014c4

dec_label_pc_100015e0:                            ; preds = %dec_label_pc_100015c0, %dec_label_pc_100014bc
  %v0_100015e0 = call i32 @function_10005d24()
  %v1_100015e0 = trunc i32 %v0_100015e0 to i16
  store i32 %v0_100015e0, i32* %r3.global-to-local, align 4
  %v0_100015e4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100015e4 = load i32, i32* @r29, align 4
  %v4_100015e4 = icmp eq i32 %v0_100015e4, %v1_100015e4
  store i1 %v4_100015e4, i1* %cr7_eq.global-to-local, align 1
  %v3_100015e8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100015e8 = add i32 %v3_100015e8, 44
  %v5_100015e8 = inttoptr i32 %v4_100015e8 to i16*
  store i16 %v1_100015e0, i16* %v5_100015e8, align 2
  br i1 %v4_100015e4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100015f0:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100015f0 = call i32 @function_10005d24()
  %v1_100015f0 = trunc i32 %v0_100015f0 to i16
  store i32 %v0_100015f0, i32* %r3.global-to-local, align 4
  %v3_100015f4 = load i32, i32* @r30, align 4
  %v4_100015f4 = add i32 %v3_100015f4, 2
  %v5_100015f4 = inttoptr i32 %v4_100015f4 to i16*
  store i16 %v1_100015f0, i16* %v5_100015f4, align 2
  %v0_100015f8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100015f8, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100015fc = call i32 @function_10005d24()
  store i32 %v0_100015fc, i32* %r3.global-to-local, align 4
  %v1_10001600 = load i32, i32* @r31, align 4
  %v2_10001600 = add i32 %v1_10001600, 16
  %v3_10001600 = inttoptr i32 %v2_10001600 to i32*
  store i32 %v0_100015fc, i32* %v3_10001600, align 4
  %v0_10001604 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001604, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_10001608:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc
  %v0_10001608 = load i32, i32* @r30, align 4
  %v1_10001608 = add i32 %v0_10001608, 8
  store i32 %v1_10001608, i32* @r3, align 4
  %v0_1000160c = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_1000160c, i32* @r4, align 4
  %v0_10001610 = call i32 @function_10005ef8()
  store i32 %v0_10001610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100014dc

; uselistorder directives
  uselistorder i32 %v0_100015f0, { 1, 0 }
  uselistorder i32 %v0_100015e0, { 1, 0 }
  uselistorder i32 %v1_100015d4, { 1, 0 }
  uselistorder i32 %v1_100015c8, { 1, 0 }
  uselistorder i32 %v0_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_10001580, { 2, 1, 0 }
  uselistorder i1 %v1_1000156c, { 1, 0 }
  uselistorder i1 %v0_1000156c, { 1, 0 }
  uselistorder i32 %v1_1000155c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001538, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001518, { 1, 0 }
  uselistorder i32 %v0_1000149c, { 2, 1, 0 }
  uselistorder i32 %v4_10001480, { 1, 0, 2 }
  uselistorder i32 %v1_1000147c, { 1, 0 }
  uselistorder i32 %v1_100013cc, { 1, 0 }
  uselistorder i32 %v1_10001314, { 1, 0 }
  uselistorder i32 %v1_10001308, { 1, 0 }
  uselistorder i32 %v1_100012a4, { 1, 0 }
  uselistorder i32 %v0_100012a4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001294, { 1, 2, 0 }
  uselistorder i32 %v0_10001288, { 1, 0 }
  uselistorder i32 %v5_10001234, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 19, 20, 21, 22, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 4, 5, 17, 18 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 27, 28, 29, 30, 31, 32, 33, 34, 3, 4, 5, 6, 1, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 6, 5, 7, 8, 0, 4, 1, 2, 3 }
  uselistorder i32* %r28.global-to-local, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r21.global-to-local, { 8, 9, 7, 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r16.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 18, 19, 20, 21, 8, 23, 24, 25, 26, 27 }
  uselistorder i1* %cr7_eq.global-to-local, { 10, 11, 12, 4, 13, 0, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i1* %cr2_eq.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10001608, { 1, 0 }
  uselistorder label %dec_label_pc_100014dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001468, { 1, 0 }
  uselistorder label %dec_label_pc_10001464, { 1, 0 }
  uselistorder label %dec_label_pc_10001448, { 1, 0 }
  uselistorder label %dec_label_pc_100013e4, { 1, 0 }
  uselistorder label %dec_label_pc_100013b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001358, { 1, 0 }
}

define i32 @function_10001618(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001618:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10001620 = call i32 @__asm_mfcr()
  store i32 %v0_10001620, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000164c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001654 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268441208, i32* @lr, align 4
  %v2_10001674 = call i32 @function_10009930(i32 4, i32 4)
  store i32 %v2_10001674, i32* %r27.global-to-local, align 4
  %v0_10001680 = load i32, i32* @r30, align 4
  store i32 %v0_10001680, i32* %r3.global-to-local, align 4
  store i32 268441224, i32* @lr, align 4
  %v2_10001684 = call i32 @function_10009930(i32 %v0_10001680, i32 4)
  %v0_1000168c = load i32, i32* @r28, align 4
  store i32 %v2_10001684, i32* %r26.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r29, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* @lr, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000168c to i32*
  %v5_100016a0 = call i32 @function_100006a8(i32 %v0_1000169c, i32* %v4_100016a0, i32 7, i32 65535)
  %v0_100016ac = load i32, i32* @r28, align 4
  %v1_100016b4 = urem i32 %v5_100016a0, 65536
  store i32 %v1_100016b4, i32* %r21.global-to-local, align 4
  %v0_100016b8 = load i32, i32* @r29, align 4
  store i32 %v0_100016b8, i32* %r3.global-to-local, align 4
  store i32 268441280, i32* @lr, align 4
  %v4_100016bc = inttoptr i32 %v0_100016ac to i32*
  %v5_100016bc = call i32 @function_100006a8(i32 %v0_100016b8, i32* %v4_100016bc, i32 6, i32 65535)
  %v0_100016c0 = load i32, i32* @r28, align 4
  %v1_100016c4 = urem i32 %v5_100016bc, 65536
  store i32 %v1_100016c4, i32* %r22.global-to-local, align 4
  %v0_100016d0 = load i32, i32* @r29, align 4
  store i32 %v0_100016d0, i32* %r3.global-to-local, align 4
  store i32 268441304, i32* @lr, align 4
  %v4_100016d4 = inttoptr i32 %v0_100016c0 to i32*
  %v5_100016d4 = call i32 @function_100006a8(i32 %v0_100016d0, i32* %v4_100016d4, i32 0, i32 1024)
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016dc = urem i32 %v5_100016d4, 65536
  store i32 %v1_100016dc, i32* @r31, align 4
  %v0_100016e4 = load i32, i32* @r29, align 4
  store i32 %v0_100016e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100016f0.18 to i32), i32* @lr, align 4
  %v4_100016ec = inttoptr i32 %v0_100016d8 to i32*
  %v5_100016ec = call i32 @function_100006a8(i32 %v0_100016e4, i32* %v4_100016ec, i32 1, i32 1)
  store i32 %v5_100016ec, i32* %r3.global-to-local, align 4
  %v0_100016fc = load i32, i32* %r22.global-to-local, align 4
  %v4_100016fc = icmp eq i32 %v0_100016fc, 65535
  %v1_10001704 = urem i32 %v5_100016ec, 256
  store i32 %v1_10001704, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_100016fc, label %dec_label_pc_10001900, label %dec_label_pc_10001718

dec_label_pc_10001718:                            ; preds = %dec_label_pc_10001618, %dec_label_pc_10001900
  %v0_10001718 = load i32, i32* @r30, align 4
  %v1_10001718 = icmp slt i32 %v0_10001718, 0
  %v3_10001718 = icmp eq i32 %v0_10001718, 0
  store i1 %v1_10001718, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10001718, 1
  br i1 %tmp38, label %dec_label_pc_100017d8, label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001718
  %v0_10001724 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001724, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10001730 = load i32, i32* %r21.global-to-local, align 4
  %v4_10001730 = icmp eq i32 %v0_10001730, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10001880 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10001730, label %dec_label_pc_10001850, label %dec_label_pc_10001744

dec_label_pc_10001744:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_100017b8
  %v0_10001750 = phi i32 [ %v0_100017cc, %dec_label_pc_100017b8 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001750 = add i32 %v0_10001750, 1
  store i32 %v1_10001750, i32* %r24.global-to-local, align 4
  store i32 268441432, i32* @lr, align 4
  %v2_10001754 = call i32 @function_10009930(i32 65535, i32 1)
  %v0_10001758 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001758 = trunc i32 %v0_10001758 to i16
  %v2_10001758 = load i32, i32* @r28, align 4
  %v3_10001758 = add i32 %v2_10001758, 2
  %v4_10001758 = inttoptr i32 %v3_10001758 to i16*
  store i16 %v1_10001758, i16* %v4_10001758, align 2
  %v1_1000175c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000175c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000175c = add i32 %v2_1000175c, %v1_1000175c
  %v4_1000175c = inttoptr i32 %v3_1000175c to i32*
  store i32 %v2_10001754, i32* %v4_1000175c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441456, i32* @lr, align 4
  %v3_1000176c = call i32 @function_100095d4(i32 2, i32 2, i32 0)
  store i32 %v3_1000176c, i32* %r3.global-to-local, align 4
  %v3_10001774 = icmp eq i32 %v3_1000176c, -1
  %v1_1000177c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000177c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000177c = add i32 %v2_1000177c, %v1_1000177c
  %v4_1000177c = inttoptr i32 %v3_1000177c to i32*
  store i32 %v3_1000176c, i32* %v4_1000177c, align 4
  br i1 %v3_10001774, label %dec_label_pc_100018b4, label %dec_label_pc_10001784

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001744
  %v0_10001784 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001784, i32* %stack_var_-72, align 4
  store i32 268441492, i32* @lr, align 4
  %v0_10001790 = load i32, i32* %r3.global-to-local, align 4
  %v3_10001790 = call i32 @function_100093a0(i32 %v0_10001790, i32 %v2_10001880, i32 16)
  store i32 %v3_10001790, i32* %r3.global-to-local, align 4
  %v0_10001794 = load i32, i32* @r28, align 4
  %v1_10001794 = add i32 %v0_10001794, 20
  %v2_10001794 = inttoptr i32 %v1_10001794 to i8*
  %v3_10001794 = load i8, i8* %v2_10001794, align 1
  %v2_10001798 = icmp ugt i8 %v3_10001794, 31
  br i1 %v2_10001798, label %dec_label_pc_100017b8, label %dec_label_pc_100017a0

dec_label_pc_100017a0:                            ; preds = %dec_label_pc_10001784
  %v1_100017a0 = add i32 %v0_10001794, 16
  %v2_100017a0 = inttoptr i32 %v1_100017a0 to i32*
  %v3_100017a0 = load i32, i32* %v2_100017a0, align 4
  store i32 %v3_100017a0, i32* %r29.global-to-local, align 4
  %v0_100017a4 = call i32 @function_10005d24()
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  %v0_100017a8 = load i32, i32* @r28, align 4
  %v1_100017a8 = add i32 %v0_100017a8, 20
  %v2_100017a8 = inttoptr i32 %v1_100017a8 to i8*
  %v3_100017a8 = load i8, i8* %v2_100017a8, align 1
  %tmp = urem i8 %v3_100017a8, 64
  %v2_100017ac = zext i8 %tmp to i32
  %v3_100017ac = lshr i32 %v0_100017a4, %v2_100017ac
  %v0_100017b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100017b0 = add i32 %v3_100017ac, %v0_100017b0
  store i32 %v2_100017b0, i32* %r3.global-to-local, align 4
  %v2_100017b4 = add i32 %v0_100017a8, 4
  %v3_100017b4 = inttoptr i32 %v2_100017b4 to i32*
  store i32 %v2_100017b0, i32* %v3_100017b4, align 4
  br label %dec_label_pc_100017b8

dec_label_pc_100017b8:                            ; preds = %dec_label_pc_10001784, %dec_label_pc_100017a0
  %v0_100017b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100017b8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100017b8 = add i32 %v1_100017b8, %v0_100017b8
  %v3_100017b8 = inttoptr i32 %v2_100017b8 to i32*
  %v4_100017b8 = load i32, i32* %v3_100017b8, align 4
  store i32 %v4_100017b8, i32* @r3, align 4
  %v1_100017c4 = add i32 %v0_100017b8, 4
  store i32 %v1_100017c4, i32* %r25.global-to-local, align 4
  store i32 268441548, i32* @lr, align 4
  %v0_100017c8 = call i32 @function_100093d4()
  store i32 %v0_100017c8, i32* %r3.global-to-local, align 4
  %v0_100017cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100017cc = load i32, i32* @r30, align 4
  %v4_100017cc = icmp eq i32 %v0_100017cc, %v1_100017cc
  %v0_100017d0 = load i32, i32* @r28, align 4
  %v1_100017d0 = add i32 %v0_100017d0, 24
  store i32 %v1_100017d0, i32* @r28, align 4
  br i1 %v4_100017cc, label %dec_label_pc_100017d8, label %dec_label_pc_10001744

dec_label_pc_100017d8:                            ; preds = %dec_label_pc_100017b8, %dec_label_pc_10001830, %dec_label_pc_10001718
  %v0_100017d8 = load i32, i32* %r23.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v0_100017d8, 0
  store i1 %v3_100017d8, i1* %cr3_eq.global-to-local, align 1
  %v0_100017dc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100017dc.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100017dc.outer

dec_label_pc_100017dc.outer:                      ; preds = %dec_label_pc_10001810, %dec_label_pc_10001948, %dec_label_pc_100017d8
  %v1_100017dc.ph39 = phi i1 [ %v1_100017dc.pre, %dec_label_pc_100017d8 ], [ %v1_10001948, %dec_label_pc_10001948 ], [ %v1_10001810, %dec_label_pc_10001810 ]
  %v0_100017dc.ph40 = phi i1 [ %v0_100017dc.pre, %dec_label_pc_100017d8 ], [ %v0_10001948, %dec_label_pc_10001948 ], [ %v0_10001810, %dec_label_pc_10001810 ]
  %v2_100017dc = or i1 %v1_100017dc.ph39, %v0_100017dc.ph40
  br label %dec_label_pc_100017dc

dec_label_pc_100017dc:                            ; preds = %dec_label_pc_100017dc.outer, %dec_label_pc_100017dc
  br i1 %v2_100017dc, label %dec_label_pc_100017dc, label %dec_label_pc_100017e0

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001810, %dec_label_pc_100017dc
  %v0_100017e0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100017e0, label %dec_label_pc_100017e4, label %dec_label_pc_1000190c

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge, %dec_label_pc_100017e4
  %v0_100017f0 = phi i32 [ %v0_10001808, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v0_10001800 = phi i32 [ %v0_100017ec.pre, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v1_100017ec = load i32, i32* %r26.global-to-local, align 4
  %v2_100017ec = add i32 %v1_100017ec, %v0_10001800
  %v3_100017ec = inttoptr i32 %v2_100017ec to i32*
  %v4_100017ec = load i32, i32* %v3_100017ec, align 4
  store i32 %v4_100017ec, i32* %r3.global-to-local, align 4
  %v1_100017f0 = add i32 %v0_100017f0, 1
  store i32 %v1_100017f0, i32* %r28.global-to-local, align 4
  %v1_100017f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100017f4 = add i32 %v1_100017f4, %v0_10001800
  %v3_100017f4 = inttoptr i32 %v2_100017f4 to i32*
  %v4_100017f4 = load i32, i32* %v3_100017f4, align 4
  %v0_100017f8 = load i32, i32* @r31, align 4
  %v1_10001800 = add i32 %v0_10001800, 4
  store i32 %v1_10001800, i32* %r29.global-to-local, align 4
  store i32 268441608, i32* @lr, align 4
  %v4_10001804 = call i32 @function_10009520(i32 %v4_100017ec, i32 %v4_100017f4, i32 %v0_100017f8, i32 16384)
  store i32 %v4_10001804, i32* %r3.global-to-local, align 4
  %v0_10001808 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001808 = load i32, i32* @r30, align 4
  %v4_10001808 = icmp eq i32 %v0_10001808, %v1_10001808
  br i1 %v4_10001808, label %dec_label_pc_10001810, label %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge

dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge: ; preds = %dec_label_pc_100017ec
  %v0_100017ec.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017ec
  %v0_10001810 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001810 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001810 = or i1 %v0_10001810, %v1_10001810
  br i1 %v2_10001810, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

dec_label_pc_10001830:                            ; preds = %dec_label_pc_10001894, %dec_label_pc_100018b0
  %v0_10001830 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001830 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001830 = add i32 %v1_10001830, %v0_10001830
  %v3_10001830 = inttoptr i32 %v2_10001830 to i32*
  %v4_10001830 = load i32, i32* %v3_10001830, align 4
  store i32 %v4_10001830, i32* @r3, align 4
  %v1_1000183c = add i32 %v0_10001830, 4
  store i32 %v1_1000183c, i32* %r25.global-to-local, align 4
  store i32 268441668, i32* @lr, align 4
  %v0_10001840 = call i32 @function_100093d4()
  store i32 %v0_10001840, i32* %r3.global-to-local, align 4
  %v0_10001844 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001844 = load i32, i32* @r30, align 4
  %v4_10001844 = icmp eq i32 %v0_10001844, %v1_10001844
  %v0_10001848 = load i32, i32* @r28, align 4
  %v1_10001848 = add i32 %v0_10001848, 24
  store i32 %v1_10001848, i32* @r28, align 4
  br i1 %v4_10001844, label %dec_label_pc_100017d8, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_10001830
  %v0_1000185c = phi i32 [ %v0_10001844, %dec_label_pc_10001830 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 1
  store i32 %v1_1000185c, i32* %r24.global-to-local, align 4
  store i32 268441700, i32* @lr, align 4
  %v2_10001860 = call i32 @function_10009930(i32 65535, i32 1)
  store i32 %v2_10001860, i32* %r3.global-to-local, align 4
  %v1_10001864 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001864 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001864 = add i32 %v2_10001864, %v1_10001864
  %v4_10001864 = inttoptr i32 %v3_10001864 to i32*
  store i32 %v2_10001860, i32* %v4_10001864, align 4
  %v0_10001868 = call i32 @function_10005d24()
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v3_1000186c = load i32, i32* @r28, align 4
  %v4_1000186c = add i32 %v3_1000186c, 2
  %v5_1000186c = inttoptr i32 %v4_1000186c to i16*
  store i16 %v1_10001868, i16* %v5_1000186c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441728, i32* @lr, align 4
  %v3_1000187c = call i32 @function_100095d4(i32 2, i32 2, i32 0)
  store i32 %v3_1000187c, i32* %r3.global-to-local, align 4
  %v3_10001884 = icmp eq i32 %v3_1000187c, -1
  %v1_1000188c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000188c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000188c = add i32 %v2_1000188c, %v1_1000188c
  %v4_1000188c = inttoptr i32 %v3_1000188c to i32*
  store i32 %v3_1000187c, i32* %v4_1000188c, align 4
  br i1 %v3_10001884, label %dec_label_pc_100018b4, label %dec_label_pc_10001894

dec_label_pc_10001894:                            ; preds = %dec_label_pc_10001850
  %v0_10001894 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001894, i32* %stack_var_-72, align 4
  store i32 268441764, i32* @lr, align 4
  %v0_100018a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100018a0 = call i32 @function_100093a0(i32 %v0_100018a0, i32 %v2_10001880, i32 16)
  store i32 %v3_100018a0, i32* %r3.global-to-local, align 4
  %v0_100018a4 = load i32, i32* @r28, align 4
  %v1_100018a4 = add i32 %v0_100018a4, 20
  %v2_100018a4 = inttoptr i32 %v1_100018a4 to i8*
  %v3_100018a4 = load i8, i8* %v2_100018a4, align 1
  %v2_100018a8 = icmp ugt i8 %v3_100018a4, 31
  br i1 %v2_100018a8, label %dec_label_pc_10001830, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_10001894
  %v1_10001818 = add i32 %v0_100018a4, 16
  %v2_10001818 = inttoptr i32 %v1_10001818 to i32*
  %v3_10001818 = load i32, i32* %v2_10001818, align 4
  store i32 %v3_10001818, i32* %r29.global-to-local, align 4
  %v0_1000181c = call i32 @function_10005d24()
  store i32 %v0_1000181c, i32* %r3.global-to-local, align 4
  %v0_10001820 = load i32, i32* @r28, align 4
  %v1_10001820 = add i32 %v0_10001820, 20
  %v2_10001820 = inttoptr i32 %v1_10001820 to i8*
  %v3_10001820 = load i8, i8* %v2_10001820, align 1
  %tmp43 = urem i8 %v3_10001820, 64
  %v2_10001824 = zext i8 %tmp43 to i32
  %v3_10001824 = lshr i32 %v0_1000181c, %v2_10001824
  %v0_10001828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001828 = add i32 %v3_10001824, %v0_10001828
  store i32 %v2_10001828, i32* %r3.global-to-local, align 4
  %v2_1000182c = add i32 %v0_10001820, 4
  %v3_1000182c = inttoptr i32 %v2_1000182c to i32*
  store i32 %v2_10001828, i32* %v3_1000182c, align 4
  br label %dec_label_pc_10001830

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_10001744, %dec_label_pc_10001850
  %v1_100018c8 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10001620)
  store i32 %v0_1000164c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001654, i32* %r29.global-to-local, align 4
  %v0_100018fc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100018fc

dec_label_pc_10001900:                            ; preds = %dec_label_pc_10001618
  %v0_10001900 = call i32 @function_10005d24()
  store i32 %v0_10001900, i32* %r3.global-to-local, align 4
  %v1_10001904 = urem i32 %v0_10001900, 65536
  store i32 %v1_10001904, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10001718

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001914:                            ; preds = %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge, %dec_label_pc_1000190c
  %v0_1000191c = phi i32 [ %v0_10001940, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v0_10001914 = phi i32 [ %v0_10001914.pre, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v1_10001914 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001914 = add i32 %v1_10001914, %v0_10001914
  %v3_10001914 = inttoptr i32 %v2_10001914 to i32*
  %v4_10001914 = load i32, i32* %v3_10001914, align 4
  store i32 %v4_10001914, i32* @r29, align 4
  %v0_10001918 = load i32, i32* @r31, align 4
  store i32 %v0_10001918, i32* @r4, align 4
  %v1_1000191c = add i32 %v0_1000191c, 1
  store i32 %v1_1000191c, i32* %r25.global-to-local, align 4
  store i32 %v4_10001914, i32* @r3, align 4
  %v0_10001924 = call i32 @function_10005ef8()
  store i32 %v0_10001924, i32* %r3.global-to-local, align 4
  %v0_10001928 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001928 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001928 = add i32 %v1_10001928, %v0_10001928
  %v3_10001928 = inttoptr i32 %v2_10001928 to i32*
  %v4_10001928 = load i32, i32* %v3_10001928, align 4
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v0_1000192c = load i32, i32* @r29, align 4
  %v0_10001930 = load i32, i32* @r31, align 4
  %v1_10001938 = add i32 %v0_10001928, 4
  store i32 %v1_10001938, i32* %r28.global-to-local, align 4
  store i32 268441920, i32* @lr, align 4
  %v4_1000193c = call i32 @function_10009520(i32 %v4_10001928, i32 %v0_1000192c, i32 %v0_10001930, i32 16384)
  store i32 %v4_1000193c, i32* %r3.global-to-local, align 4
  %v0_10001940 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001940 = load i32, i32* @r30, align 4
  %v4_10001940 = icmp eq i32 %v0_10001940, %v1_10001940
  br i1 %v4_10001940, label %dec_label_pc_10001948, label %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge

dec_label_pc_10001914.dec_label_pc_10001914_crit_edge: ; preds = %dec_label_pc_10001914
  %v0_10001914.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001948:                            ; preds = %dec_label_pc_10001914
  %v0_10001948 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001948 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001948 = or i1 %v0_10001948, %v1_10001948
  br i1 %v2_10001948, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

; uselistorder directives
  uselistorder i1 %v1_10001948, { 1, 0 }
  uselistorder i1 %v0_10001948, { 1, 0 }
  uselistorder i32 %v0_10001940, { 1, 0 }
  uselistorder i32 %v0_10001928, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 0 }
  uselistorder i1 %v1_10001810, { 1, 0 }
  uselistorder i1 %v0_10001810, { 1, 0 }
  uselistorder i32 %v0_10001808, { 1, 0 }
  uselistorder i32 %v0_10001800, { 2, 0, 1 }
  uselistorder i32 %v0_100017cc, { 1, 0 }
  uselistorder i32 %v0_100017b8, { 1, 0 }
  uselistorder i32 %v2_10001880, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 12, 13, 2, 14, 20, 15, 16, 18, 19, 21, 22, 23, 24, 17, 26, 25, 3, 27, 28, 29, 4, 5, 30, 31, 6, 7, 8, 9, 10, 11, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 3, 4, 5, 7, 8, 9, 6, 13, 10, 11, 12, 0, 1, 2 }
  uselistorder i32* %r24.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r22.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100018b4, { 1, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0 }
  uselistorder label %dec_label_pc_10001830, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001744, { 1, 0 }
  uselistorder label %dec_label_pc_10001718, { 1, 0 }
}

define i32 @function_10001950(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001950:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001954 = load i32, i32* @lr, align 4
  store i32 %v0_10001954, i32* %r0.global-to-local, align 4
  %v0_10001958 = call i32 @__asm_mfcr()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001958, i32* %r21.global-to-local, align 4
  %v0_100019a0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100019a8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268442052, i32* @lr, align 4
  %v2_100019c0 = call i32 @function_10009930(i32 16, i32 16)
  store i32 %v2_100019c0, i32* %r22.global-to-local, align 4
  %v0_100019cc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100019cc, i32* %r3.global-to-local, align 4
  store i32 268442068, i32* @lr, align 4
  %v2_100019d0 = call i32 @function_10009930(i32 %v0_100019cc, i32 4)
  %v0_100019d4 = load i32, i32* @r28, align 4
  store i32 %v2_100019d0, i32* %r23.global-to-local, align 4
  %v0_100019e4 = load i32, i32* @r29, align 4
  store i32 %v0_100019e4, i32* %r3.global-to-local, align 4
  store i32 268442092, i32* @lr, align 4
  %v4_100019e8 = inttoptr i32 %v0_100019d4 to i32*
  %v5_100019e8 = call i32 @function_100006a8(i32 %v0_100019e4, i32* %v4_100019e8, i32 2, i32 0)
  %v5_100019f8 = trunc i32 %v5_100019e8 to i8
  %v0_10001a00 = load i32, i32* @r28, align 4
  %v0_10001a04 = load i32, i32* @r29, align 4
  store i32 %v0_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442124, i32* @lr, align 4
  %v4_10001a08 = inttoptr i32 %v0_10001a00 to i32*
  %v5_10001a08 = call i32 @function_100006a8(i32 %v0_10001a04, i32* %v4_10001a08, i32 3, i32 65535)
  %v0_10001a0c = load i32, i32* @r28, align 4
  store i32 %v5_10001a08, i32* @r31, align 4
  %v0_10001a1c = load i32, i32* @r29, align 4
  store i32 %v0_10001a1c, i32* %r3.global-to-local, align 4
  store i32 268442148, i32* @lr, align 4
  %v4_10001a20 = inttoptr i32 %v0_10001a0c to i32*
  %v5_10001a20 = call i32 @function_100006a8(i32 %v0_10001a1c, i32* %v4_10001a20, i32 4, i32 64)
  %v0_10001a24 = load i32, i32* @r28, align 4
  %v5_10001a30 = trunc i32 %v5_10001a20 to i8
  %v0_10001a38 = load i32, i32* @r29, align 4
  store i32 %v0_10001a38, i32* %r3.global-to-local, align 4
  store i32 268442176, i32* @lr, align 4
  %v4_10001a3c = inttoptr i32 %v0_10001a24 to i32*
  %v5_10001a3c = call i32 @function_100006a8(i32 %v0_10001a38, i32* %v4_10001a3c, i32 5, i32 1)
  %v1_10001a44 = urem i32 %v5_10001a3c, 256
  %v0_10001a50 = load i32, i32* @r28, align 4
  %v0_10001a58 = load i32, i32* @r29, align 4
  store i32 %v0_10001a58, i32* %r3.global-to-local, align 4
  store i32 268442208, i32* @lr, align 4
  %v4_10001a5c = inttoptr i32 %v0_10001a50 to i32*
  %v5_10001a5c = call i32 @function_100006a8(i32 %v0_10001a58, i32* %v4_10001a5c, i32 7, i32 65535)
  %v0_10001a60 = load i32, i32* @r28, align 4
  %v5_10001a6c = trunc i32 %v5_10001a5c to i16
  %v0_10001a74 = load i32, i32* @r29, align 4
  store i32 %v0_10001a74, i32* %r3.global-to-local, align 4
  store i32 268442236, i32* @lr, align 4
  %v4_10001a78 = inttoptr i32 %v0_10001a60 to i32*
  %v5_10001a78 = call i32 @function_100006a8(i32 %v0_10001a74, i32* %v4_10001a78, i32 11, i32 1)
  %v0_10001a7c = load i32, i32* @r28, align 4
  %v1_10001a80 = urem i32 %v5_10001a78, 256
  %v0_10001a90 = load i32, i32* @r29, align 4
  store i32 %v0_10001a90, i32* %r3.global-to-local, align 4
  store i32 268442264, i32* @lr, align 4
  %v4_10001a94 = inttoptr i32 %v0_10001a7c to i32*
  %v5_10001a94 = call i32 @function_100006a8(i32 %v0_10001a90, i32* %v4_10001a94, i32 12, i32 1)
  %v0_10001a98 = load i32, i32* @r28, align 4
  %v1_10001aa4 = urem i32 %v5_10001a94, 256
  %v0_10001aa8 = load i32, i32* @r29, align 4
  store i32 %v0_10001aa8, i32* %r3.global-to-local, align 4
  store i32 268442288, i32* @lr, align 4
  %v4_10001aac = inttoptr i32 %v0_10001a98 to i32*
  %v5_10001aac = call i32 @function_100006a8(i32 %v0_10001aa8, i32* %v4_10001aac, i32 13, i32 1)
  %v0_10001ab0 = load i32, i32* @r28, align 4
  %v1_10001abc = urem i32 %v5_10001aac, 256
  %v0_10001ac0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442312, i32* @lr, align 4
  %v4_10001ac4 = inttoptr i32 %v0_10001ab0 to i32*
  %v5_10001ac4 = call i32 @function_100006a8(i32 %v0_10001ac0, i32* %v4_10001ac4, i32 14, i32 1)
  %v0_10001ac8 = load i32, i32* @r28, align 4
  %v1_10001ad4 = urem i32 %v5_10001ac4, 256
  %v0_10001ad8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ad8, i32* %r3.global-to-local, align 4
  store i32 268442336, i32* @lr, align 4
  %v4_10001adc = inttoptr i32 %v0_10001ac8 to i32*
  %v5_10001adc = call i32 @function_100006a8(i32 %v0_10001ad8, i32* %v4_10001adc, i32 15, i32 1)
  %v0_10001ae0 = load i32, i32* @r28, align 4
  %v1_10001aec = urem i32 %v5_10001adc, 256
  %v0_10001af0 = load i32, i32* @r29, align 4
  store i32 %v0_10001af0, i32* %r3.global-to-local, align 4
  store i32 268442360, i32* @lr, align 4
  %v4_10001af4 = inttoptr i32 %v0_10001ae0 to i32*
  %v5_10001af4 = call i32 @function_100006a8(i32 %v0_10001af0, i32* %v4_10001af4, i32 16, i32 1)
  %v0_10001b00 = load i32, i32* @r28, align 4
  %v1_10001b04 = urem i32 %v5_10001af4, 256
  %v0_10001b08 = load i32, i32* @r29, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  store i32 268442384, i32* @lr, align 4
  %v4_10001b0c = inttoptr i32 %v0_10001b00 to i32*
  %v5_10001b0c = call i32 @function_100006a8(i32 %v0_10001b08, i32* %v4_10001b0c, i32 0, i32 768)
  %v0_10001b10 = load i32, i32* @r28, align 4
  store i32 %v5_10001b0c, i32* %r25.global-to-local, align 4
  %v0_10001b20 = load i32, i32* @r29, align 4
  store i32 %v0_10001b20, i32* %r3.global-to-local, align 4
  store i32 268442408, i32* @lr, align 4
  %v4_10001b24 = inttoptr i32 %v0_10001b10 to i32*
  %v5_10001b24 = call i32 @function_100006a8(i32 %v0_10001b20, i32* %v4_10001b24, i32 1, i32 1)
  %v1_10001b2c = urem i32 %v5_10001b24, 256
  store i32 %v1_10001b2c, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442428, i32* @lr, align 4
  %v3_10001b38 = call i32 @function_100095d4(i32 2, i32 3, i32 6)
  store i32 %v3_10001b38, i32* %r3.global-to-local, align 4
  %v3_10001b3c = icmp eq i32 %v3_10001b38, -1
  store i1 %v3_10001b3c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b38, i32* %r24.global-to-local, align 4
  br i1 %v3_10001b3c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001b48

dec_label_pc_10001b48:                            ; preds = %dec_label_pc_10001950
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b54 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268442468, i32* @lr, align 4
  %v4_10001b60 = call i32 @function_10009598(i32 0, i32 3, i32 %v2_10001b54, i32 4)
  store i32 %v4_10001b60, i32* %r3.global-to-local, align 4
  %v3_10001b64 = icmp eq i32 %v4_10001b60, -1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001cf4, label %dec_label_pc_10001b6c

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001b48
  %v0_10001b6c = load i32, i32* %r21.global-to-local, align 4
  %v1_10001b6c = icmp slt i32 %v0_10001b6c, 0
  %v3_10001b6c = icmp eq i32 %v0_10001b6c, 0
  store i1 %v1_10001b6c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10001b6c, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001b78 = load i32, i32* @r31, align 4
  %v1_10001b78 = urem i32 %v0_10001b78, 65536
  store i32 %v1_10001b78, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10001b6c, 1
  br i1 %tmp49, label %dec_label_pc_10001e94, label %dec_label_pc_10001b80

dec_label_pc_10001b80:                            ; preds = %dec_label_pc_10001b6c
  %v4_10001b80 = sext i16 %v5_10001a6c to i32
  store i32 %v4_10001b80, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10001c24 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10001c30 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10001c34 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10001c6c = zext i16 %tmp13 to i32
  %v1_10001c9c = and i32 %tmp, 1179648
  %v3_10001db0 = icmp eq i32 %v1_10001a44, 0
  %v4_10001dd0 = sext i8 %v5_100019f8 to i32
  %v4_10001dd8 = sext i8 %v5_10001a30 to i32
  %v1_10001ca0 = and i32 %tmp, 327680
  %v3_10001ca0 = icmp eq i32 %v1_10001ca0, 0
  %v4_10001ca8 = icmp eq i32 %v1_10001c9c, 1179648
  br label %dec_label_pc_10001b8c

dec_label_pc_10001b8c:                            ; preds = %dec_label_pc_10001e80, %dec_label_pc_10001cb4, %dec_label_pc_10001b80
  %v0_10001b8c = load i32, i32* %r25.global-to-local, align 4
  %v1_10001b8c = add i32 %v0_10001b8c, 40
  store i32 %v1_10001b8c, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c53 = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c53, i32* %r3.global-to-local, align 4
  %v3_10001ba055 = icmp eq i32 %v3_10001b9c53, -1
  store i1 %v3_10001ba055, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c53, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba055, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001bac:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c
  store i32 3, i32* @r4, align 4
  store i32 268442556, i32* @lr, align 4
  %v1_10001bb8 = call i32 @function_1000879c(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10001bc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001bc4, i32* %r3.global-to-local, align 4
  store i32 268442576, i32* @lr, align 4
  %v2_10001bcc = call i32 @function_1000879c(i32 %v0_10001bc4)
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  %v3_10001bd0 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001bd8 = mul i32 %v3_10001bd0, 24
  store i32 %v1_10001bd8, i32* %r0.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v1_10001bd8
  store i32 %v2_10001be0, i32* %r11.global-to-local, align 4
  %v1_10001be4 = add i32 %v2_10001be0, 20
  %v2_10001be4 = inttoptr i32 %v1_10001be4 to i8*
  %v3_10001be4 = load i8, i8* %v2_10001be4, align 1
  %v4_10001be4 = zext i8 %v3_10001be4 to i32
  store i32 %v4_10001be4, i32* %r9.global-to-local, align 4
  %v3_10001be8 = icmp eq i8 %v3_10001be4, 31
  store i1 %v3_10001be8, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10001be4, 32
  %v1_10001cc0 = add i32 %v2_10001be0, 16
  %v2_10001cc0 = inttoptr i32 %v1_10001cc0 to i32*
  %v3_10001cc0 = load i32, i32* %v2_10001cc0, align 4
  br i1 %tmp50, label %dec_label_pc_10001cc0, label %dec_label_pc_10001bf0

dec_label_pc_10001bf0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r0.global-to-local, align 4
  %v0_10001bf8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001bf8, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001bfc:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.0 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  store i32 %v4_10001b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001ce8, %dec_label_pc_10001bfc
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10001ce8 ], [ %stack_var_-396.0, %dec_label_pc_10001bfc ]
  %storemerge = phi i16 [ %v1_10001ce8, %dec_label_pc_10001ce8 ], [ %v5_10001a6c, %dec_label_pc_10001bfc ]
  %v0_10001c0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001c14.19 to i32), i32* @lr, align 4
  %v0_10001c10 = call i32 @function_100093d4()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268442652, i32* @lr, align 4
  %v0_10001c18 = call i32 @function_10008c54()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %v0_10001c18, i32* @r31, align 4
  %v4_10001c60 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10001c70 = zext i16 %storemerge to i32
  %v4_10001c74 = icmp eq i16 %storemerge, %tmp13
  %v4_10001c60.not = xor i1 %v4_10001c60, true
  br label %dec_label_pc_10001c20

dec_label_pc_10001c20:                            ; preds = %dec_label_pc_10001c7c, %dec_label_pc_10001c04
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10001c30, i32* %r7.global-to-local, align 4
  store i32 %v2_10001c34, i32* %r8.global-to-local, align 4
  %v0_10001c38 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c38, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268442692, i32* @lr, align 4
  %v6_10001c40 = call i32 @function_100094e0(i32 %v0_10001c38, i32 %v2_10001c24, i32 256, i32 16384, i32 %v2_10001c30, i32 %v2_10001c34)
  store i32 %v6_10001c40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10001c4c = icmp eq i32 %v6_10001c40, -1
  store i1 %v3_10001c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001c4c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001c58

dec_label_pc_10001c58:                            ; preds = %dec_label_pc_10001c20
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10001c60, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10001c40, 41
  %or.cond = or i1 %tmp51, %v4_10001c60.not
  br i1 %or.cond, label %dec_label_pc_10001c7c, label %dec_label_pc_10001c6c

dec_label_pc_10001c6c:                            ; preds = %dec_label_pc_10001c58
  store i32 %v4_10001c6c, i32* %r0.global-to-local, align 4
  store i32 %v4_10001c70, i32* %r8.global-to-local, align 4
  store i1 %v4_10001c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c74, label %dec_label_pc_10001c98, label %dec_label_pc_10001c7c

dec_label_pc_10001c7c:                            ; preds = %dec_label_pc_10001c58, %dec_label_pc_10001cb0, %dec_label_pc_10001c6c
  store i32 268442752, i32* @lr, align 4
  %v0_10001c7c = call i32 @function_10008c54()
  %v0_10001c80 = load i32, i32* @r31, align 4
  %v2_10001c80 = sub i32 %v0_10001c7c, %v0_10001c80
  store i32 %v2_10001c80, i32* %r3.global-to-local, align 4
  %v3_10001c84 = icmp eq i32 %v2_10001c80, 10
  store i1 %v3_10001c84, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10001c80, 11
  br i1 %tmp52, label %dec_label_pc_10001c20, label %dec_label_pc_10001c8c

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c7c
  %v0_10001c8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c8c, i32* %r3.global-to-local, align 4
  store i32 268442772, i32* @lr, align 4
  %v0_10001c90 = call i32 @function_10008884()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c, i32* %r3.global-to-local, align 4
  %v3_10001ba0 = icmp eq i32 %v3_10001b9c, -1
  store i1 %v3_10001ba0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba0, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001c98:                            ; preds = %dec_label_pc_10001c6c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c9c, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10001ca8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001ca8, label %dec_label_pc_10001d5c, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c98
  br i1 %v3_10001ca0, label %dec_label_pc_10001c7c, label %dec_label_pc_10001cb4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001cb0
  %v0_10001cb4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001cb4, i32* %r3.global-to-local, align 4
  store i32 268442812, i32* @lr, align 4
  %v0_10001cb8 = call i32 @function_10008884()
  store i32 %v0_10001cb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b8c

dec_label_pc_10001cc0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r29.global-to-local, align 4
  %v0_10001cc4 = call i32 @function_10005d24()
  store i32 %v0_10001cc4, i32* %r3.global-to-local, align 4
  %v3_10001cc8 = load i32, i32* %stack_var_-408, align 4
  %v1_10001ccc = mul i32 %v3_10001cc8, 24
  %v1_10001cd0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001cd0 = add i32 %v1_10001cd0, %v1_10001ccc
  store i32 %v2_10001cd0, i32* %r9.global-to-local, align 4
  %v1_10001cd4 = add i32 %v2_10001cd0, 20
  %v2_10001cd4 = inttoptr i32 %v1_10001cd4 to i8*
  %v3_10001cd4 = load i8, i8* %v2_10001cd4, align 1
  %v4_10001cd4 = zext i8 %v3_10001cd4 to i32
  store i32 %v4_10001cd4, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10001cd4, 64
  %v2_10001cd8 = zext i8 %tmp56 to i32
  %v3_10001cd8 = lshr i32 %v0_10001cc4, %v2_10001cd8
  store i32 %v3_10001cd8, i32* %r3.global-to-local, align 4
  %v0_10001cdc = load i32, i32* %r29.global-to-local, align 4
  %v2_10001cdc = add i32 %v3_10001cd8, %v0_10001cdc
  store i32 %v2_10001cdc, i32* %r29.global-to-local, align 4
  %v0_10001ce4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001ce4, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.2 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  %v0_10001ce8 = call i32 @function_10005d24()
  %v1_10001ce8 = trunc i32 %v0_10001ce8 to i16
  store i32 %v0_10001ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b48
  %v0_10001cf4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001cf4, i32* %r3.global-to-local, align 4
  store i32 268442876, i32* @lr, align 4
  %v0_10001cf8 = call i32 @function_10008884()
  store i32 %v0_10001cf8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001cfc

dec_label_pc_10001cfc:                            ; preds = %dec_label_pc_10001c20, %dec_label_pc_10001950, %dec_label_pc_10001cf4
  store i32 %v0_10001968, i32* %r0.global-to-local, align 4
  %v1_10001d10 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001958)
  store i32 %v0_100019a0, i32* %r28.global-to-local, align 4
  store i32 %v0_100019a8, i32* %r29.global-to-local, align 4
  %v0_10001d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001d58

dec_label_pc_10001d5c:                            ; preds = %dec_label_pc_10001c98
  %v3_10001d5c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d5c, i32* %r29.global-to-local, align 4
  %v0_10001d60 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001d60, i32* @r3, align 4
  %v0_10001d64 = load i32, i32* @r30, align 4
  %v1_10001d64 = add i32 %v0_10001d64, 2
  %v2_10001d64 = inttoptr i32 %v1_10001d64 to i16*
  %v3_10001d64 = load i16, i16* %v2_10001d64, align 2
  %v4_10001d64 = zext i16 %v3_10001d64 to i32
  store i32 %v4_10001d64, i32* %r11.global-to-local, align 4
  %v1_10001d68 = mul i32 %v3_10001d5c, 16
  store i32 %v1_10001d68, i32* %r9.global-to-local, align 4
  %v1_10001d6c = mul i32 %v3_10001d5c, 4
  store i32 %v1_10001d6c, i32* @r29, align 4
  %v1_10001d70 = load i32, i32* %r22.global-to-local, align 4
  %v3_10001d70 = add i32 %v1_10001d70, %v1_10001d68
  %v4_10001d70 = inttoptr i32 %v3_10001d70 to i32*
  store i32 %tmp14, i32* %v4_10001d70, align 4
  %v0_10001d74 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001d74 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d74 = add i32 %v1_10001d74, %v0_10001d74
  store i32 %v2_10001d74, i32* %r9.global-to-local, align 4
  %v0_10001d78 = load i32, i32* %r8.global-to-local, align 4
  %v1_10001d78 = trunc i32 %v0_10001d78 to i16
  %v3_10001d78 = add i32 %v2_10001d74, 14
  %v4_10001d78 = inttoptr i32 %v3_10001d78 to i16*
  store i16 %v1_10001d78, i16* %v4_10001d78, align 2
  %v0_10001d7c = load i32, i32* @r30, align 4
  %v1_10001d7c = add i32 %v0_10001d7c, 4
  %v2_10001d7c = inttoptr i32 %v1_10001d7c to i32*
  %v3_10001d7c = load i32, i32* %v2_10001d7c, align 4
  store i32 %v3_10001d7c, i32* %r0.global-to-local, align 4
  %v0_10001d80 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001d80 = trunc i32 %v0_10001d80 to i16
  %v2_10001d80 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001d80 = add i32 %v2_10001d80, 12
  %v4_10001d80 = inttoptr i32 %v3_10001d80 to i16*
  store i16 %v1_10001d80, i16* %v4_10001d80, align 2
  %v0_10001d84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d84 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d84 = add i32 %v1_10001d84, 4
  %v3_10001d84 = inttoptr i32 %v2_10001d84 to i32*
  store i32 %v0_10001d84, i32* %v3_10001d84, align 4
  %v0_10001d88 = load i32, i32* @r30, align 4
  %v1_10001d88 = add i32 %v0_10001d88, 8
  %v2_10001d88 = inttoptr i32 %v1_10001d88 to i32*
  %v3_10001d88 = load i32, i32* %v2_10001d88, align 4
  store i32 %v3_10001d88, i32* %r0.global-to-local, align 4
  %v1_10001d8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d8c = add i32 %v1_10001d8c, 8
  %v3_10001d8c = inttoptr i32 %v2_10001d8c to i32*
  store i32 %v3_10001d88, i32* %v3_10001d8c, align 4
  store i32 268443028, i32* @lr, align 4
  %v0_10001d90 = call i32 @function_100097d8()
  store i32 %v0_10001d90, i32* %r3.global-to-local, align 4
  %v3_10001d94 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d94, i32* %r0.global-to-local, align 4
  %v1_10001d98 = load i32, i32* @r29, align 4
  %v2_10001d98 = load i32, i32* %r23.global-to-local, align 4
  %v3_10001d98 = add i32 %v2_10001d98, %v1_10001d98
  %v4_10001d98 = inttoptr i32 %v3_10001d98 to i32*
  store i32 %v0_10001d90, i32* %v4_10001d98, align 4
  %v0_10001d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d9c = mul i32 %v0_10001d9c, 4
  store i32 %v1_10001d9c, i32* %r0.global-to-local, align 4
  %v0_10001da0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001da0 = add i32 %v0_10001da0, %v1_10001d9c
  %v3_10001da0 = inttoptr i32 %v2_10001da0 to i32*
  %v4_10001da0 = load i32, i32* %v3_10001da0, align 4
  store i32 %v4_10001da0, i32* @r31, align 4
  store i32 %v1_10001a44, i32* %r0.global-to-local, align 4
  %v1_10001da8 = inttoptr i32 %v4_10001da0 to i32*
  %v2_10001da8 = load i32, i32* %v1_10001da8, align 4
  store i32 %v2_10001da8, i32* %r9.global-to-local, align 4
  %v1_10001dac = add i32 %v4_10001da0, 20
  store i32 %v1_10001dac, i32* @r30, align 4
  store i1 %v3_10001db0, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10001db8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001db8, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10001dc0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001dc4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc4 = trunc i32 %v0_10001dc4 to i16
  %v2_10001dc4 = load i32, i32* @r31, align 4
  %v3_10001dc4 = add i32 %v2_10001dc4, 4
  %v4_10001dc4 = inttoptr i32 %v3_10001dc4 to i16*
  store i16 %v1_10001dc4, i16* %v4_10001dc4, align 2
  %v1_10001dc8 = load i32, i32* @r31, align 4
  %v2_10001dc8 = inttoptr i32 %v1_10001dc8 to i32*
  store i32 %v1_10001dc0, i32* %v2_10001dc8, align 4
  %v0_10001dcc = load i32, i32* %r26.global-to-local, align 4
  %v1_10001dcc = trunc i32 %v0_10001dcc to i16
  %v2_10001dcc = load i32, i32* @r31, align 4
  %v3_10001dcc = add i32 %v2_10001dcc, 2
  %v4_10001dcc = inttoptr i32 %v3_10001dcc to i16*
  store i16 %v1_10001dcc, i16* %v4_10001dcc, align 2
  store i32 %v4_10001dd0, i32* %r9.global-to-local, align 4
  %v2_10001dd4 = load i32, i32* @r31, align 4
  %v3_10001dd4 = add i32 %v2_10001dd4, 1
  %v4_10001dd4 = inttoptr i32 %v3_10001dd4 to i8*
  store i8 %v5_100019f8, i8* %v4_10001dd4, align 1
  store i32 %v4_10001dd8, i32* %r0.global-to-local, align 4
  %v2_10001ddc = load i32, i32* @r31, align 4
  %v3_10001ddc = add i32 %v2_10001ddc, 8
  %v4_10001ddc = inttoptr i32 %v3_10001ddc to i8*
  store i8 %v5_10001a30, i8* %v4_10001ddc, align 1
  %v0_10001de0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001de0, label %dec_label_pc_10001dec, label %dec_label_pc_10001de4

dec_label_pc_10001de4:                            ; preds = %dec_label_pc_10001d5c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = add i32 %v2_10001de8, 6
  %v4_10001de8 = inttoptr i32 %v3_10001de8 to i16*
  store i16 16384, i16* %v4_10001de8, align 2
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %dec_label_pc_10001d5c, %dec_label_pc_10001de4
  %v2_10001df4 = load i32, i32* @r31, align 4
  %v3_10001df4 = add i32 %v2_10001df4, 9
  %v4_10001df4 = inttoptr i32 %v3_10001df4 to i8*
  store i8 6, i8* %v4_10001df4, align 1
  %v3_10001df8 = load i32, i32* @global_var_1001ba00.14, align 4
  store i32 %v3_10001df8, i32* %r0.global-to-local, align 4
  %v1_10001dfc = load i32, i32* @r31, align 4
  %v2_10001dfc = add i32 %v1_10001dfc, 12
  %v3_10001dfc = inttoptr i32 %v2_10001dfc to i32*
  store i32 %v3_10001df8, i32* %v3_10001dfc, align 4
  %v3_10001e00 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e04 = mul i32 %v3_10001e00, 16
  store i32 %v1_10001e04, i32* %r9.global-to-local, align 4
  %v1_10001e08 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001e08 = add i32 %v1_10001e08, %v1_10001e04
  %v3_10001e08 = inttoptr i32 %v2_10001e08 to i32*
  %v4_10001e08 = load i32, i32* %v3_10001e08, align 4
  store i32 %v4_10001e08, i32* %r0.global-to-local, align 4
  store i32 %v2_10001e08, i32* %r9.global-to-local, align 4
  %v1_10001e10 = add i32 %v2_10001e08, 12
  %v2_10001e10 = inttoptr i32 %v1_10001e10 to i16*
  %v3_10001e10 = load i16, i16* %v2_10001e10, align 2
  %v4_10001e10 = zext i16 %v3_10001e10 to i32
  store i32 %v4_10001e10, i32* %r11.global-to-local, align 4
  %v1_10001e14 = load i32, i32* @r31, align 4
  %v2_10001e14 = add i32 %v1_10001e14, 16
  %v3_10001e14 = inttoptr i32 %v2_10001e14 to i32*
  store i32 %v4_10001e08, i32* %v3_10001e14, align 4
  %v0_10001e18 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e18 = trunc i32 %v0_10001e18 to i16
  %v2_10001e18 = load i32, i32* @r31, align 4
  %v3_10001e18 = add i32 %v2_10001e18, 20
  %v4_10001e18 = inttoptr i32 %v3_10001e18 to i16*
  store i16 %v1_10001e18, i16* %v4_10001e18, align 2
  %v0_10001e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 8
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v0_10001e20 = load i32, i32* @r30, align 4
  %v1_10001e20 = add i32 %v0_10001e20, 12
  %v2_10001e20 = inttoptr i32 %v1_10001e20 to i32*
  %v3_10001e20 = load i32, i32* %v2_10001e20, align 4
  store i32 %v3_10001e20, i32* %r11.global-to-local, align 4
  %v2_10001e24 = add i32 %v0_10001e20, 4
  %v3_10001e24 = inttoptr i32 %v2_10001e24 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e24, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10001e2c = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10001e2c, i32* %r11.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e30 = add i32 %v0_10001e30, 14
  %v2_10001e30 = inttoptr i32 %v1_10001e30 to i16*
  %v3_10001e30 = load i16, i16* %v2_10001e30, align 2
  %v4_10001e30 = zext i16 %v3_10001e30 to i32
  store i32 %v4_10001e30, i32* %r0.global-to-local, align 4
  %v1_10001e34 = add i32 %v0_10001e30, 4
  %v2_10001e34 = inttoptr i32 %v1_10001e34 to i32*
  %v3_10001e34 = load i32, i32* %v2_10001e34, align 4
  store i32 %v3_10001e34, i32* %r10.global-to-local, align 4
  %v1_10001e38 = or i32 %v1_10001e2c, 1114112
  store i32 %v1_10001e38, i32* %r11.global-to-local, align 4
  %v2_10001e3c = load i32, i32* @r30, align 4
  %v3_10001e3c = add i32 %v2_10001e3c, 2
  %v4_10001e3c = inttoptr i32 %v3_10001e3c to i16*
  store i16 %v3_10001e30, i16* %v4_10001e3c, align 2
  %v0_10001e40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001e40 = load i32, i32* @r30, align 4
  %v2_10001e40 = add i32 %v1_10001e40, 8
  %v3_10001e40 = inttoptr i32 %v2_10001e40 to i32*
  store i32 %v0_10001e40, i32* %v3_10001e40, align 4
  %v0_10001e44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e44 = load i32, i32* @r30, align 4
  %v2_10001e44 = add i32 %v1_10001e44, 12
  %v3_10001e44 = inttoptr i32 %v2_10001e44 to i32*
  store i32 %v0_10001e44, i32* %v3_10001e44, align 4
  %v0_10001e48 = call i32 @function_10005d24()
  %v1_10001e48 = trunc i32 %v0_10001e48 to i16
  store i32 %v1_10001a80, i32* %r9.global-to-local, align 4
  %v3_10001e50 = load i32, i32* @r30, align 4
  %v4_10001e50 = add i32 %v3_10001e50, 14
  %v5_10001e50 = inttoptr i32 %v4_10001e50 to i16*
  store i16 %v1_10001e48, i16* %v5_10001e50, align 2
  %v0_10001e54 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001e54, i32* @r4, align 4
  %v0_10001e58 = load i32, i32* @r31, align 4
  %v1_10001e58 = add i32 %v0_10001e58, 40
  store i32 %v1_10001e58, i32* @r3, align 4
  %v0_10001e5c = load i32, i32* @r30, align 4
  %v1_10001e5c = add i32 %v0_10001e5c, 12
  %v2_10001e5c = inttoptr i32 %v1_10001e5c to i32*
  %v3_10001e5c = load i32, i32* %v2_10001e5c, align 4
  store i32 %v3_10001e5c, i32* %r0.global-to-local, align 4
  %v1_10001e60 = call i32 @__asm_rlwimi(i32 %v1_10001a80, i32 21, i32 10, i32 10)
  store i32 %v1_10001e60, i32* %r0.global-to-local, align 4
  %v1_10001e64 = call i32 @__asm_rlwimi(i32 %v1_10001aa4, i32 20, i32 11, i32 11)
  store i32 %v1_10001e64, i32* %r0.global-to-local, align 4
  %v1_10001e68 = call i32 @__asm_rlwimi(i32 %v1_10001abc, i32 19, i32 12, i32 12)
  store i32 %v1_10001e68, i32* %r0.global-to-local, align 4
  %v1_10001e6c = call i32 @__asm_rlwimi(i32 %v1_10001ad4, i32 18, i32 13, i32 13)
  store i32 %v1_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = call i32 @__asm_rlwimi(i32 %v1_10001aec, i32 17, i32 14, i32 14)
  store i32 %v1_10001e70, i32* %r0.global-to-local, align 4
  %v1_10001e74 = call i32 @__asm_rlwimi(i32 %v1_10001b04, i32 16, i32 15, i32 15)
  store i32 %v1_10001e74, i32* %r0.global-to-local, align 4
  %v1_10001e78 = load i32, i32* @r30, align 4
  %v2_10001e78 = add i32 %v1_10001e78, 12
  %v3_10001e78 = inttoptr i32 %v2_10001e78 to i32*
  store i32 %v1_10001e74, i32* %v3_10001e78, align 4
  %v0_10001e7c = call i32 @function_10005ef8()
  store i32 %v0_10001e7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001e80

dec_label_pc_10001e80:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c, %dec_label_pc_10001dec
  %v3_10001e80 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e84 = add i32 %v3_10001e80, 1
  store i32 %v1_10001e84, i32* %r9.global-to-local, align 4
  %v1_10001e88 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001e88 = icmp slt i32 %v1_10001e84, %v1_10001e88
  %v4_10001e88 = icmp eq i32 %v1_10001e84, %v1_10001e88
  store i1 %v4_10001e88, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001e84, i32* %stack_var_-408, align 4
  br i1 %v2_10001e88, label %dec_label_pc_10001b8c, label %dec_label_pc_10001e94.loopexit

dec_label_pc_10001e94.loopexit:                   ; preds = %dec_label_pc_10001e80
  %v0_10001ea0.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001ea0.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10001e94

dec_label_pc_10001e94:                            ; preds = %dec_label_pc_10001e94.loopexit, %dec_label_pc_10001b6c
  %v1_10001ea0.pre = phi i1 [ %v1_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v1_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001ea0.pre = phi i1 [ %v0_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v3_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001e94 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001e94 = icmp eq i32 %v0_10001e94, 0
  store i1 %v3_10001e94, i1* %cr2_eq.global-to-local, align 1
  %v0_10001e98 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e98 = add i32 %v0_10001e98, 40
  store i32 %v1_10001e98, i32* %r26.global-to-local, align 4
  %v1_10001e9c = add i32 %v0_10001e98, 20
  store i32 %v1_10001e9c, i32* @r31, align 4
  br label %dec_label_pc_10001ea0.outer

dec_label_pc_10001ea0.outer:                      ; preds = %dec_label_pc_10001f74, %dec_label_pc_10001e94
  %v1_10001ea0.ph = phi i1 [ %v1_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v1_10001f74, %dec_label_pc_10001f74 ]
  %v0_10001ea0.ph = phi i1 [ %v0_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v0_10001f74, %dec_label_pc_10001f74 ]
  %v2_10001ea0 = or i1 %v1_10001ea0.ph, %v0_10001ea0.ph
  br label %dec_label_pc_10001ea0

dec_label_pc_10001ea0:                            ; preds = %dec_label_pc_10001ea0.outer, %dec_label_pc_10001ea0
  br i1 %v2_10001ea0, label %dec_label_pc_10001ea0, label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001ea0, %dec_label_pc_10001f74
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001eb4 = load i32, i32* %r19.global-to-local, align 4
  %v4_10001eb4 = icmp eq i32 %v0_10001eb4, 65535
  store i1 %v4_10001eb4, i1* %cr4_eq.global-to-local, align 1
  %v0_10001eb8 = load i32, i32* @r31, align 4
  %v1_10001eb8 = urem i32 %v0_10001eb8, 65536
  store i32 %v1_10001eb8, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001ec4

dec_label_pc_10001ec4:                            ; preds = %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, %dec_label_pc_10001ea4
  %v0_10001ed0 = phi i1 [ %v0_10001ed0.pre, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ %v4_10001eb4, %dec_label_pc_10001ea4 ]
  %v0_10001ec4 = phi i32 [ %v1_10001f64, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ 0, %dec_label_pc_10001ea4 ]
  %v1_10001ec4 = mul i32 %v0_10001ec4, 4
  store i32 %v1_10001ec4, i32* %r0.global-to-local, align 4
  %v0_10001ec8 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001ec8 = add i32 %v0_10001ec8, %v1_10001ec4
  %v3_10001ec8 = inttoptr i32 %v2_10001ec8 to i32*
  %v4_10001ec8 = load i32, i32* %v3_10001ec8, align 4
  store i32 %v4_10001ec8, i32* @r29, align 4
  %v1_10001ecc = add i32 %v4_10001ec8, 20
  store i32 %v1_10001ecc, i32* %r28.global-to-local, align 4
  br i1 %v0_10001ed0, label %dec_label_pc_10001f7c, label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4
  %v1_10001ed4 = add i32 %v4_10001ec8, 40
  store i32 %v1_10001ed4, i32* @r3, align 4
  %v0_10001ed8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001ed8, i32* @r4, align 4
  %v0_10001edc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001edc, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001ee0:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c, %dec_label_pc_10001f90
  %v2_10001ee0 = phi i32 [ %v4_10001ec8, %dec_label_pc_10001ed4 ], [ %v0_10001f88, %dec_label_pc_10001f7c ], [ %v2_10001ee0.pre, %dec_label_pc_10001f90 ]
  %v0_10001ee0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ee0 = trunc i32 %v0_10001ee0 to i16
  %v3_10001ee0 = add i32 %v2_10001ee0, 10
  %v4_10001ee0 = inttoptr i32 %v3_10001ee0 to i16*
  store i16 %v1_10001ee0, i16* %v4_10001ee0, align 2
  %v0_10001ee8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ee8, i32* @r3, align 4
  %v2_10001eec = call i32 @function_100043cc(i32 %v0_10001ee8, i32 20)
  %v3_10001eec = trunc i32 %v2_10001eec to i16
  store i32 %v2_10001eec, i32* %r3.global-to-local, align 4
  %v3_10001ef0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001ef0, i32* %r9.global-to-local, align 4
  %v3_10001ef4 = load i32, i32* @r29, align 4
  %v4_10001ef4 = add i32 %v3_10001ef4, 10
  %v5_10001ef4 = inttoptr i32 %v4_10001ef4 to i16*
  store i16 %v3_10001eec, i16* %v5_10001ef4, align 2
  %v0_10001ef8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ef8, i32* @r4, align 4
  %v0_10001efc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001efc = mul i32 %v0_10001efc, 16
  store i32 %v1_10001efc, i32* %r9.global-to-local, align 4
  %v0_10001f00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001f00 = trunc i32 %v0_10001f00 to i16
  %v3_10001f00 = add i32 %v0_10001ef8, 16
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 %v1_10001f00, i16* %v4_10001f00, align 2
  %v0_10001f04 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001f04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f04 = add i32 %v1_10001f04, %v0_10001f04
  store i32 %v2_10001f04, i32* %r9.global-to-local, align 4
  %v0_10001f08 = load i32, i32* @r30, align 4
  %v1_10001f0c = add i32 %v2_10001f04, 4
  %v2_10001f0c = inttoptr i32 %v1_10001f0c to i32*
  %v3_10001f0c = load i32, i32* %v2_10001f0c, align 4
  store i32 %v3_10001f0c, i32* %r11.global-to-local, align 4
  %v0_10001f10 = load i32, i32* @r31, align 4
  %v0_10001f14 = load i32, i32* @r29, align 4
  store i32 %v0_10001f14, i32* %r3.global-to-local, align 4
  %v1_10001f18 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f18 = add i32 %v1_10001f18, 4
  %v3_10001f18 = inttoptr i32 %v2_10001f18 to i32*
  store i32 %v3_10001f0c, i32* %v3_10001f18, align 4
  %v0_10001f1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10001f1c = add i32 %v0_10001f1c, 1
  store i32 %v1_10001f1c, i32* %r11.global-to-local, align 4
  %v1_10001f20 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 4
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f1c, i32* %v3_10001f20, align 4
  %v0_10001f24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001f24 = add i32 %v0_10001f24, 8
  %v2_10001f24 = inttoptr i32 %v1_10001f24 to i32*
  %v3_10001f24 = load i32, i32* %v2_10001f24, align 4
  store i32 %v3_10001f24, i32* %r0.global-to-local, align 4
  %v1_10001f28 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f28 = add i32 %v1_10001f28, 8
  %v3_10001f28 = inttoptr i32 %v2_10001f28 to i32*
  store i32 %v3_10001f24, i32* %v3_10001f28, align 4
  %v4_10001f2c = call i32 @function_10004430(i32 %v0_10001f14, i32 %v0_10001ef8, i32 %v0_10001f08, i32 %v0_10001f10)
  %v5_10001f2c = trunc i32 %v4_10001f2c to i16
  store i32 %v4_10001f2c, i32* %r3.global-to-local, align 4
  %v3_10001f30 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f30, i32* %r7.global-to-local, align 4
  %v0_10001f34 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001f34 = add i32 %v0_10001f34, 2
  %v2_10001f34 = inttoptr i32 %v1_10001f34 to i16*
  %v3_10001f34 = load i16, i16* %v2_10001f34, align 2
  %v4_10001f34 = zext i16 %v3_10001f34 to i32
  store i32 %v4_10001f34, i32* %r0.global-to-local, align 4
  %v0_10001f38 = load i32, i32* @r29, align 4
  %v1_10001f3c = mul i32 %v3_10001f30, 24
  store i32 %v1_10001f3c, i32* %r7.global-to-local, align 4
  %v4_10001f40 = add i32 %v0_10001f34, 16
  %v5_10001f40 = inttoptr i32 %v4_10001f40 to i16*
  store i16 %v5_10001f2c, i16* %v5_10001f40, align 2
  %v0_10001f44 = load i32, i32* %r26.global-to-local, align 4
  %v0_10001f48 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001f48, i32* %r3.global-to-local, align 4
  %v0_10001f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_10001f4c = load i32, i32* %r20.global-to-local, align 4
  %v2_10001f4c = add i32 %v1_10001f4c, %v0_10001f4c
  store i32 %v2_10001f4c, i32* %r7.global-to-local, align 4
  %v0_10001f54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f54 = trunc i32 %v0_10001f54 to i16
  %v3_10001f54 = add i32 %v2_10001f4c, 2
  %v4_10001f54 = inttoptr i32 %v3_10001f54 to i16*
  store i16 %v1_10001f54, i16* %v4_10001f54, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268443488, i32* @lr, align 4
  %v6_10001f5c = call i32 @function_10009558(i32 %v0_10001f48, i32 %v0_10001f38, i32 %v0_10001f44, i32 16384, i32 %v2_10001f4c, i32 16)
  store i32 %v6_10001f5c, i32* %r3.global-to-local, align 4
  %v3_10001f60 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f60, i32* %r9.global-to-local, align 4
  %v1_10001f64 = add i32 %v3_10001f60, 1
  store i32 %v1_10001f64, i32* %r0.global-to-local, align 4
  %v1_10001f68 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001f68 = icmp slt i32 %v1_10001f64, %v1_10001f68
  %v4_10001f68 = icmp eq i32 %v1_10001f64, %v1_10001f68
  store i1 %v4_10001f68, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001f64, i32* %stack_var_-408, align 4
  br i1 %v2_10001f68, label %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, label %dec_label_pc_10001f74

dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge: ; preds = %dec_label_pc_10001ee0
  %v0_10001ed0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10001ec4

dec_label_pc_10001f74:                            ; preds = %dec_label_pc_10001ee0
  %v0_10001f74 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001f74 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10001f74 = or i1 %v0_10001f74, %v1_10001f74
  br i1 %v2_10001f74, label %dec_label_pc_10001ea0.outer, label %dec_label_pc_10001ea4

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001ec4
  %v0_10001f7c = call i32 @function_10005d24()
  %v1_10001f7c = trunc i32 %v0_10001f7c to i16
  %v0_10001f80 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001f80, i32* @r4, align 4
  %v3_10001f84 = load i32, i32* @r29, align 4
  %v4_10001f84 = add i32 %v3_10001f84, 4
  %v5_10001f84 = inttoptr i32 %v4_10001f84 to i16*
  store i16 %v1_10001f7c, i16* %v5_10001f84, align 2
  %v0_10001f88 = load i32, i32* @r29, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 40
  store i32 %v1_10001f88, i32* @r3, align 4
  %v0_10001f8c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001f8c, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c
  %v0_10001f90 = call i32 @function_10005ef8()
  store i32 %v0_10001f90, i32* %r3.global-to-local, align 4
  %v2_10001ee0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001ee0

; uselistorder directives
  uselistorder i32 %v0_10001f88, { 1, 0 }
  uselistorder i1 %v1_10001f74, { 1, 0 }
  uselistorder i1 %v0_10001f74, { 1, 0 }
  uselistorder i32 %v1_10001f64, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10001f2c, { 1, 0 }
  uselistorder i32 %v0_10001ef8, { 1, 0, 2 }
  uselistorder i32 %v2_10001eec, { 1, 0 }
  uselistorder i32 %v1_10001ec4, { 1, 0 }
  uselistorder i32 %v1_10001e84, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001e08, { 1, 0, 2 }
  uselistorder i32 %v1_10001e04, { 1, 0 }
  uselistorder i32 %v1_10001d9c, { 1, 0 }
  uselistorder i32 %v1_10001d68, { 1, 0 }
  uselistorder i32 %v0_10001ce8, { 1, 0 }
  uselistorder i32 %v2_10001cdc, { 1, 2, 0 }
  uselistorder i1 %v4_10001c60, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10001cc0, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10001c9c, { 1, 0 }
  uselistorder i32 %v1_10001a44, { 1, 0 }
  uselistorder i8 %v5_10001a30, { 1, 0 }
  uselistorder i8 %v5_100019f8, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268442528, { 1, 0 }
  uselistorder label %dec_label_pc_10001f90, { 1, 0 }
  uselistorder label %dec_label_pc_10001ee0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10001e80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001c7c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001bac, { 1, 0 }
}

define i32 @function_10001f98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001f98:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001f9c = load i32, i32* @lr, align 4
  store i32 %v0_10001f9c, i32* %r0.global-to-local, align 4
  %v0_10001fa0 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001fb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001fa0, i32* %r21.global-to-local, align 4
  %v0_10001fe8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001ff0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268443660, i32* @lr, align 4
  %v2_10002008 = call i32 @function_10009930(i32 16, i32 16)
  store i32 %v2_10002008, i32* %r22.global-to-local, align 4
  %v0_10002014 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002014, i32* %r3.global-to-local, align 4
  store i32 268443676, i32* @lr, align 4
  %v2_10002018 = call i32 @function_10009930(i32 %v0_10002014, i32 4)
  %v0_1000201c = load i32, i32* @r28, align 4
  store i32 %v2_10002018, i32* %r23.global-to-local, align 4
  %v0_1000202c = load i32, i32* @r29, align 4
  store i32 %v0_1000202c, i32* %r3.global-to-local, align 4
  store i32 268443700, i32* @lr, align 4
  %v4_10002030 = inttoptr i32 %v0_1000201c to i32*
  %v5_10002030 = call i32 @function_100006a8(i32 %v0_1000202c, i32* %v4_10002030, i32 2, i32 0)
  %v5_10002040 = trunc i32 %v5_10002030 to i8
  %v0_10002048 = load i32, i32* @r28, align 4
  %v0_1000204c = load i32, i32* @r29, align 4
  store i32 %v0_1000204c, i32* %r3.global-to-local, align 4
  store i32 268443732, i32* @lr, align 4
  %v4_10002050 = inttoptr i32 %v0_10002048 to i32*
  %v5_10002050 = call i32 @function_100006a8(i32 %v0_1000204c, i32* %v4_10002050, i32 3, i32 65535)
  %v0_10002054 = load i32, i32* @r28, align 4
  store i32 %v5_10002050, i32* @r31, align 4
  %v0_10002064 = load i32, i32* @r29, align 4
  store i32 %v0_10002064, i32* %r3.global-to-local, align 4
  store i32 268443756, i32* @lr, align 4
  %v4_10002068 = inttoptr i32 %v0_10002054 to i32*
  %v5_10002068 = call i32 @function_100006a8(i32 %v0_10002064, i32* %v4_10002068, i32 4, i32 64)
  %v0_1000206c = load i32, i32* @r28, align 4
  %v5_10002078 = trunc i32 %v5_10002068 to i8
  %v0_10002080 = load i32, i32* @r29, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  store i32 268443784, i32* @lr, align 4
  %v4_10002084 = inttoptr i32 %v0_1000206c to i32*
  %v5_10002084 = call i32 @function_100006a8(i32 %v0_10002080, i32* %v4_10002084, i32 5, i32 1)
  %v1_1000208c = urem i32 %v5_10002084, 256
  %v0_10002098 = load i32, i32* @r28, align 4
  %v0_100020a0 = load i32, i32* @r29, align 4
  store i32 %v0_100020a0, i32* %r3.global-to-local, align 4
  store i32 268443816, i32* @lr, align 4
  %v4_100020a4 = inttoptr i32 %v0_10002098 to i32*
  %v5_100020a4 = call i32 @function_100006a8(i32 %v0_100020a0, i32* %v4_100020a4, i32 7, i32 65535)
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v5_100020b4 = trunc i32 %v5_100020a4 to i16
  %v0_100020bc = load i32, i32* @r29, align 4
  store i32 %v0_100020bc, i32* %r3.global-to-local, align 4
  store i32 268443844, i32* @lr, align 4
  %v4_100020c0 = inttoptr i32 %v0_100020a8 to i32*
  %v5_100020c0 = call i32 @function_100006a8(i32 %v0_100020bc, i32* %v4_100020c0, i32 11, i32 0)
  %v0_100020c4 = load i32, i32* @r28, align 4
  %v1_100020c8 = urem i32 %v5_100020c0, 256
  %v0_100020d8 = load i32, i32* @r29, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  store i32 268443872, i32* @lr, align 4
  %v4_100020dc = inttoptr i32 %v0_100020c4 to i32*
  %v5_100020dc = call i32 @function_100006a8(i32 %v0_100020d8, i32* %v4_100020dc, i32 12, i32 1)
  %v0_100020e0 = load i32, i32* @r28, align 4
  %v1_100020ec = urem i32 %v5_100020dc, 256
  %v0_100020f0 = load i32, i32* @r29, align 4
  store i32 %v0_100020f0, i32* %r3.global-to-local, align 4
  store i32 268443896, i32* @lr, align 4
  %v4_100020f4 = inttoptr i32 %v0_100020e0 to i32*
  %v5_100020f4 = call i32 @function_100006a8(i32 %v0_100020f0, i32* %v4_100020f4, i32 13, i32 1)
  %v0_100020f8 = load i32, i32* @r28, align 4
  %v1_10002104 = urem i32 %v5_100020f4, 256
  %v0_10002108 = load i32, i32* @r29, align 4
  store i32 %v0_10002108, i32* %r3.global-to-local, align 4
  store i32 268443920, i32* @lr, align 4
  %v4_1000210c = inttoptr i32 %v0_100020f8 to i32*
  %v5_1000210c = call i32 @function_100006a8(i32 %v0_10002108, i32* %v4_1000210c, i32 14, i32 0)
  %v0_10002110 = load i32, i32* @r28, align 4
  %v1_1000211c = urem i32 %v5_1000210c, 256
  %v0_10002120 = load i32, i32* @r29, align 4
  store i32 %v0_10002120, i32* %r3.global-to-local, align 4
  store i32 268443944, i32* @lr, align 4
  %v4_10002124 = inttoptr i32 %v0_10002110 to i32*
  %v5_10002124 = call i32 @function_100006a8(i32 %v0_10002120, i32* %v4_10002124, i32 15, i32 0)
  %v0_10002128 = load i32, i32* @r28, align 4
  %v1_10002134 = urem i32 %v5_10002124, 256
  %v0_10002138 = load i32, i32* @r29, align 4
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  store i32 268443968, i32* @lr, align 4
  %v4_1000213c = inttoptr i32 %v0_10002128 to i32*
  %v5_1000213c = call i32 @function_100006a8(i32 %v0_10002138, i32* %v4_1000213c, i32 16, i32 0)
  %v0_10002148 = load i32, i32* @r28, align 4
  %v1_1000214c = urem i32 %v5_1000213c, 256
  %v0_10002150 = load i32, i32* @r29, align 4
  store i32 %v0_10002150, i32* %r3.global-to-local, align 4
  store i32 268443992, i32* @lr, align 4
  %v4_10002154 = inttoptr i32 %v0_10002148 to i32*
  %v5_10002154 = call i32 @function_100006a8(i32 %v0_10002150, i32* %v4_10002154, i32 0, i32 768)
  %v0_10002158 = load i32, i32* @r28, align 4
  store i32 %v5_10002154, i32* %r25.global-to-local, align 4
  %v0_10002168 = load i32, i32* @r29, align 4
  store i32 %v0_10002168, i32* %r3.global-to-local, align 4
  store i32 268444016, i32* @lr, align 4
  %v4_1000216c = inttoptr i32 %v0_10002158 to i32*
  %v5_1000216c = call i32 @function_100006a8(i32 %v0_10002168, i32* %v4_1000216c, i32 1, i32 1)
  %v1_10002174 = urem i32 %v5_1000216c, 256
  store i32 %v1_10002174, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444036, i32* @lr, align 4
  %v3_10002180 = call i32 @function_100095d4(i32 2, i32 3, i32 6)
  store i32 %v3_10002180, i32* %r3.global-to-local, align 4
  %v3_10002184 = icmp eq i32 %v3_10002180, -1
  store i1 %v3_10002184, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002180, i32* %r24.global-to-local, align 4
  br i1 %v3_10002184, label %dec_label_pc_10002344, label %dec_label_pc_10002190

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10001f98
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000219c = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268444076, i32* @lr, align 4
  %v4_100021a8 = call i32 @function_10009598(i32 0, i32 3, i32 %v2_1000219c, i32 4)
  store i32 %v4_100021a8, i32* %r3.global-to-local, align 4
  %v3_100021ac = icmp eq i32 %v4_100021a8, -1
  store i1 %v3_100021ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100021ac, label %dec_label_pc_1000233c, label %dec_label_pc_100021b4

dec_label_pc_100021b4:                            ; preds = %dec_label_pc_10002190
  %v0_100021b4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100021b4 = icmp slt i32 %v0_100021b4, 0
  %v3_100021b4 = icmp eq i32 %v0_100021b4, 0
  store i1 %v1_100021b4, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_100021b4, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100021c0 = load i32, i32* @r31, align 4
  %v1_100021c0 = urem i32 %v0_100021c0, 65536
  store i32 %v1_100021c0, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_100021b4, 1
  br i1 %tmp49, label %dec_label_pc_100024dc, label %dec_label_pc_100021c8

dec_label_pc_100021c8:                            ; preds = %dec_label_pc_100021b4
  %v4_100021c8 = sext i16 %v5_100020b4 to i32
  store i32 %v4_100021c8, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_1000226c = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002278 = ptrtoint i32* %stack_var_-384 to i32
  %v2_1000227c = ptrtoint i32* %stack_var_-404 to i32
  %v4_100022b4 = zext i16 %tmp13 to i32
  %v1_100022e4 = and i32 %tmp, 1179648
  %v3_100023f8 = icmp eq i32 %v1_1000208c, 0
  %v4_10002418 = sext i8 %v5_10002040 to i32
  %v4_10002420 = sext i8 %v5_10002078 to i32
  %v1_100022e8 = and i32 %tmp, 327680
  %v3_100022e8 = icmp eq i32 %v1_100022e8, 0
  %v4_100022f0 = icmp eq i32 %v1_100022e4, 1179648
  br label %dec_label_pc_100021d4

dec_label_pc_100021d4:                            ; preds = %dec_label_pc_100024c8, %dec_label_pc_100022fc, %dec_label_pc_100021c8
  %v0_100021d4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100021d4 = add i32 %v0_100021d4, 40
  store i32 %v1_100021d4, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e453 = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  store i32 %v3_100021e453, i32* %r3.global-to-local, align 4
  %v3_100021e855 = icmp eq i32 %v3_100021e453, -1
  store i1 %v3_100021e855, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e453, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e855, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100021f4:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4
  store i32 3, i32* @r4, align 4
  store i32 268444164, i32* @lr, align 4
  %v1_10002200 = call i32 @function_1000879c(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_1000220c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000220c, i32* %r3.global-to-local, align 4
  store i32 268444184, i32* @lr, align 4
  %v2_10002214 = call i32 @function_1000879c(i32 %v0_1000220c)
  store i32 %v2_10002214, i32* %r3.global-to-local, align 4
  %v3_10002218 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002220 = mul i32 %v3_10002218, 24
  store i32 %v1_10002220, i32* %r0.global-to-local, align 4
  %v0_10002228 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002228 = add i32 %v0_10002228, %v1_10002220
  store i32 %v2_10002228, i32* %r11.global-to-local, align 4
  %v1_1000222c = add i32 %v2_10002228, 20
  %v2_1000222c = inttoptr i32 %v1_1000222c to i8*
  %v3_1000222c = load i8, i8* %v2_1000222c, align 1
  %v4_1000222c = zext i8 %v3_1000222c to i32
  store i32 %v4_1000222c, i32* %r9.global-to-local, align 4
  %v3_10002230 = icmp eq i8 %v3_1000222c, 31
  store i1 %v3_10002230, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_1000222c, 32
  %v1_10002308 = add i32 %v2_10002228, 16
  %v2_10002308 = inttoptr i32 %v1_10002308 to i32*
  %v3_10002308 = load i32, i32* %v2_10002308, align 4
  br i1 %tmp50, label %dec_label_pc_10002308, label %dec_label_pc_10002238

dec_label_pc_10002238:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r0.global-to-local, align 4
  %v0_10002240 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002240, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002244:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.0 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  store i32 %v4_100021c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000224c:                            ; preds = %dec_label_pc_10002330, %dec_label_pc_10002244
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002330 ], [ %stack_var_-396.0, %dec_label_pc_10002244 ]
  %storemerge = phi i16 [ %v1_10002330, %dec_label_pc_10002330 ], [ %v5_100020b4, %dec_label_pc_10002244 ]
  %v0_10002254 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002254, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000225c.20 to i32), i32* @lr, align 4
  %v0_10002258 = call i32 @function_100093d4()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268444260, i32* @lr, align 4
  %v0_10002260 = call i32 @function_10008c54()
  store i32 %v0_10002260, i32* %r3.global-to-local, align 4
  store i32 %v0_10002260, i32* @r31, align 4
  %v4_100022a8 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_100022b8 = zext i16 %storemerge to i32
  %v4_100022bc = icmp eq i16 %storemerge, %tmp13
  %v4_100022a8.not = xor i1 %v4_100022a8, true
  br label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_100022c4, %dec_label_pc_1000224c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002278, i32* %r7.global-to-local, align 4
  store i32 %v2_1000227c, i32* %r8.global-to-local, align 4
  %v0_10002280 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002280, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268444300, i32* @lr, align 4
  %v6_10002288 = call i32 @function_100094e0(i32 %v0_10002280, i32 %v2_1000226c, i32 256, i32 16384, i32 %v2_10002278, i32 %v2_1000227c)
  store i32 %v6_10002288, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002294 = icmp eq i32 %v6_10002288, -1
  store i1 %v3_10002294, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002294, label %dec_label_pc_10002344, label %dec_label_pc_100022a0

dec_label_pc_100022a0:                            ; preds = %dec_label_pc_10002268
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_100022a8, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002288, 41
  %or.cond = or i1 %tmp51, %v4_100022a8.not
  br i1 %or.cond, label %dec_label_pc_100022c4, label %dec_label_pc_100022b4

dec_label_pc_100022b4:                            ; preds = %dec_label_pc_100022a0
  store i32 %v4_100022b4, i32* %r0.global-to-local, align 4
  store i32 %v4_100022b8, i32* %r8.global-to-local, align 4
  store i1 %v4_100022bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022bc, label %dec_label_pc_100022e0, label %dec_label_pc_100022c4

dec_label_pc_100022c4:                            ; preds = %dec_label_pc_100022a0, %dec_label_pc_100022f8, %dec_label_pc_100022b4
  store i32 268444360, i32* @lr, align 4
  %v0_100022c4 = call i32 @function_10008c54()
  %v0_100022c8 = load i32, i32* @r31, align 4
  %v2_100022c8 = sub i32 %v0_100022c4, %v0_100022c8
  store i32 %v2_100022c8, i32* %r3.global-to-local, align 4
  %v3_100022cc = icmp eq i32 %v2_100022c8, 10
  store i1 %v3_100022cc, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_100022c8, 11
  br i1 %tmp52, label %dec_label_pc_10002268, label %dec_label_pc_100022d4

dec_label_pc_100022d4:                            ; preds = %dec_label_pc_100022c4
  %v0_100022d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022d4, i32* %r3.global-to-local, align 4
  store i32 268444380, i32* @lr, align 4
  %v0_100022d8 = call i32 @function_10008884()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e4 = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  store i32 %v3_100021e4, i32* %r3.global-to-local, align 4
  %v3_100021e8 = icmp eq i32 %v3_100021e4, -1
  store i1 %v3_100021e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e4, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e8, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100022e0:                            ; preds = %dec_label_pc_100022b4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_100022e4, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_100022f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022f0, label %dec_label_pc_100023a4, label %dec_label_pc_100022f8

dec_label_pc_100022f8:                            ; preds = %dec_label_pc_100022e0
  br i1 %v3_100022e8, label %dec_label_pc_100022c4, label %dec_label_pc_100022fc

dec_label_pc_100022fc:                            ; preds = %dec_label_pc_100022f8
  %v0_100022fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022fc, i32* %r3.global-to-local, align 4
  store i32 268444420, i32* @lr, align 4
  %v0_10002300 = call i32 @function_10008884()
  store i32 %v0_10002300, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100021d4

dec_label_pc_10002308:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r29.global-to-local, align 4
  %v0_1000230c = call i32 @function_10005d24()
  store i32 %v0_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-408, align 4
  %v1_10002314 = mul i32 %v3_10002310, 24
  %v1_10002318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002318 = add i32 %v1_10002318, %v1_10002314
  store i32 %v2_10002318, i32* %r9.global-to-local, align 4
  %v1_1000231c = add i32 %v2_10002318, 20
  %v2_1000231c = inttoptr i32 %v1_1000231c to i8*
  %v3_1000231c = load i8, i8* %v2_1000231c, align 1
  %v4_1000231c = zext i8 %v3_1000231c to i32
  store i32 %v4_1000231c, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_1000231c, 64
  %v2_10002320 = zext i8 %tmp56 to i32
  %v3_10002320 = lshr i32 %v0_1000230c, %v2_10002320
  store i32 %v3_10002320, i32* %r3.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002324 = add i32 %v3_10002320, %v0_10002324
  store i32 %v2_10002324, i32* %r29.global-to-local, align 4
  %v0_1000232c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000232c, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002330:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.2 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  %v0_10002330 = call i32 @function_10005d24()
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  store i32 %v0_10002330, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000233c:                            ; preds = %dec_label_pc_10002190
  %v0_1000233c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000233c, i32* %r3.global-to-local, align 4
  store i32 268444484, i32* @lr, align 4
  %v0_10002340 = call i32 @function_10008884()
  store i32 %v0_10002340, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002344

dec_label_pc_10002344:                            ; preds = %dec_label_pc_10002268, %dec_label_pc_10001f98, %dec_label_pc_1000233c
  store i32 %v0_10001fb0, i32* %r0.global-to-local, align 4
  %v1_10002358 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001fa0)
  store i32 %v0_10001fe8, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ff0, i32* %r29.global-to-local, align 4
  %v0_100023a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100023a0

dec_label_pc_100023a4:                            ; preds = %dec_label_pc_100022e0
  %v3_100023a4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023a4, i32* %r29.global-to-local, align 4
  %v0_100023a8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100023a8, i32* @r3, align 4
  %v0_100023ac = load i32, i32* @r30, align 4
  %v1_100023ac = add i32 %v0_100023ac, 2
  %v2_100023ac = inttoptr i32 %v1_100023ac to i16*
  %v3_100023ac = load i16, i16* %v2_100023ac, align 2
  %v4_100023ac = zext i16 %v3_100023ac to i32
  store i32 %v4_100023ac, i32* %r11.global-to-local, align 4
  %v1_100023b0 = mul i32 %v3_100023a4, 16
  store i32 %v1_100023b0, i32* %r9.global-to-local, align 4
  %v1_100023b4 = mul i32 %v3_100023a4, 4
  store i32 %v1_100023b4, i32* @r29, align 4
  %v1_100023b8 = load i32, i32* %r22.global-to-local, align 4
  %v3_100023b8 = add i32 %v1_100023b8, %v1_100023b0
  %v4_100023b8 = inttoptr i32 %v3_100023b8 to i32*
  store i32 %tmp14, i32* %v4_100023b8, align 4
  %v0_100023bc = load i32, i32* %r22.global-to-local, align 4
  %v1_100023bc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023bc = add i32 %v1_100023bc, %v0_100023bc
  store i32 %v2_100023bc, i32* %r9.global-to-local, align 4
  %v0_100023c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100023c0 = trunc i32 %v0_100023c0 to i16
  %v3_100023c0 = add i32 %v2_100023bc, 14
  %v4_100023c0 = inttoptr i32 %v3_100023c0 to i16*
  store i16 %v1_100023c0, i16* %v4_100023c0, align 2
  %v0_100023c4 = load i32, i32* @r30, align 4
  %v1_100023c4 = add i32 %v0_100023c4, 4
  %v2_100023c4 = inttoptr i32 %v1_100023c4 to i32*
  %v3_100023c4 = load i32, i32* %v2_100023c4, align 4
  store i32 %v3_100023c4, i32* %r0.global-to-local, align 4
  %v0_100023c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100023c8 = trunc i32 %v0_100023c8 to i16
  %v2_100023c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100023c8 = add i32 %v2_100023c8, 12
  %v4_100023c8 = inttoptr i32 %v3_100023c8 to i16*
  store i16 %v1_100023c8, i16* %v4_100023c8, align 2
  %v0_100023cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100023cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023cc = add i32 %v1_100023cc, 4
  %v3_100023cc = inttoptr i32 %v2_100023cc to i32*
  store i32 %v0_100023cc, i32* %v3_100023cc, align 4
  %v0_100023d0 = load i32, i32* @r30, align 4
  %v1_100023d0 = add i32 %v0_100023d0, 8
  %v2_100023d0 = inttoptr i32 %v1_100023d0 to i32*
  %v3_100023d0 = load i32, i32* %v2_100023d0, align 4
  store i32 %v3_100023d0, i32* %r0.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, 8
  %v3_100023d4 = inttoptr i32 %v2_100023d4 to i32*
  store i32 %v3_100023d0, i32* %v3_100023d4, align 4
  store i32 268444636, i32* @lr, align 4
  %v0_100023d8 = call i32 @function_100097d8()
  store i32 %v0_100023d8, i32* %r3.global-to-local, align 4
  %v3_100023dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023dc, i32* %r0.global-to-local, align 4
  %v1_100023e0 = load i32, i32* @r29, align 4
  %v2_100023e0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100023e0 = add i32 %v2_100023e0, %v1_100023e0
  %v4_100023e0 = inttoptr i32 %v3_100023e0 to i32*
  store i32 %v0_100023d8, i32* %v4_100023e0, align 4
  %v0_100023e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023e4 = mul i32 %v0_100023e4, 4
  store i32 %v1_100023e4, i32* %r0.global-to-local, align 4
  %v0_100023e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023e8 = add i32 %v0_100023e8, %v1_100023e4
  %v3_100023e8 = inttoptr i32 %v2_100023e8 to i32*
  %v4_100023e8 = load i32, i32* %v3_100023e8, align 4
  store i32 %v4_100023e8, i32* @r31, align 4
  store i32 %v1_1000208c, i32* %r0.global-to-local, align 4
  %v1_100023f0 = inttoptr i32 %v4_100023e8 to i32*
  %v2_100023f0 = load i32, i32* %v1_100023f0, align 4
  store i32 %v2_100023f0, i32* %r9.global-to-local, align 4
  %v1_100023f4 = add i32 %v4_100023e8, 20
  store i32 %v1_100023f4, i32* @r30, align 4
  store i1 %v3_100023f8, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10002400 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002400, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10002408 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_1000240c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000240c = trunc i32 %v0_1000240c to i16
  %v2_1000240c = load i32, i32* @r31, align 4
  %v3_1000240c = add i32 %v2_1000240c, 4
  %v4_1000240c = inttoptr i32 %v3_1000240c to i16*
  store i16 %v1_1000240c, i16* %v4_1000240c, align 2
  %v1_10002410 = load i32, i32* @r31, align 4
  %v2_10002410 = inttoptr i32 %v1_10002410 to i32*
  store i32 %v1_10002408, i32* %v2_10002410, align 4
  %v0_10002414 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002414 = trunc i32 %v0_10002414 to i16
  %v2_10002414 = load i32, i32* @r31, align 4
  %v3_10002414 = add i32 %v2_10002414, 2
  %v4_10002414 = inttoptr i32 %v3_10002414 to i16*
  store i16 %v1_10002414, i16* %v4_10002414, align 2
  store i32 %v4_10002418, i32* %r9.global-to-local, align 4
  %v2_1000241c = load i32, i32* @r31, align 4
  %v3_1000241c = add i32 %v2_1000241c, 1
  %v4_1000241c = inttoptr i32 %v3_1000241c to i8*
  store i8 %v5_10002040, i8* %v4_1000241c, align 1
  store i32 %v4_10002420, i32* %r0.global-to-local, align 4
  %v2_10002424 = load i32, i32* @r31, align 4
  %v3_10002424 = add i32 %v2_10002424, 8
  %v4_10002424 = inttoptr i32 %v3_10002424 to i8*
  store i8 %v5_10002078, i8* %v4_10002424, align 1
  %v0_10002428 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002428, label %dec_label_pc_10002434, label %dec_label_pc_1000242c

dec_label_pc_1000242c:                            ; preds = %dec_label_pc_100023a4
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002430 = load i32, i32* @r31, align 4
  %v3_10002430 = add i32 %v2_10002430, 6
  %v4_10002430 = inttoptr i32 %v3_10002430 to i16*
  store i16 16384, i16* %v4_10002430, align 2
  br label %dec_label_pc_10002434

dec_label_pc_10002434:                            ; preds = %dec_label_pc_100023a4, %dec_label_pc_1000242c
  %v2_1000243c = load i32, i32* @r31, align 4
  %v3_1000243c = add i32 %v2_1000243c, 9
  %v4_1000243c = inttoptr i32 %v3_1000243c to i8*
  store i8 6, i8* %v4_1000243c, align 1
  %v3_10002440 = load i32, i32* @global_var_1001ba00.14, align 4
  store i32 %v3_10002440, i32* %r0.global-to-local, align 4
  %v1_10002444 = load i32, i32* @r31, align 4
  %v2_10002444 = add i32 %v1_10002444, 12
  %v3_10002444 = inttoptr i32 %v2_10002444 to i32*
  store i32 %v3_10002440, i32* %v3_10002444, align 4
  %v3_10002448 = load i32, i32* %stack_var_-408, align 4
  %v1_1000244c = mul i32 %v3_10002448, 16
  store i32 %v1_1000244c, i32* %r9.global-to-local, align 4
  %v1_10002450 = load i32, i32* %r22.global-to-local, align 4
  %v2_10002450 = add i32 %v1_10002450, %v1_1000244c
  %v3_10002450 = inttoptr i32 %v2_10002450 to i32*
  %v4_10002450 = load i32, i32* %v3_10002450, align 4
  store i32 %v4_10002450, i32* %r0.global-to-local, align 4
  store i32 %v2_10002450, i32* %r9.global-to-local, align 4
  %v1_10002458 = add i32 %v2_10002450, 12
  %v2_10002458 = inttoptr i32 %v1_10002458 to i16*
  %v3_10002458 = load i16, i16* %v2_10002458, align 2
  %v4_10002458 = zext i16 %v3_10002458 to i32
  store i32 %v4_10002458, i32* %r11.global-to-local, align 4
  %v1_1000245c = load i32, i32* @r31, align 4
  %v2_1000245c = add i32 %v1_1000245c, 16
  %v3_1000245c = inttoptr i32 %v2_1000245c to i32*
  store i32 %v4_10002450, i32* %v3_1000245c, align 4
  %v0_10002460 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002460 = trunc i32 %v0_10002460 to i16
  %v2_10002460 = load i32, i32* @r31, align 4
  %v3_10002460 = add i32 %v2_10002460, 20
  %v4_10002460 = inttoptr i32 %v3_10002460 to i16*
  store i16 %v1_10002460, i16* %v4_10002460, align 2
  %v0_10002464 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002464 = add i32 %v0_10002464, 8
  %v2_10002464 = inttoptr i32 %v1_10002464 to i32*
  %v3_10002464 = load i32, i32* %v2_10002464, align 4
  store i32 %v3_10002464, i32* %r0.global-to-local, align 4
  %v0_10002468 = load i32, i32* @r30, align 4
  %v1_10002468 = add i32 %v0_10002468, 12
  %v2_10002468 = inttoptr i32 %v1_10002468 to i32*
  %v3_10002468 = load i32, i32* %v2_10002468, align 4
  store i32 %v3_10002468, i32* %r11.global-to-local, align 4
  %v2_1000246c = add i32 %v0_10002468, 4
  %v3_1000246c = inttoptr i32 %v2_1000246c to i32*
  store i32 %v3_10002464, i32* %v3_1000246c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10002474 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10002474, i32* %r11.global-to-local, align 4
  %v0_10002478 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002478 = add i32 %v0_10002478, 14
  %v2_10002478 = inttoptr i32 %v1_10002478 to i16*
  %v3_10002478 = load i16, i16* %v2_10002478, align 2
  %v4_10002478 = zext i16 %v3_10002478 to i32
  store i32 %v4_10002478, i32* %r0.global-to-local, align 4
  %v1_1000247c = add i32 %v0_10002478, 4
  %v2_1000247c = inttoptr i32 %v1_1000247c to i32*
  %v3_1000247c = load i32, i32* %v2_1000247c, align 4
  store i32 %v3_1000247c, i32* %r10.global-to-local, align 4
  %v1_10002480 = or i32 %v1_10002474, 1114112
  store i32 %v1_10002480, i32* %r11.global-to-local, align 4
  %v2_10002484 = load i32, i32* @r30, align 4
  %v3_10002484 = add i32 %v2_10002484, 2
  %v4_10002484 = inttoptr i32 %v3_10002484 to i16*
  store i16 %v3_10002478, i16* %v4_10002484, align 2
  %v0_10002488 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002488 = load i32, i32* @r30, align 4
  %v2_10002488 = add i32 %v1_10002488, 8
  %v3_10002488 = inttoptr i32 %v2_10002488 to i32*
  store i32 %v0_10002488, i32* %v3_10002488, align 4
  %v0_1000248c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000248c = load i32, i32* @r30, align 4
  %v2_1000248c = add i32 %v1_1000248c, 12
  %v3_1000248c = inttoptr i32 %v2_1000248c to i32*
  store i32 %v0_1000248c, i32* %v3_1000248c, align 4
  %v0_10002490 = call i32 @function_10005d24()
  %v1_10002490 = trunc i32 %v0_10002490 to i16
  store i32 %v1_100020c8, i32* %r9.global-to-local, align 4
  %v3_10002498 = load i32, i32* @r30, align 4
  %v4_10002498 = add i32 %v3_10002498, 14
  %v5_10002498 = inttoptr i32 %v4_10002498 to i16*
  store i16 %v1_10002490, i16* %v5_10002498, align 2
  %v0_1000249c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000249c, i32* @r4, align 4
  %v0_100024a0 = load i32, i32* @r31, align 4
  %v1_100024a0 = add i32 %v0_100024a0, 40
  store i32 %v1_100024a0, i32* @r3, align 4
  %v0_100024a4 = load i32, i32* @r30, align 4
  %v1_100024a4 = add i32 %v0_100024a4, 12
  %v2_100024a4 = inttoptr i32 %v1_100024a4 to i32*
  %v3_100024a4 = load i32, i32* %v2_100024a4, align 4
  store i32 %v3_100024a4, i32* %r0.global-to-local, align 4
  %v1_100024a8 = call i32 @__asm_rlwimi(i32 %v1_100020c8, i32 21, i32 10, i32 10)
  store i32 %v1_100024a8, i32* %r0.global-to-local, align 4
  %v1_100024ac = call i32 @__asm_rlwimi(i32 %v1_100020ec, i32 20, i32 11, i32 11)
  store i32 %v1_100024ac, i32* %r0.global-to-local, align 4
  %v1_100024b0 = call i32 @__asm_rlwimi(i32 %v1_10002104, i32 19, i32 12, i32 12)
  store i32 %v1_100024b0, i32* %r0.global-to-local, align 4
  %v1_100024b4 = call i32 @__asm_rlwimi(i32 %v1_1000211c, i32 18, i32 13, i32 13)
  store i32 %v1_100024b4, i32* %r0.global-to-local, align 4
  %v1_100024b8 = call i32 @__asm_rlwimi(i32 %v1_10002134, i32 17, i32 14, i32 14)
  store i32 %v1_100024b8, i32* %r0.global-to-local, align 4
  %v1_100024bc = call i32 @__asm_rlwimi(i32 %v1_1000214c, i32 16, i32 15, i32 15)
  store i32 %v1_100024bc, i32* %r0.global-to-local, align 4
  %v1_100024c0 = load i32, i32* @r30, align 4
  %v2_100024c0 = add i32 %v1_100024c0, 12
  %v3_100024c0 = inttoptr i32 %v2_100024c0 to i32*
  store i32 %v1_100024bc, i32* %v3_100024c0, align 4
  %v0_100024c4 = call i32 @function_10005ef8()
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024c8

dec_label_pc_100024c8:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4, %dec_label_pc_10002434
  %v3_100024c8 = load i32, i32* %stack_var_-408, align 4
  %v1_100024cc = add i32 %v3_100024c8, 1
  store i32 %v1_100024cc, i32* %r9.global-to-local, align 4
  %v1_100024d0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100024d0 = icmp slt i32 %v1_100024cc, %v1_100024d0
  %v4_100024d0 = icmp eq i32 %v1_100024cc, %v1_100024d0
  store i1 %v4_100024d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100024cc, i32* %stack_var_-408, align 4
  br i1 %v2_100024d0, label %dec_label_pc_100021d4, label %dec_label_pc_100024dc.loopexit

dec_label_pc_100024dc.loopexit:                   ; preds = %dec_label_pc_100024c8
  %v0_100024e8.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100024e8.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100024dc

dec_label_pc_100024dc:                            ; preds = %dec_label_pc_100024dc.loopexit, %dec_label_pc_100021b4
  %v1_100024e8.pre = phi i1 [ %v1_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v1_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024e8.pre = phi i1 [ %v0_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v3_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024dc = load i32, i32* %r27.global-to-local, align 4
  %v3_100024dc = icmp eq i32 %v0_100024dc, 0
  store i1 %v3_100024dc, i1* %cr2_eq.global-to-local, align 1
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100024e0 = add i32 %v0_100024e0, 40
  store i32 %v1_100024e0, i32* %r26.global-to-local, align 4
  %v1_100024e4 = add i32 %v0_100024e0, 20
  store i32 %v1_100024e4, i32* @r31, align 4
  br label %dec_label_pc_100024e8.outer

dec_label_pc_100024e8.outer:                      ; preds = %dec_label_pc_100025bc, %dec_label_pc_100024dc
  %v1_100024e8.ph = phi i1 [ %v1_100024e8.pre, %dec_label_pc_100024dc ], [ %v1_100025bc, %dec_label_pc_100025bc ]
  %v0_100024e8.ph = phi i1 [ %v0_100024e8.pre, %dec_label_pc_100024dc ], [ %v0_100025bc, %dec_label_pc_100025bc ]
  %v2_100024e8 = or i1 %v1_100024e8.ph, %v0_100024e8.ph
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_100024e8.outer, %dec_label_pc_100024e8
  br i1 %v2_100024e8, label %dec_label_pc_100024e8, label %dec_label_pc_100024ec

dec_label_pc_100024ec:                            ; preds = %dec_label_pc_100024e8, %dec_label_pc_100025bc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100024fc = load i32, i32* %r19.global-to-local, align 4
  %v4_100024fc = icmp eq i32 %v0_100024fc, 65535
  store i1 %v4_100024fc, i1* %cr4_eq.global-to-local, align 1
  %v0_10002500 = load i32, i32* @r31, align 4
  %v1_10002500 = urem i32 %v0_10002500, 65536
  store i32 %v1_10002500, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000250c

dec_label_pc_1000250c:                            ; preds = %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, %dec_label_pc_100024ec
  %v0_10002518 = phi i1 [ %v0_10002518.pre, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ %v4_100024fc, %dec_label_pc_100024ec ]
  %v0_1000250c = phi i32 [ %v1_100025ac, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ 0, %dec_label_pc_100024ec ]
  %v1_1000250c = mul i32 %v0_1000250c, 4
  store i32 %v1_1000250c, i32* %r0.global-to-local, align 4
  %v0_10002510 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002510 = add i32 %v0_10002510, %v1_1000250c
  %v3_10002510 = inttoptr i32 %v2_10002510 to i32*
  %v4_10002510 = load i32, i32* %v3_10002510, align 4
  store i32 %v4_10002510, i32* @r29, align 4
  %v1_10002514 = add i32 %v4_10002510, 20
  store i32 %v1_10002514, i32* %r28.global-to-local, align 4
  br i1 %v0_10002518, label %dec_label_pc_100025c4, label %dec_label_pc_1000251c

dec_label_pc_1000251c:                            ; preds = %dec_label_pc_1000250c
  %v1_1000251c = add i32 %v4_10002510, 40
  store i32 %v1_1000251c, i32* @r3, align 4
  %v0_10002520 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002520, i32* @r4, align 4
  %v0_10002524 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002524, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_10002528:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4, %dec_label_pc_100025d8
  %v2_10002528 = phi i32 [ %v4_10002510, %dec_label_pc_1000251c ], [ %v0_100025d0, %dec_label_pc_100025c4 ], [ %v2_10002528.pre, %dec_label_pc_100025d8 ]
  %v0_10002528 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002528 = trunc i32 %v0_10002528 to i16
  %v3_10002528 = add i32 %v2_10002528, 10
  %v4_10002528 = inttoptr i32 %v3_10002528 to i16*
  store i16 %v1_10002528, i16* %v4_10002528, align 2
  %v0_10002530 = load i32, i32* @r29, align 4
  store i32 %v0_10002530, i32* @r3, align 4
  %v2_10002534 = call i32 @function_100043cc(i32 %v0_10002530, i32 20)
  %v3_10002534 = trunc i32 %v2_10002534 to i16
  store i32 %v2_10002534, i32* %r3.global-to-local, align 4
  %v3_10002538 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002538, i32* %r9.global-to-local, align 4
  %v3_1000253c = load i32, i32* @r29, align 4
  %v4_1000253c = add i32 %v3_1000253c, 10
  %v5_1000253c = inttoptr i32 %v4_1000253c to i16*
  store i16 %v3_10002534, i16* %v5_1000253c, align 2
  %v0_10002540 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002540, i32* @r4, align 4
  %v0_10002544 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002544 = mul i32 %v0_10002544, 16
  store i32 %v1_10002544, i32* %r9.global-to-local, align 4
  %v0_10002548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002548 = trunc i32 %v0_10002548 to i16
  %v3_10002548 = add i32 %v0_10002540, 16
  %v4_10002548 = inttoptr i32 %v3_10002548 to i16*
  store i16 %v1_10002548, i16* %v4_10002548, align 2
  %v0_1000254c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000254c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000254c = add i32 %v1_1000254c, %v0_1000254c
  store i32 %v2_1000254c, i32* %r9.global-to-local, align 4
  %v0_10002550 = load i32, i32* @r30, align 4
  %v1_10002554 = add i32 %v2_1000254c, 4
  %v2_10002554 = inttoptr i32 %v1_10002554 to i32*
  %v3_10002554 = load i32, i32* %v2_10002554, align 4
  store i32 %v3_10002554, i32* %r11.global-to-local, align 4
  %v0_10002558 = load i32, i32* @r31, align 4
  %v0_1000255c = load i32, i32* @r29, align 4
  store i32 %v0_1000255c, i32* %r3.global-to-local, align 4
  %v1_10002560 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002560 = add i32 %v1_10002560, 4
  %v3_10002560 = inttoptr i32 %v2_10002560 to i32*
  store i32 %v3_10002554, i32* %v3_10002560, align 4
  %v0_10002564 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002564 = add i32 %v0_10002564, 1
  store i32 %v1_10002564, i32* %r11.global-to-local, align 4
  %v1_10002568 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002568 = add i32 %v1_10002568, 4
  %v3_10002568 = inttoptr i32 %v2_10002568 to i32*
  store i32 %v1_10002564, i32* %v3_10002568, align 4
  %v0_1000256c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000256c = add i32 %v0_1000256c, 8
  %v2_1000256c = inttoptr i32 %v1_1000256c to i32*
  %v3_1000256c = load i32, i32* %v2_1000256c, align 4
  store i32 %v3_1000256c, i32* %r0.global-to-local, align 4
  %v1_10002570 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002570 = add i32 %v1_10002570, 8
  %v3_10002570 = inttoptr i32 %v2_10002570 to i32*
  store i32 %v3_1000256c, i32* %v3_10002570, align 4
  %v4_10002574 = call i32 @function_10004430(i32 %v0_1000255c, i32 %v0_10002540, i32 %v0_10002550, i32 %v0_10002558)
  %v5_10002574 = trunc i32 %v4_10002574 to i16
  store i32 %v4_10002574, i32* %r3.global-to-local, align 4
  %v3_10002578 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002578, i32* %r7.global-to-local, align 4
  %v0_1000257c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000257c = add i32 %v0_1000257c, 2
  %v2_1000257c = inttoptr i32 %v1_1000257c to i16*
  %v3_1000257c = load i16, i16* %v2_1000257c, align 2
  %v4_1000257c = zext i16 %v3_1000257c to i32
  store i32 %v4_1000257c, i32* %r0.global-to-local, align 4
  %v0_10002580 = load i32, i32* @r29, align 4
  %v1_10002584 = mul i32 %v3_10002578, 24
  store i32 %v1_10002584, i32* %r7.global-to-local, align 4
  %v4_10002588 = add i32 %v0_1000257c, 16
  %v5_10002588 = inttoptr i32 %v4_10002588 to i16*
  store i16 %v5_10002574, i16* %v5_10002588, align 2
  %v0_1000258c = load i32, i32* %r26.global-to-local, align 4
  %v0_10002590 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002590, i32* %r3.global-to-local, align 4
  %v0_10002594 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002594 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002594 = add i32 %v1_10002594, %v0_10002594
  store i32 %v2_10002594, i32* %r7.global-to-local, align 4
  %v0_1000259c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000259c = trunc i32 %v0_1000259c to i16
  %v3_1000259c = add i32 %v2_10002594, 2
  %v4_1000259c = inttoptr i32 %v3_1000259c to i16*
  store i16 %v1_1000259c, i16* %v4_1000259c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268445096, i32* @lr, align 4
  %v6_100025a4 = call i32 @function_10009558(i32 %v0_10002590, i32 %v0_10002580, i32 %v0_1000258c, i32 16384, i32 %v2_10002594, i32 16)
  store i32 %v6_100025a4, i32* %r3.global-to-local, align 4
  %v3_100025a8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100025a8, i32* %r9.global-to-local, align 4
  %v1_100025ac = add i32 %v3_100025a8, 1
  store i32 %v1_100025ac, i32* %r0.global-to-local, align 4
  %v1_100025b0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100025b0 = icmp slt i32 %v1_100025ac, %v1_100025b0
  %v4_100025b0 = icmp eq i32 %v1_100025ac, %v1_100025b0
  store i1 %v4_100025b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100025ac, i32* %stack_var_-408, align 4
  br i1 %v2_100025b0, label %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, label %dec_label_pc_100025bc

dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge: ; preds = %dec_label_pc_10002528
  %v0_10002518.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_1000250c

dec_label_pc_100025bc:                            ; preds = %dec_label_pc_10002528
  %v0_100025bc = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100025bc = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100025bc = or i1 %v0_100025bc, %v1_100025bc
  br i1 %v2_100025bc, label %dec_label_pc_100024e8.outer, label %dec_label_pc_100024ec

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_1000250c
  %v0_100025c4 = call i32 @function_10005d24()
  %v1_100025c4 = trunc i32 %v0_100025c4 to i16
  %v0_100025c8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100025c8, i32* @r4, align 4
  %v3_100025cc = load i32, i32* @r29, align 4
  %v4_100025cc = add i32 %v3_100025cc, 4
  %v5_100025cc = inttoptr i32 %v4_100025cc to i16*
  store i16 %v1_100025c4, i16* %v5_100025cc, align 2
  %v0_100025d0 = load i32, i32* @r29, align 4
  %v1_100025d0 = add i32 %v0_100025d0, 40
  store i32 %v1_100025d0, i32* @r3, align 4
  %v0_100025d4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100025d4, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_100025d8:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4
  %v0_100025d8 = call i32 @function_10005ef8()
  store i32 %v0_100025d8, i32* %r3.global-to-local, align 4
  %v2_10002528.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002528

; uselistorder directives
  uselistorder i32 %v0_100025d0, { 1, 0 }
  uselistorder i1 %v1_100025bc, { 1, 0 }
  uselistorder i1 %v0_100025bc, { 1, 0 }
  uselistorder i32 %v1_100025ac, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002574, { 1, 0 }
  uselistorder i32 %v0_10002540, { 1, 0, 2 }
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_1000250c, { 1, 0 }
  uselistorder i32 %v1_100024cc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10002450, { 1, 0, 2 }
  uselistorder i32 %v1_1000244c, { 1, 0 }
  uselistorder i32 %v1_100023e4, { 1, 0 }
  uselistorder i32 %v1_100023b0, { 1, 0 }
  uselistorder i32 %v0_10002330, { 1, 0 }
  uselistorder i32 %v2_10002324, { 1, 2, 0 }
  uselistorder i1 %v4_100022a8, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002308, { 1, 3, 0, 2 }
  uselistorder i32 %v1_100022e4, { 1, 0 }
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i8 %v5_10002078, { 1, 0 }
  uselistorder i8 %v5_10002040, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i32 268444136, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_100025d8, { 1, 0 }
  uselistorder label %dec_label_pc_10002528, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100024ec, { 1, 0 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_100024c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002434, { 1, 0 }
  uselistorder label %dec_label_pc_10002344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100022c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100021f4, { 1, 0 }
}

define i32 @function_100025e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100025e0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_100025e4 = load i32, i32* @lr, align 4
  store i32 %v0_100025e4, i32* %r0.global-to-local, align 4
  %v0_100025e8 = call i32 @__asm_mfcr()
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_100025f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100025e8, i32* %r21.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002640 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002648 = load i32, i32* @r30, align 4
  store i32 268445268, i32* @lr, align 4
  %v2_10002650 = call i32 @function_10009930(i32 4, i32 4)
  store i32 %v2_10002650, i32* %r22.global-to-local, align 4
  %v0_10002658 = load i32, i32* @r28, align 4
  %v0_10002664 = load i32, i32* @r29, align 4
  store i32 %v0_10002664, i32* %r3.global-to-local, align 4
  store i32 268445292, i32* @lr, align 4
  %v4_10002668 = inttoptr i32 %v0_10002658 to i32*
  %v5_10002668 = call i32 @function_100006a8(i32 %v0_10002664, i32* %v4_10002668, i32 2, i32 0)
  %v5_10002678 = trunc i32 %v5_10002668 to i8
  %v0_10002680 = load i32, i32* @r28, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002680 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 3, i32 65535)
  %v0_1000268c = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r18.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_1000268c to i32*
  %v5_100026a0 = call i32 @function_100006a8(i32 %v0_1000269c, i32* %v4_100026a0, i32 4, i32 64)
  %v0_100026a4 = load i32, i32* @r28, align 4
  %v5_100026b0 = trunc i32 %v5_100026a0 to i8
  %v0_100026b8 = load i32, i32* @r29, align 4
  store i32 %v0_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445376, i32* @lr, align 4
  %v4_100026bc = inttoptr i32 %v0_100026a4 to i32*
  %v5_100026bc = call i32 @function_100006a8(i32 %v0_100026b8, i32* %v4_100026bc, i32 5, i32 0)
  %v0_100026cc = load i32, i32* @r28, align 4
  %v1_100026d0 = urem i32 %v5_100026bc, 256
  store i32 %v1_100026d0, i32* @r31, align 4
  %v0_100026d4 = load i32, i32* @r29, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445404, i32* @lr, align 4
  %v4_100026d8 = inttoptr i32 %v0_100026cc to i32*
  %v5_100026d8 = call i32 @function_100006a8(i32 %v0_100026d4, i32* %v4_100026d8, i32 6, i32 65535)
  %v0_100026e0 = load i32, i32* @r28, align 4
  store i32 %v5_100026d8, i32* %r19.global-to-local, align 4
  %v0_100026f0 = load i32, i32* @r29, align 4
  store i32 %v0_100026f0, i32* %r3.global-to-local, align 4
  store i32 268445432, i32* @lr, align 4
  %v4_100026f4 = inttoptr i32 %v0_100026e0 to i32*
  %v5_100026f4 = call i32 @function_100006a8(i32 %v0_100026f0, i32* %v4_100026f4, i32 7, i32 65535)
  %v0_100026fc = load i32, i32* @r28, align 4
  store i32 %v5_100026f4, i32* %r20.global-to-local, align 4
  %v0_1000270c = load i32, i32* @r29, align 4
  store i32 %v0_1000270c, i32* %r3.global-to-local, align 4
  store i32 268445460, i32* @lr, align 4
  %v4_10002710 = inttoptr i32 %v0_100026fc to i32*
  %v5_10002710 = call i32 @function_100006a8(i32 %v0_1000270c, i32* %v4_10002710, i32 17, i32 65535)
  %v0_10002718 = load i32, i32* @r28, align 4
  store i32 %v5_10002710, i32* %r15.global-to-local, align 4
  %v0_10002728 = load i32, i32* @r29, align 4
  store i32 %v0_10002728, i32* %r3.global-to-local, align 4
  store i32 268445488, i32* @lr, align 4
  %v4_1000272c = inttoptr i32 %v0_10002718 to i32*
  %v5_1000272c = call i32 @function_100006a8(i32 %v0_10002728, i32* %v4_1000272c, i32 18, i32 65535)
  %v0_10002730 = load i32, i32* @r28, align 4
  store i32 %v5_1000272c, i32* %r17.global-to-local, align 4
  %v0_10002740 = load i32, i32* @r29, align 4
  store i32 %v0_10002740, i32* %r3.global-to-local, align 4
  store i32 268445512, i32* @lr, align 4
  %v4_10002744 = inttoptr i32 %v0_10002730 to i32*
  %v5_10002744 = call i32 @function_100006a8(i32 %v0_10002740, i32* %v4_10002744, i32 11, i32 0)
  %v0_10002748 = load i32, i32* @r28, align 4
  %v0_10002758 = load i32, i32* @r29, align 4
  store i32 %v0_10002758, i32* %r3.global-to-local, align 4
  store i32 268445536, i32* @lr, align 4
  %v4_1000275c = inttoptr i32 %v0_10002748 to i32*
  %v5_1000275c = call i32 @function_100006a8(i32 %v0_10002758, i32* %v4_1000275c, i32 12, i32 1)
  %v0_10002760 = load i32, i32* @r28, align 4
  store i32 %v5_1000275c, i32* %r14.global-to-local, align 4
  %v0_10002770 = load i32, i32* @r29, align 4
  store i32 %v0_10002770, i32* %r3.global-to-local, align 4
  store i32 268445560, i32* @lr, align 4
  %v4_10002774 = inttoptr i32 %v0_10002760 to i32*
  %v5_10002774 = call i32 @function_100006a8(i32 %v0_10002770, i32* %v4_10002774, i32 13, i32 0)
  %v0_10002778 = load i32, i32* @r28, align 4
  store i32 %v5_10002774, i32* %r24.global-to-local, align 4
  %v0_10002788 = load i32, i32* @r29, align 4
  store i32 %v0_10002788, i32* %r3.global-to-local, align 4
  store i32 268445584, i32* @lr, align 4
  %v4_1000278c = inttoptr i32 %v0_10002778 to i32*
  %v5_1000278c = call i32 @function_100006a8(i32 %v0_10002788, i32* %v4_1000278c, i32 14, i32 0)
  %v0_10002790 = load i32, i32* @r28, align 4
  store i32 %v5_1000278c, i32* %r27.global-to-local, align 4
  %v0_100027a0 = load i32, i32* @r29, align 4
  store i32 %v0_100027a0, i32* %r3.global-to-local, align 4
  store i32 268445608, i32* @lr, align 4
  %v4_100027a4 = inttoptr i32 %v0_10002790 to i32*
  %v5_100027a4 = call i32 @function_100006a8(i32 %v0_100027a0, i32* %v4_100027a4, i32 15, i32 0)
  %v0_100027a8 = load i32, i32* @r28, align 4
  store i32 %v5_100027a4, i32* %r26.global-to-local, align 4
  %v0_100027b8 = load i32, i32* @r29, align 4
  store i32 %v0_100027b8, i32* %r3.global-to-local, align 4
  store i32 268445632, i32* @lr, align 4
  %v4_100027bc = inttoptr i32 %v0_100027a8 to i32*
  %v5_100027bc = call i32 @function_100006a8(i32 %v0_100027b8, i32* %v4_100027bc, i32 16, i32 0)
  %v0_100027c0 = load i32, i32* @r28, align 4
  store i32 %v5_100027bc, i32* %r30.global-to-local, align 4
  %v0_100027d0 = load i32, i32* @r29, align 4
  store i32 %v0_100027d0, i32* %r3.global-to-local, align 4
  store i32 268445656, i32* @lr, align 4
  %v4_100027d4 = inttoptr i32 %v0_100027c0 to i32*
  %v5_100027d4 = call i32 @function_100006a8(i32 %v0_100027d0, i32* %v4_100027d4, i32 0, i32 512)
  %v0_100027d8 = load i32, i32* @r28, align 4
  store i32 %v5_100027d4, i32* %r16.global-to-local, align 4
  %v0_100027e8 = load i32, i32* @r29, align 4
  store i32 %v0_100027e8, i32* %r3.global-to-local, align 4
  store i32 268445680, i32* @lr, align 4
  %v4_100027ec = inttoptr i32 %v0_100027d8 to i32*
  %v5_100027ec = call i32 @function_100006a8(i32 %v0_100027e8, i32* %v4_100027ec, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100027f4 = load i32, i32* @global_var_1001ba00.14, align 4
  %v1_100027f8 = urem i32 %v5_100027ec, 256
  %v0_100027fc = load i32, i32* @r28, align 4
  %v0_10002808 = load i32, i32* @r29, align 4
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445712, i32* @lr, align 4
  %v5_1000280c = inttoptr i32 %v0_100027fc to i32*
  %v6_1000280c = call i32 @function_10000628(i32 %v0_10002808, i32* %v5_1000280c, i32 25, i32 %v3_100027f4, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445732, i32* @lr, align 4
  %v3_10002820 = call i32 @function_100095d4(i32 2, i32 3, i32 6)
  store i32 %v3_10002820, i32* %r3.global-to-local, align 4
  %v3_10002824 = icmp eq i32 %v3_10002820, -1
  store i32 %v3_10002820, i32* %r23.global-to-local, align 4
  br i1 %v3_10002824, label %dec_label_pc_10002b64, label %dec_label_pc_10002830

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100025e0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000283c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268445772, i32* @lr, align 4
  %v4_10002848 = call i32 @function_10009598(i32 0, i32 3, i32 %v2_1000283c, i32 4)
  store i32 %v4_10002848, i32* %r3.global-to-local, align 4
  %v3_1000284c = icmp eq i32 %v4_10002848, -1
  br i1 %v3_1000284c, label %dec_label_pc_10002b5c, label %dec_label_pc_10002854

dec_label_pc_10002854:                            ; preds = %dec_label_pc_10002830
  %v0_10002854 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002854 = icmp slt i32 %v0_10002854, 0
  %v3_10002854 = icmp eq i32 %v0_10002854, 0
  store i1 %v1_10002854, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002854, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10002860 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002860 = urem i32 %v0_10002860, 65536
  store i32 %v1_10002860, i32* %r18.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r19.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002854, 1
  br i1 %tmp40, label %dec_label_pc_10002b3c, label %dec_label_pc_10002870

dec_label_pc_10002870:                            ; preds = %dec_label_pc_10002854
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 256
  %v0_10002878 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002878 = add i32 %v0_10002878, 40
  store i32 %v1_10002878, i32* %r24.global-to-local, align 4
  %v3_1000287c = icmp eq i32 %v1_10002874, 0
  store i1 %v3_1000287c, i1* %cr3_eq.global-to-local, align 1
  %v1_10002880 = urem i32 %v5_10002744, 2
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v0_10002884 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002884 = urem i32 %v0_10002884, 2
  store i32 %v1_10002884, i32* %r28.global-to-local, align 4
  %v1_10002888 = urem i32 %v0_10002874, 2
  store i32 %v1_10002888, i32* %r26.global-to-local, align 4
  %v1_1000288c = urem i32 %v1_10002878, 65536
  store i32 %v1_1000288c, i32* %r0.global-to-local, align 4
  %v0_10002894 = load i32, i32* @r31, align 4
  %v3_10002894 = icmp eq i32 %v0_10002894, 0
  store i1 %v3_10002894, i1* %cr2_eq.global-to-local, align 1
  %v5_10002898 = trunc i32 %v1_10002878 to i16
  %v0_1000289c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000289c = urem i32 %v0_1000289c, 2
  store i32 %v1_1000289c, i32* %r14.global-to-local, align 4
  %v0_100028a0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100028a0 = urem i32 %v0_100028a0, 2
  store i32 %v1_100028a0, i32* %r27.global-to-local, align 4
  %v0_100028a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100028a4 = urem i32 %v0_100028a4, 2
  %v4_100028f4 = sext i8 %v5_10002678 to i32
  br label %dec_label_pc_100028ac

dec_label_pc_100028ac:                            ; preds = %dec_label_pc_1000298c, %dec_label_pc_10002870
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268445880, i32* @lr, align 4
  %v2_100028b4 = call i32 @function_10009930(i32 1510, i32 1)
  store i32 %v2_100028b4, i32* %r3.global-to-local, align 4
  %v3_100028b8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100028b8, i32* %r9.global-to-local, align 4
  %v0_100028bc = load i32, i32* @r31, align 4
  %v1_100028bc = mul i32 %v0_100028bc, 4
  store i32 %v1_100028bc, i32* %r0.global-to-local, align 4
  %v1_100028c0 = load i32, i32* %r22.global-to-local, align 4
  %v3_100028c0 = add i32 %v1_100028c0, %v1_100028bc
  %v4_100028c0 = inttoptr i32 %v3_100028c0 to i32*
  store i32 %v2_100028b4, i32* %v4_100028c0, align 4
  %v0_100028c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100028c4 = mul i32 %v0_100028c4, 4
  store i32 %v1_100028c4, i32* %r9.global-to-local, align 4
  %v1_100028c8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100028c8 = add i32 %v1_100028c8, %v1_100028c4
  %v3_100028c8 = inttoptr i32 %v2_100028c8 to i32*
  %v4_100028c8 = load i32, i32* %v3_100028c8, align 4
  store i32 %v4_100028c8, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100028d0 = inttoptr i32 %v4_100028c8 to i32*
  %v2_100028d0 = load i32, i32* %v1_100028d0, align 4
  store i32 %v2_100028d0, i32* %r0.global-to-local, align 4
  %v1_100028d4 = add i32 %v4_100028c8, 20
  store i32 %v1_100028d4, i32* @r30, align 4
  %v0_100028d8 = load i32, i32* %r18.global-to-local, align 4
  %v1_100028d8 = trunc i32 %v0_100028d8 to i16
  %v3_100028d8 = add i32 %v4_100028c8, 4
  %v4_100028d8 = inttoptr i32 %v3_100028d8 to i16*
  store i16 %v1_100028d8, i16* %v4_100028d8, align 2
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_100028e8 = load i32, i32* @r31, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v2_100028f0 = load i32, i32* @r31, align 4
  %v3_100028f0 = add i32 %v2_100028f0, 8
  %v4_100028f0 = inttoptr i32 %v3_100028f0 to i8*
  store i8 %v5_100026b0, i8* %v4_100028f0, align 1
  store i32 %v4_100028f4, i32* %r9.global-to-local, align 4
  %v2_100028f8 = load i32, i32* @r31, align 4
  %v3_100028f8 = add i32 %v2_100028f8, 1
  %v4_100028f8 = inttoptr i32 %v3_100028f8 to i8*
  store i8 %v5_10002678, i8* %v4_100028f8, align 1
  store i32 %v1_10002878, i32* %r0.global-to-local, align 4
  %v2_10002900 = load i32, i32* @r31, align 4
  %v3_10002900 = add i32 %v2_10002900, 2
  %v4_10002900 = inttoptr i32 %v3_10002900 to i16*
  store i16 %v5_10002898, i16* %v4_10002900, align 2
  %v0_10002904 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002904, label %dec_label_pc_10002910, label %dec_label_pc_10002908

dec_label_pc_10002908:                            ; preds = %dec_label_pc_100028ac
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000290c = load i32, i32* @r31, align 4
  %v3_1000290c = add i32 %v2_1000290c, 6
  %v4_1000290c = inttoptr i32 %v3_1000290c to i16*
  store i16 16384, i16* %v4_1000290c, align 2
  br label %dec_label_pc_10002910

dec_label_pc_10002910:                            ; preds = %dec_label_pc_100028ac, %dec_label_pc_10002908
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002914 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002914 = trunc i32 %v0_10002914 to i16
  %v2_10002914 = load i32, i32* @r31, align 4
  %v3_10002914 = add i32 %v2_10002914, 20
  %v4_10002914 = inttoptr i32 %v3_10002914 to i16*
  store i16 %v1_10002914, i16* %v4_10002914, align 2
  %v0_10002918 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002918 = trunc i32 %v0_10002918 to i8
  %v2_10002918 = load i32, i32* @r31, align 4
  %v3_10002918 = add i32 %v2_10002918, 9
  %v4_10002918 = inttoptr i32 %v3_10002918 to i8*
  store i8 %v1_10002918, i8* %v4_10002918, align 1
  %v0_1000291c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* @r30, align 4
  %v3_1000291c = add i32 %v2_1000291c, 2
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v1_10002924 = load i32, i32* @r31, align 4
  %v2_10002924 = add i32 %v1_10002924, 12
  %v3_10002924 = inttoptr i32 %v2_10002924 to i32*
  store i32 %v6_1000280c, i32* %v3_10002924, align 4
  %v3_10002928 = load i32, i32* %stack_var_-136, align 4
  %v1_1000292c = mul i32 %v3_10002928, 24
  %v1_10002930 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002930 = add i32 %v1_10002930, %v1_1000292c
  store i32 %v2_10002930, i32* %r9.global-to-local, align 4
  %v1_10002934 = add i32 %v2_10002930, 16
  %v2_10002934 = inttoptr i32 %v1_10002934 to i32*
  %v3_10002934 = load i32, i32* %v2_10002934, align 4
  store i32 %v3_10002934, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000293c = load i32, i32* @r31, align 4
  %v2_1000293c = add i32 %v1_1000293c, 16
  %v3_1000293c = inttoptr i32 %v2_1000293c to i32*
  store i32 %v3_10002934, i32* %v3_1000293c, align 4
  %v0_10002940 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002940 = load i32, i32* @r30, align 4
  %v2_10002940 = add i32 %v1_10002940, 4
  %v3_10002940 = inttoptr i32 %v2_10002940 to i32*
  store i32 %v0_10002940, i32* %v3_10002940, align 4
  %v0_10002944 = load i32, i32* @r30, align 4
  %v1_10002944 = add i32 %v0_10002944, 12
  %v2_10002944 = inttoptr i32 %v1_10002944 to i32*
  %v3_10002944 = load i32, i32* %v2_10002944, align 4
  store i32 %v3_10002944, i32* %r0.global-to-local, align 4
  %v1_10002948 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002948, i32* %r0.global-to-local, align 4
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v1_10002950 = call i32 @__asm_rlwimi(i32 %v1_10002880, i32 21, i32 10, i32 10)
  store i32 %v1_10002950, i32* %r0.global-to-local, align 4
  %v1_10002954 = call i32 @__asm_rlwimi(i32 %v1_1000289c, i32 20, i32 11, i32 11)
  store i32 %v1_10002954, i32* %r0.global-to-local, align 4
  %v1_10002958 = call i32 @__asm_rlwimi(i32 %v1_10002888, i32 19, i32 12, i32 12)
  store i32 %v1_10002958, i32* %r0.global-to-local, align 4
  %v1_1000295c = call i32 @__asm_rlwimi(i32 %v1_100028a0, i32 18, i32 13, i32 13)
  store i32 %v1_1000295c, i32* %r0.global-to-local, align 4
  %v1_10002960 = call i32 @__asm_rlwimi(i32 %v1_10002884, i32 17, i32 14, i32 14)
  store i32 %v1_10002960, i32* %r0.global-to-local, align 4
  %v1_10002964 = call i32 @__asm_rlwimi(i32 %v1_100028a4, i32 16, i32 15, i32 15)
  store i32 %v1_10002964, i32* %r0.global-to-local, align 4
  %v1_10002968 = load i32, i32* @r30, align 4
  %v2_10002968 = add i32 %v1_10002968, 12
  %v3_10002968 = inttoptr i32 %v2_10002968 to i32*
  store i32 %v1_10002964, i32* %v3_10002968, align 4
  %v0_1000296c = call i32 @function_10005d24()
  %v1_1000296c = trunc i32 %v0_1000296c to i16
  %v0_10002970 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002970, i32* @r4, align 4
  %v3_10002974 = load i32, i32* @r30, align 4
  %v4_10002974 = add i32 %v3_10002974, 14
  %v5_10002974 = inttoptr i32 %v4_10002974 to i16*
  store i16 %v1_1000296c, i16* %v5_10002974, align 2
  %v0_10002978 = load i32, i32* @r31, align 4
  %v1_10002978 = add i32 %v0_10002978, 40
  store i32 %v1_10002978, i32* @r3, align 4
  %v0_1000297c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000297c, label %dec_label_pc_1000298c, label %dec_label_pc_10002980

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002910
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = add i32 %v0_10002980, 12
  %v2_10002980 = inttoptr i32 %v1_10002980 to i32*
  %v3_10002980 = load i32, i32* %v2_10002980, align 4
  %v1_10002984 = or i32 %v3_10002980, 524288
  store i32 %v1_10002984, i32* %r0.global-to-local, align 4
  store i32 %v1_10002984, i32* %v2_10002980, align 4
  br label %dec_label_pc_1000298c

dec_label_pc_1000298c:                            ; preds = %dec_label_pc_10002910, %dec_label_pc_10002980
  %v0_1000298c = call i32 @function_10005ef8()
  store i32 %v0_1000298c, i32* %r3.global-to-local, align 4
  %v3_10002990 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002990, i32* %r9.global-to-local, align 4
  %v1_10002994 = add i32 %v3_10002990, 1
  %v1_10002998 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002998 = icmp slt i32 %v1_10002994, %v1_10002998
  store i32 %v1_10002994, i32* %stack_var_-136, align 4
  br i1 %v2_10002998, label %dec_label_pc_100028ac, label %dec_label_pc_100029a4

dec_label_pc_100029a4:                            ; preds = %dec_label_pc_1000298c
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_100029a8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100029a8 = add i32 %v0_100029a8, 20
  store i32 %v1_100029a8, i32* @r30, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v3_100029b0 = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_100029b0, i1* %cr2_eq.global-to-local, align 1
  %v3_100029b4 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_100029b4, i1* %cr3_eq.global-to-local, align 1
  %v0_100029b8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029b8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_100029b8.preheader:                  ; preds = %dec_label_pc_10002a98, %dec_label_pc_10002b3c, %dec_label_pc_100029a4
  %v1_100029b8 = phi i1 [ %v1_10002854, %dec_label_pc_10002b3c ], [ %v1_100029b8.pre, %dec_label_pc_100029a4 ], [ %v1_10002a98, %dec_label_pc_10002a98 ]
  %v0_100029b8 = phi i1 [ %v3_10002854, %dec_label_pc_10002b3c ], [ %v0_100029b8.pre, %dec_label_pc_100029a4 ], [ %v0_10002a98, %dec_label_pc_10002a98 ]
  %v2_100029b8 = or i1 %v1_100029b8, %v0_100029b8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.preheader, %dec_label_pc_100029b8
  br i1 %v2_100029b8, label %dec_label_pc_100029b8, label %dec_label_pc_100029bc

dec_label_pc_100029bc:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002a98
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* @r30, align 4
  %v1_100029c0 = urem i32 %v0_100029c0, 65536
  store i32 %v1_100029c0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100029d0

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002a28, %dec_label_pc_100029bc
  %v0_100029d0 = phi i32 [ %v1_10002a88, %dec_label_pc_10002a28 ], [ 0, %dec_label_pc_100029bc ]
  %v1_100029d0 = mul i32 %v0_100029d0, 24
  store i32 %v1_100029d0, i32* %r0.global-to-local, align 4
  %v1_100029d4 = mul i32 %v0_100029d0, 4
  %v1_100029d8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100029d8 = add i32 %v1_100029d8, %v1_100029d4
  %v3_100029d8 = inttoptr i32 %v2_100029d8 to i32*
  %v4_100029d8 = load i32, i32* %v3_100029d8, align 4
  store i32 %v4_100029d8, i32* %r28.global-to-local, align 4
  %v1_100029dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100029dc = add i32 %v1_100029dc, %v1_100029d0
  %v1_100029e0 = add i32 %v2_100029dc, 20
  %v2_100029e0 = inttoptr i32 %v1_100029e0 to i8*
  %v3_100029e0 = load i8, i8* %v2_100029e0, align 1
  %v4_100029e0 = zext i8 %v3_100029e0 to i32
  store i32 %v4_100029e0, i32* %r9.global-to-local, align 4
  %v1_100029e4 = add i32 %v4_100029d8, 20
  store i32 %v1_100029e4, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_100029e0, 32
  br i1 %tmp41, label %dec_label_pc_10002aa0, label %dec_label_pc_100029f0

dec_label_pc_100029f0:                            ; preds = %dec_label_pc_100029d0
  %v0_100029f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100029f0, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_100029f4:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 65535, i32* @r29, align 4
  %v0_100029fc = load i32, i32* %r18.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  br i1 %v4_100029fc, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002a04:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v1_10002a04 = phi i32 [ %v1_10002ad8, %dec_label_pc_10002ac8 ], [ 65535, %dec_label_pc_100029f4 ]
  %v0_10002a04 = load i32, i32* %r19.global-to-local, align 4
  %v4_10002a04 = icmp eq i32 %v0_10002a04, %v1_10002a04
  br i1 %v4_10002a04, label %dec_label_pc_10002af0, label %dec_label_pc_10002a0c

dec_label_pc_10002a0c:                            ; preds = %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge, %dec_label_pc_10002a04
  %v1_10002a0c = phi i32 [ %v1_10002a0c.pre, %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge ], [ %v1_10002a04, %dec_label_pc_10002a04 ]
  %v0_10002a0c = load i32, i32* %r20.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  br i1 %v4_10002a0c, label %dec_label_pc_10002b00, label %dec_label_pc_10002a14

dec_label_pc_10002a14:                            ; preds = %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge, %dec_label_pc_10002a0c
  %v1_10002a14 = phi i32 [ %v1_10002a14.pre, %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge ], [ %v1_10002a0c, %dec_label_pc_10002a0c ]
  %v0_10002a14 = load i32, i32* %r15.global-to-local, align 4
  %v4_10002a14 = icmp eq i32 %v0_10002a14, %v1_10002a14
  br i1 %v4_10002a14, label %dec_label_pc_10002b10, label %dec_label_pc_10002a1c

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge, %dec_label_pc_10002a14
  %v1_10002a1c = phi i32 [ %v1_10002a1c.pre, %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge ], [ %v1_10002a14, %dec_label_pc_10002a14 ]
  %v0_10002a1c = load i32, i32* %r17.global-to-local, align 4
  %v4_10002a1c = icmp eq i32 %v0_10002a1c, %v1_10002a1c
  br i1 %v4_10002a1c, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002a24 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a24, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002a28:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20, %dec_label_pc_10002b2c
  %v0_10002a28 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a28 = trunc i32 %v0_10002a28 to i16
  %v2_10002a28 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002a28 = add i32 %v2_10002a28, 10
  %v4_10002a28 = inttoptr i32 %v3_10002a28 to i16*
  store i16 %v1_10002a28, i16* %v4_10002a28, align 2
  %v0_10002a30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a30, i32* @r3, align 4
  %v2_10002a34 = call i32 @function_100043cc(i32 %v0_10002a30, i32 20)
  %v3_10002a34 = trunc i32 %v2_10002a34 to i16
  %v0_10002a38 = load i32, i32* @r31, align 4
  store i32 %v0_10002a38, i32* @r4, align 4
  %v4_10002a3c = add i32 %v0_10002a30, 10
  %v5_10002a3c = inttoptr i32 %v4_10002a3c to i16*
  store i16 %v3_10002a34, i16* %v5_10002a3c, align 2
  %v0_10002a40 = load i32, i32* %r27.global-to-local, align 4
  %v0_10002a44 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a44 = trunc i32 %v0_10002a44 to i16
  %v2_10002a44 = load i32, i32* @r31, align 4
  %v3_10002a44 = add i32 %v2_10002a44, 16
  %v4_10002a44 = inttoptr i32 %v3_10002a44 to i16*
  store i16 %v1_10002a44, i16* %v4_10002a44, align 2
  %v0_10002a48 = load i32, i32* @r30, align 4
  %v0_10002a4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a4c, i32* %r3.global-to-local, align 4
  %v4_10002a50 = call i32 @function_10004430(i32 %v0_10002a4c, i32 %v0_10002a38, i32 %v0_10002a40, i32 %v0_10002a48)
  %v5_10002a50 = trunc i32 %v4_10002a50 to i16
  store i32 %v4_10002a50, i32* %r3.global-to-local, align 4
  %v3_10002a54 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002a54, i32* %r7.global-to-local, align 4
  %v0_10002a58 = load i32, i32* @r31, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 2
  %v2_10002a58 = inttoptr i32 %v1_10002a58 to i16*
  %v3_10002a58 = load i16, i16* %v2_10002a58, align 2
  %v4_10002a58 = zext i16 %v3_10002a58 to i32
  store i32 %v4_10002a58, i32* %r0.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002a60 = mul i32 %v3_10002a54, 24
  store i32 %v1_10002a60, i32* %r7.global-to-local, align 4
  %v4_10002a64 = add i32 %v0_10002a58, 16
  %v5_10002a64 = inttoptr i32 %v4_10002a64 to i16*
  store i16 %v5_10002a50, i16* %v5_10002a64, align 2
  %v0_10002a68 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002a6c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002a6c, i32* %r3.global-to-local, align 4
  %v0_10002a70 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002a70 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a70 = add i32 %v1_10002a70, %v0_10002a70
  store i32 %v2_10002a70, i32* %r7.global-to-local, align 4
  %v0_10002a78 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a78 = trunc i32 %v0_10002a78 to i16
  %v3_10002a78 = add i32 %v2_10002a70, 2
  %v4_10002a78 = inttoptr i32 %v3_10002a78 to i16*
  store i16 %v1_10002a78, i16* %v4_10002a78, align 2
  store i32 268446340, i32* @lr, align 4
  %v6_10002a80 = call i32 @function_10009558(i32 %v0_10002a6c, i32 %v0_10002a5c, i32 %v0_10002a68, i32 16384, i32 %v2_10002a70, i32 16)
  store i32 %v6_10002a80, i32* %r3.global-to-local, align 4
  %v3_10002a84 = load i32, i32* %stack_var_-136, align 4
  %v1_10002a88 = add i32 %v3_10002a84, 1
  store i32 %v1_10002a88, i32* %r9.global-to-local, align 4
  %v1_10002a8c = load i32, i32* %r21.global-to-local, align 4
  %v2_10002a8c = icmp slt i32 %v1_10002a88, %v1_10002a8c
  store i32 %v1_10002a88, i32* %stack_var_-136, align 4
  br i1 %v2_10002a8c, label %dec_label_pc_100029d0, label %dec_label_pc_10002a98

dec_label_pc_10002a98:                            ; preds = %dec_label_pc_10002a28
  %v0_10002a98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002a98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002a98 = or i1 %v0_10002a98, %v1_10002a98
  br i1 %v2_10002a98, label %dec_label_pc_100029b8.preheader, label %dec_label_pc_100029bc

dec_label_pc_10002aa0:                            ; preds = %dec_label_pc_100029d0
  %v1_10002aa0 = add i32 %v2_100029dc, 16
  %v2_10002aa0 = inttoptr i32 %v1_10002aa0 to i32*
  %v3_10002aa0 = load i32, i32* %v2_10002aa0, align 4
  store i32 %v3_10002aa0, i32* %r29.global-to-local, align 4
  %v0_10002aa4 = call i32 @function_10005d24()
  store i32 %v0_10002aa4, i32* %r3.global-to-local, align 4
  %v3_10002aa8 = load i32, i32* %stack_var_-136, align 4
  %v1_10002aac = mul i32 %v3_10002aa8, 24
  %v1_10002ab0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002ab0 = add i32 %v1_10002ab0, %v1_10002aac
  store i32 %v2_10002ab0, i32* %r9.global-to-local, align 4
  %v1_10002ab4 = add i32 %v2_10002ab0, 20
  %v2_10002ab4 = inttoptr i32 %v1_10002ab4 to i8*
  %v3_10002ab4 = load i8, i8* %v2_10002ab4, align 1
  %v4_10002ab4 = zext i8 %v3_10002ab4 to i32
  store i32 %v4_10002ab4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002ab4, 64
  %v2_10002ab8 = zext i8 %tmp to i32
  %v3_10002ab8 = lshr i32 %v0_10002aa4, %v2_10002ab8
  store i32 %v3_10002ab8, i32* %r3.global-to-local, align 4
  %v0_10002abc = load i32, i32* %r29.global-to-local, align 4
  %v2_10002abc = add i32 %v3_10002ab8, %v0_10002abc
  store i32 %v2_10002abc, i32* %r29.global-to-local, align 4
  %v1_10002ac0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ac0 = add i32 %v1_10002ac0, 16
  %v3_10002ac0 = inttoptr i32 %v2_10002ac0 to i32*
  store i32 %v2_10002abc, i32* %v3_10002ac0, align 4
  %v0_10002ac4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002ac4, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_10002ac8:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002acc = call i32 @function_10005d24()
  store i32 %v0_10002acc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002ad4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ad4 = add i32 %v1_10002ad4, 12
  %v3_10002ad4 = inttoptr i32 %v2_10002ad4 to i32*
  store i32 %v0_10002acc, i32* %v3_10002ad4, align 4
  %v0_10002ad8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002ad8 = load i32, i32* @r29, align 4
  %v4_10002ad8 = icmp eq i32 %v0_10002ad8, %v1_10002ad8
  br i1 %v4_10002ad8, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v0_10002ae0 = call i32 @function_10005d24()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v0_10002ae4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = icmp eq i32 %v0_10002ae4, %v1_10002ae4
  %v3_10002ae8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002ae8 = add i32 %v3_10002ae8, 4
  %v5_10002ae8 = inttoptr i32 %v4_10002ae8 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae8, align 2
  br i1 %v4_10002ae4, label %dec_label_pc_10002af0, label %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge

dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge: ; preds = %dec_label_pc_10002ae0
  %v1_10002a0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a0c

dec_label_pc_10002af0:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a04
  %v0_10002af0 = call i32 @function_10005d24()
  %v1_10002af0 = trunc i32 %v0_10002af0 to i16
  store i32 %v0_10002af0, i32* %r3.global-to-local, align 4
  %v0_10002af4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002af4 = load i32, i32* @r29, align 4
  %v4_10002af4 = icmp eq i32 %v0_10002af4, %v1_10002af4
  %v3_10002af8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002af8 = add i32 %v3_10002af8, 20
  %v5_10002af8 = inttoptr i32 %v4_10002af8 to i16*
  store i16 %v1_10002af0, i16* %v5_10002af8, align 2
  br i1 %v4_10002af4, label %dec_label_pc_10002b00, label %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge

dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge: ; preds = %dec_label_pc_10002af0
  %v1_10002a14.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a14

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_10002af0, %dec_label_pc_10002a0c
  %v0_10002b00 = call i32 @function_10005d24()
  %v1_10002b00 = trunc i32 %v0_10002b00 to i16
  store i32 %v0_10002b00, i32* %r3.global-to-local, align 4
  %v0_10002b04 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002b04 = load i32, i32* @r29, align 4
  %v4_10002b04 = icmp eq i32 %v0_10002b04, %v1_10002b04
  %v3_10002b08 = load i32, i32* @r31, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b00, i16* %v5_10002b08, align 2
  br i1 %v4_10002b04, label %dec_label_pc_10002b10, label %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge

dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge: ; preds = %dec_label_pc_10002b00
  %v1_10002a1c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a1c

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b00, %dec_label_pc_10002a14
  %v0_10002b10 = call i32 @function_10005d24()
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v0_10002b14 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = icmp eq i32 %v0_10002b14, %v1_10002b14
  %v1_10002b18 = load i32, i32* @r31, align 4
  %v2_10002b18 = add i32 %v1_10002b18, 4
  %v3_10002b18 = inttoptr i32 %v2_10002b18 to i32*
  store i32 %v0_10002b10, i32* %v3_10002b18, align 4
  br i1 %v4_10002b14, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002b20 = call i32 @function_10005d24()
  store i32 %v0_10002b20, i32* %r3.global-to-local, align 4
  %v1_10002b24 = load i32, i32* @r31, align 4
  %v2_10002b24 = add i32 %v1_10002b24, 8
  %v3_10002b24 = inttoptr i32 %v2_10002b24 to i32*
  store i32 %v0_10002b20, i32* %v3_10002b24, align 4
  %v0_10002b28 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b28, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002b2c:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20
  %v0_10002b2c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b2c = add i32 %v0_10002b2c, 40
  store i32 %v1_10002b2c, i32* @r3, align 4
  %v0_10002b30 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002b30, i32* @r4, align 4
  %v0_10002b34 = call i32 @function_10005ef8()
  store i32 %v0_10002b34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a28

dec_label_pc_10002b3c:                            ; preds = %dec_label_pc_10002854
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_10002b40 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002b40 = add i32 %v0_10002b40, 40
  store i32 %v1_10002b40, i32* %r24.global-to-local, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v1_10002b48 = add i32 %v0_10002b40, 20
  store i32 %v1_10002b48, i32* @r30, align 4
  %v3_10002b4c = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_10002b4c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002b50 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_10002b50, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_10002b5c:                            ; preds = %dec_label_pc_10002830
  %v0_10002b5c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002b5c, i32* %r3.global-to-local, align 4
  store i32 268446564, i32* @lr, align 4
  %v0_10002b60 = call i32 @function_10008884()
  store i32 %v0_10002b60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b64

dec_label_pc_10002b64:                            ; preds = %dec_label_pc_100025e0, %dec_label_pc_10002b5c
  store i32 %v0_100025f8, i32* %r0.global-to-local, align 4
  %v1_10002b78 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100025e8)
  store i32 %v0_10002638, i32* %r28.global-to-local, align 4
  store i32 %v0_10002640, i32* %r29.global-to-local, align 4
  store i32 %v0_10002648, i32* %r30.global-to-local, align 4
  %v0_10002bc0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002bc0

; uselistorder directives
  uselistorder i32 %v0_10002b00, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v1_10002a98, { 1, 0 }
  uselistorder i1 %v0_10002a98, { 1, 0 }
  uselistorder i32 %v1_10002a88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002a50, { 1, 0 }
  uselistorder i32 %v1_100028c4, { 1, 0 }
  uselistorder i32 %v1_100028bc, { 1, 0 }
  uselistorder i32 %v1_100028a0, { 1, 0 }
  uselistorder i32 %v1_1000289c, { 1, 0 }
  uselistorder i32 %v1_10002888, { 1, 0 }
  uselistorder i32 %v1_10002884, { 1, 0 }
  uselistorder i32 %v1_10002880, { 2, 1, 0 }
  uselistorder i32 %v1_10002878, { 1, 2, 0, 3 }
  uselistorder i32 %v6_1000280c, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_100027f8, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10002678, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder label %dec_label_pc_10002b64, { 1, 0 }
  uselistorder label %dec_label_pc_10002b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10002a28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100029bc, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000298c, { 1, 0 }
  uselistorder label %dec_label_pc_10002910, { 1, 0 }
}

define i32 @function_10002bc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bc4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10002bc8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bc8, i32* %r0.global-to-local, align 4
  %v0_10002bcc = call i32 @__asm_mfcr()
  store i32 %v0_10002bcc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10002bdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bcc, i32* %r24.global-to-local, align 4
  %v0_10002c1c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c24 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002c30 = load i32, i32* @r31, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_10009930(i32 4, i32 4)
  store i32 %v2_10002c34, i32* %r25.global-to-local, align 4
  %v0_10002c3c = load i32, i32* @r28, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c3c to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* %r21.global-to-local, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v0_10002cb0 = load i32, i32* @r28, align 4
  %v1_10002cb4 = urem i32 %v5_10002ca0, 256
  store i32 %v1_10002cb4, i32* @r31, align 4
  %v0_10002cb8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cb8, i32* %r3.global-to-local, align 4
  store i32 268446912, i32* @lr, align 4
  %v4_10002cbc = inttoptr i32 %v0_10002cb0 to i32*
  %v5_10002cbc = call i32 @function_100006a8(i32 %v0_10002cb8, i32* %v4_10002cbc, i32 6, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  store i32 %v5_10002cbc, i32* %r22.global-to-local, align 4
  %v0_10002cd4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd4, i32* %r3.global-to-local, align 4
  store i32 268446940, i32* @lr, align 4
  %v4_10002cd8 = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cd8 = call i32 @function_100006a8(i32 %v0_10002cd4, i32* %v4_10002cd8, i32 7, i32 65535)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  store i32 %v5_10002cd8, i32* %r23.global-to-local, align 4
  %v0_10002cf0 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf0, i32* %r3.global-to-local, align 4
  store i32 268446968, i32* @lr, align 4
  %v4_10002cf4 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf4 = call i32 @function_100006a8(i32 %v0_10002cf0, i32* %v4_10002cf4, i32 17, i32 65535)
  %v0_10002cf8 = load i32, i32* @r28, align 4
  store i32 %v5_10002cf4, i32* %r19.global-to-local, align 4
  %v0_10002d08 = load i32, i32* @r29, align 4
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  store i32 268446992, i32* @lr, align 4
  %v4_10002d0c = inttoptr i32 %v0_10002cf8 to i32*
  %v5_10002d0c = call i32 @function_100006a8(i32 %v0_10002d08, i32* %v4_10002d0c, i32 18, i32 0)
  %v0_10002d10 = load i32, i32* @r28, align 4
  store i32 %v5_10002d0c, i32* %r20.global-to-local, align 4
  %v0_10002d20 = load i32, i32* @r29, align 4
  store i32 %v0_10002d20, i32* %r3.global-to-local, align 4
  store i32 268447016, i32* @lr, align 4
  %v4_10002d24 = inttoptr i32 %v0_10002d10 to i32*
  %v5_10002d24 = call i32 @function_100006a8(i32 %v0_10002d20, i32* %v4_10002d24, i32 11, i32 0)
  %v0_10002d28 = load i32, i32* @r28, align 4
  store i32 %v5_10002d24, i32* %r14.global-to-local, align 4
  %v0_10002d38 = load i32, i32* @r29, align 4
  store i32 %v0_10002d38, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v4_10002d3c = inttoptr i32 %v0_10002d28 to i32*
  %v5_10002d3c = call i32 @function_100006a8(i32 %v0_10002d38, i32* %v4_10002d3c, i32 12, i32 0)
  %v0_10002d40 = load i32, i32* @r28, align 4
  store i32 %v5_10002d3c, i32* %r17.global-to-local, align 4
  %v0_10002d50 = load i32, i32* @r29, align 4
  store i32 %v0_10002d50, i32* %r3.global-to-local, align 4
  store i32 268447064, i32* @lr, align 4
  %v4_10002d54 = inttoptr i32 %v0_10002d40 to i32*
  %v5_10002d54 = call i32 @function_100006a8(i32 %v0_10002d50, i32* %v4_10002d54, i32 13, i32 0)
  %v0_10002d58 = load i32, i32* @r28, align 4
  store i32 %v5_10002d54, i32* %r18.global-to-local, align 4
  %v0_10002d68 = load i32, i32* @r29, align 4
  store i32 %v0_10002d68, i32* %r3.global-to-local, align 4
  store i32 268447088, i32* @lr, align 4
  %v4_10002d6c = inttoptr i32 %v0_10002d58 to i32*
  %v5_10002d6c = call i32 @function_100006a8(i32 %v0_10002d68, i32* %v4_10002d6c, i32 14, i32 0)
  %v0_10002d70 = load i32, i32* @r28, align 4
  %v0_10002d80 = load i32, i32* @r29, align 4
  store i32 %v0_10002d80, i32* %r3.global-to-local, align 4
  store i32 268447112, i32* @lr, align 4
  %v4_10002d84 = inttoptr i32 %v0_10002d70 to i32*
  %v5_10002d84 = call i32 @function_100006a8(i32 %v0_10002d80, i32* %v4_10002d84, i32 15, i32 1)
  %v0_10002d88 = load i32, i32* @r28, align 4
  store i32 %v5_10002d84, i32* %r16.global-to-local, align 4
  %v0_10002d98 = load i32, i32* @r29, align 4
  store i32 %v0_10002d98, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v4_10002d9c = inttoptr i32 %v0_10002d88 to i32*
  %v5_10002d9c = call i32 @function_100006a8(i32 %v0_10002d98, i32* %v4_10002d9c, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002da4 = load i32, i32* @global_var_1001ba00.14, align 4
  %v0_10002da8 = load i32, i32* @r28, align 4
  store i32 %v5_10002d9c, i32* %r30.global-to-local, align 4
  %v0_10002db4 = load i32, i32* @r29, align 4
  store i32 %v0_10002db4, i32* %r3.global-to-local, align 4
  store i32 268447164, i32* @lr, align 4
  %v5_10002db8 = inttoptr i32 %v0_10002da8 to i32*
  %v6_10002db8 = call i32 @function_10000628(i32 %v0_10002db4, i32* %v5_10002db8, i32 25, i32 %v3_10002da4, i32 268566528)
  store i32 %v6_10002db8, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447184, i32* @lr, align 4
  %v3_10002dcc = call i32 @function_100095d4(i32 2, i32 3, i32 6)
  store i32 %v3_10002dcc, i32* %r3.global-to-local, align 4
  %v3_10002dd0 = icmp eq i32 %v3_10002dcc, -1
  store i32 %v3_10002dcc, i32* %r26.global-to-local, align 4
  br i1 %v3_10002dd0, label %dec_label_pc_10003108, label %dec_label_pc_10002ddc

dec_label_pc_10002ddc:                            ; preds = %dec_label_pc_10002bc4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002de8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268447224, i32* @lr, align 4
  %v4_10002df4 = call i32 @function_10009598(i32 0, i32 3, i32 %v2_10002de8, i32 4)
  store i32 %v4_10002df4, i32* %r3.global-to-local, align 4
  %v3_10002df8 = icmp eq i32 %v4_10002df4, -1
  br i1 %v3_10002df8, label %dec_label_pc_10003100, label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002ddc
  %v0_10002e00 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002e00 = icmp slt i32 %v0_10002e00, 0
  %v3_10002e00 = icmp eq i32 %v0_10002e00, 0
  store i1 %v1_10002e00, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002e00, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10002e0c = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e0c = urem i32 %v0_10002e0c, 65536
  store i32 %v1_10002e0c, i32* %r21.global-to-local, align 4
  %v0_10002e10 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002e10 = urem i32 %v0_10002e10, 65536
  store i32 %v1_10002e10, i32* %r22.global-to-local, align 4
  %v0_10002e14 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e14 = urem i32 %v0_10002e14, 65536
  store i32 %v1_10002e14, i32* %r23.global-to-local, align 4
  %v0_10002e18 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002e18 = urem i32 %v0_10002e18, 256
  store i32 %v1_10002e18, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002e00, 1
  br i1 %tmp40, label %dec_label_pc_10002f7c, label %dec_label_pc_10002e20

dec_label_pc_10002e20:                            ; preds = %dec_label_pc_10002e00
  store i32 %v5_10002d6c, i32* %r0.global-to-local, align 4
  %v0_10002e24 = load i32, i32* @r31, align 4
  %v3_10002e24 = icmp eq i32 %v0_10002e24, 0
  store i1 %v3_10002e24, i1* %cr3_eq.global-to-local, align 1
  %v0_10002e28 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e28 = urem i32 %v0_10002e28, 2
  store i32 %v1_10002e28, i32* %r29.global-to-local, align 4
  %v0_10002e2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e2c = urem i32 %v0_10002e2c, 2
  store i32 %v1_10002e2c, i32* %r17.global-to-local, align 4
  %v0_10002e30 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002e30 = urem i32 %v0_10002e30, 2
  store i32 %v1_10002e30, i32* %r18.global-to-local, align 4
  %v1_10002e34 = urem i32 %v5_10002d6c, 2
  store i32 %v1_10002e34, i32* %r28.global-to-local, align 4
  %v0_10002e38 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002e38 = urem i32 %v0_10002e38, 2
  store i32 %v1_10002e38, i32* %r30.global-to-local, align 4
  %v1_10002e3c = urem i32 %v0_10002e18, 2
  store i32 %v1_10002e3c, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10002e8c = sext i8 %v5_10002c5c to i32
  %v4_10002e94 = sext i8 %v5_10002c94 to i32
  br label %dec_label_pc_10002e44

dec_label_pc_10002e44:                            ; preds = %dec_label_pc_10002ea8, %dec_label_pc_10002e20
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268447312, i32* @lr, align 4
  %v2_10002e4c = call i32 @function_10009930(i32 128, i32 1)
  store i32 %v2_10002e4c, i32* %r3.global-to-local, align 4
  %v3_10002e50 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002e50, i32* %r9.global-to-local, align 4
  %v0_10002e54 = load i32, i32* @r31, align 4
  %v1_10002e54 = mul i32 %v0_10002e54, 4
  store i32 %v1_10002e54, i32* %r0.global-to-local, align 4
  %v1_10002e58 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002e58 = add i32 %v1_10002e58, %v1_10002e54
  %v4_10002e58 = inttoptr i32 %v3_10002e58 to i32*
  store i32 %v2_10002e4c, i32* %v4_10002e58, align 4
  %v0_10002e5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e5c = mul i32 %v0_10002e5c, 4
  store i32 %v1_10002e5c, i32* %r9.global-to-local, align 4
  %v1_10002e60 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002e60 = add i32 %v1_10002e60, %v1_10002e5c
  %v3_10002e60 = inttoptr i32 %v2_10002e60 to i32*
  %v4_10002e60 = load i32, i32* %v3_10002e60, align 4
  store i32 %v4_10002e60, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002e68 = inttoptr i32 %v4_10002e60 to i32*
  %v2_10002e68 = load i32, i32* %v1_10002e68, align 4
  store i32 %v2_10002e68, i32* %r0.global-to-local, align 4
  %v1_10002e6c = add i32 %v4_10002e60, 20
  store i32 %v1_10002e6c, i32* %r11.global-to-local, align 4
  %v0_10002e70 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e70 = trunc i32 %v0_10002e70 to i16
  %v3_10002e70 = add i32 %v4_10002e60, 4
  %v4_10002e70 = inttoptr i32 %v3_10002e70 to i16*
  store i16 %v1_10002e70, i16* %v4_10002e70, align 2
  %v1_10002e74 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e74, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002e7c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10002e84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e84 = inttoptr i32 %v1_10002e84 to i32*
  store i32 %v1_10002e7c, i32* %v2_10002e84, align 4
  %v0_10002e88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e88 = trunc i32 %v0_10002e88 to i16
  %v2_10002e88 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e88 = add i32 %v2_10002e88, 2
  %v4_10002e88 = inttoptr i32 %v3_10002e88 to i16*
  store i16 %v1_10002e88, i16* %v4_10002e88, align 2
  store i32 %v4_10002e8c, i32* %r0.global-to-local, align 4
  %v2_10002e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e90 = add i32 %v2_10002e90, 1
  %v4_10002e90 = inttoptr i32 %v3_10002e90 to i8*
  store i8 %v5_10002c5c, i8* %v4_10002e90, align 1
  store i32 %v4_10002e94, i32* %r9.global-to-local, align 4
  %v2_10002e98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e98 = add i32 %v2_10002e98, 8
  %v4_10002e98 = inttoptr i32 %v3_10002e98 to i8*
  store i8 %v5_10002c94, i8* %v4_10002e98, align 1
  %v0_10002e9c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002e9c, label %dec_label_pc_10002ea8, label %dec_label_pc_10002ea0

dec_label_pc_10002ea0:                            ; preds = %dec_label_pc_10002e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002ea4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002ea4 = add i32 %v2_10002ea4, 6
  %v4_10002ea4 = inttoptr i32 %v3_10002ea4 to i16*
  store i16 16384, i16* %v4_10002ea4, align 2
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002e44, %dec_label_pc_10002ea0
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002eac = load i32, i32* %r15.global-to-local, align 4
  %v1_10002eac = load i32, i32* %r31.global-to-local, align 4
  %v2_10002eac = add i32 %v1_10002eac, 12
  %v3_10002eac = inttoptr i32 %v2_10002eac to i32*
  store i32 %v0_10002eac, i32* %v3_10002eac, align 4
  %v0_10002eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002eb0 = trunc i32 %v0_10002eb0 to i8
  %v2_10002eb0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb0 = add i32 %v2_10002eb0, 9
  %v4_10002eb0 = inttoptr i32 %v3_10002eb0 to i8*
  store i8 %v1_10002eb0, i8* %v4_10002eb0, align 1
  %v0_10002eb4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002eb4 = trunc i32 %v0_10002eb4 to i16
  %v2_10002eb4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb4 = add i32 %v2_10002eb4, 20
  %v4_10002eb4 = inttoptr i32 %v3_10002eb4 to i16*
  store i16 %v1_10002eb4, i16* %v4_10002eb4, align 2
  %v3_10002eb8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002eb8, i32* %r9.global-to-local, align 4
  %v0_10002ebc = load i32, i32* %r23.global-to-local, align 4
  %v1_10002ebc = trunc i32 %v0_10002ebc to i16
  %v2_10002ebc = load i32, i32* %r11.global-to-local, align 4
  %v3_10002ebc = add i32 %v2_10002ebc, 2
  %v4_10002ebc = inttoptr i32 %v3_10002ebc to i16*
  store i16 %v1_10002ebc, i16* %v4_10002ebc, align 2
  %v0_10002ec0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ec0 = mul i32 %v0_10002ec0, 24
  %v1_10002ec4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002ec4 = add i32 %v1_10002ec4, %v1_10002ec0
  store i32 %v2_10002ec4, i32* %r9.global-to-local, align 4
  %v1_10002ec8 = add i32 %v2_10002ec4, 16
  %v2_10002ec8 = inttoptr i32 %v1_10002ec8 to i32*
  %v3_10002ec8 = load i32, i32* %v2_10002ec8, align 4
  store i32 %v3_10002ec8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10002ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ed0 = add i32 %v1_10002ed0, 16
  %v3_10002ed0 = inttoptr i32 %v2_10002ed0 to i32*
  store i32 %v3_10002ec8, i32* %v3_10002ed0, align 4
  %v0_10002ed4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ed4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002ed4 = add i32 %v1_10002ed4, 4
  %v3_10002ed4 = inttoptr i32 %v2_10002ed4 to i32*
  store i32 %v0_10002ed4, i32* %v3_10002ed4, align 4
  %v0_10002ed8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002ed8 = add i32 %v0_10002ed8, 12
  %v2_10002ed8 = inttoptr i32 %v1_10002ed8 to i32*
  %v3_10002ed8 = load i32, i32* %v2_10002ed8, align 4
  store i32 %v3_10002ed8, i32* %r0.global-to-local, align 4
  %v1_10002edc = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10002edc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002ee4 = call i32 @__asm_rlwimi(i32 %v1_10002e3c, i32 21, i32 10, i32 10)
  store i32 %v1_10002ee4, i32* %r0.global-to-local, align 4
  %v1_10002ee8 = call i32 @__asm_rlwimi(i32 %v1_10002e2c, i32 20, i32 11, i32 11)
  store i32 %v1_10002ee8, i32* %r0.global-to-local, align 4
  %v1_10002eec = call i32 @__asm_rlwimi(i32 %v1_10002e30, i32 19, i32 12, i32 12)
  store i32 %v1_10002eec, i32* %r0.global-to-local, align 4
  %v1_10002ef0 = call i32 @__asm_rlwimi(i32 %v1_10002e34, i32 18, i32 13, i32 13)
  store i32 %v1_10002ef0, i32* %r0.global-to-local, align 4
  %v1_10002ef4 = call i32 @__asm_rlwimi(i32 %v1_10002e28, i32 17, i32 14, i32 14)
  store i32 %v1_10002ef4, i32* %r0.global-to-local, align 4
  %v1_10002ef8 = call i32 @__asm_rlwimi(i32 %v1_10002e38, i32 16, i32 15, i32 15)
  %v1_10002efc = load i32, i32* %r11.global-to-local, align 4
  %v2_10002efc = add i32 %v1_10002efc, 12
  %v3_10002efc = inttoptr i32 %v2_10002efc to i32*
  store i32 %v1_10002ef8, i32* %v3_10002efc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10002f04 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f04 = add i32 %v2_10002f04, 40
  %v4_10002f04 = inttoptr i32 %v3_10002f04 to i8*
  store i8 2, i8* %v4_10002f04, align 1
  %v0_10002f08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f08 = trunc i32 %v0_10002f08 to i8
  %v2_10002f08 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f08 = add i32 %v2_10002f08, 41
  %v4_10002f08 = inttoptr i32 %v3_10002f08 to i8*
  store i8 %v1_10002f08, i8* %v4_10002f08, align 1
  %v0_10002f0c = call i32 @function_10005d24()
  %v2_10002f14 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f14 = add i32 %v2_10002f14, 46
  %v4_10002f14 = inttoptr i32 %v3_10002f14 to i8*
  store i8 8, i8* %v4_10002f14, align 1
  %v1_10002f18 = urem i32 %v0_10002f0c, 16
  store i32 %v1_10002f18, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10002f24 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f24 = add i32 %v2_10002f24, 44
  %v4_10002f24 = inttoptr i32 %v3_10002f24 to i8*
  store i8 4, i8* %v4_10002f24, align 1
  %v0_10002f28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f28 = add i32 %v0_10002f28, 1400
  store i32 %v1_10002f28, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10002f30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f30 = trunc i32 %v0_10002f30 to i8
  %v2_10002f30 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f30 = add i32 %v2_10002f30, 45
  %v4_10002f30 = inttoptr i32 %v3_10002f30 to i8*
  store i8 %v1_10002f30, i8* %v4_10002f30, align 1
  %v0_10002f34 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f34 = trunc i32 %v0_10002f34 to i8
  %v2_10002f34 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f34 = add i32 %v2_10002f34, 47
  %v4_10002f34 = inttoptr i32 %v3_10002f34 to i8*
  store i8 %v1_10002f34, i8* %v4_10002f34, align 1
  %v0_10002f38 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f38 = trunc i32 %v0_10002f38 to i16
  %v2_10002f38 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f38 = add i32 %v2_10002f38, 42
  %v4_10002f38 = inttoptr i32 %v3_10002f38 to i16*
  store i16 %v1_10002f38, i16* %v4_10002f38, align 2
  %v0_10002f3c = call i32 @function_10005d24()
  store i32 %v0_10002f3c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10002f48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f48 = add i32 %v1_10002f48, 52
  %v3_10002f48 = inttoptr i32 %v2_10002f48 to i32*
  store i32 0, i32* %v3_10002f48, align 4
  %v0_10002f4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f4c = trunc i32 %v0_10002f4c to i8
  %v2_10002f4c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f4c = add i32 %v2_10002f4c, 56
  %v4_10002f4c = inttoptr i32 %v3_10002f4c to i8*
  store i8 %v1_10002f4c, i8* %v4_10002f4c, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10002f58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f58 = add i32 %v1_10002f58, 48
  %v3_10002f58 = inttoptr i32 %v2_10002f58 to i32*
  store i32 %v0_10002f3c, i32* %v3_10002f58, align 4
  %v0_10002f5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f5c = trunc i32 %v0_10002f5c to i8
  %v2_10002f5c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f5c = add i32 %v2_10002f5c, 59
  %v4_10002f5c = inttoptr i32 %v3_10002f5c to i8*
  store i8 %v1_10002f5c, i8* %v4_10002f5c, align 1
  %v0_10002f60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f60 = trunc i32 %v0_10002f60 to i8
  %v2_10002f60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f60 = add i32 %v2_10002f60, 57
  %v4_10002f60 = inttoptr i32 %v3_10002f60 to i8*
  store i8 %v1_10002f60, i8* %v4_10002f60, align 1
  %v0_10002f64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f64 = trunc i32 %v0_10002f64 to i8
  %v2_10002f64 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f64 = add i32 %v2_10002f64, 58
  %v4_10002f64 = inttoptr i32 %v3_10002f64 to i8*
  store i8 %v1_10002f64, i8* %v4_10002f64, align 1
  %v3_10002f68 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002f68, i32* %r9.global-to-local, align 4
  %v1_10002f6c = add i32 %v3_10002f68, 1
  store i32 %v1_10002f6c, i32* %r31.global-to-local, align 4
  %v1_10002f70 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002f70 = icmp slt i32 %v1_10002f6c, %v1_10002f70
  store i32 %v1_10002f6c, i32* %stack_var_-120, align 4
  br i1 %v2_10002f70, label %dec_label_pc_10002e44, label %dec_label_pc_10002f7c.loopexit

dec_label_pc_10002f7c.loopexit:                   ; preds = %dec_label_pc_10002ea8
  %v0_10002f80.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10002f84.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002f84.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %dec_label_pc_10002f7c.loopexit, %dec_label_pc_10002e00
  %v1_10002f84.pre = phi i1 [ %v1_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f84.pre = phi i1 [ %v0_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v3_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f80 = phi i32 [ %v0_10002f80.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e18, %dec_label_pc_10002e00 ]
  %v0_10002f7c = load i32, i32* %r15.global-to-local, align 4
  %v3_10002f7c = icmp eq i32 %v0_10002f7c, -1
  store i1 %v3_10002f7c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002f80 = icmp eq i32 %v0_10002f80, 0
  store i1 %v3_10002f80, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002f84.outer

dec_label_pc_10002f84.outer:                      ; preds = %dec_label_pc_10003060, %dec_label_pc_10002f7c
  %v1_10002f84.ph = phi i1 [ %v1_10002f84.pre, %dec_label_pc_10002f7c ], [ %v1_10003060, %dec_label_pc_10003060 ]
  %v0_10002f84.ph = phi i1 [ %v0_10002f84.pre, %dec_label_pc_10002f7c ], [ %v0_10003060, %dec_label_pc_10003060 ]
  %v2_10002f84 = or i1 %v1_10002f84.ph, %v0_10002f84.ph
  br label %dec_label_pc_10002f84

dec_label_pc_10002f84:                            ; preds = %dec_label_pc_10002f84.outer, %dec_label_pc_10002f84
  br i1 %v2_10002f84, label %dec_label_pc_10002f84, label %dec_label_pc_10002f88

dec_label_pc_10002f88:                            ; preds = %dec_label_pc_10002f84, %dec_label_pc_10003060
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002f98

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002ff0, %dec_label_pc_10002f88
  %v0_10002f98 = phi i32 [ %v1_10003050, %dec_label_pc_10002ff0 ], [ 0, %dec_label_pc_10002f88 ]
  %v1_10002f98 = mul i32 %v0_10002f98, 24
  store i32 %v1_10002f98, i32* %r0.global-to-local, align 4
  %v1_10002f9c = mul i32 %v0_10002f98, 4
  store i32 %v1_10002f9c, i32* %r11.global-to-local, align 4
  %v1_10002fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002fa0 = add i32 %v1_10002fa0, %v1_10002f9c
  %v3_10002fa0 = inttoptr i32 %v2_10002fa0 to i32*
  %v4_10002fa0 = load i32, i32* %v3_10002fa0, align 4
  store i32 %v4_10002fa0, i32* %r28.global-to-local, align 4
  %v1_10002fa4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002fa4 = add i32 %v1_10002fa4, %v1_10002f98
  %v1_10002fa8 = add i32 %v2_10002fa4, 20
  %v2_10002fa8 = inttoptr i32 %v1_10002fa8 to i8*
  %v3_10002fa8 = load i8, i8* %v2_10002fa8, align 1
  %v4_10002fa8 = zext i8 %v3_10002fa8 to i32
  store i32 %v4_10002fa8, i32* %r9.global-to-local, align 4
  %v1_10002fac = add i32 %v4_10002fa0, 20
  store i32 %v1_10002fac, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10002fa8, 32
  br i1 %tmp41, label %dec_label_pc_10003068, label %dec_label_pc_10002fb8

dec_label_pc_10002fb8:                            ; preds = %dec_label_pc_10002f98
  %v0_10002fb8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002fb8, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10002fbc:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r21.global-to-local, align 4
  %v4_10002fc4 = icmp eq i32 %v0_10002fc4, 65535
  br i1 %v4_10002fc4, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_10002fcc:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v1_10002fcc = phi i32 [ %v1_100030a0, %dec_label_pc_10003090 ], [ 65535, %dec_label_pc_10002fbc ]
  %v0_10002fcc = load i32, i32* %r22.global-to-local, align 4
  %v4_10002fcc = icmp eq i32 %v0_10002fcc, %v1_10002fcc
  br i1 %v4_10002fcc, label %dec_label_pc_100030b8, label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge, %dec_label_pc_10002fcc
  %v1_10002fd4 = phi i32 [ %v1_10002fd4.pre, %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge ], [ %v1_10002fcc, %dec_label_pc_10002fcc ]
  %v0_10002fd4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10002fd4 = icmp eq i32 %v0_10002fd4, %v1_10002fd4
  br i1 %v4_10002fd4, label %dec_label_pc_100030c8, label %dec_label_pc_10002fdc

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge, %dec_label_pc_10002fd4
  %v1_10002fdc = phi i32 [ %v1_10002fdc.pre, %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge ], [ %v1_10002fd4, %dec_label_pc_10002fd4 ]
  %v0_10002fdc = load i32, i32* %r19.global-to-local, align 4
  %v4_10002fdc = icmp eq i32 %v0_10002fdc, %v1_10002fdc
  br i1 %v4_10002fdc, label %dec_label_pc_100030d8, label %dec_label_pc_10002fe4

dec_label_pc_10002fe4:                            ; preds = %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge, %dec_label_pc_10002fdc
  %v1_10002fe4 = phi i32 [ %v1_10002fe4.pre, %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge ], [ %v1_10002fdc, %dec_label_pc_10002fdc ]
  %v0_10002fe4 = load i32, i32* %r20.global-to-local, align 4
  %v4_10002fe4 = icmp eq i32 %v0_10002fe4, %v1_10002fe4
  br i1 %v4_10002fe4, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_10002fec:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_10002fec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002fec, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_10002ff0:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8, %dec_label_pc_100030f4
  %v0_10002ff0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002ff0 = trunc i32 %v0_10002ff0 to i16
  %v2_10002ff0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ff0 = add i32 %v2_10002ff0, 10
  %v4_10002ff0 = inttoptr i32 %v3_10002ff0 to i16*
  store i16 %v1_10002ff0, i16* %v4_10002ff0, align 2
  %v0_10002ff8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ff8, i32* @r3, align 4
  %v2_10002ffc = call i32 @function_100043cc(i32 %v0_10002ff8, i32 20)
  %v3_10002ffc = trunc i32 %v2_10002ffc to i16
  %v0_10003000 = load i32, i32* @r31, align 4
  store i32 %v0_10003000, i32* @r4, align 4
  %v4_10003004 = add i32 %v0_10002ff8, 10
  %v5_10003004 = inttoptr i32 %v4_10003004 to i16*
  store i16 %v3_10002ffc, i16* %v5_10003004, align 2
  %v0_1000300c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000300c = trunc i32 %v0_1000300c to i16
  %v2_1000300c = load i32, i32* @r31, align 4
  %v3_1000300c = add i32 %v2_1000300c, 16
  %v4_1000300c = inttoptr i32 %v3_1000300c to i16*
  store i16 %v1_1000300c, i16* %v4_1000300c, align 2
  %v0_10003014 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003014, i32* %r3.global-to-local, align 4
  %v4_10003018 = call i32 @function_10004430(i32 %v0_10003014, i32 %v0_10003000, i32 40, i32 40)
  %v5_10003018 = trunc i32 %v4_10003018 to i16
  store i32 %v4_10003018, i32* %r3.global-to-local, align 4
  %v3_1000301c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000301c, i32* %r7.global-to-local, align 4
  %v0_10003020 = load i32, i32* @r31, align 4
  %v1_10003020 = add i32 %v0_10003020, 2
  %v2_10003020 = inttoptr i32 %v1_10003020 to i16*
  %v3_10003020 = load i16, i16* %v2_10003020, align 2
  %v4_10003020 = zext i16 %v3_10003020 to i32
  store i32 %v4_10003020, i32* %r0.global-to-local, align 4
  %v0_10003024 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003028 = mul i32 %v3_1000301c, 24
  store i32 %v1_10003028, i32* %r7.global-to-local, align 4
  %v4_1000302c = add i32 %v0_10003020, 16
  %v5_1000302c = inttoptr i32 %v4_1000302c to i16*
  store i16 %v5_10003018, i16* %v5_1000302c, align 2
  %v0_10003034 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003034, i32* %r3.global-to-local, align 4
  %v0_10003038 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003038 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003038 = add i32 %v1_10003038, %v0_10003038
  store i32 %v2_10003038, i32* %r7.global-to-local, align 4
  %v0_10003040 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003040 = trunc i32 %v0_10003040 to i16
  %v3_10003040 = add i32 %v2_10003038, 2
  %v4_10003040 = inttoptr i32 %v3_10003040 to i16*
  store i16 %v1_10003040, i16* %v4_10003040, align 2
  store i32 268447820, i32* @lr, align 4
  %v6_10003048 = call i32 @function_10009558(i32 %v0_10003034, i32 %v0_10003024, i32 60, i32 16384, i32 %v2_10003038, i32 16)
  store i32 %v6_10003048, i32* %r3.global-to-local, align 4
  %v3_1000304c = load i32, i32* %stack_var_-120, align 4
  %v1_10003050 = add i32 %v3_1000304c, 1
  store i32 %v1_10003050, i32* %r9.global-to-local, align 4
  %v1_10003054 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003054 = icmp slt i32 %v1_10003050, %v1_10003054
  store i32 %v1_10003050, i32* %stack_var_-120, align 4
  br i1 %v2_10003054, label %dec_label_pc_10002f98, label %dec_label_pc_10003060

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10002ff0
  %v0_10003060 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003060 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003060 = or i1 %v0_10003060, %v1_10003060
  br i1 %v2_10003060, label %dec_label_pc_10002f84.outer, label %dec_label_pc_10002f88

dec_label_pc_10003068:                            ; preds = %dec_label_pc_10002f98
  %v1_10003068 = add i32 %v2_10002fa4, 16
  %v2_10003068 = inttoptr i32 %v1_10003068 to i32*
  %v3_10003068 = load i32, i32* %v2_10003068, align 4
  store i32 %v3_10003068, i32* %r29.global-to-local, align 4
  %v0_1000306c = call i32 @function_10005d24()
  store i32 %v0_1000306c, i32* %r3.global-to-local, align 4
  %v3_10003070 = load i32, i32* %stack_var_-120, align 4
  %v1_10003074 = mul i32 %v3_10003070, 24
  %v1_10003078 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003078 = add i32 %v1_10003078, %v1_10003074
  store i32 %v2_10003078, i32* %r9.global-to-local, align 4
  %v1_1000307c = add i32 %v2_10003078, 20
  %v2_1000307c = inttoptr i32 %v1_1000307c to i8*
  %v3_1000307c = load i8, i8* %v2_1000307c, align 1
  %v4_1000307c = zext i8 %v3_1000307c to i32
  store i32 %v4_1000307c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000307c, 64
  %v2_10003080 = zext i8 %tmp to i32
  %v3_10003080 = lshr i32 %v0_1000306c, %v2_10003080
  store i32 %v3_10003080, i32* %r3.global-to-local, align 4
  %v0_10003084 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003084 = add i32 %v3_10003080, %v0_10003084
  store i32 %v2_10003084, i32* %r29.global-to-local, align 4
  %v1_10003088 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003088 = add i32 %v1_10003088, 16
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v2_10003084, i32* %v3_10003088, align 4
  %v0_1000308c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000308c, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10003090:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003094 = call i32 @function_10005d24()
  store i32 %v0_10003094, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_1000309c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000309c = add i32 %v1_1000309c, 12
  %v3_1000309c = inttoptr i32 %v2_1000309c to i32*
  store i32 %v0_10003094, i32* %v3_1000309c, align 4
  %v0_100030a0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030a0 = load i32, i32* %r29.global-to-local, align 4
  %v4_100030a0 = icmp eq i32 %v0_100030a0, %v1_100030a0
  br i1 %v4_100030a0, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_100030a8:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v0_100030a8 = call i32 @function_10005d24()
  %v1_100030a8 = trunc i32 %v0_100030a8 to i16
  store i32 %v0_100030a8, i32* %r3.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r22.global-to-local, align 4
  %v1_100030ac = load i32, i32* %r29.global-to-local, align 4
  %v4_100030ac = icmp eq i32 %v0_100030ac, %v1_100030ac
  %v3_100030b0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030b0 = add i32 %v3_100030b0, 4
  %v5_100030b0 = inttoptr i32 %v4_100030b0 to i16*
  store i16 %v1_100030a8, i16* %v5_100030b0, align 2
  br i1 %v4_100030ac, label %dec_label_pc_100030b8, label %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge

dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge: ; preds = %dec_label_pc_100030a8
  %v1_10002fd4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fd4

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_100030a8, %dec_label_pc_10002fcc
  %v0_100030b8 = call i32 @function_10005d24()
  %v1_100030b8 = trunc i32 %v0_100030b8 to i16
  store i32 %v0_100030b8, i32* %r3.global-to-local, align 4
  %v0_100030bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100030bc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030bc = icmp eq i32 %v0_100030bc, %v1_100030bc
  %v3_100030c0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030c0 = add i32 %v3_100030c0, 20
  %v5_100030c0 = inttoptr i32 %v4_100030c0 to i16*
  store i16 %v1_100030b8, i16* %v5_100030c0, align 2
  br i1 %v4_100030bc, label %dec_label_pc_100030c8, label %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge

dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge: ; preds = %dec_label_pc_100030b8
  %v1_10002fdc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fdc

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_100030b8, %dec_label_pc_10002fd4
  %v0_100030c8 = call i32 @function_10005d24()
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  store i32 %v0_100030c8, i32* %r3.global-to-local, align 4
  %v0_100030cc = load i32, i32* %r19.global-to-local, align 4
  %v1_100030cc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030cc = icmp eq i32 %v0_100030cc, %v1_100030cc
  %v3_100030d0 = load i32, i32* @r31, align 4
  %v4_100030d0 = add i32 %v3_100030d0, 2
  %v5_100030d0 = inttoptr i32 %v4_100030d0 to i16*
  store i16 %v1_100030c8, i16* %v5_100030d0, align 2
  br i1 %v4_100030cc, label %dec_label_pc_100030d8, label %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge

dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge: ; preds = %dec_label_pc_100030c8
  %v1_10002fe4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fe4

dec_label_pc_100030d8:                            ; preds = %dec_label_pc_100030c8, %dec_label_pc_10002fdc
  %v0_100030d8 = call i32 @function_10005d24()
  store i32 %v0_100030d8, i32* %r3.global-to-local, align 4
  %v0_100030dc = load i32, i32* %r20.global-to-local, align 4
  %v1_100030dc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030dc = icmp eq i32 %v0_100030dc, %v1_100030dc
  %v1_100030e0 = load i32, i32* @r31, align 4
  %v2_100030e0 = add i32 %v1_100030e0, 4
  %v3_100030e0 = inttoptr i32 %v2_100030e0 to i32*
  store i32 %v0_100030d8, i32* %v3_100030e0, align 4
  br i1 %v4_100030dc, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_100030e8:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_100030e8 = call i32 @function_10005d24()
  store i32 %v0_100030e8, i32* %r3.global-to-local, align 4
  %v1_100030ec = load i32, i32* @r31, align 4
  %v2_100030ec = add i32 %v1_100030ec, 8
  %v3_100030ec = inttoptr i32 %v2_100030ec to i32*
  store i32 %v0_100030e8, i32* %v3_100030ec, align 4
  %v0_100030f0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100030f0, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_100030f4:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8
  %v0_100030f4 = call i32 @function_10005d24()
  %v1_100030f4 = trunc i32 %v0_100030f4 to i16
  store i32 %v0_100030f4, i32* %r3.global-to-local, align 4
  %v3_100030f8 = load i32, i32* @r31, align 4
  %v4_100030f8 = add i32 %v3_100030f8, 18
  %v5_100030f8 = inttoptr i32 %v4_100030f8 to i16*
  store i16 %v1_100030f4, i16* %v5_100030f8, align 2
  br label %dec_label_pc_10002ff0

dec_label_pc_10003100:                            ; preds = %dec_label_pc_10002ddc
  %v0_10003100 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003100, i32* %r3.global-to-local, align 4
  store i32 268448008, i32* @lr, align 4
  %v0_10003104 = call i32 @function_10008884()
  store i32 %v0_10003104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10002bc4, %dec_label_pc_10003100
  store i32 %v0_10002bdc, i32* %r0.global-to-local, align 4
  %v1_1000311c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bcc)
  store i32 %v0_10002c1c, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c24, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r31.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003164

; uselistorder directives
  uselistorder i32 %v0_100030f4, { 1, 0 }
  uselistorder i32 %v0_100030c8, { 1, 0 }
  uselistorder i32 %v0_100030b8, { 1, 0 }
  uselistorder i32 %v0_100030a8, { 1, 0 }
  uselistorder i32 %v1_100030a0, { 1, 0 }
  uselistorder i1 %v1_10003060, { 1, 0 }
  uselistorder i1 %v0_10003060, { 1, 0 }
  uselistorder i32 %v1_10003050, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003018, { 1, 0 }
  uselistorder i32 %v1_10002f9c, { 1, 0 }
  uselistorder i32 %v1_10002e5c, { 1, 0 }
  uselistorder i32 %v1_10002e54, { 1, 0 }
  uselistorder i32 %v1_10002e3c, { 1, 0 }
  uselistorder i32 %v1_10002e38, { 1, 0 }
  uselistorder i32 %v1_10002e34, { 1, 0 }
  uselistorder i32 %v1_10002e30, { 1, 0 }
  uselistorder i32 %v1_10002e2c, { 1, 0 }
  uselistorder i32 %v1_10002e28, { 1, 0 }
  uselistorder i32 %v1_10002e18, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 10, 9, 11, 7, 12, 8, 13, 1, 2, 4, 3, 5, 6, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_100030f4, { 1, 0 }
  uselistorder label %dec_label_pc_10002ff0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002f88, { 1, 0 }
  uselistorder label %dec_label_pc_10002f84, { 1, 0 }
  uselistorder label %dec_label_pc_10002ea8, { 1, 0 }
}

define i32 @function_10003168(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003168:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10003170 = call i32 @__asm_mfcr()
  store i32 %v0_10003170, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100031a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448200, i32* @lr, align 4
  %v2_100031c4 = call i32 @function_10009930(i32 4, i32 4)
  store i32 %v2_100031c4, i32* %r27.global-to-local, align 4
  %v0_100031d0 = load i32, i32* @r30, align 4
  store i32 %v0_100031d0, i32* %r3.global-to-local, align 4
  store i32 268448216, i32* @lr, align 4
  %v2_100031d4 = call i32 @function_10009930(i32 %v0_100031d0, i32 4)
  %v0_100031dc = load i32, i32* @r28, align 4
  store i32 %v2_100031d4, i32* %r26.global-to-local, align 4
  %v0_100031ec = load i32, i32* @r29, align 4
  store i32 %v0_100031ec, i32* %r3.global-to-local, align 4
  store i32 268448244, i32* @lr, align 4
  %v4_100031f0 = inttoptr i32 %v0_100031dc to i32*
  %v5_100031f0 = call i32 @function_100006a8(i32 %v0_100031ec, i32* %v4_100031f0, i32 7, i32 65535)
  %v0_100031fc = load i32, i32* @r28, align 4
  %v1_10003204 = urem i32 %v5_100031f0, 65536
  store i32 %v1_10003204, i32* %r21.global-to-local, align 4
  %v0_10003208 = load i32, i32* @r29, align 4
  store i32 %v0_10003208, i32* %r3.global-to-local, align 4
  store i32 268448272, i32* @lr, align 4
  %v4_1000320c = inttoptr i32 %v0_100031fc to i32*
  %v5_1000320c = call i32 @function_100006a8(i32 %v0_10003208, i32* %v4_1000320c, i32 6, i32 65535)
  %v0_10003210 = load i32, i32* @r28, align 4
  %v1_10003214 = urem i32 %v5_1000320c, 65536
  store i32 %v1_10003214, i32* %r22.global-to-local, align 4
  %v0_10003220 = load i32, i32* @r29, align 4
  store i32 %v0_10003220, i32* %r3.global-to-local, align 4
  store i32 268448296, i32* @lr, align 4
  %v4_10003224 = inttoptr i32 %v0_10003210 to i32*
  %v5_10003224 = call i32 @function_100006a8(i32 %v0_10003220, i32* %v4_10003224, i32 0, i32 512)
  %v0_10003228 = load i32, i32* @r28, align 4
  %v1_1000322c = urem i32 %v5_10003224, 65536
  store i32 %v1_1000322c, i32* @r31, align 4
  %v0_10003234 = load i32, i32* @r29, align 4
  store i32 %v0_10003234, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003240.23 to i32), i32* @lr, align 4
  %v4_1000323c = inttoptr i32 %v0_10003228 to i32*
  %v5_1000323c = call i32 @function_100006a8(i32 %v0_10003234, i32* %v4_1000323c, i32 1, i32 1)
  store i32 %v5_1000323c, i32* %r3.global-to-local, align 4
  %v0_1000324c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000324c = icmp eq i32 %v0_1000324c, 65535
  %v1_10003254 = urem i32 %v5_1000323c, 256
  store i32 %v1_10003254, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_1000324c, label %dec_label_pc_10003450, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003168, %dec_label_pc_10003450
  %v0_10003268 = load i32, i32* @r30, align 4
  %v1_10003268 = icmp slt i32 %v0_10003268, 0
  %v3_10003268 = icmp eq i32 %v0_10003268, 0
  store i1 %v1_10003268, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003268, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10003268, 1
  br i1 %tmp38, label %dec_label_pc_10003328, label %dec_label_pc_10003270

dec_label_pc_10003270:                            ; preds = %dec_label_pc_10003268
  %v0_10003274 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003274, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10003280 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003280 = icmp eq i32 %v0_10003280, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100033d0 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10003280, label %dec_label_pc_100033a0, label %dec_label_pc_10003294

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003308
  %v0_100032a0 = phi i32 [ %v0_1000331c, %dec_label_pc_10003308 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100032a0 = add i32 %v0_100032a0, 1
  store i32 %v1_100032a0, i32* %r24.global-to-local, align 4
  store i32 268448424, i32* @lr, align 4
  %v2_100032a4 = call i32 @function_10009930(i32 65535, i32 1)
  %v0_100032a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100032a8 = trunc i32 %v0_100032a8 to i16
  %v2_100032a8 = load i32, i32* @r28, align 4
  %v3_100032a8 = add i32 %v2_100032a8, 2
  %v4_100032a8 = inttoptr i32 %v3_100032a8 to i16*
  store i16 %v1_100032a8, i16* %v4_100032a8, align 2
  %v1_100032ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100032ac = load i32, i32* %r27.global-to-local, align 4
  %v3_100032ac = add i32 %v2_100032ac, %v1_100032ac
  %v4_100032ac = inttoptr i32 %v3_100032ac to i32*
  store i32 %v2_100032a4, i32* %v4_100032ac, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448448, i32* @lr, align 4
  %v3_100032bc = call i32 @function_100095d4(i32 2, i32 2, i32 17)
  store i32 %v3_100032bc, i32* %r3.global-to-local, align 4
  %v3_100032c4 = icmp eq i32 %v3_100032bc, -1
  %v1_100032cc = load i32, i32* %r25.global-to-local, align 4
  %v2_100032cc = load i32, i32* %r26.global-to-local, align 4
  %v3_100032cc = add i32 %v2_100032cc, %v1_100032cc
  %v4_100032cc = inttoptr i32 %v3_100032cc to i32*
  store i32 %v3_100032bc, i32* %v4_100032cc, align 4
  br i1 %v3_100032c4, label %dec_label_pc_10003404, label %dec_label_pc_100032d4

dec_label_pc_100032d4:                            ; preds = %dec_label_pc_10003294
  %v0_100032d4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100032d4, i32* %stack_var_-72, align 4
  store i32 268448484, i32* @lr, align 4
  %v0_100032e0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100032e0 = call i32 @function_100093a0(i32 %v0_100032e0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100032e0, i32* %r3.global-to-local, align 4
  %v0_100032e4 = load i32, i32* @r28, align 4
  %v1_100032e4 = add i32 %v0_100032e4, 20
  %v2_100032e4 = inttoptr i32 %v1_100032e4 to i8*
  %v3_100032e4 = load i8, i8* %v2_100032e4, align 1
  %v2_100032e8 = icmp ugt i8 %v3_100032e4, 31
  br i1 %v2_100032e8, label %dec_label_pc_10003308, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032d4
  %v1_100032f0 = add i32 %v0_100032e4, 16
  %v2_100032f0 = inttoptr i32 %v1_100032f0 to i32*
  %v3_100032f0 = load i32, i32* %v2_100032f0, align 4
  store i32 %v3_100032f0, i32* %r29.global-to-local, align 4
  %v0_100032f4 = call i32 @function_10005d24()
  store i32 %v0_100032f4, i32* %r3.global-to-local, align 4
  %v0_100032f8 = load i32, i32* @r28, align 4
  %v1_100032f8 = add i32 %v0_100032f8, 20
  %v2_100032f8 = inttoptr i32 %v1_100032f8 to i8*
  %v3_100032f8 = load i8, i8* %v2_100032f8, align 1
  %tmp = urem i8 %v3_100032f8, 64
  %v2_100032fc = zext i8 %tmp to i32
  %v3_100032fc = lshr i32 %v0_100032f4, %v2_100032fc
  %v0_10003300 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003300 = add i32 %v3_100032fc, %v0_10003300
  store i32 %v2_10003300, i32* %r3.global-to-local, align 4
  %v2_10003304 = add i32 %v0_100032f8, 4
  %v3_10003304 = inttoptr i32 %v2_10003304 to i32*
  store i32 %v2_10003300, i32* %v3_10003304, align 4
  br label %dec_label_pc_10003308

dec_label_pc_10003308:                            ; preds = %dec_label_pc_100032d4, %dec_label_pc_100032f0
  %v0_10003308 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003308 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003308 = add i32 %v1_10003308, %v0_10003308
  %v3_10003308 = inttoptr i32 %v2_10003308 to i32*
  %v4_10003308 = load i32, i32* %v3_10003308, align 4
  store i32 %v4_10003308, i32* @r3, align 4
  %v1_10003314 = add i32 %v0_10003308, 4
  store i32 %v1_10003314, i32* %r25.global-to-local, align 4
  store i32 268448540, i32* @lr, align 4
  %v0_10003318 = call i32 @function_100093d4()
  store i32 %v0_10003318, i32* %r3.global-to-local, align 4
  %v0_1000331c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000331c = load i32, i32* @r30, align 4
  %v4_1000331c = icmp eq i32 %v0_1000331c, %v1_1000331c
  %v0_10003320 = load i32, i32* @r28, align 4
  %v1_10003320 = add i32 %v0_10003320, 24
  store i32 %v1_10003320, i32* @r28, align 4
  br i1 %v4_1000331c, label %dec_label_pc_10003328, label %dec_label_pc_10003294

dec_label_pc_10003328:                            ; preds = %dec_label_pc_10003308, %dec_label_pc_10003380, %dec_label_pc_10003268
  %v0_10003328 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003328 = icmp eq i32 %v0_10003328, 0
  store i1 %v3_10003328, i1* %cr3_eq.global-to-local, align 1
  %v0_1000332c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000332c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000332c.outer

dec_label_pc_1000332c.outer:                      ; preds = %dec_label_pc_10003360, %dec_label_pc_10003498, %dec_label_pc_10003328
  %v1_1000332c.ph39 = phi i1 [ %v1_1000332c.pre, %dec_label_pc_10003328 ], [ %v1_10003498, %dec_label_pc_10003498 ], [ %v1_10003360, %dec_label_pc_10003360 ]
  %v0_1000332c.ph40 = phi i1 [ %v0_1000332c.pre, %dec_label_pc_10003328 ], [ %v0_10003498, %dec_label_pc_10003498 ], [ %v0_10003360, %dec_label_pc_10003360 ]
  %v2_1000332c = or i1 %v1_1000332c.ph39, %v0_1000332c.ph40
  br label %dec_label_pc_1000332c

dec_label_pc_1000332c:                            ; preds = %dec_label_pc_1000332c.outer, %dec_label_pc_1000332c
  br i1 %v2_1000332c, label %dec_label_pc_1000332c, label %dec_label_pc_10003330

dec_label_pc_10003330:                            ; preds = %dec_label_pc_10003498, %dec_label_pc_10003360, %dec_label_pc_1000332c
  %v0_10003330 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003330, label %dec_label_pc_10003334, label %dec_label_pc_1000345c

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_1000333c:                            ; preds = %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge, %dec_label_pc_10003334
  %v0_10003340 = phi i32 [ %v0_10003358, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v0_10003350 = phi i32 [ %v0_1000333c.pre, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v1_1000333c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000333c = add i32 %v1_1000333c, %v0_10003350
  %v3_1000333c = inttoptr i32 %v2_1000333c to i32*
  %v4_1000333c = load i32, i32* %v3_1000333c, align 4
  store i32 %v4_1000333c, i32* %r3.global-to-local, align 4
  %v1_10003340 = add i32 %v0_10003340, 1
  store i32 %v1_10003340, i32* %r28.global-to-local, align 4
  %v1_10003344 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003344 = add i32 %v1_10003344, %v0_10003350
  %v3_10003344 = inttoptr i32 %v2_10003344 to i32*
  %v4_10003344 = load i32, i32* %v3_10003344, align 4
  %v0_10003348 = load i32, i32* @r31, align 4
  %v1_10003350 = add i32 %v0_10003350, 4
  store i32 %v1_10003350, i32* %r29.global-to-local, align 4
  store i32 268448600, i32* @lr, align 4
  %v4_10003354 = call i32 @function_10009520(i32 %v4_1000333c, i32 %v4_10003344, i32 %v0_10003348, i32 16384)
  store i32 %v4_10003354, i32* %r3.global-to-local, align 4
  %v0_10003358 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003358 = load i32, i32* @r30, align 4
  %v4_10003358 = icmp eq i32 %v0_10003358, %v1_10003358
  br i1 %v4_10003358, label %dec_label_pc_10003360, label %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge

dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge: ; preds = %dec_label_pc_1000333c
  %v0_1000333c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_10003360:                            ; preds = %dec_label_pc_1000333c
  %v0_10003360 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003360 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003360 = or i1 %v0_10003360, %v1_10003360
  br i1 %v2_10003360, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

dec_label_pc_10003380:                            ; preds = %dec_label_pc_100033e4, %dec_label_pc_10003400
  %v0_10003380 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003380 = add i32 %v1_10003380, %v0_10003380
  %v3_10003380 = inttoptr i32 %v2_10003380 to i32*
  %v4_10003380 = load i32, i32* %v3_10003380, align 4
  store i32 %v4_10003380, i32* @r3, align 4
  %v1_1000338c = add i32 %v0_10003380, 4
  store i32 %v1_1000338c, i32* %r25.global-to-local, align 4
  store i32 268448660, i32* @lr, align 4
  %v0_10003390 = call i32 @function_100093d4()
  store i32 %v0_10003390, i32* %r3.global-to-local, align 4
  %v0_10003394 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003394 = load i32, i32* @r30, align 4
  %v4_10003394 = icmp eq i32 %v0_10003394, %v1_10003394
  %v0_10003398 = load i32, i32* @r28, align 4
  %v1_10003398 = add i32 %v0_10003398, 24
  store i32 %v1_10003398, i32* @r28, align 4
  br i1 %v4_10003394, label %dec_label_pc_10003328, label %dec_label_pc_100033a0

dec_label_pc_100033a0:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003380
  %v0_100033ac = phi i32 [ %v0_10003394, %dec_label_pc_10003380 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100033ac = add i32 %v0_100033ac, 1
  store i32 %v1_100033ac, i32* %r24.global-to-local, align 4
  store i32 268448692, i32* @lr, align 4
  %v2_100033b0 = call i32 @function_10009930(i32 65535, i32 1)
  store i32 %v2_100033b0, i32* %r3.global-to-local, align 4
  %v1_100033b4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100033b4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100033b4 = add i32 %v2_100033b4, %v1_100033b4
  %v4_100033b4 = inttoptr i32 %v3_100033b4 to i32*
  store i32 %v2_100033b0, i32* %v4_100033b4, align 4
  %v0_100033b8 = call i32 @function_10005d24()
  %v1_100033b8 = trunc i32 %v0_100033b8 to i16
  %v3_100033bc = load i32, i32* @r28, align 4
  %v4_100033bc = add i32 %v3_100033bc, 2
  %v5_100033bc = inttoptr i32 %v4_100033bc to i16*
  store i16 %v1_100033b8, i16* %v5_100033bc, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448720, i32* @lr, align 4
  %v3_100033cc = call i32 @function_100095d4(i32 2, i32 2, i32 17)
  store i32 %v3_100033cc, i32* %r3.global-to-local, align 4
  %v3_100033d4 = icmp eq i32 %v3_100033cc, -1
  %v1_100033dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100033dc = load i32, i32* %r26.global-to-local, align 4
  %v3_100033dc = add i32 %v2_100033dc, %v1_100033dc
  %v4_100033dc = inttoptr i32 %v3_100033dc to i32*
  store i32 %v3_100033cc, i32* %v4_100033dc, align 4
  br i1 %v3_100033d4, label %dec_label_pc_10003404, label %dec_label_pc_100033e4

dec_label_pc_100033e4:                            ; preds = %dec_label_pc_100033a0
  %v0_100033e4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100033e4, i32* %stack_var_-72, align 4
  store i32 268448756, i32* @lr, align 4
  %v0_100033f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100033f0 = call i32 @function_100093a0(i32 %v0_100033f0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100033f0, i32* %r3.global-to-local, align 4
  %v0_100033f4 = load i32, i32* @r28, align 4
  %v1_100033f4 = add i32 %v0_100033f4, 20
  %v2_100033f4 = inttoptr i32 %v1_100033f4 to i8*
  %v3_100033f4 = load i8, i8* %v2_100033f4, align 1
  %v2_100033f8 = icmp ugt i8 %v3_100033f4, 31
  br i1 %v2_100033f8, label %dec_label_pc_10003380, label %dec_label_pc_10003400

dec_label_pc_10003400:                            ; preds = %dec_label_pc_100033e4
  %v1_10003368 = add i32 %v0_100033f4, 16
  %v2_10003368 = inttoptr i32 %v1_10003368 to i32*
  %v3_10003368 = load i32, i32* %v2_10003368, align 4
  store i32 %v3_10003368, i32* %r29.global-to-local, align 4
  %v0_1000336c = call i32 @function_10005d24()
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  %v0_10003370 = load i32, i32* @r28, align 4
  %v1_10003370 = add i32 %v0_10003370, 20
  %v2_10003370 = inttoptr i32 %v1_10003370 to i8*
  %v3_10003370 = load i8, i8* %v2_10003370, align 1
  %tmp43 = urem i8 %v3_10003370, 64
  %v2_10003374 = zext i8 %tmp43 to i32
  %v3_10003374 = lshr i32 %v0_1000336c, %v2_10003374
  %v0_10003378 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003378 = add i32 %v3_10003374, %v0_10003378
  store i32 %v2_10003378, i32* %r3.global-to-local, align 4
  %v2_1000337c = add i32 %v0_10003370, 4
  %v3_1000337c = inttoptr i32 %v2_1000337c to i32*
  store i32 %v2_10003378, i32* %v3_1000337c, align 4
  br label %dec_label_pc_10003380

dec_label_pc_10003404:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100033a0
  %v1_10003418 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003170)
  store i32 %v0_1000319c, i32* %r28.global-to-local, align 4
  store i32 %v0_100031a4, i32* %r29.global-to-local, align 4
  %v0_1000344c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000344c

dec_label_pc_10003450:                            ; preds = %dec_label_pc_10003168
  %v0_10003450 = call i32 @function_10005d24()
  store i32 %v0_10003450, i32* %r3.global-to-local, align 4
  %v1_10003454 = urem i32 %v0_10003450, 65536
  store i32 %v1_10003454, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10003268

dec_label_pc_1000345c:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003464:                            ; preds = %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge, %dec_label_pc_1000345c
  %v0_1000346c = phi i32 [ %v0_10003490, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v0_10003464 = phi i32 [ %v0_10003464.pre, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v1_10003464 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003464 = add i32 %v1_10003464, %v0_10003464
  %v3_10003464 = inttoptr i32 %v2_10003464 to i32*
  %v4_10003464 = load i32, i32* %v3_10003464, align 4
  store i32 %v4_10003464, i32* @r29, align 4
  %v0_10003468 = load i32, i32* @r31, align 4
  store i32 %v0_10003468, i32* @r4, align 4
  %v1_1000346c = add i32 %v0_1000346c, 1
  store i32 %v1_1000346c, i32* %r25.global-to-local, align 4
  store i32 %v4_10003464, i32* @r3, align 4
  %v0_10003474 = call i32 @function_10005ef8()
  store i32 %v0_10003474, i32* %r3.global-to-local, align 4
  %v0_10003478 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003478 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003478 = add i32 %v1_10003478, %v0_10003478
  %v3_10003478 = inttoptr i32 %v2_10003478 to i32*
  %v4_10003478 = load i32, i32* %v3_10003478, align 4
  store i32 %v4_10003478, i32* %r3.global-to-local, align 4
  %v0_1000347c = load i32, i32* @r29, align 4
  %v0_10003480 = load i32, i32* @r31, align 4
  %v1_10003488 = add i32 %v0_10003478, 4
  store i32 %v1_10003488, i32* %r28.global-to-local, align 4
  store i32 268448912, i32* @lr, align 4
  %v4_1000348c = call i32 @function_10009520(i32 %v4_10003478, i32 %v0_1000347c, i32 %v0_10003480, i32 16384)
  store i32 %v4_1000348c, i32* %r3.global-to-local, align 4
  %v0_10003490 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003490 = load i32, i32* @r30, align 4
  %v4_10003490 = icmp eq i32 %v0_10003490, %v1_10003490
  br i1 %v4_10003490, label %dec_label_pc_10003498, label %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge

dec_label_pc_10003464.dec_label_pc_10003464_crit_edge: ; preds = %dec_label_pc_10003464
  %v0_10003464.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003498:                            ; preds = %dec_label_pc_10003464
  %v0_10003498 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003498 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003498 = or i1 %v0_10003498, %v1_10003498
  br i1 %v2_10003498, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

; uselistorder directives
  uselistorder i1 %v1_10003498, { 1, 0 }
  uselistorder i1 %v0_10003498, { 1, 0 }
  uselistorder i32 %v0_10003490, { 1, 0 }
  uselistorder i32 %v0_10003478, { 1, 0 }
  uselistorder i32 %v0_10003380, { 1, 0 }
  uselistorder i1 %v1_10003360, { 1, 0 }
  uselistorder i1 %v0_10003360, { 1, 0 }
  uselistorder i32 %v0_10003358, { 1, 0 }
  uselistorder i32 %v0_10003350, { 2, 0, 1 }
  uselistorder i32 %v0_1000331c, { 1, 0 }
  uselistorder i32 %v0_10003308, { 1, 0 }
  uselistorder i32 %v2_100033d0, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 22, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_10003404, { 1, 0 }
  uselistorder label %dec_label_pc_100033a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003380, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003308, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_10003268, { 1, 0 }
}

define i32 @function_100034a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100034a0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100034a4 = load i32, i32* @lr, align 4
  store i32 %v0_100034a4, i32* %r0.global-to-local, align 4
  %v0_100034a8 = call i32 @__asm_mfcr()
  store i32 %v0_100034a8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_100034b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100034a8, i32* %r19.global-to-local, align 4
  %v0_100034ec = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100034f4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100034fc = load i32, i32* @r30, align 4
  %v0_10003500 = load i32, i32* @r31, align 4
  store i32 268449044, i32* @lr, align 4
  %v2_10003510 = call i32 @function_10009930(i32 4, i32 4)
  store i32 %v2_10003510, i32* %r20.global-to-local, align 4
  %v0_10003518 = load i32, i32* @r28, align 4
  %v0_10003524 = load i32, i32* @r29, align 4
  store i32 %v0_10003524, i32* %r3.global-to-local, align 4
  store i32 268449068, i32* @lr, align 4
  %v4_10003528 = inttoptr i32 %v0_10003518 to i32*
  %v5_10003528 = call i32 @function_100006a8(i32 %v0_10003524, i32* %v4_10003528, i32 2, i32 0)
  %v0_10003538 = load i32, i32* @r28, align 4
  %v1_1000353c = urem i32 %v5_10003528, 256
  store i32 %v1_1000353c, i32* %r15.global-to-local, align 4
  %v0_10003540 = load i32, i32* @r29, align 4
  store i32 %v0_10003540, i32* %r3.global-to-local, align 4
  store i32 268449096, i32* @lr, align 4
  %v4_10003544 = inttoptr i32 %v0_10003538 to i32*
  %v5_10003544 = call i32 @function_100006a8(i32 %v0_10003540, i32* %v4_10003544, i32 3, i32 65535)
  %v0_10003548 = load i32, i32* @r28, align 4
  store i32 %v5_10003544, i32* %r23.global-to-local, align 4
  %v0_10003558 = load i32, i32* @r29, align 4
  store i32 %v0_10003558, i32* %r3.global-to-local, align 4
  store i32 268449120, i32* @lr, align 4
  %v4_1000355c = inttoptr i32 %v0_10003548 to i32*
  %v5_1000355c = call i32 @function_100006a8(i32 %v0_10003558, i32* %v4_1000355c, i32 4, i32 64)
  %v0_10003560 = load i32, i32* @r28, align 4
  %v1_1000356c = urem i32 %v5_1000355c, 256
  store i32 %v1_1000356c, i32* %r16.global-to-local, align 4
  %v0_10003570 = load i32, i32* @r29, align 4
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  store i32 268449144, i32* @lr, align 4
  %v4_10003574 = inttoptr i32 %v0_10003560 to i32*
  %v5_10003574 = call i32 @function_100006a8(i32 %v0_10003570, i32* %v4_10003574, i32 5, i32 0)
  %v0_10003584 = load i32, i32* @r28, align 4
  %v1_10003588 = urem i32 %v5_10003574, 256
  store i32 %v1_10003588, i32* @r31, align 4
  %v0_1000358c = load i32, i32* @r29, align 4
  store i32 %v0_1000358c, i32* %r3.global-to-local, align 4
  store i32 268449172, i32* @lr, align 4
  %v4_10003590 = inttoptr i32 %v0_10003584 to i32*
  %v5_10003590 = call i32 @function_100006a8(i32 %v0_1000358c, i32* %v4_10003590, i32 6, i32 65535)
  %v0_10003598 = load i32, i32* @r28, align 4
  store i32 %v5_10003590, i32* %r24.global-to-local, align 4
  %v0_100035a8 = load i32, i32* @r29, align 4
  store i32 %v0_100035a8, i32* %r3.global-to-local, align 4
  store i32 268449200, i32* @lr, align 4
  %v4_100035ac = inttoptr i32 %v0_10003598 to i32*
  %v5_100035ac = call i32 @function_100006a8(i32 %v0_100035a8, i32* %v4_100035ac, i32 7, i32 65535)
  %v0_100035b0 = load i32, i32* @r28, align 4
  store i32 %v5_100035ac, i32* %r25.global-to-local, align 4
  %v0_100035c0 = load i32, i32* @r29, align 4
  store i32 %v0_100035c0, i32* %r3.global-to-local, align 4
  store i32 268449224, i32* @lr, align 4
  %v4_100035c4 = inttoptr i32 %v0_100035b0 to i32*
  %v5_100035c4 = call i32 @function_100006a8(i32 %v0_100035c0, i32* %v4_100035c4, i32 0, i32 512)
  %v0_100035c8 = load i32, i32* @r28, align 4
  store i32 %v5_100035c4, i32* %r26.global-to-local, align 4
  %v0_100035d8 = load i32, i32* @r29, align 4
  store i32 %v0_100035d8, i32* %r3.global-to-local, align 4
  store i32 268449248, i32* @lr, align 4
  %v4_100035dc = inttoptr i32 %v0_100035c8 to i32*
  %v5_100035dc = call i32 @function_100006a8(i32 %v0_100035d8, i32* %v4_100035dc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100035e4 = load i32, i32* @global_var_1001ba00.14, align 4
  %v0_100035e8 = load i32, i32* @r28, align 4
  %v1_100035f0 = urem i32 %v5_100035dc, 256
  store i32 %v1_100035f0, i32* %r17.global-to-local, align 4
  %v0_100035f4 = load i32, i32* @r29, align 4
  store i32 %v0_100035f4, i32* %r3.global-to-local, align 4
  store i32 268449276, i32* @lr, align 4
  %v4_100035f8 = inttoptr i32 %v0_100035e8 to i32*
  %v5_100035f8 = call i32 @function_100006a8(i32 %v0_100035f4, i32* %v4_100035f8, i32 25, i32 %v3_100035e4)
  store i32 %v5_100035f8, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449296, i32* @lr, align 4
  %v3_1000360c = call i32 @function_100095d4(i32 2, i32 3, i32 17)
  store i32 %v3_1000360c, i32* %r3.global-to-local, align 4
  %v3_10003610 = icmp eq i32 %v3_1000360c, -1
  store i32 %v3_1000360c, i32* %r21.global-to-local, align 4
  br i1 %v3_10003610, label %dec_label_pc_1000386c, label %dec_label_pc_1000361c

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_100034a0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003628 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268449336, i32* @lr, align 4
  %v4_10003634 = call i32 @function_10009598(i32 0, i32 3, i32 %v2_10003628, i32 4)
  store i32 %v4_10003634, i32* %r3.global-to-local, align 4
  %v3_10003638 = icmp eq i32 %v4_10003634, -1
  br i1 %v3_10003638, label %dec_label_pc_10003864, label %dec_label_pc_10003640

dec_label_pc_10003640:                            ; preds = %dec_label_pc_1000361c
  %v0_10003640 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003640 = urem i32 %v0_10003640, 65536
  store i32 %v1_10003640, i32* %r18.global-to-local, align 4
  %v0_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003644 = urem i32 %v0_10003644, 65536
  store i32 %v1_10003644, i32* %r22.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000364c = urem i32 %v0_1000364c, 65536
  store i32 %v1_1000364c, i32* %r23.global-to-local, align 4
  %v0_10003650 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003650 = urem i32 %v0_10003650, 65536
  store i32 %v1_10003650, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10003640, 1461
  br i1 %tmp30, label %dec_label_pc_1000365c, label %dec_label_pc_10003658

dec_label_pc_10003658:                            ; preds = %dec_label_pc_10003640
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000365c

dec_label_pc_1000365c:                            ; preds = %dec_label_pc_10003640, %dec_label_pc_10003658
  %v0_1000396c = phi i32 [ %v1_10003640, %dec_label_pc_10003640 ], [ 1460, %dec_label_pc_10003658 ]
  %v0_1000365c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000365c = icmp slt i32 %v0_1000365c, 0
  %v3_1000365c = icmp eq i32 %v0_1000365c, 0
  store i1 %v1_1000365c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000365c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_1000365c, 1
  br i1 %tmp31, label %dec_label_pc_10003964, label %dec_label_pc_1000366c

dec_label_pc_1000366c:                            ; preds = %dec_label_pc_1000365c
  %v0_1000366c = load i32, i32* @r31, align 4
  %v3_1000366c = icmp eq i32 %v0_1000366c, 0
  %v1_10003670 = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_10003670, i32* %r25.global-to-local, align 4
  %v1_10003674 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003674, i32* %r26.global-to-local, align 4
  %v1_10003678 = urem i32 %v1_10003670, 65536
  store i32 %v1_10003678, i32* @r28, align 4
  %v1_1000367c = urem i32 %v1_10003674, 65536
  store i32 %v1_1000367c, i32* @r29, align 4
  br i1 %v3_1000366c, label %dec_label_pc_10003684, label %dec_label_pc_100038cc

dec_label_pc_10003684:                            ; preds = %dec_label_pc_1000366c
  br label %dec_label_pc_10003688

dec_label_pc_10003688:                            ; preds = %dec_label_pc_10003688, %dec_label_pc_10003684
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268449428, i32* @lr, align 4
  %v2_10003690 = call i32 @function_10009930(i32 1510, i32 1)
  store i32 %v2_10003690, i32* %r3.global-to-local, align 4
  %v3_10003694 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003694, i32* %r9.global-to-local, align 4
  %v0_10003698 = load i32, i32* @r31, align 4
  %v1_10003698 = mul i32 %v0_10003698, 4
  store i32 %v1_10003698, i32* %r0.global-to-local, align 4
  %v1_1000369c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000369c = add i32 %v1_1000369c, %v1_10003698
  %v4_1000369c = inttoptr i32 %v3_1000369c to i32*
  store i32 %v2_10003690, i32* %v4_1000369c, align 4
  %v0_100036a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036a0 = mul i32 %v0_100036a0, 4
  store i32 %v1_100036a0, i32* %r9.global-to-local, align 4
  %v1_100036a4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100036a4 = add i32 %v1_100036a4, %v1_100036a0
  %v3_100036a4 = inttoptr i32 %v2_100036a4 to i32*
  %v4_100036a4 = load i32, i32* %v3_100036a4, align 4
  store i32 %v4_100036a4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100036ac = inttoptr i32 %v4_100036a4 to i32*
  %v2_100036ac = load i32, i32* %v1_100036ac, align 4
  store i32 %v2_100036ac, i32* %r0.global-to-local, align 4
  %v1_100036b0 = add i32 %v4_100036a4, 20
  store i32 %v1_100036b0, i32* %r10.global-to-local, align 4
  %v0_100036b4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100036b4 = trunc i32 %v0_100036b4 to i8
  %v3_100036b4 = add i32 %v4_100036a4, 8
  %v4_100036b4 = inttoptr i32 %v3_100036b4 to i8*
  store i8 %v1_100036b4, i8* %v4_100036b4, align 1
  %v1_100036b8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100036b8, i32* %r0.global-to-local, align 4
  %v0_100036bc = load i32, i32* @r30, align 4
  %v1_100036bc = load i32, i32* %r11.global-to-local, align 4
  %v2_100036bc = add i32 %v1_100036bc, 12
  %v3_100036bc = inttoptr i32 %v2_100036bc to i32*
  store i32 %v0_100036bc, i32* %v3_100036bc, align 4
  %v1_100036c0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100036c4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 4
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v1_100036c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  store i32 %v1_100036c0, i32* %v2_100036c8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100036d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d0 = add i32 %v2_100036d0, 9
  %v4_100036d0 = inttoptr i32 %v3_100036d0 to i8*
  store i8 17, i8* %v4_100036d0, align 1
  %v0_100036d4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100036d4 = trunc i32 %v0_100036d4 to i8
  %v2_100036d4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d4 = add i32 %v2_100036d4, 1
  %v4_100036d4 = inttoptr i32 %v3_100036d4 to i8*
  store i8 %v1_100036d4, i8* %v4_100036d4, align 1
  %v0_100036d8 = load i32, i32* @r28, align 4
  %v1_100036d8 = trunc i32 %v0_100036d8 to i16
  %v2_100036d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d8 = add i32 %v2_100036d8, 2
  %v4_100036d8 = inttoptr i32 %v3_100036d8 to i16*
  store i16 %v1_100036d8, i16* %v4_100036d8, align 2
  %v3_100036dc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100036dc, i32* %r9.global-to-local, align 4
  %v0_100036e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100036e0 = trunc i32 %v0_100036e0 to i16
  %v2_100036e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036e0 = add i32 %v2_100036e0, 20
  %v4_100036e0 = inttoptr i32 %v3_100036e0 to i16*
  store i16 %v1_100036e0, i16* %v4_100036e0, align 2
  %v0_100036e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036e4 = add i32 %v0_100036e4, 1
  store i32 %v1_100036e4, i32* %r31.global-to-local, align 4
  %v1_100036e8 = mul i32 %v0_100036e4, 24
  store i32 %v1_100036e8, i32* %r9.global-to-local, align 4
  %v1_100036ec = load i32, i32* %r19.global-to-local, align 4
  %v2_100036ec = icmp slt i32 %v1_100036e4, %v1_100036ec
  %v0_100036f0 = load i32, i32* @r29, align 4
  %v1_100036f0 = trunc i32 %v0_100036f0 to i16
  %v2_100036f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f0 = add i32 %v2_100036f0, 4
  %v4_100036f0 = inttoptr i32 %v3_100036f0 to i16*
  store i16 %v1_100036f0, i16* %v4_100036f0, align 2
  %v0_100036f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100036f4 = add i32 %v1_100036f4, %v0_100036f4
  store i32 %v2_100036f4, i32* %r9.global-to-local, align 4
  %v0_100036f8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100036f8 = trunc i32 %v0_100036f8 to i16
  %v2_100036f8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f8 = add i32 %v2_100036f8, 2
  %v4_100036f8 = inttoptr i32 %v3_100036f8 to i16*
  store i16 %v1_100036f8, i16* %v4_100036f8, align 2
  %v0_100036fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036fc = add i32 %v0_100036fc, 16
  %v2_100036fc = inttoptr i32 %v1_100036fc to i32*
  %v3_100036fc = load i32, i32* %v2_100036fc, align 4
  store i32 %v3_100036fc, i32* %r0.global-to-local, align 4
  %v1_10003700 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003700 = add i32 %v1_10003700, 16
  %v3_10003700 = inttoptr i32 %v2_10003700 to i32*
  store i32 %v3_100036fc, i32* %v3_10003700, align 4
  %v0_10003704 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003704, i32* %stack_var_-104, align 4
  br i1 %v2_100036ec, label %dec_label_pc_10003688, label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_10003688
  %v0_1000370c = load i32, i32* @r30, align 4
  %v3_1000370c = icmp eq i32 %v0_1000370c, -1
  store i1 %v3_1000370c, i1* %cr2_eq.global-to-local, align 1
  %v0_10003710 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003710 = icmp eq i32 %v0_10003710, 0
  store i1 %v3_10003710, i1* %cr3_eq.global-to-local, align 1
  %v0_10003714.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003714.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003714.preheader

dec_label_pc_10003714.preheader:                  ; preds = %dec_label_pc_100037e0, %dec_label_pc_10003964, %dec_label_pc_1000370c
  %v1_10003714 = phi i1 [ %v1_1000365c, %dec_label_pc_10003964 ], [ %v1_10003714.pre, %dec_label_pc_1000370c ], [ %v1_100037e0, %dec_label_pc_100037e0 ]
  %v0_10003714 = phi i1 [ %v3_1000365c, %dec_label_pc_10003964 ], [ %v0_10003714.pre, %dec_label_pc_1000370c ], [ %v0_100037e0, %dec_label_pc_100037e0 ]
  %v2_10003714 = or i1 %v1_10003714, %v0_10003714
  br label %dec_label_pc_10003714

dec_label_pc_10003714:                            ; preds = %dec_label_pc_10003714.preheader, %dec_label_pc_10003714
  br i1 %v2_10003714, label %dec_label_pc_10003714, label %dec_label_pc_10003718

dec_label_pc_10003718:                            ; preds = %dec_label_pc_10003714, %dec_label_pc_100037e0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10003728

dec_label_pc_10003728:                            ; preds = %dec_label_pc_10003770, %dec_label_pc_10003718
  %v0_10003728 = phi i32 [ %v1_100037d0, %dec_label_pc_10003770 ], [ 0, %dec_label_pc_10003718 ]
  %v1_10003728 = mul i32 %v0_10003728, 24
  store i32 %v1_10003728, i32* %r0.global-to-local, align 4
  %v1_1000372c = mul i32 %v0_10003728, 4
  store i32 %v1_1000372c, i32* %r11.global-to-local, align 4
  %v1_10003730 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003730 = add i32 %v1_10003730, %v1_1000372c
  %v3_10003730 = inttoptr i32 %v2_10003730 to i32*
  %v4_10003730 = load i32, i32* %v3_10003730, align 4
  store i32 %v4_10003730, i32* %r28.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003734 = add i32 %v1_10003734, %v1_10003728
  store i32 %v2_10003734, i32* %r10.global-to-local, align 4
  %v1_10003738 = add i32 %v2_10003734, 20
  %v2_10003738 = inttoptr i32 %v1_10003738 to i8*
  %v3_10003738 = load i8, i8* %v2_10003738, align 1
  %v4_10003738 = zext i8 %v3_10003738 to i32
  store i32 %v4_10003738, i32* %r9.global-to-local, align 4
  %v1_1000373c = add i32 %v4_10003730, 20
  store i32 %v1_1000373c, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_10003738, 32
  br i1 %tmp32, label %dec_label_pc_100037e8, label %dec_label_pc_10003748

dec_label_pc_10003748:                            ; preds = %dec_label_pc_10003728
  %v0_10003748 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003748, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 65535, i32* @r29, align 4
  %v0_10003754 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003754 = icmp eq i32 %v0_10003754, 65535
  br i1 %v4_10003754, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_1000375c:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v1_1000375c = phi i32 [ %v1_10003820, %dec_label_pc_10003810 ], [ 65535, %dec_label_pc_1000374c ]
  %v0_1000375c = load i32, i32* %r23.global-to-local, align 4
  %v4_1000375c = icmp eq i32 %v0_1000375c, %v1_1000375c
  br i1 %v4_1000375c, label %dec_label_pc_10003838, label %dec_label_pc_10003764

dec_label_pc_10003764:                            ; preds = %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge, %dec_label_pc_1000375c
  %v1_10003764 = phi i32 [ %v1_10003764.pre, %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge ], [ %v1_1000375c, %dec_label_pc_1000375c ]
  %v0_10003764 = load i32, i32* %r24.global-to-local, align 4
  %v4_10003764 = icmp eq i32 %v0_10003764, %v1_10003764
  br i1 %v4_10003764, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_1000376c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000376c, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848, %dec_label_pc_10003854
  %v0_10003770 = load i32, i32* @r30, align 4
  %v1_10003770 = trunc i32 %v0_10003770 to i16
  %v2_10003770 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003770 = add i32 %v2_10003770, 10
  %v4_10003770 = inttoptr i32 %v3_10003770 to i16*
  store i16 %v1_10003770, i16* %v4_10003770, align 2
  %v0_10003778 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003778, i32* @r3, align 4
  %v2_1000377c = call i32 @function_100043cc(i32 %v0_10003778, i32 20)
  %v3_1000377c = trunc i32 %v2_1000377c to i16
  %v0_10003780 = load i32, i32* @r31, align 4
  store i32 %v0_10003780, i32* @r4, align 4
  %v4_10003784 = add i32 %v0_10003778, 10
  %v5_10003784 = inttoptr i32 %v4_10003784 to i16*
  store i16 %v3_1000377c, i16* %v5_10003784, align 2
  %v0_10003788 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000378c = load i32, i32* @r30, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v2_1000378c = load i32, i32* @r31, align 4
  %v3_1000378c = add i32 %v2_1000378c, 6
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003790 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003790, i32* %r3.global-to-local, align 4
  %v0_10003794 = load i32, i32* @r31, align 4
  %v1_10003794 = add i32 %v0_10003794, 4
  %v2_10003794 = inttoptr i32 %v1_10003794 to i16*
  %v3_10003794 = load i16, i16* %v2_10003794, align 2
  %v4_10003794 = zext i16 %v3_10003794 to i32
  %v4_10003798 = call i32 @function_10004430(i32 %v0_10003790, i32 %v0_10003780, i32 %v4_10003794, i32 %v0_10003788)
  %v5_10003798 = trunc i32 %v4_10003798 to i16
  store i32 %v4_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000379c, i32* %r7.global-to-local, align 4
  %v0_100037a0 = load i32, i32* @r31, align 4
  %v1_100037a0 = add i32 %v0_100037a0, 2
  %v2_100037a0 = inttoptr i32 %v1_100037a0 to i16*
  %v3_100037a0 = load i16, i16* %v2_100037a0, align 2
  %v4_100037a0 = zext i16 %v3_100037a0 to i32
  store i32 %v4_100037a0, i32* %r0.global-to-local, align 4
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037a8 = mul i32 %v3_1000379c, 24
  store i32 %v1_100037a8, i32* %r7.global-to-local, align 4
  %v4_100037ac = add i32 %v0_100037a0, 6
  %v5_100037ac = inttoptr i32 %v4_100037ac to i16*
  store i16 %v5_10003798, i16* %v5_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r25.global-to-local, align 4
  %v0_100037b4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100037b4, i32* %r3.global-to-local, align 4
  %v0_100037b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037b8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037b8 = add i32 %v1_100037b8, %v0_100037b8
  store i32 %v2_100037b8, i32* %r7.global-to-local, align 4
  %v0_100037c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100037c0 = trunc i32 %v0_100037c0 to i16
  %v3_100037c0 = add i32 %v2_100037b8, 2
  %v4_100037c0 = inttoptr i32 %v3_100037c0 to i16*
  store i16 %v1_100037c0, i16* %v4_100037c0, align 2
  store i32 268449740, i32* @lr, align 4
  %v6_100037c8 = call i32 @function_10009558(i32 %v0_100037b4, i32 %v0_100037a4, i32 %v0_100037b0, i32 16384, i32 %v2_100037b8, i32 16)
  store i32 %v6_100037c8, i32* %r3.global-to-local, align 4
  %v3_100037cc = load i32, i32* %stack_var_-104, align 4
  %v1_100037d0 = add i32 %v3_100037cc, 1
  store i32 %v1_100037d0, i32* %r9.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100037d4 = icmp slt i32 %v1_100037d0, %v1_100037d4
  store i32 %v1_100037d0, i32* %stack_var_-104, align 4
  br i1 %v2_100037d4, label %dec_label_pc_10003728, label %dec_label_pc_100037e0

dec_label_pc_100037e0:                            ; preds = %dec_label_pc_10003770
  %v0_100037e0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100037e0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100037e0 = or i1 %v0_100037e0, %v1_100037e0
  br i1 %v2_100037e0, label %dec_label_pc_10003714.preheader, label %dec_label_pc_10003718

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_10003728
  %v1_100037e8 = add i32 %v2_10003734, 16
  %v2_100037e8 = inttoptr i32 %v1_100037e8 to i32*
  %v3_100037e8 = load i32, i32* %v2_100037e8, align 4
  store i32 %v3_100037e8, i32* %r29.global-to-local, align 4
  %v0_100037ec = call i32 @function_10005d24()
  store i32 %v0_100037ec, i32* %r3.global-to-local, align 4
  %v3_100037f0 = load i32, i32* %stack_var_-104, align 4
  %v1_100037f4 = mul i32 %v3_100037f0, 24
  %v1_100037f8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v1_100037f4
  store i32 %v2_100037f8, i32* %r9.global-to-local, align 4
  %v1_100037fc = add i32 %v2_100037f8, 20
  %v2_100037fc = inttoptr i32 %v1_100037fc to i8*
  %v3_100037fc = load i8, i8* %v2_100037fc, align 1
  %v4_100037fc = zext i8 %v3_100037fc to i32
  store i32 %v4_100037fc, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100037fc, 64
  %v2_10003800 = zext i8 %tmp to i32
  %v3_10003800 = lshr i32 %v0_100037ec, %v2_10003800
  store i32 %v3_10003800, i32* %r3.global-to-local, align 4
  %v0_10003804 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003804 = add i32 %v3_10003800, %v0_10003804
  store i32 %v2_10003804, i32* %r29.global-to-local, align 4
  %v1_10003808 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003808 = add i32 %v1_10003808, 16
  %v3_10003808 = inttoptr i32 %v2_10003808 to i32*
  store i32 %v2_10003804, i32* %v3_10003808, align 4
  %v0_1000380c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000380c, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_10003810:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003814 = call i32 @function_10005d24()
  store i32 %v0_10003814, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_1000381c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000381c = add i32 %v1_1000381c, 12
  %v3_1000381c = inttoptr i32 %v2_1000381c to i32*
  store i32 %v0_10003814, i32* %v3_1000381c, align 4
  %v0_10003820 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003820 = load i32, i32* @r29, align 4
  %v4_10003820 = icmp eq i32 %v0_10003820, %v1_10003820
  br i1 %v4_10003820, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v0_10003828 = call i32 @function_10005d24()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  store i32 %v0_10003828, i32* %r3.global-to-local, align 4
  %v0_1000382c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000382c = load i32, i32* @r29, align 4
  %v4_1000382c = icmp eq i32 %v0_1000382c, %v1_1000382c
  %v3_10003830 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  br i1 %v4_1000382c, label %dec_label_pc_10003838, label %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge

dec_label_pc_10003828.dec_label_pc_10003764_crit_edge: ; preds = %dec_label_pc_10003828
  %v1_10003764.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003764

dec_label_pc_10003838:                            ; preds = %dec_label_pc_10003828, %dec_label_pc_1000375c
  %v0_10003838 = call i32 @function_10005d24()
  %v1_10003838 = trunc i32 %v0_10003838 to i16
  store i32 %v0_10003838, i32* %r3.global-to-local, align 4
  %v0_1000383c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000383c = load i32, i32* @r29, align 4
  %v4_1000383c = icmp eq i32 %v0_1000383c, %v1_1000383c
  %v3_10003840 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003840 = add i32 %v3_10003840, 20
  %v5_10003840 = inttoptr i32 %v4_10003840 to i16*
  store i16 %v1_10003838, i16* %v5_10003840, align 2
  br i1 %v4_1000383c, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_10003848:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_10003848 = call i32 @function_10005d24()
  %v1_10003848 = trunc i32 %v0_10003848 to i16
  store i32 %v0_10003848, i32* %r3.global-to-local, align 4
  %v3_1000384c = load i32, i32* @r31, align 4
  %v4_1000384c = add i32 %v3_1000384c, 2
  %v5_1000384c = inttoptr i32 %v4_1000384c to i16*
  store i16 %v1_10003848, i16* %v5_1000384c, align 2
  %v0_10003850 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003850, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848
  %v0_10003854 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003854 = add i32 %v0_10003854, 28
  store i32 %v1_10003854, i32* @r3, align 4
  %v0_10003858 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10003858, i32* @r4, align 4
  %v0_1000385c = call i32 @function_10005ef8()
  store i32 %v0_1000385c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003864:                            ; preds = %dec_label_pc_1000361c
  %v0_10003864 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003864, i32* %r3.global-to-local, align 4
  store i32 268449900, i32* @lr, align 4
  %v0_10003868 = call i32 @function_10008884()
  store i32 %v0_10003868, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000386c

dec_label_pc_1000386c:                            ; preds = %dec_label_pc_100034a0, %dec_label_pc_10003864
  store i32 %v0_100034b8, i32* %r0.global-to-local, align 4
  %v1_10003880 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100034a8)
  store i32 %v0_100034ec, i32* %r28.global-to-local, align 4
  store i32 %v0_100034f4, i32* %r29.global-to-local, align 4
  store i32 %v0_100034fc, i32* %r30.global-to-local, align 4
  store i32 %v0_10003500, i32* %r31.global-to-local, align 4
  %v0_100038c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100038c8

dec_label_pc_100038cc:                            ; preds = %dec_label_pc_1000366c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_100038cc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450016, i32* @lr, align 4
  %v2_100038dc = call i32 @function_10009930(i32 1510, i32 1)
  store i32 %v2_100038dc, i32* %r3.global-to-local, align 4
  %v3_100038e0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100038e0, i32* %r9.global-to-local, align 4
  %v0_100038e4 = load i32, i32* @r31, align 4
  %v1_100038e4 = mul i32 %v0_100038e4, 4
  store i32 %v1_100038e4, i32* %r0.global-to-local, align 4
  %v1_100038e8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100038e8 = add i32 %v1_100038e8, %v1_100038e4
  %v4_100038e8 = inttoptr i32 %v3_100038e8 to i32*
  store i32 %v2_100038dc, i32* %v4_100038e8, align 4
  %v0_100038ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100038ec = mul i32 %v0_100038ec, 4
  store i32 %v1_100038ec, i32* %r9.global-to-local, align 4
  %v1_100038f0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100038f0 = add i32 %v1_100038f0, %v1_100038ec
  %v3_100038f0 = inttoptr i32 %v2_100038f0 to i32*
  %v4_100038f0 = load i32, i32* %v3_100038f0, align 4
  store i32 %v4_100038f0, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100038f8 = inttoptr i32 %v4_100038f0 to i32*
  %v2_100038f8 = load i32, i32* %v1_100038f8, align 4
  store i32 %v2_100038f8, i32* %r0.global-to-local, align 4
  %v1_100038fc = add i32 %v4_100038f0, 20
  store i32 %v1_100038fc, i32* %r10.global-to-local, align 4
  %v0_10003900 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003900 = trunc i32 %v0_10003900 to i8
  %v3_10003900 = add i32 %v4_100038f0, 8
  %v4_10003900 = inttoptr i32 %v3_10003900 to i8*
  store i8 %v1_10003900, i8* %v4_10003900, align 1
  %v1_10003904 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003904, i32* %r0.global-to-local, align 4
  %v0_10003908 = load i32, i32* @r30, align 4
  %v1_10003908 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003908 = add i32 %v1_10003908, 12
  %v3_10003908 = inttoptr i32 %v2_10003908 to i32*
  store i32 %v0_10003908, i32* %v3_10003908, align 4
  %v1_1000390c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003910 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003910 = trunc i32 %v0_10003910 to i16
  %v2_10003910 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003910 = add i32 %v2_10003910, 4
  %v4_10003910 = inttoptr i32 %v3_10003910 to i16*
  store i16 %v1_10003910, i16* %v4_10003910, align 2
  %v1_10003914 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003914 = inttoptr i32 %v1_10003914 to i32*
  store i32 %v1_1000390c, i32* %v2_10003914, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1000391c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000391c = add i32 %v2_1000391c, 9
  %v4_1000391c = inttoptr i32 %v3_1000391c to i8*
  store i8 17, i8* %v4_1000391c, align 1
  %v0_10003920 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003920 = trunc i32 %v0_10003920 to i8
  %v2_10003920 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003920 = add i32 %v2_10003920, 1
  %v4_10003920 = inttoptr i32 %v3_10003920 to i8*
  store i8 %v1_10003920, i8* %v4_10003920, align 1
  %v0_10003924 = load i32, i32* @r28, align 4
  %v1_10003924 = trunc i32 %v0_10003924 to i16
  %v2_10003924 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003924 = add i32 %v2_10003924, 2
  %v4_10003924 = inttoptr i32 %v3_10003924 to i16*
  store i16 %v1_10003924, i16* %v4_10003924, align 2
  %v3_10003928 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003928, i32* %r9.global-to-local, align 4
  %v0_1000392c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000392c = trunc i32 %v0_1000392c to i16
  %v2_1000392c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000392c = add i32 %v2_1000392c, 20
  %v4_1000392c = inttoptr i32 %v3_1000392c to i16*
  store i16 %v1_1000392c, i16* %v4_1000392c, align 2
  %v0_10003930 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003930 = add i32 %v0_10003930, 1
  store i32 %v1_10003930, i32* %r31.global-to-local, align 4
  %v1_10003934 = mul i32 %v0_10003930, 24
  %v1_10003938 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003938 = icmp slt i32 %v1_10003930, %v1_10003938
  %v1_1000393c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000393c = add i32 %v1_1000393c, %v1_10003934
  store i32 %v2_1000393c, i32* %r9.global-to-local, align 4
  %v1_10003940 = add i32 %v2_1000393c, 16
  %v2_10003940 = inttoptr i32 %v1_10003940 to i32*
  %v3_10003940 = load i32, i32* %v2_10003940, align 4
  store i32 %v3_10003940, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_10003948 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003948 = add i32 %v2_10003948, 6
  %v4_10003948 = inttoptr i32 %v3_10003948 to i16*
  store i16 16384, i16* %v4_10003948, align 2
  %v0_1000394c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000394c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000394c = add i32 %v1_1000394c, 16
  %v3_1000394c = inttoptr i32 %v2_1000394c to i32*
  store i32 %v0_1000394c, i32* %v3_1000394c, align 4
  %v0_10003950 = load i32, i32* @r29, align 4
  %v1_10003950 = trunc i32 %v0_10003950 to i16
  %v2_10003950 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003950 = add i32 %v2_10003950, 4
  %v4_10003950 = inttoptr i32 %v3_10003950 to i16*
  store i16 %v1_10003950, i16* %v4_10003950, align 2
  %v0_10003954 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003954 = trunc i32 %v0_10003954 to i16
  %v2_10003954 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003954 = add i32 %v2_10003954, 2
  %v4_10003954 = inttoptr i32 %v3_10003954 to i16*
  store i16 %v1_10003954, i16* %v4_10003954, align 2
  %v0_10003958 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003958, i32* %stack_var_-104, align 4
  br i1 %v2_10003938, label %dec_label_pc_100038d4, label %dec_label_pc_1000370c

dec_label_pc_10003964:                            ; preds = %dec_label_pc_1000365c
  %v0_10003964 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003964 = icmp eq i32 %v0_10003964, -1
  store i1 %v3_10003964, i1* %cr2_eq.global-to-local, align 1
  %v0_10003968 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003968 = icmp eq i32 %v0_10003968, 0
  store i1 %v3_10003968, i1* %cr3_eq.global-to-local, align 1
  %v1_1000396c = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_1000396c, i32* %r25.global-to-local, align 4
  %v1_10003970 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003970, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003714.preheader

; uselistorder directives
  uselistorder i32 %v1_100038ec, { 1, 0 }
  uselistorder i32 %v1_100038e4, { 1, 0 }
  uselistorder i32 %v0_10003848, { 1, 0 }
  uselistorder i32 %v0_10003838, { 1, 0 }
  uselistorder i32 %v0_10003828, { 1, 0 }
  uselistorder i32 %v1_10003820, { 1, 0 }
  uselistorder i1 %v1_100037e0, { 1, 0 }
  uselistorder i1 %v0_100037e0, { 1, 0 }
  uselistorder i32 %v1_100037d0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003798, { 1, 0 }
  uselistorder i32 %v1_1000372c, { 1, 0 }
  uselistorder i32 %v1_100036a0, { 1, 0 }
  uselistorder i32 %v1_10003698, { 1, 0 }
  uselistorder i32 %v0_1000396c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10003640, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10005ef8, { 10, 9, 8, 7, 6, 5, 4, 3, 0, 1, 2 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_1000386c, { 1, 0 }
  uselistorder label %dec_label_pc_10003854, { 1, 0 }
  uselistorder label %dec_label_pc_10003770, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003718, { 1, 0 }
  uselistorder label %dec_label_pc_10003714, { 1, 0 }
  uselistorder label %dec_label_pc_10003714.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000365c, { 1, 0 }
}

define i32 @function_1000397c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000397c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10003980 = load i32, i32* @lr, align 4
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v0_10003984 = call i32 @__asm_mfcr()
  store i32 %v0_10003984, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_10003984, i32* %r23.global-to-local, align 4
  %v0_100039bc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100039c4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100039cc = load i32, i32* @r30, align 4
  store i32 268450284, i32* @lr, align 4
  %v2_100039e8 = call i32 @function_10009930(i32 4, i32 4)
  store i32 %v2_100039e8, i32* %r24.global-to-local, align 4
  %v0_100039f0 = load i32, i32* @r28, align 4
  %v0_100039f4 = load i32, i32* @r29, align 4
  store i32 %v0_100039f4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268450308, i32* @lr, align 4
  %v4_10003a00 = inttoptr i32 %v0_100039f0 to i32*
  %v5_10003a00 = call i32 @function_100006a8(i32 %v0_100039f4, i32* %v4_10003a00, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10003a10 = load i32, i32* @r28, align 4
  %v1_10003a14 = urem i32 %v5_10003a00, 256
  store i32 %v1_10003a14, i32* %r19.global-to-local, align 4
  %v0_10003a18 = load i32, i32* @r29, align 4
  store i32 %v0_10003a18, i32* %r3.global-to-local, align 4
  store i32 268450336, i32* @lr, align 4
  %v4_10003a1c = inttoptr i32 %v0_10003a10 to i32*
  %v5_10003a1c = call i32 @function_100006a8(i32 %v0_10003a18, i32* %v4_10003a1c, i32 3, i32 65535)
  %v0_10003a20 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10003a1c, i32* %r21.global-to-local, align 4
  %v0_10003a30 = load i32, i32* @r29, align 4
  store i32 %v0_10003a30, i32* %r3.global-to-local, align 4
  store i32 268450360, i32* @lr, align 4
  %v4_10003a34 = inttoptr i32 %v0_10003a20 to i32*
  %v5_10003a34 = call i32 @function_100006a8(i32 %v0_10003a30, i32* %v4_10003a34, i32 4, i32 64)
  %v0_10003a38 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10003a44 = urem i32 %v5_10003a34, 256
  store i32 %v1_10003a44, i32* %r26.global-to-local, align 4
  %v0_10003a48 = load i32, i32* @r29, align 4
  store i32 %v0_10003a48, i32* %r3.global-to-local, align 4
  store i32 268450384, i32* @lr, align 4
  %v4_10003a4c = inttoptr i32 %v0_10003a38 to i32*
  %v5_10003a4c = call i32 @function_100006a8(i32 %v0_10003a48, i32* %v4_10003a4c, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10003a5c = load i32, i32* @r28, align 4
  %v1_10003a60 = urem i32 %v5_10003a4c, 256
  store i32 %v1_10003a60, i32* @r31, align 4
  %v0_10003a64 = load i32, i32* @r29, align 4
  store i32 %v0_10003a64, i32* %r3.global-to-local, align 4
  store i32 268450412, i32* @lr, align 4
  %v4_10003a68 = inttoptr i32 %v0_10003a5c to i32*
  %v5_10003a68 = call i32 @function_100006a8(i32 %v0_10003a64, i32* %v4_10003a68, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10003a74 = load i32, i32* @r28, align 4
  store i32 %v5_10003a68, i32* %r22.global-to-local, align 4
  %v0_10003a7c = load i32, i32* @r29, align 4
  store i32 %v0_10003a7c, i32* %r3.global-to-local, align 4
  store i32 268450436, i32* @lr, align 4
  %v4_10003a80 = inttoptr i32 %v0_10003a74 to i32*
  %v5_10003a80 = call i32 @function_100006a8(i32 %v0_10003a7c, i32* %v4_10003a80, i32 7, i32 27015)
  store i32 %v5_10003a80, i32* %r29.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  store i32 268450448, i32* @lr, align 4
  %v1_10003a8c = call i32 @function_10007adc(i32 23)
  store i32 23, i32* %r3.global-to-local, align 4
  %v3_10003a98 = call i32 @function_10007a28(i32 23, i32* nonnull %stack_var_-84)
  store i32 %v3_10003a98, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450480, i32* @lr, align 4
  %v3_10003aac = call i32 @function_100095d4(i32 2, i32 3, i32 17)
  store i32 %v3_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v3_10003aac, -1
  store i32 %v3_10003aac, i32* %r25.global-to-local, align 4
  br i1 %v3_10003ab0, label %dec_label_pc_10003d00, label %dec_label_pc_10003abc

dec_label_pc_10003abc:                            ; preds = %dec_label_pc_1000397c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10003ac8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10003ac8, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268450520, i32* @lr, align 4
  %v4_10003ad4 = call i32 @function_10009598(i32 0, i32 3, i32 %v2_10003ac8, i32 4)
  store i32 %v4_10003ad4, i32* %r3.global-to-local, align 4
  %v3_10003ad8 = icmp eq i32 %v4_10003ad4, -1
  br i1 %v3_10003ad8, label %dec_label_pc_10003cf8, label %dec_label_pc_10003ae0

dec_label_pc_10003ae0:                            ; preds = %dec_label_pc_10003abc
  %v0_10003ae0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003ae0 = icmp slt i32 %v0_10003ae0, 0
  %v3_10003ae0 = icmp eq i32 %v0_10003ae0, 0
  store i1 %v1_10003ae0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ae0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 65536
  store i32 %v1_10003ae8, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10003af0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003af0 = urem i32 %v0_10003af0, 65536
  store i32 %v1_10003af0, i32* %r21.global-to-local, align 4
  %v0_10003af4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003af4 = urem i32 %v0_10003af4, 65536
  store i32 %v1_10003af4, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_10003ae0, 1
  br i1 %tmp32, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003afc

dec_label_pc_10003afc:                            ; preds = %dec_label_pc_10003ae0
  %v0_10003afc = load i32, i32* @r31, align 4
  %v3_10003afc = icmp eq i32 %v0_10003afc, 0
  store i1 %v3_10003afc, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10003b1c

dec_label_pc_10003b1c:                            ; preds = %dec_label_pc_10003b78, %dec_label_pc_10003afc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268450600, i32* @lr, align 4
  %v2_10003b24 = call i32 @function_10009930(i32 128, i32 1)
  store i32 %v2_10003b24, i32* %r3.global-to-local, align 4
  %v3_10003b28 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003b28, i32* %r0.global-to-local, align 4
  %v0_10003b2c = load i32, i32* @r31, align 4
  %v1_10003b2c = mul i32 %v0_10003b2c, 4
  store i32 %v1_10003b2c, i32* %r9.global-to-local, align 4
  %v0_10003b30 = load i32, i32* @r30, align 4
  %v2_10003b34 = load i32, i32* %r24.global-to-local, align 4
  %v3_10003b34 = add i32 %v2_10003b34, %v1_10003b2c
  %v4_10003b34 = inttoptr i32 %v3_10003b34 to i32*
  store i32 %v2_10003b24, i32* %v4_10003b34, align 4
  %v0_10003b38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b38 = mul i32 %v0_10003b38, 4
  store i32 %v1_10003b38, i32* %r0.global-to-local, align 4
  %v0_10003b3c = load i32, i32* %r24.global-to-local, align 4
  %v2_10003b3c = add i32 %v0_10003b3c, %v1_10003b38
  %v3_10003b3c = inttoptr i32 %v2_10003b3c to i32*
  %v4_10003b3c = load i32, i32* %v3_10003b3c, align 4
  store i32 %v4_10003b3c, i32* %r10.global-to-local, align 4
  %v1_10003b40 = inttoptr i32 %v4_10003b3c to i32*
  %v2_10003b40 = load i32, i32* %v1_10003b40, align 4
  store i32 %v2_10003b40, i32* %r0.global-to-local, align 4
  %v1_10003b44 = add i32 %v4_10003b3c, 32
  store i32 %v1_10003b44, i32* %r3.global-to-local, align 4
  %v0_10003b48 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b48 = trunc i32 %v0_10003b48 to i16
  %v3_10003b48 = add i32 %v4_10003b3c, 4
  %v4_10003b48 = inttoptr i32 %v3_10003b48 to i16*
  store i16 %v1_10003b48, i16* %v4_10003b48, align 2
  %v0_10003b4c = load i32, i32* %r10.global-to-local, align 4
  %v1_10003b4c = add i32 %v0_10003b4c, 20
  store i32 %v1_10003b4c, i32* %r8.global-to-local, align 4
  %v1_10003b50 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b50, i32* %r0.global-to-local, align 4
  %v1_10003b54 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003b54, i32* %r0.global-to-local, align 4
  %v1_10003b58 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b58 = inttoptr i32 %v1_10003b58 to i32*
  store i32 %v1_10003b54, i32* %v2_10003b58, align 4
  %v0_10003b5c = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b5c = trunc i32 %v0_10003b5c to i8
  %v2_10003b5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v1_10003b5c, i8* %v4_10003b5c, align 1
  %v3_10003b60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b60, i32* %r9.global-to-local, align 4
  %v0_10003b64 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003b64 = trunc i32 %v0_10003b64 to i8
  %v2_10003b64 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 8
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i8*
  store i8 %v1_10003b64, i8* %v4_10003b64, align 1
  %v0_10003b68 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b68 = add i32 %v0_10003b68, 32
  store i32 %v1_10003b68, i32* %r9.global-to-local, align 4
  %v1_10003b6c = trunc i32 %v1_10003b68 to i16
  %v2_10003b6c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b6c = add i32 %v2_10003b6c, 2
  %v4_10003b6c = inttoptr i32 %v3_10003b6c to i16*
  store i16 %v1_10003b6c, i16* %v4_10003b6c, align 2
  %v0_10003b70 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003b70, label %dec_label_pc_10003b78, label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b1c
  %v0_10003b74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b74 = trunc i32 %v0_10003b74 to i16
  %v2_10003b74 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b74 = add i32 %v2_10003b74, 6
  %v4_10003b74 = inttoptr i32 %v3_10003b74 to i16*
  store i16 %v1_10003b74, i16* %v4_10003b74, align 2
  br label %dec_label_pc_10003b78

dec_label_pc_10003b78:                            ; preds = %dec_label_pc_10003b1c, %dec_label_pc_10003b74
  %v0_10003b78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i8
  %v2_10003b78 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 9
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i8*
  store i8 %v1_10003b78, i8* %v4_10003b78, align 1
  %v0_10003b7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i16
  %v2_10003b7c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 20
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i16*
  store i16 %v1_10003b7c, i16* %v4_10003b7c, align 2
  %v3_10003b80 = load i32, i32* %stack_var_-88, align 4
  %v3_10003b84 = load i32, i32* @global_var_1001ba00.14, align 4
  store i32 %v3_10003b84, i32* %r0.global-to-local, align 4
  %v1_10003b88 = mul i32 %v3_10003b80, 24
  store i32 %v1_10003b88, i32* %r9.global-to-local, align 4
  %v0_10003b8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003b8c = trunc i32 %v0_10003b8c to i16
  %v2_10003b8c = load i32, i32* %r8.global-to-local, align 4
  %v3_10003b8c = add i32 %v2_10003b8c, 2
  %v4_10003b8c = inttoptr i32 %v3_10003b8c to i16*
  store i16 %v1_10003b8c, i16* %v4_10003b8c, align 2
  %v0_10003b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b90 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b90 = add i32 %v1_10003b90, 12
  %v3_10003b90 = inttoptr i32 %v2_10003b90 to i32*
  store i32 %v0_10003b90, i32* %v3_10003b90, align 4
  %v0_10003b94 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b94 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v0_10003b94
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  %v3_10003b9c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b9c, i32* %r11.global-to-local, align 4
  %v0_10003ba0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 28
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v0_10003ba0, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 16
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  store i32 %v1_10003ba8, i32* %r11.global-to-local, align 4
  %v1_10003bac = trunc i32 %v1_10003ba8 to i16
  %v2_10003bac = load i32, i32* %r8.global-to-local, align 4
  %v3_10003bac = add i32 %v2_10003bac, 4
  %v4_10003bac = inttoptr i32 %v3_10003bac to i16*
  store i16 %v1_10003bac, i16* %v4_10003bac, align 2
  %v3_10003bb0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003bb0, i32* %r5.global-to-local, align 4
  store i32 268450744, i32* @lr, align 4
  %v3_10003bb4 = call i32 @function_10008148(i32 %v3_10003bb0, i32 %v0_10003b30, i32 %v3_10003bb0)
  store i32 %v3_10003bb4, i32* %r3.global-to-local, align 4
  %v3_10003bb8 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003bbc = add i32 %v3_10003bb8, 1
  %v1_10003bc0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003bc0 = icmp slt i32 %v1_10003bbc, %v1_10003bc0
  store i32 %v1_10003bbc, i32* %stack_var_-88, align 4
  br i1 %v2_10003bc0, label %dec_label_pc_10003b1c, label %dec_label_pc_10003bcc.preheader.loopexit

dec_label_pc_10003bcc.preheader.loopexit:         ; preds = %dec_label_pc_10003b78
  %v0_10003bcc.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003bcc.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003bcc.outer

dec_label_pc_10003bcc.outer:                      ; preds = %dec_label_pc_10003c98, %dec_label_pc_10003ae0, %dec_label_pc_10003bcc.preheader.loopexit
  %v1_10003bcc.ph34 = phi i1 [ %v1_10003ae0, %dec_label_pc_10003ae0 ], [ %v1_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v1_10003c98, %dec_label_pc_10003c98 ]
  %v0_10003bcc.ph35 = phi i1 [ %v3_10003ae0, %dec_label_pc_10003ae0 ], [ %v0_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v0_10003c98, %dec_label_pc_10003c98 ]
  %v2_10003bcc = or i1 %v1_10003bcc.ph34, %v0_10003bcc.ph35
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003bcc.outer, %dec_label_pc_10003bcc
  br i1 %v2_10003bcc, label %dec_label_pc_10003bcc, label %dec_label_pc_10003bd0

dec_label_pc_10003bd0:                            ; preds = %dec_label_pc_10003bcc, %dec_label_pc_10003c98
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003be0

dec_label_pc_10003be0:                            ; preds = %dec_label_pc_10003c20, %dec_label_pc_10003bd0
  %v0_10003bf0 = phi i32 [ %v1_10003c88, %dec_label_pc_10003c20 ], [ 0, %dec_label_pc_10003bd0 ]
  %v1_10003be0 = mul i32 %v0_10003bf0, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_10003bec = load i32, i32* %r27.global-to-local, align 4
  %v2_10003bec = add i32 %v1_10003bec, %v1_10003be0
  store i32 %v2_10003bec, i32* %r10.global-to-local, align 4
  %v1_10003bf0 = mul i32 %v0_10003bf0, 4
  store i32 %v1_10003bf0, i32* %r0.global-to-local, align 4
  %v1_10003bf4 = add i32 %v2_10003bec, 20
  %v2_10003bf4 = inttoptr i32 %v1_10003bf4 to i8*
  %v3_10003bf4 = load i8, i8* %v2_10003bf4, align 1
  %v4_10003bf4 = zext i8 %v3_10003bf4 to i32
  store i32 %v4_10003bf4, i32* %r9.global-to-local, align 4
  %v0_10003bf8 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003bf8 = add i32 %v0_10003bf8, %v1_10003bf0
  %v3_10003bf8 = inttoptr i32 %v2_10003bf8 to i32*
  %v4_10003bf8 = load i32, i32* %v3_10003bf8, align 4
  store i32 %v4_10003bf8, i32* %r28.global-to-local, align 4
  %v1_10003c00 = add i32 %v4_10003bf8, 20
  store i32 %v1_10003c00, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_10003bf4, 32
  br i1 %tmp33, label %dec_label_pc_10003ca0, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003be0
  %v0_10003c08 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c08 = icmp eq i32 %v0_10003c08, 65535
  br i1 %v4_10003c08, label %dec_label_pc_10003ccc, label %dec_label_pc_10003c10

dec_label_pc_10003c10:                            ; preds = %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge, %dec_label_pc_10003c08
  %v1_10003c10 = phi i32 [ %v1_10003c10.pre, %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge ], [ 65535, %dec_label_pc_10003c08 ]
  %v0_10003c10 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003c10 = icmp eq i32 %v0_10003c10, %v1_10003c10
  br i1 %v4_10003c10, label %dec_label_pc_10003cdc, label %dec_label_pc_10003c18

dec_label_pc_10003c18:                            ; preds = %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge, %dec_label_pc_10003c10
  %v1_10003c18 = phi i32 [ %v1_10003c18.pre, %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge ], [ %v1_10003c10, %dec_label_pc_10003c10 ]
  %v0_10003c18 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003c18 = icmp eq i32 %v0_10003c18, %v1_10003c18
  br i1 %v4_10003c18, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18, %dec_label_pc_10003cec
  %v0_10003c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c20 = trunc i32 %v0_10003c20 to i16
  %v2_10003c20 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c20 = add i32 %v2_10003c20, 10
  %v4_10003c20 = inttoptr i32 %v3_10003c20 to i16*
  store i16 %v1_10003c20, i16* %v4_10003c20, align 2
  %v0_10003c28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c28, i32* @r3, align 4
  %v2_10003c2c = call i32 @function_100043cc(i32 %v0_10003c28, i32 20)
  %v3_10003c2c = trunc i32 %v2_10003c2c to i16
  store i32 %v2_10003c2c, i32* %r3.global-to-local, align 4
  %v3_10003c30 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c30, i32* %r6.global-to-local, align 4
  %v3_10003c34 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003c34 = add i32 %v3_10003c34, 10
  %v5_10003c34 = inttoptr i32 %v4_10003c34 to i16*
  store i16 %v3_10003c2c, i16* %v5_10003c34, align 2
  %v0_10003c38 = load i32, i32* @r31, align 4
  store i32 %v0_10003c38, i32* @r4, align 4
  %v0_10003c3c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c3c = trunc i32 %v0_10003c3c to i16
  %v3_10003c3c = add i32 %v0_10003c38, 6
  %v4_10003c3c = inttoptr i32 %v3_10003c3c to i16*
  store i16 %v1_10003c3c, i16* %v4_10003c3c, align 2
  %v0_10003c40 = load i32, i32* %r6.global-to-local, align 4
  %v1_10003c40 = add i32 %v0_10003c40, 12
  store i32 %v1_10003c40, i32* %r6.global-to-local, align 4
  %v0_10003c44 = load i32, i32* @r31, align 4
  %v1_10003c44 = add i32 %v0_10003c44, 4
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i16*
  %v3_10003c44 = load i16, i16* %v2_10003c44, align 2
  %v4_10003c44 = zext i16 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r5.global-to-local, align 4
  %v0_10003c48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c48, i32* %r3.global-to-local, align 4
  %v4_10003c4c = call i32 @function_10004430(i32 %v0_10003c48, i32 %v0_10003c38, i32 %v4_10003c44, i32 %v1_10003c40)
  %v5_10003c4c = trunc i32 %v4_10003c4c to i16
  store i32 %v4_10003c4c, i32* %r3.global-to-local, align 4
  %v3_10003c50 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c50, i32* %r7.global-to-local, align 4
  %v0_10003c54 = load i32, i32* @r31, align 4
  %v1_10003c54 = add i32 %v0_10003c54, 2
  %v2_10003c54 = inttoptr i32 %v1_10003c54 to i16*
  %v3_10003c54 = load i16, i16* %v2_10003c54, align 2
  %v4_10003c54 = zext i16 %v3_10003c54 to i32
  store i32 %v4_10003c54, i32* %r0.global-to-local, align 4
  %v0_10003c58 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003c5c = mul i32 %v3_10003c50, 24
  store i32 %v1_10003c5c, i32* %r7.global-to-local, align 4
  %v3_10003c60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c60, i32* %r5.global-to-local, align 4
  %v4_10003c64 = add i32 %v0_10003c54, 6
  %v5_10003c64 = inttoptr i32 %v4_10003c64 to i16*
  store i16 %v5_10003c4c, i16* %v5_10003c64, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10003c6c = load i32, i32* %r7.global-to-local, align 4
  %v1_10003c6c = load i32, i32* %r27.global-to-local, align 4
  %v2_10003c6c = add i32 %v1_10003c6c, %v0_10003c6c
  store i32 %v2_10003c6c, i32* %r7.global-to-local, align 4
  %v0_10003c70 = load i32, i32* %r5.global-to-local, align 4
  %v1_10003c70 = add i32 %v0_10003c70, 32
  store i32 %v1_10003c70, i32* %r5.global-to-local, align 4
  %v0_10003c74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003c74 = trunc i32 %v0_10003c74 to i16
  %v3_10003c74 = add i32 %v2_10003c6c, 2
  %v4_10003c74 = inttoptr i32 %v3_10003c74 to i16*
  store i16 %v1_10003c74, i16* %v4_10003c74, align 2
  %v0_10003c78 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003c78, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268450948, i32* @lr, align 4
  %v6_10003c80 = call i32 @function_10009558(i32 %v0_10003c78, i32 %v0_10003c58, i32 %v1_10003c70, i32 16384, i32 %v2_10003c6c, i32 16)
  store i32 %v6_10003c80, i32* %r3.global-to-local, align 4
  %v3_10003c84 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c84, i32* %r9.global-to-local, align 4
  %v1_10003c88 = add i32 %v3_10003c84, 1
  store i32 %v1_10003c88, i32* %r11.global-to-local, align 4
  %v1_10003c8c = load i32, i32* %r23.global-to-local, align 4
  %v2_10003c8c = icmp slt i32 %v1_10003c88, %v1_10003c8c
  store i32 %v1_10003c88, i32* %stack_var_-88, align 4
  br i1 %v2_10003c8c, label %dec_label_pc_10003be0, label %dec_label_pc_10003c98

dec_label_pc_10003c98:                            ; preds = %dec_label_pc_10003c20
  %v0_10003c98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003c98 = or i1 %v0_10003c98, %v1_10003c98
  br i1 %v2_10003c98, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003bd0

dec_label_pc_10003ca0:                            ; preds = %dec_label_pc_10003be0
  %v1_10003ca0 = add i32 %v2_10003bec, 16
  %v2_10003ca0 = inttoptr i32 %v1_10003ca0 to i32*
  %v3_10003ca0 = load i32, i32* %v2_10003ca0, align 4
  store i32 %v3_10003ca0, i32* %r29.global-to-local, align 4
  %v0_10003ca4 = call i32 @function_10005d24()
  store i32 %v0_10003ca4, i32* %r3.global-to-local, align 4
  %v3_10003ca8 = load i32, i32* %stack_var_-88, align 4
  %v0_10003cac = load i32, i32* %r20.global-to-local, align 4
  %v1_10003cac = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cac = icmp eq i32 %v0_10003cac, %v1_10003cac
  %v1_10003cb0 = mul i32 %v3_10003ca8, 24
  %v1_10003cb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003cb4 = add i32 %v1_10003cb4, %v1_10003cb0
  store i32 %v2_10003cb4, i32* %r9.global-to-local, align 4
  %v1_10003cb8 = add i32 %v2_10003cb4, 20
  %v2_10003cb8 = inttoptr i32 %v1_10003cb8 to i8*
  %v3_10003cb8 = load i8, i8* %v2_10003cb8, align 1
  %v4_10003cb8 = zext i8 %v3_10003cb8 to i32
  store i32 %v4_10003cb8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003cb8, 64
  %v2_10003cbc = zext i8 %tmp to i32
  %v3_10003cbc = lshr i32 %v0_10003ca4, %v2_10003cbc
  store i32 %v3_10003cbc, i32* %r3.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003cc0 = add i32 %v3_10003cbc, %v0_10003cc0
  store i32 %v2_10003cc0, i32* %r29.global-to-local, align 4
  %v1_10003cc4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003cc4 = add i32 %v1_10003cc4, 16
  %v3_10003cc4 = inttoptr i32 %v2_10003cc4 to i32*
  store i32 %v2_10003cc0, i32* %v3_10003cc4, align 4
  br i1 %v4_10003cac, label %dec_label_pc_10003ccc, label %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge

dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge: ; preds = %dec_label_pc_10003ca0
  %v1_10003c10.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c10

dec_label_pc_10003ccc:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003c08
  %v0_10003ccc = call i32 @function_10005d24()
  %v1_10003ccc = trunc i32 %v0_10003ccc to i16
  store i32 %v0_10003ccc, i32* %r3.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003cd0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cd0 = icmp eq i32 %v0_10003cd0, %v1_10003cd0
  %v3_10003cd4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003cd4 = add i32 %v3_10003cd4, 4
  %v5_10003cd4 = inttoptr i32 %v4_10003cd4 to i16*
  store i16 %v1_10003ccc, i16* %v5_10003cd4, align 2
  br i1 %v4_10003cd0, label %dec_label_pc_10003cdc, label %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge

dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge: ; preds = %dec_label_pc_10003ccc
  %v1_10003c18.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c18

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003ccc, %dec_label_pc_10003c10
  %v0_10003cdc = call i32 @function_10005d24()
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  store i32 %v0_10003cdc, i32* %r3.global-to-local, align 4
  %v0_10003ce0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003ce0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003ce0 = icmp eq i32 %v0_10003ce0, %v1_10003ce0
  %v3_10003ce4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003ce4 = add i32 %v3_10003ce4, 20
  %v5_10003ce4 = inttoptr i32 %v4_10003ce4 to i16*
  store i16 %v1_10003cdc, i16* %v5_10003ce4, align 2
  br i1 %v4_10003ce0, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18
  %v0_10003cec = call i32 @function_10005d24()
  %v1_10003cec = trunc i32 %v0_10003cec to i16
  store i32 %v0_10003cec, i32* %r3.global-to-local, align 4
  %v3_10003cf0 = load i32, i32* @r31, align 4
  %v4_10003cf0 = add i32 %v3_10003cf0, 2
  %v5_10003cf0 = inttoptr i32 %v4_10003cf0 to i16*
  store i16 %v1_10003cec, i16* %v5_10003cf0, align 2
  br label %dec_label_pc_10003c20

dec_label_pc_10003cf8:                            ; preds = %dec_label_pc_10003abc
  %v0_10003cf8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003cf8, i32* %r3.global-to-local, align 4
  store i32 268451072, i32* @lr, align 4
  %v0_10003cfc = call i32 @function_10008884()
  store i32 %v0_10003cfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003d00

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_1000397c, %dec_label_pc_10003cf8
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v1_10003d14 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003984)
  store i32 %v0_100039bc, i32* %r28.global-to-local, align 4
  store i32 %v0_100039c4, i32* %r29.global-to-local, align 4
  store i32 %v0_100039cc, i32* %r30.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003d58

; uselistorder directives
  uselistorder i32 %v0_10003cec, { 1, 0 }
  uselistorder i32 %v0_10003cdc, { 1, 0 }
  uselistorder i32 %v0_10003ccc, { 1, 0 }
  uselistorder i1 %v1_10003c98, { 1, 0 }
  uselistorder i1 %v0_10003c98, { 1, 0 }
  uselistorder i32 %v1_10003c88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003c4c, { 1, 0 }
  uselistorder i32 %v2_10003c2c, { 1, 0 }
  uselistorder i32 %v1_10003bf0, { 1, 0 }
  uselistorder i32 %v1_10003b38, { 1, 0 }
  uselistorder i32 %v1_10003b2c, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 2, 5, 3, 1, 4, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 0 }
  uselistorder label %dec_label_pc_10003d00, { 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003b78, { 1, 0 }
}

define i32 @function_10003d5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003d5c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10003d60 = load i32, i32* @lr, align 4
  store i32 %v0_10003d60, i32* %r0.global-to-local, align 4
  %v0_10003d64 = call i32 @__asm_mfcr()
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_10003d74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003d64, i32* %r15.global-to-local, align 4
  %v0_10003d94 = load i32, i32* @r24, align 4
  %v0_10003d98 = load i32, i32* @r25, align 4
  %v0_10003d9c = load i32, i32* @r26, align 4
  %v0_10003da0 = load i32, i32* @r27, align 4
  %v0_10003da4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003db4 = load i32, i32* @r31, align 4
  %v0_10003dc8 = load i32, i32* @r30, align 4
  store i32 268451280, i32* @lr, align 4
  %v2_10003dcc = call i32 @function_10009930(i32 4, i32 4)
  store i32 %v2_10003dcc, i32* %r16.global-to-local, align 4
  %v0_10003dd4 = load i32, i32* @r28, align 4
  %v0_10003de0 = load i32, i32* @r29, align 4
  store i32 %v0_10003de0, i32* %r3.global-to-local, align 4
  store i32 268451304, i32* @lr, align 4
  %v4_10003de4 = inttoptr i32 %v0_10003dd4 to i32*
  %v5_10003de4 = call i32 @function_100006a8(i32 %v0_10003de0, i32* %v4_10003de4, i32 2, i32 0)
  %v5_10003df4 = trunc i32 %v5_10003de4 to i8
  %v0_10003dfc = load i32, i32* @r28, align 4
  %v0_10003e00 = load i32, i32* @r29, align 4
  store i32 %v0_10003e00, i32* %r3.global-to-local, align 4
  store i32 268451336, i32* @lr, align 4
  %v4_10003e04 = inttoptr i32 %v0_10003dfc to i32*
  %v5_10003e04 = call i32 @function_100006a8(i32 %v0_10003e00, i32* %v4_10003e04, i32 3, i32 65535)
  %v0_10003e08 = load i32, i32* @r28, align 4
  store i32 %v5_10003e04, i32* %r19.global-to-local, align 4
  %v0_10003e18 = load i32, i32* @r29, align 4
  store i32 %v0_10003e18, i32* %r3.global-to-local, align 4
  store i32 268451360, i32* @lr, align 4
  %v4_10003e1c = inttoptr i32 %v0_10003e08 to i32*
  %v5_10003e1c = call i32 @function_100006a8(i32 %v0_10003e18, i32* %v4_10003e1c, i32 4, i32 64)
  %v0_10003e20 = load i32, i32* @r28, align 4
  %v5_10003e2c = trunc i32 %v5_10003e1c to i8
  %v0_10003e34 = load i32, i32* @r29, align 4
  store i32 %v0_10003e34, i32* %r3.global-to-local, align 4
  store i32 268451388, i32* @lr, align 4
  %v4_10003e38 = inttoptr i32 %v0_10003e20 to i32*
  %v5_10003e38 = call i32 @function_100006a8(i32 %v0_10003e34, i32* %v4_10003e38, i32 5, i32 0)
  %v0_10003e48 = load i32, i32* @r28, align 4
  %v1_10003e4c = urem i32 %v5_10003e38, 256
  store i32 %v1_10003e4c, i32* %r27.global-to-local, align 4
  %v0_10003e50 = load i32, i32* @r29, align 4
  store i32 %v0_10003e50, i32* %r3.global-to-local, align 4
  store i32 268451416, i32* @lr, align 4
  %v4_10003e54 = inttoptr i32 %v0_10003e48 to i32*
  %v5_10003e54 = call i32 @function_100006a8(i32 %v0_10003e50, i32* %v4_10003e54, i32 6, i32 65535)
  %v0_10003e58 = load i32, i32* @r28, align 4
  store i32 %v5_10003e54, i32* %r20.global-to-local, align 4
  %v0_10003e68 = load i32, i32* @r29, align 4
  store i32 %v0_10003e68, i32* %r3.global-to-local, align 4
  store i32 268451440, i32* @lr, align 4
  %v4_10003e6c = inttoptr i32 %v0_10003e58 to i32*
  %v5_10003e6c = call i32 @function_100006a8(i32 %v0_10003e68, i32* %v4_10003e6c, i32 7, i32 53)
  %v0_10003e74 = load i32, i32* @r28, align 4
  store i32 %v5_10003e6c, i32* %r23.global-to-local, align 4
  %v0_10003e84 = load i32, i32* @r29, align 4
  store i32 %v0_10003e84, i32* %r3.global-to-local, align 4
  store i32 268451468, i32* @lr, align 4
  %v4_10003e88 = inttoptr i32 %v0_10003e74 to i32*
  %v5_10003e88 = call i32 @function_100006a8(i32 %v0_10003e84, i32* %v4_10003e88, i32 9, i32 65535)
  %v0_10003e8c = load i32, i32* @r28, align 4
  store i32 %v5_10003e88, i32* %r24.global-to-local, align 4
  %v0_10003e9c = load i32, i32* @r29, align 4
  store i32 %v0_10003e9c, i32* %r3.global-to-local, align 4
  store i32 268451492, i32* @lr, align 4
  %v4_10003ea0 = inttoptr i32 %v0_10003e8c to i32*
  %v5_10003ea0 = call i32 @function_100006a8(i32 %v0_10003e9c, i32* %v4_10003ea0, i32 0, i32 12)
  %v0_10003eac = load i32, i32* @r28, align 4
  store i32 %v5_10003ea0, i32* %r26.global-to-local, align 4
  %v0_10003eb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003eb4, i32* %r3.global-to-local, align 4
  store i32 268451516, i32* @lr, align 4
  %v4_10003eb8 = inttoptr i32 %v0_10003eac to i32*
  %v5_10003eb8 = call i32 @function_10000238(i32 %v0_10003eb4, i32* %v4_10003eb8, i32 8, i32 0)
  store i32 %v5_10003eb8, i32* %r25.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 268451528, i32* @lr, align 4
  %v1_10003ec4 = call i32 @function_10007adc(i32 24)
  store i32 24, i32* %r3.global-to-local, align 4
  %v3_10003ed0 = call i32 @function_10007a28(i32 24, i32* null)
  store i32 %v3_10003ed0, i32* %r3.global-to-local, align 4
  store i32 268451552, i32* @lr, align 4
  %v2_10003edc = call i32 @function_100089ec(i32 %v3_10003ed0, i32 0)
  store i32 %v2_10003edc, i32* @r31, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v1_10003ee8 = call i32 @function_10007a50(i32 24)
  store i32 %v1_10003ee8, i32* %r3.global-to-local, align 4
  %v0_10003eec = load i32, i32* @r31, align 4
  %v1_10003eec = icmp slt i32 %v0_10003eec, 0
  %v3_10003eec = icmp eq i32 %v0_10003eec, 0
  store i1 %v3_10003eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003eec, label %dec_label_pc_10003fbc, label %dec_label_pc_10003ef4

dec_label_pc_10003ef4:                            ; preds = %dec_label_pc_10003d5c
  %v2_10003ef4 = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_10003ef4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003eec, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v3_10003f04 = call i32 @function_10008abc(i32 %v0_10003eec, i32 %v2_10003ef4, i32 2048)
  store i32 %v3_10003f04, i32* %r30.global-to-local, align 4
  %v0_10003f0c = load i32, i32* @r31, align 4
  store i32 %v0_10003f0c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f14.24 to i32), i32* @lr, align 4
  %v0_10003f10 = call i32 @function_10008884()
  store i32 25, i32* %r3.global-to-local, align 4
  store i32 268451612, i32* @lr, align 4
  %v1_10003f18 = call i32 @function_10007adc(i32 25)
  store i32 25, i32* %r3.global-to-local, align 4
  %v3_10003f24 = call i32 @function_10007a28(i32 25, i32* null)
  %v0_10003f28 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_10003ef4, i32* %r3.global-to-local, align 4
  %v3_10003f34 = bitcast i32* %stack_var_-2148 to i8*
  %v4_10003f34 = call i32 @function_10008474(i8* %v3_10003f34, i32 %v0_10003f28, i32 %v3_10003f24)
  store i32 %v4_10003f34, i32* @r31, align 4
  store i32 25, i32* %r3.global-to-local, align 4
  store i32 268451652, i32* @lr, align 4
  %v1_10003f40 = call i32 @function_10007a50(i32 25)
  store i32 %v1_10003f40, i32* %r3.global-to-local, align 4
  %v0_10003f44 = load i32, i32* @r31, align 4
  %v3_10003f44 = icmp eq i32 %v0_10003f44, -1
  store i1 %v3_10003f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f44, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f4c

dec_label_pc_10003f4c:                            ; preds = %dec_label_pc_10003ef4
  %v0_10003f4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10003f4c = icmp sgt i32 %v0_10003f4c, %v0_10003f44
  %v4_10003f4c = icmp eq i32 %v0_10003f4c, %v0_10003f44
  store i1 %v4_10003f4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f4c, label %dec_label_pc_10003f54, label %dec_label_pc_10003fbc

dec_label_pc_10003f54:                            ; preds = %dec_label_pc_10003f4c
  %v2_10003f54 = sub i32 %v0_10003f4c, %v0_10003f44
  store i32 %v2_10003f54, i32* %r0.global-to-local, align 4
  %v1_10003f58 = add i32 %v0_10003f4c, -1
  store i32 %v1_10003f58, i32* %r3.global-to-local, align 4
  store i32 %v2_10003f54, i32* %ctr.global-to-local, align 4
  %v0_10003f64 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003f64 = add i32 %v0_10003f64, %v0_10003f44
  store i32 %v2_10003f64, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10003f6c = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10003f6c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003f70

dec_label_pc_10003f70:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f54
  %v0_10003fb8 = phi i32 [ %v1_10003fb8, %dec_label_pc_10003fb4 ], [ %v2_10003f54, %dec_label_pc_10003f54 ]
  %v0_10003fb4 = phi i32 [ %v1_10003fb4, %dec_label_pc_10003fb4 ], [ %v0_10003f44, %dec_label_pc_10003f54 ]
  %v0_10003f7c = phi i32 [ %v1_10003f7c, %dec_label_pc_10003fb4 ], [ %v2_10003f64, %dec_label_pc_10003f54 ]
  %v0_10003f70 = phi i32 [ %v0_10003f704, %dec_label_pc_10003fb4 ], [ 0, %dec_label_pc_10003f54 ]
  %v3_10003f70 = icmp eq i32 %v0_10003f70, 0
  store i1 %v3_10003f70, i1* %cr7_eq.global-to-local, align 1
  %v1_10003f74 = inttoptr i32 %v0_10003f7c to i8*
  %v2_10003f74 = load i8, i8* %v1_10003f74, align 1
  %v3_10003f74 = zext i8 %v2_10003f74 to i32
  store i32 %v3_10003f74, i32* %r9.global-to-local, align 4
  %v4_10003f78 = icmp eq i32 %v1_10003f58, %v0_10003fb4
  %v1_10003f7c = add i32 %v0_10003f7c, 1
  store i32 %v1_10003f7c, i32* %r11.global-to-local, align 4
  br i1 %v3_10003f70, label %dec_label_pc_10003f8c, label %dec_label_pc_10003f9c

dec_label_pc_10003f8c:                            ; preds = %dec_label_pc_10003f70
  %v3_10003f8c = icmp eq i8 %v2_10003f74, 9
  store i1 %v3_10003f8c, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10003f74, label %dec_label_pc_10003f98 [
    i8 32, label %dec_label_pc_10003fb4
    i8 9, label %dec_label_pc_10003fb4
  ]

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f8c
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003f9c

dec_label_pc_10003f9c:                            ; preds = %dec_label_pc_10003f70, %dec_label_pc_10003f98
  %v0_10003f705 = phi i32 [ %v0_10003f70, %dec_label_pc_10003f70 ], [ 1, %dec_label_pc_10003f98 ]
  %v1_10003f9c = add nuw nsw i32 %v3_10003f74, 208
  %v1_10003fa0 = urem i32 %v1_10003f9c, 256
  store i32 %v1_10003fa0, i32* %r0.global-to-local, align 4
  %v2_10003fa4 = icmp ugt i32 %v1_10003fa0, 9
  %v3_10003fa4 = icmp eq i32 %v1_10003fa0, 9
  store i1 %v3_10003fa4, i1* %cr7_eq.global-to-local, align 1
  %v3_10003f80.not = icmp ne i8 %v2_10003f74, 46
  %brmerge.not = and i1 %v3_10003f80.not, %v2_10003fa4
  %brmerge26 = or i1 %v4_10003f78, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_10003ff0, label %dec_label_pc_10003fb4

dec_label_pc_10003fb4:                            ; preds = %dec_label_pc_10003f9c, %dec_label_pc_10003f8c, %dec_label_pc_10003f8c
  %v0_10003f704 = phi i32 [ 0, %dec_label_pc_10003f8c ], [ 0, %dec_label_pc_10003f8c ], [ %v0_10003f705, %dec_label_pc_10003f9c ]
  %v1_10003fb4 = add i32 %v0_10003fb4, 1
  %v1_10003fb8 = add i32 %v0_10003fb8, -1
  store i32 %v1_10003fb8, i32* %ctr.global-to-local, align 4
  %v2_10003fb8 = icmp eq i32 %v1_10003fb8, 0
  br i1 %v2_10003fb8, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f70

dec_label_pc_10003fbc:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f4c, %dec_label_pc_10003ef4, %dec_label_pc_10003d5c
  %v0_10003fbc = call i32 @function_10005d24()
  %v1_10003fc0 = urem i32 %v0_10003fbc, 4
  store i32 %v1_10003fc0, i32* %r3.global-to-local, align 4
  %v3_10003fc4 = icmp eq i32 %v1_10003fc0, 1
  store i1 %v3_10003fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fc4, label %dec_label_pc_100043a8, label %dec_label_pc_10003fcc

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fbc
  %v1_10003fc4 = icmp eq i32 %v1_10003fc0, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003fc4, label %dec_label_pc_100043c0, label %dec_label_pc_10003fd4

dec_label_pc_10003fd4:                            ; preds = %dec_label_pc_10003fcc
  %v2_10003fd4 = icmp eq i32 %v1_10003fc0, 3
  %v3_10003fd4 = icmp eq i32 %v1_10003fc0, 2
  store i1 %v3_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fd4, label %dec_label_pc_100043b4, label %dec_label_pc_10003fdc

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fd4
  store i1 %v2_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003fd4, label %dec_label_pc_10003fe4, label %dec_label_pc_10004020

dec_label_pc_10003fe4:                            ; preds = %dec_label_pc_10003fdc
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10003ff0:                            ; preds = %dec_label_pc_10003f9c
  %v2_10003ff0 = sub i32 %v0_10003fb4, %v0_10003f44
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004004.25 to i32), i32* @lr, align 4
  %v3_10004000 = call i32 @function_10008148(i32 %v2_10003f6c, i32 %v2_10003f64, i32 %v2_10003ff0)
  %v2_10004004 = ptrtoint i32* %stack_var_-2184 to i32
  %v2_10004008 = add i32 %v2_10003ff0, %v2_10004004
  store i32 %v2_10004008, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10004010 = add i32 %v2_10004008, 4
  %v4_10004010 = inttoptr i32 %v3_10004010 to i8*
  store i8 0, i8* %v4_10004010, align 1
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451868, i32* @lr, align 4
  %v1_10004018 = call i32 @function_10009338(i32 %v2_10003f6c)
  store i32 %v1_10004018, i32* %r3.global-to-local, align 4
  store i32 %v1_10004018, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10003fdc, %dec_label_pc_10003fe4, %dec_label_pc_100043c0, %dec_label_pc_100043b4, %dec_label_pc_100043a8, %dec_label_pc_10003ff0
  %v0_10004020 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004020 = icmp eq i32 %v0_10004020, 0
  store i1 %v3_10004020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004020, label %dec_label_pc_10004348, label %dec_label_pc_10004028

dec_label_pc_10004028:                            ; preds = %dec_label_pc_10004020
  store i32 %v0_10004020, i32* %r3.global-to-local, align 4
  store i32 268451888, i32* @lr, align 4
  %v1_1000402c = inttoptr i32 %v0_10004020 to i8*
  %v2_1000402c = call i32 @function_100080c4(i8* %v1_1000402c)
  store i32 %v2_1000402c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451908, i32* @lr, align 4
  %v3_10004040 = call i32 @function_100095d4(i32 2, i32 3, i32 17)
  store i32 %v3_10004040, i32* %r3.global-to-local, align 4
  %v3_10004044 = icmp eq i32 %v3_10004040, -1
  store i1 %v3_10004044, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10004040, i32* %r22.global-to-local, align 4
  br i1 %v3_10004044, label %dec_label_pc_10004348, label %dec_label_pc_10004050

dec_label_pc_10004050:                            ; preds = %dec_label_pc_10004028
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000405c = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268451948, i32* @lr, align 4
  %v4_10004068 = call i32 @function_10009598(i32 0, i32 3, i32 %v2_1000405c, i32 4)
  store i32 %v4_10004068, i32* %r3.global-to-local, align 4
  %v3_1000406c = icmp eq i32 %v4_10004068, -1
  store i1 %v3_1000406c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000406c, label %dec_label_pc_10004340, label %dec_label_pc_10004074

dec_label_pc_10004074:                            ; preds = %dec_label_pc_10004050
  %v0_10004074 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004074 = icmp slt i32 %v0_10004074, 0
  %v3_10004074 = icmp eq i32 %v0_10004074, 0
  store i1 %v1_10004074, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004074, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 65536
  store i32 %v1_1000407c, i32* %r17.global-to-local, align 4
  %v0_10004080 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004080 = urem i32 %v0_10004080, 65536
  store i32 %v1_10004080, i32* %r18.global-to-local, align 4
  %v0_10004084 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004084 = urem i32 %v0_10004084, 65536
  store i32 %v1_10004084, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000408c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 65536
  store i32 %v1_1000408c, i32* %r20.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 256
  store i32 %v1_10004090, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_10004074, 1
  %v1_10004334 = load i32, i32* @r29, align 4
  %v2_10004334 = add i32 %v1_10004334, %v1_10004090
  store i32 %v2_10004334, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_10004098

dec_label_pc_10004098:                            ; preds = %dec_label_pc_10004074
  %v1_1000409c = icmp slt i32 %v1_10004334, 0
  %v3_1000409c = icmp eq i32 %v1_10004334, 0
  store i1 %v1_1000409c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_1000409c, i1* %cr3_eq.global-to-local, align 1
  %v1_100040a0 = urem i32 %v2_10004334, 65536
  %v0_100040a4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100040a4 = icmp eq i32 %v0_100040a4, 0
  store i1 %v3_100040a4, i1* %cr2_eq.global-to-local, align 1
  %v1_100040a8 = add nuw nsw i32 %v1_100040a0, 27
  store i32 %v1_100040a8, i32* %r0.global-to-local, align 4
  %v1_100040ac = add nuw nsw i32 %v1_100040a0, 47
  store i32 %v1_100040ac, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10004334, 47
  %v1_100040b0 = urem i32 %fold, 65536
  store i32 %v1_100040b0, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10004334, 27
  %v1_100040b4 = urem i32 %fold3, 65536
  store i32 %v1_100040b4, i32* %r27.global-to-local, align 4
  %v1_100040b8 = add i32 %v1_10004334, 1
  store i32 %v1_100040b8, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10004108 = sext i8 %v5_10003df4 to i32
  %v4_10004110 = sext i8 %v5_10003e2c to i32
  br label %dec_label_pc_100040c0

dec_label_pc_100040c0:                            ; preds = %dec_label_pc_100041d0, %dec_label_pc_10004098
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268452044, i32* @lr, align 4
  %v2_100040c8 = call i32 @function_10009930(i32 600, i32 1)
  store i32 %v2_100040c8, i32* %r3.global-to-local, align 4
  %v3_100040cc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100040cc, i32* %r0.global-to-local, align 4
  %v0_100040d0 = load i32, i32* @r31, align 4
  %v1_100040d0 = mul i32 %v0_100040d0, 4
  store i32 %v1_100040d0, i32* %r9.global-to-local, align 4
  %v2_100040d4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100040d4 = add i32 %v2_100040d4, %v1_100040d0
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i32*
  store i32 %v2_100040c8, i32* %v4_100040d4, align 4
  %v0_100040d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100040d8 = mul i32 %v0_100040d8, 4
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  %v0_100040dc = load i32, i32* %r16.global-to-local, align 4
  %v2_100040dc = add i32 %v0_100040dc, %v1_100040d8
  %v3_100040dc = inttoptr i32 %v2_100040dc to i32*
  %v4_100040dc = load i32, i32* %v3_100040dc, align 4
  store i32 %v4_100040dc, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100040e4 = inttoptr i32 %v4_100040dc to i32*
  %v2_100040e4 = load i32, i32* %v1_100040e4, align 4
  store i32 %v2_100040e4, i32* %r9.global-to-local, align 4
  %v1_100040e8 = add i32 %v4_100040dc, 20
  store i32 %v1_100040e8, i32* %r10.global-to-local, align 4
  %v0_100040ec = load i32, i32* %r17.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v3_100040ec = add i32 %v4_100040dc, 4
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  %v0_100040f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100040f0 = add i32 %v0_100040f0, 28
  store i32 %v1_100040f0, i32* %r8.global-to-local, align 4
  %v1_100040f4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040f4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100040fc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100040fc, i32* %r9.global-to-local, align 4
  %v1_10004100 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004100 = inttoptr i32 %v1_10004100 to i32*
  store i32 %v1_100040fc, i32* %v2_10004100, align 4
  %v0_10004104 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004104 = trunc i32 %v0_10004104 to i16
  %v2_10004104 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004104 = add i32 %v2_10004104, 2
  %v4_10004104 = inttoptr i32 %v3_10004104 to i16*
  store i16 %v1_10004104, i16* %v4_10004104, align 2
  store i32 %v4_10004108, i32* %r0.global-to-local, align 4
  %v2_1000410c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000410c = add i32 %v2_1000410c, 1
  %v4_1000410c = inttoptr i32 %v3_1000410c to i8*
  store i8 %v5_10003df4, i8* %v4_1000410c, align 1
  store i32 %v4_10004110, i32* %r7.global-to-local, align 4
  %v2_10004114 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 8
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v5_10003e2c, i8* %v4_10004114, align 1
  %v0_10004118 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004118, label %dec_label_pc_10004124, label %dec_label_pc_1000411c

dec_label_pc_1000411c:                            ; preds = %dec_label_pc_100040c0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 6
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 16384, i16* %v4_10004120, align 2
  br label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %dec_label_pc_100040c0, %dec_label_pc_1000411c
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_1000412c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000412c = add i32 %v2_1000412c, 9
  %v4_1000412c = inttoptr i32 %v3_1000412c to i8*
  store i8 17, i8* %v4_1000412c, align 1
  %v0_10004130 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004130 = add i32 %v0_10004130, 41
  store i32 %v1_10004130, i32* %r9.global-to-local, align 4
  %v0_10004134 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004134 = trunc i32 %v0_10004134 to i16
  %v2_10004134 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004134 = add i32 %v2_10004134, 4
  %v4_10004134 = inttoptr i32 %v3_10004134 to i16*
  store i16 %v1_10004134, i16* %v4_10004134, align 2
  %v0_10004138 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r23.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, %v0_10004138
  store i32 %v2_10004138, i32* %r30.global-to-local, align 4
  %v3_1000413c = load i32, i32* @global_var_1001ba00.14, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = add i32 %v2_10004138, 1
  store i32 %v1_10004140, i32* %r31.global-to-local, align 4
  %v0_10004144 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004144 = trunc i32 %v0_10004144 to i16
  %v2_10004144 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004144 = add i32 %v2_10004144, 2
  %v4_10004144 = inttoptr i32 %v3_10004144 to i16*
  store i16 %v1_10004144, i16* %v4_10004144, align 2
  %v0_10004148 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004148, i32* %r3.global-to-local, align 4
  %v0_1000414c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000414c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000414c = add i32 %v1_1000414c, 12
  %v3_1000414c = inttoptr i32 %v2_1000414c to i32*
  store i32 %v0_1000414c, i32* %v3_1000414c, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10004154 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004154 = trunc i32 %v0_10004154 to i16
  %v2_10004154 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004154 = add i32 %v2_10004154, 20
  %v4_10004154 = inttoptr i32 %v3_10004154 to i16*
  store i16 %v1_10004154, i16* %v4_10004154, align 2
  %v0_10004158 = load i32, i32* %r25.global-to-local, align 4
  %v0_1000415c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000415c = trunc i32 %v0_1000415c to i16
  %v2_1000415c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000415c = add i32 %v2_1000415c, 2
  %v4_1000415c = inttoptr i32 %v3_1000415c to i16*
  store i16 %v1_1000415c, i16* %v4_1000415c, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004164 = load i32, i32* %r8.global-to-local, align 4
  %v3_10004164 = add i32 %v2_10004164, 4
  %v4_10004164 = inttoptr i32 %v3_10004164 to i16*
  store i16 1, i16* %v4_10004164, align 2
  %v0_10004168 = load i32, i32* @r28, align 4
  %v0_1000416c = load i32, i32* @r21, align 4
  %v1_1000416c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000416c = add i32 %v1_1000416c, 16
  %v3_1000416c = inttoptr i32 %v2_1000416c to i32*
  store i32 %v0_1000416c, i32* %v3_1000416c, align 4
  %v0_10004170 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004170 = trunc i32 %v0_10004170 to i16
  %v2_10004170 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004170 = add i32 %v2_10004170, 28
  %v4_10004170 = inttoptr i32 %v3_10004170 to i16*
  store i16 %v1_10004170, i16* %v4_10004170, align 2
  %v0_10004174 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004174 = trunc i32 %v0_10004174 to i8
  %v2_10004174 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004174 = add i32 %v2_10004174, 40
  %v4_10004174 = inttoptr i32 %v3_10004174 to i8*
  store i8 %v1_10004174, i8* %v4_10004174, align 1
  store i32 268452220, i32* @lr, align 4
  %v3_10004178 = call i32 @function_10008148(i32 %v0_10004148, i32 %v0_10004158, i32 %v0_10004168)
  store i32 %v3_10004178, i32* %r3.global-to-local, align 4
  %v0_1000417c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000417c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000417c = or i1 %v0_1000417c, %v1_1000417c
  br i1 %v2_1000417c, label %dec_label_pc_100041c8, label %dec_label_pc_10004180

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004124
  %v0_10004180 = load i32, i32* @r29, align 4
  store i32 %v0_10004180, i32* %ctr.global-to-local, align 4
  %v0_10004184 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004184, i32* %r3.global-to-local, align 4
  %v0_10004188 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10004188, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041a8

dec_label_pc_10004198:                            ; preds = %dec_label_pc_100041a8
  %v1_10004198 = urem i32 %v1_100041ac, 256
  br label %dec_label_pc_1000419c

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_100041b8, %dec_label_pc_10004198
  %v0_100041a4 = phi i32 [ %v0_100041a4.pre, %dec_label_pc_100041b8 ], [ %v0_100041a418, %dec_label_pc_10004198 ]
  %v0_100041a0 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v0_100041a016, %dec_label_pc_10004198 ]
  %v2_100041b813 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v2_100041b8, %dec_label_pc_10004198 ]
  %v0_1000419c = phi i32 [ %v0_1000419c.pre, %dec_label_pc_100041b8 ], [ %v0_100041a8, %dec_label_pc_10004198 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100041b8 ], [ %v1_10004198, %dec_label_pc_10004198 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_1000419c = add i32 %v0_1000419c, 1
  store i32 %v1_1000419c, i32* %r10.global-to-local, align 4
  %v1_100041a0 = add i32 %v0_100041a0, 1
  store i32 %v1_100041a0, i32* %r3.global-to-local, align 4
  %v1_100041a4 = add i32 %v0_100041a4, -1
  store i32 %v1_100041a4, i32* %ctr.global-to-local, align 4
  %v2_100041a4 = icmp eq i32 %v1_100041a4, 0
  br i1 %v2_100041a4, label %dec_label_pc_100041d0.loopexit, label %dec_label_pc_100041a8

dec_label_pc_100041a8:                            ; preds = %dec_label_pc_1000419c, %dec_label_pc_10004180
  %v0_100041a418 = phi i32 [ %v1_100041a4, %dec_label_pc_1000419c ], [ %v0_10004180, %dec_label_pc_10004180 ]
  %v0_100041a016 = phi i32 [ %v1_100041a0, %dec_label_pc_1000419c ], [ %v0_10004184, %dec_label_pc_10004180 ]
  %v2_100041b8 = phi i32 [ %v2_100041b813, %dec_label_pc_1000419c ], [ %v0_10004188, %dec_label_pc_10004180 ]
  %v0_100041b8 = phi i32 [ %storemerge, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v0_100041a8 = phi i32 [ %v1_1000419c, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v1_100041a8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100041a8 = add i32 %v1_100041a8, %v0_100041a8
  %v3_100041a8 = inttoptr i32 %v2_100041a8 to i8*
  %v4_100041a8 = load i8, i8* %v3_100041a8, align 1
  %v5_100041a8 = zext i8 %v4_100041a8 to i32
  store i32 %v5_100041a8, i32* %r0.global-to-local, align 4
  %v1_100041ac = add nsw i32 %v0_100041b8, 1
  store i32 %v1_100041ac, i32* %r11.global-to-local, align 4
  %v3_100041b0 = icmp eq i8 %v4_100041a8, 46
  store i1 %v3_100041b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100041b0, label %dec_label_pc_100041b8, label %dec_label_pc_10004198

dec_label_pc_100041b8:                            ; preds = %dec_label_pc_100041a8
  %v1_100041b8 = trunc i32 %v0_100041b8 to i8
  %v3_100041b8 = inttoptr i32 %v2_100041b8 to i8*
  store i8 %v1_100041b8, i8* %v3_100041b8, align 1
  %v0_100041bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100041bc, i32* %r9.global-to-local, align 4
  %v0_1000419c.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_100041a4.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000419c

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_10004124
  %v0_100041c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100041c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0.loopexit:                   ; preds = %dec_label_pc_1000419c
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0:                            ; preds = %dec_label_pc_100041d0.loopexit, %dec_label_pc_100041c8
  %v2_100041d0 = phi i32 [ %v2_100041b813, %dec_label_pc_100041d0.loopexit ], [ %v0_100041c8, %dec_label_pc_100041c8 ]
  %v0_100041d0.off0 = phi i8 [ %extract.t, %dec_label_pc_100041d0.loopexit ], [ 0, %dec_label_pc_100041c8 ]
  %v3_100041d0 = inttoptr i32 %v2_100041d0 to i8*
  store i8 %v0_100041d0.off0, i8* %v3_100041d0, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100041d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100041d8 = load i32, i32* @r29, align 4
  %v2_100041d8 = add i32 %v1_100041d8, %v0_100041d8
  store i32 %v2_100041d8, i32* %r9.global-to-local, align 4
  %v3_100041dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100041dc, i32* %r11.global-to-local, align 4
  %v3_100041e0 = add i32 %v2_100041d8, 4
  %v4_100041e0 = inttoptr i32 %v3_100041e0 to i16*
  store i16 1, i16* %v4_100041e0, align 2
  %v0_100041e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100041e4 = add i32 %v0_100041e4, 1
  store i32 %v1_100041e4, i32* %r31.global-to-local, align 4
  %v0_100041e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041e8 = trunc i32 %v0_100041e8 to i16
  %v2_100041e8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100041e8 = add i32 %v2_100041e8, 2
  %v4_100041e8 = inttoptr i32 %v3_100041e8 to i16*
  store i16 %v1_100041e8, i16* %v4_100041e8, align 2
  %v0_100041ec = load i32, i32* %r31.global-to-local, align 4
  %v1_100041ec = load i32, i32* %r15.global-to-local, align 4
  %v2_100041ec = icmp slt i32 %v0_100041ec, %v1_100041ec
  %v4_100041ec = icmp eq i32 %v0_100041ec, %v1_100041ec
  store i1 %v4_100041ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100041ec, i32* %stack_var_-2184, align 4
  br i1 %v2_100041ec, label %dec_label_pc_100040c0, label %dec_label_pc_100041f8.preheader.loopexit

dec_label_pc_100041f8.preheader.loopexit:         ; preds = %dec_label_pc_100041d0
  %v0_100041f8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041f8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041f8.preheader

dec_label_pc_100041f8.preheader:                  ; preds = %dec_label_pc_100042f0, %dec_label_pc_10004074, %dec_label_pc_100041f8.preheader.loopexit
  %v1_100041f8 = phi i1 [ %v1_10004074, %dec_label_pc_10004074 ], [ %v1_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v1_100042f0, %dec_label_pc_100042f0 ]
  %v0_100041f8 = phi i1 [ %v3_10004074, %dec_label_pc_10004074 ], [ %v0_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v0_100042f0, %dec_label_pc_100042f0 ]
  %v2_100041f8 = or i1 %v1_100041f8, %v0_100041f8
  br label %dec_label_pc_100041f8

dec_label_pc_100041f8:                            ; preds = %dec_label_pc_100041f8.preheader, %dec_label_pc_100041f8
  br i1 %v2_100041f8, label %dec_label_pc_100041f8, label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_100041f8, %dec_label_pc_100042f0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000420c = load i32, i32* %r19.global-to-local, align 4
  %v4_1000420c = icmp eq i32 %v0_1000420c, 65535
  store i1 %v4_1000420c, i1* %cr7_eq.global-to-local, align 1
  %v0_10004210 = load i32, i32* %r18.global-to-local, align 4
  %v2_10004210 = icmp slt i32 %v0_10004210, 65535
  %v4_10004210 = icmp eq i32 %v0_10004210, 65535
  store i1 %v2_10004210, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_10004210, i1* %cr3_eq.global-to-local, align 1
  %v0_10004214 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004214 = icmp eq i32 %v0_10004214, 65535
  store i1 %v4_10004214, i1* %cr2_eq.global-to-local, align 1
  %v0_10004218 = load i32, i32* @r24, align 4
  %v1_10004218 = add i32 %v0_10004218, 27
  store i32 %v1_10004218, i32* @r30, align 4
  %v0_1000421c = call i32 @__asm_mfcr()
  store i32 %v0_1000421c, i32* %r3.global-to-local, align 4
  %v1_10004220 = mul i32 %v0_1000421c, 268435456
  store i32 %v1_10004220, i32* @r26, align 4
  %v0_10004224 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004224 = load i32, i32* %r0.global-to-local, align 4
  %v4_10004224 = icmp eq i32 %v0_10004224, %v1_10004224
  store i1 %v4_10004224, i1* %cr7_eq.global-to-local, align 1
  %v0_10004228 = load i32, i32* @r24, align 4
  %v1_10004228 = add i32 %v0_10004228, 47
  store i32 %v1_10004228, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004230 = call i32 @__asm_mfcr()
  store i32 %v0_10004230, i32* %r3.global-to-local, align 4
  %v1_10004234 = mul i32 %v0_10004230, 268435456
  store i32 %v1_10004234, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_1000423c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_1000423c:                            ; preds = %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, %dec_label_pc_100041fc
  %v0_10004240 = phi i32 [ %v0_10004240.pre, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v1_10004234, %dec_label_pc_100041fc ]
  %v0_1000423c = phi i32 [ %v1_100042e0, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v0_1000423c.pre, %dec_label_pc_100041fc ]
  %v1_1000423c = mul i32 %v0_1000423c, 4
  store i32 %v1_1000423c, i32* %r0.global-to-local, align 4
  %v1_10004240 = mul i32 %v0_10004240, 16
  %v2_10004240 = udiv i32 %v0_10004240, 268435456
  %v3_10004240 = or i32 %v2_10004240, %v1_10004240
  store i32 %v3_10004240, i32* %r27.global-to-local, align 4
  %v1_10004244 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004240)
  %v1_10004248 = mul nuw i32 %v2_10004240, 268435456
  %v2_10004248 = urem i32 %v0_10004240, 268435456
  %v3_10004248 = or i32 %v1_10004248, %v2_10004248
  store i32 %v3_10004248, i32* @r27, align 4
  %v0_1000424c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000424c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000424c = add i32 %v1_1000424c, %v0_1000424c
  %v3_1000424c = inttoptr i32 %v2_1000424c to i32*
  %v4_1000424c = load i32, i32* %v3_1000424c, align 4
  store i32 %v4_1000424c, i32* @r29, align 4
  %v1_10004250 = add i32 %v4_1000424c, 20
  store i32 %v1_10004250, i32* @r28, align 4
  %v0_10004254 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004254, label %dec_label_pc_100042f8, label %dec_label_pc_10004258

dec_label_pc_10004258:                            ; preds = %dec_label_pc_1000423c
  %v0_10004258 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004258, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_1000425c = load i32, i32* @r26, align 4
  %v1_1000425c = mul i32 %v0_1000425c, 16
  %v2_1000425c = udiv i32 %v0_1000425c, 268435456
  %v3_1000425c = or i32 %v2_1000425c, %v1_1000425c
  store i32 %v3_1000425c, i32* %r26.global-to-local, align 4
  %v1_10004260 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000425c)
  %v1_10004264 = mul nuw i32 %v2_1000425c, 268435456
  %v2_10004264 = urem i32 %v0_1000425c, 268435456
  %v3_10004264 = or i32 %v1_10004264, %v2_10004264
  store i32 %v3_10004264, i32* @r26, align 4
  %v0_10004268 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004268, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000426c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000426c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000426c, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004270:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c, %dec_label_pc_10004328
  %v0_10004270 = load i32, i32* @r29, align 4
  %v1_10004270 = add i32 %v0_10004270, 41
  store i32 %v1_10004270, i32* %r3.global-to-local, align 4
  %v0_10004274 = load i32, i32* %r23.global-to-local, align 4
  store i32 268452476, i32* @lr, align 4
  %v2_10004278 = inttoptr i32 %v1_10004270 to i8*
  %v3_10004278 = call i32 @function_10005de4(i8* %v2_10004278, i32 %v0_10004274)
  %v0_1000427c = load i32, i32* @r25, align 4
  %v1_1000427c = trunc i32 %v0_1000427c to i16
  %v2_1000427c = load i32, i32* @r29, align 4
  %v3_1000427c = add i32 %v2_1000427c, 10
  %v4_1000427c = inttoptr i32 %v3_1000427c to i16*
  store i16 %v1_1000427c, i16* %v4_1000427c, align 2
  %v0_10004284 = load i32, i32* @r29, align 4
  store i32 %v0_10004284, i32* @r3, align 4
  %v2_10004288 = call i32 @function_100043cc(i32 %v0_10004284, i32 20)
  %v3_10004288 = trunc i32 %v2_10004288 to i16
  %v0_1000428c = load i32, i32* @r28, align 4
  store i32 %v0_1000428c, i32* @r4, align 4
  %v3_10004290 = load i32, i32* @r29, align 4
  %v4_10004290 = add i32 %v3_10004290, 10
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v3_10004288, i16* %v5_10004290, align 2
  %v0_10004294 = load i32, i32* @r30, align 4
  %v0_10004298 = load i32, i32* @r25, align 4
  %v1_10004298 = trunc i32 %v0_10004298 to i16
  %v2_10004298 = load i32, i32* @r28, align 4
  %v3_10004298 = add i32 %v2_10004298, 6
  %v4_10004298 = inttoptr i32 %v3_10004298 to i16*
  store i16 %v1_10004298, i16* %v4_10004298, align 2
  %v0_1000429c = load i32, i32* @r29, align 4
  store i32 %v0_1000429c, i32* %r3.global-to-local, align 4
  %v0_100042a0 = load i32, i32* @r28, align 4
  %v1_100042a0 = add i32 %v0_100042a0, 4
  %v2_100042a0 = inttoptr i32 %v1_100042a0 to i16*
  %v3_100042a0 = load i16, i16* %v2_100042a0, align 2
  %v4_100042a0 = zext i16 %v3_100042a0 to i32
  %v4_100042a4 = call i32 @function_10004430(i32 %v0_1000429c, i32 %v0_1000428c, i32 %v4_100042a0, i32 %v0_10004294)
  %v5_100042a4 = trunc i32 %v4_100042a4 to i16
  store i32 %v4_100042a4, i32* %r3.global-to-local, align 4
  %v3_100042a8 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042a8, i32* %r7.global-to-local, align 4
  %v0_100042ac = load i32, i32* @r28, align 4
  %v1_100042ac = add i32 %v0_100042ac, 2
  %v2_100042ac = inttoptr i32 %v1_100042ac to i16*
  %v3_100042ac = load i16, i16* %v2_100042ac, align 2
  %v4_100042ac = zext i16 %v3_100042ac to i32
  store i32 %v4_100042ac, i32* %r0.global-to-local, align 4
  %v0_100042b0 = load i32, i32* @r29, align 4
  %v1_100042b4 = mul i32 %v3_100042a8, 24
  store i32 %v1_100042b4, i32* %r7.global-to-local, align 4
  %v4_100042b8 = add i32 %v0_100042ac, 6
  %v5_100042b8 = inttoptr i32 %v4_100042b8 to i16*
  store i16 %v5_100042a4, i16* %v5_100042b8, align 2
  %v0_100042bc = load i32, i32* @r31, align 4
  %v0_100042c0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100042c0, i32* %r3.global-to-local, align 4
  %v0_100042c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100042c4 = load i32, i32* %r14.global-to-local, align 4
  %v2_100042c4 = add i32 %v1_100042c4, %v0_100042c4
  store i32 %v2_100042c4, i32* %r7.global-to-local, align 4
  %v0_100042cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100042cc = trunc i32 %v0_100042cc to i16
  %v3_100042cc = add i32 %v2_100042c4, 2
  %v4_100042cc = inttoptr i32 %v3_100042cc to i16*
  store i16 %v1_100042cc, i16* %v4_100042cc, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100042d4 = load i32, i32* @r21, align 4
  %v2_100042d4 = add i32 %v2_100042c4, 4
  %v3_100042d4 = inttoptr i32 %v2_100042d4 to i32*
  store i32 %v0_100042d4, i32* %v3_100042d4, align 4
  store i32 268452572, i32* @lr, align 4
  %v6_100042d8 = call i32 @function_10009558(i32 %v0_100042c0, i32 %v0_100042b0, i32 %v0_100042bc, i32 16384, i32 %v2_100042c4, i32 16)
  store i32 %v6_100042d8, i32* %r3.global-to-local, align 4
  %v3_100042dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v3_100042dc, 1
  store i32 %v1_100042e0, i32* %r0.global-to-local, align 4
  %v1_100042e4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100042e4 = icmp slt i32 %v1_100042e0, %v1_100042e4
  %v4_100042e4 = icmp eq i32 %v1_100042e0, %v1_100042e4
  store i1 %v4_100042e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100042e0, i32* %stack_var_-2184, align 4
  br i1 %v2_100042e4, label %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, label %dec_label_pc_100042f0

dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge: ; preds = %dec_label_pc_10004270
  %v0_10004240.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_100042f0:                            ; preds = %dec_label_pc_10004270
  %v0_100042f0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042f0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042f0 = or i1 %v0_100042f0, %v1_100042f0
  br i1 %v2_100042f0, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_100041fc

dec_label_pc_100042f8:                            ; preds = %dec_label_pc_1000423c
  %v0_100042f8 = call i32 @function_10005d24()
  %v1_100042f8 = trunc i32 %v0_100042f8 to i16
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  %v3_100042fc = load i32, i32* @r29, align 4
  %v4_100042fc = add i32 %v3_100042fc, 4
  %v5_100042fc = inttoptr i32 %v4_100042fc to i16*
  store i16 %v1_100042f8, i16* %v5_100042fc, align 2
  %v0_10004300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004300, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_10004304:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_10004304 = call i32 @function_10005d24()
  %v1_10004304 = trunc i32 %v0_10004304 to i16
  store i32 %v0_10004304, i32* %r3.global-to-local, align 4
  %v0_10004308 = load i32, i32* @r26, align 4
  %v1_10004308 = mul i32 %v0_10004308, 16
  %v2_10004308 = udiv i32 %v0_10004308, 268435456
  %v3_10004308 = or i32 %v2_10004308, %v1_10004308
  store i32 %v3_10004308, i32* %r26.global-to-local, align 4
  %v1_1000430c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004308)
  %v1_10004310 = mul nuw i32 %v2_10004308, 268435456
  %v2_10004310 = urem i32 %v0_10004308, 268435456
  %v3_10004310 = or i32 %v1_10004310, %v2_10004310
  store i32 %v3_10004310, i32* @r26, align 4
  %v3_10004314 = load i32, i32* @r29, align 4
  %v4_10004314 = add i32 %v3_10004314, 20
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_10004304, i16* %v5_10004314, align 2
  %v0_10004318 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004318, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000431c = call i32 @function_10005d24()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v3_10004320 = load i32, i32* @r28, align 4
  %v4_10004320 = add i32 %v3_10004320, 2
  %v5_10004320 = inttoptr i32 %v4_10004320 to i16*
  store i16 %v1_1000431c, i16* %v5_10004320, align 2
  %v0_10004324 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004324, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004328:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c
  %v0_10004328 = call i32 @function_10005d24()
  %v1_10004328 = trunc i32 %v0_10004328 to i16
  store i32 %v0_10004328, i32* %r3.global-to-local, align 4
  %v3_1000432c = load i32, i32* @r29, align 4
  %v4_1000432c = add i32 %v3_1000432c, 28
  %v5_1000432c = inttoptr i32 %v4_1000432c to i16*
  store i16 %v1_10004328, i16* %v5_1000432c, align 2
  br label %dec_label_pc_10004270

dec_label_pc_10004340:                            ; preds = %dec_label_pc_10004050
  %v0_10004340 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10004340, i32* %r3.global-to-local, align 4
  store i32 268452680, i32* @lr, align 4
  %v0_10004344 = call i32 @function_10008884()
  store i32 %v0_10004344, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004348

dec_label_pc_10004348:                            ; preds = %dec_label_pc_10004028, %dec_label_pc_10004020, %dec_label_pc_10004340
  store i32 %v0_10003d74, i32* %r0.global-to-local, align 4
  %v1_1000435c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003d64)
  store i32 %v0_10003d94, i32* %r24.global-to-local, align 4
  store i32 %v0_10003d98, i32* %r25.global-to-local, align 4
  store i32 %v0_10003d9c, i32* %r26.global-to-local, align 4
  store i32 %v0_10003da0, i32* %r27.global-to-local, align 4
  store i32 %v0_10003da4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003dc8, i32* %r30.global-to-local, align 4
  store i32 %v0_10003db4, i32* %r31.global-to-local, align 4
  %v0_100043a4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043a4

dec_label_pc_100043a8:                            ; preds = %dec_label_pc_10003fbc
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043b4:                            ; preds = %dec_label_pc_10003fd4
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_10003fcc
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10004020

; uselistorder directives
  uselistorder i32 %v0_10004328, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_10004308, { 2, 1, 0 }
  uselistorder i32 %v0_10004304, { 1, 0 }
  uselistorder i32 %v0_100042f8, { 1, 0 }
  uselistorder i1 %v1_100042f0, { 1, 0 }
  uselistorder i1 %v0_100042f0, { 1, 0 }
  uselistorder i32 %v1_100042e0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100042a4, { 1, 0 }
  uselistorder i32 %v0_1000425c, { 2, 1, 0 }
  uselistorder i32 %v0_10004240, { 2, 1, 0 }
  uselistorder i32 %v1_10004234, { 1, 0 }
  uselistorder i32 %v0_100041bc, { 2, 0, 1 }
  uselistorder i32 %v1_100041ac, { 1, 0 }
  uselistorder i32 %v1_100041a4, { 0, 2, 1 }
  uselistorder i32 %v1_100040d8, { 1, 0 }
  uselistorder i32 %v1_100040d0, { 1, 0 }
  uselistorder i32 %v2_10004334, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10004334, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v0_10004020, { 1, 0, 2 }
  uselistorder i1 %v2_10003fd4, { 1, 0 }
  uselistorder i32 %v1_10003fc0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10003fb8, { 2, 1, 0 }
  uselistorder i32 %v1_10003fa0, { 1, 2, 0 }
  uselistorder i32 %v1_10003f7c, { 1, 0 }
  uselistorder i32 %v0_10003f70, { 1, 0 }
  uselistorder i32 %v2_10003f6c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10003f4c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10003f44, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_10003eec, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10003e2c, { 1, 0 }
  uselistorder i8 %v5_10003df4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r31.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 8, 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 3, 0 }
  uselistorder i32* %r28.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r27.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r26.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r24.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i32 41, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 103, 104, 105, 106, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder label %dec_label_pc_10004348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004270, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100041fc, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004124, { 1, 0 }
  uselistorder label %dec_label_pc_10004020, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10003f9c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 65535, { 50, 51, 9, 8, 7, 52, 53, 19, 20, 21, 10, 11, 54, 22, 55, 23, 56, 0, 12, 57, 58, 24, 25, 26, 59, 60, 61, 62, 63, 64, 27, 28, 1, 13, 65, 66, 29, 30, 31, 32, 2, 14, 67, 68, 33, 34, 35, 36, 37, 69, 15, 38, 39, 70, 16, 40, 41, 71, 72, 73, 74, 75, 76, 42, 43, 3, 17, 77, 78, 5, 44, 45, 46, 4, 18, 79, 80, 6, 47, 48, 49 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %v3_100044fc = load i32, i32* @global_var_1001ba0c.26, align 4
  store i32 268453124, i32* @lr, align 4
  %v2_10004500 = call i32 @function_100089a4(i32 %v3_100044fc, i32 9)
  ret i32 %v2_10004500
}

define i32 @function_10004514(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004514:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10004524 = load i32, i32* @r27, align 4
  %v2_10004528 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10004528, i32* @r27, align 4
  %v2_10004530 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004534 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004544 = load i32, i32* @r25, align 4
  %v2_10004548 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_1000454c = load i32, i32* @r30, align 4
  %v2_10004550 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004550, i32* @r30, align 4
  %v0_10004554 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_1000455c = load i32, i32* @r23, align 4
  %v0_10004564 = load i32, i32* @r28, align 4
  store i32 268453228, i32* @lr, align 4
  %v3_10004568 = call i32 @function_10009088(i32 %v2_10004528, i32 0, i32 4096)
  store i32 268453244, i32* @lr, align 4
  %v3_10004578 = call i32 @function_10009088(i32 %v2_10004530, i32 0, i32 4096)
  store i32 268453260, i32* @lr, align 4
  %v3_10004588 = call i32 @function_10009088(i32 %v2_10004550, i32 0, i32 513)
  %v0_10004594 = load i32, i32* @r29, align 4
  %v0_10004598 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004598, i32* %stack_var_-8792, align 4
  %v3_100045a8 = trunc i32 %v0_10004594 to i8
  %v4_100045a8 = call i32 @function_100085a0(i8 %v3_100045a8, i32 16, i32 %v2_10004548)
  store i32 268453300, i32* @lr, align 4
  %v2_100045b0 = call i32 @function_100080c4(i8* nonnull %stack_var_-8776)
  %v3_100045b4 = icmp eq i32 %v2_100045b0, 2
  br i1 %v3_100045b4, label %dec_label_pc_10004af4, label %dec_label_pc_100045bc

dec_label_pc_100045bc:                            ; preds = %dec_label_pc_10004514, %dec_label_pc_10004af4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100045c8.27 to i32), i32* @lr, align 4
  %v1_100045c4 = call i32 @function_10007adc(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d0.28 to i32), i32* @lr, align 4
  %v1_100045cc = call i32 @function_10007adc(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d8.29 to i32), i32* @lr, align 4
  %v1_100045d4 = call i32 @function_10007adc(i32 17)
  store i32 268453344, i32* @lr, align 4
  %v1_100045dc = call i32 @function_10007adc(i32 19)
  %v3_100045e8 = call i32 @function_10007a28(i32 19, i32* null)
  store i32 268453368, i32* @lr, align 4
  %v2_100045f4 = call i32 @function_100089ec(i32 %v3_100045e8, i32 0)
  %v3_100045f8 = icmp eq i32 %v2_100045f4, -1
  store i32 %v2_100045f4, i32* @r28, align 4
  br i1 %v3_100045f8, label %dec_label_pc_10004a40, label %dec_label_pc_10004604

dec_label_pc_10004604:                            ; preds = %dec_label_pc_100045bc
  %v2_10004604 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10004604, i32* %r26.global-to-local, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_1000461488 = call i32 @function_10008324(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045f4)
  %v3_1000461890 = icmp eq i32 %v4_1000461488, 0
  br i1 %v3_1000461890, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_10004620:                            ; preds = %dec_label_pc_10004604, %dec_label_pc_10004608.backedge
  %v3_10004620 = load i8, i8* %stack_var_-8760, align 1
  %v3_10004624 = icmp eq i8 %v3_10004620, 0
  br i1 %v3_10004624, label %dec_label_pc_10004608.backedge, label %dec_label_pc_1000462c

dec_label_pc_10004608.backedge:                   ; preds = %dec_label_pc_10004640, %dec_label_pc_10004620, %dec_label_pc_100046b0, %dec_label_pc_10004748, %dec_label_pc_10004794
  %v0_10004610.pre = load i32, i32* @r28, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_10004614 = call i32 @function_10008324(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10004610.pre)
  %v3_10004618 = icmp eq i32 %v4_10004614, 0
  br i1 %v3_10004618, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004620
  %v3_1000462c = icmp eq i8 %v3_10004620, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_1000462c, label %dec_label_pc_10004660, label %dec_label_pc_1000463c

dec_label_pc_1000463c:                            ; preds = %dec_label_pc_1000462c
  %v1_10004644.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004640

dec_label_pc_10004640:                            ; preds = %dec_label_pc_10004654, %dec_label_pc_1000463c
  %v0_10004640 = phi i32 [ %v1_10004640, %dec_label_pc_10004654 ], [ 0, %dec_label_pc_1000463c ]
  %v1_10004640 = add i32 %v0_10004640, 1
  %v2_10004644 = add i32 %v1_10004640, %v1_10004644.pre
  %v3_10004644 = inttoptr i32 %v2_10004644 to i8*
  %v4_10004644 = load i8, i8* %v3_10004644, align 1
  %v3_10004648 = icmp eq i8 %v4_10004644, 0
  br i1 %v3_10004648, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004640
  %v3_1000464c = icmp eq i8 %v4_10004644, 58
  br i1 %v3_1000464c, label %dec_label_pc_10004658, label %dec_label_pc_10004640

dec_label_pc_10004658:                            ; preds = %dec_label_pc_10004654
  %v1_10004658 = add i32 %v0_10004640, 4
  store i32 %v1_10004658, i32* @r31, align 4
  %v1_1000465c = add i32 %v0_10004640, 3
  br label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_1000462c, %dec_label_pc_10004658
  %v1_100046b8 = phi i32 [ 2, %dec_label_pc_1000462c ], [ %v1_1000465c, %dec_label_pc_10004658 ]
  %v0_10004660 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004660 = add i32 %v0_10004660, %v1_100046b8
  %v1_10004668 = add i32 %v2_10004660, 32
  %v2_10004668 = inttoptr i32 %v1_10004668 to i8*
  %v3_10004668 = load i8, i8* %v2_10004668, align 1
  %v3_1000466c = icmp eq i8 %v3_10004668, 0
  br i1 %v3_1000466c, label %dec_label_pc_100046b0, label %dec_label_pc_10004674

dec_label_pc_10004674:                            ; preds = %dec_label_pc_10004660
  %v3_10004674 = icmp eq i8 %v3_10004668, 32
  %v1_10004678 = add i32 %v1_100046b8, 1
  store i32 %v1_10004678, i32* @r31, align 4
  br i1 %v3_10004674, label %dec_label_pc_100046b0, label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004674
  %v0_10004688 = load i32, i32* @r30, align 4
  %v2_10004688 = add i32 %v0_10004688, %v1_10004678
  br label %dec_label_pc_10004694

dec_label_pc_10004694:                            ; preds = %dec_label_pc_10004694, %dec_label_pc_10004680
  %v0_10004698 = phi i32 [ %v1_10004698, %dec_label_pc_10004694 ], [ %v1_100046b8, %dec_label_pc_10004680 ]
  %v0_1000469c = phi i32 [ %v1_1000469c, %dec_label_pc_10004694 ], [ %v2_10004688, %dec_label_pc_10004680 ]
  %v1_10004694 = inttoptr i32 %v0_1000469c to i8*
  %v2_10004694 = load i8, i8* %v1_10004694, align 1
  %v1_10004698 = add i32 %v0_10004698, 1
  %v1_1000469c = add i32 %v0_1000469c, 1
  %tmp60 = or i8 %v2_10004694, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_100046ac, label %dec_label_pc_10004694

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004694
  %v1_100046ac = add i32 %v0_10004698, 2
  store i32 %v1_100046ac, i32* @r31, align 4
  br label %dec_label_pc_100046b0

dec_label_pc_100046b0:                            ; preds = %dec_label_pc_10004674, %dec_label_pc_10004660, %dec_label_pc_100046ac
  %v1_100046b0 = phi i32 [ %v1_100046b8, %dec_label_pc_10004674 ], [ %v1_100046b8, %dec_label_pc_10004660 ], [ %v1_10004698, %dec_label_pc_100046ac ]
  %v2_100046b0 = add i32 %v1_100046b0, %v0_10004660
  %v0_100046b8 = load i32, i32* @r30, align 4
  %v2_100046b8 = add i32 %v0_100046b8, %v1_100046b8
  store i32 %v2_100046b8, i32* @r29, align 4
  %v3_100046bc = add i32 %v2_100046b0, 32
  %v4_100046bc = inttoptr i32 %v3_100046bc to i8*
  store i8 0, i8* %v4_100046bc, align 1
  %v0_100046c0 = load i32, i32* @r29, align 4
  store i32 268453576, i32* @lr, align 4
  %v1_100046c4 = inttoptr i32 %v0_100046c0 to i8*
  %v2_100046c4 = call i32 @function_100080c4(i8* %v1_100046c4)
  %v0_100046d0 = load i32, i32* @r29, align 4
  %v3_100046d4 = inttoptr i32 %v0_100046d0 to i8*
  %v4_100046d4 = call i32 @function_10008474(i8* %v3_100046d4, i32 %v2_100046c4, i32 %v2_10004548)
  %v3_100046dc = icmp eq i32 %v4_100046d4, -1
  br i1 %v3_100046dc, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100046e8.preheader

dec_label_pc_100046e8.preheader:                  ; preds = %dec_label_pc_100046b0
  %v0_100046e8.pre = load i32, i32* @r31, align 4
  %v0_100046f0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046e8.outer

dec_label_pc_100046e8.outer:                      ; preds = %dec_label_pc_10004a90, %dec_label_pc_100046e8.preheader
  %v0_1000470428.ph = phi i32 [ %v1_10004a78, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  %v0_100046e8.ph = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a90 ], [ %v0_100046e8.pre, %dec_label_pc_100046e8.preheader ]
  %v0_10004748.ph = phi i32 [ 1, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  br label %dec_label_pc_100046e8

dec_label_pc_100046e8:                            ; preds = %dec_label_pc_100046e8.outer, %dec_label_pc_10004a80
  %v0_1000470428 = phi i32 [ %v1_10004a78, %dec_label_pc_10004a80 ], [ %v0_1000470428.ph, %dec_label_pc_100046e8.outer ]
  %v0_100046e8 = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a80 ], [ %v0_100046e8.ph, %dec_label_pc_100046e8.outer ]
  %v1_100046e8 = add i32 %v0_100046e8, 1
  %v2_100046f0 = add i32 %v1_100046e8, %v0_100046f0.pre
  %v1_1000471c68 = inttoptr i32 %v2_100046f0 to i8*
  %v2_1000471c69 = load i8, i8* %v1_1000471c68, align 1
  store i32 %v1_100046e8, i32* @r31, align 4
  %v3_1000472471 = icmp eq i8 %v2_1000471c69, 0
  br i1 %v3_1000472471, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_100046f8:                            ; preds = %dec_label_pc_10004734
  %v3_1000472879 = icmp eq i8 %v3_1000472879.in, 9
  br i1 %v3_1000472879, label %dec_label_pc_10004738, label %dec_label_pc_10004704

dec_label_pc_10004704:                            ; preds = %dec_label_pc_100046f8
  %v3_100046f8 = icmp eq i32 %v0_100046f875, 1
  br i1 %v3_100046f8, label %dec_label_pc_10004a78, label %dec_label_pc_1000470c

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004704, %dec_label_pc_10004a78
  %v0_1000470c = phi i32 [ %v1_10004a78, %dec_label_pc_10004a78 ], [ %v0_1000473874, %dec_label_pc_10004704 ]
  %v2_1000470c = icmp sgt i32 %v0_1000470c, 6
  br i1 %v2_1000470c, label %dec_label_pc_10004748, label %dec_label_pc_10004718

dec_label_pc_10004718:                            ; preds = %dec_label_pc_10004738, %dec_label_pc_1000470c
  %v0_1000470427 = phi i32 [ %v0_1000473874, %dec_label_pc_10004738 ], [ %v0_1000470c, %dec_label_pc_1000470c ]
  %v0_100046f825 = phi i32 [ 1, %dec_label_pc_10004738 ], [ 0, %dec_label_pc_1000470c ]
  %v0_1000471c22 = add i32 %v0_1000474078, 1
  %v1_10004718 = add i32 %v1_1000479c76, 1
  %v1_1000471c = inttoptr i32 %v0_1000471c22 to i8*
  %v2_1000471c = load i8, i8* %v1_1000471c, align 1
  store i32 %v1_10004718, i32* @r31, align 4
  %v3_10004724 = icmp eq i8 %v2_1000471c, 0
  br i1 %v3_10004724, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_10004734:                            ; preds = %dec_label_pc_100046e8, %dec_label_pc_10004718
  %v3_1000472879.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v3_1000472c80.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v0_1000474078 = phi i32 [ %v0_1000471c22, %dec_label_pc_10004718 ], [ %v2_100046f0, %dec_label_pc_100046e8 ]
  %v1_1000479c76 = phi i32 [ %v1_10004718, %dec_label_pc_10004718 ], [ %v1_100046e8, %dec_label_pc_100046e8 ]
  %v0_100046f875 = phi i32 [ %v0_100046f825, %dec_label_pc_10004718 ], [ 0, %dec_label_pc_100046e8 ]
  %v0_1000473874 = phi i32 [ %v0_1000470427, %dec_label_pc_10004718 ], [ %v0_1000470428, %dec_label_pc_100046e8 ]
  %v3_1000472c80 = icmp eq i8 %v3_1000472c80.in, 32
  br i1 %v3_1000472c80, label %dec_label_pc_10004738, label %dec_label_pc_100046f8

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004734, %dec_label_pc_100046f8
  %tmp62 = icmp slt i32 %v0_1000473874, 7
  br i1 %tmp62, label %dec_label_pc_10004718, label %dec_label_pc_10004748

dec_label_pc_10004748:                            ; preds = %dec_label_pc_10004718, %dec_label_pc_1000470c, %dec_label_pc_10004738, %dec_label_pc_100046e8
  %v1_1000479c.lcssa = phi i32 [ %v1_100046e8, %dec_label_pc_100046e8 ], [ %v1_1000479c76, %dec_label_pc_10004738 ], [ %v1_1000479c76, %dec_label_pc_1000470c ], [ %v1_10004718, %dec_label_pc_10004718 ]
  %v3_10004748 = icmp eq i32 %v0_10004748.ph, 0
  br i1 %v3_10004748, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004754

dec_label_pc_10004754:                            ; preds = %dec_label_pc_10004748
  %v0_10004754 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004754 = add i32 %v0_10004754, %v1_1000479c.lcssa
  %v1_10004758 = add i32 %v2_10004754, 32
  %v2_10004758 = inttoptr i32 %v1_10004758 to i8*
  %v3_10004758 = load i8, i8* %v2_10004758, align 1
  %v3_1000475c = icmp eq i8 %v3_10004758, 0
  br i1 %v3_1000475c, label %dec_label_pc_10004794, label %dec_label_pc_10004764

dec_label_pc_10004764:                            ; preds = %dec_label_pc_10004754
  %v3_10004764 = icmp eq i8 %v3_10004758, 32
  br i1 %v3_10004764, label %dec_label_pc_10004794, label %dec_label_pc_1000476c

dec_label_pc_1000476c:                            ; preds = %dec_label_pc_10004764
  %v1_1000476c = add i32 %v1_1000479c.lcssa, 1
  %v2_10004770 = add i32 %v1_1000476c, %v0_100046f0.pre
  br label %dec_label_pc_1000477c

dec_label_pc_1000477c:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_1000476c
  %v0_10004780 = phi i32 [ %v1_10004780, %dec_label_pc_1000477c ], [ %v1_1000479c.lcssa, %dec_label_pc_1000476c ]
  %v0_10004784 = phi i32 [ %v1_10004784, %dec_label_pc_1000477c ], [ %v2_10004770, %dec_label_pc_1000476c ]
  %v1_1000477c = inttoptr i32 %v0_10004784 to i8*
  %v2_1000477c = load i8, i8* %v1_1000477c, align 1
  %v1_10004780 = add i32 %v0_10004780, 1
  %v1_10004784 = add i32 %v0_10004784, 1
  %tmp63 = or i8 %v2_1000477c, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004794, label %dec_label_pc_1000477c

dec_label_pc_10004794:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_10004764, %dec_label_pc_10004754
  %v1_10004794 = phi i32 [ %v1_1000479c.lcssa, %dec_label_pc_10004764 ], [ %v1_1000479c.lcssa, %dec_label_pc_10004754 ], [ %v1_10004780, %dec_label_pc_1000477c ]
  %v2_10004794 = add i32 %v1_10004794, %v0_10004754
  %v2_1000479c = add i32 %v1_1000479c.lcssa, %v0_100046f0.pre
  store i32 %v2_1000479c, i32* @r31, align 4
  %v3_100047a0 = add i32 %v2_10004794, 32
  %v4_100047a0 = inttoptr i32 %v3_100047a0 to i8*
  store i8 0, i8* %v4_100047a0, align 1
  %v0_100047a4 = load i32, i32* @r31, align 4
  store i32 268453804, i32* @lr, align 4
  %v1_100047a8 = inttoptr i32 %v0_100047a4 to i8*
  %v2_100047a8 = call i32 @function_100080c4(i8* %v1_100047a8)
  %v2_100047ac = icmp sgt i32 %v2_100047a8, 15
  br i1 %v2_100047ac, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100047b4

dec_label_pc_100047b4:                            ; preds = %dec_label_pc_10004794
  %v0_100047b4 = load i32, i32* @r31, align 4
  store i32 %v2_10004604, i32* @r3, align 4
  %v2_100047bc = bitcast i32* %stack_var_-8792 to i8*
  %v3_100047bc = call i32 @function_100080ec(i8* %v2_100047bc, i32 %v0_100047b4)
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0.loopexit:                   ; preds = %dec_label_pc_10004608.backedge, %dec_label_pc_10004604
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0:                            ; preds = %dec_label_pc_100047c0.loopexit, %dec_label_pc_100047b4
  %v1_100047cc.pre-phi = phi i8* [ %.pre, %dec_label_pc_100047c0.loopexit ], [ %v2_100047bc, %dec_label_pc_100047b4 ]
  store i32 268453832, i32* @lr, align 4
  %v0_100047c4 = call i32 @function_10008884()
  store i32 268453840, i32* @lr, align 4
  %v2_100047cc = call i32 @function_100080c4(i8* %v1_100047cc.pre-phi)
  %v3_100047d0 = icmp eq i32 %v2_100047cc, 0
  br i1 %v3_100047d0, label %dec_label_pc_10004a98, label %dec_label_pc_100047d8

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_100047c0
  %v3_100047e0 = call i32 @function_10007a28(i32 15, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453868, i32* @lr, align 4
  %v1_100047e8 = call i32 @function_10008dd0(i32 %v3_100047e0)
  store i32 %v1_100047e8, i32* @r23, align 4
  %v3_100047ec = icmp eq i32 %v1_100047e8, 0
  br i1 %v3_100047ec, label %dec_label_pc_10004a20, label %dec_label_pc_100047f4

dec_label_pc_100047f4:                            ; preds = %dec_label_pc_100047d8
  store i32 0, i32* @r28, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc7 = inttoptr i32 %v1_100047e8 to i32*
  %v2_100047fc8 = call i32 @function_10008ee0(i32* %v1_100047fc7)
  %v3_1000480011 = icmp eq i32 %v2_100047fc8, 0
  br i1 %v3_1000480011, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader.lr.ph

dec_label_pc_10004808.preheader.lr.ph:            ; preds = %dec_label_pc_100047f4
  %v2_1000483c = bitcast i32* %stack_var_-8247 to i8*
  %v1_100049ac = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10004808.preheader

dec_label_pc_100047f8.loopexit:                   ; preds = %dec_label_pc_10004810, %dec_label_pc_10004828, %dec_label_pc_10004890
  %v0_100047f8 = load i32, i32* @r23, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc = inttoptr i32 %v0_100047f8 to i32*
  %v2_100047fc = call i32 @function_10008ee0(i32* %v1_100047fc)
  %v3_10004800 = icmp eq i32 %v2_100047fc, 0
  br i1 %v3_10004800, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader

dec_label_pc_10004808.preheader:                  ; preds = %dec_label_pc_10004808.preheader.lr.ph, %dec_label_pc_100047f8.loopexit
  %v0_1000481035 = phi i32 [ %v2_100047fc8, %dec_label_pc_10004808.preheader.lr.ph ], [ %v2_100047fc, %dec_label_pc_100047f8.loopexit ]
  br label %dec_label_pc_10004808

dec_label_pc_10004808:                            ; preds = %dec_label_pc_10004808.preheader, %dec_label_pc_100049fc
  %v0_10004810 = phi i32 [ %v0_1000481035, %dec_label_pc_10004808.preheader ], [ %v2_10004a08, %dec_label_pc_100049fc ]
  %v0_10004808 = load i32, i32* @r28, align 4
  %v3_10004808 = icmp eq i32 %v0_10004808, 0
  br i1 %v3_10004808, label %dec_label_pc_10004810, label %dec_label_pc_10004a14

dec_label_pc_10004810:                            ; preds = %dec_label_pc_10004808
  %v1_10004810 = add i32 %v0_10004810, 11
  %v2_10004810 = inttoptr i32 %v1_10004810 to i8*
  %v3_10004810 = load i8, i8* %v2_10004810, align 1
  %v4_10004810 = zext i8 %v3_10004810 to i32
  store i32 %v1_10004810, i32* @r30, align 4
  %v1_10004818 = add nuw nsw i32 %v4_10004810, 208
  %v1_1000481c = urem i32 %v1_10004818, 256
  %v2_10004820 = icmp ugt i32 %v1_1000481c, 9
  br i1 %v2_10004820, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004828

dec_label_pc_10004828:                            ; preds = %dec_label_pc_10004810
  %v3_10004830 = call i32 @function_10007a28(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_1000483c = call i32 @function_100080ec(i8* %v2_1000483c, i32 %v3_10004830)
  store i32 268453960, i32* @lr, align 4
  %v2_10004844 = call i32 @function_100080c4(i8* %v2_1000483c)
  %v0_10004848 = load i32, i32* @r30, align 4
  %v0_1000484c = load i32, i32* @r27, align 4
  %v2_1000484c = add i32 %v0_1000484c, %v2_10004844
  store i32 %v2_1000484c, i32* @r3, align 4
  %v2_10004850 = inttoptr i32 %v2_1000484c to i8*
  %v3_10004850 = call i32 @function_100080ec(i8* %v2_10004850, i32 %v0_10004848)
  store i32 268453980, i32* @lr, align 4
  %v2_10004858 = call i32 @function_100080c4(i8* %v2_1000483c)
  %v3_10004868 = call i32 @function_10007a28(i32 16, i32* null)
  %v0_10004870 = load i32, i32* @r27, align 4
  %v2_10004870 = add i32 %v2_10004858, %v0_10004870
  store i32 %v2_10004870, i32* @r3, align 4
  %v2_10004874 = inttoptr i32 %v2_10004870 to i8*
  %v3_10004874 = call i32 @function_100080ec(i8* %v2_10004874, i32 %v3_10004868)
  store i32 4096, i32* @r5, align 4
  store i32 268454024, i32* @lr, align 4
  %v3_10004884 = call i32 @function_10008b04(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_10004888 = icmp eq i32 %v3_10004884, -1
  br i1 %v3_10004888, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004890

dec_label_pc_10004890:                            ; preds = %dec_label_pc_10004828
  %v3_10004898 = call i32 @function_10007a28(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_100048a4 = call i32 @function_100080ec(i8* %v2_1000483c, i32 %v3_10004898)
  store i32 268454064, i32* @lr, align 4
  %v2_100048ac = call i32 @function_100080c4(i8* %v2_1000483c)
  %v0_100048b0 = load i32, i32* @r30, align 4
  %v0_100048b4 = load i32, i32* @r27, align 4
  %v2_100048b4 = add i32 %v0_100048b4, %v2_100048ac
  store i32 %v2_100048b4, i32* @r3, align 4
  %v2_100048b8 = inttoptr i32 %v2_100048b4 to i8*
  %v3_100048b8 = call i32 @function_100080ec(i8* %v2_100048b8, i32 %v0_100048b0)
  store i32 268454084, i32* @lr, align 4
  %v2_100048c0 = call i32 @function_100080c4(i8* %v2_1000483c)
  %v3_100048d0 = call i32 @function_10007a28(i32 17, i32* null)
  %v0_100048d8 = load i32, i32* @r27, align 4
  %v2_100048d8 = add i32 %v2_100048c0, %v0_100048d8
  store i32 %v2_100048d8, i32* @r3, align 4
  %v2_100048dc = inttoptr i32 %v2_100048d8 to i8*
  %v3_100048dc = call i32 @function_100080ec(i8* %v2_100048dc, i32 %v3_100048d0)
  store i32 268454120, i32* @lr, align 4
  %v1_100048e4 = call i32 @function_10008dd0(i32 %v2_10004528)
  store i32 %v1_100048e4, i32* @r25, align 4
  %v3_100048e8 = icmp eq i32 %v1_100048e4, 0
  br i1 %v3_100048e8, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_100048f0

dec_label_pc_100048f0.loopexit:                   ; preds = %dec_label_pc_10004910, %dec_label_pc_100049ac
  %v0_100048f0.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048f0

dec_label_pc_100048f0:                            ; preds = %dec_label_pc_10004890, %dec_label_pc_100048f0.loopexit
  %v0_100048f0 = phi i32 [ %v0_100048f0.pre, %dec_label_pc_100048f0.loopexit ], [ %v1_100048e4, %dec_label_pc_10004890 ]
  store i32 268454136, i32* @lr, align 4
  %v1_100048f4 = inttoptr i32 %v0_100048f0 to i32*
  %v2_100048f4 = call i32 @function_10008ee0(i32* %v1_100048f4)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048f4, i32* @r31, align 4
  %v3_100048fc = icmp eq i32 %v2_100048f4, 0
  %v0_10004900 = load i32, i32* @r28, align 4
  store i32 %v2_10004530, i32* @r3, align 4
  %v3_10004900.not = icmp ne i32 %v0_10004900, 0
  %brmerge = or i1 %v3_100048fc, %v3_10004900.not
  br i1 %brmerge, label %dec_label_pc_100049fc, label %dec_label_pc_10004910

dec_label_pc_10004910:                            ; preds = %dec_label_pc_100048f0
  store i32 268454164, i32* @lr, align 4
  %v0_10004910 = call i32 @function_1000816c()
  %v3_1000491c = call i32 @function_10007a28(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_10004928 = call i32 @function_100080ec(i8* %v2_1000483c, i32 %v3_1000491c)
  store i32 268454196, i32* @lr, align 4
  %v2_10004930 = call i32 @function_100080c4(i8* %v2_1000483c)
  %v0_10004934 = load i32, i32* @r30, align 4
  %v0_10004938 = load i32, i32* @r27, align 4
  %v2_10004938 = add i32 %v0_10004938, %v2_10004930
  store i32 %v2_10004938, i32* @r3, align 4
  %v2_1000493c = inttoptr i32 %v2_10004938 to i8*
  %v3_1000493c = call i32 @function_100080ec(i8* %v2_1000493c, i32 %v0_10004934)
  store i32 268454216, i32* @lr, align 4
  %v2_10004944 = call i32 @function_100080c4(i8* %v2_1000483c)
  %v3_10004954 = call i32 @function_10007a28(i32 17, i32* null)
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v2_10004944, %v0_1000495c
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_100080ec(i8* %v2_10004960, i32 %v3_10004954)
  store i32 268454252, i32* @lr, align 4
  %v2_10004968 = call i32 @function_100080c4(i8* %v2_1000483c)
  %v0_10004974 = load i32, i32* @r27, align 4
  %v2_10004974 = add i32 %v0_10004974, %v2_10004968
  store i32 %v2_10004974, i32* @r3, align 4
  %v2_10004978 = inttoptr i32 %v2_10004974 to i8*
  %v3_10004978 = call i32 @function_100080ec(i8* %v2_10004978, i32 ptrtoint (i32* @global_var_1000b2b4.31 to i32))
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_100080c4(i8* %v2_1000483c)
  %v0_10004984 = load i32, i32* @r31, align 4
  %v1_10004984 = add i32 %v0_10004984, 11
  %v0_10004988 = load i32, i32* @r27, align 4
  %v2_10004988 = add i32 %v0_10004988, %v2_10004980
  store i32 %v2_10004988, i32* @r3, align 4
  %v2_1000498c = inttoptr i32 %v2_10004988 to i8*
  %v3_1000498c = call i32 @function_100080ec(i8* %v2_1000498c, i32 %v1_10004984)
  store i32 268454304, i32* @lr, align 4
  %v3_1000499c = call i32 @function_10008b04(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_100049a0 = icmp eq i32 %v3_1000499c, -1
  br i1 %v3_100049a0, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049ac

dec_label_pc_100049ac:                            ; preds = %dec_label_pc_10004910
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_100080c4(i8* %v1_100049ac)
  %v4_100049bc = call i32 @function_10008474(i8* %v1_100049ac, i32 %v2_100049ac, i32 %v2_10004604)
  %v3_100049c4 = icmp eq i32 %v4_100049bc, -1
  %v0_100049c8 = load i32, i32* @r30, align 4
  store i32 %v0_100049c8, i32* @r3, align 4
  br i1 %v3_100049c4, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049ac
  store i32 268454356, i32* @lr, align 4
  %v2_100049d0 = call i32 @function_100081ec(i32 %v0_100049c8, i32 10)
  store i32 268454364, i32* @lr, align 4
  %v2_100049d8 = call i32 @function_100089a4(i32 %v2_100049d0, i32 9)
  %v0_100049dc = load i32, i32* @r25, align 4
  store i32 268454372, i32* @lr, align 4
  %v1_100049e0 = inttoptr i32 %v0_100049dc to i32*
  %v2_100049e0 = call i32 @function_10008ee0(i32* %v1_100049e0)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100048f0, %dec_label_pc_100049d0
  %v0_100049fc = load i32, i32* @r25, align 4
  store i32 268454404, i32* @lr, align 4
  %v1_10004a00 = inttoptr i32 %v0_100049fc to i32*
  %v2_10004a00 = call i32 @function_10008d2c(i32* %v1_10004a00)
  %v0_10004a04 = load i32, i32* @r23, align 4
  store i32 268454412, i32* @lr, align 4
  %v1_10004a08 = inttoptr i32 %v0_10004a04 to i32*
  %v2_10004a08 = call i32 @function_10008ee0(i32* %v1_10004a08)
  %v3_10004a0c = icmp eq i32 %v2_10004a08, 0
  br i1 %v3_10004a0c, label %dec_label_pc_10004a14, label %dec_label_pc_10004808

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_100047f8.loopexit, %dec_label_pc_100049fc, %dec_label_pc_10004808, %dec_label_pc_100047f4
  %v0_10004a14 = load i32, i32* @r23, align 4
  %v0_10004a18 = load i32, i32* @r28, align 4
  %v1_10004a18 = urem i32 %v0_10004a18, 256
  store i32 %v1_10004a18, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a20.32 to i32), i32* @lr, align 4
  %v1_10004a1c = inttoptr i32 %v0_10004a14 to i32*
  %v2_10004a1c = call i32 @function_10008d2c(i32* %v1_10004a1c)
  br label %dec_label_pc_10004a20

dec_label_pc_10004a20:                            ; preds = %dec_label_pc_100047d8, %dec_label_pc_10004a14
  store i32 ptrtoint ([3 x i8]* @global_var_10004a28.33 to i32), i32* @lr, align 4
  %v1_10004a24 = call i32 @function_1000a0cc(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a30.34 to i32), i32* @lr, align 4
  %v1_10004a2c = call i32 @function_10007a50(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a38.35 to i32), i32* @lr, align 4
  %v1_10004a34 = call i32 @function_10007a50(i32 16)
  store i32 268454464, i32* @lr, align 4
  %v1_10004a3c = call i32 @function_10007a50(i32 17)
  br label %dec_label_pc_10004a40

dec_label_pc_10004a40:                            ; preds = %dec_label_pc_100045bc, %dec_label_pc_10004a20
  %v0_10004a44 = load i32, i32* @r31, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004a44

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004704
  %v3_10004704 = icmp eq i32 %v0_1000473874, 0
  %v1_10004a78 = add i32 %v0_1000473874, 1
  br i1 %v3_10004704, label %dec_label_pc_10004a80, label %dec_label_pc_1000470c

dec_label_pc_10004a80:                            ; preds = %dec_label_pc_10004a78
  %v0_10004a80 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a80 = add i32 %v0_10004a80, %v1_1000479c76
  %v1_10004a84 = add i32 %v2_10004a80, 33
  %v2_10004a84 = inttoptr i32 %v1_10004a84 to i8*
  %v3_10004a84 = load i8, i8* %v2_10004a84, align 1
  %v3_10004a88 = icmp eq i8 %v3_10004a84, 65
  br i1 %v3_10004a88, label %dec_label_pc_10004a90, label %dec_label_pc_100046e8

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a80
  br label %dec_label_pc_100046e8.outer

dec_label_pc_10004a98:                            ; preds = %dec_label_pc_100047c0
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004aa4.36 to i32), i32* @lr, align 4
  %v1_10004aa0 = call i32 @function_10007a50(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004aac.37 to i32), i32* @lr, align 4
  %v1_10004aa8 = call i32 @function_10007a50(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ab4.38 to i32), i32* @lr, align 4
  %v1_10004ab0 = call i32 @function_10007a50(i32 17)
  store i32 268454588, i32* @lr, align 4
  %v1_10004ab8 = call i32 @function_10007a50(i32 19)
  %v0_10004ac0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004ac0

dec_label_pc_10004af4:                            ; preds = %dec_label_pc_10004514
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_100045bc

; uselistorder directives
  uselistorder i32 %v2_10004a08, { 1, 0 }
  uselistorder i32 %v1_1000479c.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000473874, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000479c76, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_1000471c22, { 1, 0 }
  uselistorder i32 %v1_100046b8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10004604, { 1, 0, 2 }
  uselistorder i32 %v2_10004548, { 1, 0 }
  uselistorder i32 %v2_10004528, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_100081ec, { 1, 0 }
  uselistorder i32 268453888, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10008324, { 1, 0 }
  uselistorder i32 268453400, { 1, 0 }
  uselistorder label %dec_label_pc_10004a40, { 1, 0 }
  uselistorder label %dec_label_pc_10004a20, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049fc, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10004808, { 1, 0 }
  uselistorder label %dec_label_pc_10004808.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047f8.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004748, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004734, { 1, 0 }
  uselistorder label %dec_label_pc_1000470c, { 1, 0 }
  uselistorder label %dec_label_pc_100046e8, { 1, 0 }
  uselistorder label %dec_label_pc_100046b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_10004608.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004620, { 1, 0 }
  uselistorder label %dec_label_pc_100045bc, { 1, 0 }
}

define i32 @function_10004b18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004b18:
  %r11.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-8420 = alloca i32, align 4
  %stack_var_-8424 = alloca i32, align 4
  %stack_var_-8252 = alloca i32, align 4
  %stack_var_-8380 = alloca i32, align 4
  %stack_var_-8316 = alloca i32, align 4
  %stack_var_-8396 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %stack_var_-8412 = alloca i32, align 4
  %v0_10004b24 = load i32, i32* @r30, align 4
  %v0_10004b3c = load i32, i32* @r23, align 4
  %v0_10004b44 = load i32, i32* @r25, align 4
  %v0_10004b4c = load i32, i32* @r27, align 4
  %v0_10004b50 = load i32, i32* @r28, align 4
  %v0_10004b54 = load i32, i32* @r29, align 4
  %v0_10004b58 = load i32, i32* @r31, align 4
  store i32 268454752, i32* @lr, align 4
  %v0_10004b5c = call i32 @function_10008c54()
  store i32 %v0_10004b5c, i32* @r30, align 4
  store i32 268454760, i32* @lr, align 4
  %v0_10004b64 = call i32 @function_100088cc()
  store i32 %v0_10004b64, i32* @global_var_1001ba0c.26, align 4
  %tmp65 = icmp slt i32 %v0_10004b64, 1
  br i1 %tmp65, label %dec_label_pc_10004bbc, label %dec_label_pc_10004b78

dec_label_pc_10004b78:                            ; preds = %dec_label_pc_10004df0, %dec_label_pc_10004ce8, %dec_label_pc_10004bbc, %dec_label_pc_10004b18
  %v0_10004bb8 = phi i32 [ -1, %dec_label_pc_10004ce8 ], [ -1, %dec_label_pc_10004bbc ], [ %v0_10004b64, %dec_label_pc_10004b18 ], [ 0, %dec_label_pc_10004df0 ]
  store i32 %v0_10004b3c, i32* @r23, align 4
  store i32 %v0_10004b44, i32* @r25, align 4
  store i32 %v0_10004b4c, i32* @r27, align 4
  store i32 %v0_10004b50, i32* @r28, align 4
  store i32 %v0_10004b54, i32* @r29, align 4
  store i32 %v0_10004b24, i32* @r30, align 4
  store i32 %v0_10004b58, i32* @r31, align 4
  ret i32 %v0_10004bb8

dec_label_pc_10004bbc:                            ; preds = %dec_label_pc_10004b18
  %v3_10004bbc = icmp eq i32 %v0_10004b64, -1
  br i1 %v3_10004bbc, label %dec_label_pc_10004b78, label %dec_label_pc_10004bc4

dec_label_pc_10004bc4:                            ; preds = %dec_label_pc_10004bbc
  store i32 0, i32* @r28, align 4
  store i32 2, i32* %stack_var_-8412, align 4
  store i32 ptrtoint (i32* @global_var_10004bdc.39 to i32), i32* @lr, align 4
  %v1_10004bd8 = call i32 @function_10004514(i32 23)
  store i32 268454900, i32* @lr, align 4
  %v3_10004bf0 = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  %v3_10004bf4 = icmp eq i32 %v3_10004bf0, -1
  store i32 %v3_10004bf0, i32* @r31, align 4
  br i1 %v3_10004bf4, label %dec_label_pc_10004c18, label %dec_label_pc_10004c00

dec_label_pc_10004c00:                            ; preds = %dec_label_pc_10004bc4
  %v2_10004c00 = ptrtoint i32* %stack_var_-8412 to i32
  store i32 268454924, i32* @lr, align 4
  %v3_10004c08 = call i32 @function_100093a0(i32 %v2_10004c00, i32 16, i32 16)
  %v0_10004c0c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004c18.40 to i32), i32* @lr, align 4
  %v2_10004c14 = call i32 @function_10009478(i32 %v0_10004c0c, i32 1)
  br label %dec_label_pc_10004c18

dec_label_pc_10004c18:                            ; preds = %dec_label_pc_10004bc4, %dec_label_pc_10004c00
  store i32 ptrtoint (i32* @global_var_10004c20.41 to i32), i32* @lr, align 4
  %v1_10004c1c = call i32 @function_10004514(i32 22)
  store i32 268454968, i32* @lr, align 4
  %v3_10004c34 = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  %v3_10004c38 = icmp eq i32 %v3_10004c34, -1
  store i32 %v3_10004c34, i32* @r31, align 4
  br i1 %v3_10004c38, label %dec_label_pc_10004c5c, label %dec_label_pc_10004c44

dec_label_pc_10004c44:                            ; preds = %dec_label_pc_10004c18
  %v2_10004c44 = ptrtoint i32* %stack_var_-8412 to i32
  store i32 268454992, i32* @lr, align 4
  %v3_10004c4c = call i32 @function_100093a0(i32 %v2_10004c44, i32 16, i32 16)
  %v0_10004c50 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004c5c.42 to i32), i32* @lr, align 4
  %v2_10004c58 = call i32 @function_10009478(i32 %v0_10004c50, i32 1)
  br label %dec_label_pc_10004c5c

dec_label_pc_10004c5c:                            ; preds = %dec_label_pc_10004c18, %dec_label_pc_10004c44
  store i32 ptrtoint (i32* @global_var_10004c68.43 to i32), i32* @lr, align 4
  %v1_10004c64 = call i32 @function_10004514(i32 48101)
  store i32 268455040, i32* @lr, align 4
  %v3_10004c7c = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  %v3_10004c80 = icmp eq i32 %v3_10004c7c, -1
  store i32 %v3_10004c7c, i32* @r31, align 4
  br i1 %v3_10004c80, label %dec_label_pc_10004ca4, label %dec_label_pc_10004c8c

dec_label_pc_10004c8c:                            ; preds = %dec_label_pc_10004c5c
  %v2_10004c8c = ptrtoint i32* %stack_var_-8412 to i32
  store i32 268455064, i32* @lr, align 4
  %v3_10004c94 = call i32 @function_100093a0(i32 %v2_10004c8c, i32 16, i32 16)
  %v0_10004c98 = load i32, i32* @r31, align 4
  store i32 268455076, i32* @lr, align 4
  %v2_10004ca0 = call i32 @function_10009478(i32 %v0_10004c98, i32 1)
  br label %dec_label_pc_10004ca4

dec_label_pc_10004ca4:                            ; preds = %dec_label_pc_10004c5c, %dec_label_pc_10004c8c
  store i32 ptrtoint (i32* @global_var_10004cac.44 to i32), i32* @lr, align 4
  %v1_10004ca8 = call i32 @function_10004514(i32 1991)
  store i32 268455108, i32* @lr, align 4
  %v3_10004cc0 = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  %v3_10004cc4 = icmp eq i32 %v3_10004cc0, -1
  store i32 %v3_10004cc0, i32* @r31, align 4
  br i1 %v3_10004cc4, label %dec_label_pc_10004ce8, label %dec_label_pc_10004cd0

dec_label_pc_10004cd0:                            ; preds = %dec_label_pc_10004ca4
  %v2_10004cd0 = ptrtoint i32* %stack_var_-8412 to i32
  store i32 268455132, i32* @lr, align 4
  %v3_10004cd8 = call i32 @function_100093a0(i32 %v2_10004cd0, i32 16, i32 16)
  %v0_10004cdc = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004ce8.45 to i32), i32* @lr, align 4
  %v2_10004ce4 = call i32 @function_10009478(i32 %v0_10004cdc, i32 1)
  br label %dec_label_pc_10004ce8

dec_label_pc_10004ce8:                            ; preds = %dec_label_pc_10004ca4, %dec_label_pc_10004cd0
  store i32 268455156, i32* @lr, align 4
  %v1_10004cf0 = call i32 @function_1000a0cc(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268455164, i32* @lr, align 4
  %v0_10004cf8 = call i32 @function_100097d8()
  store i32 %v0_10004cf8, i32* %r11.global-to-local, align 4
  %v0_10004d08 = load i32, i32* @r28, align 4
  %v1_10004d08 = trunc i32 %v0_10004d08 to i8
  %v3_10004d08 = inttoptr i32 %v0_10004cf8 to i8*
  store i8 %v1_10004d08, i8* %v3_10004d08, align 1
  %v2_10004d0c = ptrtoint i32* %stack_var_-4156 to i32
  store i32 %v2_10004d0c, i32* %r24.global-to-local, align 4
  %v0_10004d10 = load i32, i32* @r28, align 4
  store i32 %v0_10004d10, i32* @global_var_1001ba04.46, align 4
  %v0_10004d14 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004d14, i32* @global_var_1001ba08.47, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d1c.48 to i32), i32* @lr, align 4
  %v1_10004d18 = call i32 @function_10007adc(i32 15)
  store i32 268455204, i32* @lr, align 4
  %v1_10004d20 = call i32 @function_10007adc(i32 16)
  %v3_10004d2c = call i32 @function_10007a28(i32 15, i32* null)
  store i32 %v2_10004d0c, i32* @r3, align 4
  %v2_10004d38 = bitcast i32* %stack_var_-4156 to i8*
  %v3_10004d38 = call i32 @function_100080ec(i8* %v2_10004d38, i32 %v3_10004d2c)
  %v0_10004d3c = load i32, i32* %r24.global-to-local, align 4
  %v2_10004d3c = add i32 %v0_10004d3c, %v3_10004d38
  store i32 %v2_10004d3c, i32* %r29.global-to-local, align 4
  store i32 268455236, i32* @lr, align 4
  %v0_10004d40 = call i32 @function_10008914()
  %v2_10004d44 = ptrtoint i32* %stack_var_-8396 to i32
  %v3_10004d4c = trunc i32 %v0_10004d40 to i8
  %v4_10004d4c = call i32 @function_100085a0(i8 %v3_10004d4c, i32 10, i32 %v2_10004d44)
  store i32 %v2_10004d3c, i32* @r3, align 4
  %v2_10004d58 = inttoptr i32 %v2_10004d3c to i8*
  %v3_10004d58 = call i32 @function_100080ec(i8* %v2_10004d58, i32 %v4_10004d4c)
  %v0_10004d60 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004d60 = add i32 %v0_10004d60, %v3_10004d58
  store i32 %v2_10004d60, i32* %r29.global-to-local, align 4
  %v3_10004d68 = call i32 @function_10007a28(i32 16, i32* null)
  store i32 %v2_10004d60, i32* @r3, align 4
  %v2_10004d74 = inttoptr i32 %v2_10004d60 to i8*
  %v3_10004d74 = call i32 @function_100080ec(i8* %v2_10004d74, i32 %v3_10004d68)
  store i32 %v3_10004d74, i32* @r31, align 4
  store i32 268455308, i32* @lr, align 4
  %v2_10004d88 = call i32 @function_100089ec(i32 %v2_10004d0c, i32 0)
  %v3_10004d8c = icmp eq i32 %v2_10004d88, -1
  br i1 %v3_10004d8c, label %dec_label_pc_10004b78, label %dec_label_pc_10004d94

dec_label_pc_10004d94:                            ; preds = %dec_label_pc_10004ce8
  store i32 ptrtoint ([3 x i8]* @global_var_10004d98.49 to i32), i32* @lr, align 4
  %v0_10004d94 = call i32 @function_10008884()
  store i32 ptrtoint ([3 x i8]* @global_var_10004da0.50 to i32), i32* @lr, align 4
  %v1_10004d9c = call i32 @function_10007a50(i32 15)
  store i32 268455336, i32* @lr, align 4
  %v1_10004da4 = call i32 @function_10007a50(i32 16)
  %v3_10004da8 = load i32, i32* @global_var_1001ba08.47, align 4
  store i32 268455352, i32* @lr, align 4
  %v3_10004db4 = call i32 @function_10008b04(i32 %v2_10004d0c, i32 %v3_10004da8, i32 4095)
  %v3_10004db8 = icmp eq i32 %v3_10004db4, -1
  br i1 %v3_10004db8, label %dec_label_pc_10004dc8, label %dec_label_pc_10004dc0

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004d94
  %v3_10004dc0 = load i32, i32* @global_var_1001ba08.47, align 4
  %v0_10004dc4 = load i32, i32* @r28, align 4
  %v3_10004dc4 = trunc i32 %v0_10004dc4 to i8
  %v4_10004dc4 = add i32 %v3_10004dc0, %v3_10004db4
  %v5_10004dc4 = inttoptr i32 %v4_10004dc4 to i8*
  store i8 %v3_10004dc4, i8* %v5_10004dc4, align 1
  br label %dec_label_pc_10004dc8

dec_label_pc_10004dc8:                            ; preds = %dec_label_pc_10004d94, %dec_label_pc_10004dc0
  %v0_10004dc8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004dc8 = load i32, i32* @r31, align 4
  %v2_10004dc8 = add i32 %v1_10004dc8, %v0_10004dc8
  store i32 %v2_10004d0c, i32* @r3, align 4
  %v0_10004dd0 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004dd0 = sub i32 %v2_10004dc8, %v0_10004dd0
  store i32 %v2_10004dd0, i32* @r4, align 4
  %v0_10004dd4 = load i32, i32* @r30, align 4
  store i32 %v0_10004dd4, i32* %r29.global-to-local, align 4
  store i32 268455388, i32* @lr, align 4
  %v0_10004dd8 = call i32 @function_1000816c()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v2_10004de4 = ptrtoint i32* %stack_var_-8316 to i32
  store i32 %v2_10004de4, i32* @r23, align 4
  %v2_10004de8 = ptrtoint i32* %stack_var_-8380 to i32
  store i32 %v2_10004de8, i32* %r21.global-to-local, align 4
  %v2_10004dec = ptrtoint i32* %stack_var_-8252 to i32
  %v2_10004ebc = bitcast i32* %stack_var_-8316 to i8*
  %v2_10004f00 = bitcast i32* %stack_var_-8380 to i8*
  br label %dec_label_pc_10004df0

dec_label_pc_10004df0:                            ; preds = %dec_label_pc_10004e80, %dec_label_pc_10004dc8
  store i32 268455416, i32* @lr, align 4
  %v1_10004df4 = call i32 @function_10007adc(i32 15)
  %v3_10004e00 = call i32 @function_10007a28(i32 15, i32* null)
  store i32 268455432, i32* @lr, align 4
  %v1_10004e04 = call i32 @function_10008dd0(i32 %v3_10004e00)
  store i32 %v1_10004e04, i32* @r27, align 4
  %v3_10004e08 = icmp eq i32 %v1_10004e04, 0
  br i1 %v3_10004e08, label %dec_label_pc_10004b78, label %dec_label_pc_10004e10

dec_label_pc_10004e10:                            ; preds = %dec_label_pc_10004df0
  store i32 268455448, i32* @lr, align 4
  %v1_10004e14 = call i32 @function_10007a50(i32 15)
  %v0_10004e189 = load i32, i32* @r27, align 4
  store i32 268455456, i32* @lr, align 4
  %v1_10004e1c10 = inttoptr i32 %v0_10004e189 to i32*
  %v2_10004e1c11 = call i32 @function_10008ee0(i32* %v1_10004e1c10)
  %v3_10004e2014 = icmp eq i32 %v2_10004e1c11, 0
  br i1 %v3_10004e2014, label %dec_label_pc_10004e80, label %dec_label_pc_10004e28.preheader

dec_label_pc_10004e28.preheader:                  ; preds = %dec_label_pc_10004e10, %dec_label_pc_10004e18.backedge
  %v0_10004e2817 = phi i32 [ %v2_10004e1c, %dec_label_pc_10004e18.backedge ], [ %v2_10004e1c11, %dec_label_pc_10004e10 ]
  br label %dec_label_pc_10004e28

dec_label_pc_10004e28:                            ; preds = %dec_label_pc_10004e28.preheader, %dec_label_pc_10004e6c
  %v0_10004e3c = phi i32 [ %v0_10004e2817, %dec_label_pc_10004e28.preheader ], [ %v2_10004e74, %dec_label_pc_10004e6c ]
  %v1_10004e28 = add i32 %v0_10004e3c, 11
  %v2_10004e28 = inttoptr i32 %v1_10004e28 to i8*
  %v3_10004e28 = load i8, i8* %v2_10004e28, align 1
  %v4_10004e28 = zext i8 %v3_10004e28 to i32
  %v1_10004e2c = add nuw nsw i32 %v4_10004e28, 208
  %v1_10004e30 = urem i32 %v1_10004e2c, 256
  %v2_10004e34 = icmp ugt i32 %v1_10004e30, 9
  br i1 %v2_10004e34, label %dec_label_pc_10004e18.backedge, label %dec_label_pc_10004e3c

dec_label_pc_10004e3c:                            ; preds = %dec_label_pc_10004e28
  store i32 268455500, i32* @lr, align 4
  %v3_10004e48 = call i32 @function_10009e80(i8* %v2_10004e28, i32 %v1_10004e30)
  %v0_10004e4c = load i32, i32* @r28, align 4
  %v2_10004e4c = icmp slt i32 %v0_10004e4c, %v3_10004e48
  store i32 %v3_10004e48, i32* %r30.global-to-local, align 4
  br i1 %v2_10004e4c, label %dec_label_pc_10004e8c, label %dec_label_pc_10004e58

dec_label_pc_10004e58:                            ; preds = %dec_label_pc_10004e3c
  store i32 268455520, i32* @lr, align 4
  %v0_10004e5c = call i32 @function_10008c54()
  %v0_10004e60 = load i32, i32* @r29, align 4
  %v2_10004e60 = sub i32 %v0_10004e5c, %v0_10004e60
  %tmp66 = icmp slt i32 %v2_10004e60, 601
  br i1 %tmp66, label %dec_label_pc_10004fe8, label %dec_label_pc_10004e6c

dec_label_pc_10004e6c:                            ; preds = %dec_label_pc_10004e58
  %v0_10004e6c = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268455544, i32* @lr, align 4
  %v1_10004e74 = inttoptr i32 %v0_10004e6c to i32*
  %v2_10004e74 = call i32 @function_10008ee0(i32* %v1_10004e74)
  %v3_10004e78 = icmp eq i32 %v2_10004e74, 0
  br i1 %v3_10004e78, label %dec_label_pc_10004e80, label %dec_label_pc_10004e28

dec_label_pc_10004e80:                            ; preds = %dec_label_pc_10004e18.backedge, %dec_label_pc_10004e6c, %dec_label_pc_10004e10
  %v0_10004e80 = load i32, i32* @r27, align 4
  store i32 268455560, i32* @lr, align 4
  %v1_10004e84 = inttoptr i32 %v0_10004e80 to i32*
  %v2_10004e84 = call i32 @function_10008d2c(i32* %v1_10004e84)
  br label %dec_label_pc_10004df0

dec_label_pc_10004e8c:                            ; preds = %dec_label_pc_10004e3c
  store i32 268455572, i32* @lr, align 4
  %v0_10004e90 = call i32 @function_10008c54()
  store i32 %v0_10004e90, i32* %r22.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004ea0.52 to i32), i32* @lr, align 4
  %v1_10004e9c = call i32 @function_10007adc(i32 15)
  store i32 268455592, i32* @lr, align 4
  %v1_10004ea4 = call i32 @function_10007adc(i32 16)
  %v3_10004eb0 = call i32 @function_10007a28(i32 15, i32* null)
  store i32 %v2_10004de4, i32* @r3, align 4
  %v3_10004ebc = call i32 @function_100080ec(i8* %v2_10004ebc, i32 %v3_10004eb0)
  %v0_10004ec0 = load i32, i32* @r31, align 4
  %v0_10004ec4 = load i32, i32* @r23, align 4
  %v2_10004ec4 = add i32 %v0_10004ec4, %v3_10004ebc
  store i32 %v2_10004ec4, i32* %r28.global-to-local, align 4
  store i32 %v2_10004ec4, i32* @r3, align 4
  %v2_10004ecc = inttoptr i32 %v2_10004ec4 to i8*
  %v3_10004ecc = call i32 @function_100080ec(i8* %v2_10004ecc, i32 %v0_10004ec0)
  store i32 %v3_10004ecc, i32* %r29.global-to-local, align 4
  %v3_10004edc = call i32 @function_10007a28(i32 16, i32* null)
  %v2_10004ee4 = add i32 %v3_10004ecc, %v2_10004ec4
  store i32 %v2_10004ee4, i32* @r3, align 4
  %v2_10004ee8 = inttoptr i32 %v2_10004ee4 to i8*
  %v3_10004ee8 = call i32 @function_100080ec(i8* %v2_10004ee8, i32 %v3_10004edc)
  %v3_10004ef4 = call i32 @function_10007a28(i32 15, i32* null)
  store i32 %v2_10004de8, i32* @r3, align 4
  %v3_10004f00 = call i32 @function_100080ec(i8* %v2_10004f00, i32 %v3_10004ef4)
  %v0_10004f04 = load i32, i32* @r31, align 4
  %v0_10004f08 = load i32, i32* %r21.global-to-local, align 4
  %v2_10004f08 = add i32 %v0_10004f08, %v3_10004f00
  store i32 %v2_10004f08, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f08, i32* @r3, align 4
  %v2_10004f10 = inttoptr i32 %v2_10004f08 to i8*
  %v3_10004f10 = call i32 @function_100080ec(i8* %v2_10004f10, i32 %v0_10004f04)
  store i32 %v3_10004f10, i32* %r29.global-to-local, align 4
  %v3_10004f20 = call i32 @function_10007a28(i32 32, i32* null)
  %v2_10004f28 = add i32 %v3_10004f10, %v2_10004f08
  store i32 %v2_10004f28, i32* @r3, align 4
  %v2_10004f2c = inttoptr i32 %v2_10004f28 to i8*
  %v3_10004f2c = call i32 @function_100080ec(i8* %v2_10004f2c, i32 %v3_10004f20)
  store i32 ptrtoint ([3 x i8]* @global_var_10004f38.54 to i32), i32* @lr, align 4
  %v1_10004f34 = call i32 @function_10007a50(i32 15)
  store i32 268455744, i32* @lr, align 4
  %v1_10004f3c = call i32 @function_10007a50(i32 16)
  store i32 4095, i32* @r5, align 4
  store i32 268455760, i32* @lr, align 4
  %v3_10004f4c = call i32 @function_10008b04(i32 %v2_10004de4, i32 %v2_10004d0c, i32 4095)
  %v3_10004f50 = icmp eq i32 %v3_10004f4c, -1
  store i32 %v3_10004f4c, i32* %r29.global-to-local, align 4
  br i1 %v3_10004f50, label %dec_label_pc_1000503c, label %dec_label_pc_10004f5c

dec_label_pc_10004f5c:                            ; preds = %dec_label_pc_10004e8c
  %v0_10004f5c = load i32, i32* @r1, align 4
  %v2_10004f5c = add i32 %v0_10004f5c, %v3_10004f4c
  %v3_10004f64 = add i32 %v2_10004f5c, 4276
  %v4_10004f64 = inttoptr i32 %v3_10004f64 to i8*
  store i8 0, i8* %v4_10004f64, align 1
  store i32 268455792, i32* @lr, align 4
  %v1_10004f6c = call i32 @function_10007adc(i32 33)
  %v3_10004f78 = call i32 @function_10007a28(i32 33, i32* null)
  %v0_10004f7c = load i32, i32* %r29.global-to-local, align 4
  %v1_10004f7c = add i32 %v0_10004f7c, -1
  %v4_10004f88 = call i32 @function_10008474(i8* %v2_10004d38, i32 %v1_10004f7c, i32 %v3_10004f78)
  %v3_10004f8c = icmp eq i32 %v4_10004f88, -1
  br i1 %v3_10004f8c, label %dec_label_pc_10004fa8, label %dec_label_pc_10004f94

dec_label_pc_10004f94:                            ; preds = %dec_label_pc_10004f5c
  store i32 268455836, i32* @lr, align 4
  %v1_10004f98 = call i32 @function_10008c9c(i32 %v2_10004d0c)
  %v0_10004f9c = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004fa8.55 to i32), i32* @lr, align 4
  %v2_10004fa4 = call i32 @function_100089a4(i32 %v0_10004f9c, i32 9)
  br label %dec_label_pc_10004fa8

dec_label_pc_10004fa8:                            ; preds = %dec_label_pc_10004f5c, %dec_label_pc_10004f94
  store i32 ptrtoint (i32* @global_var_10004fb0.56 to i32), i32* @lr, align 4
  %v1_10004fac = call i32 @function_10007a50(i32 33)
  store i32 268455860, i32* @lr, align 4
  %v0_10004fb0 = call i32 @function_10008914()
  %v0_10004fb4 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004fb4 = icmp eq i32 %v0_10004fb4, %v0_10004fb0
  br i1 %v4_10004fb4, label %dec_label_pc_10004fdc, label %dec_label_pc_10004fbc

dec_label_pc_10004fbc:                            ; preds = %dec_label_pc_10004fa8
  store i32 268455872, i32* @lr, align 4
  %v0_10004fbc = call i32 @function_1000895c()
  %v0_10004fc0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004fc0 = icmp eq i32 %v0_10004fc0, %v0_10004fbc
  br i1 %v4_10004fc0, label %dec_label_pc_10004fdc, label %dec_label_pc_10004fc8

dec_label_pc_10004fc8:                            ; preds = %dec_label_pc_10004fbc
  %v3_10004fc8 = load i32, i32* @global_var_1001ba08.47, align 4
  %v3_10004fd0 = call i32 @function_10008520(i8* %v2_10004d38, i32 %v3_10004fc8)
  %v3_10004fd4 = icmp eq i32 %v3_10004fd0, 0
  br i1 %v3_10004fd4, label %dec_label_pc_10005018, label %dec_label_pc_10004fc8.dec_label_pc_10004fdc_crit_edge

dec_label_pc_10004fc8.dec_label_pc_10004fdc_crit_edge: ; preds = %dec_label_pc_10004fc8
  %v0_10004fdc.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004fdc

dec_label_pc_10004fdc:                            ; preds = %dec_label_pc_10004fc8.dec_label_pc_10004fdc_crit_edge, %dec_label_pc_10004fbc, %dec_label_pc_10004fa8
  %v0_10004fdc = phi i32 [ %v0_10004fdc.pre, %dec_label_pc_10004fc8.dec_label_pc_10004fdc_crit_edge ], [ %v0_10004fbc, %dec_label_pc_10004fbc ], [ %v0_10004fb0, %dec_label_pc_10004fa8 ]
  store i32 %v0_10004fdc, i32* %r28.global-to-local, align 4
  %v0_10004fe0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10004fe0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e18.backedge

dec_label_pc_10004e18.backedge:                   ; preds = %dec_label_pc_10004e28, %dec_label_pc_10004fdc, %dec_label_pc_1000500c, %dec_label_pc_100051b4, %dec_label_pc_10004fe8, %dec_label_pc_10004ff0
  %v0_10004e18 = load i32, i32* @r27, align 4
  store i32 268455456, i32* @lr, align 4
  %v1_10004e1c = inttoptr i32 %v0_10004e18 to i32*
  %v2_10004e1c = call i32 @function_10008ee0(i32* %v1_10004e1c)
  %v3_10004e20 = icmp eq i32 %v2_10004e1c, 0
  br i1 %v3_10004e20, label %dec_label_pc_10004e80, label %dec_label_pc_10004e28.preheader

dec_label_pc_10004fe8:                            ; preds = %dec_label_pc_10004e58
  %v0_10004fe8 = load i32, i32* %r30.global-to-local, align 4
  %tmp67 = icmp slt i32 %v0_10004fe8, 401
  br i1 %tmp67, label %dec_label_pc_10004e18.backedge, label %dec_label_pc_10004ff0

dec_label_pc_10004ff0:                            ; preds = %dec_label_pc_10004fe8
  %v0_10004ff8 = load i32, i32* @r25, align 4
  %v1_10004ffc = urem i32 %v0_10004ff8, 10
  %v4_10005004 = icmp eq i32 %v1_10004ffc, 0
  br i1 %v4_10005004, label %dec_label_pc_1000500c, label %dec_label_pc_10004e18.backedge

dec_label_pc_1000500c:                            ; preds = %dec_label_pc_10004ff0
  store i32 268455956, i32* @lr, align 4
  %v1_10005010 = call i32 @function_1000a0cc(i32 1)
  br label %dec_label_pc_10004e18.backedge

dec_label_pc_10005018:                            ; preds = %dec_label_pc_10004fc8
  store i32 268455976, i32* @lr, align 4
  %v2_10005024 = call i32 @function_100089ec(i32 %v2_10004d0c, i32 0)
  %v3_10005028 = icmp eq i32 %v2_10005024, -1
  store i32 %v2_10005024, i32* @r31, align 4
  br i1 %v3_10005028, label %dec_label_pc_1000521c, label %dec_label_pc_10005034

dec_label_pc_10005034:                            ; preds = %dec_label_pc_10005018, %dec_label_pc_1000521c
  store i32 268455996, i32* @lr, align 4
  %v0_10005038 = call i32 @function_10008884()
  br label %dec_label_pc_1000503c

dec_label_pc_1000503c:                            ; preds = %dec_label_pc_10004e8c, %dec_label_pc_10005034
  store i32 268456012, i32* @lr, align 4
  %v2_10005048 = call i32 @function_100089ec(i32 %v2_10004de4, i32 0)
  %v3_1000504c = icmp eq i32 %v2_10005048, -1
  store i32 %v2_10005048, i32* %r26.global-to-local, align 4
  br i1 %v3_1000504c, label %dec_label_pc_100051b4, label %dec_label_pc_10005058

dec_label_pc_10005058:                            ; preds = %dec_label_pc_1000503c
  store i32 ptrtoint ([3 x i8]* @global_var_10005060.57 to i32), i32* @lr, align 4
  %v1_1000505c = call i32 @function_10007adc(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_10005068.58 to i32), i32* @lr, align 4
  %v1_10005064 = call i32 @function_10007adc(i32 21)
  store i32 268456048, i32* @lr, align 4
  %v1_1000506c = call i32 @function_10007adc(i32 22)
  %v3_10005078 = call i32 @function_10007a28(i32 20, i32* nonnull %stack_var_-8424)
  store i32 %v3_10005078, i32* @r31, align 4
  %v3_10005088 = call i32 @function_10007a28(i32 21, i32* nonnull %stack_var_-8420)
  store i32 %v3_10005088, i32* %r29.global-to-local, align 4
  %v3_10005098 = call i32 @function_10007a28(i32 22, i32* nonnull %stack_var_-8416)
  store i32 %v3_10005098, i32* %r28.global-to-local, align 4
  %v0_100050a072 = load i32, i32* %r26.global-to-local, align 4
  store i32 268456112, i32* @lr, align 4
  %v3_100050ac73 = call i32 @function_10008abc(i32 %v0_100050a072, i32 %v2_10004dec, i32 4096)
  %tmp6875 = icmp slt i32 %v3_100050ac73, 1
  br i1 %tmp6875, label %dec_label_pc_100051f8, label %dec_label_pc_100050b8

dec_label_pc_100050b8:                            ; preds = %dec_label_pc_10005058, %dec_label_pc_100050a0.backedge
  %v3_100050ac76 = phi i32 [ %v3_100050ac, %dec_label_pc_100050a0.backedge ], [ %v3_100050ac73, %dec_label_pc_10005058 ]
  %v3_100050b077.in = phi i32 [ %v3_100050ac, %dec_label_pc_100050a0.backedge ], [ %v3_100050ac73, %dec_label_pc_10005058 ]
  %v3_100050b077 = icmp eq i32 %v3_100050b077.in, 0
  %v3_100050b8 = load i32, i32* %stack_var_-8424, align 4
  %v2_100050bc = icmp slt i32 %v3_100050ac76, %v3_100050b8
  br i1 %v2_100050bc, label %dec_label_pc_100050fc, label %dec_label_pc_100050c4

dec_label_pc_100050c4:                            ; preds = %dec_label_pc_100050b8
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100050d8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100050d8

dec_label_pc_100050d8:                            ; preds = %dec_label_pc_100050c4, %dec_label_pc_100050f4
  %v0_100050f8 = phi i32 [ %v3_100050ac76, %dec_label_pc_100050c4 ], [ %v1_100050f8, %dec_label_pc_100050f4 ]
  %v0_100050f4 = phi i32 [ %v2_10004dec, %dec_label_pc_100050c4 ], [ %v1_100050f4, %dec_label_pc_100050f4 ]
  %v1_100050d8 = phi i32 [ 0, %dec_label_pc_100050c4 ], [ %v1_100050d821, %dec_label_pc_100050f4 ]
  %v2_100050d8 = add i32 %v1_100050d8, %v0_100050d8.pre
  %v3_100050d8 = inttoptr i32 %v2_100050d8 to i8*
  %v4_100050d8 = load i8, i8* %v3_100050d8, align 1
  %v1_100050dc = add i32 %v1_100050d8, 1
  store i32 %v1_100050dc, i32* %r11.global-to-local, align 4
  %v1_100050e0 = inttoptr i32 %v0_100050f4 to i8*
  %v2_100050e0 = load i8, i8* %v1_100050e0, align 1
  %v4_100050e8 = icmp eq i8 %v2_100050e0, %v4_100050d8
  br i1 %v4_100050e8, label %dec_label_pc_10005184, label %dec_label_pc_100050f0

dec_label_pc_100050f0:                            ; preds = %dec_label_pc_100050d8
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100050f4

dec_label_pc_100050f4:                            ; preds = %dec_label_pc_10005184, %dec_label_pc_100050f0
  %v1_100050d821 = phi i32 [ %v1_100050dc, %dec_label_pc_10005184 ], [ 0, %dec_label_pc_100050f0 ]
  %v1_100050f4 = add i32 %v0_100050f4, 1
  %v1_100050f8 = add i32 %v0_100050f8, -1
  %v2_100050f8 = icmp eq i32 %v1_100050f8, 0
  br i1 %v2_100050f8, label %dec_label_pc_100050fc, label %dec_label_pc_100050d8

dec_label_pc_100050fc:                            ; preds = %dec_label_pc_100050f4, %dec_label_pc_100050b8
  %v3_100050fc = load i32, i32* %stack_var_-8420, align 4
  %v2_10005100 = icmp slt i32 %v3_100050ac76, %v3_100050fc
  br i1 %v2_10005100, label %dec_label_pc_10005140, label %dec_label_pc_10005108

dec_label_pc_10005108:                            ; preds = %dec_label_pc_100050fc
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100050b077, label %dec_label_pc_10005140, label %dec_label_pc_1000511c.preheader

dec_label_pc_1000511c.preheader:                  ; preds = %dec_label_pc_10005108
  %v0_1000511c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000511c

dec_label_pc_1000511c:                            ; preds = %dec_label_pc_1000511c.preheader, %dec_label_pc_1000513c
  %v0_1000513c = phi i32 [ %v3_100050ac76, %dec_label_pc_1000511c.preheader ], [ %v1_1000513c, %dec_label_pc_1000513c ]
  %storemerge.in = phi i32 [ %v2_10004dec, %dec_label_pc_1000511c.preheader ], [ %storemerge, %dec_label_pc_1000513c ]
  %v1_1000511c = phi i32 [ 0, %dec_label_pc_1000511c.preheader ], [ %v1_1000511c27, %dec_label_pc_1000513c ]
  %v2_1000511c = add i32 %v1_1000511c, %v0_1000511c.pre
  %v3_1000511c = inttoptr i32 %v2_1000511c to i8*
  %v4_1000511c = load i8, i8* %v3_1000511c, align 1
  %v1_10005120 = add i32 %v1_1000511c, 1
  store i32 %v1_10005120, i32* %r11.global-to-local, align 4
  %v1_10005124 = inttoptr i32 %storemerge.in to i8*
  %v2_10005124 = load i8, i8* %v1_10005124, align 1
  %v4_1000512c = icmp eq i8 %v2_10005124, %v4_1000511c
  br i1 %v4_1000512c, label %dec_label_pc_100051e0, label %dec_label_pc_10005134

dec_label_pc_10005134:                            ; preds = %dec_label_pc_1000511c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000513c

dec_label_pc_1000513c:                            ; preds = %dec_label_pc_100051e0, %dec_label_pc_10005134
  %v1_1000511c27 = phi i32 [ %v1_10005120, %dec_label_pc_100051e0 ], [ 0, %dec_label_pc_10005134 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_1000513c = add i32 %v0_1000513c, -1
  %v2_1000513c = icmp eq i32 %v1_1000513c, 0
  br i1 %v2_1000513c, label %dec_label_pc_10005140, label %dec_label_pc_1000511c

dec_label_pc_10005140:                            ; preds = %dec_label_pc_1000513c, %dec_label_pc_10005108, %dec_label_pc_100050fc
  %v3_10005140 = load i32, i32* %stack_var_-8416, align 4
  %v2_10005144 = icmp slt i32 %v3_100050ac76, %v3_10005140
  br i1 %v2_10005144, label %dec_label_pc_100050a0.backedge, label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_10005140
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100050b077, label %dec_label_pc_100050a0.backedge, label %dec_label_pc_10005160.lr.ph

dec_label_pc_100050a0.backedge:                   ; preds = %dec_label_pc_1000515c.backedge, %dec_label_pc_1000514c, %dec_label_pc_10005140
  %v0_100050a0 = load i32, i32* %r26.global-to-local, align 4
  store i32 268456112, i32* @lr, align 4
  %v3_100050ac = call i32 @function_10008abc(i32 %v0_100050a0, i32 %v2_10004dec, i32 4096)
  %tmp68 = icmp slt i32 %v3_100050ac, 1
  br i1 %tmp68, label %dec_label_pc_100051f8, label %dec_label_pc_100050b8

dec_label_pc_10005160.lr.ph:                      ; preds = %dec_label_pc_1000514c
  %v0_10005160.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10005160

dec_label_pc_10005160:                            ; preds = %dec_label_pc_10005160.lr.ph, %dec_label_pc_1000515c.backedge
  %v0_1000515c = phi i32 [ %v3_100050ac76, %dec_label_pc_10005160.lr.ph ], [ %v1_1000515c, %dec_label_pc_1000515c.backedge ]
  %storemerge15.in = phi i32 [ %v2_10004dec, %dec_label_pc_10005160.lr.ph ], [ %storemerge15, %dec_label_pc_1000515c.backedge ]
  %v1_10005160 = phi i32 [ 0, %dec_label_pc_10005160.lr.ph ], [ %v1_1000516033, %dec_label_pc_1000515c.backedge ]
  %v2_10005160 = add i32 %v1_10005160, %v0_10005160.pre
  %v3_10005160 = inttoptr i32 %v2_10005160 to i8*
  %v4_10005160 = load i8, i8* %v3_10005160, align 1
  %v1_10005164 = add i32 %v1_10005160, 1
  store i32 %v1_10005164, i32* %r11.global-to-local, align 4
  %v1_10005168 = inttoptr i32 %storemerge15.in to i8*
  %v2_10005168 = load i8, i8* %v1_10005168, align 1
  %v4_10005170 = icmp eq i8 %v2_10005168, %v4_10005160
  br i1 %v4_10005170, label %dec_label_pc_100051ec, label %dec_label_pc_10005178

dec_label_pc_10005178:                            ; preds = %dec_label_pc_10005160
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000515c.backedge

dec_label_pc_1000515c.backedge:                   ; preds = %dec_label_pc_100051ec, %dec_label_pc_10005178
  %v1_1000516033 = phi i32 [ 0, %dec_label_pc_10005178 ], [ %v1_10005164, %dec_label_pc_100051ec ]
  %storemerge15 = add i32 %storemerge15.in, 1
  %v1_1000515c = add i32 %v0_1000515c, -1
  %v2_1000515c = icmp eq i32 %v1_1000515c, 0
  br i1 %v2_1000515c, label %dec_label_pc_100050a0.backedge, label %dec_label_pc_10005160

dec_label_pc_10005184:                            ; preds = %dec_label_pc_100050d8
  %v4_100050e4 = icmp eq i32 %v3_100050b8, %v1_100050dc
  br i1 %v4_100050e4, label %dec_label_pc_10005188, label %dec_label_pc_100050f4

dec_label_pc_10005188:                            ; preds = %dec_label_pc_10005184, %dec_label_pc_100051e0, %dec_label_pc_100051ec
  store i32 ptrtoint ([3 x i8]* @global_var_10005190.59 to i32), i32* @lr, align 4
  %v1_1000518c = call i32 @function_10007a50(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_10005198.60 to i32), i32* @lr, align 4
  %v1_10005194 = call i32 @function_10007a50(i32 21)
  store i32 268456352, i32* @lr, align 4
  %v1_1000519c = call i32 @function_10007a50(i32 22)
  store i32 268456360, i32* @lr, align 4
  %v0_100051a4 = call i32 @function_10008884()
  %v0_100051a8 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456372, i32* @lr, align 4
  %v2_100051b0 = call i32 @function_100089a4(i32 %v0_100051a8, i32 9)
  br label %dec_label_pc_100051b4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_1000503c, %dec_label_pc_100051f8, %dec_label_pc_10005188
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004de4, i32* @r3, align 4
  store i32 268456384, i32* @lr, align 4
  %v0_100051bc = call i32 @function_1000816c()
  store i32 %v2_10004de8, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_100051c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100051c8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100051d0.61 to i32), i32* @lr, align 4
  %v0_100051cc = call i32 @function_1000816c()
  store i32 268456408, i32* @lr, align 4
  %v1_100051d4 = call i32 @function_1000a0cc(i32 1)
  %v0_100051d8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100051d8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e18.backedge

dec_label_pc_100051e0:                            ; preds = %dec_label_pc_1000511c
  %v4_10005128 = icmp eq i32 %v3_100050fc, %v1_10005120
  br i1 %v4_10005128, label %dec_label_pc_10005188, label %dec_label_pc_1000513c

dec_label_pc_100051ec:                            ; preds = %dec_label_pc_10005160
  %v4_1000516c = icmp eq i32 %v3_10005140, %v1_10005164
  br i1 %v4_1000516c, label %dec_label_pc_10005188, label %dec_label_pc_1000515c.backedge

dec_label_pc_100051f8:                            ; preds = %dec_label_pc_100050a0.backedge, %dec_label_pc_10005058
  store i32 ptrtoint ([3 x i8]* @global_var_10005200.62 to i32), i32* @lr, align 4
  %v1_100051fc = call i32 @function_10007a50(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_10005208.63 to i32), i32* @lr, align 4
  %v1_10005204 = call i32 @function_10007a50(i32 21)
  store i32 268456464, i32* @lr, align 4
  %v1_1000520c = call i32 @function_10007a50(i32 22)
  store i32 268456472, i32* @lr, align 4
  %v0_10005214 = call i32 @function_10008884()
  br label %dec_label_pc_100051b4

dec_label_pc_1000521c:                            ; preds = %dec_label_pc_10005018
  %v0_1000521c = load i32, i32* %r30.global-to-local, align 4
  store i32 268456488, i32* @lr, align 4
  %v2_10005224 = call i32 @function_100089a4(i32 %v0_1000521c, i32 9)
  br label %dec_label_pc_10005034

; uselistorder directives
  uselistorder i32 %v1_1000515c, { 1, 0 }
  uselistorder i32 %v1_10005164, { 1, 0, 2 }
  uselistorder i32 %v1_10005160, { 1, 0 }
  uselistorder i32 %v3_100050ac, { 2, 1, 0 }
  uselistorder i32 %v1_1000513c, { 1, 0 }
  uselistorder i32 %v1_1000511c, { 1, 0 }
  uselistorder i32 %v1_100050f8, { 1, 0 }
  uselistorder i32 %v1_100050d8, { 1, 0 }
  uselistorder i32 %v3_100050ac76, { 5, 0, 4, 2, 3, 1 }
  uselistorder i32 %v2_10004e1c, { 1, 0 }
  uselistorder i32 %v2_10004e74, { 1, 0 }
  uselistorder i32 %v1_10004e30, { 1, 0 }
  uselistorder i32 %v2_10004dec, { 1, 4, 2, 3, 0 }
  uselistorder i32 %v2_10004d60, { 1, 0, 2 }
  uselistorder i32 %v2_10004d3c, { 1, 0, 2 }
  uselistorder i32 %v2_10004d0c, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b64, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8412, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-8424, { 1, 0 }
  uselistorder i32* %stack_var_-8420, { 1, 0 }
  uselistorder i32* %stack_var_-8416, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 9, 10 }
  uselistorder i32 268456112, { 1, 0 }
  uselistorder i32 (i32*)* @function_10008ee0, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455456, { 1, 0 }
  uselistorder i32 (i32)* @function_10008dd0, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008b04, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100051b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005188, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005160, { 1, 0 }
  uselistorder label %dec_label_pc_1000511c, { 1, 0 }
  uselistorder label %dec_label_pc_100050d8, { 1, 0 }
  uselistorder label %dec_label_pc_100050b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000503c, { 1, 0 }
  uselistorder label %dec_label_pc_10005034, { 1, 0 }
  uselistorder label %dec_label_pc_10004e18.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_10004fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10004e28, { 1, 0 }
  uselistorder label %dec_label_pc_10004e28.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10004ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10004ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10004c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10004c18, { 1, 0 }
}

define i32 @function_1000522c() local_unnamed_addr {
dec_label_pc_1000522c:
  store i32 268457000, i32* @global_var_1001b9e0.64, align 4
  %v0_1000523c = load i32, i32* @r3, align 4
  ret i32 %v0_1000523c
}

define i32 @function_10005240(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005240:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10005260 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_10005270 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_1000527c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1000527c, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268456584, i32* @lr, align 4
  %v3_10005284 = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  %v3_10005288 = icmp eq i32 %v3_10005284, -1
  store i32 %v3_10005284, i32* @global_var_1001b9d8.65, align 4
  br i1 %v3_10005288, label %dec_label_pc_10005338, label %dec_label_pc_100052a4

dec_label_pc_100052a4:                            ; preds = %dec_label_pc_10005240
  %v2_1000528c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268456616, i32* @lr, align 4
  %v5_100052a4 = call i32 @function_10009598(i32 %v3_10005284, i32 1, i32 2, i32 %v2_1000528c)
  %v3_100052a8 = load i32, i32* @global_var_1001b9d8.65, align 4
  store i32 3, i32* @r4, align 4
  store i32 268456640, i32* @lr, align 4
  %v2_100052bc = call i32 @function_1000879c(i32 %v3_100052a8)
  store i32 4, i32* @r4, align 4
  store i32 268456660, i32* @lr, align 4
  %v2_100052d0 = call i32 @function_1000879c(i32 %v3_100052a8)
  %v3_100052d4 = load i8, i8* @global_var_1001b898.66, align 1
  %v3_100052dc = icmp eq i8 %v3_100052d4, 0
  br i1 %v3_100052dc, label %dec_label_pc_1000535c, label %dec_label_pc_100052e8

dec_label_pc_100052e8:                            ; preds = %dec_label_pc_100052a4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100052fc = call i32 @function_10008fa0()
  %v0_10005300 = load i32, i32* @r27, align 4
  %v2_10005300 = inttoptr i32 %v0_100052fc to i32*
  store i32 %v0_10005300, i32* %v2_10005300, align 4
  store i32 %v0_100052fc, i32* @r29, align 4
  %v3_10005310 = load i32, i32* @global_var_1001b9d8.65, align 4
  store i32 268456728, i32* @lr, align 4
  %v3_10005314 = call i32 @function_100093a0(i32 %v3_10005310, i32 %v2_1000527c, i32 16)
  %v3_1000531c = icmp eq i32 %v3_10005314, -1
  br i1 %v3_1000531c, label %dec_label_pc_100053a4, label %dec_label_pc_10005328

dec_label_pc_10005328:                            ; preds = %dec_label_pc_1000535c, %dec_label_pc_100052e8
  %v3_10005330 = load i32, i32* @global_var_1001b9d8.65, align 4
  store i32 268456760, i32* @lr, align 4
  %v2_10005334 = call i32 @function_10009478(i32 %v3_10005330, i32 1)
  br label %dec_label_pc_10005338

dec_label_pc_10005338:                            ; preds = %dec_label_pc_10005240, %dec_label_pc_10005328
  %v0_10005358 = phi i32 [ -1, %dec_label_pc_10005240 ], [ %v2_10005334, %dec_label_pc_10005328 ]
  store i32 %v0_10005260, i32* @r28, align 4
  store i32 %v0_10005270, i32* @r31, align 4
  ret i32 %v0_10005358

dec_label_pc_1000535c:                            ; preds = %dec_label_pc_100052a4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10005378 = call i32 @function_10008fa0()
  %v0_1000537c = load i32, i32* @r27, align 4
  %v2_1000537c = inttoptr i32 %v0_10005378 to i32*
  store i32 %v0_1000537c, i32* %v2_1000537c, align 4
  store i32 %v0_10005378, i32* @r29, align 4
  %v3_1000538c = load i32, i32* @global_var_1001b9d8.65, align 4
  store i32 268456852, i32* @lr, align 4
  %v3_10005390 = call i32 @function_100093a0(i32 %v3_1000538c, i32 %v2_1000527c, i32 16)
  %v3_10005398 = icmp eq i32 %v3_10005390, -1
  br i1 %v3_10005398, label %dec_label_pc_100053a4, label %dec_label_pc_10005328

dec_label_pc_100053a4:                            ; preds = %dec_label_pc_1000535c, %dec_label_pc_100052e8
  %v0_100053a4 = load i32, i32* @r29, align 4
  %v1_100053a4 = inttoptr i32 %v0_100053a4 to i32*
  %v2_100053a4 = load i32, i32* %v1_100053a4, align 4
  %v3_100053a8 = load i32, i32* @global_var_1001b9d8.65, align 4
  store i32 %v3_100053a8, i32* @r3, align 4
  %v3_100053ac = icmp eq i32 %v2_100053a4, 99
  br i1 %v3_100053ac, label %dec_label_pc_10005410, label %dec_label_pc_100053b4

dec_label_pc_100053b4:                            ; preds = %dec_label_pc_10005410, %dec_label_pc_100053a4, %dec_label_pc_1000541c
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100053d0.67 to i32), i32* @lr, align 4
  %v0_100053cc = call i32 @function_100093d4()
  store i32 268456920, i32* @lr, align 4
  %v1_100053d4 = call i32 @function_1000a0cc(i32 5)
  store i32 268456928, i32* @lr, align 4
  %v0_100053dc = call i32 @function_10008884()
  store i32 268456936, i32* @lr, align 4
  %v1_100053e4 = call i32 @function_10004514(i32 6612)
  store i32 268456940, i32* @lr, align 4
  %v1_100053e8 = call i32 @function_10005240(i32 %v1_100053e4)
  store i32 %v0_10005260, i32* @r28, align 4
  store i32 %v0_10005270, i32* @r31, align 4
  ret i32 %v1_100053e8

dec_label_pc_10005410:                            ; preds = %dec_label_pc_100053a4
  %v3_10005410 = load i8, i8* @global_var_1001b898.66, align 1
  %v3_10005414 = icmp eq i8 %v3_10005410, 0
  br i1 %v3_10005414, label %dec_label_pc_100053b4, label %dec_label_pc_1000541c

dec_label_pc_1000541c:                            ; preds = %dec_label_pc_10005410
  %v0_10005420 = load i32, i32* @r27, align 4
  %v1_10005420 = trunc i32 %v0_10005420 to i8
  store i8 %v1_10005420, i8* @global_var_1001b898.66, align 1
  br label %dec_label_pc_100053b4

; uselistorder directives
  uselistorder i32 %v2_1000527c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_10004514, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009478, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100093a0, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b898.66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100053b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005338, { 1, 0 }
}

define i32 @function_10005428() local_unnamed_addr {
dec_label_pc_10005428:
  store i32 268457028, i32* @lr, align 4
  %v1_10005440 = call i32 @function_10007adc(i32 1)
  store i32 268457044, i32* @lr, align 4
  %v2_10005450 = call i32 @function_10009338(i32 ptrtoint ([15 x i8]* @global_var_1000b2b8.69 to i32))
  store i32 %v2_10005450, i32* @global_var_1001badc.70, align 4
  %v3_10005460 = call i32 @function_10007a28(i32 1, i32* null)
  %v4_10005460 = inttoptr i32 %v3_10005460 to i16*
  %v3_10005464 = load i16, i16* %v4_10005460, align 2
  store i16 %v3_10005464, i16* bitcast (i32* @global_var_1001bada.71 to i16*), align 4
  store i32 268457076, i32* @lr, align 4
  %v1_10005470 = call i32 @function_10007a50(i32 1)
  ret i32 %v1_10005470

; uselistorder directives
  uselistorder i32 (i32)* @function_10009338, { 2, 1, 0 }
}

define i32 @function_10005488(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005488:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10005488 = load i32, i32* @lr, align 4
  store i32 %v0_10005488, i32* %r0.global-to-local, align 4
  %v0_10005490 = load i32, i32* @r31, align 4
  store i32 268457116, i32* @lr, align 4
  %v0_10005498 = call i32 @function_100088cc()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005498, i32* @global_var_1001ba10.72, align 4
  %tmp47 = icmp slt i32 %v0_10005498, 1
  br i1 %tmp47, label %dec_label_pc_100054c0, label %dec_label_pc_100054ac

dec_label_pc_100054ac:                            ; preds = %dec_label_pc_100054c0, %dec_label_pc_10005488
  store i32 %v0_10005488, i32* %r0.global-to-local, align 4
  store i32 %v0_10005490, i32* @r31, align 4
  ret i32 %v0_10005498

dec_label_pc_100054c0:                            ; preds = %dec_label_pc_10005488
  %v3_100054c0 = icmp eq i32 %v0_10005498, -1
  br i1 %v3_100054c0, label %dec_label_pc_100054ac, label %dec_label_pc_100054c8

dec_label_pc_100054c8:                            ; preds = %dec_label_pc_100054c0
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100054d8.73 to i32), i32* @lr, align 4
  %v1_100054d4 = call i32 @function_10007adc(i32 26)
  store i32 268457184, i32* @lr, align 4
  %v1_100054dc = call i32 @function_10007adc(i32 27)
  %v3_100054e8 = call i32 @function_10007a28(i32 26, i32* null)
  store i32 268457208, i32* @lr, align 4
  %v2_100054f4 = call i32 @function_100089ec(i32 %v3_100054e8, i32 2)
  %v3_100054f8 = icmp eq i32 %v2_100054f4, -1
  store i32 %v2_100054f4, i32* @r31, align 4
  br i1 %v3_100054f8, label %dec_label_pc_10005540, label %dec_label_pc_10005504

dec_label_pc_10005504:                            ; preds = %dec_label_pc_10005540, %dec_label_pc_100054c8
  %v0_10005508 = phi i32 [ %v2_10005554, %dec_label_pc_10005540 ], [ %v2_100054f4, %dec_label_pc_100054c8 ]
  %v2_10005510 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268457244, i32* @lr, align 4
  %v3_10005518 = call i32 @function_100086b4(i32 %v0_10005508, i32 -2147199228, i32 %v2_10005510)
  br label %dec_label_pc_1000551c

dec_label_pc_1000551c:                            ; preds = %dec_label_pc_1000551c, %dec_label_pc_10005504
  %v0_10005520 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005534.74 to i32), i32* @lr, align 4
  %v3_10005530 = call i32 @function_100086b4(i32 %v0_10005520, i32 -2147199227, i32 0)
  store i32 268457276, i32* @lr, align 4
  %v1_10005538 = call i32 @function_1000a0cc(i32 10)
  br label %dec_label_pc_1000551c

dec_label_pc_10005540:                            ; preds = %dec_label_pc_100054c8
  %v3_10005548 = call i32 @function_10007a28(i32 27, i32* null)
  store i32 268457304, i32* @lr, align 4
  %v2_10005554 = call i32 @function_100089ec(i32 %v3_10005548, i32 2)
  %v3_10005558 = icmp eq i32 %v2_10005554, -1
  store i32 %v2_10005554, i32* @r31, align 4
  br i1 %v3_10005558, label %dec_label_pc_10005564, label %dec_label_pc_10005504

dec_label_pc_10005564:                            ; preds = %dec_label_pc_10005540
  store i32 ptrtoint ([3 x i8]* @global_var_1000556c.75 to i32), i32* @lr, align 4
  %v1_10005568 = call i32 @function_10007a50(i32 26)
  store i32 ptrtoint ([3 x i8]* @global_var_10005574.76 to i32), i32* @lr, align 4
  %v1_10005570 = call i32 @function_10007a50(i32 27)
  %v0_10005578 = call i32 @function_1000a048()
  %v0_10005580 = load i32, i32* @lr, align 4
  %v0_10005584 = load i32, i32* @r29, align 4
  %v2_10005588 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_10005588, i32* @r29, align 4
  %v0_1000558c = load i32, i32* @r28, align 4
  store i32 %v0_10005578, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  %v0_100055ac = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_100055b4 = load i32, i32* @r24, align 4
  %v2_100055b8 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_100055b8, i32* @r24, align 4
  %v0_100055bc = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_100055c4 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_100055cc = load i32, i32* %r15.global-to-local, align 4
  %v0_100055d0 = load i32, i32* %r16.global-to-local, align 4
  %v0_100055d4 = load i32, i32* %r17.global-to-local, align 4
  %v0_100055d8 = load i32, i32* %r18.global-to-local, align 4
  %v0_100055dc = load i32, i32* %r19.global-to-local, align 4
  %v0_100055e0 = load i32, i32* %r20.global-to-local, align 4
  %v0_100055e4 = load i32, i32* @r23, align 4
  %v0_100055ec = load i32, i32* @r27, align 4
  %v0_100055f0 = load i32, i32* @r30, align 4
  store i32 268457464, i32* @lr, align 4
  %v1_100055f4 = call i32 @function_10009654(i32 %v2_10005588)
  store i32 %v2_10005588, i32* @r3, align 4
  store i32 268457476, i32* @lr, align 4
  %v2_10005600 = call i32 @function_10009608(i32 %v2_10005588, i32 2)
  store i32 268457492, i32* @lr, align 4
  %v3_10005610 = call i32 @function_10008bdc(i32 0, i32 %v2_10005588, i32 0)
  store i32 268457504, i32* @lr, align 4
  %v2_1000561c = call i32 @function_10009680(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_10005630.77 to i32), i32* @lr, align 4
  %v2_1000562c = call i32 @function_10009680(i32 5, i32 268456492)
  store i32 268457524, i32* @lr, align 4
  %v1_10005630 = call i32 @function_100083c8(i32 %v2_1000562c)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001badc.70, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001bada.71 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_10005630, i32* @global_var_1001ba00.14, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001bad8.68 to i16*), align 4
  store i32 268457564, i32* @lr, align 4
  %v2_10005658 = call i32 @function_10007b68(i32 %v1_10005630, i32 -1334109607)
  store i32 268457000, i32* %r9.global-to-local, align 4
  store i32 268457000, i32* @global_var_1001b9e0.64, align 4
  store i32 ptrtoint (i32* @global_var_1000566c.78 to i32), i32* @lr, align 4
  %v1_10005668 = call i32 @function_10005240(i32 %v2_10005658)
  store i32 268457584, i32* @lr, align 4
  %v1_1000566c = call i32 @function_10005d74(i32 %v1_10005668)
  store i32 %v2_100055b8, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268457596, i32* @lr, align 4
  %v0_10005678 = call i32 @function_1000816c()
  %v0_1000567c = load i32, i32* @r28, align 4
  %v3_1000567c = icmp eq i32 %v0_1000567c, 2
  br i1 %v3_1000567c, label %dec_label_pc_100057f0, label %dec_label_pc_10005684

dec_label_pc_10005684:                            ; preds = %dec_label_pc_100057f0, %dec_label_pc_10005564, %dec_label_pc_10005800
  %v0_10005684 = call i32 @function_10005d24()
  %v2_10005688 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_10005688, i32* @r27, align 4
  store i32 %v0_10005684, i32* %r29.global-to-local, align 4
  %v0_10005690 = load i32, i32* @r31, align 4
  %v1_10005690 = inttoptr i32 %v0_10005690 to i32*
  %v2_10005690 = load i32, i32* %v1_10005690, align 4
  %v2_10005694 = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_10005694, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268457632, i32* @lr, align 4
  %v1_1000569c = inttoptr i32 %v2_10005690 to i8*
  %v2_1000569c = call i32 @function_100080c4(i8* %v1_1000569c)
  store i32 %v2_1000569c, i32* %r28.global-to-local, align 4
  %v0_100056a4 = load i32, i32* @r31, align 4
  %v1_100056a4 = inttoptr i32 %v0_100056a4 to i32*
  %v2_100056a4 = load i32, i32* %v1_100056a4, align 4
  %v1_100056a8 = sub i32 20, %v2_1000569c
  store i32 %v1_100056a8, i32* @r28, align 4
  store i32 268457648, i32* @lr, align 4
  %v1_100056ac = inttoptr i32 %v2_100056a4 to i8*
  %v2_100056ac = call i32 @function_100080c4(i8* %v1_100056ac)
  %v0_100056b0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100056b0 = load i32, i32* @r28, align 4
  %v2_100056b0 = urem i32 %v0_100056b0, %v1_100056b0
  %v2_100056b4 = sub i32 %v0_100056b0, %v2_100056b0
  store i32 %v2_100056b4, i32* %r0.global-to-local, align 4
  %v2_100056bc = add i32 %v2_100056b0, %v2_100056ac
  %v0_100056c8 = load i32, i32* @r30, align 4
  %v2_100056c8 = add i32 %v0_100056c8, %v2_100056bc
  store i32 %v2_100056c8, i32* @r29, align 4
  store i32 268457680, i32* @lr, align 4
  %v2_100056cc = bitcast i32* %stack_var_-1584 to i8*
  %v3_100056cc = call i32 @function_10005de4(i8* %v2_100056cc, i32 %v2_100056bc)
  %v0_100056d0 = load i32, i32* @r31, align 4
  %v1_100056d0 = inttoptr i32 %v0_100056d0 to i32*
  %v2_100056d0 = load i32, i32* %v1_100056d0, align 4
  store i32 %v2_100056d0, i32* @r3, align 4
  %v0_100056d4 = load i32, i32* @r26, align 4
  %v1_100056d4 = trunc i32 %v0_100056d4 to i8
  %v2_100056d4 = load i32, i32* @r29, align 4
  %v3_100056d4 = add i32 %v2_100056d4, 40
  %v4_100056d4 = inttoptr i32 %v3_100056d4 to i8*
  store i8 %v1_100056d4, i8* %v4_100056d4, align 1
  %v2_100056dc = inttoptr i32 %v2_100056d0 to i8*
  %v3_100056dc = call i32 @function_100080ec(i8* %v2_100056dc, i32 %v2_10005688)
  store i32 32, i32* @r4, align 4
  store i32 %v2_10005688, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100056ec.80 to i32), i32* @lr, align 4
  %v0_100056e8 = call i32 @function_1000816c()
  %v0_100056ec = call i32 @function_10005d24()
  store i32 %v0_100056ec, i32* %r28.global-to-local, align 4
  %v0_100056f4 = load i32, i32* @r31, align 4
  %v1_100056f4 = inttoptr i32 %v0_100056f4 to i32*
  %v2_100056f4 = load i32, i32* %v1_100056f4, align 4
  store i32 268457724, i32* @lr, align 4
  %v1_100056f8 = inttoptr i32 %v2_100056f4 to i8*
  %v2_100056f8 = call i32 @function_100080c4(i8* %v1_100056f8)
  store i32 %v2_100056f8, i32* %r29.global-to-local, align 4
  %v0_10005700 = load i32, i32* @r31, align 4
  %v1_10005700 = inttoptr i32 %v0_10005700 to i32*
  %v2_10005700 = load i32, i32* %v1_10005700, align 4
  %v1_10005704 = sub i32 20, %v2_100056f8
  store i32 %v1_10005704, i32* @r29, align 4
  store i32 268457740, i32* @lr, align 4
  %v1_10005708 = inttoptr i32 %v2_10005700 to i8*
  %v2_10005708 = call i32 @function_100080c4(i8* %v1_10005708)
  %v0_1000570c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000570c = load i32, i32* @r29, align 4
  %v2_1000570c = urem i32 %v0_1000570c, %v1_1000570c
  %v2_10005710 = sub i32 %v0_1000570c, %v2_1000570c
  store i32 %v2_10005710, i32* %r0.global-to-local, align 4
  %v2_10005718 = add i32 %v2_1000570c, %v2_10005708
  %v0_10005724 = load i32, i32* @r30, align 4
  %v2_10005724 = add i32 %v0_10005724, %v2_10005718
  store i32 %v2_10005724, i32* @r28, align 4
  store i32 268457772, i32* @lr, align 4
  %v3_10005728 = call i32 @function_10005de4(i8* %v2_100056cc, i32 %v2_10005718)
  %v0_1000572c = load i32, i32* @r26, align 4
  %v1_1000572c = trunc i32 %v0_1000572c to i8
  %v2_1000572c = load i32, i32* @r28, align 4
  %v3_1000572c = add i32 %v2_1000572c, 40
  %v4_1000572c = inttoptr i32 %v3_1000572c to i8*
  store i8 %v1_1000572c, i8* %v4_1000572c, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10005740.81 to i32), i32* @lr, align 4
  %v2_1000573c = call i32 @function_10008a74(i32 15, i32 %v2_10005688)
  store i32 268457800, i32* @lr, align 4
  %v1_10005744 = call i32 @function_10007adc(i32 5)
  %v3_10005750 = call i32 @function_10007a28(i32 5, i32* nonnull %stack_var_-1620)
  %v3_10005754 = load i32, i32* %stack_var_-1620, align 4
  store i32 268457828, i32* @lr, align 4
  %v3_10005760 = call i32 @function_10008ce4(i32 1, i32 %v3_10005750, i32 %v3_10005754)
  store i32 ptrtoint ([3 x i8]* @global_var_10005778.83 to i32), i32* @lr, align 4
  %v3_10005774 = call i32 @function_10008ce4(i32 1, i32 ptrtoint (i32* @global_var_1000b2c8.82 to i32), i32 1)
  store i32 268457856, i32* @lr, align 4
  %v1_1000577c = call i32 @function_10007a50(i32 5)
  store i32 268457860, i32* @lr, align 4
  %v1_10005780 = call i32 @function_1000072c(i32 %v1_1000577c)
  store i32 268457864, i32* @lr, align 4
  %v1_10005784 = call i32 @function_10004b18(i32 %v1_10005780)
  store i32 ptrtoint (i32* @global_var_1000578c.84 to i32), i32* @lr, align 4
  %v1_10005788 = call i32 @function_10005488(i32 %v1_10005784)
  store i32 268457872, i32* @lr, align 4
  %v0_1000578c = call i32 @function_100088cc()
  %tmp48 = icmp slt i32 %v0_1000578c, 1
  br i1 %tmp48, label %dec_label_pc_10005828, label %dec_label_pc_10005798

dec_label_pc_10005798:                            ; preds = %dec_label_pc_10005684
  store i32 %v0_10005580, i32* %r0.global-to-local, align 4
  store i32 %v0_100055cc, i32* %r15.global-to-local, align 4
  store i32 %v0_100055d0, i32* %r16.global-to-local, align 4
  store i32 %v0_100055d4, i32* %r17.global-to-local, align 4
  store i32 %v0_100055d8, i32* %r18.global-to-local, align 4
  store i32 %v0_100055dc, i32* %r19.global-to-local, align 4
  store i32 %v0_100055e0, i32* %r20.global-to-local, align 4
  store i32 %v0_100055ac, i32* @r22, align 4
  store i32 %v0_100055e4, i32* @r23, align 4
  store i32 %v0_100055b4, i32* @r24, align 4
  store i32 %v0_100055bc, i32* @r25, align 4
  store i32 %v0_100055ec, i32* @r27, align 4
  store i32 %v0_1000558c, i32* @r28, align 4
  store i32 %v0_10005584, i32* @r29, align 4
  store i32 %v0_100055f0, i32* @r30, align 4
  store i32 %v0_100055c4, i32* @r31, align 4
  ret i32 0

dec_label_pc_100057f0:                            ; preds = %dec_label_pc_10005564
  %v0_100057f0 = load i32, i32* @r31, align 4
  %v1_100057f0 = add i32 %v0_100057f0, 4
  %v2_100057f0 = inttoptr i32 %v1_100057f0 to i32*
  %v3_100057f0 = load i32, i32* %v2_100057f0, align 4
  store i32 268457976, i32* @lr, align 4
  %v1_100057f4 = inttoptr i32 %v3_100057f0 to i8*
  %v2_100057f4 = call i32 @function_100080c4(i8* %v1_100057f4)
  %v2_100057f8 = icmp sgt i32 %v2_100057f4, 31
  br i1 %v2_100057f8, label %dec_label_pc_10005684, label %dec_label_pc_10005800

dec_label_pc_10005800:                            ; preds = %dec_label_pc_100057f0
  %v0_10005800 = load i32, i32* @r31, align 4
  %v1_10005800 = add i32 %v0_10005800, 4
  %v2_10005800 = inttoptr i32 %v1_10005800 to i32*
  %v3_10005800 = load i32, i32* %v2_10005800, align 4
  store i32 %v2_100055b8, i32* @r3, align 4
  %v2_10005808 = bitcast i32* %stack_var_-1552 to i8*
  %v3_10005808 = call i32 @function_100080ec(i8* %v2_10005808, i32 %v3_10005800)
  %v0_1000580c = load i32, i32* @r31, align 4
  %v1_1000580c = add i32 %v0_1000580c, 4
  %v2_1000580c = inttoptr i32 %v1_1000580c to i32*
  %v3_1000580c = load i32, i32* %v2_1000580c, align 4
  store i32 %v3_1000580c, i32* %r29.global-to-local, align 4
  store i32 268458008, i32* @lr, align 4
  %v1_10005814 = inttoptr i32 %v3_1000580c to i8*
  %v2_10005814 = call i32 @function_100080c4(i8* %v1_10005814)
  store i32 %v2_10005814, i32* @r4, align 4
  store i32 %v3_1000580c, i32* @r3, align 4
  store i32 268458020, i32* @lr, align 4
  %v0_10005820 = call i32 @function_1000816c()
  br label %dec_label_pc_10005684

dec_label_pc_10005828:                            ; preds = %dec_label_pc_10005684
  store i32 ptrtoint ([3 x i8]* @global_var_1000582c.85 to i32), i32* @lr, align 4
  %v1_10005828 = call i32 @function_10008b94(i32 %v0_1000578c)
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v1_10005828, i32* %r17.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000583c.86 to i32), i32* @lr, align 4
  %v0_10005838 = call i32 @function_10008884()
  store i32 ptrtoint ([3 x i8]* @global_var_10005844.87 to i32), i32* @lr, align 4
  %v0_10005840 = call i32 @function_10008884()
  store i32 268458060, i32* @lr, align 4
  %v0_10005848 = call i32 @function_10008884()
  %v2_1000584c = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_1000584c, i32* @r28, align 4
  store i32 268458068, i32* @lr, align 4
  %v1_10005850 = call i32 @function_1000072c(i32 %v0_10005848)
  %v2_10005854 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_10005854, i32* @r29, align 4
  store i32 268458076, i32* @lr, align 4
  %v1_10005858 = call i32 @function_10004b18(i32 %v1_10005850)
  store i32 268566528, i32* %r20.global-to-local, align 4
  store i32 268458084, i32* @lr, align 4
  %v1_10005860 = call i32 @function_10005488(i32 %v1_10005858)
  store i32 268566528, i32* @r26, align 4
  store i32 268458092, i32* @lr, align 4
  %v1_10005868 = call i32 @function_1000629c(i32 %v1_10005860)
  store i32 268566528, i32* %r18.global-to-local, align 4
  %v2_10005870 = ptrtoint i32* %stack_var_-1608 to i32
  store i32 %v2_10005870, i32* %r15.global-to-local, align 4
  %v2_10005874 = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_10005874, i32* %r16.global-to-local, align 4
  %v2_10005ca8 = ptrtoint i32* %stack_var_-1136 to i32
  %v2_10005b6c = ptrtoint i32* %stack_var_-1612 to i32
  %v1_10005c00 = bitcast i32* %stack_var_-1552 to i8*
  %v2_10005bc8 = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_10005878

dec_label_pc_10005878:                            ; preds = %dec_label_pc_10005ccc, %dec_label_pc_10005c68, %dec_label_pc_10005c5c, %dec_label_pc_10005bfc, %dec_label_pc_10005a50, %dec_label_pc_10005a40, %dec_label_pc_10005930, %dec_label_pc_10005d0c, %dec_label_pc_10005d00, %dec_label_pc_10005c80, %dec_label_pc_10005c48, %dec_label_pc_10005b88, %dec_label_pc_10005ab4, %dec_label_pc_10005a04, %dec_label_pc_10005828
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000588850 = load i32, i32* @r28, align 4
  %v4_1000588852 = inttoptr i32 %v2_1000588850 to i32*
  store i32 0, i32* %v4_1000588852, align 4
  %v0_1000588c53 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000588c54 = add i32 %v0_1000588c53, 4
  store i32 %v1_1000588c54, i32* %r9.global-to-local, align 4
  %v0_1000589055 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000589056 = add i32 %v0_1000589055, -1
  store i32 %v1_1000589056, i32* %ctr.global-to-local, align 4
  %v2_1000589057 = icmp eq i32 %v1_1000589056, 0
  br i1 %v2_1000589057, label %dec_label_pc_10005894, label %dec_label_pc_10005888.dec_label_pc_10005888_crit_edge

dec_label_pc_10005888.dec_label_pc_10005888_crit_edge: ; preds = %dec_label_pc_10005878, %dec_label_pc_10005888.dec_label_pc_10005888_crit_edge
  %v1_1000588c58 = phi i32 [ %v1_1000588c, %dec_label_pc_10005888.dec_label_pc_10005888_crit_edge ], [ %v1_1000588c54, %dec_label_pc_10005878 ]
  %v0_10005888.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005888 = load i32, i32* @r28, align 4
  %v3_10005888 = add i32 %v2_10005888, %v1_1000588c58
  %v4_10005888 = inttoptr i32 %v3_10005888 to i32*
  store i32 %v0_10005888.pre, i32* %v4_10005888, align 4
  %v0_1000588c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000588c = add i32 %v0_1000588c, 4
  store i32 %v1_1000588c, i32* %r9.global-to-local, align 4
  %v0_10005890 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005890 = add i32 %v0_10005890, -1
  store i32 %v1_10005890, i32* %ctr.global-to-local, align 4
  %v2_10005890 = icmp eq i32 %v1_10005890, 0
  br i1 %v2_10005890, label %dec_label_pc_10005894, label %dec_label_pc_10005888.dec_label_pc_10005888_crit_edge

dec_label_pc_10005894:                            ; preds = %dec_label_pc_10005888.dec_label_pc_10005888_crit_edge, %dec_label_pc_10005878
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100058a459 = load i32, i32* @r29, align 4
  %v4_100058a461 = inttoptr i32 %v2_100058a459 to i32*
  store i32 0, i32* %v4_100058a461, align 4
  %v0_100058a862 = load i32, i32* %r9.global-to-local, align 4
  %v1_100058a863 = add i32 %v0_100058a862, 4
  store i32 %v1_100058a863, i32* %r9.global-to-local, align 4
  %v0_100058ac64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058ac65 = add i32 %v0_100058ac64, -1
  store i32 %v1_100058ac65, i32* %ctr.global-to-local, align 4
  %v2_100058ac66 = icmp eq i32 %v1_100058ac65, 0
  br i1 %v2_100058ac66, label %dec_label_pc_100058b0, label %dec_label_pc_100058a4.dec_label_pc_100058a4_crit_edge

dec_label_pc_100058a4.dec_label_pc_100058a4_crit_edge: ; preds = %dec_label_pc_10005894, %dec_label_pc_100058a4.dec_label_pc_100058a4_crit_edge
  %v1_100058a867 = phi i32 [ %v1_100058a8, %dec_label_pc_100058a4.dec_label_pc_100058a4_crit_edge ], [ %v1_100058a863, %dec_label_pc_10005894 ]
  %v0_100058a4.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_100058a4 = load i32, i32* @r29, align 4
  %v3_100058a4 = add i32 %v2_100058a4, %v1_100058a867
  %v4_100058a4 = inttoptr i32 %v3_100058a4 to i32*
  store i32 %v0_100058a4.pre, i32* %v4_100058a4, align 4
  %v0_100058a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100058a8 = add i32 %v0_100058a8, 4
  store i32 %v1_100058a8, i32* %r9.global-to-local, align 4
  %v0_100058ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058ac = add i32 %v0_100058ac, -1
  store i32 %v1_100058ac, i32* %ctr.global-to-local, align 4
  %v2_100058ac = icmp eq i32 %v1_100058ac, 0
  br i1 %v2_100058ac, label %dec_label_pc_100058b0, label %dec_label_pc_100058a4.dec_label_pc_100058a4_crit_edge

dec_label_pc_100058b0:                            ; preds = %dec_label_pc_100058a4.dec_label_pc_100058a4_crit_edge, %dec_label_pc_10005894
  %v3_100058b0 = load i32, i32* @global_var_1001b9d8.65, align 4
  %v3_100058b4 = icmp eq i32 %v3_100058b0, -1
  br i1 %v3_100058b4, label %dec_label_pc_100058dc, label %dec_label_pc_100058bc

dec_label_pc_100058bc:                            ; preds = %dec_label_pc_100058b0
  %v1_100058bc = call i32 @__asm_rlwinm(i32 %v3_100058b0, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100058c4 = load i32, i32* @r30, align 4
  %v2_100058c4 = add i32 %v1_100058c4, %v1_100058bc
  %v1_100058c8 = urem i32 %v3_100058b0, 32
  %v1_100058cc = add i32 %v2_100058c4, 232
  %v2_100058cc = inttoptr i32 %v1_100058cc to i32*
  %v3_100058cc = load i32, i32* %v2_100058cc, align 4
  %v3_100058d0 = shl i32 1, %v1_100058c8
  store i32 %v3_100058d0, i32* %r0.global-to-local, align 4
  %v2_100058d4 = or i32 %v3_100058cc, %v3_100058d0
  store i32 %v2_100058d4, i32* %r9.global-to-local, align 4
  store i32 %v2_100058d4, i32* %v2_100058cc, align 4
  br label %dec_label_pc_100058dc

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_100058b0, %dec_label_pc_100058bc
  %v3_100058dc = load i32, i32* @global_var_1001b9dc.88, align 4
  store i32 %v3_100058dc, i32* %r0.global-to-local, align 4
  %v3_100058e4 = icmp eq i32 %v3_100058dc, -1
  br i1 %v3_100058e4, label %dec_label_pc_10005ac8, label %dec_label_pc_100058ec

dec_label_pc_100058ec:                            ; preds = %dec_label_pc_10005ac8, %dec_label_pc_100058dc, %dec_label_pc_10005b20
  %v3_10005a18 = phi i32 [ -1, %dec_label_pc_10005ac8 ], [ %v3_100058dc, %dec_label_pc_100058dc ], [ %v3_10005a18.pre, %dec_label_pc_10005b20 ]
  %v3_100058ec = load i8, i8* bitcast (i16* @global_var_1001ba14.89 to i8*), align 2
  %v3_100058f0 = icmp eq i8 %v3_100058ec, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005a20 = call i32 @__asm_rlwinm(i32 %v3_10005a18, i32 29, i32 3, i32 29)
  %v1_10005a24 = urem i32 %v3_10005a18, 32
  %v1_10005a28 = load i32, i32* @r30, align 4
  %v2_10005a28 = add i32 %v1_10005a28, %v1_10005a20
  %v0_10005a2c = load i32, i32* %r0.global-to-local, align 4
  %v3_10005a2c = shl i32 %v0_10005a2c, %v1_10005a24
  store i32 %v3_10005a2c, i32* %r0.global-to-local, align 4
  br i1 %v3_100058f0, label %dec_label_pc_10005a18, label %dec_label_pc_100058f8

dec_label_pc_100058f8:                            ; preds = %dec_label_pc_100058ec
  %v1_10005910 = add i32 %v2_10005a28, 360
  %v2_10005910 = inttoptr i32 %v1_10005910 to i32*
  %v3_10005910 = load i32, i32* %v2_10005910, align 4
  %v2_10005914 = or i32 %v3_10005910, %v3_10005a2c
  store i32 %v2_10005914, i32* %r9.global-to-local, align 4
  store i32 %v2_10005914, i32* %v2_10005910, align 4
  br label %dec_label_pc_1000591c

dec_label_pc_1000591c:                            ; preds = %dec_label_pc_10005a18, %dec_label_pc_100058f8
  %v3_1000591c = load i32, i32* @global_var_1001b9dc.88, align 4
  store i32 %v3_1000591c, i32* %r0.global-to-local, align 4
  %v3_10005920 = load i32, i32* @global_var_1001b9d8.65, align 4
  %v2_10005924 = icmp slt i32 %v3_10005920, %v3_1000591c
  br i1 %v2_10005924, label %dec_label_pc_1000592c, label %dec_label_pc_10005930

dec_label_pc_1000592c:                            ; preds = %dec_label_pc_1000591c
  br label %dec_label_pc_10005930

dec_label_pc_10005930:                            ; preds = %dec_label_pc_1000591c, %dec_label_pc_1000592c
  %v0_10005938 = phi i32 [ %v3_10005920, %dec_label_pc_1000591c ], [ %v3_1000591c, %dec_label_pc_1000592c ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10005938 = add i32 %v0_10005938, 1
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268458328, i32* @lr, align 4
  %v5_10005954 = call i32 @function_10008b4c(i32 %v1_10005938, i32 %v2_1000584c, i32 %v2_10005854, i32 0, i32 %v2_10005870)
  %v6_10005954 = trunc i32 %v5_10005954 to i16
  %v4_10005958 = icmp eq i16 %v6_10005954, -1
  br i1 %v4_10005958, label %dec_label_pc_10005878, label %dec_label_pc_10005960

dec_label_pc_10005960:                            ; preds = %dec_label_pc_10005930
  %v4_10005960 = icmp eq i16 %v6_10005954, 0
  br i1 %v4_10005960, label %dec_label_pc_10005968, label %dec_label_pc_10005994

dec_label_pc_10005968:                            ; preds = %dec_label_pc_10005960
  %v0_1000596c = load i32, i32* %r19.global-to-local, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_1000597c = srem i32 %v0_1000596c, 6
  %v1_10005980 = sub i32 %v0_1000596c, %v2_1000597c
  store i32 %v1_10005980, i32* %r9.global-to-local, align 4
  store i32 %v2_1000597c, i32* %r0.global-to-local, align 4
  %v1_10005988 = add i32 %v0_1000596c, 1
  store i32 %v1_10005988, i32* %r19.global-to-local, align 4
  %v3_1000598c = icmp eq i32 %v2_1000597c, 0
  br i1 %v3_1000598c, label %dec_label_pc_10005b3c, label %dec_label_pc_10005994

dec_label_pc_10005994:                            ; preds = %dec_label_pc_10005960, %dec_label_pc_10005968, %dec_label_pc_10005b3c
  %v3_10005994 = load i32, i32* @global_var_1001b9d8.65, align 4
  %v3_10005998 = icmp eq i32 %v3_10005994, -1
  br i1 %v3_10005998, label %dec_label_pc_100059bc, label %dec_label_pc_100059a0

dec_label_pc_100059a0:                            ; preds = %dec_label_pc_10005994
  %v1_100059a0 = call i32 @__asm_rlwinm(i32 %v3_10005994, i32 29, i32 3, i32 29)
  %v1_100059a4 = urem i32 %v3_10005994, 32
  %v1_100059a8 = load i32, i32* @r30, align 4
  %v2_100059a8 = add i32 %v1_100059a8, %v1_100059a0
  store i32 %v2_100059a8, i32* %r9.global-to-local, align 4
  %v1_100059ac = add i32 %v2_100059a8, 232
  %v2_100059ac = inttoptr i32 %v1_100059ac to i32*
  %v3_100059ac = load i32, i32* %v2_100059ac, align 4
  %v3_100059b0 = lshr i32 %v3_100059ac, %v1_100059a4
  store i32 %v3_100059b0, i32* %r0.global-to-local, align 4
  %v1_100059b4 = urem i32 %v3_100059b0, 2
  store i32 %v1_100059b4, i32* %r9.global-to-local, align 4
  %v3_100059b4 = icmp eq i32 %v1_100059b4, 0
  br i1 %v3_100059b4, label %dec_label_pc_100059bc, label %dec_label_pc_10005bc0

dec_label_pc_100059bc:                            ; preds = %dec_label_pc_100059a0, %dec_label_pc_10005994
  %v3_100059bc = load i8, i8* bitcast (i16* @global_var_1001ba14.89 to i8*), align 2
  %v4_100059bc = zext i8 %v3_100059bc to i32
  store i32 %v4_100059bc, i32* @r31, align 4
  %v3_100059c0 = icmp eq i8 %v3_100059bc, 0
  %v3_10005a40 = load i32, i32* @global_var_1001b9dc.88, align 4
  br i1 %v3_100059c0, label %dec_label_pc_10005a40, label %dec_label_pc_100059c8

dec_label_pc_100059c8:                            ; preds = %dec_label_pc_100059bc
  store i32 268566528, i32* @r31, align 4
  %v1_100059d0 = call i32 @__asm_rlwinm(i32 %v3_10005a40, i32 29, i32 3, i32 29)
  %v1_100059d4 = urem i32 %v3_10005a40, 32
  %v1_100059d8 = load i32, i32* @r30, align 4
  %v2_100059d8 = add i32 %v1_100059d8, %v1_100059d0
  store i32 %v2_100059d8, i32* %r9.global-to-local, align 4
  %v1_100059dc = add i32 %v2_100059d8, 360
  %v2_100059dc = inttoptr i32 %v1_100059dc to i32*
  %v3_100059dc = load i32, i32* %v2_100059dc, align 4
  %v3_100059e0 = lshr i32 %v3_100059dc, %v1_100059d4
  store i32 %v3_100059e0, i32* %r0.global-to-local, align 4
  %v1_100059e8 = urem i32 %v3_100059e0, 2
  %v3_100059e8 = icmp eq i32 %v1_100059e8, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001ba14.89 to i8*), align 2
  br i1 %v3_100059e8, label %dec_label_pc_100059f8, label %dec_label_pc_10005b58

dec_label_pc_100059f8:                            ; preds = %dec_label_pc_100059c8
  %v3_100059f8 = icmp eq i32 %v3_10005a40, -1
  br i1 %v3_100059f8, label %dec_label_pc_10005a04, label %dec_label_pc_10005a00

dec_label_pc_10005a00:                            ; preds = %dec_label_pc_100059f8
  store i32 ptrtoint (i32* @global_var_10005a04.90 to i32), i32* @lr, align 4
  %v0_10005a00 = call i32 @function_10008884()
  br label %dec_label_pc_10005a04

dec_label_pc_10005a04:                            ; preds = %dec_label_pc_100059f8, %dec_label_pc_10005a00
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b9dc.88, align 4
  store i32 268458516, i32* @lr, align 4
  %v1_10005a10 = call i32 @function_1000a0cc(i32 1)
  br label %dec_label_pc_10005878

dec_label_pc_10005a18:                            ; preds = %dec_label_pc_100058ec
  %v1_10005a30 = add i32 %v2_10005a28, 232
  %v2_10005a30 = inttoptr i32 %v1_10005a30 to i32*
  %v3_10005a30 = load i32, i32* %v2_10005a30, align 4
  %v2_10005a34 = or i32 %v3_10005a30, %v3_10005a2c
  store i32 %v2_10005a34, i32* %r9.global-to-local, align 4
  store i32 %v2_10005a34, i32* %v2_10005a30, align 4
  br label %dec_label_pc_1000591c

dec_label_pc_10005a40:                            ; preds = %dec_label_pc_100059bc
  store i32 268566528, i32* @r27, align 4
  %v3_10005a48 = icmp eq i32 %v3_10005a40, -1
  br i1 %v3_10005a48, label %dec_label_pc_10005878, label %dec_label_pc_10005a50

dec_label_pc_10005a50:                            ; preds = %dec_label_pc_10005a40
  %v1_10005a50 = call i32 @__asm_rlwinm(i32 %v3_10005a40, i32 29, i32 3, i32 29)
  %v1_10005a54 = urem i32 %v3_10005a40, 32
  %v1_10005a58 = load i32, i32* @r30, align 4
  %v2_10005a58 = add i32 %v1_10005a58, %v1_10005a50
  store i32 %v2_10005a58, i32* %r9.global-to-local, align 4
  %v1_10005a5c = add i32 %v2_10005a58, 232
  %v2_10005a5c = inttoptr i32 %v1_10005a5c to i32*
  %v3_10005a5c = load i32, i32* %v2_10005a5c, align 4
  %v3_10005a60 = lshr i32 %v3_10005a5c, %v1_10005a54
  store i32 %v3_10005a60, i32* %r0.global-to-local, align 4
  %v1_10005a64 = urem i32 %v3_10005a60, 2
  store i32 %v1_10005a64, i32* %r9.global-to-local, align 4
  %v3_10005a64 = icmp eq i32 %v1_10005a64, 0
  br i1 %v3_10005a64, label %dec_label_pc_10005878, label %dec_label_pc_10005a6c

dec_label_pc_10005a6c:                            ; preds = %dec_label_pc_10005a50
  %v0_10005a6c = load i32, i32* @r31, align 4
  %v6_10005a6c = trunc i32 %v0_10005a6c to i16
  store i16 %v6_10005a6c, i16* %stack_var_-1624, align 2
  %v0_10005a70 = call i32 @function_10008fa0()
  %v0_10005a74 = load i32, i32* @r31, align 4
  %v2_10005a74 = inttoptr i32 %v0_10005a70 to i32*
  store i32 %v0_10005a74, i32* %v2_10005a74, align 4
  store i32 %v0_10005a70, i32* @r23, align 4
  %v3_10005a84 = load i32, i32* @global_var_1001b9dc.88, align 4
  store i32 268458640, i32* @lr, align 4
  %v4_10005a8c = call i32 @function_100094a8(i32 %v3_10005a84, i32 %v2_10005694, i32 2, i32 16386)
  %v3_10005a90 = icmp eq i32 %v4_10005a8c, -1
  br i1 %v3_10005a90, label %dec_label_pc_10005c5c, label %dec_label_pc_10005a98

dec_label_pc_10005a98:                            ; preds = %dec_label_pc_10005a6c
  %v3_10005a98 = icmp eq i32 %v4_10005a8c, 0
  br i1 %v3_10005a98, label %dec_label_pc_10005c70, label %dec_label_pc_10005aa0

dec_label_pc_10005aa0:                            ; preds = %dec_label_pc_10005a98
  %v3_10005aa0 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005aa0 = sext i16 %v3_10005aa0 to i32
  %v4_10005aa4 = icmp eq i16 %v3_10005aa0, 0
  br i1 %v4_10005aa4, label %dec_label_pc_10005d0c, label %dec_label_pc_10005aac

dec_label_pc_10005aac:                            ; preds = %dec_label_pc_10005aa0
  %tmp49 = icmp ult i16 %v3_10005aa0, 1025
  br i1 %tmp49, label %dec_label_pc_10005ca4, label %dec_label_pc_10005ab4

dec_label_pc_10005ab4:                            ; preds = %dec_label_pc_10005aac
  store i32 ptrtoint (i32* @global_var_10005abc.91 to i32), i32* @lr, align 4
  %v0_10005ab8 = call i32 @function_10008884()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b9dc.88, align 4
  br label %dec_label_pc_10005878

dec_label_pc_10005ac8:                            ; preds = %dec_label_pc_100058dc
  store i32 268458712, i32* @lr, align 4
  %v3_10005ad4 = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  %v3_10005ad8 = icmp eq i32 %v3_10005ad4, -1
  store i32 %v3_10005ad4, i32* @r31, align 4
  store i32 %v3_10005ad4, i32* @global_var_1001b9dc.88, align 4
  br i1 %v3_10005ad8, label %dec_label_pc_100058ec, label %dec_label_pc_10005ae8

dec_label_pc_10005ae8:                            ; preds = %dec_label_pc_10005ac8
  store i32 3, i32* @r4, align 4
  store i32 268458744, i32* @lr, align 4
  %v1_10005af4 = call i32 @function_1000879c(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005b00 = load i32, i32* @r31, align 4
  store i32 268458764, i32* @lr, align 4
  %v2_10005b08 = call i32 @function_1000879c(i32 %v0_10005b00)
  %v3_10005b0c = load i32, i32* @global_var_1001b9e0.64, align 4
  store i32 %v3_10005b0c, i32* %r0.global-to-local, align 4
  %v3_10005b10 = icmp eq i32 %v3_10005b0c, 0
  br i1 %v3_10005b10, label %dec_label_pc_10005b20, label %dec_label_pc_10005b18

dec_label_pc_10005b18:                            ; preds = %dec_label_pc_10005ae8
  store i32 %v3_10005b0c, i32* %ctr.global-to-local, align 4
  store i32 268458784, i32* @lr, align 4
  %v2_10005b1c = call i32 @function_100083c8(i32 %v2_10005b08)
  br label %dec_label_pc_10005b20

dec_label_pc_10005b20:                            ; preds = %dec_label_pc_10005ae8, %dec_label_pc_10005b18
  %v3_10005b20 = load i32, i32* @global_var_1001b9dc.88, align 4
  store i32 %v3_10005b20, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001ba14.89 to i8*), align 2
  store i32 268458808, i32* @lr, align 4
  %v0_10005b34 = call i32 @function_100093d4()
  %v3_10005a18.pre = load i32, i32* @global_var_1001b9dc.88, align 4
  br label %dec_label_pc_100058ec

dec_label_pc_10005b3c:                            ; preds = %dec_label_pc_10005968
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005b44 = load i32, i32* @global_var_1001b9dc.88, align 4
  store i32 268458836, i32* @lr, align 4
  %v4_10005b50 = call i32 @function_10009520(i32 %v3_10005b44, i32 %v2_10005694, i32 2, i32 16384)
  br label %dec_label_pc_10005994

dec_label_pc_10005b58:                            ; preds = %dec_label_pc_100059c8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268458876, i32* @lr, align 4
  %v5_10005b78 = call i32 @function_1000943c(i32 1, i32 4, i32 %v2_10005874, i32 %v2_10005b6c, i32 4)
  %v3_10005b7c = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_10005b7c, i32* %r0.global-to-local, align 4
  %v3_10005b80 = icmp eq i32 %v3_10005b7c, 0
  br i1 %v3_10005b80, label %dec_label_pc_10005bfc, label %dec_label_pc_10005b88

dec_label_pc_10005b88:                            ; preds = %dec_label_pc_10005b58
  store i32 ptrtoint (i32* @global_var_10005b90.92 to i32), i32* @lr, align 4
  %v0_10005b8c = call i32 @function_10008884()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b9dc.88, align 4
  %v0_10005b98 = call i32 @function_10005d24()
  %v1_10005b98 = sext i32 %v0_10005b98 to i64
  %v5_10005ba4 = mul nuw nsw i64 %v1_10005b98, 3435973837
  %v1_10005ba82 = udiv i64 %v5_10005ba4, 34359738368
  %v1_10005ba8 = trunc i64 %v1_10005ba82 to i32
  %v1_10005bac = mul i32 %v1_10005ba8, 10
  store i32 %v1_10005bac, i32* %r0.global-to-local, align 4
  %v3_10005bb0 = sub i32 %v0_10005b98, %v1_10005bac
  %v1_10005bb4 = add i32 %v3_10005bb0, 1
  store i32 268458940, i32* @lr, align 4
  %v1_10005bb8 = call i32 @function_1000a0cc(i32 %v1_10005bb4)
  br label %dec_label_pc_10005878

dec_label_pc_10005bc0:                            ; preds = %dec_label_pc_100059a0
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 268458964, i32* @lr, align 4
  %v3_10005bd0 = call i32 @function_1000936c(i32 %v2_10005bc8, i32 %v2_10005874, i32 %v1_100059b4)
  store i32 ptrtoint ([3 x i8]* @global_var_10005bd8.94 to i32), i32* @lr, align 4
  %v1_10005bd4 = call i32 @function_100044e8(i32 %v3_10005bd0)
  %v0_10005bd8 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005bd8 = sub i32 0, %v0_10005bd8
  store i32 268458980, i32* @lr, align 4
  %v2_10005be0 = call i32 @function_100089a4(i32 %v1_10005bd8, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005be8 = load i32, i32* @global_var_1001ba10.72, align 4
  %v3_10005bec = icmp eq i32 %v3_10005be8, 0
  br i1 %v3_10005bec, label %dec_label_pc_10005bf4, label %dec_label_pc_10005c98

dec_label_pc_10005bf4:                            ; preds = %dec_label_pc_10005bc0, %dec_label_pc_10005c98
  %v0_10005bf8 = call i32 @function_1000a048()
  br label %dec_label_pc_10005bfc

dec_label_pc_10005bfc:                            ; preds = %dec_label_pc_10005b58, %dec_label_pc_10005bf4
  store i32 268459012, i32* @lr, align 4
  %v2_10005c00 = call i32 @function_100080c4(i8* %v1_10005c00)
  %v3_10005c00 = trunc i32 %v2_10005c00 to i8
  %v7_10005c04 = sext i8 %v3_10005c00 to i16
  store i16 %v7_10005c04, i16* %stack_var_-1624, align 2
  store i32 268459020, i32* @lr, align 4
  %v2_10005c08 = call i32 @function_100083c8(i32 %v2_10005c00)
  store i32 %v2_10005c08, i32* @global_var_1001ba00.14, align 4
  %v0_10005c14 = load i32, i32* @r31, align 4
  %v1_10005c14 = add i32 %v0_10005c14, -17956
  %v2_10005c14 = inttoptr i32 %v1_10005c14 to i32*
  %v3_10005c14 = load i32, i32* %v2_10005c14, align 4
  store i32 268459048, i32* @lr, align 4
  %v4_10005c24 = call i32 @function_10009520(i32 %v3_10005c14, i32 ptrtoint (i32* @global_var_1000b2cc.95 to i32), i32 4, i32 16384)
  %v0_10005c28 = load i32, i32* @r31, align 4
  %v1_10005c28 = add i32 %v0_10005c28, -17956
  %v2_10005c28 = inttoptr i32 %v1_10005c28 to i32*
  %v3_10005c28 = load i32, i32* %v2_10005c28, align 4
  store i32 268459068, i32* @lr, align 4
  %v4_10005c38 = call i32 @function_10009520(i32 %v3_10005c28, i32 %v2_10005694, i32 1, i32 16384)
  %v3_10005c3c = load i16, i16* %stack_var_-1624, align 2
  %v4_10005c40 = icmp eq i16 %v3_10005c3c, 0
  br i1 %v4_10005c40, label %dec_label_pc_10005878, label %dec_label_pc_10005c48

dec_label_pc_10005c48:                            ; preds = %dec_label_pc_10005bfc
  %v4_10005c3c = sext i16 %v3_10005c3c to i32
  %v0_10005c48 = load i32, i32* @r31, align 4
  %v1_10005c48 = add i32 %v0_10005c48, -17956
  %v2_10005c48 = inttoptr i32 %v1_10005c48 to i32*
  %v3_10005c48 = load i32, i32* %v2_10005c48, align 4
  store i32 268459096, i32* @lr, align 4
  %v5_10005c54 = call i32 @function_10009520(i32 %v3_10005c48, i32 %v2_100055b8, i32 %v4_10005c3c, i32 16384)
  br label %dec_label_pc_10005878

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005ca4, %dec_label_pc_10005a6c
  %v0_10005c5c = load i32, i32* @r23, align 4
  %v1_10005c5c = inttoptr i32 %v0_10005c5c to i32*
  %v2_10005c5c = load i32, i32* %v1_10005c5c, align 4
  %v3_10005c60 = icmp eq i32 %v2_10005c5c, 11
  br i1 %v3_10005c60, label %dec_label_pc_10005878, label %dec_label_pc_10005c68

dec_label_pc_10005c68:                            ; preds = %dec_label_pc_10005c5c
  %v3_10005c68 = icmp eq i32 %v2_10005c5c, 4
  br i1 %v3_10005c68, label %dec_label_pc_10005878, label %dec_label_pc_10005c70

dec_label_pc_10005c70:                            ; preds = %dec_label_pc_10005cc4, %dec_label_pc_10005c68, %dec_label_pc_10005a98
  %v3_10005c70 = load i32, i32* @global_var_1001b9dc.88, align 4
  %v3_10005c74 = icmp eq i32 %v3_10005c70, -1
  br i1 %v3_10005c74, label %dec_label_pc_10005c80, label %dec_label_pc_10005c7c

dec_label_pc_10005c7c:                            ; preds = %dec_label_pc_10005c70
  store i32 ptrtoint (i32* @global_var_10005c80.96 to i32), i32* @lr, align 4
  %v0_10005c7c = call i32 @function_10008884()
  br label %dec_label_pc_10005c80

dec_label_pc_10005c80:                            ; preds = %dec_label_pc_10005c70, %dec_label_pc_10005c7c
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b9dc.88, align 4
  store i32 268459156, i32* @lr, align 4
  %v1_10005c90 = call i32 @function_1000a0cc(i32 1)
  br label %dec_label_pc_10005878

dec_label_pc_10005c98:                            ; preds = %dec_label_pc_10005bc0
  store i32 268459168, i32* @lr, align 4
  %v2_10005c9c = call i32 @function_100089a4(i32 %v3_10005be8, i32 9)
  br label %dec_label_pc_10005bf4

dec_label_pc_10005ca4:                            ; preds = %dec_label_pc_10005aac
  %v0_10005ca4 = load i32, i32* @r31, align 4
  %v1_10005ca4 = load i32, i32* @r23, align 4
  %v2_10005ca4 = inttoptr i32 %v1_10005ca4 to i32*
  store i32 %v0_10005ca4, i32* %v2_10005ca4, align 4
  store i32 %v2_10005ca8, i32* @r31, align 4
  %v3_10005cb4 = load i32, i32* @global_var_1001b9dc.88, align 4
  store i32 268459196, i32* @lr, align 4
  %v5_10005cb8 = call i32 @function_100094a8(i32 %v3_10005cb4, i32 %v2_10005ca8, i32 %v4_10005aa0, i32 16386)
  %v3_10005cbc = icmp eq i32 %v5_10005cb8, -1
  br i1 %v3_10005cbc, label %dec_label_pc_10005c5c, label %dec_label_pc_10005cc4

dec_label_pc_10005cc4:                            ; preds = %dec_label_pc_10005ca4
  %v3_10005cc4 = icmp eq i32 %v5_10005cb8, 0
  br i1 %v3_10005cc4, label %dec_label_pc_10005c70, label %dec_label_pc_10005ccc

dec_label_pc_10005ccc:                            ; preds = %dec_label_pc_10005cc4
  %v3_10005ccc = load i32, i32* @global_var_1001b9dc.88, align 4
  store i32 268459232, i32* @lr, align 4
  %v4_10005cdc = call i32 @function_100094a8(i32 %v3_10005ccc, i32 %v2_10005694, i32 2, i32 16384)
  %v3_10005ce0 = load i32, i32* @global_var_1001b9dc.88, align 4
  %v3_10005ce4 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005ce4 = sext i16 %v3_10005ce4 to i32
  store i32 268459252, i32* @lr, align 4
  %v5_10005cf0 = call i32 @function_100094a8(i32 %v3_10005ce0, i32 %v2_10005ca8, i32 %v4_10005ce4, i32 16384)
  %v3_10005cf4 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005cf8 = icmp eq i16 %v3_10005cf4, 0
  br i1 %v4_10005cf8, label %dec_label_pc_10005878, label %dec_label_pc_10005d00

dec_label_pc_10005d00:                            ; preds = %dec_label_pc_10005ccc
  %v4_10005cf4 = sext i16 %v3_10005cf4 to i32
  store i32 268459272, i32* @lr, align 4
  %v3_10005d04 = call i32 @function_10000394(i32 %v2_10005ca8, i32 %v4_10005cf4)
  br label %dec_label_pc_10005878

dec_label_pc_10005d0c:                            ; preds = %dec_label_pc_10005aa0
  %v3_10005d0c = load i32, i32* @global_var_1001b9dc.88, align 4
  store i32 268459296, i32* @lr, align 4
  %v4_10005d1c = call i32 @function_100094a8(i32 %v3_10005d0c, i32 %v2_10005694, i32 2, i32 16384)
  br label %dec_label_pc_10005878

; uselistorder directives
  uselistorder i16 %v3_10005cf4, { 1, 0 }
  uselistorder i16 %v3_10005c3c, { 1, 0 }
  uselistorder i32 %v3_10005ad4, { 1, 0, 2 }
  uselistorder i32 %v1_10005a64, { 1, 0 }
  uselistorder i32 %v3_10005a40, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_100059b4, { 2, 1, 0 }
  uselistorder i32 %v2_1000597c, { 1, 0, 2 }
  uselistorder i32 %v0_1000596c, { 2, 0, 1 }
  uselistorder i32 %v2_10005a28, { 1, 0 }
  uselistorder i32 %v1_100058ac, { 1, 0 }
  uselistorder i32 %v1_100058a8, { 1, 0 }
  uselistorder i32 %v1_10005890, { 1, 0 }
  uselistorder i32 %v1_1000588c, { 1, 0 }
  uselistorder i32 %v2_10005ca8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005874, { 1, 0, 2 }
  uselistorder i32 %v2_10005718, { 1, 0 }
  uselistorder i32 %v2_100056bc, { 1, 0 }
  uselistorder i32 %v2_10005694, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_10005630, { 1, 0 }
  uselistorder i32 %v2_10005588, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_10005554, { 1, 2, 0 }
  uselistorder i32 %v0_10005498, { 2, 3, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 27, 16, 17, 18, 24, 25, 19, 20, 21, 22, 23 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r15.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009520, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i16* @global_var_1001ba14.89 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001b9dc.88, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_10005488, { 1, 0 }
  uselistorder i32 (i32)* @function_10004b18, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008ce4, { 1, 0 }
  uselistorder i32 (i32)* @function_10005240, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009680, { 1, 0 }
  uselistorder i32 (i32)* @function_1000a0cc, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10005c80, { 1, 0 }
  uselistorder label %dec_label_pc_10005bfc, { 1, 0 }
  uselistorder label %dec_label_pc_10005bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10005b20, { 1, 0 }
  uselistorder label %dec_label_pc_10005a04, { 1, 0 }
  uselistorder label %dec_label_pc_10005994, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005930, { 1, 0 }
  uselistorder label %dec_label_pc_100058ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100058dc, { 1, 0 }
  uselistorder label %dec_label_pc_100058a4.dec_label_pc_100058a4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005888.dec_label_pc_10005888_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005878, { 7, 8, 0, 9, 1, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_10005684, { 2, 0, 1 }
}

define i32 @function_10005d24() local_unnamed_addr {
dec_label_pc_10005d24:
  %v3_10005d2c = load i32, i32* @global_var_1001ba94.97, align 4
  %v3_10005d34 = load i32, i32* @global_var_1001ba88.98, align 4
  %v1_10005d3c = udiv i32 %v3_10005d2c, 524288
  %v3_10005d40 = load i32, i32* @global_var_1001ba90.99, align 4
  %v1_10005d44 = mul i32 %v3_10005d34, 2048
  %v2_10005d48 = xor i32 %v1_10005d3c, %v3_10005d2c
  %v2_10005d4c = xor i32 %v1_10005d44, %v3_10005d34
  %v3_10005d50 = load i32, i32* @global_var_1001ba8c.100, align 4
  %v2_10005d54 = xor i32 %v2_10005d48, %v2_10005d4c
  %v1_10005d58 = udiv i32 %v2_10005d4c, 256
  %v2_10005d5c = xor i32 %v2_10005d54, %v1_10005d58
  store i32 %v3_10005d50, i32* @global_var_1001ba88.98, align 4
  store i32 %v3_10005d40, i32* @global_var_1001ba8c.100, align 4
  store i32 %v3_10005d2c, i32* @global_var_1001ba90.99, align 4
  store i32 %v2_10005d5c, i32* @global_var_1001ba94.97, align 4
  ret i32 %v2_10005d5c

; uselistorder directives
  uselistorder i32 %v2_10005d5c, { 1, 0 }
  uselistorder i32 %v3_10005d34, { 1, 0 }
  uselistorder i32 %v3_10005d2c, { 2, 1, 0 }
}

define i32 @function_10005d74(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005d74:
  store i32 268459412, i32* @lr, align 4
  %v0_10005d90 = call i32 @function_10008c54()
  store i32 %v0_10005d90, i32* @global_var_1001ba88.98, align 4
  store i32 268459424, i32* @lr, align 4
  %v0_10005d9c = call i32 @function_10008914()
  store i32 268459432, i32* @lr, align 4
  %v0_10005da4 = call i32 @function_1000895c()
  %v2_10005da8 = xor i32 %v0_10005d9c, %v0_10005da4
  store i32 %v2_10005da8, i32* @global_var_1001ba8c.100, align 4
  store i32 268459444, i32* @lr, align 4
  %v1_10005db0 = call i32 @function_10008fac(i32 %v0_10005da4)
  %v3_10005db4 = load i32, i32* @global_var_1001ba8c.100, align 4
  %v2_10005dc4 = xor i32 %v3_10005db4, %v1_10005db0
  store i32 %v2_10005dc4, i32* @global_var_1001ba94.97, align 4
  store i32 %v1_10005db0, i32* @global_var_1001ba90.99, align 4
  ret i32 %v1_10005db0

; uselistorder directives
  uselistorder i32 %v1_10005db0, { 2, 1, 0 }
  uselistorder i32 %v0_10005da4, { 1, 0 }
  uselistorder i32 ()* @function_1000895c, { 2, 1, 0 }
}

define i32 @function_10005de4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005de4:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10005e00 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268459556, i32* @lr, align 4
  %v1_10005e20 = call i32 @function_10007adc(i32 31)
  %v3_10005e2c = call i32 @function_10007a28(i32 31, i32* null)
  %v2_10005e38 = inttoptr i32 %v3_10005e2c to i8*
  %v3_10005e38 = call i32 @function_10009118(i32 %v2_10005e00, i8* %v2_10005e38)
  %v3_10005e3c = icmp eq i32 %arg2, 0
  br i1 %v3_10005e3c, label %dec_label_pc_10005ec0, label %dec_label_pc_10005e44

dec_label_pc_10005e44:                            ; preds = %dec_label_pc_10005de4
  %v1_10005e44 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005e44 = add i32 %v1_10005e44, %arg2
  store i32 %v2_10005e44, i32* %r26.global-to-local, align 4
  %v1_10005e98 = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10005e58

dec_label_pc_10005e58:                            ; preds = %dec_label_pc_10005e58, %dec_label_pc_10005e44
  %v3_10005e58 = load i32, i32* @global_var_1001ba94.97, align 4
  %v3_10005e60 = load i32, i32* @global_var_1001ba88.98, align 4
  %v1_10005e64 = udiv i32 %v3_10005e58, 524288
  %v3_10005e68 = load i32, i32* @global_var_1001ba90.99, align 4
  %v1_10005e6c = mul i32 %v3_10005e60, 2048
  %v2_10005e70 = xor i32 %v1_10005e64, %v3_10005e58
  %v2_10005e74 = xor i32 %v1_10005e6c, %v3_10005e60
  %v3_10005e78 = load i32, i32* @global_var_1001ba8c.100, align 4
  %v2_10005e7c = xor i32 %v2_10005e70, %v2_10005e74
  %v1_10005e80 = udiv i32 %v2_10005e74, 256
  %v2_10005e84 = xor i32 %v2_10005e7c, %v1_10005e80
  store i32 %v2_10005e84, i32* %r29.global-to-local, align 4
  store i32 %v3_10005e78, i32* @global_var_1001ba88.98, align 4
  store i32 %v2_10005e84, i32* @global_var_1001ba94.97, align 4
  store i32 %v3_10005e68, i32* @global_var_1001ba8c.100, align 4
  store i32 %v3_10005e58, i32* @global_var_1001ba90.99, align 4
  store i32 268459676, i32* @lr, align 4
  %v2_10005e98 = call i32 @function_100080c4(i8* %v1_10005e98)
  %v0_10005e9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10005e9c = urem i32 %v0_10005e9c, %v2_10005e98
  store i32 %v2_10005e9c, i32* %r29.global-to-local, align 4
  %v0_10005ea8 = load i32, i32* @r1, align 4
  %v2_10005ea8 = add i32 %v0_10005ea8, %v2_10005e9c
  %v1_10005eac = add i32 %v2_10005ea8, 8
  %v2_10005eac = inttoptr i32 %v1_10005eac to i8*
  %v3_10005eac = load i8, i8* %v2_10005eac, align 1
  %v2_10005eb0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005eb0 = inttoptr i32 %v2_10005eb0 to i8*
  store i8 %v3_10005eac, i8* %v3_10005eb0, align 1
  %v0_10005eb4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005eb4 = add i32 %v0_10005eb4, 1
  store i32 %v1_10005eb4, i32* %r31.global-to-local, align 4
  %v1_10005eb8 = load i32, i32* %r26.global-to-local, align 4
  %v4_10005eb8 = icmp eq i32 %v1_10005eb4, %v1_10005eb8
  br i1 %v4_10005eb8, label %dec_label_pc_10005ec0, label %dec_label_pc_10005e58

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005e58, %dec_label_pc_10005de4
  store i32 268459720, i32* @lr, align 4
  %v1_10005ec4 = call i32 @function_10007a50(i32 31)
  ret i32 %v1_10005ec4

; uselistorder directives
  uselistorder i32 %v3_10005e60, { 1, 0 }
  uselistorder i32 %v3_10005e58, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10007a50, { 0, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32*)* @function_10007a28, { 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32)* @function_10007adc, { 0, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10005ef8() local_unnamed_addr {
dec_label_pc_10005ef8:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10005ef8 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10005ef8, 1
  br i1 %tmp19, label %dec_label_pc_10005ef8.dec_label_pc_10005fac_crit_edge, label %dec_label_pc_10005f10

dec_label_pc_10005ef8.dec_label_pc_10005fac_crit_edge: ; preds = %dec_label_pc_10005ef8
  %v0_10005fbc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005fac

dec_label_pc_10005f10:                            ; preds = %dec_label_pc_10005ef8
  %v3_10005f20 = load i32, i32* @global_var_1001ba94.97, align 4
  store i32 %v3_10005f20, i32* %r7.global-to-local, align 4
  %v3_10005f24 = load i32, i32* @global_var_1001ba90.99, align 4
  store i32 %v3_10005f24, i32* %r5.global-to-local, align 4
  %v3_10005f28 = load i32, i32* @global_var_1001ba8c.100, align 4
  store i32 %v3_10005f28, i32* %r6.global-to-local, align 4
  %v3_10005f2c = load i32, i32* @global_var_1001ba88.98, align 4
  br label %dec_label_pc_10005f58

dec_label_pc_10005f34:                            ; preds = %dec_label_pc_10005f58
  %v1_10005f34 = load i32, i32* @r3, align 4
  %v2_10005f34 = inttoptr i32 %v1_10005f34 to i32*
  store i32 %v2_10005f7c, i32* %v2_10005f34, align 4
  %v0_10005f38 = load i32, i32* @r4, align 4
  %v1_10005f38 = add i32 %v0_10005f38, -4
  store i32 %v1_10005f38, i32* @r4, align 4
  %v0_10005f3c = load i32, i32* @r3, align 4
  %v1_10005f3c = add i32 %v0_10005f3c, 4
  br label %dec_label_pc_10005f40

dec_label_pc_10005f40:                            ; preds = %dec_label_pc_10005f90, %dec_label_pc_10005f34
  %v0_10005f40 = phi i32 [ %v0_10005f40.pr, %dec_label_pc_10005f90 ], [ %v1_10005f38, %dec_label_pc_10005f34 ]
  %storemerge = phi i32 [ %v1_10005f94, %dec_label_pc_10005f90 ], [ %v1_10005f3c, %dec_label_pc_10005f34 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10005f44 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10005f40, 1
  br i1 %tmp20, label %dec_label_pc_10005f9c, label %dec_label_pc_10005f4c

dec_label_pc_10005f4c:                            ; preds = %dec_label_pc_10005f40
  %v0_10005f4c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005f4c, i32* %r6.global-to-local, align 4
  %v0_10005f50 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005f50, i32* %r5.global-to-local, align 4
  %v0_10005f54 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f54, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10005f58

dec_label_pc_10005f58:                            ; preds = %dec_label_pc_10005f10, %dec_label_pc_10005f4c
  %v0_10005ff8 = phi i32 [ %v3_10005f28, %dec_label_pc_10005f10 ], [ %v0_10005f4c, %dec_label_pc_10005f4c ]
  %v0_10005fdc = phi i32 [ %v3_10005f24, %dec_label_pc_10005f10 ], [ %v0_10005f50, %dec_label_pc_10005f4c ]
  %v0_10005fe0 = phi i32 [ %v3_10005f20, %dec_label_pc_10005f10 ], [ %v0_10005f54, %dec_label_pc_10005f4c ]
  %v0_10005fc0 = phi i32 [ %v3_10005f2c, %dec_label_pc_10005f10 ], [ %v0_10005f44, %dec_label_pc_10005f4c ]
  %v0_10005f88 = phi i32 [ %v0_10005ef8, %dec_label_pc_10005f10 ], [ %v0_10005f40, %dec_label_pc_10005f4c ]
  %v2_10005f58 = icmp sgt i32 %v0_10005f88, 3
  %v1_10005f5c = mul i32 %v0_10005fc0, 2048
  %v1_10005f60 = udiv i32 %v0_10005fe0, 524288
  %v2_10005f64 = xor i32 %v1_10005f5c, %v0_10005fc0
  %v2_10005f68 = xor i32 %v1_10005f60, %v0_10005fe0
  %v2_10005f70 = xor i32 %v2_10005f68, %v2_10005f64
  %v1_10005f74 = udiv i32 %v2_10005f64, 256
  %v2_10005f7c = xor i32 %v2_10005f70, %v1_10005f74
  store i32 %v2_10005f7c, i32* %r0.global-to-local, align 4
  br i1 %v2_10005f58, label %dec_label_pc_10005f34, label %dec_label_pc_10005f84

dec_label_pc_10005f84:                            ; preds = %dec_label_pc_10005f58
  %v3_10005f6c = icmp eq i32 %v0_10005f88, 1
  store i32 %v2_10005f7c, i32* %r0.global-to-local, align 4
  %v1_10005f88 = add i32 %v0_10005f88, -2
  store i32 %v1_10005f88, i32* @r4, align 4
  br i1 %v3_10005f6c, label %dec_label_pc_10005fc0, label %dec_label_pc_10005f90

dec_label_pc_10005f90:                            ; preds = %dec_label_pc_10005f84
  %v1_10005f90 = trunc i32 %v2_10005f7c to i16
  %v2_10005f90 = load i32, i32* @r3, align 4
  %v3_10005f90 = inttoptr i32 %v2_10005f90 to i16*
  store i16 %v1_10005f90, i16* %v3_10005f90, align 2
  %v0_10005f94 = load i32, i32* @r3, align 4
  %v1_10005f94 = add i32 %v0_10005f94, 2
  %v0_10005f40.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005f40

dec_label_pc_10005f9c:                            ; preds = %dec_label_pc_10005f40
  %v0_10005f9c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f9c, i32* @global_var_1001ba94.97, align 4
  %v0_10005fa0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005fa0, i32* @global_var_1001ba90.99, align 4
  %v0_10005fa4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005fa4, i32* @global_var_1001ba8c.100, align 4
  store i32 %v0_10005f44, i32* @global_var_1001ba88.98, align 4
  br label %dec_label_pc_10005fac

dec_label_pc_10005fac:                            ; preds = %dec_label_pc_10005ef8.dec_label_pc_10005fac_crit_edge, %dec_label_pc_10005f9c
  %v0_10005fbc = phi i32 [ %v0_10005fbc.pre, %dec_label_pc_10005ef8.dec_label_pc_10005fac_crit_edge ], [ %storemerge, %dec_label_pc_10005f9c ]
  ret i32 %v0_10005fbc

dec_label_pc_10005fc0:                            ; preds = %dec_label_pc_10005f84
  store i32 %v2_10005f7c, i32* %r0.global-to-local, align 4
  store i32 %v0_10005fdc, i32* @global_var_1001ba8c.100, align 4
  store i32 %v0_10005fe0, i32* @global_var_1001ba90.99, align 4
  store i32 %v2_10005f7c, i32* @global_var_1001ba94.97, align 4
  store i32 %v0_10005ff8, i32* @global_var_1001ba88.98, align 4
  %v1_10005ffc = trunc i32 %v2_10005f7c to i8
  %v2_10005ffc = load i32, i32* @r3, align 4
  %v3_10005ffc = inttoptr i32 %v2_10005ffc to i8*
  store i8 %v1_10005ffc, i8* %v3_10005ffc, align 1
  %v0_10006000 = load i32, i32* @r3, align 4
  ret i32 %v0_10006000

; uselistorder directives
  uselistorder i32 %v2_10005f7c, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10005fc0, { 1, 0 }
  uselistorder i32 %v0_10005fe0, { 1, 2, 0 }
  uselistorder i32 %v0_10005ef8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10005fac, { 1, 0 }
  uselistorder label %dec_label_pc_10005f58, { 1, 0 }
}

define i32 @function_10006004() local_unnamed_addr {
dec_label_pc_10006004:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000600c = load i32, i32* @r31, align 4
  %v0_10006010 = load i32, i32* @r3, align 4
  store i32 %v0_10006010, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10006020 = add i32 %v0_10006010, 4
  %v2_10006020 = inttoptr i32 %v1_10006020 to i32*
  %v3_10006020 = load i32, i32* %v2_10006020, align 4
  %v3_10006028 = icmp eq i32 %v3_10006020, -1
  br i1 %v3_10006028, label %dec_label_pc_10006040, label %dec_label_pc_1000603c

dec_label_pc_1000603c:                            ; preds = %dec_label_pc_10006004
  store i32 268460096, i32* @lr, align 4
  %v0_1000603c = call i32 @function_10008884()
  br label %dec_label_pc_10006040

dec_label_pc_10006040:                            ; preds = %dec_label_pc_10006004, %dec_label_pc_1000603c
  store i32 268460112, i32* @lr, align 4
  %v3_1000604c = call i32 @function_100095d4(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10006058 = load i32, i32* @r31, align 4
  %v1_10006058 = add i32 %v0_10006058, 28
  store i32 %v1_10006058, i32* @r3, align 4
  %v3_1000605c = icmp eq i32 %v3_1000604c, -1
  %v2_10006060 = add i32 %v0_10006058, 4
  %v3_10006060 = inttoptr i32 %v2_10006060 to i32*
  store i32 %v3_1000604c, i32* %v3_10006060, align 4
  br i1 %v3_1000605c, label %dec_label_pc_10006040.dec_label_pc_100060d8_crit_edge, label %dec_label_pc_10006068

dec_label_pc_10006040.dec_label_pc_100060d8_crit_edge: ; preds = %dec_label_pc_10006040
  %v0_100060ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100060d8

dec_label_pc_10006068:                            ; preds = %dec_label_pc_10006040
  %v0_10006068 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006068 = load i32, i32* @r31, align 4
  %v2_10006068 = add i32 %v1_10006068, 24
  %v3_10006068 = inttoptr i32 %v2_10006068 to i32*
  store i32 %v0_10006068, i32* %v3_10006068, align 4
  store i32 268460144, i32* @lr, align 4
  %v0_1000606c = call i32 @function_1000816c()
  %v0_10006070 = load i32, i32* @r31, align 4
  %v1_10006070 = add i32 %v0_10006070, 4
  %v2_10006070 = inttoptr i32 %v1_10006070 to i32*
  %v3_10006070 = load i32, i32* %v2_10006070, align 4
  store i32 %v3_10006070, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268460168, i32* @lr, align 4
  %v2_10006084 = call i32 @function_1000879c(i32 %v3_10006070)
  store i32 4, i32* @r4, align 4
  store i32 268460188, i32* @lr, align 4
  %v2_10006098 = call i32 @function_1000879c(i32 %v3_10006070)
  %v3_100060a0 = load i32, i32* @global_var_1001ba24.101, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_100060a8 = load i32, i32* @r31, align 4
  %v2_100060b0 = add i32 %v0_100060a8, 8
  %v3_100060b0 = inttoptr i32 %v2_100060b0 to i32*
  store i32 %v3_100060a0, i32* %v3_100060b0, align 4
  %v0_100060b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100060b8 = load i32, i32* @r31, align 4
  %v2_100060b8 = add i32 %v1_100060b8, 12
  %v3_100060b8 = inttoptr i32 %v2_100060b8 to i32*
  store i32 %v0_100060b8, i32* %v3_100060b8, align 4
  %v0_100060c0 = load i32, i32* @r31, align 4
  %v1_100060c0 = add i32 %v0_100060c0, 4
  %v2_100060c0 = inttoptr i32 %v1_100060c0 to i32*
  %v3_100060c0 = load i32, i32* %v2_100060c0, align 4
  store i32 %v3_100060c0, i32* @r3, align 4
  %v1_100060c4 = add i32 %v0_100060c0, 16
  %v2_100060c4 = inttoptr i32 %v1_100060c4 to i32*
  %v3_100060c4 = load i32, i32* %v2_100060c4, align 4
  store i32 %v3_100060c4, i32* %r9.global-to-local, align 4
  store i32 268460248, i32* @lr, align 4
  %v0_100060d4 = call i32 @function_100093d4()
  br label %dec_label_pc_100060d8

dec_label_pc_100060d8:                            ; preds = %dec_label_pc_10006040.dec_label_pc_100060d8_crit_edge, %dec_label_pc_10006068
  %v0_100060ec = phi i32 [ %v0_100060ec.pre, %dec_label_pc_10006040.dec_label_pc_100060d8_crit_edge ], [ %v0_100060d4, %dec_label_pc_10006068 ]
  store i32 %v0_1000600c, i32* @r31, align 4
  ret i32 %v0_100060ec

; uselistorder directives
  uselistorder i32 ()* @function_1000816c, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100060d8, { 1, 0 }
  uselistorder label %dec_label_pc_10006040, { 1, 0 }
}

define i32 @function_100060f0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100060f0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100060f4 = load i32, i32* @lr, align 4
  store i32 %v0_100060f4, i32* %r0.global-to-local, align 4
  %v3_10006100 = load i32, i32* @global_var_1001ba18.102, align 4
  %v1_1000610c = mul i32 %v3_10006100, 16
  store i32 %v1_1000610c, i32* %r9.global-to-local, align 4
  %v0_10006110 = load i32, i32* @r28, align 4
  %v3_10006118 = load i32, i32* @global_var_1001ba1c.103, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10006124 = add i32 %v1_1000610c, 16
  %v0_1000613c = load i32, i32* @r29, align 4
  %v0_10006140 = load i32, i32* @r30, align 4
  store i32 268460364, i32* @lr, align 4
  %v3_10006148 = call i32 @function_10009aa0(i32 %v3_10006118, i32 %v1_10006124, i32 %v1_1000610c)
  store i32 %v3_10006148, i32* %r25.global-to-local, align 4
  %v0_10006150 = load i32, i32* @r28, align 4
  store i32 %v3_10006148, i32* @global_var_1001ba1c.103, align 4
  %v3_10006158 = load i32, i32* @global_var_1001ba18.102, align 4
  store i32 %v3_10006158, i32* %r24.global-to-local, align 4
  store i32 268460384, i32* @lr, align 4
  %v1_1000615c = inttoptr i32 %v0_10006150 to i8*
  %v2_1000615c = call i32 @function_100080c4(i8* %v1_1000615c)
  %sext = mul i32 %v2_1000615c, 16777216
  %v1_10006160 = sdiv i32 %sext, 16777216
  %v2_10006160 = add nsw i32 %v1_10006160, 1
  store i32 %v2_10006160, i32* @r29, align 4
  store i32 %v1_10006160, i32* @r30, align 4
  store i32 %v2_10006160, i32* @r3, align 4
  store i32 268460400, i32* @lr, align 4
  %v0_1000616c = call i32 @function_100097d8()
  %v0_10006170 = load i32, i32* @r28, align 4
  %v0_10006174 = load i32, i32* @r29, align 4
  store i32 %v0_1000616c, i32* %r31.global-to-local, align 4
  store i32 268460416, i32* @lr, align 4
  %v3_1000617c = call i32 @function_10008148(i32 %v0_10006170, i32 %v0_10006174, i32 %v0_10006174)
  %v0_10006180 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10006180, 1
  %extract.t6 = trunc i32 %v0_10006180 to i8
  br i1 %tmp21, label %dec_label_pc_100061a4, label %dec_label_pc_10006188

dec_label_pc_10006188:                            ; preds = %dec_label_pc_100060f0
  store i32 %v0_10006180, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006190

dec_label_pc_10006190:                            ; preds = %dec_label_pc_10006190, %dec_label_pc_10006188
  %v1_10006198 = phi i32 [ %v1_1000619c, %dec_label_pc_10006190 ], [ 0, %dec_label_pc_10006188 ]
  %v1_10006190 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006190 = add i32 %v1_10006190, %v1_10006198
  %v3_10006190 = inttoptr i32 %v2_10006190 to i8*
  %v4_10006190 = load i8, i8* %v3_10006190, align 1
  %v5_10006190 = zext i8 %v4_10006190 to i32
  %v1_10006194 = xor i32 %v5_10006190, 84
  store i32 %v1_10006194, i32* %r0.global-to-local, align 4
  %v3_10006198 = trunc i32 %v1_10006194 to i8
  store i8 %v3_10006198, i8* %v3_10006190, align 1
  %v0_1000619c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000619c = add i32 %v0_1000619c, 1
  store i32 %v1_1000619c, i32* %r9.global-to-local, align 4
  %v0_100061a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100061a0 = add i32 %v0_100061a0, -1
  store i32 %v1_100061a0, i32* %ctr.global-to-local, align 4
  %v2_100061a0 = icmp eq i32 %v1_100061a0, 0
  br i1 %v2_100061a0, label %dec_label_pc_100061a4.loopexit, label %dec_label_pc_10006190

dec_label_pc_100061a4.loopexit:                   ; preds = %dec_label_pc_10006190
  %v0_100061bc.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_100061bc.pre to i8
  br label %dec_label_pc_100061a4

dec_label_pc_100061a4:                            ; preds = %dec_label_pc_100061a4.loopexit, %dec_label_pc_100060f0
  %v0_100061bc.off0 = phi i8 [ %extract.t, %dec_label_pc_100061a4.loopexit ], [ %extract.t6, %dec_label_pc_100060f0 ]
  %v3_100061a4 = load i32, i32* @global_var_1001ba18.102, align 4
  %v0_100061a8 = load i32, i32* %r23.global-to-local, align 4
  %v3_100061ac = load i32, i32* @global_var_1001ba1c.103, align 4
  %v1_100061b0 = mul i32 %v3_100061a4, 16
  %v2_100061b4 = add i32 %v3_100061ac, %v1_100061b0
  store i32 %v2_100061b4, i32* %r9.global-to-local, align 4
  %v0_100061b8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100061b8 = mul i32 %v0_100061b8, 16
  store i32 %v1_100061b8, i32* %r0.global-to-local, align 4
  %v3_100061bc = add i32 %v2_100061b4, 12
  %v4_100061bc = inttoptr i32 %v3_100061bc to i8*
  store i8 %v0_100061bc.off0, i8* %v4_100061bc, align 1
  %v0_100061c0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100061c0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100061c0 = load i32, i32* %r0.global-to-local, align 4
  %v3_100061c0 = add i32 %v2_100061c0, %v1_100061c0
  %v4_100061c0 = inttoptr i32 %v3_100061c0 to i32*
  store i32 %v0_100061c0, i32* %v4_100061c0, align 4
  %v3_100061c4 = load i32, i32* @global_var_1001ba18.102, align 4
  store i32 %v3_100061c4, i32* @r30, align 4
  %v3_100061c8 = load i32, i32* @global_var_1001ba1c.103, align 4
  store i32 %v3_100061c8, i32* %r25.global-to-local, align 4
  store i32 268460496, i32* @lr, align 4
  %v1_100061cc = inttoptr i32 %v0_100061a8 to i8*
  %v2_100061cc = call i32 @function_100080c4(i8* %v1_100061cc)
  %sext1 = mul i32 %v2_100061cc, 16777216
  %v1_100061d0 = sdiv i32 %sext1, 16777216
  %v2_100061d0 = add nsw i32 %v1_100061d0, 1
  store i32 %v2_100061d0, i32* @r29, align 4
  store i32 %v1_100061d0, i32* @r28, align 4
  store i32 %v2_100061d0, i32* @r3, align 4
  store i32 268460512, i32* @lr, align 4
  %v0_100061dc = call i32 @function_100097d8()
  %v0_100061e0 = load i32, i32* %r23.global-to-local, align 4
  %v0_100061e4 = load i32, i32* @r29, align 4
  store i32 %v0_100061dc, i32* %r31.global-to-local, align 4
  store i32 268460528, i32* @lr, align 4
  %v3_100061ec = call i32 @function_10008148(i32 %v0_100061e0, i32 %v0_100061e4, i32 %v0_100061e4)
  %v0_100061f0 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_100061f0, 1
  %extract.t8 = trunc i32 %v0_100061f0 to i8
  br i1 %tmp22, label %dec_label_pc_10006214, label %dec_label_pc_100061f8

dec_label_pc_100061f8:                            ; preds = %dec_label_pc_100061a4
  store i32 %v0_100061f0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006200

dec_label_pc_10006200:                            ; preds = %dec_label_pc_10006200, %dec_label_pc_100061f8
  %v1_10006208 = phi i32 [ %v1_1000620c, %dec_label_pc_10006200 ], [ 0, %dec_label_pc_100061f8 ]
  %v1_10006200 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006200 = add i32 %v1_10006200, %v1_10006208
  %v3_10006200 = inttoptr i32 %v2_10006200 to i8*
  %v4_10006200 = load i8, i8* %v3_10006200, align 1
  %v5_10006200 = zext i8 %v4_10006200 to i32
  %v1_10006204 = xor i32 %v5_10006200, 84
  store i32 %v1_10006204, i32* %r0.global-to-local, align 4
  %v3_10006208 = trunc i32 %v1_10006204 to i8
  store i8 %v3_10006208, i8* %v3_10006200, align 1
  %v0_1000620c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000620c = add i32 %v0_1000620c, 1
  store i32 %v1_1000620c, i32* %r9.global-to-local, align 4
  %v0_10006210 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006210 = add i32 %v0_10006210, -1
  store i32 %v1_10006210, i32* %ctr.global-to-local, align 4
  %v2_10006210 = icmp eq i32 %v1_10006210, 0
  br i1 %v2_10006210, label %dec_label_pc_10006214.loopexit, label %dec_label_pc_10006200

dec_label_pc_10006214.loopexit:                   ; preds = %dec_label_pc_10006200
  %v0_10006228.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_10006228.pre to i8
  br label %dec_label_pc_10006214

dec_label_pc_10006214:                            ; preds = %dec_label_pc_10006214.loopexit, %dec_label_pc_100061a4
  %v0_10006228.off0 = phi i8 [ %extract.t7, %dec_label_pc_10006214.loopexit ], [ %extract.t8, %dec_label_pc_100061a4 ]
  %v3_10006214 = load i32, i32* @global_var_1001ba18.102, align 4
  %v3_1000621c = load i32, i32* @global_var_1001ba1c.103, align 4
  %v1_10006220 = mul i32 %v3_10006214, 16
  %v2_10006224 = or i32 %v1_10006220, 13
  %v3_10006228 = add i32 %v2_10006224, %v3_1000621c
  %v4_10006228 = inttoptr i32 %v3_10006228 to i8*
  store i8 %v0_10006228.off0, i8* %v4_10006228, align 1
  %v0_1000622c = load i32, i32* @r30, align 4
  %v1_1000622c = mul i32 %v0_1000622c, 16
  %v1_10006230 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006230 = add i32 %v1_10006230, %v1_1000622c
  store i32 %v2_10006230, i32* %r9.global-to-local, align 4
  %v3_10006234 = load i32, i32* @global_var_1001ba18.102, align 4
  %v3_10006238 = load i32, i32* @global_var_1001ba1c.103, align 4
  %v1_1000623c = mul i32 %v3_10006234, 16
  %v3_10006240 = load i16, i16* @global_var_1001ba20.104, align 2
  %v4_10006240 = zext i16 %v3_10006240 to i32
  store i32 %v4_10006240, i32* %r7.global-to-local, align 4
  %v2_10006244 = add i32 %v3_10006238, %v1_1000623c
  store i32 %v2_10006244, i32* %r11.global-to-local, align 4
  store i32 %v0_100060f4, i32* %r0.global-to-local, align 4
  %v1_1000624c = add i32 %v3_10006234, 1
  store i32 %v1_1000624c, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001ba20.104 to i32), i32* %r8.global-to-local, align 4
  %v0_10006254 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006254 = add i32 %v2_10006230, 4
  %v3_10006254 = inttoptr i32 %v2_10006254 to i32*
  store i32 %v0_10006254, i32* %v3_10006254, align 4
  %v0_1000625c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000625c, i32* @global_var_1001ba18.102, align 4
  store i32 %v0_10006110, i32* @r28, align 4
  store i32 %v0_1000613c, i32* @r29, align 4
  store i32 %v0_10006140, i32* @r30, align 4
  %v0_1000628c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000628c = trunc i32 %v0_1000628c to i16
  %v2_1000628c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000628c = add i32 %v2_1000628c, 10
  %v4_1000628c = inttoptr i32 %v3_1000628c to i16*
  store i16 %v1_1000628c, i16* %v4_1000628c, align 2
  %v0_10006290 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006290 = trunc i32 %v0_10006290 to i16
  %v2_10006290 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006290 = add i32 %v2_10006290, 8
  %v4_10006290 = inttoptr i32 %v3_10006290 to i16*
  store i16 %v1_10006290, i16* %v4_10006290, align 2
  %v0_10006294 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006294 = trunc i32 %v0_10006294 to i16
  store i16 %v1_10006294, i16* @global_var_1001ba20.104, align 2
  ret i32 %v3_100061ec

; uselistorder directives
  uselistorder i32 %v3_10006234, { 1, 0 }
  uselistorder i32 %v1_10006210, { 1, 0 }
  uselistorder i32 %v1_1000620c, { 1, 0 }
  uselistorder i32 %v0_100061f0, { 1, 0, 2 }
  uselistorder i32 %v1_100061a0, { 1, 0 }
  uselistorder i32 %v1_1000619c, { 1, 0 }
  uselistorder i32 %v0_10006180, { 1, 0, 2 }
  uselistorder i32 %v1_1000610c, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_100080c4, { 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32, i32, i32)* @function_10009aa0, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1000629c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000629c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i16 @__decompiler_undefined_function_1()
  %tmp56 = call i8 @__decompiler_undefined_function_2()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_1000629c = load i32, i32* @lr, align 4
  store i32 %v0_1000629c, i32* %r0.global-to-local, align 4
  %v0_100062a4 = call i32 @__asm_mfcr()
  store i32 %v0_100062a4, i32* %r3.global-to-local, align 4
  %v0_100062a8 = load i32, i32* %r14.global-to-local, align 4
  %v0_100062d0 = load i32, i32* @r24, align 4
  %v0_100062dc = load i32, i32* @r27, align 4
  %v0_100062e0 = load i32, i32* @r28, align 4
  %v0_100062e4 = load i32, i32* @r29, align 4
  %v0_100062e8 = load i32, i32* @r30, align 4
  %v0_100062f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 268460796, i32* @lr, align 4
  %v0_100062f8 = call i32 @function_100088cc()
  store i32 %v0_100062f8, i32* %r3.global-to-local, align 4
  %v1_100062fc = icmp slt i32 %v0_100062f8, 0
  %v3_100062fc = icmp eq i32 %v0_100062f8, 0
  store i1 %v1_100062fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062fc, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100062f8, i32* @global_var_1001ba30.105, align 4
  %tmp98 = icmp slt i32 %v0_100062f8, 1
  br i1 %tmp98, label %dec_label_pc_1000636c, label %dec_label_pc_1000630c

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_1000629c, %dec_label_pc_1000636c
  store i32 %v0_100062f0, i32* %r0.global-to-local, align 4
  store i32 %v0_100062a8, i32* %r14.global-to-local, align 4
  %v1_10006320 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100062a4)
  store i32 %v0_100062d0, i32* @r24, align 4
  store i32 %v0_100062dc, i32* %r27.global-to-local, align 4
  store i32 %v0_100062e0, i32* @r28, align 4
  store i32 %v0_100062e4, i32* @r29, align 4
  store i32 %v0_100062e8, i32* @r30, align 4
  ret i32 %v0_100062f8

dec_label_pc_1000636c:                            ; preds = %dec_label_pc_1000629c
  %v1_1000636c = icmp slt i32 %v0_100062f8, -1
  %v3_1000636c = icmp eq i32 %v0_100062f8, -1
  store i1 %v1_1000636c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000636c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000636c, label %dec_label_pc_1000630c, label %dec_label_pc_10006374

dec_label_pc_10006374:                            ; preds = %dec_label_pc_1000636c
  store i32 268460920, i32* @lr, align 4
  %v1_10006374 = call i32 @function_100083c8(i32 %v0_100062f8)
  store i32 %v1_10006374, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10006374, i32* @global_var_1001ba00.14, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006384.106 to i32), i32* @lr, align 4
  %v1_10006380 = call i32 @function_10005d74(i32 %v1_10006374)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268460944, i32* @lr, align 4
  %v0_1000638c = call i32 @function_10008c54()
  store i32 %v0_1000638c, i32* @global_var_1001ba24.101, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100063a0.107 to i32), i32* @lr, align 4
  %v2_1000639c = call i32 @function_10009930(i32 256, i32 288)
  store i32 %v2_1000639c, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_1000639c, i32* @global_var_1001ba28.108, align 4
  store i32 %v2_1000639c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100063cc = add i32 %v2_1000639c, 4
  store i32 %v1_100063cc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100063d0

dec_label_pc_100063d0:                            ; preds = %dec_label_pc_100063d0.dec_label_pc_100063d0_crit_edge, %dec_label_pc_10006374
  %v1_100063e4 = phi i32 [ %v1_100063ec, %dec_label_pc_100063d0.dec_label_pc_100063d0_crit_edge ], [ %v1_100063cc, %dec_label_pc_10006374 ]
  %v0_100063e4 = phi i32 [ %v0_100063e4.pre, %dec_label_pc_100063d0.dec_label_pc_100063d0_crit_edge ], [ -1, %dec_label_pc_10006374 ]
  %v1_100063e0 = phi i32 [ %v1_100063e0.pre, %dec_label_pc_100063d0.dec_label_pc_100063d0_crit_edge ], [ %v2_1000639c, %dec_label_pc_10006374 ]
  %v0_100063dc = phi i32 [ %v0_100063f0, %dec_label_pc_100063d0.dec_label_pc_100063d0_crit_edge ], [ 0, %dec_label_pc_10006374 ]
  %v1_100063d0 = mul i32 %v0_100063dc, 256
  store i32 %v1_100063d0, i32* %r0.global-to-local, align 4
  %v2_100063d8 = mul i32 %v0_100063dc, 288
  %v1_100063dc = add i32 %v0_100063dc, 1
  store i32 %v1_100063dc, i32* %r10.global-to-local, align 4
  %v2_100063e0 = add i32 %v2_100063d8, %v1_100063e0
  store i32 %v2_100063e0, i32* %r9.global-to-local, align 4
  %v2_100063e4 = inttoptr i32 %v1_100063e4 to i32*
  store i32 %v0_100063e4, i32* %v2_100063e4, align 4
  %v0_100063e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100063e8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063e8 = add i32 %v1_100063e8, 12
  %v3_100063e8 = inttoptr i32 %v2_100063e8 to i32*
  store i32 %v0_100063e8, i32* %v3_100063e8, align 4
  %v0_100063ec = load i32, i32* %r11.global-to-local, align 4
  %v1_100063ec = add i32 %v0_100063ec, 288
  store i32 %v1_100063ec, i32* %r11.global-to-local, align 4
  %v0_100063f0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100063f0, i32* %r9.global-to-local, align 4
  %v0_100063f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100063f4 = add i32 %v0_100063f4, -1
  store i32 %v1_100063f4, i32* %ctr.global-to-local, align 4
  %v2_100063f4 = icmp eq i32 %v1_100063f4, 0
  br i1 %v2_100063f4, label %dec_label_pc_100063f8, label %dec_label_pc_100063d0.dec_label_pc_100063d0_crit_edge

dec_label_pc_100063d0.dec_label_pc_100063d0_crit_edge: ; preds = %dec_label_pc_100063d0
  %v1_100063e0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100063e4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100063d0

dec_label_pc_100063f8:                            ; preds = %dec_label_pc_100063d0
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 256, i64* %stack_var_-1916, align 8
  store i32 268461072, i32* @lr, align 4
  %v3_1000640c = call i32 @function_100095d4(i32 2, i32 3, i32 6)
  %v4_1000640c = trunc i32 %v3_1000640c to i16
  store i32 %v3_1000640c, i32* %r3.global-to-local, align 4
  %v2_10006410 = icmp slt i16 %v4_1000640c, -1
  %v4_10006410 = icmp eq i16 %v4_1000640c, -1
  store i1 %v2_10006410, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006410, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000640c, i32* %r29.global-to-local, align 4
  store i32 %v3_1000640c, i32* @global_var_1001ba2c.109, align 4
  br i1 %v4_10006410, label %dec_label_pc_10006a30, label %dec_label_pc_10006424

dec_label_pc_10006424:                            ; preds = %dec_label_pc_100063f8
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268461108, i32* @lr, align 4
  %v1_10006430 = call i32 @function_1000879c(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006438 = or i32 %v1_10006430, 2048
  store i32 %v1_10006438, i32* %r5.global-to-local, align 4
  %v0_1000643c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000643c, i32* %r3.global-to-local, align 4
  store i32 268461128, i32* @lr, align 4
  %v2_10006444 = call i32 @function_1000879c(i32 %v0_1000643c)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000644c = load i32, i32* @global_var_1001ba2c.109, align 4
  store i32 %v3_1000644c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_1000645c = ptrtoint i64* %stack_var_-1916 to i32
  store i32 %v2_1000645c, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268461164, i32* @lr, align 4
  %v5_10006468 = call i32 @function_10009598(i32 %v3_1000644c, i32 0, i32 3, i32 %v2_1000645c)
  store i32 %v5_10006468, i32* %r3.global-to-local, align 4
  %v1_1000646c = icmp slt i32 %v5_10006468, 0
  %v3_1000646c = icmp eq i32 %v5_10006468, 0
  store i1 %v1_1000646c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000646c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000646c, label %dec_label_pc_10006474, label %dec_label_pc_10007a00

dec_label_pc_10006474:                            ; preds = %dec_label_pc_10006424, %dec_label_pc_10006474
  %v0_10006474 = call i32 @function_10005d24()
  store i32 %v0_10006474, i32* %r3.global-to-local, align 4
  %v1_10006478 = urem i32 %v0_10006474, 65536
  store i32 %v1_10006478, i32* @r22, align 4
  %v1_1000647c = icmp ult i32 %v1_10006478, 1023
  %v3_1000647c = icmp eq i32 %v1_10006478, 1023
  store i1 %v1_1000647c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000647c, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = icmp ult i32 %v1_10006478, 1024
  br i1 %tmp99, label %dec_label_pc_10006474, label %dec_label_pc_10006484

dec_label_pc_10006484:                            ; preds = %dec_label_pc_10006474
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_1000648c = load i32, i32* @global_var_1001ba98.110, align 4
  store i32 %v3_1000648c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001ba98.110 to i32), i32* @r23, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001baac.111 to i32), i32* @r24, align 4
  %v1_1000649c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000649c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_100064a4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100064a4, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_100064a4, i32* @global_var_1001ba98.110, align 4
  store i32 ptrtoint (i32* @global_var_1000b35c.112 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001ba9a.113 to i16*), align 4
  %v0_100064b8 = call i32 @function_10005d24()
  %v1_100064b8 = trunc i32 %v0_100064b8 to i16
  store i32 %v0_100064b8, i32* %r3.global-to-local, align 4
  %v3_100064bc = load i32, i32* @global_var_1001bab8.114, align 4
  store i32 %v3_100064bc, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001baa0.115 to i8*), align 4
  %v1_100064cc = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_100064cc, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_100064d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100064d4 = trunc i32 %v0_100064d4 to i8
  store i8 %v1_100064d4, i8* bitcast (i32* @global_var_1001baa1.116 to i8*), align 4
  store i16 %v1_100064b8, i16* bitcast (i32* @global_var_1001ba9c.117 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000b358.118 to i32), i32* @r29, align 4
  store i32 %v1_100064cc, i32* @global_var_1001bab8.114, align 4
  store i16 23, i16* @global_var_1001baae.119, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_1000b2f0.120 to i32), i32* @r27, align 4
  %v0_100064f4 = load i32, i32* @r22, align 4
  %v1_100064f4 = trunc i32 %v0_100064f4 to i16
  store i16 %v1_100064f4, i16* bitcast (i32* @global_var_1001baac.111 to i16*), align 4
  %v2_100064f8 = ptrtoint i32* %stack_var_-1928 to i32
  store i32 %v2_100064f8, i32* %r14.global-to-local, align 4
  %v0_100064fc = call i32 @function_10005d24()
  %v1_100064fc = trunc i32 %v0_100064fc to i16
  %v0_10006500 = load i32, i32* @r28, align 4
  store i16 %v1_100064fc, i16* bitcast (i32* @global_var_1001baba.121 to i16*), align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_1000650c = load i32, i32* @r29, align 4
  store i32 %v0_1000650c, i32* %r3.global-to-local, align 4
  %v3_10006510 = load i32, i32* @global_var_1001bab8.114, align 4
  %v1_10006514 = or i32 %v3_10006510, 131072
  store i32 %v1_10006514, i32* %r0.global-to-local, align 4
  store i32 %v1_10006514, i32* @global_var_1001bab8.114, align 4
  store i32 268461344, i32* @lr, align 4
  %v4_1000651c = call i32 @function_100060f0(i32 %v0_1000650c, i32 %v0_10006500, i32 4)
  %v0_10006524 = load i32, i32* @r29, align 4
  store i32 %v0_10006524, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268461364, i32* @lr, align 4
  %v5_10006530 = call i32 @function_100060f0(i32 %v0_10006524, i32 ptrtoint ([5 x i8]* @global_var_1000b2d4.122 to i32), i32 8)
  %v0_10006538 = load i32, i32* @r29, align 4
  store i32 %v0_10006538, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461384, i32* @lr, align 4
  %v5_10006544 = call i32 @function_100060f0(i32 %v0_10006538, i32 ptrtoint ([9 x i8]* @global_var_1000b2dc.123 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_1000b2e8.124 to i32), i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461404, i32* @lr, align 4
  %v4_10006558 = call i32 @function_100060f0(i32 ptrtoint ([7 x i8]* @global_var_1000b2e8.124 to i32), i32 12, i32 12)
  %v0_1000655c = load i32, i32* @r28, align 4
  %v0_10006560 = load i32, i32* @r27, align 4
  store i32 %v0_10006560, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461420, i32* @lr, align 4
  %v4_10006568 = call i32 @function_100060f0(i32 %v0_10006560, i32 %v0_1000655c, i32 7)
  %v0_10006570 = load i32, i32* @r29, align 4
  store i32 %v0_10006570, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r28, align 4
  store i32 268461444, i32* @lr, align 4
  %v5_10006580 = call i32 @function_100060f0(i32 %v0_10006570, i32 ptrtoint ([9 x i8]* @global_var_1000b2f8.125 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1000b304.126 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000b32c.127 to i32), i32* @r28, align 4
  store i32 268461468, i32* @lr, align 4
  %v4_10006598 = call i32 @function_100060f0(i32 ptrtoint ([6 x i8]* @global_var_1000b304.126 to i32), i32 10, i32 10)
  %v0_100065a0 = load i32, i32* @r29, align 4
  store i32 %v0_100065a0, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461488, i32* @lr, align 4
  %v5_100065ac = call i32 @function_100060f0(i32 %v0_100065a0, i32 ptrtoint ([6 x i8]* @global_var_1000b30c.128 to i32), i32 9)
  store i32 ptrtoint ([8 x i8]* @global_var_1000b314.129 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268461508, i32* @lr, align 4
  %v4_100065c0 = call i32 @function_100060f0(i32 ptrtoint ([8 x i8]* @global_var_1000b314.129 to i32), i32 14, i32 14)
  %v0_100065c4 = load i32, i32* @r29, align 4
  store i32 %v0_100065c4, i32* %r3.global-to-local, align 4
  %v0_100065c8 = load i32, i32* @r27, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268461524, i32* @lr, align 4
  %v5_100065d0 = call i32 @function_100060f0(i32 %v0_100065c4, i32 %v0_100065c8, i32 11)
  %v0_100065d8 = load i32, i32* @r29, align 4
  store i32 %v0_100065d8, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268461544, i32* @lr, align 4
  %v4_100065e4 = call i32 @function_100060f0(i32 %v0_100065d8, i32 ptrtoint (i32* @global_var_1000b31c.130 to i32), i32 17)
  %v0_100065e8 = load i32, i32* @r29, align 4
  store i32 %v0_100065e8, i32* %r3.global-to-local, align 4
  %v0_100065f0 = load i32, i32* @r28, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000b334.131 to i32), i32* @r29, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461568, i32* @lr, align 4
  %v5_100065fc = call i32 @function_100060f0(i32 %v0_100065e8, i32 %v0_100065f0, i32 9)
  store i32 8, i32* %r5.global-to-local, align 4
  %v0_10006604 = load i32, i32* @r29, align 4
  store i32 %v0_10006604, i32* %r3.global-to-local, align 4
  store i32 268461584, i32* @lr, align 4
  %v5_1000660c = call i32 @function_100060f0(i32 %v0_10006604, i32 %v0_10006604, i32 8)
  %v0_10006610 = load i32, i32* @r29, align 4
  store i32 %v0_10006610, i32* %r3.global-to-local, align 4
  %v0_10006614 = load i32, i32* @r28, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461600, i32* @lr, align 4
  %v5_1000661c = call i32 @function_100060f0(i32 %v0_10006610, i32 %v0_10006614, i32 9)
  %v0_10006628 = load i32, i32* @r27, align 4
  store i32 %v0_10006628, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268461620, i32* @lr, align 4
  %v4_10006630 = call i32 @function_100060f0(i32 %v0_10006628, i32 ptrtoint (i32* @global_var_1000b33c.132 to i32), i32 15)
  %v0_10006638 = load i32, i32* @r27, align 4
  store i32 %v0_10006638, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268461640, i32* @lr, align 4
  %v4_10006644 = call i32 @function_100060f0(i32 %v0_10006638, i32 ptrtoint (i32* @global_var_1000b348.133 to i32), i32 15)
  store i32 %v4_10006644, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006648

dec_label_pc_10006648:                            ; preds = %dec_label_pc_10006c90, %dec_label_pc_10006484
  %v3_10006648 = load i32, i32* @global_var_1001ba24.101, align 4
  store i32 %v3_10006648, i32* @r31, align 4
  %v0_1000664c = load i32, i32* @r25, align 4
  %v2_1000664c = icmp slt i32 %v0_1000664c, %v3_10006648
  %v4_1000664c = icmp eq i32 %v0_1000664c, %v3_10006648
  store i1 %v2_1000664c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000664c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000664c, label %dec_label_pc_1000686c, label %dec_label_pc_10006654

dec_label_pc_10006654:                            ; preds = %dec_label_pc_10006648
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006658 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10006658, i32* %r28.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006668

dec_label_pc_10006668:                            ; preds = %dec_label_pc_10006798.dec_label_pc_10006668_crit_edge, %dec_label_pc_10006654
  %v0_10006668 = phi i32 [ %v0_10006668.pre, %dec_label_pc_10006798.dec_label_pc_10006668_crit_edge ], [ 0, %dec_label_pc_10006654 ]
  store i32 %v0_10006668, i32* %stack_var_-1888, align 4
  %v0_10006678 = call i32 @function_10005d24()
  %v1_10006678 = trunc i32 %v0_10006678 to i16
  store i32 %v0_10006678, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_10006678, i16* bitcast (i32* @global_var_1001ba9c.117 to i16*), align 4
  %v3_10006684 = load i32, i32* @global_var_1001ba00.14, align 4
  store i32 %v3_10006684, i32* %r0.global-to-local, align 4
  store i32 %v3_10006684, i32* @global_var_1001baa4.134, align 4
  br label %dec_label_pc_1000668c.preheader

dec_label_pc_1000668c.preheader:                  ; preds = %dec_label_pc_10006668, %dec_label_pc_10006a38
  br label %dec_label_pc_1000668c

dec_label_pc_1000668c:                            ; preds = %dec_label_pc_10006ad4, %dec_label_pc_10006ac8, %dec_label_pc_10006abc, %dec_label_pc_10006ab0, %dec_label_pc_10006aa4, %dec_label_pc_10006a9c, %dec_label_pc_10006a94, %dec_label_pc_10006a8c, %dec_label_pc_10006a80, %dec_label_pc_10006a6c, %dec_label_pc_10006a60, %dec_label_pc_10006a4c, %dec_label_pc_10006790, %dec_label_pc_10006788, %dec_label_pc_10006780, %dec_label_pc_10006778, %dec_label_pc_10006770, %dec_label_pc_10006768, %dec_label_pc_10006760, %dec_label_pc_10006758, %dec_label_pc_10006750, %dec_label_pc_10006748, %dec_label_pc_10006740, %dec_label_pc_10006730, %dec_label_pc_10006700, %dec_label_pc_100066d0, %dec_label_pc_100066c8, %dec_label_pc_100066b8, %dec_label_pc_100066b0, %dec_label_pc_100066a8, %dec_label_pc_1000668c, %dec_label_pc_1000668c.preheader
  %v0_1000668c = call i32 @function_10005d24()
  store i32 %v0_1000668c, i32* %r3.global-to-local, align 4
  %v1_10006690 = urem i32 %v0_1000668c, 256
  store i32 %v1_10006690, i32* %r11.global-to-local, align 4
  %v1_10006694 = udiv i32 %v0_1000668c, 16777216
  store i32 %v1_10006694, i32* %r10.global-to-local, align 4
  %v1_10006698 = icmp ult i32 %v1_10006690, 127
  %v3_10006698 = icmp eq i32 %v1_10006690, 127
  store i1 %v1_10006698, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006698, i1* %cr7_eq.global-to-local, align 1
  %v1_1000669c = call i32 @__asm_rlwinm(i32 %v0_1000668c, i32 24, i32 24, i32 31)
  store i32 %v1_1000669c, i32* @r9, align 4
  %v1_100066a0 = call i32 @__asm_rlwinm(i32 %v0_1000668c, i32 16, i32 24, i32 31)
  store i32 %v1_100066a0, i32* %r3.global-to-local, align 4
  %v0_100066a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100066a4, label %dec_label_pc_1000668c, label %dec_label_pc_100066a8

dec_label_pc_100066a8:                            ; preds = %dec_label_pc_1000668c
  %v0_100066a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100066a8 = icmp slt i32 %v0_100066a8, 0
  %v3_100066a8 = icmp eq i32 %v0_100066a8, 0
  store i1 %v1_100066a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066a8, label %dec_label_pc_1000668c, label %dec_label_pc_100066b0

dec_label_pc_100066b0:                            ; preds = %dec_label_pc_100066a8
  %v1_100066b0 = icmp slt i32 %v0_100066a8, 3
  %v3_100066b0 = icmp eq i32 %v0_100066a8, 3
  store i1 %v1_100066b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066b0, label %dec_label_pc_1000668c, label %dec_label_pc_100066b8

dec_label_pc_100066b8:                            ; preds = %dec_label_pc_100066b0
  %v1_100066b8 = add i32 %v0_100066a8, 241
  %v1_100066bc = urem i32 %v1_100066b8, 256
  store i32 %v1_100066bc, i32* %r0.global-to-local, align 4
  %v1_100066c0 = icmp eq i32 %v1_100066bc, 0
  %v3_100066c0 = icmp eq i32 %v1_100066bc, 1
  store i1 %v1_100066c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c0, i1* %cr7_eq.global-to-local, align 1
  %tmp100 = or i32 %v1_100066bc, 1
  %tmp101 = icmp eq i32 %tmp100, 1
  br i1 %tmp101, label %dec_label_pc_1000668c, label %dec_label_pc_100066c8

dec_label_pc_100066c8:                            ; preds = %dec_label_pc_100066b8
  %v1_100066c8 = icmp slt i32 %v0_100066a8, 56
  %v3_100066c8 = icmp eq i32 %v0_100066a8, 56
  store i1 %v1_100066c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c8, label %dec_label_pc_1000668c, label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066c8
  %v1_100066d0 = icmp slt i32 %v0_100066a8, 10
  %v3_100066d0 = icmp eq i32 %v0_100066a8, 10
  store i1 %v1_100066d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066d0, label %dec_label_pc_1000668c, label %dec_label_pc_100066d8

dec_label_pc_100066d8:                            ; preds = %dec_label_pc_100066d0
  %v1_100066d8 = icmp slt i32 %v0_100066a8, 192
  %v3_100066d8 = icmp eq i32 %v0_100066a8, 192
  store i1 %v1_100066d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066d8, label %dec_label_pc_10006a38, label %dec_label_pc_100066e0

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_100066d8
  %v1_100066e0 = icmp slt i32 %v0_100066a8, 172
  %v3_100066e0 = icmp eq i32 %v0_100066a8, 172
  store i1 %v1_100066e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066e0, label %dec_label_pc_10006a44, label %dec_label_pc_100066e8

dec_label_pc_100066e8:                            ; preds = %dec_label_pc_100066e0
  %v1_100066e8 = icmp slt i32 %v0_100066a8, 100
  %v3_100066e8 = icmp eq i32 %v0_100066a8, 100
  store i1 %v1_100066e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066e8, label %dec_label_pc_10006a58, label %dec_label_pc_100066f0

dec_label_pc_100066f0:                            ; preds = %dec_label_pc_100066e8
  %v1_100066f0 = icmp slt i32 %v0_100066a8, 169
  %v3_100066f0 = icmp eq i32 %v0_100066a8, 169
  store i1 %v1_100066f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066f0, label %dec_label_pc_10006a6c, label %dec_label_pc_100066f8

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_100066f0
  %v1_100066f8 = icmp slt i32 %v0_100066a8, 198
  %v3_100066f8 = icmp eq i32 %v0_100066a8, 198
  store i1 %v1_100066f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066f8, label %dec_label_pc_10006a78, label %dec_label_pc_10006700

dec_label_pc_10006700:                            ; preds = %dec_label_pc_100066f8
  %v1_10006700 = icmp ult i32 %v0_100066a8, 223
  %v2_10006700 = icmp ugt i32 %v0_100066a8, 223
  %v3_10006700 = icmp eq i32 %v0_100066a8, 223
  store i1 %v1_10006700, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006700, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006700, label %dec_label_pc_1000668c, label %dec_label_pc_10006708

dec_label_pc_10006708:                            ; preds = %dec_label_pc_10006700
  %v1_10006708 = icmp slt i32 %v0_100066a8, 106
  %v3_10006708 = icmp eq i32 %v0_100066a8, 106
  store i1 %v1_10006708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006708, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006708, label %dec_label_pc_10006a8c, label %dec_label_pc_10006710

dec_label_pc_10006710:                            ; preds = %dec_label_pc_10006708
  %v1_10006710 = icmp slt i32 %v0_100066a8, 150
  %v3_10006710 = icmp eq i32 %v0_100066a8, 150
  store i1 %v1_10006710, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006710, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006710, label %dec_label_pc_10006ab0, label %dec_label_pc_10006718

dec_label_pc_10006718:                            ; preds = %dec_label_pc_10006710
  %v1_10006718 = icmp slt i32 %v0_100066a8, 49
  %v3_10006718 = icmp eq i32 %v0_100066a8, 49
  store i1 %v1_10006718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006718, label %dec_label_pc_10006abc, label %dec_label_pc_10006720

dec_label_pc_10006720:                            ; preds = %dec_label_pc_10006718
  %v1_10006720 = icmp slt i32 %v0_100066a8, 178
  %v3_10006720 = icmp eq i32 %v0_100066a8, 178
  store i1 %v1_10006720, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006720, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006720, label %dec_label_pc_10006ac8, label %dec_label_pc_10006728

dec_label_pc_10006728:                            ; preds = %dec_label_pc_10006720
  %v1_10006728 = icmp slt i32 %v0_100066a8, 160
  %v3_10006728 = icmp eq i32 %v0_100066a8, 160
  store i1 %v1_10006728, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006728, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006728, label %dec_label_pc_10006ad4, label %dec_label_pc_10006730

dec_label_pc_10006730:                            ; preds = %dec_label_pc_10006728
  %v1_10006730 = add i32 %v0_100066a8, 250
  %v1_10006734 = urem i32 %v1_10006730, 256
  store i32 %v1_10006734, i32* %r0.global-to-local, align 4
  %v1_10006738 = icmp eq i32 %v1_10006734, 0
  %v3_10006738 = icmp eq i32 %v1_10006734, 1
  store i1 %v1_10006738, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006738, i1* %cr7_eq.global-to-local, align 1
  %tmp102 = or i32 %v1_10006734, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %dec_label_pc_1000668c, label %dec_label_pc_10006740

dec_label_pc_10006740:                            ; preds = %dec_label_pc_10006730
  %v1_10006740 = icmp slt i32 %v0_100066a8, 11
  %v3_10006740 = icmp eq i32 %v0_100066a8, 11
  store i1 %v1_10006740, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006740, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006740, label %dec_label_pc_1000668c, label %dec_label_pc_10006748

dec_label_pc_10006748:                            ; preds = %dec_label_pc_10006740
  %v1_10006748 = icmp slt i32 %v0_100066a8, 21
  %v3_10006748 = icmp eq i32 %v0_100066a8, 21
  store i1 %v1_10006748, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006748, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006748, label %dec_label_pc_1000668c, label %dec_label_pc_10006750

dec_label_pc_10006750:                            ; preds = %dec_label_pc_10006748
  %v1_10006750 = icmp slt i32 %v0_100066a8, 22
  %v3_10006750 = icmp eq i32 %v0_100066a8, 22
  store i1 %v1_10006750, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006750, label %dec_label_pc_1000668c, label %dec_label_pc_10006758

dec_label_pc_10006758:                            ; preds = %dec_label_pc_10006750
  %v1_10006758 = icmp slt i32 %v0_100066a8, 26
  %v3_10006758 = icmp eq i32 %v0_100066a8, 26
  store i1 %v1_10006758, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006758, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006758, label %dec_label_pc_1000668c, label %dec_label_pc_10006760

dec_label_pc_10006760:                            ; preds = %dec_label_pc_10006758
  %v1_10006760 = icmp slt i32 %v0_100066a8, 28
  %v3_10006760 = icmp eq i32 %v0_100066a8, 28
  store i1 %v1_10006760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006760, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006760, label %dec_label_pc_1000668c, label %dec_label_pc_10006768

dec_label_pc_10006768:                            ; preds = %dec_label_pc_10006760
  %v1_10006768 = icmp slt i32 %v0_100066a8, 29
  %v3_10006768 = icmp eq i32 %v0_100066a8, 29
  store i1 %v1_10006768, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006768, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006768, label %dec_label_pc_1000668c, label %dec_label_pc_10006770

dec_label_pc_10006770:                            ; preds = %dec_label_pc_10006768
  %v1_10006770 = icmp slt i32 %v0_100066a8, 30
  %v3_10006770 = icmp eq i32 %v0_100066a8, 30
  store i1 %v1_10006770, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006770, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006770, label %dec_label_pc_1000668c, label %dec_label_pc_10006778

dec_label_pc_10006778:                            ; preds = %dec_label_pc_10006770
  %v1_10006778 = icmp slt i32 %v0_100066a8, 33
  %v3_10006778 = icmp eq i32 %v0_100066a8, 33
  store i1 %v1_10006778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006778, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006778, label %dec_label_pc_1000668c, label %dec_label_pc_10006780

dec_label_pc_10006780:                            ; preds = %dec_label_pc_10006778
  %v1_10006780 = icmp slt i32 %v0_100066a8, 55
  %v3_10006780 = icmp eq i32 %v0_100066a8, 55
  store i1 %v1_10006780, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006780, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006780, label %dec_label_pc_1000668c, label %dec_label_pc_10006788

dec_label_pc_10006788:                            ; preds = %dec_label_pc_10006780
  %v1_10006788 = icmp slt i32 %v0_100066a8, 214
  %v3_10006788 = icmp eq i32 %v0_100066a8, 214
  store i1 %v1_10006788, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006788, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006788, label %dec_label_pc_1000668c, label %dec_label_pc_10006790

dec_label_pc_10006790:                            ; preds = %dec_label_pc_10006788
  %v1_10006790 = icmp slt i32 %v0_100066a8, 215
  %v3_10006790 = icmp eq i32 %v0_100066a8, 215
  store i1 %v1_10006790, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006790, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006790, label %dec_label_pc_1000668c, label %dec_label_pc_10006790.dec_label_pc_10006798.loopexit_crit_edge

dec_label_pc_10006790.dec_label_pc_10006798.loopexit_crit_edge: ; preds = %dec_label_pc_10006790
  %v0_1000679c.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006798

dec_label_pc_10006798:                            ; preds = %dec_label_pc_10006ad4, %dec_label_pc_10006ac8, %dec_label_pc_10006abc, %dec_label_pc_10006ab0, %dec_label_pc_10006aa4, %dec_label_pc_10006a80, %dec_label_pc_10006a6c, %dec_label_pc_10006a60, %dec_label_pc_10006a4c, %dec_label_pc_10006a78, %dec_label_pc_10006a58, %dec_label_pc_10006a44, %dec_label_pc_10006790.dec_label_pc_10006798.loopexit_crit_edge, %dec_label_pc_10006a38.dec_label_pc_10006798_crit_edge
  %v0_100067a4 = phi i32 [ %v0_100067a415, %dec_label_pc_10006a38.dec_label_pc_10006798_crit_edge ], [ %v1_100066a0, %dec_label_pc_10006790.dec_label_pc_10006798.loopexit_crit_edge ], [ %v1_100066a0, %dec_label_pc_10006a44 ], [ %v1_100066a0, %dec_label_pc_10006a58 ], [ %v1_100066a0, %dec_label_pc_10006a78 ], [ %v1_100066a0, %dec_label_pc_10006a4c ], [ %v1_100066a0, %dec_label_pc_10006a60 ], [ %v1_100066a0, %dec_label_pc_10006a6c ], [ %v1_100066a0, %dec_label_pc_10006a80 ], [ %v1_100066a0, %dec_label_pc_10006aa4 ], [ %v1_100066a0, %dec_label_pc_10006ab0 ], [ %v1_100066a0, %dec_label_pc_10006abc ], [ %v1_100066a0, %dec_label_pc_10006ac8 ], [ %v1_100066a0, %dec_label_pc_10006ad4 ]
  %v0_1000679c = phi i32 [ %v0_10006a38, %dec_label_pc_10006a38.dec_label_pc_10006798_crit_edge ], [ %v0_1000679c.pre.pre, %dec_label_pc_10006790.dec_label_pc_10006798.loopexit_crit_edge ], [ %v0_10006a44, %dec_label_pc_10006a44 ], [ %v0_10006a58, %dec_label_pc_10006a58 ], [ %v0_10006a78, %dec_label_pc_10006a78 ], [ %v0_10006a44, %dec_label_pc_10006a4c ], [ %v0_10006a58, %dec_label_pc_10006a60 ], [ %v0_10006a6c, %dec_label_pc_10006a6c ], [ %v0_10006a78, %dec_label_pc_10006a80 ], [ %v0_10006a8c, %dec_label_pc_10006aa4 ], [ %v0_10006ab0, %dec_label_pc_10006ab0 ], [ %v0_10006abc, %dec_label_pc_10006abc ], [ %v0_10006ac8, %dec_label_pc_10006ac8 ], [ %v0_10006ad4, %dec_label_pc_10006ad4 ]
  %v0_10006798 = phi i32 [ %v0_10006798.pre, %dec_label_pc_10006a38.dec_label_pc_10006798_crit_edge ], [ %v0_100066a8, %dec_label_pc_10006790.dec_label_pc_10006798.loopexit_crit_edge ], [ 172, %dec_label_pc_10006a44 ], [ 100, %dec_label_pc_10006a58 ], [ 198, %dec_label_pc_10006a78 ], [ 172, %dec_label_pc_10006a4c ], [ 100, %dec_label_pc_10006a60 ], [ 169, %dec_label_pc_10006a6c ], [ 198, %dec_label_pc_10006a80 ], [ 106, %dec_label_pc_10006aa4 ], [ 150, %dec_label_pc_10006ab0 ], [ 49, %dec_label_pc_10006abc ], [ 178, %dec_label_pc_10006ac8 ], [ 160, %dec_label_pc_10006ad4 ]
  %v1_10006798 = mul i32 %v0_10006798, 16777216
  %v1_1000679c = mul i32 %v0_1000679c, 65536
  %v2_100067a0 = or i32 %v1_10006798, %v1_1000679c
  %v1_100067a4 = mul i32 %v0_100067a4, 256
  %v1_100067a8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100067a8 = or i32 %v2_100067a0, %v1_100067a8
  store i32 %v2_100067a8, i32* %r0.global-to-local, align 4
  %v0_100067ac = load i32, i32* @r23, align 4
  store i32 %v0_100067ac, i32* @r3, align 4
  %v2_100067b0 = or i32 %v2_100067a8, %v1_100067a4
  store i32 %v2_100067b0, i32* %r9.global-to-local, align 4
  store i32 %v2_100067b0, i32* @global_var_1001baa8.135, align 4
  %v0_100067bc = load i32, i32* %r29.global-to-local, align 4
  %v1_100067bc = trunc i32 %v0_100067bc to i16
  store i16 %v1_100067bc, i16* bitcast (i32* @global_var_1001baa2.136 to i16*), align 4
  %v2_100067c0 = call i32 @function_100043cc(i32 %v0_100067ac, i32 20)
  %v3_100067c0 = trunc i32 %v2_100067c0 to i16
  %v3_100067c4 = load i64, i64* %stack_var_-1916, align 8
  %v4_100067c4 = trunc i64 %v3_100067c4 to i32
  store i32 %v4_100067c4, i32* %r9.global-to-local, align 4
  store i16 %v3_100067c0, i16* bitcast (i32* @global_var_1001baa2.136 to i16*), align 4
  %v4_100067d4 = mul nsw i64 %v3_100067c4, 1717986919
  %v5_100067d4 = udiv i64 %v4_100067d4, 4294967296
  %v6_100067d4 = trunc i64 %v5_100067d4 to i32
  %tmp = icmp slt i32 %v4_100067c4, 0
  %v1_100067d8 = zext i1 %tmp to i32
  %v2_100067d8 = ashr i32 %v4_100067c4, 31
  %v3_100067d8 = and i32 %v2_100067d8, -2
  %v4_100067d8 = or i32 %v3_100067d8, %v1_100067d8
  store i32 %v4_100067d8, i32* %r11.global-to-local, align 4
  %v1_100067dc43 = udiv i64 %v4_100067d4, 17179869184
  %v1_100067dc = trunc i64 %v1_100067dc43 to i32
  %v2_100067dc = ashr i32 %v6_100067d4, 31
  %v3_100067dc = and i32 %v2_100067dc, -1073741824
  %v4_100067dc = or i32 %v3_100067dc, %v1_100067dc
  %v2_100067e0 = sub nsw i32 %v4_100067dc, %v4_100067d8
  %v1_100067e4 = mul i32 %v2_100067e0, 10
  %v2_100067e8 = icmp slt i32 %v4_100067c4, %v1_100067e4
  %v4_100067e8 = icmp eq i32 %v4_100067c4, %v1_100067e4
  store i1 %v2_100067e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100067e8, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_100067e8, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001baae.119, align 2
  %v3_100067f8 = load i32, i32* @global_var_1001baa8.135, align 4
  store i32 %v3_100067f8, i32* %r0.global-to-local, align 4
  %v0_100067fc = load i32, i32* @r24, align 4
  store i32 %v0_100067fc, i32* @r4, align 4
  %v0_10006800 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006800 = trunc i32 %v0_10006800 to i16
  store i16 %v1_10006800, i16* bitcast (i32* @global_var_1001babc.137 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_100067f8, i32* @global_var_1001bab0.138, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10006810 = load i32, i32* @r23, align 4
  store i32 %v0_10006810, i32* %r3.global-to-local, align 4
  %v4_10006814 = call i32 @function_10004430(i32 %v0_10006810, i32 %v0_100067fc, i32 20, i32 20)
  %v5_10006814 = trunc i32 %v4_10006814 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10006814, i16* bitcast (i32* @global_var_1001babc.137 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006824 = load i32, i32* @global_var_1001baa8.135, align 4
  store i32 %v3_10006824, i32* %r9.global-to-local, align 4
  %v0_10006828 = load i32, i32* @r23, align 4
  %v3_1000682c = load i16, i16* @global_var_1001baae.119, align 2
  %v4_1000682c = zext i16 %v3_1000682c to i32
  store i32 %v4_1000682c, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006834 = load i32, i32* @global_var_1001ba2c.109, align 4
  store i32 %v3_10006834, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_1000683c = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v1_1000683c, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268462164, i32* @lr, align 4
  %v6_10006850 = call i32 @function_10009558(i32 %v3_10006834, i32 %v0_10006828, i32 40, i32 16384, i32 %v1_1000683c, i32 16)
  store i32 %v6_10006850, i32* %r3.global-to-local, align 4
  %v3_10006854 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006854 = trunc i64 %v3_10006854 to i32
  %v1_10006858 = add i32 %v4_10006854, 1
  store i32 %v1_10006858, i32* %r9.global-to-local, align 4
  %v1_1000685c = icmp slt i32 %v1_10006858, 383
  %v3_1000685c = icmp eq i32 %v1_10006858, 383
  store i1 %v1_1000685c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000685c, i1* %cr7_eq.global-to-local, align 1
  %v5_10006860 = sext i32 %v1_10006858 to i64
  store i64 %v5_10006860, i64* %stack_var_-1916, align 8
  %tmp104 = icmp slt i32 %v1_10006858, 384
  br i1 %tmp104, label %dec_label_pc_10006798.dec_label_pc_10006668_crit_edge, label %dec_label_pc_10006868

dec_label_pc_10006798.dec_label_pc_10006668_crit_edge: ; preds = %dec_label_pc_10006798
  %v0_10006668.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006668

dec_label_pc_10006868:                            ; preds = %dec_label_pc_10006798
  %v0_10006868 = load i32, i32* @r31, align 4
  store i32 %v0_10006868, i32* @r25, align 4
  br label %dec_label_pc_1000686c

dec_label_pc_1000686c:                            ; preds = %dec_label_pc_10006648, %dec_label_pc_10006868
  %v0_1000686c = call i32 @function_10008fa0()
  store i32 %v0_1000686c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_1000686c, i32* %r26.global-to-local, align 4
  %v2_10006884 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_100068d0 = zext i8 %tmp56 to i32
  %v1_100068d4 = icmp ult i8 %tmp56, 6
  %v3_100068d4 = icmp eq i8 %tmp56, 6
  %v4_100068dc = zext i16 %tmp55 to i32
  %v1_100068e4 = icmp ult i16 %tmp55, 23
  %v3_100068e4 = icmp eq i16 %tmp55, 23
  %v4_100068f4 = zext i16 %tmp54 to i32
  %v1_10006904 = and i32 %tmp53, 131072
  %v3_10006904 = icmp eq i32 %v1_10006904, 0
  %v1_1000692c = add i32 %tmp52, -1
  %v2_10006930 = icmp slt i32 %v1_1000692c, %tmp51
  %v4_10006930 = icmp eq i32 %v1_1000692c, %tmp51
  %v1_1000690c = and i32 %tmp53, 1048576
  %v3_1000690c = icmp eq i32 %v1_1000690c, 0
  %v1_10006914 = and i32 %tmp53, 262144
  %v3_10006914 = icmp eq i32 %v1_10006914, 0
  %v1_1000691c = and i32 %tmp53, 65536
  %v3_1000691c = icmp eq i32 %v1_1000691c, 0
  %v1_100068ec = icmp ult i16 %tmp55, 2323
  %v3_100068ec = icmp eq i16 %tmp55, 2323
  br label %dec_label_pc_10006878

dec_label_pc_10006878:                            ; preds = %dec_label_pc_10006924, %dec_label_pc_1000691c, %dec_label_pc_10006914, %dec_label_pc_100068f4, %dec_label_pc_100068ec, %dec_label_pc_100068d0, %dec_label_pc_100068bc, %dec_label_pc_1000690c, %dec_label_pc_10006900, %dec_label_pc_100068b4, %dec_label_pc_10007a14, %dec_label_pc_1000686c
  %v1_10006880 = phi i32 [ %v0_1000686c, %dec_label_pc_1000686c ], [ %v1_10006880.pre.pre, %dec_label_pc_10007a14 ], [ %v0_100068a8, %dec_label_pc_100068b4 ], [ %v0_100068a8, %dec_label_pc_10006900 ], [ %v0_100068a8, %dec_label_pc_1000690c ], [ %v0_100068a8, %dec_label_pc_100068bc ], [ %v0_100068a8, %dec_label_pc_100068d0 ], [ %v0_100068a8, %dec_label_pc_100068ec ], [ %v0_100068a8, %dec_label_pc_100068f4 ], [ %v0_100068a8, %dec_label_pc_10006914 ], [ %v0_100068a8, %dec_label_pc_1000691c ], [ %v0_100068a8, %dec_label_pc_10006924 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10006880 = inttoptr i32 %v1_10006880 to i32*
  store i32 0, i32* %v2_10006880, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_10006890 = load i32, i32* @global_var_1001ba2c.109, align 4
  store i32 %v3_10006890, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268462240, i32* @lr, align 4
  %v6_1000689c = call i32 @function_100094e0(i32 %v3_10006890, i32 %v2_10006884, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_1000689c, i32* %r3.global-to-local, align 4
  %tmp105 = icmp slt i32 %v6_1000689c, 1
  br i1 %tmp105, label %dec_label_pc_10006aec, label %dec_label_pc_100068a8

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_10006878
  %v0_100068a8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100068a8 = inttoptr i32 %v0_100068a8 to i32*
  %v2_100068a8 = load i32, i32* %v1_100068a8, align 4
  store i32 %v2_100068a8, i32* %r0.global-to-local, align 4
  %v1_100068ac = icmp slt i32 %v2_100068a8, 11
  %v3_100068ac = icmp eq i32 %v2_100068a8, 11
  store i1 %v1_100068ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068ac, label %dec_label_pc_10006aec, label %dec_label_pc_100068b4

dec_label_pc_100068b4:                            ; preds = %dec_label_pc_100068a8
  %v1_100068b4 = icmp ult i32 %v6_1000689c, 39
  %v3_100068b4 = icmp eq i32 %v6_1000689c, 39
  store i1 %v1_100068b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068b4, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v6_1000689c, 40
  br i1 %tmp106, label %dec_label_pc_10006878, label %dec_label_pc_100068bc

dec_label_pc_100068bc:                            ; preds = %dec_label_pc_100068b4
  %v3_100068c0 = load i32, i32* @global_var_1001ba00.14, align 4
  store i32 %v3_100068c0, i32* %r0.global-to-local, align 4
  store i32 %tmp57, i32* %r9.global-to-local, align 4
  %v2_100068c8 = icmp slt i32 %tmp57, %v3_100068c0
  %v4_100068c8 = icmp eq i32 %tmp57, %v3_100068c0
  store i1 %v2_100068c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100068c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100068c8, label %dec_label_pc_100068d0, label %dec_label_pc_10006878

dec_label_pc_100068d0:                            ; preds = %dec_label_pc_100068bc
  store i32 %v4_100068d0, i32* %r0.global-to-local, align 4
  store i1 %v1_100068d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068d4, label %dec_label_pc_100068dc, label %dec_label_pc_10006878

dec_label_pc_100068dc:                            ; preds = %dec_label_pc_100068d0
  store i32 %v4_100068dc, i32* %r8.global-to-local, align 4
  store i32 %v4_100068dc, i32* %r0.global-to-local, align 4
  store i1 %v1_100068e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068e4, label %dec_label_pc_100068f4, label %dec_label_pc_100068ec

dec_label_pc_100068ec:                            ; preds = %dec_label_pc_100068dc
  store i1 %v1_100068ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068ec, label %dec_label_pc_100068f4, label %dec_label_pc_10006878

dec_label_pc_100068f4:                            ; preds = %dec_label_pc_100068ec, %dec_label_pc_100068dc
  store i32 %v4_100068f4, i32* %r0.global-to-local, align 4
  %v1_100068f8 = load i32, i32* @r22, align 4
  %v2_100068f8 = icmp slt i32 %v4_100068f4, %v1_100068f8
  %v4_100068f8 = icmp eq i32 %v4_100068f4, %v1_100068f8
  store i1 %v2_100068f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100068f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100068f8, label %dec_label_pc_10006900, label %dec_label_pc_10006878

dec_label_pc_10006900:                            ; preds = %dec_label_pc_100068f4
  store i32 %tmp53, i32* %r0.global-to-local, align 4
  store i32 %v1_10006904, i32* %r10.global-to-local, align 4
  br i1 %v3_10006904, label %dec_label_pc_10006878, label %dec_label_pc_1000690c

dec_label_pc_1000690c:                            ; preds = %dec_label_pc_10006900
  store i32 %v1_1000690c, i32* %r11.global-to-local, align 4
  br i1 %v3_1000690c, label %dec_label_pc_10006878, label %dec_label_pc_10006914

dec_label_pc_10006914:                            ; preds = %dec_label_pc_1000690c
  store i32 %v1_10006914, i32* %r9.global-to-local, align 4
  br i1 %v3_10006914, label %dec_label_pc_1000691c, label %dec_label_pc_10006878

dec_label_pc_1000691c:                            ; preds = %dec_label_pc_10006914
  store i32 %v1_1000691c, i32* %r10.global-to-local, align 4
  br i1 %v3_1000691c, label %dec_label_pc_10006924, label %dec_label_pc_10006878

dec_label_pc_10006924:                            ; preds = %dec_label_pc_1000691c
  store i32 %tmp52, i32* %r9.global-to-local, align 4
  store i32 %tmp51, i32* %r0.global-to-local, align 4
  store i32 %v1_1000692c, i32* %r10.global-to-local, align 4
  store i1 %v2_10006930, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006930, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006930, label %dec_label_pc_10006938, label %dec_label_pc_10006878

dec_label_pc_10006938:                            ; preds = %dec_label_pc_10006924
  %v0_10006938 = load i32, i32* @r31, align 4
  %v1_10006938 = icmp slt i32 %v0_10006938, 255
  %v2_10006938 = icmp sgt i32 %v0_10006938, 255
  %v3_10006938 = icmp eq i32 %v0_10006938, 255
  store i1 %v1_10006938, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006938, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006938, label %dec_label_pc_10006aec, label %dec_label_pc_10006940

dec_label_pc_10006940:                            ; preds = %dec_label_pc_10006938
  %v3_10006948 = load i32, i32* @global_var_1001ba28.108, align 4
  store i32 %v3_10006948, i32* %r11.global-to-local, align 4
  %v1_1000694c = mul i32 %v0_10006938, 256
  store i32 %v1_1000694c, i32* %r9.global-to-local, align 4
  %v2_10006950 = mul i32 %v0_10006938, 288
  store i32 %v2_10006950, i32* %r0.global-to-local, align 4
  %v2_10006954 = add i32 %v3_10006948, %v2_10006950
  store i32 %v2_10006954, i32* @r3, align 4
  %v1_10006958 = add i32 %v2_10006954, 12
  %v2_10006958 = inttoptr i32 %v1_10006958 to i32*
  %v3_10006958 = load i32, i32* %v2_10006958, align 4
  store i32 %v3_10006958, i32* %r9.global-to-local, align 4
  %v1_1000695c = icmp slt i32 %v3_10006958, 0
  %v3_1000695c = icmp eq i32 %v3_10006958, 0
  store i1 %v1_1000695c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000695c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000695c, label %dec_label_pc_10007a10, label %dec_label_pc_10006964

dec_label_pc_10006964:                            ; preds = %dec_label_pc_10006940
  %v1_10006964 = sub i32 256, %v0_10006938
  store i32 %v1_10006964, i32* %r11.global-to-local, align 4
  store i32 %v0_10006938, i32* %r29.global-to-local, align 4
  store i32 %v1_10006964, i32* %ctr.global-to-local, align 4
  %v1_10006970 = add i32 %v2_10006954, 288
  store i32 %v1_10006970, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006974

dec_label_pc_10006974:                            ; preds = %dec_label_pc_1000697c, %dec_label_pc_10006964
  %v0_1000697c = phi i32 [ %v1_10006984, %dec_label_pc_1000697c ], [ %v1_10006970, %dec_label_pc_10006964 ]
  %v0_10006978 = phi i32 [ %v1_10006978, %dec_label_pc_1000697c ], [ %v1_10006964, %dec_label_pc_10006964 ]
  %v0_10006974 = phi i32 [ %v1_10006974, %dec_label_pc_1000697c ], [ %v0_10006938, %dec_label_pc_10006964 ]
  %v1_10006974 = add i32 %v0_10006974, 1
  store i32 %v1_10006974, i32* @r29, align 4
  %v1_10006978 = add i32 %v0_10006978, -1
  store i32 %v1_10006978, i32* %ctr.global-to-local, align 4
  %v2_10006978 = icmp eq i32 %v1_10006978, 0
  br i1 %v2_10006978, label %dec_label_pc_10006aec, label %dec_label_pc_1000697c

dec_label_pc_1000697c:                            ; preds = %dec_label_pc_10006974
  %v1_1000697c = add i32 %v0_1000697c, 12
  %v2_1000697c = inttoptr i32 %v1_1000697c to i32*
  %v3_1000697c = load i32, i32* %v2_1000697c, align 4
  store i32 %v3_1000697c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000697c, i32* @r3, align 4
  %v1_10006984 = add i32 %v0_1000697c, 288
  store i32 %v1_10006984, i32* %r9.global-to-local, align 4
  %v1_10006988 = icmp slt i32 %v3_1000697c, 0
  %v3_10006988 = icmp eq i32 %v3_1000697c, 0
  store i1 %v1_10006988, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006988, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006988, label %dec_label_pc_10007a14, label %dec_label_pc_10006974

dec_label_pc_10006a30:                            ; preds = %dec_label_pc_100063f8, %dec_label_pc_10007a00
  %v0_10006a34 = call i32 @function_1000a048()
  store i32 %v0_10006a34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006a38

dec_label_pc_10006a38:                            ; preds = %dec_label_pc_100066d8, %dec_label_pc_10006a30
  %v0_100067a415 = phi i32 [ %v0_10006a34, %dec_label_pc_10006a30 ], [ %v1_100066a0, %dec_label_pc_100066d8 ]
  %v0_10006a38 = load i32, i32* @r9, align 4
  %v1_10006a38 = icmp slt i32 %v0_10006a38, 168
  %v3_10006a38 = icmp eq i32 %v0_10006a38, 168
  store i1 %v1_10006a38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a38, label %dec_label_pc_1000668c.preheader, label %dec_label_pc_10006a38.dec_label_pc_10006798_crit_edge

dec_label_pc_10006a38.dec_label_pc_10006798_crit_edge: ; preds = %dec_label_pc_10006a38
  %v0_10006798.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006798

dec_label_pc_10006a44:                            ; preds = %dec_label_pc_100066e0
  %v0_10006a44 = load i32, i32* @r9, align 4
  %v1_10006a44 = icmp ult i32 %v0_10006a44, 15
  %v3_10006a44 = icmp eq i32 %v0_10006a44, 15
  store i1 %v1_10006a44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a44, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_10006a44, 16
  br i1 %tmp107, label %dec_label_pc_10006798, label %dec_label_pc_10006a4c

dec_label_pc_10006a4c:                            ; preds = %dec_label_pc_10006a44
  %v1_10006a4c = icmp ult i32 %v0_10006a44, 31
  %v3_10006a4c = icmp eq i32 %v0_10006a44, 31
  store i1 %v1_10006a4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a4c, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_10006a44, 32
  br i1 %tmp108, label %dec_label_pc_1000668c, label %dec_label_pc_10006798

dec_label_pc_10006a58:                            ; preds = %dec_label_pc_100066e8
  %v0_10006a58 = load i32, i32* @r9, align 4
  %v1_10006a58 = icmp ult i32 %v0_10006a58, 63
  %v3_10006a58 = icmp eq i32 %v0_10006a58, 63
  store i1 %v1_10006a58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a58, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = icmp ult i32 %v0_10006a58, 64
  br i1 %tmp109, label %dec_label_pc_10006798, label %dec_label_pc_10006a60

dec_label_pc_10006a60:                            ; preds = %dec_label_pc_10006a58
  %v1_10006a60 = icmp ult i32 %v0_10006a58, 126
  %v3_10006a60 = icmp eq i32 %v0_10006a58, 126
  store i1 %v1_10006a60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a60, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_10006a58, 127
  br i1 %tmp110, label %dec_label_pc_1000668c, label %dec_label_pc_10006798

dec_label_pc_10006a6c:                            ; preds = %dec_label_pc_100066f0
  %v0_10006a6c = load i32, i32* @r9, align 4
  %v1_10006a6c = icmp slt i32 %v0_10006a6c, 255
  %v3_10006a6c = icmp eq i32 %v0_10006a6c, 255
  store i1 %v1_10006a6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a6c, label %dec_label_pc_1000668c, label %dec_label_pc_10006798

dec_label_pc_10006a78:                            ; preds = %dec_label_pc_100066f8
  %v0_10006a78 = load i32, i32* @r9, align 4
  %v1_10006a78 = icmp ult i32 %v0_10006a78, 17
  %v3_10006a78 = icmp eq i32 %v0_10006a78, 17
  store i1 %v1_10006a78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a78, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_10006a78, 18
  br i1 %tmp111, label %dec_label_pc_10006798, label %dec_label_pc_10006a80

dec_label_pc_10006a80:                            ; preds = %dec_label_pc_10006a78
  %v1_10006a80 = icmp eq i32 %v0_10006a78, 18
  %v3_10006a80 = icmp eq i32 %v0_10006a78, 19
  store i1 %v1_10006a80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a80, i1* %cr7_eq.global-to-local, align 1
  %tmp112 = icmp ult i32 %v0_10006a78, 20
  br i1 %tmp112, label %dec_label_pc_1000668c, label %dec_label_pc_10006798

dec_label_pc_10006a8c:                            ; preds = %dec_label_pc_10006708
  %v0_10006a8c = load i32, i32* @r9, align 4
  %v1_10006a8c = icmp slt i32 %v0_10006a8c, 186
  %v3_10006a8c = icmp eq i32 %v0_10006a8c, 186
  store i1 %v1_10006a8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a8c, label %dec_label_pc_1000668c, label %dec_label_pc_10006a94

dec_label_pc_10006a94:                            ; preds = %dec_label_pc_10006a8c
  %v1_10006a94 = icmp slt i32 %v0_10006a8c, 187
  %v3_10006a94 = icmp eq i32 %v0_10006a8c, 187
  store i1 %v1_10006a94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a94, label %dec_label_pc_1000668c, label %dec_label_pc_10006a9c

dec_label_pc_10006a9c:                            ; preds = %dec_label_pc_10006a94
  %v1_10006a9c = icmp slt i32 %v0_10006a8c, 185
  %v3_10006a9c = icmp eq i32 %v0_10006a8c, 185
  store i1 %v1_10006a9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a9c, label %dec_label_pc_1000668c, label %dec_label_pc_10006aa4

dec_label_pc_10006aa4:                            ; preds = %dec_label_pc_10006a9c
  %v1_10006aa4 = icmp slt i32 %v0_10006a8c, 184
  %v3_10006aa4 = icmp eq i32 %v0_10006a8c, 184
  store i1 %v1_10006aa4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006aa4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006aa4, label %dec_label_pc_1000668c, label %dec_label_pc_10006798

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006710
  %v0_10006ab0 = load i32, i32* @r9, align 4
  %v1_10006ab0 = icmp slt i32 %v0_10006ab0, 31
  %v3_10006ab0 = icmp eq i32 %v0_10006ab0, 31
  store i1 %v1_10006ab0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ab0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ab0, label %dec_label_pc_1000668c, label %dec_label_pc_10006798

dec_label_pc_10006abc:                            ; preds = %dec_label_pc_10006718
  %v0_10006abc = load i32, i32* @r9, align 4
  %v1_10006abc = icmp slt i32 %v0_10006abc, 51
  %v3_10006abc = icmp eq i32 %v0_10006abc, 51
  store i1 %v1_10006abc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006abc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006abc, label %dec_label_pc_1000668c, label %dec_label_pc_10006798

dec_label_pc_10006ac8:                            ; preds = %dec_label_pc_10006720
  %v0_10006ac8 = load i32, i32* @r9, align 4
  %v1_10006ac8 = icmp slt i32 %v0_10006ac8, 62
  %v3_10006ac8 = icmp eq i32 %v0_10006ac8, 62
  store i1 %v1_10006ac8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ac8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ac8, label %dec_label_pc_1000668c, label %dec_label_pc_10006798

dec_label_pc_10006ad4:                            ; preds = %dec_label_pc_10006728
  %v0_10006ad4 = load i32, i32* @r9, align 4
  %v1_10006ad4 = icmp slt i32 %v0_10006ad4, 13
  %v3_10006ad4 = icmp eq i32 %v0_10006ad4, 13
  store i1 %v1_10006ad4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ad4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ad4, label %dec_label_pc_1000668c, label %dec_label_pc_10006798

dec_label_pc_10006aec:                            ; preds = %dec_label_pc_10006938, %dec_label_pc_100068a8, %dec_label_pc_10006878, %dec_label_pc_10006974
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006b04133 = load i32, i32* @r1, align 4
  %v3_10006b04134 = add i32 %v2_10006b04133, 64
  %v4_10006b04135 = inttoptr i32 %v3_10006b04134 to i32*
  store i32 0, i32* %v4_10006b04135, align 4
  %v0_10006b08136 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b08137 = add i32 %v0_10006b08136, -1
  store i32 %v1_10006b08137, i32* %ctr.global-to-local, align 4
  %v2_10006b08138 = icmp eq i32 %v1_10006b08137, 0
  br i1 %v2_10006b08138, label %dec_label_pc_10006b0c, label %dec_label_pc_10006afc.dec_label_pc_10006afc_crit_edge

dec_label_pc_10006afc.dec_label_pc_10006afc_crit_edge: ; preds = %dec_label_pc_10006aec, %dec_label_pc_10006afc.dec_label_pc_10006afc_crit_edge
  %v0_10006afc.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006b04.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006afc = add i32 %v0_10006afc.pre, 64
  store i32 %v1_10006afc, i32* %r11.global-to-local, align 4
  %v1_10006b00 = add i32 %v0_10006afc.pre, 4
  store i32 %v1_10006b00, i32* %r9.global-to-local, align 4
  %v2_10006b04 = load i32, i32* @r1, align 4
  %v3_10006b04 = add i32 %v2_10006b04, %v1_10006afc
  %v4_10006b04 = inttoptr i32 %v3_10006b04 to i32*
  store i32 %v0_10006b04.pre, i32* %v4_10006b04, align 4
  %v0_10006b08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b08 = add i32 %v0_10006b08, -1
  store i32 %v1_10006b08, i32* %ctr.global-to-local, align 4
  %v2_10006b08 = icmp eq i32 %v1_10006b08, 0
  br i1 %v2_10006b08, label %dec_label_pc_10006b0c, label %dec_label_pc_10006afc.dec_label_pc_10006afc_crit_edge

dec_label_pc_10006b0c:                            ; preds = %dec_label_pc_10006afc.dec_label_pc_10006afc_crit_edge, %dec_label_pc_10006aec
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006b24127 = load i32, i32* @r1, align 4
  %v3_10006b24128 = add i32 %v2_10006b24127, 192
  %v4_10006b24129 = inttoptr i32 %v3_10006b24128 to i32*
  store i32 0, i32* %v4_10006b24129, align 4
  %v0_10006b28130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b28131 = add i32 %v0_10006b28130, -1
  store i32 %v1_10006b28131, i32* %ctr.global-to-local, align 4
  %v2_10006b28132 = icmp eq i32 %v1_10006b28131, 0
  br i1 %v2_10006b28132, label %dec_label_pc_10006b2c, label %dec_label_pc_10006b1c.dec_label_pc_10006b1c_crit_edge

dec_label_pc_10006b1c.dec_label_pc_10006b1c_crit_edge: ; preds = %dec_label_pc_10006b0c, %dec_label_pc_10006b1c.dec_label_pc_10006b1c_crit_edge
  %v0_10006b1c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006b24.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006b1c = add i32 %v0_10006b1c.pre, 192
  store i32 %v1_10006b1c, i32* %r11.global-to-local, align 4
  %v1_10006b20 = add i32 %v0_10006b1c.pre, 4
  store i32 %v1_10006b20, i32* %r9.global-to-local, align 4
  %v2_10006b24 = load i32, i32* @r1, align 4
  %v3_10006b24 = add i32 %v2_10006b24, %v1_10006b1c
  %v4_10006b24 = inttoptr i32 %v3_10006b24 to i32*
  store i32 %v0_10006b24.pre, i32* %v4_10006b24, align 4
  %v0_10006b28 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b28 = add i32 %v0_10006b28, -1
  store i32 %v1_10006b28, i32* %ctr.global-to-local, align 4
  %v2_10006b28 = icmp eq i32 %v1_10006b28, 0
  br i1 %v2_10006b28, label %dec_label_pc_10006b2c, label %dec_label_pc_10006b1c.dec_label_pc_10006b1c_crit_edge

dec_label_pc_10006b2c:                            ; preds = %dec_label_pc_10006b1c.dec_label_pc_10006b1c_crit_edge, %dec_label_pc_10006b0c
  %v0_10006b2c = load i32, i32* %r0.global-to-local, align 4
  %v5_10006b2c = sext i32 %v0_10006b2c to i64
  store i64 %v5_10006b2c, i64* %stack_var_-1916, align 8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v2_10006c60 = ptrtoint i32* %stack_var_-1872 to i32
  %v2_10006c64 = ptrtoint i32* %stack_var_-1744 to i32
  %v2_10006c6c = ptrtoint i32* %stack_var_-1908 to i32
  %v2_10007858 = ptrtoint i32* %stack_var_-1920 to i32
  %v2_1000785c = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_10006ba8

dec_label_pc_10006b48:                            ; preds = %dec_label_pc_10006ba8
  %v3_10006b48 = load i32, i32* @global_var_1001ba24.101, align 4
  store i32 %v3_10006b48, i32* %r0.global-to-local, align 4
  %v1_10006b4c = add i32 %v2_10006bc0, 8
  %v2_10006b4c = inttoptr i32 %v1_10006b4c to i32*
  %v3_10006b4c = load i32, i32* %v2_10006b4c, align 4
  store i32 %v3_10006b4c, i32* %r9.global-to-local, align 4
  %v2_10006b50 = sub i32 %v3_10006b48, %v3_10006b4c
  store i32 %v2_10006b50, i32* %r0.global-to-local, align 4
  %v2_10006b54 = icmp ult i32 %v2_10006b50, 30
  %v3_10006b54 = icmp ugt i32 %v2_10006b50, 30
  %v4_10006b54 = icmp eq i32 %v2_10006b50, 30
  store i1 %v2_10006b54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006b54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b54, label %dec_label_pc_10006bf0, label %dec_label_pc_10006b5c

dec_label_pc_10006b5c:                            ; preds = %dec_label_pc_10006bd8, %dec_label_pc_10006b48
  %v1_10006b5c = icmp slt i32 %v3_10006bc4, 1
  store i1 %v1_10006b5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bc8, i1* %cr7_eq.global-to-local, align 1
  %v1_10006db4 = add i32 %v2_10006bc0, 4
  %v2_10006db4 = inttoptr i32 %v1_10006db4 to i32*
  %v3_10006db4 = load i32, i32* %v2_10006db4, align 4
  store i32 %v3_10006db4, i32* %r3.global-to-local, align 4
  br i1 %v3_10006bc8, label %dec_label_pc_10006db4, label %dec_label_pc_10006b64

dec_label_pc_10006b64:                            ; preds = %dec_label_pc_10006b5c
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006b6c = call i32 @__asm_rlwinm(i32 %v3_10006db4, i32 29, i32 3, i32 29)
  %v0_10006b70 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006b70 = icmp slt i32 %v0_10006b70, %v3_10006db4
  %v4_10006b70 = icmp eq i32 %v0_10006b70, %v3_10006db4
  store i1 %v2_10006b70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006b70, i1* %cr7_eq.global-to-local, align 1
  %v1_10006b74 = load i32, i32* %r14.global-to-local, align 4
  %v2_10006b74 = add i32 %v1_10006b74, %v1_10006b6c
  store i32 %v2_10006b74, i32* %r11.global-to-local, align 4
  %v1_10006b78 = urem i32 %v3_10006db4, 32
  store i32 %v1_10006b78, i32* %r10.global-to-local, align 4
  %v1_10006b7c = add i32 %v2_10006b74, 56
  %v2_10006b7c = inttoptr i32 %v1_10006b7c to i32*
  %v3_10006b7c = load i32, i32* %v2_10006b7c, align 4
  %v0_10006b80 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006b80 = shl i32 %v0_10006b80, %v1_10006b78
  store i32 %v3_10006b80, i32* %r0.global-to-local, align 4
  %v2_10006b84 = or i32 %v3_10006b80, %v3_10006b7c
  store i32 %v2_10006b84, i32* %r9.global-to-local, align 4
  store i32 %v2_10006b84, i32* %v2_10006b7c, align 4
  br i1 %v2_10006b70, label %dec_label_pc_10006b90, label %dec_label_pc_10006b94

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b64
  store i32 %v3_10006db4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006b94

dec_label_pc_10006b94:                            ; preds = %dec_label_pc_10006db4, %dec_label_pc_10006b64, %dec_label_pc_10006bd0, %dec_label_pc_10006ddc, %dec_label_pc_10006da8, %dec_label_pc_10006b90
  %v3_10006b94 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006b94 = trunc i64 %v3_10006b94 to i32
  store i32 %v4_10006b94, i32* %r9.global-to-local, align 4
  %v1_10006b98 = add i32 %v4_10006b94, 1
  store i32 %v1_10006b98, i32* %r0.global-to-local, align 4
  %v1_10006b9c = icmp slt i32 %v1_10006b98, 255
  %v2_10006b9c = icmp sgt i32 %v1_10006b98, 255
  %v3_10006b9c = icmp eq i32 %v1_10006b98, 255
  store i1 %v1_10006b9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b9c, i1* %cr7_eq.global-to-local, align 1
  %v5_10006ba0 = sext i32 %v1_10006b98 to i64
  store i64 %v5_10006ba0, i64* %stack_var_-1916, align 8
  br i1 %v2_10006b9c, label %dec_label_pc_10006c40, label %dec_label_pc_10006ba8

dec_label_pc_10006ba8:                            ; preds = %dec_label_pc_10006c24, %dec_label_pc_10006b94, %dec_label_pc_10006b2c
  %v0_10006bac = phi i32 [ 0, %dec_label_pc_10006b2c ], [ %v1_10006b98, %dec_label_pc_10006b94 ], [ %v1_10006c30, %dec_label_pc_10006c24 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10006bb0 = load i32, i32* @global_var_1001ba28.108, align 4
  store i32 %v3_10006bb0, i32* %r9.global-to-local, align 4
  %v2_10006bb8 = mul i32 %v0_10006bac, 288
  store i32 %v2_10006bb8, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10006bc0 = add i32 %v3_10006bb0, %v2_10006bb8
  store i32 %v2_10006bc0, i32* @r29, align 4
  %v1_10006bc4 = add i32 %v2_10006bc0, 12
  %v2_10006bc4 = inttoptr i32 %v1_10006bc4 to i32*
  %v3_10006bc4 = load i32, i32* %v2_10006bc4, align 4
  store i32 %v3_10006bc4, i32* %r10.global-to-local, align 4
  %v1_10006bc8 = icmp eq i32 %v3_10006bc4, 0
  %v2_10006bc8 = icmp ugt i32 %v3_10006bc4, 1
  %v3_10006bc8 = icmp eq i32 %v3_10006bc4, 1
  store i1 %v1_10006bc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006bc8, label %dec_label_pc_10006b48, label %dec_label_pc_10006bd0

dec_label_pc_10006bd0:                            ; preds = %dec_label_pc_10006ba8
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10006bc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10006bc8, label %dec_label_pc_10006b94, label %dec_label_pc_10006bd8

dec_label_pc_10006bd8:                            ; preds = %dec_label_pc_10006bd0
  %v3_10006bd8 = load i32, i32* @global_var_1001ba24.101, align 4
  store i32 %v3_10006bd8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10006be0 = add i32 %v2_10006bc0, 8
  %v2_10006be0 = inttoptr i32 %v1_10006be0 to i32*
  %v3_10006be0 = load i32, i32* %v2_10006be0, align 4
  store i32 %v3_10006be0, i32* %r9.global-to-local, align 4
  %v2_10006be4 = sub i32 %v3_10006bd8, %v3_10006be0
  store i32 %v2_10006be4, i32* %r0.global-to-local, align 4
  %v2_10006be8 = icmp ult i32 %v2_10006be4, 5
  %v3_10006be8 = icmp ugt i32 %v2_10006be4, 5
  %v4_10006be8 = icmp eq i32 %v2_10006be4, 5
  store i1 %v2_10006be8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006be8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006be8, label %dec_label_pc_10006bf0, label %dec_label_pc_10006b5c

dec_label_pc_10006bf0:                            ; preds = %dec_label_pc_10006bd8, %dec_label_pc_10006b48
  %v1_10006bf0 = add i32 %v2_10006bc0, 4
  %v2_10006bf0 = inttoptr i32 %v1_10006bf0 to i32*
  %v3_10006bf0 = load i32, i32* %v2_10006bf0, align 4
  store i32 %v3_10006bf0, i32* %r3.global-to-local, align 4
  store i32 268463096, i32* @lr, align 4
  %v0_10006bf4 = call i32 @function_10008884()
  store i32 %v0_10006bf4, i32* %r3.global-to-local, align 4
  %v0_10006bf8 = load i32, i32* @r29, align 4
  %v1_10006bf8 = add i32 %v0_10006bf8, 12
  %v2_10006bf8 = inttoptr i32 %v1_10006bf8 to i32*
  %v3_10006bf8 = load i32, i32* %v2_10006bf8, align 4
  store i32 %v3_10006bf8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10006c00 = icmp ult i32 %v3_10006bf8, 2
  %v3_10006c00 = icmp eq i32 %v3_10006bf8, 2
  store i1 %v1_10006c00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c00, i1* %cr7_eq.global-to-local, align 1
  %v2_10006c04 = add i32 %v0_10006bf8, 4
  %v3_10006c04 = inttoptr i32 %v2_10006c04 to i32*
  store i32 -1, i32* %v3_10006c04, align 4
  %tmp114 = icmp ult i32 %v3_10006bf8, 3
  br i1 %tmp114, label %dec_label_pc_10006da8, label %dec_label_pc_10006c0c

dec_label_pc_10006c0c:                            ; preds = %dec_label_pc_10006bf0
  %v0_10006c0c = load i32, i32* @r29, align 4
  %v1_10006c0c = add i32 %v0_10006c0c, 284
  %v2_10006c0c = inttoptr i32 %v1_10006c0c to i8*
  %v3_10006c0c = load i8, i8* %v2_10006c0c, align 1
  %v4_10006c0c = zext i8 %v3_10006c0c to i32
  %v1_10006c10 = add nuw nsw i32 %v4_10006c0c, 1
  %v1_10006c14 = urem i32 %v1_10006c10, 256
  store i32 %v1_10006c14, i32* %r9.global-to-local, align 4
  %v1_10006c18 = icmp ult i32 %v1_10006c14, 10
  %v3_10006c18 = icmp eq i32 %v1_10006c14, 10
  store i1 %v1_10006c18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c18, i1* %cr7_eq.global-to-local, align 1
  %v1_10006c1c = trunc i32 %v1_10006c10 to i8
  store i8 %v1_10006c1c, i8* %v2_10006c0c, align 1
  %v0_10006c20 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006c20, label %dec_label_pc_10006da8, label %dec_label_pc_10006c24

dec_label_pc_10006c24:                            ; preds = %dec_label_pc_10006c0c
  %v0_10006c24 = load i32, i32* @r29, align 4
  store i32 %v0_10006c24, i32* @r3, align 4
  store i32 268463148, i32* @lr, align 4
  %v0_10006c28 = call i32 @function_10006004()
  store i32 %v0_10006c28, i32* %r3.global-to-local, align 4
  %v3_10006c2c = load i64, i64* %stack_var_-1916, align 8
  %v4_10006c2c = trunc i64 %v3_10006c2c to i32
  store i32 %v4_10006c2c, i32* %r9.global-to-local, align 4
  %v1_10006c30 = add i32 %v4_10006c2c, 1
  store i32 %v1_10006c30, i32* %r0.global-to-local, align 4
  %v1_10006c34 = icmp slt i32 %v1_10006c30, 255
  %v3_10006c34 = icmp eq i32 %v1_10006c30, 255
  store i1 %v1_10006c34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c34, i1* %cr7_eq.global-to-local, align 1
  %v5_10006c38 = sext i32 %v1_10006c30 to i64
  store i64 %v5_10006c38, i64* %stack_var_-1916, align 8
  %tmp115 = icmp slt i32 %v1_10006c30, 256
  br i1 %tmp115, label %dec_label_pc_10006ba8, label %dec_label_pc_10006c40

dec_label_pc_10006c40:                            ; preds = %dec_label_pc_10006c24, %dec_label_pc_10006b94
  %v0_10006c40 = load i32, i32* %r30.global-to-local, align 4
  %v1_10006c40 = load i32, i32* @r31, align 4
  %v2_10006c40 = icmp slt i32 %v0_10006c40, %v1_10006c40
  %v4_10006c40 = icmp eq i32 %v0_10006c40, %v1_10006c40
  store i1 %v2_10006c40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006c40, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10006c40, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_10006c40, label %dec_label_pc_10006c5c, label %dec_label_pc_10006c60

dec_label_pc_10006c5c:                            ; preds = %dec_label_pc_10006c40
  store i32 %v1_10006c40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c60

dec_label_pc_10006c60:                            ; preds = %dec_label_pc_10006c40, %dec_label_pc_10006c5c
  %v0_10006c70 = phi i32 [ %v0_10006c40, %dec_label_pc_10006c40 ], [ %v1_10006c40, %dec_label_pc_10006c5c ]
  store i32 %v2_10006c64, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_10006c6c, i32* %r7.global-to-local, align 4
  %v1_10006c70 = add i32 %v0_10006c70, 1
  store i32 %v1_10006c70, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006c78.140 to i32), i32* @lr, align 4
  %v5_10006c74 = call i32 @function_10008b4c(i32 %v1_10006c70, i32 %v2_10006c60, i32 %v2_10006c64, i32 0, i32 %v2_10006c6c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006c80.141 to i32), i32* @lr, align 4
  %v0_10006c7c = call i32 @function_10008c54()
  store i32 %v0_10006c7c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006c7c, i32* @global_var_1001ba24.101, align 4
  %v0_10006c88 = load i32, i32* %r30.global-to-local, align 4
  %v5_10006c88 = sext i32 %v0_10006c88 to i64
  store i64 %v5_10006c88, i64* %stack_var_-1916, align 8
  br label %dec_label_pc_10006ca4

dec_label_pc_10006c90:                            ; preds = %dec_label_pc_10006d00, %dec_label_pc_10007720, %dec_label_pc_10006ce4, %dec_label_pc_10006ca4, %dec_label_pc_100079d4, %dec_label_pc_10007908, %dec_label_pc_10007754
  %v3_10006c90 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006c90 = trunc i64 %v3_10006c90 to i32
  store i32 %v4_10006c90, i32* %r9.global-to-local, align 4
  %v1_10006c94 = add i32 %v4_10006c90, 1
  store i32 %v1_10006c94, i32* %r0.global-to-local, align 4
  %v1_10006c98 = icmp slt i32 %v1_10006c94, 255
  %v2_10006c98 = icmp sgt i32 %v1_10006c94, 255
  %v3_10006c98 = icmp eq i32 %v1_10006c94, 255
  store i1 %v1_10006c98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c98, i1* %cr7_eq.global-to-local, align 1
  %v5_10006c9c = sext i32 %v1_10006c94 to i64
  store i64 %v5_10006c9c, i64* %stack_var_-1916, align 8
  br i1 %v2_10006c98, label %dec_label_pc_10006648, label %dec_label_pc_10006ca4

dec_label_pc_10006ca4:                            ; preds = %dec_label_pc_10006c90, %dec_label_pc_10006c60
  %v0_10006ca8 = phi i32 [ %v1_10006c94, %dec_label_pc_10006c90 ], [ 0, %dec_label_pc_10006c60 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10006ca8 = mul i32 %v0_10006ca8, 256
  store i32 %v1_10006ca8, i32* %r11.global-to-local, align 4
  %v3_10006cac = load i32, i32* @global_var_1001ba28.108, align 4
  store i32 %v3_10006cac, i32* %r9.global-to-local, align 4
  %v2_10006cb4 = mul i32 %v0_10006ca8, 288
  store i32 %v2_10006cb4, i32* %r0.global-to-local, align 4
  %v2_10006cb8 = add i32 %v3_10006cac, %v2_10006cb4
  store i32 %v2_10006cb8, i32* %r28.global-to-local, align 4
  %v1_10006cbc = add i32 %v2_10006cb8, 4
  %v2_10006cbc = inttoptr i32 %v1_10006cbc to i32*
  %v3_10006cbc = load i32, i32* %v2_10006cbc, align 4
  store i32 %v3_10006cbc, i32* %r3.global-to-local, align 4
  %v1_10006cc0 = icmp slt i32 %v3_10006cbc, -1
  %v3_10006cc0 = icmp eq i32 %v3_10006cbc, -1
  store i1 %v1_10006cc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cc0, label %dec_label_pc_10006c90, label %dec_label_pc_10006cc8

dec_label_pc_10006cc8:                            ; preds = %dec_label_pc_10006ca4
  %v1_10006cc8 = call i32 @__asm_rlwinm(i32 %v3_10006cbc, i32 29, i32 3, i32 29)
  %v0_10006ccc = load i32, i32* %r3.global-to-local, align 4
  %v1_10006ccc = urem i32 %v0_10006ccc, 32
  store i32 %v1_10006ccc, i32* %r11.global-to-local, align 4
  %v1_10006cd0 = load i32, i32* %r14.global-to-local, align 4
  %v2_10006cd0 = add i32 %v1_10006cd0, %v1_10006cc8
  store i32 %v2_10006cd0, i32* %r9.global-to-local, align 4
  %v1_10006cd4 = add i32 %v2_10006cd0, 184
  %v2_10006cd4 = inttoptr i32 %v1_10006cd4 to i32*
  %v3_10006cd4 = load i32, i32* %v2_10006cd4, align 4
  %v3_10006cd8 = lshr i32 %v3_10006cd4, %v1_10006ccc
  store i32 %v3_10006cd8, i32* %r0.global-to-local, align 4
  %v1_10006cdc = urem i32 %v3_10006cd8, 2
  store i32 %v1_10006cdc, i32* %r11.global-to-local, align 4
  %v3_10006cdc = icmp eq i32 %v1_10006cdc, 0
  br i1 %v3_10006cdc, label %dec_label_pc_10006ce4, label %dec_label_pc_10007848

dec_label_pc_10006ce4:                            ; preds = %dec_label_pc_10006cc8, %dec_label_pc_100078e0
  %v0_10006ce4 = phi i32 [ %v0_10006ccc, %dec_label_pc_10006cc8 ], [ %v0_10006ce4.pre, %dec_label_pc_100078e0 ]
  %v1_10006ce4 = call i32 @__asm_rlwinm(i32 %v0_10006ce4, i32 29, i32 3, i32 29)
  %v0_10006ce8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006ce8 = urem i32 %v0_10006ce8, 32
  store i32 %v1_10006ce8, i32* %r11.global-to-local, align 4
  %v1_10006cec = load i32, i32* %r14.global-to-local, align 4
  %v2_10006cec = add i32 %v1_10006cec, %v1_10006ce4
  store i32 %v2_10006cec, i32* %r9.global-to-local, align 4
  %v1_10006cf0 = add i32 %v2_10006cec, 56
  %v2_10006cf0 = inttoptr i32 %v1_10006cf0 to i32*
  %v3_10006cf0 = load i32, i32* %v2_10006cf0, align 4
  %v3_10006cf4 = lshr i32 %v3_10006cf0, %v1_10006ce8
  store i32 %v3_10006cf4, i32* %r0.global-to-local, align 4
  %v1_10006cf8 = urem i32 %v3_10006cf4, 2
  store i32 %v1_10006cf8, i32* %r9.global-to-local, align 4
  %v3_10006cf8 = icmp eq i32 %v1_10006cf8, 0
  br i1 %v3_10006cf8, label %dec_label_pc_10006c90, label %dec_label_pc_10006d00.preheader

dec_label_pc_10006d00.preheader:                  ; preds = %dec_label_pc_10006ce4
  %v0_10006d00.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006d00

dec_label_pc_10006d00:                            ; preds = %dec_label_pc_10006d00.preheader, %dec_label_pc_10006d6c
  %v0_10007770 = phi i32 [ %v0_10006d00.pre, %dec_label_pc_10006d00.preheader ], [ %v0_10006d80, %dec_label_pc_10006d6c ]
  %v1_10006d00 = add i32 %v0_10007770, 12
  %v2_10006d00 = inttoptr i32 %v1_10006d00 to i32*
  %v3_10006d00 = load i32, i32* %v2_10006d00, align 4
  store i32 %v3_10006d00, i32* %r10.global-to-local, align 4
  %v1_10006d04 = icmp slt i32 %v3_10006d00, 0
  %v3_10006d04 = icmp eq i32 %v3_10006d00, 0
  store i1 %v1_10006d04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d04, label %dec_label_pc_10006c90, label %dec_label_pc_10006d0c

dec_label_pc_10006d0c:                            ; preds = %dec_label_pc_10006d00
  %v1_10006d0c = add i32 %v0_10007770, 24
  %v2_10006d0c = inttoptr i32 %v1_10006d0c to i32*
  %v3_10006d0c = load i32, i32* %v2_10006d0c, align 4
  store i32 %v3_10006d0c, i32* %r0.global-to-local, align 4
  %v1_10006d10 = add i32 %v0_10007770, 28
  store i32 %v1_10006d10, i32* %r30.global-to-local, align 4
  %v1_10006d14 = icmp slt i32 %v3_10006d0c, 256
  %v3_10006d14 = icmp eq i32 %v3_10006d0c, 256
  store i1 %v1_10006d14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d14, label %dec_label_pc_10007768, label %dec_label_pc_10006d1c

dec_label_pc_10006d1c:                            ; preds = %dec_label_pc_10006d0c, %dec_label_pc_10007768
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10006d24 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006d24 = inttoptr i32 %v1_10006d24 to i32*
  store i32 0, i32* %v2_10006d24, align 4
  %v0_10006d28 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006d28 = add i32 %v0_10006d28, 24
  %v2_10006d28 = inttoptr i32 %v1_10006d28 to i32*
  %v3_10006d28 = load i32, i32* %v2_10006d28, align 4
  store i32 %v3_10006d28, i32* %r5.global-to-local, align 4
  %v1_10006d2c = add i32 %v0_10006d28, 4
  %v2_10006d2c = inttoptr i32 %v1_10006d2c to i32*
  %v3_10006d2c = load i32, i32* %v2_10006d2c, align 4
  store i32 %v3_10006d2c, i32* %r3.global-to-local, align 4
  %v0_10006d30 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006d30 = add i32 %v0_10006d30, %v3_10006d28
  store i32 %v2_10006d30, i32* @r29, align 4
  %v1_10006d34 = sub i32 256, %v3_10006d28
  store i32 %v1_10006d34, i32* %r5.global-to-local, align 4
  store i32 268463424, i32* @lr, align 4
  %v4_10006d3c = call i32 @function_100094a8(i32 %v3_10006d2c, i32 %v2_10006d30, i32 %v1_10006d34, i32 16384)
  store i32 %v4_10006d3c, i32* %r3.global-to-local, align 4
  %tmp117 = icmp slt i32 %v4_10006d3c, 1
  br i1 %tmp117, label %dec_label_pc_10007714, label %dec_label_pc_10006d48

dec_label_pc_10006d48:                            ; preds = %dec_label_pc_10006d1c
  store i32 %v4_10006d3c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006d54

dec_label_pc_10006d54:                            ; preds = %dec_label_pc_10006d64, %dec_label_pc_10006d48
  %v0_10006d6839 = phi i32 [ %v1_10006d68, %dec_label_pc_10006d64 ], [ %v4_10006d3c, %dec_label_pc_10006d48 ]
  %v1_10006d60 = phi i32 [ %v1_10006d64, %dec_label_pc_10006d64 ], [ 0, %dec_label_pc_10006d48 ]
  %v1_10006d54 = load i32, i32* @r29, align 4
  %v2_10006d54 = add i32 %v1_10006d54, %v1_10006d60
  %v3_10006d54 = inttoptr i32 %v2_10006d54 to i8*
  %v4_10006d54 = load i8, i8* %v3_10006d54, align 1
  %v5_10006d54 = zext i8 %v4_10006d54 to i32
  store i32 %v5_10006d54, i32* %r0.global-to-local, align 4
  %v3_10006d58 = icmp eq i8 %v4_10006d54, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d58, label %dec_label_pc_10006d60, label %dec_label_pc_10006d64

dec_label_pc_10006d60:                            ; preds = %dec_label_pc_10006d54
  %v0_10006d60 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006d60 = trunc i32 %v0_10006d60 to i8
  store i8 %v3_10006d60, i8* %v3_10006d54, align 1
  %v0_10006d64.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006d68.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006d64

dec_label_pc_10006d64:                            ; preds = %dec_label_pc_10006d54, %dec_label_pc_10006d60
  %v0_10006d68 = phi i32 [ %v0_10006d6839, %dec_label_pc_10006d54 ], [ %v0_10006d68.pre, %dec_label_pc_10006d60 ]
  %v0_10006d64 = phi i32 [ %v1_10006d60, %dec_label_pc_10006d54 ], [ %v0_10006d64.pre, %dec_label_pc_10006d60 ]
  %v1_10006d64 = add i32 %v0_10006d64, 1
  store i32 %v1_10006d64, i32* %r9.global-to-local, align 4
  %v1_10006d68 = add i32 %v0_10006d68, -1
  store i32 %v1_10006d68, i32* %ctr.global-to-local, align 4
  %v2_10006d68 = icmp eq i32 %v1_10006d68, 0
  br i1 %v2_10006d68, label %dec_label_pc_10006d6c, label %dec_label_pc_10006d54

dec_label_pc_10006d6c:                            ; preds = %dec_label_pc_10006d64, %dec_label_pc_10007718
  %v0_10006d6c = load i32, i32* %r28.global-to-local, align 4
  %v1_10006d6c = add i32 %v0_10006d6c, 24
  %v2_10006d6c = inttoptr i32 %v1_10006d6c to i32*
  %v3_10006d6c = load i32, i32* %v2_10006d6c, align 4
  %v3_10006d70 = load i32, i32* @global_var_1001ba24.101, align 4
  store i32 %v3_10006d70, i32* %r0.global-to-local, align 4
  %v2_10006d74 = add i32 %v3_10006d6c, %v4_10006d3c
  store i32 %v2_10006d74, i32* %r5.global-to-local, align 4
  store i32 %v2_10006d74, i32* %v2_10006d6c, align 4
  %v0_10006d7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10006d7c = load i32, i32* %r28.global-to-local, align 4
  %v2_10006d7c = add i32 %v1_10006d7c, 8
  %v3_10006d7c = inttoptr i32 %v2_10006d7c to i32*
  store i32 %v0_10006d7c, i32* %v3_10006d7c, align 4
  %v0_10006d80 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006d80 = add i32 %v0_10006d80, 12
  %v2_10006d80 = inttoptr i32 %v1_10006d80 to i32*
  %v3_10006d80 = load i32, i32* %v2_10006d80, align 4
  store i32 %v3_10006d80, i32* %r10.global-to-local, align 4
  %v1_10006d84 = icmp ult i32 %v3_10006d80, 10
  %v2_10006d84 = icmp ugt i32 %v3_10006d80, 10
  %v3_10006d84 = icmp eq i32 %v3_10006d80, 10
  store i1 %v1_10006d84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006d84, label %dec_label_pc_10006d00, label %dec_label_pc_10006d8c

dec_label_pc_10006d8c:                            ; preds = %dec_label_pc_10006d6c
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10006d90 = mul i32 %v3_10006d80, 4
  store i32 %v1_10006d90, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b360.142 to i32), i32* %r11.global-to-local, align 4
  %v2_10006d98 = add i32 %v1_10006d90, ptrtoint (i32* @global_var_1000b360.142 to i32)
  %v3_10006d98 = inttoptr i32 %v2_10006d98 to i32*
  %v4_10006d98 = load i32, i32* %v3_10006d98, align 4
  %v2_10006d9c = add i32 %v4_10006d98, ptrtoint (i32* @global_var_1000b360.142 to i32)
  store i32 %v2_10006d9c, i32* %r9.global-to-local, align 4
  store i32 %v2_10006d9c, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10006d9c)
  br label %dec_label_pc_10006da8

dec_label_pc_10006da8:                            ; preds = %dec_label_pc_10006c0c, %dec_label_pc_10006bf0, %dec_label_pc_10006d8c
  %v0_10006da8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10006da8 = load i32, i32* @r29, align 4
  %v2_10006da8 = add i32 %v1_10006da8, 12
  %v3_10006da8 = inttoptr i32 %v2_10006da8 to i32*
  store i32 %v0_10006da8, i32* %v3_10006da8, align 4
  %v0_10006dac = load i32, i32* %r28.global-to-local, align 4
  %v1_10006dac = trunc i32 %v0_10006dac to i8
  %v2_10006dac = load i32, i32* @r29, align 4
  %v3_10006dac = add i32 %v2_10006dac, 284
  %v4_10006dac = inttoptr i32 %v3_10006dac to i8*
  store i8 %v1_10006dac, i8* %v4_10006dac, align 1
  br label %dec_label_pc_10006b94

dec_label_pc_10006db4:                            ; preds = %dec_label_pc_10006b5c
  %v1_10006db8 = call i32 @__asm_rlwinm(i32 %v3_10006db4, i32 29, i32 3, i32 29)
  %v0_10006dbc = load i32, i32* @r31, align 4
  %v2_10006dbc = icmp slt i32 %v0_10006dbc, %v3_10006db4
  %v4_10006dbc = icmp eq i32 %v0_10006dbc, %v3_10006db4
  store i1 %v2_10006dbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006dbc, i1* %cr7_eq.global-to-local, align 1
  %v1_10006dc0 = load i32, i32* %r14.global-to-local, align 4
  %v2_10006dc0 = add i32 %v1_10006dc0, %v1_10006db8
  store i32 %v2_10006dc0, i32* %r11.global-to-local, align 4
  %v1_10006dc4 = urem i32 %v3_10006db4, 32
  store i32 %v1_10006dc4, i32* %r0.global-to-local, align 4
  %v1_10006dc8 = add i32 %v2_10006dc0, 184
  %v2_10006dc8 = inttoptr i32 %v1_10006dc8 to i32*
  %v3_10006dc8 = load i32, i32* %v2_10006dc8, align 4
  %v0_10006dcc = load i32, i32* %r10.global-to-local, align 4
  %v3_10006dcc = shl i32 %v0_10006dcc, %v1_10006dc4
  store i32 %v3_10006dcc, i32* %r0.global-to-local, align 4
  %v2_10006dd0 = or i32 %v3_10006dcc, %v3_10006dc8
  store i32 %v2_10006dd0, i32* %r9.global-to-local, align 4
  store i32 %v2_10006dd0, i32* %v2_10006dc8, align 4
  br i1 %v2_10006dbc, label %dec_label_pc_10006ddc, label %dec_label_pc_10006b94

dec_label_pc_10006ddc:                            ; preds = %dec_label_pc_10006db4
  store i32 %v3_10006db4, i32* @r31, align 4
  br label %dec_label_pc_10006b94

dec_label_pc_10007714:                            ; preds = %dec_label_pc_10006d1c
  %v3_10006d40 = icmp eq i32 %v4_10006d3c, 0
  br i1 %v3_10006d40, label %dec_label_pc_10007928, label %dec_label_pc_10007718

dec_label_pc_10007718:                            ; preds = %dec_label_pc_10007714
  %v1_10007718 = icmp slt i32 %v4_10006d3c, -1
  %v3_10007718 = icmp eq i32 %v4_10006d3c, -1
  store i1 %v1_10007718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007718, label %dec_label_pc_10007720, label %dec_label_pc_10006d6c

dec_label_pc_10007720:                            ; preds = %dec_label_pc_10007718
  %v0_10007720 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007720 = inttoptr i32 %v0_10007720 to i32*
  %v2_10007720 = load i32, i32* %v1_10007720, align 4
  store i32 %v2_10007720, i32* %r0.global-to-local, align 4
  %v1_10007724 = icmp slt i32 %v2_10007720, 11
  %v3_10007724 = icmp eq i32 %v2_10007720, 11
  store i1 %v1_10007724, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007724, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007724, label %dec_label_pc_10006c90, label %dec_label_pc_1000772c

dec_label_pc_1000772c:                            ; preds = %dec_label_pc_10007720, %dec_label_pc_10007928
  %v0_1000772c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000772c = add i32 %v0_1000772c, 4
  %v2_1000772c = inttoptr i32 %v1_1000772c to i32*
  %v3_1000772c = load i32, i32* %v2_1000772c, align 4
  store i32 %v3_1000772c, i32* %r3.global-to-local, align 4
  store i32 268465972, i32* @lr, align 4
  %v0_10007730 = call i32 @function_10008884()
  store i32 %v0_10007730, i32* %r3.global-to-local, align 4
  %v0_10007734 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007734 = add i32 %v0_10007734, 284
  %v2_10007734 = inttoptr i32 %v1_10007734 to i8*
  %v3_10007734 = load i8, i8* %v2_10007734, align 1
  %v4_10007734 = zext i8 %v3_10007734 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000773c = add nuw nsw i32 %v4_10007734, 1
  store i32 %v1_1000773c, i32* %r9.global-to-local, align 4
  %v2_10007740 = add i32 %v0_10007734, 4
  %v3_10007740 = inttoptr i32 %v2_10007740 to i32*
  store i32 -1, i32* %v3_10007740, align 4
  %v0_10007744 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007744 = urem i32 %v0_10007744, 256
  store i32 %v1_10007744, i32* %r9.global-to-local, align 4
  %v1_10007748 = icmp ult i32 %v1_10007744, 9
  %v3_10007748 = icmp eq i32 %v1_10007744, 9
  store i1 %v1_10007748, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007748, i1* %cr7_eq.global-to-local, align 1
  %v1_1000774c = trunc i32 %v0_10007744 to i8
  %v2_1000774c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000774c = add i32 %v2_1000774c, 284
  %v4_1000774c = inttoptr i32 %v3_1000774c to i8*
  store i8 %v1_1000774c, i8* %v4_1000774c, align 1
  %v0_10007750 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007750 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007750 = or i1 %v0_10007750, %v1_10007750
  br i1 %v2_10007750, label %dec_label_pc_100079d4, label %dec_label_pc_10007754

dec_label_pc_10007754:                            ; preds = %dec_label_pc_1000772c
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000775c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000775c = add i32 %v1_1000775c, 12
  %v3_1000775c = inttoptr i32 %v2_1000775c to i32*
  store i32 0, i32* %v3_1000775c, align 4
  %v0_10007760 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007760 = trunc i32 %v0_10007760 to i8
  %v2_10007760 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007760 = add i32 %v2_10007760, 284
  %v4_10007760 = inttoptr i32 %v3_10007760 to i8*
  store i8 %v1_10007760, i8* %v4_10007760, align 1
  br label %dec_label_pc_10006c90

dec_label_pc_10007768:                            ; preds = %dec_label_pc_10006d0c
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_10006d10, i32* %r3.global-to-local, align 4
  %v1_10007770 = add i32 %v0_10007770, 92
  store i32 268466040, i32* @lr, align 4
  %v3_10007774 = call i32 @function_10008fe4(i32 %v1_10006d10, i32 %v1_10007770, i32 192)
  store i32 %v3_10007774, i32* %r3.global-to-local, align 4
  %v0_10007778 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007778 = add i32 %v0_10007778, 24
  %v2_10007778 = inttoptr i32 %v1_10007778 to i32*
  %v3_10007778 = load i32, i32* %v2_10007778, align 4
  store i32 %v3_10007778, i32* %r9.global-to-local, align 4
  %v1_1000777c = add i32 %v3_10007778, -64
  store i32 %v1_1000777c, i32* %r5.global-to-local, align 4
  store i32 %v1_1000777c, i32* %v2_10007778, align 4
  br label %dec_label_pc_10006d1c

dec_label_pc_10007848:                            ; preds = %dec_label_pc_10006cc8
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_10007858, i32* %r6.global-to-local, align 4
  store i32 %v2_1000785c, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268466284, i32* @lr, align 4
  %v5_10007868 = call i32 @function_1000943c(i32 1, i32 4, i32 %v2_10007858, i32 %v2_1000785c, i32 %v2_10006cd0)
  store i32 %v5_10007868, i32* %r3.global-to-local, align 4
  %v3_1000786c = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_1000786c, i32* %r0.global-to-local, align 4
  %v2_10007870 = or i32 %v3_1000786c, %v5_10007868
  store i32 %v2_10007870, i32* %r9.global-to-local, align 4
  %v5_10007870 = icmp eq i32 %v2_10007870, 0
  br i1 %v5_10007870, label %dec_label_pc_10007878, label %dec_label_pc_10007908

dec_label_pc_10007878:                            ; preds = %dec_label_pc_10007848
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_1000787c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000787c = add i32 %v1_1000787c, 12
  %v3_1000787c = inttoptr i32 %v2_1000787c to i32*
  store i32 2, i32* %v3_1000787c, align 4
  %v0_10007880 = call i32 @function_10005d24()
  %v3_10007888 = load i16, i16* @global_var_1001ba20.104, align 2
  %v4_10007888 = zext i16 %v3_10007888 to i32
  store i32 %v4_10007888, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007890 = load i32, i32* @global_var_1001ba18.102, align 4
  store i32 %v3_10007890, i32* %r10.global-to-local, align 4
  %v1_10007898 = icmp slt i32 %v3_10007890, 0
  %v3_10007898 = icmp eq i32 %v3_10007890, 0
  store i1 %v1_10007898, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007898, i1* %cr7_eq.global-to-local, align 1
  %v2_10007894 = urem i32 %v0_10007880, %v4_10007888
  %v2_1000789c = sub i32 %v0_10007880, %v2_10007894
  store i32 %v2_1000789c, i32* %r0.global-to-local, align 4
  store i32 %v2_10007894, i32* %r3.global-to-local, align 4
  %tmp119 = icmp slt i32 %v3_10007890, 1
  br i1 %tmp119, label %dec_label_pc_100078dc, label %dec_label_pc_100078ac

dec_label_pc_100078ac:                            ; preds = %dec_label_pc_10007878
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10007890, i32* %ctr.global-to-local, align 4
  %v3_100078b4 = load i32, i32* @global_var_1001ba1c.103, align 4
  store i32 %v3_100078b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100078b8

dec_label_pc_100078b8:                            ; preds = %dec_label_pc_100078d4, %dec_label_pc_100078ac
  %v0_100078d8 = phi i32 [ %v1_100078d8, %dec_label_pc_100078d4 ], [ %v3_10007890, %dec_label_pc_100078ac ]
  %v0_100078d4 = phi i32 [ %v1_100078d4, %dec_label_pc_100078d4 ], [ %v3_100078b4, %dec_label_pc_100078ac ]
  store i32 %v0_100078d4, i32* %r9.global-to-local, align 4
  %v1_100078bc = add i32 %v0_100078d4, 8
  %v2_100078bc = inttoptr i32 %v1_100078bc to i16*
  %v3_100078bc = load i16, i16* %v2_100078bc, align 2
  %v4_100078bc = zext i16 %v3_100078bc to i32
  store i32 %v4_100078bc, i32* %r0.global-to-local, align 4
  %v2_100078c0 = icmp ult i32 %v4_100078bc, %v2_10007894
  %v3_100078c0 = icmp ugt i32 %v4_100078bc, %v2_10007894
  %v4_100078c0 = icmp eq i32 %v4_100078bc, %v2_10007894
  br i1 %v3_100078c0, label %dec_label_pc_100078d4, label %dec_label_pc_100078c8

dec_label_pc_100078c8:                            ; preds = %dec_label_pc_100078b8
  %v1_100078c8 = add i32 %v0_100078d4, 10
  %v2_100078c8 = inttoptr i32 %v1_100078c8 to i16*
  %v3_100078c8 = load i16, i16* %v2_100078c8, align 2
  %v4_100078c8 = zext i16 %v3_100078c8 to i32
  store i32 %v4_100078c8, i32* %r0.global-to-local, align 4
  %v2_100078cc = icmp ult i32 %v4_100078c8, %v2_10007894
  %v3_100078cc = icmp ugt i32 %v4_100078c8, %v2_10007894
  %v4_100078cc = icmp eq i32 %v4_100078c8, %v2_10007894
  br i1 %v3_100078cc, label %dec_label_pc_100078e0.loopexit, label %dec_label_pc_100078d4

dec_label_pc_100078d4:                            ; preds = %dec_label_pc_100078c8, %dec_label_pc_100078b8
  %v4_100078cc7 = phi i1 [ %v4_100078cc, %dec_label_pc_100078c8 ], [ %v4_100078c0, %dec_label_pc_100078b8 ]
  %v2_100078cc5 = phi i1 [ %v2_100078cc, %dec_label_pc_100078c8 ], [ %v2_100078c0, %dec_label_pc_100078b8 ]
  %v1_100078d4 = add i32 %v0_100078d4, 16
  store i32 %v1_100078d4, i32* %r0.global-to-local, align 4
  %v1_100078d8 = add i32 %v0_100078d8, -1
  store i32 %v1_100078d8, i32* %ctr.global-to-local, align 4
  %v2_100078d8 = icmp eq i32 %v1_100078d8, 0
  br i1 %v2_100078d8, label %dec_label_pc_100078dc.loopexit, label %dec_label_pc_100078b8

dec_label_pc_100078dc.loopexit:                   ; preds = %dec_label_pc_100078d4
  store i1 %v2_100078cc5, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100078cc7, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100078dc

dec_label_pc_100078dc:                            ; preds = %dec_label_pc_100078dc.loopexit, %dec_label_pc_10007878
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100078e0

dec_label_pc_100078e0.loopexit:                   ; preds = %dec_label_pc_100078c8
  store i1 %v2_100078cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100078cc, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100078e0

dec_label_pc_100078e0:                            ; preds = %dec_label_pc_100078e0.loopexit, %dec_label_pc_100078dc
  %v0_100078e8 = phi i32 [ %v0_100078d4, %dec_label_pc_100078e0.loopexit ], [ 0, %dec_label_pc_100078dc ]
  %v0_100078e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100078e0 = add i32 %v0_100078e0, 4
  %v2_100078e0 = inttoptr i32 %v1_100078e0 to i32*
  %v3_100078e0 = load i32, i32* %v2_100078e0, align 4
  store i32 %v3_100078e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100078e8 = inttoptr i32 %v0_100078e0 to i32*
  store i32 %v0_100078e8, i32* %v2_100078e8, align 4
  %v0_100078ec = load i32, i32* %r5.global-to-local, align 4
  %v1_100078ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100078ec = add i32 %v1_100078ec, 24
  %v3_100078ec = inttoptr i32 %v2_100078ec to i32*
  store i32 %v0_100078ec, i32* %v3_100078ec, align 4
  %v0_10006ce4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006ce4

dec_label_pc_10007908:                            ; preds = %dec_label_pc_10007848
  %v0_10007908 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007908 = add i32 %v0_10007908, 4
  %v2_10007908 = inttoptr i32 %v1_10007908 to i32*
  %v3_10007908 = load i32, i32* %v2_10007908, align 4
  store i32 %v3_10007908, i32* %r3.global-to-local, align 4
  store i32 268466448, i32* @lr, align 4
  %v0_1000790c = call i32 @function_10008884()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007918 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007918 = add i32 %v1_10007918, 4
  %v3_10007918 = inttoptr i32 %v2_10007918 to i32*
  store i32 -1, i32* %v3_10007918, align 4
  %v0_1000791c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000791c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000791c = add i32 %v1_1000791c, 12
  %v3_1000791c = inttoptr i32 %v2_1000791c to i32*
  store i32 %v0_1000791c, i32* %v3_1000791c, align 4
  %v0_10007920 = load i32, i32* @r31, align 4
  %v1_10007920 = trunc i32 %v0_10007920 to i8
  %v2_10007920 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007920 = add i32 %v2_10007920, 284
  %v4_10007920 = inttoptr i32 %v3_10007920 to i8*
  store i8 %v1_10007920, i8* %v4_10007920, align 1
  br label %dec_label_pc_10006c90

dec_label_pc_10007928:                            ; preds = %dec_label_pc_10007714
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_1000792c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000792c = inttoptr i32 %v1_1000792c to i32*
  store i32 104, i32* %v2_1000792c, align 4
  br label %dec_label_pc_1000772c

dec_label_pc_100079d4:                            ; preds = %dec_label_pc_1000772c
  %v0_100079d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100079d4, i32* @r3, align 4
  store i32 268466652, i32* @lr, align 4
  %v0_100079d8 = call i32 @function_10006004()
  store i32 %v0_100079d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c90

dec_label_pc_10007a00:                            ; preds = %dec_label_pc_10006424
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007a04 = load i32, i32* @global_var_1001ba2c.109, align 4
  store i32 %v3_10007a04, i32* %r3.global-to-local, align 4
  store i32 268466700, i32* @lr, align 4
  %v0_10007a08 = call i32 @function_10008884()
  store i32 %v0_10007a08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006a30

dec_label_pc_10007a10:                            ; preds = %dec_label_pc_10006940
  store i32 %v0_10006938, i32* @r29, align 4
  br label %dec_label_pc_10007a14

dec_label_pc_10007a14:                            ; preds = %dec_label_pc_1000697c, %dec_label_pc_10007a10
  %v1_10007a14 = phi i32 [ %v2_10006954, %dec_label_pc_10007a10 ], [ %v0_1000697c, %dec_label_pc_1000697c ]
  %v2_10007a14 = add i32 %v1_10007a14, 16
  %v3_10007a14 = inttoptr i32 %v2_10007a14 to i32*
  store i32 %tmp51, i32* %v3_10007a14, align 4
  %v0_10007a18 = load i32, i32* @r29, align 4
  store i32 %v0_10007a18, i32* @r31, align 4
  %v0_10007a1c = load i32, i32* %r8.global-to-local, align 4
  %v1_10007a1c = trunc i32 %v0_10007a1c to i16
  %v2_10007a1c = load i32, i32* @r3, align 4
  %v3_10007a1c = add i32 %v2_10007a1c, 20
  %v4_10007a1c = inttoptr i32 %v3_10007a1c to i16*
  store i16 %v1_10007a1c, i16* %v4_10007a1c, align 2
  store i32 268466724, i32* @lr, align 4
  %v0_10007a20 = call i32 @function_10006004()
  store i32 %v0_10007a20, i32* %r3.global-to-local, align 4
  %v1_10006880.pre.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10006878

; uselistorder directives
  uselistorder i32 %v1_100078d8, { 2, 1, 0 }
  uselistorder i32 %v1_100078d4, { 1, 0 }
  uselistorder i32 %v4_100078c8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100078bc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100078d4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10007894, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10007890, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007744, { 1, 2, 0 }
  uselistorder i32 %v0_10007744, { 1, 0 }
  uselistorder i32 %v2_10007720, { 1, 0, 2 }
  uselistorder i32 %v1_10006dc4, { 1, 0 }
  uselistorder i32 %v1_10006d90, { 1, 0 }
  uselistorder i32 %v3_10006d80, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10006d80, { 1, 0 }
  uselistorder i32 %v1_10006d68, { 2, 1, 0 }
  uselistorder i32 %v1_10006d64, { 1, 0 }
  uselistorder i32 %v1_10006d60, { 1, 0 }
  uselistorder i32 %v4_10006d3c, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_10006d28, { 1, 0, 2 }
  uselistorder i32 %v1_10006d10, { 1, 0, 2 }
  uselistorder i32 %v3_10006d0c, { 1, 0, 2 }
  uselistorder i32 %v3_10006d00, { 1, 0, 2 }
  uselistorder i32 %v0_10007770, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10006cf8, { 1, 0 }
  uselistorder i32 %v1_10006ce8, { 1, 0 }
  uselistorder i32 %v1_10006cdc, { 1, 0 }
  uselistorder i32 %v1_10006ccc, { 1, 0 }
  uselistorder i32 %v0_10006ccc, { 1, 0 }
  uselistorder i32 %v3_10006cbc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006ca8, { 1, 0 }
  uselistorder i32 %v1_10006c94, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006c30, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10006c14, { 1, 2, 0 }
  uselistorder i32 %v1_10006c10, { 1, 0 }
  uselistorder i32 %v3_10006bf8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10006be4, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10006bc8, { 2, 0, 1 }
  uselistorder i1 %v1_10006bc8, { 1, 0, 2 }
  uselistorder i32 %v3_10006bc4, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_10006bc0, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_10006b98, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006b78, { 1, 0 }
  uselistorder i32 %v3_10006db4, { 5, 0, 8, 7, 9, 4, 1, 3, 2, 6, 10 }
  uselistorder i32 %v2_10006b50, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10006b28, { 1, 0 }
  uselistorder i32 %v1_10006b08, { 1, 0 }
  uselistorder i32 %v0_10006ad4, { 1, 2, 0 }
  uselistorder i32 %v0_10006ac8, { 1, 2, 0 }
  uselistorder i32 %v0_10006abc, { 1, 2, 0 }
  uselistorder i32 %v0_10006ab0, { 1, 2, 0 }
  uselistorder i32 %v0_10006a8c, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_10006a78, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006a6c, { 1, 2, 0 }
  uselistorder i32 %v0_10006a58, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006a44, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006a38, { 1, 2, 0 }
  uselistorder i32 %v1_10006984, { 1, 0 }
  uselistorder i32 %v3_1000697c, { 1, 0, 2 }
  uselistorder i32 %v1_10006978, { 2, 1, 0 }
  uselistorder i32 %v1_10006974, { 1, 0 }
  uselistorder i32 %v0_1000697c, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10006958, { 1, 0, 2 }
  uselistorder i32 %v0_10006938, { 3, 1, 2, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_100068c0, { 1, 0, 2 }
  uselistorder i32 %v2_100068a8, { 1, 0, 2 }
  uselistorder i32 %v0_100068a8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_1000689c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_100068ec, { 1, 0 }
  uselistorder i32 %v1_1000691c, { 1, 0 }
  uselistorder i32 %v1_10006914, { 1, 0 }
  uselistorder i32 %v1_1000690c, { 1, 0 }
  uselistorder i32 %v1_1000692c, { 2, 1, 0 }
  uselistorder i32 %v1_10006904, { 1, 0 }
  uselistorder i32 %v4_100068f4, { 1, 0, 2 }
  uselistorder i32 %v1_10006858, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100067e4, { 1, 0 }
  uselistorder i32 %v4_100067c4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006734, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100066bc, { 3, 1, 2, 0 }
  uselistorder i32 %v0_100066a8, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_10006690, { 1, 2, 0 }
  uselistorder i32 %v0_1000668c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006678, { 1, 0 }
  uselistorder i32 %v3_10006648, { 1, 0, 2 }
  uselistorder i32 %v0_100064b8, { 1, 0 }
  uselistorder i32 %v1_10006478, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006468, { 1, 0, 2 }
  uselistorder i32 %v3_1000640c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100063f4, { 1, 0 }
  uselistorder i32 %v0_100063f0, { 1, 0 }
  uselistorder i32 %v1_100063ec, { 1, 0 }
  uselistorder i32 %v0_100063dc, { 1, 2, 0 }
  uselistorder i32 %v2_1000639c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_100062f8, { 2, 4, 3, 5, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1888, { 0, 2, 1, 3 }
  uselistorder i32 %tmp57, { 1, 2, 0 }
  uselistorder i8 %tmp56, { 2, 1, 0 }
  uselistorder i16 %tmp55, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp53, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 28, 25, 26, 27, 29, 45, 46, 30, 47, 48, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 50, 51, 52, 53, 57, 54, 55, 56, 58, 44 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 24, 27, 26, 28, 29, 30, 17, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 48, 47, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 46, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %r28.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 20, 15, 16, 17, 18, 0, 19, 21, 22, 23 }
  uselistorder i32* %r26.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r14.global-to-local, { 0, 1, 2, 3, 5, 7, 4, 6 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 21, 13, 22, 26, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 35, 29, 30, 31, 32, 33, 34, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 59, 60, 61 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 15, 7, 8, 9, 16, 17, 10, 11, 12, 13, 18, 19, 20 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 84, 85 }
  uselistorder i1* %cr7_eq.global-to-local, { 86, 87, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 84, 85 }
  uselistorder i16* @global_var_1001ba20.104, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000943c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_100094a8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10008b4c, { 1, 0 }
  uselistorder i32 ()* @function_10006004, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_100094e0, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009558, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16384, { 2, 25, 0, 26, 1, 27, 19, 20, 21, 22, 23, 24, 18, 3, 28, 4, 29, 30, 31, 5, 7, 6, 8, 32, 9, 33, 11, 34, 10, 13, 35, 12, 15, 14, 16, 36, 37, 17, 38, 39 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 33, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 192, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @function_100060f0, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001baae.119, { 2, 0, 1 }
  uselistorder i16 23, { 2, 3, 1, 0, 4 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 66, 0, 1, 2, 3, 4, 6, 5, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 ()* @function_10005d24, { 73, 72, 71, 23, 22, 21, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009598, { 2, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 2048, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_10008c54, { 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @function_100083c8, { 0, 2, 3, 1 }
  uselistorder i32 ()* @function_100088cc, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @r24, { 1, 2, 3, 4, 5, 6, 7, 9, 10, 8, 11, 0, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_10007a14, { 1, 0 }
  uselistorder label %dec_label_pc_1000772c, { 1, 0 }
  uselistorder label %dec_label_pc_10006da8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d64, { 1, 0 }
  uselistorder label %dec_label_pc_10006d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d00, { 1, 0 }
  uselistorder label %dec_label_pc_10006ce4, { 1, 0 }
  uselistorder label %dec_label_pc_10006c90, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10006c60, { 1, 0 }
  uselistorder label %dec_label_pc_10006b94, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_10006b1c.dec_label_pc_10006b1c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006afc.dec_label_pc_10006afc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006aec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006a38, { 1, 0 }
  uselistorder label %dec_label_pc_10006a30, { 1, 0 }
  uselistorder label %dec_label_pc_10006878, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_1000686c, { 1, 0 }
  uselistorder label %dec_label_pc_10006798, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_1000668c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006474, { 1, 0 }
  uselistorder label %dec_label_pc_1000630c, { 1, 0 }
}

define i32 @function_10007a28(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10007a28:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007a28 = icmp eq i32* %arg2, null
  %v1_10007a30 = mul i32 %arg1, 8
  store i32 %v1_10007a30, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001bae8.162 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10007a28, label %dec_label_pc_10007a48, label %dec_label_pc_10007a40

dec_label_pc_10007a40:                            ; preds = %dec_label_pc_10007a28
  %v1_10007a40 = add i32 %v1_10007a30, add (i32 ptrtoint (i32* @global_var_1001bae8.162 to i32), i32 4)
  %v2_10007a40 = inttoptr i32 %v1_10007a40 to i16*
  %v3_10007a40 = load i16, i16* %v2_10007a40, align 4
  %v4_10007a40 = zext i16 %v3_10007a40 to i32
  store i32 %v4_10007a40, i32* %arg2, align 4
  %v0_10007a48.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10007a48.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007a48

dec_label_pc_10007a48:                            ; preds = %dec_label_pc_10007a28, %dec_label_pc_10007a40
  %v1_10007a48 = phi i32 [ ptrtoint (i32* @global_var_1001bae8.162 to i32), %dec_label_pc_10007a28 ], [ %v1_10007a48.pre, %dec_label_pc_10007a40 ]
  %v0_10007a48 = phi i32 [ %v1_10007a30, %dec_label_pc_10007a28 ], [ %v0_10007a48.pre, %dec_label_pc_10007a40 ]
  %v2_10007a48 = add i32 %v0_10007a48, %v1_10007a48
  %v3_10007a48 = inttoptr i32 %v2_10007a48 to i32*
  %v4_10007a48 = load i32, i32* %v3_10007a48, align 4
  store i32 %v4_10007a48, i32* %r3.global-to-local, align 4
  ret i32 %v4_10007a48

; uselistorder directives
  uselistorder i32 %v1_10007a30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007a48, { 1, 0 }
}

define i32 @function_10007a50(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007a50:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007a54 = mul i32 %arg1, 8
  %v2_10007a5c = add i32 %v1_10007a54, ptrtoint (i32* @global_var_1001bae8.162 to i32)
  %v1_10007a64 = add i32 %v1_10007a54, add (i32 ptrtoint (i32* @global_var_1001bae8.162 to i32), i32 4)
  %v2_10007a64 = inttoptr i32 %v1_10007a64 to i16*
  %v3_10007a64 = load i16, i16* %v2_10007a64, align 4
  %v3_10007a68 = icmp eq i16 %v3_10007a64, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a68, i1* %cr7_eq.global-to-local, align 1
  %v3_10007a6c = load i32, i32* @global_var_1001b9e4.163, align 4
  %v1_10007a70 = udiv i32 %v3_10007a6c, 16777216
  store i32 %v1_10007a70, i32* @r5, align 4
  %v1_10007a74 = urem i32 %v3_10007a6c, 256
  store i32 %v1_10007a74, i32* %r6.global-to-local, align 4
  %v1_10007a78 = call i32 @__asm_rlwinm(i32 %v3_10007a6c, i32 24, i32 24, i32 31)
  %v1_10007a7c = call i32 @__asm_rlwinm(i32 %v3_10007a6c, i32 16, i32 24, i32 31)
  %v0_10007a80 = load i32, i32* @lr, align 4
  %v1_10007a80 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007a80 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007a80 = or i1 %v1_10007a80, %v2_10007a80
  call void @__pseudo_cond_branch(i1 %v3_10007a80, i32 %v0_10007a80)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007a88 = inttoptr i32 %v2_10007a5c to i32*
  br label %dec_label_pc_10007a88

dec_label_pc_10007a88:                            ; preds = %dec_label_pc_10007a88, %dec_label_pc_10007a50
  %v1_10007a94 = phi i32 [ %v1_10007ac8, %dec_label_pc_10007a88 ], [ 0, %dec_label_pc_10007a50 ]
  %v2_10007a88 = load i32, i32* %v1_10007a88, align 4
  %v2_10007a8c = add i32 %v2_10007a88, %v1_10007a94
  %v3_10007a8c = inttoptr i32 %v2_10007a8c to i8*
  %v4_10007a8c = load i8, i8* %v3_10007a8c, align 1
  %v5_10007a8c = zext i8 %v4_10007a8c to i32
  %v0_10007a90 = load i32, i32* %r6.global-to-local, align 4
  %v2_10007a90 = xor i32 %v0_10007a90, %v5_10007a8c
  %v3_10007a94 = trunc i32 %v2_10007a90 to i8
  store i8 %v3_10007a94, i8* %v3_10007a8c, align 1
  %v2_10007a98 = load i32, i32* %v1_10007a88, align 4
  %v0_10007a9c = load i32, i32* %r10.global-to-local, align 4
  %v2_10007a9c = add i32 %v0_10007a9c, %v2_10007a98
  %v3_10007a9c = inttoptr i32 %v2_10007a9c to i8*
  %v4_10007a9c = load i8, i8* %v3_10007a9c, align 1
  %v5_10007a9c = zext i8 %v4_10007a9c to i32
  %v2_10007aa0 = xor i32 %v5_10007a9c, %v1_10007a78
  %v3_10007aa4 = trunc i32 %v2_10007aa0 to i8
  store i8 %v3_10007aa4, i8* %v3_10007a9c, align 1
  %v2_10007aa8 = load i32, i32* %v1_10007a88, align 4
  %v0_10007aac = load i32, i32* %r10.global-to-local, align 4
  %v2_10007aac = add i32 %v0_10007aac, %v2_10007aa8
  %v3_10007aac = inttoptr i32 %v2_10007aac to i8*
  %v4_10007aac = load i8, i8* %v3_10007aac, align 1
  %v5_10007aac = zext i8 %v4_10007aac to i32
  %v2_10007ab0 = xor i32 %v5_10007aac, %v1_10007a7c
  %v3_10007ab4 = trunc i32 %v2_10007ab0 to i8
  store i8 %v3_10007ab4, i8* %v3_10007aac, align 1
  %v2_10007ab8 = load i32, i32* %v1_10007a88, align 4
  %v0_10007abc = load i32, i32* %r10.global-to-local, align 4
  %v2_10007abc = add i32 %v0_10007abc, %v2_10007ab8
  %v3_10007abc = inttoptr i32 %v2_10007abc to i8*
  %v4_10007abc = load i8, i8* %v3_10007abc, align 1
  %v5_10007abc = zext i8 %v4_10007abc to i32
  %v0_10007ac0 = load i32, i32* @r5, align 4
  %v2_10007ac0 = xor i32 %v0_10007ac0, %v5_10007abc
  %v3_10007ac4 = trunc i32 %v2_10007ac0 to i8
  store i8 %v3_10007ac4, i8* %v3_10007abc, align 1
  %v0_10007ac8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007ac8 = add i32 %v0_10007ac8, 1
  store i32 %v1_10007ac8, i32* %r10.global-to-local, align 4
  %v3_10007acc = load i16, i16* %v2_10007a64, align 4
  %v4_10007acc = zext i16 %v3_10007acc to i32
  %v2_10007ad0 = icmp slt i32 %v4_10007acc, %v1_10007ac8
  %v3_10007ad0 = icmp sgt i32 %v4_10007acc, %v1_10007ac8
  %v4_10007ad0 = icmp eq i32 %v4_10007acc, %v1_10007ac8
  store i1 %v2_10007ad0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007ad0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ad0, label %dec_label_pc_10007a88, label %dec_label_pc_10007ad8

dec_label_pc_10007ad8:                            ; preds = %dec_label_pc_10007a88
  ret i32 %v2_10007a5c

; uselistorder directives
  uselistorder i32 %v4_10007acc, { 2, 1, 0 }
  uselistorder i32 %v1_10007ac8, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007a6c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007a54, { 1, 0 }
}

define i32 @function_10007adc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007adc:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007ae0 = mul i32 %arg1, 8
  %v2_10007ae8 = add i32 %v1_10007ae0, ptrtoint (i32* @global_var_1001bae8.162 to i32)
  %v1_10007af0 = add i32 %v1_10007ae0, add (i32 ptrtoint (i32* @global_var_1001bae8.162 to i32), i32 4)
  %v2_10007af0 = inttoptr i32 %v1_10007af0 to i16*
  %v3_10007af0 = load i16, i16* %v2_10007af0, align 4
  %v3_10007af4 = icmp eq i16 %v3_10007af0, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007af4, i1* %cr7_eq.global-to-local, align 1
  %v3_10007af8 = load i32, i32* @global_var_1001b9e4.163, align 4
  %v1_10007afc = udiv i32 %v3_10007af8, 16777216
  store i32 %v1_10007afc, i32* @r5, align 4
  %v1_10007b00 = urem i32 %v3_10007af8, 256
  store i32 %v1_10007b00, i32* %r6.global-to-local, align 4
  %v1_10007b04 = call i32 @__asm_rlwinm(i32 %v3_10007af8, i32 24, i32 24, i32 31)
  %v1_10007b08 = call i32 @__asm_rlwinm(i32 %v3_10007af8, i32 16, i32 24, i32 31)
  %v0_10007b0c = load i32, i32* @lr, align 4
  %v1_10007b0c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007b0c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007b0c = or i1 %v1_10007b0c, %v2_10007b0c
  call void @__pseudo_cond_branch(i1 %v3_10007b0c, i32 %v0_10007b0c)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007b14 = inttoptr i32 %v2_10007ae8 to i32*
  br label %dec_label_pc_10007b14

dec_label_pc_10007b14:                            ; preds = %dec_label_pc_10007b14, %dec_label_pc_10007adc
  %v1_10007b20 = phi i32 [ %v1_10007b54, %dec_label_pc_10007b14 ], [ 0, %dec_label_pc_10007adc ]
  %v2_10007b14 = load i32, i32* %v1_10007b14, align 4
  %v2_10007b18 = add i32 %v2_10007b14, %v1_10007b20
  %v3_10007b18 = inttoptr i32 %v2_10007b18 to i8*
  %v4_10007b18 = load i8, i8* %v3_10007b18, align 1
  %v5_10007b18 = zext i8 %v4_10007b18 to i32
  %v0_10007b1c = load i32, i32* %r6.global-to-local, align 4
  %v2_10007b1c = xor i32 %v0_10007b1c, %v5_10007b18
  %v3_10007b20 = trunc i32 %v2_10007b1c to i8
  store i8 %v3_10007b20, i8* %v3_10007b18, align 1
  %v2_10007b24 = load i32, i32* %v1_10007b14, align 4
  %v0_10007b28 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007b28 = add i32 %v0_10007b28, %v2_10007b24
  %v3_10007b28 = inttoptr i32 %v2_10007b28 to i8*
  %v4_10007b28 = load i8, i8* %v3_10007b28, align 1
  %v5_10007b28 = zext i8 %v4_10007b28 to i32
  %v2_10007b2c = xor i32 %v5_10007b28, %v1_10007b04
  %v3_10007b30 = trunc i32 %v2_10007b2c to i8
  store i8 %v3_10007b30, i8* %v3_10007b28, align 1
  %v2_10007b34 = load i32, i32* %v1_10007b14, align 4
  %v0_10007b38 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007b38 = add i32 %v0_10007b38, %v2_10007b34
  %v3_10007b38 = inttoptr i32 %v2_10007b38 to i8*
  %v4_10007b38 = load i8, i8* %v3_10007b38, align 1
  %v5_10007b38 = zext i8 %v4_10007b38 to i32
  %v2_10007b3c = xor i32 %v5_10007b38, %v1_10007b08
  %v3_10007b40 = trunc i32 %v2_10007b3c to i8
  store i8 %v3_10007b40, i8* %v3_10007b38, align 1
  %v2_10007b44 = load i32, i32* %v1_10007b14, align 4
  %v0_10007b48 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007b48 = add i32 %v0_10007b48, %v2_10007b44
  %v3_10007b48 = inttoptr i32 %v2_10007b48 to i8*
  %v4_10007b48 = load i8, i8* %v3_10007b48, align 1
  %v5_10007b48 = zext i8 %v4_10007b48 to i32
  %v0_10007b4c = load i32, i32* @r5, align 4
  %v2_10007b4c = xor i32 %v0_10007b4c, %v5_10007b48
  %v3_10007b50 = trunc i32 %v2_10007b4c to i8
  store i8 %v3_10007b50, i8* %v3_10007b48, align 1
  %v0_10007b54 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007b54 = add i32 %v0_10007b54, 1
  store i32 %v1_10007b54, i32* %r10.global-to-local, align 4
  %v3_10007b58 = load i16, i16* %v2_10007af0, align 4
  %v4_10007b58 = zext i16 %v3_10007b58 to i32
  %v2_10007b5c = icmp slt i32 %v4_10007b58, %v1_10007b54
  %v3_10007b5c = icmp sgt i32 %v4_10007b58, %v1_10007b54
  %v4_10007b5c = icmp eq i32 %v4_10007b58, %v1_10007b54
  store i1 %v2_10007b5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007b5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b5c, label %dec_label_pc_10007b14, label %dec_label_pc_10007b64

dec_label_pc_10007b64:                            ; preds = %dec_label_pc_10007b14
  ret i32 %v2_10007ae8

; uselistorder directives
  uselistorder i32 %v4_10007b58, { 2, 1, 0 }
  uselistorder i32 %v1_10007b54, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007af8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_10007ae8, { 1, 0 }
  uselistorder i32 %v1_10007ae0, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001bae8.162 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001bae8.162 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10007b68(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007b68:
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 5, i32* %r22.global-to-local, align 4
  store i32 6, i32* %r23.global-to-local, align 4
  store i32 14, i32* %r24.global-to-local, align 4
  store i32 2, i32* %r25.global-to-local, align 4
  store i32 13, i32* %r26.global-to-local, align 4
  %v0_10007bac = load i32, i32* @r28, align 4
  store i32 268467128, i32* @lr, align 4
  %v0_10007bb4 = call i32 @function_100097d8()
  store i32 %v0_10007bb4, i32* %r28.global-to-local, align 4
  store i32 268467156, i32* @lr, align 4
  %v4_10007bd0 = call i32 @function_10008148(i32 ptrtoint ([3 x i8]* @global_var_1000b39c.164 to i32), i32 2, i32 2)
  %v0_10007bd4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bd4, i32* @global_var_1001baf0.165, align 4
  store i32 13, i32* @r3, align 4
  store i32 ptrtoint ([14 x i8]* @global_var_1000b3a0.166 to i32), i32* @r28, align 4
  %v0_10007be4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007be4 = trunc i32 %v0_10007be4 to i16
  store i16 %v1_10007be4, i16* bitcast (i32* @global_var_1001baf4.167 to i16*), align 4
  store i32 268467180, i32* @lr, align 4
  %v0_10007be8 = call i32 @function_100097d8()
  %v0_10007bec = load i32, i32* @r28, align 4
  store i32 %v0_10007be8, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bfc.168 to i32), i32* @lr, align 4
  %v4_10007bf8 = call i32 @function_10008148(i32 %v0_10007bec, i32 13, i32 13)
  store i32 13, i32* @r3, align 4
  store i32 %v0_10007be8, i32* @global_var_1001baf8.169, align 4
  %v0_10007c04 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007c04 = trunc i32 %v0_10007c04 to i16
  store i16 %v1_10007c04, i16* bitcast (i32* @global_var_1001bafc.170 to i16*), align 4
  store i32 268467212, i32* @lr, align 4
  %v0_10007c08 = call i32 @function_100097d8()
  %v0_10007c0c = load i32, i32* @r28, align 4
  store i32 %v0_10007c08, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c1c.171 to i32), i32* @lr, align 4
  %v4_10007c18 = call i32 @function_10008148(i32 %v0_10007c0c, i32 13, i32 13)
  store i32 2, i32* @r3, align 4
  store i32 %v0_10007c08, i32* @global_var_1001bb00.172, align 4
  %v0_10007c24 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007c24 = trunc i32 %v0_10007c24 to i16
  store i16 %v1_10007c24, i16* bitcast (i32* @global_var_1001bb04.173 to i16*), align 4
  store i32 268467244, i32* @lr, align 4
  %v0_10007c28 = call i32 @function_100097d8()
  store i32 %v0_10007c28, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c40.175 to i32), i32* @lr, align 4
  %v3_10007c3c = call i32 @function_10008148(i32 ptrtoint (i32* @global_var_1000b3b0.174 to i32), i32 2, i32 2)
  store i32 29, i32* @r3, align 4
  %v0_10007c44 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c44, i32* @global_var_1001bb08.176, align 4
  store i32 7, i32* %r26.global-to-local, align 4
  %v0_10007c4c = load i32, i32* %r25.global-to-local, align 4
  %v1_10007c4c = trunc i32 %v0_10007c4c to i16
  store i16 %v1_10007c4c, i16* bitcast (i32* @global_var_1001bb0c.177 to i16*), align 4
  store i32 268467284, i32* @lr, align 4
  %v0_10007c50 = call i32 @function_100097d8()
  store i32 %v0_10007c50, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007c68.179 to i32), i32* @lr, align 4
  %v3_10007c64 = call i32 @function_10008148(i32 ptrtoint (i32* @global_var_1000b530.178 to i32), i32 29, i32 29)
  store i32 6, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001bb14.180 to i16*), align 4
  %v0_10007c74 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c74, i32* @global_var_1001bb10.181, align 4
  store i32 268467324, i32* @lr, align 4
  %v0_10007c78 = call i32 @function_100097d8()
  store i32 %v0_10007c78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c90.183 to i32), i32* @lr, align 4
  %v4_10007c8c = call i32 @function_10008148(i32 ptrtoint ([7 x i8]* @global_var_1000b3b4.182 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10007c94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c94, i32* @global_var_1001bb18.184, align 4
  store i32 16, i32* %r25.global-to-local, align 4
  %v0_10007c9c = load i32, i32* %r23.global-to-local, align 4
  %v1_10007c9c = trunc i32 %v0_10007c9c to i16
  store i16 %v1_10007c9c, i16* bitcast (i32* @global_var_1001bb1c.185 to i16*), align 4
  store i32 268467364, i32* @lr, align 4
  %v0_10007ca0 = call i32 @function_100097d8()
  store i32 %v0_10007ca0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007cb8.187 to i32), i32* @lr, align 4
  %v4_10007cb4 = call i32 @function_10008148(i32 ptrtoint ([8 x i8]* @global_var_1000b3bc.186 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10007cbc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007cbc, i32* @global_var_1001bb20.188, align 4
  store i32 8, i32* %r27.global-to-local, align 4
  %v0_10007cc4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007cc4 = trunc i32 %v0_10007cc4 to i16
  store i16 %v1_10007cc4, i16* bitcast (i32* @global_var_1001bb24.189 to i16*), align 4
  store i32 268467404, i32* @lr, align 4
  %v0_10007cc8 = call i32 @function_100097d8()
  store i32 %v0_10007cc8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ce0.191 to i32), i32* @lr, align 4
  %v4_10007cdc = call i32 @function_10008148(i32 ptrtoint ([8 x i8]* @global_var_1000b3c4.190 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_10007ce4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ce4, i32* @global_var_1001bb28.192, align 4
  %v0_10007ce8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007ce8 = trunc i32 %v0_10007ce8 to i16
  store i16 %v1_10007ce8, i16* bitcast (i32* @global_var_1001bb2c.193 to i16*), align 4
  store i32 268467440, i32* @lr, align 4
  %v0_10007cec = call i32 @function_100097d8()
  store i32 %v0_10007cec, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007d04.195 to i32), i32* @lr, align 4
  %v4_10007d00 = call i32 @function_10008148(i32 ptrtoint ([4 x i8]* @global_var_1000b3cc.194 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001bb34.196 to i16*), align 4
  %v0_10007d10 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d10, i32* @global_var_1001bb30.197, align 4
  store i32 268467480, i32* @lr, align 4
  %v0_10007d14 = call i32 @function_100097d8()
  store i32 %v0_10007d14, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007d2c.199 to i32), i32* @lr, align 4
  %v3_10007d28 = call i32 @function_10008148(i32 ptrtoint (i32* @global_var_1000b3d0.198 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_10007d30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d30, i32* @global_var_1001bb38.200, align 4
  %v0_10007d34 = load i32, i32* %r21.global-to-local, align 4
  %v1_10007d34 = trunc i32 %v0_10007d34 to i16
  store i16 %v1_10007d34, i16* bitcast (i32* @global_var_1001bb3c.201 to i16*), align 4
  store i32 268467516, i32* @lr, align 4
  %v0_10007d38 = call i32 @function_100097d8()
  store i32 %v0_10007d38, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007d50.203 to i32), i32* @lr, align 4
  %v3_10007d4c = call i32 @function_10008148(i32 ptrtoint (i32* @global_var_1000b3e4.202 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001bb44.204 to i16*), align 4
  %v0_10007d5c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d5c, i32* @global_var_1001bb40.205, align 4
  store i32 268467556, i32* @lr, align 4
  %v0_10007d60 = call i32 @function_100097d8()
  store i32 %v0_10007d60, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007d78.207 to i32), i32* @lr, align 4
  %v4_10007d74 = call i32 @function_10008148(i32 ptrtoint ([10 x i8]* @global_var_1000b400.206 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001bb4c.208 to i16*), align 4
  %v0_10007d84 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d84, i32* @global_var_1001bb48.209, align 4
  store i32 268467596, i32* @lr, align 4
  %v0_10007d88 = call i32 @function_100097d8()
  store i32 %v0_10007d88, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007da0.211 to i32), i32* @lr, align 4
  %v4_10007d9c = call i32 @function_10008148(i32 ptrtoint ([17 x i8]* @global_var_1000b40c.210 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10007da4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007da4, i32* @global_var_1001bb50.212, align 4
  %v0_10007da8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007da8 = trunc i32 %v0_10007da8 to i16
  store i16 %v1_10007da8, i16* bitcast (i32* @global_var_1001bb54.213 to i16*), align 4
  store i32 268467632, i32* @lr, align 4
  %v0_10007dac = call i32 @function_100097d8()
  store i32 %v0_10007dac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007dc4.215 to i32), i32* @lr, align 4
  %v4_10007dc0 = call i32 @function_10008148(i32 ptrtoint ([23 x i8]* @global_var_1000b420.214 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001bb5c.216 to i16*), align 4
  %v0_10007dd0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007dd0, i32* @global_var_1001bb58.217, align 4
  store i32 268467672, i32* @lr, align 4
  %v0_10007dd4 = call i32 @function_100097d8()
  store i32 %v0_10007dd4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007dec.219 to i32), i32* @lr, align 4
  %v4_10007de8 = call i32 @function_10008148(i32 ptrtoint ([8 x i8]* @global_var_1000b438.218 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10007df0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007df0, i32* @global_var_1001bb60.220, align 4
  %v0_10007df4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007df4 = trunc i32 %v0_10007df4 to i16
  store i16 %v1_10007df4, i16* bitcast (i32* @global_var_1001bb64.221 to i16*), align 4
  store i32 268467708, i32* @lr, align 4
  %v0_10007df8 = call i32 @function_100097d8()
  store i32 %v0_10007df8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007e10.223 to i32), i32* @lr, align 4
  %v4_10007e0c = call i32 @function_10008148(i32 ptrtoint ([6 x i8]* @global_var_1000b440.222 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_10007e14 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e14, i32* @global_var_1001bb68.224, align 4
  %v0_10007e18 = load i32, i32* %r22.global-to-local, align 4
  %v1_10007e18 = trunc i32 %v0_10007e18 to i16
  store i16 %v1_10007e18, i16* bitcast (i32* @global_var_1001bb6c.225 to i16*), align 4
  store i32 268467744, i32* @lr, align 4
  %v0_10007e1c = call i32 @function_100097d8()
  store i32 %v0_10007e1c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007e34.227 to i32), i32* @lr, align 4
  %v4_10007e30 = call i32 @function_10008148(i32 ptrtoint ([5 x i8]* @global_var_1000b448.226 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001bb74.228 to i16*), align 4
  %v0_10007e40 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e40, i32* @global_var_1001bb70.229, align 4
  store i32 268467784, i32* @lr, align 4
  %v0_10007e44 = call i32 @function_100097d8()
  store i32 %v0_10007e44, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007e5c.231 to i32), i32* @lr, align 4
  %v4_10007e58 = call i32 @function_10008148(i32 ptrtoint ([7 x i8]* @global_var_1000b450.230 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10007e60 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e60, i32* @global_var_1001bb78.232, align 4
  %v0_10007e64 = load i32, i32* %r23.global-to-local, align 4
  %v1_10007e64 = trunc i32 %v0_10007e64 to i16
  store i16 %v1_10007e64, i16* bitcast (i32* @global_var_1001bb7c.233 to i16*), align 4
  store i32 268467820, i32* @lr, align 4
  %v0_10007e68 = call i32 @function_100097d8()
  store i32 %v0_10007e68, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007e80.235 to i32), i32* @lr, align 4
  %v4_10007e7c = call i32 @function_10008148(i32 ptrtoint ([15 x i8]* @global_var_1000b458.234 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_10007e84 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e84, i32* @global_var_1001bb80.236, align 4
  %v0_10007e88 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007e88 = trunc i32 %v0_10007e88 to i16
  store i16 %v1_10007e88, i16* bitcast (i32* @global_var_1001bb84.237 to i16*), align 4
  store i32 268467856, i32* @lr, align 4
  %v0_10007e8c = call i32 @function_100097d8()
  store i32 %v0_10007e8c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ea4.239 to i32), i32* @lr, align 4
  %v4_10007ea0 = call i32 @function_10008148(i32 ptrtoint ([9 x i8]* @global_var_1000b468.238 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10007ea8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ea8, i32* @global_var_1001bbe8.240, align 4
  %v0_10007eac = load i32, i32* %r27.global-to-local, align 4
  %v1_10007eac = trunc i32 %v0_10007eac to i16
  store i16 %v1_10007eac, i16* bitcast (i32* @global_var_1001bbec.241 to i16*), align 4
  store i32 268467892, i32* @lr, align 4
  %v0_10007eb0 = call i32 @function_100097d8()
  store i32 %v0_10007eb0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ec8.243 to i32), i32* @lr, align 4
  %v4_10007ec4 = call i32 @function_10008148(i32 ptrtoint ([8 x i8]* @global_var_1000b474.242 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10007ecc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ecc, i32* @global_var_1001bbf0.244, align 4
  %v0_10007ed0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007ed0 = trunc i32 %v0_10007ed0 to i16
  store i16 %v1_10007ed0, i16* bitcast (i32* @global_var_1001bbf4.245 to i16*), align 4
  store i32 268467928, i32* @lr, align 4
  %v0_10007ed4 = call i32 @function_100097d8()
  store i32 %v0_10007ed4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007eec.247 to i32), i32* @lr, align 4
  %v4_10007ee8 = call i32 @function_10008148(i32 ptrtoint ([17 x i8]* @global_var_1000b47c.246 to i32), i32 16, i32 16)
  store i32 23, i32* @r3, align 4
  %v0_10007ef0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ef0, i32* @global_var_1001bb88.248, align 4
  store i32 23, i32* %r26.global-to-local, align 4
  %v0_10007ef8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007ef8 = trunc i32 %v0_10007ef8 to i16
  store i16 %v1_10007ef8, i16* bitcast (i32* @global_var_1001bb8c.249 to i16*), align 4
  store i32 268467968, i32* @lr, align 4
  %v0_10007efc = call i32 @function_100097d8()
  store i32 %v0_10007efc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007f14.251 to i32), i32* @lr, align 4
  %v4_10007f10 = call i32 @function_10008148(i32 ptrtoint ([24 x i8]* @global_var_1000b490.250 to i32), i32 23, i32 23)
  store i32 8, i32* @r3, align 4
  %v0_10007f18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007f18, i32* @global_var_1001bb90.252, align 4
  %v0_10007f1c = load i32, i32* %r26.global-to-local, align 4
  %v1_10007f1c = trunc i32 %v0_10007f1c to i16
  store i16 %v1_10007f1c, i16* bitcast (i32* @global_var_1001bb94.253 to i16*), align 4
  store i32 268468004, i32* @lr, align 4
  %v0_10007f20 = call i32 @function_100097d8()
  store i32 %v0_10007f20, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007f38.255 to i32), i32* @lr, align 4
  %v4_10007f34 = call i32 @function_10008148(i32 ptrtoint ([9 x i8]* @global_var_1000b4a8.254 to i32), i32 8, i32 8)
  store i32 21, i32* @r3, align 4
  %v0_10007f3c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007f3c, i32* @global_var_1001bb98.256, align 4
  %v0_10007f40 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007f40 = trunc i32 %v0_10007f40 to i16
  store i16 %v1_10007f40, i16* bitcast (i32* @global_var_1001bb9c.257 to i16*), align 4
  store i32 268468040, i32* @lr, align 4
  %v0_10007f44 = call i32 @function_100097d8()
  store i32 %v0_10007f44, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007f5c.259 to i32), i32* @lr, align 4
  %v3_10007f58 = call i32 @function_10008148(i32 ptrtoint (i32* @global_var_1000b550.258 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001bba4.260 to i16*), align 4
  %v0_10007f68 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007f68, i32* @global_var_1001bba0.261, align 4
  store i32 268468080, i32* @lr, align 4
  %v0_10007f6c = call i32 @function_100097d8()
  store i32 %v0_10007f6c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007f84.263 to i32), i32* @lr, align 4
  %v4_10007f80 = call i32 @function_10008148(i32 ptrtoint ([18 x i8]* @global_var_1000b4b4.262 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001bbac.264 to i16*), align 4
  %v0_10007f90 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007f90, i32* @global_var_1001bba8.265, align 4
  store i32 268468120, i32* @lr, align 4
  %v0_10007f94 = call i32 @function_100097d8()
  store i32 %v0_10007f94, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007fac.267 to i32), i32* @lr, align 4
  %v4_10007fa8 = call i32 @function_10008148(i32 ptrtoint ([13 x i8]* @global_var_1000b4c8.266 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001bbb4.268 to i16*), align 4
  %v0_10007fb8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007fb8, i32* @global_var_1001bbb0.269, align 4
  store i32 268468160, i32* @lr, align 4
  %v0_10007fbc = call i32 @function_100097d8()
  store i32 %v0_10007fbc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007fd4.271 to i32), i32* @lr, align 4
  %v4_10007fd0 = call i32 @function_10008148(i32 ptrtoint ([15 x i8]* @global_var_1000b4d8.270 to i32), i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10007fd8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007fd8, i32* @global_var_1001bbb8.272, align 4
  %v0_10007fdc = load i32, i32* %r24.global-to-local, align 4
  %v1_10007fdc = trunc i32 %v0_10007fdc to i16
  store i16 %v1_10007fdc, i16* bitcast (i32* @global_var_1001bbbc.273 to i16*), align 4
  store i32 268468196, i32* @lr, align 4
  %v0_10007fe0 = call i32 @function_100097d8()
  store i32 %v0_10007fe0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ff8.275 to i32), i32* @lr, align 4
  %v4_10007ff4 = call i32 @function_10008148(i32 ptrtoint ([20 x i8]* @global_var_1000b4e8.274 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10007ffc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ffc, i32* @global_var_1001bbc0.276, align 4
  %v0_10008000 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008000 = trunc i32 %v0_10008000 to i16
  store i16 %v1_10008000, i16* bitcast (i32* @global_var_1001bbc4.277 to i16*), align 4
  store i32 268468232, i32* @lr, align 4
  %v0_10008004 = call i32 @function_100097d8()
  store i32 %v0_10008004, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000801c.279 to i32), i32* @lr, align 4
  %v4_10008018 = call i32 @function_10008148(i32 ptrtoint ([9 x i8]* @global_var_1000b4fc.278 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_10008020 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008020, i32* @global_var_1001bbc8.280, align 4
  %v0_10008024 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008024 = trunc i32 %v0_10008024 to i16
  store i16 %v1_10008024, i16* bitcast (i32* @global_var_1001bbcc.281 to i16*), align 4
  store i32 268468268, i32* @lr, align 4
  %v0_10008028 = call i32 @function_100097d8()
  store i32 %v0_10008028, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008040.283 to i32), i32* @lr, align 4
  %v4_1000803c = call i32 @function_10008148(i32 ptrtoint ([6 x i8]* @global_var_1000b508.282 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10008044 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008044, i32* @global_var_1001bbd0.284, align 4
  %v0_10008048 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008048 = trunc i32 %v0_10008048 to i16
  store i16 %v1_10008048, i16* bitcast (i32* @global_var_1001bbd4.285 to i16*), align 4
  store i32 268468304, i32* @lr, align 4
  %v0_1000804c = call i32 @function_100097d8()
  store i32 %v0_1000804c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008064.287 to i32), i32* @lr, align 4
  %v4_10008060 = call i32 @function_10008148(i32 ptrtoint ([7 x i8]* @global_var_1000b510.286 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_10008068 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008068, i32* @global_var_1001bbd8.288, align 4
  %v0_1000806c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000806c = trunc i32 %v0_1000806c to i16
  store i16 %v1_1000806c, i16* bitcast (i32* @global_var_1001bbdc.289 to i16*), align 4
  store i32 268468340, i32* @lr, align 4
  %v0_10008070 = call i32 @function_100097d8()
  store i32 %v0_10008070, i32* %r28.global-to-local, align 4
  store i32 268468360, i32* @lr, align 4
  %v4_10008084 = call i32 @function_10008148(i32 ptrtoint ([24 x i8]* @global_var_1000b518.290 to i32), i32 23, i32 23)
  %v0_1000808c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000808c = trunc i32 %v0_1000808c to i16
  store i16 %v1_1000808c, i16* bitcast (i32* @global_var_1001bbe4.291 to i16*), align 4
  %v0_10008090 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008090, i32* @global_var_1001bbe0.292, align 4
  store i32 %v0_10007bac, i32* @r28, align 4
  ret i32 %v4_10008084

; uselistorder directives
  uselistorder i32 21, { 0, 1, 6, 7, 8, 2, 3, 4, 5, 9, 10, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @function_10008148, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 6, 5, 9, 8, 7, 4, 3, 2, 1, 0 }
}

define i32 @function_100080c4(i8* %arg1) local_unnamed_addr {
dec_label_pc_100080c4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100080c4 = load i8, i8* %arg1, align 1
  %v3_100080d0 = icmp eq i8 %v3_100080c4, 0
  %v0_100080d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100080d0, i32 %v0_100080d4)
  br label %dec_label_pc_100080d8

dec_label_pc_100080d8:                            ; preds = %dec_label_pc_100080d8, %dec_label_pc_100080c4
  %v0_100080d8 = phi i32 [ %v1_100080d8, %dec_label_pc_100080d8 ], [ 0, %dec_label_pc_100080c4 ]
  %v1_100080d8 = add i32 %v0_100080d8, 1
  %v2_100080dc = add i32 %v1_100080d8, %tmp
  %v3_100080dc = inttoptr i32 %v2_100080dc to i8*
  %v4_100080dc = load i8, i8* %v3_100080dc, align 1
  %v3_100080e0 = icmp eq i8 %v4_100080dc, 0
  br i1 %v3_100080e0, label %dec_label_pc_100080e8, label %dec_label_pc_100080d8

dec_label_pc_100080e8:                            ; preds = %dec_label_pc_100080d8
  ret i32 %v1_100080d8
}

define i32 @function_100080ec(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100080ec:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_100080ec = load i8, i8* %arg1, align 1
  %v3_100080f0 = icmp eq i8 %v2_100080ec, 0
  br i1 %v3_100080f0, label %dec_label_pc_1000813c, label %dec_label_pc_100080f8

dec_label_pc_100080f8:                            ; preds = %dec_label_pc_100080ec
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100080fc

dec_label_pc_100080fc:                            ; preds = %dec_label_pc_100080fc, %dec_label_pc_100080f8
  %v0_100080fc = phi i32 [ %v1_100080fc, %dec_label_pc_100080fc ], [ 0, %dec_label_pc_100080f8 ]
  %v1_100080fc = add i32 %v0_100080fc, 1
  store i32 %v1_100080fc, i32* %r9.global-to-local, align 4
  %v2_10008100 = add i32 %v1_100080fc, %tmp
  %v3_10008100 = inttoptr i32 %v2_10008100 to i8*
  %v4_10008100 = load i8, i8* %v3_10008100, align 1
  %v3_10008104 = icmp eq i8 %v4_10008100, 0
  br i1 %v3_10008104, label %dec_label_pc_1000810c, label %dec_label_pc_100080fc

dec_label_pc_1000810c:                            ; preds = %dec_label_pc_100080fc
  %v3_1000810c = icmp eq i32 %v1_100080fc, -1
  br i1 %v3_1000810c, label %dec_label_pc_10008134, label %dec_label_pc_10008114

dec_label_pc_10008114:                            ; preds = %dec_label_pc_1000810c
  %phitmp = add i32 %v0_100080fc, 2
  br label %dec_label_pc_10008118

dec_label_pc_10008118:                            ; preds = %dec_label_pc_1000813c, %dec_label_pc_10008114
  %v0_10008118 = phi i32 [ 1, %dec_label_pc_1000813c ], [ %phitmp, %dec_label_pc_10008114 ]
  store i32 %v0_10008118, i32* %ctr.global-to-local, align 4
  %v2_10008128.pre = load i32, i32* @r3, align 4
  %v2_100081208 = load i8, i8* %arg1, align 1
  %v1_1000812410 = add i32 %tmp, 1
  store i32 %v1_1000812410, i32* %r4.global-to-local, align 4
  %v3_1000812811 = inttoptr i32 %v2_10008128.pre to i8*
  store i8 %v2_100081208, i8* %v3_1000812811, align 1
  %v0_1000812c12 = load i32, i32* @r3, align 4
  %v1_1000812c13 = add i32 %v0_1000812c12, 1
  store i32 %v1_1000812c13, i32* %r3.global-to-local, align 4
  %v0_1000813014 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000813015 = add i32 %v0_1000813014, -1
  store i32 %v1_1000813015, i32* %ctr.global-to-local, align 4
  %v2_1000813016 = icmp eq i32 %v1_1000813015, 0
  br i1 %v2_1000813016, label %dec_label_pc_10008134.loopexit, label %dec_label_pc_10008120.dec_label_pc_10008120_crit_edge

dec_label_pc_10008120.dec_label_pc_10008120_crit_edge: ; preds = %dec_label_pc_10008118, %dec_label_pc_10008120.dec_label_pc_10008120_crit_edge
  %v1_1000812c17 = phi i32 [ %v1_1000812c, %dec_label_pc_10008120.dec_label_pc_10008120_crit_edge ], [ %v1_1000812c13, %dec_label_pc_10008118 ]
  %v0_10008120.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008120 = inttoptr i32 %v0_10008120.pre to i8*
  %v2_10008120 = load i8, i8* %v1_10008120, align 1
  %v1_10008124 = add i32 %v0_10008120.pre, 1
  store i32 %v1_10008124, i32* %r4.global-to-local, align 4
  %v3_10008128 = inttoptr i32 %v1_1000812c17 to i8*
  store i8 %v2_10008120, i8* %v3_10008128, align 1
  %v0_1000812c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000812c = add i32 %v0_1000812c, 1
  store i32 %v1_1000812c, i32* %r3.global-to-local, align 4
  %v0_10008130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008130 = add i32 %v0_10008130, -1
  store i32 %v1_10008130, i32* %ctr.global-to-local, align 4
  %v2_10008130 = icmp eq i32 %v1_10008130, 0
  br i1 %v2_10008130, label %dec_label_pc_10008134.loopexit, label %dec_label_pc_10008120.dec_label_pc_10008120_crit_edge

dec_label_pc_10008134.loopexit:                   ; preds = %dec_label_pc_10008120.dec_label_pc_10008120_crit_edge, %dec_label_pc_10008118
  %v0_10008134.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008134

dec_label_pc_10008134:                            ; preds = %dec_label_pc_10008134.loopexit, %dec_label_pc_1000810c
  %v0_10008134 = phi i32 [ %v0_10008134.pre, %dec_label_pc_10008134.loopexit ], [ -1, %dec_label_pc_1000810c ]
  store i32 %v0_10008134, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008134

dec_label_pc_1000813c:                            ; preds = %dec_label_pc_100080ec
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008118

; uselistorder directives
  uselistorder i32 %v0_10008134, { 1, 0 }
  uselistorder i32 %v1_10008130, { 1, 0 }
  uselistorder i32 %v1_1000812c, { 1, 0 }
  uselistorder i32 %v1_100080fc, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008120.dec_label_pc_10008120_crit_edge, { 1, 0 }
}

define i32 @function_10008148(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008148:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008148 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10008150 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008148, i32 %v0_10008150)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008158

dec_label_pc_10008158:                            ; preds = %dec_label_pc_10008158, %dec_label_pc_10008148
  %v0_10008158 = phi i32 [ %v1_10008160, %dec_label_pc_10008158 ], [ 0, %dec_label_pc_10008148 ]
  %v2_10008158 = add i32 %v0_10008158, %arg2
  %v3_10008158 = inttoptr i32 %v2_10008158 to i8*
  %v4_10008158 = load i8, i8* %v3_10008158, align 1
  %v4_1000815c = add i32 %v0_10008158, %arg1
  %v5_1000815c = inttoptr i32 %v4_1000815c to i8*
  store i8 %v4_10008158, i8* %v5_1000815c, align 1
  %v0_10008160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008160 = add i32 %v0_10008160, 1
  store i32 %v1_10008160, i32* %r9.global-to-local, align 4
  %v0_10008164 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008164 = add i32 %v0_10008164, -1
  store i32 %v1_10008164, i32* %ctr.global-to-local, align 4
  %v2_10008164 = icmp eq i32 %v1_10008164, 0
  br i1 %v2_10008164, label %dec_label_pc_10008168, label %dec_label_pc_10008158

dec_label_pc_10008168:                            ; preds = %dec_label_pc_10008158
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008164, { 1, 0 }
  uselistorder i32 %v1_10008160, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1000816c() local_unnamed_addr {
dec_label_pc_1000816c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000816c = load i32, i32* @r4, align 4
  store i32 %v0_1000816c, i32* %r0.global-to-local, align 4
  %v3_1000816c = icmp eq i32 %v0_1000816c, 0
  store i32 %v0_1000816c, i32* %ctr.global-to-local, align 4
  %v0_10008174 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000816c, i32 %v0_10008174)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100081803 = load i32, i32* @r3, align 4
  %v5_100081804 = inttoptr i32 %v2_100081803 to i8*
  store i8 0, i8* %v5_100081804, align 1
  %v0_100081845 = load i32, i32* %r9.global-to-local, align 4
  %v1_100081846 = add i32 %v0_100081845, 1
  store i32 %v1_100081846, i32* %r9.global-to-local, align 4
  %v0_100081887 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100081888 = add i32 %v0_100081887, -1
  store i32 %v1_100081888, i32* %ctr.global-to-local, align 4
  %v2_100081889 = icmp eq i32 %v1_100081888, 0
  br i1 %v2_100081889, label %dec_label_pc_1000818c, label %dec_label_pc_10008180.dec_label_pc_10008180_crit_edge

dec_label_pc_10008180.dec_label_pc_10008180_crit_edge: ; preds = %dec_label_pc_1000816c, %dec_label_pc_10008180.dec_label_pc_10008180_crit_edge
  %v1_1000818410 = phi i32 [ %v1_10008184, %dec_label_pc_10008180.dec_label_pc_10008180_crit_edge ], [ %v1_100081846, %dec_label_pc_1000816c ]
  %v0_10008180.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10008180.pre to i8
  %v2_10008180 = load i32, i32* @r3, align 4
  %v4_10008180 = add i32 %v2_10008180, %v1_1000818410
  %v5_10008180 = inttoptr i32 %v4_10008180 to i8*
  store i8 %extract.t, i8* %v5_10008180, align 1
  %v0_10008184 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008184 = add i32 %v0_10008184, 1
  store i32 %v1_10008184, i32* %r9.global-to-local, align 4
  %v0_10008188 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008188 = add i32 %v0_10008188, -1
  store i32 %v1_10008188, i32* %ctr.global-to-local, align 4
  %v2_10008188 = icmp eq i32 %v1_10008188, 0
  br i1 %v2_10008188, label %dec_label_pc_1000818c, label %dec_label_pc_10008180.dec_label_pc_10008180_crit_edge

dec_label_pc_1000818c:                            ; preds = %dec_label_pc_10008180.dec_label_pc_10008180_crit_edge, %dec_label_pc_1000816c
  %v0_1000818c = load i32, i32* @r3, align 4
  ret i32 %v0_1000818c

; uselistorder directives
  uselistorder i32 %v1_10008188, { 1, 0 }
  uselistorder i32 %v1_10008184, { 1, 0 }
  uselistorder i32 %v0_1000816c, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008180.dec_label_pc_10008180_crit_edge, { 1, 0 }
}

define i32 @function_10008190(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008190:
  %v3_10008190 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10008190, label %dec_label_pc_1000819c, label %dec_label_pc_100081a4

dec_label_pc_1000819c:                            ; preds = %dec_label_pc_100081c0, %dec_label_pc_10008190, %dec_label_pc_100081a4
  ret i32 -1

dec_label_pc_100081a4:                            ; preds = %dec_label_pc_10008190
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_1000819c, label %dec_label_pc_100081ac

dec_label_pc_100081ac:                            ; preds = %dec_label_pc_100081a4
  br label %dec_label_pc_100081c8

dec_label_pc_100081bc:                            ; preds = %dec_label_pc_100081c8
  br label %dec_label_pc_100081c0

dec_label_pc_100081c0:                            ; preds = %dec_label_pc_100081e0, %dec_label_pc_100081bc
  %v0_100081c81 = phi i32 [ %v1_100081cc, %dec_label_pc_100081e0 ], [ 0, %dec_label_pc_100081bc ]
  %v1_100081c0 = add i32 %v0_100081e4, 1
  %v1_100081c4 = add i32 %v0_100081c4, -1
  %v2_100081c4 = icmp eq i32 %v1_100081c4, 0
  br i1 %v2_100081c4, label %dec_label_pc_1000819c, label %dec_label_pc_100081c8

dec_label_pc_100081c8:                            ; preds = %dec_label_pc_100081c0, %dec_label_pc_100081ac
  %v0_100081c4 = phi i32 [ %v1_100081c4, %dec_label_pc_100081c0 ], [ %arg2, %dec_label_pc_100081ac ]
  %v0_100081e4 = phi i32 [ %v1_100081c0, %dec_label_pc_100081c0 ], [ 0, %dec_label_pc_100081ac ]
  %v0_100081c8 = phi i32 [ %v0_100081c81, %dec_label_pc_100081c0 ], [ 0, %dec_label_pc_100081ac ]
  %v2_100081c8 = add i32 %v0_100081c8, %arg3
  %v3_100081c8 = inttoptr i32 %v2_100081c8 to i8*
  %v4_100081c8 = load i8, i8* %v3_100081c8, align 1
  %v1_100081cc = add i32 %v0_100081c8, 1
  %v2_100081d0 = add i32 %v0_100081e4, %arg1
  %v3_100081d0 = inttoptr i32 %v2_100081d0 to i8*
  %v4_100081d0 = load i8, i8* %v3_100081d0, align 1
  %v4_100081d8 = icmp eq i8 %v4_100081d0, %v4_100081c8
  br i1 %v4_100081d8, label %dec_label_pc_100081e0, label %dec_label_pc_100081bc

dec_label_pc_100081e0:                            ; preds = %dec_label_pc_100081c8
  %v4_100081d4 = icmp eq i32 %v1_100081cc, %arg4
  br i1 %v4_100081d4, label %dec_label_pc_100081e4, label %dec_label_pc_100081c0

dec_label_pc_100081e4:                            ; preds = %dec_label_pc_100081e0
  %v1_100081e4 = add i32 %v0_100081e4, 1
  ret i32 %v1_100081e4

; uselistorder directives
  uselistorder i32 %v0_100081c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000819c, { 0, 2, 1 }
}

define i32 @function_100081ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_100081ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100081ec

dec_label_pc_100081ec:                            ; preds = %dec_label_pc_10008208, %dec_label_pc_100081ec, %bb
  %v0_100081ec = phi i32 [ %v0_100081ec.pre, %bb ], [ %v1_100081f0, %dec_label_pc_100081ec ], [ %v1_100081f0, %dec_label_pc_10008208 ]
  %v1_100081ec = inttoptr i32 %v0_100081ec to i8*
  %v2_100081ec = load i8, i8* %v1_100081ec, align 1
  %v1_100081f0 = add i32 %v0_100081ec, 1
  %v3_100081fc = icmp eq i8 %v2_100081ec, 32
  br i1 %v3_100081fc, label %dec_label_pc_100081ec, label %dec_label_pc_10008208

dec_label_pc_10008208:                            ; preds = %dec_label_pc_100081ec
  %v2_100081ec.off = add i8 %v2_100081ec, -9
  %tmp = icmp ult i8 %v2_100081ec.off, 2
  br i1 %tmp, label %dec_label_pc_100081ec, label %dec_label_pc_10008214

dec_label_pc_10008214:                            ; preds = %dec_label_pc_10008208
  %v3_10008214 = icmp eq i8 %v2_100081ec, 45
  br i1 %v3_10008214, label %dec_label_pc_100082c0, label %dec_label_pc_1000821c

dec_label_pc_1000821c:                            ; preds = %dec_label_pc_10008214
  %v3_1000821c = icmp eq i8 %v2_100081ec, 43
  br i1 %v3_1000821c, label %dec_label_pc_10008318, label %dec_label_pc_10008224

dec_label_pc_10008224:                            ; preds = %dec_label_pc_1000821c, %dec_label_pc_10008318
  %v0_100082b426 = phi i32 [ %v1_100081f0, %dec_label_pc_1000821c ], [ %v1_1000831c, %dec_label_pc_10008318 ]
  %v0_100082445.in = phi i8 [ %v2_100081ec, %dec_label_pc_1000821c ], [ %v2_10008318, %dec_label_pc_10008318 ]
  br label %dec_label_pc_10008230

dec_label_pc_10008230:                            ; preds = %dec_label_pc_100082c0, %dec_label_pc_10008224
  %v0_100082b425 = phi i32 [ %v1_100082c8, %dec_label_pc_100082c0 ], [ %v0_100082b426, %dec_label_pc_10008224 ]
  %v0_100082444.in = phi i8 [ %v2_100082c0, %dec_label_pc_100082c0 ], [ %v0_100082445.in, %dec_label_pc_10008224 ]
  %v0_10008308 = phi i32 [ 1, %dec_label_pc_100082c0 ], [ 0, %dec_label_pc_10008224 ]
  %v1_10008240 = phi i32 [ -2147483648, %dec_label_pc_100082c0 ], [ 2147483647, %dec_label_pc_10008224 ]
  %v2_10008230 = udiv i32 %v1_10008240, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_1000823c = mul i32 %v2_10008230, %arg1
  %v2_10008240 = sub i32 %v1_10008240, %v2_1000823c
  br label %dec_label_pc_10008244

dec_label_pc_10008244:                            ; preds = %dec_label_pc_100082b4, %dec_label_pc_10008230
  %v0_100082b4 = phi i32 [ %v1_100082b8, %dec_label_pc_100082b4 ], [ %v0_100082b425, %dec_label_pc_10008230 ]
  %v0_100082a8 = phi i32 [ %v0_100082a017, %dec_label_pc_100082b4 ], [ 0, %dec_label_pc_10008230 ]
  %v0_10008298 = phi i32 [ %v0_100082f811, %dec_label_pc_100082b4 ], [ 0, %dec_label_pc_10008230 ]
  %v0_10008290 = phi i32 [ %v0_100082ec9, %dec_label_pc_100082b4 ], [ 0, %dec_label_pc_10008230 ]
  %v1_10008284.in = phi i8 [ %v2_100082b4, %dec_label_pc_100082b4 ], [ %v0_100082444.in, %dec_label_pc_10008230 ]
  %v1_10008284 = zext i8 %v1_10008284.in to i32
  %v1_10008248 = add nsw i32 %v1_10008284, -48
  %fold = add nuw nsw i32 %v1_10008284, 208
  %v1_10008250 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10008250, 10
  br i1 %tmp27, label %dec_label_pc_10008288, label %dec_label_pc_1000825c

dec_label_pc_1000825c:                            ; preds = %dec_label_pc_10008244
  %v1_1000825c = add nuw nsw i32 %v1_10008284, 191
  %v1_10008260 = urem i32 %v1_1000825c, 256
  %tmp28 = icmp ult i32 %v1_10008260, 26
  br i1 %tmp28, label %dec_label_pc_10008284, label %dec_label_pc_10008270

dec_label_pc_10008270:                            ; preds = %dec_label_pc_1000825c
  %v1_10008270 = add nuw nsw i32 %v1_10008284, 159
  %v1_10008274 = urem i32 %v1_10008270, 256
  %v2_10008278 = icmp ugt i32 %v1_10008274, 25
  br i1 %v2_10008278, label %dec_label_pc_100082ec, label %dec_label_pc_10008280

dec_label_pc_10008280:                            ; preds = %dec_label_pc_10008270
  br label %dec_label_pc_10008284

dec_label_pc_10008284:                            ; preds = %dec_label_pc_1000825c, %dec_label_pc_10008280
  %v0_10008284 = phi i32 [ 55, %dec_label_pc_1000825c ], [ 87, %dec_label_pc_10008280 ]
  %v2_10008284 = sub nsw i32 %v1_10008284, %v0_10008284
  br label %dec_label_pc_10008288

dec_label_pc_10008288:                            ; preds = %dec_label_pc_10008244, %dec_label_pc_10008284
  %v1_100082b0 = phi i32 [ %v1_10008248, %dec_label_pc_10008244 ], [ %v2_10008284, %dec_label_pc_10008284 ]
  %v2_10008288 = icmp slt i32 %v1_100082b0, %arg1
  br i1 %v2_10008288, label %dec_label_pc_10008290, label %dec_label_pc_100082ec

dec_label_pc_10008290:                            ; preds = %dec_label_pc_10008288
  %v1_10008290 = icmp slt i32 %v0_10008290, 0
  br i1 %v1_10008290, label %dec_label_pc_100082d4, label %dec_label_pc_10008298

dec_label_pc_10008298:                            ; preds = %dec_label_pc_10008290
  %v3_10008298 = icmp ugt i32 %v0_10008298, %v2_10008230
  br i1 %v3_10008298, label %dec_label_pc_100082d4, label %dec_label_pc_100082a0

dec_label_pc_100082a0:                            ; preds = %dec_label_pc_10008298
  %v4_100082a0 = icmp eq i32 %v0_100082a8, %v2_10008230
  br i1 %v4_100082a0, label %dec_label_pc_100082dc, label %dec_label_pc_100082a8

dec_label_pc_100082a8:                            ; preds = %dec_label_pc_100082dc, %dec_label_pc_100082a0
  %v2_100082a8 = mul i32 %v0_100082a8, %arg1
  %v2_100082b0 = add i32 %v1_100082b0, %v2_100082a8
  store i32 %v2_100082b0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100082b4

dec_label_pc_100082b4:                            ; preds = %dec_label_pc_100082dc, %dec_label_pc_100082d4, %dec_label_pc_100082a8
  %v0_100082a017 = phi i32 [ %v2_10008230, %dec_label_pc_100082dc ], [ %v0_100082a8, %dec_label_pc_100082d4 ], [ %v2_100082b0, %dec_label_pc_100082a8 ]
  %v0_100082f811 = phi i32 [ %v2_10008230, %dec_label_pc_100082dc ], [ %v0_10008298, %dec_label_pc_100082d4 ], [ %v2_100082b0, %dec_label_pc_100082a8 ]
  %v0_100082ec9 = phi i32 [ -1, %dec_label_pc_100082dc ], [ -1, %dec_label_pc_100082d4 ], [ 1, %dec_label_pc_100082a8 ]
  %v1_100082b4 = inttoptr i32 %v0_100082b4 to i8*
  %v2_100082b4 = load i8, i8* %v1_100082b4, align 1
  %v1_100082b8 = add i32 %v0_100082b4, 1
  br label %dec_label_pc_10008244

dec_label_pc_100082c0:                            ; preds = %dec_label_pc_10008214
  %v1_100082c0 = inttoptr i32 %v1_100081f0 to i8*
  %v2_100082c0 = load i8, i8* %v1_100082c0, align 1
  %v1_100082c8 = add i32 %v0_100081ec, 2
  br label %dec_label_pc_10008230

dec_label_pc_100082d4:                            ; preds = %dec_label_pc_10008298, %dec_label_pc_10008290
  br label %dec_label_pc_100082b4

dec_label_pc_100082dc:                            ; preds = %dec_label_pc_100082a0
  %v3_100082dc = icmp sgt i32 %v1_100082b0, %v2_10008240
  br i1 %v3_100082dc, label %dec_label_pc_100082b4, label %dec_label_pc_100082a8

dec_label_pc_100082ec:                            ; preds = %dec_label_pc_10008288, %dec_label_pc_10008270
  %v1_100082ec = icmp slt i32 %v0_10008290, 0
  br i1 %v1_100082ec, label %dec_label_pc_10008308, label %dec_label_pc_100082f4

dec_label_pc_100082f4:                            ; preds = %dec_label_pc_100082ec
  %v3_100082f4 = icmp eq i32 %v0_10008308, 0
  %v0_100082fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100082f4, i32 %v0_100082fc)
  %v0_10008300 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008300 = sub i32 0, %v0_10008300
  ret i32 %v1_10008300

dec_label_pc_10008308:                            ; preds = %dec_label_pc_100082ec
  %v1_10008308 = xor i32 %v0_10008308, 1
  %v2_10008310 = sub nuw i32 -2147483648, %v1_10008308
  ret i32 %v2_10008310

dec_label_pc_10008318:                            ; preds = %dec_label_pc_1000821c
  %v1_10008318 = inttoptr i32 %v1_100081f0 to i8*
  %v2_10008318 = load i8, i8* %v1_10008318, align 1
  %v1_1000831c = add i32 %v0_100081ec, 2
  br label %dec_label_pc_10008224

; uselistorder directives
  uselistorder i32 %v2_100082b0, { 1, 0, 2 }
  uselistorder i32 %v1_100082b0, { 1, 0, 2 }
  uselistorder i32 %v1_10008284, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_100082a8, { 2, 0, 1 }
  uselistorder i32 %v0_100082b4, { 1, 0 }
  uselistorder i32 %v2_10008230, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100081f0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_100081ec, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 1, 8, 11, 12, 13, 14, 15, 16, 9 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10008288, { 1, 0 }
  uselistorder label %dec_label_pc_10008284, { 1, 0 }
  uselistorder label %dec_label_pc_10008224, { 1, 0 }
}

define i32 @function_10008324(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008324:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10008350 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10008358

dec_label_pc_10008358:                            ; preds = %dec_label_pc_10008384.dec_label_pc_10008358_crit_edge, %dec_label_pc_10008324
  %v0_1000835c = phi i32 [ %v0_1000835c.pre, %dec_label_pc_10008384.dec_label_pc_10008358_crit_edge ], [ %arg3, %dec_label_pc_10008324 ]
  %v0_10008358 = phi i32 [ %v1_10008370, %dec_label_pc_10008384.dec_label_pc_10008358_crit_edge ], [ %tmp, %dec_label_pc_10008324 ]
  store i32 1, i32* @r5, align 4
  store i32 268469096, i32* @lr, align 4
  %v4_10008364 = call i32 @function_10008abc(i32 %v0_1000835c, i32 %v0_10008358, i32 1)
  %v0_10008368 = load i32, i32* @r31, align 4
  %v3_1000836c = icmp eq i32 %v4_10008364, 1
  %v1_10008370 = add i32 %v0_10008368, 1
  store i32 %v1_10008370, i32* @r31, align 4
  %v0_10008378 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000836c, label %dec_label_pc_10008378, label %dec_label_pc_10008390

dec_label_pc_10008378:                            ; preds = %dec_label_pc_10008358
  %v1_10008378 = add i32 %v0_10008378, 1
  store i32 %v1_10008378, i32* %r30.global-to-local, align 4
  %v0_1000837c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000837c = icmp sgt i32 %v0_1000837c, %v1_10008378
  br i1 %v3_1000837c, label %dec_label_pc_10008384, label %dec_label_pc_10008390

dec_label_pc_10008384:                            ; preds = %dec_label_pc_10008378
  %v1_10008384 = inttoptr i32 %v0_10008368 to i8*
  %v2_10008384 = load i8, i8* %v1_10008384, align 1
  %v3_10008388 = icmp eq i8 %v2_10008384, 10
  br i1 %v3_10008388, label %dec_label_pc_10008390, label %dec_label_pc_10008384.dec_label_pc_10008358_crit_edge

dec_label_pc_10008384.dec_label_pc_10008358_crit_edge: ; preds = %dec_label_pc_10008384
  %v0_1000835c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008358

dec_label_pc_10008390:                            ; preds = %dec_label_pc_10008358, %dec_label_pc_10008384, %dec_label_pc_10008378
  %v1_10008398 = phi i32 [ %v1_10008378, %dec_label_pc_10008384 ], [ %v1_10008378, %dec_label_pc_10008378 ], [ %v0_10008378, %dec_label_pc_10008358 ]
  %tmp12 = icmp slt i32 %v1_10008398, 0
  %v1_10008390 = zext i1 %tmp12 to i32
  %v2_10008390 = ashr i32 %v1_10008398, 31
  %v3_10008390 = and i32 %v2_10008390, -2
  %v4_10008390 = or i32 %v3_10008390, %v1_10008390
  %v2_10008398 = xor i32 %v4_10008390, %v1_10008398
  %v2_100083a0 = sub i32 %v4_10008390, %v2_10008398
  %tmp13 = icmp slt i32 %v2_100083a0, 0
  %v1_100083a8 = zext i1 %tmp13 to i32
  %v2_100083a8 = ashr i32 %v2_100083a0, 31
  %v3_100083a8 = and i32 %v2_100083a8, -2
  %v4_100083a8 = or i32 %v3_100083a8, %v1_100083a8
  %v0_100083b0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100083b0 = and i32 %v4_100083a8, %v0_100083b0
  store i32 %v0_10008350, i32* @r31, align 4
  ret i32 %v2_100083b0

; uselistorder directives
  uselistorder i32 %v2_100083a0, { 1, 0 }
  uselistorder i32 %v4_10008390, { 1, 0 }
  uselistorder i32 %v1_10008398, { 1, 2, 0 }
  uselistorder i32 %v1_10008370, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008abc, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008390, { 1, 2, 0 }
}

define i32 @function_100083c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100083c8:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_100083e0 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_100083e8 = call i32 @function_10008fa0()
  %v2_100083f4 = inttoptr i32 %v0_100083e8 to i32*
  store i32 0, i32* %v2_100083f4, align 4
  store i32 268469252, i32* @lr, align 4
  %v3_10008400 = call i32 @function_100095d4(i32 2, i32 2, i32 0)
  store i32 %v3_10008400, i32* @r3, align 4
  %v3_10008408 = icmp eq i32 %v3_10008400, -1
  store i32 %v3_10008400, i32* @r31, align 4
  br i1 %v3_10008408, label %dec_label_pc_10008458, label %dec_label_pc_10008424

dec_label_pc_10008424:                            ; preds = %dec_label_pc_100083c8
  %v2_100083d4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268469308, i32* @lr, align 4
  %v0_10008438 = call i32 @function_100093d4()
  %v2_10008440 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008444 = load i32, i32* @r31, align 4
  store i32 268469324, i32* @lr, align 4
  %v3_10008448 = call i32 @function_10009408(i32 %v0_10008444, i32 %v2_100083d4, i32 %v2_10008440)
  store i32 268469332, i32* @lr, align 4
  %v0_10008450 = call i32 @function_10008884()
  br label %dec_label_pc_10008458

dec_label_pc_10008458:                            ; preds = %dec_label_pc_100083c8, %dec_label_pc_10008424
  %v0_10008458 = phi i32 [ 0, %dec_label_pc_100083c8 ], [ 134744072, %dec_label_pc_10008424 ]
  store i32 %v0_100083e0, i32* @r31, align 4
  ret i32 %v0_10008458

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_100093d4, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100095d4, { 25, 6, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 0, 9, 8, 1, 7, 3, 2, 5, 4 }
  uselistorder label %dec_label_pc_10008458, { 1, 0 }
}

define i32 @function_10008474(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008474:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008474 = load i8, i8* %tmp, align 1
  %v3_10008480 = icmp eq i8 %v3_10008474, 0
  br i1 %v3_10008480, label %dec_label_pc_10008498, label %dec_label_pc_10008488

dec_label_pc_10008488:                            ; preds = %dec_label_pc_10008474, %dec_label_pc_10008488
  %v0_10008488 = phi i32 [ %v1_10008488, %dec_label_pc_10008488 ], [ 0, %dec_label_pc_10008474 ]
  %v1_10008488 = add i32 %v0_10008488, 1
  %v3_1000848c = add i32 %v1_10008488, %arg3
  %v4_1000848c = inttoptr i32 %v3_1000848c to i8*
  %v5_1000848c = load i8, i8* %v4_1000848c, align 1
  %v3_10008490 = icmp eq i8 %v5_1000848c, 0
  br i1 %v3_10008490, label %dec_label_pc_10008498, label %dec_label_pc_10008488

dec_label_pc_10008498:                            ; preds = %dec_label_pc_10008488, %dec_label_pc_10008474
  %v0_100084c811 = phi i32 [ 0, %dec_label_pc_10008474 ], [ %v1_10008488, %dec_label_pc_10008488 ]
  %v1_10008498 = icmp slt i32 %arg2, 0
  %v1_1000849c = add i32 %arg2, 1
  br i1 %v1_10008498, label %dec_label_pc_10008514, label %dec_label_pc_100084b0

dec_label_pc_100084b0:                            ; preds = %dec_label_pc_10008498, %dec_label_pc_10008514, %dec_label_pc_10008508
  %v2_100084bc8 = phi i32 [ %v1_100084c0, %dec_label_pc_10008508 ], [ 0, %dec_label_pc_10008514 ], [ 0, %dec_label_pc_10008498 ]
  %v0_100084b46 = phi i32 [ %v1_100084b8, %dec_label_pc_10008508 ], [ %tmp16, %dec_label_pc_10008514 ], [ %tmp16, %dec_label_pc_10008498 ]
  %v0_100084b0 = phi i32 [ %v0_100084fc, %dec_label_pc_10008508 ], [ 1, %dec_label_pc_10008514 ], [ %v1_1000849c, %dec_label_pc_10008498 ]
  %v1_100084b0 = add i32 %v0_100084b0, -1
  %v2_100084b0 = icmp eq i32 %v1_100084b0, 0
  br i1 %v2_100084b0, label %dec_label_pc_10008500, label %dec_label_pc_100084b4

dec_label_pc_100084b4:                            ; preds = %dec_label_pc_100084b0, %dec_label_pc_100084f8
  %v2_100084bc = phi i32 [ 0, %dec_label_pc_100084f8 ], [ %v2_100084bc8, %dec_label_pc_100084b0 ]
  %v0_100084b4 = phi i32 [ %v1_100084b8, %dec_label_pc_100084f8 ], [ %v0_100084b46, %dec_label_pc_100084b0 ]
  %v0_100084fc = phi i32 [ %v1_100084fc, %dec_label_pc_100084f8 ], [ %v1_100084b0, %dec_label_pc_100084b0 ]
  %v1_100084b4 = inttoptr i32 %v0_100084b4 to i8*
  %v2_100084b4 = load i8, i8* %v1_100084b4, align 1
  %v3_100084b4 = zext i8 %v2_100084b4 to i32
  %v1_100084b8 = add i32 %v0_100084b4, 1
  %v3_100084bc = add i32 %v2_100084bc, %arg3
  %v4_100084bc = inttoptr i32 %v3_100084bc to i8*
  %v5_100084bc = load i8, i8* %v4_100084bc, align 1
  %v6_100084bc = zext i8 %v5_100084bc to i32
  %v1_100084c0 = add i32 %v2_100084bc, 1
  %v1_100084c4 = add nuw nsw i32 %v3_100084b4, 191
  %v1_100084cc = urem i32 %v1_100084c4, 256
  %v2_100084d0 = icmp ugt i32 %v1_100084cc, 25
  %v1_100084d4 = add nuw nsw i32 %v6_100084bc, 191
  %v1_100084d8 = urem i32 %v1_100084d4, 256
  %v2_100084dc = icmp ugt i32 %v1_100084d8, 25
  br i1 %v2_100084d0, label %dec_label_pc_100084e8, label %dec_label_pc_100084e4

dec_label_pc_100084e4:                            ; preds = %dec_label_pc_100084b4
  %v1_100084e4 = or i32 %v3_100084b4, 96
  br i1 %v2_100084dc, label %dec_label_pc_100084f0, label %dec_label_pc_100084ec

dec_label_pc_100084e8:                            ; preds = %dec_label_pc_100084b4
  br i1 %v2_100084dc, label %dec_label_pc_100084f0, label %dec_label_pc_100084ec

dec_label_pc_100084ec:                            ; preds = %dec_label_pc_100084e4, %dec_label_pc_100084e8
  %v1_100084f014 = phi i32 [ %v1_100084e4, %dec_label_pc_100084e4 ], [ %v3_100084b4, %dec_label_pc_100084e8 ]
  %v1_100084ec = or i32 %v6_100084bc, 96
  br label %dec_label_pc_100084f0

dec_label_pc_100084f0:                            ; preds = %dec_label_pc_100084e4, %dec_label_pc_100084e8, %dec_label_pc_100084ec
  %v1_100084f0 = phi i32 [ %v1_100084e4, %dec_label_pc_100084e4 ], [ %v3_100084b4, %dec_label_pc_100084e8 ], [ %v1_100084f014, %dec_label_pc_100084ec ]
  %v0_100084f0 = phi i32 [ %v6_100084bc, %dec_label_pc_100084e4 ], [ %v6_100084bc, %dec_label_pc_100084e8 ], [ %v1_100084ec, %dec_label_pc_100084ec ]
  %v4_100084f0 = icmp eq i32 %v0_100084f0, %v1_100084f0
  br i1 %v4_100084f0, label %dec_label_pc_10008508, label %dec_label_pc_100084f8

dec_label_pc_100084f8:                            ; preds = %dec_label_pc_100084f0
  %v1_100084fc = add i32 %v0_100084fc, -1
  %v2_100084fc = icmp eq i32 %v1_100084fc, 0
  br i1 %v2_100084fc, label %dec_label_pc_10008500, label %dec_label_pc_100084b4

dec_label_pc_10008500:                            ; preds = %dec_label_pc_100084b0, %dec_label_pc_100084f8
  ret i32 -1

dec_label_pc_10008508:                            ; preds = %dec_label_pc_100084f0
  %v4_100084c8.le = icmp eq i32 %v0_100084c811, %v1_100084c0
  br i1 %v4_100084c8.le, label %dec_label_pc_1000850c, label %dec_label_pc_100084b0

dec_label_pc_1000850c:                            ; preds = %dec_label_pc_10008508
  %v2_1000850c = sub i32 %v1_100084b8, %tmp16
  ret i32 %v2_1000850c

dec_label_pc_10008514:                            ; preds = %dec_label_pc_10008498
  br label %dec_label_pc_100084b0

; uselistorder directives
  uselistorder i32 %v1_100084fc, { 1, 0 }
  uselistorder i32 %v1_100084e4, { 1, 0 }
  uselistorder i1 %v2_100084dc, { 1, 0 }
  uselistorder i32 %v1_100084c0, { 1, 0 }
  uselistorder i32 %v3_100084b4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100084fc, { 1, 0 }
  uselistorder i32 %v0_100084b4, { 1, 0 }
  uselistorder i32 %v2_100084bc, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 8, 9, 13, 4, 10, 5, 11, 6, 12, 0, 1, 7, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10008500, { 1, 0 }
  uselistorder label %dec_label_pc_100084f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100084ec, { 1, 0 }
  uselistorder label %dec_label_pc_100084b4, { 1, 0 }
  uselistorder label %dec_label_pc_100084b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008488, { 1, 0 }
}

define i32 @function_10008520(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008520:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10008520 = load i8, i8* %arg1, align 1
  %v3_10008528 = icmp eq i8 %v2_10008520, 0
  br i1 %v3_10008528, label %dec_label_pc_10008540, label %dec_label_pc_10008530

dec_label_pc_10008530:                            ; preds = %dec_label_pc_10008520, %dec_label_pc_10008530
  %v0_10008530 = phi i32 [ %v1_10008530, %dec_label_pc_10008530 ], [ 0, %dec_label_pc_10008520 ]
  %v1_10008530 = add i32 %v0_10008530, 1
  %v2_10008534 = add i32 %v1_10008530, %tmp
  %v3_10008534 = inttoptr i32 %v2_10008534 to i8*
  %v4_10008534 = load i8, i8* %v3_10008534, align 1
  %v3_10008538 = icmp eq i8 %v4_10008534, 0
  br i1 %v3_10008538, label %dec_label_pc_10008540, label %dec_label_pc_10008530

dec_label_pc_10008540:                            ; preds = %dec_label_pc_10008530, %dec_label_pc_10008520
  %v0_10008560 = phi i32 [ 0, %dec_label_pc_10008520 ], [ %v1_10008530, %dec_label_pc_10008530 ]
  %v1_10008540 = inttoptr i32 %arg2 to i8*
  %v2_10008540 = load i8, i8* %v1_10008540, align 1
  %v3_10008548 = icmp eq i8 %v2_10008540, 0
  br i1 %v3_10008548, label %dec_label_pc_10008560, label %dec_label_pc_10008550

dec_label_pc_10008550:                            ; preds = %dec_label_pc_10008540, %dec_label_pc_10008550
  %v0_10008550 = phi i32 [ %v1_10008550, %dec_label_pc_10008550 ], [ 0, %dec_label_pc_10008540 ]
  %v1_10008550 = add i32 %v0_10008550, 1
  %v2_10008554 = add i32 %v1_10008550, %arg2
  %v3_10008554 = inttoptr i32 %v2_10008554 to i8*
  %v4_10008554 = load i8, i8* %v3_10008554, align 1
  %v3_10008558 = icmp eq i8 %v4_10008554, 0
  br i1 %v3_10008558, label %dec_label_pc_10008560, label %dec_label_pc_10008550

dec_label_pc_10008560:                            ; preds = %dec_label_pc_10008550, %dec_label_pc_10008540
  %v0_10008564 = phi i32 [ 0, %dec_label_pc_10008540 ], [ %v1_10008550, %dec_label_pc_10008550 ]
  %v4_10008560 = icmp eq i32 %v0_10008560, %v0_10008564
  br i1 %v4_10008560, label %dec_label_pc_10008578, label %dec_label_pc_10008570

dec_label_pc_10008570:                            ; preds = %dec_label_pc_1000857c, %dec_label_pc_10008560
  ret i32 0

dec_label_pc_10008578:                            ; preds = %dec_label_pc_10008560
  %v2_10008578 = icmp eq i32 %v0_10008560, 0
  br i1 %v2_10008578, label %dec_label_pc_10008598, label %dec_label_pc_1000857c

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_10008578, %dec_label_pc_10008594
  %v0_10008594 = phi i32 [ %v1_10008594, %dec_label_pc_10008594 ], [ %v0_10008560, %dec_label_pc_10008578 ]
  %v0_10008584 = phi i32 [ %v1_10008588, %dec_label_pc_10008594 ], [ %arg2, %dec_label_pc_10008578 ]
  %v0_1000857c = phi i32 [ %v1_10008580, %dec_label_pc_10008594 ], [ %tmp, %dec_label_pc_10008578 ]
  %v1_1000857c = inttoptr i32 %v0_1000857c to i8*
  %v2_1000857c = load i8, i8* %v1_1000857c, align 1
  %v1_10008584 = inttoptr i32 %v0_10008584 to i8*
  %v2_10008584 = load i8, i8* %v1_10008584, align 1
  %v4_1000858c = icmp eq i8 %v2_1000857c, %v2_10008584
  br i1 %v4_1000858c, label %dec_label_pc_10008594, label %dec_label_pc_10008570

dec_label_pc_10008594:                            ; preds = %dec_label_pc_1000857c
  %v1_10008588 = add i32 %v0_10008584, 1
  %v1_10008580 = add i32 %v0_1000857c, 1
  %v1_10008594 = add i32 %v0_10008594, -1
  %v2_10008594 = icmp eq i32 %v1_10008594, 0
  br i1 %v2_10008594, label %dec_label_pc_10008598, label %dec_label_pc_1000857c

dec_label_pc_10008598:                            ; preds = %dec_label_pc_10008594, %dec_label_pc_10008578
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10008594, { 1, 0 }
  uselistorder i32 %v0_1000857c, { 1, 0 }
  uselistorder i32 %v0_10008584, { 1, 0 }
  uselistorder label %dec_label_pc_1000857c, { 1, 0 }
  uselistorder label %dec_label_pc_10008550, { 1, 0 }
  uselistorder label %dec_label_pc_10008530, { 1, 0 }
}

define i32 @function_100085a0(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100085a0:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100085a0 = icmp eq i32 %arg3, 0
  %v4_100085a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100085a4, i32* %stack_var_-64, align 4
  %v5_100085a4 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_100085a0, label %dec_label_pc_100085c0, label %dec_label_pc_100085ac

dec_label_pc_100085ac:                            ; preds = %dec_label_pc_100085a0
  %v0_100085ac = load i32, i32* %r3.global-to-local, align 4
  %v3_100085ac = icmp eq i32 %v0_100085ac, 0
  store i1 %v3_100085ac, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_100085ac, label %dec_label_pc_100085b4, label %dec_label_pc_100085cc

dec_label_pc_100085b4:                            ; preds = %dec_label_pc_100085ac
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_100085b8 = add i32 %arg3, 1
  %v5_100085b8 = inttoptr i32 %v4_100085b8 to i8*
  store i8 0, i8* %v5_100085b8, align 1
  %v0_100085bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100085bc = trunc i32 %v0_100085bc to i8
  store i8 %v1_100085bc, i8* %tmp, align 1
  br label %dec_label_pc_100085c0

dec_label_pc_100085c0:                            ; preds = %dec_label_pc_1000864c, %dec_label_pc_100085a0, %dec_label_pc_100085b4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_100085cc:                            ; preds = %dec_label_pc_100085ac
  %v2_100085ac = icmp sgt i32 %v0_100085ac, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100085cc.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_100085ac, %v3_100085cc.not
  br i1 %brmerge, label %dec_label_pc_100085e0, label %dec_label_pc_10008694

dec_label_pc_100085e0:                            ; preds = %dec_label_pc_100085cc, %dec_label_pc_10008694
  %v0_100085e42 = phi i32 [ %v0_100085ac, %dec_label_pc_100085cc ], [ %v1_10008694, %dec_label_pc_10008694 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100085cc ], [ 1, %dec_label_pc_10008694 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100085e4

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_10008610.dec_label_pc_100085e4_crit_edge, %dec_label_pc_100085e0
  %v1_100085e8 = phi i32 [ %v1_100085e8.pre, %dec_label_pc_10008610.dec_label_pc_100085e4_crit_edge ], [ 32, %dec_label_pc_100085e0 ]
  %v0_100085e8 = phi i32 [ %v0_100085e8.pre, %dec_label_pc_10008610.dec_label_pc_100085e4_crit_edge ], [ %v5_100085a4, %dec_label_pc_100085e0 ]
  %v1_100085f8 = phi i32 [ %v0_100085e4.pre, %dec_label_pc_10008610.dec_label_pc_100085e4_crit_edge ], [ %v0_100085e42, %dec_label_pc_100085e0 ]
  %v2_100085e4 = udiv i32 %v1_100085f8, %arg2
  %v2_100085e8 = add i32 %v0_100085e8, %v1_100085e8
  store i32 %v2_100085e8, i32* %r11.global-to-local, align 4
  %v1_100085ec = add i32 %v1_100085e8, -1
  store i32 %v1_100085ec, i32* %r10.global-to-local, align 4
  %v2_100085f0 = mul i32 %v2_100085e4, %arg2
  %v3_100085f4 = icmp ult i32 %v1_100085f8, %arg2
  store i1 %v3_100085f4, i1* %cr6_eq.global-to-local, align 1
  %v2_100085f8 = sub i32 %v1_100085f8, %v2_100085f0
  store i32 %v2_100085f8, i32* %r9.global-to-local, align 4
  store i32 %v2_100085e4, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_100085f8, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_100085f8
  %v0_10008610.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10008610 = add i32 %v2_100085e8, 8
  %v4_10008610 = inttoptr i32 %v3_10008610 to i8*
  store i8 %v0_10008610.off0, i8* %v4_10008610, align 1
  %v0_10008614 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008614, label %dec_label_pc_10008618, label %dec_label_pc_10008610.dec_label_pc_100085e4_crit_edge

dec_label_pc_10008610.dec_label_pc_100085e4_crit_edge: ; preds = %dec_label_pc_100085e4
  %v0_100085e4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100085e8.pre = load i32, i32* @r1, align 4
  %v1_100085e8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100085e4

dec_label_pc_10008618:                            ; preds = %dec_label_pc_100085e4
  %v0_10008618 = load i32, i32* %r8.global-to-local, align 4
  %v3_10008618 = icmp eq i32 %v0_10008618, 0
  br i1 %v3_10008618, label %dec_label_pc_10008620, label %dec_label_pc_10008680

dec_label_pc_10008620:                            ; preds = %dec_label_pc_10008618
  %v0_10008620 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008620 = add i32 %v0_10008620, 1
  store i32 %v1_10008620, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008624

dec_label_pc_10008624:                            ; preds = %dec_label_pc_10008680, %dec_label_pc_10008620
  %v1_1000862c = phi i32 [ %v1_10008628.pre, %dec_label_pc_10008680 ], [ %v1_10008620, %dec_label_pc_10008620 ]
  %v2_10008624 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008624, i32* %r9.global-to-local, align 4
  %v2_10008628 = add i32 %v1_1000862c, %v2_10008624
  %v3_10008628 = inttoptr i32 %v2_10008628 to i8*
  %v4_10008628 = load i8, i8* %v3_10008628, align 1
  %v5_10008628 = zext i8 %v4_10008628 to i32
  store i32 %v5_10008628, i32* %r0.global-to-local, align 4
  store i32 %v2_10008628, i32* %r9.global-to-local, align 4
  %v3_10008630 = icmp eq i8 %v4_10008628, 0
  br i1 %v3_10008630, label %dec_label_pc_100086a8, label %dec_label_pc_10008638

dec_label_pc_10008638:                            ; preds = %dec_label_pc_10008624
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000863c

dec_label_pc_1000863c:                            ; preds = %dec_label_pc_1000863c, %dec_label_pc_10008638
  %v0_1000863c = phi i32 [ %v1_1000863c, %dec_label_pc_1000863c ], [ 0, %dec_label_pc_10008638 ]
  %v1_1000863c = add i32 %v0_1000863c, 1
  store i32 %v1_1000863c, i32* %r10.global-to-local, align 4
  %v2_10008640 = add i32 %v1_1000863c, %v2_10008628
  %v3_10008640 = inttoptr i32 %v2_10008640 to i8*
  %v4_10008640 = load i8, i8* %v3_10008640, align 1
  %v5_10008640 = zext i8 %v4_10008640 to i32
  store i32 %v5_10008640, i32* %r0.global-to-local, align 4
  %v3_10008644 = icmp eq i8 %v4_10008640, 0
  br i1 %v3_10008644, label %dec_label_pc_1000864c, label %dec_label_pc_1000863c

dec_label_pc_1000864c:                            ; preds = %dec_label_pc_1000863c
  %v3_1000864c = icmp eq i32 %v1_1000863c, -1
  br i1 %v3_1000864c, label %dec_label_pc_100085c0, label %dec_label_pc_10008654

dec_label_pc_10008654:                            ; preds = %dec_label_pc_1000864c
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_1000863c, 2
  br label %dec_label_pc_10008658

dec_label_pc_10008658:                            ; preds = %dec_label_pc_100086a8, %dec_label_pc_10008654
  %v0_10008658 = phi i32 [ 1, %dec_label_pc_100086a8 ], [ %phitmp, %dec_label_pc_10008654 ]
  store i32 %v0_10008658, i32* %r10.global-to-local, align 4
  store i32 %v0_10008658, i32* %ctr.global-to-local, align 4
  %v2_1000866024 = load i8, i8* %v3_10008628, align 1
  %v3_1000866025 = zext i8 %v2_1000866024 to i32
  store i32 %v3_1000866025, i32* %r0.global-to-local, align 4
  %v1_1000866426 = add i32 %v2_10008628, 1
  store i32 %v1_1000866426, i32* %r9.global-to-local, align 4
  store i8 %v2_1000866024, i8* %tmp, align 1
  %v0_1000866c28 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000866c29 = add i32 %v0_1000866c28, 1
  store i32 %v1_1000866c29, i32* %r11.global-to-local, align 4
  %v0_1000867030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000867031 = add i32 %v0_1000867030, -1
  store i32 %v1_1000867031, i32* %ctr.global-to-local, align 4
  %v2_1000867032 = icmp eq i32 %v1_1000867031, 0
  br i1 %v2_1000867032, label %dec_label_pc_10008674, label %dec_label_pc_10008660.dec_label_pc_10008660_crit_edge

dec_label_pc_10008660.dec_label_pc_10008660_crit_edge: ; preds = %dec_label_pc_10008658, %dec_label_pc_10008660.dec_label_pc_10008660_crit_edge
  %v1_1000866c33 = phi i32 [ %v1_1000866c, %dec_label_pc_10008660.dec_label_pc_10008660_crit_edge ], [ %v1_1000866c29, %dec_label_pc_10008658 ]
  %v0_10008660.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008660 = inttoptr i32 %v0_10008660.pre to i8*
  %v2_10008660 = load i8, i8* %v1_10008660, align 1
  %v3_10008660 = zext i8 %v2_10008660 to i32
  store i32 %v3_10008660, i32* %r0.global-to-local, align 4
  %v1_10008664 = add i32 %v0_10008660.pre, 1
  store i32 %v1_10008664, i32* %r9.global-to-local, align 4
  %v3_10008668 = inttoptr i32 %v1_1000866c33 to i8*
  store i8 %v2_10008660, i8* %v3_10008668, align 1
  %v0_1000866c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000866c = add i32 %v0_1000866c, 1
  store i32 %v1_1000866c, i32* %r11.global-to-local, align 4
  %v0_10008670 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008670 = add i32 %v0_10008670, -1
  store i32 %v1_10008670, i32* %ctr.global-to-local, align 4
  %v2_10008670 = icmp eq i32 %v1_10008670, 0
  br i1 %v2_10008670, label %dec_label_pc_10008674, label %dec_label_pc_10008660.dec_label_pc_10008660_crit_edge

dec_label_pc_10008674:                            ; preds = %dec_label_pc_10008660.dec_label_pc_10008660_crit_edge, %dec_label_pc_10008658
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008680:                            ; preds = %dec_label_pc_10008618
  %v0_10008680.pre = load i32, i32* @r1, align 4
  %v1_10008680.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008680 = add i32 %v1_10008680.pre, %v0_10008680.pre
  store i32 %v2_10008680, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10008688 = add i32 %v2_10008680, 8
  %v4_10008688 = inttoptr i32 %v3_10008688 to i8*
  store i8 45, i8* %v4_10008688, align 1
  %v1_10008628.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008624

dec_label_pc_10008694:                            ; preds = %dec_label_pc_100085cc
  %v1_10008694 = sub i32 0, %v0_100085ac
  store i32 %v1_10008694, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100085e0

dec_label_pc_100086a8:                            ; preds = %dec_label_pc_10008624
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008658

; uselistorder directives
  uselistorder i32 %v1_10008694, { 1, 0 }
  uselistorder i32 %v1_10008670, { 1, 0 }
  uselistorder i32 %v1_1000866c, { 1, 0 }
  uselistorder i32 %v0_10008658, { 1, 0 }
  uselistorder i32 %v1_1000863c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100085e4, { 1, 0 }
  uselistorder i32 %v1_100085f8, { 1, 0, 2 }
  uselistorder i32 %v1_100085e8, { 1, 0 }
  uselistorder i32 %v0_100085ac, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 6, 9, 2, 3, 5, 4, 8, 7, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10008660.dec_label_pc_10008660_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100085e0, { 1, 0 }
  uselistorder label %dec_label_pc_100085c0, { 0, 2, 1 }
}

define i32 @function_100086b4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100086b4:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_100086c4 = icmp eq i32 %arg2, -2143521772
  %v2_100086d8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100086d8, i32* %stack_var_-32, align 4
  br i1 %v4_100086c4, label %dec_label_pc_10008738, label %dec_label_pc_100086f8

dec_label_pc_100086f8:                            ; preds = %dec_label_pc_100086b4
  %v3_100086f8 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_100086f8, label %dec_label_pc_10008710, label %dec_label_pc_10008700

dec_label_pc_10008700:                            ; preds = %dec_label_pc_100086f8
  %v3_10008704 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10008704, label %dec_label_pc_1000872c, label %dec_label_pc_10008758

dec_label_pc_10008710:                            ; preds = %dec_label_pc_100086f8
  %v1_10008710 = xor i32 %arg2, -2143551488
  %v3_10008714 = icmp eq i32 %v1_10008710, 29717
  br i1 %v3_10008714, label %dec_label_pc_10008748, label %dec_label_pc_1000871c

dec_label_pc_1000871c:                            ; preds = %dec_label_pc_10008710
  %v3_10008720 = icmp eq i32 %v1_10008710, 29718
  br i1 %v3_10008720, label %dec_label_pc_10008750, label %dec_label_pc_10008758

dec_label_pc_1000872c:                            ; preds = %dec_label_pc_10008700
  store i32 ptrtoint (i32* @global_var_10008734.294 to i32), i32* @lr, align 4
  %v2_10008730 = inttoptr i32 %arg3 to i32*
  %v3_10008730 = call i32 @function_10009138(i32* %v2_10008730, i32 %arg1)
  br label %dec_label_pc_10008740

dec_label_pc_10008738:                            ; preds = %dec_label_pc_100086b4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000873c

dec_label_pc_1000873c:                            ; preds = %dec_label_pc_10008750, %dec_label_pc_10008748, %dec_label_pc_10008738
  store i32 268470080, i32* @lr, align 4
  %v0_1000873c = call i32 @function_100091d4()
  br label %dec_label_pc_10008740

dec_label_pc_10008740:                            ; preds = %dec_label_pc_1000872c, %dec_label_pc_1000873c
  %storemerge = phi i32 [ %v0_1000873c, %dec_label_pc_1000873c ], [ %v3_10008730, %dec_label_pc_1000872c ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008784

dec_label_pc_10008748:                            ; preds = %dec_label_pc_10008710
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000873c

dec_label_pc_10008750:                            ; preds = %dec_label_pc_1000871c
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000873c

dec_label_pc_10008758:                            ; preds = %dec_label_pc_1000871c, %dec_label_pc_10008700
  %v0_10008768 = call i32 @__asm_mfcr()
  %v1_1000876c = and i32 %v0_10008768, 268435456
  %v3_1000876c = icmp eq i32 %v1_1000876c, 0
  store i32 %v0_10008768, i32* %r31.global-to-local, align 4
  br i1 %v3_1000876c, label %dec_label_pc_10008784, label %dec_label_pc_10008778

dec_label_pc_10008778:                            ; preds = %dec_label_pc_10008758
  %v0_10008778 = call i32 @function_10008fa0()
  %v0_1000877c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000877c = inttoptr i32 %v0_10008778 to i32*
  store i32 %v0_1000877c, i32* %v2_1000877c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008784

dec_label_pc_10008784:                            ; preds = %dec_label_pc_10008758, %dec_label_pc_10008740, %dec_label_pc_10008778
  %v0_10008788 = phi i32 [ %v0_10008768, %dec_label_pc_10008758 ], [ %storemerge, %dec_label_pc_10008740 ], [ -1, %dec_label_pc_10008778 ]
  ret i32 %v0_10008788

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008784, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008740, { 1, 0 }
}

define i32 @function_1000879c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000879c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_100087b0 = load i32, i32* @r4, align 4
  %v1_100087b0 = add i32 %v0_100087b0, -12
  %v2_100087b4 = icmp ugt i32 %v1_100087b0, 2
  %v2_100087bc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100087bc, i32* %stack_var_-32, align 4
  br i1 %v2_100087b4, label %dec_label_pc_100087e8, label %dec_label_pc_100087d8

dec_label_pc_100087d8:                            ; preds = %dec_label_pc_1000879c
  store i32 268470240, i32* @lr, align 4
  %v2_100087dc = call i32 @function_10008820(i32 3)
  store i32 %v2_100087dc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008808

dec_label_pc_100087e8:                            ; preds = %dec_label_pc_1000879c
  %v0_100087ec = call i32 @__asm_mfcr()
  %v1_100087f0 = and i32 %v0_100087ec, 268435456
  %v3_100087f0 = icmp eq i32 %v1_100087f0, 0
  store i32 %v0_100087ec, i32* %r31.global-to-local, align 4
  br i1 %v3_100087f0, label %dec_label_pc_10008808, label %dec_label_pc_100087fc

dec_label_pc_100087fc:                            ; preds = %dec_label_pc_100087e8
  %v0_100087fc = call i32 @function_10008fa0()
  %v0_10008800 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008800 = inttoptr i32 %v0_100087fc to i32*
  store i32 %v0_10008800, i32* %v2_10008800, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008808

dec_label_pc_10008808:                            ; preds = %dec_label_pc_100087e8, %dec_label_pc_100087d8, %dec_label_pc_100087fc
  %v0_1000880c = phi i32 [ %v0_100087ec, %dec_label_pc_100087e8 ], [ %v2_100087dc, %dec_label_pc_100087d8 ], [ -1, %dec_label_pc_100087fc ]
  ret i32 %v0_1000880c

; uselistorder directives
  uselistorder label %dec_label_pc_10008808, { 2, 0, 1 }
}

define i32 @function_10008820(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008820:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10008838 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008838, i32* %stack_var_-32, align 4
  %v0_10008854 = call i32 @__asm_mfcr()
  %v1_10008858 = and i32 %v0_10008854, 268435456
  %v3_10008858 = icmp eq i32 %v1_10008858, 0
  store i32 %v0_10008854, i32* %r31.global-to-local, align 4
  br i1 %v3_10008858, label %dec_label_pc_10008870, label %dec_label_pc_10008864

dec_label_pc_10008864:                            ; preds = %dec_label_pc_10008820
  %v0_10008864 = call i32 @function_10008fa0()
  %v0_10008868 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008868 = inttoptr i32 %v0_10008864 to i32*
  store i32 %v0_10008868, i32* %v2_10008868, align 4
  br label %dec_label_pc_10008870

dec_label_pc_10008870:                            ; preds = %dec_label_pc_10008820, %dec_label_pc_10008864
  %v0_10008880 = phi i32 [ %v0_10008854, %dec_label_pc_10008820 ], [ -1, %dec_label_pc_10008864 ]
  ret i32 %v0_10008880

; uselistorder directives
  uselistorder label %dec_label_pc_10008870, { 1, 0 }
}

define i32 @function_10008884() local_unnamed_addr {
dec_label_pc_10008884:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000889c = call i32 @__asm_mfcr()
  %v1_100088a0 = and i32 %v0_1000889c, 268435456
  %v3_100088a0 = icmp eq i32 %v1_100088a0, 0
  store i32 %v0_1000889c, i32* %r31.global-to-local, align 4
  br i1 %v3_100088a0, label %dec_label_pc_100088b8, label %dec_label_pc_100088ac

dec_label_pc_100088ac:                            ; preds = %dec_label_pc_10008884
  %v0_100088ac = call i32 @function_10008fa0()
  %v0_100088b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100088b0 = inttoptr i32 %v0_100088ac to i32*
  store i32 %v0_100088b0, i32* %v2_100088b0, align 4
  br label %dec_label_pc_100088b8

dec_label_pc_100088b8:                            ; preds = %dec_label_pc_10008884, %dec_label_pc_100088ac
  %v0_100088c8 = phi i32 [ %v0_1000889c, %dec_label_pc_10008884 ], [ -1, %dec_label_pc_100088ac ]
  ret i32 %v0_100088c8

; uselistorder directives
  uselistorder label %dec_label_pc_100088b8, { 1, 0 }
}

define i32 @function_100088cc() local_unnamed_addr {
dec_label_pc_100088cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100088e4 = call i32 @__asm_mfcr()
  %v1_100088e8 = and i32 %v0_100088e4, 268435456
  %v3_100088e8 = icmp eq i32 %v1_100088e8, 0
  store i32 %v0_100088e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100088e8, label %dec_label_pc_10008900, label %dec_label_pc_100088f4

dec_label_pc_100088f4:                            ; preds = %dec_label_pc_100088cc
  %v0_100088f4 = call i32 @function_10008fa0()
  %v0_100088f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100088f8 = inttoptr i32 %v0_100088f4 to i32*
  store i32 %v0_100088f8, i32* %v2_100088f8, align 4
  br label %dec_label_pc_10008900

dec_label_pc_10008900:                            ; preds = %dec_label_pc_100088cc, %dec_label_pc_100088f4
  %v0_10008910 = phi i32 [ %v0_100088e4, %dec_label_pc_100088cc ], [ -1, %dec_label_pc_100088f4 ]
  ret i32 %v0_10008910

; uselistorder directives
  uselistorder label %dec_label_pc_10008900, { 1, 0 }
}

define i32 @function_10008914() local_unnamed_addr {
dec_label_pc_10008914:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000892c = call i32 @__asm_mfcr()
  %v1_10008930 = and i32 %v0_1000892c, 268435456
  %v3_10008930 = icmp eq i32 %v1_10008930, 0
  store i32 %v0_1000892c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008930, label %dec_label_pc_10008948, label %dec_label_pc_1000893c

dec_label_pc_1000893c:                            ; preds = %dec_label_pc_10008914
  %v0_1000893c = call i32 @function_10008fa0()
  %v0_10008940 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008940 = inttoptr i32 %v0_1000893c to i32*
  store i32 %v0_10008940, i32* %v2_10008940, align 4
  br label %dec_label_pc_10008948

dec_label_pc_10008948:                            ; preds = %dec_label_pc_10008914, %dec_label_pc_1000893c
  %v0_10008958 = phi i32 [ %v0_1000892c, %dec_label_pc_10008914 ], [ -1, %dec_label_pc_1000893c ]
  ret i32 %v0_10008958

; uselistorder directives
  uselistorder label %dec_label_pc_10008948, { 1, 0 }
}

define i32 @function_1000895c() local_unnamed_addr {
dec_label_pc_1000895c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008974 = call i32 @__asm_mfcr()
  %v1_10008978 = and i32 %v0_10008974, 268435456
  %v3_10008978 = icmp eq i32 %v1_10008978, 0
  store i32 %v0_10008974, i32* %r31.global-to-local, align 4
  br i1 %v3_10008978, label %dec_label_pc_10008990, label %dec_label_pc_10008984

dec_label_pc_10008984:                            ; preds = %dec_label_pc_1000895c
  %v0_10008984 = call i32 @function_10008fa0()
  %v0_10008988 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008988 = inttoptr i32 %v0_10008984 to i32*
  store i32 %v0_10008988, i32* %v2_10008988, align 4
  br label %dec_label_pc_10008990

dec_label_pc_10008990:                            ; preds = %dec_label_pc_1000895c, %dec_label_pc_10008984
  %v0_100089a0 = phi i32 [ %v0_10008974, %dec_label_pc_1000895c ], [ -1, %dec_label_pc_10008984 ]
  ret i32 %v0_100089a0

; uselistorder directives
  uselistorder label %dec_label_pc_10008990, { 1, 0 }
}

define i32 @function_100089a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100089a4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100089bc = call i32 @__asm_mfcr()
  %v1_100089c0 = and i32 %v0_100089bc, 268435456
  %v3_100089c0 = icmp eq i32 %v1_100089c0, 0
  store i32 %v0_100089bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100089c0, label %dec_label_pc_100089d8, label %dec_label_pc_100089cc

dec_label_pc_100089cc:                            ; preds = %dec_label_pc_100089a4
  %v0_100089cc = call i32 @function_10008fa0()
  %v0_100089d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100089d0 = inttoptr i32 %v0_100089cc to i32*
  store i32 %v0_100089d0, i32* %v2_100089d0, align 4
  br label %dec_label_pc_100089d8

dec_label_pc_100089d8:                            ; preds = %dec_label_pc_100089a4, %dec_label_pc_100089cc
  %v0_100089e8 = phi i32 [ %v0_100089bc, %dec_label_pc_100089a4 ], [ -1, %dec_label_pc_100089cc ]
  ret i32 %v0_100089e8

; uselistorder directives
  uselistorder label %dec_label_pc_100089d8, { 1, 0 }
}

define i32 @function_100089ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100089ec:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10008a00 = and i32 %arg2, 64
  %v3_10008a00 = icmp eq i32 %v1_10008a00, 0
  br i1 %v3_10008a00, label %dec_label_pc_10008a2c, label %dec_label_pc_10008a10

dec_label_pc_10008a10:                            ; preds = %dec_label_pc_100089ec
  %v2_10008a18 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008a18, i32* %stack_var_-32, align 4
  %v0_10008a28 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_100089ec, %dec_label_pc_10008a10
  %v0_10008a2c = phi i32 [ 0, %dec_label_pc_100089ec ], [ %v0_10008a28, %dec_label_pc_10008a10 ]
  store i32 %v0_10008a2c, i32* @r5, align 4
  %v0_10008a34 = call i32 @__asm_mfcr()
  %v1_10008a38 = and i32 %v0_10008a34, 268435456
  %v3_10008a38 = icmp eq i32 %v1_10008a38, 0
  store i32 %v0_10008a34, i32* %r31.global-to-local, align 4
  br i1 %v3_10008a38, label %dec_label_pc_10008a50, label %dec_label_pc_10008a44

dec_label_pc_10008a44:                            ; preds = %dec_label_pc_10008a2c
  %v0_10008a44 = call i32 @function_10008fa0()
  %v0_10008a48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008a48 = inttoptr i32 %v0_10008a44 to i32*
  store i32 %v0_10008a48, i32* %v2_10008a48, align 4
  br label %dec_label_pc_10008a50

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a2c, %dec_label_pc_10008a44
  %v0_10008a60 = phi i32 [ %v0_10008a34, %dec_label_pc_10008a2c ], [ -1, %dec_label_pc_10008a44 ]
  ret i32 %v0_10008a60

; uselistorder directives
  uselistorder label %dec_label_pc_10008a50, { 1, 0 }
  uselistorder label %dec_label_pc_10008a2c, { 1, 0 }
}

define i32 @function_10008a64(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008a64:
  store i32 %arg1, i32* @r5, align 4
  %v2_10008a70 = call i32 @function_100089ec(i32 577, i32 577)
  ret i32 %v2_10008a70
}

define i32 @function_10008a74(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008a74:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008a8c = call i32 @__asm_mfcr()
  %v1_10008a90 = and i32 %v0_10008a8c, 268435456
  %v3_10008a90 = icmp eq i32 %v1_10008a90, 0
  store i32 %v0_10008a8c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008a90, label %dec_label_pc_10008aa8, label %dec_label_pc_10008a9c

dec_label_pc_10008a9c:                            ; preds = %dec_label_pc_10008a74
  %v0_10008a9c = call i32 @function_10008fa0()
  %v0_10008aa0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008aa0 = inttoptr i32 %v0_10008a9c to i32*
  store i32 %v0_10008aa0, i32* %v2_10008aa0, align 4
  br label %dec_label_pc_10008aa8

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_10008a74, %dec_label_pc_10008a9c
  %v0_10008ab8 = phi i32 [ %v0_10008a8c, %dec_label_pc_10008a74 ], [ -1, %dec_label_pc_10008a9c ]
  ret i32 %v0_10008ab8

; uselistorder directives
  uselistorder label %dec_label_pc_10008aa8, { 1, 0 }
}

define i32 @function_10008abc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008abc:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008ad4 = call i32 @__asm_mfcr()
  %v1_10008ad8 = and i32 %v0_10008ad4, 268435456
  %v3_10008ad8 = icmp eq i32 %v1_10008ad8, 0
  store i32 %v0_10008ad4, i32* %r31.global-to-local, align 4
  br i1 %v3_10008ad8, label %dec_label_pc_10008af0, label %dec_label_pc_10008ae4

dec_label_pc_10008ae4:                            ; preds = %dec_label_pc_10008abc
  %v0_10008ae4 = call i32 @function_10008fa0()
  %v0_10008ae8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008ae8 = inttoptr i32 %v0_10008ae4 to i32*
  store i32 %v0_10008ae8, i32* %v2_10008ae8, align 4
  br label %dec_label_pc_10008af0

dec_label_pc_10008af0:                            ; preds = %dec_label_pc_10008abc, %dec_label_pc_10008ae4
  %v0_10008b00 = phi i32 [ %v0_10008ad4, %dec_label_pc_10008abc ], [ -1, %dec_label_pc_10008ae4 ]
  ret i32 %v0_10008b00

; uselistorder directives
  uselistorder label %dec_label_pc_10008af0, { 1, 0 }
}

define i32 @function_10008b04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008b04:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008b1c = call i32 @__asm_mfcr()
  %v1_10008b20 = and i32 %v0_10008b1c, 268435456
  %v3_10008b20 = icmp eq i32 %v1_10008b20, 0
  store i32 %v0_10008b1c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008b20, label %dec_label_pc_10008b38, label %dec_label_pc_10008b2c

dec_label_pc_10008b2c:                            ; preds = %dec_label_pc_10008b04
  %v0_10008b2c = call i32 @function_10008fa0()
  %v0_10008b30 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008b30 = inttoptr i32 %v0_10008b2c to i32*
  store i32 %v0_10008b30, i32* %v2_10008b30, align 4
  br label %dec_label_pc_10008b38

dec_label_pc_10008b38:                            ; preds = %dec_label_pc_10008b04, %dec_label_pc_10008b2c
  %v0_10008b48 = phi i32 [ %v0_10008b1c, %dec_label_pc_10008b04 ], [ -1, %dec_label_pc_10008b2c ]
  ret i32 %v0_10008b48

; uselistorder directives
  uselistorder label %dec_label_pc_10008b38, { 1, 0 }
}

define i32 @function_10008b4c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10008b4c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008b64 = call i32 @__asm_mfcr()
  %v1_10008b68 = and i32 %v0_10008b64, 268435456
  %v3_10008b68 = icmp eq i32 %v1_10008b68, 0
  store i32 %v0_10008b64, i32* %r31.global-to-local, align 4
  br i1 %v3_10008b68, label %dec_label_pc_10008b80, label %dec_label_pc_10008b74

dec_label_pc_10008b74:                            ; preds = %dec_label_pc_10008b4c
  %v0_10008b74 = call i32 @function_10008fa0()
  %v0_10008b78 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008b78 = inttoptr i32 %v0_10008b74 to i32*
  store i32 %v0_10008b78, i32* %v2_10008b78, align 4
  br label %dec_label_pc_10008b80

dec_label_pc_10008b80:                            ; preds = %dec_label_pc_10008b4c, %dec_label_pc_10008b74
  %v0_10008b90 = phi i32 [ %v0_10008b64, %dec_label_pc_10008b4c ], [ -1, %dec_label_pc_10008b74 ]
  ret i32 %v0_10008b90

; uselistorder directives
  uselistorder label %dec_label_pc_10008b80, { 1, 0 }
}

define i32 @function_10008b94(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008b94:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008bac = call i32 @__asm_mfcr()
  %v1_10008bb0 = and i32 %v0_10008bac, 268435456
  %v3_10008bb0 = icmp eq i32 %v1_10008bb0, 0
  store i32 %v0_10008bac, i32* %r31.global-to-local, align 4
  br i1 %v3_10008bb0, label %dec_label_pc_10008bc8, label %dec_label_pc_10008bbc

dec_label_pc_10008bbc:                            ; preds = %dec_label_pc_10008b94
  %v0_10008bbc = call i32 @function_10008fa0()
  %v0_10008bc0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008bc0 = inttoptr i32 %v0_10008bbc to i32*
  store i32 %v0_10008bc0, i32* %v2_10008bc0, align 4
  br label %dec_label_pc_10008bc8

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_10008b94, %dec_label_pc_10008bbc
  %v0_10008bd8 = phi i32 [ %v0_10008bac, %dec_label_pc_10008b94 ], [ -1, %dec_label_pc_10008bbc ]
  ret i32 %v0_10008bd8

; uselistorder directives
  uselistorder label %dec_label_pc_10008bc8, { 1, 0 }
}

define i32 @function_10008bdc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008bdc:
  %r31.global-to-local = alloca i32, align 4
  %v3_10008bdc = icmp eq i32 %arg2, 0
  br i1 %v3_10008bdc, label %dec_label_pc_10008c1c, label %dec_label_pc_10008c04

dec_label_pc_10008c04:                            ; preds = %dec_label_pc_10008bdc
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10008c1c, label %dec_label_pc_10008c0c

dec_label_pc_10008c0c:                            ; preds = %dec_label_pc_10008c04
  %v0_10008c0c = call i32 @function_10008fa0()
  %v2_10008c14 = inttoptr i32 %v0_10008c0c to i32*
  store i32 22, i32* %v2_10008c14, align 4
  %v0_10008c40.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c3c

dec_label_pc_10008c1c:                            ; preds = %dec_label_pc_10008c04, %dec_label_pc_10008bdc
  %v0_10008c20 = call i32 @__asm_mfcr()
  %v1_10008c24 = and i32 %v0_10008c20, 268435456
  %v3_10008c24 = icmp eq i32 %v1_10008c24, 0
  store i32 %v0_10008c20, i32* %r31.global-to-local, align 4
  br i1 %v3_10008c24, label %dec_label_pc_10008c3c, label %dec_label_pc_10008c30

dec_label_pc_10008c30:                            ; preds = %dec_label_pc_10008c1c
  %v0_10008c30 = call i32 @function_10008fa0()
  %v0_10008c34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c34 = inttoptr i32 %v0_10008c30 to i32*
  store i32 %v0_10008c34, i32* %v2_10008c34, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c3c

dec_label_pc_10008c3c:                            ; preds = %dec_label_pc_10008c1c, %dec_label_pc_10008c0c, %dec_label_pc_10008c30
  %v0_10008c40 = phi i32 [ %v0_10008c20, %dec_label_pc_10008c1c ], [ %v0_10008c40.pre, %dec_label_pc_10008c0c ], [ -1, %dec_label_pc_10008c30 ]
  ret i32 %v0_10008c40

; uselistorder directives
  uselistorder label %dec_label_pc_10008c3c, { 2, 0, 1 }
}

define i32 @function_10008c54() local_unnamed_addr {
dec_label_pc_10008c54:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008c6c = call i32 @__asm_mfcr()
  %v1_10008c70 = and i32 %v0_10008c6c, 268435456
  %v3_10008c70 = icmp eq i32 %v1_10008c70, 0
  store i32 %v0_10008c6c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008c70, label %dec_label_pc_10008c88, label %dec_label_pc_10008c7c

dec_label_pc_10008c7c:                            ; preds = %dec_label_pc_10008c54
  %v0_10008c7c = call i32 @function_10008fa0()
  %v0_10008c80 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c80 = inttoptr i32 %v0_10008c7c to i32*
  store i32 %v0_10008c80, i32* %v2_10008c80, align 4
  br label %dec_label_pc_10008c88

dec_label_pc_10008c88:                            ; preds = %dec_label_pc_10008c54, %dec_label_pc_10008c7c
  %v0_10008c98 = phi i32 [ %v0_10008c6c, %dec_label_pc_10008c54 ], [ -1, %dec_label_pc_10008c7c ]
  ret i32 %v0_10008c98

; uselistorder directives
  uselistorder label %dec_label_pc_10008c88, { 1, 0 }
}

define i32 @function_10008c9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008c9c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008cb4 = call i32 @__asm_mfcr()
  %v1_10008cb8 = and i32 %v0_10008cb4, 268435456
  %v3_10008cb8 = icmp eq i32 %v1_10008cb8, 0
  store i32 %v0_10008cb4, i32* %r31.global-to-local, align 4
  br i1 %v3_10008cb8, label %dec_label_pc_10008cd0, label %dec_label_pc_10008cc4

dec_label_pc_10008cc4:                            ; preds = %dec_label_pc_10008c9c
  %v0_10008cc4 = call i32 @function_10008fa0()
  %v0_10008cc8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008cc8 = inttoptr i32 %v0_10008cc4 to i32*
  store i32 %v0_10008cc8, i32* %v2_10008cc8, align 4
  br label %dec_label_pc_10008cd0

dec_label_pc_10008cd0:                            ; preds = %dec_label_pc_10008c9c, %dec_label_pc_10008cc4
  %v0_10008ce0 = phi i32 [ %v0_10008cb4, %dec_label_pc_10008c9c ], [ -1, %dec_label_pc_10008cc4 ]
  ret i32 %v0_10008ce0

; uselistorder directives
  uselistorder label %dec_label_pc_10008cd0, { 1, 0 }
}

define i32 @function_10008ce4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ce4:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008cfc = call i32 @__asm_mfcr()
  %v1_10008d00 = and i32 %v0_10008cfc, 268435456
  %v3_10008d00 = icmp eq i32 %v1_10008d00, 0
  store i32 %v0_10008cfc, i32* %r31.global-to-local, align 4
  br i1 %v3_10008d00, label %dec_label_pc_10008d18, label %dec_label_pc_10008d0c

dec_label_pc_10008d0c:                            ; preds = %dec_label_pc_10008ce4
  %v0_10008d0c = call i32 @function_10008fa0()
  %v0_10008d10 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008d10 = inttoptr i32 %v0_10008d0c to i32*
  store i32 %v0_10008d10, i32* %v2_10008d10, align 4
  br label %dec_label_pc_10008d18

dec_label_pc_10008d18:                            ; preds = %dec_label_pc_10008ce4, %dec_label_pc_10008d0c
  %v0_10008d28 = phi i32 [ %v0_10008cfc, %dec_label_pc_10008ce4 ], [ -1, %dec_label_pc_10008d0c ]
  ret i32 %v0_10008d28

; uselistorder directives
  uselistorder label %dec_label_pc_10008d18, { 1, 0 }
}

define i32 @function_10008d2c(i32* %arg1) local_unnamed_addr {
dec_label_pc_10008d2c:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008d48 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10008d50 = load i32, i32* %arg1, align 4
  store i32 %v2_10008d48, i32* @r3, align 4
  %v3_10008d5c = icmp eq i32 %v2_10008d50, -1
  br i1 %v3_10008d5c, label %dec_label_pc_10008d64, label %dec_label_pc_10008d78

dec_label_pc_10008d64:                            ; preds = %dec_label_pc_10008d2c
  %v0_10008d64 = call i32 @function_10008fa0()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008d70 = inttoptr i32 %v0_10008d64 to i32*
  store i32 9, i32* %v2_10008d70, align 4
  %v0_10008dbc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008db8

dec_label_pc_10008d78:                            ; preds = %dec_label_pc_10008d2c
  %v3_10008d78 = call i32 @function_1000a33c(i32 %v2_10008d48, i32 ptrtoint ([3 x i8]* @global_var_1000a334.296 to i32))
  %v0_10008d80 = call i32 @function_1000a334()
  %v0_10008d88 = load i32, i32* @r31, align 4
  %v1_10008d88 = inttoptr i32 %v0_10008d88 to i32*
  %v2_10008d88 = load i32, i32* %v1_10008d88, align 4
  store i32 %v2_10008d88, i32* @r29, align 4
  store i32 -1, i32* %v1_10008d88, align 4
  store i32 %v2_10008d48, i32* @r3, align 4
  %v2_10008d98 = call i32 @function_1000a33c(i32 %v2_10008d48, i32 1)
  %v0_10008d9c = load i32, i32* @r31, align 4
  %v1_10008d9c = add i32 %v0_10008d9c, 12
  %v2_10008d9c = inttoptr i32 %v1_10008d9c to i32*
  %v3_10008d9c = load i32, i32* %v2_10008d9c, align 4
  store i32 %v3_10008d9c, i32* @r3, align 4
  store i32 268471716, i32* @lr, align 4
  %v0_10008da0 = call i32 @function_100099a0()
  %v0_10008da4 = load i32, i32* @r31, align 4
  store i32 %v0_10008da4, i32* @r3, align 4
  store i32 268471724, i32* @lr, align 4
  %v0_10008da8 = call i32 @function_100099a0()
  store i32 268471732, i32* @lr, align 4
  %v0_10008db0 = call i32 @function_10008884()
  store i32 %v0_10008db0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008db8

dec_label_pc_10008db8:                            ; preds = %dec_label_pc_10008d64, %dec_label_pc_10008d78
  %v0_10008dbc = phi i32 [ %v0_10008dbc.pre, %dec_label_pc_10008d64 ], [ %v0_10008db0, %dec_label_pc_10008d78 ]
  ret i32 %v0_10008dbc

; uselistorder directives
  uselistorder i32 %v2_10008d48, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008db8, { 1, 0 }
}

define i32 @function_10008dd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008dd0:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_10008dd0 = load i32, i32* @lr, align 4
  store i32 %v0_10008dd0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268471792, i32* @lr, align 4
  %v2_10008dec = call i32 @function_100089ec(i32 18432, i32 18432)
  %v1_10008df0 = icmp slt i32 %v2_10008dec, 0
  br i1 %v1_10008df0, label %dec_label_pc_10008ec8, label %dec_label_pc_10008df8

dec_label_pc_10008df8:                            ; preds = %dec_label_pc_10008dd0
  %v2_10008df8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10008df8, i32* @r4, align 4
  store i32 268471808, i32* @lr, align 4
  %v1_10008dfc = call i32 @function_1000a710(i32 %v2_10008df8)
  %v1_10008e00 = icmp slt i32 %v1_10008dfc, 0
  br i1 %v1_10008e00, label %dec_label_pc_10008e24, label %dec_label_pc_10008e08

dec_label_pc_10008e08:                            ; preds = %dec_label_pc_10008df8
  %v0_10008e08 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268471836, i32* @lr, align 4
  %v2_10008e18 = call i32 @function_1000879c(i32 %v0_10008e08)
  %tmp5 = icmp sgt i32 %v2_10008e18, -1
  br i1 %tmp5, label %dec_label_pc_10008e44, label %dec_label_pc_10008e24

dec_label_pc_10008e24:                            ; preds = %dec_label_pc_10008e08, %dec_label_pc_10008df8
  %v0_10008e24 = call i32 @function_10008fa0()
  store i32 0, i32* @r31, align 4
  store i32 %v0_10008e24, i32* @r28, align 4
  %v1_10008e34 = inttoptr i32 %v0_10008e24 to i32*
  %v2_10008e34 = load i32, i32* %v1_10008e34, align 4
  store i32 268471868, i32* @lr, align 4
  %v0_10008e38 = call i32 @function_10008884()
  %v1_10008e3c = load i32, i32* @r28, align 4
  %v2_10008e3c = inttoptr i32 %v1_10008e3c to i32*
  store i32 %v2_10008e34, i32* %v2_10008e3c, align 4
  br label %dec_label_pc_10008ec8

dec_label_pc_10008e44:                            ; preds = %dec_label_pc_10008e08
  store i32 48, i32* @r3, align 4
  store i32 268471884, i32* @lr, align 4
  %v0_10008e48 = call i32 @function_100097d8()
  store i32 %v0_10008e48, i32* %r31.global-to-local, align 4
  %v3_10008e4c = icmp eq i32 %v0_10008e48, 0
  br i1 %v3_10008e4c, label %dec_label_pc_10008ea0, label %dec_label_pc_10008e54

dec_label_pc_10008e54:                            ; preds = %dec_label_pc_10008e44
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10008e58 = load i32, i32* @r29, align 4
  %v2_10008e58 = inttoptr i32 %v0_10008e48 to i32*
  store i32 %v0_10008e58, i32* %v2_10008e58, align 4
  %v0_10008e5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10008e5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e5c = add i32 %v1_10008e5c, 4
  %v3_10008e5c = inttoptr i32 %v2_10008e5c to i32*
  store i32 %v0_10008e5c, i32* %v3_10008e5c, align 4
  %v0_10008e60 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008e60 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e60 = add i32 %v1_10008e60, 16
  %v3_10008e60 = inttoptr i32 %v2_10008e60 to i32*
  store i32 %v0_10008e60, i32* %v3_10008e60, align 4
  %v0_10008e64 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008e64 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e64 = add i32 %v1_10008e64, 8
  %v3_10008e64 = inttoptr i32 %v2_10008e64 to i32*
  store i32 %v0_10008e64, i32* %v3_10008e64, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10008e6c = icmp ugt i32 %tmp, 511
  %v1_10008e70 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e70 = add i32 %v1_10008e70, 20
  %v3_10008e70 = inttoptr i32 %v2_10008e70 to i32*
  store i32 %tmp, i32* %v3_10008e70, align 4
  br i1 %v2_10008e6c, label %dec_label_pc_10008e80, label %dec_label_pc_10008e78

dec_label_pc_10008e78:                            ; preds = %dec_label_pc_10008e54
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10008e7c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e7c = add i32 %v1_10008e7c, 20
  %v3_10008e7c = inttoptr i32 %v2_10008e7c to i32*
  store i32 512, i32* %v3_10008e7c, align 4
  br label %dec_label_pc_10008e80

dec_label_pc_10008e80:                            ; preds = %dec_label_pc_10008e54, %dec_label_pc_10008e78
  %v0_10008e80 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008e80 = add i32 %v0_10008e80, 20
  %v2_10008e80 = inttoptr i32 %v1_10008e80 to i32*
  %v3_10008e80 = load i32, i32* %v2_10008e80, align 4
  store i32 268471948, i32* @lr, align 4
  %v2_10008e88 = call i32 @function_10009930(i32 1, i32 %v3_10008e80)
  %v3_10008e8c = icmp eq i32 %v2_10008e88, 0
  %v1_10008e90 = load i32, i32* @r31, align 4
  %v2_10008e90 = add i32 %v1_10008e90, 12
  %v3_10008e90 = inttoptr i32 %v2_10008e90 to i32*
  store i32 %v2_10008e88, i32* %v3_10008e90, align 4
  br i1 %v3_10008e8c, label %dec_label_pc_10008e98, label %dec_label_pc_10008ebc

dec_label_pc_10008e98:                            ; preds = %dec_label_pc_10008e80
  %v0_10008e98 = load i32, i32* @r31, align 4
  store i32 %v0_10008e98, i32* @r3, align 4
  store i32 268471968, i32* @lr, align 4
  %v0_10008e9c = call i32 @function_100099a0()
  br label %dec_label_pc_10008ea0

dec_label_pc_10008ea0:                            ; preds = %dec_label_pc_10008e44, %dec_label_pc_10008e98
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10008eac.299 to i32), i32* @lr, align 4
  %v0_10008ea8 = call i32 @function_10008884()
  %v0_10008eac = call i32 @function_10008fa0()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10008eb4 = inttoptr i32 %v0_10008eac to i32*
  store i32 12, i32* %v2_10008eb4, align 4
  br label %dec_label_pc_10008ec8

dec_label_pc_10008ebc:                            ; preds = %dec_label_pc_10008e80
  %v0_10008ec4 = call i32 @function_1000a334()
  br label %dec_label_pc_10008ec8

dec_label_pc_10008ec8:                            ; preds = %dec_label_pc_10008dd0, %dec_label_pc_10008ea0, %dec_label_pc_10008e24, %dec_label_pc_10008ebc
  store i32 %v0_10008dd0, i32* %r0.global-to-local, align 4
  %v0_10008ecc = load i32, i32* @r31, align 4
  ret i32 %v0_10008ecc

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_10009930, { 42, 22, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 1, 0, 6, 5, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 3, 2 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10008884, { 17, 16, 15, 35, 34, 33, 32, 30, 31, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_10008ec8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10008ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10008e80, { 1, 0 }
}

define i32 @function_10008ee0(i32* %arg1) local_unnamed_addr {
dec_label_pc_10008ee0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10008ee4 = load i32, i32* @lr, align 4
  store i32 %v0_10008ee4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008efc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008efc, i32* @r3, align 4
  %v3_10008f08 = call i32 @function_1000a33c(i32 %v2_10008efc, i32 ptrtoint ([3 x i8]* @global_var_1000a334.296 to i32))
  %v0_10008f10 = call i32 @function_1000a334()
  br label %dec_label_pc_10008f14

dec_label_pc_10008f14:                            ; preds = %dec_label_pc_10008f50, %dec_label_pc_10008ee0
  %v0_10008f14 = load i32, i32* @r31, align 4
  %v1_10008f14 = add i32 %v0_10008f14, 4
  %v2_10008f14 = inttoptr i32 %v1_10008f14 to i32*
  %v3_10008f14 = load i32, i32* %v2_10008f14, align 4
  store i32 %v3_10008f14, i32* %r0.global-to-local, align 4
  %v1_10008f18 = add i32 %v0_10008f14, 8
  %v2_10008f18 = inttoptr i32 %v1_10008f18 to i32*
  %v3_10008f18 = load i32, i32* %v2_10008f18, align 4
  store i32 %v3_10008f18, i32* %r9.global-to-local, align 4
  %v3_10008f1c = icmp ugt i32 %v3_10008f18, %v3_10008f14
  br i1 %v3_10008f1c, label %dec_label_pc_10008f50, label %dec_label_pc_10008f24

dec_label_pc_10008f24:                            ; preds = %dec_label_pc_10008f14
  %v1_10008f24 = inttoptr i32 %v0_10008f14 to i32*
  %v2_10008f24 = load i32, i32* %v1_10008f24, align 4
  store i32 %v2_10008f24, i32* @r3, align 4
  %v1_10008f28 = add i32 %v0_10008f14, 12
  %v2_10008f28 = inttoptr i32 %v1_10008f28 to i32*
  %v3_10008f28 = load i32, i32* %v2_10008f28, align 4
  %v1_10008f2c = add i32 %v0_10008f14, 20
  %v2_10008f2c = inttoptr i32 %v1_10008f2c to i32*
  %v3_10008f2c = load i32, i32* %v2_10008f2c, align 4
  store i32 %v3_10008f2c, i32* @r5, align 4
  store i32 268472116, i32* @lr, align 4
  %v4_10008f30 = inttoptr i32 %v2_10008f24 to i32*
  %v5_10008f30 = call i32 @function_1000a784(i32* %v4_10008f30, i32 %v3_10008f28, i32 %v3_10008f2c, i32 %v3_10008f18)
  %v2_10008f34 = icmp sgt i32 %v5_10008f30, 0
  br i1 %v2_10008f34, label %dec_label_pc_10008f44, label %dec_label_pc_10008f3c

dec_label_pc_10008f3c:                            ; preds = %dec_label_pc_10008f24
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10008f7c

dec_label_pc_10008f44:                            ; preds = %dec_label_pc_10008f24
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008f48 = load i32, i32* @r31, align 4
  %v2_10008f48 = add i32 %v1_10008f48, 8
  %v3_10008f48 = inttoptr i32 %v2_10008f48 to i32*
  store i32 %v5_10008f30, i32* %v3_10008f48, align 4
  %v0_10008f4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10008f4c = load i32, i32* @r31, align 4
  %v2_10008f4c = add i32 %v1_10008f4c, 4
  %v3_10008f4c = inttoptr i32 %v2_10008f4c to i32*
  store i32 %v0_10008f4c, i32* %v3_10008f4c, align 4
  %v0_10008f50.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008f50

dec_label_pc_10008f50:                            ; preds = %dec_label_pc_10008f14, %dec_label_pc_10008f44
  %v1_10008f64 = phi i32 [ %v0_10008f14, %dec_label_pc_10008f14 ], [ %v0_10008f50.pre, %dec_label_pc_10008f44 ]
  %v1_10008f50 = add i32 %v1_10008f64, 4
  %v2_10008f50 = inttoptr i32 %v1_10008f50 to i32*
  %v3_10008f50 = load i32, i32* %v2_10008f50, align 4
  store i32 %v3_10008f50, i32* %r9.global-to-local, align 4
  %v1_10008f54 = add i32 %v1_10008f64, 12
  %v2_10008f54 = inttoptr i32 %v1_10008f54 to i32*
  %v3_10008f54 = load i32, i32* %v2_10008f54, align 4
  store i32 %v3_10008f54, i32* %r11.global-to-local, align 4
  %v2_10008f58 = add i32 %v3_10008f54, %v3_10008f50
  store i32 %v2_10008f58, i32* @r29, align 4
  %v1_10008f5c = add i32 %v2_10008f58, 8
  %v2_10008f5c = inttoptr i32 %v1_10008f5c to i16*
  %v3_10008f5c = load i16, i16* %v2_10008f5c, align 2
  %v4_10008f5c = zext i16 %v3_10008f5c to i32
  %v2_10008f60 = add i32 %v4_10008f5c, %v3_10008f50
  store i32 %v2_10008f60, i32* %r0.global-to-local, align 4
  store i32 %v2_10008f60, i32* %v2_10008f50, align 4
  %v0_10008f68 = load i32, i32* @r29, align 4
  %v1_10008f68 = add i32 %v0_10008f68, 4
  %v2_10008f68 = inttoptr i32 %v1_10008f68 to i32*
  %v3_10008f68 = load i32, i32* %v2_10008f68, align 4
  store i32 %v3_10008f68, i32* %r0.global-to-local, align 4
  %v1_10008f6c = load i32, i32* @r31, align 4
  %v2_10008f6c = add i32 %v1_10008f6c, 16
  %v3_10008f6c = inttoptr i32 %v2_10008f6c to i32*
  store i32 %v3_10008f68, i32* %v3_10008f6c, align 4
  %v0_10008f70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008f70 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008f70 = add i32 %v1_10008f70, %v0_10008f70
  %v3_10008f70 = inttoptr i32 %v2_10008f70 to i32*
  %v4_10008f70 = load i32, i32* %v3_10008f70, align 4
  store i32 %v4_10008f70, i32* %r0.global-to-local, align 4
  %v3_10008f74 = icmp eq i32 %v4_10008f70, 0
  br i1 %v3_10008f74, label %dec_label_pc_10008f14, label %dec_label_pc_10008f7c

dec_label_pc_10008f7c:                            ; preds = %dec_label_pc_10008f50, %dec_label_pc_10008f3c
  store i32 %v2_10008efc, i32* @r3, align 4
  %v2_10008f84 = call i32 @function_1000a33c(i32 %v2_10008efc, i32 1)
  store i32 %v0_10008ee4, i32* %r0.global-to-local, align 4
  %v0_10008f8c = load i32, i32* @r29, align 4
  ret i32 %v0_10008f8c

; uselistorder directives
  uselistorder i32 %v1_10008f64, { 1, 0 }
  uselistorder i32 %v0_10008f14, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10008efc, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008f50, { 1, 0 }
}

define i32 @function_10008fa0() local_unnamed_addr {
dec_label_pc_10008fa0:
  ret i32 ptrtoint (i32* @global_var_1001ba54.301 to i32)
}

define i32 @function_10008fac(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008fac:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10008fb4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472256, i32* @lr, align 4
  %v1_10008fbc = call i32 @function_1000abc4(i32 %v2_10008fb4)
  %v3_10008fc4 = load i32, i32* %stack_var_-24, align 4
  %v2_10008fc8 = add i32 %v3_10008fc4, %tmp
  %v1_10008fd0 = mul i32 %v2_10008fc8, 10000
  %v1_10008fdc = and i32 %v1_10008fd0, 2147483632
  ret i32 %v1_10008fdc
}

define i32 @function_10008fe4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008fe4:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10008fe4 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10008fe4, label %dec_label_pc_10008ff8, label %dec_label_pc_10008ff4

dec_label_pc_10008ff4:                            ; preds = %dec_label_pc_10008fe4
  %v0_10008ff4 = call i32 @function_1000ad88()
  store i32 %v0_10008ff4, i32* @r3, align 4
  br label %dec_label_pc_10008ff8

dec_label_pc_10008ff8:                            ; preds = %dec_label_pc_10008fe4, %dec_label_pc_10008ff4
  %v1_10008ff8 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008ff8, i32* %r9.global-to-local, align 4
  %v4_10008ff8 = icmp eq i32 %v1_10008ff8, 0
  %v2_10008ffc = add i32 %arg3, %arg2
  store i32 %v2_10008ffc, i32* %r4.global-to-local, align 4
  %v0_10009000 = load i32, i32* @r3, align 4
  %v2_10009000 = add i32 %v0_10009000, %arg3
  store i32 %v2_10009000, i32* %r10.global-to-local, align 4
  br i1 %v4_10008ff8, label %dec_label_pc_10009028, label %dec_label_pc_10009008

dec_label_pc_10009008:                            ; preds = %dec_label_pc_10008ff8
  %v1_10009008 = urem i32 %v2_10009000, 4
  %v3_10009008 = icmp eq i32 %v1_10009008, 0
  br i1 %v3_10009008, label %dec_label_pc_10009010, label %dec_label_pc_1000905c

dec_label_pc_10009010:                            ; preds = %dec_label_pc_10009074.dec_label_pc_10009010_crit_edge, %dec_label_pc_10009008
  %v1_1000901c.pre = phi i32 [ %v1_1000901c.pre.pre, %dec_label_pc_10009074.dec_label_pc_10009010_crit_edge ], [ %v2_10009000, %dec_label_pc_10009008 ]
  %v0_10009010 = phi i32 [ %v1_10009074, %dec_label_pc_10009074.dec_label_pc_10009010_crit_edge ], [ %v1_10008ff8, %dec_label_pc_10009008 ]
  store i32 %v0_10009010, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009014

dec_label_pc_10009014:                            ; preds = %dec_label_pc_10009014, %dec_label_pc_10009010
  %v1_1000901c = phi i32 [ %v2_10009020, %dec_label_pc_10009014 ], [ %v1_1000901c.pre, %dec_label_pc_10009010 ]
  %v0_10009014 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009014 = add i32 %v0_10009014, -4
  %v2_10009014 = inttoptr i32 %v1_10009014 to i32*
  %v3_10009014 = load i32, i32* %v2_10009014, align 4
  %v1_10009018 = add i32 %v0_10009014, -8
  %v2_10009018 = inttoptr i32 %v1_10009018 to i32*
  %v3_10009018 = load i32, i32* %v2_10009018, align 4
  store i32 %v3_10009018, i32* %r9.global-to-local, align 4
  store i32 %v1_10009018, i32* %r4.global-to-local, align 4
  %v2_1000901c = add i32 %v1_1000901c, -4
  %v3_1000901c = inttoptr i32 %v2_1000901c to i32*
  store i32 %v3_10009014, i32* %v3_1000901c, align 4
  %v0_10009020 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009020 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009020 = add i32 %v1_10009020, -8
  %v3_10009020 = inttoptr i32 %v2_10009020 to i32*
  store i32 %v0_10009020, i32* %v3_10009020, align 4
  store i32 %v2_10009020, i32* %r10.global-to-local, align 4
  %v0_10009024 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009024 = add i32 %v0_10009024, -1
  store i32 %v1_10009024, i32* %ctr.global-to-local, align 4
  %v2_10009024 = icmp eq i32 %v1_10009024, 0
  br i1 %v2_10009024, label %dec_label_pc_10009028, label %dec_label_pc_10009014

dec_label_pc_10009028:                            ; preds = %dec_label_pc_10009014, %dec_label_pc_10009074, %dec_label_pc_10008ff8
  %v0_10009028 = load i32, i32* @r11, align 4
  %v1_10009028 = urem i32 %v0_10009028, 8
  store i32 %v1_10009028, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10009028, 4
  br i1 %tmp, label %dec_label_pc_10009040, label %dec_label_pc_10009034

dec_label_pc_10009034:                            ; preds = %dec_label_pc_10009028
  %v0_10009034 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009034 = add i32 %v0_10009034, -4
  %v2_10009034 = inttoptr i32 %v1_10009034 to i32*
  %v3_10009034 = load i32, i32* %v2_10009034, align 4
  store i32 %v1_10009034, i32* %r4.global-to-local, align 4
  %v1_10009038 = add nsw i32 %v1_10009028, -4
  store i32 %v1_10009038, i32* %r5.global-to-local, align 4
  %v1_1000903c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000903c = add i32 %v1_1000903c, -4
  %v3_1000903c = inttoptr i32 %v2_1000903c to i32*
  store i32 %v3_10009034, i32* %v3_1000903c, align 4
  store i32 %v2_1000903c, i32* %r10.global-to-local, align 4
  %v0_10009040.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009040

dec_label_pc_10009040:                            ; preds = %dec_label_pc_10009028, %dec_label_pc_10009034
  %v0_10009048 = phi i32 [ %v1_10009028, %dec_label_pc_10009028 ], [ %v0_10009040.pre, %dec_label_pc_10009034 ]
  %v3_10009040 = icmp eq i32 %v0_10009048, 0
  br i1 %v3_10009040, label %dec_label_pc_10009080, label %dec_label_pc_10009048

dec_label_pc_10009048:                            ; preds = %dec_label_pc_10009040
  store i32 %v0_10009048, i32* %ctr.global-to-local, align 4
  %v2_10009050.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000904c

dec_label_pc_1000904c:                            ; preds = %dec_label_pc_1000904c, %dec_label_pc_10009048
  %v2_10009050 = phi i32 [ %v3_10009050, %dec_label_pc_1000904c ], [ %v2_10009050.pre, %dec_label_pc_10009048 ]
  %v0_1000904c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000904c = add i32 %v0_1000904c, -1
  %v2_1000904c = inttoptr i32 %v1_1000904c to i8*
  %v3_1000904c = load i8, i8* %v2_1000904c, align 1
  store i32 %v1_1000904c, i32* %r4.global-to-local, align 4
  %v3_10009050 = add i32 %v2_10009050, -1
  %v4_10009050 = inttoptr i32 %v3_10009050 to i8*
  store i8 %v3_1000904c, i8* %v4_10009050, align 1
  store i32 %v3_10009050, i32* %r10.global-to-local, align 4
  %v0_10009054 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009054 = add i32 %v0_10009054, -1
  store i32 %v1_10009054, i32* %ctr.global-to-local, align 4
  %v2_10009054 = icmp eq i32 %v1_10009054, 0
  br i1 %v2_10009054, label %dec_label_pc_10009080, label %dec_label_pc_1000904c

dec_label_pc_1000905c:                            ; preds = %dec_label_pc_10009008
  %v1_1000905c = sub nsw i32 4, %v1_10009008
  store i32 %v1_1000905c, i32* %ctr.global-to-local, align 4
  %v2_10009064 = sub i32 %arg3, %v1_1000905c
  store i32 %v2_10009064, i32* @r11, align 4
  %v1_100090688 = add i32 %v2_10008ffc, -1
  %v2_100090689 = inttoptr i32 %v1_100090688 to i8*
  %v3_1000906810 = load i8, i8* %v2_100090689, align 1
  store i32 %v1_100090688, i32* %r4.global-to-local, align 4
  %v3_1000906c12 = add i32 %v2_10009000, -1
  %v4_1000906c13 = inttoptr i32 %v3_1000906c12 to i8*
  store i8 %v3_1000906810, i8* %v4_1000906c13, align 1
  store i32 %v3_1000906c12, i32* %r10.global-to-local, align 4
  %v0_1000907014 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000907015 = add i32 %v0_1000907014, -1
  store i32 %v1_1000907015, i32* %ctr.global-to-local, align 4
  %v2_1000907016 = icmp eq i32 %v1_1000907015, 0
  br i1 %v2_1000907016, label %dec_label_pc_10009074, label %dec_label_pc_10009068.dec_label_pc_10009068_crit_edge

dec_label_pc_10009068.dec_label_pc_10009068_crit_edge: ; preds = %dec_label_pc_1000905c, %dec_label_pc_10009068.dec_label_pc_10009068_crit_edge
  %v3_1000906c17 = phi i32 [ %v3_1000906c, %dec_label_pc_10009068.dec_label_pc_10009068_crit_edge ], [ %v3_1000906c12, %dec_label_pc_1000905c ]
  %v0_10009068.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009068 = add i32 %v0_10009068.pre, -1
  %v2_10009068 = inttoptr i32 %v1_10009068 to i8*
  %v3_10009068 = load i8, i8* %v2_10009068, align 1
  store i32 %v1_10009068, i32* %r4.global-to-local, align 4
  %v3_1000906c = add i32 %v3_1000906c17, -1
  %v4_1000906c = inttoptr i32 %v3_1000906c to i8*
  store i8 %v3_10009068, i8* %v4_1000906c, align 1
  store i32 %v3_1000906c, i32* %r10.global-to-local, align 4
  %v0_10009070 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009070 = add i32 %v0_10009070, -1
  store i32 %v1_10009070, i32* %ctr.global-to-local, align 4
  %v2_10009070 = icmp eq i32 %v1_10009070, 0
  br i1 %v2_10009070, label %dec_label_pc_10009074, label %dec_label_pc_10009068.dec_label_pc_10009068_crit_edge

dec_label_pc_10009074:                            ; preds = %dec_label_pc_10009068.dec_label_pc_10009068_crit_edge, %dec_label_pc_1000905c
  %v0_10009074 = load i32, i32* @r11, align 4
  %v1_10009074 = call i32 @__asm_rlwinm.(i32 %v0_10009074, i32 29, i32 3, i32 31)
  store i32 %v1_10009074, i32* %r9.global-to-local, align 4
  %v4_10009074 = icmp eq i32 %v1_10009074, 0
  br i1 %v4_10009074, label %dec_label_pc_10009028, label %dec_label_pc_10009074.dec_label_pc_10009010_crit_edge

dec_label_pc_10009074.dec_label_pc_10009010_crit_edge: ; preds = %dec_label_pc_10009074
  %v1_1000901c.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009010

dec_label_pc_10009080:                            ; preds = %dec_label_pc_1000904c, %dec_label_pc_10009040
  %v0_10009080 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10009080

; uselistorder directives
  uselistorder i32 %v1_10009074, { 1, 2, 0 }
  uselistorder i32 %v1_10009070, { 1, 0 }
  uselistorder i32 %v3_1000906c, { 1, 2, 0 }
  uselistorder i32 %v1_10009054, { 1, 0 }
  uselistorder i32 %v3_10009050, { 1, 2, 0 }
  uselistorder i32 %v1_10009028, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10009024, { 1, 0 }
  uselistorder i32 %v2_10009020, { 1, 2, 0 }
  uselistorder i32 %v1_10009008, { 1, 0 }
  uselistorder i32 %v2_10009000, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 9, 1, 6, 2, 8, 3, 7, 4 }
  uselistorder i32* %r10.global-to-local, { 6, 0, 9, 1, 5, 2, 7, 3, 8, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 0, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_10009068.dec_label_pc_10009068_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009040, { 1, 0 }
  uselistorder label %dec_label_pc_10009028, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008ff8, { 1, 0 }
}

define i32 @function_10009088(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009088:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10009088 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009088, i32* %r9.global-to-local, align 4
  %v4_10009088 = icmp eq i32 %v1_10009088, 0
  %v1_10009090 = add i32 %arg1, -4
  store i32 %v1_10009090, i32* %r11.global-to-local, align 4
  %v1_10009094 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10009098 = call i32 @__asm_rlwimi(i32 %v1_10009094, i32 16, i32 0, i32 15)
  %v2_10009098 = trunc i32 %v1_10009098 to i8
  br i1 %v4_10009088, label %dec_label_pc_100090c0, label %dec_label_pc_100090a0

dec_label_pc_100090a0:                            ; preds = %dec_label_pc_10009088
  %v0_100090a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100090a0 = urem i32 %v0_100090a0, 4
  %v3_100090a0 = icmp eq i32 %v1_100090a0, 0
  br i1 %v3_100090a0, label %dec_label_pc_100090a0.dec_label_pc_100090a8_crit_edge, label %dec_label_pc_100090f0

dec_label_pc_100090a0.dec_label_pc_100090a8_crit_edge: ; preds = %dec_label_pc_100090a0
  %v0_100090a8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100090a8

dec_label_pc_100090a8:                            ; preds = %dec_label_pc_10009108.dec_label_pc_100090a8_crit_edge, %dec_label_pc_100090a0.dec_label_pc_100090a8_crit_edge
  %v0_100090ac.pre = phi i32 [ %v0_100090a0, %dec_label_pc_100090a0.dec_label_pc_100090a8_crit_edge ], [ %v0_100090ac.pre.pre, %dec_label_pc_10009108.dec_label_pc_100090a8_crit_edge ]
  %v0_100090a8 = phi i32 [ %v0_100090a8.pre, %dec_label_pc_100090a0.dec_label_pc_100090a8_crit_edge ], [ %v1_10009108, %dec_label_pc_10009108.dec_label_pc_100090a8_crit_edge ]
  store i32 %v0_100090a8, i32* %ctr.global-to-local, align 4
  %v1_100090b0 = sext i8 %v2_10009098 to i32
  br label %dec_label_pc_100090ac

dec_label_pc_100090ac:                            ; preds = %dec_label_pc_100090ac, %dec_label_pc_100090a8
  %v0_100090ac = phi i32 [ %v1_100090b8, %dec_label_pc_100090ac ], [ %v0_100090ac.pre, %dec_label_pc_100090a8 ]
  %v1_100090ac = add i32 %v0_100090ac, 4
  store i32 %v1_100090ac, i32* %r9.global-to-local, align 4
  %v4_100090b0 = inttoptr i32 %v1_100090ac to i32*
  store i32 %v1_100090b0, i32* %v4_100090b0, align 4
  %v2_100090b4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100090b4 = add i32 %v2_100090b4, 4
  %v4_100090b4 = inttoptr i32 %v3_100090b4 to i32*
  store i32 %v1_100090b0, i32* %v4_100090b4, align 4
  %v0_100090b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100090b8 = add i32 %v0_100090b8, 4
  store i32 %v1_100090b8, i32* %r11.global-to-local, align 4
  %v0_100090bc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100090bc = add i32 %v0_100090bc, -1
  store i32 %v1_100090bc, i32* %ctr.global-to-local, align 4
  %v2_100090bc = icmp eq i32 %v1_100090bc, 0
  br i1 %v2_100090bc, label %dec_label_pc_100090c0, label %dec_label_pc_100090ac

dec_label_pc_100090c0:                            ; preds = %dec_label_pc_100090ac, %dec_label_pc_10009108, %dec_label_pc_10009088
  %v0_100090c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100090c0 = urem i32 %v0_100090c0, 8
  store i32 %v1_100090c0, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_100090c0, 4
  br i1 %tmp, label %dec_label_pc_100090d4, label %dec_label_pc_100090cc

dec_label_pc_100090cc:                            ; preds = %dec_label_pc_100090c0
  %v1_100090cc = sext i8 %v2_10009098 to i32
  %v2_100090cc = load i32, i32* %r11.global-to-local, align 4
  %v3_100090cc = add i32 %v2_100090cc, 4
  %v4_100090cc = inttoptr i32 %v3_100090cc to i32*
  store i32 %v1_100090cc, i32* %v4_100090cc, align 4
  store i32 %v3_100090cc, i32* %r11.global-to-local, align 4
  %v0_100090d0 = load i32, i32* @r5, align 4
  %v1_100090d0 = add i32 %v0_100090d0, -4
  store i32 %v1_100090d0, i32* @r5, align 4
  br label %dec_label_pc_100090d4

dec_label_pc_100090d4:                            ; preds = %dec_label_pc_100090c0, %dec_label_pc_100090cc
  %v0_100090d4 = phi i32 [ %v1_100090c0, %dec_label_pc_100090c0 ], [ %v1_100090d0, %dec_label_pc_100090cc ]
  %v3_100090d4 = icmp eq i32 %v0_100090d4, 0
  %v0_100090d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100090d4, i32 %v0_100090d8)
  %v0_100090dc = load i32, i32* @r5, align 4
  store i32 %v0_100090dc, i32* %ctr.global-to-local, align 4
  %v0_100090e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100090e0 = add i32 %v0_100090e0, 3
  store i32 %v1_100090e0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100090e4

dec_label_pc_100090e4:                            ; preds = %dec_label_pc_100090e4, %dec_label_pc_100090d4
  %v3_100090e4 = phi i32 [ %v4_100090e4, %dec_label_pc_100090e4 ], [ %v1_100090e0, %dec_label_pc_100090d4 ]
  %v4_100090e4 = add i32 %v3_100090e4, 1
  %v5_100090e4 = inttoptr i32 %v4_100090e4 to i8*
  store i8 %v2_10009098, i8* %v5_100090e4, align 1
  store i32 %v4_100090e4, i32* %r9.global-to-local, align 4
  %v0_100090e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100090e8 = add i32 %v0_100090e8, -1
  store i32 %v1_100090e8, i32* %ctr.global-to-local, align 4
  %v2_100090e8 = icmp eq i32 %v1_100090e8, 0
  br i1 %v2_100090e8, label %dec_label_pc_10009114, label %dec_label_pc_100090e4

dec_label_pc_100090f0:                            ; preds = %dec_label_pc_100090a0
  %v1_100090f0 = sub nsw i32 4, %v1_100090a0
  store i32 %v1_100090f0, i32* %ctr.global-to-local, align 4
  %v1_100090f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_100090f8 = sub i32 %v1_100090f8, %v1_100090f0
  store i32 %v2_100090f8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100090fc

dec_label_pc_100090fc:                            ; preds = %dec_label_pc_100090fc, %dec_label_pc_100090f0
  %v3_100090fc = phi i32 [ %v1_10009100, %dec_label_pc_100090fc ], [ %v0_100090a0, %dec_label_pc_100090f0 ]
  %v4_100090fc = add i32 %v3_100090fc, 4
  %v5_100090fc = inttoptr i32 %v4_100090fc to i8*
  store i8 %v2_10009098, i8* %v5_100090fc, align 1
  %v0_10009100 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009100 = add i32 %v0_10009100, 1
  store i32 %v1_10009100, i32* %r11.global-to-local, align 4
  %v0_10009104 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009104 = add i32 %v0_10009104, -1
  store i32 %v1_10009104, i32* %ctr.global-to-local, align 4
  %v2_10009104 = icmp eq i32 %v1_10009104, 0
  br i1 %v2_10009104, label %dec_label_pc_10009108, label %dec_label_pc_100090fc

dec_label_pc_10009108:                            ; preds = %dec_label_pc_100090fc
  %v0_10009108 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009108 = call i32 @__asm_rlwinm.(i32 %v0_10009108, i32 29, i32 3, i32 31)
  store i32 %v1_10009108, i32* %r9.global-to-local, align 4
  %v4_10009108 = icmp eq i32 %v1_10009108, 0
  br i1 %v4_10009108, label %dec_label_pc_100090c0, label %dec_label_pc_10009108.dec_label_pc_100090a8_crit_edge

dec_label_pc_10009108.dec_label_pc_100090a8_crit_edge: ; preds = %dec_label_pc_10009108
  %v0_100090ac.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100090a8

dec_label_pc_10009114:                            ; preds = %dec_label_pc_100090e4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009108, { 1, 2, 0 }
  uselistorder i32 %v1_10009104, { 1, 0 }
  uselistorder i32 %v1_10009100, { 1, 0 }
  uselistorder i32 %v1_100090e8, { 1, 0 }
  uselistorder i32 %v4_100090e4, { 1, 2, 0 }
  uselistorder i32 %v1_100090c0, { 2, 1, 0 }
  uselistorder i32 %v1_100090bc, { 1, 0 }
  uselistorder i32 %v1_100090b8, { 1, 0 }
  uselistorder i32 %v1_100090a0, { 1, 0 }
  uselistorder i32 %v0_100090a0, { 2, 1, 0 }
  uselistorder i8 %v2_10009098, { 2, 3, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_100090d4, { 1, 0 }
  uselistorder label %dec_label_pc_100090c0, { 1, 0, 2 }
}

define i32 @function_10009118(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10009118:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009118 = add i32 %arg1, -1
  %v1_1000911c = sub i32 %v2_10009118, %tmp
  store i32 %v1_1000911c, i32* %r9.global-to-local, align 4
  %v2_100091204 = load i8, i8* %arg2, align 1
  %v1_100091246 = add i32 %tmp, 1
  store i32 %v1_100091246, i32* %r4.global-to-local, align 4
  %v3_100091287 = icmp eq i8 %v2_100091204, 0
  store i1 %v3_100091287, i1* %cr7_eq.global-to-local, align 1
  %v5_1000912c8 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100091204, i8* %v5_1000912c8, align 1
  %v0_100091309 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100091309, label %dec_label_pc_10009134, label %dec_label_pc_10009120.dec_label_pc_10009120_crit_edge

dec_label_pc_10009120.dec_label_pc_10009120_crit_edge: ; preds = %dec_label_pc_10009118, %dec_label_pc_10009120.dec_label_pc_10009120_crit_edge
  %v0_10009120.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000912c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009120 = inttoptr i32 %v0_10009120.pre to i8*
  %v2_10009120 = load i8, i8* %v1_10009120, align 1
  %v1_10009124 = add i32 %v0_10009120.pre, 1
  store i32 %v1_10009124, i32* %r4.global-to-local, align 4
  %v3_10009128 = icmp eq i8 %v2_10009120, 0
  store i1 %v3_10009128, i1* %cr7_eq.global-to-local, align 1
  %v4_1000912c = add i32 %v1_10009124, %v2_1000912c.pre
  %v5_1000912c = inttoptr i32 %v4_1000912c to i8*
  store i8 %v2_10009120, i8* %v5_1000912c, align 1
  %v0_10009130 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009130, label %dec_label_pc_10009134, label %dec_label_pc_10009120.dec_label_pc_10009120_crit_edge

dec_label_pc_10009134:                            ; preds = %dec_label_pc_10009120.dec_label_pc_10009120_crit_edge, %dec_label_pc_10009118
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009120.dec_label_pc_10009120_crit_edge, { 1, 0 }
}

define i32 @function_10009138(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009138:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000913c = load i32, i32* @lr, align 4
  store i32 %v0_1000913c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000914c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268472672, i32* @lr, align 4
  %v3_1000915c = call i32 @function_100086b4(i32 1076655123, i32 %v2_1000914c, i32 %v2_1000914c)
  %v2_10009160 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009160, i32* @r4, align 4
  store i32 %v3_1000915c, i32* @r30, align 4
  %v3_10009164 = icmp eq i32 %v3_1000915c, 0
  %v0_1000916c = load i32, i32* @r31, align 4
  br i1 %v3_10009164, label %dec_label_pc_10009174, label %dec_label_pc_100091bc

dec_label_pc_10009174:                            ; preds = %dec_label_pc_10009138
  %v1_1000916c = add i32 %v0_1000916c, 17
  %v3_1000918c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000918c, i32* %r0.global-to-local, align 4
  %v2_10009190 = add i32 %v0_1000916c, 4
  %v3_10009190 = inttoptr i32 %v2_10009190 to i32*
  store i32 %tmp7, i32* %v3_10009190, align 4
  %v0_10009194 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009194 = load i32, i32* @r31, align 4
  %v2_10009194 = inttoptr i32 %v1_10009194 to i32*
  store i32 %v0_10009194, i32* %v2_10009194, align 4
  %v0_10009198 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009198 = load i32, i32* @r31, align 4
  %v2_10009198 = add i32 %v1_10009198, 8
  %v3_10009198 = inttoptr i32 %v2_10009198 to i32*
  store i32 %v0_10009198, i32* %v3_10009198, align 4
  %v0_1000919c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000919c = load i32, i32* @r31, align 4
  %v2_1000919c = add i32 %v1_1000919c, 12
  %v3_1000919c = inttoptr i32 %v2_1000919c to i32*
  store i32 %v0_1000919c, i32* %v3_1000919c, align 4
  %v3_100091a0 = load i32, i32* @r31, align 4
  %v4_100091a0 = add i32 %v3_100091a0, 16
  %v5_100091a0 = inttoptr i32 %v4_100091a0 to i8*
  store i8 %tmp4, i8* %v5_100091a0, align 1
  %v1_100091a4 = load i32, i32* @r31, align 4
  %v2_100091a4 = add i32 %v1_100091a4, 52
  %v3_100091a4 = inttoptr i32 %v2_100091a4 to i32*
  store i32 %tmp3, i32* %v3_100091a4, align 4
  %v1_100091a8 = load i32, i32* @r31, align 4
  %v2_100091a8 = add i32 %v1_100091a8, 56
  %v3_100091a8 = inttoptr i32 %v2_100091a8 to i32*
  store i32 %tmp2, i32* %v3_100091a8, align 4
  store i32 268472752, i32* @lr, align 4
  %v6_100091ac = sext i8 %tmp4 to i32
  %v8_100091ac = call i32 @function_1000ae24(i32 %v1_1000916c, i32 %v2_10009160, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_100091ac, i32 %tmp7)
  store i32 268472764, i32* @lr, align 4
  %v3_100091b8 = call i32 @function_10009088(i32 %v8_100091ac, i32 0, i32 13)
  %v0_100091c0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100091bc

dec_label_pc_100091bc:                            ; preds = %dec_label_pc_10009138, %dec_label_pc_10009174
  %v0_100091c0 = phi i32 [ %v3_1000915c, %dec_label_pc_10009138 ], [ %v0_100091c0.pre, %dec_label_pc_10009174 ]
  store i32 %v0_1000913c, i32* %r0.global-to-local, align 4
  ret i32 %v0_100091c0

; uselistorder directives
  uselistorder i32 %v2_1000914c, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 9, 2, 1, 10, 4, 3, 11, 12, 13, 14, 0, 15, 16, 5, 17, 18, 6, 19, 20, 7, 21, 22, 8 }
  uselistorder label %dec_label_pc_100091bc, { 1, 0 }
}

define i32 @function_100091d4() local_unnamed_addr {
dec_label_pc_100091d4:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100091d4 = load i32, i32* @r4, align 4
  %v3_100091d4 = icmp eq i32 %v0_100091d4, 1
  %v0_100091e4 = load i32, i32* @r3, align 4
  store i32 %v0_100091e4, i32* %r27.global-to-local, align 4
  %v0_100091ec = load i32, i32* @r5, align 4
  store i32 %v0_100091ec, i32* @r31, align 4
  br i1 %v3_100091d4, label %dec_label_pc_10009210, label %dec_label_pc_100091f4

dec_label_pc_100091f4:                            ; preds = %dec_label_pc_100091d4
  %v3_100091f4 = icmp eq i32 %v0_100091d4, 2
  br i1 %v3_100091f4, label %dec_label_pc_10009230, label %dec_label_pc_100091fc

dec_label_pc_100091fc:                            ; preds = %dec_label_pc_100091f4
  %v3_100091fc = icmp eq i32 %v0_100091d4, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_100091fc, label %dec_label_pc_10009238, label %dec_label_pc_1000921c

dec_label_pc_10009210:                            ; preds = %dec_label_pc_100091d4
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10009238

dec_label_pc_1000921c:                            ; preds = %dec_label_pc_100091fc
  %v0_1000921c = call i32 @function_10008fa0()
  store i32 -1, i32* @r28, align 4
  %v2_10009228 = inttoptr i32 %v0_1000921c to i32*
  store i32 22, i32* %v2_10009228, align 4
  br label %dec_label_pc_10009320

dec_label_pc_10009230:                            ; preds = %dec_label_pc_100091f4
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10009238

dec_label_pc_10009238:                            ; preds = %dec_label_pc_100091fc, %dec_label_pc_10009210, %dec_label_pc_10009230
  %v1_10009238 = inttoptr i32 %v0_100091ec to i32*
  %v2_10009238 = load i32, i32* %v1_10009238, align 4
  store i32 19, i32* @r5, align 4
  %v1_10009240 = add i32 %v0_100091ec, 4
  %v2_10009240 = inttoptr i32 %v1_10009240 to i32*
  %v3_10009240 = load i32, i32* %v2_10009240, align 4
  store i32 %v3_10009240, i32* %r9.global-to-local, align 4
  %v1_10009244 = add i32 %v0_100091ec, 17
  store i32 %v1_10009244, i32* @r4, align 4
  %v1_10009248 = add i32 %v0_100091ec, 8
  %v2_10009248 = inttoptr i32 %v1_10009248 to i32*
  %v3_10009248 = load i32, i32* %v2_10009248, align 4
  %v2_1000924c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000924c, i32* @r3, align 4
  %v2_10009254 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10009238, i32* %stack_var_-72, align 4
  store i32 268472964, i32* @lr, align 4
  %v0_10009280 = call i32 @function_1000ad88()
  %v0_10009284 = load i32, i32* %r27.global-to-local, align 4
  %v0_10009288 = load i32, i32* @r30, align 4
  store i32 268472984, i32* @lr, align 4
  %v3_10009294 = call i32 @function_100086b4(i32 %v0_10009284, i32 %v0_10009288, i32 %v2_10009254)
  store i32 %v3_10009294, i32* @r28, align 4
  %v3_10009298 = icmp eq i32 %v3_10009294, 0
  br i1 %v3_10009298, label %dec_label_pc_100092a0, label %dec_label_pc_10009320

dec_label_pc_100092a0:                            ; preds = %dec_label_pc_10009238
  %v0_100092a0 = load i32, i32* @r30, align 4
  %v3_100092a4 = icmp eq i32 %v0_100092a0, -2144570348
  br i1 %v3_100092a4, label %dec_label_pc_100092ac, label %dec_label_pc_1000931c

dec_label_pc_100092ac:                            ; preds = %dec_label_pc_100092a0
  %v0_100092ac = call i32 @function_10008fa0()
  store i32 %v0_100092ac, i32* @r29, align 4
  %v0_100092bc = load i32, i32* %r27.global-to-local, align 4
  %v1_100092c4 = inttoptr i32 %v0_100092ac to i32*
  %v2_100092c4 = load i32, i32* %v1_100092c4, align 4
  store i32 %v2_100092c4, i32* @r30, align 4
  store i32 268473040, i32* @lr, align 4
  %v3_100092cc = call i32 @function_100086b4(i32 %v0_100092bc, i32 1076655123, i32 %v2_10009254)
  %v3_100092d0 = icmp eq i32 %v3_100092cc, 0
  br i1 %v3_100092d0, label %dec_label_pc_100092e0, label %dec_label_pc_100092d8

dec_label_pc_100092d8:                            ; preds = %dec_label_pc_100092ac
  %v0_100092d8 = load i32, i32* @r30, align 4
  %v1_100092d8 = load i32, i32* @r29, align 4
  %v2_100092d8 = inttoptr i32 %v1_100092d8 to i32*
  store i32 %v0_100092d8, i32* %v2_100092d8, align 4
  br label %dec_label_pc_10009320

dec_label_pc_100092e0:                            ; preds = %dec_label_pc_100092ac
  %v0_100092e0 = load i32, i32* @r31, align 4
  %v1_100092e0 = add i32 %v0_100092e0, 8
  %v2_100092e0 = inttoptr i32 %v1_100092e0 to i32*
  %v3_100092e0 = load i32, i32* %v2_100092e0, align 4
  %v1_100092e8 = call i32 @__asm_rlwinm(i32 %v3_100092e0, i32 0, i32 19, i32 20)
  %v1_100092ec = call i32 @__asm_rlwinm(i32 %v3_10009248, i32 0, i32 19, i32 20)
  store i32 %v1_100092ec, i32* %r9.global-to-local, align 4
  %v4_100092f0 = icmp eq i32 %v1_100092e8, %v1_100092ec
  br i1 %v4_100092f0, label %dec_label_pc_100092f8, label %dec_label_pc_1000930c

dec_label_pc_100092f8:                            ; preds = %dec_label_pc_100092e0
  %v1_100092f8 = and i32 %v3_100092e0, 768
  store i32 %v1_100092f8, i32* %r9.global-to-local, align 4
  %v3_100092f8 = icmp eq i32 %v1_100092f8, 0
  br i1 %v3_100092f8, label %dec_label_pc_1000931c, label %dec_label_pc_10009300

dec_label_pc_10009300:                            ; preds = %dec_label_pc_100092f8
  %v1_10009300 = call i32 @__asm_rlwinm(i32 %v3_10009248, i32 0, i32 22, i32 23)
  %v0_10009304 = load i32, i32* %r9.global-to-local, align 4
  %v4_10009304 = icmp eq i32 %v0_10009304, %v1_10009300
  br i1 %v4_10009304, label %dec_label_pc_1000931c, label %dec_label_pc_1000930c

dec_label_pc_1000930c:                            ; preds = %dec_label_pc_100092e0, %dec_label_pc_10009300
  store i32 -1, i32* @r28, align 4
  %v1_10009314 = load i32, i32* @r29, align 4
  %v2_10009314 = inttoptr i32 %v1_10009314 to i32*
  store i32 22, i32* %v2_10009314, align 4
  br label %dec_label_pc_10009320

dec_label_pc_1000931c:                            ; preds = %dec_label_pc_100092a0, %dec_label_pc_10009300, %dec_label_pc_100092f8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009320

dec_label_pc_10009320:                            ; preds = %dec_label_pc_10009238, %dec_label_pc_1000930c, %dec_label_pc_100092d8, %dec_label_pc_1000921c, %dec_label_pc_1000931c
  %v0_10009324 = load i32, i32* @r28, align 4
  ret i32 %v0_10009324

; uselistorder directives
  uselistorder i32 %v0_100091ec, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_100086b4, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009320, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000931c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000930c, { 1, 0 }
  uselistorder label %dec_label_pc_10009238, { 2, 1, 0 }
}

define i32 @function_10009338(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009338:
  %stack_var_-24 = alloca i32, align 4
  %v2_10009340 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009340, i32* @r4, align 4
  store i32 268473164, i32* @lr, align 4
  %v1_10009348 = bitcast i32* %stack_var_-24 to i8*
  %v2_10009348 = call i32 @function_1000ae58(i8* %v1_10009348)
  %v3_1000934c = icmp eq i32 %v2_10009348, 0
  br i1 %v3_1000934c, label %dec_label_pc_1000935c, label %dec_label_pc_10009358

dec_label_pc_10009358:                            ; preds = %dec_label_pc_10009338
  %v3_10009358 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000935c

dec_label_pc_1000935c:                            ; preds = %dec_label_pc_10009338, %dec_label_pc_10009358
  %v0_10009368 = phi i32 [ -1, %dec_label_pc_10009338 ], [ %v3_10009358, %dec_label_pc_10009358 ]
  ret i32 %v0_10009368

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000935c, { 1, 0 }
}

define i32 @function_1000936c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000936c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009380 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473232, i32* @lr, align 4
  %v2_1000938c = call i32 @function_1000a68c(i32 5, i32 %v2_10009380)
  ret i32 %v2_1000938c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100093a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100093a0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100093b4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473284, i32* @lr, align 4
  %v2_100093c0 = call i32 @function_1000a68c(i32 2, i32 %v2_100093b4)
  ret i32 %v2_100093c0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100093d4() local_unnamed_addr {
dec_label_pc_100093d4:
  %stack_var_-24 = alloca i32, align 4
  %v0_100093dc = load i32, i32* @r3, align 4
  store i32 %v0_100093dc, i32* %stack_var_-24, align 4
  %v2_100093e8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473336, i32* @lr, align 4
  %v2_100093f4 = call i32 @function_1000a68c(i32 3, i32 %v2_100093e8)
  ret i32 %v2_100093f4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009408(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009408:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000941c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473388, i32* @lr, align 4
  %v2_10009428 = call i32 @function_1000a68c(i32 6, i32 %v2_1000941c)
  ret i32 %v2_10009428

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000943c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000943c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009450 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268473448, i32* @lr, align 4
  %v2_10009464 = call i32 @function_1000a68c(i32 15, i32 %v2_10009450)
  ret i32 %v2_10009464

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 38, 25, 26, 6, 27, 7, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, 21, 22, 23, 29, 24, 30, 31, 2, 32, 33, 3, 34, 35, 4, 36, 37, 5 }
}

define i32 @function_10009478(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009478:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000948c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473496, i32* @lr, align 4
  %v2_10009494 = call i32 @function_1000a68c(i32 4, i32 %v2_1000948c)
  ret i32 %v2_10009494

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100094a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100094a8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100094bc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473552, i32* @lr, align 4
  %v2_100094cc = call i32 @function_1000a68c(i32 10, i32 %v2_100094bc)
  ret i32 %v2_100094cc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100094e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100094e0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100094f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268473616, i32* @lr, align 4
  %v2_1000950c = call i32 @function_1000a68c(i32 12, i32 %v2_100094f4)
  ret i32 %v2_1000950c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009520(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009520:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009534 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473672, i32* @lr, align 4
  %v2_10009544 = call i32 @function_1000a68c(i32 9, i32 %v2_10009534)
  ret i32 %v2_10009544

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 6, 7, 8, 16, 17, 18, 1, 19, 2, 20, 3, 21, 9, 10, 11, 12, 13, 22, 14, 23, 4, 36, 24, 25, 26, 5, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 15 }
}

define i32 @function_10009558(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009558:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000956c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268473736, i32* @lr, align 4
  %v2_10009584 = call i32 @function_1000a68c(i32 11, i32 %v2_1000956c)
  ret i32 %v2_10009584

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009598(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009598:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100095ac = ptrtoint i32* %stack_var_-40 to i32
  store i32 268473796, i32* @lr, align 4
  %v2_100095c0 = call i32 @function_1000a68c(i32 14, i32 %v2_100095ac)
  ret i32 %v2_100095c0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_100095d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100095d4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100095e8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473848, i32* @lr, align 4
  %v2_100095f4 = call i32 @function_1000a68c(i32 1, i32 %v2_100095e8)
  ret i32 %v2_100095f4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a68c, { 2, 1, 0, 5, 6, 11, 7, 10, 9, 4, 3, 8 }
}

define i32 @function_10009608(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009608:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009638, label %dec_label_pc_10009624

dec_label_pc_10009624:                            ; preds = %dec_label_pc_10009608
  %v0_10009624 = call i32 @function_10008fa0()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009630 = inttoptr i32 %v0_10009624 to i32*
  store i32 22, i32* %v2_10009630, align 4
  %v0_10009644.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009640

dec_label_pc_10009638:                            ; preds = %dec_label_pc_10009608
  %v0_10009638 = call i32 @function_10009788()
  store i32 %v0_10009638, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009640

dec_label_pc_10009640:                            ; preds = %dec_label_pc_10009624, %dec_label_pc_10009638
  %v0_10009644 = phi i32 [ %v0_10009644.pre, %dec_label_pc_10009624 ], [ %v0_10009638, %dec_label_pc_10009638 ]
  ret i32 %v0_10009644

; uselistorder directives
  uselistorder label %dec_label_pc_10009640, { 1, 0 }
}

define i32 @function_10009654(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009654:
  store i32 268473964, i32* @lr, align 4
  %v3_10009668 = call i32 @function_10009088(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10009680(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009680:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009680 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009680, label %dec_label_pc_100096ac, label %dec_label_pc_1000969c

dec_label_pc_1000969c:                            ; preds = %dec_label_pc_10009680
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_100096ac, label %dec_label_pc_100096a4

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_1000969c
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_100096dc.lr.ph, label %dec_label_pc_100096ac

dec_label_pc_100096ac:                            ; preds = %dec_label_pc_100096a4, %dec_label_pc_1000969c, %dec_label_pc_10009680
  %v0_100096ac = call i32 @function_10008fa0()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100096b8 = inttoptr i32 %v0_100096ac to i32*
  store i32 22, i32* %v2_100096b8, align 4
  %v0_1000974c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009748

dec_label_pc_100096dc.lr.ph:                      ; preds = %dec_label_pc_100096a4
  %v2_100096cc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100096cc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_100096dc22 = add i32 %v2_100096cc, 128
  %v3_100096dc23 = inttoptr i32 %v2_100096dc22 to i32*
  store i32 0, i32* %v3_100096dc23, align 4
  %v0_100096e024 = load i32, i32* %r11.global-to-local, align 4
  %v1_100096e025 = add i32 %v0_100096e024, -1
  store i32 %v1_100096e025, i32* %r11.global-to-local, align 4
  %v1_100096e426 = mul i32 %v1_100096e025, 4
  %v1_100096e827 = load i32, i32* %r8.global-to-local, align 4
  %v2_100096e828 = add i32 %v1_100096e827, %v1_100096e426
  store i32 %v2_100096e828, i32* %r9.global-to-local, align 4
  %v0_100096ec29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100096ec30 = add i32 %v0_100096ec29, -1
  store i32 %v1_100096ec30, i32* %ctr.global-to-local, align 4
  %v2_100096ec31 = icmp eq i32 %v1_100096ec30, 0
  br i1 %v2_100096ec31, label %dec_label_pc_100096f0, label %dec_label_pc_100096dc.dec_label_pc_100096dc_crit_edge

dec_label_pc_100096dc.dec_label_pc_100096dc_crit_edge: ; preds = %dec_label_pc_100096dc.lr.ph, %dec_label_pc_100096dc.dec_label_pc_100096dc_crit_edge
  %v2_100096e832 = phi i32 [ %v2_100096e8, %dec_label_pc_100096dc.dec_label_pc_100096dc_crit_edge ], [ %v2_100096e828, %dec_label_pc_100096dc.lr.ph ]
  %v0_100096dc.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100096dc = add i32 %v2_100096e832, 4
  %v3_100096dc = inttoptr i32 %v2_100096dc to i32*
  store i32 %v0_100096dc.pre, i32* %v3_100096dc, align 4
  %v0_100096e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100096e0 = add i32 %v0_100096e0, -1
  store i32 %v1_100096e0, i32* %r11.global-to-local, align 4
  %v1_100096e4 = mul i32 %v1_100096e0, 4
  %v1_100096e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100096e8 = add i32 %v1_100096e8, %v1_100096e4
  store i32 %v2_100096e8, i32* %r9.global-to-local, align 4
  %v0_100096ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100096ec = add i32 %v0_100096ec, -1
  store i32 %v1_100096ec, i32* %ctr.global-to-local, align 4
  %v2_100096ec = icmp eq i32 %v1_100096ec, 0
  br i1 %v2_100096ec, label %dec_label_pc_100096f0, label %dec_label_pc_100096dc.dec_label_pc_100096dc_crit_edge

dec_label_pc_100096f0:                            ; preds = %dec_label_pc_100096dc.dec_label_pc_100096dc_crit_edge, %dec_label_pc_100096dc.lr.ph
  %v0_100096f4.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_100096f0 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_100096f0, i32* @r3, align 4
  store i32 %v0_100096f4.pre, i32* @r4, align 4
  %v0_100096f8 = call i32 @function_10009788()
  %v1_100096fc = icmp slt i32 %v0_100096f8, 0
  br i1 %v1_100096fc, label %dec_label_pc_10009744, label %dec_label_pc_10009704

dec_label_pc_10009704:                            ; preds = %dec_label_pc_100096f0
  %v0_10009708 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009710 = call i32 @function_10009760(i32 ptrtoint (i32* @global_var_1001bbf8.304 to i32), i32 %v0_10009708)
  %v2_1000971c = ptrtoint i32* %stack_var_-156 to i32
  store i32 268474164, i32* @lr, align 4
  %v4_10009730 = call i32 @function_1000af18(i32 %v0_10009708, i32* nonnull %stack_var_-296, i32 %v2_1000971c)
  %v1_10009734 = icmp slt i32 %v4_10009730, 0
  br i1 %v1_10009734, label %dec_label_pc_10009744, label %dec_label_pc_1000973c

dec_label_pc_1000973c:                            ; preds = %dec_label_pc_10009704
  %v3_1000973c = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000973c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009748

dec_label_pc_10009744:                            ; preds = %dec_label_pc_10009704, %dec_label_pc_100096f0
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009748

dec_label_pc_10009748:                            ; preds = %dec_label_pc_1000973c, %dec_label_pc_100096ac, %dec_label_pc_10009744
  %v0_1000974c = phi i32 [ %v3_1000973c, %dec_label_pc_1000973c ], [ %v0_1000974c.pre, %dec_label_pc_100096ac ], [ -1, %dec_label_pc_10009744 ]
  ret i32 %v0_1000974c

; uselistorder directives
  uselistorder i32 %v1_100096ec, { 1, 0 }
  uselistorder i32 %v2_100096e8, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10009748, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100096dc.dec_label_pc_100096dc_crit_edge, { 1, 0 }
}

define i32 @function_10009760(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009760:
  %v1_10009760 = add i32 %arg2, -1
  %v1_10009764 = call i32 @__asm_rlwinm(i32 %v1_10009760, i32 29, i32 3, i32 29)
  %v1_10009768 = urem i32 %v1_10009760, 32
  %v2_1000976c = add i32 %v1_10009764, %arg1
  %v3_1000976c = inttoptr i32 %v2_1000976c to i32*
  %v4_1000976c = load i32, i32* %v3_1000976c, align 4
  %v3_10009774 = shl i32 1, %v1_10009768
  %v2_10009778 = and i32 %v4_1000976c, %v3_10009774
  %v2_1000977c = icmp ne i32 %v2_10009778, 0
  %v5_10009780 = zext i1 %v2_1000977c to i32
  ret i32 %v5_10009780
}

define i32 @function_10009788() local_unnamed_addr {
dec_label_pc_10009788:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009788 = load i32, i32* @r4, align 4
  %v1_10009788 = add i32 %v0_10009788, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009790 = call i32 @__asm_rlwinm(i32 %v1_10009788, i32 29, i32 3, i32 29)
  %v1_10009794 = urem i32 %v1_10009788, 32
  %v1_10009798 = load i32, i32* @r3, align 4
  %v2_10009798 = add i32 %v1_10009798, %v1_10009790
  %v3_10009798 = inttoptr i32 %v2_10009798 to i32*
  %v4_10009798 = load i32, i32* %v3_10009798, align 4
  %v0_1000979c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000979c = shl i32 %v0_1000979c, %v1_10009794
  store i32 %v3_1000979c, i32* %r0.global-to-local, align 4
  %v2_100097a0 = or i32 %v3_1000979c, %v4_10009798
  store i32 %v2_100097a0, i32* %v3_10009798, align 4
  ret i32 0
}

define i32 @function_100097b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100097b0:
  %v1_100097b0 = add i32 %arg2, -1
  %v1_100097b8 = call i32 @__asm_rlwinm(i32 %v1_100097b0, i32 29, i32 3, i32 29)
  %v1_100097bc = urem i32 %v1_100097b0, 32
  %v2_100097c0 = add i32 %v1_100097b8, %arg1
  %v3_100097c0 = inttoptr i32 %v2_100097c0 to i32*
  %v4_100097c0 = load i32, i32* %v3_100097c0, align 4
  %v3_100097c4 = shl i32 -2, %v1_100097bc
  %v4_100097c4 = sub nsw i32 32, %v1_100097bc
  %v5_100097c4 = lshr i32 -2, %v4_100097c4
  %v6_100097c4 = or i32 %v5_100097c4, %v3_100097c4
  %v2_100097c8 = and i32 %v6_100097c4, %v4_100097c0
  store i32 %v2_100097c8, i32* %v3_100097c0, align 4
  ret i32 0
}

define i32 @function_100097d8() local_unnamed_addr {
dec_label_pc_100097d8:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100097d8 = load i32, i32* @r3, align 4
  %v3_100097d8 = icmp eq i32 %v0_100097d8, 0
  br i1 %v3_100097d8, label %dec_label_pc_100097f4.thread, label %dec_label_pc_100097f4

dec_label_pc_100097f4.thread:                     ; preds = %dec_label_pc_100097d8
  br label %dec_label_pc_10009800

dec_label_pc_100097f4:                            ; preds = %dec_label_pc_100097d8
  %v3_100097f8 = icmp ugt i32 %v0_100097d8, -8
  br i1 %v3_100097f8, label %dec_label_pc_10009908, label %dec_label_pc_10009800

dec_label_pc_10009800:                            ; preds = %dec_label_pc_100097f4.thread, %dec_label_pc_100097f4
  %v0_1000980416 = phi i32 [ 1, %dec_label_pc_100097f4.thread ], [ %v0_100097d8, %dec_label_pc_100097f4 ]
  %v1_10009804 = add i32 %v0_1000980416, 4
  store i32 ptrtoint (i32* @global_var_1001bac0.305 to i32), i32* @r29, align 4
  store i32 %v1_10009804, i32* %stack_var_-40, align 4
  %v0_10009814 = call i32 @function_1000a334()
  %v2_1000981c = ptrtoint i32* %stack_var_-40 to i32
  %v3_10009824 = call i32 @function_10009bd0(i32* inttoptr (i32 268548584 to i32*), i32 %v2_1000981c)
  store i32 %v3_10009824, i32* %r31.global-to-local, align 4
  %v0_10009830 = call i32 @function_1000a334()
  %v3_10009834 = icmp eq i32 %v3_10009824, 0
  br i1 %v3_10009834, label %dec_label_pc_1000983c, label %dec_label_pc_100098ec.thread

dec_label_pc_100098ec.thread:                     ; preds = %dec_label_pc_10009800
  br label %dec_label_pc_10009900

dec_label_pc_1000983c:                            ; preds = %dec_label_pc_10009800
  %v3_10009840 = load i32, i32* @global_var_1001ba44.308, align 4
  store i32 %v3_10009840, i32* %r31.global-to-local, align 4
  %v3_10009844 = load i32, i32* %stack_var_-40, align 4
  %v2_10009848 = icmp ult i32 %v3_10009844, %v3_10009840
  br i1 %v2_10009848, label %dec_label_pc_10009860, label %dec_label_pc_10009850

dec_label_pc_10009850:                            ; preds = %dec_label_pc_1000983c
  %v1_10009854 = sub i32 0, %v3_10009840
  %v2_10009850 = add i32 %v3_10009840, -1
  %v1_10009858 = add i32 %v2_10009850, %v3_10009844
  %v2_1000985c = and i32 %v1_10009858, %v1_10009854
  store i32 %v2_1000985c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009860

dec_label_pc_10009860:                            ; preds = %dec_label_pc_1000983c, %dec_label_pc_10009850
  %v0_1000986c = call i32 @function_1000a334()
  %v0_10009870 = load i32, i32* %r31.global-to-local, align 4
  store i32 268474488, i32* @lr, align 4
  %v1_10009874 = call i32 @function_1000ab54(i32 %v0_10009870)
  %v3_10009878 = icmp eq i32 %v1_10009874, -1
  br i1 %v3_10009878, label %dec_label_pc_10009898, label %dec_label_pc_10009880

dec_label_pc_10009880:                            ; preds = %dec_label_pc_10009860
  %v1_10009880 = add i32 %v1_10009874, 3
  %v1_10009884 = call i32 @__asm_rlwinm(i32 %v1_10009880, i32 0, i32 0, i32 29)
  store i32 %v1_10009884, i32* @r30, align 4
  %v4_10009888 = icmp eq i32 %v1_10009884, %v1_10009874
  br i1 %v4_10009888, label %dec_label_pc_10009898, label %dec_label_pc_10009890

dec_label_pc_10009890:                            ; preds = %dec_label_pc_10009880
  %v2_10009890 = sub i32 %v1_10009884, %v1_10009874
  store i32 268474520, i32* @lr, align 4
  %v1_10009894 = call i32 @function_1000ab54(i32 %v2_10009890)
  br label %dec_label_pc_10009898

dec_label_pc_10009898:                            ; preds = %dec_label_pc_10009880, %dec_label_pc_10009860, %dec_label_pc_10009890
  %v0_100098a0 = call i32 @function_1000a334()
  %v0_100098a4 = load i32, i32* @r30, align 4
  %v3_100098a4 = icmp eq i32 %v0_100098a4, -1
  br i1 %v3_100098a4, label %dec_label_pc_10009908, label %dec_label_pc_100098ec

dec_label_pc_100098ec:                            ; preds = %dec_label_pc_10009898
  store i32 ptrtoint (i32* @global_var_1001bac0.305 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001b9e8 to i32), i32* @r29, align 4
  %v0_100098c0 = call i32 @function_1000a334()
  %v0_100098c4 = load i32, i32* @r31, align 4
  %v0_100098c8 = load i32, i32* @r30, align 4
  %v0_100098cc = load i32, i32* @r29, align 4
  store i32 268474580, i32* @lr, align 4
  %v3_100098d0 = inttoptr i32 %v0_100098cc to i32*
  %v4_100098d0 = call i32 @function_10009d54(i32* %v3_100098d0, i32 %v0_100098c8, i32 %v0_100098c4)
  %v0_100098d4 = load i32, i32* @r29, align 4
  %v2_100098dc = inttoptr i32 %v0_100098d4 to i32*
  %v3_100098dc = call i32 @function_10009bd0(i32* %v2_100098dc, i32 %v2_1000981c)
  store i32 %v3_100098dc, i32* %r31.global-to-local, align 4
  %v0_100098e8 = call i32 @function_1000a334()
  %v3_100098ec = icmp eq i32 %v3_100098dc, 0
  br i1 %v3_100098ec, label %dec_label_pc_10009900.thread, label %dec_label_pc_10009900

dec_label_pc_10009900.thread:                     ; preds = %dec_label_pc_100098ec
  br label %dec_label_pc_10009908

dec_label_pc_10009900:                            ; preds = %dec_label_pc_100098ec, %dec_label_pc_100098ec.thread
  %v0_10009900.pr6 = phi i32 [ %v3_10009824, %dec_label_pc_100098ec.thread ], [ %v3_100098dc, %dec_label_pc_100098ec ]
  %v3_100098f4 = load i32, i32* %stack_var_-40, align 4
  %v2_100098f8 = inttoptr i32 %v0_10009900.pr6 to i32*
  store i32 %v3_100098f4, i32* %v2_100098f8, align 4
  %v0_100098fc = load i32, i32* %r31.global-to-local, align 4
  %v1_100098fc = add i32 %v0_100098fc, 4
  store i32 %v1_100098fc, i32* @r31, align 4
  %v3_10009900 = icmp eq i32 %v1_100098fc, 0
  br i1 %v3_10009900, label %dec_label_pc_10009908, label %dec_label_pc_10009918

dec_label_pc_10009908:                            ; preds = %dec_label_pc_10009900.thread, %dec_label_pc_10009900, %dec_label_pc_10009898, %dec_label_pc_100097f4
  %v0_10009908 = call i32 @function_10008fa0()
  %v2_10009910 = inttoptr i32 %v0_10009908 to i32*
  store i32 12, i32* %v2_10009910, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10009918

dec_label_pc_10009918:                            ; preds = %dec_label_pc_10009900, %dec_label_pc_10009908
  %v0_1000991c = phi i32 [ %v1_100098fc, %dec_label_pc_10009900 ], [ 0, %dec_label_pc_10009908 ]
  ret i32 %v0_1000991c

; uselistorder directives
  uselistorder i32 %v1_100098fc, { 1, 0, 2 }
  uselistorder i32 %v1_10009884, { 1, 0, 2 }
  uselistorder i32 %v1_10009874, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009840, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009824, { 1, 0, 2 }
  uselistorder i32 %v0_100097d8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_10009918, { 1, 0 }
  uselistorder label %dec_label_pc_10009908, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10009898, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009860, { 1, 0 }
  uselistorder label %dec_label_pc_10009800, { 1, 0 }
}

define i32 @function_10009930(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009930:
  %v3_10009930 = icmp eq i32 %arg1, 0
  %v2_10009940 = mul i32 %arg2, %arg1
  store i32 %v2_10009940, i32* @r31, align 4
  br i1 %v3_10009930, label %dec_label_pc_1000996c, label %dec_label_pc_1000994c

dec_label_pc_1000994c:                            ; preds = %dec_label_pc_10009930
  %v2_1000994c = udiv i32 %v2_10009940, %arg1
  store i32 0, i32* @r30, align 4
  %v4_10009954 = icmp eq i32 %v2_1000994c, %arg2
  br i1 %v4_10009954, label %dec_label_pc_1000996c, label %dec_label_pc_1000995c

dec_label_pc_1000995c:                            ; preds = %dec_label_pc_1000994c
  %v0_1000995c = call i32 @function_10008fa0()
  %v2_10009964 = inttoptr i32 %v0_1000995c to i32*
  store i32 12, i32* %v2_10009964, align 4
  br label %dec_label_pc_10009988

dec_label_pc_1000996c:                            ; preds = %dec_label_pc_1000994c, %dec_label_pc_10009930
  store i32 %v2_10009940, i32* @r3, align 4
  store i32 268474740, i32* @lr, align 4
  %v0_10009970 = call i32 @function_100097d8()
  %v0_10009974 = load i32, i32* @r31, align 4
  store i32 %v0_10009970, i32* @r30, align 4
  %v3_10009978 = icmp eq i32 %v0_10009970, 0
  br i1 %v3_10009978, label %dec_label_pc_10009988, label %dec_label_pc_10009984

dec_label_pc_10009984:                            ; preds = %dec_label_pc_1000996c
  store i32 268474760, i32* @lr, align 4
  %v3_10009984 = call i32 @function_10009088(i32 0, i32 %v0_10009974, i32 %v0_10009974)
  br label %dec_label_pc_10009988

dec_label_pc_10009988:                            ; preds = %dec_label_pc_1000996c, %dec_label_pc_1000995c, %dec_label_pc_10009984
  %v0_1000998c = load i32, i32* @r30, align 4
  ret i32 %v0_1000998c

; uselistorder directives
  uselistorder i32 %v0_10009974, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009988, { 2, 0, 1 }
}

define i32 @function_100099a0() local_unnamed_addr {
dec_label_pc_100099a0:
  %v0_100099a0 = load i32, i32* @r3, align 4
  %v3_100099a0 = icmp eq i32 %v0_100099a0, 0
  br i1 %v3_100099a0, label %dec_label_pc_10009a8c, label %dec_label_pc_100099b8

dec_label_pc_100099b8:                            ; preds = %dec_label_pc_100099a0
  %v1_100099bc = add i32 %v0_100099a0, -4
  %v2_100099bc = inttoptr i32 %v1_100099bc to i32*
  %v3_100099bc = load i32, i32* %v2_100099bc, align 4
  store i32 %v3_100099bc, i32* @r28, align 4
  %v0_100099d0 = call i32 @function_1000a334()
  %v0_100099d8 = load i32, i32* @r28, align 4
  store i32 268474852, i32* @lr, align 4
  %v4_100099e0 = call i32 @function_10009d54(i32* nonnull @global_var_1001b9e8, i32 %v1_100099bc, i32 %v0_100099d8)
  %v3_100099e8 = load i32, i32* @global_var_1001ba44.308, align 4
  store i32 %v4_100099e0, i32* @r29, align 4
  %v1_100099f0 = inttoptr i32 %v4_100099e0 to i32*
  %v2_100099f0 = load i32, i32* %v1_100099f0, align 4
  store i32 %v2_100099f0, i32* @r27, align 4
  %v1_100099f4 = mul i32 %v3_100099e8, 8
  %v2_100099f8 = icmp ult i32 %v2_100099f0, %v1_100099f4
  br i1 %v2_100099f8, label %dec_label_pc_10009a2c, label %dec_label_pc_10009a00

dec_label_pc_10009a00:                            ; preds = %dec_label_pc_100099b8
  store i32 ptrtoint (i32* @global_var_1001bc78.309 to i32), i32* @r28, align 4
  %v0_10009a10 = call i32 @function_1000a334()
  store i32 268474908, i32* @lr, align 4
  %v1_10009a18 = call i32 @function_1000ab54(i32 0)
  %v0_10009a1c = load i32, i32* @r31, align 4
  %v4_10009a1c = icmp eq i32 %v0_10009a1c, %v1_10009a18
  br i1 %v4_10009a1c, label %dec_label_pc_10009a34, label %dec_label_pc_10009a24

dec_label_pc_10009a24:                            ; preds = %dec_label_pc_10009a00
  %v0_10009a28 = call i32 @function_1000a334()
  br label %dec_label_pc_10009a2c

dec_label_pc_10009a2c:                            ; preds = %dec_label_pc_100099b8, %dec_label_pc_10009a24
  br label %dec_label_pc_10009a88

dec_label_pc_10009a34:                            ; preds = %dec_label_pc_10009a00
  %v0_10009a34 = load i32, i32* @r29, align 4
  %v1_10009a34 = add i32 %v0_10009a34, 4
  %v2_10009a34 = inttoptr i32 %v1_10009a34 to i32*
  %v3_10009a34 = load i32, i32* %v2_10009a34, align 4
  %v3_10009a38 = icmp eq i32 %v3_10009a34, 0
  br i1 %v3_10009a38, label %dec_label_pc_10009a48, label %dec_label_pc_10009a40

dec_label_pc_10009a40:                            ; preds = %dec_label_pc_10009a34
  %v1_10009a40 = add i32 %v0_10009a34, 8
  %v2_10009a40 = inttoptr i32 %v1_10009a40 to i32*
  %v3_10009a40 = load i32, i32* %v2_10009a40, align 4
  %v2_10009a44 = add i32 %v3_10009a34, 8
  %v3_10009a44 = inttoptr i32 %v2_10009a44 to i32*
  store i32 %v3_10009a40, i32* %v3_10009a44, align 4
  %v0_10009a48.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009a48

dec_label_pc_10009a48:                            ; preds = %dec_label_pc_10009a34, %dec_label_pc_10009a40
  %v0_10009a48 = phi i32 [ %v0_10009a34, %dec_label_pc_10009a34 ], [ %v0_10009a48.pre, %dec_label_pc_10009a40 ]
  %v1_10009a48 = add i32 %v0_10009a48, 8
  %v2_10009a48 = inttoptr i32 %v1_10009a48 to i32*
  %v3_10009a48 = load i32, i32* %v2_10009a48, align 4
  %v1_10009a4c = add i32 %v0_10009a48, 4
  %v2_10009a4c = inttoptr i32 %v1_10009a4c to i32*
  %v3_10009a4c = load i32, i32* %v2_10009a4c, align 4
  %v3_10009a50 = icmp eq i32 %v3_10009a48, 0
  br i1 %v3_10009a50, label %dec_label_pc_10009a60, label %dec_label_pc_10009a58

dec_label_pc_10009a58:                            ; preds = %dec_label_pc_10009a48
  %v2_10009a58 = add i32 %v3_10009a48, 4
  %v3_10009a58 = inttoptr i32 %v2_10009a58 to i32*
  store i32 %v3_10009a4c, i32* %v3_10009a58, align 4
  br label %dec_label_pc_10009a64

dec_label_pc_10009a60:                            ; preds = %dec_label_pc_10009a48
  store i32 %v3_10009a4c, i32* @global_var_1001b9e8, align 4
  br label %dec_label_pc_10009a64

dec_label_pc_10009a64:                            ; preds = %dec_label_pc_10009a58, %dec_label_pc_10009a60
  %v0_10009a6c = call i32 @function_1000a334()
  %v0_10009a70 = load i32, i32* @r27, align 4
  %v1_10009a70 = load i32, i32* @r29, align 4
  %v0_10009a78 = load i32, i32* @r31, align 4
  %v2_10009a70 = sub i32 12, %v0_10009a70
  %v1_10009a74 = add i32 %v2_10009a70, %v1_10009a70
  %v2_10009a78 = sub i32 %v1_10009a74, %v0_10009a78
  store i32 268475008, i32* @lr, align 4
  %v1_10009a7c = call i32 @function_1000ab54(i32 %v2_10009a78)
  br label %dec_label_pc_10009a88

dec_label_pc_10009a88:                            ; preds = %dec_label_pc_10009a2c, %dec_label_pc_10009a64
  %v0_10009a88 = call i32 @function_1000a334()
  br label %dec_label_pc_10009a8c

dec_label_pc_10009a8c:                            ; preds = %dec_label_pc_100099a0, %dec_label_pc_10009a88
  %.0 = phi i32 [ undef, %dec_label_pc_100099a0 ], [ %v0_10009a88, %dec_label_pc_10009a88 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10009a48, { 1, 0 }
  uselistorder i32 (i32)* @function_1000ab54, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009a8c, { 1, 0 }
  uselistorder label %dec_label_pc_10009a88, { 1, 0 }
  uselistorder label %dec_label_pc_10009a64, { 1, 0 }
  uselistorder label %dec_label_pc_10009a48, { 1, 0 }
  uselistorder label %dec_label_pc_10009a2c, { 1, 0 }
}

define i32 @function_10009aa0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009aa0:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_10009aa0 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_10009aa0, label %dec_label_pc_10009abc, label %dec_label_pc_10009ac8

dec_label_pc_10009abc:                            ; preds = %dec_label_pc_10009aa0
  store i32 ptrtoint ([3 x i8]* @global_var_10009ac0.313 to i32), i32* @lr, align 4
  %v0_10009abc = call i32 @function_100099a0()
  br label %dec_label_pc_10009ad4

dec_label_pc_10009ac8:                            ; preds = %dec_label_pc_10009aa0
  %v3_10009ac8 = icmp eq i32 %arg1, 0
  br i1 %v3_10009ac8, label %dec_label_pc_10009ad4, label %dec_label_pc_10009ae0

dec_label_pc_10009ad4:                            ; preds = %dec_label_pc_10009ac8, %dec_label_pc_10009abc
  %storemerge = phi i32 [ 0, %dec_label_pc_10009abc ], [ %arg2, %dec_label_pc_10009ac8 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268475096, i32* @lr, align 4
  %v0_10009ad4 = call i32 @function_100097d8()
  store i32 %v0_10009ad4, i32* @r28, align 4
  br label %dec_label_pc_10009bb8

dec_label_pc_10009ae0:                            ; preds = %dec_label_pc_10009ac8
  %v1_10009ae0 = add i32 %arg2, 7
  %v1_10009ae4 = add i32 %arg1, -4
  store i32 %v1_10009ae4, i32* %r27.global-to-local, align 4
  %v1_10009ae8 = call i32 @__asm_rlwinm(i32 %v1_10009ae0, i32 0, i32 0, i32 29)
  store i32 %v1_10009ae8, i32* @r31, align 4
  %v2_10009aec = inttoptr i32 %v1_10009ae4 to i32*
  %v3_10009aec = load i32, i32* %v2_10009aec, align 4
  store i32 %v3_10009aec, i32* @r30, align 4
  %v2_10009af0 = icmp ugt i32 %v1_10009ae8, 11
  br i1 %v2_10009af0, label %dec_label_pc_10009afc, label %dec_label_pc_10009af8

dec_label_pc_10009af8:                            ; preds = %dec_label_pc_10009ae0
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_10009afc

dec_label_pc_10009afc:                            ; preds = %dec_label_pc_10009ae0, %dec_label_pc_10009af8
  %v0_10009b7c = phi i32 [ %v1_10009ae8, %dec_label_pc_10009ae0 ], [ 12, %dec_label_pc_10009af8 ]
  %v3_10009afc = icmp ugt i32 %v0_10009b7c, %v3_10009aec
  br i1 %v3_10009afc, label %dec_label_pc_10009b04, label %dec_label_pc_10009b7c

dec_label_pc_10009b04:                            ; preds = %dec_label_pc_10009afc
  %v0_10009b10 = call i32 @function_1000a334()
  %v0_10009b18 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009b18 = load i32, i32* @r30, align 4
  %v2_10009b18 = add i32 %v1_10009b18, %v0_10009b18
  %v1_10009b1c = load i32, i32* @r31, align 4
  %v2_10009b1c = sub i32 %v1_10009b1c, %v1_10009b18
  %v4_10009b24 = call i32 @function_10009c70(i32* nonnull @global_var_1001b9e8, i32 %v2_10009b18, i32 %v2_10009b1c)
  store i32 %v4_10009b24, i32* %r27.global-to-local, align 4
  %v0_10009b30 = call i32 @function_1000a334()
  %v3_10009b34 = icmp eq i32 %v4_10009b24, 0
  br i1 %v3_10009b34, label %dec_label_pc_10009b48, label %dec_label_pc_10009b3c

dec_label_pc_10009b3c:                            ; preds = %dec_label_pc_10009b04
  %v0_10009b3c = load i32, i32* @r30, align 4
  %v2_10009b3c = add i32 %v0_10009b3c, %v4_10009b24
  %v1_10009b40 = load i32, i32* @r28, align 4
  %v2_10009b40 = add i32 %v1_10009b40, -4
  %v3_10009b40 = inttoptr i32 %v2_10009b40 to i32*
  store i32 %v2_10009b3c, i32* %v3_10009b40, align 4
  br label %dec_label_pc_10009bb8

dec_label_pc_10009b48:                            ; preds = %dec_label_pc_10009b04
  %v0_10009b48 = load i32, i32* @r31, align 4
  %v1_10009b48 = add i32 %v0_10009b48, -4
  store i32 %v1_10009b48, i32* @r3, align 4
  store i32 268475216, i32* @lr, align 4
  %v0_10009b4c = call i32 @function_100097d8()
  store i32 %v0_10009b4c, i32* @r3, align 4
  store i32 %v0_10009b4c, i32* @r31, align 4
  %v3_10009b50 = icmp eq i32 %v0_10009b4c, 0
  br i1 %v3_10009b50, label %dec_label_pc_10009b58, label %dec_label_pc_10009b60

dec_label_pc_10009b58:                            ; preds = %dec_label_pc_10009b48
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009bb8

dec_label_pc_10009b60:                            ; preds = %dec_label_pc_10009b48
  %v0_10009b60 = load i32, i32* @r28, align 4
  store i32 %v0_10009b60, i32* @r4, align 4
  %v0_10009b64 = load i32, i32* @r30, align 4
  %v1_10009b64 = add i32 %v0_10009b64, -4
  store i32 %v1_10009b64, i32* @r5, align 4
  store i32 268475244, i32* @lr, align 4
  %v0_10009b68 = call i32 @function_1000ad88()
  %v0_10009b6c = load i32, i32* @r28, align 4
  store i32 %v0_10009b6c, i32* @r3, align 4
  store i32 268475252, i32* @lr, align 4
  %v0_10009b70 = call i32 @function_100099a0()
  %v0_10009b74 = load i32, i32* @r31, align 4
  store i32 %v0_10009b74, i32* @r28, align 4
  br label %dec_label_pc_10009bb8

dec_label_pc_10009b7c:                            ; preds = %dec_label_pc_10009afc
  %v1_10009b7c = add i32 %v0_10009b7c, 28
  %v3_10009b80 = icmp ugt i32 %v1_10009b7c, %v3_10009aec
  br i1 %v3_10009b80, label %dec_label_pc_10009bb8, label %dec_label_pc_10009b88

dec_label_pc_10009b88:                            ; preds = %dec_label_pc_10009b7c
  store i32 ptrtoint (i32* @global_var_1001bac0.305 to i32), i32* @r29, align 4
  %v0_10009b94 = call i32 @function_1000a334()
  %v0_10009b9c = load i32, i32* %r27.global-to-local, align 4
  %v1_10009b9c = load i32, i32* @r31, align 4
  %v2_10009b9c = add i32 %v1_10009b9c, %v0_10009b9c
  %v1_10009ba0 = load i32, i32* @r30, align 4
  %v2_10009ba0 = sub i32 %v1_10009ba0, %v1_10009b9c
  store i32 268475308, i32* @lr, align 4
  %v4_10009ba8 = call i32 @function_10009d54(i32* nonnull @global_var_1001b9e8, i32 %v2_10009b9c, i32 %v2_10009ba0)
  %v0_10009bb0 = call i32 @function_1000a334()
  %v0_10009bb4 = load i32, i32* @r31, align 4
  %v1_10009bb4 = load i32, i32* @r28, align 4
  %v2_10009bb4 = add i32 %v1_10009bb4, -4
  %v3_10009bb4 = inttoptr i32 %v2_10009bb4 to i32*
  store i32 %v0_10009bb4, i32* %v3_10009bb4, align 4
  br label %dec_label_pc_10009bb8

dec_label_pc_10009bb8:                            ; preds = %dec_label_pc_10009b7c, %dec_label_pc_10009b60, %dec_label_pc_10009b58, %dec_label_pc_10009b3c, %dec_label_pc_10009ad4, %dec_label_pc_10009b88
  %v0_10009bbc = load i32, i32* @r28, align 4
  ret i32 %v0_10009bbc

; uselistorder directives
  uselistorder i32 %v1_10009b9c, { 1, 0 }
  uselistorder i32 %v4_10009b24, { 1, 0, 2 }
  uselistorder i32 %v1_10009b18, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001b9e8, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_100097d8, { 2, 1, 0, 7, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 4, 3, 8, 6, 5 }
  uselistorder i32 ()* @function_100099a0, { 4, 3, 7, 6, 5, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10009bb8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10009afc, { 1, 0 }
}

define i32 @function_10009bd0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009bd0:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10009bd0 = inttoptr i32 %arg2 to i32*
  %v2_10009bd0 = load i32, i32* %v1_10009bd0, align 4
  %v1_10009bd4 = add i32 %v2_10009bd0, 3
  store i32 %v1_10009bd4, i32* %r9.global-to-local, align 4
  %v1_10009bd8 = call i32 @__asm_rlwinm(i32 %v1_10009bd4, i32 0, i32 0, i32 29)
  %v2_10009bdc = icmp ugt i32 %v1_10009bd8, 11
  br i1 %v2_10009bdc, label %dec_label_pc_10009c60.preheader, label %dec_label_pc_10009be4

dec_label_pc_10009be4:                            ; preds = %dec_label_pc_10009bd0
  br label %dec_label_pc_10009c60.preheader

dec_label_pc_10009c60.preheader:                  ; preds = %dec_label_pc_10009bd0, %dec_label_pc_10009be4
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10009be4 ], [ %v1_10009bd8, %dec_label_pc_10009bd0 ]
  %v0_10009c44 = phi i32 [ 12, %dec_label_pc_10009be4 ], [ %v1_10009bd8, %dec_label_pc_10009bd0 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_10009c605 = icmp eq i32 %storemerge2, 0
  br i1 %v3_10009c605, label %dec_label_pc_10009c68, label %dec_label_pc_10009bf0

dec_label_pc_10009bf0:                            ; preds = %dec_label_pc_10009c60.preheader, %dec_label_pc_10009c5c
  %v0_10009c5c = phi i32 [ %storemerge, %dec_label_pc_10009c5c ], [ %storemerge2, %dec_label_pc_10009c60.preheader ]
  %v1_10009bf0 = inttoptr i32 %v0_10009c5c to i32*
  %v2_10009bf0 = load i32, i32* %v1_10009bf0, align 4
  store i32 %v2_10009bf0, i32* %r10.global-to-local, align 4
  %v2_10009bf4 = icmp ult i32 %v2_10009bf0, %v0_10009c44
  br i1 %v2_10009bf4, label %dec_label_pc_10009c5c, label %dec_label_pc_10009bfc

dec_label_pc_10009bfc:                            ; preds = %dec_label_pc_10009bf0
  %v1_10009bfc = add i32 %v0_10009c44, 44
  %v2_10009c00 = icmp ult i32 %v2_10009bf0, %v1_10009bfc
  br i1 %v2_10009c00, label %dec_label_pc_10009c08, label %dec_label_pc_10009c44

dec_label_pc_10009c08:                            ; preds = %dec_label_pc_10009bfc
  %v1_10009c08 = add i32 %v0_10009c5c, 4
  %v2_10009c08 = inttoptr i32 %v1_10009c08 to i32*
  %v3_10009c08 = load i32, i32* %v2_10009c08, align 4
  store i32 %v3_10009c08, i32* %r11.global-to-local, align 4
  %v3_10009c0c = icmp eq i32 %v3_10009c08, 0
  br i1 %v3_10009c0c, label %dec_label_pc_10009c1c, label %dec_label_pc_10009c14

dec_label_pc_10009c14:                            ; preds = %dec_label_pc_10009c08
  %v1_10009c14 = add i32 %v0_10009c5c, 8
  %v2_10009c14 = inttoptr i32 %v1_10009c14 to i32*
  %v3_10009c14 = load i32, i32* %v2_10009c14, align 4
  %v2_10009c18 = add i32 %v3_10009c08, 8
  %v3_10009c18 = inttoptr i32 %v2_10009c18 to i32*
  store i32 %v3_10009c14, i32* %v3_10009c18, align 4
  %v0_10009c1c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10009c38.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009c1c

dec_label_pc_10009c1c:                            ; preds = %dec_label_pc_10009c08, %dec_label_pc_10009c14
  %v0_10009c38 = phi i32 [ %v2_10009bf0, %dec_label_pc_10009c08 ], [ %v0_10009c38.pre, %dec_label_pc_10009c14 ]
  %v0_10009c1c = phi i32 [ %v0_10009c5c, %dec_label_pc_10009c08 ], [ %v0_10009c1c.pre, %dec_label_pc_10009c14 ]
  %v1_10009c1c = add i32 %v0_10009c1c, 8
  %v2_10009c1c = inttoptr i32 %v1_10009c1c to i32*
  %v3_10009c1c = load i32, i32* %v2_10009c1c, align 4
  %v1_10009c20 = add i32 %v0_10009c1c, 4
  %v2_10009c20 = inttoptr i32 %v1_10009c20 to i32*
  %v3_10009c20 = load i32, i32* %v2_10009c20, align 4
  %v3_10009c24 = icmp eq i32 %v3_10009c1c, 0
  store i32 %v0_10009c38, i32* %r11.global-to-local, align 4
  br i1 %v3_10009c24, label %dec_label_pc_10009c38, label %dec_label_pc_10009c2c

dec_label_pc_10009c2c:                            ; preds = %dec_label_pc_10009c1c
  %v2_10009c30 = add i32 %v3_10009c1c, 4
  %v3_10009c30 = inttoptr i32 %v2_10009c30 to i32*
  store i32 %v3_10009c20, i32* %v3_10009c30, align 4
  br label %dec_label_pc_10009c4c

dec_label_pc_10009c38:                            ; preds = %dec_label_pc_10009c1c
  store i32 %v3_10009c20, i32* %arg1, align 4
  br label %dec_label_pc_10009c4c

dec_label_pc_10009c44:                            ; preds = %dec_label_pc_10009bfc
  %v2_10009c44 = sub i32 %v2_10009bf0, %v0_10009c44
  store i32 %v2_10009c44, i32* %v1_10009bf0, align 4
  br label %dec_label_pc_10009c4c

dec_label_pc_10009c4c:                            ; preds = %dec_label_pc_10009c38, %dec_label_pc_10009c2c, %dec_label_pc_10009c44
  %v0_10009c4c = load i32, i32* %r10.global-to-local, align 4
  %v1_10009c4c = load i32, i32* %r9.global-to-local, align 4
  %v2_10009c4c = sub i32 %v1_10009c4c, %v0_10009c4c
  store i32 %v2_10009c4c, i32* %r9.global-to-local, align 4
  %v0_10009c50 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009c50, i32* %v1_10009bd0, align 4
  %v0_10009c54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009c54 = add i32 %v0_10009c54, 12
  ret i32 %v1_10009c54

dec_label_pc_10009c5c:                            ; preds = %dec_label_pc_10009bf0
  %v1_10009c5c = add i32 %v0_10009c5c, 4
  %storemerge.in = inttoptr i32 %v1_10009c5c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10009c60 = icmp eq i32 %storemerge, 0
  br i1 %v3_10009c60, label %dec_label_pc_10009c60.dec_label_pc_10009c68_crit_edge, label %dec_label_pc_10009bf0

dec_label_pc_10009c60.dec_label_pc_10009c68_crit_edge: ; preds = %dec_label_pc_10009c5c
  br label %dec_label_pc_10009c68

dec_label_pc_10009c68:                            ; preds = %dec_label_pc_10009c60.dec_label_pc_10009c68_crit_edge, %dec_label_pc_10009c60.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10009c1c, { 1, 0 }
  uselistorder i32 %v2_10009bf0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10009c5c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10009c44, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10009c4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10009bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10009c60.preheader, { 1, 0 }
}

define i32 @function_10009c70(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c70:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10009c70 = load i32, i32* %arg1, align 4
  store i32 %v2_10009c70, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_10009c78 = add i32 %arg3, 3
  %v3_10009cfc3 = icmp eq i32 %v2_10009c70, 0
  br i1 %v3_10009cfc3, label %dec_label_pc_10009d04, label %dec_label_pc_10009c80

dec_label_pc_10009c80:                            ; preds = %dec_label_pc_10009c70, %dec_label_pc_10009cf8
  %v0_10009cf8 = phi i32 [ %v3_10009cf8, %dec_label_pc_10009cf8 ], [ %v2_10009c70, %dec_label_pc_10009c70 ]
  %v1_10009c80 = inttoptr i32 %v0_10009cf8 to i32*
  %v2_10009c80 = load i32, i32* %v1_10009c80, align 4
  %v2_10009c84 = sub i32 %v0_10009cf8, %v2_10009c80
  %v1_10009c88 = add i32 %v2_10009c84, 12
  %v3_10009c8c = icmp ugt i32 %v1_10009c88, %arg2
  br i1 %v3_10009c8c, label %dec_label_pc_10009cf8, label %dec_label_pc_10009c94

dec_label_pc_10009c94:                            ; preds = %dec_label_pc_10009c80
  %v4_10009c8c = icmp eq i32 %v1_10009c88, %arg2
  br i1 %v4_10009c8c, label %dec_label_pc_10009c9c, label %dec_label_pc_10009d04

dec_label_pc_10009c9c:                            ; preds = %dec_label_pc_10009c94
  %v1_10009c9c = call i32 @__asm_rlwinm(i32 %v1_10009c78, i32 0, i32 0, i32 29)
  %v2_10009ca0 = icmp ult i32 %v2_10009c80, %v1_10009c9c
  br i1 %v2_10009ca0, label %dec_label_pc_10009d04, label %dec_label_pc_10009ca8

dec_label_pc_10009ca8:                            ; preds = %dec_label_pc_10009c9c
  %v1_10009ca8 = add i32 %v1_10009c9c, 44
  %v2_10009cac = icmp ult i32 %v2_10009c80, %v1_10009ca8
  br i1 %v2_10009cac, label %dec_label_pc_10009cb4, label %dec_label_pc_10009ce8

dec_label_pc_10009cb4:                            ; preds = %dec_label_pc_10009ca8
  %v0_10009cb4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009cb4 = add i32 %v0_10009cb4, 4
  %v2_10009cb4 = inttoptr i32 %v1_10009cb4 to i32*
  %v3_10009cb4 = load i32, i32* %v2_10009cb4, align 4
  %v3_10009cb8 = icmp eq i32 %v3_10009cb4, 0
  br i1 %v3_10009cb8, label %dec_label_pc_10009cc8, label %dec_label_pc_10009cc0

dec_label_pc_10009cc0:                            ; preds = %dec_label_pc_10009cb4
  %v1_10009cc0 = add i32 %v0_10009cb4, 8
  %v2_10009cc0 = inttoptr i32 %v1_10009cc0 to i32*
  %v3_10009cc0 = load i32, i32* %v2_10009cc0, align 4
  %v2_10009cc4 = add i32 %v3_10009cb4, 8
  %v3_10009cc4 = inttoptr i32 %v2_10009cc4 to i32*
  store i32 %v3_10009cc0, i32* %v3_10009cc4, align 4
  %v0_10009cc8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009cc8

dec_label_pc_10009cc8:                            ; preds = %dec_label_pc_10009cb4, %dec_label_pc_10009cc0
  %v0_10009cc8 = phi i32 [ %v0_10009cb4, %dec_label_pc_10009cb4 ], [ %v0_10009cc8.pre, %dec_label_pc_10009cc0 ]
  %v1_10009cc8 = add i32 %v0_10009cc8, 8
  %v2_10009cc8 = inttoptr i32 %v1_10009cc8 to i32*
  %v3_10009cc8 = load i32, i32* %v2_10009cc8, align 4
  %v1_10009ccc = add i32 %v0_10009cc8, 4
  %v2_10009ccc = inttoptr i32 %v1_10009ccc to i32*
  %v3_10009ccc = load i32, i32* %v2_10009ccc, align 4
  %v3_10009cd0 = icmp eq i32 %v3_10009cc8, 0
  br i1 %v3_10009cd0, label %dec_label_pc_10009ce0, label %dec_label_pc_10009cd8

dec_label_pc_10009cd8:                            ; preds = %dec_label_pc_10009cc8
  %v2_10009cd8 = add i32 %v3_10009cc8, 4
  %v3_10009cd8 = inttoptr i32 %v2_10009cd8 to i32*
  store i32 %v3_10009ccc, i32* %v3_10009cd8, align 4
  ret i32 %v2_10009c80

dec_label_pc_10009ce0:                            ; preds = %dec_label_pc_10009cc8
  %v1_10009ce0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ce0 = inttoptr i32 %v1_10009ce0 to i32*
  store i32 %v3_10009ccc, i32* %v2_10009ce0, align 4
  ret i32 %v2_10009c80

dec_label_pc_10009ce8:                            ; preds = %dec_label_pc_10009ca8
  %v2_10009ce8 = sub i32 %v2_10009c80, %v1_10009c9c
  %v1_10009cf0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009cf0 = inttoptr i32 %v1_10009cf0 to i32*
  store i32 %v2_10009ce8, i32* %v2_10009cf0, align 4
  ret i32 %v1_10009c9c

dec_label_pc_10009cf8:                            ; preds = %dec_label_pc_10009c80
  %v1_10009cf8 = add i32 %v0_10009cf8, 4
  %v2_10009cf8 = inttoptr i32 %v1_10009cf8 to i32*
  %v3_10009cf8 = load i32, i32* %v2_10009cf8, align 4
  store i32 %v3_10009cf8, i32* %r11.global-to-local, align 4
  %v3_10009cfc = icmp eq i32 %v3_10009cf8, 0
  br i1 %v3_10009cfc, label %dec_label_pc_10009cfc.dec_label_pc_10009d04.loopexit_crit_edge, label %dec_label_pc_10009c80

dec_label_pc_10009cfc.dec_label_pc_10009d04.loopexit_crit_edge: ; preds = %dec_label_pc_10009cf8
  br label %dec_label_pc_10009d04

dec_label_pc_10009d04:                            ; preds = %dec_label_pc_10009c70, %dec_label_pc_10009cfc.dec_label_pc_10009d04.loopexit_crit_edge, %dec_label_pc_10009c94, %dec_label_pc_10009c9c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10009cf8, { 1, 2, 0 }
  uselistorder i32 %v0_10009cc8, { 1, 0 }
  uselistorder i32 %v1_10009c9c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10009c80, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_10009cf8, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10009d04, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10009cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10009c80, { 1, 0 }
}

define i32 @function_10009d0c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009d0c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10009d0c = icmp eq i32 %arg3, 0
  %v2_10009d10 = add i32 %arg2, 4
  %v3_10009d10 = inttoptr i32 %v2_10009d10 to i32*
  store i32 %arg4, i32* %v3_10009d10, align 4
  %v2_10009d14 = add i32 %arg2, 8
  %v3_10009d14 = inttoptr i32 %v2_10009d14 to i32*
  store i32 %arg3, i32* %v3_10009d14, align 4
  br i1 %v3_10009d0c, label %dec_label_pc_10009d24, label %dec_label_pc_10009d1c

dec_label_pc_10009d1c:                            ; preds = %dec_label_pc_10009d0c
  %v2_10009d1c = add i32 %arg3, 4
  %v3_10009d1c = inttoptr i32 %v2_10009d1c to i32*
  store i32 %arg2, i32* %v3_10009d1c, align 4
  br label %dec_label_pc_10009d28

dec_label_pc_10009d24:                            ; preds = %dec_label_pc_10009d0c
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10009d28

dec_label_pc_10009d28:                            ; preds = %dec_label_pc_10009d1c, %dec_label_pc_10009d24
  %v3_10009d28 = icmp eq i32 %arg4, 0
  %v0_10009d2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009d28, i32 %v0_10009d2c)
  %v2_10009d30 = add i32 %arg4, 8
  %v3_10009d30 = inttoptr i32 %v2_10009d30 to i32*
  store i32 %arg2, i32* %v3_10009d30, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10009d28, { 1, 0 }
}

define i32 @function_10009d38(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009d38:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10009d38 = icmp eq i32 %arg3, 0
  br i1 %v3_10009d38, label %dec_label_pc_10009d48, label %dec_label_pc_10009d40

dec_label_pc_10009d40:                            ; preds = %dec_label_pc_10009d38
  %v2_10009d40 = add i32 %arg3, 4
  %v3_10009d40 = inttoptr i32 %v2_10009d40 to i32*
  store i32 %arg2, i32* %v3_10009d40, align 4
  br label %dec_label_pc_10009d4c

dec_label_pc_10009d48:                            ; preds = %dec_label_pc_10009d38
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10009d4c

dec_label_pc_10009d4c:                            ; preds = %dec_label_pc_10009d40, %dec_label_pc_10009d48
  %v2_10009d4c = add i32 %arg2, 8
  %v3_10009d4c = inttoptr i32 %v2_10009d4c to i32*
  store i32 %arg3, i32* %v3_10009d4c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009d4c, { 1, 0 }
}

define i32 @function_10009d54(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009d54:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10009d6c = load i32, i32* %arg1, align 4
  store i32 %v2_10009d6c, i32* @r31, align 4
  %v2_10009d70 = add i32 %arg3, %arg2
  store i32 %v2_10009d70, i32* %r3.global-to-local, align 4
  %v3_10009d847 = icmp eq i32 %v2_10009d6c, 0
  %v1_10009d888 = add i32 %v2_10009d6c, 12
  %tmp69 = icmp uge i32 %v1_10009d888, %arg2
  %or.cond10 = or i1 %v3_10009d847, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10009d94, label %dec_label_pc_10009d7c

dec_label_pc_10009d7c:                            ; preds = %dec_label_pc_10009d54, %dec_label_pc_10009d7c
  %v0_10009ddc11 = phi i32 [ %v3_10009d80, %dec_label_pc_10009d7c ], [ %v2_10009d6c, %dec_label_pc_10009d54 ]
  store i32 %v0_10009ddc11, i32* %r11.global-to-local, align 4
  %v1_10009d80 = add i32 %v0_10009ddc11, 4
  %v2_10009d80 = inttoptr i32 %v1_10009d80 to i32*
  %v3_10009d80 = load i32, i32* %v2_10009d80, align 4
  store i32 %v3_10009d80, i32* @r31, align 4
  %v3_10009d84 = icmp eq i32 %v3_10009d80, 0
  %v1_10009d88 = add i32 %v3_10009d80, 12
  %tmp6 = icmp uge i32 %v1_10009d88, %arg2
  %or.cond = or i1 %v3_10009d84, %tmp6
  br i1 %or.cond, label %dec_label_pc_10009d94, label %dec_label_pc_10009d7c

dec_label_pc_10009d94:                            ; preds = %dec_label_pc_10009d7c, %dec_label_pc_10009d54
  %v0_10009dd0.lcssa = phi i32 [ 0, %dec_label_pc_10009d54 ], [ %v0_10009ddc11, %dec_label_pc_10009d7c ]
  %v0_10009ddc.lcssa = phi i32 [ %v2_10009d6c, %dec_label_pc_10009d54 ], [ %v3_10009d80, %dec_label_pc_10009d7c ]
  %v3_10009d84.lcssa = phi i1 [ %v3_10009d847, %dec_label_pc_10009d54 ], [ %v3_10009d84, %dec_label_pc_10009d7c ]
  br i1 %v3_10009d84.lcssa, label %dec_label_pc_10009e4c, label %dec_label_pc_10009d9c

dec_label_pc_10009d9c:                            ; preds = %dec_label_pc_10009d94
  %v1_10009d9c = inttoptr i32 %v0_10009ddc.lcssa to i32*
  %v2_10009d9c = load i32, i32* %v1_10009d9c, align 4
  %v2_10009da0 = sub i32 %v0_10009ddc.lcssa, %v2_10009d9c
  %v1_10009da4 = add i32 %v2_10009da0, 12
  %v3_10009da8 = icmp ugt i32 %v1_10009da4, %v2_10009d70
  br i1 %v3_10009da8, label %dec_label_pc_10009e4c, label %dec_label_pc_10009db0

dec_label_pc_10009db0:                            ; preds = %dec_label_pc_10009d9c
  %v4_10009da8 = icmp eq i32 %v1_10009da4, %v2_10009d70
  %v2_10009db4 = add i32 %v2_10009d9c, %arg3
  store i32 %v2_10009db4, i32* @r29, align 4
  br i1 %v4_10009da8, label %dec_label_pc_10009dbc, label %dec_label_pc_10009dec

dec_label_pc_10009dbc:                            ; preds = %dec_label_pc_10009db0
  %v3_10009dbc = icmp eq i32 %v0_10009dd0.lcssa, 0
  br i1 %v3_10009dbc, label %dec_label_pc_10009e40, label %dec_label_pc_10009dc4

dec_label_pc_10009dc4:                            ; preds = %dec_label_pc_10009dbc
  %v1_10009dc4 = add i32 %v0_10009dd0.lcssa, 12
  %v4_10009dc8 = icmp eq i32 %v1_10009dc4, %arg2
  br i1 %v4_10009dc8, label %dec_label_pc_10009dd0, label %dec_label_pc_10009e40

dec_label_pc_10009dd0:                            ; preds = %dec_label_pc_10009dc4
  %v1_10009dd0 = inttoptr i32 %v0_10009dd0.lcssa to i32*
  %v2_10009dd0 = load i32, i32* %v1_10009dd0, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10009dd8 = add i32 %v0_10009dd0.lcssa, 8
  %v2_10009dd8 = inttoptr i32 %v1_10009dd8 to i32*
  %v3_10009dd8 = load i32, i32* %v2_10009dd8, align 4
  %v2_10009de0 = add i32 %v2_10009dd0, %v2_10009db4
  store i32 %v2_10009de0, i32* @r29, align 4
  %v5_10009de4 = call i32 @function_10009d38(i32* %arg1, i32 %v0_10009ddc.lcssa, i32 %v3_10009dd8, i32 %v2_10009d70)
  store i32 %v5_10009de4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009e40

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009db0
  %v1_10009dec = add i32 %v0_10009ddc.lcssa, 4
  %v2_10009dec = inttoptr i32 %v1_10009dec to i32*
  %v3_10009dec = load i32, i32* %v2_10009dec, align 4
  %v3_10009df0 = icmp eq i32 %v3_10009dec, 0
  br i1 %v3_10009df0, label %dec_label_pc_10009e28, label %dec_label_pc_10009df8

dec_label_pc_10009df8:                            ; preds = %dec_label_pc_10009dec
  %v1_10009df8 = inttoptr i32 %v3_10009dec to i32*
  %v2_10009df8 = load i32, i32* %v1_10009df8, align 4
  %v2_10009dfc = sub i32 %v3_10009dec, %v2_10009df8
  %v1_10009e00 = add i32 %v2_10009dfc, 12
  %v4_10009e04 = icmp eq i32 %v2_10009d70, %v1_10009e00
  br i1 %v4_10009e04, label %dec_label_pc_10009e0c, label %dec_label_pc_10009e28

dec_label_pc_10009e0c:                            ; preds = %dec_label_pc_10009df8
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10009e18 = add i32 %v2_10009df8, %v2_10009db4
  store i32 %v2_10009e18, i32* @r29, align 4
  store i32 %v3_10009dec, i32* @r31, align 4
  %v5_10009e20 = call i32 @function_10009d38(i32* %arg1, i32 %v3_10009dec, i32 %v0_10009dd0.lcssa, i32 %v2_10009d70)
  store i32 %v5_10009e20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009e40

dec_label_pc_10009e28:                            ; preds = %dec_label_pc_10009df8, %dec_label_pc_10009dec
  %v2_10009e28 = add i32 %v0_10009ddc.lcssa, %arg3
  store i32 %v2_10009e28, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268475968, i32* @lr, align 4
  %v5_10009e3c = call i32 @function_10009d0c(i32* %arg1, i32 %v2_10009e28, i32 %v0_10009dd0.lcssa, i32 %v3_10009dec)
  store i32 %v5_10009e3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009e40

dec_label_pc_10009e40:                            ; preds = %dec_label_pc_10009dc4, %dec_label_pc_10009dbc, %dec_label_pc_10009e0c, %dec_label_pc_10009dd0, %dec_label_pc_10009e28
  %v0_10009e40 = load i32, i32* @r31, align 4
  store i32 %v0_10009e40, i32* @r30, align 4
  %v0_10009e44 = load i32, i32* @r29, align 4
  %v2_10009e44 = inttoptr i32 %v0_10009e40 to i32*
  store i32 %v0_10009e44, i32* %v2_10009e44, align 4
  br label %dec_label_pc_10009e68

dec_label_pc_10009e4c:                            ; preds = %dec_label_pc_10009d9c, %dec_label_pc_10009d94
  %v2_10009e4c = add i32 %v2_10009d70, -12
  %v3_10009e4c = inttoptr i32 %v2_10009e4c to i32*
  store i32 %arg3, i32* %v3_10009e4c, align 4
  %v0_10009e50 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009e50 = add i32 %v0_10009e50, -12
  store i32 %v1_10009e50, i32* @r30, align 4
  %v0_10009e54 = load i32, i32* %r11.global-to-local, align 4
  %v0_10009e58 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10009e58, i32* %r3.global-to-local, align 4
  %v0_10009e5c = load i32, i32* @r31, align 4
  store i32 268476008, i32* @lr, align 4
  %v4_10009e64 = inttoptr i32 %v0_10009e58 to i32*
  %v5_10009e64 = call i32 @function_10009d0c(i32* %v4_10009e64, i32 %v1_10009e50, i32 %v0_10009e54, i32 %v0_10009e5c)
  store i32 %v5_10009e64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009e68

dec_label_pc_10009e68:                            ; preds = %dec_label_pc_10009e40, %dec_label_pc_10009e4c
  %v0_10009e6c = load i32, i32* @r30, align 4
  store i32 %v0_10009e6c, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009e6c

; uselistorder directives
  uselistorder i32 %v3_10009dec, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10009da4, { 1, 0 }
  uselistorder i32 %v0_10009ddc.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10009dd0.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10009d80, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10009d70, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 4, 9, 10, 11, 1, 2, 3, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_10009d38, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009e68, { 1, 0 }
  uselistorder label %dec_label_pc_10009e40, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10009d7c, { 1, 0 }
}

define i32 @function_10009e80(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009e80:
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10009eb8 = load i32, i32* bitcast (i32** @global_var_1001b9f4.316 to i32*), align 4
  %v2_10009ec427 = load i8, i8* %arg1, align 1
  %v3_10009ec428 = zext i8 %v2_10009ec427 to i32
  %v1_10009ec829 = mul nuw nsw i32 %v3_10009ec428, 2
  %v2_10009ecc30 = add i32 %v1_10009ec829, %v3_10009eb8
  %v3_10009ecc31 = inttoptr i32 %v2_10009ecc30 to i16*
  %v4_10009ecc32 = load i16, i16* %v3_10009ecc31, align 2
  %v1_10009ed034 = and i16 %v4_10009ecc32, 32
  %v3_10009ed035 = icmp eq i16 %v1_10009ed034, 0
  br i1 %v3_10009ed035, label %dec_label_pc_10009ed8, label %dec_label_pc_10009ec0

dec_label_pc_10009ec0:                            ; preds = %dec_label_pc_10009e80, %dec_label_pc_10009ec0
  %v0_10009ef836 = phi i32 [ %v1_10009ec0, %dec_label_pc_10009ec0 ], [ %tmp, %dec_label_pc_10009e80 ]
  %v1_10009ec0 = add i32 %v0_10009ef836, 1
  store i32 %v1_10009ec0, i32* %r31.global-to-local, align 4
  %v1_10009ec4 = inttoptr i32 %v1_10009ec0 to i8*
  %v2_10009ec4 = load i8, i8* %v1_10009ec4, align 1
  %v3_10009ec4 = zext i8 %v2_10009ec4 to i32
  %v1_10009ec8 = mul nuw nsw i32 %v3_10009ec4, 2
  %v2_10009ecc = add i32 %v1_10009ec8, %v3_10009eb8
  %v3_10009ecc = inttoptr i32 %v2_10009ecc to i16*
  %v4_10009ecc = load i16, i16* %v3_10009ecc, align 2
  %v1_10009ed0 = and i16 %v4_10009ecc, 32
  %v3_10009ed0 = icmp eq i16 %v1_10009ed0, 0
  br i1 %v3_10009ed0, label %dec_label_pc_10009ed8, label %dec_label_pc_10009ec0

dec_label_pc_10009ed8:                            ; preds = %dec_label_pc_10009ec0, %dec_label_pc_10009e80
  %v0_10009ef8.lcssa = phi i32 [ %tmp, %dec_label_pc_10009e80 ], [ %v1_10009ec0, %dec_label_pc_10009ec0 ]
  %v2_10009ec4.lcssa = phi i8 [ %v2_10009ec427, %dec_label_pc_10009e80 ], [ %v2_10009ec4, %dec_label_pc_10009ec0 ]
  %v3_10009ed8 = icmp eq i8 %v2_10009ec4.lcssa, 43
  br i1 %v3_10009ed8, label %dec_label_pc_10009ef8, label %dec_label_pc_10009ee0

dec_label_pc_10009ee0:                            ; preds = %dec_label_pc_10009ed8
  %v3_10009ee0 = icmp eq i8 %v2_10009ec4.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_10009ee0, label %dec_label_pc_10009ef8, label %dec_label_pc_10009efc

dec_label_pc_10009ef8:                            ; preds = %dec_label_pc_10009ed8, %dec_label_pc_10009ee0
  %storemerge = phi i32 [ 1, %dec_label_pc_10009ee0 ], [ 0, %dec_label_pc_10009ed8 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_10009ef8 = add i32 %v0_10009ef8.lcssa, 1
  store i32 %v1_10009ef8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009efc

dec_label_pc_10009efc:                            ; preds = %dec_label_pc_10009ee0, %dec_label_pc_10009ef8
  %v1_10009efc = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_10009efc = icmp eq i32 %v1_10009efc, 0
  br i1 %v4_10009efc, label %dec_label_pc_10009f08, label %dec_label_pc_10009efc.dec_label_pc_10009f44_crit_edge

dec_label_pc_10009efc.dec_label_pc_10009f44_crit_edge: ; preds = %dec_label_pc_10009efc
  %v0_10009f44.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009f44

dec_label_pc_10009f08:                            ; preds = %dec_label_pc_10009efc
  %v0_10009f08 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009f08 = inttoptr i32 %v0_10009f08 to i8*
  %v2_10009f08 = load i8, i8* %v1_10009f08, align 1
  %v0_10009f0c = load i32, i32* %r30.global-to-local, align 4
  %v1_10009f0c = add i32 %v0_10009f0c, 10
  store i32 %v1_10009f0c, i32* %r30.global-to-local, align 4
  %v3_10009f10 = icmp eq i8 %v2_10009f08, 48
  br i1 %v3_10009f10, label %dec_label_pc_10009f18, label %dec_label_pc_10009f38

dec_label_pc_10009f18:                            ; preds = %dec_label_pc_10009f08
  %v1_10009f18 = add i32 %v0_10009f08, 1
  %v2_10009f18 = inttoptr i32 %v1_10009f18 to i8*
  %v3_10009f18 = load i8, i8* %v2_10009f18, align 1
  %v4_10009f18 = zext i8 %v3_10009f18 to i32
  store i32 %v1_10009f18, i32* %r31.global-to-local, align 4
  %v1_10009f1c = add i32 %v0_10009f0c, 8
  store i32 %v1_10009f1c, i32* %r30.global-to-local, align 4
  %v1_10009f20 = or i32 %v4_10009f18, 32
  %v3_10009f28 = icmp eq i32 %v1_10009f20, 120
  br i1 %v3_10009f28, label %dec_label_pc_10009f30, label %dec_label_pc_10009f38

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009f18
  %v1_10009f30 = mul i32 %v1_10009f1c, 2
  store i32 %v1_10009f30, i32* %r30.global-to-local, align 4
  %v1_10009f34 = add i32 %v0_10009f08, 2
  store i32 %v1_10009f34, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009f38

dec_label_pc_10009f38:                            ; preds = %dec_label_pc_10009f18, %dec_label_pc_10009f08, %dec_label_pc_10009f30
  %v0_10009fec15 = phi i32 [ %v1_10009f18, %dec_label_pc_10009f30 ], [ %tmp, %dec_label_pc_10009f08 ], [ %v1_10009f18, %dec_label_pc_10009f18 ]
  %v0_10009f38 = phi i32 [ %v1_10009f30, %dec_label_pc_10009f30 ], [ %v1_10009f0c, %dec_label_pc_10009f08 ], [ %v1_10009f1c, %dec_label_pc_10009f18 ]
  %tmp22 = icmp slt i32 %v0_10009f38, 17
  br i1 %tmp22, label %dec_label_pc_10009f44, label %dec_label_pc_10009f40

dec_label_pc_10009f40:                            ; preds = %dec_label_pc_10009f38
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009f44

dec_label_pc_10009f44:                            ; preds = %dec_label_pc_10009efc.dec_label_pc_10009f44_crit_edge, %dec_label_pc_10009f38, %dec_label_pc_10009f40
  %v0_10009fec14 = phi i32 [ %tmp, %dec_label_pc_10009efc.dec_label_pc_10009f44_crit_edge ], [ %v0_10009fec15, %dec_label_pc_10009f38 ], [ %v0_10009fec15, %dec_label_pc_10009f40 ]
  %v1_10009f58 = phi i32 [ %v0_10009f44.pre, %dec_label_pc_10009efc.dec_label_pc_10009f44_crit_edge ], [ %v0_10009f38, %dec_label_pc_10009f38 ], [ 16, %dec_label_pc_10009f40 ]
  %v1_10009f44 = add i32 %v1_10009f58, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10009f4c = icmp ugt i32 %v1_10009f44, 34
  br i1 %v2_10009f4c, label %dec_label_pc_10009fe4, label %dec_label_pc_10009f54

dec_label_pc_10009f54:                            ; preds = %dec_label_pc_10009f44
  %v2_10009f58 = udiv i32 -1, %v1_10009f58
  store i32 %v2_10009f58, i32* @r29, align 4
  %v2_10009f5c = mul i32 %v2_10009f58, %v1_10009f58
  %v1_10009f60 = sub i32 -1, %v2_10009f5c
  %v1_10009f64 = urem i32 %v1_10009f60, 256
  store i32 %v1_10009f64, i32* @r27, align 4
  %v0_10009f70.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009f70

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009fd8, %dec_label_pc_10009fc0
  %v1_10009f74.pre = phi i32 [ %v1_10009f78, %dec_label_pc_10009fd8 ], [ %v1_10009f74.pre.pre, %dec_label_pc_10009fc0 ]
  %v0_10009f74.pre = phi i32 [ %v2_10009fdc, %dec_label_pc_10009fd8 ], [ %v0_10009f74.pre.pre, %dec_label_pc_10009fc0 ]
  %v0_10009f6c = phi i32 [ %v1_10009f7c, %dec_label_pc_10009fd8 ], [ %v0_10009f6c.pre, %dec_label_pc_10009fc0 ]
  br label %dec_label_pc_10009f70

dec_label_pc_10009f70:                            ; preds = %dec_label_pc_10009f54, %dec_label_pc_10009f6c
  %v0_10009fec12 = phi i32 [ %v0_10009fec14, %dec_label_pc_10009f54 ], [ %v0_10009f6c, %dec_label_pc_10009f6c ]
  %v0_10009f7c = phi i32 [ %v0_10009f70.pre, %dec_label_pc_10009f54 ], [ %v0_10009f6c, %dec_label_pc_10009f6c ]
  %v1_10009f78 = phi i32 [ %v2_10009f58, %dec_label_pc_10009f54 ], [ %v1_10009f74.pre, %dec_label_pc_10009f6c ]
  %v0_10009fd8 = phi i32 [ 0, %dec_label_pc_10009f54 ], [ %v0_10009f74.pre, %dec_label_pc_10009f6c ]
  %v1_10009f70 = inttoptr i32 %v0_10009f7c to i8*
  %v2_10009f70 = load i8, i8* %v1_10009f70, align 1
  %v3_10009f70 = zext i8 %v2_10009f70 to i32
  %v3_10009f74 = icmp ugt i32 %v0_10009fd8, %v1_10009f78
  %v1_10009f7c = add i32 %v0_10009f7c, 1
  store i32 %v1_10009f7c, i32* %r31.global-to-local, align 4
  %v1_10009f80 = add nsw i32 %v3_10009f70, -48
  %v1_10009f84 = or i32 %v3_10009f70, 32
  %v1_10009f88 = urem i32 %v1_10009f80, 256
  %tmp23 = icmp ult i32 %v1_10009f88, 10
  br i1 %tmp23, label %dec_label_pc_10009fa8, label %dec_label_pc_10009f98

dec_label_pc_10009f98:                            ; preds = %dec_label_pc_10009f70
  %tmp24 = icmp ult i32 %v1_10009f84, 97
  br i1 %tmp24, label %dec_label_pc_10009fa8, label %dec_label_pc_10009fa4

dec_label_pc_10009fa4:                            ; preds = %dec_label_pc_10009f98
  %v1_10009f98 = add nsw i32 %v1_10009f84, -87
  %v1_10009fa4 = urem i32 %v1_10009f98, 256
  br label %dec_label_pc_10009fa8

dec_label_pc_10009fa8:                            ; preds = %dec_label_pc_10009f98, %dec_label_pc_10009f70, %dec_label_pc_10009fa4
  %v1_10009fdc = phi i32 [ 40, %dec_label_pc_10009f98 ], [ %v1_10009f88, %dec_label_pc_10009f70 ], [ %v1_10009fa4, %dec_label_pc_10009fa4 ]
  %v1_10009fa8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009fa8 = icmp slt i32 %v1_10009fdc, %v1_10009fa8
  br i1 %v2_10009fa8, label %dec_label_pc_10009fb0, label %dec_label_pc_10009fe4

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009fa8
  br i1 %v3_10009f74, label %dec_label_pc_10009fc0, label %dec_label_pc_10009fb4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009fb0
  %v1_10009fb4 = load i32, i32* @r27, align 4
  %v0_10009fb8.not = icmp ne i32 %v0_10009fd8, %v1_10009f78
  %tmp25 = icmp ule i32 %v1_10009fdc, %v1_10009fb4
  %or.cond = or i1 %tmp25, %v0_10009fb8.not
  br i1 %or.cond, label %dec_label_pc_10009fd8, label %dec_label_pc_10009fc0

dec_label_pc_10009fc0:                            ; preds = %dec_label_pc_10009fb4, %dec_label_pc_10009fb0
  %v0_10009fc0 = call i32 @function_10008fa0()
  %v0_10009fc4 = load i32, i32* @r28, align 4
  %v1_10009fc4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10009fc4 = and i32 %v1_10009fc4, %v0_10009fc4
  store i32 %v2_10009fc4, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_10009fd0 = inttoptr i32 %v0_10009fc0 to i32*
  store i32 34, i32* %v2_10009fd0, align 4
  %v0_10009f6c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009f74.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10009f74.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009f6c

dec_label_pc_10009fd8:                            ; preds = %dec_label_pc_10009fb4
  %v2_10009fd8 = mul i32 %v1_10009fa8, %v0_10009fd8
  %v2_10009fdc = add i32 %v2_10009fd8, %v1_10009fdc
  store i32 %v2_10009fdc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009f6c

dec_label_pc_10009fe4:                            ; preds = %dec_label_pc_10009fa8, %dec_label_pc_10009f44
  %v0_10009fec = phi i32 [ %v0_10009fec14, %dec_label_pc_10009f44 ], [ %v0_10009fec12, %dec_label_pc_10009fa8 ]
  %v0_10009fe4 = load i32, i32* @r25, align 4
  %v3_10009fe4 = icmp eq i32 %v0_10009fe4, 0
  br i1 %v3_10009fe4, label %dec_label_pc_10009ff0, label %dec_label_pc_10009fec

dec_label_pc_10009fec:                            ; preds = %dec_label_pc_10009fe4
  %v2_10009fec = inttoptr i32 %v0_10009fe4 to i32*
  store i32 %v0_10009fec, i32* %v2_10009fec, align 4
  br label %dec_label_pc_10009ff0

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009fe4, %dec_label_pc_10009fec
  %v0_10009ff0 = load i32, i32* %r26.global-to-local, align 4
  %v3_10009ff0 = icmp eq i32 %v0_10009ff0, 0
  %v0_10009ff4 = load i32, i32* @r28, align 4
  %v1_10009ff4 = sub i32 0, %v0_10009ff4
  %tmp40 = lshr i32 %v1_10009ff4, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000a034.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_10009ff0, label %dec_label_pc_1000a024, label %dec_label_pc_1000a00c

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_10009ff0
  %v3_1000a00c = icmp ugt i32 %v0_1000a034.pre.pre, %tmp41
  br i1 %v3_1000a00c, label %dec_label_pc_1000a014, label %dec_label_pc_1000a024

dec_label_pc_1000a014:                            ; preds = %dec_label_pc_1000a00c
  %v0_1000a014 = call i32 @function_10008fa0()
  %v2_1000a01c = inttoptr i32 %v0_1000a014 to i32*
  store i32 34, i32* %v2_1000a01c, align 4
  %v0_1000a020 = load i32, i32* @r31, align 4
  store i32 %v0_1000a020, i32* %r8.global-to-local, align 4
  %v0_1000a024.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000a024

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_10009ff0, %dec_label_pc_1000a00c, %dec_label_pc_1000a014
  %v0_1000a034.pre = phi i32 [ %v0_1000a034.pre.pre, %dec_label_pc_1000a00c ], [ %v0_1000a020, %dec_label_pc_1000a014 ], [ %v0_1000a034.pre.pre, %dec_label_pc_10009ff0 ]
  %v0_1000a024 = phi i32 [ %v0_10009ff4, %dec_label_pc_1000a00c ], [ %v0_1000a024.pre, %dec_label_pc_1000a014 ], [ %v0_10009ff4, %dec_label_pc_10009ff0 ]
  %v3_1000a024 = icmp eq i32 %v0_1000a024, 0
  br i1 %v3_1000a024, label %dec_label_pc_1000a030, label %dec_label_pc_1000a02c

dec_label_pc_1000a02c:                            ; preds = %dec_label_pc_1000a024
  %v1_1000a02c = sub i32 0, %v0_1000a034.pre
  store i32 %v1_1000a02c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a030

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_1000a024, %dec_label_pc_1000a02c
  %v0_1000a034 = phi i32 [ %v1_1000a02c, %dec_label_pc_1000a02c ], [ %v0_1000a034.pre, %dec_label_pc_1000a024 ]
  ret i32 %v0_1000a034

; uselistorder directives
  uselistorder i32 %v0_1000a034.pre, { 1, 0 }
  uselistorder i32 %v0_1000a034.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10009fdc, { 1, 0 }
  uselistorder i32 %v1_10009f88, { 1, 0 }
  uselistorder i32 %v1_10009f84, { 1, 0 }
  uselistorder i32 %v1_10009f7c, { 1, 0 }
  uselistorder i32 %v3_10009f70, { 1, 0 }
  uselistorder i32 %v0_10009fd8, { 1, 0, 2 }
  uselistorder i32 %v1_10009f78, { 0, 2, 1 }
  uselistorder i32 %v0_10009f6c, { 1, 0 }
  uselistorder i32 %v2_10009f58, { 1, 0, 2 }
  uselistorder i32 %v1_10009f30, { 1, 0 }
  uselistorder i32 %v1_10009f1c, { 1, 0, 2 }
  uselistorder i8 %v2_10009ec4.lcssa, { 1, 0 }
  uselistorder i32 %v1_10009ec0, { 0, 2, 3, 1 }
  uselistorder i32 %v3_10009eb8, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 26, { 6, 0, 4, 5, 1, 2, 3 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a030, { 1, 0 }
  uselistorder label %dec_label_pc_1000a024, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009ff0, { 1, 0 }
  uselistorder label %dec_label_pc_10009fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009f70, { 1, 0 }
  uselistorder label %dec_label_pc_10009f44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009f38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009efc, { 1, 0 }
  uselistorder label %dec_label_pc_10009ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10009ec0, { 1, 0 }
}

define i32 @function_1000a048() local_unnamed_addr {
dec_label_pc_1000a048:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000a060 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000a06c = load i32, i32* @r3, align 4
  store i32 %v0_1000a06c, i32* @r31, align 4
  store i32 %v2_1000a060, i32* @r3, align 4
  %v3_1000a078 = call i32 @function_1000a33c(i32 %v2_1000a060, i32 ptrtoint ([3 x i8]* @global_var_1000a334.296 to i32))
  %v0_1000a080 = call i32 @function_1000a334()
  %v3_1000a088 = load i32, i32* @global_var_1001ba38.319, align 4
  %v3_1000a08c = icmp eq i32 %v3_1000a088, 0
  br i1 %v3_1000a08c, label %dec_label_pc_1000a0a0, label %dec_label_pc_1000a094

dec_label_pc_1000a094:                            ; preds = %dec_label_pc_1000a048
  %v0_1000a094 = load i32, i32* @r31, align 4
  %v3_1000a09c = call i32 @unknown_0(i32 %v0_1000a094, i32 268566528)
  br label %dec_label_pc_1000a0a0

dec_label_pc_1000a0a0:                            ; preds = %dec_label_pc_1000a048, %dec_label_pc_1000a094
  store i32 %v2_1000a060, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000a0a8 = call i32 @function_1000a33c(i32 %v2_1000a060, i32 1)
  store i32 %v2_1000a0a8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a0b0.321 to i32), i32* @lr, align 4
  %v1_1000a0ac = call i32 @function_1000a2a0(i32 %v2_1000a0a8)
  %v0_1000a0c4 = load i32, i32* @r31, align 4
  %v1_1000a0c8 = call i32 @function_1000a6d4(i32 %v0_1000a0c4)
  ret i32 %v1_1000a0c8

; uselistorder directives
  uselistorder i32 %v2_1000a060, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000a33c, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000a0a0, { 1, 0 }
}

define i32 @function_1000a0cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a0cc:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000a0cc = icmp eq i32 %arg1, 0
  br i1 %v3_1000a0cc, label %dec_label_pc_1000a280, label %dec_label_pc_1000a0fc.lr.ph

dec_label_pc_1000a0fc.lr.ph:                      ; preds = %dec_label_pc_1000a0cc
  %v2_1000a0f0 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000a0f0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a0fc42 = add i32 %v2_1000a0f0, 132
  %v3_1000a0fc43 = inttoptr i32 %v2_1000a0fc42 to i32*
  store i32 0, i32* %v3_1000a0fc43, align 4
  %v0_1000a10044 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a10045 = add i32 %v0_1000a10044, -1
  store i32 %v1_1000a10045, i32* %r11.global-to-local, align 4
  %v1_1000a10446 = mul i32 %v1_1000a10045, 4
  %v1_1000a10847 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a10848 = add i32 %v1_1000a10847, %v1_1000a10446
  %v0_1000a10c49 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a10c50 = add i32 %v0_1000a10c49, -1
  store i32 %v1_1000a10c50, i32* %ctr.global-to-local, align 4
  %v2_1000a10c51 = icmp eq i32 %v1_1000a10c50, 0
  br i1 %v2_1000a10c51, label %dec_label_pc_1000a110, label %dec_label_pc_1000a0fc.dec_label_pc_1000a0fc_crit_edge

dec_label_pc_1000a0fc.dec_label_pc_1000a0fc_crit_edge: ; preds = %dec_label_pc_1000a0fc.lr.ph, %dec_label_pc_1000a0fc.dec_label_pc_1000a0fc_crit_edge
  %v2_1000a10852 = phi i32 [ %v2_1000a108, %dec_label_pc_1000a0fc.dec_label_pc_1000a0fc_crit_edge ], [ %v2_1000a10848, %dec_label_pc_1000a0fc.lr.ph ]
  %v0_1000a0fc.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a0fc = add i32 %v2_1000a10852, 8
  %v3_1000a0fc = inttoptr i32 %v2_1000a0fc to i32*
  store i32 %v0_1000a0fc.pre, i32* %v3_1000a0fc, align 4
  %v0_1000a100 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a100 = add i32 %v0_1000a100, -1
  store i32 %v1_1000a100, i32* %r11.global-to-local, align 4
  %v1_1000a104 = mul i32 %v1_1000a100, 4
  %v1_1000a108 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a108 = add i32 %v1_1000a108, %v1_1000a104
  %v0_1000a10c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a10c = add i32 %v0_1000a10c, -1
  store i32 %v1_1000a10c, i32* %ctr.global-to-local, align 4
  %v2_1000a10c = icmp eq i32 %v1_1000a10c, 0
  br i1 %v2_1000a10c, label %dec_label_pc_1000a110, label %dec_label_pc_1000a0fc.dec_label_pc_1000a0fc_crit_edge

dec_label_pc_1000a110:                            ; preds = %dec_label_pc_1000a0fc.dec_label_pc_1000a0fc_crit_edge, %dec_label_pc_1000a0fc.lr.ph
  %v0_1000a124.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a110 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000a110, i32* @r29, align 4
  store i32 %v2_1000a110, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000a124.pre, i32* %stack_var_-440, align 4
  %v0_1000a128 = call i32 @function_10009788()
  store i32 %v0_1000a128, i32* %r3.global-to-local, align 4
  %v1_1000a12c = icmp slt i32 %v0_1000a128, 0
  br i1 %v1_1000a12c, label %dec_label_pc_1000a288, label %dec_label_pc_1000a134

dec_label_pc_1000a134:                            ; preds = %dec_label_pc_1000a110
  %v2_1000a134 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000a134, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268476744, i32* @lr, align 4
  %v3_1000a144 = call i32 @function_10008bdc(i32 0, i32 %v2_1000a110, i32 %v2_1000a134)
  store i32 %v3_1000a144, i32* %r3.global-to-local, align 4
  %v3_1000a148 = icmp eq i32 %v3_1000a144, 0
  br i1 %v3_1000a148, label %dec_label_pc_1000a150, label %dec_label_pc_1000a288

dec_label_pc_1000a150:                            ; preds = %dec_label_pc_1000a134
  store i32 %v2_1000a134, i32* %r3.global-to-local, align 4
  %v2_1000a158 = call i32 @function_10009760(i32 %v2_1000a134, i32 17)
  store i32 %v2_1000a158, i32* %r3.global-to-local, align 4
  %v3_1000a15c = icmp eq i32 %v2_1000a158, 0
  br i1 %v3_1000a15c, label %dec_label_pc_1000a17c.lr.ph, label %dec_label_pc_1000a248

dec_label_pc_1000a17c.lr.ph:                      ; preds = %dec_label_pc_1000a150
  store i32 %v2_1000a0f0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000a0fc43, align 4
  %v0_1000a18033 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a18034 = add i32 %v0_1000a18033, -1
  store i32 %v1_1000a18034, i32* %r11.global-to-local, align 4
  %v1_1000a18435 = mul i32 %v1_1000a18034, 4
  %v1_1000a18836 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a18837 = add i32 %v1_1000a18836, %v1_1000a18435
  %v0_1000a18c38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a18c39 = add i32 %v0_1000a18c38, -1
  store i32 %v1_1000a18c39, i32* %ctr.global-to-local, align 4
  %v2_1000a18c40 = icmp eq i32 %v1_1000a18c39, 0
  br i1 %v2_1000a18c40, label %dec_label_pc_1000a190, label %dec_label_pc_1000a17c.dec_label_pc_1000a17c_crit_edge

dec_label_pc_1000a17c.dec_label_pc_1000a17c_crit_edge: ; preds = %dec_label_pc_1000a17c.lr.ph, %dec_label_pc_1000a17c.dec_label_pc_1000a17c_crit_edge
  %v2_1000a18841 = phi i32 [ %v2_1000a188, %dec_label_pc_1000a17c.dec_label_pc_1000a17c_crit_edge ], [ %v2_1000a18837, %dec_label_pc_1000a17c.lr.ph ]
  %v0_1000a17c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a17c = add i32 %v2_1000a18841, 8
  %v3_1000a17c = inttoptr i32 %v2_1000a17c to i32*
  store i32 %v0_1000a17c.pre, i32* %v3_1000a17c, align 4
  %v0_1000a180 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a180 = add i32 %v0_1000a180, -1
  store i32 %v1_1000a180, i32* %r11.global-to-local, align 4
  %v1_1000a184 = mul i32 %v1_1000a180, 4
  %v1_1000a188 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a188 = add i32 %v1_1000a188, %v1_1000a184
  %v0_1000a18c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a18c = add i32 %v0_1000a18c, -1
  store i32 %v1_1000a18c, i32* %ctr.global-to-local, align 4
  %v2_1000a18c = icmp eq i32 %v1_1000a18c, 0
  br i1 %v2_1000a18c, label %dec_label_pc_1000a190, label %dec_label_pc_1000a17c.dec_label_pc_1000a17c_crit_edge

dec_label_pc_1000a190:                            ; preds = %dec_label_pc_1000a17c.dec_label_pc_1000a17c_crit_edge, %dec_label_pc_1000a17c.lr.ph
  store i32 %v2_1000a110, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000a198 = call i32 @function_10009788()
  store i32 %v0_1000a198, i32* %r3.global-to-local, align 4
  %v1_1000a19c = icmp slt i32 %v0_1000a198, 0
  br i1 %v1_1000a19c, label %dec_label_pc_1000a288, label %dec_label_pc_1000a1a4

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a190
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000a1ac = ptrtoint i32* %stack_var_-176 to i32
  store i32 268476852, i32* @lr, align 4
  %v4_1000a1b0 = call i32 @function_1000af18(i32 17, i32* null, i32 %v2_1000a1ac)
  store i32 %v4_1000a1b0, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000a1b0, -1
  br i1 %tmp30, label %dec_label_pc_1000a1e4, label %dec_label_pc_1000a1bc

dec_label_pc_1000a1bc:                            ; preds = %dec_label_pc_1000a1a4
  %v0_1000a1bc = call i32 @function_10008fa0()
  store i32 %v0_1000a1bc, i32* %r3.global-to-local, align 4
  %v1_1000a1c4 = inttoptr i32 %v0_1000a1bc to i32*
  %v2_1000a1c4 = load i32, i32* %v1_1000a1c4, align 4
  store i32 %v2_1000a1c4, i32* @r28, align 4
  store i32 %v0_1000a1bc, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268476888, i32* @lr, align 4
  %v3_1000a1d4 = call i32 @function_10008bdc(i32 2, i32 %v2_1000a134, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000a1dc = load i32, i32* @r28, align 4
  %v1_1000a1dc = load i32, i32* @r29, align 4
  %v2_1000a1dc = inttoptr i32 %v1_1000a1dc to i32*
  store i32 %v0_1000a1dc, i32* %v2_1000a1dc, align 4
  %v0_1000a29c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a28c

dec_label_pc_1000a1e4:                            ; preds = %dec_label_pc_1000a1a4
  %v3_1000a1e4 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000a134, i32* @r28, align 4
  %v3_1000a1f0 = icmp eq i32 %v3_1000a1e4, 1
  br i1 %v3_1000a1f0, label %dec_label_pc_1000a1f8, label %dec_label_pc_1000a22c

dec_label_pc_1000a1f8:                            ; preds = %dec_label_pc_1000a1e4
  store i32 %v2_1000a0f0, i32* %r3.global-to-local, align 4
  store i32 268476932, i32* @lr, align 4
  %v2_1000a200 = call i32 @function_1000ab0c(i32 %v2_1000a0f0, i32 %v2_1000a0f0)
  store i32 %v2_1000a200, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a200, i32* @r31, align 4
  %v0_1000a208 = call i32 @function_10008fa0()
  store i32 %v0_1000a208, i32* %r3.global-to-local, align 4
  store i32 %v0_1000a208, i32* @r29, align 4
  %v1_1000a218 = inttoptr i32 %v0_1000a208 to i32*
  %v2_1000a218 = load i32, i32* %v1_1000a218, align 4
  store i32 %v2_1000a218, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268476964, i32* @lr, align 4
  %v3_1000a220 = call i32 @function_10008bdc(i32 2, i32 %v2_1000a134, i32 0)
  store i32 %v3_1000a220, i32* %r3.global-to-local, align 4
  %v0_1000a224 = load i32, i32* @r28, align 4
  %v1_1000a224 = load i32, i32* @r29, align 4
  %v2_1000a224 = inttoptr i32 %v1_1000a224 to i32*
  store i32 %v0_1000a224, i32* %v2_1000a224, align 4
  %v0_1000a254.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a254

dec_label_pc_1000a22c:                            ; preds = %dec_label_pc_1000a1e4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268476988, i32* @lr, align 4
  %v3_1000a238 = call i32 @function_10008bdc(i32 2, i32 %v2_1000a134, i32 0)
  br label %dec_label_pc_1000a248

dec_label_pc_1000a248:                            ; preds = %dec_label_pc_1000a150, %dec_label_pc_1000a22c
  store i32 %v2_1000a0f0, i32* %r3.global-to-local, align 4
  store i32 268477008, i32* @lr, align 4
  %v2_1000a24c = call i32 @function_1000ab0c(i32 %v2_1000a0f0, i32 %v2_1000a0f0)
  store i32 %v2_1000a24c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a24c, i32* @r31, align 4
  br label %dec_label_pc_1000a254

dec_label_pc_1000a254:                            ; preds = %dec_label_pc_1000a1f8, %dec_label_pc_1000a248
  %v0_1000a254 = phi i32 [ %v0_1000a254.pr, %dec_label_pc_1000a1f8 ], [ %v2_1000a24c, %dec_label_pc_1000a248 ]
  %v3_1000a254 = icmp eq i32 %v0_1000a254, 0
  br i1 %v3_1000a254, label %dec_label_pc_1000a280, label %dec_label_pc_1000a25c

dec_label_pc_1000a25c:                            ; preds = %dec_label_pc_1000a254
  %v3_1000a26c = load i32, i32* %stack_var_-440, align 4
  %v0_1000a270 = call i32 @__asm_mfcr()
  store i32 %v0_1000a270, i32* %r3.global-to-local, align 4
  %v1_1000a274 = call i32 @__asm_rlwinm(i32 %v0_1000a270, i32 30, i32 31, i32 31)
  %v2_1000a278 = add i32 %v3_1000a26c, %v1_1000a274
  store i32 %v2_1000a278, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a28c

dec_label_pc_1000a280:                            ; preds = %dec_label_pc_1000a254, %dec_label_pc_1000a0cc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a28c

dec_label_pc_1000a288:                            ; preds = %dec_label_pc_1000a134, %dec_label_pc_1000a190, %dec_label_pc_1000a110
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a28c

dec_label_pc_1000a28c:                            ; preds = %dec_label_pc_1000a280, %dec_label_pc_1000a25c, %dec_label_pc_1000a1bc, %dec_label_pc_1000a288
  %v0_1000a29c = phi i32 [ 0, %dec_label_pc_1000a280 ], [ %v2_1000a278, %dec_label_pc_1000a25c ], [ %v0_1000a29c.pre, %dec_label_pc_1000a1bc ], [ -1, %dec_label_pc_1000a288 ]
  ret i32 %v0_1000a29c

; uselistorder directives
  uselistorder i32 %v1_1000a18c, { 1, 0 }
  uselistorder i32 %v2_1000a134, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000a10c, { 1, 0 }
  uselistorder i32 %v2_1000a0f0, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 7, 6, 1, 8, 2, 9, 10, 11, 4, 12, 13, 15, 16, 14, 3, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000ab0c, { 1, 0 }
  uselistorder i32 17, { 2, 35, 36, 3, 37, 4, 19, 20, 5, 6, 21, 22, 23, 7, 24, 8, 9, 10, 11, 12, 13, 14, 25, 15, 26, 27, 28, 16, 17, 18, 29, 0, 30, 1, 31, 32, 33, 34 }
  uselistorder label %dec_label_pc_1000a28c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a288, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a254, { 1, 0 }
  uselistorder label %dec_label_pc_1000a248, { 1, 0 }
  uselistorder label %dec_label_pc_1000a17c.dec_label_pc_1000a17c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0fc.dec_label_pc_1000a0fc_crit_edge, { 1, 0 }
}

define i32 @function_1000a2a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a2f0:
  %v3_1000a2f4 = load i32, i32* @global_var_1001ba48.323, align 4
  %v3_1000a2f8 = icmp eq i32 %v3_1000a2f4, 0
  br i1 %v3_1000a2f8, label %dec_label_pc_1000a308, label %dec_label_pc_1000a300

dec_label_pc_1000a300:                            ; preds = %dec_label_pc_1000a2f0
  %v2_1000a304 = load i32, i32* @r4, align 4
  %v3_1000a304 = call i32 @unknown_0(i32 268566528, i32 %v2_1000a304)
  store i32 %v3_1000a304, i32* @r3, align 4
  br label %dec_label_pc_1000a308

dec_label_pc_1000a308:                            ; preds = %dec_label_pc_1000a2f0, %dec_label_pc_1000a300
  %v3_1000a30c = load i32, i32* @global_var_1001ba4c.324, align 4
  %v3_1000a310 = icmp eq i32 %v3_1000a30c, 0
  br i1 %v3_1000a310, label %dec_label_pc_1000a308.dec_label_pc_1000a320_crit_edge, label %dec_label_pc_1000a318

dec_label_pc_1000a308.dec_label_pc_1000a320_crit_edge: ; preds = %dec_label_pc_1000a308
  %v0_1000a330.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a320

dec_label_pc_1000a318:                            ; preds = %dec_label_pc_1000a308
  %v2_1000a31c = load i32, i32* @r4, align 4
  %v3_1000a31c = call i32 @unknown_0(i32 268566528, i32 %v2_1000a31c)
  br label %dec_label_pc_1000a320

dec_label_pc_1000a320:                            ; preds = %dec_label_pc_1000a308.dec_label_pc_1000a320_crit_edge, %dec_label_pc_1000a318
  %v0_1000a330 = phi i32 [ %v0_1000a330.pre, %dec_label_pc_1000a308.dec_label_pc_1000a320_crit_edge ], [ %v3_1000a31c, %dec_label_pc_1000a318 ]
  ret i32 %v0_1000a330

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a320, { 1, 0 }
  uselistorder label %dec_label_pc_1000a308, { 1, 0 }
}

define i32 @function_1000a334() local_unnamed_addr {
dec_label_pc_1000a334:
  ret i32 0
}

define i32 @function_1000a33c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a33c:
  %v0_1000a33c = load i32, i32* @r3, align 4
  ret i32 %v0_1000a33c
}

define i32 @function_1000a340(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a340:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268477284, i32* @lr, align 4
  %v1_1000a360 = call i32 @function_1000879c(i32 1)
  %v3_1000a364 = icmp eq i32 %v1_1000a360, -1
  br i1 %v3_1000a364, label %dec_label_pc_1000a36c, label %dec_label_pc_1000a38c

dec_label_pc_1000a36c:                            ; preds = %dec_label_pc_1000a340
  %v0_1000a370 = load i32, i32* @r30, align 4
  store i32 268477312, i32* @lr, align 4
  %v3_1000a37c = call i32 @function_100089ec(i32 ptrtoint ([10 x i8]* @global_var_1000b568.325 to i32), i32 %v0_1000a370)
  %v1_1000a380 = load i32, i32* @r31, align 4
  %v4_1000a380 = icmp eq i32 %v3_1000a37c, %v1_1000a380
  br i1 %v4_1000a380, label %dec_label_pc_1000a38c, label %dec_label_pc_1000a388

dec_label_pc_1000a388:                            ; preds = %dec_label_pc_1000a36c
  %v1_1000a388 = call i32 @function_1000afdc(i32 %v3_1000a37c)
  br label %dec_label_pc_1000a38c

dec_label_pc_1000a38c:                            ; preds = %dec_label_pc_1000a340, %dec_label_pc_1000a36c, %dec_label_pc_1000a388
  %v0_1000a39c = phi i32 [ %v1_1000a360, %dec_label_pc_1000a340 ], [ %v3_1000a37c, %dec_label_pc_1000a36c ], [ %v1_1000a388, %dec_label_pc_1000a388 ]
  ret i32 %v0_1000a39c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100089ec, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_1000879c, { 0, 7, 2, 1, 13, 12, 11, 10, 9, 8, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000a38c, { 2, 1, 0 }
}

define i32 @function_1000a3a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a3a0:
  %v3_1000a3c0 = load i32, i32* @global_var_1001ba50.326, align 4
  %v3_1000a3c4 = icmp eq i32 %v3_1000a3c0, 0
  br i1 %v3_1000a3c4, label %dec_label_pc_1000a3e8, label %dec_label_pc_1000a40c

dec_label_pc_1000a3e8:                            ; preds = %dec_label_pc_1000a3a0
  store i32 1, i32* @global_var_1001ba50.326, align 4
  store i32 4096, i32* @global_var_1001ba44.308, align 4
  br label %dec_label_pc_1000a40c

dec_label_pc_1000a40c:                            ; preds = %dec_label_pc_1000a3e8, %dec_label_pc_1000a3a0
  %v0_1000a41c = load i32, i32* @r3, align 4
  ret i32 %v0_1000a41c
}

define i32 @function_1000a420(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a420:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000a438 = mul i32 %arg2, 4
  %v2_1000a43c = add i32 %tmp, %v1_1000a438
  %v0_1000a440 = load i32, i32* @r9, align 4
  store i32 %v0_1000a440, i32* @global_var_1001ba3c.328, align 4
  %v1_1000a444 = add i32 %v2_1000a43c, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a444, i32* @global_var_1001ba40.329, align 4
  store i32 %arg6, i32* @global_var_1001ba4c.324, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000a464 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000a46c = icmp eq i32 %v1_1000a444, %v2_1000a464
  br i1 %v4_1000a46c, label %dec_label_pc_1000a474, label %dec_label_pc_1000a478

dec_label_pc_1000a474:                            ; preds = %dec_label_pc_1000a420
  store i32 %v2_1000a43c, i32* @global_var_1001ba40.329, align 4
  br label %dec_label_pc_1000a478

dec_label_pc_1000a478:                            ; preds = %dec_label_pc_1000a420, %dec_label_pc_1000a474
  %v2_1000a478 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268477576, i32* @lr, align 4
  %v3_1000a484 = call i32 @function_10009088(i32 %v2_1000a478, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001ba40.329, align 4
  br label %dec_label_pc_1000a494

dec_label_pc_1000a494:                            ; preds = %dec_label_pc_1000a494, %dec_label_pc_1000a478
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000a478 ], [ %v1_1000a498, %dec_label_pc_1000a494 ]
  %v1_1000a494 = inttoptr i32 %storemerge to i32*
  %v2_1000a494 = load i32, i32* %v1_1000a494, align 4
  %v1_1000a498 = add i32 %storemerge, 4
  %v3_1000a49c = icmp eq i32 %v2_1000a494, 0
  br i1 %v3_1000a49c, label %dec_label_pc_1000a4a4, label %dec_label_pc_1000a494

dec_label_pc_1000a4a4:                            ; preds = %dec_label_pc_1000a494
  store i32 %v1_1000a498, i32* %r29.global-to-local, align 4
  %v1_1000a4d012 = inttoptr i32 %v1_1000a498 to i32*
  %v2_1000a4d013 = load i32, i32* %v1_1000a4d012, align 4
  %v3_1000a4d416 = icmp eq i32 %v2_1000a4d013, 0
  br i1 %v3_1000a4d416, label %dec_label_pc_1000a4dc, label %dec_label_pc_1000a4ac

dec_label_pc_1000a4ac:                            ; preds = %dec_label_pc_1000a4a4, %dec_label_pc_1000a4cc
  %v0_1000a4c0 = phi i32 [ %v1_1000a4cc, %dec_label_pc_1000a4cc ], [ %v1_1000a498, %dec_label_pc_1000a4a4 ]
  %v0_1000a4b4 = phi i32 [ %v2_1000a4d0, %dec_label_pc_1000a4cc ], [ %v2_1000a4d013, %dec_label_pc_1000a4a4 ]
  %v2_1000a4ac = icmp ugt i32 %v0_1000a4b4, 14
  br i1 %v2_1000a4ac, label %dec_label_pc_1000a4cc, label %dec_label_pc_1000a4b4

dec_label_pc_1000a4b4:                            ; preds = %dec_label_pc_1000a4ac
  %v1_1000a4b4 = mul i32 %v0_1000a4b4, 8
  %v2_1000a4bc = add i32 %v1_1000a4b4, %v2_1000a478
  store i32 %v2_1000a4bc, i32* @r3, align 4
  store i32 %v0_1000a4c0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268477644, i32* @lr, align 4
  %v0_1000a4c8 = call i32 @function_1000ad88()
  %v0_1000a4cc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a4cc

dec_label_pc_1000a4cc:                            ; preds = %dec_label_pc_1000a4ac, %dec_label_pc_1000a4b4
  %v0_1000a4cc = phi i32 [ %v0_1000a4c0, %dec_label_pc_1000a4ac ], [ %v0_1000a4cc.pre, %dec_label_pc_1000a4b4 ]
  %v1_1000a4cc = add i32 %v0_1000a4cc, 8
  store i32 %v1_1000a4cc, i32* %r29.global-to-local, align 4
  %v1_1000a4d0 = inttoptr i32 %v1_1000a4cc to i32*
  %v2_1000a4d0 = load i32, i32* %v1_1000a4d0, align 4
  %v3_1000a4d4 = icmp eq i32 %v2_1000a4d0, 0
  br i1 %v3_1000a4d4, label %dec_label_pc_1000a4dc, label %dec_label_pc_1000a4ac

dec_label_pc_1000a4dc:                            ; preds = %dec_label_pc_1000a4cc, %dec_label_pc_1000a4a4
  %v1_1000a4e0 = call i32 @function_1000b12c(i32 %v2_1000a478)
  store i32 %v1_1000a4e0, i32* @r3, align 4
  store i32 268477672, i32* @lr, align 4
  %v1_1000a4e4 = call i32 @function_1000a3a0(i32 %v1_1000a4e0)
  %v3_1000a4ec = icmp eq i32 %tmp27, 0
  br i1 %v3_1000a4ec, label %dec_label_pc_1000a4f4, label %dec_label_pc_1000a4f8

dec_label_pc_1000a4f4:                            ; preds = %dec_label_pc_1000a4dc
  br label %dec_label_pc_1000a4f8

dec_label_pc_1000a4f8:                            ; preds = %dec_label_pc_1000a4dc, %dec_label_pc_1000a4f4
  %v0_1000a500 = phi i32 [ %tmp27, %dec_label_pc_1000a4dc ], [ 4096, %dec_label_pc_1000a4f4 ]
  store i32 %v0_1000a500, i32* @global_var_1001ba44.308, align 4
  %v3_1000a504 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000a504, label %dec_label_pc_1000a50c, label %dec_label_pc_1000a540

dec_label_pc_1000a50c:                            ; preds = %dec_label_pc_1000a4f8
  store i32 268477712, i32* @lr, align 4
  %v1_1000a50c = call i32 @function_1000aa44(i32 268566528)
  store i32 %v1_1000a50c, i32* %r29.global-to-local, align 4
  store i32 268477720, i32* @lr, align 4
  %v0_1000a514 = call i32 @function_1000a9b4()
  %v4_1000a518 = icmp eq i32 %v1_1000a50c, %v0_1000a514
  br i1 %v4_1000a518, label %dec_label_pc_1000a520, label %dec_label_pc_1000a55c

dec_label_pc_1000a520:                            ; preds = %dec_label_pc_1000a50c
  store i32 268477732, i32* @lr, align 4
  %v1_1000a520 = call i32 @function_1000a9fc(i32 %v0_1000a514)
  store i32 %v1_1000a520, i32* %r29.global-to-local, align 4
  store i32 268477740, i32* @lr, align 4
  %v0_1000a528 = call i32 @function_1000a96c()
  %v4_1000a52c = icmp eq i32 %v1_1000a520, %v0_1000a528
  br i1 %v4_1000a52c, label %dec_label_pc_1000a534.thread, label %dec_label_pc_1000a55c

dec_label_pc_1000a534.thread:                     ; preds = %dec_label_pc_1000a520
  br label %dec_label_pc_1000a58c

dec_label_pc_1000a540:                            ; preds = %dec_label_pc_1000a4f8
  %v4_1000a544 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000a544, label %dec_label_pc_1000a54c, label %dec_label_pc_1000a55c

dec_label_pc_1000a54c:                            ; preds = %dec_label_pc_1000a540
  br label %dec_label_pc_1000a55c

dec_label_pc_1000a55c:                            ; preds = %dec_label_pc_1000a54c, %dec_label_pc_1000a540, %dec_label_pc_1000a520, %dec_label_pc_1000a50c
  store i32 268477804, i32* @lr, align 4
  %v2_1000a568 = call i32 @function_1000a340(i32 0, i32 32768)
  store i32 268477820, i32* @lr, align 4
  %v2_1000a578 = call i32 @function_1000a340(i32 1, i32 32770)
  store i32 268477836, i32* @lr, align 4
  %v2_1000a588 = call i32 @function_1000a340(i32 2, i32 32770)
  br label %dec_label_pc_1000a58c

dec_label_pc_1000a58c:                            ; preds = %dec_label_pc_1000a534.thread, %dec_label_pc_1000a55c
  %v0_1000a598 = load i32, i32* @r30, align 4
  %v1_1000a598 = inttoptr i32 %v0_1000a598 to i32*
  %v2_1000a598 = load i32, i32* %v1_1000a598, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a598, i32* inttoptr (i32 268548588 to i32*), align 4
  %v0_1000a5b8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000a5b8, i32* @global_var_1001ba48.323, align 4
  br i1 false, label %dec_label_pc_1000a5c0, label %dec_label_pc_1000a638

dec_label_pc_1000a5c0:                            ; preds = %dec_label_pc_1000a58c, %dec_label_pc_1000a5c0
  br i1 undef, label %dec_label_pc_1000a5c0, label %dec_label_pc_1000a638

dec_label_pc_1000a638:                            ; preds = %dec_label_pc_1000a5c0, %dec_label_pc_1000a58c
  %v0_1000a5e4 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a5e4)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000a648 = call i32 @function_10008fa0()
  %v2_1000a650 = inttoptr i32 %v0_1000a648 to i32*
  store i32 0, i32* %v2_1000a650, align 4
  %v0_1000a67c = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a67c)
  %v0_1000a688 = call i32 @function_1000a048()
  ret i32 %v0_1000a688

; uselistorder directives
  uselistorder i32 %v2_1000a4d0, { 1, 0 }
  uselistorder i32 %v1_1000a4cc, { 2, 1, 0 }
  uselistorder i32 %v1_1000a498, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000a478, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_1000a048, { 0, 4, 3, 2, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000a340, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 30, 0, 5, 6, 11, 7, 8, 12, 13, 9, 10, 14, 15, 16, 1, 17, 18, 19, 2, 20, 21, 22, 23, 24, 3, 25, 26, 27, 28, 29, 4 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000a5c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a58c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000a478, { 1, 0 }
}

define i32 @function_1000a68c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a68c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a6a4 = call i32 @__asm_mfcr()
  %v1_1000a6a8 = and i32 %v0_1000a6a4, 268435456
  %v3_1000a6a8 = icmp eq i32 %v1_1000a6a8, 0
  store i32 %v0_1000a6a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a6a8, label %dec_label_pc_1000a6c0, label %dec_label_pc_1000a6b4

dec_label_pc_1000a6b4:                            ; preds = %dec_label_pc_1000a68c
  %v0_1000a6b4 = call i32 @function_10008fa0()
  %v0_1000a6b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a6b8 = inttoptr i32 %v0_1000a6b4 to i32*
  store i32 %v0_1000a6b8, i32* %v2_1000a6b8, align 4
  br label %dec_label_pc_1000a6c0

dec_label_pc_1000a6c0:                            ; preds = %dec_label_pc_1000a68c, %dec_label_pc_1000a6b4
  %v0_1000a6d0 = phi i32 [ %v0_1000a6a4, %dec_label_pc_1000a68c ], [ -1, %dec_label_pc_1000a6b4 ]
  ret i32 %v0_1000a6d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a6c0, { 1, 0 }
}

define i32 @function_1000a6d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a6d4:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000a6e8

dec_label_pc_1000a6e8:                            ; preds = %dec_label_pc_1000a6e8.backedge, %dec_label_pc_1000a6d4
  %v0_1000a6f4 = call i32 @__asm_mfcr()
  %v1_1000a6f8 = and i32 %v0_1000a6f4, 268435456
  %v3_1000a6f8 = icmp eq i32 %v1_1000a6f8, 0
  store i32 %v0_1000a6f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a6f8, label %dec_label_pc_1000a6e8.backedge, label %dec_label_pc_1000a704

dec_label_pc_1000a704:                            ; preds = %dec_label_pc_1000a6e8
  %v0_1000a704 = call i32 @function_10008fa0()
  %v0_1000a708 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a708 = inttoptr i32 %v0_1000a704 to i32*
  store i32 %v0_1000a708, i32* %v2_1000a708, align 4
  br label %dec_label_pc_1000a6e8.backedge

dec_label_pc_1000a6e8.backedge:                   ; preds = %dec_label_pc_1000a704, %dec_label_pc_1000a6e8
  br label %dec_label_pc_1000a6e8
}

define i32 @function_1000a710(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a710:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000a71c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000a71c, i32* @r29, align 4
  %v0_1000a724 = load i32, i32* @r4, align 4
  store i32 %v0_1000a724, i32* @r30, align 4
  %v0_1000a734 = call i32 @__asm_mfcr()
  %v1_1000a738 = and i32 %v0_1000a734, 268435456
  %v3_1000a738 = icmp eq i32 %v1_1000a738, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000a734, i32* @r31, align 4
  br i1 %v3_1000a738, label %dec_label_pc_1000a754, label %dec_label_pc_1000a748

dec_label_pc_1000a748:                            ; preds = %dec_label_pc_1000a710
  %v0_1000a748 = call i32 @function_10008fa0()
  %v0_1000a74c = load i32, i32* @r31, align 4
  %v2_1000a74c = inttoptr i32 %v0_1000a748 to i32*
  store i32 %v0_1000a74c, i32* %v2_1000a74c, align 4
  br label %dec_label_pc_1000a76c

dec_label_pc_1000a754:                            ; preds = %dec_label_pc_1000a710
  %v3_1000a754 = icmp eq i32 %v0_1000a734, 0
  store i32 %v0_1000a734, i32* @r28, align 4
  br i1 %v3_1000a754, label %dec_label_pc_1000a768, label %dec_label_pc_1000a76c

dec_label_pc_1000a768:                            ; preds = %dec_label_pc_1000a754
  %v0_1000a75c = load i32, i32* @r30, align 4
  store i32 268478316, i32* @lr, align 4
  %v4_1000a768 = call i32 @function_1000acd8(i32* nonnull %stack_var_-104, i32 %v0_1000a75c, i32 0)
  br label %dec_label_pc_1000a76c

dec_label_pc_1000a76c:                            ; preds = %dec_label_pc_1000a754, %dec_label_pc_1000a748, %dec_label_pc_1000a768
  %v0_1000a770 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a770

; uselistorder directives
  uselistorder i32 %v0_1000a734, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a76c, { 2, 0, 1 }
}

define i32 @function_1000a784(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a784:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000a798 = call i32 @function_1000a814()
  store i32 %v0_1000a798, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000a798, 1
  br i1 %tmp18, label %dec_label_pc_1000a7fc, label %dec_label_pc_1000a7a4

dec_label_pc_1000a7a4:                            ; preds = %dec_label_pc_1000a784
  %v0_1000a7a4 = load i32, i32* @r31, align 4
  %v2_1000a7a4 = add i32 %v0_1000a7a4, %v0_1000a798
  store i32 %v2_1000a7a4, i32* %r29.global-to-local, align 4
  %v2_1000a7ec3 = icmp ult i32 %v0_1000a7a4, %v2_1000a7a4
  br i1 %v2_1000a7ec3, label %dec_label_pc_1000a7ac, label %dec_label_pc_1000a7fc

dec_label_pc_1000a7ac:                            ; preds = %dec_label_pc_1000a7a4, %dec_label_pc_1000a7ac
  %v1_1000a7bc = phi i32 [ %v2_1000a7e8, %dec_label_pc_1000a7ac ], [ %v0_1000a7a4, %dec_label_pc_1000a7a4 ]
  %v1_1000a7f010.in = phi i32 [ %v2_1000a7e8, %dec_label_pc_1000a7ac ], [ %v0_1000a7a4, %dec_label_pc_1000a7a4 ]
  %v1_1000a7f411.in = phi i32 [ %v2_1000a7e8, %dec_label_pc_1000a7ac ], [ %v0_1000a7a4, %dec_label_pc_1000a7a4 ]
  %v1_1000a7f010 = add i32 %v1_1000a7f010.in, 11
  %v1_1000a7f411 = add i32 %v1_1000a7f411.in, 19
  %v1_1000a7ac = add i32 %v1_1000a7bc, 4
  %v2_1000a7ac = inttoptr i32 %v1_1000a7ac to i32*
  %v3_1000a7ac = load i32, i32* %v2_1000a7ac, align 4
  store i32 %v3_1000a7ac, i32* %r11.global-to-local, align 4
  %v1_1000a7b0 = add i32 %v1_1000a7bc, 12
  %v2_1000a7b0 = inttoptr i32 %v1_1000a7b0 to i32*
  %v3_1000a7b0 = load i32, i32* %v2_1000a7b0, align 4
  %v1_1000a7b4 = add i32 %v1_1000a7bc, 16
  %v2_1000a7b4 = inttoptr i32 %v1_1000a7b4 to i16*
  %v3_1000a7b4 = load i16, i16* %v2_1000a7b4, align 2
  %v4_1000a7b4 = zext i16 %v3_1000a7b4 to i32
  store i32 %v4_1000a7b4, i32* %r5.global-to-local, align 4
  %v1_1000a7b8 = add i32 %v1_1000a7bc, 18
  %v2_1000a7b8 = inttoptr i32 %v1_1000a7b8 to i8*
  %v3_1000a7b8 = load i8, i8* %v2_1000a7b8, align 1
  %v4_1000a7b8 = zext i8 %v3_1000a7b8 to i32
  store i32 %v4_1000a7b8, i32* %r9.global-to-local, align 4
  store i32 %v3_1000a7b0, i32* %v2_1000a7ac, align 4
  %v0_1000a7c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a7c0 = load i32, i32* @r31, align 4
  %v2_1000a7c0 = inttoptr i32 %v1_1000a7c0 to i32*
  store i32 %v0_1000a7c0, i32* %v2_1000a7c0, align 4
  %v0_1000a7c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a7c4 = trunc i32 %v0_1000a7c4 to i8
  %v2_1000a7c4 = load i32, i32* @r31, align 4
  %v3_1000a7c4 = add i32 %v2_1000a7c4, 10
  %v4_1000a7c4 = inttoptr i32 %v3_1000a7c4 to i8*
  store i8 %v1_1000a7c4, i8* %v4_1000a7c4, align 1
  %v0_1000a7c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a7c8 = trunc i32 %v0_1000a7c8 to i16
  %v2_1000a7c8 = load i32, i32* @r31, align 4
  %v3_1000a7c8 = add i32 %v2_1000a7c8, 8
  %v4_1000a7c8 = inttoptr i32 %v3_1000a7c8 to i16*
  store i16 %v1_1000a7c8, i16* %v4_1000a7c8, align 2
  %v0_1000a7cc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a7cc = add i32 %v0_1000a7cc, -19
  store i32 %v1_1000a7cc, i32* %r5.global-to-local, align 4
  store i32 268478420, i32* @lr, align 4
  %v3_1000a7d0 = call i32 @function_10008fe4(i32 %v1_1000a7f010, i32 %v1_1000a7f411, i32 %v1_1000a7cc)
  %v0_1000a7d4 = load i32, i32* @r31, align 4
  %v1_1000a7d4 = add i32 %v0_1000a7d4, 8
  %v2_1000a7d4 = inttoptr i32 %v1_1000a7d4 to i16*
  %v3_1000a7d4 = load i16, i16* %v2_1000a7d4, align 2
  %v4_1000a7d4 = zext i16 %v3_1000a7d4 to i32
  store i32 %v4_1000a7d4, i32* %r5.global-to-local, align 4
  store i32 268478436, i32* @lr, align 4
  %v3_1000a7e0 = call i32 @function_10008fe4(i32 %v0_1000a7d4, i32 %v0_1000a7d4, i32 %v4_1000a7d4)
  %v0_1000a7e4 = load i32, i32* @r31, align 4
  %v1_1000a7e4 = add i32 %v0_1000a7e4, 8
  %v2_1000a7e4 = inttoptr i32 %v1_1000a7e4 to i16*
  %v3_1000a7e4 = load i16, i16* %v2_1000a7e4, align 2
  %v4_1000a7e4 = zext i16 %v3_1000a7e4 to i32
  %v2_1000a7e8 = add i32 %v4_1000a7e4, %v0_1000a7e4
  store i32 %v2_1000a7e8, i32* @r31, align 4
  %v1_1000a7ec = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7ec = icmp ult i32 %v2_1000a7e8, %v1_1000a7ec
  br i1 %v2_1000a7ec, label %dec_label_pc_1000a7ac, label %dec_label_pc_1000a7ec.dec_label_pc_1000a7fc.loopexit_crit_edge

dec_label_pc_1000a7ec.dec_label_pc_1000a7fc.loopexit_crit_edge: ; preds = %dec_label_pc_1000a7ac
  %v0_1000a800.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a7fc

dec_label_pc_1000a7fc:                            ; preds = %dec_label_pc_1000a7a4, %dec_label_pc_1000a7ec.dec_label_pc_1000a7fc.loopexit_crit_edge, %dec_label_pc_1000a784
  %v0_1000a800 = phi i32 [ %v0_1000a798, %dec_label_pc_1000a784 ], [ %v0_1000a800.pre.pre, %dec_label_pc_1000a7ec.dec_label_pc_1000a7fc.loopexit_crit_edge ], [ %v0_1000a798, %dec_label_pc_1000a7a4 ]
  ret i32 %v0_1000a800

; uselistorder directives
  uselistorder i32 %v2_1000a7e8, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000a7d4, { 1, 0, 2 }
  uselistorder i32 %v1_1000a7bc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000a7a4, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000a798, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10008fe4, { 1, 0, 2 }
  uselistorder i32 11, { 0, 29, 28, 1, 9, 10, 11, 12, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 4, 24, 25, 7, 5, 26, 27, 8, 6 }
  uselistorder label %dec_label_pc_1000a7fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a7ac, { 1, 0 }
}

define i32 @function_1000a814() local_unnamed_addr {
dec_label_pc_1000a814:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a818 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a818, i32* %stack_var_-48, align 4
  %v5_1000a818 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000a818, i32* %r9.global-to-local, align 4
  %v0_1000a824 = load i32, i32* @r5, align 4
  %v1_1000a824 = add i32 %v0_1000a824, 30
  %v1_1000a828 = call i32 @__asm_rlwinm(i32 %v1_1000a824, i32 0, i32 0, i32 27)
  store i32 %v5_1000a818, i32* @r31, align 4
  %v1_1000a838 = load i32, i32* @r1, align 4
  %v3_1000a838 = sub i32 %v1_1000a838, %v1_1000a828
  %v4_1000a838 = inttoptr i32 %v3_1000a838 to i32*
  store i32 %v4_1000a818, i32* %v4_1000a838, align 4
  %v0_1000a83c = load i32, i32* @r4, align 4
  store i32 %v0_1000a83c, i32* @r28, align 4
  %v0_1000a840 = load i32, i32* @r5, align 4
  store i32 %v0_1000a840, i32* @r23, align 4
  %v0_1000a844 = load i32, i32* @r3, align 4
  store i32 %v0_1000a844, i32* @r22, align 4
  %v1_1000a848 = add i32 %v3_1000a838, 23
  %v1_1000a84c = call i32 @__asm_rlwinm(i32 %v1_1000a848, i32 0, i32 0, i32 27)
  store i32 %v1_1000a84c, i32* @r27, align 4
  store i32 %v1_1000a84c, i32* %r4.global-to-local, align 4
  %v0_1000a85c = call i32 @__asm_mfcr()
  %v1_1000a860 = and i32 %v0_1000a85c, 268435456
  store i32 %v1_1000a860, i32* %r9.global-to-local, align 4
  %v3_1000a860 = icmp eq i32 %v1_1000a860, 0
  store i32 %v0_1000a85c, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a860, label %dec_label_pc_1000a878, label %dec_label_pc_1000a86c

dec_label_pc_1000a86c:                            ; preds = %dec_label_pc_1000a814
  %v0_1000a86c = call i32 @function_10008fa0()
  %v0_1000a870 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a870 = inttoptr i32 %v0_1000a86c to i32*
  store i32 %v0_1000a870, i32* %v2_1000a870, align 4
  br label %dec_label_pc_1000a884

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a814
  %v3_1000a878 = icmp eq i32 %v0_1000a85c, -1
  store i32 %v0_1000a85c, i32* %r24.global-to-local, align 4
  br i1 %v3_1000a878, label %dec_label_pc_1000a884, label %dec_label_pc_1000a88c

dec_label_pc_1000a884:                            ; preds = %dec_label_pc_1000a878, %dec_label_pc_1000a86c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a950

dec_label_pc_1000a88c:                            ; preds = %dec_label_pc_1000a878
  %v0_1000a88c = load i32, i32* @r28, align 4
  store i32 %v0_1000a88c, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a84c, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_1000a93412 = add i32 %v0_1000a85c, %v1_1000a84c
  %v1_1000a93813 = load i32, i32* @r23, align 4
  %v2_1000a93814 = add i32 %v1_1000a93813, %v0_1000a88c
  store i32 %v2_1000a93814, i32* %r10.global-to-local, align 4
  %v2_1000a93c15 = icmp ult i32 %v1_1000a84c, %v2_1000a93412
  %v1_1000a94017 = add i32 %v0_1000a88c, 19
  store i32 %v1_1000a94017, i32* @r3, align 4
  %v1_1000a94418 = add i32 %v1_1000a84c, 19
  store i32 %v1_1000a94418, i32* @r4, align 4
  br i1 %v2_1000a93c15, label %dec_label_pc_1000a8a0, label %dec_label_pc_1000a94c

dec_label_pc_1000a8a0:                            ; preds = %dec_label_pc_1000a88c, %dec_label_pc_1000a8e8
  %v0_1000a8a019 = phi i32 [ %v2_1000a930, %dec_label_pc_1000a8e8 ], [ %v1_1000a84c, %dec_label_pc_1000a88c ]
  %v1_1000a8a0 = add i32 %v0_1000a8a019, 16
  %v2_1000a8a0 = inttoptr i32 %v1_1000a8a0 to i16*
  %v3_1000a8a0 = load i16, i16* %v2_1000a8a0, align 2
  %v4_1000a8a0 = zext i16 %v3_1000a8a0 to i32
  %v1_1000a8a4 = add nuw nsw i32 %v4_1000a8a0, 7
  store i32 %v1_1000a8a4, i32* %r9.global-to-local, align 4
  %v1_1000a8a8 = call i32 @__asm_rlwinm(i32 %v1_1000a8a4, i32 0, i32 0, i32 28)
  %v0_1000a8ac = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a8ac = add i32 %v1_1000a8a8, %v0_1000a8ac
  store i32 %v3_1000a8ac, i32* %r11.global-to-local, align 4
  %v1_1000a8b0 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000a8b0 = icmp ugt i32 %v3_1000a8ac, %v1_1000a8b0
  br i1 %v3_1000a8b0, label %dec_label_pc_1000a8b8, label %dec_label_pc_1000a8e8

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a8a0
  %v0_1000a8b8 = load i32, i32* @r22, align 4
  %v0_1000a8bc = load i32, i32* @r25, align 4
  %v0_1000a8c0 = load i32, i32* %r26.global-to-local, align 4
  store i32 268478668, i32* @lr, align 4
  %v4_1000a8c8 = call i32 @function_1000aa8c(i32 %v0_1000a8b8, i32 %v0_1000a8bc, i32 %v0_1000a8c0, i32 0)
  %v0_1000a8cc = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a8cc = load i32, i32* @r28, align 4
  %v4_1000a8cc = icmp eq i32 %v0_1000a8cc, %v1_1000a8cc
  br i1 %v4_1000a8cc, label %dec_label_pc_1000a8d4, label %dec_label_pc_1000a94c

dec_label_pc_1000a8d4:                            ; preds = %dec_label_pc_1000a8b8
  %v0_1000a8d4 = call i32 @function_10008fa0()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000a8e0 = inttoptr i32 %v0_1000a8d4 to i32*
  store i32 22, i32* %v2_1000a8e0, align 4
  %v0_1000a954.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a950

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8a0
  %v2_1000a8a8 = trunc i32 %v1_1000a8a8 to i16
  %v0_1000a8e8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a8e8 = inttoptr i32 %v0_1000a8e8 to i32*
  %v2_1000a8e8 = load i32, i32* %v1_1000a8e8, align 4
  store i32 %v2_1000a8e8, i32* %r9.global-to-local, align 4
  %v1_1000a8ec = add i32 %v0_1000a8e8, 4
  %v2_1000a8ec = inttoptr i32 %v1_1000a8ec to i32*
  %v3_1000a8ec = load i32, i32* %v2_1000a8ec, align 4
  store i32 %v3_1000a8ec, i32* %r10.global-to-local, align 4
  %v1_1000a8f0 = add i32 %v0_1000a8e8, 8
  %v2_1000a8f0 = inttoptr i32 %v1_1000a8f0 to i32*
  %v3_1000a8f0 = load i32, i32* %v2_1000a8f0, align 4
  store i32 %v3_1000a8f0, i32* @r25, align 4
  %v1_1000a8f4 = add i32 %v0_1000a8e8, 12
  %v2_1000a8f4 = inttoptr i32 %v1_1000a8f4 to i32*
  %v3_1000a8f4 = load i32, i32* %v2_1000a8f4, align 4
  store i32 %v3_1000a8f4, i32* %r26.global-to-local, align 4
  %v2_1000a8f8 = inttoptr i32 %v0_1000a8ac to i32*
  store i32 %v2_1000a8e8, i32* %v2_1000a8f8, align 4
  %v0_1000a8fc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a8fc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a8fc = add i32 %v1_1000a8fc, 4
  %v3_1000a8fc = inttoptr i32 %v2_1000a8fc to i32*
  store i32 %v0_1000a8fc, i32* %v3_1000a8fc, align 4
  %v0_1000a900 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a900 = add i32 %v0_1000a900, 8
  %v2_1000a900 = inttoptr i32 %v1_1000a900 to i32*
  %v3_1000a900 = load i32, i32* %v2_1000a900, align 4
  store i32 %v3_1000a900, i32* %r9.global-to-local, align 4
  %v1_1000a904 = add i32 %v0_1000a900, 12
  %v2_1000a904 = inttoptr i32 %v1_1000a904 to i32*
  %v3_1000a904 = load i32, i32* %v2_1000a904, align 4
  store i32 %v3_1000a904, i32* %r10.global-to-local, align 4
  %v3_1000a908 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000a908 = add i32 %v3_1000a908, 16
  %v5_1000a908 = inttoptr i32 %v4_1000a908 to i16*
  store i16 %v2_1000a8a8, i16* %v5_1000a908, align 2
  %v0_1000a90c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a90c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a90c = add i32 %v1_1000a90c, 8
  %v3_1000a90c = inttoptr i32 %v2_1000a90c to i32*
  store i32 %v0_1000a90c, i32* %v3_1000a90c, align 4
  %v0_1000a910 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a910 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a910 = add i32 %v1_1000a910, 12
  %v3_1000a910 = inttoptr i32 %v2_1000a910 to i32*
  store i32 %v0_1000a910, i32* %v3_1000a910, align 4
  %v0_1000a914 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a914 = add i32 %v0_1000a914, 18
  %v2_1000a914 = inttoptr i32 %v1_1000a914 to i8*
  %v3_1000a914 = load i8, i8* %v2_1000a914, align 1
  %v2_1000a918 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a918 = add i32 %v2_1000a918, 18
  %v4_1000a918 = inttoptr i32 %v3_1000a918 to i8*
  store i8 %v3_1000a914, i8* %v4_1000a918, align 1
  %v0_1000a91c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a91c, i32* %r29.global-to-local, align 4
  %v0_1000a920 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a920 = add i32 %v0_1000a920, 16
  %v2_1000a920 = inttoptr i32 %v1_1000a920 to i16*
  %v3_1000a920 = load i16, i16* %v2_1000a920, align 2
  %v4_1000a920 = zext i16 %v3_1000a920 to i32
  %v1_1000a924 = add nsw i32 %v4_1000a920, -19
  store i32 %v1_1000a924, i32* @r5, align 4
  store i32 268478764, i32* @lr, align 4
  %v0_1000a928 = call i32 @function_1000ad88()
  %v0_1000a92c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a92c = add i32 %v0_1000a92c, 16
  %v2_1000a92c = inttoptr i32 %v1_1000a92c to i16*
  %v3_1000a92c = load i16, i16* %v2_1000a92c, align 2
  %v4_1000a92c = zext i16 %v3_1000a92c to i32
  %v2_1000a930 = add i32 %v4_1000a92c, %v0_1000a92c
  store i32 %v2_1000a930, i32* %r30.global-to-local, align 4
  %v1_1000a934.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000a938.pre = load i32, i32* @r28, align 4
  %v0_1000a940.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a934 = add i32 %v1_1000a934.pre, %v1_1000a84c
  %v1_1000a938 = load i32, i32* @r23, align 4
  %v2_1000a938 = add i32 %v1_1000a938, %v0_1000a938.pre
  store i32 %v2_1000a938, i32* %r10.global-to-local, align 4
  %v2_1000a93c = icmp ult i32 %v2_1000a930, %v2_1000a934
  %v1_1000a940 = add i32 %v0_1000a940.pre, 19
  store i32 %v1_1000a940, i32* @r3, align 4
  %v1_1000a944 = add i32 %v2_1000a930, 19
  store i32 %v1_1000a944, i32* @r4, align 4
  br i1 %v2_1000a93c, label %dec_label_pc_1000a8a0, label %dec_label_pc_1000a94c

dec_label_pc_1000a94c:                            ; preds = %dec_label_pc_1000a88c, %dec_label_pc_1000a8e8, %dec_label_pc_1000a8b8
  %v1_1000a94c = phi i32 [ %v0_1000a8cc, %dec_label_pc_1000a8b8 ], [ %v0_1000a88c, %dec_label_pc_1000a88c ], [ %v0_1000a940.pre, %dec_label_pc_1000a8e8 ]
  %v0_1000a94c = phi i32 [ %v1_1000a8cc, %dec_label_pc_1000a8b8 ], [ %v0_1000a88c, %dec_label_pc_1000a88c ], [ %v0_1000a938.pre, %dec_label_pc_1000a8e8 ]
  %v2_1000a94c = sub i32 %v1_1000a94c, %v0_1000a94c
  store i32 %v2_1000a94c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a950

dec_label_pc_1000a950:                            ; preds = %dec_label_pc_1000a8d4, %dec_label_pc_1000a884, %dec_label_pc_1000a94c
  %v0_1000a954 = phi i32 [ %v0_1000a954.pre, %dec_label_pc_1000a8d4 ], [ -1, %dec_label_pc_1000a884 ], [ %v2_1000a94c, %dec_label_pc_1000a94c ]
  %v0_1000a950 = load i32, i32* @r1, align 4
  %v1_1000a950 = inttoptr i32 %v0_1000a950 to i32*
  %v2_1000a950 = load i32, i32* %v1_1000a950, align 4
  store i32 %v2_1000a950, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000a954

; uselistorder directives
  uselistorder i32 %v2_1000a930, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000a8e8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a8a8, { 1, 0 }
  uselistorder i32 %v0_1000a85c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000a84c, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 4, 5, 6, 0, 3, 7, 8, 1, 9, 2, 10, 11 }
  uselistorder i32 22, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 14, 15, 16, 8, 9, 10, 11, 12 }
  uselistorder i32 7, { 28, 42, 10, 11, 21, 12, 13, 22, 14, 15, 23, 16, 17, 24, 25, 18, 26, 27, 0, 29, 1, 30, 2, 31, 32, 33, 3, 4, 34, 5, 35, 6, 36, 19, 37, 20, 7, 38, 39, 8, 40, 41, 9, 43 }
  uselistorder i32 19, { 20, 21, 1, 2, 0, 13, 14, 15, 3, 6, 7, 16, 8, 9, 17, 18, 19, 10, 11, 12, 22, 23, 24, 25, 4, 5 }
  uselistorder i32* @r25, { 12, 13, 14, 6, 7, 1, 2, 3, 4, 5, 8, 9, 10, 11, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* @r27, { 24, 16, 17, 39, 40, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 18, 19, 1, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 23, { 12, 7, 15, 0, 1, 8, 2, 3, 9, 10, 11, 4, 5, 13, 6, 14 }
  uselistorder i32* @r22, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* @r23, { 14, 0, 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* @r1, { 7, 8, 2, 3, 4, 1, 5, 0, 9, 6, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 15, 16, 17, 26, 22, 24, 23, 25, 0, 28, 27, 1, 2, 3, 20, 21, 18, 19, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 29 }
  uselistorder i32 27, { 4, 5, 1, 2, 3, 6, 0, 7, 8 }
  uselistorder i32 30, { 6, 7, 3, 2, 1, 0, 4, 5 }
  uselistorder label %dec_label_pc_1000a950, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a94c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a8a0, { 1, 0 }
}

define i32 @function_1000a96c() local_unnamed_addr {
dec_label_pc_1000a96c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a984 = call i32 @__asm_mfcr()
  %v1_1000a988 = and i32 %v0_1000a984, 268435456
  %v3_1000a988 = icmp eq i32 %v1_1000a988, 0
  store i32 %v0_1000a984, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a988, label %dec_label_pc_1000a9a0, label %dec_label_pc_1000a994

dec_label_pc_1000a994:                            ; preds = %dec_label_pc_1000a96c
  %v0_1000a994 = call i32 @function_10008fa0()
  %v0_1000a998 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a998 = inttoptr i32 %v0_1000a994 to i32*
  store i32 %v0_1000a998, i32* %v2_1000a998, align 4
  br label %dec_label_pc_1000a9a0

dec_label_pc_1000a9a0:                            ; preds = %dec_label_pc_1000a96c, %dec_label_pc_1000a994
  %v0_1000a9b0 = phi i32 [ %v0_1000a984, %dec_label_pc_1000a96c ], [ -1, %dec_label_pc_1000a994 ]
  ret i32 %v0_1000a9b0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a9a0, { 1, 0 }
}

define i32 @function_1000a9b4() local_unnamed_addr {
dec_label_pc_1000a9b4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a9cc = call i32 @__asm_mfcr()
  %v1_1000a9d0 = and i32 %v0_1000a9cc, 268435456
  %v3_1000a9d0 = icmp eq i32 %v1_1000a9d0, 0
  store i32 %v0_1000a9cc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a9d0, label %dec_label_pc_1000a9e8, label %dec_label_pc_1000a9dc

dec_label_pc_1000a9dc:                            ; preds = %dec_label_pc_1000a9b4
  %v0_1000a9dc = call i32 @function_10008fa0()
  %v0_1000a9e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a9e0 = inttoptr i32 %v0_1000a9dc to i32*
  store i32 %v0_1000a9e0, i32* %v2_1000a9e0, align 4
  br label %dec_label_pc_1000a9e8

dec_label_pc_1000a9e8:                            ; preds = %dec_label_pc_1000a9b4, %dec_label_pc_1000a9dc
  %v0_1000a9f8 = phi i32 [ %v0_1000a9cc, %dec_label_pc_1000a9b4 ], [ -1, %dec_label_pc_1000a9dc ]
  ret i32 %v0_1000a9f8

; uselistorder directives
  uselistorder label %dec_label_pc_1000a9e8, { 1, 0 }
}

define i32 @function_1000a9fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a9fc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aa14 = call i32 @__asm_mfcr()
  %v1_1000aa18 = and i32 %v0_1000aa14, 268435456
  %v3_1000aa18 = icmp eq i32 %v1_1000aa18, 0
  store i32 %v0_1000aa14, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa18, label %dec_label_pc_1000aa30, label %dec_label_pc_1000aa24

dec_label_pc_1000aa24:                            ; preds = %dec_label_pc_1000a9fc
  %v0_1000aa24 = call i32 @function_10008fa0()
  %v0_1000aa28 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa28 = inttoptr i32 %v0_1000aa24 to i32*
  store i32 %v0_1000aa28, i32* %v2_1000aa28, align 4
  br label %dec_label_pc_1000aa30

dec_label_pc_1000aa30:                            ; preds = %dec_label_pc_1000a9fc, %dec_label_pc_1000aa24
  %v0_1000aa40 = phi i32 [ %v0_1000aa14, %dec_label_pc_1000a9fc ], [ -1, %dec_label_pc_1000aa24 ]
  ret i32 %v0_1000aa40

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa30, { 1, 0 }
}

define i32 @function_1000aa44(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aa44:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aa5c = call i32 @__asm_mfcr()
  %v1_1000aa60 = and i32 %v0_1000aa5c, 268435456
  %v3_1000aa60 = icmp eq i32 %v1_1000aa60, 0
  store i32 %v0_1000aa5c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa60, label %dec_label_pc_1000aa78, label %dec_label_pc_1000aa6c

dec_label_pc_1000aa6c:                            ; preds = %dec_label_pc_1000aa44
  %v0_1000aa6c = call i32 @function_10008fa0()
  %v0_1000aa70 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa70 = inttoptr i32 %v0_1000aa6c to i32*
  store i32 %v0_1000aa70, i32* %v2_1000aa70, align 4
  br label %dec_label_pc_1000aa78

dec_label_pc_1000aa78:                            ; preds = %dec_label_pc_1000aa44, %dec_label_pc_1000aa6c
  %v0_1000aa88 = phi i32 [ %v0_1000aa5c, %dec_label_pc_1000aa44 ], [ -1, %dec_label_pc_1000aa6c ]
  ret i32 %v0_1000aa88

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa78, { 1, 0 }
}

define i32 @function_1000aa8c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000aa8c:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000aa8c = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000aab8 = call i32 @__asm_mfcr()
  %v1_1000aabc = and i32 %v0_1000aab8, 268435456
  %v3_1000aabc = icmp eq i32 %v1_1000aabc, 0
  store i32 %v0_1000aab8, i32* %r31.global-to-local, align 4
  store i32 %v0_1000aab8, i32* %r0.global-to-local, align 4
  br i1 %v3_1000aabc, label %dec_label_pc_1000aae0, label %dec_label_pc_1000aad0

dec_label_pc_1000aad0:                            ; preds = %dec_label_pc_1000aa8c
  %v0_1000aad0 = call i32 @function_10008fa0()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000aad8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aad8 = inttoptr i32 %v0_1000aad0 to i32*
  store i32 %v0_1000aad8, i32* %v2_1000aad8, align 4
  %v0_1000aae4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000aae4

dec_label_pc_1000aae0:                            ; preds = %dec_label_pc_1000aa8c
  %v3_1000aac8 = icmp eq i32 %v0_1000aab8, 0
  br i1 %v3_1000aac8, label %dec_label_pc_1000aaf0, label %dec_label_pc_1000aae4

dec_label_pc_1000aae4:                            ; preds = %dec_label_pc_1000aae0, %dec_label_pc_1000aad0
  %v0_1000aae4 = phi i32 [ %v0_1000aab8, %dec_label_pc_1000aae0 ], [ %v0_1000aae4.pre, %dec_label_pc_1000aad0 ]
  %tmp = icmp slt i32 %v0_1000aae4, 0
  %v1_1000aae8 = zext i1 %tmp to i32
  %v2_1000aae8 = ashr i32 %v0_1000aae4, 31
  %v3_1000aae8 = and i32 %v2_1000aae8, -2
  %v4_1000aae8 = or i32 %v3_1000aae8, %v1_1000aae8
  br label %dec_label_pc_1000aaf8

dec_label_pc_1000aaf0:                            ; preds = %dec_label_pc_1000aae0
  %v3_1000aaf0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000aaf8

dec_label_pc_1000aaf8:                            ; preds = %dec_label_pc_1000aae4, %dec_label_pc_1000aaf0
  %v0_1000ab08 = phi i32 [ %v4_1000aae8, %dec_label_pc_1000aae4 ], [ %v3_1000aaf0, %dec_label_pc_1000aaf0 ]
  store i32 %v0_1000aa8c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ab08

; uselistorder directives
  uselistorder i32 %v0_1000aae4, { 1, 0 }
  uselistorder i32 %v0_1000aab8, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 11, 2, 12, 3, 13, 4, 5 }
  uselistorder label %dec_label_pc_1000aaf8, { 1, 0 }
}

define i32 @function_1000ab0c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab0c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ab24 = call i32 @__asm_mfcr()
  %v1_1000ab28 = and i32 %v0_1000ab24, 268435456
  %v3_1000ab28 = icmp eq i32 %v1_1000ab28, 0
  store i32 %v0_1000ab24, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab28, label %dec_label_pc_1000ab40, label %dec_label_pc_1000ab34

dec_label_pc_1000ab34:                            ; preds = %dec_label_pc_1000ab0c
  %v0_1000ab34 = call i32 @function_10008fa0()
  %v0_1000ab38 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab38 = inttoptr i32 %v0_1000ab34 to i32*
  store i32 %v0_1000ab38, i32* %v2_1000ab38, align 4
  br label %dec_label_pc_1000ab40

dec_label_pc_1000ab40:                            ; preds = %dec_label_pc_1000ab0c, %dec_label_pc_1000ab34
  %v0_1000ab50 = phi i32 [ %v0_1000ab24, %dec_label_pc_1000ab0c ], [ -1, %dec_label_pc_1000ab34 ]
  ret i32 %v0_1000ab50

; uselistorder directives
  uselistorder label %dec_label_pc_1000ab40, { 1, 0 }
}

define i32 @function_1000ab54(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ab54:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000ab70 = load i32, i32* @global_var_1001ba68.334, align 4
  %v3_1000ab74 = icmp eq i32 %v3_1000ab70, 0
  br i1 %v3_1000ab74, label %dec_label_pc_1000ab7c, label %dec_label_pc_1000ab88

dec_label_pc_1000ab7c:                            ; preds = %dec_label_pc_1000ab54
  store i32 268479360, i32* @lr, align 4
  %v1_1000ab7c = call i32 @function_1000b148(i32 0)
  %v1_1000ab80 = icmp slt i32 %v1_1000ab7c, 0
  br i1 %v1_1000ab80, label %dec_label_pc_1000aba8, label %dec_label_pc_1000ab7c.dec_label_pc_1000ab88_crit_edge

dec_label_pc_1000ab7c.dec_label_pc_1000ab88_crit_edge: ; preds = %dec_label_pc_1000ab7c
  %v0_1000ab88.pre = load i32, i32* @r30, align 4
  %v3_1000ab8c.pre = load i32, i32* @global_var_1001ba68.334, align 4
  br label %dec_label_pc_1000ab88

dec_label_pc_1000ab88:                            ; preds = %dec_label_pc_1000ab7c.dec_label_pc_1000ab88_crit_edge, %dec_label_pc_1000ab54
  %v3_1000ab8c = phi i32 [ %v3_1000ab8c.pre, %dec_label_pc_1000ab7c.dec_label_pc_1000ab88_crit_edge ], [ %v3_1000ab70, %dec_label_pc_1000ab54 ]
  %v1_1000ab94 = phi i32 [ %v0_1000ab88.pre, %dec_label_pc_1000ab7c.dec_label_pc_1000ab88_crit_edge ], [ %arg1, %dec_label_pc_1000ab54 ]
  %v3_1000ab88 = icmp eq i32 %v1_1000ab94, 0
  store i32 %v3_1000ab8c, i32* @r31, align 4
  br i1 %v3_1000ab88, label %dec_label_pc_1000abac, label %dec_label_pc_1000ab9c

dec_label_pc_1000ab9c:                            ; preds = %dec_label_pc_1000ab88
  %v2_1000ab94 = add i32 %v1_1000ab94, %v3_1000ab8c
  store i32 268479392, i32* @lr, align 4
  %v1_1000ab9c = call i32 @function_1000b148(i32 %v2_1000ab94)
  %tmp6 = icmp sgt i32 %v1_1000ab9c, -1
  br i1 %tmp6, label %dec_label_pc_1000ab9c.dec_label_pc_1000abac_crit_edge, label %dec_label_pc_1000aba8

dec_label_pc_1000ab9c.dec_label_pc_1000abac_crit_edge: ; preds = %dec_label_pc_1000ab9c
  %v0_1000abb0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000abac

dec_label_pc_1000aba8:                            ; preds = %dec_label_pc_1000ab9c, %dec_label_pc_1000ab7c
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000abac

dec_label_pc_1000abac:                            ; preds = %dec_label_pc_1000ab9c.dec_label_pc_1000abac_crit_edge, %dec_label_pc_1000ab88, %dec_label_pc_1000aba8
  %v0_1000abb0 = phi i32 [ %v0_1000abb0.pre, %dec_label_pc_1000ab9c.dec_label_pc_1000abac_crit_edge ], [ %v3_1000ab8c, %dec_label_pc_1000ab88 ], [ -1, %dec_label_pc_1000aba8 ]
  ret i32 %v0_1000abb0

; uselistorder directives
  uselistorder i32 %v3_1000ab8c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000b148, { 1, 0 }
  uselistorder label %dec_label_pc_1000abac, { 2, 0, 1 }
}

define i32 @function_1000abc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000abc4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000abdc = call i32 @__asm_mfcr()
  %v1_1000abe0 = and i32 %v0_1000abdc, 268435456
  %v3_1000abe0 = icmp eq i32 %v1_1000abe0, 0
  store i32 %v0_1000abdc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000abe0, label %dec_label_pc_1000abf8, label %dec_label_pc_1000abec

dec_label_pc_1000abec:                            ; preds = %dec_label_pc_1000abc4
  %v0_1000abec = call i32 @function_10008fa0()
  %v0_1000abf0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000abf0 = inttoptr i32 %v0_1000abec to i32*
  store i32 %v0_1000abf0, i32* %v2_1000abf0, align 4
  br label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abc4, %dec_label_pc_1000abec
  %v0_1000ac08 = phi i32 [ %v0_1000abdc, %dec_label_pc_1000abc4 ], [ -1, %dec_label_pc_1000abec ]
  ret i32 %v0_1000ac08

; uselistorder directives
  uselistorder label %dec_label_pc_1000abf8, { 1, 0 }
}

define i32 @function_1000ac0c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ac0c:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268479540, i32* @lr, align 4
  %v3_1000ac30 = call i32 @function_10009088(i32 %arg2, i32 0, i32 104)
  %v2_1000ac34 = load i32, i32* %arg1, align 4
  %v1_1000ac38 = add i32 %tmp, 4
  %v2_1000ac38 = inttoptr i32 %v1_1000ac38 to i32*
  %v3_1000ac38 = load i32, i32* %v2_1000ac38, align 4
  store i32 %v3_1000ac38, i32* %r10.global-to-local, align 4
  %v1_1000ac3c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac3c = inttoptr i32 %v1_1000ac3c to i32*
  store i32 %v2_1000ac34, i32* %v2_1000ac3c, align 4
  %v0_1000ac40 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ac40 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac40 = add i32 %v1_1000ac40, 4
  %v3_1000ac40 = inttoptr i32 %v2_1000ac40 to i32*
  store i32 %v0_1000ac40, i32* %v3_1000ac40, align 4
  %v0_1000ac44 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ac44 = add i32 %v0_1000ac44, 8
  %v2_1000ac44 = inttoptr i32 %v1_1000ac44 to i32*
  %v3_1000ac44 = load i32, i32* %v2_1000ac44, align 4
  %v1_1000ac48 = add i32 %v0_1000ac44, 12
  %v2_1000ac48 = inttoptr i32 %v1_1000ac48 to i32*
  %v3_1000ac48 = load i32, i32* %v2_1000ac48, align 4
  store i32 %v3_1000ac48, i32* %r10.global-to-local, align 4
  %v1_1000ac4c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac4c = add i32 %v1_1000ac4c, 8
  %v3_1000ac4c = inttoptr i32 %v2_1000ac4c to i32*
  store i32 %v3_1000ac44, i32* %v3_1000ac4c, align 4
  %v0_1000ac50 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ac50 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac50 = add i32 %v1_1000ac50, 12
  %v3_1000ac50 = inttoptr i32 %v2_1000ac50 to i32*
  store i32 %v0_1000ac50, i32* %v3_1000ac50, align 4
  %v0_1000ac54 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ac54 = add i32 %v0_1000ac54, 16
  %v2_1000ac54 = inttoptr i32 %v1_1000ac54 to i32*
  %v3_1000ac54 = load i32, i32* %v2_1000ac54, align 4
  %v1_1000ac58 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac58 = add i32 %v1_1000ac58, 16
  %v3_1000ac58 = inttoptr i32 %v2_1000ac58 to i32*
  store i32 %v3_1000ac54, i32* %v3_1000ac58, align 4
  %v0_1000ac5c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ac5c = add i32 %v0_1000ac5c, 20
  %v2_1000ac5c = inttoptr i32 %v1_1000ac5c to i32*
  %v3_1000ac5c = load i32, i32* %v2_1000ac5c, align 4
  %v1_1000ac60 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac60 = add i32 %v1_1000ac60, 20
  %v3_1000ac60 = inttoptr i32 %v2_1000ac60 to i32*
  store i32 %v3_1000ac5c, i32* %v3_1000ac60, align 4
  %v0_1000ac64 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ac64 = add i32 %v0_1000ac64, 24
  %v2_1000ac64 = inttoptr i32 %v1_1000ac64 to i32*
  %v3_1000ac64 = load i32, i32* %v2_1000ac64, align 4
  %v1_1000ac68 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac68 = add i32 %v1_1000ac68, 24
  %v3_1000ac68 = inttoptr i32 %v2_1000ac68 to i32*
  store i32 %v3_1000ac64, i32* %v3_1000ac68, align 4
  %v0_1000ac6c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ac6c = add i32 %v0_1000ac6c, 28
  %v2_1000ac6c = inttoptr i32 %v1_1000ac6c to i32*
  %v3_1000ac6c = load i32, i32* %v2_1000ac6c, align 4
  %v1_1000ac70 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac70 = add i32 %v1_1000ac70, 28
  %v3_1000ac70 = inttoptr i32 %v2_1000ac70 to i32*
  store i32 %v3_1000ac6c, i32* %v3_1000ac70, align 4
  %v0_1000ac74 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ac74 = add i32 %v0_1000ac74, 32
  %v2_1000ac74 = inttoptr i32 %v1_1000ac74 to i32*
  %v3_1000ac74 = load i32, i32* %v2_1000ac74, align 4
  %v1_1000ac78 = add i32 %v0_1000ac74, 36
  %v2_1000ac78 = inttoptr i32 %v1_1000ac78 to i32*
  %v3_1000ac78 = load i32, i32* %v2_1000ac78, align 4
  store i32 %v3_1000ac78, i32* %r10.global-to-local, align 4
  %v1_1000ac7c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac7c = add i32 %v1_1000ac7c, 32
  %v3_1000ac7c = inttoptr i32 %v2_1000ac7c to i32*
  store i32 %v3_1000ac74, i32* %v3_1000ac7c, align 4
  %v0_1000ac80 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ac80 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac80 = add i32 %v1_1000ac80, 36
  %v3_1000ac80 = inttoptr i32 %v2_1000ac80 to i32*
  store i32 %v0_1000ac80, i32* %v3_1000ac80, align 4
  %v0_1000ac84 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ac84 = add i32 %v0_1000ac84, 48
  %v2_1000ac84 = inttoptr i32 %v1_1000ac84 to i32*
  %v3_1000ac84 = load i32, i32* %v2_1000ac84, align 4
  %v1_1000ac88 = add i32 %v0_1000ac84, 52
  %v2_1000ac88 = inttoptr i32 %v1_1000ac88 to i32*
  %v3_1000ac88 = load i32, i32* %v2_1000ac88, align 4
  store i32 %v3_1000ac88, i32* %r10.global-to-local, align 4
  %v1_1000ac8c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac8c = add i32 %v1_1000ac8c, 48
  %v3_1000ac8c = inttoptr i32 %v2_1000ac8c to i32*
  store i32 %v3_1000ac84, i32* %v3_1000ac8c, align 4
  %v0_1000ac90 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ac90 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac90 = add i32 %v1_1000ac90, 52
  %v3_1000ac90 = inttoptr i32 %v2_1000ac90 to i32*
  store i32 %v0_1000ac90, i32* %v3_1000ac90, align 4
  %v0_1000ac94 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ac94 = add i32 %v0_1000ac94, 56
  %v2_1000ac94 = inttoptr i32 %v1_1000ac94 to i32*
  %v3_1000ac94 = load i32, i32* %v2_1000ac94, align 4
  %v1_1000ac98 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ac98 = add i32 %v1_1000ac98, 56
  %v3_1000ac98 = inttoptr i32 %v2_1000ac98 to i32*
  store i32 %v3_1000ac94, i32* %v3_1000ac98, align 4
  %v0_1000ac9c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ac9c = add i32 %v0_1000ac9c, 64
  %v2_1000ac9c = inttoptr i32 %v1_1000ac9c to i32*
  %v3_1000ac9c = load i32, i32* %v2_1000ac9c, align 4
  %v1_1000aca0 = add i32 %v0_1000ac9c, 68
  %v2_1000aca0 = inttoptr i32 %v1_1000aca0 to i32*
  %v3_1000aca0 = load i32, i32* %v2_1000aca0, align 4
  store i32 %v3_1000aca0, i32* %r10.global-to-local, align 4
  %v1_1000aca4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aca4 = add i32 %v1_1000aca4, 64
  %v3_1000aca4 = inttoptr i32 %v2_1000aca4 to i32*
  store i32 %v3_1000ac9c, i32* %v3_1000aca4, align 4
  %v0_1000aca8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000aca8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aca8 = add i32 %v1_1000aca8, 68
  %v3_1000aca8 = inttoptr i32 %v2_1000aca8 to i32*
  store i32 %v0_1000aca8, i32* %v3_1000aca8, align 4
  %v0_1000acac = load i32, i32* %r28.global-to-local, align 4
  %v1_1000acac = add i32 %v0_1000acac, 72
  %v2_1000acac = inttoptr i32 %v1_1000acac to i32*
  %v3_1000acac = load i32, i32* %v2_1000acac, align 4
  %v1_1000acb0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000acb0 = add i32 %v1_1000acb0, 72
  %v3_1000acb0 = inttoptr i32 %v2_1000acb0 to i32*
  store i32 %v3_1000acac, i32* %v3_1000acb0, align 4
  %v0_1000acb4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000acb4 = add i32 %v0_1000acb4, 80
  %v2_1000acb4 = inttoptr i32 %v1_1000acb4 to i32*
  %v3_1000acb4 = load i32, i32* %v2_1000acb4, align 4
  %v1_1000acb8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000acb8 = add i32 %v1_1000acb8, 80
  %v3_1000acb8 = inttoptr i32 %v2_1000acb8 to i32*
  store i32 %v3_1000acb4, i32* %v3_1000acb8, align 4
  %v0_1000acbc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000acbc = add i32 %v0_1000acbc, 88
  %v2_1000acbc = inttoptr i32 %v1_1000acbc to i32*
  %v3_1000acbc = load i32, i32* %v2_1000acbc, align 4
  %v1_1000acc0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000acc0 = add i32 %v1_1000acc0, 88
  %v3_1000acc0 = inttoptr i32 %v2_1000acc0 to i32*
  store i32 %v3_1000acbc, i32* %v3_1000acc0, align 4
  ret i32 %v3_1000ac30

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000acd8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000acd8:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000acdc = load i32, i32* @lr, align 4
  store i32 %v0_1000acdc, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268479744, i32* @lr, align 4
  %v3_1000acfc = call i32 @function_10009088(i32 %arg2, i32 0, i32 88)
  %v0_1000ad00 = load i32, i32* @r28, align 4
  %v1_1000ad00 = inttoptr i32 %v0_1000ad00 to i32*
  %v2_1000ad00 = load i32, i32* %v1_1000ad00, align 4
  store i32 %v2_1000ad00, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000ad08 = load i32, i32* @r29, align 4
  %v2_1000ad08 = add i32 %v1_1000ad08, 4
  %v3_1000ad08 = inttoptr i32 %v2_1000ad08 to i32*
  store i32 %v2_1000ad00, i32* %v3_1000ad08, align 4
  %v0_1000ad0c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ad0c = load i32, i32* @r29, align 4
  %v2_1000ad0c = inttoptr i32 %v1_1000ad0c to i32*
  store i32 %v0_1000ad0c, i32* %v2_1000ad0c, align 4
  %v0_1000ad10 = load i32, i32* @r28, align 4
  %v1_1000ad10 = add i32 %v0_1000ad10, 4
  %v2_1000ad10 = inttoptr i32 %v1_1000ad10 to i32*
  %v3_1000ad10 = load i32, i32* %v2_1000ad10, align 4
  store i32 %v3_1000ad10, i32* %r0.global-to-local, align 4
  %v1_1000ad14 = load i32, i32* @r29, align 4
  %v2_1000ad14 = add i32 %v1_1000ad14, 12
  %v3_1000ad14 = inttoptr i32 %v2_1000ad14 to i32*
  store i32 %v3_1000ad10, i32* %v3_1000ad14, align 4
  %v0_1000ad18 = load i32, i32* @r28, align 4
  %v1_1000ad18 = add i32 %v0_1000ad18, 8
  %v2_1000ad18 = inttoptr i32 %v1_1000ad18 to i32*
  %v3_1000ad18 = load i32, i32* %v2_1000ad18, align 4
  store i32 %v3_1000ad18, i32* %r0.global-to-local, align 4
  %v1_1000ad1c = load i32, i32* @r29, align 4
  %v2_1000ad1c = add i32 %v1_1000ad1c, 16
  %v3_1000ad1c = inttoptr i32 %v2_1000ad1c to i32*
  store i32 %v3_1000ad18, i32* %v3_1000ad1c, align 4
  %v0_1000ad20 = load i32, i32* @r28, align 4
  %v1_1000ad20 = add i32 %v0_1000ad20, 12
  %v2_1000ad20 = inttoptr i32 %v1_1000ad20 to i16*
  %v3_1000ad20 = load i16, i16* %v2_1000ad20, align 2
  %v4_1000ad20 = zext i16 %v3_1000ad20 to i32
  store i32 %v4_1000ad20, i32* %r0.global-to-local, align 4
  %v1_1000ad24 = load i32, i32* @r29, align 4
  %v2_1000ad24 = add i32 %v1_1000ad24, 20
  %v3_1000ad24 = inttoptr i32 %v2_1000ad24 to i32*
  store i32 %v4_1000ad20, i32* %v3_1000ad24, align 4
  %v0_1000ad28 = load i32, i32* @r28, align 4
  %v1_1000ad28 = add i32 %v0_1000ad28, 16
  %v2_1000ad28 = inttoptr i32 %v1_1000ad28 to i32*
  %v3_1000ad28 = load i32, i32* %v2_1000ad28, align 4
  store i32 %v3_1000ad28, i32* %r0.global-to-local, align 4
  %v1_1000ad2c = load i32, i32* @r29, align 4
  %v2_1000ad2c = add i32 %v1_1000ad2c, 24
  %v3_1000ad2c = inttoptr i32 %v2_1000ad2c to i32*
  store i32 %v3_1000ad28, i32* %v3_1000ad2c, align 4
  %v0_1000ad30 = load i32, i32* @r28, align 4
  %v1_1000ad30 = add i32 %v0_1000ad30, 20
  %v2_1000ad30 = inttoptr i32 %v1_1000ad30 to i32*
  %v3_1000ad30 = load i32, i32* %v2_1000ad30, align 4
  store i32 %v3_1000ad30, i32* %r0.global-to-local, align 4
  %v1_1000ad34 = load i32, i32* @r29, align 4
  %v2_1000ad34 = add i32 %v1_1000ad34, 28
  %v3_1000ad34 = inttoptr i32 %v2_1000ad34 to i32*
  store i32 %v3_1000ad30, i32* %v3_1000ad34, align 4
  %v0_1000ad38 = load i32, i32* @r28, align 4
  %v1_1000ad38 = add i32 %v0_1000ad38, 24
  %v2_1000ad38 = inttoptr i32 %v1_1000ad38 to i32*
  %v3_1000ad38 = load i32, i32* %v2_1000ad38, align 4
  store i32 %v3_1000ad38, i32* %r0.global-to-local, align 4
  %v0_1000ad3c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ad3c = load i32, i32* @r29, align 4
  %v2_1000ad3c = add i32 %v1_1000ad3c, 32
  %v3_1000ad3c = inttoptr i32 %v2_1000ad3c to i32*
  store i32 %v0_1000ad3c, i32* %v3_1000ad3c, align 4
  %v0_1000ad40 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ad40 = load i32, i32* @r29, align 4
  %v2_1000ad40 = add i32 %v1_1000ad40, 36
  %v3_1000ad40 = inttoptr i32 %v2_1000ad40 to i32*
  store i32 %v0_1000ad40, i32* %v3_1000ad40, align 4
  %v0_1000ad44 = load i32, i32* @r28, align 4
  %v1_1000ad44 = add i32 %v0_1000ad44, 28
  %v2_1000ad44 = inttoptr i32 %v1_1000ad44 to i32*
  %v3_1000ad44 = load i32, i32* %v2_1000ad44, align 4
  store i32 %v3_1000ad44, i32* %r0.global-to-local, align 4
  %v1_1000ad48 = load i32, i32* @r29, align 4
  %v2_1000ad48 = add i32 %v1_1000ad48, 44
  %v3_1000ad48 = inttoptr i32 %v2_1000ad48 to i32*
  store i32 %v3_1000ad44, i32* %v3_1000ad48, align 4
  %v0_1000ad4c = load i32, i32* @r28, align 4
  %v1_1000ad4c = add i32 %v0_1000ad4c, 32
  %v2_1000ad4c = inttoptr i32 %v1_1000ad4c to i32*
  %v3_1000ad4c = load i32, i32* %v2_1000ad4c, align 4
  store i32 %v3_1000ad4c, i32* %r0.global-to-local, align 4
  %v1_1000ad50 = load i32, i32* @r29, align 4
  %v2_1000ad50 = add i32 %v1_1000ad50, 48
  %v3_1000ad50 = inttoptr i32 %v2_1000ad50 to i32*
  store i32 %v3_1000ad4c, i32* %v3_1000ad50, align 4
  %v0_1000ad54 = load i32, i32* @r28, align 4
  %v1_1000ad54 = add i32 %v0_1000ad54, 36
  %v2_1000ad54 = inttoptr i32 %v1_1000ad54 to i32*
  %v3_1000ad54 = load i32, i32* %v2_1000ad54, align 4
  store i32 %v3_1000ad54, i32* %r0.global-to-local, align 4
  %v1_1000ad58 = load i32, i32* @r29, align 4
  %v2_1000ad58 = add i32 %v1_1000ad58, 52
  %v3_1000ad58 = inttoptr i32 %v2_1000ad58 to i32*
  store i32 %v3_1000ad54, i32* %v3_1000ad58, align 4
  %v0_1000ad5c = load i32, i32* @r28, align 4
  %v1_1000ad5c = add i32 %v0_1000ad5c, 40
  %v2_1000ad5c = inttoptr i32 %v1_1000ad5c to i32*
  %v3_1000ad5c = load i32, i32* %v2_1000ad5c, align 4
  store i32 %v3_1000ad5c, i32* %r0.global-to-local, align 4
  %v1_1000ad60 = load i32, i32* @r29, align 4
  %v2_1000ad60 = add i32 %v1_1000ad60, 56
  %v3_1000ad60 = inttoptr i32 %v2_1000ad60 to i32*
  store i32 %v3_1000ad5c, i32* %v3_1000ad60, align 4
  %v0_1000ad64 = load i32, i32* @r28, align 4
  %v1_1000ad64 = add i32 %v0_1000ad64, 48
  %v2_1000ad64 = inttoptr i32 %v1_1000ad64 to i32*
  %v3_1000ad64 = load i32, i32* %v2_1000ad64, align 4
  store i32 %v3_1000ad64, i32* %r0.global-to-local, align 4
  %v1_1000ad68 = load i32, i32* @r29, align 4
  %v2_1000ad68 = add i32 %v1_1000ad68, 64
  %v3_1000ad68 = inttoptr i32 %v2_1000ad68 to i32*
  store i32 %v3_1000ad64, i32* %v3_1000ad68, align 4
  %v0_1000ad6c = load i32, i32* @r28, align 4
  %v1_1000ad6c = add i32 %v0_1000ad6c, 56
  %v2_1000ad6c = inttoptr i32 %v1_1000ad6c to i32*
  %v3_1000ad6c = load i32, i32* %v2_1000ad6c, align 4
  %v1_1000ad70 = load i32, i32* @r29, align 4
  %v2_1000ad70 = add i32 %v1_1000ad70, 72
  %v3_1000ad70 = inttoptr i32 %v2_1000ad70 to i32*
  store i32 %v3_1000ad6c, i32* %v3_1000ad70, align 4
  store i32 %v0_1000acdc, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000acfc

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 15, 0, 1, 12, 16, 17, 18, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 9, 0, 4, 1, 5, 6, 7, 8, 10, 3, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 2, 3, 0, 1 }
  uselistorder i32 24, { 19, 20, 6, 7, 0, 1, 8, 29, 30, 31, 21, 22, 23, 9, 10, 11, 12, 13, 15, 16, 17, 18, 14, 24, 25, 2, 26, 3, 27, 4, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 5 }
  uselistorder i32 20, { 28, 29, 19, 20, 21, 22, 30, 31, 32, 33, 23, 5, 0, 1, 24, 25, 2, 26, 27, 6, 7, 8, 9, 34, 10, 35, 36, 37, 38, 39, 11, 40, 41, 42, 43, 44, 45, 46, 47, 12, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 13, 58, 59, 60, 61, 62, 63, 64, 65, 14, 66, 67, 68, 69, 70, 71, 15, 72, 73, 74, 75, 76, 77, 78, 16, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 3, 17, 91, 92, 93, 4, 18, 94, 95, 96 }
  uselistorder i32 16, { 87, 88, 73, 74, 89, 90, 91, 92, 93, 20, 86, 75, 171, 172, 94, 95, 46, 47, 48, 76, 49, 50, 77, 78, 99, 96, 79, 80, 51, 23, 82, 83, 18, 0, 19, 1, 2, 84, 3, 81, 52, 85, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 24, 154, 155, 156, 157, 158, 4, 25, 97, 5, 6, 98, 100, 101, 26, 102, 103, 104, 105, 106, 107, 108, 27, 109, 110, 111, 29, 112, 28, 113, 114, 31, 115, 116, 7, 117, 118, 119, 30, 120, 121, 33, 122, 123, 124, 125, 126, 32, 37, 127, 128, 129, 8, 130, 131, 9, 10, 21, 133, 132, 34, 36, 35, 41, 134, 135, 136, 11, 137, 138, 12, 13, 22, 140, 139, 38, 40, 39, 141, 43, 142, 42, 143, 144, 14, 145, 44, 146, 147, 148, 15, 149, 152, 153, 150, 151, 159, 160, 16, 161, 45, 162, 163, 164, 17, 165, 168, 169, 166, 167, 170 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000ad88() local_unnamed_addr {
dec_label_pc_1000ad88:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000ad88 = load i32, i32* @r5, align 4
  %v1_1000ad88 = call i32 @__asm_rlwinm.(i32 %v0_1000ad88, i32 29, i32 3, i32 31)
  store i32 %v1_1000ad88, i32* %r9.global-to-local, align 4
  %v4_1000ad88 = icmp eq i32 %v1_1000ad88, 0
  %v0_1000ad8c = load i32, i32* @r4, align 4
  %v1_1000ad8c = add i32 %v0_1000ad8c, -4
  store i32 %v1_1000ad8c, i32* %r4.global-to-local, align 4
  %v0_1000ad90 = load i32, i32* @r3, align 4
  %v1_1000ad90 = add i32 %v0_1000ad90, -4
  store i32 %v1_1000ad90, i32* @r11, align 4
  br i1 %v4_1000ad88, label %dec_label_pc_1000adb8, label %dec_label_pc_1000ad98

dec_label_pc_1000ad98:                            ; preds = %dec_label_pc_1000ad88
  %v1_1000ad98 = urem i32 %v1_1000ad90, 4
  %v3_1000ad98 = icmp eq i32 %v1_1000ad98, 0
  br i1 %v3_1000ad98, label %dec_label_pc_1000ada0, label %dec_label_pc_1000adf4

dec_label_pc_1000ada0:                            ; preds = %dec_label_pc_1000ae14.dec_label_pc_1000ada0_crit_edge, %dec_label_pc_1000ad98
  %v1_1000adac.pre = phi i32 [ %v1_1000ad90, %dec_label_pc_1000ad98 ], [ %v1_1000adac.pre.pre, %dec_label_pc_1000ae14.dec_label_pc_1000ada0_crit_edge ]
  %v0_1000ada0 = phi i32 [ %v1_1000ad88, %dec_label_pc_1000ad98 ], [ %v1_1000ae14, %dec_label_pc_1000ae14.dec_label_pc_1000ada0_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000ad98 ], [ %v2_1000adfc, %dec_label_pc_1000ae14.dec_label_pc_1000ada0_crit_edge ]
  store i32 %v0_1000ada0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ada4

dec_label_pc_1000ada4:                            ; preds = %dec_label_pc_1000ada4, %dec_label_pc_1000ada0
  %v1_1000adac = phi i32 [ %v2_1000adb0, %dec_label_pc_1000ada4 ], [ %v1_1000adac.pre, %dec_label_pc_1000ada0 ]
  %v0_1000ada4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ada4 = add i32 %v0_1000ada4, 4
  %v2_1000ada4 = inttoptr i32 %v1_1000ada4 to i32*
  %v3_1000ada4 = load i32, i32* %v2_1000ada4, align 4
  %v1_1000ada8 = add i32 %v0_1000ada4, 8
  %v2_1000ada8 = inttoptr i32 %v1_1000ada8 to i32*
  %v3_1000ada8 = load i32, i32* %v2_1000ada8, align 4
  store i32 %v3_1000ada8, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ada8, i32* %r4.global-to-local, align 4
  %v2_1000adac = add i32 %v1_1000adac, 4
  %v3_1000adac = inttoptr i32 %v2_1000adac to i32*
  store i32 %v3_1000ada4, i32* %v3_1000adac, align 4
  %v0_1000adb0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000adb0 = load i32, i32* @r11, align 4
  %v2_1000adb0 = add i32 %v1_1000adb0, 8
  %v3_1000adb0 = inttoptr i32 %v2_1000adb0 to i32*
  store i32 %v0_1000adb0, i32* %v3_1000adb0, align 4
  store i32 %v2_1000adb0, i32* @r11, align 4
  %v0_1000adb4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000adb4 = add i32 %v0_1000adb4, -1
  store i32 %v1_1000adb4, i32* %ctr.global-to-local, align 4
  %v2_1000adb4 = icmp eq i32 %v1_1000adb4, 0
  br i1 %v2_1000adb4, label %dec_label_pc_1000adb8, label %dec_label_pc_1000ada4

dec_label_pc_1000adb8:                            ; preds = %dec_label_pc_1000ada4, %dec_label_pc_1000ae14, %dec_label_pc_1000ad88
  %.1 = phi i32 [ undef, %dec_label_pc_1000ad88 ], [ %v2_1000adfc, %dec_label_pc_1000ae14 ], [ %.0, %dec_label_pc_1000ada4 ]
  %v1_1000adb8 = urem i32 %.1, 8
  store i32 %v1_1000adb8, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000adb8, 4
  br i1 %tmp, label %dec_label_pc_1000add0, label %dec_label_pc_1000adc4

dec_label_pc_1000adc4:                            ; preds = %dec_label_pc_1000adb8
  %v0_1000adc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000adc4 = add i32 %v0_1000adc4, 4
  %v2_1000adc4 = inttoptr i32 %v1_1000adc4 to i32*
  %v3_1000adc4 = load i32, i32* %v2_1000adc4, align 4
  store i32 %v1_1000adc4, i32* %r4.global-to-local, align 4
  %v1_1000adc8 = add nsw i32 %v1_1000adb8, -4
  store i32 %v1_1000adc8, i32* @r5, align 4
  %v1_1000adcc = load i32, i32* @r11, align 4
  %v2_1000adcc = add i32 %v1_1000adcc, 4
  %v3_1000adcc = inttoptr i32 %v2_1000adcc to i32*
  store i32 %v3_1000adc4, i32* %v3_1000adcc, align 4
  store i32 %v2_1000adcc, i32* @r11, align 4
  %v0_1000add0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000add0

dec_label_pc_1000add0:                            ; preds = %dec_label_pc_1000adb8, %dec_label_pc_1000adc4
  %v0_1000add0 = phi i32 [ %v1_1000adb8, %dec_label_pc_1000adb8 ], [ %v0_1000add0.pre, %dec_label_pc_1000adc4 ]
  %v3_1000add0 = icmp eq i32 %v0_1000add0, 0
  %v0_1000add4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000add0, i32 %v0_1000add4)
  %v0_1000add8 = load i32, i32* @r5, align 4
  store i32 %v0_1000add8, i32* %ctr.global-to-local, align 4
  %v0_1000addc = load i32, i32* %r4.global-to-local, align 4
  %v1_1000addc = add i32 %v0_1000addc, 3
  store i32 %v1_1000addc, i32* %r4.global-to-local, align 4
  %v0_1000ade0 = load i32, i32* @r11, align 4
  %v1_1000ade0 = add i32 %v0_1000ade0, 3
  store i32 %v1_1000ade0, i32* %r9.global-to-local, align 4
  %v1_1000ade49 = add i32 %v0_1000addc, 4
  %v2_1000ade410 = inttoptr i32 %v1_1000ade49 to i8*
  %v3_1000ade411 = load i8, i8* %v2_1000ade410, align 1
  store i32 %v1_1000ade49, i32* %r4.global-to-local, align 4
  %v3_1000ade813 = add i32 %v0_1000ade0, 4
  %v4_1000ade814 = inttoptr i32 %v3_1000ade813 to i8*
  store i8 %v3_1000ade411, i8* %v4_1000ade814, align 1
  store i32 %v3_1000ade813, i32* %r9.global-to-local, align 4
  %v0_1000adec15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000adec16 = add i32 %v0_1000adec15, -1
  store i32 %v1_1000adec16, i32* %ctr.global-to-local, align 4
  %v2_1000adec17 = icmp eq i32 %v1_1000adec16, 0
  br i1 %v2_1000adec17, label %dec_label_pc_1000ae20, label %dec_label_pc_1000ade4.dec_label_pc_1000ade4_crit_edge

dec_label_pc_1000ade4.dec_label_pc_1000ade4_crit_edge: ; preds = %dec_label_pc_1000add0, %dec_label_pc_1000ade4.dec_label_pc_1000ade4_crit_edge
  %v3_1000ade818 = phi i32 [ %v3_1000ade8, %dec_label_pc_1000ade4.dec_label_pc_1000ade4_crit_edge ], [ %v3_1000ade813, %dec_label_pc_1000add0 ]
  %v0_1000ade4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ade4 = add i32 %v0_1000ade4.pre, 1
  %v2_1000ade4 = inttoptr i32 %v1_1000ade4 to i8*
  %v3_1000ade4 = load i8, i8* %v2_1000ade4, align 1
  store i32 %v1_1000ade4, i32* %r4.global-to-local, align 4
  %v3_1000ade8 = add i32 %v3_1000ade818, 1
  %v4_1000ade8 = inttoptr i32 %v3_1000ade8 to i8*
  store i8 %v3_1000ade4, i8* %v4_1000ade8, align 1
  store i32 %v3_1000ade8, i32* %r9.global-to-local, align 4
  %v0_1000adec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000adec = add i32 %v0_1000adec, -1
  store i32 %v1_1000adec, i32* %ctr.global-to-local, align 4
  %v2_1000adec = icmp eq i32 %v1_1000adec, 0
  br i1 %v2_1000adec, label %dec_label_pc_1000ae20, label %dec_label_pc_1000ade4.dec_label_pc_1000ade4_crit_edge

dec_label_pc_1000adf4:                            ; preds = %dec_label_pc_1000ad98
  %v1_1000adf4 = sub nsw i32 4, %v1_1000ad98
  store i32 %v1_1000adf4, i32* %ctr.global-to-local, align 4
  %v1_1000adfc = load i32, i32* @r5, align 4
  %v2_1000adfc = sub i32 %v1_1000adfc, %v1_1000adf4
  br label %dec_label_pc_1000ae00

dec_label_pc_1000ae00:                            ; preds = %dec_label_pc_1000ae00.dec_label_pc_1000ae00_crit_edge, %dec_label_pc_1000adf4
  %v2_1000ae08 = phi i32 [ %v1_1000ae0c, %dec_label_pc_1000ae00.dec_label_pc_1000ae00_crit_edge ], [ %v1_1000ad90, %dec_label_pc_1000adf4 ]
  %v0_1000ae00 = phi i32 [ %v0_1000ae00.pre, %dec_label_pc_1000ae00.dec_label_pc_1000ae00_crit_edge ], [ %v1_1000ad8c, %dec_label_pc_1000adf4 ]
  %v1_1000ae00 = add i32 %v0_1000ae00, 4
  %v2_1000ae00 = inttoptr i32 %v1_1000ae00 to i8*
  %v3_1000ae00 = load i8, i8* %v2_1000ae00, align 1
  %v1_1000ae04 = add i32 %v0_1000ae00, 1
  store i32 %v1_1000ae04, i32* %r4.global-to-local, align 4
  %v3_1000ae08 = add i32 %v2_1000ae08, 4
  %v4_1000ae08 = inttoptr i32 %v3_1000ae08 to i8*
  store i8 %v3_1000ae00, i8* %v4_1000ae08, align 1
  %v0_1000ae0c = load i32, i32* @r11, align 4
  %v1_1000ae0c = add i32 %v0_1000ae0c, 1
  store i32 %v1_1000ae0c, i32* @r11, align 4
  %v0_1000ae10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae10 = add i32 %v0_1000ae10, -1
  store i32 %v1_1000ae10, i32* %ctr.global-to-local, align 4
  %v2_1000ae10 = icmp eq i32 %v1_1000ae10, 0
  br i1 %v2_1000ae10, label %dec_label_pc_1000ae14, label %dec_label_pc_1000ae00.dec_label_pc_1000ae00_crit_edge

dec_label_pc_1000ae00.dec_label_pc_1000ae00_crit_edge: ; preds = %dec_label_pc_1000ae00
  %v0_1000ae00.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ae00

dec_label_pc_1000ae14:                            ; preds = %dec_label_pc_1000ae00
  %v1_1000ae14 = call i32 @__asm_rlwinm.(i32 %v2_1000adfc, i32 29, i32 3, i32 31)
  store i32 %v1_1000ae14, i32* %r9.global-to-local, align 4
  %v4_1000ae14 = icmp eq i32 %v1_1000ae14, 0
  br i1 %v4_1000ae14, label %dec_label_pc_1000adb8, label %dec_label_pc_1000ae14.dec_label_pc_1000ada0_crit_edge

dec_label_pc_1000ae14.dec_label_pc_1000ada0_crit_edge: ; preds = %dec_label_pc_1000ae14
  %v1_1000adac.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000ada0

dec_label_pc_1000ae20:                            ; preds = %dec_label_pc_1000ade4.dec_label_pc_1000ade4_crit_edge, %dec_label_pc_1000add0
  %v0_1000ae20 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ae20

; uselistorder directives
  uselistorder i32 %v1_1000ae14, { 1, 2, 0 }
  uselistorder i32 %v1_1000ae10, { 1, 0 }
  uselistorder i32 %v1_1000ae0c, { 1, 0 }
  uselistorder i32 %v0_1000ae00, { 1, 0 }
  uselistorder i32 %v2_1000adfc, { 2, 1, 0 }
  uselistorder i32 %v1_1000adec, { 1, 0 }
  uselistorder i32 %v3_1000ade8, { 1, 2, 0 }
  uselistorder i32 %v1_1000adb8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000adb4, { 1, 0 }
  uselistorder i32 %v2_1000adb0, { 1, 2, 0 }
  uselistorder i32 %v1_1000ad98, { 1, 0 }
  uselistorder i32 %v1_1000ad90, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 31, 32, 27, 29, 28, 30, 2, 3, 35, 36, 33, 34, 37, 38, 25, 26, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 17, 18, 23, 24 }
  uselistorder label %dec_label_pc_1000ade4.dec_label_pc_1000ade4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000add0, { 1, 0 }
  uselistorder label %dec_label_pc_1000adb8, { 1, 0, 2 }
}

define i32 @function_1000ae24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000ae24:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268480064, i32* @lr, align 4
  %v0_1000ae3c = call i32 @function_1000ad88()
  %v0_1000ae44 = load i32, i32* @r28, align 4
  %v1_1000ae44 = load i32, i32* @r29, align 4
  %v2_1000ae44 = add i32 %v1_1000ae44, %v0_1000ae44
  ret i32 %v2_1000ae44

; uselistorder directives
  uselistorder i32* @r28, { 7, 8, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 1, 73, 74, 75, 76, 77, 78, 295, 296, 297, 298, 299, 2, 48, 49, 50, 6, 51, 259, 260, 261, 262, 263, 264, 265, 266, 267, 281, 282, 283, 284, 9, 10, 11, 12, 13, 79, 80, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 31, 32, 33, 24, 3, 25, 26, 27, 28, 29, 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 81, 82, 83, 84, 85, 86, 87, 4, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 285, 286, 288, 289, 5, 290, 291, 292, 293, 294 }
}

define i32 @function_1000ae58(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000ae58:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000ae58 = icmp eq i8* %arg1, null
  br i1 %v3_1000ae58, label %dec_label_pc_1000af10, label %dec_label_pc_1000ae60

dec_label_pc_1000ae60:                            ; preds = %dec_label_pc_1000ae58
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000ae74.pre = load i32, i32* bitcast (i32** @global_var_1001b9f4.316 to i32*), align 4
  br label %dec_label_pc_1000ae70

dec_label_pc_1000ae70:                            ; preds = %dec_label_pc_1000ae60, %dec_label_pc_1000aee8
  %v0_1000aee8 = phi i32 [ 0, %dec_label_pc_1000ae60 ], [ %v2_1000aef0, %dec_label_pc_1000aee8 ]
  %v0_1000aeec = phi i32 [ 1, %dec_label_pc_1000ae60 ], [ %v1_1000aeec, %dec_label_pc_1000aee8 ]
  %v0_1000ae70 = phi i32 [ %tmp, %dec_label_pc_1000ae60 ], [ %v0_1000ae703, %dec_label_pc_1000aee8 ]
  %v1_1000ae70 = inttoptr i32 %v0_1000ae70 to i8*
  %v2_1000ae70 = load i8, i8* %v1_1000ae70, align 1
  %v3_1000ae70 = zext i8 %v2_1000ae70 to i32
  %v1_1000ae78 = mul nuw nsw i32 %v3_1000ae70, 2
  %v2_1000ae7c = add i32 %v1_1000ae78, %v3_1000ae74.pre
  %v3_1000ae7c = inttoptr i32 %v2_1000ae7c to i16*
  %v4_1000ae7c = load i16, i16* %v3_1000ae7c, align 2
  %v1_1000ae80 = and i16 %v4_1000ae7c, 8
  %v3_1000ae80 = icmp eq i16 %v1_1000ae80, 0
  br i1 %v3_1000ae80, label %dec_label_pc_1000af10, label %dec_label_pc_1000ae88

dec_label_pc_1000ae88:                            ; preds = %dec_label_pc_1000ae70
  br label %dec_label_pc_1000aea0

dec_label_pc_1000ae90:                            ; preds = %dec_label_pc_1000aea0
  %v1_1000aea4 = mul i32 %v1_1000aef0, 10
  %v2_1000aeac = add i32 %v3_1000aea0, %v1_1000aea4
  %v1_1000ae90 = add i32 %v2_1000aeac, -48
  %v1_1000ae94 = add i32 %v0_1000aed8, 1
  %v2_1000ae98 = icmp sgt i32 %v1_1000ae90, 255
  br i1 %v2_1000ae98, label %dec_label_pc_1000af10, label %dec_label_pc_1000aea0

dec_label_pc_1000aea0:                            ; preds = %dec_label_pc_1000ae90, %dec_label_pc_1000ae88
  %v1_1000aef0 = phi i32 [ %v1_1000ae90, %dec_label_pc_1000ae90 ], [ 0, %dec_label_pc_1000ae88 ]
  %v0_1000aed8 = phi i32 [ %v1_1000ae94, %dec_label_pc_1000ae90 ], [ %v0_1000ae70, %dec_label_pc_1000ae88 ]
  %v1_1000aea0 = inttoptr i32 %v0_1000aed8 to i8*
  %v2_1000aea0 = load i8, i8* %v1_1000aea0, align 1
  %v3_1000aea0 = zext i8 %v2_1000aea0 to i32
  %v1_1000aea8 = mul nuw nsw i32 %v3_1000aea0, 2
  %v2_1000aeb0 = add i32 %v1_1000aea8, %v3_1000ae74.pre
  %v3_1000aeb0 = inttoptr i32 %v2_1000aeb0 to i16*
  %v4_1000aeb0 = load i16, i16* %v3_1000aeb0, align 2
  %v5_1000aeb0 = zext i16 %v4_1000aeb0 to i32
  %v1_1000aeb4 = and i32 %v5_1000aeb0, 8
  %v3_1000aeb4 = icmp eq i32 %v1_1000aeb4, 0
  br i1 %v3_1000aeb4, label %dec_label_pc_1000aebc, label %dec_label_pc_1000ae90

dec_label_pc_1000aebc:                            ; preds = %dec_label_pc_1000aea0
  %v2_1000aebc = icmp sgt i32 %v0_1000aeec, 3
  br i1 %v2_1000aebc, label %dec_label_pc_1000aed4, label %dec_label_pc_1000aec4

dec_label_pc_1000aec4:                            ; preds = %dec_label_pc_1000aebc
  %v3_1000aec4 = icmp eq i8 %v2_1000aea0, 46
  br i1 %v3_1000aec4, label %dec_label_pc_1000aecc, label %dec_label_pc_1000af10

dec_label_pc_1000aecc:                            ; preds = %dec_label_pc_1000aec4
  %v1_1000aecc = add i32 %v0_1000aed8, 1
  br label %dec_label_pc_1000aee8

dec_label_pc_1000aed4:                            ; preds = %dec_label_pc_1000aebc
  %v3_1000aed4 = icmp eq i8 %v2_1000aea0, 0
  %v1_1000aed8 = add i32 %v0_1000aed8, 1
  br i1 %v3_1000aed4, label %dec_label_pc_1000aee8, label %dec_label_pc_1000aee0

dec_label_pc_1000aee0:                            ; preds = %dec_label_pc_1000aed4
  %v1_1000aee0 = and i32 %v5_1000aeb0, 32
  %v3_1000aee0 = icmp eq i32 %v1_1000aee0, 0
  br i1 %v3_1000aee0, label %dec_label_pc_1000af10, label %dec_label_pc_1000aee8

dec_label_pc_1000aee8:                            ; preds = %dec_label_pc_1000aee0, %dec_label_pc_1000aed4, %dec_label_pc_1000aecc
  %v0_1000ae703 = phi i32 [ %v1_1000aed8, %dec_label_pc_1000aee0 ], [ %v1_1000aed8, %dec_label_pc_1000aed4 ], [ %v1_1000aecc, %dec_label_pc_1000aecc ]
  %v1_1000aee8 = mul i32 %v0_1000aee8, 256
  %v1_1000aeec = add nuw nsw i32 %v0_1000aeec, 1
  %v2_1000aef0 = or i32 %v1_1000aef0, %v1_1000aee8
  store i32 %v2_1000aef0, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000aeec, 5
  br i1 %tmp10, label %dec_label_pc_1000ae70, label %dec_label_pc_1000aefc

dec_label_pc_1000aefc:                            ; preds = %dec_label_pc_1000aee8
  %v0_1000aefc = load i32, i32* @r4, align 4
  %v3_1000aefc = icmp eq i32 %v0_1000aefc, 0
  %v0_1000af04 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000aefc, i32 %v0_1000af04)
  %v0_1000af08 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000af08 = load i32, i32* @r4, align 4
  %v2_1000af08 = inttoptr i32 %v1_1000af08 to i32*
  store i32 %v0_1000af08, i32* %v2_1000af08, align 4
  ret i32 1

dec_label_pc_1000af10:                            ; preds = %dec_label_pc_1000aec4, %dec_label_pc_1000aee0, %dec_label_pc_1000ae70, %dec_label_pc_1000ae90, %dec_label_pc_1000ae58
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000aef0, { 1, 0 }
  uselistorder i32 %v1_1000aeec, { 1, 0 }
  uselistorder i32 %v0_1000aed8, { 0, 1, 3, 2 }
  uselistorder i32 5, { 21, 3, 22, 23, 39, 24, 25, 40, 41, 2, 1, 0, 42, 4, 5, 43, 26, 27, 28, 29, 30, 31, 32, 44, 6, 8, 45, 7, 46, 11, 47, 10, 48, 9, 33, 49, 12, 14, 50, 34, 51, 13, 35, 52, 15, 36, 53, 16, 37, 54, 18, 55, 17, 38, 56, 20, 57, 19, 58, 59, 60, 61, 62 }
  uselistorder i8 0, { 3, 7, 0, 8, 9, 5, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 6, 21, 22, 23, 24, 25, 26, 27, 28, 2, 29, 30, 31, 32, 4, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i8 46, { 1, 2, 0 }
  uselistorder i32 8, { 119, 3, 133, 134, 56, 38, 39, 57, 58, 59, 60, 61, 62, 137, 138, 11, 135, 136, 12, 123, 122, 120, 121, 104, 105, 106, 124, 125, 126, 127, 128, 129, 4, 40, 41, 42, 5, 139, 6, 63, 64, 65, 66, 67, 68, 28, 29, 43, 30, 31, 44, 32, 33, 45, 46, 7, 8, 9, 47, 48, 50, 51, 34, 52, 15, 53, 55, 54, 49, 69, 70, 16, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 35, 83, 84, 85, 86, 87, 88, 89, 90, 36, 91, 92, 93, 94, 95, 96, 97, 98, 99, 13, 100, 101, 102, 103, 14, 17, 107, 18, 108, 19, 109, 20, 110, 21, 111, 22, 112, 23, 113, 114, 24, 115, 25, 116, 26, 117, 27, 118, 0, 1, 10, 130, 131, 37, 132, 2 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 68, 30, 9, 29, 2, 3, 6, 5, 0, 10, 17, 18, 19, 20, 21, 11, 22, 23, 24, 12, 13, 25, 26, 27, 4, 28, 14, 1, 15, 7, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 8, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 16, 67 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 8, 7, 3, 9, 10, 11, 12 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000af10, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000ae70, { 1, 0 }
}

define i32 @function_1000af18(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000af18:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000af1c = load i32, i32* @lr, align 4
  store i32 %v0_1000af1c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000af28 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000af38 = add i32 %tmp, 4
  store i32 %v1_1000af38, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000af40 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000af40, i32* @r3, align 4
  br i1 %v3_1000af28, label %dec_label_pc_1000af68, label %dec_label_pc_1000af48

dec_label_pc_1000af48:                            ; preds = %dec_label_pc_1000af18
  %v2_1000af48 = load i32, i32* %arg2, align 4
  store i32 %v2_1000af48, i32* %r0.global-to-local, align 4
  store i32 268480340, i32* @lr, align 4
  %v0_1000af50 = call i32 @function_1000ad88()
  %v0_1000af54 = load i32, i32* @r31, align 4
  %v1_1000af54 = add i32 %v0_1000af54, 132
  %v2_1000af54 = inttoptr i32 %v1_1000af54 to i32*
  %v3_1000af54 = load i32, i32* %v2_1000af54, align 4
  store i32 %v3_1000af54, i32* %r0.global-to-local, align 4
  %v1_1000af60 = add i32 %v0_1000af54, 136
  %v2_1000af60 = inttoptr i32 %v1_1000af60 to i32*
  %v3_1000af60 = load i32, i32* %v2_1000af60, align 4
  store i32 %v3_1000af60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000af68

dec_label_pc_1000af68:                            ; preds = %dec_label_pc_1000af18, %dec_label_pc_1000af48
  store i32 268480392, i32* @lr, align 4
  %v0_1000af84 = call i32 @function_1000b17c()
  %v0_1000af88 = load i32, i32* @r30, align 4
  %v3_1000af88 = icmp eq i32 %v0_1000af88, 0
  store i32 %v0_1000af84, i32* @r31, align 4
  br i1 %v3_1000af88, label %dec_label_pc_1000afc4, label %dec_label_pc_1000af98

dec_label_pc_1000af98:                            ; preds = %dec_label_pc_1000af68
  %v1_1000af90 = icmp slt i32 %v0_1000af84, 0
  %v1_1000af98 = add i32 %v0_1000af88, 4
  store i32 %v1_1000af98, i32* @r3, align 4
  %v2_1000af9c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000af9c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000af90, label %dec_label_pc_1000afc4, label %dec_label_pc_1000afa8

dec_label_pc_1000afa8:                            ; preds = %dec_label_pc_1000af98
  %v3_1000afa8 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000afa8, i32* %r0.global-to-local, align 4
  %v2_1000afac = inttoptr i32 %v0_1000af88 to i32*
  store i32 %v3_1000afa8, i32* %v2_1000afac, align 4
  store i32 268480436, i32* @lr, align 4
  %v0_1000afb0 = call i32 @function_1000ad88()
  %v1_1000afbc = load i32, i32* @r30, align 4
  %v2_1000afbc = add i32 %v1_1000afbc, 136
  %v3_1000afbc = inttoptr i32 %v2_1000afbc to i32*
  %v0_1000afc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000afc0 = load i32, i32* @r30, align 4
  %v2_1000afc0 = add i32 %v1_1000afc0, 132
  %v3_1000afc0 = inttoptr i32 %v2_1000afc0 to i32*
  store i32 %v0_1000afc0, i32* %v3_1000afc0, align 4
  %v0_1000afc8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000afc4

dec_label_pc_1000afc4:                            ; preds = %dec_label_pc_1000af98, %dec_label_pc_1000af68, %dec_label_pc_1000afa8
  %v0_1000afc8 = phi i32 [ %v0_1000af84, %dec_label_pc_1000af98 ], [ %v0_1000af84, %dec_label_pc_1000af68 ], [ %v0_1000afc8.pre, %dec_label_pc_1000afa8 ]
  store i32 %v0_1000af1c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000afc8

; uselistorder directives
  uselistorder i32 %v0_1000af84, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000ad88, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 152, 153, 154, 155, 0, 134, 1, 39, 40, 41, 156, 159, 157, 158, 135, 136, 137, 129, 130, 131, 132, 133, 138, 139, 143, 140, 141, 142, 7, 8, 9, 10, 11, 12, 13, 2, 14, 3, 15, 22, 23, 16, 17, 18, 4, 19, 20, 21, 24, 26, 27, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 5, 49, 50, 6, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 145, 146, 144, 147, 148, 149, 150, 151 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* @r31, { 1, 294, 295, 296, 273, 2, 274, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 303, 304, 297, 7, 298, 299, 300, 301, 302, 73, 74, 275, 276, 277, 278, 279, 280, 265, 266, 267, 268, 269, 270, 271, 272, 281, 282, 283, 287, 284, 285, 286, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 101, 3, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 18, 19, 20, 21, 116, 117, 118, 119, 120, 22, 23, 24, 25, 26, 27, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 4, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 121, 122, 123, 124, 125, 126, 127, 128, 129, 0, 5, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 6, 288, 289, 290, 291, 292, 293 }
  uselistorder label %dec_label_pc_1000afc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000af68, { 1, 0 }
}

define i32 @function_1000afdc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b010.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000aff4 = call i32 @function_1000a334()
  %v2_1000affc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000affc, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b01433 = add i32 %v2_1000affc, 124
  %v4_1000b01434 = inttoptr i32 %v3_1000b01433 to i32*
  store i32 0, i32* %v4_1000b01434, align 4
  %v0_1000b01835 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b01836 = add i32 %v0_1000b01835, -1
  store i32 %v1_1000b01836, i32* %r9.global-to-local, align 4
  %v0_1000b01c37 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b01c38 = add i32 %v0_1000b01c37, -1
  store i32 %v1_1000b01c38, i32* %ctr.global-to-local, align 4
  %v2_1000b01c39 = icmp eq i32 %v1_1000b01c38, 0
  br i1 %v2_1000b01c39, label %dec_label_pc_1000b020, label %dec_label_pc_1000b010.dec_label_pc_1000b010_crit_edge

dec_label_pc_1000b010.dec_label_pc_1000b010_crit_edge: ; preds = %dec_label_pc_1000b010.lr.ph, %dec_label_pc_1000b010.dec_label_pc_1000b010_crit_edge
  %v1_1000b01840 = phi i32 [ %v1_1000b018, %dec_label_pc_1000b010.dec_label_pc_1000b010_crit_edge ], [ %v1_1000b01836, %dec_label_pc_1000b010.lr.ph ]
  %v0_1000b014.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b014.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b010 = mul i32 %v1_1000b01840, 4
  %v3_1000b014 = add i32 %v1_1000b010, %v1_1000b014.pre
  %v4_1000b014 = inttoptr i32 %v3_1000b014 to i32*
  store i32 %v0_1000b014.pre, i32* %v4_1000b014, align 4
  %v0_1000b018 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b018 = add i32 %v0_1000b018, -1
  store i32 %v1_1000b018, i32* %r9.global-to-local, align 4
  %v0_1000b01c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b01c = add i32 %v0_1000b01c, -1
  store i32 %v1_1000b01c, i32* %ctr.global-to-local, align 4
  %v2_1000b01c = icmp eq i32 %v1_1000b01c, 0
  br i1 %v2_1000b01c, label %dec_label_pc_1000b020, label %dec_label_pc_1000b010.dec_label_pc_1000b010_crit_edge

dec_label_pc_1000b020:                            ; preds = %dec_label_pc_1000b010.dec_label_pc_1000b010_crit_edge, %dec_label_pc_1000b010.lr.ph
  store i32 %v2_1000affc, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000b028 = call i32 @function_10009788()
  %v3_1000b02c = icmp eq i32 %v0_1000b028, 0
  br i1 %v3_1000b02c, label %dec_label_pc_1000b034, label %dec_label_pc_1000b044

dec_label_pc_1000b034:                            ; preds = %dec_label_pc_1000b020
  store i32 268480580, i32* @lr, align 4
  %v3_1000b040 = call i32 @function_10008bdc(i32 1, i32 %v2_1000affc, i32 0)
  br label %dec_label_pc_1000b044

dec_label_pc_1000b044:                            ; preds = %dec_label_pc_1000b020, %dec_label_pc_1000b034
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b048 = load i32, i32* @global_var_1001ba5c.337, align 4
  %v3_1000b04c = icmp eq i32 %v3_1000b048, 0
  br i1 %v3_1000b04c, label %dec_label_pc_1000b054, label %dec_label_pc_1000b07c

dec_label_pc_1000b054:                            ; preds = %dec_label_pc_1000b044
  store i32 1, i32* @global_var_1001ba5c.337, align 4
  br label %dec_label_pc_1000b05c

dec_label_pc_1000b05c:                            ; preds = %dec_label_pc_1000b0d8, %dec_label_pc_1000b054
  store i32 ptrtoint (i32* @global_var_1001b9c0.335 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b068 = call i32 @function_1000a334()
  store i32 268480628, i32* @lr, align 4
  %v1_1000b070 = call i32 @function_1000b1c4(i32 6)
  %v0_1000b078 = call i32 @function_1000a334()
  %v3_1000b080.pre = load i32, i32* @global_var_1001ba5c.337, align 4
  br label %dec_label_pc_1000b07c

dec_label_pc_1000b07c:                            ; preds = %dec_label_pc_1000b044, %dec_label_pc_1000b05c
  %v0_1000b0f4 = phi i32 [ %v3_1000b048, %dec_label_pc_1000b044 ], [ %v3_1000b080.pre, %dec_label_pc_1000b05c ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b084 = icmp eq i32 %v0_1000b0f4, 1
  br i1 %v3_1000b084, label %dec_label_pc_1000b0c4.lr.ph, label %dec_label_pc_1000b0f4

dec_label_pc_1000b0c4.lr.ph:                      ; preds = %dec_label_pc_1000b07c
  %v2_1000b090 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001ba5c.337, align 4
  store i32 ptrtoint (i32* @global_var_1000b0a4.339 to i32), i32* @lr, align 4
  %v3_1000b0a0 = call i32 @function_10009088(i32 %v2_1000b090, i32 0, i32 140)
  store i32 %v2_1000affc, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000b01433, i32* %r9.global-to-local, align 4
  %v2_1000b0cc25 = add i32 %v2_1000affc, 256
  %v3_1000b0cc26 = inttoptr i32 %v2_1000b0cc25 to i32*
  store i32 -1, i32* %v3_1000b0cc26, align 4
  %v0_1000b0d027 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b0d028 = add i32 %v0_1000b0d027, -1
  store i32 %v1_1000b0d028, i32* %r11.global-to-local, align 4
  %v0_1000b0d429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b0d430 = add i32 %v0_1000b0d429, -1
  store i32 %v1_1000b0d430, i32* %ctr.global-to-local, align 4
  %v2_1000b0d431 = icmp eq i32 %v1_1000b0d430, 0
  br i1 %v2_1000b0d431, label %dec_label_pc_1000b0d8, label %dec_label_pc_1000b0c4.dec_label_pc_1000b0c4_crit_edge

dec_label_pc_1000b0c4.dec_label_pc_1000b0c4_crit_edge: ; preds = %dec_label_pc_1000b0c4.lr.ph, %dec_label_pc_1000b0c4.dec_label_pc_1000b0c4_crit_edge
  %v1_1000b0d032 = phi i32 [ %v1_1000b0d0, %dec_label_pc_1000b0c4.dec_label_pc_1000b0c4_crit_edge ], [ %v1_1000b0d028, %dec_label_pc_1000b0c4.lr.ph ]
  %v1_1000b0c8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b0cc.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b0c4 = mul i32 %v1_1000b0d032, 4
  %v2_1000b0c8 = add i32 %v1_1000b0c4, %v1_1000b0c8.pre
  store i32 %v2_1000b0c8, i32* %r9.global-to-local, align 4
  %v2_1000b0cc = add i32 %v2_1000b0c8, 132
  %v3_1000b0cc = inttoptr i32 %v2_1000b0cc to i32*
  store i32 %v0_1000b0cc.pre, i32* %v3_1000b0cc, align 4
  %v0_1000b0d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b0d0 = add i32 %v0_1000b0d0, -1
  store i32 %v1_1000b0d0, i32* %r11.global-to-local, align 4
  %v0_1000b0d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b0d4 = add i32 %v0_1000b0d4, -1
  store i32 %v1_1000b0d4, i32* %ctr.global-to-local, align 4
  %v2_1000b0d4 = icmp eq i32 %v1_1000b0d4, 0
  br i1 %v2_1000b0d4, label %dec_label_pc_1000b0d8, label %dec_label_pc_1000b0c4.dec_label_pc_1000b0c4_crit_edge

dec_label_pc_1000b0d8:                            ; preds = %dec_label_pc_1000b0c4.dec_label_pc_1000b0c4_crit_edge, %dec_label_pc_1000b0c4.lr.ph
  store i32 268480752, i32* @lr, align 4
  %v4_1000b0ec = call i32 @function_1000af18(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b05c

dec_label_pc_1000b0f4:                            ; preds = %dec_label_pc_1000b07c
  %v3_1000b0f4 = icmp eq i32 %v0_1000b0f4, 2
  br i1 %v3_1000b0f4, label %dec_label_pc_1000b0fc, label %dec_label_pc_1000b108

dec_label_pc_1000b0fc:                            ; preds = %dec_label_pc_1000b0f4
  store i32 3, i32* @global_var_1001ba5c.337, align 4
  br label %dec_label_pc_1000b108

dec_label_pc_1000b108:                            ; preds = %dec_label_pc_1000b0f4, %dec_label_pc_1000b0fc
  %v3_1000b108 = phi i32 [ %v0_1000b0f4, %dec_label_pc_1000b0f4 ], [ 3, %dec_label_pc_1000b0fc ]
  %v1_1000b110 = icmp ne i32 %v3_1000b108, 3
  call void @__pseudo_cond_branch(i1 %v1_1000b110, i32 268480804)
  store i32 4, i32* @global_var_1001ba5c.337, align 4
  %v1_1000b120 = call i32 @function_1000a6d4(i32 127)
  ret i32 %v1_1000b120

; uselistorder directives
  uselistorder i32 %v1_1000b0d4, { 1, 0 }
  uselistorder i32 %v1_1000b0d0, { 1, 0 }
  uselistorder i32 %v1_1000b01c, { 1, 0 }
  uselistorder i32 %v1_1000b018, { 1, 0 }
  uselistorder i32 %v2_1000affc, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000a6d4, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 5, 30, 91, 94, 95, 96, 97, 89, 92, 93, 44, 99, 98, 7, 100, 101, 102, 64, 65, 1, 6, 31, 32, 45, 46, 47, 48, 2, 50, 51, 52, 53, 54, 8, 55, 33, 56, 9, 49, 86, 34, 57, 58, 60, 61, 59, 62, 63, 3, 66, 67, 11, 35, 4, 10, 68, 13, 69, 36, 12, 70, 71, 72, 14, 37, 15, 73, 74, 75, 16, 38, 17, 76, 77, 19, 39, 18, 78, 79, 40, 80, 20, 21, 22, 81, 82, 41, 83, 23, 24, 25, 84, 85, 26, 42, 27, 87, 88, 28, 43, 29, 90 }
  uselistorder i32 (i32, i32*, i32)* @function_1000af18, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 70, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 76, 77, 78, 12, 71, 13, 80, 14, 15, 16, 17, 18, 81, 19, 74, 82, 75, 83, 79, 20, 21, 22, 23, 24, 25, 26, 84, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 72, 43, 44, 45, 46, 47, 48, 49, 50, 73, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i32 (i32, i32, i32)* @function_10009088, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 202, 38, 0, 1, 54, 55, 203, 56, 204, 57, 205, 28, 2, 3, 4, 39, 103, 115, 206, 104, 29, 58, 40, 59, 31, 30, 32, 60, 61, 105, 62, 63, 106, 107, 64, 108, 5, 6, 109, 110, 36, 111, 41, 112, 65, 189, 68, 69, 67, 66, 42, 7, 8, 9, 113, 114, 70, 43, 71, 72, 74, 73, 75, 45, 44, 76, 77, 78, 79, 80, 33, 37, 116, 190, 10, 34, 191, 11, 117, 118, 119, 120, 121, 122, 123, 81, 124, 125, 46, 126, 127, 128, 129, 130, 83, 131, 82, 132, 133, 134, 135, 136, 137, 138, 139, 84, 140, 47, 85, 86, 141, 142, 87, 88, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 12, 13, 14, 15, 16, 17, 89, 153, 48, 154, 155, 156, 157, 158, 18, 19, 20, 21, 22, 23, 90, 159, 49, 160, 161, 162, 163, 164, 91, 166, 165, 24, 25, 92, 167, 50, 168, 169, 170, 171, 172, 93, 174, 173, 26, 27, 94, 175, 51, 95, 96, 176, 177, 97, 98, 178, 179, 180, 181, 182, 183, 185, 186, 187, 184, 99, 188, 52, 192, 193, 194, 100, 101, 196, 197, 198, 195, 102, 199, 53, 200, 35, 201 }
  uselistorder i32* @global_var_1001ba5c.337, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 38, 39, 0, 40, 2, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 4, 34, 5, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32)* @function_10008bdc, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_10009788, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 73, 74, 75, 70, 71, 76, 32, 1, 33, 8, 34, 83, 82, 4, 5, 77, 79, 80, 69, 78, 9, 6, 72, 10, 11, 12, 7, 35, 36, 81, 13, 14, 15, 37, 19, 20, 21, 16, 17, 18, 3, 63, 64, 65, 66, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 0, 2, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68 }
  uselistorder i32 6, { 12, 13, 61, 1, 14, 15, 26, 16, 17, 27, 18, 19, 28, 29, 30, 2, 31, 0, 32, 33, 34, 35, 3, 36, 37, 38, 4, 39, 40, 41, 42, 5, 6, 43, 44, 45, 20, 7, 46, 47, 21, 8, 48, 22, 49, 23, 9, 50, 51, 52, 53, 24, 10, 54, 55, 56, 57, 58, 25, 11, 59, 60 }
  uselistorder i32 4, { 126, 0, 1, 356, 357, 358, 359, 360, 66, 67, 361, 362, 127, 363, 364, 2, 188, 189, 147, 148, 190, 191, 193, 365, 372, 3, 4, 5, 6, 7, 335, 337, 336, 333, 334, 304, 305, 306, 307, 338, 339, 340, 341, 342, 343, 344, 345, 346, 8, 149, 9, 75, 150, 151, 366, 367, 368, 128, 369, 370, 371, 10, 192, 129, 11, 194, 195, 196, 197, 198, 130, 131, 152, 132, 153, 154, 155, 78, 74, 156, 157, 158, 159, 12, 161, 162, 168, 169, 160, 170, 69, 171, 68, 76, 173, 77, 174, 175, 176, 177, 178, 172, 163, 164, 165, 166, 167, 291, 179, 133, 80, 79, 81, 180, 181, 182, 70, 183, 71, 184, 185, 186, 187, 72, 199, 200, 201, 13, 202, 203, 204, 205, 86, 206, 207, 14, 15, 85, 208, 209, 16, 82, 84, 83, 210, 211, 17, 212, 213, 91, 214, 18, 19, 215, 90, 216, 87, 217, 89, 88, 218, 219, 220, 97, 20, 21, 221, 222, 22, 223, 224, 225, 96, 23, 24, 92, 226, 93, 95, 94, 227, 228, 229, 230, 231, 232, 134, 99, 98, 233, 234, 25, 235, 236, 237, 100, 238, 239, 26, 27, 101, 240, 102, 104, 103, 241, 242, 28, 243, 244, 109, 245, 246, 29, 30, 108, 247, 105, 107, 106, 248, 249, 250, 251, 31, 252, 253, 254, 255, 135, 256, 32, 257, 258, 33, 259, 111, 260, 110, 136, 261, 262, 263, 264, 34, 265, 266, 267, 268, 137, 269, 35, 270, 271, 36, 272, 113, 273, 112, 138, 274, 275, 276, 277, 278, 279, 139, 115, 114, 280, 281, 282, 283, 37, 285, 286, 140, 287, 288, 289, 120, 290, 38, 39, 141, 284, 119, 116, 118, 117, 292, 293, 294, 295, 296, 142, 143, 40, 298, 299, 144, 300, 301, 302, 125, 303, 41, 42, 145, 297, 124, 121, 123, 122, 43, 308, 309, 44, 45, 310, 311, 46, 47, 312, 313, 48, 49, 314, 315, 50, 51, 316, 317, 52, 53, 318, 319, 54, 320, 55, 321, 322, 56, 57, 323, 324, 58, 59, 325, 326, 60, 61, 327, 328, 62, 63, 329, 330, 64, 331, 332, 347, 348, 349, 350, 351, 352, 73, 353, 65, 354, 355, 146 }
  uselistorder i32 32, { 16, 17, 44, 33, 34, 24, 25, 12, 13, 31, 32, 26, 0, 1, 2, 14, 35, 15, 36, 3, 4, 5, 6, 19, 27, 20, 28, 18, 7, 8, 9, 10, 11, 21, 22, 29, 30, 23, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 31, { 1, 2, 29, 30, 18, 31, 32, 3, 4, 0, 5, 33, 34, 19, 20, 21, 22, 25, 26, 23, 24, 9, 10, 11, 12, 13, 14, 15, 16, 7, 8, 6, 17, 27, 28 }
  uselistorder i32 ()* @function_1000a334, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000b108, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0c4.dec_label_pc_1000b0c4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b07c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b044, { 1, 0 }
  uselistorder label %dec_label_pc_1000b010.dec_label_pc_1000b010_crit_edge, { 1, 0 }
}

define i32 @function_1000b12c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b12c:
  %v1_1000b12c = add i32 %arg1, 28
  %v2_1000b12c = inttoptr i32 %v1_1000b12c to i32*
  %v3_1000b12c = load i32, i32* %v2_1000b12c, align 4
  store i32 %v3_1000b12c, i32* @global_var_1001ba60.340, align 4
  %v1_1000b13c = add i32 %arg1, 44
  %v2_1000b13c = inttoptr i32 %v1_1000b13c to i32*
  %v3_1000b13c = load i32, i32* %v2_1000b13c, align 4
  store i32 %v3_1000b13c, i32* @global_var_1001ba64.341, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 40, 11, 12, 2, 3, 13, 10, 39, 4, 6, 7, 8, 9, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 1, 38 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000b148(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b148:
  store i32 %arg1, i32* @global_var_1001ba68.334, align 4
  %v0_1000b170 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000b170)
  %v1_1000b178 = call i32 @function_1000b1f4(i32 12)
  ret i32 %v1_1000b178

; uselistorder directives
  uselistorder i32 12, { 16, 44, 45, 24, 25, 46, 47, 48, 49, 103, 104, 105, 106, 6, 101, 107, 0, 1, 7, 102, 5, 17, 18, 8, 26, 50, 51, 19, 52, 53, 54, 20, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 9, 39, 22, 23, 40, 10, 41, 43, 42, 34, 96, 55, 11, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 12, 68, 69, 70, 71, 72, 73, 74, 13, 75, 76, 77, 78, 79, 80, 81, 82, 83, 14, 84, 85, 86, 87, 88, 89, 90, 91, 92, 15, 93, 94, 95, 97, 98, 99, 100, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001ba68.334, { 1, 0, 2 }
}

define i32 @function_1000b17c() local_unnamed_addr {
dec_label_pc_1000b17c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b194 = call i32 @__asm_mfcr()
  %v1_1000b198 = and i32 %v0_1000b194, 268435456
  %v3_1000b198 = icmp eq i32 %v1_1000b198, 0
  store i32 %v0_1000b194, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b198, label %dec_label_pc_1000b1b0, label %dec_label_pc_1000b1a4

dec_label_pc_1000b1a4:                            ; preds = %dec_label_pc_1000b17c
  %v0_1000b1a4 = call i32 @function_10008fa0()
  %v0_1000b1a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b1a8 = inttoptr i32 %v0_1000b1a4 to i32*
  store i32 %v0_1000b1a8, i32* %v2_1000b1a8, align 4
  br label %dec_label_pc_1000b1b0

dec_label_pc_1000b1b0:                            ; preds = %dec_label_pc_1000b17c, %dec_label_pc_1000b1a4
  %v0_1000b1c0 = phi i32 [ %v0_1000b194, %dec_label_pc_1000b17c ], [ -1, %dec_label_pc_1000b1a4 ]
  ret i32 %v0_1000b1c0

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 37, 51, 27, 28, 35, 36, 29, 52, 41, 39, 42, 40, 38, 53, 54, 30, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 47, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 46, 40, 25, 3, 45, 44, 36, 35, 43, 2, 14, 16, 13, 15, 20, 1, 0, 42, 41, 34, 33, 32, 31, 30, 29, 28, 27, 26, 24, 23, 22, 21, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000b1b0, { 1, 0 }
}

define i32 @function_1000b1c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b1c4:
  %v0_1000b1c4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268480988, i32* @lr, align 4
  %v0_1000b1d8 = call i32 @function_10008914()
  %v0_1000b1e0 = load i32, i32* @r29, align 4
  store i32 %v0_1000b1c4, i32* @lr, align 4
  %v2_1000b1f0 = call i32 @function_100089a4(i32 %v0_1000b1d8, i32 %v0_1000b1e0)
  ret i32 %v2_1000b1f0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100089a4, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10008914, { 0, 3, 2, 1 }
}

define i32 @function_1000b1f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b1f4:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000b208 = call i32 @function_10008fa0()
  %v0_1000b20c = load i32, i32* @r29, align 4
  %v2_1000b20c = inttoptr i32 %v0_1000b208 to i32*
  store i32 %v0_1000b20c, i32* %v2_1000b20c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10008fa0, { 23, 15, 52, 14, 34, 13, 12, 11, 10, 33, 32, 31, 9, 8, 5, 7, 6, 37, 36, 21, 22, 51, 50, 49, 48, 30, 29, 28, 47, 35, 26, 1, 0, 46, 45, 27, 25, 44, 4, 17, 19, 16, 18, 24, 3, 2, 43, 42, 41, 40, 39, 38, 20 }
  uselistorder i32* @r29, { 289, 290, 312, 313, 314, 12, 13, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 315, 316, 317, 318, 319, 1, 60, 291, 292, 293, 294, 288, 295, 2, 296, 297, 298, 299, 300, 301, 14, 15, 16, 81, 82, 83, 84, 85, 86, 87, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 47, 38, 39, 40, 41, 42, 43, 48, 0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 3, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 4, 173, 5, 174, 6, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 7, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 8, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 9, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 10, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 303, 302, 304, 305, 306, 11, 307, 308, 309, 310, 311 }
}

define i32 @function_1000b228(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b228:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001b878.322 to i32), i32* %r31.global-to-local, align 4
  %v3_1000b244 = load i32, i32* @global_var_1001b878.322, align 4
  %v3_1000b248 = icmp eq i32 %v3_1000b244, -1
  br i1 %v3_1000b248, label %dec_label_pc_1000b264, label %dec_label_pc_1000b250

dec_label_pc_1000b250:                            ; preds = %dec_label_pc_1000b228, %dec_label_pc_1000b250
  %v0_1000b250 = phi i32 [ %v3_1000b258, %dec_label_pc_1000b250 ], [ %v3_1000b244, %dec_label_pc_1000b228 ]
  call void @__pseudo_call(i32 %v0_1000b250)
  %v0_1000b258 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b258 = add i32 %v0_1000b258, -4
  %v2_1000b258 = inttoptr i32 %v1_1000b258 to i32*
  %v3_1000b258 = load i32, i32* %v2_1000b258, align 4
  store i32 %v1_1000b258, i32* %r31.global-to-local, align 4
  %v3_1000b25c = icmp eq i32 %v3_1000b258, -1
  br i1 %v3_1000b25c, label %dec_label_pc_1000b264, label %dec_label_pc_1000b250

dec_label_pc_1000b264:                            ; preds = %dec_label_pc_1000b250, %dec_label_pc_1000b228
  %v0_1000b274 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b274

; uselistorder directives
  uselistorder i32 %v3_1000b258, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 134, 135, 0, 36, 89, 255, 10, 11, 12, 256, 90, 257, 8, 9, 91, 92, 13, 93, 37, 38, 248, 76, 39, 191, 40, 41, 42, 43, 44, 192, 193, 194, 195, 196, 201, 45, 268, 266, 46, 258, 259, 77, 94, 260, 16, 17, 95, 265, 14, 15, 178, 3, 78, 249, 250, 32, 136, 264, 261, 47, 137, 96, 138, 18, 19, 139, 140, 141, 35, 48, 142, 143, 74, 97, 98, 99, 100, 197, 198, 20, 21, 22, 101, 199, 200, 102, 79, 75, 202, 203, 49, 50, 51, 52, 262, 263, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 267, 66, 144, 103, 23, 204, 205, 104, 1, 105, 106, 145, 67, 68, 107, 2, 108, 24, 109, 69, 110, 25, 206, 80, 146, 111, 81, 147, 148, 149, 112, 150, 151, 70, 154, 113, 27, 114, 26, 115, 155, 116, 71, 156, 157, 158, 117, 118, 152, 153, 159, 82, 160, 161, 84, 162, 163, 83, 164, 165, 166, 85, 167, 168, 169, 72, 170, 171, 119, 28, 120, 29, 172, 173, 174, 175, 73, 176, 177, 121, 122, 123, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 33, 34, 207, 208, 209, 210, 211, 124, 125, 126, 212, 213, 127, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 232, 30, 234, 235, 237, 236, 31, 238, 239, 240, 241, 4, 242, 5, 243, 244, 6, 245, 7, 246, 247, 128, 129, 251, 130, 252, 131, 132, 253, 254, 133, 86, 87, 88 }
  uselistorder i32 1, { 222, 496, 964, 606, 607, 678, 677, 427, 423, 426, 425, 422, 424, 681, 680, 679, 30, 0, 950, 951, 952, 953, 530, 24, 965, 966, 967, 968, 501, 500, 499, 25, 26, 28, 29, 27, 139, 469, 682, 119, 120, 429, 223, 497, 498, 684, 683, 480, 479, 481, 477, 476, 478, 475, 482, 608, 350, 351, 353, 352, 685, 349, 466, 609, 686, 19, 17, 16, 18, 610, 552, 972, 969, 690, 689, 688, 687, 114, 118, 115, 113, 117, 116, 611, 971, 691, 823, 824, 825, 605, 826, 531, 20, 21, 23, 22, 459, 457, 458, 8, 9, 11, 12, 10, 126, 513, 692, 488, 970, 502, 612, 613, 695, 694, 693, 393, 390, 391, 392, 389, 394, 388, 553, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 790, 710, 709, 470, 471, 712, 711, 14, 13, 15, 860, 504, 56, 55, 54, 973, 974, 226, 224, 227, 225, 107, 108, 106, 109, 110, 111, 713, 614, 714, 58, 57, 59, 615, 715, 61, 62, 554, 716, 60, 228, 474, 486, 428, 97, 88, 140, 387, 87, 717, 386, 464, 489, 491, 490, 487, 718, 468, 719, 467, 791, 720, 67, 835, 836, 505, 506, 515, 837, 838, 514, 839, 723, 722, 721, 46, 42, 43, 47, 41, 45, 48, 44, 1, 828, 827, 829, 830, 861, 862, 503, 863, 864, 725, 724, 840, 841, 842, 616, 843, 37, 38, 39, 40, 947, 948, 533, 532, 949, 121, 787, 789, 788, 617, 844, 507, 484, 483, 485, 954, 332, 331, 845, 846, 508, 509, 516, 847, 31, 32, 33, 34, 865, 69, 68, 70, 71, 72, 73, 74, 75, 886, 122, 125, 124, 123, 866, 63, 66, 65, 64, 35, 36, 517, 555, 792, 793, 618, 794, 795, 619, 796, 797, 799, 803, 804, 800, 801, 802, 805, 620, 806, 621, 622, 807, 623, 624, 808, 814, 815, 540, 672, 733, 732, 731, 730, 729, 728, 727, 726, 371, 367, 366, 365, 362, 354, 370, 359, 358, 356, 355, 357, 363, 364, 369, 368, 361, 360, 809, 810, 625, 811, 812, 626, 813, 85, 76, 79, 81, 83, 82, 84, 78, 77, 86, 80, 798, 627, 472, 473, 931, 628, 518, 495, 493, 494, 492, 867, 734, 53, 51, 52, 630, 557, 816, 556, 817, 629, 631, 819, 820, 818, 534, 821, 632, 633, 634, 635, 636, 637, 822, 541, 746, 745, 744, 743, 675, 742, 741, 740, 739, 738, 737, 736, 735, 95, 92, 93, 5, 6, 91, 7, 89, 90, 94, 96, 638, 639, 558, 640, 560, 559, 535, 748, 747, 641, 539, 831, 643, 642, 832, 833, 834, 510, 644, 645, 646, 647, 648, 649, 650, 651, 652, 542, 757, 756, 755, 754, 753, 752, 751, 750, 749, 100, 103, 102, 98, 104, 99, 101, 105, 848, 653, 849, 850, 851, 852, 853, 3, 536, 854, 855, 2, 856, 857, 858, 859, 760, 759, 673, 674, 758, 348, 347, 932, 935, 933, 537, 934, 112, 936, 937, 938, 654, 655, 868, 869, 870, 871, 872, 873, 876, 874, 875, 877, 878, 879, 656, 880, 519, 543, 881, 882, 883, 538, 884, 885, 763, 762, 761, 151, 141, 149, 164, 165, 159, 166, 167, 168, 169, 170, 156, 150, 157, 158, 145, 146, 160, 161, 162, 153, 152, 163, 154, 155, 148, 147, 144, 143, 142, 887, 888, 889, 657, 520, 544, 890, 765, 764, 307, 305, 316, 324, 325, 318, 326, 320, 311, 329, 321, 317, 327, 328, 319, 322, 313, 323, 310, 309, 308, 304, 306, 330, 315, 314, 312, 891, 892, 658, 893, 894, 895, 659, 660, 545, 896, 561, 562, 766, 446, 441, 434, 443, 452, 430, 431, 455, 445, 447, 448, 450, 439, 442, 453, 454, 440, 444, 449, 451, 436, 435, 456, 438, 437, 432, 433, 897, 565, 898, 899, 563, 900, 661, 662, 564, 767, 383, 374, 372, 384, 382, 385, 376, 379, 380, 381, 375, 378, 377, 373, 901, 902, 903, 904, 663, 521, 546, 905, 566, 567, 768, 408, 403, 397, 406, 417, 399, 398, 420, 404, 418, 419, 414, 415, 416, 412, 413, 409, 410, 407, 405, 411, 396, 421, 402, 401, 400, 395, 906, 907, 908, 664, 522, 547, 909, 568, 569, 570, 769, 238, 235, 239, 249, 229, 231, 241, 240, 252, 242, 236, 250, 251, 246, 247, 248, 244, 237, 245, 243, 253, 234, 233, 232, 230, 910, 911, 912, 913, 665, 511, 523, 548, 914, 571, 572, 573, 574, 575, 773, 772, 771, 770, 289, 284, 293, 299, 282, 286, 296, 287, 297, 294, 298, 300, 301, 302, 290, 285, 283, 303, 295, 288, 292, 291, 281, 915, 916, 917, 918, 666, 512, 524, 549, 919, 576, 577, 578, 579, 580, 581, 582, 583, 584, 777, 776, 775, 774, 207, 202, 211, 217, 200, 204, 214, 205, 215, 212, 216, 218, 219, 220, 208, 203, 201, 221, 213, 206, 210, 209, 199, 920, 587, 921, 922, 585, 923, 667, 668, 586, 778, 346, 344, 341, 339, 338, 343, 345, 336, 340, 337, 333, 335, 334, 342, 924, 925, 926, 928, 929, 927, 525, 550, 930, 588, 589, 590, 779, 198, 173, 183, 195, 196, 172, 186, 192, 188, 187, 182, 174, 194, 190, 191, 178, 179, 185, 184, 189, 175, 193, 197, 181, 180, 176, 177, 939, 940, 941, 943, 944, 942, 526, 551, 945, 591, 592, 593, 784, 783, 782, 781, 780, 269, 256, 267, 276, 255, 254, 271, 272, 279, 274, 265, 257, 268, 273, 277, 278, 261, 262, 270, 275, 258, 280, 266, 264, 263, 259, 260, 4, 594, 595, 596, 597, 598, 599, 600, 601, 602, 946, 603, 604, 462, 461, 460, 463, 527, 465, 528, 49, 955, 669, 959, 670, 960, 956, 957, 958, 961, 962, 130, 134, 138, 127, 137, 128, 133, 132, 131, 129, 136, 135, 963, 671, 529, 50, 786, 785, 171, 676 }
  uselistorder label %dec_label_pc_1000b250, { 1, 0 }
}

define i32 @function_1000b278() local_unnamed_addr {
dec_label_pc_1000b278:
  %v0_1000b290 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b290

; uselistorder directives
  uselistorder i32* @r3, { 22, 11, 176, 177, 178, 12, 19, 179, 100, 0, 101, 31, 186, 18, 20, 3, 25, 180, 182, 30, 183, 184, 185, 167, 29, 168, 9, 16, 170, 172, 171, 181, 32, 150, 33, 34, 102, 26, 14, 103, 104, 105, 106, 107, 108, 109, 110, 111, 13, 28, 4, 15, 112, 1, 2, 5, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 70, 6, 71, 72, 17, 157, 158, 159, 10, 160, 161, 7, 79, 80, 81, 82, 83, 84, 85, 86, 24, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 162, 163, 8, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 164, 165, 166, 169, 173, 174, 175, 23, 21, 27 }
}

define i32 @function_1000b294() local_unnamed_addr {
entry:
  store i32 268481188, i32* @lr, align 4
  %v0_1000b2a0 = call i32 @function_100000b8()
  ret i32 %v0_1000b2a0

; uselistorder directives
  uselistorder i32 0, { 828, 206, 829, 39, 207, 145, 830, 208, 831, 832, 37, 38, 833, 834, 835, 0, 771, 772, 773, 78, 77, 774, 836, 837, 838, 40, 839, 840, 841, 842, 532, 209, 210, 397, 778, 779, 146, 780, 843, 20, 533, 534, 844, 845, 846, 847, 211, 535, 536, 537, 538, 539, 540, 541, 79, 549, 550, 848, 849, 212, 867, 868, 213, 873, 875, 139, 876, 214, 874, 1, 850, 851, 80, 852, 853, 215, 147, 216, 854, 855, 43, 44, 856, 857, 858, 217, 861, 862, 863, 41, 42, 864, 865, 866, 505, 506, 507, 508, 509, 81, 510, 511, 512, 205, 513, 82, 783, 785, 24, 786, 45, 787, 784, 781, 782, 2, 755, 751, 752, 753, 754, 140, 3, 790, 788, 789, 141, 791, 792, 756, 757, 758, 759, 760, 218, 761, 762, 793, 794, 219, 795, 148, 796, 805, 806, 83, 797, 798, 799, 800, 801, 802, 803, 804, 4, 5, 389, 398, 399, 400, 46, 47, 401, 6, 220, 775, 402, 403, 404, 405, 406, 407, 408, 409, 221, 410, 877, 878, 879, 880, 881, 882, 883, 884, 542, 543, 48, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 411, 514, 694, 859, 860, 412, 413, 563, 595, 414, 869, 84, 870, 826, 821, 827, 822, 731, 871, 872, 415, 416, 564, 565, 566, 49, 85, 567, 568, 65, 569, 571, 570, 144, 515, 516, 7, 69, 25, 70, 26, 596, 71, 597, 27, 28, 598, 72, 29, 86, 222, 223, 21, 22, 572, 764, 765, 766, 767, 90, 88, 87, 768, 89, 92, 91, 396, 93, 573, 50, 574, 575, 576, 807, 94, 808, 809, 577, 578, 51, 95, 579, 8, 96, 623, 97, 599, 417, 418, 100, 419, 420, 421, 422, 423, 137, 424, 224, 425, 426, 429, 427, 99, 428, 225, 430, 431, 432, 433, 434, 101, 435, 436, 152, 437, 438, 390, 73, 440, 441, 442, 443, 444, 445, 54, 55, 446, 447, 52, 53, 448, 449, 450, 451, 452, 453, 151, 149, 458, 459, 226, 460, 454, 455, 456, 457, 461, 23, 391, 392, 462, 463, 98, 464, 465, 466, 471, 472, 473, 474, 150, 475, 476, 102, 477, 478, 479, 480, 481, 482, 18, 467, 103, 468, 469, 104, 470, 227, 439, 600, 483, 484, 485, 486, 138, 487, 488, 228, 489, 490, 491, 492, 493, 153, 494, 495, 56, 57, 496, 497, 498, 58, 59, 499, 500, 501, 9, 502, 229, 230, 231, 503, 232, 17, 16, 15, 14, 13, 12, 154, 504, 518, 106, 517, 105, 519, 520, 108, 521, 107, 522, 523, 110, 524, 109, 525, 10, 233, 234, 19, 528, 526, 527, 142, 529, 530, 155, 235, 236, 237, 238, 531, 30, 580, 591, 581, 11, 582, 583, 584, 585, 143, 586, 587, 588, 589, 590, 31, 111, 64, 63, 112, 592, 60, 241, 593, 239, 240, 156, 594, 75, 732, 733, 74, 734, 113, 735, 76, 736, 114, 601, 602, 242, 603, 604, 116, 115, 605, 243, 606, 607, 608, 609, 610, 611, 612, 117, 613, 614, 615, 157, 616, 617, 244, 618, 66, 67, 619, 118, 620, 621, 622, 245, 158, 159, 160, 161, 119, 624, 246, 625, 626, 627, 628, 247, 629, 630, 631, 163, 162, 632, 248, 633, 634, 635, 636, 637, 120, 638, 249, 639, 640, 641, 642, 643, 250, 644, 645, 646, 164, 165, 166, 167, 124, 123, 647, 648, 32, 122, 121, 649, 650, 651, 33, 652, 653, 654, 655, 125, 168, 656, 126, 657, 251, 658, 659, 660, 252, 661, 662, 663, 664, 253, 665, 666, 667, 169, 170, 171, 172, 173, 174, 175, 176, 668, 669, 127, 670, 671, 254, 672, 673, 674, 675, 676, 677, 255, 678, 679, 680, 185, 177, 178, 179, 180, 181, 182, 183, 184, 128, 681, 682, 256, 683, 684, 685, 686, 257, 689, 690, 61, 688, 687, 258, 691, 692, 693, 186, 187, 188, 189, 190, 191, 192, 129, 695, 696, 259, 697, 698, 699, 700, 260, 703, 704, 62, 702, 701, 261, 705, 706, 707, 193, 194, 195, 133, 132, 708, 709, 262, 34, 131, 130, 710, 711, 712, 263, 35, 713, 714, 715, 716, 134, 196, 717, 135, 718, 264, 719, 720, 721, 722, 723, 724, 725, 726, 727, 265, 728, 729, 730, 197, 198, 199, 200, 737, 136, 738, 266, 739, 740, 741, 742, 743, 744, 745, 746, 747, 267, 748, 749, 750, 201, 202, 203, 204, 763, 769, 770, 776, 777, 810, 68, 811, 812, 268, 813, 814, 815, 816, 817, 818, 819, 820, 823, 36, 824, 825, 885, 886, 887, 393, 394, 395, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905 }
  uselistorder i32* @lr, { 8, 701, 702, 703, 672, 704, 705, 706, 707, 708, 709, 710, 711, 669, 10, 712, 320, 321, 9, 673, 674, 322, 323, 324, 325, 326, 327, 721, 722, 726, 727, 728, 729, 730, 731, 732, 734, 723, 725, 713, 714, 715, 716, 717, 718, 719, 720, 675, 677, 676, 638, 639, 640, 641, 642, 643, 678, 679, 680, 681, 685, 682, 683, 684, 11, 12, 614, 615, 616, 578, 547, 13, 249, 14, 15, 579, 580, 16, 670, 17, 18, 19, 20, 21, 22, 23, 733, 24, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 724, 25, 26, 27, 28, 29, 30, 342, 667, 343, 686, 389, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 422, 390, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 132, 133, 134, 135, 136, 137, 138, 139, 107, 108, 109, 110, 111, 112, 391, 392, 393, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 0, 264, 265, 266, 267, 268, 269, 270, 287, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 4, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 5, 373, 374, 375, 376, 377, 378, 1, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 456, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 528, 521, 522, 523, 524, 525, 526, 527, 2, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 559, 552, 553, 554, 555, 556, 557, 558, 3, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 583, 584, 585, 582, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 671, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
